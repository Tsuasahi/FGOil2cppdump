
	// Properties
	public List<QuestInformationListViewObject> ObjectList { get; }
	public List<QuestInformationListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x1205470 Offset: 0x1205470 VA: 0x1205470
	public void .ctor() { }

	// RVA: 0x1205478 Offset: 0x1205478 VA: 0x1205478
	protected void add_callbackFunc(QuestInformationListViewManager.CallbackFunc value) { }

	// RVA: 0x1205568 Offset: 0x1205568 VA: 0x1205568
	protected void remove_callbackFunc(QuestInformationListViewManager.CallbackFunc value) { }

	// RVA: 0x1205658 Offset: 0x1205658 VA: 0x1205658
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x1205748 Offset: 0x1205748 VA: 0x1205748
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x1205838 Offset: 0x1205838 VA: 0x1205838
	public List<QuestInformationListViewObject> get_ObjectList() { }

	// RVA: 0x1205A04 Offset: 0x1205A04 VA: 0x1205A04
	public List<QuestInformationListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1200C78 Offset: 0x1200C78 VA: 0x1200C78
	public void DestroyList() { }

	// RVA: 0x12015C4 Offset: 0x12015C4 VA: 0x12015C4
	public void CreateRewardList(QuestInformationListViewManager.Kind kind, int[] items, int[] svts) { }

	// RVA: 0x1205CE4 Offset: 0x1205CE4 VA: 0x1205CE4
	private void SplitSvtsWithCombineMaterial(int[] svts, out int[] withoutCM, out int[] combineMaterials) { }

	// RVA: 0x1205FDC Offset: 0x1205FDC VA: 0x1205FDC
	private void SplitItemsWithQP(int[] itms, out int[] withoutQP, out int[] qps) { }

	// RVA: 0x1206360 Offset: 0x1206360 VA: 0x1206360
	private int CreateRewardItemList(int[] items, int sum) { }

	// RVA: 0x1206248 Offset: 0x1206248 VA: 0x1206248
	private int CreateRewardSvtList(int[] svts, int sum) { }

	// RVA: 0x120169C Offset: 0x120169C VA: 0x120169C
	public void CreateEmptyRewardList(QuestInformationListViewManager.Kind kind, int itemCnt, int svtCnt) { }

	// RVA: 0x120182C Offset: 0x120182C VA: 0x120182C
	public void CreateEnemyList(QuestInformationListViewManager.Kind kind, int questId, int[] enemies) { }

	// RVA: 0x1206480 Offset: 0x1206480 VA: 0x1206480
	private void CreateEnemyList(int questId, int[] enemies, ViewEnemyEntity[] veEnts) { }

	// RVA: 0x1206654 Offset: 0x1206654 VA: 0x1206654 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1206760 Offset: 0x1206760 VA: 0x1206760
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x120158C Offset: 0x120158C VA: 0x120158C
	public bool IsListBuilding() { }

	// RVA: 0x1201F70 Offset: 0x1201F70 VA: 0x1201F70
	public void SetResetReady(bool onOff) { }

	// RVA: 0x1202034 Offset: 0x1202034 VA: 0x1202034
	public bool IsTouchable() { }

	// RVA: 0x1204DD0 Offset: 0x1204DD0 VA: 0x1204DD0
	public Material NewChocoMaterialForTexture() { }

	// RVA: 0x1204C70 Offset: 0x1204C70 VA: 0x1204C70
	public Material NewChocoMaterialForSprite() { }

	// RVA: 0x1206B00 Offset: 0x1206B00 VA: 0x1206B00
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3BF0 Offset: 0xCD3BF0 VA: 0xCD3BF0
	// RVA: 0x1206B74 Offset: 0x1206B74 VA: 0x1206B74
	private static void <OnClickListView>m__0(bool isDecide) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3C00 Offset: 0xCD3C00 VA: 0xCD3C00
	// RVA: 0x1206C00 Offset: 0x1206C00 VA: 0x1206C00
	private static void <OnClickListView>m__1(bool isDecide) { }
}

// Namespace: 
public enum QuestInformationListViewManager.Kind // TypeDefIndex: 11188
{
	// Fields
	public int value__; // 0x0
	public const QuestInformationListViewManager.Kind NORMAL = 0;
}

// Namespace: 
public enum QuestInformationListViewManager.InitMode // TypeDefIndex: 11189
{
	// Fields
	public int value__; // 0x0
	public const QuestInformationListViewManager.InitMode NONE = 0;
	public const QuestInformationListViewManager.InitMode INPUT = 1;
}

// Namespace: 
public sealed class QuestInformationListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 11190
{
	// Methods

	// RVA: 0x1206D5C Offset: 0x1206D5C VA: 0x1206D5C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1206D6C Offset: 0x1206D6C VA: 0x1206D6C Slot: 11
	public virtual void Invoke(int result) { }

	// RVA: 0x1206F98 Offset: 0x1206F98 VA: 0x1206F98 Slot: 12
	public virtual IAsyncResult BeginInvoke(int result, AsyncCallback callback, object object) { }

	// RVA: 0x1207024 Offset: 0x1207024 VA: 0x1207024 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45C64 Offset: 0xC45C64 VA: 0xC45C64
private sealed class QuestInformationListViewManager.<CreateEnemyList>c__AnonStorey0 // TypeDefIndex: 11191
{
	// Fields
	internal int questId; // 0x10
	internal int[] enemies; // 0x18
	internal ViewEnemyEntity[] veEnts; // 0x20
	internal QuestInformationListViewManager $this; // 0x28

	// Methods

	// RVA: 0x1206478 Offset: 0x1206478 VA: 0x1206478
	public void .ctor() { }

	// RVA: 0x1206C64 Offset: 0x1206C64 VA: 0x1206C64
	internal void <>m__0() { }

	// RVA: 0x1206D1C Offset: 0x1206D1C VA: 0x1206D1C
	internal void <>m__1() { }
}

// Namespace: 
public class QuestInformationListViewObject : ListViewObject // TypeDefIndex: 11192
{
	// Fields
	protected QuestInformationListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC7D7B8 Offset: 0xC7D7B8 VA: 0xC7D7B8
	[DebuggerBrowsableAttribute] // RVA: 0xC7D7B8 Offset: 0xC7D7B8 VA: 0xC7D7B8
	private Action callbackFunc; // 0x70
	protected QuestInformationListViewItemDraw itemDraw; // 0x78
	protected QuestInformationListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x1207030 Offset: 0x1207030 VA: 0x1207030
	public void .ctor() { }

	// RVA: 0x1207098 Offset: 0x1207098 VA: 0x1207098
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1207184 Offset: 0x1207184 VA: 0x1207184
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1207270 Offset: 0x1207270 VA: 0x1207270
	protected void Awake() { }

	// RVA: 0x12072E4 Offset: 0x12072E4 VA: 0x12072E4
	private void Start() { }

	// RVA: 0x12072F8 Offset: 0x12072F8 VA: 0x12072F8
	private void OnDestroy() { }

	// RVA: 0x1205C60 Offset: 0x1205C60 VA: 0x1205C60
	public QuestInformationListViewItem GetItem() { }

	// RVA: 0x12073A4 Offset: 0x12073A4 VA: 0x12073A4 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x12073B0 Offset: 0x12073B0 VA: 0x12073B0 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1207438 Offset: 0x1207438 VA: 0x1207438
	public void Init(QuestInformationListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x120770C Offset: 0x120770C VA: 0x120770C
	public void Init(QuestInformationListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x1207790 Offset: 0x1207790 VA: 0x1207790
	public void Init(QuestInformationListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x12066E0 Offset: 0x12066E0 VA: 0x12066E0
	public void Init(QuestInformationListViewObject.InitMode initMode) { }

	// RVA: 0x12075FC Offset: 0x12075FC VA: 0x12075FC
	protected void SetupDisp() { }

	// RVA: 0x1207814 Offset: 0x1207814 VA: 0x1207814 Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum QuestInformationListViewObject.InitMode // TypeDefIndex: 11193
{
	// Fields
	public int value__; // 0x0
	public const QuestInformationListViewObject.InitMode INVISIBLE = 0;
	public const QuestInformationListViewObject.InitMode INVALID = 1;
	public const QuestInformationListViewObject.InitMode VALID = 2;
	public const QuestInformationListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum QuestInformationListViewObject.State // TypeDefIndex: 11194
{
	// Fields
	public int value__; // 0x0
	public const QuestInformationListViewObject.State INIT = 0;
	public const QuestInformationListViewObject.State IDLE = 1;
	public const QuestInformationListViewObject.State MOVE = 2;
	public const QuestInformationListViewObject.State INPUT = 3;
}

// Namespace: 
public class QuestRewardBoxAction : MonoBehaviour // TypeDefIndex: 11195
{
	// Fields
	public const float WHITE_OUT_TIME = 1;
	public const float WHITE_IN_TIME = 1;
	private CStateManager<QuestRewardBoxAction> mFSM; // 0x18
	private Animation mAnimation; // 0x20
	private SimpleAnimation mSimpleAnimation; // 0x28
	[SerializeField] // RVA: 0xC7D7F4 Offset: 0xC7D7F4 VA: 0xC7D7F4
	private UIAtlas mNormalAtlas; // 0x30
	[SerializeField] // RVA: 0xC7D804 Offset: 0xC7D804 VA: 0xC7D804
	private UIAtlas mSilverAtlas; // 0x38
	[SerializeField] // RVA: 0xC7D814 Offset: 0xC7D814 VA: 0xC7D814
	private UIAtlas mGoldAtlas; // 0x40
	[SerializeField] // RVA: 0xC7D824 Offset: 0xC7D824 VA: 0xC7D824
	private UISprite mBoxBaseSp; // 0x48
	[SerializeField] // RVA: 0xC7D834 Offset: 0xC7D834 VA: 0xC7D834
	private UISprite mBoxLockSp; // 0x50
	[SerializeField] // RVA: 0xC7D844 Offset: 0xC7D844 VA: 0xC7D844
	private UISprite mBoxOpenSp; // 0x58
	[SerializeField] // RVA: 0xC7D854 Offset: 0xC7D854 VA: 0xC7D854
	private GameObject particlePrefab; // 0x60
	protected GameObject particleObj; // 0x68
	private Action mEndAct; // 0x70

	// Methods

	// RVA: 0x1270E9C Offset: 0x1270E9C VA: 0x1270E9C
	public void .ctor() { }

	// RVA: 0x1270EA4 Offset: 0x1270EA4 VA: 0x1270EA4
	private void Awake() { }

	// RVA: 0x1271164 Offset: 0x1271164 VA: 0x1271164
	private void Update() { }

	// RVA: 0x12711C4 Offset: 0x12711C4 VA: 0x12711C4
	public void Setup(QuestRewardBoxAction.BOX_TYPE box_type, bool overwrite = False) { }

	// RVA: 0x1271598 Offset: 0x1271598 VA: 0x1271598
	public void Play(Action end_act) { }

	// RVA: 0x1271850 Offset: 0x1271850 VA: 0x1271850
	public QuestRewardBoxAction.STATE GetState() { }

	// RVA: 0x12710F4 Offset: 0x12710F4 VA: 0x12710F4
	public void SetState(QuestRewardBoxAction.STATE state) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3C10 Offset: 0xCD3C10 VA: 0xCD3C10
	// RVA: 0x12718B0 Offset: 0x12718B0 VA: 0x12718B0
	private void <Play>m__0() { }
}

// Namespace: 
public enum QuestRewardBoxAction.BOX_TYPE // TypeDefIndex: 11196
{
	// Fields
	public int value__; // 0x0
	public const QuestRewardBoxAction.BOX_TYPE NORMAL = 0;
	public const QuestRewardBoxAction.BOX_TYPE SILVER = 1;
	public const QuestRewardBoxAction.BOX_TYPE GOLD = 2;
	public const QuestRewardBoxAction.BOX_TYPE SIZEOF = 3;
}

// Namespace: 
public enum QuestRewardBoxAction.STATE // TypeDefIndex: 11197
{
	// Fields
	public int value__; // 0x0
	public const QuestRewardBoxAction.STATE NONE = 0;
	public const QuestRewardBoxAction.STATE PLAY = 1;
	public const QuestRewardBoxAction.STATE SIZEOF = 2;
}

// Namespace: 
private class QuestRewardBoxAction.StateNone : IState<QuestRewardBoxAction> // TypeDefIndex: 11198
{
	// Methods

	// RVA: 0x12710E4 Offset: 0x12710E4 VA: 0x12710E4
	public void .ctor() { }

	// RVA: 0x12718B8 Offset: 0x12718B8 VA: 0x12718B8 Slot: 4
	public void begin(QuestRewardBoxAction that) { }

	// RVA: 0x12718BC Offset: 0x12718BC VA: 0x12718BC Slot: 5
	public void update(QuestRewardBoxAction that) { }

	// RVA: 0x12718C0 Offset: 0x12718C0 VA: 0x12718C0 Slot: 6
	public void end(QuestRewardBoxAction that) { }
}

// Namespace: 
private class QuestRewardBoxAction.StatePlay : IState<QuestRewardBoxAction> // TypeDefIndex: 11199
{
	// Methods

	// RVA: 0x12710EC Offset: 0x12710EC VA: 0x12710EC
	public void .ctor() { }

	// RVA: 0x12718C4 Offset: 0x12718C4 VA: 0x12718C4 Slot: 4
	public void begin(QuestRewardBoxAction that) { }

	// RVA: 0x1271B80 Offset: 0x1271B80 VA: 0x1271B80 Slot: 5
	public void update(QuestRewardBoxAction that) { }

	// RVA: 0x1271E9C Offset: 0x1271E9C VA: 0x1271E9C Slot: 6
	public void end(QuestRewardBoxAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45C74 Offset: 0xC45C74 VA: 0xC45C74
private sealed class QuestRewardBoxAction.StatePlay.<update>c__AnonStorey0 // TypeDefIndex: 11200
{
	// Fields
	internal QuestRewardBoxAction that; // 0x10

	// Methods

	// RVA: 0x1271E94 Offset: 0x1271E94 VA: 0x1271E94
	public void .ctor() { }

	// RVA: 0x1271EA0 Offset: 0x1271EA0 VA: 0x1271EA0
	internal void <>m__0() { }

	// RVA: 0x1271ED0 Offset: 0x1271ED0 VA: 0x1271ED0
	internal void <>m__1() { }
}

// Namespace: 
public class QuestRewardCostumeAction : MonoBehaviour // TypeDefIndex: 11201
{
	// Fields
	private CStateManager<QuestRewardCostumeAction> mFSM; // 0x18
	private Animation mAnimation; // 0x20
	private SimpleAnimation mSimpleAnimation; // 0x28
	[SerializeField] // RVA: 0xC7D864 Offset: 0xC7D864 VA: 0xC7D864
	private UISprite mItemSp; // 0x30
	[SerializeField] // RVA: 0xC7D874 Offset: 0xC7D874 VA: 0xC7D874
	private UILabel mItemLabel; // 0x38
	[SerializeField] // RVA: 0xC7D884 Offset: 0xC7D884 VA: 0xC7D884
	private GameObject mAppearEffObj; // 0x40
	[SerializeField] // RVA: 0xC7D894 Offset: 0xC7D894 VA: 0xC7D894
	private GameObject particlePrefab; // 0x48
	protected GameObject particleObj; // 0x50
	private ScreenTouchInformationComponent mScreenTouchInfo; // 0x58
	private Action mEndAct; // 0x60

	// Methods

	// RVA: 0x1271F00 Offset: 0x1271F00 VA: 0x1271F00
	public void .ctor() { }

	// RVA: 0x1271F08 Offset: 0x1271F08 VA: 0x1271F08
	private void Awake() { }

	// RVA: 0x127227C Offset: 0x127227C VA: 0x127227C
	private void Update() { }

	// RVA: 0x1272304 Offset: 0x1272304 VA: 0x1272304
	public void Setup(ImageItem.Id imgId, string itmName) { }

	// RVA: 0x1272614 Offset: 0x1272614 VA: 0x1272614
	public void Play(Action endAct, float fadeInTime = 0) { }

	// RVA: 0x12728D4 Offset: 0x12728D4 VA: 0x12728D4
	public QuestRewardCostumeAction.STATE GetState() { }

	// RVA: 0x127220C Offset: 0x127220C VA: 0x127220C
	public void SetState(QuestRewardCostumeAction.STATE state) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3C20 Offset: 0xCD3C20 VA: 0xCD3C20
	// RVA: 0x1272934 Offset: 0x1272934 VA: 0x1272934
	private void <Play>m__0() { }
}

// Namespace: 
public enum QuestRewardCostumeAction.STATE // TypeDefIndex: 11202
{
	// Fields
	public int value__; // 0x0
	public const QuestRewardCostumeAction.STATE NONE = 0;
	public const QuestRewardCostumeAction.STATE PLAY = 1;
	public const QuestRewardCostumeAction.STATE ITEM_LABEL = 2;
	public const QuestRewardCostumeAction.STATE TOUCH_WAIT = 3;
	public const QuestRewardCostumeAction.STATE SIZEOF = 4;
}

// Namespace: 
private class QuestRewardCostumeAction.StateNone : IState<QuestRewardCostumeAction> // TypeDefIndex: 11203
{
	// Methods

	// RVA: 0x12721EC Offset: 0x12721EC VA: 0x12721EC
	public void .ctor() { }

	// RVA: 0x1272C3C Offset: 0x1272C3C VA: 0x1272C3C Slot: 4
	public void begin(QuestRewardCostumeAction that) { }

	// RVA: 0x1272C40 Offset: 0x1272C40 VA: 0x1272C40 Slot: 5
	public void update(QuestRewardCostumeAction that) { }

	// RVA: 0x1272C44 Offset: 0x1272C44 VA: 0x1272C44 Slot: 6
	public void end(QuestRewardCostumeAction that) { }
}

// Namespace: 
private class QuestRewardCostumeAction.StatePlay : IState<QuestRewardCostumeAction> // TypeDefIndex: 11204
{
	// Fields
	private AnimationState mAnimState; // 0x10
	private SimpleAnimation.State mSimpleAnimState; // 0x18

	// Methods

	// RVA: 0x12721F4 Offset: 0x12721F4 VA: 0x12721F4
	public void .ctor() { }

	// RVA: 0x1272C48 Offset: 0x1272C48 VA: 0x1272C48 Slot: 4
	public void begin(QuestRewardCostumeAction that) { }

	// RVA: 0x1272FC0 Offset: 0x1272FC0 VA: 0x1272FC0 Slot: 5
	public void update(QuestRewardCostumeAction that) { }

	// RVA: 0x1273174 Offset: 0x1273174 VA: 0x1273174 Slot: 6
	public void end(QuestRewardCostumeAction that) { }
}

// Namespace: 
private class QuestRewardCostumeAction.StateItemLabel : IState<QuestRewardCostumeAction> // TypeDefIndex: 11205
{
	// Fields
	private const float MV_TIME = 0.25;

	// Methods

	// RVA: 0x12721FC Offset: 0x12721FC VA: 0x12721FC
	public void .ctor() { }

	// RVA: 0x127293C Offset: 0x127293C VA: 0x127293C Slot: 4
	public void begin(QuestRewardCostumeAction that) { }

	// RVA: 0x1272BC8 Offset: 0x1272BC8 VA: 0x1272BC8 Slot: 5
	public void update(QuestRewardCostumeAction that) { }

	// RVA: 0x1272BCC Offset: 0x1272BCC VA: 0x1272BCC Slot: 6
	public void end(QuestRewardCostumeAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45C84 Offset: 0xC45C84 VA: 0xC45C84
private sealed class QuestRewardCostumeAction.StateItemLabel.<begin>c__AnonStorey0 // TypeDefIndex: 11206
{
	// Fields
	internal GameObject tgt_obj; // 0x10
	internal MoveObject mo; // 0x18
	internal QuestRewardCostumeAction that; // 0x20

	// Methods

	// RVA: 0x1272BC0 Offset: 0x1272BC0 VA: 0x1272BC0
	public void .ctor() { }

	// RVA: 0x1272BD0 Offset: 0x1272BD0 VA: 0x1272BD0
	internal void <>m__0() { }

	// RVA: 0x1272C0C Offset: 0x1272C0C VA: 0x1272C0C
	internal void <>m__1() { }
}

// Namespace: 
private class QuestRewardCostumeAction.StateTouchWait : IState<QuestRewardCostumeAction> // TypeDefIndex: 11207
{
	// Methods

	// RVA: 0x1272204 Offset: 0x1272204 VA: 0x1272204
	public void .ctor() { }

	// RVA: 0x1273178 Offset: 0x1273178 VA: 0x1273178 Slot: 4
	public void begin(QuestRewardCostumeAction that) { }

	// RVA: 0x12731D4 Offset: 0x12731D4 VA: 0x12731D4 Slot: 5
	public void update(QuestRewardCostumeAction that) { }

	// RVA: 0x12733B8 Offset: 0x12733B8 VA: 0x12733B8 Slot: 6
	public void end(QuestRewardCostumeAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45C94 Offset: 0xC45C94 VA: 0xC45C94
private sealed class QuestRewardCostumeAction.StateTouchWait.<update>c__AnonStorey0 // TypeDefIndex: 11208
{
	// Fields
	internal QuestRewardCostumeAction that; // 0x10

	// Methods

	// RVA: 0x12733B0 Offset: 0x12733B0 VA: 0x12733B0
	public void .ctor() { }

	// RVA: 0x12733BC Offset: 0x12733BC VA: 0x12733BC
	internal void <>m__0() { }
}

// Namespace: 
public class QuestRewardHarvestAction : MonoBehaviour // TypeDefIndex: 11209
{
	// Fields
	private CStateManager<QuestRewardHarvestAction> fsm; // 0x18
	private Animation animation; // 0x20
	private SimpleAnimation simpleAnimation; // 0x28
	private Action endAct; // 0x30
	[SerializeField] // RVA: 0xC7D8A4 Offset: 0xC7D8A4 VA: 0xC7D8A4
	[HeaderAttribute] // RVA: 0xC7D8A4 Offset: 0xC7D8A4 VA: 0xC7D8A4
	private UISprite[] itemSprite; // 0x38
	[SerializeField] // RVA: 0xC7D8F0 Offset: 0xC7D8F0 VA: 0xC7D8F0
	[HeaderAttribute] // RVA: 0xC7D8F0 Offset: 0xC7D8F0 VA: 0xC7D8F0
	private UILabel[] itemLabel; // 0x40
	[SerializeField] // RVA: 0xC7D93C Offset: 0xC7D93C VA: 0xC7D93C
	[HeaderAttribute] // RVA: 0xC7D93C Offset: 0xC7D93C VA: 0xC7D93C
	private GameObject[] imageFrame; // 0x48
	private ScreenTouchInformationComponent screenTouchInfo; // 0x50

	// Methods

	// RVA: 0x12733EC Offset: 0x12733EC VA: 0x12733EC
	public void .ctor() { }

	// RVA: 0x12733F4 Offset: 0x12733F4 VA: 0x12733F4
	private void Awake() { }

	// RVA: 0x1273620 Offset: 0x1273620 VA: 0x1273620
	private void Update() { }

	// RVA: 0x12736A8 Offset: 0x12736A8 VA: 0x12736A8
	public void Setup(QuestRewardInfo[] infos) { }

	// RVA: 0x127463C Offset: 0x127463C VA: 0x127463C
	public void Play(Action end_act, float fade_in_time = 0) { }

	// RVA: 0x1274750 Offset: 0x1274750 VA: 0x1274750
	public QuestRewardHarvestAction.STATE GetState() { }

	// RVA: 0x12735B0 Offset: 0x12735B0 VA: 0x12735B0
	public void SetState(QuestRewardHarvestAction.STATE state) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3C30 Offset: 0xCD3C30 VA: 0xCD3C30
	// RVA: 0x12747B0 Offset: 0x12747B0 VA: 0x12747B0
	private void <Play>m__0() { }
}

// Namespace: 
public enum QuestRewardHarvestAction.STATE // TypeDefIndex: 11210
{
	// Fields
	public int value__; // 0x0
	public const QuestRewardHarvestAction.STATE NONE = 0;
	public const QuestRewardHarvestAction.STATE PLAY = 1;
	public const QuestRewardHarvestAction.STATE ITEM_LABEL = 2;
	public const QuestRewardHarvestAction.STATE TOUCH_WAIT = 3;
	public const QuestRewardHarvestAction.STATE SIZEOF = 4;
}

// Namespace: 
private class QuestRewardHarvestAction.StateNone : IState<QuestRewardHarvestAction> // TypeDefIndex: 11211
{
	// Methods

	// RVA: 0x1273590 Offset: 0x1273590 VA: 0x1273590
	public void .ctor() { }

	// RVA: 0x1274BD8 Offset: 0x1274BD8 VA: 0x1274BD8 Slot: 4
	public void begin(QuestRewardHarvestAction that) { }

	// RVA: 0x1274BDC Offset: 0x1274BDC VA: 0x1274BDC Slot: 5
	public void update(QuestRewardHarvestAction that) { }

	// RVA: 0x1274BE0 Offset: 0x1274BE0 VA: 0x1274BE0 Slot: 6
	public void end(QuestRewardHarvestAction that) { }
}

// Namespace: 
private class QuestRewardHarvestAction.StatePlay : IState<QuestRewardHarvestAction> // TypeDefIndex: 11212
{
	// Methods

	// RVA: 0x1273598 Offset: 0x1273598 VA: 0x1273598
	public void .ctor() { }

	// RVA: 0x1274BE4 Offset: 0x1274BE4 VA: 0x1274BE4 Slot: 4
	public void begin(QuestRewardHarvestAction that) { }

	// RVA: 0x12750B0 Offset: 0x12750B0 VA: 0x12750B0 Slot: 5
	public void update(QuestRewardHarvestAction that) { }

	// RVA: 0x1275264 Offset: 0x1275264 VA: 0x1275264 Slot: 6
	public void end(QuestRewardHarvestAction that) { }
}

// Namespace: 
private class QuestRewardHarvestAction.StateItemLabel : IState<QuestRewardHarvestAction> // TypeDefIndex: 11213
{
	// Fields
	private const float MV_TIME = 0.25;

	// Methods

	// RVA: 0x12735A0 Offset: 0x12735A0 VA: 0x12735A0
	public void .ctor() { }

	// RVA: 0x12747B8 Offset: 0x12747B8 VA: 0x12747B8 Slot: 4
	public void begin(QuestRewardHarvestAction that) { }

	// RVA: 0x1274B54 Offset: 0x1274B54 VA: 0x1274B54 Slot: 5
	public void update(QuestRewardHarvestAction that) { }

	// RVA: 0x1274B58 Offset: 0x1274B58 VA: 0x1274B58 Slot: 6
	public void end(QuestRewardHarvestAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45CA4 Offset: 0xC45CA4 VA: 0xC45CA4
private sealed class QuestRewardHarvestAction.StateItemLabel.<begin>c__AnonStorey1 // TypeDefIndex: 11214
{
	// Fields
	internal QuestRewardHarvestAction that; // 0x10

	// Methods

	// RVA: 0x1274B44 Offset: 0x1274B44 VA: 0x1274B44
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45CB4 Offset: 0xC45CB4 VA: 0xC45CB4
private sealed class QuestRewardHarvestAction.StateItemLabel.<begin>c__AnonStorey0 // TypeDefIndex: 11215
{
	// Fields
	internal GameObject tgt_obj; // 0x10
	internal MoveObject mo; // 0x18
	internal QuestRewardHarvestAction.StateItemLabel.<begin>c__AnonStorey1 <>f__ref$1; // 0x20

	// Methods

	// RVA: 0x1274B4C Offset: 0x1274B4C VA: 0x1274B4C
	public void .ctor() { }

	// RVA: 0x1274B5C Offset: 0x1274B5C VA: 0x1274B5C
	internal void <>m__0() { }

	// RVA: 0x1274B98 Offset: 0x1274B98 VA: 0x1274B98
	internal void <>m__1() { }
}

// Namespace: 
private class QuestRewardHarvestAction.StateTouchWait : IState<QuestRewardHarvestAction> // TypeDefIndex: 11216
{
	// Methods

	// RVA: 0x12735A8 Offset: 0x12735A8 VA: 0x12735A8
	public void .ctor() { }

	// RVA: 0x1275268 Offset: 0x1275268 VA: 0x1275268 Slot: 4
	public void begin(QuestRewardHarvestAction that) { }

	// RVA: 0x12752C4 Offset: 0x12752C4 VA: 0x12752C4 Slot: 5
	public void update(QuestRewardHarvestAction that) { }

	// RVA: 0x12754D4 Offset: 0x12754D4 VA: 0x12754D4 Slot: 6
	public void end(QuestRewardHarvestAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45CC4 Offset: 0xC45CC4 VA: 0xC45CC4
private sealed class QuestRewardHarvestAction.StateTouchWait.<update>c__AnonStorey0 // TypeDefIndex: 11217
{
	// Fields
	internal QuestRewardHarvestAction that; // 0x10

	// Methods

	// RVA: 0x12754CC Offset: 0x12754CC VA: 0x12754CC
	public void .ctor() { }

	// RVA: 0x12754D8 Offset: 0x12754D8 VA: 0x12754D8
	internal void <>m__0() { }
}

// Namespace: 
public class QuestRewardItemAction : MonoBehaviour // TypeDefIndex: 11218
{
	// Fields
	private CStateManager<QuestRewardItemAction> mFSM; // 0x18
	private Animation mAnimation; // 0x20
	private SimpleAnimation mSimpleAnimation; // 0x28
	private bool mIsFromTreasureBox; // 0x30
	[SerializeField] // RVA: 0xC7D988 Offset: 0xC7D988 VA: 0xC7D988
	private UISprite mItemSp; // 0x38
	[SerializeField] // RVA: 0xC7D998 Offset: 0xC7D998 VA: 0xC7D998
	private UILabel mItemLabel; // 0x40
	[SerializeField] // RVA: 0xC7D9A8 Offset: 0xC7D9A8 VA: 0xC7D9A8
	private GameObject mAppearEffObj; // 0x48
	[SerializeField] // RVA: 0xC7D9B8 Offset: 0xC7D9B8 VA: 0xC7D9B8
	private GameObject particlePrefab; // 0x50
	[SerializeField] // RVA: 0xC7D9C8 Offset: 0xC7D9C8 VA: 0xC7D9C8
	[HeaderAttribute] // RVA: 0xC7D9C8 Offset: 0xC7D9C8 VA: 0xC7D9C8
	private bool mLabelAnimate; // 0x58
	[SerializeField] // RVA: 0xC7DA14 Offset: 0xC7DA14 VA: 0xC7DA14
	[HeaderAttribute] // RVA: 0xC7DA14 Offset: 0xC7DA14 VA: 0xC7DA14
	private float mTreasureAnimStartTime; // 0x5C
	[SerializeField] // RVA: 0xC7DA60 Offset: 0xC7DA60 VA: 0xC7DA60
	[HeaderAttribute] // RVA: 0xC7DA60 Offset: 0xC7DA60 VA: 0xC7DA60
	private bool mTreasureEffectOff; // 0x60
	[SerializeField] // RVA: 0xC7DAAC Offset: 0xC7DAAC VA: 0xC7DAAC
	[HeaderAttribute] // RVA: 0xC7DAAC Offset: 0xC7DAAC VA: 0xC7DAAC
	private bool mGetSEonProgram; // 0x61
	protected GameObject particleObj; // 0x68
	private ScreenTouchInformationComponent mScreenTouchInfo; // 0x70
	private Action mEndAct; // 0x78

	// Methods

	// RVA: 0x1275530 Offset: 0x1275530 VA: 0x1275530
	public void .ctor() { }

	// RVA: 0x1275550 Offset: 0x1275550 VA: 0x1275550
	private void Awake() { }

	// RVA: 0x12758A0 Offset: 0x12758A0 VA: 0x12758A0
	private void Update() { }

	// RVA: 0x1275928 Offset: 0x1275928 VA: 0x1275928
	public void Setup(QuestRewardInfo qri) { }

	// RVA: 0x1275E34 Offset: 0x1275E34 VA: 0x1275E34
	public void Play(bool is_from_treasure_box, Action end_act, float fade_in_time = 0) { }

	// RVA: 0x1276114 Offset: 0x1276114 VA: 0x1276114
	public QuestRewardItemAction.STATE GetState() { }

	// RVA: 0x1275830 Offset: 0x1275830 VA: 0x1275830
	public void SetState(QuestRewardItemAction.STATE state) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3C40 Offset: 0xCD3C40 VA: 0xCD3C40
	// RVA: 0x1276174 Offset: 0x1276174 VA: 0x1276174
	private void <Play>m__0() { }
}

// Namespace: 
public enum QuestRewardItemAction.STATE // TypeDefIndex: 11219
{
	// Fields
	public int value__; // 0x0
	public const QuestRewardItemAction.STATE NONE = 0;
	public const QuestRewardItemAction.STATE PLAY = 1;
	public const QuestRewardItemAction.STATE ITEM_LABEL = 2;
	public const QuestRewardItemAction.STATE TOUCH_WAIT = 3;
	public const QuestRewardItemAction.STATE SIZEOF = 4;
}

// Namespace: 
private class QuestRewardItemAction.StateNone : IState<QuestRewardItemAction> // TypeDefIndex: 11220
{
	// Methods

	// RVA: 0x1275810 Offset: 0x1275810 VA: 0x1275810
	public void .ctor() { }

	// RVA: 0x1276504 Offset: 0x1276504 VA: 0x1276504 Slot: 4
	public void begin(QuestRewardItemAction that) { }

	// RVA: 0x1276508 Offset: 0x1276508 VA: 0x1276508 Slot: 5
	public void update(QuestRewardItemAction that) { }

	// RVA: 0x127650C Offset: 0x127650C VA: 0x127650C Slot: 6
	public void end(QuestRewardItemAction that) { }
}

// Namespace: 
private class QuestRewardItemAction.StatePlay : IState<QuestRewardItemAction> // TypeDefIndex: 11221
{
	// Fields
	private AnimationState mAnimState; // 0x10
	private SimpleAnimation.State mSimpleAnimState; // 0x18

	// Methods

	// RVA: 0x1275818 Offset: 0x1275818 VA: 0x1275818
	public void .ctor() { }

	// RVA: 0x1276510 Offset: 0x1276510 VA: 0x1276510 Slot: 4
	public void begin(QuestRewardItemAction that) { }

	// RVA: 0x12768F4 Offset: 0x12768F4 VA: 0x12768F4 Slot: 5
	public void update(QuestRewardItemAction that) { }

	// RVA: 0x1276AEC Offset: 0x1276AEC VA: 0x1276AEC Slot: 6
	public void end(QuestRewardItemAction that) { }
}

// Namespace: 
private class QuestRewardItemAction.StateItemLabel : IState<QuestRewardItemAction> // TypeDefIndex: 11222
{
	// Fields
	private const float MV_TIME = 0.25;

	// Methods

	// RVA: 0x1275820 Offset: 0x1275820 VA: 0x1275820
	public void .ctor() { }

	// RVA: 0x1276188 Offset: 0x1276188 VA: 0x1276188 Slot: 4
	public void begin(QuestRewardItemAction that) { }

	// RVA: 0x1276490 Offset: 0x1276490 VA: 0x1276490 Slot: 5
	public void update(QuestRewardItemAction that) { }

	// RVA: 0x1276494 Offset: 0x1276494 VA: 0x1276494 Slot: 6
	public void end(QuestRewardItemAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45CD4 Offset: 0xC45CD4 VA: 0xC45CD4
private sealed class QuestRewardItemAction.StateItemLabel.<begin>c__AnonStorey0 // TypeDefIndex: 11223
{
	// Fields
	internal GameObject tgt_obj; // 0x10
	internal MoveObject mo; // 0x18
	internal QuestRewardItemAction that; // 0x20

	// Methods

	// RVA: 0x1276488 Offset: 0x1276488 VA: 0x1276488
	public void .ctor() { }

	// RVA: 0x1276498 Offset: 0x1276498 VA: 0x1276498
	internal void <>m__0() { }

	// RVA: 0x12764D4 Offset: 0x12764D4 VA: 0x12764D4
	internal void <>m__1() { }
}

// Namespace: 
private class QuestRewardItemAction.StateTouchWait : IState<QuestRewardItemAction> // TypeDefIndex: 11224
{
	// Methods

	// RVA: 0x1275828 Offset: 0x1275828 VA: 0x1275828
	public void .ctor() { }

	// RVA: 0x1276AF0 Offset: 0x1276AF0 VA: 0x1276AF0 Slot: 4
	public void begin(QuestRewardItemAction that) { }

	// RVA: 0x1276B4C Offset: 0x1276B4C VA: 0x1276B4C Slot: 5
	public void update(QuestRewardItemAction that) { }

	// RVA: 0x1276D5C Offset: 0x1276D5C VA: 0x1276D5C Slot: 6
	public void end(QuestRewardItemAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45CE4 Offset: 0xC45CE4 VA: 0xC45CE4
private sealed class QuestRewardItemAction.StateTouchWait.<update>c__AnonStorey0 // TypeDefIndex: 11225
{
	// Fields
	internal QuestRewardItemAction that; // 0x10

	// Methods

	// RVA: 0x1276D54 Offset: 0x1276D54 VA: 0x1276D54
	public void .ctor() { }

	// RVA: 0x1276D60 Offset: 0x1276D60 VA: 0x1276D60
	internal void <>m__0() { }
}

// Namespace: 
public class QuestRewardOrderGradeAction : MonoBehaviour // TypeDefIndex: 11226
{
	// Fields
	private CStateManager<QuestRewardOrderGradeAction> mFSM; // 0x18
	private Animation mAnimation; // 0x20
	private SimpleAnimation mSimpleAnimation; // 0x28
	[SerializeField] // RVA: 0xC7DAF8 Offset: 0xC7DAF8 VA: 0xC7DAF8
	private UISprite mItemSp; // 0x30
	[SerializeField] // RVA: 0xC7DB08 Offset: 0xC7DB08 VA: 0xC7DB08
	private UILabel mItemLabel; // 0x38
	[SerializeField] // RVA: 0xC7DB18 Offset: 0xC7DB18 VA: 0xC7DB18
	private GameObject mAppearEffObj; // 0x40
	[SerializeField] // RVA: 0xC7DB28 Offset: 0xC7DB28 VA: 0xC7DB28
	private GameObject particlePrefab; // 0x48
	protected GameObject particleObj; // 0x50
	private ScreenTouchInformationComponent mScreenTouchInfo; // 0x58
	private Action mEndAct; // 0x60

	// Methods

	// RVA: 0x1276D90 Offset: 0x1276D90 VA: 0x1276D90
	public void .ctor() { }

	// RVA: 0x1276D98 Offset: 0x1276D98 VA: 0x1276D98
	private void Awake() { }

	// RVA: 0x12770E8 Offset: 0x12770E8 VA: 0x12770E8
	private void Update() { }

	// RVA: 0x1277148 Offset: 0x1277148 VA: 0x1277148
	public void Setup() { }

	// RVA: 0x1277378 Offset: 0x1277378 VA: 0x1277378
	public void Play(Action end_act, float fade_in_time = 0) { }

	// RVA: 0x1277638 Offset: 0x1277638 VA: 0x1277638
	public QuestRewardOrderGradeAction.STATE GetState() { }

	// RVA: 0x1277078 Offset: 0x1277078 VA: 0x1277078
	public void SetState(QuestRewardOrderGradeAction.STATE state) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3C50 Offset: 0xCD3C50 VA: 0xCD3C50
	// RVA: 0x1277698 Offset: 0x1277698 VA: 0x1277698
	private void <Play>m__0() { }
}

// Namespace: 
public enum QuestRewardOrderGradeAction.STATE // TypeDefIndex: 11227
{
	// Fields
	public int value__; // 0x0
	public const QuestRewardOrderGradeAction.STATE NONE = 0;
	public const QuestRewardOrderGradeAction.STATE PLAY = 1;
	public const QuestRewardOrderGradeAction.STATE ITEM_LABEL = 2;
	public const QuestRewardOrderGradeAction.STATE TOUCH_WAIT = 3;
	public const QuestRewardOrderGradeAction.STATE SIZEOF = 4;
}

// Namespace: 
private class QuestRewardOrderGradeAction.StateNone : IState<QuestRewardOrderGradeAction> // TypeDefIndex: 11228
{
	// Methods

	// RVA: 0x1277058 Offset: 0x1277058 VA: 0x1277058
	public void .ctor() { }

	// RVA: 0x12779CC Offset: 0x12779CC VA: 0x12779CC Slot: 4
	public void begin(QuestRewardOrderGradeAction that) { }

	// RVA: 0x12779D0 Offset: 0x12779D0 VA: 0x12779D0 Slot: 5
	public void update(QuestRewardOrderGradeAction that) { }

	// RVA: 0x12779D4 Offset: 0x12779D4 VA: 0x12779D4 Slot: 6
	public void end(QuestRewardOrderGradeAction that) { }
}

// Namespace: 
private class QuestRewardOrderGradeAction.StatePlay : IState<QuestRewardOrderGradeAction> // TypeDefIndex: 11229
{
	// Fields
	private AnimationState mAnimState; // 0x10
	private SimpleAnimation.State mSimpleAnimState; // 0x18

	// Methods

	// RVA: 0x1277060 Offset: 0x1277060 VA: 0x1277060
	public void .ctor() { }

	// RVA: 0x12779D8 Offset: 0x12779D8 VA: 0x12779D8 Slot: 4
	public void begin(QuestRewardOrderGradeAction that) { }

	// RVA: 0x1277D50 Offset: 0x1277D50 VA: 0x1277D50 Slot: 5
	public void update(QuestRewardOrderGradeAction that) { }

	// RVA: 0x1277F04 Offset: 0x1277F04 VA: 0x1277F04 Slot: 6
