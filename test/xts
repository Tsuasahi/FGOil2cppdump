	[DebuggerBrowsableAttribute] // RVA: 0xC761A4 Offset: 0xC761A4 VA: 0xC761A4
	private int <DragSelectNum>k__BackingField; // 0xFC
	private int[] categoryIdList; // 0x100
	protected int[] commandCodeCategoryIdList; // 0x108
	private int hpReinforceValue; // 0x110
	private int atkReinforceValue; // 0x114
	private int nowMaxHpReinforceValue; // 0x118
	private int nowMaxAtkReinforceValue; // 0x11C
	private bool isNeedAdjustIconLabelScale; // 0x120

	// Properties
	public UserServantEntity UserServantEntity { get; set; }
	public int SvtId { get; set; }
	public UserCommandCodeEntity UserCommandCodeEntity { get; set; }
	public int CommandCodeId { get; set; }
	public bool IsPartyEquip { get; set; }
	public bool IsUseSupportServant { get; set; }
	public bool IsUseSupportEquip { get; set; }
	public bool IsUse { get; set; }
	public bool IsLock { get; set; }
	public bool IsChoice { get; set; }
	public bool IsParty { get; set; }
	public bool IsEquippedCommandCodeServant { get; set; }
	public bool IsCommandCardOpenServant { get; set; }
	public bool IsFriendShipSvtEq { get; set; }
	public bool IsChocolateSvtEquip { get; set; }
	public bool IsMaterialTdSvt { get; set; }
	public bool IsNotSelection { get; set; }
	public bool IsPush { get; set; }
	public bool IsFavorite { get; set; }
	public bool IsCommandCodeEquiped { get; set; }
	public bool IsSwapLock { get; set; }
	public bool IsSwapChoice { get; set; }
	public int DragSelectNum { get; set; }
	public ServantEntity ServantEntity { get; }
	public int PartyIndex { get; }
	public long UserSvtId { get; }
	public bool IsOrganization { get; }
	public bool IsCanNotSelect { get; }
	public bool IsCanNotSelectPush { get; }
	public bool IsEventJoin { get; }
	public bool IsProtected { get; }
	public bool IsSellEnableServant { get; }
	public bool IsDispLock { get; }
	public bool IsDispChoice { get; }
	public bool IsDragSelect { get; set; }
	public bool IsHeroine { get; }
	public bool IsServantEquip { get; }
	public bool IsServant { get; }
	public long UserCommandCodeId { get; }
	public IconLabelInfo IconLabelInfo1 { get; }
	public IconLabelInfo IconLabelInfo2 { get; }
	public bool IsNeedAdjustIconLabelScale { get; }

	// Methods

	// RVA: 0x19C404C Offset: 0x19C404C VA: 0x19C404C
	public void .ctor(int index, UserServantEntity userServantEntity, long[] partyUserServantIds, long[] partyUserEquipIds, bool isFavorite) { }

	// RVA: 0x19C4B8C Offset: 0x19C4B8C VA: 0x19C4B8C
	public void .ctor(int index, UserCommandCodeEntity userCommandCodeEntity, bool isEquiped) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD10A0 Offset: 0xCD10A0 VA: 0xCD10A0
	// RVA: 0x19C4B84 Offset: 0x19C4B84 VA: 0x19C4B84
	public UserServantEntity get_UserServantEntity() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD10B0 Offset: 0xCD10B0 VA: 0xCD10B0
	// RVA: 0x19C4CFC Offset: 0x19C4CFC VA: 0x19C4CFC
	private void set_UserServantEntity(UserServantEntity value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD10C0 Offset: 0xCD10C0 VA: 0xCD10C0
	// RVA: 0x19C4D04 Offset: 0x19C4D04 VA: 0x19C4D04
	public int get_SvtId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD10D0 Offset: 0xCD10D0 VA: 0xCD10D0
	// RVA: 0x19C4D0C Offset: 0x19C4D0C VA: 0x19C4D0C
	private void set_SvtId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD10E0 Offset: 0xCD10E0 VA: 0xCD10E0
	// RVA: 0x19C4D14 Offset: 0x19C4D14 VA: 0x19C4D14
	public UserCommandCodeEntity get_UserCommandCodeEntity() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD10F0 Offset: 0xCD10F0 VA: 0xCD10F0
	// RVA: 0x19C4D1C Offset: 0x19C4D1C VA: 0x19C4D1C
	private void set_UserCommandCodeEntity(UserCommandCodeEntity value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1100 Offset: 0xCD1100 VA: 0xCD1100
	// RVA: 0x19C4D24 Offset: 0x19C4D24 VA: 0x19C4D24
	public int get_CommandCodeId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1110 Offset: 0xCD1110 VA: 0xCD1110
	// RVA: 0x19C4D2C Offset: 0x19C4D2C VA: 0x19C4D2C
	private void set_CommandCodeId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1120 Offset: 0xCD1120 VA: 0xCD1120
	// RVA: 0x19C4D34 Offset: 0x19C4D34 VA: 0x19C4D34
	public bool get_IsPartyEquip() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1130 Offset: 0xCD1130 VA: 0xCD1130
	// RVA: 0x19C4D3C Offset: 0x19C4D3C VA: 0x19C4D3C
	private void set_IsPartyEquip(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1140 Offset: 0xCD1140 VA: 0xCD1140
	// RVA: 0x19C4D48 Offset: 0x19C4D48 VA: 0x19C4D48
	public bool get_IsUseSupportServant() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1150 Offset: 0xCD1150 VA: 0xCD1150
	// RVA: 0x19C4D50 Offset: 0x19C4D50 VA: 0x19C4D50
	private void set_IsUseSupportServant(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1160 Offset: 0xCD1160 VA: 0xCD1160
	// RVA: 0x19C4D5C Offset: 0x19C4D5C VA: 0x19C4D5C
	public bool get_IsUseSupportEquip() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1170 Offset: 0xCD1170 VA: 0xCD1170
	// RVA: 0x19C4D64 Offset: 0x19C4D64 VA: 0x19C4D64
	private void set_IsUseSupportEquip(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1180 Offset: 0xCD1180 VA: 0xCD1180
	// RVA: 0x19C4D70 Offset: 0x19C4D70 VA: 0x19C4D70
	public bool get_IsUse() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1190 Offset: 0xCD1190 VA: 0xCD1190
	// RVA: 0x19C4D78 Offset: 0x19C4D78 VA: 0x19C4D78
	private void set_IsUse(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD11A0 Offset: 0xCD11A0 VA: 0xCD11A0
	// RVA: 0x19C4D84 Offset: 0x19C4D84 VA: 0x19C4D84
	public bool get_IsLock() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD11B0 Offset: 0xCD11B0 VA: 0xCD11B0
	// RVA: 0x19C4D8C Offset: 0x19C4D8C VA: 0x19C4D8C
	private void set_IsLock(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD11C0 Offset: 0xCD11C0 VA: 0xCD11C0
	// RVA: 0x19C4D98 Offset: 0x19C4D98 VA: 0x19C4D98
	public bool get_IsChoice() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD11D0 Offset: 0xCD11D0 VA: 0xCD11D0
	// RVA: 0x19C4DA0 Offset: 0x19C4DA0 VA: 0x19C4DA0
	private void set_IsChoice(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD11E0 Offset: 0xCD11E0 VA: 0xCD11E0
	// RVA: 0x19C4DAC Offset: 0x19C4DAC VA: 0x19C4DAC
	public bool get_IsParty() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD11F0 Offset: 0xCD11F0 VA: 0xCD11F0
	// RVA: 0x19C4DB4 Offset: 0x19C4DB4 VA: 0x19C4DB4
	private void set_IsParty(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1200 Offset: 0xCD1200 VA: 0xCD1200
	// RVA: 0x19C4DC0 Offset: 0x19C4DC0 VA: 0x19C4DC0
	public bool get_IsEquippedCommandCodeServant() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1210 Offset: 0xCD1210 VA: 0xCD1210
	// RVA: 0x19C4DC8 Offset: 0x19C4DC8 VA: 0x19C4DC8
	private void set_IsEquippedCommandCodeServant(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1220 Offset: 0xCD1220 VA: 0xCD1220
	// RVA: 0x19C4DD4 Offset: 0x19C4DD4 VA: 0x19C4DD4
	public bool get_IsCommandCardOpenServant() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1230 Offset: 0xCD1230 VA: 0xCD1230
	// RVA: 0x19C4DDC Offset: 0x19C4DDC VA: 0x19C4DDC
	private void set_IsCommandCardOpenServant(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1240 Offset: 0xCD1240 VA: 0xCD1240
	// RVA: 0x19C4DE8 Offset: 0x19C4DE8 VA: 0x19C4DE8
	public bool get_IsFriendShipSvtEq() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1250 Offset: 0xCD1250 VA: 0xCD1250
	// RVA: 0x19C4DF0 Offset: 0x19C4DF0 VA: 0x19C4DF0
	private void set_IsFriendShipSvtEq(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1260 Offset: 0xCD1260 VA: 0xCD1260
	// RVA: 0x19C4DFC Offset: 0x19C4DFC VA: 0x19C4DFC
	public bool get_IsChocolateSvtEquip() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1270 Offset: 0xCD1270 VA: 0xCD1270
	// RVA: 0x19C4E04 Offset: 0x19C4E04 VA: 0x19C4E04
	private void set_IsChocolateSvtEquip(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1280 Offset: 0xCD1280 VA: 0xCD1280
	// RVA: 0x19C4E10 Offset: 0x19C4E10 VA: 0x19C4E10
	public bool get_IsMaterialTdSvt() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1290 Offset: 0xCD1290 VA: 0xCD1290
	// RVA: 0x19C4E18 Offset: 0x19C4E18 VA: 0x19C4E18
	private void set_IsMaterialTdSvt(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD12A0 Offset: 0xCD12A0 VA: 0xCD12A0
	// RVA: 0x19C4E24 Offset: 0x19C4E24 VA: 0x19C4E24
	public bool get_IsNotSelection() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD12B0 Offset: 0xCD12B0 VA: 0xCD12B0
	// RVA: 0x19C4E2C Offset: 0x19C4E2C VA: 0x19C4E2C
	private void set_IsNotSelection(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD12C0 Offset: 0xCD12C0 VA: 0xCD12C0
	// RVA: 0x19C4E38 Offset: 0x19C4E38 VA: 0x19C4E38
	public bool get_IsPush() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD12D0 Offset: 0xCD12D0 VA: 0xCD12D0
	// RVA: 0x19C4E40 Offset: 0x19C4E40 VA: 0x19C4E40
	public void set_IsPush(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD12E0 Offset: 0xCD12E0 VA: 0xCD12E0
	// RVA: 0x19C4E4C Offset: 0x19C4E4C VA: 0x19C4E4C
	public bool get_IsFavorite() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD12F0 Offset: 0xCD12F0 VA: 0xCD12F0
	// RVA: 0x19C4B78 Offset: 0x19C4B78 VA: 0x19C4B78
	private void set_IsFavorite(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1300 Offset: 0xCD1300 VA: 0xCD1300
	// RVA: 0x19C4E54 Offset: 0x19C4E54 VA: 0x19C4E54
	public bool get_IsCommandCodeEquiped() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1310 Offset: 0xCD1310 VA: 0xCD1310
	// RVA: 0x19C4CF0 Offset: 0x19C4CF0 VA: 0x19C4CF0
	private void set_IsCommandCodeEquiped(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1320 Offset: 0xCD1320 VA: 0xCD1320
	// RVA: 0x19C4E5C Offset: 0x19C4E5C VA: 0x19C4E5C
	public bool get_IsSwapLock() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1330 Offset: 0xCD1330 VA: 0xCD1330
	// RVA: 0x19C4E64 Offset: 0x19C4E64 VA: 0x19C4E64
	private void set_IsSwapLock(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1340 Offset: 0xCD1340 VA: 0xCD1340
	// RVA: 0x19C4E70 Offset: 0x19C4E70 VA: 0x19C4E70
	public bool get_IsSwapChoice() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1350 Offset: 0xCD1350 VA: 0xCD1350
	// RVA: 0x19C4E78 Offset: 0x19C4E78 VA: 0x19C4E78
	private void set_IsSwapChoice(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1360 Offset: 0xCD1360 VA: 0xCD1360
	// RVA: 0x19C4E84 Offset: 0x19C4E84 VA: 0x19C4E84
	public int get_DragSelectNum() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1370 Offset: 0xCD1370 VA: 0xCD1370
	// RVA: 0x19C4E8C Offset: 0x19C4E8C VA: 0x19C4E8C
	public void set_DragSelectNum(int value) { }

	// RVA: 0x19C4328 Offset: 0x19C4328 VA: 0x19C4328
	private void Init(int index) { }

	// RVA: 0x19C46F0 Offset: 0x19C46F0 VA: 0x19C46F0
	private void SetData(ServantOperationListViewItem.Type type) { }

	// RVA: 0x19C563C Offset: 0x19C563C VA: 0x19C563C
	public void ModifyItem(bool isFavorite) { }

	// RVA: 0x19C5678 Offset: 0x19C5678 VA: 0x19C5678
	public void ModifyLockItem() { }

	// RVA: 0x19C56C4 Offset: 0x19C56C4 VA: 0x19C56C4
	public void ModifyChoiceItem() { }

	// RVA: 0x19C5710 Offset: 0x19C5710 VA: 0x19C5710
	public void ModifyPushItem() { }

	// RVA: 0x19C57E0 Offset: 0x19C57E0 VA: 0x19C57E0 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x19C5AC4 Offset: 0x19C5AC4 VA: 0x19C5AC4
	private bool IsMatchServantFilter(ListViewSort sort) { }

	// RVA: 0x19C5E04 Offset: 0x19C5E04 VA: 0x19C5E04
	private bool IsMatchServantEquipFilter(ListViewSort sort) { }

	// RVA: 0x19C5FC0 Offset: 0x19C5FC0 VA: 0x19C5FC0
	private bool IsMatchCommandCodeFilter(ListViewSort sort) { }

	// RVA: 0x19C5838 Offset: 0x19C5838 VA: 0x19C5838
	private void SetIconInfoLabel(ListViewSort sort) { }

	// RVA: 0x19C617C Offset: 0x19C617C VA: 0x19C617C
	private bool GetIconLabelInfoData1(ListViewSort sort, out int iconKind, out int dataValue, out int adjustDataValue, out long time) { }

	// RVA: 0x19C6430 Offset: 0x19C6430 VA: 0x19C6430
	private bool GetIconLabelInfoData2(ListViewSort sort, out int iconKind, out int dataValue, out int adjustDataValue) { }

	// RVA: 0x19C6510 Offset: 0x19C6510 VA: 0x19C6510
	private long GetSortValue0(ListViewSort sort, bool isDispChoice, out long sortValue0B) { }

	// RVA: 0x19C66D4 Offset: 0x19C66D4 VA: 0x19C66D4
	private long GetSortValue1(ListViewSort sort, int dataValue) { }

	// RVA: 0x19C6A24 Offset: 0x19C6A24 VA: 0x19C6A24
	private bool GetIsDispInfo(ListViewSort sort) { }

	// RVA: 0x19C6CDC Offset: 0x19C6CDC VA: 0x19C6CDC Slot: 5
	public override bool IsMatchFilter(ListViewSort sort) { }

	// RVA: 0x19C4380 Offset: 0x19C4380 VA: 0x19C4380
	private void SetServantData(UserServantEntity userServantEntity) { }

	// RVA: 0x19C45B0 Offset: 0x19C45B0 VA: 0x19C45B0
	private void SetCommandCodeData(UserCommandCodeEntity userCommandCodeEntity) { }

	// RVA: 0x19C5084 Offset: 0x19C5084 VA: 0x19C5084
	private ServantOperationListViewItem.ServantAttributeKind GetAttribute(ServantOperationListViewItem.Type type) { }

	// RVA: 0x19C4F00 Offset: 0x19C4F00 VA: 0x19C4F00
	private int GetClassId(ServantOperationListViewItem.Type type) { }

	// RVA: 0x19C4F3C Offset: 0x19C4F3C VA: 0x19C4F3C
	private int GetRarity(ServantOperationListViewItem.Type type) { }

	// RVA: 0x19C50F8 Offset: 0x19C50F8 VA: 0x19C50F8
	private int GetFriendship(ServantOperationListViewItem.Type type) { }

	// RVA: 0x19C47F4 Offset: 0x19C47F4 VA: 0x19C47F4
	private void SetServantUses(ServantOperationListViewItem.Type type, long[] partyUserServantList, long[] partyUserEquipList) { }

	// RVA: 0x19C6D64 Offset: 0x19C6D64 VA: 0x19C6D64
	private int GetPartyIndex(long userServantId, long[] ids, bool isEquip) { }

	// RVA: 0x19C5284 Offset: 0x19C5284 VA: 0x19C5284
	private bool GetIsEquippedCommandCodeServant(ServantOperationListViewItem.Type type) { }

	// RVA: 0x19C5460 Offset: 0x19C5460 VA: 0x19C5460
	private bool GetIsCommandCardOpenServant(ServantOperationListViewItem.Type type) { }

	// RVA: 0x19C4E94 Offset: 0x19C4E94 VA: 0x19C4E94
	private void ClearIconLabelInfo(IconLabelInfo iconLabelInfo) { }

	// RVA: 0x19C6E10 Offset: 0x19C6E10 VA: 0x19C6E10
	public void setUserServantEntity(UserServantEntity entity) { }

	// RVA: 0x19C6E18 Offset: 0x19C6E18 VA: 0x19C6E18
	public void setUserCommandCodeEntity(UserCommandCodeEntity entity) { }

	// RVA: 0x19C6E20 Offset: 0x19C6E20 VA: 0x19C6E20
	public ServantEntity get_ServantEntity() { }

	// RVA: 0x19C6E28 Offset: 0x19C6E28 VA: 0x19C6E28
	public int get_PartyIndex() { }

	// RVA: 0x19C6E34 Offset: 0x19C6E34 VA: 0x19C6E34
	public long get_UserSvtId() { }

	// RVA: 0x19C6ED0 Offset: 0x19C6ED0 VA: 0x19C6ED0
	public bool get_IsOrganization() { }

	// RVA: 0x19C6EE8 Offset: 0x19C6EE8 VA: 0x19C6EE8
	public bool get_IsCanNotSelect() { }

	// RVA: 0x19C6F4C Offset: 0x19C6F4C VA: 0x19C6F4C
	public bool get_IsCanNotSelectPush() { }

	// RVA: 0x19C6FF8 Offset: 0x19C6FF8 VA: 0x19C6FF8
	public bool get_IsEventJoin() { }

	// RVA: 0x19C6AA8 Offset: 0x19C6AA8 VA: 0x19C6AA8
	public bool get_IsProtected() { }

	// RVA: 0x19C700C Offset: 0x19C700C VA: 0x19C700C
	public bool get_IsSellEnableServant() { }

	// RVA: 0x19C701C Offset: 0x19C701C VA: 0x19C701C
	public bool SwapLock() { }

	// RVA: 0x19C6A88 Offset: 0x19C6A88 VA: 0x19C6A88
	public bool get_IsDispLock() { }

	// RVA: 0x19C7038 Offset: 0x19C7038 VA: 0x19C7038
	public bool SwapChoice() { }

	// RVA: 0x19C5DE4 Offset: 0x19C5DE4 VA: 0x19C5DE4
	public bool get_IsDispChoice() { }

	// RVA: 0x19C7054 Offset: 0x19C7054 VA: 0x19C7054
	public bool get_IsDragSelect() { }

	// RVA: 0x19C7064 Offset: 0x19C7064 VA: 0x19C7064
	public void set_IsDragSelect(bool value) { }

	// RVA: 0x19C7094 Offset: 0x19C7094 VA: 0x19C7094
	public bool get_IsHeroine() { }

	// RVA: 0x19C70A8 Offset: 0x19C70A8 VA: 0x19C70A8
	public bool get_IsServantEquip() { }

	// RVA: 0x19C70D8 Offset: 0x19C70D8 VA: 0x19C70D8
	public bool get_IsServant() { }

	// RVA: 0x19C70EC Offset: 0x19C70EC VA: 0x19C70EC
	public long get_UserCommandCodeId() { }

	// RVA: 0x19C7188 Offset: 0x19C7188 VA: 0x19C7188
	public IconLabelInfo get_IconLabelInfo1() { }

	// RVA: 0x19C7190 Offset: 0x19C7190 VA: 0x19C7190
	public IconLabelInfo get_IconLabelInfo2() { }

	// RVA: 0x19C7198 Offset: 0x19C7198 VA: 0x19C7198
	public bool get_IsNeedAdjustIconLabelScale() { }
}

// Namespace: 
private enum ServantOperationListViewItem.Type // TypeDefIndex: 10576
{
	// Fields
	public int value__; // 0x0
	public const ServantOperationListViewItem.Type NONE = 0;
	public const ServantOperationListViewItem.Type SERVANT = 1;
	public const ServantOperationListViewItem.Type COMMAND_CODE = 2;
}

// Namespace: 
private enum ServantOperationListViewItem.ServantAttributeKind // TypeDefIndex: 10577
{
	// Fields
	public int value__; // 0x0
	public const ServantOperationListViewItem.ServantAttributeKind None = 0;
	public const ServantOperationListViewItem.ServantAttributeKind Heroine = 1;
	public const ServantOperationListViewItem.ServantAttributeKind Limited = 2;
}

// Namespace: 
public class ServantOperationListViewItemDraw : BaseMonoBehaviour // TypeDefIndex: 10578
{
	// Fields
	[SerializeField] // RVA: 0xC761E0 Offset: 0xC761E0 VA: 0xC761E0
	private UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xC761F0 Offset: 0xC761F0 VA: 0xC761F0
	private ServantFaceIconComponent servantFaceIcon; // 0x20
	[SerializeField] // RVA: 0xC76200 Offset: 0xC76200 VA: 0xC76200
	private FlashingIconComponent partyIcon; // 0x28
	[SerializeField] // RVA: 0xC76210 Offset: 0xC76210 VA: 0xC76210
	private UISprite useSprite; // 0x30
	[SerializeField] // RVA: 0xC76220 Offset: 0xC76220 VA: 0xC76220
	private UISprite lockSprite; // 0x38
	[SerializeField] // RVA: 0xC76230 Offset: 0xC76230 VA: 0xC76230
	private UISprite choiceSprite; // 0x40
	[SerializeField] // RVA: 0xC76240 Offset: 0xC76240 VA: 0xC76240
	private UISprite maskSprite; // 0x48
	[SerializeField] // RVA: 0xC76250 Offset: 0xC76250 VA: 0xC76250
	private UILabel warningLabel; // 0x50
	[SerializeField] // RVA: 0xC76260 Offset: 0xC76260 VA: 0xC76260
	private DragSelectComponent dragSelect; // 0x58
	[SerializeField] // RVA: 0xC76270 Offset: 0xC76270 VA: 0xC76270
	private UISprite friendShipSprite; // 0x60
	[SerializeField] // RVA: 0xC76280 Offset: 0xC76280 VA: 0xC76280
	private UISprite chocolateSprite; // 0x68
	[SerializeField] // RVA: 0xC76290 Offset: 0xC76290 VA: 0xC76290
	private UISprite pushSprite; // 0x70
	[SerializeField] // RVA: 0xC762A0 Offset: 0xC762A0 VA: 0xC762A0
	private UISprite materialTdSprite; // 0x78

	// Methods

	// RVA: 0x19C71A0 Offset: 0x19C71A0 VA: 0x19C71A0
	public void .ctor() { }

	// RVA: 0x19C71A8 Offset: 0x19C71A8 VA: 0x19C71A8
	public void SetItem(ServantOperationListViewItem item, ServantOperationListViewItemDraw.DispMode mode, bool isSelectEnable, ServantOperationListViewManager.ModeKind modeKind) { }

	// RVA: 0x19C7B10 Offset: 0x19C7B10 VA: 0x19C7B10
	private void SetLabelText(UILabel label, string text) { }

	// RVA: 0x19C74A8 Offset: 0x19C74A8 VA: 0x19C74A8
	private void SetSpriteActive(UISprite sprite, bool isActive) { }

	// RVA: 0x19C739C Offset: 0x19C739C VA: 0x19C739C
	private void SetServantFaceIcon(ServantOperationListViewItem item, bool isServant, bool isCommandCode) { }

	// RVA: 0x19C7854 Offset: 0x19C7854 VA: 0x19C7854
	private void SetWarningText(ServantOperationListViewItem item, ServantOperationListViewManager.ModeKind modeKind, bool isServant, bool isCommandCode) { }

	// RVA: 0x19C7BB8 Offset: 0x19C7BB8 VA: 0x19C7BB8
	private string GetStatusText(ServantOperationListViewItem item, bool isServant, bool isCommandCode) { }

	// RVA: 0x19C7ECC Offset: 0x19C7ECC VA: 0x19C7ECC
	public void SetInput(ServantOperationListViewItem item, bool isSelectEnable) { }

	// RVA: 0x19C7568 Offset: 0x19C7568 VA: 0x19C7568
	private void SetDisp(ServantOperationListViewItem item, bool isSelectEnable) { }

	// RVA: 0x19C7FC4 Offset: 0x19C7FC4 VA: 0x19C7FC4
	public static ServantOperationListViewItemDraw.DispMode GetDispMode(ServantOperationListViewObject.InitMode initMode) { }
}

// Namespace: 
public enum ServantOperationListViewItemDraw.DispMode // TypeDefIndex: 10579
{
	// Fields
	public int value__; // 0x0
	public const ServantOperationListViewItemDraw.DispMode INVISIBLE = 0;
	public const ServantOperationListViewItemDraw.DispMode INVALID = 1;
	public const ServantOperationListViewItemDraw.DispMode VALID = 2;
	public const ServantOperationListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class ServantOperationListViewManager : ListViewManager // TypeDefIndex: 10580
{
	// Fields
	private static readonly int FILTER2_MAX_KIND_NUM; // 0x0
	[SerializeField] // RVA: 0xC762B0 Offset: 0xC762B0 VA: 0xC762B0
	private ServantOperationManager parentManager; // 0x138
	[SerializeField] // RVA: 0xC762C0 Offset: 0xC762C0 VA: 0xC762C0
	private UILabel selectDoneLabel; // 0x140
	[SerializeField] // RVA: 0xC762D0 Offset: 0xC762D0 VA: 0xC762D0
	private UISprite sortExplanationSprite; // 0x148
	[SerializeField] // RVA: 0xC762E0 Offset: 0xC762E0 VA: 0xC762E0
	private UISprite filterSprite; // 0x150
	[SerializeField] // RVA: 0xC762F0 Offset: 0xC762F0 VA: 0xC762F0
	private UISprite statusTabSprite; // 0x158
	[SerializeField] // RVA: 0xC76300 Offset: 0xC76300 VA: 0xC76300
	private UISprite lockTabSprite; // 0x160
	[SerializeField] // RVA: 0xC76310 Offset: 0xC76310 VA: 0xC76310
	private UISprite choiceTabSprite; // 0x168
	[SerializeField] // RVA: 0xC76320 Offset: 0xC76320 VA: 0xC76320
	private UISprite pushTabSprite; // 0x170
	[SerializeField] // RVA: 0xC76330 Offset: 0xC76330 VA: 0xC76330
	private UICommonButton statusTabButton; // 0x178
	[SerializeField] // RVA: 0xC76340 Offset: 0xC76340 VA: 0xC76340
	private UICommonButton lockTabButton; // 0x180
	[SerializeField] // RVA: 0xC76350 Offset: 0xC76350 VA: 0xC76350
	private UICommonButton choiceTabButton; // 0x188
	[SerializeField] // RVA: 0xC76360 Offset: 0xC76360 VA: 0xC76360
	private UICommonButton pushTabButton; // 0x190
	[SerializeField] // RVA: 0xC76370 Offset: 0xC76370 VA: 0xC76370
	private UILabel statusLabel; // 0x198
	[SerializeField] // RVA: 0xC76380 Offset: 0xC76380 VA: 0xC76380
	private ListViewItemSeed normalSizeSeed; // 0x1A0
	[SerializeField] // RVA: 0xC76390 Offset: 0xC76390 VA: 0xC76390
	private ListViewItemSeed smallSizeSeed; // 0x1A8
	[SerializeField] // RVA: 0xC763A0 Offset: 0xC763A0 VA: 0xC763A0
	private ListViewItemSeed extremelySmallSizeSeed; // 0x1B0
	[SerializeField] // RVA: 0xC763B0 Offset: 0xC763B0 VA: 0xC763B0
	private UICommonButton scaleChangeButton; // 0x1B8
	[SerializeField] // RVA: 0xC763C0 Offset: 0xC763C0 VA: 0xC763C0
	private UISprite scaleChangeButtonSprite; // 0x1C0
	private const int MinimumKeep = 1;
	public static readonly string SORT_SAVE_KEY; // 0x8
	private static ListViewSort servantSortInfo; // 0x10
	private static ListViewSort servantEquipSortInfo; // 0x18
	private static ListViewSort commandCodeSortInfo; // 0x20
	private ServantOperationListViewManager.InitMode initMode; // 0x1C8
	private ServantOperationListViewManager.ModeKind modeKind; // 0x1CC
	private Action<ServantOperationListViewItem> onSelectServant; // 0x1D0
	private int callbackCount; // 0x1D8
	private ServantOperationListViewManager.Kind kind; // 0x1DC
	private int sellEnableRestCnt; // 0x1E0
	private int selectSum; // 0x1E4
	private int dragSelectSum; // 0x1E8
	private int dragServantSelectSum; // 0x1EC
	private int dragStartIndex; // 0x1F0
	private int dragEndIndex; // 0x1F4
	private bool isDragSelect; // 0x1F8
	private bool isInConfirm; // 0x1F9
	private Action<bool> onRequestEnd; // 0x200
	private ListViewSort.ScaleType scaleType; // 0x208
	[CompilerGeneratedAttribute] // RVA: 0xC763D0 Offset: 0xC763D0 VA: 0xC763D0
	private static Action <>f__am$cache0; // 0x28

	// Properties
	public List<ServantOperationListViewObject> ObjectList { get; }
	public List<ServantOperationListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x19C7FE8 Offset: 0x19C7FE8 VA: 0x19C7FE8
	public void .ctor() { }

	// RVA: 0x19C7FF0 Offset: 0x19C7FF0 VA: 0x19C7FF0
	public static void DeleteContinueData() { }

	// RVA: 0x19C8090 Offset: 0x19C8090 VA: 0x19C8090
	public static void InitLoad() { }

	// RVA: 0x19C8130 Offset: 0x19C8130 VA: 0x19C8130
	public List<ServantOperationListViewObject> get_ObjectList() { }

	// RVA: 0x19C82BC Offset: 0x19C82BC VA: 0x19C82BC
	public List<ServantOperationListViewObject> get_ClippingObjectList() { }

	// RVA: 0x19C8508 Offset: 0x19C8508 VA: 0x19C8508
	public void CreateList(ServantOperationListViewManager.Kind kind, ServantOperationListViewManager.ModeKind modeKind) { }

	// RVA: 0x19C86A0 Offset: 0x19C86A0 VA: 0x19C86A0
	private void SetListViewSort(ServantOperationListViewManager.Kind kind) { }

	// RVA: 0x19C9154 Offset: 0x19C9154 VA: 0x19C9154
	private ListViewSort GetSortInfo(ServantOperationListViewManager.Kind kind) { }

	// RVA: 0x19C9240 Offset: 0x19C9240 VA: 0x19C9240
	private ListViewSort.ListKind GetSortKind(ServantOperationListViewManager.Kind kind) { }

	// RVA: 0x19C87B4 Offset: 0x19C87B4 VA: 0x19C87B4
	private UserServantEntity[] GetUserServantEntities(ServantOperationListViewManager.Kind kind) { }

	// RVA: 0x19C88AC Offset: 0x19C88AC VA: 0x19C88AC
	private UserCommandCodeEntity[] GetUserCommandCodeEntities(ServantOperationListViewManager.Kind kind) { }

	// RVA: 0x19C8D5C Offset: 0x19C8D5C VA: 0x19C8D5C
	private string GetEmptyMessageCode(ServantOperationListViewManager.Kind kind, bool isNotEmpty) { }

	// RVA: 0x19C894C Offset: 0x19C894C VA: 0x19C894C
	private int SetSellEnableRestCount(UserServantEntity[] userServantEntities, UserGameEntity userGameEntity) { }

	// RVA: 0x19C8B70 Offset: 0x19C8B70 VA: 0x19C8B70
	private int SetSellEnableRestCount(UserCommandCodeEntity[] userCommandCodeEntities, UserGameEntity userGameEntity) { }

	// RVA: 0x19C8DFC Offset: 0x19C8DFC VA: 0x19C8DFC
	public void SetStatusKind(ServantOperationListViewManager.ModeKind modeKind) { }

	// RVA: 0x19C92F8 Offset: 0x19C92F8 VA: 0x19C92F8
	private void SetTabButton(UICommonButton tabButton, UISprite tabSprite, ServantOperationListViewManager.ModeKind selectedModeKind, ServantOperationListViewManager.ModeKind tabKind) { }

	// RVA: 0x19C951C Offset: 0x19C951C VA: 0x19C951C
	private string GetTabSpriteName(ServantOperationListViewManager.ModeKind kind, bool isSelected) { }

	// RVA: 0x19C9404 Offset: 0x19C9404 VA: 0x19C9404
	private string GetStatusText(ServantOperationListViewManager.ModeKind modeKind) { }

	// RVA: 0x19C8720 Offset: 0x19C8720 VA: 0x19C8720
	public void SetScaleKind(ListViewSort.ScaleType scaleKind) { }

	// RVA: 0x19C960C Offset: 0x19C960C VA: 0x19C960C
	private void RefrashListDisp() { }

	// RVA: 0x19C9928 Offset: 0x19C9928 VA: 0x19C9928
	public void SumItems(out int qp, out int mana, out int rarePri) { }

	// RVA: 0x19C9B48 Offset: 0x19C9B48 VA: 0x19C9B48
	public void DestroyList() { }

	// RVA: 0x19C9B84 Offset: 0x19C9B84 VA: 0x19C9B84
	public void ModifyItem(long selectedId) { }

	// RVA: 0x19C9BD4 Offset: 0x19C9BD4 VA: 0x19C9BD4
	private void ModifyCommandCodes(ServantOperationListViewManager.Kind kind, long selectedId) { }

	// RVA: 0x19C9EE8 Offset: 0x19C9EE8 VA: 0x19C9EE8
	private void ModifyServants(ServantOperationListViewManager.Kind kind, long selectedId) { }

	// RVA: 0x19CA240 Offset: 0x19CA240 VA: 0x19CA240
	public void ModifyLockItem(long usrSvtId, bool isInit, bool isIconSizeChange = False) { }

	// RVA: 0x19CA59C Offset: 0x19CA59C VA: 0x19CA59C
	public void ModifyLockItem(ServantOperationListViewItem item, long usrSvtId, bool isInit, bool isIconSizeChange = False) { }

	// RVA: 0x19CA7F8 Offset: 0x19CA7F8 VA: 0x19CA7F8
	public void ModifyLockItemComandCode(long usrCmdId, bool isInit, bool isIconSizeChange = False) { }

	// RVA: 0x19CAB3C Offset: 0x19CAB3C VA: 0x19CAB3C
	private void ModifyList(bool isIconSizeChange = False) { }

	// RVA: 0x19CAB90 Offset: 0x19CAB90 VA: 0x19CAB90
	private void ModifyLockedServants(UserServantEntity[] userServantEntities, bool isIconSizeChange) { }

	// RVA: 0x19CADE0 Offset: 0x19CADE0 VA: 0x19CADE0
	private void ModifyLockedCommandCodes(UserCommandCodeEntity[] userCommandCodeEntities, bool isIconSizeChange) { }

	// RVA: 0x19CB02C Offset: 0x19CB02C VA: 0x19CB02C
	private void ModifyPushedServant() { }

	// RVA: 0x19CB1E8 Offset: 0x19CB1E8 VA: 0x19CB1E8 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x19CB4C0 Offset: 0x19CB4C0 VA: 0x19CB4C0
	public void SetMode(ServantOperationListViewManager.InitMode mode, Action<ServantOperationListViewItem> onSelectServant) { }

	// RVA: 0x19CB4C8 Offset: 0x19CB4C8 VA: 0x19CB4C8
	public void SetMode(ServantOperationListViewManager.InitMode initMode) { }

	// RVA: 0x19CB650 Offset: 0x19CB650 VA: 0x19CB650
	private bool SetDispObjectsByListViewItem(ServantOperationListViewItem item) { }

	// RVA: 0x19CB884 Offset: 0x19CB884 VA: 0x19CB884
	private void RequestListObject(ServantOperationListViewObject.InitMode mode) { }

	// RVA: 0x19CBB2C Offset: 0x19CBB2C VA: 0x19CBB2C
	private void OnMoveEnd() { }

	// RVA: 0x19CBC10 Offset: 0x19CBC10 VA: 0x19CBC10
	public List<long> GetSelectedServantIdList() { }

	// RVA: 0x19CBD9C Offset: 0x19CBD9C VA: 0x19CBD9C
	public List<long> GetSelectedCommandCodeIdList() { }

	// RVA: 0x19CBF28 Offset: 0x19CBF28 VA: 0x19CBF28
	public int GetSelectedOrderByUserServantId(long userServantId) { }

	// RVA: 0x19CC0AC Offset: 0x19CC0AC VA: 0x19CC0AC
	public int GetSelectedOrderByUserCommandCodeId(long userCommandCodeId) { }

	// RVA: 0x19CC230 Offset: 0x19CC230 VA: 0x19CC230
	public List<ServantOperationListViewItem> GetEquipMaterialList() { }

	// RVA: 0x19CC3C8 Offset: 0x19CC3C8 VA: 0x19CC3C8
	public List<ServantOperationListViewItem> GetSelectEquipedCommandCodeServantList() { }

	// RVA: 0x19CC574 Offset: 0x19CC574 VA: 0x19CC574
	public ServantOperationListViewManager.Kind GetKind() { }

	// RVA: 0x19CC57C Offset: 0x19CC57C VA: 0x19CC57C
	public void ReleaseAll() { }

	// RVA: 0x19CC6A8 Offset: 0x19CC6A8 VA: 0x19CC6A8
	private void OnClickSelectListView(ServantOperationListViewItem selectItem) { }

	// RVA: 0x19CCBA0 Offset: 0x19CCBA0 VA: 0x19CCBA0
	public void decrementNumber(int selectNum) { }

	// RVA: 0x19CCAC8 Offset: 0x19CCAC8 VA: 0x19CCAC8
	private void OnLongPushListView(ServantOperationListViewItem selectItem) { }

	// RVA: 0x19CCCE4 Offset: 0x19CCCE4 VA: 0x19CCCE4
	private void CallOnSelectServant(ServantOperationListViewItem item) { }

	// RVA: 0x19CCD5C Offset: 0x19CCD5C VA: 0x19CCD5C
	public void OnClickLockModeItem(ServantOperationListViewItem selectItem) { }

	// RVA: 0x19CCE2C Offset: 0x19CCE2C VA: 0x19CCE2C
	public void OnClickChoiceModeItem(ServantOperationListViewItem selectItem) { }

	// RVA: 0x19CCEFC Offset: 0x19CCEFC VA: 0x19CCEFC
	public void OnClickPushModeItem(ServantOperationListViewItem selectItem) { }

	// RVA: 0x19CD614 Offset: 0x19CD614 VA: 0x19CD614
	private void PushRequest(ServantOperationListViewItem selectItem) { }

	// RVA: 0x19CD9BC Offset: 0x19CD9BC VA: 0x19CD9BC
	private void EndCardFavoriteRequest(string result) { }

	// RVA: 0x19CD9F0 Offset: 0x19CD9F0 VA: 0x19CD9F0
	public void OnClickSortKind() { }

	// RVA: 0x19CDB1C Offset: 0x19CDB1C VA: 0x19CDB1C
	private ServantSortSelectMenu.Kind GetMenuKind(ServantOperationListViewManager.Kind kind) { }

	// RVA: 0x19CDB4C Offset: 0x19CDB4C VA: 0x19CDB4C
	private void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x19CDBDC Offset: 0x19CDBDC VA: 0x19CDBDC
	public void OnClickFilter2Kind() { }

	// RVA: 0x19CDCF4 Offset: 0x19CDCF4 VA: 0x19CDCF4
	public void OnClickFilterKind() { }

	// RVA: 0x19CDE2C Offset: 0x19CDE2C VA: 0x19CDE2C
	private ServantFilterSelectMenu.Kind GetServantFilterSelectMenuKind(ServantOperationListViewManager.Kind kind) { }

	// RVA: 0x19CDE58 Offset: 0x19CDE58 VA: 0x19CDE58
	private ListViewManager GetListViewManagerForServantFilterSelectMenu(ServantOperationListViewManager.Kind kind) { }

	// RVA: 0x19CDE68 Offset: 0x19CDE68 VA: 0x19CDE68
	public void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x19C90C0 Offset: 0x19C90C0 VA: 0x19C90C0
	private void SetFilterButtonImage() { }

	// RVA: 0x19CDFB0 Offset: 0x19CDFB0 VA: 0x19CDFB0
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x19C6ABC Offset: 0x19C6ABC VA: 0x19C6ABC
	public long GetAmountSortValue(int svtId) { }

	// RVA: 0x19C6BCC Offset: 0x19C6BCC VA: 0x19C6BCC
	public long GetCommandCodeAmountSortValue(int commandCodeId) { }

	// RVA: 0x19CE0A0 Offset: 0x19CE0A0 VA: 0x19CE0A0 Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x19CE38C Offset: 0x19CE38C VA: 0x19CE38C
	public bool IsDragEnable(ServantOperationListViewItem item) { }

	// RVA: 0x19CCACC Offset: 0x19CCACC VA: 0x19CCACC
	public bool IsSelectEnable(ServantOperationListViewItem item, int addSum = 0, int addServantSum = 0) { }

	// RVA: 0x19C926C Offset: 0x19C926C VA: 0x19C926C
	private void ChangeSellEnableRestCount(bool isPlus, ServantOperationListViewItem item) { }

	// RVA: 0x19CE40C Offset: 0x19CE40C VA: 0x19CE40C
	private void OnClickListView(ListViewObject obj) { }

	// RVA: 0x19CE410 Offset: 0x19CE410 VA: 0x19CE410
	public void ChangeSortKindDisp() { }

	// RVA: 0x19CE41C Offset: 0x19CE41C VA: 0x19CE41C
	public void ChangeFilterKindDisp() { }

	// RVA: 0x19CE420 Offset: 0x19CE420 VA: 0x19CE420
	public void OnClickScaleChange() { }

	// RVA: 0x19CE574 Offset: 0x19CE574 VA: 0x19CE574
	public void OnClickTabStatus() { }

	// RVA: 0x19CE7C0 Offset: 0x19CE7C0 VA: 0x19CE7C0
	public void EndClickTabStatus(bool isRequest) { }

	// RVA: 0x19CE810 Offset: 0x19CE810 VA: 0x19CE810
	public void OnClickTabLock() { }

	// RVA: 0x19CE8EC Offset: 0x19CE8EC VA: 0x19CE8EC
	public void EndClickTabLock(bool isRequest) { }

	// RVA: 0x19CEAC8 Offset: 0x19CEAC8 VA: 0x19CEAC8
	public void OnClickTabChoice() { }

	// RVA: 0x19CEBA4 Offset: 0x19CEBA4 VA: 0x19CEBA4
	public void EndClickTabChoice(bool isRequest) { }

	// RVA: 0x19CEBF8 Offset: 0x19CEBF8 VA: 0x19CEBF8
	public void OnClickTabPush() { }

	// RVA: 0x19CECDC Offset: 0x19CECDC VA: 0x19CECDC
	public void EndClickTabPush(bool isRequest) { }

	// RVA: 0x19CED30 Offset: 0x19CED30 VA: 0x19CED30
	private bool TryGetItemCollectId(ServantOperationListViewItem item, out long id) { }

	// RVA: 0x19CE638 Offset: 0x19CE638 VA: 0x19CE638
	public void StatusRequest(Action<bool> onRequestEnd) { }

	// RVA: 0x19CEE68 Offset: 0x19CEE68 VA: 0x19CEE68
	private bool GetSwapList(ServantOperationListViewManager.ModeKind modekind, out long[] changeIds, out long[] revokeIds) { }

	// RVA: 0x19CF140 Offset: 0x19CF140 VA: 0x19CF140
	private bool GetIsSwap(ServantOperationListViewItem item, ServantOperationListViewManager.ModeKind modeKind) { }

	// RVA: 0x19CF1A0 Offset: 0x19CF1A0 VA: 0x19CF1A0
	private bool GetIsSelected(ServantOperationListViewItem item, ServantOperationListViewManager.ModeKind modeKind) { }

	// RVA: 0x19CF200 Offset: 0x19CF200 VA: 0x19CF200
	private void EndStatusSync(string result) { }

	// RVA: 0x19CF0C8 Offset: 0x19CF0C8 VA: 0x19CF0C8
	private void CallRequestEnd(bool result) { }

	// RVA: 0x19CF208 Offset: 0x19CF208 VA: 0x19CF208
	public void InitBack() { }

	// RVA: 0x19CF234 Offset: 0x19CF234 VA: 0x19CF234
	public ServantOperationListViewManager.ModeKind GetModeKind() { }

	// RVA: 0x19CF23C Offset: 0x19CF23C VA: 0x19CF23C
	public bool IsDragStart() { }

	// RVA: 0x19CF24C Offset: 0x19CF24C VA: 0x19CF24C
	public bool GetDragSelect() { }

	// RVA: 0x19CF254 Offset: 0x19CF254 VA: 0x19CF254
	private void SetDragSelectItem(int startIndex, int endIndex) { }

	// RVA: 0x19CF454 Offset: 0x19CF454 VA: 0x19CF454
	private void SetItemDragSelectNum(int start, int end) { }

	// RVA: 0x19CF374 Offset: 0x19CF374 VA: 0x19CF374
	private int GetDragStartIndex(int start, int end) { }

	// RVA: 0x19CF38C Offset: 0x19CF38C VA: 0x19CF38C
	private int GetDragEndIndex(int start, int end) { }

	// RVA: 0x19CF3A4 Offset: 0x19CF3A4 VA: 0x19CF3A4
	private void SetItemDragSelect(int from, int to, int start, int end, bool isDragSelect, bool isReverse) { }

	// RVA: 0x19CF8C8 Offset: 0x19CF8C8 VA: 0x19CF8C8
	private void SetDragSelect(int index, bool isDragSelect) { }

	// RVA: 0x19CFAE0 Offset: 0x19CFAE0 VA: 0x19CFAE0
	private void SetIsItemDragSelect(ServantOperationListViewItem item, bool isDragSelect) { }

	// RVA: 0x19CFC04 Offset: 0x19CFC04 VA: 0x19CFC04
	public void SetDragStart(int startIndex, bool isDragSelect) { }

	// RVA: 0x19CFDE4 Offset: 0x19CFDE4 VA: 0x19CFDE4
	public void SetDragMove(int moveIndex) { }

	// RVA: 0x19CFE04 Offset: 0x19CFE04 VA: 0x19CFE04
	public void SetDragEnd() { }

	// RVA: 0x19CFFC4 Offset: 0x19CFFC4 VA: 0x19CFFC4
	private void SetDecideDragSelect(int start, int end) { }

	// RVA: 0x19D0010 Offset: 0x19D0010 VA: 0x19D0010
	private void DecideDragSelect(int index) { }

	// RVA: 0x19D0134 Offset: 0x19D0134 VA: 0x19D0134
	private void SetIsItemSelect(ServantOperationListViewItem item) { }

	// RVA: 0x19D02A8 Offset: 0x19D02A8 VA: 0x19D02A8
	public void CancelDragEnd() { }

	// RVA: 0x19D031C Offset: 0x19D031C VA: 0x19D031C
	private void SetCancelDragSelect(int start, int end) { }

	// RVA: 0x19D0368 Offset: 0x19D0368 VA: 0x19D0368
	private void CancelDragSelect(int index) { }

	// RVA: 0x19D0460 Offset: 0x19D0460 VA: 0x19D0460
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1380 Offset: 0xCD1380 VA: 0xCD1380
	// RVA: 0x19D0620 Offset: 0x19D0620 VA: 0x19D0620
	private static void <EndSelectFilterKind>m__0() { }
}

// Namespace: 
public enum ServantOperationListViewManager.Kind // TypeDefIndex: 10581
{
	// Fields
	public int value__; // 0x0
	public const ServantOperationListViewManager.Kind SERVANT = 0;
	public const ServantOperationListViewManager.Kind SERVANT_EQUIP = 1;
	public const ServantOperationListViewManager.Kind COMMAND_CODE = 2;
	public const ServantOperationListViewManager.Kind SELL = 3;
}

// Namespace: 
public enum ServantOperationListViewManager.ModeKind // TypeDefIndex: 10582
{
	// Fields
	public int value__; // 0x0
	public const ServantOperationListViewManager.ModeKind SELECT = 0;
	public const ServantOperationListViewManager.ModeKind LOCK = 1;
	public const ServantOperationListViewManager.ModeKind CHOICE = 2;
	public const ServantOperationListViewManager.ModeKind PUSH = 3;
}

// Namespace: 
public enum ServantOperationListViewManager.InitMode // TypeDefIndex: 10583
{
	// Fields
	public int value__; // 0x0
	public const ServantOperationListViewManager.InitMode NONE = 0;
	public const ServantOperationListViewManager.InitMode VALID = 1;
	public const ServantOperationListViewManager.InitMode INPUT = 2;
}

// Namespace: 
public enum ServantOperationListViewManager.ResultKind // TypeDefIndex: 10584
{
	// Fields
	public int value__; // 0x0
	public const ServantOperationListViewManager.ResultKind NONE = 0;
	public const ServantOperationListViewManager.ResultKind SELECT_LIST = 1;
	public const ServantOperationListViewManager.ResultKind SERVANT_STATUS = 2;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC453B4 Offset: 0xC453B4 VA: 0xC453B4
private sealed class ServantOperationListViewManager.<OnClickPushModeItem>c__AnonStorey0 // TypeDefIndex: 10585
{
	// Fields
	internal ServantOperationListViewItem selectItem; // 0x10
	internal ServantOperationListViewManager $this; // 0x18

	// Methods

	// RVA: 0x19CD60C Offset: 0x19CD60C VA: 0x19CD60C
	public void .ctor() { }

	// RVA: 0x19D0624 Offset: 0x19D0624 VA: 0x19D0624
	internal void <>m__0(bool isDecide) { }

	// RVA: 0x19D06F0 Offset: 0x19D06F0 VA: 0x19D06F0
	internal void <>m__1() { }
}

// Namespace: 
public class ServantOperationListViewObject : ListViewObject // TypeDefIndex: 10586
{
	// Fields
	[SerializeField] // RVA: 0xC763E0 Offset: 0xC763E0 VA: 0xC763E0
	private UITouchPress touchPress; // 0x70
	private ServantOperationListViewObject.State state; // 0x78
	private Action onMoveEnd; // 0x80
	private ServantOperationListViewItemDraw itemDraw; // 0x88
	private UIDragDropListViewItem itemDrag; // 0x90
	private ServantOperationListViewItemDraw.DispMode dispMode; // 0x98
	private GameObject dragObject; // 0xA0

	// Methods

	// RVA: 0x19D0720 Offset: 0x19D0720 VA: 0x19D0720
	public void .ctor() { }

	// RVA: 0x19D0788 Offset: 0x19D0788 VA: 0x19D0788
	private void Awake() { }

	// RVA: 0x19D0814 Offset: 0x19D0814 VA: 0x19D0814
	private void OnDestroy() { }

	// RVA: 0x19C8484 Offset: 0x19C8484 VA: 0x19C8484
	public ServantOperationListViewItem GetItem() { }

	// RVA: 0x19D08C0 Offset: 0x19D08C0 VA: 0x19D08C0 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x19D08F0 Offset: 0x19D08F0 VA: 0x19D08F0 Slot: 5
	public override void SetItem(ListViewItem item) { }
