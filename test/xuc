	// RVA: 0x1FCA790 Offset: 0x1FCA790 VA: 0x1FCA790
	public void Init(SupportServantData supportServantData, EventCampaignEntity[] friendPointCampaigns, int deckNum) { }

	// RVA: 0x1FCC430 Offset: 0x1FCC430 VA: 0x1FCC430
	public void SetDragPrefab(GameObject dragPrefab, SupportSelectListViewManager manager) { }

	// RVA: 0x1FCB1F0 Offset: 0x1FCB1F0 VA: 0x1FCB1F0
	public SupportSelectListViewItem GetItem() { }

	// RVA: 0x1FCB664 Offset: 0x1FCB664 VA: 0x1FCB664
	public void clearItemObj() { }

	// RVA: 0x1FCD910 Offset: 0x1FCD910 VA: 0x1FCD910
	public void clearItemObj(int classPos) { }

	// RVA: 0x1FCB3F0 Offset: 0x1FCB3F0 VA: 0x1FCB3F0
	public void setItemObj(int deckNum) { }

	// RVA: 0x1FCDA98 Offset: 0x1FCDA98 VA: 0x1FCDA98
	public void setItemObj(int deckNum, int classPos) { }

	// RVA: 0x1FCB858 Offset: 0x1FCB858 VA: 0x1FCB858
	public void setDisp(bool disp) { }

	// RVA: 0x1FCBF90 Offset: 0x1FCBF90 VA: 0x1FCBF90
	public void ResetEventCampaign(EventCampaignEntity[] friendPointCampaigns) { }

	// RVA: 0x1FCDB98 Offset: 0x1FCDB98 VA: 0x1FCDB98
	public void callbackFuncObj(SupportSelectMenu.ResultKind result, int d, int n) { }

	// RVA: 0x1FCD784 Offset: 0x1FCD784 VA: 0x1FCD784
	private void setUpperClassIcon(int classPos) { }

	// RVA: 0x1FCCEF0 Offset: 0x1FCCEF0 VA: 0x1FCCEF0
	public void UpdateExplanationLabel(bool displaySwapInfo) { }

	// RVA: 0x1FCCFA4 Offset: 0x1FCCFA4 VA: 0x1FCCFA4
	public void SetActiveDragSwapGuide(bool flag) { }

	// RVA: 0x1FCDD30 Offset: 0x1FCDD30 VA: 0x1FCDD30
	public void OnClickListView() { }

	// RVA: 0x1FCD574 Offset: 0x1FCD574 VA: 0x1FCD574
	private void InitAlphaMask() { }

	// RVA: 0x1FCD284 Offset: 0x1FCD284 VA: 0x1FCD284
	private void UpdateAlphaMask() { }

	// RVA: 0x1FCDD34 Offset: 0x1FCDD34 VA: 0x1FCDD34
	private void UpdateCollider(bool enable) { }

	// RVA: 0x1FCDDE0 Offset: 0x1FCDDE0 VA: 0x1FCDDE0
	private static void .cctor() { }
}

// Namespace: 
public class SupportSelectMenu : BaseMenu // TypeDefIndex: 10799
{
	// Fields
	private readonly Vector3 SUPPORT_EDIT_BUTTON_POSITION_EDTTING; // 0x58
	private readonly Vector3 SUPPORT_EDIT_BUTTON_POSITION_NOT_EDIT; // 0x64
	[SerializeField] // RVA: 0xCE61E0 Offset: 0xCE61E0 VA: 0xCE61E0
	protected UICommonButton decideButton; // 0x70
	[SerializeField] // RVA: 0xCE61F0 Offset: 0xCE61F0 VA: 0xCE61F0
	protected UICommonButton swapButton; // 0x78
	[SerializeField] // RVA: 0xCE6200 Offset: 0xCE6200 VA: 0xCE6200
	protected UICommonButton editButton; // 0x80
	[SerializeField] // RVA: 0xCE6210 Offset: 0xCE6210 VA: 0xCE6210
	protected UICommonButton cancelButton; // 0x88
	[SerializeField] // RVA: 0xCE6220 Offset: 0xCE6220 VA: 0xCE6220
	protected UISprite helpButton; // 0x90
	[SerializeField] // RVA: 0xCE6230 Offset: 0xCE6230 VA: 0xCE6230
	protected GameObject headerObject; // 0x98
	[SerializeField] // RVA: 0xCE6240 Offset: 0xCE6240 VA: 0xCE6240
	protected UISprite fixBaseSprite; // 0xA0
	[SerializeField] // RVA: 0xCE6250 Offset: 0xCE6250 VA: 0xCE6250
	protected UISprite fixMainQuestFrameSprite; // 0xA8
	[SerializeField] // RVA: 0xCE6260 Offset: 0xCE6260 VA: 0xCE6260
	protected UIButton[] fixMainQuestSupportDeckButtons; // 0xB0
	[SerializeField] // RVA: 0xCE6270 Offset: 0xCE6270 VA: 0xCE6270
	protected UISprite[] fixMainQuestSupportDeckLabelSprites; // 0xB8
	[SerializeField] // RVA: 0xCE6280 Offset: 0xCE6280 VA: 0xCE6280
	protected UISprite[] fixMainQuestSupportDeckFrameSprites; // 0xC0
	[SerializeField] // RVA: 0xCE6290 Offset: 0xCE6290 VA: 0xCE6290
	protected UISprite fixEventQuestFrameSprite; // 0xC8
	[SerializeField] // RVA: 0xCE62A0 Offset: 0xCE62A0 VA: 0xCE62A0
	protected UIButton[] fixEventQuestSupportDeckButtons; // 0xD0
	[SerializeField] // RVA: 0xCE62B0 Offset: 0xCE62B0 VA: 0xCE62B0
	protected UISprite[] fixEventQuestSupportDeckLabelSprites; // 0xD8
	[SerializeField] // RVA: 0xCE62C0 Offset: 0xCE62C0 VA: 0xCE62C0
	protected UISprite[] fixEventQuestSupportDeckFrameSprites; // 0xE0
	[SerializeField] // RVA: 0xCE62D0 Offset: 0xCE62D0 VA: 0xCE62D0
	protected GameObject indexItemSeed; // 0xE8
	[SerializeField] // RVA: 0xCE62E0 Offset: 0xCE62E0 VA: 0xCE62E0
	protected UISprite supportDeckNum; // 0xF0
	[SerializeField] // RVA: 0xCE62F0 Offset: 0xCE62F0 VA: 0xCE62F0
	protected UIGrid indexGrid; // 0xF8
	[SerializeField] // RVA: 0xCE6300 Offset: 0xCE6300 VA: 0xCE6300
	protected SupportSelectListViewManager supportSelectListViewManager; // 0x100
	[SerializeField] // RVA: 0xCE6310 Offset: 0xCE6310 VA: 0xCE6310
	public SupportSelectListViewIndicator indicator; // 0x108
	[SerializeField] // RVA: 0xCE6320 Offset: 0xCE6320 VA: 0xCE6320
	protected UIGrid currentSupportDeckSpriteGrid; // 0x110
	[SerializeField] // RVA: 0xCE6330 Offset: 0xCE6330 VA: 0xCE6330
	protected UISprite currentMainQuestSupportSprite; // 0x118
	[SerializeField] // RVA: 0xCE6340 Offset: 0xCE6340 VA: 0xCE6340
	protected UISprite currentEventQuestSupportSprite; // 0x120
	[SerializeField] // RVA: 0xCE6350 Offset: 0xCE6350 VA: 0xCE6350
	protected UIGrid applySupportDeckGrid; // 0x128
	[SerializeField] // RVA: 0xCE6360 Offset: 0xCE6360 VA: 0xCE6360
	protected UISprite applyMainQuestSupport; // 0x130
	[SerializeField] // RVA: 0xCE6370 Offset: 0xCE6370 VA: 0xCE6370
	protected UISprite applyMainQuestSupportFrame; // 0x138
	[SerializeField] // RVA: 0xCE6380 Offset: 0xCE6380 VA: 0xCE6380
	protected UISprite applyEventQuestSupport; // 0x140
	[SerializeField] // RVA: 0xCE6390 Offset: 0xCE6390 VA: 0xCE6390
	protected UISprite applyEventQuestSupportFrame; // 0x148
	[SerializeField] // RVA: 0xCE63A0 Offset: 0xCE63A0 VA: 0xCE63A0
	protected BoxCollider namePanelCollider; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xCE63B0 Offset: 0xCE63B0 VA: 0xCE63B0
	[DebuggerBrowsableAttribute] // RVA: 0xCE63B0 Offset: 0xCE63B0 VA: 0xCE63B0
	private SupportSelectMenu.CallbackFunc callbackFunc; // 0x158
	[CompilerGeneratedAttribute] // RVA: 0xCE63EC Offset: 0xCE63EC VA: 0xCE63EC
	[DebuggerBrowsableAttribute] // RVA: 0xCE63EC Offset: 0xCE63EC VA: 0xCE63EC
	private SupportSelectMenu.DragSwapCallbackFunc dragSwapCallbackFunc; // 0x160
	protected SupportServantData[] supportServantData; // 0x168
	[CompilerGeneratedAttribute] // RVA: 0xCE6428 Offset: 0xCE6428 VA: 0xCE6428
	private static Func<int, bool> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCE6438 Offset: 0xCE6438 VA: 0xCE6438
	private static Func<int, bool> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x1FCE45C Offset: 0x1FCE45C VA: 0x1FCE45C
	public void .ctor() { }

	// RVA: 0x1FCE534 Offset: 0x1FCE534 VA: 0x1FCE534
	protected void add_callbackFunc(SupportSelectMenu.CallbackFunc value) { }

	// RVA: 0x1FCE624 Offset: 0x1FCE624 VA: 0x1FCE624
	protected void remove_callbackFunc(SupportSelectMenu.CallbackFunc value) { }

	// RVA: 0x1FCE714 Offset: 0x1FCE714 VA: 0x1FCE714
	protected void add_dragSwapCallbackFunc(SupportSelectMenu.DragSwapCallbackFunc value) { }

	// RVA: 0x1FCE804 Offset: 0x1FCE804 VA: 0x1FCE804
	protected void remove_dragSwapCallbackFunc(SupportSelectMenu.DragSwapCallbackFunc value) { }

	// RVA: 0x1FCE8F4 Offset: 0x1FCE8F4 VA: 0x1FCE8F4
	public void Init() { }

	// RVA: 0x1FCE900 Offset: 0x1FCE900 VA: 0x1FCE900
	private void createIndexItem(int deckNum) { }

	// RVA: 0x1FCECE4 Offset: 0x1FCECE4 VA: 0x1FCECE4
	public void Open(SupportServantData[] supportServantData, int mainDeckIdx, SupportSelectMenu.CallbackFunc callback, SupportSelectMenu.DragSwapCallbackFunc dragSwapCallbackFunc) { }

	// RVA: 0x1FCF008 Offset: 0x1FCF008 VA: 0x1FCF008
	public void SetActiveHeader(bool active) { }

	// RVA: 0x1FCF040 Offset: 0x1FCF040 VA: 0x1FCF040
	public void SetActiveSupportApplyIcon(int nowDeckId, int[] fixMainDeckIds, int[] fixEventDeckIds) { }

	// RVA: 0x1FCF410 Offset: 0x1FCF410 VA: 0x1FCF410
	public void HideActiveSupportApplyIcon() { }

	// RVA: 0x1FCF508 Offset: 0x1FCF508 VA: 0x1FCF508
	public void SetActiveCurrentSupportSprite(bool mainQuestActive, bool eventQuestActive, int mainNo = 0, int eventNo = 0) { }

	// RVA: 0x1FCF79C Offset: 0x1FCF79C VA: 0x1FCF79C
	public SupportSelectListViewItem GetCenterItem() { }

	// RVA: 0x1FCF840 Offset: 0x1FCF840 VA: 0x1FCF840
	public void Active() { }

	// RVA: 0x1FCEF84 Offset: 0x1FCEF84 VA: 0x1FCEF84
	public void Redisp() { }

	// RVA: 0x1FCF878 Offset: 0x1FCF878 VA: 0x1FCF878
	public void Reset(int classPos = -1) { }

	// RVA: 0x1FCF924 Offset: 0x1FCF924 VA: 0x1FCF924
	public void Close() { }

	// RVA: 0x1FCF970 Offset: 0x1FCF970 VA: 0x1FCF970
	protected void Callback(SupportSelectMenu.ResultKind result, int d = -1, int n = -1) { }

	// RVA: 0x1FCF984 Offset: 0x1FCF984 VA: 0x1FCF984
	public void buttonDispSetting(bool flag) { }

	// RVA: 0x1FCFAD0 Offset: 0x1FCFAD0 VA: 0x1FCFAD0
	public void SetActiveFixDeckButton(bool active) { }

	// RVA: 0x1FCFCA8 Offset: 0x1FCFCA8 VA: 0x1FCFCA8
	public void SetupFooterButtons(bool isEditting) { }

	// RVA: 0x1FCFDFC Offset: 0x1FCFDFC VA: 0x1FCFDFC
	public void SetAbleToSwapDrag(bool flag) { }

	// RVA: 0x1FCFE40 Offset: 0x1FCFE40 VA: 0x1FCFE40
	public void setActiveDeckNameChangeButton(bool active) { }

	// RVA: 0x1FCF814 Offset: 0x1FCF814 VA: 0x1FCF814
	public int getPageIdx() { }

	// RVA: 0x1FCEF4C Offset: 0x1FCEF4C VA: 0x1FCEF4C
	public void moveCenterItem(int centerIdx) { }

	// RVA: 0x1FCFE78 Offset: 0x1FCFE78 VA: 0x1FCFE78
	public void SetFixDeckButton(int currentId, bool isEventButton, int[] fixDeckIds) { }

	// RVA: 0x1FD0124 Offset: 0x1FD0124 VA: 0x1FD0124
	public void OnClickDecide() { }

	// RVA: 0x1FD0144 Offset: 0x1FD0144 VA: 0x1FD0144
	public void OnClickTab(GameObject idxSprite) { }

	// RVA: 0x1FD0200 Offset: 0x1FD0200 VA: 0x1FD0200
	public void OnClickSupportEdit() { }

	// RVA: 0x1FD0290 Offset: 0x1FD0290 VA: 0x1FD0290
	public void OnClickSwap() { }

	// RVA: 0x1FD0320 Offset: 0x1FD0320 VA: 0x1FD0320
	public void OnClickDeckName() { }

	// RVA: 0x1FD03B0 Offset: 0x1FD03B0 VA: 0x1FD03B0
	public void OnClickCancel() { }

	// RVA: 0x1FD0440 Offset: 0x1FD0440 VA: 0x1FD0440
	public void onClickHelpButton() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F2C4 Offset: 0xD3F2C4 VA: 0xD3F2C4
	// RVA: 0x1FD04B8 Offset: 0x1FD04B8 VA: 0x1FD04B8
	private static bool <SetActiveSupportApplyIcon>m__0(int x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F2D4 Offset: 0xD3F2D4 VA: 0xD3F2D4
	// RVA: 0x1FD04C4 Offset: 0x1FD04C4 VA: 0x1FD04C4
	private static bool <SetActiveSupportApplyIcon>m__1(int x) { }
}

// Namespace: 
public enum SupportSelectMenu.ResultKind // TypeDefIndex: 10800
{
	// Fields
	public int value__; // 0x0
	public const SupportSelectMenu.ResultKind CANCEL = 0;
	public const SupportSelectMenu.ResultKind DECIDE = 1;
	public const SupportSelectMenu.ResultKind CLOSE = 2;
	public const SupportSelectMenu.ResultKind SELECT_SERVANT = 3;
	public const SupportSelectMenu.ResultKind SELECT_EQUIP = 4;
	public const SupportSelectMenu.ResultKind DECK_NAME = 5;
	public const SupportSelectMenu.ResultKind SWAP = 6;
	public const SupportSelectMenu.ResultKind EDIT = 7;
	public const SupportSelectMenu.ResultKind SELECT_FOLLOWER = 8;
	public const SupportSelectMenu.ResultKind SUPPORT_INFO_SERVANT = 9;
	public const SupportSelectMenu.ResultKind SUPPORT_INFO_EQUIP = 10;
}

// Namespace: 
public sealed class SupportSelectMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10801
{
	// Methods

	// RVA: 0x1FCD98C Offset: 0x1FCD98C VA: 0x1FCD98C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1FCC508 Offset: 0x1FCC508 VA: 0x1FCC508 Slot: 11
	public virtual void Invoke(SupportSelectMenu.ResultKind result, int d, int n) { }

	// RVA: 0x1FD04D0 Offset: 0x1FD04D0 VA: 0x1FD04D0 Slot: 12
	public virtual IAsyncResult BeginInvoke(SupportSelectMenu.ResultKind result, int d, int n, AsyncCallback callback, object object) { }

	// RVA: 0x1FD0590 Offset: 0x1FD0590 VA: 0x1FD0590 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class SupportSelectMenu.DragSwapCallbackFunc : MulticastDelegate // TypeDefIndex: 10802
{
	// Methods

	// RVA: 0x1FD059C Offset: 0x1FD059C VA: 0x1FD059C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1FCCA5C Offset: 0x1FCCA5C VA: 0x1FCCA5C Slot: 11
	public virtual void Invoke(SupportSelectRootComponent.SwapKind kind, int classPos1, UserServantLeaderEntity leader1, int classPos2, UserServantLeaderEntity leader2) { }

	// RVA: 0x1FD05AC Offset: 0x1FD05AC VA: 0x1FD05AC Slot: 12
	public virtual IAsyncResult BeginInvoke(SupportSelectRootComponent.SwapKind kind, int classPos1, UserServantLeaderEntity leader1, int classPos2, UserServantLeaderEntity leader2, AsyncCallback callback, object object) { }

	// RVA: 0x1FD067C Offset: 0x1FD067C VA: 0x1FD067C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SupportSelectObject : BaseMonoBehaviour // TypeDefIndex: 10803
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCE6448 Offset: 0xCE6448 VA: 0xCE6448
	[DebuggerBrowsableAttribute] // RVA: 0xCE6448 Offset: 0xCE6448 VA: 0xCE6448
	private SupportSelectMenu.CallbackFunc callbackFunc; // 0x18
	protected SupportSelectItemDraw itemDraw; // 0x20
	protected SupportServantData supportServantData; // 0x28
	protected int deckNum; // 0x30
	protected int classPos; // 0x34
	protected EventCampaignEntity[] eventFriendPoints; // 0x38

	// Methods

	// RVA: 0x1FD0688 Offset: 0x1FD0688 VA: 0x1FD0688
	public void .ctor() { }

	// RVA: 0x1FD0690 Offset: 0x1FD0690 VA: 0x1FD0690
	protected void add_callbackFunc(SupportSelectMenu.CallbackFunc value) { }

	// RVA: 0x1FD077C Offset: 0x1FD077C VA: 0x1FD077C
	protected void remove_callbackFunc(SupportSelectMenu.CallbackFunc value) { }

	// RVA: 0x1FD0868 Offset: 0x1FD0868 VA: 0x1FD0868
	protected void Awake() { }

	// RVA: 0x1FD08C0 Offset: 0x1FD08C0 VA: 0x1FD08C0
	public SupportServantData GetSupportServantData() { }

	// RVA: 0x1FD08C8 Offset: 0x1FD08C8 VA: 0x1FD08C8
	public int GetClassPos() { }

	// RVA: 0x1FD08D0 Offset: 0x1FD08D0 VA: 0x1FD08D0
	public int GetDeckNum() { }

	// RVA: 0x1FD08D8 Offset: 0x1FD08D8 VA: 0x1FD08D8
	public EventCampaignEntity[] GetEventFriendPoints() { }

	// RVA: 0x1FD08E0 Offset: 0x1FD08E0 VA: 0x1FD08E0
	public UserServantLeaderEntity GetLeaderInfo() { }

	// RVA: 0x1FCD6E0 Offset: 0x1FCD6E0 VA: 0x1FCD6E0
	public void ClearItem() { }

	// RVA: 0x1FD0914 Offset: 0x1FD0914 VA: 0x1FD0914
	public void ModifyItem() { }

	// RVA: 0x1FCD99C Offset: 0x1FCD99C VA: 0x1FCD99C
	public void SetItem(SupportServantData supportServantData, int deckNum, int classPos, EventCampaignEntity[] friendPointCampaigns, SupportSelectMenu.CallbackFunc callback) { }

	// RVA: 0x1FCDB90 Offset: 0x1FCDB90 VA: 0x1FCDB90
	public void ChangeEvent(EventCampaignEntity[] changeEventFriendPoints) { }

	// RVA: 0x1FD09DC Offset: 0x1FD09DC VA: 0x1FD09DC
	public void OnClickItem() { }

	// RVA: 0x1FD0B40 Offset: 0x1FD0B40 VA: 0x1FD0B40
	public void OnLongPressItem() { }

	// RVA: 0x1FD0D4C Offset: 0x1FD0D4C VA: 0x1FD0D4C
	public void OnClickItemEquip() { }

	// RVA: 0x1FD0D64 Offset: 0x1FD0D64 VA: 0x1FD0D64
	public void OnLongPressItemEquip() { }

	// RVA: 0x1FD0E44 Offset: 0x1FD0E44 VA: 0x1FD0E44
	protected void EndShowEquip(bool isDecide) { }

	// RVA: 0x1FD09F4 Offset: 0x1FD09F4 VA: 0x1FD09F4
	private void clickSelectItem(SupportSelectMenu.ResultKind result, int deckNum, int classPos) { }

	// RVA: 0x1FD0EC4 Offset: 0x1FD0EC4 VA: 0x1FD0EC4
	public void AddDepth(int depth) { }

	// RVA: 0x1FCDCF8 Offset: 0x1FCDCF8 VA: 0x1FCDCF8
	public void SetActiveDragSwapGuide(bool flag) { }

	// RVA: 0x1FD0FC4 Offset: 0x1FD0FC4 VA: 0x1FD0FC4
	public void HideEquip() { }

	// RVA: 0x1FD0FF8 Offset: 0x1FD0FF8 VA: 0x1FD0FF8
	public void ShowEquip() { }

	// RVA: 0x1FD102C Offset: 0x1FD102C VA: 0x1FD102C
	public void ActivateEquipOnly() { }
}

// Namespace: 
public class SupportSelectRootComponent : SceneRootComponent // TypeDefIndex: 10804
{
	// Fields
	protected static float EDIT_SCENE_FADE_TIME; // 0x0
	private const string INITIAL_PAGE_INDEX = "SUPPORT_SETTING_SCENE_INITIAL_PAGE_INDEX";
	[SerializeField] // RVA: 0xCE6484 Offset: 0xCE6484 VA: 0xCE6484
	protected UISkinSprite backSkinSprite; // 0x38
	[SerializeField] // RVA: 0xCE6494 Offset: 0xCE6494 VA: 0xCE6494
	protected SupportSelectMenu supportSelectMenu; // 0x40
	[SerializeField] // RVA: 0xCE64A4 Offset: 0xCE64A4 VA: 0xCE64A4
	protected SupportServantSelectMenu supportServantSelectMenu; // 0x48
	[SerializeField] // RVA: 0xCE64B4 Offset: 0xCE64B4 VA: 0xCE64B4
	protected SupportSelectConfirmMenu supportSelectConfirmMenu; // 0x50
	[SerializeField] // RVA: 0xCE64C4 Offset: 0xCE64C4 VA: 0xCE64C4
	private SupportSelectConfirmDeckMenu confirmDeckMenu; // 0x58
	[SerializeField] // RVA: 0xCE64D4 Offset: 0xCE64D4 VA: 0xCE64D4
	private SupportSelectCopyDeckSelectMenu copyDeckSelectMenu; // 0x60
	[SerializeField] // RVA: 0xCE64E4 Offset: 0xCE64E4 VA: 0xCE64E4
	private SupportSelectConfirmCopyMenu copyConfirmMenu; // 0x68
	[SerializeField] // RVA: 0xCE64F4 Offset: 0xCE64F4 VA: 0xCE64F4
	protected CancelConfirmMenu cancelConfirmMenu; // 0x70
	[SerializeField] // RVA: 0xCE6504 Offset: 0xCE6504 VA: 0xCE6504
	protected TitleInfoControl titleInfo; // 0x78
	[SerializeField] // RVA: 0xCE6514 Offset: 0xCE6514 VA: 0xCE6514
	protected SupportDeckNameInputMenu deckNameInputMenu; // 0x80
	protected string editDeckName; // 0x88
	[SerializeField] // RVA: 0xCE6524 Offset: 0xCE6524 VA: 0xCE6524
	protected SupportSelectEditMenu supportEditMenu; // 0x90
	[SerializeField] // RVA: 0xCE6534 Offset: 0xCE6534 VA: 0xCE6534
	protected UISprite blackMask; // 0x98
	[SerializeField] // RVA: 0xCE6544 Offset: 0xCE6544 VA: 0xCE6544
	protected UIScrollView scrollView; // 0xA0
	[SerializeField] // RVA: 0xCE6554 Offset: 0xCE6554 VA: 0xCE6554
	protected FollowerQuestInfomationDraw followerQuestInfomationDraw; // 0xA8
	[SerializeField] // RVA: 0xCE6564 Offset: 0xCE6564 VA: 0xCE6564
	protected GameObject applyIconObj; // 0xB0
	[SerializeField] // RVA: 0xCE6574 Offset: 0xCE6574 VA: 0xCE6574
	protected UISprite bgTxtSprite; // 0xB8
	[SerializeField] // RVA: 0xCE6584 Offset: 0xCE6584 VA: 0xCE6584
	private SupportDeckFixErrorDialog fixErrorDialog; // 0xC0
	[SerializeField] // RVA: 0xCE6594 Offset: 0xCE6594 VA: 0xCE6594
	private CancelConfirmDeckIdDialog cancelConfirmDeckIdDialog; // 0xC8
	protected SupportSelectRootComponent.State state; // 0xD0
	protected SupportServantData[] supportServantData; // 0xD8
	protected SupportServantData[] orgSupportServantData; // 0xE0
	protected SupportServantData[] tmpSupportServantData; // 0xE8
	protected string[] cacheAssetNameList; // 0xF0
	private int selectNum; // 0xF8
	private int classPos; // 0xFC
	private bool isEdit; // 0x100
	private bool isDragSwapState; // 0x101
	private int copyTargetDeckId; // 0x104
	protected SupportInfoJump supportInfoJump; // 0x108
	protected SceneJumpInfo sceneJumpInfo; // 0x110
	private EventUpValSetupInfo eventSetupInfo; // 0x118
	private int[] tempFixMainQuestSupportDeckIds; // 0x120
	private int[] tempFixEventQuestSupportDeckIds; // 0x128
	private const string SVTEQ_SCROLL_SAVE_KEY = "SvtEqScrollBarValue";
	[CompilerGeneratedAttribute] // RVA: 0xCE65A4 Offset: 0xCE65A4 VA: 0xCE65A4
	private static Func<int, bool> <>f__am$cache0; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCE65B4 Offset: 0xCE65B4 VA: 0xCE65B4
	private static Func<int, bool> <>f__am$cache1; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCE65C4 Offset: 0xCE65C4 VA: 0xCE65C4
	private static Func<int, bool> <>f__am$cache2; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCE65D4 Offset: 0xCE65D4 VA: 0xCE65D4
	private static Action <>f__am$cache3; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCE65E4 Offset: 0xCE65E4 VA: 0xCE65E4
	private static Func<int, bool> <>f__am$cache4; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCE65F4 Offset: 0xCE65F4 VA: 0xCE65F4
	private static Func<int, bool> <>f__am$cache5; // 0x30

	// Methods

	// RVA: 0x1FD105C Offset: 0x1FD105C VA: 0x1FD105C
	public void .ctor() { }

	// RVA: 0x1FD1104 Offset: 0x1FD1104 VA: 0x1FD1104 Slot: 4
	public override void beginInitialize() { }

	// RVA: 0x1FD1270 Offset: 0x1FD1270 VA: 0x1FD1270
	private void RefreshSupportServantData() { }

	// RVA: 0x1FD195C Offset: 0x1FD195C VA: 0x1FD195C
	private void InitSupportServantData() { }

	// RVA: 0x1FD19E0 Offset: 0x1FD19E0 VA: 0x1FD19E0
	private int GetCurrentDeckID() { }

	// RVA: 0x1FD1A3C Offset: 0x1FD1A3C VA: 0x1FD1A3C
	private bool IsFixedMainQuestSupportDeckIdNow(int checkDeckId) { }

	// RVA: 0x1FD1AAC Offset: 0x1FD1AAC VA: 0x1FD1AAC
	private bool IsFixedEventQuestSupportDeckIdNow(int checkDeckId) { }

	// RVA: 0x1FD1B1C Offset: 0x1FD1B1C VA: 0x1FD1B1C
	private void SetCurrentSupportDeckIds(out int currentMainQuestSupportDeckId) { }

	// RVA: 0x1FD1B44 Offset: 0x1FD1B44 VA: 0x1FD1B44
	private bool IsValidServantData(int index) { }

	// RVA: 0x1FD1BB8 Offset: 0x1FD1BB8 VA: 0x1FD1BB8
	private void SetFriendInfo(out int deckIndex) { }

	// RVA: 0x1FD281C Offset: 0x1FD281C VA: 0x1FD281C
	private void SetFriendInfoPrepareBattle() { }

	// RVA: 0x1FD32F0 Offset: 0x1FD32F0 VA: 0x1FD32F0
	private void StartUp() { }

	// RVA: 0x1FD3FBC Offset: 0x1FD3FBC VA: 0x1FD3FBC Slot: 5
	public override void beginStartUp(object data) { }

	// RVA: 0x1FD4210 Offset: 0x1FD4210 VA: 0x1FD4210
	protected void EndLoadCommonBg() { }

	// RVA: 0x1FD431C Offset: 0x1FD431C VA: 0x1FD431C
	public void modifyCenterItemCallBack() { }

	// RVA: 0x1FD3A9C Offset: 0x1FD3A9C VA: 0x1FD3A9C
	private void SetActiveApplyIcon() { }

	// RVA: 0x1FD4830 Offset: 0x1FD4830 VA: 0x1FD4830 Slot: 7
	public override void beginFinish() { }

	// RVA: 0x1FD4A94 Offset: 0x1FD4A94 VA: 0x1FD4A94
	public void Init() { }

	// RVA: 0x1FD4A98 Offset: 0x1FD4A98 VA: 0x1FD4A98
	public void Quit() { }

	// RVA: 0x1FD49CC Offset: 0x1FD49CC VA: 0x1FD49CC
	protected void SetCacheAssetNameList(string[] list) { }

	// RVA: 0x1FD3FB8 Offset: 0x1FD3FB8 VA: 0x1FD3FB8
	public void RefreshInfo() { }

	// RVA: 0x1FD19F8 Offset: 0x1FD19F8 VA: 0x1FD19F8
	private int getCenterNum() { }

	// RVA: 0x1FD3E74 Offset: 0x1FD3E74 VA: 0x1FD3E74
	private void setEditUI(bool editOn) { }

	// RVA: 0x1FD4AA0 Offset: 0x1FD4AA0 VA: 0x1FD4AA0
	private void ChangeTitle() { }

	// RVA: 0x1FD3B2C Offset: 0x1FD3B2C VA: 0x1FD3B2C
	private void setInfoUIDisp(bool disp) { }

	// RVA: 0x1FD4B10 Offset: 0x1FD4B10 VA: 0x1FD4B10
	private void RequestApi() { }

	// RVA: 0x1FD5788 Offset: 0x1FD5788 VA: 0x1FD5788
	private void CallbackUpdateDeckIdApi(string result) { }

	// RVA: 0x1FD5800 Offset: 0x1FD5800 VA: 0x1FD5800
	protected void EndSupportSelectMenu(SupportSelectMenu.ResultKind result, int deckNum, int classPos) { }

	// RVA: 0x1FD532C Offset: 0x1FD532C VA: 0x1FD532C
	private bool IsUpdateDeckId() { }

	// RVA: 0x1FD714C Offset: 0x1FD714C VA: 0x1FD714C
	public void RequestDeckName() { }

	// RVA: 0x1FD72A0 Offset: 0x1FD72A0 VA: 0x1FD72A0
	public void OnBackSelect(SupportSelectRootComponent.ResultKind result, int classPos, UserServantEntity entity) { }

	// RVA: 0x1FD792C Offset: 0x1FD792C VA: 0x1FD792C
	private void ExecutionServantSet(SupportSelectRootComponent.ResultKind result, int classPos, UserServantEntity entity) { }

	// RVA: 0x1FD7EB8 Offset: 0x1FD7EB8 VA: 0x1FD7EB8
	protected void EndSupportServantEquipListMenu(SupportSelectRootComponent.ResultKind result, int classPos, SupportServantEquipListViewItem item) { }

	// RVA: 0x1FD8614 Offset: 0x1FD8614 VA: 0x1FD8614
	private void SetEquip(SupportSelectRootComponent.ResultKind result, int classPos, SupportServantEquipListViewItem item) { }

	// RVA: 0x1FD8D98 Offset: 0x1FD8D98 VA: 0x1FD8D98
	protected void EndSupportServantDragSwap(SupportSelectRootComponent.SwapKind kind, int classPos1, UserServantLeaderEntity leader1, int classPos2, UserServantLeaderEntity leader2) { }

	// RVA: 0x1FD907C Offset: 0x1FD907C VA: 0x1FD907C
	protected void EndShowServant(bool isDecide) { }

	// RVA: 0x1FD91A4 Offset: 0x1FD91A4 VA: 0x1FD91A4
	protected void EndShowServantWithQuest(bool isDecide, int questId) { }

	// RVA: 0x1FD926C Offset: 0x1FD926C VA: 0x1FD926C
	protected void EndCloseShowServantQuestJump() { }

	// RVA: 0x1FD92D8 Offset: 0x1FD92D8 VA: 0x1FD92D8
	protected void EndShowEquip(bool isDecide) { }

	// RVA: 0x1FD9380 Offset: 0x1FD9380 VA: 0x1FD9380
	protected void EndCloseServantEquipListDecide() { }

	// RVA: 0x1FD93AC Offset: 0x1FD93AC VA: 0x1FD93AC
	protected void EndCloseServantEquipListCancel() { }

	// RVA: 0x1FD93D8 Offset: 0x1FD93D8 VA: 0x1FD93D8
	private void UpdateTempFixDeckId(int idx, int deckId, bool isEvent) { }

	// RVA: 0x1FD9688 Offset: 0x1FD9688 VA: 0x1FD9688
	private List<string> GetFixedErrorList(int idx, int nowDeckId, int[] fixDeckIds, bool isMain) { }

	// RVA: 0x1FD9CCC Offset: 0x1FD9CCC VA: 0x1FD9CCC
	private void OnClickFixMainDeckButton(int idx) { }

	// RVA: 0x1FD9FE4 Offset: 0x1FD9FE4 VA: 0x1FD9FE4
	public void OnClickFixMainQuestSupportDeck() { }

	// RVA: 0x1FD9FEC Offset: 0x1FD9FEC VA: 0x1FD9FEC
	public void OnClickFixMainQuestSupportDeck2() { }

	// RVA: 0x1FD9FF4 Offset: 0x1FD9FF4 VA: 0x1FD9FF4
	public void OnClickFixMainQuestSupportDeck3() { }

	// RVA: 0x1FD9FFC Offset: 0x1FD9FFC VA: 0x1FD9FFC
	private void OnClickFixEventDeckButton(int idx) { }

	// RVA: 0x1FDA2A4 Offset: 0x1FDA2A4 VA: 0x1FDA2A4
	public void OnClickFixEventQuestSupportDeck() { }

	// RVA: 0x1FDA2AC Offset: 0x1FDA2AC VA: 0x1FDA2AC
	public void OnClickFixEventQuestSupportDeck2() { }

	// RVA: 0x1FDA2B4 Offset: 0x1FDA2B4 VA: 0x1FDA2B4
	public void OnClickFixEventQuestSupportDeck3() { }

	// RVA: 0x1FD9F74 Offset: 0x1FD9F74 VA: 0x1FD9F74
	private void PlaySEOnClickFixQuestSupportDeck(bool isFixed) { }

	// RVA: 0x1FDA2BC Offset: 0x1FDA2BC VA: 0x1FDA2BC
	public void OnClickBack() { }

	// RVA: 0x1FDA89C Offset: 0x1FDA89C VA: 0x1FDA89C
	private void EndChangeDeckIdCancelConfirmMenu(bool isDecide) { }

	// RVA: 0x1FDA988 Offset: 0x1FDA988 VA: 0x1FDA988
	public void EndCancelConfirmMenu(bool isDecide) { }

	// RVA: 0x1FD5160 Offset: 0x1FD5160 VA: 0x1FD5160
	private void ReturnScene(string result) { }

	// RVA: 0x1FDAA7C Offset: 0x1FDAA7C VA: 0x1FDAA7C
	private void EndConfirmMenu(bool flag) { }

	// RVA: 0x1FD7060 Offset: 0x1FD7060 VA: 0x1FD7060
	private void OpenSupportEditMenu() { }

	// RVA: 0x1FDAAC0 Offset: 0x1FDAAC0 VA: 0x1FDAAC0
	protected void EndSupportEditMenu(SupportSelectEditMenu.ResultKind resultKind) { }

	// RVA: 0x1FDB0B4 Offset: 0x1FDB0B4 VA: 0x1FDB0B4
	private bool IsPossibleCopy(int idx, int[] fixDeckIds) { }

	// RVA: 0x1FDAB90 Offset: 0x1FDAB90 VA: 0x1FDAB90
	private void SelectCopySupportDeck() { }

	// RVA: 0x1FDB36C Offset: 0x1FDB36C VA: 0x1FDB36C
	private void EndSelectCopySupportDeck(int deckId) { }

	// RVA: 0x1FDB49C Offset: 0x1FDB49C VA: 0x1FDB49C
	private void ConfirmDeckCopy(int targetDeckId) { }

	// RVA: 0x1FDB5C8 Offset: 0x1FDB5C8 VA: 0x1FDB5C8
	private void EndConfirmDeckCopy(bool isDecide) { }

	// RVA: 0x1FDAE20 Offset: 0x1FDAE20 VA: 0x1FDAE20
	private void RemoveAll() { }

	// RVA: 0x1FDBB40 Offset: 0x1FDBB40 VA: 0x1FDBB40
	private void EndRemoveAll(bool isDecide) { }

	// RVA: 0x1FDAEFC Offset: 0x1FDAEFC VA: 0x1FDAEFC
	private void InitAll() { }

	// RVA: 0x1FDBD90 Offset: 0x1FDBD90 VA: 0x1FDBD90
	private void EndInitAll(bool isDecide) { }

	// RVA: 0x1FDAFD8 Offset: 0x1FDAFD8 VA: 0x1FDAFD8
	private void RemoveAllEquip() { }

	// RVA: 0x1FDC054 Offset: 0x1FDC054 VA: 0x1FDC054
	private void EndRemoveAllEquip(bool isDecide) { }

	// RVA: 0x1FD6F48 Offset: 0x1FD6F48 VA: 0x1FD6F48
	private void ChangeDeckName() { }

	// RVA: 0x1FDC2D8 Offset: 0x1FDC2D8 VA: 0x1FDC2D8
	private void EndChangeDeckName(bool isDecide, string changeName) { }

	// RVA: 0x1FD6B68 Offset: 0x1FD6B68 VA: 0x1FD6B68
	private bool isUpdate(bool servant = True, bool equip = True) { }

	// RVA: 0x1FD3B9C Offset: 0x1FD3B9C VA: 0x1FD3B9C
	private void initSupportServantDatas() { }

	// RVA: 0x1FD6E98 Offset: 0x1FD6E98 VA: 0x1FD6E98
	private void SaveTemp(int targetIdx = -1) { }

	// RVA: 0x1FD3D2C Offset: 0x1FD3D2C VA: 0x1FD3D2C
	private void CopySupportData(SupportServantData[] orgData, SupportServantData[] toData, bool isInit = False) { }

	// RVA: 0x1FD4D3C Offset: 0x1FD4D3C VA: 0x1FD4D3C
	private bool IsFinallyUpdate() { }

	// RVA: 0x1FDCA40 Offset: 0x1FDCA40 VA: 0x1FDCA40
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F2E4 Offset: 0xD3F2E4 VA: 0xD3F2E4
	// RVA: 0x1FDCA94 Offset: 0x1FDCA94 VA: 0x1FDCA94
	private static bool <SetFriendInfoPrepareBattle>m__0(int x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F2F4 Offset: 0xD3F2F4 VA: 0xD3F2F4
	// RVA: 0x1FDCAA0 Offset: 0x1FDCAA0 VA: 0x1FDCAA0
	private void <beginStartUp>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F304 Offset: 0xD3F304 VA: 0xD3F304
	[DebuggerHiddenAttribute] // RVA: 0xD3F304 Offset: 0xD3F304 VA: 0xD3F304
	// RVA: 0x1FDCAA4 Offset: 0x1FDCAA4 VA: 0x1FDCAA4
	private void <beginStartUp>__BaseCallProxy0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F33C Offset: 0xD3F33C VA: 0xD3F33C
	// RVA: 0x1FDCAAC Offset: 0x1FDCAAC VA: 0x1FDCAAC
	private void <EndLoadCommonBg>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F34C Offset: 0xD3F34C VA: 0xD3F34C
	// RVA: 0x1FDCB08 Offset: 0x1FDCB08 VA: 0x1FDCB08
	private static bool <EndSupportSelectMenu>m__3(int x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F35C Offset: 0xD3F35C VA: 0xD3F35C
	// RVA: 0x1FDCB14 Offset: 0x1FDCB14 VA: 0x1FDCB14
	private static bool <EndSupportSelectMenu>m__4(int x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F36C Offset: 0xD3F36C VA: 0xD3F36C
	// RVA: 0x1FDCB20 Offset: 0x1FDCB20 VA: 0x1FDCB20
	private static void <EndSupportSelectMenu>m__5() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F37C Offset: 0xD3F37C VA: 0xD3F37C
	// RVA: 0x1FDCBB8 Offset: 0x1FDCBB8 VA: 0x1FDCBB8
	private static bool <IsUpdateDeckId>m__6(int x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F38C Offset: 0xD3F38C VA: 0xD3F38C
	// RVA: 0x1FDCBC4 Offset: 0x1FDCBC4 VA: 0x1FDCBC4
	private static bool <IsUpdateDeckId>m__7(int x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F39C Offset: 0xD3F39C VA: 0xD3F39C
	// RVA: 0x1FDCBD0 Offset: 0x1FDCBD0 VA: 0x1FDCBD0
	private void <EndChangeDeckName>m__8() { }
}

// Namespace: 
protected enum SupportSelectRootComponent.State // TypeDefIndex: 10805
{
	// Fields
	public int value__; // 0x0
	public const SupportSelectRootComponent.State INIT = 0;
	public const SupportSelectRootComponent.State SELECT = 1;
	public const SupportSelectRootComponent.State INPUT_SERVANT_SELECT = 2;
	public const SupportSelectRootComponent.State INPUT_EQUIP_SELECT = 3;
	public const SupportSelectRootComponent.State INFO = 4;
	public const SupportSelectRootComponent.State QUIT_SCENE = 5;
}

// Namespace: 
public enum SupportSelectRootComponent.ResultKind // TypeDefIndex: 10806
{
	// Fields
	public int value__; // 0x0
	public const SupportSelectRootComponent.ResultKind CANCEL = 0;
	public const SupportSelectRootComponent.ResultKind DECIDE = 1;
	public const SupportSelectRootComponent.ResultKind REMOVE = 2;
}

// Namespace: 
public enum SupportSelectRootComponent.SwapKind // TypeDefIndex: 10807
{
	// Fields
	public int value__; // 0x0
	public const SupportSelectRootComponent.SwapKind SERVANT = 0;
	public const SupportSelectRootComponent.SwapKind EQUIPMENT = 1;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1700 Offset: 0xCB1700 VA: 0xCB1700
private sealed class SupportSelectRootComponent.<OnBackSelect>c__AnonStorey0 // TypeDefIndex: 10808
{
	// Fields
	internal SupportSelectRootComponent.ResultKind result; // 0x10
	internal int classPos; // 0x14
	internal UserServantEntity entity; // 0x18
	internal SupportSelectRootComponent $this; // 0x20

	// Methods

	// RVA: 0x1FD7924 Offset: 0x1FD7924 VA: 0x1FD7924
	public void .ctor() { }

	// RVA: 0x1FDCE94 Offset: 0x1FDCE94 VA: 0x1FDCE94
	internal void <>m__0(bool isDecide) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1710 Offset: 0xCB1710 VA: 0xCB1710
private sealed class SupportSelectRootComponent.<EndSupportServantEquipListMenu>c__AnonStorey1 // TypeDefIndex: 10809
{
	// Fields
	internal SupportSelectRootComponent.ResultKind result; // 0x10
	internal int classPos; // 0x14
	internal SupportServantEquipListViewItem item; // 0x18
	internal SupportSelectRootComponent $this; // 0x20

	// Methods

	// RVA: 0x1FD8604 Offset: 0x1FD8604 VA: 0x1FD8604
	public void .ctor() { }

	// RVA: 0x1FDCBD4 Offset: 0x1FDCBD4 VA: 0x1FDCBD4
	internal void <>m__0(bool isDecide) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1720 Offset: 0xCB1720 VA: 0xCB1720
private sealed class SupportSelectRootComponent.<GetFixedErrorList>c__AnonStorey2 // TypeDefIndex: 10810
{
	// Fields
	internal UserServantLeaderEntity svtInfo; // 0x10

	// Methods

	// RVA: 0x1FD9CBC Offset: 0x1FD9CBC VA: 0x1FD9CBC
	public void .ctor() { }

	// RVA: 0x1FDCDFC Offset: 0x1FDCDFC VA: 0x1FDCDFC
	internal bool <>m__0(UserServantLeaderEntity x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1730 Offset: 0xCB1730 VA: 0xCB1730
private sealed class SupportSelectRootComponent.<IsPossibleCopy>c__AnonStorey3 // TypeDefIndex: 10811
{
	// Fields
	internal UserServantLeaderEntity svtInfo; // 0x10

	// Methods

	// RVA: 0x1FDB364 Offset: 0x1FDB364 VA: 0x1FDB364
	public void .ctor() { }

	// RVA: 0x1FDCE48 Offset: 0x1FDCE48 VA: 0x1FDCE48
	internal bool <>m__0(UserServantLeaderEntity x) { }
}

// Namespace: 
public class SupportSelectUIDragDropListViewSurface : UIDragDropListViewSurface // TypeDefIndex: 10812
{
	// Fields
	[SerializeField] // RVA: 0xCE6604 Offset: 0xCE6604 VA: 0xCE6604
	private SupportSelectListViewDropObject dropObject; // 0x18

	// Properties
	public SupportSelectListViewDropObject DropObject { get; set; }

	// Methods

	// RVA: 0x1FDD0C4 Offset: 0x1FDD0C4 VA: 0x1FDD0C4
	public void .ctor() { }

	// RVA: 0x1FCCA40 Offset: 0x1FCCA40 VA: 0x1FCCA40
	public void set_DropObject(SupportSelectListViewDropObject value) { }

	// RVA: 0x1FDD0CC Offset: 0x1FDD0CC VA: 0x1FDD0CC
	public SupportSelectListViewDropObject get_DropObject() { }
}

// Namespace: 
public class SupportServantData // TypeDefIndex: 10813
{
	// Fields
	protected UserServantLeaderEntity[] userServantLeaderEntityList; // 0x10
	protected long[] servantIdList; // 0x18
	protected long[] oldServantIdList; // 0x20
	protected long[] equipIdList; // 0x28
	protected long[] oldEquipIdList; // 0x30
	private string[] className; // 0x38
	protected bool isFriendInfo; // 0x40
	protected ServantStatusDialog.Kind kind; // 0x44
	protected bool isSelectServant; // 0x48
	protected EventUpValSetupInfo eventSetupInfo; // 0x50
	protected EventUpValSetupInfo eventSetupInfo2; // 0x58
	protected QuestRestrictionInfo questRestrictionInfo; // 0x60
	private long pushUserServantId; // 0x68
	[CompilerGeneratedAttribute] // RVA: 0xCE6614 Offset: 0xCE6614 VA: 0xCE6614
	[DebuggerBrowsableAttribute] // RVA: 0xCE6614 Offset: 0xCE6614 VA: 0xCE6614
	private int <deckId>k__BackingField; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xCE6650 Offset: 0xCE6650 VA: 0xCE6650
	[DebuggerBrowsableAttribute] // RVA: 0xCE6650 Offset: 0xCE6650 VA: 0xCE6650
	private string <deckName>k__BackingField; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xCE668C Offset: 0xCE668C VA: 0xCE668C
	[DebuggerBrowsableAttribute] // RVA: 0xCE668C Offset: 0xCE668C VA: 0xCE668C
	private string <oldDeckName>k__BackingField; // 0x80

	// Properties
	public int deckId { get; set; }
	public string deckName { get; set; }
	public string oldDeckName { get; set; }
	public bool IsNoServant { get; }
	public bool IsFriendInfo { get; }
	public ServantStatusDialog.Kind Kind { get; }
	public bool IsSelectServant { get; }
	public EventUpValSetupInfo EventSetupInfo { get; set; }
	public EventUpValSetupInfo EventSetupInfo2 { get; }
	public QuestRestrictionInfo QuestRestriction { get; }
	public long PushUserServantId { get; set; }

	// Methods

	// RVA: 0x1FD1550 Offset: 0x1FD1550 VA: 0x1FD1550
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F3AC Offset: 0xD3F3AC VA: 0xD3F3AC
	// RVA: 0x1FDD0D4 Offset: 0x1FDD0D4 VA: 0x1FDD0D4
	public int get_deckId() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F3BC Offset: 0xD3F3BC VA: 0xD3F3BC
	// RVA: 0x1FDD0DC Offset: 0x1FDD0DC VA: 0x1FDD0DC
	public void set_deckId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F3CC Offset: 0xD3F3CC VA: 0xD3F3CC
	// RVA: 0x1FCA9EC Offset: 0x1FCA9EC VA: 0x1FCA9EC
	public string get_deckName() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F3DC Offset: 0xD3F3DC VA: 0xD3F3DC
	// RVA: 0x1FD7298 Offset: 0x1FD7298 VA: 0x1FD7298
	public void set_deckName(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F3EC Offset: 0xD3F3EC VA: 0xD3F3EC
	// RVA: 0x1FDD0E4 Offset: 0x1FDD0E4 VA: 0x1FDD0E4
	public string get_oldDeckName() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F3FC Offset: 0xD3F3FC VA: 0xD3F3FC
	// RVA: 0x1FDD0EC Offset: 0x1FDD0EC VA: 0x1FDD0EC
	private void set_oldDeckName(string value) { }

	// RVA: 0x1FDC4D8 Offset: 0x1FDC4D8 VA: 0x1FDC4D8
	public void Init(int deckId, EventUpValSetupInfo eventUpSetupInfo) { }

	// RVA: 0x1FDC204 Offset: 0x1FDC204 VA: 0x1FDC204
	public string getDefaultDeckName() { }

	// RVA: 0x1FDC030 Offset: 0x1FDC030 VA: 0x1FDC030
	public void ResetDeckName() { }

	// RVA: 0x1FD23A8 Offset: 0x1FD23A8 VA: 0x1FD23A8
	public void Init(OtherUserGameEntity otherData, FriendStatus.Kind friendKind, bool isSelectServant, EventUpValSetupInfo _eventSetupInfo, OtherUserGameEntity.ReturnSupportServantType displayType, int deckId) { }

	// RVA: 0x1FD2DE8 Offset: 0x1FD2DE8 VA: 0x1FD2DE8
	public void Init(FollowerInfo followerInfo, FriendStatus.Kind friendKind, bool isSelectServant, EventUpValSetupInfo _eventSetupInfo, QuestRestrictionInfo questRestrictionInfo, int deckId) { }

	// RVA: 0x1FCDCA4 Offset: 0x1FCDCA4 VA: 0x1FCDCA4
	public UserServantLeaderEntity getUserServantLeaderEntity(int classPos) { }

	// RVA: 0x1FD7B9C Offset: 0x1FD7B9C VA: 0x1FD7B9C
	public void setServantData(int classPos, UserServantEntity entity) { }

	// RVA: 0x1FD7DC8 Offset: 0x1FD7DC8 VA: 0x1FD7DC8
	public void removeServantData(int classPos) { }

	// RVA: 0x1FD8B34 Offset: 0x1FD8B34 VA: 0x1FD8B34
	public void setEquipData(int classPos, long userSvtId, int svtId = -1) { }

	// RVA: 0x1FD8944 Offset: 0x1FD8944 VA: 0x1FD8944
	public void removeEquipData(int classPos) { }

	// RVA: 0x1FDD0F4 Offset: 0x1FDD0F4 VA: 0x1FDD0F4
	public long getMember(int classPos) { }

	// RVA: 0x1FD9CC4 Offset: 0x1FD9CC4 VA: 0x1FD9CC4
	public UserServantLeaderEntity[] GetUserServantLeaderList() { }

	// RVA: 0x1FD0CF8 Offset: 0x1FD0CF8 VA: 0x1FD0CF8
	public long getServant(int classPos) { }

	// RVA: 0x1FDC3C0 Offset: 0x1FDC3C0 VA: 0x1FDC3C0
	public long getOldServant(int classPos) { }

	// RVA: 0x1FDD1A4 Offset: 0x1FDD1A4 VA: 0x1FDD1A4
	public int getServantSum() { }

	// RVA: 0x1FD893C Offset: 0x1FD893C VA: 0x1FD893C
	public long[] GetEquipList() { }

	// RVA: 0x1FD0DF0 Offset: 0x1FD0DF0 VA: 0x1FD0DF0
	public long getEquip(int classPos) { }

	// RVA: 0x1FDC414 Offset: 0x1FDC414 VA: 0x1FDC414
	public long getOldEquip(int classPos) { }

	// RVA: 0x1FDD27C Offset: 0x1FDD27C VA: 0x1FDD27C
	public int getEquipSum() { }

	// RVA: 0x1FDD354 Offset: 0x1FDD354 VA: 0x1FDD354
	public bool isUseServant(long userSvtId) { }

	// RVA: 0x1FDD430 Offset: 0x1FDD430 VA: 0x1FDD430
	public string updateCheck(int classPos) { }

	// RVA: 0x1FDD958 Offset: 0x1FDD958 VA: 0x1FDD958
	public string updateNameCheck() { }

	// RVA: 0x1FD6DC0 Offset: 0x1FD6DC0 VA: 0x1FD6DC0
	public bool get_IsNoServant() { }

	// RVA: 0x1FDDBD8 Offset: 0x1FDDBD8 VA: 0x1FDDBD8
	public string getClassName(int classPos) { }

	// RVA: 0x1FCBBB4 Offset: 0x1FCBBB4 VA: 0x1FCBBB4
	public bool get_IsFriendInfo() { }
