	// RVA: 0x1A7B248 Offset: 0x1A7B248 VA: 0x1A7B248
	private void OnDestroy() { }

	// RVA: 0x1A78BFC Offset: 0x1A78BFC VA: 0x1A78BFC
	public ServantSellConfirmListViewItem GetItem() { }

	// RVA: 0x1A7B2F4 Offset: 0x1A7B2F4 VA: 0x1A7B2F4 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1A7B324 Offset: 0x1A7B324 VA: 0x1A7B324 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x1A7B31C Offset: 0x1A7B31C VA: 0x1A7B31C
	private void InitItem() { }

	// RVA: 0x1A7B34C Offset: 0x1A7B34C VA: 0x1A7B34C Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x1A7B518 Offset: 0x1A7B518 VA: 0x1A7B518 Slot: 7
	public override bool IsCanDrag() { }

	// RVA: 0x1A7B640 Offset: 0x1A7B640 VA: 0x1A7B640 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1A7A4A4 Offset: 0x1A7A4A4 VA: 0x1A7A4A4
	public void Init(ServantSellConfirmListViewObject.InitMode initMode, Action onMoveEnd) { }

	// RVA: 0x1A7B91C Offset: 0x1A7B91C VA: 0x1A7B91C
	private ServantSellConfirmListViewObject.State GetState(ServantSellConfirmListViewObject.InitMode initMode) { }

	// RVA: 0x1A7B93C Offset: 0x1A7B93C VA: 0x1A7B93C
	private void CallOnMoveEnd() { }

	// RVA: 0x1A7B72C Offset: 0x1A7B72C VA: 0x1A7B72C
	public void SetupDisp() { }

	// RVA: 0x1A7B958 Offset: 0x1A7B958 VA: 0x1A7B958
	public void OnClickSelect() { }

	// RVA: 0x1A7BB6C Offset: 0x1A7BB6C VA: 0x1A7BB6C
	public void OnLongPush() { }

	// RVA: 0x1A7BCB8 Offset: 0x1A7BCB8 VA: 0x1A7BCB8
	public void OnDragDropStart() { }

	// RVA: 0x1A7BD44 Offset: 0x1A7BD44 VA: 0x1A7BD44
	public void OnLongRelease() { }
}

// Namespace: 
public enum ServantSellConfirmListViewObject.InitMode // TypeDefIndex: 10607
{
	// Fields
	public int value__; // 0x0
	public const ServantSellConfirmListViewObject.InitMode INVISIBLE = 0;
	public const ServantSellConfirmListViewObject.InitMode INVALID = 1;
	public const ServantSellConfirmListViewObject.InitMode VALID = 2;
	public const ServantSellConfirmListViewObject.InitMode INPUT = 3;
	public const ServantSellConfirmListViewObject.InitMode MODIFY = 4;
}

// Namespace: 
private enum ServantSellConfirmListViewObject.State // TypeDefIndex: 10608
{
	// Fields
	public int value__; // 0x0
	public const ServantSellConfirmListViewObject.State INIT = 0;
	public const ServantSellConfirmListViewObject.State IDLE = 1;
	public const ServantSellConfirmListViewObject.State MOVE = 2;
	public const ServantSellConfirmListViewObject.State INPUT = 3;
}

// Namespace: 
public class ServantSellConfirmMenu : BaseDialog // TypeDefIndex: 10609
{
	// Fields
	private readonly int DEFAULT_MESSAGE_LABEL_FONT_SIZE; // 0x58
	private readonly int ALERT_MESSAGE_LABEL_FONT_SIZE; // 0x5C
	private readonly int DEFAULT_INFO_LABEL_FONT_SIZE; // 0x60
	private readonly int SELL_SELECT_LABEL_FONT_SIZE; // 0x64
	private readonly int QP_NUM_LABEL_SIZE; // 0x68
	private readonly int PRI_NUM_LABEL_SIZE; // 0x6C
	[SerializeField] // RVA: 0xC76B14 Offset: 0xC76B14 VA: 0xC76B14
	private UILabel titleLabel; // 0x70
	[SerializeField] // RVA: 0xC76B24 Offset: 0xC76B24 VA: 0xC76B24
	private UILabel messageLabel; // 0x78
	[SerializeField] // RVA: 0xC76B34 Offset: 0xC76B34 VA: 0xC76B34
	private UILabel info1Label; // 0x80
	[SerializeField] // RVA: 0xC76B44 Offset: 0xC76B44 VA: 0xC76B44
	private UILabel info2Label; // 0x88
	[SerializeField] // RVA: 0xC76B54 Offset: 0xC76B54 VA: 0xC76B54
	private UILabel info3Label; // 0x90
	[SerializeField] // RVA: 0xC76B64 Offset: 0xC76B64 VA: 0xC76B64
	private UILabel warningLabel; // 0x98
	[SerializeField] // RVA: 0xC76B74 Offset: 0xC76B74 VA: 0xC76B74
	private UILabel decideLabel; // 0xA0
	[SerializeField] // RVA: 0xC76B84 Offset: 0xC76B84 VA: 0xC76B84
	private UILabel cancelLabel; // 0xA8
	[SerializeField] // RVA: 0xC76B94 Offset: 0xC76B94 VA: 0xC76B94
	private UILabel closeLabel; // 0xB0
	[SerializeField] // RVA: 0xC76BA4 Offset: 0xC76BA4 VA: 0xC76BA4
	private UICommonButton decideButton; // 0xB8
	[SerializeField] // RVA: 0xC76BB4 Offset: 0xC76BB4 VA: 0xC76BB4
	private UICommonButton cancelButton; // 0xC0
	[SerializeField] // RVA: 0xC76BC4 Offset: 0xC76BC4 VA: 0xC76BC4
	private UICommonButton closeButton; // 0xC8
	[SerializeField] // RVA: 0xC76BD4 Offset: 0xC76BD4 VA: 0xC76BD4
	private GameObject commonInfoObj; // 0xD0
	[SerializeField] // RVA: 0xC76BE4 Offset: 0xC76BE4 VA: 0xC76BE4
	private GameObject sellLastSvtWarningInfoObj; // 0xD8
	[SerializeField] // RVA: 0xC76BF4 Offset: 0xC76BF4 VA: 0xC76BF4
	private UILabel lastSvtWarningMsgLabel1; // 0xE0
	[SerializeField] // RVA: 0xC76C04 Offset: 0xC76C04 VA: 0xC76C04
	private UILabel lastSvtWarningMsgLabel2; // 0xE8
	[SerializeField] // RVA: 0xC76C14 Offset: 0xC76C14 VA: 0xC76C14
	private UILabel lastSvtWarningMsgLabel3; // 0xF0
	[SerializeField] // RVA: 0xC76C24 Offset: 0xC76C24 VA: 0xC76C24
	private UILabel lastSvtWarningMsgLabel4; // 0xF8
	[SerializeField] // RVA: 0xC76C34 Offset: 0xC76C34 VA: 0xC76C34
	private UILabel upperLabel; // 0x100
	[SerializeField] // RVA: 0xC76C44 Offset: 0xC76C44 VA: 0xC76C44
	private UILabel lowerLabel; // 0x108
	[SerializeField] // RVA: 0xC76C54 Offset: 0xC76C54 VA: 0xC76C54
	private ServantSellConfirmListViewManager servantSellConfirmListViewManager; // 0x110
	[SerializeField] // RVA: 0xC76C64 Offset: 0xC76C64 VA: 0xC76C64
	private ServantSellMaxAlertDialog servantSellMaxAlertDialog; // 0x118
	[SerializeField] // RVA: 0xC76C74 Offset: 0xC76C74 VA: 0xC76C74
	private GameObject listViewBg; // 0x120
	[SerializeField] // RVA: 0xC76C84 Offset: 0xC76C84 VA: 0xC76C84
	private UILabel QpLabel; // 0x128
	[SerializeField] // RVA: 0xC76C94 Offset: 0xC76C94 VA: 0xC76C94
	private UILabel QpNumLabel; // 0x130
	[SerializeField] // RVA: 0xC76CA4 Offset: 0xC76CA4 VA: 0xC76CA4
	private UILabel ManaLabel; // 0x138
	[SerializeField] // RVA: 0xC76CB4 Offset: 0xC76CB4 VA: 0xC76CB4
	private UILabel ManaNumLabel; // 0x140
	[SerializeField] // RVA: 0xC76CC4 Offset: 0xC76CC4 VA: 0xC76CC4
	private UILabel RareLabel; // 0x148
	[SerializeField] // RVA: 0xC76CD4 Offset: 0xC76CD4 VA: 0xC76CD4
	private UILabel RareNumLabel; // 0x150
	[SerializeField] // RVA: 0xC76CE4 Offset: 0xC76CE4 VA: 0xC76CE4
	private UILabel RareLabel2; // 0x158
	private bool[] servantTypeFlags; // 0x160
	private bool[] isRareFlags; // 0x168
	private ServantSellConfirmMenu.State state; // 0x170
	private bool isMaxQpChecked; // 0x174
	private Action<int> onSellServantConfirm; // 0x178
	private Action onClose; // 0x180
	private ServantSellConfirmMenu.Kind kind; // 0x188
	private UserGameEntity userGameEntity; // 0x190
	private long servantStatusId; // 0x198
	private long commandCodeStatusId; // 0x1A0
	private const int BuyDecide = 1;
	private const int BuyCancel = 0;
	private int getQP; // 0x1A8
	private int getMana; // 0x1AC
	private int getRarePri; // 0x1B0
	private List<long> lastSvtCommandCodeList; // 0x1B8
	private bool isTwoLinesWarning; // 0x1C0
	[CompilerGeneratedAttribute] // RVA: 0xC76CF4 Offset: 0xC76CF4 VA: 0xC76CF4
	private static Predicate<long> <>f__am$cache0; // 0x0

	// Properties
	public bool IsCommandCodeRemoveResult { get; }

	// Methods

	// RVA: 0x1A7BE64 Offset: 0x1A7BE64 VA: 0x1A7BE64
	public void .ctor() { }

	// RVA: 0x1A7BF0C Offset: 0x1A7BF0C VA: 0x1A7BF0C
	public bool get_IsCommandCodeRemoveResult() { }

	// RVA: 0x1A7BF78 Offset: 0x1A7BF78 VA: 0x1A7BF78
	public void ClearCommandCodeRemoveResult() { }

	// RVA: 0x1A7BFD8 Offset: 0x1A7BFD8 VA: 0x1A7BFD8
	public void Init() { }

	// RVA: 0x1A7C004 Offset: 0x1A7C004 VA: 0x1A7C004
	private void TextClear() { }

	// RVA: 0x1A7C410 Offset: 0x1A7C410 VA: 0x1A7C410
	public void Open(ServantSellConfirmMenu.Kind kind, long[] servantIdList, long[] commandCodeIdList, Action<int> onSellServantConfirm) { }

	// RVA: 0x1A7DF7C Offset: 0x1A7DF7C VA: 0x1A7DF7C
	public void OpenSellEquippedLastSvtWarning(ServantSellConfirmMenu.Kind kind, long[] servantIdList, Action<int> callback) { }

	// RVA: 0x1A7E744 Offset: 0x1A7E744 VA: 0x1A7E744
	public void OpenCommandCodeRemoveResult(Action<int> callback) { }

	// RVA: 0x1A7C73C Offset: 0x1A7C73C VA: 0x1A7C73C
	private void SetObjectsActive(ServantSellConfirmMenu.Kind kind) { }

	// RVA: 0x1A7E524 Offset: 0x1A7E524 VA: 0x1A7E524
	private bool GetIsOnlyCloseButton(ServantSellConfirmMenu.Kind kind) { }

	// RVA: 0x1A7EAFC Offset: 0x1A7EAFC VA: 0x1A7EAFC
	private bool GetIsShowCommonInfoObj(ServantSellConfirmMenu.Kind kind) { }

	// RVA: 0x1A7C850 Offset: 0x1A7C850 VA: 0x1A7C850
	private void SetMessageStatusByServant(long[] servantIds, out bool isMaterial, out bool isExceeded, out bool isEquipedCommandCode) { }

	// RVA: 0x1A7CD7C Offset: 0x1A7CD7C VA: 0x1A7CD7C
	private void SetMessageStatusByCommandCode(long[] commandCodeIds) { }

	// RVA: 0x1A7D220 Offset: 0x1A7D220 VA: 0x1A7D220
	private void SetInfoLabels(ServantSellConfirmMenu.Kind kind, bool isNoWarning) { }

	// RVA: 0x1A7D99C Offset: 0x1A7D99C VA: 0x1A7D99C
	private void SetNumLabels(ServantSellConfirmMenu.Kind kind, int getQp, int getMana, int getRarePri) { }

	// RVA: 0x1A7EBA4 Offset: 0x1A7EBA4 VA: 0x1A7EBA4
	private float GetNumLabelWidth(out float qpWidth, out float manaWidth, out float rarePriWidth) { }

	// RVA: 0x1A7CF88 Offset: 0x1A7CF88 VA: 0x1A7CF88
	private void SetMessageText(ServantSellConfirmMenu.Kind kind) { }

	// RVA: 0x1A7EE14 Offset: 0x1A7EE14 VA: 0x1A7EE14
	private string GetMessageText(ServantSellConfirmMenu.Kind kind, bool isBoth) { }

	// RVA: 0x1A7D144 Offset: 0x1A7D144 VA: 0x1A7D144
	private void SetWarningText(ServantSellConfirmMenu.Kind kind, bool isMaterial, bool isExceeded, bool isEquippedCommandCode, out bool isNoWarning) { }

	// RVA: 0x1A7F144 Offset: 0x1A7F144 VA: 0x1A7F144
	private string GetWarningText(ServantSellConfirmMenu.Kind kind, bool isMaterial, bool isExceeded, bool isEquippedCommandCode) { }

	// RVA: 0x1A7DEA8 Offset: 0x1A7DEA8 VA: 0x1A7DEA8
	private void SetListViewManager(ServantSellConfirmMenu.Kind kind, long[] servantIdList, long[] commandCodeIdList, bool isExceeded) { }

	// RVA: 0x1A7F5BC Offset: 0x1A7F5BC VA: 0x1A7F5BC
	private void SetLastServantWarningMessageLabels(ServantSellConfirmMenu.Kind kind) { }

	// RVA: 0x1A7ED70 Offset: 0x1A7ED70 VA: 0x1A7ED70
	private bool IsBoth(bool[] flags) { }

	// RVA: 0x1A7F5C0 Offset: 0x1A7F5C0 VA: 0x1A7F5C0
	private void EndOpen() { }

	// RVA: 0x1A7F67C Offset: 0x1A7F67C VA: 0x1A7F67C
	public void Close() { }

	// RVA: 0x1A7F684 Offset: 0x1A7F684 VA: 0x1A7F684
	public void Close(Action callback) { }

	// RVA: 0x1A7F714 Offset: 0x1A7F714 VA: 0x1A7F714
	private void EndClose() { }

	// RVA: 0x1A7F760 Offset: 0x1A7F760 VA: 0x1A7F760
	private void CallOnClose() { }

	// RVA: 0x1A7F77C Offset: 0x1A7F77C VA: 0x1A7F77C
	private void CallOnSellServantConfirm(int result) { }

	// RVA: 0x1A7F7F4 Offset: 0x1A7F7F4 VA: 0x1A7F7F4
	public void OnClickDecide() { }

	// RVA: 0x1A7FF78 Offset: 0x1A7FF78 VA: 0x1A7FF78
	private void OpenQpMaxAlert(string title, string message, string getable) { }

	// RVA: 0x1A802E0 Offset: 0x1A802E0 VA: 0x1A802E0
	private void TransitionToCombineScene() { }

	// RVA: 0x1A7F9D8 Offset: 0x1A7F9D8 VA: 0x1A7F9D8
	private bool GetIsQpMaxAlert(out string title, out string message, out string getable) { }

	// RVA: 0x1A7FED0 Offset: 0x1A7FED0 VA: 0x1A7FED0
	private void SellServantDecide() { }

	// RVA: 0x1A80358 Offset: 0x1A80358 VA: 0x1A80358
	public void EndMaxErrorDialog() { }

	// RVA: 0x1A80368 Offset: 0x1A80368 VA: 0x1A80368
	public void OnClickCancel() { }

	// RVA: 0x1A8042C Offset: 0x1A8042C VA: 0x1A8042C
	public void OnClickClose() { }

	// RVA: 0x1A804C0 Offset: 0x1A804C0 VA: 0x1A804C0
	public void DestroyList() { }

	// RVA: 0x1A8055C Offset: 0x1A8055C VA: 0x1A8055C
	public void ModifyItem(long selectedId) { }

	// RVA: 0x1A80590 Offset: 0x1A80590 VA: 0x1A80590
	private void OnSelectServantDetail(ServantSellConfirmListViewItem selectItem) { }

	// RVA: 0x1A807FC Offset: 0x1A807FC VA: 0x1A807FC
	private void EndShowServant(bool isDecide) { }

	// RVA: 0x1A808B4 Offset: 0x1A808B4 VA: 0x1A808B4
	private void EndCloseShowServant() { }

	// RVA: 0x1A806DC Offset: 0x1A806DC VA: 0x1A806DC
	private void OnSelectCommandCodeDetail(ServantSellConfirmListViewItem selectItem) { }

	// RVA: 0x1A80954 Offset: 0x1A80954 VA: 0x1A80954
	private void EndShowCommandCode(bool isDecide) { }

	// RVA: 0x1A80A0C Offset: 0x1A80A0C VA: 0x1A80A0C
	private void EndCloseShowCommandCode() { }

	// RVA: 0x1A7EB04 Offset: 0x1A7EB04 VA: 0x1A7EB04
	private void SetLabelLocalPositionY(UILabel label, float y) { }

	// RVA: 0x1A80AAC Offset: 0x1A80AAC VA: 0x1A80AAC
	public static ServantSellConfirmMenu.Kind GetServantSellConfirmKindOnOpenConfirm(ServantOperationManager.Kind tabKind, bool isNoServant, bool isSellEquipedCommandCodeLastServant) { }

	// RVA: 0x1A80AFC Offset: 0x1A80AFC VA: 0x1A80AFC
	public static ServantSellConfirmMenu.Kind GetServantSellConfirmKindOnRequestEnd(ServantOperationManager.Kind tabKind, bool isError) { }

	// RVA: 0x1A80B40 Offset: 0x1A80B40 VA: 0x1A80B40
	public void OnEnable() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD16A0 Offset: 0xCD16A0 VA: 0xCD16A0
	// RVA: 0x1A80BE8 Offset: 0x1A80BE8 VA: 0x1A80BE8
	private static bool <OpenSellEquippedLastSvtWarning>m__0(long s) { }
}

// Namespace: 
public enum ServantSellConfirmMenu.Kind // TypeDefIndex: 10610
{
	// Fields
	public int value__; // 0x0
	public const ServantSellConfirmMenu.Kind SELECT_SERVANT = 0;
	public const ServantSellConfirmMenu.Kind SELECT_SERVANT_EQUIP = 1;
	public const ServantSellConfirmMenu.Kind SELECT_SERVANT_EXCEEDED = 2;
	public const ServantSellConfirmMenu.Kind SELECT_COMMAND_CODE = 3;
	public const ServantSellConfirmMenu.Kind SELECT_LAST_SVT = 4;
	public const ServantSellConfirmMenu.Kind SELL_SERVANT = 5;
	public const ServantSellConfirmMenu.Kind SELL_SERVANT_EQUIP = 6;
	public const ServantSellConfirmMenu.Kind SELL_COMMAND_CODE = 7;
	public const ServantSellConfirmMenu.Kind SELL_ERROR_SERVANT = 8;
	public const ServantSellConfirmMenu.Kind SELL_ERROR_SERVANT_EQUIP = 9;
	public const ServantSellConfirmMenu.Kind SELL_ERROR_COMMAND_CODE = 10;
	public const ServantSellConfirmMenu.Kind NO_SELECT_SERVANT = 11;
	public const ServantSellConfirmMenu.Kind NO_SELECT_SERVANT_EQUIP = 12;
	public const ServantSellConfirmMenu.Kind NO_SELECT_COMMAND_CODE = 13;
}

// Namespace: 
private enum ServantSellConfirmMenu.State // TypeDefIndex: 10611
{
	// Fields
	public int value__; // 0x0
	public const ServantSellConfirmMenu.State INIT = 0;
	public const ServantSellConfirmMenu.State OPEN = 1;
	public const ServantSellConfirmMenu.State INPUT = 2;
	public const ServantSellConfirmMenu.State SELECTED = 3;
	public const ServantSellConfirmMenu.State CLOSE = 4;
}

// Namespace: 
private enum ServantSellConfirmMenu.ServantType // TypeDefIndex: 10612
{
	// Fields
	public int value__; // 0x0
	public const ServantSellConfirmMenu.ServantType SERVANT = 0;
	public const ServantSellConfirmMenu.ServantType SERVANT_EQUIP = 1;
	public const ServantSellConfirmMenu.ServantType COMMAND_CODE = 2;
	public const ServantSellConfirmMenu.ServantType SUM = 3;
}

// Namespace: 
public class ServantSellMaxAlertDialog : BaseDialog // TypeDefIndex: 10613
{
	// Fields
	[SerializeField] // RVA: 0xC76D04 Offset: 0xC76D04 VA: 0xC76D04
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC76D14 Offset: 0xC76D14 VA: 0xC76D14
	private UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC76D24 Offset: 0xC76D24 VA: 0xC76D24
	private UILabel getableLabel; // 0x68
	[SerializeField] // RVA: 0xC76D34 Offset: 0xC76D34 VA: 0xC76D34
	private UICommonButton decideButton; // 0x70
	[SerializeField] // RVA: 0xC76D44 Offset: 0xC76D44 VA: 0xC76D44
	private UICommonButton transitionButton; // 0x78
	[SerializeField] // RVA: 0xC76D54 Offset: 0xC76D54 VA: 0xC76D54
	private UICommonButton closeButton; // 0x80
	[SerializeField] // RVA: 0xC76D64 Offset: 0xC76D64 VA: 0xC76D64
	private UILabel decideLabel; // 0x88
	[SerializeField] // RVA: 0xC76D74 Offset: 0xC76D74 VA: 0xC76D74
	private UILabel transitionLabel; // 0x90
	[SerializeField] // RVA: 0xC76D84 Offset: 0xC76D84 VA: 0xC76D84
	private UILabel closeLabel; // 0x98
	private ServantSellMaxAlertDialog.State state; // 0xA0
	private Action onDecide; // 0xA8
	private Action onTransition; // 0xB0
	private Action onClose; // 0xB8

	// Methods

	// RVA: 0x1A80BF4 Offset: 0x1A80BF4 VA: 0x1A80BF4
	public void .ctor() { }

	// RVA: 0x1A80C5C Offset: 0x1A80C5C VA: 0x1A80C5C
	private void Init() { }

	// RVA: 0x1A8010C Offset: 0x1A8010C VA: 0x1A8010C
	public void Open(string title, string message, string getable, string decide, string transition, string close, Action onDecide, Action onTransition, Action onClose) { }

	// RVA: 0x1A80EE4 Offset: 0x1A80EE4 VA: 0x1A80EE4
	private void EndOpen() { }

	// RVA: 0x1A80EF0 Offset: 0x1A80EF0 VA: 0x1A80EF0
	private void Close(Action onCloseEnd) { }

	// RVA: 0x1A80FC8 Offset: 0x1A80FC8 VA: 0x1A80FC8
	private void EndClose() { }

	// RVA: 0x1A80FCC Offset: 0x1A80FCC VA: 0x1A80FCC
	private void OnClickDecide() { }

	// RVA: 0x1A81020 Offset: 0x1A81020 VA: 0x1A81020
	private void OnClickTransition() { }

	// RVA: 0x1A81154 Offset: 0x1A81154 VA: 0x1A81154
	private void OnClickClose() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD16B0 Offset: 0xCD16B0 VA: 0xCD16B0
	// RVA: 0x1A81214 Offset: 0x1A81214 VA: 0x1A81214
	private void <OnClickTransition>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD16C0 Offset: 0xCD16C0 VA: 0xCD16C0
	// RVA: 0x1A81248 Offset: 0x1A81248 VA: 0x1A81248
	private void <OnClickClose>m__1() { }
}

// Namespace: 
private enum ServantSellMaxAlertDialog.State // TypeDefIndex: 10614
{
	// Fields
	public int value__; // 0x0
	public const ServantSellMaxAlertDialog.State NONE = 0;
	public const ServantSellMaxAlertDialog.State INIT = 1;
	public const ServantSellMaxAlertDialog.State OPEN = 2;
	public const ServantSellMaxAlertDialog.State INPUT = 3;
	public const ServantSellMaxAlertDialog.State SELECTED = 4;
	public const ServantSellMaxAlertDialog.State CLOSE = 5;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC453E4 Offset: 0xC453E4 VA: 0xC453E4
private sealed class ServantSellMaxAlertDialog.<Close>c__AnonStorey0 // TypeDefIndex: 10615
{
	// Fields
	internal Action onCloseEnd; // 0x10
	internal ServantSellMaxAlertDialog $this; // 0x18

	// Methods

	// RVA: 0x1A80FC0 Offset: 0x1A80FC0 VA: 0x1A80FC0
	public void .ctor() { }

	// RVA: 0x1A8125C Offset: 0x1A8125C VA: 0x1A8125C
	internal void <>m__0() { }
}

// Namespace: 
public class ServantSellMenu : BaseMenu // TypeDefIndex: 10616
{
	// Fields
	[SerializeField] // RVA: 0xC76D94 Offset: 0xC76D94 VA: 0xC76D94
	private ServantOperationManager servantOperationManager; // 0x58
	[SerializeField] // RVA: 0xC76DA4 Offset: 0xC76DA4 VA: 0xC76DA4
	private UILabel servantTabLabel; // 0x60
	[SerializeField] // RVA: 0xC76DB4 Offset: 0xC76DB4 VA: 0xC76DB4
	private UILabel servantEquipTabLabel; // 0x68
	[SerializeField] // RVA: 0xC76DC4 Offset: 0xC76DC4 VA: 0xC76DC4
	private UILabel commandCodeTabLabel; // 0x70
	[SerializeField] // RVA: 0xC76DD4 Offset: 0xC76DD4 VA: 0xC76DD4
	private UISprite servantTabTitleSprite; // 0x78
	[SerializeField] // RVA: 0xC76DE4 Offset: 0xC76DE4 VA: 0xC76DE4
	private UISprite servantEquipTabTitleSprite; // 0x80
	[SerializeField] // RVA: 0xC76DF4 Offset: 0xC76DF4 VA: 0xC76DF4
	private UISprite commandCodeTabTitleSprite; // 0x88
	[SerializeField] // RVA: 0xC76E04 Offset: 0xC76E04 VA: 0xC76E04
	private UISprite servantTabSprite; // 0x90
	[SerializeField] // RVA: 0xC76E14 Offset: 0xC76E14 VA: 0xC76E14
	private UISprite servantEquipTabSprite; // 0x98
	[SerializeField] // RVA: 0xC76E24 Offset: 0xC76E24 VA: 0xC76E24
	private UISprite commandCodeTabSprite; // 0xA0
	[SerializeField] // RVA: 0xC76E34 Offset: 0xC76E34 VA: 0xC76E34
	private UICommonButton servantTabButton; // 0xA8
	[SerializeField] // RVA: 0xC76E44 Offset: 0xC76E44 VA: 0xC76E44
	private UICommonButton servantEquipTabButton; // 0xB0
	[SerializeField] // RVA: 0xC76E54 Offset: 0xC76E54 VA: 0xC76E54
	private UICommonButton commandCodeTabButton; // 0xB8
	private ServantSellMenu.State state; // 0xC0
	private Action<ServantSellMenu.ResultKind, long[], long[]> onSelectSellServant; // 0xC8
	private Action onOpen; // 0xD0
	private Action onClose; // 0xD8
	private ServantOperationManager.Kind tabKind; // 0xE0
	private long servantStatusId; // 0xE8
	private long commandCodeStatusId; // 0xF0

	// Properties
	public bool IsSellEquipedCmdCodeLastServant { get; }

	// Methods

	// RVA: 0x1A8129C Offset: 0x1A8129C VA: 0x1A8129C
	public void .ctor() { }

	// RVA: 0x1A81304 Offset: 0x1A81304 VA: 0x1A81304
	public ServantOperationManager.Kind GetTabKind() { }

	// RVA: 0x1A8130C Offset: 0x1A8130C VA: 0x1A8130C
	public bool get_IsSellEquipedCmdCodeLastServant() { }

	// RVA: 0x1A8133C Offset: 0x1A8133C VA: 0x1A8133C
	public void Init() { }

	// RVA: 0x1A81380 Offset: 0x1A81380 VA: 0x1A81380
	public void Init(ServantOperationManager.Kind tabToInit) { }

	// RVA: 0x1A813D4 Offset: 0x1A813D4 VA: 0x1A813D4
	public void Open(Action<ServantSellMenu.ResultKind, long[], long[]> onSelectSellServant, Action onOpen) { }

	// RVA: 0x1A81618 Offset: 0x1A81618 VA: 0x1A81618
	private void EndOpen() { }

	// RVA: 0x1A816F4 Offset: 0x1A816F4 VA: 0x1A816F4
	private void CallOnOpen() { }

	// RVA: 0x1A81710 Offset: 0x1A81710 VA: 0x1A81710
	public void Close(Action callback) { }

	// RVA: 0x1A817C0 Offset: 0x1A817C0 VA: 0x1A817C0
	private void EndClose() { }

	// RVA: 0x1A817FC Offset: 0x1A817FC VA: 0x1A817FC
	private void CallOnClose() { }

	// RVA: 0x1A814FC Offset: 0x1A814FC VA: 0x1A814FC
	private void SetTabKind(ServantOperationManager.Kind kind, bool isInit = False) { }

	// RVA: 0x1A81818 Offset: 0x1A81818 VA: 0x1A81818
	private void SetTabLabel(ServantOperationManager.Kind kind) { }

	// RVA: 0x1A81CC0 Offset: 0x1A81CC0 VA: 0x1A81CC0
	private void SetTabButton(UICommonButton tabButton, UISprite titleSprite, UISprite tabSprite, ServantOperationManager.Kind selectedKind, ServantOperationManager.Kind tabKind, bool isInit) { }

	// RVA: 0x1A81E38 Offset: 0x1A81E38 VA: 0x1A81E38
	private string GetTabTitleSpriteName(ServantOperationManager.Kind kind, bool isSelected) { }

	// RVA: 0x1A81F08 Offset: 0x1A81F08 VA: 0x1A81F08
	public void OnClickTabServant() { }

	// RVA: 0x1A81FB8 Offset: 0x1A81FB8 VA: 0x1A81FB8
	public void OnClickTabServantEquip() { }

	// RVA: 0x1A8208C Offset: 0x1A8208C VA: 0x1A8208C
	public void OnClickTabCommandCode() { }

	// RVA: 0x1A8213C Offset: 0x1A8213C VA: 0x1A8213C
	private void CallOnSelectServant(ServantSellMenu.ResultKind result, long[] servantList, long[] commandCodeList) { }

	// RVA: 0x1A821D0 Offset: 0x1A821D0 VA: 0x1A821D0
	private void OnSelectSellServant(ServantOperationManager.ActionKind kind, long[] servantList, long[] commandCodeList) { }

	// RVA: 0x1A8245C Offset: 0x1A8245C VA: 0x1A8245C
	private void EndShowServant(bool isDecide, bool isIndividualityChanged, int questId) { }

	// RVA: 0x1A82598 Offset: 0x1A82598 VA: 0x1A82598
	private void EndShowCommandCode(bool isDecide, bool isIndividualityChanged) { }

	// RVA: 0x1A82668 Offset: 0x1A82668 VA: 0x1A82668
	private void EndCloseShowServant() { }

	// RVA: 0x1A8270C Offset: 0x1A8270C VA: 0x1A8270C
	private void EndCloseShowServantQuestJump() { }

	// RVA: 0x1A82778 Offset: 0x1A82778 VA: 0x1A82778
	public void InitBackListView() { }

	// RVA: 0x1A827A8 Offset: 0x1A827A8 VA: 0x1A827A8
	public void ModifyListItem(long[] selectedSvtIds, long[] selectedCommandCodeIds) { }
}

// Namespace: 
public enum ServantSellMenu.ResultKind // TypeDefIndex: 10617
{
	// Fields
	public int value__; // 0x0
	public const ServantSellMenu.ResultKind CANCEL = 0;
	public const ServantSellMenu.ResultKind DECIDE = 1;
}

// Namespace: 
private enum ServantSellMenu.State // TypeDefIndex: 10618
{
	// Fields
	public int value__; // 0x0
	public const ServantSellMenu.State INIT = 0;
	public const ServantSellMenu.State OPEN = 1;
	public const ServantSellMenu.State INPUT = 2;
	public const ServantSellMenu.State SELECTED = 3;
	public const ServantSellMenu.State CLOSE = 4;
	public const ServantSellMenu.State SHOW_SERVANT_DETAIL = 5;
}

// Namespace: 
public class ShopActionManager : MonoBehaviour // TypeDefIndex: 10619
{
	// Fields
	private List<ShopActionEntity> shopActionList; // 0x18
	private Action afterCallback; // 0x20
	private bool isVoicePlaying; // 0x28
	private bool isVoiceWaiting; // 0x29

	// Methods

	// RVA: 0x133693C Offset: 0x133693C VA: 0x133693C
	public void .ctor() { }

	// RVA: 0x13369AC Offset: 0x13369AC VA: 0x13369AC
	public void SetShopAction(List<ShopActionEntity> shopActionEntityList, Action callback) { }

	// RVA: 0x13369B4 Offset: 0x13369B4 VA: 0x13369B4
	public void ExecutionShopAction() { }

	// RVA: 0x1336CF0 Offset: 0x1336CF0 VA: 0x1336CF0
	private void VoiceEnd() { }

	// RVA: 0x1336DB0 Offset: 0x1336DB0 VA: 0x1336DB0
	public bool IsVoiceWait() { }
}

// Namespace: 
public class ShopBuyItemConfirmMenu : BaseDialog // TypeDefIndex: 10620
{
	// Fields
	public static readonly string VALENTINE_BTN_NAME; // 0x0
	public static readonly string DECIED_BTN_NAME_DEFAULT; // 0x8
	public static readonly string DECIED_BTN_NAME_LIMIT_MATERIAL; // 0x10
	private static readonly int PRICE_DATA_LABEL_MAX_WIDTH; // 0x18
	[SerializeField] // RVA: 0xC76E64 Offset: 0xC76E64 VA: 0xC76E64
	private UICrossNarrowLabel nameLabel; // 0x58
	[SerializeField] // RVA: 0xC76E74 Offset: 0xC76E74 VA: 0xC76E74
	private UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC76E84 Offset: 0xC76E84 VA: 0xC76E84
	private UILabel warningLabel; // 0x68
	[SerializeField] // RVA: 0xC76E94 Offset: 0xC76E94 VA: 0xC76E94
	private UILabel freeLabel; // 0x70
	[SerializeField] // RVA: 0xC76EA4 Offset: 0xC76EA4 VA: 0xC76EA4
	private UILabel presentAheadLabel; // 0x78
	[SerializeField] // RVA: 0xC76EB4 Offset: 0xC76EB4 VA: 0xC76EB4
	private UILabel textOnMask; // 0x80
	[SerializeField] // RVA: 0xC76EC4 Offset: 0xC76EC4 VA: 0xC76EC4
	private UICommonButton decideButton; // 0x88
	[SerializeField] // RVA: 0xC76ED4 Offset: 0xC76ED4 VA: 0xC76ED4
	private UISprite decideButtonImg; // 0x90
	[SerializeField] // RVA: 0xC76EE4 Offset: 0xC76EE4 VA: 0xC76EE4
	private UICommonButton cancelButton; // 0x98
	[SerializeField] // RVA: 0xC76EF4 Offset: 0xC76EF4 VA: 0xC76EF4
	private ItemIconComponent itemIcon; // 0xA0
	[SerializeField] // RVA: 0xC76F04 Offset: 0xC76F04 VA: 0xC76F04
	private UICrossNarrowLabel nameTextLabel; // 0xA8
	[SerializeField] // RVA: 0xC76F14 Offset: 0xC76F14 VA: 0xC76F14
	private UISprite itemMaskeSprite; // 0xB0
	[SerializeField] // RVA: 0xC76F24 Offset: 0xC76F24 VA: 0xC76F24
	private UISprite bandSprite; // 0xB8
	[SerializeField] // RVA: 0xC76F34 Offset: 0xC76F34 VA: 0xC76F34
	private GameObject priceInfoFree; // 0xC0
	[SerializeField] // RVA: 0xC76F44 Offset: 0xC76F44 VA: 0xC76F44
	private GameObject priceInfo1; // 0xC8
	[SerializeField] // RVA: 0xC76F54 Offset: 0xC76F54 VA: 0xC76F54
	private GameObject priceInfo2; // 0xD0
	[SerializeField] // RVA: 0xC76F64 Offset: 0xC76F64 VA: 0xC76F64
	private UILabel priceFreeDataLabel; // 0xD8
	[SerializeField] // RVA: 0xC76F74 Offset: 0xC76F74 VA: 0xC76F74
	private UILabel priceDataLabel; // 0xE0
	[SerializeField] // RVA: 0xC76F84 Offset: 0xC76F84 VA: 0xC76F84
	private UILabel[] priceDataLabels; // 0xE8
	[SerializeField] // RVA: 0xC76F94 Offset: 0xC76F94 VA: 0xC76F94
	private UIIconLabel priceIconLabel; // 0xF0
	[SerializeField] // RVA: 0xC76FA4 Offset: 0xC76FA4 VA: 0xC76FA4
	private UIIconLabel[] priceIconLabels; // 0xF8
	[SerializeField] // RVA: 0xC76FB4 Offset: 0xC76FB4 VA: 0xC76FB4
	private ItemIconComponent eventItemIcon; // 0x100
	[SerializeField] // RVA: 0xC76FC4 Offset: 0xC76FC4 VA: 0xC76FC4
	private ItemIconComponent[] eventItemIcons; // 0x108
	[SerializeField] // RVA: 0xC76FD4 Offset: 0xC76FD4 VA: 0xC76FD4
	private NoTitleDialog noTitleDialog; // 0x110
	[SerializeField] // RVA: 0xC76FE4 Offset: 0xC76FE4 VA: 0xC76FE4
	private UILabel numTitleLabel; // 0x118
	[SerializeField] // RVA: 0xC76FF4 Offset: 0xC76FF4 VA: 0xC76FF4
	private UILabel numTextLabel; // 0x120
	[SerializeField] // RVA: 0xC77004 Offset: 0xC77004 VA: 0xC77004
	private UISprite deceideBtnSprite; // 0x128
	[SerializeField] // RVA: 0xC77014 Offset: 0xC77014 VA: 0xC77014
	private UICommonButton infoButton; // 0x130
	[SerializeField] // RVA: 0xC77024 Offset: 0xC77024 VA: 0xC77024
	private UILabel extensionInfoLabel; // 0x138
	[SerializeField] // RVA: 0xC77034 Offset: 0xC77034 VA: 0xC77034
	private UISprite possessionSprite; // 0x140
	[SerializeField] // RVA: 0xC77044 Offset: 0xC77044 VA: 0xC77044
	private UISprite chocolateSprite; // 0x148
	[SerializeField] // RVA: 0xC77054 Offset: 0xC77054 VA: 0xC77054
	private UILabel LineText; // 0x150
	[SerializeField] // RVA: 0xC77064 Offset: 0xC77064 VA: 0xC77064
	private UILabel LineText2digit; // 0x158
	private Vector3 freeLabelPos; // 0x160
	private Vector3 freeLabelPos2digit; // 0x16C
	private ShopBuyItemConfirmMenu.State state; // 0x178
	private Action<int> onDecide; // 0x180
	private Action onClose; // 0x188
	private Action onChecked; // 0x190
	private Action<int> onCloseReturnWarning; // 0x198
	private ShopEntity shopEntity; // 0x1A0
	private ShopBuyItemListViewManager.Kind shopKind; // 0x1A8
	private const int BuyDecide = 1;
	private const int BuyCancel = 0;

	// Properties
	private bool isAnotehrPayDisp { get; }
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x133AFC0 Offset: 0x133AFC0 VA: 0x133AFC0
	public void .ctor() { }

	// RVA: 0x133B0AC Offset: 0x133B0AC VA: 0x133B0AC
	private bool get_isAnotehrPayDisp() { }

	// RVA: 0x133B140 Offset: 0x133B140 VA: 0x133B140
	public void Init() { }

	// RVA: 0x133B4A0 Offset: 0x133B4A0 VA: 0x133B4A0
	public void Open(ShopEntity shopEntity, ShopBuyItemListViewManager.Kind shopKind, Action<int> onDecide, int buttonSpriteId = 0) { }

	// RVA: 0x133B3E0 Offset: 0x133B3E0 VA: 0x133B3E0
	private void SetLabelActive(UILabel label, bool isActive) { }

	// RVA: 0x133B320 Offset: 0x133B320 VA: 0x133B320
	private void SetLabelText(UILabel label, string text) { }

	// RVA: 0x133DE4C Offset: 0x133DE4C VA: 0x133DE4C
	private void SetSpriteActive(UISprite sprite, bool isActive) { }

	// RVA: 0x133B868 Offset: 0x133B868 VA: 0x133B868
	private void SetSpriteName(UISprite sprite, string spriteName) { }

	// RVA: 0x133DF0C Offset: 0x133DF0C VA: 0x133DF0C
	private void SetInfoButton(ShopEntity shopEntity, bool isInPreparation) { }

	// RVA: 0x133D8EC Offset: 0x133D8EC VA: 0x133D8EC
	private void SetItemIcon(ShopEntity shopEntity, bool isInPreparation) { }

	// RVA: 0x133DC14 Offset: 0x133DC14 VA: 0x133DC14
	private void SetNameText(ShopEntity shopEntity, bool isInPreparation, string replacedName, string preparationItemName) { }

	// RVA: 0x133E0A0 Offset: 0x133E0A0 VA: 0x133E0A0
	private int[] GetUserItemCounts() { }

	// RVA: 0x133CFEC Offset: 0x133CFEC VA: 0x133CFEC
	private bool GetIsBuyable(ShopEntity shopEntity, bool isInPreparation, UserGameEntity userGameEntity) { }

	// RVA: 0x133DD54 Offset: 0x133DD54 VA: 0x133DD54
	private bool GetIsShowMask(ShopEntity shopEntity, bool isInPreparation) { }

	// RVA: 0x133B910 Offset: 0x133B910 VA: 0x133B910
	private void SetMessageLabel(ShopEntity shopEntity, bool isInPreparation, string preparationMessage) { }

	// RVA: 0x133BAC8 Offset: 0x133BAC8 VA: 0x133BAC8
	private void SetWarningLabel(ShopEntity shopEntity, bool isInPreparation, UserGameEntity userGameEntity) { }

	// RVA: 0x133D504 Offset: 0x133D504 VA: 0x133D504
	private void SetAheadText(ShopEntity shopEntity, bool isBuyable) { }

	// RVA: 0x133C730 Offset: 0x133C730 VA: 0x133C730
	private void SetBandSprite(ShopEntity shopEntity) { }

	// RVA: 0x133C808 Offset: 0x133C808 VA: 0x133C808
	private void SetTextOnMask(ShopEntity shopEntity, bool isInPreparation) { }

	// RVA: 0x133CD54 Offset: 0x133CD54 VA: 0x133CD54
	private void SetNumText(ShopEntity shopEntity, bool isInPreparation) { }

	// RVA: 0x133CE90 Offset: 0x133CE90 VA: 0x133CE90
	private void SetExtensionText(ShopEntity shopEntity, bool isNotHavingShopItemReceived) { }

	// RVA: 0x133CF7C Offset: 0x133CF7C VA: 0x133CF7C
	private void SetPriceInfo(ShopEntity shopEntity, bool isInPreparation, int buttonSpriteId, bool isNotHavingShopItemReceived) { }

	// RVA: 0x133E690 Offset: 0x133E690 VA: 0x133E690
	private void SetPriceInfoActive(ShopEntity shopEntity, bool isNotHavingShopItemReceived) { }

	// RVA: 0x133E83C Offset: 0x133E83C VA: 0x133E83C
	private void SetPriceDataText(ShopEntity shopEntity, bool isInPreparation, bool isNotHavingShopItemReceived) { }

	// RVA: 0x133F908 Offset: 0x133F908 VA: 0x133F908
	private void SetDecideButtonSprite(ShopEntity shopEntity, int eventId, int buttonSpriteId) { }

	// RVA: 0x133FC30 Offset: 0x133FC30 VA: 0x133FC30
	private void EndOpen() { }

	// RVA: 0x133FC3C Offset: 0x133FC3C VA: 0x133FC3C
	public void SetInput(Action<int> onDecide) { }

	// RVA: 0x133FC4C Offset: 0x133FC4C VA: 0x133FC4C
	public void Close() { }

	// RVA: 0x133FC54 Offset: 0x133FC54 VA: 0x133FC54
	public void Close(Action callback) { }

	// RVA: 0x133FCE4 Offset: 0x133FCE4 VA: 0x133FCE4
	private void EndClose() { }

	// RVA: 0x133FD64 Offset: 0x133FD64 VA: 0x133FD64
	private void CallOnDecide(int result) { }

	// RVA: 0x133FD48 Offset: 0x133FD48 VA: 0x133FD48
	private void CallOnClose() { }

	// RVA: 0x133FDDC Offset: 0x133FDDC VA: 0x133FDDC
	public void OnClickDecide() { }

	// RVA: 0x134028C Offset: 0x134028C VA: 0x134028C
	private string GetMaxAlertMessage(ShopType.Type shopType, ItemType.Type itemType) { }

	// RVA: 0x13403B4 Offset: 0x13403B4 VA: 0x13403B4
	private string GetMaxOverItemName(ItemType.Type itemType) { }

	// RVA: 0x1340320 Offset: 0x1340320 VA: 0x1340320
	private string GetMaxAlertBase(ShopType.Type shopType) { }

	// RVA: 0x1340508 Offset: 0x1340508 VA: 0x1340508
	public void EndMaxErrorDialog() { }

	// RVA: 0x1340518 Offset: 0x1340518 VA: 0x1340518
	public void OnClickCancel() { }

	// RVA: 0x13405AC Offset: 0x13405AC VA: 0x13405AC
	public void ReturnWarning(bool isDecide) { }

	// RVA: 0x1340614 Offset: 0x1340614 VA: 0x1340614
	public void ReturnWarningRarePri(bool isDecide) { }

	// RVA: 0x1340708 Offset: 0x1340708 VA: 0x1340708
	public void OnClickInfo() { }

	// RVA: 0x13407F8 Offset: 0x13407F8 VA: 0x13407F8
	private int ShowServantInfomation(int servantId) { }

	// RVA: 0x1340B4C Offset: 0x1340B4C VA: 0x1340B4C
	private int ShowItemInfomation(int itemId) { }

	// RVA: 0x1340CBC Offset: 0x1340CBC VA: 0x1340CBC
	private int ShowCommandCodeInfomation(int commandCodeId) { }

	// RVA: 0x1340E34 Offset: 0x1340E34 VA: 0x1340E34
	private int ShowOtherInfomation(ShopEntity shopEntity) { }

	// RVA: 0x1340AD4 Offset: 0x1340AD4 VA: 0x1340AD4
	private void PlayShowInfomationSound(int seKind) { }

	// RVA: 0x1340F74 Offset: 0x1340F74 VA: 0x1340F74
	public void EndShowServantStatusDialog(bool isDecide) { }

	// RVA: 0x1340FD8 Offset: 0x1340FD8 VA: 0x1340FD8
	public void EndShowServantEquipStatusDialog(bool isDecide) { }

	// RVA: 0x134103C Offset: 0x134103C VA: 0x134103C
	public void EndShowItemDetailDialog(bool isDecide) { }

	// RVA: 0x133E520 Offset: 0x133E520 VA: 0x133E520
	private bool GetIsSetItemEventShop(int[] ids) { }

	// RVA: 0x13410C8 Offset: 0x13410C8 VA: 0x13410C8
	public void OpenAfterCheckedFree(ShopBuyItemListViewItem item, Action onChecked, Action<int> onCloseReturnWarning) { }

	// RVA: 0x1341340 Offset: 0x1341340 VA: 0x1341340 Slot: 6
	protected override string get_closeBtnPath() { }

	// RVA: 0x1341388 Offset: 0x1341388 VA: 0x1341388
	private static void .cctor() { }
}

// Namespace: 
private enum ShopBuyItemConfirmMenu.State // TypeDefIndex: 10621
{
	// Fields
	public int value__; // 0x0
	public const ShopBuyItemConfirmMenu.State INIT = 0;
	public const ShopBuyItemConfirmMenu.State OPEN = 1;
	public const ShopBuyItemConfirmMenu.State INPUT = 2;
	public const ShopBuyItemConfirmMenu.State SELECTED = 3;
	public const ShopBuyItemConfirmMenu.State CLOSE = 4;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC453F4 Offset: 0xC453F4 VA: 0xC453F4
private sealed class ShopBuyItemConfirmMenu.<ReturnWarningRarePri>c__AnonStorey0 // TypeDefIndex: 10622
{
	// Fields
	internal bool isDecide; // 0x10
	internal ShopBuyItemConfirmMenu $this; // 0x18

	// Methods

	// RVA: 0x18BD01C Offset: 0x18BD01C VA: 0x18BD01C
	public void .ctor() { }

	// RVA: 0x18BD024 Offset: 0x18BD024 VA: 0x18BD024
	internal void <>m__0() { }
}

// Namespace: 
public class ShopBuyItemListViewItem : ListViewItem // TypeDefIndex: 10623
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC77074 Offset: 0xC77074 VA: 0xC77074
	[DebuggerBrowsableAttribute] // RVA: 0xC77074 Offset: 0xC77074 VA: 0xC77074
	private ShopEntity <Shop>k__BackingField; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC770B0 Offset: 0xC770B0 VA: 0xC770B0
	[DebuggerBrowsableAttribute] // RVA: 0xC770B0 Offset: 0xC770B0 VA: 0xC770B0
	private ItemEntity[] <EventItemEntities>k__BackingField; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xC770EC Offset: 0xC770EC VA: 0xC770EC
	[DebuggerBrowsableAttribute] // RVA: 0xC770EC Offset: 0xC770EC VA: 0xC770EC
	private ShopBuyItemListViewManager.Kind <ShopKind>k__BackingField; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC77128 Offset: 0xC77128 VA: 0xC77128
	[DebuggerBrowsableAttribute] // RVA: 0xC77128 Offset: 0xC77128 VA: 0xC77128
	private int <TotalNum>k__BackingField; // 0x84
	[CompilerGeneratedAttribute] // RVA: 0xC77164 Offset: 0xC77164 VA: 0xC77164
	[DebuggerBrowsableAttribute] // RVA: 0xC77164 Offset: 0xC77164 VA: 0xC77164
	private long <EnterTime>k__BackingField; // 0x88
	[CompilerGeneratedAttribute] // RVA: 0xC771A0 Offset: 0xC771A0 VA: 0xC771A0
	[DebuggerBrowsableAttribute] // RVA: 0xC771A0 Offset: 0xC771A0 VA: 0xC771A0
	private bool <IsNotHavingShopItemReceived>k__BackingField; // 0x90
	[CompilerGeneratedAttribute] // RVA: 0xC771DC Offset: 0xC771DC VA: 0xC771DC
	[DebuggerBrowsableAttribute] // RVA: 0xC771DC Offset: 0xC771DC VA: 0xC771DC
	private bool <IsAlreadyInPossession>k__BackingField; // 0x91
	[CompilerGeneratedAttribute] // RVA: 0xC77218 Offset: 0xC77218 VA: 0xC77218
	[DebuggerBrowsableAttribute] // RVA: 0xC77218 Offset: 0xC77218 VA: 0xC77218
	private bool <IsRarePriShopPurchased>k__BackingField; // 0x92
	private ItemEntity itemEntity; // 0x98

	// Properties
	public ShopEntity Shop { get; set; }
	public ItemEntity[] EventItemEntities { get; set; }
	public ShopBuyItemListViewManager.Kind ShopKind { get; set; }
	public int TotalNum { get; set; }
	public long EnterTime { get; set; }
	public bool IsNotHavingShopItemReceived { get; set; }
	public bool IsAlreadyInPossession { get; set; }
	public bool IsHaveIconShowable { get; }
	public bool IsRarePriShopPurchased { get; set; }
	public bool IsIndefinitePeriodShowable { get; }
	public string NameText { get; }
	public string BulkNameText { get; }
	public bool IsExchangeQP { get; }
	public IconLabelInfo.IconKind PriceIcon { get; }
	public int ItemCount { get; }
	public bool IsItemTypeFree { get; }
	public int Price { get; }
	public string DetailText { get; }
	public bool IsSoldOut { get; }
	public int LimitNum { get; }
	public long ActiveTime { get; }
	public GamePurchase.Type PurchaseType { get; }
	public int TargetId { get; }
	public bool IsChocolateSvtEquip { get; }
	public string UniqueMessage { get; }

	// Methods

	// RVA: 0x18BD0EC Offset: 0x18BD0EC VA: 0x18BD0EC
	public void .ctor(int index, ShopBuyItemListViewManager.Kind shopKind, ShopEntity shopEntity, long enterTime = -1) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD16D0 Offset: 0xCD16D0 VA: 0xCD16D0
	// RVA: 0x18BD2A4 Offset: 0x18BD2A4 VA: 0x18BD2A4
	public ShopEntity get_Shop() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD16E0 Offset: 0xCD16E0 VA: 0xCD16E0
	// RVA: 0x18BD2AC Offset: 0x18BD2AC VA: 0x18BD2AC
	private void set_Shop(ShopEntity value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD16F0 Offset: 0xCD16F0 VA: 0xCD16F0
	// RVA: 0x18BD2B4 Offset: 0x18BD2B4 VA: 0x18BD2B4
	public ItemEntity[] get_EventItemEntities() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1700 Offset: 0xCD1700 VA: 0xCD1700
	// RVA: 0x18BD2BC Offset: 0x18BD2BC VA: 0x18BD2BC
	private void set_EventItemEntities(ItemEntity[] value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1710 Offset: 0xCD1710 VA: 0xCD1710
	// RVA: 0x18BD2C4 Offset: 0x18BD2C4 VA: 0x18BD2C4
	public ShopBuyItemListViewManager.Kind get_ShopKind() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1720 Offset: 0xCD1720 VA: 0xCD1720
	// RVA: 0x18BD134 Offset: 0x18BD134 VA: 0x18BD134
	private void set_ShopKind(ShopBuyItemListViewManager.Kind value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1730 Offset: 0xCD1730 VA: 0xCD1730
	// RVA: 0x18BD2CC Offset: 0x18BD2CC VA: 0x18BD2CC
	public int get_TotalNum() { }

