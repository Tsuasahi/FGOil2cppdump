	public void .ctor() { }
}

// Namespace: 
public class UserMaster : DataMasterBase<UserMaster, UserEntity, long> // TypeDefIndex: 7450
{
	// Methods

	// RVA: 0x1BEE56C Offset: 0x1BEE56C VA: 0x1BEE56C
	public void .ctor() { }
}

// Namespace: 
public class UserPresentBoxEntity : DataEntityBase<string> // TypeDefIndex: 7451
{
	// Fields
	public long receiveUserId; // 0x10
	public long presentId; // 0x18
	public bool isAuto; // 0x20
	public int messageRefType; // 0x24
	public int messageId; // 0x28
	public string message; // 0x30
	public int fromType; // 0x38
	public long fromId; // 0x40
	public int giftType; // 0x48
	public int objectId; // 0x4C
	public int num; // 0x50
	public int flag; // 0x54
	public long createdAt; // 0x58

	// Methods

	// RVA: 0x1A27918 Offset: 0x1A27918 VA: 0x1A27918
	public void .ctor() { }

	// RVA: 0x1A27968 Offset: 0x1A27968 VA: 0x1A27968 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1A27978 Offset: 0x1A27978 VA: 0x1A27978
	public static string CreatePK(long receiveUserId, long presentId) { }

	// RVA: 0x1A27980 Offset: 0x1A27980 VA: 0x1A27980
	public void GetInfo(out string nameText, out string countText) { }

	// RVA: 0x1A27EB0 Offset: 0x1A27EB0 VA: 0x1A27EB0
	public long expireAt() { }

	// RVA: 0x1A27FB8 Offset: 0x1A27FB8 VA: 0x1A27FB8
	public bool IsExpired(bool checkItemExpireTime = False) { }

	// RVA: 0x1A27DC8 Offset: 0x1A27DC8 VA: 0x1A27DC8
	private string GetCountText(Gift.Type gType, ItemEntity itemEnt, int num) { }

	// RVA: 0x1A27F9C Offset: 0x1A27F9C VA: 0x1A27F9C
	public bool IsEnableFlag(int flagIndex) { }
}

// Namespace: 
public class UserPresentBoxMaster : DataMasterBase<UserPresentBoxMaster, UserPresentBoxEntity, string> // TypeDefIndex: 7452
{
	// Fields
	public static readonly int IMPORTANT_FOR_EVENT; // 0x0
	public static readonly int INDEFINITE_PERIOD; // 0x4
	public static readonly int PAY_TYPE_RARE_PRI; // 0x8
	public static readonly int IMPORTANT_FOR_LIMIT; // 0xC
	[CompilerGeneratedAttribute] // RVA: 0xCC1EF4 Offset: 0xCC1EF4 VA: 0xCC1EF4
	private static Comparison<UserPresentBoxEntity> <>f__am$cache0; // 0x10

	// Methods

	// RVA: 0x1A2A308 Offset: 0x1A2A308 VA: 0x1A2A308
	public void .ctor() { }

	// RVA: 0x1A2A35C Offset: 0x1A2A35C VA: 0x1A2A35C
	public UserPresentBoxEntity GetEntity(long receiveUserId, long presentId) { }

	// RVA: 0x1A2A3D0 Offset: 0x1A2A3D0 VA: 0x1A2A3D0
	public bool TryGetEntity(out UserPresentBoxEntity entity, long receiveUserId, long presentId) { }

	// RVA: 0x1A2A454 Offset: 0x1A2A454 VA: 0x1A2A454
	public UserPresentBoxEntity[] getVaildList(long userId) { }

	// RVA: 0x1A2A5E0 Offset: 0x1A2A5E0 VA: 0x1A2A5E0
	public UserPresentBoxEntity[] getVaildList(long userId, long[] presentIdList) { }

	// RVA: 0x1A2A8E4 Offset: 0x1A2A8E4 VA: 0x1A2A8E4
	public bool isExist(Gift.Type type, int id) { }

	// RVA: 0x1A2AAD4 Offset: 0x1A2AAD4 VA: 0x1A2AAD4
	public int GetCount(Gift.Type type, int id) { }

	// RVA: 0x1A2ACAC Offset: 0x1A2ACAC VA: 0x1A2ACAC
	public void getValidItemInfo(long userId, out int count, out bool hasLimited) { }

	// RVA: 0x1A2AEE0 Offset: 0x1A2AEE0 VA: 0x1A2AEE0
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3808C Offset: 0xD3808C VA: 0xD3808C
	// RVA: 0x1A2AF60 Offset: 0x1A2AF60 VA: 0x1A2AF60
	private static int <getVaildList>m__0(UserPresentBoxEntity a, UserPresentBoxEntity b) { }
}

// Namespace: 
public class UserPresentHistoryEntity : DataEntityBase<long>, IComparable<UserPresentHistoryEntity>, IEquatable<UserPresentHistoryEntity> // TypeDefIndex: 7453
{
	// Fields
	public long id; // 0x10
	public long userId; // 0x18
	public int giftType; // 0x20
	public int objectId; // 0x24
	public int num; // 0x28
	public long createdAt; // 0x30

	// Methods

	// RVA: 0x1A346CC Offset: 0x1A346CC VA: 0x1A346CC
	public void .ctor() { }

	// RVA: 0x1A3471C Offset: 0x1A3471C VA: 0x1A3471C Slot: 5
	protected sealed override long CreatePrimaryKey() { }

	// RVA: 0x1A34724 Offset: 0x1A34724 VA: 0x1A34724 Slot: 3
	public override string ToString() { }

	// RVA: 0x1A34838 Offset: 0x1A34838 VA: 0x1A34838 Slot: 6
	public int CompareTo(UserPresentHistoryEntity other) { }

	// RVA: 0x1A34898 Offset: 0x1A34898 VA: 0x1A34898 Slot: 7
	public bool Equals(UserPresentHistoryEntity other) { }
}

// Namespace: 
public class UserPresentHistoryMaster : DataMasterBase<UserPresentHistoryMaster, UserPresentHistoryEntity, long>, IEnumerable<UserPresentHistoryEntity>, IEnumerable // TypeDefIndex: 7454
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1F04 Offset: 0xCC1F04 VA: 0xCC1F04
	private static Converter<DataEntityBase, UserPresentHistoryEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1A34EFC Offset: 0x1A34EFC VA: 0x1A34EFC
	public void .ctor() { }

	// RVA: 0x1A34F50 Offset: 0x1A34F50 VA: 0x1A34F50
	public List<UserPresentHistoryEntity> GetEntityList() { }

	// RVA: 0x1A35054 Offset: 0x1A35054 VA: 0x1A35054 Slot: 8
	public IEnumerator<UserPresentHistoryEntity> GetEnumerator() { }

	// RVA: 0x1A350EC Offset: 0x1A350EC VA: 0x1A350EC Slot: 9
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3809C Offset: 0xD3809C VA: 0xD3809C
	// RVA: 0x1A350F0 Offset: 0x1A350F0 VA: 0x1A350F0
	private static UserPresentHistoryEntity <GetEntityList>m__0(DataEntityBase entity) { }
}

// Namespace: 
public class UserPrivilegeEntity : DataEntityBase<string> // TypeDefIndex: 7455
{
	// Fields
	public int userId; // 0x10
	public int privilegeId; // 0x14
	public long startedAt; // 0x18
	public int num; // 0x20

	// Methods

	// RVA: 0x1A3C7C4 Offset: 0x1A3C7C4 VA: 0x1A3C7C4
	public void .ctor() { }

	// RVA: 0x1A3C814 Offset: 0x1A3C814 VA: 0x1A3C814 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1A3C824 Offset: 0x1A3C824 VA: 0x1A3C824
	public static string CreatePK(int userId, int privilegeId) { }
}

// Namespace: 
public class UserPrivilegeMaster : DataMasterBase<UserPrivilegeMaster, UserPrivilegeEntity, string> // TypeDefIndex: 7456
{
	// Methods

	// RVA: 0x1A3C834 Offset: 0x1A3C834 VA: 0x1A3C834
	public void .ctor() { }

	// RVA: 0x1A3C888 Offset: 0x1A3C888 VA: 0x1A3C888
	public UserPrivilegeEntity GetEntity(int userId, int privilegeId) { }

	// RVA: 0x1A3C8FC Offset: 0x1A3C8FC VA: 0x1A3C8FC
	public bool TryGetEntity(out UserPrivilegeEntity entity, int userId, int privilegeId) { }
}

// Namespace: 
public class UserProfileEntity : DataEntityBase<long> // TypeDefIndex: 7457
{
	// Fields
	public long userId; // 0x10
	public string comment; // 0x18

	// Methods

	// RVA: 0x1A3C980 Offset: 0x1A3C980 VA: 0x1A3C980
	public void .ctor() { }

	// RVA: 0x1A3C9D0 Offset: 0x1A3C9D0 VA: 0x1A3C9D0 Slot: 5
	protected sealed override long CreatePrimaryKey() { }
}

// Namespace: 
public class UserProfileMaster : DataMasterBase<UserProfileMaster, UserProfileEntity, long> // TypeDefIndex: 7458
{
	// Methods

	// RVA: 0x1A3C9D8 Offset: 0x1A3C9D8 VA: 0x1A3C9D8
	public void .ctor() { }

	// RVA: 0x1A3CA2C Offset: 0x1A3CA2C VA: 0x1A3CA2C
	public int GetOtherUserSum() { }

	// RVA: 0x1A3CB34 Offset: 0x1A3CB34 VA: 0x1A3CB34
	public OtherUserGameEntity[] GetOtherUserList() { }
}

// Namespace: 
public class UserQuestEntity : DataEntityBase<string> // TypeDefIndex: 7459
{
	// Fields
	private readonly long EXPIRE_NO_LIMIT_TIME; // 0x10
	public long userId; // 0x18
	public int questId; // 0x20
	public int questPhase; // 0x24
	public int clearNum; // 0x28
	public bool isEternalOpen; // 0x2C
	public long lastStartedAt; // 0x30
	public int challengeNum; // 0x38
	public int status; // 0x3C
	public long expireAt; // 0x40
	public long updatedAt; // 0x48
	public long createdAt; // 0x50
	private static long oldId; // 0x0
	private static string userIdString; // 0x8

	// Methods

	// RVA: 0x1A3CD00 Offset: 0x1A3CD00 VA: 0x1A3CD00
	public void .ctor() { }

	// RVA: 0x1A3CD5C Offset: 0x1A3CD5C VA: 0x1A3CD5C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1A3CDCC Offset: 0x1A3CDCC VA: 0x1A3CDCC
	public static string CreatePK(long userId, int questId) { }

	// RVA: 0x1A3CF38 Offset: 0x1A3CF38 VA: 0x1A3CF38
	public long getUserId() { }

	// RVA: 0x1A3CF40 Offset: 0x1A3CF40 VA: 0x1A3CF40
	public int getQuestId() { }

	// RVA: 0x1A3CF48 Offset: 0x1A3CF48 VA: 0x1A3CF48
	public int getQuestPhase() { }

	// RVA: 0x1A3D100 Offset: 0x1A3D100 VA: 0x1A3D100
	public int getClearNum() { }

	// RVA: 0x1A3D130 Offset: 0x1A3D130 VA: 0x1A3D130
	public bool getIsEternalOpen() { }

	// RVA: 0x1A3D138 Offset: 0x1A3D138 VA: 0x1A3D138
	public long getLastStartedAt() { }

	// RVA: 0x1A3D140 Offset: 0x1A3D140 VA: 0x1A3D140
	public int getChallengeNum() { }

	// RVA: 0x1A3D148 Offset: 0x1A3D148 VA: 0x1A3D148
	public long getExpireAt() { }

	// RVA: 0x1A3D150 Offset: 0x1A3D150 VA: 0x1A3D150
	public long getUpdateAt() { }

	// RVA: 0x1A3D158 Offset: 0x1A3D158 VA: 0x1A3D158
	public long getCreateAt() { }

	// RVA: 0x1A3D160 Offset: 0x1A3D160 VA: 0x1A3D160
	public bool IsNotExpired() { }

	// RVA: 0x1A3D1D4 Offset: 0x1A3D1D4 VA: 0x1A3D1D4
	public bool IsExpireNoLimit() { }

	// RVA: 0x1A3CF78 Offset: 0x1A3CF78 VA: 0x1A3CF78
	public bool IsResetInterval() { }

	// RVA: 0x1A3D1E8 Offset: 0x1A3D1E8 VA: 0x1A3D1E8
	public bool HasStatus(UserQuestEntity.StatusFlag statusFlag) { }

	// RVA: 0x1A3D1F8 Offset: 0x1A3D1F8 VA: 0x1A3D1F8
	public bool HasStatus(UserQuestEntity.StatusKind status) { }

	// RVA: 0x1A3D214 Offset: 0x1A3D214 VA: 0x1A3D214
	public bool IsResetStatus() { }

	// RVA: 0x1A3D220 Offset: 0x1A3D220 VA: 0x1A3D220
	private static void .cctor() { }
}

// Namespace: 
public enum UserQuestEntity.StatusKind // TypeDefIndex: 7460
{
	// Fields
	public int value__; // 0x0
	public const UserQuestEntity.StatusKind RESET = 1;
	public const UserQuestEntity.StatusKind RESET_REWARD = 2;
	public const UserQuestEntity.StatusKind PURCHASED_RARE_PRI = 3;
	public const UserQuestEntity.StatusKind CHALLENGED_NEWEST_PHASE = 4;
	public const UserQuestEntity.StatusKind BATTLE_RESULT_WIN = 5;
	public const UserQuestEntity.StatusKind BATTLE_RESULT_LOSE = 6;
	public const UserQuestEntity.StatusKind LATEST_RESULT_WIN = 7;
	public const UserQuestEntity.StatusKind LATEST_RESULT_LOSE = 8;
}

// Namespace: 
public enum UserQuestEntity.StatusFlag // TypeDefIndex: 7461
{
	// Fields
	public int value__; // 0x0
	public const UserQuestEntity.StatusFlag RESET = 2;
	public const UserQuestEntity.StatusFlag RESET_REWARD = 4;
	public const UserQuestEntity.StatusFlag PURCHASED_RARE_PRI = 8;
	public const UserQuestEntity.StatusFlag CHALLENGED_NEWEST_PHASE = 16;
	public const UserQuestEntity.StatusFlag BATTLE_RESULT_WIN = 32;
	public const UserQuestEntity.StatusFlag BATTLE_RESULT_LOSE = 64;
	public const UserQuestEntity.StatusFlag LATEST_RESULT_WIN = 128;
	public const UserQuestEntity.StatusFlag LATEST_RESULT_LOSE = 256;
}

// Namespace: 
public class UserQuestInfoEntity : DataEntityBase<string> // TypeDefIndex: 7462
{
	// Fields
	public long userId; // 0x10
	public int questId; // 0x18
	public int eventId; // 0x1C
	public int[] dropSvtIds; // 0x20
	public int[] dropItemIds; // 0x28
	public int[] enemyIds; // 0x30

	// Methods

	// RVA: 0x1A3D274 Offset: 0x1A3D274 VA: 0x1A3D274
	public void .ctor() { }

	// RVA: 0x1A3D2C4 Offset: 0x1A3D2C4 VA: 0x1A3D2C4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1A3D2D8 Offset: 0x1A3D2D8 VA: 0x1A3D2D8
	public static string CreatePK(long userId, int questId) { }
}

// Namespace: 
public class UserQuestInfoMaster : DataMasterBase<UserQuestInfoMaster, UserQuestInfoEntity, string> // TypeDefIndex: 7463
{
	// Fields
	private long oldId; // 0x48
	private string userIdString; // 0x50

	// Methods

	// RVA: 0x1A3D2E4 Offset: 0x1A3D2E4 VA: 0x1A3D2E4
	public void .ctor() { }

	// RVA: 0x1A3D340 Offset: 0x1A3D340 VA: 0x1A3D340
	public UserQuestInfoEntity GetEntity(long userId, int questId) { }

	// RVA: 0x1A3D3B4 Offset: 0x1A3D3B4 VA: 0x1A3D3B4
	public bool TryGetEntity(out UserQuestInfoEntity entity, long userId, int questId) { }

	// RVA: 0x1A3D438 Offset: 0x1A3D438 VA: 0x1A3D438
	public UserQuestInfoEntity getEntityFromId(long userId, int questId) { }
}

// Namespace: 
public class UserQuestMaster : DataMasterBase<UserQuestMaster, UserQuestEntity, string> // TypeDefIndex: 7464
{
	// Fields
	private long oldId; // 0x48
	private string userIdString; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xCC1F14 Offset: 0xCC1F14 VA: 0xCC1F14
	private static Comparison<UserQuestEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC1F24 Offset: 0xCC1F24 VA: 0xCC1F24
	private static Comparison<UserQuestEntity> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x1A3D5EC Offset: 0x1A3D5EC VA: 0x1A3D5EC
	public void .ctor() { }

	// RVA: 0x1A3D648 Offset: 0x1A3D648 VA: 0x1A3D648
	public UserQuestEntity getEntityFromId(long userId, int questId) { }

	// RVA: 0x1A3D7FC Offset: 0x1A3D7FC VA: 0x1A3D7FC
	public int getChallengeCountsFromId(long userId, int questId) { }

	// RVA: 0x1A3DA48 Offset: 0x1A3DA48 VA: 0x1A3DA48
	public int getChallengeCountsFromIds(long userId, int[] questIds) { }

	// RVA: 0x1A3DBFC Offset: 0x1A3DBFC VA: 0x1A3DBFC
	public int getClearCountsFromId(long userId, int questId) { }

	// RVA: 0x1A3DE48 Offset: 0x1A3DE48 VA: 0x1A3DE48
	public int getClearCountsFromIds(long userId, int[] questIds) { }

	// RVA: 0x1A3DFFC Offset: 0x1A3DFFC VA: 0x1A3DFFC
	public QuestEntity GetMainScenarioLatestClear(long userId) { }

	// RVA: 0x1A3E530 Offset: 0x1A3E530 VA: 0x1A3E530
	public QuestEntity GetLatestMainScenarioLastQuest(long userId) { }

	// RVA: 0x1A3EA68 Offset: 0x1A3EA68 VA: 0x1A3EA68
	public bool IsQuestResetAndQuestClear(long userId, int questId) { }

	// RVA: 0x1A3EAA0 Offset: 0x1A3EAA0 VA: 0x1A3EAA0
	public bool IsQuestResetAndQuestClearIds(long userId, int[] questIds) { }

	[CompilerGeneratedAttribute] // RVA: 0xD380AC Offset: 0xD380AC VA: 0xD380AC
	// RVA: 0x1A3EB4C Offset: 0x1A3EB4C VA: 0x1A3EB4C
	private static int <GetMainScenarioLatestClear>m__0(UserQuestEntity x, UserQuestEntity y) { }

	[CompilerGeneratedAttribute] // RVA: 0xD380BC Offset: 0xD380BC VA: 0xD380BC
	// RVA: 0x1A3EBBC Offset: 0x1A3EBBC VA: 0x1A3EBBC
	private static int <GetLatestMainScenarioLastQuest>m__1(UserQuestEntity x, UserQuestEntity y) { }
}

// Namespace: 
public class UserQuestRecordEntity : DataEntityBase<string> // TypeDefIndex: 7465
{
	// Fields
	public long userId; // 0x10
	public int questId; // 0x18
	public int recordType; // 0x1C
	public long recordValue; // 0x20
	public long createdAt; // 0x28
	public long updatedAt; // 0x30
	public Dictionary<string, object> deckJson; // 0x38
	public Dictionary<string, object> recordValueJson; // 0x40
	public static readonly string KEY_RECORD_TURN_MAX_DAMAGE; // 0x0
	public static readonly string KEY_RECORD_KNOCKDOWN_NUM; // 0x8
	public static readonly string KEY_RECORD_TOTAL_DAMAGE_TO_ALIVE_ENEMY; // 0x10

	// Methods

	// RVA: 0x1A3EC00 Offset: 0x1A3EC00 VA: 0x1A3EC00
	public void .ctor() { }

	// RVA: 0x1A3EC50 Offset: 0x1A3EC50 VA: 0x1A3EC50
	public void .ctor(UserQuestRecordEntity original) { }

	// RVA: 0x1A3ED8C Offset: 0x1A3ED8C VA: 0x1A3ED8C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1A3EE0C Offset: 0x1A3EE0C VA: 0x1A3EE0C
	public static string CreatePK(long userId, int questId, int recordType) { }

	// RVA: 0x1A3EE1C Offset: 0x1A3EE1C VA: 0x1A3EE1C
	protected bool existRecordKey(string key) { }

	// RVA: 0x1A3EE90 Offset: 0x1A3EE90 VA: 0x1A3EE90
	public long getRecordLong(string key, long defValue = 0) { }

	// RVA: 0x1A3EFA0 Offset: 0x1A3EFA0 VA: 0x1A3EFA0
	private static void .cctor() { }
}

// Namespace: 
public enum UserQuestRecordEntity.QuestRecordType // TypeDefIndex: 7466
{
	// Fields
	public int value__; // 0x0
	public const UserQuestRecordEntity.QuestRecordType QUEST_MAX_DAMAGE = 1;
	public const UserQuestRecordEntity.QuestRecordType QUEST_KNOCKDOWN = 2;
}

// Namespace: 
public class UserQuestRecordMaster : DataMasterBase<UserQuestRecordMaster, UserQuestRecordEntity, string> // TypeDefIndex: 7467
{
	// Methods

	// RVA: 0x1A3F028 Offset: 0x1A3F028 VA: 0x1A3F028
	public void .ctor() { }

	// RVA: 0x1A3F07C Offset: 0x1A3F07C VA: 0x1A3F07C
	public UserQuestRecordEntity GetEntity(long userId, int questId, int recordType) { }

	// RVA: 0x1A3F120 Offset: 0x1A3F120 VA: 0x1A3F120
	public bool TryGetEntity(out UserQuestRecordEntity entity, long userId, int questId, int recordType) { }

	// RVA: 0x1A3F1CC Offset: 0x1A3F1CC VA: 0x1A3F1CC
	public long GetMaxTurnDamage(long userId, int questId) { }

	// RVA: 0x1A3F320 Offset: 0x1A3F320 VA: 0x1A3F320
	public void GetKnockdownRecordinfo(long userId, int questId, QuestKnockdownInfo knockdownInfo) { }
}

// Namespace: 
public class UserQuestRouteEntity : DataEntityBase<string> // TypeDefIndex: 7468
{
	// Fields
	public long userId; // 0x10
	public int questId; // 0x18
	public int routeId; // 0x1C

	// Methods

	// RVA: 0x1A3F4CC Offset: 0x1A3F4CC VA: 0x1A3F4CC
	public void .ctor() { }

	// RVA: 0x1A3F51C Offset: 0x1A3F51C VA: 0x1A3F51C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1A3F530 Offset: 0x1A3F530 VA: 0x1A3F530
	public static string CreatePK(long userId, int questId, int routeId) { }
}

// Namespace: 
public class UserQuestRouteMaster : DataMasterBase<UserQuestRouteMaster, UserQuestRouteEntity, string> // TypeDefIndex: 7469
{
	// Methods

	// RVA: 0x1A3F540 Offset: 0x1A3F540 VA: 0x1A3F540
	public void .ctor() { }

	// RVA: 0x1A3F594 Offset: 0x1A3F594 VA: 0x1A3F594
	public UserQuestRouteEntity GetEntity(long userId, int questId, int routeId) { }

	// RVA: 0x1A3F618 Offset: 0x1A3F618 VA: 0x1A3F618
	public bool TryGetEntity(out UserQuestRouteEntity entity, long userId, int questId, int routeId) { }

	// RVA: 0x1A3F6A4 Offset: 0x1A3F6A4 VA: 0x1A3F6A4
	public bool haveRouteId(long user_id, int quest_id, int route_id) { }
}

// Namespace: 
public class UserServantAppendPassiveSkillEntity : DataEntityBase<string> // TypeDefIndex: 7470
{
	// Fields
	public ObscuredLong userId; // 0x10
	public int svtId; // 0x30
	public int[] unlockNums; // 0x38

	// Methods

	// RVA: 0x1A4039C Offset: 0x1A4039C VA: 0x1A4039C
	public void .ctor() { }

	// RVA: 0x1A403EC Offset: 0x1A403EC VA: 0x1A403EC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1A40484 Offset: 0x1A40484 VA: 0x1A40484
	public static string CreatePK(long userId, int svtId) { }
}

// Namespace: 
public class UserServantAppendPassiveSkillLvEntity : DataEntityBase<long> // TypeDefIndex: 7471
{
	// Fields
	public ObscuredLong userSvtId; // 0x10
	public ObscuredLong userId; // 0x30
	public int[] appendPassiveSkillNums; // 0x50
	public int[] appendPassiveSkillLvs; // 0x58

	// Methods

	// RVA: 0x1A40490 Offset: 0x1A40490 VA: 0x1A40490
	public void .ctor() { }

	// RVA: 0x1A404E0 Offset: 0x1A404E0 VA: 0x1A404E0 Slot: 5
	protected sealed override long CreatePrimaryKey() { }
}

// Namespace: 
public class UserServantAppendPassiveSkillLvMaster : DataMasterBase<UserServantAppendPassiveSkillLvMaster, UserServantAppendPassiveSkillLvEntity, long> // TypeDefIndex: 7472
{
	// Methods

	// RVA: 0x1A4056C Offset: 0x1A4056C VA: 0x1A4056C
	public void .ctor() { }

	// RVA: 0x1A405C0 Offset: 0x1A405C0 VA: 0x1A405C0
	public Dictionary<int, int> GetMaxLevelInfo(long userId, int svtId) { }
}

// Namespace: 
public class UserServantAppendPassiveSkillMaster : DataMasterBase<UserServantAppendPassiveSkillMaster, UserServantAppendPassiveSkillEntity, string> // TypeDefIndex: 7473
{
	// Methods

	// RVA: 0x1A409C8 Offset: 0x1A409C8 VA: 0x1A409C8
	public void .ctor() { }

	// RVA: 0x1A40A1C Offset: 0x1A40A1C VA: 0x1A40A1C
	public UserServantAppendPassiveSkillEntity GetEntity(long userId, int svtId) { }

	// RVA: 0x1A40A90 Offset: 0x1A40A90 VA: 0x1A40A90
	public bool TryGetEntity(out UserServantAppendPassiveSkillEntity entity, long userId, int svtId) { }
}

// Namespace: 
public class UserServantCollectionEntity : DataEntityBase<string> // TypeDefIndex: 7474
{
	// Fields
	public long userId; // 0x10
	public ObscuredInt svtId; // 0x18
	public int status; // 0x28
	public int maxLv; // 0x2C
	public int maxHp; // 0x30
	public int maxAtk; // 0x34
	public int maxLimitCount; // 0x38
	public int skillLv1; // 0x3C
	public int skillLv2; // 0x40
	public int skillLv3; // 0x44
	public int treasureDeviceLv1; // 0x48
	public int svtCommonFlag; // 0x4C
	public int flag; // 0x50
	public ObscuredInt friendship; // 0x54
	public ObscuredInt friendshipRank; // 0x64
	public int friendshipExceedCount; // 0x74
	public long voicePlayed; // 0x78
	public long voicePlayed2; // 0x80
	public int[] tdPlayed; // 0x88
	public int[] costumeIds; // 0x90
	public long createdAt; // 0x98
	private UserServantVoicePlayedEntity userServantVoicePlayedEntity; // 0xA0
	[CompilerGeneratedAttribute] // RVA: 0xCC1F34 Offset: 0xCC1F34 VA: 0xCC1F34
	private static Comparison<ServantCostumeEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC1F44 Offset: 0xCC1F44 VA: 0xCC1F44
	private static Comparison<ServantCostumeEntity> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x21FC6F4 Offset: 0x21FC6F4 VA: 0x21FC6F4
	public void .ctor() { }

	// RVA: 0x21FC744 Offset: 0x21FC744 VA: 0x21FC744
	public void .ctor(UserServantCollectionEntity e) { }

	// RVA: 0x21FC9B4 Offset: 0x21FC9B4 VA: 0x21FC9B4
	public void .ctor(long userId, int svtId) { }

	// RVA: 0x21FCA70 Offset: 0x21FCA70 VA: 0x21FCA70 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x21FCAFC Offset: 0x21FCAFC VA: 0x21FCAFC
	public static string CreatePK(long userId, int svtId) { }

	// RVA: 0x21FCB08 Offset: 0x21FCB08 VA: 0x21FCB08
	public long getUserId() { }

	// RVA: 0x21FCB10 Offset: 0x21FCB10 VA: 0x21FCB10
	public int getSvtId() { }

	// RVA: 0x21FCB80 Offset: 0x21FCB80 VA: 0x21FCB80
	public int getFriendShipRank() { }

	// RVA: 0x21FCBF4 Offset: 0x21FCBF4 VA: 0x21FCBF4
	public int getFriendshipExceedCount() { }

	// RVA: 0x21FCBFC Offset: 0x21FCBFC VA: 0x21FCBFC
	public bool IsFinded() { }

	// RVA: 0x21FCC0C Offset: 0x21FCC0C VA: 0x21FCC0C
	public bool IsGet() { }

	// RVA: 0x21FCC1C Offset: 0x21FCC1C VA: 0x21FCC1C
	public bool IsNew() { }

	// RVA: 0x21FCFB0 Offset: 0x21FCFB0 VA: 0x21FCFB0
	public void SetOld() { }

	// RVA: 0x21FD2F4 Offset: 0x21FD2F4 VA: 0x21FD2F4
	public bool getCollectionStatus(out int lv, out int hp, out int atk) { }

	// RVA: 0x21FD71C Offset: 0x21FD71C VA: 0x21FD71C
	public int[] getSkillLevelList() { }

	// RVA: 0x21FD818 Offset: 0x21FD818 VA: 0x21FD818
	public void getSkillInfo(out SkillInfo[] skillInfoList, int beforeClearQuestId = -1, int dispLimitCount = -1) { }

	// RVA: 0x21FDD1C Offset: 0x21FDD1C VA: 0x21FDD1C
	public void getPassiveSkillInfo(out int[] idList, out string[] titleList, out string[] explanationList, int dispLimitCount = -1, bool isOwner = True) { }

	// RVA: 0x21FDEF8 Offset: 0x21FDEF8 VA: 0x21FDEF8
	public bool getTreasureDeviceInfo(out TreasureDvcInfo tdInfo, int beforeClearQuestId = -1, int dispLimitCount = -1) { }

	// RVA: 0x21FE25C Offset: 0x21FE25C VA: 0x21FE25C
	public bool getFriendShipRankInfo(out int friendshipRank, out int maxFriendshipRank) { }

	// RVA: 0x21FE3C0 Offset: 0x21FE3C0 VA: 0x21FE3C0
	public int getLevelMax() { }

	// RVA: 0x21FE53C Offset: 0x21FE53C VA: 0x21FE53C
	public bool IsLevelMax() { }

	// RVA: 0x21FE568 Offset: 0x21FE568 VA: 0x21FE568
	public int getLimitCountMax() { }

	// RVA: 0x21FE658 Offset: 0x21FE658 VA: 0x21FE658
	public bool IsLimitCountMax() { }

	// RVA: 0x21FE684 Offset: 0x21FE684 VA: 0x21FE684
	public bool IsPlayed(int flagNum) { }

	// RVA: 0x21FE814 Offset: 0x21FE814 VA: 0x21FE814
	public bool SetPlayed(int flagNum) { }

	// RVA: 0x21FE9CC Offset: 0x21FE9CC VA: 0x21FE9CC
	public int[] getCostumeList() { }

	// RVA: 0x21FED84 Offset: 0x21FED84 VA: 0x21FED84
	public int[] getCostumeList(int lv, int limitCount) { }

	// RVA: 0x21FF1A4 Offset: 0x21FF1A4 VA: 0x21FF1A4
	public bool IsCostumeGet(int costumeId) { }

	// RVA: 0x21FF248 Offset: 0x21FF248 VA: 0x21FF248
	public bool HasFlag(int type) { }

	// RVA: 0x21FF258 Offset: 0x21FF258 VA: 0x21FF258
	public int[] getCommandCodeIdList() { }

	// RVA: 0x21FF68C Offset: 0x21FF68C VA: 0x21FF68C
	public UserCommandCodeEntity getUserCommandCodeEntity(int index) { }

	// RVA: 0x21FF94C Offset: 0x21FF94C VA: 0x21FF94C
	public UserServantCommandCardEntity GetUserCommandCardEntity() { }

	// RVA: 0x21FFAA0 Offset: 0x21FFAA0 VA: 0x21FFAA0
	public int[] GetCommandCardParam() { }

	// RVA: 0x21FFABC Offset: 0x21FFABC VA: 0x21FFABC
	public bool IsModifySvtCommonFlag(int value) { }

	// RVA: 0x21FFACC Offset: 0x21FFACC VA: 0x21FFACC
	public bool IsDataLostStateServant() { }

	// RVA: 0x21FFC3C Offset: 0x21FFC3C VA: 0x21FFC3C
	public bool IsHideStateServant() { }

	// RVA: 0x21FFDAC Offset: 0x21FFDAC VA: 0x21FFDAC
	public static bool CheckSvtCommonFlag(int _svtCommonFlag, UserServantCollectionEntity.SVT_COMMON_FLAG flagKind) { }

	// RVA: 0x21FFDB8 Offset: 0x21FFDB8 VA: 0x21FFDB8
	public List<int> GetSkillChangeCostumeList() { }

	// RVA: 0x21FFFB4 Offset: 0x21FFFB4 VA: 0x21FFFB4
	public void GetAppendPassiveSkillInfo(out int[] idList, out string[] titleList, out string[] explanationList, out bool[] releaseStateList, out int[] lvList) { }

	[CompilerGeneratedAttribute] // RVA: 0xD380CC Offset: 0xD380CC VA: 0xD380CC
	// RVA: 0x22000D8 Offset: 0x22000D8 VA: 0x22000D8
	private static int <getCostumeList>m__0(ServantCostumeEntity a, ServantCostumeEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD380DC Offset: 0xD380DC VA: 0xD380DC
	// RVA: 0x220011C Offset: 0x220011C VA: 0x220011C
	private static int <getCostumeList>m__1(ServantCostumeEntity a, ServantCostumeEntity b) { }
}

// Namespace: 
private enum UserServantCollectionEntity.SVT_COMMON_KIND // TypeDefIndex: 7475
{
	// Fields
	public int value__; // 0x0
	public const UserServantCollectionEntity.SVT_COMMON_KIND ENABLE_TD_SPEED = 1;
	public const UserServantCollectionEntity.SVT_COMMON_KIND TD_SPEED = 2;
}

// Namespace: 
public enum UserServantCollectionEntity.SVT_COMMON_FLAG // TypeDefIndex: 7476
{
	// Fields
	public int value__; // 0x0
	public const UserServantCollectionEntity.SVT_COMMON_FLAG ENABLE_TD_SPEED = 2;
	public const UserServantCollectionEntity.SVT_COMMON_FLAG TD_SPEED = 4;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEF20 Offset: 0xCAEF20 VA: 0xCAEF20
private sealed class UserServantCollectionEntity.<GetSkillChangeCostumeList>c__AnonStorey0 // TypeDefIndex: 7477
{
	// Fields
	internal int costumeId; // 0x10
	internal UserServantCollectionEntity $this; // 0x18

	// Methods

	// RVA: 0x21FFFAC Offset: 0x21FFFAC VA: 0x21FFFAC
	public void .ctor() { }

	// RVA: 0x2200160 Offset: 0x2200160 VA: 0x2200160
	internal bool <>m__0(ServantSkillReleaseEntity d) { }
}

// Namespace: 
public class UserServantCollectionMaster : DataMasterBase<UserServantCollectionMaster, UserServantCollectionEntity, string> // TypeDefIndex: 7478
{
	// Methods

	// RVA: 0x220132C Offset: 0x220132C VA: 0x220132C
	public void .ctor() { }

	// RVA: 0x2201380 Offset: 0x2201380 VA: 0x2201380
	public UserServantCollectionEntity GetEntity(long userId, int svtId) { }

	// RVA: 0x22013F4 Offset: 0x22013F4 VA: 0x22013F4
	public bool TryGetEntity(out UserServantCollectionEntity entity, long userId, int svtId) { }

	// RVA: 0x2201478 Offset: 0x2201478 VA: 0x2201478
	public UserServantCollectionEntity getEntityFromId(long userId, int svtId) { }

	// RVA: 0x2201604 Offset: 0x2201604 VA: 0x2201604
	public UserServantCollectionEntity[] getList(CollectionStatus.Kind kind) { }

	// RVA: 0x22018D0 Offset: 0x22018D0 VA: 0x22018D0
	public UserServantCollectionEntity[] getCollectionList(out int getSum, out int findSum, bool isEquip, bool ignoreHideStateSvt = False) { }

	// RVA: 0x2201C88 Offset: 0x2201C88 VA: 0x2201C88
	public List<UserServantCollectionEntity> getServantEquipCollectionList(Dictionary<int, string> servantEquipIdStrDic) { }

	// RVA: 0x2201FD0 Offset: 0x2201FD0 VA: 0x2201FD0
	public bool IsNew(int svtId) { }

	// RVA: 0x2202138 Offset: 0x2202138 VA: 0x2202138
	public int[] GetNewList() { }

	// RVA: 0x22022E4 Offset: 0x22022E4 VA: 0x22022E4
	public void continueDeviceServantComment() { }

	// RVA: 0x2200E70 Offset: 0x2200E70 VA: 0x2200E70
	public void continueDeviceUserServantCollection() { }

	// RVA: 0x22024F8 Offset: 0x22024F8 VA: 0x22024F8
	public bool IsCostumeAlreadyGet(int svtId, int costumeId) { }
}

// Namespace: 
public class UserServantCommandCardEntity : DataEntityBase<string> // TypeDefIndex: 7479
{
	// Fields
	public ObscuredLong userId; // 0x10
	public ObscuredLong svtId; // 0x30
	public int[] commandCardParam; // 0x50
	public long createdAt; // 0x58
	public long updatedAt; // 0x60

	// Methods

	// RVA: 0x2202608 Offset: 0x2202608 VA: 0x2202608
	public void .ctor() { }

	// RVA: 0x2202658 Offset: 0x2202658 VA: 0x2202658 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x2202714 Offset: 0x2202714 VA: 0x2202714
	public static string CreatePK(long userId, long svtId) { }
}

// Namespace: 
public class UserServantCommandCardMaster : DataMasterBase<UserServantCommandCardMaster, UserServantCommandCardEntity, string> // TypeDefIndex: 7480
{
	// Methods

	// RVA: 0x220271C Offset: 0x220271C VA: 0x220271C
	public void .ctor() { }

	// RVA: 0x2202770 Offset: 0x2202770 VA: 0x2202770
	public UserServantCommandCardEntity GetEntity(long userId, long svtId) { }

	// RVA: 0x22027E4 Offset: 0x22027E4 VA: 0x22027E4
	public bool TryGetEntity(out UserServantCommandCardEntity entity, long userId, long svtId) { }
}

// Namespace: 
public class UserServantCommandCodeEntity : DataEntityBase<string> // TypeDefIndex: 7481
{
	// Fields
	public ObscuredLong userId; // 0x10
	public ObscuredLong svtId; // 0x30
	public long[] userCommandCodeIds; // 0x50
	public long createdAt; // 0x58

	// Methods

	// RVA: 0x2202868 Offset: 0x2202868 VA: 0x2202868
	public void .ctor() { }

	// RVA: 0x22028B8 Offset: 0x22028B8 VA: 0x22028B8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x2202974 Offset: 0x2202974 VA: 0x2202974
	public static string CreatePK(long userId, long svtId) { }

	// RVA: 0x21FF808 Offset: 0x21FF808 VA: 0x21FF808
	public UserCommandCodeEntity GetUserCommandCodeEntity(int index) { }

	// RVA: 0x220297C Offset: 0x220297C VA: 0x220297C
	public bool IsEquipedCommandCode() { }

	// RVA: 0x2202A14 Offset: 0x2202A14 VA: 0x2202A14
	public bool IsCommandCardSlotOpen() { }

	// RVA: 0x2202AA8 Offset: 0x2202AA8 VA: 0x2202AA8
	public void CollectUserCommandCodeId(List<long> collectList) { }

	// RVA: 0x2202D60 Offset: 0x2202D60 VA: 0x2202D60
	public bool IsAttach(long userCommandCodeId) { }

	// RVA: 0x2202E04 Offset: 0x2202E04 VA: 0x2202E04
	public int GetUserCommandCodeNumber(long commandCodeId) { }
}

// Namespace: 
public class UserServantCommandCodeMaster : DataMasterBase<UserServantCommandCodeMaster, UserServantCommandCodeEntity, string> // TypeDefIndex: 7482
{
	// Methods

	// RVA: 0x2202E64 Offset: 0x2202E64 VA: 0x2202E64
	public void .ctor() { }

	// RVA: 0x2202EB8 Offset: 0x2202EB8 VA: 0x2202EB8
	public UserServantCommandCodeEntity GetEntity(long userId, long svtId) { }

	// RVA: 0x2202F2C Offset: 0x2202F2C VA: 0x2202F2C
	public bool TryGetEntity(out UserServantCommandCodeEntity entity, long userId, long svtId) { }

	// RVA: 0x2202FB0 Offset: 0x2202FB0 VA: 0x2202FB0
	public List<long> GetEquipedCommandCodeList() { }

	// RVA: 0x22031B4 Offset: 0x22031B4 VA: 0x22031B4
	public Dictionary<long, long> GetEquippedCommandCodeDic() { }

	// RVA: 0x2203428 Offset: 0x2203428 VA: 0x2203428
	public void getAttachList(out long[] userCommandCodeIdList, long userId) { }

	// RVA: 0x21FF32C Offset: 0x21FF32C VA: 0x21FF32C
	public int[] getCommandCodeIdList(long userId, int svtId) { }

	// RVA: 0x220362C Offset: 0x220362C VA: 0x220362C
	public List<long> getUserSvtCommandCodeIdList(long userId, int svtId) { }

	// RVA: 0x22038B8 Offset: 0x22038B8 VA: 0x22038B8
	public bool IsAttach(long userCommandCodeId) { }
}

// Namespace: 
public class UserServantEntity : DataEntityBase<long> // TypeDefIndex: 7483
{
	// Fields
	public static int LIMIT_SUPPORT_NOT_ASSIGN; // 0x0
	public ObscuredLong id; // 0x10
	public ObscuredLong userId; // 0x30
	public ObscuredInt svtId; // 0x50
	public ObscuredInt limitCount; // 0x60
	public ObscuredInt imageLimitCount; // 0x70
	public ObscuredInt dispLimitCount; // 0x80
	public ObscuredInt commandCardLimitCount; // 0x90
	public ObscuredInt iconLimitCount; // 0xA0
	public ObscuredInt portraitLimitCount; // 0xB0
	public ObscuredInt battleVoice; // 0xC0
	public ObscuredInt randomLimitCount; // 0xD0
	public ObscuredInt randomLimitCountSupport; // 0xE0
	public ObscuredInt limitCountSupport; // 0xF0
	public int lv; // 0x100
	public int exp; // 0x104
	public int atk; // 0x108
	public int hp; // 0x10C
	public int adjustAtk; // 0x110
	public int adjustHp; // 0x114
	public int skillLv1; // 0x118
	public int skillLv2; // 0x11C
	public int skillLv3; // 0x120
	public int treasureDeviceLv1; // 0x124
	public int exceedCount; // 0x128
	public int status; // 0x12C
	public long createdAt; // 0x130
	[CompilerGeneratedAttribute] // RVA: 0xCC1F54 Offset: 0xCC1F54 VA: 0xCC1F54
	private static Comparison<ServantSkillEntity> <>f__am$cache0; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCC1F64 Offset: 0xCC1F64 VA: 0xCC1F64
	private static Comparison<ServantSkillEntity> <>f__am$cache1; // 0x10

	// Properties
	public bool IsRandomChoice { get; }

	// Methods

	// RVA: 0x2203A38 Offset: 0x2203A38 VA: 0x2203A38
	public void .ctor() { }

	// RVA: 0x2203A88 Offset: 0x2203A88 VA: 0x2203A88
	public void .ctor(UserServantEntity e) { }

	// RVA: 0x2203D60 Offset: 0x2203D60 VA: 0x2203D60
	public void .ctor(UserServantCollectionEntity e) { }
