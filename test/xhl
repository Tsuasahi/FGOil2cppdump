
	// RVA: 0x2B63064 Offset: 0x2B63064 VA: 0x2B63064 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine
public class AudioBehaviour : Behaviour // TypeDefIndex: 2614
{}

// Namespace: UnityEngine
[RequireComponent] // RVA: 0xBECB48 Offset: 0xBECB48 VA: 0xBECB48
public sealed class AudioListener : AudioBehaviour // TypeDefIndex: 2615
{
	// Fields
	internal AudioListenerExtension spatializerExtension; // 0x18

	// Properties
	public static float volume { set; }

	// Methods

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED008 Offset: 0xBED008 VA: 0xBED008
	// RVA: 0x2B65150 Offset: 0x2B65150 VA: 0x2B65150
	public static void set_volume(float value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED018 Offset: 0xBED018 VA: 0xBED018
	// RVA: 0x2B6463C Offset: 0x2B6463C VA: 0x2B6463C
	internal int GetNumExtensionProperties() { }

	// RVA: 0x2B64578 Offset: 0x2B64578 VA: 0x2B64578
	internal PropertyName ReadExtensionName(int listenerIndex) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED028 Offset: 0xBED028 VA: 0xBED028
	// RVA: 0x2B651C0 Offset: 0x2B651C0 VA: 0x2B651C0
	private static void INTERNAL_CALL_ReadExtensionName(AudioListener self, int listenerIndex, out PropertyName value) { }

	// RVA: 0x2B645A0 Offset: 0x2B645A0 VA: 0x2B645A0
	internal PropertyName ReadExtensionPropertyName(int listenerIndex) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED038 Offset: 0xBED038 VA: 0xBED038
	// RVA: 0x2B65244 Offset: 0x2B65244 VA: 0x2B65244
	private static void INTERNAL_CALL_ReadExtensionPropertyName(AudioListener self, int listenerIndex, out PropertyName value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED048 Offset: 0xBED048 VA: 0xBED048
	// RVA: 0x2B645C8 Offset: 0x2B645C8 VA: 0x2B645C8
	internal float ReadExtensionPropertyValue(int listenerIndex) { }

	// RVA: 0x2B646A8 Offset: 0x2B646A8 VA: 0x2B646A8
	internal void ClearExtensionProperties(PropertyName extensionName) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED058 Offset: 0xBED058 VA: 0xBED058
	// RVA: 0x2B652C8 Offset: 0x2B652C8 VA: 0x2B652C8
	private static void INTERNAL_CALL_ClearExtensionProperties(AudioListener self, ref PropertyName extensionName) { }

	// RVA: 0x2B64280 Offset: 0x2B64280 VA: 0x2B64280
	internal AudioListenerExtension AddExtension(Type extensionType) { }
}

// Namespace: UnityEngine
[RequireComponent] // RVA: 0xBECBAC Offset: 0xBECBAC VA: 0xBECBAC
public sealed class AudioSource : AudioBehaviour // TypeDefIndex: 2616
{
	// Fields
	internal AudioSourceExtension spatializerExtension; // 0x18
	internal AudioSourceExtension ambisonicExtension; // 0x20

	// Properties
	public float volume { get; set; }
	public float pitch { get; set; }
	public float time { set; }
	[ThreadAndSerializationSafeAttribute] // RVA: 0xBED2D8 Offset: 0xBED2D8 VA: 0xBED2D8
	public AudioClip clip { get; set; }
	public bool isPlaying { get; }
	public bool loop { set; }
	public bool playOnAwake { set; }
	public float spatialBlend { set; }
	internal bool spatializeInternal { get; }
	public bool spatialize { get; }
	public int priority { set; }
	public bool mute { set; }

	// Methods

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED068 Offset: 0xBED068 VA: 0xBED068
	// RVA: 0x2B65920 Offset: 0x2B65920 VA: 0x2B65920
	public float get_volume() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED078 Offset: 0xBED078 VA: 0xBED078
	// RVA: 0x2B6598C Offset: 0x2B6598C VA: 0x2B6598C
	public void set_volume(float value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED088 Offset: 0xBED088 VA: 0xBED088
	// RVA: 0x2B65A00 Offset: 0x2B65A00 VA: 0x2B65A00
	public float get_pitch() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED098 Offset: 0xBED098 VA: 0xBED098
	// RVA: 0x2B65A6C Offset: 0x2B65A6C VA: 0x2B65A6C
	public void set_pitch(float value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED0A8 Offset: 0xBED0A8 VA: 0xBED0A8
	// RVA: 0x2B65AE0 Offset: 0x2B65AE0 VA: 0x2B65AE0
	public void set_time(float value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED0B8 Offset: 0xBED0B8 VA: 0xBED0B8
	// RVA: 0x2B65808 Offset: 0x2B65808 VA: 0x2B65808
	public AudioClip get_clip() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED0C8 Offset: 0xBED0C8 VA: 0xBED0C8
	// RVA: 0x2B65B54 Offset: 0x2B65B54 VA: 0x2B65B54
	public void set_clip(AudioClip value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED0D8 Offset: 0xBED0D8 VA: 0xBED0D8
	// RVA: 0x2B65BC8 Offset: 0x2B65BC8 VA: 0x2B65BC8
	public void Play(ulong delay) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBED0E8 Offset: 0xBED0E8 VA: 0xBED0E8
	// RVA: 0x2B65C3C Offset: 0x2B65C3C VA: 0x2B65C3C
	public void Play() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED0F8 Offset: 0xBED0F8 VA: 0xBED0F8
	// RVA: 0x2B65C44 Offset: 0x2B65C44 VA: 0x2B65C44
	public void Stop() { }

	// RVA: 0x2B65CB0 Offset: 0x2B65CB0 VA: 0x2B65CB0
	public void Pause() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED108 Offset: 0xBED108 VA: 0xBED108
	// RVA: 0x2B65CB4 Offset: 0x2B65CB4 VA: 0x2B65CB4
	private static void INTERNAL_CALL_Pause(AudioSource self) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED118 Offset: 0xBED118 VA: 0xBED118
	// RVA: 0x2B64ED0 Offset: 0x2B64ED0 VA: 0x2B64ED0
	public bool get_isPlaying() { }

	[ExcludeFromDocsAttribute] // RVA: 0xBED128 Offset: 0xBED128 VA: 0xBED128
	// RVA: 0x2B65D20 Offset: 0x2B65D20 VA: 0x2B65D20
	public void PlayOneShot(AudioClip clip) { }

	// RVA: 0x2B65D28 Offset: 0x2B65D28 VA: 0x2B65D28
	public void PlayOneShot(AudioClip clip, float volumeScale) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED138 Offset: 0xBED138 VA: 0xBED138
	// RVA: 0x2B65E54 Offset: 0x2B65E54 VA: 0x2B65E54
	private void PlayOneShotHelper(AudioClip clip, float volumeScale) { }

	// RVA: 0x2B65EE0 Offset: 0x2B65EE0 VA: 0x2B65EE0
	public static void PlayClipAtPoint(AudioClip clip, Vector3 position, float volume) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED148 Offset: 0xBED148 VA: 0xBED148
	// RVA: 0x2B661C4 Offset: 0x2B661C4 VA: 0x2B661C4
	public void set_loop(bool value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED158 Offset: 0xBED158 VA: 0xBED158
	// RVA: 0x2B66238 Offset: 0x2B66238 VA: 0x2B66238
	public void set_playOnAwake(bool value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED168 Offset: 0xBED168 VA: 0xBED168
	// RVA: 0x2B66150 Offset: 0x2B66150 VA: 0x2B66150
	public void set_spatialBlend(float value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED178 Offset: 0xBED178 VA: 0xBED178
	// RVA: 0x2B662AC Offset: 0x2B662AC VA: 0x2B662AC
	internal bool get_spatializeInternal() { }

	// RVA: 0x2B635F4 Offset: 0x2B635F4 VA: 0x2B635F4
	public bool get_spatialize() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED188 Offset: 0xBED188 VA: 0xBED188
	// RVA: 0x2B66318 Offset: 0x2B66318 VA: 0x2B66318
	public void set_priority(int value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED198 Offset: 0xBED198 VA: 0xBED198
	// RVA: 0x2B6638C Offset: 0x2B6638C VA: 0x2B6638C
	public void set_mute(bool value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED1A8 Offset: 0xBED1A8 VA: 0xBED1A8
	// RVA: 0x2B63ED4 Offset: 0x2B63ED4 VA: 0x2B63ED4
	internal int GetNumExtensionProperties() { }

	// RVA: 0x2B63E10 Offset: 0x2B63E10 VA: 0x2B63E10
	internal PropertyName ReadExtensionName(int sourceIndex) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED1B8 Offset: 0xBED1B8 VA: 0xBED1B8
	// RVA: 0x2B66400 Offset: 0x2B66400 VA: 0x2B66400
	private static void INTERNAL_CALL_ReadExtensionName(AudioSource self, int sourceIndex, out PropertyName value) { }

	// RVA: 0x2B63E38 Offset: 0x2B63E38 VA: 0x2B63E38
	internal PropertyName ReadExtensionPropertyName(int sourceIndex) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED1C8 Offset: 0xBED1C8 VA: 0xBED1C8
	// RVA: 0x2B66484 Offset: 0x2B66484 VA: 0x2B66484
	private static void INTERNAL_CALL_ReadExtensionPropertyName(AudioSource self, int sourceIndex, out PropertyName value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED1D8 Offset: 0xBED1D8 VA: 0xBED1D8
	// RVA: 0x2B63E60 Offset: 0x2B63E60 VA: 0x2B63E60
	internal float ReadExtensionPropertyValue(int sourceIndex) { }

	// RVA: 0x2B63F40 Offset: 0x2B63F40 VA: 0x2B63F40
	internal void ClearExtensionProperties(PropertyName extensionName) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBED1E8 Offset: 0xBED1E8 VA: 0xBED1E8
	// RVA: 0x2B66508 Offset: 0x2B66508 VA: 0x2B66508
	private static void INTERNAL_CALL_ClearExtensionProperties(AudioSource self, ref PropertyName extensionName) { }

	// RVA: 0x2B63764 Offset: 0x2B63764 VA: 0x2B63764
	internal AudioSourceExtension AddSpatializerExtension(Type extensionType) { }

	// RVA: 0x2B63D2C Offset: 0x2B63D2C VA: 0x2B63D2C
	internal AudioSourceExtension AddAmbisonicExtension(Type extensionType) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2617
{}

// Namespace: UnityEngine
[ExtensionAttribute] // RVA: 0xBEE40C Offset: 0xBEE40C VA: 0xBEE40C
[NativeHeaderAttribute] // RVA: 0xBEE40C Offset: 0xBEE40C VA: 0xBEE40C
public static class ImageConversion // TypeDefIndex: 2618
{
	// Methods

	[NativeMethodAttribute] // RVA: 0xBEE458 Offset: 0xBEE458 VA: 0xBEE458
	[ExtensionAttribute] // RVA: 0xBEE458 Offset: 0xBEE458 VA: 0xBEE458
	// RVA: 0x2B9D2AC Offset: 0x2B9D2AC VA: 0x2B9D2AC
	public static bool LoadImage(Texture2D tex, byte[] data, bool markNonReadable) { }

	[ExtensionAttribute] // RVA: 0xBEE4C0 Offset: 0xBEE4C0 VA: 0xBEE4C0
	// RVA: 0x2B9D330 Offset: 0x2B9D330 VA: 0x2B9D330
	public static bool LoadImage(Texture2D tex, byte[] data) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2619
{}

// Namespace: UnityEngine
public enum ForceMode // TypeDefIndex: 2620
{
	// Fields
	public int value__; // 0x0
	public const ForceMode Force = 0;
	public const ForceMode Acceleration = 5;
	public const ForceMode Impulse = 1;
	public const ForceMode VelocityChange = 2;
}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xBEF5F0 Offset: 0xBEF5F0 VA: 0xBEF5F0
public class ControllerColliderHit // TypeDefIndex: 2621
{
	// Fields
	internal CharacterController m_Controller; // 0x10
	internal Collider m_Collider; // 0x18
	internal Vector3 m_Point; // 0x20
	internal Vector3 m_Normal; // 0x2C
	internal Vector3 m_MoveDirection; // 0x38
	internal float m_MoveLength; // 0x44
	internal int m_Push; // 0x48

	// Properties
	public Collider collider { get; }
	public GameObject gameObject { get; }
	public Vector3 point { get; }
	public Vector3 normal { get; }
	public Vector3 moveDirection { get; }
	public float moveLength { get; }

	// Methods

	// RVA: 0x2B833CC Offset: 0x2B833CC VA: 0x2B833CC
	public Collider get_collider() { }

	// RVA: 0x2B833D4 Offset: 0x2B833D4 VA: 0x2B833D4
	public GameObject get_gameObject() { }

	// RVA: 0x2B83404 Offset: 0x2B83404 VA: 0x2B83404
	public Vector3 get_point() { }

	// RVA: 0x2B83410 Offset: 0x2B83410 VA: 0x2B83410
	public Vector3 get_normal() { }

	// RVA: 0x2B8341C Offset: 0x2B8341C VA: 0x2B8341C
	public Vector3 get_moveDirection() { }

	// RVA: 0x2B83428 Offset: 0x2B83428 VA: 0x2B83428
	public float get_moveLength() { }
}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xBEF600 Offset: 0xBEF600 VA: 0xBEF600
public class Collision // TypeDefIndex: 2622
{
	// Fields
	internal Vector3 m_Impulse; // 0x10
	internal Vector3 m_RelativeVelocity; // 0x1C
	internal Rigidbody m_Rigidbody; // 0x28
	internal Collider m_Collider; // 0x30
	internal int m_ContactCount; // 0x38
	internal ContactPoint[] m_RecycledContacts; // 0x40
	internal ContactPoint[] m_LegacyContacts; // 0x48

	// Properties
	public Vector3 relativeVelocity { get; }
	public Collider collider { get; }
	public GameObject gameObject { get; }
	public ContactPoint[] contacts { get; }

	// Methods

	// RVA: 0x2B83284 Offset: 0x2B83284 VA: 0x2B83284
	public Vector3 get_relativeVelocity() { }

	// RVA: 0x2B83290 Offset: 0x2B83290 VA: 0x2B83290
	public Collider get_collider() { }

	// RVA: 0x2B83298 Offset: 0x2B83298 VA: 0x2B83298
	public GameObject get_gameObject() { }

	// RVA: 0x2B83334 Offset: 0x2B83334 VA: 0x2B83334
	public ContactPoint[] get_contacts() { }
}

// Namespace: UnityEngine
public enum CollisionFlags // TypeDefIndex: 2623
{
	// Fields
	public int value__; // 0x0
	public const CollisionFlags None = 0;
	public const CollisionFlags Sides = 1;
	public const CollisionFlags Above = 2;
	public const CollisionFlags Below = 4;
	public const CollisionFlags CollidedSides = 1;
	public const CollisionFlags CollidedAbove = 2;
	public const CollisionFlags CollidedBelow = 4;
}

// Namespace: UnityEngine
public enum QueryTriggerInteraction // TypeDefIndex: 2624
{
	// Fields
	public int value__; // 0x0
	public const QueryTriggerInteraction UseGlobal = 0;
	public const QueryTriggerInteraction Ignore = 1;
	public const QueryTriggerInteraction Collide = 2;
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBEF610 Offset: 0xBEF610 VA: 0xBEF610
public class PhysicMaterial : Object // TypeDefIndex: 2625
{
	// Methods

	// RVA: 0x2B835F8 Offset: 0x2B835F8 VA: 0x2B835F8
	public void .ctor() { }

	// RVA: 0x2B83674 Offset: 0x2B83674 VA: 0x2B83674
	private static void Internal_CreateDynamicsMaterial(PhysicMaterial mat, string name) { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xBEF648 Offset: 0xBEF648 VA: 0xBEF648
[NativeHeaderAttribute] // RVA: 0xBEF648 Offset: 0xBEF648 VA: 0xBEF648
[NativeHeaderAttribute] // RVA: 0xBEF648 Offset: 0xBEF648 VA: 0xBEF648
[NativeHeaderAttribute] // RVA: 0xBEF648 Offset: 0xBEF648 VA: 0xBEF648
public struct RaycastHit // TypeDefIndex: 2626
{
	// Fields
	[NativeNameAttribute] // RVA: 0xBEFB1C Offset: 0xBEFB1C VA: 0xBEFB1C
	internal Vector3 m_Point; // 0x0
	[NativeNameAttribute] // RVA: 0xBEFB54 Offset: 0xBEFB54 VA: 0xBEFB54
	internal Vector3 m_Normal; // 0xC
	[NativeNameAttribute] // RVA: 0xBEFB8C Offset: 0xBEFB8C VA: 0xBEFB8C
	internal uint m_FaceID; // 0x18
	[NativeNameAttribute] // RVA: 0xBEFBC4 Offset: 0xBEFBC4 VA: 0xBEFBC4
	internal float m_Distance; // 0x1C
	[NativeNameAttribute] // RVA: 0xBEFBFC Offset: 0xBEFBFC VA: 0xBEFBFC
	internal Vector2 m_UV; // 0x20
	[NativeNameAttribute] // RVA: 0xBEFC34 Offset: 0xBEFC34 VA: 0xBEFC34
	internal int m_Collider; // 0x28

	// Properties
	public Collider collider { get; }
	public Vector3 point { get; }
	public Vector3 normal { get; }
	public float distance { get; }
	public Transform transform { get; }
	public Rigidbody rigidbody { get; }

	// Methods

	// RVA: 0xD79CAC Offset: 0xD79CAC VA: 0xD79CAC
	public Collider get_collider() { }

	// RVA: 0xD79CB4 Offset: 0xD79CB4 VA: 0xD79CB4
	public Vector3 get_point() { }

	// RVA: 0xD79CC0 Offset: 0xD79CC0 VA: 0xD79CC0
	public Vector3 get_normal() { }

	// RVA: 0xD79CCC Offset: 0xD79CCC VA: 0xD79CCC
	public float get_distance() { }

	// RVA: 0xD79CD4 Offset: 0xD79CD4 VA: 0xD79CD4
	public Transform get_transform() { }

	// RVA: 0xD79CDC Offset: 0xD79CDC VA: 0xD79CDC
	public Rigidbody get_rigidbody() { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBEF6DC Offset: 0xBEF6DC VA: 0xBEF6DC
[RequireComponent] // RVA: 0xBEF6DC Offset: 0xBEF6DC VA: 0xBEF6DC
public class Rigidbody : Component // TypeDefIndex: 2627
{
	// Properties
	public Vector3 velocity { get; set; }
	public Vector3 angularVelocity { set; }
	public float drag { set; }
	public float mass { get; set; }
	public bool useGravity { get; set; }
	public bool isKinematic { get; set; }
	public bool freezeRotation { set; }
	public Vector3 position { get; }
	public Quaternion rotation { set; }

	// Methods

	// RVA: 0x2B85414 Offset: 0x2B85414 VA: 0x2B85414
	public void .ctor() { }

	// RVA: 0x2B8541C Offset: 0x2B8541C VA: 0x2B8541C
	public Vector3 get_velocity() { }

	// RVA: 0x2B854C0 Offset: 0x2B854C0 VA: 0x2B854C0
	public void set_velocity(Vector3 value) { }

	// RVA: 0x2B8555C Offset: 0x2B8555C VA: 0x2B8555C
	public void set_angularVelocity(Vector3 value) { }

	// RVA: 0x2B855F8 Offset: 0x2B855F8 VA: 0x2B855F8
	public void set_drag(float value) { }

	// RVA: 0x2B8566C Offset: 0x2B8566C VA: 0x2B8566C
	public float get_mass() { }

	// RVA: 0x2B856D8 Offset: 0x2B856D8 VA: 0x2B856D8
	public void set_mass(float value) { }

	// RVA: 0x2B8574C Offset: 0x2B8574C VA: 0x2B8574C
	public bool get_useGravity() { }

	// RVA: 0x2B857B8 Offset: 0x2B857B8 VA: 0x2B857B8
	public void set_useGravity(bool value) { }

	// RVA: 0x2B8582C Offset: 0x2B8582C VA: 0x2B8582C
	public bool get_isKinematic() { }

	// RVA: 0x2B85898 Offset: 0x2B85898 VA: 0x2B85898
	public void set_isKinematic(bool value) { }

	// RVA: 0x2B8590C Offset: 0x2B8590C VA: 0x2B8590C
	public void set_freezeRotation(bool value) { }

	// RVA: 0x2B85980 Offset: 0x2B85980 VA: 0x2B85980
	public Vector3 get_position() { }

	// RVA: 0x2B85A24 Offset: 0x2B85A24 VA: 0x2B85A24
	public void set_rotation(Quaternion value) { }

	// RVA: 0x2B85AC0 Offset: 0x2B85AC0 VA: 0x2B85AC0
	public void MovePosition(Vector3 position) { }

	// RVA: 0x2B85B5C Offset: 0x2B85B5C VA: 0x2B85B5C
	public void MoveRotation(Quaternion rot) { }

	// RVA: 0x2B85BF8 Offset: 0x2B85BF8 VA: 0x2B85BF8
	public void Sleep() { }

	// RVA: 0x2B85C64 Offset: 0x2B85C64 VA: 0x2B85C64
	public bool IsSleeping() { }

	// RVA: 0x2B85CD0 Offset: 0x2B85CD0 VA: 0x2B85CD0
	public void WakeUp() { }

	// RVA: 0x2B85D3C Offset: 0x2B85D3C VA: 0x2B85D3C
	public void AddForce(Vector3 force, ForceMode mode) { }

	// RVA: 0x2B85DF0 Offset: 0x2B85DF0 VA: 0x2B85DF0
	public void AddRelativeForce(Vector3 force, ForceMode mode) { }

	// RVA: 0x2B85EA4 Offset: 0x2B85EA4 VA: 0x2B85EA4
	public void AddTorque(Vector3 torque, ForceMode mode) { }

	// RVA: 0x2B85F58 Offset: 0x2B85F58 VA: 0x2B85F58
	public void AddRelativeTorque(Vector3 torque, ForceMode mode) { }

	// RVA: 0x2B8600C Offset: 0x2B8600C VA: 0x2B8600C
	public void AddForceAtPosition(Vector3 force, Vector3 position, ForceMode mode) { }

	// RVA: 0x2B860D4 Offset: 0x2B860D4 VA: 0x2B860D4
	public void AddExplosionForce(float explosionForce, Vector3 explosionPosition, float explosionRadius, float upwardsModifier, ForceMode mode) { }

	// RVA: 0x2B8544C Offset: 0x2B8544C VA: 0x2B8544C
	private void get_velocity_Injected(out Vector3 ret) { }

	// RVA: 0x2B854E8 Offset: 0x2B854E8 VA: 0x2B854E8
	private void set_velocity_Injected(ref Vector3 value) { }

	// RVA: 0x2B85584 Offset: 0x2B85584 VA: 0x2B85584
	private void set_angularVelocity_Injected(ref Vector3 value) { }

	// RVA: 0x2B859B0 Offset: 0x2B859B0 VA: 0x2B859B0
	private void get_position_Injected(out Vector3 ret) { }

	// RVA: 0x2B85A4C Offset: 0x2B85A4C VA: 0x2B85A4C
	private void set_rotation_Injected(ref Quaternion value) { }

	// RVA: 0x2B85AE8 Offset: 0x2B85AE8 VA: 0x2B85AE8
	private void MovePosition_Injected(ref Vector3 position) { }

	// RVA: 0x2B85B84 Offset: 0x2B85B84 VA: 0x2B85B84
	private void MoveRotation_Injected(ref Quaternion rot) { }

	// RVA: 0x2B85D6C Offset: 0x2B85D6C VA: 0x2B85D6C
	private void AddForce_Injected(ref Vector3 force, ForceMode mode) { }

	// RVA: 0x2B85E20 Offset: 0x2B85E20 VA: 0x2B85E20
	private void AddRelativeForce_Injected(ref Vector3 force, ForceMode mode) { }

	// RVA: 0x2B85ED4 Offset: 0x2B85ED4 VA: 0x2B85ED4
	private void AddTorque_Injected(ref Vector3 torque, ForceMode mode) { }

	// RVA: 0x2B85F88 Offset: 0x2B85F88 VA: 0x2B85F88
	private void AddRelativeTorque_Injected(ref Vector3 torque, ForceMode mode) { }

	// RVA: 0x2B86048 Offset: 0x2B86048 VA: 0x2B86048
	private void AddForceAtPosition_Injected(ref Vector3 force, ref Vector3 position, ForceMode mode) { }

	// RVA: 0x2B8610C Offset: 0x2B8610C VA: 0x2B8610C
	private void AddExplosionForce_Injected(float explosionForce, ref Vector3 explosionPosition, float explosionRadius, float upwardsModifier, ForceMode mode) { }
}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xBEF764 Offset: 0xBEF764 VA: 0xBEF764
[NativeHeaderAttribute] // RVA: 0xBEF764 Offset: 0xBEF764 VA: 0xBEF764
[RequireComponent] // RVA: 0xBEF764 Offset: 0xBEF764 VA: 0xBEF764
public class Collider : Component // TypeDefIndex: 2628
{
	// Properties
	public bool enabled { get; set; }
	public Rigidbody attachedRigidbody { get; }
	public bool isTrigger { set; }
	public Bounds bounds { get; }
	public PhysicMaterial material { get; }

	// Methods

	// RVA: 0x2B828C0 Offset: 0x2B828C0 VA: 0x2B828C0
	public void .ctor() { }

	// RVA: 0x2B82E30 Offset: 0x2B82E30 VA: 0x2B82E30
	public bool get_enabled() { }

	// RVA: 0x2B82E9C Offset: 0x2B82E9C VA: 0x2B82E9C
	public void set_enabled(bool value) { }

	[NativeMethodAttribute] // RVA: 0xBEFC6C Offset: 0xBEFC6C VA: 0xBEFC6C
	// RVA: 0x2B82F10 Offset: 0x2B82F10 VA: 0x2B82F10
	public Rigidbody get_attachedRigidbody() { }

	// RVA: 0x2B82F7C Offset: 0x2B82F7C VA: 0x2B82F7C
	public void set_isTrigger(bool value) { }

	// RVA: 0x2B82FF0 Offset: 0x2B82FF0 VA: 0x2B82FF0
	public Bounds get_bounds() { }

	[NativeMethodAttribute] // RVA: 0xBEFCA4 Offset: 0xBEFCA4 VA: 0xBEFCA4
	// RVA: 0x2B830A4 Offset: 0x2B830A4 VA: 0x2B830A4
	public PhysicMaterial get_material() { }

	// RVA: 0x2B83110 Offset: 0x2B83110 VA: 0x2B83110
	private RaycastHit Raycast(Ray ray, float maxDistance, ref bool hasHit) { }

	// RVA: 0x2B83200 Offset: 0x2B83200 VA: 0x2B83200
	public bool Raycast(Ray ray, out RaycastHit hitInfo, float maxDistance) { }

	// RVA: 0x2B83030 Offset: 0x2B83030 VA: 0x2B83030
	private void get_bounds_Injected(out Bounds ret) { }

	// RVA: 0x2B8315C Offset: 0x2B8315C VA: 0x2B8315C
	private void Raycast_Injected(ref Ray ray, float maxDistance, ref bool hasHit, out RaycastHit ret) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBEF7FC Offset: 0xBEF7FC VA: 0xBEF7FC
public class CharacterController : Collider // TypeDefIndex: 2629
{
	// Properties
	public bool isGrounded { get; }
	public CollisionFlags collisionFlags { get; }
	public float radius { set; }
	public float height { set; }
	public Vector3 center { set; }
	public float slopeLimit { set; }
	public float stepOffset { set; }
	public bool detectCollisions { set; }

	// Methods

	// RVA: 0x2B8293C Offset: 0x2B8293C VA: 0x2B8293C
	public bool SimpleMove(Vector3 speed) { }

	// RVA: 0x2B829DC Offset: 0x2B829DC VA: 0x2B829DC
	public CollisionFlags Move(Vector3 motion) { }

	[NativeNameAttribute] // RVA: 0xBEFCDC Offset: 0xBEFCDC VA: 0xBEFCDC
	// RVA: 0x2B82A78 Offset: 0x2B82A78 VA: 0x2B82A78
	public bool get_isGrounded() { }

	// RVA: 0x2B82AE4 Offset: 0x2B82AE4 VA: 0x2B82AE4
	public CollisionFlags get_collisionFlags() { }

	// RVA: 0x2B82B50 Offset: 0x2B82B50 VA: 0x2B82B50
	public void set_radius(float value) { }

	// RVA: 0x2B82BC4 Offset: 0x2B82BC4 VA: 0x2B82BC4
	public void set_height(float value) { }

	// RVA: 0x2B82C38 Offset: 0x2B82C38 VA: 0x2B82C38
	public void set_center(Vector3 value) { }

	// RVA: 0x2B82CD4 Offset: 0x2B82CD4 VA: 0x2B82CD4
	public void set_slopeLimit(float value) { }

	// RVA: 0x2B82D48 Offset: 0x2B82D48 VA: 0x2B82D48
	public void set_stepOffset(float value) { }

	// RVA: 0x2B82DBC Offset: 0x2B82DBC VA: 0x2B82DBC
	public void set_detectCollisions(bool value) { }

	// RVA: 0x2B82968 Offset: 0x2B82968 VA: 0x2B82968
	private bool SimpleMove_Injected(ref Vector3 speed) { }

	// RVA: 0x2B82A04 Offset: 0x2B82A04 VA: 0x2B82A04
	private CollisionFlags Move_Injected(ref Vector3 motion) { }

	// RVA: 0x2B82C60 Offset: 0x2B82C60 VA: 0x2B82C60
	private void set_center_Injected(ref Vector3 value) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBEF834 Offset: 0xBEF834 VA: 0xBEF834
[NativeHeaderAttribute] // RVA: 0xBEF834 Offset: 0xBEF834 VA: 0xBEF834
[RequiredByNativeCodeAttribute] // RVA: 0xBEF834 Offset: 0xBEF834 VA: 0xBEF834
public class MeshCollider : Collider // TypeDefIndex: 2630
{
	// Properties
	public Mesh sharedMesh { get; set; }
	public bool convex { set; }

	// Methods

	// RVA: 0x2B834A4 Offset: 0x2B834A4 VA: 0x2B834A4
	public Mesh get_sharedMesh() { }

	// RVA: 0x2B83510 Offset: 0x2B83510 VA: 0x2B83510
	public void set_sharedMesh(Mesh value) { }

	// RVA: 0x2B83584 Offset: 0x2B83584 VA: 0x2B83584
	public void set_convex(bool value) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBEF8A4 Offset: 0xBEF8A4 VA: 0xBEF8A4
[RequiredByNativeCodeAttribute] // RVA: 0xBEF8A4 Offset: 0xBEF8A4 VA: 0xBEF8A4
public class CapsuleCollider : Collider // TypeDefIndex: 2631
{
	// Properties
	public float height { set; }

	// Methods

	// RVA: 0x2B828B8 Offset: 0x2B828B8 VA: 0x2B828B8
	public void .ctor() { }

	// RVA: 0x2B828C8 Offset: 0x2B828C8 VA: 0x2B828C8
	public void set_height(float value) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBEF8F0 Offset: 0xBEF8F0 VA: 0xBEF8F0
[RequiredByNativeCodeAttribute] // RVA: 0xBEF8F0 Offset: 0xBEF8F0 VA: 0xBEF8F0
public class BoxCollider : Collider // TypeDefIndex: 2632
{
	// Properties
	public Vector3 center { get; set; }
	public Vector3 size { get; set; }

	// Methods

	// RVA: 0x2B82638 Offset: 0x2B82638 VA: 0x2B82638
	public Vector3 get_center() { }

	// RVA: 0x2B826DC Offset: 0x2B826DC VA: 0x2B826DC
	public void set_center(Vector3 value) { }

	// RVA: 0x2B82778 Offset: 0x2B82778 VA: 0x2B82778
	public Vector3 get_size() { }

	// RVA: 0x2B8281C Offset: 0x2B8281C VA: 0x2B8281C
	public void set_size(Vector3 value) { }

	// RVA: 0x2B82668 Offset: 0x2B82668 VA: 0x2B82668
	private void get_center_Injected(out Vector3 ret) { }

	// RVA: 0x2B82704 Offset: 0x2B82704 VA: 0x2B82704
	private void set_center_Injected(ref Vector3 value) { }

	// RVA: 0x2B827A8 Offset: 0x2B827A8 VA: 0x2B827A8
	private void get_size_Injected(out Vector3 ret) { }

	// RVA: 0x2B82844 Offset: 0x2B82844 VA: 0x2B82844
	private void set_size_Injected(ref Vector3 value) { }
}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xBEF93C Offset: 0xBEF93C VA: 0xBEF93C
[NativeHeaderAttribute] // RVA: 0xBEF93C Offset: 0xBEF93C VA: 0xBEF93C
public class SphereCollider : Collider // TypeDefIndex: 2633
{}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBEF988 Offset: 0xBEF988 VA: 0xBEF988
[RequireComponent] // RVA: 0xBEF988 Offset: 0xBEF988 VA: 0xBEF988
[NativeClassAttribute] // RVA: 0xBEF988 Offset: 0xBEF988 VA: 0xBEF988
public class Joint : Component // TypeDefIndex: 2634
{
	// Properties
	public Rigidbody connectedBody { set; }

	// Methods

	// RVA: 0x2B83430 Offset: 0x2B83430 VA: 0x2B83430
	public void set_connectedBody(Rigidbody value) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBEFA34 Offset: 0xBEFA34 VA: 0xBEFA34
[UsedByNativeCodeAttribute] // RVA: 0xBEFA34 Offset: 0xBEFA34 VA: 0xBEFA34
public struct ContactPoint // TypeDefIndex: 2635
{
	// Fields
	internal Vector3 m_Point; // 0x0
	internal Vector3 m_Normal; // 0xC
	internal int m_ThisColliderInstanceID; // 0x18
	internal int m_OtherColliderInstanceID; // 0x1C
	internal float m_Separation; // 0x20

	// Properties
	public Vector3 point { get; }
	public Vector3 normal { get; }

	// Methods

	// RVA: 0xD79C10 Offset: 0xD79C10 VA: 0xD79C10
	public Vector3 get_point() { }

	// RVA: 0xD79C1C Offset: 0xD79C1C VA: 0xD79C1C
	public Vector3 get_normal() { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBEFA80 Offset: 0xBEFA80 VA: 0xBEFA80
public struct PhysicsScene : IEquatable<PhysicsScene> // TypeDefIndex: 2636
{
	// Fields
	private int m_Handle; // 0x0

	// Methods

	// RVA: 0xD79C74 Offset: 0xD79C74 VA: 0xD79C74 Slot: 3
	public override string ToString() { }

	// RVA: 0xD79C7C Offset: 0xD79C7C VA: 0xD79C7C Slot: 2
	public override int GetHashCode() { }

	// RVA: 0xD79C84 Offset: 0xD79C84 VA: 0xD79C84 Slot: 0
	public override bool Equals(object other) { }

	// RVA: 0xD79C8C Offset: 0xD79C8C VA: 0xD79C8C Slot: 4
	public bool Equals(PhysicsScene other) { }

	// RVA: 0xD79C9C Offset: 0xD79C9C VA: 0xD79C9C
	public bool Raycast(Vector3 origin, Vector3 direction, float maxDistance = ∞, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = 0) { }

	[NativeNameAttribute] // RVA: 0xBEFD14 Offset: 0xBEFD14 VA: 0xBEFD14
	[StaticAccessorAttribute] // RVA: 0xBEFD14 Offset: 0xBEFD14 VA: 0xBEFD14
	// RVA: 0x2B84FFC Offset: 0x2B84FFC VA: 0x2B84FFC
	private static bool Internal_RaycastTest(PhysicsScene physicsScene, Ray ray, float maxDistance, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }

	// RVA: 0xD79CA4 Offset: 0xD79CA4 VA: 0xD79CA4
	public bool Raycast(Vector3 origin, Vector3 direction, out RaycastHit hitInfo, float maxDistance = ∞, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = 0) { }

	[StaticAccessorAttribute] // RVA: 0xBEFD78 Offset: 0xBEFD78 VA: 0xBEFD78
	[NativeNameAttribute] // RVA: 0xBEFD78 Offset: 0xBEFD78 VA: 0xBEFD78
	// RVA: 0x2B850C8 Offset: 0x2B850C8 VA: 0x2B850C8
	private static bool Internal_Raycast(PhysicsScene physicsScene, Ray ray, float maxDistance, ref RaycastHit hit, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }

	// RVA: 0x2B85024 Offset: 0x2B85024 VA: 0x2B85024
	private static bool Internal_RaycastTest_Injected(ref PhysicsScene physicsScene, ref Ray ray, float maxDistance, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }

	// RVA: 0x2B850F0 Offset: 0x2B850F0 VA: 0x2B850F0
	private static bool Internal_Raycast_Injected(ref PhysicsScene physicsScene, ref Ray ray, float maxDistance, ref RaycastHit hit, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }
}

// Namespace: UnityEngine
[StaticAccessorAttribute] // RVA: 0xBEFAB8 Offset: 0xBEFAB8 VA: 0xBEFAB8
[NativeHeaderAttribute] // RVA: 0xBEFAB8 Offset: 0xBEFAB8 VA: 0xBEFAB8
public class Physics // TypeDefIndex: 2637
{
	// Properties
	public static Vector3 gravity { set; }
	[NativePropertyAttribute] // RVA: 0xBF0968 Offset: 0xBF0968 VA: 0xBF0968
	public static PhysicsScene defaultPhysicsScene { get; }

	// Methods

	// RVA: 0x2B836E8 Offset: 0x2B836E8 VA: 0x2B836E8
	public static void set_gravity(Vector3 value) { }

	// RVA: 0x2B8377C Offset: 0x2B8377C VA: 0x2B8377C
	public static PhysicsScene get_defaultPhysicsScene() { }

	// RVA: 0x2B83810 Offset: 0x2B83810 VA: 0x2B83810
	public static bool Raycast(Vector3 origin, Vector3 direction, float maxDistance, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFDDC Offset: 0xBEFDDC VA: 0xBEFDDC
	// RVA: 0x2B83A10 Offset: 0x2B83A10 VA: 0x2B83A10
	public static bool Raycast(Vector3 origin, Vector3 direction, float maxDistance, int layerMask) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFDEC Offset: 0xBEFDEC VA: 0xBEFDEC
	// RVA: 0x2B83AB4 Offset: 0x2B83AB4 VA: 0x2B83AB4
	public static bool Raycast(Vector3 origin, Vector3 direction, float maxDistance) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFDFC Offset: 0xBEFDFC VA: 0xBEFDFC
	// RVA: 0x2B83B4C Offset: 0x2B83B4C VA: 0x2B83B4C
	public static bool Raycast(Vector3 origin, Vector3 direction) { }

	// RVA: 0x2B83BDC Offset: 0x2B83BDC VA: 0x2B83BDC
	public static bool Raycast(Vector3 origin, Vector3 direction, out RaycastHit hitInfo, float maxDistance, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xBEFE0C Offset: 0xBEFE0C VA: 0xBEFE0C
	[ExcludeFromDocsAttribute] // RVA: 0xBEFE0C Offset: 0xBEFE0C VA: 0xBEFE0C
	// RVA: 0x2B83E08 Offset: 0x2B83E08 VA: 0x2B83E08
	public static bool Raycast(Vector3 origin, Vector3 direction, out RaycastHit hitInfo, float maxDistance, int layerMask) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFE44 Offset: 0xBEFE44 VA: 0xBEFE44
	// RVA: 0x2B83EB4 Offset: 0x2B83EB4 VA: 0x2B83EB4
	public static bool Raycast(Vector3 origin, Vector3 direction, out RaycastHit hitInfo, float maxDistance) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFE54 Offset: 0xBEFE54 VA: 0xBEFE54
	// RVA: 0x2B83F5C Offset: 0x2B83F5C VA: 0x2B83F5C
	public static bool Raycast(Vector3 origin, Vector3 direction, out RaycastHit hitInfo) { }

	// RVA: 0x2B83FFC Offset: 0x2B83FFC VA: 0x2B83FFC
	public static bool Raycast(Ray ray, float maxDistance, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFE64 Offset: 0xBEFE64 VA: 0xBEFE64
	// RVA: 0x2B840AC Offset: 0x2B840AC VA: 0x2B840AC
	public static bool Raycast(Ray ray, float maxDistance, int layerMask) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFE74 Offset: 0xBEFE74 VA: 0xBEFE74
	// RVA: 0x2B84150 Offset: 0x2B84150 VA: 0x2B84150
	public static bool Raycast(Ray ray, float maxDistance) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFE84 Offset: 0xBEFE84 VA: 0xBEFE84
	// RVA: 0x2B841F0 Offset: 0x2B841F0 VA: 0x2B841F0
	public static bool Raycast(Ray ray) { }

	// RVA: 0x2B84290 Offset: 0x2B84290 VA: 0x2B84290
	public static bool Raycast(Ray ray, out RaycastHit hitInfo, float maxDistance, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFE94 Offset: 0xBEFE94 VA: 0xBEFE94
	// RVA: 0x2B84348 Offset: 0x2B84348 VA: 0x2B84348
	public static bool Raycast(Ray ray, out RaycastHit hitInfo, float maxDistance, int layerMask) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFEA4 Offset: 0xBEFEA4 VA: 0xBEFEA4
	// RVA: 0x2B843FC Offset: 0x2B843FC VA: 0x2B843FC
	public static bool Raycast(Ray ray, out RaycastHit hitInfo, float maxDistance) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFEB4 Offset: 0xBEFEB4 VA: 0xBEFEB4
	// RVA: 0x2B844A4 Offset: 0x2B844A4 VA: 0x2B844A4
	public static bool Raycast(Ray ray, out RaycastHit hitInfo) { }

	[NativeNameAttribute] // RVA: 0xBEFEC4 Offset: 0xBEFEC4 VA: 0xBEFEC4
	[StaticAccessorAttribute] // RVA: 0xBEFEC4 Offset: 0xBEFEC4 VA: 0xBEFEC4
	// RVA: 0x2B8454C Offset: 0x2B8454C VA: 0x2B8454C
	private static bool Query_SphereCast(PhysicsScene physicsScene, Vector3 origin, float radius, Vector3 direction, float maxDistance, ref RaycastHit hitInfo, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }

	// RVA: 0x2B84668 Offset: 0x2B84668 VA: 0x2B84668
	private static bool Internal_SphereCast(PhysicsScene physicsScene, Vector3 origin, float radius, Vector3 direction, out RaycastHit hitInfo, float maxDistance, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }

	// RVA: 0x2B847B8 Offset: 0x2B847B8 VA: 0x2B847B8
	public static bool SphereCast(Ray ray, float radius, out RaycastHit hitInfo, float maxDistance, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFF28 Offset: 0xBEFF28 VA: 0xBEFF28
	// RVA: 0x2B84884 Offset: 0x2B84884 VA: 0x2B84884
	public static bool SphereCast(Ray ray, float radius, out RaycastHit hitInfo, float maxDistance, int layerMask) { }

	[StaticAccessorAttribute] // RVA: 0xBEFF38 Offset: 0xBEFF38 VA: 0xBEFF38
	[NativeNameAttribute] // RVA: 0xBEFF38 Offset: 0xBEFF38 VA: 0xBEFF38
	// RVA: 0x2B848BC Offset: 0x2B848BC VA: 0x2B848BC
	private static RaycastHit[] Internal_RaycastAll(PhysicsScene physicsScene, Ray ray, float maxDistance, int mask, QueryTriggerInteraction queryTriggerInteraction) { }

	// RVA: 0x2B84984 Offset: 0x2B84984 VA: 0x2B84984
	public static RaycastHit[] RaycastAll(Vector3 origin, Vector3 direction, float maxDistance, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFF9C Offset: 0xBEFF9C VA: 0xBEFF9C
	// RVA: 0x2B84AF0 Offset: 0x2B84AF0 VA: 0x2B84AF0
	public static RaycastHit[] RaycastAll(Vector3 origin, Vector3 direction, float maxDistance, int layerMask) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFFAC Offset: 0xBEFFAC VA: 0xBEFFAC
	// RVA: 0x2B84AF8 Offset: 0x2B84AF8 VA: 0x2B84AF8
	public static RaycastHit[] RaycastAll(Vector3 origin, Vector3 direction, float maxDistance) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFFBC Offset: 0xBEFFBC VA: 0xBEFFBC
	// RVA: 0x2B84B04 Offset: 0x2B84B04 VA: 0x2B84B04
	public static RaycastHit[] RaycastAll(Vector3 origin, Vector3 direction) { }

	// RVA: 0x2B84B18 Offset: 0x2B84B18 VA: 0x2B84B18
	public static RaycastHit[] RaycastAll(Ray ray, float maxDistance, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBEFFCC Offset: 0xBEFFCC VA: 0xBEFFCC
	[RequiredByNativeCodeAttribute] // RVA: 0xBEFFCC Offset: 0xBEFFCC VA: 0xBEFFCC
	// RVA: 0x2B84B9C Offset: 0x2B84B9C VA: 0x2B84B9C
	public static RaycastHit[] RaycastAll(Ray ray, float maxDistance, int layerMask) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBF0004 Offset: 0xBF0004 VA: 0xBF0004
	// RVA: 0x2B84C14 Offset: 0x2B84C14 VA: 0x2B84C14
	public static RaycastHit[] RaycastAll(Ray ray, float maxDistance) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBF0014 Offset: 0xBF0014 VA: 0xBF0014
	// RVA: 0x2B84C88 Offset: 0x2B84C88 VA: 0x2B84C88
	public static RaycastHit[] RaycastAll(Ray ray) { }

	[StaticAccessorAttribute] // RVA: 0xBF0024 Offset: 0xBF0024 VA: 0xBF0024
	[NativeNameAttribute] // RVA: 0xBF0024 Offset: 0xBF0024 VA: 0xBF0024
	// RVA: 0x2B84CFC Offset: 0x2B84CFC VA: 0x2B84CFC
	private static Collider[] OverlapSphere_Internal(PhysicsScene physicsScene, Vector3 position, float radius, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }

	// RVA: 0x2B84DE4 Offset: 0x2B84DE4 VA: 0x2B84DE4
	public static Collider[] OverlapSphere(Vector3 position, float radius, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBF0088 Offset: 0xBF0088 VA: 0xBF0088
	// RVA: 0x2B84E60 Offset: 0x2B84E60 VA: 0x2B84E60
	public static Collider[] OverlapSphere(Vector3 position, float radius) { }

	// RVA: 0x2B83710 Offset: 0x2B83710 VA: 0x2B83710
	private static void set_gravity_Injected(ref Vector3 value) { }

	// RVA: 0x2B837A4 Offset: 0x2B837A4 VA: 0x2B837A4
	private static void get_defaultPhysicsScene_Injected(out PhysicsScene ret) { }

	// RVA: 0x2B845AC Offset: 0x2B845AC VA: 0x2B845AC
	private static bool Query_SphereCast_Injected(ref PhysicsScene physicsScene, ref Vector3 origin, float radius, ref Vector3 direction, float maxDistance, ref RaycastHit hitInfo, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }

	// RVA: 0x2B848E0 Offset: 0x2B848E0 VA: 0x2B848E0
	private static RaycastHit[] Internal_RaycastAll_Injected(ref PhysicsScene physicsScene, ref Ray ray, float maxDistance, int mask, QueryTriggerInteraction queryTriggerInteraction) { }

	// RVA: 0x2B84D40 Offset: 0x2B84D40 VA: 0x2B84D40
	private static Collider[] OverlapSphere_Internal_Injected(ref PhysicsScene physicsScene, ref Vector3 position, float radius, int layerMask, QueryTriggerInteraction queryTriggerInteraction) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2638
{}

// Namespace: UnityEngine
public enum FontStyle // TypeDefIndex: 2639
{
	// Fields
	public int value__; // 0x0
	public const FontStyle Normal = 0;
	public const FontStyle Bold = 1;
	public const FontStyle Italic = 2;
	public const FontStyle BoldAndItalic = 3;
}

// Namespace: UnityEngine
[FlagsAttribute] // RVA: 0xBF1AB0 Offset: 0xBF1AB0 VA: 0xBF1AB0
internal enum TextGenerationError // TypeDefIndex: 2640
{
	// Fields
	public int value__; // 0x0
	public const TextGenerationError None = 0;
	public const TextGenerationError CustomSizeOnNonDynamicFont = 1;
	public const TextGenerationError CustomStyleOnNonDynamicFont = 2;
	public const TextGenerationError NoFont = 4;
}
