	// RVA: 0x1B9D424 Offset: 0x1B9D424 VA: 0x1B9D424
	public void .ctor() { }

	// RVA: 0x1B9D48C Offset: 0x1B9D48C VA: 0x1B9D48C
	public void SetSvtDrop(int svtId, int limitCnt, int dropNum) { }

	// RVA: 0x1B9D614 Offset: 0x1B9D614 VA: 0x1B9D614
	public void SetSvtDrop(long userSvtId, IconLabelInfo info, int dropNum, int limit) { }

	// RVA: 0x1B9D750 Offset: 0x1B9D750 VA: 0x1B9D750
	public void SetCommandCodeDrop(long userCommandCodeId, int dropNum) { }

	// RVA: 0x1B9D810 Offset: 0x1B9D810 VA: 0x1B9D810
	public void SetCommandCodeDropByCodeId(int commandCodeId, int dropNum) { }

	// RVA: 0x1B9D4F0 Offset: 0x1B9D4F0 VA: 0x1B9D4F0
	private void SetDropLabel(int dropNum) { }

	// RVA: 0x1B9D86C Offset: 0x1B9D86C VA: 0x1B9D86C
	private void SetColor(UIWidget widget, Color color) { }

	// RVA: 0x1B9D938 Offset: 0x1B9D938 VA: 0x1B9D938
	public void SetActiveDarkMode(bool isActive) { }
}

// Namespace: 
public class BgTxtManager // TypeDefIndex: 6342
{
	// Methods

	// RVA: 0x1EE6918 Offset: 0x1EE6918 VA: 0x1EE6918
	public void .ctor() { }

	// RVA: 0x1EE6920 Offset: 0x1EE6920 VA: 0x1EE6920
	public static bool IsActiveBgTxt() { }
}

// Namespace: 
public class BillBoard : MonoBehaviour // TypeDefIndex: 6343
{
	// Fields
	public Camera targetCamera; // 0x18
	public bool rotationFlip; // 0x20
	[TooltipAttribute] // RVA: 0xCBF850 Offset: 0xCBF850 VA: 0xCBF850
	public bool enableRotationZ; // 0x21
	[SerializeField] // RVA: 0xCBF888 Offset: 0xCBF888 VA: 0xCBF888
	[TooltipAttribute] // RVA: 0xCBF888 Offset: 0xCBF888 VA: 0xCBF888
	private string searchCameraName; // 0x28
	private bool saveFlipFlag; // 0x30
	protected Transform mTrf; // 0x38

	// Methods

	// RVA: 0x1EED318 Offset: 0x1EED318 VA: 0x1EED318
	public void .ctor() { }

	// RVA: 0x1EED390 Offset: 0x1EED390 VA: 0x1EED390
	private void Start() { }

	// RVA: 0x1EED524 Offset: 0x1EED524 VA: 0x1EED524
	public void UpdateBillboard() { }

	// RVA: 0x1EED79C Offset: 0x1EED79C VA: 0x1EED79C
	private void LateUpdate() { }

	// RVA: 0x1EED7A0 Offset: 0x1EED7A0 VA: 0x1EED7A0
	public void setCamera(Camera wkcamera) { }

	// RVA: 0x1EED7A8 Offset: 0x1EED7A8 VA: 0x1EED7A8
	public void setFlip(bool flg, bool init = False) { }

	// RVA: 0x1EED7BC Offset: 0x1EED7BC VA: 0x1EED7BC
	public void ResetFlip() { }
}

// Namespace: 
public class BillBoardGrouped : BillBoard // TypeDefIndex: 6344
{
	// Fields
	[TooltipAttribute] // RVA: 0xCBF8D4 Offset: 0xCBF8D4 VA: 0xCBF8D4
	public int grouping; // 0x40

	// Methods

	// RVA: 0x1EEE414 Offset: 0x1EEE414 VA: 0x1EEE414
	public void .ctor() { }

	// RVA: 0x1EEE420 Offset: 0x1EEE420 VA: 0x1EEE420
	private void Update() { }

	// RVA: 0x1EEE4CC Offset: 0x1EEE4CC VA: 0x1EEE4CC
	private void LateUpdate() { }

	// RVA: 0x1EEE79C Offset: 0x1EEE79C VA: 0x1EEE79C
	private Vector3 GetDimensioned(Vector3 pLookVec) { }
}

// Namespace: 
protected enum BillBoardGrouped.SP_GROUP // TypeDefIndex: 6345
{
	// Fields
	public int value__; // 0x0
	public const BillBoardGrouped.SP_GROUP NONE = -1;
	public const BillBoardGrouped.SP_GROUP FIXED = 0;
	public const BillBoardGrouped.SP_GROUP FIXED_CAM = 1;
	public const BillBoardGrouped.SP_GROUP SIZE_OF = 2;
}

// Namespace: 
public class BillBoardGroupManager : SingletonMonoBehaviour<BillBoardGroupManager> // TypeDefIndex: 6346
{
	// Fields
	[TooltipAttribute] // RVA: 0xCBF90C Offset: 0xCBF90C VA: 0xCBF90C
	public static float targetFov; // 0x0
	private Dictionary<int, BillBoardGroupManager.GroupData> datas; // 0x18
	private BillBoardGroupManager.phase phaseNow; // 0x20
	public static readonly Vector3 VecZero; // 0x4
	public static readonly Vector3 VecBack; // 0x10

	// Methods

	// RVA: 0x1EED7C8 Offset: 0x1EED7C8 VA: 0x1EED7C8
	public void .ctor() { }

	// RVA: 0x1EED818 Offset: 0x1EED818 VA: 0x1EED818
	public void AddData(int groupId, Camera cam, GameObject obj) { }

	// RVA: 0x1EEDC24 Offset: 0x1EEDC24 VA: 0x1EEDC24
	public Vector3 GetLookVec(int groupId, bool disableZRot) { }

	// RVA: 0x1EEE188 Offset: 0x1EEE188 VA: 0x1EEE188
	private static float GetMagnifier(float angleRad) { }

	// RVA: 0x1EEE2A0 Offset: 0x1EEE2A0 VA: 0x1EEE2A0
	public static Vector3 GetNormalizedLookAt(Vector3 fromPos, Vector3 toPos) { }

	// RVA: 0x1EEE370 Offset: 0x1EEE370 VA: 0x1EEE370
	private static void .cctor() { }
}

// Namespace: 
private class BillBoardGroupManager.GroupData // TypeDefIndex: 6347
{
	// Fields
	private Camera cam; // 0x10
	private Vector3 resVec; // 0x18
	private List<GameObject> objs; // 0x28

	// Methods

	// RVA: 0x1EEDB68 Offset: 0x1EEDB68 VA: 0x1EEDB68
	public void .ctor(Camera pCam) { }

	// RVA: 0x1EEDA70 Offset: 0x1EEDA70 VA: 0x1EEDA70
	public void Reset(Camera pCam) { }

	// RVA: 0x1EEDAF8 Offset: 0x1EEDAF8 VA: 0x1EEDAF8
	public void AddObj(GameObject obj) { }

	// RVA: 0x1EEDD04 Offset: 0x1EEDD04 VA: 0x1EEDD04
	public Vector3 GetLookVec() { }
}

// Namespace: 
private enum BillBoardGroupManager.phase // TypeDefIndex: 6348
{
	// Fields
	public int value__; // 0x0
	public const BillBoardGroupManager.phase NONE = 0;
	public const BillBoardGroupManager.phase ADDING = 1;
	public const BillBoardGroupManager.phase USING = 2;
}

// Namespace: 
public class BillBoardVariant : MonoBehaviour // TypeDefIndex: 6349
{
	// Fields
	public Camera targetCamera; // 0x18
	public bool rotationFlip; // 0x20
	[TooltipAttribute] // RVA: 0xCBF944 Offset: 0xCBF944 VA: 0xCBF944
	public bool enableRotationX; // 0x21
	[TooltipAttribute] // RVA: 0xCBF97C Offset: 0xCBF97C VA: 0xCBF97C
	public bool enableRotationY; // 0x22
	[TooltipAttribute] // RVA: 0xCBF9B4 Offset: 0xCBF9B4 VA: 0xCBF9B4
	public bool enableRotationZ; // 0x23
	[SerializeField] // RVA: 0xCBF9EC Offset: 0xCBF9EC VA: 0xCBF9EC
	[TooltipAttribute] // RVA: 0xCBF9EC Offset: 0xCBF9EC VA: 0xCBF9EC
	private string searchCameraName; // 0x28
	private bool saveFlipFlag; // 0x30

	// Methods

	// RVA: 0x1EEE7B0 Offset: 0x1EEE7B0 VA: 0x1EEE7B0
	public void .ctor() { }

	// RVA: 0x1EEE830 Offset: 0x1EEE830 VA: 0x1EEE830
	private void Start() { }

	// RVA: 0x1EEE9B4 Offset: 0x1EEE9B4 VA: 0x1EEE9B4
	public void UpdateBillboard() { }

	// RVA: 0x1EEEC34 Offset: 0x1EEEC34 VA: 0x1EEEC34
	private void LateUpdate() { }

	// RVA: 0x1EEEC38 Offset: 0x1EEEC38 VA: 0x1EEEC38
	public void setCamera(Camera wkcamera) { }

	// RVA: 0x1EEEC40 Offset: 0x1EEEC40 VA: 0x1EEEC40
	public void setFlip(bool flg, bool init = False) { }

	// RVA: 0x1EEEC54 Offset: 0x1EEEC54 VA: 0x1EEEC54
	public void ResetFlip() { }
}

// Namespace: 
public class ClassButtonComponent : UICommonButton // TypeDefIndex: 6350
{
	// Fields
	protected int classPos; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xCBFA38 Offset: 0xCBFA38 VA: 0xCBFA38
	[DebuggerBrowsableAttribute] // RVA: 0xCBFA38 Offset: 0xCBFA38 VA: 0xCBFA38
	private ClassButtonComponent.CallbackFunc callbackFunc; // 0x50

	// Properties
	public int ClassPos { get; }

	// Methods

	// RVA: 0x1F29ABC Offset: 0x1F29ABC VA: 0x1F29ABC
	public void .ctor() { }

	// RVA: 0x1F29B24 Offset: 0x1F29B24 VA: 0x1F29B24
	protected void add_callbackFunc(ClassButtonComponent.CallbackFunc value) { }

	// RVA: 0x1F29C10 Offset: 0x1F29C10 VA: 0x1F29C10
	protected void remove_callbackFunc(ClassButtonComponent.CallbackFunc value) { }

	// RVA: 0x1F29CFC Offset: 0x1F29CFC VA: 0x1F29CFC
	public void setClassPos(int classPos, ClassButtonComponent.CallbackFunc callback) { }

	// RVA: 0x1F29D08 Offset: 0x1F29D08 VA: 0x1F29D08
	public int get_ClassPos() { }

	// RVA: 0x1F29D10 Offset: 0x1F29D10 VA: 0x1F29D10
	public void OnSelectButton() { }
}

// Namespace: 
public sealed class ClassButtonComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 6351
{
	// Methods

	// RVA: 0x1F29F58 Offset: 0x1F29F58 VA: 0x1F29F58
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1F29D2C Offset: 0x1F29D2C VA: 0x1F29D2C Slot: 11
	public virtual void Invoke(int classPos) { }

	// RVA: 0x1F29F68 Offset: 0x1F29F68 VA: 0x1F29F68 Slot: 12
	public virtual IAsyncResult BeginInvoke(int classPos, AsyncCallback callback, object object) { }

	// RVA: 0x1F29FF4 Offset: 0x1F29FF4 VA: 0x1F29FF4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ClassButtonControlComponent : MonoBehaviour // TypeDefIndex: 6352
{
	// Fields
	[SerializeField] // RVA: 0xCBFA74 Offset: 0xCBFA74 VA: 0xCBFA74
	protected UICommonButton tabClassRotation; // 0x18
	[SerializeField] // RVA: 0xCBFA84 Offset: 0xCBFA84 VA: 0xCBFA84
	protected ClassButtonComponent[] classButton; // 0x20
	[SerializeField] // RVA: 0xCBFA94 Offset: 0xCBFA94 VA: 0xCBFA94
	protected UISprite[] classCursor; // 0x28
	[SerializeField] // RVA: 0xCBFAA4 Offset: 0xCBFAA4 VA: 0xCBFAA4
	protected ServantClassCompatibilityIconComponent[] classCompatibilityIcon; // 0x30
	protected int currentCursor; // 0x38
	protected int oldCursor; // 0x3C
	private bool updateEnable; // 0x40
	private bool haveMixIcon; // 0x41
	private static readonly int[] mstClassIdTableHaveMixIcon; // 0x0
	private static readonly int[] mstClassIdTableNoMixIcon; // 0x8
	private static readonly int[] supportGroupTypeTableHaveMixIcon; // 0x10
	private static readonly int[] supportGroupTypeTableNoMixIcon; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCBFAB4 Offset: 0xCBFAB4 VA: 0xCBFAB4
	[DebuggerBrowsableAttribute] // RVA: 0xCBFAB4 Offset: 0xCBFAB4 VA: 0xCBFAB4
	private ClassButtonControlComponent.CallbackFunc callbackFunc; // 0x48

	// Properties
	public int GetCursorPos { get; }

	// Methods

	// RVA: 0x1F2A000 Offset: 0x1F2A000 VA: 0x1F2A000
	public void .ctor() { }

	// RVA: 0x1F2A008 Offset: 0x1F2A008 VA: 0x1F2A008
	protected void add_callbackFunc(ClassButtonControlComponent.CallbackFunc value) { }

	// RVA: 0x1F2A0F4 Offset: 0x1F2A0F4 VA: 0x1F2A0F4
	protected void remove_callbackFunc(ClassButtonControlComponent.CallbackFunc value) { }

	// RVA: 0x1F2A1E0 Offset: 0x1F2A1E0 VA: 0x1F2A1E0
	public static bool IsMixSupportGroupType(int classPos) { }

	// RVA: 0x1F2A1EC Offset: 0x1F2A1EC VA: 0x1F2A1EC
	public void init(ClassButtonControlComponent.CallbackFunc callback, int questId = 0, int questPhase = 0, bool defaultPos = False) { }

	// RVA: 0x1F2A838 Offset: 0x1F2A838 VA: 0x1F2A838
	public void setCursor(int classPos) { }

	// RVA: 0x1F2AC7C Offset: 0x1F2AC7C VA: 0x1F2AC7C
	public void OnSelectButton(int classPos) { }

	// RVA: 0x1F2AC8C Offset: 0x1F2AC8C VA: 0x1F2AC8C
	public void OnRotatetCursor() { }

	// RVA: 0x1F2ACBC Offset: 0x1F2ACBC VA: 0x1F2ACBC
	public int get_GetCursorPos() { }

	// RVA: 0x1F2ACC4 Offset: 0x1F2ACC4 VA: 0x1F2ACC4
	public int getChangeCursorPos() { }

	// RVA: 0x1F2ACD4 Offset: 0x1F2ACD4 VA: 0x1F2ACD4
	public void setUpdateEnable(bool flag) { }

	// RVA: 0x1F2A994 Offset: 0x1F2A994 VA: 0x1F2A994
	private int getIconCursorPos(int classPos) { }

	// RVA: 0x1F2ACE0 Offset: 0x1F2ACE0 VA: 0x1F2ACE0
	private static void .cctor() { }
}

// Namespace: 
public sealed class ClassButtonControlComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 6353
{
	// Methods

	// RVA: 0x1F2ADF4 Offset: 0x1F2ADF4 VA: 0x1F2ADF4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1F2AA50 Offset: 0x1F2AA50 VA: 0x1F2AA50 Slot: 11
	public virtual void Invoke(int classPos) { }

	// RVA: 0x1F2AE04 Offset: 0x1F2AE04 VA: 0x1F2AE04 Slot: 12
	public virtual IAsyncResult BeginInvoke(int classPos, AsyncCallback callback, object object) { }

	// RVA: 0x1F2AE90 Offset: 0x1F2AE90 VA: 0x1F2AE90 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class CommandCodeSkillInfo : MonoBehaviour // TypeDefIndex: 6354
{
	// Fields
	[SerializeField] // RVA: 0xCBFAF0 Offset: 0xCBFAF0 VA: 0xCBFAF0
	public UISprite commandCodeIconBg; // 0x18
	[SerializeField] // RVA: 0xCBFB00 Offset: 0xCBFB00 VA: 0xCBFB00
	public UITexture CommandCodeIcon; // 0x20
	[SerializeField] // RVA: 0xCBFB10 Offset: 0xCBFB10 VA: 0xCBFB10
	public UISprite RaritySpr; // 0x28
	[SerializeField] // RVA: 0xCBFB20 Offset: 0xCBFB20 VA: 0xCBFB20
	public SkillIconComponent SkillIconComp; // 0x30
	[SerializeField] // RVA: 0xCBFB30 Offset: 0xCBFB30 VA: 0xCBFB30
	public GameObject NameBg; // 0x38
	[SerializeField] // RVA: 0xCBFB40 Offset: 0xCBFB40 VA: 0xCBFB40
	public UILabel CommandCodeName; // 0x40
	[SerializeField] // RVA: 0xCBFB50 Offset: 0xCBFB50 VA: 0xCBFB50
	public GameObject DetailObj; // 0x48
	[SerializeField] // RVA: 0xCBFB60 Offset: 0xCBFB60 VA: 0xCBFB60
	public float DetailObjHeight; // 0x50
	[SerializeField] // RVA: 0xCBFB70 Offset: 0xCBFB70 VA: 0xCBFB70
	public GameObject Line; // 0x58
	[SerializeField] // RVA: 0xCBFB80 Offset: 0xCBFB80 VA: 0xCBFB80
	public UILabel SkillDetail; // 0x60

	// Methods

	// RVA: 0x1B64E2C Offset: 0x1B64E2C VA: 0x1B64E2C
	public void .ctor() { }

	// RVA: 0x1B64E3C Offset: 0x1B64E3C VA: 0x1B64E3C
	public void Set(int commandCodeId, int skillId, string skillName, string skillDetail, bool isFirst = False) { }
}

// Namespace: 
public class CommandSpellIconComponent : MonoBehaviour // TypeDefIndex: 6355
{
	// Fields
	[SerializeField] // RVA: 0xCBFB90 Offset: 0xCBFB90 VA: 0xCBFB90
	protected int ImageType; // 0x18
	protected int ImageTypeOld; // 0x1C
	[SerializeField] // RVA: 0xCBFBA0 Offset: 0xCBFBA0 VA: 0xCBFBA0
	protected int Remain; // 0x20
	[SerializeField] // RVA: 0xCBFBB0 Offset: 0xCBFBB0 VA: 0xCBFBB0
	protected Vector2 Size; // 0x24
	[SerializeField] // RVA: 0xCBFBC0 Offset: 0xCBFBC0 VA: 0xCBFBC0
	protected UITexture myTexture; // 0x30
	private AssetData assetData; // 0x38
	protected Action callbackFunc; // 0x40

	// Methods

	// RVA: 0x1B67A44 Offset: 0x1B67A44 VA: 0x1B67A44
	public void .ctor() { }

	// RVA: 0x1B67AA0 Offset: 0x1B67AA0 VA: 0x1B67AA0
	public void ReleaseAll() { }

	// RVA: 0x1B67C80 Offset: 0x1B67C80 VA: 0x1B67C80
	private void Awake() { }

	// RVA: 0x1B67CD8 Offset: 0x1B67CD8 VA: 0x1B67CD8
	private void OnDestroy() { }

	// RVA: 0x1B67CDC Offset: 0x1B67CDC VA: 0x1B67CDC
	private void Initialize() { }

	// RVA: 0x1B68018 Offset: 0x1B68018 VA: 0x1B68018
	public void SetData(UserGameEntity entity) { }

	// RVA: 0x1B6809C Offset: 0x1B6809C VA: 0x1B6809C
	public void SetDataBattle(UserGameEntity entity, BattleData battleData) { }

	// RVA: 0x1B68118 Offset: 0x1B68118 VA: 0x1B68118
	public void SetFullData(UserGameEntity entity) { }

	// RVA: 0x1B681B0 Offset: 0x1B681B0 VA: 0x1B681B0
	public void SetChangeCmdSpellData(int cmdSpellImgId) { }

	// RVA: 0x1B68228 Offset: 0x1B68228 VA: 0x1B68228
	public void SetChangeCurrentCmdSepll(int cmdSpellImgId, int cmdRemain, Action callback) { }

	// RVA: 0x1B68280 Offset: 0x1B68280 VA: 0x1B68280
	private string GetSpellImageAssetStorageName(int tp) { }

	// RVA: 0x1B68304 Offset: 0x1B68304 VA: 0x1B68304
	private string GetSpellImageFileName(int tp) { }

	// RVA: 0x1B67D14 Offset: 0x1B67D14 VA: 0x1B67D14
	public void SetImageType(int tp) { }

	// RVA: 0x1B67EC4 Offset: 0x1B67EC4 VA: 0x1B67EC4
	public void SetRemain(int count) { }

	// RVA: 0x1B67FA8 Offset: 0x1B67FA8 VA: 0x1B67FA8
	public void SetSize(Vector2 sz) { }

	// RVA: 0x1B683C8 Offset: 0x1B683C8 VA: 0x1B683C8
	private void SetTexture(AssetData data, int tp) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE8C0 Offset: 0xCAE8C0 VA: 0xCAE8C0
private sealed class CommandSpellIconComponent.<SetImageType>c__AnonStorey0 // TypeDefIndex: 6356
{
	// Fields
	internal int tp; // 0x10
	internal CommandSpellIconComponent $this; // 0x18

	// Methods

	// RVA: 0x1B683C0 Offset: 0x1B683C0 VA: 0x1B683C0
	public void .ctor() { }

	// RVA: 0x1B685E4 Offset: 0x1B685E4 VA: 0x1B685E4
	internal void <>m__0(AssetData data) { }
}

// Namespace: 
public static class CommonFunction // TypeDefIndex: 6357
{
	// Methods

	// RVA: 0x1496844 Offset: 0x1496844 VA: 0x1496844
	public static bool ReScaleUiFunc(UIRoot uiRoot) { }

	// RVA: 0x1497150 Offset: 0x1497150 VA: 0x1497150
	public static void ScalingLabelWidth(UILabel label, int maxWidth) { }

	// RVA: 0x1497348 Offset: 0x1497348 VA: 0x1497348
	public static void SetColorAllChild(Transform parentTransform, bool isEnable, Color color) { }

	// RVA: 0x1497440 Offset: 0x1497440 VA: 0x1497440
	public static void SetColor(GameObject obj, bool isEnable, Color color) { }

	// RVA: 0x1497610 Offset: 0x1497610 VA: 0x1497610
	public static int[] JoinIndiv(int[] baseIndiv, int[] addIndiv) { }
}

// Namespace: 
public class ComponentPool<T> // TypeDefIndex: 6358
{
	// Fields
	private List<T> availableComponentList; // 0x0
	private List<T> nonAvailableComponentList; // 0x0
	private GameObject prefab; // 0x0
	private int poolSizeMax; // 0x0

	// Properties
	private int currentPoolSize { get; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(GameObject prefab, int poolSizeMax = 10) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2525D04 Offset: 0x2525D04 VA: 0x2525D04
	|-ComponentPool<CommonEffectComponent>..ctor
	|-ComponentPool<SubmarineEffectScanObstaclePanelComponent>..ctor
	|-ComponentPool<SubmarineEffectScannablePanelComponent>..ctor
	|-ComponentPool<SubmarineEffectSelectedPanelComponent>..ctor
	|-ComponentPool<object>..ctor
	*/

	// RVA: -1 Offset: -1
	private int get_currentPoolSize() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2525DD0 Offset: 0x2525DD0 VA: 0x2525DD0
	|-ComponentPool<object>.get_currentPoolSize
	*/

	// RVA: -1 Offset: -1
	public void Preload(int count) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2525E50 Offset: 0x2525E50 VA: 0x2525E50
	|-ComponentPool<CommonEffectComponent>.Preload
	|-ComponentPool<SubmarineEffectScannablePanelComponent>.Preload
	|-ComponentPool<object>.Preload
	*/

	// RVA: -1 Offset: -1
	public T Rent() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2525FCC Offset: 0x2525FCC VA: 0x2525FCC
	|-ComponentPool<object>.Rent
	*/

	// RVA: -1 Offset: -1
	public T Rent(Transform parent) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25262A0 Offset: 0x25262A0 VA: 0x25262A0
	|-ComponentPool<CommonEffectComponent>.Rent
	|-ComponentPool<object>.Rent
	*/

	// RVA: -1 Offset: -1
	public T Rent(Transform parent, Vector3 position) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2526324 Offset: 0x2526324 VA: 0x2526324
	|-ComponentPool<object>.Rent
	*/

	// RVA: -1 Offset: -1
	public T Rent(Transform parent, Vector3 position, Quaternion rotation) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25263D0 Offset: 0x25263D0 VA: 0x25263D0
	|-ComponentPool<object>.Rent
	*/

	// RVA: -1 Offset: -1
	public void Return(T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25264AC Offset: 0x25264AC VA: 0x25264AC
	|-ComponentPool<CommonEffectComponent>.Return
	|-ComponentPool<object>.Return
	*/

	// RVA: -1 Offset: -1
	public void ShrinkPool(float rate, int infmum = 1) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2526608 Offset: 0x2526608 VA: 0x2526608
	|-ComponentPool<object>.ShrinkPool
	*/

	// RVA: -1 Offset: -1
	public void Clear() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25266B4 Offset: 0x25266B4 VA: 0x25266B4
	|-ComponentPool<object>.Clear
	*/

	// RVA: -1 Offset: -1
	public void Finish() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2526AAC Offset: 0x2526AAC VA: 0x2526AAC
	|-ComponentPool<CommonEffectComponent>.Finish
	|-ComponentPool<SubmarineEffectScanObstaclePanelComponent>.Finish
	|-ComponentPool<SubmarineEffectScannablePanelComponent>.Finish
	|-ComponentPool<object>.Finish
	*/

	// RVA: -1 Offset: -1
	private void DestroyItem(T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2526AF0 Offset: 0x2526AF0 VA: 0x2526AF0
	|-ComponentPool<object>.DestroyItem
	*/
}

// Namespace: 
public static class DebugCommon // TypeDefIndex: 6359
{
	// Methods

	[ConditionalAttribute] // RVA: 0xD365B8 Offset: 0xD365B8 VA: 0xD365B8
	// RVA: 0x1789FD8 Offset: 0x1789FD8 VA: 0x1789FD8
	public static void Assert(bool condition) { }

	[ConditionalAttribute] // RVA: 0xD365F0 Offset: 0xD365F0 VA: 0xD365F0
	// RVA: 0x178A054 Offset: 0x178A054 VA: 0x178A054
	public static void Assert(bool condition, string message) { }

	[ConditionalAttribute] // RVA: 0xD36628 Offset: 0xD36628 VA: 0xD36628
	// RVA: 0x178A0E0 Offset: 0x178A0E0 VA: 0x178A0E0
	public static void Assert(bool condition, Func<string> getMessage) { }
}

// Namespace: 
public static class DefCoroutine // TypeDefIndex: 6360
{
	// Fields
	public static WaitForSeconds milliSecPointOne; // 0x0
	public static WaitForSeconds milliSecOne; // 0x8
	public static WaitForSeconds milliSecTwo; // 0x10
	public static WaitForSeconds milliSecTwoSixSix; // 0x18
	public static WaitForSeconds milliSecThree; // 0x20
	public static WaitForSeconds milliSecThreeThreeThree; // 0x28
	public static WaitForSeconds milliSecThreeSixSix; // 0x30
	public static WaitForSeconds milliSecFour; // 0x38
	public static WaitForSeconds milliSecFive; // 0x40
	public static WaitForSeconds milliSecSix; // 0x48
	public static WaitForSeconds milliSecSeven; // 0x50
	public static WaitForSeconds milliSecEight; // 0x58
	public static WaitForSeconds milliSecEightSixSix; // 0x60
	public static WaitForSeconds milliSecNine; // 0x68
	public static WaitForSeconds milliSecTen; // 0x70
	public static WaitForSeconds milliSecEleven; // 0x78
	public static WaitForSeconds milliSecTwelve; // 0x80
	public static WaitForSeconds milliSecFourTeen; // 0x88

	// Methods

	// RVA: 0x1628DA8 Offset: 0x1628DA8 VA: 0x1628DA8
	private static void .cctor() { }
}

// Namespace: 
public class DragSelectComponent : BaseMonoBehaviour // TypeDefIndex: 6361
{
	// Fields
	private const int DEFAULT_CONDENSED_WIDTH = 30;
	[SerializeField] // RVA: 0xCBFBD0 Offset: 0xCBFBD0 VA: 0xCBFBD0
	protected GameObject selectObject; // 0x18
	[SerializeField] // RVA: 0xCBFBE0 Offset: 0xCBFBE0 VA: 0xCBFBE0
	protected UILabel selectTextLabel; // 0x20
	[SerializeField] // RVA: 0xCBFBF0 Offset: 0xCBFBF0 VA: 0xCBFBF0
	protected GameObject dragSelectObject; // 0x28
	[SerializeField] // RVA: 0xCBFC00 Offset: 0xCBFC00 VA: 0xCBFC00
	protected GameObject dragSeletBase; // 0x30
	private bool isCondensedScale; // 0x38
	private int condensedWidth; // 0x3C

	// Methods

	// RVA: 0x163135C Offset: 0x163135C VA: 0x163135C
	public void .ctor() { }

	// RVA: 0x1631364 Offset: 0x1631364 VA: 0x1631364
	public void Set(int selectNum = -1, int dragSelectNum = -1) { }

	// RVA: 0x163157C Offset: 0x163157C VA: 0x163157C
	public void setOverHundredNumCondensedScale(int width = -1) { }
}

// Namespace: 
public class EventBannerComponent : BaseMonoBehaviour // TypeDefIndex: 6362
{
	// Fields
	[SerializeField] // RVA: 0xCBFC10 Offset: 0xCBFC10 VA: 0xCBFC10
	protected GameObject bannerPrefab; // 0x18
	[SerializeField] // RVA: 0xCBFC20 Offset: 0xCBFC20 VA: 0xCBFC20
	protected UIGrid bannerGrid; // 0x20
	protected List<GameObject> bannerList; // 0x28

	// Methods

	// RVA: 0x1D1C7C0 Offset: 0x1D1C7C0 VA: 0x1D1C7C0
	public void .ctor() { }

	// RVA: 0x1D1C830 Offset: 0x1D1C830 VA: 0x1D1C830
	public void ClearBanner() { }

	// RVA: 0x1D1C994 Offset: 0x1D1C994 VA: 0x1D1C994
	public void SetBanner() { }
}

// Namespace: 
public class EventItemComponent : MonoBehaviour // TypeDefIndex: 6363
{
	// Fields
	private static readonly string BASE_SPRITE_DEFAULT_NAME; // 0x0
	[SerializeField] // RVA: 0xCBFC30 Offset: 0xCBFC30 VA: 0xCBFC30
	protected GameObject baseObject; // 0x18
	[SerializeField] // RVA: 0xCBFC40 Offset: 0xCBFC40 VA: 0xCBFC40
	protected UISprite baseSp; // 0x20
	[SerializeField] // RVA: 0xCBFC50 Offset: 0xCBFC50 VA: 0xCBFC50
	protected ItemIconComponent itemIcon; // 0x28
	[SerializeField] // RVA: 0xCBFC60 Offset: 0xCBFC60 VA: 0xCBFC60
	protected UILabel dataLabel; // 0x30
	[SerializeField] // RVA: 0xCBFC70 Offset: 0xCBFC70 VA: 0xCBFC70
	protected UILabel textLabel; // 0x38
	protected int dataItemId; // 0x40
	protected int dataPointEventId; // 0x44
	protected int dataPointEventGroupId; // 0x48
	protected int dataMissionEventId; // 0x4C
	protected int dataRaidEventId; // 0x50
	protected int dataRaidDay; // 0x54
	protected int dataPointGroupEventId; // 0x58

	// Methods

	// RVA: 0x1B77300 Offset: 0x1B77300 VA: 0x1B77300
	public void .ctor() { }

	// RVA: 0x1B77308 Offset: 0x1B77308 VA: 0x1B77308
	private void Awake() { }

	// RVA: 0x1B77494 Offset: 0x1B77494 VA: 0x1B77494
	private void OnDestroy() { }

	// RVA: 0x1B77534 Offset: 0x1B77534 VA: 0x1B77534
	public void Clear() { }

	// RVA: 0x1B7762C Offset: 0x1B7762C VA: 0x1B7762C
	public void Set(int itemId) { }

	// RVA: 0x1B77A90 Offset: 0x1B77A90 VA: 0x1B77A90
	public void SetGroupPointEvent(int itemId) { }

	// RVA: 0x1B77E10 Offset: 0x1B77E10 VA: 0x1B77E10
	public void SetPointEvent(int eventId, int groupId) { }

	// RVA: 0x1B78004 Offset: 0x1B78004 VA: 0x1B78004
	public void SetMissionEvent(int eventId) { }

	// RVA: 0x1B782B0 Offset: 0x1B782B0 VA: 0x1B782B0
	public void SetDailyMissionEvent(int eventId) { }

	// RVA: 0x1B78564 Offset: 0x1B78564 VA: 0x1B78564
	public void SetRaidEvent(int eventId, int day) { }

	// RVA: 0x1B787D0 Offset: 0x1B787D0 VA: 0x1B787D0
	public void SetNum(int num, Color color) { }

	// RVA: 0x1B788CC Offset: 0x1B788CC VA: 0x1B788CC
	public void UpdateDisp() { }

	// RVA: 0x1B7895C Offset: 0x1B7895C VA: 0x1B7895C
	public void setBaseSpriteDownloadAtlas(string spName) { }

	// RVA: 0x1B789FC Offset: 0x1B789FC VA: 0x1B789FC
	public void setScaleItemIcon(float scale) { }

	// RVA: 0x1B78A3C Offset: 0x1B78A3C VA: 0x1B78A3C
	public void setLocalPositionXItemIcon(float x) { }

	// RVA: 0x1B78A7C Offset: 0x1B78A7C VA: 0x1B78A7C
	public void setLocalPositionDataLabel(float x, float y) { }

	// RVA: 0x1B78ACC Offset: 0x1B78ACC VA: 0x1B78ACC
	public void setWidthDataLabel(int width) { }

	// RVA: 0x1B78B04 Offset: 0x1B78B04 VA: 0x1B78B04
	public void setHeightDataLabel(int height) { }

	// RVA: 0x1B78B3C Offset: 0x1B78B3C VA: 0x1B78B3C
	public void setFontSizeDataLabel(int size) { }

	// RVA: 0x1B78B74 Offset: 0x1B78B74 VA: 0x1B78B74
	public void setPivotDataLabel(UIWidget.Pivot pivot) { }

	// RVA: 0x1B78BAC Offset: 0x1B78BAC VA: 0x1B78BAC
	private static void .cctor() { }
}

// Namespace: 
public class EventItemListComponent : MonoBehaviour // TypeDefIndex: 6364
{
	// Fields
	[SerializeField] // RVA: 0xCBFC80 Offset: 0xCBFC80 VA: 0xCBFC80
	protected EventItemComponent[] eventItemDrawList; // 0x18
	protected int eventId; // 0x20

	// Methods

	// RVA: 0x1B79BD4 Offset: 0x1B79BD4 VA: 0x1B79BD4
	public void .ctor() { }

	// RVA: 0x1B79BDC Offset: 0x1B79BDC VA: 0x1B79BDC
	public static void GoToShopEventItemExchange(int eventId) { }

	// RVA: 0x1B79C90 Offset: 0x1B79C90 VA: 0x1B79C90
	public static void GoToEventShop(int eventId) { }

	// RVA: 0x1B79D44 Offset: 0x1B79D44 VA: 0x1B79D44
	public void Clear() { }

	// RVA: 0x1B79E0C Offset: 0x1B79E0C VA: 0x1B79E0C
	public void Set(int eventId) { }
}

// Namespace: 
public class EventUpValIconComponent : SwitchParameterDisplayComponent // TypeDefIndex: 6365
{
	// Fields
	protected static int MESSAGE_X_SIZE_MAX; // 0x0
	[SerializeField] // RVA: 0xCBFC90 Offset: 0xCBFC90 VA: 0xCBFC90
	protected EventUpValIconComponent.Alignment alignment; // 0x18
	[SerializeField] // RVA: 0xCBFCA0 Offset: 0xCBFCA0 VA: 0xCBFCA0
	protected GameObject baseObject; // 0x20
	[SerializeField] // RVA: 0xCBFCB0 Offset: 0xCBFCB0 VA: 0xCBFCB0
	protected UISprite iconSprite; // 0x28
	[SerializeField] // RVA: 0xCBFCC0 Offset: 0xCBFCC0 VA: 0xCBFCC0
	protected UILabel paramLabel; // 0x30
	[SerializeField] // RVA: 0xCBFCD0 Offset: 0xCBFCD0 VA: 0xCBFCD0
	protected UISprite eventNameBackSprite; // 0x38
	[SerializeField] // RVA: 0xCBFCE0 Offset: 0xCBFCE0 VA: 0xCBFCE0
	protected UISprite eventLogoSprite; // 0x40
	protected EventMargeItemUpValInfo[] eventUpValItemList; // 0x48
	private int servantId; // 0x50
	private int servantRarity; // 0x54
	private int equipSvtId; // 0x58
	private bool invalid; // 0x5C
	private readonly Color COLOR_NORMAL; // 0x60
	private readonly Color COLOR_INVALID; // 0x70

	// Methods

	// RVA: 0x160B98C Offset: 0x160B98C VA: 0x160B98C
	public void .ctor() { }

	// RVA: 0x160BA28 Offset: 0x160BA28 VA: 0x160BA28
	protected void OnDestroy() { }

	// RVA: 0x160BA2C Offset: 0x160BA2C VA: 0x160BA2C
	public void Clear() { }

	// RVA: 0x160BA6C Offset: 0x160BA6C VA: 0x160BA6C
	public void Set(EventMargeItemUpValInfo[] eventUpValItemList, int servantId = -1, int servantRarity = -1, int equipSvtId = -1) { }

	// RVA: 0x160BB4C Offset: 0x160BB4C VA: 0x160BB4C
	protected void SetIconLabel(int count) { }

	// RVA: 0x160BA34 Offset: 0x160BA34 VA: 0x160BA34
	protected void ClearParam() { }

	// RVA: 0x160BC14 Offset: 0x160BC14 VA: 0x160BC14
	protected void SetParam(int num) { }

	// RVA: 0x160C360 Offset: 0x160C360 VA: 0x160C360
	protected void SetAlpha(float alpha) { }

	// RVA: 0x160C5A8 Offset: 0x160C5A8 VA: 0x160C5A8 Slot: 4
	public override bool ParameterChange(int count) { }

	// RVA: 0x160C60C Offset: 0x160C60C VA: 0x160C60C Slot: 5
	public override bool UpdateAlpha(float alpha) { }

	// RVA: 0x160C638 Offset: 0x160C638 VA: 0x160C638
	private static void .cctor() { }
}

// Namespace: 
public enum EventUpValIconComponent.Alignment // TypeDefIndex: 6366
{
	// Fields
	public int value__; // 0x0
	public const EventUpValIconComponent.Alignment CENTER = 0;
	public const EventUpValIconComponent.Alignment LEFT = 1;
	public const EventUpValIconComponent.Alignment RIGHT = 2;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC913CC Offset: 0xC913CC VA: 0xC913CC
[AddComponentMenu] // RVA: 0xC913CC Offset: 0xC913CC VA: 0xC913CC
public class ExUIMeshRenderer : UITweenRenderer // TypeDefIndex: 6367
{
	// Fields
	[SerializeField] // RVA: 0xCBFCF0 Offset: 0xCBFCF0 VA: 0xCBFCF0
	public MeshFilter meshFilter; // 0x188
	[SerializeField] // RVA: 0xCBFD00 Offset: 0xCBFD00 VA: 0xCBFD00
	public MeshRenderer meshRenderer; // 0x190
	[SerializeField] // RVA: 0xCBFD10 Offset: 0xCBFD10 VA: 0xCBFD10
	public Texture defaultTexture; // 0x198
	[SerializeField] // RVA: 0xCBFD20 Offset: 0xCBFD20 VA: 0xCBFD20
	public Vector2 uvSize; // 0x1A0
	[SerializeField] // RVA: 0xCBFD30 Offset: 0xCBFD30 VA: 0xCBFD30
	public Vector2 uvOffset; // 0x1A8
	[SerializeField] // RVA: 0xCBFD40 Offset: 0xCBFD40 VA: 0xCBFD40
	public bool isRescale; // 0x1B0
	protected AssetData assetData; // 0x1B8
	protected string loadAssetName; // 0x1C0
	protected string assetLabel; // 0x1C8
	protected Action callbackFunc; // 0x1D0
	protected bool isFirst; // 0x1D8
	protected int baseWidth; // 0x1DC
	protected int baseHeight; // 0x1E0

	// Properties
	public Material material { get; set; }

	// Methods

	// RVA: 0x160F5E0 Offset: 0x160F5E0 VA: 0x160F5E0
	public void .ctor() { }

	// RVA: 0x160F660 Offset: 0x160F660 VA: 0x160F660
	public void SetBaseWidth(int setWidth) { }

	// RVA: 0x160F6A0 Offset: 0x160F6A0 VA: 0x160F6A0
	public Material get_material() { }

	// RVA: 0x160F740 Offset: 0x160F740 VA: 0x160F740
	public void set_material(Material value) { }

	// RVA: 0x160F778 Offset: 0x160F778 VA: 0x160F778 Slot: 20
	protected override void OnStart() { }

	// RVA: 0x160F950 Offset: 0x160F950 VA: 0x160F950 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x160FA8C Offset: 0x160FA8C VA: 0x160FA8C Slot: 41
	public override void SetTweenVolume(float v) { }

	// RVA: 0x160FB74 Offset: 0x160FB74 VA: 0x160FB74
	public void ClearImage() { }

	// RVA: 0x160F868 Offset: 0x160F868 VA: 0x160F868
	public void SetImage(Texture tex) { }

	// RVA: 0x160FD5C Offset: 0x160FD5C VA: 0x160FD5C
	public void SetAssetImage(string assetName, Action callback) { }

	// RVA: 0x160FD6C Offset: 0x160FD6C VA: 0x160FD6C
	public void SetAssetImage(string assetName, string assetLabel, Action callback) { }

	// RVA: 0x161001C Offset: 0x161001C VA: 0x161001C
	protected void EndLoad(AssetData data) { }

	// RVA: 0x160FCA0 Offset: 0x160FCA0 VA: 0x160FCA0
	protected void SetTexture(Texture tex) { }

	// RVA: 0x161011C Offset: 0x161011C VA: 0x161011C Slot: 43
	protected virtual void ReScale() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC91418 Offset: 0xC91418 VA: 0xC91418
[AddComponentMenu] // RVA: 0xC91418 Offset: 0xC91418 VA: 0xC91418
public class ExUISpriteRenderer : UITweenRenderer // TypeDefIndex: 6368
{
	// Fields
	[SerializeField] // RVA: 0xCBFD50 Offset: 0xCBFD50 VA: 0xCBFD50
	public SpriteRenderer spriteRenderer; // 0x188
	[SerializeField] // RVA: 0xCBFD60 Offset: 0xCBFD60 VA: 0xCBFD60
	public Texture2D defaultTexture; // 0x190
	protected AssetData assetData; // 0x198
	protected string loadAssetName; // 0x1A0
	protected string assetLabel; // 0x1A8
	protected bool isUseAlphaImage; // 0x1B0
	protected bool isTextureAlphaImage; // 0x1B1
	protected Action callbackFunc; // 0x1B8
	protected bool isInit; // 0x1C0
	protected Vector3 baseScale; // 0x1C4
	protected int oldWidth; // 0x1D0
	protected int oldHeight; // 0x1D4
	public static readonly int BACK_WIDTH_21_9; // 0x0
	public static readonly int BACK_HEIGHT_21_9; // 0x4
	public static readonly int BACK_WIDTH_16_9; // 0x8
	public static readonly int BACK_HEIGHT_16_9; // 0xC

	// Methods

	// RVA: 0x16109C8 Offset: 0x16109C8 VA: 0x16109C8
	public void .ctor() { }

