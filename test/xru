
	// RVA: 0x1E9E794 Offset: 0x1E9E794 VA: 0x1E9E794
	protected void OnClickIcon(CoinRoomCoinIconObject obj) { }

	// RVA: 0x1E9E294 Offset: 0x1E9E294 VA: 0x1E9E294
	protected void OnSelectedCoinIcon(CoinRoomCoinListViewManager.ResultKind kind, CoinRoomCoinIconObject iconObject) { }

	// RVA: 0x1E9EB24 Offset: 0x1E9EB24 VA: 0x1E9EB24
	protected void EndShowItemDetail(bool isDecide) { }

	// RVA: 0x1E9EC00 Offset: 0x1E9EC00 VA: 0x1E9EC00
	protected void EndCloseItemDetail() { }

	// RVA: 0x1E9EC30 Offset: 0x1E9EC30 VA: 0x1E9EC30
	private void SelectedCoinConfirm(CoinRoomCoinIconObject iconObject, int num) { }

	// RVA: 0x1E9E8CC Offset: 0x1E9E8CC VA: 0x1E9E8CC
	private void RefrashListDisp(int num) { }

	// RVA: 0x1E9EF14 Offset: 0x1E9EF14 VA: 0x1E9EF14
	private void SetTouchEnabled() { }

	// RVA: 0x1E9F3A8 Offset: 0x1E9F3A8 VA: 0x1E9F3A8
	public void OnClickAllRelease() { }

	// RVA: 0x1E9F6A4 Offset: 0x1E9F6A4 VA: 0x1E9F6A4
	public void OnClicFilterKind() { }

	// RVA: 0x1E9F784 Offset: 0x1E9F784 VA: 0x1E9F784
	public void OnClickSortKind() { }

	// RVA: 0x1E9F888 Offset: 0x1E9F888 VA: 0x1E9F888
	protected void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x1E9F908 Offset: 0x1E9F908 VA: 0x1E9F908
	protected void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x1E9FA9C Offset: 0x1E9FA9C VA: 0x1E9FA9C
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x1E9FB8C Offset: 0x1E9FB8C VA: 0x1E9FB8C Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x1E9FE0C Offset: 0x1E9FE0C VA: 0x1E9FE0C
	public void ChangeIconScale() { }

	// RVA: 0x1E9DA30 Offset: 0x1E9DA30 VA: 0x1E9DA30
	public string GetScaleButtonSpriteName() { }

	// RVA: 0x1EA0028 Offset: 0x1EA0028 VA: 0x1EA0028
	public void OnClickScaleChange() { }

	// RVA: 0x1E9E7A4 Offset: 0x1E9E7A4 VA: 0x1E9E7A4
	private void UpdateSelectNum(int deleteNum) { }

	// RVA: 0x1EA00DC Offset: 0x1EA00DC VA: 0x1EA00DC
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEB28 Offset: 0xCCEB28 VA: 0xCCEB28
	// RVA: 0x1EA015C Offset: 0x1EA015C VA: 0x1EA015C
	private static int <SetAddNumLabel>m__0(KeyValuePair<int, SelectedUserSvtCoin> x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEB38 Offset: 0xCCEB38 VA: 0xCCEB38
	// RVA: 0x1EA01D0 Offset: 0x1EA01D0 VA: 0x1EA01D0
	private static int <SetAddBar>m__1(KeyValuePair<int, SelectedUserSvtCoin> x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEB48 Offset: 0xCCEB48 VA: 0xCCEB48
	// RVA: 0x1EA0244 Offset: 0x1EA0244 VA: 0x1EA0244
	private static int <OnSelectedCoinIcon>m__2(KeyValuePair<int, SelectedUserSvtCoin> x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEB58 Offset: 0xCCEB58 VA: 0xCCEB58
	// RVA: 0x1EA02B8 Offset: 0x1EA02B8 VA: 0x1EA02B8
	private static int <SetTouchEnabled>m__3(KeyValuePair<int, SelectedUserSvtCoin> x) { }
}

// Namespace: 
public enum CoinRoomCoinListViewManager.InitMode // TypeDefIndex: 9441
{
	// Fields
	public int value__; // 0x0
	public const CoinRoomCoinListViewManager.InitMode NONE = 0;
	public const CoinRoomCoinListViewManager.InitMode VALID = 1;
	public const CoinRoomCoinListViewManager.InitMode INPUT = 2;
	public const CoinRoomCoinListViewManager.InitMode MODIFY = 3;
}

// Namespace: 
public enum CoinRoomCoinListViewManager.ResultKind // TypeDefIndex: 9442
{
	// Fields
	public int value__; // 0x0
	public const CoinRoomCoinListViewManager.ResultKind NONE = 0;
	public const CoinRoomCoinListViewManager.ResultKind ITEM_DETAIL = 1;
	public const CoinRoomCoinListViewManager.ResultKind SELECT_DETAIL = 2;
}

// Namespace: 
public sealed class CoinRoomCoinListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 9443
{
	// Methods

	// RVA: 0x1EA032C Offset: 0x1EA032C VA: 0x1EA032C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1EA033C Offset: 0x1EA033C VA: 0x1EA033C Slot: 11
	public virtual void Invoke(CoinRoomCoinListViewManager.ResultKind kind, int index, int id) { }

	// RVA: 0x1EA05A8 Offset: 0x1EA05A8 VA: 0x1EA05A8 Slot: 12
	public virtual IAsyncResult BeginInvoke(CoinRoomCoinListViewManager.ResultKind kind, int index, int id, AsyncCallback callback, object object) { }

	// RVA: 0x1EA0668 Offset: 0x1EA0668 VA: 0x1EA0668 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SelectedUserSvtCoin // TypeDefIndex: 9444
{
	// Fields
	public CoinRoomCoinIconObject iconObject; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC6793C Offset: 0xC6793C VA: 0xC6793C
	[DebuggerBrowsableAttribute] // RVA: 0xC6793C Offset: 0xC6793C VA: 0xC6793C
	private int <itemId>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC67978 Offset: 0xC67978 VA: 0xC67978
	[DebuggerBrowsableAttribute] // RVA: 0xC67978 Offset: 0xC67978 VA: 0xC67978
	private int <num>k__BackingField; // 0x1C
	[CompilerGeneratedAttribute] // RVA: 0xC679B4 Offset: 0xC679B4 VA: 0xC679B4
	[DebuggerBrowsableAttribute] // RVA: 0xC679B4 Offset: 0xC679B4 VA: 0xC679B4
	private bool <isConfirm>k__BackingField; // 0x20

	// Properties
	public int itemId { get; set; }
	public int num { get; set; }
	public bool isConfirm { get; set; }

	// Methods

	// RVA: 0x1736978 Offset: 0x1736978 VA: 0x1736978
	public void .ctor(CoinRoomCoinIconObject iconObject, int num) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEB68 Offset: 0xCCEB68 VA: 0xCCEB68
	// RVA: 0x1736AA4 Offset: 0x1736AA4 VA: 0x1736AA4
	public int get_itemId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEB78 Offset: 0xCCEB78 VA: 0xCCEB78
	// RVA: 0x1736A94 Offset: 0x1736A94 VA: 0x1736A94
	public void set_itemId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEB88 Offset: 0xCCEB88 VA: 0xCCEB88
	// RVA: 0x1736AAC Offset: 0x1736AAC VA: 0x1736AAC
	public int get_num() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEB98 Offset: 0xCCEB98 VA: 0xCCEB98
	// RVA: 0x1736A9C Offset: 0x1736A9C VA: 0x1736A9C
	public void set_num(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEBA8 Offset: 0xCCEBA8 VA: 0xCCEBA8
	// RVA: 0x1736AB4 Offset: 0x1736AB4 VA: 0x1736AB4
	public bool get_isConfirm() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEBB8 Offset: 0xCCEBB8 VA: 0xCCEBB8
	// RVA: 0x1736ABC Offset: 0x1736ABC VA: 0x1736ABC
	public void set_isConfirm(bool value) { }
}

// Namespace: 
public class CoinRoomControlEffect : BaseMonoBehaviour // TypeDefIndex: 9445
{
	// Fields
	[SerializeField] // RVA: 0xC679F0 Offset: 0xC679F0 VA: 0xC679F0
	private ParticleSystem targetParticle; // 0x18
	[SerializeField] // RVA: 0xC67A00 Offset: 0xC67A00 VA: 0xC67A00
	private float coefficient; // 0x20
	private int startValue; // 0x24
	private int endValue; // 0x28
	private int devideValue; // 0x2C
	private float actionTime; // 0x30

	// Properties
	public float Coefficient { get; }

	// Methods

	// RVA: 0x1EA0674 Offset: 0x1EA0674 VA: 0x1EA0674
	public void .ctor() { }

	// RVA: 0x1EA068C Offset: 0x1EA068C VA: 0x1EA068C
	public float get_Coefficient() { }

	// RVA: 0x1EA0694 Offset: 0x1EA0694 VA: 0x1EA0694
	public void SetValue(int startValue, int endValue, int maxValue) { }

	// RVA: 0x1EA0740 Offset: 0x1EA0740 VA: 0x1EA0740
	public void KeyEventStartAddValue(float time) { }

	[DebuggerHiddenAttribute] // RVA: 0xCCEBC8 Offset: 0xCCEBC8 VA: 0xCCEBC8
	// RVA: 0x1EA0770 Offset: 0x1EA0770 VA: 0x1EA0770
	private IEnumerator AddValue() { }

	// RVA: 0x1EA0724 Offset: 0x1EA0724 VA: 0x1EA0724
	private float GetSize(int value) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44614 Offset: 0xC44614 VA: 0xC44614
private sealed class CoinRoomControlEffect.<AddValue>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9446
{
	// Fields
	internal float <startSize>__0; // 0x10
	internal float <endSize>__0; // 0x14
	internal float <actionAddValue>__0; // 0x18
	internal ParticleSystem.MainModule <mainModule>__0; // 0x20
	internal float <time>__0; // 0x28
	internal float <rate>__1; // 0x2C
	internal float <size>__1; // 0x30
	internal CoinRoomControlEffect $this; // 0x38
	internal object $current; // 0x40
	internal bool $disposing; // 0x48
	internal int $PC; // 0x4C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDBF40 Offset: 0xCDBF40 VA: 0xCDBF40
	// RVA: 0x1EA07E0 Offset: 0x1EA07E0 VA: 0x1EA07E0
	public void .ctor() { }

	// RVA: 0x1EA07E8 Offset: 0x1EA07E8 VA: 0x1EA07E8 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBF50 Offset: 0xCDBF50 VA: 0xCDBF50
	// RVA: 0x1EA0A1C Offset: 0x1EA0A1C VA: 0x1EA0A1C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBF60 Offset: 0xCDBF60 VA: 0xCDBF60
	// RVA: 0x1EA0A24 Offset: 0x1EA0A24 VA: 0x1EA0A24 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBF70 Offset: 0xCDBF70 VA: 0xCDBF70
	// RVA: 0x1EA0A2C Offset: 0x1EA0A2C VA: 0x1EA0A2C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBF80 Offset: 0xCDBF80 VA: 0xCDBF80
	// RVA: 0x1EA0A40 Offset: 0x1EA0A40 VA: 0x1EA0A40 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class CoinRoomEffectComponent : BaseMonoBehaviour // TypeDefIndex: 9447
{
	// Fields
	[SerializeField] // RVA: 0xC67A10 Offset: 0xC67A10 VA: 0xC67A10
	protected GameObject titleInfoObject; // 0x18
	[SerializeField] // RVA: 0xC67A20 Offset: 0xC67A20 VA: 0xC67A20
	protected GameObject lobbyPanel; // 0x20
	[SerializeField] // RVA: 0xC67A30 Offset: 0xC67A30 VA: 0xC67A30
	protected GameObject coinListPanel; // 0x28
	[SerializeField] // RVA: 0xC67A40 Offset: 0xC67A40 VA: 0xC67A40
	protected GameObject effectCircleObject; // 0x30
	[SerializeField] // RVA: 0xC67A50 Offset: 0xC67A50 VA: 0xC67A50
	protected GameObject coinPartObject; // 0x38
	[SerializeField] // RVA: 0xC67A60 Offset: 0xC67A60 VA: 0xC67A60
	protected GameObject energyPartLoopObject; // 0x40
	[SerializeField] // RVA: 0xC67A70 Offset: 0xC67A70 VA: 0xC67A70
	protected GameObject acquiredEffect; // 0x48
	[SerializeField] // RVA: 0xC67A80 Offset: 0xC67A80 VA: 0xC67A80
	protected GameObject gaugeObject; // 0x50
	[SerializeField] // RVA: 0xC67A90 Offset: 0xC67A90 VA: 0xC67A90
	protected UISlider gaugeSlider; // 0x58
	[SerializeField] // RVA: 0xC67AA0 Offset: 0xC67AA0 VA: 0xC67AA0
	private string arrivedPlaySeName; // 0x60
	[SerializeField] // RVA: 0xC67AB0 Offset: 0xC67AB0 VA: 0xC67AB0
	private float arrivedPlaySeIntervalTime; // 0x68
	[SerializeField] // RVA: 0xC67AC0 Offset: 0xC67AC0 VA: 0xC67AC0
	private int energyPartLoopRateOverTimeMax; // 0x6C
	private UserCoinRoomEntity beforeEntity; // 0x70
	private UserCoinRoomEntity afterEntity; // 0x78
	private bool isAcquired; // 0x80
	private int TARGET_ITEM_ID; // 0x84
	private Dictionary<int, SelectedUserSvtCoin> selectedCoinDic; // 0x88
	private SimpleAnimation circleAnimation; // 0x90
	private string stateName; // 0x98
	private Action endCallBack; // 0xA0
	private bool isEffectEnd; // 0xA8
	protected CoinRoomEffectComponent.State state; // 0xAC
	[CompilerGeneratedAttribute] // RVA: 0xC67AD0 Offset: 0xC67AD0 VA: 0xC67AD0
	private static Func<KeyValuePair<int, SelectedUserSvtCoin>, int> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1303640 Offset: 0x1303640 VA: 0x1303640
	public void .ctor() { }

	// RVA: 0x1303704 Offset: 0x1303704 VA: 0x1303704
	private void Update() { }

	// RVA: 0x1303970 Offset: 0x1303970 VA: 0x1303970
	public void OpenEffect(UserCoinRoomEntity beforeUserCoinRoomEntity, Dictionary<int, SelectedUserSvtCoin> selectedCoinDic) { }

	// RVA: 0x1303AE0 Offset: 0x1303AE0 VA: 0x1303AE0
	private void StartPutInAnimation() { }

	// RVA: 0x1303EBC Offset: 0x1303EBC VA: 0x1303EBC
	private ParticleSystem.EmissionModule GetEmissionModule(GameObject targetObject) { }

	// RVA: 0x1303FC4 Offset: 0x1303FC4 VA: 0x1303FC4
	public void NextAcquiredEffect() { }

	[DebuggerHiddenAttribute] // RVA: 0xCCEBD8 Offset: 0xCCEBD8 VA: 0xCCEBD8
	// RVA: 0x1303F30 Offset: 0x1303F30 VA: 0x1303F30
	private IEnumerator PlayCoinArrivedSE(int totalCount) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEBE8 Offset: 0xCCEBE8 VA: 0xCCEBE8
	// RVA: 0x130416C Offset: 0x130416C VA: 0x130416C
	private void <Update>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEBF8 Offset: 0xCCEBF8 VA: 0xCCEBF8
	// RVA: 0x1304238 Offset: 0x1304238 VA: 0x1304238
	private static int <StartPutInAnimation>m__1(KeyValuePair<int, SelectedUserSvtCoin> x) { }
}

// Namespace: 
protected enum CoinRoomEffectComponent.State // TypeDefIndex: 9448
{
	// Fields
	public int value__; // 0x0
	public const CoinRoomEffectComponent.State INIT = 0;
	public const CoinRoomEffectComponent.State EFFECT = 1;
	public const CoinRoomEffectComponent.State CLOSE = 2;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44624 Offset: 0xC44624 VA: 0xC44624
private sealed class CoinRoomEffectComponent.<NextAcquiredEffect>c__AnonStorey1 // TypeDefIndex: 9449
{
	// Fields
	internal QuestRewardInfo questRewardInfo; // 0x10
	internal CoinRoomEffectComponent $this; // 0x18
	private static Action <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x130415C Offset: 0x130415C VA: 0x130415C
	public void .ctor() { }

	// RVA: 0x13042AC Offset: 0x13042AC VA: 0x13042AC
	internal void <>m__0() { }

	// RVA: 0x13043FC Offset: 0x13043FC VA: 0x13043FC
	private static void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44634 Offset: 0xC44634 VA: 0xC44634
private sealed class CoinRoomEffectComponent.<PlayCoinArrivedSE>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9450
{
	// Fields
	internal ParticleSystem <particle>__0; // 0x10
	internal float <lifeTime>__0; // 0x18
	internal float <duration>__0; // 0x1C
	internal int totalCount; // 0x20
	internal float <playIntervalTime>__0; // 0x24
	internal bool <isGaugeAnimation>__0; // 0x28
	internal CoinRoomGaugeEffectComponent <gaugeEffectComponent>__0; // 0x30
	internal float <totalTime>__0; // 0x38
	internal float <time>__0; // 0x3C
	internal int <playCount>__0; // 0x40
	internal CoinRoomEffectComponent $this; // 0x48
	internal object $current; // 0x50
	internal bool $disposing; // 0x58
	internal int $PC; // 0x5C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDBF90 Offset: 0xCDBF90 VA: 0xCDBF90
	// RVA: 0x1304164 Offset: 0x1304164 VA: 0x1304164
	public void .ctor() { }

	// RVA: 0x13044EC Offset: 0x13044EC VA: 0x13044EC Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBFA0 Offset: 0xCDBFA0 VA: 0xCDBFA0
	// RVA: 0x1304C5C Offset: 0x1304C5C VA: 0x1304C5C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBFB0 Offset: 0xCDBFB0 VA: 0xCDBFB0
	// RVA: 0x1304C64 Offset: 0x1304C64 VA: 0x1304C64 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBFC0 Offset: 0xCDBFC0 VA: 0xCDBFC0
	// RVA: 0x1304C6C Offset: 0x1304C6C VA: 0x1304C6C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBFD0 Offset: 0xCDBFD0 VA: 0xCDBFD0
	// RVA: 0x1304C80 Offset: 0x1304C80 VA: 0x1304C80 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class CoinRoomGaugeEffectComponent : MonoBehaviour // TypeDefIndex: 9451
{
	// Fields
	[SerializeField] // RVA: 0xC67AE0 Offset: 0xC67AE0 VA: 0xC67AE0
	private float gaugeAnimationTime; // 0x18
	[SerializeField] // RVA: 0xC67AF0 Offset: 0xC67AF0 VA: 0xC67AF0
	private float gaugeAnimationDelayTime; // 0x1C
	[SerializeField] // RVA: 0xC67B00 Offset: 0xC67B00 VA: 0xC67B00
	protected UISlider gaugeBarSlider; // 0x20
	protected CoinRoomGaugeEffectComponent.State state; // 0x28

	// Methods

	// RVA: 0x1304CE8 Offset: 0x1304CE8 VA: 0x1304CE8
	public void .ctor() { }

	// RVA: 0x13048BC Offset: 0x13048BC VA: 0x13048BC
	public void StartAnimation(int beforePoint, int afterPoint) { }

	// RVA: 0x1304CF0 Offset: 0x1304CF0 VA: 0x1304CF0
	private void UpdateGauge(float alpha) { }

	// RVA: 0x1304D4C Offset: 0x1304D4C VA: 0x1304D4C
	private void FinishGauge() { }
}

// Namespace: 
protected enum CoinRoomGaugeEffectComponent.State // TypeDefIndex: 9452
{
	// Fields
	public int value__; // 0x0
	public const CoinRoomGaugeEffectComponent.State INIT = 0;
	public const CoinRoomGaugeEffectComponent.State PLAY = 1;
	public const CoinRoomGaugeEffectComponent.State END = 2;
}

// Namespace: 
public class CoinRoomLobbyComponent : BaseMonoBehaviour // TypeDefIndex: 9453
{
	// Fields
	[SerializeField] // RVA: 0xC67B10 Offset: 0xC67B10 VA: 0xC67B10
	protected CoinRoomSelectCoinComponent coinRoomSelectCoinComponent; // 0x18
	[SerializeField] // RVA: 0xC67B20 Offset: 0xC67B20 VA: 0xC67B20
	protected TitleInfoControl titleInfoControl; // 0x20
	[SerializeField] // RVA: 0xC67B30 Offset: 0xC67B30 VA: 0xC67B30
	protected GameObject coinListPanel; // 0x28
	[SerializeField] // RVA: 0xC67B40 Offset: 0xC67B40 VA: 0xC67B40
	protected GameObject effectCircleObject; // 0x30
	[SerializeField] // RVA: 0xC67B50 Offset: 0xC67B50 VA: 0xC67B50
	protected GameObject gaugeBarObject; // 0x38
	[SerializeField] // RVA: 0xC67B60 Offset: 0xC67B60 VA: 0xC67B60
	protected GameObject energyPartLoopObject; // 0x40
	[SerializeField] // RVA: 0xC67B70 Offset: 0xC67B70 VA: 0xC67B70
	protected UILabel lobbyInfoLabel; // 0x48
	[SerializeField] // RVA: 0xC67B80 Offset: 0xC67B80 VA: 0xC67B80
	protected UILabel lobbyTimeLabel; // 0x50
	[SerializeField] // RVA: 0xC67B90 Offset: 0xC67B90 VA: 0xC67B90
	protected BoxCollider maskCollider; // 0x58
	[SerializeField] // RVA: 0xC67BA0 Offset: 0xC67BA0 VA: 0xC67BA0
	protected UICommonButton selectCoinButton; // 0x60

	// Methods

	// RVA: 0x1304D64 Offset: 0x1304D64 VA: 0x1304D64
	public void .ctor() { }

	// RVA: 0x1304D6C Offset: 0x1304D6C VA: 0x1304D6C
	public void OpenLobby(PlayMakerFSM myFSM) { }

	// RVA: 0x13053D4 Offset: 0x13053D4 VA: 0x13053D4
	public void EndLoadAsset(AssetData assetData) { }

	// RVA: 0x130563C Offset: 0x130563C VA: 0x130563C
	public void OnClickBack() { }

	// RVA: 0x13057F0 Offset: 0x13057F0 VA: 0x13057F0
	public void OnClickHelp() { }

	// RVA: 0x13052B0 Offset: 0x13052B0 VA: 0x13052B0
	private string SetTimeLabel() { }

	// RVA: 0x1305990 Offset: 0x1305990 VA: 0x1305990
	public void OnClickSelectCoin() { }

	// RVA: 0x1305BEC Offset: 0x1305BEC VA: 0x1305BEC
	private void SetSpriteAtlas(GameObject gameObject, List<UIAtlas> atlasList, string name) { }

	// RVA: 0x13057B8 Offset: 0x13057B8 VA: 0x13057B8
	public void SetMaskCollider(bool flag) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEC08 Offset: 0xCCEC08 VA: 0xCCEC08
	// RVA: 0x1305D94 Offset: 0x1305D94 VA: 0x1305D94
	private void <OnClickBack>m__0() { }
}

// Namespace: 
public class CoinRoomRootComponent : SceneRootComponent // TypeDefIndex: 9454
{
	// Fields
	private AssetData assetData; // 0x38
	private bool isAssetLoaded; // 0x40
	protected CoinRoomRootComponent.State state; // 0x44

	// Methods

	// RVA: 0x1306508 Offset: 0x1306508 VA: 0x1306508
	public void .ctor() { }

	// RVA: 0x1306510 Offset: 0x1306510 VA: 0x1306510 Slot: 4
	public override void beginInitialize() { }

	// RVA: 0x1306694 Offset: 0x1306694 VA: 0x1306694 Slot: 5
	public override void beginStartUp(object data) { }

	// RVA: 0x13066D8 Offset: 0x13066D8 VA: 0x13066D8
	public void EndLoadAsset(AssetData assetData) { }

	[DebuggerHiddenAttribute] // RVA: 0xCCEC18 Offset: 0xCCEC18 VA: 0xCCEC18
	// RVA: 0x130678C Offset: 0x130678C VA: 0x130678C
	private IEnumerator InitUI() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEC28 Offset: 0xCCEC28 VA: 0xCCEC28
	[DebuggerHiddenAttribute] // RVA: 0xCCEC28 Offset: 0xCCEC28 VA: 0xCCEC28
	// RVA: 0x1306804 Offset: 0x1306804 VA: 0x1306804
	private void <beginInitialize>__BaseCallProxy0() { }
}

// Namespace: 
protected enum CoinRoomRootComponent.State // TypeDefIndex: 9455
{
	// Fields
	public int value__; // 0x0
	public const CoinRoomRootComponent.State INIT = 0;
	public const CoinRoomRootComponent.State SELECT_COIN = 1;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44644 Offset: 0xC44644 VA: 0xC44644
private sealed class CoinRoomRootComponent.<InitUI>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9456
{
	// Fields
	internal GameObject <uiRootPrefab>__0; // 0x10
	internal GameObject <createRoot>__0; // 0x18
	internal GameObject <lobbyObject>__0; // 0x20
	internal CoinRoomLobbyComponent <coinRoomLobbyComponent>__0; // 0x28
	internal CoinRoomRootComponent $this; // 0x30
	internal object $current; // 0x38
	internal bool $disposing; // 0x40
	internal int $PC; // 0x44
	private static Func<GameObject, bool> <>f__am$cache0; // 0x0

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDBFE0 Offset: 0xCDBFE0 VA: 0xCDBFE0
	// RVA: 0x13067FC Offset: 0x13067FC VA: 0x13067FC
	public void .ctor() { }

	// RVA: 0x130680C Offset: 0x130680C VA: 0x130680C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBFF0 Offset: 0xCDBFF0 VA: 0xCDBFF0
	// RVA: 0x1306AAC Offset: 0x1306AAC VA: 0x1306AAC Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC000 Offset: 0xCDC000 VA: 0xCDC000
	// RVA: 0x1306AB4 Offset: 0x1306AB4 VA: 0x1306AB4 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC010 Offset: 0xCDC010 VA: 0xCDC010
	// RVA: 0x1306ABC Offset: 0x1306ABC VA: 0x1306ABC Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC020 Offset: 0xCDC020 VA: 0xCDC020
	// RVA: 0x1306AD0 Offset: 0x1306AD0 VA: 0x1306AD0 Slot: 6
	public void Reset() { }

	// RVA: 0x1306B38 Offset: 0x1306B38 VA: 0x1306B38
	private static bool <>m__0(GameObject x) { }
}

// Namespace: 
public class CoinRoomSelectCoinComponent : BaseMenu // TypeDefIndex: 9457
{
	// Fields
	[SerializeField] // RVA: 0xC67BB0 Offset: 0xC67BB0 VA: 0xC67BB0
	protected CoinRoomCoinListViewManager coinListViewManager; // 0x58
	[SerializeField] // RVA: 0xC67BC0 Offset: 0xC67BC0 VA: 0xC67BC0
	protected CoinRoomEffectComponent coinRoomEffectComponent; // 0x60
	[SerializeField] // RVA: 0xC67BD0 Offset: 0xC67BD0 VA: 0xC67BD0
	protected CoinConfirmDialog confirmDialog; // 0x68
	[SerializeField] // RVA: 0xC67BE0 Offset: 0xC67BE0 VA: 0xC67BE0
	protected CoinConfirmSliderDialog confirmSliderDialog; // 0x70
	[SerializeField] // RVA: 0xC67BF0 Offset: 0xC67BF0 VA: 0xC67BF0
	protected GameObject coinListPanel; // 0x78
	[SerializeField] // RVA: 0xC67C00 Offset: 0xC67C00 VA: 0xC67C00
	protected UILabel subTitle; // 0x80
	private UserCoinRoomEntity beforeUserCoinRoomEntity; // 0x88
	protected CoinRoomSelectCoinComponent.State state; // 0x90

	// Methods

	// RVA: 0x1306BCC Offset: 0x1306BCC VA: 0x1306BCC
	public void .ctor() { }

	// RVA: 0x1305E00 Offset: 0x1305E00 VA: 0x1305E00
	public void Init() { }

	// RVA: 0x1305A40 Offset: 0x1305A40 VA: 0x1305A40
	public void OpenSelectCoinList() { }

	// RVA: 0x1306C34 Offset: 0x1306C34 VA: 0x1306C34
	protected void EndOpen() { }

	// RVA: 0x1306C70 Offset: 0x1306C70 VA: 0x1306C70
	public void OnClickDecide() { }

	// RVA: 0x1306F88 Offset: 0x1306F88 VA: 0x1306F88
	private void RequestCoinRoomPut() { }

	// RVA: 0x130716C Offset: 0x130716C VA: 0x130716C
	private void EndRequest(string result) { }

	// RVA: 0x13072F8 Offset: 0x13072F8 VA: 0x13072F8
	public void Close() { }

	// RVA: 0x13072F4 Offset: 0x13072F4 VA: 0x13072F4
	private void RequestNG() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEC60 Offset: 0xCCEC60 VA: 0xCCEC60
	// RVA: 0x13072FC Offset: 0x13072FC VA: 0x13072FC
	private void <OnClickDecide>m__0() { }
}

// Namespace: 
protected enum CoinRoomSelectCoinComponent.State // TypeDefIndex: 9458
{
	// Fields
	public int value__; // 0x0
	public const CoinRoomSelectCoinComponent.State INIT = 0;
	public const CoinRoomSelectCoinComponent.State OPEN = 1;
	public const CoinRoomSelectCoinComponent.State INPUT = 2;
	public const CoinRoomSelectCoinComponent.State CLOSE = 3;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44654 Offset: 0xC44654 VA: 0xC44654
private sealed class CoinRoomSelectCoinComponent.<EndRequest>c__AnonStorey0 // TypeDefIndex: 9459
{
	// Fields
	internal Dictionary<int, SelectedUserSvtCoin> selectedValue; // 0x10
	internal CoinRoomSelectCoinComponent $this; // 0x18

	// Methods

	// RVA: 0x13072EC Offset: 0x13072EC VA: 0x13072EC
	public void .ctor() { }

	// RVA: 0x13073B4 Offset: 0x13073B4 VA: 0x13073B4
	internal void <>m__0() { }
}

// Namespace: 
public class CoinRoomSortSelectManager : BaseDialog // TypeDefIndex: 9460
{
	// Fields
	[SerializeField] // RVA: 0xC67C10 Offset: 0xC67C10 VA: 0xC67C10
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC67C20 Offset: 0xC67C20 VA: 0xC67C20
	private UILabel title2Label; // 0x60
	[SerializeField] // RVA: 0xC67C30 Offset: 0xC67C30 VA: 0xC67C30
	private UILabel explanationLabel; // 0x68
	[SerializeField] // RVA: 0xC67C40 Offset: 0xC67C40 VA: 0xC67C40
	private UILabel explanationLabel2; // 0x70
	[SerializeField] // RVA: 0xC67C50 Offset: 0xC67C50 VA: 0xC67C50
	private UICommonButton decideButton; // 0x78
	[SerializeField] // RVA: 0xC67C60 Offset: 0xC67C60 VA: 0xC67C60
	private UILabel decideLabel; // 0x80
	[SerializeField] // RVA: 0xC67C70 Offset: 0xC67C70 VA: 0xC67C70
	private UICommonButton cancelButton; // 0x88
	[SerializeField] // RVA: 0xC67C80 Offset: 0xC67C80 VA: 0xC67C80
	private UILabel cancelLabel; // 0x90
	[SerializeField] // RVA: 0xC67C90 Offset: 0xC67C90 VA: 0xC67C90
	private UICommonButton sortDecideButton; // 0x98
	[SerializeField] // RVA: 0xC67CA0 Offset: 0xC67CA0 VA: 0xC67CA0
	private UILabel sortDecideLabel; // 0xA0
	[SerializeField] // RVA: 0xC67CB0 Offset: 0xC67CB0 VA: 0xC67CB0
	private UICommonButton sortCancelButton; // 0xA8
	[SerializeField] // RVA: 0xC67CC0 Offset: 0xC67CC0 VA: 0xC67CC0
	private UILabel sortCancelLabel; // 0xB0
	[SerializeField] // RVA: 0xC67CD0 Offset: 0xC67CD0 VA: 0xC67CD0
	private UICommonButton clearButton; // 0xB8
	[SerializeField] // RVA: 0xC67CE0 Offset: 0xC67CE0 VA: 0xC67CE0
	private UILabel clearLabel; // 0xC0
	[SerializeField] // RVA: 0xC67CF0 Offset: 0xC67CF0 VA: 0xC67CF0
	private UICommonButton resetButton; // 0xC8
	[SerializeField] // RVA: 0xC67D00 Offset: 0xC67D00 VA: 0xC67D00
	private UILabel resetLabel; // 0xD0
	[SerializeField] // RVA: 0xC67D10 Offset: 0xC67D10 VA: 0xC67D10
	private GameObject servantSortRoot; // 0xD8
	[SerializeField] // RVA: 0xC67D20 Offset: 0xC67D20 VA: 0xC67D20
	private UICommonButton[] sortButton; // 0xE0
	[SerializeField] // RVA: 0xC67D30 Offset: 0xC67D30 VA: 0xC67D30
	private UILabel[] sortLabel; // 0xE8
	[SerializeField] // RVA: 0xC67D40 Offset: 0xC67D40 VA: 0xC67D40
	private GameObject servantFilterRoot; // 0xF0
	[SerializeField] // RVA: 0xC67D50 Offset: 0xC67D50 VA: 0xC67D50
	private List<ServantFilterCategoryContainer> servantFilterCategoryContainerList; // 0xF8
	[SerializeField] // RVA: 0xC67D60 Offset: 0xC67D60 VA: 0xC67D60
	private List<ServantFilterButtonControl> filterButtonList; // 0x100
	[SerializeField] // RVA: 0xC67D70 Offset: 0xC67D70 VA: 0xC67D70
	private GameObject smartSortObject; // 0x108
	[SerializeField] // RVA: 0xC67D80 Offset: 0xC67D80 VA: 0xC67D80
	private UILabel smartSortLabel; // 0x110
	[SerializeField] // RVA: 0xC67D90 Offset: 0xC67D90 VA: 0xC67D90
	private UILabel smartSortDetail_1; // 0x118
	[SerializeField] // RVA: 0xC67DA0 Offset: 0xC67DA0 VA: 0xC67DA0
	private UILabel smartSortDetail_2; // 0x120
	[SerializeField] // RVA: 0xC67DB0 Offset: 0xC67DB0 VA: 0xC67DB0
	private UISprite smartSortBtnSprite; // 0x128
	[SerializeField] // RVA: 0xC67DC0 Offset: 0xC67DC0 VA: 0xC67DC0
	private UICommonButton helpButton; // 0x130
	protected const int filterCollectionBtnsSpace = 10;
	protected CoinRoomSortSelectManager.Kind kind; // 0x138
	protected CoinRoomSortSelectManager.State state; // 0x13C
	[CompilerGeneratedAttribute] // RVA: 0xC67DD0 Offset: 0xC67DD0 VA: 0xC67DD0
	[DebuggerBrowsableAttribute] // RVA: 0xC67DD0 Offset: 0xC67DD0 VA: 0xC67DD0
	private CoinRoomSortSelectManager.CallbackFunc callbackFunc; // 0x140
	protected Action closeCallbackFunc; // 0x148
	protected ListViewSort baseSortInfo; // 0x150
	protected ListViewSort operationSortInfo; // 0x158
	protected List<ListViewSort.FilterKind> useFilterKindList; // 0x160
	protected List<ServantFilterButtonControl> useFilterButtonList; // 0x168

	// Methods

	// RVA: 0x13074B0 Offset: 0x13074B0 VA: 0x13074B0
	public void .ctor() { }

	// RVA: 0x1307568 Offset: 0x1307568 VA: 0x1307568
	protected void add_callbackFunc(CoinRoomSortSelectManager.CallbackFunc value) { }

	// RVA: 0x1307658 Offset: 0x1307658 VA: 0x1307658
	protected void remove_callbackFunc(CoinRoomSortSelectManager.CallbackFunc value) { }

	// RVA: 0x1307748 Offset: 0x1307748 VA: 0x1307748
	public void Init() { }

	// RVA: 0x1307754 Offset: 0x1307754 VA: 0x1307754
	public void Open(CoinRoomSortSelectManager.Kind kind, ListViewSort sort, CoinRoomSortSelectManager.CallbackFunc callback) { }

	// RVA: 0x1308800 Offset: 0x1308800 VA: 0x1308800
	protected void EndOpen() { }

	// RVA: 0x130880C Offset: 0x130880C VA: 0x130880C
	public void Close() { }

	// RVA: 0x1308814 Offset: 0x1308814 VA: 0x1308814
	public void Close(Action callback) { }

	// RVA: 0x13088A4 Offset: 0x13088A4 VA: 0x13088A4
	protected void EndClose() { }

	// RVA: 0x13088E8 Offset: 0x13088E8 VA: 0x13088E8
	protected void Callback(bool result) { }

	// RVA: 0x1307D80 Offset: 0x1307D80 VA: 0x1307D80
	private void SetupUseFilterKindList() { }

	// RVA: 0x1308B34 Offset: 0x1308B34 VA: 0x1308B34
	private void InitCategoryContainer(ListViewSort.FilterCategoryKind[] categoryKindKist) { }

	// RVA: 0x1307E34 Offset: 0x1307E34 VA: 0x1307E34
	private void SetupFilterButtons(ListViewSort sort) { }

	// RVA: 0x130851C Offset: 0x130851C VA: 0x130851C
	protected void SetButtenEnable(bool isEnable) { }

	// RVA: 0x130806C Offset: 0x130806C VA: 0x130806C
	protected void SetupButtonLayout(CoinRoomSortSelectManager.Kind kind) { }

	// RVA: 0x1308198 Offset: 0x1308198 VA: 0x1308198
	protected void SetButtenSelect() { }

	// RVA: 0x1308EC8 Offset: 0x1308EC8 VA: 0x1308EC8
	public void OnClickDecide() { }

	// RVA: 0x1308FAC Offset: 0x1308FAC VA: 0x1308FAC
	public void OnClickCancel() { }

	// RVA: 0x130904C Offset: 0x130904C VA: 0x130904C
	public void OnClickClear() { }

	// RVA: 0x1309128 Offset: 0x1309128 VA: 0x1309128
	public void OnClickReset() { }

	// RVA: 0x1309204 Offset: 0x1309204 VA: 0x1309204
	public void OnClickSortId() { }

	// RVA: 0x13092AC Offset: 0x13092AC VA: 0x13092AC
	public void OnClickSortRarity() { }

	// RVA: 0x1309354 Offset: 0x1309354 VA: 0x1309354
	public void OnClickSortAmount() { }

	// RVA: 0x13093FC Offset: 0x13093FC VA: 0x13093FC
	public void OnClickSortServantName() { }

	// RVA: 0x13094A4 Offset: 0x13094A4 VA: 0x13094A4
	public void OnClickSmartSort() { }

	// RVA: 0x13095D8 Offset: 0x13095D8 VA: 0x13095D8
	public void OnClickFilterButton(ListViewSort.FilterKind filterKind) { }

	// RVA: 0x1309690 Offset: 0x1309690 VA: 0x1309690
	public void OnClickHelp() { }

	// RVA: 0x1309788 Offset: 0x1309788 VA: 0x1309788
	private void OnClickHelpClose() { }

	// RVA: 0x13097D4 Offset: 0x13097D4 VA: 0x13097D4
	public void OnEnable() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEC70 Offset: 0xCCEC70 VA: 0xCCEC70
	// RVA: 0x13098D8 Offset: 0x13098D8 VA: 0x13098D8
	private bool <SetupFilterButtons>m__0(ServantFilterButtonControl x) { }
}

// Namespace: 
public enum CoinRoomSortSelectManager.Kind // TypeDefIndex: 9461
{
	// Fields
	public int value__; // 0x0
	public const CoinRoomSortSelectManager.Kind COIN_ROOM_SORT = 0;
	public const CoinRoomSortSelectManager.Kind COIN_ROOM_FILTER = 1;
}

// Namespace: 
protected enum CoinRoomSortSelectManager.State // TypeDefIndex: 9462
{
	// Fields
	public int value__; // 0x0
	public const CoinRoomSortSelectManager.State INIT = 0;
	public const CoinRoomSortSelectManager.State OPEN = 1;
	public const CoinRoomSortSelectManager.State INPUT = 2;
	public const CoinRoomSortSelectManager.State SELECTED = 3;
	public const CoinRoomSortSelectManager.State CLOSE = 4;
}

// Namespace: 
public sealed class CoinRoomSortSelectManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 9463
{
	// Methods

	// RVA: 0x13099A8 Offset: 0x13099A8 VA: 0x13099A8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1308908 Offset: 0x1308908 VA: 0x1308908 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x13099B8 Offset: 0x13099B8 VA: 0x13099B8 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x1309A48 Offset: 0x1309A48 VA: 0x1309A48 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44664 Offset: 0xC44664 VA: 0xC44664
private sealed class CoinRoomSortSelectManager.<InitCategoryContainer>c__AnonStorey0 // TypeDefIndex: 9464
{
	// Fields
	internal ListViewSort.FilterCategoryKind kind; // 0x10

	// Methods

	// RVA: 0x1308EC0 Offset: 0x1308EC0 VA: 0x1308EC0
	public void .ctor() { }

	// RVA: 0x1309964 Offset: 0x1309964 VA: 0x1309964
	internal bool <>m__0(ServantFilterCategoryContainer x) { }
}

// Namespace: 
public static class CoinRoomUtility // TypeDefIndex: 9465
{
	// Fields
	public static readonly string ASSET_NAME; // 0x0
	public static readonly float EFFECT_FADE_TIME; // 0x8
	public static readonly DateTime UnixEpoch; // 0x10

	// Methods

	// RVA: 0x1305244 Offset: 0x1305244 VA: 0x1305244
	public static int MonthRemainingNum() { }

	// RVA: 0x1309B08 Offset: 0x1309B08 VA: 0x1309B08
	public static int CalcPoint() { }

	// RVA: 0x1303E70 Offset: 0x1303E70 VA: 0x1303E70
	public static int MaxPoint() { }

	// RVA: 0x1309ABC Offset: 0x1309ABC VA: 0x1309ABC
	public static int MonthExchangeMaxNum() { }

	// RVA: 0x13070AC Offset: 0x13070AC VA: 0x13070AC
	public static UserCoinRoomEntity GetUserCoinRoomEntity() { }

	// RVA: 0x1309B54 Offset: 0x1309B54 VA: 0x1309B54
	public static List<DataEntityBase> GetUserSvtCoins() { }

	// RVA: 0x13051B8 Offset: 0x13051B8 VA: 0x13051B8
	public static int MonthExchangePoint() { }

	// RVA: 0x1309A54 Offset: 0x1309A54 VA: 0x1309A54
	public static int MonthExchangeNum() { }

	// RVA: 0x1309DB4 Offset: 0x1309DB4 VA: 0x1309DB4
	public static bool IsTargetQuestClear() { }

	// RVA: 0x1305464 Offset: 0x1305464 VA: 0x1305464
	public static List<UIAtlas> GetDownloadAtlas(AssetData assetData, string name) { }

	// RVA: 0x1305868 Offset: 0x1305868 VA: 0x1305868
	public static long NextMonthUnixTime() { }

	// RVA: 0x1309EA0 Offset: 0x1309EA0 VA: 0x1309EA0
	private static void .cctor() { }
}

// Namespace: 
public class AppendSkillCombineControl : CombineMenuControl // TypeDefIndex: 9466
{
	// Fields
	[SerializeField] // RVA: 0xC67E0C Offset: 0xC67E0C VA: 0xC67E0C
	private UIAtlas baseAtlas; // 0x68
	[SerializeField] // RVA: 0xC67E1C Offset: 0xC67E1C VA: 0xC67E1C
	private UILabel preSelectBaseLb; // 0x70
	[SerializeField] // RVA: 0xC67E2C Offset: 0xC67E2C VA: 0xC67E2C
	private GameObject baseSelectInfoLb; // 0x78
	[SerializeField] // RVA: 0xC67E3C Offset: 0xC67E3C VA: 0xC67E3C
	private UILabel selectSkillHelpLb; // 0x80
	[SerializeField] // RVA: 0xC67E4C Offset: 0xC67E4C VA: 0xC67E4C
	private UILabel detailInfoLb; // 0x88
	[SerializeField] // RVA: 0xC67E5C Offset: 0xC67E5C VA: 0xC67E5C
	private UISprite combineBtnBg; // 0x90
	[SerializeField] // RVA: 0xC67E6C Offset: 0xC67E6C VA: 0xC67E6C
	private UISprite combineTxtImg; // 0x98
	[SerializeField] // RVA: 0xC67E7C Offset: 0xC67E7C VA: 0xC67E7C
	private UISprite titleImg; // 0xA0
	[SerializeField] // RVA: 0xC67E8C Offset: 0xC67E8C VA: 0xC67E8C
	private UISprite itemTitleImg; // 0xA8
	[SerializeField] // RVA: 0xC67E9C Offset: 0xC67E9C VA: 0xC67E9C
	private GameObject combineQpInfo; // 0xB0
	[SerializeField] // RVA: 0xC67EAC Offset: 0xC67EAC VA: 0xC67EAC
	private UILabel spendQpLabel; // 0xB8
	[SerializeField] // RVA: 0xC67EBC Offset: 0xC67EBC VA: 0xC67EBC
	private UILabel haveQpLabel; // 0xC0
	[SerializeField] // RVA: 0xC67ECC Offset: 0xC67ECC VA: 0xC67ECC
	private List<LimitCntUpItemComponent> itemInfoList; // 0xC8
	[SerializeField] // RVA: 0xC67EDC Offset: 0xC67EDC VA: 0xC67EDC
	private List<ServantSkillInfoIconComponent> skillInfoList; // 0xD0
	[SerializeField] // RVA: 0xC67EEC Offset: 0xC67EEC VA: 0xC67EEC
	private GameObject effect; // 0xD8
	private long userId; // 0xE0
	private int userQp; // 0xE8
	private SvtUseSkillData skillData; // 0xF0
	private SetLevelUpData lvUpData; // 0xF8
	private List<ServantSkillInfoIconComponent> targetList; // 0x100
	private UICharaGraphTexture charaGraph; // 0x108
	private int[] useSkillIdList; // 0x110
	private int currentIdx; // 0x118
	private AppendSkillCombineControl.STATUS nowStatus; // 0x11C

	// Methods

	// RVA: 0x107B434 Offset: 0x107B434 VA: 0x107B434
	public void .ctor() { }

	// RVA: 0x107B43C Offset: 0x107B43C VA: 0x107B43C Slot: 6
	protected override EventTutorialMaster.OpenType GetTutorialOpenType() { }

	// RVA: 0x107B444 Offset: 0x107B444 VA: 0x107B444
	public void InitSvtSkillCombine() { }

	// RVA: 0x107B6CC Offset: 0x107B6CC VA: 0x107B6CC
	private void InitDispCombineInfo() { }

	// RVA: 0x107BAC0 Offset: 0x107BAC0 VA: 0x107BAC0
	public void SetBaseSvtSkillInfo(UserServantEntity userSvtEnt, int idx = 0) { }

	// RVA: 0x107BBE4 Offset: 0x107BBE4 VA: 0x107BBE4
