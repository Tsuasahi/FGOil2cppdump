	[SerializeField] // RVA: 0xCE36A4 Offset: 0xCE36A4 VA: 0xCE36A4
	private GameObject priceInfo2; // 0xD0
	[SerializeField] // RVA: 0xCE36B4 Offset: 0xCE36B4 VA: 0xCE36B4
	private UILabel priceFreeDataLabel; // 0xD8
	[SerializeField] // RVA: 0xCE36C4 Offset: 0xCE36C4 VA: 0xCE36C4
	private UILabel priceDataLabel; // 0xE0
	[SerializeField] // RVA: 0xCE36D4 Offset: 0xCE36D4 VA: 0xCE36D4
	private UILabel[] priceDataLabels; // 0xE8
	[SerializeField] // RVA: 0xCE36E4 Offset: 0xCE36E4 VA: 0xCE36E4
	private UIIconLabel priceIconLabel; // 0xF0
	[SerializeField] // RVA: 0xCE36F4 Offset: 0xCE36F4 VA: 0xCE36F4
	private UIIconLabel[] priceIconLabels; // 0xF8
	[SerializeField] // RVA: 0xCE3704 Offset: 0xCE3704 VA: 0xCE3704
	private ItemIconComponent eventItemIcon; // 0x100
	[SerializeField] // RVA: 0xCE3714 Offset: 0xCE3714 VA: 0xCE3714
	private ItemIconComponent[] eventItemIcons; // 0x108
	[SerializeField] // RVA: 0xCE3724 Offset: 0xCE3724 VA: 0xCE3724
	private NoTitleDialog noTitleDialog; // 0x110
	[SerializeField] // RVA: 0xCE3734 Offset: 0xCE3734 VA: 0xCE3734
	private UILabel numTitleLabel; // 0x118
	[SerializeField] // RVA: 0xCE3744 Offset: 0xCE3744 VA: 0xCE3744
	private UILabel numTextLabel; // 0x120
	[SerializeField] // RVA: 0xCE3754 Offset: 0xCE3754 VA: 0xCE3754
	private UISprite deceideBtnSprite; // 0x128
	[SerializeField] // RVA: 0xCE3764 Offset: 0xCE3764 VA: 0xCE3764
	private UICommonButton infoButton; // 0x130
	[SerializeField] // RVA: 0xCE3774 Offset: 0xCE3774 VA: 0xCE3774
	private UILabel extensionInfoLabel; // 0x138
	[SerializeField] // RVA: 0xCE3784 Offset: 0xCE3784 VA: 0xCE3784
	private UISprite possessionSprite; // 0x140
	[SerializeField] // RVA: 0xCE3794 Offset: 0xCE3794 VA: 0xCE3794
	private UISprite chocolateSprite; // 0x148
	[SerializeField] // RVA: 0xCE37A4 Offset: 0xCE37A4 VA: 0xCE37A4
	private UILabel LineText; // 0x150
	[SerializeField] // RVA: 0xCE37B4 Offset: 0xCE37B4 VA: 0xCE37B4
	private UILabel LineText2digit; // 0x158
	private Vector3 freeLabelPos; // 0x160
	private Vector3 freeLabelPos2digit; // 0x16C
	private ShopBuyItemConfirmMenu.State state; // 0x178
	private Action<int> onDecide; // 0x180
	private Action onClose; // 0x188
	private Action onChecked; // 0x190
	private Action<int> onCloseReturnWarning; // 0x198
	private ShopEntity shopEntity; // 0x1A0
	private ShopBuyItemListViewManager.Kind shopKind; // 0x1A8
	private const int BuyDecide = 1;
	private const int BuyCancel = 0;

	// Properties
	private bool isAnotehrPayDisp { get; }
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1897F2C Offset: 0x1897F2C VA: 0x1897F2C
	public void .ctor() { }

	// RVA: 0x1898018 Offset: 0x1898018 VA: 0x1898018
	private bool get_isAnotehrPayDisp() { }

	// RVA: 0x18980AC Offset: 0x18980AC VA: 0x18980AC
	public void Init() { }

	// RVA: 0x189840C Offset: 0x189840C VA: 0x189840C
	public void Open(ShopEntity shopEntity, ShopBuyItemListViewManager.Kind shopKind, Action<int> onDecide, int buttonSpriteId = 0) { }

	// RVA: 0x189834C Offset: 0x189834C VA: 0x189834C
	private void SetLabelActive(UILabel label, bool isActive) { }

	// RVA: 0x189828C Offset: 0x189828C VA: 0x189828C
	private void SetLabelText(UILabel label, string text) { }

	// RVA: 0x1899E20 Offset: 0x1899E20 VA: 0x1899E20
	private void SetSpriteActive(UISprite sprite, bool isActive) { }

	// RVA: 0x18987F8 Offset: 0x18987F8 VA: 0x18987F8
	private void SetSpriteName(UISprite sprite, string spriteName) { }

	// RVA: 0x189AE9C Offset: 0x189AE9C VA: 0x189AE9C
	private void SetInfoButton(ShopEntity shopEntity, bool isInPreparation) { }

	// RVA: 0x189A93C Offset: 0x189A93C VA: 0x189A93C
	private void SetItemIcon(ShopEntity shopEntity, bool isInPreparation) { }

	// RVA: 0x189AC64 Offset: 0x189AC64 VA: 0x189AC64
	private void SetNameText(ShopEntity shopEntity, bool isInPreparation, string replacedName, string preparationItemName) { }

	// RVA: 0x189B030 Offset: 0x189B030 VA: 0x189B030
	private int[] GetUserItemCounts() { }

	// RVA: 0x189A03C Offset: 0x189A03C VA: 0x189A03C
	private bool GetIsBuyable(ShopEntity shopEntity, bool isInPreparation, UserGameEntity userGameEntity) { }

	// RVA: 0x189ADA4 Offset: 0x189ADA4 VA: 0x189ADA4
	private bool GetIsShowMask(ShopEntity shopEntity, bool isInPreparation) { }

	// RVA: 0x18988A0 Offset: 0x18988A0 VA: 0x18988A0
	private void SetMessageLabel(ShopEntity shopEntity, bool isInPreparation, string preparationMessage) { }

	// RVA: 0x1898A58 Offset: 0x1898A58 VA: 0x1898A58
	private void SetWarningLabel(ShopEntity shopEntity, bool isInPreparation, UserGameEntity userGameEntity) { }

	// RVA: 0x189A554 Offset: 0x189A554 VA: 0x189A554
	private void SetAheadText(ShopEntity shopEntity, bool isBuyable) { }

	// RVA: 0x18996C0 Offset: 0x18996C0 VA: 0x18996C0
	private void SetBandSprite(ShopEntity shopEntity) { }

	// RVA: 0x1899798 Offset: 0x1899798 VA: 0x1899798
	private void SetTextOnMask(ShopEntity shopEntity, bool isInPreparation) { }

	// RVA: 0x1899CE4 Offset: 0x1899CE4 VA: 0x1899CE4
	private void SetNumText(ShopEntity shopEntity, bool isInPreparation) { }

	// RVA: 0x1899EE0 Offset: 0x1899EE0 VA: 0x1899EE0
	private void SetExtensionText(ShopEntity shopEntity, bool isNotHavingShopItemReceived) { }

	// RVA: 0x1899FCC Offset: 0x1899FCC VA: 0x1899FCC
	private void SetPriceInfo(ShopEntity shopEntity, bool isInPreparation, int buttonSpriteId, bool isNotHavingShopItemReceived) { }

	// RVA: 0x189B620 Offset: 0x189B620 VA: 0x189B620
	private void SetPriceInfoActive(ShopEntity shopEntity, bool isNotHavingShopItemReceived) { }

	// RVA: 0x189B7CC Offset: 0x189B7CC VA: 0x189B7CC
	private void SetPriceDataText(ShopEntity shopEntity, bool isInPreparation, bool isNotHavingShopItemReceived) { }

	// RVA: 0x189C898 Offset: 0x189C898 VA: 0x189C898
	private void SetDecideButtonSprite(ShopEntity shopEntity, int eventId, int buttonSpriteId) { }

	// RVA: 0x189CBC0 Offset: 0x189CBC0 VA: 0x189CBC0
	private void EndOpen() { }

	// RVA: 0x189CBCC Offset: 0x189CBCC VA: 0x189CBCC
	public void SetInput(Action<int> onDecide) { }

	// RVA: 0x189CBDC Offset: 0x189CBDC VA: 0x189CBDC
	public void Close() { }

	// RVA: 0x189CBE4 Offset: 0x189CBE4 VA: 0x189CBE4
	public void Close(Action callback) { }

	// RVA: 0x189CC74 Offset: 0x189CC74 VA: 0x189CC74
	private void EndClose() { }

	// RVA: 0x189CCF4 Offset: 0x189CCF4 VA: 0x189CCF4
	private void CallOnDecide(int result) { }

	// RVA: 0x189CCD8 Offset: 0x189CCD8 VA: 0x189CCD8
	private void CallOnClose() { }

	// RVA: 0x189CD6C Offset: 0x189CD6C VA: 0x189CD6C
	public void OnClickDecide() { }

	// RVA: 0x189D21C Offset: 0x189D21C VA: 0x189D21C
	private string GetMaxAlertMessage(ShopType.Type shopType, ItemType.Type itemType) { }

	// RVA: 0x189D344 Offset: 0x189D344 VA: 0x189D344
	private string GetMaxOverItemName(ItemType.Type itemType) { }

	// RVA: 0x189D2B0 Offset: 0x189D2B0 VA: 0x189D2B0
	private string GetMaxAlertBase(ShopType.Type shopType) { }

	// RVA: 0x189D498 Offset: 0x189D498 VA: 0x189D498
	public void EndMaxErrorDialog() { }

	// RVA: 0x189D4A8 Offset: 0x189D4A8 VA: 0x189D4A8
	public void OnClickCancel() { }

	// RVA: 0x189D53C Offset: 0x189D53C VA: 0x189D53C
	public void ReturnWarning(bool isDecide) { }

	// RVA: 0x189D5A4 Offset: 0x189D5A4 VA: 0x189D5A4
	public void ReturnWarningRarePri(bool isDecide) { }

	// RVA: 0x189D698 Offset: 0x189D698 VA: 0x189D698
	public void OnClickInfo() { }

	// RVA: 0x189D788 Offset: 0x189D788 VA: 0x189D788
	private int ShowServantInfomation(int servantId) { }

	// RVA: 0x189DADC Offset: 0x189DADC VA: 0x189DADC
	private int ShowItemInfomation(int itemId) { }

	// RVA: 0x189DC4C Offset: 0x189DC4C VA: 0x189DC4C
	private int ShowCommandCodeInfomation(int commandCodeId) { }

	// RVA: 0x189DDC4 Offset: 0x189DDC4 VA: 0x189DDC4
	private int ShowOtherInfomation(ShopEntity shopEntity) { }

	// RVA: 0x189DA64 Offset: 0x189DA64 VA: 0x189DA64
	private void PlayShowInfomationSound(int seKind) { }

	// RVA: 0x189DF04 Offset: 0x189DF04 VA: 0x189DF04
	public void EndShowServantStatusDialog(bool isDecide) { }

	// RVA: 0x189DF68 Offset: 0x189DF68 VA: 0x189DF68
	public void EndShowServantEquipStatusDialog(bool isDecide) { }

	// RVA: 0x189DFCC Offset: 0x189DFCC VA: 0x189DFCC
	public void EndShowItemDetailDialog(bool isDecide) { }

	// RVA: 0x189B4B0 Offset: 0x189B4B0 VA: 0x189B4B0
	private bool GetIsSetItemEventShop(int[] ids) { }

	// RVA: 0x189E058 Offset: 0x189E058 VA: 0x189E058
	public void OpenAfterCheckedFree(ShopBuyItemListViewItem item, Action onChecked, Action<int> onCloseReturnWarning) { }

	// RVA: 0x189E2D0 Offset: 0x189E2D0 VA: 0x189E2D0 Slot: 6
	protected override string get_closeBtnPath() { }

	// RVA: 0x189E318 Offset: 0x189E318 VA: 0x189E318
	private static void .cctor() { }
}

// Namespace: 
private enum ShopBuyItemConfirmMenu.State // TypeDefIndex: 10588
{
	// Fields
	public int value__; // 0x0
	public const ShopBuyItemConfirmMenu.State INIT = 0;
	public const ShopBuyItemConfirmMenu.State OPEN = 1;
	public const ShopBuyItemConfirmMenu.State INPUT = 2;
	public const ShopBuyItemConfirmMenu.State SELECTED = 3;
	public const ShopBuyItemConfirmMenu.State CLOSE = 4;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB14A0 Offset: 0xCB14A0 VA: 0xCB14A0
private sealed class ShopBuyItemConfirmMenu.<ReturnWarningRarePri>c__AnonStorey0 // TypeDefIndex: 10589
{
	// Fields
	internal bool isDecide; // 0x10
	internal ShopBuyItemConfirmMenu $this; // 0x18

	// Methods

	// RVA: 0x1E58940 Offset: 0x1E58940 VA: 0x1E58940
	public void .ctor() { }

	// RVA: 0x1E58948 Offset: 0x1E58948 VA: 0x1E58948
	internal void <>m__0() { }
}

// Namespace: 
public class ShopBuyItemListViewItem : ListViewItem // TypeDefIndex: 10590
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCE37C4 Offset: 0xCE37C4 VA: 0xCE37C4
	[DebuggerBrowsableAttribute] // RVA: 0xCE37C4 Offset: 0xCE37C4 VA: 0xCE37C4
	private ShopEntity <Shop>k__BackingField; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xCE3800 Offset: 0xCE3800 VA: 0xCE3800
	[DebuggerBrowsableAttribute] // RVA: 0xCE3800 Offset: 0xCE3800 VA: 0xCE3800
	private ItemEntity[] <EventItemEntities>k__BackingField; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xCE383C Offset: 0xCE383C VA: 0xCE383C
	[DebuggerBrowsableAttribute] // RVA: 0xCE383C Offset: 0xCE383C VA: 0xCE383C
	private ShopBuyItemListViewManager.Kind <ShopKind>k__BackingField; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xCE3878 Offset: 0xCE3878 VA: 0xCE3878
	[DebuggerBrowsableAttribute] // RVA: 0xCE3878 Offset: 0xCE3878 VA: 0xCE3878
	private int <TotalNum>k__BackingField; // 0x84
	[CompilerGeneratedAttribute] // RVA: 0xCE38B4 Offset: 0xCE38B4 VA: 0xCE38B4
	[DebuggerBrowsableAttribute] // RVA: 0xCE38B4 Offset: 0xCE38B4 VA: 0xCE38B4
	private long <EnterTime>k__BackingField; // 0x88
	[CompilerGeneratedAttribute] // RVA: 0xCE38F0 Offset: 0xCE38F0 VA: 0xCE38F0
	[DebuggerBrowsableAttribute] // RVA: 0xCE38F0 Offset: 0xCE38F0 VA: 0xCE38F0
	private bool <IsNotHavingShopItemReceived>k__BackingField; // 0x90
	[CompilerGeneratedAttribute] // RVA: 0xCE392C Offset: 0xCE392C VA: 0xCE392C
	[DebuggerBrowsableAttribute] // RVA: 0xCE392C Offset: 0xCE392C VA: 0xCE392C
	private bool <IsAlreadyInPossession>k__BackingField; // 0x91
	[CompilerGeneratedAttribute] // RVA: 0xCE3968 Offset: 0xCE3968 VA: 0xCE3968
	[DebuggerBrowsableAttribute] // RVA: 0xCE3968 Offset: 0xCE3968 VA: 0xCE3968
	private bool <IsRarePriShopPurchased>k__BackingField; // 0x92
	private ItemEntity itemEntity; // 0x98

	// Properties
	public ShopEntity Shop { get; set; }
	public ItemEntity[] EventItemEntities { get; set; }
	public ShopBuyItemListViewManager.Kind ShopKind { get; set; }
	public int TotalNum { get; set; }
	public long EnterTime { get; set; }
	public bool IsNotHavingShopItemReceived { get; set; }
	public bool IsAlreadyInPossession { get; set; }
	public bool IsHaveIconShowable { get; }
	public bool IsRarePriShopPurchased { get; set; }
	public bool IsIndefinitePeriodShowable { get; }
	public string NameText { get; }
	public string BulkNameText { get; }
	public bool IsExchangeQP { get; }
	public IconLabelInfo.IconKind PriceIcon { get; }
	public int ItemCount { get; }
	public bool IsItemTypeFree { get; }
	public int Price { get; }
	public string DetailText { get; }
	public bool IsSoldOut { get; }
	public int LimitNum { get; }
	public long ActiveTime { get; }
	public GamePurchase.Type PurchaseType { get; }
	public int TargetId { get; }
	public bool IsChocolateSvtEquip { get; }
	public string UniqueMessage { get; }

	// Methods

	// RVA: 0x1E58A10 Offset: 0x1E58A10 VA: 0x1E58A10
	public void .ctor(int index, ShopBuyItemListViewManager.Kind shopKind, ShopEntity shopEntity, long enterTime = -1) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EA54 Offset: 0xD3EA54 VA: 0xD3EA54
	// RVA: 0x1E58BC8 Offset: 0x1E58BC8 VA: 0x1E58BC8
	public ShopEntity get_Shop() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EA64 Offset: 0xD3EA64 VA: 0xD3EA64
	// RVA: 0x1E58BD0 Offset: 0x1E58BD0 VA: 0x1E58BD0
	private void set_Shop(ShopEntity value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EA74 Offset: 0xD3EA74 VA: 0xD3EA74
	// RVA: 0x1E58BD8 Offset: 0x1E58BD8 VA: 0x1E58BD8
	public ItemEntity[] get_EventItemEntities() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EA84 Offset: 0xD3EA84 VA: 0xD3EA84
	// RVA: 0x1E58BE0 Offset: 0x1E58BE0 VA: 0x1E58BE0
	private void set_EventItemEntities(ItemEntity[] value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EA94 Offset: 0xD3EA94 VA: 0xD3EA94
	// RVA: 0x1E58BE8 Offset: 0x1E58BE8 VA: 0x1E58BE8
	public ShopBuyItemListViewManager.Kind get_ShopKind() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EAA4 Offset: 0xD3EAA4 VA: 0xD3EAA4
	// RVA: 0x1E58A58 Offset: 0x1E58A58 VA: 0x1E58A58
	private void set_ShopKind(ShopBuyItemListViewManager.Kind value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EAB4 Offset: 0xD3EAB4 VA: 0xD3EAB4
	// RVA: 0x1E58BF0 Offset: 0x1E58BF0 VA: 0x1E58BF0
	public int get_TotalNum() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EAC4 Offset: 0xD3EAC4 VA: 0xD3EAC4
	// RVA: 0x1E58BF8 Offset: 0x1E58BF8 VA: 0x1E58BF8
	private void set_TotalNum(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EAD4 Offset: 0xD3EAD4 VA: 0xD3EAD4
	// RVA: 0x1E58C00 Offset: 0x1E58C00 VA: 0x1E58C00
	public long get_EnterTime() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EAE4 Offset: 0xD3EAE4 VA: 0xD3EAE4
	// RVA: 0x1E58A60 Offset: 0x1E58A60 VA: 0x1E58A60
	private void set_EnterTime(long value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EAF4 Offset: 0xD3EAF4 VA: 0xD3EAF4
	// RVA: 0x1E58C08 Offset: 0x1E58C08 VA: 0x1E58C08
	public bool get_IsNotHavingShopItemReceived() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EB04 Offset: 0xD3EB04 VA: 0xD3EB04
	// RVA: 0x1E58C10 Offset: 0x1E58C10 VA: 0x1E58C10
	private void set_IsNotHavingShopItemReceived(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EB14 Offset: 0xD3EB14 VA: 0xD3EB14
	// RVA: 0x1E58C1C Offset: 0x1E58C1C VA: 0x1E58C1C
	public bool get_IsAlreadyInPossession() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EB24 Offset: 0xD3EB24 VA: 0xD3EB24
	// RVA: 0x1E58C24 Offset: 0x1E58C24 VA: 0x1E58C24
	private void set_IsAlreadyInPossession(bool value) { }

	// RVA: 0x1E58C30 Offset: 0x1E58C30 VA: 0x1E58C30
	public bool get_IsHaveIconShowable() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EB34 Offset: 0xD3EB34 VA: 0xD3EB34
	// RVA: 0x1E58C70 Offset: 0x1E58C70 VA: 0x1E58C70
	public bool get_IsRarePriShopPurchased() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EB44 Offset: 0xD3EB44 VA: 0xD3EB44
	// RVA: 0x1E58C78 Offset: 0x1E58C78 VA: 0x1E58C78
	private void set_IsRarePriShopPurchased(bool value) { }

	// RVA: 0x1E58C84 Offset: 0x1E58C84 VA: 0x1E58C84
	public bool get_IsIndefinitePeriodShowable() { }

	// RVA: 0x1E58A68 Offset: 0x1E58A68 VA: 0x1E58A68
	public void Modify(ShopEntity shopEntity) { }

	// RVA: 0x1E58CB4 Offset: 0x1E58CB4 VA: 0x1E58CB4
	private ItemEntity GetItemEntity(ShopEntity shopEntity) { }

	// RVA: 0x1E592B4 Offset: 0x1E592B4 VA: 0x1E592B4
	private QuestEntity GetQuestEntity(ShopEntity shopEntity) { }

	// RVA: 0x1E58FA8 Offset: 0x1E58FA8 VA: 0x1E58FA8
	private ItemEntity[] GetEventItemEntities(ShopEntity shopEntity) { }

	// RVA: 0x1E58DD4 Offset: 0x1E58DD4 VA: 0x1E58DD4
	private bool GetIsRarePriShopPurchased(ShopEntity shopEntity) { }

	// RVA: 0x1E59440 Offset: 0x1E59440 VA: 0x1E59440
	public string get_NameText() { }

	// RVA: 0x1E5958C Offset: 0x1E5958C VA: 0x1E5958C
	public string get_BulkNameText() { }

	// RVA: 0x1E59624 Offset: 0x1E59624 VA: 0x1E59624
	public bool get_IsExchangeQP() { }

	// RVA: 0x1E5964C Offset: 0x1E5964C VA: 0x1E5964C
	public IconLabelInfo.IconKind get_PriceIcon() { }

	// RVA: 0x1E596B4 Offset: 0x1E596B4 VA: 0x1E596B4
	public int get_ItemCount() { }

	// RVA: 0x1E596F0 Offset: 0x1E596F0 VA: 0x1E596F0
	public bool get_IsItemTypeFree() { }

	// RVA: 0x1E59718 Offset: 0x1E59718 VA: 0x1E59718
	public int get_Price() { }

	// RVA: 0x1E59780 Offset: 0x1E59780 VA: 0x1E59780
	public int GetEventPrice(int num) { }

	// RVA: 0x1E59808 Offset: 0x1E59808 VA: 0x1E59808
	public string get_DetailText() { }

	// RVA: 0x1E59894 Offset: 0x1E59894 VA: 0x1E59894
	public bool GetIsPreparation(out string message, out string itemName) { }

	// RVA: 0x1E59958 Offset: 0x1E59958 VA: 0x1E59958
	public bool TryGetClosedMessage(out string message, out string itemName) { }

	// RVA: 0x1E59A54 Offset: 0x1E59A54 VA: 0x1E59A54
	public bool get_IsSoldOut() { }

	// RVA: 0x1E59B78 Offset: 0x1E59B78 VA: 0x1E59B78
	public int get_LimitNum() { }

	// RVA: 0x1E59B90 Offset: 0x1E59B90 VA: 0x1E59B90
	public long get_ActiveTime() { }

	// RVA: 0x1E59BA8 Offset: 0x1E59BA8 VA: 0x1E59BA8
	public GamePurchase.Type get_PurchaseType() { }

	// RVA: 0x1E59BC8 Offset: 0x1E59BC8 VA: 0x1E59BC8
	public int get_TargetId() { }

	// RVA: 0x1E59BD8 Offset: 0x1E59BD8 VA: 0x1E59BD8
	public bool get_IsChocolateSvtEquip() { }

	// RVA: 0x1E59D28 Offset: 0x1E59D28 VA: 0x1E59D28
	public bool GetSendType(out bool isTake, out bool isSend, out bool isQuest) { }

	// RVA: 0x1E5A094 Offset: 0x1E5A094 VA: 0x1E5A094
	public bool GetNowPurchaseShopSendType(out bool isTake, out bool isSend, out bool isQuest) { }

	// RVA: 0x1E5A338 Offset: 0x1E5A338 VA: 0x1E5A338
	public string get_UniqueMessage() { }

	// RVA: 0x1E5A364 Offset: 0x1E5A364 VA: 0x1E5A364
	public bool IsPrepareTextOnMask() { }
}

// Namespace: 
public class ShopBuyItemListViewItemDraw : MonoBehaviour // TypeDefIndex: 10591
{
	// Fields
	public static readonly string BASE_IMG_LIMIT_MATERIAL; // 0x0
	[SerializeField] // RVA: 0xCE39A4 Offset: 0xCE39A4 VA: 0xCE39A4
	private UISprite rangeSprite; // 0x18
	[SerializeField] // RVA: 0xCE39B4 Offset: 0xCE39B4 VA: 0xCE39B4
	private UISprite addRangeSprite; // 0x20
	[SerializeField] // RVA: 0xCE39C4 Offset: 0xCE39C4 VA: 0xCE39C4
	private UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xCE39D4 Offset: 0xCE39D4 VA: 0xCE39D4
	private UISprite maskSprite; // 0x30
	[SerializeField] // RVA: 0xCE39E4 Offset: 0xCE39E4 VA: 0xCE39E4
	private UISprite bandSprite; // 0x38
	[SerializeField] // RVA: 0xCE39F4 Offset: 0xCE39F4 VA: 0xCE39F4
	private UICommonButton baseButton; // 0x40
	[SerializeField] // RVA: 0xCE3A04 Offset: 0xCE3A04 VA: 0xCE3A04
	private ItemIconComponent itemIcon; // 0x48
	[SerializeField] // RVA: 0xCE3A14 Offset: 0xCE3A14 VA: 0xCE3A14
	private UICrossNarrowLabel nameTextLabel; // 0x50
	[SerializeField] // RVA: 0xCE3A24 Offset: 0xCE3A24 VA: 0xCE3A24
	private UILabel messageTextLabel; // 0x58
	[SerializeField] // RVA: 0xCE3A34 Offset: 0xCE3A34 VA: 0xCE3A34
	private UILabel restTimeLabel; // 0x60
	[SerializeField] // RVA: 0xCE3A44 Offset: 0xCE3A44 VA: 0xCE3A44
	private UILabel restCountLabel; // 0x68
	[SerializeField] // RVA: 0xCE3A54 Offset: 0xCE3A54 VA: 0xCE3A54
	private UILabel textOnMask; // 0x70
	[SerializeField] // RVA: 0xCE3A64 Offset: 0xCE3A64 VA: 0xCE3A64
	private UISprite soldOutImage; // 0x78
	[SerializeField] // RVA: 0xCE3A74 Offset: 0xCE3A74 VA: 0xCE3A74
	private GameObject anotherBuyable; // 0x80
	[SerializeField] // RVA: 0xCE3A84 Offset: 0xCE3A84 VA: 0xCE3A84
	private UISprite anotherPayItemImage; // 0x88
	[SerializeField] // RVA: 0xCE3A94 Offset: 0xCE3A94 VA: 0xCE3A94
	private GameObject priceInfoFree; // 0x90
	[SerializeField] // RVA: 0xCE3AA4 Offset: 0xCE3AA4 VA: 0xCE3AA4
	private GameObject priceInfo1; // 0x98
	[SerializeField] // RVA: 0xCE3AB4 Offset: 0xCE3AB4 VA: 0xCE3AB4
	private GameObject priceInfo2; // 0xA0
	[SerializeField] // RVA: 0xCE3AC4 Offset: 0xCE3AC4 VA: 0xCE3AC4
	private UILabel priceLabelFree; // 0xA8
	[SerializeField] // RVA: 0xCE3AD4 Offset: 0xCE3AD4 VA: 0xCE3AD4
	private UIIconLabel priceIconLabel; // 0xB0
	[SerializeField] // RVA: 0xCE3AE4 Offset: 0xCE3AE4 VA: 0xCE3AE4
	private UIIconLabel priceIconLabel1; // 0xB8
	[SerializeField] // RVA: 0xCE3AF4 Offset: 0xCE3AF4 VA: 0xCE3AF4
	private UIIconLabel priceIconLabel2; // 0xC0
	[SerializeField] // RVA: 0xCE3B04 Offset: 0xCE3B04 VA: 0xCE3B04
	private ItemIconComponent eventItemIcon; // 0xC8
	[SerializeField] // RVA: 0xCE3B14 Offset: 0xCE3B14 VA: 0xCE3B14
	private ItemIconComponent eventItemIcon1; // 0xD0
	[SerializeField] // RVA: 0xCE3B24 Offset: 0xCE3B24 VA: 0xCE3B24
	private ItemIconComponent eventItemIcon2; // 0xD8
	[SerializeField] // RVA: 0xCE3B34 Offset: 0xCE3B34 VA: 0xCE3B34
	private UILabel numTitleLabel; // 0xE0
	[SerializeField] // RVA: 0xCE3B44 Offset: 0xCE3B44 VA: 0xCE3B44
	private UILabel numTextLabel; // 0xE8
	[SerializeField] // RVA: 0xCE3B54 Offset: 0xCE3B54 VA: 0xCE3B54
	private UICommonButton infoButton; // 0xF0
	[SerializeField] // RVA: 0xCE3B64 Offset: 0xCE3B64 VA: 0xCE3B64
	private UISprite possessionSprite; // 0xF8
	[SerializeField] // RVA: 0xCE3B74 Offset: 0xCE3B74 VA: 0xCE3B74
	private UILabel prepareTextOnMask; // 0x100
	[SerializeField] // RVA: 0xCE3B84 Offset: 0xCE3B84 VA: 0xCE3B84
	private UISprite chocolateSprite; // 0x108
	[SerializeField] // RVA: 0xCE3B94 Offset: 0xCE3B94 VA: 0xCE3B94
	private GameObject freeExchangeConditionNoticeRoot; // 0x110
	[SerializeField] // RVA: 0xCE3BA4 Offset: 0xCE3BA4 VA: 0xCE3BA4
	private UILabel freeExchangeConditionNoticeLabel; // 0x118
	[SerializeField] // RVA: 0xCE3BB4 Offset: 0xCE3BB4 VA: 0xCE3BB4
	private UISprite[] freeExchangeConditionNoticeBgSprites; // 0x120
	[SerializeField] // RVA: 0xCE3BC4 Offset: 0xCE3BC4 VA: 0xCE3BC4
	private UILabel LineText; // 0x128
	[SerializeField] // RVA: 0xCE3BD4 Offset: 0xCE3BD4 VA: 0xCE3BD4
	private UILabel LineText2digit; // 0x130
	private const int BGSPRITE_WIDTH_ADJUST = 16;
	private const int NOTICE_LABEL_MAX_WIDTH = 512;
	private UIAtlas baseAtlas; // 0x138
	private string baseSpriteName; // 0x140
	private const string FREE_COND = "SHOP_FREE_EXCHANGE_CONDITIONS";
	private const string FREE_COND_ACHIEVE = "SHOP_ACHIEVEMENT_FREE_EXCHANGE_CONDITIONS";
	private const string PAID_COND = "SHOP_PAID_EXCHANGE_CONDITIONS";
	private const string PAID_COND_ACHIEVE = "SHOP_ACHIEVEMENT_PAID_EXCHANGE_CONDITIONS";

	// Methods

	// RVA: 0x1E5A798 Offset: 0x1E5A798 VA: 0x1E5A798
	public void .ctor() { }

	// RVA: 0x1E5A7A0 Offset: 0x1E5A7A0 VA: 0x1E5A7A0
	private void Awake() { }

	// RVA: 0x1E5A858 Offset: 0x1E5A858 VA: 0x1E5A858
	public void SetItem(ShopBuyItemListViewItem item, ShopBuyItemListViewItemDraw.DispMode mode) { }

	// RVA: 0x1E5B264 Offset: 0x1E5B264 VA: 0x1E5B264
	private void SetLabelActive(UILabel label, bool isActive) { }

	// RVA: 0x1E5C2D4 Offset: 0x1E5C2D4 VA: 0x1E5C2D4
	private void SetLabelText(UILabel label, string text) { }

	// RVA: 0x1E5B414 Offset: 0x1E5B414 VA: 0x1E5B414
	private void SetButtonActive(UICommonButton button, bool isActive) { }

	// RVA: 0x1E5B1A4 Offset: 0x1E5B1A4 VA: 0x1E5B1A4
	private void SetSpriteActive(UISprite sprite, bool isActive) { }

	// RVA: 0x1E5E418 Offset: 0x1E5E418 VA: 0x1E5E418
	private void SetSpriteName(UISprite sprite, string spriteName) { }

	// RVA: 0x1E5B324 Offset: 0x1E5B324 VA: 0x1E5B324
	private void SetBandSprite(ShopBuyItemListViewItem item) { }

	// RVA: 0x1E5B4D4 Offset: 0x1E5B4D4 VA: 0x1E5B4D4
	private void SetBaseSprite(ShopBuyItemListViewItem item) { }

	// RVA: 0x1E5B6AC Offset: 0x1E5B6AC VA: 0x1E5B6AC
	private void SetItemIcon(ShopBuyItemListViewItem item, bool isInPreparation) { }

	// RVA: 0x1E5B8FC Offset: 0x1E5B8FC VA: 0x1E5B8FC
	private void SetNameAndMessageText(ShopBuyItemListViewItem item, bool isInPreparation, string preparationMessage, string preparationItemName) { }

	// RVA: 0x1E5BD20 Offset: 0x1E5BD20 VA: 0x1E5BD20
	private void SetNumText(ShopBuyItemListViewItem item, bool isInPreparation) { }

	// RVA: 0x1E5C394 Offset: 0x1E5C394 VA: 0x1E5C394
	private void SetRestCountText(ShopBuyItemListViewItem item, bool isInPreparation, out bool isNotServantGet, out bool isNotServantHaving, out bool isServantHaving, out bool isNotCostumeGet, out bool isNotCommandCodeGet) { }

	// RVA: 0x1E5D4B0 Offset: 0x1E5D4B0 VA: 0x1E5D4B0
	private void SetInfoButton(ShopBuyItemListViewItem item, bool isInPreparation) { }

	// RVA: 0x1E5D648 Offset: 0x1E5D648 VA: 0x1E5D648
	private void SetBaseButton(bool isInPreparation, ShopBuyItemListViewItemDraw.DispMode dispMode) { }

	// RVA: 0x1E5C9E4 Offset: 0x1E5C9E4 VA: 0x1E5C9E4
	private void SetMask(ShopBuyItemListViewItem item, bool isInPreparation, bool isNotServantGet, bool isNotServantHaving, bool isServantHaving, bool isNotCostumeGet, bool isNotCommandCodeGet) { }

	// RVA: 0x1E5EF00 Offset: 0x1E5EF00 VA: 0x1E5EF00
	private void SetReplacedTextOnMask(ShopBuyItemListViewItem item) { }

	// RVA: 0x1E5E208 Offset: 0x1E5E208 VA: 0x1E5E208
	private bool IsPaidExchange(ShopEntity shopEntity) { }

	// RVA: 0x1E5D934 Offset: 0x1E5D934 VA: 0x1E5D934
	private void SetPriceIconText(ShopBuyItemListViewItem item, bool isInPreparation) { }

	// RVA: 0x1E5DCD4 Offset: 0x1E5DCD4 VA: 0x1E5DCD4
	private void SetEventItemIconText(ShopBuyItemListViewItem item, bool isInPreparation) { }

	// RVA: 0x1E5FCEC Offset: 0x1E5FCEC VA: 0x1E5FCEC
	private void SetEventItemIcon(ItemIconComponent eventItemIcon, ItemEntity itemEntity, bool isShowQuestion) { }

	// RVA: 0x1E5D828 Offset: 0x1E5D828 VA: 0x1E5D828
	public void SetEventEndTime(bool isRarePriShopPurchased, bool isIndefinitePeriodShowable, long activeTime, long enterTime) { }

	// RVA: 0x1E5E4C0 Offset: 0x1E5E4C0 VA: 0x1E5E4C0
	private bool GetIsSetItemEventShop(int[] ids) { }

	// RVA: 0x1E5F864 Offset: 0x1E5F864 VA: 0x1E5F864
	private int[] GetUserItemCounts(ShopBuyItemListViewItem item) { }

	// RVA: 0x1E5FDF4 Offset: 0x1E5FDF4 VA: 0x1E5FDF4
	public static ShopBuyItemListViewItemDraw.DispMode GetDispMode(ShopBuyItemListViewObject.InitMode initMode) { }

	// RVA: 0x1E5EC9C Offset: 0x1E5EC9C VA: 0x1E5EC9C
	private void ShowSoldOut(ShopBuyItemListViewItem item) { }

	// RVA: 0x1E5FE14 Offset: 0x1E5FE14 VA: 0x1E5FE14
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EB54 Offset: 0xD3EB54 VA: 0xD3EB54
	// RVA: 0x1E5FE70 Offset: 0x1E5FE70 VA: 0x1E5FE70
	private void <SetNumText>m__0(int stoneCount) { }
}

// Namespace: 
public enum ShopBuyItemListViewItemDraw.DispMode // TypeDefIndex: 10592
{
	// Fields
	public int value__; // 0x0
	public const ShopBuyItemListViewItemDraw.DispMode INVISIBLE = 0;
	public const ShopBuyItemListViewItemDraw.DispMode INVALID = 1;
	public const ShopBuyItemListViewItemDraw.DispMode VALID = 2;
	public const ShopBuyItemListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class ShopBuyItemListViewManager : ListViewManager // TypeDefIndex: 10593
{
	// Fields
	private const int noTabWidgetSize = 338;
	private const int tabWidgetSize = 276;
	private Vector3 noTabScrollBarPos; // 0x138
	private Vector3 tabScrollBarPos; // 0x144
	private float listInDelay; // 0x150
	[SerializeField] // RVA: 0xCE3BE4 Offset: 0xCE3BE4 VA: 0xCE3BE4
	private UISprite scrollbarBgSprite; // 0x158
	[SerializeField] // RVA: 0xCE3BF4 Offset: 0xCE3BF4 VA: 0xCE3BF4
	private UISprite scrollbarForeSprite; // 0x160
	[SerializeField] // RVA: 0xCE3C04 Offset: 0xCE3C04 VA: 0xCE3C04
	private bool isEventShop; // 0x168
	[SerializeField] // RVA: 0xCE3C14 Offset: 0xCE3C14 VA: 0xCE3C14
	private ShopCurrencyInfoController currencyInfoController; // 0x170
	protected ShopBuyItemListViewManager.Kind kind; // 0x178
	protected ShopBuyItemListViewManager.InitMode initMode; // 0x17C
	protected int eventId; // 0x180
	private Action<int> onClickListViewItem; // 0x188
	private Action onMoveEnd; // 0x190
	private int callbackCount; // 0x198
	[CompilerGeneratedAttribute] // RVA: 0xCE3C24 Offset: 0xCE3C24 VA: 0xCE3C24
	[DebuggerBrowsableAttribute] // RVA: 0xCE3C24 Offset: 0xCE3C24 VA: 0xCE3C24
	private int <EventItemCount>k__BackingField; // 0x19C

	// Properties
	public int ItemBaseWindowHeight { get; }
	public List<ShopBuyItemListViewObject> ObjectList { get; }
	public List<ShopBuyItemListViewObject> ClippingObjectList { get; }
	public int EventItemCount { get; set; }

	// Methods

	// RVA: 0x1E5FF08 Offset: 0x1E5FF08 VA: 0x1E5FF08
	public void .ctor() { }

	// RVA: 0x1E5FFBC Offset: 0x1E5FFBC VA: 0x1E5FFBC
	public int get_ItemBaseWindowHeight() { }

	// RVA: 0x1E5FFF0 Offset: 0x1E5FFF0 VA: 0x1E5FFF0
	public List<ShopBuyItemListViewObject> get_ObjectList() { }

	// RVA: 0x1E6017C Offset: 0x1E6017C VA: 0x1E6017C
	public List<ShopBuyItemListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1E603C8 Offset: 0x1E603C8 VA: 0x1E603C8
	public void CreateList(ShopBuyItemListViewManager.Kind kind) { }

	// RVA: 0x1E60C00 Offset: 0x1E60C00 VA: 0x1E60C00
	public void CreateList(int eventId) { }

	// RVA: 0x1E60C1C Offset: 0x1E60C1C VA: 0x1E60C1C
	public void CreateEventRewardList(int eventId, int slot, int eventNum, bool isForcedAdjustment) { }

	// RVA: 0x1E603DC Offset: 0x1E603DC VA: 0x1E603DC
	private void CreateList(ShopBuyItemListViewManager.Kind kind, int eventId, int slot, int eventNum, bool isForcedAdjustment) { }

	// RVA: 0x1E61C00 Offset: 0x1E61C00 VA: 0x1E61C00
	private long GetEnterTime(ShopBuyItemListViewManager.Kind kind) { }

	// RVA: 0x1E61C90 Offset: 0x1E61C90 VA: 0x1E61C90
	private ShopEntity[] GetShopEntities(ShopBuyItemListViewManager.Kind kind, int eventId, int slot) { }

	// RVA: 0x1E62688 Offset: 0x1E62688 VA: 0x1E62688
	public void CheckUpdateEventRewardList(int eventId, int slot, int eventNum, bool isForcedAdjustment) { }

	// RVA: 0x1E627AC Offset: 0x1E627AC VA: 0x1E627AC
	public bool ModifyList() { }

	// RVA: 0x1E62AE4 Offset: 0x1E62AE4 VA: 0x1E62AE4
	public bool ModifyEventRewardList(int eventId, int slot, int eventNum, bool isForcedAdjustment) { }

	// RVA: 0x1E627C4 Offset: 0x1E627C4 VA: 0x1E627C4
	private bool ModifyList(ShopBuyItemListViewManager.Kind kind, int eventId, int slot, int eventNum, bool isForcedAdjustment) { }

	// RVA: 0x1E61F70 Offset: 0x1E61F70 VA: 0x1E61F70
	private bool ModifyItem(ShopEntity shopEntity, int shopId) { }

	// RVA: 0x1E62B08 Offset: 0x1E62B08 VA: 0x1E62B08
	public void InvalidateList() { }

	// RVA: 0x1E62E00 Offset: 0x1E62E00 VA: 0x1E62E00
	public ShopBuyItemListViewItem GetItem(int index) { }

	// RVA: 0x1E62EA8 Offset: 0x1E62EA8 VA: 0x1E62EA8 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1E62F9C Offset: 0x1E62F9C VA: 0x1E62F9C
	private ShopBuyItemListViewObject.InitMode GetObjectInitMode(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x1E62FCC Offset: 0x1E62FCC VA: 0x1E62FCC
	public void SetMode(ShopBuyItemListViewManager.InitMode mode, Action<int> onClickListViewItem) { }

	// RVA: 0x1E63084 Offset: 0x1E63084 VA: 0x1E63084
	public void SetMode(ShopBuyItemListViewManager.InitMode mode, Action callback, float delay = 0.1) { }

	// RVA: 0x1E62FD4 Offset: 0x1E62FD4 VA: 0x1E62FD4
	public void SetMode(ShopBuyItemListViewManager.InitMode mode) { }

	// RVA: 0x1E63090 Offset: 0x1E63090 VA: 0x1E63090
	private void SetDragMaskStart(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x1E630B8 Offset: 0x1E630B8 VA: 0x1E630B8
	private void SetScrollBarUnEnable(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x1E633A8 Offset: 0x1E633A8 VA: 0x1E633A8
	private void SetScrollBarActive(UIScrollBar scrollBar, bool isActive) { }

	// RVA: 0x1E630E4 Offset: 0x1E630E4 VA: 0x1E630E4
	private void SetEmptyMessageBaseUnEnable(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x1E63468 Offset: 0x1E63468 VA: 0x1E63468
	private List<ShopBuyItemListViewObject> GetObjectList(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x1E63138 Offset: 0x1E63138 VA: 0x1E63138
	protected void RequestListObject(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x1E63548 Offset: 0x1E63548 VA: 0x1E63548
	private float GetObjectInitDelay(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x1E637EC Offset: 0x1E637EC VA: 0x1E637EC
	private float GetInvokeDelay(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x1E63828 Offset: 0x1E63828 VA: 0x1E63828
	protected void OnMoveEnd() { }

	// RVA: 0x1E6396C Offset: 0x1E6396C VA: 0x1E6396C
	protected void OnClickListView(ListViewObject obj) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EB64 Offset: 0xD3EB64 VA: 0xD3EB64
	// RVA: 0x1E63A00 Offset: 0x1E63A00 VA: 0x1E63A00
	public int get_EventItemCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3EB74 Offset: 0xD3EB74 VA: 0xD3EB74
	// RVA: 0x1E61248 Offset: 0x1E61248 VA: 0x1E61248
	private void set_EventItemCount(int value) { }

	// RVA: 0x1E63A08 Offset: 0x1E63A08 VA: 0x1E63A08
	public static PayType.Type GetPayType(int eventId) { }

	// RVA: 0x1E63D1C Offset: 0x1E63D1C VA: 0x1E63D1C
	public void SetSingleEventScrollInfo() { }

	// RVA: 0x1E63E88 Offset: 0x1E63E88 VA: 0x1E63E88
	public void SetMultiEventScrollInfo() { }

	// RVA: 0x1E63FF0 Offset: 0x1E63FF0 VA: 0x1E63FF0
	public void StopUpdateRemainTime() { }

	// RVA: 0x1E64070 Offset: 0x1E64070 VA: 0x1E64070
	public static ShopBuyItemListViewManager.Kind GetBuyItemKind(ShopRootConstants.State state) { }

	// RVA: 0x1E640EC Offset: 0x1E640EC VA: 0x1E640EC
	public static bool GetIsShowEventItemWindow(ShopRootConstants.State state, int eventId) { }

	// RVA: 0x1E641FC Offset: 0x1E641FC VA: 0x1E641FC
	public static ShopBuyItemListViewManager.Kind GetCurrencyKind(ShopRootConstants.State state) { }
}

// Namespace: 
public enum ShopBuyItemListViewManager.Kind // TypeDefIndex: 10594
{
	// Fields
	public int value__; // 0x0
	public const ShopBuyItemListViewManager.Kind NONE = 0;
	public const ShopBuyItemListViewManager.Kind QP = 1;
	public const ShopBuyItemListViewManager.Kind MANA = 2;
	public const ShopBuyItemListViewManager.Kind STONE = 3;
	public const ShopBuyItemListViewManager.Kind BANK = 4;
	public const ShopBuyItemListViewManager.Kind ACCOUNT = 5;
	public const ShopBuyItemListViewManager.Kind EVENT = 6;
	public const ShopBuyItemListViewManager.Kind STONE_FRAGMENTS = 7;
	public const ShopBuyItemListViewManager.Kind ANONYMOUS = 8;
	public const ShopBuyItemListViewManager.Kind RARE_PRI = 9;
	public const ShopBuyItemListViewManager.Kind SERVANT_STORAGE = 10;
	public const ShopBuyItemListViewManager.Kind EQUIP_STORAGE = 11;
	public const ShopBuyItemListViewManager.Kind SPECIAL_ITEM = 12;
	public const ShopBuyItemListViewManager.Kind GRAIL_FRAGMENTS = 13;
	public const ShopBuyItemListViewManager.Kind SVT_COSTUME = 14;
	public const ShopBuyItemListViewManager.Kind START_UP_SUMMON = 15;
	public const ShopBuyItemListViewManager.Kind SHOP13 = 16;
}

// Namespace: 
public enum ShopBuyItemListViewManager.InitMode // TypeDefIndex: 10595
{
	// Fields
	public int value__; // 0x0
	public const ShopBuyItemListViewManager.InitMode NONE = 0;
	public const ShopBuyItemListViewManager.InitMode INTO = 1;
	public const ShopBuyItemListViewManager.InitMode INPUT = 2;
	public const ShopBuyItemListViewManager.InitMode ENTER = 3;
	public const ShopBuyItemListViewManager.InitMode EXIT = 4;
	public const ShopBuyItemListViewManager.InitMode MODIFY = 5;
}

// Namespace: 
public class ShopBuyItemListViewObject : ListViewObject // TypeDefIndex: 10596
{
	// Fields
	private ShopBuyItemListViewObject.InitMode initMode; // 0x6C
	private ShopBuyItemListViewObject.State state; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xCE3C60 Offset: 0xCE3C60 VA: 0xCE3C60
	[DebuggerBrowsableAttribute] // RVA: 0xCE3C60 Offset: 0xCE3C60 VA: 0xCE3C60
	private Action onMoveEnd; // 0x78
	private ShopBuyItemListViewItemDraw itemDraw; // 0x80
	private ShopBuyItemListViewItemDraw.DispMode dispMode; // 0x88
	private GameObject dragObject; // 0x90
	private ShopBuyItemListViewItem shopBuyItem; // 0x98

	// Methods

	// RVA: 0x1E64220 Offset: 0x1E64220 VA: 0x1E64220
	public void .ctor() { }

	// RVA: 0x1E64288 Offset: 0x1E64288 VA: 0x1E64288
	private void add_onMoveEnd(Action value) { }

	// RVA: 0x1E64374 Offset: 0x1E64374 VA: 0x1E64374
	private void remove_onMoveEnd(Action value) { }

	// RVA: 0x1E64460 Offset: 0x1E64460 VA: 0x1E64460
	private void Awake() { }

	// RVA: 0x1E644D4 Offset: 0x1E644D4 VA: 0x1E644D4
	private void OnDestroy() { }

	// RVA: 0x1E60344 Offset: 0x1E60344 VA: 0x1E60344
	public ShopBuyItemListViewItem GetItem() { }

	// RVA: 0x1E64580 Offset: 0x1E64580 VA: 0x1E64580 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1E6458C Offset: 0x1E6458C VA: 0x1E6458C Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1E62FC0 Offset: 0x1E62FC0 VA: 0x1E62FC0
	public void Init(ShopBuyItemListViewObject.InitMode initMode) { }

	// RVA: 0x1E63578 Offset: 0x1E63578 VA: 0x1E63578
	public void Init(ShopBuyItemListViewObject.InitMode initMode, Action onMoveEnd, float delay) { }

	// RVA: 0x1E6461C Offset: 0x1E6461C VA: 0x1E6461C
	private ShopBuyItemListViewObject.State GetState(ShopBuyItemListViewObject.InitMode initMode) { }

	// RVA: 0x1E62C84 Offset: 0x1E62C84 VA: 0x1E62C84
	public void SetupDisp() { }

	// RVA: 0x1E6463C Offset: 0x1E6463C VA: 0x1E6463C
	private void EventStart(ShopBuyItemListViewObject.InitMode initMode, float delay) { }

	// RVA: 0x1E64804 Offset: 0x1E64804 VA: 0x1E64804
	private void EventMove() { }

	// RVA: 0x1E64B4C Offset: 0x1E64B4C VA: 0x1E64B4C
	private void EventMoveFinish() { }

	// RVA: 0x1E64C14 Offset: 0x1E64C14 VA: 0x1E64C14
	private void OnMoveEnd() { }

	// RVA: 0x1E647A0 Offset: 0x1E647A0 VA: 0x1E647A0
	private Vector3 GetStartPosition(ShopBuyItemListViewObject.InitMode initMode) { }

	// RVA: 0x1E64914 Offset: 0x1E64914 VA: 0x1E64914
	private Vector3 GetTargetPosition(ShopBuyItemListViewObject.InitMode initMode) { }

	// RVA: 0x1E64784 Offset: 0x1E64784 VA: 0x1E64784
	private void CallOnMoveEnd() { }

	// RVA: 0x1E64C3C Offset: 0x1E64C3C VA: 0x1E64C3C
	public void SetShopBuyItem(ShopBuyItemListViewItem item) { }

	// RVA: 0x1E64C44 Offset: 0x1E64C44 VA: 0x1E64C44
	public void OnInformationButton() { }

	// RVA: 0x1E64DEC Offset: 0x1E64DEC VA: 0x1E64DEC
	private int ShowServantInfomation(int servantId) { }

	// RVA: 0x1E6516C Offset: 0x1E6516C VA: 0x1E6516C
	private int ShowItemInfomation(int itemId) { }

	// RVA: 0x1E652E4 Offset: 0x1E652E4 VA: 0x1E652E4
	private int ShowCommandCodeInfomation(int commandCodeId) { }

	// RVA: 0x1E65464 Offset: 0x1E65464 VA: 0x1E65464
	private int ShowOtherInfomation(ShopBuyItemListViewItem item) { }

	// RVA: 0x1E650F4 Offset: 0x1E650F4 VA: 0x1E650F4
	private void PlayShowInfomationSound(int seKind) { }

	// RVA: 0x1E655E0 Offset: 0x1E655E0 VA: 0x1E655E0
	public void EndShowServantStatusDialog(bool isDecide) { }

	// RVA: 0x1E65644 Offset: 0x1E65644 VA: 0x1E65644
	public void EndShowServantEquipStatusDialog(bool isDecide) { }

	// RVA: 0x1E656A8 Offset: 0x1E656A8 VA: 0x1E656A8
	public void EndShowItemDetailDialog(bool isDecide) { }

	// RVA: 0x1E65734 Offset: 0x1E65734 VA: 0x1E65734
	public void UpdateRemaingTime() { }

	// RVA: 0x1E65864 Offset: 0x1E65864 VA: 0x1E65864 Slot: 3
	public override string ToString() { }

	// RVA: 0x1E63528 Offset: 0x1E63528 VA: 0x1E63528
	public static ShopBuyItemListViewObject.InitMode GetInitMode(ShopBuyItemListViewManager.InitMode initMode) { }
}

// Namespace: 
public enum ShopBuyItemListViewObject.InitMode // TypeDefIndex: 10597
{
	// Fields
	public int value__; // 0x0
	public const ShopBuyItemListViewObject.InitMode INVISIBLE = 0;
	public const ShopBuyItemListViewObject.InitMode INVALID = 1;
	public const ShopBuyItemListViewObject.InitMode VALID = 2;
	public const ShopBuyItemListViewObject.InitMode INPUT = 3;
	public const ShopBuyItemListViewObject.InitMode INTO = 4;
	public const ShopBuyItemListViewObject.InitMode ENTER = 5;
	public const ShopBuyItemListViewObject.InitMode EXIT = 6;
	public const ShopBuyItemListViewObject.InitMode MODIFY = 7;
}

// Namespace: 
private enum ShopBuyItemListViewObject.State // TypeDefIndex: 10598
{
	// Fields
	public int value__; // 0x0
	public const ShopBuyItemListViewObject.State INIT = 0;
	public const ShopBuyItemListViewObject.State IDLE = 1;
	public const ShopBuyItemListViewObject.State MOVE = 2;
	public const ShopBuyItemListViewObject.State INPUT = 3;
}

// Namespace: 
public static class ShopBuyItemUtility // TypeDefIndex: 10599
{
	// Fields
	private static readonly int MESSAGE_DEFAULT_FONT_SIZE; // 0x0

	// Methods

	// RVA: 0x1E5B7F0 Offset: 0x1E5B7F0 VA: 0x1E5B7F0
	public static void SetDefaultMessageLabel(UILabel label) { }

	// RVA: 0x1E5D230 Offset: 0x1E5D230 VA: 0x1E5D230
	public static void SetAddTextOnMask(ShopEntity shopEntity, UILabel textOnMaskLabel) { }

	// RVA: 0x1E65934 Offset: 0x1E65934 VA: 0x1E65934
	private static void .cctor() { }
}

// Namespace: 
public class ShopCurrencyInfoController : MonoBehaviour // TypeDefIndex: 10600
{
