	public void loadNstage(string endproc) { }

	// RVA: 0x122DB9C Offset: 0x122DB9C VA: 0x122DB9C
	public void setNextBattle(string endproc) { }

	// RVA: 0x122DBCC Offset: 0x122DBCC VA: 0x122DBCC
	public void loadNextstage(string endproc) { }

	[DebuggerHiddenAttribute] // RVA: 0xCCD760 Offset: 0xCCD760 VA: 0xCCD760
	// RVA: 0x122DB08 Offset: 0x122DB08 VA: 0x122DB08
	private IEnumerator coroutineLoadNstage(string endproc) { }

	// RVA: 0x122DBF8 Offset: 0x122DBF8 VA: 0x122DBF8
	public void loadSaveWave() { }

	[DebuggerHiddenAttribute] // RVA: 0xCCD770 Offset: 0xCCD770 VA: 0xCCD770
	// RVA: 0x122DC24 Offset: 0x122DC24 VA: 0x122DC24
	private IEnumerator coroutineLoadSaveWave() { }

	// RVA: 0x122DC94 Offset: 0x122DC94 VA: 0x122DC94
	public bool checkInField(int uniqueId) { }

	// RVA: 0x121A12C Offset: 0x121A12C VA: 0x121A12C
	public void updateFieldBuff() { }

	// RVA: 0x122DD70 Offset: 0x122DD70 VA: 0x122DD70
	public void callServant(BattleActionData actionData) { }

	[DebuggerHiddenAttribute] // RVA: 0xCCD780 Offset: 0xCCD780 VA: 0xCCD780
	// RVA: 0x122DD9C Offset: 0x122DD9C VA: 0x122DD9C
	private IEnumerator CorCallServant(BattleActionData actionData) { }

	// RVA: 0x122DE38 Offset: 0x122DE38 VA: 0x122DE38
	private void PreLoadSummonServant(BattleActionData.SummonServant[] summonServantArray, List<BattleLogic.SummonInfo> summonInfoList) { }

	// RVA: 0x122E080 Offset: 0x122E080 VA: 0x122E080
	public void FieldCallServant(BattleActionData actionData) { }

	[DebuggerHiddenAttribute] // RVA: 0xCCD790 Offset: 0xCCD790 VA: 0xCCD790
	// RVA: 0x122E0AC Offset: 0x122E0AC VA: 0x122E0AC
	private IEnumerator CorFieldCallServant(BattleActionData actionData) { }

	// RVA: 0x122E148 Offset: 0x122E148 VA: 0x122E148
	public void addEnemyActPriorityList(BattleServantData svtData) { }

	// RVA: 0x121F660 Offset: 0x121F660 VA: 0x121F660
	public void updateEnemyTargetLogic() { }

	// RVA: 0x122E180 Offset: 0x122E180 VA: 0x122E180
	public void updateGlobalTarget() { }

	// RVA: 0x1226300 Offset: 0x1226300 VA: 0x1226300
	public void updateEnemyTarget(bool isTargetChange = True) { }

	// RVA: 0x122E1E0 Offset: 0x122E1E0 VA: 0x122E1E0
	public bool isDeadOkTurn(int uniqueId) { }

	// RVA: 0x122E26C Offset: 0x122E26C VA: 0x122E26C
	public BattleActionData getNoEffectObject(int targetId, int funcIndex, DataVals dataVals, bool isCommandSideEffect, string uniqueText) { }

	// RVA: 0x122E2D4 Offset: 0x122E2D4 VA: 0x122E2D4
	private void OnPhaseTactical() { }

	// RVA: 0x122E338 Offset: 0x122E338 VA: 0x122E338
	private void OnWaitTutorial() { }

	// RVA: 0x122E368 Offset: 0x122E368 VA: 0x122E368
	public void removeDoNotSelectCommandCardBuff(int buffId, BattleServantData target) { }

	// RVA: 0x1223930 Offset: 0x1223930 VA: 0x1223930
	public void ChangePhase(ServantAnimationOverwriteEntity.PhaseType phase) { }

	// RVA: 0x122E450 Offset: 0x122E450 VA: 0x122E450
	public void CheckAssistSkill() { }

	[DebuggerHiddenAttribute] // RVA: 0xCCD7A0 Offset: 0xCCD7A0 VA: 0xCCD7A0
	// RVA: 0x122E47C Offset: 0x122E47C VA: 0x122E47C
	private IEnumerator CoroutineCheckAssistSkill() { }

	// RVA: 0x122E4F4 Offset: 0x122E4F4 VA: 0x122E4F4
	public void checkFieldAIEntry() { }

	// RVA: 0x122E5E4 Offset: 0x122E5E4 VA: 0x122E5E4
	public void SendFsmEventForPreCheckEndBattle() { }

	// RVA: 0x1227038 Offset: 0x1227038 VA: 0x1227038
	private void SkipCommandSpellRequest(int commandSpellId) { }

	// RVA: 0x122E6B0 Offset: 0x122E6B0 VA: 0x122E6B0
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD7B0 Offset: 0xCCD7B0 VA: 0xCCD7B0
	// RVA: 0x122E848 Offset: 0x122E848 VA: 0x122E848
	private static bool <checkImmediateEntrySubMember>m__0(BattleServantData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD7C0 Offset: 0xCCD7C0 VA: 0xCCD7C0
	// RVA: 0x122E880 Offset: 0x122E880 VA: 0x122E880
	private static bool <startEntryMemberLocal>m__1(BattleServantData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD7D0 Offset: 0xCCD7D0 VA: 0xCCD7D0
	// RVA: 0x122E8AC Offset: 0x122E8AC VA: 0x122E8AC
	private static int <startEntryMemberLocal>m__2(BattleServantData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD7E0 Offset: 0xCCD7E0 VA: 0xCCD7E0
	// RVA: 0x122E8D4 Offset: 0x122E8D4 VA: 0x122E8D4
	private static bool <startEntryMemberLocal>m__3(BattleServantData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD7F0 Offset: 0xCCD7F0 VA: 0xCCD7F0
	// RVA: 0x122E900 Offset: 0x122E900 VA: 0x122E900
	private static int <startEntryMemberLocal>m__4(BattleServantData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD800 Offset: 0xCCD800 VA: 0xCCD800
	// RVA: 0x122E928 Offset: 0x122E928 VA: 0x122E928
	private void <checkEndBattle>m__5() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD810 Offset: 0xCCD810 VA: 0xCCD810
	// RVA: 0x122E98C Offset: 0x122E98C VA: 0x122E98C
	private static int <actPtPassiveSkill>m__6(BattleSkillInfoData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD820 Offset: 0xCCD820 VA: 0xCCD820
	// RVA: 0x122E9B4 Offset: 0x122E9B4 VA: 0x122E9B4
	private static int <actEnemyPtPassiveSkill>m__7(BattleSkillInfoData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD830 Offset: 0xCCD830 VA: 0xCCD830
	// RVA: 0x122E9DC Offset: 0x122E9DC VA: 0x122E9DC
	private static int <actEnemyPassiveSkill>m__8(BattleSkillInfoData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD840 Offset: 0xCCD840 VA: 0xCCD840
	// RVA: 0x122EA04 Offset: 0x122EA04 VA: 0x122EA04
	private static int <actClassPassiveSkill>m__9(BattleSkillInfoData x) { }
}

// Namespace: 
public enum BattleLogic.LOGICTYPE // TypeDefIndex: 9063
{
	// Fields
	public int value__; // 0x0
	public const BattleLogic.LOGICTYPE COMMAND_BEFORE = 0;
	public const BattleLogic.LOGICTYPE COMMAND_ATTACK_1 = 1;
	public const BattleLogic.LOGICTYPE COMMAND_ATTACK_2 = 2;
	public const BattleLogic.LOGICTYPE COMMAND_ATTACK_3 = 3;
	public const BattleLogic.LOGICTYPE COMMAND_ADDATTACK = 4;
	public const BattleLogic.LOGICTYPE COMMAND_AFTER = 5;
	public const BattleLogic.LOGICTYPE PLAYER_SPECIAL_1 = 6;
	public const BattleLogic.LOGICTYPE PLAYER_SPECIAL_2 = 7;
	public const BattleLogic.LOGICTYPE PLAYER_SPECIAL_3 = 8;
	public const BattleLogic.LOGICTYPE COMMAND_WAIT = 9;
	public const BattleLogic.LOGICTYPE ENEMY_ATTACK_1 = 10;
	public const BattleLogic.LOGICTYPE ENEMY_ATTACK_2 = 11;
	public const BattleLogic.LOGICTYPE ENEMY_ATTACK_3 = 12;
	public const BattleLogic.LOGICTYPE LAST_BACKSTEP = 13;
	public const BattleLogic.LOGICTYPE ENEMY_SPECIAL_1 = 14;
	public const BattleLogic.LOGICTYPE ENEMY_SPECIAL_2 = 15;
	public const BattleLogic.LOGICTYPE ENEMY_SPECIAL_3 = 16;
	public const BattleLogic.LOGICTYPE DEBUG = 17;
	public const BattleLogic.LOGICTYPE PLAYER_SP1_ALWAYS = 18;
	public const BattleLogic.LOGICTYPE PLAYER_SP2_ALWAYS = 19;
	public const BattleLogic.LOGICTYPE PLAYER_SP3_ALWAYS = 20;
	public const BattleLogic.LOGICTYPE ENEMY_SP1_ALWAYS = 21;
	public const BattleLogic.LOGICTYPE ENEMY_SP2_ALWAYS = 22;
	public const BattleLogic.LOGICTYPE ENEMY_SP3_ALWAYS = 23;
	public const BattleLogic.LOGICTYPE GET_DROPITEM = 24;
	public const BattleLogic.LOGICTYPE PLAYER_ENDTURN = 25;
	public const BattleLogic.LOGICTYPE ENEMY_ENDTURN = 26;
	public const BattleLogic.LOGICTYPE TOTAL_ENDTURN = 27;
	public const BattleLogic.LOGICTYPE AFTER_SKILL = 28;
	public const BattleLogic.LOGICTYPE AFTER_COMMAND = 29;
	public const BattleLogic.LOGICTYPE REACTION_STARTENEMY = 30;
	public const BattleLogic.LOGICTYPE REACTION_ENDENEMY = 31;
	public const BattleLogic.LOGICTYPE ENEMY_ENDWAIT = 32;
	public const BattleLogic.LOGICTYPE REACTION_PLAYERACTIONEND = 33;
	public const BattleLogic.LOGICTYPE BUFF_ADDPARAM_PLAYER = 34;
	public const BattleLogic.LOGICTYPE BUFF_ADDPARAM_ENEMY = 35;
	public const BattleLogic.LOGICTYPE START_PLAYERTURN = 36;
	public const BattleLogic.LOGICTYPE START_ENEMYTURN = 37;
	public const BattleLogic.LOGICTYPE TACTICAL_START = 38;
	public const BattleLogic.LOGICTYPE WAVE_START = 39;
	public const BattleLogic.LOGICTYPE REFLECTION_ENEMY = 40;
	public const BattleLogic.LOGICTYPE REFLECTION_PLAYER = 41;
	public const BattleLogic.LOGICTYPE ENEMY_ATTACK_NORMAL_AI = 42;
	public const BattleLogic.LOGICTYPE FIELDAI_START_WAVE = 43;
	public const BattleLogic.LOGICTYPE FIELDAI_ENTRY_UNIT = 44;
	public const BattleLogic.LOGICTYPE FIELDAI_START_TURN = 45;
	public const BattleLogic.LOGICTYPE FIELDAI_START_PLAYERTURN = 46;
	public const BattleLogic.LOGICTYPE FIELDAI_END_PLAYERTURN = 47;
	public const BattleLogic.LOGICTYPE FIELDAI_START_ENEMYTURN = 48;
	public const BattleLogic.LOGICTYPE FIELDAI_END_ENEMYTURN = 49;
	public const BattleLogic.LOGICTYPE CHECK_OVERKILL = 50;
	public const BattleLogic.LOGICTYPE CHECK_IMMEDIATE_ENTRY = 51;
	public const BattleLogic.LOGICTYPE START_IMMEDIATE_ENTRY = 52;
	public const BattleLogic.LOGICTYPE AFTER_IMMEDIATE_ENTRY = 53;
	public const BattleLogic.LOGICTYPE RESET_ENEMYACTLIST = 54;
	public const BattleLogic.LOGICTYPE UPDATE_SHIFTSERVANT = 55;
	public const BattleLogic.LOGICTYPE ACT_SHIFTSERVANT = 56;
	public const BattleLogic.LOGICTYPE AFTER_SHIFTSERVANT = 57;
	public const BattleLogic.LOGICTYPE PLAYER_ATTACK_TERM = 58;
	public const BattleLogic.LOGICTYPE ENEMY_ATTACK_TERM = 59;
	public const BattleLogic.LOGICTYPE NPCAI_START_WAVE = 60;
	public const BattleLogic.LOGICTYPE NPCAI_START_TURN = 61;
	public const BattleLogic.LOGICTYPE NPCAI_ENTRY_UNIT = 62;
	public const BattleLogic.LOGICTYPE NPCAI_START_PLAYERTURN = 63;
	public const BattleLogic.LOGICTYPE NPCAI_END_PLAYERTURN = 64;
	public const BattleLogic.LOGICTYPE NPCAI_START_ENEMYTURN = 65;
	public const BattleLogic.LOGICTYPE NPCAI_END_ENEMYTURN = 66;
	public const BattleLogic.LOGICTYPE COUNTER_FUNC_PLAYER = 67;
	public const BattleLogic.LOGICTYPE COUNTER_FUNC_ENEMY = 68;
	public const BattleLogic.LOGICTYPE LOGIC_TERM = 69;
}

// Namespace: 
private sealed class BattleLogic.taskFunction : MulticastDelegate // TypeDefIndex: 9064
{
	// Methods

	// RVA: 0x17D9098 Offset: 0x17D9098 VA: 0x17D9098
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x17D90A8 Offset: 0x17D90A8 VA: 0x17D90A8 Slot: 11
	public virtual BattleLogicTask[] Invoke(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x17D92F0 Offset: 0x17D92F0 VA: 0x17D92F0 Slot: 12
	public virtual IAsyncResult BeginInvoke(BattleLogic.LOGICTYPE ltype, BattleData data, AsyncCallback callback, object object) { }

	// RVA: 0x17D9388 Offset: 0x17D9388 VA: 0x17D9388 Slot: 13
	public virtual BattleLogicTask[] EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class BattleLogic.reactionFunction : MulticastDelegate // TypeDefIndex: 9065
{
	// Methods

	// RVA: 0x17D8CB4 Offset: 0x17D8CB4 VA: 0x17D8CB4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x17D8CC4 Offset: 0x17D8CC4 VA: 0x17D8CC4 Slot: 11
	public virtual BattleLogicTask[] Invoke(BattleLogicTask task) { }

	// RVA: 0x17D9068 Offset: 0x17D9068 VA: 0x17D9068 Slot: 12
	public virtual IAsyncResult BeginInvoke(BattleLogicTask task, AsyncCallback callback, object object) { }

	// RVA: 0x17D908C Offset: 0x17D908C VA: 0x17D908C Slot: 13
	public virtual BattleLogicTask[] EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private sealed class BattleLogic.createActionBattle : MulticastDelegate // TypeDefIndex: 9066
{
	// Methods

	// RVA: 0x17D88D0 Offset: 0x17D88D0 VA: 0x17D88D0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x17D88E0 Offset: 0x17D88E0 VA: 0x17D88E0 Slot: 11
	public virtual BattleActionData Invoke(BattleLogicTask task) { }

	// RVA: 0x17D8C84 Offset: 0x17D8C84 VA: 0x17D8C84 Slot: 12
	public virtual IAsyncResult BeginInvoke(BattleLogicTask task, AsyncCallback callback, object object) { }

	// RVA: 0x17D8CA8 Offset: 0x17D8CA8 VA: 0x17D8CA8 Slot: 13
	public virtual BattleActionData EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public enum BattleLogic.ClassRelationBuffShowState // TypeDefIndex: 9067
{
	// Fields
	public int value__; // 0x0
	public const BattleLogic.ClassRelationBuffShowState SHOW = 0;
	public const BattleLogic.ClassRelationBuffShowState HIDE = 1;
	public const BattleLogic.ClassRelationBuffShowState SHOWDARK = 2;
}

// Namespace: 
private enum BattleLogic.ACTTYPE // TypeDefIndex: 9068
{
	// Fields
	public int value__; // 0x0
	public const BattleLogic.ACTTYPE NONE = 0;
	public const BattleLogic.ACTTYPE LIST = 1;
	public const BattleLogic.ACTTYPE ONE = 2;
}

// Namespace: 
public class BattleLogic.UseSkillObject // TypeDefIndex: 9069
{
	// Fields
	public BattleSkillInfoData skillInfo; // 0x10
	public int[] ptTarget; // 0x18

	// Methods

	// RVA: 0x17D86B4 Offset: 0x17D86B4 VA: 0x17D86B4
	public void .ctor(BattleSkillInfoData skillInfo) { }

	// RVA: 0x17D8754 Offset: 0x17D8754 VA: 0x17D8754
	public void .ctor(BattleSkillInfoData skillInfo, int pttarget) { }

	// RVA: 0x17D87F4 Offset: 0x17D87F4 VA: 0x17D87F4
	public void .ctor(BattleSkillInfoData skillInfo, int pttarget, int subtarget) { }
}

// Namespace: 
private class BattleLogic.CommandSpellData // TypeDefIndex: 9070
{
	// Fields
	public int commandSkillId; // 0x10
	public int ptTargetId; // 0x14

	// Methods

	// RVA: 0x17D862C Offset: 0x17D862C VA: 0x17D862C
	public void .ctor(int id, int tg) { }
}

// Namespace: 
public enum BattleLogic.DamageType // TypeDefIndex: 9071
{
	// Fields
	public int value__; // 0x0
	public const BattleLogic.DamageType NOMAL = 0;
	public const BattleLogic.DamageType NOBLE_NOMAL = 1;
	public const BattleLogic.DamageType NOBLE_PIERCE = 2;
	public const BattleLogic.DamageType NOBLE_INDIVIDUAL = 3;
	public const BattleLogic.DamageType NOBLE_STATE_INDIVIDUAL = 4;
	public const BattleLogic.DamageType NOBLE_HPRATIO_HIGH = 5;
	public const BattleLogic.DamageType NOBLE_HPRATIO_LOW = 6;
	public const BattleLogic.DamageType NOBLE_STATE_INDIVIDUAL_FIX = 7;
	public const BattleLogic.DamageType NOBLE_SAFE = 8;
	public const BattleLogic.DamageType NOBLE_RARE = 9;
	public const BattleLogic.DamageType NOBLE_AND_CHECK_INDIVIDUAL = 10;
	public const BattleLogic.DamageType NOBLE_INDIVIDUAL_SUM = 11;
}

// Namespace: 
public enum BattleLogic.TuStates // TypeDefIndex: 9072
{
	// Fields
	public int value__; // 0x0
	public const BattleLogic.TuStates Attack = 0;
	public const BattleLogic.TuStates Skill = 1;
	public const BattleLogic.TuStates SelectEnemy = 2;
}

// Namespace: 
public class BattleLogic.TutorialStringData // TypeDefIndex: 9073
{
	// Fields
	public float way; // 0x10
	public Vector2 pos; // 0x14
	public int size; // 0x1C

	// Methods

	// RVA: 0x17D8664 Offset: 0x17D8664 VA: 0x17D8664
	public void .ctor(float way, Vector2 pos, int size) { }
}

// Namespace: 
private struct BattleLogic.SummonInfo // TypeDefIndex: 9074
{
	// Fields
	public int index; // 0x0
	public bool isEffectSummon; // 0x4
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44034 Offset: 0xC44034 VA: 0xC44034
private sealed class BattleLogic.<UnloadUnusedAssetsAndWaitFinish>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9075
{
	// Fields
	internal object $current; // 0x10
	internal bool $disposing; // 0x18
	internal int $PC; // 0x1C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB160 Offset: 0xCDB160 VA: 0xCDB160
	// RVA: 0x17D35A8 Offset: 0x17D35A8 VA: 0x17D35A8
	public void .ctor() { }

	// RVA: 0x17D35B0 Offset: 0x17D35B0 VA: 0x17D35B0 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB170 Offset: 0xCDB170 VA: 0xCDB170
	// RVA: 0x17D36A0 Offset: 0x17D36A0 VA: 0x17D36A0 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB180 Offset: 0xCDB180 VA: 0xCDB180
	// RVA: 0x17D36A8 Offset: 0x17D36A8 VA: 0x17D36A8 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB190 Offset: 0xCDB190 VA: 0xCDB190
	// RVA: 0x17D36B0 Offset: 0x17D36B0 VA: 0x17D36B0 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB1A0 Offset: 0xCDB1A0 VA: 0xCDB1A0
	// RVA: 0x17D36C4 Offset: 0x17D36C4 VA: 0x17D36C4 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44044 Offset: 0xC44044 VA: 0xC44044
private sealed class BattleLogic.<coroutineEntrySubMember>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9076
{
	// Fields
	internal BattleServantData[] <deadPlayerServantArray>__0; // 0x10
	internal BattleServantData[] <deadEnemyServantArray>__0; // 0x18
	internal BattleServantData[] <moveToSubMemberPlayerServantArray>__0; // 0x20
	internal BattleServantData[] <moveToSubMemberEnemyServantArray>__0; // 0x28
	internal bool <isentry>__0; // 0x30
	internal int <repopOrder>__0; // 0x34
	internal List<RestockServantLogic> <playerRestockLogicList>__0; // 0x38
	internal List<int> <playerDeckIndices>__0; // 0x40
	internal List.Enumerator<RestockServantLogic> $locvar0; // 0x48
	internal List<int> <enemyDeckIndices>__0; // 0x60
	internal List.Enumerator<RestockServantLogic> $locvar1; // 0x68
	internal bool isEventBonusCheck; // 0x80
	internal List.Enumerator<int> $locvar2; // 0x88
	internal List.Enumerator<int> $locvar3; // 0xA0
	internal bool isTactical; // 0xB8
	internal string endproc; // 0xC0
	internal BattleLogic $this; // 0xC8
	internal object $current; // 0xD0
	internal bool $disposing; // 0xD8
	internal int $PC; // 0xDC
	private BattleLogic.<coroutineEntrySubMember>c__Iterator1.<coroutineEntrySubMember>c__AnonStorey12 $locvar4; // 0xE0
	private static Func<RestockServantLogic, bool> <>f__am$cache0; // 0x0
	private static Func<int, RestockServantLogic> <>f__am$cache1; // 0x8
	private static Func<RestockServantLogic, bool> <>f__am$cache2; // 0x10

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB1B0 Offset: 0xCDB1B0 VA: 0xCDB1B0
	// RVA: 0x17D4658 Offset: 0x17D4658 VA: 0x17D4658
	public void .ctor() { }

	// RVA: 0x17D4660 Offset: 0x17D4660 VA: 0x17D4660 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB1C0 Offset: 0xCDB1C0 VA: 0xCDB1C0
	// RVA: 0x17D5560 Offset: 0x17D5560 VA: 0x17D5560 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB1D0 Offset: 0xCDB1D0 VA: 0xCDB1D0
	// RVA: 0x17D5568 Offset: 0x17D5568 VA: 0x17D5568 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB1E0 Offset: 0xCDB1E0 VA: 0xCDB1E0
	// RVA: 0x17D5570 Offset: 0x17D5570 VA: 0x17D5570 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB1F0 Offset: 0xCDB1F0 VA: 0xCDB1F0
	// RVA: 0x17D5584 Offset: 0x17D5584 VA: 0x17D5584 Slot: 6
	public void Reset() { }

	// RVA: 0x17D55EC Offset: 0x17D55EC VA: 0x17D55EC
	private static bool <>m__0(RestockServantLogic x) { }

	// RVA: 0x17D5624 Offset: 0x17D5624 VA: 0x17D5624
	private static RestockServantLogic <>m__1(int i) { }

	// RVA: 0x17D568C Offset: 0x17D568C VA: 0x17D568C
	private static bool <>m__2(RestockServantLogic x) { }
}

// Namespace: 
private sealed class BattleLogic.<coroutineEntrySubMember>c__Iterator1.<coroutineEntrySubMember>c__AnonStorey12 // TypeDefIndex: 9077
{
	// Fields
	internal List<RestockServantLogic> enemyRestockLogicList; // 0x10
	internal BattleLogic.<coroutineEntrySubMember>c__Iterator1 <>f__ref$1; // 0x18

	// Methods

	// RVA: 0x17D5558 Offset: 0x17D5558 VA: 0x17D5558
	public void .ctor() { }

	// RVA: 0x17D56B8 Offset: 0x17D56B8 VA: 0x17D56B8
	internal void <>m__0(int i) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44054 Offset: 0xC44054 VA: 0xC44054
private sealed class BattleLogic.<coroutineImmediateEntrySubMember>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9078
{
	// Fields
	internal int <repopOrder>__0; // 0x10
	internal List<int> <enemyDeckIndices>__0; // 0x18
	internal int[] $locvar0; // 0x20
	internal int $locvar1; // 0x28
	internal bool isEventBonusCheck; // 0x2C
	internal List.Enumerator<int> $locvar2; // 0x30
	internal BattleLogic $this; // 0x48
	internal object $current; // 0x50
	internal bool $disposing; // 0x58
	internal int $PC; // 0x5C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB200 Offset: 0xCDB200 VA: 0xCDB200
	// RVA: 0x17D574C Offset: 0x17D574C VA: 0x17D574C
	public void .ctor() { }

	// RVA: 0x17D5754 Offset: 0x17D5754 VA: 0x17D5754 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB210 Offset: 0xCDB210 VA: 0xCDB210
	// RVA: 0x17D5CD0 Offset: 0x17D5CD0 VA: 0x17D5CD0 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB220 Offset: 0xCDB220 VA: 0xCDB220
	// RVA: 0x17D5CD8 Offset: 0x17D5CD8 VA: 0x17D5CD8 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB230 Offset: 0xCDB230 VA: 0xCDB230
	// RVA: 0x17D5CE0 Offset: 0x17D5CE0 VA: 0x17D5CE0 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB240 Offset: 0xCDB240 VA: 0xCDB240
	// RVA: 0x17D5CF4 Offset: 0x17D5CF4 VA: 0x17D5CF4 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44064 Offset: 0xC44064 VA: 0xC44064
private sealed class BattleLogic.<UnloadDeadDeckActorsAndFreeEntry>c__AnonStorey13 // TypeDefIndex: 9079
{
	// Fields
	internal List<BattleServantData> result; // 0x10
	internal bool isEnemy; // 0x18
	internal BattleLogic $this; // 0x20

	// Methods

	// RVA: 0x12192F4 Offset: 0x12192F4 VA: 0x12192F4
	public void .ctor() { }

	// RVA: 0x122FF00 Offset: 0x122FF00 VA: 0x122FF00
	internal void <>m__0(int i, int servantUniqueId) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44074 Offset: 0xC44074 VA: 0xC44074
private sealed class BattleLogic.<UnloadMoveToSubMemberDeckActors>c__AnonStorey14 // TypeDefIndex: 9080
{
	// Fields
	internal bool isEnemy; // 0x10

	// Methods

	// RVA: 0x17D3554 Offset: 0x17D3554 VA: 0x17D3554
	public void .ctor() { }

	// RVA: 0x17D355C Offset: 0x17D355C VA: 0x17D355C
	internal bool <>m__0(RestockServantLogicByMoveToSubMember x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44084 Offset: 0xC44084 VA: 0xC44084
private sealed class BattleLogic.<colReplaceMember>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9081
{
	// Fields
	internal BattleActionData.ReplaceMember replaceData; // 0x10
	internal BattleServantData <svtdata>__0; // 0x18
	internal bool <isPlayer>__0; // 0x20
	internal Action endCallBack; // 0x28
	internal BattleLogic $this; // 0x30
	internal object $current; // 0x38
	internal bool $disposing; // 0x40
	internal int $PC; // 0x44
	private static Comparison<BattleServantData> <>f__am$cache0; // 0x0

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB250 Offset: 0xCDB250 VA: 0xCDB250
	// RVA: 0x17D372C Offset: 0x17D372C VA: 0x17D372C
	public void .ctor() { }

	// RVA: 0x17D3734 Offset: 0x17D3734 VA: 0x17D3734 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB260 Offset: 0xCDB260 VA: 0xCDB260
	// RVA: 0x17D3DEC Offset: 0x17D3DEC VA: 0x17D3DEC Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB270 Offset: 0xCDB270 VA: 0xCDB270
	// RVA: 0x17D3DF4 Offset: 0x17D3DF4 VA: 0x17D3DF4 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB280 Offset: 0xCDB280 VA: 0xCDB280
	// RVA: 0x17D3DFC Offset: 0x17D3DFC VA: 0x17D3DFC Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB290 Offset: 0xCDB290 VA: 0xCDB290
	// RVA: 0x17D3E10 Offset: 0x17D3E10 VA: 0x17D3E10 Slot: 6
	public void Reset() { }

	// RVA: 0x17D3E78 Offset: 0x17D3E78 VA: 0x17D3E78
	private static int <>m__0(BattleServantData a, BattleServantData b) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44094 Offset: 0xC44094 VA: 0xC44094
private sealed class BattleLogic.<startEntryMemberLocal>c__AnonStorey15 // TypeDefIndex: 9082
{
	// Fields
	internal bool isTactical; // 0x10
	internal List<BattleLogicTask> tasklist; // 0x18
	internal BattleLogic $this; // 0x20

	// Methods

	// RVA: 0x17D7CE0 Offset: 0x17D7CE0 VA: 0x17D7CE0
	public void .ctor() { }

	// RVA: 0x17D7CE8 Offset: 0x17D7CE8 VA: 0x17D7CE8
	internal void <>m__0(BattleServantData svtdata) { }

	// RVA: 0x17D7E74 Offset: 0x17D7E74 VA: 0x17D7E74
	internal void <>m__1(BattleServantData svtdata) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC440A4 Offset: 0xC440A4 VA: 0xC440A4
private sealed class BattleLogic.<coroutineContinueMember>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9083
{
	// Fields
	internal int <i>__1; // 0x10
	internal List.Enumerator<BattleServantData> $locvar0; // 0x18
	internal BattleServantData <svtData>__2; // 0x30
	internal bool isTactical; // 0x38
	internal string endproc; // 0x40
	internal BattleLogic $this; // 0x48
	internal object $current; // 0x50
	internal bool $disposing; // 0x58
	internal int $PC; // 0x5C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB2A0 Offset: 0xCDB2A0 VA: 0xCDB2A0
	// RVA: 0x17D3ECC Offset: 0x17D3ECC VA: 0x17D3ECC
	public void .ctor() { }

	// RVA: 0x17D3ED4 Offset: 0x17D3ED4 VA: 0x17D3ED4 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB2B0 Offset: 0xCDB2B0 VA: 0xCDB2B0
	// RVA: 0x17D4568 Offset: 0x17D4568 VA: 0x17D4568 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB2C0 Offset: 0xCDB2C0 VA: 0xCDB2C0
	// RVA: 0x17D4570 Offset: 0x17D4570 VA: 0x17D4570 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB2D0 Offset: 0xCDB2D0 VA: 0xCDB2D0
	// RVA: 0x17D4578 Offset: 0x17D4578 VA: 0x17D4578 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB2E0 Offset: 0xCDB2E0 VA: 0xCDB2E0
	// RVA: 0x17D45F0 Offset: 0x17D45F0 VA: 0x17D45F0 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC440B4 Offset: 0xC440B4 VA: 0xC440B4
private sealed class BattleLogic.<DropItemCollectionCoroutine>c__Iterator5 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9084
{
	// Fields
	internal BattleLogic $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB2F0 Offset: 0xCDB2F0 VA: 0xCDB2F0
	// RVA: 0x121A7E8 Offset: 0x121A7E8 VA: 0x121A7E8
	public void .ctor() { }

	// RVA: 0x122FD50 Offset: 0x122FD50 VA: 0x122FD50 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB300 Offset: 0xCDB300 VA: 0xCDB300
	// RVA: 0x122FE74 Offset: 0x122FE74 VA: 0x122FE74 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB310 Offset: 0xCDB310 VA: 0xCDB310
	// RVA: 0x122FE7C Offset: 0x122FE7C VA: 0x122FE7C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB320 Offset: 0xCDB320 VA: 0xCDB320
	// RVA: 0x122FE84 Offset: 0x122FE84 VA: 0x122FE84 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB330 Offset: 0xCDB330 VA: 0xCDB330
	// RVA: 0x122FE98 Offset: 0x122FE98 VA: 0x122FE98 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC440C4 Offset: 0xC440C4 VA: 0xC440C4
private sealed class BattleLogic.<ngContinueBattleLoseInfomation>c__AnonStorey16 // TypeDefIndex: 9085
{
	// Fields
	internal string endEvent; // 0x10
	internal BattleLogic $this; // 0x18

	// Methods

	// RVA: 0x17D7474 Offset: 0x17D7474 VA: 0x17D7474
	public void .ctor() { }

	// RVA: 0x17D747C Offset: 0x17D747C VA: 0x17D747C
	internal void <>m__0(bool flg) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC440D4 Offset: 0xC440D4 VA: 0xC440D4
private sealed class BattleLogic.<dropItemCoroutine>c__Iterator6 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9086
{
	// Fields
	internal Action callback; // 0x10
	internal BattleLogic $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB340 Offset: 0xCDB340 VA: 0xCDB340
	// RVA: 0x17D6E50 Offset: 0x17D6E50 VA: 0x17D6E50
	public void .ctor() { }

	// RVA: 0x17D6E58 Offset: 0x17D6E58 VA: 0x17D6E58 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB350 Offset: 0xCDB350 VA: 0xCDB350
	// RVA: 0x17D70E4 Offset: 0x17D70E4 VA: 0x17D70E4 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB360 Offset: 0xCDB360 VA: 0xCDB360
	// RVA: 0x17D70EC Offset: 0x17D70EC VA: 0x17D70EC Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB370 Offset: 0xCDB370 VA: 0xCDB370
	// RVA: 0x17D70F4 Offset: 0x17D70F4 VA: 0x17D70F4 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB380 Offset: 0xCDB380 VA: 0xCDB380
	// RVA: 0x17D7108 Offset: 0x17D7108 VA: 0x17D7108 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC440E4 Offset: 0xC440E4 VA: 0xC440E4
private sealed class BattleLogic.<startCommandIE>c__Iterator7 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9087
{
	// Fields
	internal List<BattleCommandData> <commandlist>__0; // 0x10
	internal BattleCommandData <command>__0; // 0x18
	internal BattleServantData[] <svtData>__0; // 0x20
	internal string endproc; // 0x28
	internal BattleLogic $this; // 0x30
	internal object $current; // 0x38
	internal bool $disposing; // 0x40
	internal int $PC; // 0x44

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB390 Offset: 0xCDB390 VA: 0xCDB390
	// RVA: 0x17D7514 Offset: 0x17D7514 VA: 0x17D7514
	public void .ctor() { }

	// RVA: 0x17D751C Offset: 0x17D751C VA: 0x17D751C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB3A0 Offset: 0xCDB3A0 VA: 0xCDB3A0
	// RVA: 0x17D7C54 Offset: 0x17D7C54 VA: 0x17D7C54 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB3B0 Offset: 0xCDB3B0 VA: 0xCDB3B0
	// RVA: 0x17D7C5C Offset: 0x17D7C5C VA: 0x17D7C5C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB3C0 Offset: 0xCDB3C0 VA: 0xCDB3C0
	// RVA: 0x17D7C64 Offset: 0x17D7C64 VA: 0x17D7C64 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB3D0 Offset: 0xCDB3D0 VA: 0xCDB3D0
	// RVA: 0x17D7C78 Offset: 0x17D7C78 VA: 0x17D7C78 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC440F4 Offset: 0xC440F4 VA: 0xC440F4
private sealed class BattleLogic.<waitWaveStep>c__Iterator8 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9088
{
	// Fields
	internal BattleData.PROGRESS progress; // 0x10
	internal BattleLogicTask[] taskList; // 0x18
	internal BattleLogic $this; // 0x20
	internal object $current; // 0x28
	internal bool $disposing; // 0x30
	internal int $PC; // 0x34
	private BattleLogic.<waitWaveStep>c__Iterator8.<waitWaveStep>c__AnonStorey17 $locvar0; // 0x38

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB3E0 Offset: 0xCDB3E0 VA: 0xCDB3E0
	// RVA: 0x17D81D0 Offset: 0x17D81D0 VA: 0x17D81D0
	public void .ctor() { }

	// RVA: 0x17D81D8 Offset: 0x17D81D8 VA: 0x17D81D8 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB3F0 Offset: 0xCDB3F0 VA: 0xCDB3F0
	// RVA: 0x17D8594 Offset: 0x17D8594 VA: 0x17D8594 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB400 Offset: 0xCDB400 VA: 0xCDB400
	// RVA: 0x17D859C Offset: 0x17D859C VA: 0x17D859C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB410 Offset: 0xCDB410 VA: 0xCDB410
	// RVA: 0x17D85A4 Offset: 0x17D85A4 VA: 0x17D85A4 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB420 Offset: 0xCDB420 VA: 0xCDB420
	// RVA: 0x17D85B8 Offset: 0x17D85B8 VA: 0x17D85B8 Slot: 6
	public void Reset() { }
}

// Namespace: 
private sealed class BattleLogic.<waitWaveStep>c__Iterator8.<waitWaveStep>c__AnonStorey17 // TypeDefIndex: 9089
{
	// Fields
	internal bool isEnd; // 0x10
	internal BattleLogic.<waitWaveStep>c__Iterator8 <>f__ref$8; // 0x18

	// Methods

	// RVA: 0x17D858C Offset: 0x17D858C VA: 0x17D858C
	public void .ctor() { }

	// RVA: 0x17D8620 Offset: 0x17D8620 VA: 0x17D8620
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44104 Offset: 0xC44104 VA: 0xC44104
private sealed class BattleLogic.<endCommandSpellCoroutine>c__Iterator9 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9090
{
	// Fields
	internal UserGameEntity <selfUserGame>__0; // 0x10
	internal int <imageType>__0; // 0x18
	internal BattleLogic $this; // 0x20
	internal object $current; // 0x28
	internal bool $disposing; // 0x30
	internal int $PC; // 0x34

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB430 Offset: 0xCDB430 VA: 0xCDB430
	// RVA: 0x17D7170 Offset: 0x17D7170 VA: 0x17D7170
	public void .ctor() { }

	// RVA: 0x17D7178 Offset: 0x17D7178 VA: 0x17D7178 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB440 Offset: 0xCDB440 VA: 0xCDB440
	// RVA: 0x17D73E8 Offset: 0x17D73E8 VA: 0x17D73E8 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB450 Offset: 0xCDB450 VA: 0xCDB450
	// RVA: 0x17D73F0 Offset: 0x17D73F0 VA: 0x17D73F0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB460 Offset: 0xCDB460 VA: 0xCDB460
	// RVA: 0x17D73F8 Offset: 0x17D73F8 VA: 0x17D73F8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB470 Offset: 0xCDB470 VA: 0xCDB470
	// RVA: 0x17D740C Offset: 0x17D740C VA: 0x17D740C Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44114 Offset: 0xC44114 VA: 0xC44114
private sealed class BattleLogic.<updateConditionsBuffAll>c__AnonStorey18 // TypeDefIndex: 9091
{
	// Fields
	internal int[] fieldIndivi; // 0x10
	internal BattleLogic $this; // 0x18

	// Methods

	// RVA: 0x17D8120 Offset: 0x17D8120 VA: 0x17D8120
	public void .ctor() { }

	// RVA: 0x17D8128 Offset: 0x17D8128 VA: 0x17D8128
	internal void <>m__0(AiNpcBattleServantData npc) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44124 Offset: 0xC44124 VA: 0xC44124
private sealed class BattleLogic.<coroutineStartLimitTurnTutorial>c__IteratorA : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9092
{
	// Fields
	internal BattleRaidTurnStartEffect <comp>__0; // 0x10
	internal BattleLogic $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB480 Offset: 0xCDB480 VA: 0xCDB480
	// RVA: 0x17D6BC0 Offset: 0x17D6BC0 VA: 0x17D6BC0
	public void .ctor() { }

	// RVA: 0x17D6BC8 Offset: 0x17D6BC8 VA: 0x17D6BC8 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB490 Offset: 0xCDB490 VA: 0xCDB490
	// RVA: 0x17D6DC4 Offset: 0x17D6DC4 VA: 0x17D6DC4 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB4A0 Offset: 0xCDB4A0 VA: 0xCDB4A0
	// RVA: 0x17D6DCC Offset: 0x17D6DCC VA: 0x17D6DCC Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB4B0 Offset: 0xCDB4B0 VA: 0xCDB4B0
	// RVA: 0x17D6DD4 Offset: 0x17D6DD4 VA: 0x17D6DD4 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB4C0 Offset: 0xCDB4C0 VA: 0xCDB4C0
	// RVA: 0x17D6DE8 Offset: 0x17D6DE8 VA: 0x17D6DE8 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44134 Offset: 0xC44134 VA: 0xC44134
private sealed class BattleLogic.<coroutineInitQuest>c__IteratorB : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9093
{
	// Fields
	internal string endproc; // 0x10
	internal BattleLogic $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

