
	// RVA: 0x1BA4854 Offset: 0x1BA4854 VA: 0x1BA4854
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1BA4864 Offset: 0x1BA4864 VA: 0x1BA4864 Slot: 11
	public virtual void Invoke(GeoLocation.ResultState result, LocationInfo locInfo) { }

	// RVA: 0x1BA4B74 Offset: 0x1BA4B74 VA: 0x1BA4B74 Slot: 12
	public virtual IAsyncResult BeginInvoke(GeoLocation.ResultState result, LocationInfo locInfo, AsyncCallback callback, object object) { }

	// RVA: 0x1BA4C28 Offset: 0x1BA4C28 VA: 0x1BA4C28 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC429A4 Offset: 0xC429A4 VA: 0xC429A4
private sealed class GeoLocation.<GetLocationCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6498
{
	// Fields
	internal object $current; // 0x10
	internal bool $disposing; // 0x18
	internal int $PC; // 0x1C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8D40 Offset: 0xCD8D40 VA: 0xCD8D40
	// RVA: 0x1BA43CC Offset: 0x1BA43CC VA: 0x1BA43CC
	public void .ctor() { }

	// RVA: 0x1BA47C8 Offset: 0x1BA47C8 VA: 0x1BA47C8 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8D50 Offset: 0xCD8D50 VA: 0xCD8D50
	// RVA: 0x1BA47D8 Offset: 0x1BA47D8 VA: 0x1BA47D8 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8D60 Offset: 0xCD8D60 VA: 0xCD8D60
	// RVA: 0x1BA47E0 Offset: 0x1BA47E0 VA: 0x1BA47E0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8D70 Offset: 0xCD8D70 VA: 0xCD8D70
	// RVA: 0x1BA47E8 Offset: 0x1BA47E8 VA: 0x1BA47E8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8D80 Offset: 0xCD8D80 VA: 0xCD8D80
	// RVA: 0x1BA47EC Offset: 0x1BA47EC VA: 0x1BA47EC Slot: 6
	public void Reset() { }
}

// Namespace: 
public class LocalizationManager : SingletonMonoBehaviour<LocalizationManager> // TypeDefIndex: 6499
{
	// Fields
	[SerializeField] // RVA: 0xC549E8 Offset: 0xC549E8 VA: 0xC549E8
	protected TextAsset mainTextData; // 0x18
	protected static string lowNumberString; // 0x0
	protected static string hiNumberString; // 0x8
	protected static string hi2NumberString; // 0x10
	protected static Dictionary<string, string> lookup; // 0x18
	protected static string unknownNameText; // 0x20
	protected static string noEntryNameText; // 0x28
	protected static bool isBusySetAssetData; // 0x30
	protected static string kinsokuTopString; // 0x38
	protected static string kinsokuLastString; // 0x40
	protected static string kinsokuSeparationString; // 0x48
	protected static Color normalEffectColor; // 0x50
	protected static Color selectEffectColor; // 0x60
	[CompilerGeneratedAttribute] // RVA: 0xC549F8 Offset: 0xC549F8 VA: 0xC549F8
	private static Dictionary<string, int> <>f__switch$map3; // 0x70

	// Methods

	// RVA: 0x17CBAB8 Offset: 0x17CBAB8 VA: 0x17CBAB8
	public void .ctor() { }

	// RVA: 0x17CBB08 Offset: 0x17CBB08 VA: 0x17CBB08
	public static bool IsBusySetAssetData() { }

	// RVA: 0x17CBB70 Offset: 0x17CBB70 VA: 0x17CBB70
	public static void Initialize() { }

	// RVA: 0x17CBCB8 Offset: 0x17CBCB8 VA: 0x17CBCB8
	public static void LoadAssetData() { }

	// RVA: 0x17C5758 Offset: 0x17C5758 VA: 0x17C5758
	public static string GetUnknownName() { }

	// RVA: 0x17CBE38 Offset: 0x17CBE38 VA: 0x17CBE38
	public static string GetNoEntryName() { }

	// RVA: 0x17CBEA0 Offset: 0x17CBEA0 VA: 0x17CBEA0
	public static string GetKinsokuTopString() { }

	// RVA: 0x17CBF08 Offset: 0x17CBF08 VA: 0x17CBF08
	public static string GetKinsokuLastString() { }

	// RVA: 0x17CBF70 Offset: 0x17CBF70 VA: 0x17CBF70
	public static string GetKinsokuSeparationString() { }

	// RVA: 0x17CBFD8 Offset: 0x17CBFD8 VA: 0x17CBFD8
	public static Color GetNormalEffectColor() { }

	// RVA: 0x17CC044 Offset: 0x17CC044 VA: 0x17CC044
	public static Color GetSelectEffectColor() { }

	// RVA: 0x17C569C Offset: 0x17C569C VA: 0x17C569C
	public static string Get(string key) { }

	// RVA: 0x17CC0B0 Offset: 0x17CC0B0 VA: 0x17CC0B0
	public static bool ContainsKey(string key) { }

	// RVA: 0x17CC13C Offset: 0x17CC13C VA: 0x17CC13C
	public static string GetBeforeTime(long at) { }

	// RVA: 0x17CC360 Offset: 0x17CC360 VA: 0x17CC360
	public static string GetRestTime(long at) { }

	// RVA: 0x17CC5B4 Offset: 0x17CC5B4 VA: 0x17CC5B4
	public static string GetRestTime2(long at, long nowTime = -1) { }

	// RVA: 0x17CC814 Offset: 0x17CC814 VA: 0x17CC814
	public static string GetRestTime3(long at) { }

	// RVA: 0x17CCA18 Offset: 0x17CCA18 VA: 0x17CCA18
	public static string GetRestTime4(long at, long nowTime = -1) { }

	// RVA: 0x17CCB94 Offset: 0x17CCB94 VA: 0x17CCB94
	public static string GetRestTime5(long at, long nowTime = -1) { }

	// RVA: 0x17CCDF4 Offset: 0x17CCDF4 VA: 0x17CCDF4
	public static void GetRestTimeWithSeparatedTimeStr(long at, out string numStr, out string charStr) { }

	// RVA: 0x17CD060 Offset: 0x17CD060 VA: 0x17CD060
	public static bool GetRestIsLastHours(long at) { }

	// RVA: 0x17CD0F8 Offset: 0x17CD0F8 VA: 0x17CD0F8
	public static string GetPeriod(long startedAt, long endedAt, bool isDispStartTime = False, bool isDispEndTime = False) { }

	// RVA: 0x17CD618 Offset: 0x17CD618 VA: 0x17CD618
	public static string GetDate(long time) { }

	// RVA: 0x17CD78C Offset: 0x17CD78C VA: 0x17CD78C
	public static string GetTime(long time) { }

	// RVA: 0x17CD2DC Offset: 0x17CD2DC VA: 0x17CD2DC
	public static string GetDateTime(long time) { }

	// RVA: 0x17CD8D0 Offset: 0x17CD8D0 VA: 0x17CD8D0
	public static string GetDateTimeDayOfWeek(long time) { }

	// RVA: 0x17CDCB0 Offset: 0x17CDCB0 VA: 0x17CDCB0
	public static string GetLapTime(long time) { }

	// RVA: 0x17CDDD8 Offset: 0x17CDDD8 VA: 0x17CDDD8
	public static string GetUnitInfo(int count) { }

	// RVA: 0x17CDEE0 Offset: 0x17CDEE0 VA: 0x17CDEE0
	public static string GetHaveUnitInfo(int count) { }

	// RVA: 0x17CDFAC Offset: 0x17CDFAC VA: 0x17CDFAC
	public static string GetCountInfo(int count) { }

	// RVA: 0x17CDE88 Offset: 0x17CDE88 VA: 0x17CDE88
	public static string GetNumberFormat(int data) { }

	// RVA: 0x17CE078 Offset: 0x17CE078 VA: 0x17CE078
	public static string GetNumberFormatLong(long data) { }

	// RVA: 0x17CE0D0 Offset: 0x17CE0D0 VA: 0x17CE0D0
	public static string GetNumberFormat(string data) { }

	// RVA: 0x17CE2B4 Offset: 0x17CE2B4 VA: 0x17CE2B4
	public static string GetPriceInfo(int price) { }

	// RVA: 0x17CE364 Offset: 0x17CE364 VA: 0x17CE364
	public static string GetPrice2Info(int price) { }

	// RVA: 0x17CE414 Offset: 0x17CE414 VA: 0x17CE414
	public static string GetIdIconInfo(int id) { }

	// RVA: 0x17CE4E0 Offset: 0x17CE4E0 VA: 0x17CE4E0
	public static string GetLevelInfo(int lv) { }

	// RVA: 0x17CE5AC Offset: 0x17CE5AC VA: 0x17CE5AC
	public static string GetLevelIconInfo(int lv) { }

	// RVA: 0x17CE6B0 Offset: 0x17CE6B0 VA: 0x17CE6B0
	public static string GetRarityInfo(int rare) { }

	// RVA: 0x17CE750 Offset: 0x17CE750 VA: 0x17CE750
	public static string GetCostInfo(int cost) { }

	// RVA: 0x17CE81C Offset: 0x17CE81C VA: 0x17CE81C
	public static string GetCostIconInfo(int cost) { }

	// RVA: 0x17CE8E8 Offset: 0x17CE8E8 VA: 0x17CE8E8
	public static string GetHpInfo(int hp) { }

	// RVA: 0x17CE9B4 Offset: 0x17CE9B4 VA: 0x17CE9B4
	public static string GetHpIconInfo(int hp) { }

	// RVA: 0x17CEA80 Offset: 0x17CEA80 VA: 0x17CEA80
	public static string GetAttackInfo(int atk) { }

	// RVA: 0x17CEB4C Offset: 0x17CEB4C VA: 0x17CEB4C
	public static string GetAttackIconInfo(int atk) { }

	// RVA: 0x17CEC18 Offset: 0x17CEC18 VA: 0x17CEC18
	public static string GetStoneInfo(int n) { }

	// RVA: 0x17CECE4 Offset: 0x17CECE4 VA: 0x17CECE4
	public static string GetEventPointInfo(int addPoint, int ratePoint, string unit = "") { }

	// RVA: 0x17CF028 Offset: 0x17CF028 VA: 0x17CF028
	public static string GetLevelList(int[] levelList) { }

	// RVA: 0x17CF1A0 Offset: 0x17CF1A0 VA: 0x17CF1A0
	public static string GetLevelList(SkillInfo[] skillInfoList) { }

	// RVA: 0x17CF3F0 Offset: 0x17CF3F0 VA: 0x17CF3F0
	public static string ReplaceCommonTag(string text) { }

	// RVA: 0x17CF7D8 Offset: 0x17CF7D8 VA: 0x17CF7D8
	public static string ReplaceNameTag(string text, bool isUseColorTag = True) { }

	// RVA: 0x17D02CC Offset: 0x17D02CC VA: 0x17D02CC
	public static bool IsGreyCode(string tagText) { }

	// RVA: 0x17D035C Offset: 0x17D035C VA: 0x17D035C
	public static bool IsColorCode(string tagText) { }

	// RVA: 0x17D03F8 Offset: 0x17D03F8 VA: 0x17D03F8
	public static string ChineseNumber(int n) { }

	// RVA: 0x17CBC14 Offset: 0x17CBC14 VA: 0x17CBC14
	protected void InitializeLocal() { }

	// RVA: 0x17D07C0 Offset: 0x17D07C0 VA: 0x17D07C0
	protected void SetTextData(string text_data) { }

	// RVA: 0x17D0F74 Offset: 0x17D0F74 VA: 0x17D0F74
	public static string ConvertNumberToRomaNumber(int number) { }

	// RVA: 0x17D1044 Offset: 0x17D1044 VA: 0x17D1044
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC429B4 Offset: 0xC429B4 VA: 0xC429B4
private sealed class LocalizationManager.<LoadAssetData>c__AnonStorey0 // TypeDefIndex: 6500
{
	// Fields
	internal LocalizationManager ins; // 0x10

	// Methods

	// RVA: 0x17CBE30 Offset: 0x17CBE30 VA: 0x17CBE30
	public void .ctor() { }

	// RVA: 0x17D10B8 Offset: 0x17D10B8 VA: 0x17D10B8
	internal void <>m__0(AssetData assetData) { }
}

// Namespace: 
public class MainMenuBar : SingletonMonoBehaviour<MainMenuBar> // TypeDefIndex: 6501
{
	// Fields
	protected MainMenuBar.Kind kind; // 0x18
	protected int panelDepth; // 0x1C
	protected SceneRootComponent activeScene; // 0x20
	protected MainMenuBarBase barBase; // 0x28
	private GameObject obj; // 0x30

	// Properties
	public static bool IsEnableOutSideCollider { get; }

	// Methods

	// RVA: 0x2B9FFB8 Offset: 0x2B9FFB8 VA: 0x2B9FFB8
	public void .ctor() { }

	// RVA: 0x2BA0010 Offset: 0x2BA0010 VA: 0x2BA0010
	public static bool get_IsEnableOutSideCollider() { }

	// RVA: 0x2BA0128 Offset: 0x2BA0128 VA: 0x2BA0128
	public static void resumeMenuBar(SceneRootComponent scene, MainMenuBar.Kind kind, int depth) { }

	// RVA: 0x2BA0308 Offset: 0x2BA0308 VA: 0x2BA0308
	public static void setActiveScene(SceneRootComponent scene, Camera cam) { }

	// RVA: 0x2BA051C Offset: 0x2BA051C VA: 0x2BA051C
	public static void setActiveScene(SceneRootComponent scene, int depth, Camera cam) { }

	// RVA: 0x2BA05E8 Offset: 0x2BA05E8 VA: 0x2BA05E8
	public static void setActiveScene(SceneRootComponent scene, MainMenuBar.Kind kind, int depth, Camera cam) { }

	// RVA: 0x2BA06C4 Offset: 0x2BA06C4 VA: 0x2BA06C4
	public static void setKind(MainMenuBar.Kind kind) { }

	// RVA: 0x2BA080C Offset: 0x2BA080C VA: 0x2BA080C
	public static void setMenuActive(bool isActive, Camera cam) { }

	// RVA: 0x2BA0D7C Offset: 0x2BA0D7C VA: 0x2BA0D7C
	public static void setCloseHideMode(bool is_enable) { }

	// RVA: 0x2BA0E34 Offset: 0x2BA0E34 VA: 0x2BA0E34
	public static void setButtonActive(bool isActive) { }

	// RVA: 0x2BA0FBC Offset: 0x2BA0FBC VA: 0x2BA0FBC
	public static void requestSelectedSignal() { }

	// RVA: 0x2BA1100 Offset: 0x2BA1100 VA: 0x2BA1100
	public static void requestTerminalSceneChange() { }

	// RVA: 0x2BA1240 Offset: 0x2BA1240 VA: 0x2BA1240
	public static void requestSelectedSceneChange() { }

	// RVA: 0x2BA03D0 Offset: 0x2BA03D0 VA: 0x2BA03D0
	protected void SetActiveScene(SceneRootComponent scene, MainMenuBar.Kind kind, int panelDepth, Camera cam) { }

	// RVA: 0x2BA0770 Offset: 0x2BA0770 VA: 0x2BA0770
	protected void SetButtonKind(MainMenuBar.Kind kind) { }

	// RVA: 0x2BA01F0 Offset: 0x2BA01F0 VA: 0x2BA01F0
	protected void SetResumeMenu(SceneRootComponent scene, MainMenuBar.Kind kind, int panelDepth) { }

	// RVA: 0x2BA08CC Offset: 0x2BA08CC VA: 0x2BA08CC
	protected void SetMenuActive(bool isActive, Camera cam) { }

	// RVA: 0x2BA0F08 Offset: 0x2BA0F08 VA: 0x2BA0F08
	protected void SetButtonActive(MainMenuBar.Kind kind, bool isActive) { }

	// RVA: 0x2BA1068 Offset: 0x2BA1068 VA: 0x2BA1068
	public void RequestSelectedSignal() { }

	// RVA: 0x2BA11AC Offset: 0x2BA11AC VA: 0x2BA11AC
	public void RequestTerminalSceneChange() { }

	// RVA: 0x2BA12EC Offset: 0x2BA12EC VA: 0x2BA12EC
	public void RequestSelectedSceneChange() { }

	// RVA: 0x2BA19E0 Offset: 0x2BA19E0 VA: 0x2BA19E0
	public static void UpdateNoticeNumber() { }

	// RVA: 0x2BA1CEC Offset: 0x2BA1CEC VA: 0x2BA1CEC
	public static void SetMenuBtnColliderEnable(bool isEnable, bool isGray = False) { }

	// RVA: 0x2BA1EF4 Offset: 0x2BA1EF4 VA: 0x2BA1EF4
	public static void SetMenuBtnAct(Action act) { }

	// RVA: 0x2BA1F6C Offset: 0x2BA1F6C VA: 0x2BA1F6C
	public static void SetDispBtnColliderEnable(bool is_enable, MainMenuBarButton.Kind kind = 8) { }

	// RVA: 0x2BA2118 Offset: 0x2BA2118 VA: 0x2BA2118
	public static void SetDispBtnAct(MainMenuBarButton.Kind kind, Action act) { }

	// RVA: 0x2BA222C Offset: 0x2BA222C VA: 0x2BA222C
	public static void FrameIn(bool is_force = False) { }

	// RVA: 0x2BA2520 Offset: 0x2BA2520 VA: 0x2BA2520
	public static void FrameOut(bool is_force = False) { }
}

// Namespace: 
public enum MainMenuBar.Kind // TypeDefIndex: 6502
{
	// Fields
	public int value__; // 0x0
	public const MainMenuBar.Kind NONE = 0;
	public const MainMenuBar.Kind TERMINAL = 1;
	public const MainMenuBar.Kind AREA = 2;
	public const MainMenuBar.Kind FORMATION = 3;
	public const MainMenuBar.Kind SUMMON = 4;
	public const MainMenuBar.Kind COMBINE = 5;
	public const MainMenuBar.Kind SHOP = 6;
	public const MainMenuBar.Kind FRIEND = 7;
	public const MainMenuBar.Kind MYROOM = 8;
	public const MainMenuBar.Kind LATEST_SCENARIO = 9;
}

// Namespace: 
public class MainMenuBarBase : MonoBehaviour // TypeDefIndex: 6503
{
	// Fields
	public const float FRAME_IN_OUT_MV_SPD_TIME = 0.25;
	public const float FRAME_OUT_POS_Y = -90;
	public static readonly Vector3 NOTICE_NUMBER_POS_MENU_BTN; // 0x0
	public static readonly Vector3 NOTICE_NUMBER_POS_DISP_BTN; // 0xC
	private const float MENU_OPEN_POS_Y = -185;
	private const float MENU_CLOSE_POS_Y = -328;
	private const float MENU_CLOSE_HIDE_POS_Y = -420;
	private const float MENU_OPEN_CLOSE_TIME = 0.034;
	private const float MENU_OPEN_TIME = 0.034;
	private const float MENU_CLOSE_TIME = 0.034;
	private static readonly float ITEM_ICON_ALPHA_ANIM_SPD_RATE; // 0x18
	public static readonly float ITEM_ICON_ALPHA_ANIM_TIME_INTERVAL; // 0x1C
	public UIPanel rootPanel; // 0x18
	[SerializeField] // RVA: 0xC54A08 Offset: 0xC54A08 VA: 0xC54A08
	private MainMenuBarButton terminalBtn; // 0x20
	[SerializeField] // RVA: 0xC54A18 Offset: 0xC54A18 VA: 0xC54A18
	private MainMenuBarButton partyBtn; // 0x28
	[SerializeField] // RVA: 0xC54A28 Offset: 0xC54A28 VA: 0xC54A28
	private MainMenuBarButton summonBtn; // 0x30
	[SerializeField] // RVA: 0xC54A38 Offset: 0xC54A38 VA: 0xC54A38
	private MainMenuBarButton combineBtn; // 0x38
	[SerializeField] // RVA: 0xC54A48 Offset: 0xC54A48 VA: 0xC54A48
	private MainMenuBarButton shopBtn; // 0x40
	[SerializeField] // RVA: 0xC54A58 Offset: 0xC54A58 VA: 0xC54A58
	private MainMenuBarButton friendBtn; // 0x48
	[SerializeField] // RVA: 0xC54A68 Offset: 0xC54A68 VA: 0xC54A68
	private MainMenuBarButton myroomBtn; // 0x50
	[SerializeField] // RVA: 0xC54A78 Offset: 0xC54A78 VA: 0xC54A78
	private MainMenuBarButton latestScenarioBtn; // 0x58
	private List<MainMenuBarButton> mDispBtnList; // 0x60
	public GameObject menuComp; // 0x68
	public UISprite menuStateImg; // 0x70
	public UIButton menuStateBtn; // 0x78
	public UIButton menuFrameBnt; // 0x80
	[SerializeField] // RVA: 0xC54A88 Offset: 0xC54A88 VA: 0xC54A88
	private BoxCollider mOutSide; // 0x88
	[SerializeField] // RVA: 0xC54A98 Offset: 0xC54A98 VA: 0xC54A98
	private GameObject mNoticeNumberPrefab; // 0x90
	[SerializeField] // RVA: 0xC54AA8 Offset: 0xC54AA8 VA: 0xC54AA8
	private UISprite mNewItemSp; // 0x98
	[SerializeField] // RVA: 0xC54AB8 Offset: 0xC54AB8 VA: 0xC54AB8
	private GameObject mLimitedItemIconRoot; // 0xA0
	[SerializeField] // RVA: 0xC54AC8 Offset: 0xC54AC8 VA: 0xC54AC8
	private UISprite mPeriodLimitedItemSp; // 0xA8
	[SerializeField] // RVA: 0xC54AD8 Offset: 0xC54AD8 VA: 0xC54AD8
	private UISprite mMonthlyLimitedItemSp; // 0xB0
	[SerializeField] // RVA: 0xC54AE8 Offset: 0xC54AE8 VA: 0xC54AE8
	private UISprite mExchangeServantItemSp; // 0xB8
	[SerializeField] // RVA: 0xC54AF8 Offset: 0xC54AF8 VA: 0xC54AF8
	private UILabel mPeriodLimitedTimeLb; // 0xC0
	[SerializeField] // RVA: 0xC54B08 Offset: 0xC54B08 VA: 0xC54B08
	private UILabel mMonthlyLimitedTimeLb; // 0xC8
	[SerializeField] // RVA: 0xC54B18 Offset: 0xC54B18 VA: 0xC54B18
	private UILabel mExchangeServantItemLb; // 0xD0
	[SerializeField] // RVA: 0xC54B28 Offset: 0xC54B28 VA: 0xC54B28
	private GameObject mExchangeServantTimeRoot; // 0xD8
	[SerializeField] // RVA: 0xC54B38 Offset: 0xC54B38 VA: 0xC54B38
	private UIWidget mShopIconRoot; // 0xE0
	[SerializeField] // RVA: 0xC54B48 Offset: 0xC54B48 VA: 0xC54B48
	private UISprite StartUpSummonSp; // 0xE8
	[SerializeField] // RVA: 0xC54B58 Offset: 0xC54B58 VA: 0xC54B58
	private UILabel StartUpSummonLb; // 0xF0
	[SerializeField] // RVA: 0xC54B68 Offset: 0xC54B68 VA: 0xC54B68
	private GameObject summonCampainObject; // 0xF8
	[SerializeField] // RVA: 0xC54B78 Offset: 0xC54B78 VA: 0xC54B78
	private UILabel summonCampainLabel1; // 0x100
	[SerializeField] // RVA: 0xC54B88 Offset: 0xC54B88 VA: 0xC54B88
	private UILabel summonCampainLabel2; // 0x108
	[SerializeField] // RVA: 0xC54B98 Offset: 0xC54B98 VA: 0xC54B98
	private UILabel summonCampainNumLabel; // 0x110
	private UIAtlas mExchangeServantItemDefaultAtlas; // 0x118
	private string mExchangeServantItemDefaultSpriteName; // 0x120
	protected PlayMakerFSM activeSceneFSM; // 0x128
	protected MainMenuBar.Kind kind; // 0x130
	protected SceneList.Type selectedType; // 0x134
	protected string selectedKind; // 0x138
	private object selectedObject; // 0x140
	private Hashtable table; // 0x148
	protected bool isOpen; // 0x150
	private Collider closeCol; // 0x158
	private Action mMenuBtnAct; // 0x160
	private Action[] mDispBtnActList; // 0x168
	private bool mIsCloseHideMode; // 0x170
	private NoticeNumberComponent mMenuNoticeNumber; // 0x178
	private NoticeNumberComponent mSummonNoticeNumber; // 0x180
	private NoticeNumberComponent mFriendNoticeNumber; // 0x188
	private bool mIsActiveShopEvent; // 0x190
	private float mFrameInPosY; // 0x194
	private bool isSwitchMenuMoving; // 0x198
	private ShopNotice shopNotice; // 0x1A0
	private ShopNoticeTween shopNoticeTween; // 0x1A8
	private ShopNoticeRemainTime shopNoticeRemainTime; // 0x1B0
	private ShopNoticeRemainTimeLabel periodShopNoticeRemainTimeLabel; // 0x1B8
	private ShopNoticeRemainTimeLabel monthlyShopNoticeRemainTimeLabel; // 0x1C0
	private ShopNoticeRemainTimeLabel exchangeServantShopNoticeRemainTimeLabel; // 0x1C8
	public UISkinSprite backCloseSprite; // 0x1D0
	public UISkinSprite backOpenSprite; // 0x1D8
	public GameObject menuGrid; // 0x1E0
	[CompilerGeneratedAttribute] // RVA: 0xC54BA8 Offset: 0xC54BA8 VA: 0xC54BA8
	private static Action <>f__am$cache0; // 0x20

	// Properties
	public bool IsEnableOutSideCollider { get; }
	public bool IsCloseHideMode { get; set; }

	// Methods

	// RVA: 0x2BA2598 Offset: 0x2BA2598 VA: 0x2BA2598
	public void .ctor() { }

	// RVA: 0x2BA00F8 Offset: 0x2BA00F8 VA: 0x2BA00F8
	public bool get_IsEnableOutSideCollider() { }

	// RVA: 0x2BA2648 Offset: 0x2BA2648 VA: 0x2BA2648
	public bool get_IsCloseHideMode() { }

	// RVA: 0x2BA0E10 Offset: 0x2BA0E10 VA: 0x2BA0E10
	public void set_IsCloseHideMode(bool value) { }

	// RVA: 0x2BA2650 Offset: 0x2BA2650 VA: 0x2BA2650
	private void BackActive(bool isOpen) { }

	// RVA: 0x2BA27A0 Offset: 0x2BA27A0 VA: 0x2BA27A0
	private void Start() { }

	// RVA: 0x2BA27A8 Offset: 0x2BA27A8 VA: 0x2BA27A8
	private void Awake() { }

	// RVA: 0x2BA1A4C Offset: 0x2BA1A4C VA: 0x2BA1A4C
	public void UpdateNoticeNumber() { }

	// RVA: 0x2BA1384 Offset: 0x2BA1384 VA: 0x2BA1384
	public void SetActiveScene(SceneRootComponent scene, MainMenuBar.Kind kind, int panelDepth, Camera cam) { }

	// RVA: 0x2BA2F98 Offset: 0x2BA2F98 VA: 0x2BA2F98
	public void OnClickOutSide() { }

	// RVA: 0x2BA1604 Offset: 0x2BA1604 VA: 0x2BA1604
	public void SetButtonKind(MainMenuBar.Kind kind) { }

	// RVA: 0x2BA160C Offset: 0x2BA160C VA: 0x2BA160C
	public void SetMenuActive(bool isActive) { }

	// RVA: 0x2BA1648 Offset: 0x2BA1648 VA: 0x2BA1648
	public void SetButtonActive(MainMenuBar.Kind kind, bool isActive) { }

	// RVA: 0x2BA18AC Offset: 0x2BA18AC VA: 0x2BA18AC
	public void RequestTerminalSceneChange() { }

	// RVA: 0x2BA1944 Offset: 0x2BA1944 VA: 0x2BA1944
	public void RequestSelectedSceneChange() { }

	// RVA: 0x2BA17E4 Offset: 0x2BA17E4 VA: 0x2BA17E4
	public void RequestSelectedSignal() { }

	// RVA: 0x2BA33C4 Offset: 0x2BA33C4 VA: 0x2BA33C4
	protected void SendSelectSignal(SceneList.Type type, string message, object obj) { }

	// RVA: 0x2BA34C8 Offset: 0x2BA34C8 VA: 0x2BA34C8
	public void OnClickUnivMenu() { }

	// RVA: 0x2BA2F8C Offset: 0x2BA2F8C VA: 0x2BA2F8C
	public void CloseMenu(bool is_play_se = True) { }

	// RVA: 0x2BA3508 Offset: 0x2BA3508 VA: 0x2BA3508
	private void SwitchMenu(bool is_open, bool is_play_se = True) { }

	// RVA: 0x2BA3F08 Offset: 0x2BA3F08 VA: 0x2BA3F08
	private void CheckTerminalButtonEnable() { }

	// RVA: 0x2BA3184 Offset: 0x2BA3184 VA: 0x2BA3184
	private void CheckLatestScenarioButtonEnable() { }

	// RVA: 0x2BA418C Offset: 0x2BA418C VA: 0x2BA418C
	private void ResetShopNoticeDraw() { }

	// RVA: 0x2BA3CFC Offset: 0x2BA3CFC VA: 0x2BA3CFC
	private void ResetShopNotice() { }

	// RVA: 0x2BA3D6C Offset: 0x2BA3D6C VA: 0x2BA3D6C
	private void ResetSummonNoticeDraw() { }

	// RVA: 0x2BA5930 Offset: 0x2BA5930 VA: 0x2BA5930
	private void openMenuStateImg() { }

	// RVA: 0x2BA5A08 Offset: 0x2BA5A08 VA: 0x2BA5A08
	private void closeMenuStateImg() { }

	// RVA: 0x2BA5AE0 Offset: 0x2BA5AE0 VA: 0x2BA5AE0
	private void onMoveComplete() { }

	// RVA: 0x2BA3C2C Offset: 0x2BA3C2C VA: 0x2BA3C2C
	private void SetOutSideColliderEnable(bool is_enable) { }

	// RVA: 0x2BA5BBC Offset: 0x2BA5BBC VA: 0x2BA5BBC
	public void OnClickCommon(MainMenuBarButton.Kind kind, bool isEnabled) { }

	// RVA: 0x2BA5CD4 Offset: 0x2BA5CD4 VA: 0x2BA5CD4
	public void OnClickTerminal() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC992C Offset: 0xCC992C VA: 0xCC992C
	// RVA: 0x2BA62FC Offset: 0x2BA62FC VA: 0x2BA62FC
	private IEnumerator SetTerminalQuestListClose(Action callback) { }

	// RVA: 0x2BA6398 Offset: 0x2BA6398 VA: 0x2BA6398
	private bool IsSpotSelectWait() { }

	// RVA: 0x2BA64E4 Offset: 0x2BA64E4 VA: 0x2BA64E4
	public void OnClickFormation() { }

	// RVA: 0x2BA6578 Offset: 0x2BA6578 VA: 0x2BA6578
	public void OnClickSummon() { }

	// RVA: 0x2BA660C Offset: 0x2BA660C VA: 0x2BA660C
	public void OnClickCombine() { }

	// RVA: 0x2BA66A0 Offset: 0x2BA66A0 VA: 0x2BA66A0
	public void OnClickShop() { }

	// RVA: 0x2BA6734 Offset: 0x2BA6734 VA: 0x2BA6734
	public void OnClickFriend() { }

	// RVA: 0x2BA67C8 Offset: 0x2BA67C8 VA: 0x2BA67C8
	public void OnClickMyroom() { }

	// RVA: 0x2BA685C Offset: 0x2BA685C VA: 0x2BA685C
	public void OnClickLatestScenario() { }

	// RVA: 0x2BA3FB8 Offset: 0x2BA3FB8 VA: 0x2BA3FB8
	private bool GetJumpSceneInfo(out int warId, out int questId) { }

	// RVA: 0x2BA1D70 Offset: 0x2BA1D70 VA: 0x2BA1D70
	public void SetMenuBtnColliderEnable(bool isEnable, bool isGray = False) { }

	// RVA: 0x2BA1F64 Offset: 0x2BA1F64 VA: 0x2BA1F64
	public void SetMenuBtnAct(Action act) { }

	// RVA: 0x2BA1FF0 Offset: 0x2BA1FF0 VA: 0x2BA1FF0
	public void SetDispBtnColliderEnable(bool is_enable, MainMenuBarButton.Kind kind = 8) { }

	// RVA: 0x2BA219C Offset: 0x2BA219C VA: 0x2BA219C
	public void SetDispBtnAct(MainMenuBarButton.Kind kind, Action act) { }

	// RVA: 0x2BA696C Offset: 0x2BA696C VA: 0x2BA696C
	public void FrameIn(bool is_force = False) { }

	// RVA: 0x2BA6978 Offset: 0x2BA6978 VA: 0x2BA6978
	public void FrameOut(bool is_force = False) { }

	// RVA: 0x2BA22A4 Offset: 0x2BA22A4 VA: 0x2BA22A4
	public void FrameInOut(bool is_framein, bool is_force = False) { }

	// RVA: 0x2BA698C Offset: 0x2BA698C VA: 0x2BA698C
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC993C Offset: 0xCC993C VA: 0xCC993C
	// RVA: 0x2BA6A6C Offset: 0x2BA6A6C VA: 0x2BA6A6C
	private void <ResetShopNoticeDraw>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC994C Offset: 0xCC994C VA: 0xCC994C
	// RVA: 0x2BA6BB4 Offset: 0x2BA6BB4 VA: 0x2BA6BB4
	private static void <OnClickTerminal>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC429C4 Offset: 0xC429C4 VA: 0xC429C4
private sealed class MainMenuBarBase.<SetTerminalQuestListClose>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6504
{
	// Fields
	internal Action callback; // 0x10
	internal MainMenuBarBase $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8D90 Offset: 0xCD8D90 VA: 0xCD8D90
	// RVA: 0x2BA6390 Offset: 0x2BA6390 VA: 0x2BA6390
	public void .ctor() { }

	// RVA: 0x2BA6D00 Offset: 0x2BA6D00 VA: 0x2BA6D00 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8DA0 Offset: 0xCD8DA0 VA: 0xCD8DA0
	// RVA: 0x2BA6EDC Offset: 0x2BA6EDC VA: 0x2BA6EDC Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8DB0 Offset: 0xCD8DB0 VA: 0xCD8DB0
	// RVA: 0x2BA6EE4 Offset: 0x2BA6EE4 VA: 0x2BA6EE4 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8DC0 Offset: 0xCD8DC0 VA: 0xCD8DC0
	// RVA: 0x2BA6EEC Offset: 0x2BA6EEC VA: 0x2BA6EEC Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8DD0 Offset: 0xCD8DD0 VA: 0xCD8DD0
	// RVA: 0x2BA6F00 Offset: 0x2BA6F00 VA: 0x2BA6F00 Slot: 6
	public void Reset() { }

	// RVA: 0x2BA6F68 Offset: 0x2BA6F68 VA: 0x2BA6F68
	internal bool <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC429D4 Offset: 0xC429D4 VA: 0xC429D4
private sealed class MainMenuBarBase.<FrameInOut>c__AnonStorey1 // TypeDefIndex: 6505
{
	// Fields
	internal GameObject tgt_obj; // 0x10
	internal MoveObject mo; // 0x18
	internal float tgt_y; // 0x20

	// Methods

	// RVA: 0x2BA6984 Offset: 0x2BA6984 VA: 0x2BA6984
	public void .ctor() { }

	// RVA: 0x2BA6CAC Offset: 0x2BA6CAC VA: 0x2BA6CAC
	internal void <>m__0() { }

	// RVA: 0x2BA6CEC Offset: 0x2BA6CEC VA: 0x2BA6CEC
	internal void <>m__1() { }
}

// Namespace: 
public class ManagementManager : SingletonMonoBehaviour<ManagementManager> // TypeDefIndex: 6506
{
	// Fields
	protected static readonly string PushStateSendedKey; // 0x0
	protected static readonly string RebootCacheClearKey; // 0x8
	private static readonly string DATE_TIME_DISP_FORMAT; // 0x10
	protected static bool isDuringStartup; // 0x18
	private bool isInitializingData; // 0x18
	public SceneList.Type scenetype; // 0x1C
	public AvalonSceneManager AvalonSceneManager; // 0x20
	public GameObject debugInfoRootObject; // 0x28
	public UILabel statusLabel; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC54BB8 Offset: 0xC54BB8 VA: 0xC54BB8
	[DebuggerBrowsableAttribute] // RVA: 0xC54BB8 Offset: 0xC54BB8 VA: 0xC54BB8
	private AvalonVideoPlayer <videoPlayer>k__BackingField; // 0x38
	protected bool isReadAuth; // 0x40
	protected bool isReadGameData; // 0x41
	protected bool isPlayLogo; // 0x42
	protected bool isErrorDialog; // 0x43
	private readonly int downloadParallelMax; // 0x44
	protected bool IsQuitDialogOpen; // 0x48
	protected bool IsQuitFlag; // 0x49
	protected bool _IsInitialized; // 0x4A

	// Properties
	public AvalonVideoPlayer videoPlayer { get; set; }
	public static int DownloadParallelMax { get; }
	public static bool IsDuringStartup { get; }

	// Methods

	// RVA: 0x2BA6F9C Offset: 0x2BA6F9C VA: 0x2BA6F9C
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC995C Offset: 0xCC995C VA: 0xCC995C
	// RVA: 0x2BA6FF4 Offset: 0x2BA6FF4 VA: 0x2BA6FF4
	public AvalonVideoPlayer get_videoPlayer() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC996C Offset: 0xCC996C VA: 0xCC996C
	// RVA: 0x2BA6FFC Offset: 0x2BA6FFC VA: 0x2BA6FFC
	private void set_videoPlayer(AvalonVideoPlayer value) { }

	// RVA: 0x2BA7004 Offset: 0x2BA7004 VA: 0x2BA7004
	public static int get_DownloadParallelMax() { }

	// RVA: 0x2BA7060 Offset: 0x2BA7060 VA: 0x2BA7060
	public static bool get_IsDuringStartup() { }

	// RVA: 0x2BA70C8 Offset: 0x2BA70C8 VA: 0x2BA70C8
	public static void CompletionStartup() { }

	// RVA: 0x2BA7130 Offset: 0x2BA7130 VA: 0x2BA7130
	public static void RebootCacheClear() { }

	// RVA: 0x2BA71E0 Offset: 0x2BA71E0 VA: 0x2BA71E0
	protected void Awake() { }

	// RVA: 0x2BA7280 Offset: 0x2BA7280 VA: 0x2BA7280
	private void Start() { }

	// RVA: 0x2BA7788 Offset: 0x2BA7788 VA: 0x2BA7788
	private void createMovieObj() { }

	// RVA: 0x2BA7994 Offset: 0x2BA7994 VA: 0x2BA7994
	public void reboot(bool isLogin = False) { }

	// RVA: 0x2BA7460 Offset: 0x2BA7460 VA: 0x2BA7460
	private void AdManagerInitializeErrorLogOutputRatio(string errorText, string exceptionMessage, float ratio) { }

	[DebuggerHiddenAttribute] // RVA: 0xCC997C Offset: 0xCC997C VA: 0xCC997C
	// RVA: 0x2BA78DC Offset: 0x2BA78DC VA: 0x2BA78DC
	private IEnumerator startCheckAll(bool isReboot, bool isLogin) { }

	// RVA: 0x2BA7D34 Offset: 0x2BA7D34 VA: 0x2BA7D34
	public void startUpCacheClear() { }

	// RVA: 0x2BA7D94 Offset: 0x2BA7D94 VA: 0x2BA7D94
	public void titleCacheClear() { }

	// RVA: 0x2BA7E94 Offset: 0x2BA7E94 VA: 0x2BA7E94
	protected void callbackPlayLogo() { }

	// RVA: 0x2BA7EA0 Offset: 0x2BA7EA0 VA: 0x2BA7EA0
	protected void EndLogDialog(bool isDecide) { }

	// RVA: 0x2BA7EA8 Offset: 0x2BA7EA8 VA: 0x2BA7EA8
	protected void EndRetryDialog(bool isDecide) { }

	// RVA: 0x2BA7EBC Offset: 0x2BA7EBC VA: 0x2BA7EBC
	protected void EndQuitDialog(bool isDecide) { }

	// RVA: 0x2BA7EC4 Offset: 0x2BA7EC4 VA: 0x2BA7EC4
	protected void EndDifferentCreateUserServerDialog(bool isDecide) { }

	// RVA: 0x2BA7F30 Offset: 0x2BA7F30 VA: 0x2BA7F30
	protected void callbackAccountRegist(string result) { }

	// RVA: 0x2BA7F3C Offset: 0x2BA7F3C VA: 0x2BA7F3C
	protected void callbackTopGameData(string result) { }

	// RVA: 0x2BA7F48 Offset: 0x2BA7F48 VA: 0x2BA7F48
	protected void requestLogin() { }

	// RVA: 0x2BA7FF0 Offset: 0x2BA7FF0 VA: 0x2BA7FF0
	protected void callbackTopLogin(string result) { }

	// RVA: 0x2BA8114 Offset: 0x2BA8114 VA: 0x2BA8114
	protected void callbackTopHome(string result) { }

	// RVA: 0x2BA81B4 Offset: 0x2BA81B4 VA: 0x2BA81B4
	protected void requestTerminalLogin() { }

	// RVA: 0x2BA825C Offset: 0x2BA825C VA: 0x2BA825C
	protected void callbackTerminalTopLogin(string result) { }

	// RVA: 0x2BA837C Offset: 0x2BA837C VA: 0x2BA837C
	protected void callbackTerminalTopHome(string result) { }

	// RVA: 0x2BA8418 Offset: 0x2BA8418 VA: 0x2BA8418
	protected bool IsInitialized() { }

	// RVA: 0x2BA8480 Offset: 0x2BA8480 VA: 0x2BA8480
	protected bool IsLoading() { }

	// RVA: 0x2BA8548 Offset: 0x2BA8548 VA: 0x2BA8548
	private void Update() { }

	// RVA: 0x2BA857C Offset: 0x2BA857C VA: 0x2BA857C
	public void BuildInfoOff() { }

	// RVA: 0x2BA863C Offset: 0x2BA863C VA: 0x2BA863C
	public void BuildInfoOn(bool boot = False) { }

	// RVA: 0x2BA8640 Offset: 0x2BA8640 VA: 0x2BA8640
	public void BuildInfoDisp(bool boot = False) { }

	[RuntimeInitializeOnLoadMethodAttribute] // RVA: 0xCC998C Offset: 0xCC998C VA: 0xCC998C
	// RVA: 0x2BA86AC Offset: 0x2BA86AC VA: 0x2BA86AC
	public static void OnRuntimeMethodLoad() { }

	// RVA: 0x2BA86E8 Offset: 0x2BA86E8 VA: 0x2BA86E8
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC429E4 Offset: 0xC429E4 VA: 0xC429E4
private sealed class ManagementManager.<startCheckAll>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6507
{
	// Fields
	internal bool isReboot; // 0x10
	internal NetworkManager.ReadResult <readResult>__0; // 0x14
	internal long <freeSize1>__1; // 0x18
	internal long <freeSize2>__1; // 0x20
	internal long <freeSize>__1; // 0x28
	internal AccountRegistRequest <request>__2; // 0x30
	internal bool <isCacheCheck>__0; // 0x38
	internal DataManager.ReadMasterVersionResult <readMasterVersionResult>__4; // 0x3C
	internal TopGameDataRequest <request>__4; // 0x40
	internal WaitForEndOfFrame <wait>__4; // 0x48
	internal DataManager.ReadMasterDataResult <readMasterDataResult>__5; // 0x50
	internal DataManager.UpdateMasterDataResult <updateMasterResult>__4; // 0x54
	internal long <size>__6; // 0x58
	internal bool <isLoad>__0; // 0x60
	internal long <allSize>__7; // 0x68
	internal long <size>__8; // 0x70
	internal long <allSize>__9; // 0x78
	internal bool <isUnityIapAvailable>__0; // 0x80
	internal bool isLogin; // 0x81
	internal ManagementManager $this; // 0x88
	internal object $current; // 0x90
	internal bool $disposing; // 0x98
	internal int $PC; // 0x9C
	private ManagementManager.<startCheckAll>c__Iterator0.<startCheckAll>c__AnonStorey2 $locvar0; // 0xA0

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8DE0 Offset: 0xCD8DE0 VA: 0xCD8DE0
	// RVA: 0x2BA7D2C Offset: 0x2BA7D2C VA: 0x2BA7D2C
	public void .ctor() { }

	// RVA: 0x2BA877C Offset: 0x2BA877C VA: 0x2BA877C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8DF0 Offset: 0xCD8DF0 VA: 0xCD8DF0
	// RVA: 0x2BAA970 Offset: 0x2BAA970 VA: 0x2BAA970 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8E00 Offset: 0xCD8E00 VA: 0xCD8E00
	// RVA: 0x2BAA978 Offset: 0x2BAA978 VA: 0x2BAA978 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8E10 Offset: 0xCD8E10 VA: 0xCD8E10
	// RVA: 0x2BAA980 Offset: 0x2BAA980 VA: 0x2BAA980 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8E20 Offset: 0xCD8E20 VA: 0xCD8E20
	// RVA: 0x2BAA994 Offset: 0x2BAA994 VA: 0x2BAA994 Slot: 6
	public void Reset() { }
}

// Namespace: 
private sealed class ManagementManager.<startCheckAll>c__Iterator0.<startCheckAll>c__AnonStorey2 // TypeDefIndex: 6508
{
	// Fields
	internal bool isDecide; // 0x10
	internal bool confirmed; // 0x11
	internal ManagementManager.<startCheckAll>c__Iterator0 <>f__ref$0; // 0x18

	// Methods

	// RVA: 0x2BAA968 Offset: 0x2BAA968 VA: 0x2BAA968
	public void .ctor() { }

	// RVA: 0x2BAA9FC Offset: 0x2BAA9FC VA: 0x2BAA9FC
	internal void <>m__0(bool flag) { }
}

// Namespace: 
private sealed class ManagementManager.<startCheckAll>c__Iterator0.<startCheckAll>c__AnonStorey2.<startCheckAll>c__AnonStorey1 // TypeDefIndex: 6509
{
	// Fields
	internal bool flag; // 0x10
	internal ManagementManager.<startCheckAll>c__Iterator0.<startCheckAll>c__AnonStorey2 <>f__ref$2; // 0x18

	// Methods

	// RVA: 0x2BAAAEC Offset: 0x2BAAAEC VA: 0x2BAAAEC
	public void .ctor() { }

	// RVA: 0x2BAAAF4 Offset: 0x2BAAAF4 VA: 0x2BAAAF4
	internal void <>m__0() { }
}

// Namespace: 
public class ManagerConfig // TypeDefIndex: 6510
{
	// Fields
	public static readonly string AppVer; // 0x0
	public static readonly string verCode; // 0x8
	public static readonly string AppBuildDate; // 0x10
	public static readonly string SaveDataVer; // 0x18
	public static readonly string MasterDataCacheVer; // 0x20
	public static readonly float TIMEOUT; // 0x28
	public static readonly float GAME_DATA_TIMEOUT; // 0x2C
	public static readonly float WORK_TIME; // 0x30
	public static readonly float SLOW_LOAD_WAIT_TIME; // 0x34
	public static readonly float SLOW_CONNECT_WAIT_TIME; // 0x38
	public static readonly long SERVER_TIME_OVER_LIMIT; // 0x40
	public static readonly float DOWNLOAD_RETRY_DELAY_TIME; // 0x48
	public static readonly int RETRY_COUNT; // 0x4C
	public static readonly int WIDTH; // 0x50
	public static readonly int WIDTH_21_9; // 0x54
	public static readonly int HEIGHT; // 0x58
	public static readonly long LIMIT_FREE_SIZE; // 0x60
	public static readonly float MINIMUM_ENABLE_ALPHA; // 0x68
	public static readonly string AndroidPackageName; // 0x70
	public static readonly string iOSApplicationID; // 0x78
	public static readonly string PlatformName; // 0x80
	public static readonly bool ReleaseNetworkSecurity; // 0x88
	public static readonly string ReleaseGameServerAddress; // 0x90
	public static readonly string ReleaseDataServerAddress; // 0x98
	public static readonly string ReleaseWebServerAddress; // 0xA0
	public static readonly bool ReviewNetworkSecurity; // 0xA8
	public static readonly string ReviewGameServerAddress; // 0xB0
	public static readonly string ReviewDataServerAddress; // 0xB8
	public static readonly string ReviewWebServerAddress; // 0xC0
	public static readonly bool StagingNetworkSecurity; // 0xC8
	public static readonly string StagingGameServerAddress; // 0xD0
	public static readonly string StagingDataServerAddress; // 0xD8
	public static readonly string StagingWebServerAddress; // 0xE0
	public static readonly bool GameCloneNetworkSecurity; // 0xE8
	public static readonly string GameCloneGameServerAddress; // 0xF0
	public static readonly string GameCloneDataServerAddress; // 0xF8
	public static readonly string GameCloneWebServerAddress; // 0x100
	public static readonly bool ReleaseCloneNetworkSecurity; // 0x108
	public static readonly string ReleaseCloneGameServerAddress; // 0x110
	public static readonly string ReleaseCloneDataServerAddress; // 0x118
	public static readonly string ReleaseCloneWebServerAddress; // 0x120
