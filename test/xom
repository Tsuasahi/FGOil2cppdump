
// Namespace: 
public enum ServantEntity.FlagKind // TypeDefIndex: 7210
{
	// Fields
	public int value__; // 0x0
	public const ServantEntity.FlagKind ONLY_USE_FOR_NPC = 1;
	public const ServantEntity.FlagKind SVT_EQUIP_FRIEND_SHIP = 2;
	public const ServantEntity.FlagKind IGNORE_COMBINE_LIMIT_SPECIAL = 3;
	public const ServantEntity.FlagKind SVT_EQUIP_EXP = 4;
	public const ServantEntity.FlagKind SVT_EQUIP_CHOCOLATE = 5;
}

// Namespace: 
public enum ServantEntity.FlagField // TypeDefIndex: 7211
{
	// Fields
	public int value__; // 0x0
	public const ServantEntity.FlagField ONLY_USE_FOR_NPC = 2;
	public const ServantEntity.FlagField SVT_EQUIP_FRIEND_SHIP = 4;
	public const ServantEntity.FlagField IGNORE_COMBINE_LIMIT_SPECIAL = 8;
	public const ServantEntity.FlagField SVT_EQUIP_EXP = 16;
	public const ServantEntity.FlagField SVT_EQUIP_CHOCOLATE = 32;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEED0 Offset: 0xCAEED0 VA: 0xCAEED0
private sealed class ServantEntity.<GetScript>c__AnonStorey0 // TypeDefIndex: 7212
{
	// Fields
	internal Dictionary<string, object> result; // 0x10

	// Methods

	// RVA: 0x2011E30 Offset: 0x2011E30 VA: 0x2011E30
	public void .ctor() { }

	// RVA: 0x2014078 Offset: 0x2014078 VA: 0x2014078
	internal void <>m__0(KeyValuePair<string, object> x) { }
}

// Namespace: 
public class ServantExceedEntity : DataEntityBase<string> // TypeDefIndex: 7213
{
	// Fields
	private readonly string[] frameCardFileList; // 0x10
	public int rarity; // 0x18
	public int exceedCount; // 0x1C
	public int qp; // 0x20
	public int addLvMax; // 0x24
	public int frameType; // 0x28
	public int rarityIcon; // 0x2C
	public int consumeId; // 0x30
	public int objectNum; // 0x34

	// Methods

	// RVA: 0x2019830 Offset: 0x2019830 VA: 0x2019830
	public void .ctor() { }

	// RVA: 0x2019B30 Offset: 0x2019B30 VA: 0x2019B30 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x2019B40 Offset: 0x2019B40 VA: 0x2019B40
	public static string CreatePK(int rarity, int exceedCount) { }

	// RVA: 0x2019B50 Offset: 0x2019B50 VA: 0x2019B50
	public string getFrameCardPrefix() { }
}

// Namespace: 
public enum ServantExceedEntity.FRAMETYPE // TypeDefIndex: 7214
{
	// Fields
	public int value__; // 0x0
	public const ServantExceedEntity.FRAMETYPE BLACK = 0;
	public const ServantExceedEntity.FRAMETYPE BRONZE = 1;
	public const ServantExceedEntity.FRAMETYPE SILVER = 2;
	public const ServantExceedEntity.FRAMETYPE GOLD = 3;
	public const ServantExceedEntity.FRAMETYPE FRAME_0801 = 4;
	public const ServantExceedEntity.FRAMETYPE FRAME_0802 = 5;
	public const ServantExceedEntity.FRAMETYPE FRAME_0803 = 6;
	public const ServantExceedEntity.FRAMETYPE FRAME_0804 = 7;
}

// Namespace: 
public class ServantExceedMaster : DataMasterBase<ServantExceedMaster, ServantExceedEntity, string> // TypeDefIndex: 7215
{
	// Methods

	// RVA: 0x2019BA0 Offset: 0x2019BA0 VA: 0x2019BA0
	public void .ctor() { }

	// RVA: 0x2019BF4 Offset: 0x2019BF4 VA: 0x2019BF4
	public ServantExceedEntity GetEntity(int rarity, int exceedCount) { }

	// RVA: 0x2019C68 Offset: 0x2019C68 VA: 0x2019C68
	public bool TryGetEntity(out ServantExceedEntity entity, int rarity, int exceedCount) { }

	// RVA: 0x2019CEC Offset: 0x2019CEC VA: 0x2019CEC
	public ServantExceedEntity getEntityFromId(int rarity, int exceedCount) { }

	// RVA: 0x2019E40 Offset: 0x2019E40 VA: 0x2019E40
	public ServantExceedEntity getEntity(int svtId, int limitCount, int exceedCount) { }

	// RVA: 0x2019F08 Offset: 0x2019F08 VA: 0x2019F08
	public int GetFrameType(int rarity, int exceedCount) { }

	// RVA: 0x2019FAC Offset: 0x2019FAC VA: 0x2019FAC
	public int GetFrameType(int svtId, int limitCount, int exceedCount) { }

	// RVA: 0x201A1C4 Offset: 0x201A1C4 VA: 0x201A1C4
	public int GetFrameType(out int rarity, int svtId, int limitCount, int exceedCount) { }

	// RVA: 0x201A294 Offset: 0x201A294 VA: 0x201A294
	public int GetRarity(int svtId) { }

	// RVA: 0x201A070 Offset: 0x201A070 VA: 0x201A070
	private int GetRarity(int svtId, int limitCount) { }

	// RVA: 0x201A29C Offset: 0x201A29C VA: 0x201A29C
	public int GetRarityIcon(int rarity, int exceedCount, int defValue = 0) { }
}

// Namespace: 
public class ServantExpEntity : DataEntityBase<string> // TypeDefIndex: 7216
{
	// Fields
	public int type; // 0x10
	public int lv; // 0x14
	public int exp; // 0x18
	public int curve; // 0x1C

	// Methods

	// RVA: 0x201A2C8 Offset: 0x201A2C8 VA: 0x201A2C8
	public void .ctor() { }

	// RVA: 0x201A318 Offset: 0x201A318 VA: 0x201A318 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x201A328 Offset: 0x201A328 VA: 0x201A328
	public static string CreatePK(int type, int lv) { }
}

// Namespace: 
public class ServantExpMaster : DataMasterBase<ServantExpMaster, ServantExpEntity, string> // TypeDefIndex: 7217
{
	// Methods

	// RVA: 0x201A338 Offset: 0x201A338 VA: 0x201A338
	public void .ctor() { }

	// RVA: 0x201A38C Offset: 0x201A38C VA: 0x201A38C
	public ServantExpEntity GetEntity(int type, int lv) { }

	// RVA: 0x201A400 Offset: 0x201A400 VA: 0x201A400
	public bool TryGetEntity(out ServantExpEntity entity, int type, int lv) { }

	// RVA: 0x201A484 Offset: 0x201A484 VA: 0x201A484
	public int getLevel(int exp, int type, int max_lv, int start_lv) { }
}

// Namespace: 
public class ServantFilterEntity : DataEntityBase<int> // TypeDefIndex: 7218
{
	// Fields
	public int id; // 0x10
	public ObscuredInt[] svtIds; // 0x18
	public string name; // 0x20
	public int priority; // 0x28
	public long startedAt; // 0x30
	public long endedAt; // 0x38

	// Methods

	// RVA: 0x1C0EEA4 Offset: 0x1C0EEA4 VA: 0x1C0EEA4
	public void .ctor() { }

	// RVA: 0x1C0EEF4 Offset: 0x1C0EEF4 VA: 0x1C0EEF4 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1C0EEFC Offset: 0x1C0EEFC VA: 0x1C0EEFC
	public bool IsEnable(long nowTime = 0) { }

	// RVA: 0x1C0EFA4 Offset: 0x1C0EFA4 VA: 0x1C0EFA4
	public bool IsEnableServant(ObscuredInt svtId) { }
}

// Namespace: 
public class ServantFilterMaster : DataMasterBase<ServantFilterMaster, ServantFilterEntity, int> // TypeDefIndex: 7219
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1BE8 Offset: 0xCC1BE8 VA: 0xCC1BE8
	private static Comparison<ServantFilterEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1C0F0CC Offset: 0x1C0F0CC VA: 0x1C0F0CC
	public void .ctor() { }

	// RVA: 0x1C0F120 Offset: 0x1C0F120 VA: 0x1C0F120
	public int[] getEnableIdList() { }

	// RVA: 0x1C0F414 Offset: 0x1C0F414 VA: 0x1C0F414
	public bool IsEnableServant(ObscuredInt svtId, int id) { }

	// RVA: 0x1C0F4A0 Offset: 0x1C0F4A0 VA: 0x1C0F4A0
	public bool IsEnableServant(ObscuredInt svtId, int[] ids) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37DBC Offset: 0xD37DBC VA: 0xD37DBC
	// RVA: 0x1C0F588 Offset: 0x1C0F588 VA: 0x1C0F588
	private static int <getEnableIdList>m__0(ServantFilterEntity a, ServantFilterEntity b) { }
}

// Namespace: 
public class ServantFlagEntity : DataEntityBase<string> // TypeDefIndex: 7220
{
	// Fields
	public int svtId; // 0x10
	public int flagId; // 0x14
	public int priority; // 0x18
	public int flagType; // 0x1C
	public int targetId; // 0x20
	public int[] args; // 0x28

	// Methods

	// RVA: 0x1C127A8 Offset: 0x1C127A8 VA: 0x1C127A8
	public void .ctor() { }

	// RVA: 0x1C127F8 Offset: 0x1C127F8 VA: 0x1C127F8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C12808 Offset: 0x1C12808 VA: 0x1C12808
	public static string CreatePK(int svtId, int flagId) { }
}

// Namespace: 
public enum ServantFlagEntity.SvtScriptFlagType // TypeDefIndex: 7221
{
	// Fields
	public int value__; // 0x0
	public const ServantFlagEntity.SvtScriptFlagType SECRET_TREASURE_DEVICE_GET = 1;
}

// Namespace: 
public class ServantFlagMaster : DataMasterBase<ServantFlagMaster, ServantFlagEntity, string> // TypeDefIndex: 7222
{
	// Methods

	// RVA: 0x1C12818 Offset: 0x1C12818 VA: 0x1C12818
	public void .ctor() { }

	// RVA: 0x1C1286C Offset: 0x1C1286C VA: 0x1C1286C
	public ServantFlagEntity GetEntity(int svtId, int flagId) { }

	// RVA: 0x1C128E0 Offset: 0x1C128E0 VA: 0x1C128E0
	public bool TryGetEntity(out ServantFlagEntity entity, int svtId, int flagId) { }

	// RVA: 0x1C12964 Offset: 0x1C12964 VA: 0x1C12964
	public int getBeforeEnhanceTdId(int svtId, int flagId) { }

	// RVA: 0x1C129F4 Offset: 0x1C129F4 VA: 0x1C129F4
	public ServantFlagEntity getEntity(int svtId, int flagType) { }
}

// Namespace: 
public class ServantFlagReleaseEntity : DataEntityBase<string> // TypeDefIndex: 7223
{
	// Fields
	public int svtId; // 0x10
	public int flagId; // 0x14
	public int idx; // 0x18
	public int condGroup; // 0x1C
	public int condType; // 0x20
	public int targetId; // 0x24
	public int value; // 0x28

	// Methods

	// RVA: 0x1C12B10 Offset: 0x1C12B10 VA: 0x1C12B10
	public void .ctor() { }

	// RVA: 0x1C12B60 Offset: 0x1C12B60 VA: 0x1C12B60 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C12B74 Offset: 0x1C12B74 VA: 0x1C12B74
	public static string CreatePK(int svtId, int flagId, int idx) { }
}

// Namespace: 
public class ServantFlagReleaseMaster : DataMasterBase<ServantFlagReleaseMaster, ServantFlagReleaseEntity, string> // TypeDefIndex: 7224
{
	// Methods

	// RVA: 0x1C12B88 Offset: 0x1C12B88 VA: 0x1C12B88
	public void .ctor() { }

	// RVA: 0x1C12BDC Offset: 0x1C12BDC VA: 0x1C12BDC
	public ServantFlagReleaseEntity GetEntity(int svtId, int flagId, int idx) { }

	// RVA: 0x1C12C60 Offset: 0x1C12C60 VA: 0x1C12C60
	public bool TryGetEntity(out ServantFlagReleaseEntity entity, int svtId, int flagId, int idx) { }

	// RVA: 0x1C12CEC Offset: 0x1C12CEC VA: 0x1C12CEC
	public bool isSecretTreasureDevice(int svtId) { }

	// RVA: 0x1C12D14 Offset: 0x1C12D14 VA: 0x1C12D14
	public bool isSecretTreasureDevice(int svtId, out ServantFlagEntity svtFlagEntity) { }

	// RVA: 0x1C1342C Offset: 0x1C1342C VA: 0x1C1342C
	public bool checkTresureDeviceEffectFlag(int svtId, int flagId) { }
}

// Namespace: 
public class ServantGroupEntity : DataEntityBase<string> // TypeDefIndex: 7225
{
	// Fields
	public int id; // 0x10
	public int svtId; // 0x14

	// Methods

	// RVA: 0x1C17C50 Offset: 0x1C17C50 VA: 0x1C17C50
	public void .ctor() { }

	// RVA: 0x1C17CA0 Offset: 0x1C17CA0 VA: 0x1C17CA0
	public int getServantGroupId() { }

	// RVA: 0x1C17CA8 Offset: 0x1C17CA8 VA: 0x1C17CA8
	public int getServantId() { }

	// RVA: 0x1C17CB0 Offset: 0x1C17CB0 VA: 0x1C17CB0 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C17CC0 Offset: 0x1C17CC0 VA: 0x1C17CC0
	public static string CreatePK(int id, int svtId) { }
}

// Namespace: 
public class ServantGroupMaster : DataMasterBase<ServantGroupMaster, ServantGroupEntity, string> // TypeDefIndex: 7226
{
	// Methods

	// RVA: 0x1C17CD0 Offset: 0x1C17CD0 VA: 0x1C17CD0
	public void .ctor() { }

	// RVA: 0x1C17D24 Offset: 0x1C17D24 VA: 0x1C17D24
	public ServantGroupEntity GetEntity(int id, int svtId) { }

	// RVA: 0x1C17D98 Offset: 0x1C17D98 VA: 0x1C17D98
	public bool TryGetEntity(out ServantGroupEntity entity, int id, int svtId) { }

	// RVA: 0x1C17E1C Offset: 0x1C17E1C VA: 0x1C17E1C
	public ServantGroupEntity[] getEntityListById(int groupId) { }

	// RVA: 0x1C17F94 Offset: 0x1C17F94 VA: 0x1C17F94
	public ServantGroupEntity[] getListByServantID(int svt_id) { }
}

// Namespace: 
public class ServantIndividualityEntity : DataEntityBase<string> // TypeDefIndex: 7227
{
	// Fields
	public int svtId; // 0x10
	public int idx; // 0x14
	public int limitCount; // 0x18
	public int[] individuality; // 0x20
	public int condType; // 0x28
	public int condId; // 0x2C
	public int condNum; // 0x30

	// Methods

	// RVA: 0x1C18104 Offset: 0x1C18104 VA: 0x1C18104
	public void .ctor() { }

	// RVA: 0x1C18154 Offset: 0x1C18154 VA: 0x1C18154 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C18164 Offset: 0x1C18164 VA: 0x1C18164
	public static string CreatePK(int svtId, int idx) { }
}

// Namespace: 
public class ServantIndividualityMaster : DataMasterBase<ServantIndividualityMaster, ServantIndividualityEntity, string> // TypeDefIndex: 7228
{
	// Fields
	private static Dictionary<int, List<ServantIndividualityEntity>> individualityList; // 0x0

	// Methods

	// RVA: 0x1C18174 Offset: 0x1C18174 VA: 0x1C18174
	public void .ctor() { }

	// RVA: 0x1C181C8 Offset: 0x1C181C8 VA: 0x1C181C8
	public ServantIndividualityEntity GetEntity(int svtId, int idx) { }

	// RVA: 0x1C1823C Offset: 0x1C1823C VA: 0x1C1823C
	public bool TryGetEntity(out ServantIndividualityEntity entity, int svtId, int idx) { }

	// RVA: 0x1C182C0 Offset: 0x1C182C0 VA: 0x1C182C0
	public static int[] GetIndividualityList(int svtId, int limitCount) { }

	// RVA: 0x1C18634 Offset: 0x1C18634 VA: 0x1C18634 Slot: 7
	public override void Clear() { }

	// RVA: 0x1C186C8 Offset: 0x1C186C8 VA: 0x1C186C8 Slot: 6
	public override bool preProcess() { }

	// RVA: 0x1C18B74 Offset: 0x1C18B74 VA: 0x1C18B74
	private static void .cctor() { }
}

// Namespace: 
public class ServantLimitAddEntity : DataEntityBase<string> // TypeDefIndex: 7229
{
	// Fields
	public int svtId; // 0x10
	public int limitCount; // 0x14
	public int battleCharaId; // 0x18
	public int battleCharaLimitCount; // 0x1C
	public int fileConvertLimitCount; // 0x20
	public int battleCharaOffsetX; // 0x24
	public int battleCharaOffsetY; // 0x28
	public int battleCharaOffsetZ; // 0x2C
	public int svtVoiceId; // 0x30
	public int voicePrefix; // 0x34
	public int[] individuality; // 0x38
	public Dictionary<string, object> script; // 0x40
	public const int INVALID_WEAPON_GROUP_VALUE = -1;
	[CompilerGeneratedAttribute] // RVA: 0xCC1BF8 Offset: 0xCC1BF8 VA: 0xCC1BF8
	private static Converter<object, int> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1C1E8B4 Offset: 0x1C1E8B4 VA: 0x1C1E8B4
	public void .ctor() { }

	// RVA: 0x1C1E904 Offset: 0x1C1E904 VA: 0x1C1E904 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C1E914 Offset: 0x1C1E914 VA: 0x1C1E914
	public static string CreatePK(int svtId, int limitCount) { }

	// RVA: 0x1C1E924 Offset: 0x1C1E924 VA: 0x1C1E924
	private object getScriptObject(string key) { }

	// RVA: 0x1C1E9A0 Offset: 0x1C1E9A0 VA: 0x1C1E9A0
	public bool checkScript(string key) { }

	// RVA: 0x1C1E9BC Offset: 0x1C1E9BC VA: 0x1C1E9BC
	public int getScript(string key, int defVal = 0) { }

	// RVA: 0x1C1EA94 Offset: 0x1C1EA94 VA: 0x1C1EA94
	public float getScriptFloat(string key, float defVal = 0) { }

	// RVA: 0x1C1EB78 Offset: 0x1C1EB78 VA: 0x1C1EB78
	public int[] getScriptIntArrayParam(string key, int[] defVal) { }

	// RVA: 0x1C1ED18 Offset: 0x1C1ED18 VA: 0x1C1ED18
	public int GetWeaponGroup() { }

	// RVA: 0x1C1ED6C Offset: 0x1C1ED6C VA: 0x1C1ED6C
	public int GetWeaponEfect() { }

	// RVA: 0x1C1EDC0 Offset: 0x1C1EDC0 VA: 0x1C1EDC0
	public int GetLimitCountUpResultServantLimitCount() { }

	// RVA: 0x1C1EE14 Offset: 0x1C1EE14 VA: 0x1C1EE14
	public bool IsValidWeaponGroup(int checkValue) { }

	// RVA: 0x1C1EE20 Offset: 0x1C1EE20 VA: 0x1C1EE20
	public string GetOverwriteTDName() { }

	// RVA: 0x1C1EF08 Offset: 0x1C1EF08 VA: 0x1C1EF08
	public string GetOverwriteTDRuby() { }

	// RVA: 0x1C1EFF0 Offset: 0x1C1EFF0 VA: 0x1C1EFF0
	public string GetOverwriteTDFileName() { }

	// RVA: 0x1C1F0D8 Offset: 0x1C1F0D8 VA: 0x1C1F0D8
	public string GetOverwriteServantName() { }

	// RVA: 0x1C1F1C0 Offset: 0x1C1F1C0 VA: 0x1C1F1C0
	public string GetOverwriteServantShortName() { }

	// RVA: 0x1C1F2A8 Offset: 0x1C1F2A8 VA: 0x1C1F2A8
	public string GetOverwriteServantBattleName() { }

	// RVA: 0x1C1F390 Offset: 0x1C1F390 VA: 0x1C1F390
	public string GetOverWriteTDRank() { }

	// RVA: 0x1C1F478 Offset: 0x1C1F478 VA: 0x1C1F478
	public string GetOverWriteTDTypeText() { }

	// RVA: 0x1C1F560 Offset: 0x1C1F560 VA: 0x1C1F560
	public int GetRandomGroupIndex() { }

	// RVA: 0x1C1F5F0 Offset: 0x1C1F5F0 VA: 0x1C1F5F0
	public bool ExistOverwriteTDInfo() { }

	// RVA: 0x1C1F6EC Offset: 0x1C1F6EC VA: 0x1C1F6EC
	public bool ExistOverwriteTDRank() { }

	// RVA: 0x1C1F770 Offset: 0x1C1F770 VA: 0x1C1F770
	public bool ExistOverwriteTDTypeText() { }

	[CompilerGeneratedAttribute] // RVA: 0xD37DCC Offset: 0xD37DCC VA: 0xD37DCC
	// RVA: 0x1C1F7F4 Offset: 0x1C1F7F4 VA: 0x1C1F7F4
	private static int <getScriptIntArrayParam>m__0(object x) { }
}

// Namespace: 
public class ServantLimitAddMaster : DataMasterBase<ServantLimitAddMaster, ServantLimitAddEntity, string> // TypeDefIndex: 7230
{
	// Fields
	public static readonly string KEY_SCRIPT_EFFECT_FOLDER; // 0x0
	protected ServantMaster servantMaster; // 0x48
	protected Dictionary<int, bool> isVoiceList; // 0x50

	// Methods

	// RVA: 0x1C1F870 Offset: 0x1C1F870 VA: 0x1C1F870
	public void .ctor() { }

	// RVA: 0x1C1F8EC Offset: 0x1C1F8EC VA: 0x1C1F8EC
	public ServantLimitAddEntity GetEntity(int svtId, int limitCount) { }

	// RVA: 0x1C1F960 Offset: 0x1C1F960 VA: 0x1C1F960
	public bool TryGetEntity(out ServantLimitAddEntity entity, int svtId, int limitCount) { }

	// RVA: 0x1C1F9E4 Offset: 0x1C1F9E4 VA: 0x1C1F9E4
	public static int getScriptIntValue(ServantLimitAddEntity limitAddEnt, string key, int defVal) { }

	// RVA: 0x1C1F9F4 Offset: 0x1C1F9F4 VA: 0x1C1F9F4 Slot: 6
	public override bool preProcess() { }

	// RVA: 0x1C1FAB8 Offset: 0x1C1FAB8 VA: 0x1C1FAB8
	public int getVoiceId(int svtId, int limitCount) { }

	// RVA: 0x1C1FBE0 Offset: 0x1C1FBE0 VA: 0x1C1FBE0
	public int getVoicePrefix(int svtId, int limitCount) { }

	// RVA: 0x1C1FCDC Offset: 0x1C1FCDC VA: 0x1C1FCDC
	public void getVoiceIndex(out int voiceId, out int voicePrefix, int svtId, int limitCount) { }

	// RVA: 0x1C1FE4C Offset: 0x1C1FE4C VA: 0x1C1FE4C
	public int[] getVoiceLimitCountList(int svtId, int maxLimitCount, int[] costumeIds) { }

	// RVA: 0x1C204CC Offset: 0x1C204CC VA: 0x1C204CC
	public string getBattleChrId(int svtId, int limitCount) { }

	// RVA: 0x1C205D4 Offset: 0x1C205D4 VA: 0x1C205D4
	public void getCostumeId(ref int svtId, ref int imageLimitCount) { }

	// RVA: 0x1C206FC Offset: 0x1C206FC VA: 0x1C206FC
	public string GetOverwriteTDName(int svtId, int dispLimitCount, string orginalTDName, int tdLv) { }

	// RVA: 0x1C209A8 Offset: 0x1C209A8 VA: 0x1C209A8
	public bool IsContainRadomGroupIndex(int svtId) { }

	// RVA: 0x1C20BA0 Offset: 0x1C20BA0 VA: 0x1C20BA0
	private static void .cctor() { }
}

// Namespace: 
public class ServantLimitEntity : DataEntityBase<string> // TypeDefIndex: 7231
{
	// Fields
	public int svtId; // 0x10
	public int limitCount; // 0x14
	public int rarity; // 0x18
	public int lvMax; // 0x1C
	public int weaponGroup; // 0x20
	public int hpBase; // 0x24
	public int hpMax; // 0x28
	public int atkBase; // 0x2C
	public int atkMax; // 0x30
	public int criticalWeight; // 0x34
	public int power; // 0x38
	public int defense; // 0x3C
	public int agility; // 0x40
	public int magic; // 0x44
	public int luck; // 0x48
	public int treasureDevice; // 0x4C
	public int policy; // 0x50
	public int personality; // 0x54
	public int deity; // 0x58
	public int stepProbability; // 0x5C
	public int weaponScale; // 0x60
	public int weaponColor; // 0x64
	public int effectFolder; // 0x68
	public string strParam; // 0x70

	// Methods

	// RVA: 0x1C20E00 Offset: 0x1C20E00 VA: 0x1C20E00
	public void .ctor() { }

	// RVA: 0x1C20E58 Offset: 0x1C20E58 VA: 0x1C20E58 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C20E68 Offset: 0x1C20E68 VA: 0x1C20E68
	public static string CreatePK(int svtId, int limitCount) { }

	// RVA: 0x1C20E78 Offset: 0x1C20E78 VA: 0x1C20E78
	public Color getWeaponColor() { }

	// RVA: 0x1C20ED8 Offset: 0x1C20ED8 VA: 0x1C20ED8
	public bool IsNeedChangeSaintGraphName() { }

	// RVA: 0x1C20F70 Offset: 0x1C20F70 VA: 0x1C20F70
	public int GetSaintGraphNameIndex(int defaultValue = -1) { }

	// RVA: 0x1C21050 Offset: 0x1C21050 VA: 0x1C21050
	public int GetAscensionAfterDialogId(int defaultValue = -1) { }
}

// Namespace: 
public class ServantLimitImageEntity : DataEntityBase<string> // TypeDefIndex: 7232
{
	// Fields
	public int svtId; // 0x10
	public int limitCount; // 0x14
	public int priority; // 0x18
	public int defaultLimitCount; // 0x1C
	public int condType; // 0x20
	public int condTargetId; // 0x24
	public int condNum; // 0x28

	// Methods

	// RVA: 0x1C21134 Offset: 0x1C21134 VA: 0x1C21134
	public void .ctor() { }

	// RVA: 0x1C21184 Offset: 0x1C21184 VA: 0x1C21184 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C21198 Offset: 0x1C21198 VA: 0x1C21198
	public static string CreatePK(int svtId, int limitCount, int priority) { }
}

// Namespace: 
public class ServantLimitImageMaster : DataMasterBase<ServantLimitImageMaster, ServantLimitImageEntity, string> // TypeDefIndex: 7233
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1C08 Offset: 0xCC1C08 VA: 0xCC1C08
	private static Comparison<ServantLimitImageEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1C211AC Offset: 0x1C211AC VA: 0x1C211AC
	public void .ctor() { }

	// RVA: 0x1C21200 Offset: 0x1C21200 VA: 0x1C21200
	public ServantLimitImageEntity GetEntity(int svtId, int limitCount, int priority) { }

	// RVA: 0x1C21284 Offset: 0x1C21284 VA: 0x1C21284
	public bool TryGetEntity(out ServantLimitImageEntity entity, int svtId, int limitCount, int priority) { }

	// RVA: 0x1C21310 Offset: 0x1C21310 VA: 0x1C21310
	public bool IsServantLimitCountSeal(int svtId, int limitCount) { }

	// RVA: 0x1C21338 Offset: 0x1C21338 VA: 0x1C21338
	public int GetServantLimitCountSealAfter(int svtId, int limitCount) { }

	// RVA: 0x1C21794 Offset: 0x1C21794 VA: 0x1C21794
	public int GetServantImageLimitSealAfter(int svtId, int limitCount) { }

	// RVA: 0x1C217DC Offset: 0x1C217DC VA: 0x1C217DC
	public bool IsLimitCountSealQuest(int questId) { }

	// RVA: 0x1C219E4 Offset: 0x1C219E4 VA: 0x1C219E4
	public int GetLimitCountSealQuestToSvtId(int questId) { }

	// RVA: 0x1C21C00 Offset: 0x1C21C00 VA: 0x1C21C00
	public string GetLimitCountSealedDialogMessage(int svtId, int limitCount) { }

	// RVA: 0x1C21D5C Offset: 0x1C21D5C VA: 0x1C21D5C
	public string GetLimitCountSealedServantName(int svtId, int limitCount) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37DDC Offset: 0xD37DDC VA: 0xD37DDC
	// RVA: 0x1C21F08 Offset: 0x1C21F08 VA: 0x1C21F08
	private static int <GetServantLimitCountSealAfter>m__0(ServantLimitImageEntity x, ServantLimitImageEntity y) { }
}

// Namespace: 
public class ServantLimitMaster : DataMasterBase<ServantLimitMaster, ServantLimitEntity, string> // TypeDefIndex: 7234
{
	// Methods

	// RVA: 0x1C21F4C Offset: 0x1C21F4C VA: 0x1C21F4C
	public void .ctor() { }

	// RVA: 0x1C21FA0 Offset: 0x1C21FA0 VA: 0x1C21FA0
	public ServantLimitEntity GetEntity(int svtId, int limitCount) { }

	// RVA: 0x1C22014 Offset: 0x1C22014 VA: 0x1C22014
	public bool TryGetEntity(out ServantLimitEntity entity, int svtId, int limitCount) { }

	// RVA: 0x1C22098 Offset: 0x1C22098 VA: 0x1C22098
	public int GetRewardRarityType(int svtId, int limitCount) { }
}

// Namespace: 
public class ServantLimitSpoilerProtectionEntity : DataEntityBase<string> // TypeDefIndex: 7235
{
	// Fields
	public int svtId; // 0x10
	public int limitCount; // 0x14
	public int commonReleaseId; // 0x18

	// Methods

	// RVA: 0x1C22140 Offset: 0x1C22140 VA: 0x1C22140
	public void .ctor() { }

	// RVA: 0x1C22190 Offset: 0x1C22190 VA: 0x1C22190 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C221A0 Offset: 0x1C221A0 VA: 0x1C221A0
	public static string CreatePK(int svtId, int limitCount) { }
}

// Namespace: 
public class ServantLimitSpoilerProtectionMaster : DataMasterBase<ServantLimitSpoilerProtectionMaster, ServantLimitSpoilerProtectionEntity, string> // TypeDefIndex: 7236
{
	// Methods

	// RVA: 0x1C221B0 Offset: 0x1C221B0 VA: 0x1C221B0
	public void .ctor() { }

	// RVA: 0x1C22204 Offset: 0x1C22204 VA: 0x1C22204
	public ServantLimitSpoilerProtectionEntity GetEntity(int svtId, int limitCount) { }

	// RVA: 0x1C22278 Offset: 0x1C22278 VA: 0x1C22278
	public bool TryGetEntity(out ServantLimitSpoilerProtectionEntity entity, int svtId, int limitCount) { }

	// RVA: 0x1C1D0C0 Offset: 0x1C1D0C0 VA: 0x1C1D0C0
	public int ChangeLimitCountBySpoilerProtection(ObscuredInt svtId, int limitCount) { }

	// RVA: 0x1C22428 Offset: 0x1C22428 VA: 0x1C22428
	public int[] GetSpoilerProtectionData(ObscuredInt svtId, int limitCount) { }

	// RVA: 0x1C222FC Offset: 0x1C222FC VA: 0x1C222FC
	public bool IsSpoilerLimitCount(ObscuredInt svtId, int limitCount) { }
}

// Namespace: 
public class ServantLvDetailEntity : DataEntityBase<string> // TypeDefIndex: 7237
{
	// Fields
	public int rarity; // 0x10
	public int lv; // 0x14
	public int frameType; // 0x18
	public int rarityIcon; // 0x1C

	// Methods

	// RVA: 0x1ECBFC4 Offset: 0x1ECBFC4 VA: 0x1ECBFC4
	public void .ctor() { }

	// RVA: 0x1ECC014 Offset: 0x1ECC014 VA: 0x1ECC014 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1ECC024 Offset: 0x1ECC024 VA: 0x1ECC024
	public static string CreatePK(int rarity, int lv) { }
}

// Namespace: 
public class ServantLvDetailMaster : DataMasterBase<ServantLvDetailMaster, ServantLvDetailEntity, string> // TypeDefIndex: 7238
{
	// Methods

	// RVA: 0x1ECC034 Offset: 0x1ECC034 VA: 0x1ECC034
	public void .ctor() { }

	// RVA: 0x1ECC088 Offset: 0x1ECC088 VA: 0x1ECC088
	public ServantLvDetailEntity GetEntity(int rarity, int lv) { }

	// RVA: 0x1ECC0FC Offset: 0x1ECC0FC VA: 0x1ECC0FC
	public bool TryGetEntity(out ServantLvDetailEntity entity, int rarity, int lv) { }

	// RVA: 0x1ECC180 Offset: 0x1ECC180 VA: 0x1ECC180
	public int GetFrameType(int rarity, int lv, int defType) { }

	// RVA: 0x1ECC1AC Offset: 0x1ECC1AC VA: 0x1ECC1AC
	public ServantLvDetailEntity GetHighestData(int rarity, int lv) { }

	// RVA: 0x1ECC3B4 Offset: 0x1ECC3B4 VA: 0x1ECC3B4
	public int GetRarityIcon(int rarity, int lv, int defRarityIcon) { }
}

// Namespace: 
public class ServantMaster : DataMasterBase<ServantMaster, ServantEntity, int> // TypeDefIndex: 7239
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1C18 Offset: 0xCC1C18 VA: 0xCC1C18
	private static Comparison<int> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC1C28 Offset: 0xCC1C28 VA: 0xCC1C28
	private static Comparison<int> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x1ECC3E0 Offset: 0x1ECC3E0 VA: 0x1ECC3E0
	public void .ctor() { }

	// RVA: 0x1ECC434 Offset: 0x1ECC434 VA: 0x1ECC434 Slot: 6
	public override bool preProcess() { }

	// RVA: 0x1ECC6BC Offset: 0x1ECC6BC VA: 0x1ECC6BC
	public Dictionary<int, int> GetLimitCountMaxList() { }

	// RVA: 0x1ECC8AC Offset: 0x1ECC8AC VA: 0x1ECC8AC
	public int[] GetCollectionList() { }

	// RVA: 0x1ECCA68 Offset: 0x1ECCA68 VA: 0x1ECCA68
	public int[] GetCollectionList(bool isEquip) { }

	// RVA: 0x1ECCD54 Offset: 0x1ECCD54 VA: 0x1ECCD54
	public void MargeServantVoiceId(Dictionary<int, bool> isVoiceList) { }

	// RVA: 0x1ECCF68 Offset: 0x1ECCF68 VA: 0x1ECCF68
	public int[] GetTargetClassMaterialSvtIdList(int classId) { }

	// RVA: 0x1ECD1FC Offset: 0x1ECD1FC VA: 0x1ECD1FC
	public int[] GetTargetClassStatusUpSvtIdList(int classId) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37DEC Offset: 0xD37DEC VA: 0xD37DEC
	// RVA: 0x1ECD48C Offset: 0x1ECD48C VA: 0x1ECD48C
	private static int <GetTargetClassMaterialSvtIdList>m__0(int a, int b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37DFC Offset: 0xD37DFC VA: 0xD37DFC
	// RVA: 0x1ECD494 Offset: 0x1ECD494 VA: 0x1ECD494
	private static int <GetTargetClassStatusUpSvtIdList>m__1(int a, int b) { }
}

// Namespace: 
public class ServantMaterialFolderEntity : DataEntityBase<int> // TypeDefIndex: 7240
{
	// Fields
	public int id; // 0x10
	public int priority; // 0x14
	public string name; // 0x18
	public int svtId; // 0x20
	public int condQuestId; // 0x24
	public int commonReleaseId; // 0x28

	// Methods

	// RVA: 0x1ECD49C Offset: 0x1ECD49C VA: 0x1ECD49C
	public void .ctor() { }

	// RVA: 0x1ECD4EC Offset: 0x1ECD4EC VA: 0x1ECD4EC Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class ServantMaterialFolderMaster : DataMasterBase<ServantMaterialFolderMaster, ServantMaterialFolderEntity, int> // TypeDefIndex: 7241
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1C38 Offset: 0xCC1C38 VA: 0xCC1C38
	private static Comparison<ServantMaterialFolderEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1ECD4F4 Offset: 0x1ECD4F4 VA: 0x1ECD4F4
	public void .ctor() { }

	// RVA: 0x1ECD548 Offset: 0x1ECD548 VA: 0x1ECD548
	public ServantMaterialFolderEntity[] GetEntityList(int id) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37E0C Offset: 0xD37E0C VA: 0xD37E0C
	// RVA: 0x1ECD764 Offset: 0x1ECD764 VA: 0x1ECD764
	private static int <GetEntityList>m__0(ServantMaterialFolderEntity a, ServantMaterialFolderEntity b) { }
}

// Namespace: 
public class ServantPassiveSkillEntity : DataEntityBase<string> // TypeDefIndex: 7242
{
	// Fields
	public int svtId; // 0x10
	public int num; // 0x14
	public int priority; // 0x18
	public int skillId; // 0x1C
	public int condQuestId; // 0x20
	public int condQuestPhase; // 0x24
	public int condLv; // 0x28
	public int condLimitCount; // 0x2C
	public int condFriendshipRank; // 0x30
	public int eventId; // 0x34
	public int flag; // 0x38
	public int commonReleaseId; // 0x3C
	public long startedAt; // 0x40
	public long endedAt; // 0x48

	// Methods

	// RVA: 0x1EDF4D4 Offset: 0x1EDF4D4 VA: 0x1EDF4D4
	public void .ctor() { }

	// RVA: 0x1EDF524 Offset: 0x1EDF524 VA: 0x1EDF524 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1EDF538 Offset: 0x1EDF538 VA: 0x1EDF538
	public static string CreatePK(int svtId, int num, int priority) { }

	// RVA: 0x1EDF54C Offset: 0x1EDF54C VA: 0x1EDF54C
	public int getServantID() { }

	// RVA: 0x1EDF554 Offset: 0x1EDF554 VA: 0x1EDF554
	public int getServantIdx() { }

	// RVA: 0x1EDF55C Offset: 0x1EDF55C VA: 0x1EDF55C
	public int getSkillId() { }

	// RVA: 0x1EDF564 Offset: 0x1EDF564 VA: 0x1EDF564
	public bool isUse(long userId, int svtLv, int limitCount, int dispLimitCount, int friendshipRank, int beforeClearQuestId = -1) { }

	// RVA: 0x1EDF9B0 Offset: 0x1EDF9B0 VA: 0x1EDF9B0
	public void getEffectExplanation(out int charge, out string title, out string explanation, int skillLv, bool isEquip = False) { }

	// RVA: 0x1EDFB28 Offset: 0x1EDFB28 VA: 0x1EDFB28
	public string getSkillName() { }

	// RVA: 0x1EDFBF4 Offset: 0x1EDFBF4 VA: 0x1EDFBF4
	public int getFriendPointUpVal(int skillLv) { }
}

// Namespace: 
public class ServantPassiveSkillMaster : DataMasterBase<ServantPassiveSkillMaster, ServantPassiveSkillEntity, string> // TypeDefIndex: 7243
{
	// Fields
	protected Dictionary<string, ServantPassiveSkillEntity[]> listCache; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xCC1C48 Offset: 0xCC1C48 VA: 0xCC1C48
	private static Comparison<ServantPassiveSkillEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1EDFCB0 Offset: 0x1EDFCB0 VA: 0x1EDFCB0
	public void .ctor() { }

	// RVA: 0x1EDFD2C Offset: 0x1EDFD2C VA: 0x1EDFD2C
	public ServantPassiveSkillEntity GetEntity(int svtId, int num, int priority) { }

	// RVA: 0x1EDFDB0 Offset: 0x1EDFDB0 VA: 0x1EDFDB0
	public bool TryGetEntity(out ServantPassiveSkillEntity entity, int svtId, int num, int priority) { }

	// RVA: 0x1EDFE3C Offset: 0x1EDFE3C VA: 0x1EDFE3C
	protected string getPriorityKey(int svtId, int num) { }

	// RVA: 0x1EDFEE4 Offset: 0x1EDFEE4 VA: 0x1EDFEE4 Slot: 6
	public override bool preProcess() { }

	// RVA: 0x1EE0440 Offset: 0x1EE0440 VA: 0x1EE0440
	public ServantPassiveSkillEntity getEntityFromId(int svtId, int num, int priority) { }

	// RVA: 0x1EE0710 Offset: 0x1EE0710 VA: 0x1EE0710
	public ServantPassiveSkillEntity[] getServantSkillList(int svtId) { }

	// RVA: 0x1EE088C Offset: 0x1EE088C VA: 0x1EE088C
	public ServantPassiveSkillEntity[] getEntityListFromIdNum(int svtId, int num) { }

	// RVA: 0x1EE0930 Offset: 0x1EE0930 VA: 0x1EE0930
	public ServantPassiveSkillEntity getUseEntity(int svtId, int num, long userId, int svtLv, int limitCount, int dispLimitCount, int friendshipRank, int beforeClearQuestId = -1) { }

	// RVA: 0x1EE0A00 Offset: 0x1EE0A00 VA: 0x1EE0A00
	public ServantPassiveSkillEntity[] getUseEntityList(int svtId, long userId, int svtLv, int limitCount, int dispLimitCount, int friendshipRank, int beforeClearQuestId = -1) { }

	// RVA: 0x1EE0BAC Offset: 0x1EE0BAC VA: 0x1EE0BAC
	public void getPassiveSkillInfo(out int[] idList, out string[] titleList, out string[] explanationList, int svtId, long userId, int svtLv, int limitCount, int dispLimitCount, int friendshipRank, int beforeClearQuestId = -1) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37E1C Offset: 0xD37E1C VA: 0xD37E1C
	// RVA: 0x1EE1148 Offset: 0x1EE1148 VA: 0x1EE1148
	private static int <preProcess>m__0(ServantPassiveSkillEntity a, ServantPassiveSkillEntity b) { }
}

// Namespace: 
public class ServantPassiveSkillReleaseEntity : DataEntityBase<string> // TypeDefIndex: 7244
{
	// Fields
	public int svtId; // 0x10
	public int num; // 0x14
	public int priority; // 0x18
	public int idx; // 0x1C
	public int condType; // 0x20
	public int condTargetId; // 0x24
	public int condNum; // 0x28
	public int condGroup; // 0x2C

	// Methods

	// RVA: 0x1EE1188 Offset: 0x1EE1188 VA: 0x1EE1188
	public void .ctor() { }

	// RVA: 0x1EE11D8 Offset: 0x1EE11D8 VA: 0x1EE11D8
	public static string getCreatePrimarykey(int svtId, int num, int priority, int idx) { }

