	// RVA: 0x13C9E00 Offset: 0x13C9E00 VA: 0x13C9E00
	public object GetScriptObj(string key) { }

	// RVA: 0x13C9E80 Offset: 0x13C9E80 VA: 0x13C9E80
	public int GetScriptInt(string key, int defVal = -1) { }

	// RVA: 0x13C9F58 Offset: 0x13C9F58 VA: 0x13C9F58
	public List<object> GetScriptObjList(string key) { }

	// RVA: 0x13CA030 Offset: 0x13CA030 VA: 0x13CA030
	public string GetScriptString(string key, string defVal = "") { }

	// RVA: 0x13CA100 Offset: 0x13CA100 VA: 0x13CA100
	public int[] GetScriptIntArray(string key, int[] defVal) { }

	// RVA: 0x13CA368 Offset: 0x13CA368 VA: 0x13CA368
	public int[] GetImageLimit() { }

	// RVA: 0x13CA3DC Offset: 0x13CA3DC VA: 0x13CA3DC
	public string GetCondTitle() { }

	// RVA: 0x13CA488 Offset: 0x13CA488 VA: 0x13CA488
	private static void .cctor() { }
}

// Namespace: 
public class ServantCommentMaster : DataMasterBase<ServantCommentMaster, ServantCommentEntity, string> // TypeDefIndex: 7213
{
	// Methods

	// RVA: 0x19F97F4 Offset: 0x19F97F4 VA: 0x19F97F4
	public void .ctor() { }

	// RVA: 0x19F9848 Offset: 0x19F9848 VA: 0x19F9848
	public ServantCommentEntity GetEntity(int svtId, int id, int priority) { }

	// RVA: 0x19F98EC Offset: 0x19F98EC VA: 0x19F98EC
	public bool TryGetEntity(out ServantCommentEntity entity, int svtId, int id, int priority) { }

	// RVA: 0x19F9998 Offset: 0x19F9998 VA: 0x19F9998
	public ServantCommentEntity[] GetEntityList(int svtId, CondType.Kind condType = 0) { }

	// RVA: 0x19F99B0 Offset: 0x19F99B0 VA: 0x19F99B0
	public ServantCommentEntity[] GetEntityList(int svtId, int imageLimitCount, CondType.Kind condType = 0, bool addCheck = False, bool overLimit = False) { }

	// RVA: 0x19F9EEC Offset: 0x19F9EEC VA: 0x19F9EEC
	public ServantCommentEntity[] GetEntityListWithImageList(int svtId, int imageLimitCount, CondType.Kind condType, bool addCheck = False) { }

	// RVA: 0x19FA4B8 Offset: 0x19FA4B8 VA: 0x19FA4B8
	public ServantCommentEntity[] GetOpenEntitiyList(int svtId) { }

	// RVA: 0x19FA89C Offset: 0x19FA89C VA: 0x19FA89C
	public void SetOpen(int svtId, int svtCommentId, int svtCommentPriority) { }

	// RVA: 0x19FA91C Offset: 0x19FA91C VA: 0x19FA91C
	public void SetOpen(int svtId, int[] svtCommentIdList, int[] svtCommentPriorityList) { }

	// RVA: 0x19FA99C Offset: 0x19FA99C VA: 0x19FA99C
	public bool IsNew(int svtId) { }

	// RVA: 0x19FAD28 Offset: 0x19FAD28 VA: 0x19FAD28
	public bool GetNewList(out int[] idList, out int[] priorityList, int svtId) { }

	// RVA: 0x19FB320 Offset: 0x19FB320 VA: 0x19FB320
	public List<int> GetServantListWithQuestClear(int questId, int questPhase) { }

	// RVA: 0x19FB6F4 Offset: 0x19FB6F4 VA: 0x19FB6F4
	public ServantCommentEntity[] GetServantListWithQuestClearAndImageLimit(int questId, int questPhase) { }

	// RVA: 0x19FBA54 Offset: 0x19FBA54 VA: 0x19FBA54
	public List<ServantCommentEntity> GetNewProfileEntities(int svtId) { }

	// RVA: 0x19FBE48 Offset: 0x19FBE48 VA: 0x19FBE48
	public bool IsOpenImageLimitProfile(int svtId, int limitCount) { }

	// RVA: 0x19FC15C Offset: 0x19FC15C VA: 0x19FC15C
	public static void OpenSaintGraphProfileChange(int svtId, int limitCount, ServantCommentMaster.ProfileChangeDecideDelegate decideAction, Action endAction) { }

	// RVA: 0x19FC580 Offset: 0x19FC580 VA: 0x19FC580
	public static void DefaultProfileChangeDecideAction(int svtId, int limitCount, bool isDecide, Action endAction) { }
}

// Namespace: 
public sealed class ServantCommentMaster.ProfileChangeDecideDelegate : MulticastDelegate // TypeDefIndex: 7214
{
	// Methods

	// RVA: 0x19FCCB8 Offset: 0x19FCCB8 VA: 0x19FCCB8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x19FCA34 Offset: 0x19FCA34 VA: 0x19FCA34 Slot: 11
	public virtual void Invoke(int svtid, int limitCount, bool isDecide, Action finishCallback) { }

	// RVA: 0x19FCCC8 Offset: 0x19FCCC8 VA: 0x19FCCC8 Slot: 12
	public virtual IAsyncResult BeginInvoke(int svtid, int limitCount, bool isDecide, Action finishCallback, AsyncCallback callback, object object) { }

	// RVA: 0x19FCD98 Offset: 0x19FCD98 VA: 0x19FCD98 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42DC4 Offset: 0xC42DC4 VA: 0xC42DC4
private sealed class ServantCommentMaster.<OpenSaintGraphProfileChange>c__AnonStorey0 // TypeDefIndex: 7215
{
	// Fields
	internal ServantCommentMaster.ProfileChangeDecideDelegate decideAction; // 0x10
	internal int svtId; // 0x18
	internal int limitCount; // 0x1C
	internal Action endAction; // 0x20

	// Methods

	// RVA: 0x19FC438 Offset: 0x19FC438 VA: 0x19FC438
	public void .ctor() { }

	// RVA: 0x19FC9F8 Offset: 0x19FC9F8 VA: 0x19FC9F8
	internal void <>m__0(bool isDecide) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42DD4 Offset: 0xC42DD4 VA: 0xC42DD4
private sealed class ServantCommentMaster.<DefaultProfileChangeDecideAction>c__AnonStorey1 // TypeDefIndex: 7216
{
	// Fields
	internal Action endAction; // 0x10

	// Methods

	// RVA: 0x19FC830 Offset: 0x19FC830 VA: 0x19FC830
	public void .ctor() { }

	// RVA: 0x19FC838 Offset: 0x19FC838 VA: 0x19FC838
	internal void <>m__0(bool isDcd) { }

	// RVA: 0x19FC918 Offset: 0x19FC918 VA: 0x19FC918
	internal void <>m__1() { }
}

// Namespace: 
public class ServantCostumeEntity : DataEntityBase<string> // TypeDefIndex: 7217
{
	// Fields
	public int svtId; // 0x10
	public int id; // 0x14
	public int groupIndex; // 0x18
	public string name; // 0x20
	public string shortName; // 0x28
	public string detail; // 0x30
	public string releaseInfo; // 0x38
	public string costumeReleaseDetail; // 0x40
	public string itemGetInfo; // 0x48
	public int priority; // 0x50
	public int flag; // 0x54
	public int costumeCollectionNo; // 0x58
	public int iconId; // 0x5C
	public long openedAt; // 0x60
	public long endedAt; // 0x68
	public Dictionary<string, object> script; // 0x70

	// Methods

	// RVA: 0x1A00CBC Offset: 0x1A00CBC VA: 0x1A00CBC
	public void .ctor() { }

	// RVA: 0x1A00D0C Offset: 0x1A00D0C VA: 0x1A00D0C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1A00D1C Offset: 0x1A00D1C VA: 0x1A00D1C
	public static string CreatePK(int svtId, int id) { }

	// RVA: 0x1A00D2C Offset: 0x1A00D2C VA: 0x1A00D2C
	public bool checkFlag(CostumeListType.Flag flag) { }

	// RVA: 0x1A00D3C Offset: 0x1A00D3C VA: 0x1A00D3C
	public bool CheckEnableReleaseTime() { }

	// RVA: 0x1A00DC4 Offset: 0x1A00DC4 VA: 0x1A00DC4
	public string getShortName() { }

	// RVA: 0x1A00E50 Offset: 0x1A00E50 VA: 0x1A00E50
	public bool IsEventCombineCostume() { }

	// RVA: 0x1A00EF0 Offset: 0x1A00EF0 VA: 0x1A00EF0
	public bool checkScript(string key, out int param) { }

	// RVA: 0x1A00FB0 Offset: 0x1A00FB0 VA: 0x1A00FB0
	public bool checkBgmId(out int param) { }
}

// Namespace: 
public class ServantCostumeMaster : DataMasterBase<ServantCostumeMaster, ServantCostumeEntity, string> // TypeDefIndex: 7218
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55CC0 Offset: 0xC55CC0 VA: 0xC55CC0
	private static Comparison<ServantCostumeEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1A07EE0 Offset: 0x1A07EE0 VA: 0x1A07EE0
	public void .ctor() { }

	// RVA: 0x1A07F34 Offset: 0x1A07F34 VA: 0x1A07F34
	public ServantCostumeEntity GetEntity(int svtId, int id) { }

	// RVA: 0x1A07FA8 Offset: 0x1A07FA8 VA: 0x1A07FA8
	public bool TryGetEntity(out ServantCostumeEntity entity, int svtId, int id) { }

	// RVA: 0x1A0802C Offset: 0x1A0802C VA: 0x1A0802C
	public ServantCostumeEntity getEntityFromId(int svtId, int id) { }

	// RVA: 0x1A08168 Offset: 0x1A08168 VA: 0x1A08168
	public bool GetIsServantCostumeExist(int svtId) { }

	// RVA: 0x1A04840 Offset: 0x1A04840 VA: 0x1A04840
	public List<int> GetCostumeSvtIdList() { }

	// RVA: 0x1A04F88 Offset: 0x1A04F88 VA: 0x1A04F88
	public ServantCostumeEntity[] releasedCostumeEntityList(int svtId, bool isChkHave = False) { }

	// RVA: 0x1A08284 Offset: 0x1A08284 VA: 0x1A08284
	public string[] GetCostumeNames(CostumeReleaseAnnounce[] releases) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA6B8 Offset: 0xCCA6B8 VA: 0xCCA6B8
	// RVA: 0x1A084C8 Offset: 0x1A084C8 VA: 0x1A084C8
	private static int <releasedCostumeEntityList>m__0(ServantCostumeEntity a, ServantCostumeEntity b) { }
}

// Namespace: 
public class ServantCostumeReleaseEntity : DataEntityBase<string> // TypeDefIndex: 7219
{
	// Fields
	public int svtId; // 0x10
	public int costumeId; // 0x14
	public int releaseType; // 0x18
	public int condType; // 0x1C
	public int condTargetId; // 0x20
	public int condNum; // 0x24
	public int priority; // 0x28
	public int condGroup; // 0x2C

	// Methods

	// RVA: 0x1A0850C Offset: 0x1A0850C VA: 0x1A0850C
	public void .ctor() { }

	// RVA: 0x1A0855C Offset: 0x1A0855C VA: 0x1A0855C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1A08574 Offset: 0x1A08574 VA: 0x1A08574
	public static string CreatePK(int svtId, int releaseType, int costumeId, int condType, int condTargetId) { }

	// RVA: 0x1A08590 Offset: 0x1A08590 VA: 0x1A08590
	public bool IsAvailable() { }

	// RVA: 0x1A08634 Offset: 0x1A08634 VA: 0x1A08634
	public bool IsCondAboutQuestClear(int questId, int phase) { }
}

// Namespace: 
public class ServantCostumeReleaseMaster : DataMasterBase<ServantCostumeReleaseMaster, ServantCostumeReleaseEntity, string> // TypeDefIndex: 7220
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55CD0 Offset: 0xC55CD0 VA: 0xC55CD0
	private static Comparison<ServantCostumeReleaseEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC55CE0 Offset: 0xC55CE0 VA: 0xC55CE0
	private static Comparison<ServantCostumeReleaseEntity> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x1A0868C Offset: 0x1A0868C VA: 0x1A0868C
	public void .ctor() { }

	// RVA: 0x1A086E0 Offset: 0x1A086E0 VA: 0x1A086E0
	public ServantCostumeReleaseEntity GetEntity(int svtId, int releaseType, int costumeId, int condType, int condTargetId) { }

	// RVA: 0x1A0877C Offset: 0x1A0877C VA: 0x1A0877C
	public bool TryGetEntity(out ServantCostumeReleaseEntity entity, int svtId, int releaseType, int costumeId, int condType, int condTargetId) { }

	// RVA: 0x1A08820 Offset: 0x1A08820 VA: 0x1A08820
	public bool isEnableMountCostume(int svtId, int id, int lv, int limitCount) { }

	// RVA: 0x1A08994 Offset: 0x1A08994 VA: 0x1A08994
	public ServantCostumeReleaseEntity[] GetEntityList(int svtId, int costumeId) { }

	// RVA: 0x1A08BD8 Offset: 0x1A08BD8 VA: 0x1A08BD8
	public List<List<ServantCostumeReleaseEntity>> GetCostumeCondGroupEntityList(int svtId, int costumeId) { }

	// RVA: 0x1A0529C Offset: 0x1A0529C VA: 0x1A0529C
	public bool checkItemHaving(int svtId, int costumeId) { }

	// RVA: 0x1A05600 Offset: 0x1A05600 VA: 0x1A05600
	public bool IsClearCostumeReleaseAllCond(ServantCostumeEntity targetEntity, int svtId, long userSvtId) { }

	// RVA: 0x19FF7DC Offset: 0x19FF7DC VA: 0x19FF7DC
	public bool IsCostumeReleaseCondClear(ServantCostumeEntity targetEntity, int svtId, long userSvtId) { }

	// RVA: 0x1A05414 Offset: 0x1A05414 VA: 0x1A05414
	public bool IsClearEventItemCostumeReleaseAllCond(ServantCostumeEntity targetEntity, int svtId, long userSvtId) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA6C8 Offset: 0xCCA6C8 VA: 0xCCA6C8
	// RVA: 0x1A08EB4 Offset: 0x1A08EB4 VA: 0x1A08EB4
	private static int <GetEntityList>m__0(ServantCostumeReleaseEntity a, ServantCostumeReleaseEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA6D8 Offset: 0xCCA6D8 VA: 0xCCA6D8
	// RVA: 0x1A08EF4 Offset: 0x1A08EF4 VA: 0x1A08EF4
	private static int <GetCostumeCondGroupEntityList>m__1(ServantCostumeReleaseEntity a, ServantCostumeReleaseEntity b) { }
}

// Namespace: 
public class ServantEntity : DataEntityBase<int> // TypeDefIndex: 7221
{
	// Fields
	public ObscuredInt id; // 0x10
	public ObscuredInt baseSvtId; // 0x20
	public ObscuredString name; // 0x30
	private ObscuredString nameSave; // 0x38
	public ObscuredString ruby; // 0x40
	public string battleName; // 0x48
	public int classId; // 0x50
	public int type; // 0x54
	public int limitMax; // 0x58
	public int rewardLv; // 0x5C
	public int friendshipId; // 0x60
	public int maxFriendshipRank; // 0x64
	public int genderType; // 0x68
	public int attri; // 0x6C
	public int combineSkillId; // 0x70
	public int combineLimitId; // 0x74
	public int sellQp; // 0x78
	public int sellMana; // 0x7C
	public int sellRarePri; // 0x80
	public int expType; // 0x84
	public int combineMaterialId; // 0x88
	public int[] cardIds; // 0x90
	public int cost; // 0x98
	public int battleSize; // 0x9C
	public int hpGaugeY; // 0xA0
	public int[] classPassive; // 0xA8
	public int[] individuality; // 0xB0
	public int starRate; // 0xB8
	public int attackAttri; // 0xBC
	public Dictionary<string, object> script; // 0xC0
	public int illustratorId; // 0xC8
	public int cvId; // 0xCC
	public int collectionNo; // 0xD0
	public int materialStoryPriority; // 0xD4
	public int[] relateQuestIds; // 0xD8
	public int flag; // 0xE0
	private Dictionary<string, object> mergedScript; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xC55CF0 Offset: 0xC55CF0 VA: 0xC55CF0
	private static Converter<object, int> <>f__am$cache0; // 0x0

	// Properties
	public bool IsServant { get; }
	public bool IsKeepServant { get; }
	public bool IsKeepServantEquip { get; }
	public bool IsOrganization { get; }
	public bool IsServantCollection { get; }
	public bool IsServantEquip { get; }
	public bool IsCombineMaterial { get; }
	public bool IsStatusUp { get; }
	public bool IsSvtEqMaterial { get; }
	public bool IsServantEquipMaterial { get; }
	public bool IsExpUp { get; }
	public bool IsEnemy { get; }
	public bool IsEnemyCollectionDetail { get; }
	public bool IsAllClass { get; }
	public bool IsServantMaterialTd { get; }
	public bool IsUsableOnlyNpcSvtEquip { get; }
	public bool IsFriendShipSvtEquip { get; }
	public bool IsIgnoreCombineLimitSpecial { get; }
	public bool IsSvtEquipExp { get; }
	public bool IsChocolateSvtEquip { get; }

	// Methods

	// RVA: 0x1A08F34 Offset: 0x1A08F34 VA: 0x1A08F34
	public void .ctor() { }

	// RVA: 0x1A08F84 Offset: 0x1A08F84 VA: 0x1A08F84 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1A08FF4 Offset: 0x1A08FF4 VA: 0x1A08FF4
	public bool checkIsCombineMaterialSvt() { }

	// RVA: 0x1A09004 Offset: 0x1A09004 VA: 0x1A09004
	public bool checkIsHeroineSvt() { }

	// RVA: 0x1A09014 Offset: 0x1A09014 VA: 0x1A09014
	public bool get_IsServant() { }

	// RVA: 0x1A09020 Offset: 0x1A09020 VA: 0x1A09020
	public bool get_IsKeepServant() { }

	// RVA: 0x1A0902C Offset: 0x1A0902C VA: 0x1A0902C
	public bool get_IsKeepServantEquip() { }

	// RVA: 0x1A09038 Offset: 0x1A09038 VA: 0x1A09038
	public bool get_IsOrganization() { }

	// RVA: 0x1A09044 Offset: 0x1A09044 VA: 0x1A09044
	public bool get_IsServantCollection() { }

	// RVA: 0x1A09050 Offset: 0x1A09050 VA: 0x1A09050
	public bool get_IsServantEquip() { }

	// RVA: 0x1A0905C Offset: 0x1A0905C VA: 0x1A0905C
	public bool get_IsCombineMaterial() { }

	// RVA: 0x1A02760 Offset: 0x1A02760 VA: 0x1A02760
	public bool get_IsStatusUp() { }

	// RVA: 0x1A09068 Offset: 0x1A09068 VA: 0x1A09068
	public bool get_IsSvtEqMaterial() { }

	// RVA: 0x1A09074 Offset: 0x1A09074 VA: 0x1A09074
	public bool get_IsServantEquipMaterial() { }

	// RVA: 0x1A0276C Offset: 0x1A0276C VA: 0x1A0276C
	public bool get_IsExpUp() { }

	// RVA: 0x1A09080 Offset: 0x1A09080 VA: 0x1A09080
	public bool get_IsEnemy() { }

	// RVA: 0x1A0908C Offset: 0x1A0908C VA: 0x1A0908C
	public bool get_IsEnemyCollectionDetail() { }

	// RVA: 0x1A02754 Offset: 0x1A02754 VA: 0x1A02754
	public bool get_IsAllClass() { }

	// RVA: 0x1A09098 Offset: 0x1A09098 VA: 0x1A09098
	public bool get_IsServantMaterialTd() { }

	// RVA: 0x1A090A4 Offset: 0x1A090A4 VA: 0x1A090A4
	public bool get_IsUsableOnlyNpcSvtEquip() { }

	// RVA: 0x1A090C0 Offset: 0x1A090C0 VA: 0x1A090C0
	public bool get_IsFriendShipSvtEquip() { }

	// RVA: 0x1A090CC Offset: 0x1A090CC VA: 0x1A090CC
	public bool get_IsIgnoreCombineLimitSpecial() { }

	// RVA: 0x1A090D8 Offset: 0x1A090D8 VA: 0x1A090D8
	public bool get_IsSvtEquipExp() { }

	// RVA: 0x1A090E4 Offset: 0x1A090E4 VA: 0x1A090E4
	public bool get_IsChocolateSvtEquip() { }

	// RVA: 0x1A090B0 Offset: 0x1A090B0 VA: 0x1A090B0
	public bool checkFlag(ServantEntity.FlagField flag) { }

	// RVA: 0x1A090F0 Offset: 0x1A090F0 VA: 0x1A090F0
	public string getClassName() { }

	// RVA: 0x1A09224 Offset: 0x1A09224 VA: 0x1A09224
	public int[] getIndividuality(int limitCount, int dispLimitCount) { }

	// RVA: 0x1A0957C Offset: 0x1A0957C VA: 0x1A0957C
	public bool IsIndividuality(int limitCount, int dispLimitCount, int individuality) { }

	// RVA: 0x1A09854 Offset: 0x1A09854 VA: 0x1A09854
	public bool IsIndividuality(int limitCount, int dispLimitCount, int[] individualityList) { }

	// RVA: 0x1A09B84 Offset: 0x1A09B84 VA: 0x1A09B84
	public int[] getClassPassive() { }

	// RVA: 0x1A09B8C Offset: 0x1A09B8C VA: 0x1A09B8C
	public void getClassSkillInfo(out int[] idList, out string[] titleList, out string[] explanationList) { }

	// RVA: 0x1A09DFC Offset: 0x1A09DFC VA: 0x1A09DFC
	public float getHeadUpY() { }

	// RVA: 0x1A09E14 Offset: 0x1A09E14 VA: 0x1A09E14
	public Dictionary<string, object> GetScript() { }

	// RVA: 0x1A0A11C Offset: 0x1A0A11C VA: 0x1A0A11C
	private object GetScriptValue(string key) { }

	// RVA: 0x1A0A19C Offset: 0x1A0A19C VA: 0x1A0A19C
	public bool checkScript(string key) { }

	// RVA: 0x1A0A214 Offset: 0x1A0A214 VA: 0x1A0A214
	public bool checkScript(string key, out int param) { }

	// RVA: 0x1A0A298 Offset: 0x1A0A298 VA: 0x1A0A298
	public bool checkScript(string key, out float param, float denominator = 1000) { }

	// RVA: 0x1A0A330 Offset: 0x1A0A330 VA: 0x1A0A330
	public int getDressId() { }

	// RVA: 0x1A0A3A0 Offset: 0x1A0A3A0 VA: 0x1A0A3A0
	public int getCameraActionId() { }

	// RVA: 0x1A0A410 Offset: 0x1A0A410 VA: 0x1A0A410
	public bool getBattleHeight(out float height) { }

	// RVA: 0x1A0A478 Offset: 0x1A0A478 VA: 0x1A0A478
	public bool isInvalidSkillShift() { }

	// RVA: 0x1A0A4C8 Offset: 0x1A0A4C8 VA: 0x1A0A4C8
	public string GetCountFormat() { }

	// RVA: 0x19FC440 Offset: 0x19FC440 VA: 0x19FC440
	public string getName(int limitCount = -1) { }

	// RVA: 0x1A0AB28 Offset: 0x1A0AB28 VA: 0x1A0AB28
	public string getTrueName(int limitCount = -1) { }

	// RVA: 0x1A0ABB4 Offset: 0x1A0ABB4 VA: 0x1A0ABB4
	public string getHiddenName(int limitCount = -1) { }

	// RVA: 0x1A0ACF4 Offset: 0x1A0ACF4 VA: 0x1A0ACF4
	public string getName(out string ruby, int limitCount = -1) { }

	// RVA: 0x1A0AE48 Offset: 0x1A0AE48 VA: 0x1A0AE48
	public string getBattleName(bool isTrueNameForce = False, int limitCount = -1) { }

	// RVA: 0x1A0B3DC Offset: 0x1A0B3DC VA: 0x1A0B3DC
	public bool IsNameTrue() { }

	// RVA: 0x1A0B4B0 Offset: 0x1A0B4B0 VA: 0x1A0B4B0
	public bool IsNameTrueFromBattleSvt() { }

	// RVA: 0x1A0B5C0 Offset: 0x1A0B5C0 VA: 0x1A0B5C0
	public bool IsNameHide() { }

	// RVA: 0x1A0B6B0 Offset: 0x1A0B6B0 VA: 0x1A0B6B0
	public int GetTrueSvtId() { }

	// RVA: 0x1A0A5B8 Offset: 0x1A0A5B8 VA: 0x1A0A5B8
	public ObscuredString GetName(int limitCount = -1, bool isForceNeedToCheckEventJoinName = False) { }

	// RVA: 0x1A0B7A8 Offset: 0x1A0B7A8 VA: 0x1A0B7A8
	public void SetName(ObscuredString name) { }

	// RVA: 0x1A0B7B0 Offset: 0x1A0B7B0 VA: 0x1A0B7B0
	public bool GetIsEventJoinNameExist() { }

	// RVA: 0x1A0B3A4 Offset: 0x1A0B3A4 VA: 0x1A0B3A4
	public bool GetIsNeedToCheckEventJoinName() { }

	// RVA: 0x1A0BC2C Offset: 0x1A0BC2C VA: 0x1A0BC2C
	public bool GetIsMasterForEventNameComplete() { }

	// RVA: 0x1A0B948 Offset: 0x1A0B948 VA: 0x1A0B948
	private bool GetIsEventJoin() { }

	// RVA: 0x1A0BAC8 Offset: 0x1A0BAC8 VA: 0x1A0BAC8
	private bool GetIsCollectionStatusNotGet() { }

	// RVA: -1 Offset: -1
	public T[][] GetScriptMultiArray<T>(string key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B26550 Offset: 0x2B26550 VA: 0x2B26550
	|-ServantEntity.GetScriptMultiArray<int>
	|
	|-RVA: 0x2B26640 Offset: 0x2B26640 VA: 0x2B26640
	|-ServantEntity.GetScriptMultiArray<object>
	*/

	// RVA: 0x1A0BD34 Offset: 0x1A0BD34 VA: 0x1A0BD34
	public int[] GetRankUpSkillIds(int baseSkillId) { }

	// RVA: 0x1A0BE58 Offset: 0x1A0BE58 VA: 0x1A0BE58
	public int GetChangeLimitVoiceFriendshpLv() { }

	// RVA: 0x1A0BEC0 Offset: 0x1A0BEC0 VA: 0x1A0BEC0
	public string GetHideInAnimNodeName() { }

	// RVA: 0x1A0BF54 Offset: 0x1A0BF54 VA: 0x1A0BF54
	public bool IsAdditionExpandImage(int limitCount = -1) { }

	// RVA: 0x1A0C014 Offset: 0x1A0C014 VA: 0x1A0C014
	public int[] getScriptIntArrayParam(string key) { }

	// RVA: 0x1A0C194 Offset: 0x1A0C194 VA: 0x1A0C194
	public bool IsCoinRoomCheck() { }

	// RVA: 0x1A0C1E4 Offset: 0x1A0C1E4 VA: 0x1A0C1E4
	public bool IsSvtBuffTurnExtend() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA6E8 Offset: 0xCCA6E8 VA: 0xCCA6E8
	// RVA: 0x1A0C234 Offset: 0x1A0C234 VA: 0x1A0C234
	private static int <getScriptIntArrayParam>m__0(object x) { }
}

// Namespace: 
public enum ServantEntity.FlagKind // TypeDefIndex: 7222
{
	// Fields
	public int value__; // 0x0
	public const ServantEntity.FlagKind ONLY_USE_FOR_NPC = 1;
	public const ServantEntity.FlagKind SVT_EQUIP_FRIEND_SHIP = 2;
	public const ServantEntity.FlagKind IGNORE_COMBINE_LIMIT_SPECIAL = 3;
	public const ServantEntity.FlagKind SVT_EQUIP_EXP = 4;
	public const ServantEntity.FlagKind SVT_EQUIP_CHOCOLATE = 5;
}

// Namespace: 
public enum ServantEntity.FlagField // TypeDefIndex: 7223
{
	// Fields
	public int value__; // 0x0
	public const ServantEntity.FlagField ONLY_USE_FOR_NPC = 2;
	public const ServantEntity.FlagField SVT_EQUIP_FRIEND_SHIP = 4;
	public const ServantEntity.FlagField IGNORE_COMBINE_LIMIT_SPECIAL = 8;
	public const ServantEntity.FlagField SVT_EQUIP_EXP = 16;
	public const ServantEntity.FlagField SVT_EQUIP_CHOCOLATE = 32;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42DE4 Offset: 0xC42DE4 VA: 0xC42DE4
private sealed class ServantEntity.<GetScript>c__AnonStorey0 // TypeDefIndex: 7224
{
	// Fields
	internal Dictionary<string, object> result; // 0x10

	// Methods

	// RVA: 0x1A0A114 Offset: 0x1A0A114 VA: 0x1A0A114
	public void .ctor() { }

	// RVA: 0x1A0C26C Offset: 0x1A0C26C VA: 0x1A0C26C
	internal void <>m__0(KeyValuePair<string, object> x) { }
}

// Namespace: 
public class ServantExceedEntity : DataEntityBase<string> // TypeDefIndex: 7225
{
	// Fields
	private readonly string[] frameCardFileList; // 0x10
	public int rarity; // 0x18
	public int exceedCount; // 0x1C
	public int qp; // 0x20
	public int addLvMax; // 0x24
	public int frameType; // 0x28
	public int rarityIcon; // 0x2C
	public int consumeId; // 0x30
	public int objectNum; // 0x34

	// Methods

	// RVA: 0x1A11A24 Offset: 0x1A11A24 VA: 0x1A11A24
	public void .ctor() { }

	// RVA: 0x1A11D24 Offset: 0x1A11D24 VA: 0x1A11D24 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1A11D34 Offset: 0x1A11D34 VA: 0x1A11D34
	public static string CreatePK(int rarity, int exceedCount) { }

	// RVA: 0x1A11D44 Offset: 0x1A11D44 VA: 0x1A11D44
	public string getFrameCardPrefix() { }
}

// Namespace: 
public enum ServantExceedEntity.FRAMETYPE // TypeDefIndex: 7226
{
	// Fields
	public int value__; // 0x0
	public const ServantExceedEntity.FRAMETYPE BLACK = 0;
	public const ServantExceedEntity.FRAMETYPE BRONZE = 1;
	public const ServantExceedEntity.FRAMETYPE SILVER = 2;
	public const ServantExceedEntity.FRAMETYPE GOLD = 3;
	public const ServantExceedEntity.FRAMETYPE FRAME_0801 = 4;
	public const ServantExceedEntity.FRAMETYPE FRAME_0802 = 5;
	public const ServantExceedEntity.FRAMETYPE FRAME_0803 = 6;
	public const ServantExceedEntity.FRAMETYPE FRAME_0804 = 7;
}

// Namespace: 
public class ServantExceedMaster : DataMasterBase<ServantExceedMaster, ServantExceedEntity, string> // TypeDefIndex: 7227
{
	// Methods

	// RVA: 0x1A11D94 Offset: 0x1A11D94 VA: 0x1A11D94
	public void .ctor() { }

	// RVA: 0x1A11DE8 Offset: 0x1A11DE8 VA: 0x1A11DE8
	public ServantExceedEntity GetEntity(int rarity, int exceedCount) { }

	// RVA: 0x1A11E5C Offset: 0x1A11E5C VA: 0x1A11E5C
	public bool TryGetEntity(out ServantExceedEntity entity, int rarity, int exceedCount) { }

	// RVA: 0x1A11EE0 Offset: 0x1A11EE0 VA: 0x1A11EE0
	public ServantExceedEntity getEntityFromId(int rarity, int exceedCount) { }

	// RVA: 0x1A12034 Offset: 0x1A12034 VA: 0x1A12034
	public ServantExceedEntity getEntity(int svtId, int limitCount, int exceedCount) { }

	// RVA: 0x1A120FC Offset: 0x1A120FC VA: 0x1A120FC
	public int GetFrameType(int rarity, int exceedCount) { }

	// RVA: 0x1A121A0 Offset: 0x1A121A0 VA: 0x1A121A0
	public int GetFrameType(int svtId, int limitCount, int exceedCount) { }

	// RVA: 0x1A123B8 Offset: 0x1A123B8 VA: 0x1A123B8
	public int GetFrameType(out int rarity, int svtId, int limitCount, int exceedCount) { }

	// RVA: 0x1A12488 Offset: 0x1A12488 VA: 0x1A12488
	public int GetRarity(int svtId) { }

	// RVA: 0x1A12264 Offset: 0x1A12264 VA: 0x1A12264
	private int GetRarity(int svtId, int limitCount) { }

	// RVA: 0x1A12490 Offset: 0x1A12490 VA: 0x1A12490
	public int GetRarityIcon(int rarity, int exceedCount, int defValue = 0) { }
}

// Namespace: 
public class ServantExpEntity : DataEntityBase<string> // TypeDefIndex: 7228
{
	// Fields
	public int type; // 0x10
	public int lv; // 0x14
	public int exp; // 0x18
	public int curve; // 0x1C

	// Methods

	// RVA: 0x1A124BC Offset: 0x1A124BC VA: 0x1A124BC
	public void .ctor() { }

	// RVA: 0x1A1250C Offset: 0x1A1250C VA: 0x1A1250C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1A1251C Offset: 0x1A1251C VA: 0x1A1251C
	public static string CreatePK(int type, int lv) { }
}

// Namespace: 
public class ServantExpMaster : DataMasterBase<ServantExpMaster, ServantExpEntity, string> // TypeDefIndex: 7229
{
	// Methods

	// RVA: 0x1A1252C Offset: 0x1A1252C VA: 0x1A1252C
	public void .ctor() { }

	// RVA: 0x1A12580 Offset: 0x1A12580 VA: 0x1A12580
	public ServantExpEntity GetEntity(int type, int lv) { }

	// RVA: 0x1A125F4 Offset: 0x1A125F4 VA: 0x1A125F4
	public bool TryGetEntity(out ServantExpEntity entity, int type, int lv) { }

	// RVA: 0x1A12678 Offset: 0x1A12678 VA: 0x1A12678
	public int getLevel(int exp, int type, int max_lv, int start_lv) { }
}

// Namespace: 
public class ServantFilterEntity : DataEntityBase<int> // TypeDefIndex: 7230
{
	// Fields
	public int id; // 0x10
	public ObscuredInt[] svtIds; // 0x18
	public string name; // 0x20
	public int priority; // 0x28
	public long startedAt; // 0x30
	public long endedAt; // 0x38

	// Methods

	// RVA: 0x16B8C60 Offset: 0x16B8C60 VA: 0x16B8C60
	public void .ctor() { }

	// RVA: 0x16B8CB0 Offset: 0x16B8CB0 VA: 0x16B8CB0 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x16B8CB8 Offset: 0x16B8CB8 VA: 0x16B8CB8
	public bool IsEnable(long nowTime = 0) { }

	// RVA: 0x16B8D60 Offset: 0x16B8D60 VA: 0x16B8D60
	public bool IsEnableServant(ObscuredInt svtId) { }
}

// Namespace: 
public class ServantFilterMaster : DataMasterBase<ServantFilterMaster, ServantFilterEntity, int> // TypeDefIndex: 7231
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55D00 Offset: 0xC55D00 VA: 0xC55D00
	private static Comparison<ServantFilterEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x16B8E88 Offset: 0x16B8E88 VA: 0x16B8E88
	public void .ctor() { }

	// RVA: 0x16B8EDC Offset: 0x16B8EDC VA: 0x16B8EDC
	public int[] getEnableIdList() { }

	// RVA: 0x16B91D0 Offset: 0x16B91D0 VA: 0x16B91D0
	public bool IsEnableServant(ObscuredInt svtId, int id) { }

	// RVA: 0x16B925C Offset: 0x16B925C VA: 0x16B925C
	public bool IsEnableServant(ObscuredInt svtId, int[] ids) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA6F8 Offset: 0xCCA6F8 VA: 0xCCA6F8
	// RVA: 0x16B9344 Offset: 0x16B9344 VA: 0x16B9344
	private static int <getEnableIdList>m__0(ServantFilterEntity a, ServantFilterEntity b) { }
}

// Namespace: 
public class ServantFlagEntity : DataEntityBase<string> // TypeDefIndex: 7232
{
	// Fields
	public int svtId; // 0x10
	public int flagId; // 0x14
	public int priority; // 0x18
	public int flagType; // 0x1C
	public int targetId; // 0x20
	public int[] args; // 0x28

	// Methods

	// RVA: 0x16BC564 Offset: 0x16BC564 VA: 0x16BC564
	public void .ctor() { }

	// RVA: 0x16BC5B4 Offset: 0x16BC5B4 VA: 0x16BC5B4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x16BC5C4 Offset: 0x16BC5C4 VA: 0x16BC5C4
	public static string CreatePK(int svtId, int flagId) { }
}

// Namespace: 
public enum ServantFlagEntity.SvtScriptFlagType // TypeDefIndex: 7233
{
	// Fields
	public int value__; // 0x0
	public const ServantFlagEntity.SvtScriptFlagType SECRET_TREASURE_DEVICE_GET = 1;
}

// Namespace: 
public class ServantFlagMaster : DataMasterBase<ServantFlagMaster, ServantFlagEntity, string> // TypeDefIndex: 7234
{
	// Methods

	// RVA: 0x16BC5D4 Offset: 0x16BC5D4 VA: 0x16BC5D4
	public void .ctor() { }

	// RVA: 0x16BC628 Offset: 0x16BC628 VA: 0x16BC628
	public ServantFlagEntity GetEntity(int svtId, int flagId) { }

	// RVA: 0x16BC69C Offset: 0x16BC69C VA: 0x16BC69C
	public bool TryGetEntity(out ServantFlagEntity entity, int svtId, int flagId) { }

	// RVA: 0x16BC720 Offset: 0x16BC720 VA: 0x16BC720
	public int getBeforeEnhanceTdId(int svtId, int flagId) { }

	// RVA: 0x16BC7B0 Offset: 0x16BC7B0 VA: 0x16BC7B0
	public ServantFlagEntity getEntity(int svtId, int flagType) { }
}

// Namespace: 
public class ServantFlagReleaseEntity : DataEntityBase<string> // TypeDefIndex: 7235
{
	// Fields
	public int svtId; // 0x10
	public int flagId; // 0x14
	public int idx; // 0x18
	public int condGroup; // 0x1C
	public int condType; // 0x20
	public int targetId; // 0x24
	public int value; // 0x28

	// Methods

	// RVA: 0x16BC8CC Offset: 0x16BC8CC VA: 0x16BC8CC
	public void .ctor() { }

	// RVA: 0x16BC91C Offset: 0x16BC91C VA: 0x16BC91C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x16BC930 Offset: 0x16BC930 VA: 0x16BC930
	public static string CreatePK(int svtId, int flagId, int idx) { }
}

// Namespace: 
public class ServantFlagReleaseMaster : DataMasterBase<ServantFlagReleaseMaster, ServantFlagReleaseEntity, string> // TypeDefIndex: 7236
{
	// Methods

	// RVA: 0x16BC944 Offset: 0x16BC944 VA: 0x16BC944
	public void .ctor() { }

	// RVA: 0x16BC998 Offset: 0x16BC998 VA: 0x16BC998
	public ServantFlagReleaseEntity GetEntity(int svtId, int flagId, int idx) { }

	// RVA: 0x16BCA1C Offset: 0x16BCA1C VA: 0x16BCA1C
	public bool TryGetEntity(out ServantFlagReleaseEntity entity, int svtId, int flagId, int idx) { }

	// RVA: 0x16BCAA8 Offset: 0x16BCAA8 VA: 0x16BCAA8
	public bool isSecretTreasureDevice(int svtId) { }

	// RVA: 0x16BCAD0 Offset: 0x16BCAD0 VA: 0x16BCAD0
	public bool isSecretTreasureDevice(int svtId, out ServantFlagEntity svtFlagEntity) { }

	// RVA: 0x16BD1E8 Offset: 0x16BD1E8 VA: 0x16BD1E8
	public bool checkTresureDeviceEffectFlag(int svtId, int flagId) { }
}

// Namespace: 
public class ServantGroupEntity : DataEntityBase<string> // TypeDefIndex: 7237
{
	// Fields
	public int id; // 0x10
	public int svtId; // 0x14

	// Methods

	// RVA: 0x16C1A0C Offset: 0x16C1A0C VA: 0x16C1A0C
	public void .ctor() { }

	// RVA: 0x16C1A5C Offset: 0x16C1A5C VA: 0x16C1A5C
	public int getServantGroupId() { }

	// RVA: 0x16C1A64 Offset: 0x16C1A64 VA: 0x16C1A64
	public int getServantId() { }

	// RVA: 0x16C1A6C Offset: 0x16C1A6C VA: 0x16C1A6C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x16C1A7C Offset: 0x16C1A7C VA: 0x16C1A7C
	public static string CreatePK(int id, int svtId) { }
}

// Namespace: 
public class ServantGroupMaster : DataMasterBase<ServantGroupMaster, ServantGroupEntity, string> // TypeDefIndex: 7238
{
	// Methods

	// RVA: 0x16C1A8C Offset: 0x16C1A8C VA: 0x16C1A8C
	public void .ctor() { }

	// RVA: 0x16C1AE0 Offset: 0x16C1AE0 VA: 0x16C1AE0
	public ServantGroupEntity GetEntity(int id, int svtId) { }

	// RVA: 0x16C1B54 Offset: 0x16C1B54 VA: 0x16C1B54
	public bool TryGetEntity(out ServantGroupEntity entity, int id, int svtId) { }

	// RVA: 0x16C1BD8 Offset: 0x16C1BD8 VA: 0x16C1BD8
	public ServantGroupEntity[] getEntityListById(int groupId) { }

	// RVA: 0x16C1D50 Offset: 0x16C1D50 VA: 0x16C1D50
	public ServantGroupEntity[] getListByServantID(int svt_id) { }
}

// Namespace: 
public class ServantIndividualityEntity : DataEntityBase<string> // TypeDefIndex: 7239
{
	// Fields
	public int svtId; // 0x10
	public int idx; // 0x14
	public int limitCount; // 0x18
	public int[] individuality; // 0x20
	public int condType; // 0x28
	public int condId; // 0x2C
	public int condNum; // 0x30

	// Methods

	// RVA: 0x16C1EC0 Offset: 0x16C1EC0 VA: 0x16C1EC0
	public void .ctor() { }

	// RVA: 0x16C1F10 Offset: 0x16C1F10 VA: 0x16C1F10 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x16C1F20 Offset: 0x16C1F20 VA: 0x16C1F20
	public static string CreatePK(int svtId, int idx) { }
}

// Namespace: 
public class ServantIndividualityMaster : DataMasterBase<ServantIndividualityMaster, ServantIndividualityEntity, string> // TypeDefIndex: 7240
{
	// Fields
	private static Dictionary<int, List<ServantIndividualityEntity>> individualityList; // 0x0

	// Methods

	// RVA: 0x16C1F30 Offset: 0x16C1F30 VA: 0x16C1F30
	public void .ctor() { }

	// RVA: 0x16C1F84 Offset: 0x16C1F84 VA: 0x16C1F84
	public ServantIndividualityEntity GetEntity(int svtId, int idx) { }

	// RVA: 0x16C1FF8 Offset: 0x16C1FF8 VA: 0x16C1FF8
	public bool TryGetEntity(out ServantIndividualityEntity entity, int svtId, int idx) { }

	// RVA: 0x16C207C Offset: 0x16C207C VA: 0x16C207C
	public static int[] GetIndividualityList(int svtId, int limitCount) { }

	// RVA: 0x16C23F0 Offset: 0x16C23F0 VA: 0x16C23F0 Slot: 7
	public override void Clear() { }

	// RVA: 0x16C2484 Offset: 0x16C2484 VA: 0x16C2484 Slot: 6
	public override bool preProcess() { }

	// RVA: 0x16C2930 Offset: 0x16C2930 VA: 0x16C2930
	private static void .cctor() { }
}
