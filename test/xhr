
	// RVA: 0x26BC1CC Offset: 0x26BC1CC VA: 0x26BC1CC
	internal static void CheckOnGUI() { }

	// RVA: 0x26D3264 Offset: 0x26D3264 VA: 0x26D3264
	public static void RotateAroundPivot(float angle, Vector2 pivotPoint) { }

	// RVA: 0x26D356C Offset: 0x26D356C VA: 0x26D356C
	public static void ScaleAroundPivot(Vector2 scale, Vector2 pivotPoint) { }

	// RVA: 0x26C17B8 Offset: 0x26C17B8 VA: 0x26C17B8
	public static Rect AlignRectToDevice(Rect rect) { }

	// RVA: 0x26D2814 Offset: 0x26D2814 VA: 0x26D2814
	private static int GetControlID_Injected(int hint, FocusType focusType, ref Rect rect) { }

	// RVA: 0x26D28E0 Offset: 0x26D28E0 VA: 0x26D28E0
	private static void AlignRectToDevice_Injected(ref Rect rect, out int widthInPixels, out int heightInPixels, out Rect ret) { }
}

// Namespace: UnityEngine
public sealed class ExitGUIException : Exception // TypeDefIndex: 2753
{
	// Methods

	// RVA: 0x26BB2AC Offset: 0x26BB2AC VA: 0x26BB2AC
	public void .ctor() { }
}

// Namespace: UnityEngine
[VisibleToOtherModulesAttribute] // RVA: 0xBFACD0 Offset: 0xBFACD0 VA: 0xBFACD0
internal class GUILayoutEntry // TypeDefIndex: 2754
{
	// Fields
	public float minWidth; // 0x10
	public float maxWidth; // 0x14
	public float minHeight; // 0x18
	public float maxHeight; // 0x1C
	public Rect rect; // 0x20
	public int stretchWidth; // 0x30
	public int stretchHeight; // 0x34
	public bool consideredForMargin; // 0x38
	private GUIStyle m_Style; // 0x40
	internal static Rect kDummyRect; // 0x0
	protected static int indent; // 0x10

	// Properties
	public GUIStyle style { get; set; }
	public virtual int marginLeft { get; }
	public virtual int marginRight { get; }
	public virtual int marginTop { get; }
	public virtual int marginBottom { get; }
	public int marginHorizontal { get; }
	public int marginVertical { get; }

	// Methods

	// RVA: 0x26C9314 Offset: 0x26C9314 VA: 0x26C9314
	public void .ctor(float _minWidth, float _maxWidth, float _minHeight, float _maxHeight, GUIStyle _style) { }

	// RVA: 0x26C9450 Offset: 0x26C9450 VA: 0x26C9450
	public void .ctor(float _minWidth, float _maxWidth, float _minHeight, float _maxHeight, GUIStyle _style, GUILayoutOption[] options) { }

	// RVA: 0x26C9570 Offset: 0x26C9570 VA: 0x26C9570
	public GUIStyle get_style() { }

	// RVA: 0x26C9440 Offset: 0x26C9440 VA: 0x26C9440
	public void set_style(GUIStyle value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBFCAC8 Offset: 0xBFCAC8 VA: 0xBFCAC8
	// RVA: 0x26C9578 Offset: 0x26C9578 VA: 0x26C9578 Slot: 4
	public virtual int get_marginLeft() { }

	[CompilerGeneratedAttribute] // RVA: 0xBFCAD8 Offset: 0xBFCAD8 VA: 0xBFCAD8
	// RVA: 0x26C95BC Offset: 0x26C95BC VA: 0x26C95BC Slot: 5
	public virtual int get_marginRight() { }

	[CompilerGeneratedAttribute] // RVA: 0xBFCAE8 Offset: 0xBFCAE8 VA: 0xBFCAE8
	// RVA: 0x26C9600 Offset: 0x26C9600 VA: 0x26C9600 Slot: 6
	public virtual int get_marginTop() { }

	[CompilerGeneratedAttribute] // RVA: 0xBFCAF8 Offset: 0xBFCAF8 VA: 0xBFCAF8
	// RVA: 0x26C9644 Offset: 0x26C9644 VA: 0x26C9644 Slot: 7
	public virtual int get_marginBottom() { }

	[CompilerGeneratedAttribute] // RVA: 0xBFCB08 Offset: 0xBFCB08 VA: 0xBFCB08
	// RVA: 0x26C9688 Offset: 0x26C9688 VA: 0x26C9688
	public int get_marginHorizontal() { }

	[CompilerGeneratedAttribute] // RVA: 0xBFCB18 Offset: 0xBFCB18 VA: 0xBFCB18
	// RVA: 0x26C96C8 Offset: 0x26C96C8 VA: 0x26C96C8
	public int get_marginVertical() { }

	// RVA: 0x26C9708 Offset: 0x26C9708 VA: 0x26C9708 Slot: 8
	public virtual void CalcWidth() { }

	// RVA: 0x26C970C Offset: 0x26C970C VA: 0x26C970C Slot: 9
	public virtual void CalcHeight() { }

	// RVA: 0x26C9710 Offset: 0x26C9710 VA: 0x26C9710 Slot: 10
	public virtual void SetHorizontal(float x, float width) { }

	// RVA: 0x26C9750 Offset: 0x26C9750 VA: 0x26C9750 Slot: 11
	public virtual void SetVertical(float y, float height) { }

	// RVA: 0x26C9790 Offset: 0x26C9790 VA: 0x26C9790 Slot: 12
	protected virtual void ApplyStyleSettings(GUIStyle style) { }

	// RVA: 0x26C992C Offset: 0x26C992C VA: 0x26C992C Slot: 13
	public virtual void ApplyOptions(GUILayoutOption[] options) { }

	// RVA: 0x26C9B50 Offset: 0x26C9B50 VA: 0x26C9B50 Slot: 3
	public override string ToString() { }

	// RVA: 0x26CA344 Offset: 0x26CA344 VA: 0x26CA344
	private static void .cctor() { }
}

// Namespace: UnityEngine
internal sealed class GUIWordWrapSizer : GUILayoutEntry // TypeDefIndex: 2755
{
	// Fields
	private readonly GUIContent m_Content; // 0x48
	private readonly float m_ForcedMinHeight; // 0x50
	private readonly float m_ForcedMaxHeight; // 0x54

	// Methods

	// RVA: 0x26CE6C0 Offset: 0x26CE6C0 VA: 0x26CE6C0
	public void .ctor(GUIStyle style, GUIContent content, GUILayoutOption[] options) { }

	// RVA: 0x26D385C Offset: 0x26D385C VA: 0x26D385C Slot: 8
	public override void CalcWidth() { }

	// RVA: 0x26D3934 Offset: 0x26D3934 VA: 0x26D3934 Slot: 9
	public override void CalcHeight() { }
}

// Namespace: UnityEngine
[VisibleToOtherModulesAttribute] // RVA: 0xBFAD48 Offset: 0xBFAD48 VA: 0xBFAD48
internal class GUILayoutGroup : GUILayoutEntry // TypeDefIndex: 2756
{
	// Fields
	public List<GUILayoutEntry> entries; // 0x48
	public bool isVertical; // 0x50
	public bool resetCoords; // 0x51
	public float spacing; // 0x54
	public bool sameSize; // 0x58
	public bool isWindow; // 0x59
	public int windowID; // 0x5C
	private int m_Cursor; // 0x60
	protected int m_StretchableCountX; // 0x64
	protected int m_StretchableCountY; // 0x68
	protected bool m_UserSpecifiedWidth; // 0x6C
	protected bool m_UserSpecifiedHeight; // 0x6D
	protected float m_ChildMinWidth; // 0x70
	protected float m_ChildMaxWidth; // 0x74
	protected float m_ChildMinHeight; // 0x78
	protected float m_ChildMaxHeight; // 0x7C
	protected int m_MarginLeft; // 0x80
	protected int m_MarginRight; // 0x84
	protected int m_MarginTop; // 0x88
	protected int m_MarginBottom; // 0x8C

	// Properties
	public override int marginLeft { get; }
	public override int marginRight { get; }
	public override int marginTop { get; }
	public override int marginBottom { get; }

	// Methods

	// RVA: 0x26CA3CC Offset: 0x26CA3CC VA: 0x26CA3CC
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xBFCB28 Offset: 0xBFCB28 VA: 0xBFCB28
	// RVA: 0x26CA4C4 Offset: 0x26CA4C4 VA: 0x26CA4C4 Slot: 4
	public override int get_marginLeft() { }

	[CompilerGeneratedAttribute] // RVA: 0xBFCB38 Offset: 0xBFCB38 VA: 0xBFCB38
	// RVA: 0x26CA4CC Offset: 0x26CA4CC VA: 0x26CA4CC Slot: 5
	public override int get_marginRight() { }

	[CompilerGeneratedAttribute] // RVA: 0xBFCB48 Offset: 0xBFCB48 VA: 0xBFCB48
	// RVA: 0x26CA4D4 Offset: 0x26CA4D4 VA: 0x26CA4D4 Slot: 6
	public override int get_marginTop() { }

	[CompilerGeneratedAttribute] // RVA: 0xBFCB58 Offset: 0xBFCB58 VA: 0xBFCB58
	// RVA: 0x26CA4DC Offset: 0x26CA4DC VA: 0x26CA4DC Slot: 7
	public override int get_marginBottom() { }

	// RVA: 0x26CA4E4 Offset: 0x26CA4E4 VA: 0x26CA4E4 Slot: 13
	public override void ApplyOptions(GUILayoutOption[] options) { }

	// RVA: 0x26CA604 Offset: 0x26CA604 VA: 0x26CA604 Slot: 12
	protected override void ApplyStyleSettings(GUIStyle style) { }

	// RVA: 0x26CA6D4 Offset: 0x26CA6D4 VA: 0x26CA6D4
	public void ResetCursor() { }

	// RVA: 0x26CA6DC Offset: 0x26CA6DC VA: 0x26CA6DC
	public GUILayoutEntry GetNext() { }

	// RVA: 0x26CAB14 Offset: 0x26CAB14 VA: 0x26CAB14
	public void Add(GUILayoutEntry e) { }

	// RVA: 0x26CAB84 Offset: 0x26CAB84 VA: 0x26CAB84 Slot: 8
	public override void CalcWidth() { }

	// RVA: 0x26CB3D8 Offset: 0x26CB3D8 VA: 0x26CB3D8 Slot: 10
	public override void SetHorizontal(float x, float width) { }

	// RVA: 0x26CBE34 Offset: 0x26CBE34 VA: 0x26CBE34 Slot: 9
	public override void CalcHeight() { }

	// RVA: 0x26CC58C Offset: 0x26CC58C VA: 0x26CC58C Slot: 11
	public override void SetVertical(float y, float height) { }

	// RVA: 0x26CCFEC Offset: 0x26CCFEC VA: 0x26CCFEC Slot: 3
	public override string ToString() { }
}

// Namespace: UnityEngine
internal sealed class GUIScrollGroup : GUILayoutGroup // TypeDefIndex: 2757
{
	// Fields
	public float calcMinWidth; // 0x90
	public float calcMaxWidth; // 0x94
	public float calcMinHeight; // 0x98
	public float calcMaxHeight; // 0x9C
	public float clientWidth; // 0xA0
	public float clientHeight; // 0xA4
	public bool allowHorizontalScroll; // 0xA8
	public bool allowVerticalScroll; // 0xA9
	public bool needsHorizontalScrollbar; // 0xAA
	public bool needsVerticalScrollbar; // 0xAB
	public GUIStyle horizontalScrollbar; // 0xB0
	public GUIStyle verticalScrollbar; // 0xB8

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xBFCB68 Offset: 0xBFCB68 VA: 0xBFCB68
	// RVA: 0x26CEBD0 Offset: 0x26CEBD0 VA: 0x26CEBD0
	public void .ctor() { }

	// RVA: 0x26CEBDC Offset: 0x26CEBDC VA: 0x26CEBDC Slot: 8
	public override void CalcWidth() { }

	// RVA: 0x26CEC60 Offset: 0x26CEC60 VA: 0x26CEC60 Slot: 10
	public override void SetHorizontal(float x, float width) { }

	// RVA: 0x26CED80 Offset: 0x26CED80 VA: 0x26CED80 Slot: 9
	public override void CalcHeight() { }

	// RVA: 0x26CEE7C Offset: 0x26CEE7C VA: 0x26CEE7C Slot: 11
	public override void SetVertical(float y, float height) { }
}

// Namespace: UnityEngine
internal class ScrollViewState // TypeDefIndex: 2758
{
	// Fields
	public Rect position; // 0x10
	public Rect visibleRect; // 0x20
	public Rect viewRect; // 0x30
	public Vector2 scrollPosition; // 0x40
	public bool apply; // 0x48

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xBFCB78 Offset: 0xBFCB78 VA: 0xBFCB78
	// RVA: 0x26D39C0 Offset: 0x26D39C0 VA: 0x26D39C0
	public void .ctor() { }
}

// Namespace: UnityEngine
internal class SliderState // TypeDefIndex: 2759
{
	// Fields
	public float dragStartPos; // 0x10
	public float dragStartValue; // 0x14
	public bool isDragging; // 0x18

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xBFCB88 Offset: 0xBFCB88 VA: 0xBFCB88
	// RVA: 0x2B70E7C Offset: 0x2B70E7C VA: 0x2B70E7C
	public void .ctor() { }
}

// Namespace: UnityEngine
internal struct SliderHandler // TypeDefIndex: 2760
{
	// Fields
	private readonly Rect position; // 0x0
	private readonly float currentValue; // 0x10
	private readonly float size; // 0x14
	private readonly float start; // 0x18
	private readonly float end; // 0x1C
	private readonly GUIStyle slider; // 0x20
	private readonly GUIStyle thumb; // 0x28
	private readonly bool horiz; // 0x30
	private readonly int id; // 0x34

	// Methods

	// RVA: 0xD72C40 Offset: 0xD72C40 VA: 0xD72C40
	public void .ctor(Rect position, float currentValue, float size, float start, float end, GUIStyle slider, GUIStyle thumb, bool horiz, int id) { }

	// RVA: 0xD72C64 Offset: 0xD72C64 VA: 0xD72C64
	public float Handle() { }

	// RVA: 0xD72C6C Offset: 0xD72C6C VA: 0xD72C6C
	private float OnMouseDown() { }

	// RVA: 0xD72C74 Offset: 0xD72C74 VA: 0xD72C74
	private float OnMouseDrag() { }

	// RVA: 0xD72C7C Offset: 0xD72C7C VA: 0xD72C7C
	private float OnMouseUp() { }

	// RVA: 0xD72C84 Offset: 0xD72C84 VA: 0xD72C84
	private float OnRepaint() { }

	// RVA: 0xD72C8C Offset: 0xD72C8C VA: 0xD72C8C
	private EventType CurrentEventType() { }

	// RVA: 0xD72C94 Offset: 0xD72C94 VA: 0xD72C94
	private int CurrentScrollTroughSide() { }

	// RVA: 0xD72C9C Offset: 0xD72C9C VA: 0xD72C9C
	private bool IsEmptySlider() { }

	// RVA: 0xD72CAC Offset: 0xD72CAC VA: 0xD72CAC
	private bool SupportsPageMovements() { }

	// RVA: 0xD72CB4 Offset: 0xD72CB4 VA: 0xD72CB4
	private float PageMovementValue() { }

	// RVA: 0xD72CBC Offset: 0xD72CBC VA: 0xD72CBC
	private float PageUpMovementBound() { }

	// RVA: 0xD72CC4 Offset: 0xD72CC4 VA: 0xD72CC4
	private Event CurrentEvent() { }

	// RVA: 0xD72D14 Offset: 0xD72D14 VA: 0xD72D14
	private float ValueForCurrentMousePosition() { }

	// RVA: 0xD72D1C Offset: 0xD72D1C VA: 0xD72D1C
	private float Clamp(float value) { }

	// RVA: 0xD72D24 Offset: 0xD72D24 VA: 0xD72D24
	private Rect ThumbSelectionRect() { }

	// RVA: 0xD72D2C Offset: 0xD72D2C VA: 0xD72D2C
	private void StartDraggingWithValue(float dragStartValue) { }

	// RVA: 0xD72D34 Offset: 0xD72D34 VA: 0xD72D34
	private SliderState SliderState() { }

	// RVA: 0xD72D3C Offset: 0xD72D3C VA: 0xD72D3C
	private Rect ThumbRect() { }

	// RVA: 0xD72D44 Offset: 0xD72D44 VA: 0xD72D44
	private Rect VerticalThumbRect() { }

	// RVA: 0xD72D4C Offset: 0xD72D4C VA: 0xD72D4C
	private Rect HorizontalThumbRect() { }

	// RVA: 0xD72D54 Offset: 0xD72D54 VA: 0xD72D54
	private float ClampedCurrentValue() { }

	// RVA: 0xD72D60 Offset: 0xD72D60 VA: 0xD72D60
	private float MousePosition() { }

	// RVA: 0xD72D68 Offset: 0xD72D68 VA: 0xD72D68
	private float ValuesPerPixel() { }

	// RVA: 0xD72D70 Offset: 0xD72D70 VA: 0xD72D70
	private float ThumbSize() { }

	// RVA: 0xD72D78 Offset: 0xD72D78 VA: 0xD72D78
	private float MaxValue() { }

	// RVA: 0xD72D80 Offset: 0xD72D80 VA: 0xD72D80
	private float MinValue() { }
}

// Namespace: UnityEngine
public class TextEditor // TypeDefIndex: 2761
{
	// Fields
	public TouchScreenKeyboard keyboardOnScreen; // 0x10
	public int controlID; // 0x18
	public GUIStyle style; // 0x20
	public bool multiline; // 0x28
	public bool hasHorizontalCursorPos; // 0x29
	public bool isPasswordField; // 0x2A
	[VisibleToOtherModulesAttribute] // RVA: 0xBFB8B4 Offset: 0xBFB8B4 VA: 0xBFB8B4
	internal bool m_HasFocus; // 0x2B
	public Vector2 scrollOffset; // 0x2C
	private GUIContent m_Content; // 0x38
	private Rect m_Position; // 0x40
	private int m_CursorIndex; // 0x50
	private int m_SelectIndex; // 0x54
	private bool m_RevealCursor; // 0x58
	public Vector2 graphicalCursorPos; // 0x5C
	public Vector2 graphicalSelectCursorPos; // 0x64
	private bool m_MouseDragSelectsWholeWords; // 0x6C
	private int m_DblClickInitPos; // 0x70
	private TextEditor.DblClickSnapping m_DblClickSnap; // 0x74
	private bool m_bJustSelected; // 0x75
	private int m_iAltCursorPos; // 0x78
	private string oldText; // 0x80
	private int oldPos; // 0x88
	private int oldSelectPos; // 0x8C
	private static Dictionary<Event, TextEditor.TextEditOp> s_Keyactions; // 0x0

	// Properties
	[ObsoleteAttribute] // RVA: 0xBFD46C Offset: 0xBFD46C VA: 0xBFD46C
	public GUIContent content { get; set; }
	public string text { get; set; }
	public Rect position { get; set; }
	internal virtual Rect localPosition { get; }
	public int cursorIndex { get; set; }
	public int selectIndex { get; set; }
	public bool hasSelection { get; }

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xBFCB98 Offset: 0xBFCB98 VA: 0xBFCB98
	// RVA: 0x2B70E84 Offset: 0x2B70E84 VA: 0x2B70E84
	public void .ctor() { }

	// RVA: 0x2B70F70 Offset: 0x2B70F70 VA: 0x2B70F70
	public GUIContent get_content() { }

	// RVA: 0x2B70F78 Offset: 0x2B70F78 VA: 0x2B70F78
	public void set_content(GUIContent value) { }

	// RVA: 0x2B70F80 Offset: 0x2B70F80 VA: 0x2B70F80
	public string get_text() { }

	// RVA: 0x2B70FB0 Offset: 0x2B70FB0 VA: 0x2B70FB0
	public void set_text(string value) { }

	// RVA: 0x2B710AC Offset: 0x2B710AC VA: 0x2B710AC
	public Rect get_position() { }

	// RVA: 0x2B710B8 Offset: 0x2B710B8 VA: 0x2B710B8
	public void set_position(Rect value) { }

	[VisibleToOtherModulesAttribute] // RVA: 0xBFCBA8 Offset: 0xBFCBA8 VA: 0xBFCBA8
	// RVA: 0x2B7171C Offset: 0x2B7171C VA: 0x2B7171C Slot: 4
	internal virtual Rect get_localPosition() { }

	// RVA: 0x2B71728 Offset: 0x2B71728 VA: 0x2B71728
	public int get_cursorIndex() { }

	// RVA: 0x2B71730 Offset: 0x2B71730 VA: 0x2B71730
	public void set_cursorIndex(int value) { }

	// RVA: 0x2B71798 Offset: 0x2B71798 VA: 0x2B71798
	public int get_selectIndex() { }

	// RVA: 0x2B717A0 Offset: 0x2B717A0 VA: 0x2B717A0
	public void set_selectIndex(int value) { }

	// RVA: 0x2B71800 Offset: 0x2B71800 VA: 0x2B71800
	private void ClearCursorPos() { }

	// RVA: 0x2B71810 Offset: 0x2B71810 VA: 0x2B71810
	public void OnFocus() { }

	// RVA: 0x2B718BC Offset: 0x2B718BC VA: 0x2B718BC
	public void OnLostFocus() { }

	// RVA: 0x2B7192C Offset: 0x2B7192C VA: 0x2B7192C
	private void GrabGraphicalCursorPos() { }

	// RVA: 0x2B71A2C Offset: 0x2B71A2C VA: 0x2B71A2C
	public bool HandleKeyEvent(Event e) { }

	// RVA: 0x2B725B0 Offset: 0x2B725B0 VA: 0x2B725B0
	public bool DeleteLineBack() { }

	// RVA: 0x2B7293C Offset: 0x2B7293C VA: 0x2B7293C
	public bool DeleteWordBack() { }

	// RVA: 0x2B72AD8 Offset: 0x2B72AD8 VA: 0x2B72AD8
	public bool DeleteWordForward() { }

	// RVA: 0x2B72D90 Offset: 0x2B72D90 VA: 0x2B72D90
	public bool Delete() { }

	// RVA: 0x2B72F70 Offset: 0x2B72F70 VA: 0x2B72F70
	public bool Backspace() { }

	// RVA: 0x2B71860 Offset: 0x2B71860 VA: 0x2B71860
	public void SelectAll() { }

	// RVA: 0x2B73108 Offset: 0x2B73108 VA: 0x2B73108
	public void SelectNone() { }

	// RVA: 0x2B726CC Offset: 0x2B726CC VA: 0x2B726CC
	public bool get_hasSelection() { }

	// RVA: 0x2B726DC Offset: 0x2B726DC VA: 0x2B726DC
	public bool DeleteSelection() { }

	// RVA: 0x2B73138 Offset: 0x2B73138 VA: 0x2B73138
	public void ReplaceSelection(string replace) { }

	// RVA: 0x2B73200 Offset: 0x2B73200 VA: 0x2B73200
	public void Insert(char c) { }

	// RVA: 0x2B73238 Offset: 0x2B73238 VA: 0x2B73238
	public void MoveRight() { }

	// RVA: 0x2B732C0 Offset: 0x2B732C0 VA: 0x2B732C0
	public void MoveLeft() { }

	// RVA: 0x2B73328 Offset: 0x2B73328 VA: 0x2B73328
	public void MoveUp() { }

	// RVA: 0x2B7342C Offset: 0x2B7342C VA: 0x2B7342C
	public void MoveDown() { }

	// RVA: 0x2B73570 Offset: 0x2B73570 VA: 0x2B73570
	public void MoveLineStart() { }

	// RVA: 0x2B73610 Offset: 0x2B73610 VA: 0x2B73610
	public void MoveLineEnd() { }

	// RVA: 0x2B736C8 Offset: 0x2B736C8 VA: 0x2B736C8
	public void MoveGraphicalLineStart() { }

	// RVA: 0x2B7381C Offset: 0x2B7381C VA: 0x2B7381C
	public void MoveGraphicalLineEnd() { }

	// RVA: 0x2B7397C Offset: 0x2B7397C VA: 0x2B7397C
	public void MoveTextStart() { }

	// RVA: 0x2B739A8 Offset: 0x2B739A8 VA: 0x2B739A8
	public void MoveTextEnd() { }

	// RVA: 0x2B739F8 Offset: 0x2B739F8 VA: 0x2B739F8
	private int IndexOfEndOfLine(int startIndex) { }

	// RVA: 0x2B73A78 Offset: 0x2B73A78 VA: 0x2B73A78
	public void MoveParagraphForward() { }

	// RVA: 0x2B73B20 Offset: 0x2B73B20 VA: 0x2B73B20
	public void MoveParagraphBackward() { }

	// RVA: 0x2B73BC8 Offset: 0x2B73BC8 VA: 0x2B73BC8
	public void MoveCursorToPosition(Vector2 cursorPosition) { }

	// RVA: 0x2B73C24 Offset: 0x2B73C24 VA: 0x2B73C24
	protected internal void MoveCursorToPosition_Internal(Vector2 cursorPosition, bool shift) { }

	// RVA: 0x2B73D60 Offset: 0x2B73D60 VA: 0x2B73D60
	public void SelectToPosition(Vector2 cursorPosition) { }

	// RVA: 0x2B7429C Offset: 0x2B7429C VA: 0x2B7429C
	public void SelectLeft() { }

	// RVA: 0x2B742F8 Offset: 0x2B742F8 VA: 0x2B742F8
	public void SelectRight() { }

	// RVA: 0x2B74354 Offset: 0x2B74354 VA: 0x2B74354
	public void SelectUp() { }

	// RVA: 0x2B7440C Offset: 0x2B7440C VA: 0x2B7440C
	public void SelectDown() { }

	// RVA: 0x2B744E4 Offset: 0x2B744E4 VA: 0x2B744E4
	public void SelectTextEnd() { }

	// RVA: 0x2B74524 Offset: 0x2B74524 VA: 0x2B74524
	public void SelectTextStart() { }

	// RVA: 0x2B7452C Offset: 0x2B7452C VA: 0x2B7452C
	public void MouseDragSelectsWholeWords(bool on) { }

	// RVA: 0x2B74540 Offset: 0x2B74540 VA: 0x2B74540
	public void DblClickSnap(TextEditor.DblClickSnapping snapping) { }

	// RVA: 0x2B73728 Offset: 0x2B73728 VA: 0x2B73728
	private int GetGraphicalLineStart(int p) { }

	// RVA: 0x2B7387C Offset: 0x2B7387C VA: 0x2B7387C
	private int GetGraphicalLineEnd(int p) { }

	// RVA: 0x2B74548 Offset: 0x2B74548 VA: 0x2B74548
	private int FindNextSeperator(int startPos) { }

	// RVA: 0x2B746FC Offset: 0x2B746FC VA: 0x2B746FC
	private int FindPrevSeperator(int startPos) { }

	// RVA: 0x2B7479C Offset: 0x2B7479C VA: 0x2B7479C
	public void MoveWordRight() { }

	// RVA: 0x2B7480C Offset: 0x2B7480C VA: 0x2B7480C
	public void MoveToStartOfNextWord() { }

	// RVA: 0x2B74870 Offset: 0x2B74870 VA: 0x2B74870
	public void MoveToEndOfPreviousWord() { }

	// RVA: 0x2B748D4 Offset: 0x2B748D4 VA: 0x2B748D4
	public void SelectToStartOfNextWord() { }

	// RVA: 0x2B7490C Offset: 0x2B7490C VA: 0x2B7490C
	public void SelectToEndOfPreviousWord() { }

	// RVA: 0x2B745F0 Offset: 0x2B745F0 VA: 0x2B745F0
	private TextEditor.CharacterType ClassifyChar(int index) { }

	// RVA: 0x2B72BA8 Offset: 0x2B72BA8 VA: 0x2B72BA8
	public int FindStartOfNextWord(int p) { }

	// RVA: 0x2B72A0C Offset: 0x2B72A0C VA: 0x2B72A0C
	private int FindEndOfPreviousWord(int p) { }

	// RVA: 0x2B74944 Offset: 0x2B74944 VA: 0x2B74944
	public void MoveWordLeft() { }

	// RVA: 0x2B749A0 Offset: 0x2B749A0 VA: 0x2B749A0
	public void SelectWordRight() { }

	// RVA: 0x2B74A18 Offset: 0x2B74A18 VA: 0x2B74A18
	public void SelectWordLeft() { }

	// RVA: 0x2B74A90 Offset: 0x2B74A90 VA: 0x2B74A90
	public void ExpandSelectGraphicalLineStart() { }

	// RVA: 0x2B74AF8 Offset: 0x2B74AF8 VA: 0x2B74AF8
	public void ExpandSelectGraphicalLineEnd() { }

	// RVA: 0x2B74B60 Offset: 0x2B74B60 VA: 0x2B74B60
	public void SelectGraphicalLineStart() { }

	// RVA: 0x2B74B98 Offset: 0x2B74B98 VA: 0x2B74B98
	public void SelectGraphicalLineEnd() { }

	// RVA: 0x2B74BD0 Offset: 0x2B74BD0 VA: 0x2B74BD0
	public void SelectParagraphForward() { }

	// RVA: 0x2B74C6C Offset: 0x2B74C6C VA: 0x2B74C6C
	public void SelectParagraphBackward() { }

	// RVA: 0x2B74D40 Offset: 0x2B74D40 VA: 0x2B74D40
	public void SelectCurrentWord() { }

	// RVA: 0x2B74118 Offset: 0x2B74118 VA: 0x2B74118
	private int FindEndOfClassification(int p, TextEditor.Direction dir) { }

	// RVA: 0x2B74DE0 Offset: 0x2B74DE0 VA: 0x2B74DE0
	public void SelectCurrentParagraph() { }

	// RVA: 0x2B74E98 Offset: 0x2B74E98 VA: 0x2B74E98
	public void UpdateScrollOffsetIfNeeded(Event evt) { }

	[VisibleToOtherModulesAttribute] // RVA: 0xBFCC20 Offset: 0xBFCC20 VA: 0xBFCC20
	// RVA: 0x2B7113C Offset: 0x2B7113C VA: 0x2B7113C
	internal void UpdateScrollOffset() { }

	// RVA: 0x2B74F08 Offset: 0x2B74F08 VA: 0x2B74F08
	public void DrawCursor(string newText) { }

	// RVA: 0x2B72210 Offset: 0x2B72210 VA: 0x2B72210
	private bool PerformOperation(TextEditor.TextEditOp operation) { }

	// RVA: 0x2B75604 Offset: 0x2B75604 VA: 0x2B75604
	public void SaveBackup() { }

	// RVA: 0x2B7546C Offset: 0x2B7546C VA: 0x2B7546C
	public bool Cut() { }

	// RVA: 0x2B754AC Offset: 0x2B754AC VA: 0x2B754AC
	public void Copy() { }

	// RVA: 0x2B75630 Offset: 0x2B75630 VA: 0x2B75630
	private static string ReplaceNewlinesWithSpaces(string value) { }

	// RVA: 0x2B7554C Offset: 0x2B7554C VA: 0x2B7554C
	public bool Paste() { }

	// RVA: 0x2B756DC Offset: 0x2B756DC VA: 0x2B756DC
	private static void MapKey(string key, TextEditor.TextEditOp action) { }

	// RVA: 0x2B71BB0 Offset: 0x2B71BB0 VA: 0x2B71BB0
	private void InitKeyActions() { }

	// RVA: 0x2B732B4 Offset: 0x2B732B4 VA: 0x2B732B4
	public void DetectFocusChange() { }

	// RVA: 0x2B75770 Offset: 0x2B75770 VA: 0x2B75770 Slot: 5
	internal virtual void OnDetectFocusChange() { }

	// RVA: 0x2B757DC Offset: 0x2B757DC VA: 0x2B757DC Slot: 6
	internal virtual void OnCursorIndexChange() { }

	// RVA: 0x2B757E0 Offset: 0x2B757E0 VA: 0x2B757E0 Slot: 7
	internal virtual void OnSelectIndexChange() { }

	// RVA: 0x2B757E4 Offset: 0x2B757E4 VA: 0x2B757E4
	private void ClampTextIndex(ref int index) { }

	// RVA: 0x2B71068 Offset: 0x2B71068 VA: 0x2B71068
	private void EnsureValidCodePointIndex(ref int index) { }

	// RVA: 0x2B75894 Offset: 0x2B75894 VA: 0x2B75894
	private bool IsValidCodePointIndex(int index) { }

	// RVA: 0x2B73048 Offset: 0x2B73048 VA: 0x2B73048
	private int PreviousCodePointIndex(int index) { }

	// RVA: 0x2B72E70 Offset: 0x2B72E70 VA: 0x2B72E70
	private int NextCodePointIndex(int index) { }
}

// Namespace: 
public enum TextEditor.DblClickSnapping // TypeDefIndex: 2762
{
	// Fields
	public byte value__; // 0x0
	public const TextEditor.DblClickSnapping WORDS = 0;
	public const TextEditor.DblClickSnapping PARAGRAPHS = 1;
}

// Namespace: 
private enum TextEditor.CharacterType // TypeDefIndex: 2763
{
	// Fields
	public int value__; // 0x0
	public const TextEditor.CharacterType LetterLike = 0;
	public const TextEditor.CharacterType Symbol = 1;
	public const TextEditor.CharacterType Symbol2 = 2;
	public const TextEditor.CharacterType WhiteSpace = 3;
}

// Namespace: 
private enum TextEditor.Direction // TypeDefIndex: 2764
{
	// Fields
	public int value__; // 0x0
	public const TextEditor.Direction Forward = 0;
	public const TextEditor.Direction Backward = 1;
}

// Namespace: 
private enum TextEditor.TextEditOp // TypeDefIndex: 2765
{
	// Fields
	public int value__; // 0x0
	public const TextEditor.TextEditOp MoveLeft = 0;
	public const TextEditor.TextEditOp MoveRight = 1;
	public const TextEditor.TextEditOp MoveUp = 2;
	public const TextEditor.TextEditOp MoveDown = 3;
	public const TextEditor.TextEditOp MoveLineStart = 4;
	public const TextEditor.TextEditOp MoveLineEnd = 5;
	public const TextEditor.TextEditOp MoveTextStart = 6;
	public const TextEditor.TextEditOp MoveTextEnd = 7;
	public const TextEditor.TextEditOp MovePageUp = 8;
	public const TextEditor.TextEditOp MovePageDown = 9;
	public const TextEditor.TextEditOp MoveGraphicalLineStart = 10;
	public const TextEditor.TextEditOp MoveGraphicalLineEnd = 11;
	public const TextEditor.TextEditOp MoveWordLeft = 12;
	public const TextEditor.TextEditOp MoveWordRight = 13;
	public const TextEditor.TextEditOp MoveParagraphForward = 14;
	public const TextEditor.TextEditOp MoveParagraphBackward = 15;
	public const TextEditor.TextEditOp MoveToStartOfNextWord = 16;
	public const TextEditor.TextEditOp MoveToEndOfPreviousWord = 17;
	public const TextEditor.TextEditOp SelectLeft = 18;
	public const TextEditor.TextEditOp SelectRight = 19;
	public const TextEditor.TextEditOp SelectUp = 20;
	public const TextEditor.TextEditOp SelectDown = 21;
	public const TextEditor.TextEditOp SelectTextStart = 22;
	public const TextEditor.TextEditOp SelectTextEnd = 23;
	public const TextEditor.TextEditOp SelectPageUp = 24;
	public const TextEditor.TextEditOp SelectPageDown = 25;
	public const TextEditor.TextEditOp ExpandSelectGraphicalLineStart = 26;
	public const TextEditor.TextEditOp ExpandSelectGraphicalLineEnd = 27;
	public const TextEditor.TextEditOp SelectGraphicalLineStart = 28;
	public const TextEditor.TextEditOp SelectGraphicalLineEnd = 29;
	public const TextEditor.TextEditOp SelectWordLeft = 30;
	public const TextEditor.TextEditOp SelectWordRight = 31;
	public const TextEditor.TextEditOp SelectToEndOfPreviousWord = 32;
	public const TextEditor.TextEditOp SelectToStartOfNextWord = 33;
	public const TextEditor.TextEditOp SelectParagraphBackward = 34;
	public const TextEditor.TextEditOp SelectParagraphForward = 35;
	public const TextEditor.TextEditOp Delete = 36;
	public const TextEditor.TextEditOp Backspace = 37;
	public const TextEditor.TextEditOp DeleteWordBack = 38;
	public const TextEditor.TextEditOp DeleteWordForward = 39;
	public const TextEditor.TextEditOp DeleteLineBack = 40;
	public const TextEditor.TextEditOp Cut = 41;
	public const TextEditor.TextEditOp Copy = 42;
	public const TextEditor.TextEditOp Paste = 43;
	public const TextEditor.TextEditOp SelectAll = 44;
	public const TextEditor.TextEditOp SelectNone = 45;
	public const TextEditor.TextEditOp ScrollStart = 46;
	public const TextEditor.TextEditOp ScrollEnd = 47;
	public const TextEditor.TextEditOp ScrollPageUp = 48;
	public const TextEditor.TextEditOp ScrollPageDown = 49;
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2766
{}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBFE5CC Offset: 0xBFE5CC VA: 0xBFE5CC
public static class JsonUtility // TypeDefIndex: 2767
{
	// Methods

	[FreeFunctionAttribute] // RVA: 0xBFE604 Offset: 0xBFE604 VA: 0xBFE604
	[ThreadSafeAttribute] // RVA: 0xBFE604 Offset: 0xBFE604 VA: 0xBFE604
	// RVA: 0x2B99C84 Offset: 0x2B99C84 VA: 0x2B99C84
	private static string ToJsonInternal(object obj, bool prettyPrint) { }

	[FreeFunctionAttribute] // RVA: 0xBFE654 Offset: 0xBFE654 VA: 0xBFE654
	[ThreadSafeAttribute] // RVA: 0xBFE654 Offset: 0xBFE654 VA: 0xBFE654
	// RVA: 0x2B99CF8 Offset: 0x2B99CF8 VA: 0x2B99CF8
	private static object FromJsonInternal(string json, object objectToOverwrite, Type type) { }

	// RVA: 0x2B99D7C Offset: 0x2B99D7C VA: 0x2B99D7C
	public static string ToJson(object obj) { }

	// RVA: 0x2B99D84 Offset: 0x2B99D84 VA: 0x2B99D84
	public static string ToJson(object obj, bool prettyPrint) { }

	// RVA: -1 Offset: -1
	public static T FromJson<T>(string json) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C31034 Offset: 0x1C31034 VA: 0x1C31034
	|-JsonUtility.FromJson<Purchase.PurchaseData>
	|-JsonUtility.FromJson<SkuDetails>
	|-JsonUtility.FromJson<RecommendedConfigSaveData>
	|-JsonUtility.FromJson<ProductCatalog>
	|-JsonUtility.FromJson<object>
	*/

	// RVA: 0x2B99EC0 Offset: 0x2B99EC0 VA: 0x2B99EC0
	public static object FromJson(string json, Type type) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2768
{}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBFF7C4 Offset: 0xBFF7C4 VA: 0xBFF7C4
[NativeHeaderAttribute] // RVA: 0xBFF7C4 Offset: 0xBFF7C4 VA: 0xBFF7C4
[NativeHeaderAttribute] // RVA: 0xBFF7C4 Offset: 0xBFF7C4 VA: 0xBFF7C4
[UsedByNativeCodeAttribute] // RVA: 0xBFF7C4 Offset: 0xBFF7C4 VA: 0xBFF7C4
[RequireComponent] // RVA: 0xBFF7C4 Offset: 0xBFF7C4 VA: 0xBFF7C4
[RequireComponent] // RVA: 0xBFF7C4 Offset: 0xBFF7C4 VA: 0xBFF7C4
[NativeHeaderAttribute] // RVA: 0xBFF7C4 Offset: 0xBFF7C4 VA: 0xBFF7C4
public sealed class ParticleSystem : Component // TypeDefIndex: 2769
{
	// Properties
	[ObsoleteAttribute] // RVA: 0xC0043C Offset: 0xC0043C VA: 0xC0043C
	public float startDelay { get; }
	[ObsoleteAttribute] // RVA: 0xC00478 Offset: 0xC00478 VA: 0xC00478
	public bool loop { set; }
	[ObsoleteAttribute] // RVA: 0xC004B4 Offset: 0xC004B4 VA: 0xC004B4
	public float duration { get; }
	[ObsoleteAttribute] // RVA: 0xC004F0 Offset: 0xC004F0 VA: 0xC004F0
	public float startSize { get; set; }
	[ObsoleteAttribute] // RVA: 0xC0052C Offset: 0xC0052C VA: 0xC0052C
	public Color startColor { set; }
	[ObsoleteAttribute] // RVA: 0xC00568 Offset: 0xC00568 VA: 0xC00568
	public float startLifetime { get; }
	[ObsoleteAttribute] // RVA: 0xC005A4 Offset: 0xC005A4 VA: 0xC005A4
	public ParticleSystemSimulationSpace simulationSpace { get; }
	public bool isPlaying { get; }
	public bool isStopped { get; }
	public int particleCount { get; }
	public float time { set; }
	public ParticleSystem.MainModule main { get; }
	public ParticleSystem.EmissionModule emission { get; }
	public ParticleSystem.ShapeModule shape { get; }

	// Methods

	[ObsoleteAttribute] // RVA: 0xBFFE94 Offset: 0xBFFE94 VA: 0xBFFE94
	// RVA: 0x2B769A8 Offset: 0x2B769A8 VA: 0x2B769A8
	public void Emit(Vector3 position, Vector3 velocity, float size, float lifetime, Color32 color) { }

	[ObsoleteAttribute] // RVA: 0xBFFED0 Offset: 0xBFFED0 VA: 0xBFFED0
	// RVA: 0x2B76D38 Offset: 0x2B76D38 VA: 0x2B76D38
	public void Emit(ParticleSystem.Particle particle) { }

	// RVA: 0x2B76D3C Offset: 0x2B76D3C VA: 0x2B76D3C
	public float get_startDelay() { }

	// RVA: 0x2B76D4C Offset: 0x2B76D4C VA: 0x2B76D4C
	public void set_loop(bool value) { }

	// RVA: 0x2B76D60 Offset: 0x2B76D60 VA: 0x2B76D60
	public float get_duration() { }

	// RVA: 0x2B76D6C Offset: 0x2B76D6C VA: 0x2B76D6C
	public float get_startSize() { }

	// RVA: 0x2B76D78 Offset: 0x2B76D78 VA: 0x2B76D78
	public void set_startSize(float value) { }

	// RVA: 0x2B76D84 Offset: 0x2B76D84 VA: 0x2B76D84
	public void set_startColor(Color value) { }

	// RVA: 0x2B76E58 Offset: 0x2B76E58 VA: 0x2B76E58
	public float get_startLifetime() { }

	// RVA: 0x2B76E64 Offset: 0x2B76E64 VA: 0x2B76E64
	public ParticleSystemSimulationSpace get_simulationSpace() { }

	[NativeNameAttribute] // RVA: 0xBFFF0C Offset: 0xBFFF0C VA: 0xBFFF0C
	// RVA: 0x2B76E70 Offset: 0x2B76E70 VA: 0x2B76E70
	public bool get_isPlaying() { }

	[NativeNameAttribute] // RVA: 0xBFFF44 Offset: 0xBFFF44 VA: 0xBFFF44
	// RVA: 0x2B76EDC Offset: 0x2B76EDC VA: 0x2B76EDC
	public bool get_isStopped() { }

	[NativeNameAttribute] // RVA: 0xBFFF7C Offset: 0xBFFF7C VA: 0xBFFF7C
	// RVA: 0x2B76F48 Offset: 0x2B76F48 VA: 0x2B76F48
	public int get_particleCount() { }

	[NativeNameAttribute] // RVA: 0xBFFFB4 Offset: 0xBFFFB4 VA: 0xBFFFB4
	// RVA: 0x2B76FB4 Offset: 0x2B76FB4 VA: 0x2B76FB4
	public void set_time(float value) { }

	// RVA: 0x2B76D40 Offset: 0x2B76D40 VA: 0x2B76D40
	public ParticleSystem.MainModule get_main() { }

	// RVA: 0x2B77030 Offset: 0x2B77030 VA: 0x2B77030
	public ParticleSystem.EmissionModule get_emission() { }

	// RVA: 0x2B7703C Offset: 0x2B7703C VA: 0x2B7703C
	public ParticleSystem.ShapeModule get_shape() { }

	[FreeFunctionAttribute] // RVA: 0xBFFFEC Offset: 0xBFFFEC VA: 0xBFFFEC
	// RVA: 0x2B77048 Offset: 0x2B77048 VA: 0x2B77048
	public void Simulate(float t, bool withChildren, bool restart, bool fixedTimeStep) { }

	// RVA: 0x2B770EC Offset: 0x2B770EC VA: 0x2B770EC
	public void Simulate(float t, bool withChildren, bool restart) { }

	// RVA: 0x2B770FC Offset: 0x2B770FC VA: 0x2B770FC
	public void Simulate(float t, bool withChildren) { }

	// RVA: 0x2B7710C Offset: 0x2B7710C VA: 0x2B7710C
	public void Simulate(float t) { }

	[FreeFunctionAttribute] // RVA: 0xC00040 Offset: 0xC00040 VA: 0xC00040
	// RVA: 0x2B7711C Offset: 0x2B7711C VA: 0x2B7711C
	public void Play(bool withChildren) { }

	// RVA: 0x2B77190 Offset: 0x2B77190 VA: 0x2B77190
	public void Play() { }

	[FreeFunctionAttribute] // RVA: 0xC00094 Offset: 0xC00094 VA: 0xC00094
	// RVA: 0x2B77198 Offset: 0x2B77198 VA: 0x2B77198
	public void Pause(bool withChildren) { }

	// RVA: 0x2B7720C Offset: 0x2B7720C VA: 0x2B7720C
	public void Pause() { }

	[FreeFunctionAttribute] // RVA: 0xC000E8 Offset: 0xC000E8 VA: 0xC000E8
	// RVA: 0x2B77214 Offset: 0x2B77214 VA: 0x2B77214
	public void Stop(bool withChildren, ParticleSystemStopBehavior stopBehavior) { }

	// RVA: 0x2B77298 Offset: 0x2B77298 VA: 0x2B77298
	public void Stop(bool withChildren) { }

	// RVA: 0x2B772A4 Offset: 0x2B772A4 VA: 0x2B772A4
	public void Stop() { }

	[FreeFunctionAttribute] // RVA: 0xC0013C Offset: 0xC0013C VA: 0xC0013C
	// RVA: 0x2B772B0 Offset: 0x2B772B0 VA: 0x2B772B0
	public void Clear(bool withChildren) { }

	// RVA: 0x2B77324 Offset: 0x2B77324 VA: 0x2B77324
	public void Clear() { }

	[FreeFunctionAttribute] // RVA: 0xC00190 Offset: 0xC00190 VA: 0xC00190
	// RVA: 0x2B7732C Offset: 0x2B7732C VA: 0x2B7732C
	public bool IsAlive(bool withChildren) { }

	// RVA: 0x2B773A0 Offset: 0x2B773A0 VA: 0x2B773A0
	public bool IsAlive() { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC001E4 Offset: 0xC001E4 VA: 0xC001E4
	// RVA: 0x2B773A8 Offset: 0x2B773A8 VA: 0x2B773A8
	public void Emit(int count) { }
