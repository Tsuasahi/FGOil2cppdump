}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC424D4 Offset: 0xC424D4 VA: 0xC424D4
private sealed class PresentSelectableDlgComponent.<Close>c__AnonStorey0 // TypeDefIndex: 5991
{
	// Fields
	internal Action callback; // 0x10
	internal PresentSelectableDlgComponent $this; // 0x18

	// Methods

	// RVA: 0x12D204C Offset: 0x12D204C VA: 0x12D204C
	public void .ctor() { }

	// RVA: 0x12D23A4 Offset: 0x12D23A4 VA: 0x12D23A4
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC424E4 Offset: 0xC424E4 VA: 0xC424E4
private sealed class PresentSelectableDlgComponent.<OpenItemConfirmDlg>c__AnonStorey1 // TypeDefIndex: 5992
{
	// Fields
	internal ItemSelectEntity itemSelectEnt; // 0x10
	internal ItemEntity itmEnt; // 0x18
	internal int itemHold; // 0x20
	internal PresentSelectableDlgComponent $this; // 0x28

	// Methods

	// RVA: 0x12D21CC Offset: 0x12D21CC VA: 0x12D21CC
	public void .ctor() { }

	// RVA: 0x12D23E0 Offset: 0x12D23E0 VA: 0x12D23E0
	internal void <>m__0() { }

	// RVA: 0x12D2938 Offset: 0x12D2938 VA: 0x12D2938
	internal void <>m__1(int result) { }

	// RVA: 0x12D2A44 Offset: 0x12D2A44 VA: 0x12D2A44
	internal void <>m__2(int result) { }
}

// Namespace: 
public class PresentSelectableItemComponent : MonoBehaviour // TypeDefIndex: 5993
{
	// Fields
	public ItemIconComponent itemIconInfo; // 0x18
	public UILabel itemNameLb; // 0x20
	public UILabel itemDetailLb; // 0x28
	public UILabel currentInfoLb; // 0x30
	public UILabel currentNumLb; // 0x38
	public ItemIconComponent ticketSp; // 0x40
	public UILabel spendNumLb; // 0x48
	public GameObject ticketObj; // 0x50
	public GameObject maskImg; // 0x58
	private ItemSelectEntity itemSelectEnt; // 0x60
	private ItemEntity itemEnt; // 0x68
	private bool isEnableSelect; // 0x70
	private int itemHold; // 0x74
	private int giftNum; // 0x78
	private PresentSelectableDlgComponent dialog; // 0x80

	// Methods

	// RVA: 0x12D2B50 Offset: 0x12D2B50 VA: 0x12D2B50
	public void .ctor() { }

	// RVA: 0x12D0B04 Offset: 0x12D0B04 VA: 0x12D0B04
	public int setItemInfo(ItemSelectEntity data, int ticketsHave, int ticketImgId, PresentSelectableDlgComponent dlg) { }

	// RVA: 0x12D2B58 Offset: 0x12D2B58 VA: 0x12D2B58
	private void setEnableSelectItem() { }

	// RVA: 0x12D2B98 Offset: 0x12D2B98 VA: 0x12D2B98
	public void OnClickItem() { }
}

// Namespace: 
public class PresentSelectableItemConfirmDlg : BaseDialog // TypeDefIndex: 5994
{
	// Fields
	[SerializeField] // RVA: 0xC529AC Offset: 0xC529AC VA: 0xC529AC
	protected UserPresentListViewManager mParent; // 0x58
	[SerializeField] // RVA: 0xC529BC Offset: 0xC529BC VA: 0xC529BC
	protected PresentSelectableItemComponent itemInfo; // 0x60
	[SerializeField] // RVA: 0xC529CC Offset: 0xC529CC VA: 0xC529CC
	protected UILabel TitleLabel; // 0x68
	[SerializeField] // RVA: 0xC529DC Offset: 0xC529DC VA: 0xC529DC
	protected UILabel DetailLabel; // 0x70
	[SerializeField] // RVA: 0xC529EC Offset: 0xC529EC VA: 0xC529EC
	protected UICommonButton decideButton; // 0x78
	[SerializeField] // RVA: 0xC529FC Offset: 0xC529FC VA: 0xC529FC
	protected UICommonButton cancelButton; // 0x80
	[SerializeField] // RVA: 0xC52A0C Offset: 0xC52A0C VA: 0xC52A0C
	protected UILabel priceDataLabel; // 0x88
	[SerializeField] // RVA: 0xC52A1C Offset: 0xC52A1C VA: 0xC52A1C
	protected UILabel priceNumLabel; // 0x90
	[SerializeField] // RVA: 0xC52A2C Offset: 0xC52A2C VA: 0xC52A2C
	protected ItemIconComponent ticketIcon; // 0x98
	protected PresentSelectableItemConfirmDlg.State state; // 0xA0
	[CompilerGeneratedAttribute] // RVA: 0xC52A3C Offset: 0xC52A3C VA: 0xC52A3C
	[DebuggerBrowsableAttribute] // RVA: 0xC52A3C Offset: 0xC52A3C VA: 0xC52A3C
	private PresentSelectableItemConfirmDlg.CallbackFunc callbackFunc; // 0xA8
	protected Action closeCallbackFunc; // 0xB0
	protected ItemSelectEntity itemSelectEntity; // 0xB8
	private const int BuyDecide = 1;
	private const int BuyCancel = 0;

	// Properties
	protected override GameObject closeBtnObject { get; }

	// Methods

	// RVA: 0x12D2C70 Offset: 0x12D2C70 VA: 0x12D2C70
	public void .ctor() { }

	// RVA: 0x12D2CD8 Offset: 0x12D2CD8 VA: 0x12D2CD8
	protected void add_callbackFunc(PresentSelectableItemConfirmDlg.CallbackFunc value) { }

	// RVA: 0x12D2DC4 Offset: 0x12D2DC4 VA: 0x12D2DC4
	protected void remove_callbackFunc(PresentSelectableItemConfirmDlg.CallbackFunc value) { }

	// RVA: 0x12D2EB0 Offset: 0x12D2EB0 VA: 0x12D2EB0
	public void Init() { }

	// RVA: 0x12D25DC Offset: 0x12D25DC VA: 0x12D25DC
	public void Open(ItemSelectEntity entity, ItemEntity itemEnt, int itemHold, ItemEntity ticketEnt, int ticketsHave, PresentSelectableItemConfirmDlg.CallbackFunc callback, int btnSpriteId = 0) { }

	// RVA: 0x12D2F00 Offset: 0x12D2F00 VA: 0x12D2F00
	protected void EndOpen() { }

	// RVA: 0x12D2F0C Offset: 0x12D2F0C VA: 0x12D2F0C
	public void Close() { }

	// RVA: 0x12D2F14 Offset: 0x12D2F14 VA: 0x12D2F14
	public void Close(Action callback) { }

	// RVA: 0x12D2FA4 Offset: 0x12D2FA4 VA: 0x12D2FA4
	protected void EndClose() { }

	// RVA: 0x12D3008 Offset: 0x12D3008 VA: 0x12D3008
	public void OnClickDecide() { }

	// RVA: 0x12D30C8 Offset: 0x12D30C8 VA: 0x12D30C8
	public void OnClickCancel() { }

	// RVA: 0x12D3188 Offset: 0x12D3188 VA: 0x12D3188 Slot: 4
	protected override GameObject get_closeBtnObject() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC86C4 Offset: 0xCC86C4 VA: 0xCC86C4
	// RVA: 0x12D3228 Offset: 0x12D3228 VA: 0x12D3228
	private void <OnClickDecide>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC86D4 Offset: 0xCC86D4 VA: 0xCC86D4
	// RVA: 0x12D3488 Offset: 0x12D3488 VA: 0x12D3488
	private void <OnClickCancel>m__1() { }
}

// Namespace: 
protected enum PresentSelectableItemConfirmDlg.State // TypeDefIndex: 5995
{
	// Fields
	public int value__; // 0x0
	public const PresentSelectableItemConfirmDlg.State INIT = 0;
	public const PresentSelectableItemConfirmDlg.State OPEN = 1;
	public const PresentSelectableItemConfirmDlg.State INPUT = 2;
	public const PresentSelectableItemConfirmDlg.State SELECTED = 3;
	public const PresentSelectableItemConfirmDlg.State CLOSE = 4;
}

// Namespace: 
public sealed class PresentSelectableItemConfirmDlg.CallbackFunc : MulticastDelegate // TypeDefIndex: 5996
{
	// Methods

	// RVA: 0x12D25CC Offset: 0x12D25CC VA: 0x12D25CC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x12D325C Offset: 0x12D325C VA: 0x12D325C Slot: 11
	public virtual void Invoke(int result) { }

	// RVA: 0x12D34BC Offset: 0x12D34BC VA: 0x12D34BC Slot: 12
	public virtual IAsyncResult BeginInvoke(int result, AsyncCallback callback, object object) { }

	// RVA: 0x12D3548 Offset: 0x12D3548 VA: 0x12D3548 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class TextLabelScrollDialog : BaseDialog // TypeDefIndex: 5997
{
	// Fields
	[SerializeField] // RVA: 0xC52A78 Offset: 0xC52A78 VA: 0xC52A78
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC52A88 Offset: 0xC52A88 VA: 0xC52A88
	protected UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC52A98 Offset: 0xC52A98 VA: 0xC52A98
	protected UIScrollView scrollView; // 0x68
	[SerializeField] // RVA: 0xC52AA8 Offset: 0xC52AA8 VA: 0xC52AA8
	protected UILabel closeLabel; // 0x70
	[SerializeField] // RVA: 0xC52AB8 Offset: 0xC52AB8 VA: 0xC52AB8
	protected UILabel decideLabel; // 0x78
	protected Action closeAction; // 0x80
	protected Action decideAction; // 0x88
	protected TextLabelScrollDialog.State state; // 0x90
	protected SeManager.SystemSeKind closeSE; // 0x94
	protected SeManager.SystemSeKind decideSE; // 0x98

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0xEB8EA4 Offset: 0xEB8EA4 VA: 0xEB8EA4
	public void .ctor() { }

	// RVA: 0xEB8F14 Offset: 0xEB8F14 VA: 0xEB8F14 Slot: 7
	protected virtual void Init() { }

	// RVA: 0xEB90D8 Offset: 0xEB90D8 VA: 0xEB90D8
	private void ResetScrollPosition() { }

	// RVA: 0xEB9208 Offset: 0xEB9208 VA: 0xEB9208
	public void Open(string title, string message, Action closeAction, Action decideAction) { }

	// RVA: 0xEB92B8 Offset: 0xEB92B8 VA: 0xEB92B8
	public void OnClickCloseButton() { }

	// RVA: 0xEB9370 Offset: 0xEB9370 VA: 0xEB9370
	public void OnClickDecideButton() { }

	// RVA: 0xEB9428 Offset: 0xEB9428 VA: 0xEB9428
	public void SetCloseSE(SeManager.SystemSeKind seKind) { }

	// RVA: 0xEB9430 Offset: 0xEB9430 VA: 0xEB9430
	public void SetDecideSE(SeManager.SystemSeKind seKind) { }

	// RVA: 0xEB9438 Offset: 0xEB9438 VA: 0xEB9438 Slot: 6
	protected override string get_closeBtnPath() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC86E4 Offset: 0xCC86E4 VA: 0xCC86E4
	// RVA: 0xEB9480 Offset: 0xEB9480 VA: 0xEB9480
	private void <OnClickCloseButton>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC86F4 Offset: 0xCC86F4 VA: 0xCC86F4
	// RVA: 0xEB94B4 Offset: 0xEB94B4 VA: 0xEB94B4
	private void <OnClickDecideButton>m__1() { }
}

// Namespace: 
protected enum TextLabelScrollDialog.State // TypeDefIndex: 5998
{
	// Fields
	public int value__; // 0x0
	public const TextLabelScrollDialog.State Open = 0;
	public const TextLabelScrollDialog.State Decide = 1;
	public const TextLabelScrollDialog.State Close = 2;
}

// Namespace: 
public class UserPresentBoxErrorDialog : BaseDialog // TypeDefIndex: 5999
{
	// Fields
	private static readonly Vector3 MESSAGE_POS; // 0x0
	private static readonly Vector3 MESSAGE_COMMAND_CODE_POS; // 0xC
	private static readonly Vector3 SHOP_POS; // 0x18
	private static readonly Vector3 SHOP_COMMAND_CODE_POS; // 0x24
	private static readonly Vector3 EXIT_POS; // 0x30
	private static readonly Vector3 EXIT_COMMAND_CODE_POS; // 0x3C
	[SerializeField] // RVA: 0xC52AC8 Offset: 0xC52AC8 VA: 0xC52AC8
	private UILabel messageLabel; // 0x58
	[SerializeField] // RVA: 0xC52AD8 Offset: 0xC52AD8 VA: 0xC52AD8
	private UILabel shopLabel; // 0x60
	[SerializeField] // RVA: 0xC52AE8 Offset: 0xC52AE8 VA: 0xC52AE8
	private UILabel combineLabel; // 0x68
	[SerializeField] // RVA: 0xC52AF8 Offset: 0xC52AF8 VA: 0xC52AF8
	private UILabel warehouseLabel; // 0x70
	[SerializeField] // RVA: 0xC52B08 Offset: 0xC52B08 VA: 0xC52B08
	private UILabel closeLabel; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xC52B18 Offset: 0xC52B18 VA: 0xC52B18
	[DebuggerBrowsableAttribute] // RVA: 0xC52B18 Offset: 0xC52B18 VA: 0xC52B18
	private Action<SceneList.Type> OnErrorDialogClosed; // 0x80
	private UserPresentBoxErrorDialog.JUMP_TYPE jumpType; // 0x88

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1544228 Offset: 0x1544228 VA: 0x1544228
	public void .ctor() { }

	// RVA: 0x1544290 Offset: 0x1544290 VA: 0x1544290
	public void add_OnErrorDialogClosed(Action<SceneList.Type> value) { }

	// RVA: 0x154437C Offset: 0x154437C VA: 0x154437C
	public void remove_OnErrorDialogClosed(Action<SceneList.Type> value) { }

	// RVA: 0x1544468 Offset: 0x1544468 VA: 0x1544468
	private void Init() { }

	// RVA: 0x154484C Offset: 0x154484C VA: 0x154484C
	public void Open(string message) { }

	// RVA: 0x15448A8 Offset: 0x15448A8 VA: 0x15448A8
	private void OnClickCloseButton() { }

	// RVA: 0x154494C Offset: 0x154494C VA: 0x154494C
	public void OnClickShopButton() { }

	// RVA: 0x1544C18 Offset: 0x1544C18 VA: 0x1544C18
	public void OnClickCombineButton() { }

	// RVA: 0x1544C20 Offset: 0x1544C20 VA: 0x1544C20
	public void OnClickWarehouseButton() { }

	// RVA: 0x1544C28 Offset: 0x1544C28 VA: 0x1544C28
	public void setJumpType(UserPresentBoxErrorDialog.JUMP_TYPE type) { }

	// RVA: 0x1544954 Offset: 0x1544954 VA: 0x1544954
	private void ChangeScene(SceneList.Type scene) { }

	// RVA: 0x1544EDC Offset: 0x1544EDC VA: 0x1544EDC Slot: 6
	protected override string get_closeBtnPath() { }

	// RVA: 0x1544F24 Offset: 0x1544F24 VA: 0x1544F24
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8704 Offset: 0xCC8704 VA: 0xCC8704
	// RVA: 0x15450E4 Offset: 0x15450E4 VA: 0x15450E4
	private void <OnClickCloseButton>m__0() { }
}

// Namespace: 
public enum UserPresentBoxErrorDialog.JUMP_TYPE // TypeDefIndex: 6000
{
	// Fields
	public int value__; // 0x0
	public const UserPresentBoxErrorDialog.JUMP_TYPE SERVANT = 0;
	public const UserPresentBoxErrorDialog.JUMP_TYPE EQUIP = 1;
	public const UserPresentBoxErrorDialog.JUMP_TYPE COMMAND_CODE = 2;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC424F4 Offset: 0xC424F4 VA: 0xC424F4
private sealed class UserPresentBoxErrorDialog.<ChangeScene>c__AnonStorey0 // TypeDefIndex: 6001
{
	// Fields
	internal SceneList.Type scene; // 0x10
	internal UserPresentBoxErrorDialog $this; // 0x18

	// Methods

	// RVA: 0x1544ED4 Offset: 0x1544ED4 VA: 0x1544ED4
	public void .ctor() { }

	// RVA: 0x1545150 Offset: 0x1545150 VA: 0x1545150
	internal void <>m__0() { }
}

// Namespace: 
public class UserPresentBoxEventPointRewardDialog : BaseDialog // TypeDefIndex: 6002
{
	// Fields
	protected readonly int MESSAGE_FONT_SIZE; // 0x58
	protected readonly int BASE_MESSAGE_WIDTH; // 0x5C
	protected readonly int BASE_MESSAGE_HEIGHT; // 0x60
	protected readonly int MESSAGE_GAP; // 0x64
	protected readonly float MESSAGE_BASE_POS_Y; // 0x68
	[SerializeField] // RVA: 0xC52B54 Offset: 0xC52B54 VA: 0xC52B54
	protected UILabel titleLabel; // 0x70
	[SerializeField] // RVA: 0xC52B64 Offset: 0xC52B64 VA: 0xC52B64
	protected UILabel itemLabel; // 0x78
	[SerializeField] // RVA: 0xC52B74 Offset: 0xC52B74 VA: 0xC52B74
	protected UILabel numLabel; // 0x80
	[SerializeField] // RVA: 0xC52B84 Offset: 0xC52B84 VA: 0xC52B84
	protected UILabel messageLabel; // 0x88
	[SerializeField] // RVA: 0xC52B94 Offset: 0xC52B94 VA: 0xC52B94
	protected UILabel okBtnLabel; // 0x90
	[SerializeField] // RVA: 0xC52BA4 Offset: 0xC52BA4 VA: 0xC52BA4
	protected UIScrollView scrView; // 0x98
	[SerializeField] // RVA: 0xC52BB4 Offset: 0xC52BB4 VA: 0xC52BB4
	protected UIPanel scrViewPanel; // 0xA0
	[SerializeField] // RVA: 0xC52BC4 Offset: 0xC52BC4 VA: 0xC52BC4
	protected BoxCollider scrField; // 0xA8
	protected UserPresentBoxEventPointRewardDialog.ClickDelegate clickFunc; // 0xB0
	protected Action closeEndFunc; // 0xB8
	protected bool isButtonEnable; // 0xC0
	protected bool isInitPanelDepth; // 0xC1
	protected int keepPanelDepth; // 0xC4

	// Methods

	// RVA: 0x1545204 Offset: 0x1545204 VA: 0x1545204
	public void .ctor() { }

	// RVA: 0x1545288 Offset: 0x1545288 VA: 0x1545288
	public void Init() { }

	// RVA: 0x15455CC Offset: 0x15455CC VA: 0x15455CC
	public void Open(UserPresentBoxWindow.evPointReward evpReward, UserPresentBoxEventPointRewardDialog.ClickDelegate func) { }

	// RVA: 0x1545F8C Offset: 0x1545F8C VA: 0x1545F8C
	protected void EndOpen() { }

	// RVA: 0x1545F98 Offset: 0x1545F98 VA: 0x1545F98
	public void Close() { }

	// RVA: 0x1545FA0 Offset: 0x1545FA0 VA: 0x1545FA0
	public void Close(Action callback) { }

	// RVA: 0x154602C Offset: 0x154602C VA: 0x154602C
	protected void EndClose() { }

	// RVA: 0x1546068 Offset: 0x1546068 VA: 0x1546068
	public void OnClickOk() { }
}

// Namespace: 
public sealed class UserPresentBoxEventPointRewardDialog.ClickDelegate : MulticastDelegate // TypeDefIndex: 6003
{
	// Methods

	// RVA: 0x1546324 Offset: 0x1546324 VA: 0x1546324
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x15460F8 Offset: 0x15460F8 VA: 0x15460F8 Slot: 11
	public virtual void Invoke(bool isOk) { }

	// RVA: 0x1546334 Offset: 0x1546334 VA: 0x1546334 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isOk, AsyncCallback callback, object object) { }

	// RVA: 0x15463C4 Offset: 0x15463C4 VA: 0x15463C4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class UserPresentBoxWindow : BaseMonoBehaviour // TypeDefIndex: 6004
{
	// Fields
	[SerializeField] // RVA: 0xC52BD4 Offset: 0xC52BD4 VA: 0xC52BD4
	protected PlayMakerFSM myFsm; // 0x18
	[SerializeField] // RVA: 0xC52BE4 Offset: 0xC52BE4 VA: 0xC52BE4
	protected GameObject bgObject; // 0x20
	[SerializeField] // RVA: 0xC52BF4 Offset: 0xC52BF4 VA: 0xC52BF4
	protected GameObject titlePrefab; // 0x28
	protected TitleInfoControl titleInfo; // 0x30
	[SerializeField] // RVA: 0xC52C04 Offset: 0xC52C04 VA: 0xC52C04
	protected UILabel nonPresentNoticeLabel; // 0x38
	[SerializeField] // RVA: 0xC52C14 Offset: 0xC52C14 VA: 0xC52C14
	protected UILabel presentInfoLabel; // 0x40
	[SerializeField] // RVA: 0xC52C24 Offset: 0xC52C24 VA: 0xC52C24
	protected UILabel presentSelectNumLabel; // 0x48
	[SerializeField] // RVA: 0xC52C34 Offset: 0xC52C34 VA: 0xC52C34
	protected UILabel presentNoticeLabel; // 0x50
	[SerializeField] // RVA: 0xC52C44 Offset: 0xC52C44 VA: 0xC52C44
	protected UIButton allReceiveBtn; // 0x58
	private bool isReceiveFlg; // 0x60
	[SerializeField] // RVA: 0xC52C54 Offset: 0xC52C54 VA: 0xC52C54
	protected UIButton itemReceiveBtn; // 0x68
	private bool isItemReceiveFlg; // 0x70
	[SerializeField] // RVA: 0xC52C64 Offset: 0xC52C64 VA: 0xC52C64
	protected UIButton checkedItemBtn; // 0x78
	private bool isCheckedFlg; // 0x80
	[SerializeField] // RVA: 0xC52C74 Offset: 0xC52C74 VA: 0xC52C74
	protected UILabel svtNumValLb; // 0x88
	[SerializeField] // RVA: 0xC52C84 Offset: 0xC52C84 VA: 0xC52C84
	protected UISprite svtNumValIconSp; // 0x90
	[SerializeField] // RVA: 0xC52C94 Offset: 0xC52C94 VA: 0xC52C94
	protected UILabel svtEqNumValLb; // 0x98
	[SerializeField] // RVA: 0xC52CA4 Offset: 0xC52CA4 VA: 0xC52CA4
	protected UISprite svtEqNumValIconSp; // 0xA0
	[SerializeField] // RVA: 0xC52CB4 Offset: 0xC52CB4 VA: 0xC52CB4
	protected UILabel commandCodeNumValLb; // 0xA8
	[SerializeField] // RVA: 0xC52CC4 Offset: 0xC52CC4 VA: 0xC52CC4
	protected UISprite commandCodeNumValIconSp; // 0xB0
	[SerializeField] // RVA: 0xC52CD4 Offset: 0xC52CD4 VA: 0xC52CD4
	protected UILabel stoneNumValLb; // 0xB8
	[SerializeField] // RVA: 0xC52CE4 Offset: 0xC52CE4 VA: 0xC52CE4
	protected UISprite stoneNumValIconSp; // 0xC0
	[SerializeField] // RVA: 0xC52CF4 Offset: 0xC52CF4 VA: 0xC52CF4
	protected UILabel rpNumValLb; // 0xC8
	[SerializeField] // RVA: 0xC52D04 Offset: 0xC52D04 VA: 0xC52D04
	protected UISprite rpNumValIconSp; // 0xD0
	[SerializeField] // RVA: 0xC52D14 Offset: 0xC52D14 VA: 0xC52D14
	protected UILabel mpNumValLb; // 0xD8
	[SerializeField] // RVA: 0xC52D24 Offset: 0xC52D24 VA: 0xC52D24
	protected UISprite mpNumValIconSp; // 0xE0
	[SerializeField] // RVA: 0xC52D34 Offset: 0xC52D34 VA: 0xC52D34
	protected UILabel qpNumValLb; // 0xE8
	[SerializeField] // RVA: 0xC52D44 Offset: 0xC52D44 VA: 0xC52D44
	protected UISprite qpNumValIconSp; // 0xF0
	[SerializeField] // RVA: 0xC52D54 Offset: 0xC52D54 VA: 0xC52D54
	protected UILabel fpNumValLb; // 0xF8
	[SerializeField] // RVA: 0xC52D64 Offset: 0xC52D64 VA: 0xC52D64
	protected UISprite fpNumValIconSp; // 0x100
	[SerializeField] // RVA: 0xC52D74 Offset: 0xC52D74 VA: 0xC52D74
	protected UserPresentListViewManager userPresentListViewManager; // 0x108
	[SerializeField] // RVA: 0xC52D84 Offset: 0xC52D84 VA: 0xC52D84
	protected UIPanel effectPanel; // 0x110
	[SerializeField] // RVA: 0xC52D94 Offset: 0xC52D94 VA: 0xC52D94
	protected UICommonButton sortBtn; // 0x118
	[SerializeField] // RVA: 0xC52DA4 Offset: 0xC52DA4 VA: 0xC52DA4
	protected UserPresentBoxEventPointRewardDialog evpDialog; // 0x120
	protected UserPresentBoxWindow.ClickDelegate callbackFunc; // 0x128
	private bool gotServant; // 0x130
	protected UserServantMaster userServantMaster; // 0x138
	protected GetSvts[] getSvtList; // 0x140
	protected GetCommandCodes[] getCommandCodeList; // 0x148
	protected UserPresentBoxWindow.evPointReward[] evPointRewardList; // 0x150
	protected GetSvtCoin[] getSvtCoins; // 0x158
	protected GetSvtCoin[] overflowSvtCoinInfos; // 0x160
	private SummonEffectComponent summonComp; // 0x168
	private List<int> befSvtList; // 0x170
	private List<long> befCommandCodeList; // 0x178
	private ServantRewardAction svtGetAction; // 0x180
	private Action mReDispAct; // 0x188
	private bool mIsScrlResetPosition; // 0x190
	[SerializeField] // RVA: 0xC52DB4 Offset: 0xC52DB4 VA: 0xC52DB4
	private GameObject presentHistoryButtonPanel; // 0x198
	[SerializeField] // RVA: 0xC52DC4 Offset: 0xC52DC4 VA: 0xC52DC4
	private UserPresentDialog presentDialog; // 0x1A0
	[SerializeField] // RVA: 0xC52DD4 Offset: 0xC52DD4 VA: 0xC52DD4
	private UserPresentHistoryDialog presentHistoryDialog; // 0x1A8
	[SerializeField] // RVA: 0xC52DE4 Offset: 0xC52DE4 VA: 0xC52DE4
	private ServantCoinConfirmDialog servantCoinConfirmDialog; // 0x1B0
	private string presentMaxSelectable; // 0x1B8
	[SerializeField] // RVA: 0xC52DF4 Offset: 0xC52DF4 VA: 0xC52DF4
	protected BoxCollider helpBtn; // 0x1C0
	[SerializeField] // RVA: 0xC52E04 Offset: 0xC52E04 VA: 0xC52E04
	private BoxCollider filterBtn; // 0x1C8
	[SerializeField] // RVA: 0xC52E14 Offset: 0xC52E14 VA: 0xC52E14
	private UISprite filterBtnSp; // 0x1D0
	[SerializeField] // RVA: 0xC52E24 Offset: 0xC52E24 VA: 0xC52E24
	private GameObject presentBoxFilterKindSelectMenuPrefab; // 0x1D8
	private PresentBoxFilterSelectMenu presentBoxFilterSelectMenu; // 0x1E0
	private List<UserPresentBoxEntity> receiveList; // 0x1E8
	private int receiveIdx; // 0x1F0
	[SerializeField] // RVA: 0xC52E34 Offset: 0xC52E34 VA: 0xC52E34
	private GameObject touchBlocker; // 0x1F8
	private UserPresentBoxWindow.PRESENT_OVERFLOW_TYPE presentOverflowType; // 0x200

	// Methods

	// RVA: 0x154706C Offset: 0x154706C VA: 0x154706C
	public void .ctor() { }

	// RVA: 0x1547104 Offset: 0x1547104 VA: 0x1547104
	private void OnDestroy() { }

	// RVA: 0x15471D0 Offset: 0x15471D0 VA: 0x15471D0
	public void Open(bool isShowBg, UserPresentBoxWindow.ClickDelegate callback, Action redisp_act) { }

	// RVA: 0x1547688 Offset: 0x1547688 VA: 0x1547688
	private void SetButtonTxtColor(bool isVaild, GameObject btnObject) { }

	// RVA: 0x1547C28 Offset: 0x1547C28 VA: 0x1547C28
	private void RequestPresentList() { }

	// RVA: 0x1547FC8 Offset: 0x1547FC8 VA: 0x1547FC8
	private void callbackPresentList(string result) { }

	// RVA: 0x154808C Offset: 0x154808C VA: 0x154808C
	private void ReDisp() { }

	// RVA: 0x1549B7C Offset: 0x1549B7C VA: 0x1549B7C
	public void SetReDispAction(Action act) { }

	// RVA: 0x1549B84 Offset: 0x1549B84 VA: 0x1549B84
	public void SetReDispFromExpiredPresent() { }

	// RVA: 0x1547B34 Offset: 0x1547B34 VA: 0x1547B34
	private void SetFilterButtonImage() { }

	// RVA: 0x1549014 Offset: 0x1549014 VA: 0x1549014
	private bool CheckFilter(ServantMaster servantMaster, ItemMaster itemMaster, UserPresentBoxEntity userPresentBoxEntity) { }

	// RVA: 0x154940C Offset: 0x154940C VA: 0x154940C
	private bool CheckRarityFilter(ServantLimitMaster servantLimitMaster, CommandCodeMaster commandCodeMaster, UserPresentBoxEntity userPresentBoxEntity, bool isActiveFilterCategory) { }

	// RVA: 0x1549B88 Offset: 0x1549B88 VA: 0x1549B88
	public void receivePresent(long[] presentIds, int selectIdx = 0, int selectNum = 0) { }

	// RVA: 0x1549EB4 Offset: 0x1549EB4 VA: 0x1549EB4
	private void CallbackReceiveRequest(string result) { }

	// RVA: 0x154A310 Offset: 0x154A310 VA: 0x154A310
	private bool IsShowEffectPresent() { }

	// RVA: 0x154A120 Offset: 0x154A120 VA: 0x154A120
	private void ShowExpiredPresents(Action callback) { }

	// RVA: 0x154A558 Offset: 0x154A558 VA: 0x154A558
	private void EventPointRewardWithOutSvtGet(bool res = False) { }

	// RVA: 0x154A724 Offset: 0x154A724 VA: 0x154A724
	private void EventPointRewardWithSvtGet(bool res = False) { }

	// RVA: 0x154A5D0 Offset: 0x154A5D0 VA: 0x154A5D0
	private void ShowEventPointReward(int idx, Action callback) { }

	// RVA: 0x154A7A4 Offset: 0x154A7A4 VA: 0x154A7A4
	private void UpdateEventInfos() { }

	// RVA: 0x154A11C Offset: 0x154A11C VA: 0x154A11C
	private void EndReceive() { }

	// RVA: 0x154A864 Offset: 0x154A864 VA: 0x154A864
	public void showEffect() { }

	// RVA: 0x154B460 Offset: 0x154B460 VA: 0x154B460
	private void startRewardGetEffect(long userSvtID, bool isNew, bool isDoEffect, Gift.Type giftType, int num, int presentDialogMessageId = 0) { }

	// RVA: 0x154B9A0 Offset: 0x154B9A0 VA: 0x154B9A0
	private void startRewardCostumeReleaseGetEffect(string name) { }

	// RVA: 0x154BBA8 Offset: 0x154BBA8 VA: 0x154BBA8
	private void startRewardEquipGetEffect(QuestRewardInfo questRewardInfo) { }

	// RVA: 0x154BCF0 Offset: 0x154BCF0 VA: 0x154BCF0
	private void startRewardSpecialItemGetEffect(QuestRewardInfo questRewardInfo) { }

	// RVA: 0x154BAE8 Offset: 0x154BAE8 VA: 0x154BAE8
	private QuestRewardInfo CreateQuestRewardInfo(UserPresentBoxEntity userPresentBox) { }

	// RVA: 0x154B34C Offset: 0x154B34C VA: 0x154B34C
	private void EndEffect() { }

	// RVA: 0x154BE60 Offset: 0x154BE60 VA: 0x154BE60
	private void endPlay(Action end_act) { }

	// RVA: 0x154BF78 Offset: 0x154BF78 VA: 0x154BF78
	public void checkNextSvt() { }

	// RVA: 0x154B3B0 Offset: 0x154B3B0 VA: 0x154B3B0
	private bool checkNew(int svtId, bool isNew, bool isAddSvt = True) { }

	// RVA: 0x154C03C Offset: 0x154C03C VA: 0x154C03C
	private bool checkOverlapSvt(int svtId) { }

	// RVA: 0x154B870 Offset: 0x154B870 VA: 0x154B870
	private bool checkNewCommandCode(long commandCodeId, bool isNew, bool isAddCommandCode = True) { }

	// RVA: 0x154C114 Offset: 0x154C114 VA: 0x154C114
	public void incereIdx() { }

	// RVA: 0x154C1BC Offset: 0x154C1BC VA: 0x154C1BC
	public void showReceiveResultDlg() { }

	// RVA: 0x154C2E0 Offset: 0x154C2E0 VA: 0x154C2E0
	private void CheckSvtGetTutorial(Action callback) { }

	// RVA: 0x154C478 Offset: 0x154C478 VA: 0x154C478
	private void setPresentBoxErrorDlgCombineType() { }

	// RVA: 0x154C538 Offset: 0x154C538 VA: 0x154C538
	private void EndEffectReceive() { }

	// RVA: 0x154C5A4 Offset: 0x154C5A4 VA: 0x154C5A4
	public void OnClickAll() { }

	// RVA: 0x154CEBC Offset: 0x154CEBC VA: 0x154CEBC
	private void ProcessClickAll() { }

	// RVA: 0x154D49C Offset: 0x154D49C VA: 0x154D49C
	public void OnClickItem() { }

	// RVA: 0x154D58C Offset: 0x154D58C VA: 0x154D58C
	public void OnClickCheckedItem() { }

	// RVA: 0x154D67C Offset: 0x154D67C VA: 0x154D67C
	public void SetCheckedItemsButtonEnable(bool how, bool isSetOtherButtonsToo = False) { }

	// RVA: 0x154DC90 Offset: 0x154DC90 VA: 0x154DC90
	public void Close() { }

	// RVA: 0x154DD88 Offset: 0x154DD88 VA: 0x154DD88
	public void OnClickBack() { }

	// RVA: 0x154E03C Offset: 0x154E03C VA: 0x154E03C
	public void OnClickPresentHistoryButton() { }

	// RVA: 0x1547CDC Offset: 0x1547CDC VA: 0x1547CDC
	private void SetBtnEnable(bool is_enable) { }

	// RVA: 0x1547EE0 Offset: 0x1547EE0 VA: 0x1547EE0
	private void SetPresentHistoryBtnEnable(bool is_enable) { }

	// RVA: 0x15478D8 Offset: 0x15478D8 VA: 0x15478D8
	public void SetSelectCount(int selected) { }

	// RVA: 0x154779C Offset: 0x154779C VA: 0x154779C
	private string maxSelectable() { }

	// RVA: 0x154E11C Offset: 0x154E11C VA: 0x154E11C
	public void SetScrlPositionResetAtReDisp(bool onOff) { }

	// RVA: 0x154E128 Offset: 0x154E128 VA: 0x154E128
	public void OnClickHelp() { }

	// RVA: 0x1549AD4 Offset: 0x1549AD4 VA: 0x1549AD4
	public void OpenHelp() { }

	// RVA: 0x154E190 Offset: 0x154E190 VA: 0x154E190
	public void OnClickFilter() { }

	// RVA: 0x154E330 Offset: 0x154E330 VA: 0x154E330
	public void ClickFilterEnd(bool result) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8714 Offset: 0xCC8714 VA: 0xCC8714
	// RVA: 0x154E45C Offset: 0x154E45C VA: 0x154E45C
	private void <Open>m__0(int stoneCount) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8724 Offset: 0xCC8724 VA: 0xCC8724
	// RVA: 0x154E4F4 Offset: 0x154E4F4 VA: 0x154E4F4
	private void <callbackPresentList>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8734 Offset: 0xCC8734 VA: 0xCC8734
	// RVA: 0x154E564 Offset: 0x154E564 VA: 0x154E564
	private void <CallbackReceiveRequest>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8744 Offset: 0xCC8744 VA: 0xCC8744
	// RVA: 0x154E78C Offset: 0x154E78C VA: 0x154E78C
	private void <showEffect>m__3(bool isDecide) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8754 Offset: 0xCC8754 VA: 0xCC8754
	// RVA: 0x154E800 Offset: 0x154E800 VA: 0x154E800
	private void <showReceiveResultDlg>m__4() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8764 Offset: 0xCC8764 VA: 0xCC8764
	// RVA: 0x154EB14 Offset: 0x154EB14 VA: 0x154EB14
	private void <OnClickAll>m__5() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8774 Offset: 0xCC8774 VA: 0xCC8774
	// RVA: 0x154EB44 Offset: 0x154EB44 VA: 0x154EB44
	private void <OnClickPresentHistoryButton>m__6(string result) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8784 Offset: 0xCC8784 VA: 0xCC8784
	// RVA: 0x154EF3C Offset: 0x154EF3C VA: 0x154EF3C
	private void <showReceiveResultDlg>m__7(Action action) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8794 Offset: 0xCC8794 VA: 0xCC8794
	// RVA: 0x154EF88 Offset: 0x154EF88 VA: 0x154EF88
	private void <showReceiveResultDlg>m__8(Action action) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC87A4 Offset: 0xCC87A4 VA: 0xCC87A4
	// RVA: 0x154EFD4 Offset: 0x154EFD4 VA: 0x154EFD4
	private void <showReceiveResultDlg>m__9() { }
}

// Namespace: 
public sealed class UserPresentBoxWindow.ClickDelegate : MulticastDelegate // TypeDefIndex: 6005
{
	// Methods

	// RVA: 0x15500D8 Offset: 0x15500D8 VA: 0x15500D8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x154DE10 Offset: 0x154DE10 VA: 0x154DE10 Slot: 11
	public virtual void Invoke(bool hasGetServant) { }

	// RVA: 0x15500E8 Offset: 0x15500E8 VA: 0x15500E8 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool hasGetServant, AsyncCallback callback, object object) { }

	// RVA: 0x1550178 Offset: 0x1550178 VA: 0x1550178 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private enum UserPresentBoxWindow.PRESENT_OVERFLOW_TYPE // TypeDefIndex: 6006
{
	// Fields
	public int value__; // 0x0
	public const UserPresentBoxWindow.PRESENT_OVERFLOW_TYPE NONE = 0;
	public const UserPresentBoxWindow.PRESENT_OVERFLOW_TYPE SVT = 1;
	public const UserPresentBoxWindow.PRESENT_OVERFLOW_TYPE SVT_EQUIP = 2;
	public const UserPresentBoxWindow.PRESENT_OVERFLOW_TYPE ITEM = 3;
	public const UserPresentBoxWindow.PRESENT_OVERFLOW_TYPE COMMAND_CODE = 4;
}

// Namespace: 
protected enum UserPresentBoxWindow.QUESTTYPE // TypeDefIndex: 6007
{
	// Fields
	public int value__; // 0x0
	public const UserPresentBoxWindow.QUESTTYPE FRIENDSHIP = 3;
	public const UserPresentBoxWindow.QUESTTYPE HEROBALLAD = 6;
}

// Namespace: 
public class UserPresentBoxWindow.resData // TypeDefIndex: 6008
{
	// Fields
	public int overflowType; // 0x10
	public GetSvts[] getSvts; // 0x18
	public GetCommandCodes[] getCommandCodes; // 0x20
	public UserPresentBoxWindow.evPointReward[] receiveEventPointReward; // 0x28
	public GetSvtCoin[] getSvtCoin; // 0x30
	public GetSvtCoin[] overflowSvtCoinInfos; // 0x38

	// Methods

	// RVA: 0x1550194 Offset: 0x1550194 VA: 0x1550194
	public void .ctor() { }
}

// Namespace: 
public class UserPresentBoxWindow.evPointReward // TypeDefIndex: 6009
{
	// Fields
	public int itemId; // 0x10
	public UserPresentBoxWindow.evReward[] eventPointReward; // 0x18

	// Methods

	// RVA: 0x1550184 Offset: 0x1550184 VA: 0x1550184
	public void .ctor() { }
}

// Namespace: 
public class UserPresentBoxWindow.evReward // TypeDefIndex: 6010
{
	// Fields
	public string name; // 0x10
	public string detail; // 0x18

	// Methods

	// RVA: 0x155018C Offset: 0x155018C VA: 0x155018C
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42504 Offset: 0xC42504 VA: 0xC42504
private sealed class UserPresentBoxWindow.<ShowExpiredPresents>c__AnonStorey0 // TypeDefIndex: 6011
{
	// Fields
	internal Action callback; // 0x10
	internal UserPresentBoxWindow $this; // 0x18

	// Methods

	// RVA: 0x154A548 Offset: 0x154A548 VA: 0x154A548
	public void .ctor() { }

	// RVA: 0x154F100 Offset: 0x154F100 VA: 0x154F100
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42514 Offset: 0xC42514 VA: 0xC42514
private sealed class UserPresentBoxWindow.<ShowEventPointReward>c__AnonStorey1 // TypeDefIndex: 6012
{
	// Fields
	internal int idx; // 0x10
	internal Action callback; // 0x18
	internal UserPresentBoxWindow $this; // 0x20

	// Methods

	// RVA: 0x154A79C Offset: 0x154A79C VA: 0x154A79C
	public void .ctor() { }

	// RVA: 0x154F00C Offset: 0x154F00C VA: 0x154F00C
	internal void <>m__0(bool isOk) { }

	// RVA: 0x154F0A8 Offset: 0x154F0A8 VA: 0x154F0A8
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42524 Offset: 0xC42524 VA: 0xC42524
private sealed class UserPresentBoxWindow.<startRewardGetEffect>c__AnonStorey3 // TypeDefIndex: 6013
{
	// Fields
	internal Gift.Type giftType; // 0x10
	internal long userSvtID; // 0x18
	internal bool isDoEffect; // 0x20
	internal int num; // 0x24
	internal bool isNew; // 0x28
	internal int presentDialogMessageId; // 0x2C
	internal UserPresentBoxWindow $this; // 0x30

	// Methods

	// RVA: 0x154BE38 Offset: 0x154BE38 VA: 0x154BE38
	public void .ctor() { }

	// RVA: 0x154F808 Offset: 0x154F808 VA: 0x154F808
	internal void <>m__0() { }

	// RVA: 0x154F8AC Offset: 0x154F8AC VA: 0x154F8AC
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42534 Offset: 0xC42534 VA: 0xC42534
private sealed class UserPresentBoxWindow.<startRewardGetEffect>c__AnonStorey2 // TypeDefIndex: 6014
{
	// Fields
	internal string title; // 0x10
	internal string message; // 0x18
	internal UserPresentBoxWindow.<startRewardGetEffect>c__AnonStorey3 <>f__ref$3; // 0x20

	// Methods

	// RVA: 0x154BE40 Offset: 0x154BE40 VA: 0x154BE40
	public void .ctor() { }

	// RVA: 0x154F684 Offset: 0x154F684 VA: 0x154F684
	internal void <>m__0() { }

	// RVA: 0x154F77C Offset: 0x154F77C VA: 0x154F77C
	internal void <>m__1(bool decide) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42544 Offset: 0xC42544 VA: 0xC42544
private sealed class UserPresentBoxWindow.<startRewardCostumeReleaseGetEffect>c__AnonStorey4 // TypeDefIndex: 6015
{
	// Fields
	internal string name; // 0x10
	internal UserPresentBoxWindow $this; // 0x18

	// Methods

	// RVA: 0x154BE48 Offset: 0x154BE48 VA: 0x154BE48
	public void .ctor() { }

	// RVA: 0x154F2E0 Offset: 0x154F2E0 VA: 0x154F2E0
	internal void <>m__0() { }

	// RVA: 0x154F384 Offset: 0x154F384 VA: 0x154F384
	internal void <>m__1() { }

	// RVA: 0x154F438 Offset: 0x154F438 VA: 0x154F438
	internal void <>m__2() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42554 Offset: 0xC42554 VA: 0xC42554
private sealed class UserPresentBoxWindow.<startRewardEquipGetEffect>c__AnonStorey5 // TypeDefIndex: 6016
{
	// Fields
	internal QuestRewardInfo questRewardInfo; // 0x10
	internal UserPresentBoxWindow $this; // 0x18

	// Methods

	// RVA: 0x154BE50 Offset: 0x154BE50 VA: 0x154BE50
	public void .ctor() { }

	// RVA: 0x154F4B4 Offset: 0x154F4B4 VA: 0x154F4B4
	internal void <>m__0() { }

	// RVA: 0x154F558 Offset: 0x154F558 VA: 0x154F558
	internal void <>m__1() { }

	// RVA: 0x154F608 Offset: 0x154F608 VA: 0x154F608
	internal void <>m__2() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42564 Offset: 0xC42564 VA: 0xC42564
private sealed class UserPresentBoxWindow.<startRewardSpecialItemGetEffect>c__AnonStorey6 // TypeDefIndex: 6017
{
	// Fields
	internal QuestRewardInfo questRewardInfo; // 0x10
	internal UserPresentBoxWindow $this; // 0x18

	// Methods

	// RVA: 0x154BE58 Offset: 0x154BE58 VA: 0x154BE58
	public void .ctor() { }

	// RVA: 0x154FEC4 Offset: 0x154FEC4 VA: 0x154FEC4
	internal void <>m__0() { }

	// RVA: 0x154FF70 Offset: 0x154FF70 VA: 0x154FF70
	internal void <>m__1() { }

	// RVA: 0x155005C Offset: 0x155005C VA: 0x155005C
	internal void <>m__2() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42574 Offset: 0xC42574 VA: 0xC42574
private sealed class UserPresentBoxWindow.<endPlay>c__AnonStorey7 // TypeDefIndex: 6018
{
	// Fields
	internal Action end_act; // 0x10
	internal UserPresentBoxWindow $this; // 0x18

	// Methods

	// RVA: 0x154BF70 Offset: 0x154BF70 VA: 0x154BF70
	public void .ctor() { }

