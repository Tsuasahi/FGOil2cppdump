
	// RVA: 0x1C075BC Offset: 0x1C075BC VA: 0x1C075BC
	public void .ctor() { }

	// RVA: 0x1C08318 Offset: 0x1C08318 VA: 0x1C08318
	internal void <>m__0() { }

	// RVA: 0x1C08474 Offset: 0x1C08474 VA: 0x1C08474
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2710 Offset: 0xCB2710 VA: 0xCB2710
private sealed class WarBoardPieceBaseComponent.<OnAfterAttack>c__AnonStorey5 // TypeDefIndex: 11696
{
	// Fields
	internal WarBoardManager warBoardManager; // 0x10
	internal int squareIndex; // 0x18
	internal WarBoardPieceData targetPiece; // 0x20
	internal WarBoardPieceBaseComponent $this; // 0x28

	// Methods

	// RVA: 0x1C07B2C Offset: 0x1C07B2C VA: 0x1C07B2C
	public void .ctor() { }

	// RVA: 0x1C080B0 Offset: 0x1C080B0 VA: 0x1C080B0
	internal void <>m__0() { }

	// RVA: 0x1C081CC Offset: 0x1C081CC VA: 0x1C081CC
	internal bool <>m__1() { }
}

// Namespace: 
private sealed class WarBoardPieceBaseComponent.<OnAfterAttack>c__AnonStorey5.<OnAfterAttack>c__AnonStorey6 // TypeDefIndex: 11697
{
	// Fields
	internal WarBoardTreasureData treasureData; // 0x10
	internal WarBoardPieceBaseComponent.<OnAfterAttack>c__AnonStorey5 <>f__ref$5; // 0x18

	// Methods

	// RVA: 0x1C081C4 Offset: 0x1C081C4 VA: 0x1C081C4
	public void .ctor() { }

	// RVA: 0x1C081F8 Offset: 0x1C081F8 VA: 0x1C081F8
	internal void <>m__0() { }
}

// Namespace: 
public class WarBoardRoadComponent : MonoBehaviour // TypeDefIndex: 11698
{
	// Fields
	[SerializeField] // RVA: 0xCEDAD0 Offset: 0xCEDAD0 VA: 0xCEDAD0
	private UISprite roadImage; // 0x18
	private int squareIndex1; // 0x20
	private int squareIndex2; // 0x24

	// Methods

	// RVA: 0x1A7FDAC Offset: 0x1A7FDAC VA: 0x1A7FDAC
	public void .ctor() { }

	// RVA: 0x1A7FDB4 Offset: 0x1A7FDB4 VA: 0x1A7FDB4
	public void Initialize(UIAtlas imageSetAtlas, WarBoardRoadEntity road, Vector3 position1, Vector3 position2) { }

	// RVA: 0x1A8006C Offset: 0x1A8006C VA: 0x1A8006C
	public bool SameRoad(int squareIndex1, int squareIndex2) { }

	// RVA: 0x1A800AC Offset: 0x1A800AC VA: 0x1A800AC
	public void EnablePass() { }

	// RVA: 0x1A80110 Offset: 0x1A80110 VA: 0x1A80110
	public void DisablePass() { }

	// RVA: 0x1A80174 Offset: 0x1A80174 VA: 0x1A80174
	public void ChangeColorDarkness(bool immediate = False) { }

	// RVA: 0x1A80468 Offset: 0x1A80468 VA: 0x1A80468
	public void ChangeColorNormal(bool immediate = False) { }

	// RVA: 0x1A80268 Offset: 0x1A80268 VA: 0x1A80268
	private void ChangeColor(Color color, float duration, bool immediate, UIWidget[] targets) { }
}

// Namespace: 
public class WarBoardServantPieceComponent : WarBoardPieceBaseComponent // TypeDefIndex: 11699
{
	// Fields
	[SerializeField] // RVA: 0xCEDAE0 Offset: 0xCEDAE0 VA: 0xCEDAE0
	private GameObject classIconRoot; // 0xA8
	[SerializeField] // RVA: 0xCEDAF0 Offset: 0xCEDAF0 VA: 0xCEDAF0
	private UISprite classIcon; // 0xB0
	[SerializeField] // RVA: 0xCEDB00 Offset: 0xCEDB00 VA: 0xCEDB00
	private GameObject servantIconRoot; // 0xB8
	[SerializeField] // RVA: 0xCEDB10 Offset: 0xCEDB10 VA: 0xCEDB10
	private UIMeshSprite servantIcon; // 0xC0
	[SerializeField] // RVA: 0xCEDB20 Offset: 0xCEDB20 VA: 0xCEDB20
	private UIMeshSprite equipeIcon; // 0xC8
	[SerializeField] // RVA: 0xCEDB30 Offset: 0xCEDB30 VA: 0xCEDB30
	private UISprite frameInClassIcon; // 0xD0
	[SerializeField] // RVA: 0xCEDB40 Offset: 0xCEDB40 VA: 0xCEDB40
	private UISprite hpBar; // 0xD8
	[SerializeField] // RVA: 0xCEDB50 Offset: 0xCEDB50 VA: 0xCEDB50
	private UISprite[] npBars; // 0xE0
	[SerializeField] // RVA: 0xCEDB60 Offset: 0xCEDB60 VA: 0xCEDB60
	private GameObject criticalStarsBase; // 0xE8
	[SerializeField] // RVA: 0xCEDB70 Offset: 0xCEDB70 VA: 0xCEDB70
	private UILabel criticalStarsLabel; // 0xF0
	[SerializeField] // RVA: 0xCEDB80 Offset: 0xCEDB80 VA: 0xCEDB80
	private float gaugeAnimationFullDuration; // 0xF8
	[SerializeField] // RVA: 0xCEDB90 Offset: 0xCEDB90 VA: 0xCEDB90
	private GameObject npBarEffect; // 0x100
	[SerializeField] // RVA: 0xCEDBA0 Offset: 0xCEDBA0 VA: 0xCEDBA0
	private GameObject faceEffect; // 0x108
	[SerializeField] // RVA: 0xCEDBB0 Offset: 0xCEDBB0 VA: 0xCEDBB0
	private GameObject EquipIcon; // 0x110
	[SerializeField] // RVA: 0xCEDBC0 Offset: 0xCEDBC0 VA: 0xCEDBC0
	protected ServantClassCompatibilityIconComponent classCompatibilityIcon; // 0x118
	[SerializeField] // RVA: 0xCEDBD0 Offset: 0xCEDBD0 VA: 0xCEDBD0
	private UISprite supportSprite; // 0x120
	[SerializeField] // RVA: 0xCEDBE0 Offset: 0xCEDBE0 VA: 0xCEDBE0
	private UILabel servantLevel; // 0x128
	[SerializeField] // RVA: 0xCEDBF0 Offset: 0xCEDBF0 VA: 0xCEDBF0
	private Vector3 positionLevel; // 0x130
	[SerializeField] // RVA: 0xCEDC00 Offset: 0xCEDC00 VA: 0xCEDC00
	private Vector3 positionLevelDanger; // 0x13C
	[SerializeField] // RVA: 0xCEDC10 Offset: 0xCEDC10 VA: 0xCEDC10
	private Vector3 positionLevelNpc; // 0x148
	[SerializeField] // RVA: 0xCEDC20 Offset: 0xCEDC20 VA: 0xCEDC20
	private GameObject RoleTypeLabel; // 0x158
	private float nowNpProgress; // 0x160
	[CompilerGeneratedAttribute] // RVA: 0xCEDC30 Offset: 0xCEDC30 VA: 0xCEDC30
	private static WarBoardTaskBase.TaskCallback <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1A81C78 Offset: 0x1A81C78 VA: 0x1A81C78
	public void .ctor() { }

	// RVA: 0x1A81D60 Offset: 0x1A81D60 VA: 0x1A81D60 Slot: 4
	public override void Initialize(WarBoardPieceData pieceData) { }

	// RVA: 0x1A82328 Offset: 0x1A82328 VA: 0x1A82328
	private void SetClassIcon() { }

	// RVA: 0x1A825CC Offset: 0x1A825CC VA: 0x1A825CC
	public void SetServantIcon() { }

	// RVA: 0x1A82DCC Offset: 0x1A82DCC VA: 0x1A82DCC
	public void SetServant(long userServantId) { }

	// RVA: 0x1A82E18 Offset: 0x1A82E18 VA: 0x1A82E18
	public void SetServantEquip(long userServantEquipId) { }

	// RVA: 0x1A82E64 Offset: 0x1A82E64 VA: 0x1A82E64 Slot: 12
	protected override bool ShowStatus() { }

	// RVA: 0x1A82F30 Offset: 0x1A82F30 VA: 0x1A82F30 Slot: 6
	public override void LongTapIcon() { }

	// RVA: 0x1A82FA0 Offset: 0x1A82FA0 VA: 0x1A82FA0 Slot: 14
	protected override void EditPiece() { }

	// RVA: 0x1A8300C Offset: 0x1A8300C VA: 0x1A8300C Slot: 16
	public override bool IsModifyStatus() { }

	// RVA: 0x1A820D4 Offset: 0x1A820D4 VA: 0x1A820D4
	private void UpdateNpBars(float progress) { }

	// RVA: 0x1A831D0 Offset: 0x1A831D0 VA: 0x1A831D0 Slot: 15
	public override void ChangeStatus(bool isBreak) { }

	// RVA: 0x1A830B0 Offset: 0x1A830B0 VA: 0x1A830B0
	public void ChangeDyingAnimation() { }

	// RVA: 0x1A832BC Offset: 0x1A832BC VA: 0x1A832BC Slot: 17
	public override void ChangeCriticalStars() { }

	// RVA: 0x1A83394 Offset: 0x1A83394 VA: 0x1A83394 Slot: 27
	public override void OnBreak(int oldBreakPoint, List<WarBoardTaskBase> taskList, int dummyPoint = -1) { }

	// RVA: 0x1A8368C Offset: 0x1A8368C VA: 0x1A8368C Slot: 28
	public override void OnDead(List<WarBoardTaskBase> taskList) { }

	// RVA: 0x1A83A24 Offset: 0x1A83A24 VA: 0x1A83A24 Slot: 29
	protected override Vector3 GetIconPosition() { }

	// RVA: 0x1A83A6C Offset: 0x1A83A6C VA: 0x1A83A6C Slot: 30
	protected override Vector3 GetIconLocalPosition() { }

	// RVA: 0x1A83AB4 Offset: 0x1A83AB4 VA: 0x1A83AB4
	public void CompatibilityDisplay(WarBoardPieceData selectPiece) { }

	[CompilerGeneratedAttribute] // RVA: 0xD42684 Offset: 0xD42684 VA: 0xD42684
	// RVA: 0x1A83C08 Offset: 0x1A83C08 VA: 0x1A83C08
	private static void <OnBreak>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD42694 Offset: 0xD42694 VA: 0xD42694
	// RVA: 0x1A83CA4 Offset: 0x1A83CA4 VA: 0x1A83CA4
	private void <OnDead>m__1() { }
}

// Namespace: 
public class WarBoardSquareComponent : MonoBehaviour // TypeDefIndex: 11700
{
	// Fields
	[SerializeField] // RVA: 0xCEDC40 Offset: 0xCEDC40 VA: 0xCEDC40
	private UISprite squareImage; // 0x18
	[SerializeField] // RVA: 0xCEDC50 Offset: 0xCEDC50 VA: 0xCEDC50
	private UILabel costLabel; // 0x20
	[SerializeField] // RVA: 0xCEDC60 Offset: 0xCEDC60 VA: 0xCEDC60
	private UIButton button; // 0x28
	[SerializeField] // RVA: 0xCEDC70 Offset: 0xCEDC70 VA: 0xCEDC70
	private GameObject selectMarker; // 0x30
	private CommonEffectComponent selectMarkerCommonEffect; // 0x38
	[SerializeField] // RVA: 0xCEDC80 Offset: 0xCEDC80 VA: 0xCEDC80
	private UISprite selectMarkerArrow; // 0x40
	[SerializeField] // RVA: 0xCEDC90 Offset: 0xCEDC90 VA: 0xCEDC90
	private GameObject selectCircle; // 0x48
	private CommonEffectComponent selectCircleCommonEffect; // 0x50
	[SerializeField] // RVA: 0xCEDCA0 Offset: 0xCEDCA0 VA: 0xCEDCA0
	private GameObject battleTargetPlayer; // 0x58
	private CommonEffectComponent battleTargetPlayerCommonEffect; // 0x60
	[SerializeField] // RVA: 0xCEDCB0 Offset: 0xCEDCB0 VA: 0xCEDCB0
	private GameObject battleTargetEnemy; // 0x68
	private CommonEffectComponent battleTargetEnemyCommonEffect; // 0x70
	[SerializeField] // RVA: 0xCEDCC0 Offset: 0xCEDCC0 VA: 0xCEDCC0
	private Vector3 costLabelPos; // 0x78
	[SerializeField] // RVA: 0xCEDCD0 Offset: 0xCEDCD0 VA: 0xCEDCD0
	private Vector3 costLabelMovePos; // 0x84
	[SerializeField] // RVA: 0xCEDCE0 Offset: 0xCEDCE0 VA: 0xCEDCE0
	private float costAnimScale; // 0x90
	[SerializeField] // RVA: 0xCEDCF0 Offset: 0xCEDCF0 VA: 0xCEDCF0
	private float costAnimScaleTime; // 0x94
	[SerializeField] // RVA: 0xCEDD00 Offset: 0xCEDD00 VA: 0xCEDD00
	private float costAnimFadeTime; // 0x98
	private GameObject movePoint; // 0xA0
	private CommonEffectComponent movePointCommonEffect; // 0xA8
	private WarBoardSquareData squareData; // 0xB0
	private bool isSelectable; // 0xB8
	private TweenScale tweenScale; // 0xC0
	private TweenPosition tweenPosition; // 0xC8
	private TweenAlpha tweenAlpha; // 0xD0

	// Methods

	// RVA: 0x1A87680 Offset: 0x1A87680 VA: 0x1A87680
	public void .ctor() { }

	// RVA: 0x1A87738 Offset: 0x1A87738 VA: 0x1A87738
	public void Initialize(UIAtlas imageSetAtlas, WarBoardSquareData data) { }

	// RVA: 0x1A87E20 Offset: 0x1A87E20 VA: 0x1A87E20
	public void EnableEditPosition() { }

	// RVA: 0x1A87E80 Offset: 0x1A87E80 VA: 0x1A87E80
	public void DisableEditPosition() { }

	// RVA: 0x1A87F48 Offset: 0x1A87F48 VA: 0x1A87F48
	public void ActiveEditPointArrow() { }

	// RVA: 0x1A87FE8 Offset: 0x1A87FE8 VA: 0x1A87FE8
	public void DeactiveEditPointArrow() { }

	// RVA: 0x1A87CE4 Offset: 0x1A87CE4 VA: 0x1A87CE4
	public void SetSprite() { }

	// RVA: 0x1A88088 Offset: 0x1A88088 VA: 0x1A88088
	public void SetCost(int cost, Color gradientTop, Color gradientBottom) { }

	// RVA: 0x1A8848C Offset: 0x1A8848C VA: 0x1A8848C
	public void SetTouchEnable(bool enable) { }

	// RVA: 0x1A88540 Offset: 0x1A88540 VA: 0x1A88540
	public void OnSelect() { }

	// RVA: 0x1A885A0 Offset: 0x1A885A0 VA: 0x1A885A0
	public void OnDeselect() { }

	// RVA: 0x1A88668 Offset: 0x1A88668 VA: 0x1A88668
	public void Selectable(bool isOnActionPiece = False) { }

	// RVA: 0x1A887E0 Offset: 0x1A887E0 VA: 0x1A887E0
	public void Unselectable(bool isDispCostLabel) { }

	// RVA: 0x1A888D8 Offset: 0x1A888D8 VA: 0x1A888D8
	public void PlayUnDispCostAnim() { }

	// RVA: 0x1A88A54 Offset: 0x1A88A54 VA: 0x1A88A54
	public void PlayUnDispCostAnim2() { }

	// RVA: 0x1A88D10 Offset: 0x1A88D10 VA: 0x1A88D10
	public void FinishUnDispCostAnim() { }

	// RVA: 0x1A88328 Offset: 0x1A88328 VA: 0x1A88328
	private void InitCostAnim() { }

	// RVA: 0x1A88E4C Offset: 0x1A88E4C VA: 0x1A88E4C
	public void DispBattleRange(bool isPlayerForce) { }

	// RVA: 0x1A88EDC Offset: 0x1A88EDC VA: 0x1A88EDC
	public void NondispBattleRange(bool isPlayerForce) { }

	// RVA: 0x1A88FEC Offset: 0x1A88FEC VA: 0x1A88FEC
	public void OnClickSquare() { }

	// RVA: 0x1A8930C Offset: 0x1A8930C VA: 0x1A8930C
	public void OnLongClickSquare() { }

	[CompilerGeneratedAttribute] // RVA: 0xD426A4 Offset: 0xD426A4 VA: 0xD426A4
	// RVA: 0x1A89530 Offset: 0x1A89530 VA: 0x1A89530
	private void <DisableEditPosition>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD426B4 Offset: 0xD426B4 VA: 0xD426B4
	// RVA: 0x1A89564 Offset: 0x1A89564 VA: 0x1A89564
	private void <OnDeselect>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xD426C4 Offset: 0xD426C4 VA: 0xD426C4
	// RVA: 0x1A895B8 Offset: 0x1A895B8 VA: 0x1A895B8
	private void <NondispBattleRange>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xD426D4 Offset: 0xD426D4 VA: 0xD426D4
	// RVA: 0x1A8960C Offset: 0x1A8960C VA: 0x1A8960C
	private void <NondispBattleRange>m__3() { }
}

// Namespace: 
public class WarBoardTreasureComponent : MonoBehaviour // TypeDefIndex: 11701
{
	// Fields
	[SerializeField] // RVA: 0xCEDD10 Offset: 0xCEDD10 VA: 0xCEDD10
	private UISprite itemIcon; // 0x18
	[SerializeField] // RVA: 0xCEDD20 Offset: 0xCEDD20 VA: 0xCEDD20
	private UICommonButton button; // 0x20
	private WarBoardTreasureData treasureData; // 0x28
	private bool isSelectable; // 0x30
	public static readonly int RARITY_TYPE; // 0x0

	// Methods

	// RVA: 0x1A8DA88 Offset: 0x1A8DA88 VA: 0x1A8DA88
	public void .ctor() { }

	// RVA: 0x1A8DA90 Offset: 0x1A8DA90 VA: 0x1A8DA90
	public void Initialize(WarBoardTreasureData data, UIAtlas itemIconAtlas) { }

	// RVA: 0x1A8DD80 Offset: 0x1A8DD80 VA: 0x1A8DD80
	protected void SetButtonTweenTarget(Transform[] parents) { }

	// RVA: 0x1A8DFC4 Offset: 0x1A8DFC4 VA: 0x1A8DFC4
	public void SetTouchEnable(bool enable) { }

	// RVA: 0x1A8E078 Offset: 0x1A8E078 VA: 0x1A8E078
	public void OnClick() { }

	// RVA: 0x1A8E1B0 Offset: 0x1A8E1B0 VA: 0x1A8E1B0 Slot: 4
	public virtual void Selectable() { }

	// RVA: 0x1A8E1EC Offset: 0x1A8E1EC VA: 0x1A8E1EC Slot: 5
	public virtual void Unselectable() { }

	// RVA: 0x1A8E224 Offset: 0x1A8E224 VA: 0x1A8E224
	public void OnUse(int squareIndex, Action endCallback) { }

	// RVA: 0x1A8E468 Offset: 0x1A8E468 VA: 0x1A8E468
	private string GetAnimationNameByRarity() { }

	// RVA: 0x1A8E4E8 Offset: 0x1A8E4E8 VA: 0x1A8E4E8
	private static void .cctor() { }
}

// Namespace: 
private enum WarBoardTreasureComponent.Rarity // TypeDefIndex: 11702
{
	// Fields
	public int value__; // 0x0
	public const WarBoardTreasureComponent.Rarity COMMON = 0;
	public const WarBoardTreasureComponent.Rarity RARE = 1;
	public const WarBoardTreasureComponent.Rarity SRARE = 2;
	public const WarBoardTreasureComponent.Rarity COMMON_PLUS = 3;
	public const WarBoardTreasureComponent.Rarity RARE_PLUS = 4;
	public const WarBoardTreasureComponent.Rarity SRARE_PLUS = 5;
	public const WarBoardTreasureComponent.Rarity COMMON_PLUS2 = 6;
	public const WarBoardTreasureComponent.Rarity RARE_PLUS2 = 7;
	public const WarBoardTreasureComponent.Rarity SRARE_PLUS2 = 8;
	public const WarBoardTreasureComponent.Rarity ITEM_ICON = 9;
	public const WarBoardTreasureComponent.Rarity ITEM_ICON_PLUS = 10;
	public const WarBoardTreasureComponent.Rarity ITEM_ICON_PLUS2 = 11;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2720 Offset: 0xCB2720 VA: 0xCB2720
private sealed class WarBoardTreasureComponent.<OnUse>c__AnonStorey0 // TypeDefIndex: 11703
{
	// Fields
	internal Action endCallback; // 0x10
	internal WarBoardTreasureComponent $this; // 0x18

	// Methods

	// RVA: 0x1A8E460 Offset: 0x1A8E460 VA: 0x1A8E460
	public void .ctor() { }

	// RVA: 0x1A8E53C Offset: 0x1A8E53C VA: 0x1A8E53C
	internal void <>m__0() { }
}

// Namespace: 
public class WarBoardRatingBase // TypeDefIndex: 11704
{
	// Fields
	protected WarBoardRatingBaseEntity ratingBase; // 0x10

	// Properties
	public int adjustmentValueA1 { get; }
	public int adjustmentValueB { get; }

	// Methods

	// RVA: 0x1C0CB60 Offset: 0x1C0CB60 VA: 0x1C0CB60
	public void .ctor() { }

	// RVA: 0x1C0CB68 Offset: 0x1C0CB68 VA: 0x1C0CB68
	public int GetId() { }

	// RVA: 0x1C0CB94 Offset: 0x1C0CB94 VA: 0x1C0CB94
	public WarBoardRatingBaseEntity.Viewpoint GetViewpoint() { }

	// RVA: 0x1C0CBC0 Offset: 0x1C0CBC0 VA: 0x1C0CBC0
	public void Init(WarBoardRatingBaseEntity ratingBase) { }

	// RVA: 0x1C0CBC8 Offset: 0x1C0CBC8 VA: 0x1C0CBC8
	public int get_adjustmentValueA1() { }

	// RVA: 0x1C0CBF4 Offset: 0x1C0CBF4 VA: 0x1C0CBF4
	public int get_adjustmentValueB() { }

	// RVA: 0x1C0CC20 Offset: 0x1C0CC20 VA: 0x1C0CC20 Slot: 4
	public virtual float GetRatingBase(int forceId, WarBoardSquareData calcSquare, WarBoardSquareData targetSquare, Dictionary<int, uint> dicPiecePlaceData, List<WarBoardAIRoute.RouteData> routeDataList) { }

	// RVA: 0x1C0CC28 Offset: 0x1C0CC28 VA: 0x1C0CC28
	protected void DebugLog(WarBoardSquareData calcSquare, WarBoardSquareData targetSquare) { }
}

// Namespace: 
public class ShortestDistanceFromAllyMaster : WarBoardRatingBase // TypeDefIndex: 11705
{
	// Methods

	// RVA: 0x1A59C08 Offset: 0x1A59C08 VA: 0x1A59C08
	public void .ctor() { }

	// RVA: 0x1A59C10 Offset: 0x1A59C10 VA: 0x1A59C10 Slot: 4
	public override float GetRatingBase(int forceId, WarBoardSquareData calcSquare, WarBoardSquareData targetSquare, Dictionary<int, uint> dicPiecePlaceData, List<WarBoardAIRoute.RouteData> routeDataList) { }
}

// Namespace: 
public class ShortestDistanceFromAllyServant : WarBoardRatingBase // TypeDefIndex: 11706
{
	// Methods

	// RVA: 0x1A59EA4 Offset: 0x1A59EA4 VA: 0x1A59EA4
	public void .ctor() { }

	// RVA: 0x1A59EAC Offset: 0x1A59EAC VA: 0x1A59EAC Slot: 4
	public override float GetRatingBase(int forceId, WarBoardSquareData calcSquare, WarBoardSquareData targetSquare, Dictionary<int, uint> dicPiecePlaceData, List<WarBoardAIRoute.RouteData> routeDataList) { }
}

// Namespace: 
public class ShortestDistanceFromEnemyMaster : WarBoardRatingBase // TypeDefIndex: 11707
{
	// Methods

	// RVA: 0x1A5A138 Offset: 0x1A5A138 VA: 0x1A5A138
	public void .ctor() { }

	// RVA: 0x1A5A140 Offset: 0x1A5A140 VA: 0x1A5A140 Slot: 4
	public override float GetRatingBase(int forceId, WarBoardSquareData calcSquare, WarBoardSquareData targetSquare, Dictionary<int, uint> dicPiecePlaceData, List<WarBoardAIRoute.RouteData> routeDataList) { }
}

// Namespace: 
public class ShortestDistanceFromEnemyServant : WarBoardRatingBase // TypeDefIndex: 11708
{
	// Methods

	// RVA: 0x1A5A364 Offset: 0x1A5A364 VA: 0x1A5A364
	public void .ctor() { }

	// RVA: 0x1A5A36C Offset: 0x1A5A36C VA: 0x1A5A36C Slot: 4
	public override float GetRatingBase(int forceId, WarBoardSquareData calcSquare, WarBoardSquareData targetSquare, Dictionary<int, uint> dicPiecePlaceData, List<WarBoardAIRoute.RouteData> routeDataList) { }
}

// Namespace: 
public class ShortestDistanceFromItem : WarBoardRatingBase // TypeDefIndex: 11709
{
	// Methods

	// RVA: 0x1A5A590 Offset: 0x1A5A590 VA: 0x1A5A590
	public void .ctor() { }

	// RVA: 0x1A5A598 Offset: 0x1A5A598 VA: 0x1A5A598 Slot: 4
	public override float GetRatingBase(int forceId, WarBoardSquareData calcSquare, WarBoardSquareData targetSquare, Dictionary<int, uint> dicPiecePlaceData, List<WarBoardAIRoute.RouteData> routeDataList) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2730 Offset: 0xCB2730 VA: 0xCB2730
private sealed class ShortestDistanceFromItem.<GetRatingBase>c__AnonStorey0 // TypeDefIndex: 11710
{
	// Fields
	internal WarBoardSquareData targetSquare; // 0x10

	// Methods

	// RVA: 0x1A5A7FC Offset: 0x1A5A7FC VA: 0x1A5A7FC
	public void .ctor() { }

	// RVA: 0x1A5A804 Offset: 0x1A5A804 VA: 0x1A5A804
	internal bool <>m__0(WarBoardAIRoute.RouteData x) { }
}

// Namespace: 
public class ShortestDistanceFromPrioritySpace : WarBoardRatingBase // TypeDefIndex: 11711
{
	// Methods

	// RVA: 0x1A5A8A8 Offset: 0x1A5A8A8 VA: 0x1A5A8A8
	public void .ctor() { }

	// RVA: 0x1A5A8B0 Offset: 0x1A5A8B0 VA: 0x1A5A8B0 Slot: 4
	public override float GetRatingBase(int forceId, WarBoardSquareData calcSquare, WarBoardSquareData targetSquare, Dictionary<int, uint> dicPiecePlaceData, List<WarBoardAIRoute.RouteData> routeDataList) { }
}

// Namespace: 
public class WarBoardAI // TypeDefIndex: 11712
{
	// Fields
	private WarBoardAIRoute routeClass; // 0x10
	private List<WarBoardAIRoute.RouteData> executeRoute; // 0x18
	public bool isEndPhase; // 0x20
	public bool isEndRoute; // 0x21
	private int routeIndex; // 0x24
	[CompilerGeneratedAttribute] // RVA: 0xCEDD30 Offset: 0xCEDD30 VA: 0xCEDD30
	private static Func<Decimal, Decimal> <>f__am$cache0; // 0x0

	// Properties
	public int ForceId { get; }
	public int GroupId { get; }

	// Methods

	// RVA: 0x1B40184 Offset: 0x1B40184 VA: 0x1B40184
	public void .ctor(WarBoardStageNpcEntity npc) { }

	// RVA: 0x1B40C04 Offset: 0x1B40C04 VA: 0x1B40C04
	public void Clear() { }

	// RVA: 0x1B40C90 Offset: 0x1B40C90 VA: 0x1B40C90
	public int get_ForceId() { }

	// RVA: 0x1B40CBC Offset: 0x1B40CBC VA: 0x1B40CBC
	public int get_GroupId() { }

	[DebuggerHiddenAttribute] // RVA: 0xD426E4 Offset: 0xD426E4 VA: 0xD426E4
	// RVA: 0x1B40CE8 Offset: 0x1B40CE8 VA: 0x1B40CE8
	public IEnumerator Think() { }

	// RVA: 0x1B40D60 Offset: 0x1B40D60 VA: 0x1B40D60
	public bool Execute() { }

	// RVA: 0x1B41068 Offset: 0x1B41068 VA: 0x1B41068
	public int GetRandomIndex(List<Decimal> weightTable) { }

	// RVA: 0x1B41298 Offset: 0x1B41298 VA: 0x1B41298
	private string ConvertForceGroupIndexToString(int forceId, int groupId, int index) { }

	[CompilerGeneratedAttribute] // RVA: 0xD426F4 Offset: 0xD426F4 VA: 0xD426F4
	// RVA: 0x1B41378 Offset: 0x1B41378 VA: 0x1B41378
	private static Decimal <GetRandomIndex>m__0(Decimal x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2740 Offset: 0xCB2740 VA: 0xCB2740
private sealed class WarBoardAI.<Think>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 11713
{
	// Fields
	internal List<List<WarBoardAIRoute.RouteData>> <allRouteList>__0; // 0x10
	internal int <pickValue>__1; // 0x18
	internal List<WarBoardAIRoute.RouteData>[] <sortList>__1; // 0x20
	internal List<WarBoardAIRoute.RouteData>[] <evalValueSortList>__1; // 0x28
	internal List<Decimal> <weightList>__1; // 0x30
	internal WarBoardAI $this; // 0x38
	internal object $current; // 0x40
	internal bool $disposing; // 0x48
	internal int $PC; // 0x4C
	private static Func<List<WarBoardAIRoute.RouteData>, Decimal> <>f__am$cache0; // 0x0
	private static Func<WarBoardAIRoute.RouteData, Decimal> <>f__am$cache1; // 0x8
	private static Func<WarBoardAIRoute.RouteData, bool> <>f__am$cache2; // 0x10
	private static Func<WarBoardAIRoute.RouteData, Decimal> <>f__am$cache3; // 0x18

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD4A884 Offset: 0xD4A884 VA: 0xD4A884
	// RVA: 0x1B40D58 Offset: 0x1B40D58 VA: 0x1B40D58
	public void .ctor() { }

	// RVA: 0x1B4137C Offset: 0x1B4137C VA: 0x1B4137C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A894 Offset: 0xD4A894 VA: 0xD4A894
	// RVA: 0x1B4397C Offset: 0x1B4397C VA: 0x1B4397C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A8A4 Offset: 0xD4A8A4 VA: 0xD4A8A4
	// RVA: 0x1B43984 Offset: 0x1B43984 VA: 0x1B43984 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A8B4 Offset: 0xD4A8B4 VA: 0xD4A8B4
	// RVA: 0x1B4398C Offset: 0x1B4398C VA: 0x1B4398C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A8C4 Offset: 0xD4A8C4 VA: 0xD4A8C4
	// RVA: 0x1B439A0 Offset: 0x1B439A0 VA: 0x1B439A0 Slot: 6
	public void Reset() { }

	// RVA: 0x1B43A08 Offset: 0x1B43A08 VA: 0x1B43A08
	private static Decimal <>m__0(List<WarBoardAIRoute.RouteData> x) { }

	// RVA: 0x1B43AC0 Offset: 0x1B43AC0 VA: 0x1B43AC0
	private static Decimal <>m__1(WarBoardAIRoute.RouteData y) { }

	// RVA: 0x1B43B40 Offset: 0x1B43B40 VA: 0x1B43B40
	private static bool <>m__2(WarBoardAIRoute.RouteData y) { }

	// RVA: 0x1B43B6C Offset: 0x1B43B6C VA: 0x1B43B6C
	private static Decimal <>m__3(WarBoardAIRoute.RouteData y) { }
}

// Namespace: 
public class WarBoardAIEvalCalcurater // TypeDefIndex: 11714
{
	// Fields
	private WarBoardAIRoute.PiecePersonality piecePersonalityList; // 0x10

	// Methods

	// RVA: 0x1B43C74 Offset: 0x1B43C74 VA: 0x1B43C74
	public void .ctor(WarBoardAIRoute.PiecePersonality piecePersonality) { }

	// RVA: 0x1B43CA0 Offset: 0x1B43CA0 VA: 0x1B43CA0
	public void CalcRatingOffsetReviewCondition(ref WarBoardAIRoute.RouteData route) { }

	// RVA: 0x1B45F00 Offset: 0x1B45F00 VA: 0x1B45F00
	public void AddRatingBaseOffsetValue(ref WarBoardAIRoute.RouteData route, WarBoardActionTrendEntity trend, bool isAdd) { }

	// RVA: 0x1B461DC Offset: 0x1B461DC VA: 0x1B461DC
	public void CalcRatingOffsetAddCondition(ref WarBoardAIRoute.RouteData route, float avgBeneValue) { }

	// RVA: 0x1B46220 Offset: 0x1B46220 VA: 0x1B46220
	public void JudgeRatingOffsetAddCondition(ref WarBoardAIRoute.RouteData route, List<WarBoardRatingOffsetEntity> ratingOffsetList, float avgBeneValue) { }

	// RVA: 0x1B4799C Offset: 0x1B4799C VA: 0x1B4799C
	public void AddRatingOffsetAddCondition(ref WarBoardAIRoute.RouteData route, WarBoardRatingOffsetEntity ratingOffset, bool isAdd, WarBoardRatingOffsetEntity.Category category) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2750 Offset: 0xCB2750 VA: 0xCB2750
private sealed class WarBoardAIEvalCalcurater.<CalcRatingOffsetReviewCondition>c__AnonStorey0 // TypeDefIndex: 11715
{
	// Fields
	internal WarBoardActionTrendConditionEntity condition; // 0x10

	// Methods

	// RVA: 0x1B45E48 Offset: 0x1B45E48 VA: 0x1B45E48
	public void .ctor() { }

	// RVA: 0x1B47A8C Offset: 0x1B47A8C VA: 0x1B47A8C
	internal bool <>m__0(KeyValuePair<uint, int> x) { }

	// RVA: 0x1B47B10 Offset: 0x1B47B10 VA: 0x1B47B10
	internal bool <>m__1(KeyValuePair<uint, int> x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2760 Offset: 0xCB2760 VA: 0xCB2760
private sealed class WarBoardAIEvalCalcurater.<JudgeRatingOffsetAddCondition>c__AnonStorey1 // TypeDefIndex: 11716
{
	// Fields
	internal WarBoardRatingOffsetEntity ratingOffset; // 0x10

	// Methods

	// RVA: 0x1B47924 Offset: 0x1B47924 VA: 0x1B47924
	public void .ctor() { }

	// RVA: 0x1B47B94 Offset: 0x1B47B94 VA: 0x1B47B94
	internal bool <>m__0(KeyValuePair<uint, int> x) { }

	// RVA: 0x1B47C18 Offset: 0x1B47C18 VA: 0x1B47C18
	internal bool <>m__1(KeyValuePair<uint, int> x) { }

	// RVA: 0x1B47C9C Offset: 0x1B47C9C VA: 0x1B47C9C
	internal bool <>m__2(KeyValuePair<uint, int> x) { }

	// RVA: 0x1B47D1C Offset: 0x1B47D1C VA: 0x1B47D1C
	internal bool <>m__3(KeyValuePair<uint, int> x) { }

	// RVA: 0x1B47DA0 Offset: 0x1B47DA0 VA: 0x1B47DA0
	internal bool <>m__4(KeyValuePair<uint, int> x) { }

	// RVA: 0x1B47E20 Offset: 0x1B47E20 VA: 0x1B47E20
	internal bool <>m__5(KeyValuePair<uint, int> x) { }
}

// Namespace: 
public class WarBoardAIManager // TypeDefIndex: 11717
{
	// Fields
	[SerializeField] // RVA: 0xCEDD40 Offset: 0xCEDD40 VA: 0xCEDD40
	private List<WarBoardAI> warBoardAIList; // 0x10
	private bool isPause; // 0x18
	private bool exec; // 0x19
	private IEnumerator executeTask; // 0x20
	private static Dictionary<int, WarBoardPieceData> dicSquareIndexEnemyPiece; // 0x0
	private static Dictionary<uint, WarBoardPieceData> dicUniqueIndexPiece; // 0x8
	private static Dictionary<int, WarBoardSquareData> dicIndexSquare; // 0x10
	private static Dictionary<int, WarBoardItemData> dicIndexItem; // 0x18

	// Methods

	// RVA: 0x1B47EA4 Offset: 0x1B47EA4 VA: 0x1B47EA4
	public void .ctor() { }

	// RVA: 0x1B47F14 Offset: 0x1B47F14 VA: 0x1B47F14
	public void Initialize(List<WarBoardStageNpcEntity> npcList) { }

	// RVA: 0x1B48074 Offset: 0x1B48074 VA: 0x1B48074
	public void CreateAI(WarBoardStageNpcEntity npc) { }

	// RVA: 0x1B48100 Offset: 0x1B48100 VA: 0x1B48100
	public void Pause() { }

	// RVA: 0x1B4810C Offset: 0x1B4810C VA: 0x1B4810C
	public void Resume() { }

	// RVA: 0x1B48114 Offset: 0x1B48114 VA: 0x1B48114
	public void AIEnd() { }

	[DebuggerHiddenAttribute] // RVA: 0xD42704 Offset: 0xD42704 VA: 0xD42704
	// RVA: 0x1B4811C Offset: 0x1B4811C VA: 0x1B4811C
	public IEnumerator Wait() { }

	// RVA: 0x1B48194 Offset: 0x1B48194 VA: 0x1B48194
	public void StartAIPhase(int forceId, int groupId) { }

	// RVA: 0x1B482E4 Offset: 0x1B482E4 VA: 0x1B482E4
	public void StartThink(int forceId, int groupId) { }

	[DebuggerHiddenAttribute] // RVA: 0xD42714 Offset: 0xD42714 VA: 0xD42714
	// RVA: 0x1B488DC Offset: 0x1B488DC VA: 0x1B488DC
	public IEnumerator Execute(int forceId, int groupId) { }

	// RVA: 0x1B48988 Offset: 0x1B48988 VA: 0x1B48988
	public void Update() { }

	// RVA: 0x1B48A04 Offset: 0x1B48A04 VA: 0x1B48A04
	public static bool IsEqualPiece(WarBoardPieceData one, WarBoardPieceData two) { }

	// RVA: 0x1B45EA8 Offset: 0x1B45EA8 VA: 0x1B45EA8
	public static bool IsAllyPiece(WarBoardPieceData one, WarBoardPieceData two) { }

	// RVA: 0x1B45E50 Offset: 0x1B45E50 VA: 0x1B45E50
	public static bool IsEnemyPiece(WarBoardPieceData one, WarBoardPieceData two) { }

	// RVA: 0x1B4792C Offset: 0x1B4792C VA: 0x1B4792C
	public static float GetBreakPoint(WarBoardPieceData piece) { }

	// RVA: 0x1B48AA8 Offset: 0x1B48AA8 VA: 0x1B48AA8
	public static Dictionary<int, WarBoardPieceData> GetEnemyPiece() { }

	// RVA: 0x1B48B10 Offset: 0x1B48B10 VA: 0x1B48B10
	public static WarBoardPieceData GetEnemyPieceSquareIndex(int squareIndex) { }

	// RVA: 0x1B48BBC Offset: 0x1B48BBC VA: 0x1B48BBC
	public static WarBoardPieceData GetPieceUnique(uint uniqueIndex) { }

	// RVA: 0x1B40FBC Offset: 0x1B40FBC VA: 0x1B40FBC
	public static WarBoardSquareData GetSquare(int squareIndex) { }

	// RVA: 0x1B48C68 Offset: 0x1B48C68 VA: 0x1B48C68
	public static WarBoardItemData GetItem(int squareIndex) { }

	// RVA: 0x1B48D14 Offset: 0x1B48D14 VA: 0x1B48D14
	public static bool IsEnemyBlock(int squareIndex) { }

	// RVA: 0x1B48D84 Offset: 0x1B48D84 VA: 0x1B48D84
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2770 Offset: 0xCB2770 VA: 0xCB2770
private sealed class WarBoardAIManager.<Wait>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 11718
{
	// Fields
	internal WarBoardAIManager $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD4A8D4 Offset: 0xD4A8D4 VA: 0xD4A8D4
	// RVA: 0x1B4818C Offset: 0x1B4818C VA: 0x1B4818C
	public void .ctor() { }

	// RVA: 0x1B49810 Offset: 0x1B49810 VA: 0x1B49810 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A8E4 Offset: 0xD4A8E4 VA: 0xD4A8E4
	// RVA: 0x1B49908 Offset: 0x1B49908 VA: 0x1B49908 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A8F4 Offset: 0xD4A8F4 VA: 0xD4A8F4
	// RVA: 0x1B49910 Offset: 0x1B49910 VA: 0x1B49910 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A904 Offset: 0xD4A904 VA: 0xD4A904
	// RVA: 0x1B49918 Offset: 0x1B49918 VA: 0x1B49918 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A914 Offset: 0xD4A914 VA: 0xD4A914
	// RVA: 0x1B4992C Offset: 0x1B4992C VA: 0x1B4992C Slot: 6
	public void Reset() { }

	// RVA: 0x1B49994 Offset: 0x1B49994 VA: 0x1B49994
	internal bool <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2780 Offset: 0xCB2780 VA: 0xCB2780
private sealed class WarBoardAIManager.<StartAIPhase>c__AnonStorey2 // TypeDefIndex: 11719
{
	// Fields
	internal int forceId; // 0x10
	internal int groupId; // 0x14

	// Methods

	// RVA: 0x1B482DC Offset: 0x1B482DC VA: 0x1B482DC
	public void .ctor() { }

	// RVA: 0x1B49718 Offset: 0x1B49718 VA: 0x1B49718
	internal bool <>m__0(WarBoardAI x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2790 Offset: 0xCB2790 VA: 0xCB2790
private sealed class WarBoardAIManager.<StartThink>c__AnonStorey3 // TypeDefIndex: 11720
{
	// Fields
	internal int forceId; // 0x10
	internal int groupId; // 0x14

	// Methods

	// RVA: 0x1B488D4 Offset: 0x1B488D4 VA: 0x1B488D4
	public void .ctor() { }

	// RVA: 0x1B49794 Offset: 0x1B49794 VA: 0x1B49794
	internal bool <>m__0(WarBoardAI x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB27A0 Offset: 0xCB27A0 VA: 0xCB27A0
private sealed class WarBoardAIManager.<Execute>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 11721
{
	// Fields
	internal int forceId; // 0x10
	internal int groupId; // 0x14
	internal WarBoardAI <ai>__0; // 0x18
	internal bool <isNextPhase>__1; // 0x20
	internal IEnumerator <exe>__1; // 0x28
	internal float <prevTime>__1; // 0x30
	internal IEnumerator <enumeratorChild>__2; // 0x38
	internal WarBoardAIManager $this; // 0x40
	internal object $current; // 0x48
	internal bool $disposing; // 0x50
	internal int $PC; // 0x54
	private WarBoardAIManager.<Execute>c__Iterator1.<Execute>c__AnonStorey4 $locvar0; // 0x58

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD4A924 Offset: 0xD4A924 VA: 0xD4A924
	// RVA: 0x1B48980 Offset: 0x1B48980 VA: 0x1B48980
	public void .ctor() { }

	// RVA: 0x1B48E88 Offset: 0x1B48E88 VA: 0x1B48E88 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A934 Offset: 0xD4A934 VA: 0xD4A934
	// RVA: 0x1B49610 Offset: 0x1B49610 VA: 0x1B49610 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A944 Offset: 0xD4A944 VA: 0xD4A944
	// RVA: 0x1B49618 Offset: 0x1B49618 VA: 0x1B49618 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A954 Offset: 0xD4A954 VA: 0xD4A954
	// RVA: 0x1B49620 Offset: 0x1B49620 VA: 0x1B49620 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A964 Offset: 0xD4A964 VA: 0xD4A964
	// RVA: 0x1B49634 Offset: 0x1B49634 VA: 0x1B49634 Slot: 6
	public void Reset() { }
}

// Namespace: 
private sealed class WarBoardAIManager.<Execute>c__Iterator1.<Execute>c__AnonStorey4 // TypeDefIndex: 11722
{
	// Fields
	internal int forceId; // 0x10
	internal int groupId; // 0x14
	internal WarBoardAIManager.<Execute>c__Iterator1 <>f__ref$1; // 0x18

	// Methods

	// RVA: 0x1B49608 Offset: 0x1B49608 VA: 0x1B49608
	public void .ctor() { }

	// RVA: 0x1B4969C Offset: 0x1B4969C VA: 0x1B4969C
	internal bool <>m__0(WarBoardAI x) { }
}

// Namespace: 
public class WarBoardAIRoute // TypeDefIndex: 11723
{
	// Fields
	private readonly int TEMP_SEARCH_DEPTH; // 0x10
	public int forceId; // 0x14
	public int groupId; // 0x18
	public int pickValue; // 0x1C
	private int moveCost; // 0x20
	private int masterMoveCost; // 0x24
	private int attackCost; // 0x28
	private WarBoardPieceData[] allAllyPiece; // 0x30
	private WarBoardSquareData[] allSquare; // 0x38
	private WarBoardPieceData[] allEnemyPiece; // 0x40
	private WarBoardItemData[] allItemData; // 0x48
	private WarBoardTreasureData[] allTreasureData; // 0x50
	public Dictionary<int, uint> placePieceData; // 0x58
	private uint masterUniqueIndex; // 0x60
	public List<WarBoardTacticalTrendEntity> tacticalTrendList; // 0x68
	public List<WarBoardRatingBase> ratingBaseList; // 0x70
	public List<WarBoardAIRoute.PiecePersonality> piecePersonalityList; // 0x78
	public float averageBenefitValue; // 0x80
	public List<List<WarBoardAIRoute.RouteData>> allRouteList; // 0x88
	public Dictionary<uint, WarBoardAIRoute.AdvantagePieceData> dicUniqueKeyAdvantagePieceData; // 0x90
	private Dictionary<IEnumerator, float> dictionaryCreateRouteDataEvalValue; // 0x98
	public Dictionary<uint, WarBoardAIRoute.DesignationItemData> dicUniqueKeyDesignationItem; // 0xA0
	public Dictionary<uint, WarBoardAIRoute.PutSquareTarget> dicUniqueKeyTarget; // 0xA8
	private Dictionary<int, WarBoardEvalValueSquare.CalcEval> dicRatingbaseCalcValue; // 0xB0
	private WarBoardStageNpcEntity npcData; // 0xB8
	private int enemyMasterSquareIndex; // 0xC0
	private Decimal sumAttackEvalOffsetAddValue; // 0xC4
	private Decimal sumMoveEvalOffsetAddValue; // 0xD4
	private Decimal sumWarAttackEvalOffsetMagnification; // 0xE4
	private Decimal sumWarMoveEvalOffsetMagnification; // 0xF4
	private Decimal sumBenAttackEvalOffsetMagnification; // 0x104
	private Decimal sumBenMoveEvalOffsetMagnification; // 0x114
	[CompilerGeneratedAttribute] // RVA: 0xCEDD50 Offset: 0xCEDD50 VA: 0xCEDD50
	private static Func<WarBoardAIRoute.PiecePersonality, IEnumerable<WarBoardRatingOffsetEntity>> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCEDD60 Offset: 0xCEDD60 VA: 0xCEDD60
	private static Func<WarBoardRatingOffsetEntity, bool> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCEDD70 Offset: 0xCEDD70 VA: 0xCEDD70
	private static Func<WarBoardRatingOffsetEntity, int> <>f__am$cache2; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCEDD80 Offset: 0xCEDD80 VA: 0xCEDD80
	private static Func<WarBoardRatingOffsetEntity, bool> <>f__am$cache3; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCEDD90 Offset: 0xCEDD90 VA: 0xCEDD90
	private static Func<WarBoardRatingOffsetEntity, int> <>f__am$cache4; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCEDDA0 Offset: 0xCEDDA0 VA: 0xCEDDA0
	private static Func<WarBoardAIRoute.PiecePersonality, IEnumerable<WarBoardActionTrendEntity>> <>f__am$cache5; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCEDDB0 Offset: 0xCEDDB0 VA: 0xCEDDB0
	private static Func<WarBoardActionTrendEntity, bool> <>f__am$cache6; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xCEDDC0 Offset: 0xCEDDC0 VA: 0xCEDDC0
	private static Func<WarBoardActionTrendEntity, Decimal> <>f__am$cache7; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xCEDDD0 Offset: 0xCEDDD0 VA: 0xCEDDD0
	private static Func<WarBoardActionTrendEntity, Decimal> <>f__am$cache8; // 0x40
