// Namespace: 
public class ServantVoiceRelationMaster : DataMasterBase<ServantVoiceRelationMaster, ServantVoiceRelationEntity, string> // TypeDefIndex: 7272
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1C98 Offset: 0xCC1C98 VA: 0xCC1C98
	private static Comparison<ServantVoiceRelationEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC1CA8 Offset: 0xCC1CA8 VA: 0xCC1CA8
	private static Comparison<ServantVoiceRelationEntity> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCC1CB8 Offset: 0xCC1CB8 VA: 0xCC1CB8
	private static Comparison<ServantVoiceRelationEntity> <>f__am$cache2; // 0x10

	// Methods

	// RVA: 0x187F628 Offset: 0x187F628 VA: 0x187F628
	public void .ctor() { }

	// RVA: 0x187F67C Offset: 0x187F67C VA: 0x187F67C
	public ServantVoiceRelationEntity GetEntity(int svtId, int relationSvtId) { }

	// RVA: 0x187F6F0 Offset: 0x187F6F0 VA: 0x187F6F0
	public bool TryGetEntity(out ServantVoiceRelationEntity entity, int svtId, int relationSvtId) { }

	// RVA: 0x187F774 Offset: 0x187F774 VA: 0x187F774
	public void GetRelationList(out ServantVoiceRelationEntity[] relationList, int svtId) { }

	// RVA: 0x187F9D8 Offset: 0x187F9D8 VA: 0x187F9D8
	public void GetRelationList(out ServantVoiceRelationEntity[] beforeRelationList, out ServantVoiceRelationEntity[] sameRelationList, out ServantVoiceRelationEntity[] afterRelationList, int svtId) { }

	// RVA: 0x187FD88 Offset: 0x187FD88 VA: 0x187FD88
	public void MargeServantVoiceId(Dictionary<int, bool> isVoiceList) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37E6C Offset: 0xD37E6C VA: 0xD37E6C
	// RVA: 0x187FF28 Offset: 0x187FF28 VA: 0x187FF28
	private static int <GetRelationList>m__0(ServantVoiceRelationEntity a, ServantVoiceRelationEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37E7C Offset: 0xD37E7C VA: 0xD37E7C
	// RVA: 0x187FF68 Offset: 0x187FF68 VA: 0x187FF68
	private static int <GetRelationList>m__1(ServantVoiceRelationEntity a, ServantVoiceRelationEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37E8C Offset: 0xD37E8C VA: 0xD37E8C
	// RVA: 0x187FFA8 Offset: 0x187FFA8 VA: 0x187FFA8
	private static int <GetRelationList>m__2(ServantVoiceRelationEntity a, ServantVoiceRelationEntity b) { }
}

// Namespace: 
public class SetItemEntity : DataEntityBase<string> // TypeDefIndex: 7273
{
	// Fields
	public int id; // 0x10
	public int purchaseType; // 0x14
	public int targetId; // 0x18
	public int setNum; // 0x1C

	// Methods

	// RVA: 0x1885ACC Offset: 0x1885ACC VA: 0x1885ACC
	public void .ctor() { }

	// RVA: 0x1885B1C Offset: 0x1885B1C VA: 0x1885B1C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1885B30 Offset: 0x1885B30 VA: 0x1885B30
	public static string CreatePK(int id, int purchaseType, int targetId) { }
}

// Namespace: 
public class SetItemMaster : DataMasterBase<SetItemMaster, SetItemEntity, string> // TypeDefIndex: 7274
{
	// Methods

	// RVA: 0x1885B44 Offset: 0x1885B44 VA: 0x1885B44
	public void .ctor() { }

	// RVA: 0x1885B98 Offset: 0x1885B98 VA: 0x1885B98
	public SetItemEntity GetEntity(int id, int purchaseType, int targetId) { }

	// RVA: 0x1885C1C Offset: 0x1885C1C VA: 0x1885C1C
	public bool TryGetEntity(out SetItemEntity entity, int id, int purchaseType, int targetId) { }

	// RVA: 0x1885CA8 Offset: 0x1885CA8 VA: 0x1885CA8
	public void GetSum(out int itemNum, out int servantNum, out int servantEquipNum, out int cmdCodeNum, out int recordNum, int id) { }

	// RVA: 0x1885EE0 Offset: 0x1885EE0 VA: 0x1885EE0
	public SetItemEntity[] GetList(int id) { }
}

// Namespace: 
public class ShopActionEntity : DataEntityBase<string> // TypeDefIndex: 7275
{
	// Fields
	public int shopId; // 0x10
	public int idx; // 0x14
	public int actionType; // 0x18
	public string[] vals; // 0x20
	public int optionId; // 0x28

	// Methods

	// RVA: 0x1893830 Offset: 0x1893830 VA: 0x1893830
	public void .ctor() { }

	// RVA: 0x1893880 Offset: 0x1893880 VA: 0x1893880 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1893890 Offset: 0x1893890 VA: 0x1893890
	public static string CreatePK(int shopId, int idx) { }

	// RVA: 0x18938A0 Offset: 0x18938A0 VA: 0x18938A0
	public ActionType.Type GetActionType() { }
}

// Namespace: 
public class ShopActionMaster : DataMasterBase<ShopActionMaster, ShopActionEntity, string> // TypeDefIndex: 7276
{
	// Methods

	// RVA: 0x1893D3C Offset: 0x1893D3C VA: 0x1893D3C
	public void .ctor() { }

	// RVA: 0x1893D90 Offset: 0x1893D90 VA: 0x1893D90
	public ShopActionEntity GetEntity(int shopId, int idx) { }

	// RVA: 0x1893E04 Offset: 0x1893E04 VA: 0x1893E04
	public bool TryGetEntity(out ShopActionEntity entity, int shopId, int idx) { }

	// RVA: 0x1893E88 Offset: 0x1893E88 VA: 0x1893E88
	public List<ShopActionEntity> GetEntityList(int purchaseShopId) { }

	// RVA: 0x1893FF4 Offset: 0x1893FF4 VA: 0x1893FF4
	public List<ShopActionEntity> GetVoiceEntityList(int purchaseShopId) { }
}

// Namespace: 
public class ShopDetailEntity : DataEntityBase<int> // TypeDefIndex: 7277
{
	// Fields
	public int shopId; // 0x10
	public string message; // 0x18
	public int frequencyType; // 0x20
	public int presentMessageId; // 0x24
	public string afterMessage; // 0x28
	public int okTextImageId; // 0x30

	// Methods

	// RVA: 0x1E67100 Offset: 0x1E67100 VA: 0x1E67100
	public void .ctor() { }

	// RVA: 0x1E67150 Offset: 0x1E67150 VA: 0x1E67150 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1E67158 Offset: 0x1E67158 VA: 0x1E67158
	public string getMessage() { }

	// RVA: 0x1E67160 Offset: 0x1E67160 VA: 0x1E67160
	public ShopDetailEntity.FrequencyType getFrequencyType() { }
}

// Namespace: 
public enum ShopDetailEntity.FrequencyType // TypeDefIndex: 7278
{
	// Fields
	public int value__; // 0x0
	public const ShopDetailEntity.FrequencyType ONCE = 1;
	public const ShopDetailEntity.FrequencyType ONCE_UNTIL_REBOOT = 2;
	public const ShopDetailEntity.FrequencyType EVERY_TIME = 3;
	public const ShopDetailEntity.FrequencyType VALENTINE = 4;
	public const ShopDetailEntity.FrequencyType EVERY_TIME_AFTER = 5;
}

// Namespace: 
public class ShopDetailMaster : DataMasterBase<ShopDetailMaster, ShopDetailEntity, int> // TypeDefIndex: 7279
{
	// Methods

	// RVA: 0x1E67168 Offset: 0x1E67168 VA: 0x1E67168
	public void .ctor() { }

	// RVA: 0x1E671BC Offset: 0x1E671BC VA: 0x1E671BC
	public ShopDetailEntity getShopDetailEntity(int id) { }

	// RVA: 0x1E672D4 Offset: 0x1E672D4 VA: 0x1E672D4
	public ShopDetailEntity[] getShopDetailEntityList() { }
}

// Namespace: 
public class ShopEntity : DataEntityBase<int> // TypeDefIndex: 7280
{
	// Fields
	public int id; // 0x10
	public int baseShopId; // 0x14
	public int eventId; // 0x18
	public int[] itemIds; // 0x20
	public int slot; // 0x28
	public int flag; // 0x2C
	public int purchaseType; // 0x30
	public int[] targetIds; // 0x38
	public int setNum; // 0x40
	public int payType; // 0x44
	public int shopType; // 0x48
	public int[] prices; // 0x50
	public int limitNum; // 0x58
	public string name; // 0x60
	public string detail; // 0x68
	public int imageId; // 0x70
	public int bgImageId; // 0x74
	public long openedAt; // 0x78
	public long closedAt; // 0x80
	public Dictionary<string, object> script; // 0x88
	public int priority; // 0x90
	public string infoMessage; // 0x98
	public string warningMessage; // 0xA0
	[CompilerGeneratedAttribute] // RVA: 0xCC1CC8 Offset: 0xCC1CC8 VA: 0xCC1CC8
	private static Predicate<UserPresentBoxEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC1CD8 Offset: 0xCC1CD8 VA: 0xCC1CD8
	private static Converter<object, int> <>f__am$cache1; // 0x8

	// Properties
	public int TargetId { get; }
	public int TargetMax { get; }

	// Methods

	// RVA: 0x1E67440 Offset: 0x1E67440 VA: 0x1E67440
	public void .ctor() { }

	// RVA: 0x1E67490 Offset: 0x1E67490 VA: 0x1E67490 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1E593C0 Offset: 0x1E593C0 VA: 0x1E593C0
	public int GetItemCount() { }

	// RVA: 0x1E5937C Offset: 0x1E5937C VA: 0x1E5937C
	public int GetItemID() { }

	// RVA: 0x1E593EC Offset: 0x1E593EC VA: 0x1E593EC
	public int GetItemIDs(int num) { }

	// RVA: 0x1E59710 Offset: 0x1E59710 VA: 0x1E59710
	public PayType.Type GetPayType() { }

	// RVA: 0x1E67498 Offset: 0x1E67498 VA: 0x1E67498
	public ShopType.Type GetShopType() { }

	// RVA: 0x1E5EE50 Offset: 0x1E5EE50 VA: 0x1E5EE50
	public int GetFreeShopCondId() { }

	// RVA: 0x1E674A0 Offset: 0x1E674A0 VA: 0x1E674A0
	public long GetFreeShopReleaseDate() { }

	// RVA: 0x1E5E08C Offset: 0x1E5E08C VA: 0x1E5E08C
	public bool IsAfterTheFreeShopReleaseDate() { }

	// RVA: 0x1E5F794 Offset: 0x1E5F794 VA: 0x1E5F794
	public int GetConditionalQuestId() { }

	// RVA: 0x1E5E124 Offset: 0x1E5E124 VA: 0x1E5E124
	public bool IsFulFilledFreeExchangeCondition() { }

	// RVA: 0x1E5FC28 Offset: 0x1E5FC28 VA: 0x1E5FC28
	public bool IsSetStrikethrough(bool isInPreparation) { }

	// RVA: 0x1E67538 Offset: 0x1E67538 VA: 0x1E67538
	public void SetSvtIdAndCostumeId(out int svtId, out int costumeId) { }

	// RVA: 0x1E5DF64 Offset: 0x1E5DF64 VA: 0x1E5DF64
	public bool IsEligibleForFreeFeaturesTheCostumeRelease() { }

	// RVA: 0x1E67640 Offset: 0x1E67640 VA: 0x1E67640
	public bool IsEnable(long nowTime = 0) { }

	// RVA: 0x1E678C0 Offset: 0x1E678C0 VA: 0x1E678C0
	public bool IsAllCondClear() { }

	// RVA: 0x1E679A4 Offset: 0x1E679A4 VA: 0x1E679A4
	public bool IsOpened(long nowTime = 0) { }

	// RVA: 0x1E67C14 Offset: 0x1E67C14 VA: 0x1E67C14
	public bool IsClosed(long nowTime = 0) { }

	// RVA: 0x1E598B0 Offset: 0x1E598B0 VA: 0x1E598B0
	public bool IsPreparation(out string message, out string itemName) { }

	// RVA: 0x1E599AC Offset: 0x1E599AC VA: 0x1E599AC
	public bool TryGetClosedMessage(out string message, out string itemName) { }

	// RVA: 0x1E67CA8 Offset: 0x1E67CA8 VA: 0x1E67CA8
	public bool IsQuestHold() { }

	// RVA: 0x1E59A64 Offset: 0x1E59A64 VA: 0x1E59A64
	public bool IsSoldOut() { }

	// RVA: 0x1E59160 Offset: 0x1E59160 VA: 0x1E59160
	public bool GetIsNotHavingShopItemReceived() { }

	// RVA: 0x1E59258 Offset: 0x1E59258 VA: 0x1E59258
	public bool GetIsAlreadyInPossessionNotHaving(bool isWithoutPresents = False) { }

	// RVA: 0x1E5BEE8 Offset: 0x1E5BEE8 VA: 0x1E5BEE8
	public bool GetIsAlreadyInPossession(bool isWithoutPresents = False) { }

	// RVA: 0x1E68040 Offset: 0x1E68040 VA: 0x1E68040
	public bool IsHiddenInCaseOfBuying() { }

	// RVA: 0x1E6813C Offset: 0x1E6813C VA: 0x1E6813C
	public bool IsHiddenInCaseOfBuyingShopId() { }

	// RVA: 0x1E68238 Offset: 0x1E68238 VA: 0x1E68238
	public bool IsLimitedIconDisplayTarget() { }

	// RVA: 0x1E682E4 Offset: 0x1E682E4 VA: 0x1E682E4
	public bool IsMonthlyIconDisplayTarget() { }

	// RVA: 0x1E68390 Offset: 0x1E68390 VA: 0x1E68390
	public bool IsExchangeServantIconDisplayTarget() { }

	// RVA: 0x1E5F050 Offset: 0x1E5F050 VA: 0x1E5F050
	public bool IsAnotherItemBuyable() { }

	// RVA: 0x1E6843C Offset: 0x1E6843C VA: 0x1E6843C
	public bool IsAnotherPayCommonReleaseOpen() { }

	// RVA: 0x1E5F29C Offset: 0x1E5F29C VA: 0x1E5F29C
	public int[] GetAnotherPayItemIds() { }

	// RVA: 0x1E6854C Offset: 0x1E6854C VA: 0x1E6854C
	public PayType.Type GetAnotherPayType() { }

	// RVA: 0x1E685E4 Offset: 0x1E685E4 VA: 0x1E685E4
	public int GetRemainDays() { }

	// RVA: 0x1E686F0 Offset: 0x1E686F0 VA: 0x1E686F0
	public bool IsCondType() { }

	// RVA: 0x1E687F8 Offset: 0x1E687F8 VA: 0x1E687F8
	public bool IsCondType(long userId) { }

	// RVA: 0x1E61EE0 Offset: 0x1E61EE0 VA: 0x1E61EE0
	public int GetPurchaseShop() { }

	// RVA: 0x1E688D0 Offset: 0x1E688D0 VA: 0x1E688D0
	public string GetCountText() { }

	// RVA: 0x1E6893C Offset: 0x1E6893C VA: 0x1E6893C
	public IconLabelInfo.IconKind GetPriceUnitIcon() { }

	// RVA: 0x1E5968C Offset: 0x1E5968C VA: 0x1E5968C
	public IconLabelInfo.IconKind GetPriceIcon() { }

	// RVA: 0x1E5973C Offset: 0x1E5973C VA: 0x1E5973C
	public int GetPrice() { }

	// RVA: 0x1E597B4 Offset: 0x1E597B4 VA: 0x1E597B4
	public int GetPrices(int num) { }

	// RVA: 0x1E68964 Offset: 0x1E68964 VA: 0x1E68964
	public void GetInfo(out string nameText, out string countText, bool isSend = False) { }

	// RVA: 0x1E59DE4 Offset: 0x1E59DE4 VA: 0x1E59DE4
	public void GetSum(out int buyItemNum, out int buyServantNum, out int buyServantEquipNum, out int buyCmdCodeNum, out int buyQuestNum, out int recordNum) { }

	// RVA: 0x1E5A154 Offset: 0x1E5A154 VA: 0x1E5A154
	public void GetLastPurchaseSum(out int buyItemNum, out int buyServantNum, out int buyServantEquipNum, out int buyCmdCodeNum, out int buyQuestNum) { }

	// RVA: 0x1E5E9B4 Offset: 0x1E5E9B4 VA: 0x1E5E9B4
	public bool checkHoldDisp() { }

	// RVA: 0x1E5EAA4 Offset: 0x1E5EAA4 VA: 0x1E5EAA4
	public int getHoldCount() { }

	// RVA: 0x1E58C60 Offset: 0x1E58C60 VA: 0x1E58C60
	public bool checkFlag(ShopFlag.Flag flag) { }

	// RVA: 0x1E68FEC Offset: 0x1E68FEC VA: 0x1E68FEC
	public int getTargetId(int id = 0) { }

	// RVA: 0x1E59270 Offset: 0x1E59270 VA: 0x1E59270
	public int get_TargetId() { }

	// RVA: 0x1E69040 Offset: 0x1E69040 VA: 0x1E69040
	public int get_TargetMax() { }

	// RVA: 0x1E5F454 Offset: 0x1E5F454 VA: 0x1E5F454
	public bool isExpireItemClosed() { }

	// RVA: 0x1E69300 Offset: 0x1E69300 VA: 0x1E69300
	public bool isQuestNotClear(out int questId, bool checkExpired = False) { }

	// RVA: 0x1E693C4 Offset: 0x1E693C4 VA: 0x1E693C4
	public bool isQuestNotClearItemClosedSub(int questId, bool checkExpired = False) { }

	// RVA: 0x1E5DE84 Offset: 0x1E5DE84 VA: 0x1E5DE84
	public bool isQuestNotClearItemClosed(bool checkExpired = False) { }

	// RVA: 0x1E6951C Offset: 0x1E6951C VA: 0x1E6951C
	public bool isQuestClear(GamePurchase.Type type) { }

	// RVA: 0x1E696EC Offset: 0x1E696EC VA: 0x1E696EC
	public bool isNotQuestClear(GamePurchase.Type type) { }

	// RVA: 0x1E698BC Offset: 0x1E698BC VA: 0x1E698BC
	public bool isPurchasedRarePri() { }

	// RVA: 0x1E699DC Offset: 0x1E699DC VA: 0x1E699DC
	public bool isNotServantGet() { }

	// RVA: 0x1E69B08 Offset: 0x1E69B08 VA: 0x1E69B08
	public bool isNotServantHaving() { }

	// RVA: 0x1E69C34 Offset: 0x1E69C34 VA: 0x1E69C34
	public ServantEntity GetRelateServantEntity() { }

	// RVA: 0x1E69DAC Offset: 0x1E69DAC VA: 0x1E69DAC
	public bool isNotClearTotalTDCond() { }

	// RVA: 0x1E69F48 Offset: 0x1E69F48 VA: 0x1E69F48
	public bool isNotSvtCostumeReleased() { }

	// RVA: 0x1E67EF8 Offset: 0x1E67EF8 VA: 0x1E67EF8
	public bool isNotShopPurchase() { }

	// RVA: 0x1E61E54 Offset: 0x1E61E54 VA: 0x1E61E54
	public bool isClosedShopPriorityLowCheck() { }

	// RVA: 0x1E6A07C Offset: 0x1E6A07C VA: 0x1E6A07C
	private bool IsNotClearNotShopPurchase() { }

	// RVA: 0x1E5E634 Offset: 0x1E5E634 VA: 0x1E5E634
	public bool CheckEquipItem(out int imageId) { }

	// RVA: 0x1E6A248 Offset: 0x1E6A248 VA: 0x1E6A248
	public bool isMaxOver(long buyCount, out int check) { }

	// RVA: 0x1E594B0 Offset: 0x1E594B0 VA: 0x1E594B0
	public string getName() { }

	// RVA: 0x1E6A5F4 Offset: 0x1E6A5F4 VA: 0x1E6A5F4
	public string GetAddMessage() { }

	// RVA: 0x1E6906C Offset: 0x1E6906C VA: 0x1E6906C
	public bool IsEventQuest() { }

	[CompilerGeneratedAttribute] // RVA: 0xD37E9C Offset: 0xD37E9C VA: 0xD37E9C
	// RVA: 0x1E6A6BC Offset: 0x1E6A6BC VA: 0x1E6A6BC
	private static bool <GetIsAlreadyInPossession>m__0(UserPresentBoxEntity v) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37EAC Offset: 0xD37EAC VA: 0xD37EAC
	// RVA: 0x1E6A6EC Offset: 0x1E6A6EC VA: 0x1E6A6EC
	private static int <GetAnotherPayItemIds>m__1(object x) { }
}

// Namespace: 
public class ShopGroupEntity : DataEntityBase<string> // TypeDefIndex: 7281
{
	// Fields
	public int shopId; // 0x10
	public int groupId; // 0x14

	// Methods

	// RVA: 0x1E6DD5C Offset: 0x1E6DD5C VA: 0x1E6DD5C
	public void .ctor() { }

	// RVA: 0x1E6DDAC Offset: 0x1E6DDAC VA: 0x1E6DDAC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1E6DDBC Offset: 0x1E6DDBC VA: 0x1E6DDBC
	public static string CreatePK(int shopId, int groupId) { }
}

// Namespace: 
public class ShopGroupMaster : DataMasterBase<ShopGroupMaster, ShopGroupEntity, string> // TypeDefIndex: 7282
{
	// Methods

	// RVA: 0x1E6DDCC Offset: 0x1E6DDCC VA: 0x1E6DDCC
	public void .ctor() { }

	// RVA: 0x1E6DE20 Offset: 0x1E6DE20 VA: 0x1E6DE20
	public ShopGroupEntity GetEntity(int shopId, int groupId) { }

	// RVA: 0x1E6DE94 Offset: 0x1E6DE94 VA: 0x1E6DE94
	public bool TryGetEntity(out ShopGroupEntity entity, int shopId, int groupId) { }

	// RVA: 0x1E6DF18 Offset: 0x1E6DF18 VA: 0x1E6DF18
	public ShopGroupEntity[] GetTargetEntityList(int groupId) { }

	// RVA: 0x1E68CF8 Offset: 0x1E68CF8 VA: 0x1E68CF8
	public void CheckIncludeGroupItemType(int groupId, out bool item, out bool servant, out bool equip, out bool quest) { }
}

// Namespace: 
public class ShopMaster : DataMasterBase<ShopMaster, ShopEntity, int> // TypeDefIndex: 7283
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1CE8 Offset: 0xCC1CE8 VA: 0xCC1CE8
	private static Comparison<ShopEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC1CF8 Offset: 0xCC1CF8 VA: 0xCC1CF8
	private static Comparison<ShopEntity> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCC1D08 Offset: 0xCC1D08 VA: 0xCC1D08
	private static Comparison<ShopEntity> <>f__am$cache2; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCC1D18 Offset: 0xCC1D18 VA: 0xCC1D18
	private static Comparison<ShopEntity> <>f__am$cache3; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCC1D28 Offset: 0xCC1D28 VA: 0xCC1D28
	private static Comparison<ShopEntity> <>f__am$cache4; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCC1D38 Offset: 0xCC1D38 VA: 0xCC1D38
	private static Comparison<ShopEntity> <>f__am$cache5; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCC1D48 Offset: 0xCC1D48 VA: 0xCC1D48
	private static Comparison<ShopEntity> <>f__am$cache6; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xCC1D58 Offset: 0xCC1D58 VA: 0xCC1D58
	private static Comparison<ItemEntity> <>f__am$cache7; // 0x38

	// Methods

	// RVA: 0x1E71C98 Offset: 0x1E71C98 VA: 0x1E71C98
	public void .ctor() { }

	// RVA: 0x1E71CEC Offset: 0x1E71CEC VA: 0x1E71CEC
	public ShopEntity getEntityFromId(int id) { }

	// RVA: 0x1E620A4 Offset: 0x1E620A4 VA: 0x1E620A4
	public ShopEntity[] GetEnableEntitiyList(GamePurchase.Type purchaseType, ShopType.Type shopType) { }

	// RVA: 0x1E71DEC Offset: 0x1E71DEC VA: 0x1E71DEC
	public ShopEntity[] GetEnableEntitiyList(GamePurchase.Type purchaseType, ShopType.Type shopType, ShopFlag.Flag flag) { }

	// RVA: 0x1E7225C Offset: 0x1E7225C VA: 0x1E7225C
	public ShopEntity[] GetEnableEntitiyList(GamePurchase.Type purchaseType, PayType.Type payType) { }

	// RVA: 0x1E66EC4 Offset: 0x1E66EC4 VA: 0x1E66EC4
	public ShopEntity[] GetEventEntitiyList(int eventId) { }

	// RVA: 0x1E725CC Offset: 0x1E725CC VA: 0x1E725CC
	public ShopEntity[] GetOpenedEventEntitiyList(int eventId) { }

	// RVA: 0x1E63AC8 Offset: 0x1E63AC8 VA: 0x1E63AC8
	public ShopEntity[] GetEnableEventEntitiyList(int eventId) { }

	// RVA: 0x1E62418 Offset: 0x1E62418 VA: 0x1E62418
	public ShopEntity[] GetEnableEventEntityList(int eventId, int slot) { }

	// RVA: 0x1E72820 Offset: 0x1E72820 VA: 0x1E72820
	public int GetEnableMainEventId() { }

	// RVA: 0x1E72C40 Offset: 0x1E72C40 VA: 0x1E72C40
	private bool CheckBuyAfterCloseShop(int eventId) { }

	// RVA: 0x1E6AB04 Offset: 0x1E6AB04 VA: 0x1E6AB04
	public bool GetEnableEventPeriod(out long openedAt, out long closedAt, int eventId) { }

	// RVA: 0x1E60C40 Offset: 0x1E60C40 VA: 0x1E60C40
	public int[] GetEventItemList(int eventId) { }

	// RVA: 0x1E7300C Offset: 0x1E7300C VA: 0x1E7300C
	private bool IsHideItem(int eventId, int id) { }

	// RVA: 0x1E72178 Offset: 0x1E72178 VA: 0x1E72178
	public bool IsOpenPurchaseCloseShop(ShopEntity shopEntity) { }

	// RVA: 0x1E7312C Offset: 0x1E7312C VA: 0x1E7312C
	public bool PurchaseCloseEventShop(ShopEntity shopEntity) { }

	// RVA: 0x1E72D3C Offset: 0x1E72D3C VA: 0x1E72D3C
	public bool IsPurchaseCloseEventShopItem(int baseShopId) { }

	// RVA: 0x1E731F8 Offset: 0x1E731F8 VA: 0x1E731F8
	public int GetEventShopBaseShopId(int eventId) { }

	// RVA: 0x1E732DC Offset: 0x1E732DC VA: 0x1E732DC
	public bool IsEventCloseWithItemPurchase(int eventId) { }

	// RVA: 0x1E736C8 Offset: 0x1E736C8 VA: 0x1E736C8
	public bool IsEnableEventShop(int eventId) { }

	// RVA: 0x1E6ACB4 Offset: 0x1E6ACB4 VA: 0x1E6ACB4
	public bool CloseLimitEventShop(int eventId) { }

	// RVA: 0x1E737E4 Offset: 0x1E737E4 VA: 0x1E737E4
	public ShopEntity GetEntityOfFragmentsShop() { }

	// RVA: 0x1E739BC Offset: 0x1E739BC VA: 0x1E739BC
	public int GetFragmentCountToExchangeForStone() { }

	// RVA: 0x1E73A2C Offset: 0x1E73A2C VA: 0x1E73A2C
	public bool CheckExistsPayType(int eventId, PayType.Type payType) { }

	// RVA: 0x1E6F988 Offset: 0x1E6F988 VA: 0x1E6F988
	public bool IsEnableEventShop() { }

	[CompilerGeneratedAttribute] // RVA: 0xD37EBC Offset: 0xD37EBC VA: 0xD37EBC
	// RVA: 0x1E73B58 Offset: 0x1E73B58 VA: 0x1E73B58
	private static int <GetEnableEntitiyList>m__0(ShopEntity a, ShopEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37ECC Offset: 0xD37ECC VA: 0xD37ECC
	// RVA: 0x1E73B98 Offset: 0x1E73B98 VA: 0x1E73B98
	private static int <GetEnableEntitiyList>m__1(ShopEntity a, ShopEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37EDC Offset: 0xD37EDC VA: 0xD37EDC
	// RVA: 0x1E73BD8 Offset: 0x1E73BD8 VA: 0x1E73BD8
	private static int <GetEnableEntitiyList>m__2(ShopEntity a, ShopEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37EEC Offset: 0xD37EEC VA: 0xD37EEC
	// RVA: 0x1E73C18 Offset: 0x1E73C18 VA: 0x1E73C18
	private static int <GetEventEntitiyList>m__3(ShopEntity a, ShopEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37EFC Offset: 0xD37EFC VA: 0xD37EFC
	// RVA: 0x1E73C58 Offset: 0x1E73C58 VA: 0x1E73C58
	private static int <GetOpenedEventEntitiyList>m__4(ShopEntity a, ShopEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37F0C Offset: 0xD37F0C VA: 0xD37F0C
	// RVA: 0x1E73C98 Offset: 0x1E73C98 VA: 0x1E73C98
	private static int <GetEnableEventEntitiyList>m__5(ShopEntity a, ShopEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37F1C Offset: 0xD37F1C VA: 0xD37F1C
	// RVA: 0x1E73CD8 Offset: 0x1E73CD8 VA: 0x1E73CD8
	private static int <GetEnableEventEntityList>m__6(ShopEntity a, ShopEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37F2C Offset: 0xD37F2C VA: 0xD37F2C
	// RVA: 0x1E73D18 Offset: 0x1E73D18 VA: 0x1E73D18
	private static int <GetEventItemList>m__7(ItemEntity a, ItemEntity b) { }
}

// Namespace: 
public class ShopReleaseEntity : DataEntityBase<string> // TypeDefIndex: 7284
{
	// Fields
	public int shopId; // 0x10
	public int condType; // 0x14
	public int[] condValues; // 0x18
	public long condNum; // 0x20
	public int priority; // 0x28
	public bool isClosedDisp; // 0x2C
	public string closedMessage; // 0x30
	public string closedItemName; // 0x38

	// Properties
	public bool IsClosedDisp { get; }
	public int condValue { get; }

	// Methods

	// RVA: 0x1A4853C Offset: 0x1A4853C VA: 0x1A4853C
	public void .ctor() { }

	// RVA: 0x1A4858C Offset: 0x1A4858C VA: 0x1A4858C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1A485A0 Offset: 0x1A485A0 VA: 0x1A485A0
	public static string CreatePK(int shopId, int condType, int priority) { }

	// RVA: 0x1A485B4 Offset: 0x1A485B4 VA: 0x1A485B4
	public bool get_IsClosedDisp() { }

	// RVA: 0x1A485BC Offset: 0x1A485BC VA: 0x1A485BC
	public bool IsCondEnable() { }

	// RVA: 0x1A486B4 Offset: 0x1A486B4 VA: 0x1A486B4
	public int get_condValue() { }

	// RVA: 0x1A486D8 Offset: 0x1A486D8 VA: 0x1A486D8
	public bool IsOpen() { }

	// RVA: 0x1A486EC Offset: 0x1A486EC VA: 0x1A486EC
	public bool IsPreparation() { }

	// RVA: 0x1A48710 Offset: 0x1A48710 VA: 0x1A48710
	public string GetPreparationConditionText() { }

	// RVA: 0x1A4881C Offset: 0x1A4881C VA: 0x1A4881C
	public string GetPreparationItemNameText() { }
}

// Namespace: 
public class ShopReleaseMaster : DataMasterBase<ShopReleaseMaster, ShopReleaseEntity, string> // TypeDefIndex: 7285
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1D68 Offset: 0xCC1D68 VA: 0xCC1D68
	private static Comparison<ShopReleaseEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1A48824 Offset: 0x1A48824 VA: 0x1A48824
	public void .ctor() { }

	// RVA: 0x1A48878 Offset: 0x1A48878 VA: 0x1A48878
	public ShopReleaseEntity GetEntity(int shopId, int condType, int priority) { }

	// RVA: 0x1A488FC Offset: 0x1A488FC VA: 0x1A488FC
	public bool TryGetEntity(out ShopReleaseEntity entity, int shopId, int condType, int priority) { }

	// RVA: 0x1A48988 Offset: 0x1A48988 VA: 0x1A48988
	public ShopReleaseEntity[] GetEntitiyList(int shopId) { }

	// RVA: 0x1A48B04 Offset: 0x1A48B04 VA: 0x1A48B04
	public ShopReleaseEntity[] GetEntitiyList(int shopId, bool isClosedDisp) { }

	// RVA: 0x1A48D38 Offset: 0x1A48D38 VA: 0x1A48D38
	public bool IsOpen(int shopId) { }

	// RVA: 0x1A48DEC Offset: 0x1A48DEC VA: 0x1A48DEC
	public bool IsAllCondClear(int shopId) { }

	// RVA: 0x1A48E94 Offset: 0x1A48E94 VA: 0x1A48E94
	public List<ShopReleaseEntity> GetNotClearShopReleaseEntity(int shopId) { }

	// RVA: 0x1A48FC0 Offset: 0x1A48FC0 VA: 0x1A48FC0
	public bool IsPreparation(out string message, out string itemName, int shopId) { }

	// RVA: 0x1A490C4 Offset: 0x1A490C4 VA: 0x1A490C4
	public bool TryGetClosedMessage(out string message, out string itemName, int shopId) { }

	// RVA: 0x1A491A8 Offset: 0x1A491A8 VA: 0x1A491A8
	public int GetPurchaseShop(int shopId) { }

	// RVA: 0x1A49270 Offset: 0x1A49270 VA: 0x1A49270
	public bool isQuestNotClearSet(int shopId, out int questId) { }

	// RVA: 0x1A49344 Offset: 0x1A49344 VA: 0x1A49344
	public bool isExistCondType(int shopId, CondType.Kind type) { }

	// RVA: 0x1A493F0 Offset: 0x1A493F0 VA: 0x1A493F0
	public bool CondClearCheck(int shopId, CondType.Kind kind) { }

	// RVA: 0x1A494AC Offset: 0x1A494AC VA: 0x1A494AC
	public int GetTargetShopGroupId(int shopId) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37F3C Offset: 0xD37F3C VA: 0xD37F3C
	// RVA: 0x1A4957C Offset: 0x1A4957C VA: 0x1A4957C
	private static int <GetEntitiyList>m__0(ShopReleaseEntity a, ShopReleaseEntity b) { }
}

// Namespace: 
public class ShopScriptEntity : DataEntityBase<int> // TypeDefIndex: 7286
{
	// Fields
	public int shopId; // 0x10
	public int priority; // 0x14
	public string name; // 0x18
	public int frequencyType; // 0x20
	public string scriptId; // 0x28
	public int eventId; // 0x30
	public int svtId; // 0x34
	public int limitCount; // 0x38
	public int materialFolderId; // 0x3C
	public int[] ignoreEventIds; // 0x40

	// Methods

	// RVA: 0x1A54EC8 Offset: 0x1A54EC8 VA: 0x1A54EC8
	public void .ctor() { }

	// RVA: 0x1A54F18 Offset: 0x1A54F18 VA: 0x1A54F18 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1A54F20 Offset: 0x1A54F20 VA: 0x1A54F20
	public Frequency.Type GetFrequencyType() { }
}

// Namespace: 
public class ShopScriptMaster : DataMasterBase<ShopScriptMaster, ShopScriptEntity, int> // TypeDefIndex: 7287
{
	// Methods

	// RVA: 0x1A54F28 Offset: 0x1A54F28 VA: 0x1A54F28
	public void .ctor() { }

	// RVA: 0x1A50020 Offset: 0x1A50020 VA: 0x1A50020
	public ShopScriptEntity getEntityFromId(int shopId) { }

	// RVA: 0x1A54F7C Offset: 0x1A54F7C VA: 0x1A54F7C
	public static string GetScriptId(int shopId) { }

	// RVA: 0x1A5508C Offset: 0x1A5508C VA: 0x1A5508C
	public Dictionary<string, List<int[]>> GetOpenScriptsWithOpenEventIds() { }
}

// Namespace: 
public class SkillAddEntity : DataEntityBase<string> // TypeDefIndex: 7288
{
	// Fields
	public int skillId; // 0x10
	public int priority; // 0x14
	public int commonReleaseId; // 0x18
	public string name; // 0x20
	public string ruby; // 0x28

	// Methods

	// RVA: 0x1A5ACD0 Offset: 0x1A5ACD0 VA: 0x1A5ACD0
	public void .ctor() { }

	// RVA: 0x1A5AD20 Offset: 0x1A5AD20 VA: 0x1A5AD20 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1A5AD30 Offset: 0x1A5AD30 VA: 0x1A5AD30
	public static string CreatePK(int skillId, int priority) { }

	// RVA: 0x1A5AD40 Offset: 0x1A5AD40 VA: 0x1A5AD40
	public bool IsOpen() { }
}

// Namespace: 
public class SkillAddMaster : DataMasterBase<SkillAddMaster, SkillAddEntity, string> // TypeDefIndex: 7289
{
	// Methods

	// RVA: 0x1A5ADD4 Offset: 0x1A5ADD4 VA: 0x1A5ADD4
	public void .ctor() { }

	// RVA: 0x1A5AE28 Offset: 0x1A5AE28 VA: 0x1A5AE28
	public SkillAddEntity GetEntity(int skillId, int priority) { }

	// RVA: 0x1A5AE9C Offset: 0x1A5AE9C VA: 0x1A5AE9C
	public bool TryGetEntity(out SkillAddEntity entity, int skillId, int priority) { }
}

// Namespace: 
public class SkillDetailEntity : DataEntityBase<int> // TypeDefIndex: 7290
{
	// Fields
	public int id; // 0x10
	public string detail; // 0x18
	public string detailShort; // 0x20

	// Methods

	// RVA: 0x1A5D114 Offset: 0x1A5D114 VA: 0x1A5D114
	public void .ctor() { }

	// RVA: 0x1A5D164 Offset: 0x1A5D164 VA: 0x1A5D164 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1A5D16C Offset: 0x1A5D16C VA: 0x1A5D16C
	public string getDetail() { }

	// RVA: 0x1A5D1D8 Offset: 0x1A5D1D8 VA: 0x1A5D1D8
	public string getDetailShort() { }
}

// Namespace: 
public class SkillDetailMaster : DataMasterBase<SkillDetailMaster, SkillDetailEntity, int> // TypeDefIndex: 7291
{
	// Methods

	// RVA: 0x1A5D244 Offset: 0x1A5D244 VA: 0x1A5D244
	public void .ctor() { }

	// RVA: 0x1A5D298 Offset: 0x1A5D298 VA: 0x1A5D298
	public string getDetail(int id, bool isShort) { }
}

// Namespace: 
public class SkillEntity : DataEntityBase<int> // TypeDefIndex: 7292
{
	// Fields
	public int id; // 0x10
	public int type; // 0x14
	public string name; // 0x18
	public string ruby; // 0x20
	public int maxLv; // 0x28
	public int category; // 0x2C
	public int iconId; // 0x30
	public int motion; // 0x34
	public int[] effectList; // 0x38
	public Dictionary<string, object> script; // 0x40
	private static readonly int CHECK_SCRIPT_TRUE; // 0x0
	public int[] actIndividuality; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xCC1D78 Offset: 0xCC1D78 VA: 0xCC1D78
	[DebuggerBrowsableAttribute] // RVA: 0xCC1D78 Offset: 0xCC1D78 VA: 0xCC1D78
	private List<SkillAddEntity> <SortedSkillAddEntityList>k__BackingField; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xCC1DB4 Offset: 0xCC1DB4 VA: 0xCC1DB4
	private static Func<SkillAddEntity, bool> <>f__am$cache0; // 0x8

	// Properties
	public List<SkillAddEntity> SortedSkillAddEntityList { get; set; }

	// Methods

	// RVA: 0x1A5D3AC Offset: 0x1A5D3AC VA: 0x1A5D3AC
	public void .ctor() { }

	// RVA: 0x1A5D3FC Offset: 0x1A5D3FC VA: 0x1A5D3FC Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1A5D404 Offset: 0x1A5D404 VA: 0x1A5D404
	public static int CreatePK(int id) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37F4C Offset: 0xD37F4C VA: 0xD37F4C
	// RVA: 0x1A5D408 Offset: 0x1A5D408 VA: 0x1A5D408
	public List<SkillAddEntity> get_SortedSkillAddEntityList() { }

	[CompilerGeneratedAttribute] // RVA: 0xD37F5C Offset: 0xD37F5C VA: 0xD37F5C
	// RVA: 0x1A5D410 Offset: 0x1A5D410 VA: 0x1A5D410
	public void set_SortedSkillAddEntityList(List<SkillAddEntity> value) { }

	// RVA: 0x1A5D418 Offset: 0x1A5D418 VA: 0x1A5D418
	public bool isActive() { }

	// RVA: 0x1A5D428 Offset: 0x1A5D428 VA: 0x1A5D428
	public bool isPassive() { }

	// RVA: 0x1A5BFC0 Offset: 0x1A5BFC0 VA: 0x1A5BFC0
	public string getName() { }

	// RVA: 0x1A5D438 Offset: 0x1A5D438 VA: 0x1A5D438
	public SkillAddEntity GetAvailableSkillAddEntity() { }

	// RVA: 0x1A5D568 Offset: 0x1A5D568 VA: 0x1A5D568
	public int[] getEffectList() { }

	// RVA: 0x1A5D570 Offset: 0x1A5D570 VA: 0x1A5D570
	public string getEffectTitle(int lv = 0) { }

	// RVA: 0x1A5D6D0 Offset: 0x1A5D6D0 VA: 0x1A5D6D0
	public int getEffectChargeTurn(int lv = 0) { }

	// RVA: 0x1A5D798 Offset: 0x1A5D798 VA: 0x1A5D798
	public string getEffectExplanation(int lv = 0) { }

	// RVA: 0x1A5D888 Offset: 0x1A5D888 VA: 0x1A5D888
	public string getFuncExplanation(int lv = 0) { }

	// RVA: 0x1A5D970 Offset: 0x1A5D970 VA: 0x1A5D970
	public void getSkillMessageInfo(out string name, out string detail, int lv = 0) { }

	// RVA: 0x1A5D9B8 Offset: 0x1A5D9B8 VA: 0x1A5D9B8
	public int getSkillChargeTime(int lv) { }

	// RVA: 0x1A5DA64 Offset: 0x1A5DA64 VA: 0x1A5DA64
	public int getSkillCutInId() { }

	// RVA: 0x1A5DAD4 Offset: 0x1A5DAD4 VA: 0x1A5DAD4
	public bool checkScript(string key, out int param) { }

	// RVA: 0x1A5DC04 Offset: 0x1A5DC04 VA: 0x1A5DC04
	public int[] getActIndividuality() { }

	// RVA: 0x1A5DC60 Offset: 0x1A5DC60 VA: 0x1A5DC60
	public bool checkUseTreasure(Follower.Type type) { }

	// RVA: 0x1A5DCF0 Offset: 0x1A5DCF0 VA: 0x1A5DCF0
	private bool checkScriptFromIdx(string key) { }

	// RVA: 0x1A5DD94 Offset: 0x1A5DD94 VA: 0x1A5DD94
	public bool isForcedSkillSpeedOne() { }

	// RVA: 0x1A5DE08 Offset: 0x1A5DE08 VA: 0x1A5DE08
	private string[] getScriptStrings(string key, char splitChar) { }

	// RVA: 0x1A5DF7C Offset: 0x1A5DF7C VA: 0x1A5DF7C
	public string[] getSkillCutInVoices() { }

	// RVA: 0x1A5DFD0 Offset: 0x1A5DFD0 VA: 0x1A5DFD0
	public string[] getSkillCutInPrefabInfo() { }

	// RVA: 0x1A5E024 Offset: 0x1A5E024 VA: 0x1A5E024
	public Vector3[] getSkillCutInPrefabOffsets() { }

	// RVA: 0x1A5E240 Offset: 0x1A5E240 VA: 0x1A5E240
	public Vector3[] getSkillCutInPrefabSizes() { }

	// RVA: 0x1A5E45C Offset: 0x1A5E45C VA: 0x1A5E45C
	public bool getSkillCutInCamPlayerAll() { }

	// RVA: 0x1A5E4CC Offset: 0x1A5E4CC VA: 0x1A5E4CC
	public bool isSkillCutInCamField() { }

	// RVA: 0x1A5E53C Offset: 0x1A5E53C VA: 0x1A5E53C
	public int getSkillCutInMessageMode() { }

	// RVA: 0x1A5E5A4 Offset: 0x1A5E5A4 VA: 0x1A5E5A4
	public int GetMotionId(int svtId) { }

	// RVA: 0x1A5E66C Offset: 0x1A5E66C VA: 0x1A5E66C
	public int GetLossCutinId() { }

	// RVA: 0x1A5E6DC Offset: 0x1A5E6DC VA: 0x1A5E6DC
	public int GetFieldCallEffectId(bool isBefore) { }

	// RVA: 0x1A5E760 Offset: 0x1A5E760 VA: 0x1A5E760
	public bool IsSkippable() { }

	// RVA: 0x1A5E7CC Offset: 0x1A5E7CC VA: 0x1A5E7CC
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD37F6C Offset: 0xD37F6C VA: 0xD37F6C
	// RVA: 0x1A5E820 Offset: 0x1A5E820 VA: 0x1A5E820
	private static bool <GetAvailableSkillAddEntity>m__0(SkillAddEntity x) { }
}

// Namespace: 
public enum SkillEntity.CutinCameraSide // TypeDefIndex: 7293
{
	// Fields
	public int value__; // 0x0
	public const SkillEntity.CutinCameraSide ENEMY_ALL = 0;
	public const SkillEntity.CutinCameraSide PLAYER_ALL = 1;
	public const SkillEntity.CutinCameraSide FIELD_ALL = 2;
}

