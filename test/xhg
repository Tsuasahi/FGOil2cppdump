
	// RVA: 0x1043048 Offset: 0x1043048 VA: 0x1043048
	public static Vector2 op_Implicit(Vector3 v) { }

	// RVA: 0x104304C Offset: 0x104304C VA: 0x104304C
	public static Vector3 op_Implicit(Vector2 v) { }

	// RVA: 0x1037688 Offset: 0x1037688 VA: 0x1037688
	public static Vector2 get_zero() { }

	// RVA: 0x1043054 Offset: 0x1043054 VA: 0x1043054
	public static Vector2 get_one() { }

	// RVA: 0x10430BC Offset: 0x10430BC VA: 0x10430BC
	public static Vector2 get_up() { }

	// RVA: 0x1043124 Offset: 0x1043124 VA: 0x1043124
	public static Vector2 get_right() { }

	// RVA: 0x104318C Offset: 0x104318C VA: 0x104318C
	private static void .cctor() { }
}

// Namespace: UnityEngine
[DefaultMemberAttribute] // RVA: 0xC46EC4 Offset: 0xC46EC4 VA: 0xC46EC4
[UsedByNativeCodeAttribute] // RVA: 0xC46EC4 Offset: 0xC46EC4 VA: 0xC46EC4
public struct Vector2Int : IEquatable<Vector2Int> // TypeDefIndex: 2458
{
	// Fields
	private int m_X; // 0x0
	private int m_Y; // 0x4
	private static readonly Vector2Int s_Zero; // 0x0
	private static readonly Vector2Int s_One; // 0x8
	private static readonly Vector2Int s_Up; // 0x10
	private static readonly Vector2Int s_Down; // 0x18
	private static readonly Vector2Int s_Left; // 0x20
	private static readonly Vector2Int s_Right; // 0x28

	// Properties
	public int x { get; }
	public int y { get; }

	// Methods

	// RVA: 0xBBA4B0 Offset: 0xBBA4B0 VA: 0xBBA4B0
	public void .ctor(int x, int y) { }

	// RVA: 0xBBA4B8 Offset: 0xBBA4B8 VA: 0xBBA4B8
	public int get_x() { }

	// RVA: 0xBBA4C0 Offset: 0xBBA4C0 VA: 0xBBA4C0
	public int get_y() { }

	// RVA: 0xBBA4C8 Offset: 0xBBA4C8 VA: 0xBBA4C8 Slot: 0
	public override bool Equals(object other) { }

	// RVA: 0xBBA4D0 Offset: 0xBBA4D0 VA: 0xBBA4D0 Slot: 4
	public bool Equals(Vector2Int other) { }

	// RVA: 0xBBA4D8 Offset: 0xBBA4D8 VA: 0xBBA4D8 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0xBBA4E0 Offset: 0xBBA4E0 VA: 0xBBA4E0 Slot: 3
	public override string ToString() { }

	// RVA: 0x10434E8 Offset: 0x10434E8 VA: 0x10434E8
	private static void .cctor() { }
}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xC46F10 Offset: 0xC46F10 VA: 0xC46F10
[DefaultMemberAttribute] // RVA: 0xC46F10 Offset: 0xC46F10 VA: 0xC46F10
[NativeClassAttribute] // RVA: 0xC46F10 Offset: 0xC46F10 VA: 0xC46F10
[NativeHeaderAttribute] // RVA: 0xC46F10 Offset: 0xC46F10 VA: 0xC46F10
public struct Vector4 : IEquatable<Vector4> // TypeDefIndex: 2459
{
	// Fields
	public const float kEpsilon = 1E-05;
	public float x; // 0x0
	public float y; // 0x4
	public float z; // 0x8
	public float w; // 0xC
	private static readonly Vector4 zeroVector; // 0x0
	private static readonly Vector4 oneVector; // 0x10
	private static readonly Vector4 positiveInfinityVector; // 0x20
	private static readonly Vector4 negativeInfinityVector; // 0x30

	// Properties
	public float Item { get; set; }
	public float sqrMagnitude { get; }
	public static Vector4 zero { get; }
	public static Vector4 one { get; }

	// Methods

	// RVA: 0xBBA59C Offset: 0xBBA59C VA: 0xBBA59C
	public void .ctor(float x, float y, float z, float w) { }

	// RVA: 0xBBA5A8 Offset: 0xBBA5A8 VA: 0xBBA5A8
	public float get_Item(int index) { }

	// RVA: 0xBBA5B0 Offset: 0xBBA5B0 VA: 0xBBA5B0
	public void set_Item(int index, float value) { }

	// RVA: 0xBBA5B8 Offset: 0xBBA5B8 VA: 0xBBA5B8
	public void Set(float newX, float newY, float newZ, float newW) { }

	// RVA: 0xBBA5C4 Offset: 0xBBA5C4 VA: 0xBBA5C4 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0xBBA5CC Offset: 0xBBA5CC VA: 0xBBA5CC Slot: 0
	public override bool Equals(object other) { }

	// RVA: 0xBBA5D4 Offset: 0xBBA5D4 VA: 0xBBA5D4 Slot: 4
	public bool Equals(Vector4 other) { }

	// RVA: 0x1045220 Offset: 0x1045220 VA: 0x1045220
	public static float Dot(Vector4 a, Vector4 b) { }

	// RVA: 0xBBA5DC Offset: 0xBBA5DC VA: 0xBBA5DC
	public float get_sqrMagnitude() { }

	// RVA: 0x1037E10 Offset: 0x1037E10 VA: 0x1037E10
	public static Vector4 get_zero() { }

	// RVA: 0x10452D4 Offset: 0x10452D4 VA: 0x10452D4
	public static Vector4 get_one() { }

	// RVA: 0x1045340 Offset: 0x1045340 VA: 0x1045340
	public static Vector4 op_Subtraction(Vector4 a, Vector4 b) { }

	// RVA: 0x1045354 Offset: 0x1045354 VA: 0x1045354
	public static Vector4 op_Multiply(Vector4 a, float d) { }

	// RVA: 0x1045368 Offset: 0x1045368 VA: 0x1045368
	public static Vector4 op_Division(Vector4 a, float d) { }

	// RVA: 0x104537C Offset: 0x104537C VA: 0x104537C
	public static bool op_Equality(Vector4 lhs, Vector4 rhs) { }

	// RVA: 0x10454D4 Offset: 0x10454D4 VA: 0x10454D4
	public static bool op_Inequality(Vector4 lhs, Vector4 rhs) { }

	// RVA: 0x104559C Offset: 0x104559C VA: 0x104559C
	public static Vector4 op_Implicit(Vector3 v) { }

	// RVA: 0x10455A4 Offset: 0x10455A4 VA: 0x10455A4
	public static Vector3 op_Implicit(Vector4 v) { }

	// RVA: 0x10455A8 Offset: 0x10455A8 VA: 0x10455A8
	public static Vector4 op_Implicit(Vector2 v) { }

	// RVA: 0xBBA5E4 Offset: 0xBBA5E4 VA: 0xBBA5E4 Slot: 3
	public override string ToString() { }

	// RVA: 0x104543C Offset: 0x104543C VA: 0x104543C
	public static float SqrMagnitude(Vector4 a) { }

	// RVA: 0x10457CC Offset: 0x10457CC VA: 0x10457CC
	private static void .cctor() { }
}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xC46FC8 Offset: 0xC46FC8 VA: 0xC46FC8
public sealed class WaitForEndOfFrame : YieldInstruction // TypeDefIndex: 2460
{
	// Methods

	// RVA: 0x1045848 Offset: 0x1045848 VA: 0x1045848
	public void .ctor() { }
}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xC46FD8 Offset: 0xC46FD8 VA: 0xC46FD8
public sealed class WaitForFixedUpdate : YieldInstruction // TypeDefIndex: 2461
{}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xC46FE8 Offset: 0xC46FE8 VA: 0xC46FE8
public sealed class WaitForSeconds : YieldInstruction // TypeDefIndex: 2462
{
	// Fields
	internal float m_Seconds; // 0x10

	// Methods

	// RVA: 0x1045858 Offset: 0x1045858 VA: 0x1045858
	public void .ctor(float seconds) { }
}

// Namespace: UnityEngine
public class WaitForSecondsRealtime : CustomYieldInstruction // TypeDefIndex: 2463
{
	// Fields
	[DebuggerBrowsableAttribute] // RVA: 0xC49968 Offset: 0xC49968 VA: 0xC49968
	[CompilerGeneratedAttribute] // RVA: 0xC49968 Offset: 0xC49968 VA: 0xC49968
	private float <waitTime>k__BackingField; // 0x10
	private float m_WaitUntilTime; // 0x14

	// Properties
	public float waitTime { get; set; }
	public override bool keepWaiting { get; }

	// Methods

	// RVA: 0x104588C Offset: 0x104588C VA: 0x104588C
	public void .ctor(float time) { }

	[CompilerGeneratedAttribute] // RVA: 0xC509A0 Offset: 0xC509A0 VA: 0xC509A0
	// RVA: 0x10458D0 Offset: 0x10458D0 VA: 0x10458D0
	public float get_waitTime() { }

	[CompilerGeneratedAttribute] // RVA: 0xC509B0 Offset: 0xC509B0 VA: 0xC509B0
	// RVA: 0x10458C8 Offset: 0x10458C8 VA: 0x10458C8
	public void set_waitTime(float value) { }

	// RVA: 0x10458D8 Offset: 0x10458D8 VA: 0x10458D8 Slot: 7
	public override bool get_keepWaiting() { }
}

// Namespace: UnityEngine
public sealed class WaitUntil : CustomYieldInstruction // TypeDefIndex: 2464
{
	// Fields
	private Func<bool> m_Predicate; // 0x10

	// Properties
	public override bool keepWaiting { get; }

	// Methods

	// RVA: 0x1045930 Offset: 0x1045930 VA: 0x1045930
	public void .ctor(Func<bool> predicate) { }

	// RVA: 0x104595C Offset: 0x104595C VA: 0x104595C Slot: 7
	public override bool get_keepWaiting() { }
}

// Namespace: UnityEngine
public sealed class WaitWhile : CustomYieldInstruction // TypeDefIndex: 2465
{
	// Fields
	private Func<bool> m_Predicate; // 0x10

	// Properties
	public override bool keepWaiting { get; }

	// Methods

	// RVA: 0x10459C8 Offset: 0x10459C8 VA: 0x10459C8
	public void .ctor(Func<bool> predicate) { }

	// RVA: 0x10459F4 Offset: 0x10459F4 VA: 0x10459F4 Slot: 7
	public override bool get_keepWaiting() { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC46FF8 Offset: 0xC46FF8 VA: 0xC46FF8
public class YieldInstruction // TypeDefIndex: 2466
{
	// Methods

	// RVA: 0x1045850 Offset: 0x1045850 VA: 0x1045850
	public void .ctor() { }
}

// Namespace: UnityEngine.Assertions
[DebuggerStepThroughAttribute] // RVA: 0xC47008 Offset: 0xC47008 VA: 0xC47008
public static class Assert // TypeDefIndex: 2467
{
	// Fields
	public static bool raiseExceptions; // 0x0

	// Methods

	// RVA: 0x2643738 Offset: 0x2643738 VA: 0x2643738
	private static void Fail(string message, string userMessage) { }

	[ConditionalAttribute] // RVA: 0xC509C0 Offset: 0xC509C0 VA: 0xC509C0
	// RVA: -1 Offset: -1
	public static void AreEqual<T>(T expected, T actual, string message) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2188CE4 Offset: 0x2188CE4 VA: 0x2188CE4
	|-Assert.AreEqual<int>
	|
	|-RVA: 0x21890C0 Offset: 0x21890C0 VA: 0x21890C0
	|-Assert.AreEqual<object>
	*/

	[ConditionalAttribute] // RVA: 0xC509F8 Offset: 0xC509F8 VA: 0xC509F8
	// RVA: -1 Offset: -1
	public static void AreEqual<T>(T expected, T actual, string message, IEqualityComparer<T> comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2188DF4 Offset: 0x2188DF4 VA: 0x2188DF4
	|-Assert.AreEqual<int>
	|
	|-RVA: 0x21891D0 Offset: 0x21891D0 VA: 0x21891D0
	|-Assert.AreEqual<object>
	*/

	[ConditionalAttribute] // RVA: 0xC50A30 Offset: 0xC50A30 VA: 0xC50A30
	// RVA: 0x26439C4 Offset: 0x26439C4 VA: 0x26439C4
	public static void AreEqual(Object expected, Object actual, string message) { }

	[ConditionalAttribute] // RVA: 0xC50A68 Offset: 0xC50A68 VA: 0xC50A68
	// RVA: 0x2643CD8 Offset: 0x2643CD8 VA: 0x2643CD8
	public static void AreEqual(int expected, int actual) { }

	// RVA: 0x2643D74 Offset: 0x2643D74 VA: 0x2643D74
	private static void .cctor() { }
}

// Namespace: UnityEngine.Assertions
public class AssertionException : Exception // TypeDefIndex: 2468
{
	// Fields
	private string m_UserMessage; // 0x60

	// Properties
	public override string Message { get; }

	// Methods

	// RVA: 0x26438BC Offset: 0x26438BC VA: 0x26438BC
	public void .ctor(string message, string userMessage) { }

	// RVA: 0x2643DC4 Offset: 0x2643DC4 VA: 0x2643DC4 Slot: 6
	public override string get_Message() { }
}

// Namespace: UnityEngine.Assertions
internal class AssertionMessageUtil // TypeDefIndex: 2469
{
	// Methods

	// RVA: 0x2643E88 Offset: 0x2643E88 VA: 0x2643E88
	public static string GetMessage(string failureMessage) { }

	// RVA: 0x2643F9C Offset: 0x2643F9C VA: 0x2643F9C
	public static string GetMessage(string failureMessage, string expected) { }

	// RVA: 0x2643A98 Offset: 0x2643A98 VA: 0x2643A98
	public static string GetEqualityMessage(object actual, object expected, bool expectEqual) { }
}

// Namespace: UnityEngine.Experimental.Rendering
[NativeHeaderAttribute] // RVA: 0xC47018 Offset: 0xC47018 VA: 0xC47018
internal class BuiltinRuntimeReflectionSystem : IScriptableRuntimeReflectionSystem, IDisposable // TypeDefIndex: 2470
{
	// Methods

	// RVA: 0x264F09C Offset: 0x264F09C VA: 0x264F09C
	public void .ctor() { }

	// RVA: 0x264F0A4 Offset: 0x264F0A4 VA: 0x264F0A4 Slot: 4
	public bool TickRealtimeProbes() { }

	// RVA: 0x264F100 Offset: 0x264F100 VA: 0x264F100 Slot: 5
	public void Dispose() { }

	// RVA: 0x264F104 Offset: 0x264F104 VA: 0x264F104
	private void Dispose(bool disposing) { }

	[StaticAccessorAttribute] // RVA: 0xC50AA0 Offset: 0xC50AA0 VA: 0xC50AA0
	// RVA: 0x264F0A8 Offset: 0x264F0A8 VA: 0x264F0A8
	private static bool BuiltinUpdate() { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC50AE8 Offset: 0xC50AE8 VA: 0xC50AE8
	// RVA: 0x264F108 Offset: 0x264F108 VA: 0x264F108
	private static BuiltinRuntimeReflectionSystem Internal_BuiltinRuntimeReflectionSystem_New() { }
}

// Namespace: UnityEngine.Experimental.Rendering
public interface IScriptableRuntimeReflectionSystem : IDisposable // TypeDefIndex: 2471
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract bool TickRealtimeProbes();
}

// Namespace: UnityEngine.Experimental.Rendering
[NativeHeaderAttribute] // RVA: 0xC47050 Offset: 0xC47050 VA: 0xC47050
[RequiredByNativeCodeAttribute] // RVA: 0xC47050 Offset: 0xC47050 VA: 0xC47050
public static class ScriptableRuntimeReflectionSystemSettings // TypeDefIndex: 2472
{
	// Fields
	private static ScriptableRuntimeReflectionSystemWrapper s_Instance; // 0x0

	// Properties
	private static IScriptableRuntimeReflectionSystem Internal_ScriptableRuntimeReflectionSystemSettings_system { set; }
	private static ScriptableRuntimeReflectionSystemWrapper Internal_ScriptableRuntimeReflectionSystemSettings_instance { get; }

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC50AF8 Offset: 0xC50AF8 VA: 0xC50AF8
	// RVA: 0x264F8AC Offset: 0x264F8AC VA: 0x264F8AC
	private static void set_Internal_ScriptableRuntimeReflectionSystemSettings_system(IScriptableRuntimeReflectionSystem value) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC50B08 Offset: 0xC50B08 VA: 0xC50B08
	// RVA: 0x264FA5C Offset: 0x264FA5C VA: 0x264FA5C
	private static ScriptableRuntimeReflectionSystemWrapper get_Internal_ScriptableRuntimeReflectionSystemSettings_instance() { }

	[RuntimeInitializeOnLoadMethodAttribute] // RVA: 0xC50B18 Offset: 0xC50B18 VA: 0xC50B18
	[StaticAccessorAttribute] // RVA: 0xC50B18 Offset: 0xC50B18 VA: 0xC50B18
	// RVA: 0x264FAC4 Offset: 0x264FAC4 VA: 0x264FAC4
	private static void ScriptingDirtyReflectionSystemInstance() { }

	// RVA: 0x264FB1C Offset: 0x264FB1C VA: 0x264FB1C
	private static void .cctor() { }
}

// Namespace: UnityEngine.Experimental.Rendering
[RequiredByNativeCodeAttribute] // RVA: 0xC4709C Offset: 0xC4709C VA: 0xC4709C
internal class ScriptableRuntimeReflectionSystemWrapper // TypeDefIndex: 2473
{
	// Fields
	[DebuggerBrowsableAttribute] // RVA: 0xC499A4 Offset: 0xC499A4 VA: 0xC499A4
	[CompilerGeneratedAttribute] // RVA: 0xC499A4 Offset: 0xC499A4 VA: 0xC499A4
	private IScriptableRuntimeReflectionSystem <implementation>k__BackingField; // 0x10

	// Properties
	internal IScriptableRuntimeReflectionSystem implementation { get; set; }

	// Methods

	// RVA: 0x264FB88 Offset: 0x264FB88 VA: 0x264FB88
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC50B6C Offset: 0xC50B6C VA: 0xC50B6C
	// RVA: 0x264FA4C Offset: 0x264FA4C VA: 0x264FA4C
	internal IScriptableRuntimeReflectionSystem get_implementation() { }

	[CompilerGeneratedAttribute] // RVA: 0xC50B7C Offset: 0xC50B7C VA: 0xC50B7C
	// RVA: 0x264FA54 Offset: 0x264FA54 VA: 0x264FA54
	internal void set_implementation(IScriptableRuntimeReflectionSystem value) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC50B8C Offset: 0xC50B8C VA: 0xC50B8C
	// RVA: 0x264FB90 Offset: 0x264FB90 VA: 0x264FB90
	private void Internal_ScriptableRuntimeReflectionSystemWrapper_TickRealtimeProbes(IntPtr result) { }
}

// Namespace: Unity.Collections
[RequiredByNativeCodeAttribute] // RVA: 0xC470AC Offset: 0xC470AC VA: 0xC470AC
[AttributeUsageAttribute] // RVA: 0xC470AC Offset: 0xC470AC VA: 0xC470AC
public sealed class ReadOnlyAttribute : Attribute // TypeDefIndex: 2474
{}

// Namespace: Unity.Collections
[RequiredByNativeCodeAttribute] // RVA: 0xC470E8 Offset: 0xC470E8 VA: 0xC470E8
[AttributeUsageAttribute] // RVA: 0xC470E8 Offset: 0xC470E8 VA: 0xC470E8
public sealed class WriteOnlyAttribute : Attribute // TypeDefIndex: 2475
{}

// Namespace: Unity.Collections
[RequiredByNativeCodeAttribute] // RVA: 0xC47124 Offset: 0xC47124 VA: 0xC47124
[AttributeUsageAttribute] // RVA: 0xC47124 Offset: 0xC47124 VA: 0xC47124
public sealed class DeallocateOnJobCompletionAttribute : Attribute // TypeDefIndex: 2476
{}

// Namespace: Unity.Collections
[AttributeUsageAttribute] // RVA: 0xC47160 Offset: 0xC47160 VA: 0xC47160
[RequiredByNativeCodeAttribute] // RVA: 0xC47160 Offset: 0xC47160 VA: 0xC47160
public sealed class NativeFixedLengthAttribute : Attribute // TypeDefIndex: 2477
{}

// Namespace: Unity.Collections
[RequiredByNativeCodeAttribute] // RVA: 0xC4719C Offset: 0xC4719C VA: 0xC4719C
[AttributeUsageAttribute] // RVA: 0xC4719C Offset: 0xC4719C VA: 0xC4719C
public sealed class NativeMatchesParallelForLengthAttribute : Attribute // TypeDefIndex: 2478
{}

// Namespace: Unity.Collections
[AttributeUsageAttribute] // RVA: 0xC471D8 Offset: 0xC471D8 VA: 0xC471D8
[RequiredByNativeCodeAttribute] // RVA: 0xC471D8 Offset: 0xC471D8 VA: 0xC471D8
public sealed class NativeDisableParallelForRestrictionAttribute : Attribute // TypeDefIndex: 2479
{}

// Namespace: Unity.Collections.LowLevel.Unsafe
[AttributeUsageAttribute] // RVA: 0xC47214 Offset: 0xC47214 VA: 0xC47214
[RequiredByNativeCodeAttribute] // RVA: 0xC47214 Offset: 0xC47214 VA: 0xC47214
public sealed class NativeContainerAttribute : Attribute // TypeDefIndex: 2480
{}

// Namespace: Unity.Collections.LowLevel.Unsafe
[AttributeUsageAttribute] // RVA: 0xC47250 Offset: 0xC47250 VA: 0xC47250
[RequiredByNativeCodeAttribute] // RVA: 0xC47250 Offset: 0xC47250 VA: 0xC47250
public sealed class NativeContainerIsReadOnlyAttribute : Attribute // TypeDefIndex: 2481
{}

// Namespace: Unity.Collections.LowLevel.Unsafe
[RequiredByNativeCodeAttribute] // RVA: 0xC4728C Offset: 0xC4728C VA: 0xC4728C
[AttributeUsageAttribute] // RVA: 0xC4728C Offset: 0xC4728C VA: 0xC4728C
public sealed class NativeContainerIsAtomicWriteOnlyAttribute : Attribute // TypeDefIndex: 2482
{}

// Namespace: Unity.Collections.LowLevel.Unsafe
[AttributeUsageAttribute] // RVA: 0xC472C8 Offset: 0xC472C8 VA: 0xC472C8
[RequiredByNativeCodeAttribute] // RVA: 0xC472C8 Offset: 0xC472C8 VA: 0xC472C8
public sealed class NativeContainerSupportsMinMaxWriteRestrictionAttribute : Attribute // TypeDefIndex: 2483
{}

// Namespace: Unity.Collections.LowLevel.Unsafe
[RequiredByNativeCodeAttribute] // RVA: 0xC47304 Offset: 0xC47304 VA: 0xC47304
[AttributeUsageAttribute] // RVA: 0xC47304 Offset: 0xC47304 VA: 0xC47304
public sealed class NativeContainerSupportsDeallocateOnJobCompletionAttribute : Attribute // TypeDefIndex: 2484
{}

// Namespace: Unity.Collections.LowLevel.Unsafe
[RequiredByNativeCodeAttribute] // RVA: 0xC47340 Offset: 0xC47340 VA: 0xC47340
[AttributeUsageAttribute] // RVA: 0xC47340 Offset: 0xC47340 VA: 0xC47340
public sealed class NativeContainerSupportsDeferredConvertListToArray : Attribute // TypeDefIndex: 2485
{}

// Namespace: Unity.Collections.LowLevel.Unsafe
[AttributeUsageAttribute] // RVA: 0xC4737C Offset: 0xC4737C VA: 0xC4737C
[RequiredByNativeCodeAttribute] // RVA: 0xC4737C Offset: 0xC4737C VA: 0xC4737C
public sealed class NativeSetThreadIndexAttribute : Attribute // TypeDefIndex: 2486
{}

// Namespace: Unity.Collections.LowLevel.Unsafe
[ObsoleteAttribute] // RVA: 0xC473B8 Offset: 0xC473B8 VA: 0xC473B8
[AttributeUsageAttribute] // RVA: 0xC473B8 Offset: 0xC473B8 VA: 0xC473B8
[RequiredByNativeCodeAttribute] // RVA: 0xC473B8 Offset: 0xC473B8 VA: 0xC473B8
public sealed class NativeContainerNeedsThreadIndexAttribute : Attribute // TypeDefIndex: 2487
{}

// Namespace: Unity.Collections.LowLevel.Unsafe
[RequiredByNativeCodeAttribute] // RVA: 0xC47418 Offset: 0xC47418 VA: 0xC47418
[AttributeUsageAttribute] // RVA: 0xC47418 Offset: 0xC47418 VA: 0xC47418
public sealed class NativeDisableUnsafePtrRestrictionAttribute : Attribute // TypeDefIndex: 2488
{}

// Namespace: Unity.Collections.LowLevel.Unsafe
[AttributeUsageAttribute] // RVA: 0xC47454 Offset: 0xC47454 VA: 0xC47454
[RequiredByNativeCodeAttribute] // RVA: 0xC47454 Offset: 0xC47454 VA: 0xC47454
public sealed class NativeDisableContainerSafetyRestrictionAttribute : Attribute // TypeDefIndex: 2489
{}

// Namespace: Unity.Collections.LowLevel.Unsafe
[AttributeUsageAttribute] // RVA: 0xC47490 Offset: 0xC47490 VA: 0xC47490
[RequiredByNativeCodeAttribute] // RVA: 0xC47490 Offset: 0xC47490 VA: 0xC47490
public sealed class NativeSetClassTypeToNullOnScheduleAttribute : Attribute // TypeDefIndex: 2490
{}

// Namespace: UnityEngine.Experimental.Playables
[RequiredByNativeCodeAttribute] // RVA: 0xC474CC Offset: 0xC474CC VA: 0xC474CC
[StaticAccessorAttribute] // RVA: 0xC474CC Offset: 0xC474CC VA: 0xC474CC
[NativeHeaderAttribute] // RVA: 0xC474CC Offset: 0xC474CC VA: 0xC474CC
[NativeHeaderAttribute] // RVA: 0xC474CC Offset: 0xC474CC VA: 0xC474CC
[NativeHeaderAttribute] // RVA: 0xC474CC Offset: 0xC474CC VA: 0xC474CC
public struct CameraPlayable : IPlayable, IEquatable<CameraPlayable> // TypeDefIndex: 2491
{
	// Fields
	private PlayableHandle m_Handle; // 0x0

	// Methods

	// RVA: 0xDD2580 Offset: 0xDD2580 VA: 0xDD2580 Slot: 4
	public PlayableHandle GetHandle() { }

	// RVA: 0xDD258C Offset: 0xDD258C VA: 0xDD258C Slot: 5
	public bool Equals(CameraPlayable other) { }
}

// Namespace: UnityEngine.Playables
public struct FrameData // TypeDefIndex: 2492
{
	// Fields
	internal ulong m_FrameID; // 0x0
	internal double m_DeltaTime; // 0x8
	internal float m_Weight; // 0x10
	internal float m_EffectiveWeight; // 0x14
	internal double m_EffectiveParentDelay; // 0x18
	internal float m_EffectiveParentSpeed; // 0x20
	internal float m_EffectiveSpeed; // 0x24
	internal FrameData.Flags m_Flags; // 0x28
	internal PlayableOutput m_Output; // 0x30

	// Properties
	public float deltaTime { get; }

	// Methods

	// RVA: 0xDD29F8 Offset: 0xDD29F8 VA: 0xDD29F8
	public float get_deltaTime() { }
}

// Namespace: 
[FlagsAttribute] // RVA: 0xC47588 Offset: 0xC47588 VA: 0xC47588
internal enum FrameData.Flags // TypeDefIndex: 2493
{
	// Fields
	public int value__; // 0x0
	public const FrameData.Flags Evaluate = 1;
	public const FrameData.Flags SeekOccured = 2;
	public const FrameData.Flags Loop = 4;
	public const FrameData.Flags Hold = 8;
	public const FrameData.Flags EffectivePlayStateDelayed = 16;
	public const FrameData.Flags EffectivePlayStatePlaying = 32;
}

// Namespace: UnityEngine.Playables
[RequiredByNativeCodeAttribute] // RVA: 0xC47598 Offset: 0xC47598 VA: 0xC47598
public interface INotificationReceiver // TypeDefIndex: 2494
{}

// Namespace: UnityEngine.Playables
public interface IPlayable // TypeDefIndex: 2495
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract PlayableHandle GetHandle();
}

// Namespace: UnityEngine.Playables
public interface IPlayableBehaviour // TypeDefIndex: 2496
{
	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC50B9C Offset: 0xC50B9C VA: 0xC50B9C
	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnGraphStart(Playable playable);

	[RequiredByNativeCodeAttribute] // RVA: 0xC50BAC Offset: 0xC50BAC VA: 0xC50BAC
	// RVA: -1 Offset: -1 Slot: 1
	public abstract void OnGraphStop(Playable playable);

	[RequiredByNativeCodeAttribute] // RVA: 0xC50BBC Offset: 0xC50BBC VA: 0xC50BBC
	// RVA: -1 Offset: -1 Slot: 2
	public abstract void OnPlayableCreate(Playable playable);

	[RequiredByNativeCodeAttribute] // RVA: 0xC50BCC Offset: 0xC50BCC VA: 0xC50BCC
	// RVA: -1 Offset: -1 Slot: 3
	public abstract void OnPlayableDestroy(Playable playable);

	[RequiredByNativeCodeAttribute] // RVA: 0xC50BDC Offset: 0xC50BDC VA: 0xC50BDC
	// RVA: -1 Offset: -1 Slot: 4
	public abstract void OnBehaviourPlay(Playable playable, FrameData info);

	[RequiredByNativeCodeAttribute] // RVA: 0xC50BEC Offset: 0xC50BEC VA: 0xC50BEC
	// RVA: -1 Offset: -1 Slot: 5
	public abstract void OnBehaviourPause(Playable playable, FrameData info);

	[RequiredByNativeCodeAttribute] // RVA: 0xC50BFC Offset: 0xC50BFC VA: 0xC50BFC
	// RVA: -1 Offset: -1 Slot: 6
	public abstract void PrepareFrame(Playable playable, FrameData info);

	[RequiredByNativeCodeAttribute] // RVA: 0xC50C0C Offset: 0xC50C0C VA: 0xC50C0C
	// RVA: -1 Offset: -1 Slot: 7
	public abstract void ProcessFrame(Playable playable, FrameData info, object playerData);
}

// Namespace: UnityEngine.Playables
public interface IPlayableOutput // TypeDefIndex: 2497
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract PlayableOutputHandle GetHandle();
}

// Namespace: UnityEngine.Experimental.Playables
[NativeHeaderAttribute] // RVA: 0xC475A8 Offset: 0xC475A8 VA: 0xC475A8
[RequiredByNativeCodeAttribute] // RVA: 0xC475A8 Offset: 0xC475A8 VA: 0xC475A8
[NativeHeaderAttribute] // RVA: 0xC475A8 Offset: 0xC475A8 VA: 0xC475A8
[StaticAccessorAttribute] // RVA: 0xC475A8 Offset: 0xC475A8 VA: 0xC475A8
[NativeHeaderAttribute] // RVA: 0xC475A8 Offset: 0xC475A8 VA: 0xC475A8
public struct MaterialEffectPlayable : IPlayable, IEquatable<MaterialEffectPlayable> // TypeDefIndex: 2498
{
	// Fields
	private PlayableHandle m_Handle; // 0x0

	// Methods

	// RVA: 0xDD2594 Offset: 0xDD2594 VA: 0xDD2594 Slot: 4
	public PlayableHandle GetHandle() { }

	// RVA: 0xDD25A0 Offset: 0xDD25A0 VA: 0xDD25A0 Slot: 5
	public bool Equals(MaterialEffectPlayable other) { }
}

// Namespace: UnityEngine.Playables
[RequiredByNativeCodeAttribute] // RVA: 0xC47664 Offset: 0xC47664 VA: 0xC47664
public struct Playable : IPlayable, IEquatable<Playable> // TypeDefIndex: 2499
{
	// Fields
	private PlayableHandle m_Handle; // 0x0
	private static readonly Playable m_NullPlayable; // 0x0

	// Properties
	public static Playable Null { get; }

	// Methods

	[VisibleToOtherModulesAttribute] // RVA: 0xC50C1C Offset: 0xC50C1C VA: 0xC50C1C
	// RVA: 0xDD2A04 Offset: 0xDD2A04 VA: 0xDD2A04
	internal void .ctor(PlayableHandle handle) { }

	// RVA: 0x26B7068 Offset: 0x26B7068 VA: 0x26B7068
	public static Playable get_Null() { }

	// RVA: 0xDD2A0C Offset: 0xDD2A0C VA: 0xDD2A0C Slot: 4
	public PlayableHandle GetHandle() { }

	// RVA: -1 Offset: -1
	public bool IsPlayableOfType<T>() { }

	// RVA: 0xDD2A18 Offset: 0xDD2A18 VA: 0xDD2A18
	public Type GetPlayableType() { }

	// RVA: 0xDD2A40 Offset: 0xDD2A40 VA: 0xDD2A40 Slot: 5
	public bool Equals(Playable other) { }

	// RVA: 0x26B7284 Offset: 0x26B7284 VA: 0x26B7284
	private static void .cctor() { }
}

// Namespace: UnityEngine.Playables
public interface IPlayableAsset // TypeDefIndex: 2500
{}

// Namespace: UnityEngine.Playables
[AssetFileNameExtensionAttribute] // RVA: 0xC47674 Offset: 0xC47674 VA: 0xC47674
[RequiredByNativeCodeAttribute] // RVA: 0xC47674 Offset: 0xC47674 VA: 0xC47674
[Serializable]
public abstract class PlayableAsset : ScriptableObject, IPlayableAsset // TypeDefIndex: 2501
{
	// Properties
	public virtual double duration { get; }
	public virtual IEnumerable<PlayableBinding> outputs { get; }

	// Methods

	// RVA: 0x26B7360 Offset: 0x26B7360 VA: 0x26B7360
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract Playable CreatePlayable(PlayableGraph graph, GameObject owner);

	// RVA: 0x26B7368 Offset: 0x26B7368 VA: 0x26B7368 Slot: 5
	public virtual double get_duration() { }

	// RVA: 0x26B73D0 Offset: 0x26B73D0 VA: 0x26B73D0 Slot: 6
	public virtual IEnumerable<PlayableBinding> get_outputs() { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC50C2C Offset: 0xC50C2C VA: 0xC50C2C
	// RVA: 0x26B7438 Offset: 0x26B7438 VA: 0x26B7438
	internal static void Internal_CreatePlayable(PlayableAsset asset, PlayableGraph graph, GameObject go, IntPtr ptr) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC50C3C Offset: 0xC50C3C VA: 0xC50C3C
	// RVA: 0x26B7530 Offset: 0x26B7530 VA: 0x26B7530
	internal static void Internal_GetPlayableAssetDuration(PlayableAsset asset, IntPtr ptrToDouble) { }
}

// Namespace: UnityEngine.Playables
[RequiredByNativeCodeAttribute] // RVA: 0xC47708 Offset: 0xC47708 VA: 0xC47708
[Serializable]
public abstract class PlayableBehaviour : IPlayableBehaviour, ICloneable // TypeDefIndex: 2502
{
	// Methods

	// RVA: 0x26B758C Offset: 0x26B758C VA: 0x26B758C
	public void .ctor() { }

	// RVA: 0x26B7594 Offset: 0x26B7594 VA: 0x26B7594 Slot: 13
	public virtual void OnGraphStart(Playable playable) { }

	// RVA: 0x26B7598 Offset: 0x26B7598 VA: 0x26B7598 Slot: 14
	public virtual void OnGraphStop(Playable playable) { }

	// RVA: 0x26B759C Offset: 0x26B759C VA: 0x26B759C Slot: 15
	public virtual void OnPlayableCreate(Playable playable) { }

	// RVA: 0x26B75A0 Offset: 0x26B75A0 VA: 0x26B75A0 Slot: 16
	public virtual void OnPlayableDestroy(Playable playable) { }

	// RVA: 0x26B75A4 Offset: 0x26B75A4 VA: 0x26B75A4 Slot: 17
	public virtual void OnBehaviourPlay(Playable playable, FrameData info) { }

	// RVA: 0x26B75A8 Offset: 0x26B75A8 VA: 0x26B75A8 Slot: 18
	public virtual void OnBehaviourPause(Playable playable, FrameData info) { }

	// RVA: 0x26B75AC Offset: 0x26B75AC VA: 0x26B75AC Slot: 19
	public virtual void PrepareFrame(Playable playable, FrameData info) { }

	// RVA: 0x26B75B0 Offset: 0x26B75B0 VA: 0x26B75B0 Slot: 20
	public virtual void ProcessFrame(Playable playable, FrameData info, object playerData) { }

	// RVA: 0x26B75B4 Offset: 0x26B75B4 VA: 0x26B75B4 Slot: 21
	public virtual object Clone() { }
}

// Namespace: UnityEngine.Playables
public struct PlayableBinding // TypeDefIndex: 2503
{
	// Fields
	private string m_StreamName; // 0x0
	private Object m_SourceObject; // 0x8
	private Type m_SourceBindingType; // 0x10
	private PlayableBinding.CreateOutputMethod m_CreateOutputMethod; // 0x18
	public static readonly PlayableBinding[] None; // 0x0
	public static readonly double DefaultDuration; // 0x8

	// Methods

	// RVA: 0x26B75BC Offset: 0x26B75BC VA: 0x26B75BC
	private static void .cctor() { }
}

// Namespace: 
[VisibleToOtherModulesAttribute] // RVA: 0xC47718 Offset: 0xC47718 VA: 0xC47718
internal sealed class PlayableBinding.CreateOutputMethod : MulticastDelegate // TypeDefIndex: 2504
{
	// Methods

	// RVA: 0x26B7630 Offset: 0x26B7630 VA: 0x26B7630
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x26B7640 Offset: 0x26B7640 VA: 0x26B7640 Slot: 11
	public virtual PlayableOutput Invoke(PlayableGraph graph, string name) { }

	// RVA: 0x26B78A4 Offset: 0x26B78A4 VA: 0x26B78A4 Slot: 12
	public virtual IAsyncResult BeginInvoke(PlayableGraph graph, string name, AsyncCallback callback, object object) { }

	// RVA: 0x26B793C Offset: 0x26B793C VA: 0x26B793C Slot: 13
	public virtual PlayableOutput EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine.Playables
[ExtensionAttribute] // RVA: 0xC47728 Offset: 0xC47728 VA: 0xC47728
public static class PlayableExtensions // TypeDefIndex: 2505
{
	// Methods

	[ExtensionAttribute] // RVA: 0xC50C4C Offset: 0xC50C4C VA: 0xC50C4C
	// RVA: -1 Offset: -1
	public static bool IsValid<U>(U playable) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1F93E98 Offset: 0x1F93E98 VA: 0x1F93E98
	|-PlayableExtensions.IsValid<Playable>
	*/

	[ExtensionAttribute] // RVA: 0xC50C5C Offset: 0xC50C5C VA: 0xC50C5C
	// RVA: -1 Offset: -1
	public static PlayableGraph GetGraph<U>(U playable) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B89978 Offset: 0x2B89978 VA: 0x2B89978
	|-PlayableExtensions.GetGraph<Playable>
	*/

	[ExtensionAttribute] // RVA: 0xC50C6C Offset: 0xC50C6C VA: 0xC50C6C
	[ObsoleteAttribute] // RVA: 0xC50C6C Offset: 0xC50C6C VA: 0xC50C6C
	// RVA: -1 Offset: -1
	public static void SetPlayState<U>(U playable, PlayState value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218B158 Offset: 0x218B158 VA: 0x218B158
	|-PlayableExtensions.SetPlayState<Playable>
	*/

	[ExtensionAttribute] // RVA: 0xC50CBC Offset: 0xC50CBC VA: 0xC50CBC
	// RVA: -1 Offset: -1
	public static void SetSpeed<U>(U playable, double value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218B240 Offset: 0x218B240 VA: 0x218B240
	|-PlayableExtensions.SetSpeed<Playable>
	*/

	[ExtensionAttribute] // RVA: 0xC50CCC Offset: 0xC50CCC VA: 0xC50CCC
	// RVA: -1 Offset: -1
	public static double GetSpeed<U>(U playable) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1FA7700 Offset: 0x1FA7700 VA: 0x1FA7700
	|-PlayableExtensions.GetSpeed<Playable>
	*/

	[ExtensionAttribute] // RVA: 0xC50CDC Offset: 0xC50CDC VA: 0xC50CDC
	// RVA: -1 Offset: -1
	public static void SetDuration<U>(U playable, double value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218AFD0 Offset: 0x218AFD0 VA: 0x218AFD0
	|-PlayableExtensions.SetDuration<AnimationClipPlayable>
	*/

	[ExtensionAttribute] // RVA: 0xC50CEC Offset: 0xC50CEC VA: 0xC50CEC
	// RVA: -1 Offset: -1
	public static double GetDuration<U>(U playable) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1FA76C8 Offset: 0x1FA76C8 VA: 0x1FA76C8
	|-PlayableExtensions.GetDuration<Playable>
	*/

	[ExtensionAttribute] // RVA: 0xC50CFC Offset: 0xC50CFC VA: 0xC50CFC
	// RVA: -1 Offset: -1
	public static void SetTime<U>(U playable, double value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218B288 Offset: 0x218B288 VA: 0x218B288
	|-PlayableExtensions.SetTime<Playable>
	*/

	[ExtensionAttribute] // RVA: 0xC50D0C Offset: 0xC50D0C VA: 0xC50D0C
	// RVA: -1 Offset: -1
	public static double GetTime<U>(U playable) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1FA7738 Offset: 0x1FA7738 VA: 0x1FA7738
	|-PlayableExtensions.GetTime<Playable>
	*/

	[ExtensionAttribute] // RVA: 0xC50D1C Offset: 0xC50D1C VA: 0xC50D1C
	// RVA: -1 Offset: -1
	public static void SetDone<U>(U playable, bool value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218AF88 Offset: 0x218AF88 VA: 0x218AF88
	|-PlayableExtensions.SetDone<Playable>
	*/

	[ExtensionAttribute] // RVA: 0xC50D2C Offset: 0xC50D2C VA: 0xC50D2C
	// RVA: -1 Offset: -1
	public static bool IsDone<U>(U playable) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1F93E5C Offset: 0x1F93E5C VA: 0x1F93E5C
	|-PlayableExtensions.IsDone<Playable>
	*/

	[ExtensionAttribute] // RVA: 0xC50D3C Offset: 0xC50D3C VA: 0xC50D3C
	// RVA: -1 Offset: -1
	public static void SetInputCount<U>(U playable, int value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218B018 Offset: 0x218B018 VA: 0x218B018
	|-PlayableExtensions.SetInputCount<AnimationMixerPlayable>
	|
	|-RVA: 0x218B060 Offset: 0x218B060 VA: 0x218B060
	|-PlayableExtensions.SetInputCount<Playable>
	*/

	[ExtensionAttribute] // RVA: 0xC50D4C Offset: 0xC50D4C VA: 0xC50D4C
	// RVA: -1 Offset: -1
	public static int GetInputCount<U>(U playable) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21C9700 Offset: 0x21C9700 VA: 0x21C9700
	|-PlayableExtensions.GetInputCount<AnimationMixerPlayable>
	*/

	[ExtensionAttribute] // RVA: 0xC50D5C Offset: 0xC50D5C VA: 0xC50D5C
	// RVA: -1 Offset: -1
	public static Playable GetInput<U>(U playable, int inputPort) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B89930 Offset: 0x2B89930 VA: 0x2B89930
	|-PlayableExtensions.GetInput<AnimationMixerPlayable>
	*/

	[ExtensionAttribute] // RVA: 0xC50D6C Offset: 0xC50D6C VA: 0xC50D6C
	// RVA: -1 Offset: -1
	public static void SetInputWeight<U>(U playable, int inputIndex, float weight) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218B0A8 Offset: 0x218B0A8 VA: 0x218B0A8
	|-PlayableExtensions.SetInputWeight<AnimationMixerPlayable>
	|
	|-RVA: 0x218B100 Offset: 0x218B100 VA: 0x218B100
	|-PlayableExtensions.SetInputWeight<Playable>
	*/
}

// Namespace: UnityEngine.Playables
public enum DirectorUpdateMode // TypeDefIndex: 2506
{
	// Fields
	public int value__; // 0x0
	public const DirectorUpdateMode DSPClock = 0;
	public const DirectorUpdateMode GameTime = 1;
	public const DirectorUpdateMode UnscaledGameTime = 2;
	public const DirectorUpdateMode Manual = 3;
}

// Namespace: UnityEngine.Playables
[NativeHeaderAttribute] // RVA: 0xC47738 Offset: 0xC47738 VA: 0xC47738
[NativeHeaderAttribute] // RVA: 0xC47738 Offset: 0xC47738 VA: 0xC47738
[NativeHeaderAttribute] // RVA: 0xC47738 Offset: 0xC47738 VA: 0xC47738
[UsedByNativeCodeAttribute] // RVA: 0xC47738 Offset: 0xC47738 VA: 0xC47738
[NativeHeaderAttribute] // RVA: 0xC47738 Offset: 0xC47738 VA: 0xC47738
public struct PlayableGraph // TypeDefIndex: 2507
{
