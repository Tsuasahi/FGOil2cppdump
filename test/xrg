	public BattleActionData getInvalidObject(int targetId, int funcIndex, bool isHide, string dispName, DataVals dataVals, bool isCommandSideEffect, bool isNoEffect = False) { }

	// RVA: 0x17ED624 Offset: 0x17ED624 VA: 0x17ED624
	public BattleActionData getMissObject(int targetId, int funcIndex, DataVals dataVals, bool isCommandSideEffect, string uniqueText) { }

	// RVA: 0x17E6E04 Offset: 0x17E6E04 VA: 0x17E6E04
	public BattleActionData getNoEffectObject(int targetId, int funcIndex, DataVals dataVals, bool isCommandSideEffect, string uniqueText) { }

	// RVA: 0x17E576C Offset: 0x17E576C VA: 0x17E576C
	public BattleActionData functionSubState(int targetId, FunctionEntity funcEnt, DataVals baseVals, int index, bool isCommandSideEffect, out List<BattleBuffData.BuffData> subBuffList) { }

	// RVA: 0x17ED70C Offset: 0x17ED70C VA: 0x17ED70C
	public BattleActionData functionMissState(int targetId) { }

	// RVA: 0x17E5DF8 Offset: 0x17E5DF8 VA: 0x17E5DF8
	public BattleActionData functionDamage(int playerId, int targetId, DataVals baseVals, int funcIndex, BattleActionData action, bool isSafe = False) { }

	// RVA: 0x17E5F6C Offset: 0x17E5F6C VA: 0x17E5F6C
	public BattleActionData functionNPDamage(int playerId, int targetId, DataVals baseVals, int funcIndex, BattleLogic.DamageType type, BattleActionData action) { }

	// RVA: 0x17E6740 Offset: 0x17E6740 VA: 0x17E6740
	public BattleActionData functionGainHp(int playerId, int targetId, FunctionEntity funcEnt, DataVals baseVals, int funcIndex, bool isCommandSideEffect, int overwriteHeal = -1) { }

	// RVA: 0x17E6A74 Offset: 0x17E6A74 VA: 0x17E6A74
	public BattleActionData functionGainHpPer(int playerId, int targetId, FunctionEntity funcEnt, DataVals baseVals, int funcIndex, bool isCommandSideEffect) { }

	// RVA: 0x17ED768 Offset: 0x17ED768 VA: 0x17ED768
	public void SetGainHpBuff(BattleActionData actiondata, int healPoint, int funcIndex, BattleServantData targetSvtData, FunctionEntity funcEnt, DataVals baseVals, bool isCommandSideEffect, bool isHideEffect) { }

	// RVA: 0x17E6EEC Offset: 0x17E6EEC VA: 0x17E6EEC
	public BattleActionData functionlossHp(int playerId, int targetId, FunctionEntity funcEnt, DataVals baseVals, int funcIndex, bool safe, bool isCommandSideEffect, int overwriteLossHp = -1) { }

	// RVA: 0x17E7278 Offset: 0x17E7278 VA: 0x17E7278
	public BattleActionData functionInstantDeath(int playerId, int targetId, FunctionEntity funcEnt, DataVals baseVals, int funcIndex, bool isCommandSideEffect, bool isNoAccumulation = False) { }

	// RVA: 0x17E74E8 Offset: 0x17E74E8 VA: 0x17E74E8
	public BattleActionData functionHastenNpTurn(int targetId, FunctionEntity funcEnt, DataVals baseVals, int funcIndex, bool isCommandSideEffect, int absorptionCount = -1) { }

	// RVA: 0x17E76C8 Offset: 0x17E76C8 VA: 0x17E76C8
	public BattleActionData functionDelayNpTurn(int targetId, FunctionEntity funcEnt, DataVals baseVals, int funcIndex, bool isCommandSideEffect, out int absorptionCount) { }

	// RVA: 0x17E7AC8 Offset: 0x17E7AC8 VA: 0x17E7AC8
	public BattleActionData functionResetCommandCard(int targetId, FunctionEntity funcEnt, DataVals baseVals, int funcIndex) { }

	// RVA: 0x17E7BB8 Offset: 0x17E7BB8 VA: 0x17E7BB8
	public BattleActionData functionReplaceMember(int targetId, int subTargetId, FunctionEntity funcEnt, DataVals baeVals, int funcIndex) { }

	// RVA: 0x17E8038 Offset: 0x17E8038 VA: 0x17E8038
	public BattleActionData functionReplaceEnemyMember(FunctionEntity funcEnt, DataVals baseVals, int funcIndex) { }

	// RVA: 0x17EB1F4 Offset: 0x17EB1F4 VA: 0x17EB1F4
	public BattleActionData FunctionMoveToLastSubMember(BattleServantData targetServantData, FunctionEntity funcEnt, DataVals baseVals, int funcIndex) { }

	// RVA: 0x17E8664 Offset: 0x17E8664 VA: 0x17E8664
	public BattleActionData functionTransformServant(int targetId, FunctionEntity funcEnt, DataVals baeVals, int funcIndex) { }

	// RVA: 0x17E6620 Offset: 0x17E6620 VA: 0x17E6620
	public BattleActionData.BuffData getFunctionObject(FunctionEntity funcEnt, int uniqueId, int funcIndex, bool isCommandSideEffect) { }

	// RVA: 0x17E877C Offset: 0x17E877C VA: 0x17E877C
	public BattleActionData functionReflection(int playerId, int targetId, DataVals baseVals, int funcIndex) { }

	// RVA: 0x17E8BE8 Offset: 0x17E8BE8 VA: 0x17E8BE8
	public BattleActionData functionCallServant(int playerId, FunctionEntity funcEnt, DataVals baseVals, int funcIndex, bool isCommandSideEffect) { }

	// RVA: 0x17E92C8 Offset: 0x17E92C8 VA: 0x17E92C8
	public BattleActionData functionPtShuffle(int actionId, FunctionEntity funcEnt, DataVals baeVals, int funcIndex) { }

	// RVA: 0x17E9704 Offset: 0x17E9704 VA: 0x17E9704
	public BattleActionData functionChangeServant(int actionId, FunctionEntity funcEnt, DataVals baseVals, int funcIndex) { }

	// RVA: 0x17E989C Offset: 0x17E989C VA: 0x17E989C
	public BattleActionData functionChangeBg(int actionId, FunctionEntity funcEnt, DataVals baseVals, int funcIndex) { }

	// RVA: 0x17E9974 Offset: 0x17E9974 VA: 0x17E9974
	public BattleActionData functionValueDamage(int playerId, int targetId, DataVals baseVals, int funcIndex, bool safe = False) { }

	// RVA: 0x17E9FBC Offset: 0x17E9FBC VA: 0x17E9FBC
	private BattleActionData functionResurrection(int targetId, int funcIdx, FunctionEntity funcEnt, DataVals dataVals, bool isSideEffect) { }

	// RVA: 0x17EDA44 Offset: 0x17EDA44 VA: 0x17EDA44
	private BattleActionData AbsorbNpTurn(BattleActionData mainAction, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget, NpGaugeAbsorbResult result) { }

	// RVA: 0x17EDD4C Offset: 0x17EDD4C VA: 0x17EDD4C
	private BattleActionData AbsorbNpPoint(BattleActionData mainAction, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget, NpGaugeAbsorbResult result) { }

	// RVA: 0x17E78F0 Offset: 0x17E78F0 VA: 0x17E78F0
	private BattleActionData functionAbsorbNpTurn(int targetId, FunctionEntity funcEnt, BattleActionData mainAction, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget, bool isCommandSideEffect) { }

	// RVA: 0x17EA290 Offset: 0x17EA290 VA: 0x17EA290
	private BattleActionData functionGainNpFromTargets(BattleLogicFunction.ProcListInArgs procArg, BattleActionData mainAction, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget) { }

	// RVA: 0x17EE0A0 Offset: 0x17EE0A0 VA: 0x17EE0A0
	private BattleActionData functionLossNp(BattleLogicFunction.ProcListInArgs procArg, int actorId, int targetId, DataVals baseVals, out int diffNp) { }

	// RVA: 0x17EE320 Offset: 0x17EE320 VA: 0x17EE320
	private BattleActionData functionGainNp(BattleLogicFunction.ProcListInArgs procArg, int actorId, int targetId, DataVals baseVals, int value) { }

	// RVA: 0x17EA470 Offset: 0x17EA470 VA: 0x17EA470
	private BattleActionData functionGainHpFromTargets(BattleLogicFunction.ProcListInArgs procArg, BattleActionData mainAction, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget) { }

	// RVA: 0x17EAAB4 Offset: 0x17EAAB4 VA: 0x17EAAB4
	private void UserEquipSkillTurnProgress(int progressValue) { }

	// RVA: 0x17EAB60 Offset: 0x17EAB60 VA: 0x17EAB60
	private void functionShiftServant(BattleActionData actionData, BattleServantData targetData, int npcId) { }

	// RVA: 0x17EACB0 Offset: 0x17EACB0 VA: 0x17EACB0
	private void functionBreakGaugeChange(BattleActionData mainAction, BattleLogicFunctionProcess.FunctionUnitCheck funcUnit, BattleServantData targetSvtData, BattleActionData.BaseShiftGaugeData shiftGauge) { }

	// RVA: 0x17EB468 Offset: 0x17EB468 VA: 0x17EB468
	private void functionMovePosition(BattleActionData actionData, BattleServantData targetData) { }

	// RVA: 0x17EB8FC Offset: 0x17EB8FC VA: 0x17EB8FC
	private void functionRevival(BattleActionData actionData, FunctionEntity funcEnt, DataVals baseVals, int funcIndex, bool isCommandSideEffect) { }

	// RVA: 0x17EE59C Offset: 0x17EE59C VA: 0x17EE59C
	public BattleActionData createRevivalHealData(int targetId, FunctionEntity funcEnt, DataVals baseVals, int funcIndex, bool isCommandSideEffect) { }

	// RVA: 0x17EE6B4 Offset: 0x17EE6B4 VA: 0x17EE6B4
	public int[] GetBuffTargetCardIndexArray(DataVals baseVals, BattleServantData targetServant) { }

	// RVA: 0x17EBD34 Offset: 0x17EBD34 VA: 0x17EBD34
	private void functionMoveState(BattleLogicFunction.ProcListInArgs procArg, BattleActionData mainAction, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget) { }

	// RVA: 0x17EEAEC Offset: 0x17EEAEC VA: 0x17EEAEC
	private BattleBuffData.BuffData[] GetStealBuffArray(BattleLogicFunction.ProcListInArgs procArg, BattleActionData mainAction, DataVals baseVals) { }

	// RVA: 0x17EEDAC Offset: 0x17EEDAC VA: 0x17EEDAC
	private int ConvertLogicBuffTurn(int dispTurn, bool isProgressSelfTurn) { }

	// RVA: 0x17EC1C0 Offset: 0x17EC1C0 VA: 0x17EC1C0
	private void ChangeBGMCostume(FunctionEntity funcEnt, BattleActionData actionData) { }

	// RVA: 0x17EEF20 Offset: 0x17EEF20 VA: 0x17EEF20
	private BgmEntity ChangeBgmSvt(int uniqueID, BattleActionData actionData) { }

	// RVA: 0x17EEDBC Offset: 0x17EEDBC VA: 0x17EEDBC
	private void ChangeBgmOrReset(BgmEntity bgmEnt) { }

	// RVA: 0x17EC32C Offset: 0x17EC32C VA: 0x17EC32C
	private void LossCommandSpell(DataVals baseVals, BattleActionData actionData) { }

	// RVA: 0x17EC4C4 Offset: 0x17EC4C4 VA: 0x17EC4C4
	private void FunctionUpdateEntryPositions(DataVals baseVals) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDA88 Offset: 0xCCDA88 VA: 0xCCDA88
	// RVA: 0x17EF294 Offset: 0x17EF294 VA: 0x17EF294
	private static bool <procList>m__0(BattleLogicFunctionProcess.FunctionUnitCheck x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDA98 Offset: 0xCCDA98 VA: 0xCCDA98
	// RVA: 0x17EF2CC Offset: 0x17EF2CC VA: 0x17EF2CC
	private static bool <procList>m__1(BattleLogicFunctionProcess.FunctionTargetCheck target) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDAA8 Offset: 0xCCDAA8 VA: 0xCCDAA8
	// RVA: 0x17EF2F8 Offset: 0x17EF2F8 VA: 0x17EF2F8
	private static int <procList>m__2(BattleLogicFunctionProcess.FunctionTargetCheck target) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDAB8 Offset: 0xCCDAB8 VA: 0xCCDAB8
	// RVA: 0x17EF324 Offset: 0x17EF324 VA: 0x17EF324
	private bool <getTargetids>m__3(int x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDAC8 Offset: 0xCCDAC8 VA: 0xCCDAC8
	// RVA: 0x17EF368 Offset: 0x17EF368 VA: 0x17EF368
	private static bool <functionReplaceEnemyMember>m__4(BattleServantData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDAD8 Offset: 0xCCDAD8 VA: 0xCCDAD8
	// RVA: 0x17EF398 Offset: 0x17EF398 VA: 0x17EF398
	private static void <functionPtShuffle>m__5(BattleServantData s) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDAE8 Offset: 0xCCDAE8 VA: 0xCCDAE8
	// RVA: 0x17EF3DC Offset: 0x17EF3DC VA: 0x17EF3DC
	private static int <functionPtShuffle>m__6(BattleServantData a, BattleServantData b) { }
}

// Namespace: 
public class BattleLogicFunction.ExecutedFunctionData // TypeDefIndex: 9121
{
	// Fields
	public int index; // 0x10
	public int targetId; // 0x14
	public bool isEnable; // 0x18

	// Methods

	// RVA: 0x1831F0C Offset: 0x1831F0C VA: 0x1831F0C
	public void .ctor(DataVals vals, int targetId) { }

	// RVA: 0x18321A0 Offset: 0x18321A0 VA: 0x18321A0
	public bool isMatch(DataVals vals, int targetId = -1, bool isCheckEnable = True) { }
}

// Namespace: 
public class BattleLogicFunction.FunctionArgument // TypeDefIndex: 9122
{
	// Fields
	public bool isCommandSideEffect; // 0x10
	public bool isShift; // 0x11
	public bool isPassive; // 0x12
	public BattleSkillInfoData.TYPE grantSkillType; // 0x14
	public BattleLogicFunction.CheckDuplicateFunction checkDuplicate; // 0x18

	// Methods

	// RVA: 0x1831AE4 Offset: 0x1831AE4 VA: 0x1831AE4
	public void .ctor() { }

	// RVA: 0x18322F0 Offset: 0x18322F0 VA: 0x18322F0 Slot: 4
	public virtual void Init() { }
}

// Namespace: 
public class BattleLogicFunction.AttackSideEffectFunctionArgument : BattleLogicFunction.FunctionArgument // TypeDefIndex: 9123
{
	// Fields
	public int buffUniqueId; // 0x20
	private Dictionary<int, List<BattleLogicFunction.ExecutedFunctionData>> executedBuffFuncDic; // 0x28

	// Methods

	// RVA: 0x1831A4C Offset: 0x1831A4C VA: 0x1831A4C
	public void .ctor() { }

	// RVA: 0x1831848 Offset: 0x1831848 VA: 0x1831848
	public List<BattleLogicFunction.ExecutedFunctionData> getCheckBuffFuncList() { }
}

// Namespace: 
public class BattleLogicFunction.CheckDuplicateFunction // TypeDefIndex: 9124
{
	// Methods

	// RVA: 0x1831B4C Offset: 0x1831B4C VA: 0x1831B4C
	public void .ctor() { }

	// RVA: 0x1831B54 Offset: 0x1831B54 VA: 0x1831B54 Slot: 4
	public virtual void Init() { }

	// RVA: 0x1831B58 Offset: 0x1831B58 VA: 0x1831B58 Slot: 5
	public virtual void enableExecutedFunctions() { }

	// RVA: 0x1831B5C Offset: 0x1831B5C VA: 0x1831B5C Slot: 6
	public virtual bool isNotExec(DataVals vals, int[] targetIds) { }
}

// Namespace: 
public class BattleLogicFunction.CommonCheckDuplicateFunction : BattleLogicFunction.CheckDuplicateFunction // TypeDefIndex: 9125
{
	// Fields
	protected List<BattleLogicFunction.ExecutedFunctionData> executedFuncList; // 0x10

	// Methods

	// RVA: 0x18317A0 Offset: 0x18317A0 VA: 0x18317A0
	public void .ctor() { }

	// RVA: 0x1831B64 Offset: 0x1831B64 VA: 0x1831B64 Slot: 4
	public override void Init() { }

	// RVA: 0x1831B68 Offset: 0x1831B68 VA: 0x1831B68 Slot: 5
	public override void enableExecutedFunctions() { }

	// RVA: 0x1831C2C Offset: 0x1831C2C VA: 0x1831C2C Slot: 6
	public override bool isNotExec(DataVals vals, int[] targetIds) { }

	// RVA: 0x1831CC8 Offset: 0x1831CC8 VA: 0x1831CC8 Slot: 7
	protected virtual bool isCheckCond(DataVals vals) { }

	// RVA: 0x1831CF8 Offset: 0x1831CF8 VA: 0x1831CF8 Slot: 8
	protected virtual void saveExecutedFunction(DataVals vals, int[] targetIds) { }

	// RVA: 0x18319F4 Offset: 0x18319F4 VA: 0x18319F4 Slot: 9
	protected virtual bool isNotExecLocal(DataVals vals, int[] targetIds) { }

	// RVA: 0x1831F60 Offset: 0x1831F60 VA: 0x1831F60 Slot: 10
	protected virtual bool isExecutedFunction(DataVals vals) { }

	// RVA: 0x1832044 Offset: 0x1832044 VA: 0x1832044 Slot: 11
	protected virtual bool isExecutedTarget(DataVals vals, int targetId) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC441B4 Offset: 0xC441B4 VA: 0xC441B4
private sealed class BattleLogicFunction.CommonCheckDuplicateFunction.<saveExecutedFunction>c__AnonStorey0 // TypeDefIndex: 9126
{
	// Fields
	internal DataVals vals; // 0x10

	// Methods

	// RVA: 0x1831EFC Offset: 0x1831EFC VA: 0x1831EFC
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC441C4 Offset: 0xC441C4 VA: 0xC441C4
private sealed class BattleLogicFunction.CommonCheckDuplicateFunction.<saveExecutedFunction>c__AnonStorey1 // TypeDefIndex: 9127
{
	// Fields
	internal int targetId; // 0x10
	internal BattleLogicFunction.CommonCheckDuplicateFunction.<saveExecutedFunction>c__AnonStorey0 <>f__ref$0; // 0x18

	// Methods

	// RVA: 0x1831F04 Offset: 0x1831F04 VA: 0x1831F04
	public void .ctor() { }

	// RVA: 0x1832268 Offset: 0x1832268 VA: 0x1832268
	internal bool <>m__0(BattleLogicFunction.ExecutedFunctionData n) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC441D4 Offset: 0xC441D4 VA: 0xC441D4
private sealed class BattleLogicFunction.CommonCheckDuplicateFunction.<isExecutedFunction>c__AnonStorey2 // TypeDefIndex: 9128
{
	// Fields
	internal DataVals vals; // 0x10

	// Methods

	// RVA: 0x183203C Offset: 0x183203C VA: 0x183203C
	public void .ctor() { }

	// RVA: 0x1832144 Offset: 0x1832144 VA: 0x1832144
	internal bool <>m__0(BattleLogicFunction.ExecutedFunctionData n) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC441E4 Offset: 0xC441E4 VA: 0xC441E4
private sealed class BattleLogicFunction.CommonCheckDuplicateFunction.<isExecutedTarget>c__AnonStorey3 // TypeDefIndex: 9129
{
	// Fields
	internal DataVals vals; // 0x10
	internal int targetId; // 0x18

	// Methods

	// RVA: 0x183213C Offset: 0x183213C VA: 0x183213C
	public void .ctor() { }

	// RVA: 0x1832220 Offset: 0x1832220 VA: 0x1832220
	internal bool <>m__0(BattleLogicFunction.ExecutedFunctionData n) { }
}

// Namespace: 
public class BattleLogicFunction.AttackSideEffectCheckDuplicateFunction : BattleLogicFunction.CommonCheckDuplicateFunction // TypeDefIndex: 9130
{
	// Fields
	private BattleLogicFunction.AttackSideEffectFunctionArgument argument; // 0x18

	// Methods

	// RVA: 0x1831778 Offset: 0x1831778 VA: 0x1831778
	public void .ctor(BattleLogicFunction.AttackSideEffectFunctionArgument argument) { }

	// RVA: 0x1831810 Offset: 0x1831810 VA: 0x1831810 Slot: 4
	public override void Init() { }

	// RVA: 0x183193C Offset: 0x183193C VA: 0x183193C Slot: 9
	protected override bool isNotExecLocal(DataVals vals, int[] targetIds) { }
}

// Namespace: 
public class BattleLogicFunction.ProcListInArgs // TypeDefIndex: 9131
{
	// Fields
	protected Dictionary<KeyValuePair<int, int>, bool> funcResults; // 0x10
	protected BattleLogicFunction.FunctionArgument externalArg; // 0x18
	public int actSetId; // 0x20
	public bool updateField; // 0x24
	public int tdCommandTypeChange; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC65328 Offset: 0xC65328 VA: 0xC65328
	[DebuggerBrowsableAttribute] // RVA: 0xC65328 Offset: 0xC65328 VA: 0xC65328
	private BattleLogicFunctionProcess.FunctionUnitCheck[] <funcUnitArray>k__BackingField; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC65364 Offset: 0xC65364 VA: 0xC65364
	private static Func<KeyValuePair<KeyValuePair<int, int>, bool>, bool> <>f__am$cache0; // 0x0

	// Properties
	public BattleLogicFunction.FunctionArgument ExternalArg { get; }
	public BattleLogicFunction.CheckDuplicateFunction CheckDuplicateFunc { get; }
	public bool IsCommandSideEffect { get; set; }
	public bool IsShift { get; set; }
	public bool IsPassive { get; set; }
	public int GrantSkillType { get; }
	public BattleLogicFunctionProcess.FunctionUnitCheck[] funcUnitArray { get; set; }

	// Methods

	// RVA: 0x18324D0 Offset: 0x18324D0 VA: 0x18324D0
	public void .ctor(BattleLogicFunction.FunctionArgument argument) { }

	// RVA: 0x1832598 Offset: 0x1832598 VA: 0x1832598
	public BattleLogicFunction.FunctionArgument get_ExternalArg() { }

	// RVA: 0x18325A0 Offset: 0x18325A0 VA: 0x18325A0
	public BattleLogicFunction.CheckDuplicateFunction get_CheckDuplicateFunc() { }

	// RVA: 0x18325CC Offset: 0x18325CC VA: 0x18325CC
	public bool get_IsCommandSideEffect() { }

	// RVA: 0x18325F8 Offset: 0x18325F8 VA: 0x18325F8
	public void set_IsCommandSideEffect(bool value) { }

	// RVA: 0x183262C Offset: 0x183262C VA: 0x183262C
	public bool get_IsShift() { }

	// RVA: 0x1832658 Offset: 0x1832658 VA: 0x1832658
	public void set_IsShift(bool value) { }

	// RVA: 0x183268C Offset: 0x183268C VA: 0x183268C
	public bool get_IsPassive() { }

	// RVA: 0x18326B8 Offset: 0x18326B8 VA: 0x18326B8
	public void set_IsPassive(bool value) { }

	// RVA: 0x18326EC Offset: 0x18326EC VA: 0x18326EC
	public int get_GrantSkillType() { }

	// RVA: 0x1832718 Offset: 0x1832718 VA: 0x1832718
	public bool isPrevFuncSuccess(int targetId, int index) { }

	// RVA: 0x18327F8 Offset: 0x18327F8 VA: 0x18327F8
	public bool DidTriggeredFuncHaveAnySucceesses(DataVals baseVals) { }

	// RVA: 0x1832988 Offset: 0x1832988 VA: 0x1832988
	public void setFuncResult(int targetId, bool result, int index) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDAF8 Offset: 0xCCDAF8 VA: 0xCCDAF8
	// RVA: 0x1832A34 Offset: 0x1832A34 VA: 0x1832A34
	public BattleLogicFunctionProcess.FunctionUnitCheck[] get_funcUnitArray() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDB08 Offset: 0xCCDB08 VA: 0xCCDB08
	// RVA: 0x1832A3C Offset: 0x1832A3C VA: 0x1832A3C
	private void set_funcUnitArray(BattleLogicFunctionProcess.FunctionUnitCheck[] value) { }

	// RVA: 0x1832A44 Offset: 0x1832A44 VA: 0x1832A44
	public void initFunctionUnitCheck(BattleLogicFunction logic, int[] functionIds, DataVals[] dataValsList, ref int funcIndex) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDB18 Offset: 0xCCDB18 VA: 0xCCDB18
	// RVA: 0x18330A8 Offset: 0x18330A8 VA: 0x18330A8
	private static bool <DidTriggeredFuncHaveAnySucceesses>m__0(KeyValuePair<KeyValuePair<int, int>, bool> x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC441F4 Offset: 0xC441F4 VA: 0xC441F4
private sealed class BattleLogicFunction.ProcListInArgs.<DidTriggeredFuncHaveAnySucceesses>c__AnonStorey0 // TypeDefIndex: 9132
{
	// Fields
	internal int funcIndex; // 0x10

	// Methods

	// RVA: 0x1832980 Offset: 0x1832980 VA: 0x1832980
	public void .ctor() { }

	// RVA: 0x183310C Offset: 0x183310C VA: 0x183310C
	internal bool <>m__0(KeyValuePair<KeyValuePair<int, int>, bool> x) { }
}

// Namespace: 
public abstract class BattleLogicFunction.SideEffectMakeArgument // TypeDefIndex: 9133
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC65374 Offset: 0xC65374 VA: 0xC65374
	[DebuggerBrowsableAttribute] // RVA: 0xC65374 Offset: 0xC65374 VA: 0xC65374
	private BattleActionData.SideEffectData[] <SideEffectList>k__BackingField; // 0x10

	// Properties
	public abstract BattleActionData.ACTTYPE SideEffectType { get; }
	public BattleActionData.SideEffectData[] SideEffectList { get; set; }

	// Methods

	// RVA: 0x1831760 Offset: 0x1831760 VA: 0x1831760
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract BattleActionData.ACTTYPE get_SideEffectType();

	[CompilerGeneratedAttribute] // RVA: 0xCCDB28 Offset: 0xCCDB28 VA: 0xCCDB28
	// RVA: 0x1831768 Offset: 0x1831768 VA: 0x1831768
	protected void set_SideEffectList(BattleActionData.SideEffectData[] value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDB38 Offset: 0xCCDB38 VA: 0xCCDB38
	// RVA: 0x1833194 Offset: 0x1833194 VA: 0x1833194
	public BattleActionData.SideEffectData[] get_SideEffectList() { }

	// RVA: 0x183319C Offset: 0x183319C VA: 0x183319C
	public int MakeCheckKey(int actionUniqueID) { }
}

// Namespace: 
public class BattleLogicFunction.PreAttackSideEffectMakeArgument : BattleLogicFunction.SideEffectMakeArgument // TypeDefIndex: 9134
{
	// Properties
	public override BattleActionData.ACTTYPE SideEffectType { get; }

	// Methods

	// RVA: 0x1832324 Offset: 0x1832324 VA: 0x1832324
	public void .ctor(int[] targetIds) { }

	// RVA: 0x1832450 Offset: 0x1832450 VA: 0x1832450 Slot: 4
	public override BattleActionData.ACTTYPE get_SideEffectType() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44204 Offset: 0xC44204 VA: 0xC44204
private sealed class BattleLogicFunction.PreAttackSideEffectMakeArgument.<PreAttackSideEffectMakeArgument>c__AnonStorey0 // TypeDefIndex: 9135
{
	// Fields
	internal BuffList.ACTION[] beforeActs; // 0x10

	// Methods

	// RVA: 0x1832448 Offset: 0x1832448 VA: 0x1832448
	public void .ctor() { }

	// RVA: 0x1832458 Offset: 0x1832458 VA: 0x1832458
	internal BattleActionData.SideEffectData <>m__0(int id) { }
}

// Namespace: 
public class BattleLogicFunction.AfterAttackSideEffectMakeArgument : BattleLogicFunction.SideEffectMakeArgument // TypeDefIndex: 9136
{
	// Properties
	public override BattleActionData.ACTTYPE SideEffectType { get; }

	// Methods

	// RVA: 0x183171C Offset: 0x183171C VA: 0x183171C
	public void .ctor(BattleActionData mainAction) { }

	// RVA: 0x1831770 Offset: 0x1831770 VA: 0x1831770 Slot: 4
	public override BattleActionData.ACTTYPE get_SideEffectType() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44214 Offset: 0xC44214 VA: 0xC44214
private sealed class BattleLogicFunction.<functionSubState>c__AnonStorey0 // TypeDefIndex: 9137
{
	// Fields
	internal BattleServantData targetSvtData; // 0x10

	// Methods

	// RVA: 0x18316C4 Offset: 0x18316C4 VA: 0x18316C4
	public void .ctor() { }

	// RVA: 0x18316CC Offset: 0x18316CC VA: 0x18316CC
	internal BattleBuffData.BuffData <>m__0(BattleBuffData.BuffData buff) { }
}

// Namespace: 
public class NpGaugeAbsorbResult // TypeDefIndex: 9138
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC653B0 Offset: 0xC653B0 VA: 0xC653B0
	[DebuggerBrowsableAttribute] // RVA: 0xC653B0 Offset: 0xC653B0 VA: 0xC653B0
	private float <Point>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC653EC Offset: 0xC653EC VA: 0xC653EC
	[DebuggerBrowsableAttribute] // RVA: 0xC653EC Offset: 0xC653EC VA: 0xC653EC
	private float <Turn>k__BackingField; // 0x14
	[CompilerGeneratedAttribute] // RVA: 0xC65428 Offset: 0xC65428 VA: 0xC65428
	[DebuggerBrowsableAttribute] // RVA: 0xC65428 Offset: 0xC65428 VA: 0xC65428
	private BaseNpGaugeConvert <Convert>k__BackingField; // 0x18

	// Properties
	public float Point { get; set; }
	public float Turn { get; set; }
	public BaseNpGaugeConvert Convert { get; set; }

	// Methods

	// RVA: 0x1394564 Offset: 0x1394564 VA: 0x1394564
	public void .ctor(BaseNpGaugeConvert convert) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDB48 Offset: 0xCCDB48 VA: 0xCCDB48
	// RVA: 0x1394598 Offset: 0x1394598 VA: 0x1394598
	private void set_Point(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDB58 Offset: 0xCCDB58 VA: 0xCCDB58
	// RVA: 0x13945A0 Offset: 0x13945A0 VA: 0x13945A0
	public float get_Point() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDB68 Offset: 0xCCDB68 VA: 0xCCDB68
	// RVA: 0x13945A8 Offset: 0x13945A8 VA: 0x13945A8
	private void set_Turn(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDB78 Offset: 0xCCDB78 VA: 0xCCDB78
	// RVA: 0x13945B0 Offset: 0x13945B0 VA: 0x13945B0
	public float get_Turn() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDB88 Offset: 0xCCDB88 VA: 0xCCDB88
	// RVA: 0x1394590 Offset: 0x1394590 VA: 0x1394590
	private void set_Convert(BaseNpGaugeConvert value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDB98 Offset: 0xCCDB98 VA: 0xCCDB98
	// RVA: 0x13945B8 Offset: 0x13945B8 VA: 0x13945B8
	public BaseNpGaugeConvert get_Convert() { }

	// RVA: 0x13945C0 Offset: 0x13945C0 VA: 0x13945C0
	public void AddTurn(int turn) { }

	// RVA: 0x139462C Offset: 0x139462C VA: 0x139462C
	public void AddPoint(int point) { }
}

// Namespace: 
public class BaseNpGaugeConvert // TypeDefIndex: 9139
{
	// Fields
	protected float convertCoefficient; // 0x10

	// Properties
	protected virtual float Denominator { get; }

	// Methods

	// RVA: 0xF680BC Offset: 0xF680BC VA: 0xF680BC
	public void .ctor() { }

	// RVA: 0xF680C4 Offset: 0xF680C4 VA: 0xF680C4 Slot: 4
	protected virtual float get_Denominator() { }

	// RVA: 0xF680CC Offset: 0xF680CC VA: 0xF680CC Slot: 5
	public virtual void Init(DataVals baseVals) { }

	// RVA: 0xF68128 Offset: 0xF68128 VA: 0xF68128 Slot: 6
	public virtual float TurnToPoint(int turn) { }

	// RVA: 0xF68130 Offset: 0xF68130 VA: 0xF68130 Slot: 7
	public virtual float PointToTurn(int point) { }
}

// Namespace: 
public class NpPointToTurnConvert : BaseNpGaugeConvert // TypeDefIndex: 9140
{
	// Properties
	protected override float Denominator { get; }

	// Methods

	// RVA: 0x1394EC8 Offset: 0x1394EC8 VA: 0x1394EC8
	public void .ctor() { }

	// RVA: 0x1394ED0 Offset: 0x1394ED0 VA: 0x1394ED0 Slot: 4
	protected override float get_Denominator() { }

	// RVA: 0x1394F38 Offset: 0x1394F38 VA: 0x1394F38 Slot: 7
	public override float PointToTurn(int point) { }
}

// Namespace: 
public class NpTurnToPointConvert : BaseNpGaugeConvert // TypeDefIndex: 9141
{
	// Methods

	// RVA: 0x1394F50 Offset: 0x1394F50 VA: 0x1394F50
	public void .ctor() { }

	// RVA: 0x1394F58 Offset: 0x1394F58 VA: 0x1394F58 Slot: 6
	public override float TurnToPoint(int turn) { }
}

// Namespace: 
public class RestockServantLogic // TypeDefIndex: 9142
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC65464 Offset: 0xC65464 VA: 0xC65464
	[DebuggerBrowsableAttribute] // RVA: 0xC65464 Offset: 0xC65464 VA: 0xC65464
	private int <SubMemberIndex>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC654A0 Offset: 0xC654A0 VA: 0xC654A0
	[DebuggerBrowsableAttribute] // RVA: 0xC654A0 Offset: 0xC654A0 VA: 0xC654A0
	private int <FieldMemberIndex>k__BackingField; // 0x14
	[CompilerGeneratedAttribute] // RVA: 0xC654DC Offset: 0xC654DC VA: 0xC654DC
	[DebuggerBrowsableAttribute] // RVA: 0xC654DC Offset: 0xC654DC VA: 0xC654DC
	private bool <IsEnemy>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC65518 Offset: 0xC65518 VA: 0xC65518
	[DebuggerBrowsableAttribute] // RVA: 0xC65518 Offset: 0xC65518 VA: 0xC65518
	private bool <IsActive>k__BackingField; // 0x19
	[CompilerGeneratedAttribute] // RVA: 0xC65554 Offset: 0xC65554 VA: 0xC65554
	private static Action<RestockServantLogic> <>f__am$cache0; // 0x0

	// Properties
	public int SubMemberIndex { get; set; }
	public int FieldMemberIndex { get; set; }
	public bool IsEnemy { get; set; }
	public bool IsActive { get; set; }

	// Methods

	// RVA: 0x158C1C8 Offset: 0x158C1C8 VA: 0x158C1C8
	public void .ctor(int fieldMemberIndex, bool isEnemy) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDBA8 Offset: 0xCCDBA8 VA: 0xCCDBA8
	// RVA: 0x158C238 Offset: 0x158C238 VA: 0x158C238
	public int get_SubMemberIndex() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDBB8 Offset: 0xCCDBB8 VA: 0xCCDBB8
	// RVA: 0x158C224 Offset: 0x158C224 VA: 0x158C224
	protected void set_SubMemberIndex(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDBC8 Offset: 0xCCDBC8 VA: 0xCCDBC8
	// RVA: 0x158C240 Offset: 0x158C240 VA: 0x158C240
	public int get_FieldMemberIndex() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDBD8 Offset: 0xCCDBD8 VA: 0xCCDBD8
	// RVA: 0x158C210 Offset: 0x158C210 VA: 0x158C210
	protected void set_FieldMemberIndex(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDBE8 Offset: 0xCCDBE8 VA: 0xCCDBE8
	// RVA: 0x158C248 Offset: 0x158C248 VA: 0x158C248
	public bool get_IsEnemy() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDBF8 Offset: 0xCCDBF8 VA: 0xCCDBF8
	// RVA: 0x158C218 Offset: 0x158C218 VA: 0x158C218
	protected void set_IsEnemy(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDC08 Offset: 0xCCDC08 VA: 0xCCDC08
	// RVA: 0x158C250 Offset: 0x158C250 VA: 0x158C250
	public bool get_IsActive() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDC18 Offset: 0xCCDC18 VA: 0xCCDC18
	// RVA: 0x158C22C Offset: 0x158C22C VA: 0x158C22C
	private void set_IsActive(bool value) { }

	// RVA: 0x158C258 Offset: 0x158C258 VA: 0x158C258
	public void SetActive(bool value) { }

	// RVA: 0x158C264 Offset: 0x158C264 VA: 0x158C264 Slot: 4
	public virtual BattleServantData ChoiceRestockServant(BattleData battleData) { }

	// RVA: 0x158C2C0 Offset: 0x158C2C0 VA: 0x158C2C0
	protected BattleServantData ChoiceRestockServant(BattleServantData[] subMemberArray) { }

	// RVA: 0x158C3A4 Offset: 0x158C3A4 VA: 0x158C3A4
	public static BattleServantData GetImmediateRestockServant(int fieldMemberIndex, bool isEnemy, BattleData battleData) { }

	// RVA: 0x158C528 Offset: 0x158C528 VA: 0x158C528
	public static void DeactiveRestockLogic(int fieldMemberIndex, bool isEnemy, BattleData battleData) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDC28 Offset: 0xCCDC28 VA: 0xCCDC28
	// RVA: 0x158C6AC Offset: 0x158C6AC VA: 0x158C6AC
	private static void <DeactiveRestockLogic>m__0(RestockServantLogic x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44224 Offset: 0xC44224 VA: 0xC44224
private sealed class RestockServantLogic.<GetImmediateRestockServant>c__AnonStorey0 // TypeDefIndex: 9143
{
	// Fields
	internal int fieldMemberIndex; // 0x10
	internal bool isEnemy; // 0x14

	// Methods

	// RVA: 0x158C520 Offset: 0x158C520 VA: 0x158C520
	public void .ctor() { }

	// RVA: 0x158C738 Offset: 0x158C738 VA: 0x158C738
	internal bool <>m__0(RestockServantLogic x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44234 Offset: 0xC44234 VA: 0xC44234
private sealed class RestockServantLogic.<DeactiveRestockLogic>c__AnonStorey1 // TypeDefIndex: 9144
{
	// Fields
	internal int fieldMemberIndex; // 0x10
	internal bool isEnemy; // 0x14

	// Methods

	// RVA: 0x158C6A4 Offset: 0x158C6A4 VA: 0x158C6A4
	public void .ctor() { }

	// RVA: 0x158C6D4 Offset: 0x158C6D4 VA: 0x158C6D4
	internal bool <>m__0(RestockServantLogic x) { }
}

// Namespace: 
public class RestockServantLogicByMoveToSubMember : RestockServantLogic // TypeDefIndex: 9145
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC65564 Offset: 0xC65564 VA: 0xC65564
	[DebuggerBrowsableAttribute] // RVA: 0xC65564 Offset: 0xC65564 VA: 0xC65564
	private int <ServantUniqueId>k__BackingField; // 0x1C
	[CompilerGeneratedAttribute] // RVA: 0xC655A0 Offset: 0xC655A0 VA: 0xC655A0
	private static Func<RestockServantLogicByMoveToSubMember, int> <>f__am$cache0; // 0x0

	// Properties
	public int ServantUniqueId { get; set; }

	// Methods

	// RVA: 0x158C79C Offset: 0x158C79C VA: 0x158C79C
	public void .ctor(int fieldMemberIndex, bool isEnemy, int subMemberIndex, int servantUniqueId) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDC38 Offset: 0xCCDC38 VA: 0xCCDC38
	// RVA: 0x158C800 Offset: 0x158C800 VA: 0x158C800
	public int get_ServantUniqueId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDC48 Offset: 0xCCDC48 VA: 0xCCDC48
	// RVA: 0x158C7F8 Offset: 0x158C7F8 VA: 0x158C7F8
	private void set_ServantUniqueId(int value) { }

	// RVA: 0x158C808 Offset: 0x158C808 VA: 0x158C808 Slot: 4
	public override BattleServantData ChoiceRestockServant(BattleData battleData) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDC58 Offset: 0xCCDC58 VA: 0xCCDC58
	// RVA: 0x158CAFC Offset: 0x158CAFC VA: 0x158CAFC
	private static int <ChoiceRestockServant>m__0(RestockServantLogicByMoveToSubMember x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44244 Offset: 0xC44244 VA: 0xC44244
private sealed class RestockServantLogicByMoveToSubMember.<ChoiceRestockServant>c__AnonStorey0 // TypeDefIndex: 9146
{
	// Fields
	internal int[] moveToSubMemberUniqueIdArray; // 0x10
	internal RestockServantLogicByMoveToSubMember $this; // 0x18

	// Methods

	// RVA: 0x158CAF4 Offset: 0x158CAF4 VA: 0x158CAF4
	public void .ctor() { }

	// RVA: 0x158CB24 Offset: 0x158CB24 VA: 0x158CB24
	internal bool <>m__0(RestockServantLogicByMoveToSubMember x) { }

	// RVA: 0x158CB80 Offset: 0x158CB80 VA: 0x158CB80
	internal bool <>m__1(BattleServantData x) { }
}

// Namespace: 
public class BattleLogicFunctionProcess // TypeDefIndex: 9147
{
	// Methods

	// RVA: 0x18331D0 Offset: 0x18331D0 VA: 0x18331D0
	public void .ctor() { }
}

// Namespace: 
public enum BattleLogicFunctionProcess.FuncInvalidType // TypeDefIndex: 9148
{
	// Fields
	public int value__; // 0x0
	public const BattleLogicFunctionProcess.FuncInvalidType None = 0;
	public const BattleLogicFunctionProcess.FuncInvalidType NoEffect = 1;
	public const BattleLogicFunctionProcess.FuncInvalidType Miss = 2;
}

// Namespace: 
public class BattleLogicFunctionProcess.FunctionUnitCheck // TypeDefIndex: 9149
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC655B0 Offset: 0xC655B0 VA: 0xC655B0
	[DebuggerBrowsableAttribute] // RVA: 0xC655B0 Offset: 0xC655B0 VA: 0xC655B0
	private BattleLogicFunction <logic>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC655EC Offset: 0xC655EC VA: 0xC655EC
	[DebuggerBrowsableAttribute] // RVA: 0xC655EC Offset: 0xC655EC VA: 0xC655EC
	private BattleLogicFunction.ProcListInArgs <procArg>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC65628 Offset: 0xC65628 VA: 0xC65628
	[DebuggerBrowsableAttribute] // RVA: 0xC65628 Offset: 0xC65628 VA: 0xC65628
	private DataVals <dataVals>k__BackingField; // 0x20
	private bool isChecked; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC65664 Offset: 0xC65664 VA: 0xC65664
	[DebuggerBrowsableAttribute] // RVA: 0xC65664 Offset: 0xC65664 VA: 0xC65664
	private bool <result>k__BackingField; // 0x29
	public List<BattleLogicFunctionProcess.FunctionUnitCheck> linkedToOtherList; // 0x30
	private List<BattleLogicFunctionProcess.FunctionUnitCheck> linkedToSelfList; // 0x38
	public bool questFuncFlg; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC656A0 Offset: 0xC656A0 VA: 0xC656A0
	[DebuggerBrowsableAttribute] // RVA: 0xC656A0 Offset: 0xC656A0 VA: 0xC656A0
	private BattleLogicFunctionProcess.FunctionTargetCheck[] <funcTargetArray>k__BackingField; // 0x48
	public bool isLowestStarFunction; // 0x50

	// Properties
	public BattleLogicFunction logic { get; set; }
	public BattleData Data { get; }
	public BattleLogicFunction.ProcListInArgs procArg { get; set; }
	public DataVals dataVals { get; set; }
	public int FuncIndex { get; }
	public FuncList.TYPE FuncType { get; }
	public bool IsAddIndividualty { get; }
	public bool IsAddLinkageTargetIndividualty { get; }
	public int[] AddIndividualty { get; }
	public int[] LinkageTargetIndividualty { get; }
	public BattleLogicFunctionProcess.BaseFunctionTypeProcess FuncTypeProc { get; }
	public bool result { get; set; }
	public BattleLogicFunctionProcess.FunctionTargetCheck[] funcTargetArray { get; set; }

	// Methods

	// RVA: 0x1832D40 Offset: 0x1832D40 VA: 0x1832D40
	public void .ctor(BattleLogicFunction logic, BattleLogicFunction.ProcListInArgs procArg) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDC68 Offset: 0xCCDC68 VA: 0xCCDC68
	// RVA: 0x1834918 Offset: 0x1834918 VA: 0x1834918
	public BattleLogicFunction get_logic() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDC78 Offset: 0xCCDC78 VA: 0xCCDC78
	// RVA: 0x1835584 Offset: 0x1835584 VA: 0x1835584
	private void set_logic(BattleLogicFunction value) { }

	// RVA: 0x18338D4 Offset: 0x18338D4 VA: 0x18338D4
	public BattleData get_Data() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDC88 Offset: 0xCCDC88 VA: 0xCCDC88
	// RVA: 0x18343E8 Offset: 0x18343E8 VA: 0x18343E8
	public BattleLogicFunction.ProcListInArgs get_procArg() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDC98 Offset: 0xCCDC98 VA: 0xCCDC98
	// RVA: 0x183558C Offset: 0x183558C VA: 0x183558C
	private void set_procArg(BattleLogicFunction.ProcListInArgs value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDCA8 Offset: 0xCCDCA8 VA: 0xCCDCA8
	// RVA: 0x18330A0 Offset: 0x18330A0 VA: 0x18330A0
	public DataVals get_dataVals() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDCB8 Offset: 0xCCDCB8 VA: 0xCCDCB8
	// RVA: 0x18355A8 Offset: 0x18355A8 VA: 0x18355A8
	private void set_dataVals(DataVals value) { }

	// RVA: 0x1835270 Offset: 0x1835270 VA: 0x1835270
	public int get_FuncIndex() { }

	// RVA: 0x18355B0 Offset: 0x18355B0 VA: 0x18355B0
	public FuncList.TYPE get_FuncType() { }

	// RVA: 0x1832EC8 Offset: 0x1832EC8 VA: 0x1832EC8
	public bool get_IsAddIndividualty() { }

	// RVA: 0x1832EF8 Offset: 0x1832EF8 VA: 0x1832EF8
	public bool get_IsAddLinkageTargetIndividualty() { }

	// RVA: 0x18355DC Offset: 0x18355DC VA: 0x18355DC
	public int[] get_AddIndividualty() { }

	// RVA: 0x183560C Offset: 0x183560C VA: 0x183560C
	public int[] get_LinkageTargetIndividualty() { }

	// RVA: 0x183563C Offset: 0x183563C VA: 0x183563C
	public BattleLogicFunctionProcess.BaseFunctionTypeProcess get_FuncTypeProc() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDCC8 Offset: 0xCCDCC8 VA: 0xCCDCC8
	// RVA: 0x1835684 Offset: 0x1835684 VA: 0x1835684
	public bool get_result() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDCD8 Offset: 0xCCDCD8 VA: 0xCCDCD8
	// RVA: 0x1835594 Offset: 0x1835594 VA: 0x1835594
	private void set_result(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDCE8 Offset: 0xCCDCE8 VA: 0xCCDCE8
	// RVA: 0x183568C Offset: 0x183568C VA: 0x183568C
	public BattleLogicFunctionProcess.FunctionTargetCheck[] get_funcTargetArray() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDCF8 Offset: 0xCCDCF8 VA: 0xCCDCF8
	// RVA: 0x18355A0 Offset: 0x18355A0 VA: 0x18355A0
	private void set_funcTargetArray(BattleLogicFunctionProcess.FunctionTargetCheck[] value) { }

	// RVA: 0x1832E04 Offset: 0x1832E04 VA: 0x1832E04
	public void setDataVals(ref int funcIndex, int functionId, DataVals dataVals) { }

	// RVA: 0x1832F28 Offset: 0x1832F28 VA: 0x1832F28
	public void setLinkFunction(BattleLogicFunctionProcess.FunctionUnitCheck[] funcUnitArray) { }

	// RVA: 0x1835694 Offset: 0x1835694 VA: 0x1835694
	private BattleLogicFunctionProcess.FunctionTargetCheck[] makeTargetArray(int[] targetlist) { }

	// RVA: 0x18357E8 Offset: 0x18357E8 VA: 0x18357E8
	private BattleLogicFunctionProcess.FunctionTargetCheck MakeFunctionTargetCheckEachType(FuncList.TYPE functType, int targetId) { }

	// RVA: 0x1835404 Offset: 0x1835404 VA: 0x1835404
	public BattleActionData getInvalidObject(BattleLogicFunctionProcess.FunctionTargetCheck funcTarget) { }

	// RVA: 0x18352EC Offset: 0x18352EC VA: 0x18352EC
	public bool checkFuncTargetResult(int targetId, bool result = True) { }

	// RVA: 0x1835888 Offset: 0x1835888 VA: 0x1835888
	public bool checkCondtion(BattleActionData action) { }

	// RVA: 0x1835EC4 Offset: 0x1835EC4 VA: 0x1835EC4
	private void reflectLinkedToOtherResult() { }

	// RVA: 0x1835904 Offset: 0x1835904 VA: 0x1835904
	private bool checkSelfCondtion(BattleActionData action) { }

	// RVA: 0x1835D68 Offset: 0x1835D68 VA: 0x1835D68
	private bool checkLinkedToSelfCondition(BattleActionData action) { }

	// RVA: 0x1835FEC Offset: 0x1835FEC VA: 0x1835FEC
	public void reflectLinkedToSelfResult(BattleLogicFunctionProcess.FunctionUnitCheck linkedToSelf) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44254 Offset: 0xC44254 VA: 0xC44254
private sealed class BattleLogicFunctionProcess.FunctionUnitCheck.<checkFuncTargetResult>c__AnonStorey0 // TypeDefIndex: 9150
