{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD321B8 Offset: 0xD321B8 VA: 0xD321B8
	[UIHintAttribute] // RVA: 0xD321B8 Offset: 0xD321B8 VA: 0xD321B8
	[TooltipAttribute] // RVA: 0xD321B8 Offset: 0xD321B8 VA: 0xD321B8
	public FsmVector2 vector2Variable; // 0x50
	[TooltipAttribute] // RVA: 0xD32218 Offset: 0xD32218 VA: 0xD32218
	public bool everyFrame; // 0x58

	// Methods

	// RVA: 0x247E520 Offset: 0x247E520 VA: 0x247E520
	public void .ctor() { }

	// RVA: 0x247E528 Offset: 0x247E528 VA: 0x247E528 Slot: 28
	public override void Reset() { }

	// RVA: 0x247E534 Offset: 0x247E534 VA: 0x247E534 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x247E5CC Offset: 0x247E5CC VA: 0x247E5CC Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABA84 Offset: 0xCABA84 VA: 0xCABA84
[TooltipAttribute] // RVA: 0xCABA84 Offset: 0xCABA84 VA: 0xCABA84
public class Vector2Operator : FsmStateAction // TypeDefIndex: 13103
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD32250 Offset: 0xD32250 VA: 0xD32250
	[TooltipAttribute] // RVA: 0xD32250 Offset: 0xD32250 VA: 0xD32250
	public FsmVector2 vector1; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD3229C Offset: 0xD3229C VA: 0xD3229C
	[TooltipAttribute] // RVA: 0xD3229C Offset: 0xD3229C VA: 0xD3229C
	public FsmVector2 vector2; // 0x58
	[TooltipAttribute] // RVA: 0xD322E8 Offset: 0xD322E8 VA: 0xD322E8
	public Vector2Operator.Vector2Operation operation; // 0x60
	[UIHintAttribute] // RVA: 0xD32320 Offset: 0xD32320 VA: 0xD32320
	[TooltipAttribute] // RVA: 0xD32320 Offset: 0xD32320 VA: 0xD32320
	public FsmVector2 storeVector2Result; // 0x68
	[UIHintAttribute] // RVA: 0xD32370 Offset: 0xD32370 VA: 0xD32370
	[TooltipAttribute] // RVA: 0xD32370 Offset: 0xD32370 VA: 0xD32370
	public FsmFloat storeFloatResult; // 0x70
	[TooltipAttribute] // RVA: 0xD323C0 Offset: 0xD323C0 VA: 0xD323C0
	public bool everyFrame; // 0x78

	// Methods

	// RVA: 0x247E644 Offset: 0x247E644 VA: 0x247E644
	public void .ctor() { }

	// RVA: 0x247E654 Offset: 0x247E654 VA: 0x247E654 Slot: 28
	public override void Reset() { }

	// RVA: 0x247E66C Offset: 0x247E66C VA: 0x247E66C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x247EA0C Offset: 0x247EA0C VA: 0x247EA0C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x247E6A8 Offset: 0x247E6A8 VA: 0x247E6A8
	private void DoVector2Operator() { }
}

// Namespace: 
public enum Vector2Operator.Vector2Operation // TypeDefIndex: 13104
{
	// Fields
	public int value__; // 0x0
	public const Vector2Operator.Vector2Operation DotProduct = 0;
	public const Vector2Operator.Vector2Operation Distance = 1;
	public const Vector2Operator.Vector2Operation Angle = 2;
	public const Vector2Operator.Vector2Operation Add = 3;
	public const Vector2Operator.Vector2Operation Subtract = 4;
	public const Vector2Operator.Vector2Operation Multiply = 5;
	public const Vector2Operator.Vector2Operation Divide = 6;
	public const Vector2Operator.Vector2Operation Min = 7;
	public const Vector2Operator.Vector2Operation Max = 8;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABAD4 Offset: 0xCABAD4 VA: 0xCABAD4
[TooltipAttribute] // RVA: 0xCABAD4 Offset: 0xCABAD4 VA: 0xCABAD4
public class Vector2PerSecond : FsmStateAction // TypeDefIndex: 13105
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD323F8 Offset: 0xD323F8 VA: 0xD323F8
	[UIHintAttribute] // RVA: 0xD323F8 Offset: 0xD323F8 VA: 0xD323F8
	[TooltipAttribute] // RVA: 0xD323F8 Offset: 0xD323F8 VA: 0xD323F8
	public FsmVector2 vector2Variable; // 0x50
	[TooltipAttribute] // RVA: 0xD32458 Offset: 0xD32458 VA: 0xD32458
	public bool everyFrame; // 0x58

	// Methods

	// RVA: 0x247EA10 Offset: 0x247EA10 VA: 0x247EA10
	public void .ctor() { }

	// RVA: 0x247EA18 Offset: 0x247EA18 VA: 0x247EA18 Slot: 28
	public override void Reset() { }

	// RVA: 0x247EA28 Offset: 0x247EA28 VA: 0x247EA28 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x247EB28 Offset: 0x247EB28 VA: 0x247EB28 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABB24 Offset: 0xCABB24 VA: 0xCABB24
[TooltipAttribute] // RVA: 0xCABB24 Offset: 0xCABB24 VA: 0xCABB24
public class Vector2RotateTowards : FsmStateAction // TypeDefIndex: 13106
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD32490 Offset: 0xD32490 VA: 0xD32490
	[TooltipAttribute] // RVA: 0xD32490 Offset: 0xD32490 VA: 0xD32490
	public FsmVector2 currentDirection; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD324DC Offset: 0xD324DC VA: 0xD324DC
	[TooltipAttribute] // RVA: 0xD324DC Offset: 0xD324DC VA: 0xD324DC
	public FsmVector2 targetDirection; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD32528 Offset: 0xD32528 VA: 0xD32528
	[TooltipAttribute] // RVA: 0xD32528 Offset: 0xD32528 VA: 0xD32528
	public FsmFloat rotateSpeed; // 0x60
	private Vector3 current; // 0x68
	private Vector3 target; // 0x74

	// Methods

	// RVA: 0x247EC00 Offset: 0x247EC00 VA: 0x247EC00
	public void .ctor() { }

	// RVA: 0x247EC08 Offset: 0x247EC08 VA: 0x247EC08 Slot: 28
	public override void Reset() { }

	// RVA: 0x247ECD4 Offset: 0x247ECD4 VA: 0x247ECD4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x247EDD0 Offset: 0x247EDD0 VA: 0x247EDD0 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABB74 Offset: 0xCABB74 VA: 0xCABB74
[TooltipAttribute] // RVA: 0xCABB74 Offset: 0xCABB74 VA: 0xCABB74
public class Vector2Subtract : FsmStateAction // TypeDefIndex: 13107
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD32574 Offset: 0xD32574 VA: 0xD32574
	[UIHintAttribute] // RVA: 0xD32574 Offset: 0xD32574 VA: 0xD32574
	[TooltipAttribute] // RVA: 0xD32574 Offset: 0xD32574 VA: 0xD32574
	public FsmVector2 vector2Variable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD325D4 Offset: 0xD325D4 VA: 0xD325D4
	[TooltipAttribute] // RVA: 0xD325D4 Offset: 0xD325D4 VA: 0xD325D4
	public FsmVector2 subtractVector; // 0x58
	[TooltipAttribute] // RVA: 0xD32620 Offset: 0xD32620 VA: 0xD32620
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x247EF44 Offset: 0x247EF44 VA: 0x247EF44
	public void .ctor() { }

	// RVA: 0x247EF4C Offset: 0x247EF4C VA: 0x247EF4C Slot: 28
	public override void Reset() { }

	// RVA: 0x247EFD0 Offset: 0x247EFD0 VA: 0x247EFD0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x247F0F8 Offset: 0x247F0F8 VA: 0x247F0F8 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABBC4 Offset: 0xCABBC4 VA: 0xCABBC4
[TooltipAttribute] // RVA: 0xCABBC4 Offset: 0xCABBC4 VA: 0xCABBC4
public class Vector3Add : FsmStateAction // TypeDefIndex: 13108
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD32658 Offset: 0xD32658 VA: 0xD32658
	[UIHintAttribute] // RVA: 0xD32658 Offset: 0xD32658 VA: 0xD32658
	public FsmVector3 vector3Variable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD32694 Offset: 0xD32694 VA: 0xD32694
	public FsmVector3 addVector; // 0x58
	public bool everyFrame; // 0x60
	public bool perSecond; // 0x61

	// Methods

	// RVA: 0x247F1EC Offset: 0x247F1EC VA: 0x247F1EC
	public void .ctor() { }

	// RVA: 0x247F1F4 Offset: 0x247F1F4 VA: 0x247F1F4 Slot: 28
	public override void Reset() { }

	// RVA: 0x247F278 Offset: 0x247F278 VA: 0x247F278 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x247F440 Offset: 0x247F440 VA: 0x247F440 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x247F2B4 Offset: 0x247F2B4 VA: 0x247F2B4
	private void DoVector3Add() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABC14 Offset: 0xCABC14 VA: 0xCABC14
[TooltipAttribute] // RVA: 0xCABC14 Offset: 0xCABC14 VA: 0xCABC14
public class Vector3AddXYZ : FsmStateAction // TypeDefIndex: 13109
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD326A4 Offset: 0xD326A4 VA: 0xD326A4
	[UIHintAttribute] // RVA: 0xD326A4 Offset: 0xD326A4 VA: 0xD326A4
	public FsmVector3 vector3Variable; // 0x50
	public FsmFloat addX; // 0x58
	public FsmFloat addY; // 0x60
	public FsmFloat addZ; // 0x68
	public bool everyFrame; // 0x70
	public bool perSecond; // 0x71

	// Methods

	// RVA: 0x247F444 Offset: 0x247F444 VA: 0x247F444
	public void .ctor() { }

	// RVA: 0x247F44C Offset: 0x247F44C VA: 0x247F44C Slot: 28
	public override void Reset() { }

	// RVA: 0x247F4A0 Offset: 0x247F4A0 VA: 0x247F4A0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x247F6C8 Offset: 0x247F6C8 VA: 0x247F6C8 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x247F4DC Offset: 0x247F4DC VA: 0x247F4DC
	private void DoVector3AddXYZ() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABC64 Offset: 0xCABC64 VA: 0xCABC64
[TooltipAttribute] // RVA: 0xCABC64 Offset: 0xCABC64 VA: 0xCABC64
public class Vector3ClampMagnitude : FsmStateAction // TypeDefIndex: 13110
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD326E0 Offset: 0xD326E0 VA: 0xD326E0
	[UIHintAttribute] // RVA: 0xD326E0 Offset: 0xD326E0 VA: 0xD326E0
	public FsmVector3 vector3Variable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD3271C Offset: 0xD3271C VA: 0xD3271C
	public FsmFloat maxLength; // 0x58
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x247F6CC Offset: 0x247F6CC VA: 0x247F6CC
	public void .ctor() { }

	// RVA: 0x247F6D4 Offset: 0x247F6D4 VA: 0x247F6D4 Slot: 28
	public override void Reset() { }

	// RVA: 0x247F6E0 Offset: 0x247F6E0 VA: 0x247F6E0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x247F818 Offset: 0x247F818 VA: 0x247F818 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x247F71C Offset: 0x247F71C VA: 0x247F71C
	private void DoVector3ClampMagnitude() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABCB4 Offset: 0xCABCB4 VA: 0xCABCB4
[TooltipAttribute] // RVA: 0xCABCB4 Offset: 0xCABCB4 VA: 0xCABCB4
public class Vector3HighPassFilter : FsmStateAction // TypeDefIndex: 13111
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD3272C Offset: 0xD3272C VA: 0xD3272C
	[UIHintAttribute] // RVA: 0xD3272C Offset: 0xD3272C VA: 0xD3272C
	[TooltipAttribute] // RVA: 0xD3272C Offset: 0xD3272C VA: 0xD3272C
	public FsmVector3 vector3Variable; // 0x50
	[TooltipAttribute] // RVA: 0xD3278C Offset: 0xD3278C VA: 0xD3278C
	public FsmFloat filteringFactor; // 0x58
	private Vector3 filteredVector; // 0x60

	// Methods

	// RVA: 0x247F81C Offset: 0x247F81C VA: 0x247F81C
	public void .ctor() { }

	// RVA: 0x247F824 Offset: 0x247F824 VA: 0x247F824 Slot: 28
	public override void Reset() { }

	// RVA: 0x247F858 Offset: 0x247F858 VA: 0x247F858 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x247F90C Offset: 0x247F90C VA: 0x247F90C Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABD04 Offset: 0xCABD04 VA: 0xCABD04
[TooltipAttribute] // RVA: 0xCABD04 Offset: 0xCABD04 VA: 0xCABD04
public class Vector3Interpolate : FsmStateAction // TypeDefIndex: 13112
{
	// Fields
	public InterpolationType mode; // 0x4C
	[RequiredFieldAttribute] // RVA: 0xD327C4 Offset: 0xD327C4 VA: 0xD327C4
	public FsmVector3 fromVector; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD327D4 Offset: 0xD327D4 VA: 0xD327D4
	public FsmVector3 toVector; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD327E4 Offset: 0xD327E4 VA: 0xD327E4
	public FsmFloat time; // 0x60
	[RequiredFieldAttribute] // RVA: 0xD327F4 Offset: 0xD327F4 VA: 0xD327F4
	[UIHintAttribute] // RVA: 0xD327F4 Offset: 0xD327F4 VA: 0xD327F4
	public FsmVector3 storeResult; // 0x68
	public FsmEvent finishEvent; // 0x70
	[TooltipAttribute] // RVA: 0xD32830 Offset: 0xD32830 VA: 0xD32830
	public bool realTime; // 0x78
	private float startTime; // 0x7C
	private float currentTime; // 0x80

	// Methods

	// RVA: 0x247FB50 Offset: 0x247FB50 VA: 0x247FB50
	public void .ctor() { }

	// RVA: 0x247FB58 Offset: 0x247FB58 VA: 0x247FB58 Slot: 28
	public override void Reset() { }

	// RVA: 0x247FC2C Offset: 0x247FC2C VA: 0x247FC2C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x247FC98 Offset: 0x247FC98 VA: 0x247FC98 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABD54 Offset: 0xCABD54 VA: 0xCABD54
[TooltipAttribute] // RVA: 0xCABD54 Offset: 0xCABD54 VA: 0xCABD54
public class Vector3Invert : FsmStateAction // TypeDefIndex: 13113
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD32868 Offset: 0xD32868 VA: 0xD32868
	[UIHintAttribute] // RVA: 0xD32868 Offset: 0xD32868 VA: 0xD32868
	public FsmVector3 vector3Variable; // 0x50
	public bool everyFrame; // 0x58

	// Methods

	// RVA: 0x247FEC4 Offset: 0x247FEC4 VA: 0x247FEC4
	public void .ctor() { }

	// RVA: 0x247FECC Offset: 0x247FECC VA: 0x247FECC Slot: 28
	public override void Reset() { }

	// RVA: 0x247FED8 Offset: 0x247FED8 VA: 0x247FED8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x247FFDC Offset: 0x247FFDC VA: 0x247FFDC Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABDA4 Offset: 0xCABDA4 VA: 0xCABDA4
[TooltipAttribute] // RVA: 0xCABDA4 Offset: 0xCABDA4 VA: 0xCABDA4
public class Vector3Lerp : FsmStateAction // TypeDefIndex: 13114
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD328A4 Offset: 0xD328A4 VA: 0xD328A4
	[TooltipAttribute] // RVA: 0xD328A4 Offset: 0xD328A4 VA: 0xD328A4
	public FsmVector3 fromVector; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD328F0 Offset: 0xD328F0 VA: 0xD328F0
	[TooltipAttribute] // RVA: 0xD328F0 Offset: 0xD328F0 VA: 0xD328F0
	public FsmVector3 toVector; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD3293C Offset: 0xD3293C VA: 0xD3293C
	[TooltipAttribute] // RVA: 0xD3293C Offset: 0xD3293C VA: 0xD3293C
	public FsmFloat amount; // 0x60
	[RequiredFieldAttribute] // RVA: 0xD32988 Offset: 0xD32988 VA: 0xD32988
	[UIHintAttribute] // RVA: 0xD32988 Offset: 0xD32988 VA: 0xD32988
	[TooltipAttribute] // RVA: 0xD32988 Offset: 0xD32988 VA: 0xD32988
	public FsmVector3 storeResult; // 0x68
	[TooltipAttribute] // RVA: 0xD329E8 Offset: 0xD329E8 VA: 0xD329E8
	public bool everyFrame; // 0x70

	// Methods

	// RVA: 0x24800B8 Offset: 0x24800B8 VA: 0x24800B8
	public void .ctor() { }

	// RVA: 0x24800C0 Offset: 0x24800C0 VA: 0x24800C0 Slot: 28
	public override void Reset() { }

	// RVA: 0x2480184 Offset: 0x2480184 VA: 0x2480184 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x248030C Offset: 0x248030C VA: 0x248030C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x24801C0 Offset: 0x24801C0 VA: 0x24801C0
	private void DoVector3Lerp() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABDF4 Offset: 0xCABDF4 VA: 0xCABDF4
[TooltipAttribute] // RVA: 0xCABDF4 Offset: 0xCABDF4 VA: 0xCABDF4
public class Vector3LowPassFilter : FsmStateAction // TypeDefIndex: 13115
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD32A20 Offset: 0xD32A20 VA: 0xD32A20
	[UIHintAttribute] // RVA: 0xD32A20 Offset: 0xD32A20 VA: 0xD32A20
	[TooltipAttribute] // RVA: 0xD32A20 Offset: 0xD32A20 VA: 0xD32A20
	public FsmVector3 vector3Variable; // 0x50
	[TooltipAttribute] // RVA: 0xD32A80 Offset: 0xD32A80 VA: 0xD32A80
	public FsmFloat filteringFactor; // 0x58
	private Vector3 filteredVector; // 0x60

	// Methods

	// RVA: 0x2480310 Offset: 0x2480310 VA: 0x2480310
	public void .ctor() { }

	// RVA: 0x2480318 Offset: 0x2480318 VA: 0x2480318 Slot: 28
	public override void Reset() { }

	// RVA: 0x248034C Offset: 0x248034C VA: 0x248034C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2480400 Offset: 0x2480400 VA: 0x2480400 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABE44 Offset: 0xCABE44 VA: 0xCABE44
[TooltipAttribute] // RVA: 0xCABE44 Offset: 0xCABE44 VA: 0xCABE44
public class Vector3Multiply : FsmStateAction // TypeDefIndex: 13116
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD32AB8 Offset: 0xD32AB8 VA: 0xD32AB8
	[UIHintAttribute] // RVA: 0xD32AB8 Offset: 0xD32AB8 VA: 0xD32AB8
	public FsmVector3 vector3Variable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD32AF4 Offset: 0xD32AF4 VA: 0xD32AF4
	public FsmFloat multiplyBy; // 0x58
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x24805D0 Offset: 0x24805D0 VA: 0x24805D0
	public void .ctor() { }

	// RVA: 0x24805D8 Offset: 0x24805D8 VA: 0x24805D8 Slot: 28
	public override void Reset() { }

	// RVA: 0x248060C Offset: 0x248060C VA: 0x248060C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x248073C Offset: 0x248073C VA: 0x248073C Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABE94 Offset: 0xCABE94 VA: 0xCABE94
[TooltipAttribute] // RVA: 0xCABE94 Offset: 0xCABE94 VA: 0xCABE94
public class Vector3Normalize : FsmStateAction // TypeDefIndex: 13117
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD32B04 Offset: 0xD32B04 VA: 0xD32B04
	[UIHintAttribute] // RVA: 0xD32B04 Offset: 0xD32B04 VA: 0xD32B04
	public FsmVector3 vector3Variable; // 0x50
	public bool everyFrame; // 0x58

	// Methods

	// RVA: 0x2480838 Offset: 0x2480838 VA: 0x2480838
	public void .ctor() { }

	// RVA: 0x2480840 Offset: 0x2480840 VA: 0x2480840 Slot: 28
	public override void Reset() { }

	// RVA: 0x248084C Offset: 0x248084C VA: 0x248084C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x24808FC Offset: 0x24808FC VA: 0x24808FC Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABEE4 Offset: 0xCABEE4 VA: 0xCABEE4
[TooltipAttribute] // RVA: 0xCABEE4 Offset: 0xCABEE4 VA: 0xCABEE4
public class Vector3Operator : FsmStateAction // TypeDefIndex: 13118
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD32B40 Offset: 0xD32B40 VA: 0xD32B40
	public FsmVector3 vector1; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD32B50 Offset: 0xD32B50 VA: 0xD32B50
	public FsmVector3 vector2; // 0x58
	public Vector3Operator.Vector3Operation operation; // 0x60
	[UIHintAttribute] // RVA: 0xD32B60 Offset: 0xD32B60 VA: 0xD32B60
	public FsmVector3 storeVector3Result; // 0x68
	[UIHintAttribute] // RVA: 0xD32B74 Offset: 0xD32B74 VA: 0xD32B74
	public FsmFloat storeFloatResult; // 0x70
	public bool everyFrame; // 0x78

	// Methods

	// RVA: 0x2480994 Offset: 0x2480994 VA: 0x2480994
	public void .ctor() { }

	// RVA: 0x24809A4 Offset: 0x24809A4 VA: 0x24809A4 Slot: 28
	public override void Reset() { }

	// RVA: 0x24809BC Offset: 0x24809BC VA: 0x24809BC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2480E98 Offset: 0x2480E98 VA: 0x2480E98 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x24809F8 Offset: 0x24809F8 VA: 0x24809F8
	private void DoVector3Operator() { }
}

// Namespace: 
public enum Vector3Operator.Vector3Operation // TypeDefIndex: 13119
{
	// Fields
	public int value__; // 0x0
	public const Vector3Operator.Vector3Operation DotProduct = 0;
	public const Vector3Operator.Vector3Operation CrossProduct = 1;
	public const Vector3Operator.Vector3Operation Distance = 2;
	public const Vector3Operator.Vector3Operation Angle = 3;
	public const Vector3Operator.Vector3Operation Project = 4;
	public const Vector3Operator.Vector3Operation Reflect = 5;
	public const Vector3Operator.Vector3Operation Add = 6;
	public const Vector3Operator.Vector3Operation Subtract = 7;
	public const Vector3Operator.Vector3Operation Multiply = 8;
	public const Vector3Operator.Vector3Operation Divide = 9;
	public const Vector3Operator.Vector3Operation Min = 10;
	public const Vector3Operator.Vector3Operation Max = 11;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABF34 Offset: 0xCABF34 VA: 0xCABF34
[TooltipAttribute] // RVA: 0xCABF34 Offset: 0xCABF34 VA: 0xCABF34
public class Vector3PerSecond : FsmStateAction // TypeDefIndex: 13120
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD32B88 Offset: 0xD32B88 VA: 0xD32B88
	[UIHintAttribute] // RVA: 0xD32B88 Offset: 0xD32B88 VA: 0xD32B88
	public FsmVector3 vector3Variable; // 0x50
	public bool everyFrame; // 0x58

	// Methods

	// RVA: 0x2480E9C Offset: 0x2480E9C VA: 0x2480E9C
	public void .ctor() { }

	// RVA: 0x2480EA4 Offset: 0x2480EA4 VA: 0x2480EA4 Slot: 28
	public override void Reset() { }

	// RVA: 0x2480EB0 Offset: 0x2480EB0 VA: 0x2480EB0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2480FC0 Offset: 0x2480FC0 VA: 0x2480FC0 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABF84 Offset: 0xCABF84 VA: 0xCABF84
[TooltipAttribute] // RVA: 0xCABF84 Offset: 0xCABF84 VA: 0xCABF84
public class Vector3RotateTowards : FsmStateAction // TypeDefIndex: 13121
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD32BC4 Offset: 0xD32BC4 VA: 0xD32BC4
	public FsmVector3 currentDirection; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD32BD4 Offset: 0xD32BD4 VA: 0xD32BD4
	public FsmVector3 targetDirection; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD32BE4 Offset: 0xD32BE4 VA: 0xD32BE4
	[TooltipAttribute] // RVA: 0xD32BE4 Offset: 0xD32BE4 VA: 0xD32BE4
	public FsmFloat rotateSpeed; // 0x60
	[RequiredFieldAttribute] // RVA: 0xD32C30 Offset: 0xD32C30 VA: 0xD32C30
	[TooltipAttribute] // RVA: 0xD32C30 Offset: 0xD32C30 VA: 0xD32C30
	public FsmFloat maxMagnitude; // 0x68

	// Methods

	// RVA: 0x24810A8 Offset: 0x24810A8 VA: 0x24810A8
	public void .ctor() { }

	// RVA: 0x24810B0 Offset: 0x24810B0 VA: 0x24810B0 Slot: 28
	public override void Reset() { }

	// RVA: 0x248118C Offset: 0x248118C VA: 0x248118C Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCABFD4 Offset: 0xCABFD4 VA: 0xCABFD4
[TooltipAttribute] // RVA: 0xCABFD4 Offset: 0xCABFD4 VA: 0xCABFD4
public class Vector3Subtract : FsmStateAction // TypeDefIndex: 13122
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD32C7C Offset: 0xD32C7C VA: 0xD32C7C
	[UIHintAttribute] // RVA: 0xD32C7C Offset: 0xD32C7C VA: 0xD32C7C
	public FsmVector3 vector3Variable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD32CB8 Offset: 0xD32CB8 VA: 0xD32CB8
	public FsmVector3 subtractVector; // 0x58
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x2481310 Offset: 0x2481310 VA: 0x2481310
	public void .ctor() { }

	// RVA: 0x2481318 Offset: 0x2481318 VA: 0x2481318 Slot: 28
	public override void Reset() { }

	// RVA: 0x248139C Offset: 0x248139C VA: 0x248139C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x24814E8 Offset: 0x24814E8 VA: 0x24814E8 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCAC024 Offset: 0xCAC024 VA: 0xCAC024
[TooltipAttribute] // RVA: 0xCAC024 Offset: 0xCAC024 VA: 0xCAC024
public class Wait : FsmStateAction // TypeDefIndex: 13123
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD32CC8 Offset: 0xD32CC8 VA: 0xD32CC8
	public FsmFloat time; // 0x50
	public FsmEvent finishEvent; // 0x58
	public bool realTime; // 0x60
	protected float startTime; // 0x64
	protected float timer; // 0x68

	// Methods

	// RVA: 0x24815FC Offset: 0x24815FC VA: 0x24815FC
	public void .ctor() { }

	// RVA: 0x2481604 Offset: 0x2481604 VA: 0x2481604 Slot: 28
	public override void Reset() { }

	// RVA: 0x2481634 Offset: 0x2481634 VA: 0x2481634 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x24816D0 Offset: 0x24816D0 VA: 0x24816D0 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCAC074 Offset: 0xCAC074 VA: 0xCAC074
[TooltipAttribute] // RVA: 0xCAC074 Offset: 0xCAC074 VA: 0xCAC074
public class WaitAnyVoice : Wait // TypeDefIndex: 13124
{
	// Fields
	public bool isVoiceWait; // 0x6C

	// Methods

	// RVA: 0x2481794 Offset: 0x2481794 VA: 0x2481794
	public void .ctor() { }

	// RVA: 0x248179C Offset: 0x248179C VA: 0x248179C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2481840 Offset: 0x2481840 VA: 0x2481840 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCAC0C4 Offset: 0xCAC0C4 VA: 0xCAC0C4
[TooltipAttribute] // RVA: 0xCAC0C4 Offset: 0xCAC0C4 VA: 0xCAC0C4
public class WakeAllRigidBodies : FsmStateAction // TypeDefIndex: 13125
{
	// Fields
	public bool everyFrame; // 0x49
	private Rigidbody[] bodies; // 0x50

	// Methods

	// RVA: 0x2481960 Offset: 0x2481960 VA: 0x2481960
	public void .ctor() { }

	// RVA: 0x2481968 Offset: 0x2481968 VA: 0x2481968 Slot: 28
	public override void Reset() { }

	// RVA: 0x2481970 Offset: 0x2481970 VA: 0x2481970 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2481B80 Offset: 0x2481B80 VA: 0x2481B80 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2481A54 Offset: 0x2481A54 VA: 0x2481A54
	private void DoWakeAll() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCAC114 Offset: 0xCAC114 VA: 0xCAC114
[TooltipAttribute] // RVA: 0xCAC114 Offset: 0xCAC114 VA: 0xCAC114
public class WakeUp : ComponentAction<Rigidbody> // TypeDefIndex: 13126
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD32CD8 Offset: 0xD32CD8 VA: 0xD32CD8
	[CheckForComponentAttribute] // RVA: 0xD32CD8 Offset: 0xD32CD8 VA: 0xD32CD8
	public FsmOwnerDefault gameObject; // 0x60

	// Methods

	// RVA: 0x2481CF8 Offset: 0x2481CF8 VA: 0x2481CF8
	public void .ctor() { }

	// RVA: 0x2481D48 Offset: 0x2481D48 VA: 0x2481D48 Slot: 28
	public override void Reset() { }

	// RVA: 0x2481D50 Offset: 0x2481D50 VA: 0x2481D50 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2481D78 Offset: 0x2481D78 VA: 0x2481D78
	private void DoWakeUp() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCAC164 Offset: 0xCAC164 VA: 0xCAC164
[TooltipAttribute] // RVA: 0xCAC164 Offset: 0xCAC164 VA: 0xCAC164
public class WorldToScreenPoint : FsmStateAction // TypeDefIndex: 13127
{
	// Fields
	[UIHintAttribute] // RVA: 0xD32D4C Offset: 0xD32D4C VA: 0xD32D4C
	[TooltipAttribute] // RVA: 0xD32D4C Offset: 0xD32D4C VA: 0xD32D4C
	public FsmVector3 worldPosition; // 0x50
	[TooltipAttribute] // RVA: 0xD32D9C Offset: 0xD32D9C VA: 0xD32D9C
	public FsmFloat worldX; // 0x58
	[TooltipAttribute] // RVA: 0xD32DD4 Offset: 0xD32DD4 VA: 0xD32DD4
	public FsmFloat worldY; // 0x60
	[TooltipAttribute] // RVA: 0xD32E0C Offset: 0xD32E0C VA: 0xD32E0C
	public FsmFloat worldZ; // 0x68
	[UIHintAttribute] // RVA: 0xD32E44 Offset: 0xD32E44 VA: 0xD32E44
	[TooltipAttribute] // RVA: 0xD32E44 Offset: 0xD32E44 VA: 0xD32E44
	public FsmVector3 storeScreenPoint; // 0x70
	[UIHintAttribute] // RVA: 0xD32E94 Offset: 0xD32E94 VA: 0xD32E94
	[TooltipAttribute] // RVA: 0xD32E94 Offset: 0xD32E94 VA: 0xD32E94
	public FsmFloat storeScreenX; // 0x78
	[UIHintAttribute] // RVA: 0xD32EE4 Offset: 0xD32EE4 VA: 0xD32EE4
	[TooltipAttribute] // RVA: 0xD32EE4 Offset: 0xD32EE4 VA: 0xD32EE4
	public FsmFloat storeScreenY; // 0x80
	[TooltipAttribute] // RVA: 0xD32F34 Offset: 0xD32F34 VA: 0xD32F34
	public FsmBool normalize; // 0x88
	[TooltipAttribute] // RVA: 0xD32F6C Offset: 0xD32F6C VA: 0xD32F6C
	public bool everyFrame; // 0x90

	// Methods

	// RVA: 0x2481FB4 Offset: 0x2481FB4 VA: 0x2481FB4
	public void .ctor() { }

	// RVA: 0x2481FBC Offset: 0x2481FBC VA: 0x2481FBC Slot: 28
	public override void Reset() { }

	// RVA: 0x24820B4 Offset: 0x24820B4 VA: 0x24820B4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x24823D0 Offset: 0x24823D0 VA: 0x24823D0 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x24820F0 Offset: 0x24820F0 VA: 0x24820F0
	private void DoWorldToScreenPoint() { }
}

// Namespace: HutongGames.PlayMaker
[PreserveAttribute] // RVA: 0xCAC1B4 Offset: 0xCAC1B4 VA: 0xCAC1B4
public class FsmProcessor // TypeDefIndex: 13128
{
	// Methods

	// RVA: 0x249ABA4 Offset: 0x249ABA4 VA: 0x249ABA4
	public void .ctor() { }

	// RVA: 0x249ABAC Offset: 0x249ABAC VA: 0x249ABAC
	public static void OnPreprocess(PlayMakerFSM fsm) { }

	// RVA: -1 Offset: -1
	private static void HandleUiEvent<T>(PlayMakerFSM fsm, UiEvents uiEvent) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D1070 Offset: 0x21D1070 VA: 0x21D1070
	|-FsmProcessor.HandleUiEvent<PlayMakerUiBoolValueChangedEvent>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiClickEvent>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiDragEvents>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiDropEvent>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiEndEditEvent>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiFloatValueChangedEvent>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiIntValueChangedEvent>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiPointerEvents>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiVector2ValueChangedEvent>
	|-FsmProcessor.HandleUiEvent<object>
	*/

	// RVA: -1 Offset: -1
	private static void AddUiEventHandler<T>(PlayMakerFSM fsm) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D0F28 Offset: 0x21D0F28 VA: 0x21D0F28
	|-FsmProcessor.AddUiEventHandler<object>
	*/

	// RVA: 0x249AD74 Offset: 0x249AD74 VA: 0x249AD74
	private static bool AddEventHandlerComponent(PlayMakerFSM fsm, Type type) { }

	// RVA: 0x249AE7C Offset: 0x249AE7C VA: 0x249AE7C
	public static PlayMakerProxyBase GetEventHandlerComponent(GameObject go, Type type) { }
}

// Namespace: 
public class iTweenFSMEvents : MonoBehaviour // TypeDefIndex: 13129
{
	// Fields
	public static int itweenIDCount; // 0x0
	public int itweenID; // 0x18
	public iTweenFsmAction itweenFSMAction; // 0x20
	public bool donotfinish; // 0x28
	public bool islooping; // 0x29

	// Methods

	// RVA: 0x2B7A474 Offset: 0x2B7A474 VA: 0x2B7A474
	public void .ctor() { }

	// RVA: 0x2B7A47C Offset: 0x2B7A47C VA: 0x2B7A47C
	private void iTweenOnStart(int aniTweenID) { }

	// RVA: 0x2B7A4F0 Offset: 0x2B7A4F0 VA: 0x2B7A4F0
	private void iTweenOnComplete(int aniTweenID) { }

	// RVA: 0x2B7A59C Offset: 0x2B7A59C VA: 0x2B7A59C
	private static void .cctor() { }
}

// Namespace: 
public enum iTweenFSMType // TypeDefIndex: 13130
{
	// Fields
	public int value__; // 0x0
	public const iTweenFSMType all = 0;
	public const iTweenFSMType move = 1;
	public const iTweenFSMType rotate = 2;
	public const iTweenFSMType scale = 3;
	public const iTweenFSMType shake = 4;
	public const iTweenFSMType position = 5;
	public const iTweenFSMType value = 6;
	public const iTweenFSMType look = 7;
}

// Namespace: HutongGames.PlayMaker
public class UpdateHelper // TypeDefIndex: 13131
{
	// Fields
	private static bool editorPrefLoaded; // 0x0

	// Methods

	// RVA: 0x1714E8C Offset: 0x1714E8C VA: 0x1714E8C
	public void .ctor() { }

	// RVA: 0x1714E94 Offset: 0x1714E94 VA: 0x1714E94
	public static void SetDirty(Fsm fsm) { }
}

// Namespace: 
public class CompilerPing // TypeDefIndex: 13132
{
	// Methods

	// RVA: 0x1824BC4 Offset: 0x1824BC4 VA: 0x1824BC4
	public void .ctor() { }
}

// Namespace: Assets.SimpleAndroidNotifications.Data
public class NotificationCallback // TypeDefIndex: 13133
{
	// Fields
	public int Id; // 0x10
	public string Data; // 0x18

	// Methods

	// RVA: 0x1C74210 Offset: 0x1C74210 VA: 0x1C74210
	public void .ctor() { }
}

// Namespace: Assets.SimpleAndroidNotifications.Enums
public enum NotificationExecuteMode // TypeDefIndex: 13134
{
	// Fields
	public int value__; // 0x0
	public const NotificationExecuteMode Inexact = 0;
	public const NotificationExecuteMode Exact = 1;
	public const NotificationExecuteMode ExactAndAllowWhileIdle = 2;
}

// Namespace: Assets.SimpleAndroidNotifications.Enums
public enum NotificationImportance // TypeDefIndex: 13135
{
	// Fields
	public int value__; // 0x0
	public const NotificationImportance Unspecified = -1000;
	public const NotificationImportance None = 0;
	public const NotificationImportance Min = 1;
	public const NotificationImportance Low = 2;
	public const NotificationImportance Default = 3;
	public const NotificationImportance High = 4;
	public const NotificationImportance Max = 5;
}

// Namespace: Assets.SimpleAndroidNotifications.Helpers
public class DebugConsole : MonoBehaviour // TypeDefIndex: 13136
{
	// Fields
	public Rect ButtonRect; // 0x18
	public Rect PosRect; // 0x28
	public Rect ViewRect; // 0x38
	public bool Show; // 0x48
	public bool StackTrace; // 0x49
	private bool _expand; // 0x4A
	private Vector2 _scrollPos; // 0x4C
	private int _count; // 0x54
	private readonly StringBuilder _log; // 0x58
	private readonly StringBuilder _fullLog; // 0x60
	private bool _subscribed; // 0x68

	// Methods

	// RVA: 0x1C74318 Offset: 0x1C74318 VA: 0x1C74318
	public void .ctor() { }

	// RVA: 0x1C74470 Offset: 0x1C74470 VA: 0x1C74470
	public void Awake() { }

	// RVA: 0x1C74474 Offset: 0x1C74474 VA: 0x1C74474
	public void Subscribe() { }

	// RVA: 0x1C744FC Offset: 0x1C744FC VA: 0x1C744FC
	public void Update() { }

	// RVA: 0x1C74534 Offset: 0x1C74534 VA: 0x1C74534
	public void HandleLog(string message, string stackTrace, LogType type) { }

	// RVA: 0x1C745E4 Offset: 0x1C745E4 VA: 0x1C745E4
	public void OnGUI() { }

	// RVA: 0x1C7478C Offset: 0x1C7478C VA: 0x1C7478C
	public string GetLogs() { }
}

// Namespace: Assets.SimpleAndroidNotifications.Helpers
public static class NotificationIdHandler // TypeDefIndex: 13137
{
	// Fields
	private const string PlayerPrefsKey = "NotificationHelper.Scheduled";
	[CompilerGeneratedAttribute] // RVA: 0xD32FA4 Offset: 0xD32FA4 VA: 0xD32FA4
	private static Func<string, int> <>f__mg$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xD32FB4 Offset: 0xD32FB4 VA: 0xD32FB4
	private static Func<string, bool> <>f__am$cache0; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xD32FC4 Offset: 0xD32FC4 VA: 0xD32FC4
	private static Func<int, string> <>f__am$cache1; // 0x10

	// Methods

	// RVA: 0x1C747C0 Offset: 0x1C747C0 VA: 0x1C747C0
	public static List<int> GetScheduledNotificaions() { }

	// RVA: 0x1C749BC Offset: 0x1C749BC VA: 0x1C749BC
	public static void SetScheduledNotificaions(List<int> scheduledNotificaions) { }

	// RVA: 0x1C74AEC Offset: 0x1C74AEC VA: 0x1C74AEC
	public static void AddScheduledNotificaion(int notificationId) { }

	// RVA: 0x1C74B58 Offset: 0x1C74B58 VA: 0x1C74B58
	public static void RemoveScheduledNotificaion(int id) { }

	// RVA: 0x1C74C3C Offset: 0x1C74C3C VA: 0x1C74C3C
	public static void RemoveAllScheduledNotificaions() { }

	// RVA: 0x1C74CA0 Offset: 0x1C74CA0 VA: 0x1C74CA0
	public static int GetNotificationId() { }

	[CompilerGeneratedAttribute] // RVA: 0xD44E44 Offset: 0xD44E44 VA: 0xD44E44
	// RVA: 0x1C74D2C Offset: 0x1C74D2C VA: 0x1C74D2C
	private static bool <GetScheduledNotificaions>m__0(string i) { }

	[CompilerGeneratedAttribute] // RVA: 0xD44E54 Offset: 0xD44E54 VA: 0xD44E54
	// RVA: 0x1C74DA0 Offset: 0x1C74DA0 VA: 0x1C74DA0
	private static string <SetScheduledNotificaions>m__1(int i) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2F30 Offset: 0xCB2F30 VA: 0xCB2F30
private sealed class NotificationIdHandler.<RemoveScheduledNotificaion>c__AnonStorey0 // TypeDefIndex: 13138
{
	// Fields
	internal int id; // 0x10
