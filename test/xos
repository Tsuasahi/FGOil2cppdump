
	// RVA: 0x15DB778 Offset: 0x15DB778 VA: 0x15DB778
	public UserServantEntity[] GetUserServantList() { }

	// RVA: 0x15DB9D0 Offset: 0x15DB9D0 VA: 0x15DB9D0
	public int GetFollowerIndex() { }
}

// Namespace: 
public class UserDeckMaster : DataMasterBase<UserDeckMaster, UserDeckEntity, long> // TypeDefIndex: 7397
{
	// Methods

	// RVA: 0x15DBB00 Offset: 0x15DBB00 VA: 0x15DBB00
	public void .ctor() { }

	// RVA: 0x15DBB54 Offset: 0x15DBB54 VA: 0x15DBB54
	public UserDeckEntity getEntityFromId(long deckId) { }

	// RVA: 0x15DBBB4 Offset: 0x15DBBB4 VA: 0x15DBBB4
	public UserDeckEntity getDeck(long userId, int deckNo) { }

	// RVA: 0x15DBCD0 Offset: 0x15DBCD0 VA: 0x15DBCD0
	public UserDeckEntity[] getDeckList(long userId) { }

	// RVA: 0x15DBFF0 Offset: 0x15DBFF0 VA: 0x15DBFF0
	public void getPartyList(out long[] svtIdList, out long[] equipIdList, long userId) { }

	// RVA: 0x15DC1F8 Offset: 0x15DC1F8 VA: 0x15DC1F8
	public void getEventPartyList(out long[] svtIdList, out long[] equipIdList, long userId) { }

	// RVA: 0x15DC714 Offset: 0x15DC714 VA: 0x15DC714
	public bool IsEquip(long userSvtId) { }

	// RVA: 0x15DC884 Offset: 0x15DC884 VA: 0x15DC884
	public bool IsEquip(long userSvtId, out int partyIndex) { }

	// RVA: 0x15DCA04 Offset: 0x15DCA04 VA: 0x15DCA04
	public UserServantEntity[] GetUserServantListFromDeck() { }

	// RVA: 0x15DCC98 Offset: 0x15DCC98 VA: 0x15DCC98
	public UserServantEntity[] GetUserServantListFromDeckReaveHeroine() { }

	// RVA: 0x15DCED0 Offset: 0x15DCED0 VA: 0x15DCED0
	public UserServantEntity[] GetUserServantListFromDeckIsTerminal() { }

	// RVA: 0x15DCD2C Offset: 0x15DCD2C VA: 0x15DCD2C
	private UserServantEntity[] NullBacktrackingDeck(UserServantEntity[] deck, bool isCheckHeroine, out int cnt) { }

	// RVA: 0x15DCBA0 Offset: 0x15DCBA0 VA: 0x15DCBA0
	private UserServantEntity[] GetServantListFromAllDeck(long userId, bool isCheckHeroine = False) { }
}

// Namespace: 
public class UserDeleteReservationEntity : DataEntityBase<string> // TypeDefIndex: 7398
{
	// Fields
	private static readonly string UserDeleteFlag; // 0x0
	public ObscuredLong userId; // 0x10
	public string password; // 0x30
	public int flag; // 0x38

	// Methods

	// RVA: 0x15DD0E8 Offset: 0x15DD0E8 VA: 0x15DD0E8
	public void .ctor() { }

	// RVA: 0x15DD138 Offset: 0x15DD138 VA: 0x15DD138 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x15DD1F4 Offset: 0x15DD1F4 VA: 0x15DD1F4
	public static string CreatePK(long userId) { }

	// RVA: 0x15DD244 Offset: 0x15DD244 VA: 0x15DD244
	public static void SetUserDeleteFlag(bool flag = True) { }

	// RVA: 0x15DD2C4 Offset: 0x15DD2C4 VA: 0x15DD2C4
	public static bool IsUserDeleteFlag() { }

	// RVA: 0x15DD340 Offset: 0x15DD340 VA: 0x15DD340
	private static void .cctor() { }
}

// Namespace: 
public class UserDeleteReservationMaster : DataMasterBase<UserDeleteReservationMaster, UserDeleteReservationEntity, string> // TypeDefIndex: 7399
{
	// Methods

	// RVA: 0x15DD39C Offset: 0x15DD39C VA: 0x15DD39C
	public void .ctor() { }

	// RVA: 0x15DD3F0 Offset: 0x15DD3F0 VA: 0x15DD3F0
	public UserDeleteReservationEntity GetEntity(long userId) { }

	// RVA: 0x15DD478 Offset: 0x15DD478 VA: 0x15DD478
	public bool TryGetEntity(out UserDeleteReservationEntity entity, long userId) { }
}

// Namespace: 
public class UserEntity : DataEntityBase<long> // TypeDefIndex: 7400
{
	// Fields
	public long id; // 0x10
	public int isDel; // 0x18
	public string authKey; // 0x20
	public string secretKey; // 0x28
	public int deviceType; // 0x30
	public string userAgent; // 0x38
	public string pushKey; // 0x40

	// Methods

	// RVA: 0x15DD508 Offset: 0x15DD508 VA: 0x15DD508
	public void .ctor() { }

	// RVA: 0x15DD558 Offset: 0x15DD558 VA: 0x15DD558 Slot: 5
	protected sealed override long CreatePrimaryKey() { }
}

// Namespace: 
public class UserEquipEntity : DataEntityBase<long> // TypeDefIndex: 7401
{
	// Fields
	public long id; // 0x10
	public long userId; // 0x18
	public ObscuredInt equipId; // 0x20
	public int lv; // 0x30
	public int exp; // 0x34
	public int skillLv1; // 0x38
	public int skillLv2; // 0x3C
	public int skillLv3; // 0x40

	// Methods

	// RVA: 0x15DD560 Offset: 0x15DD560 VA: 0x15DD560
	public void .ctor() { }

	// RVA: 0x15DD5B0 Offset: 0x15DD5B0 VA: 0x15DD5B0 Slot: 5
	protected sealed override long CreatePrimaryKey() { }

	// RVA: 0x15DD5B8 Offset: 0x15DD5B8 VA: 0x15DD5B8
	public int getSkillLv(int index) { }

	// RVA: 0x15DD704 Offset: 0x15DD704 VA: 0x15DD704
	public int[] getSkillLvList() { }

	// RVA: 0x15DD890 Offset: 0x15DD890 VA: 0x15DD890
	public int[] getSkillIdList() { }

	// RVA: 0x15DDA74 Offset: 0x15DDA74 VA: 0x15DDA74
	public void getEquipInfo(out int condUsrLv, out int maxLv, out string equipName, out string detail, out int genderImageId) { }

	// RVA: 0x15DDC9C Offset: 0x15DDC9C VA: 0x15DDC9C
	public void getExpInfo(out int exp, out int lateExp, out float barExp) { }

	// RVA: 0x15DDF40 Offset: 0x15DDF40 VA: 0x15DDF40
	public bool IsNew() { }

	// RVA: 0x15DE174 Offset: 0x15DE174 VA: 0x15DE174
	public void SetOld() { }
}

// Namespace: 
public class UserEquipMaster : DataMasterBase<UserEquipMaster, UserEquipEntity, long> // TypeDefIndex: 7402
{
	// Methods

	// RVA: 0x15DE410 Offset: 0x15DE410 VA: 0x15DE410
	public void .ctor() { }

	// RVA: 0x15DE464 Offset: 0x15DE464 VA: 0x15DE464
	public UserEquipEntity[] getList(long userId) { }

	// RVA: 0x15DE5E0 Offset: 0x15DE5E0 VA: 0x15DE5E0
	public void continueDeviceEquipLvInfo() { }
}

// Namespace: 
public class UserEventBoardGameTokenEntity : DataEntityBase<string> // TypeDefIndex: 7403
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int tokenId; // 0x1C
	public int num; // 0x20

	// Methods

	// RVA: 0x15DF4CC Offset: 0x15DF4CC VA: 0x15DF4CC
	public void .ctor() { }

	// RVA: 0x15DF51C Offset: 0x15DF51C VA: 0x15DF51C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x15DF530 Offset: 0x15DF530 VA: 0x15DF530
	public static string CreatePK(long userId, int eventId, int tokenId) { }
}

// Namespace: 
public class UserEventBoardGameTokenMaster : DataMasterBase<UserEventBoardGameTokenMaster, UserEventBoardGameTokenEntity, string> // TypeDefIndex: 7404
{
	// Methods

	// RVA: 0x15DF540 Offset: 0x15DF540 VA: 0x15DF540
	public void .ctor() { }

	// RVA: 0x15DF594 Offset: 0x15DF594 VA: 0x15DF594
	public UserEventBoardGameTokenEntity GetEntity(long userId, int eventId, int tokenId) { }

	// RVA: 0x15DF618 Offset: 0x15DF618 VA: 0x15DF618
	public bool TryGetEntity(out UserEventBoardGameTokenEntity entity, long userId, int eventId, int tokenId) { }

	// RVA: 0x15DF6A4 Offset: 0x15DF6A4 VA: 0x15DF6A4
	public UserEventBoardGameTokenEntity[] GetList(long userId) { }

	// RVA: 0x15DF8E0 Offset: 0x15DF8E0 VA: 0x15DF8E0
	public UserEventBoardGameTokenEntity[] GetList() { }

	// RVA: 0x15DF950 Offset: 0x15DF950 VA: 0x15DF950
	public bool IsHavingToken(int tokenId) { }

	// RVA: 0x15DFA28 Offset: 0x15DFA28 VA: 0x15DFA28
	public bool IsHavingGroupToken(int gameFlagVal, int kindNum) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42E04 Offset: 0xC42E04 VA: 0xC42E04
private sealed class UserEventBoardGameTokenMaster.<IsHavingToken>c__AnonStorey0 // TypeDefIndex: 7405
{
	// Fields
	internal int tokenId; // 0x10

	// Methods

	// RVA: 0x15DFA20 Offset: 0x15DFA20 VA: 0x15DFA20
	public void .ctor() { }

	// RVA: 0x15DFC00 Offset: 0x15DFC00 VA: 0x15DFC00
	internal bool <>m__0(UserEventBoardGameTokenEntity x) { }
}

// Namespace: 
public class UserEventDeckEntity : DataEntityBase<string> // TypeDefIndex: 7406
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int deckNo; // 0x1C
	public DeckServant deckInfo; // 0x20

	// Methods

	// RVA: 0x15DFC50 Offset: 0x15DFC50 VA: 0x15DFC50
	public void .ctor() { }

	// RVA: 0x15DFCA0 Offset: 0x15DFCA0 VA: 0x15DFCA0
	public void .ctor(long userId, int eventId, int deckNo, long userEquipId) { }

	// RVA: 0x15DFD70 Offset: 0x15DFD70 VA: 0x15DFD70 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x15DFD84 Offset: 0x15DFD84 VA: 0x15DFD84
	public static string CreatePK(long userId, int eventId, int deckNo) { }

	// RVA: 0x15DFD94 Offset: 0x15DFD94 VA: 0x15DFD94
	public UserServantEntity GetUserServant(int menber) { }

	// RVA: 0x15DFDA8 Offset: 0x15DFDA8 VA: 0x15DFDA8
	public long[] GetEquipList(int menber) { }

	// RVA: 0x15DFE4C Offset: 0x15DFE4C VA: 0x15DFE4C
	public long[] GetEquipList(long userSvtId) { }

	// RVA: 0x15DFEF0 Offset: 0x15DFEF0 VA: 0x15DFEF0
	public bool IsEquip(long userSvtId) { }

	// RVA: 0x15DFF04 Offset: 0x15DFF04 VA: 0x15DFF04
	public UserServantEntity[] GetUserServantList() { }

	// RVA: 0x15E01AC Offset: 0x15E01AC VA: 0x15E01AC
	public int GetFollowerIndex() { }
}

// Namespace: 
public class UserEventDeckMaster : DataMasterBase<UserEventDeckMaster, UserEventDeckEntity, string> // TypeDefIndex: 7407
{
	// Methods

	// RVA: 0x15E02DC Offset: 0x15E02DC VA: 0x15E02DC
	public void .ctor() { }

	// RVA: 0x15E0330 Offset: 0x15E0330 VA: 0x15E0330
	public UserEventDeckEntity GetEntity(long userId, int eventId, int deckNo) { }

	// RVA: 0x15E03B4 Offset: 0x15E03B4 VA: 0x15E03B4
	public bool TryGetEntity(out UserEventDeckEntity entity, long userId, int eventId, int deckNo) { }

	// RVA: 0x15E0440 Offset: 0x15E0440 VA: 0x15E0440
	public UserEventDeckEntity getDeck(long userId, int eventId, int deckNo) { }

	// RVA: 0x15E054C Offset: 0x15E054C VA: 0x15E054C
	public UserEventDeckEntity[] getDeckList(long userId, int eventId, int questId, int questPhase) { }

	// RVA: 0x15E0808 Offset: 0x15E0808 VA: 0x15E0808
	public void getEventPartyList(out long[] svtIdList, out long[] equipIdList, long userId) { }

	// RVA: 0x15DC494 Offset: 0x15DC494 VA: 0x15DC494
	public void getEventPartyList(ref List<long> svtCollectList, ref List<long> equipCollectList, long userId) { }
}

// Namespace: 
public class UserEventEntity : DataEntityBase<string> // TypeDefIndex: 7408
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int value; // 0x1C
	public int flag; // 0x20
	public int tutorial; // 0x24
	public int scriptFlag; // 0x28
	public long updatedAt; // 0x30

	// Methods

	// RVA: 0x15E0B2C Offset: 0x15E0B2C VA: 0x15E0B2C
	public void .ctor() { }

	// RVA: 0x15E0B7C Offset: 0x15E0B7C VA: 0x15E0B7C
	public void .ctor(long userId, int eventId) { }

	// RVA: 0x15E0BF4 Offset: 0x15E0BF4 VA: 0x15E0BF4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x15E0C08 Offset: 0x15E0C08 VA: 0x15E0C08
	public static string CreatePK(long userId, int eventId) { }

	// RVA: 0x15E0C14 Offset: 0x15E0C14 VA: 0x15E0C14
	public bool getTutorialFlag(TutorialFlag.EventId flagId) { }

	// RVA: 0x15E0C30 Offset: 0x15E0C30 VA: 0x15E0C30
	public bool getEventFlag(EventStatus.Type flagId) { }

	// RVA: 0x15E0C4C Offset: 0x15E0C4C VA: 0x15E0C4C
	public bool getEventFlag(int flagId) { }

	// RVA: 0x15E0C68 Offset: 0x15E0C68 VA: 0x15E0C68
	public bool getEventFlag(EventStatus.TypeFlag flag) { }

	// RVA: 0x15E0C78 Offset: 0x15E0C78 VA: 0x15E0C78
	public bool getScriptFlag(int flagId) { }

	// RVA: 0x15E0C94 Offset: 0x15E0C94 VA: 0x15E0C94
	public long getUpdatedAt() { }
}

// Namespace: 
public class UserEventMapEntity : DataEntityBase<string> // TypeDefIndex: 7409
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int mapId; // 0x1C
	public long[] value; // 0x20

	// Methods

	// RVA: 0x15E0C9C Offset: 0x15E0C9C VA: 0x15E0C9C
	public void .ctor() { }

	// RVA: 0x15E0CEC Offset: 0x15E0CEC VA: 0x15E0CEC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x15E0D00 Offset: 0x15E0D00 VA: 0x15E0D00
	public static string CreatePK(long userId, int eventId, int mapId) { }
}

// Namespace: 
public class UserEventMapMaster : DataMasterBase<UserEventMapMaster, UserEventMapEntity, string> // TypeDefIndex: 7410
{
	// Methods

	// RVA: 0x15E0D10 Offset: 0x15E0D10 VA: 0x15E0D10
	public void .ctor() { }

	// RVA: 0x15E0D64 Offset: 0x15E0D64 VA: 0x15E0D64
	public UserEventMapEntity GetEntity(long userId, int eventId, int mapId) { }

	// RVA: 0x15E0DE8 Offset: 0x15E0DE8 VA: 0x15E0DE8
	public bool TryGetEntity(out UserEventMapEntity entity, long userId, int eventId, int mapId) { }

	// RVA: 0x15E0E74 Offset: 0x15E0E74 VA: 0x15E0E74
	public UserEventMapEntity GetEntity(int eventId, int mapId) { }

	// RVA: 0x15E1170 Offset: 0x15E1170 VA: 0x15E1170
	public List<UserEventMapEntity> GetEntityListFromEventId(long userId, int eventId) { }
}

// Namespace: 
public class UserEventMaster : DataMasterBase<UserEventMaster, UserEventEntity, string> // TypeDefIndex: 7411
{
	// Methods

	// RVA: 0x15E138C Offset: 0x15E138C VA: 0x15E138C
	public void .ctor() { }

	// RVA: 0x15E13E0 Offset: 0x15E13E0 VA: 0x15E13E0
	public UserEventEntity GetEntity(long userId, int eventId) { }

	// RVA: 0x15E1454 Offset: 0x15E1454 VA: 0x15E1454
	public bool TryGetEntity(out UserEventEntity entity, long userId, int eventId) { }

	// RVA: 0x15E14D8 Offset: 0x15E14D8 VA: 0x15E14D8
	public UserEventEntity getEntityFromId(long userId, int eventId) { }

	// RVA: 0x15E1664 Offset: 0x15E1664 VA: 0x15E1664
	public UserEventEntity getEntityFromIdNull(long userId, int eventId) { }

	// RVA: 0x15E17C0 Offset: 0x15E17C0 VA: 0x15E17C0
	public UserEventEntity[] getList() { }

	// RVA: 0x15E1830 Offset: 0x15E1830 VA: 0x15E1830
	public UserEventEntity[] getList(long userId) { }
}

// Namespace: 
public class UserEventMissionCondDetailEntity : DataEntityBase<string> // TypeDefIndex: 7412
{
	// Fields
	public long userId; // 0x10
	public int conditionDetailId; // 0x18
	public int missionTargetId; // 0x1C
	public long progressNum; // 0x20

	// Methods

	// RVA: 0x15E19AC Offset: 0x15E19AC VA: 0x15E19AC
	public void .ctor() { }

	// RVA: 0x15E19FC Offset: 0x15E19FC VA: 0x15E19FC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x15E1A10 Offset: 0x15E1A10 VA: 0x15E1A10
	public static string CreatePK(long userId, int conditionDetailId) { }
}

// Namespace: 
public class UserEventMissionCondDetailMaster : DataMasterBase<UserEventMissionCondDetailMaster, UserEventMissionCondDetailEntity, string> // TypeDefIndex: 7413
{
	// Methods

	// RVA: 0x15E1A1C Offset: 0x15E1A1C VA: 0x15E1A1C
	public void .ctor() { }

	// RVA: 0x15E1A70 Offset: 0x15E1A70 VA: 0x15E1A70
	public UserEventMissionCondDetailEntity GetEntity(long userId, int conditionDetailId) { }

	// RVA: 0x15E1AE4 Offset: 0x15E1AE4 VA: 0x15E1AE4
	public bool TryGetEntity(out UserEventMissionCondDetailEntity entity, long userId, int conditionDetailId) { }
}

// Namespace: 
public class UserEventMissionEntity : DataEntityBase<string> // TypeDefIndex: 7414
{
	// Fields
	public long userId; // 0x10
	public int missionId; // 0x18
	public int missionTargetId; // 0x1C
	public int missionProgressType; // 0x20
	public long updatedAt; // 0x28
	public long createdAt; // 0x30

	// Methods

	// RVA: 0x15E1B68 Offset: 0x15E1B68 VA: 0x15E1B68
	public void .ctor() { }

	// RVA: 0x15E1BB8 Offset: 0x15E1BB8 VA: 0x15E1BB8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x15E1BCC Offset: 0x15E1BCC VA: 0x15E1BCC
	public static string CreatePK(long userId, int missionId) { }

	// RVA: 0x15E1BD8 Offset: 0x15E1BD8 VA: 0x15E1BD8
	public bool isClearMission() { }

	// RVA: 0x15E1BE8 Offset: 0x15E1BE8 VA: 0x15E1BE8
	public bool isAchieveMission() { }

	// RVA: 0x15E1BF8 Offset: 0x15E1BF8 VA: 0x15E1BF8
	public bool IsTodayMissionData() { }
}

// Namespace: 
public class UserEventMissionFixEntity : DataEntityBase<string> // TypeDefIndex: 7415
{
	// Fields
	public long userId; // 0x10
	public int missionId; // 0x18
	public int progressType; // 0x1C
	public int num; // 0x20

	// Methods

	// RVA: 0x15E1C9C Offset: 0x15E1C9C VA: 0x15E1C9C
	public void .ctor() { }

	// RVA: 0x15E1CEC Offset: 0x15E1CEC VA: 0x15E1CEC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x15E1D00 Offset: 0x15E1D00 VA: 0x15E1D00
	public static string CreatePK(long userId, int missionId) { }

	// RVA: 0x15E1D0C Offset: 0x15E1D0C VA: 0x15E1D0C
	public MissionProgressType.Type getProgressType() { }
}

// Namespace: 
public class UserEventMissionFixMaster : DataMasterBase<UserEventMissionFixMaster, UserEventMissionFixEntity, string> // TypeDefIndex: 7416
{
	// Methods

	// RVA: 0x15E1D14 Offset: 0x15E1D14 VA: 0x15E1D14
	public void .ctor() { }

	// RVA: 0x15E1D68 Offset: 0x15E1D68 VA: 0x15E1D68
	public UserEventMissionFixEntity GetEntity(long userId, int missionId) { }

	// RVA: 0x15E1DDC Offset: 0x15E1DDC VA: 0x15E1DDC
	public bool TryGetEntity(out UserEventMissionFixEntity entity, long userId, int missionId) { }

	// RVA: 0x15E1E60 Offset: 0x15E1E60 VA: 0x15E1E60
	public UserEventMissionFixEntity GetEntityFromId(long userId, int missionId) { }
}

// Namespace: 
public class UserEventMissionMaster : DataMasterBase<UserEventMissionMaster, UserEventMissionEntity, string> // TypeDefIndex: 7417
{
	// Methods

	// RVA: 0x15E1F98 Offset: 0x15E1F98 VA: 0x15E1F98
	public void .ctor() { }

	// RVA: 0x15E1FEC Offset: 0x15E1FEC VA: 0x15E1FEC
	public UserEventMissionEntity GetEntity(long userId, int missionId) { }

	// RVA: 0x15E2060 Offset: 0x15E2060 VA: 0x15E2060
	public bool TryGetEntity(out UserEventMissionEntity entity, long userId, int missionId) { }

	// RVA: 0x15E20E4 Offset: 0x15E20E4 VA: 0x15E20E4
	public UserEventMissionEntity getEntityFromId(long userId, int missionId) { }

	// RVA: 0x15E2240 Offset: 0x15E2240 VA: 0x15E2240
	public UserEventMissionEntity[] getUserEventMissionList(int eventId) { }

	// RVA: 0x15E23B8 Offset: 0x15E23B8 VA: 0x15E23B8
	public int getAchiveMissionNum(int eventId) { }

	// RVA: 0x15E23C0 Offset: 0x15E23C0 VA: 0x15E23C0
	public int getMissionProgressNum(int eventId, MissionProgressType.Type progress_type) { }

	// RVA: 0x15E2538 Offset: 0x15E2538 VA: 0x15E2538
	public int getDailyMissionAchiveNum(int eventId) { }

	// RVA: 0x15E26E4 Offset: 0x15E26E4 VA: 0x15E26E4
	public List<UserEventMissionEntity> getListFromMissionTargetId(int missionTargetId) { }
}

// Namespace: 
public class UserEventPointEntity : DataEntityBase<string> // TypeDefIndex: 7418
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int groupId; // 0x1C
	public long value; // 0x20

	// Methods

	// RVA: 0x15E28B8 Offset: 0x15E28B8 VA: 0x15E28B8
	public void .ctor() { }

	// RVA: 0x15E2908 Offset: 0x15E2908 VA: 0x15E2908
	public void .ctor(long userId, int eventId, int groupId) { }

	// RVA: 0x15E2984 Offset: 0x15E2984 VA: 0x15E2984
	public void .ctor(long userId, int eventId, int groupId, long value) { }

	// RVA: 0x15E2A04 Offset: 0x15E2A04 VA: 0x15E2A04 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x15E2A18 Offset: 0x15E2A18 VA: 0x15E2A18
	public static string CreatePK(long userId, int eventId, int groupId) { }
}

// Namespace: 
public class UserEventPointMaster : DataMasterBase<UserEventPointMaster, UserEventPointEntity, string> // TypeDefIndex: 7419
{
	// Methods

	// RVA: 0x15E2A28 Offset: 0x15E2A28 VA: 0x15E2A28
	public void .ctor() { }

	// RVA: 0x15E2A7C Offset: 0x15E2A7C VA: 0x15E2A7C
	public UserEventPointEntity GetEntity(long userId, int eventId, int groupId) { }

	// RVA: 0x15E2B00 Offset: 0x15E2B00 VA: 0x15E2B00
	public bool TryGetEntity(out UserEventPointEntity entity, long userId, int eventId, int groupId) { }

	// RVA: 0x15E2B8C Offset: 0x15E2B8C VA: 0x15E2B8C
	public UserEventPointEntity getEntityFromId(long userId, int eventId, int groupId) { }

	// RVA: 0x15E2EB4 Offset: 0x15E2EB4 VA: 0x15E2EB4
	public UserEventPointEntity GetEntityFromEventIdWithGroupId(long userId, int eventId, int groupId) { }

	// RVA: 0x15E31A8 Offset: 0x15E31A8 VA: 0x15E31A8
	public long GetPoint(long userId, int eventId, int groupId) { }

	// RVA: 0x15E32C8 Offset: 0x15E32C8 VA: 0x15E32C8
	public UserEventPointEntity GetTowerProgress(long userId, int eventId, int groupId) { }

	// RVA: 0x15E32CC Offset: 0x15E32CC VA: 0x15E32CC
	public long GetEventPointTotal(long userId, int eventId, int groupId = -1) { }

	// RVA: 0x15E3480 Offset: 0x15E3480 VA: 0x15E3480
	public static long GetEventPointNoGroup(int eventId) { }

	// RVA: 0x15E358C Offset: 0x15E358C VA: 0x15E358C
	public static long GetEventPoint(int eventId, int groupId) { }

	// RVA: 0x15E369C Offset: 0x15E369C VA: 0x15E369C
	public static long GetEventActivityPoint(int eventId) { }
}

// Namespace: 
public class UserEventQuestCooltimeEntity : DataEntityBase<string> // TypeDefIndex: 7420
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int questId; // 0x1C
	public int phase; // 0x20
	public long clearedAt; // 0x28

	// Methods

	// RVA: 0x15E37A8 Offset: 0x15E37A8 VA: 0x15E37A8
	public void .ctor() { }

	// RVA: 0x15E37F8 Offset: 0x15E37F8 VA: 0x15E37F8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x15E3810 Offset: 0x15E3810 VA: 0x15E3810
	public static string CreatePK(long userId, int eventId, int questId, int phase) { }

	// RVA: 0x15E3824 Offset: 0x15E3824 VA: 0x15E3824
	public EventQuestCooltimeEntity GetMasterEntity() { }

	// RVA: 0x15E3AC4 Offset: 0x15E3AC4 VA: 0x15E3AC4
	public QuestEntity GetQuestEntity() { }
}

// Namespace: 
public class UserEventQuestCooltimeMaster : DataMasterBase<UserEventQuestCooltimeMaster, UserEventQuestCooltimeEntity, string> // TypeDefIndex: 7421
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55FDC Offset: 0xC55FDC VA: 0xC55FDC
	private static Func<DataEntityBase, UserEventQuestCooltimeEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC55FEC Offset: 0xC55FEC VA: 0xC55FEC
	private static Func<DataEntityBase, UserEventQuestCooltimeEntity> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC55FFC Offset: 0xC55FFC VA: 0xC55FFC
	private static Func<DataEntityBase, UserEventQuestCooltimeEntity> <>f__am$cache2; // 0x10

	// Methods

	// RVA: 0x15E3B54 Offset: 0x15E3B54 VA: 0x15E3B54
	public void .ctor() { }

	// RVA: 0x15E3BA8 Offset: 0x15E3BA8 VA: 0x15E3BA8
	public UserEventQuestCooltimeEntity GetEntity(long userId, int eventId, int questId, int phase) { }

	// RVA: 0x15E3C34 Offset: 0x15E3C34 VA: 0x15E3C34
	public bool TryGetEntity(out UserEventQuestCooltimeEntity entity, long userId, int eventId, int questId, int phase) { }

	// RVA: 0x15E3CD0 Offset: 0x15E3CD0 VA: 0x15E3CD0
	public UserEventQuestCooltimeEntity getEntity(int eventId, int questId, int phase) { }

	// RVA: 0x15E3E50 Offset: 0x15E3E50 VA: 0x15E3E50
	public List<UserEventQuestCooltimeEntity> GetEntityList() { }

	// RVA: 0x15E3F1C Offset: 0x15E3F1C VA: 0x15E3F1C
	public UserEventQuestCooltimeEntity GetEntityFromSpotId(int spotId) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA998 Offset: 0xCCA998 VA: 0xCCA998
	// RVA: 0x15E4064 Offset: 0x15E4064 VA: 0x15E4064
	private static UserEventQuestCooltimeEntity <getEntity>m__0(DataEntityBase data) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA9A8 Offset: 0xCCA9A8 VA: 0xCCA9A8
	// RVA: 0x15E40E4 Offset: 0x15E40E4 VA: 0x15E40E4
	private static UserEventQuestCooltimeEntity <GetEntityList>m__1(DataEntityBase data) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA9B8 Offset: 0xCCA9B8 VA: 0xCCA9B8
	// RVA: 0x15E4164 Offset: 0x15E4164 VA: 0x15E4164
	private static UserEventQuestCooltimeEntity <GetEntityFromSpotId>m__2(DataEntityBase data) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42E14 Offset: 0xC42E14 VA: 0xC42E14
private sealed class UserEventQuestCooltimeMaster.<getEntity>c__AnonStorey0 // TypeDefIndex: 7422
{
	// Fields
	internal int eventId; // 0x10
	internal int questId; // 0x14
	internal int phase; // 0x18

	// Methods

	// RVA: 0x15E3E48 Offset: 0x15E3E48 VA: 0x15E3E48
	public void .ctor() { }

	// RVA: 0x15E4234 Offset: 0x15E4234 VA: 0x15E4234
	internal bool <>m__0(UserEventQuestCooltimeEntity entity) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42E24 Offset: 0xC42E24 VA: 0xC42E24
private sealed class UserEventQuestCooltimeMaster.<GetEntityFromSpotId>c__AnonStorey1 // TypeDefIndex: 7423
{
	// Fields
	internal int spotId; // 0x10

	// Methods

	// RVA: 0x15E405C Offset: 0x15E405C VA: 0x15E405C
	public void .ctor() { }

	// RVA: 0x15E41E4 Offset: 0x15E41E4 VA: 0x15E41E4
	internal bool <>m__0(UserEventQuestCooltimeEntity entity) { }
}

// Namespace: 
public class UserEventRaceEntity : DataEntityBase<string> // TypeDefIndex: 7424
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int termId; // 0x1C
	public long[] points; // 0x20

	// Methods

	// RVA: 0x15E4298 Offset: 0x15E4298 VA: 0x15E4298
	public void .ctor() { }

	// RVA: 0x15E42E8 Offset: 0x15E42E8 VA: 0x15E42E8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x15E42FC Offset: 0x15E42FC VA: 0x15E42FC
	public static string CreatePK(long userId, int eventId, int termId) { }
}

// Namespace: 
public class UserEventRaceMaster : DataMasterBase<UserEventRaceMaster, UserEventRaceEntity, string> // TypeDefIndex: 7425
{
	// Methods

	// RVA: 0x15E430C Offset: 0x15E430C VA: 0x15E430C
	public void .ctor() { }

	// RVA: 0x15E4360 Offset: 0x15E4360 VA: 0x15E4360
	public UserEventRaceEntity GetEntity(long userId, int eventId, int termId) { }

	// RVA: 0x15E43E4 Offset: 0x15E43E4 VA: 0x15E43E4
	public bool TryGetEntity(out UserEventRaceEntity entity, long userId, int eventId, int termId) { }

	// RVA: 0x15E4470 Offset: 0x15E4470 VA: 0x15E4470
	public int GetTotalMostProgressedGroupId(int eventId, int baseEventId) { }

	// RVA: 0x15E4914 Offset: 0x15E4914 VA: 0x15E4914
	public long[] GetUserRacePoints(int eventId, int term) { }

	// RVA: 0x15E4AC8 Offset: 0x15E4AC8 VA: 0x15E4AC8
	public long GetTotalRacePointInTerm(int eventId, int term) { }
}

// Namespace: 
public class UserEventRaidEntity : DataEntityBase<string> // TypeDefIndex: 7426
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int day; // 0x1C
	public long damage; // 0x20

	// Methods

	// RVA: 0x15E4B44 Offset: 0x15E4B44 VA: 0x15E4B44
	public void .ctor() { }

	// RVA: 0x15E4B94 Offset: 0x15E4B94 VA: 0x15E4B94 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x15E4BA8 Offset: 0x15E4BA8 VA: 0x15E4BA8
	public static string CreatePK(long userId, int eventId, int day) { }
}

// Namespace: 
public class UserEventRaidMaster : DataMasterBase<UserEventRaidMaster, UserEventRaidEntity, string> // TypeDefIndex: 7427
{
	// Methods

	// RVA: 0x15E4BB8 Offset: 0x15E4BB8 VA: 0x15E4BB8
	public void .ctor() { }

	// RVA: 0x15E4C0C Offset: 0x15E4C0C VA: 0x15E4C0C
	public UserEventRaidEntity GetEntity(long userId, int eventId, int day) { }

	// RVA: 0x15E4C90 Offset: 0x15E4C90 VA: 0x15E4C90
	public bool TryGetEntity(out UserEventRaidEntity entity, long userId, int eventId, int day) { }

	// RVA: 0x15E4D1C Offset: 0x15E4D1C VA: 0x15E4D1C
	public UserEventRaidEntity getEntityFromId(long userId, int eventId, int day) { }

	// RVA: 0x15E5010 Offset: 0x15E5010 VA: 0x15E5010
	public long getTotalDamagePoint(int eventId) { }

	// RVA: 0x15E524C Offset: 0x15E524C VA: 0x15E524C
	public long getDamagePoint(int eventId, int day) { }

	// RVA: 0x15E5328 Offset: 0x15E5328 VA: 0x15E5328
	public UserEventRaidEntity getEntityFromEventIdAndDay(int eventId, int day) { }
}

// Namespace: 
public class UserEventRandomMissionEntity : DataEntityBase<string> // TypeDefIndex: 7428
{
	// Fields
	public long userId; // 0x10
	public int missionId; // 0x18
	public int missionTargetId; // 0x1C
	public int status; // 0x20
	public int clearNum; // 0x24
	public long startedAt; // 0x28
	public long updatedAt; // 0x30
	public long createdAt; // 0x38

	// Methods

	// RVA: 0x15E54F8 Offset: 0x15E54F8 VA: 0x15E54F8
	public void .ctor() { }

	// RVA: 0x15E5548 Offset: 0x15E5548 VA: 0x15E5548 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x15E555C Offset: 0x15E555C VA: 0x15E555C
	public static string CreatePK(long userId, int missionId) { }

	// RVA: 0x15E5568 Offset: 0x15E5568 VA: 0x15E5568
	public bool IsInProgress() { }
}

// Namespace: 
public enum UserEventRandomMissionEntity.Status // TypeDefIndex: 7429
{
	// Fields
	public int value__; // 0x0
	public const UserEventRandomMissionEntity.Status NONE = 0;
	public const UserEventRandomMissionEntity.Status START = 1;
}

// Namespace: 
public class UserEventRandomMissionMaster : DataMasterBase<UserEventRandomMissionMaster, UserEventRandomMissionEntity, string> // TypeDefIndex: 7430
{
	// Methods

	// RVA: 0x15E5578 Offset: 0x15E5578 VA: 0x15E5578
	public void .ctor() { }

	// RVA: 0x15E55CC Offset: 0x15E55CC VA: 0x15E55CC
	public UserEventRandomMissionEntity GetEntity(long userId, int missionId) { }

	// RVA: 0x15E5640 Offset: 0x15E5640 VA: 0x15E5640
	public bool TryGetEntity(out UserEventRandomMissionEntity entity, long userId, int missionId) { }

	// RVA: 0x15E56C4 Offset: 0x15E56C4 VA: 0x15E56C4
	public List<UserEventRandomMissionEntity> GetUserEventRandomMissionList(int eventId, bool isProgress = False) { }

	// RVA: 0x15E5838 Offset: 0x15E5838 VA: 0x15E5838
	public List<UserEventRandomMissionEntity> GetUserEventRandomMissionProgressList(int eventId) { }

	// RVA: 0x15E5840 Offset: 0x15E5840 VA: 0x15E5840
	public int GetUserEventRandomMissionTotalClearCount(int eventId) { }

	// RVA: 0x15E5960 Offset: 0x15E5960 VA: 0x15E5960
	public UserEventRandomMissionEntity GetMissionEntity(int missionId) { }
}

// Namespace: 
public class UserEventServantFatigueEntity : DataEntityBase<int> // TypeDefIndex: 7431
{
	// Fields
	public int eventId; // 0x10
	public long[] recoveryUserSvtIds; // 0x18
	public Dictionary<string, object> recoveryUserSvtDic; // 0x20
	public EventServantFatigueInfo[] fatigueSvts; // 0x28

	// Methods

	// RVA: 0x15E5A6C Offset: 0x15E5A6C VA: 0x15E5A6C
	public void .ctor() { }

	// RVA: 0x15E5ABC Offset: 0x15E5ABC VA: 0x15E5ABC Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class UserEventServantFatigueMaster : DataMasterBase<UserEventServantFatigueMaster, UserEventServantFatigueEntity, int> // TypeDefIndex: 7432
{
	// Methods

	// RVA: 0x15E5AC4 Offset: 0x15E5AC4 VA: 0x15E5AC4
	public void .ctor() { }

	// RVA: 0x15E5B18 Offset: 0x15E5B18 VA: 0x15E5B18
	public bool GetFatigueInfo(out long recoverAt, out bool isRecover, int eventId, int svtId) { }

	// RVA: 0x15E5F14 Offset: 0x15E5F14 VA: 0x15E5F14
	public bool IsRecoverUserServant(int eventId, long userSvtId) { }

	// RVA: 0x15E6044 Offset: 0x15E6044 VA: 0x15E6044
	public long[] GetRecoverySvtIdList(int eventId) { }

	// RVA: 0x15E6374 Offset: 0x15E6374 VA: 0x15E6374
	public Dictionary<int, long> GetRecoveryUserSvtDic(int eventId) { }

	// RVA: 0x15E6754 Offset: 0x15E6754 VA: 0x15E6754
	public long GetFatigueAllRecoverTime() { }
}

// Namespace: 
public class UserEventServantPointEntity : DataEntityBase<string> // TypeDefIndex: 7433
{
	// Fields
	private static long MAX_BUDDY_POINT; // 0x0
	public ObscuredLong userId; // 0x10
	public int eventId; // 0x30
	public int svtId; // 0x34
	public long value; // 0x38

	// Methods

	// RVA: 0x15E6BB4 Offset: 0x15E6BB4 VA: 0x15E6BB4
	public void .ctor() { }

	// RVA: 0x15E6C04 Offset: 0x15E6C04 VA: 0x15E6C04 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x15E6CD8 Offset: 0x15E6CD8 VA: 0x15E6CD8
	public static string CreatePK(long userId, int eventId, int svtId) { }

	// RVA: 0x15E6CE8 Offset: 0x15E6CE8 VA: 0x15E6CE8
	private int GetIntValue(long maxValue = 0) { }

	// RVA: 0x15E6D7C Offset: 0x15E6D7C VA: 0x15E6D7C
	public int GetBuddyPoint() { }

	// RVA: 0x15E6DEC Offset: 0x15E6DEC VA: 0x15E6DEC
	private static void .cctor() { }
}

// Namespace: 
public class UserEventServantPointMaster : DataMasterBase<UserEventServantPointMaster, UserEventServantPointEntity, string> // TypeDefIndex: 7434
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC5600C Offset: 0xC5600C VA: 0xC5600C
	private static Func<DataEntityBase, UserEventServantPointEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC5601C Offset: 0xC5601C VA: 0xC5601C
	private static Func<UserEventServantPointEntity, long> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC5602C Offset: 0xC5602C VA: 0xC5602C
	private static Func<DataEntityBase, UserEventServantPointEntity> <>f__am$cache2; // 0x10

	// Methods

	// RVA: 0x15E6E44 Offset: 0x15E6E44 VA: 0x15E6E44
	public void .ctor() { }

	// RVA: 0x15E6E98 Offset: 0x15E6E98 VA: 0x15E6E98
	public UserEventServantPointEntity GetEntity(long userId, int eventId, int svtId) { }

	// RVA: 0x15E6F3C Offset: 0x15E6F3C VA: 0x15E6F3C
	public bool TryGetEntity(out UserEventServantPointEntity entity, long userId, int eventId, int svtId) { }

	// RVA: 0x15E6FE8 Offset: 0x15E6FE8 VA: 0x15E6FE8
	public UserEventServantPointEntity GetBestServantPointEntity(long userId, int eventId) { }

	// RVA: 0x15E72B0 Offset: 0x15E72B0 VA: 0x15E72B0
	public bool IsAnyExist(long userId, int eventId) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA9C8 Offset: 0xCCA9C8 VA: 0xCCA9C8
	// RVA: 0x15E7450 Offset: 0x15E7450 VA: 0x15E7450
	private static UserEventServantPointEntity <GetBestServantPointEntity>m__0(DataEntityBase entity) { }
