
	// RVA: 0x208FFF8 Offset: 0x208FFF8 VA: 0x208FFF8
	private static void .cctor() { }
}

// Namespace: 
public class UIExtrusionLabel : UILabel // TypeDefIndex: 7815
{
	// Fields
	[SerializeField] // RVA: 0xCC3638 Offset: 0xCC3638 VA: 0xCC3638
	protected GameObject extrusionObject; // 0x298
	[SerializeField] // RVA: 0xCC3648 Offset: 0xCC3648 VA: 0xCC3648
	protected int extrusionBlankSize; // 0x2A0

	// Properties
	public string text { get; set; }

	// Methods

	// RVA: 0x2092A6C Offset: 0x2092A6C VA: 0x2092A6C
	public void .ctor() { }

	// RVA: 0x2092ADC Offset: 0x2092ADC VA: 0x2092ADC
	public string get_text() { }

	// RVA: 0x2092AE4 Offset: 0x2092AE4 VA: 0x2092AE4
	public void set_text(string value) { }
}

// Namespace: 
public class UIHorizontalImageM : UIHorizontalImageRender // TypeDefIndex: 7816
{
	// Fields
	protected AssetData[] assetDataList; // 0x1F0
	protected string[] loadNameList; // 0x1F8
	protected Action callbackFunc; // 0x200

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x214D708 Offset: 0x214D708 VA: 0x214D708
	public void .ctor() { }

	// RVA: 0x214D7DC Offset: 0x214D7DC VA: 0x214D7DC
	public bool get_IsLoad() { }

	// RVA: 0x214D7EC Offset: 0x214D7EC VA: 0x214D7EC
	public void Destroy() { }

	// RVA: 0x214D8A8 Offset: 0x214D8A8 VA: 0x214D8A8
	protected void OnDestroy() { }

	// RVA: 0x214D7F0 Offset: 0x214D7F0 VA: 0x214D7F0
	public void ReleaseCharacter() { }

	// RVA: 0x214DAFC Offset: 0x214DAFC VA: 0x214DAFC
	public void SetCharacter(string imageName, Face.Type faceType, Action callbackFunc) { }

	// RVA: 0x214DFD4 Offset: 0x214DFD4 VA: 0x214DFD4
	protected void EndLoadAsset() { }

	// RVA: 0x214E0F8 Offset: 0x214E0F8 VA: 0x214E0F8
	protected void SetTexture() { }

	// RVA: 0x214DEF4 Offset: 0x214DEF4 VA: 0x214DEF4
	protected void SetTextureStatus() { }

	// RVA: 0x214F1C0 Offset: 0x214F1C0 VA: 0x214F1C0
	public void SetDispOffset() { }
}

// Namespace: 
public class UIHorizontalImageRender : UITweenRenderer // TypeDefIndex: 7817
{
	// Fields
	[SerializeField] // RVA: 0xCC3658 Offset: 0xCC3658 VA: 0xCC3658
	protected MeshFilter bodyFilter; // 0x188
	[SerializeField] // RVA: 0xCC3668 Offset: 0xCC3668 VA: 0xCC3668
	protected MeshRenderer bodyRenderer; // 0x190
	public static readonly int MAIN_SIZE_X; // 0x0
	public static readonly int MAIN_SIZE_Y; // 0x4
	public static readonly int BODY_SIZE_X; // 0x8
	public static readonly int BODY_SIZE_Y; // 0xC
	public static readonly int OVERLAP_U; // 0x10
	public static readonly int LEFT_X; // 0x14
	public static readonly int RIGHT_X; // 0x18
	public static readonly int RIGHT_X2; // 0x1C
	public static readonly int TOP_Y; // 0x20
	public static readonly int BOTTOM_Y; // 0x24
	public static readonly float BODY_U; // 0x28
	public static readonly float BODY_V; // 0x2C
	public static readonly float BODY_U2; // 0x30
	public static readonly float BODY_V2; // 0x34
	public static readonly float BODY_W; // 0x38
	public static readonly float BODY_H; // 0x3C
	protected bool isShadow; // 0x198
	protected bool isTalkMask; // 0x199
	protected string filterName; // 0x1A0
	protected Color filterColor; // 0x1A8
	protected Vector2 figureOffset; // 0x1B8
	protected Vector2 dispOffset; // 0x1C0
	protected Vector2 dispTop; // 0x1C8
	protected Texture2D[] textureList; // 0x1D0
	protected bool isBusyMoveAlpha; // 0x1D8
	protected GameObject moveAlphaCallbackObject; // 0x1E0
	protected string moveAlphaCallbackFunc; // 0x1E8

	// Methods

	// RVA: 0x214D76C Offset: 0x214D76C VA: 0x214D76C
	public void .ctor() { }

	// RVA: 0x214DDA4 Offset: 0x214DDA4 VA: 0x214DDA4
	public static string[] GetAssetNameList(string imageName) { }

	// RVA: 0x214F298 Offset: 0x214F298 VA: 0x214F298
	public bool IsBusyMoveAlpha() { }

	// RVA: 0x214F2A0 Offset: 0x214F2A0 VA: 0x214F2A0
	public Vector2 GetCenterOffset() { }

	// RVA: 0x214F33C Offset: 0x214F33C VA: 0x214F33C
	public static Vector2 GetCharacterOffset() { }

	// RVA: 0x214F370 Offset: 0x214F370 VA: 0x214F370
	public static Vector2 GetCharacterOffsetMyroom() { }

	// RVA: 0x214F3A4 Offset: 0x214F3A4 VA: 0x214F3A4 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x214F4B8 Offset: 0x214F4B8 VA: 0x214F4B8
	public Vector2 GetBodySize() { }

	// RVA: 0x214F53C Offset: 0x214F53C VA: 0x214F53C
	public void SetActive(bool isActive) { }

	// RVA: 0x214D8AC Offset: 0x214D8AC VA: 0x214D8AC
	public void ReleaseCharacter() { }

	// RVA: 0x214F58C Offset: 0x214F58C VA: 0x214F58C
	public void SetCharacter(string imageName, Face.Type faceType, Texture2D[] textureList) { }

	// RVA: 0x214E2F0 Offset: 0x214E2F0 VA: 0x214E2F0
	protected void SetCharacterRender() { }

	// RVA: 0x214F748 Offset: 0x214F748 VA: 0x214F748
	public void SetSharder(string shaderName) { }

	// RVA: 0x214F8C4 Offset: 0x214F8C4 VA: 0x214F8C4
	public void RecoverSharder() { }

	// RVA: 0x214F99C Offset: 0x214F99C VA: 0x214F99C
	public void SetWipeTexture(Texture texture) { }

	// RVA: 0x214FBE0 Offset: 0x214FBE0 VA: 0x214FBE0
	public void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x214F598 Offset: 0x214F598 VA: 0x214F598
	public void SetBaseColor() { }

	// RVA: 0x214FC38 Offset: 0x214FC38 VA: 0x214FC38
	public void SetShadow(bool isShadow) { }

	// RVA: 0x214FC44 Offset: 0x214FC44 VA: 0x214FC44
	public void SetTalkMask(bool isMask) { }

	// RVA: 0x214FC50 Offset: 0x214FC50 VA: 0x214FC50
	public void SetAlpha(float alpha) { }

	// RVA: 0x214F670 Offset: 0x214F670 VA: 0x214F670
	public void SetFilterColor(Color c) { }

	// RVA: 0x214FC94 Offset: 0x214FC94 VA: 0x214FC94
	public void SetGradation(float g) { }

	// RVA: 0x214FD78 Offset: 0x214FD78 VA: 0x214FD78
	public void SetVolume(float v) { }

	// RVA: 0x214FE5C Offset: 0x214FE5C VA: 0x214FE5C
	public void SetDepth(float d) { }

	// RVA: 0x214FEE4 Offset: 0x214FEE4 VA: 0x214FEE4
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x21501A0 Offset: 0x21501A0 VA: 0x21501A0
	public void MoveAlphaSpeed(float speed, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x21500E8 Offset: 0x21500E8 VA: 0x21500E8
	protected void EndMoveAlpha() { }

	// RVA: 0x21503B8 Offset: 0x21503B8 VA: 0x21503B8
	public void SetLayer(int layer) { }

	// RVA: 0x2150430 Offset: 0x2150430 VA: 0x2150430
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x2150730 Offset: 0x2150730 VA: 0x2150730
	public void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x21507D0 Offset: 0x21507D0 VA: 0x21507D0
	public void SetSortingOrder(int order) { }

	// RVA: 0x2150808 Offset: 0x2150808 VA: 0x2150808
	private static void .cctor() { }
}

// Namespace: 
public class UIImageM : UIImageRender // TypeDefIndex: 7818
{
	// Fields
	protected AssetData[] assetDataList; // 0x1F0
	protected string[] loadNameList; // 0x1F8
	protected Action callbackFunc; // 0x200
	protected bool isBackImage; // 0x208

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x2153524 Offset: 0x2153524 VA: 0x2153524
	public void .ctor() { }

	// RVA: 0x21535F8 Offset: 0x21535F8 VA: 0x21535F8
	public bool get_IsLoad() { }

	// RVA: 0x2153608 Offset: 0x2153608 VA: 0x2153608
	public void Destroy() { }

	// RVA: 0x21536C4 Offset: 0x21536C4 VA: 0x21536C4
	protected void OnDestroy() { }

	// RVA: 0x215360C Offset: 0x215360C VA: 0x215360C
	public void ReleaseCharacter() { }

	// RVA: 0x2153918 Offset: 0x2153918 VA: 0x2153918
	public void SetCharacter(string imageName, Face.Type faceType, Action callbackFunc) { }

	// RVA: 0x2153E88 Offset: 0x2153E88 VA: 0x2153E88
	protected void EndLoadAsset() { }

	// RVA: 0x2153FAC Offset: 0x2153FAC VA: 0x2153FAC
	protected void SetTexture() { }

	// RVA: 0x2153DA8 Offset: 0x2153DA8 VA: 0x2153DA8
	protected void SetTextureStatus() { }

	// RVA: 0x2154BD0 Offset: 0x2154BD0 VA: 0x2154BD0
	public void SetDispOffset() { }
}

// Namespace: 
public class UIImageRender : UITweenRenderer // TypeDefIndex: 7819
{
	// Fields
	[SerializeField] // RVA: 0xCC3678 Offset: 0xCC3678 VA: 0xCC3678
	protected MeshFilter bodyFilter; // 0x188
	[SerializeField] // RVA: 0xCC3688 Offset: 0xCC3688 VA: 0xCC3688
	protected MeshRenderer bodyRenderer; // 0x190
	public static readonly int MAIN_SIZE_X; // 0x0
	public static readonly int MAIN_SIZE_Y; // 0x4
	public static readonly int BODY_SIZE_X; // 0x8
	public static readonly int BODY_SIZE_Y; // 0xC
	public static readonly int LEFT_X; // 0x10
	public static readonly int RIGHT_X; // 0x14
	public static readonly int TOP_Y; // 0x18
	public static readonly int BOTTOM_Y; // 0x1C
	public static readonly float BODY_U; // 0x20
	public static readonly float BODY_V; // 0x24
	public static readonly float BODY_W; // 0x28
	public static readonly float BODY_H; // 0x2C
	protected bool isShadow; // 0x198
	protected bool isTalkMask; // 0x199
	protected string filterName; // 0x1A0
	protected Color filterColor; // 0x1A8
	protected Vector2 figureOffset; // 0x1B8
	protected Vector2 dispOffset; // 0x1C0
	protected Vector2 dispTop; // 0x1C8
	protected Texture2D[] textureList; // 0x1D0
	protected bool isBusyMoveAlpha; // 0x1D8
	protected GameObject moveAlphaCallbackObject; // 0x1E0
	protected string moveAlphaCallbackFunc; // 0x1E8

	// Methods

	// RVA: 0x2153588 Offset: 0x2153588 VA: 0x2153588
	public void .ctor() { }

	// RVA: 0x2153C58 Offset: 0x2153C58 VA: 0x2153C58
	public static string[] GetAssetNameList(string imageName) { }

	// RVA: 0x2154CA8 Offset: 0x2154CA8 VA: 0x2154CA8
	public bool IsBusyMoveAlpha() { }

	// RVA: 0x2154CB0 Offset: 0x2154CB0 VA: 0x2154CB0
	public Vector2 GetCenterOffset() { }

	// RVA: 0x2154D4C Offset: 0x2154D4C VA: 0x2154D4C
	public static Vector2 GetCharacterOffset() { }

	// RVA: 0x2154D80 Offset: 0x2154D80 VA: 0x2154D80
	public static Vector2 GetCharacterOffsetMyroom() { }

	// RVA: 0x2154DB4 Offset: 0x2154DB4 VA: 0x2154DB4 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x2154EC8 Offset: 0x2154EC8 VA: 0x2154EC8
	public Vector2 GetBodySize() { }

	// RVA: 0x2154F4C Offset: 0x2154F4C VA: 0x2154F4C
	public void SetActive(bool isActive) { }

	// RVA: 0x21536C8 Offset: 0x21536C8 VA: 0x21536C8
	public void ReleaseCharacter() { }

	// RVA: 0x2154F9C Offset: 0x2154F9C VA: 0x2154F9C
	public void SetCharacter(string imageName, Face.Type faceType, Texture2D[] textureList) { }

	// RVA: 0x21541A8 Offset: 0x21541A8 VA: 0x21541A8
	protected void SetCharacterRender() { }

	// RVA: 0x2155158 Offset: 0x2155158 VA: 0x2155158
	public void SetSharder(string shaderName) { }

	// RVA: 0x21552D4 Offset: 0x21552D4 VA: 0x21552D4
	public void RecoverSharder() { }

	// RVA: 0x21553AC Offset: 0x21553AC VA: 0x21553AC
	public void SetWipeTexture(Texture texture) { }

	// RVA: 0x21555F0 Offset: 0x21555F0 VA: 0x21555F0
	public void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x2154FA8 Offset: 0x2154FA8 VA: 0x2154FA8
	public void SetBaseColor() { }

	// RVA: 0x2155648 Offset: 0x2155648 VA: 0x2155648
	public void SetShadow(bool isShadow) { }

	// RVA: 0x2155654 Offset: 0x2155654 VA: 0x2155654
	public void SetTalkMask(bool isMask) { }

	// RVA: 0x2155660 Offset: 0x2155660 VA: 0x2155660
	public void SetAlpha(float alpha) { }

	// RVA: 0x2155080 Offset: 0x2155080 VA: 0x2155080
	public void SetFilterColor(Color c) { }

	// RVA: 0x21556A4 Offset: 0x21556A4 VA: 0x21556A4
	public void SetGradation(float g) { }

	// RVA: 0x2155788 Offset: 0x2155788 VA: 0x2155788
	public void SetVolume(float v) { }

	// RVA: 0x215586C Offset: 0x215586C VA: 0x215586C
	public void SetDepth(float d) { }

	// RVA: 0x21558F4 Offset: 0x21558F4 VA: 0x21558F4
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x2155BB0 Offset: 0x2155BB0 VA: 0x2155BB0
	public void MoveAlphaSpeed(float speed, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x2155AF8 Offset: 0x2155AF8 VA: 0x2155AF8
	protected void EndMoveAlpha() { }

	// RVA: 0x2155DC8 Offset: 0x2155DC8 VA: 0x2155DC8
	public void SetLayer(int layer) { }

	// RVA: 0x2155E40 Offset: 0x2155E40 VA: 0x2155E40
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x2156140 Offset: 0x2156140 VA: 0x2156140
	public void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x21561E0 Offset: 0x21561E0 VA: 0x21561E0
	public void SetSortingOrder(int order) { }

	// RVA: 0x2156218 Offset: 0x2156218 VA: 0x2156218
	private static void .cctor() { }
}

// Namespace: 
[RequireComponent] // RVA: 0xC91CBC Offset: 0xC91CBC VA: 0xC91CBC
[AddComponentMenu] // RVA: 0xC91CBC Offset: 0xC91CBC VA: 0xC91CBC
public class UILineInput : MonoBehaviour // TypeDefIndex: 7820
{
	// Fields
	protected UIInput mInput; // 0x18

	// Methods

	// RVA: 0x2163AF4 Offset: 0x2163AF4 VA: 0x2163AF4
	public void .ctor() { }

	// RVA: 0x2163AFC Offset: 0x2163AFC VA: 0x2163AFC
	protected bool Init() { }

	// RVA: 0x2163C08 Offset: 0x2163C08 VA: 0x2163C08
	public void SetInputEnable(bool flag) { }

	// RVA: 0x2163CB8 Offset: 0x2163CB8 VA: 0x2163CB8
	public string GetText() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC91D44 Offset: 0xC91D44 VA: 0xC91D44
public class UILoopListView : MonoBehaviour // TypeDefIndex: 7821
{
	// Fields
	private int itemSize; // 0x18
	protected int minIndex; // 0x1C
	protected int maxIndex; // 0x20
	public UILoopListView.OnInitializeItem onInitializeItem; // 0x28
	private Transform mTrans; // 0x30
	private UIPanel mPanel; // 0x38
	private UIScrollView mScroll; // 0x40
	private UICenterOnChild centerChild; // 0x48
	private bool isHorizontal; // 0x50
	private List<Transform> mChildList; // 0x58
	private List<Transform> realChildList; // 0x60
	private bool isFirstTime; // 0x68
	private int childIdx; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCC3698 Offset: 0xCC3698 VA: 0xCC3698
	private static Comparison<Transform> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x21642E8 Offset: 0x21642E8 VA: 0x21642E8
	public void .ctor() { }

	// RVA: 0x2164388 Offset: 0x2164388 VA: 0x2164388
	public void initWrapContent() { }

	// RVA: 0x2164D24 Offset: 0x2164D24 VA: 0x2164D24
	private bool setScrollViewInfo() { }

	// RVA: 0x21644D0 Offset: 0x21644D0 VA: 0x21644D0
	private void sortBaseOnMovement() { }

	// RVA: 0x2164EEC Offset: 0x2164EEC VA: 0x2164EEC
	public void resetChildPos() { }

	// RVA: 0x21646B4 Offset: 0x21646B4 VA: 0x21646B4
	private void wrapContent() { }

	// RVA: 0x2165184 Offset: 0x2165184 VA: 0x2165184
	private void OnMove() { }

	// RVA: 0x2165038 Offset: 0x2165038 VA: 0x2165038
	private void updateItem(Transform item, int index) { }

	// RVA: 0x2165578 Offset: 0x2165578 VA: 0x2165578
	public int getChildIdx() { }

	// RVA: 0x2165580 Offset: 0x2165580 VA: 0x2165580
	public void setScrollPos(int idx) { }

	[CompilerGeneratedAttribute] // RVA: 0xD38474 Offset: 0xD38474 VA: 0xD38474
	// RVA: 0x2165650 Offset: 0x2165650 VA: 0x2165650
	private static int <sortBaseOnMovement>m__0(Transform a, Transform b) { }
}

// Namespace: 
public sealed class UILoopListView.OnInitializeItem : MulticastDelegate // TypeDefIndex: 7822
{
	// Methods

	// RVA: 0x21656B0 Offset: 0x21656B0 VA: 0x21656B0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2165188 Offset: 0x2165188 VA: 0x2165188 Slot: 11
	public virtual void Invoke(GameObject go, int wrapIndex, int realIndex) { }

	// RVA: 0x21656C0 Offset: 0x21656C0 VA: 0x21656C0 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, int wrapIndex, int realIndex, AsyncCallback callback, object object) { }

	// RVA: 0x2165774 Offset: 0x2165774 VA: 0x2165774 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class UIMasterFaceRender : UITweenRenderer // TypeDefIndex: 7823
{
	// Fields
	protected static readonly int MAIN_SIZE_X; // 0x0
	protected static readonly int MAIN_SIZE_Y; // 0x4
	protected static readonly int BODY_SIZE_X; // 0x8
	protected static readonly int BODY_SIZE_Y; // 0xC
	protected static readonly ReadOnlyCollection<Vector2> bodyTopTable; // 0x10
	protected static readonly ReadOnlyCollection<Vector2> bodyTextureSizeTable; // 0x18
	protected static readonly ReadOnlyCollection<Vector2> bodySizeTable; // 0x20
	protected UIMasterFaceRender.DispType dispType; // 0x184
	protected int genderType; // 0x188
	protected int equipId; // 0x18C

	// Methods

	// RVA: 0x2165780 Offset: 0x2165780 VA: 0x2165780
	public void .ctor() { }

	// RVA: 0x2165788 Offset: 0x2165788 VA: 0x2165788
	public static string[] GetAssetNameList(UIMasterFaceRender.DispType dispType, int genderType, int equipId, int overWriteImageId = 0) { }

	// RVA: 0x2165B30 Offset: 0x2165B30 VA: 0x2165B30
	public void SetCharacter(UIMasterFaceRender.DispType dispType, int genderType, int equipId) { }

	// RVA: 0x2165B40 Offset: 0x2165B40 VA: 0x2165B40
	public Vector2 GetBodySize() { }

	// RVA: 0x2165BD0 Offset: 0x2165BD0 VA: 0x2165BD0
	public Rect GetBodyUvRect() { }

	// RVA: 0x2165D28 Offset: 0x2165D28 VA: 0x2165D28
	public Texture2D GetBodyTexture(AssetData[] dataList) { }

	// RVA: 0x2165DAC Offset: 0x2165DAC VA: 0x2165DAC
	public Texture2D GetMaskTexture(AssetData[] dataList) { }

	// RVA: 0x2165E58 Offset: 0x2165E58 VA: 0x2165E58
	public void SetAlpha(float alpha) { }

	// RVA: 0x2165E9C Offset: 0x2165E9C VA: 0x2165E9C
	public void MoveAlpha(float duration, float alpha) { }

	// RVA: 0x2165F50 Offset: 0x2165F50 VA: 0x2165F50
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x2166124 Offset: 0x2166124 VA: 0x2166124
	public void SetLayer(int layer) { }

	// RVA: 0x216619C Offset: 0x216619C VA: 0x216619C
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x216649C Offset: 0x216649C VA: 0x216649C
	private static void .cctor() { }
}

// Namespace: 
public enum UIMasterFaceRender.DispType // TypeDefIndex: 7824
{
	// Fields
	public int value__; // 0x0
	public const UIMasterFaceRender.DispType FULL = 0;
	public const UIMasterFaceRender.DispType STATUS = 1;
}

// Namespace: 
public class UIMasterFaceTexture : UIMasterFaceRender // TypeDefIndex: 7825
{
	// Fields
	[SerializeField] // RVA: 0xCC36A8 Offset: 0xCC36A8 VA: 0xCC36A8
	protected UITexture bodyTexture; // 0x190
	protected AssetData[] assetDataList; // 0x198
	protected string[] loadNameList; // 0x1A0
	protected Action callbackFunc; // 0x1A8

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x2166734 Offset: 0x2166734 VA: 0x2166734
	public void .ctor() { }

	// RVA: 0x216679C Offset: 0x216679C VA: 0x216679C Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x2166808 Offset: 0x2166808 VA: 0x2166808
	public bool get_IsLoad() { }

	// RVA: 0x2166818 Offset: 0x2166818 VA: 0x2166818
	public void Destroy() { }

	// RVA: 0x216681C Offset: 0x216681C VA: 0x216681C
	protected void OnDestroy() { }

	// RVA: 0x2166B18 Offset: 0x2166B18 VA: 0x2166B18
	public void SetActive(bool isActive) { }

	// RVA: 0x2166820 Offset: 0x2166820 VA: 0x2166820
	public void ReleaseCharacter() { }

	// RVA: 0x2166B68 Offset: 0x2166B68 VA: 0x2166B68
	public void SetCharacter(UIMasterFaceRender.DispType dispType, int genderType, int equipId, Action callbackFunc, int overWriteImageId) { }

	// RVA: 0x2166CF4 Offset: 0x2166CF4 VA: 0x2166CF4
	protected void EndLoadAsset() { }

	// RVA: 0x2167020 Offset: 0x2167020 VA: 0x2167020
	public void SetDepth(int d) { }
}

// Namespace: 
public class UIMasterFigureRenderOld : UITweenRenderer // TypeDefIndex: 7826
{
	// Fields
	protected static readonly int MAIN_SIZE_X; // 0x0
	protected static readonly int MAIN_SIZE_Y; // 0x4
	protected static readonly int BODY_SIZE_X; // 0x8
	protected static readonly int BODY_SIZE_Y; // 0xC
	protected static readonly ReadOnlyCollection<Vector2> bodyTopTable; // 0x10
	protected static readonly ReadOnlyCollection<Vector2> bodyTextureSizeTable; // 0x18
	protected static readonly ReadOnlyCollection<Vector2> bodySizeTable; // 0x20
	protected UIMasterFigureRenderOld.DispType dispType; // 0x184
	protected int genderType; // 0x188
	protected int equipId; // 0x18C
	protected Vector2 dispOffset; // 0x190

	// Methods

	// RVA: 0x2167058 Offset: 0x2167058 VA: 0x2167058
	public void .ctor() { }

	// RVA: 0x2167060 Offset: 0x2167060 VA: 0x2167060
	public static string[] GetAssetNameList(int genderType, int equipId, int overWriteEquipId = 0) { }

	// RVA: 0x2167360 Offset: 0x2167360 VA: 0x2167360
	public static string[] GetEnemyAssetNameList(int enemyFaceId) { }

	// RVA: 0x2167478 Offset: 0x2167478 VA: 0x2167478
	public void SetCharacter(UIMasterFigureRenderOld.DispType dispType, int genderType, int equipId) { }

	// RVA: 0x2167708 Offset: 0x2167708 VA: 0x2167708
	public void SetEnemy(int enemyBattleId) { }

	// RVA: 0x2167858 Offset: 0x2167858 VA: 0x2167858
	public Vector2 GetBodySize() { }

	// RVA: 0x21678E8 Offset: 0x21678E8 VA: 0x21678E8
	public Rect GetBodyUvRect() { }

	// RVA: 0x2167A48 Offset: 0x2167A48 VA: 0x2167A48
	public Texture2D GetBodyTexture(AssetData[] dataList) { }

	// RVA: 0x2167B08 Offset: 0x2167B08 VA: 0x2167B08
	public Texture2D GetBodyAlphaTexture(AssetData[] dataList) { }

	// RVA: 0x2167C04 Offset: 0x2167C04 VA: 0x2167C04
	public void SetAlpha(float alpha) { }

	// RVA: 0x2167C48 Offset: 0x2167C48 VA: 0x2167C48
	public void MoveAlpha(float duration, float alpha) { }

	// RVA: 0x2167CFC Offset: 0x2167CFC VA: 0x2167CFC
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x2167ED0 Offset: 0x2167ED0 VA: 0x2167ED0
	public void SetLayer(int layer) { }

	// RVA: 0x2167F48 Offset: 0x2167F48 VA: 0x2167F48
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x2168248 Offset: 0x2168248 VA: 0x2168248
	private static void .cctor() { }
}

// Namespace: 
public enum UIMasterFigureRenderOld.DispType // TypeDefIndex: 7827
{
	// Fields
	public int value__; // 0x0
	public const UIMasterFigureRenderOld.DispType FULL = 0;
	public const UIMasterFigureRenderOld.DispType USER_SELECT = 1;
	public const UIMasterFigureRenderOld.DispType MY_ROOM = 2;
}

// Namespace: 
public class UIMasterFigureTextureOld : UIMasterFigureRenderOld // TypeDefIndex: 7828
{
	// Fields
	[SerializeField] // RVA: 0xCC36B8 Offset: 0xCC36B8 VA: 0xCC36B8
	protected UITexture bodyTexture; // 0x198
	protected AssetData[] assetDataList; // 0x1A0
	protected string[] loadNameList; // 0x1A8
	protected Action onLoadCallbackFunc; // 0x1B0

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x216859C Offset: 0x216859C VA: 0x216859C
	public void .ctor() { }

	// RVA: 0x2168604 Offset: 0x2168604 VA: 0x2168604 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x2168670 Offset: 0x2168670 VA: 0x2168670
	public bool get_IsLoad() { }

	// RVA: 0x2168680 Offset: 0x2168680 VA: 0x2168680
	public void Destroy() { }

	// RVA: 0x21688F4 Offset: 0x21688F4 VA: 0x21688F4
	protected void OnDestroy() { }

	// RVA: 0x21688F8 Offset: 0x21688F8 VA: 0x21688F8
	public void SetActive(bool isActive) { }

	// RVA: 0x2168684 Offset: 0x2168684 VA: 0x2168684
	public void ReleaseCharacter() { }

	// RVA: 0x2168948 Offset: 0x2168948 VA: 0x2168948
	public void SetCharacter(UIMasterFigureRenderOld.DispType dispType, int genderType, int equipId, Action callbackFunc, int overWriteEquipId = 0) { }

	// RVA: 0x2168C84 Offset: 0x2168C84 VA: 0x2168C84
	public void SetEnemy(int enemyFaceId, int battleId, Action callbackFunc) { }

	// RVA: 0x2168A08 Offset: 0x2168A08 VA: 0x2168A08
	protected void StartLoadAsset(string[] loadNameList, Action callbackFunc) { }

	// RVA: 0x2168F14 Offset: 0x2168F14 VA: 0x2168F14
	protected void EndLoadAsset() { }

	// RVA: 0x2169038 Offset: 0x2169038 VA: 0x2169038
	protected void SetTexture() { }

	// RVA: 0x2168D24 Offset: 0x2168D24 VA: 0x2168D24
	protected void SetTextureStatus() { }

	// RVA: 0x2169174 Offset: 0x2169174 VA: 0x2169174
	public void SetDepth(int d) { }

	// RVA: 0x21691AC Offset: 0x21691AC VA: 0x21691AC
	public void SetOffsetDirect(Vector3 offset) { }

	// RVA: 0x216921C Offset: 0x216921C VA: 0x216921C
	public void SetSizeDirect(int width, int height) { }
}

// Namespace: 
public class UIMasterFullFigureRender : UITweenRenderer // TypeDefIndex: 7829
{
	// Fields
	protected static readonly int MAIN_SIZE_X; // 0x0
	protected static readonly int MAIN_SIZE_Y; // 0x4
	protected static readonly int BODY_SIZE_X; // 0x8
	protected static readonly int BODY_SIZE_Y; // 0xC
	protected static readonly ReadOnlyCollection<Vector2> bodyTopTable; // 0x10
	protected static readonly ReadOnlyCollection<Vector2> bodyTextureSizeTable; // 0x18
	protected static readonly ReadOnlyCollection<Vector2> bodySizeTable; // 0x20
	protected UIMasterFullFigureRender.DispType dispType; // 0x184
	protected int genderType; // 0x188
	protected int equipId; // 0x18C
	protected Vector2 dispOffset; // 0x190

	// Methods

	// RVA: 0x21A7848 Offset: 0x21A7848 VA: 0x21A7848
	public void .ctor() { }

	// RVA: 0x21A7850 Offset: 0x21A7850 VA: 0x21A7850
	public static string[] GetAssetNameList(int genderType, int equipId) { }

	// RVA: 0x21A7B30 Offset: 0x21A7B30 VA: 0x21A7B30
	public void SetCharacter(UIMasterFullFigureRender.DispType dispType, int genderType, int equipId) { }

	// RVA: 0x21A7DA8 Offset: 0x21A7DA8 VA: 0x21A7DA8
	public Vector2 GetBodySize() { }

	// RVA: 0x21A7E38 Offset: 0x21A7E38 VA: 0x21A7E38
	public Rect GetBodyUvRect() { }

	// RVA: 0x21A7F90 Offset: 0x21A7F90 VA: 0x21A7F90
	public Texture2D GetBodyTexture(AssetData[] dataList) { }

	// RVA: 0x21A8050 Offset: 0x21A8050 VA: 0x21A8050
	public Texture2D GetBodyAlphaTexture(AssetData[] dataList) { }

	// RVA: 0x21A814C Offset: 0x21A814C VA: 0x21A814C
	public void SetAlpha(float alpha) { }

	// RVA: 0x21A8190 Offset: 0x21A8190 VA: 0x21A8190
	public void MoveAlpha(float duration, float alpha) { }

	// RVA: 0x21A8244 Offset: 0x21A8244 VA: 0x21A8244
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x21A8418 Offset: 0x21A8418 VA: 0x21A8418
	public void SetLayer(int layer) { }

	// RVA: 0x21A8490 Offset: 0x21A8490 VA: 0x21A8490
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x21A8790 Offset: 0x21A8790 VA: 0x21A8790
	private static void .cctor() { }
}

// Namespace: 
public enum UIMasterFullFigureRender.DispType // TypeDefIndex: 7830
{
	// Fields
	public int value__; // 0x0
	public const UIMasterFullFigureRender.DispType USER_SELECT = 0;
}

// Namespace: 
public class UIMasterFullFigureTexture : UIMasterFullFigureRender // TypeDefIndex: 7831
{
	// Fields
	[SerializeField] // RVA: 0xCC36C8 Offset: 0xCC36C8 VA: 0xCC36C8
	protected UITexture bodyTexture; // 0x198
	protected AssetData[] assetDataList; // 0x1A0
	protected string[] loadNameList; // 0x1A8
	protected Action callbackFunc; // 0x1B0

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x21A8970 Offset: 0x21A8970 VA: 0x21A8970
	public void .ctor() { }

	// RVA: 0x21A89D8 Offset: 0x21A89D8 VA: 0x21A89D8 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x21A8A44 Offset: 0x21A8A44 VA: 0x21A8A44
	public bool get_IsLoad() { }

	// RVA: 0x21A8A54 Offset: 0x21A8A54 VA: 0x21A8A54
	public void Destroy() { }

	// RVA: 0x21A8CC8 Offset: 0x21A8CC8 VA: 0x21A8CC8
	protected void OnDestroy() { }

	// RVA: 0x21A8CCC Offset: 0x21A8CCC VA: 0x21A8CCC
	public void SetActive(bool isActive) { }

	// RVA: 0x21A8A58 Offset: 0x21A8A58 VA: 0x21A8A58
	public void ReleaseCharacter() { }

	// RVA: 0x21A8D1C Offset: 0x21A8D1C VA: 0x21A8D1C
	public void SetCharacter(UIMasterFullFigureRender.DispType dispType, int genderType, int equipId, Action callbackFunc) { }

	// RVA: 0x21A91E0 Offset: 0x21A91E0 VA: 0x21A91E0
	protected void EndLoadAsset() { }

	// RVA: 0x21A9304 Offset: 0x21A9304 VA: 0x21A9304
	protected void SetTexture() { }

	// RVA: 0x21A8FF0 Offset: 0x21A8FF0 VA: 0x21A8FF0
	protected void SetTextureStatus() { }

	// RVA: 0x21A9440 Offset: 0x21A9440 VA: 0x21A9440
	public void SetDepth(int d) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC91D7C Offset: 0xC91D7C VA: 0xC91D7C
[AddComponentMenu] // RVA: 0xC91D7C Offset: 0xC91D7C VA: 0xC91D7C
public class UIMeshSprite : UISprite // TypeDefIndex: 7832
{
	// Fields
	public const int SpriteMeshTypeCount = 4;
	protected static double[][] meshVertices; // 0x0
	protected static int[][] meshPolygons; // 0x8
	protected static double[][] uvPos; // 0x10
	protected static int[][] uvIndex; // 0x18
	protected static Vector3[][] sprMeshVert; // 0x20
	protected static Vector2[][] sprMeshUv; // 0x28
	private bool isEndInitialize; // 0x1E9
	public UIMeshSprite.SpriteMeshType meshType; // 0x1EC
	private Rect mOuterUV; // 0x1F0

	// Properties
	private Vector4 drawingUVs { get; }
	private Color32 drawingColor { get; }

	// Methods

	// RVA: 0x21A9478 Offset: 0x21A9478 VA: 0x21A9478
	public void .ctor() { }

	// RVA: 0x21A948C Offset: 0x21A948C VA: 0x21A948C
	public void Initialize() { }

	// RVA: 0x21AA7E0 Offset: 0x21AA7E0 VA: 0x21AA7E0
	private Vector4 get_drawingUVs() { }

	// RVA: 0x21AA928 Offset: 0x21AA928 VA: 0x21AA928
	private Color32 get_drawingColor() { }

	// RVA: 0x21AAA80 Offset: 0x21AAA80 VA: 0x21AAA80 Slot: 38
	public override void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }

	// RVA: 0x21AAE9C Offset: 0x21AAE9C VA: 0x21AAE9C
	private void RotFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols, Rect outer, Rect inner) { }
}

// Namespace: 
public enum UIMeshSprite.SpriteMeshType // TypeDefIndex: 7833
{
	// Fields
	public int value__; // 0x0
	public const UIMeshSprite.SpriteMeshType NormalRect = 0;
	public const UIMeshSprite.SpriteMeshType TopCutFace = 1;
	public const UIMeshSprite.SpriteMeshType ServantEquipRect = 2;
	public const UIMeshSprite.SpriteMeshType ServantEquipBigRect = 3;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC91DC8 Offset: 0xC91DC8 VA: 0xC91DC8
public class UIMessageButton : UIMessageButtonColor // TypeDefIndex: 7834
{
	// Fields
	public static UIMessageButton current; // 0x0
	public Color disabledColor; // 0x70
	public bool dragHighlight; // 0x80
	public List<EventDelegate> onClick; // 0x88

	// Properties
	public virtual bool isEnabled { get; set; }

	// Methods

	// RVA: 0x21AB290 Offset: 0x21AB290 VA: 0x21AB290
	public void .ctor() { }

	// RVA: 0x21AB3E8 Offset: 0x21AB3E8 VA: 0x21AB3E8 Slot: 11
	public virtual bool get_isEnabled() { }

	// RVA: 0x21AB4A8 Offset: 0x21AB4A8 VA: 0x21AB4A8 Slot: 12
	public virtual void set_isEnabled(bool value) { }

	// RVA: 0x21AB7A0 Offset: 0x21AB7A0 VA: 0x21AB7A0 Slot: 4
	protected override void OnEnable() { }

	// RVA: 0x21AB944 Offset: 0x21AB944 VA: 0x21AB944 Slot: 7
	protected override void OnHover(bool isOver) { }

	// RVA: 0x21ABA1C Offset: 0x21ABA1C VA: 0x21ABA1C Slot: 6
	protected override void OnPress(bool isPressed) { }

	// RVA: 0x21ABC30 Offset: 0x21ABC30 VA: 0x21ABC30 Slot: 8
	protected override void OnDragOver() { }

	// RVA: 0x21ABD88 Offset: 0x21ABD88 VA: 0x21ABD88 Slot: 9
	protected override void OnDragOut() { }

	// RVA: 0x21ABEE0 Offset: 0x21ABEE0 VA: 0x21ABEE0 Slot: 10
	protected override void OnSelect(bool isSelected) { }

	// RVA: 0x21AC014 Offset: 0x21AC014 VA: 0x21AC014 Slot: 13
	protected virtual void OnClick() { }

	// RVA: 0x21AB580 Offset: 0x21AB580 VA: 0x21AB580
	public void UpdateColor(bool shouldBeEnabled, bool immediate) { }

	// RVA: 0x21AC194 Offset: 0x21AC194 VA: 0x21AC194
	public void Fadeout(float d) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC91E00 Offset: 0xC91E00 VA: 0xC91E00
[AddComponentMenu] // RVA: 0xC91E00 Offset: 0xC91E00 VA: 0xC91E00
public class UIMessageButtonColor : UIWidgetContainer // TypeDefIndex: 7835
{
	// Fields
	public GameObject tweenTarget; // 0x18
	public Color normalColor; // 0x20
	public Color hover; // 0x30
	public Color pressed; // 0x40
	public float duration; // 0x50
	protected Color mColor; // 0x54
	protected bool mStarted; // 0x64
	protected UIWidget mWidget; // 0x68

	// Properties
	public Color defaultColor { get; set; }

	// Methods

	// RVA: 0x21AB30C Offset: 0x21AB30C VA: 0x21AB30C
	public void .ctor() { }

	// RVA: 0x21AC158 Offset: 0x21AC158 VA: 0x21AC158
	public Color get_defaultColor() { }

	// RVA: 0x21AC2E0 Offset: 0x21AC2E0 VA: 0x21AC2E0
	public void set_defaultColor(Color value) { }

	// RVA: 0x21AC2C8 Offset: 0x21AC2C8 VA: 0x21AC2C8
	protected void Awake() { }

	// RVA: 0x21AC33C Offset: 0x21AC33C VA: 0x21AC33C Slot: 4
	protected virtual void OnEnable() { }

	// RVA: 0x21AC534 Offset: 0x21AC534 VA: 0x21AC534 Slot: 5
	protected virtual void OnDisable() { }

	// RVA: 0x21AC0B8 Offset: 0x21AC0B8 VA: 0x21AC0B8
	protected void Init() { }

	// RVA: 0x21ABA64 Offset: 0x21ABA64 VA: 0x21ABA64 Slot: 6
	protected virtual void OnPress(bool isPressed) { }

