	// RVA: 0x212AFAC Offset: 0x212AFAC VA: 0x212AFAC
	public void SetActive(bool isActive) { }

	// RVA: 0x212B0C4 Offset: 0x212B0C4 VA: 0x212B0C4
	public void SetOffsetDirect(Vector3 offset) { }

	// RVA: 0x212B120 Offset: 0x212B120 VA: 0x212B120
	private void OnDestroy() { }

	// RVA: 0x212B124 Offset: 0x212B124 VA: 0x212B124
	protected void Release() { }

	// RVA: 0x212B1E8 Offset: 0x212B1E8 VA: 0x212B1E8
	private void DestroyMaterial() { }

	// RVA: 0x212B344 Offset: 0x212B344 VA: 0x212B344
	public void SetSizeDirect(int width, int height) { }
}

// Namespace: 
public class UIAlphaMaskTextureRender : UITweenRenderer // TypeDefIndex: 7818
{
	// Methods

	// RVA: 0x212AB78 Offset: 0x212AB78 VA: 0x212AB78
	public void .ctor() { }

	// RVA: 0x212AE64 Offset: 0x212AE64 VA: 0x212AE64
	protected Texture2D GetTexture(AssetData assetData) { }

	// RVA: 0x212AEF0 Offset: 0x212AEF0 VA: 0x212AEF0
	protected Texture2D GetAlphaTexture(AssetData assetData) { }
}

// Namespace: 
public class UICharaGraphRender : UITweenRenderer // TypeDefIndex: 7819
{
	// Fields
	protected static readonly int MAIN_SIZE_X; // 0x0
	protected static readonly int MAIN_SIZE_Y; // 0x4
	protected static readonly int SERVANT_BODY_SIZE_X; // 0x8
	protected static readonly int SERVANT_BODY_SIZE_Y; // 0xC
	protected static readonly int SERVANT_EQUIP_BODY_SIZE_X; // 0x10
	protected static readonly int SERVANT_EQUIP_BODY_SIZE_Y; // 0x14
	protected static readonly float SERVANT_BODY_U; // 0x18
	protected static readonly float SERVANT_BODY_V; // 0x1C
	protected static readonly float SERVANT_BODY_W; // 0x20
	protected static readonly float SERVANT_BODY_H; // 0x24
	protected static readonly float SERVANT_EQUIP_BODY_U; // 0x28
	protected static readonly float SERVANT_EQUIP_BODY_V; // 0x2C
	protected static readonly float SERVANT_EQUIP_BODY_W; // 0x30
	protected static readonly float SERVANT_EQUIP_BODY_H; // 0x34
	protected static readonly ReadOnlyCollection<Rect> servantBodyRectTable; // 0x38
	protected static readonly Rect servantEquipBodyRect; // 0x40
	protected static readonly float SERVANT_NAME_UV_DIFF_Y; // 0x50
	protected static readonly int MAX_SERVANT_NAME_UV_DIFF_COUNT; // 0x54
	protected static readonly int[] SERVANT_NAME_TARGET_LIMIT_COUNT; // 0x58
	protected static readonly string[] bodyTextureNameTable; // 0x60
	private static readonly string[] baseFrameList; // 0x68
	protected static Dictionary<int, string[]> baseFrameTable; // 0x70
	private static readonly string[] commandCodeBaseFrameList; // 0x78
	[SerializeField] // RVA: 0xC57650 Offset: 0xC57650 VA: 0xC57650
	protected UICharaGraphRender.Kind baseKind; // 0x184
	protected int svtId; // 0x188
	protected int imageSvtId; // 0x18C
	protected int limitCount; // 0x190
	protected int imageLimitCount; // 0x194
	protected int exceedCount; // 0x198
	protected int lv; // 0x19C
	protected int commandCodeId; // 0x1A0
	protected SvtType.Type svtType; // 0x1A4
	protected int classId; // 0x1A8
	protected string frameName; // 0x1B0
	protected int exceedType; // 0x1B8
	protected int atk; // 0x1BC
	protected int hp; // 0x1C0
	protected int adjustAtk; // 0x1C4
	protected int adjustHp; // 0x1C8
	protected bool isNameTrue; // 0x1CC
	private bool isEventJoinNameExist; // 0x1CD
	protected UICharaGraphRender.RealNameCheck realNameCheck; // 0x1D0
	protected int rarity; // 0x1D4
	protected int frameType; // 0x1D8
	protected int textureImageLimitCount; // 0x1DC
	protected UICharaGraphRender.SaintGraphType saintGraphType; // 0x1E0

	// Methods

	// RVA: 0x1B06658 Offset: 0x1B06658 VA: 0x1B06658
	public void .ctor() { }

	// RVA: 0x1B06660 Offset: 0x1B06660 VA: 0x1B06660
	public static string GetAssetName(int svtId, int imageLimitCount) { }

	// RVA: 0x1B06890 Offset: 0x1B06890 VA: 0x1B06890
	public static string GetAssetName(int imageSvtId) { }

	// RVA: 0x1B06A60 Offset: 0x1B06A60 VA: 0x1B06A60
	public static string GetCommandAssetName(int commandCodeId) { }

	// RVA: 0x1B06B34 Offset: 0x1B06B34 VA: 0x1B06B34
	public static string GetExCharaGraphAssetName(int svtId) { }

	// RVA: 0x1B06D0C Offset: 0x1B06D0C VA: 0x1B06D0C
	public UICharaGraphRender.Kind GetBaseKind() { }

	// RVA: 0x1B06D14 Offset: 0x1B06D14 VA: 0x1B06D14
	public void SetCharacter(int svtId, int limitCount, int exceedCount, bool isOwn, int lv, UICharaGraphRender.RealNameCheck changeNameType = 0, UICharaGraphRender.SaintGraphType saintGraphType = 0) { }

	// RVA: 0x1B07364 Offset: 0x1B07364 VA: 0x1B07364
	public void SetCharacter(int svtId, int limitCount, int imageLimitCount, int exceedCount, int lv, UICharaGraphRender.RealNameCheck changeNameType = 0, UICharaGraphRender.SaintGraphType saintGraphType = 0) { }

	// RVA: 0x1B06E50 Offset: 0x1B06E50 VA: 0x1B06E50
	protected void SetCharacter(UICharaGraphRender.RealNameCheck changeNameType = 0, UICharaGraphRender.SaintGraphType saintGraphType = 0) { }

	// RVA: 0x1B074D0 Offset: 0x1B074D0 VA: 0x1B074D0
	public void SetCommand(int commandCodeId) { }

	// RVA: 0x1B07614 Offset: 0x1B07614 VA: 0x1B07614
	protected void SetAtk(int atk, int adjustAtk = 0) { }

	// RVA: 0x1B07628 Offset: 0x1B07628 VA: 0x1B07628
	protected void SetHp(int hp, int adjustHp = 0) { }

	// RVA: 0x1B0763C Offset: 0x1B0763C VA: 0x1B0763C
	public Vector2 GetBodySize() { }

	// RVA: 0x1B076F4 Offset: 0x1B076F4 VA: 0x1B076F4
	public Rect GetBodyUvRect() { }

	// RVA: 0x1B077B8 Offset: 0x1B077B8 VA: 0x1B077B8
	public Texture2D GetBodyTexture(AssetData data) { }

	// RVA: 0x1B07A90 Offset: 0x1B07A90 VA: 0x1B07A90
	private int GetNameTargetLimitCount() { }

	// RVA: 0x1B07B84 Offset: 0x1B07B84 VA: 0x1B07B84
	public Texture2D GetNameTexture(AssetData data) { }

	// RVA: 0x1B07CC4 Offset: 0x1B07CC4 VA: 0x1B07CC4
	private Texture2D GetTrueNameTexture(AssetData data) { }

	// RVA: 0x1B07EDC Offset: 0x1B07EDC VA: 0x1B07EDC
	public Rect GetNameUvRect(Rect defaultValue) { }

	// RVA: 0x1B08174 Offset: 0x1B08174 VA: 0x1B08174
	public Texture2D GetName2Texture(AssetData data) { }

	// RVA: 0x1B0818C Offset: 0x1B0818C VA: 0x1B0818C
	public string GetRaritySprite() { }

	// RVA: 0x1B08234 Offset: 0x1B08234 VA: 0x1B08234
	public string GetClassSprite() { }

	// RVA: 0x1B08384 Offset: 0x1B08384 VA: 0x1B08384
	public void SetAlpha(float alpha) { }

	// RVA: 0x1B083C8 Offset: 0x1B083C8 VA: 0x1B083C8
	public void MoveAlpha(float duration, float alpha) { }

	// RVA: 0x1B0847C Offset: 0x1B0847C VA: 0x1B0847C
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x1B08650 Offset: 0x1B08650 VA: 0x1B08650
	public void SetLayer(int layer) { }

	// RVA: 0x1B086C8 Offset: 0x1B086C8 VA: 0x1B086C8
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x1B089C8 Offset: 0x1B089C8 VA: 0x1B089C8
	private static void .cctor() { }
}

// Namespace: 
public enum UICharaGraphRender.Kind // TypeDefIndex: 7820
{
	// Fields
	public int value__; // 0x0
	public const UICharaGraphRender.Kind NONE = -1;
	public const UICharaGraphRender.Kind SERVANT = 0;
	public const UICharaGraphRender.Kind SERVANT_EQUIP = 1;
	public const UICharaGraphRender.Kind COMMAND_CODE = 2;
}

// Namespace: 
public enum UICharaGraphRender.RealNameCheck // TypeDefIndex: 7821
{
	// Fields
	public int value__; // 0x0
	public const UICharaGraphRender.RealNameCheck DO_CHECK = 0;
	public const UICharaGraphRender.RealNameCheck NOT_REAL = 1;
	public const UICharaGraphRender.RealNameCheck REAL_NAME = 2;
	public const UICharaGraphRender.RealNameCheck RELEASE_PRESENTATION = 3;
}

// Namespace: 
public enum UICharaGraphRender.SaintGraphType // TypeDefIndex: 7822
{
	// Fields
	public int value__; // 0x0
	public const UICharaGraphRender.SaintGraphType NORMAL = 0;
	public const UICharaGraphRender.SaintGraphType NPC_FOLLOWER_SERVANT_EQUIP = 1;
}

// Namespace: 
public class UICharaGraphTexture : UICharaGraphRender // TypeDefIndex: 7823
{
	// Fields
	[SerializeField] // RVA: 0xC57660 Offset: 0xC57660 VA: 0xC57660
	protected UISprite baseSprite; // 0x1E8
	[SerializeField] // RVA: 0xC57670 Offset: 0xC57670 VA: 0xC57670
	protected UITexture bodyTexture; // 0x1F0
	[SerializeField] // RVA: 0xC57680 Offset: 0xC57680 VA: 0xC57680
	protected GameObject spriteBase; // 0x1F8
	[SerializeField] // RVA: 0xC57690 Offset: 0xC57690 VA: 0xC57690
	protected UISprite frameLeftSprite; // 0x200
	[SerializeField] // RVA: 0xC576A0 Offset: 0xC576A0 VA: 0xC576A0
	protected UISprite frameRightSprite; // 0x208
	[SerializeField] // RVA: 0xC576B0 Offset: 0xC576B0 VA: 0xC576B0
	protected UISprite frameTopSprite; // 0x210
	[SerializeField] // RVA: 0xC576C0 Offset: 0xC576C0 VA: 0xC576C0
	protected UISprite frameBottomSprite; // 0x218
	[SerializeField] // RVA: 0xC576D0 Offset: 0xC576D0 VA: 0xC576D0
	protected UISprite raritySprite; // 0x220
	[SerializeField] // RVA: 0xC576E0 Offset: 0xC576E0 VA: 0xC576E0
	protected UISprite classSprite; // 0x228
	[SerializeField] // RVA: 0xC576F0 Offset: 0xC576F0 VA: 0xC576F0
	protected UITexture nameTexture; // 0x230
	[SerializeField] // RVA: 0xC57700 Offset: 0xC57700 VA: 0xC57700
	protected UITexture name2Texture; // 0x238
	[SerializeField] // RVA: 0xC57710 Offset: 0xC57710 VA: 0xC57710
	protected UILabel attackLabel; // 0x240
	[SerializeField] // RVA: 0xC57720 Offset: 0xC57720 VA: 0xC57720
	protected UILabel hpLabel; // 0x248
	[SerializeField] // RVA: 0xC57730 Offset: 0xC57730 VA: 0xC57730
	protected UISprite equipHpSprite; // 0x250
	[SerializeField] // RVA: 0xC57740 Offset: 0xC57740 VA: 0xC57740
	protected UISprite equipAtkSprite; // 0x258
	[SerializeField] // RVA: 0xC57750 Offset: 0xC57750 VA: 0xC57750
	protected UISprite materialTdSprite; // 0x260
	protected AssetData assetMain; // 0x268
	protected string loadName; // 0x270
	protected Action callbackFunc; // 0x278

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x1B09958 Offset: 0x1B09958 VA: 0x1B09958
	public void .ctor() { }

	// RVA: 0x1B099C0 Offset: 0x1B099C0 VA: 0x1B099C0 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x1B09A2C Offset: 0x1B09A2C VA: 0x1B09A2C
	public bool get_IsLoad() { }

	// RVA: 0x1B09A3C Offset: 0x1B09A3C VA: 0x1B09A3C
	public void Destroy() { }

	// RVA: 0x1B09A40 Offset: 0x1B09A40 VA: 0x1B09A40
	protected void OnDestroy() { }

	// RVA: 0x1B09BE4 Offset: 0x1B09BE4 VA: 0x1B09BE4
	public void SetActive(bool isActive) { }

	// RVA: 0x1B09A44 Offset: 0x1B09A44 VA: 0x1B09A44
	public void ReleaseCharacter() { }

	// RVA: 0x1B09C34 Offset: 0x1B09C34 VA: 0x1B09C34
	public void SetCharacter(int svtId, int limitCount, int exceedCount, bool isOwn, Action callbackFunc, UICharaGraphRender.RealNameCheck changeNameType = 0) { }

	// RVA: 0x1B09FFC Offset: 0x1B09FFC VA: 0x1B09FFC
	public void SetCharacter(UserServantEntity userSvtEntity, Action callbackFunc) { }

	// RVA: 0x1B0A10C Offset: 0x1B0A10C VA: 0x1B0A10C
	public void SetCharacter(UserServantEntity userSvtEntity, int imageLimitCount, Action callbackFunc, UICharaGraphRender.RealNameCheck changeNameType = 0) { }

	// RVA: 0x1B0A22C Offset: 0x1B0A22C VA: 0x1B0A22C
	public void SetCharacter(UserServantCollectionEntity userSvtCollectionEntity, Action callbackFunc) { }

	// RVA: 0x1B0A344 Offset: 0x1B0A344 VA: 0x1B0A344
	public void SetCharacter(UserServantCollectionEntity userSvtCollectionEntity, int imageLimitCount, Action callbackFunc) { }

	// RVA: 0x1B0A460 Offset: 0x1B0A460 VA: 0x1B0A460
	public void SetCharacter(ServantLeaderInfo servantLeaderInfo, Action callbackFunc) { }

	// RVA: 0x1B0A540 Offset: 0x1B0A540 VA: 0x1B0A540
	public void SetCharacter(ServantLeaderInfo servantLeaderInfo, int imageLimitCount, Action callbackFunc) { }

	// RVA: 0x1B0A638 Offset: 0x1B0A638 VA: 0x1B0A638
	public void SetCharacter(EquipTargetInfo equipTargetInfo, bool isNpcFollowerServantEquip, Action callbackFunc) { }

	// RVA: 0x1B0A70C Offset: 0x1B0A70C VA: 0x1B0A70C
	public void SetCharacter(EquipTargetInfo equipTargetInfo, int imageLimitCount, bool isNpcFollowerServantEquip, Action callbackFunc) { }

	// RVA: 0x1B0A814 Offset: 0x1B0A814 VA: 0x1B0A814
	public void SetCommand(UserCommandCodeEntity userCommandCodeEntity, Action callbackFunc) { }

	// RVA: 0x1B0A8B8 Offset: 0x1B0A8B8 VA: 0x1B0A8B8
	public void SetCommand(UserCommandCodeCollectionEntity userCommandCodeCollectionEntity, Action callbackFunc) { }

	// RVA: 0x1B0A95C Offset: 0x1B0A95C VA: 0x1B0A95C
	public void SetCommand(CommandCodeEntity commandCodeEntity, Action callbackFunc) { }

	// RVA: 0x1B0AA00 Offset: 0x1B0AA00 VA: 0x1B0AA00
	public void SetCommand(int commandCodeId, Action callbackFunc) { }

	// RVA: 0x1B09D68 Offset: 0x1B09D68 VA: 0x1B09D68
	protected void LoadCharacter(Action callbackFunc) { }

	// RVA: 0x1B0AA2C Offset: 0x1B0AA2C VA: 0x1B0AA2C
	protected void SetBeforeFrame() { }

	// RVA: 0x1B0AA90 Offset: 0x1B0AA90 VA: 0x1B0AA90
	protected void SetFrame() { }

	// RVA: 0x1B0BA8C Offset: 0x1B0BA8C VA: 0x1B0BA8C
	protected void EndLoadAsset(AssetData assetMain) { }

	// RVA: 0x1B0B608 Offset: 0x1B0B608 VA: 0x1B0B608
	protected void SetTexture() { }

	// RVA: 0x1B0BB7C Offset: 0x1B0BB7C VA: 0x1B0BB7C
	public void SetExCharaGraph(int svtId, int imageLimitCount) { }

	// RVA: 0x1B0BCB0 Offset: 0x1B0BCB0 VA: 0x1B0BCB0
	public void SetDepth(int d) { }

	// RVA: 0x1B0BEC4 Offset: 0x1B0BEC4 VA: 0x1B0BEC4
	public void ExecuteNameCrossFade(float duration) { }

	// RVA: 0x1B0BFB8 Offset: 0x1B0BFB8 VA: 0x1B0BFB8
	public void ExecuteSpriteFadeoutForce() { }

	// RVA: 0x1B0C140 Offset: 0x1B0C140 VA: 0x1B0C140
	public void ExecuteSpriteFadeout(float duration) { }

	// RVA: 0x1B0C210 Offset: 0x1B0C210 VA: 0x1B0C210
	public void ExecuteSpriteFadein(float duration) { }

	// RVA: 0x1B0B9F4 Offset: 0x1B0B9F4 VA: 0x1B0B9F4
	private void InitSprite(UISprite sprite) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC25AA0 Offset: 0xC25AA0 VA: 0xC25AA0
public class UICommonButton : UICommonButtonColor // TypeDefIndex: 7824
{
	// Fields
	public static UICommonButton current; // 0x0
	public static readonly bool dragHighlight; // 0x8
	public bool isPassive; // 0x38
	public List<EventDelegate> onClick; // 0x40

	// Properties
	public override bool isEnabled { get; set; }

	// Methods

	// RVA: 0x1B0C2E0 Offset: 0x1B0C2E0 VA: 0x1B0C2E0
	public void .ctor() { }

	// RVA: 0x1B0C40C Offset: 0x1B0C40C VA: 0x1B0C40C Slot: 4
	public override bool get_isEnabled() { }

	// RVA: 0x1B0C448 Offset: 0x1B0C448 VA: 0x1B0C448 Slot: 5
	public override void set_isEnabled(bool value) { }

	// RVA: 0x1B0C4AC Offset: 0x1B0C4AC VA: 0x1B0C4AC
	public void SetEnable(bool value) { }

	// RVA: 0x1B0C4F4 Offset: 0x1B0C4F4 VA: 0x1B0C4F4 Slot: 6
	protected override void OnInit() { }

	// RVA: 0x1B0C5C4 Offset: 0x1B0C5C4 VA: 0x1B0C5C4 Slot: 7
	protected override void OnEnable() { }

	// RVA: 0x1B0C760 Offset: 0x1B0C760 VA: 0x1B0C760 Slot: 9
	protected override void OnHover(bool isOver) { }

	// RVA: 0x1B0C998 Offset: 0x1B0C998 VA: 0x1B0C998 Slot: 15
	protected virtual void OnPress(bool isPressed) { }

	// RVA: 0x1B0CBEC Offset: 0x1B0CBEC VA: 0x1B0CBEC Slot: 11
	protected override void OnDragOver() { }

	// RVA: 0x1B0CD9C Offset: 0x1B0CD9C VA: 0x1B0CD9C Slot: 12
	protected override void OnDragOut() { }

	// RVA: 0x1B0CF4C Offset: 0x1B0CF4C VA: 0x1B0CF4C Slot: 16
	protected virtual void OnClick() { }

	// RVA: 0x1B0D0EC Offset: 0x1B0D0EC VA: 0x1B0D0EC Slot: 14
	public override void SetState(UICommonButtonColor.State state, bool immediate) { }

	// RVA: 0x1B0D174 Offset: 0x1B0D174 VA: 0x1B0D174
	public void SetColliderEnable(bool isEnable, bool immediate = True) { }

	// RVA: 0x1B0D2CC Offset: 0x1B0D2CC VA: 0x1B0D2CC
	public void SetButtonEnable(bool isEnable, bool immediate = True) { }

	// RVA: 0x1B0D448 Offset: 0x1B0D448 VA: 0x1B0D448
	public void SetButtonEnableWithCollider(bool isEnable) { }

	// RVA: 0x1B0D584 Offset: 0x1B0D584 VA: 0x1B0D584
	public void SetButtonEnableAndKeepState(bool isEnable, bool immediate = False) { }

	// RVA: 0x1B0D6F4 Offset: 0x1B0D6F4 VA: 0x1B0D6F4
	private static void .cctor() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC25AD8 Offset: 0xC25AD8 VA: 0xC25AD8
[AddComponentMenu] // RVA: 0xC25AD8 Offset: 0xC25AD8 VA: 0xC25AD8
public class UICommonButtonColor : UIWidgetContainer // TypeDefIndex: 7825
{
	// Fields
	public GameObject[] tweenTargets; // 0x18
	public static readonly Color normal; // 0x0
	public static readonly Color hover; // 0x10
	public static readonly Color pressed; // 0x20
	public static readonly Color disabledColor; // 0x30
	public static readonly float duration; // 0x40
	protected bool mInitDone; // 0x20
	protected UICommonButtonColor.State mState; // 0x24
	private Color specifyDisabledColor; // 0x28

	// Properties
	public UICommonButtonColor.State state { get; set; }
	public virtual bool isEnabled { get; set; }
	public float alpha { get; }

	// Methods

	// RVA: 0x1B0C36C Offset: 0x1B0C36C VA: 0x1B0C36C
	public void .ctor() { }

	// RVA: 0x1B0D6F8 Offset: 0x1B0D6F8 VA: 0x1B0D6F8
	public UICommonButtonColor.State get_state() { }

	// RVA: 0x1B0D700 Offset: 0x1B0D700 VA: 0x1B0D700
	public void set_state(UICommonButtonColor.State value) { }

	// RVA: 0x1B0D714 Offset: 0x1B0D714 VA: 0x1B0D714 Slot: 4
	public virtual bool get_isEnabled() { }

	// RVA: 0x1B0D71C Offset: 0x1B0D71C VA: 0x1B0D71C Slot: 5
	public virtual void set_isEnabled(bool value) { }

	// RVA: 0x1B0C7F4 Offset: 0x1B0C7F4 VA: 0x1B0C7F4
	public float get_alpha() { }

	// RVA: 0x1B0D728 Offset: 0x1B0D728 VA: 0x1B0D728
	private void Start() { }

	// RVA: 0x1B0C4F8 Offset: 0x1B0C4F8 VA: 0x1B0C4F8 Slot: 6
	protected virtual void OnInit() { }

	// RVA: 0x1B0D794 Offset: 0x1B0D794 VA: 0x1B0D794 Slot: 7
	protected virtual void OnEnable() { }

	// RVA: 0x1B0D98C Offset: 0x1B0D98C VA: 0x1B0D98C Slot: 8
	protected virtual void OnDisable() { }

	// RVA: 0x1B0DBCC Offset: 0x1B0DBCC VA: 0x1B0DBCC Slot: 9
	protected virtual void OnHover(bool isOver) { }

	// RVA: 0x1B0DC44 Offset: 0x1B0DC44 VA: 0x1B0DC44 Slot: 10
	protected virtual void OnPress(bool isPressed) { }

	// RVA: 0x1B0CD2C Offset: 0x1B0CD2C VA: 0x1B0CD2C Slot: 11
	protected virtual void OnDragOver() { }

	// RVA: 0x1B0CEDC Offset: 0x1B0CEDC VA: 0x1B0CEDC Slot: 12
	protected virtual void OnDragOut() { }

	// RVA: 0x1B0DE7C Offset: 0x1B0DE7C VA: 0x1B0DE7C Slot: 13
	protected virtual void OnSelect(bool isSelected) { }

	// RVA: 0x1B0D0F4 Offset: 0x1B0D0F4 VA: 0x1B0D0F4 Slot: 14
	public virtual void SetState(UICommonButtonColor.State state, bool instant) { }

	// RVA: 0x1B0DF70 Offset: 0x1B0DF70 VA: 0x1B0DF70
	public void UpdateColor(bool instant) { }

	// RVA: 0x1B0E3F8 Offset: 0x1B0E3F8 VA: 0x1B0E3F8
	public void SetSpecifyDisabledColor(Color specifyDisabledColor) { }

	// RVA: 0x1B0E404 Offset: 0x1B0E404 VA: 0x1B0E404
	private static void .cctor() { }
}

// Namespace: 
public enum UICommonButtonColor.State // TypeDefIndex: 7826
{
	// Fields
	public int value__; // 0x0
	public const UICommonButtonColor.State Normal = 0;
	public const UICommonButtonColor.State Hover = 1;
	public const UICommonButtonColor.State Pressed = 2;
	public const UICommonButtonColor.State Disabled = 3;
}

// Namespace: 
public class UICrossNarrowLabel : UILabel // TypeDefIndex: 7827
{
	// Fields
	protected bool isInit; // 0x294
	protected int baseWidth; // 0x298

	// Methods

	// RVA: 0x1B0EA78 Offset: 0x1B0EA78 VA: 0x1B0EA78
	public void .ctor() { }

	// RVA: 0x1B0EAE0 Offset: 0x1B0EAE0 VA: 0x1B0EAE0
	public void SetCrossNarrowText(string text) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC25B24 Offset: 0xC25B24 VA: 0xC25B24
public class UIDragDropListViewBackMask : MonoBehaviour // TypeDefIndex: 7828
{
	// Fields
	[SerializeField] // RVA: 0xC57760 Offset: 0xC57760 VA: 0xC57760
	protected GameObject maskObject; // 0x18
	private bool isMultiTouch; // 0x20
	private bool oldMultiTouchEnabled; // 0x21

	// Methods

	// RVA: 0x1B10E2C Offset: 0x1B10E2C VA: 0x1B10E2C
	public void .ctor() { }

	// RVA: 0x1B10E34 Offset: 0x1B10E34 VA: 0x1B10E34
	public void DragStart() { }

	// RVA: 0x1B10F38 Offset: 0x1B10F38 VA: 0x1B10F38
	public void DragStart(EventDelegate.Callback call) { }

	// RVA: 0x1B11094 Offset: 0x1B11094 VA: 0x1B11094
	public void DragEnd() { }

	// RVA: 0x1B11198 Offset: 0x1B11198 VA: 0x1B11198
	public void DragEnd(EventDelegate.Callback call) { }

	// RVA: 0x1B11300 Offset: 0x1B11300 VA: 0x1B11300
	public void DragStartMultiTouch(EventDelegate.Callback click, EventDelegate.Callback drag) { }

	// RVA: 0x1B1150C Offset: 0x1B1150C VA: 0x1B1150C
	public void DragEndMultiTouch(EventDelegate.Callback click, EventDelegate.Callback drag) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC25B5C Offset: 0xC25B5C VA: 0xC25B5C
public class UIDragDropListViewItem : MonoBehaviour // TypeDefIndex: 7829
{
	// Fields
	[SerializeField] // RVA: 0xC57770 Offset: 0xC57770 VA: 0xC57770
	protected UITouchPress touchPress; // 0x18
	public UIDragDropListViewItem.Restriction restriction; // 0x20
	protected Transform mTrans; // 0x28
	protected Transform mParent; // 0x30
	protected Collider mCollider; // 0x38
	protected UIRoot mRoot; // 0x40
	protected int mTouchID; // 0x48
	protected float mPressTime; // 0x4C
	protected ListViewObject mListViewObject; // 0x50
	protected UIDragScrollView mDragScrollView; // 0x58
	protected Vector3 mTarget; // 0x60
	protected GameObject dragObject; // 0x70

	// Methods

	// RVA: 0x1B1171C Offset: 0x1B1171C VA: 0x1B1171C
	public void .ctor() { }

	// RVA: 0x1B1172C Offset: 0x1B1172C VA: 0x1B1172C Slot: 4
	protected virtual void Start() { }

	// RVA: 0x1B11738 Offset: 0x1B11738 VA: 0x1B11738 Slot: 5
	public virtual void SetBaseTransform() { }

	// RVA: 0x1B117D0 Offset: 0x1B117D0 VA: 0x1B117D0
	public void SetEnable(bool flag) { }

	// RVA: 0x1B118D0 Offset: 0x1B118D0 VA: 0x1B118D0
	public void PressReset() { }

	// RVA: 0x1B118DC Offset: 0x1B118DC VA: 0x1B118DC
	protected void OnPress(bool isPressed) { }

	// RVA: 0x1B11910 Offset: 0x1B11910 VA: 0x1B11910
	protected void OnDragStart() { }

	// RVA: 0x1B11AD0 Offset: 0x1B11AD0 VA: 0x1B11AD0
	protected void DragStart() { }

	// RVA: 0x1B11BC0 Offset: 0x1B11BC0 VA: 0x1B11BC0
	protected void OnDrag(Vector2 delta) { }

	// RVA: 0x1B11D20 Offset: 0x1B11D20 VA: 0x1B11D20
	protected void OnDragEnd() { }

	// RVA: 0x1B11DEC Offset: 0x1B11DEC VA: 0x1B11DEC Slot: 6
	protected virtual void OnDragDropStart() { }

	// RVA: 0x1B11F80 Offset: 0x1B11F80 VA: 0x1B11F80 Slot: 7
	protected virtual void OnDragDropMove(Vector3 delta) { }

	// RVA: 0x1B120E0 Offset: 0x1B120E0 VA: 0x1B120E0 Slot: 8
	protected virtual void OnDragDropRelease(GameObject surface) { }
}

// Namespace: 
public enum UIDragDropListViewItem.Restriction // TypeDefIndex: 7830
{
	// Fields
	public int value__; // 0x0
	public const UIDragDropListViewItem.Restriction None = 0;
	public const UIDragDropListViewItem.Restriction Horizontal = 1;
	public const UIDragDropListViewItem.Restriction Vertical = 2;
	public const UIDragDropListViewItem.Restriction PressAndHold = 3;
	public const UIDragDropListViewItem.Restriction Press = 4;
}

// Namespace: 
public class UIDragDropListViewSurface : MonoBehaviour // TypeDefIndex: 7831
{
	// Methods

	// RVA: 0x1B122B4 Offset: 0x1B122B4 VA: 0x1B122B4
	public void .ctor() { }

	// RVA: 0x1B122BC Offset: 0x1B122BC VA: 0x1B122BC
	public void DragStart() { }

	// RVA: 0x1B12328 Offset: 0x1B12328 VA: 0x1B12328
	public void DragEnd() { }
}

// Namespace: 
public class UIEquipGraphM : UIEquipGraphRender // TypeDefIndex: 7832
{
	// Fields
	protected AssetData[] assetDataList; // 0x1F0
	protected string[] loadNameList; // 0x1F8
	protected Action callbackFunc; // 0x200

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x1B19D10 Offset: 0x1B19D10 VA: 0x1B19D10
	public void .ctor() { }

	// RVA: 0x1B19DE4 Offset: 0x1B19DE4 VA: 0x1B19DE4
	public bool get_IsLoad() { }

	// RVA: 0x1B19DF4 Offset: 0x1B19DF4 VA: 0x1B19DF4
	public void Destroy() { }

	// RVA: 0x1B19EB0 Offset: 0x1B19EB0 VA: 0x1B19EB0
	protected void OnDestroy() { }

	// RVA: 0x1B19DF8 Offset: 0x1B19DF8 VA: 0x1B19DF8
	public void ReleaseCharacter() { }

	// RVA: 0x1B1A104 Offset: 0x1B1A104 VA: 0x1B1A104
	public void SetCharacter(string imageName, Face.Type faceType, Action callbackFunc) { }

	// RVA: 0x1B1A5DC Offset: 0x1B1A5DC VA: 0x1B1A5DC
	protected void EndLoadAsset() { }

	// RVA: 0x1B1A700 Offset: 0x1B1A700 VA: 0x1B1A700
	protected void SetTexture() { }

	// RVA: 0x1B1A4FC Offset: 0x1B1A4FC VA: 0x1B1A4FC
	protected void SetTextureStatus() { }

	// RVA: 0x1B1B180 Offset: 0x1B1B180 VA: 0x1B1B180
	public void SetDispOffset() { }
}

// Namespace: 
public class UIEquipGraphRender : UITweenRenderer // TypeDefIndex: 7833
{
	// Fields
	[SerializeField] // RVA: 0xC57780 Offset: 0xC57780 VA: 0xC57780
	protected MeshFilter bodyFilter; // 0x188
	[SerializeField] // RVA: 0xC57790 Offset: 0xC57790 VA: 0xC57790
	protected MeshRenderer bodyRenderer; // 0x190
	public static readonly int MAIN_SIZE_X; // 0x0
	public static readonly int MAIN_SIZE_Y; // 0x4
	public static readonly int BODY_SIZE_X; // 0x8
	public static readonly int BODY_SIZE_Y; // 0xC
	public static readonly int LEFT_X; // 0x10
	public static readonly int RIGHT_X; // 0x14
	public static readonly int TOP_Y; // 0x18
	public static readonly int BOTTOM_Y; // 0x1C
	public static readonly float BODY_U; // 0x20
	public static readonly float BODY_V; // 0x24
	public static readonly float BODY_W; // 0x28
	public static readonly float BODY_H; // 0x2C
	protected bool isShadow; // 0x198
	protected bool isTalkMask; // 0x199
	protected string filterName; // 0x1A0
	protected Color filterColor; // 0x1A8
	protected Vector2 figureOffset; // 0x1B8
	protected Vector2 dispOffset; // 0x1C0
	protected Vector2 dispTop; // 0x1C8
	protected Texture2D[] textureList; // 0x1D0
	protected bool isBusyMoveAlpha; // 0x1D8
	protected GameObject moveAlphaCallbackObject; // 0x1E0
	protected string moveAlphaCallbackFunc; // 0x1E8

	// Methods

	// RVA: 0x1B19D74 Offset: 0x1B19D74 VA: 0x1B19D74
	public void .ctor() { }

	// RVA: 0x1B1A3AC Offset: 0x1B1A3AC VA: 0x1B1A3AC
	public static string[] GetAssetNameList(string imageName) { }

	// RVA: 0x1B1B258 Offset: 0x1B1B258 VA: 0x1B1B258
	public bool IsBusyMoveAlpha() { }

	// RVA: 0x1B1B260 Offset: 0x1B1B260 VA: 0x1B1B260
	public Vector2 GetCenterOffset() { }

	// RVA: 0x1B1B2FC Offset: 0x1B1B2FC VA: 0x1B1B2FC
	public static Vector2 GetCharacterOffset() { }

	// RVA: 0x1B1B330 Offset: 0x1B1B330 VA: 0x1B1B330
	public static Vector2 GetCharacterOffsetMyroom() { }

	// RVA: 0x1B1B364 Offset: 0x1B1B364 VA: 0x1B1B364 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x1B1B478 Offset: 0x1B1B478 VA: 0x1B1B478
	public Vector2 GetBodySize() { }

	// RVA: 0x1B1B4FC Offset: 0x1B1B4FC VA: 0x1B1B4FC
	public void SetActive(bool isActive) { }

	// RVA: 0x1B19EB4 Offset: 0x1B19EB4 VA: 0x1B19EB4
	public void ReleaseCharacter() { }

	// RVA: 0x1B1B54C Offset: 0x1B1B54C VA: 0x1B1B54C
	public void SetCharacter(int svtId, Face.Type faceType, Texture2D[] textureList) { }

	// RVA: 0x1B1A870 Offset: 0x1B1A870 VA: 0x1B1A870
	protected void SetCharacterRender() { }

	// RVA: 0x1B1B708 Offset: 0x1B1B708 VA: 0x1B1B708
	public void SetSharder(string shaderName) { }

	// RVA: 0x1B1B7EC Offset: 0x1B1B7EC VA: 0x1B1B7EC
	public void RecoverSharder() { }

	// RVA: 0x1B1B8C4 Offset: 0x1B1B8C4 VA: 0x1B1B8C4
	public void SetWipeTexture(Texture texture) { }

	// RVA: 0x1B1BB08 Offset: 0x1B1BB08 VA: 0x1B1BB08
	public void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x1B1B558 Offset: 0x1B1B558 VA: 0x1B1B558
	public void SetBaseColor() { }

	// RVA: 0x1B1BB60 Offset: 0x1B1BB60 VA: 0x1B1BB60
	public void SetShadow(bool isShadow) { }

	// RVA: 0x1B1BB6C Offset: 0x1B1BB6C VA: 0x1B1BB6C
	public void SetTalkMask(bool isMask) { }

	// RVA: 0x1B1BB78 Offset: 0x1B1BB78 VA: 0x1B1BB78
	public void SetAlpha(float alpha) { }

	// RVA: 0x1B1B630 Offset: 0x1B1B630 VA: 0x1B1B630
	public void SetFilterColor(Color c) { }

	// RVA: 0x1B1BBBC Offset: 0x1B1BBBC VA: 0x1B1BBBC
	public void SetGradation(float g) { }

	// RVA: 0x1B1BCA0 Offset: 0x1B1BCA0 VA: 0x1B1BCA0
	public void SetVolume(float v) { }

	// RVA: 0x1B1BD84 Offset: 0x1B1BD84 VA: 0x1B1BD84
	public void SetDepth(float d) { }

	// RVA: 0x1B1BE0C Offset: 0x1B1BE0C VA: 0x1B1BE0C
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x1B1C0C8 Offset: 0x1B1C0C8 VA: 0x1B1C0C8
	public void MoveAlphaSpeed(float speed, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x1B1C010 Offset: 0x1B1C010 VA: 0x1B1C010
	protected void EndMoveAlpha() { }

	// RVA: 0x1B1C2E0 Offset: 0x1B1C2E0 VA: 0x1B1C2E0
	public void SetLayer(int layer) { }

	// RVA: 0x1B1C358 Offset: 0x1B1C358 VA: 0x1B1C358
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x1B1C658 Offset: 0x1B1C658 VA: 0x1B1C658
	public void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x1B1C6F8 Offset: 0x1B1C6F8 VA: 0x1B1C6F8
	public void SetSortingOrder(int order) { }

	// RVA: 0x1B1C730 Offset: 0x1B1C730 VA: 0x1B1C730
	private static void .cctor() { }
}

// Namespace: 
public class UIExtrusionLabel : UILabel // TypeDefIndex: 7834
{
	// Fields
	[SerializeField] // RVA: 0xC577A0 Offset: 0xC577A0 VA: 0xC577A0
	protected GameObject extrusionObject; // 0x298
	[SerializeField] // RVA: 0xC577B0 Offset: 0xC577B0 VA: 0xC577B0
	protected int extrusionBlankSize; // 0x2A0

	// Properties
	public string text { get; set; }

	// Methods

	// RVA: 0x1B1F1A4 Offset: 0x1B1F1A4 VA: 0x1B1F1A4
	public void .ctor() { }

	// RVA: 0x1B1F214 Offset: 0x1B1F214 VA: 0x1B1F214
	public string get_text() { }

	// RVA: 0x1B1F21C Offset: 0x1B1F21C VA: 0x1B1F21C
	public void set_text(string value) { }
}

// Namespace: 
public class UIHorizontalImageM : UIHorizontalImageRender // TypeDefIndex: 7835
{
	// Fields
	protected AssetData[] assetDataList; // 0x1F0
	protected string[] loadNameList; // 0x1F8
	protected Action callbackFunc; // 0x200

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x1BC1320 Offset: 0x1BC1320 VA: 0x1BC1320
	public void .ctor() { }

	// RVA: 0x1BC13F4 Offset: 0x1BC13F4 VA: 0x1BC13F4
	public bool get_IsLoad() { }

	// RVA: 0x1BC1404 Offset: 0x1BC1404 VA: 0x1BC1404
	public void Destroy() { }

	// RVA: 0x1BC14C0 Offset: 0x1BC14C0 VA: 0x1BC14C0
	protected void OnDestroy() { }

	// RVA: 0x1BC1408 Offset: 0x1BC1408 VA: 0x1BC1408
	public void ReleaseCharacter() { }

	// RVA: 0x1BC1714 Offset: 0x1BC1714 VA: 0x1BC1714
	public void SetCharacter(string imageName, Face.Type faceType, Action callbackFunc) { }

	// RVA: 0x1BC1BEC Offset: 0x1BC1BEC VA: 0x1BC1BEC
	protected void EndLoadAsset() { }

	// RVA: 0x1BC1D10 Offset: 0x1BC1D10 VA: 0x1BC1D10
	protected void SetTexture() { }

	// RVA: 0x1BC1B0C Offset: 0x1BC1B0C VA: 0x1BC1B0C
	protected void SetTextureStatus() { }

	// RVA: 0x1BC2DD8 Offset: 0x1BC2DD8 VA: 0x1BC2DD8
	public void SetDispOffset() { }
}

// Namespace: 
public class UIHorizontalImageRender : UITweenRenderer // TypeDefIndex: 7836
{
	// Fields
	[SerializeField] // RVA: 0xC577C0 Offset: 0xC577C0 VA: 0xC577C0
	protected MeshFilter bodyFilter; // 0x188
	[SerializeField] // RVA: 0xC577D0 Offset: 0xC577D0 VA: 0xC577D0
	protected MeshRenderer bodyRenderer; // 0x190
	public static readonly int MAIN_SIZE_X; // 0x0
	public static readonly int MAIN_SIZE_Y; // 0x4
	public static readonly int BODY_SIZE_X; // 0x8
	public static readonly int BODY_SIZE_Y; // 0xC
	public static readonly int OVERLAP_U; // 0x10
	public static readonly int LEFT_X; // 0x14
	public static readonly int RIGHT_X; // 0x18
	public static readonly int RIGHT_X2; // 0x1C
	public static readonly int TOP_Y; // 0x20
	public static readonly int BOTTOM_Y; // 0x24
	public static readonly float BODY_U; // 0x28
	public static readonly float BODY_V; // 0x2C
	public static readonly float BODY_U2; // 0x30
	public static readonly float BODY_V2; // 0x34
	public static readonly float BODY_W; // 0x38
	public static readonly float BODY_H; // 0x3C
	protected bool isShadow; // 0x198
	protected bool isTalkMask; // 0x199
	protected string filterName; // 0x1A0
	protected Color filterColor; // 0x1A8
	protected Vector2 figureOffset; // 0x1B8
	protected Vector2 dispOffset; // 0x1C0
	protected Vector2 dispTop; // 0x1C8
	protected Texture2D[] textureList; // 0x1D0
	protected bool isBusyMoveAlpha; // 0x1D8
	protected GameObject moveAlphaCallbackObject; // 0x1E0
	protected string moveAlphaCallbackFunc; // 0x1E8

	// Methods

	// RVA: 0x1BC1384 Offset: 0x1BC1384 VA: 0x1BC1384
	public void .ctor() { }

	// RVA: 0x1BC19BC Offset: 0x1BC19BC VA: 0x1BC19BC
	public static string[] GetAssetNameList(string imageName) { }

	// RVA: 0x1BC2EB0 Offset: 0x1BC2EB0 VA: 0x1BC2EB0
	public bool IsBusyMoveAlpha() { }

	// RVA: 0x1BC2EB8 Offset: 0x1BC2EB8 VA: 0x1BC2EB8
	public Vector2 GetCenterOffset() { }

	// RVA: 0x1BC2F54 Offset: 0x1BC2F54 VA: 0x1BC2F54
	public static Vector2 GetCharacterOffset() { }

	// RVA: 0x1BC2F88 Offset: 0x1BC2F88 VA: 0x1BC2F88
	public static Vector2 GetCharacterOffsetMyroom() { }

	// RVA: 0x1BC2FBC Offset: 0x1BC2FBC VA: 0x1BC2FBC Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x1BC30D0 Offset: 0x1BC30D0 VA: 0x1BC30D0
	public Vector2 GetBodySize() { }

	// RVA: 0x1BC3154 Offset: 0x1BC3154 VA: 0x1BC3154
	public void SetActive(bool isActive) { }

	// RVA: 0x1BC14C4 Offset: 0x1BC14C4 VA: 0x1BC14C4
	public void ReleaseCharacter() { }

	// RVA: 0x1BC31A4 Offset: 0x1BC31A4 VA: 0x1BC31A4
	public void SetCharacter(string imageName, Face.Type faceType, Texture2D[] textureList) { }

	// RVA: 0x1BC1F08 Offset: 0x1BC1F08 VA: 0x1BC1F08
	protected void SetCharacterRender() { }

	// RVA: 0x1BC3360 Offset: 0x1BC3360 VA: 0x1BC3360
	public void SetSharder(string shaderName) { }

	// RVA: 0x1BC34DC Offset: 0x1BC34DC VA: 0x1BC34DC
	public void RecoverSharder() { }

	// RVA: 0x1BC35B4 Offset: 0x1BC35B4 VA: 0x1BC35B4
	public void SetWipeTexture(Texture texture) { }

	// RVA: 0x1BC37F8 Offset: 0x1BC37F8 VA: 0x1BC37F8
	public void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x1BC31B0 Offset: 0x1BC31B0 VA: 0x1BC31B0
	public void SetBaseColor() { }

	// RVA: 0x1BC3850 Offset: 0x1BC3850 VA: 0x1BC3850
	public void SetShadow(bool isShadow) { }

	// RVA: 0x1BC385C Offset: 0x1BC385C VA: 0x1BC385C
	public void SetTalkMask(bool isMask) { }

	// RVA: 0x1BC3868 Offset: 0x1BC3868 VA: 0x1BC3868
	public void SetAlpha(float alpha) { }

	// RVA: 0x1BC3288 Offset: 0x1BC3288 VA: 0x1BC3288
	public void SetFilterColor(Color c) { }

	// RVA: 0x1BC38AC Offset: 0x1BC38AC VA: 0x1BC38AC
	public void SetGradation(float g) { }

	// RVA: 0x1BC3990 Offset: 0x1BC3990 VA: 0x1BC3990
	public void SetVolume(float v) { }

	// RVA: 0x1BC3A74 Offset: 0x1BC3A74 VA: 0x1BC3A74
	public void SetDepth(float d) { }

	// RVA: 0x1BC3AFC Offset: 0x1BC3AFC VA: 0x1BC3AFC
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x1BC3DB8 Offset: 0x1BC3DB8 VA: 0x1BC3DB8
