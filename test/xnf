	// RVA: 0x1D0112C Offset: 0x1D0112C VA: 0x1D0112C
	public static UIStandFigureM CreateMeshPrefab(GameObject parent, int svtId, int imageLimitCount, Face.Type faceType, int panelDepth, Action callbackFunc, bool loadRequiredResource = False) { }

	// RVA: 0x1D011E4 Offset: 0x1D011E4 VA: 0x1D011E4
	public static UIStandFigureR CreateRenderPrefab(GameObject parent) { }

	// RVA: 0x1D0153C Offset: 0x1D0153C VA: 0x1D0153C
	public static UIStandFigureR CreateRenderPrefab(GameObject parent, int svtId, int limitCount, int lv, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, int depth, Action callbackFunc) { }

	// RVA: 0x1D01998 Offset: 0x1D01998 VA: 0x1D01998
	public static UIStandFigureR CreateRenderPrefab(GameObject parent, int svtId, int imageLimitCount, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, int depth, Action callbackFunc, bool isIgnoreFormChange = False, int friendship = -1) { }

	// RVA: 0x1D01A6C Offset: 0x1D01A6C VA: 0x1D01A6C
	public static UIStandFigureR CreatePrefabForImageId(GameObject parent, int imageId, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, int depth, Action callbackFunc, bool isIgnoreFormChange = False, int friendship = -1) { }

	// RVA: 0x1D01C68 Offset: 0x1D01C68 VA: 0x1D01C68
	public static UIStandFigureR CreatePrefabForImageIdAndForm(GameObject parent, int imageId, int formId, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, int depth, Action callbackFunc) { }

	// RVA: 0x1D01E14 Offset: 0x1D01E14 VA: 0x1D01E14
	public static UIStandFigureR CreateRenderPrefab(GameObject parent, int svtId, int imageLimitCount, int formId, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, int depth, Action callbackFunc, bool isIgnoreFormChange = False, int friendship = -1) { }

	// RVA: 0x1D021EC Offset: 0x1D021EC VA: 0x1D021EC
	public static void Render(int svtId, int limitCount, int lv, Face.Type faceType, Texture2D[] textureList, StandFigureRenderWaitStatus.EndHandler callback) { }

	// RVA: 0x1D023B0 Offset: 0x1D023B0 VA: 0x1D023B0
	public static void Render(int svtId, int imageLimitCount, Face.Type faceType, Texture2D[] textureList, StandFigureRenderWaitStatus.EndHandler callback) { }

	// RVA: 0x1D0247C Offset: 0x1D0247C VA: 0x1D0247C
	public static void Render(int id, Face.Type faceType, Texture2D[] textureList, StandFigureRenderWaitStatus.EndHandler callback) { }

	// RVA: 0x1D0252C Offset: 0x1D0252C VA: 0x1D0252C
	public static void Render(RenderTexture renderTex, int svtId, int limitCount, int lv, Face.Type faceType, Texture2D[] textureList, StandFigureRenderWaitStatus.EndHandler callback) { }

	// RVA: 0x1D02690 Offset: 0x1D02690 VA: 0x1D02690
	public static void Render(RenderTexture renderTex, int svtId, int imageLimitCount, Face.Type faceType, Texture2D[] textureList, StandFigureRenderWaitStatus.EndHandler callback) { }

	// RVA: 0x1D02768 Offset: 0x1D02768 VA: 0x1D02768
	public static void Render(RenderTexture renderTex, int id, Face.Type faceType, int formId, Texture2D[] textureList, StandFigureRenderWaitStatus.EndHandler callback) { }

	// RVA: 0x1D02890 Offset: 0x1D02890 VA: 0x1D02890
	public static void Release(RenderTexture renderTex) { }

	// RVA: 0x1D02898 Offset: 0x1D02898 VA: 0x1D02898
	public static void ReleaseCharaFigure() { }

	// RVA: 0x1D02980 Offset: 0x1D02980 VA: 0x1D02980
	public void Reboot() { }

	// RVA: 0x1D02340 Offset: 0x1D02340 VA: 0x1D02340
	protected void AddRender(StandFigureRenderWaitStatus info) { }

	// RVA: 0x1D02A14 Offset: 0x1D02A14 VA: 0x1D02A14
	protected bool RenderStart() { }

	// RVA: 0x1D02ABC Offset: 0x1D02ABC VA: 0x1D02ABC
	protected void LateUpdate() { }

	// RVA: 0x1D00500 Offset: 0x1D00500 VA: 0x1D00500
	public void OnRenderEnd(RenderTexture renderTexture) { }

	// RVA: 0x1D00C58 Offset: 0x1D00C58 VA: 0x1D00C58
	public UIStandFigureM CreateMeshLocal(GameObject parent) { }

	// RVA: 0x1D02C70 Offset: 0x1D02C70 VA: 0x1D02C70
	public static string CreateStandFigureMName(int svtId, int imageLimitCount) { }

	// RVA: 0x1D01024 Offset: 0x1D01024 VA: 0x1D01024
	public UIStandFigureM CreateMeshLocal(GameObject parent, int svtId, int imageLimitCount, Face.Type faceType, int panelDepth, Action callbackFunc, bool loadRequiredResource = False) { }

	// RVA: 0x1D01248 Offset: 0x1D01248 VA: 0x1D01248
	public UIStandFigureR CreateRenderLocal(GameObject parent) { }

	// RVA: 0x1D0163C Offset: 0x1D0163C VA: 0x1D0163C
	public UIStandFigureR CreateRenderLocal(GameObject parent, int svtId, int imageLimitCount, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, int depth, Action callbackFunc, bool isIgnoreFormChange, int friendship = -1) { }

	// RVA: 0x1D01EE0 Offset: 0x1D01EE0 VA: 0x1D01EE0
	public UIStandFigureR CreateRenderLocal(GameObject parent, int svtId, int imageLimitCount, int formId, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, int depth, Action callbackFunc, bool isIgnoreFormChange, int friendship = -1) { }
}

// Namespace: 
public class StandFigureRenderWaitStatus // TypeDefIndex: 6312
{
	// Fields
	protected int imageId; // 0x10
	protected Face.Type faceType; // 0x14
	protected int formId; // 0x18
	protected Texture2D[] textureList; // 0x20
	protected RenderTexture renderTex; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCBF618 Offset: 0xCBF618 VA: 0xCBF618
	[DebuggerBrowsableAttribute] // RVA: 0xCBF618 Offset: 0xCBF618 VA: 0xCBF618
	private StandFigureRenderWaitStatus.EndHandler callbackFunc; // 0x30

	// Methods

	// RVA: 0x1D022E8 Offset: 0x1D022E8 VA: 0x1D022E8
	public void .ctor(int id, Face.Type faceType, Texture2D[] textureList, StandFigureRenderWaitStatus.EndHandler callback) { }

	// RVA: 0x1D02634 Offset: 0x1D02634 VA: 0x1D02634
	public void .ctor(RenderTexture renderTex, int id, Face.Type faceType, Texture2D[] textureList, StandFigureRenderWaitStatus.EndHandler callback) { }

	// RVA: 0x1D02828 Offset: 0x1D02828 VA: 0x1D02828
	public void .ctor(RenderTexture renderTex, int id, Face.Type faceType, int formId, Texture2D[] textureList, StandFigureRenderWaitStatus.EndHandler callback) { }

	// RVA: 0x1D02E74 Offset: 0x1D02E74 VA: 0x1D02E74
	protected void add_callbackFunc(StandFigureRenderWaitStatus.EndHandler value) { }

	// RVA: 0x1D02F60 Offset: 0x1D02F60 VA: 0x1D02F60
	protected void remove_callbackFunc(StandFigureRenderWaitStatus.EndHandler value) { }

	// RVA: 0x1D02BC0 Offset: 0x1D02BC0 VA: 0x1D02BC0
	public RenderTexture GetRenderTexture() { }

	// RVA: 0x1D02BC8 Offset: 0x1D02BC8 VA: 0x1D02BC8
	public void SetCharacter(UIStandFigureRender standFigureRender) { }

	// RVA: 0x1D02C24 Offset: 0x1D02C24 VA: 0x1D02C24
	public void Callback(RenderTexture renderTex) { }
}

// Namespace: 
public sealed class StandFigureRenderWaitStatus.EndHandler : MulticastDelegate // TypeDefIndex: 6313
{
	// Methods

	// RVA: 0x1D033EC Offset: 0x1D033EC VA: 0x1D033EC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1D0304C Offset: 0x1D0304C VA: 0x1D0304C Slot: 11
	public virtual void Invoke(RenderTexture texture) { }

	// RVA: 0x1D033FC Offset: 0x1D033FC VA: 0x1D033FC Slot: 12
	public virtual IAsyncResult BeginInvoke(RenderTexture texture, AsyncCallback callback, object object) { }

	// RVA: 0x1D03420 Offset: 0x1D03420 VA: 0x1D03420 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SummonAssetManager : SingletonMonoBehaviour<SummonAssetManager> // TypeDefIndex: 6314
{
	// Fields
	protected AssetData summonAssets; // 0x18

	// Methods

	// RVA: 0x16FBC90 Offset: 0x16FBC90 VA: 0x16FBC90
	public void .ctor() { }

	// RVA: 0x16FBCE0 Offset: 0x16FBCE0 VA: 0x16FBCE0
	public void LoadSummonAssets(Action onLoad) { }

	// RVA: 0x16FBE0C Offset: 0x16FBE0C VA: 0x16FBE0C
	public ServantRewardAction InstantiateSvtGetPrefab(Transform parent, bool isForBattle = False) { }

	// RVA: 0x16FC070 Offset: 0x16FC070 VA: 0x16FC070
	public void UnloadSummonAssets() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE890 Offset: 0xCAE890 VA: 0xCAE890
private sealed class SummonAssetManager.<LoadSummonAssets>c__AnonStorey0 // TypeDefIndex: 6315
{
	// Fields
	internal Action onLoad; // 0x10
	internal SummonAssetManager $this; // 0x18

	// Methods

	// RVA: 0x16FBE04 Offset: 0x16FBE04 VA: 0x16FBE04
	public void .ctor() { }

	// RVA: 0x16FC0E8 Offset: 0x16FC0E8 VA: 0x16FC0E8
	internal void <>m__0(AssetData data) { }
}

// Namespace: 
public class SwitchParameterDisplayManager : SingletonMonoBehaviour<SwitchParameterDisplayManager> // TypeDefIndex: 6316
{
	// Fields
	protected readonly float FADE_TIME; // 0x18
	protected readonly float DISP_TIME; // 0x1C
	protected SwitchParameterDisplayManager.State state; // 0x20
	protected float dispTime; // 0x24
	protected int count; // 0x28
	protected float alpha; // 0x2C
	protected List<SwitchParameterDisplayComponent> componentList; // 0x30

	// Properties
	public int Count { get; }
	public float Alpha { get; }

	// Methods

	// RVA: 0x15E5B40 Offset: 0x15E5B40 VA: 0x15E5B40
	public void .ctor() { }

	// RVA: 0x15E5BCC Offset: 0x15E5BCC VA: 0x15E5BCC
	public int get_Count() { }

	// RVA: 0x15E5BD4 Offset: 0x15E5BD4 VA: 0x15E5BD4
	public float get_Alpha() { }

	// RVA: 0x15E5BDC Offset: 0x15E5BDC VA: 0x15E5BDC
	public void Reset() { }

	// RVA: 0x15E5BEC Offset: 0x15E5BEC VA: 0x15E5BEC
	public void Reboot() { }

	// RVA: 0x15E5C5C Offset: 0x15E5C5C VA: 0x15E5C5C
	public void Initialize() { }

	// RVA: 0x15E5C60 Offset: 0x15E5C60 VA: 0x15E5C60
	public void AddComponent(SwitchParameterDisplayComponent component) { }

	// RVA: 0x15E5D0C Offset: 0x15E5D0C VA: 0x15E5D0C
	public void RemoveComponent(SwitchParameterDisplayComponent component) { }

	// RVA: 0x15E5D7C Offset: 0x15E5D7C VA: 0x15E5D7C
	protected void Update() { }
}

// Namespace: 
protected enum SwitchParameterDisplayManager.State // TypeDefIndex: 6317
{
	// Fields
	public int value__; // 0x0
	public const SwitchParameterDisplayManager.State FADE_IN = 0;
	public const SwitchParameterDisplayManager.State DISP = 1;
	public const SwitchParameterDisplayManager.State FADE_OUT = 2;
}

// Namespace: 
public class TouchEffectManager : SingletonMonoBehaviour<TouchEffectManager> // TypeDefIndex: 6318
{
	// Fields
	private static readonly int CREATE_EFFECT_MAX; // 0x0
	[SerializeField] // RVA: 0xCBF654 Offset: 0xCBF654 VA: 0xCBF654
	protected GameObject effectParent; // 0x18
	[SerializeField] // RVA: 0xCBF664 Offset: 0xCBF664 VA: 0xCBF664
	protected Camera effectCamera; // 0x20
	[SerializeField] // RVA: 0xCBF674 Offset: 0xCBF674 VA: 0xCBF674
	protected GameObject tapPrefab; // 0x28
	[SerializeField] // RVA: 0xCBF684 Offset: 0xCBF684 VA: 0xCBF684
	protected GameObject dragPrefab; // 0x30
	[SerializeField] // RVA: 0xCBF694 Offset: 0xCBF694 VA: 0xCBF694
	protected float dragUnitLong; // 0x38
	private static int blockCount; // 0x4
	private static float dragCount; // 0x8
	private static List<CommonParticleControlComponent> effectList; // 0x10
	private static int effectIdx; // 0x18

	// Methods

	// RVA: 0x1E064DC Offset: 0x1E064DC VA: 0x1E064DC
	public void .ctor() { }

	// RVA: 0x1E06534 Offset: 0x1E06534 VA: 0x1E06534
	private void Start() { }

	// RVA: 0x1E0679C Offset: 0x1E0679C VA: 0x1E0679C
	public static void SetBlock(bool isBlock) { }

	// RVA: 0x1E06A28 Offset: 0x1E06A28 VA: 0x1E06A28
	public static void Press(Vector2 p) { }

	// RVA: 0x1E06E9C Offset: 0x1E06E9C VA: 0x1E06E9C
	public static void UnPress() { }

	// RVA: 0x1E06F08 Offset: 0x1E06F08 VA: 0x1E06F08
	public static void Drag(Vector2 v) { }

	// RVA: 0x1E06B3C Offset: 0x1E06B3C VA: 0x1E06B3C
	public void CreateLocal(GameObject prefab, Vector2 p) { }

	// RVA: 0x1E06918 Offset: 0x1E06918 VA: 0x1E06918
	public void StopLocal() { }

	// RVA: 0x1E07134 Offset: 0x1E07134 VA: 0x1E07134
	private static void .cctor() { }
}

// Namespace: 
public static class UnityWebRequestDecryptFileWithCrc // TypeDefIndex: 6319
{
	// Fields
	private const int BufferSize = 524288;

	// Methods

	// RVA: 0x2037AF8 Offset: 0x2037AF8 VA: 0x2037AF8
	public static UnityWebRequest CreateRequest(string uri, string key) { }
}

// Namespace: 
public class DownloadHandlerDecryptFileWithCrc : DownloadHandlerScript // TypeDefIndex: 6320
{
	// Fields
	private uint crc; // 0x18
	private CryptoStream stream; // 0x20
	private MemoryStream outputStream; // 0x28
	private int contentSize; // 0x30
	private int nowDataLength; // 0x34
	private byte[] decryptData; // 0x38
	private string key; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xCBF6A4 Offset: 0xCBF6A4 VA: 0xCBF6A4
	[DebuggerBrowsableAttribute] // RVA: 0xCBF6A4 Offset: 0xCBF6A4 VA: 0xCBF6A4
	private Exception <error>k__BackingField; // 0x48

	// Properties
	public Exception error { get; set; }
	public uint Crc { get; }

	// Methods

	// RVA: 0x1630418 Offset: 0x1630418 VA: 0x1630418
	public void .ctor() { }

	// RVA: 0x163045C Offset: 0x163045C VA: 0x163045C
	public void .ctor(byte[] buffer, string key) { }

	[CompilerGeneratedAttribute] // RVA: 0xD364E8 Offset: 0xD364E8 VA: 0xD364E8
	// RVA: 0x1630498 Offset: 0x1630498 VA: 0x1630498
	public Exception get_error() { }

	[CompilerGeneratedAttribute] // RVA: 0xD364F8 Offset: 0xD364F8 VA: 0xD364F8
	// RVA: 0x1630454 Offset: 0x1630454 VA: 0x1630454
	private void set_error(Exception value) { }

	// RVA: 0x16304A0 Offset: 0x16304A0 VA: 0x16304A0
	public uint get_Crc() { }

	// RVA: 0x16304A8 Offset: 0x16304A8 VA: 0x16304A8 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x16305F4 Offset: 0x16305F4 VA: 0x16305F4 Slot: 10
	protected override float GetProgress() { }

	// RVA: 0x163061C Offset: 0x163061C VA: 0x163061C Slot: 5
	protected override byte[] GetData() { }

	// RVA: 0x1630624 Offset: 0x1630624 VA: 0x1630624 Slot: 8
	protected override void ReceiveContentLength(int contentLength) { }

	// RVA: 0x1630630 Offset: 0x1630630 VA: 0x1630630 Slot: 7
	protected override bool ReceiveData(byte[] data, int dataLength) { }

	// RVA: 0x1630820 Offset: 0x1630820 VA: 0x1630820 Slot: 9
	protected override void CompleteContent() { }

	// RVA: 0x163051C Offset: 0x163051C VA: 0x163051C
	public void CloseStream() { }
}

// Namespace: 
public static class UnityWebRequestFileWithCrcCheck // TypeDefIndex: 6321
{
	// Fields
	private const int BufferSize = 524288;

	// Methods

	// RVA: 0x2037BBC Offset: 0x2037BBC VA: 0x2037BBC
	public static UnityWebRequest CreateRequest(string uri, string path, bool isDecrypt, string key) { }
}

// Namespace: 
public class DownloadHandlerFileWithCrcCheck : DownloadHandlerScript // TypeDefIndex: 6322
{
	// Fields
	private uint crc; // 0x18
	private string path; // 0x20
	private FileStream fileStream; // 0x28
	private bool isDecrypt; // 0x30
	private CryptoStream cryptoStream; // 0x38
	private MemoryStream outputStream; // 0x40
	private byte[] decryptData; // 0x48
	private int nowDataLength; // 0x50
	private int contentSize; // 0x54
	private string key; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xCBF6E0 Offset: 0xCBF6E0 VA: 0xCBF6E0
	[DebuggerBrowsableAttribute] // RVA: 0xCBF6E0 Offset: 0xCBF6E0 VA: 0xCBF6E0
	private Exception <error>k__BackingField; // 0x60

	// Properties
	public Exception error { get; set; }
	public uint Crc { get; }

	// Methods

	// RVA: 0x1630B20 Offset: 0x1630B20 VA: 0x1630B20
	public void .ctor(string path, bool isDecrypt) { }

	// RVA: 0x1630B78 Offset: 0x1630B78 VA: 0x1630B78
	public void .ctor(string path, bool isDecrypt, byte[] buffer, string key) { }

	[CompilerGeneratedAttribute] // RVA: 0xD36508 Offset: 0xD36508 VA: 0xD36508
	// RVA: 0x1630BD0 Offset: 0x1630BD0 VA: 0x1630BD0
	public Exception get_error() { }

	[CompilerGeneratedAttribute] // RVA: 0xD36518 Offset: 0xD36518 VA: 0xD36518
	// RVA: 0x1630B70 Offset: 0x1630B70 VA: 0x1630B70
	private void set_error(Exception value) { }

	// RVA: 0x1630BD8 Offset: 0x1630BD8 VA: 0x1630BD8
	public uint get_Crc() { }

	// RVA: 0x1630BE0 Offset: 0x1630BE0 VA: 0x1630BE0 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1630D40 Offset: 0x1630D40 VA: 0x1630D40 Slot: 10
	protected override float GetProgress() { }

	// RVA: 0x1630D68 Offset: 0x1630D68 VA: 0x1630D68 Slot: 5
	protected override byte[] GetData() { }

	// RVA: 0x1630D80 Offset: 0x1630D80 VA: 0x1630D80 Slot: 8
	protected override void ReceiveContentLength(int contentLength) { }

	// RVA: 0x1630D8C Offset: 0x1630D8C VA: 0x1630D8C Slot: 7
	protected override bool ReceiveData(byte[] data, int dataLength) { }

	// RVA: 0x163103C Offset: 0x163103C VA: 0x163103C Slot: 9
	protected override void CompleteContent() { }

	// RVA: 0x1630C54 Offset: 0x1630C54 VA: 0x1630C54
	public void CloseStream() { }
}

// Namespace: 
public class Base2DUILocationInfo // TypeDefIndex: 6323
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCBF71C Offset: 0xCBF71C VA: 0xCBF71C
	[DebuggerBrowsableAttribute] // RVA: 0xCBF71C Offset: 0xCBF71C VA: 0xCBF71C
	private List<Rect> <rects>k__BackingField; // 0x10

	// Properties
	public List<Rect> rects { get; set; }

	// Methods

	// RVA: 0x147FF14 Offset: 0x147FF14 VA: 0x147FF14
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD36528 Offset: 0xD36528 VA: 0xD36528
	// RVA: 0x147FF90 Offset: 0x147FF90 VA: 0x147FF90
	public List<Rect> get_rects() { }

	[CompilerGeneratedAttribute] // RVA: 0xD36538 Offset: 0xD36538 VA: 0xD36538
	// RVA: 0x147FF88 Offset: 0x147FF88 VA: 0x147FF88
	protected void set_rects(List<Rect> value) { }

	// RVA: 0x147FF98 Offset: 0x147FF98 VA: 0x147FF98 Slot: 4
	protected virtual Rect GetTitleInfoRect() { }

	// RVA: 0x1480018 Offset: 0x1480018 VA: 0x1480018 Slot: 5
	protected virtual Rect GetMenuButtonRect() { }

	// RVA: 0x1480038 Offset: 0x1480038 VA: 0x1480038 Slot: 6
	protected virtual Rect GetMapChangeButtonRect() { }

	// RVA: 0x1480058 Offset: 0x1480058 VA: 0x1480058 Slot: 7
	protected virtual Rect GetMasterIconSurroundsRect() { }

	// RVA: 0x1480078 Offset: 0x1480078 VA: 0x1480078
	public Rect[] GetRects() { }
}

// Namespace: 
public static class UiRectFactory // TypeDefIndex: 6324
{
	// Methods

	// RVA: 0x2037580 Offset: 0x2037580 VA: 0x2037580
	public static Rect RightBottomRect(float x, float y, float width, float height) { }

	// RVA: 0x2037660 Offset: 0x2037660 VA: 0x2037660
	public static Rect LeftBottomRect(float x, float y, float width, float height) { }

	// RVA: 0x203773C Offset: 0x203773C VA: 0x203773C
	public static Rect RightTopRect(float x, float y, float width, float height) { }

	// RVA: 0x2037820 Offset: 0x2037820 VA: 0x2037820
	public static Rect LeftTopRect(float x, float y, float width, float height) { }

	// RVA: 0x2037900 Offset: 0x2037900 VA: 0x2037900
	public static Rect CenterBottomRect(float x, float y, float width, float height) { }

	// RVA: 0x20379D0 Offset: 0x20379D0 VA: 0x20379D0
	public static Rect CenterTopRect(float x, float y, float width, float height) { }

	// RVA: 0x2037AA4 Offset: 0x2037AA4 VA: 0x2037AA4
	public static Rect CenterRect(float x, float y, float width, float height) { }
}

// Namespace: 
public static class MapCameraViewAdjusterUtil // TypeDefIndex: 6325
{
	// Fields
	private static readonly float CHECK_OFFSET_INTERVAL; // 0x0
	private static readonly float CHECK_ZOOM_INTERVAL; // 0x4

	// Methods

	// RVA: 0x17FA0C8 Offset: 0x17FA0C8 VA: 0x17FA0C8
	public static Rect CalculateEachRectIntersectAvoidedCameraRect(MapCamera camera, Rect[] rectsOnMap, Rect[] rects2DUI, out MapCameraViewAdjusterUtil.FailedReason failedReason) { }

	// RVA: 0x17FAC50 Offset: 0x17FAC50 VA: 0x17FAC50
	public static Rect CalculateLostSomeRectsAllowedCameraRect(MapCamera camera, Rect[] rectsOnMap, Rect[] rects2DUI, Rect[] essentialRectsOnMap, out MapCameraViewAdjusterUtil.FailedReason failedReason) { }

	[DebuggerHiddenAttribute] // RVA: 0xD36548 Offset: 0xD36548 VA: 0xD36548
	// RVA: 0x17FA974 Offset: 0x17FA974 VA: 0x17FA974
	private static IEnumerable<Rect> GenerateCameraRects(float ZoomMin, float ZoomMax, float ZoomInterval, float offsetInterval, Rect brakeRect, Vector3 center) { }

	// RVA: 0x17FAAC4 Offset: 0x17FAAC4 VA: 0x17FAAC4
	private static bool HasAnyIntersects(Rect[] containRects, Rect[] containRects2DUI, Rect cameraRect) { }

	// RVA: 0x17FA76C Offset: 0x17FA76C VA: 0x17FA76C
	private static Rect CreateCoveringRect(Rect[] rects) { }

	// RVA: 0x17FA68C Offset: 0x17FA68C VA: 0x17FA68C
	private static Rect ResizedToViewAspectRect(Rect baseRect) { }

	// RVA: 0x17F972C Offset: 0x17F972C VA: 0x17F972C
	public static MapCameraViewAdjusterUtil.CameraDestinationInfo GetSafeCameraDestination(MapCamera camera, Nullable<Vector3> expectedDestPos, Nullable<float> expectedDestZoom) { }

	// RVA: 0x17FB430 Offset: 0x17FB430 VA: 0x17FB430
	private static void .cctor() { }
}

// Namespace: 
public enum MapCameraViewAdjusterUtil.FailedReason // TypeDefIndex: 6326
{
	// Fields
	public int value__; // 0x0
	public const MapCameraViewAdjusterUtil.FailedReason NONE = 0;
	public const MapCameraViewAdjusterUtil.FailedReason HAS_INTERSECT = 1;
	public const MapCameraViewAdjusterUtil.FailedReason OVERFLOW_CAMERA_RECT_UNAVOIDABLE = 2;
}

// Namespace: 
public class MapCameraViewAdjusterUtil.CameraDestinationInfo // TypeDefIndex: 6327
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCBF758 Offset: 0xCBF758 VA: 0xCBF758
	[DebuggerBrowsableAttribute] // RVA: 0xCBF758 Offset: 0xCBF758 VA: 0xCBF758
	private Vector3 <position>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCBF794 Offset: 0xCBF794 VA: 0xCBF794
	[DebuggerBrowsableAttribute] // RVA: 0xCBF794 Offset: 0xCBF794 VA: 0xCBF794
	private float <size>k__BackingField; // 0x1C

	// Properties
	public Vector3 position { get; set; }
	public float size { get; set; }

	// Methods

	// RVA: 0x17FB3E4 Offset: 0x17FB3E4 VA: 0x17FB3E4
	public void .ctor(Vector3 position, float size) { }

	[CompilerGeneratedAttribute] // RVA: 0xD36558 Offset: 0xD36558 VA: 0xD36558
	// RVA: 0x17F9AA4 Offset: 0x17F9AA4 VA: 0x17F9AA4
	public Vector3 get_position() { }

	[CompilerGeneratedAttribute] // RVA: 0xD36568 Offset: 0xD36568 VA: 0xD36568
	// RVA: 0x17FBB90 Offset: 0x17FBB90 VA: 0x17FBB90
	private void set_position(Vector3 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD36578 Offset: 0xD36578 VA: 0xD36578
	// RVA: 0x17F9A9C Offset: 0x17F9A9C VA: 0x17F9A9C
	public float get_size() { }

	[CompilerGeneratedAttribute] // RVA: 0xD36588 Offset: 0xD36588 VA: 0xD36588
	// RVA: 0x17FBB9C Offset: 0x17FBB9C VA: 0x17FBB9C
	private void set_size(float value) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE8A0 Offset: 0xCAE8A0 VA: 0xCAE8A0
private sealed class MapCameraViewAdjusterUtil.<GenerateCameraRects>c__Iterator0 : IEnumerable, IEnumerable<Rect>, IEnumerator, IDisposable, IEnumerator<Rect> // TypeDefIndex: 6328
{
	// Fields
	internal Vector2 <windowSize>__0; // 0x10
	internal float ZoomMin; // 0x18
	internal float <size>__1; // 0x1C
	internal float ZoomMax; // 0x20
	internal Rect <cameraRect>__2; // 0x24
	internal Vector3 center; // 0x34
	internal Rect brakeRect; // 0x40
	internal float offsetInterval; // 0x50
	internal int <offsetXMinIndex>__2; // 0x54
	internal int <offsetXMaxIndex>__2; // 0x58
	internal int <offsetYMinIndex>__2; // 0x5C
	internal int <offsetYMaxIndex>__2; // 0x60
	internal int <loopX>__2; // 0x64
	internal int <loopY>__2; // 0x68
	internal int <x>__3; // 0x6C
	internal int <offsetXIndex>__4; // 0x70
	internal float <offsetX>__4; // 0x74
	internal int <y>__5; // 0x78
	internal int <offsetYIndex>__6; // 0x7C
	internal float <offsetY>__6; // 0x80
	internal float ZoomInterval; // 0x84
	internal Rect $current; // 0x88
	internal bool $disposing; // 0x98
	internal int $PC; // 0x9C

	// Properties
	private Rect System.Collections.Generic.IEnumerator<UnityEngine.Rect>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD45D14 Offset: 0xD45D14 VA: 0xD45D14
	// RVA: 0x17FB3A4 Offset: 0x17FB3A4 VA: 0x17FB3A4
	public void .ctor() { }

	// RVA: 0x17FB498 Offset: 0x17FB498 VA: 0x17FB498 Slot: 7
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45D24 Offset: 0xD45D24 VA: 0xD45D24
	// RVA: 0x17FB964 Offset: 0x17FB964 VA: 0x17FB964 Slot: 10
	private Rect System.Collections.Generic.IEnumerator<UnityEngine.Rect>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45D34 Offset: 0xD45D34 VA: 0xD45D34
	// RVA: 0x17FB970 Offset: 0x17FB970 VA: 0x17FB970 Slot: 6
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45D44 Offset: 0xD45D44 VA: 0xD45D44
	// RVA: 0x17FB9D4 Offset: 0x17FB9D4 VA: 0x17FB9D4 Slot: 9
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45D54 Offset: 0xD45D54 VA: 0xD45D54
	// RVA: 0x17FB9E8 Offset: 0x17FB9E8 VA: 0x17FB9E8 Slot: 8
	public void Reset() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45D64 Offset: 0xD45D64 VA: 0xD45D64
	// RVA: 0x17FBA50 Offset: 0x17FBA50 VA: 0x17FBA50 Slot: 4
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45D74 Offset: 0xD45D74 VA: 0xD45D74
	// RVA: 0x17FBA54 Offset: 0x17FBA54 VA: 0x17FBA54 Slot: 5
	private IEnumerator<Rect> System.Collections.Generic.IEnumerable<UnityEngine.Rect>.GetEnumerator() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC913BC Offset: 0xC913BC VA: 0xC913BC
public class AllocMem : MonoBehaviour // TypeDefIndex: 6329
{
	// Fields
	public bool show; // 0x18
	public bool showFPS; // 0x19
	public bool showInEditor; // 0x1A
	private float lastCollect; // 0x1C
	private float lastCollectNum; // 0x20
	private float delta; // 0x24
	private float lastDeltaTime; // 0x28
	private int allocRate; // 0x2C
	private int lastAllocMemory; // 0x30
	private float lastAllocSet; // 0x34
	private int allocMem; // 0x38
	private int collectAlloc; // 0x3C
	private int peakAlloc; // 0x40

	// Methods

	// RVA: 0x15A69F4 Offset: 0x15A69F4 VA: 0x15A69F4
	public void .ctor() { }

	// RVA: 0x15A6A10 Offset: 0x15A6A10 VA: 0x15A6A10
	public void Start() { }

	// RVA: 0x15A6A1C Offset: 0x15A6A1C VA: 0x15A6A1C
	public void OnGUI() { }
}

// Namespace: 
public static class AndroidExternalStorageState // TypeDefIndex: 6330
{
	// Fields
	public const string MEDIA_MOUNTED = "mounted";
	public const string MEDIA_MOUNTED_READ_ONLY = "mounted_ro";
}

// Namespace: 
public class AndroidUtil // TypeDefIndex: 6331
{
	// Fields
	private const int VERSION_CODE_K = 19;
	private const int VERSION_CODE_M = 23;
	private const int PERMISSION_GRANTED = 0;
	private static int _apiLevel; // 0x0
	private static readonly string MD5_OPTION; // 0x8

	// Properties
	public static int apiLevel { get; }

	// Methods

	// RVA: 0x15AACD4 Offset: 0x15AACD4 VA: 0x15AACD4
	public void .ctor() { }

	// RVA: 0x15AACDC Offset: 0x15AACDC VA: 0x15AACDC
	public static int get_apiLevel() { }

	// RVA: 0x15AAEB0 Offset: 0x15AAEB0 VA: 0x15AAEB0
	public static bool IsWriteableExternalStorage(bool likeOldUnity = False) { }

	// RVA: 0x15AAFC0 Offset: 0x15AAFC0 VA: 0x15AAFC0
	public static string GetExternalStorageState() { }

	// RVA: 0x15AB71C Offset: 0x15AB71C VA: 0x15AB71C
	public static void TransitionSaveData() { }

	// RVA: 0x15ABE90 Offset: 0x15ABE90 VA: 0x15ABE90
	public static void TransitionDatFile(DatFileName.FILE_NAME fileName) { }

	// RVA: 0x15AC0A8 Offset: 0x15AC0A8 VA: 0x15AC0A8
	public static void DeleteOldSaveData() { }

	// RVA: 0x15AC3D4 Offset: 0x15AC3D4 VA: 0x15AC3D4
	private static string GetExternalFilesDir() { }

	// RVA: 0x15AB138 Offset: 0x15AB138 VA: 0x15AB138
	private static bool HasPermission(string permission) { }

	// RVA: 0x15AC764 Offset: 0x15AC764 VA: 0x15AC764
	private static string GetContextFilesDirPath() { }

	// RVA: 0x15ABB00 Offset: 0x15ABB00 VA: 0x15ABB00
	public static string GetOldUnityPersistentDataPath() { }

	// RVA: 0x1598C8C Offset: 0x1598C8C VA: 0x1598C8C
	public static string GetDatFileSavePath() { }

	// RVA: 0x15ACB4C Offset: 0x15ACB4C VA: 0x15ACB4C
	public static string ConvertFileNameIfNeed(string filename) { }

	// RVA: 0x15ABC40 Offset: 0x15ABC40 VA: 0x15ABC40
	public static string GetMd5String(string name) { }

	// RVA: 0x15ACC30 Offset: 0x15ACC30 VA: 0x15ACC30
	public static string GetFriendCodeFromOldDat() { }

	// RVA: 0x15ACF20 Offset: 0x15ACF20 VA: 0x15ACF20
	private static void .cctor() { }
}

// Namespace: 
public class AppendSkillListComponent : BaseMonoBehaviour // TypeDefIndex: 6332
{
	// Fields
	private static readonly int SKILL_LEVEL_LABEL_MAX_LENGTH; // 0x0
	[SerializeField] // RVA: 0xCBF7D0 Offset: 0xCBF7D0 VA: 0xCBF7D0
	protected UISprite skillIconSprite; // 0x18
	[SerializeField] // RVA: 0xCBF7E0 Offset: 0xCBF7E0 VA: 0xCBF7E0
	protected UILabel skillLevelListLabel; // 0x20

	// Methods

	// RVA: 0x15AFE70 Offset: 0x15AFE70 VA: 0x15AFE70
	public void .ctor() { }

	// RVA: 0x15AFE78 Offset: 0x15AFE78 VA: 0x15AFE78
	public void Clear() { }

	// RVA: 0x15AFF34 Offset: 0x15AFF34 VA: 0x15AFF34
	public void Set(string skillLevelListText) { }

	// RVA: 0x15B008C Offset: 0x15B008C VA: 0x15B008C
	private static void .cctor() { }
}

// Namespace: 
public class AssetsInfo : MonoBehaviour // TypeDefIndex: 6333
{
	// Fields
	public string sceneName; // 0x18
	public bool show; // 0x20
	private AssetsInfo.AssetsInfoData currentAssets; // 0x28
	private AssetsInfo.AssetsInfoData currentResouces; // 0x30

	// Methods

	// RVA: 0x1C76FB0 Offset: 0x1C76FB0 VA: 0x1C76FB0
	public void .ctor() { }

	// RVA: 0x1C77030 Offset: 0x1C77030 VA: 0x1C77030
	public void getAssetsInfo() { }

	// RVA: 0x1C77034 Offset: 0x1C77034 VA: 0x1C77034
	public void getAssetInfo(List<AssetData> assetList, Dictionary<string, AssetsInfo.dataInfo> info) { }

	// RVA: 0x1C77510 Offset: 0x1C77510 VA: 0x1C77510
	public void OnGUI() { }
}

// Namespace: 
public class AssetsInfo.dataInfo // TypeDefIndex: 6334
{
	// Fields
	public string initScene; // 0x10
	public int count; // 0x18

	// Methods

	// RVA: 0x1C77484 Offset: 0x1C77484 VA: 0x1C77484
	public void .ctor(string scene) { }

	// RVA: 0x1C77C24 Offset: 0x1C77C24 VA: 0x1C77C24 Slot: 3
	public override string ToString() { }
}

// Namespace: 
private class AssetsInfo.AssetsInfoData // TypeDefIndex: 6335
{
	// Fields
	private static readonly List<string> ignoreList; // 0x0
	public Dictionary<string, AssetsInfo.dataInfo> assets; // 0x10

	// Methods

	// RVA: 0x1C776AC Offset: 0x1C776AC VA: 0x1C776AC
	public void .ctor() { }

	// RVA: 0x1C7771C Offset: 0x1C7771C VA: 0x1C7771C
	public string getString(Dictionary<string, AssetsInfo.dataInfo> info) { }

	// RVA: 0x1C779B0 Offset: 0x1C779B0 VA: 0x1C779B0 Slot: 3
	public override string ToString() { }

	// RVA: 0x1C779B8 Offset: 0x1C779B8 VA: 0x1C779B8
	private static void .cctor() { }
}

// Namespace: 
public class AvalonVideoPlayer : MonoBehaviour // TypeDefIndex: 6336
{
	// Fields
	[SerializeField] // RVA: 0xCBF7F0 Offset: 0xCBF7F0 VA: 0xCBF7F0
	private Camera renderCamera; // 0x18
	private VideoPlayer videoPlayer; // 0x20
	private bool isCanSkip; // 0x28
	private Action endCallback; // 0x30

	// Methods

	// RVA: 0x1478494 Offset: 0x1478494 VA: 0x1478494
	public void .ctor() { }

	// RVA: 0x147849C Offset: 0x147849C VA: 0x147849C
	public void setup(string path, bool skip) { }

	// RVA: 0x147867C Offset: 0x147867C VA: 0x147867C
	private void errorReceived(VideoPlayer source, string message) { }

	// RVA: 0x1478778 Offset: 0x1478778 VA: 0x1478778
	public bool start(Action endCallback) { }

	// RVA: 0x147890C Offset: 0x147890C VA: 0x147890C
	public void initialize(Camera camera) { }

	// RVA: 0x1478A50 Offset: 0x1478A50 VA: 0x1478A50
	private void soundPause(bool isPause) { }

	[DebuggerHiddenAttribute] // RVA: 0xD36598 Offset: 0xD36598 VA: 0xD36598
	// RVA: 0x147889C Offset: 0x147889C VA: 0x147889C
	private IEnumerator playingVideo() { }

	// RVA: 0x1478680 Offset: 0x1478680 VA: 0x1478680
	private void endVideo() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE8B0 Offset: 0xCAE8B0 VA: 0xCAE8B0
private sealed class AvalonVideoPlayer.<playingVideo>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6337
{
	// Fields
	internal AvalonVideoPlayer $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD45D84 Offset: 0xD45D84 VA: 0xD45D84
	// RVA: 0x1478AF4 Offset: 0x1478AF4 VA: 0x1478AF4
	public void .ctor() { }

	// RVA: 0x1478AFC Offset: 0x1478AFC VA: 0x1478AFC Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45D94 Offset: 0xD45D94 VA: 0xD45D94
	// RVA: 0x1478D60 Offset: 0x1478D60 VA: 0x1478D60 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45DA4 Offset: 0xD45DA4 VA: 0xD45DA4
	// RVA: 0x1478D68 Offset: 0x1478D68 VA: 0x1478D68 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45DB4 Offset: 0xD45DB4 VA: 0xD45DB4
	// RVA: 0x1478D70 Offset: 0x1478D70 VA: 0x1478D70 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45DC4 Offset: 0xD45DC4 VA: 0xD45DC4
	// RVA: 0x1478D84 Offset: 0x1478D84 VA: 0x1478D84 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class BannerComponent : MonoBehaviour // TypeDefIndex: 6338
{
	// Fields
	[SerializeField] // RVA: 0xCBF800 Offset: 0xCBF800 VA: 0xCBF800
	protected UISprite bannerSprite; // 0x18
	[SerializeField] // RVA: 0xCBF810 Offset: 0xCBF810 VA: 0xCBF810
	protected UICommonButton bannerButton; // 0x20
	private string linkBody; // 0x28

	// Methods

	// RVA: 0x147F9C0 Offset: 0x147F9C0 VA: 0x147F9C0
	public void .ctor() { }

	// RVA: 0x147F9C8 Offset: 0x147F9C8 VA: 0x147F9C8
	public void SetBanner(EventEntity eventData) { }

	// RVA: 0x147FA98 Offset: 0x147FA98 VA: 0x147FA98
	public void OnClick() { }
}

// Namespace: 
public class BattleChrControl : MonoBehaviour // TypeDefIndex: 6339
{
	// Fields
	private GameObject targetObject; // 0x18

	// Methods

	// RVA: 0x1D69804 Offset: 0x1D69804 VA: 0x1D69804
	public void .ctor() { }

	// RVA: 0x1D6980C Offset: 0x1D6980C VA: 0x1D6980C
	private void OnAnimEvent(AnimationEvent ev) { }

	// RVA: 0x1D69880 Offset: 0x1D69880 VA: 0x1D69880
	public void setTarget(GameObject obj) { }
}

// Namespace: 
public class BattleChrManager : SingletonMonoBehaviour<BattleChrManager> // TypeDefIndex: 6340
{
	// Fields
	public Transform rootTransform; // 0x18
	public GameObject mayaPrefab; // 0x20
	public static readonly float animFps; // 0x0
	private static readonly string levelMarker; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCBF820 Offset: 0xCBF820 VA: 0xCBF820
	private static Func<Transform, bool> <>f__am$cache0; // 0x10

	// Methods

	// RVA: 0x1D69888 Offset: 0x1D69888 VA: 0x1D69888
	public void .ctor() { }

	// RVA: 0x1D698D8 Offset: 0x1D698D8 VA: 0x1D698D8
	protected void Awake() { }

	// RVA: 0x1D6999C Offset: 0x1D6999C VA: 0x1D6999C
	private void Start() { }

	// RVA: 0x1D69D0C Offset: 0x1D69D0C VA: 0x1D69D0C
	public void SetEvolutionLevel(GameObject gameObject, int level) { }

	// RVA: 0x1D6A298 Offset: 0x1D6A298 VA: 0x1D6A298
	public void AttachAnimationEvents(GameObject gameObject, TextAsset data, string servantName, int level) { }

	// RVA: 0x1D6AAF0 Offset: 0x1D6AAF0 VA: 0x1D6AAF0
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD365A8 Offset: 0xD365A8 VA: 0xD365A8
	// RVA: 0x1D6AB5C Offset: 0x1D6AB5C VA: 0x1D6AB5C
	private static bool <SetEvolutionLevel>m__0(Transform p) { }
}

// Namespace: 
public class BattleServantFaceIconComponent : ServantFaceIconComponent // TypeDefIndex: 6341
{
	// Fields
	[SerializeField] // RVA: 0xCBF830 Offset: 0xCBF830 VA: 0xCBF830
	private UILabel dropNumLabel; // 0xD8
	[SerializeField] // RVA: 0xCBF840 Offset: 0xCBF840 VA: 0xCBF840
	private Color darkModeColor; // 0xE0

	// Methods

