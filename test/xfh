	private int UnmanagedWrite(IntPtr buffer, int length) { }

	// RVA: 0x219C230 Offset: 0x219C230 VA: 0x219C230
	private int ReadInternal(byte[] array, int offset, int count) { }

	// RVA: 0x219C2E8 Offset: 0x219C2E8 VA: 0x219C2E8 Slot: 19
	public override int Read(byte[] dest, int dest_offset, int count) { }

	// RVA: 0x219C4CC Offset: 0x219C4CC VA: 0x219C4CC
	private void WriteInternal(byte[] array, int offset, int count) { }

	// RVA: 0x219C57C Offset: 0x219C57C VA: 0x219C57C Slot: 23
	public override void Write(byte[] src, int src_offset, int count) { }

	// RVA: 0x219BE70 Offset: 0x219BE70 VA: 0x219BE70
	private static void CheckResult(int result, string where) { }

	// RVA: 0x219C72C Offset: 0x219C72C VA: 0x219C72C Slot: 18
	public override void Flush() { }

	// RVA: 0x219C81C Offset: 0x219C81C VA: 0x219C81C Slot: 25
	public override IAsyncResult BeginRead(byte[] buffer, int offset, int count, AsyncCallback cback, object state) { }

	// RVA: 0x219CA68 Offset: 0x219CA68 VA: 0x219CA68 Slot: 26
	public override IAsyncResult BeginWrite(byte[] buffer, int offset, int count, AsyncCallback cback, object state) { }

	// RVA: 0x219CCB4 Offset: 0x219CCB4 VA: 0x219CCB4 Slot: 27
	public override int EndRead(IAsyncResult async_result) { }

	// RVA: 0x219CDDC Offset: 0x219CDDC VA: 0x219CDDC Slot: 28
	public override void EndWrite(IAsyncResult async_result) { }

	// RVA: 0x219CF04 Offset: 0x219CF04 VA: 0x219CF04 Slot: 21
	public override long Seek(long offset, SeekOrigin origin) { }

	// RVA: 0x219CF6C Offset: 0x219CF6C VA: 0x219CF6C Slot: 22
	public override void SetLength(long value) { }

	// RVA: 0x219CFD4 Offset: 0x219CFD4 VA: 0x219CFD4 Slot: 5
	public override bool get_CanRead() { }

	// RVA: 0x219D020 Offset: 0x219D020 VA: 0x219D020 Slot: 6
	public override bool get_CanSeek() { }

	// RVA: 0x219D028 Offset: 0x219D028 VA: 0x219D028 Slot: 7
	public override bool get_CanWrite() { }

	// RVA: 0x219D078 Offset: 0x219D078 VA: 0x219D078 Slot: 9
	public override long get_Length() { }

	// RVA: 0x219D0E0 Offset: 0x219D0E0 VA: 0x219D0E0 Slot: 10
	public override long get_Position() { }

	// RVA: 0x219D148 Offset: 0x219D148 VA: 0x219D148 Slot: 11
	public override void set_Position(long value) { }

	// RVA: 0x219BD30 Offset: 0x219BD30 VA: 0x219BD30
	private static extern IntPtr CreateZStream(CompressionMode compress, bool gzip, DeflateStream.UnmanagedReadOrWrite feeder, IntPtr data) { }

	// RVA: 0x219BE6C Offset: 0x219BE6C VA: 0x219BE6C
	private static extern int CloseZStream(IntPtr stream) { }

	// RVA: 0x219C818 Offset: 0x219C818 VA: 0x219C818
	private static extern int Flush(IntPtr stream) { }

	// RVA: 0x219C2E4 Offset: 0x219C2E4 VA: 0x219C2E4
	private static extern int ReadZStream(IntPtr stream, IntPtr buffer, int length) { }

	// RVA: 0x219C578 Offset: 0x219C578 VA: 0x219C578
	private static extern int WriteZStream(IntPtr stream, IntPtr buffer, int length) { }
}

// Namespace: 
[UnmanagedFunctionPointerAttribute] // RVA: 0xBD05C0 Offset: 0xBD05C0 VA: 0xBD05C0
private sealed class DeflateStream.UnmanagedReadOrWrite : MulticastDelegate // TypeDefIndex: 1326
{
	// Methods

	// RVA: 0x1F269E4 Offset: 0x1F269E4 VA: 0x1F269E4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1F269F4 Offset: 0x1F269F4 VA: 0x1F269F4 Slot: 11
	public virtual int Invoke(IntPtr buffer, int length, IntPtr data) { }

	// RVA: 0x1F26C64 Offset: 0x1F26C64 VA: 0x1F26C64 Slot: 12
	public virtual IAsyncResult BeginInvoke(IntPtr buffer, int length, IntPtr data, AsyncCallback callback, object object) { }

	// RVA: 0x1F26D28 Offset: 0x1F26D28 VA: 0x1F26D28 Slot: 13
	public virtual int EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private sealed class DeflateStream.ReadMethod : MulticastDelegate // TypeDefIndex: 1327
{
	// Methods

	// RVA: 0x1F264F0 Offset: 0x1F264F0 VA: 0x1F264F0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1F26500 Offset: 0x1F26500 VA: 0x1F26500 Slot: 11
	public virtual int Invoke(byte[] array, int offset, int count) { }

	// RVA: 0x1F268F4 Offset: 0x1F268F4 VA: 0x1F268F4 Slot: 12
	public virtual IAsyncResult BeginInvoke(byte[] array, int offset, int count, AsyncCallback callback, object object) { }

	// RVA: 0x1F269A8 Offset: 0x1F269A8 VA: 0x1F269A8 Slot: 13
	public virtual int EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private sealed class DeflateStream.WriteMethod : MulticastDelegate // TypeDefIndex: 1328
{
	// Methods

	// RVA: 0x1F26D64 Offset: 0x1F26D64 VA: 0x1F26D64
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1F26D74 Offset: 0x1F26D74 VA: 0x1F26D74 Slot: 11
	public virtual void Invoke(byte[] array, int offset, int count) { }

	// RVA: 0x1F27164 Offset: 0x1F27164 VA: 0x1F27164 Slot: 12
	public virtual IAsyncResult BeginInvoke(byte[] array, int offset, int count, AsyncCallback callback, object object) { }

	// RVA: 0x1F27218 Offset: 0x1F27218 VA: 0x1F27218 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.IO.Compression
public class GZipStream : Stream // TypeDefIndex: 1329
{
	// Fields
	private DeflateStream deflateStream; // 0x10

	// Properties
	public override bool CanRead { get; }
	public override bool CanSeek { get; }
	public override bool CanWrite { get; }
	public override long Length { get; }
	public override long Position { get; set; }

	// Methods

	// RVA: 0x1F27224 Offset: 0x1F27224 VA: 0x1F27224
	public void .ctor(Stream compressedStream, CompressionMode mode) { }

	// RVA: 0x1F2722C Offset: 0x1F2722C VA: 0x1F2722C
	public void .ctor(Stream compressedStream, CompressionMode mode, bool leaveOpen) { }

	// RVA: 0x1F272E4 Offset: 0x1F272E4 VA: 0x1F272E4 Slot: 12
	protected override void Dispose(bool disposing) { }

	// RVA: 0x1F27338 Offset: 0x1F27338 VA: 0x1F27338 Slot: 19
	public override int Read(byte[] dest, int dest_offset, int count) { }

	// RVA: 0x1F27390 Offset: 0x1F27390 VA: 0x1F27390 Slot: 23
	public override void Write(byte[] src, int src_offset, int count) { }

	// RVA: 0x1F273E8 Offset: 0x1F273E8 VA: 0x1F273E8 Slot: 18
	public override void Flush() { }

	// RVA: 0x1F27420 Offset: 0x1F27420 VA: 0x1F27420 Slot: 21
	public override long Seek(long offset, SeekOrigin origin) { }

	// RVA: 0x1F27470 Offset: 0x1F27470 VA: 0x1F27470 Slot: 22
	public override void SetLength(long value) { }

	// RVA: 0x1F274B0 Offset: 0x1F274B0 VA: 0x1F274B0 Slot: 25
	public override IAsyncResult BeginRead(byte[] buffer, int offset, int count, AsyncCallback cback, object state) { }

	// RVA: 0x1F27520 Offset: 0x1F27520 VA: 0x1F27520 Slot: 26
	public override IAsyncResult BeginWrite(byte[] buffer, int offset, int count, AsyncCallback cback, object state) { }

	// RVA: 0x1F27590 Offset: 0x1F27590 VA: 0x1F27590 Slot: 27
	public override int EndRead(IAsyncResult async_result) { }

	// RVA: 0x1F275D0 Offset: 0x1F275D0 VA: 0x1F275D0 Slot: 28
	public override void EndWrite(IAsyncResult async_result) { }

	// RVA: 0x1F27610 Offset: 0x1F27610 VA: 0x1F27610 Slot: 5
	public override bool get_CanRead() { }

	// RVA: 0x1F27644 Offset: 0x1F27644 VA: 0x1F27644 Slot: 6
	public override bool get_CanSeek() { }

	// RVA: 0x1F27678 Offset: 0x1F27678 VA: 0x1F27678 Slot: 7
	public override bool get_CanWrite() { }

	// RVA: 0x1F276AC Offset: 0x1F276AC VA: 0x1F276AC Slot: 9
	public override long get_Length() { }

	// RVA: 0x1F276E0 Offset: 0x1F276E0 VA: 0x1F276E0 Slot: 10
	public override long get_Position() { }

	// RVA: 0x1F27714 Offset: 0x1F27714 VA: 0x1F27714 Slot: 11
	public override void set_Position(long value) { }
}

// Namespace: System.IO
internal sealed class MonoIO // TypeDefIndex: 1330
{
	// Properties
	public static IntPtr ConsoleOutput { get; }
	public static IntPtr ConsoleInput { get; }
	public static IntPtr ConsoleError { get; }

	// Methods

	// RVA: 0x1F27750 Offset: 0x1F27750 VA: 0x1F27750
	public static bool Close(IntPtr handle, out MonoIOError error) { }

	// RVA: 0x1F27754 Offset: 0x1F27754 VA: 0x1F27754
	public static IntPtr get_ConsoleOutput() { }

	// RVA: 0x1F27758 Offset: 0x1F27758 VA: 0x1F27758
	public static IntPtr get_ConsoleInput() { }

	// RVA: 0x1F2775C Offset: 0x1F2775C VA: 0x1F2775C
	public static IntPtr get_ConsoleError() { }

	// RVA: 0x1F27760 Offset: 0x1F27760 VA: 0x1F27760
	public static bool CreatePipe(out IntPtr read_handle, out IntPtr write_handle) { }

	// RVA: 0x1F27764 Offset: 0x1F27764 VA: 0x1F27764
	public static bool DuplicateHandle(IntPtr source_process_handle, IntPtr source_handle, IntPtr target_process_handle, out IntPtr target_handle, int access, int inherit, int options) { }
}

// Namespace: System.IO
internal enum MonoIOError // TypeDefIndex: 1331
{
	// Fields
	public int value__; // 0x0
	public const MonoIOError ERROR_SUCCESS = 0;
	public const MonoIOError ERROR_INVALID_FUNCTION = 1;
	public const MonoIOError ERROR_FILE_NOT_FOUND = 2;
	public const MonoIOError ERROR_PATH_NOT_FOUND = 3;
	public const MonoIOError ERROR_TOO_MANY_OPEN_FILES = 4;
	public const MonoIOError ERROR_ACCESS_DENIED = 5;
	public const MonoIOError ERROR_INVALID_HANDLE = 6;
	public const MonoIOError ERROR_ARENA_TRASHED = 7;
	public const MonoIOError ERROR_NOT_ENOUGH_MEMORY = 8;
	public const MonoIOError ERROR_INVALID_BLOCK = 9;
	public const MonoIOError ERROR_BAD_ENVIRONMENT = 10;
	public const MonoIOError ERROR_BAD_FORMAT = 11;
	public const MonoIOError ERROR_INVALID_ACCESS = 12;
	public const MonoIOError ERROR_INVALID_DATA = 13;
	public const MonoIOError ERROR_OUTOFMEMORY = 14;
	public const MonoIOError ERROR_INVALID_DRIVE = 15;
	public const MonoIOError ERROR_CURRENT_DIRECTORY = 16;
	public const MonoIOError ERROR_NOT_SAME_DEVICE = 17;
	public const MonoIOError ERROR_NO_MORE_FILES = 18;
	public const MonoIOError ERROR_WRITE_PROTECT = 19;
	public const MonoIOError ERROR_BAD_UNIT = 20;
	public const MonoIOError ERROR_NOT_READY = 21;
	public const MonoIOError ERROR_BAD_COMMAND = 22;
	public const MonoIOError ERROR_CRC = 23;
	public const MonoIOError ERROR_BAD_LENGTH = 24;
	public const MonoIOError ERROR_SEEK = 25;
	public const MonoIOError ERROR_NOT_DOS_DISK = 26;
	public const MonoIOError ERROR_SECTOR_NOT_FOUND = 27;
	public const MonoIOError ERROR_OUT_OF_PAPER = 28;
	public const MonoIOError ERROR_WRITE_FAULT = 29;
	public const MonoIOError ERROR_READ_FAULT = 30;
	public const MonoIOError ERROR_GEN_FAILURE = 31;
	public const MonoIOError ERROR_SHARING_VIOLATION = 32;
	public const MonoIOError ERROR_LOCK_VIOLATION = 33;
	public const MonoIOError ERROR_WRONG_DISK = 34;
	public const MonoIOError ERROR_SHARING_BUFFER_EXCEEDED = 36;
	public const MonoIOError ERROR_HANDLE_EOF = 38;
	public const MonoIOError ERROR_HANDLE_DISK_FULL = 39;
	public const MonoIOError ERROR_NOT_SUPPORTED = 50;
	public const MonoIOError ERROR_REM_NOT_LIST = 51;
	public const MonoIOError ERROR_DUP_NAME = 52;
	public const MonoIOError ERROR_BAD_NETPATH = 53;
	public const MonoIOError ERROR_NETWORK_BUSY = 54;
	public const MonoIOError ERROR_DEV_NOT_EXIST = 55;
	public const MonoIOError ERROR_TOO_MANY_CMDS = 56;
	public const MonoIOError ERROR_ADAP_HDW_ERR = 57;
	public const MonoIOError ERROR_BAD_NET_RESP = 58;
	public const MonoIOError ERROR_UNEXP_NET_ERR = 59;
	public const MonoIOError ERROR_BAD_REM_ADAP = 60;
	public const MonoIOError ERROR_PRINTQ_FULL = 61;
	public const MonoIOError ERROR_NO_SPOOL_SPACE = 62;
	public const MonoIOError ERROR_PRINT_CANCELLED = 63;
	public const MonoIOError ERROR_NETNAME_DELETED = 64;
	public const MonoIOError ERROR_NETWORK_ACCESS_DENIED = 65;
	public const MonoIOError ERROR_BAD_DEV_TYPE = 66;
	public const MonoIOError ERROR_BAD_NET_NAME = 67;
	public const MonoIOError ERROR_TOO_MANY_NAMES = 68;
	public const MonoIOError ERROR_TOO_MANY_SESS = 69;
	public const MonoIOError ERROR_SHARING_PAUSED = 70;
	public const MonoIOError ERROR_REQ_NOT_ACCEP = 71;
	public const MonoIOError ERROR_REDIR_PAUSED = 72;
	public const MonoIOError ERROR_FILE_EXISTS = 80;
	public const MonoIOError ERROR_CANNOT_MAKE = 82;
	public const MonoIOError ERROR_FAIL_I24 = 83;
	public const MonoIOError ERROR_OUT_OF_STRUCTURES = 84;
	public const MonoIOError ERROR_ALREADY_ASSIGNED = 85;
	public const MonoIOError ERROR_INVALID_PASSWORD = 86;
	public const MonoIOError ERROR_INVALID_PARAMETER = 87;
	public const MonoIOError ERROR_NET_WRITE_FAULT = 88;
	public const MonoIOError ERROR_NO_PROC_SLOTS = 89;
	public const MonoIOError ERROR_TOO_MANY_SEMAPHORES = 100;
	public const MonoIOError ERROR_EXCL_SEM_ALREADY_OWNED = 101;
	public const MonoIOError ERROR_SEM_IS_SET = 102;
	public const MonoIOError ERROR_TOO_MANY_SEM_REQUESTS = 103;
	public const MonoIOError ERROR_INVALID_AT_INTERRUPT_TIME = 104;
	public const MonoIOError ERROR_SEM_OWNER_DIED = 105;
	public const MonoIOError ERROR_SEM_USER_LIMIT = 106;
	public const MonoIOError ERROR_DISK_CHANGE = 107;
	public const MonoIOError ERROR_DRIVE_LOCKED = 108;
	public const MonoIOError ERROR_BROKEN_PIPE = 109;
	public const MonoIOError ERROR_OPEN_FAILED = 110;
	public const MonoIOError ERROR_BUFFER_OVERFLOW = 111;
	public const MonoIOError ERROR_DISK_FULL = 112;
	public const MonoIOError ERROR_NO_MORE_SEARCH_HANDLES = 113;
	public const MonoIOError ERROR_INVALID_TARGET_HANDLE = 114;
	public const MonoIOError ERROR_INVALID_CATEGORY = 117;
	public const MonoIOError ERROR_INVALID_VERIFY_SWITCH = 118;
	public const MonoIOError ERROR_BAD_DRIVER_LEVEL = 119;
	public const MonoIOError ERROR_CALL_NOT_IMPLEMENTED = 120;
	public const MonoIOError ERROR_SEM_TIMEOUT = 121;
	public const MonoIOError ERROR_INSUFFICIENT_BUFFER = 122;
	public const MonoIOError ERROR_INVALID_NAME = 123;
	public const MonoIOError ERROR_INVALID_LEVEL = 124;
	public const MonoIOError ERROR_NO_VOLUME_LABEL = 125;
	public const MonoIOError ERROR_MOD_NOT_FOUND = 126;
	public const MonoIOError ERROR_PROC_NOT_FOUND = 127;
	public const MonoIOError ERROR_WAIT_NO_CHILDREN = 128;
	public const MonoIOError ERROR_CHILD_NOT_COMPLETE = 129;
	public const MonoIOError ERROR_DIRECT_ACCESS_HANDLE = 130;
	public const MonoIOError ERROR_NEGATIVE_SEEK = 131;
	public const MonoIOError ERROR_SEEK_ON_DEVICE = 132;
	public const MonoIOError ERROR_IS_JOIN_TARGET = 133;
	public const MonoIOError ERROR_IS_JOINED = 134;
	public const MonoIOError ERROR_IS_SUBSTED = 135;
	public const MonoIOError ERROR_NOT_JOINED = 136;
	public const MonoIOError ERROR_NOT_SUBSTED = 137;
	public const MonoIOError ERROR_JOIN_TO_JOIN = 138;
	public const MonoIOError ERROR_SUBST_TO_SUBST = 139;
	public const MonoIOError ERROR_JOIN_TO_SUBST = 140;
	public const MonoIOError ERROR_SUBST_TO_JOIN = 141;
	public const MonoIOError ERROR_BUSY_DRIVE = 142;
	public const MonoIOError ERROR_SAME_DRIVE = 143;
	public const MonoIOError ERROR_DIR_NOT_ROOT = 144;
	public const MonoIOError ERROR_DIR_NOT_EMPTY = 145;
	public const MonoIOError ERROR_IS_SUBST_PATH = 146;
	public const MonoIOError ERROR_IS_JOIN_PATH = 147;
	public const MonoIOError ERROR_PATH_BUSY = 148;
	public const MonoIOError ERROR_IS_SUBST_TARGET = 149;
	public const MonoIOError ERROR_SYSTEM_TRACE = 150;
	public const MonoIOError ERROR_INVALID_EVENT_COUNT = 151;
	public const MonoIOError ERROR_TOO_MANY_MUXWAITERS = 152;
	public const MonoIOError ERROR_INVALID_LIST_FORMAT = 153;
	public const MonoIOError ERROR_LABEL_TOO_LONG = 154;
	public const MonoIOError ERROR_TOO_MANY_TCBS = 155;
	public const MonoIOError ERROR_SIGNAL_REFUSED = 156;
	public const MonoIOError ERROR_DISCARDED = 157;
	public const MonoIOError ERROR_NOT_LOCKED = 158;
	public const MonoIOError ERROR_BAD_THREADID_ADDR = 159;
	public const MonoIOError ERROR_BAD_ARGUMENTS = 160;
	public const MonoIOError ERROR_BAD_PATHNAME = 161;
	public const MonoIOError ERROR_SIGNAL_PENDING = 162;
	public const MonoIOError ERROR_MAX_THRDS_REACHED = 164;
	public const MonoIOError ERROR_LOCK_FAILED = 167;
	public const MonoIOError ERROR_BUSY = 170;
	public const MonoIOError ERROR_CANCEL_VIOLATION = 173;
	public const MonoIOError ERROR_ATOMIC_LOCKS_NOT_SUPPORTED = 174;
	public const MonoIOError ERROR_INVALID_SEGMENT_NUMBER = 180;
	public const MonoIOError ERROR_INVALID_ORDINAL = 182;
	public const MonoIOError ERROR_ALREADY_EXISTS = 183;
	public const MonoIOError ERROR_INVALID_FLAG_NUMBER = 186;
	public const MonoIOError ERROR_SEM_NOT_FOUND = 187;
	public const MonoIOError ERROR_INVALID_STARTING_CODESEG = 188;
	public const MonoIOError ERROR_INVALID_STACKSEG = 189;
	public const MonoIOError ERROR_INVALID_MODULETYPE = 190;
	public const MonoIOError ERROR_INVALID_EXE_SIGNATURE = 191;
	public const MonoIOError ERROR_EXE_MARKED_INVALID = 192;
	public const MonoIOError ERROR_BAD_EXE_FORMAT = 193;
	public const MonoIOError ERROR_ITERATED_DATA_EXCEEDS_64k = 194;
	public const MonoIOError ERROR_INVALID_MINALLOCSIZE = 195;
	public const MonoIOError ERROR_DYNLINK_FROM_INVALID_RING = 196;
	public const MonoIOError ERROR_IOPL_NOT_ENABLED = 197;
	public const MonoIOError ERROR_INVALID_SEGDPL = 198;
	public const MonoIOError ERROR_AUTODATASEG_EXCEEDS_64k = 199;
	public const MonoIOError ERROR_RING2SEG_MUST_BE_MOVABLE = 200;
	public const MonoIOError ERROR_RELOC_CHAIN_XEEDS_SEGLIM = 201;
	public const MonoIOError ERROR_INFLOOP_IN_RELOC_CHAIN = 202;
	public const MonoIOError ERROR_ENVVAR_NOT_FOUND = 203;
	public const MonoIOError ERROR_NO_SIGNAL_SENT = 205;
	public const MonoIOError ERROR_FILENAME_EXCED_RANGE = 206;
	public const MonoIOError ERROR_RING2_STACK_IN_USE = 207;
	public const MonoIOError ERROR_META_EXPANSION_TOO_LONG = 208;
	public const MonoIOError ERROR_INVALID_SIGNAL_NUMBER = 209;
	public const MonoIOError ERROR_THREAD_1_INACTIVE = 210;
	public const MonoIOError ERROR_LOCKED = 212;
	public const MonoIOError ERROR_TOO_MANY_MODULES = 214;
	public const MonoIOError ERROR_NESTING_NOT_ALLOWED = 215;
	public const MonoIOError ERROR_EXE_MACHINE_TYPE_MISMATCH = 216;
	public const MonoIOError ERROR_BAD_PIPE = 230;
	public const MonoIOError ERROR_PIPE_BUSY = 231;
	public const MonoIOError ERROR_NO_DATA = 232;
	public const MonoIOError ERROR_PIPE_NOT_CONNECTED = 233;
	public const MonoIOError ERROR_MORE_DATA = 234;
	public const MonoIOError ERROR_VC_DISCONNECTED = 240;
	public const MonoIOError ERROR_INVALID_EA_NAME = 254;
	public const MonoIOError ERROR_EA_LIST_INCONSISTENT = 255;
	public const MonoIOError WAIT_TIMEOUT = 258;
	public const MonoIOError ERROR_NO_MORE_ITEMS = 259;
	public const MonoIOError ERROR_CANNOT_COPY = 266;
	public const MonoIOError ERROR_DIRECTORY = 267;
	public const MonoIOError ERROR_EAS_DIDNT_FIT = 275;
	public const MonoIOError ERROR_EA_FILE_CORRUPT = 276;
	public const MonoIOError ERROR_EA_TABLE_FULL = 277;
	public const MonoIOError ERROR_INVALID_EA_HANDLE = 278;
	public const MonoIOError ERROR_EAS_NOT_SUPPORTED = 282;
	public const MonoIOError ERROR_NOT_OWNER = 288;
	public const MonoIOError ERROR_TOO_MANY_POSTS = 298;
	public const MonoIOError ERROR_PARTIAL_COPY = 299;
	public const MonoIOError ERROR_OPLOCK_NOT_GRANTED = 300;
	public const MonoIOError ERROR_INVALID_OPLOCK_PROTOCOL = 301;
	public const MonoIOError ERROR_DISK_TOO_FRAGMENTED = 302;
	public const MonoIOError ERROR_DELETE_PENDING = 303;
	public const MonoIOError ERROR_MR_MID_NOT_FOUND = 317;
	public const MonoIOError ERROR_INVALID_ADDRESS = 487;
	public const MonoIOError ERROR_ARITHMETIC_OVERFLOW = 534;
	public const MonoIOError ERROR_PIPE_CONNECTED = 535;
	public const MonoIOError ERROR_PIPE_LISTENING = 536;
	public const MonoIOError ERROR_EA_ACCESS_DENIED = 994;
	public const MonoIOError ERROR_OPERATION_ABORTED = 995;
	public const MonoIOError ERROR_IO_INCOMPLETE = 996;
	public const MonoIOError ERROR_IO_PENDING = 997;
	public const MonoIOError ERROR_NOACCESS = 998;
	public const MonoIOError ERROR_SWAPERROR = 999;
	public const MonoIOError ERROR_STACK_OVERFLOW = 1001;
	public const MonoIOError ERROR_INVALID_MESSAGE = 1002;
	public const MonoIOError ERROR_CAN_NOT_COMPLETE = 1003;
	public const MonoIOError ERROR_INVALID_FLAGS = 1004;
	public const MonoIOError ERROR_UNRECOGNIZED_VOLUME = 1005;
	public const MonoIOError ERROR_FILE_INVALID = 1006;
	public const MonoIOError ERROR_FULLSCREEN_MODE = 1007;
	public const MonoIOError ERROR_NO_TOKEN = 1008;
	public const MonoIOError ERROR_BADDB = 1009;
	public const MonoIOError ERROR_BADKEY = 1010;
	public const MonoIOError ERROR_CANTOPEN = 1011;
	public const MonoIOError ERROR_CANTREAD = 1012;
	public const MonoIOError ERROR_CANTWRITE = 1013;
	public const MonoIOError ERROR_REGISTRY_RECOVERED = 1014;
	public const MonoIOError ERROR_REGISTRY_CORRUPT = 1015;
	public const MonoIOError ERROR_REGISTRY_IO_FAILED = 1016;
	public const MonoIOError ERROR_NOT_REGISTRY_FILE = 1017;
	public const MonoIOError ERROR_KEY_DELETED = 1018;
	public const MonoIOError ERROR_NO_LOG_SPACE = 1019;
	public const MonoIOError ERROR_KEY_HAS_CHILDREN = 1020;
	public const MonoIOError ERROR_CHILD_MUST_BE_VOLATILE = 1021;
	public const MonoIOError ERROR_NOTIFY_ENUM_DIR = 1022;
	public const MonoIOError ERROR_DEPENDENT_SERVICES_RUNNING = 1051;
	public const MonoIOError ERROR_INVALID_SERVICE_CONTROL = 1052;
	public const MonoIOError ERROR_SERVICE_REQUEST_TIMEOUT = 1053;
	public const MonoIOError ERROR_SERVICE_NO_THREAD = 1054;
	public const MonoIOError ERROR_SERVICE_DATABASE_LOCKED = 1055;
	public const MonoIOError ERROR_SERVICE_ALREADY_RUNNING = 1056;
	public const MonoIOError ERROR_INVALID_SERVICE_ACCOUNT = 1057;
	public const MonoIOError ERROR_SERVICE_DISABLED = 1058;
	public const MonoIOError ERROR_CIRCULAR_DEPENDENCY = 1059;
	public const MonoIOError ERROR_SERVICE_DOES_NOT_EXIST = 1060;
	public const MonoIOError ERROR_SERVICE_CANNOT_ACCEPT_CTRL = 1061;
	public const MonoIOError ERROR_SERVICE_NOT_ACTIVE = 1062;
	public const MonoIOError ERROR_FAILED_SERVICE_CONTROLLER_CONNECT = 1063;
	public const MonoIOError ERROR_EXCEPTION_IN_SERVICE = 1064;
	public const MonoIOError ERROR_DATABASE_DOES_NOT_EXIST = 1065;
	public const MonoIOError ERROR_SERVICE_SPECIFIC_ERROR = 1066;
	public const MonoIOError ERROR_PROCESS_ABORTED = 1067;
	public const MonoIOError ERROR_SERVICE_DEPENDENCY_FAIL = 1068;
	public const MonoIOError ERROR_SERVICE_LOGON_FAILED = 1069;
	public const MonoIOError ERROR_SERVICE_START_HANG = 1070;
	public const MonoIOError ERROR_INVALID_SERVICE_LOCK = 1071;
	public const MonoIOError ERROR_SERVICE_MARKED_FOR_DELETE = 1072;
	public const MonoIOError ERROR_SERVICE_EXISTS = 1073;
	public const MonoIOError ERROR_ALREADY_RUNNING_LKG = 1074;
	public const MonoIOError ERROR_SERVICE_DEPENDENCY_DELETED = 1075;
	public const MonoIOError ERROR_BOOT_ALREADY_ACCEPTED = 1076;
	public const MonoIOError ERROR_SERVICE_NEVER_STARTED = 1077;
	public const MonoIOError ERROR_DUPLICATE_SERVICE_NAME = 1078;
	public const MonoIOError ERROR_DIFFERENT_SERVICE_ACCOUNT = 1079;
	public const MonoIOError ERROR_CANNOT_DETECT_DRIVER_FAILURE = 1080;
	public const MonoIOError ERROR_CANNOT_DETECT_PROCESS_ABORT = 1081;
	public const MonoIOError ERROR_NO_RECOVERY_PROGRAM = 1082;
	public const MonoIOError ERROR_SERVICE_NOT_IN_EXE = 1083;
	public const MonoIOError ERROR_NOT_SAFEBOOT_SERVICE = 1084;
	public const MonoIOError ERROR_END_OF_MEDIA = 1100;
	public const MonoIOError ERROR_FILEMARK_DETECTED = 1101;
	public const MonoIOError ERROR_BEGINNING_OF_MEDIA = 1102;
	public const MonoIOError ERROR_SETMARK_DETECTED = 1103;
	public const MonoIOError ERROR_NO_DATA_DETECTED = 1104;
	public const MonoIOError ERROR_PARTITION_FAILURE = 1105;
	public const MonoIOError ERROR_INVALID_BLOCK_LENGTH = 1106;
	public const MonoIOError ERROR_DEVICE_NOT_PARTITIONED = 1107;
	public const MonoIOError ERROR_UNABLE_TO_LOCK_MEDIA = 1108;
	public const MonoIOError ERROR_UNABLE_TO_UNLOAD_MEDIA = 1109;
	public const MonoIOError ERROR_MEDIA_CHANGED = 1110;
	public const MonoIOError ERROR_BUS_RESET = 1111;
	public const MonoIOError ERROR_NO_MEDIA_IN_DRIVE = 1112;
	public const MonoIOError ERROR_NO_UNICODE_TRANSLATION = 1113;
	public const MonoIOError ERROR_DLL_INIT_FAILED = 1114;
	public const MonoIOError ERROR_SHUTDOWN_IN_PROGRESS = 1115;
	public const MonoIOError ERROR_NO_SHUTDOWN_IN_PROGRESS = 1116;
	public const MonoIOError ERROR_IO_DEVICE = 1117;
	public const MonoIOError ERROR_SERIAL_NO_DEVICE = 1118;
	public const MonoIOError ERROR_IRQ_BUSY = 1119;
	public const MonoIOError ERROR_MORE_WRITES = 1120;
	public const MonoIOError ERROR_COUNTER_TIMEOUT = 1121;
	public const MonoIOError ERROR_FLOPPY_ID_MARK_NOT_FOUND = 1122;
	public const MonoIOError ERROR_FLOPPY_WRONG_CYLINDER = 1123;
	public const MonoIOError ERROR_FLOPPY_UNKNOWN_ERROR = 1124;
	public const MonoIOError ERROR_FLOPPY_BAD_REGISTERS = 1125;
	public const MonoIOError ERROR_DISK_RECALIBRATE_FAILED = 1126;
	public const MonoIOError ERROR_DISK_OPERATION_FAILED = 1127;
	public const MonoIOError ERROR_DISK_RESET_FAILED = 1128;
	public const MonoIOError ERROR_EOM_OVERFLOW = 1129;
	public const MonoIOError ERROR_NOT_ENOUGH_SERVER_MEMORY = 1130;
	public const MonoIOError ERROR_POSSIBLE_DEADLOCK = 1131;
	public const MonoIOError ERROR_MAPPED_ALIGNMENT = 1132;
	public const MonoIOError ERROR_SET_POWER_STATE_VETOED = 1140;
	public const MonoIOError ERROR_SET_POWER_STATE_FAILED = 1141;
	public const MonoIOError ERROR_TOO_MANY_LINKS = 1142;
	public const MonoIOError ERROR_OLD_WIN_VERSION = 1150;
	public const MonoIOError ERROR_APP_WRONG_OS = 1151;
	public const MonoIOError ERROR_SINGLE_INSTANCE_APP = 1152;
	public const MonoIOError ERROR_RMODE_APP = 1153;
	public const MonoIOError ERROR_INVALID_DLL = 1154;
	public const MonoIOError ERROR_NO_ASSOCIATION = 1155;
	public const MonoIOError ERROR_DDE_FAIL = 1156;
	public const MonoIOError ERROR_DLL_NOT_FOUND = 1157;
	public const MonoIOError ERROR_NO_MORE_USER_HANDLES = 1158;
	public const MonoIOError ERROR_MESSAGE_SYNC_ONLY = 1159;
	public const MonoIOError ERROR_SOURCE_ELEMENT_EMPTY = 1160;
	public const MonoIOError ERROR_DESTINATION_ELEMENT_FULL = 1161;
	public const MonoIOError ERROR_ILLEGAL_ELEMENT_ADDRESS = 1162;
	public const MonoIOError ERROR_MAGAZINE_NOT_PRESENT = 1163;
	public const MonoIOError ERROR_DEVICE_REINITIALIZATION_NEEDED = 1164;
	public const MonoIOError ERROR_DEVICE_REQUIRES_CLEANING = 1165;
	public const MonoIOError ERROR_DEVICE_DOOR_OPEN = 1166;
	public const MonoIOError ERROR_DEVICE_NOT_CONNECTED = 1167;
	public const MonoIOError ERROR_NOT_FOUND = 1168;
	public const MonoIOError ERROR_NO_MATCH = 1169;
	public const MonoIOError ERROR_SET_NOT_FOUND = 1170;
	public const MonoIOError ERROR_POINT_NOT_FOUND = 1171;
	public const MonoIOError ERROR_NO_TRACKING_SERVICE = 1172;
	public const MonoIOError ERROR_NO_VOLUME_ID = 1173;
	public const MonoIOError ERROR_UNABLE_TO_REMOVE_REPLACED = 1175;
	public const MonoIOError ERROR_UNABLE_TO_MOVE_REPLACEMENT = 1176;
	public const MonoIOError ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 = 1177;
	public const MonoIOError ERROR_JOURNAL_DELETE_IN_PROGRESS = 1178;
	public const MonoIOError ERROR_JOURNAL_NOT_ACTIVE = 1179;
	public const MonoIOError ERROR_POTENTIAL_FILE_FOUND = 1180;
	public const MonoIOError ERROR_JOURNAL_ENTRY_DELETED = 1181;
	public const MonoIOError ERROR_BAD_DEVICE = 1200;
	public const MonoIOError ERROR_CONNECTION_UNAVAIL = 1201;
	public const MonoIOError ERROR_DEVICE_ALREADY_REMEMBERED = 1202;
	public const MonoIOError ERROR_NO_NET_OR_BAD_PATH = 1203;
	public const MonoIOError ERROR_BAD_PROVIDER = 1204;
	public const MonoIOError ERROR_CANNOT_OPEN_PROFILE = 1205;
	public const MonoIOError ERROR_BAD_PROFILE = 1206;
	public const MonoIOError ERROR_NOT_CONTAINER = 1207;
	public const MonoIOError ERROR_EXTENDED_ERROR = 1208;
	public const MonoIOError ERROR_INVALID_GROUPNAME = 1209;
	public const MonoIOError ERROR_INVALID_COMPUTERNAME = 1210;
	public const MonoIOError ERROR_INVALID_EVENTNAME = 1211;
	public const MonoIOError ERROR_INVALID_DOMAINNAME = 1212;
	public const MonoIOError ERROR_INVALID_SERVICENAME = 1213;
	public const MonoIOError ERROR_INVALID_NETNAME = 1214;
	public const MonoIOError ERROR_INVALID_SHARENAME = 1215;
	public const MonoIOError ERROR_INVALID_PASSWORDNAME = 1216;
	public const MonoIOError ERROR_INVALID_MESSAGENAME = 1217;
	public const MonoIOError ERROR_INVALID_MESSAGEDEST = 1218;
	public const MonoIOError ERROR_SESSION_CREDENTIAL_CONFLICT = 1219;
	public const MonoIOError ERROR_REMOTE_SESSION_LIMIT_EXCEEDED = 1220;
	public const MonoIOError ERROR_DUP_DOMAINNAME = 1221;
	public const MonoIOError ERROR_NO_NETWORK = 1222;
	public const MonoIOError ERROR_CANCELLED = 1223;
	public const MonoIOError ERROR_USER_MAPPED_FILE = 1224;
	public const MonoIOError ERROR_CONNECTION_REFUSED = 1225;
	public const MonoIOError ERROR_GRACEFUL_DISCONNECT = 1226;
	public const MonoIOError ERROR_ADDRESS_ALREADY_ASSOCIATED = 1227;
	public const MonoIOError ERROR_ADDRESS_NOT_ASSOCIATED = 1228;
	public const MonoIOError ERROR_CONNECTION_INVALID = 1229;
	public const MonoIOError ERROR_CONNECTION_ACTIVE = 1230;
	public const MonoIOError ERROR_NETWORK_UNREACHABLE = 1231;
	public const MonoIOError ERROR_HOST_UNREACHABLE = 1232;
	public const MonoIOError ERROR_PROTOCOL_UNREACHABLE = 1233;
	public const MonoIOError ERROR_PORT_UNREACHABLE = 1234;
	public const MonoIOError ERROR_REQUEST_ABORTED = 1235;
	public const MonoIOError ERROR_CONNECTION_ABORTED = 1236;
	public const MonoIOError ERROR_RETRY = 1237;
	public const MonoIOError ERROR_CONNECTION_COUNT_LIMIT = 1238;
	public const MonoIOError ERROR_LOGIN_TIME_RESTRICTION = 1239;
	public const MonoIOError ERROR_LOGIN_WKSTA_RESTRICTION = 1240;
	public const MonoIOError ERROR_INCORRECT_ADDRESS = 1241;
	public const MonoIOError ERROR_ALREADY_REGISTERED = 1242;
	public const MonoIOError ERROR_SERVICE_NOT_FOUND = 1243;
	public const MonoIOError ERROR_NOT_AUTHENTICATED = 1244;
	public const MonoIOError ERROR_NOT_LOGGED_ON = 1245;
	public const MonoIOError ERROR_CONTINUE = 1246;
	public const MonoIOError ERROR_ALREADY_INITIALIZED = 1247;
	public const MonoIOError ERROR_NO_MORE_DEVICES = 1248;
	public const MonoIOError ERROR_NO_SUCH_SITE = 1249;
	public const MonoIOError ERROR_DOMAIN_CONTROLLER_EXISTS = 1250;
	public const MonoIOError ERROR_ONLY_IF_CONNECTED = 1251;
	public const MonoIOError ERROR_OVERRIDE_NOCHANGES = 1252;
	public const MonoIOError ERROR_BAD_USER_PROFILE = 1253;
	public const MonoIOError ERROR_NOT_SUPPORTED_ON_SBS = 1254;
	public const MonoIOError ERROR_SERVER_SHUTDOWN_IN_PROGRESS = 1255;
	public const MonoIOError ERROR_HOST_DOWN = 1256;
	public const MonoIOError ERROR_NON_ACCOUNT_SID = 1257;
	public const MonoIOError ERROR_NON_DOMAIN_SID = 1258;
	public const MonoIOError ERROR_APPHELP_BLOCK = 1259;
	public const MonoIOError ERROR_ACCESS_DISABLED_BY_POLICY = 1260;
	public const MonoIOError ERROR_REG_NAT_CONSUMPTION = 1261;
	public const MonoIOError ERROR_CSCSHARE_OFFLINE = 1262;
	public const MonoIOError ERROR_PKINIT_FAILURE = 1263;
	public const MonoIOError ERROR_SMARTCARD_SUBSYSTEM_FAILURE = 1264;
	public const MonoIOError ERROR_DOWNGRADE_DETECTED = 1265;
	public const MonoIOError SEC_E_SMARTCARD_CERT_REVOKED = 1266;
	public const MonoIOError SEC_E_ISSUING_CA_UNTRUSTED = 1267;
	public const MonoIOError SEC_E_REVOCATION_OFFLINE_C = 1268;
	public const MonoIOError SEC_E_PKINIT_CLIENT_FAILUR = 1269;
	public const MonoIOError SEC_E_SMARTCARD_CERT_EXPIRED = 1270;
	public const MonoIOError ERROR_MACHINE_LOCKED = 1271;
	public const MonoIOError ERROR_CALLBACK_SUPPLIED_INVALID_DATA = 1273;
	public const MonoIOError ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED = 1274;
	public const MonoIOError ERROR_DRIVER_BLOCKED = 1275;
	public const MonoIOError ERROR_INVALID_IMPORT_OF_NON_DLL = 1276;
	public const MonoIOError ERROR_NOT_ALL_ASSIGNED = 1300;
	public const MonoIOError ERROR_SOME_NOT_MAPPED = 1301;
	public const MonoIOError ERROR_NO_QUOTAS_FOR_ACCOUNT = 1302;
	public const MonoIOError ERROR_LOCAL_USER_SESSION_KEY = 1303;
	public const MonoIOError ERROR_NULL_LM_PASSWORD = 1304;
	public const MonoIOError ERROR_UNKNOWN_REVISION = 1305;
	public const MonoIOError ERROR_REVISION_MISMATCH = 1306;
	public const MonoIOError ERROR_INVALID_OWNER = 1307;
	public const MonoIOError ERROR_INVALID_PRIMARY_GROUP = 1308;
	public const MonoIOError ERROR_NO_IMPERSONATION_TOKEN = 1309;
	public const MonoIOError ERROR_CANT_DISABLE_MANDATORY = 1310;
	public const MonoIOError ERROR_NO_LOGON_SERVERS = 1311;
	public const MonoIOError ERROR_NO_SUCH_LOGON_SESSION = 1312;
	public const MonoIOError ERROR_NO_SUCH_PRIVILEGE = 1313;
	public const MonoIOError ERROR_PRIVILEGE_NOT_HELD = 1314;
	public const MonoIOError ERROR_INVALID_ACCOUNT_NAME = 1315;
	public const MonoIOError ERROR_USER_EXISTS = 1316;
	public const MonoIOError ERROR_NO_SUCH_USER = 1317;
	public const MonoIOError ERROR_GROUP_EXISTS = 1318;
	public const MonoIOError ERROR_NO_SUCH_GROUP = 1319;
	public const MonoIOError ERROR_MEMBER_IN_GROUP = 1320;
	public const MonoIOError ERROR_MEMBER_NOT_IN_GROUP = 1321;
	public const MonoIOError ERROR_LAST_ADMIN = 1322;
	public const MonoIOError ERROR_WRONG_PASSWORD = 1323;
	public const MonoIOError ERROR_ILL_FORMED_PASSWORD = 1324;
	public const MonoIOError ERROR_PASSWORD_RESTRICTION = 1325;
	public const MonoIOError ERROR_LOGON_FAILURE = 1326;
	public const MonoIOError ERROR_ACCOUNT_RESTRICTION = 1327;
	public const MonoIOError ERROR_INVALID_LOGON_HOURS = 1328;
	public const MonoIOError ERROR_INVALID_WORKSTATION = 1329;
	public const MonoIOError ERROR_PASSWORD_EXPIRED = 1330;
	public const MonoIOError ERROR_ACCOUNT_DISABLED = 1331;
	public const MonoIOError ERROR_NONE_MAPPED = 1332;
	public const MonoIOError ERROR_TOO_MANY_LUIDS_REQUESTED = 1333;
	public const MonoIOError ERROR_LUIDS_EXHAUSTED = 1334;
	public const MonoIOError ERROR_INVALID_SUB_AUTHORITY = 1335;
	public const MonoIOError ERROR_INVALID_ACL = 1336;
	public const MonoIOError ERROR_INVALID_SID = 1337;
	public const MonoIOError ERROR_INVALID_SECURITY_DESCR = 1338;
	public const MonoIOError ERROR_BAD_INHERITANCE_ACL = 1340;
	public const MonoIOError ERROR_SERVER_DISABLED = 1341;
	public const MonoIOError ERROR_SERVER_NOT_DISABLED = 1342;
	public const MonoIOError ERROR_INVALID_ID_AUTHORITY = 1343;
	public const MonoIOError ERROR_ALLOTTED_SPACE_EXCEEDED = 1344;
	public const MonoIOError ERROR_INVALID_GROUP_ATTRIBUTES = 1345;
	public const MonoIOError ERROR_BAD_IMPERSONATION_LEVEL = 1346;
	public const MonoIOError ERROR_CANT_OPEN_ANONYMOUS = 1347;
	public const MonoIOError ERROR_BAD_VALIDATION_CLASS = 1348;
	public const MonoIOError ERROR_BAD_TOKEN_TYPE = 1349;
	public const MonoIOError ERROR_NO_SECURITY_ON_OBJECT = 1350;
	public const MonoIOError ERROR_CANT_ACCESS_DOMAIN_INFO = 1351;
	public const MonoIOError ERROR_INVALID_SERVER_STATE = 1352;
	public const MonoIOError ERROR_INVALID_DOMAIN_STATE = 1353;
	public const MonoIOError ERROR_INVALID_DOMAIN_ROLE = 1354;
	public const MonoIOError ERROR_NO_SUCH_DOMAIN = 1355;
	public const MonoIOError ERROR_DOMAIN_EXISTS = 1356;
	public const MonoIOError ERROR_DOMAIN_LIMIT_EXCEEDED = 1357;
	public const MonoIOError ERROR_INTERNAL_DB_CORRUPTION = 1358;
	public const MonoIOError ERROR_INTERNAL_ERROR = 1359;
	public const MonoIOError ERROR_GENERIC_NOT_MAPPED = 1360;
	public const MonoIOError ERROR_BAD_DESCRIPTOR_FORMAT = 1361;
	public const MonoIOError ERROR_NOT_LOGON_PROCESS = 1362;
	public const MonoIOError ERROR_LOGON_SESSION_EXISTS = 1363;
	public const MonoIOError ERROR_NO_SUCH_PACKAGE = 1364;
	public const MonoIOError ERROR_BAD_LOGON_SESSION_STATE = 1365;
	public const MonoIOError ERROR_LOGON_SESSION_COLLISION = 1366;
	public const MonoIOError ERROR_INVALID_LOGON_TYPE = 1367;
	public const MonoIOError ERROR_CANNOT_IMPERSONATE = 1368;
	public const MonoIOError ERROR_RXACT_INVALID_STATE = 1369;
	public const MonoIOError ERROR_RXACT_COMMIT_FAILURE = 1370;
	public const MonoIOError ERROR_SPECIAL_ACCOUNT = 1371;
	public const MonoIOError ERROR_SPECIAL_GROUP = 1372;
	public const MonoIOError ERROR_SPECIAL_USER = 1373;
	public const MonoIOError ERROR_MEMBERS_PRIMARY_GROUP = 1374;
	public const MonoIOError ERROR_TOKEN_ALREADY_IN_USE = 1375;
	public const MonoIOError ERROR_NO_SUCH_ALIAS = 1376;
	public const MonoIOError ERROR_MEMBER_NOT_IN_ALIAS = 1377;
	public const MonoIOError ERROR_MEMBER_IN_ALIAS = 1378;
	public const MonoIOError ERROR_ALIAS_EXISTS = 1379;
	public const MonoIOError ERROR_LOGON_NOT_GRANTED = 1380;
	public const MonoIOError ERROR_TOO_MANY_SECRETS = 1381;
	public const MonoIOError ERROR_SECRET_TOO_LONG = 1382;
	public const MonoIOError ERROR_INTERNAL_DB_ERROR = 1383;
	public const MonoIOError ERROR_TOO_MANY_CONTEXT_IDS = 1384;
	public const MonoIOError ERROR_LOGON_TYPE_NOT_GRANTED = 1385;
	public const MonoIOError ERROR_NT_CROSS_ENCRYPTION_REQUIRED = 1386;
	public const MonoIOError ERROR_NO_SUCH_MEMBER = 1387;
	public const MonoIOError ERROR_INVALID_MEMBER = 1388;
	public const MonoIOError ERROR_TOO_MANY_SIDS = 1389;
	public const MonoIOError ERROR_LM_CROSS_ENCRYPTION_REQUIRED = 1390;
	public const MonoIOError ERROR_NO_INHERITANCE = 1391;
	public const MonoIOError ERROR_FILE_CORRUPT = 1392;
	public const MonoIOError ERROR_DISK_CORRUPT = 1393;
	public const MonoIOError ERROR_NO_USER_SESSION_KEY = 1394;
	public const MonoIOError ERROR_LICENSE_QUOTA_EXCEEDED = 1395;
	public const MonoIOError ERROR_WRONG_TARGET_NAME = 1396;
	public const MonoIOError ERROR_MUTUAL_AUTH_FAILED = 1397;
	public const MonoIOError ERROR_TIME_SKEW = 1398;
	public const MonoIOError ERROR_CURRENT_DOMAIN_NOT_ALLOWED = 1399;
	public const MonoIOError ERROR_INVALID_WINDOW_HANDLE = 1400;
	public const MonoIOError ERROR_INVALID_MENU_HANDLE = 1401;
	public const MonoIOError ERROR_INVALID_CURSOR_HANDLE = 1402;
	public const MonoIOError ERROR_INVALID_ACCEL_HANDLE = 1403;
	public const MonoIOError ERROR_INVALID_HOOK_HANDLE = 1404;
	public const MonoIOError ERROR_INVALID_DWP_HANDLE = 1405;
	public const MonoIOError ERROR_TLW_WITH_WSCHILD = 1406;
	public const MonoIOError ERROR_CANNOT_FIND_WND_CLASS = 1407;
	public const MonoIOError ERROR_WINDOW_OF_OTHER_THREAD = 1408;
	public const MonoIOError ERROR_HOTKEY_ALREADY_REGISTERED = 1409;
	public const MonoIOError ERROR_CLASS_ALREADY_EXISTS = 1410;
	public const MonoIOError ERROR_CLASS_DOES_NOT_EXIST = 1411;
	public const MonoIOError ERROR_CLASS_HAS_WINDOWS = 1412;
	public const MonoIOError ERROR_INVALID_INDEX = 1413;
	public const MonoIOError ERROR_INVALID_ICON_HANDLE = 1414;
	public const MonoIOError ERROR_PRIVATE_DIALOG_INDEX = 1415;
	public const MonoIOError ERROR_LISTBOX_ID_NOT_FOUND = 1416;
	public const MonoIOError ERROR_NO_WILDCARD_CHARACTERS = 1417;
	public const MonoIOError ERROR_CLIPBOARD_NOT_OPEN = 1418;
	public const MonoIOError ERROR_HOTKEY_NOT_REGISTERED = 1419;
	public const MonoIOError ERROR_WINDOW_NOT_DIALOG = 1420;
	public const MonoIOError ERROR_CONTROL_ID_NOT_FOUND = 1421;
	public const MonoIOError ERROR_INVALID_COMBOBOX_MESSAGE = 1422;
	public const MonoIOError ERROR_WINDOW_NOT_COMBOBOX = 1423;
	public const MonoIOError ERROR_INVALID_EDIT_HEIGHT = 1424;
	public const MonoIOError ERROR_DC_NOT_FOUND = 1425;
	public const MonoIOError ERROR_INVALID_HOOK_FILTER = 1426;
	public const MonoIOError ERROR_INVALID_FILTER_PROC = 1427;
	public const MonoIOError ERROR_HOOK_NEEDS_HMOD = 1428;
	public const MonoIOError ERROR_GLOBAL_ONLY_HOOK = 1429;
	public const MonoIOError ERROR_JOURNAL_HOOK_SET = 1430;
	public const MonoIOError ERROR_HOOK_NOT_INSTALLED = 1431;
	public const MonoIOError ERROR_INVALID_LB_MESSAGE = 1432;
	public const MonoIOError ERROR_SETCOUNT_ON_BAD_LB = 1433;
	public const MonoIOError ERROR_LB_WITHOUT_TABSTOPS = 1434;
	public const MonoIOError ERROR_DESTROY_OBJECT_OF_OTHER_THREAD = 1435;
	public const MonoIOError ERROR_CHILD_WINDOW_MENU = 1436;
	public const MonoIOError ERROR_NO_SYSTEM_MENU = 1437;
	public const MonoIOError ERROR_INVALID_MSGBOX_STYLE = 1438;
	public const MonoIOError ERROR_INVALID_SPI_VALUE = 1439;
	public const MonoIOError ERROR_SCREEN_ALREADY_LOCKED = 1440;
	public const MonoIOError ERROR_HWNDS_HAVE_DIFF_PARENT = 1441;
	public const MonoIOError ERROR_NOT_CHILD_WINDOW = 1442;
	public const MonoIOError ERROR_INVALID_GW_COMMAND = 1443;
	public const MonoIOError ERROR_INVALID_THREAD_ID = 1444;
	public const MonoIOError ERROR_NON_MDICHILD_WINDOW = 1445;
	public const MonoIOError ERROR_POPUP_ALREADY_ACTIVE = 1446;
	public const MonoIOError ERROR_NO_SCROLLBARS = 1447;
	public const MonoIOError ERROR_INVALID_SCROLLBAR_RANGE = 1448;
	public const MonoIOError ERROR_INVALID_SHOWWIN_COMMAND = 1449;
	public const MonoIOError ERROR_NO_SYSTEM_RESOURCES = 1450;
	public const MonoIOError ERROR_NONPAGED_SYSTEM_RESOURCES = 1451;
	public const MonoIOError ERROR_PAGED_SYSTEM_RESOURCES = 1452;
	public const MonoIOError ERROR_WORKING_SET_QUOTA = 1453;
	public const MonoIOError ERROR_PAGEFILE_QUOTA = 1454;
	public const MonoIOError ERROR_COMMITMENT_LIMIT = 1455;
	public const MonoIOError ERROR_MENU_ITEM_NOT_FOUND = 1456;
	public const MonoIOError ERROR_INVALID_KEYBOARD_HANDLE = 1457;
	public const MonoIOError ERROR_HOOK_TYPE_NOT_ALLOWED = 1458;
	public const MonoIOError ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION = 1459;
	public const MonoIOError ERROR_TIMEOUT = 1460;
	public const MonoIOError ERROR_INVALID_MONITOR_HANDLE = 1461;
	public const MonoIOError ERROR_EVENTLOG_FILE_CORRUPT = 1500;
	public const MonoIOError ERROR_EVENTLOG_CANT_START = 1501;
	public const MonoIOError ERROR_LOG_FILE_FULL = 1502;
	public const MonoIOError ERROR_EVENTLOG_FILE_CHANGED = 1503;
	public const MonoIOError ERROR_INSTALL_SERVICE_FAILURE = 1601;
	public const MonoIOError ERROR_INSTALL_USEREXIT = 1602;
	public const MonoIOError ERROR_INSTALL_FAILURE = 1603;
	public const MonoIOError ERROR_INSTALL_SUSPEND = 1604;
	public const MonoIOError ERROR_UNKNOWN_PRODUCT = 1605;
	public const MonoIOError ERROR_UNKNOWN_FEATURE = 1606;
	public const MonoIOError ERROR_UNKNOWN_COMPONENT = 1607;
	public const MonoIOError ERROR_UNKNOWN_PROPERTY = 1608;
	public const MonoIOError ERROR_INVALID_HANDLE_STATE = 1609;
	public const MonoIOError ERROR_BAD_CONFIGURATION = 1610;
	public const MonoIOError ERROR_INDEX_ABSENT = 1611;
	public const MonoIOError ERROR_INSTALL_SOURCE_ABSENT = 1612;
	public const MonoIOError ERROR_INSTALL_PACKAGE_VERSION = 1613;
	public const MonoIOError ERROR_PRODUCT_UNINSTALLED = 1614;
	public const MonoIOError ERROR_BAD_QUERY_SYNTAX = 1615;
	public const MonoIOError ERROR_INVALID_FIELD = 1616;
	public const MonoIOError ERROR_DEVICE_REMOVED = 1617;
	public const MonoIOError ERROR_INSTALL_ALREADY_RUNNING = 1618;
	public const MonoIOError ERROR_INSTALL_PACKAGE_OPEN_FAILED = 1619;
	public const MonoIOError ERROR_INSTALL_PACKAGE_INVALID = 1620;
	public const MonoIOError ERROR_INSTALL_UI_FAILURE = 1621;
	public const MonoIOError ERROR_INSTALL_LOG_FAILURE = 1622;
	public const MonoIOError ERROR_INSTALL_LANGUAGE_UNSUPPORTED = 1623;
	public const MonoIOError ERROR_INSTALL_TRANSFORM_FAILURE = 1624;
	public const MonoIOError ERROR_INSTALL_PACKAGE_REJECTED = 1625;
	public const MonoIOError ERROR_FUNCTION_NOT_CALLED = 1626;
	public const MonoIOError ERROR_FUNCTION_FAILED = 1627;
	public const MonoIOError ERROR_INVALID_TABLE = 1628;
	public const MonoIOError ERROR_DATATYPE_MISMATCH = 1629;
	public const MonoIOError ERROR_UNSUPPORTED_TYPE = 1630;
	public const MonoIOError ERROR_CREATE_FAILED = 1631;
	public const MonoIOError ERROR_INSTALL_TEMP_UNWRITABLE = 1632;
	public const MonoIOError ERROR_INSTALL_PLATFORM_UNSUPPORTED = 1633;
	public const MonoIOError ERROR_INSTALL_NOTUSED = 1634;
	public const MonoIOError ERROR_PATCH_PACKAGE_OPEN_FAILED = 1635;
	public const MonoIOError ERROR_PATCH_PACKAGE_INVALID = 1636;
	public const MonoIOError ERROR_PATCH_PACKAGE_UNSUPPORTED = 1637;
	public const MonoIOError ERROR_PRODUCT_VERSION = 1638;
	public const MonoIOError ERROR_INVALID_COMMAND_LINE = 1639;
	public const MonoIOError ERROR_INSTALL_REMOTE_DISALLOWED = 1640;
	public const MonoIOError ERROR_SUCCESS_REBOOT_INITIATED = 1641;
	public const MonoIOError ERROR_PATCH_TARGET_NOT_FOUND = 1642;
	public const MonoIOError ERROR_PATCH_PACKAGE_REJECTED = 1643;
	public const MonoIOError ERROR_INSTALL_TRANSFORM_REJECTED = 1644;
	public const MonoIOError RPC_S_INVALID_STRING_BINDING = 1700;
	public const MonoIOError RPC_S_WRONG_KIND_OF_BINDING = 1701;
	public const MonoIOError RPC_S_INVALID_BINDING = 1702;
	public const MonoIOError RPC_S_PROTSEQ_NOT_SUPPORTED = 1703;
	public const MonoIOError RPC_S_INVALID_RPC_PROTSEQ = 1704;
	public const MonoIOError RPC_S_INVALID_STRING_UUID = 1705;
	public const MonoIOError RPC_S_INVALID_ENDPOINT_FORMAT = 1706;
	public const MonoIOError RPC_S_INVALID_NET_ADDR = 1707;
	public const MonoIOError RPC_S_NO_ENDPOINT_FOUND = 1708;
	public const MonoIOError RPC_S_INVALID_TIMEOUT = 1709;
	public const MonoIOError RPC_S_OBJECT_NOT_FOUND = 1710;
	public const MonoIOError RPC_S_ALREADY_REGISTERED = 1711;
	public const MonoIOError RPC_S_TYPE_ALREADY_REGISTERED = 1712;
	public const MonoIOError RPC_S_ALREADY_LISTENING = 1713;
	public const MonoIOError RPC_S_NO_PROTSEQS_REGISTERED = 1714;
	public const MonoIOError RPC_S_NOT_LISTENING = 1715;
	public const MonoIOError RPC_S_UNKNOWN_MGR_TYPE = 1716;
	public const MonoIOError RPC_S_UNKNOWN_IF = 1717;
	public const MonoIOError RPC_S_NO_BINDINGS = 1718;
	public const MonoIOError RPC_S_NO_PROTSEQS = 1719;
	public const MonoIOError RPC_S_CANT_CREATE_ENDPOINT = 1720;
	public const MonoIOError RPC_S_OUT_OF_RESOURCES = 1721;
	public const MonoIOError RPC_S_SERVER_UNAVAILABLE = 1722;
	public const MonoIOError RPC_S_SERVER_TOO_BUSY = 1723;
	public const MonoIOError RPC_S_INVALID_NETWORK_OPTIONS = 1724;
	public const MonoIOError RPC_S_NO_CALL_ACTIVE = 1725;
	public const MonoIOError RPC_S_CALL_FAILED = 1726;
	public const MonoIOError RPC_S_CALL_FAILED_DNE = 1727;
	public const MonoIOError RPC_S_PROTOCOL_ERROR = 1728;
	public const MonoIOError RPC_S_UNSUPPORTED_TRANS_SYN = 1730;
	public const MonoIOError RPC_S_UNSUPPORTED_TYPE = 1732;
	public const MonoIOError RPC_S_INVALID_TAG = 1733;
	public const MonoIOError RPC_S_INVALID_BOUND = 1734;
	public const MonoIOError RPC_S_NO_ENTRY_NAME = 1735;
	public const MonoIOError RPC_S_INVALID_NAME_SYNTAX = 1736;
	public const MonoIOError RPC_S_UNSUPPORTED_NAME_SYNTAX = 1737;
	public const MonoIOError RPC_S_UUID_NO_ADDRESS = 1739;
	public const MonoIOError RPC_S_DUPLICATE_ENDPOINT = 1740;
	public const MonoIOError RPC_S_UNKNOWN_AUTHN_TYPE = 1741;
	public const MonoIOError RPC_S_MAX_CALLS_TOO_SMALL = 1742;
	public const MonoIOError RPC_S_STRING_TOO_LONG = 1743;
	public const MonoIOError RPC_S_PROTSEQ_NOT_FOUND = 1744;
	public const MonoIOError RPC_S_PROCNUM_OUT_OF_RANGE = 1745;
	public const MonoIOError RPC_S_BINDING_HAS_NO_AUTH = 1746;
	public const MonoIOError RPC_S_UNKNOWN_AUTHN_SERVICE = 1747;
	public const MonoIOError RPC_S_UNKNOWN_AUTHN_LEVEL = 1748;
	public const MonoIOError RPC_S_INVALID_AUTH_IDENTITY = 1749;
	public const MonoIOError RPC_S_UNKNOWN_AUTHZ_SERVICE = 1750;
	public const MonoIOError EPT_S_INVALID_ENTRY = 1751;
	public const MonoIOError EPT_S_CANT_PERFORM_OP = 1752;
	public const MonoIOError EPT_S_NOT_REGISTERED = 1753;
	public const MonoIOError RPC_S_NOTHING_TO_EXPORT = 1754;
	public const MonoIOError RPC_S_INCOMPLETE_NAME = 1755;
	public const MonoIOError RPC_S_INVALID_VERS_OPTION = 1756;
	public const MonoIOError RPC_S_NO_MORE_MEMBERS = 1757;
	public const MonoIOError RPC_S_NOT_ALL_OBJS_UNEXPORTED = 1758;
	public const MonoIOError RPC_S_INTERFACE_NOT_FOUND = 1759;
	public const MonoIOError RPC_S_ENTRY_ALREADY_EXISTS = 1760;
	public const MonoIOError RPC_S_ENTRY_NOT_FOUND = 1761;
	public const MonoIOError RPC_S_NAME_SERVICE_UNAVAILABLE = 1762;
	public const MonoIOError RPC_S_INVALID_NAF_ID = 1763;
	public const MonoIOError RPC_S_CANNOT_SUPPORT = 1764;
	public const MonoIOError RPC_S_NO_CONTEXT_AVAILABLE = 1765;
	public const MonoIOError RPC_S_INTERNAL_ERROR = 1766;
	public const MonoIOError RPC_S_ZERO_DIVIDE = 1767;
	public const MonoIOError RPC_S_ADDRESS_ERROR = 1768;
	public const MonoIOError RPC_S_FP_DIV_ZERO = 1769;
	public const MonoIOError RPC_S_FP_UNDERFLOW = 1770;
	public const MonoIOError RPC_S_FP_OVERFLOW = 1771;
	public const MonoIOError RPC_X_NO_MORE_ENTRIES = 1772;
	public const MonoIOError RPC_X_SS_CHAR_TRANS_OPEN_FAIL = 1773;
	public const MonoIOError RPC_X_SS_CHAR_TRANS_SHORT_FILE = 1774;
	public const MonoIOError RPC_X_SS_IN_NULL_CONTEXT = 1775;
	public const MonoIOError RPC_X_SS_CONTEXT_DAMAGED = 1777;
	public const MonoIOError RPC_X_SS_HANDLES_MISMATCH = 1778;
	public const MonoIOError RPC_X_SS_CANNOT_GET_CALL_HANDLE = 1779;
	public const MonoIOError RPC_X_NULL_REF_POINTER = 1780;
	public const MonoIOError RPC_X_ENUM_VALUE_OUT_OF_RANGE = 1781;
	public const MonoIOError RPC_X_BYTE_COUNT_TOO_SMALL = 1782;
	public const MonoIOError RPC_X_BAD_STUB_DATA = 1783;
	public const MonoIOError ERROR_INVALID_USER_BUFFER = 1784;
	public const MonoIOError ERROR_UNRECOGNIZED_MEDIA = 1785;
	public const MonoIOError ERROR_NO_TRUST_LSA_SECRET = 1786;
	public const MonoIOError ERROR_NO_TRUST_SAM_ACCOUNT = 1787;
	public const MonoIOError ERROR_TRUSTED_DOMAIN_FAILURE = 1788;
	public const MonoIOError ERROR_TRUSTED_RELATIONSHIP_FAILURE = 1789;
	public const MonoIOError ERROR_TRUST_FAILURE = 1790;
	public const MonoIOError RPC_S_CALL_IN_PROGRESS = 1791;
	public const MonoIOError ERROR_NETLOGON_NOT_STARTED = 1792;
	public const MonoIOError ERROR_ACCOUNT_EXPIRED = 1793;
	public const MonoIOError ERROR_REDIRECTOR_HAS_OPEN_HANDLES = 1794;
	public const MonoIOError ERROR_PRINTER_DRIVER_ALREADY_INSTALLED = 1795;
	public const MonoIOError ERROR_UNKNOWN_PORT = 1796;
	public const MonoIOError ERROR_UNKNOWN_PRINTER_DRIVER = 1797;
	public const MonoIOError ERROR_UNKNOWN_PRINTPROCESSOR = 1798;
	public const MonoIOError ERROR_INVALID_SEPARATOR_FILE = 1799;
	public const MonoIOError ERROR_INVALID_PRIORITY = 1800;
	public const MonoIOError ERROR_INVALID_PRINTER_NAME = 1801;
	public const MonoIOError ERROR_PRINTER_ALREADY_EXISTS = 1802;
	public const MonoIOError ERROR_INVALID_PRINTER_COMMAND = 1803;
	public const MonoIOError ERROR_INVALID_DATATYPE = 1804;
	public const MonoIOError ERROR_INVALID_ENVIRONMENT = 1805;
	public const MonoIOError RPC_S_NO_MORE_BINDINGS = 1806;
	public const MonoIOError ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT = 1807;
	public const MonoIOError ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT = 1808;
	public const MonoIOError ERROR_NOLOGON_SERVER_TRUST_ACCOUNT = 1809;
	public const MonoIOError ERROR_DOMAIN_TRUST_INCONSISTENT = 1810;
	public const MonoIOError ERROR_SERVER_HAS_OPEN_HANDLES = 1811;
	public const MonoIOError ERROR_RESOURCE_DATA_NOT_FOUND = 1812;
	public const MonoIOError ERROR_RESOURCE_TYPE_NOT_FOUND = 1813;
	public const MonoIOError ERROR_RESOURCE_NAME_NOT_FOUND = 1814;
	public const MonoIOError ERROR_RESOURCE_LANG_NOT_FOUND = 1815;
	public const MonoIOError ERROR_NOT_ENOUGH_QUOTA = 1816;
	public const MonoIOError RPC_S_NO_INTERFACES = 1817;
	public const MonoIOError RPC_S_CALL_CANCELLED = 1818;
	public const MonoIOError RPC_S_BINDING_INCOMPLETE = 1819;
	public const MonoIOError RPC_S_COMM_FAILURE = 1820;
	public const MonoIOError RPC_S_UNSUPPORTED_AUTHN_LEVEL = 1821;
	public const MonoIOError RPC_S_NO_PRINC_NAME = 1822;
	public const MonoIOError RPC_S_NOT_RPC_ERROR = 1823;
	public const MonoIOError RPC_S_UUID_LOCAL_ONLY = 1824;
	public const MonoIOError RPC_S_SEC_PKG_ERROR = 1825;
	public const MonoIOError RPC_S_NOT_CANCELLED = 1826;
	public const MonoIOError RPC_X_INVALID_ES_ACTION = 1827;
	public const MonoIOError RPC_X_WRONG_ES_VERSION = 1828;
	public const MonoIOError RPC_X_WRONG_STUB_VERSION = 1829;
	public const MonoIOError RPC_X_INVALID_PIPE_OBJECT = 1830;
	public const MonoIOError RPC_X_WRONG_PIPE_ORDER = 1831;
	public const MonoIOError RPC_X_WRONG_PIPE_VERSION = 1832;
	public const MonoIOError RPC_S_GROUP_MEMBER_NOT_FOUND = 1898;
	public const MonoIOError EPT_S_CANT_CREATE = 1899;
	public const MonoIOError RPC_S_INVALID_OBJECT = 1900;
	public const MonoIOError ERROR_INVALID_TIME = 1901;
	public const MonoIOError ERROR_INVALID_FORM_NAME = 1902;
	public const MonoIOError ERROR_INVALID_FORM_SIZE = 1903;
	public const MonoIOError ERROR_ALREADY_WAITING = 1904;
	public const MonoIOError ERROR_PRINTER_DELETED = 1905;
	public const MonoIOError ERROR_INVALID_PRINTER_STATE = 1906;
	public const MonoIOError ERROR_PASSWORD_MUST_CHANGE = 1907;
	public const MonoIOError ERROR_DOMAIN_CONTROLLER_NOT_FOUND = 1908;
	public const MonoIOError ERROR_ACCOUNT_LOCKED_OUT = 1909;
	public const MonoIOError OR_INVALID_OXID = 1910;
	public const MonoIOError OR_INVALID_OID = 1911;
	public const MonoIOError OR_INVALID_SET = 1912;
	public const MonoIOError RPC_S_SEND_INCOMPLETE = 1913;
	public const MonoIOError RPC_S_INVALID_ASYNC_HANDLE = 1914;
	public const MonoIOError RPC_S_INVALID_ASYNC_CALL = 1915;
	public const MonoIOError RPC_X_PIPE_CLOSED = 1916;
	public const MonoIOError RPC_X_PIPE_DISCIPLINE_ERROR = 1917;
	public const MonoIOError RPC_X_PIPE_EMPTY = 1918;
	public const MonoIOError ERROR_NO_SITENAME = 1919;
	public const MonoIOError ERROR_CANT_ACCESS_FILE = 1920;
	public const MonoIOError ERROR_CANT_RESOLVE_FILENAME = 1921;
	public const MonoIOError RPC_S_ENTRY_TYPE_MISMATCH = 1922;
	public const MonoIOError RPC_S_NOT_ALL_OBJS_EXPORTED = 1923;
	public const MonoIOError RPC_S_INTERFACE_NOT_EXPORTED = 1924;
	public const MonoIOError RPC_S_PROFILE_NOT_ADDED = 1925;
	public const MonoIOError RPC_S_PRF_ELT_NOT_ADDED = 1926;
	public const MonoIOError RPC_S_PRF_ELT_NOT_REMOVED = 1927;
