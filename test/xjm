	// RVA: 0x23CF89C Offset: 0x23CF89C VA: 0x23CF89C
	public void remove_OnBeatSyncCallback(CriAtomExBeatSync.CbFunc value) { }

	// RVA: 0x23CF960 Offset: 0x23CF960 VA: 0x23CF960
	private void add__onSequenceCallback(CriAtomExSequencer.EventCallback value) { }

	// RVA: 0x23CFA4C Offset: 0x23CFA4C VA: 0x23CFA4C
	private void remove__onSequenceCallback(CriAtomExSequencer.EventCallback value) { }

	// RVA: 0x23CFB38 Offset: 0x23CFB38 VA: 0x23CFB38
	public void add_OnSequenceCallback(CriAtomExSequencer.EventCallback value) { }

	// RVA: 0x23CFC38 Offset: 0x23CFC38 VA: 0x23CFC38
	public void remove_OnSequenceCallback(CriAtomExSequencer.EventCallback value) { }

	// RVA: 0x23CFD38 Offset: 0x23CFD38 VA: 0x23CFD38 Slot: 5
	public override void Dispose() { }

	// RVA: 0x23CFF94 Offset: 0x23CFF94 VA: 0x23CFF94
	public void SetCue(CriAtomExAcb acb, string name) { }

	// RVA: 0x23D00D4 Offset: 0x23D00D4 VA: 0x23D00D4
	public void SetCue(CriAtomExAcb acb, int id) { }

	// RVA: 0x23D0200 Offset: 0x23D0200 VA: 0x23D0200
	public void SetCueIndex(CriAtomExAcb acb, int index) { }

	// RVA: 0x23D032C Offset: 0x23D032C VA: 0x23D032C
	public void SetContentId(CriFsBinder binder, int contentId) { }

	// RVA: 0x23D0458 Offset: 0x23D0458 VA: 0x23D0458
	public void SetFile(CriFsBinder binder, string path) { }

	// RVA: 0x23D0598 Offset: 0x23D0598 VA: 0x23D0598
	public void SetData(byte[] buffer, int size) { }

	// RVA: 0x23D065C Offset: 0x23D065C VA: 0x23D065C
	public void SetData(IntPtr buffer, int size) { }

	// RVA: 0x23D0718 Offset: 0x23D0718 VA: 0x23D0718
	public void SetFormat(CriAtomEx.Format format) { }

	// RVA: 0x23D07CC Offset: 0x23D07CC VA: 0x23D07CC
	public void SetNumChannels(int numChannels) { }

	// RVA: 0x23D0880 Offset: 0x23D0880 VA: 0x23D0880
	public void SetSamplingRate(int samplingRate) { }

	// RVA: 0x23D0934 Offset: 0x23D0934 VA: 0x23D0934
	public void PrepareEntryPool(int capacity, bool stopOnEmpty) { }

	// RVA: 0x23D0AA0 Offset: 0x23D0AA0 VA: 0x23D0AA0
	public int GetNumEntries() { }

	// RVA: 0x23D0BA4 Offset: 0x23D0BA4 VA: 0x23D0BA4
	public int GetNumConsumedEntries() { }

	// RVA: 0x23D0CA8 Offset: 0x23D0CA8 VA: 0x23D0CA8
	public int get_entryPoolCapacity() { }

	// RVA: 0x23D0CB0 Offset: 0x23D0CB0 VA: 0x23D0CB0
	public bool EntryFile(CriFsBinder binder, string path, bool repeat) { }

	// RVA: 0x23D0E54 Offset: 0x23D0E54 VA: 0x23D0E54
	public bool EntryContentId(CriFsBinder binder, int contentId, bool repeat) { }

	// RVA: 0x23D0FD4 Offset: 0x23D0FD4 VA: 0x23D0FD4
	public bool EntryData(byte[] buffer, int size, bool repeat) { }

	// RVA: 0x23D1140 Offset: 0x23D1140 VA: 0x23D1140
	public bool EntryData(IntPtr buffer, int size, bool repeat) { }

	// RVA: 0x23D12A4 Offset: 0x23D12A4 VA: 0x23D12A4
	public bool EntryCue(CriAtomExAcb acb, string name, bool repeat) { }

	// RVA: 0x23D143C Offset: 0x23D143C VA: 0x23D143C
	public CriAtomExPlayback Start() { }

	// RVA: 0x23D15DC Offset: 0x23D15DC VA: 0x23D15DC
	public CriAtomExPlayback Prepare() { }

	// RVA: 0x23D1694 Offset: 0x23D1694 VA: 0x23D1694
	public void Stop(bool ignoresReleaseTime) { }

	// RVA: 0x23D18FC Offset: 0x23D18FC VA: 0x23D18FC
	public void Pause() { }

	// RVA: 0x23D19B4 Offset: 0x23D19B4 VA: 0x23D19B4
	public void Resume(CriAtomEx.ResumeMode mode) { }

	// RVA: 0x23D1A68 Offset: 0x23D1A68 VA: 0x23D1A68
	public bool IsPaused() { }

	// RVA: 0x23D1B14 Offset: 0x23D1B14 VA: 0x23D1B14
	public void SetVolume(float volume) { }

	// RVA: 0x23D1BC8 Offset: 0x23D1BC8 VA: 0x23D1BC8
	public void SetPitch(float pitch) { }

	// RVA: 0x23D1C7C Offset: 0x23D1C7C VA: 0x23D1C7C
	public void SetPlaybackRatio(float ratio) { }

	// RVA: 0x23D1D30 Offset: 0x23D1D30 VA: 0x23D1D30
	public void SetPan3dAngle(float angle) { }

	// RVA: 0x23D1DE4 Offset: 0x23D1DE4 VA: 0x23D1DE4
	public void SetPan3dInteriorDistance(float distance) { }

	// RVA: 0x23D1E98 Offset: 0x23D1E98 VA: 0x23D1E98
	public void SetPan3dVolume(float volume) { }

	// RVA: 0x23D1F4C Offset: 0x23D1F4C VA: 0x23D1F4C
	public void SetPanType(CriAtomEx.PanType panType) { }

	// RVA: 0x23D2000 Offset: 0x23D2000 VA: 0x23D2000
	public void SetSendLevel(int channel, CriAtomEx.Speaker id, float level) { }

	// RVA: 0x23D20CC Offset: 0x23D20CC VA: 0x23D20CC
	public void SetBiquadFilterParameters(CriAtomEx.BiquadFilterType type, float frequency, float gain, float q) { }

	// RVA: 0x23D21A8 Offset: 0x23D21A8 VA: 0x23D21A8
	public void SetBandpassFilterParameters(float cofLow, float cofHigh) { }

	// RVA: 0x23D2264 Offset: 0x23D2264 VA: 0x23D2264
	public void SetBusSendLevel(string busName, float level) { }

	// RVA: 0x23D233C Offset: 0x23D233C VA: 0x23D233C
	public bool GetBusSendLevel(string busName, out float level) { }

	[ObsoleteAttribute] // RVA: 0xC2387C Offset: 0xC2387C VA: 0xC2387C
	// RVA: 0x23D2418 Offset: 0x23D2418 VA: 0x23D2418
	public void SetBusSendLevel(int busId, float level) { }

	// RVA: 0x23D24DC Offset: 0x23D24DC VA: 0x23D24DC
	public void SetBusSendLevelOffset(string busName, float levelOffset) { }

	// RVA: 0x23D25B4 Offset: 0x23D25B4 VA: 0x23D25B4
	public bool GetBusSendLevelOffset(string busName, out float level) { }

	[ObsoleteAttribute] // RVA: 0xC238B4 Offset: 0xC238B4 VA: 0xC238B4
	// RVA: 0x23D2690 Offset: 0x23D2690 VA: 0x23D2690
	public void SetBusSendLevelOffset(int busId, float levelOffset) { }

	// RVA: 0x23D2754 Offset: 0x23D2754 VA: 0x23D2754
	public void AttachAisac(string globalAisacName) { }

	// RVA: 0x23D281C Offset: 0x23D281C VA: 0x23D281C
	public void DetachAisac(string globalAisacName) { }

	// RVA: 0x23D28E4 Offset: 0x23D28E4 VA: 0x23D28E4
	public void SetAisacControl(string controlName, float value) { }

	[ObsoleteAttribute] // RVA: 0xC238EC Offset: 0xC238EC VA: 0xC238EC
	// RVA: 0x23D29BC Offset: 0x23D29BC VA: 0x23D29BC
	public void SetAisac(string controlName, float value) { }

	// RVA: 0x23D29C4 Offset: 0x23D29C4 VA: 0x23D29C4
	public void SetAisacControl(uint controlId, float value) { }

	[ObsoleteAttribute] // RVA: 0xC23924 Offset: 0xC23924 VA: 0xC23924
	// RVA: 0x23D2A88 Offset: 0x23D2A88 VA: 0x23D2A88
	public void SetAisac(uint controlId, float value) { }

	// RVA: 0x23D2A90 Offset: 0x23D2A90 VA: 0x23D2A90
	public bool GetAttachedAisacInfo(int aisacAttachedIndex, out CriAtomEx.AisacInfo aisacInfo) { }

	// RVA: 0x23D2D1C Offset: 0x23D2D1C VA: 0x23D2D1C
	public void Set3dSource(CriAtomEx3dSource source) { }

	// RVA: 0x23D2E38 Offset: 0x23D2E38 VA: 0x23D2E38
	public void Set3dListener(CriAtomEx3dListener listener) { }

	// RVA: 0x23D2F54 Offset: 0x23D2F54 VA: 0x23D2F54
	public void SetStartTime(long startTimeMs) { }

	// RVA: 0x23D3008 Offset: 0x23D3008 VA: 0x23D3008
	public void SetFirstBlockIndex(int index) { }

	// RVA: 0x23D30BC Offset: 0x23D30BC VA: 0x23D30BC
	public void SetSelectorLabel(string selector, string label) { }

	// RVA: 0x23D31A0 Offset: 0x23D31A0 VA: 0x23D31A0
	public void UnsetSelectorLabel(string selector) { }

	// RVA: 0x23D3268 Offset: 0x23D3268 VA: 0x23D3268
	public void ClearSelectorLabels() { }

	// RVA: 0x23D330C Offset: 0x23D330C VA: 0x23D330C
	public void SetCategory(int categoryId) { }

	// RVA: 0x23D33C0 Offset: 0x23D33C0 VA: 0x23D33C0
	public void SetCategory(string categoryName) { }

	// RVA: 0x23D3488 Offset: 0x23D3488 VA: 0x23D3488
	public void UnsetCategory() { }

	// RVA: 0x23D352C Offset: 0x23D352C VA: 0x23D352C
	public void SetCuePriority(int priority) { }

	// RVA: 0x23D35E0 Offset: 0x23D35E0 VA: 0x23D35E0
	public void SetVoicePriority(int priority) { }

	// RVA: 0x23D3694 Offset: 0x23D3694 VA: 0x23D3694
	public void SetVoiceControlMethod(CriAtomEx.VoiceControlMethod method) { }

	// RVA: 0x23D3748 Offset: 0x23D3748 VA: 0x23D3748
	public void SetPreDelayTime(float time) { }

	// RVA: 0x23D37FC Offset: 0x23D37FC VA: 0x23D37FC
	public void SetEnvelopeAttackTime(float time) { }

	// RVA: 0x23D38B0 Offset: 0x23D38B0 VA: 0x23D38B0
	public void SetEnvelopeHoldTime(float time) { }

	// RVA: 0x23D3964 Offset: 0x23D3964 VA: 0x23D3964
	public void SetEnvelopeDecayTime(float time) { }

	// RVA: 0x23D3A18 Offset: 0x23D3A18 VA: 0x23D3A18
	public void SetEnvelopeReleaseTime(float time) { }

	// RVA: 0x23D3ACC Offset: 0x23D3ACC VA: 0x23D3ACC
	public void SetEnvelopeSustainLevel(float level) { }

	// RVA: 0x23D3B80 Offset: 0x23D3B80 VA: 0x23D3B80
	public void AttachFader() { }

	// RVA: 0x23D3C94 Offset: 0x23D3C94 VA: 0x23D3C94
	public void DetachFader() { }

	// RVA: 0x23D3D38 Offset: 0x23D3D38 VA: 0x23D3D38
	public void SetFadeOutTime(int ms) { }

	// RVA: 0x23D3DEC Offset: 0x23D3DEC VA: 0x23D3DEC
	public void SetFadeInTime(int ms) { }

	// RVA: 0x23D3EA0 Offset: 0x23D3EA0 VA: 0x23D3EA0
	public void SetFadeInStartOffset(int ms) { }

	// RVA: 0x23D3F54 Offset: 0x23D3F54 VA: 0x23D3F54
	public void SetFadeOutEndDelay(int ms) { }

	// RVA: 0x23D4008 Offset: 0x23D4008 VA: 0x23D4008
	public bool IsFading() { }

	// RVA: 0x23D40B4 Offset: 0x23D40B4 VA: 0x23D40B4
	public void ResetFaderParameters() { }

	// RVA: 0x23D4158 Offset: 0x23D4158 VA: 0x23D4158
	public void SetGroupNumber(int group_no) { }

	// RVA: 0x23D420C Offset: 0x23D420C VA: 0x23D420C
	public void Update(CriAtomExPlayback playback) { }

	// RVA: 0x23D42C0 Offset: 0x23D42C0 VA: 0x23D42C0
	public void UpdateAll() { }

	// RVA: 0x23D4364 Offset: 0x23D4364 VA: 0x23D4364
	public void ResetParameters() { }

	// RVA: 0x23D4408 Offset: 0x23D4408 VA: 0x23D4408
	public long GetTime() { }

	// RVA: 0x23CCC48 Offset: 0x23CCC48 VA: 0x23CCC48
	public CriAtomExPlayer.Status GetStatus() { }

	// RVA: 0x23D4548 Offset: 0x23D4548 VA: 0x23D4548
	public float GetParameterFloat32(CriAtomEx.Parameter id) { }

	// RVA: 0x23D45FC Offset: 0x23D45FC VA: 0x23D45FC
	public uint GetParameterUint32(CriAtomEx.Parameter id) { }

	// RVA: 0x23D46B0 Offset: 0x23D46B0 VA: 0x23D46B0
	public int GetParameterSint32(CriAtomEx.Parameter id) { }

	// RVA: 0x23D4764 Offset: 0x23D4764 VA: 0x23D4764
	public void SetSoundRendererType(CriAtomEx.SoundRendererType type) { }

	// RVA: 0x23D4818 Offset: 0x23D4818 VA: 0x23D4818
	public void SetRandomSeed(uint seed) { }

	// RVA: 0x23D48CC Offset: 0x23D48CC VA: 0x23D48CC
	public void Loop(bool sw) { }

	// RVA: 0x23D4C28 Offset: 0x23D4C28 VA: 0x23D4C28
	public void SetAsrRackId(int asr_rack_id) { }

	// RVA: 0x23D4CDC Offset: 0x23D4CDC VA: 0x23D4CDC
	public void SetVoicePoolIdentifier(uint identifier) { }

	// RVA: 0x23D4D90 Offset: 0x23D4D90 VA: 0x23D4D90
	public void SetDspTimeStretchRatio(float ratio) { }

	// RVA: 0x23D4DA4 Offset: 0x23D4DA4 VA: 0x23D4DA4
	public void SetDspPitchShifterPitch(float pitch) { }

	// RVA: 0x23D4D9C Offset: 0x23D4D9C VA: 0x23D4D9C
	public void SetDspParameter(int id, float value) { }

	// RVA: 0x23D4E80 Offset: 0x23D4E80 VA: 0x23D4E80
	public void SetSequencePrepareTime(uint ms) { }

	// RVA: 0x23D4F34 Offset: 0x23D4F34 VA: 0x23D4F34
	public void AttachTween(CriAtomExTween tween) { }

	// RVA: 0x23D501C Offset: 0x23D501C VA: 0x23D501C
	public void DetachTween(CriAtomExTween tween) { }

	// RVA: 0x23D50FC Offset: 0x23D50FC VA: 0x23D50FC
	public void DetachTweenAll() { }

	// RVA: 0x23D51A0 Offset: 0x23D51A0 VA: 0x23D51A0
	public void Stop() { }

	// RVA: 0x23CCD04 Offset: 0x23CCD04 VA: 0x23CCD04
	public void StopWithoutReleaseTime() { }

	// RVA: 0x23D51DC Offset: 0x23D51DC VA: 0x23D51DC
	public void Pause(bool sw) { }

	// RVA: 0x23D51E8 Offset: 0x23D51E8 VA: 0x23D51E8 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x23D5264 Offset: 0x23D5264 VA: 0x23D5264
	private void OnBeatSyncCallbackChainInternal(ref CriAtomExBeatSync.Info info) { }

	// RVA: 0x23D52C0 Offset: 0x23D52C0 VA: 0x23D52C0
	private void OnSequenceCallbackChainInternal(ref CriAtomExSequencer.CriAtomExSequenceEventInfo info) { }

	// RVA: 0x23CF51C Offset: 0x23CF51C VA: 0x23CF51C
	private static extern IntPtr criAtomExPlayer_Create(ref CriAtomExPlayer.Config config, IntPtr work, int work_size) { }

	// RVA: 0x23CFEF8 Offset: 0x23CFEF8 VA: 0x23CFEF8
	private static extern void criAtomExPlayer_Destroy(IntPtr player) { }

	// RVA: 0x23D014C Offset: 0x23D014C VA: 0x23D014C
	private static extern void criAtomExPlayer_SetCueId(IntPtr player, IntPtr acb_hn, int id) { }

	// RVA: 0x23D000C Offset: 0x23D000C VA: 0x23D000C
	private static extern void criAtomExPlayer_SetCueName(IntPtr player, IntPtr acb_hn, string cue_name) { }

	// RVA: 0x23D0278 Offset: 0x23D0278 VA: 0x23D0278
	private static extern void criAtomExPlayer_SetCueIndex(IntPtr player, IntPtr acb_hn, int index) { }

	// RVA: 0x23D04D0 Offset: 0x23D04D0 VA: 0x23D04D0
	private static extern void criAtomExPlayer_SetFile(IntPtr player, IntPtr binder, string path) { }

	// RVA: 0x23D05A0 Offset: 0x23D05A0 VA: 0x23D05A0
	private static extern void criAtomExPlayer_SetData(IntPtr player, byte[] buffer, int size) { }

	// RVA: 0x23D0664 Offset: 0x23D0664 VA: 0x23D0664
	private static extern void criAtomExPlayer_SetData(IntPtr player, IntPtr buffer, int size) { }

	// RVA: 0x23D03A4 Offset: 0x23D03A4 VA: 0x23D03A4
	private static extern void criAtomExPlayer_SetContentId(IntPtr player, IntPtr binder, int id) { }

	// RVA: 0x23D4CE4 Offset: 0x23D4CE4 VA: 0x23D4CE4
	private static extern void criAtomExPlayer_SetVoicePoolIdentifier(IntPtr player, uint identifier) { }

	// RVA: 0x23D1540 Offset: 0x23D1540 VA: 0x23D1540
	private static extern uint criAtomExPlayer_Start(IntPtr player) { }

	// RVA: 0x23D15F8 Offset: 0x23D15F8 VA: 0x23D15F8
	private static extern uint criAtomExPlayer_Prepare(IntPtr player) { }

	// RVA: 0x23D1728 Offset: 0x23D1728 VA: 0x23D1728
	private static extern void criAtomExPlayer_Stop(IntPtr player) { }

	// RVA: 0x23D17C4 Offset: 0x23D17C4 VA: 0x23D17C4
	private static extern void criAtomExPlayer_StopWithoutReleaseTime(IntPtr player) { }

	// RVA: 0x23D1908 Offset: 0x23D1908 VA: 0x23D1908
	private static extern void criAtomExPlayer_Pause(IntPtr player, bool sw) { }

	// RVA: 0x23D19BC Offset: 0x23D19BC VA: 0x23D19BC
	private static extern void criAtomExPlayer_Resume(IntPtr player, CriAtomEx.ResumeMode mode) { }

	// RVA: 0x23D1A70 Offset: 0x23D1A70 VA: 0x23D1A70
	private static extern bool criAtomExPlayer_IsPaused(IntPtr player) { }

	// RVA: 0x23D44AC Offset: 0x23D44AC VA: 0x23D44AC
	private static extern CriAtomExPlayer.Status criAtomExPlayer_GetStatus(IntPtr player) { }

	// RVA: 0x23D4410 Offset: 0x23D4410 VA: 0x23D4410
	private static extern long criAtomExPlayer_GetTime(IntPtr player) { }

	// RVA: 0x23D0720 Offset: 0x23D0720 VA: 0x23D0720
	private static extern void criAtomExPlayer_SetFormat(IntPtr player, CriAtomEx.Format format) { }

	// RVA: 0x23D07D4 Offset: 0x23D07D4 VA: 0x23D07D4
	private static extern void criAtomExPlayer_SetNumChannels(IntPtr player, int num_channels) { }

	// RVA: 0x23D0888 Offset: 0x23D0888 VA: 0x23D0888
	private static extern void criAtomExPlayer_SetSamplingRate(IntPtr player, int sampling_rate) { }

	// RVA: 0x23D09DC Offset: 0x23D09DC VA: 0x23D09DC
	private static extern IntPtr CRIWARE403F1372(IntPtr player, int capacity, int max_path, bool stopOnEmpty) { }

	// RVA: 0x23CFE5C Offset: 0x23CFE5C VA: 0x23CFE5C
	private static extern void CRIWARE37423455(IntPtr pool) { }

	// RVA: 0x23D0B08 Offset: 0x23D0B08 VA: 0x23D0B08
	private static extern int CRIWARE81598A72(IntPtr pool) { }

	// RVA: 0x23D0C0C Offset: 0x23D0C0C VA: 0x23D0C0C
	private static extern int CRIWARE9B277B23(IntPtr pool) { }

	// RVA: 0x23D14A4 Offset: 0x23D14A4 VA: 0x23D14A4
	private static extern void CRIWARE942D5C71(IntPtr pool) { }

	// RVA: 0x23D0D68 Offset: 0x23D0D68 VA: 0x23D0D68
	private static extern bool CRIWAREF997453C(IntPtr pool, IntPtr binder, string path, bool repeat, int max_path) { }

	// RVA: 0x23D0F08 Offset: 0x23D0F08 VA: 0x23D0F08
	private static extern bool CRIWARE418B7DFF(IntPtr pool, IntPtr binder, int id, bool repeat) { }

	// RVA: 0x23D106C Offset: 0x23D106C VA: 0x23D106C
	private static extern bool CRIWARE674D0907(IntPtr pool, byte[] buffer, int size, bool repeat) { }

	// RVA: 0x23D11D8 Offset: 0x23D11D8 VA: 0x23D11D8
	private static extern bool CRIWARE674D0907(IntPtr pool, IntPtr buffer, int size, bool repeat) { }

	// RVA: 0x23D1358 Offset: 0x23D1358 VA: 0x23D1358
	private static extern bool CRIWAREC2A489BF(IntPtr pool, IntPtr acbhn, string name, bool repeat) { }

	// RVA: 0x23D1860 Offset: 0x23D1860 VA: 0x23D1860
	private static extern void CRIWAREE7084891(IntPtr pool) { }

	// RVA: 0x23D2F5C Offset: 0x23D2F5C VA: 0x23D2F5C
	private static extern void criAtomExPlayer_SetStartTime(IntPtr player, long start_time_ms) { }

	// RVA: 0x23D4E88 Offset: 0x23D4E88 VA: 0x23D4E88
	private static extern void criAtomExPlayer_SetSequencePrepareTime(IntPtr player, uint seq_prep_time_ms) { }

	// RVA: 0x23D496C Offset: 0x23D496C VA: 0x23D496C
	private static extern void criAtomExPlayer_LimitLoopCount(IntPtr player, int count) { }

	// RVA: 0x23D4214 Offset: 0x23D4214 VA: 0x23D4214
	private static extern void criAtomExPlayer_Update(IntPtr player, uint id) { }

	// RVA: 0x23D42C8 Offset: 0x23D42C8 VA: 0x23D42C8
	private static extern void criAtomExPlayer_UpdateAll(IntPtr player) { }

	// RVA: 0x23D436C Offset: 0x23D436C VA: 0x23D436C
	private static extern void criAtomExPlayer_ResetParameters(IntPtr player) { }

	// RVA: 0x23D4550 Offset: 0x23D4550 VA: 0x23D4550
	private static extern float criAtomExPlayer_GetParameterFloat32(IntPtr player, CriAtomEx.Parameter id) { }

	// RVA: 0x23D4604 Offset: 0x23D4604 VA: 0x23D4604
	private static extern uint criAtomExPlayer_GetParameterUint32(IntPtr player, CriAtomEx.Parameter id) { }

	// RVA: 0x23D46B8 Offset: 0x23D46B8 VA: 0x23D46B8
	private static extern int criAtomExPlayer_GetParameterSint32(IntPtr player, CriAtomEx.Parameter id) { }

	// RVA: 0x23D4AE0 Offset: 0x23D4AE0 VA: 0x23D4AE0
	private static extern IntPtr criAtomExPlayer_GetPlayerParameter(IntPtr player) { }

	// RVA: 0x23D4B7C Offset: 0x23D4B7C VA: 0x23D4B7C
	private static extern void criAtomExPlayerParameter_RemoveParameter(IntPtr player_parameter, ushort id) { }

	// RVA: 0x23D1B1C Offset: 0x23D1B1C VA: 0x23D1B1C
	private static extern void criAtomExPlayer_SetVolume(IntPtr player, float volume) { }

	// RVA: 0x23D1BD0 Offset: 0x23D1BD0 VA: 0x23D1BD0
	private static extern void criAtomExPlayer_SetPitch(IntPtr player, float pitch) { }

	// RVA: 0x23D1C84 Offset: 0x23D1C84 VA: 0x23D1C84
	private static extern void criAtomExPlayer_SetPlaybackRatio(IntPtr player, float playback_ratio) { }

	// RVA: 0x23D1D38 Offset: 0x23D1D38 VA: 0x23D1D38
	private static extern void criAtomExPlayer_SetPan3dAngle(IntPtr player, float pan3d_angle) { }

	// RVA: 0x23D1DEC Offset: 0x23D1DEC VA: 0x23D1DEC
	private static extern void criAtomExPlayer_SetPan3dInteriorDistance(IntPtr player, float pan3d_interior_distance) { }

	// RVA: 0x23D1EA0 Offset: 0x23D1EA0 VA: 0x23D1EA0
	private static extern void criAtomExPlayer_SetPan3dVolume(IntPtr player, float pan3d_volume) { }

	// RVA: 0x23D1F54 Offset: 0x23D1F54 VA: 0x23D1F54
	private static extern void criAtomExPlayer_SetPanType(IntPtr player, CriAtomEx.PanType panType) { }

	// RVA: 0x23D2008 Offset: 0x23D2008 VA: 0x23D2008
	private static extern void criAtomExPlayer_SetSendLevel(IntPtr player, int channel, CriAtomEx.Speaker id, float level) { }

	// RVA: 0x23D2420 Offset: 0x23D2420 VA: 0x23D2420
	private static extern void criAtomExPlayer_SetBusSendLevel(IntPtr player, int bus_id, float level) { }

	// RVA: 0x23D226C Offset: 0x23D226C VA: 0x23D226C
	private static extern void criAtomExPlayer_SetBusSendLevelByName(IntPtr player, string bus_name, float level) { }

	// RVA: 0x23D2344 Offset: 0x23D2344 VA: 0x23D2344
	private static extern bool criAtomExPlayer_GetBusSendLevelByName(IntPtr player, string bus_name, out float level) { }

	// RVA: 0x23D2698 Offset: 0x23D2698 VA: 0x23D2698
	private static extern void criAtomExPlayer_SetBusSendLevelOffset(IntPtr player, int bus_id, float level_offset) { }

	// RVA: 0x23D24E4 Offset: 0x23D24E4 VA: 0x23D24E4
	private static extern void criAtomExPlayer_SetBusSendLevelOffsetByName(IntPtr player, string bus_name, float level_offset) { }

	// RVA: 0x23D25BC Offset: 0x23D25BC VA: 0x23D25BC
	private static extern bool criAtomExPlayer_GetBusSendLevelOffsetByName(IntPtr player, string bus_name, out float level_offset) { }

	// RVA: 0x23D21B0 Offset: 0x23D21B0 VA: 0x23D21B0
	private static extern void criAtomExPlayer_SetBandpassFilterParameters(IntPtr player, float cof_low, float cof_high) { }

	// RVA: 0x23D20D4 Offset: 0x23D20D4 VA: 0x23D20D4
	private static extern void criAtomExPlayer_SetBiquadFilterParameters(IntPtr player, CriAtomEx.BiquadFilterType type, float frequency, float gain, float q) { }

	// RVA: 0x23D35E8 Offset: 0x23D35E8 VA: 0x23D35E8
	private static extern void criAtomExPlayer_SetVoicePriority(IntPtr player, int priority) { }

	// RVA: 0x23D369C Offset: 0x23D369C VA: 0x23D369C
	private static extern void criAtomExPlayer_SetVoiceControlMethod(IntPtr player, CriAtomEx.VoiceControlMethod method) { }

	// RVA: 0x23D29CC Offset: 0x23D29CC VA: 0x23D29CC
	private static extern void criAtomExPlayer_SetAisacControlById(IntPtr player, ushort control_id, float control_value) { }

	// RVA: 0x23D28EC Offset: 0x23D28EC VA: 0x23D28EC
	private static extern void criAtomExPlayer_SetAisacControlByName(IntPtr player, string control_name, float control_value) { }

	// RVA: 0x23D2D8C Offset: 0x23D2D8C VA: 0x23D2D8C
	private static extern void criAtomExPlayer_Set3dSourceHn(IntPtr player, IntPtr source) { }

	// RVA: 0x23D2EA8 Offset: 0x23D2EA8 VA: 0x23D2EA8
	private static extern void criAtomExPlayer_Set3dListenerHn(IntPtr player, IntPtr listener) { }

	// RVA: 0x23D3314 Offset: 0x23D3314 VA: 0x23D3314
	private static extern void criAtomExPlayer_SetCategoryById(IntPtr player, uint category_id) { }

	// RVA: 0x23D33C8 Offset: 0x23D33C8 VA: 0x23D33C8
	private static extern void criAtomExPlayer_SetCategoryByName(IntPtr player, string category_name) { }

	// RVA: 0x23D3490 Offset: 0x23D3490 VA: 0x23D3490
	private static extern void criAtomExPlayer_UnsetCategory(IntPtr player) { }

	// RVA: 0x23D3534 Offset: 0x23D3534 VA: 0x23D3534
	private static extern void criAtomExPlayer_SetCuePriority(IntPtr player, int cue_priority) { }

	// RVA: 0x23D3750 Offset: 0x23D3750 VA: 0x23D3750
	private static extern void criAtomExPlayer_SetPreDelayTime(IntPtr player, float predelay_time_ms) { }

	// RVA: 0x23D3804 Offset: 0x23D3804 VA: 0x23D3804
	private static extern void criAtomExPlayer_SetEnvelopeAttackTime(IntPtr player, float attack_time_ms) { }

	// RVA: 0x23D38B8 Offset: 0x23D38B8 VA: 0x23D38B8
	private static extern void criAtomExPlayer_SetEnvelopeHoldTime(IntPtr player, float hold_time_ms) { }

	// RVA: 0x23D396C Offset: 0x23D396C VA: 0x23D396C
	private static extern void criAtomExPlayer_SetEnvelopeDecayTime(IntPtr player, float decay_time_ms) { }

	// RVA: 0x23D3A20 Offset: 0x23D3A20 VA: 0x23D3A20
	private static extern void criAtomExPlayer_SetEnvelopeReleaseTime(IntPtr player, float release_time_ms) { }

	// RVA: 0x23D3AD4 Offset: 0x23D3AD4 VA: 0x23D3AD4
	private static extern void criAtomExPlayer_SetEnvelopeSustainLevel(IntPtr player, float susutain_level) { }

	// RVA: 0x23D3BD0 Offset: 0x23D3BD0 VA: 0x23D3BD0
	private static extern void criAtomExPlayer_AttachFader(IntPtr player, IntPtr config, IntPtr work, int work_size) { }

	// RVA: 0x23D275C Offset: 0x23D275C VA: 0x23D275C
	private static extern void criAtomExPlayer_AttachAisac(IntPtr player, string globalAisacName) { }

	// RVA: 0x23D2824 Offset: 0x23D2824 VA: 0x23D2824
	private static extern void criAtomExPlayer_DetachAisac(IntPtr player, string globalAisacName) { }

	// RVA: 0x23D3C9C Offset: 0x23D3C9C VA: 0x23D3C9C
	private static extern void criAtomExPlayer_DetachFader(IntPtr player) { }

	// RVA: 0x23D3D40 Offset: 0x23D3D40 VA: 0x23D3D40
	private static extern void criAtomExPlayer_SetFadeOutTime(IntPtr player, int ms) { }

	// RVA: 0x23D3DF4 Offset: 0x23D3DF4 VA: 0x23D3DF4
	private static extern void criAtomExPlayer_SetFadeInTime(IntPtr player, int ms) { }

	// RVA: 0x23D3EA8 Offset: 0x23D3EA8 VA: 0x23D3EA8
	private static extern void criAtomExPlayer_SetFadeInStartOffset(IntPtr player, int ms) { }

	// RVA: 0x23D3F5C Offset: 0x23D3F5C VA: 0x23D3F5C
	private static extern void criAtomExPlayer_SetFadeOutEndDelay(IntPtr player, int ms) { }

	// RVA: 0x23D4010 Offset: 0x23D4010 VA: 0x23D4010
	private static extern bool criAtomExPlayer_IsFading(IntPtr player) { }

	// RVA: 0x23D40BC Offset: 0x23D40BC VA: 0x23D40BC
	private static extern void criAtomExPlayer_ResetFaderParameters(IntPtr player) { }

	// RVA: 0x23D4160 Offset: 0x23D4160 VA: 0x23D4160
	private static extern void criAtomExPlayer_SetGroupNumber(IntPtr player, int group_no) { }

	// RVA: 0x23D2C60 Offset: 0x23D2C60 VA: 0x23D2C60
	private static extern bool criAtomExPlayer_GetAttachedAisacInfo(IntPtr player, int aisac_attached_index, IntPtr aisac_info) { }

	// RVA: 0x23D3010 Offset: 0x23D3010 VA: 0x23D3010
	private static extern void criAtomExPlayer_SetFirstBlockIndex(IntPtr player, int index) { }

	// RVA: 0x23D30C4 Offset: 0x23D30C4 VA: 0x23D30C4
	private static extern void criAtomExPlayer_SetSelectorLabel(IntPtr player, string selector, string label) { }

	// RVA: 0x23D31A8 Offset: 0x23D31A8 VA: 0x23D31A8
	private static extern void criAtomExPlayer_UnsetSelectorLabel(IntPtr player, string selector) { }

	// RVA: 0x23D3270 Offset: 0x23D3270 VA: 0x23D3270
	private static extern void criAtomExPlayer_ClearSelectorLabels(IntPtr player) { }

	// RVA: 0x23D476C Offset: 0x23D476C VA: 0x23D476C
	private static extern void criAtomExPlayer_SetSoundRendererType(IntPtr player, CriAtomEx.SoundRendererType type) { }

	// RVA: 0x23D4820 Offset: 0x23D4820 VA: 0x23D4820
	private static extern void criAtomExPlayer_SetRandomSeed(IntPtr player, uint seed) { }

	// RVA: 0x23D5548 Offset: 0x23D5548 VA: 0x23D5548
	private static extern void CRIWARE250770DC(IntPtr player, bool sw) { }

	// RVA: 0x23D4C30 Offset: 0x23D4C30 VA: 0x23D4C30
	private static extern void criAtomExPlayer_SetAsrRackId(IntPtr player, int asr_rack_id) { }

	// RVA: 0x23D4DC4 Offset: 0x23D4DC4 VA: 0x23D4DC4
	private static extern void criAtomExPlayer_SetDspParameter(IntPtr player, int id, float value) { }

	// RVA: 0x23D4F70 Offset: 0x23D4F70 VA: 0x23D4F70
	private static extern void criAtomExPlayer_AttachTween(IntPtr player, IntPtr tween) { }

	// RVA: 0x23D5050 Offset: 0x23D5050 VA: 0x23D5050
	private static extern void criAtomExPlayer_DetachTween(IntPtr player, IntPtr tween) { }

	// RVA: 0x23D5104 Offset: 0x23D5104 VA: 0x23D5104
	private static extern void criAtomExPlayer_DetachTweenAll(IntPtr player) { }
}

// Namespace: 
public enum CriAtomExPlayer.Status // TypeDefIndex: 3955
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExPlayer.Status Stop = 0;
	public const CriAtomExPlayer.Status Prep = 1;
	public const CriAtomExPlayer.Status Playing = 2;
	public const CriAtomExPlayer.Status PlayEnd = 3;
	public const CriAtomExPlayer.Status Error = 4;
}

// Namespace: 
private struct CriAtomExPlayer.Config // TypeDefIndex: 3956
{
	// Fields
	public CriAtomEx.VoiceAllocationMethod voiceAllocationMethod; // 0x0
	public int maxPathStrings; // 0x4
	public int maxPath; // 0x8
	public int maxAisacs; // 0xC
	public bool updatesTime; // 0x10
	public bool enableAudioSyncedTimer; // 0x11
}

// Namespace: 
public enum CriAtomExPlayer.TimeStretchParameterId // TypeDefIndex: 3957
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExPlayer.TimeStretchParameterId Ratio = 0;
	public const CriAtomExPlayer.TimeStretchParameterId FrameTime = 1;
	public const CriAtomExPlayer.TimeStretchParameterId Quality = 2;
}

// Namespace: 
public enum CriAtomExPlayer.PitchShifterParameterId // TypeDefIndex: 3958
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExPlayer.PitchShifterParameterId Pitch = 0;
	public const CriAtomExPlayer.PitchShifterParameterId Formant = 1;
	public const CriAtomExPlayer.PitchShifterParameterId Mode = 2;
}

// Namespace: 
[ObsoleteAttribute] // RVA: 0xC1EF14 Offset: 0xC1EF14 VA: 0xC1EF14
public class CriAtomExPlayerOutputAnalyzer : CriAtomExOutputAnalyzer // TypeDefIndex: 3959
{
	// Methods

	// RVA: 0x23D55F4 Offset: 0x23D55F4 VA: 0x23D55F4
	public void .ctor(CriAtomExPlayerOutputAnalyzer.Type[] types, CriAtomExPlayerOutputAnalyzer.Config[] configs) { }
}

// Namespace: 
public enum CriAtomExPlayerOutputAnalyzer.Type // TypeDefIndex: 3960
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExPlayerOutputAnalyzer.Type LevelMeter = 0;
	public const CriAtomExPlayerOutputAnalyzer.Type SpectrumAnalyzer = 1;
	public const CriAtomExPlayerOutputAnalyzer.Type PcmCapture = 2;
}

// Namespace: 
public struct CriAtomExPlayerOutputAnalyzer.Config // TypeDefIndex: 3961
{
	// Fields
	public int num_spectrum_analyzer_bands; // 0x0
	public int num_stored_output_data; // 0x4

	// Methods

	// RVA: 0xD6A748 Offset: 0xD6A748 VA: 0xD6A748
	public void .ctor(int num_spectrum_analyzer_bands = 8, int num_stored_output_data = 4096) { }
}

// Namespace: 
public class CriAtomExSoundObject : CriDisposable // TypeDefIndex: 3962
{
	// Fields
	private IntPtr handle; // 0x20

	// Properties
	public IntPtr nativeHandle { get; }

	// Methods

	// RVA: 0x23D5F08 Offset: 0x23D5F08 VA: 0x23D5F08
	public void .ctor(bool enableVoiceLimitScope, bool enableCategoryCueLimitScope) { }

	// RVA: 0x23D6114 Offset: 0x23D6114 VA: 0x23D6114
	public IntPtr get_nativeHandle() { }

	// RVA: 0x23D611C Offset: 0x23D611C VA: 0x23D611C Slot: 5
	public override void Dispose() { }

	// RVA: 0x23D624C Offset: 0x23D624C VA: 0x23D624C
	public void AddPlayer(CriAtomExPlayer player) { }

	// RVA: 0x23D632C Offset: 0x23D632C VA: 0x23D632C
	public void DeletePlayer(CriAtomExPlayer player) { }

	// RVA: 0x23D640C Offset: 0x23D640C VA: 0x23D640C
	public void DeleteAllPlayers() { }

	// RVA: 0x23D64B0 Offset: 0x23D64B0 VA: 0x23D64B0 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x23D6034 Offset: 0x23D6034 VA: 0x23D6034
	private static extern IntPtr criAtomExSoundObject_Create(ref CriAtomExSoundObject.Config config, IntPtr work, int work_size) { }

	// RVA: 0x23D61B0 Offset: 0x23D61B0 VA: 0x23D61B0
	private static extern void criAtomExSoundObject_Destroy(IntPtr soundObject) { }

	// RVA: 0x23D6280 Offset: 0x23D6280 VA: 0x23D6280
	private static extern void criAtomExSoundObject_AddPlayer(IntPtr soundObject, IntPtr player) { }

	// RVA: 0x23D6360 Offset: 0x23D6360 VA: 0x23D6360
	private static extern void criAtomExSoundObject_DeletePlayer(IntPtr soundObject, IntPtr player) { }

	// RVA: 0x23D6414 Offset: 0x23D6414 VA: 0x23D6414
	private static extern void criAtomExSoundObject_DeleteAllPlayers(IntPtr soundObject) { }
}

// Namespace: 
private struct CriAtomExSoundObject.Config // TypeDefIndex: 3963
{
	// Fields
	public bool enableVoiceLimitScope; // 0x0
	public bool enableCategoryCueLimitScope; // 0x1
}

// Namespace: 
public class CriAtomExTween : CriDisposable // TypeDefIndex: 3964
{
	// Fields
	private IntPtr handle; // 0x20

	// Properties
	internal IntPtr nativeHandle { get; }
	public float Value { get; }
	public bool IsActive { get; }

	// Methods

	// RVA: 0x23D6764 Offset: 0x23D6764 VA: 0x23D6764
	public void .ctor() { }

	// RVA: 0x23D6770 Offset: 0x23D6770 VA: 0x23D6770
	public void .ctor(CriAtomEx.Parameter parameterId) { }

	// RVA: 0x23D68A0 Offset: 0x23D68A0 VA: 0x23D68A0
	public void .ctor(uint aisacId) { }

	// RVA: 0x23D6780 Offset: 0x23D6780 VA: 0x23D6780
	public void .ctor(CriAtomExTween.ParameterType parameterType, uint targetId) { }

	// RVA: 0x23D4F68 Offset: 0x23D4F68 VA: 0x23D4F68
	internal IntPtr get_nativeHandle() { }

	// RVA: 0x23D6964 Offset: 0x23D6964 VA: 0x23D6964 Slot: 5
	public override void Dispose() { }

	// RVA: 0x23D6A80 Offset: 0x23D6A80 VA: 0x23D6A80
	public float get_Value() { }

	// RVA: 0x23D6B24 Offset: 0x23D6B24 VA: 0x23D6B24
	public bool get_IsActive() { }

	// RVA: 0x23D6BD0 Offset: 0x23D6BD0 VA: 0x23D6BD0
	public void MoveTo(ushort durationMs, float value) { }

	// RVA: 0x23D6C94 Offset: 0x23D6C94 VA: 0x23D6C94
	public void MoveFrom(ushort durationMs, float value) { }

	// RVA: 0x23D6D58 Offset: 0x23D6D58 VA: 0x23D6D58
	public void Stop() { }

	// RVA: 0x23D6DFC Offset: 0x23D6DFC VA: 0x23D6DFC
	public void Reset() { }

	// RVA: 0x23D6EA0 Offset: 0x23D6EA0 VA: 0x23D6EA0 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x23D68B0 Offset: 0x23D68B0 VA: 0x23D68B0
	private static extern IntPtr criAtomExTween_Create(ref CriAtomExTween.Config config, IntPtr work, int work_size) { }

	// RVA: 0x23D69E4 Offset: 0x23D69E4 VA: 0x23D69E4
	private static extern void criAtomExTween_Destroy(IntPtr tween) { }

	// RVA: 0x23D6A88 Offset: 0x23D6A88 VA: 0x23D6A88
	private static extern float criAtomExTween_GetValue(IntPtr tween) { }

	// RVA: 0x23D6BD8 Offset: 0x23D6BD8 VA: 0x23D6BD8
	private static extern void criAtomExTween_MoveTo(IntPtr tween, ushort time_ms, float value) { }

	// RVA: 0x23D6C9C Offset: 0x23D6C9C VA: 0x23D6C9C
	private static extern void criAtomExTween_MoveFrom(IntPtr tween, ushort time_ms, float value) { }

	// RVA: 0x23D6D60 Offset: 0x23D6D60 VA: 0x23D6D60
	private static extern void criAtomExTween_Stop(IntPtr tween) { }

	// RVA: 0x23D6E04 Offset: 0x23D6E04 VA: 0x23D6E04
	private static extern void criAtomExTween_Reset(IntPtr tween) { }

	// RVA: 0x23D6B2C Offset: 0x23D6B2C VA: 0x23D6B2C
	private static extern bool criAtomExTween_IsActive(IntPtr tween) { }
}

// Namespace: 
public enum CriAtomExTween.ParameterType // TypeDefIndex: 3965
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExTween.ParameterType Basic = 0;
	public const CriAtomExTween.ParameterType Aisac = 1;
}

// Namespace: 
private struct CriAtomExTween.Config // TypeDefIndex: 3966
{
	// Fields
	public CriAtomExTween.Config.Target target; // 0x0
	public CriAtomExTween.ParameterType parameterType; // 0x4
}

// Namespace: 
public struct CriAtomExTween.Config.Target // TypeDefIndex: 3967
{
	// Fields
	public CriAtomEx.Parameter parameterId; // 0x0
	public uint aisacIds; // 0x0
}

// Namespace: 
public abstract class CriAtomExVoicePool : CriDisposable // TypeDefIndex: 3968
{
	// Fields
	public const int StandardMemoryAsrVoicePoolId = 0;
	public const int StandardStreamingAsrVoicePoolId = 1;
	public const int StandardMemoryNsrVoicePoolId = 2;
	public const int StandardStreamingNsrVoicePoolId = 3;
	protected IntPtr _handle; // 0x20
	protected uint _identifier; // 0x28
	protected int _numVoices; // 0x2C
	protected int _maxChannels; // 0x30
	protected int _maxSamplingRate; // 0x34

	// Properties
	public IntPtr nativeHandle { get; }
	public uint identifier { get; }
	public int numVoices { get; }
	public int maxChannels { get; }
	public int maxSamplingRate { get; }

	// Methods

	// RVA: 0x23D58F4 Offset: 0x23D58F4 VA: 0x23D58F4
	protected void .ctor() { }

	// RVA: 0x23D6F1C Offset: 0x23D6F1C VA: 0x23D6F1C
	public static CriAtomExVoicePool.UsedVoicesInfo GetNumUsedVoices(CriAtomExVoicePool.VoicePoolId voicePoolId) { }

	// RVA: 0x23D7000 Offset: 0x23D7000 VA: 0x23D7000
	public IntPtr get_nativeHandle() { }

	// RVA: 0x23D7008 Offset: 0x23D7008 VA: 0x23D7008
	public uint get_identifier() { }

	// RVA: 0x23D7010 Offset: 0x23D7010 VA: 0x23D7010
	public int get_numVoices() { }

	// RVA: 0x23D7018 Offset: 0x23D7018 VA: 0x23D7018
	public int get_maxChannels() { }

	// RVA: 0x23D7020 Offset: 0x23D7020 VA: 0x23D7020
	public int get_maxSamplingRate() { }

	// RVA: 0x23D7028 Offset: 0x23D7028 VA: 0x23D7028 Slot: 5
	public override void Dispose() { }

	// RVA: 0x23D7158 Offset: 0x23D7158 VA: 0x23D7158
	public CriAtomExVoicePool.UsedVoicesInfo GetNumUsedVoices() { }

	// RVA: 0x23D7290 Offset: 0x23D7290 VA: 0x23D7290
	public void AttachDspTimeStretch() { }

	// RVA: 0x23D73E0 Offset: 0x23D73E0 VA: 0x23D73E0
	public void AttachDspPitchShifter(CriAtomExVoicePool.PitchShifterMode mode = 0, int windosSize = 1024, int overlapTimes = 4) { }

	// RVA: 0x23D7554 Offset: 0x23D7554 VA: 0x23D7554
	public void DetachDsp() { }

	// RVA: 0x23D7654 Offset: 0x23D7654 VA: 0x23D7654 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x23D6F4C Offset: 0x23D6F4C VA: 0x23D6F4C
	private static extern void CRIWARE9CE3EB11(int voice_pool_id, out int num_used_voices, out int num_pool_voices) { }

	// RVA: 0x23D71DC Offset: 0x23D71DC VA: 0x23D71DC
	private static extern void criAtomExVoicePool_GetNumUsedVoices(IntPtr pool, out int num_used_voices, out int num_pool_voices) { }

	// RVA: 0x23D70BC Offset: 0x23D70BC VA: 0x23D70BC
	public static extern void criAtomExVoicePool_Free(IntPtr pool) { }

	// RVA: 0x23D731C Offset: 0x23D731C VA: 0x23D731C
	private static extern void criAtomExVoicePool_AttachDspTimeStretch(IntPtr pool, ref CriAtomExVoicePool.ExTimeStretchConfig config, IntPtr work, int work_size) { }

	// RVA: 0x23D7490 Offset: 0x23D7490 VA: 0x23D7490
	private static extern void criAtomExVoicePool_AttachDspPitchShifter(IntPtr pool, ref CriAtomExVoicePool.ExPitchShifterConfig config, IntPtr work, int work_size) { }

	// RVA: 0x23D75B8 Offset: 0x23D75B8 VA: 0x23D75B8
	private static extern void criAtomExVoicePool_DetachDsp(IntPtr pool) { }
}

// Namespace: 
public enum CriAtomExVoicePool.VoicePoolId // TypeDefIndex: 3969
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExVoicePool.VoicePoolId StandardMemory = 0;
	public const CriAtomExVoicePool.VoicePoolId StandardStreaming = 1;
	public const CriAtomExVoicePool.VoicePoolId HcaMxMemory = 4;
	public const CriAtomExVoicePool.VoicePoolId HcaMxStreaming = 5;
	public const CriAtomExVoicePool.VoicePoolId LowLatencyMemory = 2;
	public const CriAtomExVoicePool.VoicePoolId LowLatencyStreaming = 3;
}

// Namespace: 
public enum CriAtomExVoicePool.PitchShifterMode // TypeDefIndex: 3970
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExVoicePool.PitchShifterMode Music = 0;
	public const CriAtomExVoicePool.PitchShifterMode Vocal = 1;
	public const CriAtomExVoicePool.PitchShifterMode SoundEffect = 2;
	public const CriAtomExVoicePool.PitchShifterMode Speech = 3;
}

// Namespace: 
public struct CriAtomExVoicePool.UsedVoicesInfo // TypeDefIndex: 3971
{
	// Fields
	public int numUsedVoices; // 0x0
	public int numPoolVoices; // 0x4
}

// Namespace: 
protected struct CriAtomExVoicePool.PlayerConfig // TypeDefIndex: 3972
{
	// Fields
	public int maxChannels; // 0x0
	public int maxSamplingRate; // 0x4
	public bool streamingFlag; // 0x8
	public int soundRendererType; // 0xC
	public int decodeLatency; // 0x10
}

// Namespace: 
protected struct CriAtomExVoicePool.VoicePoolConfig // TypeDefIndex: 3973
{
	// Fields
	public uint identifier; // 0x0
	public int numVoices; // 0x4
	public CriAtomExVoicePool.PlayerConfig playerConfig; // 0x8
}

// Namespace: 
private struct CriAtomExVoicePool.PitchShifterConfig // TypeDefIndex: 3974
{
