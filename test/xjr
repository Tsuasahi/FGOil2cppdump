[Serializable]
public class CriManaConfig.VitaH264PlaybackConfig // TypeDefIndex: 4087
{
	// Fields
	public bool useH264Playback; // 0x10
	public int maxWidth; // 0x14
	public int maxHeight; // 0x18
	public bool getMemoryFromTexture; // 0x1C

	// Methods

	// RVA: 0x241AFF4 Offset: 0x241AFF4 VA: 0x241AFF4
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriManaConfig.WebGLConfig // TypeDefIndex: 4088
{
	// Fields
	public string webworkerPath; // 0x10
	public int heapSize; // 0x18

	// Methods

	// RVA: 0x241B008 Offset: 0x241B008 VA: 0x241B008
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriWareDecrypterConfig // TypeDefIndex: 4089
{
	// Fields
	public string key; // 0x10
	public string authenticationFile; // 0x18
	public bool enableAtomDecryption; // 0x20
	public bool enableManaDecryption; // 0x21

	// Methods

	// RVA: 0x1DE9180 Offset: 0x1DE9180 VA: 0x1DE9180
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC1F0F4 Offset: 0xC1F0F4 VA: 0xC1F0F4
public class CriWareInitializer : CriMonoBehaviour // TypeDefIndex: 4090
{
	// Fields
	public bool initializesFileSystem; // 0x28
	public CriFsConfig fileSystemConfig; // 0x30
	public bool initializesAtom; // 0x38
	public CriAtomConfig atomConfig; // 0x40
	public bool initializesMana; // 0x48
	public CriManaConfig manaConfig; // 0x50
	public bool useDecrypter; // 0x58
	public CriWareDecrypterConfig decrypterConfig; // 0x60
	public bool dontInitializeOnAwake; // 0x68
	public bool dontDestroyOnLoad; // 0x69
	private static int initializationCount; // 0x0

	// Methods

	// RVA: 0x1DEAAF4 Offset: 0x1DEAAF4 VA: 0x1DEAAF4
	public void .ctor() { }

	// RVA: 0x1DEABCC Offset: 0x1DEABCC VA: 0x1DEABCC
	private void Awake() { }

	// RVA: 0x1DEB144 Offset: 0x1DEB144 VA: 0x1DEB144 Slot: 4
	protected override void OnEnable() { }

	// RVA: 0x1DEB148 Offset: 0x1DEB148 VA: 0x1DEB148
	private void Start() { }

	// RVA: 0x1DEB14C Offset: 0x1DEB14C VA: 0x1DEB14C
	private void OnDestroy() { }

	// RVA: 0x1DEB2FC Offset: 0x1DEB2FC VA: 0x1DEB2FC Slot: 6
	public override void CriInternalUpdate() { }

	// RVA: 0x1DEB300 Offset: 0x1DEB300 VA: 0x1DEB300 Slot: 7
	public override void CriInternalLateUpdate() { }

	// RVA: 0x1DEAC48 Offset: 0x1DEAC48 VA: 0x1DEAC48
	public void Initialize() { }

	// RVA: 0x1DEB150 Offset: 0x1DEB150 VA: 0x1DEB150
	public void Shutdown() { }

	// RVA: 0x1DEBC10 Offset: 0x1DEBC10 VA: 0x1DEBC10
	public static bool IsInitialized() { }

	// RVA: 0x1DEBCB0 Offset: 0x1DEBCB0 VA: 0x1DEBCB0
	public static void AddAudioEffectInterface(IntPtr effect_interface) { }

	// RVA: 0x1DEB304 Offset: 0x1DEB304 VA: 0x1DEB304
	public static bool InitializeFileSystem(CriFsConfig config) { }

	// RVA: 0x1DEB4D0 Offset: 0x1DEB4D0 VA: 0x1DEB4D0
	public static bool InitializeAtom(CriAtomConfig config) { }

	// RVA: 0x1DEBAEC Offset: 0x1DEBAEC VA: 0x1DEBAEC
	public static bool InitializeMana(CriManaConfig config) { }

	[ObsoleteAttribute] // RVA: 0xC23F08 Offset: 0xC23F08 VA: 0xC23F08
	// RVA: 0x1DEBD54 Offset: 0x1DEBD54 VA: 0x1DEBD54
	public static bool InitializeDecrypter(CriWareDecrypterConfig config) { }

	// RVA: 0x1DEBDB8 Offset: 0x1DEBDB8 VA: 0x1DEBDB8
	private static void .cctor() { }
}

// Namespace: 
public static class CriAtomExDebug // TypeDefIndex: 4091
{
	// Methods

	// RVA: 0x23C9754 Offset: 0x23C9754 VA: 0x23C9754
	public static void GetResourcesInfo(out CriAtomExDebug.ResourcesInfo resourcesInfo) { }

	// RVA: 0x23C9758 Offset: 0x23C9758 VA: 0x23C9758
	private static extern void criAtomExDebug_GetResourcesInfo(out CriAtomExDebug.ResourcesInfo resourcesInfo) { }
}

// Namespace: 
public struct CriAtomExDebug.ResourcesInfo // TypeDefIndex: 4092
{
	// Fields
	public CriAtomEx.ResourceUsage virtualVoiceUsage; // 0x0
	public CriAtomEx.ResourceUsage sequenceUsage; // 0x8
	public CriAtomEx.ResourceUsage sequenceTrackUsage; // 0x10
	public CriAtomEx.ResourceUsage sequenceTrackItemUsage; // 0x18
}

// Namespace: 
public static class CriAtomExAcfDebug // TypeDefIndex: 4093
{
	// Methods

	// RVA: 0x23C40A8 Offset: 0x23C40A8 VA: 0x23C40A8
	public static int GetNumCategories() { }

	// RVA: 0x23C4138 Offset: 0x23C4138 VA: 0x23C4138
	public static bool GetCategoryInfoByIndex(ushort index, out CriAtomExAcfDebug.CategoryInfo categoryInfo) { }

	// RVA: 0x23C42A8 Offset: 0x23C42A8 VA: 0x23C42A8
	public static bool GetCategoryInfoByName(string name, out CriAtomExAcfDebug.CategoryInfo categoryInfo) { }

	// RVA: 0x23C43E0 Offset: 0x23C43E0 VA: 0x23C43E0
	public static bool GetCategoryInfoById(uint id, out CriAtomExAcfDebug.CategoryInfo categoryInfo) { }

	// RVA: 0x23C4500 Offset: 0x23C4500 VA: 0x23C4500
	public static int GetNumBuses() { }

	// RVA: 0x23C4590 Offset: 0x23C4590 VA: 0x23C4590
	public static bool GetDspBusInformation(ushort index, out CriAtomExAcfDebug.DspBusInfo dspBusInfo) { }

	// RVA: 0x23C47A4 Offset: 0x23C47A4 VA: 0x23C47A4
	public static int GetNumAisacControls() { }

	// RVA: 0x23C4834 Offset: 0x23C4834 VA: 0x23C4834
	public static bool GetAisacControlInfo(ushort index, out CriAtomExAcfDebug.AisacControlInfo info) { }

	// RVA: 0x23C4970 Offset: 0x23C4970 VA: 0x23C4970
	public static uint GetAisacControlIdByName(string name) { }

	// RVA: 0x23C4A28 Offset: 0x23C4A28 VA: 0x23C4A28
	public static string GetAisacControlNameById(uint id) { }

	// RVA: 0x23C4ADC Offset: 0x23C4ADC VA: 0x23C4ADC
	public static int GetNumGlobalAisacs() { }

	// RVA: 0x23C4B6C Offset: 0x23C4B6C VA: 0x23C4B6C
	public static bool GetGlobalAisacInfo(ushort index, out CriAtomExAcfDebug.GlobalAisacInfo info) { }

	// RVA: 0x23C4CEC Offset: 0x23C4CEC VA: 0x23C4CEC
	public static bool GetGlobalAisacInfoByName(string name, out CriAtomExAcfDebug.GlobalAisacInfo info) { }

	// RVA: 0x23C4E2C Offset: 0x23C4E2C VA: 0x23C4E2C
	public static int GetNumSelectors() { }

	// RVA: 0x23C4EBC Offset: 0x23C4EBC VA: 0x23C4EBC
	public static bool GetSelectorInfoByIndex(ushort index, out CriAtomExAcfDebug.SelectorInfo info) { }

	// RVA: 0x23C5018 Offset: 0x23C5018 VA: 0x23C5018
	public static bool GetSelectorInfoByName(string name, out CriAtomExAcfDebug.SelectorInfo info) { }

	// RVA: 0x23C5144 Offset: 0x23C5144 VA: 0x23C5144
	public static bool GetSelectorLabelInfo(ref CriAtomExAcfDebug.SelectorInfo selectorInfo, ushort index, out CriAtomExAcfDebug.SelectorLabelInfo labelInfo) { }

	// RVA: 0x23C40AC Offset: 0x23C40AC VA: 0x23C40AC
	private static extern int criAtomExAcf_GetNumCategories() { }

	// RVA: 0x23C41AC Offset: 0x23C41AC VA: 0x23C41AC
	private static extern int criAtomExAcf_GetCategoryInfo(ushort index, out CriAtomExAcfDebug.CategoryInfoForMarshaling categoryInfo) { }

	// RVA: 0x23C431C Offset: 0x23C431C VA: 0x23C431C
	private static extern int criAtomExAcf_GetCategoryInfoByName(string name, out CriAtomExAcfDebug.CategoryInfoForMarshaling categoryInfo) { }

	// RVA: 0x23C4454 Offset: 0x23C4454 VA: 0x23C4454
	private static extern int criAtomExAcf_GetCategoryInfoById(uint id, out CriAtomExAcfDebug.CategoryInfoForMarshaling categoryInfo) { }

	// RVA: 0x23C4504 Offset: 0x23C4504 VA: 0x23C4504
	private static extern int criAtomExAcf_GetNumBuses() { }

	// RVA: 0x23C4630 Offset: 0x23C4630 VA: 0x23C4630
	private static extern int criAtomExAcf_GetDspBusInformation(ushort index, out CriAtomExAcfDebug.DspBusInfoForMarshaling dspBusInfo) { }

	// RVA: 0x23C47A8 Offset: 0x23C47A8 VA: 0x23C47A8
	private static extern int criAtomExAcf_GetNumAisacControls() { }

	// RVA: 0x23C488C Offset: 0x23C488C VA: 0x23C488C
	private static extern int criAtomExAcf_GetAisacControlInfo(ushort index, out CriAtomExAcfDebug.AisacControlInfoForMarshaling info) { }

	// RVA: 0x23C4974 Offset: 0x23C4974 VA: 0x23C4974
	private static extern uint criAtomExAcf_GetAisacControlIdByName(string name) { }

	// RVA: 0x23C4A40 Offset: 0x23C4A40 VA: 0x23C4A40
	private static extern IntPtr criAtomExAcf_GetAisacControlNameById(uint id) { }

	// RVA: 0x23C4AE0 Offset: 0x23C4AE0 VA: 0x23C4AE0
	private static extern int criAtomExAcf_GetNumGlobalAisacs() { }

	// RVA: 0x23C4BE8 Offset: 0x23C4BE8 VA: 0x23C4BE8
	private static extern int criAtomExAcf_GetGlobalAisacInfo(ushort index, out CriAtomExAcfDebug.GlobalAisacInfoForMarshaling info) { }

	// RVA: 0x23C4D68 Offset: 0x23C4D68 VA: 0x23C4D68
	private static extern int criAtomExAcf_GetGlobalAisacInfoByName(string name, out CriAtomExAcfDebug.GlobalAisacInfoForMarshaling info) { }

	// RVA: 0x23C4E30 Offset: 0x23C4E30 VA: 0x23C4E30
	private static extern int criAtomExAcf_GetNumSelectors() { }

	// RVA: 0x23C4F24 Offset: 0x23C4F24 VA: 0x23C4F24
	private static extern int criAtomExAcf_GetSelectorInfoByIndex(ushort index, out CriAtomExAcfDebug.SelectorInfoForMarshaling info) { }

	// RVA: 0x23C5080 Offset: 0x23C5080 VA: 0x23C5080
	private static extern int criAtomExAcf_GetSelectorInfoByName(string name, out CriAtomExAcfDebug.SelectorInfoForMarshaling info) { }

	// RVA: 0x23C51BC Offset: 0x23C51BC VA: 0x23C51BC
	private static extern int criAtomExAcf_GetSelectorLabelInfo(ref CriAtomExAcfDebug.SelectorInfoForMarshaling info, ushort labelIndex, out CriAtomExAcfDebug.SelectorLabelInfoForMarshaling label_info) { }
}

// Namespace: 
public struct CriAtomExAcfDebug.CategoryInfo // TypeDefIndex: 4094
{
	// Fields
	public uint groupNo; // 0x0
	public uint id; // 0x4
	public string name; // 0x8
	public uint numCueLimits; // 0x10
	public float volume; // 0x14
}

// Namespace: 
public struct CriAtomExAcfDebug.DspBusInfo // TypeDefIndex: 4095
{
	// Fields
	public string name; // 0x0
	public float volume; // 0x8
	public float pan3dVolume; // 0xC
	public float pan3dAngle; // 0x10
	public float pan3dDistance; // 0x14
	public ushort[] fxIndexes; // 0x18
	public ushort[] busLinkIndexes; // 0x20
	public ushort busNo; // 0x28
	public byte numFxes; // 0x2A
	public byte numBusLinks; // 0x2B
}

// Namespace: 
public struct CriAtomExAcfDebug.AisacControlInfo // TypeDefIndex: 4096
{
	// Fields
	public string name; // 0x0
	public uint id; // 0x8
}

// Namespace: 
public enum CriAtomExAcfDebug.AisacType // TypeDefIndex: 4097
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExAcfDebug.AisacType Normal = 0;
	public const CriAtomExAcfDebug.AisacType AutoModulation = 1;
}

// Namespace: 
public struct CriAtomExAcfDebug.GlobalAisacInfo // TypeDefIndex: 4098
{
	// Fields
	public string name; // 0x0
	public ushort index; // 0x8
	public ushort numGraphs; // 0xA
	public CriAtomExAcfDebug.AisacType type; // 0xC
	public float randomRange; // 0x10
	public ushort controlId; // 0x14
}

// Namespace: 
public struct CriAtomExAcfDebug.SelectorInfo // TypeDefIndex: 4099
{
	// Fields
	public string name; // 0x0
	public ushort index; // 0x8
	public ushort numLabels; // 0xA
	public ushort globalLabelIndex; // 0xC
}

// Namespace: 
public struct CriAtomExAcfDebug.SelectorLabelInfo // TypeDefIndex: 4100
{
	// Fields
	public string selectorName; // 0x0
	public string labelName; // 0x8
}

// Namespace: 
private struct CriAtomExAcfDebug.CategoryInfoForMarshaling // TypeDefIndex: 4101
{
	// Fields
	public uint groupNo; // 0x0
	public uint id; // 0x4
	public IntPtr namePtr; // 0x8
	public uint numCueLimits; // 0x10
	public float volume; // 0x14

	// Methods

	// RVA: 0xD69A00 Offset: 0xD69A00 VA: 0xD69A00
	public void Convert(out CriAtomExAcfDebug.CategoryInfo x) { }
}

// Namespace: 
private struct CriAtomExAcfDebug.DspBusInfoForMarshaling // TypeDefIndex: 4102
{
	// Fields
	public IntPtr namePtr; // 0x0
	public float volume; // 0x8
	public float pan3dVolume; // 0xC
	public float pan3dAngle; // 0x10
	public float pan3dDistance; // 0x14
	public ushort[] fxIndexes; // 0x18
	public ushort[] busLinkIndexes; // 0x20
	public ushort busNo; // 0x28
	public byte numFxes; // 0x2A
	public byte numBusLinks; // 0x2B

	// Methods

	// RVA: 0xD69D84 Offset: 0xD69D84 VA: 0xD69D84
	public void Convert(out CriAtomExAcfDebug.DspBusInfo x) { }
}

// Namespace: 
private struct CriAtomExAcfDebug.AisacControlInfoForMarshaling // TypeDefIndex: 4103
{
	// Fields
	public IntPtr namePtr; // 0x0
	public uint id; // 0x8

	// Methods

	// RVA: 0xD69908 Offset: 0xD69908 VA: 0xD69908
	public void Convert(out CriAtomExAcfDebug.AisacControlInfo x) { }
}

// Namespace: 
private struct CriAtomExAcfDebug.GlobalAisacInfoForMarshaling // TypeDefIndex: 4104
{
	// Fields
	public IntPtr namePtr; // 0x0
	public ushort index; // 0x8
	public ushort numGraphs; // 0xA
	public uint type; // 0xC
	public float randomRange; // 0x10
	public ushort controlId; // 0x14
	public ushort dummy; // 0x16

	// Methods

	// RVA: 0xD69E5C Offset: 0xD69E5C VA: 0xD69E5C
	public void Convert(out CriAtomExAcfDebug.GlobalAisacInfo x) { }
}

// Namespace: 
private struct CriAtomExAcfDebug.SelectorInfoForMarshaling // TypeDefIndex: 4105
{
	// Fields
	public IntPtr namePtr; // 0x0
	public ushort index; // 0x8
	public ushort numLabels; // 0xA
	public ushort globalLabelIndex; // 0xC

	// Methods

	// RVA: 0xD69F64 Offset: 0xD69F64 VA: 0xD69F64
	public void Convert(out CriAtomExAcfDebug.SelectorInfo x) { }
}

// Namespace: 
private struct CriAtomExAcfDebug.SelectorLabelInfoForMarshaling // TypeDefIndex: 4106
{
	// Fields
	public IntPtr selectorNamePtr; // 0x0
	public IntPtr labelNamePtr; // 0x8

	// Methods

	// RVA: 0xD6A050 Offset: 0xD6A050 VA: 0xD6A050
	public void Convert(out CriAtomExAcfDebug.SelectorLabelInfo x) { }
}

// Namespace: 
public static class CriAtomExAcbDebug // TypeDefIndex: 4107
{
	// Methods

	// RVA: 0x2472D6C Offset: 0x2472D6C VA: 0x2472D6C
	public static bool GetAcbInfo(CriAtomExAcb acb, out CriAtomExAcbDebug.AcbInfo acbInfo) { }

	// RVA: 0x2472DF4 Offset: 0x2472DF4 VA: 0x2472DF4
	private static extern int criAtomExAcb_GetAcbInfo(IntPtr acbHn, out CriAtomExAcbDebug.AcbInfoForMarshaling acbInfo) { }
}

// Namespace: 
public struct CriAtomExAcbDebug.AcbInfo // TypeDefIndex: 4108
{
	// Fields
	public string name; // 0x0
	public uint size; // 0x8
	public uint version; // 0xC
	public CriAtomEx.CharacterEncoding characterEncoding; // 0x10
	public float volume; // 0x14
	public int numCues; // 0x18
}

// Namespace: 
private struct CriAtomExAcbDebug.AcbInfoForMarshaling // TypeDefIndex: 4109
{
	// Fields
	public IntPtr namePtr; // 0x0
	public uint size; // 0x8
	public uint version; // 0xC
	public CriAtomEx.CharacterEncoding characterEncoding; // 0x10
	public float volume; // 0x14
	public int numCues; // 0x18

	// Methods

	// RVA: 0xD6BE98 Offset: 0xD6BE98 VA: 0xD6BE98
	public void Convert(out CriAtomExAcbDebug.AcbInfo x) { }
}

// Namespace: 
public static class CriAtomExPlaybackDebug // TypeDefIndex: 4110
{
	// Methods

	// RVA: 0x23CEDD4 Offset: 0x23CEDD4 VA: 0x23CEDD4
	public static bool GetParameter(CriAtomExPlayback playback, CriAtomEx.Parameter parameterId, out float value) { }

	// RVA: 0x23CEEA4 Offset: 0x23CEEA4 VA: 0x23CEEA4
	public static bool GetParameter(CriAtomExPlayback playback, CriAtomEx.Parameter parameterId, out uint value) { }

	// RVA: 0x23CEF74 Offset: 0x23CEF74 VA: 0x23CEF74
	public static bool GetParameter(CriAtomExPlayback playback, CriAtomEx.Parameter parameterId, out int value) { }

	// RVA: 0x23CF044 Offset: 0x23CF044 VA: 0x23CF044
	public static bool GetAisacControl(CriAtomExPlayback playback, uint controlId, out float value) { }

	// RVA: 0x23CF114 Offset: 0x23CF114 VA: 0x23CF114
	public static bool GetAisacControl(CriAtomExPlayback playback, string controlName, out float value) { }

	// RVA: 0x23CEDF0 Offset: 0x23CEDF0 VA: 0x23CEDF0
	private static extern int criAtomExPlayback_GetParameterFloat32(uint id, int parameterId, out float value) { }

	// RVA: 0x23CEEC0 Offset: 0x23CEEC0 VA: 0x23CEEC0
	private static extern int criAtomExPlayback_GetParameterUint32(uint id, int parameterId, out uint value) { }

	// RVA: 0x23CEF90 Offset: 0x23CEF90 VA: 0x23CEF90
	private static extern int criAtomExPlayback_GetParameterSint32(uint id, int parameterId, out int value) { }

	// RVA: 0x23CF060 Offset: 0x23CF060 VA: 0x23CF060
	private static extern int criAtomExPlayback_GetAisacControlById(uint id, uint controlId, out float value) { }

	// RVA: 0x23CF130 Offset: 0x23CF130 VA: 0x23CF130
	private static extern int criAtomExPlayback_GetAisacControlByName(uint id, string controlName, out float value) { }
}

// Namespace: CriAtomDebugDetail
public class Utility // TypeDefIndex: 4111
{
	// Methods

	// RVA: 0x246922C Offset: 0x246922C VA: 0x246922C
	public void .ctor() { }

	// RVA: 0x2469234 Offset: 0x2469234 VA: 0x2469234
	public static string PtrToStringAutoOrNull(IntPtr stringPtr) { }
}

// Namespace: 
public abstract class CriDisposable : IDisposable // TypeDefIndex: 4112
{
	// Fields
	public Guid guid; // 0x10

	// Methods

	// RVA: 0x2403868 Offset: 0x2403868 VA: 0x2403868
	public void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 5
	public abstract void Dispose();
}

// Namespace: 
public static class CriDisposableObjectManager // TypeDefIndex: 4113
{
	// Fields
	private static List<CriDisposableObjectManager.ObjectRef> refList; // 0x0

	// Methods

	// RVA: 0x24038E0 Offset: 0x24038E0 VA: 0x24038E0
	private static int SearchForDisposable(CriDisposable disposable) { }

	// RVA: 0x2403AD8 Offset: 0x2403AD8 VA: 0x2403AD8
	public static void Register(CriDisposable disposable, CriDisposableObjectManager.ModuleType type) { }

	// RVA: 0x2403C9C Offset: 0x2403C9C VA: 0x2403C9C
	public static bool Unregister(CriDisposable disposable) { }

	// RVA: 0x2403DF0 Offset: 0x2403DF0 VA: 0x2403DF0
	public static bool IsDisposed(CriDisposable disposable) { }

	// RVA: 0x2403E5C Offset: 0x2403E5C VA: 0x2403E5C
	public static void CallOnModuleFinalization(CriDisposableObjectManager.ModuleType type) { }

	// RVA: 0x24041A4 Offset: 0x24041A4 VA: 0x24041A4
	private static int GetNextWithType(CriDisposableObjectManager.ModuleType type) { }

	// RVA: 0x2403EC0 Offset: 0x2403EC0 VA: 0x2403EC0
	public static void DisposeAll(CriDisposableObjectManager.ModuleType type) { }

	// RVA: 0x24042B8 Offset: 0x24042B8 VA: 0x24042B8
	private static void .cctor() { }
}

// Namespace: 
public enum CriDisposableObjectManager.ModuleType // TypeDefIndex: 4114
{
	// Fields
	public int value__; // 0x0
	public const CriDisposableObjectManager.ModuleType Atom = 0;
	public const CriDisposableObjectManager.ModuleType AtomMic = 1;
	public const CriDisposableObjectManager.ModuleType Fs = 2;
	public const CriDisposableObjectManager.ModuleType FsWeb = 3;
	public const CriDisposableObjectManager.ModuleType Mana = 4;
	public const CriDisposableObjectManager.ModuleType Lips = 5;
	public const CriDisposableObjectManager.ModuleType Vip = 6;
}

// Namespace: 
public struct CriDisposableObjectManager.ObjectRef // TypeDefIndex: 4115
{
	// Fields
	public Guid guid; // 0x0
	public CriDisposableObjectManager.ModuleType type; // 0x10
	public CriDisposable disposable; // 0x18

	// Methods

	// RVA: 0xD6AAF8 Offset: 0xD6AAF8 VA: 0xD6AAF8
	public void .ctor(Guid _guid, CriDisposable _disposable, CriDisposableObjectManager.ModuleType _type) { }
}

// Namespace: 
public abstract class CriMonoBehaviour : MonoBehaviour // TypeDefIndex: 4116
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC216FC Offset: 0xC216FC VA: 0xC216FC
	[DebuggerBrowsableAttribute] // RVA: 0xC216FC Offset: 0xC216FC VA: 0xC216FC
	private Guid <guid>k__BackingField; // 0x18

	// Properties
	public Guid guid { get; set; }

	// Methods

	// RVA: 0x1DE6158 Offset: 0x1DE6158 VA: 0x1DE6158
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23F40 Offset: 0xC23F40 VA: 0xC23F40
	// RVA: 0x1DE783C Offset: 0x1DE783C VA: 0x1DE783C
	public Guid get_guid() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23F50 Offset: 0xC23F50 VA: 0xC23F50
	// RVA: 0x1DE7834 Offset: 0x1DE7834 VA: 0x1DE7834
	private void set_guid(Guid value) { }

	// RVA: 0x1DE7848 Offset: 0x1DE7848 VA: 0x1DE7848 Slot: 4
	protected virtual void OnEnable() { }

	// RVA: 0x1DE7AA8 Offset: 0x1DE7AA8 VA: 0x1DE7AA8 Slot: 5
	protected virtual void OnDisable() { }

	// RVA: -1 Offset: -1 Slot: 6
	public abstract void CriInternalUpdate();

	// RVA: -1 Offset: -1 Slot: 7
	public abstract void CriInternalLateUpdate();
}

// Namespace: 
public class CriMonoBehaviourManager : MonoBehaviour // TypeDefIndex: 4117
{
	// Fields
	private static CriMonoBehaviourManager _instance; // 0x0
	private static List<CriMonoBehaviour> criMonoBehaviourList; // 0x8

	// Properties
	public static CriMonoBehaviourManager instance { get; }

	// Methods

	// RVA: 0x1DE7C60 Offset: 0x1DE7C60 VA: 0x1DE7C60
	public void .ctor() { }

	// RVA: 0x1DE78B8 Offset: 0x1DE78B8 VA: 0x1DE78B8
	public static CriMonoBehaviourManager get_instance() { }

	// RVA: 0x1DE7C68 Offset: 0x1DE7C68 VA: 0x1DE7C68
	public static void CreateInstance() { }

	// RVA: 0x1DE7F30 Offset: 0x1DE7F30 VA: 0x1DE7F30
	private static int GetIndex(CriMonoBehaviour criMonoBehaviour) { }

	// RVA: 0x1DE7924 Offset: 0x1DE7924 VA: 0x1DE7924
	public bool Register(CriMonoBehaviour criMonoBehaviour) { }

	// RVA: 0x1DE7B0C Offset: 0x1DE7B0C VA: 0x1DE7B0C
	public static bool UnRegister(CriMonoBehaviour criMonoBehaviour) { }

	// RVA: 0x1DE809C Offset: 0x1DE809C VA: 0x1DE809C
	private void Awake() { }

	// RVA: 0x1DE819C Offset: 0x1DE819C VA: 0x1DE819C
	private void Update() { }

	// RVA: 0x1DE8354 Offset: 0x1DE8354 VA: 0x1DE8354
	private void LateUpdate() { }

	// RVA: 0x1DE850C Offset: 0x1DE850C VA: 0x1DE850C
	private static void .cctor() { }
}

// Namespace: 
public static class Debug // TypeDefIndex: 4118
{
	// Methods

	// RVA: 0x1DEBDBC Offset: 0x1DEBDBC VA: 0x1DEBDBC
	public static void Break() { }

	[ConditionalAttribute] // RVA: 0xC23F60 Offset: 0xC23F60 VA: 0xC23F60
	// RVA: 0x1DEBE90 Offset: 0x1DEBE90 VA: 0x1DEBE90
	public static void Log(object message) { }

	[ConditionalAttribute] // RVA: 0xC23F98 Offset: 0xC23F98 VA: 0xC23F98
	// RVA: 0x1DEBF0C Offset: 0x1DEBF0C VA: 0x1DEBF0C
	public static void Log(object message, Object context) { }

	[ConditionalAttribute] // RVA: 0xC23FD0 Offset: 0xC23FD0 VA: 0xC23FD0
	// RVA: 0x1DEBF9C Offset: 0x1DEBF9C VA: 0x1DEBF9C
	public static void LogError(object message) { }

	[ConditionalAttribute] // RVA: 0xC24008 Offset: 0xC24008 VA: 0xC24008
	// RVA: 0x1DEC018 Offset: 0x1DEC018 VA: 0x1DEC018
	public static void LogError(object message, Object context) { }

	[ConditionalAttribute] // RVA: 0xC24040 Offset: 0xC24040 VA: 0xC24040
	// RVA: 0x1DEC0A8 Offset: 0x1DEC0A8 VA: 0x1DEC0A8
	public static void LogWarning(object message) { }

	[ConditionalAttribute] // RVA: 0xC24078 Offset: 0xC24078 VA: 0xC24078
	// RVA: 0x1DEC124 Offset: 0x1DEC124 VA: 0x1DEC124
	public static void LogWarning(object message, Object context) { }

	[ConditionalAttribute] // RVA: 0xC240B0 Offset: 0xC240B0 VA: 0xC240B0
	// RVA: 0x1DEC1B4 Offset: 0x1DEC1B4 VA: 0x1DEC1B4
	public static void LogWarningFormat(string format, object[] args) { }

	[ConditionalAttribute] // RVA: 0xC240E8 Offset: 0xC240E8 VA: 0xC240E8
	// RVA: 0x1DEC244 Offset: 0x1DEC244 VA: 0x1DEC244
	public static void LogFormat(string format, object[] args) { }

	[ConditionalAttribute] // RVA: 0xC24120 Offset: 0xC24120 VA: 0xC24120
	// RVA: 0x1DEC2D4 Offset: 0x1DEC2D4 VA: 0x1DEC2D4
	public static void LogErrorFormat(string format, object[] args) { }

	[ConditionalAttribute] // RVA: 0xC24158 Offset: 0xC24158 VA: 0xC24158
	// RVA: 0x1DEC364 Offset: 0x1DEC364 VA: 0x1DEC364
	public static void LogAssertionFormat(string format, object[] args) { }

	[ConditionalAttribute] // RVA: 0xC24190 Offset: 0xC24190 VA: 0xC24190
	// RVA: 0x1DEC368 Offset: 0x1DEC368 VA: 0x1DEC368
	public static void LogException(Exception exception) { }

	[ConditionalAttribute] // RVA: 0xC241C8 Offset: 0xC241C8 VA: 0xC241C8
	// RVA: 0x1DEC3E4 Offset: 0x1DEC3E4 VA: 0x1DEC3E4
	public static void LogException(Exception exception, Object context) { }

	[ConditionalAttribute] // RVA: 0xC24200 Offset: 0xC24200 VA: 0xC24200
	// RVA: 0x1DEC474 Offset: 0x1DEC474 VA: 0x1DEC474
	public static void DrawLine(Vector3 vec1, Vector3 vec2, Color col) { }

	[ConditionalAttribute] // RVA: 0xC24238 Offset: 0xC24238 VA: 0xC24238
	// RVA: 0x1DEC550 Offset: 0x1DEC550 VA: 0x1DEC550
	public static void DrawRay(Vector3 vec1, Vector3 vec2, Color col) { }

	[ConditionalAttribute] // RVA: 0xC24270 Offset: 0xC24270 VA: 0xC24270
	// RVA: 0x1DEC62C Offset: 0x1DEC62C VA: 0x1DEC62C
	public static void Assert(bool condition, string message, string detailMessage) { }

	[ConditionalAttribute] // RVA: 0xC242A8 Offset: 0xC242A8 VA: 0xC242A8
	// RVA: 0x1DEC630 Offset: 0x1DEC630 VA: 0x1DEC630
	public static void Assert(bool condition, string message) { }

	[ConditionalAttribute] // RVA: 0xC242E0 Offset: 0xC242E0 VA: 0xC242E0
	// RVA: 0x1DEC634 Offset: 0x1DEC634 VA: 0x1DEC634
	public static void Assert(bool condition) { }

	[ConditionalAttribute] // RVA: 0xC24318 Offset: 0xC24318 VA: 0xC24318
	// RVA: 0x1DEC638 Offset: 0x1DEC638 VA: 0x1DEC638
	public static void LogAssertion(string message) { }

	// RVA: 0x1DEBE30 Offset: 0x1DEBE30 VA: 0x1DEBE30
	private static bool IsEnable() { }
}

// Namespace: 
public class DialogManager : MonoBehaviour // TypeDefIndex: 4119
{
	// Fields
	private static DialogManager _instance; // 0x0
	private Dictionary<int, Action<bool>> _delegates; // 0x18

	// Properties
	public static DialogManager Instance { get; }

	// Methods

	// RVA: 0x1DEC63C Offset: 0x1DEC63C VA: 0x1DEC63C
	public void .ctor() { }

	// RVA: 0x1DEC644 Offset: 0x1DEC644 VA: 0x1DEC644
	public static DialogManager get_Instance() { }

	// RVA: 0x1DEC7D0 Offset: 0x1DEC7D0 VA: 0x1DEC7D0
	private void Awake() { }

	// RVA: 0x1DECBD0 Offset: 0x1DECBD0 VA: 0x1DECBD0
	private void OnDestroy() { }

	// RVA: 0x1DECC2C Offset: 0x1DECC2C VA: 0x1DECC2C
	public int ShowSelectDialog(string msg, Action<bool> del) { }

	// RVA: 0x1DECE38 Offset: 0x1DECE38 VA: 0x1DECE38
	public int ShowSelectDialog(string title, string msg, Action<bool> del) { }

	// RVA: 0x1DED094 Offset: 0x1DED094 VA: 0x1DED094
	public int ShowSubmitDialog(string msg, Action<bool> del) { }

	// RVA: 0x1DED2A0 Offset: 0x1DED2A0 VA: 0x1DED2A0
	public int ShowSubmitDialog(string title, string msg, Action<bool> del) { }

	// RVA: 0x1DED4FC Offset: 0x1DED4FC VA: 0x1DED4FC
	public void DissmissDialog(int id) { }

	// RVA: 0x1DEC960 Offset: 0x1DEC960 VA: 0x1DEC960
	public void SetLabel(string decide, string cancel, string close) { }

	// RVA: 0x1DED780 Offset: 0x1DED780 VA: 0x1DED780
	public void OnSubmit(string idStr) { }

	// RVA: 0x1DED888 Offset: 0x1DED888 VA: 0x1DED888
	public void OnCancel(string idStr) { }
}

// Namespace: 
public class FingerDebug : MonoBehaviour // TypeDefIndex: 4120
{
	// Fields
	public GUITexture FingerIcon; // 0x18
	public bool ShowGUI; // 0x20
	public Rect GuiRect; // 0x24
	private GUITexture[] icons; // 0x38
	private float distance; // 0x40

	// Methods

	// RVA: 0x1DF0154 Offset: 0x1DF0154 VA: 0x1DF0154
	public void .ctor() { }

	// RVA: 0x1DF01C8 Offset: 0x1DF01C8 VA: 0x1DF01C8
	private void Start() { }

	// RVA: 0x1DF0428 Offset: 0x1DF0428 VA: 0x1DF0428
	private void Update() { }

	// RVA: 0x1DF0A90 Offset: 0x1DF0A90 VA: 0x1DF0A90
	private void OnGUI() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC1F12C Offset: 0xC1F12C VA: 0xC1F12C
[TooltipAttribute] // RVA: 0xC1F12C Offset: 0xC1F12C VA: 0xC1F12C
public class FingerGesturesDragEvent : FingerGesturesEvents // TypeDefIndex: 4121
{
	// Fields
	[ActionSection] // RVA: 0xC21738 Offset: 0xC21738 VA: 0xC21738
	[TooltipAttribute] // RVA: 0xC21738 Offset: 0xC21738 VA: 0xC21738
	public FsmEvent dragStartedEvent; // 0x90
	[TooltipAttribute] // RVA: 0xC21798 Offset: 0xC21798 VA: 0xC21798
	public FsmEvent dragUpdatedEvent; // 0x98
	[TooltipAttribute] // RVA: 0xC217D0 Offset: 0xC217D0 VA: 0xC217D0
	public FsmEvent dragEndedEvent; // 0xA0
	[UIHintAttribute] // RVA: 0xC21808 Offset: 0xC21808 VA: 0xC21808
	[TooltipAttribute] // RVA: 0xC21808 Offset: 0xC21808 VA: 0xC21808
	public FsmVector2 storeDragDelta; // 0xA8

	// Methods

	// RVA: 0x1DF8C58 Offset: 0x1DF8C58 VA: 0x1DF8C58
	public void .ctor() { }

	// RVA: 0x1DF8C68 Offset: 0x1DF8C68 VA: 0x1DF8C68 Slot: 28
	public override void Reset() { }

	// RVA: 0x1DF8C98 Offset: 0x1DF8C98 VA: 0x1DF8C98 Slot: 63
	protected override bool HandleGestureEvent(Gesture gesture) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC1F18C Offset: 0xC1F18C VA: 0xC1F18C
[TooltipAttribute] // RVA: 0xC1F18C Offset: 0xC1F18C VA: 0xC1F18C
public class FingerGesturesDragObject : FsmStateAction // TypeDefIndex: 4122
{
	// Fields
	[UIHintAttribute] // RVA: 0xC21858 Offset: 0xC21858 VA: 0xC21858
	[TooltipAttribute] // RVA: 0xC21858 Offset: 0xC21858 VA: 0xC21858
	public FsmOwnerDefault objectToDrag; // 0x50
	[UIHintAttribute] // RVA: 0xC218A8 Offset: 0xC218A8 VA: 0xC218A8
	[TooltipAttribute] // RVA: 0xC218A8 Offset: 0xC218A8 VA: 0xC218A8
	public FsmInt fingerIndex; // 0x58
	public FsmBool centerObjectOnFinger; // 0x60

	// Methods

	// RVA: 0x1DF8E10 Offset: 0x1DF8E10 VA: 0x1DF8E10
	public void .ctor() { }

	// RVA: 0x1DF8E18 Offset: 0x1DF8E18 VA: 0x1DF8E18 Slot: 28
	public override void Reset() { }

	// RVA: 0x1DF8E48 Offset: 0x1DF8E48 VA: 0x1DF8E48 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1DF91B4 Offset: 0x1DF91B4 VA: 0x1DF91B4
	private Vector3 ProjectOnCameraPlane(Vector2 screenPos, Vector3 refPos) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC1F1EC Offset: 0xC1F1EC VA: 0xC1F1EC
[TooltipAttribute] // RVA: 0xC1F1EC Offset: 0xC1F1EC VA: 0xC1F1EC
public class FingerGesturesGetFingerInfo : FsmStateAction // TypeDefIndex: 4123
{
	// Fields
	[UIHintAttribute] // RVA: 0xC218F8 Offset: 0xC218F8 VA: 0xC218F8
	[TooltipAttribute] // RVA: 0xC218F8 Offset: 0xC218F8 VA: 0xC218F8
	public FsmInt fingerIndex; // 0x50
	[UIHintAttribute] // RVA: 0xC21948 Offset: 0xC21948 VA: 0xC21948
	public FsmVector2 getPosition; // 0x58
	[UIHintAttribute] // RVA: 0xC2195C Offset: 0xC2195C VA: 0xC2195C
	public FsmFloat getStartTime; // 0x60
	[UIHintAttribute] // RVA: 0xC21970 Offset: 0xC21970 VA: 0xC21970
	public FsmVector2 getStartPosition; // 0x68
	[UIHintAttribute] // RVA: 0xC21984 Offset: 0xC21984 VA: 0xC21984
	public FsmFloat getDistanceFromStart; // 0x70
	[UIHintAttribute] // RVA: 0xC21998 Offset: 0xC21998 VA: 0xC21998
	public FsmVector2 getPreviousPosition; // 0x78
	[UIHintAttribute] // RVA: 0xC219AC Offset: 0xC219AC VA: 0xC219AC
	[TooltipAttribute] // RVA: 0xC219AC Offset: 0xC219AC VA: 0xC219AC
	public FsmVector2 getDeltaPosition; // 0x80
	public bool everyFrame; // 0x88

	// Methods

	// RVA: 0x1DF9A38 Offset: 0x1DF9A38 VA: 0x1DF9A38
	public void .ctor() { }

	// RVA: 0x1DF9A40 Offset: 0x1DF9A40 VA: 0x1DF9A40 Slot: 28
	public override void Reset() { }

	// RVA: 0x1DF9A58 Offset: 0x1DF9A58 VA: 0x1DF9A58 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1DF9C20 Offset: 0x1DF9C20 VA: 0x1DF9C20 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1DF9A94 Offset: 0x1DF9A94 VA: 0x1DF9A94
	private void DoGetFingerInfo() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC1F24C Offset: 0xC1F24C VA: 0xC1F24C
[TooltipAttribute] // RVA: 0xC1F24C Offset: 0xC1F24C VA: 0xC1F24C
public class FingerGesturesHoverEvent : FingerGesturesEvents // TypeDefIndex: 4124
{
	// Fields
	[ActionSection] // RVA: 0xC219FC Offset: 0xC219FC VA: 0xC219FC
	[TooltipAttribute] // RVA: 0xC219FC Offset: 0xC219FC VA: 0xC219FC
	public FsmEvent fingerEnterEvent; // 0x90
	[TooltipAttribute] // RVA: 0xC21A5C Offset: 0xC21A5C VA: 0xC21A5C
	public FsmEvent fingerExitEvent; // 0x98

	// Methods

	// RVA: 0x1DF9C24 Offset: 0x1DF9C24 VA: 0x1DF9C24
	public void .ctor() { }

	// RVA: 0x1DF9C2C Offset: 0x1DF9C2C VA: 0x1DF9C2C Slot: 28
	public override void Reset() { }

	// RVA: 0x1DF9C4C Offset: 0x1DF9C4C VA: 0x1DF9C4C Slot: 62
	protected override bool HandleFingerEvent(FingerEvent e) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC1F2AC Offset: 0xC1F2AC VA: 0xC1F2AC
[TooltipAttribute] // RVA: 0xC1F2AC Offset: 0xC1F2AC VA: 0xC1F2AC
public class FingerGesturesLongPressEvent : FingerGesturesEvents // TypeDefIndex: 4125
{
	// Fields
	[ActionSection] // RVA: 0xC21A94 Offset: 0xC21A94 VA: 0xC21A94
	[TooltipAttribute] // RVA: 0xC21A94 Offset: 0xC21A94 VA: 0xC21A94
	public FsmEvent longPressEvent; // 0x90
	[UIHintAttribute] // RVA: 0xC21AF4 Offset: 0xC21AF4 VA: 0xC21AF4
	[TooltipAttribute] // RVA: 0xC21AF4 Offset: 0xC21AF4 VA: 0xC21AF4
	public FsmFloat storeElapsedTime; // 0x98

	// Methods

	// RVA: 0x1DF9D48 Offset: 0x1DF9D48 VA: 0x1DF9D48
	public void .ctor() { }

	// RVA: 0x1DF9D50 Offset: 0x1DF9D50 VA: 0x1DF9D50 Slot: 28
	public override void Reset() { }

	// RVA: 0x1DF9D70 Offset: 0x1DF9D70 VA: 0x1DF9D70 Slot: 63
	protected override bool HandleGestureEvent(Gesture gesture) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC1F30C Offset: 0xC1F30C VA: 0xC1F30C
[TooltipAttribute] // RVA: 0xC1F30C Offset: 0xC1F30C VA: 0xC1F30C
public class FingerGesturesPinchEvent : FingerGesturesEvents // TypeDefIndex: 4126
{
	// Fields
	[ActionSection] // RVA: 0xC21B44 Offset: 0xC21B44 VA: 0xC21B44
	[TooltipAttribute] // RVA: 0xC21B44 Offset: 0xC21B44 VA: 0xC21B44
	public FsmEvent pinchStartedEvent; // 0x90
	[TooltipAttribute] // RVA: 0xC21BA4 Offset: 0xC21BA4 VA: 0xC21BA4
	public FsmEvent pinchUpdatedEvent; // 0x98
	[TooltipAttribute] // RVA: 0xC21BDC Offset: 0xC21BDC VA: 0xC21BDC
	public FsmEvent pinchEndedEvent; // 0xA0
	[UIHintAttribute] // RVA: 0xC21C14 Offset: 0xC21C14 VA: 0xC21C14
	[TooltipAttribute] // RVA: 0xC21C14 Offset: 0xC21C14 VA: 0xC21C14
	public FsmFloat storeDeltaDistance; // 0xA8
	[UIHintAttribute] // RVA: 0xC21C64 Offset: 0xC21C64 VA: 0xC21C64
	[TooltipAttribute] // RVA: 0xC21C64 Offset: 0xC21C64 VA: 0xC21C64
	public FsmFloat storeTotalDistance; // 0xB0

	// Methods

	// RVA: 0x1DF9E44 Offset: 0x1DF9E44 VA: 0x1DF9E44
	public void .ctor() { }

	// RVA: 0x1DF9E4C Offset: 0x1DF9E4C VA: 0x1DF9E4C Slot: 28
	public override void Reset() { }

	// RVA: 0x1DF9E6C Offset: 0x1DF9E6C VA: 0x1DF9E6C Slot: 63
	protected override bool HandleGestureEvent(Gesture gesture) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC1F36C Offset: 0xC1F36C VA: 0xC1F36C
