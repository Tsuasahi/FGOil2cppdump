	// RVA: 0x19EF970 Offset: 0x19EF970 VA: 0x19EF970
	private EventMargeItemUpValInfo[] GetTotalEventPointInfo(int eventId, PartyListViewItem partyItem) { }

	// RVA: 0x19EFC50 Offset: 0x19EFC50 VA: 0x19EFC50
	public void CreateList(PartyListViewItem partyItem) { }

	// RVA: 0x19F0738 Offset: 0x19F0738 VA: 0x19F0738
	public void DestroyList() { }

	// RVA: 0x19F0760 Offset: 0x19F0760 VA: 0x19F0760
	public PartyOrganizationEventPointListViewItem GetItem(int index) { }

	// RVA: 0x19F0808 Offset: 0x19F0808 VA: 0x19F0808 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x19F0940 Offset: 0x19F0940 VA: 0x19F0940
	public void SetMode(PartyOrganizationEventPointListViewManager.InitMode mode, PartyOrganizationEventPointListViewManager.CallbackFunc callback) { }

	// RVA: 0x19F0B80 Offset: 0x19F0B80 VA: 0x19F0B80
	public void SetMode(PartyOrganizationEventPointListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x19F0948 Offset: 0x19F0948 VA: 0x19F0948
	public void SetMode(PartyOrganizationEventPointListViewManager.InitMode mode) { }

	// RVA: 0x19F0E00 Offset: 0x19F0E00 VA: 0x19F0E00
	protected void RequestListObject(PartyOrganizationEventPointListViewObject.InitMode mode, float delay) { }

	// RVA: 0x19F0B88 Offset: 0x19F0B88 VA: 0x19F0B88
	protected void RequestListObject(PartyOrganizationEventPointListViewObject.InitMode mode) { }

	// RVA: 0x19F108C Offset: 0x19F108C VA: 0x19F108C
	protected void OnMoveEnd() { }
}

// Namespace: 
public enum PartyOrganizationEventPointListViewManager.InitMode // TypeDefIndex: 10456
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationEventPointListViewManager.InitMode NONE = 0;
	public const PartyOrganizationEventPointListViewManager.InitMode VALID = 1;
	public const PartyOrganizationEventPointListViewManager.InitMode INPUT = 2;
	public const PartyOrganizationEventPointListViewManager.InitMode ORGANIZATION_GUIDE_FIRST_SELECT = 3;
}

// Namespace: 
public enum PartyOrganizationEventPointListViewManager.ResultKind // TypeDefIndex: 10457
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationEventPointListViewManager.ResultKind NONE = 0;
	public const PartyOrganizationEventPointListViewManager.ResultKind CANCEL = 1;
	public const PartyOrganizationEventPointListViewManager.ResultKind DECIDE = 2;
}

// Namespace: 
public sealed class PartyOrganizationEventPointListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 10458
{
	// Methods

	// RVA: 0x19F1158 Offset: 0x19F1158 VA: 0x19F1158
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x19F1168 Offset: 0x19F1168 VA: 0x19F1168 Slot: 11
	public virtual void Invoke(PartyOrganizationEventPointListViewManager.ResultKind kind, int result) { }

	// RVA: 0x19F13AC Offset: 0x19F13AC VA: 0x19F13AC Slot: 12
	public virtual IAsyncResult BeginInvoke(PartyOrganizationEventPointListViewManager.ResultKind kind, int result, AsyncCallback callback, object object) { }

	// RVA: 0x19F1454 Offset: 0x19F1454 VA: 0x19F1454 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class PartyOrganizationEventPointListViewObject : ListViewObject // TypeDefIndex: 10459
{
	// Fields
	protected PartyOrganizationEventPointListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC74280 Offset: 0xC74280 VA: 0xC74280
	[DebuggerBrowsableAttribute] // RVA: 0xC74280 Offset: 0xC74280 VA: 0xC74280
	private Action callbackFunc; // 0x70
	protected PartyOrganizationEventPointListViewItemDraw itemDraw; // 0x78
	protected PartyOrganizationEventPointListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x19F1460 Offset: 0x19F1460 VA: 0x19F1460
	public void .ctor() { }

	// RVA: 0x19F14C8 Offset: 0x19F14C8 VA: 0x19F14C8
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x19F15B4 Offset: 0x19F15B4 VA: 0x19F15B4
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x19F16A0 Offset: 0x19F16A0 VA: 0x19F16A0
	protected void Awake() { }

	// RVA: 0x19F1714 Offset: 0x19F1714 VA: 0x19F1714
	private void OnDestroy() { }

	// RVA: 0x19EF57C Offset: 0x19EF57C VA: 0x19EF57C
	public PartyOrganizationEventPointListViewItem GetItem() { }

	// RVA: 0x19F17C0 Offset: 0x19F17C0 VA: 0x19F17C0 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x19F17F0 Offset: 0x19F17F0 VA: 0x19F17F0 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x19F17E8 Offset: 0x19F17E8 VA: 0x19F17E8
	protected void InitItem() { }

	// RVA: 0x19F1818 Offset: 0x19F1818 VA: 0x19F1818 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x19F18C8 Offset: 0x19F18C8 VA: 0x19F18C8 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x19F1950 Offset: 0x19F1950 VA: 0x19F1950
	public void Init(PartyOrganizationEventPointListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x19F1008 Offset: 0x19F1008 VA: 0x19F1008
	public void Init(PartyOrganizationEventPointListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x19F0D7C Offset: 0x19F0D7C VA: 0x19F0D7C
	public void Init(PartyOrganizationEventPointListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x19F08C0 Offset: 0x19F08C0 VA: 0x19F08C0
	public void Init(PartyOrganizationEventPointListViewObject.InitMode initMode) { }

	// RVA: 0x19F1B58 Offset: 0x19F1B58 VA: 0x19F1B58
	protected void SetupDisp() { }

	// RVA: 0x19F1C68 Offset: 0x19F1C68 VA: 0x19F1C68
	protected void EventMoveEnd() { }
}

// Namespace: 
public enum PartyOrganizationEventPointListViewObject.InitMode // TypeDefIndex: 10460
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationEventPointListViewObject.InitMode INVISIBLE = 0;
	public const PartyOrganizationEventPointListViewObject.InitMode INVALID = 1;
	public const PartyOrganizationEventPointListViewObject.InitMode VALID = 2;
	public const PartyOrganizationEventPointListViewObject.InitMode INPUT = 3;
	public const PartyOrganizationEventPointListViewObject.InitMode MODIFY = 4;
	public const PartyOrganizationEventPointListViewObject.InitMode TUTORIAL_INPUT = 5;
}

// Namespace: 
protected enum PartyOrganizationEventPointListViewObject.State // TypeDefIndex: 10461
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationEventPointListViewObject.State INIT = 0;
	public const PartyOrganizationEventPointListViewObject.State IDLE = 1;
	public const PartyOrganizationEventPointListViewObject.State MOVE = 2;
	public const PartyOrganizationEventPointListViewObject.State INPUT = 3;
	public const PartyOrganizationEventPointListViewObject.State TUTORIAL_INPUT = 4;
}

// Namespace: 
public class PartyOrganizationEventPointMenu : BaseDialog // TypeDefIndex: 10462
{
	// Fields
	[SerializeField] // RVA: 0xC742BC Offset: 0xC742BC VA: 0xC742BC
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC742CC Offset: 0xC742CC VA: 0xC742CC
	protected UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC742DC Offset: 0xC742DC VA: 0xC742DC
	protected PartyOrganizationEventPointListViewManager eventPointListViewManager; // 0x68
	[SerializeField] // RVA: 0xC742EC Offset: 0xC742EC VA: 0xC742EC
	protected UILabel closeLabel; // 0x70
	[SerializeField] // RVA: 0xC742FC Offset: 0xC742FC VA: 0xC742FC
	protected UICommonButton closeButton; // 0x78
	protected PartyOrganizationEventPointMenu.State state; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC7430C Offset: 0xC7430C VA: 0xC7430C
	[DebuggerBrowsableAttribute] // RVA: 0xC7430C Offset: 0xC7430C VA: 0xC7430C
	private PartyOrganizationEventPointMenu.CallbackFunc callbackFunc; // 0x88
	protected Action closeCallbackFunc; // 0x90

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x19F1C90 Offset: 0x19F1C90 VA: 0x19F1C90
	public void .ctor() { }

	// RVA: 0x19F1CF8 Offset: 0x19F1CF8 VA: 0x19F1CF8
	protected void add_callbackFunc(PartyOrganizationEventPointMenu.CallbackFunc value) { }

	// RVA: 0x19F1DE4 Offset: 0x19F1DE4 VA: 0x19F1DE4
	protected void remove_callbackFunc(PartyOrganizationEventPointMenu.CallbackFunc value) { }

	// RVA: 0x19F1ED0 Offset: 0x19F1ED0 VA: 0x19F1ED0
	public void Init() { }

	// RVA: 0x19F1FE8 Offset: 0x19F1FE8 VA: 0x19F1FE8
	public void Open(EventUpValSetupInfo setupInfo, PartyListViewItem partyItem, PartyOrganizationEventPointMenu.CallbackFunc callback) { }

	// RVA: 0x19F216C Offset: 0x19F216C VA: 0x19F216C
	protected void EndOpen() { }

	// RVA: 0x19F2178 Offset: 0x19F2178 VA: 0x19F2178
	public void Close() { }

	// RVA: 0x19F2180 Offset: 0x19F2180 VA: 0x19F2180
	public void Close(Action callback) { }

	// RVA: 0x19F2210 Offset: 0x19F2210 VA: 0x19F2210
	protected void EndClose() { }

	// RVA: 0x19F224C Offset: 0x19F224C VA: 0x19F224C
	protected void Callback(bool result) { }

	// RVA: 0x19F2498 Offset: 0x19F2498 VA: 0x19F2498
	public void OnClickCancel() { }

	// RVA: 0x19F2538 Offset: 0x19F2538 VA: 0x19F2538 Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
protected enum PartyOrganizationEventPointMenu.State // TypeDefIndex: 10463
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationEventPointMenu.State INIT = 0;
	public const PartyOrganizationEventPointMenu.State OPEN = 1;
	public const PartyOrganizationEventPointMenu.State INPUT = 2;
	public const PartyOrganizationEventPointMenu.State SELECTED = 3;
	public const PartyOrganizationEventPointMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class PartyOrganizationEventPointMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10464
{
	// Methods

	// RVA: 0x19F2580 Offset: 0x19F2580 VA: 0x19F2580
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x19F226C Offset: 0x19F226C VA: 0x19F226C Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x19F2590 Offset: 0x19F2590 VA: 0x19F2590 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x19F2620 Offset: 0x19F2620 VA: 0x19F2620 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class PartyOrganizationListViewDropObject : ListViewDropObject // TypeDefIndex: 10465
{
	// Fields
	protected static float ACTION_TIME; // 0x0
	[SerializeField] // RVA: 0xC74348 Offset: 0xC74348 VA: 0xC74348
	protected UIDragDropListViewItem equipUIDragDrop; // 0x70
	[SerializeField] // RVA: 0xC74358 Offset: 0xC74358 VA: 0xC74358
	protected GameObject equipDispBase; // 0x78
	protected PartyOrganizationListViewDropObject.State state; // 0x80
	protected Action callbackFunc; // 0x88
	protected PartyOrganizationListViewItemDraw itemDraw; // 0x90
	protected PartyOrganizationListViewItemDraw.DispMode dispMode; // 0x98
	protected GameObject dragObject; // 0xA0
	private bool isEquipPress; // 0xA8

	// Methods

	// RVA: 0x19F262C Offset: 0x19F262C VA: 0x19F262C
	public void .ctor() { }

	// RVA: 0x19F2634 Offset: 0x19F2634 VA: 0x19F2634
	protected void Awake() { }

	// RVA: 0x19F26A4 Offset: 0x19F26A4 VA: 0x19F26A4
	private void OnDestroy() { }

	// RVA: 0x19F2750 Offset: 0x19F2750 VA: 0x19F2750
	public PartyOrganizationListViewItem GetItem() { }

	// RVA: 0x19F27D4 Offset: 0x19F27D4 VA: 0x19F27D4
	public void ReleaseItem() { }

	// RVA: 0x19F2884 Offset: 0x19F2884 VA: 0x19F2884 Slot: 4
	public override bool ClearItem() { }

	// RVA: 0x19F2938 Offset: 0x19F2938 VA: 0x19F2938 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x19F29F4 Offset: 0x19F29F4 VA: 0x19F29F4
	public void SetVisible(bool isVisible) { }

	// RVA: 0x19F2AB4 Offset: 0x19F2AB4 VA: 0x19F2AB4 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x19F2B74 Offset: 0x19F2B74 VA: 0x19F2B74 Slot: 7
	public override bool IsCanDrag() { }

	// RVA: 0x19F2CF0 Offset: 0x19F2CF0 VA: 0x19F2CF0 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x19F2ED4 Offset: 0x19F2ED4 VA: 0x19F2ED4
	public GameObject CreateDragObject(int addDepth) { }

	// RVA: 0x19F2FC0 Offset: 0x19F2FC0 VA: 0x19F2FC0
	public void Init(PartyOrganizationListViewDropObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position, bool isEquipSwap = False) { }

	// RVA: 0x19F3854 Offset: 0x19F3854 VA: 0x19F3854
	public void Init(PartyOrganizationListViewDropObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x19F3904 Offset: 0x19F3904 VA: 0x19F3904
	public void Init(PartyOrganizationListViewDropObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x19F2DA0 Offset: 0x19F2DA0 VA: 0x19F2DA0
	public void Init(PartyOrganizationListViewDropObject.InitMode initMode) { }

	// RVA: 0x19F32F8 Offset: 0x19F32F8 VA: 0x19F32F8
	protected void SetupDisp() { }

	// RVA: 0x19F3414 Offset: 0x19F3414 VA: 0x19F3414
	private void IntoStart(float delay) { }

	// RVA: 0x19F39A8 Offset: 0x19F39A8 VA: 0x19F39A8
	private void IntoMove() { }

	// RVA: 0x19F3B1C Offset: 0x19F3B1C VA: 0x19F3B1C
	private void IntoMove2() { }

	// RVA: 0x19F353C Offset: 0x19F353C VA: 0x19F353C
	protected void DragMoveStart(Vector3 position, bool isEquipSwap = False) { }

	// RVA: 0x19F37A8 Offset: 0x19F37A8 VA: 0x19F37A8
	protected void DragDelete() { }

	// RVA: 0x19F3BE0 Offset: 0x19F3BE0 VA: 0x19F3BE0
	protected void MoveEnd() { }

	// RVA: 0x19F3C08 Offset: 0x19F3C08 VA: 0x19F3C08
	public void OnClickListDrop() { }

	// RVA: 0x19F3C90 Offset: 0x19F3C90 VA: 0x19F3C90
	public void OnLongPressItem() { }

	// RVA: 0x19F3D18 Offset: 0x19F3D18 VA: 0x19F3D18
	public void OnClickItemEquip() { }

	// RVA: 0x19F3DA0 Offset: 0x19F3DA0 VA: 0x19F3DA0
	public void OnLongPressItemEquip() { }

	// RVA: 0x19F3E28 Offset: 0x19F3E28 VA: 0x19F3E28
	public void OnPressItem() { }

	// RVA: 0x19F3E44 Offset: 0x19F3E44 VA: 0x19F3E44
	public void OnPressItemEquip() { }

	// RVA: 0x19F3EFC Offset: 0x19F3EFC VA: 0x19F3EFC
	public void SetEquipDisp(bool flg) { }

	// RVA: 0x19F2E40 Offset: 0x19F2E40 VA: 0x19F2E40
	public void SetDispEquipOnly(bool flg) { }

	// RVA: 0x19F4028 Offset: 0x19F4028 VA: 0x19F4028
	public void SetDispSwapGuide(bool isDisp) { }

	// RVA: 0x19F4060 Offset: 0x19F4060 VA: 0x19F4060
	public bool IsEquipPress() { }

	// RVA: 0x19F4068 Offset: 0x19F4068 VA: 0x19F4068
	private static void .cctor() { }
}

// Namespace: 
public enum PartyOrganizationListViewDropObject.InitMode // TypeDefIndex: 10466
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationListViewDropObject.InitMode INVISIBLE = 0;
	public const PartyOrganizationListViewDropObject.InitMode INVALID = 1;
	public const PartyOrganizationListViewDropObject.InitMode VALID = 2;
	public const PartyOrganizationListViewDropObject.InitMode INTO = 3;
	public const PartyOrganizationListViewDropObject.InitMode INPUT = 4;
	public const PartyOrganizationListViewDropObject.InitMode DRAG_INVISIBLE = 5;
	public const PartyOrganizationListViewDropObject.InitMode DRAG_MOVE = 6;
	public const PartyOrganizationListViewDropObject.InitMode DRAG_DELETE = 7;
	public const PartyOrganizationListViewDropObject.InitMode DRAG_INPUT = 8;
	public const PartyOrganizationListViewDropObject.InitMode DRAG_VALID = 9;
	public const PartyOrganizationListViewDropObject.InitMode MODIFY = 10;
}

// Namespace: 
protected enum PartyOrganizationListViewDropObject.State // TypeDefIndex: 10467
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationListViewDropObject.State INIT = 0;
	public const PartyOrganizationListViewDropObject.State IDLE = 1;
	public const PartyOrganizationListViewDropObject.State MOVE = 2;
	public const PartyOrganizationListViewDropObject.State INPUT = 3;
}

// Namespace: 
public class PartyOrganizationListViewItem : ListViewItem // TypeDefIndex: 10468
{
	// Fields
	protected UserServantEntity userServantEntity; // 0x70
	protected FollowerInfo followerInfo; // 0x78
	protected bool isFollower; // 0x80
	protected bool isFixNpc; // 0x81
	protected int followerClassId; // 0x84
	protected int followerIndex; // 0x88
	protected long[] equipIdList; // 0x90
	protected EventUpValSetupInfo setupInfo; // 0x98
	protected QuestRestrictionInfo questRestrictionInfo; // 0xA0
	protected ServantEntity servantEntity; // 0xA8
	protected int classId; // 0xB0
	protected int rarityId; // 0xB4
	protected int frameType; // 0xB8
	protected int svtLimitCount; // 0xBC
	protected int[] commandCodeIdList; // 0xC0
	protected bool isQuestRestriction; // 0xC8
	protected bool isUniqueSvtRestriction; // 0xC9
	protected bool isFixedSupportPositionRestriction; // 0xCA
	protected bool isFixedMyServantPositionRestriction; // 0xCB
	protected bool isFixedMyServantPositionAgreement; // 0xCC
	protected bool isConvertOverwriteImage; // 0xCD
	protected bool isServantNumRestriction; // 0xCE
	protected bool isFixMultipleNpcRestriction; // 0xCF
	protected bool isFixMultipleNpc; // 0xD0
	protected long npcFollowerSvtId; // 0xD8
	protected bool isMyServantOrNpcRestriction; // 0xE0
	protected bool haveIndividualityServant; // 0xE1
	protected long fatigureTime; // 0xE8
	protected bool isFatigureRecover; // 0xF0
	protected UserServantEntity equipUserServantEntity; // 0xF8
	protected ServantEntity equipServantEntity; // 0x100
	protected bool isEventUpVal; // 0x108
	protected EventUpValInfo eventUpValInfo; // 0x110
	protected EventMargeItemUpValInfo[] eventUpValItemList; // 0x118
	protected EventCampaignEntity[] friendPointCampaignEntityList; // 0x120
	private int nameLimitCount; // 0x128
	[CompilerGeneratedAttribute] // RVA: 0xC74368 Offset: 0xC74368 VA: 0xC74368
	[DebuggerBrowsableAttribute] // RVA: 0xC74368 Offset: 0xC74368 VA: 0xC74368
	private bool <IsDispSvtPoint>k__BackingField; // 0x12C
	[CompilerGeneratedAttribute] // RVA: 0xC743A4 Offset: 0xC743A4 VA: 0xC743A4
	[DebuggerBrowsableAttribute] // RVA: 0xC743A4 Offset: 0xC743A4 VA: 0xC743A4
	private int <SvtPoint>k__BackingField; // 0x130
	[CompilerGeneratedAttribute] // RVA: 0xC743E0 Offset: 0xC743E0 VA: 0xC743E0
	[DebuggerBrowsableAttribute] // RVA: 0xC743E0 Offset: 0xC743E0 VA: 0xC743E0
	private int <SvtPointRank>k__BackingField; // 0x134
	[CompilerGeneratedAttribute] // RVA: 0xC7441C Offset: 0xC7441C VA: 0xC7441C
	[DebuggerBrowsableAttribute] // RVA: 0xC7441C Offset: 0xC7441C VA: 0xC7441C
	private int <CanGetBuddyPoint>k__BackingField; // 0x138
	[CompilerGeneratedAttribute] // RVA: 0xC74458 Offset: 0xC74458 VA: 0xC74458
	[DebuggerBrowsableAttribute] // RVA: 0xC74458 Offset: 0xC74458 VA: 0xC74458
	private bool <IsDispCanGetBuddyPoint>k__BackingField; // 0x13C
	private int warBoardPieceIndex; // 0x140

	// Properties
	public bool IsDispSvtPoint { get; set; }
	public int SvtPoint { get; set; }
	public int SvtPointRank { get; set; }
	public int CanGetBuddyPoint { get; set; }
	public bool IsDispCanGetBuddyPoint { get; set; }
	public int WarBoardPieceIndex { get; set; }
	private FollowerInfo.ReturnSupportServantType DisplayServantType { get; }
	public bool IsFollower { get; }
	public bool IsFixNpc { get; }
	public bool IsEmpty { get; }
	public bool IsEventJoin { get; }
	public bool IsLeave { get; }
	public UserServantEntity UserServant { get; }
	public FollowerInfo FollowerData { get; }
	public ServantLeaderInfo ServantLeader { get; }
	public EquipTargetInfo EquipTarget1 { get; }
	public ServantEntity Servant { get; }
	public ObscuredInt SvtId { get; }
	public string ServantName { get; }
	public string SvtNameText { get; }
	public int Level { get; }
	public int MaxLevel { get; }
	public int ClassId { get; }
	public int RarityId { get; }
	public int ExceedCount { get; }
	public int FrameType { get; }
	public int SvtLimitCount { get; }
	public int AdjustAtk { get; }
	public int AdjustHp { get; }
	public int MargeAtk { get; }
	public int MargeHp { get; }
	public int MargeCost { get; }
	public int MainCost { get; }
	public int EquipCost { get; }
	public long EquipUserSvtId { get; }
	public ObscuredInt EquipSvtId { get; }
	public int EquipLimitCount { get; }
	public int EquipLimitCountMax { get; }
	public string EquipName { get; }
	public bool IsEventUpVal { get; }
	public EventMargeItemUpValInfo[] EventUpValItemList { get; }
	public QuestRestrictionInfo QuestRestriction { get; }
	public bool IsSupportOnly { get; }
	public bool IsQuestRestriction { get; }
	public bool IsUniqueSvtRestriction { get; }
	public bool IsFixedSupportPositionRestriction { get; }
	public bool IsFixedMyServantPositionRestriction { get; }
	public bool IsFixedMyServantPositionAgreement { get; }
	public bool IsFixedMyServantSingle { get; }
	public bool IsServantNumRestriction { get; }
	public bool IsFixMultipleNpcRestriction { get; }
	public bool IsFixMultipleNpc { get; }
	public bool IsNpcEditablePos { get; }
	public bool IsRestriction { get; }
	public long FatigureTime { get; }
	public bool IsFatigureRecover { get; }
	public bool IsConvertOverwriteImage { get; }
	public string CostumeName { get; }
	public bool IsMyServantOrNpcRestriction { get; }
	public bool HaveIndividualityServant { get; }

	// Methods

	// RVA: 0x19F40C0 Offset: 0x19F40C0 VA: 0x19F40C0
	protected void .ctor(int index) { }

	// RVA: 0x19F40D4 Offset: 0x19F40D4 VA: 0x19F40D4
	public void .ctor(int index, UserServantEntity userServantEntity, long[] equipIdList, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, EventCampaignEntity[] friendPointCampaignEntityList) { }

	// RVA: 0x19EDA24 Offset: 0x19EDA24 VA: 0x19EDA24
	public void .ctor(int index, FollowerInfo follower, int followerClassId, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, EventCampaignEntity[] friendPointCampaignEntityList, bool isFixNpc = False, int followerDeckId = 0) { }

	// RVA: 0x19F57F4 Offset: 0x19F57F4 VA: 0x19F57F4
	public void .ctor(int index, bool isFollower, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, bool isMyServant = True) { }

	// RVA: 0x19EC960 Offset: 0x19EC960 VA: 0x19EC960
	public void .ctor(int index, int svtId, int limitCount, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0DE0 Offset: 0xCD0DE0 VA: 0xCD0DE0
	// RVA: 0x19F5B4C Offset: 0x19F5B4C VA: 0x19F5B4C
	public bool get_IsDispSvtPoint() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0DF0 Offset: 0xCD0DF0 VA: 0xCD0DF0
	// RVA: 0x19F4858 Offset: 0x19F4858 VA: 0x19F4858
	private void set_IsDispSvtPoint(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0E00 Offset: 0xCD0E00 VA: 0xCD0E00
	// RVA: 0x19F4874 Offset: 0x19F4874 VA: 0x19F4874
	public int get_SvtPoint() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0E10 Offset: 0xCD0E10 VA: 0xCD0E10
	// RVA: 0x19F4864 Offset: 0x19F4864 VA: 0x19F4864
	private void set_SvtPoint(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0E20 Offset: 0xCD0E20 VA: 0xCD0E20
	// RVA: 0x19F5B54 Offset: 0x19F5B54 VA: 0x19F5B54
	public int get_SvtPointRank() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0E30 Offset: 0xCD0E30 VA: 0xCD0E30
	// RVA: 0x19F486C Offset: 0x19F486C VA: 0x19F486C
	private void set_SvtPointRank(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0E40 Offset: 0xCD0E40 VA: 0xCD0E40
	// RVA: 0x19F5B5C Offset: 0x19F5B5C VA: 0x19F5B5C
	public int get_CanGetBuddyPoint() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0E50 Offset: 0xCD0E50 VA: 0xCD0E50
	// RVA: 0x19F5B64 Offset: 0x19F5B64 VA: 0x19F5B64
	private void set_CanGetBuddyPoint(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0E60 Offset: 0xCD0E60 VA: 0xCD0E60
	// RVA: 0x19F5B6C Offset: 0x19F5B6C VA: 0x19F5B6C
	public bool get_IsDispCanGetBuddyPoint() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0E70 Offset: 0xCD0E70 VA: 0xCD0E70
	// RVA: 0x19F5B74 Offset: 0x19F5B74 VA: 0x19F5B74
	private void set_IsDispCanGetBuddyPoint(bool value) { }

	// RVA: 0x19F5B80 Offset: 0x19F5B80 VA: 0x19F5B80
	public int get_WarBoardPieceIndex() { }

	// RVA: 0x19F5B88 Offset: 0x19F5B88 VA: 0x19F5B88
	public void set_WarBoardPieceIndex(int value) { }

	// RVA: 0x19F57D8 Offset: 0x19F57D8 VA: 0x19F57D8
	private FollowerInfo.ReturnSupportServantType get_DisplayServantType() { }

	// RVA: 0x19F5B90 Offset: 0x19F5B90 VA: 0x19F5B90
	public PartyOrganizationListViewItem Clone() { }

	// RVA: 0x19F601C Offset: 0x19F601C VA: 0x19F601C
	public EventCampaignEntity[] GetFriendPointCampaignEntityList() { }

	// RVA: 0x19F4ABC Offset: 0x19F4ABC VA: 0x19F4ABC
	protected void SetEquipStatus(long[] equipIdList) { }

	// RVA: 0x19F487C Offset: 0x19F487C VA: 0x19F487C
	private void SetCanGetBuddyPoint(int eventId) { }

	// RVA: 0x19F5C24 Offset: 0x19F5C24 VA: 0x19F5C24
	public void Set(PartyOrganizationListViewItem item) { }

	// RVA: 0x19F6068 Offset: 0x19F6068 VA: 0x19F6068
	public void Set(PartyServantListViewItem item) { }

	// RVA: 0x19E2D18 Offset: 0x19E2D18 VA: 0x19E2D18
	public void Modify() { }

	// RVA: 0x19F62F8 Offset: 0x19F62F8 VA: 0x19F62F8
	public void Modify(PartyServantListViewItem item) { }

	// RVA: 0x19F6654 Offset: 0x19F6654 VA: 0x19F6654
	public void Swap(PartyOrganizationListViewItem item) { }

	// RVA: 0x19F6E00 Offset: 0x19F6E00 VA: 0x19F6E00
	public void SwapEquip(PartyOrganizationListViewItem item) { }

	// RVA: 0x19F6E68 Offset: 0x19F6E68 VA: 0x19F6E68
	public void Empty() { }

	// RVA: 0x19F6EA0 Offset: 0x19F6EA0 VA: 0x19F6EA0
	public int ClearEquip() { }

	// RVA: 0x19F6F44 Offset: 0x19F6F44 VA: 0x19F6F44
	public void ClearFollower() { }

	// RVA: 0x19F6F4C Offset: 0x19F6F4C VA: 0x19F6F4C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x19F6F54 Offset: 0x19F6F54 VA: 0x19F6F54
	public void CheckRestriction(PartyListViewItem partyItem, int num) { }

	// RVA: 0x19F7220 Offset: 0x19F7220 VA: 0x19F7220
	public bool CompMember(PartyOrganizationListViewItem item) { }

	// RVA: 0x19EA7F8 Offset: 0x19EA7F8 VA: 0x19EA7F8
	public long[] GetEquipList() { }

	// RVA: 0x19F73A0 Offset: 0x19F73A0 VA: 0x19F73A0
	public void SetEquipUserServantId(long userSvtId) { }

	// RVA: 0x19F7404 Offset: 0x19F7404 VA: 0x19F7404
	public int RemoveEquipUserServantId(long userSvtId) { }

	// RVA: 0x19E1D4C Offset: 0x19E1D4C VA: 0x19E1D4C
	public bool get_IsFollower() { }

	// RVA: 0x19F74B0 Offset: 0x19F74B0 VA: 0x19F74B0
	public bool get_IsFixNpc() { }

	// RVA: 0x19F74B8 Offset: 0x19F74B8 VA: 0x19F74B8
	public bool get_IsEmpty() { }

	// RVA: 0x19F74D8 Offset: 0x19F74D8 VA: 0x19F74D8
	public bool get_IsEventJoin() { }

	// RVA: 0x19EAA04 Offset: 0x19EAA04 VA: 0x19EAA04
	public bool get_IsLeave() { }

	// RVA: 0x19DF850 Offset: 0x19DF850 VA: 0x19DF850
	public UserServantEntity get_UserServant() { }

	// RVA: 0x19DF858 Offset: 0x19DF858 VA: 0x19DF858
	public FollowerInfo get_FollowerData() { }

	// RVA: 0x19DF860 Offset: 0x19DF860 VA: 0x19DF860
	public ServantLeaderInfo get_ServantLeader() { }

	// RVA: 0x19E0094 Offset: 0x19E0094 VA: 0x19E0094
	public EquipTargetInfo get_EquipTarget1() { }

	// RVA: 0x19EA90C Offset: 0x19EA90C VA: 0x19EA90C
	public ServantEntity get_Servant() { }

	// RVA: 0x19EA914 Offset: 0x19EA914 VA: 0x19EA914
	public ObscuredInt get_SvtId() { }

	// RVA: 0x19F74EC Offset: 0x19F74EC VA: 0x19F74EC
	public string get_ServantName() { }

	// RVA: 0x19E6A88 Offset: 0x19E6A88 VA: 0x19E6A88
	public string get_SvtNameText() { }

	// RVA: 0x19EA994 Offset: 0x19EA994 VA: 0x19EA994
	public int get_Level() { }

	// RVA: 0x19F7614 Offset: 0x19F7614 VA: 0x19F7614
	public int get_MaxLevel() { }

	// RVA: 0x19F7690 Offset: 0x19F7690 VA: 0x19F7690
	public int get_ClassId() { }

	// RVA: 0x19F7698 Offset: 0x19F7698 VA: 0x19F7698
	public int get_RarityId() { }

	// RVA: 0x19F76A0 Offset: 0x19F76A0 VA: 0x19F76A0
	public int get_ExceedCount() { }

	// RVA: 0x19F7710 Offset: 0x19F7710 VA: 0x19F7710
	public int get_FrameType() { }

	// RVA: 0x19EA98C Offset: 0x19EA98C VA: 0x19EA98C
	public int get_SvtLimitCount() { }

	// RVA: 0x19F7718 Offset: 0x19F7718 VA: 0x19F7718
	public int get_AdjustAtk() { }

	// RVA: 0x19F7788 Offset: 0x19F7788 VA: 0x19F7788
	public int get_AdjustHp() { }

	// RVA: 0x19F77F8 Offset: 0x19F77F8 VA: 0x19F77F8
	public int get_MargeAtk() { }

	// RVA: 0x19F78D8 Offset: 0x19F78D8 VA: 0x19F78D8
	public int get_MargeHp() { }

	// RVA: 0x19F79B8 Offset: 0x19F79B8 VA: 0x19F79B8
	public int get_MargeCost() { }

	// RVA: 0x19F79E8 Offset: 0x19F79E8 VA: 0x19F79E8
	public int get_MainCost() { }

	// RVA: 0x19F7A08 Offset: 0x19F7A08 VA: 0x19F7A08
	public int get_EquipCost() { }

	// RVA: 0x19DFF44 Offset: 0x19DFF44 VA: 0x19DFF44
	public long get_EquipUserSvtId() { }

	// RVA: 0x19E001C Offset: 0x19E001C VA: 0x19E001C
	public ObscuredInt get_EquipSvtId() { }

	// RVA: 0x19F7A30 Offset: 0x19F7A30 VA: 0x19F7A30
	public int get_EquipLimitCount() { }

	// RVA: 0x19F7AFC Offset: 0x19F7AFC VA: 0x19F7AFC
	public int get_EquipLimitCountMax() { }

	// RVA: 0x19F7B14 Offset: 0x19F7B14 VA: 0x19F7B14
	public string get_EquipName() { }

	// RVA: 0x19F7BA0 Offset: 0x19F7BA0 VA: 0x19F7BA0
	public int GetFriendPointUpVal() { }

	// RVA: 0x19F7C24 Offset: 0x19F7C24 VA: 0x19F7C24
	public bool get_IsEventUpVal() { }

	// RVA: 0x19F7C2C Offset: 0x19F7C2C VA: 0x19F7C2C
	public EventMargeItemUpValInfo[] get_EventUpValItemList() { }

	// RVA: 0x19F7C34 Offset: 0x19F7C34 VA: 0x19F7C34
	public bool GetEventUpVal(out EventUpValInfo eventUpValInfo) { }

	// RVA: 0x19EA904 Offset: 0x19EA904 VA: 0x19EA904
	public QuestRestrictionInfo get_QuestRestriction() { }

	// RVA: 0x19F6024 Offset: 0x19F6024 VA: 0x19F6024
	public bool get_IsSupportOnly() { }

	// RVA: 0x19EAD58 Offset: 0x19EAD58 VA: 0x19EAD58
	public bool get_IsQuestRestriction() { }

	// RVA: 0x19EADC4 Offset: 0x19EADC4 VA: 0x19EADC4
	public bool get_IsUniqueSvtRestriction() { }

	// RVA: 0x19EB0EC Offset: 0x19EB0EC VA: 0x19EB0EC
	public bool get_IsFixedSupportPositionRestriction() { }

	// RVA: 0x19EB0F4 Offset: 0x19EB0F4 VA: 0x19EB0F4
	public bool get_IsFixedMyServantPositionRestriction() { }

	// RVA: 0x19F7C44 Offset: 0x19F7C44 VA: 0x19F7C44
	public bool get_IsFixedMyServantPositionAgreement() { }

	// RVA: 0x19F6044 Offset: 0x19F6044 VA: 0x19F6044
	public bool get_IsFixedMyServantSingle() { }

	// RVA: 0x19E2F08 Offset: 0x19E2F08 VA: 0x19E2F08
	public bool get_IsServantNumRestriction() { }

	// RVA: 0x19F2CCC Offset: 0x19F2CCC VA: 0x19F2CCC
	public bool get_IsFixMultipleNpcRestriction() { }

	// RVA: 0x19F2CD4 Offset: 0x19F2CD4 VA: 0x19F2CD4
	public bool get_IsFixMultipleNpc() { }

	// RVA: 0x19F2CDC Offset: 0x19F2CDC VA: 0x19F2CDC
	public bool get_IsNpcEditablePos() { }

	// RVA: 0x19F7C4C Offset: 0x19F7C4C VA: 0x19F7C4C
	public bool get_IsRestriction() { }

	// RVA: 0x19F7C7C Offset: 0x19F7C7C VA: 0x19F7C7C
	private bool IsEmptyConfigurable() { }

	// RVA: 0x19F7C8C Offset: 0x19F7C8C VA: 0x19F7C8C
	public string GetQuestRestrictionMessage() { }

	// RVA: 0x19F7EC4 Offset: 0x19F7EC4 VA: 0x19F7EC4
	public string GetUniqueSvtRestrictionMessage() { }

	// RVA: 0x19F7F48 Offset: 0x19F7F48 VA: 0x19F7F48
	public string GetFixedSupportPositionRestrictionMessage() { }

	// RVA: 0x19F7FCC Offset: 0x19F7FCC VA: 0x19F7FCC
	public string GetFixedMyServantPositionRestrictionMessage() { }

	// RVA: 0x19EB0FC Offset: 0x19EB0FC VA: 0x19EB0FC
	public long get_FatigureTime() { }

	// RVA: 0x19F8050 Offset: 0x19F8050 VA: 0x19F8050
	public bool get_IsFatigureRecover() { }

	// RVA: 0x19EB104 Offset: 0x19EB104 VA: 0x19EB104
	public void ClearFatigure() { }

	// RVA: 0x19EA6AC Offset: 0x19EA6AC VA: 0x19EA6AC
	public int[] GetCommandCardList() { }

	// RVA: 0x19F8058 Offset: 0x19F8058 VA: 0x19F8058
	public int[] GetCommandCodeIdList() { }

	// RVA: 0x19F8060 Offset: 0x19F8060 VA: 0x19F8060
	public string GetAssetName() { }

	// RVA: 0x19F81E0 Offset: 0x19F81E0 VA: 0x19F81E0
	public int GetCorrectionIconId() { }

	// RVA: 0x19F8294 Offset: 0x19F8294 VA: 0x19F8294
	public bool get_IsConvertOverwriteImage() { }

	// RVA: 0x19F829C Offset: 0x19F829C VA: 0x19F829C
	public int GetCardImageLimitCount() { }

	// RVA: 0x19F8348 Offset: 0x19F8348 VA: 0x19F8348
	public int GetDispImageLimitCount() { }

	// RVA: 0x19F83F4 Offset: 0x19F83F4 VA: 0x19F83F4
	public int GetCommandCardLimitCount() { }

	// RVA: 0x19F84A0 Offset: 0x19F84A0 VA: 0x19F84A0
	public int GetIconLimitCount() { }

	// RVA: 0x19F854C Offset: 0x19F854C VA: 0x19F854C
	public int GetPortraitLimitCount() { }

	// RVA: 0x19F85B4 Offset: 0x19F85B4 VA: 0x19F85B4
	public bool IsFixCostume() { }

	// RVA: 0x19F85EC Offset: 0x19F85EC VA: 0x19F85EC
	public bool IsModifyFixCostume() { }

	// RVA: 0x19E6BA8 Offset: 0x19E6BA8 VA: 0x19E6BA8
	public string get_CostumeName() { }

	// RVA: 0x19F865C Offset: 0x19F865C VA: 0x19F865C
	public long GetNpcFollowerServantId() { }

	// RVA: 0x19ECB4C Offset: 0x19ECB4C VA: 0x19ECB4C
	public void SetNameLimitCount(int limit) { }

	// RVA: 0x19E2F00 Offset: 0x19E2F00 VA: 0x19E2F00
	public bool get_IsMyServantOrNpcRestriction() { }

	// RVA: 0x19F8664 Offset: 0x19F8664 VA: 0x19F8664
	public bool get_HaveIndividualityServant() { }

	// RVA: 0x19F866C Offset: 0x19F866C VA: 0x19F866C
	public string GetMyServantOrNpcRestrictionMessage() { }
}

// Namespace: 
public class PartyOrganizationListViewItemDraw : MonoBehaviour // TypeDefIndex: 10469
{
	// Fields
	protected static int MESSAGE_X_SIZE_MAX; // 0x0
	protected static int CORRECTION_ICON_SINGLE_Y; // 0x4
	protected static int CORRECTION_ICON_BONUS_Y; // 0x8
	protected static int MESSAGE_SPACING_Y; // 0xC
	protected static int CAN_GET_POINT_X_SIZE_MAX; // 0x10
	[SerializeField] // RVA: 0xC74494 Offset: 0xC74494 VA: 0xC74494
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xC744A4 Offset: 0xC744A4 VA: 0xC744A4
	protected UISprite baseSprite; // 0x20
	[SerializeField] // RVA: 0xC744B4 Offset: 0xC744B4 VA: 0xC744B4
	protected UISprite base2Sprite; // 0x28
	[SerializeField] // RVA: 0xC744C4 Offset: 0xC744C4 VA: 0xC744C4
	protected ServantFaceIconComponent servantFaceIcon; // 0x30
	[SerializeField] // RVA: 0xC744D4 Offset: 0xC744D4 VA: 0xC744D4
	protected UINarrowFigureTexture servantNarrowTexture; // 0x38
	[SerializeField] // RVA: 0xC744E4 Offset: 0xC744E4 VA: 0xC744E4
	protected ServantClassIconComponent servantClassIcon; // 0x40
	[SerializeField] // RVA: 0xC744F4 Offset: 0xC744F4 VA: 0xC744F4
	protected ServantClassCompatibilityIconComponent classCompatibilityIcon; // 0x48
	[SerializeField] // RVA: 0xC74504 Offset: 0xC74504 VA: 0xC74504
	protected UISprite memberTypeBaseSprite; // 0x50
	[SerializeField] // RVA: 0xC74514 Offset: 0xC74514 VA: 0xC74514
	protected UISprite memberTypeSprite; // 0x58
	[SerializeField] // RVA: 0xC74524 Offset: 0xC74524 VA: 0xC74524
	protected UISprite supportSprite; // 0x60
	[SerializeField] // RVA: 0xC74534 Offset: 0xC74534 VA: 0xC74534
	protected UILabel levelLabel; // 0x68
	[SerializeField] // RVA: 0xC74544 Offset: 0xC74544 VA: 0xC74544
	protected UISprite raritySprite; // 0x70
	[SerializeField] // RVA: 0xC74554 Offset: 0xC74554 VA: 0xC74554
	protected UILabel hpLabel; // 0x78
	[SerializeField] // RVA: 0xC74564 Offset: 0xC74564 VA: 0xC74564
	protected UILabel attackLabel; // 0x80
	[SerializeField] // RVA: 0xC74574 Offset: 0xC74574 VA: 0xC74574
	protected UILabel costLabel; // 0x88
	[SerializeField] // RVA: 0xC74584 Offset: 0xC74584 VA: 0xC74584
	protected SkillListTreasureDeviceComponent skillListTreasureDevice; // 0x90
	[SerializeField] // RVA: 0xC74594 Offset: 0xC74594 VA: 0xC74594
	protected AppendSkillListComponent appendSkillList; // 0x98
	[SerializeField] // RVA: 0xC745A4 Offset: 0xC745A4 VA: 0xC745A4
	protected ServantCommandCardListComponent svtCommandCardList; // 0xA0
	[SerializeField] // RVA: 0xC745B4 Offset: 0xC745B4 VA: 0xC745B4
	protected UISprite typeSprite; // 0xA8
	[SerializeField] // RVA: 0xC745C4 Offset: 0xC745C4 VA: 0xC745C4
	protected UISprite noneEquipSprite; // 0xB0
	[SerializeField] // RVA: 0xC745D4 Offset: 0xC745D4 VA: 0xC745D4
	private UISprite hideEquipSprite; // 0xB8
	[SerializeField] // RVA: 0xC745E4 Offset: 0xC745E4 VA: 0xC745E4
	protected UIMeshSprite equipSprite; // 0xC0
	[SerializeField] // RVA: 0xC745F4 Offset: 0xC745F4 VA: 0xC745F4
	protected UISprite equipLimitCountSprite; // 0xC8
	[SerializeField] // RVA: 0xC74604 Offset: 0xC74604 VA: 0xC74604
	protected ShiningIconComponent bounusIcon; // 0xD0
	[SerializeField] // RVA: 0xC74614 Offset: 0xC74614 VA: 0xC74614
	protected EventUpValIconComponent eventUpValIcon; // 0xD8
	[SerializeField] // RVA: 0xC74624 Offset: 0xC74624 VA: 0xC74624
	protected UISprite restrictionMaskSprite; // 0xE0
	[SerializeField] // RVA: 0xC74634 Offset: 0xC74634 VA: 0xC74634
	protected UISprite restrictionMask2Sprite; // 0xE8
	[SerializeField] // RVA: 0xC74644 Offset: 0xC74644 VA: 0xC74644
	protected UILabel restrictionMaskMessageText; // 0xF0
	[SerializeField] // RVA: 0xC74654 Offset: 0xC74654 VA: 0xC74654
	private UISprite fixNpcMessageFrameSprite; // 0xF8
	[SerializeField] // RVA: 0xC74664 Offset: 0xC74664 VA: 0xC74664
	private UILabel fixNpcMessageText; // 0x100
	[SerializeField] // RVA: 0xC74674 Offset: 0xC74674 VA: 0xC74674
	protected GameObject restrictionWarningBase; // 0x108
	[SerializeField] // RVA: 0xC74684 Offset: 0xC74684 VA: 0xC74684
	protected FlashingIconComponent restrictionWarningIcon; // 0x110
	[SerializeField] // RVA: 0xC74694 Offset: 0xC74694 VA: 0xC74694
	protected UILabel restrictionWarningMessageLabel; // 0x118
	[SerializeField] // RVA: 0xC746A4 Offset: 0xC746A4 VA: 0xC746A4
	protected UISprite correctionIconSprite; // 0x120
	[SerializeField] // RVA: 0xC746B4 Offset: 0xC746B4 VA: 0xC746B4
	private GameObject swapGuide; // 0x128
	[SerializeField] // RVA: 0xC746C4 Offset: 0xC746C4 VA: 0xC746C4
	private GameObject swapGuideEquip; // 0x130
	[SerializeField] // RVA: 0xC746D4 Offset: 0xC746D4 VA: 0xC746D4
	protected SwitchUIWidgetComponent switchSkillInfo; // 0x138
	[SerializeField] // RVA: 0xC746E4 Offset: 0xC746E4 VA: 0xC746E4
	protected UIWidget skillInfoUiWidget; // 0x140
	[SerializeField] // RVA: 0xC746F4 Offset: 0xC746F4 VA: 0xC746F4
	protected UIWidget appendSkillInfoUiWidget; // 0x148
	[SerializeField] // RVA: 0xC74704 Offset: 0xC74704 VA: 0xC74704
	private GameObject canGetBuddyPointObj; // 0x150
	[SerializeField] // RVA: 0xC74714 Offset: 0xC74714 VA: 0xC74714
	private GameObject canGetBuddyPointBaseObj; // 0x158
	[SerializeField] // RVA: 0xC74724 Offset: 0xC74724 VA: 0xC74724
	private UISprite canGetBuddyPointIconSprite; // 0x160
	[SerializeField] // RVA: 0xC74734 Offset: 0xC74734 VA: 0xC74734
	private UILabel canGetBuddyPointLabel; // 0x168
	private List<UIWidget> switchSkillUIList; // 0x170
	protected long updateTime; // 0x178
	protected PartyOrganizationListViewItem linkItem; // 0x180
	protected Vector3 baseRarityPosition; // 0x188
	protected int restrictionMaskMessageWidth; // 0x194
	protected int restrictionWarningMessageWidth; // 0x198
	protected Vector3 restrictionWarningCenter; // 0x19C
	protected UIAtlas baseDefaultUIAtlas; // 0x1A8
	protected UIAtlas base2DefaultUIAtlas; // 0x1B0

	// Methods

	// RVA: 0x1433278 Offset: 0x1433278 VA: 0x1433278
	public void .ctor() { }

	// RVA: 0x1433288 Offset: 0x1433288 VA: 0x1433288
	protected void Awake() { }

	// RVA: 0x14335B4 Offset: 0x14335B4 VA: 0x14335B4
	public void ClearItem() { }

	// RVA: 0x1433A70 Offset: 0x1433A70 VA: 0x1433A70
	public void SetItem(PartyOrganizationListViewItem item, PartyOrganizationListViewItemDraw.DispMode mode) { }

	// RVA: 0x143816C Offset: 0x143816C VA: 0x143816C
	private void SetClassCompatibilityIcon(PartyOrganizationListViewItem item, bool isClear) { }

	// RVA: 0x143375C Offset: 0x143375C VA: 0x143375C
	protected void ClearMessage() { }

	// RVA: 0x1438348 Offset: 0x1438348 VA: 0x1438348
