}

// Namespace: Org.BouncyCastle.Asn1.X9
public class DHPublicKey : Asn1Encodable // TypeDefIndex: 4586
{
	// Fields
	private readonly DerInteger y; // 0x10

	// Properties
	public DerInteger Y { get; }

	// Methods

	// RVA: 0x25B5A28 Offset: 0x25B5A28 VA: 0x25B5A28
	public void .ctor(DerInteger y) { }

	// RVA: 0x25B5ACC Offset: 0x25B5ACC VA: 0x25B5ACC
	public static DHPublicKey GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x25B5AE8 Offset: 0x25B5AE8 VA: 0x25B5AE8
	public static DHPublicKey GetInstance(object obj) { }

	// RVA: 0x25B5CE0 Offset: 0x25B5CE0 VA: 0x25B5CE0
	public DerInteger get_Y() { }

	// RVA: 0x25B5CE8 Offset: 0x25B5CE8 VA: 0x25B5CE8 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.X9
public class DHValidationParms : Asn1Encodable // TypeDefIndex: 4587
{
	// Fields
	private readonly DerBitString seed; // 0x10
	private readonly DerInteger pgenCounter; // 0x18

	// Properties
	public DerBitString Seed { get; }
	public DerInteger PgenCounter { get; }

	// Methods

	// RVA: 0x25B5CF0 Offset: 0x25B5CF0 VA: 0x25B5CF0
	public void .ctor(DerBitString seed, DerInteger pgenCounter) { }

	// RVA: 0x25B5DB8 Offset: 0x25B5DB8 VA: 0x25B5DB8
	private void .ctor(Asn1Sequence seq) { }

	// RVA: 0x25B5F68 Offset: 0x25B5F68 VA: 0x25B5F68
	public static DHValidationParms GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x25B52DC Offset: 0x25B52DC VA: 0x25B52DC
	public static DHValidationParms GetInstance(object obj) { }

	// RVA: 0x25B5F84 Offset: 0x25B5F84 VA: 0x25B5F84
	public DerBitString get_Seed() { }

	// RVA: 0x25B5F8C Offset: 0x25B5F8C VA: 0x25B5F8C
	public DerInteger get_PgenCounter() { }

	// RVA: 0x25B5F94 Offset: 0x25B5F94 VA: 0x25B5F94 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.X9
public class ECNamedCurveTable // TypeDefIndex: 4588
{
	// Properties
	public static IEnumerable Names { get; }

	// Methods

	// RVA: 0x25B60BC Offset: 0x25B60BC VA: 0x25B60BC
	public void .ctor() { }

	// RVA: 0x25B60C4 Offset: 0x25B60C4 VA: 0x25B60C4
	public static X9ECParameters GetByName(string name) { }

	// RVA: 0x25B628C Offset: 0x25B628C VA: 0x25B628C
	public static string GetName(DerObjectIdentifier oid) { }

	// RVA: 0x25B6510 Offset: 0x25B6510 VA: 0x25B6510
	public static DerObjectIdentifier GetOid(string name) { }

	// RVA: 0x25B67E4 Offset: 0x25B67E4 VA: 0x25B67E4
	public static X9ECParameters GetByOid(DerObjectIdentifier oid) { }

	// RVA: 0x25B6A68 Offset: 0x25B6A68 VA: 0x25B6A68
	public static IEnumerable get_Names() { }
}

// Namespace: Org.BouncyCastle.Asn1.X9
public sealed class X962NamedCurves // TypeDefIndex: 4589
{
	// Fields
	private static readonly IDictionary objIds; // 0x0
	private static readonly IDictionary curves; // 0x8
	private static readonly IDictionary names; // 0x10

	// Properties
	public static IEnumerable Names { get; }

	// Methods

	// RVA: 0x25B6CF8 Offset: 0x25B6CF8 VA: 0x25B6CF8
	private void .ctor() { }

	// RVA: 0x25B6D00 Offset: 0x25B6D00 VA: 0x25B6D00
	private static void .cctor() { }

	// RVA: 0x25B749C Offset: 0x25B749C VA: 0x25B749C
	private static void DefineCurve(string name, DerObjectIdentifier oid, X9ECParametersHolder holder) { }

	// RVA: 0x25B61F4 Offset: 0x25B61F4 VA: 0x25B61F4
	public static X9ECParameters GetByName(string name) { }

	// RVA: 0x25B68E4 Offset: 0x25B68E4 VA: 0x25B68E4
	public static X9ECParameters GetByOid(DerObjectIdentifier oid) { }

	// RVA: 0x25B6640 Offset: 0x25B6640 VA: 0x25B6640
	public static DerObjectIdentifier GetOid(string name) { }

	// RVA: 0x25B63BC Offset: 0x25B63BC VA: 0x25B63BC
	public static string GetName(DerObjectIdentifier oid) { }

	// RVA: 0x25B6BEC Offset: 0x25B6BEC VA: 0x25B6BEC
	public static IEnumerable get_Names() { }
}

// Namespace: 
internal class X962NamedCurves.Prime192v1Holder : X9ECParametersHolder // TypeDefIndex: 4590
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B9948 Offset: 0x25B9948 VA: 0x25B9948
	private void .ctor() { }

	// RVA: 0x25B9950 Offset: 0x25B9950 VA: 0x25B9950 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B9B30 Offset: 0x25B9B30 VA: 0x25B9B30
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.Prime192v2Holder : X9ECParametersHolder // TypeDefIndex: 4591
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B9B94 Offset: 0x25B9B94 VA: 0x25B9B94
	private void .ctor() { }

	// RVA: 0x25B9B9C Offset: 0x25B9B9C VA: 0x25B9B9C Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B9D7C Offset: 0x25B9D7C VA: 0x25B9D7C
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.Prime192v3Holder : X9ECParametersHolder // TypeDefIndex: 4592
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x245EC34 Offset: 0x245EC34 VA: 0x245EC34
	private void .ctor() { }

	// RVA: 0x245EC44 Offset: 0x245EC44 VA: 0x245EC44 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x245F380 Offset: 0x245F380 VA: 0x245F380
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.Prime239v1Holder : X9ECParametersHolder // TypeDefIndex: 4593
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x245F3E4 Offset: 0x245F3E4 VA: 0x245F3E4
	private void .ctor() { }

	// RVA: 0x245F3EC Offset: 0x245F3EC VA: 0x245F3EC Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x245F5C4 Offset: 0x245F5C4 VA: 0x245F5C4
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.Prime239v2Holder : X9ECParametersHolder // TypeDefIndex: 4594
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x245F628 Offset: 0x245F628 VA: 0x245F628
	private void .ctor() { }

	// RVA: 0x245F630 Offset: 0x245F630 VA: 0x245F630 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x245F808 Offset: 0x245F808 VA: 0x245F808
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.Prime239v3Holder : X9ECParametersHolder // TypeDefIndex: 4595
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x245F86C Offset: 0x245F86C VA: 0x245F86C
	private void .ctor() { }

	// RVA: 0x245F874 Offset: 0x245F874 VA: 0x245F874 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x245FA4C Offset: 0x245FA4C VA: 0x245FA4C
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.Prime256v1Holder : X9ECParametersHolder // TypeDefIndex: 4596
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x245FAB0 Offset: 0x245FAB0 VA: 0x245FAB0
	private void .ctor() { }

	// RVA: 0x245FAB8 Offset: 0x245FAB8 VA: 0x245FAB8 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x245FC90 Offset: 0x245FC90 VA: 0x245FC90
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2pnb163v1Holder : X9ECParametersHolder // TypeDefIndex: 4597
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B76E0 Offset: 0x25B76E0 VA: 0x25B76E0
	private void .ctor() { }

	// RVA: 0x25B76E8 Offset: 0x25B76E8 VA: 0x25B76E8 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B78B8 Offset: 0x25B78B8 VA: 0x25B78B8
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2pnb163v2Holder : X9ECParametersHolder // TypeDefIndex: 4598
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B791C Offset: 0x25B791C VA: 0x25B791C
	private void .ctor() { }

	// RVA: 0x25B7924 Offset: 0x25B7924 VA: 0x25B7924 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B7AD8 Offset: 0x25B7AD8 VA: 0x25B7AD8
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2pnb163v3Holder : X9ECParametersHolder // TypeDefIndex: 4599
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B7B3C Offset: 0x25B7B3C VA: 0x25B7B3C
	private void .ctor() { }

	// RVA: 0x25B7B44 Offset: 0x25B7B44 VA: 0x25B7B44 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B7CF8 Offset: 0x25B7CF8 VA: 0x25B7CF8
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2pnb176w1Holder : X9ECParametersHolder // TypeDefIndex: 4600
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B7D5C Offset: 0x25B7D5C VA: 0x25B7D5C
	private void .ctor() { }

	// RVA: 0x25B7D64 Offset: 0x25B7D64 VA: 0x25B7D64 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B7F24 Offset: 0x25B7F24 VA: 0x25B7F24
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2tnb191v1Holder : X9ECParametersHolder // TypeDefIndex: 4601
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B8838 Offset: 0x25B8838 VA: 0x25B8838
	private void .ctor() { }

	// RVA: 0x25B8840 Offset: 0x25B8840 VA: 0x25B8840 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B8A04 Offset: 0x25B8A04 VA: 0x25B8A04
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2tnb191v2Holder : X9ECParametersHolder // TypeDefIndex: 4602
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B8A68 Offset: 0x25B8A68 VA: 0x25B8A68
	private void .ctor() { }

	// RVA: 0x25B8A70 Offset: 0x25B8A70 VA: 0x25B8A70 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B8C24 Offset: 0x25B8C24 VA: 0x25B8C24
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2tnb191v3Holder : X9ECParametersHolder // TypeDefIndex: 4603
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B8C88 Offset: 0x25B8C88 VA: 0x25B8C88
	private void .ctor() { }

	// RVA: 0x25B8C90 Offset: 0x25B8C90 VA: 0x25B8C90 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B8E44 Offset: 0x25B8E44 VA: 0x25B8E44
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2pnb208w1Holder : X9ECParametersHolder // TypeDefIndex: 4604
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B7F88 Offset: 0x25B7F88 VA: 0x25B7F88
	private void .ctor() { }

	// RVA: 0x25B7F90 Offset: 0x25B7F90 VA: 0x25B7F90 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B8150 Offset: 0x25B8150 VA: 0x25B8150
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2tnb239v1Holder : X9ECParametersHolder // TypeDefIndex: 4605
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B8EA8 Offset: 0x25B8EA8 VA: 0x25B8EA8
	private void .ctor() { }

	// RVA: 0x25B8EB0 Offset: 0x25B8EB0 VA: 0x25B8EB0 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B9064 Offset: 0x25B9064 VA: 0x25B9064
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2tnb239v2Holder : X9ECParametersHolder // TypeDefIndex: 4606
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B90C8 Offset: 0x25B90C8 VA: 0x25B90C8
	private void .ctor() { }

	// RVA: 0x25B90D0 Offset: 0x25B90D0 VA: 0x25B90D0 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B9284 Offset: 0x25B9284 VA: 0x25B9284
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2tnb239v3Holder : X9ECParametersHolder // TypeDefIndex: 4607
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B92E8 Offset: 0x25B92E8 VA: 0x25B92E8
	private void .ctor() { }

	// RVA: 0x25B92F0 Offset: 0x25B92F0 VA: 0x25B92F0 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B94A4 Offset: 0x25B94A4 VA: 0x25B94A4
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2pnb272w1Holder : X9ECParametersHolder // TypeDefIndex: 4608
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B81B4 Offset: 0x25B81B4 VA: 0x25B81B4
	private void .ctor() { }

	// RVA: 0x25B81BC Offset: 0x25B81BC VA: 0x25B81BC Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B837C Offset: 0x25B837C VA: 0x25B837C
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2pnb304w1Holder : X9ECParametersHolder // TypeDefIndex: 4609
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B83E0 Offset: 0x25B83E0 VA: 0x25B83E0
	private void .ctor() { }

	// RVA: 0x25B83E8 Offset: 0x25B83E8 VA: 0x25B83E8 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B85A8 Offset: 0x25B85A8 VA: 0x25B85A8
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2tnb359v1Holder : X9ECParametersHolder // TypeDefIndex: 4610
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B9508 Offset: 0x25B9508 VA: 0x25B9508
	private void .ctor() { }

	// RVA: 0x25B9510 Offset: 0x25B9510 VA: 0x25B9510 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B96C4 Offset: 0x25B96C4 VA: 0x25B96C4
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2pnb368w1Holder : X9ECParametersHolder // TypeDefIndex: 4611
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B860C Offset: 0x25B860C VA: 0x25B860C
	private void .ctor() { }

	// RVA: 0x25B8614 Offset: 0x25B8614 VA: 0x25B8614 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B87D4 Offset: 0x25B87D4 VA: 0x25B87D4
	private static void .cctor() { }
}

// Namespace: 
internal class X962NamedCurves.C2tnb431r1Holder : X9ECParametersHolder // TypeDefIndex: 4612
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x25B9728 Offset: 0x25B9728 VA: 0x25B9728
	private void .ctor() { }

	// RVA: 0x25B9730 Offset: 0x25B9730 VA: 0x25B9730 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x25B98E4 Offset: 0x25B98E4 VA: 0x25B98E4
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1.X9
public class X962Parameters : Asn1Encodable, IAsn1Choice // TypeDefIndex: 4613
{
	// Fields
	private readonly Asn1Object _params; // 0x10

	// Properties
	public bool IsNamedCurve { get; }
	public bool IsImplicitlyCA { get; }
	public Asn1Object Parameters { get; }

	// Methods

	// RVA: 0x245FCF4 Offset: 0x245FCF4 VA: 0x245FCF4
	public void .ctor(X9ECParameters ecParameters) { }

	// RVA: 0x245FD3C Offset: 0x245FD3C VA: 0x245FD3C
	public void .ctor(DerObjectIdentifier namedCurve) { }

	// RVA: 0x245FD68 Offset: 0x245FD68 VA: 0x245FD68
	public void .ctor(Asn1Object obj) { }

	// RVA: 0x245FD94 Offset: 0x245FD94 VA: 0x245FD94
	public static X962Parameters GetInstance(object obj) { }

	// RVA: 0x24600CC Offset: 0x24600CC VA: 0x24600CC
	public bool get_IsNamedCurve() { }

	// RVA: 0x2460150 Offset: 0x2460150 VA: 0x2460150
	public bool get_IsImplicitlyCA() { }

	// RVA: 0x24601D4 Offset: 0x24601D4 VA: 0x24601D4
	public Asn1Object get_Parameters() { }

	// RVA: 0x24601DC Offset: 0x24601DC VA: 0x24601DC Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.X9
public class X9Curve : Asn1Encodable // TypeDefIndex: 4614
{
	// Fields
	private readonly ECCurve curve; // 0x10
	private readonly byte[] seed; // 0x18
	private readonly DerObjectIdentifier fieldIdentifier; // 0x20

	// Properties
	public ECCurve Curve { get; }

	// Methods

	// RVA: 0x24601E4 Offset: 0x24601E4 VA: 0x24601E4
	public void .ctor(ECCurve curve) { }

	// RVA: 0x24601EC Offset: 0x24601EC VA: 0x24601EC
	public void .ctor(ECCurve curve, byte[] seed) { }

	// RVA: 0x2460354 Offset: 0x2460354 VA: 0x2460354
	public void .ctor(X9FieldID fieldID, Asn1Sequence seq) { }

	// RVA: 0x24614F4 Offset: 0x24614F4 VA: 0x24614F4
	public ECCurve get_Curve() { }

	// RVA: 0x24614FC Offset: 0x24614FC VA: 0x24614FC
	public byte[] GetSeed() { }

	// RVA: 0x2461508 Offset: 0x2461508 VA: 0x2461508 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.X9
public class X9ECParameters : Asn1Encodable // TypeDefIndex: 4615
{
	// Fields
	private X9FieldID fieldID; // 0x10
	private ECCurve curve; // 0x18
	private X9ECPoint g; // 0x20
	private BigInteger n; // 0x28
	private BigInteger h; // 0x30
	private byte[] seed; // 0x38

	// Properties
	public ECCurve Curve { get; }
	public ECPoint G { get; }
	public BigInteger N { get; }
	public BigInteger H { get; }
	public X9Curve CurveEntry { get; }
	public X9FieldID FieldIDEntry { get; }
	public X9ECPoint BaseEntry { get; }

	// Methods

	// RVA: 0x2461900 Offset: 0x2461900 VA: 0x2461900
	public void .ctor(Asn1Sequence seq) { }

	// RVA: 0x2462044 Offset: 0x2462044 VA: 0x2462044
	public void .ctor(ECCurve curve, ECPoint g, BigInteger n) { }

	// RVA: 0x24620F4 Offset: 0x24620F4 VA: 0x24620F4
	public void .ctor(ECCurve curve, X9ECPoint g, BigInteger n, BigInteger h) { }

	// RVA: 0x24620FC Offset: 0x24620FC VA: 0x24620FC
	public void .ctor(ECCurve curve, ECPoint g, BigInteger n, BigInteger h) { }

	// RVA: 0x2462050 Offset: 0x2462050 VA: 0x2462050
	public void .ctor(ECCurve curve, ECPoint g, BigInteger n, BigInteger h, byte[] seed) { }

	// RVA: 0x245EEB4 Offset: 0x245EEB4 VA: 0x245EEB4
	public void .ctor(ECCurve curve, X9ECPoint g, BigInteger n, BigInteger h, byte[] seed) { }

	// RVA: 0x24626E4 Offset: 0x24626E4 VA: 0x24626E4
	public static X9ECParameters GetInstance(object obj) { }

	// RVA: 0x2462788 Offset: 0x2462788 VA: 0x2462788
	public ECCurve get_Curve() { }

	// RVA: 0x2462790 Offset: 0x2462790 VA: 0x2462790
	public ECPoint get_G() { }

	// RVA: 0x2462854 Offset: 0x2462854 VA: 0x2462854
	public BigInteger get_N() { }

	// RVA: 0x246285C Offset: 0x246285C VA: 0x246285C
	public BigInteger get_H() { }

	// RVA: 0x2462864 Offset: 0x2462864 VA: 0x2462864
	public byte[] GetSeed() { }

	// RVA: 0x246286C Offset: 0x246286C VA: 0x246286C
	public X9Curve get_CurveEntry() { }

	// RVA: 0x24628E0 Offset: 0x24628E0 VA: 0x24628E0
	public X9FieldID get_FieldIDEntry() { }

	// RVA: 0x24628E8 Offset: 0x24628E8 VA: 0x24628E8
	public X9ECPoint get_BaseEntry() { }

	// RVA: 0x24628F0 Offset: 0x24628F0 VA: 0x24628F0 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.X9
public abstract class X9ECParametersHolder // TypeDefIndex: 4616
{
	// Fields
	private X9ECParameters parameters; // 0x10

	// Properties
	public X9ECParameters Parameters { get; }

	// Methods

	// RVA: 0x245EC3C Offset: 0x245EC3C VA: 0x245EC3C
	protected void .ctor() { }

	// RVA: 0x2462C54 Offset: 0x2462C54 VA: 0x2462C54
	public X9ECParameters get_Parameters() { }

	// RVA: -1 Offset: -1 Slot: 4
	protected abstract X9ECParameters CreateParameters();
}

// Namespace: Org.BouncyCastle.Asn1.X9
public class X9ECPoint : Asn1Encodable // TypeDefIndex: 4617
{
	// Fields
	private readonly Asn1OctetString encoding; // 0x10
	private ECCurve c; // 0x18
	private ECPoint p; // 0x20

	// Properties
	public ECPoint Point { get; }
	public bool IsPointCompressed { get; }

	// Methods

	// RVA: 0x2462104 Offset: 0x2462104 VA: 0x2462104
	public void .ctor(ECPoint p) { }

	// RVA: 0x2462CE8 Offset: 0x2462CE8 VA: 0x2462CE8
	public void .ctor(ECPoint p, bool compressed) { }

	// RVA: 0x245EE1C Offset: 0x245EE1C VA: 0x245EE1C
	public void .ctor(ECCurve c, byte[] encoding) { }

	// RVA: 0x2461FF0 Offset: 0x2461FF0 VA: 0x2461FF0
	public void .ctor(ECCurve c, Asn1OctetString s) { }

	// RVA: 0x2462DB8 Offset: 0x2462DB8 VA: 0x2462DB8
	public byte[] GetPointEncoding() { }

	// RVA: 0x24627BC Offset: 0x24627BC VA: 0x24627BC
	public ECPoint get_Point() { }

	// RVA: 0x2462DF4 Offset: 0x2462DF4 VA: 0x2462DF4
	public bool get_IsPointCompressed() { }

	// RVA: 0x2462E80 Offset: 0x2462E80 VA: 0x2462E80 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.X9
public class X9FieldElement : Asn1Encodable // TypeDefIndex: 4618
{
	// Fields
	private ECFieldElement f; // 0x10

	// Properties
	public ECFieldElement Value { get; }

	// Methods

	// RVA: 0x24618D4 Offset: 0x24618D4 VA: 0x24618D4
	public void .ctor(ECFieldElement f) { }

	// RVA: 0x246132C Offset: 0x246132C VA: 0x246132C
	public void .ctor(BigInteger p, Asn1OctetString s) { }

	// RVA: 0x2461400 Offset: 0x2461400 VA: 0x2461400
	public void .ctor(int m, int k1, int k2, int k3, Asn1OctetString s) { }

	// RVA: 0x24613F8 Offset: 0x24613F8 VA: 0x24613F8
	public ECFieldElement get_Value() { }

	// RVA: 0x2462E88 Offset: 0x2462E88 VA: 0x2462E88 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.X9
public class X9FieldID : Asn1Encodable // TypeDefIndex: 4619
{
	// Fields
	private readonly DerObjectIdentifier id; // 0x10
	private readonly Asn1Object parameters; // 0x18

	// Properties
	public DerObjectIdentifier Identifier { get; }
	public Asn1Object Parameters { get; }

	// Methods

	// RVA: 0x246210C Offset: 0x246210C VA: 0x246210C
	public void .ctor(BigInteger primeP) { }

	// RVA: 0x24621B8 Offset: 0x24621B8 VA: 0x24621B8
	public void .ctor(int m, int k1) { }

	// RVA: 0x24621C4 Offset: 0x24621C4 VA: 0x24621C4
	public void .ctor(int m, int k1, int k2, int k3) { }

	// RVA: 0x24630A4 Offset: 0x24630A4 VA: 0x24630A4
	private void .ctor(Asn1Sequence seq) { }

	// RVA: 0x2461F4C Offset: 0x2461F4C VA: 0x2461F4C
	public static X9FieldID GetInstance(object obj) { }

	// RVA: 0x246131C Offset: 0x246131C VA: 0x246131C
	public DerObjectIdentifier get_Identifier() { }

	// RVA: 0x2461324 Offset: 0x2461324 VA: 0x2461324
	public Asn1Object get_Parameters() { }

	// RVA: 0x2463188 Offset: 0x2463188 VA: 0x2463188 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.X9
public abstract class X9IntegerConverter // TypeDefIndex: 4620
{
	// Methods

	// RVA: 0x24632B0 Offset: 0x24632B0 VA: 0x24632B0
	protected void .ctor() { }

	// RVA: 0x2462F50 Offset: 0x2462F50 VA: 0x2462F50
	public static int GetByteLength(ECFieldElement fe) { }

	// RVA: 0x24632B8 Offset: 0x24632B8 VA: 0x24632B8
	public static int GetByteLength(ECCurve c) { }

	// RVA: 0x2462F98 Offset: 0x2462F98 VA: 0x2462F98
	public static byte[] IntegerToBytes(BigInteger s, int qLength) { }
}

// Namespace: Org.BouncyCastle.Asn1.X9
public abstract class X9ObjectIdentifiers // TypeDefIndex: 4621
{
	// Fields
	internal const string AnsiX962 = "1.2.840.10045";
	public static readonly DerObjectIdentifier ansi_X9_62; // 0x0
	public static readonly DerObjectIdentifier IdFieldType; // 0x8
	public static readonly DerObjectIdentifier PrimeField; // 0x10
	public static readonly DerObjectIdentifier CharacteristicTwoField; // 0x18
	public static readonly DerObjectIdentifier GNBasis; // 0x20
	public static readonly DerObjectIdentifier TPBasis; // 0x28
	public static readonly DerObjectIdentifier PPBasis; // 0x30
	[ObsoleteAttribute] // RVA: 0xCB5FF8 Offset: 0xCB5FF8 VA: 0xCB5FF8
	public const string IdECSigType = "1.2.840.10045.4";
	public static readonly DerObjectIdentifier id_ecSigType; // 0x38
	public static readonly DerObjectIdentifier ECDsaWithSha1; // 0x40
	[ObsoleteAttribute] // RVA: 0xCB6030 Offset: 0xCB6030 VA: 0xCB6030
	public const string IdPublicKeyType = "1.2.840.10045.2";
	public static readonly DerObjectIdentifier id_publicKeyType; // 0x48
	public static readonly DerObjectIdentifier IdECPublicKey; // 0x50
	public static readonly DerObjectIdentifier ECDsaWithSha2; // 0x58
	public static readonly DerObjectIdentifier ECDsaWithSha224; // 0x60
	public static readonly DerObjectIdentifier ECDsaWithSha256; // 0x68
	public static readonly DerObjectIdentifier ECDsaWithSha384; // 0x70
	public static readonly DerObjectIdentifier ECDsaWithSha512; // 0x78
	public static readonly DerObjectIdentifier EllipticCurve; // 0x80
	public static readonly DerObjectIdentifier CTwoCurve; // 0x88
	public static readonly DerObjectIdentifier C2Pnb163v1; // 0x90
	public static readonly DerObjectIdentifier C2Pnb163v2; // 0x98
	public static readonly DerObjectIdentifier C2Pnb163v3; // 0xA0
	public static readonly DerObjectIdentifier C2Pnb176w1; // 0xA8
	public static readonly DerObjectIdentifier C2Tnb191v1; // 0xB0
	public static readonly DerObjectIdentifier C2Tnb191v2; // 0xB8
	public static readonly DerObjectIdentifier C2Tnb191v3; // 0xC0
	public static readonly DerObjectIdentifier C2Onb191v4; // 0xC8
	public static readonly DerObjectIdentifier C2Onb191v5; // 0xD0
	public static readonly DerObjectIdentifier C2Pnb208w1; // 0xD8
	public static readonly DerObjectIdentifier C2Tnb239v1; // 0xE0
	public static readonly DerObjectIdentifier C2Tnb239v2; // 0xE8
	public static readonly DerObjectIdentifier C2Tnb239v3; // 0xF0
	public static readonly DerObjectIdentifier C2Onb239v4; // 0xF8
	public static readonly DerObjectIdentifier C2Onb239v5; // 0x100
	public static readonly DerObjectIdentifier C2Pnb272w1; // 0x108
	public static readonly DerObjectIdentifier C2Pnb304w1; // 0x110
	public static readonly DerObjectIdentifier C2Tnb359v1; // 0x118
	public static readonly DerObjectIdentifier C2Pnb368w1; // 0x120
	public static readonly DerObjectIdentifier C2Tnb431r1; // 0x128
	public static readonly DerObjectIdentifier PrimeCurve; // 0x130
	public static readonly DerObjectIdentifier Prime192v1; // 0x138
	public static readonly DerObjectIdentifier Prime192v2; // 0x140
	public static readonly DerObjectIdentifier Prime192v3; // 0x148
	public static readonly DerObjectIdentifier Prime239v1; // 0x150
	public static readonly DerObjectIdentifier Prime239v2; // 0x158
	public static readonly DerObjectIdentifier Prime239v3; // 0x160
	public static readonly DerObjectIdentifier Prime256v1; // 0x168
	public static readonly DerObjectIdentifier IdDsa; // 0x170
	public static readonly DerObjectIdentifier IdDsaWithSha1; // 0x178
	public static readonly DerObjectIdentifier X9x63Scheme; // 0x180
	public static readonly DerObjectIdentifier DHSinglePassStdDHSha1KdfScheme; // 0x188
	public static readonly DerObjectIdentifier DHSinglePassCofactorDHSha1KdfScheme; // 0x190
	public static readonly DerObjectIdentifier MqvSinglePassSha1KdfScheme; // 0x198
	public static readonly DerObjectIdentifier ansi_x9_42; // 0x1A0
	public static readonly DerObjectIdentifier DHPublicNumber; // 0x1A8
	public static readonly DerObjectIdentifier X9x42Schemes; // 0x1B0
	public static readonly DerObjectIdentifier DHStatic; // 0x1B8
	public static readonly DerObjectIdentifier DHEphem; // 0x1C0
	public static readonly DerObjectIdentifier DHOneFlow; // 0x1C8
	public static readonly DerObjectIdentifier DHHybrid1; // 0x1D0
	public static readonly DerObjectIdentifier DHHybrid2; // 0x1D8
	public static readonly DerObjectIdentifier DHHybridOneFlow; // 0x1E0
	public static readonly DerObjectIdentifier Mqv2; // 0x1E8
	public static readonly DerObjectIdentifier Mqv1; // 0x1F0

	// Methods

	// RVA: 0x2463300 Offset: 0x2463300 VA: 0x2463300
	protected void .ctor() { }

	// RVA: 0x2463308 Offset: 0x2463308 VA: 0x2463308
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Crypto.Agreement
public class DHBasicAgreement : IBasicAgreement // TypeDefIndex: 4622
{
	// Fields
	private DHPrivateKeyParameters key; // 0x10
	private DHParameters dhParams; // 0x18

	// Methods

	// RVA: 0x2464104 Offset: 0x2464104 VA: 0x2464104
	public void .ctor() { }

	// RVA: 0x246410C Offset: 0x246410C VA: 0x246410C Slot: 7
	public virtual void Init(ICipherParameters parameters) { }

	// RVA: 0x2464230 Offset: 0x2464230 VA: 0x2464230 Slot: 8
	public virtual int GetFieldSize() { }

	// RVA: 0x24642A8 Offset: 0x24642A8 VA: 0x24642A8 Slot: 9
	public virtual BigInteger CalculateAgreement(ICipherParameters pubKey) { }
}

// Namespace: Org.BouncyCastle.Crypto.Agreement
public class ECDHBasicAgreement : IBasicAgreement // TypeDefIndex: 4623
{
	// Fields
	protected internal ECPrivateKeyParameters privKey; // 0x10

	// Methods

	// RVA: 0x24644B8 Offset: 0x24644B8 VA: 0x24644B8
	public void .ctor() { }

	// RVA: 0x24644C0 Offset: 0x24644C0 VA: 0x24644C0 Slot: 7
	public virtual void Init(ICipherParameters parameters) { }

	// RVA: 0x24645D8 Offset: 0x24645D8 VA: 0x24645D8 Slot: 8
	public virtual int GetFieldSize() { }

	// RVA: 0x2464654 Offset: 0x2464654 VA: 0x2464654 Slot: 9
	public virtual BigInteger CalculateAgreement(ICipherParameters pubKey) { }
}

// Namespace: Org.BouncyCastle.Crypto
public class AsymmetricCipherKeyPair // TypeDefIndex: 4624
{
	// Fields
	private readonly AsymmetricKeyParameter publicParameter; // 0x10
	private readonly AsymmetricKeyParameter privateParameter; // 0x18

	// Properties
	public AsymmetricKeyParameter Public { get; }
	public AsymmetricKeyParameter Private { get; }

	// Methods

	// RVA: 0x24648C4 Offset: 0x24648C4 VA: 0x24648C4
	public void .ctor(AsymmetricKeyParameter publicParameter, AsymmetricKeyParameter privateParameter) { }

	// RVA: 0x24649C8 Offset: 0x24649C8 VA: 0x24649C8
	public AsymmetricKeyParameter get_Public() { }

	// RVA: 0x24649D0 Offset: 0x24649D0 VA: 0x24649D0
	public AsymmetricKeyParameter get_Private() { }
}

// Namespace: Org.BouncyCastle.Crypto
public abstract class AsymmetricKeyParameter : ICipherParameters // TypeDefIndex: 4625
{
	// Fields
	private readonly bool privateKey; // 0x10

	// Properties
	public bool IsPrivate { get; }

	// Methods

	// RVA: 0x24649D8 Offset: 0x24649D8 VA: 0x24649D8
	protected void .ctor(bool privateKey) { }

	// RVA: 0x24649C0 Offset: 0x24649C0 VA: 0x24649C0
	public bool get_IsPrivate() { }

	// RVA: 0x2464A08 Offset: 0x2464A08 VA: 0x2464A08 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0x2464AC4 Offset: 0x2464AC4 VA: 0x2464AC4
	protected bool Equals(AsymmetricKeyParameter other) { }

	// RVA: 0x2464B0C Offset: 0x2464B0C VA: 0x2464B0C Slot: 2
	public override int GetHashCode() { }
