	private SubmarineScanConfirmDialog.State state; // 0xD0

	// Properties
	protected override GameObject closeBtnObject { get; }

	// Methods

	// RVA: 0x117BEA0 Offset: 0x117BEA0 VA: 0x117BEA0
	public void .ctor() { }

	// RVA: 0x117BF08 Offset: 0x117BF08 VA: 0x117BF08
	private void Init() { }

	// RVA: 0x117C06C Offset: 0x117C06C VA: 0x117C06C
	public void Open(int scanId, bool isShowDialogUpper, Action<bool> closeAction) { }

	// RVA: 0x117C1FC Offset: 0x117C1FC VA: 0x117C1FC
	private void EndLoad() { }

	// RVA: 0x117C8F0 Offset: 0x117C8F0 VA: 0x117C8F0
	public void OnClickCancelButton() { }

	// RVA: 0x117C9B4 Offset: 0x117C9B4 VA: 0x117C9B4
	public void OnClickExecuteButton() { }

	// RVA: 0x117CA78 Offset: 0x117CA78 VA: 0x117CA78 Slot: 4
	protected override GameObject get_closeBtnObject() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2AF8 Offset: 0xCD2AF8 VA: 0xCD2AF8
	// RVA: 0x117CB18 Offset: 0x117CB18 VA: 0x117CB18
	private void <EndLoad>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2B08 Offset: 0xCD2B08 VA: 0xCD2B08
	// RVA: 0x117CB24 Offset: 0x117CB24 VA: 0x117CB24
	private void <OnClickCancelButton>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2B18 Offset: 0xCD2B18 VA: 0xCD2B18
	// RVA: 0x117CB88 Offset: 0x117CB88 VA: 0x117CB88
	private void <OnClickExecuteButton>m__2() { }
}

// Namespace: 
private enum SubmarineScanConfirmDialog.State // TypeDefIndex: 10965
{
	// Fields
	public int value__; // 0x0
	public const SubmarineScanConfirmDialog.State INIT = 0;
	public const SubmarineScanConfirmDialog.State OPEN = 1;
	public const SubmarineScanConfirmDialog.State INPUT = 2;
	public const SubmarineScanConfirmDialog.State EXECUTE = 3;
	public const SubmarineScanConfirmDialog.State CLOSE = 4;
}

// Namespace: 
public class SubmarineSelectScannerDialog : BaseDialog // TypeDefIndex: 10966
{
	// Fields
	[SerializeField] // RVA: 0xC7BBBC Offset: 0xC7BBBC VA: 0xC7BBBC
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC7BBCC Offset: 0xC7BBCC VA: 0xC7BBCC
	private UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC7BBDC Offset: 0xC7BBDC VA: 0xC7BBDC
	private SubmarineSelectScannerListViewManager listViewManager; // 0x68
	[SerializeField] // RVA: 0xC7BBEC Offset: 0xC7BBEC VA: 0xC7BBEC
	private UILabel closeLabel; // 0x70
	[SerializeField] // RVA: 0xC7BBFC Offset: 0xC7BBFC VA: 0xC7BBFC
	private UICommonButton closeButton; // 0x78
	private Action<int> closeAction; // 0x80
	private SubmarineSelectScannerDialog.State state; // 0x88

	// Properties
	protected override GameObject closeBtnObject { get; }

	// Methods

	// RVA: 0x117D9DC Offset: 0x117D9DC VA: 0x117D9DC
	public void .ctor() { }

	// RVA: 0x117DA44 Offset: 0x117DA44 VA: 0x117DA44
	private void Init() { }

	// RVA: 0x117DB70 Offset: 0x117DB70 VA: 0x117DB70
	public void Open(int eventId, Action<int> closeAction, Action openFinishedAction) { }

	// RVA: 0x117E06C Offset: 0x117E06C VA: 0x117E06C
	public void OnClickCloseButton() { }

	// RVA: 0x117E130 Offset: 0x117E130 VA: 0x117E130
	public void OnSelectScanner(int scanId, bool isEnabled) { }

	// RVA: 0x117E290 Offset: 0x117E290 VA: 0x117E290 Slot: 4
	protected override GameObject get_closeBtnObject() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2B28 Offset: 0xCD2B28 VA: 0xCD2B28
	// RVA: 0x117E330 Offset: 0x117E330 VA: 0x117E330
	private void <OnClickCloseButton>m__0() { }
}

// Namespace: 
private enum SubmarineSelectScannerDialog.State // TypeDefIndex: 10967
{
	// Fields
	public int value__; // 0x0
	public const SubmarineSelectScannerDialog.State INIT = 0;
	public const SubmarineSelectScannerDialog.State OPEN = 1;
	public const SubmarineSelectScannerDialog.State INPUT = 2;
	public const SubmarineSelectScannerDialog.State SELECTED = 3;
	public const SubmarineSelectScannerDialog.State CLOSE = 4;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC457A4 Offset: 0xC457A4 VA: 0xC457A4
private sealed class SubmarineSelectScannerDialog.<Open>c__AnonStorey0 // TypeDefIndex: 10968
{
	// Fields
	internal Action openFinishedAction; // 0x10
	internal SubmarineSelectScannerDialog $this; // 0x18

	// Methods

	// RVA: 0x117DDB4 Offset: 0x117DDB4 VA: 0x117DDB4
	public void .ctor() { }

	// RVA: 0x117E41C Offset: 0x117E41C VA: 0x117E41C
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC457B4 Offset: 0xC457B4 VA: 0xC457B4
private sealed class SubmarineSelectScannerDialog.<OnSelectScanner>c__AnonStorey1 // TypeDefIndex: 10969
{
	// Fields
	internal int scanId; // 0x10
	internal SubmarineSelectScannerDialog $this; // 0x18

	// Methods

	// RVA: 0x117E288 Offset: 0x117E288 VA: 0x117E288
	public void .ctor() { }

	// RVA: 0x117E394 Offset: 0x117E394 VA: 0x117E394
	internal void <>m__0() { }
}

// Namespace: 
public class SubmarineSelectScannerListViewItem : ListViewItem // TypeDefIndex: 10970
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC7BC0C Offset: 0xC7BC0C VA: 0xC7BC0C
	[DebuggerBrowsableAttribute] // RVA: 0xC7BC0C Offset: 0xC7BC0C VA: 0xC7BC0C
	private int <scanId>k__BackingField; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC7BC48 Offset: 0xC7BC48 VA: 0xC7BC48
	[DebuggerBrowsableAttribute] // RVA: 0xC7BC48 Offset: 0xC7BC48 VA: 0xC7BC48
	private int <iconImageId>k__BackingField; // 0x74
	[CompilerGeneratedAttribute] // RVA: 0xC7BC84 Offset: 0xC7BC84 VA: 0xC7BC84
	[DebuggerBrowsableAttribute] // RVA: 0xC7BC84 Offset: 0xC7BC84 VA: 0xC7BC84
	private string <name>k__BackingField; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xC7BCC0 Offset: 0xC7BCC0 VA: 0xC7BCC0
	[DebuggerBrowsableAttribute] // RVA: 0xC7BCC0 Offset: 0xC7BCC0 VA: 0xC7BCC0
	private string <consumeItemDetail>k__BackingField; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC7BCFC Offset: 0xC7BCFC VA: 0xC7BCFC
	[DebuggerBrowsableAttribute] // RVA: 0xC7BCFC Offset: 0xC7BCFC VA: 0xC7BCFC
	private bool <enabled>k__BackingField; // 0x88

	// Properties
	public int scanId { get; set; }
	public int iconImageId { get; set; }
	public string name { get; set; }
	public string consumeItemDetail { get; set; }
	public bool enabled { get; set; }

	// Methods

	// RVA: 0x117E46C Offset: 0x117E46C VA: 0x117E46C
	public void .ctor(int index, int scanId, int iconImageId, string name, string consumeItemDetail, bool enabled) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2B38 Offset: 0xCD2B38 VA: 0xCD2B38
	// RVA: 0x117E4F0 Offset: 0x117E4F0 VA: 0x117E4F0
	public int get_scanId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2B48 Offset: 0xCD2B48 VA: 0xCD2B48
	// RVA: 0x117E4C4 Offset: 0x117E4C4 VA: 0x117E4C4
	private void set_scanId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2B58 Offset: 0xCD2B58 VA: 0xCD2B58
	// RVA: 0x117E4F8 Offset: 0x117E4F8 VA: 0x117E4F8
	public int get_iconImageId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2B68 Offset: 0xCD2B68 VA: 0xCD2B68
	// RVA: 0x117E4CC Offset: 0x117E4CC VA: 0x117E4CC
	private void set_iconImageId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2B78 Offset: 0xCD2B78 VA: 0xCD2B78
	// RVA: 0x117E500 Offset: 0x117E500 VA: 0x117E500
	public string get_name() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2B88 Offset: 0xCD2B88 VA: 0xCD2B88
	// RVA: 0x117E4D4 Offset: 0x117E4D4 VA: 0x117E4D4
	private void set_name(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2B98 Offset: 0xCD2B98 VA: 0xCD2B98
	// RVA: 0x117E508 Offset: 0x117E508 VA: 0x117E508
	public string get_consumeItemDetail() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2BA8 Offset: 0xCD2BA8 VA: 0xCD2BA8
	// RVA: 0x117E4DC Offset: 0x117E4DC VA: 0x117E4DC
	private void set_consumeItemDetail(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2BB8 Offset: 0xCD2BB8 VA: 0xCD2BB8
	// RVA: 0x117E510 Offset: 0x117E510 VA: 0x117E510
	public bool get_enabled() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2BC8 Offset: 0xCD2BC8 VA: 0xCD2BC8
	// RVA: 0x117E4E4 Offset: 0x117E4E4 VA: 0x117E4E4
	private void set_enabled(bool value) { }
}

// Namespace: 
public class SubmarineSelectScannerListViewItemDraw : MonoBehaviour // TypeDefIndex: 10971
{
	// Fields
	[SerializeField] // RVA: 0xC7BD38 Offset: 0xC7BD38 VA: 0xC7BD38
	private UISprite icon; // 0x18
	[SerializeField] // RVA: 0xC7BD48 Offset: 0xC7BD48 VA: 0xC7BD48
	private UILabel nameLabel; // 0x20
	[SerializeField] // RVA: 0xC7BD58 Offset: 0xC7BD58 VA: 0xC7BD58
	private UILabel itemDescLabel; // 0x28
	[SerializeField] // RVA: 0xC7BD68 Offset: 0xC7BD68 VA: 0xC7BD68
	private UISprite darkMask; // 0x30
	[SerializeField] // RVA: 0xC7BD78 Offset: 0xC7BD78 VA: 0xC7BD78
	protected UISprite[] itemIcon; // 0x38
	[SerializeField] // RVA: 0xC7BD88 Offset: 0xC7BD88 VA: 0xC7BD88
	protected UILabel[] itemNumLabel; // 0x40

	// Methods

	// RVA: 0x117E518 Offset: 0x117E518 VA: 0x117E518
	public void .ctor() { }

	// RVA: 0x117E520 Offset: 0x117E520 VA: 0x117E520
	public void UpdateUi(SubmarineSelectScannerListViewItem item) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC457C4 Offset: 0xC457C4 VA: 0xC457C4
private sealed class SubmarineSelectScannerListViewItemDraw.<UpdateUi>c__AnonStorey0 // TypeDefIndex: 10972
{
	// Fields
	internal SubmarineSelectScannerListViewItem item; // 0x10
	internal SubmarineSelectScannerListViewItemDraw $this; // 0x18

	// Methods

	// RVA: 0x117ED80 Offset: 0x117ED80 VA: 0x117ED80
	public void .ctor() { }

	// RVA: 0x117ED88 Offset: 0x117ED88 VA: 0x117ED88
	internal void <>m__0() { }
}

// Namespace: 
public class SubmarineSelectScannerListViewItemObject : ListViewObject // TypeDefIndex: 10973
{
	// Fields
	protected SubmarineSelectScannerListViewItemDraw itemDraw; // 0x70

	// Methods

	// RVA: 0x117EE88 Offset: 0x117EE88 VA: 0x117EE88
	public void .ctor() { }

	// RVA: 0x117EEF0 Offset: 0x117EEF0 VA: 0x117EEF0
	protected void Awake() { }

	// RVA: 0x117EF64 Offset: 0x117EF64 VA: 0x117EF64 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }
}

// Namespace: 
public class SubmarineSelectScannerListViewManager : ListViewManager // TypeDefIndex: 10974
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC7BD98 Offset: 0xC7BD98 VA: 0xC7BD98
	[DebuggerBrowsableAttribute] // RVA: 0xC7BD98 Offset: 0xC7BD98 VA: 0xC7BD98
	private Action<int, bool> <OnClickItemAction>k__BackingField; // 0x138

	// Properties
	public Action<int, bool> OnClickItemAction { get; set; }

	// Methods

	// RVA: 0x117F074 Offset: 0x117F074 VA: 0x117F074
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2BD8 Offset: 0xCD2BD8 VA: 0xCD2BD8
	// RVA: 0x117F07C Offset: 0x117F07C VA: 0x117F07C
	public Action<int, bool> get_OnClickItemAction() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2BE8 Offset: 0xCD2BE8 VA: 0xCD2BE8
	// RVA: 0x117E064 Offset: 0x117E064 VA: 0x117E064
	public void set_OnClickItemAction(Action<int, bool> value) { }

	// RVA: 0x117DDBC Offset: 0x117DDBC VA: 0x117DDBC
	public void CreateList(int eventId) { }

	// RVA: 0x117F084 Offset: 0x117F084 VA: 0x117F084
	public void OnClickListView(ListViewObject obj) { }
}

// Namespace: 
public class GridLineTextureUtil // TypeDefIndex: 10975
{
	// Methods

	// RVA: 0x1BB5B48 Offset: 0x1BB5B48 VA: 0x1BB5B48
	public void .ctor() { }

	// RVA: 0x1BB5B50 Offset: 0x1BB5B50 VA: 0x1BB5B50
	public static Texture2D CreateWholeGridTexture(int[] excludePanelUniqueIds, SubmarinePanelPositionCalculator positionCalculator, Texture2D gridTexture) { }

	// RVA: 0x1BB5DF8 Offset: 0x1BB5DF8 VA: 0x1BB5DF8
	private static int GetSliceIndex(int hIndex, int vIndex, int[] excludePanelUniqueIds, SubmarinePanelPositionCalculator positionCalculator) { }

	// RVA: 0x1BB60B4 Offset: 0x1BB60B4 VA: 0x1BB60B4
	private static void ApplyTextureColor(Color[] resultColors, int resultTextureWidth, Color[] baseColors, int baseTextureWidth, int hIndex, int vIndex, int panelUnitSizeX, int panelUnitSizeY, int sliceIndex) { }
}

// Namespace: 
public class SubmarineHideSpotPerformance : SchedulerTaskBase // TypeDefIndex: 10976
{
	// Fields
	private SrcSpotBasePrefab spot; // 0x30
	private bool spotAnimFinished; // 0x38

	// Methods

	// RVA: 0x17A9A4C Offset: 0x17A9A4C VA: 0x17A9A4C
	public void .ctor(SrcSpotBasePrefab spot) { }

	// RVA: 0x17A9A78 Offset: 0x17A9A78 VA: 0x17A9A78 Slot: 5
	public override void OnStart() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD2BF8 Offset: 0xCD2BF8 VA: 0xCD2BF8
	// RVA: 0x17A9B1C Offset: 0x17A9B1C VA: 0x17A9B1C Slot: 4
	public override IEnumerator Execute() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2C08 Offset: 0xCD2C08 VA: 0xCD2C08
	// RVA: 0x17A9B94 Offset: 0x17A9B94 VA: 0x17A9B94
	private void <OnStart>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC457D4 Offset: 0xC457D4 VA: 0xC457D4
private sealed class SubmarineHideSpotPerformance.<Execute>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 10977
{
	// Fields
	internal SubmarineHideSpotPerformance $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDCC60 Offset: 0xCDCC60 VA: 0xCDCC60
	// RVA: 0x17A9B8C Offset: 0x17A9B8C VA: 0x17A9B8C
	public void .ctor() { }

	// RVA: 0x17A9BF0 Offset: 0x17A9BF0 VA: 0x17A9BF0 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCC70 Offset: 0xCDCC70 VA: 0xCDCC70
	// RVA: 0x17A9CE8 Offset: 0x17A9CE8 VA: 0x17A9CE8 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCC80 Offset: 0xCDCC80 VA: 0xCDCC80
	// RVA: 0x17A9CF0 Offset: 0x17A9CF0 VA: 0x17A9CF0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCC90 Offset: 0xCDCC90 VA: 0xCDCC90
	// RVA: 0x17A9CF8 Offset: 0x17A9CF8 VA: 0x17A9CF8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCCA0 Offset: 0xCDCCA0 VA: 0xCDCCA0
	// RVA: 0x17A9D0C Offset: 0x17A9D0C VA: 0x17A9D0C Slot: 6
	public void Reset() { }

	// RVA: 0x17A9D74 Offset: 0x17A9D74 VA: 0x17A9D74
	internal bool <>m__0() { }
}

// Namespace: 
public class SubmarineLightenSpotPerformance : SchedulerTaskBase // TypeDefIndex: 10978
{
	// Fields
	private SrcSpotBasePrefab spot; // 0x30
	private bool spotAnimFinished; // 0x38

	// Methods

	// RVA: 0x17A9DA0 Offset: 0x17A9DA0 VA: 0x17A9DA0
	public void .ctor(SrcSpotBasePrefab spot) { }

	// RVA: 0x17A9DCC Offset: 0x17A9DCC VA: 0x17A9DCC Slot: 5
	public override void OnStart() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD2C18 Offset: 0xCD2C18 VA: 0xCD2C18
	// RVA: 0x17A9E70 Offset: 0x17A9E70 VA: 0x17A9E70 Slot: 4
	public override IEnumerator Execute() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2C28 Offset: 0xCD2C28 VA: 0xCD2C28
	// RVA: 0x17A9EE8 Offset: 0x17A9EE8 VA: 0x17A9EE8
	private void <OnStart>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC457E4 Offset: 0xC457E4 VA: 0xC457E4
private sealed class SubmarineLightenSpotPerformance.<Execute>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 10979
{
	// Fields
	internal SubmarineLightenSpotPerformance $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDCCB0 Offset: 0xCDCCB0 VA: 0xCDCCB0
	// RVA: 0x17A9EE0 Offset: 0x17A9EE0 VA: 0x17A9EE0
	public void .ctor() { }

	// RVA: 0x17A9F6C Offset: 0x17A9F6C VA: 0x17A9F6C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCCC0 Offset: 0xCDCCC0 VA: 0xCDCCC0
	// RVA: 0x17AA064 Offset: 0x17AA064 VA: 0x17AA064 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCCD0 Offset: 0xCDCCD0 VA: 0xCDCCD0
	// RVA: 0x17AA06C Offset: 0x17AA06C VA: 0x17AA06C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCCE0 Offset: 0xCDCCE0 VA: 0xCDCCE0
	// RVA: 0x17AA074 Offset: 0x17AA074 VA: 0x17AA074 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCCF0 Offset: 0xCDCCF0 VA: 0xCDCCF0
	// RVA: 0x17AA088 Offset: 0x17AA088 VA: 0x17AA088 Slot: 6
	public void Reset() { }

	// RVA: 0x17AA0F0 Offset: 0x17AA0F0 VA: 0x17AA0F0
	internal bool <>m__0() { }
}

// Namespace: 
public class SubmarineRevealSpotPerformance : SchedulerTaskBase // TypeDefIndex: 10980
{
	// Fields
	private SrcSpotBasePrefab spot; // 0x30
	private bool spotAnimFinished; // 0x38

	// Methods

	// RVA: 0x117B3E4 Offset: 0x117B3E4 VA: 0x117B3E4
	public void .ctor(SrcSpotBasePrefab spot) { }

	// RVA: 0x117B410 Offset: 0x117B410 VA: 0x117B410 Slot: 5
	public override void OnStart() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD2C38 Offset: 0xCD2C38 VA: 0xCD2C38
	// RVA: 0x117B4B4 Offset: 0x117B4B4 VA: 0x117B4B4 Slot: 4
	public override IEnumerator Execute() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2C48 Offset: 0xCD2C48 VA: 0xCD2C48
	// RVA: 0x117B52C Offset: 0x117B52C VA: 0x117B52C
	private void <OnStart>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC457F4 Offset: 0xC457F4 VA: 0xC457F4
private sealed class SubmarineRevealSpotPerformance.<Execute>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 10981
{
	// Fields
	internal SubmarineRevealSpotPerformance $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDCD00 Offset: 0xCDCD00 VA: 0xCDCD00
	// RVA: 0x117B524 Offset: 0x117B524 VA: 0x117B524
	public void .ctor() { }

	// RVA: 0x117B588 Offset: 0x117B588 VA: 0x117B588 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCD10 Offset: 0xCDCD10 VA: 0xCDCD10
	// RVA: 0x117B680 Offset: 0x117B680 VA: 0x117B680 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCD20 Offset: 0xCDCD20 VA: 0xCDCD20
	// RVA: 0x117B688 Offset: 0x117B688 VA: 0x117B688 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCD30 Offset: 0xCDCD30 VA: 0xCDCD30
	// RVA: 0x117B690 Offset: 0x117B690 VA: 0x117B690 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCD40 Offset: 0xCDCD40 VA: 0xCDCD40
	// RVA: 0x117B6A4 Offset: 0x117B6A4 VA: 0x117B6A4 Slot: 6
	public void Reset() { }

	// RVA: 0x117B70C Offset: 0x117B70C VA: 0x117B70C
	internal bool <>m__0() { }
}

// Namespace: 
public class SubmarineMapAssetManager // TypeDefIndex: 10982
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC7BDD4 Offset: 0xC7BDD4 VA: 0xC7BDD4
	[DebuggerBrowsableAttribute] // RVA: 0xC7BDD4 Offset: 0xC7BDD4 VA: 0xC7BDD4
	private GameObject <PanelPrefab>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC7BE10 Offset: 0xC7BE10 VA: 0xC7BE10
	[DebuggerBrowsableAttribute] // RVA: 0xC7BE10 Offset: 0xC7BE10 VA: 0xC7BE10
	private GameObject <GridLinePrefab>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC7BE4C Offset: 0xC7BE4C VA: 0xC7BE4C
	[DebuggerBrowsableAttribute] // RVA: 0xC7BE4C Offset: 0xC7BE4C VA: 0xC7BE4C
	private GameObject <PanelContainerPrefab>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC7BE88 Offset: 0xC7BE88 VA: 0xC7BE88
	[DebuggerBrowsableAttribute] // RVA: 0xC7BE88 Offset: 0xC7BE88 VA: 0xC7BE88
	private GameObject <EffectContainerPrefab>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC7BEC4 Offset: 0xC7BEC4 VA: 0xC7BEC4
	[DebuggerBrowsableAttribute] // RVA: 0xC7BEC4 Offset: 0xC7BEC4 VA: 0xC7BEC4
	private Texture2D <ClosedPanelTexture>k__BackingField; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC7BF00 Offset: 0xC7BF00 VA: 0xC7BF00
	[DebuggerBrowsableAttribute] // RVA: 0xC7BF00 Offset: 0xC7BF00 VA: 0xC7BF00
	private Texture2D <GridTexture>k__BackingField; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC7BF3C Offset: 0xC7BF3C VA: 0xC7BF3C
	[DebuggerBrowsableAttribute] // RVA: 0xC7BF3C Offset: 0xC7BF3C VA: 0xC7BF3C
	private GameObject <EffectScannedPanelPrefab>k__BackingField; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC7BF78 Offset: 0xC7BF78 VA: 0xC7BF78
	[DebuggerBrowsableAttribute] // RVA: 0xC7BF78 Offset: 0xC7BF78 VA: 0xC7BF78
	private GameObject <EffectSelectedPanelPrefab>k__BackingField; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC7BFB4 Offset: 0xC7BFB4 VA: 0xC7BFB4
	[DebuggerBrowsableAttribute] // RVA: 0xC7BFB4 Offset: 0xC7BFB4 VA: 0xC7BFB4
	private GameObject <EffectScannablePanelPrafab>k__BackingField; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xC7BFF0 Offset: 0xC7BFF0 VA: 0xC7BFF0
	[DebuggerBrowsableAttribute] // RVA: 0xC7BFF0 Offset: 0xC7BFF0 VA: 0xC7BFF0
	private GameObject <EffectScanObstaclePanelPrafab>k__BackingField; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xC7C02C Offset: 0xC7C02C VA: 0xC7C02C
	[DebuggerBrowsableAttribute] // RVA: 0xC7C02C Offset: 0xC7C02C VA: 0xC7C02C
	private GameObject <ScanProcessPreventedPrafab>k__BackingField; // 0x60
	[CompilerGeneratedAttribute] // RVA: 0xC7C068 Offset: 0xC7C068 VA: 0xC7C068
	[DebuggerBrowsableAttribute] // RVA: 0xC7C068 Offset: 0xC7C068 VA: 0xC7C068
	private GameObject <SelectScannerDialogPrefab>k__BackingField; // 0x68
	[CompilerGeneratedAttribute] // RVA: 0xC7C0A4 Offset: 0xC7C0A4 VA: 0xC7C0A4
	[DebuggerBrowsableAttribute] // RVA: 0xC7C0A4 Offset: 0xC7C0A4 VA: 0xC7C0A4
	private GameObject <ScanConfirmDialogPrefab>k__BackingField; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC7C0E0 Offset: 0xC7C0E0 VA: 0xC7C0E0
	[DebuggerBrowsableAttribute] // RVA: 0xC7C0E0 Offset: 0xC7C0E0 VA: 0xC7C0E0
	private GameObject <NewScannerDialogPrefab>k__BackingField; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xC7C11C Offset: 0xC7C11C VA: 0xC7C11C
	[DebuggerBrowsableAttribute] // RVA: 0xC7C11C Offset: 0xC7C11C VA: 0xC7C11C
	private SubmarineSettings <Settings>k__BackingField; // 0x80
	private Dictionary<int, GameObject> scannerPrefabDict; // 0x88
	private Dictionary<int, GameObject> scanRangeNotificatorPrefabDict; // 0x90
	private string[] loadAssetNames; // 0x98

	// Properties
	public GameObject PanelPrefab { get; set; }
	public GameObject GridLinePrefab { get; set; }
	public GameObject PanelContainerPrefab { get; set; }
	public GameObject EffectContainerPrefab { get; set; }
	public Texture2D ClosedPanelTexture { get; set; }
	public Texture2D GridTexture { get; set; }
	public GameObject EffectScannedPanelPrefab { get; set; }
	public GameObject EffectSelectedPanelPrefab { get; set; }
	public GameObject EffectScannablePanelPrafab { get; set; }
	public GameObject EffectScanObstaclePanelPrafab { get; set; }
	public GameObject ScanProcessPreventedPrafab { get; set; }
	public GameObject SelectScannerDialogPrefab { get; set; }
	public GameObject ScanConfirmDialogPrefab { get; set; }
	public GameObject NewScannerDialogPrefab { get; set; }
	public SubmarineSettings Settings { get; set; }

	// Methods

	// RVA: 0x17AA11C Offset: 0x17AA11C VA: 0x17AA11C
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2C58 Offset: 0xCD2C58 VA: 0xCD2C58
	// RVA: 0x17AA1E0 Offset: 0x17AA1E0 VA: 0x17AA1E0
	public GameObject get_PanelPrefab() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2C68 Offset: 0xCD2C68 VA: 0xCD2C68
	// RVA: 0x17AA1E8 Offset: 0x17AA1E8 VA: 0x17AA1E8
	private void set_PanelPrefab(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2C78 Offset: 0xCD2C78 VA: 0xCD2C78
	// RVA: 0x17AA1F0 Offset: 0x17AA1F0 VA: 0x17AA1F0
	public GameObject get_GridLinePrefab() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2C88 Offset: 0xCD2C88 VA: 0xCD2C88
	// RVA: 0x17AA1F8 Offset: 0x17AA1F8 VA: 0x17AA1F8
	private void set_GridLinePrefab(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2C98 Offset: 0xCD2C98 VA: 0xCD2C98
	// RVA: 0x17AA200 Offset: 0x17AA200 VA: 0x17AA200
	public GameObject get_PanelContainerPrefab() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2CA8 Offset: 0xCD2CA8 VA: 0xCD2CA8
	// RVA: 0x17AA208 Offset: 0x17AA208 VA: 0x17AA208
	private void set_PanelContainerPrefab(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2CB8 Offset: 0xCD2CB8 VA: 0xCD2CB8
	// RVA: 0x17AA210 Offset: 0x17AA210 VA: 0x17AA210
	public GameObject get_EffectContainerPrefab() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2CC8 Offset: 0xCD2CC8 VA: 0xCD2CC8
	// RVA: 0x17AA218 Offset: 0x17AA218 VA: 0x17AA218
	private void set_EffectContainerPrefab(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2CD8 Offset: 0xCD2CD8 VA: 0xCD2CD8
	// RVA: 0x17AA220 Offset: 0x17AA220 VA: 0x17AA220
	public Texture2D get_ClosedPanelTexture() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2CE8 Offset: 0xCD2CE8 VA: 0xCD2CE8
	// RVA: 0x17AA228 Offset: 0x17AA228 VA: 0x17AA228
	private void set_ClosedPanelTexture(Texture2D value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2CF8 Offset: 0xCD2CF8 VA: 0xCD2CF8
	// RVA: 0x17AA230 Offset: 0x17AA230 VA: 0x17AA230
	public Texture2D get_GridTexture() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2D08 Offset: 0xCD2D08 VA: 0xCD2D08
	// RVA: 0x17AA238 Offset: 0x17AA238 VA: 0x17AA238
	private void set_GridTexture(Texture2D value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2D18 Offset: 0xCD2D18 VA: 0xCD2D18
	// RVA: 0x17AA240 Offset: 0x17AA240 VA: 0x17AA240
	public GameObject get_EffectScannedPanelPrefab() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2D28 Offset: 0xCD2D28 VA: 0xCD2D28
	// RVA: 0x17AA248 Offset: 0x17AA248 VA: 0x17AA248
	private void set_EffectScannedPanelPrefab(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2D38 Offset: 0xCD2D38 VA: 0xCD2D38
	// RVA: 0x17AA250 Offset: 0x17AA250 VA: 0x17AA250
	public GameObject get_EffectSelectedPanelPrefab() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2D48 Offset: 0xCD2D48 VA: 0xCD2D48
	// RVA: 0x17AA258 Offset: 0x17AA258 VA: 0x17AA258
	private void set_EffectSelectedPanelPrefab(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2D58 Offset: 0xCD2D58 VA: 0xCD2D58
	// RVA: 0x17AA260 Offset: 0x17AA260 VA: 0x17AA260
	public GameObject get_EffectScannablePanelPrafab() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2D68 Offset: 0xCD2D68 VA: 0xCD2D68
	// RVA: 0x17AA268 Offset: 0x17AA268 VA: 0x17AA268
	private void set_EffectScannablePanelPrafab(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2D78 Offset: 0xCD2D78 VA: 0xCD2D78
	// RVA: 0x17AA270 Offset: 0x17AA270 VA: 0x17AA270
	public GameObject get_EffectScanObstaclePanelPrafab() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2D88 Offset: 0xCD2D88 VA: 0xCD2D88
	// RVA: 0x17AA278 Offset: 0x17AA278 VA: 0x17AA278
	private void set_EffectScanObstaclePanelPrafab(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2D98 Offset: 0xCD2D98 VA: 0xCD2D98
	// RVA: 0x17AA280 Offset: 0x17AA280 VA: 0x17AA280
	public GameObject get_ScanProcessPreventedPrafab() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2DA8 Offset: 0xCD2DA8 VA: 0xCD2DA8
	// RVA: 0x17AA288 Offset: 0x17AA288 VA: 0x17AA288
	private void set_ScanProcessPreventedPrafab(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2DB8 Offset: 0xCD2DB8 VA: 0xCD2DB8
	// RVA: 0x17AA290 Offset: 0x17AA290 VA: 0x17AA290
	public GameObject get_SelectScannerDialogPrefab() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2DC8 Offset: 0xCD2DC8 VA: 0xCD2DC8
	// RVA: 0x17AA298 Offset: 0x17AA298 VA: 0x17AA298
	private void set_SelectScannerDialogPrefab(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2DD8 Offset: 0xCD2DD8 VA: 0xCD2DD8
	// RVA: 0x17AA2A0 Offset: 0x17AA2A0 VA: 0x17AA2A0
	public GameObject get_ScanConfirmDialogPrefab() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2DE8 Offset: 0xCD2DE8 VA: 0xCD2DE8
	// RVA: 0x17AA2A8 Offset: 0x17AA2A8 VA: 0x17AA2A8
	private void set_ScanConfirmDialogPrefab(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2DF8 Offset: 0xCD2DF8 VA: 0xCD2DF8
	// RVA: 0x17AA2B0 Offset: 0x17AA2B0 VA: 0x17AA2B0
	public GameObject get_NewScannerDialogPrefab() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2E08 Offset: 0xCD2E08 VA: 0xCD2E08
	// RVA: 0x17AA2B8 Offset: 0x17AA2B8 VA: 0x17AA2B8
	private void set_NewScannerDialogPrefab(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2E18 Offset: 0xCD2E18 VA: 0xCD2E18
	// RVA: 0x17AA2C0 Offset: 0x17AA2C0 VA: 0x17AA2C0
	public SubmarineSettings get_Settings() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2E28 Offset: 0xCD2E28 VA: 0xCD2E28
	// RVA: 0x17AA2C8 Offset: 0x17AA2C8 VA: 0x17AA2C8
	private void set_Settings(SubmarineSettings value) { }

	// RVA: 0x17AA2D0 Offset: 0x17AA2D0 VA: 0x17AA2D0
	public void Initialize() { }

	// RVA: 0x17AA358 Offset: 0x17AA358 VA: 0x17AA358
	public void LoadMapObject(AssetData assetData, int mapId) { }

	[DebuggerHiddenAttribute] // RVA: 0xCD2E38 Offset: 0xCD2E38 VA: 0xCD2E38
	// RVA: 0x17AA434 Offset: 0x17AA434 VA: 0x17AA434
	public IEnumerator CoLoadAssets(int eventId, Action finishCallback) { }

	// RVA: 0x17AA4E8 Offset: 0x17AA4E8 VA: 0x17AA4E8
	public GameObject GetScanAnimObjectPrefab(int scanObjectId) { }

	// RVA: 0x17AA568 Offset: 0x17AA568 VA: 0x17AA568
	public GameObject GetScanRangeNotificatorPrefab(int scanObjectId) { }

	// RVA: 0x17AA5E8 Offset: 0x17AA5E8 VA: 0x17AA5E8
	public void Finish() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45804 Offset: 0xC45804 VA: 0xC45804
private sealed class SubmarineMapAssetManager.<CoLoadAssets>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 10983
{
	// Fields
	internal AssetData <assetData>__0; // 0x10
	internal int eventId; // 0x18
	internal EventPanelScanEntity[] <scanEntityList>__0; // 0x20
	internal IEnumerable<int> <scanObjectIds>__0; // 0x28
	internal Regex <regex>__0; // 0x30
	internal string[] $locvar0; // 0x38
	internal int $locvar1; // 0x40
	internal string[] $locvar2; // 0x48
	internal int $locvar3; // 0x50
	internal Action finishCallback; // 0x58
	internal SubmarineMapAssetManager $this; // 0x60
	internal object $current; // 0x68
	internal bool $disposing; // 0x70
	internal int $PC; // 0x74
	private SubmarineMapAssetManager.<CoLoadAssets>c__Iterator0.<CoLoadAssets>c__AnonStorey1 $locvar4; // 0x78
	private static Func<EventPanelScanEntity, int> <>f__am$cache0; // 0x0

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDCD50 Offset: 0xCDCD50 VA: 0xCDCD50
	// RVA: 0x17AA4E0 Offset: 0x17AA4E0 VA: 0x17AA4E0
	public void .ctor() { }

	// RVA: 0x17AA6AC Offset: 0x17AA6AC VA: 0x17AA6AC Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCD60 Offset: 0xCDCD60 VA: 0xCDCD60
	// RVA: 0x17AB140 Offset: 0x17AB140 VA: 0x17AB140 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCD70 Offset: 0xCDCD70 VA: 0xCDCD70
	// RVA: 0x17AB148 Offset: 0x17AB148 VA: 0x17AB148 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCD80 Offset: 0xCDCD80 VA: 0xCDCD80
	// RVA: 0x17AB150 Offset: 0x17AB150 VA: 0x17AB150 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCD90 Offset: 0xCDCD90 VA: 0xCDCD90
	// RVA: 0x17AB164 Offset: 0x17AB164 VA: 0x17AB164 Slot: 6
	public void Reset() { }

	// RVA: 0x17AB1CC Offset: 0x17AB1CC VA: 0x17AB1CC
	private static int <>m__0(EventPanelScanEntity x) { }
}

// Namespace: 
private sealed class SubmarineMapAssetManager.<CoLoadAssets>c__Iterator0.<CoLoadAssets>c__AnonStorey1 // TypeDefIndex: 10984
{
	// Fields
	internal bool loadEnd; // 0x10
	internal SubmarineMapAssetManager.<CoLoadAssets>c__Iterator0 <>f__ref$0; // 0x18

	// Methods

	// RVA: 0x17AB138 Offset: 0x17AB138 VA: 0x17AB138
	public void .ctor() { }

	// RVA: 0x17AB1F4 Offset: 0x17AB1F4 VA: 0x17AB1F4
	internal void <>m__0() { }

	// RVA: 0x17AB200 Offset: 0x17AB200 VA: 0x17AB200
	internal bool <>m__1() { }
}

// Namespace: 
public class SubmarineMapManager : EventMapManagerBase // TypeDefIndex: 10985
{
	// Fields
	private GameObject panelContainer; // 0x68
	private GameObject effectContainer; // 0x70
	private Texture2D closedPanelTexture; // 0x78
	private GameObject gridLine; // 0x80
	private TaskScheduler taskScheduler; // 0x88
	private SubmarineMapDataManager submarineData; // 0x90
	private SubmarineMapAssetManager assetManager; // 0x98
	private bool initRequestFinished; // 0xA0
	private SubmarineScanConfirmDialog scanConfirmDialog; // 0xA8
	private SubmarineSelectScannerDialog selectScannerDialog; // 0xB0
	private SubmarineNewScannerDialog newScannerDialog; // 0xB8
	private ComponentPool<CommonEffectComponent> effectScanedPanelObjPool; // 0xC0
	private ComponentPool<SubmarineEffectScanObstaclePanelComponent> effectScanObstaclePanelObjPool; // 0xC8
	private ComponentPool<SubmarineEffectScannablePanelComponent> effectScannablePanelObjPool; // 0xD0
	private ComponentPool<SubmarineEffectSelectedPanelComponent> effectSelectedPanelObjPool; // 0xD8
	private GameObject scanRangeNotificator; // 0xE0
	private bool isShowScannableEffect; // 0xE8
	private bool isShowScanObstacleEffect; // 0xE9
	[CompilerGeneratedAttribute] // RVA: 0xC7C158 Offset: 0xC7C158 VA: 0xC7C158
	private static Predicate<SubmarineScanEvent> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC7C168 Offset: 0xC7C168 VA: 0xC7C168
	private static Func<SubmarineScanEvent, int> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC7C178 Offset: 0xC7C178 VA: 0xC7C178
	private static Predicate<SubmarineMapPanelData> <>f__am$cache2; // 0x10

	// Properties
	private SubmarinePanelPositionCalculator positionCalculator { get; }
	private SubmarineSettingsManager settings { get; }
	private int eventId { get; }

	// Methods

	// RVA: 0x17ACD28 Offset: 0x17ACD28 VA: 0x17ACD28
	public void .ctor() { }

	// RVA: 0x17ACD30 Offset: 0x17ACD30 VA: 0x17ACD30
	private SubmarinePanelPositionCalculator get_positionCalculator() { }

	// RVA: 0x17ACD5C Offset: 0x17ACD5C VA: 0x17ACD5C
	private SubmarineSettingsManager get_settings() { }

	// RVA: 0x17ACD88 Offset: 0x17ACD88 VA: 0x17ACD88
	private int get_eventId() { }

	// RVA: 0x17ACDB4 Offset: 0x17ACDB4 VA: 0x17ACDB4 Slot: 17
	public override void Initialize() { }

	// RVA: 0x17ACEA8 Offset: 0x17ACEA8 VA: 0x17ACEA8 Slot: 18
	public override void LoadAssets(Action finishCallback) { }

	[DebuggerHiddenAttribute] // RVA: 0xCD2E48 Offset: 0xCD2E48 VA: 0xCD2E48
	// RVA: 0x17ACF94 Offset: 0x17ACF94 VA: 0x17ACF94
	private IEnumerator CoInitRequest(Action finishCallback) { }

	// RVA: 0x17AD028 Offset: 0x17AD028 VA: 0x17AD028 Slot: 19
	public override void ExtractMapObjectFromAssetData(AssetData assetData) { }

	// RVA: 0x17AD110 Offset: 0x17AD110 VA: 0x17AD110 Slot: 20
	public override void OnAfterSpotCreated(Action finishCallback) { }

	[DebuggerHiddenAttribute] // RVA: 0xCD2E58 Offset: 0xCD2E58 VA: 0xCD2E58
	// RVA: 0x17AD13C Offset: 0x17AD13C VA: 0x17AD13C
	private IEnumerator CoOnAfterSpotCreated(Action finishCallback) { }

	// RVA: 0x17AD1D0 Offset: 0x17AD1D0 VA: 0x17AD1D0 Slot: 21
	public override bool IsShowQuestListWhenComingBackToMap() { }

	// RVA: 0x17AD2D8 Offset: 0x17AD2D8 VA: 0x17AD2D8 Slot: 22
	public override void OnBeforeQuestAfterAction(Action finishCallback) { }

	// RVA: 0x17AD554 Offset: 0x17AD554 VA: 0x17AD554 Slot: 23
	public override void OnAfterQuestAfterAction(Action finishCallback) { }

	// RVA: 0x17AD750 Offset: 0x17AD750 VA: 0x17AD750 Slot: 24
	public override void OnEveryActionEnd() { }

	// RVA: 0x17AD818 Offset: 0x17AD818 VA: 0x17AD818 Slot: 25
	public override void DestroyMapObjects() { }

	// RVA: 0x17ADA74 Offset: 0x17ADA74 VA: 0x17ADA74 Slot: 26
	public override void ReleaseAssets() { }

	// RVA: 0x17ADB44 Offset: 0x17ADB44 VA: 0x17ADB44 Slot: 27
	public override void Finish() { }

	// RVA: 0x17ADB50 Offset: 0x17ADB50 VA: 0x17ADB50
	private void TryInitRequest() { }

	// RVA: 0x17AD090 Offset: 0x17AD090 VA: 0x17AD090
	private void CreateAssetManagerIfNotExists() { }

	// RVA: 0x17AD1EC Offset: 0x17AD1EC VA: 0x17AD1EC
	private bool HasSelfQuestAfterAction() { }

	// RVA: 0x17AD39C Offset: 0x17AD39C VA: 0x17AD39C
	private void DoPerformancesByVariedCond(Action finishCallback) { }

	// RVA: 0x17AE6E4 Offset: 0x17AE6E4 VA: 0x17AE6E4
	private void ClickPanel(SubmarineMapPanelData panelData) { }

	// RVA: 0x17AEA8C Offset: 0x17AEA8C VA: 0x17AEA8C
	private void OnScannerSelected(int scanId, SubmarineMapPanelData panelData) { }

	// RVA: 0x17AF6D4 Offset: 0x17AF6D4 VA: 0x17AF6D4
	private void OnScanDecided(int scanId, SubmarineMapPanelData panelData) { }

	// RVA: 0x17AF884 Offset: 0x17AF884 VA: 0x17AF884
	private void OnScanPanelRequestFinished(string result, int scanId, SubmarineMapPanelData panelData) { }

	// RVA: 0x17AFC94 Offset: 0x17AFC94 VA: 0x17AFC94
	private void StartScanPerformance(int scanId, SubmarineMapPanelData panelData) { }

	// RVA: 0x17B1398 Offset: 0x17B1398 VA: 0x17B1398
	private void SubsequentialOpenPanelTaskChain(Action finishCallback) { }

	// RVA: 0x17B15A8 Offset: 0x17B15A8 VA: 0x17B15A8
	private void RevealAvailableSpots(Action finishCallback) { }

	// RVA: 0x17AFF70 Offset: 0x17AFF70 VA: 0x17AFF70
	private void OnEndScan() { }

	// RVA: 0x17AD5C0 Offset: 0x17AD5C0 VA: 0x17AD5C0
	private void UpdateParams(int beforeClearQuestId = -1) { }

	// RVA: 0x17AD5F4 Offset: 0x17AD5F4 VA: 0x17AD5F4
	private void UpdateClosedPanelDisplay() { }

	// RVA: 0x17AECD0 Offset: 0x17AECD0 VA: 0x17AECD0
	private void UserControllable(bool value) { }

	// RVA: 0x17B198C Offset: 0x17B198C VA: 0x17B198C
	private void UpdateTerminalInfo() { }

	// RVA: 0x17B1CEC Offset: 0x17B1CEC VA: 0x17B1CEC
	private void CreateContainers() { }

	// RVA: 0x17B1E78 Offset: 0x17B1E78 VA: 0x17B1E78
	private void CreatePanels() { }

	// RVA: 0x17B22D8 Offset: 0x17B22D8 VA: 0x17B22D8
	private void CreateNeverOpenSurrounds() { }

	// RVA: 0x17B28D8 Offset: 0x17B28D8 VA: 0x17B28D8
	private void SetGridLine() { }

	// RVA: 0x17B2B58 Offset: 0x17B2B58 VA: 0x17B2B58
	public void AdjustSpotPosition(SrcSpotBasePrefab spot) { }

	// RVA: 0x17B2DBC Offset: 0x17B2DBC VA: 0x17B2DBC
	private void AdjustSpotCollider(SrcSpotBasePrefab spot) { }

	// RVA: 0x17B2EBC Offset: 0x17B2EBC VA: 0x17B2EBC
	private void AdjustEachSpotsPositions() { }

	// RVA: 0x17B2FD0 Offset: 0x17B2FD0 VA: 0x17B2FD0
	private SrcSpotBasePrefab GetHomeSpot() { }

	// RVA: 0x17B31C4 Offset: 0x17B31C4 VA: 0x17B31C4
	private void AdjustSilhouetteGimmicks() { }

	// RVA: 0x17B3B8C Offset: 0x17B3B8C VA: 0x17B3B8C
	private void AdjustDepth(GameObject go, int minDepth) { }

	// RVA: 0x17B3D68 Offset: 0x17B3D68 VA: 0x17B3D68
	private void Update() { }

	// RVA: 0x17B3D7C Offset: 0x17B3D7C VA: 0x17B3D7C
	private void ConstructOnPartOfDialog() { }

	// RVA: 0x17B3FD0 Offset: 0x17B3FD0 VA: 0x17B3FD0
	private void OpenSelectScannerDialog(Action<int> callback) { }

	// RVA: 0x17B4114 Offset: 0x17B4114 VA: 0x17B4114
	private void TryOpenNewScannerDialog() { }

	// RVA: 0x17B41DC Offset: 0x17B41DC VA: 0x17B41DC
	private void OpenScanConfirmDialog(int scanId, bool isShowDialogUpper, Action<bool> callback) { }

	// RVA: 0x17AD8B0 Offset: 0x17AD8B0 VA: 0x17AD8B0
