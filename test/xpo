	// RVA: 0x12FE310 Offset: 0x12FE310 VA: 0x12FE310
	public void .ctor() { }

	// RVA: 0x12FE320 Offset: 0x12FE320 VA: 0x12FE320 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12FE404 Offset: 0x12FE404 VA: 0x12FE404
	public bool Check(BattleAttackManager manager) { }
}

// Namespace: 
public enum FGOCheckAttackSide.CheckType // TypeDefIndex: 7991
{
	// Fields
	public int value__; // 0x0
	public const FGOCheckAttackSide.CheckType NEXT = 0;
	public const FGOCheckAttackSide.CheckType TURN_START = 1;
	public const FGOCheckAttackSide.CheckType TURN_END = 2;
	public const FGOCheckAttackSide.CheckType NEXT_ACTION_ATTACKED = 3;
	public const FGOCheckAttackSide.CheckType PREV_ACTION_ATTACKED = 4;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27360 Offset: 0xC27360 VA: 0xC27360
public class FGOCheckBattleFaze : FsmStateAction // TypeDefIndex: 7992
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5A760 Offset: 0xC5A760 VA: 0xC5A760
	[CheckForComponentAttribute] // RVA: 0xC5A760 Offset: 0xC5A760 VA: 0xC5A760
	public FsmGameObject gameObject; // 0x50
	public FGOCheckBattleFaze.FAZE Faze; // 0x58
	public FsmEvent sendEvent; // 0x60

	// Methods

	// RVA: 0x12FE514 Offset: 0x12FE514 VA: 0x12FE514
	public void .ctor() { }

	// RVA: 0x12FE51C Offset: 0x12FE51C VA: 0x12FE51C Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOCheckBattleFaze.FAZE // TypeDefIndex: 7993
{
	// Fields
	public int value__; // 0x0
	public const FGOCheckBattleFaze.FAZE TACTICAL = 0;
	public const FGOCheckBattleFaze.FAZE BATTLE = 1;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27398 Offset: 0xC27398 VA: 0xC27398
public class FGOCheckBattleHighSpeedNow : FsmStateAction // TypeDefIndex: 7994
{
	// Fields
	public FsmGameObject performance; // 0x50
	[TooltipAttribute] // RVA: 0xC5A7D4 Offset: 0xC5A7D4 VA: 0xC5A7D4
	public FsmEvent highSpeedEvent; // 0x58

	// Methods

	// RVA: 0x12FE660 Offset: 0x12FE660 VA: 0x12FE660
	public void .ctor() { }

	// RVA: 0x12FE668 Offset: 0x12FE668 VA: 0x12FE668 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC273D0 Offset: 0xC273D0 VA: 0xC273D0
public class FGOCheckBattleSpeed : FsmStateAction // TypeDefIndex: 7995
{
	// Fields
	public FsmGameObject performance; // 0x50
	[TooltipAttribute] // RVA: 0xC5A80C Offset: 0xC5A80C VA: 0xC5A80C
	public FsmEvent highSpeedEvent; // 0x58

	// Methods

	// RVA: 0x12FE790 Offset: 0x12FE790 VA: 0x12FE790
	public void .ctor() { }

	// RVA: 0x12FE798 Offset: 0x12FE798 VA: 0x12FE798 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27408 Offset: 0xC27408 VA: 0xC27408
public class FGOCheckMotionSkipBuffList : FsmStateAction // TypeDefIndex: 7996
{
	// Fields
	[CheckForComponentAttribute] // RVA: 0xC5A844 Offset: 0xC5A844 VA: 0xC5A844
	public FsmGameObject performance; // 0x50
	[CheckForComponentAttribute] // RVA: 0xC5A8A8 Offset: 0xC5A8A8 VA: 0xC5A8A8
	public FsmGameObject targetActor; // 0x58
	[RequiredFieldAttribute] // RVA: 0xC5A90C Offset: 0xC5A90C VA: 0xC5A90C
	public FsmEvent trueEvent; // 0x60
	public bool isCheckApp; // 0x68

	// Methods

	// RVA: 0x12FE8C0 Offset: 0x12FE8C0 VA: 0x12FE8C0
	public void .ctor() { }

	// RVA: 0x12FE8D0 Offset: 0x12FE8D0 VA: 0x12FE8D0 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC430B4 Offset: 0xC430B4 VA: 0xC430B4
private sealed class FGOCheckMotionSkipBuffList.<OnEnter>c__AnonStorey0 // TypeDefIndex: 7997
{
	// Fields
	internal int targetId; // 0x10

	// Methods

	// RVA: 0x12FED90 Offset: 0x12FED90 VA: 0x12FED90
	public void .ctor() { }

	// RVA: 0x12FED98 Offset: 0x12FED98 VA: 0x12FED98
	internal bool <>m__0(BattleBuffData.BuffData b) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27440 Offset: 0xC27440 VA: 0xC27440
public class FGOCheckMotionSkipVanishSkill : FsmStateAction // TypeDefIndex: 7998
{
	// Fields
	[CheckForComponentAttribute] // RVA: 0xC5A91C Offset: 0xC5A91C VA: 0xC5A91C
	public FsmGameObject performance; // 0x50
	[CheckForComponentAttribute] // RVA: 0xC5A980 Offset: 0xC5A980 VA: 0xC5A980
	public FsmGameObject targetActor; // 0x58
	[RequiredFieldAttribute] // RVA: 0xC5A9E4 Offset: 0xC5A9E4 VA: 0xC5A9E4
	public FsmEvent trueEvent; // 0x60

	// Methods

	// RVA: 0x12FEDD4 Offset: 0x12FEDD4 VA: 0x12FEDD4
	public void .ctor() { }

	// RVA: 0x12FEDDC Offset: 0x12FEDDC VA: 0x12FEDDC Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27478 Offset: 0xC27478 VA: 0xC27478
public class FGOCheckQuestPhaseScript : FsmStateAction // TypeDefIndex: 7999
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5A9F4 Offset: 0xC5A9F4 VA: 0xC5A9F4
	[CheckForComponentAttribute] // RVA: 0xC5A9F4 Offset: 0xC5A9F4 VA: 0xC5A9F4
	public FsmGameObject perfObject; // 0x50
	public FsmString keyStr; // 0x58
	public FsmInt defaultValue; // 0x60
	public FsmInt storeValue; // 0x68

	// Methods

	// RVA: 0x12FEF94 Offset: 0x12FEF94 VA: 0x12FEF94
	public void .ctor() { }

	// RVA: 0x12FEF9C Offset: 0x12FEF9C VA: 0x12FEF9C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC274B0 Offset: 0xC274B0 VA: 0xC274B0
public class FGOCheckSkipDead : FsmStateAction // TypeDefIndex: 8000
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5AA68 Offset: 0xC5AA68 VA: 0xC5AA68
	[CheckForComponentAttribute] // RVA: 0xC5AA68 Offset: 0xC5AA68 VA: 0xC5AA68
	public FsmGameObject perfObject; // 0x50
	[CheckForComponentAttribute] // RVA: 0xC5AADC Offset: 0xC5AADC VA: 0xC5AADC
	public FsmGameObject actorObject; // 0x58
	[RequiredFieldAttribute] // RVA: 0xC5AB40 Offset: 0xC5AB40 VA: 0xC5AB40
	public FsmEvent trueEvent; // 0x60

	// Methods

	// RVA: 0x12FF0E0 Offset: 0x12FF0E0 VA: 0x12FF0E0
	public void .ctor() { }

	// RVA: 0x12FF0E8 Offset: 0x12FF0E8 VA: 0x12FF0E8 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC274E8 Offset: 0xC274E8 VA: 0xC274E8
public class FGOCheckStartPosition : FsmStateAction // TypeDefIndex: 8001
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5AB50 Offset: 0xC5AB50 VA: 0xC5AB50
	[CheckForComponentAttribute] // RVA: 0xC5AB50 Offset: 0xC5AB50 VA: 0xC5AB50
	public FsmGameObject perfObject; // 0x50
	public FsmEvent sendEventUp; // 0x58
	public FsmEvent sendEventCenter; // 0x60
	public FsmEvent sendEventUnder; // 0x68
	private BattlePerformance perf; // 0x70

	// Methods

	// RVA: 0x12FF270 Offset: 0x12FF270 VA: 0x12FF270
	public void .ctor() { }

	// RVA: 0x12FF278 Offset: 0x12FF278 VA: 0x12FF278 Slot: 32
	public override void OnEnter() { }

	[DebuggerHiddenAttribute] // RVA: 0xCCAEE8 Offset: 0xCCAEE8 VA: 0xCCAEE8
	// RVA: 0x12FF35C Offset: 0x12FF35C VA: 0x12FF35C
	private IEnumerator CheckStartPosition() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC430C4 Offset: 0xC430C4 VA: 0xC430C4
private sealed class FGOCheckStartPosition.<CheckStartPosition>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8002
{
	// Fields
	internal FGOCheckStartPosition $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD9570 Offset: 0xCD9570 VA: 0xCD9570
	// RVA: 0x12FF3CC Offset: 0x12FF3CC VA: 0x12FF3CC
	public void .ctor() { }

	// RVA: 0x12FF3D4 Offset: 0x12FF3D4 VA: 0x12FF3D4 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD9580 Offset: 0xCD9580 VA: 0xCD9580
	// RVA: 0x12FF6E8 Offset: 0x12FF6E8 VA: 0x12FF6E8 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD9590 Offset: 0xCD9590 VA: 0xCD9590
	// RVA: 0x12FF6F0 Offset: 0x12FF6F0 VA: 0x12FF6F0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD95A0 Offset: 0xCD95A0 VA: 0xCD95A0
	// RVA: 0x12FF6F8 Offset: 0x12FF6F8 VA: 0x12FF6F8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD95B0 Offset: 0xCD95B0 VA: 0xCD95B0
	// RVA: 0x12FF70C Offset: 0x12FF70C VA: 0x12FF70C Slot: 6
	public void Reset() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27520 Offset: 0xC27520 VA: 0xC27520
public class FGOCommonFade : FsmStateAction // TypeDefIndex: 8003
{
	// Fields
	public FsmFloat fadeTime; // 0x50
	public FsmBool fadeIn; // 0x58
	public MaskFade.Kind fadeOutKind; // 0x60
	public FsmEvent finishEvent; // 0x68
	public bool FinishOnFadeEnd; // 0x70

	// Methods

	// RVA: 0x12FF774 Offset: 0x12FF774 VA: 0x12FF774
	public void .ctor() { }

	// RVA: 0x12FF80C Offset: 0x12FF80C VA: 0x12FF80C Slot: 32
	public override void OnEnter() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCAEF8 Offset: 0xCCAEF8 VA: 0xCCAEF8
	// RVA: 0x12FF9A0 Offset: 0x12FF9A0 VA: 0x12FF9A0
	private void <OnEnter>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCAF08 Offset: 0xCCAF08 VA: 0xCCAF08
	// RVA: 0x12FFA18 Offset: 0x12FFA18 VA: 0x12FFA18
	private void <OnEnter>m__1() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27558 Offset: 0xC27558 VA: 0xC27558
public class FGOConnectPrefabNode : FsmStateAction // TypeDefIndex: 8004
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5ABC4 Offset: 0xC5ABC4 VA: 0xC5ABC4
	[CheckForComponentAttribute] // RVA: 0xC5ABC4 Offset: 0xC5ABC4 VA: 0xC5ABC4
	public FsmGameObject actorObject; // 0x50
	public FsmString prefabNodeName; // 0x58
	public FsmBool IsConnect; // 0x60

	// Methods

	// RVA: 0x12FFA90 Offset: 0x12FFA90 VA: 0x12FFA90
	public void .ctor() { }

	// RVA: 0x12FFA98 Offset: 0x12FFA98 VA: 0x12FFA98 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27590 Offset: 0xC27590 VA: 0xC27590
public class FGOEffectGrayScale : FsmStateAction // TypeDefIndex: 8005
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5AC38 Offset: 0xC5AC38 VA: 0xC5AC38
	public FsmGameObject gameObject; // 0x50
	public FsmFloat toValue; // 0x58
	public bool removeFlag; // 0x60

	// Methods

	// RVA: 0x12FFBC4 Offset: 0x12FFBC4 VA: 0x12FFBC4
	public void .ctor() { }

	// RVA: 0x12FFBCC Offset: 0x12FFBCC VA: 0x12FFBCC Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC275C8 Offset: 0xC275C8 VA: 0xC275C8
public class FGOFade : FsmStateAction // TypeDefIndex: 8006
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5AC48 Offset: 0xC5AC48 VA: 0xC5AC48
	public FsmGameObject cameraObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC5AC58 Offset: 0xC5AC58 VA: 0xC5AC58
	public Color fadeColor; // 0x58
	[RequiredFieldAttribute] // RVA: 0xC5AC68 Offset: 0xC5AC68 VA: 0xC5AC68
	public float duration; // 0x68
	[RequiredFieldAttribute] // RVA: 0xC5AC78 Offset: 0xC5AC78 VA: 0xC5AC78
	public bool isFadeIn; // 0x6C
	public FsmEvent finishEvent; // 0x70
	public bool isNotWait; // 0x78

	// Methods

	// RVA: 0x12FFDA0 Offset: 0x12FFDA0 VA: 0x12FFDA0
	public void .ctor() { }

	// RVA: 0x12FFDA8 Offset: 0x12FFDA8 VA: 0x12FFDA8 Slot: 28
	public override void Reset() { }

	// RVA: 0x12FFDE8 Offset: 0x12FFDE8 VA: 0x12FFDE8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x130005C Offset: 0x130005C VA: 0x130005C
	private void OnFinished() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27600 Offset: 0xC27600 VA: 0xC27600
public class FGOFieldGimmick : FsmStateAction // TypeDefIndex: 8007
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5AC88 Offset: 0xC5AC88 VA: 0xC5AC88
	[CheckForComponentAttribute] // RVA: 0xC5AC88 Offset: 0xC5AC88 VA: 0xC5AC88
	public FsmGameObject gameObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC5ACFC Offset: 0xC5ACFC VA: 0xC5ACFC
	public FGOFieldGimmick.STATE state; // 0x58
	[RequiredFieldAttribute] // RVA: 0xC5AD0C Offset: 0xC5AD0C VA: 0xC5AD0C
	[TooltipAttribute] // RVA: 0xC5AD0C Offset: 0xC5AD0C VA: 0xC5AD0C
	public FsmFloat waitTime; // 0x60
	private bool isSeted; // 0x68
	private Stopwatch stopWatch; // 0x70
	private float waitTimeValue; // 0x78

	// Methods

	// RVA: 0x13000C8 Offset: 0x13000C8 VA: 0x13000C8
	public void .ctor() { }

	// RVA: 0x13000D0 Offset: 0x13000D0 VA: 0x13000D0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1300600 Offset: 0x1300600 VA: 0x1300600 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1300898 Offset: 0x1300898 VA: 0x1300898
	private float GetCurrentTime() { }

	// RVA: 0x1300488 Offset: 0x1300488 VA: 0x1300488
	private int[] CreateReelArray(int hitIndex, int[] reelIconArray) { }
}

// Namespace: 
public enum FGOFieldGimmick.STATE // TypeDefIndex: 8008
{
	// Fields
	public int value__; // 0x0
	public const FGOFieldGimmick.STATE SET = 0;
	public const FGOFieldGimmick.STATE START = 1;
	public const FGOFieldGimmick.STATE END = 2;
	public const FGOFieldGimmick.STATE WAIT_VOICE = 3;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC430D4 Offset: 0xC430D4 VA: 0xC430D4
private sealed class FGOFieldGimmick.<OnEnter>c__AnonStorey0 // TypeDefIndex: 8009
{
	// Fields
	internal BattlePerformance perf; // 0x10
	internal FGOFieldGimmick $this; // 0x18

	// Methods

	// RVA: 0x1300480 Offset: 0x1300480 VA: 0x1300480
	public void .ctor() { }

	// RVA: 0x130093C Offset: 0x130093C VA: 0x130093C
	internal void <>m__0() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27638 Offset: 0xC27638 VA: 0xC27638
public class FGOFieldLogic : FsmStateAction // TypeDefIndex: 8010
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5AD58 Offset: 0xC5AD58 VA: 0xC5AD58
	[CheckForComponentAttribute] // RVA: 0xC5AD58 Offset: 0xC5AD58 VA: 0xC5AD58
	public FsmOwnerDefault gameObject; // 0x50
	public FGOFieldLogic.PROC proc; // 0x58
	public FsmEvent sendEvent; // 0x60

	// Methods

	// RVA: 0x130098C Offset: 0x130098C VA: 0x130098C
	public void .ctor() { }

	// RVA: 0x1300994 Offset: 0x1300994 VA: 0x1300994 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOFieldLogic.PROC // TypeDefIndex: 8011
{
	// Fields
	public int value__; // 0x0
	public const FGOFieldLogic.PROC START_REPLACE = 0;
	public const FGOFieldLogic.PROC LOAD_TARGETACTOR = 1;
	public const FGOFieldLogic.PROC LOAD_REPLACE = 2;
	public const FGOFieldLogic.PROC PT_STEPOUT = 3;
	public const FGOFieldLogic.PROC LOAD_PT = 4;
	public const FGOFieldLogic.PROC LOAD_FIELD_CALL = 5;
	public const FGOFieldLogic.PROC BEFORE_FIELD_CALL_EFFECT = 6;
	public const FGOFieldLogic.PROC AFTER_FIELD_CALL_EFFECT = 7;
	public const FGOFieldLogic.PROC DISPLAY_DEFENCE_TARGET = 8;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27670 Offset: 0xC27670 VA: 0xC27670
public class FGOFieldSkillCutIn : FsmStateAction // TypeDefIndex: 8012
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5ADCC Offset: 0xC5ADCC VA: 0xC5ADCC
	[CheckForComponentAttribute] // RVA: 0xC5ADCC Offset: 0xC5ADCC VA: 0xC5ADCC
	public FsmGameObject gameObject; // 0x50
	public FGOFieldSkillCutIn.ActionType type; // 0x58

	// Methods

	// RVA: 0x1300BE0 Offset: 0x1300BE0 VA: 0x1300BE0
	public void .ctor() { }

	// RVA: 0x1300BE8 Offset: 0x1300BE8 VA: 0x1300BE8 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOFieldSkillCutIn.ActionType // TypeDefIndex: 8013
{
	// Fields
	public int value__; // 0x0
	public const FGOFieldSkillCutIn.ActionType Load = 0;
	public const FGOFieldSkillCutIn.ActionType Play = 1;
	public const FGOFieldSkillCutIn.ActionType Release = 2;
	public const FGOFieldSkillCutIn.ActionType Finish = 3;
	public const FGOFieldSkillCutIn.ActionType Skip = 4;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC276A8 Offset: 0xC276A8 VA: 0xC276A8
public class FGOGCCollect : FsmStateAction // TypeDefIndex: 8014
{
	// Methods

	// RVA: 0x1300EB4 Offset: 0x1300EB4 VA: 0x1300EB4
	public void .ctor() { }

	// RVA: 0x1300EBC Offset: 0x1300EBC VA: 0x1300EBC Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC276E0 Offset: 0xC276E0 VA: 0xC276E0
public class FGOGetActorPrefabNode : FsmStateAction // TypeDefIndex: 8015
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5AE40 Offset: 0xC5AE40 VA: 0xC5AE40
	[CheckForComponentAttribute] // RVA: 0xC5AE40 Offset: 0xC5AE40 VA: 0xC5AE40
	public FsmGameObject actorObject; // 0x50
	public FsmString prefabNodeName; // 0x58
	public FsmGameObject storeObject; // 0x60

	// Methods

	// RVA: 0x1300EE8 Offset: 0x1300EE8 VA: 0x1300EE8
	public void .ctor() { }

	// RVA: 0x1300EF0 Offset: 0x1300EF0 VA: 0x1300EF0 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27718 Offset: 0xC27718 VA: 0xC27718
public class FGOGetBattleParam : FsmStateAction // TypeDefIndex: 8016
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5AEB4 Offset: 0xC5AEB4 VA: 0xC5AEB4
	[CheckForComponentAttribute] // RVA: 0xC5AEB4 Offset: 0xC5AEB4 VA: 0xC5AEB4
	public FsmGameObject perfObject; // 0x50
	public FGOGetBattleParam.PARAM targetParam; // 0x58
	public FsmInt storeValue; // 0x60

	// Methods

	// RVA: 0x1301038 Offset: 0x1301038 VA: 0x1301038
	public void .ctor() { }

	// RVA: 0x1301040 Offset: 0x1301040 VA: 0x1301040 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOGetBattleParam.PARAM // TypeDefIndex: 8017
{
	// Fields
	public int value__; // 0x0
	public const FGOGetBattleParam.PARAM WAVE = 0;
	public const FGOGetBattleParam.PARAM TURN = 1;
	public const FGOGetBattleParam.PARAM EFFECT_BGM_ID = 2;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27750 Offset: 0xC27750 VA: 0xC27750
public class FGOGetBattleResultDispFlag : FsmStateAction // TypeDefIndex: 8018
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5AF28 Offset: 0xC5AF28 VA: 0xC5AF28
	[CheckForComponentAttribute] // RVA: 0xC5AF28 Offset: 0xC5AF28 VA: 0xC5AF28
	public FsmGameObject performanceObject; // 0x50
	public BattleResultComponent.resultData.ResultDispFlagEnum check; // 0x58
	public FsmEvent TrueEvent; // 0x60
	public FsmEvent FalseEvent; // 0x68

	// Methods

	// RVA: 0x13011A8 Offset: 0x13011A8 VA: 0x13011A8
	public void .ctor() { }

	// RVA: 0x13011B0 Offset: 0x13011B0 VA: 0x13011B0 Slot: 28
	public override void Reset() { }

	// RVA: 0x13011B8 Offset: 0x13011B8 VA: 0x13011B8 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27788 Offset: 0xC27788 VA: 0xC27788
public class FGOGetBuffCount : FsmStateAction // TypeDefIndex: 8019
{
	// Fields
	[CheckForComponentAttribute] // RVA: 0xC5AF9C Offset: 0xC5AF9C VA: 0xC5AF9C
	public FsmGameObject performance; // 0x50
	[CheckForComponentAttribute] // RVA: 0xC5B000 Offset: 0xC5B000 VA: 0xC5B000
	public FsmGameObject targetActor; // 0x58
	public FsmInt targetBuffId; // 0x60
	public FsmInt storeInt; // 0x68

	// Methods

	// RVA: 0x130133C Offset: 0x130133C VA: 0x130133C
	public void .ctor() { }

	// RVA: 0x1301344 Offset: 0x1301344 VA: 0x1301344 Slot: 32
	public override void OnEnter() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCAF18 Offset: 0xCCAF18 VA: 0xCCAF18
	// RVA: 0x1301674 Offset: 0x1301674 VA: 0x1301674
	private bool <OnEnter>m__0(BattleBuffData.BuffData b) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC277C0 Offset: 0xC277C0 VA: 0xC277C0
public class FGOGetCameraFOV : FsmStateAction // TypeDefIndex: 8020
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5B064 Offset: 0xC5B064 VA: 0xC5B064
	[TooltipAttribute] // RVA: 0xC5B064 Offset: 0xC5B064 VA: 0xC5B064
	public FsmGameObject targetCameraObj; // 0x50
	public FsmFloat storeValue; // 0x58

	// Methods

	// RVA: 0x13016C8 Offset: 0x13016C8 VA: 0x13016C8
	public void .ctor() { }

	// RVA: 0x13016D0 Offset: 0x13016D0 VA: 0x13016D0 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC277F8 Offset: 0xC277F8 VA: 0xC277F8
public class FGOGetCutInActor : FsmStateAction // TypeDefIndex: 8021
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5B0B0 Offset: 0xC5B0B0 VA: 0xC5B0B0
	[CheckForComponentAttribute] // RVA: 0xC5B0B0 Offset: 0xC5B0B0 VA: 0xC5B0B0
	public FsmGameObject performance; // 0x50
	public FsmGameObject storeobject; // 0x58
	public FsmGameObject storeobject2; // 0x60
	public FsmGameObject storeobject3; // 0x68
	[TooltipAttribute] // RVA: 0xC5B124 Offset: 0xC5B124 VA: 0xC5B124
	public FsmBool isCheckEnemy; // 0x70
	[TooltipAttribute] // RVA: 0xC5B15C Offset: 0xC5B15C VA: 0xC5B15C
	public FsmBool isCheckFollower; // 0x78

	// Methods

	// RVA: 0x1301810 Offset: 0x1301810 VA: 0x1301810
	public void .ctor() { }

	// RVA: 0x1301818 Offset: 0x1301818 VA: 0x1301818 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1301BC8 Offset: 0x1301BC8 VA: 0x1301BC8
	private void setStoreObject(GameObject obj) { }
}

// Namespace: HutongGames.PlayMaker.Actions
public class FGOGetFieldMotionObject : FsmStateAction // TypeDefIndex: 8022
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5B194 Offset: 0xC5B194 VA: 0xC5B194
	[CheckForComponentAttribute] // RVA: 0xC5B194 Offset: 0xC5B194 VA: 0xC5B194
	public FsmGameObject performanceObject; // 0x50
	public FsmString nodename; // 0x58
	public FsmGameObject storeObject; // 0x60

	// Methods

	// RVA: 0x1301D50 Offset: 0x1301D50 VA: 0x1301D50
	public void .ctor() { }

	// RVA: 0x1301D58 Offset: 0x1301D58 VA: 0x1301D58 Slot: 28
	public override void Reset() { }

	// RVA: 0x1301D64 Offset: 0x1301D64 VA: 0x1301D64 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
public class FGOGetNodeObject : FsmStateAction // TypeDefIndex: 8023
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5B208 Offset: 0xC5B208 VA: 0xC5B208
	public FsmGameObject targetObject; // 0x50
	public FsmString nodename; // 0x58
	public FsmGameObject storeObject; // 0x60

	// Methods

	// RVA: 0x1301E90 Offset: 0x1301E90 VA: 0x1301E90
	public void .ctor() { }

	// RVA: 0x1301E98 Offset: 0x1301E98 VA: 0x1301E98 Slot: 28
	public override void Reset() { }

	// RVA: 0x1301EA4 Offset: 0x1301EA4 VA: 0x1301EA4 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27830 Offset: 0xC27830 VA: 0xC27830
public class FGOGetOtherActor : FsmStateAction // TypeDefIndex: 8024
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5B218 Offset: 0xC5B218 VA: 0xC5B218
	[CheckForComponentAttribute] // RVA: 0xC5B218 Offset: 0xC5B218 VA: 0xC5B218
	public FsmGameObject performanceObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC5B28C Offset: 0xC5B28C VA: 0xC5B28C
	[CheckForComponentAttribute] // RVA: 0xC5B28C Offset: 0xC5B28C VA: 0xC5B28C
	public FsmGameObject actorObject; // 0x58
	[CheckForComponentAttribute] // RVA: 0xC5B300 Offset: 0xC5B300 VA: 0xC5B300
	public FsmGameObject otherActorObject; // 0x60
	[CheckForComponentAttribute] // RVA: 0xC5B364 Offset: 0xC5B364 VA: 0xC5B364
	public FsmGameObject otherActorObject2; // 0x68

	// Methods

	// RVA: 0x130200C Offset: 0x130200C VA: 0x130200C
	public void .ctor() { }

	// RVA: 0x1302014 Offset: 0x1302014 VA: 0x1302014 Slot: 28
	public override void Reset() { }

	// RVA: 0x1302020 Offset: 0x1302020 VA: 0x1302020 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27868 Offset: 0xC27868 VA: 0xC27868
[TooltipAttribute] // RVA: 0xC27868 Offset: 0xC27868 VA: 0xC27868
public class FGOGetTargetActor : FsmStateAction // TypeDefIndex: 8025
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5B3C8 Offset: 0xC5B3C8 VA: 0xC5B3C8
	[CheckForComponentAttribute] // RVA: 0xC5B3C8 Offset: 0xC5B3C8 VA: 0xC5B3C8
	public FsmGameObject actorObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC5B43C Offset: 0xC5B43C VA: 0xC5B43C
	[CheckForComponentAttribute] // RVA: 0xC5B43C Offset: 0xC5B43C VA: 0xC5B43C
	public FsmGameObject performanceObject; // 0x58
	[TooltipAttribute] // RVA: 0xC5B4B0 Offset: 0xC5B4B0 VA: 0xC5B4B0
	[CheckForComponentAttribute] // RVA: 0xC5B4B0 Offset: 0xC5B4B0 VA: 0xC5B4B0
	public FsmGameObject enemyActorObject1; // 0x60
	[TooltipAttribute] // RVA: 0xC5B538 Offset: 0xC5B538 VA: 0xC5B538
	[CheckForComponentAttribute] // RVA: 0xC5B538 Offset: 0xC5B538 VA: 0xC5B538
	public FsmGameObject enemyActorObject2; // 0x68
	[TooltipAttribute] // RVA: 0xC5B5C0 Offset: 0xC5B5C0 VA: 0xC5B5C0
	[CheckForComponentAttribute] // RVA: 0xC5B5C0 Offset: 0xC5B5C0 VA: 0xC5B5C0
	public FsmGameObject enemyActorObject3; // 0x70
	[TooltipAttribute] // RVA: 0xC5B648 Offset: 0xC5B648 VA: 0xC5B648
	[CheckForComponentAttribute] // RVA: 0xC5B648 Offset: 0xC5B648 VA: 0xC5B648
	public FsmGameObject enemyActorObject4; // 0x78
	[TooltipAttribute] // RVA: 0xC5B6D0 Offset: 0xC5B6D0 VA: 0xC5B6D0
	[CheckForComponentAttribute] // RVA: 0xC5B6D0 Offset: 0xC5B6D0 VA: 0xC5B6D0
	public FsmGameObject enemyActorObject5; // 0x80
	[TooltipAttribute] // RVA: 0xC5B758 Offset: 0xC5B758 VA: 0xC5B758
	[CheckForComponentAttribute] // RVA: 0xC5B758 Offset: 0xC5B758 VA: 0xC5B758
	public FsmGameObject enemyActorObject6; // 0x88
	[TooltipAttribute] // RVA: 0xC5B7E0 Offset: 0xC5B7E0 VA: 0xC5B7E0
	[CheckForComponentAttribute] // RVA: 0xC5B7E0 Offset: 0xC5B7E0 VA: 0xC5B7E0
	public FsmGameObject selfActorObject; // 0x90
	[TooltipAttribute] // RVA: 0xC5B868 Offset: 0xC5B868 VA: 0xC5B868
	[CheckForComponentAttribute] // RVA: 0xC5B868 Offset: 0xC5B868 VA: 0xC5B868
	public FsmGameObject selfPartyOtherActorObject1; // 0x98
	[TooltipAttribute] // RVA: 0xC5B8F0 Offset: 0xC5B8F0 VA: 0xC5B8F0
	[CheckForComponentAttribute] // RVA: 0xC5B8F0 Offset: 0xC5B8F0 VA: 0xC5B8F0
	public FsmGameObject selfPartyOtherActorObject2; // 0xA0
	[TooltipAttribute] // RVA: 0xC5B978 Offset: 0xC5B978 VA: 0xC5B978
	[CheckForComponentAttribute] // RVA: 0xC5B978 Offset: 0xC5B978 VA: 0xC5B978
	public FsmGameObject selfPartyOtherActorObject3; // 0xA8
	[TooltipAttribute] // RVA: 0xC5BA00 Offset: 0xC5BA00 VA: 0xC5BA00
	[CheckForComponentAttribute] // RVA: 0xC5BA00 Offset: 0xC5BA00 VA: 0xC5BA00
	public FsmGameObject selfPartyOtherActorObject4; // 0xB0
	[TooltipAttribute] // RVA: 0xC5BA88 Offset: 0xC5BA88 VA: 0xC5BA88
	[CheckForComponentAttribute] // RVA: 0xC5BA88 Offset: 0xC5BA88 VA: 0xC5BA88
	public FsmGameObject selfPartyOtherActorObject5; // 0xB8

	// Methods

	// RVA: 0x1302218 Offset: 0x1302218 VA: 0x1302218
	public void .ctor() { }

	// RVA: 0x1302220 Offset: 0x1302220 VA: 0x1302220 Slot: 28
	public override void Reset() { }

	// RVA: 0x1302240 Offset: 0x1302240 VA: 0x1302240 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC278C8 Offset: 0xC278C8 VA: 0xC278C8
public class FGOLogic : FsmStateAction // TypeDefIndex: 8026
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5BB10 Offset: 0xC5BB10 VA: 0xC5BB10
	[CheckForComponentAttribute] // RVA: 0xC5BB10 Offset: 0xC5BB10 VA: 0xC5BB10
	public FsmGameObject gameObject; // 0x50
	public FGOLogic.PROC proc; // 0x58
	public FsmEvent sendEvent; // 0x60

	// Methods

	// RVA: 0x1302CFC Offset: 0x1302CFC VA: 0x1302CFC
	public void .ctor() { }

	// RVA: 0x1302D04 Offset: 0x1302D04 VA: 0x1302D04 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOLogic.PROC // TypeDefIndex: 8027
{
	// Fields
	public int value__; // 0x0
	public const FGOLogic.PROC INIT_QUEST = 0;
	public const FGOLogic.PROC DRAW_COMMAND = 1;
	public const FGOLogic.PROC CHECK_COMBO = 2;
	public const FGOLogic.PROC INIT_BATTLETURN = 3;
	public const FGOLogic.PROC SELECT_TACTICAL = 4;
	public const FGOLogic.PROC END_BATTLETURN = 5;
	public const FGOLogic.PROC CHECK_ENDBATTLE = 6;
	public const FGOLogic.PROC TURN_PROGRSSING = 7;
	public const FGOLogic.PROC CHECK_BATTLEEND = 8;
	public const FGOLogic.PROC TEST_INITBATTLETURN = 9;
	public const FGOLogic.PROC LOAD_N_STAGE = 10;
	public const FGOLogic.PROC ENTRY_SUBMEMBER = 11;
	public const FGOLogic.PROC CHECK_NEXTBATTLE = 12;
	public const FGOLogic.PROC SET_NEXTBATTLE = 13;
	public const FGOLogic.PROC START_BATTLETURN = 14;
	public const FGOLogic.PROC PROC_WIN = 15;
	public const FGOLogic.PROC PROC_LOSE = 16;
	public const FGOLogic.PROC END_BATTLE = 17;
	public const FGOLogic.PROC CONNECT_BATTLEEND = 18;
	public const FGOLogic.PROC SHOW_RESULT = 19;
	public const FGOLogic.PROC LOAD_NEXT = 20;
	public const FGOLogic.PROC START_CONTINUE = 21;
	public const FGOLogic.PROC RECOVERPT = 22;
	public const FGOLogic.PROC START_COMMAND = 23;
	public const FGOLogic.PROC ENTRY_CHECK = 24;
	public const FGOLogic.PROC ENTRY_WAIT = 25;
	public const FGOLogic.PROC LOSE_PERFORMANCE = 26;
	public const FGOLogic.PROC FIELDAI_STARTWAVE = 27;
	public const FGOLogic.PROC BOOSTITEM = 28;
	public const FGOLogic.PROC WAVEBUFF = 29;
	public const FGOLogic.PROC FIRSTENTRY = 30;
	public const FGOLogic.PROC ENEMYAI_WAVE = 31;
	public const FGOLogic.PROC FIELDAI_TURNSTART = 32;
	public const FGOLogic.PROC START_CONTINUE_TURN = 33;
	public const FGOLogic.PROC ENTRY_CHECK_TACTICAL = 34;
	public const FGOLogic.PROC ENTRY_WAIT_TACTICAL = 35;
	public const FGOLogic.PROC RECOVERPT_TACTICAL = 36;
	public const FGOLogic.PROC QUEST_BEHAVIOR = 37;
	public const FGOLogic.PROC GIMMICK = 38;
	public const FGOLogic.PROC STAR_DIRECTION = 39;
	public const FGOLogic.PROC ENTRY_CHECK_EVENT = 40;
	public const FGOLogic.PROC DROP_ITEM_COLLECTION = 41;
	public const FGOLogic.PROC FORCE_DROP_ITEM = 42;
	public const FGOLogic.PROC CHECK_ENDBATTLE_IGNORE_TURN = 43;
	public const FGOLogic.PROC CHECK_REMAIN_BATTLE_END_WAVE = 44;
	public const FGOLogic.PROC BOOST_SKILL = 45;
	public const FGOLogic.PROC ASSIST = 46;
	public const FGOLogic.PROC FIELDAI_ENTRY = 47;
	public const FGOLogic.PROC PRECHECK_ENDBATTLE = 48;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27900 Offset: 0xC27900 VA: 0xC27900
public class FGOMotionChange : FsmStateAction // TypeDefIndex: 8028
{
	// Fields
	public FsmGameObject actorObject; // 0x50
	public FsmEvent defaultMotion; // 0x58
	public FsmEvent[] AnotherMotion; // 0x60

	// Methods

	// RVA: 0x130339C Offset: 0x130339C VA: 0x130339C
	public void .ctor() { }

	// RVA: 0x13033A4 Offset: 0x13033A4 VA: 0x13033A4 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC430E4 Offset: 0xC430E4 VA: 0xC430E4
private sealed class FGOMotionChange.<OnEnter>c__AnonStorey0 // TypeDefIndex: 8029
{
	// Fields
	internal string branchName; // 0x10

	// Methods

	// RVA: 0x1AAD2B8 Offset: 0x1AAD2B8 VA: 0x1AAD2B8
	public void .ctor() { }

	// RVA: 0x1AAD2C0 Offset: 0x1AAD2C0 VA: 0x1AAD2C0
	internal bool <>m__0(FsmEvent aMotion) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27938 Offset: 0xC27938 VA: 0xC27938
public class FGOPerformance : FsmStateAction // TypeDefIndex: 8030
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5BB84 Offset: 0xC5BB84 VA: 0xC5BB84
	[CheckForComponentAttribute] // RVA: 0xC5BB84 Offset: 0xC5BB84 VA: 0xC5BB84
	public FsmGameObject gameObject; // 0x50
	public FGOPerformance.Effect effect; // 0x58
	public FsmEvent sendEvent; // 0x60

	// Properties
	private string EventName { get; }

	// Methods

	// RVA: 0x1AAD35C Offset: 0x1AAD35C VA: 0x1AAD35C
	public void .ctor() { }

	// RVA: 0x1AAD364 Offset: 0x1AAD364 VA: 0x1AAD364
	private string get_EventName() { }

	// RVA: 0x1AAD378 Offset: 0x1AAD378 VA: 0x1AAD378 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOPerformance.Effect // TypeDefIndex: 8031
{
	// Fields
	public int value__; // 0x0
	public const FGOPerformance.Effect QUEST_START = 0;
	public const FGOPerformance.Effect QUEST_CLEAR = 1;
	public const FGOPerformance.Effect QUEST_OVER = 2;
	public const FGOPerformance.Effect BATTLE_START = 3;
	public const FGOPerformance.Effect BATTLE_WIN = 4;
	public const FGOPerformance.Effect BATTLE_LOSE = 5;
	public const FGOPerformance.Effect ACTION_BATTLE = 6;
	public const FGOPerformance.Effect END_SELECTCOMMAND = 7;
	public const FGOPerformance.Effect ACTION_ABILITY = 8;
	public const FGOPerformance.Effect MOVE_TACTICAL = 9;
	public const FGOPerformance.Effect MOVE_COMMAND = 10;
	public const FGOPerformance.Effect MOVE_ACTION = 11;
	public const FGOPerformance.Effect MOVE_NEXTBATTLE = 12;
	public const FGOPerformance.Effect PROC_BUFF = 13;
	public const FGOPerformance.Effect RAIDATTACK = 14;
	public const FGOPerformance.Effect UPDATE_VIEW = 15;
	public const FGOPerformance.Effect PLAY_SHIFTSERVANT = 16;
	public const FGOPerformance.Effect PLAY_SHIFTEFFECT = 17;
	public const FGOPerformance.Effect SET_TIMEACCELERATION = 18;
	public const FGOPerformance.Effect RESET_TIMEACCELERATION = 19;
	public const FGOPerformance.Effect PLAY_CHANGESERVANT = 20;
	public const FGOPerformance.Effect PLAY_CHANGEBG = 21;
	public const FGOPerformance.Effect UPDATE_FOV = 22;
	public const FGOPerformance.Effect CHECK_RAIDATTACK = 23;
	public const FGOPerformance.Effect DOWNLOAD_ASSETBUNDLE = 24;
	public const FGOPerformance.Effect SAVE_PART_ACTION_TIMEACCELERATION = 25;
	public const FGOPerformance.Effect RESET_PART_ACTION_TIMEACCELERATION = 26;
	public const FGOPerformance.Effect PLAY_SHIFTGAUGECHANGE = 27;
	public const FGOPerformance.Effect PLAY_SHIFTGAUGECHANGE_SERVANT = 28;
	public const FGOPerformance.Effect SET_TIMEACCELERATION_DIFFERENT = 29;
	public const FGOPerformance.Effect FORCE_RESET_TIMEACCELERATION = 30;
	public const FGOPerformance.Effect PREV_TACTICAL = 31;
	public const FGOPerformance.Effect LOSS_COMMAND_SPELL = 32;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC27970 Offset: 0xC27970 VA: 0xC27970
public class FGOPlayLimitTurn : FGOBattleCommonAction // TypeDefIndex: 8032
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5BBF8 Offset: 0xC5BBF8 VA: 0xC5BBF8
	[CheckForComponentAttribute] // RVA: 0xC5BBF8 Offset: 0xC5BBF8 VA: 0xC5BBF8
	public FsmGameObject perfObj; // 0x50
	public FsmEvent finishEvent; // 0x58

	// Methods

	// RVA: 0x1AAD89C Offset: 0x1AAD89C VA: 0x1AAD89C
	public void .ctor() { }

	// RVA: 0x1AAD8A4 Offset: 0x1AAD8A4 VA: 0x1AAD8A4 Slot: 32
	public override void OnEnter() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCAF28 Offset: 0xCCAF28 VA: 0xCCAF28
	// RVA: 0x1AAD9D4 Offset: 0x1AAD9D4 VA: 0x1AAD9D4
	private void <OnEnter>m__0() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC279A8 Offset: 0xC279A8 VA: 0xC279A8
public class FGOPlayStarDirection : FsmStateAction // TypeDefIndex: 8033
{
	// Fields
	[CheckForComponentAttribute] // RVA: 0xC5BC6C Offset: 0xC5BC6C VA: 0xC5BC6C
	public FsmGameObject performanceObj; // 0x50
	[CheckForComponentAttribute] // RVA: 0xC5BCD0 Offset: 0xC5BCD0 VA: 0xC5BCD0
	public FsmGameObject logicObj; // 0x58
	public FGOPlayStarDirection.DirectionType type; // 0x60
	private BattlePerformance perf; // 0x68
	private BattlePerformanceCommandCard commandPerf; // 0x70
	private BattleLogic logic; // 0x78
	private const int MAX_STAR_VIEW_COUNT = 99;

	// Methods

	// RVA: 0x1AAD9E4 Offset: 0x1AAD9E4 VA: 0x1AAD9E4
	public void .ctor() { }

	// RVA: 0x1AAD9EC Offset: 0x1AAD9EC VA: 0x1AAD9EC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1AADDF8 Offset: 0x1AADDF8 VA: 0x1AADDF8
	private void updateCriticalCount() { }

	// RVA: 0x1AADD7C Offset: 0x1AADD7C VA: 0x1AADD7C
