	public const FGOLogic.PROC END_BATTLE = 17;
	public const FGOLogic.PROC CONNECT_BATTLEEND = 18;
	public const FGOLogic.PROC SHOW_RESULT = 19;
	public const FGOLogic.PROC LOAD_NEXT = 20;
	public const FGOLogic.PROC START_CONTINUE = 21;
	public const FGOLogic.PROC RECOVERPT = 22;
	public const FGOLogic.PROC START_COMMAND = 23;
	public const FGOLogic.PROC ENTRY_CHECK = 24;
	public const FGOLogic.PROC ENTRY_WAIT = 25;
	public const FGOLogic.PROC LOSE_PERFORMANCE = 26;
	public const FGOLogic.PROC FIELDAI_STARTWAVE = 27;
	public const FGOLogic.PROC BOOSTITEM = 28;
	public const FGOLogic.PROC WAVEBUFF = 29;
	public const FGOLogic.PROC FIRSTENTRY = 30;
	public const FGOLogic.PROC ENEMYAI_WAVE = 31;
	public const FGOLogic.PROC FIELDAI_TURNSTART = 32;
	public const FGOLogic.PROC START_CONTINUE_TURN = 33;
	public const FGOLogic.PROC ENTRY_CHECK_TACTICAL = 34;
	public const FGOLogic.PROC ENTRY_WAIT_TACTICAL = 35;
	public const FGOLogic.PROC RECOVERPT_TACTICAL = 36;
	public const FGOLogic.PROC QUEST_BEHAVIOR = 37;
	public const FGOLogic.PROC GIMMICK = 38;
	public const FGOLogic.PROC STAR_DIRECTION = 39;
	public const FGOLogic.PROC ENTRY_CHECK_EVENT = 40;
	public const FGOLogic.PROC DROP_ITEM_COLLECTION = 41;
	public const FGOLogic.PROC FORCE_DROP_ITEM = 42;
	public const FGOLogic.PROC CHECK_ENDBATTLE_IGNORE_TURN = 43;
	public const FGOLogic.PROC CHECK_REMAIN_BATTLE_END_WAVE = 44;
	public const FGOLogic.PROC BOOST_SKILL = 45;
	public const FGOLogic.PROC ASSIST = 46;
	public const FGOLogic.PROC FIELDAI_ENTRY = 47;
	public const FGOLogic.PROC PRECHECK_ENDBATTLE = 48;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93A28 Offset: 0xC93A28 VA: 0xC93A28
public class FGOMotionChange : FsmStateAction // TypeDefIndex: 8009
{
	// Fields
	public FsmGameObject actorObject; // 0x50
	public FsmEvent defaultMotion; // 0x58
	public FsmEvent[] AnotherMotion; // 0x60

	// Methods

	// RVA: 0x187BF2C Offset: 0x187BF2C VA: 0x187BF2C
	public void .ctor() { }

	// RVA: 0x187BF34 Offset: 0x187BF34 VA: 0x187BF34 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF1A0 Offset: 0xCAF1A0 VA: 0xCAF1A0
private sealed class FGOMotionChange.<OnEnter>c__AnonStorey0 // TypeDefIndex: 8010
{
	// Fields
	internal string branchName; // 0x10

	// Methods

	// RVA: 0x187C1D0 Offset: 0x187C1D0 VA: 0x187C1D0
	public void .ctor() { }

	// RVA: 0x187C1D8 Offset: 0x187C1D8 VA: 0x187C1D8
	internal bool <>m__0(FsmEvent aMotion) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93A60 Offset: 0xC93A60 VA: 0xC93A60
public class FGOPerformance : FsmStateAction // TypeDefIndex: 8011
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC8A1C Offset: 0xCC8A1C VA: 0xCC8A1C
	[CheckForComponentAttribute] // RVA: 0xCC8A1C Offset: 0xCC8A1C VA: 0xCC8A1C
	public FsmGameObject gameObject; // 0x50
	public FGOPerformance.Effect effect; // 0x58
	public FsmEvent sendEvent; // 0x60

	// Properties
	private string EventName { get; }

	// Methods

	// RVA: 0x187C274 Offset: 0x187C274 VA: 0x187C274
	public void .ctor() { }

	// RVA: 0x187C27C Offset: 0x187C27C VA: 0x187C27C
	private string get_EventName() { }

	// RVA: 0x187C290 Offset: 0x187C290 VA: 0x187C290 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOPerformance.Effect // TypeDefIndex: 8012
{
	// Fields
	public int value__; // 0x0
	public const FGOPerformance.Effect QUEST_START = 0;
	public const FGOPerformance.Effect QUEST_CLEAR = 1;
	public const FGOPerformance.Effect QUEST_OVER = 2;
	public const FGOPerformance.Effect BATTLE_START = 3;
	public const FGOPerformance.Effect BATTLE_WIN = 4;
	public const FGOPerformance.Effect BATTLE_LOSE = 5;
	public const FGOPerformance.Effect ACTION_BATTLE = 6;
	public const FGOPerformance.Effect END_SELECTCOMMAND = 7;
	public const FGOPerformance.Effect ACTION_ABILITY = 8;
	public const FGOPerformance.Effect MOVE_TACTICAL = 9;
	public const FGOPerformance.Effect MOVE_COMMAND = 10;
	public const FGOPerformance.Effect MOVE_ACTION = 11;
	public const FGOPerformance.Effect MOVE_NEXTBATTLE = 12;
	public const FGOPerformance.Effect PROC_BUFF = 13;
	public const FGOPerformance.Effect RAIDATTACK = 14;
	public const FGOPerformance.Effect UPDATE_VIEW = 15;
	public const FGOPerformance.Effect PLAY_SHIFTSERVANT = 16;
	public const FGOPerformance.Effect PLAY_SHIFTEFFECT = 17;
	public const FGOPerformance.Effect SET_TIMEACCELERATION = 18;
	public const FGOPerformance.Effect RESET_TIMEACCELERATION = 19;
	public const FGOPerformance.Effect PLAY_CHANGESERVANT = 20;
	public const FGOPerformance.Effect PLAY_CHANGEBG = 21;
	public const FGOPerformance.Effect UPDATE_FOV = 22;
	public const FGOPerformance.Effect CHECK_RAIDATTACK = 23;
	public const FGOPerformance.Effect DOWNLOAD_ASSETBUNDLE = 24;
	public const FGOPerformance.Effect SAVE_PART_ACTION_TIMEACCELERATION = 25;
	public const FGOPerformance.Effect RESET_PART_ACTION_TIMEACCELERATION = 26;
	public const FGOPerformance.Effect PLAY_SHIFTGAUGECHANGE = 27;
	public const FGOPerformance.Effect PLAY_SHIFTGAUGECHANGE_SERVANT = 28;
	public const FGOPerformance.Effect SET_TIMEACCELERATION_DIFFERENT = 29;
	public const FGOPerformance.Effect FORCE_RESET_TIMEACCELERATION = 30;
	public const FGOPerformance.Effect PREV_TACTICAL = 31;
	public const FGOPerformance.Effect LOSS_COMMAND_SPELL = 32;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93A98 Offset: 0xC93A98 VA: 0xC93A98
public class FGOPlayLimitTurn : FGOBattleCommonAction // TypeDefIndex: 8013
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC8A90 Offset: 0xCC8A90 VA: 0xCC8A90
	[CheckForComponentAttribute] // RVA: 0xCC8A90 Offset: 0xCC8A90 VA: 0xCC8A90
	public FsmGameObject perfObj; // 0x50
	public FsmEvent finishEvent; // 0x58

	// Methods

	// RVA: 0x1F76D94 Offset: 0x1F76D94 VA: 0x1F76D94
	public void .ctor() { }

	// RVA: 0x1F76D9C Offset: 0x1F76D9C VA: 0x1F76D9C Slot: 32
	public override void OnEnter() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3859C Offset: 0xD3859C VA: 0xD3859C
	// RVA: 0x1F76ECC Offset: 0x1F76ECC VA: 0x1F76ECC
	private void <OnEnter>m__0() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93AD0 Offset: 0xC93AD0 VA: 0xC93AD0
public class FGOPlayStarDirection : FsmStateAction // TypeDefIndex: 8014
{
	// Fields
	[CheckForComponentAttribute] // RVA: 0xCC8B04 Offset: 0xCC8B04 VA: 0xCC8B04
	public FsmGameObject performanceObj; // 0x50
	[CheckForComponentAttribute] // RVA: 0xCC8B68 Offset: 0xCC8B68 VA: 0xCC8B68
	public FsmGameObject logicObj; // 0x58
	public FGOPlayStarDirection.DirectionType type; // 0x60
	private BattlePerformance perf; // 0x68
	private BattlePerformanceCommandCard commandPerf; // 0x70
	private BattleLogic logic; // 0x78
	private const int MAX_STAR_VIEW_COUNT = 99;

	// Methods

	// RVA: 0x1F76EDC Offset: 0x1F76EDC VA: 0x1F76EDC
	public void .ctor() { }

	// RVA: 0x1F76EE4 Offset: 0x1F76EE4 VA: 0x1F76EE4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F772F0 Offset: 0x1F772F0 VA: 0x1F772F0
	private void updateCriticalCount() { }

	// RVA: 0x1F77274 Offset: 0x1F77274 VA: 0x1F77274
	private void FinishFunc() { }

	// RVA: 0x1F77190 Offset: 0x1F77190 VA: 0x1F77190
	private void CalcStar() { }

	// RVA: 0x1F77364 Offset: 0x1F77364 VA: 0x1F77364
	private void PlayStarPass() { }
}

// Namespace: 
public enum FGOPlayStarDirection.DirectionType // TypeDefIndex: 8015
{
	// Fields
	public int value__; // 0x0
	public const FGOPlayStarDirection.DirectionType Refresh = 0;
	public const FGOPlayStarDirection.DirectionType Recovery = 1;
	public const FGOPlayStarDirection.DirectionType Add = 2;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93B08 Offset: 0xC93B08 VA: 0xC93B08
public class FGOPlayTargetAnimationEvent : FsmStateAction // TypeDefIndex: 8016
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC8BCC Offset: 0xCC8BCC VA: 0xCC8BCC
	[CheckForComponentAttribute] // RVA: 0xCC8BCC Offset: 0xCC8BCC VA: 0xCC8BCC
	public FsmGameObject actorObject; // 0x50
	public string animationName; // 0x58
	public WrapMode wrapMode; // 0x60
	public string startEvent; // 0x68
	public string stopEvent; // 0x70
	[TooltipAttribute] // RVA: 0xCC8C40 Offset: 0xCC8C40 VA: 0xCC8C40
	public FsmEvent finishEvent; // 0x78
	[TooltipAttribute] // RVA: 0xCC8C78 Offset: 0xCC8C78 VA: 0xCC8C78
	public bool realTime; // 0x80
	private float startTime; // 0x84
	private float startAnimTime; // 0x88
	private float elapsedTime; // 0x8C
	private float duration; // 0x90

	// Methods

	// RVA: 0x1F773EC Offset: 0x1F773EC VA: 0x1F773EC
	public void .ctor() { }

	// RVA: 0x1F77484 Offset: 0x1F77484 VA: 0x1F77484
	private void finish() { }

	// RVA: 0x1F774E4 Offset: 0x1F774E4 VA: 0x1F774E4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F77578 Offset: 0x1F77578 VA: 0x1F77578 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F777B8 Offset: 0x1F777B8 VA: 0x1F777B8 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1F779B8 Offset: 0x1F779B8 VA: 0x1F779B8
	private void updateAnimFrame(BattleFBXComponent fbx) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93B40 Offset: 0xC93B40 VA: 0xC93B40
public class FGOQuestStartEffect : FsmStateAction // TypeDefIndex: 8017
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC8CB0 Offset: 0xCC8CB0 VA: 0xCC8CB0
	[CheckForComponentAttribute] // RVA: 0xCC8CB0 Offset: 0xCC8CB0 VA: 0xCC8CB0
	public FsmGameObject gameObject; // 0x50
	public FGOQuestStartEffect.ActionType type; // 0x58
	public FsmInt startPhase; // 0x60
	public FsmInt endPhase; // 0x68

	// Methods

	// RVA: 0x1F77EA0 Offset: 0x1F77EA0 VA: 0x1F77EA0
	public void .ctor() { }

	// RVA: 0x1F77EA8 Offset: 0x1F77EA8 VA: 0x1F77EA8 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOQuestStartEffect.ActionType // TypeDefIndex: 8018
{
	// Fields
	public int value__; // 0x0
	public const FGOQuestStartEffect.ActionType Load = 0;
	public const FGOQuestStartEffect.ActionType Play = 1;
	public const FGOQuestStartEffect.ActionType Release = 2;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93B78 Offset: 0xC93B78 VA: 0xC93B78
public class FGOSetCameraFOV : FsmStateAction // TypeDefIndex: 8019
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC8D24 Offset: 0xCC8D24 VA: 0xCC8D24
	[TooltipAttribute] // RVA: 0xCC8D24 Offset: 0xCC8D24 VA: 0xCC8D24
	public FsmGameObject targetCameraObj; // 0x50
	public FsmFloat fovValue; // 0x58

	// Methods

	// RVA: 0x1F78124 Offset: 0x1F78124 VA: 0x1F78124
	public void .ctor() { }

	// RVA: 0x1F7812C Offset: 0x1F7812C VA: 0x1F7812C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93BB0 Offset: 0xC93BB0 VA: 0xC93BB0
public class FGOSetTargetToMultiplyTargetMatrix : FsmStateAction // TypeDefIndex: 8020
{
	// Fields
	public FsmGameObject targetObject; // 0x50
	public FsmGameObject setObject; // 0x58

	// Methods

	// RVA: 0x1F78274 Offset: 0x1F78274 VA: 0x1F78274
	public void .ctor() { }

	// RVA: 0x1F7827C Offset: 0x1F7827C VA: 0x1F7827C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93BE8 Offset: 0xC93BE8 VA: 0xC93BE8
public class FGOSpecifiedBattleStartVoice : FsmStateAction // TypeDefIndex: 8021
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC8D70 Offset: 0xCC8D70 VA: 0xCC8D70
	[CheckForComponentAttribute] // RVA: 0xCC8D70 Offset: 0xCC8D70 VA: 0xCC8D70
	public FsmGameObject performanceObject; // 0x50
	public FGOSpecifiedBattleStartVoice.TYPE type; // 0x58
	public FsmEvent checkTrueEvent; // 0x60
	public FsmEvent checkFalseEvent; // 0x68
	public FsmFloat playVolume; // 0x70
	public FsmEvent playFinishedEvent; // 0x78

	// Methods

	// RVA: 0x1F783B4 Offset: 0x1F783B4 VA: 0x1F783B4
	public void .ctor() { }

	// RVA: 0x1F783E8 Offset: 0x1F783E8 VA: 0x1F783E8 Slot: 32
	public override void OnEnter() { }

	[CompilerGeneratedAttribute] // RVA: 0xD385AC Offset: 0xD385AC VA: 0xD385AC
	// RVA: 0x1F7856C Offset: 0x1F7856C VA: 0x1F7856C
	private void <OnEnter>m__0() { }
}

// Namespace: 
public enum FGOSpecifiedBattleStartVoice.TYPE // TypeDefIndex: 8022
{
	// Fields
	public int value__; // 0x0
	public const FGOSpecifiedBattleStartVoice.TYPE CHECK = 0;
	public const FGOSpecifiedBattleStartVoice.TYPE PLAY = 1;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93C20 Offset: 0xC93C20 VA: 0xC93C20
public class FGOStoreNodeObject : FsmStateAction // TypeDefIndex: 8023
{
	// Fields
	public FsmGameObject targetObject; // 0x50
	public FsmString targetNodename; // 0x58
	public FsmBool isAbsScale; // 0x60
	public FsmGameObject storeObject; // 0x68

	// Methods

	// RVA: 0x1F785C4 Offset: 0x1F785C4 VA: 0x1F785C4
	public void .ctor() { }

	// RVA: 0x1F785F8 Offset: 0x1F785F8 VA: 0x1F785F8 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93C58 Offset: 0xC93C58 VA: 0xC93C58
public class FGOSwitchByAchievedCondition : FsmStateAction // TypeDefIndex: 8024
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC8DE4 Offset: 0xCC8DE4 VA: 0xCC8DE4
	public FGOSwitchByAchievedCondition.Condition[] conditions; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCC8DF4 Offset: 0xCC8DF4 VA: 0xCC8DF4
	public FsmEvent unAchievedEvent; // 0x58

	// Methods

	// RVA: 0x1F787A8 Offset: 0x1F787A8 VA: 0x1F787A8
	public void .ctor() { }

	// RVA: 0x1F78808 Offset: 0x1F78808 VA: 0x1F78808 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
[Serializable]
public class FGOSwitchByAchievedCondition.Condition // TypeDefIndex: 8025
{
	// Fields
	public int commonReleaseId; // 0x10
	public FsmEvent achievedEvent; // 0x18

	// Methods

	// RVA: 0x1F78948 Offset: 0x1F78948 VA: 0x1F78948
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93C90 Offset: 0xC93C90 VA: 0xC93C90
public class FGOTargetNotNull : FsmStateAction // TypeDefIndex: 8026
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC8E04 Offset: 0xCC8E04 VA: 0xCC8E04
	public FsmGameObject checkObject; // 0x50
	public FsmEvent TrueEvent; // 0x58
	public FsmEvent FalseEvent; // 0x60

	// Methods

	// RVA: 0x1F78950 Offset: 0x1F78950 VA: 0x1F78950
	public void .ctor() { }

	// RVA: 0x1F78958 Offset: 0x1F78958 VA: 0x1F78958 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93CC8 Offset: 0xC93CC8 VA: 0xC93CC8
public class FGOUniqueBattleCamera : FsmStateAction // TypeDefIndex: 8027
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC8E14 Offset: 0xCC8E14 VA: 0xCC8E14
	public FsmGameObject actorObject; // 0x50
	public FsmGameObject cameraObject; // 0x58
	public FsmString side; // 0x60
	public FsmString eventname; // 0x68

	// Methods

	// RVA: 0x1F78A40 Offset: 0x1F78A40 VA: 0x1F78A40
	public void .ctor() { }

	// RVA: 0x1F78A48 Offset: 0x1F78A48 VA: 0x1F78A48 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93D00 Offset: 0xC93D00 VA: 0xC93D00
public class FGOWaitStep : FGOBattleCommonAction // TypeDefIndex: 8028
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC8E24 Offset: 0xCC8E24 VA: 0xCC8E24
	[CheckForComponentAttribute] // RVA: 0xCC8E24 Offset: 0xCC8E24 VA: 0xCC8E24
	public FsmGameObject perfObj; // 0x50
	public FsmEvent finishEvent; // 0x58
	public float wait; // 0x60
	private BattlePerformance perf; // 0x68
	private float elapsedTime; // 0x70

	// Methods

	// RVA: 0x1F78C58 Offset: 0x1F78C58 VA: 0x1F78C58
	public void .ctor() { }

	// RVA: 0x1F78C60 Offset: 0x1F78C60 VA: 0x1F78C60 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F78D90 Offset: 0x1F78D90 VA: 0x1F78D90 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1F78CC4 Offset: 0x1F78CC4 VA: 0x1F78CC4
	protected void CheckEndStep() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93D38 Offset: 0xC93D38 VA: 0xC93D38
public class FGOWorldTimeScale : FsmStateAction // TypeDefIndex: 8029
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC8E98 Offset: 0xCC8E98 VA: 0xCC8E98
	[CheckForComponentAttribute] // RVA: 0xCC8E98 Offset: 0xCC8E98 VA: 0xCC8E98
	public FsmGameObject performanceObject; // 0x50
	public FsmFloat timescale; // 0x58

	// Methods

	// RVA: 0x1F78DCC Offset: 0x1F78DCC VA: 0x1F78DCC
	public void .ctor() { }

	// RVA: 0x1F78DD4 Offset: 0x1F78DD4 VA: 0x1F78DD4 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93D70 Offset: 0xC93D70 VA: 0xC93D70
[NoteAttribute] // RVA: 0xC93D70 Offset: 0xC93D70 VA: 0xC93D70
public class ShowBuffEffectsNearByCuriousFunc : ShowAll // TypeDefIndex: 8030
{
	// Fields
	[TooltipAttribute] // RVA: 0xCC8F0C Offset: 0xCC8F0C VA: 0xCC8F0C
	public CuriousFuncEffectTiming EffectTiming; // 0x84
	[TooltipAttribute] // RVA: 0xCC8F44 Offset: 0xCC8F44 VA: 0xCC8F44
	public FsmBool IsWaitDerivedPerformances; // 0x88

	// Methods

	// RVA: 0x2129C14 Offset: 0x2129C14 VA: 0x2129C14
	public void .ctor() { }

	// RVA: 0x2129C1C Offset: 0x2129C1C VA: 0x2129C1C Slot: 64
	protected override int[] getFunctionList(BattlePerformance performance) { }

	// RVA: 0x2129CBC Offset: 0x2129CBC VA: 0x2129CBC Slot: 65
	protected override bool IsDerivedPerformancesFinished(bool isMainEffectPerforming = False) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93DD0 Offset: 0xC93DD0 VA: 0xC93DD0
public class GetAppearActorObject : FsmStateAction // TypeDefIndex: 8031
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC8F7C Offset: 0xCC8F7C VA: 0xCC8F7C
	public FsmGameObject PerformanceObject; // 0x50
	public GetAppearActorObject.SIDE side; // 0x58
	public FsmGameObject storeObject; // 0x60

	// Methods

	// RVA: 0x1F8A138 Offset: 0x1F8A138 VA: 0x1F8A138
	public void .ctor() { }

	// RVA: 0x1F8A140 Offset: 0x1F8A140 VA: 0x1F8A140 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F8A148 Offset: 0x1F8A148 VA: 0x1F8A148 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum GetAppearActorObject.SIDE // TypeDefIndex: 8032
{
	// Fields
	public int value__; // 0x0
	public const GetAppearActorObject.SIDE PLAYER = 0;
	public const GetAppearActorObject.SIDE ENEMY = 1;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93E08 Offset: 0xC93E08 VA: 0xC93E08
[TooltipAttribute] // RVA: 0xC93E08 Offset: 0xC93E08 VA: 0xC93E08
public class GetGameObjectVector : FsmStateAction // TypeDefIndex: 8033
{
	// Fields
	public FsmGameObject gameObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCC8F8C Offset: 0xCC8F8C VA: 0xCC8F8C
	public FsmVector3 storeVector3; // 0x58
	public bool isLocal; // 0x60

	// Methods

	// RVA: 0x20E1020 Offset: 0x20E1020 VA: 0x20E1020
	public void .ctor() { }

	// RVA: 0x20E1028 Offset: 0x20E1028 VA: 0x20E1028 Slot: 28
	public override void Reset() { }

	// RVA: 0x20E1034 Offset: 0x20E1034 VA: 0x20E1034 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20E105C Offset: 0x20E105C VA: 0x20E105C
	private void DoVector3() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93E58 Offset: 0xC93E58 VA: 0xC93E58
public class GetNodeFromName : FsmStateAction // TypeDefIndex: 8034
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC8F9C Offset: 0xCC8F9C VA: 0xCC8F9C
	public FsmGameObject actorObject; // 0x50
	public FsmString nodename; // 0x58
	public FsmGameObject storeObject; // 0x60

	// Methods

	// RVA: 0x20E56C0 Offset: 0x20E56C0 VA: 0x20E56C0
	public void .ctor() { }

	// RVA: 0x20E56C8 Offset: 0x20E56C8 VA: 0x20E56C8 Slot: 28
	public override void Reset() { }

	// RVA: 0x20E5744 Offset: 0x20E5744 VA: 0x20E5744 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93E90 Offset: 0xC93E90 VA: 0xC93E90
[NoteAttribute] // RVA: 0xC93E90 Offset: 0xC93E90 VA: 0xC93E90
public class JudgeIgnoreWhiteFade : FsmStateAction // TypeDefIndex: 8035
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC8FAC Offset: 0xCC8FAC VA: 0xCC8FAC
	[CheckForComponentAttribute] // RVA: 0xCC8FAC Offset: 0xCC8FAC VA: 0xCC8FAC
	public FsmGameObject PerformanceObject; // 0x50
	[TooltipAttribute] // RVA: 0xCC9020 Offset: 0xCC9020 VA: 0xCC9020
	public FsmEvent TrueEvent; // 0x58
	[TooltipAttribute] // RVA: 0xCC9058 Offset: 0xCC9058 VA: 0xCC9058
	public FsmEvent FalseEvent; // 0x60

	// Methods

	// RVA: 0x20EEC7C Offset: 0x20EEC7C VA: 0x20EEC7C
	public void .ctor() { }

	// RVA: 0x20EEC84 Offset: 0x20EEC84 VA: 0x20EEC84 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20EECE0 Offset: 0x20EECE0 VA: 0x20EECE0
	private bool IsIgnoreWhiteFade() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93EF0 Offset: 0xC93EF0 VA: 0xC93EF0
[TooltipAttribute] // RVA: 0xC93EF0 Offset: 0xC93EF0 VA: 0xC93EF0
public class LoadBgm : FsmStateAction // TypeDefIndex: 8036
{
	// Fields
	[ObjectTypeAttribute] // RVA: 0xCC9090 Offset: 0xCC9090 VA: 0xCC9090
	[TooltipAttribute] // RVA: 0xCC9090 Offset: 0xCC9090 VA: 0xCC9090
	public FsmString bgmName; // 0x50
	[TooltipAttribute] // RVA: 0xCC9118 Offset: 0xCC9118 VA: 0xCC9118
	public FsmEvent finishedEvent; // 0x58

	// Methods

	// RVA: 0x20EF738 Offset: 0x20EF738 VA: 0x20EF738
	public void .ctor() { }

	// RVA: 0x20EF740 Offset: 0x20EF740 VA: 0x20EF740 Slot: 28
	public override void Reset() { }

	// RVA: 0x20EF744 Offset: 0x20EF744 VA: 0x20EF744 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20EF76C Offset: 0x20EF76C VA: 0x20EF76C
	protected void EndLoadBgm() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93F40 Offset: 0xC93F40 VA: 0xC93F40
[TooltipAttribute] // RVA: 0xC93F40 Offset: 0xC93F40 VA: 0xC93F40
public class MainMenuBarRequestSelectedSceneChange : FsmStateAction // TypeDefIndex: 8037
{
	// Methods

	// RVA: 0x20F40C0 Offset: 0x20F40C0 VA: 0x20F40C0
	public void .ctor() { }

	// RVA: 0x20F40C8 Offset: 0x20F40C8 VA: 0x20F40C8 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93F90 Offset: 0xC93F90 VA: 0xC93F90
[TooltipAttribute] // RVA: 0xC93F90 Offset: 0xC93F90 VA: 0xC93F90
public class MainMenuBarRequestSelectedSignal : FsmStateAction // TypeDefIndex: 8038
{
	// Methods

	// RVA: 0x20F40F4 Offset: 0x20F40F4 VA: 0x20F40F4
	public void .ctor() { }

	// RVA: 0x20F40FC Offset: 0x20F40FC VA: 0x20F40FC Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC93FE0 Offset: 0xC93FE0 VA: 0xC93FE0
[TooltipAttribute] // RVA: 0xC93FE0 Offset: 0xC93FE0 VA: 0xC93FE0
public class MainMenuBarRequestTerminalSceneChange : FsmStateAction // TypeDefIndex: 8039
{
	// Methods

	// RVA: 0x20F4128 Offset: 0x20F4128 VA: 0x20F4128
	public void .ctor() { }

	// RVA: 0x20F4130 Offset: 0x20F4130 VA: 0x20F4130 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC94030 Offset: 0xC94030 VA: 0xC94030
[TooltipAttribute] // RVA: 0xC94030 Offset: 0xC94030 VA: 0xC94030
public class MainMenuBarSetActive : FsmStateAction // TypeDefIndex: 8040
{
	// Fields
	[TooltipAttribute] // RVA: 0xCC9150 Offset: 0xCC9150 VA: 0xCC9150
	public FsmBool activeType; // 0x50

	// Methods

	// RVA: 0x20F415C Offset: 0x20F415C VA: 0x20F415C
	public void .ctor() { }

	// RVA: 0x20F4164 Offset: 0x20F4164 VA: 0x20F4164 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC94080 Offset: 0xC94080 VA: 0xC94080
[TooltipAttribute] // RVA: 0xC94080 Offset: 0xC94080 VA: 0xC94080
public class ManagerConfigCheck : FsmStateAction // TypeDefIndex: 8041
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC9188 Offset: 0xCC9188 VA: 0xCC9188
	public ManagerConfigCheck.Kind kind; // 0x4C

	// Methods

	// RVA: 0x20F41B0 Offset: 0x20F41B0 VA: 0x20F41B0
	public void .ctor() { }

	// RVA: 0x20F41B8 Offset: 0x20F41B8 VA: 0x20F41B8 Slot: 28
	public override void Reset() { }

	// RVA: 0x20F41BC Offset: 0x20F41BC VA: 0x20F41BC Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum ManagerConfigCheck.Kind // TypeDefIndex: 8042
{
	// Fields
	public int value__; // 0x0
	public const ManagerConfigCheck.Kind USE_DEBUG_COMMAND = 0;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC940D0 Offset: 0xC940D0 VA: 0xC940D0
public class NguiTweenAlpha : FsmStateAction // TypeDefIndex: 8043
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC9198 Offset: 0xCC9198 VA: 0xCC9198
	public FsmGameObject gameObject; // 0x50
	public FsmFloat toAlpha; // 0x58
	public FsmFloat time; // 0x60

	// Methods

	// RVA: 0x21DFFCC Offset: 0x21DFFCC VA: 0x21DFFCC
	public void .ctor() { }

	// RVA: 0x21E0014 Offset: 0x21E0014 VA: 0x21E0014 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E0018 Offset: 0x21E0018 VA: 0x21E0018 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC94108 Offset: 0xC94108 VA: 0xC94108
[TooltipAttribute] // RVA: 0xC94108 Offset: 0xC94108 VA: 0xC94108
public class PauseBgm : FsmStateAction // TypeDefIndex: 8044
{
	// Methods

	// RVA: 0x21E028C Offset: 0x21E028C VA: 0x21E028C
	public void .ctor() { }

	// RVA: 0x21E0294 Offset: 0x21E0294 VA: 0x21E0294 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC94158 Offset: 0xC94158 VA: 0xC94158
[TooltipAttribute] // RVA: 0xC94158 Offset: 0xC94158 VA: 0xC94158
public class PlayBgm : FsmStateAction // TypeDefIndex: 8045
{
	// Fields
	[HasFloatSliderAttribute] // RVA: 0xCC91A8 Offset: 0xCC91A8 VA: 0xCC91A8
	[TooltipAttribute] // RVA: 0xCC91A8 Offset: 0xCC91A8 VA: 0xCC91A8
	public FsmFloat volume; // 0x50
	[HasFloatSliderAttribute] // RVA: 0xCC91FC Offset: 0xCC91FC VA: 0xCC91FC
	[TooltipAttribute] // RVA: 0xCC91FC Offset: 0xCC91FC VA: 0xCC91FC
	public FsmFloat fadeTime; // 0x58
	[ObjectTypeAttribute] // RVA: 0xCC9254 Offset: 0xCC9254 VA: 0xCC9254
	[TooltipAttribute] // RVA: 0xCC9254 Offset: 0xCC9254 VA: 0xCC9254
	public FsmString bgmName; // 0x60

	// Methods

	// RVA: 0x21E0A18 Offset: 0x21E0A18 VA: 0x21E0A18
	public void .ctor() { }

	// RVA: 0x21E0A5C Offset: 0x21E0A5C VA: 0x21E0A5C Slot: 28
	public override void Reset() { }

	// RVA: 0x21E0A60 Offset: 0x21E0A60 VA: 0x21E0A60 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC941A8 Offset: 0xC941A8 VA: 0xC941A8
[TooltipAttribute] // RVA: 0xC941A8 Offset: 0xC941A8 VA: 0xC941A8
public class PlayBgm4Id : FsmStateAction // TypeDefIndex: 8046
{
	// Fields
	[HasFloatSliderAttribute] // RVA: 0xCC92DC Offset: 0xCC92DC VA: 0xCC92DC
	[TooltipAttribute] // RVA: 0xCC92DC Offset: 0xCC92DC VA: 0xCC92DC
	public FsmFloat volume; // 0x50
	[HasFloatSliderAttribute] // RVA: 0xCC9330 Offset: 0xCC9330 VA: 0xCC9330
	[TooltipAttribute] // RVA: 0xCC9330 Offset: 0xCC9330 VA: 0xCC9330
	public FsmFloat fadeTime; // 0x58
	[TooltipAttribute] // RVA: 0xCC9388 Offset: 0xCC9388 VA: 0xCC9388
	public FsmInt bgmId; // 0x60

	// Methods

	// RVA: 0x21E0B4C Offset: 0x21E0B4C VA: 0x21E0B4C
	public void .ctor() { }

	// RVA: 0x21E0B90 Offset: 0x21E0B90 VA: 0x21E0B90 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC941F8 Offset: 0xC941F8 VA: 0xC941F8
[TooltipAttribute] // RVA: 0xC941F8 Offset: 0xC941F8 VA: 0xC941F8
public class PlayJingle : FsmStateAction // TypeDefIndex: 8047
{
	// Fields
	[HasFloatSliderAttribute] // RVA: 0xCC93C0 Offset: 0xCC93C0 VA: 0xCC93C0
	[TooltipAttribute] // RVA: 0xCC93C0 Offset: 0xCC93C0 VA: 0xCC93C0
	public FsmFloat volume; // 0x50
	[ObjectTypeAttribute] // RVA: 0xCC9414 Offset: 0xCC9414 VA: 0xCC9414
	[TooltipAttribute] // RVA: 0xCC9414 Offset: 0xCC9414 VA: 0xCC9414
	public FsmString jingleName; // 0x58
	[TooltipAttribute] // RVA: 0xCC949C Offset: 0xCC949C VA: 0xCC949C
	public FsmEvent finishedEvent; // 0x60

	// Methods

	// RVA: 0x21E0CE4 Offset: 0x21E0CE4 VA: 0x21E0CE4
	public void .ctor() { }

	// RVA: 0x21E0D18 Offset: 0x21E0D18 VA: 0x21E0D18 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E0D20 Offset: 0x21E0D20 VA: 0x21E0D20 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E0E18 Offset: 0x21E0E18 VA: 0x21E0E18
	protected void EndPlayJingle() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC94248 Offset: 0xC94248 VA: 0xC94248
[TooltipAttribute] // RVA: 0xC94248 Offset: 0xC94248 VA: 0xC94248
public class PlayScript : FsmStateAction // TypeDefIndex: 8048
{
	// Fields
	[TooltipAttribute] // RVA: 0xCC94D4 Offset: 0xCC94D4 VA: 0xCC94D4
	public FsmString assetName; // 0x50
	[TooltipAttribute] // RVA: 0xCC950C Offset: 0xCC950C VA: 0xCC950C
	public FsmString labelName; // 0x58
	[TooltipAttribute] // RVA: 0xCC9544 Offset: 0xCC9544 VA: 0xCC9544
	public FsmBool activeMenu; // 0x60
	[TooltipAttribute] // RVA: 0xCC957C Offset: 0xCC957C VA: 0xCC957C
	public FsmBool activeSkip; // 0x68
	[TooltipAttribute] // RVA: 0xCC95B4 Offset: 0xCC95B4 VA: 0xCC95B4
	public FsmEvent finishedEvent; // 0x70

	// Methods

	// RVA: 0x21E1A74 Offset: 0x21E1A74 VA: 0x21E1A74
	public void .ctor() { }

	// RVA: 0x21E1A7C Offset: 0x21E1A7C VA: 0x21E1A7C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E1C70 Offset: 0x21E1C70 VA: 0x21E1C70
	protected void EndPlayScript(bool isExit) { }

	// RVA: 0x21E1CC8 Offset: 0x21E1CC8 VA: 0x21E1CC8
	protected void EndPlayScriptDebug(bool isExit) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC94298 Offset: 0xC94298 VA: 0xC94298
[TooltipAttribute] // RVA: 0xC94298 Offset: 0xC94298 VA: 0xC94298
public class PlaySe : FsmStateAction // TypeDefIndex: 8049
{
	// Fields
	[HasFloatSliderAttribute] // RVA: 0xCC95EC Offset: 0xCC95EC VA: 0xCC95EC
	[TooltipAttribute] // RVA: 0xCC95EC Offset: 0xCC95EC VA: 0xCC95EC
	public FsmFloat volume; // 0x50
	[TooltipAttribute] // RVA: 0xCC9640 Offset: 0xCC9640 VA: 0xCC9640
	public FsmString seName; // 0x58
	[TooltipAttribute] // RVA: 0xCC9678 Offset: 0xCC9678 VA: 0xCC9678
	public FsmEvent finishedEvent; // 0x60
	protected SePlayer player; // 0x68

	// Methods

	// RVA: 0x21E1D78 Offset: 0x21E1D78 VA: 0x21E1D78
	public void .ctor() { }

	// RVA: 0x21E1DAC Offset: 0x21E1DAC VA: 0x21E1DAC Slot: 28
	public override void Reset() { }

	// RVA: 0x21E1DB4 Offset: 0x21E1DB4 VA: 0x21E1DB4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E1EB0 Offset: 0x21E1EB0 VA: 0x21E1EB0
	protected void EndPlaySe() { }

	// RVA: 0x21E1F14 Offset: 0x21E1F14 VA: 0x21E1F14 Slot: 37
	public override void OnExit() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC942E8 Offset: 0xC942E8 VA: 0xC942E8
[TooltipAttribute] // RVA: 0xC942E8 Offset: 0xC942E8 VA: 0xC942E8
public class PlaySeEx : FsmStateAction // TypeDefIndex: 8050
{
	// Fields
	[HasFloatSliderAttribute] // RVA: 0xCC96B0 Offset: 0xCC96B0 VA: 0xCC96B0
	[TooltipAttribute] // RVA: 0xCC96B0 Offset: 0xCC96B0 VA: 0xCC96B0
	public FsmFloat volume; // 0x50
	[TooltipAttribute] // RVA: 0xCC9704 Offset: 0xCC9704 VA: 0xCC9704
	public FsmString seName; // 0x58
	[TooltipAttribute] // RVA: 0xCC973C Offset: 0xCC973C VA: 0xCC973C
	public FsmEvent finishedEvent; // 0x60
	[TooltipAttribute] // RVA: 0xCC9774 Offset: 0xCC9774 VA: 0xCC9774
	public FsmFloat pitch; // 0x68
	protected SePlayer player; // 0x70

	// Methods

	// RVA: 0x21E1F24 Offset: 0x21E1F24 VA: 0x21E1F24
	public void .ctor() { }

	// RVA: 0x21E1F58 Offset: 0x21E1F58 VA: 0x21E1F58 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E1F64 Offset: 0x21E1F64 VA: 0x21E1F64 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E1F98 Offset: 0x21E1F98 VA: 0x21E1F98 Slot: 62
	protected virtual void PlaySe() { }

	// RVA: 0x21E20C8 Offset: 0x21E20C8 VA: 0x21E20C8
	protected void EndPlaySe() { }

	// RVA: 0x21E212C Offset: 0x21E212C VA: 0x21E212C Slot: 37
	public override void OnExit() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC94338 Offset: 0xC94338 VA: 0xC94338
[TooltipAttribute] // RVA: 0xC94338 Offset: 0xC94338 VA: 0xC94338
public class PlaySeExDelay : PlaySeEx // TypeDefIndex: 8051
{
	// Fields
	public FsmFloat delay; // 0x78

	// Methods

	// RVA: 0x21E213C Offset: 0x21E213C VA: 0x21E213C
	public void .ctor() { }

	// RVA: 0x21E2180 Offset: 0x21E2180 VA: 0x21E2180 Slot: 62
	protected override void PlaySe() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC94388 Offset: 0xC94388 VA: 0xC94388
[TooltipAttribute] // RVA: 0xC94388 Offset: 0xC94388 VA: 0xC94388
public class PlaySystemSe : FsmStateAction // TypeDefIndex: 8052
{
	// Fields
	[HasFloatSliderAttribute] // RVA: 0xCC97AC Offset: 0xCC97AC VA: 0xCC97AC
	[TooltipAttribute] // RVA: 0xCC97AC Offset: 0xCC97AC VA: 0xCC97AC
	public FsmFloat volume; // 0x50
	[ObjectTypeAttribute] // RVA: 0xCC9800 Offset: 0xCC9800 VA: 0xCC9800
	[TooltipAttribute] // RVA: 0xCC9800 Offset: 0xCC9800 VA: 0xCC9800
	public SeManager.SystemSeKind kind; // 0x58

	// Methods

	// RVA: 0x21E254C Offset: 0x21E254C VA: 0x21E254C
	public void .ctor() { }

	// RVA: 0x21E2580 Offset: 0x21E2580 VA: 0x21E2580 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E2584 Offset: 0x21E2584 VA: 0x21E2584 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC943D8 Offset: 0xC943D8 VA: 0xC943D8
[TooltipAttribute] // RVA: 0xC943D8 Offset: 0xC943D8 VA: 0xC943D8
public class PlayVoice : FsmStateAction // TypeDefIndex: 8053
{
	// Fields
	[HasFloatSliderAttribute] // RVA: 0xCC9888 Offset: 0xCC9888 VA: 0xCC9888
