	// Fields
	public int mode; // 0x0
	public int windowSize; // 0x4
	public int overlapTimes; // 0x8
}

// Namespace: 
private struct CriAtomExVoicePool.ExPitchShifterConfig // TypeDefIndex: 3975
{
	// Fields
	public int numDsp; // 0x0
	public int maxChannels; // 0x4
	public int maxSamplingRate; // 0x8
	public CriAtomExVoicePool.PitchShifterConfig config; // 0xC
}

// Namespace: 
private struct CriAtomExVoicePool.TimeStretchConfig // TypeDefIndex: 3976
{
	// Fields
	public int reserved; // 0x0
}

// Namespace: 
private struct CriAtomExVoicePool.ExTimeStretchConfig // TypeDefIndex: 3977
{
	// Fields
	public int numDsp; // 0x0
	public int maxChannels; // 0x4
	public int maxSamplingRate; // 0x8
	public CriAtomExVoicePool.TimeStretchConfig config; // 0xC
}

// Namespace: 
public class CriAtomExStandardVoicePool : CriAtomExVoicePool // TypeDefIndex: 3978
{
	// Methods

	// RVA: 0x23D652C Offset: 0x23D652C VA: 0x23D652C
	public void .ctor(int numVoices, int maxChannels, int maxSamplingRate, bool streamingFlag, uint identifier = 0) { }

	// RVA: 0x23D6668 Offset: 0x23D6668 VA: 0x23D6668
	private static extern IntPtr criAtomExVoicePool_AllocateStandardVoicePool(ref CriAtomExVoicePool.VoicePoolConfig config, IntPtr work, int work_size) { }
}

// Namespace: 
public class CriAtomExWaveVoicePool : CriAtomExVoicePool // TypeDefIndex: 3979
{
	// Methods

	// RVA: 0x23D76D0 Offset: 0x23D76D0 VA: 0x23D76D0
	public void .ctor(int numVoices, int maxChannels, int maxSamplingRate, bool streamingFlag, uint identifier = 0) { }

	// RVA: 0x23D780C Offset: 0x23D780C VA: 0x23D780C
	private static extern IntPtr criAtomExVoicePool_AllocateWaveVoicePool(ref CriAtomExVoicePool.VoicePoolConfig config, IntPtr work, int work_size) { }
}

// Namespace: 
public class CriAtomExRawPcmVoicePool : CriAtomExVoicePool // TypeDefIndex: 3980
{
	// Methods

	// RVA: 0x23D57C4 Offset: 0x23D57C4 VA: 0x23D57C4
	public void .ctor(int numVoices, int maxChannels, int maxSamplingRate, CriAtomExRawPcmVoicePool.RawPcmFormat format, uint identifier = 0) { }

	// RVA: 0x23D5940 Offset: 0x23D5940 VA: 0x23D5940
	private static extern IntPtr criAtomExVoicePool_AllocateRawPcmVoicePool(ref CriAtomExRawPcmVoicePool.RawPcmVoicePoolConfig config, IntPtr work, int work_size) { }
}

// Namespace: 
public enum CriAtomExRawPcmVoicePool.RawPcmFormat // TypeDefIndex: 3981
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExRawPcmVoicePool.RawPcmFormat Sint16 = 0;
	public const CriAtomExRawPcmVoicePool.RawPcmFormat Float32 = 1;
}

// Namespace: 
protected struct CriAtomExRawPcmVoicePool.RawPcmPlayerConfig // TypeDefIndex: 3982
{
	// Fields
	public CriAtomExRawPcmVoicePool.RawPcmFormat format; // 0x0
	public int maxChannels; // 0x4
	public int maxSamplingRate; // 0x8
	public int soundRendererType; // 0xC
	public int decodeLatency; // 0x10
}

// Namespace: 
protected struct CriAtomExRawPcmVoicePool.RawPcmVoicePoolConfig // TypeDefIndex: 3983
{
	// Fields
	public uint identifier; // 0x0
	public int numVoices; // 0x4
	public CriAtomExRawPcmVoicePool.RawPcmPlayerConfig playerConfig; // 0x8
}

// Namespace: 
public class CriAudioReadStream // TypeDefIndex: 3984
{
	// Fields
	private CriAudioReadStream.InternalDelegate internalDelegate; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC20E34 Offset: 0xC20E34 VA: 0xC20E34
	[DebuggerBrowsableAttribute] // RVA: 0xC20E34 Offset: 0xC20E34 VA: 0xC20E34
	private IntPtr <callbackFunction>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC20E70 Offset: 0xC20E70 VA: 0xC20E70
	[DebuggerBrowsableAttribute] // RVA: 0xC20E70 Offset: 0xC20E70 VA: 0xC20E70
	private IntPtr <callbackPointer>k__BackingField; // 0x20

	// Properties
	public IntPtr callbackFunction { get; set; }
	public IntPtr callbackPointer { get; set; }

	// Methods

	// RVA: 0x2402094 Offset: 0x2402094 VA: 0x2402094
	public void .ctor(IntPtr callbackFunction, IntPtr callbackPointer) { }

	// RVA: 0x24020DC Offset: 0x24020DC VA: 0x24020DC
	public void .ctor(CriAudioReadStream.Delegate callback, int numChannels, int bufferSize = 256) { }

	[CompilerGeneratedAttribute] // RVA: 0xC2395C Offset: 0xC2395C VA: 0xC2395C
	// RVA: 0x24022F4 Offset: 0x24022F4 VA: 0x24022F4
	public IntPtr get_callbackFunction() { }

	[CompilerGeneratedAttribute] // RVA: 0xC2396C Offset: 0xC2396C VA: 0xC2396C
	// RVA: 0x24020CC Offset: 0x24020CC VA: 0x24020CC
	private void set_callbackFunction(IntPtr value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC2397C Offset: 0xC2397C VA: 0xC2397C
	// RVA: 0x24022FC Offset: 0x24022FC VA: 0x24022FC
	public IntPtr get_callbackPointer() { }

	[CompilerGeneratedAttribute] // RVA: 0xC2398C Offset: 0xC2398C VA: 0xC2398C
	// RVA: 0x24020D4 Offset: 0x24020D4 VA: 0x24020D4
	private void set_callbackPointer(IntPtr value) { }
}

// Namespace: 
[UnmanagedFunctionPointerAttribute] // RVA: 0xC1EF4C Offset: 0xC1EF4C VA: 0xC1EF4C
private sealed class CriAudioReadStream.InternalDelegate : MulticastDelegate // TypeDefIndex: 3985
{
	// Methods

	// RVA: 0x24022E4 Offset: 0x24022E4 VA: 0x24022E4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x24028FC Offset: 0x24028FC VA: 0x24028FC Slot: 11
	public virtual uint Invoke(IntPtr cbobj, IntPtr data, uint numSamples) { }

	// RVA: 0x2402B6C Offset: 0x2402B6C VA: 0x2402B6C Slot: 12
	public virtual IAsyncResult BeginInvoke(IntPtr cbobj, IntPtr data, uint numSamples, AsyncCallback callback, object object) { }

	// RVA: 0x2402C30 Offset: 0x2402C30 VA: 0x2402C30 Slot: 13
	public virtual uint EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class CriAudioReadStream.Delegate : MulticastDelegate // TypeDefIndex: 3986
{
	// Methods

	// RVA: 0x2402814 Offset: 0x2402814 VA: 0x2402814
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2402450 Offset: 0x2402450 VA: 0x2402450 Slot: 11
	public virtual uint Invoke(float[][] buffer, uint numSamples) { }

	// RVA: 0x2402824 Offset: 0x2402824 VA: 0x2402824 Slot: 12
	public virtual IAsyncResult BeginInvoke(float[][] buffer, uint numSamples, AsyncCallback callback, object object) { }

	// RVA: 0x24028C0 Offset: 0x24028C0 VA: 0x24028C0 Slot: 13
	public virtual uint EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC204C8 Offset: 0xC204C8 VA: 0xC204C8
private sealed class CriAudioReadStream.<CriAudioReadStream>c__AnonStorey0 // TypeDefIndex: 3987
{
	// Fields
	internal int bufferSize; // 0x10
	internal CriAudioReadStream.Delegate callback; // 0x18
	internal float[][] buffer; // 0x20
	internal int numChannels; // 0x28

	// Methods

	// RVA: 0x24022DC Offset: 0x24022DC VA: 0x24022DC
	public void .ctor() { }

	// RVA: 0x2402304 Offset: 0x2402304 VA: 0x2402304
	internal uint <>m__0(IntPtr cbobj, IntPtr data, uint numSamples) { }
}

// Namespace: 
public class CriAudioWriteStream // TypeDefIndex: 3988
{
	// Fields
	private CriAudioWriteStream.InternalDelegate internalDelegate; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC20EAC Offset: 0xC20EAC VA: 0xC20EAC
	[DebuggerBrowsableAttribute] // RVA: 0xC20EAC Offset: 0xC20EAC VA: 0xC20EAC
	private IntPtr <callbackFunction>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC20EE8 Offset: 0xC20EE8 VA: 0xC20EE8
	[DebuggerBrowsableAttribute] // RVA: 0xC20EE8 Offset: 0xC20EE8 VA: 0xC20EE8
	private IntPtr <callbackPointer>k__BackingField; // 0x20

	// Properties
	public IntPtr callbackFunction { get; set; }
	public IntPtr callbackPointer { get; set; }

	// Methods

	// RVA: 0x2402C6C Offset: 0x2402C6C VA: 0x2402C6C
	public void .ctor(IntPtr callbackFunction, IntPtr callbackPointer) { }

	// RVA: 0x2402CB4 Offset: 0x2402CB4 VA: 0x2402CB4
	public void .ctor(CriAudioWriteStream.Delegate callback, int numChannels, int bufferSize = 256) { }

	[CompilerGeneratedAttribute] // RVA: 0xC2399C Offset: 0xC2399C VA: 0xC2399C
	// RVA: 0x2402EF8 Offset: 0x2402EF8 VA: 0x2402EF8
	public IntPtr get_callbackFunction() { }

	[CompilerGeneratedAttribute] // RVA: 0xC239AC Offset: 0xC239AC VA: 0xC239AC
	// RVA: 0x2402CA4 Offset: 0x2402CA4 VA: 0x2402CA4
	private void set_callbackFunction(IntPtr value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC239BC Offset: 0xC239BC VA: 0xC239BC
	// RVA: 0x2402F00 Offset: 0x2402F00 VA: 0x2402F00
	public IntPtr get_callbackPointer() { }

	[CompilerGeneratedAttribute] // RVA: 0xC239CC Offset: 0xC239CC VA: 0xC239CC
	// RVA: 0x2402CAC Offset: 0x2402CAC VA: 0x2402CAC
	private void set_callbackPointer(IntPtr value) { }
}

// Namespace: 
[UnmanagedFunctionPointerAttribute] // RVA: 0xC1EF60 Offset: 0xC1EF60 VA: 0xC1EF60
private sealed class CriAudioWriteStream.InternalDelegate : MulticastDelegate // TypeDefIndex: 3989
{
	// Methods

	// RVA: 0x2402EE8 Offset: 0x2402EE8 VA: 0x2402EE8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x24034F8 Offset: 0x24034F8 VA: 0x24034F8 Slot: 11
	public virtual uint Invoke(IntPtr cbobj, IntPtr data, uint numSamples) { }

	// RVA: 0x2403768 Offset: 0x2403768 VA: 0x2403768 Slot: 12
	public virtual IAsyncResult BeginInvoke(IntPtr cbobj, IntPtr data, uint numSamples, AsyncCallback callback, object object) { }

	// RVA: 0x240382C Offset: 0x240382C VA: 0x240382C Slot: 13
	public virtual uint EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class CriAudioWriteStream.Delegate : MulticastDelegate // TypeDefIndex: 3990
{
	// Methods

	// RVA: 0x2403410 Offset: 0x2403410 VA: 0x2403410
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x240304C Offset: 0x240304C VA: 0x240304C Slot: 11
	public virtual uint Invoke(float[][] buffer, uint numSamples) { }

	// RVA: 0x2403420 Offset: 0x2403420 VA: 0x2403420 Slot: 12
	public virtual IAsyncResult BeginInvoke(float[][] buffer, uint numSamples, AsyncCallback callback, object object) { }

	// RVA: 0x24034BC Offset: 0x24034BC VA: 0x24034BC Slot: 13
	public virtual uint EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC204D8 Offset: 0xC204D8 VA: 0xC204D8
private sealed class CriAudioWriteStream.<CriAudioWriteStream>c__AnonStorey0 // TypeDefIndex: 3991
{
	// Fields
	internal int bufferSize; // 0x10
	internal int numChannels; // 0x14
	internal float[][] buffer; // 0x18
	internal CriAudioWriteStream.Delegate callback; // 0x20

	// Methods

	// RVA: 0x2402EE0 Offset: 0x2402EE0 VA: 0x2402EE0
	public void .ctor() { }

	// RVA: 0x2402F08 Offset: 0x2402F08 VA: 0x2402F08
	internal uint <>m__0(IntPtr cbobj, IntPtr data, uint numSamples) { }
}

// Namespace: 
public class CriFsLoader : CriDisposable // TypeDefIndex: 3992
{
	// Fields
	private IntPtr handle; // 0x20
	private GCHandle dstGch; // 0x28
	private GCHandle srcGch; // 0x2C

	// Methods

	// RVA: 0x240782C Offset: 0x240782C VA: 0x240782C
	public void .ctor() { }

	// RVA: 0x2407BDC Offset: 0x2407BDC VA: 0x2407BDC Slot: 5
	public override void Dispose() { }

	// RVA: 0x2407C08 Offset: 0x2407C08 VA: 0x2407C08
	private void Dispose(bool disposing) { }

	// RVA: 0x24079C0 Offset: 0x24079C0 VA: 0x24079C0
	public void Load(CriFsBinder binder, string path, long fileOffset, long loadSize, byte[] buffer) { }

	// RVA: 0x2407E90 Offset: 0x2407E90 VA: 0x2407E90
	public void LoadById(CriFsBinder binder, int id, long fileOffset, long loadSize, byte[] buffer) { }

	// RVA: 0x2408038 Offset: 0x2408038 VA: 0x2408038
	public void LoadWithoutDecompression(CriFsBinder binder, string path, long fileOffset, long loadSize, byte[] buffer) { }

	// RVA: 0x24081FC Offset: 0x24081FC VA: 0x24081FC
	public void LoadWithoutDecompressionById(CriFsBinder binder, int id, long fileOffset, long loadSize, byte[] buffer) { }

	// RVA: 0x24083A4 Offset: 0x24083A4 VA: 0x24083A4
	public void DecompressData(long srcSize, byte[] srcBuffer, long dstSize, byte[] dstBuffer) { }

	// RVA: 0x24074B0 Offset: 0x24074B0 VA: 0x24074B0
	public void Stop() { }

	// RVA: 0x2407A84 Offset: 0x2407A84 VA: 0x2407A84
	public CriFsLoader.Status GetStatus() { }

	// RVA: 0x2407948 Offset: 0x2407948 VA: 0x2407948
	public void SetReadUnitSize(int unit_size) { }

	// RVA: 0x24086FC Offset: 0x24086FC VA: 0x24086FC Slot: 1
	protected override void Finalize() { }

	// RVA: 0x2407B40 Offset: 0x2407B40 VA: 0x2407B40
	private static extern int criFsLoader_Create(out IntPtr loader) { }

	// RVA: 0x2407CF4 Offset: 0x2407CF4 VA: 0x2407CF4
	private static extern int criFsLoader_Destroy(IntPtr loader) { }

	// RVA: 0x2407D90 Offset: 0x2407D90 VA: 0x2407D90
	private static extern int criFsLoader_Load(IntPtr loader, IntPtr binder, string path, long offset, long load_size, IntPtr buffer, long buffer_size) { }

	// RVA: 0x2407F54 Offset: 0x2407F54 VA: 0x2407F54
	private static extern int criFsLoader_LoadById(IntPtr loader, IntPtr binder, int id, long offset, long load_size, IntPtr buffer, long buffer_size) { }

	// RVA: 0x2408508 Offset: 0x2408508 VA: 0x2408508
	private static extern int criFsLoader_Stop(IntPtr loader) { }

	// RVA: 0x24085A4 Offset: 0x24085A4 VA: 0x24085A4
	private static extern int criFsLoader_GetStatus(IntPtr loader, out CriFsLoader.Status status) { }

	// RVA: 0x2408650 Offset: 0x2408650 VA: 0x2408650
	private static extern int criFsLoader_SetReadUnitSize(IntPtr loader, long unit_size) { }

	// RVA: 0x24080FC Offset: 0x24080FC VA: 0x24080FC
	private static extern int criFsLoader_LoadWithoutDecompression(IntPtr loader, IntPtr binder, string path, long offset, long load_size, IntPtr buffer, long buffer_size) { }

	// RVA: 0x24082C0 Offset: 0x24082C0 VA: 0x24082C0
	private static extern int criFsLoader_LoadWithoutDecompressionById(IntPtr loader, IntPtr binder, int id, long offset, long load_size, IntPtr buffer, long buffer_size) { }

	// RVA: 0x240843C Offset: 0x240843C VA: 0x240843C
	private static extern int criFsLoader_DecompressData(IntPtr loader, IntPtr src, long src_size, IntPtr dst, long dst_size) { }
}

// Namespace: 
public enum CriFsLoader.Status // TypeDefIndex: 3993
{
	// Fields
	public int value__; // 0x0
	public const CriFsLoader.Status Stop = 0;
	public const CriFsLoader.Status Loading = 1;
	public const CriFsLoader.Status Complete = 2;
	public const CriFsLoader.Status Error = 3;
}

// Namespace: 
public class CriFsInstaller : CriDisposable // TypeDefIndex: 3994
{
	// Fields
	private byte[] installBuffer; // 0x20
	private GCHandle installBufferGch; // 0x28
	private IntPtr handle; // 0x30

	// Methods

	// RVA: 0x2406440 Offset: 0x2406440 VA: 0x2406440
	public void .ctor() { }

	// RVA: 0x2406A4C Offset: 0x2406A4C VA: 0x2406A4C Slot: 5
	public override void Dispose() { }

	// RVA: 0x2406A78 Offset: 0x2406A78 VA: 0x2406A78
	private void Dispose(bool disposing) { }

	// RVA: 0x2406560 Offset: 0x2406560 VA: 0x2406560
	public void Copy(CriFsBinder binder, string srcPath, string dstPath, int installBufferSize) { }

	// RVA: 0x24066F8 Offset: 0x24066F8 VA: 0x24066F8
	public void Stop() { }

	// RVA: 0x24068A8 Offset: 0x24068A8 VA: 0x24068A8
	public CriFsInstaller.Status GetStatus() { }

	// RVA: 0x2406834 Offset: 0x2406834 VA: 0x2406834
	public float GetProgress() { }

	// RVA: 0x2406EC4 Offset: 0x2406EC4 VA: 0x2406EC4
	public static void ExecuteMain() { }

	// RVA: 0x2406F54 Offset: 0x2406F54 VA: 0x2406F54 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x2406EC8 Offset: 0x2406EC8 VA: 0x2406EC8
	private static extern int criFsInstaller_ExecuteMain() { }

	// RVA: 0x24069A0 Offset: 0x24069A0 VA: 0x24069A0
	private static extern int criFsInstaller_Create(out IntPtr installer, CriFsInstaller.CopyPolicy option) { }

	// RVA: 0x2406B28 Offset: 0x2406B28 VA: 0x2406B28
	private static extern int criFsInstaller_Destroy(IntPtr installer) { }

	// RVA: 0x2406BC4 Offset: 0x2406BC4 VA: 0x2406BC4
	private static extern int criFsInstaller_Copy(IntPtr installer, IntPtr binder, string src_path, string dst_path, IntPtr buffer, long buffer_size) { }

	// RVA: 0x2406CD0 Offset: 0x2406CD0 VA: 0x2406CD0
	private static extern int criFsInstaller_Stop(IntPtr installer) { }

	// RVA: 0x2406D6C Offset: 0x2406D6C VA: 0x2406D6C
	private static extern int criFsInstaller_GetStatus(IntPtr installer, out CriFsInstaller.Status status) { }

	// RVA: 0x2406E18 Offset: 0x2406E18 VA: 0x2406E18
	private static extern int criFsInstaller_GetProgress(IntPtr installer, out float progress) { }
}

// Namespace: 
public enum CriFsInstaller.Status // TypeDefIndex: 3995
{
	// Fields
	public int value__; // 0x0
	public const CriFsInstaller.Status Stop = 0;
	public const CriFsInstaller.Status Busy = 1;
	public const CriFsInstaller.Status Complete = 2;
	public const CriFsInstaller.Status Error = 3;
}

// Namespace: 
private enum CriFsInstaller.CopyPolicy // TypeDefIndex: 3996
{
	// Fields
	public int value__; // 0x0
	public const CriFsInstaller.CopyPolicy Always = 0;
}

// Namespace: 
public class CriFsBinder : CriDisposable // TypeDefIndex: 3997
{
	// Fields
	private IntPtr handle; // 0x20

	// Properties
	public IntPtr nativeHandle { get; }

	// Methods

	// RVA: 0x240482C Offset: 0x240482C VA: 0x240482C
	public void .ctor() { }

	// RVA: 0x2404A40 Offset: 0x2404A40 VA: 0x2404A40 Slot: 5
	public override void Dispose() { }

	// RVA: 0x2404A6C Offset: 0x2404A6C VA: 0x2404A6C
	private void Dispose(bool disposing) { }

	// RVA: 0x2404484 Offset: 0x2404484 VA: 0x2404484
	public uint BindCpk(CriFsBinder srcBinder, string path) { }

	// RVA: 0x2404530 Offset: 0x2404530 VA: 0x2404530
	public uint BindDirectory(CriFsBinder srcBinder, string path) { }

	// RVA: 0x24045D4 Offset: 0x24045D4 VA: 0x24045D4
	public uint BindFile(CriFsBinder srcBinder, string path) { }

	// RVA: 0x2404E80 Offset: 0x2404E80 VA: 0x2404E80
	public uint BindFileSection(CriFsBinder srcBinder, string path, ulong offset, int size, string sectionName) { }

	// RVA: 0x240507C Offset: 0x240507C VA: 0x240507C
	public static void Unbind(uint bindId) { }

	// RVA: 0x240470C Offset: 0x240470C VA: 0x240470C
	public static CriFsBinder.Status GetStatus(uint bindId) { }

	// RVA: 0x240523C Offset: 0x240523C VA: 0x240523C
	public long GetFileSize(string path) { }

	// RVA: 0x2405394 Offset: 0x2405394 VA: 0x2405394
	public long GetFileSize(int id) { }

	// RVA: 0x24054D0 Offset: 0x24054D0 VA: 0x24054D0
	public bool GetContentsFileInfo(string path, out CriFsBinder.ContentsFileInfo info) { }

	// RVA: 0x240599C Offset: 0x240599C VA: 0x240599C
	public bool GetContentsFileInfo(int id, out CriFsBinder.ContentsFileInfo info) { }

	// RVA: 0x2405C04 Offset: 0x2405C04 VA: 0x2405C04
	public static bool GetContentsFileInfoByIndex(uint bindId, int index, int numFiles, out CriFsBinder.ContentsFileInfo[] info) { }

	// RVA: 0x2405FF0 Offset: 0x2405FF0 VA: 0x2405FF0
	public static int GetNumContentsFiles(uint bindId) { }

	// RVA: 0x2406090 Offset: 0x2406090 VA: 0x2406090
	public static void SetPriority(uint bindId, int priority) { }

	// RVA: 0x2404B90 Offset: 0x2404B90 VA: 0x2404B90
	public IntPtr get_nativeHandle() { }

	// RVA: 0x24061C8 Offset: 0x24061C8 VA: 0x24061C8 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x24049A4 Offset: 0x24049A4 VA: 0x24049A4
	private static extern uint criFsBinder_Create(out IntPtr binder) { }

	// RVA: 0x2404AF4 Offset: 0x2404AF4 VA: 0x2404AF4
	private static extern uint criFsBinder_Destroy(IntPtr binder) { }

	// RVA: 0x2404B98 Offset: 0x2404B98 VA: 0x2404B98
	private static extern uint criFsBinder_BindCpk(IntPtr binder, IntPtr srcBinder, string path, IntPtr work, int worksize, out uint bindId) { }

	// RVA: 0x2404C90 Offset: 0x2404C90 VA: 0x2404C90
	private static extern uint criFsBinder_BindDirectory(IntPtr binder, IntPtr srcBinder, string path, IntPtr work, int worksize, out uint bindId) { }

	// RVA: 0x2404D88 Offset: 0x2404D88 VA: 0x2404D88
	private static extern uint criFsBinder_BindFile(IntPtr binder, IntPtr srcBinder, string path, IntPtr work, int worksize, out uint bindId) { }

	// RVA: 0x2404F50 Offset: 0x2404F50 VA: 0x2404F50
	private static extern uint criFsBinder_BindFileSection(IntPtr binder, IntPtr srcBinder, string path, ulong offset, int size, string sectionName, IntPtr work, int worksize, out uint bindId) { }

	// RVA: 0x24050F4 Offset: 0x24050F4 VA: 0x24050F4
	private static extern int criFsBinder_Unbind(uint bindId) { }

	// RVA: 0x2405190 Offset: 0x2405190 VA: 0x2405190
	private static extern int criFsBinder_GetStatus(uint bindId, out CriFsBinder.Status status) { }

	// RVA: 0x24052C4 Offset: 0x24052C4 VA: 0x24052C4
	private static extern int criFsBinder_GetFileSize(IntPtr binder, string path, out long size) { }

	// RVA: 0x240541C Offset: 0x240541C VA: 0x240541C
	private static extern int criFsBinder_GetFileSizeById(IntPtr binder, int id, out long size) { }

	// RVA: 0x240611C Offset: 0x240611C VA: 0x240611C
	private static extern int criFsBinder_SetPriority(uint bindId, int priority) { }

	// RVA: 0x2405684 Offset: 0x2405684 VA: 0x2405684
	private static extern int criFsBinder_GetContentsFileInfo(IntPtr binder, string path, IntPtr info) { }

	// RVA: 0x2405B50 Offset: 0x2405B50 VA: 0x2405B50
	private static extern int criFsBinder_GetContentsFileInfoById(IntPtr binder, int id, IntPtr info) { }

	// RVA: 0x2405F2C Offset: 0x2405F2C VA: 0x2405F2C
	private static extern int criFsBinder_GetContentsFileInfoByIndex(uint id, int index, IntPtr info, int num) { }

	// RVA: 0x2405FF4 Offset: 0x2405FF4 VA: 0x2405FF4
	private static extern int CRIWARE368F9D49(uint id) { }
}

// Namespace: 
public enum CriFsBinder.Status // TypeDefIndex: 3998
{
	// Fields
	public int value__; // 0x0
	public const CriFsBinder.Status None = 0;
	public const CriFsBinder.Status Analyze = 1;
	public const CriFsBinder.Status Complete = 2;
	public const CriFsBinder.Status Unbind = 3;
	public const CriFsBinder.Status Removed = 4;
	public const CriFsBinder.Status Invalid = 5;
	public const CriFsBinder.Status Error = 6;
}

// Namespace: 
public struct CriFsBinder.ContentsFileInfo // TypeDefIndex: 3999
{
	// Fields
	public readonly string directory; // 0x0
	public readonly string fileName; // 0x8
	public uint readSize; // 0x10
	public uint extractSize; // 0x14
	public ulong offset; // 0x18
	public int fileId; // 0x20
	private string userStr; // 0x28

	// Methods

	// RVA: 0xD6AC10 Offset: 0xD6AC10 VA: 0xD6AC10
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public class CriFsRequest : CriDisposable // TypeDefIndex: 4000
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC20F24 Offset: 0xC20F24 VA: 0xC20F24
	[DebuggerBrowsableAttribute] // RVA: 0xC20F24 Offset: 0xC20F24 VA: 0xC20F24
	private CriFsRequest.DoneDelegate <doneDelegate>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC20F60 Offset: 0xC20F60 VA: 0xC20F60
	[DebuggerBrowsableAttribute] // RVA: 0xC20F60 Offset: 0xC20F60 VA: 0xC20F60
	private bool <isDone>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC20F9C Offset: 0xC20F9C VA: 0xC20F9C
	[DebuggerBrowsableAttribute] // RVA: 0xC20F9C Offset: 0xC20F9C VA: 0xC20F9C
	private string <error>k__BackingField; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC20FD8 Offset: 0xC20FD8 VA: 0xC20FD8
	[DebuggerBrowsableAttribute] // RVA: 0xC20FD8 Offset: 0xC20FD8 VA: 0xC20FD8
	private bool <isDisposed>k__BackingField; // 0x38

	// Properties
	public CriFsRequest.DoneDelegate doneDelegate { get; set; }
	public bool isDone { get; set; }
	public string error { get; set; }
	public bool isDisposed { get; set; }

	// Methods

	// RVA: 0x2404478 Offset: 0x2404478 VA: 0x2404478
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC239DC Offset: 0xC239DC VA: 0xC239DC
	// RVA: 0x240966C Offset: 0x240966C VA: 0x240966C
	public CriFsRequest.DoneDelegate get_doneDelegate() { }

	[CompilerGeneratedAttribute] // RVA: 0xC239EC Offset: 0xC239EC VA: 0xC239EC
	// RVA: 0x2406438 Offset: 0x2406438 VA: 0x2406438
	protected void set_doneDelegate(CriFsRequest.DoneDelegate value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC239FC Offset: 0xC239FC VA: 0xC239FC
	// RVA: 0x2404704 Offset: 0x2404704 VA: 0x2404704
	public bool get_isDone() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23A0C Offset: 0xC23A0C VA: 0xC23A0C
	// RVA: 0x2409674 Offset: 0x2409674 VA: 0x2409674
	private void set_isDone(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC23A1C Offset: 0xC23A1C VA: 0xC23A1C
	// RVA: 0x2407244 Offset: 0x2407244 VA: 0x2407244
	public string get_error() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23A2C Offset: 0xC23A2C VA: 0xC23A2C
	// RVA: 0x240479C Offset: 0x240479C VA: 0x240479C
	protected void set_error(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC23A3C Offset: 0xC23A3C VA: 0xC23A3C
	// RVA: 0x2409680 Offset: 0x2409680 VA: 0x2409680
	public bool get_isDisposed() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23A4C Offset: 0xC23A4C VA: 0xC23A4C
	// RVA: 0x2409688 Offset: 0x2409688 VA: 0x2409688
	protected void set_isDisposed(bool value) { }

	// RVA: 0x2409694 Offset: 0x2409694 VA: 0x2409694 Slot: 5
	public override void Dispose() { }

	// RVA: 0x24096E8 Offset: 0x24096E8 VA: 0x24096E8 Slot: 6
	public virtual void Stop() { }

	// RVA: 0x24096EC Offset: 0x24096EC VA: 0x24096EC
	public YieldInstruction WaitForDone(MonoBehaviour mb) { }

	// RVA: 0x2409798 Offset: 0x2409798 VA: 0x2409798 Slot: 7
	protected virtual void Dispose(bool disposing) { }

	// RVA: 0x240979C Offset: 0x240979C VA: 0x240979C Slot: 8
	public virtual void Update() { }

	// RVA: 0x24047A4 Offset: 0x24047A4 VA: 0x24047A4
	protected void Done() { }

	[DebuggerHiddenAttribute] // RVA: 0xC23A5C Offset: 0xC23A5C VA: 0xC23A5C
	// RVA: 0x2409728 Offset: 0x2409728 VA: 0x2409728
	private IEnumerator CheckDone() { }

	// RVA: 0x2409B48 Offset: 0x2409B48 VA: 0x2409B48 Slot: 1
	protected override void Finalize() { }
}

// Namespace: 
public sealed class CriFsRequest.DoneDelegate : MulticastDelegate // TypeDefIndex: 4001
{
	// Methods

	// RVA: 0x2409CDC Offset: 0x2409CDC VA: 0x2409CDC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x24097A0 Offset: 0x24097A0 VA: 0x24097A0 Slot: 11
	public virtual void Invoke(CriFsRequest request) { }

	// RVA: 0x2409CEC Offset: 0x2409CEC VA: 0x2409CEC Slot: 12
	public virtual IAsyncResult BeginInvoke(CriFsRequest request, AsyncCallback callback, object object) { }

	// RVA: 0x2409D10 Offset: 0x2409D10 VA: 0x2409D10 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC204E8 Offset: 0xC204E8 VA: 0xC204E8
private sealed class CriFsRequest.<CheckDone>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 4002
{
	// Fields
	internal CriFsRequest $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xC24830 Offset: 0xC24830 VA: 0xC24830
	// RVA: 0x2409B40 Offset: 0x2409B40 VA: 0x2409B40
	public void .ctor() { }

	// RVA: 0x2409BDC Offset: 0x2409BDC VA: 0x2409BDC Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xC24840 Offset: 0xC24840 VA: 0xC24840
	// RVA: 0x2409C50 Offset: 0x2409C50 VA: 0x2409C50 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC24850 Offset: 0xC24850 VA: 0xC24850
	// RVA: 0x2409C58 Offset: 0x2409C58 VA: 0x2409C58 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC24860 Offset: 0xC24860 VA: 0xC24860
	// RVA: 0x2409C60 Offset: 0x2409C60 VA: 0x2409C60 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xC24870 Offset: 0xC24870 VA: 0xC24870
	// RVA: 0x2409C74 Offset: 0x2409C74 VA: 0x2409C74 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class CriFsLoadFileRequest : CriFsRequest // TypeDefIndex: 4003
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC21014 Offset: 0xC21014 VA: 0xC21014
	[DebuggerBrowsableAttribute] // RVA: 0xC21014 Offset: 0xC21014 VA: 0xC21014
	private string <path>k__BackingField; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC21050 Offset: 0xC21050 VA: 0xC21050
	[DebuggerBrowsableAttribute] // RVA: 0xC21050 Offset: 0xC21050 VA: 0xC21050
	private byte[] <bytes>k__BackingField; // 0x48
	private CriFsLoadFileRequest.Phase phase; // 0x50
	private CriFsBinder refBinder; // 0x58
	private CriFsBinder newBinder; // 0x60
	private uint bindId; // 0x68
	private CriFsLoader loader; // 0x70
	private int readUnitSize; // 0x78
	private long fileSize; // 0x80

	// Properties
	public string path { get; set; }
	public byte[] bytes { get; set; }

	// Methods

	// RVA: 0x24072D4 Offset: 0x24072D4 VA: 0x24072D4
	public void .ctor(CriFsBinder srcBinder, string path, CriFsRequest.DoneDelegate doneDelegate, int readUnitSize) { }

	[CompilerGeneratedAttribute] // RVA: 0xC23A6C Offset: 0xC23A6C VA: 0xC23A6C
	// RVA: 0x24073E8 Offset: 0x24073E8 VA: 0x24073E8
	public string get_path() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23A7C Offset: 0xC23A7C VA: 0xC23A7C
	// RVA: 0x24073E0 Offset: 0x24073E0 VA: 0x24073E0
	private void set_path(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC23A8C Offset: 0xC23A8C VA: 0xC23A8C
	// RVA: 0x240724C Offset: 0x240724C VA: 0x240724C
	public byte[] get_bytes() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23A9C Offset: 0xC23A9C VA: 0xC23A9C
	// RVA: 0x24073F0 Offset: 0x24073F0 VA: 0x24073F0
	private void set_bytes(byte[] value) { }

	// RVA: 0x24073F8 Offset: 0x24073F8 VA: 0x24073F8 Slot: 7
	protected override void Dispose(bool disposing) { }

	// RVA: 0x2407494 Offset: 0x2407494 VA: 0x2407494 Slot: 6
	public override void Stop() { }

	// RVA: 0x2407514 Offset: 0x2407514 VA: 0x2407514 Slot: 8
	public override void Update() { }

	// RVA: 0x2407574 Offset: 0x2407574 VA: 0x2407574
	private void UpdateBinder() { }

	// RVA: 0x24075F0 Offset: 0x24075F0 VA: 0x24075F0
	private void UpdateLoader() { }

	// RVA: 0x2407778 Offset: 0x2407778 VA: 0x2407778
	private void OnError() { }
}

// Namespace: 
private enum CriFsLoadFileRequest.Phase // TypeDefIndex: 4004
{
	// Fields
	public int value__; // 0x0
	public const CriFsLoadFileRequest.Phase Stop = 0;
	public const CriFsLoadFileRequest.Phase Bind = 1;
	public const CriFsLoadFileRequest.Phase Load = 2;
	public const CriFsLoadFileRequest.Phase Done = 3;
	public const CriFsLoadFileRequest.Phase Error = 4;
}

// Namespace: 
public class CriFsLoadAssetBundleRequest : CriFsRequest // TypeDefIndex: 4005
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC2108C Offset: 0xC2108C VA: 0xC2108C
	[DebuggerBrowsableAttribute] // RVA: 0xC2108C Offset: 0xC2108C VA: 0xC2108C
	private string <path>k__BackingField; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC210C8 Offset: 0xC210C8 VA: 0xC210C8
	[DebuggerBrowsableAttribute] // RVA: 0xC210C8 Offset: 0xC210C8 VA: 0xC210C8
	private AssetBundle <assetBundle>k__BackingField; // 0x48
	private CriFsLoadFileRequest loadFileReq; // 0x50
	private AssetBundleCreateRequest assetBundleReq; // 0x58

	// Properties
	public string path { get; set; }
	public AssetBundle assetBundle { get; set; }

	// Methods

	// RVA: 0x2406FCC Offset: 0x2406FCC VA: 0x2406FCC
	public void .ctor(CriFsBinder binder, string path, int readUnitSize) { }

	[CompilerGeneratedAttribute] // RVA: 0xC23AAC Offset: 0xC23AAC VA: 0xC23AAC
	// RVA: 0x240710C Offset: 0x240710C VA: 0x240710C
	public string get_path() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23ABC Offset: 0xC23ABC VA: 0xC23ABC
	// RVA: 0x2407070 Offset: 0x2407070 VA: 0x2407070
	private void set_path(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC23ACC Offset: 0xC23ACC VA: 0xC23ACC
	// RVA: 0x2407114 Offset: 0x2407114 VA: 0x2407114
	public AssetBundle get_assetBundle() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23ADC Offset: 0xC23ADC VA: 0xC23ADC
	// RVA: 0x240711C Offset: 0x240711C VA: 0x240711C
	private void set_assetBundle(AssetBundle value) { }

	// RVA: 0x2407124 Offset: 0x2407124 VA: 0x2407124 Slot: 8
	public override void Update() { }

	// RVA: 0x2407254 Offset: 0x2407254 VA: 0x2407254 Slot: 7
	protected override void Dispose(bool disposing) { }
}

// Namespace: 
public class CriFsInstallRequest : CriFsRequest // TypeDefIndex: 4006
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC21104 Offset: 0xC21104 VA: 0xC21104
	[DebuggerBrowsableAttribute] // RVA: 0xC21104 Offset: 0xC21104 VA: 0xC21104
	private string <sourcePath>k__BackingField; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC21140 Offset: 0xC21140 VA: 0xC21140
	[DebuggerBrowsableAttribute] // RVA: 0xC21140 Offset: 0xC21140 VA: 0xC21140
	private string <destinationPath>k__BackingField; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC2117C Offset: 0xC2117C VA: 0xC2117C
	[DebuggerBrowsableAttribute] // RVA: 0xC2117C Offset: 0xC2117C VA: 0xC2117C
	private float <progress>k__BackingField; // 0x50

	// Properties
	public string sourcePath { get; set; }
	public string destinationPath { get; set; }
	public float progress { get; set; }

	// Methods

	// RVA: 0x240631C Offset: 0x240631C VA: 0x240631C
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23AEC Offset: 0xC23AEC VA: 0xC23AEC
	// RVA: 0x2406320 Offset: 0x2406320 VA: 0x2406320
	public string get_sourcePath() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23AFC Offset: 0xC23AFC VA: 0xC23AFC
	// RVA: 0x2406328 Offset: 0x2406328 VA: 0x2406328
	protected void set_sourcePath(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC23B0C Offset: 0xC23B0C VA: 0xC23B0C
	// RVA: 0x2406330 Offset: 0x2406330 VA: 0x2406330
	public string get_destinationPath() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23B1C Offset: 0xC23B1C VA: 0xC23B1C
	// RVA: 0x2406338 Offset: 0x2406338 VA: 0x2406338
	protected void set_destinationPath(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC23B2C Offset: 0xC23B2C VA: 0xC23B2C
	// RVA: 0x2406340 Offset: 0x2406340 VA: 0x2406340
	public float get_progress() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23B3C Offset: 0xC23B3C VA: 0xC23B3C
	// RVA: 0x2406348 Offset: 0x2406348 VA: 0x2406348
	protected void set_progress(float value) { }
}

// Namespace: 
public class CriFsInstallRequestLegacy : CriFsInstallRequest // TypeDefIndex: 4007
{
	// Fields
	private CriFsInstaller installer; // 0x58

	// Methods

	// RVA: 0x2406350 Offset: 0x2406350 VA: 0x2406350
	public void .ctor(CriFsBinder srcBinder, string srcPath, string dstPath, CriFsRequest.DoneDelegate doneDelegate, int installBufferSize) { }

	// RVA: 0x24066E8 Offset: 0x24066E8 VA: 0x24066E8 Slot: 6
	public override void Stop() { }

	// RVA: 0x240675C Offset: 0x240675C VA: 0x240675C Slot: 8
	public override void Update() { }

	// RVA: 0x2406920 Offset: 0x2406920 VA: 0x2406920 Slot: 7
	protected override void Dispose(bool disposing) { }
}

// Namespace: 
public class CriFsWebInstallRequest : CriFsInstallRequest // TypeDefIndex: 4008
{
	// Fields
	private CriFsWebInstaller installer; // 0x58
	private uint crc32; // 0x60
	private bool crc32_set; // 0x64

	// Methods

	// RVA: 0x240A798 Offset: 0x240A798 VA: 0x240A798
	public void .ctor(string srcPath, string dstPath, CriFsRequest.DoneDelegate doneDelegate) { }

	// RVA: 0x240B400 Offset: 0x240B400 VA: 0x240B400 Slot: 6
	public override void Stop() { }

	// RVA: 0x240B474 Offset: 0x240B474 VA: 0x240B474
	public bool GetCRC32(out uint ret_val) { }

	// RVA: 0x240B484 Offset: 0x240B484 VA: 0x240B484 Slot: 8
	public override void Update() { }

	// RVA: 0x240B784 Offset: 0x240B784 VA: 0x240B784 Slot: 7
	protected override void Dispose(bool disposing) { }
}

// Namespace: 
public class CriFsBindRequest : CriFsRequest // TypeDefIndex: 4009
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC211B8 Offset: 0xC211B8 VA: 0xC211B8
	[DebuggerBrowsableAttribute] // RVA: 0xC211B8 Offset: 0xC211B8 VA: 0xC211B8
	private string <path>k__BackingField; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC211F4 Offset: 0xC211F4 VA: 0xC211F4
	[DebuggerBrowsableAttribute] // RVA: 0xC211F4 Offset: 0xC211F4 VA: 0xC211F4
	private uint <bindId>k__BackingField; // 0x48

	// Properties
	public string path { get; set; }
	public uint bindId { get; set; }

	// Methods

	// RVA: 0x240432C Offset: 0x240432C VA: 0x240432C
	public void .ctor(CriFsBindRequest.BindType type, CriFsBinder targetBinder, CriFsBinder srcBinder, string path) { }

	[CompilerGeneratedAttribute] // RVA: 0xC23B4C Offset: 0xC23B4C VA: 0xC23B4C
	// RVA: 0x240465C Offset: 0x240465C VA: 0x240465C
	public string get_path() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23B5C Offset: 0xC23B5C VA: 0xC23B5C
	// RVA: 0x240447C Offset: 0x240447C VA: 0x240447C
	private void set_path(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC23B6C Offset: 0xC23B6C VA: 0xC23B6C
	// RVA: 0x2404664 Offset: 0x2404664 VA: 0x2404664
	public uint get_bindId() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23B7C Offset: 0xC23B7C VA: 0xC23B7C
	// RVA: 0x2404528 Offset: 0x2404528 VA: 0x2404528
	private void set_bindId(uint value) { }

	// RVA: 0x240466C Offset: 0x240466C VA: 0x240466C Slot: 6
	public override void Stop() { }

	// RVA: 0x2404670 Offset: 0x2404670 VA: 0x2404670 Slot: 8
