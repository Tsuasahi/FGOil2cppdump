	// RVA: 0x2077C78 Offset: 0x2077C78 VA: 0x2077C78 Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0x2077CD8 Offset: 0x2077CD8 VA: 0x2077CD8 Slot: 34
	public override void Clear() { }

	// RVA: 0x2077CE8 Offset: 0x2077CE8 VA: 0x2077CE8 Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0x2077CF0 Offset: 0x2077CF0 VA: 0x2077CF0 Slot: 3
	public override string ToString() { }

	// RVA: 0x2077F8C Offset: 0x2077F8C VA: 0x2077F8C Slot: 29
	public override bool TestTypeConstraint(VariableType variableType, Type _objectType) { }

	// RVA: 0x207802C Offset: 0x207802C VA: 0x207802C
	public Type RealType() { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmBool : NamedVariable // TypeDefIndex: 3346
{
	// Fields
	[SerializeField] // RVA: 0xC1859C Offset: 0xC1859C VA: 0xC1859C
	private bool value; // 0x38

	// Properties
	public bool Value { get; set; }
	public override object RawValue { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	// RVA: 0x2078284 Offset: 0x2078284 VA: 0x2078284
	public bool get_Value() { }

	// RVA: 0x20782F0 Offset: 0x20782F0 VA: 0x20782F0
	public void set_Value(bool value) { }

	// RVA: 0x20782FC Offset: 0x20782FC VA: 0x20782FC Slot: 27
	public override object get_RawValue() { }

	// RVA: 0x2078360 Offset: 0x2078360 VA: 0x2078360 Slot: 26
	public override void set_RawValue(object value) { }

	// RVA: 0x20783C8 Offset: 0x20783C8 VA: 0x20783C8
	public void .ctor() { }

	// RVA: 0x20783D0 Offset: 0x20783D0 VA: 0x20783D0
	public void .ctor(string name) { }

	// RVA: 0x20783D8 Offset: 0x20783D8 VA: 0x20783D8
	public void .ctor(FsmBool source) { }

	// RVA: 0x207840C Offset: 0x207840C VA: 0x207840C Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0x207847C Offset: 0x207847C VA: 0x207847C Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0x2078484 Offset: 0x2078484 VA: 0x2078484 Slot: 3
	public override string ToString() { }

	// RVA: 0x20784B4 Offset: 0x20784B4 VA: 0x20784B4 Slot: 33
	public override int ToInt() { }

	// RVA: 0x20784BC Offset: 0x20784BC VA: 0x20784BC Slot: 34
	public override void Clear() { }

	// RVA: 0x20784C4 Offset: 0x20784C4 VA: 0x20784C4
	public static FsmBool op_Implicit(bool value) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmColor : NamedVariable // TypeDefIndex: 3347
{
	// Fields
	[SerializeField] // RVA: 0xC185AC Offset: 0xC185AC VA: 0xC185AC
	private Color value; // 0x38

	// Properties
	public Color Value { get; set; }
	public override object RawValue { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	// RVA: 0x2078570 Offset: 0x2078570 VA: 0x2078570
	public Color get_Value() { }

	// RVA: 0x207857C Offset: 0x207857C VA: 0x207857C
	public void set_Value(Color value) { }

	// RVA: 0x2078588 Offset: 0x2078588 VA: 0x2078588 Slot: 27
	public override object get_RawValue() { }

	// RVA: 0x20785EC Offset: 0x20785EC VA: 0x20785EC Slot: 26
	public override void set_RawValue(object value) { }

	// RVA: 0x2078664 Offset: 0x2078664 VA: 0x2078664
	public void .ctor() { }

	// RVA: 0x2078698 Offset: 0x2078698 VA: 0x2078698
	public void .ctor(string name) { }

	// RVA: 0x20786D4 Offset: 0x20786D4 VA: 0x20786D4
	public void .ctor(FsmColor source) { }

	// RVA: 0x2078720 Offset: 0x2078720 VA: 0x2078720 Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0x2078780 Offset: 0x2078780 VA: 0x2078780 Slot: 34
	public override void Clear() { }

	// RVA: 0x20787AC Offset: 0x20787AC VA: 0x20787AC Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0x20787B4 Offset: 0x20787B4 VA: 0x20787B4 Slot: 3
	public override string ToString() { }

	// RVA: 0x20787C0 Offset: 0x20787C0 VA: 0x20787C0
	public static FsmColor op_Implicit(Color value) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmEnum : NamedVariable // TypeDefIndex: 3348
{
	// Fields
	[SerializeField] // RVA: 0xC185BC Offset: 0xC185BC VA: 0xC185BC
	private string enumName; // 0x38
	[SerializeField] // RVA: 0xC185CC Offset: 0xC185CC VA: 0xC185CC
	private int intValue; // 0x40
	private Enum value; // 0x48
	private int parsedIntValue; // 0x50
	private Type enumType; // 0x58

	// Properties
	public override object RawValue { get; set; }
	public Type EnumType { get; set; }
	public string EnumName { get; set; }
	public Enum Value { get; set; }
	public override VariableType VariableType { get; }
	public override Type ObjectType { get; set; }

	// Methods

	// RVA: 0x2078CE0 Offset: 0x2078CE0 VA: 0x2078CE0 Slot: 27
	public override object get_RawValue() { }

	// RVA: 0x2078E5C Offset: 0x2078E5C VA: 0x2078E5C Slot: 26
	public override void set_RawValue(object value) { }

	// RVA: 0x2078FB4 Offset: 0x2078FB4 VA: 0x2078FB4
	public Type get_EnumType() { }

	// RVA: 0x2079114 Offset: 0x2079114 VA: 0x2079114
	public void set_EnumType(Type value) { }

	// RVA: 0x2079010 Offset: 0x2079010 VA: 0x2079010
	private void InitEnumType() { }

	// RVA: 0x20792C0 Offset: 0x20792C0 VA: 0x20792C0
	public string get_EnumName() { }

	// RVA: 0x20792B8 Offset: 0x20792B8 VA: 0x20792B8
	public void set_EnumName(string value) { }

	// RVA: 0x2078CE4 Offset: 0x2078CE4 VA: 0x2078CE4
	public Enum get_Value() { }

	// RVA: 0x2078F34 Offset: 0x2078F34 VA: 0x2078F34
	public void set_Value(Enum value) { }

	// RVA: 0x20792C8 Offset: 0x20792C8 VA: 0x20792C8
	public void ResetValue() { }

	// RVA: 0x2079414 Offset: 0x2079414 VA: 0x2079414
	public void .ctor() { }

	// RVA: 0x2079424 Offset: 0x2079424 VA: 0x2079424
	public void .ctor(string name, Type enumType, int intValue) { }

	// RVA: 0x20795AC Offset: 0x20795AC VA: 0x20795AC
	public void .ctor(string name) { }

	// RVA: 0x207967C Offset: 0x207967C VA: 0x207967C
	public void .ctor(FsmEnum source) { }

	// RVA: 0x20796FC Offset: 0x20796FC VA: 0x20796FC Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0x207975C Offset: 0x207975C VA: 0x207975C Slot: 3
	public override string ToString() { }

	// RVA: 0x2079790 Offset: 0x2079790 VA: 0x2079790 Slot: 33
	public override int ToInt() { }

	// RVA: 0x2079798 Offset: 0x2079798 VA: 0x2079798 Slot: 34
	public override void Clear() { }

	// RVA: 0x207979C Offset: 0x207979C VA: 0x207979C Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0x20797A4 Offset: 0x20797A4 VA: 0x20797A4 Slot: 23
	public override Type get_ObjectType() { }

	// RVA: 0x20797A8 Offset: 0x20797A8 VA: 0x20797A8 Slot: 24
	public override void set_ObjectType(Type value) { }

	// RVA: 0x20797AC Offset: 0x20797AC VA: 0x20797AC Slot: 29
	public override bool TestTypeConstraint(VariableType variableType, Type _enumType) { }

	// RVA: 0x207988C Offset: 0x207988C VA: 0x207988C
	public static FsmEnum op_Implicit(Enum value) { }
}

// Namespace: HutongGames.PlayMaker
public enum None // TypeDefIndex: 3349
{
	// Fields
	public int value__; // 0x0
	public const None None = 0;
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmFloat : NamedVariable // TypeDefIndex: 3350
{
	// Fields
	[SerializeField] // RVA: 0xC185DC Offset: 0xC185DC VA: 0xC185DC
	private float value; // 0x38

	// Properties
	public float Value { get; set; }
	public override object RawValue { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	// RVA: 0x207FA28 Offset: 0x207FA28 VA: 0x207FA28
	public float get_Value() { }

	// RVA: 0x207FA88 Offset: 0x207FA88 VA: 0x207FA88
	public void set_Value(float value) { }

	// RVA: 0x207FA90 Offset: 0x207FA90 VA: 0x207FA90 Slot: 27
	public override object get_RawValue() { }

	// RVA: 0x207FAF4 Offset: 0x207FAF4 VA: 0x207FAF4 Slot: 26
	public override void set_RawValue(object value) { }

	// RVA: 0x207FB5C Offset: 0x207FB5C VA: 0x207FB5C Slot: 30
	public override void SafeAssign(object val) { }

	// RVA: 0x207FC04 Offset: 0x207FC04 VA: 0x207FC04
	public void .ctor() { }

	// RVA: 0x207FC0C Offset: 0x207FC0C VA: 0x207FC0C
	public void .ctor(string name) { }

	// RVA: 0x207FC14 Offset: 0x207FC14 VA: 0x207FC14
	public void .ctor(FsmFloat source) { }

	// RVA: 0x207FC48 Offset: 0x207FC48 VA: 0x207FC48 Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0x207FCB8 Offset: 0x207FCB8 VA: 0x207FCB8 Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0x207FCC0 Offset: 0x207FCC0 VA: 0x207FCC0 Slot: 3
	public override string ToString() { }

	// RVA: 0x207FCEC Offset: 0x207FCEC VA: 0x207FCEC Slot: 33
	public override int ToInt() { }

	// RVA: 0x207FCF8 Offset: 0x207FCF8 VA: 0x207FCF8 Slot: 34
	public override void Clear() { }

	// RVA: 0x207FD00 Offset: 0x207FD00 VA: 0x207FD00
	public static FsmFloat op_Implicit(float value) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmGameObject : NamedVariable // TypeDefIndex: 3351
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC185EC Offset: 0xC185EC VA: 0xC185EC
	private Action OnChange; // 0x38
	[SerializeField] // RVA: 0xC185FC Offset: 0xC185FC VA: 0xC185FC
	private GameObject value; // 0x40

	// Properties
	public GameObject Value { get; set; }
	public override Type ObjectType { get; }
	public override object RawValue { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC199CC Offset: 0xC199CC VA: 0xC199CC
	// RVA: 0x207FDA8 Offset: 0x207FDA8 VA: 0x207FDA8
	public void add_OnChange(Action value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC199DC Offset: 0xC199DC VA: 0xC199DC
	// RVA: 0x207FE94 Offset: 0x207FE94 VA: 0x207FE94
	public void remove_OnChange(Action value) { }

	// RVA: 0x207FF80 Offset: 0x207FF80 VA: 0x207FF80
	public GameObject get_Value() { }

	// RVA: 0x2080020 Offset: 0x2080020 VA: 0x2080020
	public void set_Value(GameObject value) { }

	// RVA: 0x2080048 Offset: 0x2080048 VA: 0x2080048 Slot: 23
	public override Type get_ObjectType() { }

	// RVA: 0x20800B8 Offset: 0x20800B8 VA: 0x20800B8 Slot: 27
	public override object get_RawValue() { }

	// RVA: 0x20800C0 Offset: 0x20800C0 VA: 0x20800C0 Slot: 26
	public override void set_RawValue(object value) { }

	// RVA: 0x2080134 Offset: 0x2080134 VA: 0x2080134 Slot: 30
	public override void SafeAssign(object val) { }

	// RVA: 0x20801A8 Offset: 0x20801A8 VA: 0x20801A8
	public void .ctor() { }

	// RVA: 0x20801B0 Offset: 0x20801B0 VA: 0x20801B0
	public void .ctor(string name) { }

	// RVA: 0x20801B8 Offset: 0x20801B8 VA: 0x20801B8
	public void .ctor(FsmGameObject source) { }

	// RVA: 0x20801EC Offset: 0x20801EC VA: 0x20801EC Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0x208025C Offset: 0x208025C VA: 0x208025C Slot: 34
	public override void Clear() { }

	// RVA: 0x2080264 Offset: 0x2080264 VA: 0x2080264 Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0x208026C Offset: 0x208026C VA: 0x208026C Slot: 3
	public override string ToString() { }

	// RVA: 0x2080324 Offset: 0x2080324 VA: 0x2080324
	public static FsmGameObject op_Implicit(GameObject value) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmInt : NamedVariable // TypeDefIndex: 3352
{
	// Fields
	[SerializeField] // RVA: 0xC1860C Offset: 0xC1860C VA: 0xC1860C
	private int value; // 0x38

	// Properties
	public int Value { get; set; }
	public override object RawValue { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	// RVA: 0x20803CC Offset: 0x20803CC VA: 0x20803CC
	public int get_Value() { }

	// RVA: 0x208042C Offset: 0x208042C VA: 0x208042C
	public void set_Value(int value) { }

	// RVA: 0x2080434 Offset: 0x2080434 VA: 0x2080434 Slot: 27
	public override object get_RawValue() { }

	// RVA: 0x2080498 Offset: 0x2080498 VA: 0x2080498 Slot: 26
	public override void set_RawValue(object value) { }

	// RVA: 0x2080500 Offset: 0x2080500 VA: 0x2080500 Slot: 30
	public override void SafeAssign(object val) { }

	// RVA: 0x20805D0 Offset: 0x20805D0 VA: 0x20805D0
	public void .ctor() { }

	// RVA: 0x20805D8 Offset: 0x20805D8 VA: 0x20805D8
	public void .ctor(string name) { }

	// RVA: 0x20805E0 Offset: 0x20805E0 VA: 0x20805E0
	public void .ctor(FsmInt source) { }

	// RVA: 0x2080614 Offset: 0x2080614 VA: 0x2080614 Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0x2080684 Offset: 0x2080684 VA: 0x2080684 Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0x208068C Offset: 0x208068C VA: 0x208068C Slot: 3
	public override string ToString() { }

	// RVA: 0x20806B8 Offset: 0x20806B8 VA: 0x20806B8 Slot: 32
	public override float ToFloat() { }

	// RVA: 0x20806C4 Offset: 0x20806C4 VA: 0x20806C4 Slot: 33
	public override int ToInt() { }

	// RVA: 0x20806CC Offset: 0x20806CC VA: 0x20806CC Slot: 34
	public override void Clear() { }

	// RVA: 0x20806D4 Offset: 0x20806D4 VA: 0x20806D4
	public static FsmInt op_Implicit(int value) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmMaterial : FsmObject // TypeDefIndex: 3353
{
	// Properties
	public override Type ObjectType { get; }
	public Material Value { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	// RVA: 0x2082C70 Offset: 0x2082C70 VA: 0x2082C70 Slot: 23
	public override Type get_ObjectType() { }

	// RVA: 0x2082CE0 Offset: 0x2082CE0 VA: 0x2082CE0
	public Material get_Value() { }

	// RVA: 0x2082EDC Offset: 0x2082EDC VA: 0x2082EDC
	public void set_Value(Material value) { }

	// RVA: 0x2082EEC Offset: 0x2082EEC VA: 0x2082EEC
	public void .ctor() { }

	// RVA: 0x2082EFC Offset: 0x2082EFC VA: 0x2082EFC
	public void .ctor(string name) { }

	// RVA: 0x2082FC8 Offset: 0x2082FC8 VA: 0x2082FC8
	public void .ctor(FsmObject source) { }

	// RVA: 0x2083044 Offset: 0x2083044 VA: 0x2083044 Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0x20830A4 Offset: 0x20830A4 VA: 0x20830A4 Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0x20830AC Offset: 0x20830AC VA: 0x20830AC Slot: 29
	public override bool TestTypeConstraint(VariableType variableType, Type _objectType) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmObject : NamedVariable // TypeDefIndex: 3354
{
	// Fields
	[SerializeField] // RVA: 0xC1861C Offset: 0xC1861C VA: 0xC1861C
	private string typeName; // 0x38
	[SerializeField] // RVA: 0xC1862C Offset: 0xC1862C VA: 0xC1862C
	private Object value; // 0x40
	private Type objectType; // 0x48

	// Properties
	public override Type ObjectType { get; set; }
	public string TypeName { get; }
	public Object Value { get; set; }
	public override object RawValue { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	// RVA: 0x20830C4 Offset: 0x20830C4 VA: 0x20830C4 Slot: 23
	public override Type get_ObjectType() { }

	// RVA: 0x20831D8 Offset: 0x20831D8 VA: 0x20831D8 Slot: 24
	public override void set_ObjectType(Type value) { }

	// RVA: 0x20832EC Offset: 0x20832EC VA: 0x20832EC
	public string get_TypeName() { }

	// RVA: 0x2082D68 Offset: 0x2082D68 VA: 0x2082D68
	public Object get_Value() { }

	// RVA: 0x2082EE4 Offset: 0x2082EE4 VA: 0x2082EE4
	public void set_Value(Object value) { }

	// RVA: 0x20832F4 Offset: 0x20832F4 VA: 0x20832F4 Slot: 27
	public override object get_RawValue() { }

	// RVA: 0x20832FC Offset: 0x20832FC VA: 0x20832FC Slot: 26
	public override void set_RawValue(object value) { }

	// RVA: 0x2082EF4 Offset: 0x2082EF4 VA: 0x2082EF4
	public void .ctor() { }

	// RVA: 0x2082F00 Offset: 0x2082F00 VA: 0x2082F00
	public void .ctor(string name) { }

	// RVA: 0x2082FCC Offset: 0x2082FCC VA: 0x2082FCC
	public void .ctor(FsmObject source) { }

	// RVA: 0x20833CC Offset: 0x20833CC VA: 0x20833CC Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0x208342C Offset: 0x208342C VA: 0x208342C Slot: 34
	public override void Clear() { }

	// RVA: 0x2083434 Offset: 0x2083434 VA: 0x2083434 Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0x208343C Offset: 0x208343C VA: 0x208343C Slot: 3
	public override string ToString() { }

	// RVA: 0x20834F8 Offset: 0x20834F8 VA: 0x20834F8
	public static FsmObject op_Implicit(Object value) { }

	// RVA: 0x2083568 Offset: 0x2083568 VA: 0x2083568 Slot: 29
	public override bool TestTypeConstraint(VariableType variableType, Type _objectType) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmOwnerDefault // TypeDefIndex: 3355
{
	// Fields
	[SerializeField] // RVA: 0xC1863C Offset: 0xC1863C VA: 0xC1863C
	private OwnerDefaultOption ownerOption; // 0x10
	[SerializeField] // RVA: 0xC1864C Offset: 0xC1864C VA: 0xC1864C
	private FsmGameObject gameObject; // 0x18

	// Properties
	public OwnerDefaultOption OwnerOption { get; set; }
	public FsmGameObject GameObject { get; set; }

	// Methods

	// RVA: 0x208367C Offset: 0x208367C VA: 0x208367C
	public OwnerDefaultOption get_OwnerOption() { }

	// RVA: 0x2083684 Offset: 0x2083684 VA: 0x2083684
	public void set_OwnerOption(OwnerDefaultOption value) { }

	// RVA: 0x208368C Offset: 0x208368C VA: 0x208368C
	public FsmGameObject get_GameObject() { }

	// RVA: 0x2083694 Offset: 0x2083694 VA: 0x2083694
	public void set_GameObject(FsmGameObject value) { }

	// RVA: 0x208369C Offset: 0x208369C VA: 0x208369C
	public void .ctor() { }

	// RVA: 0x207F174 Offset: 0x207F174 VA: 0x207F174
	public void .ctor(FsmOwnerDefault source) { }
}

// Namespace: HutongGames.PlayMaker
public enum OwnerDefaultOption // TypeDefIndex: 3356
{
	// Fields
	public int value__; // 0x0
	public const OwnerDefaultOption UseOwner = 0;
	public const OwnerDefaultOption SpecifyGameObject = 1;
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmQuaternion : NamedVariable // TypeDefIndex: 3357
{
	// Fields
	[SerializeField] // RVA: 0xC1865C Offset: 0xC1865C VA: 0xC1865C
	private Quaternion value; // 0x38

	// Properties
	public Quaternion Value { get; set; }
	public override object RawValue { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	// RVA: 0x2085EF8 Offset: 0x2085EF8 VA: 0x2085EF8
	public Quaternion get_Value() { }

	// RVA: 0x2086E70 Offset: 0x2086E70 VA: 0x2086E70
	public void set_Value(Quaternion value) { }

	// RVA: 0x2086F2C Offset: 0x2086F2C VA: 0x2086F2C Slot: 27
	public override object get_RawValue() { }

	// RVA: 0x2086F90 Offset: 0x2086F90 VA: 0x2086F90 Slot: 26
	public override void set_RawValue(object value) { }

	// RVA: 0x2086F1C Offset: 0x2086F1C VA: 0x2086F1C
	public void .ctor() { }

	// RVA: 0x2087008 Offset: 0x2087008 VA: 0x2087008
	public void .ctor(string name) { }

	// RVA: 0x2083DB0 Offset: 0x2083DB0 VA: 0x2083DB0
	public void .ctor(FsmQuaternion source) { }

	// RVA: 0x2087010 Offset: 0x2087010 VA: 0x2087010 Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0x2087070 Offset: 0x2087070 VA: 0x2087070 Slot: 34
	public override void Clear() { }

	// RVA: 0x20870E0 Offset: 0x20870E0 VA: 0x20870E0 Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0x20870E8 Offset: 0x20870E8 VA: 0x20870E8 Slot: 3
	public override string ToString() { }

	// RVA: 0x2087120 Offset: 0x2087120 VA: 0x2087120
	public static FsmQuaternion op_Implicit(Quaternion value) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmRect : NamedVariable // TypeDefIndex: 3358
{
	// Fields
	[SerializeField] // RVA: 0xC1866C Offset: 0xC1866C VA: 0xC1866C
	private Rect value; // 0x38

	// Properties
	public Rect Value { get; set; }
	public override object RawValue { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	// RVA: 0x2085EEC Offset: 0x2085EEC VA: 0x2085EEC
	public Rect get_Value() { }

	// RVA: 0x2086E64 Offset: 0x2086E64 VA: 0x2086E64
	public void set_Value(Rect value) { }

	// RVA: 0x20871E0 Offset: 0x20871E0 VA: 0x20871E0 Slot: 27
	public override object get_RawValue() { }

	// RVA: 0x2087244 Offset: 0x2087244 VA: 0x2087244 Slot: 26
	public override void set_RawValue(object value) { }

	// RVA: 0x2086F14 Offset: 0x2086F14 VA: 0x2086F14
	public void .ctor() { }

	// RVA: 0x20872BC Offset: 0x20872BC VA: 0x20872BC
	public void .ctor(string name) { }

	// RVA: 0x2083D6C Offset: 0x2083D6C VA: 0x2083D6C
	public void .ctor(FsmRect source) { }

	// RVA: 0x20872C4 Offset: 0x20872C4 VA: 0x20872C4 Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0x2087324 Offset: 0x2087324 VA: 0x2087324 Slot: 34
	public override void Clear() { }

	// RVA: 0x208732C Offset: 0x208732C VA: 0x208732C Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0x2087334 Offset: 0x2087334 VA: 0x2087334 Slot: 3
	public override string ToString() { }

	// RVA: 0x2087340 Offset: 0x2087340 VA: 0x2087340
	public static FsmRect op_Implicit(Rect value) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmString : NamedVariable // TypeDefIndex: 3359
{
	// Fields
	[SerializeField] // RVA: 0xC1867C Offset: 0xC1867C VA: 0xC1867C
	private string value; // 0x38

	// Properties
	public string Value { get; set; }
	public override object RawValue { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	// RVA: 0x2085E90 Offset: 0x2085E90 VA: 0x2085E90
	public string get_Value() { }

	// RVA: 0x2086E5C Offset: 0x2086E5C VA: 0x2086E5C
	public void set_Value(string value) { }

	// RVA: 0x208AA28 Offset: 0x208AA28 VA: 0x208AA28 Slot: 27
	public override object get_RawValue() { }

	// RVA: 0x208AA30 Offset: 0x208AA30 VA: 0x208AA30 Slot: 26
	public override void set_RawValue(object value) { }

	// RVA: 0x208AAE4 Offset: 0x208AAE4 VA: 0x208AAE4
	public void .ctor() { }

	// RVA: 0x208AB3C Offset: 0x208AB3C VA: 0x208AB3C
	public void .ctor(string name) { }

	// RVA: 0x207F20C Offset: 0x207F20C VA: 0x207F20C
	public void .ctor(FsmString source) { }

	// RVA: 0x208ABA4 Offset: 0x208ABA4 VA: 0x208ABA4 Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0x208AC04 Offset: 0x208AC04 VA: 0x208AC04 Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0x208AC0C Offset: 0x208AC0C VA: 0x208AC0C Slot: 3
	public override string ToString() { }

	// RVA: 0x208AC10 Offset: 0x208AC10 VA: 0x208AC10 Slot: 33
	public override int ToInt() { }

	// RVA: 0x208AC44 Offset: 0x208AC44 VA: 0x208AC44 Slot: 34
	public override void Clear() { }

	// RVA: 0x208AC94 Offset: 0x208AC94 VA: 0x208AC94 Slot: 32
	public override float ToFloat() { }

	// RVA: 0x207F284 Offset: 0x207F284 VA: 0x207F284
	public static FsmString op_Implicit(string value) { }

	// RVA: 0x2086E84 Offset: 0x2086E84 VA: 0x2086E84
	public static bool IsNullOrEmpty(FsmString fsmString) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmTexture : FsmObject // TypeDefIndex: 3360
{
	// Properties
	public override Type ObjectType { get; }
	public Texture Value { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	// RVA: 0x208B59C Offset: 0x208B59C VA: 0x208B59C Slot: 23
	public override Type get_ObjectType() { }

	// RVA: 0x2085F04 Offset: 0x2085F04 VA: 0x2085F04
	public Texture get_Value() { }

	// RVA: 0x2086E7C Offset: 0x2086E7C VA: 0x2086E7C
	public void set_Value(Texture value) { }

	// RVA: 0x2086F24 Offset: 0x2086F24 VA: 0x2086F24
	public void .ctor() { }

	// RVA: 0x208B60C Offset: 0x208B60C VA: 0x208B60C
	public void .ctor(string name) { }

	// RVA: 0x2083DF4 Offset: 0x2083DF4 VA: 0x2083DF4
	public void .ctor(FsmObject source) { }

	// RVA: 0x208B610 Offset: 0x208B610 VA: 0x208B610 Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0x208B670 Offset: 0x208B670 VA: 0x208B670 Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0x208B678 Offset: 0x208B678 VA: 0x208B678 Slot: 29
	public override bool TestTypeConstraint(VariableType variableType, Type _objectType) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmVar // TypeDefIndex: 3361
{
	// Fields
	public string variableName; // 0x10
	public string objectType; // 0x18
	public bool useVariable; // 0x20
	private NamedVariable namedVar; // 0x28
	private Type namedVarType; // 0x30
	private Type enumType; // 0x38
	private Enum enumValue; // 0x40
	private Type _objectType; // 0x48
	[SerializeField] // RVA: 0xC1868C Offset: 0xC1868C VA: 0xC1868C
	private VariableType type; // 0x50
	public float floatValue; // 0x54
	public int intValue; // 0x58
	public bool boolValue; // 0x5C
	public string stringValue; // 0x60
	public Vector4 vector4Value; // 0x68
	public Object objectReference; // 0x78
	public FsmArray arrayValue; // 0x80
	private Vector2 vector2; // 0x88
	private Vector3 vector3; // 0x90
	private Rect rect; // 0x9C

	// Properties
	public NamedVariable NamedVar { get; set; }
	public Type NamedVarType { get; }
	public Type EnumType { get; set; }
	public Enum EnumValue { get; set; }
	public Type ObjectType { get; set; }
	public VariableType Type { get; set; }
	public Type RealType { get; }
	public bool IsNone { get; }
	public Vector2 vector2Value { get; set; }
	public Vector3 vector3Value { get; set; }
	public Color colorValue { get; set; }
	public Rect rectValue { get; set; }
	public Quaternion quaternionValue { get; set; }
	public GameObject gameObjectValue { get; set; }
	public Material materialValue { get; set; }
	public Texture textureValue { get; set; }

	// Methods

	// RVA: 0x208F700 Offset: 0x208F700 VA: 0x208F700
	public NamedVariable get_NamedVar() { }

	// RVA: 0x208FD1C Offset: 0x208FD1C VA: 0x208FD1C
	public void set_NamedVar(NamedVariable value) { }

	// RVA: 0x208FF24 Offset: 0x208FF24 VA: 0x208FF24
	public Type get_NamedVarType() { }

	// RVA: 0x208FF74 Offset: 0x208FF74 VA: 0x208FF74
	public Type get_EnumType() { }

	// RVA: 0x20900A8 Offset: 0x20900A8 VA: 0x20900A8
	public void set_EnumType(Type value) { }

	// RVA: 0x20902F4 Offset: 0x20902F4 VA: 0x20902F4
	public Enum get_EnumValue() { }

	// RVA: 0x2090430 Offset: 0x2090430 VA: 0x2090430
	public void set_EnumValue(Enum value) { }

	// RVA: 0x2090570 Offset: 0x2090570 VA: 0x2090570
	public Type get_ObjectType() { }

	// RVA: 0x2090214 Offset: 0x2090214 VA: 0x2090214
	public void set_ObjectType(Type value) { }

	// RVA: 0x209065C Offset: 0x209065C VA: 0x209065C
	public VariableType get_Type() { }

	// RVA: 0x2090664 Offset: 0x2090664 VA: 0x2090664
	public void set_Type(VariableType value) { }

	// RVA: 0x209067C Offset: 0x209067C VA: 0x209067C
	public Type get_RealType() { }

	// RVA: 0x20908A8 Offset: 0x20908A8 VA: 0x20908A8
	public bool get_IsNone() { }

	// RVA: 0x209092C Offset: 0x209092C VA: 0x209092C
	public Vector2 get_vector2Value() { }

	// RVA: 0x209095C Offset: 0x209095C VA: 0x209095C
	public void set_vector2Value(Vector2 value) { }

	// RVA: 0x2090970 Offset: 0x2090970 VA: 0x2090970
	public Vector3 get_vector3Value() { }

	// RVA: 0x20909A8 Offset: 0x20909A8 VA: 0x20909A8
	public void set_vector3Value(Vector3 value) { }

	// RVA: 0x20909B8 Offset: 0x20909B8 VA: 0x20909B8
	public Color get_colorValue() { }

	// RVA: 0x20909F0 Offset: 0x20909F0 VA: 0x20909F0
	public void set_colorValue(Color value) { }

	// RVA: 0x20909FC Offset: 0x20909FC VA: 0x20909FC
	public Rect get_rectValue() { }

	// RVA: 0x2090A34 Offset: 0x2090A34 VA: 0x2090A34
	public void set_rectValue(Rect value) { }

	// RVA: 0x2090AC8 Offset: 0x2090AC8 VA: 0x2090AC8
	public Quaternion get_quaternionValue() { }

	// RVA: 0x2090B00 Offset: 0x2090B00 VA: 0x2090B00
	public void set_quaternionValue(Quaternion value) { }

	// RVA: 0x2090B0C Offset: 0x2090B0C VA: 0x2090B0C
	public GameObject get_gameObjectValue() { }

	// RVA: 0x2090B74 Offset: 0x2090B74 VA: 0x2090B74
	public void set_gameObjectValue(GameObject value) { }

	// RVA: 0x2090B7C Offset: 0x2090B7C VA: 0x2090B7C
	public Material get_materialValue() { }

	// RVA: 0x2090C00 Offset: 0x2090C00 VA: 0x2090C00
	public void set_materialValue(Material value) { }

	// RVA: 0x2090C08 Offset: 0x2090C08 VA: 0x2090C08
	public Texture get_textureValue() { }

	// RVA: 0x2090C8C Offset: 0x2090C8C VA: 0x2090C8C
	public void set_textureValue(Texture value) { }

	// RVA: 0x2090C94 Offset: 0x2090C94 VA: 0x2090C94
	public void .ctor() { }

	// RVA: 0x2090CA4 Offset: 0x2090CA4 VA: 0x2090CA4
	public void .ctor(Type type) { }

	// RVA: 0x2090F00 Offset: 0x2090F00 VA: 0x2090F00
	public void .ctor(FsmVar source) { }

	// RVA: 0x2091EBC Offset: 0x2091EBC VA: 0x2091EBC
	public void .ctor(INamedVariable variable) { }

	// RVA: 0x209208C Offset: 0x209208C VA: 0x209208C
	public void Init(NamedVariable variable) { }

	// RVA: 0x208FDAC Offset: 0x208FDAC VA: 0x208FDAC
	private void UpdateType(INamedVariable sourceVar) { }

	// RVA: 0x208F730 Offset: 0x208F730 VA: 0x208F730
	private void InitNamedVar() { }

	// RVA: 0x208FFA4 Offset: 0x208FFA4 VA: 0x208FFA4
	private void InitEnumType() { }

	// RVA: 0x209211C Offset: 0x209211C VA: 0x209211C
	public object GetValue() { }

	// RVA: 0x2090FAC Offset: 0x2090FAC VA: 0x2090FAC
	public void GetValueFrom(INamedVariable variable) { }

	// RVA: 0x208B4A0 Offset: 0x208B4A0 VA: 0x208B4A0
	public void UpdateValue() { }

	// RVA: 0x209232C Offset: 0x209232C VA: 0x209232C
	public void ApplyValueTo(INamedVariable targetVariable) { }

	// RVA: 0x2093350 Offset: 0x2093350 VA: 0x2093350
	public string DebugString() { }

	// RVA: 0x2093430 Offset: 0x2093430 VA: 0x2093430 Slot: 3
	public override string ToString() { }

	// RVA: 0x20934A8 Offset: 0x20934A8 VA: 0x20934A8
	public void SetValue(object value) { }

	// RVA: 0x2093A20 Offset: 0x2093A20 VA: 0x2093A20
	private void DebugLog() { }

	// RVA: 0x2084B04 Offset: 0x2084B04 VA: 0x2084B04
	public static VariableType GetVariableType(Type type) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmVector2 : NamedVariable // TypeDefIndex: 3362
{
	// Fields
	[SerializeField] // RVA: 0xC1869C Offset: 0xC1869C VA: 0xC1869C
	private Vector2 value; // 0x38

	// Properties
	public Vector2 Value { get; set; }
	public override object RawValue { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	// RVA: 0x20B8A48 Offset: 0x20B8A48 VA: 0x20B8A48
	public Vector2 get_Value() { }

	// RVA: 0x20B8A50 Offset: 0x20B8A50 VA: 0x20B8A50
	public void set_Value(Vector2 value) { }

	// RVA: 0x20BE1F8 Offset: 0x20BE1F8 VA: 0x20BE1F8 Slot: 27
	public override object get_RawValue() { }

	// RVA: 0x20BE25C Offset: 0x20BE25C VA: 0x20BE25C Slot: 26
	public override void set_RawValue(object value) { }

	// RVA: 0x20BE2C4 Offset: 0x20BE2C4 VA: 0x20BE2C4
	public void .ctor() { }

	// RVA: 0x20BBF18 Offset: 0x20BBF18 VA: 0x20BBF18
	public void .ctor(string name) { }

	// RVA: 0x20B6A20 Offset: 0x20B6A20 VA: 0x20B6A20
	public void .ctor(FsmVector2 source) { }

	// RVA: 0x20BE3C0 Offset: 0x20BE3C0 VA: 0x20BE3C0 Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0x20BE42C Offset: 0x20BE42C VA: 0x20BE42C Slot: 34
	public override void Clear() { }

	// RVA: 0x20BE434 Offset: 0x20BE434 VA: 0x20BE434 Slot: 22
	public override VariableType get_VariableType() { }
