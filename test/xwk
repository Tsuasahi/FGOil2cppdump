	protected float[] resultFloats; // 0xB8
	protected float[] fromFloats; // 0xC0
	protected float[] toFloats; // 0xC8
	protected bool finishAction; // 0xD0
	protected bool isRunning; // 0xD1
	protected bool looping; // 0xD2
	private bool start; // 0xD3
	private float largestEndTime; // 0xD4

	// Methods

	// RVA: 0x1D29CDC Offset: 0x1D29CDC VA: 0x1D29CDC
	protected void .ctor() { }

	// RVA: 0x1D29D68 Offset: 0x1D29D68 VA: 0x1D29D68 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D2A474 Offset: 0x1D2A474 VA: 0x1D2A474 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D2A510 Offset: 0x1D2A510 VA: 0x1D2A510
	protected void Init() { }

	// RVA: 0x1D2AFF0 Offset: 0x1D2AFF0 VA: 0x1D2AFF0 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D2C884 Offset: 0x1D2C884 VA: 0x1D2C884
	private void CheckStart() { }

	// RVA: 0x1D2C930 Offset: 0x1D2C930 VA: 0x1D2C930
	private void UpdateTime() { }

	// RVA: 0x1D2B6B8 Offset: 0x1D2B6B8 VA: 0x1D2B6B8
	public void UpdateAnimation() { }

	// RVA: 0x1D2CA58 Offset: 0x1D2CA58 VA: 0x1D2CA58
	private void CheckFinished() { }
}

// Namespace: 
public enum AnimateFsmAction.Calculation // TypeDefIndex: 12262
{
	// Fields
	public int value__; // 0x0
	public const AnimateFsmAction.Calculation None = 0;
	public const AnimateFsmAction.Calculation SetValue = 1;
	public const AnimateFsmAction.Calculation AddToValue = 2;
	public const AnimateFsmAction.Calculation SubtractFromValue = 3;
	public const AnimateFsmAction.Calculation SubtractValueFromCurve = 4;
	public const AnimateFsmAction.Calculation MultiplyValue = 5;
	public const AnimateFsmAction.Calculation DivideValue = 6;
	public const AnimateFsmAction.Calculation DivideCurveByValue = 7;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2DB84 Offset: 0xC2DB84 VA: 0xC2DB84
[TooltipAttribute] // RVA: 0xC2DB84 Offset: 0xC2DB84 VA: 0xC2DB84
public class AnimateRect : AnimateFsmAction // TypeDefIndex: 12263
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC88464 Offset: 0xC88464 VA: 0xC88464
	[UIHintAttribute] // RVA: 0xC88464 Offset: 0xC88464 VA: 0xC88464
	public FsmRect rectVariable; // 0xD8
	[RequiredFieldAttribute] // RVA: 0xC884A0 Offset: 0xC884A0 VA: 0xC884A0
	public FsmAnimationCurve curveX; // 0xE0
	[TooltipAttribute] // RVA: 0xC884B0 Offset: 0xC884B0 VA: 0xC884B0
	public AnimateFsmAction.Calculation calculationX; // 0xE8
	[RequiredFieldAttribute] // RVA: 0xC884E8 Offset: 0xC884E8 VA: 0xC884E8
	public FsmAnimationCurve curveY; // 0xF0
	[TooltipAttribute] // RVA: 0xC884F8 Offset: 0xC884F8 VA: 0xC884F8
	public AnimateFsmAction.Calculation calculationY; // 0xF8
	[RequiredFieldAttribute] // RVA: 0xC88530 Offset: 0xC88530 VA: 0xC88530
	public FsmAnimationCurve curveW; // 0x100
	[TooltipAttribute] // RVA: 0xC88540 Offset: 0xC88540 VA: 0xC88540
	public AnimateFsmAction.Calculation calculationW; // 0x108
	[RequiredFieldAttribute] // RVA: 0xC88578 Offset: 0xC88578 VA: 0xC88578
	public FsmAnimationCurve curveH; // 0x110
	[TooltipAttribute] // RVA: 0xC88588 Offset: 0xC88588 VA: 0xC88588
	public AnimateFsmAction.Calculation calculationH; // 0x118
	private bool finishInNextStep; // 0x11C

	// Methods

	// RVA: 0x1D2CB18 Offset: 0x1D2CB18 VA: 0x1D2CB18
	public void .ctor() { }

	// RVA: 0x1D2CB20 Offset: 0x1D2CB20 VA: 0x1D2CB20 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D2CBA4 Offset: 0x1D2CBA4 VA: 0x1D2CBA4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D2D160 Offset: 0x1D2D160 VA: 0x1D2D160
	private void UpdateVariableValue() { }

	// RVA: 0x1D2D2B8 Offset: 0x1D2D2B8 VA: 0x1D2D2B8 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2DBE4 Offset: 0xC2DBE4 VA: 0xC2DBE4
[TooltipAttribute] // RVA: 0xC2DBE4 Offset: 0xC2DBE4 VA: 0xC2DBE4
public class AnimateVector3 : AnimateFsmAction // TypeDefIndex: 12264
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC885C0 Offset: 0xC885C0 VA: 0xC885C0
	[UIHintAttribute] // RVA: 0xC885C0 Offset: 0xC885C0 VA: 0xC885C0
	public FsmVector3 vectorVariable; // 0xD8
	[RequiredFieldAttribute] // RVA: 0xC885FC Offset: 0xC885FC VA: 0xC885FC
	public FsmAnimationCurve curveX; // 0xE0
	[TooltipAttribute] // RVA: 0xC8860C Offset: 0xC8860C VA: 0xC8860C
	public AnimateFsmAction.Calculation calculationX; // 0xE8
	[RequiredFieldAttribute] // RVA: 0xC88644 Offset: 0xC88644 VA: 0xC88644
	public FsmAnimationCurve curveY; // 0xF0
	[TooltipAttribute] // RVA: 0xC88654 Offset: 0xC88654 VA: 0xC88654
	public AnimateFsmAction.Calculation calculationY; // 0xF8
	[RequiredFieldAttribute] // RVA: 0xC8868C Offset: 0xC8868C VA: 0xC8868C
	public FsmAnimationCurve curveZ; // 0x100
	[TooltipAttribute] // RVA: 0xC8869C Offset: 0xC8869C VA: 0xC8869C
	public AnimateFsmAction.Calculation calculationZ; // 0x108
	private bool finishInNextStep; // 0x10C

	// Methods

	// RVA: 0x1D2D358 Offset: 0x1D2D358 VA: 0x1D2D358
	public void .ctor() { }

	// RVA: 0x1D2D360 Offset: 0x1D2D360 VA: 0x1D2D360 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D2D3E4 Offset: 0x1D2D3E4 VA: 0x1D2D3E4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D2D82C Offset: 0x1D2D82C VA: 0x1D2D82C
	private void UpdateVariableValue() { }

	// RVA: 0x1D2D94C Offset: 0x1D2D94C VA: 0x1D2D94C Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2DC34 Offset: 0xC2DC34 VA: 0xC2DC34
[TooltipAttribute] // RVA: 0xC2DC34 Offset: 0xC2DC34 VA: 0xC2DC34
public class CurveColor : CurveFsmAction // TypeDefIndex: 12265
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC886D4 Offset: 0xC886D4 VA: 0xC886D4
	[UIHintAttribute] // RVA: 0xC886D4 Offset: 0xC886D4 VA: 0xC886D4
	public FsmColor colorVariable; // 0xE0
	[RequiredFieldAttribute] // RVA: 0xC88710 Offset: 0xC88710 VA: 0xC88710
	public FsmColor fromValue; // 0xE8
	[RequiredFieldAttribute] // RVA: 0xC88720 Offset: 0xC88720 VA: 0xC88720
	public FsmColor toValue; // 0xF0
	[RequiredFieldAttribute] // RVA: 0xC88730 Offset: 0xC88730 VA: 0xC88730
	public FsmAnimationCurve curveR; // 0xF8
	[TooltipAttribute] // RVA: 0xC88740 Offset: 0xC88740 VA: 0xC88740
	public CurveFsmAction.Calculation calculationR; // 0x100
	[RequiredFieldAttribute] // RVA: 0xC88778 Offset: 0xC88778 VA: 0xC88778
	public FsmAnimationCurve curveG; // 0x108
	[TooltipAttribute] // RVA: 0xC88788 Offset: 0xC88788 VA: 0xC88788
	public CurveFsmAction.Calculation calculationG; // 0x110
	[RequiredFieldAttribute] // RVA: 0xC887C0 Offset: 0xC887C0 VA: 0xC887C0
	public FsmAnimationCurve curveB; // 0x118
	[TooltipAttribute] // RVA: 0xC887D0 Offset: 0xC887D0 VA: 0xC887D0
	public CurveFsmAction.Calculation calculationB; // 0x120
	[RequiredFieldAttribute] // RVA: 0xC88808 Offset: 0xC88808 VA: 0xC88808
	public FsmAnimationCurve curveA; // 0x128
	[TooltipAttribute] // RVA: 0xC88818 Offset: 0xC88818 VA: 0xC88818
	public CurveFsmAction.Calculation calculationA; // 0x130
	private Color clr; // 0x134
	private bool finishInNextStep; // 0x144

	// Methods

	// RVA: 0x1D3E468 Offset: 0x1D3E468 VA: 0x1D3E468
	public void .ctor() { }

	// RVA: 0x1D3E478 Offset: 0x1D3E478 VA: 0x1D3E478 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3E724 Offset: 0x1D3E724 VA: 0x1D3E724 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3F888 Offset: 0x1D3F888 VA: 0x1D3F888 Slot: 37
	public override void OnExit() { }

	// RVA: 0x1D3F88C Offset: 0x1D3F88C VA: 0x1D3F88C Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2DC84 Offset: 0xC2DC84 VA: 0xC2DC84
[TooltipAttribute] // RVA: 0xC2DC84 Offset: 0xC2DC84 VA: 0xC2DC84
public class CurveFloat : CurveFsmAction // TypeDefIndex: 12266
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC88850 Offset: 0xC88850 VA: 0xC88850
	[UIHintAttribute] // RVA: 0xC88850 Offset: 0xC88850 VA: 0xC88850
	public FsmFloat floatVariable; // 0xE0
	[RequiredFieldAttribute] // RVA: 0xC8888C Offset: 0xC8888C VA: 0xC8888C
	public FsmFloat fromValue; // 0xE8
	[RequiredFieldAttribute] // RVA: 0xC8889C Offset: 0xC8889C VA: 0xC8889C
	public FsmFloat toValue; // 0xF0
	[RequiredFieldAttribute] // RVA: 0xC888AC Offset: 0xC888AC VA: 0xC888AC
	public FsmAnimationCurve animCurve; // 0xF8
	[TooltipAttribute] // RVA: 0xC888BC Offset: 0xC888BC VA: 0xC888BC
	public CurveFsmAction.Calculation calculation; // 0x100
	private bool finishInNextStep; // 0x104

	// Methods

	// RVA: 0x1D4168C Offset: 0x1D4168C VA: 0x1D4168C
	public void .ctor() { }

	// RVA: 0x1D41694 Offset: 0x1D41694 VA: 0x1D41694 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D41788 Offset: 0x1D41788 VA: 0x1D41788 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D419CC Offset: 0x1D419CC VA: 0x1D419CC Slot: 37
	public override void OnExit() { }

	// RVA: 0x1D419D0 Offset: 0x1D419D0 VA: 0x1D419D0 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[TooltipAttribute] // RVA: 0xC2DCD4 Offset: 0xC2DCD4 VA: 0xC2DCD4
public abstract class CurveFsmAction : FsmStateAction // TypeDefIndex: 12267
{
	// Fields
	[TooltipAttribute] // RVA: 0xC888F4 Offset: 0xC888F4 VA: 0xC888F4
	public FsmFloat time; // 0x50
	[TooltipAttribute] // RVA: 0xC8892C Offset: 0xC8892C VA: 0xC8892C
	public FsmFloat speed; // 0x58
	[TooltipAttribute] // RVA: 0xC88964 Offset: 0xC88964 VA: 0xC88964
	public FsmFloat delay; // 0x60
	[TooltipAttribute] // RVA: 0xC8899C Offset: 0xC8899C VA: 0xC8899C
	public FsmBool ignoreCurveOffset; // 0x68
	[TooltipAttribute] // RVA: 0xC889D4 Offset: 0xC889D4 VA: 0xC889D4
	public FsmEvent finishEvent; // 0x70
	[TooltipAttribute] // RVA: 0xC88A0C Offset: 0xC88A0C VA: 0xC88A0C
	public bool realTime; // 0x78
	private float startTime; // 0x7C
	private float currentTime; // 0x80
	private float[] endTimes; // 0x88
	private float lastTime; // 0x90
	private float deltaTime; // 0x94
	private float delayTime; // 0x98
	private float[] keyOffsets; // 0xA0
	protected AnimationCurve[] curves; // 0xA8
	protected CurveFsmAction.Calculation[] calculations; // 0xB0
	protected float[] resultFloats; // 0xB8
	protected float[] fromFloats; // 0xC0
	protected float[] toFloats; // 0xC8
	private float[] distances; // 0xD0
	protected bool finishAction; // 0xD8
	protected bool isRunning; // 0xD9
	protected bool looping; // 0xDA
	private bool start; // 0xDB
	private float largestEndTime; // 0xDC

	// Methods

	// RVA: 0x1D3E470 Offset: 0x1D3E470 VA: 0x1D3E470
	protected void .ctor() { }

	// RVA: 0x1D3E56C Offset: 0x1D3E56C VA: 0x1D3E56C Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3EE18 Offset: 0x1D3EE18 VA: 0x1D3EE18 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3EEB4 Offset: 0x1D3EEB4 VA: 0x1D3EEB4
	protected void Init() { }

	// RVA: 0x1D3FBD4 Offset: 0x1D3FBD4 VA: 0x1D3FBD4 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: 
public enum CurveFsmAction.Calculation // TypeDefIndex: 12268
{
	// Fields
	public int value__; // 0x0
	public const CurveFsmAction.Calculation None = 0;
	public const CurveFsmAction.Calculation AddToValue = 1;
	public const CurveFsmAction.Calculation SubtractFromValue = 2;
	public const CurveFsmAction.Calculation SubtractValueFromCurve = 3;
	public const CurveFsmAction.Calculation MultiplyValue = 4;
	public const CurveFsmAction.Calculation DivideValue = 5;
	public const CurveFsmAction.Calculation DivideCurveByValue = 6;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2DD0C Offset: 0xC2DD0C VA: 0xC2DD0C
[TooltipAttribute] // RVA: 0xC2DD0C Offset: 0xC2DD0C VA: 0xC2DD0C
public class CurveRect : CurveFsmAction // TypeDefIndex: 12269
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC88A44 Offset: 0xC88A44 VA: 0xC88A44
	[UIHintAttribute] // RVA: 0xC88A44 Offset: 0xC88A44 VA: 0xC88A44
	public FsmRect rectVariable; // 0xE0
	[RequiredFieldAttribute] // RVA: 0xC88A80 Offset: 0xC88A80 VA: 0xC88A80
	public FsmRect fromValue; // 0xE8
	[RequiredFieldAttribute] // RVA: 0xC88A90 Offset: 0xC88A90 VA: 0xC88A90
	public FsmRect toValue; // 0xF0
	[RequiredFieldAttribute] // RVA: 0xC88AA0 Offset: 0xC88AA0 VA: 0xC88AA0
	public FsmAnimationCurve curveX; // 0xF8
	[TooltipAttribute] // RVA: 0xC88AB0 Offset: 0xC88AB0 VA: 0xC88AB0
	public CurveFsmAction.Calculation calculationX; // 0x100
	[RequiredFieldAttribute] // RVA: 0xC88AE8 Offset: 0xC88AE8 VA: 0xC88AE8
	public FsmAnimationCurve curveY; // 0x108
	[TooltipAttribute] // RVA: 0xC88AF8 Offset: 0xC88AF8 VA: 0xC88AF8
	public CurveFsmAction.Calculation calculationY; // 0x110
	[RequiredFieldAttribute] // RVA: 0xC88B30 Offset: 0xC88B30 VA: 0xC88B30
	public FsmAnimationCurve curveW; // 0x118
	[TooltipAttribute] // RVA: 0xC88B40 Offset: 0xC88B40 VA: 0xC88B40
	public CurveFsmAction.Calculation calculationW; // 0x120
	[RequiredFieldAttribute] // RVA: 0xC88B78 Offset: 0xC88B78 VA: 0xC88B78
	public FsmAnimationCurve curveH; // 0x128
	[TooltipAttribute] // RVA: 0xC88B88 Offset: 0xC88B88 VA: 0xC88B88
	public CurveFsmAction.Calculation calculationH; // 0x130
	private Rect rct; // 0x134
	private bool finishInNextStep; // 0x144

	// Methods

	// RVA: 0x1D41B48 Offset: 0x1D41B48 VA: 0x1D41B48
	public void .ctor() { }

	// RVA: 0x1D41B50 Offset: 0x1D41B50 VA: 0x1D41B50 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D41C44 Offset: 0x1D41C44 VA: 0x1D41C44 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D42404 Offset: 0x1D42404 VA: 0x1D42404 Slot: 37
	public override void OnExit() { }

	// RVA: 0x1D42408 Offset: 0x1D42408 VA: 0x1D42408 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2DD6C Offset: 0xC2DD6C VA: 0xC2DD6C
[TooltipAttribute] // RVA: 0xC2DD6C Offset: 0xC2DD6C VA: 0xC2DD6C
public class CurveVector3 : CurveFsmAction // TypeDefIndex: 12270
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC88BC0 Offset: 0xC88BC0 VA: 0xC88BC0
	[UIHintAttribute] // RVA: 0xC88BC0 Offset: 0xC88BC0 VA: 0xC88BC0
	public FsmVector3 vectorVariable; // 0xE0
	[RequiredFieldAttribute] // RVA: 0xC88BFC Offset: 0xC88BFC VA: 0xC88BFC
	public FsmVector3 fromValue; // 0xE8
	[RequiredFieldAttribute] // RVA: 0xC88C0C Offset: 0xC88C0C VA: 0xC88C0C
	public FsmVector3 toValue; // 0xF0
	[RequiredFieldAttribute] // RVA: 0xC88C1C Offset: 0xC88C1C VA: 0xC88C1C
	public FsmAnimationCurve curveX; // 0xF8
	[TooltipAttribute] // RVA: 0xC88C2C Offset: 0xC88C2C VA: 0xC88C2C
	public CurveFsmAction.Calculation calculationX; // 0x100
	[RequiredFieldAttribute] // RVA: 0xC88C64 Offset: 0xC88C64 VA: 0xC88C64
	public FsmAnimationCurve curveY; // 0x108
	[TooltipAttribute] // RVA: 0xC88C74 Offset: 0xC88C74 VA: 0xC88C74
	public CurveFsmAction.Calculation calculationY; // 0x110
	[RequiredFieldAttribute] // RVA: 0xC88CAC Offset: 0xC88CAC VA: 0xC88CAC
	public FsmAnimationCurve curveZ; // 0x118
	[TooltipAttribute] // RVA: 0xC88CBC Offset: 0xC88CBC VA: 0xC88CBC
	public CurveFsmAction.Calculation calculationZ; // 0x120
	private Vector3 vct; // 0x124
	private bool finishInNextStep; // 0x130

	// Methods

	// RVA: 0x1D42750 Offset: 0x1D42750 VA: 0x1D42750
	public void .ctor() { }

	// RVA: 0x1D42758 Offset: 0x1D42758 VA: 0x1D42758 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D4284C Offset: 0x1D4284C VA: 0x1D4284C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D42DB0 Offset: 0x1D42DB0 VA: 0x1D42DB0 Slot: 37
	public override void OnExit() { }

	// RVA: 0x1D42DB4 Offset: 0x1D42DB4 VA: 0x1D42DB4 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2DDBC Offset: 0xC2DDBC VA: 0xC2DDBC
[TooltipAttribute] // RVA: 0xC2DDBC Offset: 0xC2DDBC VA: 0xC2DDBC
public class EaseColor : EaseFsmAction // TypeDefIndex: 12271
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC88CF4 Offset: 0xC88CF4 VA: 0xC88CF4
	public FsmColor fromValue; // 0xC8
	[RequiredFieldAttribute] // RVA: 0xC88D04 Offset: 0xC88D04 VA: 0xC88D04
	public FsmColor toValue; // 0xD0
	[UIHintAttribute] // RVA: 0xC88D14 Offset: 0xC88D14 VA: 0xC88D14
	public FsmColor colorVariable; // 0xD8
	private bool finishInNextStep; // 0xE0

	// Methods

	// RVA: 0x12ED0D0 Offset: 0x12ED0D0 VA: 0x12ED0D0
	public void .ctor() { }

	// RVA: 0x12ED15C Offset: 0x12ED15C VA: 0x12ED15C Slot: 28
	public override void Reset() { }

	// RVA: 0x12ED300 Offset: 0x12ED300 VA: 0x12ED300 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12ED77C Offset: 0x12ED77C VA: 0x12ED77C Slot: 37
	public override void OnExit() { }

	// RVA: 0x12ED784 Offset: 0x12ED784 VA: 0x12ED784 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2DE0C Offset: 0xC2DE0C VA: 0xC2DE0C
[TooltipAttribute] // RVA: 0xC2DE0C Offset: 0xC2DE0C VA: 0xC2DE0C
public class EaseFloat : EaseFsmAction // TypeDefIndex: 12272
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC88D28 Offset: 0xC88D28 VA: 0xC88D28
	public FsmFloat fromValue; // 0xC8
	[RequiredFieldAttribute] // RVA: 0xC88D38 Offset: 0xC88D38 VA: 0xC88D38
	public FsmFloat toValue; // 0xD0
	[UIHintAttribute] // RVA: 0xC88D48 Offset: 0xC88D48 VA: 0xC88D48
	public FsmFloat floatVariable; // 0xD8
	private bool finishInNextStep; // 0xE0

	// Methods

	// RVA: 0x12EDFB4 Offset: 0x12EDFB4 VA: 0x12EDFB4
	public void .ctor() { }

	// RVA: 0x12EDFB8 Offset: 0x12EDFB8 VA: 0x12EDFB8 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EDFE4 Offset: 0x12EDFE4 VA: 0x12EDFE4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12EE14C Offset: 0x12EE14C VA: 0x12EE14C Slot: 37
	public override void OnExit() { }

	// RVA: 0x12EE150 Offset: 0x12EE150 VA: 0x12EE150 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[TooltipAttribute] // RVA: 0xC2DE5C Offset: 0xC2DE5C VA: 0xC2DE5C
public abstract class EaseFsmAction : FsmStateAction // TypeDefIndex: 12273
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC88D5C Offset: 0xC88D5C VA: 0xC88D5C
	public FsmFloat time; // 0x50
	public FsmFloat speed; // 0x58
	public FsmFloat delay; // 0x60
	public EaseFsmAction.EaseType easeType; // 0x68
	public FsmBool reverse; // 0x70
	[TooltipAttribute] // RVA: 0xC88D6C Offset: 0xC88D6C VA: 0xC88D6C
	public FsmEvent finishEvent; // 0x78
	[TooltipAttribute] // RVA: 0xC88DA4 Offset: 0xC88DA4 VA: 0xC88DA4
	public bool realTime; // 0x80
	protected EaseFsmAction.EasingFunction ease; // 0x88
	protected float runningTime; // 0x90
	protected float lastTime; // 0x94
	protected float startTime; // 0x98
	protected float deltaTime; // 0x9C
	protected float delayTime; // 0xA0
	protected float percentage; // 0xA4
	protected float[] fromFloats; // 0xA8
	protected float[] toFloats; // 0xB0
	protected float[] resultFloats; // 0xB8
	protected bool finishAction; // 0xC0
	protected bool start; // 0xC1
	protected bool finished; // 0xC2
	protected bool isRunning; // 0xC3

	// Methods

	// RVA: 0x12ED0D4 Offset: 0x12ED0D4 VA: 0x12ED0D4
	protected void .ctor() { }

	// RVA: 0x12ED188 Offset: 0x12ED188 VA: 0x12ED188 Slot: 28
	public override void Reset() { }

	// RVA: 0x12ED668 Offset: 0x12ED668 VA: 0x12ED668 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12ED780 Offset: 0x12ED780 VA: 0x12ED780 Slot: 37
	public override void OnExit() { }

	// RVA: 0x12EDC3C Offset: 0x12EDC3C VA: 0x12EDC3C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x12EE4C8 Offset: 0x12EE4C8 VA: 0x12EE4C8
	protected void UpdatePercentage() { }

	// RVA: 0x12EE2FC Offset: 0x12EE2FC VA: 0x12EE2FC
	protected void SetEasingFunction() { }

	// RVA: 0x12EE8FC Offset: 0x12EE8FC VA: 0x12EE8FC
	protected float linear(float start, float end, float value) { }

	// RVA: 0x12EE984 Offset: 0x12EE984 VA: 0x12EE984
	protected float clerp(float start, float end, float value) { }

	// RVA: 0x12EEA50 Offset: 0x12EEA50 VA: 0x12EEA50
	protected float spring(float start, float end, float value) { }

	// RVA: 0x12EEB54 Offset: 0x12EEB54 VA: 0x12EEB54
	protected float easeInQuad(float start, float end, float value) { }

	// RVA: 0x12EEB68 Offset: 0x12EEB68 VA: 0x12EEB68
	protected float easeOutQuad(float start, float end, float value) { }

	// RVA: 0x12EEB84 Offset: 0x12EEB84 VA: 0x12EEB84
	protected float easeInOutQuad(float start, float end, float value) { }

	// RVA: 0x12EEBD8 Offset: 0x12EEBD8 VA: 0x12EEBD8
	protected float easeInCubic(float start, float end, float value) { }

	// RVA: 0x12EEBF0 Offset: 0x12EEBF0 VA: 0x12EEBF0
	protected float easeOutCubic(float start, float end, float value) { }

	// RVA: 0x12EEC18 Offset: 0x12EEC18 VA: 0x12EEC18
	protected float easeInOutCubic(float start, float end, float value) { }

	// RVA: 0x12EEC70 Offset: 0x12EEC70 VA: 0x12EEC70
	protected float easeInQuart(float start, float end, float value) { }

	// RVA: 0x12EEC8C Offset: 0x12EEC8C VA: 0x12EEC8C
	protected float easeOutQuart(float start, float end, float value) { }

	// RVA: 0x12EECB4 Offset: 0x12EECB4 VA: 0x12EECB4
	protected float easeInOutQuart(float start, float end, float value) { }

	// RVA: 0x12EED10 Offset: 0x12EED10 VA: 0x12EED10
	protected float easeInQuint(float start, float end, float value) { }

	// RVA: 0x12EED30 Offset: 0x12EED30 VA: 0x12EED30
	protected float easeOutQuint(float start, float end, float value) { }

	// RVA: 0x12EED60 Offset: 0x12EED60 VA: 0x12EED60
	protected float easeInOutQuint(float start, float end, float value) { }

	// RVA: 0x12EEDC8 Offset: 0x12EEDC8 VA: 0x12EEDC8
	protected float easeInSine(float start, float end, float value) { }

	// RVA: 0x12EEE60 Offset: 0x12EEE60 VA: 0x12EEE60
	protected float easeOutSine(float start, float end, float value) { }

	// RVA: 0x12EEEF4 Offset: 0x12EEEF4 VA: 0x12EEEF4
	protected float easeInOutSine(float start, float end, float value) { }

	// RVA: 0x12EEF98 Offset: 0x12EEF98 VA: 0x12EEF98
	protected float easeInExpo(float start, float end, float value) { }

	// RVA: 0x12EF030 Offset: 0x12EF030 VA: 0x12EF030
	protected float easeOutExpo(float start, float end, float value) { }

	// RVA: 0x12EF0C8 Offset: 0x12EF0C8 VA: 0x12EF0C8
	protected float easeInOutExpo(float start, float end, float value) { }

	// RVA: 0x12EF1B8 Offset: 0x12EF1B8 VA: 0x12EF1B8
	protected float easeInCirc(float start, float end, float value) { }

	// RVA: 0x12EF264 Offset: 0x12EF264 VA: 0x12EF264
	protected float easeOutCirc(float start, float end, float value) { }

	// RVA: 0x12EF310 Offset: 0x12EF310 VA: 0x12EF310
	protected float easeInOutCirc(float start, float end, float value) { }

	// RVA: 0x12EF408 Offset: 0x12EF408 VA: 0x12EF408
	protected float bounce(float start, float end, float value) { }

	// RVA: 0x12EF4D8 Offset: 0x12EF4D8 VA: 0x12EF4D8
	protected float easeInBack(float start, float end, float value) { }

	// RVA: 0x12EF508 Offset: 0x12EF508 VA: 0x12EF508
	protected float easeOutBack(float start, float end, float value) { }

	// RVA: 0x12EF548 Offset: 0x12EF548 VA: 0x12EF548
	protected float easeInOutBack(float start, float end, float value) { }

	// RVA: 0x12EF5CC Offset: 0x12EF5CC VA: 0x12EF5CC
	protected float punch(float amplitude, float value) { }

	// RVA: 0x12EF68C Offset: 0x12EF68C VA: 0x12EF68C
	protected float elastic(float start, float end, float value) { }
}

// Namespace: 
protected sealed class EaseFsmAction.EasingFunction : MulticastDelegate // TypeDefIndex: 12274
{
	// Methods

	// RVA: 0x12EE8EC Offset: 0x12EE8EC VA: 0x12EE8EC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x12EE66C Offset: 0x12EE66C VA: 0x12EE66C Slot: 11
	public virtual float Invoke(float start, float end, float value) { }

	// RVA: 0x12EF770 Offset: 0x12EF770 VA: 0x12EF770 Slot: 12
	public virtual IAsyncResult BeginInvoke(float start, float end, float value, AsyncCallback callback, object object) { }

	// RVA: 0x12EF828 Offset: 0x12EF828 VA: 0x12EF828 Slot: 13
	public virtual float EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public enum EaseFsmAction.EaseType // TypeDefIndex: 12275
{
	// Fields
	public int value__; // 0x0
	public const EaseFsmAction.EaseType easeInQuad = 0;
	public const EaseFsmAction.EaseType easeOutQuad = 1;
	public const EaseFsmAction.EaseType easeInOutQuad = 2;
	public const EaseFsmAction.EaseType easeInCubic = 3;
	public const EaseFsmAction.EaseType easeOutCubic = 4;
	public const EaseFsmAction.EaseType easeInOutCubic = 5;
	public const EaseFsmAction.EaseType easeInQuart = 6;
	public const EaseFsmAction.EaseType easeOutQuart = 7;
	public const EaseFsmAction.EaseType easeInOutQuart = 8;
	public const EaseFsmAction.EaseType easeInQuint = 9;
	public const EaseFsmAction.EaseType easeOutQuint = 10;
	public const EaseFsmAction.EaseType easeInOutQuint = 11;
	public const EaseFsmAction.EaseType easeInSine = 12;
	public const EaseFsmAction.EaseType easeOutSine = 13;
	public const EaseFsmAction.EaseType easeInOutSine = 14;
	public const EaseFsmAction.EaseType easeInExpo = 15;
	public const EaseFsmAction.EaseType easeOutExpo = 16;
	public const EaseFsmAction.EaseType easeInOutExpo = 17;
	public const EaseFsmAction.EaseType easeInCirc = 18;
	public const EaseFsmAction.EaseType easeOutCirc = 19;
	public const EaseFsmAction.EaseType easeInOutCirc = 20;
	public const EaseFsmAction.EaseType linear = 21;
	public const EaseFsmAction.EaseType spring = 22;
	public const EaseFsmAction.EaseType bounce = 23;
	public const EaseFsmAction.EaseType easeInBack = 24;
	public const EaseFsmAction.EaseType easeOutBack = 25;
	public const EaseFsmAction.EaseType easeInOutBack = 26;
	public const EaseFsmAction.EaseType elastic = 27;
	public const EaseFsmAction.EaseType punch = 28;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2DE94 Offset: 0xC2DE94 VA: 0xC2DE94
[TooltipAttribute] // RVA: 0xC2DE94 Offset: 0xC2DE94 VA: 0xC2DE94
public class EaseRect : EaseFsmAction // TypeDefIndex: 12276
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC88DDC Offset: 0xC88DDC VA: 0xC88DDC
	public FsmRect fromValue; // 0xC8
	[RequiredFieldAttribute] // RVA: 0xC88DEC Offset: 0xC88DEC VA: 0xC88DEC
	public FsmRect toValue; // 0xD0
	[UIHintAttribute] // RVA: 0xC88DFC Offset: 0xC88DFC VA: 0xC88DFC
	public FsmRect rectVariable; // 0xD8
	private bool finishInNextStep; // 0xE0

	// Methods

	// RVA: 0x12EF864 Offset: 0x12EF864 VA: 0x12EF864
	public void .ctor() { }

	// RVA: 0x12EF868 Offset: 0x12EF868 VA: 0x12EF868 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EF894 Offset: 0x12EF894 VA: 0x12EF894 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12EFCC8 Offset: 0x12EFCC8 VA: 0x12EFCC8 Slot: 37
	public override void OnExit() { }

	// RVA: 0x12EFCCC Offset: 0x12EFCCC VA: 0x12EFCCC Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2DEF4 Offset: 0xC2DEF4 VA: 0xC2DEF4
[TooltipAttribute] // RVA: 0xC2DEF4 Offset: 0xC2DEF4 VA: 0xC2DEF4
public class EaseVector3 : EaseFsmAction // TypeDefIndex: 12277
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC88E10 Offset: 0xC88E10 VA: 0xC88E10
	public FsmVector3 fromValue; // 0xC8
	[RequiredFieldAttribute] // RVA: 0xC88E20 Offset: 0xC88E20 VA: 0xC88E20
	public FsmVector3 toValue; // 0xD0
	[UIHintAttribute] // RVA: 0xC88E30 Offset: 0xC88E30 VA: 0xC88E30
	public FsmVector3 vector3Variable; // 0xD8
	private bool finishInNextStep; // 0xE0

	// Methods

	// RVA: 0x12F01B8 Offset: 0x12F01B8 VA: 0x12F01B8
	public void .ctor() { }

	// RVA: 0x12F01BC Offset: 0x12F01BC VA: 0x12F01BC Slot: 28
	public override void Reset() { }

	// RVA: 0x12F01E8 Offset: 0x12F01E8 VA: 0x12F01E8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12F04A8 Offset: 0x12F04A8 VA: 0x12F04A8 Slot: 37
	public override void OnExit() { }

	// RVA: 0x12F04AC Offset: 0x12F04AC VA: 0x12F04AC Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
public abstract class BaseAnimationAction : ComponentAction<Animation> // TypeDefIndex: 12278
{
	// Methods

	// RVA: 0x1D28774 Offset: 0x1D28774 VA: 0x1D28774
	protected void .ctor() { }

	// RVA: 0x1D32B50 Offset: 0x1D32B50 VA: 0x1D32B50 Slot: 41
	public override void OnActionTargetInvoked(object targetObject) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2DF44 Offset: 0xC2DF44 VA: 0xC2DF44
[TooltipAttribute] // RVA: 0xC2DF44 Offset: 0xC2DF44 VA: 0xC2DF44
public class AnimationSettings : BaseAnimationAction // TypeDefIndex: 12279
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC88E44 Offset: 0xC88E44 VA: 0xC88E44
	[CheckForComponentAttribute] // RVA: 0xC88E44 Offset: 0xC88E44 VA: 0xC88E44
	[TooltipAttribute] // RVA: 0xC88E44 Offset: 0xC88E44 VA: 0xC88E44
	public FsmOwnerDefault gameObject; // 0x60
	[RequiredFieldAttribute] // RVA: 0xC88EDC Offset: 0xC88EDC VA: 0xC88EDC
	[UIHintAttribute] // RVA: 0xC88EDC Offset: 0xC88EDC VA: 0xC88EDC
	[TooltipAttribute] // RVA: 0xC88EDC Offset: 0xC88EDC VA: 0xC88EDC
	public FsmString animName; // 0x68
	[TooltipAttribute] // RVA: 0xC88F3C Offset: 0xC88F3C VA: 0xC88F3C
	public WrapMode wrapMode; // 0x70
	[TooltipAttribute] // RVA: 0xC88F74 Offset: 0xC88F74 VA: 0xC88F74
	public AnimationBlendMode blendMode; // 0x74
	[HasFloatSliderAttribute] // RVA: 0xC88FAC Offset: 0xC88FAC VA: 0xC88FAC
	[TooltipAttribute] // RVA: 0xC88FAC Offset: 0xC88FAC VA: 0xC88FAC
	public FsmFloat speed; // 0x78
	[TooltipAttribute] // RVA: 0xC89000 Offset: 0xC89000 VA: 0xC89000
	public FsmInt layer; // 0x80

	// Methods

	// RVA: 0x1D2D9EC Offset: 0x1D2D9EC VA: 0x1D2D9EC
	public void .ctor() { }

	// RVA: 0x1D2D9F0 Offset: 0x1D2D9F0 VA: 0x1D2D9F0 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D2DA38 Offset: 0x1D2DA38 VA: 0x1D2DA38 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D2DA60 Offset: 0x1D2DA60 VA: 0x1D2DA60
	private void DoAnimationSettings() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2DF94 Offset: 0xC2DF94 VA: 0xC2DF94
[TooltipAttribute] // RVA: 0xC2DF94 Offset: 0xC2DF94 VA: 0xC2DF94
public class AnimatorCrossFade : FsmStateAction // TypeDefIndex: 12280
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC89038 Offset: 0xC89038 VA: 0xC89038
	[CheckForComponentAttribute] // RVA: 0xC89038 Offset: 0xC89038 VA: 0xC89038
	[TooltipAttribute] // RVA: 0xC89038 Offset: 0xC89038 VA: 0xC89038
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xC890D0 Offset: 0xC890D0 VA: 0xC890D0
	public FsmString stateName; // 0x58
	[TooltipAttribute] // RVA: 0xC89108 Offset: 0xC89108 VA: 0xC89108
	public FsmFloat transitionDuration; // 0x60
	[TooltipAttribute] // RVA: 0xC89140 Offset: 0xC89140 VA: 0xC89140
	public FsmInt layer; // 0x68
	[TooltipAttribute] // RVA: 0xC89178 Offset: 0xC89178 VA: 0xC89178
	public FsmFloat normalizedTime; // 0x70
	private Animator _animator; // 0x78

	// Methods

	// RVA: 0x1D2DD44 Offset: 0x1D2DD44 VA: 0x1D2DD44
	public void .ctor() { }

	// RVA: 0x1D2DD4C Offset: 0x1D2DD4C VA: 0x1D2DD4C Slot: 28
	public override void Reset() { }

	// RVA: 0x1D2DE18 Offset: 0x1D2DE18 VA: 0x1D2DE18 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2DFE4 Offset: 0xC2DFE4 VA: 0xC2DFE4
[TooltipAttribute] // RVA: 0xC2DFE4 Offset: 0xC2DFE4 VA: 0xC2DFE4
public class AnimatorInterruptMatchTarget : FsmStateAction // TypeDefIndex: 12281
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC891B0 Offset: 0xC891B0 VA: 0xC891B0
	[CheckForComponentAttribute] // RVA: 0xC891B0 Offset: 0xC891B0 VA: 0xC891B0
	[TooltipAttribute] // RVA: 0xC891B0 Offset: 0xC891B0 VA: 0xC891B0
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xC89248 Offset: 0xC89248 VA: 0xC89248
	public FsmBool completeMatch; // 0x58

	// Methods

	// RVA: 0x1D2E034 Offset: 0x1D2E034 VA: 0x1D2E034
	public void .ctor() { }

	// RVA: 0x1D2E03C Offset: 0x1D2E03C VA: 0x1D2E03C Slot: 28
	public override void Reset() { }

	// RVA: 0x1D2E06C Offset: 0x1D2E06C VA: 0x1D2E06C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2E034 Offset: 0xC2E034 VA: 0xC2E034
[TooltipAttribute] // RVA: 0xC2E034 Offset: 0xC2E034 VA: 0xC2E034
public class AnimatorMatchTarget : FsmStateAction // TypeDefIndex: 12282
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC89280 Offset: 0xC89280 VA: 0xC89280
	[CheckForComponentAttribute] // RVA: 0xC89280 Offset: 0xC89280 VA: 0xC89280
	[TooltipAttribute] // RVA: 0xC89280 Offset: 0xC89280 VA: 0xC89280
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xC89318 Offset: 0xC89318 VA: 0xC89318
	public AvatarTarget bodyPart; // 0x58
	[TooltipAttribute] // RVA: 0xC89350 Offset: 0xC89350 VA: 0xC89350
	public FsmGameObject target; // 0x60
	[TooltipAttribute] // RVA: 0xC89388 Offset: 0xC89388 VA: 0xC89388
	public FsmVector3 targetPosition; // 0x68
	[TooltipAttribute] // RVA: 0xC893C0 Offset: 0xC893C0 VA: 0xC893C0
	public FsmQuaternion targetRotation; // 0x70
	[TooltipAttribute] // RVA: 0xC893F8 Offset: 0xC893F8 VA: 0xC893F8
	public FsmVector3 positionWeight; // 0x78
	[TooltipAttribute] // RVA: 0xC89430 Offset: 0xC89430 VA: 0xC89430
	public FsmFloat rotationWeight; // 0x80
	[TooltipAttribute] // RVA: 0xC89468 Offset: 0xC89468 VA: 0xC89468
	public FsmFloat startNormalizedTime; // 0x88
	[TooltipAttribute] // RVA: 0xC894A0 Offset: 0xC894A0 VA: 0xC894A0
	public FsmFloat targetNormalizedTime; // 0x90
	[TooltipAttribute] // RVA: 0xC894D8 Offset: 0xC894D8 VA: 0xC894D8
	public bool everyFrame; // 0x98
	private Animator _animator; // 0xA0
	private Transform _transform; // 0xA8

	// Methods

	// RVA: 0x1D2E1B4 Offset: 0x1D2E1B4 VA: 0x1D2E1B4
	public void .ctor() { }

	// RVA: 0x1D2E1BC Offset: 0x1D2E1BC VA: 0x1D2E1BC Slot: 28
	public override void Reset() { }

	// RVA: 0x1D2E2D8 Offset: 0x1D2E2D8 VA: 0x1D2E2D8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D2E864 Offset: 0x1D2E864 VA: 0x1D2E864 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D2E470 Offset: 0x1D2E470 VA: 0x1D2E470
	private void DoMatchTarget() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2E084 Offset: 0xC2E084 VA: 0xC2E084
[TooltipAttribute] // RVA: 0xC2E084 Offset: 0xC2E084 VA: 0xC2E084
public class AnimatorPlay : FsmStateAction // TypeDefIndex: 12283
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC89510 Offset: 0xC89510 VA: 0xC89510
	[CheckForComponentAttribute] // RVA: 0xC89510 Offset: 0xC89510 VA: 0xC89510
	[TooltipAttribute] // RVA: 0xC89510 Offset: 0xC89510 VA: 0xC89510
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xC895A8 Offset: 0xC895A8 VA: 0xC895A8
	public FsmString stateName; // 0x58
	[TooltipAttribute] // RVA: 0xC895E0 Offset: 0xC895E0 VA: 0xC895E0
	public FsmInt layer; // 0x60
	[TooltipAttribute] // RVA: 0xC89618 Offset: 0xC89618 VA: 0xC89618
	public FsmFloat normalizedTime; // 0x68
	[TooltipAttribute] // RVA: 0xC89650 Offset: 0xC89650 VA: 0xC89650
	public bool everyFrame; // 0x70
	private Animator _animator; // 0x78

	// Methods

	// RVA: 0x1D2E868 Offset: 0x1D2E868 VA: 0x1D2E868
	public void .ctor() { }

	// RVA: 0x1D2E870 Offset: 0x1D2E870 VA: 0x1D2E870 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D2E930 Offset: 0x1D2E930 VA: 0x1D2E930 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D2EBA0 Offset: 0x1D2EBA0 VA: 0x1D2EBA0 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D2EA2C Offset: 0x1D2EA2C VA: 0x1D2EA2C
	private void DoAnimatorPlay() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2E0D4 Offset: 0xC2E0D4 VA: 0xC2E0D4
[TooltipAttribute] // RVA: 0xC2E0D4 Offset: 0xC2E0D4 VA: 0xC2E0D4
public class AnimatorStartPlayback : FsmStateAction // TypeDefIndex: 12284
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC89688 Offset: 0xC89688 VA: 0xC89688
	[CheckForComponentAttribute] // RVA: 0xC89688 Offset: 0xC89688 VA: 0xC89688
	[TooltipAttribute] // RVA: 0xC89688 Offset: 0xC89688 VA: 0xC89688
	public FsmOwnerDefault gameObject; // 0x50

	// Methods

	// RVA: 0x1D2EBA4 Offset: 0x1D2EBA4 VA: 0x1D2EBA4
	public void .ctor() { }

	// RVA: 0x1D2EBAC Offset: 0x1D2EBAC VA: 0x1D2EBAC Slot: 28
	public override void Reset() { }

	// RVA: 0x1D2EBB4 Offset: 0x1D2EBB4 VA: 0x1D2EBB4 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2E124 Offset: 0xC2E124 VA: 0xC2E124
[TooltipAttribute] // RVA: 0xC2E124 Offset: 0xC2E124 VA: 0xC2E124
public class AnimatorStartRecording : FsmStateAction // TypeDefIndex: 12285
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC89720 Offset: 0xC89720 VA: 0xC89720
	[CheckForComponentAttribute] // RVA: 0xC89720 Offset: 0xC89720 VA: 0xC89720
	[TooltipAttribute] // RVA: 0xC89720 Offset: 0xC89720 VA: 0xC89720
	public FsmOwnerDefault gameObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC897B8 Offset: 0xC897B8 VA: 0xC897B8
	[TooltipAttribute] // RVA: 0xC897B8 Offset: 0xC897B8 VA: 0xC897B8
	public FsmInt frameCount; // 0x58

	// Methods

	// RVA: 0x1D2ECD8 Offset: 0x1D2ECD8 VA: 0x1D2ECD8
	public void .ctor() { }

	// RVA: 0x1D2ECE0 Offset: 0x1D2ECE0 VA: 0x1D2ECE0 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D2ED10 Offset: 0x1D2ED10 VA: 0x1D2ED10 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2E174 Offset: 0xC2E174 VA: 0xC2E174
[TooltipAttribute] // RVA: 0xC2E174 Offset: 0xC2E174 VA: 0xC2E174
public class AnimatorStopPlayback : FsmStateAction // TypeDefIndex: 12286
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC89804 Offset: 0xC89804 VA: 0xC89804
	[CheckForComponentAttribute] // RVA: 0xC89804 Offset: 0xC89804 VA: 0xC89804
	[TooltipAttribute] // RVA: 0xC89804 Offset: 0xC89804 VA: 0xC89804
	public FsmOwnerDefault gameObject; // 0x50

	// Methods

	// RVA: 0x1D2EE58 Offset: 0x1D2EE58 VA: 0x1D2EE58
	public void .ctor() { }

	// RVA: 0x1D2EE60 Offset: 0x1D2EE60 VA: 0x1D2EE60 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D2EE68 Offset: 0x1D2EE68 VA: 0x1D2EE68 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2E1C4 Offset: 0xC2E1C4 VA: 0xC2E1C4
[TooltipAttribute] // RVA: 0xC2E1C4 Offset: 0xC2E1C4 VA: 0xC2E1C4
public class AnimatorStopRecording : FsmStateAction // TypeDefIndex: 12287
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC8989C Offset: 0xC8989C VA: 0xC8989C
	[CheckForComponentAttribute] // RVA: 0xC8989C Offset: 0xC8989C VA: 0xC8989C
	[TooltipAttribute] // RVA: 0xC8989C Offset: 0xC8989C VA: 0xC8989C
	public FsmOwnerDefault gameObject; // 0x50
	[ActionSection] // RVA: 0xC89934 Offset: 0xC89934 VA: 0xC89934
	[UIHintAttribute] // RVA: 0xC89934 Offset: 0xC89934 VA: 0xC89934
	[TooltipAttribute] // RVA: 0xC89934 Offset: 0xC89934 VA: 0xC89934
	public FsmFloat recorderStartTime; // 0x58
	[UIHintAttribute] // RVA: 0xC899A8 Offset: 0xC899A8 VA: 0xC899A8
	[TooltipAttribute] // RVA: 0xC899A8 Offset: 0xC899A8 VA: 0xC899A8
