	public void set_BeforeClearQuestIdForAction(int value) { }

	// RVA: 0xFF31D4 Offset: 0xFF31D4 VA: 0xFF31D4
	public void SetSpotClickAct(Action action) { }

	// RVA: 0xFF31DC Offset: 0xFF31DC VA: 0xFF31DC
	public SrcSpotBasePrefab GetFocusSpot() { }

	// RVA: 0xFEBA14 Offset: 0xFEBA14 VA: 0xFEBA14
	public GameObject GetSpotMaskObj() { }

	// RVA: 0xFF3288 Offset: 0xFF3288 VA: 0xFF3288
	public GameObject GetAllMaskObj() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4280 Offset: 0xCD4280 VA: 0xCD4280
	// RVA: 0xFF3290 Offset: 0xFF3290 VA: 0xFF3290
	private GameObject get_EventBoardGameObj() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4290 Offset: 0xCD4290 VA: 0xCD4290
	// RVA: 0xFF3298 Offset: 0xFF3298 VA: 0xFF3298
	private void set_EventBoardGameObj(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD42A0 Offset: 0xCD42A0 VA: 0xCD42A0
	// RVA: 0xFF32A0 Offset: 0xFF32A0 VA: 0xFF32A0
	private GameObject get_EventBoardPieceObj() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD42B0 Offset: 0xCD42B0 VA: 0xCD42B0
	// RVA: 0xFF32A8 Offset: 0xFF32A8 VA: 0xFF32A8
	private void set_EventBoardPieceObj(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD42C0 Offset: 0xCD42C0 VA: 0xCD42C0
	// RVA: 0xFF32B0 Offset: 0xFF32B0 VA: 0xFF32B0
	private GameObject get_EventBoardQuestArrivalPanelObj() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD42D0 Offset: 0xCD42D0 VA: 0xCD42D0
	// RVA: 0xFF32B8 Offset: 0xFF32B8 VA: 0xFF32B8
	private void set_EventBoardQuestArrivalPanelObj(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD42E0 Offset: 0xCD42E0 VA: 0xCD42E0
	// RVA: 0xFF32C0 Offset: 0xFF32C0 VA: 0xFF32C0
	private GameObject get_EventBoardStopPanelObj() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD42F0 Offset: 0xCD42F0 VA: 0xCD42F0
	// RVA: 0xFF32C8 Offset: 0xFF32C8 VA: 0xFF32C8
	private void set_EventBoardStopPanelObj(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4300 Offset: 0xCD4300 VA: 0xCD4300
	// RVA: 0xFF32D0 Offset: 0xFF32D0 VA: 0xFF32D0
	private GameObject get_EventBoardDiceButtonEffectObj() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4310 Offset: 0xCD4310 VA: 0xCD4310
	// RVA: 0xFF32D8 Offset: 0xFF32D8 VA: 0xFF32D8
	private void set_EventBoardDiceButtonEffectObj(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4320 Offset: 0xCD4320 VA: 0xCD4320
	// RVA: 0xFF32E0 Offset: 0xFF32E0 VA: 0xFF32E0
	private Dictionary<string, object> get_EventBoardDiceVoiceInfo() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4330 Offset: 0xCD4330 VA: 0xCD4330
	// RVA: 0xFF32E8 Offset: 0xFF32E8 VA: 0xFF32E8
	private void set_EventBoardDiceVoiceInfo(Dictionary<string, object> value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4340 Offset: 0xCD4340 VA: 0xCD4340
	// RVA: 0xFF32F0 Offset: 0xFF32F0 VA: 0xFF32F0
	private List<QuestReleaseEntity> get_EventBoardQuestReleaseList() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4350 Offset: 0xCD4350 VA: 0xCD4350
	// RVA: 0xFF32F8 Offset: 0xFF32F8 VA: 0xFF32F8
	private void set_EventBoardQuestReleaseList(List<QuestReleaseEntity> value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4360 Offset: 0xCD4360 VA: 0xCD4360
	// RVA: 0xFF3300 Offset: 0xFF3300 VA: 0xFF3300
	private int[] get_EventBoardGameArrivalVoiceSvtIdList() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4370 Offset: 0xCD4370 VA: 0xCD4370
	// RVA: 0xFF3308 Offset: 0xFF3308 VA: 0xFF3308
	private void set_EventBoardGameArrivalVoiceSvtIdList(int[] value) { }

	// RVA: 0xFF3310 Offset: 0xFF3310 VA: 0xFF3310
	private void Awake() { }

	// RVA: 0xFF3474 Offset: 0xFF3474 VA: 0xFF3474
	private void Start() { }

	// RVA: 0xFF3550 Offset: 0xFF3550 VA: 0xFF3550
	protected void Update() { }

	// RVA: 0xFF3878 Offset: 0xFF3878 VA: 0xFF3878
	public void UpdateEventRaidUI() { }

	// RVA: 0xFF3DF8 Offset: 0xFF3DF8 VA: 0xFF3DF8
	public void SetDisp(bool isDisp) { }

	// RVA: 0xFF3F14 Offset: 0xFF3F14 VA: 0xFF3F14
	public void SetCore(GameObject obj) { }

	// RVA: 0xFF34D0 Offset: 0xFF34D0 VA: 0xFF34D0
	private void InitTitleInfo() { }

	// RVA: 0xFF3FBC Offset: 0xFF3FBC VA: 0xFF3FBC
	public void InitMapCamera() { }

	// RVA: 0xFF3FEC Offset: 0xFF3FEC VA: 0xFF3FEC
	public void ProcessMapCamera(bool isMapTouchEnabled = True) { }

	// RVA: 0xFF4024 Offset: 0xFF4024 VA: 0xFF4024
	private void OnDestroy() { }

	// RVA: 0xFF440C Offset: 0xFF440C VA: 0xFF440C
	private void InitCheckUpdateRequest(Action callback) { }

	// RVA: 0xFF36D4 Offset: 0xFF36D4 VA: 0xFF36D4
	private void CheckUpdateRequest(bool isFromTerminal, Action callback) { }

	// RVA: 0xFF48DC Offset: 0xFF48DC VA: 0xFF48DC
	private void TerminalSceneRefresh(bool isFromTerminal) { }

	// RVA: 0xFF4778 Offset: 0xFF4778 VA: 0xFF4778
	public void BeginRaidUpdateRequest(Action callback) { }

	[DebuggerHiddenAttribute] // RVA: 0xCD4380 Offset: 0xCD4380 VA: 0xCD4380
	// RVA: 0xFF4880 Offset: 0xFF4880 VA: 0xFF4880
	private IEnumerator WaitConnecting() { }

	// RVA: 0xFF38A8 Offset: 0xFF38A8 VA: 0xFF38A8
	private void StartRaidAnimation() { }

	// RVA: 0xFF49F0 Offset: 0xFF49F0 VA: 0xFF49F0
	public long GetTimeLimitAt(int eventId) { }

	// RVA: 0xFF39D0 Offset: 0xFF39D0 VA: 0xFF39D0
	private void CheckRaidTimeLimit() { }

	// RVA: 0xFF4628 Offset: 0xFF4628 VA: 0xFF4628
	private bool IsDialogOnActive() { }

	// RVA: 0xFF4A7C Offset: 0xFF4A7C VA: 0xFF4A7C
	public void Quit(TerminalSceneComponent.QUIT_TYPE quitType) { }

	// RVA: 0xFF4AC0 Offset: 0xFF4AC0 VA: 0xFF4AC0
	public void DestroyEventActionEffect() { }

	// RVA: 0xFF4B74 Offset: 0xFF4B74 VA: 0xFF4B74
	private void CreateMapEff() { }

	// RVA: 0xFF4D6C Offset: 0xFF4D6C VA: 0xFF4D6C
	private void DestroyMapEff() { }

	// RVA: 0xFF4F18 Offset: 0xFF4F18 VA: 0xFF4F18
	public void SetPlayerIcon(GameObject spotObject) { }

	// RVA: 0xFF5044 Offset: 0xFF5044 VA: 0xFF5044
	public void MovePlayerIcon(GameObject spotObject, int spotId, Action endFunc, float time) { }

	// RVA: 0xFF52B8 Offset: 0xFF52B8 VA: 0xFF52B8
	public void smfSpot_SetPos(int spotId) { }

	// RVA: 0xFF5308 Offset: 0xFF5308 VA: 0xFF5308
	private void smfMap2d_LoadStart() { }

	// RVA: 0xFF5460 Offset: 0xFF5460 VA: 0xFF5460
	private void LoadMap() { }

	// RVA: 0xFF68F4 Offset: 0xFF68F4 VA: 0xFF68F4
	private void SetupMapGimmickBasePrefab(MapEntity mapEnt, AssetData assetData, AssetData multiAssetData) { }

	// RVA: 0xFF6B14 Offset: 0xFF6B14 VA: 0xFF6B14
	private void LoadEventMap() { }

	// RVA: 0xFF5C5C Offset: 0xFF5C5C VA: 0xFF5C5C
	private void AttachEventMapManager() { }

	// RVA: 0xFF4324 Offset: 0xFF4324 VA: 0xFF4324
	private void DetachEventMapManager() { }

	// RVA: 0xFF6C04 Offset: 0xFF6C04 VA: 0xFF6C04
	private void LoadFinishMapPack() { }

	// RVA: 0xFF6C80 Offset: 0xFF6C80 VA: 0xFF6C80
	public void smfSetMapChange() { }

	// RVA: 0xFF70E8 Offset: 0xFF70E8 VA: 0xFF70E8
	private void eventInfoAssetLoad(Action callback) { }

	// RVA: 0xFF60B8 Offset: 0xFF60B8 VA: 0xFF60B8
	private void LoadAssetsAtlases(AssetData assetData, string atlasName) { }

	// RVA: 0xFF601C Offset: 0xFF601C VA: 0xFF601C
	private string GetAssetAtlasName(object assetId) { }

	// RVA: 0xFF72F0 Offset: 0xFF72F0 VA: 0xFF72F0
	private string GetMultiMapAssetAtlasName(object assetId, MapEntity mapEntity) { }

	// RVA: 0xFF5E04 Offset: 0xFF5E04 VA: 0xFF5E04
	private string GetAssetName(object assetId) { }

	// RVA: 0xFF5EB4 Offset: 0xFF5EB4 VA: 0xFF5EB4
	private string GetAssetMultiMapName(object assetId, MapEntity mapEntity) { }

	// RVA: 0xFF62D4 Offset: 0xFF62D4 VA: 0xFF62D4
	private void LoadMapEffectPrefab(AssetData assetData) { }

	// RVA: 0xFF64C4 Offset: 0xFF64C4 VA: 0xFF64C4
	private void LoadEventMapObject(AssetData assetData) { }

	// RVA: 0xFF75B0 Offset: 0xFF75B0 VA: 0xFF75B0
	private void LoadEventBoardGameMapObject(AssetData assetData) { }

	// RVA: 0xFF78B8 Offset: 0xFF78B8 VA: 0xFF78B8
	private void LoadCooltimeMapObject(AssetData assetData) { }

	// RVA: 0xFF65F4 Offset: 0xFF65F4 VA: 0xFF65F4
	private void LoadMapImgTex(Action endCallback) { }

	// RVA: 0xFF5958 Offset: 0xFF5958 VA: 0xFF5958
	private void DestroyMapObjs() { }

	// RVA: 0xFF825C Offset: 0xFF825C VA: 0xFF825C
	private void DestroyChildObjects(GameObject pearentObj) { }

	// RVA: 0xFF404C Offset: 0xFF404C VA: 0xFF404C
	public void ReleaseMap(bool isReleaseAseets = True) { }

	// RVA: 0xFF8938 Offset: 0xFF8938 VA: 0xFF8938
	private void smfMap2d_SpotMarkCreate() { }

	// RVA: 0xFFB104 Offset: 0xFFB104 VA: 0xFFB104
	private bool IsCreateBoardGameGimmick() { }

	// RVA: 0xFFB264 Offset: 0xFFB264 VA: 0xFFB264
	private bool IsSkipCreateBoardGameGimmick(MapControl.MapGimmickInfo mapGimmickInfo) { }

	// RVA: 0xFF9F38 Offset: 0xFF9F38 VA: 0xFF9F38
	private int GetPlayerSpotId() { }

	// RVA: 0xFFA96C Offset: 0xFFA96C VA: 0xFFA96C
	private GameObject GetSpotGameObject(int spotId) { }

	// RVA: 0xFFB848 Offset: 0xFFB848 VA: 0xFFB848
	public void UpdateSpotGameObject(int spotId) { }

	// RVA: 0xFEBCD8 Offset: 0xFEBCD8 VA: 0xFEBCD8
	public void UpdateAllSpotGameObject() { }

	// RVA: 0xFF396C Offset: 0xFF396C VA: 0xFF396C
	private void UpdateAllMovingSpotPosition(bool isFocedMove = False) { }

	// RVA: 0xFEBE28 Offset: 0xFEBE28 VA: 0xFEBE28
	public void UpdateMapButtonBadge() { }

	// RVA: 0xFFB7E4 Offset: 0xFFB7E4 VA: 0xFFB7E4
	public void SetMapCamera_FocusSpot(SrcSpotBasePrefab spot, float time = 0, Action endAction) { }

	// RVA: 0xFFBA14 Offset: 0xFFBA14 VA: 0xFFBA14
	public void SetMapCamera_TutorialFocusSpot(SrcSpotBasePrefab spot, float time = 0) { }

	// RVA: 0xFFB6CC Offset: 0xFFB6CC VA: 0xFFB6CC
	public void SetMapCamera(Vector3 pos, float time = 0, Action endAction) { }

	// RVA: 0xFFA1A8 Offset: 0xFFA1A8 VA: 0xFFA1A8
	private SrcSpotBasePrefab mfMap2d_Create_SpotBySpotInfo(int spotId) { }

	// RVA: 0xFFBAC4 Offset: 0xFFBAC4 VA: 0xFFBAC4
	private Custom2dSplineMesh mfMap2d_Create_PathBySpotId(int spotId, out GameObject pathLength) { }

	// RVA: 0xFFC050 Offset: 0xFFC050 VA: 0xFFC050
	private GameObject GetSpotPathBaseObject(SpotPathEntity spotPathEnt, AssetData assetData, AssetData multiAssetData) { }

	// RVA: 0xFFC1E8 Offset: 0xFFC1E8 VA: 0xFFC1E8
	private GameObject CreatePathLengthObject(long length) { }

	// RVA: 0xFFAA84 Offset: 0xFFAA84 VA: 0xFFAA84
	private void mfMap2d_Create_LineBySpotID(MapControl.SpotRoadInfo spotRoadInfo) { }

	// RVA: 0xFFB450 Offset: 0xFFB450 VA: 0xFFB450
	private MapGimmickComponent CreateMapGimmick(MapControl.MapGimmickInfo mapGimmickInfo) { }

	// RVA: 0xFFC364 Offset: 0xFFC364 VA: 0xFFC364
	private void mcbfWhiteOut_ToMap() { }

	// RVA: 0xFFC804 Offset: 0xFFC804 VA: 0xFFC804
	private void mcbfWhiteOut_ToMap_End() { }

	// RVA: 0xFFC880 Offset: 0xFFC880 VA: 0xFFC880
	private void mcbfWhiteIn_ToMap() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD4390 Offset: 0xCD4390 VA: 0xCD4390
	// RVA: 0xFFCFFC Offset: 0xFFCFFC VA: 0xFFCFFC
	private IEnumerator WaitScriptLoad() { }

	// RVA: 0xFFD06C Offset: 0xFFD06C VA: 0xFFD06C
	private void afterFadeInMapDisp() { }

	// RVA: 0xFFD0D8 Offset: 0xFFD0D8 VA: 0xFFD0D8
	private void mcbfWhiteOut() { }

	// RVA: 0xFFD1D4 Offset: 0xFFD1D4 VA: 0xFFD1D4
	private void mcbfSpotMaskStart() { }

	// RVA: 0xFFD33C Offset: 0xFFD33C VA: 0xFFD33C
	private void SpotMaskStart_FadeEnd() { }

	// RVA: 0xFFD38C Offset: 0xFFD38C VA: 0xFFD38C
	private void mcbfSpotMaskEnd() { }

	// RVA: 0xFFD494 Offset: 0xFFD494 VA: 0xFFD494
	private void SpotMaskEnd_FadeEnd() { }

	// RVA: 0xFFD504 Offset: 0xFFD504 VA: 0xFFD504
	public void ForceOffSpotLarge() { }

	// RVA: 0xFFD5A4 Offset: 0xFFD5A4 VA: 0xFFD5A4
	public void AllMaskStart(bool isClearMask = False, bool isFixedAllMask = False) { }

	// RVA: 0xFEE298 Offset: 0xFEE298 VA: 0xFEE298
	public void AllMaskEnd() { }

	// RVA: 0xFFBFF8 Offset: 0xFFBFF8 VA: 0xFFBFF8
	public Vector3 LocalPosFromCoord(float x, float y, float offsetX = 0, float offsetY = 0) { }

	// RVA: 0xFFD6D4 Offset: 0xFFD6D4 VA: 0xFFD6D4
	public bool RequestMapChange(int mapId, int focusSpotd = -1, int playerSpotId = -1) { }

	// RVA: 0xFF5EA0 Offset: 0xFF5EA0 VA: 0xFF5EA0
	public bool IsMapChangeable() { }

	// RVA: 0xFFD96C Offset: 0xFFD96C VA: 0xFFD96C
	private void mcbfMapTouchEnable() { }

	// RVA: 0xFFDC34 Offset: 0xFFDC34 VA: 0xFFDC34
	private void MapTouchEnableAuto() { }

	// RVA: 0xFFE844 Offset: 0xFFE844 VA: 0xFFE844
	private void AfterActionPlay() { }

	// RVA: 0xFFDEE0 Offset: 0xFFDEE0 VA: 0xFFDEE0
	private void EventActionPlay() { }

	// RVA: 0xFFED9C Offset: 0xFFED9C VA: 0xFFED9C
	private void ProductivityGrowthDialogOpen(Action callback) { }

	// RVA: 0xFFEEC8 Offset: 0xFFEEC8 VA: 0xFFEEC8
	private void HarvestGrowthDialogOpen(Action callback) { }

	// RVA: 0xFFEFDC Offset: 0xFFEFDC VA: 0xFFEFDC
	private void PlayDetectiveRankUpEffect(Action callback) { }

	// RVA: 0xFFF128 Offset: 0xFFF128 VA: 0xFFF128
	private void ShowActivePlayerIcon() { }

	// RVA: 0xFFF018 Offset: 0xFFF018 VA: 0xFFF018
	private void EventScriptPlay() { }

	// RVA: 0xFFF508 Offset: 0xFFF508 VA: 0xFFF508
	private void showEventScriptDlgs(Action callback) { }

	// RVA: 0xFFF32C Offset: 0xFFF32C VA: 0xFFF32C
	private void OnEveryActionEnd() { }

	// RVA: 0xFFF76C Offset: 0xFFF76C VA: 0xFFF76C
	private void EventScriptCaller(int index) { }

	// RVA: 0x100099C Offset: 0x100099C VA: 0x100099C
	private void OnEndEventScripts(EventScriptEntity nowEventScriptEnt) { }

	// RVA: 0xFFE934 Offset: 0xFFE934 VA: 0xFFE934
	private void ShowEventRaceBoostEffect(int eventId, Action callback) { }

	// RVA: 0x1000AF0 Offset: 0x1000AF0 VA: 0x1000AF0
	private void mcbfMapTouchDisable() { }

	// RVA: 0xFFE624 Offset: 0xFFE624 VA: 0xFFE624
	public void smfSpotBtn_Click(GameObject spotObject) { }

	// RVA: 0xFF7458 Offset: 0xFF7458 VA: 0xFF7458
	public bool IsEventBoardGame() { }

	// RVA: 0xFFA054 Offset: 0xFFA054 VA: 0xFFA054
	public int GetEventBoardGameSpotId() { }

	// RVA: 0xFF7C04 Offset: 0xFF7C04 VA: 0xFF7C04
	public bool IsDispEventBoardGameUI() { }

	// RVA: 0x1000C00 Offset: 0x1000C00 VA: 0x1000C00
	public bool IsEnabledToUseEventItem() { }

	// RVA: 0xFF8010 Offset: 0xFF8010 VA: 0xFF8010
	private void LoadEventBoardGameVoiceInfo() { }

	// RVA: 0xFF8148 Offset: 0xFF8148 VA: 0xFF8148
	private void LoadEventBoardGameDiceAsset() { }

	// RVA: 0x1000D98 Offset: 0x1000D98 VA: 0x1000D98
	private void SetupEventBoardGame() { }

	// RVA: 0x10027B0 Offset: 0x10027B0 VA: 0x10027B0
	private void PlayEventBoardGameArrivalEffectAuto() { }

	// RVA: 0x1002BC8 Offset: 0x1002BC8 VA: 0x1002BC8
	private void ViewEventBoardGameQuestListAuto() { }

	// RVA: 0x1002D64 Offset: 0x1002D64 VA: 0x1002D64
	public void Fadein_MapDisp_Start() { }

	// RVA: 0xFF8388 Offset: 0xFF8388 VA: 0xFF8388
	private void DestroyEventBoardGameObj() { }

	// RVA: 0xFF7CF8 Offset: 0xFF7CF8 VA: 0xFF7CF8
	private void SetupDiceButton() { }

	// RVA: 0x1001378 Offset: 0x1001378 VA: 0x1001378
	private void SetEventBoardGameSpotBadge(int questCount) { }

	// RVA: 0x1002F14 Offset: 0x1002F14 VA: 0x1002F14
	private void UpdateEventBoardGameSpot() { }

	// RVA: 0x1003094 Offset: 0x1003094 VA: 0x1003094
	public void SetEnabledDiceButton(bool isEnabled) { }

	// RVA: 0xFF33AC Offset: 0xFF33AC VA: 0xFF33AC
	public void SetActiveDiceButton(bool isActive) { }

	// RVA: 0x10014F8 Offset: 0x10014F8 VA: 0x10014F8
	public void SetDiceButton() { }

	// RVA: 0x10016F4 Offset: 0x10016F4 VA: 0x10016F4
	public void SetEventBoardQuestArrivalPanel() { }

	// RVA: 0x10031FC Offset: 0x10031FC VA: 0x10031FC
	public void OnClickMonoplyBoard() { }

	// RVA: 0x10032F0 Offset: 0x10032F0 VA: 0x10032F0
	private void CheckAndWarningEventQuestBoardAllClear(Action callback) { }

	// RVA: 0x10015A4 Offset: 0x10015A4 VA: 0x10015A4
	private void EventBoardCameraAction(Action callback, bool isZoomUp = False, bool isForce = False) { }

	// RVA: 0x100361C Offset: 0x100361C VA: 0x100361C
	private void EventBoardCameraAction(Vector3 cameraPosition, float zoomScale, float actTime, Action callback) { }

	// RVA: 0x1003518 Offset: 0x1003518 VA: 0x1003518
	private bool IsEventBoardGameQuestAllClear() { }

	// RVA: 0x10037DC Offset: 0x10037DC VA: 0x10037DC
	private void OpenDiceSelectDialog() { }

	// RVA: 0x10039C4 Offset: 0x10039C4 VA: 0x10039C4
	private void RequestDiceUse(int itemId, int num, int eventId = 0) { }

	// RVA: 0x1003AF0 Offset: 0x1003AF0 VA: 0x1003AF0
	private void EndRequestDiceUse(string result) { }

	// RVA: 0x1003D00 Offset: 0x1003D00 VA: 0x1003D00
	private void PlayBoardGameDiceEffect(int actionType, int diceType, int diceNum, Action callback) { }

	// RVA: 0x1004698 Offset: 0x1004698 VA: 0x1004698
	private void EndBoardGameDiceEffect() { }

	// RVA: 0x10045B8 Offset: 0x10045B8 VA: 0x10045B8
	private void SetDirectionalLightActive(bool isActive) { }

	// RVA: 0x10046DC Offset: 0x10046DC VA: 0x10046DC
	private void PlayBoardGamePieceEffect() { }

	// RVA: 0x1004974 Offset: 0x1004974 VA: 0x1004974
	private void StartBoardGamePieceEffectSub() { }

	// RVA: 0x1004E4C Offset: 0x1004E4C VA: 0x1004E4C
	private void PlayBoardGamePieceEffectSub() { }

	// RVA: 0x1004A38 Offset: 0x1004A38 VA: 0x1004A38
	private void EndBoardGamePieceEffect() { }

	// RVA: 0x1005238 Offset: 0x1005238 VA: 0x1005238
	private void PlayBoardGameStopPiecePanel() { }

	// RVA: 0x1002864 Offset: 0x1002864 VA: 0x1002864
	private void PlayBoardGameQuestArrivalEffect(int squareId, Action callback, bool isAuto = False) { }

	[DebuggerHiddenAttribute] // RVA: 0xCD43A0 Offset: 0xCD43A0 VA: 0xCD43A0
	// RVA: 0x1005A10 Offset: 0x1005A10 VA: 0x1005A10
	private IEnumerator EventBoardCameraActionAuto_IE(int squareId, int clearCount, int maxClearCount, Action callback) { }

	// RVA: 0x1005730 Offset: 0x1005730 VA: 0x1005730
	private void UpdateBoardGameSquare(int squareId, int clearCount, int maxClearCount) { }

	// RVA: 0x1005C4C Offset: 0x1005C4C VA: 0x1005C4C
	public void UpdateEventBoardGame(Action callback) { }

	// RVA: 0x1005E00 Offset: 0x1005E00 VA: 0x1005E00
	private void JumpEventBoardGamePiece(Action callback) { }

	// RVA: 0x1005AEC Offset: 0x1005AEC VA: 0x1005AEC
	private void ChangeBoardGameDiceButttonActive() { }

	// RVA: 0x100519C Offset: 0x100519C VA: 0x100519C
	private string GetBoardGamePieceAnimationNameBySquareId(int startSquareId, int endSquareId) { }

	// RVA: 0x100683C Offset: 0x100683C VA: 0x100683C
	private UITweener.Method GetBoardGamePieceAnimationEasingType(int nowSquareId, bool isJump = False) { }

	// RVA: 0x1001824 Offset: 0x1001824 VA: 0x1001824
	private void GetBoardGameSquareClearCountAndMaxCount(int squareId, out int clearCount, out int maxClearCount) { }

	// RVA: 0x1001D88 Offset: 0x1001D88 VA: 0x1001D88
	private void SetBoardGameSquareHaveToken(int squareId) { }

	// RVA: 0xFFE250 Offset: 0xFFE250 VA: 0xFFE250
	private bool IsEventBoardGameNextMapDisp(int questId) { }

	// RVA: 0x1001428 Offset: 0x1001428 VA: 0x1001428
	private Vector3 GetEventBoardSquarePos(int index) { }

	// RVA: 0x100684C Offset: 0x100684C VA: 0x100684C
	private GameObject GetEventBoardSquareObject(int index) { }

	// RVA: 0x1001BF0 Offset: 0x1001BF0 VA: 0x1001BF0
	private void SetEventBoardClearMarker(int index, int clearCount, int maxClearCount) { }

	// RVA: 0x1000C90 Offset: 0x1000C90 VA: 0x1000C90
	private int GetEventBoardDiceVoiceServantId() { }

	// RVA: 0x1004258 Offset: 0x1004258 VA: 0x1004258
	private int GetUsedDiceItemId() { }

	// RVA: 0x1004324 Offset: 0x1004324 VA: 0x1004324
	private string LotteryEventBoardDiceVoiceCueName(int diceItemId) { }

	// RVA: 0x1005424 Offset: 0x1005424 VA: 0x1005424
	private void PlayEventBoardGameQuestArrivalVoice() { }

	// RVA: 0x1006204 Offset: 0x1006204 VA: 0x1006204
	private bool TryAutoQuest() { }

	// RVA: 0xFF87EC Offset: 0xFF87EC VA: 0xFF87EC
	private void DestroyCooltimeObject() { }

	// RVA: 0x1002E88 Offset: 0x1002E88 VA: 0x1002E88
	private void FrameOutUI(bool isForce = False) { }

	// RVA: 0x1006948 Offset: 0x1006948 VA: 0x1006948
	private void FrameInUI() { }

	// RVA: 0xFF03E0 Offset: 0xFF03E0 VA: 0xFF03E0
	public PlayMakerFSM mfGetMyFsmP() { }

	// RVA: 0xFF0478 Offset: 0xFF0478 VA: 0xFF0478
	public void mfCallFsmEvent(string fsmEventName) { }

	// RVA: 0x10069C4 Offset: 0x10069C4 VA: 0x10069C4
	private void mfSetFsmValueInt(string name, int value) { }

	// RVA: 0x1006ACC Offset: 0x1006ACC VA: 0x1006ACC
	private int mfGetFsmValueInt(string name) { }

	// RVA: 0x1006BD0 Offset: 0x1006BD0 VA: 0x1006BD0
	private void mfSetFsmValueBool(string name, bool value) { }

	// RVA: 0x1006CD8 Offset: 0x1006CD8 VA: 0x1006CD8
	private void mfSetFsmValueVector3(string name, Vector3 value) { }

	// RVA: 0x1006E08 Offset: 0x1006E08 VA: 0x1006E08
	public void mcbfCheckSceneStatus() { }

	// RVA: 0x1006FE4 Offset: 0x1006FE4 VA: 0x1006FE4
	public void UpdateAreaBoardList() { }

	// RVA: 0x100702C Offset: 0x100702C VA: 0x100702C
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD43B0 Offset: 0xCD43B0 VA: 0xCD43B0
	// RVA: 0x10071A0 Offset: 0x10071A0 VA: 0x10071A0
	private void <StartRaidAnimation>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD43C0 Offset: 0xCD43C0 VA: 0xCD43C0
	// RVA: 0x1007210 Offset: 0x1007210 VA: 0x1007210
	private void <LoadMap>m__1(AssetData multiAssetData) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD43D0 Offset: 0xCD43D0 VA: 0xCD43D0
	// RVA: 0x100732C Offset: 0x100732C VA: 0x100732C
	private void <LoadMap>m__2(AssetData asData) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD43E0 Offset: 0xCD43E0 VA: 0xCD43E0
	// RVA: 0x1007588 Offset: 0x1007588 VA: 0x1007588
	private void <LoadEventMap>m__3() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD43F0 Offset: 0xCD43F0 VA: 0xCD43F0
	// RVA: 0x100758C Offset: 0x100758C VA: 0x100758C
	private void <smfSetMapChange>m__4(AssetData assetData) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4400 Offset: 0xCD4400 VA: 0xCD4400
	// RVA: 0x100770C Offset: 0x100770C VA: 0x100770C
	private void <smfMap2d_SpotMarkCreate>m__5() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4410 Offset: 0xCD4410 VA: 0xCD4410
	// RVA: 0x1007764 Offset: 0x1007764 VA: 0x1007764
	private void <mcbfWhiteOut_ToMap>m__6(bool isPlay) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4420 Offset: 0xCD4420 VA: 0xCD4420
	// RVA: 0x1007768 Offset: 0x1007768 VA: 0x1007768
	private void <mcbfWhiteOut>m__7() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4430 Offset: 0xCD4430 VA: 0xCD4430
	// RVA: 0x10077C8 Offset: 0x10077C8 VA: 0x10077C8
	private void <mcbfSpotMaskStart>m__8() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4440 Offset: 0xCD4440 VA: 0xCD4440
	// RVA: 0x1007868 Offset: 0x1007868 VA: 0x1007868
	private void <mcbfSpotMaskEnd>m__9() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4450 Offset: 0xCD4450 VA: 0xCD4450
	// RVA: 0x100786C Offset: 0x100786C VA: 0x100786C
	private void <mcbfMapTouchEnable>m__A() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4460 Offset: 0xCD4460 VA: 0xCD4460
	// RVA: 0x10078C4 Offset: 0x10078C4 VA: 0x10078C4
	private void <MapTouchEnableAuto>m__B() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4470 Offset: 0xCD4470 VA: 0xCD4470
	// RVA: 0x1007A28 Offset: 0x1007A28 VA: 0x1007A28
	private void <AfterActionPlay>m__C() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4480 Offset: 0xCD4480 VA: 0xCD4480
	// RVA: 0x1007ACC Offset: 0x1007ACC VA: 0x1007ACC
	private void <EventActionPlay>m__D() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4490 Offset: 0xCD4490 VA: 0xCD4490
	// RVA: 0x1007AF0 Offset: 0x1007AF0 VA: 0x1007AF0
	private void <EventScriptPlay>m__E() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD44A0 Offset: 0xCD44A0 VA: 0xCD44A0
	// RVA: 0x1007AF8 Offset: 0x1007AF8 VA: 0x1007AF8
	private void <OnEveryActionEnd>m__F() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD44B0 Offset: 0xCD44B0 VA: 0xCD44B0
	// RVA: 0x1007CA4 Offset: 0x1007CA4 VA: 0x1007CA4
	private void <OnEndEventScripts>m__10(string result) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD44C0 Offset: 0xCD44C0 VA: 0xCD44C0
	// RVA: 0x1007D9C Offset: 0x1007D9C VA: 0x1007D9C
	private void <mcbfMapTouchDisable>m__11() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD44D0 Offset: 0xCD44D0 VA: 0xCD44D0
	// RVA: 0x1007DD4 Offset: 0x1007DD4 VA: 0x1007DD4
	private bool <IsDispEventBoardGameUI>m__12(int mapId) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD44E0 Offset: 0xCD44E0 VA: 0xCD44E0
	// RVA: 0x1007DE4 Offset: 0x1007DE4 VA: 0x1007DE4
	private void <LoadEventBoardGameDiceAsset>m__13() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD44F0 Offset: 0xCD44F0 VA: 0xCD44F0
	// RVA: 0x1007EEC Offset: 0x1007EEC VA: 0x1007EEC
	private static void <SetupEventBoardGame>m__14() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4500 Offset: 0xCD4500 VA: 0xCD4500
	// RVA: 0x1007EF0 Offset: 0x1007EF0 VA: 0x1007EF0
	private void <PlayEventBoardGameArrivalEffectAuto>m__15() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4510 Offset: 0xCD4510 VA: 0xCD4510
	// RVA: 0x1007F48 Offset: 0x1007F48 VA: 0x1007F48
	private void <OnClickMonoplyBoard>m__16() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4520 Offset: 0xCD4520 VA: 0xCD4520
	// RVA: 0x1008108 Offset: 0x1008108 VA: 0x1008108
	private void <OpenDiceSelectDialog>m__17() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4530 Offset: 0xCD4530 VA: 0xCD4530
	// RVA: 0x10081E0 Offset: 0x10081E0 VA: 0x10081E0
	private void <OpenDiceSelectDialog>m__18(ItemEntity selectedItem, int spendNum) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4540 Offset: 0xCD4540 VA: 0xCD4540
	// RVA: 0x10082B4 Offset: 0x10082B4 VA: 0x10082B4
	private void <OpenDiceSelectDialog>m__19() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4550 Offset: 0xCD4550 VA: 0xCD4550
	// RVA: 0x1008364 Offset: 0x1008364 VA: 0x1008364
	private void <EndBoardGamePieceEffect>m__1A() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4560 Offset: 0xCD4560 VA: 0xCD4560
	// RVA: 0x1008398 Offset: 0x1008398 VA: 0x1008398
	private void <PlayBoardGameStopPiecePanel>m__1B() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4570 Offset: 0xCD4570 VA: 0xCD4570
	// RVA: 0x100844C Offset: 0x100844C VA: 0x100844C
	private static bool <UpdateBoardGameSquare>m__1C(MapControl.MapGimmickInfo x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4580 Offset: 0xCD4580 VA: 0xCD4580
	// RVA: 0x10084D4 Offset: 0x10084D4 VA: 0x10084D4
	private void <UpdateBoardGameSquare>m__1D(MapControl.MapGimmickInfo x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4590 Offset: 0xCD4590 VA: 0xCD4590
	// RVA: 0x10086C4 Offset: 0x10086C4 VA: 0x10086C4
	private static int <SetBoardGameSquareHaveToken>m__1E(QuestEntity x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD45A0 Offset: 0xCD45A0 VA: 0xCD45A0
	// RVA: 0x10086EC Offset: 0x10086EC VA: 0x10086EC
	private static bool <TryAutoQuest>m__1F(QuestReleaseEntity x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD45B0 Offset: 0xCD45B0 VA: 0xCD45B0
	// RVA: 0x100876C Offset: 0x100876C VA: 0x100876C
	private void <LoadMap>m__20(AssetData multiAssetData) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD45C0 Offset: 0xCD45C0 VA: 0xCD45C0
	// RVA: 0x10088B4 Offset: 0x10088B4 VA: 0x10088B4
	private void <smfSetMapChange>m__21(AssetData multiAssetData) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD45D0 Offset: 0xCD45D0 VA: 0xCD45D0
	// RVA: 0x10089C0 Offset: 0x10089C0 VA: 0x10089C0
	private void <MapTouchEnableAuto>m__22() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD45E0 Offset: 0xCD45E0 VA: 0xCD45E0
	// RVA: 0x10089C4 Offset: 0x10089C4 VA: 0x10089C4
	private void <AfterActionPlay>m__23() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD45F0 Offset: 0xCD45F0 VA: 0xCD45F0
	// RVA: 0x1008AB4 Offset: 0x1008AB4 VA: 0x1008AB4
	private void <OnEveryActionEnd>m__24() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4600 Offset: 0xCD4600 VA: 0xCD4600
	// RVA: 0x1008C1C Offset: 0x1008C1C VA: 0x1008C1C
	private void <LoadEventBoardGameDiceAsset>m__25() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4610 Offset: 0xCD4610 VA: 0xCD4610
	// RVA: 0x1008DD4 Offset: 0x1008DD4 VA: 0x1008DD4
	private static void <OnEveryActionEnd>m__26() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4620 Offset: 0xCD4620 VA: 0xCD4620
	// RVA: 0x1008E8C Offset: 0x1008E8C VA: 0x1008E8C
	private void <LoadEventBoardGameDiceAsset>m__27() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4630 Offset: 0xCD4630 VA: 0xCD4630
	// RVA: 0x1008F30 Offset: 0x1008F30 VA: 0x1008F30
	private void <LoadEventBoardGameDiceAsset>m__28(AssetData effectData) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4640 Offset: 0xCD4640 VA: 0xCD4640
	// RVA: 0x1008F38 Offset: 0x1008F38 VA: 0x1008F38
	private void <LoadEventBoardGameDiceAsset>m__29(AssetData effectData) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC462B4 Offset: 0xC462B4 VA: 0xC462B4
private sealed class ScrTerminalMap.<BeginRaidUpdateRequest>c__AnonStorey3 // TypeDefIndex: 11360
{
	// Fields
	internal Action callback; // 0x10
	internal ScrTerminalMap $this; // 0x18

	// Methods

	// RVA: 0x159AF10 Offset: 0x159AF10 VA: 0x159AF10
	public void .ctor() { }

	// RVA: 0x159AF18 Offset: 0x159AF18 VA: 0x159AF18
	internal void <>m__0(string _) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC462C4 Offset: 0xC462C4 VA: 0xC462C4
private sealed class ScrTerminalMap.<WaitConnecting>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 11361
{
	// Fields
	internal object $current; // 0x10
	internal bool $disposing; // 0x18
	internal int $PC; // 0x1C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDD160 Offset: 0xCDD160 VA: 0xCDD160
	// RVA: 0x159C90C Offset: 0x159C90C VA: 0x159C90C
	public void .ctor() { }

	// RVA: 0x159C914 Offset: 0x159C914 VA: 0x159C914 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDD170 Offset: 0xCDD170 VA: 0xCDD170
	// RVA: 0x159CB64 Offset: 0x159CB64 VA: 0x159CB64 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDD180 Offset: 0xCDD180 VA: 0xCDD180
	// RVA: 0x159CB6C Offset: 0x159CB6C VA: 0x159CB6C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDD190 Offset: 0xCDD190 VA: 0xCDD190
	// RVA: 0x159CB74 Offset: 0x159CB74 VA: 0x159CB74 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDD1A0 Offset: 0xCDD1A0 VA: 0xCDD1A0
	// RVA: 0x159CB88 Offset: 0x159CB88 VA: 0x159CB88 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC462D4 Offset: 0xC462D4 VA: 0xC462D4
private sealed class ScrTerminalMap.<CheckRaidTimeLimit>c__AnonStorey4 // TypeDefIndex: 11362
{
	// Fields
	internal int eventId; // 0x10

	// Methods

	// RVA: 0x159B064 Offset: 0x159B064 VA: 0x159B064
	public void .ctor() { }

	// RVA: 0x159B06C Offset: 0x159B06C VA: 0x159B06C
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC462E4 Offset: 0xC462E4 VA: 0xC462E4
private sealed class ScrTerminalMap.<MovePlayerIcon>c__AnonStorey5 // TypeDefIndex: 11363
{
	// Fields
	internal int spotId; // 0x10
	internal Action endFunc; // 0x18
	internal Vector3 from; // 0x20
	internal Vector3 to; // 0x2C
	internal EasingObject easingObject; // 0x38
	internal ScrTerminalMap $this; // 0x40

	// Methods

	// RVA: 0x159C060 Offset: 0x159C060 VA: 0x159C060
	public void .ctor() { }

	// RVA: 0x159C068 Offset: 0x159C068 VA: 0x159C068
	internal void <>m__0() { }

	// RVA: 0x159C114 Offset: 0x159C114 VA: 0x159C114
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC462F4 Offset: 0xC462F4 VA: 0xC462F4
private sealed class ScrTerminalMap.<eventInfoAssetLoad>c__AnonStorey6 // TypeDefIndex: 11364
{
	// Fields
	internal Action callback; // 0x10
	internal ScrTerminalMap $this; // 0x18

	// Methods

	// RVA: 0x159D00C Offset: 0x159D00C VA: 0x159D00C
	public void .ctor() { }

	// RVA: 0x159D014 Offset: 0x159D014 VA: 0x159D014
	internal void <>m__0(AssetData assetData) { }

	// RVA: 0x159D0D8 Offset: 0x159D0D8 VA: 0x159D0D8
	internal void <>m__1(AssetData effectData) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46304 Offset: 0xC46304 VA: 0xC46304
private sealed class ScrTerminalMap.<LoadMapImgTex>c__AnonStorey7 // TypeDefIndex: 11365
{
	// Fields
	internal string textureName; // 0x10
	internal Action endCallback; // 0x18
	internal ScrTerminalMap $this; // 0x20

	// Methods

	// RVA: 0x159BEF0 Offset: 0x159BEF0 VA: 0x159BEF0
	public void .ctor() { }

	// RVA: 0x159BEF8 Offset: 0x159BEF8 VA: 0x159BEF8
	internal void <>m__0(AssetData mapImgData) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46314 Offset: 0xC46314 VA: 0xC46314
private sealed class ScrTerminalMap.<smfMap2d_SpotMarkCreate>c__AnonStorey8 // TypeDefIndex: 11366
{
	// Fields
	internal int gimmickEffectId; // 0x10
	internal int gimmickId; // 0x14

	// Methods

	// RVA: 0x159D250 Offset: 0x159D250 VA: 0x159D250
	public void .ctor() { }

	// RVA: 0x159D258 Offset: 0x159D258 VA: 0x159D258
	internal bool <>m__0(MapGimmickComponent n) { }

	// RVA: 0x159D2B4 Offset: 0x159D2B4 VA: 0x159D2B4
	internal bool <>m__1(MapGimmickComponent n) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46324 Offset: 0xC46324 VA: 0xC46324
private sealed class ScrTerminalMap.<WaitScriptLoad>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 11367
{
	// Fields
	internal ScrTerminalMap $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24
	private static Func<bool> <>f__am$cache0; // 0x0
	private static Func<bool> <>f__am$cache1; // 0x8

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDD1B0 Offset: 0xCDD1B0 VA: 0xCDD1B0
	// RVA: 0x159CBF0 Offset: 0x159CBF0 VA: 0x159CBF0
	public void .ctor() { }

	// RVA: 0x159CBF8 Offset: 0x159CBF8 VA: 0x159CBF8 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDD1C0 Offset: 0xCDD1C0 VA: 0xCDD1C0
	// RVA: 0x159CEA8 Offset: 0x159CEA8 VA: 0x159CEA8 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDD1D0 Offset: 0xCDD1D0 VA: 0xCDD1D0
	// RVA: 0x159CEB0 Offset: 0x159CEB0 VA: 0x159CEB0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDD1E0 Offset: 0xCDD1E0 VA: 0xCDD1E0
	// RVA: 0x159CEB8 Offset: 0x159CEB8 VA: 0x159CEB8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDD1F0 Offset: 0xCDD1F0 VA: 0xCDD1F0
	// RVA: 0x159CECC Offset: 0x159CECC VA: 0x159CECC Slot: 6
	public void Reset() { }

	// RVA: 0x159CF34 Offset: 0x159CF34 VA: 0x159CF34
	private static bool <>m__0() { }

	// RVA: 0x159CFA0 Offset: 0x159CFA0 VA: 0x159CFA0
	private static bool <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46334 Offset: 0xC46334 VA: 0xC46334
private sealed class ScrTerminalMap.<ProductivityGrowthDialogOpen>c__AnonStorey9 // TypeDefIndex: 11368
{
	// Fields
	internal Action callback; // 0x10
	internal ScrTerminalMap $this; // 0x18

	// Methods

	// RVA: 0x159C5C0 Offset: 0x159C5C0 VA: 0x159C5C0
	public void .ctor() { }

	// RVA: 0x159C5C8 Offset: 0x159C5C8 VA: 0x159C5C8
	internal void <>m__0() { }

	// RVA: 0x159C66C Offset: 0x159C66C VA: 0x159C66C
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46344 Offset: 0xC46344 VA: 0xC46344
private sealed class ScrTerminalMap.<HarvestGrowthDialogOpen>c__AnonStoreyA // TypeDefIndex: 11369
{
	// Fields
	internal Action callback; // 0x10

	// Methods

	// RVA: 0x159B898 Offset: 0x159B898 VA: 0x159B898
	public void .ctor() { }

	// RVA: 0x159B8A0 Offset: 0x159B8A0 VA: 0x159B8A0
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46354 Offset: 0xC46354 VA: 0xC46354
private sealed class ScrTerminalMap.<ShowActivePlayerIcon>c__AnonStoreyB // TypeDefIndex: 11370
{
	// Fields
	internal Vector3 endScale; // 0x10
	internal Vector3 startScale; // 0x1C
	internal EasingObject easingObject; // 0x28
	internal ScrTerminalMap $this; // 0x30

	// Methods

	// RVA: 0x159C7A0 Offset: 0x159C7A0 VA: 0x159C7A0
	public void .ctor() { }

	// RVA: 0x159C7A8 Offset: 0x159C7A8 VA: 0x159C7A8
	internal void <>m__0() { }

	// RVA: 0x159C7E4 Offset: 0x159C7E4 VA: 0x159C7E4
	internal void <>m__1() { }
}

// Namespace: 
