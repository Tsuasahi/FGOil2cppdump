	protected Transform baseParent; // 0x30
	protected Vector3 basePosition; // 0x38
	protected Vector3 baseScale; // 0x44
	protected bool isBusy; // 0x50
	protected int index; // 0x54
	protected ServantStatusListViewObject.State state; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xCBC6CC Offset: 0xCBC6CC VA: 0xCBC6CC
	[DebuggerBrowsableAttribute] // RVA: 0xCBC6CC Offset: 0xCBC6CC VA: 0xCBC6CC
	private Action callbackFunc; // 0x60
	protected ServantStatusListViewItemDraw itemDraw; // 0x68
	protected ServantStatusListViewItemDraw.DispMode dispMode; // 0x70

	// Properties
	public bool IsBusy { get; }
	public int Index { get; }

	// Methods

	// RVA: 0x18511B4 Offset: 0x18511B4 VA: 0x18511B4
	public void .ctor() { }

	// RVA: 0x18511BC Offset: 0x18511BC VA: 0x18511BC
	public bool get_IsBusy() { }

	// RVA: 0x18511C4 Offset: 0x18511C4 VA: 0x18511C4
	public int get_Index() { }

	// RVA: 0x18511CC Offset: 0x18511CC VA: 0x18511CC
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x18512B8 Offset: 0x18512B8 VA: 0x18512B8
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x18513A4 Offset: 0x18513A4 VA: 0x18513A4
	protected void Awake() { }

	// RVA: 0x1851410 Offset: 0x1851410 VA: 0x1851410
	private void OnDestroy() { }

	// RVA: 0x184FA98 Offset: 0x184FA98 VA: 0x184FA98
	public void SetManager(ServantStatusListViewManager manager) { }

	// RVA: 0x184F904 Offset: 0x184F904 VA: 0x184F904
	public void SetItem(ServantStatusListViewItem item) { }

	// RVA: 0x18504D8 Offset: 0x18504D8 VA: 0x18504D8
	public ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x184F914 Offset: 0x184F914 VA: 0x184F914
	public int GetSize() { }

	// RVA: 0x1851414 Offset: 0x1851414 VA: 0x1851414
	public void SetVisible(bool isVisible) { }

	// RVA: 0x18514C4 Offset: 0x18514C4 VA: 0x18514C4
	public void SetInput(bool isInput) { }

	// RVA: 0x184FA00 Offset: 0x184FA00 VA: 0x184FA00
	public void SetBaseTransform() { }

	// RVA: 0x1851588 Offset: 0x1851588 VA: 0x1851588
	public void SetTransform(Vector3 position) { }

	// RVA: 0x18515F4 Offset: 0x18515F4 VA: 0x18515F4
	public void Init(ServantStatusListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1850298 Offset: 0x1850298 VA: 0x1850298
	public void Init(ServantStatusListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x185031C Offset: 0x185031C VA: 0x185031C
	public void Init(ServantStatusListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x184FB1C Offset: 0x184FB1C VA: 0x184FB1C
	public void Init(ServantStatusListViewObject.InitMode initMode) { }

	// RVA: 0x1851DEC Offset: 0x1851DEC VA: 0x1851DEC
	protected void SetupDisp() { }

	// RVA: 0x1851874 Offset: 0x1851874 VA: 0x1851874
	private void EventBattleStart() { }

	// RVA: 0x185193C Offset: 0x185193C VA: 0x185193C
	private void EventCommandStart() { }

	// RVA: 0x1851A04 Offset: 0x1851A04 VA: 0x1851A04
	private void EventFaceStart() { }

	// RVA: 0x1851ACC Offset: 0x1851ACC VA: 0x1851ACC
	private void EventStatusStart() { }

	// RVA: 0x1851B94 Offset: 0x1851B94 VA: 0x1851B94
	private void EventPortraitStart() { }

	// RVA: 0x1851C5C Offset: 0x1851C5C VA: 0x1851C5C
	private void EventRandomLimitCountSupportStart() { }

	// RVA: 0x1851D24 Offset: 0x1851D24 VA: 0x1851D24
	private void EventRandomLimitCountSettingStart() { }

	// RVA: 0x1851EBC Offset: 0x1851EBC VA: 0x1851EBC
	protected void EventMoveEnd() { }

	// RVA: 0x1851EE4 Offset: 0x1851EE4 VA: 0x1851EE4
	protected void OnClick() { }

	// RVA: 0x1851F18 Offset: 0x1851F18 VA: 0x1851F18
	public void OnClickExp() { }

	// RVA: 0x1851F44 Offset: 0x1851F44 VA: 0x1851F44
	public void OnClickEquipExp() { }

	// RVA: 0x1851F70 Offset: 0x1851F70 VA: 0x1851F70
	public void OnClickFriendship() { }

	// RVA: 0x1851F9C Offset: 0x1851F9C VA: 0x1851F9C
	public void OnClickEquip1() { }

	// RVA: 0x1851FF4 Offset: 0x1851FF4 VA: 0x1851FF4
	public void OnLongPushEquip1() { }

	// RVA: 0x185204C Offset: 0x185204C VA: 0x185204C
	public void OnClickCommandCharaLevel1() { }

	// RVA: 0x18520A4 Offset: 0x18520A4 VA: 0x18520A4
	public void OnClickCommandCharaLevel2() { }

	// RVA: 0x18520FC Offset: 0x18520FC VA: 0x18520FC
	public void OnClickCommandCharaLevel3() { }

	// RVA: 0x1852154 Offset: 0x1852154 VA: 0x1852154
	public void OnClickCommandCharaLevel4() { }

	// RVA: 0x18521AC Offset: 0x18521AC VA: 0x18521AC
	public void OnClickCommandCharaLevel5() { }

	// RVA: 0x1852204 Offset: 0x1852204 VA: 0x1852204
	public void OnClickCommandCharaLevel6() { }

	// RVA: 0x185225C Offset: 0x185225C VA: 0x185225C
	public void OnClickCommandCharaLevel7() { }

	// RVA: 0x18522B4 Offset: 0x18522B4 VA: 0x18522B4
	public void OnClickCommandCharaLevel8() { }

	// RVA: 0x185230C Offset: 0x185230C VA: 0x185230C
	public void OnClickCommandCharaLevel9() { }

	// RVA: 0x1852364 Offset: 0x1852364 VA: 0x1852364
	public void OnClickFaceCharaLevel1() { }

	// RVA: 0x18523BC Offset: 0x18523BC VA: 0x18523BC
	public void OnClickFaceCharaLevel2() { }

	// RVA: 0x1852414 Offset: 0x1852414 VA: 0x1852414
	public void OnClickFaceCharaLevel3() { }

	// RVA: 0x185246C Offset: 0x185246C VA: 0x185246C
	public void OnClickFaceCharaLevel4() { }

	// RVA: 0x18524C4 Offset: 0x18524C4 VA: 0x18524C4
	public void OnClickFaceCharaLevel5() { }

	// RVA: 0x185251C Offset: 0x185251C VA: 0x185251C
	public void OnClickFaceCharaLevel6() { }

	// RVA: 0x1852574 Offset: 0x1852574 VA: 0x1852574
	public void OnClickFaceCharaLevel7() { }

	// RVA: 0x18525CC Offset: 0x18525CC VA: 0x18525CC
	public void OnClickFaceCharaLevel8() { }

	// RVA: 0x1852624 Offset: 0x1852624 VA: 0x1852624
	public void OnClickFaceCharaLevel9() { }

	// RVA: 0x185267C Offset: 0x185267C VA: 0x185267C
	public void OnClickFaceCharaLevel10() { }

	// RVA: 0x18526D4 Offset: 0x18526D4 VA: 0x18526D4
	public void OnClickFaceCharaLevel11() { }

	// RVA: 0x185272C Offset: 0x185272C VA: 0x185272C
	public void OnClickFaceCharaLevel12() { }

	// RVA: 0x1852784 Offset: 0x1852784 VA: 0x1852784
	public void OnClickPortraitCharaLevel1() { }

	// RVA: 0x18527DC Offset: 0x18527DC VA: 0x18527DC
	public void OnClickPortraitCharaLevel2() { }

	// RVA: 0x1852834 Offset: 0x1852834 VA: 0x1852834
	public void OnClickPortraitCharaLevel3() { }

	// RVA: 0x185288C Offset: 0x185288C VA: 0x185288C
	public void OnClickPortraitCharaLevel4() { }

	// RVA: 0x18528E4 Offset: 0x18528E4 VA: 0x18528E4
	public void OnClickPortraitCharaLevel5() { }

	// RVA: 0x185293C Offset: 0x185293C VA: 0x185293C
	public void OnClickPortraitCharaLevel6() { }

	// RVA: 0x1852994 Offset: 0x1852994 VA: 0x1852994
	public void OnClickPortraitCharaLevel7() { }

	// RVA: 0x18529EC Offset: 0x18529EC VA: 0x18529EC
	public void OnClickPortraitCharaLevel8() { }

	// RVA: 0x1852A44 Offset: 0x1852A44 VA: 0x1852A44
	public void OnClickPortraitCharaLevel9() { }

	// RVA: 0x1852A9C Offset: 0x1852A9C VA: 0x1852A9C
	public void touchCommandCard(int index) { }

	// RVA: 0x1852AF8 Offset: 0x1852AF8 VA: 0x1852AF8
	public void OnClickServantQuest(int questId) { }

	// RVA: 0x1852B54 Offset: 0x1852B54 VA: 0x1852B54
	public void OnClickServantTdSpeedFree() { }

	// RVA: 0x1852BAC Offset: 0x1852BAC VA: 0x1852BAC
	public void OnClickServantTdSpeedActual() { }

	// RVA: 0x1852C04 Offset: 0x1852C04 VA: 0x1852C04
	public void OnClickServantTdSpeedTwice() { }

	// RVA: 0x1852C5C Offset: 0x1852C5C VA: 0x1852C5C
	public void OnClickReflectOwnSetting() { }

	// RVA: 0x1852CB4 Offset: 0x1852CB4 VA: 0x1852CB4
	public void OnClickRandomLimitCount1() { }

	// RVA: 0x1852D0C Offset: 0x1852D0C VA: 0x1852D0C
	public void OnClickRandomLimitCount2() { }

	// RVA: 0x1852D64 Offset: 0x1852D64 VA: 0x1852D64
	public void OnClickRandomLimitCount3() { }

	// RVA: 0x1852DBC Offset: 0x1852DBC VA: 0x1852DBC
	public void OnClickRandomLimitCount4() { }

	// RVA: 0x1852E14 Offset: 0x1852E14 VA: 0x1852E14
	public void OnClickRandomCostume1() { }

	// RVA: 0x1852E6C Offset: 0x1852E6C VA: 0x1852E6C
	public void OnClickRandomCostume2() { }

	// RVA: 0x1852EC4 Offset: 0x1852EC4 VA: 0x1852EC4
	public void OnClickRandomCostume3() { }

	// RVA: 0x1852F1C Offset: 0x1852F1C VA: 0x1852F1C
	public void OnClickRandomCostume4() { }

	// RVA: 0x1852F74 Offset: 0x1852F74 VA: 0x1852F74
	public void OnClickRandomCostume5() { }

	// RVA: 0x1852FCC Offset: 0x1852FCC VA: 0x1852FCC
	public void OnClickRandomCostume6() { }

	// RVA: 0x1853024 Offset: 0x1853024 VA: 0x1853024
	public void OnClickRandomCostume7() { }

	// RVA: 0x185307C Offset: 0x185307C VA: 0x185307C
	public void OnClickRandomCostume8() { }

	// RVA: 0x18530D4 Offset: 0x18530D4 VA: 0x18530D4
	public void OnClickSwitchRandomLimitCountOwn() { }

	// RVA: 0x185312C Offset: 0x185312C VA: 0x185312C
	public void OnClickSwitchRandomLimitCountSupport() { }

	// RVA: 0x1853184 Offset: 0x1853184 VA: 0x1853184
	public void OnClickRandomLimitCountOtherSettingMask() { }

	// RVA: 0x18531DC Offset: 0x18531DC VA: 0x18531DC
	public void OnClickRandomLimitCountSettingMask() { }

	// RVA: 0x1853234 Offset: 0x1853234 VA: 0x1853234
	public void OnClickRandomLimitCountSelectSupportMask() { }

	// RVA: 0x185328C Offset: 0x185328C VA: 0x185328C
	public void OnClickButton(UICommonButton tappedButton, ServantStatusListViewItemDrawButton ownerObject) { }
}

// Namespace: 
public enum ServantStatusListViewObject.InitMode // TypeDefIndex: 5776
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusListViewObject.InitMode INVISIBLE = 0;
	public const ServantStatusListViewObject.InitMode INVALID = 1;
	public const ServantStatusListViewObject.InitMode VALID = 2;
	public const ServantStatusListViewObject.InitMode INPUT = 3;
	public const ServantStatusListViewObject.InitMode BATTLE = 4;
	public const ServantStatusListViewObject.InitMode COMMAND = 5;
	public const ServantStatusListViewObject.InitMode FACE = 6;
	public const ServantStatusListViewObject.InitMode STATUS = 7;
	public const ServantStatusListViewObject.InitMode PORTRAIT = 8;
	public const ServantStatusListViewObject.InitMode MODIFY = 9;
	public const ServantStatusListViewObject.InitMode RANDOM_LIMIT_COUNT_SUPPORT = 10;
	public const ServantStatusListViewObject.InitMode RANDOM_LIMIT_COUNT_SETTING = 11;
}

// Namespace: 
protected enum ServantStatusListViewObject.State // TypeDefIndex: 5777
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusListViewObject.State INIT = 0;
	public const ServantStatusListViewObject.State IDLE = 1;
	public const ServantStatusListViewObject.State MOVE = 2;
	public const ServantStatusListViewObject.State INPUT = 3;
}

// Namespace: 
public class ServantStatusNpComponent : BaseMonoBehaviour // TypeDefIndex: 5778
{
	// Fields
	[SerializeField] // RVA: 0xCBC708 Offset: 0xCBC708 VA: 0xCBC708
	protected GameObject baseObject; // 0x18
	[SerializeField] // RVA: 0xCBC718 Offset: 0xCBC718 VA: 0xCBC718
	protected GameObject maskBase; // 0x20
	[SerializeField] // RVA: 0xCBC728 Offset: 0xCBC728 VA: 0xCBC728
	protected UISprite maskSprite; // 0x28
	[SerializeField] // RVA: 0xCBC738 Offset: 0xCBC738 VA: 0xCBC738
	protected UILabel maskInfoLabel; // 0x30
	[SerializeField] // RVA: 0xCBC748 Offset: 0xCBC748 VA: 0xCBC748
	protected UISprite condSprite; // 0x38
	[SerializeField] // RVA: 0xCBC758 Offset: 0xCBC758 VA: 0xCBC758
	protected UILabel condLabel; // 0x40
	[SerializeField] // RVA: 0xCBC768 Offset: 0xCBC768 VA: 0xCBC768
	protected GameObject npObject; // 0x48
	[SerializeField] // RVA: 0xCBC778 Offset: 0xCBC778 VA: 0xCBC778
	protected GameObject commandCardPrefab; // 0x50
	[SerializeField] // RVA: 0xCBC788 Offset: 0xCBC788 VA: 0xCBC788
	protected GameObject commandCardBase; // 0x58
	[SerializeField] // RVA: 0xCBC798 Offset: 0xCBC798 VA: 0xCBC798
	protected UILabel rubyLabel; // 0x60
	[SerializeField] // RVA: 0xCBC7A8 Offset: 0xCBC7A8 VA: 0xCBC7A8
	protected UILabel nameLabel; // 0x68
	[SerializeField] // RVA: 0xCBC7B8 Offset: 0xCBC7B8 VA: 0xCBC7B8
	protected UILabel npRankLabel; // 0x70
	[SerializeField] // RVA: 0xCBC7C8 Offset: 0xCBC7C8 VA: 0xCBC7C8
	protected UILabel npTypeLabel; // 0x78
	[SerializeField] // RVA: 0xCBC7D8 Offset: 0xCBC7D8 VA: 0xCBC7D8
	protected UILabel npLevelLabel; // 0x80
	[SerializeField] // RVA: 0xCBC7E8 Offset: 0xCBC7E8 VA: 0xCBC7E8
	protected UISprite[] guageSpriteList; // 0x88
	[SerializeField] // RVA: 0xCBC7F8 Offset: 0xCBC7F8 VA: 0xCBC7F8
	protected UILabel maxGuageLabel; // 0x90
	[SerializeField] // RVA: 0xCBC808 Offset: 0xCBC808 VA: 0xCBC808
	protected UILabel explanationLabel; // 0x98
	protected TreasureDvcEntity tdEntity; // 0xA0
	protected BattleCommandData commandCardData; // 0xA8
	protected BattleCommandComponent commandCardComponent; // 0xB0
	private static readonly int DETAIL_FONT_SIZE; // 0x0
	private static readonly int DETAIL_MAX_HEIGHT; // 0x4
	private static readonly int DETAIL_DEFAULT_HEIGHT; // 0x8
	private static readonly int DETAIL_LINE_HEIGHT; // 0xC
	private static readonly float MULTI_NP_POS_Y; // 0x10
	private static readonly float MASK_BASE_POS_Y; // 0x14
	private static readonly int MASK_DEFAULT_HEIGHT; // 0x18
	private static readonly int COND_TITLE_MAX_WIDTH; // 0x1C
	[CompilerGeneratedAttribute] // RVA: 0xCBC818 Offset: 0xCBC818 VA: 0xCBC818
	[DebuggerBrowsableAttribute] // RVA: 0xCBC818 Offset: 0xCBC818 VA: 0xCBC818
	private int <Adjust>k__BackingField; // 0xB8
	private bool isCharaHide; // 0xBC
	private int cardType; // 0xC0
	private int commandLimitCountFix; // 0xC4
	private int commandLimitCountAdjust; // 0xC8
	private HashSet<int> costumeIdHash; // 0xD0

	// Properties
	public int Adjust { get; set; }

	// Methods

	// RVA: 0x18532D0 Offset: 0x18532D0 VA: 0x18532D0
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35978 Offset: 0xD35978 VA: 0xD35978
	// RVA: 0x1853348 Offset: 0x1853348 VA: 0x1853348
	private void set_Adjust(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD35988 Offset: 0xD35988 VA: 0xD35988
	// RVA: 0x18454B8 Offset: 0x18454B8 VA: 0x18454B8
	public int get_Adjust() { }

	// RVA: 0x18445C8 Offset: 0x18445C8 VA: 0x18445C8
	public void Set(int idx, TreasureDvcInfo tdInfo, ServantStatusListViewItem item, int tdId, bool multiFlg = False, int condLimitCount = 0, string title = "", string closedMessage = "", int isCharaHide = 0) { }

	// RVA: 0x18455AC Offset: 0x18455AC VA: 0x18455AC
	public void ModifyCommandCard(ServantStatusListViewItem item) { }

	// RVA: 0x18537B8 Offset: 0x18537B8 VA: 0x18537B8
	private int GetCommandLimitCount(ServantStatusListViewItem item) { }

	// RVA: 0x185396C Offset: 0x185396C VA: 0x185396C
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusParameterGauge : BaseMonoBehaviour // TypeDefIndex: 5779
{
	// Fields
	[SerializeField] // RVA: 0xCBC854 Offset: 0xCBC854 VA: 0xCBC854
	protected UISprite evaluationSprite; // 0x18
	[SerializeField] // RVA: 0xCBC864 Offset: 0xCBC864 VA: 0xCBC864
	protected UISprite evaluationAdd1Sprite; // 0x20
	[SerializeField] // RVA: 0xCBC874 Offset: 0xCBC874 VA: 0xCBC874
	protected UISprite evaluationAdd2Sprite; // 0x28
	[SerializeField] // RVA: 0xCBC884 Offset: 0xCBC884 VA: 0xCBC884
	protected UISprite evaluationAdd3Sprite; // 0x30
	[SerializeField] // RVA: 0xCBC894 Offset: 0xCBC894 VA: 0xCBC894
	protected UISprite[] gaugeSpriteList; // 0x38

	// Methods

	// RVA: 0x1853A1C Offset: 0x1853A1C VA: 0x1853A1C
	public void .ctor() { }

	// RVA: 0x1853A7C Offset: 0x1853A7C VA: 0x1853A7C
	public void Set(ServantStatusParameterGauge.Kind kind, StatusRank.Kind rank) { }
}

// Namespace: 
public enum ServantStatusParameterGauge.Kind // TypeDefIndex: 5780
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusParameterGauge.Kind POWER = 0;
	public const ServantStatusParameterGauge.Kind DEFENSE = 1;
	public const ServantStatusParameterGauge.Kind AGILITY = 2;
	public const ServantStatusParameterGauge.Kind MAGIC = 3;
	public const ServantStatusParameterGauge.Kind LUCK = 4;
	public const ServantStatusParameterGauge.Kind NP = 5;
}

// Namespace: 
public class ServantStatusQuestBoardDraw : MonoBehaviour // TypeDefIndex: 5781
{
	// Fields
	public static readonly int TITLE_LABEL_BASE_WIDTH; // 0x0
	private static readonly Vector3 CLEAR_POS_AREA; // 0x4
	private static readonly Vector3 CLEAR_POS_QUEST; // 0x10
	private static readonly int QUEST_BOARD_PHASE_INTERVAL; // 0x1C
	private static readonly int QUEST_BOARD_PHASE_LOOF_INTERVAL; // 0x20
	private static readonly int QUEST_BOARD_PHASE_EX_INTERVAL; // 0x24
	private static readonly int QUEST_BOARD_PHASE_EX_LOOF_INTERVAL; // 0x28
	private static readonly string DARK_BOARD_SPRITE_NAME; // 0x30
	private static readonly int DARK_BOARD_WIDTH; // 0x38
	private static readonly int DARK_BOARD_HIGHT; // 0x3C
	private static readonly string BASE_BOARD_SPRITE_NAME; // 0x40
	private static readonly string TITLE_SPRITE_NAME_INTERLUDE; // 0x48
	private static readonly string TITLE_SPRITE_NAME_INTERLUDE_MAP; // 0x50
	private static readonly string TITLE_SPRITE_NAME_RAINFORCEMENT; // 0x58
	private static readonly string QUEST_BOARD_INFO_FRAME_NAME; // 0x60
	private static readonly string BASE_BOARD_LIMIT_UNSEAL_SPRITE_NAME; // 0x68
	private static readonly string TITLE_SPRITE_NAME_LIMIT_UNSEAL; // 0x70
	[SerializeField] // RVA: 0xCBC8A4 Offset: 0xCBC8A4 VA: 0xCBC8A4
	private UISprite mcBaseP; // 0x18
	[SerializeField] // RVA: 0xCBC8B4 Offset: 0xCBC8B4 VA: 0xCBC8B4
	private GameObject mClearObj; // 0x20
	[SerializeField] // RVA: 0xCBC8C4 Offset: 0xCBC8C4 VA: 0xCBC8C4
	private GameObject mLinkObj; // 0x28
	[SerializeField] // RVA: 0xCBC8D4 Offset: 0xCBC8D4 VA: 0xCBC8D4
	private GameObject mTitleObj; // 0x30
	[SerializeField] // RVA: 0xCBC8E4 Offset: 0xCBC8E4 VA: 0xCBC8E4
	private UILabel mNoneLb; // 0x38
	[SerializeField] // RVA: 0xCBC8F4 Offset: 0xCBC8F4 VA: 0xCBC8F4
	private GameObject mRewardObj; // 0x40
	[SerializeField] // RVA: 0xCBC904 Offset: 0xCBC904 VA: 0xCBC904
	private UILabel mTitleNameLb; // 0x48
	[SerializeField] // RVA: 0xCBC914 Offset: 0xCBC914 VA: 0xCBC914
	private UISprite mLineSp; // 0x50
	[SerializeField] // RVA: 0xCBC924 Offset: 0xCBC924 VA: 0xCBC924
	private UILabel mTitleShortcutLb; // 0x58
	[SerializeField] // RVA: 0xCBC934 Offset: 0xCBC934 VA: 0xCBC934
	private UISprite mTitleShortcutSp; // 0x60
	[SerializeField] // RVA: 0xCBC944 Offset: 0xCBC944 VA: 0xCBC944
	private UISprite mTitleSp; // 0x68
	[SerializeField] // RVA: 0xCBC954 Offset: 0xCBC954 VA: 0xCBC954
	private UISprite mTitle2Sp; // 0x70
	[SerializeField] // RVA: 0xCBC964 Offset: 0xCBC964 VA: 0xCBC964
	private BoardOptionTextWithIconComponent mOptionInfoLb; // 0x78
	[SerializeField] // RVA: 0xCBC974 Offset: 0xCBC974 VA: 0xCBC974
	private UISprite mOptionInfoFrameSp; // 0x80
	[SerializeField] // RVA: 0xCBC984 Offset: 0xCBC984 VA: 0xCBC984
	private ItemIconComponent mRewardIcon; // 0x88
	[SerializeField] // RVA: 0xCBC994 Offset: 0xCBC994 VA: 0xCBC994
	private UISprite mRewardGetSP; // 0x90
	private List<QuestBoardInformaionText> mInfoTextList; // 0x98
	protected GiftEntity[] mRewardIconInfs; // 0xA0
	protected GameObject inputMessageObject; // 0xA8
	protected int questId; // 0xB0
	protected MapControl.QuestInfo qinf; // 0xB8
	private UIAtlas basePanelAtlas; // 0xC0

	// Methods

	// RVA: 0x1853F8C Offset: 0x1853F8C VA: 0x1853F8C
	public void .ctor() { }

	// RVA: 0x1853F94 Offset: 0x1853F94 VA: 0x1853F94
	public static bool IsClose(MapControl.QuestInfo qinf) { }

	// RVA: 0x18540B0 Offset: 0x18540B0 VA: 0x18540B0
	private bool IsEventTime(EventEntity eventEntity, long checkTime) { }

	// RVA: 0x18540CC Offset: 0x18540CC VA: 0x18540CC
	private BoardMessageEntity findOverrideQuestMessage(BoardMessageEntity[] boardMessageData, int eventId) { }

	// RVA: 0x184CAFC Offset: 0x184CAFC VA: 0x184CAFC
	public void SetDark() { }

	// RVA: 0x184ABD4 Offset: 0x184ABD4 VA: 0x184ABD4
	public void SetItem(MapControl.QuestInfo qinf, MapControl.QuestInfo beforeQuestInfo, GameObject inputMessageObject, ServantStatusQuestBoardManager questBoardManager, int limitCount) { }

	// RVA: 0x184D284 Offset: 0x184D284 VA: 0x184D284
	public void UpdateItem(ServantStatusQuestBoardManager questBoardManager) { }

	// RVA: 0x18541BC Offset: 0x18541BC VA: 0x18541BC
	private void ResetInfoTextList() { }

	// RVA: 0x18549A4 Offset: 0x18549A4 VA: 0x18549A4
	private void UpdateInfoText(MapControl.QuestInfo qinf, int strIndex, long checkTime) { }

	// RVA: 0x184CFA0 Offset: 0x184CFA0 VA: 0x184CFA0
	public void OnChangeAlphaAnim(ServantStatusQuestBoardManager questBoardManager) { }

	// RVA: 0x18548E4 Offset: 0x18548E4 VA: 0x18548E4
	private void SetInfoTextAlpha(float alpha) { }

	// RVA: 0x1854A44 Offset: 0x1854A44 VA: 0x1854A44
	private void ChangeNextInfoText(MapControl.QuestInfo qinf, ServantStatusQuestBoardManager questBoardManagerer) { }

	// RVA: 0x1854D6C Offset: 0x1854D6C VA: 0x1854D6C
	private bool IsMultiInfoText() { }

	// RVA: 0x1854DCC Offset: 0x1854DCC VA: 0x1854DCC
	private bool IsInfoTextListNullOrEmpty() { }

	// RVA: 0x1854940 Offset: 0x1854940 VA: 0x1854940
	private void SetRewardIconAlpha(float alpha) { }

	// RVA: 0x1854C00 Offset: 0x1854C00 VA: 0x1854C00
	private void ChangeNextRewardIcon(ServantStatusQuestBoardManager questBoardManager) { }

	// RVA: 0x1854E34 Offset: 0x1854E34 VA: 0x1854E34
	private bool IsRewardIcons() { }

	// RVA: 0x1854254 Offset: 0x1854254 VA: 0x1854254
	private QuestBoardInformaionText[] GetCampaignText(int quest_id, int phase, bool isQuestNoneCleared, ServantStatusQuestBoardManager questBoardManager, ref int cost_calc_val, ref int fixedVal) { }

	// RVA: 0x1854E54 Offset: 0x1854E54 VA: 0x1854E54
	protected void OnClick() { }

	// RVA: 0x1854F5C Offset: 0x1854F5C VA: 0x1854F5C
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE130 Offset: 0xCAE130 VA: 0xCAE130
private sealed class ServantStatusQuestBoardDraw.<SetItem>c__AnonStorey0 // TypeDefIndex: 5782
{
	// Fields
	internal Color baseCol; // 0x10
	internal bool isMap; // 0x20
	internal ServantStatusQuestBoardDraw $this; // 0x28

	// Methods

	// RVA: 0x1854244 Offset: 0x1854244 VA: 0x1854244
	public void .ctor() { }

	// RVA: 0x1855120 Offset: 0x1855120 VA: 0x1855120
	internal void <>m__0() { }

	// RVA: 0x1855390 Offset: 0x1855390 VA: 0x1855390
	internal void <>m__1() { }
}

// Namespace: 
public class ServantStatusQuestBoardManager // TypeDefIndex: 5783
{
	// Fields
	private static readonly float ALPHA_ANIM_SPD_RATE; // 0x0
	private static readonly float ALPHA_ANIM_TIME_INTERVAL; // 0x4
	private static readonly int ALPHA_ANIM_COUNT_RESET_VAL; // 0x8
	private float mAlphaAnimNow; // 0x10
	private float mAlphaAnimTgt; // 0x14
	private float mAlphaAnimTimeOld; // 0x18
	private int mAlphaAnimCnt; // 0x1C
	private bool mResetConsumeColor; // 0x20
	private float infoTime; // 0x24
	private float exitTime; // 0x28
	private long mListCreatedTime; // 0x30

	// Properties
	public float AlphaAnimNow { get; }
	public long ListCreatedTime { get; }

	// Methods

	// RVA: 0x1849EE0 Offset: 0x1849EE0 VA: 0x1849EE0
	public void .ctor() { }

	// RVA: 0x18548DC Offset: 0x18548DC VA: 0x18548DC
	public float get_AlphaAnimNow() { }

	// RVA: 0x185424C Offset: 0x185424C VA: 0x185424C
	public long get_ListCreatedTime() { }

	// RVA: 0x184D11C Offset: 0x184D11C VA: 0x184D11C
	public bool UpdateAlphaAnim() { }

	// RVA: 0x185562C Offset: 0x185562C VA: 0x185562C
	private void ResetAlphaAnimTime() { }

	// RVA: 0x18548CC Offset: 0x18548CC VA: 0x18548CC
	public int GetAlphaAnimCnt(int length) { }

	// RVA: 0x185565C Offset: 0x185565C VA: 0x185565C
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusSkillComponent : BaseMonoBehaviour // TypeDefIndex: 5784
{
	// Fields
	[SerializeField] // RVA: 0xCBC9A4 Offset: 0xCBC9A4 VA: 0xCBC9A4
	protected GameObject skillBase; // 0x18
	[SerializeField] // RVA: 0xCBC9B4 Offset: 0xCBC9B4 VA: 0xCBC9B4
	protected UISprite titleNumFirstSprite; // 0x20
	[SerializeField] // RVA: 0xCBC9C4 Offset: 0xCBC9C4 VA: 0xCBC9C4
	protected UISprite titleNumSecondSprite; // 0x28
	[SerializeField] // RVA: 0xCBC9D4 Offset: 0xCBC9D4 VA: 0xCBC9D4
	protected SkillIconComponent skillIcon; // 0x30
	[SerializeField] // RVA: 0xCBC9E4 Offset: 0xCBC9E4 VA: 0xCBC9E4
	protected UIRangeLabel skillTitleRangeLabel; // 0x38
	[SerializeField] // RVA: 0xCBC9F4 Offset: 0xCBC9F4 VA: 0xCBC9F4
	protected UILabel skillExplanationLabel; // 0x40
	private static readonly int DETAIL_FONT_SIZE; // 0x0
	private static readonly int MAX_HEIGHT; // 0x4
	private static readonly int ADJUST_HEIGHT; // 0x8
	private static readonly string SKILL_NO_FILE_PREFIX; // 0x10
	private static readonly int MAX_LEVEL; // 0x18

	// Methods

	// RVA: 0x18556D4 Offset: 0x18556D4 VA: 0x18556D4
	public void .ctor() { }

	// RVA: 0x18556DC Offset: 0x18556DC VA: 0x18556DC
	public void SetItem(int num, int skillId, string titleMessage, string explanationMessage, bool releaseState, int skillLv) { }

	// RVA: 0x1855B24 Offset: 0x1855B24 VA: 0x1855B24
	public int GetHeight() { }

	// RVA: 0x1855B54 Offset: 0x1855B54 VA: 0x1855B54
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusVoiceListViewItem : ListViewItem // TypeDefIndex: 5785
{
	// Fields
	protected ObscuredInt svtId; // 0x70
	protected ObscuredInt changeSvrVoiceId; // 0x80
	protected ObscuredInt limitCount; // 0x90
	protected VoiceEntity voiceEntitiy; // 0xA0
	protected string overwriteName; // 0xA8
	protected string overwriteNameDefault; // 0xB0
	protected int overwritePriority; // 0xB8
	protected int firstPriority; // 0xBC
	protected bool isCanPlay; // 0xC0
	protected bool isPlay; // 0xC1
	private bool genderFlag; // 0xC2
	private bool voiceLabelSpecification; // 0xC3
	protected ObscuredString openName; // 0xC8
	protected ObscuredString dispName; // 0xD0
	protected ObscuredInt dispNum; // 0xD8

	// Properties
	public SvtVoiceType.Type PlayType { get; }
	public int SvtId { get; }
	public int ChangeSvrVoiceId { get; }
	public int LimitCount { get; }
	public string LabelName { get; }
	public bool GenderFlag { get; }
	public bool IsVoiceLabelSpecification { get; }
	public string Name { get; }
	public string OpenName { get; }
	public string DispName { get; }
	public int DispNum { get; }
	public CondType.Kind CondType { get; }
	public int CondValue { get; }
	public bool IsCanPlay { get; }
	public bool IsPlay { get; }

	// Methods

	// RVA: 0x1855BE8 Offset: 0x1855BE8 VA: 0x1855BE8
	public void .ctor(int index, int svtId, int changeSvrVoiceId, int limitCount, VoiceInfo voiceInfo, int firstPriority, bool genderFlag = False, bool voiceLabelSpec = False) { }

	// RVA: 0x1855D84 Offset: 0x1855D84 VA: 0x1855D84
	protected void Analyze() { }

	// RVA: 0x1855ED4 Offset: 0x1855ED4 VA: 0x1855ED4 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1855EDC Offset: 0x1855EDC VA: 0x1855EDC
	public void SetLimitCount(int svtId, int changeSvrVoiceId, int limitCount, VoiceInfo voiceInfo, int firstPriority) { }

	// RVA: 0x1855FFC Offset: 0x1855FFC VA: 0x1855FFC Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x1856028 Offset: 0x1856028 VA: 0x1856028
	public void SetPLay(bool isPlay) { }

	// RVA: 0x1856034 Offset: 0x1856034 VA: 0x1856034
	public SvtVoiceType.Type get_PlayType() { }

	// RVA: 0x1856060 Offset: 0x1856060 VA: 0x1856060
	public int get_SvtId() { }

	// RVA: 0x18560D0 Offset: 0x18560D0 VA: 0x18560D0
	public int get_ChangeSvrVoiceId() { }

	// RVA: 0x1856140 Offset: 0x1856140 VA: 0x1856140
	public int get_LimitCount() { }

	// RVA: 0x18561B0 Offset: 0x18561B0 VA: 0x18561B0
	public string get_LabelName() { }

	// RVA: 0x185622C Offset: 0x185622C VA: 0x185622C
	public bool get_GenderFlag() { }

	// RVA: 0x1856234 Offset: 0x1856234 VA: 0x1856234
	public bool get_IsVoiceLabelSpecification() { }

	// RVA: 0x185623C Offset: 0x185623C VA: 0x185623C
	public string get_Name() { }

	// RVA: 0x18563FC Offset: 0x18563FC VA: 0x18563FC
	public string get_OpenName() { }

	// RVA: 0x1856468 Offset: 0x1856468 VA: 0x1856468
	public string get_DispName() { }

	// RVA: 0x18564D4 Offset: 0x18564D4 VA: 0x18564D4
	public int get_DispNum() { }

	// RVA: 0x1856544 Offset: 0x1856544 VA: 0x1856544
	public void SetNameNum(int num) { }

	// RVA: 0x18565C0 Offset: 0x18565C0 VA: 0x18565C0
	public CondType.Kind get_CondType() { }

	// RVA: 0x18565EC Offset: 0x18565EC VA: 0x18565EC
	public int get_CondValue() { }

	// RVA: 0x1856618 Offset: 0x1856618 VA: 0x1856618
	public bool get_IsCanPlay() { }

	// RVA: 0x1856620 Offset: 0x1856620 VA: 0x1856620
	public bool get_IsPlay() { }
}

// Namespace: 
public class ServantStatusVoiceListViewItemDraw : MonoBehaviour // TypeDefIndex: 5786
{
	// Fields
	[SerializeField] // RVA: 0xCBCA04 Offset: 0xCBCA04 VA: 0xCBCA04
	protected UISprite typeSpite; // 0x18
	[SerializeField] // RVA: 0xCBCA14 Offset: 0xCBCA14 VA: 0xCBCA14
	protected UILabel nameLabel; // 0x20
	[SerializeField] // RVA: 0xCBCA24 Offset: 0xCBCA24 VA: 0xCBCA24
	protected UISprite playIconSprite; // 0x28
	[SerializeField] // RVA: 0xCBCA34 Offset: 0xCBCA34 VA: 0xCBCA34
	protected UICommonButton baseButton; // 0x30

	// Methods

	// RVA: 0x1856628 Offset: 0x1856628 VA: 0x1856628
	public void .ctor() { }

	// RVA: 0x1856630 Offset: 0x1856630 VA: 0x1856630
	public void SetItem(ServantStatusVoiceListViewItem item, ServantStatusVoiceListViewItemDraw.DispMode mode) { }

	// RVA: 0x1856838 Offset: 0x1856838 VA: 0x1856838
	public void SetInput(ServantStatusVoiceListViewItem item, bool isInput) { }

	// RVA: 0x18568D8 Offset: 0x18568D8 VA: 0x18568D8
	public void SetPlay(ServantStatusVoiceListViewItem item) { }
}

// Namespace: 
public enum ServantStatusVoiceListViewItemDraw.DispMode // TypeDefIndex: 5787
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusVoiceListViewItemDraw.DispMode INVISIBLE = 0;
	public const ServantStatusVoiceListViewItemDraw.DispMode INVALID = 1;
	public const ServantStatusVoiceListViewItemDraw.DispMode VALID = 2;
	public const ServantStatusVoiceListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class ServantStatusVoiceListViewManager : ListViewManager // TypeDefIndex: 5788
{
	// Fields
	[SerializeField] // RVA: 0xCBCA44 Offset: 0xCBCA44 VA: 0xCBCA44
	protected UILabel explanationLabel; // 0x138
	protected ServantStatusVoiceListViewManager.InitMode initMode; // 0x140
	[CompilerGeneratedAttribute] // RVA: 0xCBCA54 Offset: 0xCBCA54 VA: 0xCBCA54
	[DebuggerBrowsableAttribute] // RVA: 0xCBCA54 Offset: 0xCBCA54 VA: 0xCBCA54
	private ServantStatusVoiceListViewManager.CallbackFunc callbackFunc; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xCBCA90 Offset: 0xCBCA90 VA: 0xCBCA90
	[DebuggerBrowsableAttribute] // RVA: 0xCBCA90 Offset: 0xCBCA90 VA: 0xCBCA90
	private Action callbackFunc2; // 0x150
	protected int callbackCount; // 0x158

	// Properties
	public List<ServantStatusVoiceListViewObject> ObjectList { get; }
	public List<ServantStatusVoiceListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x1856974 Offset: 0x1856974 VA: 0x1856974
	public void .ctor() { }

	// RVA: 0x185697C Offset: 0x185697C VA: 0x185697C
	protected void add_callbackFunc(ServantStatusVoiceListViewManager.CallbackFunc value) { }

	// RVA: 0x1856A6C Offset: 0x1856A6C VA: 0x1856A6C
	protected void remove_callbackFunc(ServantStatusVoiceListViewManager.CallbackFunc value) { }

	// RVA: 0x1856B5C Offset: 0x1856B5C VA: 0x1856B5C
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x1856C4C Offset: 0x1856C4C VA: 0x1856C4C
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x1856D3C Offset: 0x1856D3C VA: 0x1856D3C
	public List<ServantStatusVoiceListViewObject> get_ObjectList() { }

	// RVA: 0x1856F08 Offset: 0x1856F08 VA: 0x1856F08
	public List<ServantStatusVoiceListViewObject> get_ClippingObjectList() { }

	// RVA: 0x18571E8 Offset: 0x18571E8 VA: 0x18571E8
	public void AddItemServantVoiceRelation(ref int firstPriority, ServantVoiceRelationEntity[] relationList, int svtId) { }

	// RVA: 0x18574B0 Offset: 0x18574B0 VA: 0x18574B0
	public void CreateList(ServantStatusListViewItem mainInfo, int[] changeSvtVoiceIdList) { }

	// RVA: 0x1858D04 Offset: 0x1858D04 VA: 0x1858D04
	private bool IsSvtVoiceEntityCondAddItem(int svtId, int limitCount, VoiceInfo voiceInfo) { }

	// RVA: 0x1858F60 Offset: 0x1858F60 VA: 0x1858F60
	private bool IsSvtVoiceEntityFriendshipCheck(int svtId, VoiceInfo voiceInfo) { }

	// RVA: 0x1859148 Offset: 0x1859148 VA: 0x1859148
	public void DestroyList() { }

	// RVA: 0x1859150 Offset: 0x1859150 VA: 0x1859150
	public ServantStatusVoiceListViewItem GetItem(int index) { }

	// RVA: 0x18591F8 Offset: 0x18591F8 VA: 0x18591F8 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1859330 Offset: 0x1859330 VA: 0x1859330
	public void SetMode(ServantStatusVoiceListViewManager.InitMode mode, ServantStatusVoiceListViewManager.CallbackFunc callback) { }

	// RVA: 0x18596F0 Offset: 0x18596F0 VA: 0x18596F0
	public void SetMode(ServantStatusVoiceListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1859340 Offset: 0x1859340 VA: 0x1859340
	public void SetMode(ServantStatusVoiceListViewManager.InitMode mode, int select = -1) { }

	// RVA: 0x1859978 Offset: 0x1859978 VA: 0x1859978
	protected void RequestListObject(ServantStatusVoiceListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1859700 Offset: 0x1859700 VA: 0x1859700
	protected void RequestListObject(ServantStatusVoiceListViewObject.InitMode mode) { }

	// RVA: 0x1859C04 Offset: 0x1859C04 VA: 0x1859C04
	protected void OnMoveEnd() { }

	// RVA: 0x1859CDC Offset: 0x1859CDC VA: 0x1859CDC
	protected void OnClickListView(ListViewObject obj) { }
}

// Namespace: 
public enum ServantStatusVoiceListViewManager.InitMode // TypeDefIndex: 5789
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusVoiceListViewManager.InitMode NONE = 0;
	public const ServantStatusVoiceListViewManager.InitMode INPUT = 1;
	public const ServantStatusVoiceListViewManager.InitMode PLAY = 2;
	public const ServantStatusVoiceListViewManager.InitMode MODIFY = 3;
}

// Namespace: 
public enum ServantStatusVoiceListViewManager.ResultKind // TypeDefIndex: 5790
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusVoiceListViewManager.ResultKind NONE = 0;
	public const ServantStatusVoiceListViewManager.ResultKind PLAY = 1;
	public const ServantStatusVoiceListViewManager.ResultKind STOP = 2;
}

// Namespace: 
public sealed class ServantStatusVoiceListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 5791
{
	// Methods

	// RVA: 0x185A020 Offset: 0x185A020 VA: 0x185A020
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1859DDC Offset: 0x1859DDC VA: 0x1859DDC Slot: 11
	public virtual void Invoke(ServantStatusVoiceListViewManager.ResultKind kind, int result) { }

	// RVA: 0x185A030 Offset: 0x185A030 VA: 0x185A030 Slot: 12
	public virtual IAsyncResult BeginInvoke(ServantStatusVoiceListViewManager.ResultKind kind, int result, AsyncCallback callback, object object) { }

	// RVA: 0x185A0D8 Offset: 0x185A0D8 VA: 0x185A0D8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantStatusVoiceListViewObject : ListViewObject // TypeDefIndex: 5792
{
	// Fields
	protected ServantStatusVoiceListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCBCACC Offset: 0xCBCACC VA: 0xCBCACC
	[DebuggerBrowsableAttribute] // RVA: 0xCBCACC Offset: 0xCBCACC VA: 0xCBCACC
	private Action callbackFunc; // 0x70
	protected ServantStatusVoiceListViewItemDraw itemDraw; // 0x78
	protected ServantStatusVoiceListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x185A0E4 Offset: 0x185A0E4 VA: 0x185A0E4
	public void .ctor() { }

	// RVA: 0x185A14C Offset: 0x185A14C VA: 0x185A14C
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x185A238 Offset: 0x185A238 VA: 0x185A238
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x185A324 Offset: 0x185A324 VA: 0x185A324
	protected void Awake() { }

	// RVA: 0x185A398 Offset: 0x185A398 VA: 0x185A398
	private void OnDestroy() { }

	// RVA: 0x1857164 Offset: 0x1857164 VA: 0x1857164
	public ServantStatusVoiceListViewItem GetItem() { }

	// RVA: 0x185A444 Offset: 0x185A444 VA: 0x185A444 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x185A474 Offset: 0x185A474 VA: 0x185A474 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x185A46C Offset: 0x185A46C VA: 0x185A46C
	protected void InitItem() { }

	// RVA: 0x185A49C Offset: 0x185A49C VA: 0x185A49C Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x185A5A0 Offset: 0x185A5A0 VA: 0x185A5A0 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x185A628 Offset: 0x185A628 VA: 0x185A628
	public void Init(ServantStatusVoiceListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x18598F4 Offset: 0x18598F4 VA: 0x18598F4
	public void Init(ServantStatusVoiceListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x1859B80 Offset: 0x1859B80 VA: 0x1859B80
	public void Init(ServantStatusVoiceListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x18592B0 Offset: 0x18592B0 VA: 0x18592B0
	public void Init(ServantStatusVoiceListViewObject.InitMode initMode) { }

	// RVA: 0x185A888 Offset: 0x185A888 VA: 0x185A888
	protected void SetupDisp() { }

	// RVA: 0x185A998 Offset: 0x185A998 VA: 0x185A998
	protected void EventMoveEnd() { }
}

// Namespace: 
public enum ServantStatusVoiceListViewObject.InitMode // TypeDefIndex: 5793
{
