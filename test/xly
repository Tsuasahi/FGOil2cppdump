	// RVA: 0x1B70A20 Offset: 0x1B70A20 VA: 0x1B70A20
	private static void .cctor() { }
}

// Namespace: 
public sealed class EventInfoPointGaugeControl.assetLoadFinish : MulticastDelegate // TypeDefIndex: 5483
{
	// Methods

	// RVA: 0x1B6F3FC Offset: 0x1B6F3FC VA: 0x1B6F3FC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B6EE24 Offset: 0x1B6EE24 VA: 0x1B6EE24 Slot: 11
	public virtual void Invoke(int eventId) { }

	// RVA: 0x1B710D0 Offset: 0x1B710D0 VA: 0x1B710D0 Slot: 12
	public virtual IAsyncResult BeginInvoke(int eventId, AsyncCallback callback, object object) { }

	// RVA: 0x1B7115C Offset: 0x1B7115C VA: 0x1B7115C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCADEC0 Offset: 0xCADEC0 VA: 0xCADEC0
private sealed class EventInfoPointGaugeControl.<LoadEventInfoAssetData>c__AnonStorey0 // TypeDefIndex: 5484
{
	// Fields
	internal EventInfoPointGaugeControl.assetLoadFinish callBack; // 0x10
	internal int eventId; // 0x18
	internal EventInfoPointGaugeControl $this; // 0x20

	// Methods

	// RVA: 0x1B6EE1C Offset: 0x1B6EE1C VA: 0x1B6EE1C
	public void .ctor() { }

	// RVA: 0x1B70AD4 Offset: 0x1B70AD4 VA: 0x1B70AD4
	internal void <>m__0(AssetData prefabData) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCADED0 Offset: 0xCADED0 VA: 0xCADED0
private sealed class EventInfoPointGaugeControl.<SetupEventPointGaugeDisp>c__AnonStorey1 // TypeDefIndex: 5485
{
	// Fields
	internal bool isActive; // 0x10
	internal Nullable<Vector3> pos; // 0x14
	internal EventInfoPointGaugeControl $this; // 0x28

	// Methods

	// RVA: 0x1B6F364 Offset: 0x1B6F364 VA: 0x1B6F364
	public void .ctor() { }

	// RVA: 0x1B7104C Offset: 0x1B7104C VA: 0x1B7104C
	internal void <>m__0(int eventId) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCADEE0 Offset: 0xCADEE0 VA: 0xCADEE0
private sealed class EventInfoPointGaugeControl.<SetupEventPointGaugeAndPlayEffect>c__AnonStorey2 // TypeDefIndex: 5486
{
	// Fields
	internal bool isActive; // 0x10
	internal Nullable<Vector3> pos; // 0x14
	internal Action callback; // 0x28
	internal EventInfoPointGaugeControl $this; // 0x30

	// Methods

	// RVA: 0x1B6F7CC Offset: 0x1B6F7CC VA: 0x1B6F7CC
	public void .ctor() { }

	// RVA: 0x1B70F38 Offset: 0x1B70F38 VA: 0x1B70F38
	internal void <>m__0(int eventId) { }

	// RVA: 0x1B7100C Offset: 0x1B7100C VA: 0x1B7100C
	internal void <>m__1(int eId) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCADEF0 Offset: 0xCADEF0 VA: 0xCADEF0
private sealed class EventInfoPointGaugeControl.<LoadEventPointGaugeEffect>c__AnonStorey3 // TypeDefIndex: 5487
{
	// Fields
	internal EventInfoPointGaugeControl.assetLoadFinish callbackEndFunc; // 0x10
	internal int eventId; // 0x18
	internal EventInfoPointGaugeControl $this; // 0x20

	// Methods

	// RVA: 0x1B6FEC0 Offset: 0x1B6FEC0 VA: 0x1B6FEC0
	public void .ctor() { }

	// RVA: 0x1B70B30 Offset: 0x1B70B30 VA: 0x1B70B30
	internal void <>m__0(AssetData prefabData) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCADF00 Offset: 0xCADF00 VA: 0xCADF00
private sealed class EventInfoPointGaugeControl.<LoadEventPointGaugeEffect>c__AnonStorey4 // TypeDefIndex: 5488
{
	// Fields
	internal Action callbackEndFunc; // 0x10

	// Methods

	// RVA: 0x1B6FF7C Offset: 0x1B6FF7C VA: 0x1B6FF7C
	public void .ctor() { }

	// RVA: 0x1B70B8C Offset: 0x1B70B8C VA: 0x1B70B8C
	internal void <>m__0(int eId) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCADF10 Offset: 0xCADF10 VA: 0xCADF10
private sealed class EventInfoPointGaugeControl.<PlayEventPointGaugeEffect>c__AnonStorey5 // TypeDefIndex: 5489
{
	// Fields
	internal int afterPoint; // 0x10
	internal int beforePoint; // 0x14
	internal EventInfoPointGaugeComponent.GaugeState afterGauge; // 0x18
	internal Action callback; // 0x20
	internal EventInfoPointGaugeControl $this; // 0x28

	// Methods

	// RVA: 0x1B6FF84 Offset: 0x1B6FF84 VA: 0x1B6FF84
	public void .ctor() { }

	// RVA: 0x1B70CD0 Offset: 0x1B70CD0 VA: 0x1B70CD0
	internal void <>m__0() { }

	// RVA: 0x1B70E9C Offset: 0x1B70E9C VA: 0x1B70E9C
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCADF20 Offset: 0xCADF20 VA: 0xCADF20
private sealed class EventInfoPointGaugeControl.<PlayEventPointGaugeChangeEffect>c__AnonStorey6 // TypeDefIndex: 5490
{
	// Fields
	internal EventInfoPointGaugeComponent.GaugeState afterGauge; // 0x10
	internal Action callback; // 0x18
	internal EventInfoPointGaugeControl $this; // 0x20

	// Methods

	// RVA: 0x1B701E4 Offset: 0x1B701E4 VA: 0x1B701E4
	public void .ctor() { }

	// RVA: 0x1B70C58 Offset: 0x1B70C58 VA: 0x1B70C58
	internal void <>m__0() { }

	// RVA: 0x1B70CA0 Offset: 0x1B70CA0 VA: 0x1B70CA0
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCADF30 Offset: 0xCADF30 VA: 0xCADF30
private sealed class EventInfoPointGaugeControl.<PlayEventPointGaugeAddEffect>c__AnonStorey7 // TypeDefIndex: 5491
{
	// Fields
	internal int basePoint; // 0x10
	internal int addPoint; // 0x14
	internal Action callback; // 0x18
	internal EventInfoPointGaugeControl $this; // 0x20

	// Methods

	// RVA: 0x1B707A8 Offset: 0x1B707A8 VA: 0x1B707A8
	public void .ctor() { }

	// RVA: 0x1B70B98 Offset: 0x1B70B98 VA: 0x1B70B98
	internal void <>m__0() { }
}

// Namespace: 
public class EventInfoPossessionItemCounter : EventInfoUIBase // TypeDefIndex: 5492
{
	// Fields
	[SerializeField] // RVA: 0xCB8DDC Offset: 0xCB8DDC VA: 0xCB8DDC
	private UISprite bgSprite; // 0x28
	[SerializeField] // RVA: 0xCB8DEC Offset: 0xCB8DEC VA: 0xCB8DEC
	private UILabel possessionTitleLabel; // 0x30
	[SerializeField] // RVA: 0xCB8DFC Offset: 0xCB8DFC VA: 0xCB8DFC
	private UILabel possessionValueLabel; // 0x38
	[SerializeField] // RVA: 0xCB8E0C Offset: 0xCB8E0C VA: 0xCB8E0C
	private string bgSpriteName; // 0x40
	[SerializeField] // RVA: 0xCB8E1C Offset: 0xCB8E1C VA: 0xCB8E1C
	private int possessionNumMax; // 0x48
	private int itemId; // 0x4C
	private long itemNum; // 0x50

	// Methods

	// RVA: 0x1B71168 Offset: 0x1B71168 VA: 0x1B71168
	public void .ctor() { }

	// RVA: 0x1B71224 Offset: 0x1B71224 VA: 0x1B71224 Slot: 5
	public override void Setup(EventUiValueEntity[] entity) { }

	// RVA: 0x1B71538 Offset: 0x1B71538 VA: 0x1B71538 Slot: 9
	public override void Redisplay() { }

	// RVA: 0x1B71380 Offset: 0x1B71380 VA: 0x1B71380
	private void UpdateDisp() { }
}

// Namespace: 
public class EventInfoProductivityGrowthDialog : BaseDialog // TypeDefIndex: 5493
{
	// Fields
	[SerializeField] // RVA: 0xCB8E2C Offset: 0xCB8E2C VA: 0xCB8E2C
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xCB8E3C Offset: 0xCB8E3C VA: 0xCB8E3C
	private UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xCB8E4C Offset: 0xCB8E4C VA: 0xCB8E4C
	private UIScrollView scrollView; // 0x68
	[SerializeField] // RVA: 0xCB8E5C Offset: 0xCB8E5C VA: 0xCB8E5C
	private UILabel closeLabel; // 0x70
	[SerializeField] // RVA: 0xCB8E6C Offset: 0xCB8E6C VA: 0xCB8E6C
	private GameObject[] dispObjList; // 0x78
	[SerializeField] // RVA: 0xCB8E7C Offset: 0xCB8E7C VA: 0xCB8E7C
	private UILabel[] messageList; // 0x80
	[SerializeField] // RVA: 0xCB8E8C Offset: 0xCB8E8C VA: 0xCB8E8C
	private ItemIconComponent[] countIconList01; // 0x88
	[SerializeField] // RVA: 0xCB8E9C Offset: 0xCB8E9C VA: 0xCB8E9C
	private UILabel[] countLabelList01; // 0x90
	[SerializeField] // RVA: 0xCB8EAC Offset: 0xCB8EAC VA: 0xCB8EAC
	private ItemIconComponent[] countIconList02; // 0x98
	[SerializeField] // RVA: 0xCB8EBC Offset: 0xCB8EBC VA: 0xCB8EBC
	private UILabel[] countLabelList02; // 0xA0
	[SerializeField] // RVA: 0xCB8ECC Offset: 0xCB8ECC VA: 0xCB8ECC
	private ItemIconComponent[] countIconList03; // 0xA8
	[SerializeField] // RVA: 0xCB8EDC Offset: 0xCB8EDC VA: 0xCB8EDC
	private UILabel[] countLabelList03; // 0xB0
	[SerializeField] // RVA: 0xCB8EEC Offset: 0xCB8EEC VA: 0xCB8EEC
	private ItemIconComponent[] countIconList04; // 0xB8
	[SerializeField] // RVA: 0xCB8EFC Offset: 0xCB8EFC VA: 0xCB8EFC
	private UILabel[] countLabelList04; // 0xC0
	private Action closeAction; // 0xC8

	// Methods

	// RVA: 0x1B7153C Offset: 0x1B7153C VA: 0x1B7153C
	public void .ctor() { }

	// RVA: 0x1B715A4 Offset: 0x1B715A4 VA: 0x1B715A4
	private void Init() { }

	// RVA: 0x1B71708 Offset: 0x1B71708 VA: 0x1B71708
	public void Open(Action closeAction) { }

	// RVA: 0x1B71D90 Offset: 0x1B71D90 VA: 0x1B71D90
	public void OnClickCloseButton() { }

	[CompilerGeneratedAttribute] // RVA: 0xD354B8 Offset: 0xD354B8 VA: 0xD354B8
	// RVA: 0x1B71E34 Offset: 0x1B71E34 VA: 0x1B71E34
	private void <OnClickCloseButton>m__0() { }
}

// Namespace: 
public class EventInfoQPPointCounter : EventInfoUIBase // TypeDefIndex: 5494
{
	// Fields
	[SerializeField] // RVA: 0xCB8F0C Offset: 0xCB8F0C VA: 0xCB8F0C
	private UISprite PointCounterSp; // 0x28
	[SerializeField] // RVA: 0xCB8F1C Offset: 0xCB8F1C VA: 0xCB8F1C
	private UISprite NextCounterSp; // 0x30
	[SerializeField] // RVA: 0xCB8F2C Offset: 0xCB8F2C VA: 0xCB8F2C
	private UISprite LimitCounterSp; // 0x38
	[SerializeField] // RVA: 0xCB8F3C Offset: 0xCB8F3C VA: 0xCB8F3C
	private UILabel NextCounterLabel; // 0x40
	[SerializeField] // RVA: 0xCB8F4C Offset: 0xCB8F4C VA: 0xCB8F4C
	private UILabel LimitCounterLabel; // 0x48
	[SerializeField] // RVA: 0xCB8F5C Offset: 0xCB8F5C VA: 0xCB8F5C
	private UISprite[] TotalPointNumberSp; // 0x50
	[SerializeField] // RVA: 0xCB8F6C Offset: 0xCB8F6C VA: 0xCB8F6C
	private UISprite[] CommaSp; // 0x58
	[SerializeField] // RVA: 0xCB8F7C Offset: 0xCB8F7C VA: 0xCB8F7C
	private GameObject TotalCounterParent; // 0x60
	[SerializeField] // RVA: 0xCB8F8C Offset: 0xCB8F8C VA: 0xCB8F8C
	private GameObject NextCounterParent; // 0x68
	[SerializeField] // RVA: 0xCB8F9C Offset: 0xCB8F9C VA: 0xCB8F9C
	private GameObject LimitCountParent; // 0x70
	[SerializeField] // RVA: 0xCB8FAC Offset: 0xCB8FAC VA: 0xCB8FAC
	private UISprite OverlaySp; // 0x78
	[SerializeField] // RVA: 0xCB8FBC Offset: 0xCB8FBC VA: 0xCB8FBC
	private float DigitDefaultScale; // 0x80
	[SerializeField] // RVA: 0xCB8FCC Offset: 0xCB8FCC VA: 0xCB8FCC
	private float Digit10Scale; // 0x84
	[SerializeField] // RVA: 0xCB8FDC Offset: 0xCB8FDC VA: 0xCB8FDC
	private string OverlaySpName; // 0x88
	private int eventId; // 0x90
	private long totalPoint; // 0x98
	[CompilerGeneratedAttribute] // RVA: 0xCB8FEC Offset: 0xCB8FEC VA: 0xCB8FEC
	private static Func<EventMissionConditionEntity, long> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1B71E60 Offset: 0x1B71E60 VA: 0x1B71E60
	public void .ctor() { }

	// RVA: 0x1B71EC4 Offset: 0x1B71EC4 VA: 0x1B71EC4
	private void Start() { }

	// RVA: 0x1B72440 Offset: 0x1B72440 VA: 0x1B72440 Slot: 5
	public override void Setup(EventUiValueEntity[] entity) { }

	// RVA: 0x1B72444 Offset: 0x1B72444 VA: 0x1B72444 Slot: 11
	protected override void SetEventId(object val) { }

	// RVA: 0x1B72154 Offset: 0x1B72154 VA: 0x1B72154
	private void UpdateDisp() { }

	// RVA: 0x1B72914 Offset: 0x1B72914 VA: 0x1B72914
	private void SetPointNumSprite(long number, UISprite[] sprites) { }

	// RVA: 0x1B72E88 Offset: 0x1B72E88 VA: 0x1B72E88
	private int GetDigit(long num) { }

	// RVA: 0x1B72EB0 Offset: 0x1B72EB0 VA: 0x1B72EB0
	private long GetDigitNumber(long number, long digit) { }

	// RVA: 0x1B72524 Offset: 0x1B72524 VA: 0x1B72524
	private long GetNextPoint() { }

	// RVA: 0x1B72878 Offset: 0x1B72878 VA: 0x1B72878
	private long GetLimitPoint() { }

	[CompilerGeneratedAttribute] // RVA: 0xD354C8 Offset: 0xD354C8 VA: 0xD354C8
	// RVA: 0x1B73134 Offset: 0x1B73134 VA: 0x1B73134
	private static long <GetNextPoint>m__0(EventMissionConditionEntity entity) { }
}

// Namespace: 
private class EventInfoQPPointCounter.NextDisplayData // TypeDefIndex: 5495
{
	// Fields
	public int eventId; // 0x10
	public int hiddenMissionId; // 0x14
	public int redisplayQuestId; // 0x18

	// Methods

	// RVA: 0x1B7315C Offset: 0x1B7315C VA: 0x1B7315C
	public void .ctor() { }
}

// Namespace: 
public class EventInfoRaidTimeComponent : EventInfoUIBase // TypeDefIndex: 5496
{
	// Fields
	[SerializeField] // RVA: 0xCB8FFC Offset: 0xCB8FFC VA: 0xCB8FFC
	private string bgSpriteName; // 0x28
	[SerializeField] // RVA: 0xCB900C Offset: 0xCB900C VA: 0xCB900C
	private UISprite bgSprite; // 0x30
	[SerializeField] // RVA: 0xCB901C Offset: 0xCB901C VA: 0xCB901C
	private UILabel titleText; // 0x38
	[SerializeField] // RVA: 0xCB902C Offset: 0xCB902C VA: 0xCB902C
	private UILabel timeText; // 0x40
	[SerializeField] // RVA: 0xCB903C Offset: 0xCB903C VA: 0xCB903C
	private UILabel timeOverText; // 0x48
	private EventUiEntity eventUiEntity; // 0x50
	private long reidTimeLimit; // 0x58
	private bool isUpdate; // 0x60

	// Methods

	// RVA: 0x1B73164 Offset: 0x1B73164 VA: 0x1B73164
	public void .ctor() { }

	// RVA: 0x1B73168 Offset: 0x1B73168 VA: 0x1B73168
	private void Update() { }

	// RVA: 0x1B735BC Offset: 0x1B735BC VA: 0x1B735BC Slot: 4
	public override void Initialization(EventUiEntity entity) { }

	// RVA: 0x1B7316C Offset: 0x1B7316C VA: 0x1B7316C
	private void UpdateDisp() { }

	// RVA: 0x1B7387C Offset: 0x1B7387C VA: 0x1B7387C
	private string GetRestTime(long at) { }

	// RVA: 0x1B73A80 Offset: 0x1B73A80 VA: 0x1B73A80
	private string GetRestTimeColorStr(int restHours) { }

	// RVA: 0x1B737F0 Offset: 0x1B737F0 VA: 0x1B737F0
	private bool OnMoveRaidBoss(int eventId) { }
}

// Namespace: 
public class EventInfoSubmarineItemCounterComponent : MonoBehaviour // TypeDefIndex: 5497
{
	// Fields
	private static readonly float ANIMATION_TIME; // 0x0
	[SerializeField] // RVA: 0xCB904C Offset: 0xCB904C VA: 0xCB904C
	private UISprite iconSprite; // 0x18
	[SerializeField] // RVA: 0xCB905C Offset: 0xCB905C VA: 0xCB905C
	private UILabel nameLabel; // 0x20
	[SerializeField] // RVA: 0xCB906C Offset: 0xCB906C VA: 0xCB906C
	private UICounterLabel countLabel; // 0x28
	private EventUiValueEntity eventUiValueEntity; // 0x30

	// Properties
	public bool IsAnimFinished { get; }

	// Methods

	// RVA: 0x1B73AEC Offset: 0x1B73AEC VA: 0x1B73AEC
	public void .ctor() { }

	// RVA: 0x1B73AF4 Offset: 0x1B73AF4 VA: 0x1B73AF4
	public bool get_IsAnimFinished() { }

	// RVA: 0x1B73B24 Offset: 0x1B73B24 VA: 0x1B73B24
	public void Setup(EventUiValueEntity eventUiValueEntity, EventInfoSubmarineItemCounterCotrol.ItemData itemData) { }

	// RVA: 0x1B73EF4 Offset: 0x1B73EF4 VA: 0x1B73EF4
	public void PlayAnimation() { }

	// RVA: 0x1B7402C Offset: 0x1B7402C VA: 0x1B7402C
	public void AddCount(int count) { }

	// RVA: 0x1B74064 Offset: 0x1B74064 VA: 0x1B74064
	public void UpdateCount() { }

	// RVA: 0x1B73DA4 Offset: 0x1B73DA4 VA: 0x1B73DA4
	private UserItemEntity GetUserItemEntity(int itemId) { }

	// RVA: 0x1B74148 Offset: 0x1B74148 VA: 0x1B74148
	private static void .cctor() { }
}

// Namespace: 
public class EventInfoSubmarineItemCounterCotrol : EventInfoUIBase // TypeDefIndex: 5498
{
	// Fields
	[SerializeField] // RVA: 0xCB907C Offset: 0xCB907C VA: 0xCB907C
	private GameObject rootObject; // 0x28
	[SerializeField] // RVA: 0xCB908C Offset: 0xCB908C VA: 0xCB908C
	private GameObject baseItemPrefab; // 0x30
	[SerializeField] // RVA: 0xCB909C Offset: 0xCB909C VA: 0xCB909C
	private UILabel titleLabel; // 0x38
	[SerializeField] // RVA: 0xCB90AC Offset: 0xCB90AC VA: 0xCB90AC
	private UISprite bgSprite; // 0x40
	[SerializeField] // RVA: 0xCB90BC Offset: 0xCB90BC VA: 0xCB90BC
	private List<EventInfoSubmarineItemCounterCotrol.ItemData> itemDataList; // 0x48
	private List<EventInfoSubmarineItemCounterComponent> itemCompnentList; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xCB90CC Offset: 0xCB90CC VA: 0xCB90CC
	private static Func<EventUiValueEntity, int> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1B7419C Offset: 0x1B7419C VA: 0x1B7419C
	public void .ctor() { }

	// RVA: 0x1B741A0 Offset: 0x1B741A0 VA: 0x1B741A0 Slot: 4
	public override void Initialization(EventUiEntity entity) { }

	// RVA: 0x1B742D8 Offset: 0x1B742D8 VA: 0x1B742D8 Slot: 5
	public override void Setup(EventUiValueEntity[] entitys) { }

	// RVA: 0x1B7486C Offset: 0x1B7486C VA: 0x1B7486C Slot: 7
	public override void PlayAnim(EventInfoUIBase.PlayType type, Action callback) { }

	[DebuggerHiddenAttribute] // RVA: 0xD354D8 Offset: 0xD354D8 VA: 0xD354D8
	// RVA: 0x1B7489C Offset: 0x1B7489C VA: 0x1B7489C
	private IEnumerator PlayCountAnim(Action callback) { }

	// RVA: 0x1B74938 Offset: 0x1B74938 VA: 0x1B74938
	public void UpdateAllCount() { }

	// RVA: 0x1B7461C Offset: 0x1B7461C VA: 0x1B7461C
	private GameObject CreateItemObject(EventUiValueEntity ent) { }

	// RVA: 0x1B7479C Offset: 0x1B7479C VA: 0x1B7479C
	private EventInfoSubmarineItemCounterCotrol.ItemData GetItemData(int itemId) { }

	[CompilerGeneratedAttribute] // RVA: 0xD354E8 Offset: 0xD354E8 VA: 0xD354E8
	// RVA: 0x1B74954 Offset: 0x1B74954 VA: 0x1B74954
	private static int <Setup>m__0(EventUiValueEntity ent) { }
}

// Namespace: 
[Serializable]
public class EventInfoSubmarineItemCounterCotrol.ItemData // TypeDefIndex: 5499
{
	// Fields
	public int ItemId; // 0x10
	public Vector2 Position; // 0x14
	public Vector2 namePosition; // 0x1C
	public Vector2 CountPosition; // 0x24

	// Methods

	// RVA: 0x1B74DA8 Offset: 0x1B74DA8 VA: 0x1B74DA8
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCADF40 Offset: 0xCADF40 VA: 0xCADF40
private sealed class EventInfoSubmarineItemCounterCotrol.<PlayCountAnim>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 5500
{
	// Fields
	internal List.Enumerator<EventInfoSubmarineItemCounterComponent> $locvar0; // 0x10
	internal List.Enumerator<EventInfoSubmarineItemCounterComponent> $locvar1; // 0x28
	internal EventInfoSubmarineItemCounterComponent <item>__1; // 0x40
	internal Action callback; // 0x48
	internal EventInfoSubmarineItemCounterCotrol $this; // 0x50
	internal object $current; // 0x58
	internal bool $disposing; // 0x60
	internal int $PC; // 0x64

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD452C4 Offset: 0xD452C4 VA: 0xD452C4
	// RVA: 0x1B74930 Offset: 0x1B74930 VA: 0x1B74930
	public void .ctor() { }

	// RVA: 0x1B749B8 Offset: 0x1B749B8 VA: 0x1B749B8 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD452D4 Offset: 0xD452D4 VA: 0xD452D4
	// RVA: 0x1B74CB8 Offset: 0x1B74CB8 VA: 0x1B74CB8 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD452E4 Offset: 0xD452E4 VA: 0xD452E4
	// RVA: 0x1B74CC0 Offset: 0x1B74CC0 VA: 0x1B74CC0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD452F4 Offset: 0xD452F4 VA: 0xD452F4
	// RVA: 0x1B74CC8 Offset: 0x1B74CC8 VA: 0x1B74CC8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45304 Offset: 0xD45304 VA: 0xD45304
	// RVA: 0x1B74D40 Offset: 0x1B74D40 VA: 0x1B74D40 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCADF50 Offset: 0xCADF50 VA: 0xCADF50
private sealed class EventInfoSubmarineItemCounterCotrol.<GetItemData>c__AnonStorey1 // TypeDefIndex: 5501
{
	// Fields
	internal int itemId; // 0x10

	// Methods

	// RVA: 0x1B7494C Offset: 0x1B7494C VA: 0x1B7494C
	public void .ctor() { }

	// RVA: 0x1B7497C Offset: 0x1B7497C VA: 0x1B7497C
	internal bool <>m__0(EventInfoSubmarineItemCounterCotrol.ItemData x) { }
}

// Namespace: 
public class EventInfoUIBase : MonoBehaviour // TypeDefIndex: 5502
{
	// Fields
	[SerializeField] // RVA: 0xCB90DC Offset: 0xCB90DC VA: 0xCB90DC
	private List<EventInfoUIBase.Data> datas; // 0x18
	[SerializeField] // RVA: 0xCB90EC Offset: 0xCB90EC VA: 0xCB90EC
	protected EventInfoUIBase.PlayType playType; // 0x20
	[SerializeField] // RVA: 0xCB90FC Offset: 0xCB90FC VA: 0xCB90FC
	protected EventInfoUIBase.AnimType animType; // 0x24

	// Methods

	// RVA: 0x1B7116C Offset: 0x1B7116C VA: 0x1B7116C
	public void .ctor() { }

	// RVA: 0x1B74DB8 Offset: 0x1B74DB8 VA: 0x1B74DB8 Slot: 4
	public virtual void Initialization(EventUiEntity entity) { }

	// RVA: 0x1B74DBC Offset: 0x1B74DBC VA: 0x1B74DBC Slot: 5
	public virtual void Setup(EventUiValueEntity[] entitys) { }

	// RVA: 0x1B74DC0 Offset: 0x1B74DC0 VA: 0x1B74DC0 Slot: 6
	public virtual void SetValue(EventInfoUIBase.ValueType valType, object val, EventInfoUIBase.SetType setType) { }

	// RVA: 0x1B74F14 Offset: 0x1B74F14 VA: 0x1B74F14 Slot: 7
	public virtual void PlayAnim(EventInfoUIBase.PlayType type, Action callback) { }

	// RVA: 0x1B74F20 Offset: 0x1B74F20 VA: 0x1B74F20 Slot: 8
	public virtual void ReleaseAsset() { }

	// RVA: 0x1B74F24 Offset: 0x1B74F24 VA: 0x1B74F24 Slot: 9
	public virtual void Redisplay() { }

	// RVA: 0x1B74F28 Offset: 0x1B74F28 VA: 0x1B74F28 Slot: 10
	public virtual void SwitchSpotState(bool isOpen) { }

	// RVA: 0x1B74F2C Offset: 0x1B74F2C VA: 0x1B74F2C Slot: 11
	protected virtual void SetEventId(object val) { }

	// RVA: 0x1B74F30 Offset: 0x1B74F30 VA: 0x1B74F30 Slot: 12
	protected virtual void SetConquestInfos(object obj) { }

	// RVA: 0x1B74F34 Offset: 0x1B74F34 VA: 0x1B74F34 Slot: 13
	protected virtual void SetTotalBoxGacha(object obj) { }
}

// Namespace: 
[Serializable]
private class EventInfoUIBase.Data // TypeDefIndex: 5503
{
	// Fields
	public EventInfoUIBase.SetType setType; // 0x10
	public EventInfoUIBase.ValueType valType; // 0x14

	// Methods

	// RVA: 0x1B74DB0 Offset: 0x1B74DB0 VA: 0x1B74DB0
	public void .ctor() { }
}

// Namespace: 
public enum EventInfoUIBase.ValueType // TypeDefIndex: 5504
{
	// Fields
	public int value__; // 0x0
	public const EventInfoUIBase.ValueType Nothing = 0;
	public const EventInfoUIBase.ValueType EventId = 1;
	public const EventInfoUIBase.ValueType ConquestInfos = 2;
	public const EventInfoUIBase.ValueType TotalBoxGacha = 3;
}

// Namespace: 
public enum EventInfoUIBase.SetType // TypeDefIndex: 5505
{
	// Fields
	public int value__; // 0x0
	public const EventInfoUIBase.SetType Always = 0;
	public const EventInfoUIBase.SetType Init = 1;
	public const EventInfoUIBase.SetType BoxGachaReset = 2;
}

// Namespace: 
public enum EventInfoUIBase.PlayType // TypeDefIndex: 5506
{
	// Fields
	public int value__; // 0x0
	public const EventInfoUIBase.PlayType None = 0;
	public const EventInfoUIBase.PlayType OnEventActionPlay = 1;
}

// Namespace: 
public enum EventInfoUIBase.AnimType // TypeDefIndex: 5507
{
	// Fields
	public int value__; // 0x0
	public const EventInfoUIBase.AnimType None = 0;
	public const EventInfoUIBase.AnimType CountUp = 1;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCADF60 Offset: 0xCADF60 VA: 0xCADF60
private sealed class EventInfoUIBase.<SetValue>c__AnonStorey0 // TypeDefIndex: 5508
{
	// Fields
	internal EventInfoUIBase.SetType setType; // 0x10
	internal EventInfoUIBase.ValueType valType; // 0x14

	// Methods

	// RVA: 0x1B74F0C Offset: 0x1B74F0C VA: 0x1B74F0C
	public void .ctor() { }

	// RVA: 0x1B74F38 Offset: 0x1B74F38 VA: 0x1B74F38
	internal bool <>m__0(EventInfoUIBase.Data data) { }
}

// Namespace: 
public class EventInfoUIProgressControl : EventInfoUIBase // TypeDefIndex: 5509
{
	// Fields
	private static readonly string SAVEKEY_EVENT_PROGRESS_VALUE; // 0x0
	protected EventUiEntity eventUiEntity; // 0x28
	protected List<EventProgressValueEntity> eventProgressValueEntityList; // 0x30
	protected EventProgressValueEntity currentEventProgressValueEntity; // 0x38
	protected EventProgressValueEntity nextEventProgressValueEntity; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xCB910C Offset: 0xCB910C VA: 0xCB910C
	private static Comparison<EventProgressValueEntity> <>f__am$cache0; // 0x8

	// Methods

	// RVA: 0x1B74F90 Offset: 0x1B74F90 VA: 0x1B74F90
	public void .ctor() { }

	// RVA: 0x1B74F94 Offset: 0x1B74F94 VA: 0x1B74F94 Slot: 4
	public override void Initialization(EventUiEntity entity) { }

	// RVA: 0x1B74FCC Offset: 0x1B74FCC VA: 0x1B74FCC
	public void InitEventProgressParams(int eventId) { }

	// RVA: 0x1B752B4 Offset: 0x1B752B4 VA: 0x1B752B4 Slot: 5
	public override void Setup(EventUiValueEntity[] entitys) { }

	// RVA: 0x1B752B8 Offset: 0x1B752B8 VA: 0x1B752B8 Slot: 9
	public override void Redisplay() { }

	// RVA: 0x1B752CC Offset: 0x1B752CC VA: 0x1B752CC
	protected EventProgressValueEntity GetEntityByProgresValue(int progresValue) { }

	// RVA: 0x1B753A8 Offset: 0x1B753A8 VA: 0x1B753A8
	public static bool IsDispEventProgress(int eventId) { }

	// RVA: 0x1B75440 Offset: 0x1B75440 VA: 0x1B75440
	public string GetEventProgressValueSaveKey() { }

	// RVA: 0x1B754B8 Offset: 0x1B754B8 VA: 0x1B754B8
	public static string GetEventProgressValueSaveKey(int eventId) { }

	// RVA: 0x1B7557C Offset: 0x1B7557C VA: 0x1B7557C
	public bool CheckEventProgressValueSaveData() { }

	// RVA: 0x1B75594 Offset: 0x1B75594 VA: 0x1B75594
	public int GetEventProgressValueSaveData(int defaultValue = 0) { }

	// RVA: 0x1B755BC Offset: 0x1B755BC VA: 0x1B755BC
	public static int GetEventProgressValueSaveData(int eventId, int defaultValue = 0) { }

	// RVA: 0x1B6D070 Offset: 0x1B6D070 VA: 0x1B6D070
	public void SaveEventProgressValueSaveData(int value) { }

	// RVA: 0x1B75638 Offset: 0x1B75638 VA: 0x1B75638
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD354F8 Offset: 0xD354F8 VA: 0xD354F8
	// RVA: 0x1B75694 Offset: 0x1B75694 VA: 0x1B75694
	private static int <InitEventProgressParams>m__0(EventProgressValueEntity a, EventProgressValueEntity b) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCADF70 Offset: 0xCADF70 VA: 0xCADF70
private sealed class EventInfoUIProgressControl.<GetEntityByProgresValue>c__AnonStorey0 // TypeDefIndex: 5510
{
	// Fields
	internal int progresValue; // 0x10

	// Methods

	// RVA: 0x1B753A0 Offset: 0x1B753A0 VA: 0x1B753A0
	public void .ctor() { }

	// RVA: 0x1B756D8 Offset: 0x1B756D8 VA: 0x1B756D8
	internal bool <>m__0(EventProgressValueEntity n) { }
}

// Namespace: 
public class EventInfoUISpriteControl : EventInfoUIBase // TypeDefIndex: 5511
{
	// Fields
	[SerializeField] // RVA: 0xCB911C Offset: 0xCB911C VA: 0xCB911C
	private UISprite mainSprite; // 0x28

	// Methods

	// RVA: 0x1B75714 Offset: 0x1B75714 VA: 0x1B75714
	public void .ctor() { }

	// RVA: 0x1B75718 Offset: 0x1B75718 VA: 0x1B75718 Slot: 4
	public override void Initialization(EventUiEntity entity) { }
}

// Namespace: 
public class EventInfoUserEventPointControl : EventInfoUIBase // TypeDefIndex: 5512
{
	// Fields
	[SerializeField] // RVA: 0xCB912C Offset: 0xCB912C VA: 0xCB912C
	private UILabel titleLabel; // 0x28
	[SerializeField] // RVA: 0xCB913C Offset: 0xCB913C VA: 0xCB913C
	private UILabel pointLabel; // 0x30
	[SerializeField] // RVA: 0xCB914C Offset: 0xCB914C VA: 0xCB914C
	private UISprite bgSprite; // 0x38
	[SerializeField] // RVA: 0xCB915C Offset: 0xCB915C VA: 0xCB915C
	private string bgSpriteName; // 0x40
	[SerializeField] // RVA: 0xCB916C Offset: 0xCB916C VA: 0xCB916C
	private int pointLabelWidth; // 0x48
	private UserEventPointMaster userEventPointMaster; // 0x50
	private EventUiEntity eventUiEntity; // 0x58
	private EventUiValueEntity[] eventUiValueEntityList; // 0x60

	// Methods

	// RVA: 0x1B757D8 Offset: 0x1B757D8 VA: 0x1B757D8
	public void .ctor() { }

	// RVA: 0x1B757DC Offset: 0x1B757DC VA: 0x1B757DC
	private void Awake() { }

	// RVA: 0x1B75850 Offset: 0x1B75850 VA: 0x1B75850 Slot: 4
	public override void Initialization(EventUiEntity entity) { }

	// RVA: 0x1B75858 Offset: 0x1B75858 VA: 0x1B75858 Slot: 5
	public override void Setup(EventUiValueEntity[] entitys) { }

	// RVA: 0x1B759BC Offset: 0x1B759BC VA: 0x1B759BC Slot: 9
	public override void Redisplay() { }

	// RVA: 0x1B75AA8 Offset: 0x1B75AA8 VA: 0x1B75AA8
	private long GetUserEventPoint(int eventId, int groupId) { }

	// RVA: 0x1B75B50 Offset: 0x1B75B50 VA: 0x1B75B50
	private void SetPointLabel(long point) { }

	// RVA: 0x1B758A4 Offset: 0x1B758A4 VA: 0x1B758A4
	private void SetBgSprite(string spriteName) { }
}

// Namespace: 
public class EventInfoUserMultiEventPointControl : EventInfoUIBase // TypeDefIndex: 5513
{
	// Fields
	[SerializeField] // RVA: 0xCB917C Offset: 0xCB917C VA: 0xCB917C
	private UISprite titleSprite; // 0x28
	[SerializeField] // RVA: 0xCB918C Offset: 0xCB918C VA: 0xCB918C
	private UILabel[] pointLabels; // 0x30
	[SerializeField] // RVA: 0xCB919C Offset: 0xCB919C VA: 0xCB919C
	private UISprite[] bgSprites; // 0x38
	[SerializeField] // RVA: 0xCB91AC Offset: 0xCB91AC VA: 0xCB91AC
	private string titleSpriteName; // 0x40
	[SerializeField] // RVA: 0xCB91BC Offset: 0xCB91BC VA: 0xCB91BC
	private string[] bgSpriteNames; // 0x48
	private UserEventPointMaster userEventPointMaster; // 0x50
	private EventUiEntity eventUiEntity; // 0x58
	private EventUiValueEntity[] eventUiValueEntityList; // 0x60
	[CompilerGeneratedAttribute] // RVA: 0xCB91CC Offset: 0xCB91CC VA: 0xCB91CC
	private static Func<EventUiValueEntity, bool> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCB91DC Offset: 0xCB91DC VA: 0xCB91DC
	private static Func<EventUiValueEntity, int> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x1B75CEC Offset: 0x1B75CEC VA: 0x1B75CEC
	public void .ctor() { }

	// RVA: 0x1B75CF0 Offset: 0x1B75CF0 VA: 0x1B75CF0
	private void Awake() { }

	// RVA: 0x1B75D64 Offset: 0x1B75D64 VA: 0x1B75D64 Slot: 4
	public override void Initialization(EventUiEntity entity) { }

	// RVA: 0x1B75D6C Offset: 0x1B75D6C VA: 0x1B75D6C Slot: 5
	public override void Setup(EventUiValueEntity[] entitys) { }

	// RVA: 0x1B76144 Offset: 0x1B76144 VA: 0x1B76144 Slot: 9
	public override void Redisplay() { }

	// RVA: 0x1B76278 Offset: 0x1B76278 VA: 0x1B76278
	private long GetUserEventPoint(int eventId, int groupId) { }

	// RVA: 0x1B76320 Offset: 0x1B76320 VA: 0x1B76320
	private void SetPointLabel(int idx, long point) { }

	// RVA: 0x1B75EEC Offset: 0x1B75EEC VA: 0x1B75EEC
	private void SetupSprite() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35508 Offset: 0xD35508 VA: 0xD35508
	// RVA: 0x1B764D0 Offset: 0x1B764D0 VA: 0x1B764D0
	private static bool <Setup>m__0(EventUiValueEntity ent) { }

	[CompilerGeneratedAttribute] // RVA: 0xD35518 Offset: 0xD35518 VA: 0xD35518
	// RVA: 0x1B764DC Offset: 0x1B764DC VA: 0x1B764DC
	private static int <Setup>m__1(EventUiValueEntity ent) { }
}

// Namespace: 
public class EventItemBoardComponent : MonoBehaviour // TypeDefIndex: 5514
{
	// Fields
	private const int SPEND_ITEM_NUM = 1;
	private const float CONFIRM_DIALOG_POS_Y = 12;
	[SerializeField] // RVA: 0xCB91EC Offset: 0xCB91EC VA: 0xCB91EC
	private ItemIconComponent itemIconInfo; // 0x18
	[SerializeField] // RVA: 0xCB91FC Offset: 0xCB91FC VA: 0xCB91FC
	private GameObject cmdSpellBg; // 0x20
	[SerializeField] // RVA: 0xCB920C Offset: 0xCB920C VA: 0xCB920C
	private CommandSpellIconComponent cmdSpellIcon; // 0x28
	[SerializeField] // RVA: 0xCB921C Offset: 0xCB921C VA: 0xCB921C
	private UILabel itemNameLb; // 0x30
	[SerializeField] // RVA: 0xCB922C Offset: 0xCB922C VA: 0xCB922C
	private UILabel itemDetailLb; // 0x38
	[SerializeField] // RVA: 0xCB923C Offset: 0xCB923C VA: 0xCB923C
	private UILabel currentInfoLb; // 0x40
	[SerializeField] // RVA: 0xCB924C Offset: 0xCB924C VA: 0xCB924C
	private UILabel currentNumLb; // 0x48
	[SerializeField] // RVA: 0xCB925C Offset: 0xCB925C VA: 0xCB925C
	private UILabel spendInfoLb; // 0x50
	[SerializeField] // RVA: 0xCB926C Offset: 0xCB926C VA: 0xCB926C
	private UILabel spendNumLb; // 0x58
	[SerializeField] // RVA: 0xCB927C Offset: 0xCB927C VA: 0xCB927C
	private UISprite bgImg; // 0x60
	[SerializeField] // RVA: 0xCB928C Offset: 0xCB928C VA: 0xCB928C
	private GameObject maskImg; // 0x68
	private bool isEnableSelect; // 0x70
	private int spendItemNum; // 0x74
	private ItemEntity itemEntity; // 0x78
	private EventItemSelectDlgComponent dialog; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xCB929C Offset: 0xCB929C VA: 0xCB929C
	[DebuggerBrowsableAttribute] // RVA: 0xCB929C Offset: 0xCB929C VA: 0xCB929C
	private EventItemBoardComponent.CallbackFunc onCloseDialogFunc; // 0x88

	// Methods

	// RVA: 0x1B76504 Offset: 0x1B76504 VA: 0x1B76504
	public void .ctor() { }

	// RVA: 0x1B7650C Offset: 0x1B7650C VA: 0x1B7650C
	protected void add_onCloseDialogFunc(EventItemBoardComponent.CallbackFunc value) { }

	// RVA: 0x1B765F8 Offset: 0x1B765F8 VA: 0x1B765F8
	protected void remove_onCloseDialogFunc(EventItemBoardComponent.CallbackFunc value) { }

	// RVA: 0x1B766E4 Offset: 0x1B766E4 VA: 0x1B766E4
	public void SetItemBoardInfo(ItemEntity itemEntity, EventItemBoardComponent.CallbackFunc onConfirmSelectItemFunc, EventItemSelectDlgComponent dialog) { }

	// RVA: 0x1B76AD8 Offset: 0x1B76AD8 VA: 0x1B76AD8
	private void SetEnableSelectItem() { }

	// RVA: 0x1B76B18 Offset: 0x1B76B18 VA: 0x1B76B18
	public void OnClickItem() { }

	// RVA: 0x1B76D98 Offset: 0x1B76D98 VA: 0x1B76D98
	private void SpendItemDlg(bool isDecided) { }

	// RVA: 0x1B76E64 Offset: 0x1B76E64 VA: 0x1B76E64
	private void OnCloseConfirmDialog() { }
}

// Namespace: 
public sealed class EventItemBoardComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 5515
{
	// Methods

	// RVA: 0x1B77248 Offset: 0x1B77248 VA: 0x1B77248
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B76E88 Offset: 0x1B76E88 VA: 0x1B76E88 Slot: 11
	public virtual void Invoke(ItemEntity selectedItem, int spendNum) { }

	// RVA: 0x1B77258 Offset: 0x1B77258 VA: 0x1B77258 Slot: 12
	public virtual IAsyncResult BeginInvoke(ItemEntity selectedItem, int spendNum, AsyncCallback callback, object object) { }

	// RVA: 0x1B772F4 Offset: 0x1B772F4 VA: 0x1B772F4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class EventItemSelectDlgComponent : BaseDialog // TypeDefIndex: 5516
{
	// Fields
	private static readonly Vector3 TITLE_POS_DEFAULT; // 0x0
	private static readonly Vector3 TITLE_POS_NONE_DETAIL; // 0xC
	[SerializeField] // RVA: 0xCB92D8 Offset: 0xCB92D8 VA: 0xCB92D8
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xCB92E8 Offset: 0xCB92E8 VA: 0xCB92E8
	protected UILabel titleDetailLabel; // 0x60
	[SerializeField] // RVA: 0xCB92F8 Offset: 0xCB92F8 VA: 0xCB92F8
	protected GameObject itemListObj; // 0x68
	[SerializeField] // RVA: 0xCB9308 Offset: 0xCB9308 VA: 0xCB9308
	protected UIGrid itemListInfoGrid; // 0x70
	[SerializeField] // RVA: 0xCB9318 Offset: 0xCB9318 VA: 0xCB9318
	protected UIButton closeBtn; // 0x78
	private bool isClosed; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xCB9328 Offset: 0xCB9328 VA: 0xCB9328
	[DebuggerBrowsableAttribute] // RVA: 0xCB9328 Offset: 0xCB9328 VA: 0xCB9328
	private EventItemSelectDlgComponent.CallbackFunc onSelectItemFunc; // 0x88
	[CompilerGeneratedAttribute] // RVA: 0xCB9364 Offset: 0xCB9364 VA: 0xCB9364
	[DebuggerBrowsableAttribute] // RVA: 0xCB9364 Offset: 0xCB9364 VA: 0xCB9364
	private Action onCloseDialogFunc; // 0x90

	// Methods

	// RVA: 0x1B79FE0 Offset: 0x1B79FE0 VA: 0x1B79FE0
	public void .ctor() { }

	// RVA: 0x1B7A048 Offset: 0x1B7A048 VA: 0x1B7A048
	protected void add_onSelectItemFunc(EventItemSelectDlgComponent.CallbackFunc value) { }

	// RVA: 0x1B7A134 Offset: 0x1B7A134 VA: 0x1B7A134
	protected void remove_onSelectItemFunc(EventItemSelectDlgComponent.CallbackFunc value) { }

	// RVA: 0x1B7A220 Offset: 0x1B7A220 VA: 0x1B7A220
	protected void add_onCloseDialogFunc(Action value) { }

	// RVA: 0x1B7A30C Offset: 0x1B7A30C VA: 0x1B7A30C
	protected void remove_onCloseDialogFunc(Action value) { }

	// RVA: 0x1B7A3F8 Offset: 0x1B7A3F8 VA: 0x1B7A3F8
	public void Init() { }

	// RVA: 0x1B7A55C Offset: 0x1B7A55C VA: 0x1B7A55C
	public void OpenDlg(List<ItemEntity> viewItemList, string title, string detail, Action endOpenFunc, EventItemSelectDlgComponent.CallbackFunc onSelectItemFunc, Action onCloseDialogFunc, bool canMaskTouchClose = True) { }
