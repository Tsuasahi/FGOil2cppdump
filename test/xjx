	// RVA: 0x2909738 Offset: 0x2909738 VA: 0x2909738
	public void SetBasicAuthInfo(string userName, string password) { }
}

// Namespace: 
public class WebViewPluginScript // TypeDefIndex: 4247
{
	// Methods

	// RVA: 0x2909864 Offset: 0x2909864 VA: 0x2909864
	public void .ctor() { }

	// RVA: 0x290986C Offset: 0x290986C VA: 0x290986C
	public static void LaunchView(string path) { }

	// RVA: 0x29099B8 Offset: 0x29099B8 VA: 0x29099B8
	public static void LaunchStore(string targetPackage) { }

	// RVA: 0x2909AB8 Offset: 0x2909AB8 VA: 0x2909AB8
	public static void SendLine(string message) { }

	// RVA: 0x2909C04 Offset: 0x2909C04 VA: 0x2909C04
	public static void SendFaceBook(string url) { }

	// RVA: 0x2909D50 Offset: 0x2909D50 VA: 0x2909D50
	public static void SendTwitter(string message) { }

	// RVA: 0x2909E9C Offset: 0x2909E9C VA: 0x2909E9C
	public static void MessageDialog(string title, string message) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC1FD90 Offset: 0xC1FD90 VA: 0xC1FD90
[RequireComponent] // RVA: 0xC1FD90 Offset: 0xC1FD90 VA: 0xC1FD90
[AddComponentMenu] // RVA: 0xC1FD90 Offset: 0xC1FD90 VA: 0xC1FD90
[Serializable]
public class Bloom : PostEffectsBase // TypeDefIndex: 4248
{
	// Fields
	public Bloom.TweakMode tweakMode; // 0x1C
	public Bloom.BloomScreenBlendMode screenBlendMode; // 0x20
	public Bloom.HDRBloomMode hdr; // 0x24
	private bool doHdr; // 0x28
	public float sepBlurSpread; // 0x2C
	public Bloom.BloomQuality quality; // 0x30
	public float bloomIntensity; // 0x34
	public float bloomThreshhold; // 0x38
	public Color bloomThreshholdColor; // 0x3C
	public int bloomBlurIterations; // 0x4C
	public int hollywoodFlareBlurIterations; // 0x50
	public float flareRotation; // 0x54
	public Bloom.LensFlareStyle lensflareMode; // 0x58
	public float hollyStretchWidth; // 0x5C
	public float lensflareIntensity; // 0x60
	public float lensflareThreshhold; // 0x64
	public float lensFlareSaturation; // 0x68
	public Color flareColorA; // 0x6C
	public Color flareColorB; // 0x7C
	public Color flareColorC; // 0x8C
	public Color flareColorD; // 0x9C
	public float blurWidth; // 0xAC
	public Texture2D lensFlareVignetteMask; // 0xB0
	public Shader lensFlareShader; // 0xB8
	private Material lensFlareMaterial; // 0xC0
	public Shader screenBlendShader; // 0xC8
	private Material screenBlend; // 0xD0
	public Shader blurAndFlaresShader; // 0xD8
	private Material blurAndFlaresMaterial; // 0xE0
	public Shader brightPassFilterShader; // 0xE8
	private Material brightPassFilterMaterial; // 0xF0

	// Methods

	// RVA: 0x24608F4 Offset: 0x24608F4 VA: 0x24608F4
	public void .ctor() { }

	// RVA: 0x2460A78 Offset: 0x2460A78 VA: 0x2460A78 Slot: 8
	public override bool CheckResources() { }

	// RVA: 0x2460B30 Offset: 0x2460B30 VA: 0x2460B30 Slot: 17
	public virtual void OnRenderImage(RenderTexture source, RenderTexture destination) { }

	// RVA: 0x2462160 Offset: 0x2462160 VA: 0x2462160
	private void AddTo(float intensity_, RenderTexture from, RenderTexture to) { }

	// RVA: 0x2461EB4 Offset: 0x2461EB4 VA: 0x2461EB4
	private void BlendFlares(RenderTexture from, RenderTexture to) { }

	// RVA: 0x2461BA4 Offset: 0x2461BA4 VA: 0x2461BA4
	private void BrightFilter(float thresh, RenderTexture from, RenderTexture to) { }

	// RVA: 0x2461A9C Offset: 0x2461A9C VA: 0x2461A9C
	private void BrightFilter(Color threshColor, RenderTexture from, RenderTexture to) { }

	// RVA: 0x2461C94 Offset: 0x2461C94 VA: 0x2461C94
	private void Vignette(float amount, RenderTexture from, RenderTexture to) { }
}

// Namespace: 
public enum Bloom.LensFlareStyle // TypeDefIndex: 4249
{
	// Fields
	public int value__; // 0x0
	public const Bloom.LensFlareStyle Ghosting = 0;
	public const Bloom.LensFlareStyle Anamorphic = 1;
	public const Bloom.LensFlareStyle Combined = 2;
}

// Namespace: 
public enum Bloom.TweakMode // TypeDefIndex: 4250
{
	// Fields
	public int value__; // 0x0
	public const Bloom.TweakMode Basic = 0;
	public const Bloom.TweakMode Complex = 1;
}

// Namespace: 
public enum Bloom.HDRBloomMode // TypeDefIndex: 4251
{
	// Fields
	public int value__; // 0x0
	public const Bloom.HDRBloomMode Auto = 0;
	public const Bloom.HDRBloomMode On = 1;
	public const Bloom.HDRBloomMode Off = 2;
}

// Namespace: 
public enum Bloom.BloomScreenBlendMode // TypeDefIndex: 4252
{
	// Fields
	public int value__; // 0x0
	public const Bloom.BloomScreenBlendMode Screen = 0;
	public const Bloom.BloomScreenBlendMode Add = 1;
}

// Namespace: 
public enum Bloom.BloomQuality // TypeDefIndex: 4253
{
	// Fields
	public int value__; // 0x0
	public const Bloom.BloomQuality Cheap = 0;
	public const Bloom.BloomQuality High = 1;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC1FE28 Offset: 0xC1FE28 VA: 0xC1FE28
[AddComponentMenu] // RVA: 0xC1FE28 Offset: 0xC1FE28 VA: 0xC1FE28
public class BlurEffect : MonoBehaviour // TypeDefIndex: 4254
{
	// Fields
	public int iterations; // 0x18
	public float blurSpread; // 0x1C
	public Shader blurShader; // 0x20
	private static Material m_Material; // 0x0

	// Properties
	protected Material material { get; }

	// Methods

	// RVA: 0x2462238 Offset: 0x2462238 VA: 0x2462238
	public void .ctor() { }

	// RVA: 0x2462250 Offset: 0x2462250 VA: 0x2462250
	protected Material get_material() { }

	// RVA: 0x2462390 Offset: 0x2462390 VA: 0x2462390
	protected void OnDisable() { }

	// RVA: 0x246248C Offset: 0x246248C VA: 0x246248C
	protected void Start() { }

	// RVA: 0x2462560 Offset: 0x2462560 VA: 0x2462560
	public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration) { }

	// RVA: 0x2462738 Offset: 0x2462738 VA: 0x2462738
	private void DownSample4x(RenderTexture source, RenderTexture dest) { }

	// RVA: 0x24628E4 Offset: 0x24628E4 VA: 0x24628E4
	private void OnRenderImage(RenderTexture source, RenderTexture destination) { }

	// RVA: 0x2462A60 Offset: 0x2462A60 VA: 0x2462A60
	private static void .cctor() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC1FE74 Offset: 0xC1FE74 VA: 0xC1FE74
[AddComponentMenu] // RVA: 0xC1FE74 Offset: 0xC1FE74 VA: 0xC1FE74
public class ColorCorrectionEffect : ImageEffectBase // TypeDefIndex: 4255
{
	// Fields
	public Texture textureRamp; // 0x28

	// Methods

	// RVA: 0x2462B38 Offset: 0x2462B38 VA: 0x2462B38
	public void .ctor() { }

	// RVA: 0x2462B40 Offset: 0x2462B40 VA: 0x2462B40
	private void OnRenderImage(RenderTexture source, RenderTexture destination) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC1FEC0 Offset: 0xC1FEC0 VA: 0xC1FEC0
[AddComponentMenu] // RVA: 0xC1FEC0 Offset: 0xC1FEC0 VA: 0xC1FEC0
public class ContrastStretchEffect : MonoBehaviour // TypeDefIndex: 4256
{
	// Fields
	public float adaptationSpeed; // 0x18
	public float limitMinimum; // 0x1C
	public float limitMaximum; // 0x20
	private RenderTexture[] adaptRenderTex; // 0x28
	private int curAdaptIndex; // 0x30
	public Shader shaderLum; // 0x38
	private Material m_materialLum; // 0x40
	public Shader shaderReduce; // 0x48
	private Material m_materialReduce; // 0x50
	public Shader shaderAdapt; // 0x58
	private Material m_materialAdapt; // 0x60
	public Shader shaderApply; // 0x68
	private Material m_materialApply; // 0x70

	// Properties
	protected Material materialLum { get; }
	protected Material materialReduce { get; }
	protected Material materialAdapt { get; }
	protected Material materialApply { get; }

	// Methods

	// RVA: 0x24631C8 Offset: 0x24631C8 VA: 0x24631C8
	public void .ctor() { }

	// RVA: 0x2463248 Offset: 0x2463248 VA: 0x2463248
	protected Material get_materialLum() { }

	// RVA: 0x2463310 Offset: 0x2463310 VA: 0x2463310
	protected Material get_materialReduce() { }

	// RVA: 0x24633D8 Offset: 0x24633D8 VA: 0x24633D8
	protected Material get_materialAdapt() { }

	// RVA: 0x24634A0 Offset: 0x24634A0 VA: 0x24634A0
	protected Material get_materialApply() { }

	// RVA: 0x2463568 Offset: 0x2463568 VA: 0x2463568
	private void Start() { }

	// RVA: 0x2463628 Offset: 0x2463628 VA: 0x2463628
	private void OnEnable() { }

	// RVA: 0x24637C8 Offset: 0x24637C8 VA: 0x24637C8
	private void OnDisable() { }

	// RVA: 0x2463A18 Offset: 0x2463A18 VA: 0x2463A18
	private void OnRenderImage(RenderTexture source, RenderTexture destination) { }

	// RVA: 0x2463CAC Offset: 0x2463CAC VA: 0x2463CAC
	private void CalculateAdaptation(Texture curTexture) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC1FF0C Offset: 0xC1FF0C VA: 0xC1FF0C
[RequireComponent] // RVA: 0xC1FF0C Offset: 0xC1FF0C VA: 0xC1FF0C
[AddComponentMenu] // RVA: 0xC1FF0C Offset: 0xC1FF0C VA: 0xC1FF0C
public class GlowEffect : MonoBehaviour // TypeDefIndex: 4257
{
	// Fields
	public float glowIntensity; // 0x18
	public int blurIterations; // 0x1C
	public float blurSpread; // 0x20
	public Color glowTint; // 0x24
	public Shader compositeShader; // 0x38
	private Material m_CompositeMaterial; // 0x40
	public Shader blurShader; // 0x48
	private Material m_BlurMaterial; // 0x50
	public Shader downsampleShader; // 0x58
	private Material m_DownsampleMaterial; // 0x60

	// Properties
	protected Material compositeMaterial { get; }
	protected Material blurMaterial { get; }
	protected Material downsampleMaterial { get; }

	// Methods

	// RVA: 0x1DF7E7C Offset: 0x1DF7E7C VA: 0x1DF7E7C
	public void .ctor() { }

	// RVA: 0x1DF7EFC Offset: 0x1DF7EFC VA: 0x1DF7EFC
	protected Material get_compositeMaterial() { }

	// RVA: 0x1DF7FC4 Offset: 0x1DF7FC4 VA: 0x1DF7FC4
	protected Material get_blurMaterial() { }

	// RVA: 0x1DF808C Offset: 0x1DF808C VA: 0x1DF808C
	protected Material get_downsampleMaterial() { }

	// RVA: 0x1DF8154 Offset: 0x1DF8154 VA: 0x1DF8154
	protected void OnDisable() { }

	// RVA: 0x1DF82AC Offset: 0x1DF82AC VA: 0x1DF82AC
	protected void Start() { }

	// RVA: 0x1DF841C Offset: 0x1DF841C VA: 0x1DF841C
	public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration) { }

	// RVA: 0x1DF85F4 Offset: 0x1DF85F4 VA: 0x1DF85F4
	private void DownSample4x(RenderTexture source, RenderTexture dest) { }

	// RVA: 0x1DF86DC Offset: 0x1DF86DC VA: 0x1DF86DC
	private void OnRenderImage(RenderTexture source, RenderTexture destination) { }

	// RVA: 0x1DF8954 Offset: 0x1DF8954 VA: 0x1DF8954
	public void BlitGlow(RenderTexture source, RenderTexture dest) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC1FFA4 Offset: 0xC1FFA4 VA: 0xC1FFA4
[AddComponentMenu] // RVA: 0xC1FFA4 Offset: 0xC1FFA4 VA: 0xC1FFA4
public class GrayscaleEffect : ImageEffectBase // TypeDefIndex: 4258
{
	// Fields
	public Texture textureRamp; // 0x28
	public float saturation; // 0x30

	// Methods

	// RVA: 0x1DF8A78 Offset: 0x1DF8A78 VA: 0x1DF8A78
	public void .ctor() { }

	// RVA: 0x1DF8A88 Offset: 0x1DF8A88 VA: 0x1DF8A88
	private void OnRenderImage(RenderTexture source, RenderTexture destination) { }
}

// Namespace: 
[RequireComponent] // RVA: 0xC1FFF0 Offset: 0xC1FFF0 VA: 0xC1FFF0
[AddComponentMenu] // RVA: 0xC1FFF0 Offset: 0xC1FFF0 VA: 0xC1FFF0
public class ImageEffectBase : MonoBehaviour // TypeDefIndex: 4259
{
	// Fields
	public Shader shader; // 0x18
	private Material m_Material; // 0x20

	// Properties
	protected Material material { get; }

	// Methods

	// RVA: 0x1DF8A80 Offset: 0x1DF8A80 VA: 0x1DF8A80
	public void .ctor() { }

	// RVA: 0x1DFA7A8 Offset: 0x1DFA7A8 VA: 0x1DFA7A8 Slot: 4
	protected virtual void Start() { }

	// RVA: 0x1DF8B90 Offset: 0x1DF8B90 VA: 0x1DF8B90
	protected Material get_material() { }

	// RVA: 0x1DFA860 Offset: 0x1DFA860 VA: 0x1DFA860 Slot: 5
	protected virtual void OnDisable() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC20078 Offset: 0xC20078 VA: 0xC20078
public class ImageEffects // TypeDefIndex: 4260
{
	// Methods

	// RVA: 0x1DFA910 Offset: 0x1DFA910 VA: 0x1DFA910
	public void .ctor() { }

	// RVA: 0x1DFA918 Offset: 0x1DFA918 VA: 0x1DFA918
	public static void RenderDistortion(Material material, RenderTexture source, RenderTexture destination, float angle, Vector2 center, Vector2 radius) { }

	[ObsoleteAttribute] // RVA: 0xC24670 Offset: 0xC24670 VA: 0xC24670
	// RVA: 0x1DFABA8 Offset: 0x1DFABA8 VA: 0x1DFABA8
	public static void Blit(RenderTexture source, RenderTexture dest) { }

	[ObsoleteAttribute] // RVA: 0xC246A8 Offset: 0xC246A8 VA: 0xC246A8
	// RVA: 0x1DFAC20 Offset: 0x1DFAC20 VA: 0x1DFAC20
	public static void BlitWithMaterial(Material material, RenderTexture source, RenderTexture dest) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC200B0 Offset: 0xC200B0 VA: 0xC200B0
[AddComponentMenu] // RVA: 0xC200B0 Offset: 0xC200B0 VA: 0xC200B0
[RequireComponent] // RVA: 0xC200B0 Offset: 0xC200B0 VA: 0xC200B0
public class MotionBlur : ImageEffectBase // TypeDefIndex: 4261
{
	// Fields
	public float blurAmount; // 0x28
	public bool extraBlur; // 0x2C
	private RenderTexture accumTexture; // 0x30

	// Methods

	// RVA: 0x1E001F4 Offset: 0x1E001F4 VA: 0x1E001F4
	public void .ctor() { }

	// RVA: 0x1E00208 Offset: 0x1E00208 VA: 0x1E00208 Slot: 4
	protected override void Start() { }

	// RVA: 0x1E0024C Offset: 0x1E0024C VA: 0x1E0024C Slot: 5
	protected override void OnDisable() { }

	// RVA: 0x1E002C0 Offset: 0x1E002C0 VA: 0x1E002C0
	private void OnRenderImage(RenderTexture source, RenderTexture destination) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC20148 Offset: 0xC20148 VA: 0xC20148
[RequireComponent] // RVA: 0xC20148 Offset: 0xC20148 VA: 0xC20148
[AddComponentMenu] // RVA: 0xC20148 Offset: 0xC20148 VA: 0xC20148
public class NoiseEffect : MonoBehaviour // TypeDefIndex: 4262
{
	// Fields
	public bool monochrome; // 0x18
	private bool rgbFallback; // 0x19
	public float grainIntensityMin; // 0x1C
	public float grainIntensityMax; // 0x20
	public float grainSize; // 0x24
	public float scratchIntensityMin; // 0x28
	public float scratchIntensityMax; // 0x2C
	public float scratchFPS; // 0x30
	public float scratchJitter; // 0x34
	public Texture grainTexture; // 0x38
	public Texture scratchTexture; // 0x40
	public Shader shaderRGB; // 0x48
	public Shader shaderYUV; // 0x50
	private Material m_MaterialRGB; // 0x58
	private Material m_MaterialYUV; // 0x60
	private float scratchTimeLeft; // 0x68
	private float scratchX; // 0x6C
	private float scratchY; // 0x70

	// Properties
	protected Material material { get; }

	// Methods

	// RVA: 0x1E00E18 Offset: 0x1E00E18 VA: 0x1E00E18
	public void .ctor() { }

	// RVA: 0x1E00E4C Offset: 0x1E00E4C VA: 0x1E00E4C
	protected void Start() { }

	// RVA: 0x1E00F6C Offset: 0x1E00F6C VA: 0x1E00F6C
	protected Material get_material() { }

	// RVA: 0x1E010D4 Offset: 0x1E010D4 VA: 0x1E010D4
	protected void OnDisable() { }

	// RVA: 0x1E011D8 Offset: 0x1E011D8 VA: 0x1E011D8
	private void SanitizeParameters() { }

	// RVA: 0x1E01314 Offset: 0x1E01314 VA: 0x1E01314
	private void OnRenderImage(RenderTexture source, RenderTexture destination) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC201E0 Offset: 0xC201E0 VA: 0xC201E0
[RequireComponent] // RVA: 0xC201E0 Offset: 0xC201E0 VA: 0xC201E0
[Serializable]
public class PostEffectsBase : MonoBehaviour // TypeDefIndex: 4263
{
	// Fields
	protected bool supportHDRTextures; // 0x18
	protected bool supportDX11; // 0x19
	protected bool isSupported; // 0x1A

	// Methods

	// RVA: 0x28F982C Offset: 0x28F982C VA: 0x28F982C
	public void .ctor() { }

	// RVA: 0x28F985C Offset: 0x28F985C VA: 0x28F985C Slot: 4
	public virtual Material CheckShaderAndCreateMaterial(Shader s, Material m2Create) { }

	// RVA: 0x28F9A2C Offset: 0x28F9A2C VA: 0x28F9A2C Slot: 5
	public virtual Material CreateMaterial(Shader s, Material m2Create) { }

	// RVA: 0x28F9BD4 Offset: 0x28F9BD4 VA: 0x28F9BD4 Slot: 6
	public virtual void OnEnable() { }

	// RVA: 0x28F9BE0 Offset: 0x28F9BE0 VA: 0x28F9BE0 Slot: 7
	public virtual bool CheckSupport() { }

	// RVA: 0x28F9BF0 Offset: 0x28F9BF0 VA: 0x28F9BF0 Slot: 8
	public virtual bool CheckResources() { }

	// RVA: 0x28F9BF8 Offset: 0x28F9BF8 VA: 0x28F9BF8 Slot: 9
	public virtual void Start() { }

	// RVA: 0x28F9C04 Offset: 0x28F9C04 VA: 0x28F9C04 Slot: 10
	public virtual bool CheckSupport(bool needDepth) { }

	// RVA: 0x28F9D3C Offset: 0x28F9D3C VA: 0x28F9D3C Slot: 11
	public virtual bool CheckSupport(bool needDepth, bool needHdr) { }

	// RVA: 0x28F9DA0 Offset: 0x28F9DA0 VA: 0x28F9DA0 Slot: 12
	public virtual bool Dx11Support() { }

	// RVA: 0x28F9DA8 Offset: 0x28F9DA8 VA: 0x28F9DA8 Slot: 13
	public virtual void ReportAutoDisable() { }

	// RVA: 0x28F9DAC Offset: 0x28F9DAC VA: 0x28F9DAC Slot: 14
	public virtual bool CheckShader(Shader s) { }

	// RVA: 0x28F9E00 Offset: 0x28F9E00 VA: 0x28F9E00 Slot: 15
	public virtual void NotSupported() { }

	// RVA: 0x28F9E2C Offset: 0x28F9E2C VA: 0x28F9E2C Slot: 16
	public virtual void DrawBorder(RenderTexture dest, Material material) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC20254 Offset: 0xC20254 VA: 0xC20254
[AddComponentMenu] // RVA: 0xC20254 Offset: 0xC20254 VA: 0xC20254
public class SepiaToneEffect : ImageEffectBase // TypeDefIndex: 4264
{
	// Methods

	// RVA: 0x28FBB38 Offset: 0x28FBB38 VA: 0x28FBB38
	public void .ctor() { }

	// RVA: 0x28FBB40 Offset: 0x28FBB40 VA: 0x28FBB40
	private void OnRenderImage(RenderTexture source, RenderTexture destination) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC202A0 Offset: 0xC202A0 VA: 0xC202A0
[RequireComponent] // RVA: 0xC202A0 Offset: 0xC202A0 VA: 0xC202A0
[AddComponentMenu] // RVA: 0xC202A0 Offset: 0xC202A0 VA: 0xC202A0
public class SSAOEffect : MonoBehaviour // TypeDefIndex: 4265
{
	// Fields
	public float m_Radius; // 0x18
	public SSAOEffect.SSAOSamples m_SampleCount; // 0x1C
	public float m_OcclusionIntensity; // 0x20
	public int m_Blur; // 0x24
	public int m_Downsampling; // 0x28
	public float m_OcclusionAttenuation; // 0x2C
	public float m_MinZ; // 0x30
	public Shader m_SSAOShader; // 0x38
	private Material m_SSAOMaterial; // 0x40
	public Texture2D m_RandomTexture; // 0x48
	private bool m_Supported; // 0x50

	// Methods

	// RVA: 0x28FA1C4 Offset: 0x28FA1C4 VA: 0x28FA1C4
	public void .ctor() { }

	// RVA: 0x28FA1FC Offset: 0x28FA1FC VA: 0x28FA1FC
	private static Material CreateMaterial(Shader shader) { }

	// RVA: 0x28FA2B0 Offset: 0x28FA2B0 VA: 0x28FA2B0
	private static void DestroyMaterial(Material mat) { }

	// RVA: 0x28FA34C Offset: 0x28FA34C VA: 0x28FA34C
	private void OnDisable() { }

	// RVA: 0x28FA354 Offset: 0x28FA354 VA: 0x28FA354
	private void Start() { }

	// RVA: 0x28FA514 Offset: 0x28FA514 VA: 0x28FA514
	private void OnEnable() { }

	// RVA: 0x28FA434 Offset: 0x28FA434 VA: 0x28FA434
	private void CreateMaterials() { }

	[ImageEffectOpaque] // RVA: 0xC246E0 Offset: 0xC246E0 VA: 0xC246E0
	// RVA: 0x28FA5AC Offset: 0x28FA5AC VA: 0x28FA5AC
	private void OnRenderImage(RenderTexture source, RenderTexture destination) { }
}

// Namespace: 
public enum SSAOEffect.SSAOSamples // TypeDefIndex: 4266
{
	// Fields
	public int value__; // 0x0
	public const SSAOEffect.SSAOSamples Low = 0;
	public const SSAOEffect.SSAOSamples Medium = 1;
	public const SSAOEffect.SSAOSamples High = 2;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC20338 Offset: 0xC20338 VA: 0xC20338
[AddComponentMenu] // RVA: 0xC20338 Offset: 0xC20338 VA: 0xC20338
public class TwirlEffect : ImageEffectBase // TypeDefIndex: 4267
{
	// Fields
	public Vector2 radius; // 0x28
	public float angle; // 0x30
	public Vector2 center; // 0x34

	// Methods

	// RVA: 0x29024D0 Offset: 0x29024D0 VA: 0x29024D0
	public void .ctor() { }

	// RVA: 0x290254C Offset: 0x290254C VA: 0x290254C
	private void OnRenderImage(RenderTexture source, RenderTexture destination) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC20384 Offset: 0xC20384 VA: 0xC20384
[RequireComponent] // RVA: 0xC20384 Offset: 0xC20384 VA: 0xC20384
[AddComponentMenu] // RVA: 0xC20384 Offset: 0xC20384 VA: 0xC20384
[Serializable]
public class Vignetting : PostEffectsBase // TypeDefIndex: 4268
{
	// Fields
	public Vignetting.AberrationMode mode; // 0x1C
	public float intensity; // 0x20
	public float chromaticAberration; // 0x24
	public float axialAberration; // 0x28
	public float blur; // 0x2C
	public float blurSpread; // 0x30
	public float luminanceDependency; // 0x34
	public float blurDistance; // 0x38
	public Shader vignetteShader; // 0x40
	private Material vignetteMaterial; // 0x48
	public Shader separableBlurShader; // 0x50
	private Material separableBlurMaterial; // 0x58
	public Shader chromAberrationShader; // 0x60
	private Material chromAberrationMaterial; // 0x68

	// Methods

	// RVA: 0x2906B58 Offset: 0x2906B58 VA: 0x2906B58
	public void .ctor() { }

	// RVA: 0x2906BB4 Offset: 0x2906BB4 VA: 0x2906BB4 Slot: 8
	public override bool CheckResources() { }

	// RVA: 0x2906C54 Offset: 0x2906C54 VA: 0x2906C54 Slot: 17
	public virtual void OnRenderImage(RenderTexture source, RenderTexture destination) { }
}

// Namespace: 
public enum Vignetting.AberrationMode // TypeDefIndex: 4269
{
	// Fields
	public int value__; // 0x0
	public const Vignetting.AberrationMode Simple = 0;
	public const Vignetting.AberrationMode Advanced = 1;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2041C Offset: 0xC2041C VA: 0xC2041C
[AddComponentMenu] // RVA: 0xC2041C Offset: 0xC2041C VA: 0xC2041C
public class VortexEffect : ImageEffectBase // TypeDefIndex: 4270
{
	// Fields
	public Vector2 radius; // 0x28
	public float angle; // 0x30
	public Vector2 center; // 0x34

	// Methods

	// RVA: 0x2907334 Offset: 0x2907334 VA: 0x2907334
	public void .ctor() { }

	// RVA: 0x29073B0 Offset: 0x29073B0 VA: 0x29073B0
	private void OnRenderImage(RenderTexture source, RenderTexture destination) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC204B8 Offset: 0xC204B8 VA: 0xC204B8
internal static class <PrivateImplementationDetails> // TypeDefIndex: 4271
{
	// Fields
	internal static readonly <PrivateImplementationDetails>.$ArrayType=12 $field-E429CCA3F703A39CC5954A6572FEC9086135B34E /*Metadata offset 0x784C42*/; // 0x0
	internal static readonly <PrivateImplementationDetails>.$ArrayType=16 $field-F6444A7EB9D7B3AD9C84109EC3785F7EF69B38AB /*Metadata offset 0x784C4E*/; // 0xC
	internal static readonly <PrivateImplementationDetails>.$ArrayType=32 $field-6E6A61216CF092D83DB18A984502C2FB6C541ED7 /*Metadata offset 0x784C5E*/; // 0x1C
}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType=12 // TypeDefIndex: 4272
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType=16 // TypeDefIndex: 4273
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType=32 // TypeDefIndex: 4274
{}

// Namespace: 
internal class <Module> // TypeDefIndex: 4275
{}

// Namespace: Adv.Core.Graphics
public class CustomPostProcess : MonoBehaviour // TypeDefIndex: 4276
{
	// Fields
	[SerializeField] // RVA: 0xC46EF4 Offset: 0xC46EF4 VA: 0xC46EF4
	private bool dofEnabled; // 0x18
	[SerializeField] // RVA: 0xC46F04 Offset: 0xC46F04 VA: 0xC46F04
	[RangeAttribute] // RVA: 0xC46F04 Offset: 0xC46F04 VA: 0xC46F04
	public float DofIntensity; // 0x1C
	[SerializeField] // RVA: 0xC46F44 Offset: 0xC46F44 VA: 0xC46F44
	[MinAttribute] // RVA: 0xC46F44 Offset: 0xC46F44 VA: 0xC46F44
	public float DofTargetLength; // 0x20
	[SerializeField] // RVA: 0xC46F80 Offset: 0xC46F80 VA: 0xC46F80
	[MinAttribute] // RVA: 0xC46F80 Offset: 0xC46F80 VA: 0xC46F80
	public float DofNearMinLength; // 0x24
	[SerializeField] // RVA: 0xC46FBC Offset: 0xC46FBC VA: 0xC46FBC
	[MinAttribute] // RVA: 0xC46FBC Offset: 0xC46FBC VA: 0xC46FBC
	public float DofNearMaxLength; // 0x28
	[SerializeField] // RVA: 0xC46FF8 Offset: 0xC46FF8 VA: 0xC46FF8
	[MinAttribute] // RVA: 0xC46FF8 Offset: 0xC46FF8 VA: 0xC46FF8
	public float DofFarMinLength; // 0x2C
	[SerializeField] // RVA: 0xC47034 Offset: 0xC47034 VA: 0xC47034
	[MinAttribute] // RVA: 0xC47034 Offset: 0xC47034 VA: 0xC47034
	public float DofFarMaxLength; // 0x30
	[SerializeField] // RVA: 0xC47070 Offset: 0xC47070 VA: 0xC47070
	private float DofDepthLimit; // 0x34
	[SerializeField] // RVA: 0xC47080 Offset: 0xC47080 VA: 0xC47080
	private Material dofMaterial; // 0x38
	[SerializeField] // RVA: 0xC47090 Offset: 0xC47090 VA: 0xC47090
	private Material dofBlurMaterial; // 0x40
	[SerializeField] // RVA: 0xC470A0 Offset: 0xC470A0 VA: 0xC470A0
	private bool bloomEnabled; // 0x48
	[SerializeField] // RVA: 0xC470B0 Offset: 0xC470B0 VA: 0xC470B0
	[RangeAttribute] // RVA: 0xC470B0 Offset: 0xC470B0 VA: 0xC470B0
	public float BloomThreshold; // 0x4C
	[SerializeField] // RVA: 0xC470F0 Offset: 0xC470F0 VA: 0xC470F0
	[RangeAttribute] // RVA: 0xC470F0 Offset: 0xC470F0 VA: 0xC470F0
	public float BloomIntensity; // 0x50
	[SerializeField] // RVA: 0xC47130 Offset: 0xC47130 VA: 0xC47130
	[RangeAttribute] // RVA: 0xC47130 Offset: 0xC47130 VA: 0xC47130
	public float BloomBlurSize; // 0x54
	[SerializeField] // RVA: 0xC47170 Offset: 0xC47170 VA: 0xC47170
	[RangeAttribute] // RVA: 0xC47170 Offset: 0xC47170 VA: 0xC47170
	public int BloomBlurIterations; // 0x58
	[SerializeField] // RVA: 0xC471B0 Offset: 0xC471B0 VA: 0xC471B0
	private Material bloomMaterial; // 0x60

	// Properties
	public bool DofEnabled { get; set; }
	public bool BloomEnabled { get; set; }

	// Methods

	// RVA: 0x106C1D8 Offset: 0x106C1D8 VA: 0x106C1D8
	public void .ctor() { }

	// RVA: 0x106C21C Offset: 0x106C21C VA: 0x106C21C
	public bool get_DofEnabled() { }

	// RVA: 0x106C224 Offset: 0x106C224 VA: 0x106C224
	public void set_DofEnabled(bool value) { }

	// RVA: 0x106C24C Offset: 0x106C24C VA: 0x106C24C
	public bool get_BloomEnabled() { }

	// RVA: 0x106C254 Offset: 0x106C254 VA: 0x106C254
	public void set_BloomEnabled(bool value) { }

	// RVA: 0x106C29C Offset: 0x106C29C VA: 0x106C29C
	private void Awake() { }

	// RVA: 0x106C450 Offset: 0x106C450 VA: 0x106C450
	private void OnDestroy() { }

	// RVA: 0x106C5B4 Offset: 0x106C5B4 VA: 0x106C5B4
	private void OnRenderImage(RenderTexture source, RenderTexture destination) { }

	// RVA: 0x106C768 Offset: 0x106C768 VA: 0x106C768
	private void RenderDof(RenderTexture source, RenderTexture destination) { }

	// RVA: 0x106CD5C Offset: 0x106CD5C VA: 0x106CD5C
	private void RenderBloom(RenderTexture source, RenderTexture destination) { }
}

// Namespace: Adb.Core.Graphics
[CreateAssetMenuAttribute] // RVA: 0xC249C0 Offset: 0xC249C0 VA: 0xC249C0
public class CustomPostProcessSetting : ScriptableObject // TypeDefIndex: 4277
{
	// Fields
	[SerializeField] // RVA: 0xC471C0 Offset: 0xC471C0 VA: 0xC471C0
	[TooltipAttribute] // RVA: 0xC471C0 Offset: 0xC471C0 VA: 0xC471C0
	public bool DofEnabled; // 0x18
	[HeaderAttribute] // RVA: 0xC4720C Offset: 0xC4720C VA: 0xC4720C
	[SerializeField] // RVA: 0xC4720C Offset: 0xC4720C VA: 0xC4720C
	[TooltipAttribute] // RVA: 0xC4720C Offset: 0xC4720C VA: 0xC4720C
	public float DofFocusMinDistance; // 0x1C
	[SerializeField] // RVA: 0xC4727C Offset: 0xC4727C VA: 0xC4727C
	[TooltipAttribute] // RVA: 0xC4727C Offset: 0xC4727C VA: 0xC4727C
	public CustomPostProcessSetting.DofSetting DofFocusMinSetting; // 0x20
	[HeaderAttribute] // RVA: 0xC472C8 Offset: 0xC472C8 VA: 0xC472C8
	[SerializeField] // RVA: 0xC472C8 Offset: 0xC472C8 VA: 0xC472C8
	[TooltipAttribute] // RVA: 0xC472C8 Offset: 0xC472C8 VA: 0xC472C8
	public float DofFocusMaxDistance; // 0x28
	[SerializeField] // RVA: 0xC47338 Offset: 0xC47338 VA: 0xC47338
	[TooltipAttribute] // RVA: 0xC47338 Offset: 0xC47338 VA: 0xC47338
	public CustomPostProcessSetting.DofSetting DofFocusMaxSetting; // 0x30
	[SerializeField] // RVA: 0xC47384 Offset: 0xC47384 VA: 0xC47384
	[TooltipAttribute] // RVA: 0xC47384 Offset: 0xC47384 VA: 0xC47384
	public bool BloomEnabled; // 0x38
	[SerializeField] // RVA: 0xC473D0 Offset: 0xC473D0 VA: 0xC473D0
	[TooltipAttribute] // RVA: 0xC473D0 Offset: 0xC473D0 VA: 0xC473D0
	[RangeAttribute] // RVA: 0xC473D0 Offset: 0xC473D0 VA: 0xC473D0
	public float BloomThreshold; // 0x3C
	[SerializeField] // RVA: 0xC47434 Offset: 0xC47434 VA: 0xC47434
	[TooltipAttribute] // RVA: 0xC47434 Offset: 0xC47434 VA: 0xC47434
	[RangeAttribute] // RVA: 0xC47434 Offset: 0xC47434 VA: 0xC47434
	public float BloomIntensity; // 0x40
	[SerializeField] // RVA: 0xC47498 Offset: 0xC47498 VA: 0xC47498
	[TooltipAttribute] // RVA: 0xC47498 Offset: 0xC47498 VA: 0xC47498
	[RangeAttribute] // RVA: 0xC47498 Offset: 0xC47498 VA: 0xC47498
	public float BloomBlurSize; // 0x44
	[SerializeField] // RVA: 0xC474FC Offset: 0xC474FC VA: 0xC474FC
	[TooltipAttribute] // RVA: 0xC474FC Offset: 0xC474FC VA: 0xC474FC
	[RangeAttribute] // RVA: 0xC474FC Offset: 0xC474FC VA: 0xC474FC
	public int BloomBlurIterations; // 0x48

	// Methods

	// RVA: 0x106BEA4 Offset: 0x106BEA4 VA: 0x106BEA4
	public void .ctor() { }

	// RVA: 0x106BEE0 Offset: 0x106BEE0 VA: 0x106BEE0
	public float RangeRatio(float ratio, float min, float max) { }

	// RVA: 0x106BEF0 Offset: 0x106BEF0 VA: 0x106BEF0
	public float DofIntensity(float distance) { }

	// RVA: 0x106BFE4 Offset: 0x106BFE4 VA: 0x106BFE4
	public float DofNearMinLength(float distance) { }

	// RVA: 0x106C044 Offset: 0x106C044 VA: 0x106C044
	public float DofNearMaxLength(float distance) { }

	// RVA: 0x106C0A4 Offset: 0x106C0A4 VA: 0x106C0A4
	public float DofFarMinLength(float distance) { }

	// RVA: 0x106C104 Offset: 0x106C104 VA: 0x106C104
	public float DofFarMaxLength(float distance) { }

	// RVA: 0x106BF50 Offset: 0x106BF50 VA: 0x106BF50
	private float GetDofDistanceRatio(float distance) { }
}

// Namespace: 
[Serializable]
public class CustomPostProcessSetting.DofSetting // TypeDefIndex: 4278
{
	// Fields
	[SerializeField] // RVA: 0xC47560 Offset: 0xC47560 VA: 0xC47560
	[TooltipAttribute] // RVA: 0xC47560 Offset: 0xC47560 VA: 0xC47560
	[RangeAttribute] // RVA: 0xC47560 Offset: 0xC47560 VA: 0xC47560
	public float intensity; // 0x10
	[SerializeField] // RVA: 0xC475C4 Offset: 0xC475C4 VA: 0xC475C4
	[TooltipAttribute] // RVA: 0xC475C4 Offset: 0xC475C4 VA: 0xC475C4
	[MinAttribute] // RVA: 0xC475C4 Offset: 0xC475C4 VA: 0xC475C4
	public float nearMinLength; // 0x14
	[SerializeField] // RVA: 0xC47624 Offset: 0xC47624 VA: 0xC47624
	[TooltipAttribute] // RVA: 0xC47624 Offset: 0xC47624 VA: 0xC47624
	[MinAttribute] // RVA: 0xC47624 Offset: 0xC47624 VA: 0xC47624
	public float nearMaxLength; // 0x18
	[SerializeField] // RVA: 0xC47684 Offset: 0xC47684 VA: 0xC47684
	[TooltipAttribute] // RVA: 0xC47684 Offset: 0xC47684 VA: 0xC47684
	[MinAttribute] // RVA: 0xC47684 Offset: 0xC47684 VA: 0xC47684
	public float farMinLength; // 0x1C
	[SerializeField] // RVA: 0xC476E4 Offset: 0xC476E4 VA: 0xC476E4
	[TooltipAttribute] // RVA: 0xC476E4 Offset: 0xC476E4 VA: 0xC476E4
	[MinAttribute] // RVA: 0xC476E4 Offset: 0xC476E4 VA: 0xC476E4
	public float farMaxLength; // 0x20

	// Methods

	// RVA: 0x106C164 Offset: 0x106C164 VA: 0x106C164
	public void .ctor() { }
}

// Namespace: Adv.Core.Graphics
public class GraphicSetting : MonoBehaviour // TypeDefIndex: 4279
{
	// Fields
	[SerializeField] // RVA: 0xC47744 Offset: 0xC47744 VA: 0xC47744
	private float shadowTargetDistanceMin; // 0x18
	[SerializeField] // RVA: 0xC47754 Offset: 0xC47754 VA: 0xC47754
	private float shadowTargetDistanceMax; // 0x1C
	[SerializeField] // RVA: 0xC47764 Offset: 0xC47764 VA: 0xC47764
	private GraphicSetting.ShadowSetting[] shadowSettings; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC47774 Offset: 0xC47774 VA: 0xC47774
	[DebuggerBrowsableAttribute] // RVA: 0xC47774 Offset: 0xC47774 VA: 0xC47774
	private static GraphicSetting <Instance>k__BackingField; // 0x0
	private GraphicSetting.ShadowSetting currentShadowSetting; // 0x28

	// Properties
	public float ShadowDistanceMin { get; }
	public float ShadowDistanceMax { get; }
	public float ShadowTargetDistanceMin { get; }
	public float ShadowTargetDistanceMax { get; }
	public static GraphicSetting Instance { get; set; }

	// Methods

	// RVA: 0x106D250 Offset: 0x106D250 VA: 0x106D250
	public void .ctor() { }

	// RVA: 0x106D258 Offset: 0x106D258 VA: 0x106D258
	public float get_ShadowDistanceMin() { }

	// RVA: 0x106D33C Offset: 0x106D33C VA: 0x106D33C
	public float get_ShadowDistanceMax() { }

	// RVA: 0x106D368 Offset: 0x106D368 VA: 0x106D368
	public float get_ShadowTargetDistanceMin() { }

	// RVA: 0x106D370 Offset: 0x106D370 VA: 0x106D370
	public float get_ShadowTargetDistanceMax() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC5C44 Offset: 0xCC5C44 VA: 0xCC5C44
	// RVA: 0x106D378 Offset: 0x106D378 VA: 0x106D378
	public static GraphicSetting get_Instance() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC5C54 Offset: 0xCC5C54 VA: 0xCC5C54
	// RVA: 0x106D3C8 Offset: 0x106D3C8 VA: 0x106D3C8
	private static void set_Instance(GraphicSetting value) { }

	// RVA: 0x106D41C Offset: 0x106D41C VA: 0x106D41C
	public void Awake() { }

	// RVA: 0x106D284 Offset: 0x106D284 VA: 0x106D284
	private GraphicSetting.ShadowSetting GetShadowSetting() { }
}

// Namespace: 
[Serializable]
public class GraphicSetting.ShadowSetting // TypeDefIndex: 4280
{
	// Fields
	[SerializeField] // RVA: 0xC477B0 Offset: 0xC477B0 VA: 0xC477B0
	public ShadowResolution resolution; // 0x10
	[SerializeField] // RVA: 0xC477C0 Offset: 0xC477C0 VA: 0xC477C0
	public float distanceMin; // 0x14
	[SerializeField] // RVA: 0xC477D0 Offset: 0xC477D0 VA: 0xC477D0
	public float distanceMax; // 0x18

	// Methods

	// RVA: 0x106D470 Offset: 0x106D470 VA: 0x106D470
	public void .ctor() { }
}

// Namespace: 
public class PrefabLightmapData : MonoBehaviour // TypeDefIndex: 4281
{
	// Fields
	[SerializeField] // RVA: 0xC477E0 Offset: 0xC477E0 VA: 0xC477E0
	private PrefabLightmapData.RendererInfo[] m_RendererInfo; // 0x18
	[SerializeField] // RVA: 0xC477F0 Offset: 0xC477F0 VA: 0xC477F0
	private Texture2D[] m_Lightmaps; // 0x20
	[SerializeField] // RVA: 0xC47800 Offset: 0xC47800 VA: 0xC47800
	private Texture2D[] m_LightmapsDir; // 0x28
	[SerializeField] // RVA: 0xC47810 Offset: 0xC47810 VA: 0xC47810
	private Texture2D[] m_ShadowMasks; // 0x30
	[SerializeField] // RVA: 0xC47820 Offset: 0xC47820 VA: 0xC47820
	private PrefabLightmapData.LightInfo[] m_LightInfo; // 0x38
	[SerializeField] // RVA: 0xC47830 Offset: 0xC47830 VA: 0xC47830
	private LightProbes m_lightProbes; // 0x40
	[SerializeField] // RVA: 0xC47840 Offset: 0xC47840 VA: 0xC47840
	private LightmapsMode m_LightMode; // 0x48
	private LightmapData[] originalLightmaps; // 0x50
	private LightmapsMode originalLightmapsMode; // 0x58

	// Methods

	// RVA: 0x12C9D80 Offset: 0x12C9D80 VA: 0x12C9D80
	public void .ctor() { }

	// RVA: 0x12C9D88 Offset: 0x12C9D88 VA: 0x12C9D88
	private void Awake() { }

	// RVA: 0x12C9D8C Offset: 0x12C9D8C VA: 0x12C9D8C
	private void Init() { }

	// RVA: 0x12CA480 Offset: 0x12CA480 VA: 0x12CA480
	private void OnDestroy() { }

	// RVA: 0x12CA1E8 Offset: 0x12CA1E8 VA: 0x12CA1E8
	private static void ApplyRendererInfo(PrefabLightmapData.RendererInfo[] infos, int[] lightmapOffsetIndex, PrefabLightmapData.LightInfo[] lightsInfo) { }
}

// Namespace: 
[Serializable]
private struct PrefabLightmapData.RendererInfo // TypeDefIndex: 4282
{
	// Fields
	public Renderer renderer; // 0x0
	public int lightmapIndex; // 0x8
	public LightProbeUsage lightProbeUsage; // 0xC
	public Vector4 lightmapOffsetScale; // 0x10
