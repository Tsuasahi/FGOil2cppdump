internal sealed class AnimatorOverrideController.OnOverrideControllerDirtyCallback : MulticastDelegate // TypeDefIndex: 2703
{
	// Methods

	// RVA: 0x1328AC4 Offset: 0x1328AC4 VA: 0x1328AC4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x13288C4 Offset: 0x13288C4 VA: 0x13288C4 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1328AD4 Offset: 0x1328AD4 VA: 0x1328AD4 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1328B08 Offset: 0x1328B08 VA: 0x1328B08 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine
public enum HumanBodyBones // TypeDefIndex: 2704
{
	// Fields
	public int value__; // 0x0
	public const HumanBodyBones Hips = 0;
	public const HumanBodyBones LeftUpperLeg = 1;
	public const HumanBodyBones RightUpperLeg = 2;
	public const HumanBodyBones LeftLowerLeg = 3;
	public const HumanBodyBones RightLowerLeg = 4;
	public const HumanBodyBones LeftFoot = 5;
	public const HumanBodyBones RightFoot = 6;
	public const HumanBodyBones Spine = 7;
	public const HumanBodyBones Chest = 8;
	public const HumanBodyBones UpperChest = 54;
	public const HumanBodyBones Neck = 9;
	public const HumanBodyBones Head = 10;
	public const HumanBodyBones LeftShoulder = 11;
	public const HumanBodyBones RightShoulder = 12;
	public const HumanBodyBones LeftUpperArm = 13;
	public const HumanBodyBones RightUpperArm = 14;
	public const HumanBodyBones LeftLowerArm = 15;
	public const HumanBodyBones RightLowerArm = 16;
	public const HumanBodyBones LeftHand = 17;
	public const HumanBodyBones RightHand = 18;
	public const HumanBodyBones LeftToes = 19;
	public const HumanBodyBones RightToes = 20;
	public const HumanBodyBones LeftEye = 21;
	public const HumanBodyBones RightEye = 22;
	public const HumanBodyBones Jaw = 23;
	public const HumanBodyBones LeftThumbProximal = 24;
	public const HumanBodyBones LeftThumbIntermediate = 25;
	public const HumanBodyBones LeftThumbDistal = 26;
	public const HumanBodyBones LeftIndexProximal = 27;
	public const HumanBodyBones LeftIndexIntermediate = 28;
	public const HumanBodyBones LeftIndexDistal = 29;
	public const HumanBodyBones LeftMiddleProximal = 30;
	public const HumanBodyBones LeftMiddleIntermediate = 31;
	public const HumanBodyBones LeftMiddleDistal = 32;
	public const HumanBodyBones LeftRingProximal = 33;
	public const HumanBodyBones LeftRingIntermediate = 34;
	public const HumanBodyBones LeftRingDistal = 35;
	public const HumanBodyBones LeftLittleProximal = 36;
	public const HumanBodyBones LeftLittleIntermediate = 37;
	public const HumanBodyBones LeftLittleDistal = 38;
	public const HumanBodyBones RightThumbProximal = 39;
	public const HumanBodyBones RightThumbIntermediate = 40;
	public const HumanBodyBones RightThumbDistal = 41;
	public const HumanBodyBones RightIndexProximal = 42;
	public const HumanBodyBones RightIndexIntermediate = 43;
	public const HumanBodyBones RightIndexDistal = 44;
	public const HumanBodyBones RightMiddleProximal = 45;
	public const HumanBodyBones RightMiddleIntermediate = 46;
	public const HumanBodyBones RightMiddleDistal = 47;
	public const HumanBodyBones RightRingProximal = 48;
	public const HumanBodyBones RightRingIntermediate = 49;
	public const HumanBodyBones RightRingDistal = 50;
	public const HumanBodyBones RightLittleProximal = 51;
	public const HumanBodyBones RightLittleIntermediate = 52;
	public const HumanBodyBones RightLittleDistal = 53;
	public const HumanBodyBones LastBone = 55;
}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xC62764 Offset: 0xC62764 VA: 0xC62764
[NativeHeaderAttribute] // RVA: 0xC62764 Offset: 0xC62764 VA: 0xC62764
[NativeTypeAttribute] // RVA: 0xC62764 Offset: 0xC62764 VA: 0xC62764
public struct SkeletonBone // TypeDefIndex: 2705
{
	// Fields
	[NativeNameAttribute] // RVA: 0xC62D68 Offset: 0xC62D68 VA: 0xC62D68
	public string name; // 0x0
	[NativeNameAttribute] // RVA: 0xC62DA0 Offset: 0xC62DA0 VA: 0xC62DA0
	internal string parentName; // 0x8
	[NativeNameAttribute] // RVA: 0xC62DD8 Offset: 0xC62DD8 VA: 0xC62DD8
	public Vector3 position; // 0x10
	[NativeNameAttribute] // RVA: 0xC62E10 Offset: 0xC62E10 VA: 0xC62E10
	public Quaternion rotation; // 0x1C
	[NativeNameAttribute] // RVA: 0xC62E48 Offset: 0xC62E48 VA: 0xC62E48
	public Vector3 scale; // 0x2C
}

// Namespace: UnityEngine
[NativeTypeAttribute] // RVA: 0xC627D8 Offset: 0xC627D8 VA: 0xC627D8
[NativeHeaderAttribute] // RVA: 0xC627D8 Offset: 0xC627D8 VA: 0xC627D8
[NativeHeaderAttribute] // RVA: 0xC627D8 Offset: 0xC627D8 VA: 0xC627D8
public struct HumanLimit // TypeDefIndex: 2706
{
	// Fields
	private Vector3 m_Min; // 0x0
	private Vector3 m_Max; // 0xC
	private Vector3 m_Center; // 0x18
	private float m_AxisLength; // 0x24
	private int m_UseDefaultValues; // 0x28
}

// Namespace: UnityEngine
[NativeTypeAttribute] // RVA: 0xC62860 Offset: 0xC62860 VA: 0xC62860
[RequiredByNativeCodeAttribute] // RVA: 0xC62860 Offset: 0xC62860 VA: 0xC62860
[NativeHeaderAttribute] // RVA: 0xC62860 Offset: 0xC62860 VA: 0xC62860
public struct HumanBone // TypeDefIndex: 2707
{
	// Fields
	private string m_BoneName; // 0x0
	private string m_HumanName; // 0x8
	[NativeNameAttribute] // RVA: 0xC62E80 Offset: 0xC62E80 VA: 0xC62E80
	public HumanLimit limit; // 0x10
}

// Namespace: UnityEngine.Animations
[NativeTypeAttribute] // RVA: 0xC628D4 Offset: 0xC628D4 VA: 0xC628D4
[FlagsAttribute] // RVA: 0xC628D4 Offset: 0xC628D4 VA: 0xC628D4
public enum Axis // TypeDefIndex: 2708
{
	// Fields
	public int value__; // 0x0
	public const Axis None = 0;
	public const Axis X = 1;
	public const Axis Y = 2;
	public const Axis Z = 4;
}

// Namespace: UnityEngine.Animations
[NativeTypeAttribute] // RVA: 0xC62920 Offset: 0xC62920 VA: 0xC62920
[UsedByNativeCodeAttribute] // RVA: 0xC62920 Offset: 0xC62920 VA: 0xC62920
[NativeHeaderAttribute] // RVA: 0xC62920 Offset: 0xC62920 VA: 0xC62920
[Serializable]
public struct ConstraintSource // TypeDefIndex: 2709
{
	// Fields
	[NativeNameAttribute] // RVA: 0xC62EB8 Offset: 0xC62EB8 VA: 0xC62EB8
	private Transform m_SourceTransform; // 0x0
	[NativeNameAttribute] // RVA: 0xC62EF0 Offset: 0xC62EF0 VA: 0xC62EF0
	private float m_Weight; // 0x8
}

// Namespace: UnityEngine.Animations
public interface IConstraint // TypeDefIndex: 2710
{}

// Namespace: UnityEngine.Animations
internal interface IConstraintInternal // TypeDefIndex: 2711
{}

// Namespace: UnityEngine.Animations
[RequireComponent] // RVA: 0xC629C8 Offset: 0xC629C8 VA: 0xC629C8
[NativeHeaderAttribute] // RVA: 0xC629C8 Offset: 0xC629C8 VA: 0xC629C8
[NativeHeaderAttribute] // RVA: 0xC629C8 Offset: 0xC629C8 VA: 0xC629C8
[UsedByNativeCodeAttribute] // RVA: 0xC629C8 Offset: 0xC629C8 VA: 0xC629C8
public sealed class RotationConstraint : Behaviour, IConstraint, IConstraintInternal // TypeDefIndex: 2712
{
	// Properties
	public float weight { get; set; }
	public Vector3 rotationAtRest { get; set; }
	public Vector3 rotationOffset { get; set; }
	public Axis rotationAxis { get; set; }
	public bool constraintActive { get; set; }
	public bool locked { get; set; }
	public int sourceCount { get; }

	// Methods

	// RVA: 0x1324944 Offset: 0x1324944 VA: 0x1324944
	private void .ctor() { }

	// RVA: 0x132496C Offset: 0x132496C VA: 0x132496C
	private static void Internal_Create(RotationConstraint self) { }

	// RVA: 0x13249D8 Offset: 0x13249D8 VA: 0x13249D8 Slot: 4
	public float get_weight() { }

	// RVA: 0x1324A44 Offset: 0x1324A44 VA: 0x1324A44 Slot: 5
	public void set_weight(float value) { }

	// RVA: 0x1324AB8 Offset: 0x1324AB8 VA: 0x1324AB8
	public Vector3 get_rotationAtRest() { }

	// RVA: 0x1324B5C Offset: 0x1324B5C VA: 0x1324B5C
	public void set_rotationAtRest(Vector3 value) { }

	// RVA: 0x1324BF8 Offset: 0x1324BF8 VA: 0x1324BF8
	public Vector3 get_rotationOffset() { }

	// RVA: 0x1324C9C Offset: 0x1324C9C VA: 0x1324C9C
	public void set_rotationOffset(Vector3 value) { }

	// RVA: 0x1324D38 Offset: 0x1324D38 VA: 0x1324D38
	public Axis get_rotationAxis() { }

	// RVA: 0x1324DA4 Offset: 0x1324DA4 VA: 0x1324DA4
	public void set_rotationAxis(Axis value) { }

	// RVA: 0x1324E18 Offset: 0x1324E18 VA: 0x1324E18 Slot: 6
	public bool get_constraintActive() { }

	// RVA: 0x1324E84 Offset: 0x1324E84 VA: 0x1324E84 Slot: 7
	public void set_constraintActive(bool value) { }

	// RVA: 0x1324EF8 Offset: 0x1324EF8 VA: 0x1324EF8 Slot: 8
	public bool get_locked() { }

	// RVA: 0x1324F64 Offset: 0x1324F64 VA: 0x1324F64 Slot: 9
	public void set_locked(bool value) { }

	// RVA: 0x1324FD8 Offset: 0x1324FD8 VA: 0x1324FD8 Slot: 10
	public int get_sourceCount() { }

	[FreeFunctionAttribute] // RVA: 0xC63940 Offset: 0xC63940 VA: 0xC63940
	// RVA: 0x1324FDC Offset: 0x1324FDC VA: 0x1324FDC
	private static int GetSourceCountInternal(RotationConstraint self) { }

	[FreeFunctionAttribute] // RVA: 0xC63978 Offset: 0xC63978 VA: 0xC63978
	// RVA: 0x1325048 Offset: 0x1325048 VA: 0x1325048 Slot: 11
	public void GetSources(List<ConstraintSource> sources) { }

	// RVA: 0x13250BC Offset: 0x13250BC VA: 0x13250BC Slot: 12
	public void SetSources(List<ConstraintSource> sources) { }

	[FreeFunctionAttribute] // RVA: 0xC639CC Offset: 0xC639CC VA: 0xC639CC
	// RVA: 0x1325158 Offset: 0x1325158 VA: 0x1325158
	private static void SetSourcesInternal(RotationConstraint self, List<ConstraintSource> sources) { }

	// RVA: 0x13251CC Offset: 0x13251CC VA: 0x13251CC Slot: 13
	public int AddSource(ConstraintSource source) { }

	// RVA: 0x1325264 Offset: 0x1325264 VA: 0x1325264 Slot: 14
	public void RemoveSource(int index) { }

	[NativeNameAttribute] // RVA: 0xC63A04 Offset: 0xC63A04 VA: 0xC63A04
	// RVA: 0x1325400 Offset: 0x1325400 VA: 0x1325400
	private void RemoveSourceInternal(int index) { }

	// RVA: 0x1325474 Offset: 0x1325474 VA: 0x1325474 Slot: 15
	public ConstraintSource GetSource(int index) { }

	[NativeNameAttribute] // RVA: 0xC63A3C Offset: 0xC63A3C VA: 0xC63A3C
	// RVA: 0x13254B8 Offset: 0x13254B8 VA: 0x13254B8
	private ConstraintSource GetSourceInternal(int index) { }

	// RVA: 0x1325564 Offset: 0x1325564 VA: 0x1325564 Slot: 16
	public void SetSource(int index, ConstraintSource source) { }

	[NativeNameAttribute] // RVA: 0xC63A74 Offset: 0xC63A74 VA: 0xC63A74
	// RVA: 0x13255B4 Offset: 0x13255B4 VA: 0x13255B4
	private void SetSourceInternal(int index, ConstraintSource source) { }

	// RVA: 0x1325290 Offset: 0x1325290 VA: 0x1325290
	private void ValidateSourceIndex(int index) { }

	// RVA: 0x1324AE8 Offset: 0x1324AE8 VA: 0x1324AE8
	private void get_rotationAtRest_Injected(out Vector3 ret) { }

	// RVA: 0x1324B84 Offset: 0x1324B84 VA: 0x1324B84
	private void set_rotationAtRest_Injected(ref Vector3 value) { }

	// RVA: 0x1324C28 Offset: 0x1324C28 VA: 0x1324C28
	private void get_rotationOffset_Injected(out Vector3 ret) { }

	// RVA: 0x1324CC4 Offset: 0x1324CC4 VA: 0x1324CC4
	private void set_rotationOffset_Injected(ref Vector3 value) { }

	// RVA: 0x13251F0 Offset: 0x13251F0 VA: 0x13251F0 Slot: 17
	private int AddSource_Injected(ref ConstraintSource source) { }

	// RVA: 0x13254E0 Offset: 0x13254E0 VA: 0x13254E0
	private void GetSourceInternal_Injected(int index, out ConstraintSource ret) { }

	// RVA: 0x13255D8 Offset: 0x13255D8 VA: 0x13255D8
	private void SetSourceInternal_Injected(int index, ref ConstraintSource source) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC62A84 Offset: 0xC62A84 VA: 0xC62A84
public class HumanTrait // TypeDefIndex: 2713
{
	// Methods

	// RVA: 0x1327FE0 Offset: 0x1327FE0 VA: 0x1327FE0
	internal static int GetBoneIndexFromMono(int humanId) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC62ABC Offset: 0xC62ABC VA: 0xC62ABC
public class Motion : Object // TypeDefIndex: 2714
{
	// Fields
	[DebuggerBrowsableAttribute] // RVA: 0xC62F28 Offset: 0xC62F28 VA: 0xC62F28
	[CompilerGeneratedAttribute] // RVA: 0xC62F28 Offset: 0xC62F28 VA: 0xC62F28
	private readonly bool <isAnimatorMotion>k__BackingField; // 0x18

	// Properties
	public bool isLooping { get; }

	// Methods

	// RVA: 0x132229C Offset: 0x132229C VA: 0x132229C
	protected void .ctor() { }

	[NativeMethodAttribute] // RVA: 0xC63AAC Offset: 0xC63AAC VA: 0xC63AAC
	// RVA: 0x1328E64 Offset: 0x1328E64 VA: 0x1328E64
	public bool get_isLooping() { }
}

// Namespace: UnityEngine
[ExcludeFromObjectFactoryAttribute] // RVA: 0xC62AF4 Offset: 0xC62AF4 VA: 0xC62AF4
[NativeHeaderAttribute] // RVA: 0xC62AF4 Offset: 0xC62AF4 VA: 0xC62AF4
[UsedByNativeCodeAttribute] // RVA: 0xC62AF4 Offset: 0xC62AF4 VA: 0xC62AF4
public class RuntimeAnimatorController : Object // TypeDefIndex: 2715
{}

// Namespace: UnityEngine
internal enum AnimationEventSource // TypeDefIndex: 2716
{
	// Fields
	public int value__; // 0x0
	public const AnimationEventSource NoSource = 0;
	public const AnimationEventSource Legacy = 1;
	public const AnimationEventSource Animator = 2;
}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xC62B50 Offset: 0xC62B50 VA: 0xC62B50
[Serializable]
public sealed class AnimationEvent // TypeDefIndex: 2717
{
	// Fields
	internal float m_Time; // 0x10
	internal string m_FunctionName; // 0x18
	internal string m_StringParameter; // 0x20
	internal Object m_ObjectReferenceParameter; // 0x28
	internal float m_FloatParameter; // 0x30
	internal int m_IntParameter; // 0x34
	internal int m_MessageOptions; // 0x38
	internal AnimationEventSource m_Source; // 0x3C
	internal AnimationState m_StateSender; // 0x40
	internal AnimatorStateInfo m_AnimatorStateInfo; // 0x48
	internal AnimatorClipInfo m_AnimatorClipInfo; // 0x6C

	// Properties
	public string stringParameter { get; set; }
	public string functionName { get; set; }
	public float time { get; set; }

	// Methods

	// RVA: 0x1322680 Offset: 0x1322680 VA: 0x1322680
	public void .ctor() { }

	// RVA: 0x13226EC Offset: 0x13226EC VA: 0x13226EC
	public string get_stringParameter() { }

	// RVA: 0x13226F4 Offset: 0x13226F4 VA: 0x13226F4
	public void set_stringParameter(string value) { }

	// RVA: 0x13226FC Offset: 0x13226FC VA: 0x13226FC
	public string get_functionName() { }

	// RVA: 0x1322704 Offset: 0x1322704 VA: 0x1322704
	public void set_functionName(string value) { }

	// RVA: 0x132270C Offset: 0x132270C VA: 0x132270C
	public float get_time() { }

	// RVA: 0x1322714 Offset: 0x1322714 VA: 0x1322714
	public void set_time(float value) { }
}

// Namespace: UnityEngine
public enum PlayMode // TypeDefIndex: 2718
{
	// Fields
	public int value__; // 0x0
	public const PlayMode StopSameLayer = 0;
	public const PlayMode StopAll = 4;
}

// Namespace: UnityEngine
public enum QueueMode // TypeDefIndex: 2719
{
	// Fields
	public int value__; // 0x0
	public const QueueMode CompleteOthers = 0;
	public const QueueMode PlayNow = 2;
}

// Namespace: UnityEngine
public enum AnimationBlendMode // TypeDefIndex: 2720
{
	// Fields
	public int value__; // 0x0
	public const AnimationBlendMode Blend = 0;
	public const AnimationBlendMode Additive = 1;
}

// Namespace: UnityEngine
[DefaultMemberAttribute] // RVA: 0xC62B60 Offset: 0xC62B60 VA: 0xC62B60
public sealed class Animation : Behaviour, IEnumerable // TypeDefIndex: 2721
{
	// Properties
	public AnimationClip clip { get; set; }
	public WrapMode wrapMode { set; }
	public bool isPlaying { get; }
	public AnimationState Item { get; }

	// Methods

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63AE4 Offset: 0xC63AE4 VA: 0xC63AE4
	// RVA: 0x13217E0 Offset: 0x13217E0 VA: 0x13217E0
	public AnimationClip get_clip() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63AF4 Offset: 0xC63AF4 VA: 0xC63AF4
	// RVA: 0x132184C Offset: 0x132184C VA: 0x132184C
	public void set_clip(AnimationClip value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63B04 Offset: 0xC63B04 VA: 0xC63B04
	// RVA: 0x13218C0 Offset: 0x13218C0 VA: 0x13218C0
	public void set_wrapMode(WrapMode value) { }

	// RVA: 0x1321934 Offset: 0x1321934 VA: 0x1321934
	public void Stop() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63B14 Offset: 0xC63B14 VA: 0xC63B14
	// RVA: 0x1321938 Offset: 0x1321938 VA: 0x1321938
	private static void INTERNAL_CALL_Stop(Animation self) { }

	// RVA: 0x13219A4 Offset: 0x13219A4 VA: 0x13219A4
	public void Stop(string name) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63B24 Offset: 0xC63B24 VA: 0xC63B24
	// RVA: 0x13219A8 Offset: 0x13219A8 VA: 0x13219A8
	private void Internal_StopByName(string name) { }

	// RVA: 0x1321A1C Offset: 0x1321A1C VA: 0x1321A1C
	public void Rewind(string name) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63B34 Offset: 0xC63B34 VA: 0xC63B34
	// RVA: 0x1321A20 Offset: 0x1321A20 VA: 0x1321A20
	private void Internal_RewindByName(string name) { }

	// RVA: 0x1321A94 Offset: 0x1321A94 VA: 0x1321A94
	public void Sample() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63B44 Offset: 0xC63B44 VA: 0xC63B44
	// RVA: 0x1321A98 Offset: 0x1321A98 VA: 0x1321A98
	private static void INTERNAL_CALL_Sample(Animation self) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63B54 Offset: 0xC63B54 VA: 0xC63B54
	// RVA: 0x1321B04 Offset: 0x1321B04 VA: 0x1321B04
	public bool get_isPlaying() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63B64 Offset: 0xC63B64 VA: 0xC63B64
	// RVA: 0x1321B70 Offset: 0x1321B70 VA: 0x1321B70
	public bool IsPlaying(string name) { }

	// RVA: 0x1321BE4 Offset: 0x1321BE4 VA: 0x1321BE4
	public AnimationState get_Item(string name) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC63B74 Offset: 0xC63B74 VA: 0xC63B74
	// RVA: 0x1321C5C Offset: 0x1321C5C VA: 0x1321C5C
	public bool Play() { }

	// RVA: 0x1321C64 Offset: 0x1321C64 VA: 0x1321C64
	public bool Play(PlayMode mode) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63B84 Offset: 0xC63B84 VA: 0xC63B84
	// RVA: 0x1321CDC Offset: 0x1321CDC VA: 0x1321CDC
	public bool Play(string animation, PlayMode mode) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC63B94 Offset: 0xC63B94 VA: 0xC63B94
	// RVA: 0x1321D60 Offset: 0x1321D60 VA: 0x1321D60
	public bool Play(string animation) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63BA4 Offset: 0xC63BA4 VA: 0xC63BA4
	// RVA: 0x1321D68 Offset: 0x1321D68 VA: 0x1321D68
	public void CrossFade(string animation, float fadeLength, PlayMode mode) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC63BB4 Offset: 0xC63BB4 VA: 0xC63BB4
	// RVA: 0x1321DF4 Offset: 0x1321DF4 VA: 0x1321DF4
	public void CrossFade(string animation) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63BC4 Offset: 0xC63BC4 VA: 0xC63BC4
	// RVA: 0x1321E04 Offset: 0x1321E04 VA: 0x1321E04
	public void Blend(string animation, float targetWeight, float fadeLength) { }

	// RVA: 0x1321E90 Offset: 0x1321E90 VA: 0x1321E90
	public void AddClip(AnimationClip clip, string newName) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63BD4 Offset: 0xC63BD4 VA: 0xC63BD4
	// RVA: 0x1321EA8 Offset: 0x1321EA8 VA: 0x1321EA8
	public void AddClip(AnimationClip clip, string newName, int firstFrame, int lastFrame, bool addLoopFrame) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC63BE4 Offset: 0xC63BE4 VA: 0xC63BE4
	// RVA: 0x1321EA0 Offset: 0x1321EA0 VA: 0x1321EA0
	public void AddClip(AnimationClip clip, string newName, int firstFrame, int lastFrame) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63BF4 Offset: 0xC63BF4 VA: 0xC63BF4
	// RVA: 0x1321F4C Offset: 0x1321F4C VA: 0x1321F4C
	public int GetClipCount() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63C04 Offset: 0xC63C04 VA: 0xC63C04
	// RVA: 0x1321C68 Offset: 0x1321C68 VA: 0x1321C68
	private bool PlayDefaultAnimation(PlayMode mode) { }

	// RVA: 0x1321FB8 Offset: 0x1321FB8 VA: 0x1321FB8 Slot: 4
	public IEnumerator GetEnumerator() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63C14 Offset: 0xC63C14 VA: 0xC63C14
	// RVA: 0x1321BE8 Offset: 0x1321BE8 VA: 0x1321BE8
	internal AnimationState GetState(string name) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63C24 Offset: 0xC63C24 VA: 0xC63C24
	// RVA: 0x1322058 Offset: 0x1322058 VA: 0x1322058
	internal AnimationState GetStateAtIndex(int index) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63C34 Offset: 0xC63C34 VA: 0xC63C34
	// RVA: 0x13220CC Offset: 0x13220CC VA: 0x13220CC
	internal int GetStateCount() { }

	// RVA: 0x1322138 Offset: 0x1322138 VA: 0x1322138
	public AnimationClip GetClip(string name) { }
}

// Namespace: 
private sealed class Animation.Enumerator : IEnumerator // TypeDefIndex: 2722
{
	// Fields
	private Animation m_Outer; // 0x10
	private int m_CurrentIndex; // 0x18

	// Properties
	public object Current { get; }

	// Methods

	// RVA: 0x1322024 Offset: 0x1322024 VA: 0x1322024
	internal void .ctor(Animation outer) { }

	// RVA: 0x13221F0 Offset: 0x13221F0 VA: 0x13221F0 Slot: 4
	public object get_Current() { }

	// RVA: 0x1322224 Offset: 0x1322224 VA: 0x1322224 Slot: 5
	public bool MoveNext() { }

	// RVA: 0x132226C Offset: 0x132226C VA: 0x132226C Slot: 6
	public void Reset() { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC62B98 Offset: 0xC62B98 VA: 0xC62B98
public sealed class AnimationState : TrackedReference // TypeDefIndex: 2723
{
	// Properties
	public bool enabled { get; set; }
	public float weight { set; }
	public WrapMode wrapMode { get; set; }
	public float time { get; set; }
	public float normalizedTime { get; set; }
	public float speed { get; set; }
	public float length { get; }
	public int layer { set; }
	public AnimationClip clip { get; }
	public string name { get; }
	public AnimationBlendMode blendMode { set; }

	// Methods

	// RVA: 0x132271C Offset: 0x132271C VA: 0x132271C
	public void .ctor() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63C44 Offset: 0xC63C44 VA: 0xC63C44
	// RVA: 0x1322724 Offset: 0x1322724 VA: 0x1322724
	public bool get_enabled() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63C54 Offset: 0xC63C54 VA: 0xC63C54
	// RVA: 0x1322790 Offset: 0x1322790 VA: 0x1322790
	public void set_enabled(bool value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63C64 Offset: 0xC63C64 VA: 0xC63C64
	// RVA: 0x1322804 Offset: 0x1322804 VA: 0x1322804
	public void set_weight(float value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63C74 Offset: 0xC63C74 VA: 0xC63C74
	// RVA: 0x1322878 Offset: 0x1322878 VA: 0x1322878
	public WrapMode get_wrapMode() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63C84 Offset: 0xC63C84 VA: 0xC63C84
	// RVA: 0x13228E4 Offset: 0x13228E4 VA: 0x13228E4
	public void set_wrapMode(WrapMode value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63C94 Offset: 0xC63C94 VA: 0xC63C94
	// RVA: 0x1322958 Offset: 0x1322958 VA: 0x1322958
	public float get_time() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63CA4 Offset: 0xC63CA4 VA: 0xC63CA4
	// RVA: 0x13229C4 Offset: 0x13229C4 VA: 0x13229C4
	public void set_time(float value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63CB4 Offset: 0xC63CB4 VA: 0xC63CB4
	// RVA: 0x1322A38 Offset: 0x1322A38 VA: 0x1322A38
	public float get_normalizedTime() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63CC4 Offset: 0xC63CC4 VA: 0xC63CC4
	// RVA: 0x1322AA4 Offset: 0x1322AA4 VA: 0x1322AA4
	public void set_normalizedTime(float value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63CD4 Offset: 0xC63CD4 VA: 0xC63CD4
	// RVA: 0x1322B18 Offset: 0x1322B18 VA: 0x1322B18
	public float get_speed() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63CE4 Offset: 0xC63CE4 VA: 0xC63CE4
	// RVA: 0x1322B84 Offset: 0x1322B84 VA: 0x1322B84
	public void set_speed(float value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63CF4 Offset: 0xC63CF4 VA: 0xC63CF4
	// RVA: 0x1322BF8 Offset: 0x1322BF8 VA: 0x1322BF8
	public float get_length() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63D04 Offset: 0xC63D04 VA: 0xC63D04
	// RVA: 0x1322C64 Offset: 0x1322C64 VA: 0x1322C64
	public void set_layer(int value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63D14 Offset: 0xC63D14 VA: 0xC63D14
	// RVA: 0x1322184 Offset: 0x1322184 VA: 0x1322184
	public AnimationClip get_clip() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63D24 Offset: 0xC63D24 VA: 0xC63D24
	// RVA: 0x1322CD8 Offset: 0x1322CD8 VA: 0x1322CD8
	public void AddMixingTransform(Transform mix, bool recursive) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC63D34 Offset: 0xC63D34 VA: 0xC63D34
	// RVA: 0x1322D5C Offset: 0x1322D5C VA: 0x1322D5C
	public void AddMixingTransform(Transform mix) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63D44 Offset: 0xC63D44 VA: 0xC63D44
	// RVA: 0x1322D64 Offset: 0x1322D64 VA: 0x1322D64
	public string get_name() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC63D54 Offset: 0xC63D54 VA: 0xC63D54
	// RVA: 0x1322DD0 Offset: 0x1322DD0 VA: 0x1322DD0
	public void set_blendMode(AnimationBlendMode value) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2724
{}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC654C4 Offset: 0xC654C4 VA: 0xC654C4
[RequireComponent] // RVA: 0xC654C4 Offset: 0xC654C4 VA: 0xC654C4
[NativeClassAttribute] // RVA: 0xC654C4 Offset: 0xC654C4 VA: 0xC654C4
public sealed class Cloth : Component // TypeDefIndex: 2725
{
	// Properties
	public float sleepThreshold { get; set; }
	public float bendingStiffness { get; set; }
	public float stretchingStiffness { get; set; }
	public float damping { get; set; }
	public Vector3 externalAcceleration { get; set; }
	public Vector3 randomAcceleration { get; set; }
	public bool useGravity { get; set; }
	public bool enabled { get; set; }
	public float friction { get; set; }
	public float collisionMassScale { get; set; }
	public bool enableContinuousCollision { get; set; }
	public float useVirtualParticles { get; set; }
	public float worldVelocityScale { get; set; }
	public float worldAccelerationScale { get; set; }
	public float clothSolverFrequency { get; set; }
	public bool useTethers { get; set; }
	public float stiffnessFrequency { get; set; }
	public float selfCollisionDistance { get; set; }
	public float selfCollisionStiffness { get; set; }
	[ObsoleteAttribute] // RVA: 0xC6573C Offset: 0xC6573C VA: 0xC6573C
	public bool selfCollision { get; set; }
	public Vector3[] vertices { get; }
	public Vector3[] normals { get; }
	[ObsoleteAttribute] // RVA: 0xC65778 Offset: 0xC65778 VA: 0xC65778
	public float useContinuousCollision { get; set; }
	public ClothSkinningCoefficient[] coefficients { get; set; }
	[ObsoleteAttribute] // RVA: 0xC657B0 Offset: 0xC657B0 VA: 0xC657B0
	public bool solverFrequency { get; set; }
	public CapsuleCollider[] capsuleColliders { get; set; }
	public ClothSphereColliderPair[] sphereColliders { get; set; }

	// Methods

	// RVA: 0x13825FC Offset: 0x13825FC VA: 0x13825FC
	public void .ctor() { }

	// RVA: 0x1382604 Offset: 0x1382604 VA: 0x1382604
	public float get_sleepThreshold() { }

	// RVA: 0x1382670 Offset: 0x1382670 VA: 0x1382670
	public void set_sleepThreshold(float value) { }

	// RVA: 0x13826E4 Offset: 0x13826E4 VA: 0x13826E4
	public float get_bendingStiffness() { }

	// RVA: 0x1382750 Offset: 0x1382750 VA: 0x1382750
	public void set_bendingStiffness(float value) { }

	// RVA: 0x13827C4 Offset: 0x13827C4 VA: 0x13827C4
	public float get_stretchingStiffness() { }

	// RVA: 0x1382830 Offset: 0x1382830 VA: 0x1382830
	public void set_stretchingStiffness(float value) { }

	// RVA: 0x13828A4 Offset: 0x13828A4 VA: 0x13828A4
	public float get_damping() { }

	// RVA: 0x1382910 Offset: 0x1382910 VA: 0x1382910
	public void set_damping(float value) { }

	// RVA: 0x1382984 Offset: 0x1382984 VA: 0x1382984
	public Vector3 get_externalAcceleration() { }

	// RVA: 0x1382A28 Offset: 0x1382A28 VA: 0x1382A28
	public void set_externalAcceleration(Vector3 value) { }

	// RVA: 0x1382AC4 Offset: 0x1382AC4 VA: 0x1382AC4
	public Vector3 get_randomAcceleration() { }

	// RVA: 0x1382B68 Offset: 0x1382B68 VA: 0x1382B68
	public void set_randomAcceleration(Vector3 value) { }

	// RVA: 0x1382C04 Offset: 0x1382C04 VA: 0x1382C04
	public bool get_useGravity() { }

	// RVA: 0x1382C70 Offset: 0x1382C70 VA: 0x1382C70
	public void set_useGravity(bool value) { }

	// RVA: 0x1382CE4 Offset: 0x1382CE4 VA: 0x1382CE4
	public bool get_enabled() { }

	// RVA: 0x1382D50 Offset: 0x1382D50 VA: 0x1382D50
	public void set_enabled(bool value) { }

	// RVA: 0x1382DC4 Offset: 0x1382DC4 VA: 0x1382DC4
	public float get_friction() { }

	// RVA: 0x1382E30 Offset: 0x1382E30 VA: 0x1382E30
	public void set_friction(float value) { }

	// RVA: 0x1382EA4 Offset: 0x1382EA4 VA: 0x1382EA4
	public float get_collisionMassScale() { }

	// RVA: 0x1382F10 Offset: 0x1382F10 VA: 0x1382F10
	public void set_collisionMassScale(float value) { }

	// RVA: 0x1382F84 Offset: 0x1382F84 VA: 0x1382F84
	public bool get_enableContinuousCollision() { }

	// RVA: 0x1382FF0 Offset: 0x1382FF0 VA: 0x1382FF0
	public void set_enableContinuousCollision(bool value) { }

	// RVA: 0x1383064 Offset: 0x1383064 VA: 0x1383064
	public float get_useVirtualParticles() { }

	// RVA: 0x13830D0 Offset: 0x13830D0 VA: 0x13830D0
	public void set_useVirtualParticles(float value) { }

	// RVA: 0x1383144 Offset: 0x1383144 VA: 0x1383144
	public float get_worldVelocityScale() { }

	// RVA: 0x13831B0 Offset: 0x13831B0 VA: 0x13831B0
	public void set_worldVelocityScale(float value) { }

	// RVA: 0x1383224 Offset: 0x1383224 VA: 0x1383224
	public float get_worldAccelerationScale() { }

	// RVA: 0x1383290 Offset: 0x1383290 VA: 0x1383290
	public void set_worldAccelerationScale(float value) { }

	// RVA: 0x1383304 Offset: 0x1383304 VA: 0x1383304
	public float get_clothSolverFrequency() { }

	// RVA: 0x1383370 Offset: 0x1383370 VA: 0x1383370
	public void set_clothSolverFrequency(float value) { }

	// RVA: 0x13833E4 Offset: 0x13833E4 VA: 0x13833E4
	public bool get_useTethers() { }

	// RVA: 0x1383450 Offset: 0x1383450 VA: 0x1383450
	public void set_useTethers(bool value) { }

	// RVA: 0x13834C4 Offset: 0x13834C4 VA: 0x13834C4
	public float get_stiffnessFrequency() { }

	// RVA: 0x1383530 Offset: 0x1383530 VA: 0x1383530
	public void set_stiffnessFrequency(float value) { }

	// RVA: 0x13835A4 Offset: 0x13835A4 VA: 0x13835A4
	public float get_selfCollisionDistance() { }

	// RVA: 0x1383610 Offset: 0x1383610 VA: 0x1383610
	public void set_selfCollisionDistance(float value) { }

	// RVA: 0x1383684 Offset: 0x1383684 VA: 0x1383684
	public float get_selfCollisionStiffness() { }

	// RVA: 0x13836F0 Offset: 0x13836F0 VA: 0x13836F0
	public void set_selfCollisionStiffness(float value) { }

	// RVA: 0x1383764 Offset: 0x1383764 VA: 0x1383764
	public void GetVirtualParticleIndices(List<uint> indices) { }

	// RVA: 0x1383874 Offset: 0x1383874 VA: 0x1383874
	public void SetVirtualParticleIndices(List<uint> indices) { }

	// RVA: 0x1383984 Offset: 0x1383984 VA: 0x1383984
	public void GetVirtualParticleWeights(List<Vector3> weights) { }

	// RVA: 0x1383A94 Offset: 0x1383A94 VA: 0x1383A94
	public void SetVirtualParticleWeights(List<Vector3> weights) { }

	// RVA: 0x1383BA4 Offset: 0x1383BA4 VA: 0x1383BA4
	public void GetSelfAndInterCollisionIndices(List<uint> indices) { }

	// RVA: 0x1383CB4 Offset: 0x1383CB4 VA: 0x1383CB4
	public void SetSelfAndInterCollisionIndices(List<uint> indices) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC655B4 Offset: 0xC655B4 VA: 0xC655B4
	// RVA: 0x1383DC4 Offset: 0x1383DC4 VA: 0x1383DC4
	public bool get_selfCollision() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC655C4 Offset: 0xC655C4 VA: 0xC655C4
	// RVA: 0x1383E30 Offset: 0x1383E30 VA: 0x1383E30
	public void set_selfCollision(bool value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC655D4 Offset: 0xC655D4 VA: 0xC655D4
	// RVA: 0x1383EA4 Offset: 0x1383EA4 VA: 0x1383EA4
	public Vector3[] get_vertices() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC655E4 Offset: 0xC655E4 VA: 0xC655E4
	// RVA: 0x1383F10 Offset: 0x1383F10 VA: 0x1383F10
	public Vector3[] get_normals() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC655F4 Offset: 0xC655F4 VA: 0xC655F4
	// RVA: 0x1383F7C Offset: 0x1383F7C VA: 0x1383F7C
	public float get_useContinuousCollision() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC65604 Offset: 0xC65604 VA: 0xC65604
	// RVA: 0x1383FE8 Offset: 0x1383FE8 VA: 0x1383FE8
	public void set_useContinuousCollision(float value) { }

	// RVA: 0x138405C Offset: 0x138405C VA: 0x138405C
	public void ClearTransformMotion() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC65614 Offset: 0xC65614 VA: 0xC65614
	// RVA: 0x1384060 Offset: 0x1384060 VA: 0x1384060
	private static void INTERNAL_CALL_ClearTransformMotion(Cloth self) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC65624 Offset: 0xC65624 VA: 0xC65624
	// RVA: 0x13840CC Offset: 0x13840CC VA: 0x13840CC
	public ClothSkinningCoefficient[] get_coefficients() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC65634 Offset: 0xC65634 VA: 0xC65634
	// RVA: 0x1384138 Offset: 0x1384138 VA: 0x1384138
	public void set_coefficients(ClothSkinningCoefficient[] value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC65644 Offset: 0xC65644 VA: 0xC65644
	// RVA: 0x13841AC Offset: 0x13841AC VA: 0x13841AC
	public void SetEnabledFading(bool enabled, float interpolationTime) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC65654 Offset: 0xC65654 VA: 0xC65654
	// RVA: 0x1384238 Offset: 0x1384238 VA: 0x1384238
	public void SetEnabledFading(bool enabled) { }

	// RVA: 0x1384244 Offset: 0x1384244 VA: 0x1384244
	public bool get_solverFrequency() { }

	// RVA: 0x1384260 Offset: 0x1384260 VA: 0x1384260
	public void set_solverFrequency(bool value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC65664 Offset: 0xC65664 VA: 0xC65664
	// RVA: 0x13842A8 Offset: 0x13842A8 VA: 0x13842A8
	public CapsuleCollider[] get_capsuleColliders() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC65674 Offset: 0xC65674 VA: 0xC65674
	// RVA: 0x1384314 Offset: 0x1384314 VA: 0x1384314
	public void set_capsuleColliders(CapsuleCollider[] value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC65684 Offset: 0xC65684 VA: 0xC65684
	// RVA: 0x1384388 Offset: 0x1384388 VA: 0x1384388
	public ClothSphereColliderPair[] get_sphereColliders() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC65694 Offset: 0xC65694 VA: 0xC65694
	// RVA: 0x13843F4 Offset: 0x13843F4 VA: 0x13843F4
	public void set_sphereColliders(ClothSphereColliderPair[] value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC656A4 Offset: 0xC656A4 VA: 0xC656A4
	// RVA: 0x1383800 Offset: 0x1383800 VA: 0x1383800
	internal void GetVirtualParticleIndicesMono(object indicesOutList) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC656B4 Offset: 0xC656B4 VA: 0xC656B4
	// RVA: 0x1383910 Offset: 0x1383910 VA: 0x1383910
	internal void SetVirtualParticleIndicesMono(object indicesInList) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC656C4 Offset: 0xC656C4 VA: 0xC656C4
	// RVA: 0x1383A20 Offset: 0x1383A20 VA: 0x1383A20
	internal void GetVirtualParticleWeightsMono(object weightsOutList) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC656D4 Offset: 0xC656D4 VA: 0xC656D4
	// RVA: 0x1383B30 Offset: 0x1383B30 VA: 0x1383B30
	internal void SetVirtualParticleWeightsMono(object weightsInList) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC656E4 Offset: 0xC656E4 VA: 0xC656E4
	// RVA: 0x1383C40 Offset: 0x1383C40 VA: 0x1383C40
	internal void GetSelfAndInterCollisionIndicesMono(object indicesOutList) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC656F4 Offset: 0xC656F4 VA: 0xC656F4
	// RVA: 0x1383D50 Offset: 0x1383D50 VA: 0x1383D50
	internal void SetSelfAndInterCollisionIndicesMono(object indicesInList) { }

	// RVA: 0x13829B4 Offset: 0x13829B4 VA: 0x13829B4
	private void get_externalAcceleration_Injected(out Vector3 ret) { }

	// RVA: 0x1382A50 Offset: 0x1382A50 VA: 0x1382A50
	private void set_externalAcceleration_Injected(ref Vector3 value) { }

	// RVA: 0x1382AF4 Offset: 0x1382AF4 VA: 0x1382AF4
	private void get_randomAcceleration_Injected(out Vector3 ret) { }

	// RVA: 0x1382B90 Offset: 0x1382B90 VA: 0x1382B90
	private void set_randomAcceleration_Injected(ref Vector3 value) { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC65594 Offset: 0xC65594 VA: 0xC65594
public struct ClothSkinningCoefficient // TypeDefIndex: 2726
{
	// Fields
	public float maxDistance; // 0x0
	public float collisionSphereDistance; // 0x4
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC655A4 Offset: 0xC655A4 VA: 0xC655A4
public struct ClothSphereColliderPair // TypeDefIndex: 2727
{
	// Fields
	private SphereCollider m_First; // 0x0
	private SphereCollider m_Second; // 0x8
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2728
{}

// Namespace: UnityEngine
[StaticAccessorAttribute] // RVA: 0xC668E8 Offset: 0xC668E8 VA: 0xC668E8
[NativeHeaderAttribute] // RVA: 0xC668E8 Offset: 0xC668E8 VA: 0xC668E8
public sealed class Event // TypeDefIndex: 2729
{
	// Fields
	internal IntPtr m_Ptr; // 0x10
	private static Event s_Current; // 0x0
	private static Event s_MasterEvent; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC66EE8 Offset: 0xC66EE8 VA: 0xC66EE8
	private static Dictionary<string, int> <>f__switch$map0; // 0x10

	// Properties
	[NativePropertyAttribute] // RVA: 0xC68F18 Offset: 0xC68F18 VA: 0xC68F18
	public EventType rawType { get; }
	[NativePropertyAttribute] // RVA: 0xC68F58 Offset: 0xC68F58 VA: 0xC68F58
	public Vector2 mousePosition { get; }
	[NativePropertyAttribute] // RVA: 0xC68F98 Offset: 0xC68F98 VA: 0xC68F98
	public Vector2 delta { get; }
	[NativePropertyAttribute] // RVA: 0xC68FD8 Offset: 0xC68FD8 VA: 0xC68FD8
	public EventModifiers modifiers { get; set; }
	[NativePropertyAttribute] // RVA: 0xC69018 Offset: 0xC69018 VA: 0xC69018
	public int clickCount { get; }
	[NativePropertyAttribute] // RVA: 0xC69058 Offset: 0xC69058 VA: 0xC69058
	public char character { get; set; }
	[NativePropertyAttribute] // RVA: 0xC69098 Offset: 0xC69098 VA: 0xC69098
	public KeyCode keyCode { get; set; }
	[NativePropertyAttribute] // RVA: 0xC690D8 Offset: 0xC690D8 VA: 0xC690D8
	public int displayIndex { set; }
	public EventType type { get; set; }
	public string commandName { get; }
	public bool shift { get; }
	public bool alt { get; }
	public static Event current { get; }
