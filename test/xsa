
	// RVA: 0x13DE2C0 Offset: 0x13DE2C0 VA: 0x13DE2C0
	private bool HaveCombineOtherServant(UserServantEntity userSvtEntity) { }

	// RVA: 0x13DE788 Offset: 0x13DE788 VA: 0x13DE788
	private bool HaveRequestItemAndQp(UserServantEntity userSvtEntity) { }

	// RVA: 0x13DEDF0 Offset: 0x13DEDF0 VA: 0x13DEDF0
	public int GetEffectLimitCount() { }

	// RVA: 0x13DEE84 Offset: 0x13DEE84 VA: 0x13DEE84
	public void GetHpAndAtk(out int afterHp, out int afterAtk, UserServantEntity userServantEntity) { }

	// RVA: 0x13DEFD0 Offset: 0x13DEFD0 VA: 0x13DEFD0
	public List<int> GetEffectRequestItemList(int limitCnt) { }

	// RVA: 0x13DF18C Offset: 0x13DF18C VA: 0x13DF18C Slot: 5
	protected override void OnClickHelp() { }

	// RVA: 0x13DF27C Offset: 0x13DF27C VA: 0x13DF27C
	private static void .cctor() { }
}

// Namespace: 
public class CombineHelpInfo // TypeDefIndex: 9560
{
	// Fields
	public int kind; // 0x10
	public string textCode; // 0x18
	public string imageName; // 0x20
	public int line; // 0x28

	// Methods

	// RVA: 0x1317380 Offset: 0x1317380 VA: 0x1317380
	public void .ctor(CombineHelpListViewManager.ItemKind kind, string textCode, string imageName, int line) { }
}

// Namespace: 
public class CombineHelpListViewItem : ListViewItem // TypeDefIndex: 9561
{
	// Fields
	protected CombineHelpInfo info; // 0x70
	protected bool isUse; // 0x78

	// Properties
	public CombineHelpInfo Info { get; }
	public string InfoText { get; }
	public string ImageName { get; }
	public bool IsUse { get; }
	public int LineCnt { get; }
	public int Kind { get; }

	// Methods

	// RVA: 0x13173D0 Offset: 0x13173D0 VA: 0x13173D0
	public void .ctor(int index, CombineHelpInfo info, bool isUse) { }

	// RVA: 0x1317410 Offset: 0x1317410 VA: 0x1317410
	public CombineHelpInfo get_Info() { }

	// RVA: 0x1317418 Offset: 0x1317418 VA: 0x1317418
	public string get_InfoText() { }

	// RVA: 0x1317494 Offset: 0x1317494 VA: 0x1317494
	public string get_ImageName() { }

	// RVA: 0x13174C0 Offset: 0x13174C0 VA: 0x13174C0
	public bool get_IsUse() { }

	// RVA: 0x13174C8 Offset: 0x13174C8 VA: 0x13174C8
	public int get_LineCnt() { }

	// RVA: 0x13174F4 Offset: 0x13174F4 VA: 0x13174F4
	public int get_Kind() { }
}

// Namespace: 
public class CombineHelpListViewItemDraw : MonoBehaviour // TypeDefIndex: 9562
{
	// Fields
	[SerializeField] // RVA: 0xC69774 Offset: 0xC69774 VA: 0xC69774
	private UIAtlas baseAtlas; // 0x18
	[SerializeField] // RVA: 0xC69784 Offset: 0xC69784 VA: 0xC69784
	protected UISprite rangeSprite; // 0x20
	[SerializeField] // RVA: 0xC69794 Offset: 0xC69794 VA: 0xC69794
	protected UISprite baseImageSprite; // 0x28
	[SerializeField] // RVA: 0xC697A4 Offset: 0xC697A4 VA: 0xC697A4
	protected UISprite baseTextSprite; // 0x30
	[SerializeField] // RVA: 0xC697B4 Offset: 0xC697B4 VA: 0xC697B4
	protected UILabel infoTextLabel; // 0x38
	private UIAtlas baseImageBasicAtlas; // 0x40

	// Methods

	// RVA: 0x1317520 Offset: 0x1317520 VA: 0x1317520
	public void .ctor() { }

	// RVA: 0x1317528 Offset: 0x1317528 VA: 0x1317528
	private void Awake() { }

	// RVA: 0x1317564 Offset: 0x1317564 VA: 0x1317564
	public void SetItem(CombineHelpListViewItem item, CombineHelpListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public enum CombineHelpListViewItemDraw.DispMode // TypeDefIndex: 9563
{
	// Fields
	public int value__; // 0x0
	public const CombineHelpListViewItemDraw.DispMode INVISIBLE = 0;
	public const CombineHelpListViewItemDraw.DispMode INVALID = 1;
	public const CombineHelpListViewItemDraw.DispMode VALID = 2;
}

// Namespace: 
public class CombineHelpListViewManager : ListViewManager // TypeDefIndex: 9564
{
	// Fields
	protected static CombineHelpInfo[] itemInfo; // 0x0
	protected static CombineHelpListViewManager.ItemKind[] KindList; // 0x8
	protected CombineHelpListViewManager.InitMode initMode; // 0x138
	[SerializeField] // RVA: 0xC697C4 Offset: 0xC697C4 VA: 0xC697C4
	protected GameObject BaseWindow; // 0x140
	[SerializeField] // RVA: 0xC697D4 Offset: 0xC697D4 VA: 0xC697D4
	protected CombineHelpMenu baseDialog; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xC697E4 Offset: 0xC697E4 VA: 0xC697E4
	[DebuggerBrowsableAttribute] // RVA: 0xC697E4 Offset: 0xC697E4 VA: 0xC697E4
	private CombineHelpListViewManager.CallbackFunc callbackFunc; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xC69820 Offset: 0xC69820 VA: 0xC69820
	[DebuggerBrowsableAttribute] // RVA: 0xC69820 Offset: 0xC69820 VA: 0xC69820
	private CombineHelpListViewManager.CallbackFunc2 callbackFunc2; // 0x158
	protected int callbackCount; // 0x160
	protected static readonly string HELP_BASE_SPRITE_PATH; // 0x10
	protected static readonly string HELP_BASE_SPRITE_NAME; // 0x18
	protected static readonly string HELP_BASE_ALPHA_PATH; // 0x20
	protected static readonly string HELP_BASE_ALPHA_NAME; // 0x28

	// Properties
	public List<CombineHelpListViewObject> ObjectList { get; }
	public List<CombineHelpListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x1317A18 Offset: 0x1317A18 VA: 0x1317A18
	public void .ctor() { }

	// RVA: 0x1317A20 Offset: 0x1317A20 VA: 0x1317A20
	protected void add_callbackFunc(CombineHelpListViewManager.CallbackFunc value) { }

	// RVA: 0x1317B10 Offset: 0x1317B10 VA: 0x1317B10
	protected void remove_callbackFunc(CombineHelpListViewManager.CallbackFunc value) { }

	// RVA: 0x1317C00 Offset: 0x1317C00 VA: 0x1317C00
	protected void add_callbackFunc2(CombineHelpListViewManager.CallbackFunc2 value) { }

	// RVA: 0x1317CF0 Offset: 0x1317CF0 VA: 0x1317CF0
	protected void remove_callbackFunc2(CombineHelpListViewManager.CallbackFunc2 value) { }

	// RVA: 0x1317DE0 Offset: 0x1317DE0 VA: 0x1317DE0
	public List<CombineHelpListViewObject> get_ObjectList() { }

	// RVA: 0x1317FAC Offset: 0x1317FAC VA: 0x1317FAC
	public List<CombineHelpListViewObject> get_ClippingObjectList() { }

	// RVA: 0x131828C Offset: 0x131828C VA: 0x131828C
	public void LoadBaseSprite() { }

	// RVA: 0x1318484 Offset: 0x1318484 VA: 0x1318484
	public void ReleaseBaseSprite() { }

	// RVA: 0x13185AC Offset: 0x13185AC VA: 0x13185AC
	public void CreateList() { }

	// RVA: 0x131884C Offset: 0x131884C VA: 0x131884C
	public void CloseHelpDialog(CombineHelpListViewManager.CallbackFunc2 callback) { }

	// RVA: 0x1318978 Offset: 0x1318978 VA: 0x1318978
	private void WaitFadeOut() { }

	// RVA: 0x1318B94 Offset: 0x1318B94 VA: 0x1318B94
	protected void Callback() { }

	// RVA: 0x1318DB0 Offset: 0x1318DB0 VA: 0x1318DB0
	public CombineHelpListViewItem GetItem(int index) { }

	// RVA: 0x1318E58 Offset: 0x1318E58 VA: 0x1318E58 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1318F64 Offset: 0x1318F64 VA: 0x1318F64
	protected void RequestListObject(CombineHelpListViewObject.InitMode mode, float delay) { }

	// RVA: 0x13191F0 Offset: 0x13191F0 VA: 0x13191F0
	protected void RequestListObject(CombineHelpListViewObject.InitMode mode) { }

	// RVA: 0x1319468 Offset: 0x1319468 VA: 0x1319468
	protected void OnMoveEnd() { }

	// RVA: 0x13195A0 Offset: 0x13195A0 VA: 0x13195A0
	private static void .cctor() { }
}

// Namespace: 
public enum CombineHelpListViewManager.ItemKind // TypeDefIndex: 9565
{
	// Fields
	public int value__; // 0x0
	public const CombineHelpListViewManager.ItemKind COMBINE = 1;
	public const CombineHelpListViewManager.ItemKind COMBINE_SKILL = 2;
	public const CombineHelpListViewManager.ItemKind COMBINE_SVT_EQ = 3;
	public const CombineHelpListViewManager.ItemKind COMBINE_LIMIT = 4;
	public const CombineHelpListViewManager.ItemKind COMBINE_NP = 5;
	public const CombineHelpListViewManager.ItemKind COMBINE_LV_EXCEED = 6;
	public const CombineHelpListViewManager.ItemKind COMBINE_COSTUME = 7;
	public const CombineHelpListViewManager.ItemKind COMBINE_CMD_CODE = 8;
	public const CombineHelpListViewManager.ItemKind COMBINE_FRIENDSHIP_EXCEED = 9;
	public const CombineHelpListViewManager.ItemKind COMBINE_SPECIAL_ASCENSION = 10;
	public const CombineHelpListViewManager.ItemKind COMBINE_CMD_CARD_EXCEED = 11;
	public const CombineHelpListViewManager.ItemKind COMBINE_APPEND_SKILL = 12;
	public const CombineHelpListViewManager.ItemKind COMBINE_BLANK = 13;
}

// Namespace: 
public enum CombineHelpListViewManager.InitMode // TypeDefIndex: 9566
{
	// Fields
	public int value__; // 0x0
	public const CombineHelpListViewManager.InitMode NONE = 0;
	public const CombineHelpListViewManager.InitMode LOADING = 1;
	public const CombineHelpListViewManager.InitMode LOADED = 2;
}

// Namespace: 
public sealed class CombineHelpListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 9567
{
	// Methods

	// RVA: 0x131A0E0 Offset: 0x131A0E0 VA: 0x131A0E0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1318BB0 Offset: 0x1318BB0 VA: 0x1318BB0 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x131A0F0 Offset: 0x131A0F0 VA: 0x131A0F0 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x131A124 Offset: 0x131A124 VA: 0x131A124 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class CombineHelpListViewManager.CallbackFunc2 : MulticastDelegate // TypeDefIndex: 9568
{
	// Methods

	// RVA: 0x131A130 Offset: 0x131A130 VA: 0x131A130
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1318994 Offset: 0x1318994 VA: 0x1318994 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x131A140 Offset: 0x131A140 VA: 0x131A140 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x131A174 Offset: 0x131A174 VA: 0x131A174 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44784 Offset: 0xC44784 VA: 0xC44784
private sealed class CombineHelpListViewManager.<LoadBaseSprite>c__AnonStorey0 // TypeDefIndex: 9569
{
	// Fields
	internal string[] path; // 0x10
	internal CombineHelpListViewManager $this; // 0x18

	// Methods

	// RVA: 0x131847C Offset: 0x131847C VA: 0x131847C
	public void .ctor() { }

	// RVA: 0x1319DBC Offset: 0x1319DBC VA: 0x1319DBC
	internal void <>m__0() { }
}

// Namespace: 
public class CombineHelpListViewObject : ListViewObject // TypeDefIndex: 9570
{
	// Fields
	protected CombineHelpListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC6985C Offset: 0xC6985C VA: 0xC6985C
	[DebuggerBrowsableAttribute] // RVA: 0xC6985C Offset: 0xC6985C VA: 0xC6985C
	private Action callbackFunc; // 0x70
	protected CombineHelpListViewItemDraw itemDraw; // 0x78
	protected CombineHelpListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x131A180 Offset: 0x131A180 VA: 0x131A180
	public void .ctor() { }

	// RVA: 0x131A1E8 Offset: 0x131A1E8 VA: 0x131A1E8
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x131A2D4 Offset: 0x131A2D4 VA: 0x131A2D4
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x131A3C0 Offset: 0x131A3C0 VA: 0x131A3C0
	protected void Awake() { }

	// RVA: 0x131A434 Offset: 0x131A434 VA: 0x131A434
	private void OnDestroy() { }

	// RVA: 0x1318208 Offset: 0x1318208 VA: 0x1318208
	public CombineHelpListViewItem GetItem() { }

	// RVA: 0x131A4E0 Offset: 0x131A4E0 VA: 0x131A4E0 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x131A4EC Offset: 0x131A4EC VA: 0x131A4EC Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x131A574 Offset: 0x131A574 VA: 0x131A574
	public void Init(CombineHelpListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x131916C Offset: 0x131916C VA: 0x131916C
	public void Init(CombineHelpListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x13193E4 Offset: 0x13193E4 VA: 0x13193E4
	public void Init(CombineHelpListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x1318EE4 Offset: 0x1318EE4 VA: 0x1318EE4
	public void Init(CombineHelpListViewObject.InitMode initMode) { }

	// RVA: 0x131A738 Offset: 0x131A738 VA: 0x131A738
	protected void SetupDisp() { }
}

// Namespace: 
public enum CombineHelpListViewObject.InitMode // TypeDefIndex: 9571
{
	// Fields
	public int value__; // 0x0
	public const CombineHelpListViewObject.InitMode INVISIBLE = 0;
	public const CombineHelpListViewObject.InitMode INVALID = 1;
	public const CombineHelpListViewObject.InitMode VALID = 2;
	public const CombineHelpListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum CombineHelpListViewObject.State // TypeDefIndex: 9572
{
	// Fields
	public int value__; // 0x0
	public const CombineHelpListViewObject.State INIT = 0;
	public const CombineHelpListViewObject.State IDLE = 1;
	public const CombineHelpListViewObject.State MOVE = 2;
	public const CombineHelpListViewObject.State INPUT = 3;
}

// Namespace: 
public class CombineHelpMenu : BaseDialog // TypeDefIndex: 9573
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC69898 Offset: 0xC69898 VA: 0xC69898
	[DebuggerBrowsableAttribute] // RVA: 0xC69898 Offset: 0xC69898 VA: 0xC69898
	private CombineHelpMenu.CallbackFunc callbackFunc; // 0x58

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x131A848 Offset: 0x131A848 VA: 0x131A848
	public void .ctor() { }

	// RVA: 0x131A8B0 Offset: 0x131A8B0 VA: 0x131A8B0
	protected void add_callbackFunc(CombineHelpMenu.CallbackFunc value) { }

	// RVA: 0x131A99C Offset: 0x131A99C VA: 0x131A99C
	protected void remove_callbackFunc(CombineHelpMenu.CallbackFunc value) { }

	// RVA: 0x131AA88 Offset: 0x131AA88 VA: 0x131AA88
	public void Init() { }

	// RVA: 0x131883C Offset: 0x131883C VA: 0x131883C
	public void Open() { }

	// RVA: 0x13188F0 Offset: 0x13188F0 VA: 0x13188F0
	public void Close(CombineHelpMenu.CallbackFunc callback) { }

	// RVA: 0x131AA90 Offset: 0x131AA90 VA: 0x131AA90
	private void endClose() { }

	// RVA: 0x131ACD0 Offset: 0x131ACD0 VA: 0x131ACD0 Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
public sealed class CombineHelpMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 9574
{
	// Methods

	// RVA: 0x13188E0 Offset: 0x13188E0 VA: 0x13188E0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x131AAD0 Offset: 0x131AAD0 VA: 0x131AAD0 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x131AD18 Offset: 0x131AD18 VA: 0x131AD18 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x131AD4C Offset: 0x131AD4C VA: 0x131AD4C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class MenuListControl : MonoBehaviour // TypeDefIndex: 9575
{
	// Fields
	public static readonly float ALPHA_ANIMATION_SPD; // 0x0
	public static readonly int ALPHA_ANIMATION_FRAME_NUM; // 0x4
	public static readonly float ALPHA_ANIMATION_INTERVAL; // 0x8
	public CombineInitData combineData; // 0x18
	public UIScrollView menuListScrollView; // 0x20
	public UIGrid menuListGrid; // 0x28
	private List<EventInfoData> combineEventList; // 0x30
	private List<EventNoticeControl> noticeList; // 0x38
	private List<SetNoticeNumControl> setNoticeNumList; // 0x40
	public RestTimeNoticeControl[] restTimeNoticeList; // 0x48
	private float alphaAnimNow; // 0x50
	private float alphaAnimTimeOld; // 0x54
	private AlphaTransitionCalculator fadeUIAlphaCalculator; // 0x58

	// Properties
	public float AlphaAnimNow { get; }

	// Methods

	// RVA: 0x162BCC8 Offset: 0x162BCC8 VA: 0x162BCC8
	public void .ctor() { }

	// RVA: 0x162BDC8 Offset: 0x162BDC8 VA: 0x162BDC8
	private void Update() { }

	// RVA: 0x162C074 Offset: 0x162C074 VA: 0x162C074
	public void InitMenuEventNotice() { }

	// RVA: 0x162C298 Offset: 0x162C298 VA: 0x162C298
	public void SetMenuEventNotice() { }

	// RVA: 0x162C638 Offset: 0x162C638 VA: 0x162C638
	public void SetBudgeNumNotice() { }

	// RVA: 0x162C2BC Offset: 0x162C2BC VA: 0x162C2BC
	private void checkEventNotice() { }

	// RVA: 0x162C890 Offset: 0x162C890 VA: 0x162C890
	private EventInfoData setEventInfo(EventCampaignEntity combineEventEnt, EventEntity eventEnt) { }

	// RVA: 0x162C9A4 Offset: 0x162C9A4 VA: 0x162C9A4
	public List<EventInfoData> getCombineEventList() { }

	// RVA: 0x162C9AC Offset: 0x162C9AC VA: 0x162C9AC
	public void resetScrollView() { }

	// RVA: 0x162C9EC Offset: 0x162C9EC VA: 0x162C9EC
	public void setBannerIcon(UISprite targetSprite, EventEntity eventEntity) { }

	// RVA: 0x162CA98 Offset: 0x162CA98 VA: 0x162CA98
	public void setCombineEnableNum(CombineEnableData enableData) { }

	// RVA: 0x162BEE8 Offset: 0x162BEE8 VA: 0x162BEE8
	private void UpdateAnim() { }

	// RVA: 0x162CE34 Offset: 0x162CE34 VA: 0x162CE34
	private void ResetAlphaAnimTime() { }

	// RVA: 0x162CC80 Offset: 0x162CC80 VA: 0x162CC80
	private AlphaTransitionCalculator CreateAlphaCalculator() { }

	// RVA: 0x162C4E0 Offset: 0x162C4E0 VA: 0x162C4E0
	public void SetEventNotice() { }

	// RVA: 0x162CD44 Offset: 0x162CD44 VA: 0x162CD44
	private void UpdateEventNoticeAlpha() { }

	// RVA: 0x162CE7C Offset: 0x162CE7C VA: 0x162CE7C
	public float get_AlphaAnimNow() { }

	// RVA: 0x162CE84 Offset: 0x162CE84 VA: 0x162CE84
	private static void .cctor() { }
}

// Namespace: 
public enum MenuListControl.CombineKind // TypeDefIndex: 9576
{
	// Fields
	public int value__; // 0x0
	public const MenuListControl.CombineKind SVT_COMBINE = 0;
	public const MenuListControl.CombineKind SKILL_COMBINE = 1;
	public const MenuListControl.CombineKind SVTEQ_COMBINE = 2;
	public const MenuListControl.CombineKind LIMIT_UP = 3;
	public const MenuListControl.CombineKind SPECIAL_ASCENSION = 4;
	public const MenuListControl.CombineKind FRIENDSHIP = 5;
	public const MenuListControl.CombineKind COMMAND_CODE = 6;
	public const MenuListControl.CombineKind COMMAND_CARD_EXCEED = 7;
	public const MenuListControl.CombineKind APPEND_SKILL = 8;
	public const MenuListControl.CombineKind NP_COMBINE = 9;
	public const MenuListControl.CombineKind LV_EXCEED = 10;
	public const MenuListControl.CombineKind SVT_COSTUME = 11;
}

// Namespace: 
public static class NoblePhantasmNameOverwriter // TypeDefIndex: 9577
{
	// Methods

	// RVA: 0x138A1B4 Offset: 0x138A1B4 VA: 0x138A1B4
	public static void SetOverwriteNpLabel(UserServantEntity entity, UILabel npNameLabel, UILabel npRubyLabel) { }

	// RVA: 0x138A470 Offset: 0x138A470 VA: 0x138A470
	private static void SetOverwriteText(UILabel label, string overwriteText) { }
}

// Namespace: 
public class NpCombineControl : CombineMenuControl // TypeDefIndex: 9578
{
	// Fields
	[SerializeField] // RVA: 0xC698D4 Offset: 0xC698D4 VA: 0xC698D4
	private GameObject defaultNpInfo; // 0x68
	[SerializeField] // RVA: 0xC698E4 Offset: 0xC698E4 VA: 0xC698E4
	private GameObject npCombineInfoPrefab; // 0x70
	[SerializeField] // RVA: 0xC698F4 Offset: 0xC698F4 VA: 0xC698F4
	private UILabel currentInfoLb; // 0x78
	[SerializeField] // RVA: 0xC69904 Offset: 0xC69904 VA: 0xC69904
	private UILabel afterInfoLb; // 0x80
	[SerializeField] // RVA: 0xC69914 Offset: 0xC69914 VA: 0xC69914
	private UISprite eventNoticeImg; // 0x88
	[SerializeField] // RVA: 0xC69924 Offset: 0xC69924 VA: 0xC69924
	private UIButton selectMaterialSvtBtn; // 0x90
	[SerializeField] // RVA: 0xC69934 Offset: 0xC69934 VA: 0xC69934
	private UILabel detailInfoLb; // 0x98
	[SerializeField] // RVA: 0xC69944 Offset: 0xC69944 VA: 0xC69944
	private UILabel preSelectBaseLb; // 0xA0
	[SerializeField] // RVA: 0xC69954 Offset: 0xC69954 VA: 0xC69954
	private GameObject baseSelectInfoLb; // 0xA8
	[SerializeField] // RVA: 0xC69964 Offset: 0xC69964 VA: 0xC69964
	private GameObject maxLvStatusInfo; // 0xB0
	[SerializeField] // RVA: 0xC69974 Offset: 0xC69974 VA: 0xC69974
	private GameObject materialSvtPrefab; // 0xB8
	[SerializeField] // RVA: 0xC69984 Offset: 0xC69984 VA: 0xC69984
	private UIGrid materialGrid; // 0xC0
	[SerializeField] // RVA: 0xC69994 Offset: 0xC69994 VA: 0xC69994
	private UILabel haveQpLb; // 0xC8
	[SerializeField] // RVA: 0xC699A4 Offset: 0xC699A4 VA: 0xC699A4
	private UILabel needQpLb; // 0xD0
	[SerializeField] // RVA: 0xC699B4 Offset: 0xC699B4 VA: 0xC699B4
	private UILabel qpLb; // 0xD8
	[SerializeField] // RVA: 0xC699C4 Offset: 0xC699C4 VA: 0xC699C4
	private UIButton combineBtn; // 0xE0
	[SerializeField] // RVA: 0xC699D4 Offset: 0xC699D4 VA: 0xC699D4
	private UILabel combineBtnTxt; // 0xE8
	[SerializeField] // RVA: 0xC699E4 Offset: 0xC699E4 VA: 0xC699E4
	private UISprite combineBtnBg; // 0xF0
	[SerializeField] // RVA: 0xC699F4 Offset: 0xC699F4 VA: 0xC699F4
	private UISprite combineTxtImg; // 0xF8
	[SerializeField] // RVA: 0xC69A04 Offset: 0xC69A04 VA: 0xC69A04
	private GameObject baseLvInfo; // 0x100
	[SerializeField] // RVA: 0xC69A14 Offset: 0xC69A14 VA: 0xC69A14
	private UIIconLabel iconLabel; // 0x108
	[SerializeField] // RVA: 0xC69A24 Offset: 0xC69A24 VA: 0xC69A24
	private UIScrollView scrollView; // 0x110
	[SerializeField] // RVA: 0xC69A34 Offset: 0xC69A34 VA: 0xC69A34
	private UIWrapContent wrapContent; // 0x118
	[SerializeField] // RVA: 0xC69A44 Offset: 0xC69A44 VA: 0xC69A44
	private UICenterOnChild centerChild; // 0x120
	[SerializeField] // RVA: 0xC69A54 Offset: 0xC69A54 VA: 0xC69A54
	private GameObject arrowInfo; // 0x128
	private bool isScrollNpInfo; // 0x130
	private int currentMoveIdx; // 0x134
	private int haveQpVal; // 0x138
	private int spendQpVal; // 0x13C
	private int userQP; // 0x140
	private int baseSvtId; // 0x144
	private bool isSelectBase; // 0x148
	private List<SvtUseNpData> svtNpDataList; // 0x150
	private SetLevelUpData lvUpData; // 0x158
	private UICharaGraphTexture charaGraph; // 0x160
	private GameObject targetObject; // 0x168
	private List<EventInfoData> combineEventList; // 0x170
	private List<long> selectMtUsrSvtIdList; // 0x178
	protected string[] battleLoadList; // 0x180
	private GameObject tdObject; // 0x188
	private bool isExceedMaxLv; // 0x190
	private bool isCombineSvt; // 0x191
	private bool isExceeded; // 0x192
	[CompilerGeneratedAttribute] // RVA: 0xC69A64 Offset: 0xC69A64 VA: 0xC69A64
	[DebuggerBrowsableAttribute] // RVA: 0xC69A64 Offset: 0xC69A64 VA: 0xC69A64
	private bool <isExchangeSvtInList>k__BackingField; // 0x193

	// Properties
	public bool isExchangeSvtInList { get; set; }

	// Methods

	// RVA: 0x139038C Offset: 0x139038C VA: 0x139038C
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF500 Offset: 0xCCF500 VA: 0xCCF500
	// RVA: 0x1390394 Offset: 0x1390394 VA: 0x1390394
	public bool get_isExchangeSvtInList() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF510 Offset: 0xCCF510 VA: 0xCCF510
	// RVA: 0x139039C Offset: 0x139039C VA: 0x139039C
	private void set_isExchangeSvtInList(bool value) { }

	// RVA: 0x13903A8 Offset: 0x13903A8 VA: 0x13903A8 Slot: 6
	protected override EventTutorialMaster.OpenType GetTutorialOpenType() { }

	// RVA: 0x13903B0 Offset: 0x13903B0 VA: 0x13903B0
	public void InitSvtNpCombine() { }

	// RVA: 0x13904D4 Offset: 0x13904D4 VA: 0x13904D4
	private void InitInfo() { }

	// RVA: 0x1390E7C Offset: 0x1390E7C VA: 0x1390E7C
	public void RefreshSvtNpCombineEndShowServant() { }

	// RVA: 0x1390A5C Offset: 0x1390A5C VA: 0x1390A5C
	private void InitDispCombineInfo() { }

	// RVA: 0x13912A8 Offset: 0x13912A8 VA: 0x13912A8
	private void SetHaveQpInfo() { }

	// RVA: 0x139133C Offset: 0x139133C VA: 0x139133C
	public void SetSelectMaterialEnable() { }

	// RVA: 0x1391664 Offset: 0x1391664 VA: 0x1391664
	public void SetBaseSvtNpInfo(UserServantEntity usrSvtEn) { }

	// RVA: 0x1391C84 Offset: 0x1391C84 VA: 0x1391C84
	public void SetBaseSvtCardImg(UserServantEntity usrSvtData) { }

	// RVA: 0x13918C0 Offset: 0x13918C0 VA: 0x13918C0
	private List<SvtUseNpData> GetSvtNpData(UserServantEntity usrSvtData) { }

	// RVA: 0x1391E38 Offset: 0x1391E38 VA: 0x1391E38
	private List<SvtUseNpData> GetNpAddDataList(UserServantEntity usrSvtData, TreasureDvcInfo tdInfo, ServantTreasureDeviceAddEntity tdAddEntity) { }

	// RVA: 0x1392264 Offset: 0x1392264 VA: 0x1392264
	private int GetLimitCountForSingle(int svtId, int cardLimitCount) { }

	// RVA: 0x1392330 Offset: 0x1392330 VA: 0x1392330
	private int GetLimitCountForMulti(int svtId, int cardLimitCount, int condLimitCount, int index) { }

	// RVA: 0x13924E4 Offset: 0x13924E4 VA: 0x13924E4
	private void SetCombineNpList() { }

	// RVA: 0x1392970 Offset: 0x1392970 VA: 0x1392970
	public void ChangeTargetInfo(bool isdecide) { }

	// RVA: 0x1392A44 Offset: 0x1392A44 VA: 0x1392A44
	public void SetSvtNpCombineData() { }

	// RVA: 0x1392F50 Offset: 0x1392F50 VA: 0x1392F50
	public void SetEnableCombineBtn(bool isCombine) { }

	// RVA: 0x1392FF8 Offset: 0x1392FF8 VA: 0x1392FF8
	public void SetNpCombineNullData() { }

	// RVA: 0x13930BC Offset: 0x13930BC VA: 0x13930BC
	public void SetNpCombineData(SetCombineData data) { }

	// RVA: 0x1393BB8 Offset: 0x1393BB8 VA: 0x1393BB8
	public UserServantEntity GetBaseUsrSvtData() { }

	// RVA: 0x13907D4 Offset: 0x13907D4 VA: 0x13907D4
	public void DestroyGrid() { }

	// RVA: 0x1390924 Offset: 0x1390924 VA: 0x1390924
	public void DestroyMaterialGrid() { }

	// RVA: 0x1390C50 Offset: 0x1390C50 VA: 0x1390C50
	private void SetExeBtnState() { }

	// RVA: 0x1393CB8 Offset: 0x1393CB8 VA: 0x1393CB8
	public SetLevelUpData GetTargetData() { }

	// RVA: 0x1393CC0 Offset: 0x1393CC0 VA: 0x1393CC0
	public void OnClickExeCombine() { }

	// RVA: 0x1393EC8 Offset: 0x1393EC8 VA: 0x1393EC8
	public bool CheckTdLvMax(UserServantEntity resData) { }

	// RVA: 0x1393FA8 Offset: 0x1393FA8 VA: 0x1393FA8
	public void SetStateInfoMsg(CombineRootComponent.StateType state) { }

	// RVA: 0x13941E8 Offset: 0x13941E8 VA: 0x13941E8
	public void OnClickMaterialSelectList() { }

	// RVA: 0x1392DB8 Offset: 0x1392DB8 VA: 0x1392DB8
	public static int GetNpLv(UserServantEntity baseUsrSvtData, long[] mtSvtIdList, out int tmpTargetLv) { }

	// RVA: 0x1393AD4 Offset: 0x1393AD4 VA: 0x1393AD4
	public static int GetQp(int currentId, int currentLv, int resNpLv) { }

	// RVA: 0x1393A40 Offset: 0x1393A40 VA: 0x1393A40
	public static bool CheckConfirm(long myUserSvtId) { }

	// RVA: 0x139426C Offset: 0x139426C VA: 0x139426C
	public static bool CheckConfirm(UserServantEntity selectUsrSvtEnt) { }

	// RVA: 0x13913EC Offset: 0x13913EC VA: 0x13913EC
	private void SetEnabledNpInfoScroll(bool enabled) { }

	// RVA: 0x1391470 Offset: 0x1391470 VA: 0x1391470
	private void ResetScrollView() { }

	// RVA: 0x139436C Offset: 0x139436C VA: 0x139436C
	public void OnCenterOnChildFinished() { }

	// RVA: 0x1394404 Offset: 0x1394404 VA: 0x1394404
	public void onClickRightArrow() { }

	// RVA: 0x139455C Offset: 0x139455C VA: 0x139455C
	public void onClickLeftArrow() { }

	// RVA: 0x139440C Offset: 0x139440C VA: 0x139440C
	private void OnClickArrow(int delte) { }
}

// Namespace: 
public class NpMaterialSvtInfo : MonoBehaviour // TypeDefIndex: 9579
{
	// Fields
	public ServantFaceIconComponent svtFaseIconComp; // 0x18
	public UILabel statusLb; // 0x20
	public GameObject npLvInfo; // 0x28
	public UIIconLabel iconLabel; // 0x30
	public UILabel exceededTxt; // 0x38
	public UISprite materialTdSprite; // 0x40
	private int index; // 0x48
	private long selectUsrSvtId; // 0x50
	private IconLabelInfo iconLabelInfo; // 0x58
	private UserServantEntity selectUsrSvtEnt; // 0x60
	protected NpMaterialSvtInfo.ClickDelegate callbackFunc; // 0x68

	// Methods

	// RVA: 0x1394A1C Offset: 0x1394A1C VA: 0x1394A1C
	public void .ctor() { }

	// RVA: 0x13937CC Offset: 0x13937CC VA: 0x13937CC
	public void setMaterialSvtInfo(int idx, UserServantEntity baseData, long selectUsrSvtId, NpMaterialSvtInfo.ClickDelegate callback) { }

	// RVA: 0x1394B84 Offset: 0x1394B84 VA: 0x1394B84
	public int getIndex() { }

	// RVA: 0x1394B8C Offset: 0x1394B8C VA: 0x1394B8C
	public void OnClickMaterialSvt() { }

	// RVA: 0x1394DF0 Offset: 0x1394DF0 VA: 0x1394DF0
	public void OnClickMaterialStatus() { }

	// RVA: 0x1394A84 Offset: 0x1394A84 VA: 0x1394A84
	public void setNpLvInfo() { }
}

// Namespace: 
public sealed class NpMaterialSvtInfo.ClickDelegate : MulticastDelegate // TypeDefIndex: 9580
{
	// Methods

	// RVA: 0x13937BC Offset: 0x13937BC VA: 0x13937BC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1394BAC Offset: 0x1394BAC VA: 0x1394BAC Slot: 11
	public virtual void Invoke(CombineMenuControl.TargetType type, long usrSvtId) { }

	// RVA: 0x1394E10 Offset: 0x1394E10 VA: 0x1394E10 Slot: 12
	public virtual IAsyncResult BeginInvoke(CombineMenuControl.TargetType type, long usrSvtId, AsyncCallback callback, object object) { }

	// RVA: 0x1394EBC Offset: 0x1394EBC VA: 0x1394EBC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class RestTimeNoticeControl : MonoBehaviour // TypeDefIndex: 9581
{
	// Fields
	[SerializeField] // RVA: 0xC69AA0 Offset: 0xC69AA0 VA: 0xC69AA0
	private UILabel restTimeLabel; // 0x18
	[SerializeField] // RVA: 0xC69AB0 Offset: 0xC69AB0 VA: 0xC69AB0
	private UISprite textImage; // 0x20
	private long endAt; // 0x28
	private long startAt; // 0x30
	private bool isTimeOver; // 0x38

	// Methods

	// RVA: 0x158BC08 Offset: 0x158BC08 VA: 0x158BC08
	public void .ctor() { }

	// RVA: 0x158BC10 Offset: 0x158BC10 VA: 0x158BC10
	public void SetTime(long startAt, long endAt) { }

	// RVA: 0x158BC18 Offset: 0x158BC18 VA: 0x158BC18
	private void Start() { }

	// RVA: 0x158BD08 Offset: 0x158BD08 VA: 0x158BD08
	private void SetRestTimeLabelColorWhite() { }

	// RVA: 0x158BDC8 Offset: 0x158BDC8 VA: 0x158BDC8
	public void UpdateRestTime(long now) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF520 Offset: 0xCCF520 VA: 0xCCF520
	// RVA: 0x158C12C Offset: 0x158C12C VA: 0x158C12C
	private void <Start>m__0() { }
}

// Namespace: 
public class CombineResultEffectComponent : MonoBehaviour // TypeDefIndex: 9582
{
	// Fields
	public SvtCombineResultWindowComponent svtResultInfoWindow; // 0x18
	public SkillUpResultWindowComponent skillResultInfoWindow; // 0x20
	public LimitUpResultCheckComponent limitUpResultCheck; // 0x28
	public FriendshipExceedResultWindowComponent friendshipExceedResultWindow; // 0x30
	public CommandCardExceedResultWindowComponent commandCardExceedResultWindow; // 0x38
	public GameObject unSummon; // 0x40
	public UILabel unSummonLabel; // 0x48
	public UILabel unSummonDetail; // 0x50
	private readonly string[] startAniName; // 0x58
	private readonly string LimitAnimName; // 0x60
	private readonly float NAME_REVEAL_INVOKE_TIME; // 0x68
	private readonly float NAME_REVEAL_FADE_TIME; // 0x6C
	private readonly float NAME_REVEAL_EMISSION_BASE_SIZE; // 0x70
	private readonly float NAME_REVEAL_EMISSION_BASE_RATE; // 0x74
	private readonly float NAME_REVEAL_EMISSION_BASE_BOX_X; // 0x78
	private readonly float NAME_REVEAL_EMISSION_BASE_BOX_Y; // 0x7C
	public Collider bgCollider; // 0x80
	public GameObject touchInfo; // 0x88
	public LimitCountSealDialogComponent limitCountSealDialog; // 0x90
	private PlayMakerFSM fsm; // 0x98
	private GameObject effect; // 0xA0
	private CombineResultEffectComponent.Kind kind; // 0xA8
	private UIStandFigureR currentSvtFigure; // 0xB0
	private UIStandFigureR limitUpSvtFigure; // 0xB8
	private List<StandFigureCollect> currentFigureCollectList; // 0xC0
	private List<StandFigureCollect> afterFigureCollectList; // 0xC8
	private UserServantEntity baseUsrSvtData; // 0xD0
	private UserServantEntity resUsrSvtData; // 0xD8
	private bool setResUsrSvtData; // 0xE0
	private string combineVoiceId; // 0xE8
	private bool combineStatusDisp; // 0xF0
	private int voiceSvtId; // 0xF4
	private int friendship; // 0xF8
	private ServantChangeEntity crtSvtNameData; // 0x100
	private ServantChangeEntity resSvtNameData; // 0x108
	private int baseUsrSvtCollictionLv; // 0x110
	private int baseUsrSvtCollectionLimitCnt; // 0x114
	private int successInfo; // 0x118
	private int normalExp; // 0x11C
	private int addTotalExp; // 0x120
	private int baseSvtId; // 0x124
	private int oldImgLimitCnt; // 0x128
	private int currentImgLimitCnt; // 0x12C
	private int targetId; // 0x130
	private int targetIdOld; // 0x134
	private int targetLv; // 0x138
	private int targetLvOld; // 0x13C
	private int oldFriendShipRank; // 0x140
	private int targetSvtId; // 0x144
	private int targetFlagId; // 0x148
	private bool isSecretTreasureDeviceRankUpAnim; // 0x14C
	private int combineLimitLv; // 0x150
	private string limitUpPlayVoiceLabel; // 0x158
	private string costumeName; // 0x160
	private int costumeId; // 0x168
	private int commandCardIndex; // 0x16C
	private int commandCardExceedCount; // 0x170
	protected CombineResultEffectComponent.ClickDelegate callbackFunc; // 0x178
	private CombineResultEffectComponent.MessageDelegate messageCallback; // 0x180
	private bool isChangeCardImg; // 0x188
	private UICharaGraphTexture nameRevealCard; // 0x190
	private int[] ChangeCardEffectLvList; // 0x198
	private Vector3 standBasePosition; // 0x1A0
	private SePlayer player; // 0x1B0
	private ServantVoiceEntity svtVoiceEntity; // 0x1B8
	private int maxPlayCnt; // 0x1C0
	private int playCnt; // 0x1C4
	private float volume; // 0x1C8
	private string asstName; // 0x1D0
	private string vcName; // 0x1D8
	private ServantVoiceData[] playVoiceList; // 0x1E0
	private static AssetData effectAssetData; // 0x0
	private int genderType; // 0x1E8
	private int skillShowIndex; // 0x1EC
	private bool treasureDeviceEnabled; // 0x1F0
	private bool autoFadeout; // 0x1F1
	private CheckCombineResStatus combineResStatus; // 0x1F8
	private bool isLimitUpSuppression; // 0x200
	private ServantLimitUpVoiceCache.Type displayType; // 0x204
	private bool isResultEffectSkipped; // 0x208
	private CombineResultEffectComponent.CostumeSkillInfoManager costumeSkillInfoManager; // 0x210
	private int tdShowIndex; // 0x218
	private NpInfoAddManager npInfoAddManager; // 0x220
	private HashSet<CombineResultEffectComponent.Kind> limitUpKinds; // 0x228
	[CompilerGeneratedAttribute] // RVA: 0xC69AC0 Offset: 0xC69AC0 VA: 0xC69AC0
	private static Comparison<ServantTreasureDvcEntity> <>f__am$cache0; // 0x8

	// Methods

	// RVA: 0x100CD20 Offset: 0x100CD20 VA: 0x100CD20
	public void .ctor() { }

	// RVA: 0x100D0A4 Offset: 0x100D0A4 VA: 0x100D0A4
	private void Awake() { }

	// RVA: 0x100D12C Offset: 0x100D12C VA: 0x100D12C
	public void SetSkillCombineInfo(CombineResultEffectComponent.Kind kind, UserServantEntity usrSvtData, int targetId, int targetLv, CombineResultEffectComponent.ClickDelegate callback, int targetIdOld = 0, int targetLvOld = 0) { }

	// RVA: 0x100D2CC Offset: 0x100D2CC VA: 0x100D2CC
	public void SetNobleCombineInfo(CombineResultEffectComponent.Kind kind, UserServantEntity usrSvtData, int targetId, int targetLv, CombineResultEffectComponent.ClickDelegate callback, int targetIdOld = 0, int targetLvOld = 0) { }

	// RVA: 0x100D5B4 Offset: 0x100D5B4 VA: 0x100D5B4
	public void SetFriendshipUpInfo(UserServantEntity usrSvtData, int oldFriendShipRank, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x100D684 Offset: 0x100D684 VA: 0x100D684
	public void SetSvtCombineInfo(CombineResultEffectComponent.Kind kind, int infoIdx, UserServantEntity baseData, int baseCollectionLv, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x100D76C Offset: 0x100D76C VA: 0x100D76C
	public void SetSvtCombineInfo(CombineResultEffectComponent.Kind kind, int infoIdx, UserServantEntity baseData, UserServantEntity resData, int svtId, string voiceId, bool statusDisp, int friendship, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x100D8A4 Offset: 0x100D8A4 VA: 0x100D8A4
	public void SetSvtEqCombineInfo(CombineResultEffectComponent.Kind kind, int infoIdx, int normalExp, int addExp, UserServantEntity baseData, int baseCollectionLv, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x100D994 Offset: 0x100D994 VA: 0x100D994
	public void SetLimitUpCombineInfo(CombineResultEffectComponent.Kind kind, UserServantEntity baseData, int baseCollectionLimitCnt, CombineResultEffectComponent.ClickDelegate callback, ServantChangeEntity servantChange, bool autoFadeout = True, ServantLimitUpVoiceCache.Type displayType = 0, int genderType = -1, string playVoiceLabel) { }

	// RVA: 0x100DB58 Offset: 0x100DB58 VA: 0x100DB58
	public void SetNameRevealInfo(ServantChangeEntity before, ServantChangeEntity after, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x100E5AC Offset: 0x100E5AC VA: 0x100E5AC
	private void NameRevealCrossFade() { }

	// RVA: 0x100E5EC Offset: 0x100E5EC VA: 0x100E5EC
	public void SetCostumeCombineInfo(UserServantEntity userSvtEntity, int costumeId, string costumeName, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x100E774 Offset: 0x100E774 VA: 0x100E774
	public void SetPowerUpInfo(UserServantEntity usrSvtData, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x100E834 Offset: 0x100E834 VA: 0x100E834
	public void SetLvExceedCombineInfo(UserServantEntity usrSvtData, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x100EE40 Offset: 0x100EE40 VA: 0x100EE40
	public void SetLvExceedInfoForOtherRoot(UserServantEntity usrSvtData, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x100EF60 Offset: 0x100EF60 VA: 0x100EF60
	public void SetFriendshipCombineInfo(UserServantEntity userSvtData, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x100F168 Offset: 0x100F168 VA: 0x100F168
	public void SetFriendshipCombineInfoForOtherRoot(UserServantEntity userSvtData, int oldFriendShipRank, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x100F298 Offset: 0x100F298 VA: 0x100F298
	public void SetCommandCardExceedInfo(UserServantEntity userServantEntity, int cardIndex, int exceedCount, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x100F4B8 Offset: 0x100F4B8 VA: 0x100F4B8
	public void SetSecretTreasureDeviceInfoForQuestClear(int questId, int phase, CombineResultEffectComponent.MessageDelegate msgCallBack, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x100FDB0 Offset: 0x100FDB0 VA: 0x100FDB0
	public void SetSecretTreasureDeviceInfoForSvtGet(int svtId, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x100FF10 Offset: 0x100FF10 VA: 0x100FF10
	public void SetAppendSkillCombineInfo(UserServantEntity usrSvtData, int currentSkillId, int currentSkillLv, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x100F9B4 Offset: 0x100F9B4 VA: 0x100F9B4
	private bool checkSecretTreasureDeviceData(int svtId) { }

	// RVA: 0x1010028 Offset: 0x1010028 VA: 0x1010028
	private bool CheckCombineLimit(int oldLv, int currentLv) { }

	// RVA: 0x1010158 Offset: 0x1010158 VA: 0x1010158
	public void SetCombineLimit(UserServantEntity baseData, CombineResultEffectComponent.ClickDelegate callback, bool autoFadeout = True) { }

	// RVA: 0x10102AC Offset: 0x10102AC VA: 0x10102AC
	public void InitCombineEffect() { }

	// RVA: 0x1010AA0 Offset: 0x1010AA0 VA: 0x1010AA0
	private void loadBoxGachaEffect() { }

	// RVA: 0x1010D0C Offset: 0x1010D0C VA: 0x1010D0C
	private void endloadEffect(AssetData data) { }

	// RVA: 0x1010E18 Offset: 0x1010E18 VA: 0x1010E18
	public static GameObject getEffect(string name, Transform parentTr) { }

	// RVA: 0x1010FEC Offset: 0x1010FEC VA: 0x1010FEC
