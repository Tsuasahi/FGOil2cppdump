	public const CombineResultEffectComponent.Kind SVT_COMBINE = 0;
	public const CombineResultEffectComponent.Kind LIMITUP = 1;
	public const CombineResultEffectComponent.Kind SKILL_LEVELUP = 2;
	public const CombineResultEffectComponent.Kind SKILLOPEN = 3;
	public const CombineResultEffectComponent.Kind TREASUREDVC_LEVELUP = 4;
	public const CombineResultEffectComponent.Kind TREASUREDVCOPEN = 5;
	public const CombineResultEffectComponent.Kind SVTEQ_COMBINE = 6;
	public const CombineResultEffectComponent.Kind SKILL_RANKUP = 7;
	public const CombineResultEffectComponent.Kind TREASUREDVC_RANKUP = 8;
	public const CombineResultEffectComponent.Kind FRIENDSHIP_UP = 9;
	public const CombineResultEffectComponent.Kind MATERIAL_LIMIT_UP = 10;
	public const CombineResultEffectComponent.Kind POWER_UP = 11;
	public const CombineResultEffectComponent.Kind LV_EXCEED = 12;
	public const CombineResultEffectComponent.Kind FRIENDSHIP_EXCEED = 13;
	public const CombineResultEffectComponent.Kind NAME_REVEAL = 14;
	public const CombineResultEffectComponent.Kind COSTUME_COMBINE = 15;
	public const CombineResultEffectComponent.Kind SECRET_TREASURE_DEVICE_QUEST_CLEAR = 16;
	public const CombineResultEffectComponent.Kind SECRET_TREASURE_DEVICE_SVT_GET = 17;
	public const CombineResultEffectComponent.Kind SECRET_TREASURE_RANKUP = 18;
	public const CombineResultEffectComponent.Kind SPECIAL_ASCENSION = 19;
	public const CombineResultEffectComponent.Kind COMMAND_CARD_EXCEED = 20;
	public const CombineResultEffectComponent.Kind SKILL_RANKUP_DUMMY = 21;
	public const CombineResultEffectComponent.Kind LV_EXCEED_HEROINE = 22;
	public const CombineResultEffectComponent.Kind FRIENDSHIP_EXCEED_HEROINE = 23;
	public const CombineResultEffectComponent.Kind SVT_COMBINE_LIMIT = 24;
	public const CombineResultEffectComponent.Kind APPEND_SKILL = 25;
	public const CombineResultEffectComponent.Kind UNSEAL_LIMIT_UP = 26;
}

// Namespace: 
public sealed class CombineResultEffectComponent.ClickDelegate : MulticastDelegate // TypeDefIndex: 9556
{
	// Methods

	// RVA: 0x1C47BB0 Offset: 0x1C47BB0 VA: 0x1C47BB0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1C47BC0 Offset: 0x1C47BC0 VA: 0x1C47BC0 Slot: 11
	public virtual void Invoke(bool isDecide) { }

	// RVA: 0x1C48340 Offset: 0x1C48340 VA: 0x1C48340 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isDecide, AsyncCallback callback, object object) { }

	// RVA: 0x1C483D0 Offset: 0x1C483D0 VA: 0x1C483D0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class CombineResultEffectComponent.MessageDelegate : MulticastDelegate // TypeDefIndex: 9557
{
	// Methods

	// RVA: 0x1C48728 Offset: 0x1C48728 VA: 0x1C48728
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1C48738 Offset: 0x1C48738 VA: 0x1C48738 Slot: 11
	public virtual void Invoke(string message) { }

	// RVA: 0x1C48AD8 Offset: 0x1C48AD8 VA: 0x1C48AD8 Slot: 12
	public virtual IAsyncResult BeginInvoke(string message, AsyncCallback callback, object object) { }

	// RVA: 0x1C48AFC Offset: 0x1C48AFC VA: 0x1C48AFC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private class CombineResultEffectComponent.CostumeSkillInfo // TypeDefIndex: 9558
{
	// Fields
	public int id; // 0x10
	public int lv; // 0x14

	// Methods

	// RVA: 0x1C483DC Offset: 0x1C483DC VA: 0x1C483DC
	public void .ctor() { }
}

// Namespace: 
private class CombineResultEffectComponent.CostumeSkillInfoManager // TypeDefIndex: 9559
{
	// Fields
	private List<CombineResultEffectComponent.CostumeSkillInfo> beforeSkillList; // 0x10
	private List<CombineResultEffectComponent.CostumeSkillInfo> afterSkillList; // 0x18

	// Methods

	// RVA: 0x1C483E4 Offset: 0x1C483E4 VA: 0x1C483E4
	public void .ctor() { }

	// RVA: 0x1C48478 Offset: 0x1C48478 VA: 0x1C48478
	public void AddBeforeSkill(int id, int lv) { }

	// RVA: 0x1C48530 Offset: 0x1C48530 VA: 0x1C48530
	public void AddAfterSkill(int id, int lv) { }

	// RVA: 0x1C485E8 Offset: 0x1C485E8 VA: 0x1C485E8
	public CombineResultEffectComponent.CostumeSkillInfo GetBeforeSkill(int index) { }

	// RVA: 0x1C48658 Offset: 0x1C48658 VA: 0x1C48658
	public CombineResultEffectComponent.CostumeSkillInfo GetAfterSkill(int index) { }

	// RVA: 0x1C486C8 Offset: 0x1C486C8 VA: 0x1C486C8
	public int GetAfterSkillCount() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB0820 Offset: 0xCB0820 VA: 0xCB0820
private sealed class CombineResultEffectComponent.<setSkillResultInfo>c__AnonStorey1 // TypeDefIndex: 9560
{
	// Fields
	internal Action action; // 0x10
	internal CombineResultEffectComponent $this; // 0x18

	// Methods

	// RVA: 0x1C47EA4 Offset: 0x1C47EA4 VA: 0x1C47EA4
	public void .ctor() { }

	// RVA: 0x1C47EAC Offset: 0x1C47EAC VA: 0x1C47EAC
	internal void <>m__0() { }

	// RVA: 0x1C481B0 Offset: 0x1C481B0 VA: 0x1C481B0
	internal void <>m__1() { }
}

// Namespace: 
private sealed class CombineResultEffectComponent.<setSkillResultInfo>c__AnonStorey1.<setSkillResultInfo>c__AnonStorey2 // TypeDefIndex: 9561
{
	// Fields
	internal CombineResultEffectComponent.ClickDelegate callback; // 0x10
	internal CombineResultEffectComponent.<setSkillResultInfo>c__AnonStorey1 <>f__ref$1; // 0x18

	// Methods

	// RVA: 0x1C481A8 Offset: 0x1C481A8 VA: 0x1C481A8
	public void .ctor() { }

	// RVA: 0x1C481F4 Offset: 0x1C481F4 VA: 0x1C481F4
	internal void <>m__0(bool decide) { }

	// RVA: 0x1C48328 Offset: 0x1C48328 VA: 0x1C48328
	internal void <>m__1(string result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB0830 Offset: 0xCB0830 VA: 0xCB0830
private sealed class CombineResultEffectComponent.<setSkillResultInfo>c__AnonStorey0 // TypeDefIndex: 9562
{
	// Fields
	internal CombineResultEffectComponent.ClickDelegate callback; // 0x10
	internal CombineResultEffectComponent.<setSkillResultInfo>c__AnonStorey1 <>f__ref$1; // 0x18

	// Methods

	// RVA: 0x1C47988 Offset: 0x1C47988 VA: 0x1C47988
	public void .ctor() { }

	// RVA: 0x1C47990 Offset: 0x1C47990 VA: 0x1C47990
	internal void <>m__0() { }

	// RVA: 0x1C47DEC Offset: 0x1C47DEC VA: 0x1C47DEC
	internal void <>m__1(bool decide) { }

	// RVA: 0x1C47E1C Offset: 0x1C47E1C VA: 0x1C47E1C
	internal void <>m__2(bool decide) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB0840 Offset: 0xCB0840 VA: 0xCB0840
private sealed class CombineResultEffectComponent.<ProfileChangeDecideAction>c__AnonStorey3 // TypeDefIndex: 9563
{
	// Fields
	internal Action finishCallback; // 0x10
	internal CombineResultEffectComponent $this; // 0x18

	// Methods

	// RVA: 0x1C47790 Offset: 0x1C47790 VA: 0x1C47790
	public void .ctor() { }

	// RVA: 0x1C47798 Offset: 0x1C47798 VA: 0x1C47798
	internal void <>m__0(bool isDcd) { }

	// RVA: 0x1C47878 Offset: 0x1C47878 VA: 0x1C47878
	internal void <>m__1() { }
}

// Namespace: 
public class CombineResultFormManager // TypeDefIndex: 9564
{
	// Fields
	protected static readonly string SAVE_DATA_VERSION; // 0x0
	protected static List<CombineResultFormManager.svtUnplayedVoiceList> lotteryList; // 0x8

	// Methods

	// RVA: 0x1C48B08 Offset: 0x1C48B08 VA: 0x1C48B08
	public void .ctor() { }

	// RVA: 0x1C48B10 Offset: 0x1C48B10 VA: 0x1C48B10
	public static string GetSaveFileName() { }

	// RVA: 0x1C48BE8 Offset: 0x1C48BE8 VA: 0x1C48BE8
	public static void DeleteSaveData() { }

	// RVA: 0x1C48C6C Offset: 0x1C48C6C VA: 0x1C48C6C
	public static void ClearSaveDataList() { }

	// RVA: 0x1C48D48 Offset: 0x1C48D48 VA: 0x1C48D48
	public static void ResetVoiceList(UserServantEntity baseUsrSvtData) { }

	// RVA: 0x1C48F8C Offset: 0x1C48F8C VA: 0x1C48F8C
	public static bool ReadData() { }

	// RVA: 0x1C494DC Offset: 0x1C494DC VA: 0x1C494DC
	public static bool WriteData() { }

	// RVA: 0x1C49928 Offset: 0x1C49928 VA: 0x1C49928
	public static ServantVoiceData[] lotteryCombineResultInit(ServantVoiceEntity svtVoiceEntity, UserServantEntity baseUsrSvtData) { }

	// RVA: 0x1C49D4C Offset: 0x1C49D4C VA: 0x1C49D4C
	public static ServantVoiceData[] lotteryCombineResult(ServantVoiceEntity svtVoiceEntity, UserServantEntity baseUsrSvtData) { }

	// RVA: 0x1C4A364 Offset: 0x1C4A364 VA: 0x1C4A364
	private static void .cctor() { }
}

// Namespace: 
protected class CombineResultFormManager.svtUnplayedVoiceList // TypeDefIndex: 9565
{
	// Fields
	public int svtId; // 0x10
	public List<string> voiceIdList; // 0x18

	// Methods

	// RVA: 0x1C494D4 Offset: 0x1C494D4 VA: 0x1C494D4
	public void .ctor() { }
}

// Namespace: 
public class HeroineNpChangeInfoComponent : MonoBehaviour // TypeDefIndex: 9566
{
	// Fields
	[SerializeField] // RVA: 0xCD6758 Offset: 0xCD6758 VA: 0xCD6758
	private UILabel rubyLabel; // 0x18
	[SerializeField] // RVA: 0xCD6768 Offset: 0xCD6768 VA: 0xCD6768
	private UILabel nameLabel; // 0x20
	[SerializeField] // RVA: 0xCD6778 Offset: 0xCD6778 VA: 0xCD6778
	private UILabel lvLabel; // 0x28
	[SerializeField] // RVA: 0xCD6788 Offset: 0xCD6788 VA: 0xCD6788
	private UILabel detailLabel; // 0x30

	// Methods

	// RVA: 0x210B6A4 Offset: 0x210B6A4 VA: 0x210B6A4
	public void .ctor() { }

	// RVA: 0x210B6AC Offset: 0x210B6AC VA: 0x210B6AC
	public void Setup(int treasureDvcId, int treasureDvcLv) { }

	// RVA: 0x210B8A4 Offset: 0x210B8A4 VA: 0x210B8A4
	public void SetupForNpChange(int treasureDvcId, int treasureDvcLv) { }
}

// Namespace: 
public class LimitCountSealDialogComponent : BaseDialog // TypeDefIndex: 9567
{
	// Fields
	[SerializeField] // RVA: 0xCD6798 Offset: 0xCD6798 VA: 0xCD6798
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xCD67A8 Offset: 0xCD67A8 VA: 0xCD67A8
	private UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xCD67B8 Offset: 0xCD67B8 VA: 0xCD67B8
	private UILabel btnLabel; // 0x68
	[CompilerGeneratedAttribute] // RVA: 0xCD67C8 Offset: 0xCD67C8 VA: 0xCD67C8
	[DebuggerBrowsableAttribute] // RVA: 0xCD67C8 Offset: 0xCD67C8 VA: 0xCD67C8
	private LimitCountSealDialogComponent.CallbackFunc callbackFunc; // 0x70
	protected Action closeCallbackFunc; // 0x78

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x172E5AC Offset: 0x172E5AC VA: 0x172E5AC
	public void .ctor() { }

	// RVA: 0x172E614 Offset: 0x172E614 VA: 0x172E614
	protected void add_callbackFunc(LimitCountSealDialogComponent.CallbackFunc value) { }

	// RVA: 0x172E700 Offset: 0x172E700 VA: 0x172E700
	protected void remove_callbackFunc(LimitCountSealDialogComponent.CallbackFunc value) { }

	// RVA: 0x172E7EC Offset: 0x172E7EC VA: 0x172E7EC
	public void Init() { }

	// RVA: 0x172E908 Offset: 0x172E908 VA: 0x172E908
	public void OpenLimitCountSealDialog(string title, string message, LimitCountSealDialogComponent.CallbackFunc callback) { }

	// RVA: 0x172EA38 Offset: 0x172EA38 VA: 0x172EA38
	public void Close(Action callback) { }

	// RVA: 0x172EAC0 Offset: 0x172EAC0 VA: 0x172EAC0
	protected void EndClose() { }

	// RVA: 0x172EAFC Offset: 0x172EAFC VA: 0x172EAFC
	protected void Callback() { }

	// RVA: 0x172ED18 Offset: 0x172ED18 VA: 0x172ED18
	public void OnClickDecide() { }

	// RVA: 0x172ED34 Offset: 0x172ED34 VA: 0x172ED34 Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
public sealed class LimitCountSealDialogComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 9568
{
	// Methods

	// RVA: 0x172ED7C Offset: 0x172ED7C VA: 0x172ED7C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x172EB18 Offset: 0x172EB18 VA: 0x172EB18 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x172ED8C Offset: 0x172ED8C VA: 0x172ED8C Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x172EDC0 Offset: 0x172EDC0 VA: 0x172EDC0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class LimitUpResultCheckComponent : MonoBehaviour // TypeDefIndex: 9569
{
	// Fields
	[SerializeField] // RVA: 0xCD6804 Offset: 0xCD6804 VA: 0xCD6804
	protected OpenInfoWindowComponent openInfowindowComp; // 0x18
	[SerializeField] // RVA: 0xCD6814 Offset: 0xCD6814 VA: 0xCD6814
	protected GameObject storyQuestInfo; // 0x20
	[SerializeField] // RVA: 0xCD6824 Offset: 0xCD6824 VA: 0xCD6824
	protected UILabel storyQuestInfoTitle; // 0x28
	[SerializeField] // RVA: 0xCD6834 Offset: 0xCD6834 VA: 0xCD6834
	protected UILabel storyQuestInfoDetail; // 0x30
	[SerializeField] // RVA: 0xCD6844 Offset: 0xCD6844 VA: 0xCD6844
	protected GameObject heroQuestInfo; // 0x38
	[SerializeField] // RVA: 0xCD6854 Offset: 0xCD6854 VA: 0xCD6854
	protected UILabel heroQuestInfoTitle; // 0x40
	[SerializeField] // RVA: 0xCD6864 Offset: 0xCD6864 VA: 0xCD6864
	protected UILabel heroQuestInfoDetail; // 0x48
	[SerializeField] // RVA: 0xCD6874 Offset: 0xCD6874 VA: 0xCD6874
	protected GameObject skillGetInfo; // 0x50
	[SerializeField] // RVA: 0xCD6884 Offset: 0xCD6884 VA: 0xCD6884
	protected UILabel skillGetInfoTitle; // 0x58
	[SerializeField] // RVA: 0xCD6894 Offset: 0xCD6894 VA: 0xCD6894
	protected UILabel skillGetInfoName; // 0x60
	[SerializeField] // RVA: 0xCD68A4 Offset: 0xCD68A4 VA: 0xCD68A4
	protected UILabel skillGetInfoDetail; // 0x68
	[SerializeField] // RVA: 0xCD68B4 Offset: 0xCD68B4 VA: 0xCD68B4
	protected GameObject skillChangeInfo; // 0x70
	[SerializeField] // RVA: 0xCD68C4 Offset: 0xCD68C4 VA: 0xCD68C4
	protected UILabel skillChangeInfoTitle; // 0x78
	[SerializeField] // RVA: 0xCD68D4 Offset: 0xCD68D4 VA: 0xCD68D4
	protected UILabel skillChangeInfoSubTitleOld; // 0x80
	[SerializeField] // RVA: 0xCD68E4 Offset: 0xCD68E4 VA: 0xCD68E4
	protected UILabel skillChangeInfoNameOld; // 0x88
	[SerializeField] // RVA: 0xCD68F4 Offset: 0xCD68F4 VA: 0xCD68F4
	protected UILabel skillChangeInfoDetailOld; // 0x90
	[SerializeField] // RVA: 0xCD6904 Offset: 0xCD6904 VA: 0xCD6904
	protected UILabel skillChangeInfoSubTitleNow; // 0x98
	[SerializeField] // RVA: 0xCD6914 Offset: 0xCD6914 VA: 0xCD6914
	protected UILabel skillChangeInfoNameNow; // 0xA0
	[SerializeField] // RVA: 0xCD6924 Offset: 0xCD6924 VA: 0xCD6924
	protected UILabel skillChangeInfoDetailNow; // 0xA8
	[SerializeField] // RVA: 0xCD6934 Offset: 0xCD6934 VA: 0xCD6934
	protected GameObject eventQuestInfo; // 0xB0
	[SerializeField] // RVA: 0xCD6944 Offset: 0xCD6944 VA: 0xCD6944
	protected UILabel eventQuestInfoDetail; // 0xB8
	private List<GameObject> resInfoList; // 0xC0
	private bool isGetNewSkill; // 0xC8
	private bool isOpenQuest; // 0xC9
	private UserServantEntity baseUsrSvtData; // 0xD0
	private UserServantEntity resUsrSvtData; // 0xD8
	private int svtCollectionLimitCnt; // 0xE0
	private CombineResultEffectComponent.Kind kind; // 0xE4

	// Methods

	// RVA: 0x172EDF4 Offset: 0x172EDF4 VA: 0x172EDF4
	public void .ctor() { }

	// RVA: 0x172EDFC Offset: 0x172EDFC VA: 0x172EDFC
	public void checkResultLimitUp(CombineResultEffectComponent.Kind kind, UserServantEntity baseData, UserServantEntity resData, int baseCollectionLimitCnt) { }

	// RVA: 0x172EFA0 Offset: 0x172EFA0 VA: 0x172EFA0
	private void checkQuestOpen() { }

	// RVA: 0x172F8A8 Offset: 0x172F8A8 VA: 0x172F8A8
	private void checkGetSkill() { }

	// RVA: 0x1730050 Offset: 0x1730050 VA: 0x1730050
	public void SetActiveInfoWindow(bool isActive) { }
}

// Namespace: 
public class NpInfoAddResultComponent : MonoBehaviour // TypeDefIndex: 9570
{
	// Fields
	[SerializeField] // RVA: 0xCD6954 Offset: 0xCD6954 VA: 0xCD6954
	private UILabel titleLabel; // 0x18
	[SerializeField] // RVA: 0xCD6964 Offset: 0xCD6964 VA: 0xCD6964
	private UILabel rubyLabel; // 0x20
	[SerializeField] // RVA: 0xCD6974 Offset: 0xCD6974 VA: 0xCD6974
	private UILabel nameLabel; // 0x28
	[SerializeField] // RVA: 0xCD6984 Offset: 0xCD6984 VA: 0xCD6984
	private UILabel beforeLvLabel; // 0x30
	[SerializeField] // RVA: 0xCD6994 Offset: 0xCD6994 VA: 0xCD6994
	private UILabel beforeDetailLabel; // 0x38
	[SerializeField] // RVA: 0xCD69A4 Offset: 0xCD69A4 VA: 0xCD69A4
	private UILabel afterLvLabel; // 0x40
	[SerializeField] // RVA: 0xCD69B4 Offset: 0xCD69B4 VA: 0xCD69B4
	private UILabel afterDetailLabel; // 0x48

	// Methods

	// RVA: 0x18D40EC Offset: 0x18D40EC VA: 0x18D40EC
	public void .ctor() { }

	// RVA: 0x18D40F4 Offset: 0x18D40F4 VA: 0x18D40F4
	public void SetDisplay(ServantTreasureDeviceAddEntity tdAddEntity, int index, int beforeLv, int afterLv) { }
}

// Namespace: 
public class OpenInfoWindowComponent : BaseDialog // TypeDefIndex: 9571
{
	// Fields
	[SerializeField] // RVA: 0xCD69C4 Offset: 0xCD69C4 VA: 0xCD69C4
	protected UIGrid resultInfoGrid; // 0x58
	protected List<GameObject> resInfoList; // 0x60
	protected Vector3 center; // 0x68
	protected Action openCallBack; // 0x78

	// Methods

	// RVA: 0x205A2A4 Offset: 0x205A2A4 VA: 0x205A2A4
	public void .ctor() { }

	// RVA: 0x205A30C Offset: 0x205A30C VA: 0x205A30C
	public void Init() { }

	// RVA: 0x205A474 Offset: 0x205A474 VA: 0x205A474
	public void OpenResultInfo(List<GameObject> resInfo, Action callback) { }

	// RVA: 0x205A7E4 Offset: 0x205A7E4 VA: 0x205A7E4
	protected void setCenter() { }

	// RVA: 0x205A35C Offset: 0x205A35C VA: 0x205A35C
	protected void clearInfoGrid() { }

	// RVA: 0x205AA28 Offset: 0x205AA28 VA: 0x205AA28
	protected void EndOpen() { }

	// RVA: 0x205AA44 Offset: 0x205AA44 VA: 0x205AA44
	public void Close() { }

	// RVA: 0x205AAB0 Offset: 0x205AAB0 VA: 0x205AAB0
	public void Close(Action callback) { }

	// RVA: 0x205AB28 Offset: 0x205AB28 VA: 0x205AB28
	protected void EndClose() { }
}

// Namespace: 
public class SkillUpResultWindowComponent : BaseDialog // TypeDefIndex: 9572
{
	// Fields
	protected static readonly Color COLOR_VAL; // 0x0
	[SerializeField] // RVA: 0xCD69D4 Offset: 0xCD69D4 VA: 0xCD69D4
	protected GameObject skillInfo; // 0x58
	[SerializeField] // RVA: 0xCD69E4 Offset: 0xCD69E4 VA: 0xCD69E4
	protected SkillIconComponent skillIconBef; // 0x60
	[SerializeField] // RVA: 0xCD69F4 Offset: 0xCD69F4 VA: 0xCD69F4
	protected SkillIconComponent skillIconAft; // 0x68
	[SerializeField] // RVA: 0xCD6A04 Offset: 0xCD6A04 VA: 0xCD6A04
	protected UILabel skillBefTitleLb; // 0x70
	[SerializeField] // RVA: 0xCD6A14 Offset: 0xCD6A14 VA: 0xCD6A14
	protected UILabel skillBefdetailLb; // 0x78
	[SerializeField] // RVA: 0xCD6A24 Offset: 0xCD6A24 VA: 0xCD6A24
	protected UILabel skillBefChargeTimeLb; // 0x80
	[SerializeField] // RVA: 0xCD6A34 Offset: 0xCD6A34 VA: 0xCD6A34
	protected UILabel skillAftTitleLb; // 0x88
	[SerializeField] // RVA: 0xCD6A44 Offset: 0xCD6A44 VA: 0xCD6A44
	protected UILabel skillAftdetailLb; // 0x90
	[SerializeField] // RVA: 0xCD6A54 Offset: 0xCD6A54 VA: 0xCD6A54
	protected UILabel skillAftChargeTimeLb; // 0x98
	[SerializeField] // RVA: 0xCD6A64 Offset: 0xCD6A64 VA: 0xCD6A64
	protected GameObject skillAfter; // 0xA0
	[SerializeField] // RVA: 0xCD6A74 Offset: 0xCD6A74 VA: 0xCD6A74
	private GameObject beforeChargeTimeInfo; // 0xA8
	[SerializeField] // RVA: 0xCD6A84 Offset: 0xCD6A84 VA: 0xCD6A84
	private GameObject AfterChargeTimeInfo; // 0xB0
	[SerializeField] // RVA: 0xCD6A94 Offset: 0xCD6A94 VA: 0xCD6A94
	protected GameObject skillChangeInfo; // 0xB8
	[SerializeField] // RVA: 0xCD6AA4 Offset: 0xCD6AA4 VA: 0xCD6AA4
	protected UILabel skillChangeInfoTitle; // 0xC0
	[SerializeField] // RVA: 0xCD6AB4 Offset: 0xCD6AB4 VA: 0xCD6AB4
	protected UILabel skillChangeInfoSubTitleOld; // 0xC8
	[SerializeField] // RVA: 0xCD6AC4 Offset: 0xCD6AC4 VA: 0xCD6AC4
	protected UILabel skillChangeInfoNameOld; // 0xD0
	[SerializeField] // RVA: 0xCD6AD4 Offset: 0xCD6AD4 VA: 0xCD6AD4
	protected UILabel skillChangeInfoDetailOld; // 0xD8
	[SerializeField] // RVA: 0xCD6AE4 Offset: 0xCD6AE4 VA: 0xCD6AE4
	protected UILabel skillChangeInfoSubTitleNow; // 0xE0
	[SerializeField] // RVA: 0xCD6AF4 Offset: 0xCD6AF4 VA: 0xCD6AF4
	protected UILabel skillChangeInfoNameNow; // 0xE8
	[SerializeField] // RVA: 0xCD6B04 Offset: 0xCD6B04 VA: 0xCD6B04
	protected UILabel skillChangeInfoDetailNow; // 0xF0
	[SerializeField] // RVA: 0xCD6B14 Offset: 0xCD6B14 VA: 0xCD6B14
	protected GameObject npInfo; // 0xF8
	[SerializeField] // RVA: 0xCD6B24 Offset: 0xCD6B24 VA: 0xCD6B24
	protected GameObject npInfoNormalRoot; // 0x100
	[SerializeField] // RVA: 0xCD6B34 Offset: 0xCD6B34 VA: 0xCD6B34
	protected GameObject npInfoAddRoot; // 0x108
	[SerializeField] // RVA: 0xCD6B44 Offset: 0xCD6B44 VA: 0xCD6B44
	protected NpInfoAddResultComponent npInfoAddResultComponent; // 0x110
	[SerializeField] // RVA: 0xCD6B54 Offset: 0xCD6B54 VA: 0xCD6B54
	protected GameObject npInfoHeroineNpChangeRoot; // 0x118
	[SerializeField] // RVA: 0xCD6B64 Offset: 0xCD6B64 VA: 0xCD6B64
	protected HeroineNpChangeInfoComponent heroineNpChangeInfoOld; // 0x120
	[SerializeField] // RVA: 0xCD6B74 Offset: 0xCD6B74 VA: 0xCD6B74
	protected HeroineNpChangeInfoComponent heroineNpChangeInfoNow; // 0x128
	[SerializeField] // RVA: 0xCD6B84 Offset: 0xCD6B84 VA: 0xCD6B84
	protected GameObject npInfoNpChangeRoot; // 0x130
	[SerializeField] // RVA: 0xCD6B94 Offset: 0xCD6B94 VA: 0xCD6B94
	protected HeroineNpChangeInfoComponent npChangeInfoOld; // 0x138
	[SerializeField] // RVA: 0xCD6BA4 Offset: 0xCD6BA4 VA: 0xCD6BA4
	protected HeroineNpChangeInfoComponent npChangeInfoNow; // 0x140
	[SerializeField] // RVA: 0xCD6BB4 Offset: 0xCD6BB4 VA: 0xCD6BB4
	protected UILabel npNameLb; // 0x148
	[SerializeField] // RVA: 0xCD6BC4 Offset: 0xCD6BC4 VA: 0xCD6BC4
	protected UILabel npRubyNameLb; // 0x150
	[SerializeField] // RVA: 0xCD6BD4 Offset: 0xCD6BD4 VA: 0xCD6BD4
	protected UISprite npLvImg; // 0x158
	[SerializeField] // RVA: 0xCD6BE4 Offset: 0xCD6BE4 VA: 0xCD6BE4
	protected GameObject npLvInfo; // 0x160
	[SerializeField] // RVA: 0xCD6BF4 Offset: 0xCD6BF4 VA: 0xCD6BF4
	protected GameObject npLvFirstInfo; // 0x168
	[SerializeField] // RVA: 0xCD6C04 Offset: 0xCD6C04 VA: 0xCD6C04
	protected GameObject npRankInfo; // 0x170
	[SerializeField] // RVA: 0xCD6C14 Offset: 0xCD6C14 VA: 0xCD6C14
	protected UILabel currentNpLvLb; // 0x178
	[SerializeField] // RVA: 0xCD6C24 Offset: 0xCD6C24 VA: 0xCD6C24
	protected UILabel resNpLvLb; // 0x180
	[SerializeField] // RVA: 0xCD6C34 Offset: 0xCD6C34 VA: 0xCD6C34
	protected UILabel resNpLvFirstLb; // 0x188
	[SerializeField] // RVA: 0xCD6C44 Offset: 0xCD6C44 VA: 0xCD6C44
	protected UILabel npBefDetailLb; // 0x190
	[SerializeField] // RVA: 0xCD6C54 Offset: 0xCD6C54 VA: 0xCD6C54
	protected UILabel npAftDetailLb; // 0x198
	[SerializeField] // RVA: 0xCD6C64 Offset: 0xCD6C64 VA: 0xCD6C64
	protected GameObject npChangeSp; // 0x1A0
	[SerializeField] // RVA: 0xCD6C74 Offset: 0xCD6C74 VA: 0xCD6C74
	protected UILabel npRankupBeforeLb; // 0x1A8
	[SerializeField] // RVA: 0xCD6C84 Offset: 0xCD6C84 VA: 0xCD6C84
	protected UILabel npRankupAfterLb; // 0x1B0
	[SerializeField] // RVA: 0xCD6C94 Offset: 0xCD6C94 VA: 0xCD6C94
	protected GameObject friendshipInfo; // 0x1B8
	[SerializeField] // RVA: 0xCD6CA4 Offset: 0xCD6CA4 VA: 0xCD6CA4
	protected UILabel friendshipLabel; // 0x1C0
	[SerializeField] // RVA: 0xCD6CB4 Offset: 0xCD6CB4 VA: 0xCD6CB4
	protected GameObject friendshipLvInfo; // 0x1C8
	[SerializeField] // RVA: 0xCD6CC4 Offset: 0xCD6CC4 VA: 0xCD6CC4
	protected UILabel friendshipCurrentLvLabel; // 0x1D0
	[SerializeField] // RVA: 0xCD6CD4 Offset: 0xCD6CD4 VA: 0xCD6CD4
	protected UILabel friendshipResultLvLabel; // 0x1D8
	[SerializeField] // RVA: 0xCD6CE4 Offset: 0xCD6CE4 VA: 0xCD6CE4
	protected GameObject powerupInfo; // 0x1E0
	[SerializeField] // RVA: 0xCD6CF4 Offset: 0xCD6CF4 VA: 0xCD6CF4
	protected UILabel powerupLabel; // 0x1E8
	[SerializeField] // RVA: 0xCD6D04 Offset: 0xCD6D04 VA: 0xCD6D04
	protected GameObject costumeChangeInfo; // 0x1F0
	[SerializeField] // RVA: 0xCD6D14 Offset: 0xCD6D14 VA: 0xCD6D14
	protected UILabel costumeChangeLabel; // 0x1F8
	protected Action openCallBack; // 0x200
	private const int NP_ADD_INFO_BG_HEIGHT = 300;
	protected SkillUpResultWindowComponent.State state; // 0x208

	// Methods

	// RVA: 0x1CE727C Offset: 0x1CE727C VA: 0x1CE727C
	public void .ctor() { }

	// RVA: 0x1CE72E4 Offset: 0x1CE72E4 VA: 0x1CE72E4
	public void Init() { }

	// RVA: 0x1CE7330 Offset: 0x1CE7330 VA: 0x1CE7330
	public void OpenSkillUpResultInfo(int targetId, int targetLv, Action callback, int targetIdOld, int targetLvOld, int baseSvtId, int[] skillList, bool isOpen = False, bool isRelease = True, bool isDispLv = False) { }

	// RVA: 0x1CE7F88 Offset: 0x1CE7F88 VA: 0x1CE7F88
	public void OpenSkillChangeMessage(int svtId, Action callback) { }

	// RVA: 0x1CE81BC Offset: 0x1CE81BC VA: 0x1CE81BC
	public void OpenSkillChangeResultInfo(int oldSkillId, int oldSkillLv, int nowSkillId, int nowSkillLv, string costumeName, Action callback) { }

	// RVA: 0x1CE8634 Offset: 0x1CE8634 VA: 0x1CE8634
	public void OpenNpUpResultInfo(int oldTargetId, int oldTargetLv, int nowTargetId, int nowTargetLv, Action callback) { }

	// RVA: 0x1CE8834 Offset: 0x1CE8834 VA: 0x1CE8834
	public void OpenNextNpUpResultInfo(ServantTreasureDeviceAddEntity tdAddEntity, int index, int beforeLv, int afterLv, Action callback) { }

	// RVA: 0x1CE8A38 Offset: 0x1CE8A38 VA: 0x1CE8A38
	public void OpenNpUpResultInfo(UserServantEntity usrSvtData, int targetId, int targetLv, Action callback, int targetIdOld, int targetLvOld, CombineResultEffectComponent.Kind kind) { }

	// RVA: 0x1CE8EF0 Offset: 0x1CE8EF0 VA: 0x1CE8EF0
	private void SetupNpUpResultInfoNormal(UserServantEntity usrSvtData, int targetId, int targetLv, int targetIdOld, int targetLvOld, CombineResultEffectComponent.Kind kind) { }

	// RVA: 0x1CE9744 Offset: 0x1CE9744 VA: 0x1CE9744
	public void OpenFriendshipUpResultInfo(UserServantEntity usrSvtData, int oldFriendShipRank, Action callback) { }

	// RVA: 0x1CE9EDC Offset: 0x1CE9EDC VA: 0x1CE9EDC
	public void OpenPowerUpResultInfo(UserServantEntity usrSvtData, Action callback) { }

	// RVA: 0x1CEA184 Offset: 0x1CEA184 VA: 0x1CEA184
	protected void EndOpen() { }

	// RVA: 0x1CEA1A0 Offset: 0x1CEA1A0 VA: 0x1CEA1A0
	public void Close() { }

	// RVA: 0x1CEA20C Offset: 0x1CEA20C VA: 0x1CEA20C
	public void Close(Action callback) { }

	// RVA: 0x1CEA284 Offset: 0x1CEA284 VA: 0x1CEA284
	protected void EndClose() { }

	// RVA: 0x1CE7E98 Offset: 0x1CE7E98 VA: 0x1CE7E98
	protected void SetChildrenActive(bool enable) { }

	// RVA: 0x1CEA314 Offset: 0x1CEA314 VA: 0x1CEA314
	private SkillEntity GetSkillEntity(int skillId) { }

	// RVA: 0x1CEA400 Offset: 0x1CEA400 VA: 0x1CEA400
	private ServantSkillEntity GetServantSkillEntity(int svtId, int num, int skillId) { }

	// RVA: 0x1CE83A8 Offset: 0x1CE83A8 VA: 0x1CE83A8
	private void SetSkillInfo(int oldSkillId, int oldSkillLv, int nowSkillId, int nowSkillLv) { }

	// RVA: 0x1CEA4A4 Offset: 0x1CEA4A4 VA: 0x1CEA4A4
	private static void .cctor() { }
}

// Namespace: 
protected enum SkillUpResultWindowComponent.State // TypeDefIndex: 9573
{
	// Fields
	public int value__; // 0x0
	public const SkillUpResultWindowComponent.State INIT = 0;
}

// Namespace: 
public class SvtCombineResultWindowComponent : BaseDialog // TypeDefIndex: 9574
{
	// Fields
	protected static readonly Color COLOR_VAL; // 0x0
	protected const float ANIM_TIME = 2;
	protected static readonly string TUTORIAL_FOLDER; // 0x10
	protected static readonly int SVT_COMBINE_LIMITUP_DOUBLE_TUTORIAL; // 0x18
	protected static readonly int SVT_COMBINE_LIMITUP_HP_TUTORIAL; // 0x1C
	protected static readonly int SVT_COMBINE_LIMITUP_ATK_TUTORIAL; // 0x20
	[SerializeField] // RVA: 0xCD6D24 Offset: 0xCD6D24 VA: 0xCD6D24
	protected GameObject limitCntInfoObject; // 0x58
	[SerializeField] // RVA: 0xCD6D34 Offset: 0xCD6D34 VA: 0xCD6D34
	protected GameObject svtCombineInfoObject; // 0x60
	[SerializeField] // RVA: 0xCD6D44 Offset: 0xCD6D44 VA: 0xCD6D44
	protected GameObject svtEqCombineInfoObject; // 0x68
	[SerializeField] // RVA: 0xCD6D54 Offset: 0xCD6D54 VA: 0xCD6D54
	protected GameObject currentStatusInfo; // 0x70
	[SerializeField] // RVA: 0xCD6D64 Offset: 0xCD6D64 VA: 0xCD6D64
	protected UIExtrusionLabel currentLvLb; // 0x78
	[SerializeField] // RVA: 0xCD6D74 Offset: 0xCD6D74 VA: 0xCD6D74
	protected UILabel currentMaxLvLb; // 0x80
	[SerializeField] // RVA: 0xCD6D84 Offset: 0xCD6D84 VA: 0xCD6D84
	protected UISlider currentExpBar; // 0x88
	[SerializeField] // RVA: 0xCD6D94 Offset: 0xCD6D94 VA: 0xCD6D94
	protected UILabel currentExpValLb; // 0x90
	[SerializeField] // RVA: 0xCD6DA4 Offset: 0xCD6DA4 VA: 0xCD6DA4
	protected UILabel currentHpLb; // 0x98
	[SerializeField] // RVA: 0xCD6DB4 Offset: 0xCD6DB4 VA: 0xCD6DB4
	protected UILabel currentAtkLb; // 0xA0
	[SerializeField] // RVA: 0xCD6DC4 Offset: 0xCD6DC4 VA: 0xCD6DC4
	protected UIGrid currentLimitCntGrid; // 0xA8
	[SerializeField] // RVA: 0xCD6DD4 Offset: 0xCD6DD4 VA: 0xCD6DD4
	protected GameObject resStatusInfo; // 0xB0
	[SerializeField] // RVA: 0xCD6DE4 Offset: 0xCD6DE4 VA: 0xCD6DE4
	protected UIExtrusionLabel resLvLb; // 0xB8
	[SerializeField] // RVA: 0xCD6DF4 Offset: 0xCD6DF4 VA: 0xCD6DF4
	protected UILabel resMaxLvLb; // 0xC0
	[SerializeField] // RVA: 0xCD6E04 Offset: 0xCD6E04 VA: 0xCD6E04
	protected UISlider resCrExpBar; // 0xC8
	[SerializeField] // RVA: 0xCD6E14 Offset: 0xCD6E14 VA: 0xCD6E14
	protected UISlider resExpBar; // 0xD0
	[SerializeField] // RVA: 0xCD6E24 Offset: 0xCD6E24 VA: 0xCD6E24
	protected UILabel resHpLb; // 0xD8
	[SerializeField] // RVA: 0xCD6E34 Offset: 0xCD6E34 VA: 0xCD6E34
	protected UILabel resAtkLb; // 0xE0
	[SerializeField] // RVA: 0xCD6E44 Offset: 0xCD6E44 VA: 0xCD6E44
	protected UIGrid resLimitCntGrid; // 0xE8
	[SerializeField] // RVA: 0xCD6E54 Offset: 0xCD6E54 VA: 0xCD6E54
	protected GameObject currentSvtEqStatusInfo; // 0xF0
	[SerializeField] // RVA: 0xCD6E64 Offset: 0xCD6E64 VA: 0xCD6E64
	protected UIExtrusionLabel currentSvtEqLvLb; // 0xF8
	[SerializeField] // RVA: 0xCD6E74 Offset: 0xCD6E74 VA: 0xCD6E74
	protected UILabel currentSvtEqMaxLvLb; // 0x100
	[SerializeField] // RVA: 0xCD6E84 Offset: 0xCD6E84 VA: 0xCD6E84
	protected UISlider currentSvtEqExpBar; // 0x108
	[SerializeField] // RVA: 0xCD6E94 Offset: 0xCD6E94 VA: 0xCD6E94
	protected UILabel currentSvtEqExpValLb; // 0x110
	[SerializeField] // RVA: 0xCD6EA4 Offset: 0xCD6EA4 VA: 0xCD6EA4
	protected UILabel currentSvtEqHpLb; // 0x118
	[SerializeField] // RVA: 0xCD6EB4 Offset: 0xCD6EB4 VA: 0xCD6EB4
	protected UILabel currentSvtEqAtkLb; // 0x120
	[SerializeField] // RVA: 0xCD6EC4 Offset: 0xCD6EC4 VA: 0xCD6EC4
	protected UIGrid currentSvtEqLimitCntGrid; // 0x128
	[SerializeField] // RVA: 0xCD6ED4 Offset: 0xCD6ED4 VA: 0xCD6ED4
	protected UILabel normalExpLb; // 0x130
	[SerializeField] // RVA: 0xCD6EE4 Offset: 0xCD6EE4 VA: 0xCD6EE4
	protected UILabel normalExpOverSpLb; // 0x138
	[SerializeField] // RVA: 0xCD6EF4 Offset: 0xCD6EF4 VA: 0xCD6EF4
	protected UILabel addExpLb; // 0x140
	[SerializeField] // RVA: 0xCD6F04 Offset: 0xCD6F04 VA: 0xCD6F04
	protected GameObject resSvtEqStatusInfo; // 0x148
	[SerializeField] // RVA: 0xCD6F14 Offset: 0xCD6F14 VA: 0xCD6F14
	protected UIExtrusionLabel resSvtEqLvLb; // 0x150
	[SerializeField] // RVA: 0xCD6F24 Offset: 0xCD6F24 VA: 0xCD6F24
	protected UILabel resSvtEqMaxLvLb; // 0x158
	[SerializeField] // RVA: 0xCD6F34 Offset: 0xCD6F34 VA: 0xCD6F34
	protected UISlider resSvtEqCrExpBar; // 0x160
	[SerializeField] // RVA: 0xCD6F44 Offset: 0xCD6F44 VA: 0xCD6F44
	protected UISlider resSvtEqExpBar; // 0x168
	[SerializeField] // RVA: 0xCD6F54 Offset: 0xCD6F54 VA: 0xCD6F54
	protected UILabel resSvtEqHpLb; // 0x170
	[SerializeField] // RVA: 0xCD6F64 Offset: 0xCD6F64 VA: 0xCD6F64
	protected UILabel resSvtEqAtkLb; // 0x178
	[SerializeField] // RVA: 0xCD6F74 Offset: 0xCD6F74 VA: 0xCD6F74
	protected UIGrid resSvtEqLimitCntGrid; // 0x180
	[SerializeField] // RVA: 0xCD6F84 Offset: 0xCD6F84 VA: 0xCD6F84
	protected UILabel infoLb; // 0x188
	[SerializeField] // RVA: 0xCD6F94 Offset: 0xCD6F94 VA: 0xCD6F94
	protected GameObject lvInfo; // 0x190
	[SerializeField] // RVA: 0xCD6FA4 Offset: 0xCD6FA4 VA: 0xCD6FA4
	protected GameObject svtEqLvInfo; // 0x198
	[SerializeField] // RVA: 0xCD6FB4 Offset: 0xCD6FB4 VA: 0xCD6FB4
	protected CheckCombineResStatus checkResInfo; // 0x1A0
	[SerializeField] // RVA: 0xCD6FC4 Offset: 0xCD6FC4 VA: 0xCD6FC4
	protected OpenInfoWindowComponent openInfowindowComp; // 0x1A8
	[SerializeField] // RVA: 0xCD6FD4 Offset: 0xCD6FD4 VA: 0xCD6FD4
	protected GameObject storyQuestInfo; // 0x1B0
	[SerializeField] // RVA: 0xCD6FE4 Offset: 0xCD6FE4 VA: 0xCD6FE4
	protected UILabel storyQuestInfoTitle; // 0x1B8
	[SerializeField] // RVA: 0xCD6FF4 Offset: 0xCD6FF4 VA: 0xCD6FF4
	protected UILabel storyQuestInfoDetail; // 0x1C0
	[SerializeField] // RVA: 0xCD7004 Offset: 0xCD7004 VA: 0xCD7004
	protected GameObject heroQuestInfo; // 0x1C8
	[SerializeField] // RVA: 0xCD7014 Offset: 0xCD7014 VA: 0xCD7014
	protected UILabel heroQuestInfoTitle; // 0x1D0
	[SerializeField] // RVA: 0xCD7024 Offset: 0xCD7024 VA: 0xCD7024
	protected UILabel heroQuestInfoDetail; // 0x1D8
	[SerializeField] // RVA: 0xCD7034 Offset: 0xCD7034 VA: 0xCD7034
	protected GameObject skillGetInfo; // 0x1E0
	[SerializeField] // RVA: 0xCD7044 Offset: 0xCD7044 VA: 0xCD7044
	protected UILabel skillGetInfoTitle; // 0x1E8
	[SerializeField] // RVA: 0xCD7054 Offset: 0xCD7054 VA: 0xCD7054
	protected UILabel skillGetInfoDetail; // 0x1F0
	[SerializeField] // RVA: 0xCD7064 Offset: 0xCD7064 VA: 0xCD7064
	protected GameObject eventQuestInfo; // 0x1F8
	[SerializeField] // RVA: 0xCD7074 Offset: 0xCD7074 VA: 0xCD7074
	protected UILabel eventQuestInfoDetail; // 0x200
	[SerializeField] // RVA: 0xCD7084 Offset: 0xCD7084 VA: 0xCD7084
	protected GameObject msgInfo; // 0x208
	[SerializeField] // RVA: 0xCD7094 Offset: 0xCD7094 VA: 0xCD7094
	protected GameObject AdjustInfo; // 0x210
	[SerializeField] // RVA: 0xCD70A4 Offset: 0xCD70A4 VA: 0xCD70A4
	protected UIIconLabel currentAdjustHpIconLabel; // 0x218
	[SerializeField] // RVA: 0xCD70B4 Offset: 0xCD70B4 VA: 0xCD70B4
	protected UILabel currentAdjustHpMaxLabel; // 0x220
	[SerializeField] // RVA: 0xCD70C4 Offset: 0xCD70C4 VA: 0xCD70C4
	protected UIIconLabel currentAdjustAtkIconLabel; // 0x228
	[SerializeField] // RVA: 0xCD70D4 Offset: 0xCD70D4 VA: 0xCD70D4
	protected UILabel currentAdjustAtkMaxLabel; // 0x230
	[SerializeField] // RVA: 0xCD70E4 Offset: 0xCD70E4 VA: 0xCD70E4
	protected UIIconLabel resAdjustHpIconLabel; // 0x238
	[SerializeField] // RVA: 0xCD70F4 Offset: 0xCD70F4 VA: 0xCD70F4
	protected UILabel resAdjustHpMaxLabel; // 0x240
	[SerializeField] // RVA: 0xCD7104 Offset: 0xCD7104 VA: 0xCD7104
	protected UIIconLabel resAdjustAtkIconLabel; // 0x248
	[SerializeField] // RVA: 0xCD7114 Offset: 0xCD7114 VA: 0xCD7114
	protected UILabel resAdjustAtkMaxLabel; // 0x250
	[SerializeField] // RVA: 0xCD7124 Offset: 0xCD7124 VA: 0xCD7124
	protected Collider skipCollider; // 0x258
	[SerializeField] // RVA: 0xCD7134 Offset: 0xCD7134 VA: 0xCD7134
	protected GameObject dispNodeObj; // 0x260
	private List<GameObject> resInfoList; // 0x268
	private bool isGetNewSkill; // 0x270
	private bool isOpenQuest; // 0x271
	private static string INIT_VAL_TXT; // 0x28
	private UserServantEntity baseUsrSvtData; // 0x278
	private UserServantEntity resUsrSvtData; // 0x280
	private ServantEntity svtEntity; // 0x288
	private ServantEntity baseSvtData; // 0x290
	protected Action openCallBack; // 0x298
	protected Action endTutorialCallBack; // 0x2A0
	private List<GameObject> resLimitCntList; // 0x2A8
	private int baseLimitCnt; // 0x2B0
	private int resLimitCnt; // 0x2B4
	private int baseLvMax; // 0x2B8
	private int resLvMax; // 0x2BC
	private int baseHpVal; // 0x2C0
	private int resHpVal; // 0x2C4
	private int baseAtkVal; // 0x2C8
	private int resAtkVal; // 0x2CC
	private int PrevLevel; // 0x2D0
	private bool endDispLvInfoFlg; // 0x2D4
	private UIWidget resLvWidget; // 0x2D8
	private UIWidget resMaxLvWidget; // 0x2E0
	private UIWidget resHpWidget; // 0x2E8
	private UIWidget resAtkWidget; // 0x2F0
	private int baseSvtCollectionLv; // 0x2F8
	private bool isEqCombine; // 0x2FC
	private int baseMaxHpAdjustVal; // 0x300
	private int baseMaxAtkAdjustVal; // 0x304
	private int baseSecondMaxHpAdjustVal; // 0x308
	private int baseSecondMaxAtkAdjustVal; // 0x30C
	private GameObject lvUpInfo; // 0x310
	private bool isAtkLimitUp; // 0x318
	private bool isHpLimitUp; // 0x319
	private bool isUpdateGauge; // 0x31A

	// Methods

	// RVA: 0x1A13DD4 Offset: 0x1A13DD4 VA: 0x1A13DD4
	public void .ctor() { }

	// RVA: 0x1A13E3C Offset: 0x1A13E3C VA: 0x1A13E3C
	public void InitStateInfo() { }

	// RVA: 0x1A14388 Offset: 0x1A14388 VA: 0x1A14388
	public void setBefResultState(UserServantEntity baseData) { }

	// RVA: 0x1A14F20 Offset: 0x1A14F20 VA: 0x1A14F20
	public void setBefSvtEqResultState(UserServantEntity baseData, int resInfo, int normalExp, int addExp) { }

	// RVA: 0x1A14C5C Offset: 0x1A14C5C VA: 0x1A14C5C
	private void setBaseAdjustInfo() { }

	// RVA: 0x1A15C40 Offset: 0x1A15C40 VA: 0x1A15C40
	private void setResAdjustHpInfo(UserServantEntity targetData) { }

	// RVA: 0x1A15E84 Offset: 0x1A15E84 VA: 0x1A15E84
	private void setResAdjustAtkInfo(UserServantEntity targetData) { }

	// RVA: 0x1A160C8 Offset: 0x1A160C8 VA: 0x1A160C8
	public void setAfterSvtResultState(UserServantEntity resData, int svtCollectionLv, Action callback, Action endTutorialCb) { }

	// RVA: 0x1A16B14 Offset: 0x1A16B14 VA: 0x1A16B14
	private void showGetExp() { }

	// RVA: 0x1A17658 Offset: 0x1A17658 VA: 0x1A17658
	private int setSvtExp(int getExp, int nowExp, int startLv) { }

	// RVA: 0x1A17890 Offset: 0x1A17890 VA: 0x1A17890
	public void StartUpdateValue() { }

	// RVA: 0x1A17898 Offset: 0x1A17898 VA: 0x1A17898
	public void UpdateValue(float val) { }

	// RVA: 0x1A17DD4 Offset: 0x1A17DD4 VA: 0x1A17DD4
	public void enabledLvInfo() { }

	// RVA: 0x1A17E10 Offset: 0x1A17E10 VA: 0x1A17E10
	private void EndDisp() { }

	// RVA: 0x1A1810C Offset: 0x1A1810C VA: 0x1A1810C
	private void skipExp(Action callback) { }

	// RVA: 0x1A16374 Offset: 0x1A16374 VA: 0x1A16374
	private void checkQuestOpen() { }

	// RVA: 0x1A16840 Offset: 0x1A16840 VA: 0x1A16840
	private void checkGetSkill() { }

	// RVA: 0x1A14AF8 Offset: 0x1A14AF8 VA: 0x1A14AF8
	private void setLimitCntInfo(int maxLimitCnt, int svtLimitCnt, Transform root) { }

	// RVA: 0x1A181AC Offset: 0x1A181AC VA: 0x1A181AC
	private void destroyCurrentStatusGrid() { }

	// RVA: 0x1A1839C Offset: 0x1A1839C VA: 0x1A1839C
	private void destroyResStatusGrid() { }

	// RVA: 0x1A17F18 Offset: 0x1A17F18 VA: 0x1A17F18
	protected void EndOpen() { }

	// RVA: 0x1A18594 Offset: 0x1A18594 VA: 0x1A18594
	public void Close() { }

	// RVA: 0x1A18600 Offset: 0x1A18600 VA: 0x1A18600
	public void Close(Action callback) { }

	// RVA: 0x1A18678 Offset: 0x1A18678 VA: 0x1A18678
	protected void EndClose() { }

	// RVA: 0x1A186D0 Offset: 0x1A186D0 VA: 0x1A186D0
	public void ClickSkip() { }

	// RVA: 0x1A18770 Offset: 0x1A18770 VA: 0x1A18770
	private static void .cctor() { }
}

// Namespace: 
protected enum SvtCombineResultWindowComponent.SuccessInfo // TypeDefIndex: 9575
{
	// Fields
	public int value__; // 0x0
	public const SvtCombineResultWindowComponent.SuccessInfo NORMAL = 1;
	public const SvtCombineResultWindowComponent.SuccessInfo LARGE_SUCCESS = 2;
	public const SvtCombineResultWindowComponent.SuccessInfo SUPER_SUCCESS = 3;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB0850 Offset: 0xCB0850 VA: 0xCB0850
private sealed class SvtCombineResultWindowComponent.<EndOpen>c__AnonStorey0 // TypeDefIndex: 9576
{
	// Fields
	internal Action callback; // 0x10

	// Methods

	// RVA: 0x1A1858C Offset: 0x1A1858C VA: 0x1A1858C
	public void .ctor() { }

	// RVA: 0x1A18844 Offset: 0x1A18844 VA: 0x1A18844
	internal void <>m__0() { }
}

// Namespace: 
public class CheckMaterialSvtEquippedDialog : BaseDialog // TypeDefIndex: 9577
{
	// Fields
	[SerializeField] // RVA: 0xCD7144 Offset: 0xCD7144 VA: 0xCD7144
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xCD7154 Offset: 0xCD7154 VA: 0xCD7154
	private UILabel upperLabel; // 0x60
	[SerializeField] // RVA: 0xCD7164 Offset: 0xCD7164 VA: 0xCD7164
	private UILabel lowerLabel; // 0x68
	[SerializeField] // RVA: 0xCD7174 Offset: 0xCD7174 VA: 0xCD7174
	private UICommonButton decideButton; // 0x70
	[SerializeField] // RVA: 0xCD7184 Offset: 0xCD7184 VA: 0xCD7184
	private UICommonButton cancelButton; // 0x78
	[SerializeField] // RVA: 0xCD7194 Offset: 0xCD7194 VA: 0xCD7194
	private UICommonButton closeButton; // 0x80
	[SerializeField] // RVA: 0xCD71A4 Offset: 0xCD71A4 VA: 0xCD71A4
	private UILabel decideLabel; // 0x88
	[SerializeField] // RVA: 0xCD71B4 Offset: 0xCD71B4 VA: 0xCD71B4
	private UILabel cancelLabel; // 0x90
	[SerializeField] // RVA: 0xCD71C4 Offset: 0xCD71C4 VA: 0xCD71C4
	private UILabel closeLabel; // 0x98
	[SerializeField] // RVA: 0xCD71D4 Offset: 0xCD71D4 VA: 0xCD71D4
	private CheckMaterialSvtListViewManager listViewManager; // 0xA0
	[SerializeField] // RVA: 0xCD71E4 Offset: 0xCD71E4 VA: 0xCD71E4
	private GameObject listViewBg; // 0xA8
	private long servantStatusId; // 0xB0
	private long commandCodeStatusId; // 0xB8
	private const int Decide = 1;
	private const int Cancel = 0;
	private CheckMaterialSvtEquippedDialog.State state; // 0xC0
	private Action<int> callback; // 0xC8
	private List<long> lastSvtCommandCodeList; // 0xD0
	[CompilerGeneratedAttribute] // RVA: 0xCD71F4 Offset: 0xCD71F4 VA: 0xCD71F4
	private static Predicate<long> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1F1DA4C Offset: 0x1F1DA4C VA: 0x1F1DA4C
	public void .ctor() { }

	// RVA: 0x1F1DADC Offset: 0x1F1DADC VA: 0x1F1DADC
	public void Init() { }

	// RVA: 0x1F1DD00 Offset: 0x1F1DD00 VA: 0x1F1DD00
	public void Open(List<CombineServantListViewItem> selectMaterialItemList, List<long> servantIdList, Action<int> callback) { }

	// RVA: 0x1F1E474 Offset: 0x1F1E474 VA: 0x1F1E474
	public void OpenCommandCodeRemoveResult(Action<int> callback) { }

	// RVA: 0x1F1E74C Offset: 0x1F1E74C VA: 0x1F1E74C
	public void ClearCommandCodeRemoveResult() { }

	// RVA: 0x1F1E7AC Offset: 0x1F1E7AC VA: 0x1F1E7AC
