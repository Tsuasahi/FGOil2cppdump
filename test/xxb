
	// RVA: 0x1C734BC Offset: 0x1C734BC VA: 0x1C734BC
	public void .ctor() { }

	// RVA: 0x1C734C4 Offset: 0x1C734C4 VA: 0x1C734C4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C7352C Offset: 0x1C7352C VA: 0x1C7352C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC376A0 Offset: 0xC376A0 VA: 0xC376A0
[TooltipAttribute] // RVA: 0xC376A0 Offset: 0xC376A0 VA: 0xC376A0
public class PlayRandomAnimation : BaseAnimationAction // TypeDefIndex: 12735
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCAA664 Offset: 0xCAA664 VA: 0xCAA664
	[CheckForComponentAttribute] // RVA: 0xCAA664 Offset: 0xCAA664 VA: 0xCAA664
	[TooltipAttribute] // RVA: 0xCAA664 Offset: 0xCAA664 VA: 0xCAA664
	public FsmOwnerDefault gameObject; // 0x60
	[CompoundArrayAttribute] // RVA: 0xCAA6FC Offset: 0xCAA6FC VA: 0xCAA6FC
	[UIHintAttribute] // RVA: 0xCAA6FC Offset: 0xCAA6FC VA: 0xCAA6FC
	public FsmString[] animations; // 0x68
	[HasFloatSliderAttribute] // RVA: 0xCAA77C Offset: 0xCAA77C VA: 0xCAA77C
	public FsmFloat[] weights; // 0x70
	[TooltipAttribute] // RVA: 0xCAA794 Offset: 0xCAA794 VA: 0xCAA794
	public PlayMode playMode; // 0x78
	[HasFloatSliderAttribute] // RVA: 0xCAA7CC Offset: 0xCAA7CC VA: 0xCAA7CC
	[TooltipAttribute] // RVA: 0xCAA7CC Offset: 0xCAA7CC VA: 0xCAA7CC
	public FsmFloat blendTime; // 0x80
	[TooltipAttribute] // RVA: 0xCAA820 Offset: 0xCAA820 VA: 0xCAA820
	public FsmEvent finishEvent; // 0x88
	[TooltipAttribute] // RVA: 0xCAA858 Offset: 0xCAA858 VA: 0xCAA858
	public FsmEvent loopEvent; // 0x90
	[TooltipAttribute] // RVA: 0xCAA890 Offset: 0xCAA890 VA: 0xCAA890
	public bool stopOnExit; // 0x98
	private AnimationState anim; // 0xA0
	private float prevAnimtTime; // 0xA8

	// Methods

	// RVA: 0x1C707D0 Offset: 0x1C707D0 VA: 0x1C707D0
	public void .ctor() { }

	// RVA: 0x1C707D8 Offset: 0x1C707D8 VA: 0x1C707D8 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C70870 Offset: 0x1C70870 VA: 0x1C70870 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C70874 Offset: 0x1C70874 VA: 0x1C70874
	private void DoPlayRandomAnimation() { }

	// RVA: 0x1C70934 Offset: 0x1C70934 VA: 0x1C70934
	private void DoPlayAnimation(string animName) { }

	// RVA: 0x1C70B50 Offset: 0x1C70B50 VA: 0x1C70B50 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1C70DA8 Offset: 0x1C70DA8 VA: 0x1C70DA8 Slot: 37
	public override void OnExit() { }

	// RVA: 0x1C70DB8 Offset: 0x1C70DB8 VA: 0x1C70DB8
	private void StopAnimation() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC376F0 Offset: 0xC376F0 VA: 0xC376F0
[TooltipAttribute] // RVA: 0xC376F0 Offset: 0xC376F0 VA: 0xC376F0
public class PlayRandomSound : FsmStateAction // TypeDefIndex: 12736
{
	// Fields
	[TooltipAttribute] // RVA: 0xCAA8C8 Offset: 0xCAA8C8 VA: 0xCAA8C8
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xCAA900 Offset: 0xCAA900 VA: 0xCAA900
	public FsmVector3 position; // 0x58
	[CompoundArrayAttribute] // RVA: 0xCAA938 Offset: 0xCAA938 VA: 0xCAA938
	[ObjectTypeAttribute] // RVA: 0xCAA938 Offset: 0xCAA938 VA: 0xCAA938
	public FsmObject[] audioClips; // 0x60
	[HasFloatSliderAttribute] // RVA: 0xCAA9F0 Offset: 0xCAA9F0 VA: 0xCAA9F0
	public FsmFloat[] weights; // 0x68
	[HasFloatSliderAttribute] // RVA: 0xCAAA08 Offset: 0xCAAA08 VA: 0xCAAA08
	public FsmFloat volume; // 0x70
	[TooltipAttribute] // RVA: 0xCAAA20 Offset: 0xCAAA20 VA: 0xCAAA20
	public FsmBool noRepeat; // 0x78
	private int randomIndex; // 0x80
	private int lastIndex; // 0x84

	// Methods

	// RVA: 0x1C70EA8 Offset: 0x1C70EA8 VA: 0x1C70EA8
	public void .ctor() { }

	// RVA: 0x1C70EE4 Offset: 0x1C70EE4 VA: 0x1C70EE4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C710D8 Offset: 0x1C710D8 VA: 0x1C710D8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C71100 Offset: 0x1C71100 VA: 0x1C71100
	private void DoPlayRandomClip() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37740 Offset: 0xC37740 VA: 0xC37740
[TooltipAttribute] // RVA: 0xC37740 Offset: 0xC37740 VA: 0xC37740
public class PlaySound : FsmStateAction // TypeDefIndex: 12737
{
	// Fields
	public FsmOwnerDefault gameObject; // 0x50
	public FsmVector3 position; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCAAA58 Offset: 0xCAAA58 VA: 0xCAAA58
	[TitleAttribute] // RVA: 0xCAAA58 Offset: 0xCAAA58 VA: 0xCAAA58
	[ObjectTypeAttribute] // RVA: 0xCAAA58 Offset: 0xCAAA58 VA: 0xCAAA58
	public FsmObject clip; // 0x60
	[HasFloatSliderAttribute] // RVA: 0xCAAAF0 Offset: 0xCAAAF0 VA: 0xCAAAF0
	public FsmFloat volume; // 0x68

	// Methods

	// RVA: 0x1C71B90 Offset: 0x1C71B90 VA: 0x1C71B90
	public void .ctor() { }

	// RVA: 0x1C71BC4 Offset: 0x1C71BC4 VA: 0x1C71BC4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C71C54 Offset: 0x1C71C54 VA: 0x1C71C54 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C71C7C Offset: 0x1C71C7C VA: 0x1C71C7C
	private void DoPlaySound() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37790 Offset: 0xC37790 VA: 0xC37790
[TooltipAttribute] // RVA: 0xC37790 Offset: 0xC37790 VA: 0xC37790
public class RebuildTextures : FsmStateAction // TypeDefIndex: 12738
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCAAB08 Offset: 0xCAAB08 VA: 0xCAAB08
	public FsmMaterial substanceMaterial; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCAAB18 Offset: 0xCAAB18 VA: 0xCAAB18
	public FsmBool immediately; // 0x58
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x1C77B00 Offset: 0x1C77B00 VA: 0x1C77B00
	public void .ctor() { }

	// RVA: 0x1C77B08 Offset: 0x1C77B08 VA: 0x1C77B08 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C77B3C Offset: 0x1C77B3C VA: 0x1C77B3C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C77B54 Offset: 0x1C77B54 VA: 0x1C77B54 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1C77B50 Offset: 0x1C77B50 VA: 0x1C77B50
	private void DoRebuildTextures() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC377F0 Offset: 0xC377F0 VA: 0xC377F0
[TooltipAttribute] // RVA: 0xC377F0 Offset: 0xC377F0 VA: 0xC377F0
public class SetProceduralBoolean : FsmStateAction // TypeDefIndex: 12739
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCAAB28 Offset: 0xCAAB28 VA: 0xCAAB28
	[TooltipAttribute] // RVA: 0xCAAB28 Offset: 0xCAAB28 VA: 0xCAAB28
	public FsmMaterial substanceMaterial; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCAAB74 Offset: 0xCAAB74 VA: 0xCAAB74
	[TooltipAttribute] // RVA: 0xCAAB74 Offset: 0xCAAB74 VA: 0xCAAB74
	public FsmString boolProperty; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCAABC0 Offset: 0xCAABC0 VA: 0xCAABC0
	[TooltipAttribute] // RVA: 0xCAABC0 Offset: 0xCAABC0 VA: 0xCAABC0
	public FsmBool boolValue; // 0x60
	[TooltipAttribute] // RVA: 0xCAAC0C Offset: 0xCAAC0C VA: 0xCAAC0C
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x1B91B0C Offset: 0x1B91B0C VA: 0x1B91B0C
	public void .ctor() { }

	// RVA: 0x1B91B14 Offset: 0x1B91B14 VA: 0x1B91B14 Slot: 28
	public override void Reset() { }

	// RVA: 0x1B91BA4 Offset: 0x1B91BA4 VA: 0x1B91BA4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B91BBC Offset: 0x1B91BBC VA: 0x1B91BBC Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1B91BB8 Offset: 0x1B91BB8 VA: 0x1B91BB8
	private void DoSetProceduralFloat() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37850 Offset: 0xC37850 VA: 0xC37850
[TooltipAttribute] // RVA: 0xC37850 Offset: 0xC37850 VA: 0xC37850
public class SetProceduralColor : FsmStateAction // TypeDefIndex: 12740
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCAAC44 Offset: 0xCAAC44 VA: 0xCAAC44
	[TooltipAttribute] // RVA: 0xCAAC44 Offset: 0xCAAC44 VA: 0xCAAC44
	public FsmMaterial substanceMaterial; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCAAC90 Offset: 0xCAAC90 VA: 0xCAAC90
	[TooltipAttribute] // RVA: 0xCAAC90 Offset: 0xCAAC90 VA: 0xCAAC90
	public FsmString colorProperty; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCAACDC Offset: 0xCAACDC VA: 0xCAACDC
	[TooltipAttribute] // RVA: 0xCAACDC Offset: 0xCAACDC VA: 0xCAACDC
	public FsmColor colorValue; // 0x60
	[TooltipAttribute] // RVA: 0xCAAD28 Offset: 0xCAAD28 VA: 0xCAAD28
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x1B91BC0 Offset: 0x1B91BC0 VA: 0x1B91BC0
	public void .ctor() { }

	// RVA: 0x1B91BC8 Offset: 0x1B91BC8 VA: 0x1B91BC8 Slot: 28
	public override void Reset() { }

	// RVA: 0x1B91C5C Offset: 0x1B91C5C VA: 0x1B91C5C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B91C74 Offset: 0x1B91C74 VA: 0x1B91C74 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1B91C70 Offset: 0x1B91C70 VA: 0x1B91C70
	private void DoSetProceduralFloat() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC378B0 Offset: 0xC378B0 VA: 0xC378B0
[TooltipAttribute] // RVA: 0xC378B0 Offset: 0xC378B0 VA: 0xC378B0
public class SetProceduralFloat : FsmStateAction // TypeDefIndex: 12741
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCAAD60 Offset: 0xCAAD60 VA: 0xCAAD60
	[TooltipAttribute] // RVA: 0xCAAD60 Offset: 0xCAAD60 VA: 0xCAAD60
	public FsmMaterial substanceMaterial; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCAADAC Offset: 0xCAADAC VA: 0xCAADAC
	[TooltipAttribute] // RVA: 0xCAADAC Offset: 0xCAADAC VA: 0xCAADAC
	public FsmString floatProperty; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCAADF8 Offset: 0xCAADF8 VA: 0xCAADF8
	[TooltipAttribute] // RVA: 0xCAADF8 Offset: 0xCAADF8 VA: 0xCAADF8
	public FsmFloat floatValue; // 0x60
	[TooltipAttribute] // RVA: 0xCAAE44 Offset: 0xCAAE44 VA: 0xCAAE44
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x1B91C78 Offset: 0x1B91C78 VA: 0x1B91C78
	public void .ctor() { }

	// RVA: 0x1B91C80 Offset: 0x1B91C80 VA: 0x1B91C80 Slot: 28
	public override void Reset() { }

	// RVA: 0x1B91D10 Offset: 0x1B91D10 VA: 0x1B91D10 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B91D28 Offset: 0x1B91D28 VA: 0x1B91D28 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1B91D24 Offset: 0x1B91D24 VA: 0x1B91D24
	private void DoSetProceduralFloat() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37910 Offset: 0xC37910 VA: 0xC37910
[TooltipAttribute] // RVA: 0xC37910 Offset: 0xC37910 VA: 0xC37910
public class SetProceduralVector2 : FsmStateAction // TypeDefIndex: 12742
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCAAE7C Offset: 0xCAAE7C VA: 0xCAAE7C
	[TooltipAttribute] // RVA: 0xCAAE7C Offset: 0xCAAE7C VA: 0xCAAE7C
	public FsmMaterial substanceMaterial; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCAAEC8 Offset: 0xCAAEC8 VA: 0xCAAEC8
	[TooltipAttribute] // RVA: 0xCAAEC8 Offset: 0xCAAEC8 VA: 0xCAAEC8
	public FsmString vector2Property; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCAAF14 Offset: 0xCAAF14 VA: 0xCAAF14
	[TooltipAttribute] // RVA: 0xCAAF14 Offset: 0xCAAF14 VA: 0xCAAF14
	public FsmVector2 vector2Value; // 0x60
	[TooltipAttribute] // RVA: 0xCAAF60 Offset: 0xCAAF60 VA: 0xCAAF60
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x1B91D2C Offset: 0x1B91D2C VA: 0x1B91D2C
	public void .ctor() { }

	// RVA: 0x1B91D34 Offset: 0x1B91D34 VA: 0x1B91D34 Slot: 28
	public override void Reset() { }

	// RVA: 0x1B91D44 Offset: 0x1B91D44 VA: 0x1B91D44 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B91D5C Offset: 0x1B91D5C VA: 0x1B91D5C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1B91D58 Offset: 0x1B91D58 VA: 0x1B91D58
	private void DoSetProceduralVector() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37970 Offset: 0xC37970 VA: 0xC37970
[TooltipAttribute] // RVA: 0xC37970 Offset: 0xC37970 VA: 0xC37970
public class SetProceduralVector3 : FsmStateAction // TypeDefIndex: 12743
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCAAF98 Offset: 0xCAAF98 VA: 0xCAAF98
	[TooltipAttribute] // RVA: 0xCAAF98 Offset: 0xCAAF98 VA: 0xCAAF98
	public FsmMaterial substanceMaterial; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCAAFE4 Offset: 0xCAAFE4 VA: 0xCAAFE4
	[TooltipAttribute] // RVA: 0xCAAFE4 Offset: 0xCAAFE4 VA: 0xCAAFE4
	public FsmString vector3Property; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCAB030 Offset: 0xCAB030 VA: 0xCAB030
	[TooltipAttribute] // RVA: 0xCAB030 Offset: 0xCAB030 VA: 0xCAB030
	public FsmVector3 vector3Value; // 0x60
	[TooltipAttribute] // RVA: 0xCAB07C Offset: 0xCAB07C VA: 0xCAB07C
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x1B91D60 Offset: 0x1B91D60 VA: 0x1B91D60
	public void .ctor() { }

	// RVA: 0x1B91D68 Offset: 0x1B91D68 VA: 0x1B91D68 Slot: 28
	public override void Reset() { }

	// RVA: 0x1B91D78 Offset: 0x1B91D78 VA: 0x1B91D78 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B91D90 Offset: 0x1B91D90 VA: 0x1B91D90 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1B91D8C Offset: 0x1B91D8C VA: 0x1B91D8C
	private void DoSetProceduralVector() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC379D0 Offset: 0xC379D0 VA: 0xC379D0
[TooltipAttribute] // RVA: 0xC379D0 Offset: 0xC379D0 VA: 0xC379D0
public class ProjectLocationToMap : FsmStateAction // TypeDefIndex: 12744
{
	// Fields
	[TooltipAttribute] // RVA: 0xCAB0B4 Offset: 0xCAB0B4 VA: 0xCAB0B4
	public FsmVector3 GPSLocation; // 0x50
	[TooltipAttribute] // RVA: 0xCAB0EC Offset: 0xCAB0EC VA: 0xCAB0EC
	public ProjectLocationToMap.MapProjection mapProjection; // 0x58
	[ActionSection] // RVA: 0xCAB124 Offset: 0xCAB124 VA: 0xCAB124
	[HasFloatSliderAttribute] // RVA: 0xCAB124 Offset: 0xCAB124 VA: 0xCAB124
	public FsmFloat minLongitude; // 0x60
	[HasFloatSliderAttribute] // RVA: 0xCAB180 Offset: 0xCAB180 VA: 0xCAB180
	public FsmFloat maxLongitude; // 0x68
	[HasFloatSliderAttribute] // RVA: 0xCAB1A0 Offset: 0xCAB1A0 VA: 0xCAB1A0
	public FsmFloat minLatitude; // 0x70
	[HasFloatSliderAttribute] // RVA: 0xCAB1C0 Offset: 0xCAB1C0 VA: 0xCAB1C0
	public FsmFloat maxLatitude; // 0x78
	[ActionSection] // RVA: 0xCAB1E0 Offset: 0xCAB1E0 VA: 0xCAB1E0
	public FsmFloat minX; // 0x80
	public FsmFloat minY; // 0x88
	public FsmFloat width; // 0x90
	public FsmFloat height; // 0x98
	[ActionSection] // RVA: 0xCAB218 Offset: 0xCAB218 VA: 0xCAB218
	[UIHintAttribute] // RVA: 0xCAB218 Offset: 0xCAB218 VA: 0xCAB218
	[TooltipAttribute] // RVA: 0xCAB218 Offset: 0xCAB218 VA: 0xCAB218
	public FsmFloat projectedX; // 0xA0
	[UIHintAttribute] // RVA: 0xCAB28C Offset: 0xCAB28C VA: 0xCAB28C
	[TooltipAttribute] // RVA: 0xCAB28C Offset: 0xCAB28C VA: 0xCAB28C
	public FsmFloat projectedY; // 0xA8
	[TooltipAttribute] // RVA: 0xCAB2DC Offset: 0xCAB2DC VA: 0xCAB2DC
	public FsmBool normalized; // 0xB0
	public bool everyFrame; // 0xB8
	private float x; // 0xBC
	private float y; // 0xC0

	// Methods

	// RVA: 0x1C738B8 Offset: 0x1C738B8 VA: 0x1C738B8
	public void .ctor() { }

	// RVA: 0x1C738C0 Offset: 0x1C738C0 VA: 0x1C738C0 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C739F4 Offset: 0x1C739F4 VA: 0x1C739F4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C73D1C Offset: 0x1C73D1C VA: 0x1C73D1C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1C73A54 Offset: 0x1C73A54 VA: 0x1C73A54
	private void DoProjectGPSLocation() { }

	// RVA: 0x1C73D20 Offset: 0x1C73D20 VA: 0x1C73D20
	private void DoEquidistantCylindrical() { }

	// RVA: 0x1C73E2C Offset: 0x1C73E2C VA: 0x1C73E2C
	private void DoMercatorProjection() { }

	// RVA: 0x1C73F44 Offset: 0x1C73F44 VA: 0x1C73F44
	private static float LatitudeToMercator(float latitudeInDegrees) { }
}

// Namespace: 
public enum ProjectLocationToMap.MapProjection // TypeDefIndex: 12745
{
	// Fields
	public int value__; // 0x0
	public const ProjectLocationToMap.MapProjection EquidistantCylindrical = 0;
	public const ProjectLocationToMap.MapProjection Mercator = 1;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37A20 Offset: 0xC37A20 VA: 0xC37A20
[TooltipAttribute] // RVA: 0xC37A20 Offset: 0xC37A20 VA: 0xC37A20
public class GetQuaternionEulerAngles : QuaternionBaseAction // TypeDefIndex: 12746
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCAB314 Offset: 0xCAB314 VA: 0xCAB314
	[TooltipAttribute] // RVA: 0xCAB314 Offset: 0xCAB314 VA: 0xCAB314
	public FsmQuaternion quaternion; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCAB360 Offset: 0xCAB360 VA: 0xCAB360
	[UIHintAttribute] // RVA: 0xCAB360 Offset: 0xCAB360 VA: 0xCAB360
	[TooltipAttribute] // RVA: 0xCAB360 Offset: 0xCAB360 VA: 0xCAB360
	public FsmVector3 eulerAngles; // 0x58

	// Methods

	// RVA: 0x1B72D38 Offset: 0x1B72D38 VA: 0x1B72D38
	public void .ctor() { }

	// RVA: 0x1B72D40 Offset: 0x1B72D40 VA: 0x1B72D40 Slot: 28
	public override void Reset() { }

	// RVA: 0x1B72D54 Offset: 0x1B72D54 VA: 0x1B72D54 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B72E24 Offset: 0x1B72E24 VA: 0x1B72E24 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1B72E34 Offset: 0x1B72E34 VA: 0x1B72E34 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x1B72E48 Offset: 0x1B72E48 VA: 0x1B72E48 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x1B72D90 Offset: 0x1B72D90 VA: 0x1B72D90
	private void GetQuatEuler() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37A70 Offset: 0xC37A70 VA: 0xC37A70
[TooltipAttribute] // RVA: 0xC37A70 Offset: 0xC37A70 VA: 0xC37A70
public class GetQuaternionFromRotation : QuaternionBaseAction // TypeDefIndex: 12747
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCAB3C0 Offset: 0xCAB3C0 VA: 0xCAB3C0
	[TooltipAttribute] // RVA: 0xCAB3C0 Offset: 0xCAB3C0 VA: 0xCAB3C0
	public FsmVector3 fromDirection; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCAB40C Offset: 0xCAB40C VA: 0xCAB40C
	[TooltipAttribute] // RVA: 0xCAB40C Offset: 0xCAB40C VA: 0xCAB40C
	public FsmVector3 toDirection; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCAB458 Offset: 0xCAB458 VA: 0xCAB458
	[UIHintAttribute] // RVA: 0xCAB458 Offset: 0xCAB458 VA: 0xCAB458
	[TooltipAttribute] // RVA: 0xCAB458 Offset: 0xCAB458 VA: 0xCAB458
	public FsmQuaternion result; // 0x60

	// Methods

	// RVA: 0x1B72E5C Offset: 0x1B72E5C VA: 0x1B72E5C
	public void .ctor() { }

	// RVA: 0x1B72E64 Offset: 0x1B72E64 VA: 0x1B72E64 Slot: 28
	public override void Reset() { }

	// RVA: 0x1B72E7C Offset: 0x1B72E7C VA: 0x1B72E7C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B72FE0 Offset: 0x1B72FE0 VA: 0x1B72FE0 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1B72FF0 Offset: 0x1B72FF0 VA: 0x1B72FF0 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x1B73004 Offset: 0x1B73004 VA: 0x1B73004 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x1B72EB8 Offset: 0x1B72EB8 VA: 0x1B72EB8
	private void DoQuatFromRotation() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37AC0 Offset: 0xC37AC0 VA: 0xC37AC0
[TooltipAttribute] // RVA: 0xC37AC0 Offset: 0xC37AC0 VA: 0xC37AC0
public class GetQuaternionMultipliedByQuaternion : QuaternionBaseAction // TypeDefIndex: 12748
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCAB4B8 Offset: 0xCAB4B8 VA: 0xCAB4B8
	[TooltipAttribute] // RVA: 0xCAB4B8 Offset: 0xCAB4B8 VA: 0xCAB4B8
	public FsmQuaternion quaternionA; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCAB504 Offset: 0xCAB504 VA: 0xCAB504
	[TooltipAttribute] // RVA: 0xCAB504 Offset: 0xCAB504 VA: 0xCAB504
	public FsmQuaternion quaternionB; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCAB550 Offset: 0xCAB550 VA: 0xCAB550
	[UIHintAttribute] // RVA: 0xCAB550 Offset: 0xCAB550 VA: 0xCAB550
	[TooltipAttribute] // RVA: 0xCAB550 Offset: 0xCAB550 VA: 0xCAB550
	public FsmQuaternion result; // 0x60

	// Methods

	// RVA: 0x1B73018 Offset: 0x1B73018 VA: 0x1B73018
	public void .ctor() { }

	// RVA: 0x1B73020 Offset: 0x1B73020 VA: 0x1B73020 Slot: 28
	public override void Reset() { }

	// RVA: 0x1B73038 Offset: 0x1B73038 VA: 0x1B73038 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B731B4 Offset: 0x1B731B4 VA: 0x1B731B4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1B731C4 Offset: 0x1B731C4 VA: 0x1B731C4 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x1B731D8 Offset: 0x1B731D8 VA: 0x1B731D8 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x1B73074 Offset: 0x1B73074 VA: 0x1B73074
	private void DoQuatMult() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37B10 Offset: 0xC37B10 VA: 0xC37B10
[TooltipAttribute] // RVA: 0xC37B10 Offset: 0xC37B10 VA: 0xC37B10
public class GetQuaternionMultipliedByVector : QuaternionBaseAction // TypeDefIndex: 12749
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCAB5B0 Offset: 0xCAB5B0 VA: 0xCAB5B0
	[TooltipAttribute] // RVA: 0xCAB5B0 Offset: 0xCAB5B0 VA: 0xCAB5B0
	public FsmQuaternion quaternion; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCAB5FC Offset: 0xCAB5FC VA: 0xCAB5FC
	[TooltipAttribute] // RVA: 0xCAB5FC Offset: 0xCAB5FC VA: 0xCAB5FC
	public FsmVector3 vector3; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCAB648 Offset: 0xCAB648 VA: 0xCAB648
	[UIHintAttribute] // RVA: 0xCAB648 Offset: 0xCAB648 VA: 0xCAB648
	[TooltipAttribute] // RVA: 0xCAB648 Offset: 0xCAB648 VA: 0xCAB648
	public FsmVector3 result; // 0x60

	// Methods

	// RVA: 0x1B731EC Offset: 0x1B731EC VA: 0x1B731EC
	public void .ctor() { }

	// RVA: 0x1B731F4 Offset: 0x1B731F4 VA: 0x1B731F4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1B7320C Offset: 0x1B7320C VA: 0x1B7320C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B73378 Offset: 0x1B73378 VA: 0x1B73378 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1B73388 Offset: 0x1B73388 VA: 0x1B73388 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x1B7339C Offset: 0x1B7339C VA: 0x1B7339C Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x1B73248 Offset: 0x1B73248 VA: 0x1B73248
	private void DoQuatMult() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37B60 Offset: 0xC37B60 VA: 0xC37B60
[TooltipAttribute] // RVA: 0xC37B60 Offset: 0xC37B60 VA: 0xC37B60
public class QuaternionAngleAxis : QuaternionBaseAction // TypeDefIndex: 12750
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCAB6A8 Offset: 0xCAB6A8 VA: 0xCAB6A8
	[TooltipAttribute] // RVA: 0xCAB6A8 Offset: 0xCAB6A8 VA: 0xCAB6A8
	public FsmFloat angle; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCAB6F4 Offset: 0xCAB6F4 VA: 0xCAB6F4
	[TooltipAttribute] // RVA: 0xCAB6F4 Offset: 0xCAB6F4 VA: 0xCAB6F4
	public FsmVector3 axis; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCAB740 Offset: 0xCAB740 VA: 0xCAB740
	[UIHintAttribute] // RVA: 0xCAB740 Offset: 0xCAB740 VA: 0xCAB740
	[TooltipAttribute] // RVA: 0xCAB740 Offset: 0xCAB740 VA: 0xCAB740
	public FsmQuaternion result; // 0x60

	// Methods

	// RVA: 0x1C74094 Offset: 0x1C74094 VA: 0x1C74094
	public void .ctor() { }

	// RVA: 0x1C740A4 Offset: 0x1C740A4 VA: 0x1C740A4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C740BC Offset: 0x1C740BC VA: 0x1C740BC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C74208 Offset: 0x1C74208 VA: 0x1C74208 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1C74218 Offset: 0x1C74218 VA: 0x1C74218 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x1C7422C Offset: 0x1C7422C VA: 0x1C7422C Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x1C740F8 Offset: 0x1C740F8 VA: 0x1C740F8
	private void DoQuatAngleAxis() { }
}

// Namespace: HutongGames.PlayMaker.Actions
public abstract class QuaternionBaseAction : FsmStateAction // TypeDefIndex: 12751
{
	// Fields
	[TooltipAttribute] // RVA: 0xCAB7A0 Offset: 0xCAB7A0 VA: 0xCAB7A0
	public bool everyFrame; // 0x49
	[TooltipAttribute] // RVA: 0xCAB7D8 Offset: 0xCAB7D8 VA: 0xCAB7D8
	public QuaternionBaseAction.everyFrameOptions everyFrameOption; // 0x4C

	// Methods

	// RVA: 0x1C7409C Offset: 0x1C7409C VA: 0x1C7409C
	protected void .ctor() { }

	// RVA: 0x1C74240 Offset: 0x1C74240 VA: 0x1C74240 Slot: 30
	public override void Awake() { }
}

// Namespace: 
public enum QuaternionBaseAction.everyFrameOptions // TypeDefIndex: 12752
{
	// Fields
	public int value__; // 0x0
	public const QuaternionBaseAction.everyFrameOptions Update = 0;
	public const QuaternionBaseAction.everyFrameOptions FixedUpdate = 1;
	public const QuaternionBaseAction.everyFrameOptions LateUpdate = 2;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37BB0 Offset: 0xC37BB0 VA: 0xC37BB0
[TooltipAttribute] // RVA: 0xC37BB0 Offset: 0xC37BB0 VA: 0xC37BB0
public class QuaternionCompare : QuaternionBaseAction // TypeDefIndex: 12753
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCAB810 Offset: 0xCAB810 VA: 0xCAB810
	[TooltipAttribute] // RVA: 0xCAB810 Offset: 0xCAB810 VA: 0xCAB810
	public FsmQuaternion Quaternion1; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCAB85C Offset: 0xCAB85C VA: 0xCAB85C
	[TooltipAttribute] // RVA: 0xCAB85C Offset: 0xCAB85C VA: 0xCAB85C
	public FsmQuaternion Quaternion2; // 0x58
	[TooltipAttribute] // RVA: 0xCAB8A8 Offset: 0xCAB8A8 VA: 0xCAB8A8
	public FsmBool equal; // 0x60
	[TooltipAttribute] // RVA: 0xCAB8E0 Offset: 0xCAB8E0 VA: 0xCAB8E0
	public FsmEvent equalEvent; // 0x68
	[TooltipAttribute] // RVA: 0xCAB918 Offset: 0xCAB918 VA: 0xCAB918
	public FsmEvent notEqualEvent; // 0x70

	// Methods

	// RVA: 0x1C742CC Offset: 0x1C742CC VA: 0x1C742CC
	public void .ctor() { }

	// RVA: 0x1C742D4 Offset: 0x1C742D4 VA: 0x1C742D4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C74394 Offset: 0x1C74394 VA: 0x1C74394 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C74564 Offset: 0x1C74564 VA: 0x1C74564 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1C74574 Offset: 0x1C74574 VA: 0x1C74574 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x1C74588 Offset: 0x1C74588 VA: 0x1C74588 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x1C743D0 Offset: 0x1C743D0 VA: 0x1C743D0
	private void DoQuatCompare() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37C00 Offset: 0xC37C00 VA: 0xC37C00
[TooltipAttribute] // RVA: 0xC37C00 Offset: 0xC37C00 VA: 0xC37C00
public class QuaternionEuler : QuaternionBaseAction // TypeDefIndex: 12754
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCAB950 Offset: 0xCAB950 VA: 0xCAB950
	[TooltipAttribute] // RVA: 0xCAB950 Offset: 0xCAB950 VA: 0xCAB950
	public FsmVector3 eulerAngles; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCAB99C Offset: 0xCAB99C VA: 0xCAB99C
	[UIHintAttribute] // RVA: 0xCAB99C Offset: 0xCAB99C VA: 0xCAB99C
	[TooltipAttribute] // RVA: 0xCAB99C Offset: 0xCAB99C VA: 0xCAB99C
	public FsmQuaternion result; // 0x58

	// Methods

	// RVA: 0x1C7459C Offset: 0x1C7459C VA: 0x1C7459C
	public void .ctor() { }

	// RVA: 0x1C745A4 Offset: 0x1C745A4 VA: 0x1C745A4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C745B8 Offset: 0x1C745B8 VA: 0x1C745B8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C746D4 Offset: 0x1C746D4 VA: 0x1C746D4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1C746E4 Offset: 0x1C746E4 VA: 0x1C746E4 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x1C746F8 Offset: 0x1C746F8 VA: 0x1C746F8 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x1C745F4 Offset: 0x1C745F4 VA: 0x1C745F4
	private void DoQuatEuler() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37C50 Offset: 0xC37C50 VA: 0xC37C50
[TooltipAttribute] // RVA: 0xC37C50 Offset: 0xC37C50 VA: 0xC37C50
public class QuaternionInverse : QuaternionBaseAction // TypeDefIndex: 12755
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCAB9FC Offset: 0xCAB9FC VA: 0xCAB9FC
	[TooltipAttribute] // RVA: 0xCAB9FC Offset: 0xCAB9FC VA: 0xCAB9FC
	public FsmQuaternion rotation; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCABA48 Offset: 0xCABA48 VA: 0xCABA48
	[UIHintAttribute] // RVA: 0xCABA48 Offset: 0xCABA48 VA: 0xCABA48
	[TooltipAttribute] // RVA: 0xCABA48 Offset: 0xCABA48 VA: 0xCABA48
	public FsmQuaternion result; // 0x58

	// Methods

	// RVA: 0x1C7470C Offset: 0x1C7470C VA: 0x1C7470C
	public void .ctor() { }

	// RVA: 0x1C74714 Offset: 0x1C74714 VA: 0x1C74714 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C74728 Offset: 0x1C74728 VA: 0x1C74728 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C7484C Offset: 0x1C7484C VA: 0x1C7484C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1C7485C Offset: 0x1C7485C VA: 0x1C7485C Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x1C74870 Offset: 0x1C74870 VA: 0x1C74870 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x1C74764 Offset: 0x1C74764 VA: 0x1C74764
	private void DoQuatInverse() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37CA0 Offset: 0xC37CA0 VA: 0xC37CA0
[TooltipAttribute] // RVA: 0xC37CA0 Offset: 0xC37CA0 VA: 0xC37CA0
public class QuaternionLerp : QuaternionBaseAction // TypeDefIndex: 12756
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCABAA8 Offset: 0xCABAA8 VA: 0xCABAA8
	[TooltipAttribute] // RVA: 0xCABAA8 Offset: 0xCABAA8 VA: 0xCABAA8
	public FsmQuaternion fromQuaternion; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCABAF4 Offset: 0xCABAF4 VA: 0xCABAF4
	[TooltipAttribute] // RVA: 0xCABAF4 Offset: 0xCABAF4 VA: 0xCABAF4
	public FsmQuaternion toQuaternion; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCABB40 Offset: 0xCABB40 VA: 0xCABB40
	[TooltipAttribute] // RVA: 0xCABB40 Offset: 0xCABB40 VA: 0xCABB40
	[HasFloatSliderAttribute] // RVA: 0xCABB40 Offset: 0xCABB40 VA: 0xCABB40
	public FsmFloat amount; // 0x60
	[RequiredFieldAttribute] // RVA: 0xCABBA4 Offset: 0xCABBA4 VA: 0xCABBA4
	[UIHintAttribute] // RVA: 0xCABBA4 Offset: 0xCABBA4 VA: 0xCABBA4
	[TooltipAttribute] // RVA: 0xCABBA4 Offset: 0xCABBA4 VA: 0xCABBA4
	public FsmQuaternion storeResult; // 0x68

	// Methods

	// RVA: 0x1C74884 Offset: 0x1C74884 VA: 0x1C74884
	public void .ctor() { }

	// RVA: 0x1C7488C Offset: 0x1C7488C VA: 0x1C7488C Slot: 28
	public override void Reset() { }

	// RVA: 0x1C74960 Offset: 0x1C74960 VA: 0x1C74960 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C74B08 Offset: 0x1C74B08 VA: 0x1C74B08 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1C74B18 Offset: 0x1C74B18 VA: 0x1C74B18 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x1C74B2C Offset: 0x1C74B2C VA: 0x1C74B2C Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x1C7499C Offset: 0x1C7499C VA: 0x1C7499C
	private void DoQuatLerp() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37CF0 Offset: 0xC37CF0 VA: 0xC37CF0
[TooltipAttribute] // RVA: 0xC37CF0 Offset: 0xC37CF0 VA: 0xC37CF0
public class QuaternionLookRotation : QuaternionBaseAction // TypeDefIndex: 12757
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCABC04 Offset: 0xCABC04 VA: 0xCABC04
	[TooltipAttribute] // RVA: 0xCABC04 Offset: 0xCABC04 VA: 0xCABC04
	public FsmVector3 direction; // 0x50
	[TooltipAttribute] // RVA: 0xCABC50 Offset: 0xCABC50 VA: 0xCABC50
	public FsmVector3 upVector; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCABC88 Offset: 0xCABC88 VA: 0xCABC88
	[UIHintAttribute] // RVA: 0xCABC88 Offset: 0xCABC88 VA: 0xCABC88
	[TooltipAttribute] // RVA: 0xCABC88 Offset: 0xCABC88 VA: 0xCABC88
	public FsmQuaternion result; // 0x60

	// Methods

	// RVA: 0x1C74B40 Offset: 0x1C74B40 VA: 0x1C74B40
	public void .ctor() { }

	// RVA: 0x1C74B48 Offset: 0x1C74B48 VA: 0x1C74B48 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C74BDC Offset: 0x1C74BDC VA: 0x1C74BDC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C74D9C Offset: 0x1C74D9C VA: 0x1C74D9C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1C74DAC Offset: 0x1C74DAC VA: 0x1C74DAC Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x1C74DC0 Offset: 0x1C74DC0 VA: 0x1C74DC0 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x1C74C18 Offset: 0x1C74C18 VA: 0x1C74C18
	private void DoQuatLookRotation() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37D40 Offset: 0xC37D40 VA: 0xC37D40
[TooltipAttribute] // RVA: 0xC37D40 Offset: 0xC37D40 VA: 0xC37D40
public class QuaternionLowPassFilter : QuaternionBaseAction // TypeDefIndex: 12758
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCABCE8 Offset: 0xCABCE8 VA: 0xCABCE8
	[UIHintAttribute] // RVA: 0xCABCE8 Offset: 0xCABCE8 VA: 0xCABCE8
	[TooltipAttribute] // RVA: 0xCABCE8 Offset: 0xCABCE8 VA: 0xCABCE8
	public FsmQuaternion quaternionVariable; // 0x50
	[TooltipAttribute] // RVA: 0xCABD48 Offset: 0xCABD48 VA: 0xCABD48
	public FsmFloat filteringFactor; // 0x58
	private Quaternion filteredQuaternion; // 0x60

	// Methods

	// RVA: 0x1C74DD4 Offset: 0x1C74DD4 VA: 0x1C74DD4
	public void .ctor() { }

	// RVA: 0x1C74DDC Offset: 0x1C74DDC VA: 0x1C74DDC Slot: 28
	public override void Reset() { }

	// RVA: 0x1C74E1C Offset: 0x1C74E1C VA: 0x1C74E1C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C74F14 Offset: 0x1C74F14 VA: 0x1C74F14 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1C75168 Offset: 0x1C75168 VA: 0x1C75168 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x1C7517C Offset: 0x1C7517C VA: 0x1C7517C Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x1C74F24 Offset: 0x1C74F24 VA: 0x1C74F24
	private void DoQuatLowPassFilter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37D90 Offset: 0xC37D90 VA: 0xC37D90
[TooltipAttribute] // RVA: 0xC37D90 Offset: 0xC37D90 VA: 0xC37D90
public class QuaternionRotateTowards : QuaternionBaseAction // TypeDefIndex: 12759
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCABD80 Offset: 0xCABD80 VA: 0xCABD80
	[TooltipAttribute] // RVA: 0xCABD80 Offset: 0xCABD80 VA: 0xCABD80
	public FsmQuaternion fromQuaternion; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCABDCC Offset: 0xCABDCC VA: 0xCABDCC
	[TooltipAttribute] // RVA: 0xCABDCC Offset: 0xCABDCC VA: 0xCABDCC
	public FsmQuaternion toQuaternion; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCABE18 Offset: 0xCABE18 VA: 0xCABE18
	[TooltipAttribute] // RVA: 0xCABE18 Offset: 0xCABE18 VA: 0xCABE18
	public FsmFloat maxDegreesDelta; // 0x60
	[RequiredFieldAttribute] // RVA: 0xCABE64 Offset: 0xCABE64 VA: 0xCABE64
	[UIHintAttribute] // RVA: 0xCABE64 Offset: 0xCABE64 VA: 0xCABE64
	[TooltipAttribute] // RVA: 0xCABE64 Offset: 0xCABE64 VA: 0xCABE64
	public FsmQuaternion storeResult; // 0x68

	// Methods

	// RVA: 0x1C75190 Offset: 0x1C75190 VA: 0x1C75190
	public void .ctor() { }

	// RVA: 0x1C75198 Offset: 0x1C75198 VA: 0x1C75198 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C7526C Offset: 0x1C7526C VA: 0x1C7526C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C75414 Offset: 0x1C75414 VA: 0x1C75414 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1C75424 Offset: 0x1C75424 VA: 0x1C75424 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x1C75438 Offset: 0x1C75438 VA: 0x1C75438 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x1C752A8 Offset: 0x1C752A8 VA: 0x1C752A8
	private void DoQuatRotateTowards() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37DE0 Offset: 0xC37DE0 VA: 0xC37DE0
[TooltipAttribute] // RVA: 0xC37DE0 Offset: 0xC37DE0 VA: 0xC37DE0
public class QuaternionSlerp : QuaternionBaseAction // TypeDefIndex: 12760
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCABEC4 Offset: 0xCABEC4 VA: 0xCABEC4
	[TooltipAttribute] // RVA: 0xCABEC4 Offset: 0xCABEC4 VA: 0xCABEC4
	public FsmQuaternion fromQuaternion; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCABF10 Offset: 0xCABF10 VA: 0xCABF10
	[TooltipAttribute] // RVA: 0xCABF10 Offset: 0xCABF10 VA: 0xCABF10
	public FsmQuaternion toQuaternion; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCABF5C Offset: 0xCABF5C VA: 0xCABF5C
	[TooltipAttribute] // RVA: 0xCABF5C Offset: 0xCABF5C VA: 0xCABF5C
	[HasFloatSliderAttribute] // RVA: 0xCABF5C Offset: 0xCABF5C VA: 0xCABF5C
	public FsmFloat amount; // 0x60
	[RequiredFieldAttribute] // RVA: 0xCABFC0 Offset: 0xCABFC0 VA: 0xCABFC0
	[UIHintAttribute] // RVA: 0xCABFC0 Offset: 0xCABFC0 VA: 0xCABFC0
	[TooltipAttribute] // RVA: 0xCABFC0 Offset: 0xCABFC0 VA: 0xCABFC0
	public FsmQuaternion storeResult; // 0x68

	// Methods

	// RVA: 0x1C7544C Offset: 0x1C7544C VA: 0x1C7544C
	public void .ctor() { }

	// RVA: 0x1C75454 Offset: 0x1C75454 VA: 0x1C75454 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C7552C Offset: 0x1C7552C VA: 0x1C7552C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C756D4 Offset: 0x1C756D4 VA: 0x1C756D4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1C756E4 Offset: 0x1C756E4 VA: 0x1C756E4 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x1C756F8 Offset: 0x1C756F8 VA: 0x1C756F8 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x1C75568 Offset: 0x1C75568 VA: 0x1C75568
	private void DoQuatSlerp() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC37E30 Offset: 0xC37E30 VA: 0xC37E30
[TooltipAttribute] // RVA: 0xC37E30 Offset: 0xC37E30 VA: 0xC37E30
public class RandomBool : FsmStateAction // TypeDefIndex: 12761
{
	// Fields
	[UIHintAttribute] // RVA: 0xCAC020 Offset: 0xCAC020 VA: 0xCAC020
	public FsmBool storeResult; // 0x50

	// Methods

	// RVA: 0x1C7570C Offset: 0x1C7570C VA: 0x1C7570C
	public void .ctor() { }

	// RVA: 0x1C75714 Offset: 0x1C75714 VA: 0x1C75714 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C7571C Offset: 0x1C7571C VA: 0x1C7571C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
