
	// Methods

	// RVA: 0x1ECF7C8 Offset: 0x1ECF7C8 VA: 0x1ECF7C8
	private static void .cctor() { }

	// RVA: 0x1ECD884 Offset: 0x1ECD884 VA: 0x1ECD884
	internal static void NotifyMarshaledObject(object obj, ObjRef or) { }

	// RVA: 0x1ECC910 Offset: 0x1ECC910 VA: 0x1ECC910
	internal static void NotifyUnmarshaledObject(object obj, ObjRef or) { }

	// RVA: 0x1ECF4A4 Offset: 0x1ECF4A4 VA: 0x1ECF4A4
	internal static void NotifyDisconnectedObject(object obj) { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xBC8CDC Offset: 0xBC8CDC VA: 0xBC8CDC
public class ActivatedClientTypeEntry : TypeEntry // TypeDefIndex: 609
{
	// Fields
	private string applicationUrl; // 0x20
	private Type obj_type; // 0x28

	// Properties
	public string ApplicationUrl { get; }
	public IContextAttribute[] ContextAttributes { get; }
	public Type ObjectType { get; }

	// Methods

	// RVA: 0x1F8FBFC Offset: 0x1F8FBFC VA: 0x1F8FBFC
	public void .ctor(string typeName, string assemblyName, string appUrl) { }

	// RVA: 0x1F8FD4C Offset: 0x1F8FD4C VA: 0x1F8FD4C
	public string get_ApplicationUrl() { }

	// RVA: 0x1F8FD54 Offset: 0x1F8FD54 VA: 0x1F8FD54
	public IContextAttribute[] get_ContextAttributes() { }

	// RVA: 0x1F8FD5C Offset: 0x1F8FD5C VA: 0x1F8FD5C
	public Type get_ObjectType() { }

	// RVA: 0x1F8FD64 Offset: 0x1F8FD64 VA: 0x1F8FD64 Slot: 3
	public override string ToString() { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xBC8CF0 Offset: 0xBC8CF0 VA: 0xBC8CF0
public class ActivatedServiceTypeEntry : TypeEntry // TypeDefIndex: 610
{
	// Fields
	private Type obj_type; // 0x20

	// Properties
	public Type ObjectType { get; }

	// Methods

	// RVA: 0x1F8FE04 Offset: 0x1F8FE04 VA: 0x1F8FE04
	public void .ctor(string typeName, string assemblyName) { }

	// RVA: 0x1F8FF44 Offset: 0x1F8FF44 VA: 0x1F8FF44
	public Type get_ObjectType() { }

	// RVA: 0x1F8FF4C Offset: 0x1F8FF4C VA: 0x1F8FF4C Slot: 3
	public override string ToString() { }
}

// Namespace: System.Runtime.Remoting
[Serializable]
internal class EnvoyInfo : IEnvoyInfo // TypeDefIndex: 611
{
	// Fields
	private IMessageSink envoySinks; // 0x10

	// Properties
	public IMessageSink EnvoySinks { get; }

	// Methods

	// RVA: 0x1FA32F4 Offset: 0x1FA32F4 VA: 0x1FA32F4
	public void .ctor(IMessageSink sinks) { }

	// RVA: 0x1FA3320 Offset: 0x1FA3320 VA: 0x1FA3320 Slot: 4
	public IMessageSink get_EnvoySinks() { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xBC8D04 Offset: 0xBC8D04 VA: 0xBC8D04
public interface IChannelInfo // TypeDefIndex: 612
{
	// Properties
	public abstract object[] ChannelData { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract object[] get_ChannelData();
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xBC8D18 Offset: 0xBC8D18 VA: 0xBC8D18
public interface IEnvoyInfo // TypeDefIndex: 613
{
	// Properties
	public abstract IMessageSink EnvoySinks { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract IMessageSink get_EnvoySinks();
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xBC8D2C Offset: 0xBC8D2C VA: 0xBC8D2C
public interface IRemotingTypeInfo // TypeDefIndex: 614
{
	// Properties
	public abstract string TypeName { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract string get_TypeName();
}

// Namespace: System.Runtime.Remoting
internal abstract class Identity // TypeDefIndex: 615
{
	// Fields
	protected string _objectUri; // 0x10
	protected IMessageSink _channelSink; // 0x18
	protected IMessageSink _envoySink; // 0x20
	private DynamicPropertyCollection _clientDynamicProperties; // 0x28
	private DynamicPropertyCollection _serverDynamicProperties; // 0x30
	protected ObjRef _objRef; // 0x38
	private bool _disposed; // 0x40

	// Properties
	public IMessageSink ChannelSink { get; set; }
	public IMessageSink EnvoySink { get; }
	public string ObjectUri { get; set; }
	public bool IsConnected { get; }
	public bool Disposed { get; set; }
	public DynamicPropertyCollection ClientDynamicProperties { get; }
	public DynamicPropertyCollection ServerDynamicProperties { get; }
	public bool HasServerDynamicSinks { get; }

	// Methods

	// RVA: 0x1F99ABC Offset: 0x1F99ABC VA: 0x1F99ABC
	public void .ctor(string objectUri) { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract ObjRef CreateObjRef(Type requestedType);

	// RVA: 0x1FA3328 Offset: 0x1FA3328 VA: 0x1FA3328
	public IMessageSink get_ChannelSink() { }

	// RVA: 0x1FA3330 Offset: 0x1FA3330 VA: 0x1FA3330
	public void set_ChannelSink(IMessageSink value) { }

	// RVA: 0x1FA3338 Offset: 0x1FA3338 VA: 0x1FA3338
	public IMessageSink get_EnvoySink() { }

	// RVA: 0x1FA3340 Offset: 0x1FA3340 VA: 0x1FA3340
	public string get_ObjectUri() { }

	// RVA: 0x1FA3348 Offset: 0x1FA3348 VA: 0x1FA3348
	public void set_ObjectUri(string value) { }

	// RVA: 0x1FA3350 Offset: 0x1FA3350 VA: 0x1FA3350
	public bool get_IsConnected() { }

	// RVA: 0x1FA3360 Offset: 0x1FA3360 VA: 0x1FA3360
	public bool get_Disposed() { }

	// RVA: 0x1FA3368 Offset: 0x1FA3368 VA: 0x1FA3368
	public void set_Disposed(bool value) { }

	// RVA: 0x1F9E7C8 Offset: 0x1F9E7C8 VA: 0x1F9E7C8
	public DynamicPropertyCollection get_ClientDynamicProperties() { }

	// RVA: 0x1F9E830 Offset: 0x1F9E830 VA: 0x1F9E830
	public DynamicPropertyCollection get_ServerDynamicProperties() { }

	// RVA: 0x1FA3374 Offset: 0x1FA3374 VA: 0x1FA3374
	public bool get_HasServerDynamicSinks() { }

	// RVA: 0x1FA33C8 Offset: 0x1FA33C8 VA: 0x1FA33C8
	public void NotifyClientDynamicSinks(bool start, IMessage req_msg, bool client_site, bool async) { }

	// RVA: 0x1FA3470 Offset: 0x1FA3470 VA: 0x1FA3470
	public void NotifyServerDynamicSinks(bool start, IMessage req_msg, bool client_site, bool async) { }
}

// Namespace: System.Runtime.Remoting
internal class ClientIdentity : Identity // TypeDefIndex: 616
{
	// Fields
	private WeakReference _proxyReference; // 0x48

	// Properties
	public MarshalByRefObject ClientProxy { get; set; }
	public string TargetUri { get; }

	// Methods

	// RVA: 0x1F99988 Offset: 0x1F99988 VA: 0x1F99988
	public void .ctor(string objectUri, ObjRef objRef) { }

	// RVA: 0x1F99AE8 Offset: 0x1F99AE8 VA: 0x1F99AE8
	public MarshalByRefObject get_ClientProxy() { }

	// RVA: 0x1F99BD0 Offset: 0x1F99BD0 VA: 0x1F99BD0
	public void set_ClientProxy(MarshalByRefObject value) { }

	// RVA: 0x1F99C40 Offset: 0x1F99C40 VA: 0x1F99C40 Slot: 4
	public override ObjRef CreateObjRef(Type requestedType) { }

	// RVA: 0x1F99C48 Offset: 0x1F99C48 VA: 0x1F99C48
	public string get_TargetUri() { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xBC8D40 Offset: 0xBC8D40 VA: 0xBC8D40
public class InternalRemotingServices // TypeDefIndex: 617
{
	// Fields
	private static Hashtable _soapAttributes; // 0x0

	// Methods

	// RVA: 0x1FA3518 Offset: 0x1FA3518 VA: 0x1FA3518
	private static void .cctor() { }

	// RVA: 0x1FA3584 Offset: 0x1FA3584 VA: 0x1FA3584
	public static SoapAttribute GetCachedSoapAttribute(object reflectionObject) { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xBC8D54 Offset: 0xBC8D54 VA: 0xBC8D54
[Serializable]
public class ObjRef : ISerializable, IObjectReference // TypeDefIndex: 618
{
	// Fields
	private IChannelInfo channel_info; // 0x10
	private string uri; // 0x18
	private IRemotingTypeInfo typeInfo; // 0x20
	private IEnvoyInfo envoyInfo; // 0x28
	private int flags; // 0x30
	private Type _serverType; // 0x38
	private static int MarshalledObjectRef; // 0x0
	private static int WellKnowObjectRef; // 0x4
	[CompilerGeneratedAttribute] // RVA: 0xBCB670 Offset: 0xBCB670 VA: 0xBCB670
	private static Dictionary<string, int> <>f__switch$map26; // 0x8

	// Properties
	internal bool IsReferenceToWellKnow { get; }
	public virtual IChannelInfo ChannelInfo { get; }
	public virtual IEnvoyInfo EnvoyInfo { get; set; }
	public virtual IRemotingTypeInfo TypeInfo { get; set; }
	public virtual string URI { get; set; }
	internal Type ServerType { get; }

	// Methods

	// RVA: 0x1EC5D6C Offset: 0x1EC5D6C VA: 0x1EC5D6C
	public void .ctor() { }

	// RVA: 0x1EC5DF4 Offset: 0x1EC5DF4 VA: 0x1EC5DF4
	internal void .ctor(string typeName, string uri, IChannelInfo cinfo) { }

	// RVA: 0x1EC6354 Offset: 0x1EC6354 VA: 0x1EC6354
	internal void .ctor(Type type, string url, object remoteChannelData) { }

	// RVA: 0x1EC6440 Offset: 0x1EC6440 VA: 0x1EC6440
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x1EC6C0C Offset: 0x1EC6C0C VA: 0x1EC6C0C
	private static void .cctor() { }

	// RVA: 0x1EC6C70 Offset: 0x1EC6C70 VA: 0x1EC6C70
	internal bool get_IsReferenceToWellKnow() { }

	[ReliabilityContractAttribute] // RVA: 0xBCD1C4 Offset: 0xBCD1C4 VA: 0xBCD1C4
	// RVA: 0x1EC6CE8 Offset: 0x1EC6CE8 VA: 0x1EC6CE8 Slot: 6
	public virtual IChannelInfo get_ChannelInfo() { }

	// RVA: 0x1EC6CF0 Offset: 0x1EC6CF0 VA: 0x1EC6CF0 Slot: 7
	public virtual IEnvoyInfo get_EnvoyInfo() { }

	// RVA: 0x1EC6CF8 Offset: 0x1EC6CF8 VA: 0x1EC6CF8 Slot: 8
	public virtual void set_EnvoyInfo(IEnvoyInfo value) { }

	// RVA: 0x1EC6D00 Offset: 0x1EC6D00 VA: 0x1EC6D00 Slot: 9
	public virtual IRemotingTypeInfo get_TypeInfo() { }

	// RVA: 0x1EC6D08 Offset: 0x1EC6D08 VA: 0x1EC6D08 Slot: 10
	public virtual void set_TypeInfo(IRemotingTypeInfo value) { }

	// RVA: 0x1EC6D10 Offset: 0x1EC6D10 VA: 0x1EC6D10 Slot: 11
	public virtual string get_URI() { }

	// RVA: 0x1EC6D18 Offset: 0x1EC6D18 VA: 0x1EC6D18 Slot: 12
	public virtual void set_URI(string value) { }

	// RVA: 0x1EC6D20 Offset: 0x1EC6D20 VA: 0x1EC6D20 Slot: 13
	public virtual void GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x1EC6EFC Offset: 0x1EC6EFC VA: 0x1EC6EFC Slot: 14
	public virtual object GetRealObject(StreamingContext context) { }

	// RVA: 0x1EC5D94 Offset: 0x1EC5D94 VA: 0x1EC5D94
	internal void UpdateChannelInfo() { }

	// RVA: 0x1EC7020 Offset: 0x1EC7020 VA: 0x1EC7020
	internal Type get_ServerType() { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xBC8D68 Offset: 0xBC8D68 VA: 0xBC8D68
public static class RemotingConfiguration // TypeDefIndex: 619
{
	// Fields
	private static string applicationID; // 0x0
	private static string applicationName; // 0x8
	private static string processGuid; // 0x10
	private static bool defaultConfigRead; // 0x18
	private static bool defaultDelayedConfigRead; // 0x19
	private static string _errorMode; // 0x20
	private static Hashtable wellKnownClientEntries; // 0x28
	private static Hashtable activatedClientEntries; // 0x30
	private static Hashtable wellKnownServiceEntries; // 0x38
	private static Hashtable activatedServiceEntries; // 0x40
	private static Hashtable channelTemplates; // 0x48
	private static Hashtable clientProviderTemplates; // 0x50
	private static Hashtable serverProviderTemplates; // 0x58

	// Properties
	public static string ApplicationName { get; set; }
	public static string ProcessId { get; }

	// Methods

	// RVA: 0x1EC9194 Offset: 0x1EC9194 VA: 0x1EC9194
	private static void .cctor() { }

	// RVA: 0x1EC92F8 Offset: 0x1EC92F8 VA: 0x1EC92F8
	public static string get_ApplicationName() { }

	// RVA: 0x1EC9360 Offset: 0x1EC9360 VA: 0x1EC9360
	public static void set_ApplicationName(string value) { }

	// RVA: 0x1EC93CC Offset: 0x1EC93CC VA: 0x1EC93CC
	public static string get_ProcessId() { }

	// RVA: 0x1EC9494 Offset: 0x1EC9494 VA: 0x1EC9494
	internal static void LoadDefaultDelayedChannels() { }

	// RVA: 0x1EC97E0 Offset: 0x1EC97E0 VA: 0x1EC97E0
	public static bool IsActivationAllowed(Type svrType) { }

	// RVA: 0x1EC9900 Offset: 0x1EC9900 VA: 0x1EC9900
	public static ActivatedClientTypeEntry IsRemotelyActivatedClientType(Type svrType) { }

	// RVA: 0x1EC9A5C Offset: 0x1EC9A5C VA: 0x1EC9A5C
	public static void RegisterActivatedClientType(ActivatedClientTypeEntry entry) { }

	// RVA: 0x1EC9DA0 Offset: 0x1EC9DA0 VA: 0x1EC9DA0
	public static void RegisterActivatedServiceType(ActivatedServiceTypeEntry entry) { }

	// RVA: 0x1EC9EEC Offset: 0x1EC9EEC VA: 0x1EC9EEC
	public static void RegisterWellKnownClientType(WellKnownClientTypeEntry entry) { }

	// RVA: 0x1ECA1C0 Offset: 0x1ECA1C0 VA: 0x1ECA1C0
	public static void RegisterWellKnownServiceType(WellKnownServiceTypeEntry entry) { }

	// RVA: 0x1ECA454 Offset: 0x1ECA454 VA: 0x1ECA454
	internal static void RegisterChannelTemplate(ChannelData channel) { }

	// RVA: 0x1ECA4FC Offset: 0x1ECA4FC VA: 0x1ECA4FC
	internal static void RegisterClientProviderTemplate(ProviderData prov) { }

	// RVA: 0x1ECA5A4 Offset: 0x1ECA5A4 VA: 0x1ECA5A4
	internal static void RegisterServerProviderTemplate(ProviderData prov) { }

	// RVA: 0x1ECA64C Offset: 0x1ECA64C VA: 0x1ECA64C
	internal static void RegisterChannels(ArrayList channels, bool onlyDelayed) { }

	// RVA: 0x1ECB5B8 Offset: 0x1ECB5B8 VA: 0x1ECB5B8
	internal static void RegisterTypes(ArrayList types) { }

	// RVA: 0x1ECBBAC Offset: 0x1ECBBAC VA: 0x1ECBBAC
	public static bool CustomErrorsEnabled(bool isLocalRequest) { }

	// RVA: 0x1ECBCC8 Offset: 0x1ECBCC8 VA: 0x1ECBCC8
	internal static void SetCustomErrorsMode(string mode) { }
}

// Namespace: System.Runtime.Remoting
internal class ConfigHandler : SmallXmlParser.IContentHandler // TypeDefIndex: 620
{
	// Fields
	private ArrayList typeEntries; // 0x10
	private ArrayList channelInstances; // 0x18
	private ChannelData currentChannel; // 0x20
	private Stack currentProviderData; // 0x28
	private string currentClientUrl; // 0x30
	private string appName; // 0x38
	private string currentXmlPath; // 0x40
	private bool onlyDelayedChannels; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xBCB680 Offset: 0xBCB680 VA: 0xBCB680
	private static Dictionary<string, int> <>f__switch$map27; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xBCB690 Offset: 0xBCB690 VA: 0xBCB690
	private static Dictionary<string, int> <>f__switch$map28; // 0x8

	// Methods

	// RVA: 0x1F99C7C Offset: 0x1F99C7C VA: 0x1F99C7C
	public void .ctor(bool onlyDelayedChannels) { }

	// RVA: 0x1F99D44 Offset: 0x1F99D44 VA: 0x1F99D44
	private void ValidatePath(string element, string[] paths) { }

	// RVA: 0x1F99E74 Offset: 0x1F99E74 VA: 0x1F99E74
	private bool CheckPath(string path) { }

	// RVA: 0x1F99F90 Offset: 0x1F99F90 VA: 0x1F99F90 Slot: 4
	public void OnStartParsing(SmallXmlParser parser) { }

	// RVA: 0x1F99F94 Offset: 0x1F99F94 VA: 0x1F99F94 Slot: 8
	public void OnProcessingInstruction(string name, string text) { }

	// RVA: 0x1F99F98 Offset: 0x1F99F98 VA: 0x1F99F98 Slot: 10
	public void OnIgnorableWhitespace(string s) { }

	// RVA: 0x1F99F9C Offset: 0x1F99F9C VA: 0x1F99F9C Slot: 6
	public void OnStartElement(string name, SmallXmlParser.IAttrList attrs) { }

	// RVA: 0x1F9A194 Offset: 0x1F9A194 VA: 0x1F9A194
	public void ParseElement(string name, SmallXmlParser.IAttrList attrs) { }

	// RVA: 0x1F9D1CC Offset: 0x1F9D1CC VA: 0x1F9D1CC Slot: 7
	public void OnEndElement(string name) { }

	// RVA: 0x1F9B3A4 Offset: 0x1F9B3A4 VA: 0x1F9B3A4
	private void ReadCustomProviderData(string name, SmallXmlParser.IAttrList attrs) { }

	// RVA: 0x1F9B7D4 Offset: 0x1F9B7D4 VA: 0x1F9B7D4
	private void ReadLifetine(SmallXmlParser.IAttrList attrs) { }

	// RVA: 0x1F9D298 Offset: 0x1F9D298 VA: 0x1F9D298
	private TimeSpan ParseTime(string s) { }

	// RVA: 0x1F9BED8 Offset: 0x1F9BED8 VA: 0x1F9BED8
	private void ReadChannel(SmallXmlParser.IAttrList attrs, bool isTemplate) { }

	// RVA: 0x1F9C370 Offset: 0x1F9C370 VA: 0x1F9C370
	private ProviderData ReadProvider(string name, SmallXmlParser.IAttrList attrs, bool isTemplate) { }

	// RVA: 0x1F9CB0C Offset: 0x1F9CB0C VA: 0x1F9CB0C
	private void ReadClientActivated(SmallXmlParser.IAttrList attrs) { }

	// RVA: 0x1F9CC60 Offset: 0x1F9CC60 VA: 0x1F9CC60
	private void ReadServiceActivated(SmallXmlParser.IAttrList attrs) { }

	// RVA: 0x1F9C81C Offset: 0x1F9C81C VA: 0x1F9C81C
	private void ReadClientWellKnown(SmallXmlParser.IAttrList attrs) { }

	// RVA: 0x1F9C904 Offset: 0x1F9C904 VA: 0x1F9C904
	private void ReadServiceWellKnown(SmallXmlParser.IAttrList attrs) { }

	// RVA: 0x1F9CD28 Offset: 0x1F9CD28 VA: 0x1F9CD28
	private void ReadInteropXml(SmallXmlParser.IAttrList attrs, bool isElement) { }

	// RVA: 0x1F9CF48 Offset: 0x1F9CF48 VA: 0x1F9CF48
	private void ReadPreload(SmallXmlParser.IAttrList attrs) { }

	// RVA: 0x1F9D8EC Offset: 0x1F9D8EC VA: 0x1F9D8EC
	private string GetNotNull(SmallXmlParser.IAttrList attrs, string name) { }

	// RVA: 0x1F9DA78 Offset: 0x1F9DA78 VA: 0x1F9DA78
	private string ExtractAssembly(ref string type) { }

	// RVA: 0x1F9DB9C Offset: 0x1F9DB9C VA: 0x1F9DB9C Slot: 9
	public void OnChars(string ch) { }

	// RVA: 0x1F9DBA0 Offset: 0x1F9DBA0 VA: 0x1F9DBA0 Slot: 5
	public void OnEndParsing(SmallXmlParser parser) { }
}

// Namespace: System.Runtime.Remoting
internal class ChannelData // TypeDefIndex: 621
{
	// Fields
	internal string Ref; // 0x10
	internal string Type; // 0x18
	internal string Id; // 0x20
	internal string DelayLoadAsClientChannel; // 0x28
	private ArrayList _serverProviders; // 0x30
	private ArrayList _clientProviders; // 0x38
	private Hashtable _customProperties; // 0x40

	// Properties
	internal ArrayList ServerProviders { get; }
	public ArrayList ClientProviders { get; }
	public Hashtable CustomProperties { get; }

	// Methods

	// RVA: 0x1F937DC Offset: 0x1F937DC VA: 0x1F937DC
	public void .ctor() { }

	// RVA: 0x1F93884 Offset: 0x1F93884 VA: 0x1F93884
	internal ArrayList get_ServerProviders() { }

	// RVA: 0x1F938F0 Offset: 0x1F938F0 VA: 0x1F938F0
	public ArrayList get_ClientProviders() { }

	// RVA: 0x1F9395C Offset: 0x1F9395C VA: 0x1F9395C
	public Hashtable get_CustomProperties() { }

	// RVA: 0x1F939C8 Offset: 0x1F939C8 VA: 0x1F939C8
	public void CopyFrom(ChannelData other) { }
}

// Namespace: System.Runtime.Remoting
internal class ProviderData // TypeDefIndex: 622
{
	// Fields
	internal string Ref; // 0x10
	internal string Type; // 0x18
	internal string Id; // 0x20
	internal Hashtable CustomProperties; // 0x28
	internal IList CustomData; // 0x30

	// Methods

	// RVA: 0x1EC7134 Offset: 0x1EC7134 VA: 0x1EC7134
	public void .ctor() { }

	// RVA: 0x1EC719C Offset: 0x1EC719C VA: 0x1EC719C
	public void CopyFrom(ProviderData other) { }
}

// Namespace: System.Runtime.Remoting
internal class FormatterData : ProviderData // TypeDefIndex: 623
{
	// Methods

	// RVA: 0x1F9D8E4 Offset: 0x1F9D8E4 VA: 0x1F9D8E4
	public void .ctor() { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xBC8D7C Offset: 0xBC8D7C VA: 0xBC8D7C
[Serializable]
public class RemotingException : SystemException // TypeDefIndex: 624
{
	// Methods

	// RVA: 0x1ECBEA4 Offset: 0x1ECBEA4 VA: 0x1ECBEA4
	public void .ctor() { }

	// RVA: 0x1EBD764 Offset: 0x1EBD764 VA: 0x1EBD764
	public void .ctor(string message) { }

	// RVA: 0x1ECBEAC Offset: 0x1ECBEAC VA: 0x1ECBEAC
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x1ECBEB4 Offset: 0x1ECBEB4 VA: 0x1ECBEB4
	public void .ctor(string message, Exception InnerException) { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xBC8D90 Offset: 0xBC8D90 VA: 0xBC8D90
public sealed class RemotingServices // TypeDefIndex: 625
{
	// Fields
	private static Hashtable uri_hash; // 0x0
	private static BinaryFormatter _serializationFormatter; // 0x8
	private static BinaryFormatter _deserializationFormatter; // 0x10
	internal static string app_id; // 0x18
	private static int next_id; // 0x20
	private static readonly BindingFlags methodBindings; // 0x24
	private static readonly MethodInfo FieldSetterMethod; // 0x28
	private static readonly MethodInfo FieldGetterMethod; // 0x30

	// Methods

	// RVA: 0x1ECBEBC Offset: 0x1ECBEBC VA: 0x1ECBEBC
	private static void .cctor() { }

	// RVA: 0x1ECC274 Offset: 0x1ECC274 VA: 0x1ECC274
	internal static object InternalExecute(MethodBase method, object obj, object[] parameters, out object[] out_args) { }

	// RVA: 0x1EBDC38 Offset: 0x1EBDC38 VA: 0x1EBDC38
	internal static MethodBase GetVirtualMethod(Type type, MethodBase method) { }

	[ReliabilityContractAttribute] // RVA: 0xBCD1DC Offset: 0xBCD1DC VA: 0xBCD1DC
	// RVA: 0x1EC24FC Offset: 0x1EC24FC VA: 0x1EC24FC
	public static bool IsTransparentProxy(object proxy) { }

	// RVA: 0x1EC435C Offset: 0x1EC435C VA: 0x1EC435C
	internal static IMethodReturnMessage InternalExecuteMessage(MarshalByRefObject target, IMethodCallMessage reqMsg) { }

	[ComVisibleAttribute] // RVA: 0xBCD1F4 Offset: 0xBCD1F4 VA: 0xBCD1F4
	// RVA: 0x1ECC278 Offset: 0x1ECC278 VA: 0x1ECC278
	public static object Connect(Type classToProxy, string url) { }

	// RVA: 0x1EBD6A0 Offset: 0x1EBD6A0 VA: 0x1EBD6A0
	public static Type GetServerTypeForUri(string URI) { }

	// RVA: 0x1EC6FB8 Offset: 0x1EC6FB8 VA: 0x1EC6FB8
	public static object Unmarshal(ObjRef objectRef) { }

	// RVA: 0x1ECC65C Offset: 0x1ECC65C VA: 0x1ECC65C
	public static object Unmarshal(ObjRef objectRef, bool fRefine) { }

	// RVA: 0x1ECCC48 Offset: 0x1ECCC48 VA: 0x1ECCC48
	public static ObjRef Marshal(MarshalByRefObject Obj) { }

	// RVA: 0x1ECCCB4 Offset: 0x1ECCCB4 VA: 0x1ECCCB4
	public static ObjRef Marshal(MarshalByRefObject Obj, string ObjURI, Type RequestedType) { }

	// RVA: 0x1ECD1AC Offset: 0x1ECD1AC VA: 0x1ECD1AC
	private static string NewUri() { }

	[ReliabilityContractAttribute] // RVA: 0xBCD208 Offset: 0xBCD208 VA: 0xBCD208
	// RVA: 0x1EC2500 Offset: 0x1EC2500 VA: 0x1EC2500
	public static RealProxy GetRealProxy(object proxy) { }

	// RVA: 0x1EBDC3C Offset: 0x1EBDC3C VA: 0x1EBDC3C
	public static MethodBase GetMethodBaseFromMethodMessage(IMethodMessage msg) { }

	// RVA: 0x1EBD964 Offset: 0x1EBD964 VA: 0x1EBD964
	internal static MethodBase GetMethodBaseFromName(Type type, string methodName, Type[] signature) { }

	// RVA: 0x1ECDD5C Offset: 0x1ECDD5C VA: 0x1ECDD5C
	private static MethodBase FindInterfaceMethod(Type type, string methodName, Type[] signature) { }

	// RVA: 0x1EC26AC Offset: 0x1EC26AC VA: 0x1EC26AC
	public static void GetObjectData(object obj, SerializationInfo info, StreamingContext context) { }

	// RVA: 0x1ECDEF4 Offset: 0x1ECDEF4 VA: 0x1ECDEF4
	public static bool IsMethodOverloaded(IMethodMessage msg) { }

	// RVA: 0x1EC20D0 Offset: 0x1EC20D0 VA: 0x1EC20D0
	public static bool IsOneWay(MethodBase method) { }

	// RVA: 0x1ECE108 Offset: 0x1ECE108 VA: 0x1ECE108
	internal static object CreateClientProxy(ActivatedClientTypeEntry entry, object[] activationAttributes) { }

	// RVA: 0x1ECE32C Offset: 0x1ECE32C VA: 0x1ECE32C
	internal static object CreateClientProxy(Type objectType, string url, object[] activationAttributes) { }

	// RVA: 0x1ECE5D0 Offset: 0x1ECE5D0 VA: 0x1ECE5D0
	internal static object CreateClientProxyForContextBound(Type type, object[] activationAttributes) { }

	// RVA: 0x1ECC394 Offset: 0x1ECC394 VA: 0x1ECC394
	internal static Identity GetIdentityForUri(string uri) { }

	// RVA: 0x1ECE828 Offset: 0x1ECE828 VA: 0x1ECE828
	private static string RemoveAppNameFromUri(string uri) { }

	// RVA: 0x1ECE938 Offset: 0x1ECE938 VA: 0x1ECE938
	internal static ClientIdentity GetOrCreateClientIdentity(ObjRef objRef, Type proxyType, out object clientProxy) { }

	// RVA: 0x1ECE4A8 Offset: 0x1ECE4A8 VA: 0x1ECE4A8
	private static IMessageSink GetClientChannelSinkChain(string url, object channelData, out string objectUri) { }

	// RVA: 0x1ECEE48 Offset: 0x1ECEE48 VA: 0x1ECEE48
	internal static ClientActivatedIdentity CreateContextBoundObjectIdentity(Type objectType) { }

	// RVA: 0x1ECDBBC Offset: 0x1ECDBBC VA: 0x1ECDBBC
	internal static ClientActivatedIdentity CreateClientActivatedServerIdentity(MarshalByRefObject realObject, Type objectType, string objectUri) { }

	// RVA: 0x1ECA354 Offset: 0x1ECA354 VA: 0x1ECA354
	internal static ServerIdentity CreateWellKnownServerIdentity(Type objectType, string objectUri, WellKnownObjectMode mode) { }

	// RVA: 0x1ECD450 Offset: 0x1ECD450 VA: 0x1ECD450
	private static void RegisterServerIdentity(ServerIdentity identity) { }

	// RVA: 0x1EC7AF4 Offset: 0x1EC7AF4 VA: 0x1EC7AF4
	internal static object GetProxyForRemoteObject(ObjRef objref, Type classToProxy) { }

	// RVA: 0x1ECC310 Offset: 0x1ECC310 VA: 0x1ECC310
	internal static object GetRemoteObject(ObjRef objRef, Type proxyType) { }

	// RVA: 0x1ECC214 Offset: 0x1ECC214 VA: 0x1ECC214
	private static void RegisterInternalChannels() { }

	// RVA: 0x1EC8F68 Offset: 0x1EC8F68 VA: 0x1EC8F68
	internal static void DisposeIdentity(Identity ident) { }

	// RVA: 0x1EB76D8 Offset: 0x1EB76D8 VA: 0x1EB76D8
	internal static Identity GetMessageTargetIdentity(IMessage msg) { }

	// RVA: 0x1ECF0A0 Offset: 0x1ECF0A0 VA: 0x1ECF0A0
	internal static void SetMessageTargetIdentity(IMessage msg, Identity ident) { }

	// RVA: 0x1ECE798 Offset: 0x1ECE798 VA: 0x1ECE798
	private static string GetNormalizedUri(string uri) { }
}

// Namespace: System.Runtime.Remoting
internal abstract class ServerIdentity : Identity // TypeDefIndex: 626
{
	// Fields
	protected Type _objectType; // 0x48
	protected MarshalByRefObject _serverObject; // 0x50
	protected IMessageSink _serverSink; // 0x58
	protected Context _context; // 0x60
	protected Lease _lease; // 0x68

	// Properties
	public Type ObjectType { get; }
	public Lease Lease { get; }
	public Context Context { get; set; }

	// Methods

	// RVA: 0x1ECF254 Offset: 0x1ECF254 VA: 0x1ECF254
	public void .ctor(string objectUri, Context context, Type objectType) { }

	// RVA: 0x1ECC654 Offset: 0x1ECC654 VA: 0x1ECC654
	public Type get_ObjectType() { }

	// RVA: 0x1ECD6D0 Offset: 0x1ECD6D0 VA: 0x1ECD6D0
	public void StartTrackingLifetime(ILease lease) { }

	// RVA: 0x1ECF290 Offset: 0x1ECF290 VA: 0x1ECF290 Slot: 5
	public virtual void OnLifetimeExpired() { }

	// RVA: 0x1ECF320 Offset: 0x1ECF320 VA: 0x1ECF320 Slot: 4
	public override ObjRef CreateObjRef(Type requestedType) { }

	// RVA: 0x1ECEEF8 Offset: 0x1ECEEF8 VA: 0x1ECEEF8
	public void AttachServerObject(MarshalByRefObject serverObject, Context context) { }

	// RVA: 0x1ECF494 Offset: 0x1ECF494 VA: 0x1ECF494
	public Lease get_Lease() { }

	// RVA: 0x1EC8D1C Offset: 0x1EC8D1C VA: 0x1EC8D1C
	public Context get_Context() { }

	// RVA: 0x1ECF49C Offset: 0x1ECF49C VA: 0x1ECF49C
	public void set_Context(Context value) { }

	// RVA: -1 Offset: -1 Slot: 6
	public abstract IMessage SyncObjectProcessMessage(IMessage msg);

	// RVA: -1 Offset: -1 Slot: 7
	public abstract IMessageCtrl AsyncObjectProcessMessage(IMessage msg, IMessageSink replySink);

	// RVA: 0x1ECF294 Offset: 0x1ECF294 VA: 0x1ECF294
	protected void DisposeServerObject() { }
}

// Namespace: System.Runtime.Remoting
internal class ClientActivatedIdentity : ServerIdentity // TypeDefIndex: 627
{
	// Fields
	private MarshalByRefObject _targetThis; // 0x70

	// Methods

	// RVA: 0x1F9949C Offset: 0x1F9949C VA: 0x1F9949C
	public void .ctor(string objectUri, Type objectType) { }

	// RVA: 0x1F994B0 Offset: 0x1F994B0 VA: 0x1F994B0
	public MarshalByRefObject GetServerObject() { }

	// RVA: 0x1F994B8 Offset: 0x1F994B8 VA: 0x1F994B8
	public void SetClientProxy(MarshalByRefObject obj) { }

	// RVA: 0x1F994C0 Offset: 0x1F994C0 VA: 0x1F994C0 Slot: 5
	public override void OnLifetimeExpired() { }

	// RVA: 0x1F99534 Offset: 0x1F99534 VA: 0x1F99534 Slot: 6
	public override IMessage SyncObjectProcessMessage(IMessage msg) { }

	// RVA: 0x1F99864 Offset: 0x1F99864 VA: 0x1F99864 Slot: 7
	public override IMessageCtrl AsyncObjectProcessMessage(IMessage msg, IMessageSink replySink) { }
}

// Namespace: System.Runtime.Remoting
internal class SingletonIdentity : ServerIdentity // TypeDefIndex: 628
{
	// Methods

	// RVA: 0x1ECF064 Offset: 0x1ECF064 VA: 0x1ECF064
	public void .ctor(string objectUri, Context context, Type objectType) { }

	// RVA: 0x1ECFD8C Offset: 0x1ECFD8C VA: 0x1ECFD8C
	public MarshalByRefObject GetServerObject() { }

	// RVA: 0x1ECFFCC Offset: 0x1ECFFCC VA: 0x1ECFFCC Slot: 6
	public override IMessage SyncObjectProcessMessage(IMessage msg) { }

	// RVA: 0x1ED00D0 Offset: 0x1ED00D0 VA: 0x1ED00D0 Slot: 7
	public override IMessageCtrl AsyncObjectProcessMessage(IMessage msg, IMessageSink replySink) { }
}

// Namespace: System.Runtime.Remoting
internal class SingleCallIdentity : ServerIdentity // TypeDefIndex: 629
{
	// Methods

	// RVA: 0x1ECF028 Offset: 0x1ECF028 VA: 0x1ECF028
	public void .ctor(string objectUri, Context context, Type objectType) { }

	// RVA: 0x1ECF834 Offset: 0x1ECF834 VA: 0x1ECF834 Slot: 6
	public override IMessage SyncObjectProcessMessage(IMessage msg) { }

	// RVA: 0x1ECFB48 Offset: 0x1ECFB48 VA: 0x1ECFB48 Slot: 7
	public override IMessageCtrl AsyncObjectProcessMessage(IMessage msg, IMessageSink replySink) { }
}

// Namespace: System.Runtime.Remoting
internal class DisposerReplySink : IMessageSink // TypeDefIndex: 630
{
	// Fields
	private IMessageSink _next; // 0x10
	private IDisposable _disposable; // 0x18

	// Methods

	// RVA: 0x1FA3118 Offset: 0x1FA3118 VA: 0x1FA3118
	public void .ctor(IMessageSink next, IDisposable disposable) { }

	// RVA: 0x1FA3150 Offset: 0x1FA3150 VA: 0x1FA3150 Slot: 4
	public IMessage SyncProcessMessage(IMessage msg) { }

	// RVA: 0x1FA328C Offset: 0x1FA328C VA: 0x1FA328C Slot: 5
	public IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink) { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xBC8DA4 Offset: 0xBC8DA4 VA: 0xBC8DA4
public class SoapServices // TypeDefIndex: 631
{
	// Fields
	private static Hashtable _xmlTypes; // 0x0
	private static Hashtable _xmlElements; // 0x8
	private static Hashtable _soapActions; // 0x10
	private static Hashtable _soapActionsMethods; // 0x18
	private static Hashtable _typeInfos; // 0x20

	// Properties
	public static string XmlNsForClrTypeWithAssembly { get; }
	public static string XmlNsForClrTypeWithNs { get; }
	public static string XmlNsForClrTypeWithNsAndAssembly { get; }

	// Methods

	// RVA: 0x1ED01E8 Offset: 0x1ED01E8 VA: 0x1ED01E8
	private static void .cctor() { }

	// RVA: 0x1ED02DC Offset: 0x1ED02DC VA: 0x1ED02DC
	public static string get_XmlNsForClrTypeWithAssembly() { }

	// RVA: 0x1ED0324 Offset: 0x1ED0324 VA: 0x1ED0324
	public static string get_XmlNsForClrTypeWithNs() { }

	// RVA: 0x1ED036C Offset: 0x1ED036C VA: 0x1ED036C
	public static string get_XmlNsForClrTypeWithNsAndAssembly() { }

	// RVA: 0x1EC5B30 Offset: 0x1EC5B30 VA: 0x1EC5B30
	public static string CodeXmlNamespaceForClrTypeNamespace(string typeNamespace, string assemblyName) { }

	// RVA: 0x1ED0480 Offset: 0x1ED0480 VA: 0x1ED0480
	private static string GetNameKey(string name, string namspace) { }

	// RVA: 0x1ED051C Offset: 0x1ED051C VA: 0x1ED051C
	private static string GetAssemblyName(MethodBase mb) { }

	// RVA: 0x1ED06A8 Offset: 0x1ED06A8 VA: 0x1ED06A8
	public static bool GetXmlElementForInteropType(Type type, out string xmlElement, out string xmlNamespace) { }

	// RVA: 0x1EC57B0 Offset: 0x1EC57B0 VA: 0x1EC57B0
	public static string GetXmlNamespaceForMethodCall(MethodBase mb) { }

	// RVA: 0x1EC56FC Offset: 0x1EC56FC VA: 0x1EC56FC
	public static string GetXmlNamespaceForMethodResponse(MethodBase mb) { }

	// RVA: 0x1ED07C0 Offset: 0x1ED07C0 VA: 0x1ED07C0
	public static bool GetXmlTypeForInteropType(Type type, out string xmlType, out string xmlTypeNamespace) { }

	// RVA: 0x1ED08DC Offset: 0x1ED08DC VA: 0x1ED08DC
	public static void PreLoad(Assembly assembly) { }

	// RVA: 0x1ED09B4 Offset: 0x1ED09B4 VA: 0x1ED09B4
	public static void PreLoad(Type type) { }

	// RVA: 0x1ED1094 Offset: 0x1ED1094 VA: 0x1ED1094
	public static void RegisterInteropXmlElement(string xmlElement, string xmlNamespace, Type type) { }

	// RVA: 0x1ED0EE8 Offset: 0x1ED0EE8 VA: 0x1ED0EE8
	public static void RegisterInteropXmlType(string xmlType, string xmlTypeNamespace, Type type) { }

	// RVA: 0x1ED03B4 Offset: 0x1ED03B4 VA: 0x1ED03B4
	private static string EncodeNs(string ns) { }
}

// Namespace: 
private class SoapServices.TypeInfo // TypeDefIndex: 632
{
	// Fields
	public Hashtable Attributes; // 0x10
	public Hashtable Elements; // 0x18

	// Methods

	// RVA: 0x1ED1240 Offset: 0x1ED1240 VA: 0x1ED1240
	public void .ctor() { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xBC8DB8 Offset: 0xBC8DB8 VA: 0xBC8DB8
public class TypeEntry // TypeDefIndex: 633
{
	// Fields
	private string assembly_name; // 0x10
	private string type_name; // 0x18

	// Properties
	public string AssemblyName { get; set; }
	public string TypeName { get; set; }

	// Methods

	// RVA: 0x1ED1248 Offset: 0x1ED1248 VA: 0x1ED1248
	protected void .ctor() { }

	// RVA: 0x1ED1250 Offset: 0x1ED1250 VA: 0x1ED1250
	public string get_AssemblyName() { }

	// RVA: 0x1ED1258 Offset: 0x1ED1258 VA: 0x1ED1258
	public void set_AssemblyName(string value) { }

	// RVA: 0x1ED1260 Offset: 0x1ED1260 VA: 0x1ED1260
	public string get_TypeName() { }

	// RVA: 0x1ED1268 Offset: 0x1ED1268 VA: 0x1ED1268
	public void set_TypeName(string value) { }
}

// Namespace: System.Runtime.Remoting
[Serializable]
internal class TypeInfo : IRemotingTypeInfo // TypeDefIndex: 634
{
	// Fields
	private string serverType; // 0x10
	private string[] serverHierarchy; // 0x18
	private string[] interfacesImplemented; // 0x20

	// Properties
	public string TypeName { get; }

	// Methods

	// RVA: 0x1EC5ED8 Offset: 0x1EC5ED8 VA: 0x1EC5ED8
	public void .ctor(Type type) { }

	// RVA: 0x1ED1270 Offset: 0x1ED1270 VA: 0x1ED1270 Slot: 4
	public string get_TypeName() { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xBC8DCC Offset: 0xBC8DCC VA: 0xBC8DCC
public class WellKnownClientTypeEntry : TypeEntry // TypeDefIndex: 635
{
	// Fields
	private Type obj_type; // 0x20
	private string obj_url; // 0x28
	private string app_url; // 0x30

	// Properties
	public string ApplicationUrl { get; }
	public Type ObjectType { get; }
	public string ObjectUrl { get; }

	// Methods

	// RVA: 0x1ED1278 Offset: 0x1ED1278 VA: 0x1ED1278
	public void .ctor(string typeName, string assemblyName, string objectUrl) { }

	// RVA: 0x1ED13AC Offset: 0x1ED13AC VA: 0x1ED13AC
	public string get_ApplicationUrl() { }

	// RVA: 0x1ECA1B8 Offset: 0x1ECA1B8 VA: 0x1ECA1B8
	public Type get_ObjectType() { }

	// RVA: 0x1ED13B4 Offset: 0x1ED13B4 VA: 0x1ED13B4
	public string get_ObjectUrl() { }

	// RVA: 0x1ED13BC Offset: 0x1ED13BC VA: 0x1ED13BC Slot: 3
