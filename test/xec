	public Type ObjectType { get; }

	// Methods

	// RVA: 0xF2A570 Offset: 0xF2A570 VA: 0xF2A570
	public void .ctor(string typeName, string assemblyName, string appUrl) { }

	// RVA: 0xF2A6C0 Offset: 0xF2A6C0 VA: 0xF2A6C0
	public string get_ApplicationUrl() { }

	// RVA: 0xF2A6C8 Offset: 0xF2A6C8 VA: 0xF2A6C8
	public IContextAttribute[] get_ContextAttributes() { }

	// RVA: 0xF2A6D0 Offset: 0xF2A6D0 VA: 0xF2A6D0
	public Type get_ObjectType() { }

	// RVA: 0xF2A6D8 Offset: 0xF2A6D8 VA: 0xF2A6D8 Slot: 3
	public override string ToString() { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xC34E18 Offset: 0xC34E18 VA: 0xC34E18
public class ActivatedServiceTypeEntry : TypeEntry // TypeDefIndex: 610
{
	// Fields
	private Type obj_type; // 0x20

	// Properties
	public Type ObjectType { get; }

	// Methods

	// RVA: 0xF2A778 Offset: 0xF2A778 VA: 0xF2A778
	public void .ctor(string typeName, string assemblyName) { }

	// RVA: 0xF2A8B8 Offset: 0xF2A8B8 VA: 0xF2A8B8
	public Type get_ObjectType() { }

	// RVA: 0xF2A8C0 Offset: 0xF2A8C0 VA: 0xF2A8C0 Slot: 3
	public override string ToString() { }
}

// Namespace: System.Runtime.Remoting
[Serializable]
internal class EnvoyInfo : IEnvoyInfo // TypeDefIndex: 611
{
	// Fields
	private IMessageSink envoySinks; // 0x10

	// Properties
	public IMessageSink EnvoySinks { get; }

	// Methods

	// RVA: 0xF3DC68 Offset: 0xF3DC68 VA: 0xF3DC68
	public void .ctor(IMessageSink sinks) { }

	// RVA: 0xF3DC94 Offset: 0xF3DC94 VA: 0xF3DC94 Slot: 4
	public IMessageSink get_EnvoySinks() { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xC34E2C Offset: 0xC34E2C VA: 0xC34E2C
public interface IChannelInfo // TypeDefIndex: 612
{
	// Properties
	public abstract object[] ChannelData { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract object[] get_ChannelData();
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xC34E40 Offset: 0xC34E40 VA: 0xC34E40
public interface IEnvoyInfo // TypeDefIndex: 613
{
	// Properties
	public abstract IMessageSink EnvoySinks { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract IMessageSink get_EnvoySinks();
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xC34E54 Offset: 0xC34E54 VA: 0xC34E54
public interface IRemotingTypeInfo // TypeDefIndex: 614
{
	// Properties
	public abstract string TypeName { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract string get_TypeName();
}

// Namespace: System.Runtime.Remoting
internal abstract class Identity // TypeDefIndex: 615
{
	// Fields
	protected string _objectUri; // 0x10
	protected IMessageSink _channelSink; // 0x18
	protected IMessageSink _envoySink; // 0x20
	private DynamicPropertyCollection _clientDynamicProperties; // 0x28
	private DynamicPropertyCollection _serverDynamicProperties; // 0x30
	protected ObjRef _objRef; // 0x38
	private bool _disposed; // 0x40

	// Properties
	public IMessageSink ChannelSink { get; set; }
	public IMessageSink EnvoySink { get; }
	public string ObjectUri { get; set; }
	public bool IsConnected { get; }
	public bool Disposed { get; set; }
	public DynamicPropertyCollection ClientDynamicProperties { get; }
	public DynamicPropertyCollection ServerDynamicProperties { get; }
	public bool HasServerDynamicSinks { get; }

	// Methods

	// RVA: 0xF34430 Offset: 0xF34430 VA: 0xF34430
	public void .ctor(string objectUri) { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract ObjRef CreateObjRef(Type requestedType);

	// RVA: 0xF3DC9C Offset: 0xF3DC9C VA: 0xF3DC9C
	public IMessageSink get_ChannelSink() { }

	// RVA: 0xF3DCA4 Offset: 0xF3DCA4 VA: 0xF3DCA4
	public void set_ChannelSink(IMessageSink value) { }

	// RVA: 0xF3DCAC Offset: 0xF3DCAC VA: 0xF3DCAC
	public IMessageSink get_EnvoySink() { }

	// RVA: 0xF3DCB4 Offset: 0xF3DCB4 VA: 0xF3DCB4
	public string get_ObjectUri() { }

	// RVA: 0xF3DCBC Offset: 0xF3DCBC VA: 0xF3DCBC
	public void set_ObjectUri(string value) { }

	// RVA: 0xF3DCC4 Offset: 0xF3DCC4 VA: 0xF3DCC4
	public bool get_IsConnected() { }

	// RVA: 0xF3DCD4 Offset: 0xF3DCD4 VA: 0xF3DCD4
	public bool get_Disposed() { }

	// RVA: 0xF3DCDC Offset: 0xF3DCDC VA: 0xF3DCDC
	public void set_Disposed(bool value) { }

	// RVA: 0xF3913C Offset: 0xF3913C VA: 0xF3913C
	public DynamicPropertyCollection get_ClientDynamicProperties() { }

	// RVA: 0xF391A4 Offset: 0xF391A4 VA: 0xF391A4
	public DynamicPropertyCollection get_ServerDynamicProperties() { }

	// RVA: 0xF3DCE8 Offset: 0xF3DCE8 VA: 0xF3DCE8
	public bool get_HasServerDynamicSinks() { }

	// RVA: 0xF3DD3C Offset: 0xF3DD3C VA: 0xF3DD3C
	public void NotifyClientDynamicSinks(bool start, IMessage req_msg, bool client_site, bool async) { }

	// RVA: 0xF3DDE4 Offset: 0xF3DDE4 VA: 0xF3DDE4
	public void NotifyServerDynamicSinks(bool start, IMessage req_msg, bool client_site, bool async) { }
}

// Namespace: System.Runtime.Remoting
internal class ClientIdentity : Identity // TypeDefIndex: 616
{
	// Fields
	private WeakReference _proxyReference; // 0x48

	// Properties
	public MarshalByRefObject ClientProxy { get; set; }
	public string TargetUri { get; }

	// Methods

	// RVA: 0xF342FC Offset: 0xF342FC VA: 0xF342FC
	public void .ctor(string objectUri, ObjRef objRef) { }

	// RVA: 0xF3445C Offset: 0xF3445C VA: 0xF3445C
	public MarshalByRefObject get_ClientProxy() { }

	// RVA: 0xF34544 Offset: 0xF34544 VA: 0xF34544
	public void set_ClientProxy(MarshalByRefObject value) { }

	// RVA: 0xF345B4 Offset: 0xF345B4 VA: 0xF345B4 Slot: 4
	public override ObjRef CreateObjRef(Type requestedType) { }

	// RVA: 0xF345BC Offset: 0xF345BC VA: 0xF345BC
	public string get_TargetUri() { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xC34E68 Offset: 0xC34E68 VA: 0xC34E68
public class InternalRemotingServices // TypeDefIndex: 617
{
	// Fields
	private static Hashtable _soapAttributes; // 0x0

	// Methods

	// RVA: 0xF3DE8C Offset: 0xF3DE8C VA: 0xF3DE8C
	private static void .cctor() { }

	// RVA: 0xF3DEF8 Offset: 0xF3DEF8 VA: 0xF3DEF8
	public static SoapAttribute GetCachedSoapAttribute(object reflectionObject) { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xC34E7C Offset: 0xC34E7C VA: 0xC34E7C
[Serializable]
public class ObjRef : ISerializable, IObjectReference // TypeDefIndex: 618
{
	// Fields
	private IChannelInfo channel_info; // 0x10
	private string uri; // 0x18
	private IRemotingTypeInfo typeInfo; // 0x20
	private IEnvoyInfo envoyInfo; // 0x28
	private int flags; // 0x30
	private Type _serverType; // 0x38
	private static int MarshalledObjectRef; // 0x0
	private static int WellKnowObjectRef; // 0x4
	[CompilerGeneratedAttribute] // RVA: 0xC37798 Offset: 0xC37798 VA: 0xC37798
	private static Dictionary<string, int> <>f__switch$map26; // 0x8

	// Properties
	internal bool IsReferenceToWellKnow { get; }
	public virtual IChannelInfo ChannelInfo { get; }
	public virtual IEnvoyInfo EnvoyInfo { get; set; }
	public virtual IRemotingTypeInfo TypeInfo { get; set; }
	public virtual string URI { get; set; }
	internal Type ServerType { get; }

	// Methods

	// RVA: 0xEAA8AC Offset: 0xEAA8AC VA: 0xEAA8AC
	public void .ctor() { }

	// RVA: 0xEAA934 Offset: 0xEAA934 VA: 0xEAA934
	internal void .ctor(string typeName, string uri, IChannelInfo cinfo) { }

	// RVA: 0xEAAE94 Offset: 0xEAAE94 VA: 0xEAAE94
	internal void .ctor(Type type, string url, object remoteChannelData) { }

	// RVA: 0xEAAF80 Offset: 0xEAAF80 VA: 0xEAAF80
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0xEAB74C Offset: 0xEAB74C VA: 0xEAB74C
	private static void .cctor() { }

	// RVA: 0xEAB7B0 Offset: 0xEAB7B0 VA: 0xEAB7B0
	internal bool get_IsReferenceToWellKnow() { }

	[ReliabilityContractAttribute] // RVA: 0xC392EC Offset: 0xC392EC VA: 0xC392EC
	// RVA: 0xEAB828 Offset: 0xEAB828 VA: 0xEAB828 Slot: 6
	public virtual IChannelInfo get_ChannelInfo() { }

	// RVA: 0xEAB830 Offset: 0xEAB830 VA: 0xEAB830 Slot: 7
	public virtual IEnvoyInfo get_EnvoyInfo() { }

	// RVA: 0xEAB838 Offset: 0xEAB838 VA: 0xEAB838 Slot: 8
	public virtual void set_EnvoyInfo(IEnvoyInfo value) { }

	// RVA: 0xEAB840 Offset: 0xEAB840 VA: 0xEAB840 Slot: 9
	public virtual IRemotingTypeInfo get_TypeInfo() { }

	// RVA: 0xEAB848 Offset: 0xEAB848 VA: 0xEAB848 Slot: 10
	public virtual void set_TypeInfo(IRemotingTypeInfo value) { }

	// RVA: 0xEAB850 Offset: 0xEAB850 VA: 0xEAB850 Slot: 11
	public virtual string get_URI() { }

	// RVA: 0xEAB858 Offset: 0xEAB858 VA: 0xEAB858 Slot: 12
	public virtual void set_URI(string value) { }

	// RVA: 0xEAB860 Offset: 0xEAB860 VA: 0xEAB860 Slot: 13
	public virtual void GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0xEABA3C Offset: 0xEABA3C VA: 0xEABA3C Slot: 14
	public virtual object GetRealObject(StreamingContext context) { }

	// RVA: 0xEAA8D4 Offset: 0xEAA8D4 VA: 0xEAA8D4
	internal void UpdateChannelInfo() { }

	// RVA: 0xEABB60 Offset: 0xEABB60 VA: 0xEABB60
	internal Type get_ServerType() { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xC34E90 Offset: 0xC34E90 VA: 0xC34E90
public static class RemotingConfiguration // TypeDefIndex: 619
{
	// Fields
	private static string applicationID; // 0x0
	private static string applicationName; // 0x8
	private static string processGuid; // 0x10
	private static bool defaultConfigRead; // 0x18
	private static bool defaultDelayedConfigRead; // 0x19
	private static string _errorMode; // 0x20
	private static Hashtable wellKnownClientEntries; // 0x28
	private static Hashtable activatedClientEntries; // 0x30
	private static Hashtable wellKnownServiceEntries; // 0x38
	private static Hashtable activatedServiceEntries; // 0x40
	private static Hashtable channelTemplates; // 0x48
	private static Hashtable clientProviderTemplates; // 0x50
	private static Hashtable serverProviderTemplates; // 0x58

	// Properties
	public static string ApplicationName { get; set; }
	public static string ProcessId { get; }

	// Methods

	// RVA: 0xEADCD4 Offset: 0xEADCD4 VA: 0xEADCD4
	private static void .cctor() { }

	// RVA: 0xEADE38 Offset: 0xEADE38 VA: 0xEADE38
	public static string get_ApplicationName() { }

	// RVA: 0xEADEA0 Offset: 0xEADEA0 VA: 0xEADEA0
	public static void set_ApplicationName(string value) { }

	// RVA: 0xEADF0C Offset: 0xEADF0C VA: 0xEADF0C
	public static string get_ProcessId() { }

	// RVA: 0xEADFD4 Offset: 0xEADFD4 VA: 0xEADFD4
	internal static void LoadDefaultDelayedChannels() { }

	// RVA: 0xEAE320 Offset: 0xEAE320 VA: 0xEAE320
	public static bool IsActivationAllowed(Type svrType) { }

	// RVA: 0xEAE440 Offset: 0xEAE440 VA: 0xEAE440
	public static ActivatedClientTypeEntry IsRemotelyActivatedClientType(Type svrType) { }

	// RVA: 0xEAE59C Offset: 0xEAE59C VA: 0xEAE59C
	public static void RegisterActivatedClientType(ActivatedClientTypeEntry entry) { }

	// RVA: 0xEAE8E0 Offset: 0xEAE8E0 VA: 0xEAE8E0
	public static void RegisterActivatedServiceType(ActivatedServiceTypeEntry entry) { }

	// RVA: 0xEAEA2C Offset: 0xEAEA2C VA: 0xEAEA2C
	public static void RegisterWellKnownClientType(WellKnownClientTypeEntry entry) { }

	// RVA: 0xEAED00 Offset: 0xEAED00 VA: 0xEAED00
	public static void RegisterWellKnownServiceType(WellKnownServiceTypeEntry entry) { }

	// RVA: 0xEAEF94 Offset: 0xEAEF94 VA: 0xEAEF94
	internal static void RegisterChannelTemplate(ChannelData channel) { }

	// RVA: 0xEAF03C Offset: 0xEAF03C VA: 0xEAF03C
	internal static void RegisterClientProviderTemplate(ProviderData prov) { }

	// RVA: 0xEAF0E4 Offset: 0xEAF0E4 VA: 0xEAF0E4
	internal static void RegisterServerProviderTemplate(ProviderData prov) { }

	// RVA: 0xEAF18C Offset: 0xEAF18C VA: 0xEAF18C
	internal static void RegisterChannels(ArrayList channels, bool onlyDelayed) { }

	// RVA: 0xEB00F8 Offset: 0xEB00F8 VA: 0xEB00F8
	internal static void RegisterTypes(ArrayList types) { }

	// RVA: 0xEB06EC Offset: 0xEB06EC VA: 0xEB06EC
	public static bool CustomErrorsEnabled(bool isLocalRequest) { }

	// RVA: 0xEB0808 Offset: 0xEB0808 VA: 0xEB0808
	internal static void SetCustomErrorsMode(string mode) { }
}

// Namespace: System.Runtime.Remoting
internal class ConfigHandler : SmallXmlParser.IContentHandler // TypeDefIndex: 620
{
	// Fields
	private ArrayList typeEntries; // 0x10
	private ArrayList channelInstances; // 0x18
	private ChannelData currentChannel; // 0x20
	private Stack currentProviderData; // 0x28
	private string currentClientUrl; // 0x30
	private string appName; // 0x38
	private string currentXmlPath; // 0x40
	private bool onlyDelayedChannels; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC377A8 Offset: 0xC377A8 VA: 0xC377A8
	private static Dictionary<string, int> <>f__switch$map27; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC377B8 Offset: 0xC377B8 VA: 0xC377B8
	private static Dictionary<string, int> <>f__switch$map28; // 0x8

	// Methods

	// RVA: 0xF345F0 Offset: 0xF345F0 VA: 0xF345F0
	public void .ctor(bool onlyDelayedChannels) { }

	// RVA: 0xF346B8 Offset: 0xF346B8 VA: 0xF346B8
	private void ValidatePath(string element, string[] paths) { }

	// RVA: 0xF347E8 Offset: 0xF347E8 VA: 0xF347E8
	private bool CheckPath(string path) { }

	// RVA: 0xF34904 Offset: 0xF34904 VA: 0xF34904 Slot: 4
	public void OnStartParsing(SmallXmlParser parser) { }

	// RVA: 0xF34908 Offset: 0xF34908 VA: 0xF34908 Slot: 8
	public void OnProcessingInstruction(string name, string text) { }

	// RVA: 0xF3490C Offset: 0xF3490C VA: 0xF3490C Slot: 10
	public void OnIgnorableWhitespace(string s) { }

	// RVA: 0xF34910 Offset: 0xF34910 VA: 0xF34910 Slot: 6
	public void OnStartElement(string name, SmallXmlParser.IAttrList attrs) { }

	// RVA: 0xF34B08 Offset: 0xF34B08 VA: 0xF34B08
	public void ParseElement(string name, SmallXmlParser.IAttrList attrs) { }

	// RVA: 0xF37B40 Offset: 0xF37B40 VA: 0xF37B40 Slot: 7
	public void OnEndElement(string name) { }

	// RVA: 0xF35D18 Offset: 0xF35D18 VA: 0xF35D18
	private void ReadCustomProviderData(string name, SmallXmlParser.IAttrList attrs) { }

	// RVA: 0xF36148 Offset: 0xF36148 VA: 0xF36148
	private void ReadLifetine(SmallXmlParser.IAttrList attrs) { }

	// RVA: 0xF37C0C Offset: 0xF37C0C VA: 0xF37C0C
	private TimeSpan ParseTime(string s) { }

	// RVA: 0xF3684C Offset: 0xF3684C VA: 0xF3684C
	private void ReadChannel(SmallXmlParser.IAttrList attrs, bool isTemplate) { }

	// RVA: 0xF36CE4 Offset: 0xF36CE4 VA: 0xF36CE4
	private ProviderData ReadProvider(string name, SmallXmlParser.IAttrList attrs, bool isTemplate) { }

	// RVA: 0xF37480 Offset: 0xF37480 VA: 0xF37480
	private void ReadClientActivated(SmallXmlParser.IAttrList attrs) { }

	// RVA: 0xF375D4 Offset: 0xF375D4 VA: 0xF375D4
	private void ReadServiceActivated(SmallXmlParser.IAttrList attrs) { }

	// RVA: 0xF37190 Offset: 0xF37190 VA: 0xF37190
	private void ReadClientWellKnown(SmallXmlParser.IAttrList attrs) { }

	// RVA: 0xF37278 Offset: 0xF37278 VA: 0xF37278
	private void ReadServiceWellKnown(SmallXmlParser.IAttrList attrs) { }

	// RVA: 0xF3769C Offset: 0xF3769C VA: 0xF3769C
	private void ReadInteropXml(SmallXmlParser.IAttrList attrs, bool isElement) { }

	// RVA: 0xF378BC Offset: 0xF378BC VA: 0xF378BC
	private void ReadPreload(SmallXmlParser.IAttrList attrs) { }

	// RVA: 0xF38260 Offset: 0xF38260 VA: 0xF38260
	private string GetNotNull(SmallXmlParser.IAttrList attrs, string name) { }

	// RVA: 0xF383EC Offset: 0xF383EC VA: 0xF383EC
	private string ExtractAssembly(ref string type) { }

	// RVA: 0xF38510 Offset: 0xF38510 VA: 0xF38510 Slot: 9
	public void OnChars(string ch) { }

	// RVA: 0xF38514 Offset: 0xF38514 VA: 0xF38514 Slot: 5
	public void OnEndParsing(SmallXmlParser parser) { }
}

// Namespace: System.Runtime.Remoting
internal class ChannelData // TypeDefIndex: 621
{
	// Fields
	internal string Ref; // 0x10
	internal string Type; // 0x18
	internal string Id; // 0x20
	internal string DelayLoadAsClientChannel; // 0x28
	private ArrayList _serverProviders; // 0x30
	private ArrayList _clientProviders; // 0x38
	private Hashtable _customProperties; // 0x40

	// Properties
	internal ArrayList ServerProviders { get; }
	public ArrayList ClientProviders { get; }
	public Hashtable CustomProperties { get; }

	// Methods

	// RVA: 0xF2E150 Offset: 0xF2E150 VA: 0xF2E150
	public void .ctor() { }

	// RVA: 0xF2E1F8 Offset: 0xF2E1F8 VA: 0xF2E1F8
	internal ArrayList get_ServerProviders() { }

	// RVA: 0xF2E264 Offset: 0xF2E264 VA: 0xF2E264
	public ArrayList get_ClientProviders() { }

	// RVA: 0xF2E2D0 Offset: 0xF2E2D0 VA: 0xF2E2D0
	public Hashtable get_CustomProperties() { }

	// RVA: 0xF2E33C Offset: 0xF2E33C VA: 0xF2E33C
	public void CopyFrom(ChannelData other) { }
}

// Namespace: System.Runtime.Remoting
internal class ProviderData // TypeDefIndex: 622
{
	// Fields
	internal string Ref; // 0x10
	internal string Type; // 0x18
	internal string Id; // 0x20
	internal Hashtable CustomProperties; // 0x28
	internal IList CustomData; // 0x30

	// Methods

	// RVA: 0xEABC74 Offset: 0xEABC74 VA: 0xEABC74
	public void .ctor() { }

	// RVA: 0xEABCDC Offset: 0xEABCDC VA: 0xEABCDC
	public void CopyFrom(ProviderData other) { }
}

// Namespace: System.Runtime.Remoting
internal class FormatterData : ProviderData // TypeDefIndex: 623
{
	// Methods

	// RVA: 0xF38258 Offset: 0xF38258 VA: 0xF38258
	public void .ctor() { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xC34EA4 Offset: 0xC34EA4 VA: 0xC34EA4
[Serializable]
public class RemotingException : SystemException // TypeDefIndex: 624
{
	// Methods

	// RVA: 0xEB09E4 Offset: 0xEB09E4 VA: 0xEB09E4
	public void .ctor() { }

	// RVA: 0xEA22A4 Offset: 0xEA22A4 VA: 0xEA22A4
	public void .ctor(string message) { }

	// RVA: 0xEB09EC Offset: 0xEB09EC VA: 0xEB09EC
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0xEB09F4 Offset: 0xEB09F4 VA: 0xEB09F4
	public void .ctor(string message, Exception InnerException) { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xC34EB8 Offset: 0xC34EB8 VA: 0xC34EB8
public sealed class RemotingServices // TypeDefIndex: 625
{
	// Fields
	private static Hashtable uri_hash; // 0x0
	private static BinaryFormatter _serializationFormatter; // 0x8
	private static BinaryFormatter _deserializationFormatter; // 0x10
	internal static string app_id; // 0x18
	private static int next_id; // 0x20
	private static readonly BindingFlags methodBindings; // 0x24
	private static readonly MethodInfo FieldSetterMethod; // 0x28
	private static readonly MethodInfo FieldGetterMethod; // 0x30

	// Methods

	// RVA: 0xEB09FC Offset: 0xEB09FC VA: 0xEB09FC
	private static void .cctor() { }

	// RVA: 0xEB0DB4 Offset: 0xEB0DB4 VA: 0xEB0DB4
	internal static object InternalExecute(MethodBase method, object obj, object[] parameters, out object[] out_args) { }

	// RVA: 0xEA2778 Offset: 0xEA2778 VA: 0xEA2778
	internal static MethodBase GetVirtualMethod(Type type, MethodBase method) { }

	[ReliabilityContractAttribute] // RVA: 0xC39304 Offset: 0xC39304 VA: 0xC39304
	// RVA: 0xEA703C Offset: 0xEA703C VA: 0xEA703C
	public static bool IsTransparentProxy(object proxy) { }

	// RVA: 0xEA8E9C Offset: 0xEA8E9C VA: 0xEA8E9C
	internal static IMethodReturnMessage InternalExecuteMessage(MarshalByRefObject target, IMethodCallMessage reqMsg) { }

	[ComVisibleAttribute] // RVA: 0xC3931C Offset: 0xC3931C VA: 0xC3931C
	// RVA: 0xEB0DB8 Offset: 0xEB0DB8 VA: 0xEB0DB8
	public static object Connect(Type classToProxy, string url) { }

	// RVA: 0xEA21E0 Offset: 0xEA21E0 VA: 0xEA21E0
	public static Type GetServerTypeForUri(string URI) { }

	// RVA: 0xEABAF8 Offset: 0xEABAF8 VA: 0xEABAF8
	public static object Unmarshal(ObjRef objectRef) { }

	// RVA: 0xEB119C Offset: 0xEB119C VA: 0xEB119C
	public static object Unmarshal(ObjRef objectRef, bool fRefine) { }

	// RVA: 0xEB1788 Offset: 0xEB1788 VA: 0xEB1788
	public static ObjRef Marshal(MarshalByRefObject Obj) { }

	// RVA: 0xEB17F4 Offset: 0xEB17F4 VA: 0xEB17F4
	public static ObjRef Marshal(MarshalByRefObject Obj, string ObjURI, Type RequestedType) { }

	// RVA: 0xEB1CEC Offset: 0xEB1CEC VA: 0xEB1CEC
	private static string NewUri() { }

	[ReliabilityContractAttribute] // RVA: 0xC39330 Offset: 0xC39330 VA: 0xC39330
	// RVA: 0xEA7040 Offset: 0xEA7040 VA: 0xEA7040
	public static RealProxy GetRealProxy(object proxy) { }

	// RVA: 0xEA277C Offset: 0xEA277C VA: 0xEA277C
	public static MethodBase GetMethodBaseFromMethodMessage(IMethodMessage msg) { }

	// RVA: 0xEA24A4 Offset: 0xEA24A4 VA: 0xEA24A4
	internal static MethodBase GetMethodBaseFromName(Type type, string methodName, Type[] signature) { }

	// RVA: 0xEB289C Offset: 0xEB289C VA: 0xEB289C
	private static MethodBase FindInterfaceMethod(Type type, string methodName, Type[] signature) { }

	// RVA: 0xEA71EC Offset: 0xEA71EC VA: 0xEA71EC
	public static void GetObjectData(object obj, SerializationInfo info, StreamingContext context) { }

	// RVA: 0xEB2A34 Offset: 0xEB2A34 VA: 0xEB2A34
	public static bool IsMethodOverloaded(IMethodMessage msg) { }

	// RVA: 0xEA6C10 Offset: 0xEA6C10 VA: 0xEA6C10
	public static bool IsOneWay(MethodBase method) { }

	// RVA: 0xEB2C48 Offset: 0xEB2C48 VA: 0xEB2C48
	internal static object CreateClientProxy(ActivatedClientTypeEntry entry, object[] activationAttributes) { }

	// RVA: 0xEB2E6C Offset: 0xEB2E6C VA: 0xEB2E6C
	internal static object CreateClientProxy(Type objectType, string url, object[] activationAttributes) { }

	// RVA: 0xEB3110 Offset: 0xEB3110 VA: 0xEB3110
	internal static object CreateClientProxyForContextBound(Type type, object[] activationAttributes) { }

	// RVA: 0xEB0ED4 Offset: 0xEB0ED4 VA: 0xEB0ED4
	internal static Identity GetIdentityForUri(string uri) { }

	// RVA: 0xEB3368 Offset: 0xEB3368 VA: 0xEB3368
	private static string RemoveAppNameFromUri(string uri) { }

	// RVA: 0xEB3478 Offset: 0xEB3478 VA: 0xEB3478
	internal static ClientIdentity GetOrCreateClientIdentity(ObjRef objRef, Type proxyType, out object clientProxy) { }

	// RVA: 0xEB2FE8 Offset: 0xEB2FE8 VA: 0xEB2FE8
	private static IMessageSink GetClientChannelSinkChain(string url, object channelData, out string objectUri) { }

	// RVA: 0xEB3988 Offset: 0xEB3988 VA: 0xEB3988
	internal static ClientActivatedIdentity CreateContextBoundObjectIdentity(Type objectType) { }

	// RVA: 0xEB26FC Offset: 0xEB26FC VA: 0xEB26FC
	internal static ClientActivatedIdentity CreateClientActivatedServerIdentity(MarshalByRefObject realObject, Type objectType, string objectUri) { }

	// RVA: 0xEAEE94 Offset: 0xEAEE94 VA: 0xEAEE94
	internal static ServerIdentity CreateWellKnownServerIdentity(Type objectType, string objectUri, WellKnownObjectMode mode) { }

	// RVA: 0xEB1F90 Offset: 0xEB1F90 VA: 0xEB1F90
	private static void RegisterServerIdentity(ServerIdentity identity) { }

	// RVA: 0xEAC634 Offset: 0xEAC634 VA: 0xEAC634
	internal static object GetProxyForRemoteObject(ObjRef objref, Type classToProxy) { }

	// RVA: 0xEB0E50 Offset: 0xEB0E50 VA: 0xEB0E50
	internal static object GetRemoteObject(ObjRef objRef, Type proxyType) { }

	// RVA: 0xEB0D54 Offset: 0xEB0D54 VA: 0xEB0D54
	private static void RegisterInternalChannels() { }

	// RVA: 0xEADAA8 Offset: 0xEADAA8 VA: 0xEADAA8
	internal static void DisposeIdentity(Identity ident) { }

	// RVA: 0xE9C218 Offset: 0xE9C218 VA: 0xE9C218
	internal static Identity GetMessageTargetIdentity(IMessage msg) { }

	// RVA: 0xEB3BE0 Offset: 0xEB3BE0 VA: 0xEB3BE0
	internal static void SetMessageTargetIdentity(IMessage msg, Identity ident) { }

	// RVA: 0xEB32D8 Offset: 0xEB32D8 VA: 0xEB32D8
	private static string GetNormalizedUri(string uri) { }
}

// Namespace: System.Runtime.Remoting
internal abstract class ServerIdentity : Identity // TypeDefIndex: 626
{
	// Fields
	protected Type _objectType; // 0x48
	protected MarshalByRefObject _serverObject; // 0x50
	protected IMessageSink _serverSink; // 0x58
	protected Context _context; // 0x60
	protected Lease _lease; // 0x68

	// Properties
	public Type ObjectType { get; }
	public Lease Lease { get; }
	public Context Context { get; set; }

	// Methods

	// RVA: 0xEB3D94 Offset: 0xEB3D94 VA: 0xEB3D94
	public void .ctor(string objectUri, Context context, Type objectType) { }

	// RVA: 0xEB1194 Offset: 0xEB1194 VA: 0xEB1194
	public Type get_ObjectType() { }

	// RVA: 0xEB2210 Offset: 0xEB2210 VA: 0xEB2210
	public void StartTrackingLifetime(ILease lease) { }

	// RVA: 0xEB3DD0 Offset: 0xEB3DD0 VA: 0xEB3DD0 Slot: 5
	public virtual void OnLifetimeExpired() { }

	// RVA: 0xEB3E60 Offset: 0xEB3E60 VA: 0xEB3E60 Slot: 4
	public override ObjRef CreateObjRef(Type requestedType) { }

	// RVA: 0xEB3A38 Offset: 0xEB3A38 VA: 0xEB3A38
	public void AttachServerObject(MarshalByRefObject serverObject, Context context) { }

	// RVA: 0xEB3FD4 Offset: 0xEB3FD4 VA: 0xEB3FD4
	public Lease get_Lease() { }

	// RVA: 0xEAD85C Offset: 0xEAD85C VA: 0xEAD85C
	public Context get_Context() { }

	// RVA: 0xEB3FDC Offset: 0xEB3FDC VA: 0xEB3FDC
	public void set_Context(Context value) { }

	// RVA: -1 Offset: -1 Slot: 6
	public abstract IMessage SyncObjectProcessMessage(IMessage msg);

	// RVA: -1 Offset: -1 Slot: 7
	public abstract IMessageCtrl AsyncObjectProcessMessage(IMessage msg, IMessageSink replySink);

	// RVA: 0xEB3DD4 Offset: 0xEB3DD4 VA: 0xEB3DD4
	protected void DisposeServerObject() { }
}

// Namespace: System.Runtime.Remoting
internal class ClientActivatedIdentity : ServerIdentity // TypeDefIndex: 627
{
	// Fields
	private MarshalByRefObject _targetThis; // 0x70

	// Methods

	// RVA: 0xF33E10 Offset: 0xF33E10 VA: 0xF33E10
	public void .ctor(string objectUri, Type objectType) { }

	// RVA: 0xF33E24 Offset: 0xF33E24 VA: 0xF33E24
	public MarshalByRefObject GetServerObject() { }

	// RVA: 0xF33E2C Offset: 0xF33E2C VA: 0xF33E2C
	public void SetClientProxy(MarshalByRefObject obj) { }

	// RVA: 0xF33E34 Offset: 0xF33E34 VA: 0xF33E34 Slot: 5
	public override void OnLifetimeExpired() { }

	// RVA: 0xF33EA8 Offset: 0xF33EA8 VA: 0xF33EA8 Slot: 6
	public override IMessage SyncObjectProcessMessage(IMessage msg) { }

	// RVA: 0xF341D8 Offset: 0xF341D8 VA: 0xF341D8 Slot: 7
	public override IMessageCtrl AsyncObjectProcessMessage(IMessage msg, IMessageSink replySink) { }
}

// Namespace: System.Runtime.Remoting
internal class SingletonIdentity : ServerIdentity // TypeDefIndex: 628
{
	// Methods

	// RVA: 0xEB3BA4 Offset: 0xEB3BA4 VA: 0xEB3BA4
	public void .ctor(string objectUri, Context context, Type objectType) { }

	// RVA: 0xEB48CC Offset: 0xEB48CC VA: 0xEB48CC
	public MarshalByRefObject GetServerObject() { }

	// RVA: 0xEB4B0C Offset: 0xEB4B0C VA: 0xEB4B0C Slot: 6
	public override IMessage SyncObjectProcessMessage(IMessage msg) { }

	// RVA: 0xEB4C10 Offset: 0xEB4C10 VA: 0xEB4C10 Slot: 7
	public override IMessageCtrl AsyncObjectProcessMessage(IMessage msg, IMessageSink replySink) { }
}

// Namespace: System.Runtime.Remoting
internal class SingleCallIdentity : ServerIdentity // TypeDefIndex: 629
{
	// Methods

	// RVA: 0xEB3B68 Offset: 0xEB3B68 VA: 0xEB3B68
	public void .ctor(string objectUri, Context context, Type objectType) { }

	// RVA: 0xEB4374 Offset: 0xEB4374 VA: 0xEB4374 Slot: 6
	public override IMessage SyncObjectProcessMessage(IMessage msg) { }

	// RVA: 0xEB4688 Offset: 0xEB4688 VA: 0xEB4688 Slot: 7
	public override IMessageCtrl AsyncObjectProcessMessage(IMessage msg, IMessageSink replySink) { }
}

// Namespace: System.Runtime.Remoting
internal class DisposerReplySink : IMessageSink // TypeDefIndex: 630
{
	// Fields
	private IMessageSink _next; // 0x10
	private IDisposable _disposable; // 0x18

	// Methods

	// RVA: 0xF3DA8C Offset: 0xF3DA8C VA: 0xF3DA8C
	public void .ctor(IMessageSink next, IDisposable disposable) { }

	// RVA: 0xF3DAC4 Offset: 0xF3DAC4 VA: 0xF3DAC4 Slot: 4
	public IMessage SyncProcessMessage(IMessage msg) { }

	// RVA: 0xF3DC00 Offset: 0xF3DC00 VA: 0xF3DC00 Slot: 5
	public IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink) { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xC34ECC Offset: 0xC34ECC VA: 0xC34ECC
public class SoapServices // TypeDefIndex: 631
{
	// Fields
	private static Hashtable _xmlTypes; // 0x0
	private static Hashtable _xmlElements; // 0x8
	private static Hashtable _soapActions; // 0x10
	private static Hashtable _soapActionsMethods; // 0x18
	private static Hashtable _typeInfos; // 0x20

	// Properties
	public static string XmlNsForClrTypeWithAssembly { get; }
	public static string XmlNsForClrTypeWithNs { get; }
	public static string XmlNsForClrTypeWithNsAndAssembly { get; }

	// Methods

	// RVA: 0xEB4D28 Offset: 0xEB4D28 VA: 0xEB4D28
	private static void .cctor() { }

	// RVA: 0xEB4E1C Offset: 0xEB4E1C VA: 0xEB4E1C
	public static string get_XmlNsForClrTypeWithAssembly() { }

	// RVA: 0xEB4E64 Offset: 0xEB4E64 VA: 0xEB4E64
	public static string get_XmlNsForClrTypeWithNs() { }

	// RVA: 0xEB4EAC Offset: 0xEB4EAC VA: 0xEB4EAC
	public static string get_XmlNsForClrTypeWithNsAndAssembly() { }

	// RVA: 0xEAA670 Offset: 0xEAA670 VA: 0xEAA670
	public static string CodeXmlNamespaceForClrTypeNamespace(string typeNamespace, string assemblyName) { }

	// RVA: 0xEB4FC0 Offset: 0xEB4FC0 VA: 0xEB4FC0
	private static string GetNameKey(string name, string namspace) { }

	// RVA: 0xEB505C Offset: 0xEB505C VA: 0xEB505C
	private static string GetAssemblyName(MethodBase mb) { }

	// RVA: 0xEB51E8 Offset: 0xEB51E8 VA: 0xEB51E8
	public static bool GetXmlElementForInteropType(Type type, out string xmlElement, out string xmlNamespace) { }

	// RVA: 0xEAA2F0 Offset: 0xEAA2F0 VA: 0xEAA2F0
	public static string GetXmlNamespaceForMethodCall(MethodBase mb) { }

	// RVA: 0xEAA23C Offset: 0xEAA23C VA: 0xEAA23C
	public static string GetXmlNamespaceForMethodResponse(MethodBase mb) { }

	// RVA: 0xEB5300 Offset: 0xEB5300 VA: 0xEB5300
	public static bool GetXmlTypeForInteropType(Type type, out string xmlType, out string xmlTypeNamespace) { }

	// RVA: 0xEB541C Offset: 0xEB541C VA: 0xEB541C
	public static void PreLoad(Assembly assembly) { }

	// RVA: 0xEB54F4 Offset: 0xEB54F4 VA: 0xEB54F4
	public static void PreLoad(Type type) { }

	// RVA: 0xEB5BD4 Offset: 0xEB5BD4 VA: 0xEB5BD4
	public static void RegisterInteropXmlElement(string xmlElement, string xmlNamespace, Type type) { }

	// RVA: 0xEB5A28 Offset: 0xEB5A28 VA: 0xEB5A28
	public static void RegisterInteropXmlType(string xmlType, string xmlTypeNamespace, Type type) { }

	// RVA: 0xEB4EF4 Offset: 0xEB4EF4 VA: 0xEB4EF4
	private static string EncodeNs(string ns) { }
}

// Namespace: 
private class SoapServices.TypeInfo // TypeDefIndex: 632
{
	// Fields
	public Hashtable Attributes; // 0x10
	public Hashtable Elements; // 0x18

	// Methods

	// RVA: 0xEB5D80 Offset: 0xEB5D80 VA: 0xEB5D80
	public void .ctor() { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xC34EE0 Offset: 0xC34EE0 VA: 0xC34EE0
public class TypeEntry // TypeDefIndex: 633
{
	// Fields
	private string assembly_name; // 0x10
	private string type_name; // 0x18

	// Properties
	public string AssemblyName { get; set; }
	public string TypeName { get; set; }

	// Methods

	// RVA: 0xEB5D88 Offset: 0xEB5D88 VA: 0xEB5D88
	protected void .ctor() { }

	// RVA: 0xEB5D90 Offset: 0xEB5D90 VA: 0xEB5D90
	public string get_AssemblyName() { }

	// RVA: 0xEB5D98 Offset: 0xEB5D98 VA: 0xEB5D98
	public void set_AssemblyName(string value) { }

	// RVA: 0xEB5DA0 Offset: 0xEB5DA0 VA: 0xEB5DA0
	public string get_TypeName() { }

	// RVA: 0xEB5DA8 Offset: 0xEB5DA8 VA: 0xEB5DA8
	public void set_TypeName(string value) { }
}

// Namespace: System.Runtime.Remoting
[Serializable]
internal class TypeInfo : IRemotingTypeInfo // TypeDefIndex: 634
{
	// Fields
	private string serverType; // 0x10
	private string[] serverHierarchy; // 0x18
	private string[] interfacesImplemented; // 0x20

	// Properties
	public string TypeName { get; }

	// Methods

	// RVA: 0xEAAA18 Offset: 0xEAAA18 VA: 0xEAAA18
	public void .ctor(Type type) { }

	// RVA: 0xEB5DB0 Offset: 0xEB5DB0 VA: 0xEB5DB0 Slot: 4
	public string get_TypeName() { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xC34EF4 Offset: 0xC34EF4 VA: 0xC34EF4
public class WellKnownClientTypeEntry : TypeEntry // TypeDefIndex: 635
{
	// Fields
	private Type obj_type; // 0x20
	private string obj_url; // 0x28
	private string app_url; // 0x30

	// Properties
	public string ApplicationUrl { get; }
	public Type ObjectType { get; }
	public string ObjectUrl { get; }

	// Methods

	// RVA: 0xEB5DB8 Offset: 0xEB5DB8 VA: 0xEB5DB8
	public void .ctor(string typeName, string assemblyName, string objectUrl) { }

	// RVA: 0xEB5EEC Offset: 0xEB5EEC VA: 0xEB5EEC
	public string get_ApplicationUrl() { }

	// RVA: 0xEAECF8 Offset: 0xEAECF8 VA: 0xEAECF8
	public Type get_ObjectType() { }

	// RVA: 0xEB5EF4 Offset: 0xEB5EF4 VA: 0xEB5EF4
	public string get_ObjectUrl() { }

	// RVA: 0xEB5EFC Offset: 0xEB5EFC VA: 0xEB5EFC Slot: 3
	public override string ToString() { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xC34F08 Offset: 0xC34F08 VA: 0xC34F08
[Serializable]
public enum WellKnownObjectMode // TypeDefIndex: 636
{
	// Fields
	public int value__; // 0x0
	public const WellKnownObjectMode Singleton = 1;
	public const WellKnownObjectMode SingleCall = 2;
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xC34F1C Offset: 0xC34F1C VA: 0xC34F1C
public class WellKnownServiceTypeEntry : TypeEntry // TypeDefIndex: 637
{
	// Fields
	private Type obj_type; // 0x20
	private string obj_uri; // 0x28
	private WellKnownObjectMode obj_mode; // 0x30

	// Properties
	public WellKnownObjectMode Mode { get; }
	public Type ObjectType { get; }
	public string ObjectUri { get; }
