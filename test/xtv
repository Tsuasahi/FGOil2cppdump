	[CompilerGeneratedAttribute] // RVA: 0xCD1740 Offset: 0xCD1740 VA: 0xCD1740
	// RVA: 0x18BD2D4 Offset: 0x18BD2D4 VA: 0x18BD2D4
	private void set_TotalNum(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1750 Offset: 0xCD1750 VA: 0xCD1750
	// RVA: 0x18BD2DC Offset: 0x18BD2DC VA: 0x18BD2DC
	public long get_EnterTime() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1760 Offset: 0xCD1760 VA: 0xCD1760
	// RVA: 0x18BD13C Offset: 0x18BD13C VA: 0x18BD13C
	private void set_EnterTime(long value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1770 Offset: 0xCD1770 VA: 0xCD1770
	// RVA: 0x18BD2E4 Offset: 0x18BD2E4 VA: 0x18BD2E4
	public bool get_IsNotHavingShopItemReceived() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1780 Offset: 0xCD1780 VA: 0xCD1780
	// RVA: 0x18BD2EC Offset: 0x18BD2EC VA: 0x18BD2EC
	private void set_IsNotHavingShopItemReceived(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1790 Offset: 0xCD1790 VA: 0xCD1790
	// RVA: 0x18BD2F8 Offset: 0x18BD2F8 VA: 0x18BD2F8
	public bool get_IsAlreadyInPossession() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD17A0 Offset: 0xCD17A0 VA: 0xCD17A0
	// RVA: 0x18BD300 Offset: 0x18BD300 VA: 0x18BD300
	private void set_IsAlreadyInPossession(bool value) { }

	// RVA: 0x18BD30C Offset: 0x18BD30C VA: 0x18BD30C
	public bool get_IsHaveIconShowable() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD17B0 Offset: 0xCD17B0 VA: 0xCD17B0
	// RVA: 0x18BD34C Offset: 0x18BD34C VA: 0x18BD34C
	public bool get_IsRarePriShopPurchased() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD17C0 Offset: 0xCD17C0 VA: 0xCD17C0
	// RVA: 0x18BD354 Offset: 0x18BD354 VA: 0x18BD354
	private void set_IsRarePriShopPurchased(bool value) { }

	// RVA: 0x18BD360 Offset: 0x18BD360 VA: 0x18BD360
	public bool get_IsIndefinitePeriodShowable() { }

	// RVA: 0x18BD144 Offset: 0x18BD144 VA: 0x18BD144
	public void Modify(ShopEntity shopEntity) { }

	// RVA: 0x18BD390 Offset: 0x18BD390 VA: 0x18BD390
	private ItemEntity GetItemEntity(ShopEntity shopEntity) { }

	// RVA: 0x18BD990 Offset: 0x18BD990 VA: 0x18BD990
	private QuestEntity GetQuestEntity(ShopEntity shopEntity) { }

	// RVA: 0x18BD684 Offset: 0x18BD684 VA: 0x18BD684
	private ItemEntity[] GetEventItemEntities(ShopEntity shopEntity) { }

	// RVA: 0x18BD4B0 Offset: 0x18BD4B0 VA: 0x18BD4B0
	private bool GetIsRarePriShopPurchased(ShopEntity shopEntity) { }

	// RVA: 0x18BDB1C Offset: 0x18BDB1C VA: 0x18BDB1C
	public string get_NameText() { }

	// RVA: 0x18BDC68 Offset: 0x18BDC68 VA: 0x18BDC68
	public string get_BulkNameText() { }

	// RVA: 0x18BDD00 Offset: 0x18BDD00 VA: 0x18BDD00
	public bool get_IsExchangeQP() { }

	// RVA: 0x18BDD28 Offset: 0x18BDD28 VA: 0x18BDD28
	public IconLabelInfo.IconKind get_PriceIcon() { }

	// RVA: 0x18BDD90 Offset: 0x18BDD90 VA: 0x18BDD90
	public int get_ItemCount() { }

	// RVA: 0x18BDDCC Offset: 0x18BDDCC VA: 0x18BDDCC
	public bool get_IsItemTypeFree() { }

	// RVA: 0x18BDDF4 Offset: 0x18BDDF4 VA: 0x18BDDF4
	public int get_Price() { }

	// RVA: 0x18BDE5C Offset: 0x18BDE5C VA: 0x18BDE5C
	public int GetEventPrice(int num) { }

	// RVA: 0x18BDEE4 Offset: 0x18BDEE4 VA: 0x18BDEE4
	public string get_DetailText() { }

	// RVA: 0x18BDF70 Offset: 0x18BDF70 VA: 0x18BDF70
	public bool GetIsPreparation(out string message, out string itemName) { }

	// RVA: 0x18BE034 Offset: 0x18BE034 VA: 0x18BE034
	public bool TryGetClosedMessage(out string message, out string itemName) { }

	// RVA: 0x18BE130 Offset: 0x18BE130 VA: 0x18BE130
	public bool get_IsSoldOut() { }

	// RVA: 0x18BE254 Offset: 0x18BE254 VA: 0x18BE254
	public int get_LimitNum() { }

	// RVA: 0x18BE26C Offset: 0x18BE26C VA: 0x18BE26C
	public long get_ActiveTime() { }

	// RVA: 0x18BE284 Offset: 0x18BE284 VA: 0x18BE284
	public GamePurchase.Type get_PurchaseType() { }

	// RVA: 0x18BE2A4 Offset: 0x18BE2A4 VA: 0x18BE2A4
	public int get_TargetId() { }

	// RVA: 0x18BE2B4 Offset: 0x18BE2B4 VA: 0x18BE2B4
	public bool get_IsChocolateSvtEquip() { }

	// RVA: 0x18BE404 Offset: 0x18BE404 VA: 0x18BE404
	public bool GetSendType(out bool isTake, out bool isSend, out bool isQuest) { }

	// RVA: 0x18BE770 Offset: 0x18BE770 VA: 0x18BE770
	public bool GetNowPurchaseShopSendType(out bool isTake, out bool isSend, out bool isQuest) { }

	// RVA: 0x18BEA14 Offset: 0x18BEA14 VA: 0x18BEA14
	public string get_UniqueMessage() { }

	// RVA: 0x18BEA40 Offset: 0x18BEA40 VA: 0x18BEA40
	public bool IsPrepareTextOnMask() { }
}

// Namespace: 
public class ShopBuyItemListViewItemDraw : MonoBehaviour // TypeDefIndex: 10624
{
	// Fields
	public static readonly string BASE_IMG_LIMIT_MATERIAL; // 0x0
	[SerializeField] // RVA: 0xC77254 Offset: 0xC77254 VA: 0xC77254
	private UISprite rangeSprite; // 0x18
	[SerializeField] // RVA: 0xC77264 Offset: 0xC77264 VA: 0xC77264
	private UISprite addRangeSprite; // 0x20
	[SerializeField] // RVA: 0xC77274 Offset: 0xC77274 VA: 0xC77274
	private UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xC77284 Offset: 0xC77284 VA: 0xC77284
	private UISprite maskSprite; // 0x30
	[SerializeField] // RVA: 0xC77294 Offset: 0xC77294 VA: 0xC77294
	private UISprite bandSprite; // 0x38
	[SerializeField] // RVA: 0xC772A4 Offset: 0xC772A4 VA: 0xC772A4
	private UICommonButton baseButton; // 0x40
	[SerializeField] // RVA: 0xC772B4 Offset: 0xC772B4 VA: 0xC772B4
	private ItemIconComponent itemIcon; // 0x48
	[SerializeField] // RVA: 0xC772C4 Offset: 0xC772C4 VA: 0xC772C4
	private UICrossNarrowLabel nameTextLabel; // 0x50
	[SerializeField] // RVA: 0xC772D4 Offset: 0xC772D4 VA: 0xC772D4
	private UILabel messageTextLabel; // 0x58
	[SerializeField] // RVA: 0xC772E4 Offset: 0xC772E4 VA: 0xC772E4
	private UILabel restTimeLabel; // 0x60
	[SerializeField] // RVA: 0xC772F4 Offset: 0xC772F4 VA: 0xC772F4
	private UILabel restCountLabel; // 0x68
	[SerializeField] // RVA: 0xC77304 Offset: 0xC77304 VA: 0xC77304
	private UILabel textOnMask; // 0x70
	[SerializeField] // RVA: 0xC77314 Offset: 0xC77314 VA: 0xC77314
	private UISprite soldOutImage; // 0x78
	[SerializeField] // RVA: 0xC77324 Offset: 0xC77324 VA: 0xC77324
	private GameObject anotherBuyable; // 0x80
	[SerializeField] // RVA: 0xC77334 Offset: 0xC77334 VA: 0xC77334
	private UISprite anotherPayItemImage; // 0x88
	[SerializeField] // RVA: 0xC77344 Offset: 0xC77344 VA: 0xC77344
	private GameObject priceInfoFree; // 0x90
	[SerializeField] // RVA: 0xC77354 Offset: 0xC77354 VA: 0xC77354
	private GameObject priceInfo1; // 0x98
	[SerializeField] // RVA: 0xC77364 Offset: 0xC77364 VA: 0xC77364
	private GameObject priceInfo2; // 0xA0
	[SerializeField] // RVA: 0xC77374 Offset: 0xC77374 VA: 0xC77374
	private UILabel priceLabelFree; // 0xA8
	[SerializeField] // RVA: 0xC77384 Offset: 0xC77384 VA: 0xC77384
	private UIIconLabel priceIconLabel; // 0xB0
	[SerializeField] // RVA: 0xC77394 Offset: 0xC77394 VA: 0xC77394
	private UIIconLabel priceIconLabel1; // 0xB8
	[SerializeField] // RVA: 0xC773A4 Offset: 0xC773A4 VA: 0xC773A4
	private UIIconLabel priceIconLabel2; // 0xC0
	[SerializeField] // RVA: 0xC773B4 Offset: 0xC773B4 VA: 0xC773B4
	private ItemIconComponent eventItemIcon; // 0xC8
	[SerializeField] // RVA: 0xC773C4 Offset: 0xC773C4 VA: 0xC773C4
	private ItemIconComponent eventItemIcon1; // 0xD0
	[SerializeField] // RVA: 0xC773D4 Offset: 0xC773D4 VA: 0xC773D4
	private ItemIconComponent eventItemIcon2; // 0xD8
	[SerializeField] // RVA: 0xC773E4 Offset: 0xC773E4 VA: 0xC773E4
	private UILabel numTitleLabel; // 0xE0
	[SerializeField] // RVA: 0xC773F4 Offset: 0xC773F4 VA: 0xC773F4
	private UILabel numTextLabel; // 0xE8
	[SerializeField] // RVA: 0xC77404 Offset: 0xC77404 VA: 0xC77404
	private UICommonButton infoButton; // 0xF0
	[SerializeField] // RVA: 0xC77414 Offset: 0xC77414 VA: 0xC77414
	private UISprite possessionSprite; // 0xF8
	[SerializeField] // RVA: 0xC77424 Offset: 0xC77424 VA: 0xC77424
	private UILabel prepareTextOnMask; // 0x100
	[SerializeField] // RVA: 0xC77434 Offset: 0xC77434 VA: 0xC77434
	private UISprite chocolateSprite; // 0x108
	[SerializeField] // RVA: 0xC77444 Offset: 0xC77444 VA: 0xC77444
	private GameObject freeExchangeConditionNoticeRoot; // 0x110
	[SerializeField] // RVA: 0xC77454 Offset: 0xC77454 VA: 0xC77454
	private UILabel freeExchangeConditionNoticeLabel; // 0x118
	[SerializeField] // RVA: 0xC77464 Offset: 0xC77464 VA: 0xC77464
	private UISprite[] freeExchangeConditionNoticeBgSprites; // 0x120
	[SerializeField] // RVA: 0xC77474 Offset: 0xC77474 VA: 0xC77474
	private UILabel LineText; // 0x128
	[SerializeField] // RVA: 0xC77484 Offset: 0xC77484 VA: 0xC77484
	private UILabel LineText2digit; // 0x130
	private const int BGSPRITE_WIDTH_ADJUST = 16;
	private const int NOTICE_LABEL_MAX_WIDTH = 512;
	private UIAtlas baseAtlas; // 0x138
	private string baseSpriteName; // 0x140
	private const string FREE_COND = "SHOP_FREE_EXCHANGE_CONDITIONS";
	private const string FREE_COND_ACHIEVE = "SHOP_ACHIEVEMENT_FREE_EXCHANGE_CONDITIONS";
	private const string PAID_COND = "SHOP_PAID_EXCHANGE_CONDITIONS";
	private const string PAID_COND_ACHIEVE = "SHOP_ACHIEVEMENT_PAID_EXCHANGE_CONDITIONS";

	// Methods

	// RVA: 0x18BEE74 Offset: 0x18BEE74 VA: 0x18BEE74
	public void .ctor() { }

	// RVA: 0x18BEE7C Offset: 0x18BEE7C VA: 0x18BEE7C
	private void Awake() { }

	// RVA: 0x18BEF34 Offset: 0x18BEF34 VA: 0x18BEF34
	public void SetItem(ShopBuyItemListViewItem item, ShopBuyItemListViewItemDraw.DispMode mode) { }

	// RVA: 0x18BF958 Offset: 0x18BF958 VA: 0x18BF958
	private void SetLabelActive(UILabel label, bool isActive) { }

	// RVA: 0x18C07B8 Offset: 0x18C07B8 VA: 0x18C07B8
	private void SetLabelText(UILabel label, string text) { }

	// RVA: 0x18BFB08 Offset: 0x18BFB08 VA: 0x18BFB08
	private void SetButtonActive(UICommonButton button, bool isActive) { }

	// RVA: 0x18BF898 Offset: 0x18BF898 VA: 0x18BF898
	private void SetSpriteActive(UISprite sprite, bool isActive) { }

	// RVA: 0x18C295C Offset: 0x18C295C VA: 0x18C295C
	private void SetSpriteName(UISprite sprite, string spriteName) { }

	// RVA: 0x18BFA18 Offset: 0x18BFA18 VA: 0x18BFA18
	private void SetBandSprite(ShopBuyItemListViewItem item) { }

	// RVA: 0x18BFBC8 Offset: 0x18BFBC8 VA: 0x18BFBC8
	private void SetBaseSprite(ShopBuyItemListViewItem item) { }

	// RVA: 0x18BFDA0 Offset: 0x18BFDA0 VA: 0x18BFDA0
	private void SetItemIcon(ShopBuyItemListViewItem item, bool isInPreparation) { }

	// RVA: 0x18BFFF0 Offset: 0x18BFFF0 VA: 0x18BFFF0
	private void SetNameAndMessageText(ShopBuyItemListViewItem item, bool isInPreparation, string preparationMessage, string preparationItemName) { }

	// RVA: 0x18C0414 Offset: 0x18C0414 VA: 0x18C0414
	private void SetNumText(ShopBuyItemListViewItem item, bool isInPreparation) { }

	// RVA: 0x18C0878 Offset: 0x18C0878 VA: 0x18C0878
	private void SetRestCountText(ShopBuyItemListViewItem item, bool isInPreparation, out bool isNotServantGet, out bool isNotServantHaving, out bool isServantHaving, out bool isNotCostumeGet, out bool isNotCommandCodeGet) { }

	// RVA: 0x18C1A0C Offset: 0x18C1A0C VA: 0x18C1A0C
	private void SetInfoButton(ShopBuyItemListViewItem item, bool isInPreparation) { }

	// RVA: 0x18C1BA4 Offset: 0x18C1BA4 VA: 0x18C1BA4
	private void SetBaseButton(bool isInPreparation, ShopBuyItemListViewItemDraw.DispMode dispMode) { }

	// RVA: 0x18C0EC8 Offset: 0x18C0EC8 VA: 0x18C0EC8
	private void SetMask(ShopBuyItemListViewItem item, bool isInPreparation, bool isNotServantGet, bool isNotServantHaving, bool isServantHaving, bool isNotCostumeGet, bool isNotCommandCodeGet) { }

	// RVA: 0x18C3394 Offset: 0x18C3394 VA: 0x18C3394
	private void SetReplacedTextOnMask(ShopBuyItemListViewItem item) { }

	// RVA: 0x18C1E90 Offset: 0x18C1E90 VA: 0x18C1E90
	private void SetPriceIconText(ShopBuyItemListViewItem item, bool isInPreparation) { }

	// RVA: 0x18C2230 Offset: 0x18C2230 VA: 0x18C2230
	private void SetEventItemIconText(ShopBuyItemListViewItem item, bool isInPreparation) { }

	// RVA: 0x18C4170 Offset: 0x18C4170 VA: 0x18C4170
	private void SetEventItemIcon(ItemIconComponent eventItemIcon, ItemEntity itemEntity, bool isShowQuestion) { }

	// RVA: 0x18C1D84 Offset: 0x18C1D84 VA: 0x18C1D84
	public void SetEventEndTime(bool isRarePriShopPurchased, bool isIndefinitePeriodShowable, long activeTime, long enterTime) { }

	// RVA: 0x18C2A04 Offset: 0x18C2A04 VA: 0x18C2A04
	private bool GetIsSetItemEventShop(int[] ids) { }

	// RVA: 0x18C3CE8 Offset: 0x18C3CE8 VA: 0x18C3CE8
	private int[] GetUserItemCounts(ShopBuyItemListViewItem item) { }

	// RVA: 0x18C4278 Offset: 0x18C4278 VA: 0x18C4278
	public static ShopBuyItemListViewItemDraw.DispMode GetDispMode(ShopBuyItemListViewObject.InitMode initMode) { }

	// RVA: 0x18C31E0 Offset: 0x18C31E0 VA: 0x18C31E0
	private void ShowSoldOut(ShopBuyItemListViewItem item) { }

	// RVA: 0x18C4298 Offset: 0x18C4298 VA: 0x18C4298
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD17D0 Offset: 0xCD17D0 VA: 0xCD17D0
	// RVA: 0x18C42F4 Offset: 0x18C42F4 VA: 0x18C42F4
	private void <SetNumText>m__0(int stoneCount) { }
}

// Namespace: 
public enum ShopBuyItemListViewItemDraw.DispMode // TypeDefIndex: 10625
{
	// Fields
	public int value__; // 0x0
	public const ShopBuyItemListViewItemDraw.DispMode INVISIBLE = 0;
	public const ShopBuyItemListViewItemDraw.DispMode INVALID = 1;
	public const ShopBuyItemListViewItemDraw.DispMode VALID = 2;
	public const ShopBuyItemListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class ShopBuyItemListViewManager : ListViewManager // TypeDefIndex: 10626
{
	// Fields
	private const int noTabWidgetSize = 338;
	private const int tabWidgetSize = 276;
	private Vector3 noTabScrollBarPos; // 0x138
	private Vector3 tabScrollBarPos; // 0x144
	private float listInDelay; // 0x150
	[SerializeField] // RVA: 0xC77494 Offset: 0xC77494 VA: 0xC77494
	private UISprite scrollbarBgSprite; // 0x158
	[SerializeField] // RVA: 0xC774A4 Offset: 0xC774A4 VA: 0xC774A4
	private UISprite scrollbarForeSprite; // 0x160
	[SerializeField] // RVA: 0xC774B4 Offset: 0xC774B4 VA: 0xC774B4
	private bool isEventShop; // 0x168
	[SerializeField] // RVA: 0xC774C4 Offset: 0xC774C4 VA: 0xC774C4
	private ShopCurrencyInfoController currencyInfoController; // 0x170
	protected ShopBuyItemListViewManager.Kind kind; // 0x178
	protected ShopBuyItemListViewManager.InitMode initMode; // 0x17C
	protected int eventId; // 0x180
	private Action<int> onClickListViewItem; // 0x188
	private Action onMoveEnd; // 0x190
	private int callbackCount; // 0x198
	[CompilerGeneratedAttribute] // RVA: 0xC774D4 Offset: 0xC774D4 VA: 0xC774D4
	[DebuggerBrowsableAttribute] // RVA: 0xC774D4 Offset: 0xC774D4 VA: 0xC774D4
	private int <EventItemCount>k__BackingField; // 0x19C

	// Properties
	public int ItemBaseWindowHeight { get; }
	public List<ShopBuyItemListViewObject> ObjectList { get; }
	public List<ShopBuyItemListViewObject> ClippingObjectList { get; }
	public int EventItemCount { get; set; }

	// Methods

	// RVA: 0x18C438C Offset: 0x18C438C VA: 0x18C438C
	public void .ctor() { }

	// RVA: 0x18C4440 Offset: 0x18C4440 VA: 0x18C4440
	public int get_ItemBaseWindowHeight() { }

	// RVA: 0x18C4474 Offset: 0x18C4474 VA: 0x18C4474
	public List<ShopBuyItemListViewObject> get_ObjectList() { }

	// RVA: 0x18C4600 Offset: 0x18C4600 VA: 0x18C4600
	public List<ShopBuyItemListViewObject> get_ClippingObjectList() { }

	// RVA: 0x18C484C Offset: 0x18C484C VA: 0x18C484C
	public void CreateList(ShopBuyItemListViewManager.Kind kind) { }

	// RVA: 0x18C5084 Offset: 0x18C5084 VA: 0x18C5084
	public void CreateList(int eventId) { }

	// RVA: 0x18C50A0 Offset: 0x18C50A0 VA: 0x18C50A0
	public void CreateEventRewardList(int eventId, int slot, int eventNum, bool isForcedAdjustment) { }

	// RVA: 0x18C4860 Offset: 0x18C4860 VA: 0x18C4860
	private void CreateList(ShopBuyItemListViewManager.Kind kind, int eventId, int slot, int eventNum, bool isForcedAdjustment) { }

	// RVA: 0x18C6084 Offset: 0x18C6084 VA: 0x18C6084
	private long GetEnterTime(ShopBuyItemListViewManager.Kind kind) { }

	// RVA: 0x18C6114 Offset: 0x18C6114 VA: 0x18C6114
	private ShopEntity[] GetShopEntities(ShopBuyItemListViewManager.Kind kind, int eventId, int slot) { }

	// RVA: 0x18C6B0C Offset: 0x18C6B0C VA: 0x18C6B0C
	public void CheckUpdateEventRewardList(int eventId, int slot, int eventNum, bool isForcedAdjustment) { }

	// RVA: 0x18C6C30 Offset: 0x18C6C30 VA: 0x18C6C30
	public bool ModifyList() { }

	// RVA: 0x18C6F68 Offset: 0x18C6F68 VA: 0x18C6F68
	public bool ModifyEventRewardList(int eventId, int slot, int eventNum, bool isForcedAdjustment) { }

	// RVA: 0x18C6C48 Offset: 0x18C6C48 VA: 0x18C6C48
	private bool ModifyList(ShopBuyItemListViewManager.Kind kind, int eventId, int slot, int eventNum, bool isForcedAdjustment) { }

	// RVA: 0x18C63F4 Offset: 0x18C63F4 VA: 0x18C63F4
	private bool ModifyItem(ShopEntity shopEntity, int shopId) { }

	// RVA: 0x18C6F8C Offset: 0x18C6F8C VA: 0x18C6F8C
	public void InvalidateList() { }

	// RVA: 0x18C7284 Offset: 0x18C7284 VA: 0x18C7284
	public ShopBuyItemListViewItem GetItem(int index) { }

	// RVA: 0x18C732C Offset: 0x18C732C VA: 0x18C732C Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x18C7420 Offset: 0x18C7420 VA: 0x18C7420
	private ShopBuyItemListViewObject.InitMode GetObjectInitMode(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x18C7450 Offset: 0x18C7450 VA: 0x18C7450
	public void SetMode(ShopBuyItemListViewManager.InitMode mode, Action<int> onClickListViewItem) { }

	// RVA: 0x18C7508 Offset: 0x18C7508 VA: 0x18C7508
	public void SetMode(ShopBuyItemListViewManager.InitMode mode, Action callback, float delay = 0.1) { }

	// RVA: 0x18C7458 Offset: 0x18C7458 VA: 0x18C7458
	public void SetMode(ShopBuyItemListViewManager.InitMode mode) { }

	// RVA: 0x18C7514 Offset: 0x18C7514 VA: 0x18C7514
	private void SetDragMaskStart(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x18C753C Offset: 0x18C753C VA: 0x18C753C
	private void SetScrollBarUnEnable(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x18C782C Offset: 0x18C782C VA: 0x18C782C
	private void SetScrollBarActive(UIScrollBar scrollBar, bool isActive) { }

	// RVA: 0x18C7568 Offset: 0x18C7568 VA: 0x18C7568
	private void SetEmptyMessageBaseUnEnable(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x18C78EC Offset: 0x18C78EC VA: 0x18C78EC
	private List<ShopBuyItemListViewObject> GetObjectList(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x18C75BC Offset: 0x18C75BC VA: 0x18C75BC
	protected void RequestListObject(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x18C79CC Offset: 0x18C79CC VA: 0x18C79CC
	private float GetObjectInitDelay(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x18C7C70 Offset: 0x18C7C70 VA: 0x18C7C70
	private float GetInvokeDelay(ShopBuyItemListViewManager.InitMode initMode) { }

	// RVA: 0x18C7CAC Offset: 0x18C7CAC VA: 0x18C7CAC
	protected void OnMoveEnd() { }

	// RVA: 0x18C7DF0 Offset: 0x18C7DF0 VA: 0x18C7DF0
	protected void OnClickListView(ListViewObject obj) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD17E0 Offset: 0xCD17E0 VA: 0xCD17E0
	// RVA: 0x18C7E84 Offset: 0x18C7E84 VA: 0x18C7E84
	public int get_EventItemCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD17F0 Offset: 0xCD17F0 VA: 0xCD17F0
	// RVA: 0x18C56CC Offset: 0x18C56CC VA: 0x18C56CC
	private void set_EventItemCount(int value) { }

	// RVA: 0x18C7E8C Offset: 0x18C7E8C VA: 0x18C7E8C
	public static PayType.Type GetPayType(int eventId) { }

	// RVA: 0x18C81A0 Offset: 0x18C81A0 VA: 0x18C81A0
	public void SetSingleEventScrollInfo() { }

	// RVA: 0x18C830C Offset: 0x18C830C VA: 0x18C830C
	public void SetMultiEventScrollInfo() { }

	// RVA: 0x18C8474 Offset: 0x18C8474 VA: 0x18C8474
	public void StopUpdateRemainTime() { }

	// RVA: 0x18C84F4 Offset: 0x18C84F4 VA: 0x18C84F4
	public static ShopBuyItemListViewManager.Kind GetBuyItemKind(ShopRootConstants.State state) { }

	// RVA: 0x18C8570 Offset: 0x18C8570 VA: 0x18C8570
	public static bool GetIsShowEventItemWindow(ShopRootConstants.State state, int eventId) { }

	// RVA: 0x18C8680 Offset: 0x18C8680 VA: 0x18C8680
	public static ShopBuyItemListViewManager.Kind GetCurrencyKind(ShopRootConstants.State state) { }
}

// Namespace: 
public enum ShopBuyItemListViewManager.Kind // TypeDefIndex: 10627
{
	// Fields
	public int value__; // 0x0
	public const ShopBuyItemListViewManager.Kind NONE = 0;
	public const ShopBuyItemListViewManager.Kind QP = 1;
	public const ShopBuyItemListViewManager.Kind MANA = 2;
	public const ShopBuyItemListViewManager.Kind STONE = 3;
	public const ShopBuyItemListViewManager.Kind BANK = 4;
	public const ShopBuyItemListViewManager.Kind ACCOUNT = 5;
	public const ShopBuyItemListViewManager.Kind EVENT = 6;
	public const ShopBuyItemListViewManager.Kind STONE_FRAGMENTS = 7;
	public const ShopBuyItemListViewManager.Kind ANONYMOUS = 8;
	public const ShopBuyItemListViewManager.Kind RARE_PRI = 9;
	public const ShopBuyItemListViewManager.Kind SERVANT_STORAGE = 10;
	public const ShopBuyItemListViewManager.Kind EQUIP_STORAGE = 11;
	public const ShopBuyItemListViewManager.Kind SPECIAL_ITEM = 12;
	public const ShopBuyItemListViewManager.Kind GRAIL_FRAGMENTS = 13;
	public const ShopBuyItemListViewManager.Kind SVT_COSTUME = 14;
	public const ShopBuyItemListViewManager.Kind START_UP_SUMMON = 15;
	public const ShopBuyItemListViewManager.Kind SHOP13 = 16;
}

// Namespace: 
public enum ShopBuyItemListViewManager.InitMode // TypeDefIndex: 10628
{
	// Fields
	public int value__; // 0x0
	public const ShopBuyItemListViewManager.InitMode NONE = 0;
	public const ShopBuyItemListViewManager.InitMode INTO = 1;
	public const ShopBuyItemListViewManager.InitMode INPUT = 2;
	public const ShopBuyItemListViewManager.InitMode ENTER = 3;
	public const ShopBuyItemListViewManager.InitMode EXIT = 4;
	public const ShopBuyItemListViewManager.InitMode MODIFY = 5;
}

// Namespace: 
public class ShopBuyItemListViewObject : ListViewObject // TypeDefIndex: 10629
{
	// Fields
	private ShopBuyItemListViewObject.InitMode initMode; // 0x6C
	private ShopBuyItemListViewObject.State state; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC77510 Offset: 0xC77510 VA: 0xC77510
	[DebuggerBrowsableAttribute] // RVA: 0xC77510 Offset: 0xC77510 VA: 0xC77510
	private Action onMoveEnd; // 0x78
	private ShopBuyItemListViewItemDraw itemDraw; // 0x80
	private ShopBuyItemListViewItemDraw.DispMode dispMode; // 0x88
	private GameObject dragObject; // 0x90
	private ShopBuyItemListViewItem shopBuyItem; // 0x98

	// Methods

	// RVA: 0x18C86A4 Offset: 0x18C86A4 VA: 0x18C86A4
	public void .ctor() { }

	// RVA: 0x18C870C Offset: 0x18C870C VA: 0x18C870C
	private void add_onMoveEnd(Action value) { }

	// RVA: 0x18C87F8 Offset: 0x18C87F8 VA: 0x18C87F8
	private void remove_onMoveEnd(Action value) { }

	// RVA: 0x18C88E4 Offset: 0x18C88E4 VA: 0x18C88E4
	private void Awake() { }

	// RVA: 0x18C8958 Offset: 0x18C8958 VA: 0x18C8958
	private void OnDestroy() { }

	// RVA: 0x18C47C8 Offset: 0x18C47C8 VA: 0x18C47C8
	public ShopBuyItemListViewItem GetItem() { }

	// RVA: 0x18C8A04 Offset: 0x18C8A04 VA: 0x18C8A04 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x18C8A10 Offset: 0x18C8A10 VA: 0x18C8A10 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x18C7444 Offset: 0x18C7444 VA: 0x18C7444
	public void Init(ShopBuyItemListViewObject.InitMode initMode) { }

	// RVA: 0x18C79FC Offset: 0x18C79FC VA: 0x18C79FC
	public void Init(ShopBuyItemListViewObject.InitMode initMode, Action onMoveEnd, float delay) { }

	// RVA: 0x18C8AA0 Offset: 0x18C8AA0 VA: 0x18C8AA0
	private ShopBuyItemListViewObject.State GetState(ShopBuyItemListViewObject.InitMode initMode) { }

	// RVA: 0x18C7108 Offset: 0x18C7108 VA: 0x18C7108
	public void SetupDisp() { }

	// RVA: 0x18C8AC0 Offset: 0x18C8AC0 VA: 0x18C8AC0
	private void EventStart(ShopBuyItemListViewObject.InitMode initMode, float delay) { }

	// RVA: 0x18C8C88 Offset: 0x18C8C88 VA: 0x18C8C88
	private void EventMove() { }

	// RVA: 0x18C8FD0 Offset: 0x18C8FD0 VA: 0x18C8FD0
	private void EventMoveFinish() { }

	// RVA: 0x18C9098 Offset: 0x18C9098 VA: 0x18C9098
	private void OnMoveEnd() { }

	// RVA: 0x18C8C24 Offset: 0x18C8C24 VA: 0x18C8C24
	private Vector3 GetStartPosition(ShopBuyItemListViewObject.InitMode initMode) { }

	// RVA: 0x18C8D98 Offset: 0x18C8D98 VA: 0x18C8D98
	private Vector3 GetTargetPosition(ShopBuyItemListViewObject.InitMode initMode) { }

	// RVA: 0x18C8C08 Offset: 0x18C8C08 VA: 0x18C8C08
	private void CallOnMoveEnd() { }

	// RVA: 0x18C90C0 Offset: 0x18C90C0 VA: 0x18C90C0
	public void SetShopBuyItem(ShopBuyItemListViewItem item) { }

	// RVA: 0x18C90C8 Offset: 0x18C90C8 VA: 0x18C90C8
	public void OnInformationButton() { }

	// RVA: 0x18C9270 Offset: 0x18C9270 VA: 0x18C9270
	private int ShowServantInfomation(int servantId) { }

	// RVA: 0x18C95F0 Offset: 0x18C95F0 VA: 0x18C95F0
	private int ShowItemInfomation(int itemId) { }

	// RVA: 0x18C9768 Offset: 0x18C9768 VA: 0x18C9768
	private int ShowCommandCodeInfomation(int commandCodeId) { }

	// RVA: 0x18C98E8 Offset: 0x18C98E8 VA: 0x18C98E8
	private int ShowOtherInfomation(ShopBuyItemListViewItem item) { }

	// RVA: 0x18C9578 Offset: 0x18C9578 VA: 0x18C9578
	private void PlayShowInfomationSound(int seKind) { }

	// RVA: 0x18C9A64 Offset: 0x18C9A64 VA: 0x18C9A64
	public void EndShowServantStatusDialog(bool isDecide) { }

	// RVA: 0x18C9AC8 Offset: 0x18C9AC8 VA: 0x18C9AC8
	public void EndShowServantEquipStatusDialog(bool isDecide) { }

	// RVA: 0x18C9B2C Offset: 0x18C9B2C VA: 0x18C9B2C
	public void EndShowItemDetailDialog(bool isDecide) { }

	// RVA: 0x18C9BB8 Offset: 0x18C9BB8 VA: 0x18C9BB8
	public void UpdateRemaingTime() { }

	// RVA: 0x18C9CE8 Offset: 0x18C9CE8 VA: 0x18C9CE8 Slot: 3
	public override string ToString() { }

	// RVA: 0x18C79AC Offset: 0x18C79AC VA: 0x18C79AC
	public static ShopBuyItemListViewObject.InitMode GetInitMode(ShopBuyItemListViewManager.InitMode initMode) { }
}

// Namespace: 
public enum ShopBuyItemListViewObject.InitMode // TypeDefIndex: 10630
{
	// Fields
	public int value__; // 0x0
	public const ShopBuyItemListViewObject.InitMode INVISIBLE = 0;
	public const ShopBuyItemListViewObject.InitMode INVALID = 1;
	public const ShopBuyItemListViewObject.InitMode VALID = 2;
	public const ShopBuyItemListViewObject.InitMode INPUT = 3;
	public const ShopBuyItemListViewObject.InitMode INTO = 4;
	public const ShopBuyItemListViewObject.InitMode ENTER = 5;
	public const ShopBuyItemListViewObject.InitMode EXIT = 6;
	public const ShopBuyItemListViewObject.InitMode MODIFY = 7;
}

// Namespace: 
private enum ShopBuyItemListViewObject.State // TypeDefIndex: 10631
{
	// Fields
	public int value__; // 0x0
	public const ShopBuyItemListViewObject.State INIT = 0;
	public const ShopBuyItemListViewObject.State IDLE = 1;
	public const ShopBuyItemListViewObject.State MOVE = 2;
	public const ShopBuyItemListViewObject.State INPUT = 3;
}

// Namespace: 
public static class ShopBuyItemUtility // TypeDefIndex: 10632
{
	// Fields
	private static readonly int MESSAGE_DEFAULT_FONT_SIZE; // 0x0

	// Methods

	// RVA: 0x18BFEE4 Offset: 0x18BFEE4 VA: 0x18BFEE4
	public static void SetDefaultMessageLabel(UILabel label) { }

	// RVA: 0x18C178C Offset: 0x18C178C VA: 0x18C178C
	public static void SetAddTextOnMask(ShopEntity shopEntity, UILabel textOnMaskLabel) { }

	// RVA: 0x18C05DC Offset: 0x18C05DC VA: 0x18C05DC
	public static void SetShopHaveStatusIcon(ShopEntity shopEntity, UISprite sprite, bool isDispFlag) { }

	// RVA: 0x18CA030 Offset: 0x18CA030 VA: 0x18CA030
	private static void .cctor() { }
}

// Namespace: 
public class ShopCurrencyInfoController : MonoBehaviour // TypeDefIndex: 10633
{
	// Fields
	private readonly Vector3 currencySpritePosTypeA; // 0x18
	private readonly Vector3 currencySpritePosTypeB; // 0x24
	[SerializeField] // RVA: 0xC7754C Offset: 0xC7754C VA: 0xC7754C
	private UISprite shopEventItemWindow; // 0x30
	[SerializeField] // RVA: 0xC7755C Offset: 0xC7755C VA: 0xC7755C
	private EventItemComponent[] shopEventItemDrawList; // 0x38
	[SerializeField] // RVA: 0xC7756C Offset: 0xC7756C VA: 0xC7756C
	private UISprite shopEventItemLimitOverWindow; // 0x40
	[SerializeField] // RVA: 0xC7757C Offset: 0xC7757C VA: 0xC7757C
	private EventItemComponent[] shopEventItemDrawLimitOverList; // 0x48
	[SerializeField] // RVA: 0xC7758C Offset: 0xC7758C VA: 0xC7758C
	private UISprite currencyWindow; // 0x50
	[SerializeField] // RVA: 0xC7759C Offset: 0xC7759C VA: 0xC7759C
	private GameObject itemInfo1; // 0x58
	[SerializeField] // RVA: 0xC775AC Offset: 0xC775AC VA: 0xC775AC
	private GameObject itemInfo2; // 0x60
	[SerializeField] // RVA: 0xC775BC Offset: 0xC775BC VA: 0xC775BC
	private UISprite currencySprite; // 0x68
	[SerializeField] // RVA: 0xC775CC Offset: 0xC775CC VA: 0xC775CC
	private UILabel currencyLabel; // 0x70
	[SerializeField] // RVA: 0xC775DC Offset: 0xC775DC VA: 0xC775DC
	private UISprite currencySprite2; // 0x78
	[SerializeField] // RVA: 0xC775EC Offset: 0xC775EC VA: 0xC775EC
	private UILabel currencyLabel2; // 0x80
	[SerializeField] // RVA: 0xC775FC Offset: 0xC775FC VA: 0xC775FC
	private UIPanel infoPanel; // 0x88
	[SerializeField] // RVA: 0xC7760C Offset: 0xC7760C VA: 0xC7760C
	private UIPanel shopEventItemWindowPanel; // 0x90
	[SerializeField] // RVA: 0xC7761C Offset: 0xC7761C VA: 0xC7761C
	private UILabel eventItemNormalTimeLabel; // 0x98
	[SerializeField] // RVA: 0xC7762C Offset: 0xC7762C VA: 0xC7762C
	private UILabel eventItemNormalRestLabel; // 0xA0
	[SerializeField] // RVA: 0xC7763C Offset: 0xC7763C VA: 0xC7763C
	private UILabel eventItemLimitOverTimeLabel; // 0xA8
	[SerializeField] // RVA: 0xC7764C Offset: 0xC7764C VA: 0xC7764C
	private UILabel eventItemLimitOverRestLabel; // 0xB0
	private UILabel eventItemTimeLabel; // 0xB8
	private UILabel eventItemRestLabel; // 0xC0
	[CompilerGeneratedAttribute] // RVA: 0xC7765C Offset: 0xC7765C VA: 0xC7765C
	[DebuggerBrowsableAttribute] // RVA: 0xC7765C Offset: 0xC7765C VA: 0xC7765C
	private int <ItemBaseWindowHeight>k__BackingField; // 0xC8
	private ShopBuyItemListViewManager.Kind kind; // 0xCC
	private int eventId; // 0xD0
	private EventEntity eventEntity; // 0xD8
	private List<ShopBuyItemListViewObject> objectList; // 0xE0
	private bool isRarePriShopPurchased; // 0xE8
	private UIAtlas baseAtlas; // 0xF0
	[CompilerGeneratedAttribute] // RVA: 0xC77698 Offset: 0xC77698 VA: 0xC77698
	private static Func<ShopEntity, long> <>f__am$cache0; // 0x0

	// Properties
	public int ItemBaseWindowHeight { get; set; }

	// Methods

	// RVA: 0x18CA084 Offset: 0x18CA084 VA: 0x18CA084
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1800 Offset: 0xCD1800 VA: 0xCD1800
	// RVA: 0x18C446C Offset: 0x18C446C VA: 0x18C446C
	public int get_ItemBaseWindowHeight() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1810 Offset: 0xCD1810 VA: 0xCD1810
	// RVA: 0x18CA11C Offset: 0x18CA11C VA: 0x18CA11C
	private void set_ItemBaseWindowHeight(int value) { }

	// RVA: 0x18C56D4 Offset: 0x18C56D4 VA: 0x18C56D4
	public void SetObjectList(List<ShopBuyItemListViewObject> objectList) { }

	// RVA: 0x18CA124 Offset: 0x18CA124 VA: 0x18CA124
	public void RefreshEventItemWindow(ShopBuyItemListViewManager.Kind kind, int eventId, bool isEventShop) { }

	// RVA: 0x18C56DC Offset: 0x18C56DC VA: 0x18C56DC
	public void RefreshEventItemInfo(ShopBuyItemListViewManager.Kind kind, int eventId, bool isEventShop, int[] eventItemList, bool isForcedAdjustment) { }

	// RVA: 0x18CA270 Offset: 0x18CA270 VA: 0x18CA270
	public void RefreshCurrencyInfo(ShopBuyItemListViewManager.Kind kind, ShopRootConstants.State state = 0) { }

	// RVA: 0x18CA95C Offset: 0x18CA95C VA: 0x18CA95C
	private bool GetIsShowCurrencyWindow(ShopBuyItemListViewManager.Kind kind) { }

	// RVA: 0x18CA990 Offset: 0x18CA990 VA: 0x18CA990
	private string GetCurrencySprite(ShopBuyItemListViewManager.Kind kind) { }

	// RVA: 0x18CAA28 Offset: 0x18CAA28 VA: 0x18CAA28
	private Vector3 GetCurrencySpritePosition(ShopBuyItemListViewManager.Kind kind) { }

	// RVA: 0x18CAA7C Offset: 0x18CAA7C VA: 0x18CAA7C
	private string GetCurrencyNumber(ShopBuyItemListViewManager.Kind kind) { }

	// RVA: 0x18CAD78 Offset: 0x18CAD78 VA: 0x18CAD78
	private Vector3 GetRestLabelPosition(bool isRarepriShopPurchased, bool isFinished, int textCount) { }

	// RVA: 0x18CA868 Offset: 0x18CA868 VA: 0x18CA868
	private void SetEventEnableTime(int eventId, bool isLimitOver) { }

	// RVA: 0x18C84A0 Offset: 0x18C84A0 VA: 0x18C84A0
	public void StopUpdateRemainTime() { }

	// RVA: 0x18CADE4 Offset: 0x18CADE4 VA: 0x18CADE4
	private bool GetIsRarePriShopPurchased(int eventId) { }

	// RVA: 0x18CAFB4 Offset: 0x18CAFB4 VA: 0x18CAFB4
	private void UpdateRemainTime() { }

	// RVA: 0x18CB0E0 Offset: 0x18CB0E0 VA: 0x18CB0E0
	private void SetEventItemRestTimeLabels(UILabel restLabel, UILabel timeLabel) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1820 Offset: 0xCD1820 VA: 0xCD1820
	// RVA: 0x18CB7D4 Offset: 0x18CB7D4 VA: 0x18CB7D4
	private static long <SetEventItemRestTimeLabels>m__0(ShopEntity x) { }
}

// Namespace: 
public class ShopEventListViewItem : ListViewItem // TypeDefIndex: 10634
{
	// Fields
	private int eventId; // 0x70
	private EventEntity eventEntity; // 0x78
	private long openedAt; // 0x80
	private long closedAt; // 0x88
	private bool isFinished; // 0x90
	private bool isLocked; // 0x91
	private bool isClosedLimit; // 0x92
	private int closeValue; // 0x94

	// Properties
	public int EventId { get; }
	public string NameText { get; }
	public string DetailText { get; }
	public long EventStartedAt { get; }
	public long EventEndedAt { get; }
	public long ChangeStartedAt { get; }
	public long ChangeEndedAt { get; }
	public bool IsFinished { get; }
	public bool IsLocked { get; }
	public bool IsClosed { get; }
	public bool IsClosedLimit { get; }

	// Methods

	// RVA: 0x18CF350 Offset: 0x18CF350 VA: 0x18CF350
	public void .ctor(int index, int eventId) { }

	// RVA: 0x18CF8D8 Offset: 0x18CF8D8 VA: 0x18CF8D8
	public int get_EventId() { }

	// RVA: 0x18CF8E0 Offset: 0x18CF8E0 VA: 0x18CF8E0
	public string get_NameText() { }

	// RVA: 0x18CF944 Offset: 0x18CF944 VA: 0x18CF944
	public string get_DetailText() { }

	// RVA: 0x18CF9C0 Offset: 0x18CF9C0 VA: 0x18CF9C0
	public long get_EventStartedAt() { }

	// RVA: 0x18CF9D8 Offset: 0x18CF9D8 VA: 0x18CF9D8
	public long get_EventEndedAt() { }

	// RVA: 0x18CF9F0 Offset: 0x18CF9F0 VA: 0x18CF9F0
	public long get_ChangeStartedAt() { }

	// RVA: 0x18CF9F8 Offset: 0x18CF9F8 VA: 0x18CF9F8
	public long get_ChangeEndedAt() { }

	// RVA: 0x18CFA00 Offset: 0x18CFA00 VA: 0x18CFA00
	public bool get_IsFinished() { }

	// RVA: 0x18CFA08 Offset: 0x18CFA08 VA: 0x18CFA08
	public bool get_IsLocked() { }

	// RVA: 0x18CFA10 Offset: 0x18CFA10 VA: 0x18CFA10
	public bool get_IsClosed() { }

	// RVA: 0x18CFA30 Offset: 0x18CFA30 VA: 0x18CFA30
	public bool get_IsClosedLimit() { }

	// RVA: 0x18CFA38 Offset: 0x18CFA38 VA: 0x18CFA38
	private string ToString() { }

	// RVA: 0x18CFABC Offset: 0x18CFABC VA: 0x18CFABC Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45404 Offset: 0xC45404 VA: 0xC45404
private sealed class ShopEventListViewItem.<ShopEventListViewItem>c__AnonStorey0 // TypeDefIndex: 10635
{
	// Fields
	internal long nowTime; // 0x10

	// Methods

	// RVA: 0x18CF894 Offset: 0x18CF894 VA: 0x18CF894
	public void .ctor() { }

	// RVA: 0x18CFB1C Offset: 0x18CFB1C VA: 0x18CFB1C
	internal bool <>m__0(ShopEntity x) { }
}

// Namespace: 
public class ShopEventListViewItemDraw : MonoBehaviour // TypeDefIndex: 10636
{
	// Fields
	[SerializeField] // RVA: 0xC776A8 Offset: 0xC776A8 VA: 0xC776A8
	private UISprite rangeSprite; // 0x18
	[SerializeField] // RVA: 0xC776B8 Offset: 0xC776B8 VA: 0xC776B8
	private UISprite addRangeSprite; // 0x20
	[SerializeField] // RVA: 0xC776C8 Offset: 0xC776C8 VA: 0xC776C8
	private UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xC776D8 Offset: 0xC776D8 VA: 0xC776D8
	private UICommonButton baseButton; // 0x30
	[SerializeField] // RVA: 0xC776E8 Offset: 0xC776E8 VA: 0xC776E8
	private GameObject infoBase; // 0x38
	[SerializeField] // RVA: 0xC776F8 Offset: 0xC776F8 VA: 0xC776F8
	private UILabel nameTextLabel; // 0x40
	[SerializeField] // RVA: 0xC77708 Offset: 0xC77708 VA: 0xC77708
	private UILabel messageTextLabel; // 0x48
	[SerializeField] // RVA: 0xC77718 Offset: 0xC77718 VA: 0xC77718
	private UILabel eventPeriodLabel; // 0x50
	[SerializeField] // RVA: 0xC77728 Offset: 0xC77728 VA: 0xC77728
	private UILabel changePeriodLabel; // 0x58
	[SerializeField] // RVA: 0xC77738 Offset: 0xC77738 VA: 0xC77738
	private UILabel condMessageLabel; // 0x60
	private UIAtlas baseAtlas; // 0x68
	private string baseSpriteName; // 0x70

	// Methods

	// RVA: 0x18CFB58 Offset: 0x18CFB58 VA: 0x18CFB58
	public void .ctor() { }

	// RVA: 0x18CFB60 Offset: 0x18CFB60 VA: 0x18CFB60
	private void Awake() { }

	// RVA: 0x18CFC18 Offset: 0x18CFC18 VA: 0x18CFC18
	public void SetItem(ShopEventListViewItem item, ShopEventListViewItemDraw.DispMode mode) { }

	// RVA: 0x18D0048 Offset: 0x18D0048 VA: 0x18D0048
	private void SetSpriteActive(UISprite sprite, bool isActive) { }

	// RVA: 0x18D0108 Offset: 0x18D0108 VA: 0x18D0108
	private bool SetBaseSprite(ShopEventListViewItem item) { }

	// RVA: 0x18D025C Offset: 0x18D025C VA: 0x18D025C
	private void SetBaseButtonState(ShopEventListViewItem item, ShopEventListViewItemDraw.DispMode mode) { }

	// RVA: 0x18D051C Offset: 0x18D051C VA: 0x18D051C
	public static ShopEventListViewItemDraw.DispMode GetDispMode(ShopEventListViewObject.InitMode initMode) { }
}

// Namespace: 
public enum ShopEventListViewItemDraw.DispMode // TypeDefIndex: 10637
{
	// Fields
	public int value__; // 0x0
	public const ShopEventListViewItemDraw.DispMode INVISIBLE = 0;
	public const ShopEventListViewItemDraw.DispMode INVALID = 1;
	public const ShopEventListViewItemDraw.DispMode VALID = 2;
	public const ShopEventListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class ShopEventListViewManager : ListViewManager // TypeDefIndex: 10638
{
	// Fields
	protected ShopEventListViewManager.InitMode initMode; // 0x138
	private Action<int> onClickListViewItem; // 0x140
	private Action onMoveEnd; // 0x148
	private int callbackCount; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xC77748 Offset: 0xC77748 VA: 0xC77748
	private static Action <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC77758 Offset: 0xC77758 VA: 0xC77758
	private static Action <>f__am$cache1; // 0x8

	// Properties
	private List<ShopEventListViewObject> ObjectList { get; }
	private List<ShopEventListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x18D053C Offset: 0x18D053C VA: 0x18D053C
	public void .ctor() { }

	// RVA: 0x18D0544 Offset: 0x18D0544 VA: 0x18D0544
	private List<ShopEventListViewObject> get_ObjectList() { }

	// RVA: 0x18D06D0 Offset: 0x18D06D0 VA: 0x18D06D0
	private List<ShopEventListViewObject> get_ClippingObjectList() { }

	// RVA: 0x18D091C Offset: 0x18D091C VA: 0x18D091C
	public void CreateList(ShopEventListViewManager.Kind kind) { }

	// RVA: 0x18D0B34 Offset: 0x18D0B34 VA: 0x18D0B34
	public void InvalidateList() { }

	// RVA: 0x18D0D0C Offset: 0x18D0D0C VA: 0x18D0D0C
	public void DestroyList() { }

	// RVA: 0x18D0D14 Offset: 0x18D0D14 VA: 0x18D0D14
	public ShopEventListViewItem GetItem(int index) { }

	// RVA: 0x18D0DBC Offset: 0x18D0DBC VA: 0x18D0DBC
	public ShopEventListViewItem SearchItem(int eventId) { }

	// RVA: 0x18D0E74 Offset: 0x18D0E74 VA: 0x18D0E74 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x18D11B0 Offset: 0x18D11B0 VA: 0x18D11B0
	public void SetMode(ShopEventListViewManager.InitMode initMode, Action<int> onClickListViewItem) { }

	// RVA: 0x18D1260 Offset: 0x18D1260 VA: 0x18D1260
	public void SetMode(ShopEventListViewManager.InitMode initMode, Action onMoveEnd) { }

	// RVA: 0x18D11B8 Offset: 0x18D11B8 VA: 0x18D11B8
	public void SetMode(ShopEventListViewManager.InitMode initMode) { }

	// RVA: 0x18D1594 Offset: 0x18D1594 VA: 0x18D1594
	private List<ShopEventListViewObject> GetObjectList(ShopEventListViewManager.InitMode initMode) { }

	// RVA: 0x18D1268 Offset: 0x18D1268 VA: 0x18D1268
	private void SetDragMaskStart(ShopEventListViewManager.InitMode initMode) { }

	// RVA: 0x18D1290 Offset: 0x18D1290 VA: 0x18D1290
	private void SetScrollBarUnEnable(ShopEventListViewManager.InitMode initMode) { }

	// RVA: 0x18D1668 Offset: 0x18D1668 VA: 0x18D1668
	private void SetScrollBarEnable(ShopEventListViewManager.InitMode initMode) { }

	// RVA: 0x18D15A8 Offset: 0x18D15A8 VA: 0x18D15A8
	private void SetScrollBarActive(UIScrollBar scrollBar, bool isActive) { }

