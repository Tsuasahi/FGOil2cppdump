
	// RVA: 0x1BBF3A8 Offset: 0x1BBF3A8 VA: 0x1BBF3A8
	private void OnDrop(GameObject go) { }

	// RVA: 0x1BBF470 Offset: 0x1BBF470 VA: 0x1BBF470
	private void OnSubmit() { }

	// RVA: 0x1BBF524 Offset: 0x1BBF524 VA: 0x1BBF524
	private void OnScroll(float delta) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2C1C0 Offset: 0xC2C1C0 VA: 0xC2C1C0
public class UIGrid : UIWidgetContainer // TypeDefIndex: 12077
{
	// Fields
	public UIGrid.Arrangement arrangement; // 0x18
	public UIGrid.Sorting sorting; // 0x1C
	public UIWidget.Pivot pivot; // 0x20
	public int maxPerLine; // 0x24
	public float cellWidth; // 0x28
	public float cellHeight; // 0x2C
	public bool animateSmoothly; // 0x30
	public bool hideInactive; // 0x31
	public bool keepWithinPanel; // 0x32
	public UIGrid.OnReposition onReposition; // 0x38
	public Comparison<Transform> onCustomSort; // 0x40
	[HideInInspector] // RVA: 0xC846B4 Offset: 0xC846B4 VA: 0xC846B4
	[SerializeField] // RVA: 0xC846B4 Offset: 0xC846B4 VA: 0xC846B4
	private bool sorted; // 0x48
	protected bool mReposition; // 0x49
	protected UIPanel mPanel; // 0x50
	protected bool mInitDone; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xC846EC Offset: 0xC846EC VA: 0xC846EC
	private static Comparison<Transform> <>f__mg$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC846FC Offset: 0xC846FC VA: 0xC846FC
	private static Comparison<Transform> <>f__mg$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC8470C Offset: 0xC8470C VA: 0xC8470C
	private static Comparison<Transform> <>f__mg$cache2; // 0x10

	// Properties
	public bool repositionNow { set; }

	// Methods

	// RVA: 0x1BBFE08 Offset: 0x1BBFE08 VA: 0x1BBFE08
	public void .ctor() { }

	// RVA: 0x1BBFE1C Offset: 0x1BBFE1C VA: 0x1BBFE1C
	public void set_repositionNow(bool value) { }

	// RVA: 0x1BBFE38 Offset: 0x1BBFE38 VA: 0x1BBFE38
	public List<Transform> GetChildList() { }

	// RVA: 0x1BC0190 Offset: 0x1BC0190 VA: 0x1BC0190
	public Transform GetChild(int index) { }

	// RVA: 0x1BC0238 Offset: 0x1BC0238 VA: 0x1BC0238
	public int GetIndex(Transform trans) { }

	// RVA: 0x1BC02AC Offset: 0x1BC02AC VA: 0x1BC02AC
	public void AddChild(Transform trans) { }

	// RVA: 0x1BC02B4 Offset: 0x1BC02B4 VA: 0x1BC02B4
	public void AddChild(Transform trans, bool sort) { }

	// RVA: 0x1BC0388 Offset: 0x1BC0388 VA: 0x1BC0388
	public bool RemoveChild(Transform t) { }

	// RVA: 0x1BC0424 Offset: 0x1BC0424 VA: 0x1BC0424
	public void RemoveAllChild() { }

	// RVA: 0x1BC0514 Offset: 0x1BC0514 VA: 0x1BC0514 Slot: 4
	protected virtual void Init() { }

	// RVA: 0x1BC05A8 Offset: 0x1BC05A8 VA: 0x1BC05A8 Slot: 5
	protected virtual void Start() { }

	// RVA: 0x1BC0604 Offset: 0x1BC0604 VA: 0x1BC0604 Slot: 6
	protected virtual void Update() { }

	// RVA: 0x1BC0638 Offset: 0x1BC0638 VA: 0x1BC0638
	private void OnValidate() { }

	// RVA: 0x1BC06CC Offset: 0x1BC06CC VA: 0x1BC06CC
	public static int SortByName(Transform a, Transform b) { }

	// RVA: 0x1BC0780 Offset: 0x1BC0780 VA: 0x1BC0780
	public static int SortHorizontal(Transform a, Transform b) { }

	// RVA: 0x1BC07F0 Offset: 0x1BC07F0 VA: 0x1BC07F0
	public static int SortVertical(Transform a, Transform b) { }

	// RVA: 0x1BC0870 Offset: 0x1BC0870 VA: 0x1BC0870 Slot: 7
	protected virtual void Sort(List<Transform> list) { }

	[ContextMenu] // RVA: 0xCD6768 Offset: 0xCD6768 VA: 0xCD6768
	// RVA: 0x1BC0874 Offset: 0x1BC0874 VA: 0x1BC0874 Slot: 8
	public virtual void Reposition() { }

	// RVA: 0x1BC09A8 Offset: 0x1BC09A8 VA: 0x1BC09A8
	public void ConstrainWithinPanel() { }

	// RVA: 0x1BC0CE0 Offset: 0x1BC0CE0 VA: 0x1BC0CE0 Slot: 9
	protected virtual void ResetPosition(List<Transform> list) { }
}

// Namespace: 
public sealed class UIGrid.OnReposition : MulticastDelegate // TypeDefIndex: 12078
{
	// Methods

	// RVA: 0x1BC12D0 Offset: 0x1BC12D0 VA: 0x1BC12D0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1BC0AE0 Offset: 0x1BC0AE0 VA: 0x1BC0AE0 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1BC12E0 Offset: 0x1BC12E0 VA: 0x1BC12E0 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1BC1314 Offset: 0x1BC1314 VA: 0x1BC1314 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public enum UIGrid.Arrangement // TypeDefIndex: 12079
{
	// Fields
	public int value__; // 0x0
	public const UIGrid.Arrangement Horizontal = 0;
	public const UIGrid.Arrangement Vertical = 1;
	public const UIGrid.Arrangement CellSnap = 2;
}

// Namespace: 
public enum UIGrid.Sorting // TypeDefIndex: 12080
{
	// Fields
	public int value__; // 0x0
	public const UIGrid.Sorting None = 0;
	public const UIGrid.Sorting Alphabetic = 1;
	public const UIGrid.Sorting Horizontal = 2;
	public const UIGrid.Sorting Vertical = 3;
	public const UIGrid.Sorting Custom = 4;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2C1F8 Offset: 0xC2C1F8 VA: 0xC2C1F8
public class UIImageButton : MonoBehaviour // TypeDefIndex: 12081
{
	// Fields
	public UISprite target; // 0x18
	public string normalSprite; // 0x20
	public string hoverSprite; // 0x28
	public string pressedSprite; // 0x30
	public string disabledSprite; // 0x38
	public bool pixelSnap; // 0x40

	// Properties
	public bool isEnabled { get; set; }

	// Methods

	// RVA: 0x1BC6A28 Offset: 0x1BC6A28 VA: 0x1BC6A28
	public void .ctor() { }

	// RVA: 0x1BC6A38 Offset: 0x1BC6A38 VA: 0x1BC6A38
	public bool get_isEnabled() { }

	// RVA: 0x1BC6B00 Offset: 0x1BC6B00 VA: 0x1BC6B00
	public void set_isEnabled(bool value) { }

	// RVA: 0x1BC6CF0 Offset: 0x1BC6CF0 VA: 0x1BC6CF0
	private void OnEnable() { }

	// RVA: 0x1BC6D84 Offset: 0x1BC6D84 VA: 0x1BC6D84
	private void OnValidate() { }

	// RVA: 0x1BC6C00 Offset: 0x1BC6C00 VA: 0x1BC6C00
	private void UpdateImage() { }

	// RVA: 0x1BC7074 Offset: 0x1BC7074 VA: 0x1BC7074
	private void OnHover(bool isOver) { }

	// RVA: 0x1BC712C Offset: 0x1BC712C VA: 0x1BC712C
	private void OnPress(bool pressed) { }

	// RVA: 0x1BC6F3C Offset: 0x1BC6F3C VA: 0x1BC6F3C
	private void SetSprite(string sprite) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2C230 Offset: 0xC2C230 VA: 0xC2C230
public class UIKeyBinding : MonoBehaviour // TypeDefIndex: 12082
{
	// Fields
	public KeyCode keyCode; // 0x18
	public UIKeyBinding.Modifier modifier; // 0x1C
	public UIKeyBinding.Action action; // 0x20
	private bool mIgnoreUp; // 0x24
	private bool mIsInput; // 0x25
	private bool mPress; // 0x26

	// Methods

	// RVA: 0x1BCFF60 Offset: 0x1BCFF60 VA: 0x1BCFF60
	public void .ctor() { }

	// RVA: 0x1BCFF68 Offset: 0x1BCFF68 VA: 0x1BCFF68 Slot: 4
	protected virtual void Start() { }

	// RVA: 0x1BD008C Offset: 0x1BD008C VA: 0x1BD008C Slot: 5
	protected virtual void OnSubmit() { }

	// RVA: 0x1BD0120 Offset: 0x1BD0120 VA: 0x1BD0120 Slot: 6
	protected virtual bool IsModifierActive() { }

	// RVA: 0x1BD01B0 Offset: 0x1BD01B0 VA: 0x1BD01B0 Slot: 7
	protected virtual void Update() { }

	// RVA: 0x1BD0458 Offset: 0x1BD0458 VA: 0x1BD0458 Slot: 8
	protected virtual void OnBindingPress(bool pressed) { }

	// RVA: 0x1BD0510 Offset: 0x1BD0510 VA: 0x1BD0510 Slot: 9
	protected virtual void OnBindingClick() { }
}

// Namespace: 
public enum UIKeyBinding.Action // TypeDefIndex: 12083
{
	// Fields
	public int value__; // 0x0
	public const UIKeyBinding.Action PressAndClick = 0;
	public const UIKeyBinding.Action Select = 1;
	public const UIKeyBinding.Action All = 2;
}

// Namespace: 
public enum UIKeyBinding.Modifier // TypeDefIndex: 12084
{
	// Fields
	public int value__; // 0x0
	public const UIKeyBinding.Modifier None = 0;
	public const UIKeyBinding.Modifier Shift = 1;
	public const UIKeyBinding.Modifier Control = 2;
	public const UIKeyBinding.Modifier Alt = 3;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2C268 Offset: 0xC2C268 VA: 0xC2C268
public class UIKeyNavigation : MonoBehaviour // TypeDefIndex: 12085
{
	// Fields
	public static BetterList<UIKeyNavigation> list; // 0x0
	public UIKeyNavigation.Constraint constraint; // 0x18
	public GameObject onUp; // 0x20
	public GameObject onDown; // 0x28
	public GameObject onLeft; // 0x30
	public GameObject onRight; // 0x38
	public GameObject onClick; // 0x40
	public bool startsSelected; // 0x48

	// Methods

	// RVA: 0x1BD059C Offset: 0x1BD059C VA: 0x1BD059C
	public void .ctor() { }

	// RVA: 0x1BD05A4 Offset: 0x1BD05A4 VA: 0x1BD05A4 Slot: 4
	protected virtual void OnEnable() { }

	// RVA: 0x1BD0748 Offset: 0x1BD0748 VA: 0x1BD0748 Slot: 5
	protected virtual void OnDisable() { }

	// RVA: 0x1BD07D4 Offset: 0x1BD07D4 VA: 0x1BD07D4
	protected GameObject GetLeft() { }

	// RVA: 0x1BD0C6C Offset: 0x1BD0C6C VA: 0x1BD0C6C
	private GameObject GetRight() { }

	// RVA: 0x1BD0D38 Offset: 0x1BD0D38 VA: 0x1BD0D38
	protected GameObject GetUp() { }

	// RVA: 0x1BD0E04 Offset: 0x1BD0E04 VA: 0x1BD0E04
	protected GameObject GetDown() { }

	// RVA: 0x1BD08A0 Offset: 0x1BD08A0 VA: 0x1BD08A0
	protected GameObject Get(Vector3 myDir, bool horizontal) { }

	// RVA: 0x1BD0ED0 Offset: 0x1BD0ED0 VA: 0x1BD0ED0
	protected static Vector3 GetCenter(GameObject go) { }

	// RVA: 0x1BD127C Offset: 0x1BD127C VA: 0x1BD127C Slot: 6
	protected virtual void OnKey(KeyCode key) { }

	// RVA: 0x1BD154C Offset: 0x1BD154C VA: 0x1BD154C Slot: 7
	protected virtual void OnClick() { }

	// RVA: 0x1BD1620 Offset: 0x1BD1620 VA: 0x1BD1620
	private static void .cctor() { }
}

// Namespace: 
public enum UIKeyNavigation.Constraint // TypeDefIndex: 12086
{
	// Fields
	public int value__; // 0x0
	public const UIKeyNavigation.Constraint None = 0;
	public const UIKeyNavigation.Constraint Vertical = 1;
	public const UIKeyNavigation.Constraint Horizontal = 2;
	public const UIKeyNavigation.Constraint Explicit = 3;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2C2A0 Offset: 0xC2C2A0 VA: 0xC2C2A0
[AddComponentMenu] // RVA: 0xC2C2A0 Offset: 0xC2C2A0 VA: 0xC2C2A0
public class UIPlayAnimation : MonoBehaviour // TypeDefIndex: 12087
{
	// Fields
	public static UIPlayAnimation current; // 0x0
	public Animation target; // 0x18
	public Animator animator; // 0x20
	public string clipName; // 0x28
	public Trigger trigger; // 0x30
	public Direction playDirection; // 0x34
	public bool resetOnPlay; // 0x38
	public bool clearSelection; // 0x39
	public EnableCondition ifDisabledOnPlay; // 0x3C
	public DisableCondition disableWhenFinished; // 0x40
	public List<EventDelegate> onFinished; // 0x48
	[HideInInspector] // RVA: 0xC8471C Offset: 0xC8471C VA: 0xC8471C
	[SerializeField] // RVA: 0xC8471C Offset: 0xC8471C VA: 0xC8471C
	private GameObject eventReceiver; // 0x50
	[HideInInspector] // RVA: 0xC84754 Offset: 0xC84754 VA: 0xC84754
	[SerializeField] // RVA: 0xC84754 Offset: 0xC84754 VA: 0xC84754
	private string callWhenFinished; // 0x58
	private bool mStarted; // 0x60
	private bool mActivated; // 0x61
	private bool dragHighlight; // 0x62

	// Properties
	private bool dualState { get; }

	// Methods

	// RVA: 0x1C48B90 Offset: 0x1C48B90 VA: 0x1C48B90
	public void .ctor() { }

	// RVA: 0x1C48C08 Offset: 0x1C48C08 VA: 0x1C48C08
	private bool get_dualState() { }

	// RVA: 0x1C48C1C Offset: 0x1C48C1C VA: 0x1C48C1C
	private void Awake() { }

	// RVA: 0x1C48D34 Offset: 0x1C48D34 VA: 0x1C48D34
	private void Start() { }

	// RVA: 0x1C48F2C Offset: 0x1C48F2C VA: 0x1C48F2C
	private void OnEnable() { }

	// RVA: 0x1C49250 Offset: 0x1C49250 VA: 0x1C49250
	private void OnDisable() { }

	// RVA: 0x1C491E0 Offset: 0x1C491E0 VA: 0x1C491E0
	private void OnHover(bool isOver) { }

	// RVA: 0x1C49640 Offset: 0x1C49640 VA: 0x1C49640
	private void OnPress(bool isPressed) { }

	// RVA: 0x1C4971C Offset: 0x1C4971C VA: 0x1C4971C
	private void OnClick() { }

	// RVA: 0x1C497C0 Offset: 0x1C497C0 VA: 0x1C497C0
	private void OnDoubleClick() { }

	// RVA: 0x1C49868 Offset: 0x1C49868 VA: 0x1C49868
	private void OnSelect(bool isSelected) { }

	// RVA: 0x1C498DC Offset: 0x1C498DC VA: 0x1C498DC
	private void OnToggle() { }

	// RVA: 0x1C49A9C Offset: 0x1C49A9C VA: 0x1C49A9C
	private void OnDragOver() { }

	// RVA: 0x1C49BB8 Offset: 0x1C49BB8 VA: 0x1C49BB8
	private void OnDragOut() { }

	// RVA: 0x1C49CB0 Offset: 0x1C49CB0 VA: 0x1C49CB0
	private void OnDrop(GameObject go) { }

	// RVA: 0x1C49DB4 Offset: 0x1C49DB4 VA: 0x1C49DB4
	public void Play(bool forward) { }

	// RVA: 0x1C49360 Offset: 0x1C49360 VA: 0x1C49360
	public void Play(bool forward, bool onlyIfDifferent) { }

	// RVA: 0x1C49DC0 Offset: 0x1C49DC0 VA: 0x1C49DC0
	private void OnFinished() { }

	// RVA: 0x1C49F70 Offset: 0x1C49F70 VA: 0x1C49F70
	private static void .cctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2C2EC Offset: 0xC2C2EC VA: 0xC2C2EC
public class UIPlaySound : MonoBehaviour // TypeDefIndex: 12088
{
	// Fields
	public AudioClip audioClip; // 0x18
	public UIPlaySound.Trigger trigger; // 0x20
	[RangeAttribute] // RVA: 0xC8478C Offset: 0xC8478C VA: 0xC8478C
	public float volume; // 0x24
	[RangeAttribute] // RVA: 0xC847A4 Offset: 0xC847A4 VA: 0xC847A4
	public float pitch; // 0x28
	private bool mIsOver; // 0x2C

	// Properties
	private bool canPlay { get; }

	// Methods

	// RVA: 0x1C49F74 Offset: 0x1C49F74 VA: 0x1C49F74
	public void .ctor() { }

	// RVA: 0x1C49F84 Offset: 0x1C49F84 VA: 0x1C49F84
	private bool get_canPlay() { }

	// RVA: 0x1C4A054 Offset: 0x1C4A054 VA: 0x1C4A054
	private void OnEnable() { }

	// RVA: 0x1C4A0F0 Offset: 0x1C4A0F0 VA: 0x1C4A0F0
	private void OnDisable() { }

	// RVA: 0x1C4A18C Offset: 0x1C4A18C VA: 0x1C4A18C
	private void OnHover(bool isOver) { }

	// RVA: 0x1C4A278 Offset: 0x1C4A278 VA: 0x1C4A278
	private void OnPress(bool isPressed) { }

	// RVA: 0x1C4A364 Offset: 0x1C4A364 VA: 0x1C4A364
	private void OnClick() { }

	// RVA: 0x1C4A408 Offset: 0x1C4A408 VA: 0x1C4A408
	private void OnSelect(bool isSelected) { }

	// RVA: 0x1C4A4B0 Offset: 0x1C4A4B0 VA: 0x1C4A4B0
	public void Play() { }
}

// Namespace: 
public enum UIPlaySound.Trigger // TypeDefIndex: 12089
{
	// Fields
	public int value__; // 0x0
	public const UIPlaySound.Trigger OnClick = 0;
	public const UIPlaySound.Trigger OnMouseOver = 1;
	public const UIPlaySound.Trigger OnMouseOut = 2;
	public const UIPlaySound.Trigger OnPress = 3;
	public const UIPlaySound.Trigger OnRelease = 4;
	public const UIPlaySound.Trigger Custom = 5;
	public const UIPlaySound.Trigger OnEnable = 6;
	public const UIPlaySound.Trigger OnDisable = 7;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2C324 Offset: 0xC2C324 VA: 0xC2C324
[AddComponentMenu] // RVA: 0xC2C324 Offset: 0xC2C324 VA: 0xC2C324
public class UIPlayTween : MonoBehaviour // TypeDefIndex: 12090
{
	// Fields
	public static UIPlayTween current; // 0x0
	public GameObject tweenTarget; // 0x18
	public int tweenGroup; // 0x20
	public Trigger trigger; // 0x24
	public Direction playDirection; // 0x28
	public bool resetOnPlay; // 0x2C
	public bool resetIfDisabled; // 0x2D
	public EnableCondition ifDisabledOnPlay; // 0x30
	public DisableCondition disableWhenFinished; // 0x34
	public bool includeChildren; // 0x38
	public List<EventDelegate> onFinished; // 0x40
	[HideInInspector] // RVA: 0xC847BC Offset: 0xC847BC VA: 0xC847BC
	[SerializeField] // RVA: 0xC847BC Offset: 0xC847BC VA: 0xC847BC
	private GameObject eventReceiver; // 0x48
	[HideInInspector] // RVA: 0xC847F4 Offset: 0xC847F4 VA: 0xC847F4
	[SerializeField] // RVA: 0xC847F4 Offset: 0xC847F4 VA: 0xC847F4
	private string callWhenFinished; // 0x50
	private UITweener[] mTweens; // 0x58
	private bool mStarted; // 0x60
	private int mActive; // 0x64
	private bool mActivated; // 0x68

	// Methods

	// RVA: 0x1C4A890 Offset: 0x1C4A890 VA: 0x1C4A890
	public void .ctor() { }

	// RVA: 0x1C4A908 Offset: 0x1C4A908 VA: 0x1C4A908
	private void Awake() { }

	// RVA: 0x1C4A9C4 Offset: 0x1C4A9C4 VA: 0x1C4A9C4
	private void Start() { }

	// RVA: 0x1C4AA54 Offset: 0x1C4AA54 VA: 0x1C4AA54
	private void OnEnable() { }

	// RVA: 0x1C4AD84 Offset: 0x1C4AD84 VA: 0x1C4AD84
	private void OnDisable() { }

	// RVA: 0x1C4AE94 Offset: 0x1C4AE94 VA: 0x1C4AE94
	private void OnDragOver() { }

	// RVA: 0x1C4AD08 Offset: 0x1C4AD08 VA: 0x1C4AD08
	private void OnHover(bool isOver) { }

	// RVA: 0x1C4B2CC Offset: 0x1C4B2CC VA: 0x1C4B2CC
	private void OnDragOut() { }

	// RVA: 0x1C4B314 Offset: 0x1C4B314 VA: 0x1C4B314
	private void OnPress(bool isPressed) { }

	// RVA: 0x1C4B390 Offset: 0x1C4B390 VA: 0x1C4B390
	private void OnClick() { }

	// RVA: 0x1C4B3D4 Offset: 0x1C4B3D4 VA: 0x1C4B3D4
	private void OnDoubleClick() { }

	// RVA: 0x1C4B41C Offset: 0x1C4B41C VA: 0x1C4B41C
	private void OnSelect(bool isSelected) { }

	// RVA: 0x1C4B498 Offset: 0x1C4B498 VA: 0x1C4B498
	private void OnToggle() { }

	// RVA: 0x1C4B648 Offset: 0x1C4B648 VA: 0x1C4B648
	private void Update() { }

	// RVA: 0x1C4AEAC Offset: 0x1C4AEAC VA: 0x1C4AEAC
	public void Play(bool forward) { }

	// RVA: 0x1C4B788 Offset: 0x1C4B788 VA: 0x1C4B788
	private void OnFinished() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2C370 Offset: 0xC2C370 VA: 0xC2C370
[AddComponentMenu] // RVA: 0xC2C370 Offset: 0xC2C370 VA: 0xC2C370
public class UIPopupList : UIWidgetContainer // TypeDefIndex: 12091
{
	// Fields
	protected const int maxLineLabelNum = 20;
	public bool isAligument; // 0x18
	public static UIPopupList current; // 0x0
	private const float animSpeed = 0.15;
	public UIAtlas atlas; // 0x20
	public UIFont bitmapFont; // 0x28
	public Font trueTypeFont; // 0x30
	public int fontSize; // 0x38
	public FontStyle fontStyle; // 0x3C
	public string backgroundSprite; // 0x40
	public string highlightSprite; // 0x48
	public UIPopupList.Position position; // 0x50
	public NGUIText.Alignment alignment; // 0x54
	public List<string> items; // 0x58
	public List<object> itemData; // 0x60
	public Vector2 padding; // 0x68
	public Color textColor; // 0x70
	public Color backgroundColor; // 0x80
	public Color highlightColor; // 0x90
	public bool isAnimated; // 0xA0
	public bool isLocalized; // 0xA1
	public UIPopupList.OpenOn openOn; // 0xA4
	public List<EventDelegate> onChange; // 0xA8
	[HideInInspector] // RVA: 0xC8482C Offset: 0xC8482C VA: 0xC8482C
	[SerializeField] // RVA: 0xC8482C Offset: 0xC8482C VA: 0xC8482C
	private string mSelectedItem; // 0xB0
	[HideInInspector] // RVA: 0xC84864 Offset: 0xC84864 VA: 0xC84864
	[SerializeField] // RVA: 0xC84864 Offset: 0xC84864 VA: 0xC84864
	private UIPanel mPanel; // 0xB8
	[HideInInspector] // RVA: 0xC8489C Offset: 0xC8489C VA: 0xC8489C
	[SerializeField] // RVA: 0xC8489C Offset: 0xC8489C VA: 0xC8489C
	private GameObject mChild; // 0xC0
	[HideInInspector] // RVA: 0xC848D4 Offset: 0xC848D4 VA: 0xC848D4
	[SerializeField] // RVA: 0xC848D4 Offset: 0xC848D4 VA: 0xC848D4
	private UISprite mBackground; // 0xC8
	[HideInInspector] // RVA: 0xC8490C Offset: 0xC8490C VA: 0xC8490C
	[SerializeField] // RVA: 0xC8490C Offset: 0xC8490C VA: 0xC8490C
	private UISprite mHighlight; // 0xD0
	[HideInInspector] // RVA: 0xC84944 Offset: 0xC84944 VA: 0xC84944
	[SerializeField] // RVA: 0xC84944 Offset: 0xC84944 VA: 0xC84944
	private UILabel mHighlightedLabel; // 0xD8
	[HideInInspector] // RVA: 0xC8497C Offset: 0xC8497C VA: 0xC8497C
	[SerializeField] // RVA: 0xC8497C Offset: 0xC8497C VA: 0xC8497C
	private List<UILabel> mLabelList; // 0xE0
	[HideInInspector] // RVA: 0xC849B4 Offset: 0xC849B4 VA: 0xC849B4
	[SerializeField] // RVA: 0xC849B4 Offset: 0xC849B4 VA: 0xC849B4
	private float mBgBorder; // 0xE8
	private GameObject mSelection; // 0xF0
	[HideInInspector] // RVA: 0xC849EC Offset: 0xC849EC VA: 0xC849EC
	[SerializeField] // RVA: 0xC849EC Offset: 0xC849EC VA: 0xC849EC
	private GameObject eventReceiver; // 0xF8
	[HideInInspector] // RVA: 0xC84A24 Offset: 0xC84A24 VA: 0xC84A24
	[SerializeField] // RVA: 0xC84A24 Offset: 0xC84A24 VA: 0xC84A24
	private string functionName; // 0x100
	[HideInInspector] // RVA: 0xC84A5C Offset: 0xC84A5C VA: 0xC84A5C
	[SerializeField] // RVA: 0xC84A5C Offset: 0xC84A5C VA: 0xC84A5C
	private float textScale; // 0x108
	[HideInInspector] // RVA: 0xC84A94 Offset: 0xC84A94 VA: 0xC84A94
	[SerializeField] // RVA: 0xC84A94 Offset: 0xC84A94 VA: 0xC84A94
	private UIFont font; // 0x110
	[HideInInspector] // RVA: 0xC84ACC Offset: 0xC84ACC VA: 0xC84ACC
	[SerializeField] // RVA: 0xC84ACC Offset: 0xC84ACC VA: 0xC84ACC
	private UILabel textLabel; // 0x118
	private UIPopupList.LegacyEvent mLegacyEvent; // 0x120
	private bool mUseDynamicFont; // 0x128
	private bool mTweening; // 0x129

	// Properties
	public Object ambigiousFont { get; set; }
	[ObsoleteAttribute] // RVA: 0xCDEB60 Offset: 0xCDEB60 VA: 0xCDEB60
	public UIPopupList.LegacyEvent onSelectionChange { get; set; }
	public bool isOpen { get; }
	public string value { get; set; }
	public object data { get; }
	[ObsoleteAttribute] // RVA: 0xCDEB98 Offset: 0xCDEB98 VA: 0xCDEB98
	public string selection { get; set; }
	private bool handleEvents { get; set; }
	private bool isValid { get; }
	private int activeFontSize { get; }
	private float activeFontScale { get; }

	// Methods

	// RVA: 0x1C4B8FC Offset: 0x1C4B8FC VA: 0x1C4B8FC
	public void .ctor() { }

	// RVA: 0x1C4BAD0 Offset: 0x1C4BAD0 VA: 0x1C4BAD0
	public Object get_ambigiousFont() { }

	// RVA: 0x1C4BB94 Offset: 0x1C4BB94 VA: 0x1C4BB94
	public void set_ambigiousFont(Object value) { }

	// RVA: 0x1C4BC3C Offset: 0x1C4BC3C VA: 0x1C4BC3C
	public UIPopupList.LegacyEvent get_onSelectionChange() { }

	// RVA: 0x1C4BC44 Offset: 0x1C4BC44 VA: 0x1C4BC44
	public void set_onSelectionChange(UIPopupList.LegacyEvent value) { }

	// RVA: 0x1C4BC4C Offset: 0x1C4BC4C VA: 0x1C4BC4C
	public bool get_isOpen() { }

	// RVA: 0x1C4BCBC Offset: 0x1C4BCBC VA: 0x1C4BCBC
	public string get_value() { }

	// RVA: 0x1C4BCC4 Offset: 0x1C4BCC4 VA: 0x1C4BCC4
	public void set_value(string value) { }

	// RVA: 0x1C4BE8C Offset: 0x1C4BE8C VA: 0x1C4BE8C
	public object get_data() { }

	// RVA: 0x1C4BF6C Offset: 0x1C4BF6C VA: 0x1C4BF6C
	public string get_selection() { }

	// RVA: 0x1C4BF74 Offset: 0x1C4BF74 VA: 0x1C4BF74
	public void set_selection(string value) { }

	// RVA: 0x1C4BF84 Offset: 0x1C4BF84 VA: 0x1C4BF84
	private bool get_handleEvents() { }

	// RVA: 0x1C4C03C Offset: 0x1C4C03C VA: 0x1C4C03C
	private void set_handleEvents(bool value) { }

	// RVA: 0x1C4C104 Offset: 0x1C4C104 VA: 0x1C4C104
	private bool get_isValid() { }

	// RVA: 0x1C4C1C0 Offset: 0x1C4C1C0 VA: 0x1C4C1C0
	private int get_activeFontSize() { }

	// RVA: 0x1C4C29C Offset: 0x1C4C29C VA: 0x1C4C29C
	private float get_activeFontScale() { }

	// RVA: 0x1C4C388 Offset: 0x1C4C388 VA: 0x1C4C388
	public void Clear() { }

	// RVA: 0x1C4C40C Offset: 0x1C4C40C VA: 0x1C4C40C
	public void AddItem(string text) { }

	// RVA: 0x1C4C4A4 Offset: 0x1C4C4A4 VA: 0x1C4C4A4
	public void AddItem(string text, object data) { }

	// RVA: 0x1C4BCD4 Offset: 0x1C4BCD4 VA: 0x1C4BCD4
	protected void TriggerCallbacks() { }

	// RVA: 0x1C4C8E0 Offset: 0x1C4C8E0 VA: 0x1C4C8E0
	private void OnEnable() { }

	// RVA: 0x1C4CB90 Offset: 0x1C4CB90 VA: 0x1C4CB90
	private void OnValidate() { }

	// RVA: 0x1C4CD30 Offset: 0x1C4CD30 VA: 0x1C4CD30
	private void Start() { }

	// RVA: 0x1C4CED0 Offset: 0x1C4CED0 VA: 0x1C4CED0
	private void OnLocalize() { }

	// RVA: 0x1C4CEE0 Offset: 0x1C4CEE0 VA: 0x1C4CEE0
	private void Highlight(UILabel lbl, bool instant) { }

	// RVA: 0x1C4D094 Offset: 0x1C4D094 VA: 0x1C4D094
	private Vector3 GetHighlightPosition() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD67A0 Offset: 0xCD67A0 VA: 0xCD67A0
	// RVA: 0x1C4D284 Offset: 0x1C4D284 VA: 0x1C4D284
	private IEnumerator UpdateTweenPosition() { }

	// RVA: 0x1C4D2FC Offset: 0x1C4D2FC VA: 0x1C4D2FC
	private void OnItemHover(GameObject go, bool isOver) { }

	// RVA: 0x1C4D390 Offset: 0x1C4D390 VA: 0x1C4D390
	private void Select(UILabel lbl, bool instant) { }

	// RVA: 0x1C4D540 Offset: 0x1C4D540 VA: 0x1C4D540
	private void OnItemPress(GameObject go, bool isPressed) { }

	// RVA: 0x1C4D5D4 Offset: 0x1C4D5D4 VA: 0x1C4D5D4
	private void OnItemClick(GameObject go) { }

	// RVA: 0x1C4D8B8 Offset: 0x1C4D8B8 VA: 0x1C4D8B8
	private void OnKey(KeyCode key) { }

	// RVA: 0x1C4DA48 Offset: 0x1C4DA48 VA: 0x1C4DA48
	private void OnDisable() { }

	// RVA: 0x1C4DA3C Offset: 0x1C4DA3C VA: 0x1C4DA3C
	private void OnSelect(bool isSelected) { }

	// RVA: 0x1C4D5D8 Offset: 0x1C4D5D8 VA: 0x1C4D5D8
	public void Close() { }

	// RVA: 0x1C4DA4C Offset: 0x1C4DA4C VA: 0x1C4DA4C
	private void AnimateColor(UIWidget widget) { }

	// RVA: 0x1C4DB28 Offset: 0x1C4DB28 VA: 0x1C4DB28
	private void AnimatePosition(UIWidget widget, bool placeAbove, float bottom) { }

	// RVA: 0x1C4DC70 Offset: 0x1C4DC70 VA: 0x1C4DC70
	private void AnimateScale(UIWidget widget, bool placeAbove, float bottom) { }

	// RVA: 0x1C4DED4 Offset: 0x1C4DED4 VA: 0x1C4DED4
	private void Animate(UIWidget widget, bool placeAbove, float bottom) { }

	// RVA: 0x1C4DF10 Offset: 0x1C4DF10 VA: 0x1C4DF10
	private void OnClick() { }

	// RVA: 0x1C4F988 Offset: 0x1C4F988 VA: 0x1C4F988
	private void OnDoubleClick() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD67B0 Offset: 0xCD67B0 VA: 0xCD67B0
	// RVA: 0x1C4F99C Offset: 0x1C4F99C VA: 0x1C4F99C
	private IEnumerator CloseIfUnselected() { }

	// RVA: 0x1C4DFAC Offset: 0x1C4DFAC VA: 0x1C4DFAC
	public void Show() { }
}

// Namespace: 
public enum UIPopupList.Position // TypeDefIndex: 12092
{
	// Fields
	public int value__; // 0x0
	public const UIPopupList.Position Auto = 0;
	public const UIPopupList.Position Above = 1;
	public const UIPopupList.Position Below = 2;
}

// Namespace: 
public enum UIPopupList.OpenOn // TypeDefIndex: 12093
{
	// Fields
	public int value__; // 0x0
	public const UIPopupList.OpenOn ClickOrTap = 0;
	public const UIPopupList.OpenOn RightClick = 1;
	public const UIPopupList.OpenOn DoubleClick = 2;
	public const UIPopupList.OpenOn Manual = 3;
}

// Namespace: 
public sealed class UIPopupList.LegacyEvent : MulticastDelegate // TypeDefIndex: 12094
{
	// Methods

	// RVA: 0x1C4FE8C Offset: 0x1C4FE8C VA: 0x1C4FE8C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1C4C540 Offset: 0x1C4C540 VA: 0x1C4C540 Slot: 11
	public virtual void Invoke(string val) { }

	// RVA: 0x1C4FE9C Offset: 0x1C4FE9C VA: 0x1C4FE9C Slot: 12
	public virtual IAsyncResult BeginInvoke(string val, AsyncCallback callback, object object) { }

	// RVA: 0x1C4FEC0 Offset: 0x1C4FEC0 VA: 0x1C4FEC0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46E64 Offset: 0xC46E64 VA: 0xC46E64
private sealed class UIPopupList.<UpdateTweenPosition>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 12095
{
	// Fields
	internal TweenPosition <tp>__1; // 0x10
	internal UIPopupList $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDE0D0 Offset: 0xCDE0D0 VA: 0xCDE0D0
	// RVA: 0x1C4D2F4 Offset: 0x1C4D2F4 VA: 0x1C4D2F4
	public void .ctor() { }

	// RVA: 0x1C4FBD4 Offset: 0x1C4FBD4 VA: 0x1C4FBD4 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDE0E0 Offset: 0xCDE0E0 VA: 0xCDE0E0
	// RVA: 0x1C4FE00 Offset: 0x1C4FE00 VA: 0x1C4FE00 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDE0F0 Offset: 0xCDE0F0 VA: 0xCDE0F0
	// RVA: 0x1C4FE08 Offset: 0x1C4FE08 VA: 0x1C4FE08 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDE100 Offset: 0xCDE100 VA: 0xCDE100
	// RVA: 0x1C4FE10 Offset: 0x1C4FE10 VA: 0x1C4FE10 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDE110 Offset: 0xCDE110 VA: 0xCDE110
	// RVA: 0x1C4FE24 Offset: 0x1C4FE24 VA: 0x1C4FE24 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46E74 Offset: 0xC46E74 VA: 0xC46E74
private sealed class UIPopupList.<CloseIfUnselected>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 12096
{
	// Fields
	internal UIPopupList $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDE120 Offset: 0xCDE120 VA: 0xCDE120
	// RVA: 0x1C4FA0C Offset: 0x1C4FA0C VA: 0x1C4FA0C
	public void .ctor() { }

	// RVA: 0x1C4FA14 Offset: 0x1C4FA14 VA: 0x1C4FA14 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDE130 Offset: 0xCDE130 VA: 0xCDE130
	// RVA: 0x1C4FB48 Offset: 0x1C4FB48 VA: 0x1C4FB48 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDE140 Offset: 0xCDE140 VA: 0xCDE140
	// RVA: 0x1C4FB50 Offset: 0x1C4FB50 VA: 0x1C4FB50 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDE150 Offset: 0xCDE150 VA: 0xCDE150
	// RVA: 0x1C4FB58 Offset: 0x1C4FB58 VA: 0x1C4FB58 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDE160 Offset: 0xCDE160 VA: 0xCDE160
	// RVA: 0x1C4FB6C Offset: 0x1C4FB6C VA: 0x1C4FB6C Slot: 6
	public void Reset() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2C3BC Offset: 0xC2C3BC VA: 0xC2C3BC
[AddComponentMenu] // RVA: 0xC2C3BC Offset: 0xC2C3BC VA: 0xC2C3BC
public class UIProgressBar : UIWidgetContainer // TypeDefIndex: 12097
{
	// Fields
	public static UIProgressBar current; // 0x0
	public UIProgressBar.OnDragFinished onDragFinished; // 0x18
	public Transform thumb; // 0x20
	[HideInInspector] // RVA: 0xC84B04 Offset: 0xC84B04 VA: 0xC84B04
	[SerializeField] // RVA: 0xC84B04 Offset: 0xC84B04 VA: 0xC84B04
	protected UIWidget mBG; // 0x28
	[HideInInspector] // RVA: 0xC84B3C Offset: 0xC84B3C VA: 0xC84B3C
	[SerializeField] // RVA: 0xC84B3C Offset: 0xC84B3C VA: 0xC84B3C
	protected UIWidget mFG; // 0x30
	[HideInInspector] // RVA: 0xC84B74 Offset: 0xC84B74 VA: 0xC84B74
	[SerializeField] // RVA: 0xC84B74 Offset: 0xC84B74 VA: 0xC84B74
	protected float mValue; // 0x38
	[HideInInspector] // RVA: 0xC84BAC Offset: 0xC84BAC VA: 0xC84BAC
	[SerializeField] // RVA: 0xC84BAC Offset: 0xC84BAC VA: 0xC84BAC
	protected UIProgressBar.FillDirection mFill; // 0x3C
	protected Transform mTrans; // 0x40
	protected bool mIsDirty; // 0x48
	protected Camera mCam; // 0x50
	protected float mOffset; // 0x58
	public int numberOfSteps; // 0x5C
	public List<EventDelegate> onChange; // 0x60

	// Properties
	public Transform cachedTransform { get; }
	public Camera cachedCamera { get; }
	public UIWidget foregroundWidget { get; set; }
	public UIWidget backgroundWidget { get; set; }
	public UIProgressBar.FillDirection fillDirection { get; set; }
	public float value { get; set; }
	public float alpha { get; set; }
	protected bool isHorizontal { get; }
	protected bool isInverted { get; }

	// Methods

	// RVA: 0x1C4FECC Offset: 0x1C4FECC VA: 0x1C4FECC
	public void .ctor() { }

	// RVA: 0x1C4FF44 Offset: 0x1C4FF44 VA: 0x1C4FF44
	public Transform get_cachedTransform() { }

	// RVA: 0x1C4FFD4 Offset: 0x1C4FFD4 VA: 0x1C4FFD4
	public Camera get_cachedCamera() { }

	// RVA: 0x1C500B0 Offset: 0x1C500B0 VA: 0x1C500B0
	public UIWidget get_foregroundWidget() { }

	// RVA: 0x1C500B8 Offset: 0x1C500B8 VA: 0x1C500B8
	public void set_foregroundWidget(UIWidget value) { }

	// RVA: 0x1C50148 Offset: 0x1C50148 VA: 0x1C50148
	public UIWidget get_backgroundWidget() { }

	// RVA: 0x1C50150 Offset: 0x1C50150 VA: 0x1C50150
	public void set_backgroundWidget(UIWidget value) { }

	// RVA: 0x1C501E0 Offset: 0x1C501E0 VA: 0x1C501E0
	public UIProgressBar.FillDirection get_fillDirection() { }

	// RVA: 0x1C501E8 Offset: 0x1C501E8 VA: 0x1C501E8
	public void set_fillDirection(UIProgressBar.FillDirection value) { }

	// RVA: 0x1C50208 Offset: 0x1C50208 VA: 0x1C50208
	public float get_value() { }

	// RVA: 0x1C50314 Offset: 0x1C50314 VA: 0x1C50314
	public void set_value(float value) { }

	// RVA: 0x1C504C0 Offset: 0x1C504C0 VA: 0x1C504C0
	public float get_alpha() { }

	// RVA: 0x1C505A8 Offset: 0x1C505A8 VA: 0x1C505A8
	public void set_alpha(float value) { }

	// RVA: 0x1C50C08 Offset: 0x1C50C08 VA: 0x1C50C08
	protected bool get_isHorizontal() { }

	// RVA: 0x1C50C18 Offset: 0x1C50C18 VA: 0x1C50C18
	protected bool get_isInverted() { }

	// RVA: 0x1C50C2C Offset: 0x1C50C2C VA: 0x1C50C2C
	protected void Start() { }

	// RVA: 0x1C50D8C Offset: 0x1C50D8C VA: 0x1C50D8C Slot: 4
	protected virtual void Upgrade() { }

	// RVA: 0x1C50D90 Offset: 0x1C50D90 VA: 0x1C50D90 Slot: 5
	protected virtual void OnStart() { }

	// RVA: 0x1C50D94 Offset: 0x1C50D94 VA: 0x1C50D94
	protected void Update() { }

	// RVA: 0x1C50DAC Offset: 0x1C50DAC VA: 0x1C50DAC
	protected void OnValidate() { }

	// RVA: 0x1C50F18 Offset: 0x1C50F18 VA: 0x1C50F18
	protected float ScreenToValue(Vector2 screenPos) { }

	// RVA: 0x1C511D0 Offset: 0x1C511D0 VA: 0x1C511D0 Slot: 6
	protected virtual float LocalToValue(Vector2 localPos) { }

	// RVA: 0x1C513C0 Offset: 0x1C513C0 VA: 0x1C513C0 Slot: 7
	public virtual void ForceUpdate() { }

	// RVA: 0x1C51CE8 Offset: 0x1C51CE8 VA: 0x1C51CE8
	protected void SetThumbPosition(Vector3 worldPos) { }
}

// Namespace: 
public enum UIProgressBar.FillDirection // TypeDefIndex: 12098
