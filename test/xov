
	// RVA: 0x1BEF6E4 Offset: 0x1BEF6E4 VA: 0x1BEF6E4
	public int getCombineQpSvtEq() { }

	// RVA: 0x1BEF868 Offset: 0x1BEF868 VA: 0x1BEF868
	public ServantSkillEntity[] getUseSvtEqSkillInfo(int targetLv, int targetLimitCnt) { }

	// RVA: 0x1BEFB74 Offset: 0x1BEFB74 VA: 0x1BEFB74
	public bool GetAdjustMax(out int maxAjustHp, out int maxAjustAtk, out int secondMaxAdjustHp, out int secondMaxAdjustAtk) { }

	// RVA: 0x1BEFE40 Offset: 0x1BEFE40 VA: 0x1BEFE40
	public int getAdjustHp() { }

	// RVA: 0x1BEFE48 Offset: 0x1BEFE48 VA: 0x1BEFE48
	public bool isAdjustHpMax() { }

	// RVA: 0x1BEFF14 Offset: 0x1BEFF14 VA: 0x1BEFF14
	public bool isSecondAdjustHpMax() { }

	// RVA: 0x1BEFFE0 Offset: 0x1BEFFE0 VA: 0x1BEFFE0
	public int getAdjustAtk() { }

	// RVA: 0x1BEFFE8 Offset: 0x1BEFFE8 VA: 0x1BEFFE8
	public bool isAdjustAtkMax() { }

	// RVA: 0x1BF00B4 Offset: 0x1BF00B4 VA: 0x1BF00B4
	public bool isSecondAdjustAtkMax() { }

	// RVA: 0x1BF0180 Offset: 0x1BF0180 VA: 0x1BF0180
	public void getAdjustMaxData(out int hpData, out int atkData) { }

	// RVA: 0x1BEFD38 Offset: 0x1BEFD38 VA: 0x1BEFD38
	public int getRarity() { }

	// RVA: 0x1BF0344 Offset: 0x1BF0344 VA: 0x1BF0344
	public bool IsCombineExp() { }

	// RVA: 0x1BF0438 Offset: 0x1BF0438 VA: 0x1BF0438
	public bool IsStatusUp() { }

	// RVA: 0x1BF052C Offset: 0x1BF052C VA: 0x1BF052C
	public int getCost() { }

	// RVA: 0x1BE97B0 Offset: 0x1BE97B0 VA: 0x1BE97B0
	public int getDispLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x1BF061C Offset: 0x1BF061C VA: 0x1BF061C
	public int getMaxDispLimitCount() { }

	// RVA: 0x1BF06E0 Offset: 0x1BF06E0 VA: 0x1BF06E0
	public bool IsModifyDispLimitCount(int dispLimitCount, bool ignoreRandomSettings = False) { }

	// RVA: 0x1BF070C Offset: 0x1BF070C VA: 0x1BF070C
	public int getDispSelectLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x1BF080C Offset: 0x1BF080C VA: 0x1BF080C
	public int getCommandCardLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x1BF0854 Offset: 0x1BF0854 VA: 0x1BF0854
	public int getMaxCommandCardLimitCount() { }

	// RVA: 0x1BF0918 Offset: 0x1BF0918 VA: 0x1BF0918
	public bool IsModifyCommandCardLimitCount(int commandCardLimitCount, bool ignoreRandomSettings = False) { }

	// RVA: 0x1BF0944 Offset: 0x1BF0944 VA: 0x1BF0944
	public int getCardImageLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x1BF0A44 Offset: 0x1BF0A44 VA: 0x1BF0A44
	public int getMaxCardImageLimitCount() { }

	// RVA: 0x1BF0B10 Offset: 0x1BF0B10 VA: 0x1BF0B10
	public int getFigureImageLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x1BF0C14 Offset: 0x1BF0C14 VA: 0x1BF0C14
	public int getCombineVoiceLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x1BF0C60 Offset: 0x1BF0C60 VA: 0x1BF0C60
	public int getFigureLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x1BF0D78 Offset: 0x1BF0D78 VA: 0x1BF0D78
	public int getIconLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x1BF0E8C Offset: 0x1BF0E8C VA: 0x1BF0E8C
	public int getFriendIconLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x1BF0DC0 Offset: 0x1BF0DC0 VA: 0x1BF0DC0
	public int getMaxIconLimitCount() { }

	// RVA: 0x1BF0ED4 Offset: 0x1BF0ED4 VA: 0x1BF0ED4
	public int getMaxFriendIconLimitCount() { }

	// RVA: 0x1BF0FA0 Offset: 0x1BF0FA0 VA: 0x1BF0FA0
	public bool IsModifyIconLimitCount(int iconLimitCount, bool ignoreRandomSettings = False) { }

	// RVA: 0x1BF0FCC Offset: 0x1BF0FCC VA: 0x1BF0FCC
	public int getPortraitLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x1BF1014 Offset: 0x1BF1014 VA: 0x1BF1014
	public int getMaxPortraitLimitCount() { }

	// RVA: 0x1BF10D8 Offset: 0x1BF10D8 VA: 0x1BF10D8
	public bool IsModifyPortraitLimitCount(int portraitLimitCount, bool ignoreRandomSettings = False) { }

	// RVA: 0x1BF1104 Offset: 0x1BF1104 VA: 0x1BF1104
	public int checkTreasureDeviceLevelUp(int targetLv) { }

	// RVA: 0x1BF1148 Offset: 0x1BF1148 VA: 0x1BF1148
	public bool IsExceedMaxLv(int targetLv) { }

	// RVA: 0x1BF118C Offset: 0x1BF118C VA: 0x1BF118C
	public void getStatusUpInfo(out int hpUp, out int atkUp) { }

	// RVA: 0x1BF12C4 Offset: 0x1BF12C4 VA: 0x1BF12C4
	public int getExceedLvMax(int cnt) { }

	// RVA: 0x1BF1458 Offset: 0x1BF1458 VA: 0x1BF1458
	public bool isExceedLvMax() { }

	// RVA: 0x1BF1510 Offset: 0x1BF1510 VA: 0x1BF1510
	public bool isExceedFriendshipMax() { }

	// RVA: 0x1BF17B4 Offset: 0x1BF17B4 VA: 0x1BF17B4
	public int getCombineQpSvtExceed() { }

	// RVA: 0x1BF17E0 Offset: 0x1BF17E0 VA: 0x1BF17E0
	public ServantExceedEntity getSvtExceedEnt() { }

	// RVA: 0x1BF1894 Offset: 0x1BF1894 VA: 0x1BF1894
	public int getFrameType() { }

	// RVA: 0x1BF19FC Offset: 0x1BF19FC VA: 0x1BF19FC
	public int getRarityIcon() { }

	// RVA: 0x1BF1B20 Offset: 0x1BF1B20 VA: 0x1BF1B20
	public bool isExceeded() { }

	// RVA: 0x1BF1B30 Offset: 0x1BF1B30 VA: 0x1BF1B30
	public string getFrameCardPrefix() { }

	// RVA: 0x1BF1CA8 Offset: 0x1BF1CA8 VA: 0x1BF1CA8
	public int getAddTotalExp(int materialId) { }

	// RVA: 0x1BF1D64 Offset: 0x1BF1D64 VA: 0x1BF1D64
	public int[] getCommandCodeIdList() { }

	// RVA: 0x1BF1E8C Offset: 0x1BF1E8C VA: 0x1BF1E8C
	public UserCommandCodeEntity getUserCommandCodeEntity(int index) { }

	// RVA: 0x1BF205C Offset: 0x1BF205C VA: 0x1BF205C
	public UserServantCommandCardEntity GetUserCommandCardEntity() { }

	// RVA: 0x1BF21FC Offset: 0x1BF21FC VA: 0x1BF21FC
	public int[] GetCommandCardParam() { }

	// RVA: 0x1BF2218 Offset: 0x1BF2218 VA: 0x1BF2218
	public bool IsModifyBattleVoice(int battleVoice) { }

	// RVA: 0x1BF22A0 Offset: 0x1BF22A0 VA: 0x1BF22A0
	public int[] GetEquipCategoryIdList() { }

	// RVA: 0x1BF29D8 Offset: 0x1BF29D8 VA: 0x1BF29D8
	public bool IsFriendShipSvtEquip() { }

	// RVA: 0x1BF2AC4 Offset: 0x1BF2AC4 VA: 0x1BF2AC4
	public bool IsIgnoreCombineLimitSpecial() { }

	// RVA: 0x1BF2BB0 Offset: 0x1BF2BB0 VA: 0x1BF2BB0
	public bool IsChocolateSvtEquip() { }

	// RVA: 0x1BE8FE8 Offset: 0x1BE8FE8 VA: 0x1BE8FE8
	public bool IsEnableOwnRandomLimitCount() { }

	// RVA: 0x1BF2C9C Offset: 0x1BF2C9C VA: 0x1BF2C9C
	public bool IsEnableSupportRandomLimitCount() { }

	// RVA: 0x1BF2D18 Offset: 0x1BF2D18 VA: 0x1BF2D18
	public bool IsSetRandomLimitCountValue() { }

	// RVA: 0x1BF2D94 Offset: 0x1BF2D94 VA: 0x1BF2D94
	public bool IsModifyRandomLimitCountSetting(bool ownSetting, bool friendFollowSetting) { }

	// RVA: 0x1BF2DE4 Offset: 0x1BF2DE4 VA: 0x1BF2DE4
	public int[] GetRandomLimitCountList(int[] costumeIds) { }

	// RVA: 0x1BF2FC8 Offset: 0x1BF2FC8 VA: 0x1BF2FC8
	public bool IsExchangeSvt() { }

	// RVA: 0x1BF3214 Offset: 0x1BF3214 VA: 0x1BF3214
	public void GetAppendPassiveSkillInfo(out int[] idList, out string[] titleList, out string[] explanationList, out bool[] releaseStateList, out int[] lvList) { }

	// RVA: 0x1BF33A0 Offset: 0x1BF33A0 VA: 0x1BF33A0
	public void GetAppendPassiveSkillInfo(out SkillInfo[] skillInfoList) { }

	// RVA: 0x1BF35A0 Offset: 0x1BF35A0 VA: 0x1BF35A0
	public bool IsMaterialTd() { }

	// RVA: 0x1BF3690 Offset: 0x1BF3690 VA: 0x1BF3690
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCAA78 Offset: 0xCCAA78 VA: 0xCCAA78
	// RVA: 0x1BF3694 Offset: 0x1BF3694 VA: 0x1BF3694
	private static int <getBaseFriendPointUpVal>m__0(ServantSkillEntity a, ServantSkillEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCAA88 Offset: 0xCCAA88 VA: 0xCCAA88
	// RVA: 0x1BF36D8 Offset: 0x1BF36D8 VA: 0x1BF36D8
	private static int <getBaseFriendPointUpType>m__1(ServantSkillEntity a, ServantSkillEntity b) { }
}

// Namespace: 
public enum UserServantEntity.StatusKind // TypeDefIndex: 7503
{
	// Fields
	public int value__; // 0x0
	public const UserServantEntity.StatusKind LOCK = 0;
	public const UserServantEntity.StatusKind EVENT_JOIN = 1;
	public const UserServantEntity.StatusKind WITHDRAWAL = 2;
	public const UserServantEntity.StatusKind APRIL_FOOL_CANCEL = 3;
	public const UserServantEntity.StatusKind CHOICE = 4;
	public const UserServantEntity.StatusKind NO_PERIOD = 5;
	public const UserServantEntity.StatusKind COND_JOIN = 6;
	public const UserServantEntity.StatusKind ADD_FRIENDSHIP_HEROINE = 7;
}

// Namespace: 
public enum UserServantEntity.StatusFlag // TypeDefIndex: 7504
{
	// Fields
	public int value__; // 0x0
	public const UserServantEntity.StatusFlag LOCK = 1;
	public const UserServantEntity.StatusFlag EVENT_JOIN = 2;
	public const UserServantEntity.StatusFlag WITHDRAWAL = 4;
	public const UserServantEntity.StatusFlag APRIL_FOOL_CANCEL = 8;
	public const UserServantEntity.StatusFlag CHOICE = 16;
	public const UserServantEntity.StatusFlag NO_PERIOD = 32;
	public const UserServantEntity.StatusFlag COND_JOIN = 64;
	public const UserServantEntity.StatusFlag ADD_FRIENDSHIP_HEROINE = 128;
}

// Namespace: 
private enum UserServantEntity.RandomLimitCountKind // TypeDefIndex: 7505
{
	// Fields
	public int value__; // 0x0
	public const UserServantEntity.RandomLimitCountKind IMAGE_LIMIT_COUNT = 0;
	public const UserServantEntity.RandomLimitCountKind DISP_LIMIT_COUNT = 1;
	public const UserServantEntity.RandomLimitCountKind COMMANDCARD_LIMIT_COUNT = 2;
	public const UserServantEntity.RandomLimitCountKind ICON_LIMIT_COUNT = 3;
	public const UserServantEntity.RandomLimitCountKind PORTRAIT_LIMIT_COUNT = 4;
}

// Namespace: 
public class UserServantLeaderEntity : DataEntityBase<string> // TypeDefIndex: 7506
{
	// Fields
	protected UserServantEntity userServantEntity; // 0x10
	protected ServantLeaderInfo servantLeaderInfo; // 0x18
	public EquipTargetInfo equipTarget1; // 0x20
	public long userId; // 0x28
	public int supportDeckId; // 0x30
	public int classId; // 0x34
	public long userSvtId; // 0x38
	public int svtId; // 0x40

	// Methods

	// RVA: 0x1BF371C Offset: 0x1BF371C VA: 0x1BF371C
	public void .ctor() { }

	// RVA: 0x1BF378C Offset: 0x1BF378C VA: 0x1BF378C
	public void .ctor(int classPos, int supportDeckId) { }

	// RVA: 0x1BF380C Offset: 0x1BF380C VA: 0x1BF380C
	public void .ctor(UserServantLeaderEntity src) { }

	// RVA: 0x1BF39A4 Offset: 0x1BF39A4 VA: 0x1BF39A4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1BF39B8 Offset: 0x1BF39B8 VA: 0x1BF39B8
	public static string CreatePK(long userId, int classId, int supportDeckId) { }

	// RVA: 0x1BF39C8 Offset: 0x1BF39C8 VA: 0x1BF39C8
	public long getEquipUserSvtId() { }

	// RVA: 0x1BF3934 Offset: 0x1BF3934 VA: 0x1BF3934
	public void setEquipTargetInfo(EquipTargetInfo equipTargetInfo) { }

	// RVA: 0x1BF3A64 Offset: 0x1BF3A64 VA: 0x1BF3A64
	public void setUserServantEntity(UserServantEntity entity, int classPos, int supportDeckId) { }

	// RVA: 0x1BF3B7C Offset: 0x1BF3B7C VA: 0x1BF3B7C
	public void setUserServantEntity(ServantLeaderInfo info) { }

	// RVA: 0x1BF3C8C Offset: 0x1BF3C8C VA: 0x1BF3C8C
	public ServantLeaderInfo getServantLeaderInfo() { }

	// RVA: 0x1BF3C94 Offset: 0x1BF3C94 VA: 0x1BF3C94
	public UserServantEntity GetUserServantEntity() { }
}

// Namespace: 
public class UserServantLeaderMaster : DataMasterBase<UserServantLeaderMaster, UserServantLeaderEntity, string> // TypeDefIndex: 7507
{
	// Methods

	// RVA: 0x1BF3C9C Offset: 0x1BF3C9C VA: 0x1BF3C9C
	public void .ctor() { }

	// RVA: 0x1BF3CF0 Offset: 0x1BF3CF0 VA: 0x1BF3CF0
	public UserServantLeaderEntity GetEntity(long userId, int classId, int supportDeckId) { }

	// RVA: 0x1BF3D74 Offset: 0x1BF3D74 VA: 0x1BF3D74
	public bool TryGetEntity(out UserServantLeaderEntity entity, long userId, int classId, int supportDeckId) { }

	// RVA: 0x1BF3E00 Offset: 0x1BF3E00 VA: 0x1BF3E00
	public UserServantLeaderEntity getEntityFromId(int classId) { }

	// RVA: 0x1BF3F00 Offset: 0x1BF3F00 VA: 0x1BF3F00
	public UserServantLeaderEntity[] getSupportDeck(int supportDeckId) { }

	// RVA: 0x1BF4414 Offset: 0x1BF4414 VA: 0x1BF4414
	public UserServantLeaderEntity[] getAllSupportDeckList() { }
}

// Namespace: 
public class UserServantMaster : DataMasterBase<UserServantMaster, UserServantEntity, long> // TypeDefIndex: 7508
{
	// Methods

	// RVA: 0x1BF4FBC Offset: 0x1BF4FBC VA: 0x1BF4FBC
	public void .ctor() { }

	// RVA: 0x1BF4E48 Offset: 0x1BF4E48 VA: 0x1BF4E48
	public UserServantEntity getEntityFromId(long userSvtId) { }

	// RVA: 0x1BF5010 Offset: 0x1BF5010 VA: 0x1BF5010
	public bool TryGetEntityFromSvtId(out UserServantEntity svtEnt, long svtId) { }

	// RVA: 0x1BF5168 Offset: 0x1BF5168 VA: 0x1BF5168
	public int getCount(out int servantSum, out int servantEquipSum, bool friendShipSvtEqExclude = False) { }

	// RVA: 0x1BF541C Offset: 0x1BF541C VA: 0x1BF541C
	public int getCountWithoutMaterial(out int servantSum, out int servantEquipSum) { }

	// RVA: 0x1BF50F8 Offset: 0x1BF50F8 VA: 0x1BF50F8
	public UserServantEntity[] getList() { }

	// RVA: 0x1BF56B0 Offset: 0x1BF56B0 VA: 0x1BF56B0
	public UserServantEntity[] getList(long userId) { }

	// RVA: 0x1BF5880 Offset: 0x1BF5880 VA: 0x1BF5880
	public List<UserServantEntity> getServantList() { }

	// RVA: 0x1BF5BE8 Offset: 0x1BF5BE8 VA: 0x1BF5BE8
	public List<UserServantEntity> getServantListByClassIdList(List<int> classIdList) { }

	// RVA: 0x1BF5F90 Offset: 0x1BF5F90 VA: 0x1BF5F90
	public UserServantEntity[] getKeepServantList() { }

	// RVA: 0x1BF6254 Offset: 0x1BF6254 VA: 0x1BF6254
	public UserServantEntity[] getOrganizationList() { }

	// RVA: 0x1BF6518 Offset: 0x1BF6518 VA: 0x1BF6518
	public UserServantEntity[] getKeepServantEquipList() { }

	// RVA: 0x1BF67DC Offset: 0x1BF67DC VA: 0x1BF67DC
	public UserServantEntity[] getServantEquipList() { }

	// RVA: 0x1BF6AA0 Offset: 0x1BF6AA0 VA: 0x1BF6AA0
	public int getSameSvtNpLvCache(UserServantEntity usrSvtEnt, ref Dictionary<int, List<int>> cachedUserServantNpLvDict) { }

	// RVA: 0x1BF7084 Offset: 0x1BF7084 VA: 0x1BF7084
	public UserServantEntity[] getNpUpServantList(UserServantEntity usrSvtEnt) { }

	// RVA: 0x1BF7498 Offset: 0x1BF7498 VA: 0x1BF7498
	public bool IsServantHaving(int svtId, bool checkPresentBox = True) { }

	// RVA: 0x1BF74B8 Offset: 0x1BF74B8 VA: 0x1BF74B8
	public int GetServantHavingCount(int servantId, bool isCheckPresentBox = True) { }

	// RVA: 0x1BF77B0 Offset: 0x1BF77B0 VA: 0x1BF77B0
	public int GetServantHavingTdLvCount(int servantId) { }

	// RVA: 0x1BF7984 Offset: 0x1BF7984 VA: 0x1BF7984
	public UserServantEntity getHeroineData(int heroineId) { }

	// RVA: 0x1BF7ADC Offset: 0x1BF7ADC VA: 0x1BF7ADC
	public UserServantEntity[] getNoneCombineSvt(long userId) { }

	// RVA: 0x1BF7D70 Offset: 0x1BF7D70 VA: 0x1BF7D70
	public void continueDeviceUserServant() { }

	// RVA: 0x1BF7FDC Offset: 0x1BF7FDC VA: 0x1BF7FDC
	public UserServantEntity[] getCombineMaterialList() { }

	// RVA: 0x1BF82B4 Offset: 0x1BF82B4 VA: 0x1BF82B4
	public bool CheckServantAdd(int count) { }

	// RVA: 0x1BF8318 Offset: 0x1BF8318 VA: 0x1BF8318
	public bool CheckEquipAdd(int count, bool friendShipSvtEqExclude = False) { }

	// RVA: 0x1BF837C Offset: 0x1BF837C VA: 0x1BF837C
	public bool CheckServantAndEquipAdd(int servantCount, int equipCount) { }

	// RVA: 0x1BF7690 Offset: 0x1BF7690 VA: 0x1BF7690
	public UserServantEntity[] getAllList() { }

	// RVA: 0x1BF83C0 Offset: 0x1BF83C0 VA: 0x1BF83C0
	public List<long> getSvtAllUserIdList(int svtId) { }

	// RVA: 0x1BF8694 Offset: 0x1BF8694 VA: 0x1BF8694
	public UserServantEntity CostumeTargetEntity(int svtId, bool checkStorage = True) { }

	// RVA: 0x1BF8A80 Offset: 0x1BF8A80 VA: 0x1BF8A80
	public UserServantEntity[] GetCombineMaterialList() { }

	// RVA: 0x1BF8D54 Offset: 0x1BF8D54 VA: 0x1BF8D54
	public int GetHaveServantSkillLevelMax(int svtId, int skillIdx) { }

	// RVA: 0x1BF8F00 Offset: 0x1BF8F00 VA: 0x1BF8F00
	public UserServantEntity getSvtIdBattle(int svtId) { }

	// RVA: 0x1BF9104 Offset: 0x1BF9104 VA: 0x1BF9104
	public bool IsServantHavingLimitMax(int svtId, int condNum) { }

	// RVA: 0x1BF912C Offset: 0x1BF912C VA: 0x1BF912C
	public int GetServantHavintLimitMaxCount(int servantId) { }

	// RVA: 0x1BF9398 Offset: 0x1BF9398 VA: 0x1BF9398
	public int GetSvtEquipFriendShip() { }

	// RVA: 0x1BF9600 Offset: 0x1BF9600 VA: 0x1BF9600
	public UserServantEntity[] GetEntities(long[] userServantIds) { }

	// RVA: 0x1BF9688 Offset: 0x1BF9688 VA: 0x1BF9688
	public UserServantEntity[] GetEntities(List<long> userServantIds) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42E74 Offset: 0xC42E74 VA: 0xC42E74
private sealed class UserServantMaster.<TryGetEntityFromSvtId>c__AnonStorey0 // TypeDefIndex: 7509
{
	// Fields
	internal long svtId; // 0x10

	// Methods

	// RVA: 0x14741D4 Offset: 0x14741D4 VA: 0x14741D4
	public void .ctor() { }

	// RVA: 0x14741DC Offset: 0x14741DC VA: 0x14741DC
	internal bool <>m__0(UserServantEntity ent) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42E84 Offset: 0xC42E84 VA: 0xC42E84
private sealed class UserServantMaster.<getSameSvtNpLvCache>c__AnonStorey1 // TypeDefIndex: 7510
{
	// Fields
	internal UserServantEntity e; // 0x10

	// Methods

	// RVA: 0x1474324 Offset: 0x1474324 VA: 0x1474324
	public void .ctor() { }

	// RVA: 0x147432C Offset: 0x147432C VA: 0x147432C
	internal bool <>m__0(SvtMaterialTdEntity m) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42E94 Offset: 0xC42E94 VA: 0xC42E94
private sealed class UserServantMaster.<getNpUpServantList>c__AnonStorey2 // TypeDefIndex: 7511
{
	// Fields
	internal UserServantEntity e; // 0x10

	// Methods

	// RVA: 0x1474274 Offset: 0x1474274 VA: 0x1474274
	public void .ctor() { }

	// RVA: 0x147427C Offset: 0x147427C VA: 0x147427C
	internal bool <>m__0(SvtMaterialTdEntity m) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42EA4 Offset: 0xC42EA4 VA: 0xC42EA4
private sealed class UserServantMaster.<GetHaveServantSkillLevelMax>c__AnonStorey3 // TypeDefIndex: 7512
{
	// Fields
	internal int svtId; // 0x10
	internal int skillIdx; // 0x14

	// Methods

	// RVA: 0x14740C0 Offset: 0x14740C0 VA: 0x14740C0
	public void .ctor() { }

	// RVA: 0x14740C8 Offset: 0x14740C8 VA: 0x14740C8
	internal bool <>m__0(UserServantEntity usrSvt) { }

	// RVA: 0x1474160 Offset: 0x1474160 VA: 0x1474160
	internal int <>m__1(UserServantEntity a, UserServantEntity b) { }
}

// Namespace: 
public class UserServantStorageMaster : DataMasterBase<UserServantStorageMaster, UserServantEntity, long> // TypeDefIndex: 7513
{
	// Methods

	// RVA: 0x147584C Offset: 0x147584C VA: 0x147584C
	public void .ctor() { }

	// RVA: 0x14758A0 Offset: 0x14758A0 VA: 0x14758A0
	public UserServantEntity getEntityFromId(long userSvtId) { }

	// RVA: 0x14759A0 Offset: 0x14759A0 VA: 0x14759A0
	public int getCount(out int servantSum, out int servantEquipSum, bool friendShipSvtEqExclude = False) { }

	// RVA: 0x1475C5C Offset: 0x1475C5C VA: 0x1475C5C
	public UserServantEntity[] getList() { }

	// RVA: 0x1475CCC Offset: 0x1475CCC VA: 0x1475CCC
	public UserServantEntity[] getList(long userId) { }

	// RVA: 0x1475EA4 Offset: 0x1475EA4 VA: 0x1475EA4
	public UserServantEntity[] getKeepServantList() { }

	// RVA: 0x1476170 Offset: 0x1476170 VA: 0x1476170
	public UserServantEntity[] getKeepServantEquipList() { }

	// RVA: 0x147643C Offset: 0x147643C VA: 0x147643C
	public UserServantEntity[] getServantEquipList() { }

	// RVA: 0x1475078 Offset: 0x1475078 VA: 0x1475078
	public void continueDeviceUserServant() { }

	// RVA: 0x1476708 Offset: 0x1476708 VA: 0x1476708
	public UserServantEntity CostumeTargetEntity(int svtId, UserServantEntity defaultTarget) { }

	// RVA: 0x14769D4 Offset: 0x14769D4 VA: 0x14769D4
	public UserServantEntity[] getOrganizationList() { }

	// RVA: 0x1476CA0 Offset: 0x1476CA0 VA: 0x1476CA0
	public bool isOnList(long userServantId) { }

	// RVA: 0x1476D34 Offset: 0x1476D34 VA: 0x1476D34
	public int GetSvtEquipFriendShip() { }
}

// Namespace: 
public class UserServantVoicePlayedEntity : DataEntityBase<string> // TypeDefIndex: 7514
{
	// Fields
	public ObscuredLong userId; // 0x10
	public int svtId; // 0x30
	public int[] voicePlayed; // 0x38
	private HashSet<int> voicePlayedHash; // 0x40

	// Properties
	public HashSet<int> VoicePlayedHash { get; }

	// Methods

	// RVA: 0x1476FA4 Offset: 0x1476FA4 VA: 0x1476FA4
	public void .ctor() { }

	// RVA: 0x1476FF4 Offset: 0x1476FF4 VA: 0x1476FF4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x147708C Offset: 0x147708C VA: 0x147708C
	public static string CreatePK(long userId, int svtId) { }

	// RVA: 0x1477098 Offset: 0x1477098 VA: 0x1477098
	public HashSet<int> get_VoicePlayedHash() { }

	// RVA: 0x14770A0 Offset: 0x14770A0 VA: 0x14770A0
	public bool IsPlayed(int flagNum) { }

	// RVA: 0x147716C Offset: 0x147716C VA: 0x147716C
	public bool SetPlayed(int flagNum) { }
}

// Namespace: 
public class UserServantVoicePlayedMaster : DataMasterBase<UserServantVoicePlayedMaster, UserServantVoicePlayedEntity, string> // TypeDefIndex: 7515
{
	// Methods

	// RVA: 0x1477210 Offset: 0x1477210 VA: 0x1477210
	public void .ctor() { }

	// RVA: 0x1477264 Offset: 0x1477264 VA: 0x1477264
	public UserServantVoicePlayedEntity GetEntity(long userId, int svtId) { }

	// RVA: 0x14772D8 Offset: 0x14772D8 VA: 0x14772D8
	public bool TryGetEntity(out UserServantVoicePlayedEntity entity, long userId, int svtId) { }
}

// Namespace: 
public class UserShopEntity : DataEntityBase<string> // TypeDefIndex: 7516
{
	// Fields
	public long userId; // 0x10
	public int shopId; // 0x18
	public int num; // 0x1C
	public long flag; // 0x20
	public long updatedAt; // 0x28

	// Properties
	public bool IsReceivedShopItem { get; }
	public bool IsReturnRarePriShop { get; }

	// Methods

	// RVA: 0x147735C Offset: 0x147735C VA: 0x147735C
	public void .ctor() { }

	// RVA: 0x14773AC Offset: 0x14773AC VA: 0x14773AC
	public void .ctor(long userId, int shopId) { }

	// RVA: 0x1477424 Offset: 0x1477424 VA: 0x1477424 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1477438 Offset: 0x1477438 VA: 0x1477438
	public static string CreatePK(long userId, int shopId) { }

	// RVA: 0x1477444 Offset: 0x1477444 VA: 0x1477444
	public bool get_IsReceivedShopItem() { }

	// RVA: 0x1477464 Offset: 0x1477464 VA: 0x1477464
	public bool get_IsReturnRarePriShop() { }

	// RVA: 0x1477450 Offset: 0x1477450 VA: 0x1477450
	private bool CheckFlag(UserShopFlag.Flag userShopFlag) { }

	// RVA: 0x1477470 Offset: 0x1477470 VA: 0x1477470
	public bool CheckFlagKind(UserShopFlag.FlagKind flagKind) { }
}

// Namespace: 
public class UserShopMaster : DataMasterBase<UserShopMaster, UserShopEntity, string> // TypeDefIndex: 7517
{
	// Methods

	// RVA: 0x1477498 Offset: 0x1477498 VA: 0x1477498
	public void .ctor() { }

	// RVA: 0x14774EC Offset: 0x14774EC VA: 0x14774EC
	public UserShopEntity GetEntity(long userId, int shopId) { }

	// RVA: 0x1477560 Offset: 0x1477560 VA: 0x1477560
	public bool TryGetEntity(out UserShopEntity entity, long userId, int shopId) { }

	// RVA: 0x14775E4 Offset: 0x14775E4 VA: 0x14775E4
	public UserShopEntity getEntityFromId(long userId, int shopId) { }

	// RVA: 0x1477770 Offset: 0x1477770 VA: 0x1477770
	public UserShopEntity getLastPurchaseEntity() { }

	// RVA: 0x1477974 Offset: 0x1477974 VA: 0x1477974
	private int UpdateTimeSort(UserShopEntity x, UserShopEntity y) { }
}

// Namespace: 
public class UserSubEquipEntity : DataEntityBase<long> // TypeDefIndex: 7518
{
	// Fields
	public long id; // 0x10
	public long userId; // 0x18
	public int subEquipId; // 0x20

	// Methods

	// RVA: 0x1477C94 Offset: 0x1477C94 VA: 0x1477C94
	public void .ctor() { }

	// RVA: 0x1477CE4 Offset: 0x1477CE4 VA: 0x1477CE4 Slot: 5
	protected sealed override long CreatePrimaryKey() { }
}

// Namespace: 
public class UserSubEquipMaster : DataMasterBase<UserSubEquipMaster, UserSubEquipEntity, long> // TypeDefIndex: 7519
{
	// Methods

	// RVA: 0x1477CEC Offset: 0x1477CEC VA: 0x1477CEC
	public void .ctor() { }
}

// Namespace: 
public class UserSuperBossEntity : DataEntityBase<string> // TypeDefIndex: 7520
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int superBossId; // 0x1C
	public long damage; // 0x20

	// Methods

	// RVA: 0x1477D40 Offset: 0x1477D40 VA: 0x1477D40
	public void .ctor() { }

	// RVA: 0x1477D90 Offset: 0x1477D90 VA: 0x1477D90 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1477DA4 Offset: 0x1477DA4 VA: 0x1477DA4
	public static string CreatePK(long userId, int eventId, int superBossId) { }
}

// Namespace: 
public class UserSuperBossMaster : DataMasterBase<UserSuperBossMaster, UserSuperBossEntity, string> // TypeDefIndex: 7521
{
	// Methods

	// RVA: 0x1477DB4 Offset: 0x1477DB4 VA: 0x1477DB4
	public void .ctor() { }

	// RVA: 0x1477E08 Offset: 0x1477E08 VA: 0x1477E08
	public UserSuperBossEntity GetEntity(long userId, int eventId, int superBossId) { }

	// RVA: 0x1477E8C Offset: 0x1477E8C VA: 0x1477E8C
	public bool TryGetEntity(out UserSuperBossEntity entity, long userId, int eventId, int superBossId) { }

	// RVA: 0x1477F18 Offset: 0x1477F18 VA: 0x1477F18
	public UserSuperBossEntity getEntityFromId(long userId, int eventId, int superBossId) { }

	// RVA: 0x147820C Offset: 0x147820C VA: 0x147820C
	public long getTotalDamagePoint(int eventId) { }
}

// Namespace: 
public class UserSupportDeckEntity : DataEntityBase<string> // TypeDefIndex: 7522
{
	// Fields
	public long userId; // 0x10
	public int supportDeckId; // 0x18
	public string name; // 0x20

	// Methods

	// RVA: 0x1478448 Offset: 0x1478448 VA: 0x1478448
	public void .ctor() { }

	// RVA: 0x1478498 Offset: 0x1478498 VA: 0x1478498 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x14784AC Offset: 0x14784AC VA: 0x14784AC
	public static string CreatePK(long userId, int supportDeckId) { }
}

// Namespace: 
public class UserSupportDeckMaster : DataMasterBase<UserSupportDeckMaster, UserSupportDeckEntity, string> // TypeDefIndex: 7523
{
	// Methods

	// RVA: 0x14784B8 Offset: 0x14784B8 VA: 0x14784B8
	public void .ctor() { }

	// RVA: 0x147850C Offset: 0x147850C VA: 0x147850C
	public UserSupportDeckEntity GetEntity(long userId, int supportDeckId) { }

	// RVA: 0x1478580 Offset: 0x1478580 VA: 0x1478580
	public bool TryGetEntity(out UserSupportDeckEntity entity, long userId, int supportDeckId) { }

	// RVA: 0x1478604 Offset: 0x1478604 VA: 0x1478604
	public string getDeckName(int deckId) { }
}

// Namespace: 
public class UserSvtCoinEntity : DataEntityBase<string> // TypeDefIndex: 7524
{
	// Fields
	public long userId; // 0x10
	public int svtId; // 0x18
	public int num; // 0x1C
	public long updatedAt; // 0x20
	public long createdAt; // 0x28

	// Methods

	// RVA: 0x1478754 Offset: 0x1478754 VA: 0x1478754
	public void .ctor() { }

	// RVA: 0x14787A4 Offset: 0x14787A4 VA: 0x14787A4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x14787B8 Offset: 0x14787B8 VA: 0x14787B8
	public static string CreatePK(long userId, int svtId) { }
}

// Namespace: 
public class UserSvtCoinMaster : DataMasterBase<UserSvtCoinMaster, UserSvtCoinEntity, string> // TypeDefIndex: 7525
{
	// Methods

	// RVA: 0x14787C4 Offset: 0x14787C4 VA: 0x14787C4
	public void .ctor() { }

	// RVA: 0x1478818 Offset: 0x1478818 VA: 0x1478818
	public UserSvtCoinEntity GetEntity(long userId, int svtId) { }

	// RVA: 0x147888C Offset: 0x147888C VA: 0x147888C
	public bool TryGetEntity(out UserSvtCoinEntity entity, long userId, int svtId) { }
}

// Namespace: 
public class ViewEnemyEntity : DataEntityBase<string> // TypeDefIndex: 7526
{
	// Fields
	private static readonly int SVT_ID_TO_ICON_ID; // 0x0
	public int questId; // 0x10
	public int enemyId; // 0x14
	public string name; // 0x18
	public int classId; // 0x20
	public int svtId; // 0x24
	public int limitCount; // 0x28
	public int iconId; // 0x2C
	public int displayType; // 0x30
	public int[] missionIds; // 0x38

	// Methods

	// RVA: 0x1478928 Offset: 0x1478928 VA: 0x1478928
	public void .ctor() { }

	// RVA: 0x1478978 Offset: 0x1478978 VA: 0x1478978
	public void .ctor(ViewEnemyEntity old) { }

	// RVA: 0x1478AD0 Offset: 0x1478AD0 VA: 0x1478AD0 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1478B40 Offset: 0x1478B40 VA: 0x1478B40
	public static string CreatePK(int questId, int enemyId) { }

	// RVA: 0x1478B50 Offset: 0x1478B50 VA: 0x1478B50
	public bool IsIconIdUnique() { }

	// RVA: 0x1478BF0 Offset: 0x1478BF0 VA: 0x1478BF0
	public void IsMissionTarget(int questId, out QuestInformationListViewItem.MissionTargetState missionTargetState) { }

	// RVA: 0x1479420 Offset: 0x1479420 VA: 0x1479420
	private bool IsAllEnableMissionTarget(QuestInformationListViewItem.MissionTargetState missionTargetState) { }

	// RVA: 0x1479200 Offset: 0x1479200 VA: 0x1479200
	private bool isMissionGoing(int id, UserEventMissionMaster usrEvMissionMst, EventMissionConditionMaster missionCondMst) { }

	// RVA: 0x1479454 Offset: 0x1479454 VA: 0x1479454
	public string getBattleName() { }

	// RVA: 0x1479380 Offset: 0x1479380 VA: 0x1479380
	private bool isRandomMissionGoing(int missionId) { }

	// RVA: 0x147955C Offset: 0x147955C VA: 0x147955C
	private static void .cctor() { }
}

// Namespace: 
public class ViewEnemyMaster : DataMasterBase<ViewEnemyMaster, ViewEnemyEntity, string> // TypeDefIndex: 7527
{
	// Methods

	// RVA: 0x14795B0 Offset: 0x14795B0 VA: 0x14795B0
	public void .ctor() { }

	// RVA: 0x1479604 Offset: 0x1479604 VA: 0x1479604
	public ViewEnemyEntity GetEntity(int questId, int enemyId) { }

	// RVA: 0x1479698 Offset: 0x1479698 VA: 0x1479698
	public bool TryGetEntity(out ViewEnemyEntity entity, int questId, int enemyId) { }

	// RVA: 0x147973C Offset: 0x147973C VA: 0x147973C
	public ViewEnemyEntity getEntityFromId(int questId) { }

	// RVA: 0x147983C Offset: 0x147983C VA: 0x147983C
	public ViewEnemyEntity[] GetEntityListFromQuestId(int questId) { }
}

// Namespace: 
public class ViewQuestEnemyInfoEntity : DataEntityBase<int> // TypeDefIndex: 7528
{
	// Fields
	public int questId; // 0x10
	public int enemyNum; // 0x14

	// Methods

	// RVA: 0x1479A84 Offset: 0x1479A84 VA: 0x1479A84
	public void .ctor() { }

	// RVA: 0x1479AD4 Offset: 0x1479AD4 VA: 0x1479AD4 Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class ViewQuestEnemyInfoMaster : DataMasterBase<ViewQuestEnemyInfoMaster, ViewQuestEnemyInfoEntity, int> // TypeDefIndex: 7529
{
	// Methods

	// RVA: 0x1479ADC Offset: 0x1479ADC VA: 0x1479ADC
	public void .ctor() { }

	// RVA: 0x1479B30 Offset: 0x1479B30 VA: 0x1479B30
	public ViewQuestEnemyInfoEntity getEntityFromId(int questId) { }
}

// Namespace: 
public class ViewQuestInfoEntity : DataEntityBase<int> // TypeDefIndex: 7530
{
	// Fields
	public int questId; // 0x10
	public int dropSvtNum; // 0x14
	public int dropItemNum; // 0x18

	// Methods

	// RVA: 0x1479C30 Offset: 0x1479C30 VA: 0x1479C30
	public void .ctor() { }

	// RVA: 0x1479C80 Offset: 0x1479C80 VA: 0x1479C80 Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class ViewQuestInfoMaster : DataMasterBase<ViewQuestInfoMaster, ViewQuestInfoEntity, int> // TypeDefIndex: 7531
{
	// Methods

	// RVA: 0x1479C88 Offset: 0x1479C88 VA: 0x1479C88
	public void .ctor() { }

	// RVA: 0x1479CDC Offset: 0x1479CDC VA: 0x1479CDC
	public ViewQuestInfoEntity getEntityFromId(int questId) { }
}

// Namespace: 
public class VoiceClosedMessageEntity : DataEntityBase<int> // TypeDefIndex: 7532
{
	// Fields
	public int id; // 0x10
	public string message; // 0x18

	// Methods

	// RVA: 0x147B974 Offset: 0x147B974 VA: 0x147B974
	public void .ctor() { }

	// RVA: 0x147B9C4 Offset: 0x147B9C4 VA: 0x147B9C4 Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class VoiceClosedMessageMaster : DataMasterBase<VoiceClosedMessageMaster, VoiceClosedMessageEntity, int> // TypeDefIndex: 7533
{
	// Methods

	// RVA: 0x147B9CC Offset: 0x147B9CC VA: 0x147B9CC
	public void .ctor() { }

	// RVA: 0x147BA20 Offset: 0x147BA20 VA: 0x147BA20
	public string GetClosedMessage(int id) { }
}

// Namespace: 
public class VoiceCondEntity : DataEntityBase<string> // TypeDefIndex: 7534
{
	// Fields
	public ObscuredInt svtId; // 0x10
	public int voicePrefix; // 0x20
	public ObscuredString voiceId; // 0x28
	public int condType; // 0x30
	public int targetId; // 0x34
	public int condGroup; // 0x38
	public int condValue; // 0x3C
	public int priority; // 0x40
	public int closedType; // 0x44
	public int condPriority; // 0x48
	public int closedMessageId; // 0x4C

	// Methods

	// RVA: 0x147BAE8 Offset: 0x147BAE8 VA: 0x147BAE8
	public void .ctor() { }

	// RVA: 0x147BB38 Offset: 0x147BB38 VA: 0x147BB38 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x147BC0C Offset: 0x147BC0C VA: 0x147BC0C
	public static string CreatePK(int svtId, int voicePrefix, string voiceId, int condType, int targetId, int condGroup) { }

	// RVA: 0x147BC28 Offset: 0x147BC28 VA: 0x147BC28
	public bool IsEnable(int svtId, int voicePrefix) { }
}

// Namespace: 
public class VoiceCondMaster : DataMasterBase<VoiceCondMaster, VoiceCondEntity, string> // TypeDefIndex: 7535
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC560DC Offset: 0xC560DC VA: 0xC560DC
	private static Comparison<VoiceCondEntity> <>f__am$cache0; // 0x0
