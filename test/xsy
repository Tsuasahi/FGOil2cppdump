	[SerializeField] // RVA: 0xC71374 Offset: 0xC71374 VA: 0xC71374
	protected UIButton lowButton; // 0x38
	private bool isInit; // 0x40
	private Color onButtonOutlineColor; // 0x44
	private Color offButtonOutlineColor; // 0x54
	private string onButtonName; // 0x68
	private string offButtonName; // 0x70
	private bool enableResolutionSetting; // 0x78

	// Methods

	// RVA: 0x1332D34 Offset: 0x1332D34 VA: 0x1332D34
	public void .ctor() { }

	// RVA: 0x1327EB0 Offset: 0x1327EB0 VA: 0x1327EB0
	public void Init() { }

	// RVA: 0x1332D3C Offset: 0x1332D3C VA: 0x1332D3C
	private void RefreshDisplay(ResolutionManager.ResolutionType type) { }

	// RVA: 0x13330A0 Offset: 0x13330A0 VA: 0x13330A0
	public void OnClickNormalButton() { }

	// RVA: 0x133316C Offset: 0x133316C VA: 0x133316C
	public void OnClickLowButton() { }
}

// Namespace: 
public class SetScenarioControl : MonoBehaviour // TypeDefIndex: 10043
{
	// Fields
	public UILabel scenarioSpeedTxt; // 0x18
	public UISlider scenarioSpeedSlider; // 0x20
	public UILabel scenarioSpeedValueTxt; // 0x28
	public UILabel scenarioTextWaitTxt; // 0x30
	public UISlider scenarioTextWaitSlider; // 0x38
	public UILabel scenarioTextWaitValueTxt; // 0x40
	public UILabel scenarioCommentTxt; // 0x48
	private int scenarioSpeedStep; // 0x50
	private float scenarioSpeedValue; // 0x54
	private int scenarioTextWaitTimeSecondStep; // 0x58
	private float scenarioTextWaitTimeSecondValue; // 0x5C

	// Methods

	// RVA: 0x1333238 Offset: 0x1333238 VA: 0x1333238
	public void .ctor() { }

	// RVA: 0x13271EC Offset: 0x13271EC VA: 0x13271EC
	public void initSetValue() { }

	// RVA: 0x13285FC Offset: 0x13285FC VA: 0x13285FC
	public void reflectionValue() { }

	// RVA: 0x1333240 Offset: 0x1333240 VA: 0x1333240
	private void setChangeScenarioSpeedText() { }

	// RVA: 0x13334D0 Offset: 0x13334D0 VA: 0x13334D0
	public void getChangeScenarioSpeedValue() { }

	// RVA: 0x1333388 Offset: 0x1333388 VA: 0x1333388
	private void setScenarioTextWaitTimeSecond() { }

	// RVA: 0x133357C Offset: 0x133357C VA: 0x133357C
	public void getScenarioTextWaitTimeSecond() { }

	// RVA: 0x1333628 Offset: 0x1333628 VA: 0x1333628
	public void setDefaultValue() { }
}

// Namespace: 
public class SetScenarioTextSpeedControl : MonoBehaviour // TypeDefIndex: 10044
{
	// Fields
	public UILabel scenarioTextSpeedTxt; // 0x18
	public UISlider scenarioTextSpeedSlider; // 0x20
	public UILabel scenarioTextSpeedValueTxt; // 0x28
	public UILabel scenarioScrollSpeedTxt; // 0x30
	public UISlider scenarioScrollSpeedSlider; // 0x38
	public UILabel scenarioScrollSpeedValueTxt; // 0x40
	private int scenarioTextSpeedStep; // 0x48
	private float scenarioTextSpeedValue; // 0x4C
	private int scenarioScrollSpeedStep; // 0x50
	private float scenarioScrollSpeedValue; // 0x54

	// Methods

	// RVA: 0x1333770 Offset: 0x1333770 VA: 0x1333770
	public void .ctor() { }

	// RVA: 0x1326F80 Offset: 0x1326F80 VA: 0x1326F80
	public void initSetValue() { }

	// RVA: 0x132857C Offset: 0x132857C VA: 0x132857C
	public void reflectionValue() { }

	// RVA: 0x1333778 Offset: 0x1333778 VA: 0x1333778
	private void setChangeScenarioTextSpeedText() { }

	// RVA: 0x1333940 Offset: 0x1333940 VA: 0x1333940
	public void getChangeScenarioTextSpeedValue() { }

	// RVA: 0x133385C Offset: 0x133385C VA: 0x133385C
	private void setChangeScenarioScrollSpeedText() { }

	// RVA: 0x1333A30 Offset: 0x1333A30 VA: 0x1333A30
	public void getChangeScenarioScrollSpeedValue() { }

	// RVA: 0x1333B20 Offset: 0x1333B20 VA: 0x1333B20
	public void setDefaultValue() { }
}

// Namespace: 
public class SetSpoilerProtectionControl : MonoBehaviour // TypeDefIndex: 10045
{
	// Fields
	[SerializeField] // RVA: 0xC71384 Offset: 0xC71384 VA: 0xC71384
	private UIButton settingBtn; // 0x18
	[SerializeField] // RVA: 0xC71394 Offset: 0xC71394 VA: 0xC71394
	private UILabel btnTitle; // 0x20
	[SerializeField] // RVA: 0xC713A4 Offset: 0xC713A4 VA: 0xC713A4
	private UILabel infoLabel; // 0x28
	private bool isSpoilerSetting; // 0x30

	// Methods

	// RVA: 0x1333CF0 Offset: 0x1333CF0 VA: 0x1333CF0
	public void .ctor() { }

	// RVA: 0x1327DA4 Offset: 0x1327DA4 VA: 0x1327DA4
	public void Init() { }

	// RVA: 0x1333D00 Offset: 0x1333D00 VA: 0x1333D00
	public void SetSpoilerProtectionDispValue() { }

	// RVA: 0x1328A44 Offset: 0x1328A44 VA: 0x1328A44
	public void Reflection() { }

	// RVA: 0x1333D7C Offset: 0x1333D7C VA: 0x1333D7C
	public void OnClickSpoilerProtection() { }
}

// Namespace: 
public class SetSvtRandOptionControl : MonoBehaviour // TypeDefIndex: 10046
{
	// Fields
	public UILabel svtRandDispTitle; // 0x18
	public UIButton svtRandDispBtn; // 0x20
	public UILabel svtRandDispInfoLb; // 0x28
	private bool isSvtRand; // 0x30

	// Methods

	// RVA: 0x1333E20 Offset: 0x1333E20 VA: 0x1333E20
	public void .ctor() { }

	// RVA: 0x1327960 Offset: 0x1327960 VA: 0x1327960
	public void init() { }

	// RVA: 0x1333E28 Offset: 0x1333E28 VA: 0x1333E28
	private void setDispValue() { }

	// RVA: 0x1328858 Offset: 0x1328858 VA: 0x1328858
	public void reflection() { }

	// RVA: 0x1333EA4 Offset: 0x1333EA4 VA: 0x1333EA4
	public void OnChangeBtn() { }
}

// Namespace: 
public class SetSwitch2OptionControl : MonoBehaviour // TypeDefIndex: 10047
{
	// Fields
	public UILabel firnedCostumeDispTitle; // 0x18
	public UIButton friendCostumeDispBtn; // 0x20
	public UILabel friendCostumeDispInfoLb; // 0x28
	private bool isFriendCostumeDisp; // 0x30

	// Methods

	// RVA: 0x1333F24 Offset: 0x1333F24 VA: 0x1333F24
	public void .ctor() { }

	// RVA: 0x1327748 Offset: 0x1327748 VA: 0x1327748
	public void initSetSwitch() { }

	// RVA: 0x1328778 Offset: 0x1328778 VA: 0x1328778
	public void reflectionSwitch() { }

	// RVA: 0x1333F34 Offset: 0x1333F34 VA: 0x1333F34
	private void setFriendDispValue() { }

	// RVA: 0x1333FB0 Offset: 0x1333FB0 VA: 0x1333FB0
	public void OnFriendDispChangeBtn() { }
}

// Namespace: 
public class SetSwitchOptionControl : MonoBehaviour // TypeDefIndex: 10048
{
	// Fields
	public UILabel firnedDispTitle; // 0x18
	public UIButton friendDispBtn; // 0x20
	public UILabel friendDispInfoLb; // 0x28
	private bool isFriendDisp; // 0x30

	// Methods

	// RVA: 0x13340A0 Offset: 0x13340A0 VA: 0x13340A0
	public void .ctor() { }

	// RVA: 0x132763C Offset: 0x132763C VA: 0x132763C
	public void initSetSwitch() { }

	// RVA: 0x1328708 Offset: 0x1328708 VA: 0x1328708
	public void reflectionSwitch() { }

	// RVA: 0x13340B0 Offset: 0x13340B0 VA: 0x13340B0
	private void setFriendDispValue() { }

	// RVA: 0x133412C Offset: 0x133412C VA: 0x133412C
	public void OnFriendDispChangeBtn() { }
}

// Namespace: 
public class SetTDPlaySpeedControl : MonoBehaviour // TypeDefIndex: 10049
{
	// Fields
	public UILabel tdPlaySpeedDispTitle; // 0x18
	public UIButton tdPlaySpeedDispBtn; // 0x20
	public UILabel tdPlaySpeedDispInfoLb; // 0x28
	private bool isTDPlaySpeed; // 0x30

	// Methods

	// RVA: 0x133421C Offset: 0x133421C VA: 0x133421C
	public void .ctor() { }

	// RVA: 0x1327854 Offset: 0x1327854 VA: 0x1327854
	public void init() { }

	// RVA: 0x1334224 Offset: 0x1334224 VA: 0x1334224
	private void setDispValue() { }

	// RVA: 0x13287E8 Offset: 0x13287E8 VA: 0x13287E8
	public void reflection() { }

	// RVA: 0x13342A0 Offset: 0x13342A0 VA: 0x13342A0
	public void OnChangeBtn() { }
}

// Namespace: 
public class SetVolumeControl : MonoBehaviour // TypeDefIndex: 10050
{
	// Fields
	private static readonly Color NORMAL_TEXT_COLOR; // 0x0
	private static readonly Color DARK_TEXT_COLOR; // 0x10
	private static readonly Color NORMAL_VALUE_COLOR; // 0x20
	private static readonly Color DARK_VALUE_COLOR; // 0x30
	public UILabel bgmTxt; // 0x18
	public UISlider bgmSilder; // 0x20
	public UILabel bgmValueTxt; // 0x28
	public UILabel seTxt; // 0x30
	public UISlider seSilder; // 0x38
	public UILabel seValueTxt; // 0x40
	public UILabel voiceTxt; // 0x48
	public UISlider voiceSilder; // 0x50
	public UILabel voiceValueTxt; // 0x58
	public UIButton muteBtn; // 0x60
	public GameObject muteMask; // 0x68
	public UILabel muteBtnTxt; // 0x70
	public UILabel muteBtnInfoTxt; // 0x78
	public UILabel muteMaskExpTxt; // 0x80
	private float bgmValue; // 0x88
	private float seValue; // 0x8C
	private float voiceValue; // 0x90
	private bool muteFlag; // 0x94

	// Methods

	// RVA: 0x13349EC Offset: 0x13349EC VA: 0x13349EC
	public void .ctor() { }

	// RVA: 0x1326CCC Offset: 0x1326CCC VA: 0x1326CCC
	public void initSetVolume() { }

	// RVA: 0x13284E8 Offset: 0x13284E8 VA: 0x13284E8
	public void reflectionVolume() { }

	// RVA: 0x13349F4 Offset: 0x13349F4 VA: 0x13349F4
	private void setChangeBgmText() { }

	// RVA: 0x1335088 Offset: 0x1335088 VA: 0x1335088
	public void getChangeBgmValue() { }

	// RVA: 0x133513C Offset: 0x133513C VA: 0x133513C
	private void setChangeBgmValue() { }

	// RVA: 0x1334AA8 Offset: 0x1334AA8 VA: 0x1334AA8
	private void setChangeSeText() { }

	// RVA: 0x13351E8 Offset: 0x13351E8 VA: 0x13351E8
	public void getChangeSeValue() { }

	// RVA: 0x1335300 Offset: 0x1335300 VA: 0x1335300
	private void setChangeSeValue() { }

	// RVA: 0x1334B5C Offset: 0x1334B5C VA: 0x1334B5C
	private void setChangeVoiceText() { }

	// RVA: 0x13353AC Offset: 0x13353AC VA: 0x13353AC
	public void getChangeVoiceValue() { }

	// RVA: 0x13354CC Offset: 0x13354CC VA: 0x13354CC
	private void setChangeVoiceValue() { }

	// RVA: 0x1335578 Offset: 0x1335578 VA: 0x1335578
	public void setDefaultVolume() { }

	// RVA: 0x13356B0 Offset: 0x13356B0 VA: 0x13356B0
	public void OnClickMuteButton() { }

	// RVA: 0x1334C10 Offset: 0x1334C10 VA: 0x1334C10
	private void muteSetting() { }

	// RVA: 0x1335738 Offset: 0x1335738 VA: 0x1335738
	private static void .cctor() { }
}

// Namespace: 
public class HaveItemListComponent : BaseMonoBehaviour // TypeDefIndex: 10051
{
	// Fields
	[SerializeField] // RVA: 0xC713B4 Offset: 0xC713B4 VA: 0xC713B4
	protected PlayMakerFSM myRoomFsm; // 0x18

	// Methods

	// RVA: 0x1BB6854 Offset: 0x1BB6854 VA: 0x1BB6854
	public void .ctor() { }
}

// Namespace: 
public class ItemDetailInfoComponent : BaseDialog // TypeDefIndex: 10052
{
	// Fields
	[SerializeField] // RVA: 0xC713C4 Offset: 0xC713C4 VA: 0xC713C4
	protected GameObject itemDetailInfo; // 0x58
	[SerializeField] // RVA: 0xC713D4 Offset: 0xC713D4 VA: 0xC713D4
	protected UILabel itemNameLabel; // 0x60
	[SerializeField] // RVA: 0xC713E4 Offset: 0xC713E4 VA: 0xC713E4
	protected UILabel itemDetailLabel; // 0x68
	[SerializeField] // RVA: 0xC713F4 Offset: 0xC713F4 VA: 0xC713F4
	protected GameObject stoneDetailInfo; // 0x70
	[SerializeField] // RVA: 0xC71404 Offset: 0xC71404 VA: 0xC71404
	protected UILabel stoneTitleLabel; // 0x78
	[SerializeField] // RVA: 0xC71414 Offset: 0xC71414 VA: 0xC71414
	protected UILabel payStoneTitleLabel; // 0x80
	[SerializeField] // RVA: 0xC71424 Offset: 0xC71424 VA: 0xC71424
	protected UILabel payStoneNumLabel; // 0x88
	[SerializeField] // RVA: 0xC71434 Offset: 0xC71434 VA: 0xC71434
	protected UILabel freeStoneTitleLabel; // 0x90
	[SerializeField] // RVA: 0xC71444 Offset: 0xC71444 VA: 0xC71444
	protected UILabel freeStoneNumLabel; // 0x98
	[SerializeField] // RVA: 0xC71454 Offset: 0xC71454 VA: 0xC71454
	protected UILabel stoneNoticeLabel; // 0xA0
	[SerializeField] // RVA: 0xC71464 Offset: 0xC71464 VA: 0xC71464
	protected GameObject closeBtnObject; // 0xA8
	[SerializeField] // RVA: 0xC71474 Offset: 0xC71474 VA: 0xC71474
	protected GameObject stoneDetailBtnObject; // 0xB0
	[SerializeField] // RVA: 0xC71484 Offset: 0xC71484 VA: 0xC71484
	protected UILabel stoneDetailLabel; // 0xB8
	[CompilerGeneratedAttribute] // RVA: 0xC71494 Offset: 0xC71494 VA: 0xC71494
	[DebuggerBrowsableAttribute] // RVA: 0xC71494 Offset: 0xC71494 VA: 0xC71494
	private ItemDetailInfoComponent.CallbackFunc callbackFunc; // 0xC0
	protected Action closeCallbackFunc; // 0xC8
	protected ItemDetailInfoComponent.State state; // 0xD0
	protected readonly int DETAIL_FONT_SIZE; // 0xD4
	protected readonly int STONE_DETAIL_FONT_SIZE; // 0xD8

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x11BA050 Offset: 0x11BA050 VA: 0x11BA050
	public void .ctor() { }

	// RVA: 0x11BA0C4 Offset: 0x11BA0C4 VA: 0x11BA0C4
	protected void add_callbackFunc(ItemDetailInfoComponent.CallbackFunc value) { }

	// RVA: 0x11BA1B0 Offset: 0x11BA1B0 VA: 0x11BA1B0
	protected void remove_callbackFunc(ItemDetailInfoComponent.CallbackFunc value) { }

	// RVA: 0x11BA29C Offset: 0x11BA29C VA: 0x11BA29C
	public void Init() { }

	// RVA: 0x11BA428 Offset: 0x11BA428 VA: 0x11BA428
	public void OpenUserItemInfo(UserItemData itemData, ItemDetailInfoComponent.CallbackFunc callback, int spacingY = 0) { }

	// RVA: 0x11BA614 Offset: 0x11BA614 VA: 0x11BA614
	public void Open(ItemEntity itemData, ItemDetailInfoComponent.CallbackFunc callback, int depth = 50) { }

	// RVA: 0x11BA798 Offset: 0x11BA798 VA: 0x11BA798
	public void OpenItemMsgInfo(string name, string detail, ItemDetailInfoComponent.CallbackFunc callback) { }

	// RVA: 0x11BA8C4 Offset: 0x11BA8C4 VA: 0x11BA8C4
	public void ShowStoneDetail(string name, string detail, UserGameEntity userData, ItemDetailInfoComponent.CallbackFunc callback) { }

	// RVA: 0x11BA584 Offset: 0x11BA584 VA: 0x11BA584
	private void setBtnInfoActive() { }

	// RVA: 0x11BAB68 Offset: 0x11BAB68 VA: 0x11BAB68
	protected void EndOpen() { }

	// RVA: 0x11BAB7C Offset: 0x11BAB7C VA: 0x11BAB7C
	public void Close() { }

	// RVA: 0x11BAB84 Offset: 0x11BAB84 VA: 0x11BAB84
	public void Close(Action callback) { }

	// RVA: 0x11BAC0C Offset: 0x11BAC0C VA: 0x11BAC0C
	protected void EndClose() { }

	// RVA: 0x11BAC70 Offset: 0x11BAC70 VA: 0x11BAC70
	protected void Callback(bool result) { }

	// RVA: 0x11BAEBC Offset: 0x11BAEBC VA: 0x11BAEBC
	public void OnClickDecide() { }

	// RVA: 0x11BAEDC Offset: 0x11BAEDC VA: 0x11BAEDC
	public void OnClickCancel() { }

	// RVA: 0x11BAEFC Offset: 0x11BAEFC VA: 0x11BAEFC Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
public sealed class ItemDetailInfoComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 10053
{
	// Methods

	// RVA: 0x11BAF44 Offset: 0x11BAF44 VA: 0x11BAF44
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x11BAC90 Offset: 0x11BAC90 VA: 0x11BAC90 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x11BAF54 Offset: 0x11BAF54 VA: 0x11BAF54 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x11BAFE4 Offset: 0x11BAFE4 VA: 0x11BAFE4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
protected enum ItemDetailInfoComponent.State // TypeDefIndex: 10054
{
	// Fields
	public int value__; // 0x0
	public const ItemDetailInfoComponent.State INIT = 0;
	public const ItemDetailInfoComponent.State NORMALOPEN = 1;
	public const ItemDetailInfoComponent.State STONEOPEN = 2;
	public const ItemDetailInfoComponent.State STONEINFO = 3;
}

// Namespace: 
public class UserItemData // TypeDefIndex: 10055
{
	// Fields
	public int type; // 0x10
	public int dispPriority; // 0x14
	public int itemId; // 0x18
	public int itemImgId; // 0x1C
	public string name; // 0x20
	public string detail; // 0x28
	public int num; // 0x30

	// Methods

	// RVA: 0x15ED9A0 Offset: 0x15ED9A0 VA: 0x15ED9A0
	public void .ctor() { }
}

// Namespace: 
public class UserItemListViewItem : ListViewItem // TypeDefIndex: 10056
{
	// Fields
	private UserItemData itemData; // 0x70
	private int dispPriority; // 0x78
	private int itemType; // 0x7C
	private int itemId; // 0x80
	private int itemImgId; // 0x84
	private string itemName; // 0x88
	private int itemNum; // 0x90
	private long itemLostTime; // 0x98

	// Properties
	public UserItemData userItemData { get; }
	public int ItemId { get; }
	public int ItemType { get; }
	public int DispPriority { get; }
	public int ItemImgId { get; }
	public string ItemName { get; }
	public int ItemNum { get; }
	public long ItemLostTime { get; }

	// Methods

	// RVA: 0x15EDB2C Offset: 0x15EDB2C VA: 0x15EDB2C
	public void .ctor(UserItemData usrItemData) { }

	// RVA: 0x15EDC94 Offset: 0x15EDC94 VA: 0x15EDC94 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x15EDC9C Offset: 0x15EDC9C VA: 0x15EDC9C Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x15EDCB4 Offset: 0x15EDCB4 VA: 0x15EDCB4
	public UserItemData get_userItemData() { }

	// RVA: 0x15EDCBC Offset: 0x15EDCBC VA: 0x15EDCBC
	public int get_ItemId() { }

	// RVA: 0x15EDCC4 Offset: 0x15EDCC4 VA: 0x15EDCC4
	public int get_ItemType() { }

	// RVA: 0x15EDCCC Offset: 0x15EDCCC VA: 0x15EDCCC
	public int get_DispPriority() { }

	// RVA: 0x15EDCD4 Offset: 0x15EDCD4 VA: 0x15EDCD4
	public int get_ItemImgId() { }

	// RVA: 0x15EDCDC Offset: 0x15EDCDC VA: 0x15EDCDC
	public string get_ItemName() { }

	// RVA: 0x15EDCE4 Offset: 0x15EDCE4 VA: 0x15EDCE4
	public int get_ItemNum() { }

	// RVA: 0x15EDCEC Offset: 0x15EDCEC VA: 0x15EDCEC
	public long get_ItemLostTime() { }
}

// Namespace: 
public class UserItemListViewItemDraw : MonoBehaviour // TypeDefIndex: 10057
{
	// Fields
	private float[] enableTimePos; // 0x18
	[SerializeField] // RVA: 0xC714D0 Offset: 0xC714D0 VA: 0xC714D0
	protected UIButton baseButton; // 0x20
	[SerializeField] // RVA: 0xC714E0 Offset: 0xC714E0 VA: 0xC714E0
	protected ItemIconComponent itemIconInfo; // 0x28
	[SerializeField] // RVA: 0xC714F0 Offset: 0xC714F0 VA: 0xC714F0
	protected UISprite iconImageSprite; // 0x30
	[SerializeField] // RVA: 0xC71500 Offset: 0xC71500 VA: 0xC71500
	protected UILabel nameTextLabel; // 0x38
	[SerializeField] // RVA: 0xC71510 Offset: 0xC71510 VA: 0xC71510
	protected UILabel numTextLabel; // 0x40
	[SerializeField] // RVA: 0xC71520 Offset: 0xC71520 VA: 0xC71520
	protected UILabel enableTimeLabel; // 0x48
	[SerializeField] // RVA: 0xC71530 Offset: 0xC71530 VA: 0xC71530
	protected UILabel stringLabel; // 0x50
	private long dispEndTime; // 0x58

	// Methods

	// RVA: 0x15EDCF4 Offset: 0x15EDCF4 VA: 0x15EDCF4
	public void .ctor() { }

	// RVA: 0x15EDD6C Offset: 0x15EDD6C VA: 0x15EDD6C
	public void SetItem(UserItemListViewItem item, UserItemListViewItemDraw.DispMode mode) { }

	// RVA: 0x15EE2D0 Offset: 0x15EE2D0 VA: 0x15EE2D0
	public void SetInput(UserItemListViewItem item, bool isInput) { }

	// RVA: 0x15EE090 Offset: 0x15EE090 VA: 0x15EE090
	private void SetEnableTime() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD07D0 Offset: 0xCD07D0 VA: 0xCD07D0
	// RVA: 0x15EE540 Offset: 0x15EE540 VA: 0x15EE540
	private void <SetItem>m__0(int stoneCount) { }
}

// Namespace: 
public enum UserItemListViewItemDraw.DispMode // TypeDefIndex: 10058
{
	// Fields
	public int value__; // 0x0
	public const UserItemListViewItemDraw.DispMode INVISIBLE = 0;
	public const UserItemListViewItemDraw.DispMode INVALID = 1;
	public const UserItemListViewItemDraw.DispMode VALID = 2;
	public const UserItemListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class UserItemListViewManager : ListViewManager // TypeDefIndex: 10059
{
	// Fields
	[SerializeField] // RVA: 0xC71540 Offset: 0xC71540 VA: 0xC71540
	protected PlayMakerFSM myRoomFsm; // 0x138
	[SerializeField] // RVA: 0xC71550 Offset: 0xC71550 VA: 0xC71550
	protected ItemDetailInfoComponent itemDetailInfoComp; // 0x140
	[SerializeField] // RVA: 0xC71560 Offset: 0xC71560 VA: 0xC71560
	protected GameObject nonItemNoticeInfo; // 0x148
	[SerializeField] // RVA: 0xC71570 Offset: 0xC71570 VA: 0xC71570
	protected UILabel nonItemNoticeLb; // 0x150
	[SerializeField] // RVA: 0xC71580 Offset: 0xC71580 VA: 0xC71580
	protected UILabel infoLb; // 0x158
	[SerializeField] // RVA: 0xC71590 Offset: 0xC71590 VA: 0xC71590
	protected UISprite bgTxtSprite; // 0x160
	private UserItemListViewItem selectItem; // 0x168
	protected UserItemListViewManager.InitMode initMode; // 0x170
	[CompilerGeneratedAttribute] // RVA: 0xC715A0 Offset: 0xC715A0 VA: 0xC715A0
	[DebuggerBrowsableAttribute] // RVA: 0xC715A0 Offset: 0xC715A0 VA: 0xC715A0
	private UserItemListViewManager.CallbackFunc callbackFunc; // 0x178
	[CompilerGeneratedAttribute] // RVA: 0xC715DC Offset: 0xC715DC VA: 0xC715DC
	[DebuggerBrowsableAttribute] // RVA: 0xC715DC Offset: 0xC715DC VA: 0xC715DC
	private Action callbackFunc2; // 0x180
	protected int callbackCount; // 0x188
	private UserGameEntity userGameEntity; // 0x190
	private int stoneNum; // 0x198
	private int manaNum; // 0x19C
	private int rarePriNum; // 0x1A0
	private List<UserItemData> usrItemList; // 0x1A8
	[CompilerGeneratedAttribute] // RVA: 0xC71618 Offset: 0xC71618 VA: 0xC71618
	private static Comparison<UserItemData> <>f__am$cache0; // 0x0

	// Properties
	public List<UserItemListViewObject> ObjectList { get; }
	public List<UserItemListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x15EE5D8 Offset: 0x15EE5D8 VA: 0x15EE5D8
	public void .ctor() { }

	// RVA: 0x15EE5E0 Offset: 0x15EE5E0 VA: 0x15EE5E0
	protected void add_callbackFunc(UserItemListViewManager.CallbackFunc value) { }

	// RVA: 0x15EE6D0 Offset: 0x15EE6D0 VA: 0x15EE6D0
	protected void remove_callbackFunc(UserItemListViewManager.CallbackFunc value) { }

	// RVA: 0x15EE7C0 Offset: 0x15EE7C0 VA: 0x15EE7C0
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x15EE8B0 Offset: 0x15EE8B0 VA: 0x15EE8B0
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x15EE9A0 Offset: 0x15EE9A0 VA: 0x15EE9A0
	public List<UserItemListViewObject> get_ObjectList() { }

	// RVA: 0x15EEB6C Offset: 0x15EEB6C VA: 0x15EEB6C
	public List<UserItemListViewObject> get_ClippingObjectList() { }

	// RVA: 0x15EEE4C Offset: 0x15EEE4C VA: 0x15EEE4C
	public void CreateList() { }

	// RVA: 0x15EF324 Offset: 0x15EF324 VA: 0x15EF324
	private void SetUsrItemDataByType(ItemType.Type itemType) { }

	// RVA: 0x15EF554 Offset: 0x15EF554 VA: 0x15EF554
	private void SetUsrItemData(UserItemEntity data) { }

	// RVA: 0x15EF714 Offset: 0x15EF714 VA: 0x15EF714
	public void DestroyList() { }

	// RVA: 0x15EF71C Offset: 0x15EF71C VA: 0x15EF71C
	public UserItemListViewItem GetItem(int index) { }

	// RVA: 0x15EF7C4 Offset: 0x15EF7C4 VA: 0x15EF7C4 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x15EF8FC Offset: 0x15EF8FC VA: 0x15EF8FC
	public void SetMode(UserItemListViewManager.InitMode mode, UserItemListViewManager.CallbackFunc callback) { }

	// RVA: 0x15EF9B0 Offset: 0x15EF9B0 VA: 0x15EF9B0
	public void SetMode(UserItemListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x15EF904 Offset: 0x15EF904 VA: 0x15EF904
	public void SetMode(UserItemListViewManager.InitMode mode) { }

	// RVA: 0x15EFBAC Offset: 0x15EFBAC VA: 0x15EFBAC
	protected void RequestListObject(UserItemListViewObject.InitMode mode, float delay) { }

	// RVA: 0x15EF9B8 Offset: 0x15EF9B8 VA: 0x15EF9B8
	protected void RequestListObject(UserItemListViewObject.InitMode mode) { }

	// RVA: 0x15EFEBC Offset: 0x15EFEBC VA: 0x15EFEBC
	protected void OnMoveEnd() { }

	// RVA: 0x15EFF88 Offset: 0x15EFF88 VA: 0x15EFF88
	protected void OnClickListView(UserItemListViewObject obj) { }

	// RVA: 0x15F0010 Offset: 0x15F0010 VA: 0x15F0010
	public void openItemDetail() { }

	// RVA: 0x15F0190 Offset: 0x15F0190 VA: 0x15F0190
	public void closeItemDetail() { }

	// RVA: 0x15F0214 Offset: 0x15F0214 VA: 0x15F0214
	private void SelectItemDetail(bool isDecide) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD07E0 Offset: 0xCD07E0 VA: 0xCD07E0
	// RVA: 0x15F0278 Offset: 0x15F0278 VA: 0x15F0278
	private static int <CreateList>m__0(UserItemData a, UserItemData b) { }
}

// Namespace: 
public enum UserItemListViewManager.InitMode // TypeDefIndex: 10060
{
	// Fields
	public int value__; // 0x0
	public const UserItemListViewManager.InitMode NONE = 0;
	public const UserItemListViewManager.InitMode INPUT = 1;
}

// Namespace: 
public enum UserItemListViewManager.Type // TypeDefIndex: 10061
{
	// Fields
	public int value__; // 0x0
	public const UserItemListViewManager.Type STONE = 1;
	public const UserItemListViewManager.Type TICKET = 2;
	public const UserItemListViewManager.Type MANA = 3;
	public const UserItemListViewManager.Type SKILLUP = 4;
	public const UserItemListViewManager.Type TDUP = 5;
}

// Namespace: 
public sealed class UserItemListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 10062
{
	// Methods

	// RVA: 0x15F02B8 Offset: 0x15F02B8 VA: 0x15F02B8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x15F02C8 Offset: 0x15F02C8 VA: 0x15F02C8 Slot: 11
	public virtual void Invoke(int result) { }

	// RVA: 0x15F04F4 Offset: 0x15F04F4 VA: 0x15F04F4 Slot: 12
	public virtual IAsyncResult BeginInvoke(int result, AsyncCallback callback, object object) { }

	// RVA: 0x15F0580 Offset: 0x15F0580 VA: 0x15F0580 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class UserItemListViewObject : ListViewObject // TypeDefIndex: 10063
{
	// Fields
	protected UserItemListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC71628 Offset: 0xC71628 VA: 0xC71628
	[DebuggerBrowsableAttribute] // RVA: 0xC71628 Offset: 0xC71628 VA: 0xC71628
	private Action callbackFunc; // 0x70
	protected UserItemListViewItemDraw itemDraw; // 0x78
	protected UserItemListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x15F058C Offset: 0x15F058C VA: 0x15F058C
	public void .ctor() { }

	// RVA: 0x15F05F4 Offset: 0x15F05F4 VA: 0x15F05F4
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x15F06E0 Offset: 0x15F06E0 VA: 0x15F06E0
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x15F07CC Offset: 0x15F07CC VA: 0x15F07CC
	protected void Awake() { }

	// RVA: 0x15F0840 Offset: 0x15F0840 VA: 0x15F0840
	private void Start() { }

	// RVA: 0x15F0854 Offset: 0x15F0854 VA: 0x15F0854
	private void OnDestroy() { }

	// RVA: 0x15EEDC8 Offset: 0x15EEDC8 VA: 0x15EEDC8
	public UserItemListViewItem GetItem() { }

	// RVA: 0x15F0858 Offset: 0x15F0858 VA: 0x15F0858 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x15F0864 Offset: 0x15F0864 VA: 0x15F0864 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x15F0968 Offset: 0x15F0968 VA: 0x15F0968
	public void Init(UserItemListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x15EFDB4 Offset: 0x15EFDB4 VA: 0x15EFDB4
	public void Init(UserItemListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x15EFE38 Offset: 0x15EFE38 VA: 0x15EFE38
	public void Init(UserItemListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x15EF87C Offset: 0x15EF87C VA: 0x15EF87C
	public void Init(UserItemListViewObject.InitMode initMode) { }

	// RVA: 0x15F0B2C Offset: 0x15F0B2C VA: 0x15F0B2C
	protected void SetupDisp() { }

	// RVA: 0x15F0C3C Offset: 0x15F0C3C VA: 0x15F0C3C
	public void OnClickSelect() { }
}

// Namespace: 
public enum UserItemListViewObject.InitMode // TypeDefIndex: 10064
{
	// Fields
	public int value__; // 0x0
	public const UserItemListViewObject.InitMode INVISIBLE = 0;
	public const UserItemListViewObject.InitMode INVALID = 1;
	public const UserItemListViewObject.InitMode VALID = 2;
	public const UserItemListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum UserItemListViewObject.State // TypeDefIndex: 10065
{
	// Fields
	public int value__; // 0x0
	public const UserItemListViewObject.State INIT = 0;
	public const UserItemListViewObject.State IDLE = 1;
	public const UserItemListViewObject.State MOVE = 2;
	public const UserItemListViewObject.State INPUT = 3;
}

// Namespace: 
public class ChangeGenderTypeWindow : BaseDialog // TypeDefIndex: 10066
{
	// Fields
	[SerializeField] // RVA: 0xC71664 Offset: 0xC71664 VA: 0xC71664
	private UILabel titleLb; // 0x58
	[SerializeField] // RVA: 0xC71674 Offset: 0xC71674 VA: 0xC71674
	private UILabel inputInfoLb; // 0x60
	[SerializeField] // RVA: 0xC71684 Offset: 0xC71684 VA: 0xC71684
	private UIButton femaleBtn; // 0x68
	[SerializeField] // RVA: 0xC71694 Offset: 0xC71694 VA: 0xC71694
	private UILabel femaleTxt; // 0x70
	[SerializeField] // RVA: 0xC716A4 Offset: 0xC716A4 VA: 0xC716A4
	private UIButton maleBtn; // 0x78
	[SerializeField] // RVA: 0xC716B4 Offset: 0xC716B4 VA: 0xC716B4
	private UILabel maleTxt; // 0x80
	private int currentGenderType; // 0x88
	private int changeGenderType; // 0x8C
	[CompilerGeneratedAttribute] // RVA: 0xC716C4 Offset: 0xC716C4 VA: 0xC716C4
	[DebuggerBrowsableAttribute] // RVA: 0xC716C4 Offset: 0xC716C4 VA: 0xC716C4
	private ChangeGenderTypeWindow.CallbackFunc callbackFunc; // 0x90
	protected Action closeCallbackFunc; // 0x98
	protected ChangeGenderTypeWindow.State state; // 0xA0

	// Methods

	// RVA: 0x1A40738 Offset: 0x1A40738 VA: 0x1A40738
	public void .ctor() { }

	// RVA: 0x1A407A0 Offset: 0x1A407A0 VA: 0x1A407A0
	protected void add_callbackFunc(ChangeGenderTypeWindow.CallbackFunc value) { }

	// RVA: 0x1A4088C Offset: 0x1A4088C VA: 0x1A4088C
	protected void remove_callbackFunc(ChangeGenderTypeWindow.CallbackFunc value) { }

	// RVA: 0x1A40978 Offset: 0x1A40978 VA: 0x1A40978
	public void Init() { }

	// RVA: 0x1A409C4 Offset: 0x1A409C4 VA: 0x1A409C4
	public void OpenChangeGenderWindow(int currentType, ChangeGenderTypeWindow.CallbackFunc callback) { }

	// RVA: 0x1A40B88 Offset: 0x1A40B88 VA: 0x1A40B88
	protected void EndOpen() { }

	// RVA: 0x1A40BA0 Offset: 0x1A40BA0 VA: 0x1A40BA0
	public void Close() { }

	// RVA: 0x1A40BA8 Offset: 0x1A40BA8 VA: 0x1A40BA8
	public void Close(Action callback) { }

	// RVA: 0x1A40C30 Offset: 0x1A40C30 VA: 0x1A40C30
	protected void EndClose() { }

	// RVA: 0x1A40C94 Offset: 0x1A40C94 VA: 0x1A40C94
	protected void Callback(bool result, int changeType) { }

	// RVA: 0x1A40EFC Offset: 0x1A40EFC VA: 0x1A40EFC
	public void OnClickFemale() { }

	// RVA: 0x1A40F74 Offset: 0x1A40F74 VA: 0x1A40F74
	public void OnClickMale() { }
}

// Namespace: 
public sealed class ChangeGenderTypeWindow.CallbackFunc : MulticastDelegate // TypeDefIndex: 10067
{
	// Methods

	// RVA: 0x1A40FEC Offset: 0x1A40FEC VA: 0x1A40FEC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1A40CB8 Offset: 0x1A40CB8 VA: 0x1A40CB8 Slot: 11
	public virtual void Invoke(bool result, int changeType) { }

	// RVA: 0x1A40FFC Offset: 0x1A40FFC VA: 0x1A40FFC Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, int changeType, AsyncCallback callback, object object) { }

	// RVA: 0x1A410AC Offset: 0x1A410AC VA: 0x1A410AC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
protected enum ChangeGenderTypeWindow.State // TypeDefIndex: 10068
{
	// Fields
	public int value__; // 0x0
	public const ChangeGenderTypeWindow.State INIT = 0;
	public const ChangeGenderTypeWindow.State OPEN = 1;
	public const ChangeGenderTypeWindow.State CLOSE = 2;
}

// Namespace: 
public class ChangeUserNameWindow : BaseDialog // TypeDefIndex: 10069
{
	// Fields
	public UILabel titleTxtLb; // 0x58
	public UILabel titleLb; // 0x60
	public UILineInput nameInput; // 0x68
	public UILabel nameText; // 0x70
	public UIInput inputTarget; // 0x78
	public UIButton submitBtn; // 0x80
	public UILabel submitTxtLb; // 0x88
	public UILabel cancelTxtLb; // 0x90
	[CompilerGeneratedAttribute] // RVA: 0xC71700 Offset: 0xC71700 VA: 0xC71700
	[DebuggerBrowsableAttribute] // RVA: 0xC71700 Offset: 0xC71700 VA: 0xC71700
	private ChangeUserNameWindow.CallbackFunc callbackFunc; // 0x98
	protected Action closeCallbackFunc; // 0xA0
	protected ChangeUserNameWindow.State state; // 0xA8
	[CompilerGeneratedAttribute] // RVA: 0xC7173C Offset: 0xC7173C VA: 0xC7173C
	private static UIInput.OnValidate <>f__mg$cache0; // 0x0

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1A423C0 Offset: 0x1A423C0 VA: 0x1A423C0
	public void .ctor() { }

	// RVA: 0x1A42428 Offset: 0x1A42428 VA: 0x1A42428
	protected void add_callbackFunc(ChangeUserNameWindow.CallbackFunc value) { }

	// RVA: 0x1A42514 Offset: 0x1A42514 VA: 0x1A42514
	protected void remove_callbackFunc(ChangeUserNameWindow.CallbackFunc value) { }

	// RVA: 0x1A42600 Offset: 0x1A42600 VA: 0x1A42600
	public void Init() { }

	// RVA: 0x1A4264C Offset: 0x1A4264C VA: 0x1A4264C
	public void OpenChangeNameWindow(string usrName, ChangeUserNameWindow.CallbackFunc callback) { }

	// RVA: 0x1A429E4 Offset: 0x1A429E4 VA: 0x1A429E4
	public void OnChangeInput() { }

	// RVA: 0x1A4295C Offset: 0x1A4295C VA: 0x1A4295C
	public void resetInputVal() { }

	// RVA: 0x1A42C78 Offset: 0x1A42C78 VA: 0x1A42C78
	protected void EndOpen() { }

	// RVA: 0x1A42C90 Offset: 0x1A42C90 VA: 0x1A42C90
	public void Close() { }

	// RVA: 0x1A42C98 Offset: 0x1A42C98 VA: 0x1A42C98
	public void Close(Action callback) { }

	// RVA: 0x1A42D28 Offset: 0x1A42D28 VA: 0x1A42D28
	protected void EndClose() { }

	// RVA: 0x1A42D8C Offset: 0x1A42D8C VA: 0x1A42D8C
	protected void Callback(bool result, string name) { }

	// RVA: 0x1A42FF0 Offset: 0x1A42FF0 VA: 0x1A42FF0
	public void OnClickDecide() { }

	// RVA: 0x1A43104 Offset: 0x1A43104 VA: 0x1A43104
	public void OnClickCancel() { }

	// RVA: 0x1A43190 Offset: 0x1A43190 VA: 0x1A43190 Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
public sealed class ChangeUserNameWindow.CallbackFunc : MulticastDelegate // TypeDefIndex: 10070
{
	// Methods

	// RVA: 0x1A431D8 Offset: 0x1A431D8 VA: 0x1A431D8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1A42DAC Offset: 0x1A42DAC VA: 0x1A42DAC Slot: 11
	public virtual void Invoke(bool result, string changeName) { }

