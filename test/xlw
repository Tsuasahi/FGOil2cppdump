	public void .ctor(int index, UserServantEntity userSvtEntity, long targetSvtEquipId, long oldTargetSvtEquipId, PartyListViewItem partyItem, EventUpValSetupInfo setupInfo, int memberIdx) { }

	// RVA: 0x1704344 Offset: 0x1704344 VA: 0x1704344
	public void .ctor(int index, UserServantEntity userSvtEntity, long targetSvtEquipId, long oldTargetSvtEquipId, WarBoardPartyListViewItem partyItem, EventUpValSetupInfo setupInfo) { }

	// RVA: 0x1704864 Offset: 0x1704864 VA: 0x1704864
	public bool IsWeareMember(int member) { }

	// RVA: 0x1704880 Offset: 0x1704880 VA: 0x1704880
	public int GetWeareMemberCost() { }

	// RVA: 0x17048B8 Offset: 0x17048B8 VA: 0x17048B8
	public void Modify(UserServantEntity userSvtEntity) { }

	// RVA: 0x17048E0 Offset: 0x17048E0 VA: 0x17048E0
	public void ModifyUserServantEntity(UserServantEntity userServantEntity) { }

	// RVA: 0x17048E8 Offset: 0x17048E8 VA: 0x17048E8
	public void ModifyLockItem() { }

	// RVA: 0x170492C Offset: 0x170492C VA: 0x170492C
	public void ModifyChoiceItem() { }

	// RVA: 0x1704970 Offset: 0x1704970 VA: 0x1704970 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1704978 Offset: 0x1704978 VA: 0x1704978
	private bool IsMatchServantEquipFilter(ListViewSort sort) { }

	// RVA: 0x1704B54 Offset: 0x1704B54 VA: 0x1704B54 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x1705404 Offset: 0x1705404 VA: 0x1705404 Slot: 5
	public override bool IsMatchFilter(ListViewSort sort) { }

	// RVA: 0x1703668 Offset: 0x1703668 VA: 0x1703668
	public bool SwapLock() { }

	// RVA: 0x1703684 Offset: 0x1703684 VA: 0x1703684
	public bool SwapChoice() { }

	// RVA: 0x17036A0 Offset: 0x17036A0 VA: 0x17036A0
	public UserServantEntity get_UserServant() { }

	// RVA: 0x1705430 Offset: 0x1705430 VA: 0x1705430
	public ServantEntity get_Servant() { }

	// RVA: 0x1705438 Offset: 0x1705438 VA: 0x1705438
	public string get_NameText() { }

	// RVA: 0x17054B8 Offset: 0x17054B8 VA: 0x17054B8
	public int get_Attack() { }

	// RVA: 0x17054D0 Offset: 0x17054D0 VA: 0x17054D0
	public int get_AdjustAttack() { }

	// RVA: 0x17054E8 Offset: 0x17054E8 VA: 0x17054E8
	public int get_Hp() { }

	// RVA: 0x1705500 Offset: 0x1705500 VA: 0x1705500
	public int get_AdjustHp() { }

	// RVA: 0x17048A0 Offset: 0x17048A0 VA: 0x17048A0
	public int get_Cost() { }

	// RVA: 0x1705518 Offset: 0x1705518 VA: 0x1705518
	public bool get_IsOldBase() { }

	// RVA: 0x17036B8 Offset: 0x17036B8 VA: 0x17036B8
	public bool get_IsBase() { }

	// RVA: 0x1705520 Offset: 0x1705520 VA: 0x1705520
	public void set_IsBase(bool value) { }

	// RVA: 0x17036A8 Offset: 0x17036A8 VA: 0x17036A8
	public bool get_IsUse() { }

	// RVA: 0x170552C Offset: 0x170552C VA: 0x170552C
	public int get_WeareMember() { }

	// RVA: 0x1705534 Offset: 0x1705534 VA: 0x1705534
	public string get_WeareServantName() { }

	// RVA: 0x170553C Offset: 0x170553C VA: 0x170553C
	public string get_WeareServantClassName() { }

	// RVA: 0x170561C Offset: 0x170561C VA: 0x170561C
	public int get_WeareServantRarity() { }

	// RVA: 0x1705624 Offset: 0x1705624 VA: 0x1705624
	public bool get_IsLock() { }

	// RVA: 0x170562C Offset: 0x170562C VA: 0x170562C
	public bool get_IsSwapLock() { }

	// RVA: 0x1705634 Offset: 0x1705634 VA: 0x1705634
	public bool get_IsDispLock() { }

	// RVA: 0x1705654 Offset: 0x1705654 VA: 0x1705654
	public bool get_IsChoice() { }

	// RVA: 0x170565C Offset: 0x170565C VA: 0x170565C
	public bool get_IsSwapChoice() { }

	// RVA: 0x1704B34 Offset: 0x1704B34 VA: 0x1704B34
	public bool get_IsDispChoice() { }

	// RVA: 0x1705664 Offset: 0x1705664 VA: 0x1705664
	public bool get_IsCanNotSelect() { }

	// RVA: 0x170566C Offset: 0x170566C VA: 0x170566C
	public IconLabelInfo get_IconInfo1() { }

	// RVA: 0x1705674 Offset: 0x1705674 VA: 0x1705674
	public IconLabelInfo get_IconInfo2() { }

	// RVA: 0x170567C Offset: 0x170567C VA: 0x170567C
	public bool GetNpInfo(out TreasureDvcInfo tdInfo) { }

	// RVA: 0x1705714 Offset: 0x1705714 VA: 0x1705714
	public bool get_IsInvalidRarity() { }
}

// Namespace: 
public class EquipGraphListViewItemDraw : MonoBehaviour // TypeDefIndex: 5428
{
	// Fields
	[SerializeField] // RVA: 0xC4C2A8 Offset: 0xC4C2A8 VA: 0xC4C2A8
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xC4C2B8 Offset: 0xC4C2B8 VA: 0xC4C2B8
	protected ServantFaceIconComponent servantFaceIcon; // 0x20
	[SerializeField] // RVA: 0xC4C2C8 Offset: 0xC4C2C8 VA: 0xC4C2C8
	protected UIIconLabel costIconLabel; // 0x28
	[SerializeField] // RVA: 0xC4C2D8 Offset: 0xC4C2D8 VA: 0xC4C2D8
	protected UISprite lockSprite; // 0x30
	[SerializeField] // RVA: 0xC4C2E8 Offset: 0xC4C2E8 VA: 0xC4C2E8
	protected UISprite choiceSprite; // 0x38
	[SerializeField] // RVA: 0xC4C2F8 Offset: 0xC4C2F8 VA: 0xC4C2F8
	protected UISprite maskSprite; // 0x40
	[SerializeField] // RVA: 0xC4C308 Offset: 0xC4C308 VA: 0xC4C308
	protected UILabel warningLabel; // 0x48
	[SerializeField] // RVA: 0xC4C318 Offset: 0xC4C318 VA: 0xC4C318
	protected GameObject selectObject; // 0x50
	[SerializeField] // RVA: 0xC4C328 Offset: 0xC4C328 VA: 0xC4C328
	protected UILabel skillInvalidLabel; // 0x58
	[SerializeField] // RVA: 0xC4C338 Offset: 0xC4C338 VA: 0xC4C338
	protected SwitchUIWidgetComponent messageLabel; // 0x60
	private List<UIWidget> messageLabelList; // 0x68

	// Methods

	// RVA: 0x170571C Offset: 0x170571C VA: 0x170571C
	public void .ctor() { }

	// RVA: 0x1705724 Offset: 0x1705724 VA: 0x1705724
	protected void Awake() { }

	// RVA: 0x170578C Offset: 0x170578C VA: 0x170578C
	public void SetItem(EquipGraphListViewItem item, EquipGraphListViewItemDraw.DispMode mode) { }

	// RVA: 0x1705C54 Offset: 0x1705C54 VA: 0x1705C54
	public void SetInput(EquipGraphListViewItem item, bool isInput) { }
}

// Namespace: 
public enum EquipGraphListViewItemDraw.DispMode // TypeDefIndex: 5429
{
	// Fields
	public int value__; // 0x0
	public const EquipGraphListViewItemDraw.DispMode INVISIBLE = 0;
	public const EquipGraphListViewItemDraw.DispMode INVALID = 1;
	public const EquipGraphListViewItemDraw.DispMode VALID = 2;
	public const EquipGraphListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class EquipGraphListViewManager : ListViewManager // TypeDefIndex: 5430
{
	// Fields
	protected const string SORT_SAVE_KEY = "EquipGraph";
	protected static ListViewSort sortStatus; // 0x0
	protected const string WAR_BOARD_SORT_SAVE_KEY = "WarBoardEquipGraph";
	protected static ListViewSort warBoardSortStatus; // 0x8
	[SerializeField] // RVA: 0xC4C348 Offset: 0xC4C348 VA: 0xC4C348
	protected EquipGraphListMenu equipGraphListMenu; // 0x138
	[SerializeField] // RVA: 0xC4C358 Offset: 0xC4C358 VA: 0xC4C358
	protected UILabel infoDataLabel; // 0x140
	[SerializeField] // RVA: 0xC4C368 Offset: 0xC4C368 VA: 0xC4C368
	protected UILabel infoData2Label; // 0x148
	[SerializeField] // RVA: 0xC4C378 Offset: 0xC4C378 VA: 0xC4C378
	protected EquipGraphServantItemDraw servantItemDraw; // 0x150
	[SerializeField] // RVA: 0xC4C388 Offset: 0xC4C388 VA: 0xC4C388
	protected UISprite sortExplanationSprite; // 0x158
	[SerializeField] // RVA: 0xC4C398 Offset: 0xC4C398 VA: 0xC4C398
	protected UISprite filterSprite; // 0x160
	[SerializeField] // RVA: 0xC4C3A8 Offset: 0xC4C3A8 VA: 0xC4C3A8
	protected UICommonButton bonusFilterKindButton; // 0x168
	[SerializeField] // RVA: 0xC4C3B8 Offset: 0xC4C3B8 VA: 0xC4C3B8
	protected UILabel bonusFilterKindLabel; // 0x170
	[SerializeField] // RVA: 0xC4C3C8 Offset: 0xC4C3C8 VA: 0xC4C3C8
	protected ListViewItemSeed normalSizeSeed; // 0x178
	[SerializeField] // RVA: 0xC4C3D8 Offset: 0xC4C3D8 VA: 0xC4C3D8
	protected ListViewItemSeed smallSizeSeed; // 0x180
	[SerializeField] // RVA: 0xC4C3E8 Offset: 0xC4C3E8 VA: 0xC4C3E8
	protected ListViewItemSeed extremelySmallSizeSeed; // 0x188
	protected EquipGraphListViewManager.InitMode initMode; // 0x190
	protected ListViewSort.ScaleType scaleType; // 0x194
	[CompilerGeneratedAttribute] // RVA: 0xC4C3F8 Offset: 0xC4C3F8 VA: 0xC4C3F8
	[DebuggerBrowsableAttribute] // RVA: 0xC4C3F8 Offset: 0xC4C3F8 VA: 0xC4C3F8
	private EquipGraphListViewManager.CallbackFunc callbackFunc; // 0x198
	[CompilerGeneratedAttribute] // RVA: 0xC4C434 Offset: 0xC4C434 VA: 0xC4C434
	[DebuggerBrowsableAttribute] // RVA: 0xC4C434 Offset: 0xC4C434 VA: 0xC4C434
	private Action callbackFunc2; // 0x1A0
	protected int callbackCount; // 0x1A8
	protected bool isQuestStart; // 0x1AC
	protected int[] bonusEventIdList; // 0x1B0
	protected EquipGraphServantItem servantItemInfo; // 0x1B8
	protected int memberIndex; // 0x1C0
	protected int baseCost; // 0x1C4
	protected int maxCost; // 0x1C8
	protected EquipGraphListViewItem selectItem; // 0x1D0
	[CompilerGeneratedAttribute] // RVA: 0xC4C470 Offset: 0xC4C470 VA: 0xC4C470
	[DebuggerBrowsableAttribute] // RVA: 0xC4C470 Offset: 0xC4C470 VA: 0xC4C470
	private Action selectItemCallbackFunc; // 0x1D8

	// Properties
	public List<EquipGraphListViewObject> ObjectList { get; }
	public List<EquipGraphListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x1705EC4 Offset: 0x1705EC4 VA: 0x1705EC4
	public void .ctor() { }

	// RVA: 0x1705ECC Offset: 0x1705ECC VA: 0x1705ECC
	protected void add_callbackFunc(EquipGraphListViewManager.CallbackFunc value) { }

	// RVA: 0x1705FBC Offset: 0x1705FBC VA: 0x1705FBC
	protected void remove_callbackFunc(EquipGraphListViewManager.CallbackFunc value) { }

	// RVA: 0x17060AC Offset: 0x17060AC VA: 0x17060AC
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x170619C Offset: 0x170619C VA: 0x170619C
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x170628C Offset: 0x170628C VA: 0x170628C
	protected void add_selectItemCallbackFunc(Action value) { }

	// RVA: 0x170637C Offset: 0x170637C VA: 0x170637C
	protected void remove_selectItemCallbackFunc(Action value) { }

	// RVA: 0x170646C Offset: 0x170646C VA: 0x170646C
	public static void DeleteContinueData() { }

	// RVA: 0x170650C Offset: 0x170650C VA: 0x170650C
	public static void InitLoad() { }

	// RVA: 0x17065AC Offset: 0x17065AC VA: 0x17065AC
	public List<EquipGraphListViewObject> get_ObjectList() { }

	// RVA: 0x1706778 Offset: 0x1706778 VA: 0x1706778
	public List<EquipGraphListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1701570 Offset: 0x1701570 VA: 0x1701570
	public EquipGraphServantItem GetServantItemInfo() { }

	// RVA: 0x16FF8BC Offset: 0x16FF8BC VA: 0x16FF8BC
	public void CreateList(PartyListViewItem partyItem, int member, EventUpValSetupInfo setupInfo) { }

	// RVA: 0x1700358 Offset: 0x1700358 VA: 0x1700358
	public void CreateList(WarBoardPartyListViewItem partyItem, int member, EventUpValSetupInfo setupInfo) { }

	// RVA: 0x1701864 Offset: 0x1701864 VA: 0x1701864
	public void ModifyList(bool isIconSizeChange = False) { }

	// RVA: 0x16FF030 Offset: 0x16FF030 VA: 0x16FF030
	public void DestroyList() { }

	// RVA: 0x1700DE0 Offset: 0x1700DE0 VA: 0x1700DE0
	public EquipGraphListViewItem GetItem(int index) { }

	// RVA: 0x1702194 Offset: 0x1702194 VA: 0x1702194
	public bool GetSwapLockList(out long[] lockList, out long[] unlockList) { }

	// RVA: 0x170247C Offset: 0x170247C VA: 0x170247C
	public bool GetSwapChoiceList(out long[] choiceList, out long[] unchoiceList) { }

	// RVA: 0x17076C4 Offset: 0x17076C4 VA: 0x17076C4
	protected void RefrashListDisp() { }

	// RVA: 0x1707994 Offset: 0x1707994 VA: 0x1707994 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1700C38 Offset: 0x1700C38 VA: 0x1700C38
	public void SetMode(EquipGraphListViewManager.InitMode mode, EquipGraphListViewManager.CallbackFunc callback) { }

	// RVA: 0x1707ACC Offset: 0x1707ACC VA: 0x1707ACC
	public void SetMode(EquipGraphListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1700C40 Offset: 0x1700C40 VA: 0x1700C40
	public void SetMode(EquipGraphListViewManager.InitMode mode) { }

	// RVA: 0x1707CC8 Offset: 0x1707CC8 VA: 0x1707CC8
	protected void RequestListObject(EquipGraphListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1707AD4 Offset: 0x1707AD4 VA: 0x1707AD4
	protected void RequestListObject(EquipGraphListViewObject.InitMode mode) { }

	// RVA: 0x1707FD8 Offset: 0x1707FD8 VA: 0x1707FD8
	protected void OnMoveEnd() { }

	// RVA: 0x17080A4 Offset: 0x17080A4 VA: 0x17080A4
	public int GetSelect() { }

	// RVA: 0x1701134 Offset: 0x1701134 VA: 0x1701134
	public EquipGraphListViewItem GetSelectItem() { }

	// RVA: 0x1708220 Offset: 0x1708220 VA: 0x1708220
	public void OnClickDecide() { }

	// RVA: 0x17084A8 Offset: 0x17084A8 VA: 0x17084A8
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x17084AC Offset: 0x17084AC VA: 0x17084AC
	protected void OnClickSelectListView(ListViewObject obj) { }

	// RVA: 0x1702D5C Offset: 0x1702D5C VA: 0x1702D5C
	public void SelectEquip(EquipGraphListViewItem item, Action callback) { }

	// RVA: 0x170883C Offset: 0x170883C VA: 0x170883C
	protected void EndSelectConfirm(bool result) { }

	// RVA: 0x1708C94 Offset: 0x1708C94 VA: 0x1708C94
	protected void OnLongPushListView(ListViewObject obj) { }

	// RVA: 0x1708D38 Offset: 0x1708D38 VA: 0x1708D38
	public void OnClickFilterKind() { }

	// RVA: 0x1708E30 Offset: 0x1708E30 VA: 0x1708E30
	public void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x1708EFC Offset: 0x1708EFC VA: 0x1708EFC
	protected void EndCloseSelectFilterKind() { }

	// RVA: 0x1707900 Offset: 0x1707900 VA: 0x1707900
	private void SetFilterButtonImage() { }

	// RVA: 0x1708F00 Offset: 0x1708F00 VA: 0x1708F00
	public void OnClickBonusFilterKind() { }

	// RVA: 0x1709000 Offset: 0x1709000 VA: 0x1709000
	public void OnClickSortKind() { }

	// RVA: 0x17090F8 Offset: 0x17090F8 VA: 0x17090F8
	protected void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x17091BC Offset: 0x17091BC VA: 0x17091BC
	protected void EndCloseSelectSortKind() { }

	// RVA: 0x17091C0 Offset: 0x17091C0 VA: 0x17091C0
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x17092B0 Offset: 0x17092B0 VA: 0x17092B0 Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x1705220 Offset: 0x1705220 VA: 0x1705220
	public long GetAmountSortValue(int svtId) { }

	// RVA: 0x17039A8 Offset: 0x17039A8 VA: 0x17039A8
	public void ChangeIconScale() { }

	// RVA: 0x16FFF8C Offset: 0x16FFF8C VA: 0x16FFF8C
	public string GetScaleButtonSpriteName() { }

	// RVA: 0x17095DC Offset: 0x17095DC VA: 0x17095DC
	private static void .cctor() { }
}

// Namespace: 
public enum EquipGraphListViewManager.InitMode // TypeDefIndex: 5431
{
	// Fields
	public int value__; // 0x0
	public const EquipGraphListViewManager.InitMode NONE = 0;
	public const EquipGraphListViewManager.InitMode VALID = 1;
	public const EquipGraphListViewManager.InitMode INPUT = 2;
	public const EquipGraphListViewManager.InitMode MODIFY = 3;
}

// Namespace: 
public enum EquipGraphListViewManager.ResultKind // TypeDefIndex: 5432
{
	// Fields
	public int value__; // 0x0
	public const EquipGraphListViewManager.ResultKind CANCEL = 0;
	public const EquipGraphListViewManager.ResultKind DECIDE = 1;
	public const EquipGraphListViewManager.ResultKind SELECT = 2;
	public const EquipGraphListViewManager.ResultKind SHOW_STATUS = 3;
}

// Namespace: 
public sealed class EquipGraphListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 5433
{
	// Methods

	// RVA: 0x1700C28 Offset: 0x1700C28 VA: 0x1700C28
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1708264 Offset: 0x1708264 VA: 0x1708264 Slot: 11
	public virtual void Invoke(EquipGraphListViewManager.ResultKind kind, int result) { }

	// RVA: 0x1709698 Offset: 0x1709698 VA: 0x1709698 Slot: 12
	public virtual IAsyncResult BeginInvoke(EquipGraphListViewManager.ResultKind kind, int result, AsyncCallback callback, object object) { }

	// RVA: 0x1709740 Offset: 0x1709740 VA: 0x1709740 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class EquipGraphListViewObject : ListViewObject // TypeDefIndex: 5434
{
	// Fields
	protected EquipGraphListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC4C4AC Offset: 0xC4C4AC VA: 0xC4C4AC
	[DebuggerBrowsableAttribute] // RVA: 0xC4C4AC Offset: 0xC4C4AC VA: 0xC4C4AC
	private Action callbackFunc; // 0x70
	protected EquipGraphListViewItemDraw itemDraw; // 0x78
	protected EquipGraphListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x170974C Offset: 0x170974C VA: 0x170974C
	public void .ctor() { }

	// RVA: 0x17097B4 Offset: 0x17097B4 VA: 0x17097B4
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x17098A0 Offset: 0x17098A0 VA: 0x17098A0
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x170998C Offset: 0x170998C VA: 0x170998C
	protected void Awake() { }

	// RVA: 0x1709A00 Offset: 0x1709A00 VA: 0x1709A00
	private void OnDestroy() { }

	// RVA: 0x17069D4 Offset: 0x17069D4 VA: 0x17069D4
	public EquipGraphListViewItem GetItem() { }

	// RVA: 0x1709AAC Offset: 0x1709AAC VA: 0x1709AAC Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1709ADC Offset: 0x1709ADC VA: 0x1709ADC Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x1709AD4 Offset: 0x1709AD4 VA: 0x1709AD4
	protected void InitItem() { }

	// RVA: 0x1709B04 Offset: 0x1709B04 VA: 0x1709B04 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x1709C08 Offset: 0x1709C08 VA: 0x1709C08 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1709C90 Offset: 0x1709C90 VA: 0x1709C90
	public void Init(EquipGraphListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1707ED0 Offset: 0x1707ED0 VA: 0x1707ED0
	public void Init(EquipGraphListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x1707F54 Offset: 0x1707F54 VA: 0x1707F54
	public void Init(EquipGraphListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x1707A4C Offset: 0x1707A4C VA: 0x1707A4C
	public void Init(EquipGraphListViewObject.InitMode initMode) { }

	// RVA: 0x1709E70 Offset: 0x1709E70 VA: 0x1709E70
	protected void SetupDisp() { }

	// RVA: 0x1709F80 Offset: 0x1709F80 VA: 0x1709F80
	public void OnClickSelect() { }

	// RVA: 0x170A058 Offset: 0x170A058 VA: 0x170A058
	public void OnLongPush() { }
}

// Namespace: 
public enum EquipGraphListViewObject.InitMode // TypeDefIndex: 5435
{
	// Fields
	public int value__; // 0x0
	public const EquipGraphListViewObject.InitMode INVISIBLE = 0;
	public const EquipGraphListViewObject.InitMode INVALID = 1;
	public const EquipGraphListViewObject.InitMode VALID = 2;
	public const EquipGraphListViewObject.InitMode INPUT = 3;
	public const EquipGraphListViewObject.InitMode MODIFY = 4;
}

// Namespace: 
protected enum EquipGraphListViewObject.State // TypeDefIndex: 5436
{
	// Fields
	public int value__; // 0x0
	public const EquipGraphListViewObject.State INIT = 0;
	public const EquipGraphListViewObject.State IDLE = 1;
	public const EquipGraphListViewObject.State MOVE = 2;
	public const EquipGraphListViewObject.State INPUT = 3;
}

// Namespace: 
public class EquipGraphServantItem // TypeDefIndex: 5437
{
	// Fields
	protected PartyOrganizationListViewItem baseItem; // 0x10
	protected UserServantEntity userServantEntity; // 0x18
	protected ServantEntity servantEntity; // 0x20
	protected IconLabelInfo iconLabelInfo; // 0x28
	protected int classId; // 0x30
	protected int rarityId; // 0x34
	protected long oldEquipTargetId; // 0x38
	protected long equipTargetId; // 0x40
	protected UserServantEntity equipUserSvtEntity; // 0x48
	protected ServantEntity equipServantEntity; // 0x50

	// Properties
	public UserServantEntity UserServant { get; }
	public UserServantEntity EquipUserServant { get; }
	public string NameText { get; }
	public string ClassName { get; }
	public int Atk { get; }
	public int AdjustAtk { get; }
	public int Hp { get; }
	public int AdjustHp { get; }
	public int Cost { get; }
	public long OldEquipUserSvtId { get; }
	public long EquipUserSvtId { get; }
	public bool IsEquip { get; }
	public int EquipLimitCount { get; }
	public int EquipLimitCountMax { get; }
	public int EquipAtk { get; }
	public int EquipHp { get; }
	public int EquipCost { get; }
	public IconLabelInfo IconInfo { get; }

	// Methods

	// RVA: 0x1706A58 Offset: 0x1706A58 VA: 0x1706A58
	public void .ctor(PartyOrganizationListViewItem baseItem) { }

	// RVA: 0x1708508 Offset: 0x1708508 VA: 0x1708508
	public void SetEquipTarget(long equipUserSvtId) { }

	// RVA: 0x1701578 Offset: 0x1701578 VA: 0x1701578
	public UserServantEntity get_UserServant() { }

	// RVA: 0x170A0D4 Offset: 0x170A0D4 VA: 0x170A0D4
	public UserServantEntity get_EquipUserServant() { }

	// RVA: 0x17086A0 Offset: 0x17086A0 VA: 0x17086A0
	public string get_NameText() { }

	// RVA: 0x170875C Offset: 0x170875C VA: 0x170875C
	public string get_ClassName() { }

	// RVA: 0x170A0DC Offset: 0x170A0DC VA: 0x170A0DC
	public int get_Atk() { }

	// RVA: 0x170A0F4 Offset: 0x170A0F4 VA: 0x170A0F4
	public int get_AdjustAtk() { }

	// RVA: 0x170A10C Offset: 0x170A10C VA: 0x170A10C
	public int get_Hp() { }

	// RVA: 0x170A124 Offset: 0x170A124 VA: 0x170A124
	public int get_AdjustHp() { }

	// RVA: 0x170A13C Offset: 0x170A13C VA: 0x170A13C
	public int get_Cost() { }

	// RVA: 0x17076BC Offset: 0x17076BC VA: 0x17076BC
	public long get_OldEquipUserSvtId() { }

	// RVA: 0x17075E4 Offset: 0x17075E4 VA: 0x17075E4
	public long get_EquipUserSvtId() { }

	// RVA: 0x170A154 Offset: 0x170A154 VA: 0x170A154
	public bool get_IsEquip() { }

	// RVA: 0x170A164 Offset: 0x170A164 VA: 0x170A164
	public int get_EquipLimitCount() { }

	// RVA: 0x170A1EC Offset: 0x170A1EC VA: 0x170A1EC
	public int get_EquipLimitCountMax() { }

	// RVA: 0x170A204 Offset: 0x170A204 VA: 0x170A204
	public int get_EquipAtk() { }

	// RVA: 0x170A21C Offset: 0x170A21C VA: 0x170A21C
	public int get_EquipHp() { }

	// RVA: 0x17075CC Offset: 0x17075CC VA: 0x17075CC
	public int get_EquipCost() { }

	// RVA: 0x170A234 Offset: 0x170A234 VA: 0x170A234
	public IconLabelInfo get_IconInfo() { }

	// RVA: 0x170A23C Offset: 0x170A23C VA: 0x170A23C
	public bool GetNpInfo(out TreasureDvcInfo tdInfo) { }

	// RVA: 0x170A2D4 Offset: 0x170A2D4 VA: 0x170A2D4
	public int GetTreasureDeviceLevelIcon() { }

	// RVA: 0x170A2E8 Offset: 0x170A2E8 VA: 0x170A2E8
	public QuestRestrictionInfo GetQuestRestrictionInfo() { }
}

// Namespace: 
public class EquipGraphServantItemDraw : MonoBehaviour // TypeDefIndex: 5438
{
	// Fields
	[SerializeField] // RVA: 0xC4C4E8 Offset: 0xC4C4E8 VA: 0xC4C4E8
	protected ServantFaceIconComponent servantFaceIcon; // 0x18
	[SerializeField] // RVA: 0xC4C4F8 Offset: 0xC4C4F8 VA: 0xC4C4F8
	protected UIIconLabel servantCostIconLabel; // 0x20
	[SerializeField] // RVA: 0xC4C508 Offset: 0xC4C508 VA: 0xC4C508
	protected UISprite noneEquipSprite; // 0x28
	[SerializeField] // RVA: 0xC4C518 Offset: 0xC4C518 VA: 0xC4C518
	protected UIMeshSprite equipSprite; // 0x30
	[SerializeField] // RVA: 0xC4C528 Offset: 0xC4C528 VA: 0xC4C528
	protected UISprite equipLimitCountSprite; // 0x38
	[SerializeField] // RVA: 0xC4C538 Offset: 0xC4C538 VA: 0xC4C538
	protected UILabel skillNameLabel; // 0x40
	[SerializeField] // RVA: 0xC4C548 Offset: 0xC4C548 VA: 0xC4C548
	protected UILabel skillExplanationLabel; // 0x48
	[SerializeField] // RVA: 0xC4C558 Offset: 0xC4C558 VA: 0xC4C558
	protected UIIconLabel costIconLabel; // 0x50
	[SerializeField] // RVA: 0xC4C568 Offset: 0xC4C568 VA: 0xC4C568
	protected UIIconLabel differCostIconLabel; // 0x58
	[SerializeField] // RVA: 0xC4C578 Offset: 0xC4C578 VA: 0xC4C578
	protected UIIconLabel hpIconLabel; // 0x60
	[SerializeField] // RVA: 0xC4C588 Offset: 0xC4C588 VA: 0xC4C588
	protected UIIconLabel differHpIconLabel; // 0x68
	[SerializeField] // RVA: 0xC4C598 Offset: 0xC4C598 VA: 0xC4C598
	protected UIIconLabel attackIconLabel; // 0x70
	[SerializeField] // RVA: 0xC4C5A8 Offset: 0xC4C5A8 VA: 0xC4C5A8
	protected UIIconLabel differAttackIconLabel; // 0x78
	[SerializeField] // RVA: 0xC4C5B8 Offset: 0xC4C5B8 VA: 0xC4C5B8
	protected UICommonButton equipButton; // 0x80
	[SerializeField] // RVA: 0xC4C5C8 Offset: 0xC4C5C8 VA: 0xC4C5C8
	protected UICommonButton decideButton; // 0x88

	// Methods

	// RVA: 0x170A318 Offset: 0x170A318 VA: 0x170A318
	public void .ctor() { }

	// RVA: 0x1706C48 Offset: 0x1706C48 VA: 0x1706C48
	public void SetItem(EquipGraphServantItem item) { }

	// RVA: 0x1707518 Offset: 0x1707518 VA: 0x1707518
	public void SetInput(bool isInput) { }
}

// Namespace: 
public enum EquipGraphServantItemDraw.DispMode // TypeDefIndex: 5439
{
	// Fields
	public int value__; // 0x0
	public const EquipGraphServantItemDraw.DispMode INVISIBLE = 0;
	public const EquipGraphServantItemDraw.DispMode INVALID = 1;
	public const EquipGraphServantItemDraw.DispMode VALID = 2;
	public const EquipGraphServantItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class ErrorDialog : BaseDialog // TypeDefIndex: 5440
{
	// Fields
	[SerializeField] // RVA: 0xC4C5D8 Offset: 0xC4C5D8 VA: 0xC4C5D8
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC4C5E8 Offset: 0xC4C5E8 VA: 0xC4C5E8
	protected UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC4C5F8 Offset: 0xC4C5F8 VA: 0xC4C5F8
	protected UILabel decideLabel; // 0x68
	[SerializeField] // RVA: 0xC4C608 Offset: 0xC4C608 VA: 0xC4C608
	protected UILabel cancelLabel; // 0x70
	[SerializeField] // RVA: 0xC4C618 Offset: 0xC4C618 VA: 0xC4C618
	protected string decideTextCode; // 0x78
	[SerializeField] // RVA: 0xC4C628 Offset: 0xC4C628 VA: 0xC4C628
	protected string cancelTextCode; // 0x80
	protected ErrorDialog.ClickDelegate clickFunc; // 0x88
	protected Action closeEndFunc; // 0x90
	protected bool isButtonEnable; // 0x98

	// Methods

	// RVA: 0x1866544 Offset: 0x1866544 VA: 0x1866544
	public void .ctor() { }

	// RVA: 0x18665AC Offset: 0x18665AC VA: 0x18665AC
	public void Init() { }

	// RVA: 0x186676C Offset: 0x186676C VA: 0x186676C
	public void Open() { }

	// RVA: 0x1866B70 Offset: 0x1866B70 VA: 0x1866B70
	public void Open(string message) { }

	// RVA: 0x1866BB0 Offset: 0x1866BB0 VA: 0x1866BB0
	public void Open(string title, string message) { }

	// RVA: 0x1866BE4 Offset: 0x1866BE4 VA: 0x1866BE4
	public void Open(string title, string message, string decideTxt, string cancleTxt) { }

	// RVA: 0x1866BEC Offset: 0x1866BEC VA: 0x1866BEC
	public void Open(string title, string message, string decideTxt, string cancleTxt, ErrorDialog.ClickDelegate func) { }

	// RVA: 0x18667A8 Offset: 0x18667A8 VA: 0x18667A8
	public void Open(string title, string message, ErrorDialog.ClickDelegate func, bool ableToCloseTapOutDialog = True, float closeButtonY = -1, UILabel.Effect messageEffect = 1, Nullable<Vector2> effectDistance) { }

	// RVA: 0x1866E00 Offset: 0x1866E00 VA: 0x1866E00
	private void SetAbleToCloseTapOutDialog(bool ableToCloseTapOutDialog) { }

	// RVA: 0x1866F04 Offset: 0x1866F04 VA: 0x1866F04
	protected void EndOpen() { }

	// RVA: 0x1866F10 Offset: 0x1866F10 VA: 0x1866F10
	public void Close() { }

	// RVA: 0x1866F18 Offset: 0x1866F18 VA: 0x1866F18
	public void Close(Action callback) { }

	// RVA: 0x1866FA4 Offset: 0x1866FA4 VA: 0x1866FA4
	protected void EndClose() { }

	// RVA: 0x1867008 Offset: 0x1867008 VA: 0x1867008
	public void OnClickDecide() { }

	// RVA: 0x18672C4 Offset: 0x18672C4 VA: 0x18672C4
	public void OnClickCancel() { }

	// RVA: 0x1867354 Offset: 0x1867354 VA: 0x1867354
	public void OnClickClose() { }

	// RVA: 0x18673E4 Offset: 0x18673E4 VA: 0x18673E4
	public void OnClickDecide2() { }

	// RVA: 0x1867474 Offset: 0x1867474 VA: 0x1867474
	protected void OnEnable() { }
}

// Namespace: 
public sealed class ErrorDialog.ClickDelegate : MulticastDelegate // TypeDefIndex: 5441
{
	// Methods

	// RVA: 0x186753C Offset: 0x186753C VA: 0x186753C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1867098 Offset: 0x1867098 VA: 0x1867098 Slot: 11
	public virtual void Invoke(bool isDecide) { }

	// RVA: 0x186754C Offset: 0x186754C VA: 0x186754C Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isDecide, AsyncCallback callback, object object) { }

	// RVA: 0x18675DC Offset: 0x18675DC VA: 0x18675DC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class EventInfoAssistLevelCounterComponent : MonoBehaviour // TypeDefIndex: 5442
{
	// Fields
	[SerializeField] // RVA: 0xC4C638 Offset: 0xC4C638 VA: 0xC4C638
	private UISprite skillSprite; // 0x18
	[SerializeField] // RVA: 0xC4C648 Offset: 0xC4C648 VA: 0xC4C648
	private UISprite skillIconSprite; // 0x20
	[SerializeField] // RVA: 0xC4C658 Offset: 0xC4C658 VA: 0xC4C658
	private UILabel levelLabel; // 0x28
	[SerializeField] // RVA: 0xC4C668 Offset: 0xC4C668 VA: 0xC4C668
	private UILabel maxLevelLabel; // 0x30
	[SerializeField] // RVA: 0xC4C678 Offset: 0xC4C678 VA: 0xC4C678
	private string skillSpriteNameFormat; // 0x38
	private EventInfoAssistLevelCounterComponent.AssistData assistData; // 0x40

	// Methods

	// RVA: 0x187B87C Offset: 0x187B87C VA: 0x187B87C
	public void .ctor() { }

	// RVA: 0x187B884 Offset: 0x187B884 VA: 0x187B884
	public void Setup(EventInfoAssistLevelCounterComponent.AssistData assistData) { }

	// RVA: 0x187B88C Offset: 0x187B88C VA: 0x187B88C
	public void UpdateDisp() { }
}

// Namespace: 
[Serializable]
public class EventInfoAssistLevelCounterComponent.AssistData // TypeDefIndex: 5443
{
	// Fields
	public int assistId; // 0x10
	public Vector2 objectPosition; // 0x14
	public Vector2 iconPosition; // 0x1C
	public Vector2 levelPosition; // 0x24
	public Vector2 maxLevelPosition; // 0x2C

	// Methods

	// RVA: 0x187BD84 Offset: 0x187BD84 VA: 0x187BD84
	public void .ctor() { }
}

// Namespace: 
public class EventInfoAssistLevelCounterControl : EventInfoUIBase // TypeDefIndex: 5444
{
	// Fields
	[SerializeField] // RVA: 0xC4C688 Offset: 0xC4C688 VA: 0xC4C688
	private UISprite titleSprite; // 0x28
	[SerializeField] // RVA: 0xC4C698 Offset: 0xC4C698 VA: 0xC4C698
	private UISprite openDialogButtonSprite; // 0x30
	[SerializeField] // RVA: 0xC4C6A8 Offset: 0xC4C6A8 VA: 0xC4C6A8
	private GameObject rootObject; // 0x38
	[SerializeField] // RVA: 0xC4C6B8 Offset: 0xC4C6B8 VA: 0xC4C6B8
	private EventInfoAssistLevelCounterComponent baseAssistLevelPrefab; // 0x40
	[SerializeField] // RVA: 0xC4C6C8 Offset: 0xC4C6C8 VA: 0xC4C6C8
	private List<EventInfoAssistLevelCounterComponent.AssistData> assistDataList; // 0x48
	[SerializeField] // RVA: 0xC4C6D8 Offset: 0xC4C6D8 VA: 0xC4C6D8
	private string titleSpriteName; // 0x50
	[SerializeField] // RVA: 0xC4C6E8 Offset: 0xC4C6E8 VA: 0xC4C6E8
	private string buttonSpriteName; // 0x58
	private List<EventInfoAssistLevelCounterComponent> assistCompnentList; // 0x60
	private EventUiEntity eventUiEntity; // 0x68
	[CompilerGeneratedAttribute] // RVA: 0xC4C6F8 Offset: 0xC4C6F8 VA: 0xC4C6F8
	private static Func<EventUiValueEntity, int> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x187BD8C Offset: 0x187BD8C VA: 0x187BD8C
	public void .ctor() { }

	// RVA: 0x187BD94 Offset: 0x187BD94 VA: 0x187BD94 Slot: 4
	public override void Initialization(EventUiEntity entity) { }

	// RVA: 0x187BE0C Offset: 0x187BE0C VA: 0x187BE0C Slot: 5
	public override void Setup(EventUiValueEntity[] entitys) { }

	// RVA: 0x187C430 Offset: 0x187C430 VA: 0x187C430 Slot: 9
	public override void Redisplay() { }

	// RVA: 0x187C554 Offset: 0x187C554 VA: 0x187C554
	public void OnClickOpenDialogButton() { }

	// RVA: 0x187C268 Offset: 0x187C268 VA: 0x187C268
	private EventInfoAssistLevelCounterComponent CreateAssistLevel(EventUiValueEntity ent) { }

	// RVA: 0x187C198 Offset: 0x187C198 VA: 0x187C198
	private EventInfoAssistLevelCounterComponent.AssistData GetAssistData(int assistId) { }

	// RVA: 0x187C658 Offset: 0x187C658 VA: 0x187C658
	private void CloseAssistEffectFonfirmDialog() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7C74 Offset: 0xCC7C74 VA: 0xCC7C74
	// RVA: 0x187C6B8 Offset: 0x187C6B8 VA: 0x187C6B8
	private static int <Setup>m__0(EventUiValueEntity ent) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41D44 Offset: 0xC41D44 VA: 0xC41D44
private sealed class EventInfoAssistLevelCounterControl.<GetAssistData>c__AnonStorey0 // TypeDefIndex: 5445
{
	// Fields
	internal int assistId; // 0x10

	// Methods

	// RVA: 0x187C650 Offset: 0x187C650 VA: 0x187C650
	public void .ctor() { }

	// RVA: 0x187C6E0 Offset: 0x187C6E0 VA: 0x187C6E0
	internal bool <>m__0(EventInfoAssistLevelCounterComponent.AssistData data) { }
}

// Namespace: 
public class EventInfoBoxGachaCounter : EventInfoUIBase // TypeDefIndex: 5446
{
	// Fields
	private static readonly long TOTAL_COUNT_MAX; // 0x0
	private static readonly long NEXT_COUNT_MAX; // 0x8
	[SerializeField] // RVA: 0xC4C708 Offset: 0xC4C708 VA: 0xC4C708
	private GameObject totalCounterRoot; // 0x28
	[SerializeField] // RVA: 0xC4C718 Offset: 0xC4C718 VA: 0xC4C718
	private GameObject nextCounterRoot; // 0x30
	[SerializeField] // RVA: 0xC4C728 Offset: 0xC4C728 VA: 0xC4C728
	private UISprite totalCounterBg; // 0x38
	[SerializeField] // RVA: 0xC4C738 Offset: 0xC4C738 VA: 0xC4C738
	private UISprite nextCounterBg; // 0x40
	[SerializeField] // RVA: 0xC4C748 Offset: 0xC4C748 VA: 0xC4C748
	private UISprite accessorySp; // 0x48
	[SerializeField] // RVA: 0xC4C758 Offset: 0xC4C758 VA: 0xC4C758
	private UILabel totalCounter; // 0x50
	[SerializeField] // RVA: 0xC4C768 Offset: 0xC4C768 VA: 0xC4C768
	private UILabel nextCounter; // 0x58
	[SerializeField] // RVA: 0xC4C778 Offset: 0xC4C778 VA: 0xC4C778
	private UISprite completeSprite; // 0x60
	[SerializeField] // RVA: 0xC4C788 Offset: 0xC4C788 VA: 0xC4C788
	private float nextCounterRootY; // 0x68
	[SerializeField] // RVA: 0xC4C798 Offset: 0xC4C798 VA: 0xC4C798
	private float accessoryDefaultY; // 0x6C
	[SerializeField] // RVA: 0xC4C7A8 Offset: 0xC4C7A8 VA: 0xC4C7A8
	private float accssesoryNoNextY; // 0x70
	private int eventId; // 0x74
	private long totalCount; // 0x78
	private long nextCount; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC4C7B8 Offset: 0xC4C7B8 VA: 0xC4C7B8
	private static Func<QuestReleaseEntity, bool> <>f__am$cache0; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC4C7C8 Offset: 0xC4C7C8 VA: 0xC4C7C8
	private static Func<long, long> <>f__am$cache1; // 0x18

	// Methods

	// RVA: 0x187C71C Offset: 0x187C71C VA: 0x187C71C
	public void .ctor() { }

	// RVA: 0x187C738 Offset: 0x187C738 VA: 0x187C738
	private void Start() { }

	// RVA: 0x187C73C Offset: 0x187C73C VA: 0x187C73C Slot: 5
	public override void Setup(EventUiValueEntity[] entity) { }

	// RVA: 0x187C940 Offset: 0x187C940 VA: 0x187C940 Slot: 11
	protected override void SetEventId(object val) { }

	// RVA: 0x187C9A8 Offset: 0x187C9A8 VA: 0x187C9A8 Slot: 13
	protected override void SetTotalBoxGacha(object obj) { }

	// RVA: 0x187C808 Offset: 0x187C808 VA: 0x187C808
	private void UpdatePosition() { }

	// RVA: 0x187CD44 Offset: 0x187CD44 VA: 0x187CD44
	private long GetNextCount() { }

	// RVA: 0x187D308 Offset: 0x187D308 VA: 0x187D308
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7C84 Offset: 0xCC7C84 VA: 0xCC7C84
	// RVA: 0x187D36C Offset: 0x187D36C VA: 0x187D36C
	private static bool <GetNextCount>m__0(QuestReleaseEntity release) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7C94 Offset: 0xCC7C94 VA: 0xCC7C94
	// RVA: 0x187D39C Offset: 0x187D39C VA: 0x187D39C
	private static long <GetNextCount>m__1(long q) { }
}

// Namespace: 
public class EventInfoChronologyButton : EventInfoUIBase // TypeDefIndex: 5447
{
	// Fields
	private const string PathDialogAsset = "Terminal/Info/TitleInfoChronologyDialogPrefab";
	private const string NameButtonSprite = "chronology_button";
	[SerializeField] // RVA: 0xC4C7D8 Offset: 0xC4C7D8 VA: 0xC4C7D8
	private UICommonButton button; // 0x28
	[SerializeField] // RVA: 0xC4C7E8 Offset: 0xC4C7E8 VA: 0xC4C7E8
	private UISprite buttonSprite; // 0x30
	[SerializeField] // RVA: 0xC4C7F8 Offset: 0xC4C7F8 VA: 0xC4C7F8
	private UILabel buttonLabel; // 0x38
	private EventInfoChronologyDialog dialogChronology; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC4C808 Offset: 0xC4C808 VA: 0xC4C808
	private static Action <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x187D3A0 Offset: 0x187D3A0 VA: 0x187D3A0
	public void .ctor() { }

	// RVA: 0x187D3A8 Offset: 0x187D3A8 VA: 0x187D3A8
	private void OnDestroy() { }

	// RVA: 0x187D3B4 Offset: 0x187D3B4 VA: 0x187D3B4
	public void OnClickOpen() { }

	// RVA: 0x187D610 Offset: 0x187D610 VA: 0x187D610 Slot: 4
	public override void Initialization(EventUiEntity entity) { }

	// RVA: 0x187D7A4 Offset: 0x187D7A4 VA: 0x187D7A4 Slot: 8
	public override void ReleaseAsset() { }

	// RVA: 0x187D870 Offset: 0x187D870 VA: 0x187D870 Slot: 10
	public override void SwitchSpotState(bool isOpen) { }

	// RVA: 0x187D8C4 Offset: 0x187D8C4 VA: 0x187D8C4
	private void CallbackLoadAsset(AssetData assetData) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7CA4 Offset: 0xCC7CA4 VA: 0xCC7CA4
	// RVA: 0x187DA3C Offset: 0x187DA3C VA: 0x187DA3C
	private static void <OnClickOpen>m__0() { }
}
