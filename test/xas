	|-RVA: 0xD5F3CC Offset: 0xD5F3CC VA: 0xD5F3CC
	|-Array.InternalEnumerator<AnimatorStateInfo>.get_Current
	|
	|-RVA: 0xD5F40C Offset: 0xD5F40C VA: 0xD5F40C
	|-Array.InternalEnumerator<BeforeRenderHelper.OrderBlock>.get_Current
	|
	|-RVA: 0xD5F44C Offset: 0xD5F44C VA: 0xD5F44C
	|-Array.InternalEnumerator<Bounds>.get_Current
	|
	|-RVA: 0xD5F48C Offset: 0xD5F48C VA: 0xD5F48C
	|-Array.InternalEnumerator<ClothSkinningCoefficient>.get_Current
	|
	|-RVA: 0xD5F4CC Offset: 0xD5F4CC VA: 0xD5F4CC
	|-Array.InternalEnumerator<ClothSphereColliderPair>.get_Current
	|
	|-RVA: 0xD5F50C Offset: 0xD5F50C VA: 0xD5F50C
	|-Array.InternalEnumerator<Color32>.get_Current
	|
	|-RVA: 0xD5F560 Offset: 0xD5F560 VA: 0xD5F560
	|-Array.InternalEnumerator<Color>.get_Current
	|
	|-RVA: 0xD5F5A0 Offset: 0xD5F5A0 VA: 0xD5F5A0
	|-Array.InternalEnumerator<ContactPoint2D>.get_Current
	|
	|-RVA: 0xD5F5E0 Offset: 0xD5F5E0 VA: 0xD5F5E0
	|-Array.InternalEnumerator<ContactPoint>.get_Current
	|
	|-RVA: 0xD5F620 Offset: 0xD5F620 VA: 0xD5F620
	|-Array.InternalEnumerator<RaycastResult>.get_Current
	|
	|-RVA: 0xD5F660 Offset: 0xD5F660 VA: 0xD5F660
	|-Array.InternalEnumerator<PlayerLoopSystem>.get_Current
	|
	|-RVA: 0xD5F6A0 Offset: 0xD5F6A0 VA: 0xD5F6A0
	|-Array.InternalEnumerator<Keyframe>.get_Current
	|
	|-RVA: 0xD5F6E0 Offset: 0xD5F6E0 VA: 0xD5F6E0
	|-Array.InternalEnumerator<LocationInfo>.get_Current
	|
	|-RVA: 0xD5F720 Offset: 0xD5F720 VA: 0xD5F720
	|-Array.InternalEnumerator<LogType>.get_Current
	|
	|-RVA: 0xD5F760 Offset: 0xD5F760 VA: 0xD5F760
	|-Array.InternalEnumerator<ParticleSystem.Burst>.get_Current
	|
	|-RVA: 0xD5F7A0 Offset: 0xD5F7A0 VA: 0xD5F7A0
	|-Array.InternalEnumerator<PlayableBinding>.get_Current
	|
	|-RVA: 0xD5F7E0 Offset: 0xD5F7E0 VA: 0xD5F7E0
	|-Array.InternalEnumerator<AppStore>.get_Current
	|
	|-RVA: 0xD5F820 Offset: 0xD5F820 VA: 0xD5F820
	|-Array.InternalEnumerator<Quaternion>.get_Current
	|
	|-RVA: 0xD5F860 Offset: 0xD5F860 VA: 0xD5F860
	|-Array.InternalEnumerator<RaycastHit2D>.get_Current
	|
	|-RVA: 0xD5F8A0 Offset: 0xD5F8A0 VA: 0xD5F8A0
	|-Array.InternalEnumerator<RaycastHit>.get_Current
	|
	|-RVA: 0xD5F8E0 Offset: 0xD5F8E0 VA: 0xD5F8E0
	|-Array.InternalEnumerator<Rect>.get_Current
	|
	|-RVA: 0xD5F920 Offset: 0xD5F920 VA: 0xD5F920
	|-Array.InternalEnumerator<RuntimePlatform>.get_Current
	|
	|-RVA: 0xD5F960 Offset: 0xD5F960 VA: 0xD5F960
	|-Array.InternalEnumerator<SendMouseEvents.HitInfo>.get_Current
	|
	|-RVA: 0xD5F9A0 Offset: 0xD5F9A0 VA: 0xD5F9A0
	|-Array.InternalEnumerator<TextEditor.TextEditOp>.get_Current
	|
	|-RVA: 0xD5F9E0 Offset: 0xD5F9E0 VA: 0xD5F9E0
	|-Array.InternalEnumerator<Touch>.get_Current
	|
	|-RVA: 0xD5FA20 Offset: 0xD5FA20 VA: 0xD5FA20
	|-Array.InternalEnumerator<InputField.ContentType>.get_Current
	|
	|-RVA: 0xD5FA60 Offset: 0xD5FA60 VA: 0xD5FA60
	|-Array.InternalEnumerator<UICharInfo>.get_Current
	|
	|-RVA: 0xD5FAA0 Offset: 0xD5FAA0 VA: 0xD5FAA0
	|-Array.InternalEnumerator<UILineInfo>.get_Current
	|
	|-RVA: 0xD5FAE0 Offset: 0xD5FAE0 VA: 0xD5FAE0
	|-Array.InternalEnumerator<UIVertex>.get_Current
	|
	|-RVA: 0xD5FB20 Offset: 0xD5FB20 VA: 0xD5FB20
	|-Array.InternalEnumerator<UnitySynchronizationContext.WorkRequest>.get_Current
	|
	|-RVA: 0xD5FB60 Offset: 0xD5FB60 VA: 0xD5FB60
	|-Array.InternalEnumerator<Vector2>.get_Current
	|
	|-RVA: 0xD5FBA0 Offset: 0xD5FBA0 VA: 0xD5FBA0
	|-Array.InternalEnumerator<Vector3>.get_Current
	|
	|-RVA: 0xD5FBE0 Offset: 0xD5FBE0 VA: 0xD5FBE0
	|-Array.InternalEnumerator<Vector4>.get_Current
	|
	|-RVA: 0xD5FC20 Offset: 0xD5FC20 VA: 0xD5FC20
	|-Array.InternalEnumerator<WrapMode>.get_Current
	|
	|-RVA: 0xD5FC60 Offset: 0xD5FC60 VA: 0xD5FC60
	|-Array.InternalEnumerator<jvalue>.get_Current
	|
	|-RVA: 0xD5FCA0 Offset: 0xD5FCA0 VA: 0xD5FCA0
	|-Array.InternalEnumerator<Voice.BATTLE>.get_Current
	|
	|-RVA: 0xD5FCE0 Offset: 0xD5FCE0 VA: 0xD5FCE0
	|-Array.InternalEnumerator<VoiceCondType.Type>.get_Current
	|
	|-RVA: 0xD5FD20 Offset: 0xD5FD20 VA: 0xD5FD20
	|-Array.InternalEnumerator<WarBoardAIRoute.DistanceType>.get_Current
	|
	|-RVA: 0xD5FD60 Offset: 0xD5FD60 VA: 0xD5FD60
	|-Array.InternalEnumerator<WarBoardCommonMiniPopup.LineLayout>.get_Current
	|
	|-RVA: 0xD5FDA0 Offset: 0xD5FDA0 VA: 0xD5FDA0
	|-Array.InternalEnumerator<WarBoardManager.WarBoardPerformanceQueue>.get_Current
	|
	|-RVA: 0xD5FDE0 Offset: 0xD5FDE0 VA: 0xD5FDE0
	|-Array.InternalEnumerator<FGOTarget>.get_Current
	|
	|-RVA: 0xD5FE20 Offset: 0xD5FE20 VA: 0xD5FE20
	|-Array.InternalEnumerator<USFGOActorChangePosition.PosSetType>.get_Current
	|
	|-RVA: 0xD5FE60 Offset: 0xD5FE60 VA: 0xD5FE60
	|-Array.InternalEnumerator<USFGOPlayStandardCutInRandom.CutInData>.get_Current
	*/
}

// Namespace: 
internal class Array.SimpleEnumerator : IEnumerator, ICloneable // TypeDefIndex: 42
{
	// Fields
	private Array enumeratee; // 0x10
	private int currentpos; // 0x18
	private int length; // 0x1C

	// Properties
	public object Current { get; }

	// Methods

	// RVA: 0x227BE80 Offset: 0x227BE80 VA: 0x227BE80
	public void .ctor(Array arrayToEnumerate) { }

	// RVA: 0x2281118 Offset: 0x2281118 VA: 0x2281118 Slot: 4
	public object get_Current() { }

	// RVA: 0x22811E8 Offset: 0x22811E8 VA: 0x22811E8 Slot: 5
	public bool MoveNext() { }

	// RVA: 0x2281208 Offset: 0x2281208 VA: 0x2281208 Slot: 6
	public void Reset() { }

	// RVA: 0x2281214 Offset: 0x2281214 VA: 0x2281214 Slot: 7
	public object Clone() { }
}

// Namespace: 
[DefaultMemberAttribute] // RVA: 0xBC3380 Offset: 0xBC3380 VA: 0xBC3380
private class Array.ArrayReadOnlyList<T> : IEnumerable, IList<T>, ICollection<T>, IEnumerable<T> // TypeDefIndex: 43
{
	// Fields
	private T[] array; // 0x0

	// Properties
	public T Item { get; set; }
	public int Count { get; }
	public bool IsReadOnly { get; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(T[] array) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D73C0 Offset: 0x21D73C0 VA: 0x21D73C0
	|-Array.ArrayReadOnlyList<object>..ctor
	|
	|-RVA: 0x21D78FC Offset: 0x21D78FC VA: 0x21D78FC
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>..ctor
	|
	|-RVA: 0x21D7EAC Offset: 0x21D7EAC VA: 0x21D7EAC
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>..ctor
	|
	|-RVA: 0x21D83E8 Offset: 0x21D83E8 VA: 0x21D83E8
	|-Array.ArrayReadOnlyList<Rect>..ctor
	|
	|-RVA: 0x21D8928 Offset: 0x21D8928 VA: 0x21D8928
	|-Array.ArrayReadOnlyList<Vector2>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 4
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D73F8 Offset: 0x21D73F8 VA: 0x21D73F8
	|-Array.ArrayReadOnlyList<object>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x21D7934 Offset: 0x21D7934 VA: 0x21D7934
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x21D7EE4 Offset: 0x21D7EE4 VA: 0x21D7EE4
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x21D8420 Offset: 0x21D8420 VA: 0x21D8420
	|-Array.ArrayReadOnlyList<Rect>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x21D8960 Offset: 0x21D8960 VA: 0x21D8960
	|-Array.ArrayReadOnlyList<Vector2>.System.Collections.IEnumerable.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 8
	public T get_Item(int index) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D7434 Offset: 0x21D7434 VA: 0x21D7434
	|-Array.ArrayReadOnlyList<object>.get_Item
	|
	|-RVA: 0x21D7970 Offset: 0x21D7970 VA: 0x21D7970
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.get_Item
	|
	|-RVA: 0x21D7F20 Offset: 0x21D7F20 VA: 0x21D7F20
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.get_Item
	|
	|-RVA: 0x21D845C Offset: 0x21D845C VA: 0x21D845C
	|-Array.ArrayReadOnlyList<Rect>.get_Item
	|
	|-RVA: 0x21D899C Offset: 0x21D899C VA: 0x21D899C
	|-Array.ArrayReadOnlyList<Vector2>.get_Item
	*/

	// RVA: -1 Offset: -1 Slot: 9
	public void set_Item(int index, T value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D7518 Offset: 0x21D7518 VA: 0x21D7518
	|-Array.ArrayReadOnlyList<object>.set_Item
	|
	|-RVA: 0x21D7A68 Offset: 0x21D7A68 VA: 0x21D7A68
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.set_Item
	|
	|-RVA: 0x21D8004 Offset: 0x21D8004 VA: 0x21D8004
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.set_Item
	|
	|-RVA: 0x21D8544 Offset: 0x21D8544 VA: 0x21D8544
	|-Array.ArrayReadOnlyList<Rect>.set_Item
	|
	|-RVA: 0x21D8A80 Offset: 0x21D8A80 VA: 0x21D8A80
	|-Array.ArrayReadOnlyList<Vector2>.set_Item
	*/

	// RVA: -1 Offset: -1 Slot: 10
	public int get_Count() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D7578 Offset: 0x21D7578 VA: 0x21D7578
	|-Array.ArrayReadOnlyList<object>.get_Count
	|
	|-RVA: 0x21D7AC8 Offset: 0x21D7AC8 VA: 0x21D7AC8
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.get_Count
	|
	|-RVA: 0x21D8064 Offset: 0x21D8064 VA: 0x21D8064
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.get_Count
	|
	|-RVA: 0x21D85A4 Offset: 0x21D85A4 VA: 0x21D85A4
	|-Array.ArrayReadOnlyList<Rect>.get_Count
	|
	|-RVA: 0x21D8AE0 Offset: 0x21D8AE0 VA: 0x21D8AE0
	|-Array.ArrayReadOnlyList<Vector2>.get_Count
	*/

	// RVA: -1 Offset: -1 Slot: 11
	public bool get_IsReadOnly() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D75A4 Offset: 0x21D75A4 VA: 0x21D75A4
	|-Array.ArrayReadOnlyList<object>.get_IsReadOnly
	|
	|-RVA: 0x21D7AF4 Offset: 0x21D7AF4 VA: 0x21D7AF4
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.get_IsReadOnly
	|
	|-RVA: 0x21D8090 Offset: 0x21D8090 VA: 0x21D8090
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.get_IsReadOnly
	|
	|-RVA: 0x21D85D0 Offset: 0x21D85D0 VA: 0x21D85D0
	|-Array.ArrayReadOnlyList<Rect>.get_IsReadOnly
	|
	|-RVA: 0x21D8B0C Offset: 0x21D8B0C VA: 0x21D8B0C
	|-Array.ArrayReadOnlyList<Vector2>.get_IsReadOnly
	*/

	// RVA: -1 Offset: -1 Slot: 12
	public void Add(T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D75AC Offset: 0x21D75AC VA: 0x21D75AC
	|-Array.ArrayReadOnlyList<object>.Add
	|
	|-RVA: 0x21D7AFC Offset: 0x21D7AFC VA: 0x21D7AFC
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.Add
	|
	|-RVA: 0x21D8098 Offset: 0x21D8098 VA: 0x21D8098
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.Add
	|
	|-RVA: 0x21D85D8 Offset: 0x21D85D8 VA: 0x21D85D8
	|-Array.ArrayReadOnlyList<Rect>.Add
	|
	|-RVA: 0x21D8B14 Offset: 0x21D8B14 VA: 0x21D8B14
	|-Array.ArrayReadOnlyList<Vector2>.Add
	*/

	// RVA: -1 Offset: -1 Slot: 13
	public void Clear() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D760C Offset: 0x21D760C VA: 0x21D760C
	|-Array.ArrayReadOnlyList<object>.Clear
	|
	|-RVA: 0x21D7B5C Offset: 0x21D7B5C VA: 0x21D7B5C
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.Clear
	|
	|-RVA: 0x21D80F8 Offset: 0x21D80F8 VA: 0x21D80F8
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.Clear
	|
	|-RVA: 0x21D8638 Offset: 0x21D8638 VA: 0x21D8638
	|-Array.ArrayReadOnlyList<Rect>.Clear
	|
	|-RVA: 0x21D8B74 Offset: 0x21D8B74 VA: 0x21D8B74
	|-Array.ArrayReadOnlyList<Vector2>.Clear
	*/

	// RVA: -1 Offset: -1 Slot: 14
	public bool Contains(T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D766C Offset: 0x21D766C VA: 0x21D766C
	|-Array.ArrayReadOnlyList<object>.Contains
	|
	|-RVA: 0x21D7BBC Offset: 0x21D7BBC VA: 0x21D7BBC
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.Contains
	|
	|-RVA: 0x21D8158 Offset: 0x21D8158 VA: 0x21D8158
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.Contains
	|
	|-RVA: 0x21D8698 Offset: 0x21D8698 VA: 0x21D8698
	|-Array.ArrayReadOnlyList<Rect>.Contains
	|
	|-RVA: 0x21D8BD4 Offset: 0x21D8BD4 VA: 0x21D8BD4
	|-Array.ArrayReadOnlyList<Vector2>.Contains
	*/

	// RVA: -1 Offset: -1 Slot: 15
	public void CopyTo(T[] array, int index) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D769C Offset: 0x21D769C VA: 0x21D769C
	|-Array.ArrayReadOnlyList<object>.CopyTo
	|
	|-RVA: 0x21D7C14 Offset: 0x21D7C14 VA: 0x21D7C14
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.CopyTo
	|
	|-RVA: 0x21D8188 Offset: 0x21D8188 VA: 0x21D8188
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.CopyTo
	|
	|-RVA: 0x21D86C8 Offset: 0x21D86C8 VA: 0x21D86C8
	|-Array.ArrayReadOnlyList<Rect>.CopyTo
	|
	|-RVA: 0x21D8C04 Offset: 0x21D8C04 VA: 0x21D8C04
	|-Array.ArrayReadOnlyList<Vector2>.CopyTo
	*/

	[DebuggerHiddenAttribute] // RVA: 0xBCC54C Offset: 0xBCC54C VA: 0xBCC54C
	// RVA: -1 Offset: -1 Slot: 17
	public IEnumerator<T> GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D76E4 Offset: 0x21D76E4 VA: 0x21D76E4
	|-Array.ArrayReadOnlyList<object>.GetEnumerator
	|
	|-RVA: 0x21D7C5C Offset: 0x21D7C5C VA: 0x21D7C5C
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.GetEnumerator
	|
	|-RVA: 0x21D81D0 Offset: 0x21D81D0 VA: 0x21D81D0
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.GetEnumerator
	|
	|-RVA: 0x21D8710 Offset: 0x21D8710 VA: 0x21D8710
	|-Array.ArrayReadOnlyList<Rect>.GetEnumerator
	|
	|-RVA: 0x21D8C4C Offset: 0x21D8C4C VA: 0x21D8C4C
	|-Array.ArrayReadOnlyList<Vector2>.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 5
	public int IndexOf(T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D775C Offset: 0x21D775C VA: 0x21D775C
	|-Array.ArrayReadOnlyList<object>.IndexOf
	|
	|-RVA: 0x21D7CD4 Offset: 0x21D7CD4 VA: 0x21D7CD4
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.IndexOf
	|
	|-RVA: 0x21D8248 Offset: 0x21D8248 VA: 0x21D8248
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.IndexOf
	|
	|-RVA: 0x21D8788 Offset: 0x21D8788 VA: 0x21D8788
	|-Array.ArrayReadOnlyList<Rect>.IndexOf
	|
	|-RVA: 0x21D8CC4 Offset: 0x21D8CC4 VA: 0x21D8CC4
	|-Array.ArrayReadOnlyList<Vector2>.IndexOf
	*/

	// RVA: -1 Offset: -1 Slot: 6
	public void Insert(int index, T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D7774 Offset: 0x21D7774 VA: 0x21D7774
	|-Array.ArrayReadOnlyList<object>.Insert
	|
	|-RVA: 0x21D7D24 Offset: 0x21D7D24 VA: 0x21D7D24
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.Insert
	|
	|-RVA: 0x21D8260 Offset: 0x21D8260 VA: 0x21D8260
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.Insert
	|
	|-RVA: 0x21D87A0 Offset: 0x21D87A0 VA: 0x21D87A0
	|-Array.ArrayReadOnlyList<Rect>.Insert
	|
	|-RVA: 0x21D8CDC Offset: 0x21D8CDC VA: 0x21D8CDC
	|-Array.ArrayReadOnlyList<Vector2>.Insert
	*/

	// RVA: -1 Offset: -1 Slot: 16
	public bool Remove(T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D77D4 Offset: 0x21D77D4 VA: 0x21D77D4
	|-Array.ArrayReadOnlyList<object>.Remove
	|
	|-RVA: 0x21D7D84 Offset: 0x21D7D84 VA: 0x21D7D84
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.Remove
	|
	|-RVA: 0x21D82C0 Offset: 0x21D82C0 VA: 0x21D82C0
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.Remove
	|
	|-RVA: 0x21D8800 Offset: 0x21D8800 VA: 0x21D8800
	|-Array.ArrayReadOnlyList<Rect>.Remove
	|
	|-RVA: 0x21D8D3C Offset: 0x21D8D3C VA: 0x21D8D3C
	|-Array.ArrayReadOnlyList<Vector2>.Remove
	*/

	// RVA: -1 Offset: -1 Slot: 7
	public void RemoveAt(int index) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D7834 Offset: 0x21D7834 VA: 0x21D7834
	|-Array.ArrayReadOnlyList<object>.RemoveAt
	|
	|-RVA: 0x21D7DE4 Offset: 0x21D7DE4 VA: 0x21D7DE4
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.RemoveAt
	|
	|-RVA: 0x21D8320 Offset: 0x21D8320 VA: 0x21D8320
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.RemoveAt
	|
	|-RVA: 0x21D8860 Offset: 0x21D8860 VA: 0x21D8860
	|-Array.ArrayReadOnlyList<Rect>.RemoveAt
	|
	|-RVA: 0x21D8D9C Offset: 0x21D8D9C VA: 0x21D8D9C
	|-Array.ArrayReadOnlyList<Vector2>.RemoveAt
	*/

	// RVA: -1 Offset: -1
	private static Exception ReadOnlyError() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D7894 Offset: 0x21D7894 VA: 0x21D7894
	|-Array.ArrayReadOnlyList<object>.ReadOnlyError
	|
	|-RVA: 0x21D7E44 Offset: 0x21D7E44 VA: 0x21D7E44
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.ReadOnlyError
	|
	|-RVA: 0x21D8380 Offset: 0x21D8380 VA: 0x21D8380
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.ReadOnlyError
	|
	|-RVA: 0x21D88C0 Offset: 0x21D88C0 VA: 0x21D88C0
	|-Array.ArrayReadOnlyList<Rect>.ReadOnlyError
	|
	|-RVA: 0x21D8DFC Offset: 0x21D8DFC VA: 0x21D8DFC
	|-Array.ArrayReadOnlyList<Vector2>.ReadOnlyError
	*/
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xBC33B8 Offset: 0xBC33B8 VA: 0xBC33B8
private sealed class Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<T> : IEnumerator, IDisposable, IEnumerator<T> // TypeDefIndex: 44
{
	// Fields
	internal int <i>__0; // 0x0
	internal int $PC; // 0x0
	internal T $current; // 0x0
	internal Array.ArrayReadOnlyList<T> <>f__this; // 0x0

	// Properties
	private T System.Collections.Generic.IEnumerator<T>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D69B0 Offset: 0x21D69B0 VA: 0x21D69B0
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<object>..ctor
	|
	|-RVA: 0x21D6B70 Offset: 0x21D6B70 VA: 0x21D6B70
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeNamedArgument>..ctor
	|
	|-RVA: 0x21D6D98 Offset: 0x21D6D98 VA: 0x21D6D98
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeTypedArgument>..ctor
	|
	|-RVA: 0x21D6FA4 Offset: 0x21D6FA4 VA: 0x21D6FA4
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Rect>..ctor
	|
	|-RVA: 0x21D71C0 Offset: 0x21D71C0 VA: 0x21D71C0
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Vector2>..ctor
	*/

	[DebuggerHiddenAttribute] // RVA: 0xBCC55C Offset: 0xBCC55C VA: 0xBCC55C
	// RVA: -1 Offset: -1 Slot: 8
	private T System.Collections.Generic.IEnumerator<T>.get_Current() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D69DC Offset: 0x21D69DC VA: 0x21D69DC
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<object>.System.Collections.Generic.IEnumerator<T>.get_Current
	|
	|-RVA: 0x21D6B9C Offset: 0x21D6B9C VA: 0x21D6B9C
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeNamedArgument>.System.Collections.Generic.IEnumerator<T>.get_Current
	|
	|-RVA: 0x21D6DC4 Offset: 0x21D6DC4 VA: 0x21D6DC4
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeTypedArgument>.System.Collections.Generic.IEnumerator<T>.get_Current
	|
	|-RVA: 0x21D6FD0 Offset: 0x21D6FD0 VA: 0x21D6FD0
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Rect>.System.Collections.Generic.IEnumerator<T>.get_Current
	|
	|-RVA: 0x21D71EC Offset: 0x21D71EC VA: 0x21D71EC
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Vector2>.System.Collections.Generic.IEnumerator<T>.get_Current
	*/

	[DebuggerHiddenAttribute] // RVA: 0xBCC56C Offset: 0xBCC56C VA: 0xBCC56C
	// RVA: -1 Offset: -1 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D69E4 Offset: 0x21D69E4 VA: 0x21D69E4
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<object>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x21D6BB0 Offset: 0x21D6BB0 VA: 0x21D6BB0
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeNamedArgument>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x21D6DD0 Offset: 0x21D6DD0 VA: 0x21D6DD0
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeTypedArgument>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x21D6FDC Offset: 0x21D6FDC VA: 0x21D6FDC
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Rect>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x21D71F4 Offset: 0x21D71F4 VA: 0x21D71F4
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Vector2>.System.Collections.IEnumerator.get_Current
	*/

	// RVA: -1 Offset: -1 Slot: 5
	public bool MoveNext() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D69EC Offset: 0x21D69EC VA: 0x21D69EC
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<object>.MoveNext
	|
	|-RVA: 0x21D6C08 Offset: 0x21D6C08 VA: 0x21D6C08
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeNamedArgument>.MoveNext
	|
	|-RVA: 0x21D6E20 Offset: 0x21D6E20 VA: 0x21D6E20
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeTypedArgument>.MoveNext
	|
	|-RVA: 0x21D702C Offset: 0x21D702C VA: 0x21D702C
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Rect>.MoveNext
	|
	|-RVA: 0x21D723C Offset: 0x21D723C VA: 0x21D723C
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Vector2>.MoveNext
	*/

	[DebuggerHiddenAttribute] // RVA: 0xBCC57C Offset: 0xBCC57C VA: 0xBCC57C
	// RVA: -1 Offset: -1 Slot: 7
	public void Dispose() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D6AFC Offset: 0x21D6AFC VA: 0x21D6AFC
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<object>.Dispose
	|
	|-RVA: 0x21D6D24 Offset: 0x21D6D24 VA: 0x21D6D24
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeNamedArgument>.Dispose
	|
	|-RVA: 0x21D6F30 Offset: 0x21D6F30 VA: 0x21D6F30
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeTypedArgument>.Dispose
	|
	|-RVA: 0x21D714C Offset: 0x21D714C VA: 0x21D714C
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Rect>.Dispose
	|
	|-RVA: 0x21D734C Offset: 0x21D734C VA: 0x21D734C
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Vector2>.Dispose
	*/

	[DebuggerHiddenAttribute] // RVA: 0xBCC58C Offset: 0xBCC58C VA: 0xBCC58C
	// RVA: -1 Offset: -1 Slot: 6
	public void Reset() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D6B08 Offset: 0x21D6B08 VA: 0x21D6B08
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<object>.Reset
	|
	|-RVA: 0x21D6D30 Offset: 0x21D6D30 VA: 0x21D6D30
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeNamedArgument>.Reset
	|
	|-RVA: 0x21D6F3C Offset: 0x21D6F3C VA: 0x21D6F3C
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeTypedArgument>.Reset
	|
	|-RVA: 0x21D7158 Offset: 0x21D7158 VA: 0x21D7158
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Rect>.Reset
	|
	|-RVA: 0x21D7358 Offset: 0x21D7358 VA: 0x21D7358
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Vector2>.Reset
	*/
}

// Namespace: 
private sealed class Array.Swapper : MulticastDelegate // TypeDefIndex: 45
{
	// Methods

	// RVA: 0x227F118 Offset: 0x227F118 VA: 0x227F118
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x227F644 Offset: 0x227F644 VA: 0x227F644 Slot: 11
	public virtual void Invoke(int i, int j) { }

	// RVA: 0x228121C Offset: 0x228121C VA: 0x228121C Slot: 12
	public virtual IAsyncResult BeginInvoke(int i, int j, AsyncCallback callback, object object) { }

	// RVA: 0x22812BC Offset: 0x22812BC VA: 0x22812BC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Collections
[ComVisibleAttribute] // RVA: 0xBC33C8 Offset: 0xBC33C8 VA: 0xBC33C8
public interface ICollection : IEnumerable // TypeDefIndex: 46
{
	// Properties
	public abstract int Count { get; }
	public abstract bool IsSynchronized { get; }
	public abstract object SyncRoot { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract int get_Count();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract bool get_IsSynchronized();

	// RVA: -1 Offset: -1 Slot: 2
	public abstract object get_SyncRoot();

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void CopyTo(Array array, int index);
}

// Namespace: System.Collections
[ComVisibleAttribute] // RVA: 0xBC33DC Offset: 0xBC33DC VA: 0xBC33DC
[DefaultMemberAttribute] // RVA: 0xBC33DC Offset: 0xBC33DC VA: 0xBC33DC
public interface IList : IEnumerable, ICollection // TypeDefIndex: 47
{
	// Properties
	public abstract bool IsFixedSize { get; }
	public abstract bool IsReadOnly { get; }
	public abstract object Item { get; set; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract bool get_IsFixedSize();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract bool get_IsReadOnly();

	// RVA: -1 Offset: -1 Slot: 2
	public abstract object get_Item(int index);

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void set_Item(int index, object value);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract int Add(object value);

	// RVA: -1 Offset: -1 Slot: 5
	public abstract void Clear();

	// RVA: -1 Offset: -1 Slot: 6
	public abstract bool Contains(object value);

	// RVA: -1 Offset: -1 Slot: 7
	public abstract int IndexOf(object value);

	// RVA: -1 Offset: -1 Slot: 8
	public abstract void Insert(int index, object value);

	// RVA: -1 Offset: -1 Slot: 9
	public abstract void Remove(object value);

	// RVA: -1 Offset: -1 Slot: 10
	public abstract void RemoveAt(int index);
}

// Namespace: System.Collections.Generic
[DefaultMemberAttribute] // RVA: 0xBC342C Offset: 0xBC342C VA: 0xBC342C
public interface IList<T> : IEnumerable, ICollection<T>, IEnumerable<T> // TypeDefIndex: 48
{
	// Properties
	public abstract T Item { get; set; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract int IndexOf(T item);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-IList<object>.IndexOf
	*/

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void Insert(int index, T item);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-IList<object>.Insert
	*/

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void RemoveAt(int index);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-IList<object>.RemoveAt
	*/

	// RVA: -1 Offset: -1 Slot: 3
	public abstract T get_Item(int index);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-IList<object>.get_Item
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void set_Item(int index, T value);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-IList<object>.set_Item
	*/
}

// Namespace: System.Collections.Generic
public interface ICollection<T> : IEnumerable, IEnumerable<T> // TypeDefIndex: 49
{
	// Properties
	public abstract int Count { get; }
	public abstract bool IsReadOnly { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract int get_Count();
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-ICollection<object>.get_Count
	*/

	// RVA: -1 Offset: -1 Slot: 1
	public abstract bool get_IsReadOnly();
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-ICollection<object>.get_IsReadOnly
	*/

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void Add(T item);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-ICollection<object>.Add
	*/

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void Clear();
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-ICollection<object>.Clear
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public abstract bool Contains(T item);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-ICollection<object>.Contains
	*/

	// RVA: -1 Offset: -1 Slot: 5
	public abstract void CopyTo(T[] array, int arrayIndex);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-ICollection<object>.CopyTo
	*/

	// RVA: -1 Offset: -1 Slot: 6
	public abstract bool Remove(T item);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-ICollection<object>.Remove
	*/
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBC3464 Offset: 0xBC3464 VA: 0xBC3464
[Serializable]
public struct Void // TypeDefIndex: 50
{}

// Namespace: System
[ClassInterfaceAttribute] // RVA: 0xBC3478 Offset: 0xBC3478 VA: 0xBC3478
[ComDefaultInterfaceAttribute] // RVA: 0xBC3478 Offset: 0xBC3478 VA: 0xBC3478
[ComVisibleAttribute] // RVA: 0xBC3478 Offset: 0xBC3478 VA: 0xBC3478
[Serializable]
public abstract class Type : MemberInfo, IReflect, _Type // TypeDefIndex: 51
{
	// Fields
	internal const BindingFlags DefaultBindingFlags = 28;
	internal RuntimeTypeHandle _impl; // 0x10
	public static readonly char Delimiter; // 0x0
	public static readonly Type[] EmptyTypes; // 0x8
	public static readonly MemberFilter FilterAttribute; // 0x10
	public static readonly MemberFilter FilterName; // 0x18
	public static readonly MemberFilter FilterNameIgnoreCase; // 0x20
	public static readonly object Missing; // 0x28

	// Properties
	public abstract Assembly Assembly { get; }
	public abstract string AssemblyQualifiedName { get; }
	public TypeAttributes Attributes { get; }
	public abstract Type BaseType { get; }
	public override Type DeclaringType { get; }
	public abstract string FullName { get; }
	public bool HasElementType { get; }
	public bool IsAbstract { get; }
	public bool IsArray { get; }
	public bool IsByRef { get; }
	public bool IsClass { get; }
	public bool IsContextful { get; }
	public bool IsEnum { get; }
	public bool IsExplicitLayout { get; }
	public bool IsInterface { get; }
	public bool IsMarshalByRef { get; }
	public bool IsPointer { get; }
	public bool IsPrimitive { get; }
	public bool IsSealed { get; }
	public bool IsSerializable { get; }
	public bool IsValueType { get; }
	public override MemberTypes MemberType { get; }
	public abstract override Module Module { get; }
	public abstract string Namespace { get; }
	public override Type ReflectedType { get; }
	public virtual RuntimeTypeHandle TypeHandle { get; }
	public abstract Type UnderlyingSystemType { get; }
	internal bool IsSystemType { get; }
	public virtual bool ContainsGenericParameters { get; }
	public virtual bool IsGenericTypeDefinition { get; }
	public virtual bool IsGenericType { get; }
	public virtual bool IsGenericParameter { get; }
	public bool IsNested { get; }
	internal bool IsUserType { get; }

	// Methods

	// RVA: 0x2AEF90C Offset: 0x2AEF90C VA: 0x2AEF90C
	protected void .ctor() { }

	// RVA: 0x2AEF914 Offset: 0x2AEF914 VA: 0x2AEF914
	private static void .cctor() { }

	// RVA: 0x2AEFA60 Offset: 0x2AEFA60 VA: 0x2AEFA60
	private static bool FilterName_impl(MemberInfo m, object filterCriteria) { }

	// RVA: 0x2AEFC20 Offset: 0x2AEFC20 VA: 0x2AEFC20
	private static bool FilterNameIgnoreCase_impl(MemberInfo m, object filterCriteria) { }

	// RVA: 0x2AEFE24 Offset: 0x2AEFE24 VA: 0x2AEFE24
	private static bool FilterAttribute_impl(MemberInfo m, object filterCriteria) { }

	// RVA: -1 Offset: -1 Slot: 14
	public abstract Assembly get_Assembly();

	// RVA: -1 Offset: -1 Slot: 15
	public abstract string get_AssemblyQualifiedName();

	// RVA: 0x2AF0104 Offset: 0x2AF0104 VA: 0x2AF0104 Slot: 16
	public TypeAttributes get_Attributes() { }

	// RVA: -1 Offset: -1 Slot: 17
	public abstract Type get_BaseType();

	// RVA: 0x2AF0114 Offset: 0x2AF0114 VA: 0x2AF0114 Slot: 6
	public override Type get_DeclaringType() { }

	// RVA: -1 Offset: -1 Slot: 18
	public abstract string get_FullName();

	// RVA: 0x2AF011C Offset: 0x2AF011C VA: 0x2AF011C Slot: 19
	public bool get_HasElementType() { }

	// RVA: 0x2AF012C Offset: 0x2AF012C VA: 0x2AF012C Slot: 20
	public bool get_IsAbstract() { }

	// RVA: 0x2AF0150 Offset: 0x2AF0150 VA: 0x2AF0150 Slot: 21
	public bool get_IsArray() { }

	// RVA: 0x2AF0160 Offset: 0x2AF0160 VA: 0x2AF0160 Slot: 22
	public bool get_IsByRef() { }

	// RVA: 0x2AF0170 Offset: 0x2AF0170 VA: 0x2AF0170 Slot: 23
	public bool get_IsClass() { }

	// RVA: 0x2AF01F8 Offset: 0x2AF01F8 VA: 0x2AF01F8 Slot: 24
	public bool get_IsContextful() { }

	// RVA: 0x2AF0208 Offset: 0x2AF0208 VA: 0x2AF0208 Slot: 25
	public bool get_IsEnum() { }

	// RVA: 0x2AF0330 Offset: 0x2AF0330 VA: 0x2AF0330 Slot: 26
	public bool get_IsExplicitLayout() { }

	// RVA: 0x2AF01C4 Offset: 0x2AF01C4 VA: 0x2AF01C4 Slot: 27
	public bool get_IsInterface() { }

	// RVA: 0x2AF035C Offset: 0x2AF035C VA: 0x2AF035C Slot: 28
	public bool get_IsMarshalByRef() { }

	// RVA: 0x2AF036C Offset: 0x2AF036C VA: 0x2AF036C Slot: 29
	public bool get_IsPointer() { }

	// RVA: 0x2AF037C Offset: 0x2AF037C VA: 0x2AF037C Slot: 30
	public bool get_IsPrimitive() { }

	// RVA: 0x2AF038C Offset: 0x2AF038C VA: 0x2AF038C Slot: 31
	public bool get_IsSealed() { }

	// RVA: 0x2AF03B0 Offset: 0x2AF03B0 VA: 0x2AF03B0 Slot: 32
	public bool get_IsSerializable() { }

	// RVA: 0x2AF01E8 Offset: 0x2AF01E8 VA: 0x2AF01E8 Slot: 33
	public bool get_IsValueType() { }

	// RVA: 0x2AF05C4 Offset: 0x2AF05C4 VA: 0x2AF05C4 Slot: 7
	public override MemberTypes get_MemberType() { }

	// RVA: -1 Offset: -1 Slot: 10
	public abstract override Module get_Module();

	// RVA: -1 Offset: -1 Slot: 34
	public abstract string get_Namespace();

	// RVA: 0x2AF05CC Offset: 0x2AF05CC VA: 0x2AF05CC Slot: 9
	public override Type get_ReflectedType() { }

	// RVA: 0x2AF05D4 Offset: 0x2AF05D4 VA: 0x2AF05D4 Slot: 35
	public virtual RuntimeTypeHandle get_TypeHandle() { }

	// RVA: -1 Offset: -1 Slot: 36
	public abstract Type get_UnderlyingSystemType();

	// RVA: 0x2AF05DC Offset: 0x2AF05DC VA: 0x2AF05DC Slot: 0
	public override bool Equals(object o) { }
