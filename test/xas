	|-RVA: 0xDCBEF0 Offset: 0xDCBEF0 VA: 0xDCBEF0
	|-Array.InternalEnumerator<AnimatorStateInfo>.get_Current
	|
	|-RVA: 0xDCBF30 Offset: 0xDCBF30 VA: 0xDCBF30
	|-Array.InternalEnumerator<BeforeRenderHelper.OrderBlock>.get_Current
	|
	|-RVA: 0xDCBF70 Offset: 0xDCBF70 VA: 0xDCBF70
	|-Array.InternalEnumerator<Bounds>.get_Current
	|
	|-RVA: 0xDCBFB0 Offset: 0xDCBFB0 VA: 0xDCBFB0
	|-Array.InternalEnumerator<ClothSkinningCoefficient>.get_Current
	|
	|-RVA: 0xDCBFF0 Offset: 0xDCBFF0 VA: 0xDCBFF0
	|-Array.InternalEnumerator<ClothSphereColliderPair>.get_Current
	|
	|-RVA: 0xDCC030 Offset: 0xDCC030 VA: 0xDCC030
	|-Array.InternalEnumerator<Color32>.get_Current
	|
	|-RVA: 0xDCC084 Offset: 0xDCC084 VA: 0xDCC084
	|-Array.InternalEnumerator<Color>.get_Current
	|
	|-RVA: 0xDCC0C4 Offset: 0xDCC0C4 VA: 0xDCC0C4
	|-Array.InternalEnumerator<ContactPoint2D>.get_Current
	|
	|-RVA: 0xDCC104 Offset: 0xDCC104 VA: 0xDCC104
	|-Array.InternalEnumerator<ContactPoint>.get_Current
	|
	|-RVA: 0xDCC144 Offset: 0xDCC144 VA: 0xDCC144
	|-Array.InternalEnumerator<RaycastResult>.get_Current
	|
	|-RVA: 0xDCC184 Offset: 0xDCC184 VA: 0xDCC184
	|-Array.InternalEnumerator<PlayerLoopSystem>.get_Current
	|
	|-RVA: 0xDCC1C4 Offset: 0xDCC1C4 VA: 0xDCC1C4
	|-Array.InternalEnumerator<Keyframe>.get_Current
	|
	|-RVA: 0xDCC204 Offset: 0xDCC204 VA: 0xDCC204
	|-Array.InternalEnumerator<LocationInfo>.get_Current
	|
	|-RVA: 0xDCC244 Offset: 0xDCC244 VA: 0xDCC244
	|-Array.InternalEnumerator<LogType>.get_Current
	|
	|-RVA: 0xDCC284 Offset: 0xDCC284 VA: 0xDCC284
	|-Array.InternalEnumerator<ParticleSystem.Burst>.get_Current
	|
	|-RVA: 0xDCC2C4 Offset: 0xDCC2C4 VA: 0xDCC2C4
	|-Array.InternalEnumerator<PlayableBinding>.get_Current
	|
	|-RVA: 0xDCC304 Offset: 0xDCC304 VA: 0xDCC304
	|-Array.InternalEnumerator<AppStore>.get_Current
	|
	|-RVA: 0xDCC344 Offset: 0xDCC344 VA: 0xDCC344
	|-Array.InternalEnumerator<Quaternion>.get_Current
	|
	|-RVA: 0xDCC384 Offset: 0xDCC384 VA: 0xDCC384
	|-Array.InternalEnumerator<RaycastHit2D>.get_Current
	|
	|-RVA: 0xDCC3C4 Offset: 0xDCC3C4 VA: 0xDCC3C4
	|-Array.InternalEnumerator<RaycastHit>.get_Current
	|
	|-RVA: 0xDCC404 Offset: 0xDCC404 VA: 0xDCC404
	|-Array.InternalEnumerator<Rect>.get_Current
	|
	|-RVA: 0xDCC444 Offset: 0xDCC444 VA: 0xDCC444
	|-Array.InternalEnumerator<RuntimePlatform>.get_Current
	|
	|-RVA: 0xDCC484 Offset: 0xDCC484 VA: 0xDCC484
	|-Array.InternalEnumerator<SendMouseEvents.HitInfo>.get_Current
	|
	|-RVA: 0xDCC4C4 Offset: 0xDCC4C4 VA: 0xDCC4C4
	|-Array.InternalEnumerator<TextEditor.TextEditOp>.get_Current
	|
	|-RVA: 0xDCC504 Offset: 0xDCC504 VA: 0xDCC504
	|-Array.InternalEnumerator<Touch>.get_Current
	|
	|-RVA: 0xDCC544 Offset: 0xDCC544 VA: 0xDCC544
	|-Array.InternalEnumerator<InputField.ContentType>.get_Current
	|
	|-RVA: 0xDCC584 Offset: 0xDCC584 VA: 0xDCC584
	|-Array.InternalEnumerator<UICharInfo>.get_Current
	|
	|-RVA: 0xDCC5C4 Offset: 0xDCC5C4 VA: 0xDCC5C4
	|-Array.InternalEnumerator<UILineInfo>.get_Current
	|
	|-RVA: 0xDCC604 Offset: 0xDCC604 VA: 0xDCC604
	|-Array.InternalEnumerator<UIVertex>.get_Current
	|
	|-RVA: 0xDCC644 Offset: 0xDCC644 VA: 0xDCC644
	|-Array.InternalEnumerator<UnitySynchronizationContext.WorkRequest>.get_Current
	|
	|-RVA: 0xDCC684 Offset: 0xDCC684 VA: 0xDCC684
	|-Array.InternalEnumerator<Vector2>.get_Current
	|
	|-RVA: 0xDCC6C4 Offset: 0xDCC6C4 VA: 0xDCC6C4
	|-Array.InternalEnumerator<Vector3>.get_Current
	|
	|-RVA: 0xDCC704 Offset: 0xDCC704 VA: 0xDCC704
	|-Array.InternalEnumerator<Vector4>.get_Current
	|
	|-RVA: 0xDCC744 Offset: 0xDCC744 VA: 0xDCC744
	|-Array.InternalEnumerator<WrapMode>.get_Current
	|
	|-RVA: 0xDCC784 Offset: 0xDCC784 VA: 0xDCC784
	|-Array.InternalEnumerator<jvalue>.get_Current
	|
	|-RVA: 0xDCC7C4 Offset: 0xDCC7C4 VA: 0xDCC7C4
	|-Array.InternalEnumerator<Voice.BATTLE>.get_Current
	|
	|-RVA: 0xDCC804 Offset: 0xDCC804 VA: 0xDCC804
	|-Array.InternalEnumerator<VoiceCondType.Type>.get_Current
	|
	|-RVA: 0xDCC844 Offset: 0xDCC844 VA: 0xDCC844
	|-Array.InternalEnumerator<WarBoardAIRoute.DistanceType>.get_Current
	|
	|-RVA: 0xDCC884 Offset: 0xDCC884 VA: 0xDCC884
	|-Array.InternalEnumerator<WarBoardCommonMiniPopup.LineLayout>.get_Current
	|
	|-RVA: 0xDCC8C4 Offset: 0xDCC8C4 VA: 0xDCC8C4
	|-Array.InternalEnumerator<WarBoardManager.WarBoardPerformanceQueue>.get_Current
	|
	|-RVA: 0xDCC904 Offset: 0xDCC904 VA: 0xDCC904
	|-Array.InternalEnumerator<FGOTarget>.get_Current
	|
	|-RVA: 0xDCC944 Offset: 0xDCC944 VA: 0xDCC944
	|-Array.InternalEnumerator<USFGOActorChangePosition.PosSetType>.get_Current
	|
	|-RVA: 0xDCC984 Offset: 0xDCC984 VA: 0xDCC984
	|-Array.InternalEnumerator<USFGOPlayStandardCutInRandom.CutInData>.get_Current
	*/
}

// Namespace: 
internal class Array.SimpleEnumerator : IEnumerator, ICloneable // TypeDefIndex: 42
{
	// Fields
	private Array enumeratee; // 0x10
	private int currentpos; // 0x18
	private int length; // 0x1C

	// Properties
	public object Current { get; }

	// Methods

	// RVA: 0x10CD66C Offset: 0x10CD66C VA: 0x10CD66C
	public void .ctor(Array arrayToEnumerate) { }

	// RVA: 0x10D2904 Offset: 0x10D2904 VA: 0x10D2904 Slot: 4
	public object get_Current() { }

	// RVA: 0x10D29D4 Offset: 0x10D29D4 VA: 0x10D29D4 Slot: 5
	public bool MoveNext() { }

	// RVA: 0x10D29F4 Offset: 0x10D29F4 VA: 0x10D29F4 Slot: 6
	public void Reset() { }

	// RVA: 0x10D2A00 Offset: 0x10D2A00 VA: 0x10D2A00 Slot: 7
	public object Clone() { }
}

// Namespace: 
[DefaultMemberAttribute] // RVA: 0xC2F4A8 Offset: 0xC2F4A8 VA: 0xC2F4A8
private class Array.ArrayReadOnlyList<T> : IEnumerable, IList<T>, ICollection<T>, IEnumerable<T> // TypeDefIndex: 43
{
	// Fields
	private T[] array; // 0x0

	// Properties
	public T Item { get; set; }
	public int Count { get; }
	public bool IsReadOnly { get; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(T[] array) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F273C Offset: 0x24F273C VA: 0x24F273C
	|-Array.ArrayReadOnlyList<object>..ctor
	|
	|-RVA: 0x24F2C78 Offset: 0x24F2C78 VA: 0x24F2C78
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>..ctor
	|
	|-RVA: 0x24F3228 Offset: 0x24F3228 VA: 0x24F3228
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>..ctor
	|
	|-RVA: 0x24F3764 Offset: 0x24F3764 VA: 0x24F3764
	|-Array.ArrayReadOnlyList<Rect>..ctor
	|
	|-RVA: 0x24F3CA4 Offset: 0x24F3CA4 VA: 0x24F3CA4
	|-Array.ArrayReadOnlyList<Vector2>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 4
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F2774 Offset: 0x24F2774 VA: 0x24F2774
	|-Array.ArrayReadOnlyList<object>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x24F2CB0 Offset: 0x24F2CB0 VA: 0x24F2CB0
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x24F3260 Offset: 0x24F3260 VA: 0x24F3260
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x24F379C Offset: 0x24F379C VA: 0x24F379C
	|-Array.ArrayReadOnlyList<Rect>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x24F3CDC Offset: 0x24F3CDC VA: 0x24F3CDC
	|-Array.ArrayReadOnlyList<Vector2>.System.Collections.IEnumerable.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 8
	public T get_Item(int index) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F27B0 Offset: 0x24F27B0 VA: 0x24F27B0
	|-Array.ArrayReadOnlyList<object>.get_Item
	|
	|-RVA: 0x24F2CEC Offset: 0x24F2CEC VA: 0x24F2CEC
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.get_Item
	|
	|-RVA: 0x24F329C Offset: 0x24F329C VA: 0x24F329C
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.get_Item
	|
	|-RVA: 0x24F37D8 Offset: 0x24F37D8 VA: 0x24F37D8
	|-Array.ArrayReadOnlyList<Rect>.get_Item
	|
	|-RVA: 0x24F3D18 Offset: 0x24F3D18 VA: 0x24F3D18
	|-Array.ArrayReadOnlyList<Vector2>.get_Item
	*/

	// RVA: -1 Offset: -1 Slot: 9
	public void set_Item(int index, T value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F2894 Offset: 0x24F2894 VA: 0x24F2894
	|-Array.ArrayReadOnlyList<object>.set_Item
	|
	|-RVA: 0x24F2DE4 Offset: 0x24F2DE4 VA: 0x24F2DE4
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.set_Item
	|
	|-RVA: 0x24F3380 Offset: 0x24F3380 VA: 0x24F3380
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.set_Item
	|
	|-RVA: 0x24F38C0 Offset: 0x24F38C0 VA: 0x24F38C0
	|-Array.ArrayReadOnlyList<Rect>.set_Item
	|
	|-RVA: 0x24F3DFC Offset: 0x24F3DFC VA: 0x24F3DFC
	|-Array.ArrayReadOnlyList<Vector2>.set_Item
	*/

	// RVA: -1 Offset: -1 Slot: 10
	public int get_Count() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F28F4 Offset: 0x24F28F4 VA: 0x24F28F4
	|-Array.ArrayReadOnlyList<object>.get_Count
	|
	|-RVA: 0x24F2E44 Offset: 0x24F2E44 VA: 0x24F2E44
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.get_Count
	|
	|-RVA: 0x24F33E0 Offset: 0x24F33E0 VA: 0x24F33E0
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.get_Count
	|
	|-RVA: 0x24F3920 Offset: 0x24F3920 VA: 0x24F3920
	|-Array.ArrayReadOnlyList<Rect>.get_Count
	|
	|-RVA: 0x24F3E5C Offset: 0x24F3E5C VA: 0x24F3E5C
	|-Array.ArrayReadOnlyList<Vector2>.get_Count
	*/

	// RVA: -1 Offset: -1 Slot: 11
	public bool get_IsReadOnly() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F2920 Offset: 0x24F2920 VA: 0x24F2920
	|-Array.ArrayReadOnlyList<object>.get_IsReadOnly
	|
	|-RVA: 0x24F2E70 Offset: 0x24F2E70 VA: 0x24F2E70
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.get_IsReadOnly
	|
	|-RVA: 0x24F340C Offset: 0x24F340C VA: 0x24F340C
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.get_IsReadOnly
	|
	|-RVA: 0x24F394C Offset: 0x24F394C VA: 0x24F394C
	|-Array.ArrayReadOnlyList<Rect>.get_IsReadOnly
	|
	|-RVA: 0x24F3E88 Offset: 0x24F3E88 VA: 0x24F3E88
	|-Array.ArrayReadOnlyList<Vector2>.get_IsReadOnly
	*/

	// RVA: -1 Offset: -1 Slot: 12
	public void Add(T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F2928 Offset: 0x24F2928 VA: 0x24F2928
	|-Array.ArrayReadOnlyList<object>.Add
	|
	|-RVA: 0x24F2E78 Offset: 0x24F2E78 VA: 0x24F2E78
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.Add
	|
	|-RVA: 0x24F3414 Offset: 0x24F3414 VA: 0x24F3414
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.Add
	|
	|-RVA: 0x24F3954 Offset: 0x24F3954 VA: 0x24F3954
	|-Array.ArrayReadOnlyList<Rect>.Add
	|
	|-RVA: 0x24F3E90 Offset: 0x24F3E90 VA: 0x24F3E90
	|-Array.ArrayReadOnlyList<Vector2>.Add
	*/

	// RVA: -1 Offset: -1 Slot: 13
	public void Clear() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F2988 Offset: 0x24F2988 VA: 0x24F2988
	|-Array.ArrayReadOnlyList<object>.Clear
	|
	|-RVA: 0x24F2ED8 Offset: 0x24F2ED8 VA: 0x24F2ED8
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.Clear
	|
	|-RVA: 0x24F3474 Offset: 0x24F3474 VA: 0x24F3474
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.Clear
	|
	|-RVA: 0x24F39B4 Offset: 0x24F39B4 VA: 0x24F39B4
	|-Array.ArrayReadOnlyList<Rect>.Clear
	|
	|-RVA: 0x24F3EF0 Offset: 0x24F3EF0 VA: 0x24F3EF0
	|-Array.ArrayReadOnlyList<Vector2>.Clear
	*/

	// RVA: -1 Offset: -1 Slot: 14
	public bool Contains(T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F29E8 Offset: 0x24F29E8 VA: 0x24F29E8
	|-Array.ArrayReadOnlyList<object>.Contains
	|
	|-RVA: 0x24F2F38 Offset: 0x24F2F38 VA: 0x24F2F38
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.Contains
	|
	|-RVA: 0x24F34D4 Offset: 0x24F34D4 VA: 0x24F34D4
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.Contains
	|
	|-RVA: 0x24F3A14 Offset: 0x24F3A14 VA: 0x24F3A14
	|-Array.ArrayReadOnlyList<Rect>.Contains
	|
	|-RVA: 0x24F3F50 Offset: 0x24F3F50 VA: 0x24F3F50
	|-Array.ArrayReadOnlyList<Vector2>.Contains
	*/

	// RVA: -1 Offset: -1 Slot: 15
	public void CopyTo(T[] array, int index) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F2A18 Offset: 0x24F2A18 VA: 0x24F2A18
	|-Array.ArrayReadOnlyList<object>.CopyTo
	|
	|-RVA: 0x24F2F90 Offset: 0x24F2F90 VA: 0x24F2F90
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.CopyTo
	|
	|-RVA: 0x24F3504 Offset: 0x24F3504 VA: 0x24F3504
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.CopyTo
	|
	|-RVA: 0x24F3A44 Offset: 0x24F3A44 VA: 0x24F3A44
	|-Array.ArrayReadOnlyList<Rect>.CopyTo
	|
	|-RVA: 0x24F3F80 Offset: 0x24F3F80 VA: 0x24F3F80
	|-Array.ArrayReadOnlyList<Vector2>.CopyTo
	*/

	[DebuggerHiddenAttribute] // RVA: 0xC38674 Offset: 0xC38674 VA: 0xC38674
	// RVA: -1 Offset: -1 Slot: 17
	public IEnumerator<T> GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F2A60 Offset: 0x24F2A60 VA: 0x24F2A60
	|-Array.ArrayReadOnlyList<object>.GetEnumerator
	|
	|-RVA: 0x24F2FD8 Offset: 0x24F2FD8 VA: 0x24F2FD8
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.GetEnumerator
	|
	|-RVA: 0x24F354C Offset: 0x24F354C VA: 0x24F354C
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.GetEnumerator
	|
	|-RVA: 0x24F3A8C Offset: 0x24F3A8C VA: 0x24F3A8C
	|-Array.ArrayReadOnlyList<Rect>.GetEnumerator
	|
	|-RVA: 0x24F3FC8 Offset: 0x24F3FC8 VA: 0x24F3FC8
	|-Array.ArrayReadOnlyList<Vector2>.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 5
	public int IndexOf(T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F2AD8 Offset: 0x24F2AD8 VA: 0x24F2AD8
	|-Array.ArrayReadOnlyList<object>.IndexOf
	|
	|-RVA: 0x24F3050 Offset: 0x24F3050 VA: 0x24F3050
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.IndexOf
	|
	|-RVA: 0x24F35C4 Offset: 0x24F35C4 VA: 0x24F35C4
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.IndexOf
	|
	|-RVA: 0x24F3B04 Offset: 0x24F3B04 VA: 0x24F3B04
	|-Array.ArrayReadOnlyList<Rect>.IndexOf
	|
	|-RVA: 0x24F4040 Offset: 0x24F4040 VA: 0x24F4040
	|-Array.ArrayReadOnlyList<Vector2>.IndexOf
	*/

	// RVA: -1 Offset: -1 Slot: 6
	public void Insert(int index, T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F2AF0 Offset: 0x24F2AF0 VA: 0x24F2AF0
	|-Array.ArrayReadOnlyList<object>.Insert
	|
	|-RVA: 0x24F30A0 Offset: 0x24F30A0 VA: 0x24F30A0
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.Insert
	|
	|-RVA: 0x24F35DC Offset: 0x24F35DC VA: 0x24F35DC
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.Insert
	|
	|-RVA: 0x24F3B1C Offset: 0x24F3B1C VA: 0x24F3B1C
	|-Array.ArrayReadOnlyList<Rect>.Insert
	|
	|-RVA: 0x24F4058 Offset: 0x24F4058 VA: 0x24F4058
	|-Array.ArrayReadOnlyList<Vector2>.Insert
	*/

	// RVA: -1 Offset: -1 Slot: 16
	public bool Remove(T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F2B50 Offset: 0x24F2B50 VA: 0x24F2B50
	|-Array.ArrayReadOnlyList<object>.Remove
	|
	|-RVA: 0x24F3100 Offset: 0x24F3100 VA: 0x24F3100
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.Remove
	|
	|-RVA: 0x24F363C Offset: 0x24F363C VA: 0x24F363C
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.Remove
	|
	|-RVA: 0x24F3B7C Offset: 0x24F3B7C VA: 0x24F3B7C
	|-Array.ArrayReadOnlyList<Rect>.Remove
	|
	|-RVA: 0x24F40B8 Offset: 0x24F40B8 VA: 0x24F40B8
	|-Array.ArrayReadOnlyList<Vector2>.Remove
	*/

	// RVA: -1 Offset: -1 Slot: 7
	public void RemoveAt(int index) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F2BB0 Offset: 0x24F2BB0 VA: 0x24F2BB0
	|-Array.ArrayReadOnlyList<object>.RemoveAt
	|
	|-RVA: 0x24F3160 Offset: 0x24F3160 VA: 0x24F3160
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.RemoveAt
	|
	|-RVA: 0x24F369C Offset: 0x24F369C VA: 0x24F369C
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.RemoveAt
	|
	|-RVA: 0x24F3BDC Offset: 0x24F3BDC VA: 0x24F3BDC
	|-Array.ArrayReadOnlyList<Rect>.RemoveAt
	|
	|-RVA: 0x24F4118 Offset: 0x24F4118 VA: 0x24F4118
	|-Array.ArrayReadOnlyList<Vector2>.RemoveAt
	*/

	// RVA: -1 Offset: -1
	private static Exception ReadOnlyError() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F2C10 Offset: 0x24F2C10 VA: 0x24F2C10
	|-Array.ArrayReadOnlyList<object>.ReadOnlyError
	|
	|-RVA: 0x24F31C0 Offset: 0x24F31C0 VA: 0x24F31C0
	|-Array.ArrayReadOnlyList<CustomAttributeNamedArgument>.ReadOnlyError
	|
	|-RVA: 0x24F36FC Offset: 0x24F36FC VA: 0x24F36FC
	|-Array.ArrayReadOnlyList<CustomAttributeTypedArgument>.ReadOnlyError
	|
	|-RVA: 0x24F3C3C Offset: 0x24F3C3C VA: 0x24F3C3C
	|-Array.ArrayReadOnlyList<Rect>.ReadOnlyError
	|
	|-RVA: 0x24F4178 Offset: 0x24F4178 VA: 0x24F4178
	|-Array.ArrayReadOnlyList<Vector2>.ReadOnlyError
	*/
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC2F4E0 Offset: 0xC2F4E0 VA: 0xC2F4E0
private sealed class Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<T> : IEnumerator, IDisposable, IEnumerator<T> // TypeDefIndex: 44
{
	// Fields
	internal int <i>__0; // 0x0
	internal int $PC; // 0x0
	internal T $current; // 0x0
	internal Array.ArrayReadOnlyList<T> <>f__this; // 0x0

	// Properties
	private T System.Collections.Generic.IEnumerator<T>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F1D2C Offset: 0x24F1D2C VA: 0x24F1D2C
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<object>..ctor
	|
	|-RVA: 0x24F1EEC Offset: 0x24F1EEC VA: 0x24F1EEC
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeNamedArgument>..ctor
	|
	|-RVA: 0x24F2114 Offset: 0x24F2114 VA: 0x24F2114
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeTypedArgument>..ctor
	|
	|-RVA: 0x24F2320 Offset: 0x24F2320 VA: 0x24F2320
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Rect>..ctor
	|
	|-RVA: 0x24F253C Offset: 0x24F253C VA: 0x24F253C
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Vector2>..ctor
	*/

	[DebuggerHiddenAttribute] // RVA: 0xC38684 Offset: 0xC38684 VA: 0xC38684
	// RVA: -1 Offset: -1 Slot: 8
	private T System.Collections.Generic.IEnumerator<T>.get_Current() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F1D58 Offset: 0x24F1D58 VA: 0x24F1D58
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<object>.System.Collections.Generic.IEnumerator<T>.get_Current
	|
	|-RVA: 0x24F1F18 Offset: 0x24F1F18 VA: 0x24F1F18
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeNamedArgument>.System.Collections.Generic.IEnumerator<T>.get_Current
	|
	|-RVA: 0x24F2140 Offset: 0x24F2140 VA: 0x24F2140
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeTypedArgument>.System.Collections.Generic.IEnumerator<T>.get_Current
	|
	|-RVA: 0x24F234C Offset: 0x24F234C VA: 0x24F234C
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Rect>.System.Collections.Generic.IEnumerator<T>.get_Current
	|
	|-RVA: 0x24F2568 Offset: 0x24F2568 VA: 0x24F2568
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Vector2>.System.Collections.Generic.IEnumerator<T>.get_Current
	*/

	[DebuggerHiddenAttribute] // RVA: 0xC38694 Offset: 0xC38694 VA: 0xC38694
	// RVA: -1 Offset: -1 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F1D60 Offset: 0x24F1D60 VA: 0x24F1D60
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<object>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x24F1F2C Offset: 0x24F1F2C VA: 0x24F1F2C
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeNamedArgument>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x24F214C Offset: 0x24F214C VA: 0x24F214C
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeTypedArgument>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x24F2358 Offset: 0x24F2358 VA: 0x24F2358
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Rect>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x24F2570 Offset: 0x24F2570 VA: 0x24F2570
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Vector2>.System.Collections.IEnumerator.get_Current
	*/

	// RVA: -1 Offset: -1 Slot: 5
	public bool MoveNext() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F1D68 Offset: 0x24F1D68 VA: 0x24F1D68
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<object>.MoveNext
	|
	|-RVA: 0x24F1F84 Offset: 0x24F1F84 VA: 0x24F1F84
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeNamedArgument>.MoveNext
	|
	|-RVA: 0x24F219C Offset: 0x24F219C VA: 0x24F219C
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeTypedArgument>.MoveNext
	|
	|-RVA: 0x24F23A8 Offset: 0x24F23A8 VA: 0x24F23A8
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Rect>.MoveNext
	|
	|-RVA: 0x24F25B8 Offset: 0x24F25B8 VA: 0x24F25B8
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Vector2>.MoveNext
	*/

	[DebuggerHiddenAttribute] // RVA: 0xC386A4 Offset: 0xC386A4 VA: 0xC386A4
	// RVA: -1 Offset: -1 Slot: 7
	public void Dispose() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F1E78 Offset: 0x24F1E78 VA: 0x24F1E78
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<object>.Dispose
	|
	|-RVA: 0x24F20A0 Offset: 0x24F20A0 VA: 0x24F20A0
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeNamedArgument>.Dispose
	|
	|-RVA: 0x24F22AC Offset: 0x24F22AC VA: 0x24F22AC
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeTypedArgument>.Dispose
	|
	|-RVA: 0x24F24C8 Offset: 0x24F24C8 VA: 0x24F24C8
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Rect>.Dispose
	|
	|-RVA: 0x24F26C8 Offset: 0x24F26C8 VA: 0x24F26C8
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Vector2>.Dispose
	*/

	[DebuggerHiddenAttribute] // RVA: 0xC386B4 Offset: 0xC386B4 VA: 0xC386B4
	// RVA: -1 Offset: -1 Slot: 6
	public void Reset() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24F1E84 Offset: 0x24F1E84 VA: 0x24F1E84
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<object>.Reset
	|
	|-RVA: 0x24F20AC Offset: 0x24F20AC VA: 0x24F20AC
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeNamedArgument>.Reset
	|
	|-RVA: 0x24F22B8 Offset: 0x24F22B8 VA: 0x24F22B8
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<CustomAttributeTypedArgument>.Reset
	|
	|-RVA: 0x24F24D4 Offset: 0x24F24D4 VA: 0x24F24D4
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Rect>.Reset
	|
	|-RVA: 0x24F26D4 Offset: 0x24F26D4 VA: 0x24F26D4
	|-Array.ArrayReadOnlyList.<GetEnumerator>c__Iterator0<Vector2>.Reset
	*/
}

// Namespace: 
private sealed class Array.Swapper : MulticastDelegate // TypeDefIndex: 45
{
	// Methods

	// RVA: 0x10D0904 Offset: 0x10D0904 VA: 0x10D0904
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x10D0E30 Offset: 0x10D0E30 VA: 0x10D0E30 Slot: 11
	public virtual void Invoke(int i, int j) { }

	// RVA: 0x10D2A08 Offset: 0x10D2A08 VA: 0x10D2A08 Slot: 12
	public virtual IAsyncResult BeginInvoke(int i, int j, AsyncCallback callback, object object) { }

	// RVA: 0x10D2AA8 Offset: 0x10D2AA8 VA: 0x10D2AA8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Collections
[ComVisibleAttribute] // RVA: 0xC2F4F0 Offset: 0xC2F4F0 VA: 0xC2F4F0
public interface ICollection : IEnumerable // TypeDefIndex: 46
{
	// Properties
	public abstract int Count { get; }
	public abstract bool IsSynchronized { get; }
	public abstract object SyncRoot { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract int get_Count();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract bool get_IsSynchronized();

	// RVA: -1 Offset: -1 Slot: 2
	public abstract object get_SyncRoot();

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void CopyTo(Array array, int index);
}

// Namespace: System.Collections
[ComVisibleAttribute] // RVA: 0xC2F504 Offset: 0xC2F504 VA: 0xC2F504
[DefaultMemberAttribute] // RVA: 0xC2F504 Offset: 0xC2F504 VA: 0xC2F504
public interface IList : IEnumerable, ICollection // TypeDefIndex: 47
{
	// Properties
	public abstract bool IsFixedSize { get; }
	public abstract bool IsReadOnly { get; }
	public abstract object Item { get; set; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract bool get_IsFixedSize();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract bool get_IsReadOnly();

	// RVA: -1 Offset: -1 Slot: 2
	public abstract object get_Item(int index);

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void set_Item(int index, object value);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract int Add(object value);

	// RVA: -1 Offset: -1 Slot: 5
	public abstract void Clear();

	// RVA: -1 Offset: -1 Slot: 6
	public abstract bool Contains(object value);

	// RVA: -1 Offset: -1 Slot: 7
	public abstract int IndexOf(object value);

	// RVA: -1 Offset: -1 Slot: 8
	public abstract void Insert(int index, object value);

	// RVA: -1 Offset: -1 Slot: 9
	public abstract void Remove(object value);

	// RVA: -1 Offset: -1 Slot: 10
	public abstract void RemoveAt(int index);
}

// Namespace: System.Collections.Generic
[DefaultMemberAttribute] // RVA: 0xC2F554 Offset: 0xC2F554 VA: 0xC2F554
public interface IList<T> : IEnumerable, ICollection<T>, IEnumerable<T> // TypeDefIndex: 48
{
	// Properties
	public abstract T Item { get; set; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract int IndexOf(T item);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-IList<object>.IndexOf
	*/

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void Insert(int index, T item);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-IList<object>.Insert
	*/

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void RemoveAt(int index);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-IList<object>.RemoveAt
	*/

	// RVA: -1 Offset: -1 Slot: 3
	public abstract T get_Item(int index);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-IList<object>.get_Item
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void set_Item(int index, T value);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-IList<object>.set_Item
	*/
}

// Namespace: System.Collections.Generic
public interface ICollection<T> : IEnumerable, IEnumerable<T> // TypeDefIndex: 49
{
	// Properties
	public abstract int Count { get; }
	public abstract bool IsReadOnly { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract int get_Count();
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-ICollection<object>.get_Count
	*/

	// RVA: -1 Offset: -1 Slot: 1
	public abstract bool get_IsReadOnly();
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-ICollection<object>.get_IsReadOnly
	*/

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void Add(T item);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-ICollection<object>.Add
	*/

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void Clear();
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-ICollection<object>.Clear
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public abstract bool Contains(T item);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-ICollection<object>.Contains
	*/

	// RVA: -1 Offset: -1 Slot: 5
	public abstract void CopyTo(T[] array, int arrayIndex);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-ICollection<object>.CopyTo
	*/

	// RVA: -1 Offset: -1 Slot: 6
	public abstract bool Remove(T item);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-ICollection<object>.Remove
	*/
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC2F58C Offset: 0xC2F58C VA: 0xC2F58C
[Serializable]
public struct Void // TypeDefIndex: 50
{}

// Namespace: System
[ClassInterfaceAttribute] // RVA: 0xC2F5A0 Offset: 0xC2F5A0 VA: 0xC2F5A0
[ComDefaultInterfaceAttribute] // RVA: 0xC2F5A0 Offset: 0xC2F5A0 VA: 0xC2F5A0
[ComVisibleAttribute] // RVA: 0xC2F5A0 Offset: 0xC2F5A0 VA: 0xC2F5A0
[Serializable]
public abstract class Type : MemberInfo, IReflect, _Type // TypeDefIndex: 51
{
	// Fields
	internal const BindingFlags DefaultBindingFlags = 28;
	internal RuntimeTypeHandle _impl; // 0x10
	public static readonly char Delimiter; // 0x0
	public static readonly Type[] EmptyTypes; // 0x8
	public static readonly MemberFilter FilterAttribute; // 0x10
	public static readonly MemberFilter FilterName; // 0x18
	public static readonly MemberFilter FilterNameIgnoreCase; // 0x20
	public static readonly object Missing; // 0x28

	// Properties
	public abstract Assembly Assembly { get; }
	public abstract string AssemblyQualifiedName { get; }
	public TypeAttributes Attributes { get; }
	public abstract Type BaseType { get; }
	public override Type DeclaringType { get; }
	public abstract string FullName { get; }
	public bool HasElementType { get; }
	public bool IsAbstract { get; }
	public bool IsArray { get; }
	public bool IsByRef { get; }
	public bool IsClass { get; }
	public bool IsContextful { get; }
	public bool IsEnum { get; }
	public bool IsExplicitLayout { get; }
	public bool IsInterface { get; }
	public bool IsMarshalByRef { get; }
	public bool IsPointer { get; }
	public bool IsPrimitive { get; }
	public bool IsSealed { get; }
	public bool IsSerializable { get; }
	public bool IsValueType { get; }
	public override MemberTypes MemberType { get; }
	public abstract override Module Module { get; }
	public abstract string Namespace { get; }
	public override Type ReflectedType { get; }
	public virtual RuntimeTypeHandle TypeHandle { get; }
	public abstract Type UnderlyingSystemType { get; }
	internal bool IsSystemType { get; }
	public virtual bool ContainsGenericParameters { get; }
	public virtual bool IsGenericTypeDefinition { get; }
	public virtual bool IsGenericType { get; }
	public virtual bool IsGenericParameter { get; }
	public bool IsNested { get; }
	internal bool IsUserType { get; }

	// Methods

	// RVA: 0x12FCCA8 Offset: 0x12FCCA8 VA: 0x12FCCA8
	protected void .ctor() { }

	// RVA: 0x12FCCB0 Offset: 0x12FCCB0 VA: 0x12FCCB0
	private static void .cctor() { }

	// RVA: 0x12FCDFC Offset: 0x12FCDFC VA: 0x12FCDFC
	private static bool FilterName_impl(MemberInfo m, object filterCriteria) { }

	// RVA: 0x12FCFBC Offset: 0x12FCFBC VA: 0x12FCFBC
	private static bool FilterNameIgnoreCase_impl(MemberInfo m, object filterCriteria) { }

	// RVA: 0x12FD1C0 Offset: 0x12FD1C0 VA: 0x12FD1C0
	private static bool FilterAttribute_impl(MemberInfo m, object filterCriteria) { }

	// RVA: -1 Offset: -1 Slot: 14
	public abstract Assembly get_Assembly();

	// RVA: -1 Offset: -1 Slot: 15
	public abstract string get_AssemblyQualifiedName();

	// RVA: 0x12FD4A0 Offset: 0x12FD4A0 VA: 0x12FD4A0 Slot: 16
	public TypeAttributes get_Attributes() { }

	// RVA: -1 Offset: -1 Slot: 17
	public abstract Type get_BaseType();

	// RVA: 0x12FD4B0 Offset: 0x12FD4B0 VA: 0x12FD4B0 Slot: 6
	public override Type get_DeclaringType() { }

	// RVA: -1 Offset: -1 Slot: 18
	public abstract string get_FullName();

	// RVA: 0x12FD4B8 Offset: 0x12FD4B8 VA: 0x12FD4B8 Slot: 19
	public bool get_HasElementType() { }

	// RVA: 0x12FD4C8 Offset: 0x12FD4C8 VA: 0x12FD4C8 Slot: 20
	public bool get_IsAbstract() { }

	// RVA: 0x12FD4EC Offset: 0x12FD4EC VA: 0x12FD4EC Slot: 21
	public bool get_IsArray() { }

	// RVA: 0x12FD4FC Offset: 0x12FD4FC VA: 0x12FD4FC Slot: 22
	public bool get_IsByRef() { }

	// RVA: 0x12FD50C Offset: 0x12FD50C VA: 0x12FD50C Slot: 23
	public bool get_IsClass() { }

	// RVA: 0x12FD594 Offset: 0x12FD594 VA: 0x12FD594 Slot: 24
	public bool get_IsContextful() { }

	// RVA: 0x12FD5A4 Offset: 0x12FD5A4 VA: 0x12FD5A4 Slot: 25
	public bool get_IsEnum() { }

	// RVA: 0x12FD6CC Offset: 0x12FD6CC VA: 0x12FD6CC Slot: 26
	public bool get_IsExplicitLayout() { }

	// RVA: 0x12FD560 Offset: 0x12FD560 VA: 0x12FD560 Slot: 27
	public bool get_IsInterface() { }

	// RVA: 0x12FD6F8 Offset: 0x12FD6F8 VA: 0x12FD6F8 Slot: 28
	public bool get_IsMarshalByRef() { }

	// RVA: 0x12FD708 Offset: 0x12FD708 VA: 0x12FD708 Slot: 29
	public bool get_IsPointer() { }

	// RVA: 0x12FD718 Offset: 0x12FD718 VA: 0x12FD718 Slot: 30
	public bool get_IsPrimitive() { }

	// RVA: 0x12FD728 Offset: 0x12FD728 VA: 0x12FD728 Slot: 31
	public bool get_IsSealed() { }

	// RVA: 0x12FD74C Offset: 0x12FD74C VA: 0x12FD74C Slot: 32
	public bool get_IsSerializable() { }

	// RVA: 0x12FD584 Offset: 0x12FD584 VA: 0x12FD584 Slot: 33
	public bool get_IsValueType() { }

	// RVA: 0x12FD960 Offset: 0x12FD960 VA: 0x12FD960 Slot: 7
	public override MemberTypes get_MemberType() { }

	// RVA: -1 Offset: -1 Slot: 10
	public abstract override Module get_Module();

	// RVA: -1 Offset: -1 Slot: 34
	public abstract string get_Namespace();

	// RVA: 0x12FD968 Offset: 0x12FD968 VA: 0x12FD968 Slot: 9
	public override Type get_ReflectedType() { }

	// RVA: 0x12FD970 Offset: 0x12FD970 VA: 0x12FD970 Slot: 35
	public virtual RuntimeTypeHandle get_TypeHandle() { }

	// RVA: -1 Offset: -1 Slot: 36
	public abstract Type get_UnderlyingSystemType();

	// RVA: 0x12FD978 Offset: 0x12FD978 VA: 0x12FD978 Slot: 0
	public override bool Equals(object o) { }
