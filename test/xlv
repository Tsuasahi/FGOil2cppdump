	// RVA: 0x16370A4 Offset: 0x16370A4 VA: 0x16370A4
	public void .ctor() { }

	// RVA: 0x163895C Offset: 0x163895C VA: 0x163895C
	internal void <>m__0() { }

	// RVA: 0x1638E28 Offset: 0x1638E28 VA: 0x1638E28
	internal void <>m__1() { }

	// RVA: 0x1638ECC Offset: 0x1638ECC VA: 0x1638ECC
	internal void <>m__2() { }

	// RVA: 0x1638F58 Offset: 0x1638F58 VA: 0x1638F58
	internal void <>m__3() { }

	// RVA: 0x163900C Offset: 0x163900C VA: 0x163900C
	internal void <>m__4() { }

	// RVA: 0x16391C8 Offset: 0x16391C8 VA: 0x16391C8
	internal void <>m__5() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41CB4 Offset: 0xC41CB4 VA: 0xC41CB4
private sealed class CompleteMissionListViewManager.<setOpenPanel>c__AnonStorey2 // TypeDefIndex: 5402
{
	// Fields
	internal int completeMissionPanelChildIdx; // 0x10
	internal UITexture tex; // 0x18
	internal UITexture animTex; // 0x20
	internal CompleteMissionListViewManager $this; // 0x28

	// Methods

	// RVA: 0x1638050 Offset: 0x1638050 VA: 0x1638050
	public void .ctor() { }

	// RVA: 0x1639254 Offset: 0x1639254 VA: 0x1639254
	internal void <>m__0(AssetData backPanel) { }
}

// Namespace: 
public class CompleteMissionListViewObject : MissionListViewObject // TypeDefIndex: 5403
{
	// Properties
	private CompleteMissionListViewItemDraw CompleteMissionItemDraw { get; }

	// Methods

	// RVA: 0x1639674 Offset: 0x1639674 VA: 0x1639674
	public void .ctor() { }

	// RVA: 0x163967C Offset: 0x163967C VA: 0x163967C
	private CompleteMissionListViewItemDraw get_CompleteMissionItemDraw() { }

	// RVA: 0x1639700 Offset: 0x1639700 VA: 0x1639700
	private void Update() { }

	// RVA: 0x163604C Offset: 0x163604C VA: 0x163604C
	public CompleteMissionListViewItem GetItem() { }

	// RVA: 0x1638660 Offset: 0x1638660 VA: 0x1638660
	public void OnChangeAlphaAnim() { }
}

// Namespace: 
public class CompleteMissionPanelComponent : MonoBehaviour // TypeDefIndex: 5404
{
	// Fields
	[SerializeField] // RVA: 0xC4BEDC Offset: 0xC4BEDC VA: 0xC4BEDC
	private CompleteMissionSprite completeMissionFrameSprite; // 0x18

	// Methods

	// RVA: 0x163975C Offset: 0x163975C VA: 0x163975C
	public void .ctor() { }

	// RVA: 0x1639764 Offset: 0x1639764 VA: 0x1639764
	private void Awake() { }

	// RVA: 0x1639908 Offset: 0x1639908 VA: 0x1639908
	private void OnDestroy() { }

	// RVA: 0x1639934 Offset: 0x1639934 VA: 0x1639934
	public void OnClickPanel(GameObject DispNum) { }

	// RVA: 0x163997C Offset: 0x163997C VA: 0x163997C
	public void MoveMissionBoard(int dispNum) { }

	// RVA: 0x1639AA4 Offset: 0x1639AA4 VA: 0x1639AA4
	private EventMissionEntity targetCompleteMissionId(int dispNum) { }
}

// Namespace: 
public class CompleteMissionSprite : MonoBehaviour // TypeDefIndex: 5405
{
	// Fields
	protected bool isEventUILoad; // 0x18
	protected Action eventUILoadCallbackFunc; // 0x20
	protected AssetData eventUIAssetData; // 0x28
	protected UIAtlas eventUIDownloadAtlas; // 0x30
	private const string completeMissionBtn = "button_mission_{0}";
	private const string completeMissionBg = "mission_bg_{0}";
	private const string completeMissionFrame = "img_flame_{0}";
	private const string completeMissionPanel = "mission_on_{0}";
	private const string completeMissionTarget = "img_txt_target_panel";
	private const string completeMissionListBg = "event_tab_type5_0";
	private int eventId; // 0x38
	[SerializeField] // RVA: 0xC4BEEC Offset: 0xC4BEEC VA: 0xC4BEEC
	private UISprite sprite; // 0x40

	// Methods

	// RVA: 0x1639C0C Offset: 0x1639C0C VA: 0x1639C0C
	public void .ctor() { }

	// RVA: 0x1639C14 Offset: 0x1639C14 VA: 0x1639C14
	public void InitBtn(int eventId) { }

	// RVA: 0x1639828 Offset: 0x1639828 VA: 0x1639828
	public void InitFrame(int eventId) { }

	// RVA: 0x16345C0 Offset: 0x16345C0 VA: 0x16345C0
	public void InitPanel(int eventId, UISprite listBgSprite, int panelCount = 16) { }

	// RVA: 0x1639F0C Offset: 0x1639F0C VA: 0x1639F0C
	public void InitTarget(int eventId) { }

	// RVA: 0x1639CFC Offset: 0x1639CFC VA: 0x1639CFC
	protected void LoadEventUI(int eventId, Action callback, int loadParallelMax = 1) { }

	// RVA: 0x1639F94 Offset: 0x1639F94 VA: 0x1639F94
	protected void LoadEventUIEnd(AssetData assetData) { }

	// RVA: 0x163A070 Offset: 0x163A070 VA: 0x163A070
	protected UIAtlas CreateUIAtlasFromAssetData(AssetData assetData, string name) { }

	// RVA: 0x1633878 Offset: 0x1633878 VA: 0x1633878
	public void ReleaseEventUI() { }

	// RVA: 0x163A17C Offset: 0x163A17C VA: 0x163A17C
	public bool SetEventUI(UISprite sprite, string spriteName) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7C24 Offset: 0xCC7C24 VA: 0xCC7C24
	// RVA: 0x163A2E4 Offset: 0x163A2E4 VA: 0x163A2E4
	private void <InitTarget>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41CC4 Offset: 0xC41CC4 VA: 0xC41CC4
private sealed class CompleteMissionSprite.<InitBtn>c__AnonStorey0 // TypeDefIndex: 5406
{
	// Fields
	internal int eventId; // 0x10
	internal CompleteMissionSprite $this; // 0x18

	// Methods

	// RVA: 0x1639CF4 Offset: 0x1639CF4 VA: 0x1639CF4
	public void .ctor() { }

	// RVA: 0x163A338 Offset: 0x163A338 VA: 0x163A338
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41CD4 Offset: 0xC41CD4 VA: 0xC41CD4
private sealed class CompleteMissionSprite.<InitFrame>c__AnonStorey1 // TypeDefIndex: 5407
{
	// Fields
	internal int eventId; // 0x10
	internal CompleteMissionSprite $this; // 0x18

	// Methods

	// RVA: 0x1639EFC Offset: 0x1639EFC VA: 0x1639EFC
	public void .ctor() { }

	// RVA: 0x163A400 Offset: 0x163A400 VA: 0x163A400
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41CE4 Offset: 0xC41CE4 VA: 0xC41CE4
private sealed class CompleteMissionSprite.<InitPanel>c__AnonStorey2 // TypeDefIndex: 5408
{
	// Fields
	internal int panelCount; // 0x10
	internal int eventId; // 0x14
	internal UISprite listBgSprite; // 0x18
	internal CompleteMissionSprite $this; // 0x20
	private static Action <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1639F04 Offset: 0x1639F04 VA: 0x1639F04
	public void .ctor() { }

	// RVA: 0x163A4C8 Offset: 0x163A4C8 VA: 0x163A4C8
	internal void <>m__0() { }

	// RVA: 0x163A808 Offset: 0x163A808 VA: 0x163A808
	private static void <>m__1() { }
}

// Namespace: 
public class ConnectMark : BaseMonoBehaviour // TypeDefIndex: 5409
{
	// Fields
	private const int PROFILE_MESSAGE_WIDTH_MAX = 560;
	private const int PROFILE_MESSAGE_HEIGHT_MAX = 360;
	private const int PROFILE_MESSAGE_HEIGHT_MAX_SCOPE = 350;
	private const int PROFILE_MESSAGE_MAX_COUNT = 10;
	private const int PROFILE_MESSAGE_SCOPE_ANCHOR = 8;
	private const float MARK_FADE_IN_LAG_DEFAULT = 0.5;
	private const float MARK_FADE_IN_LAG_IMMEDIATE = 0;
	[SerializeField] // RVA: 0xC4BEFC Offset: 0xC4BEFC VA: 0xC4BEFC
	protected GameObject maskBase; // 0x18
	[SerializeField] // RVA: 0xC4BF0C Offset: 0xC4BF0C VA: 0xC4BF0C
	protected GameObject markBase; // 0x20
	[SerializeField] // RVA: 0xC4BF1C Offset: 0xC4BF1C VA: 0xC4BF1C
	protected UILabel markLabel; // 0x28
	[SerializeField] // RVA: 0xC4BF2C Offset: 0xC4BF2C VA: 0xC4BF2C
	protected UISprite markSprite; // 0x30
	[SerializeField] // RVA: 0xC4BF3C Offset: 0xC4BF3C VA: 0xC4BF3C
	protected GameObject tipsBase; // 0x38
	[SerializeField] // RVA: 0xC4BF4C Offset: 0xC4BF4C VA: 0xC4BF4C
	protected UILabel tipsMessageLabel; // 0x40
	[SerializeField] // RVA: 0xC4BF5C Offset: 0xC4BF5C VA: 0xC4BF5C
	protected GameObject profileBase; // 0x48
	[SerializeField] // RVA: 0xC4BF6C Offset: 0xC4BF6C VA: 0xC4BF6C
	protected UILabel profileNameLabel; // 0x50
	[SerializeField] // RVA: 0xC4BF7C Offset: 0xC4BF7C VA: 0xC4BF7C
	protected UILabel profileClassLabel; // 0x58
	[SerializeField] // RVA: 0xC4BF8C Offset: 0xC4BF8C VA: 0xC4BF8C
	protected UILabel profileMessageLabel; // 0x60
	[SerializeField] // RVA: 0xC4BF9C Offset: 0xC4BF9C VA: 0xC4BF9C
	protected UILabel friendCodeLabel; // 0x68
	[SerializeField] // RVA: 0xC4BFAC Offset: 0xC4BFAC VA: 0xC4BFAC
	protected GameObject progressBarBase; // 0x70
	[SerializeField] // RVA: 0xC4BFBC Offset: 0xC4BFBC VA: 0xC4BFBC
	protected UISlider progressBarSlider; // 0x78
	[SerializeField] // RVA: 0xC4BFCC Offset: 0xC4BFCC VA: 0xC4BFCC
	protected UILabel progressBarLabel; // 0x80
	[SerializeField] // RVA: 0xC4BFDC Offset: 0xC4BFDC VA: 0xC4BFDC
	protected UITexture loadBackTexture; // 0x88
	[SerializeField] // RVA: 0xC4BFEC Offset: 0xC4BFEC VA: 0xC4BFEC
	protected UILabel loadCancelLabel; // 0x90
	[SerializeField] // RVA: 0xC4BFFC Offset: 0xC4BFFC VA: 0xC4BFFC
	protected UICommonButton loadCancelButton; // 0x98
	[SerializeField] // RVA: 0xC4C00C Offset: 0xC4C00C VA: 0xC4C00C
	protected ErrorDialog loadCancelConfirmDialog; // 0xA0
	[SerializeField] // RVA: 0xC4C01C Offset: 0xC4C01C VA: 0xC4C01C
	protected NotificationDialog notificationDialog; // 0xA8
	[SerializeField] // RVA: 0xC4C02C Offset: 0xC4C02C VA: 0xC4C02C
	protected GameObject touchInfoBase; // 0xB0
	[SerializeField] // RVA: 0xC4C03C Offset: 0xC4C03C VA: 0xC4C03C
	protected GameObject miniProgressBarBase; // 0xB8
	[SerializeField] // RVA: 0xC4C04C Offset: 0xC4C04C VA: 0xC4C04C
	protected UISlider miniProgressBarSlider; // 0xC0
	[SerializeField] // RVA: 0xC4C05C Offset: 0xC4C05C VA: 0xC4C05C
	protected UILabel miniProgressBarLabel; // 0xC8
	[SerializeField] // RVA: 0xC4C06C Offset: 0xC4C06C VA: 0xC4C06C
	protected GameObject arrowInfo; // 0xD0
	[SerializeField] // RVA: 0xC4C07C Offset: 0xC4C07C VA: 0xC4C07C
	protected UICommonButton miniProgressLoadCancelButton; // 0xD8
	[SerializeField] // RVA: 0xC4C08C Offset: 0xC4C08C VA: 0xC4C08C
	protected UILabel miniProgressLoadCancelLabel; // 0xE0
	[SerializeField] // RVA: 0xC4C09C Offset: 0xC4C09C VA: 0xC4C09C
	protected UIAtlas systemUIAtlas; // 0xE8
	protected static string[] markIconAnimationNameList; // 0x0
	protected Action callbackFunc; // 0xF0
	protected ConnectMark.Mode mode; // 0xF8
	protected int connectCount; // 0xFC
	protected bool isBusy; // 0x100
	protected bool isLoadPause; // 0x101
	protected bool isLoadCancel; // 0x102
	protected bool isMaskClickWait; // 0x103
	protected bool isMaskClickTip; // 0x104
	protected int tipNum; // 0x108
	protected IEnumerator markCRW; // 0x110
	protected IEnumerator progressBarCRW; // 0x118
	protected string markAnimationName; // 0x120
	protected Texture2D loadBackTextureData; // 0x128
	protected ServantCommentEntity[] servantCommentEntityList; // 0x130
	protected int svtProfileIndex; // 0x138
	protected Vector3 svtProfileMsgPos; // 0x13C
	private bool isInitilizedMsgPos; // 0x148
	private Nullable<ConnectMarkFadeInLagType> fadeInLagType; // 0x14C
	private int CurrentEventId; // 0x154
	private int CurrentAnimationId; // 0x158
	private UIAtlas EventUIAtlas; // 0x160
	private string CurrentEventUIAtlasName; // 0x168
	private List<UIAtlas> EventUIAtlasList; // 0x170
	private Dictionary<string, UIAtlas> EventUIAtlasDictionary; // 0x178

	// Methods

	// RVA: 0x14595E8 Offset: 0x14595E8 VA: 0x14595E8
	public void .ctor() { }

	// RVA: 0x14595F0 Offset: 0x14595F0 VA: 0x14595F0
	public bool IsBusy() { }

	// RVA: 0x14595F8 Offset: 0x14595F8 VA: 0x14595F8
	public void Init() { }

	// RVA: 0x1459BC0 Offset: 0x1459BC0 VA: 0x1459BC0
	public bool IsMode(ConnectMark.Mode mode) { }

	// RVA: 0x1459BD0 Offset: 0x1459BD0 VA: 0x1459BD0
	public void SetMode(ConnectMark.Mode mode) { }

	// RVA: 0x1459C04 Offset: 0x1459C04 VA: 0x1459C04
	public void SetMarkFadeInLag(ConnectMarkFadeInLagType type) { }

	// RVA: 0x1459CB8 Offset: 0x1459CB8 VA: 0x1459CB8
	private float GetFadeInLagSecondByLagType(Nullable<ConnectMarkFadeInLagType> type) { }

	// RVA: 0x1459D3C Offset: 0x1459D3C VA: 0x1459D3C
	private bool NeedToShowMarkDefinitely(Nullable<ConnectMarkFadeInLagType> type) { }

	// RVA: 0x1459DB4 Offset: 0x1459DB4 VA: 0x1459DB4
	public void SetConnect(bool isConnect) { }

	// RVA: 0x14597FC Offset: 0x14597FC VA: 0x14597FC
	protected void SetDispMode() { }

	// RVA: 0x1459EF8 Offset: 0x1459EF8 VA: 0x1459EF8
	protected void OnEndAlphaTween() { }

	// RVA: 0x1459F2C Offset: 0x1459F2C VA: 0x1459F2C
	protected void LoadBackImage(string fileName) { }

	// RVA: 0x145974C Offset: 0x145974C VA: 0x145974C
	protected void ReleaseBackImage() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC7C34 Offset: 0xCC7C34 VA: 0xCC7C34
	// RVA: 0x1459DF4 Offset: 0x1459DF4 VA: 0x1459DF4
	private IEnumerator MarkCR(string message) { }

	// RVA: 0x145A05C Offset: 0x145A05C VA: 0x145A05C
	protected bool InitServantProfileList() { }

	// RVA: 0x145A3E0 Offset: 0x145A3E0 VA: 0x145A3E0
	protected void SetServantProfile(int index) { }

	// RVA: 0x145A718 Offset: 0x145A718 VA: 0x145A718
	private string GetServantNameByProfileSaveData(ServantEntity servantEntity) { }

	// RVA: 0x145A8A4 Offset: 0x145A8A4 VA: 0x145A8A4
	public void OnClickLeftArrow() { }

	// RVA: 0x145A914 Offset: 0x145A914 VA: 0x145A914
	public void BeforeServantoProfile() { }

	// RVA: 0x145A960 Offset: 0x145A960 VA: 0x145A960
	public void OnClickRightArrow() { }

	// RVA: 0x145A9D0 Offset: 0x145A9D0 VA: 0x145A9D0
	public void NextServantProfile() { }

	// RVA: 0x145AA34 Offset: 0x145AA34 VA: 0x145AA34
	protected bool SetTipMessage() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC7C44 Offset: 0xCC7C44 VA: 0xCC7C44
	// RVA: 0x1459E88 Offset: 0x1459E88 VA: 0x1459E88
	private IEnumerator ProgressBarCR() { }

	// RVA: 0x145ABF4 Offset: 0x145ABF4 VA: 0x145ABF4
	protected void EndNotificationDownload(bool isDecide) { }

	// RVA: 0x145AC84 Offset: 0x145AC84 VA: 0x145AC84
	protected void EndCloseNotificationDownload() { }

	// RVA: 0x145AC8C Offset: 0x145AC8C VA: 0x145AC8C
	public void OnClickCancel() { }

	// RVA: 0x145AD98 Offset: 0x145AD98 VA: 0x145AD98
	protected void CallbackConfirmDialog(bool isDecie) { }

	// RVA: 0x145AE20 Offset: 0x145AE20 VA: 0x145AE20
	public void MaskClickInit() { }

	// RVA: 0x145AE80 Offset: 0x145AE80 VA: 0x145AE80
	public bool IsMaskClick() { }

	// RVA: 0x145AE90 Offset: 0x145AE90 VA: 0x145AE90
	public void OnClickMask() { }

	// RVA: 0x145AF6C Offset: 0x145AF6C VA: 0x145AF6C
	public void SetMiniProgress(float progress) { }

	// RVA: 0x145AFAC Offset: 0x145AFAC VA: 0x145AFAC
	public void SetActiveMiniProgressCancelButton(bool enabled) { }

	// RVA: 0x145B02C Offset: 0x145B02C VA: 0x145B02C
	public void LoadOtherMark(int eventId, int animationId) { }

	// RVA: 0x145B130 Offset: 0x145B130 VA: 0x145B130
	private void LoadAtlas(string atlasName, int eventId, Action callback) { }

	// RVA: 0x145B2D8 Offset: 0x145B2D8 VA: 0x145B2D8
	public void SetOtherMark(int eventId, int animationId = 0) { }

	// RVA: 0x145B5F8 Offset: 0x145B5F8 VA: 0x145B5F8
	private void Awake() { }

	// RVA: 0x145B6A0 Offset: 0x145B6A0 VA: 0x145B6A0
	private static void .cctor() { }
}

// Namespace: 
public enum ConnectMark.Mode // TypeDefIndex: 5410
{
	// Fields
	public int value__; // 0x0
	public const ConnectMark.Mode DEFAULT = 0;
	public const ConnectMark.Mode LOAD = 1;
	public const ConnectMark.Mode LOAD_TIP = 2;
	public const ConnectMark.Mode LOAD_PROFILE_BOOT = 3;
	public const ConnectMark.Mode LOAD_BAR = 4;
	public const ConnectMark.Mode LOAD_BAR_CANCEL = 5;
	public const ConnectMark.Mode LOAD_BAR_BOOT = 6;
	public const ConnectMark.Mode LOAD_BAR_PROFILE_BOOT = 7;
	public const ConnectMark.Mode MASK = 8;
	public const ConnectMark.Mode LOAD_MOVIE = 9;
	public const ConnectMark.Mode THINKING = 10;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41CF4 Offset: 0xC41CF4 VA: 0xC41CF4
private sealed class ConnectMark.<MarkCR>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 5411
{
	// Fields
	internal string message; // 0x10
	internal SimpleAnimation <simpleAnimation>__0; // 0x18
	internal Animation <an>__0; // 0x20
	internal bool <isNew>__0; // 0x28
	internal string <tenText>__0; // 0x30
	internal ConnectMark $this; // 0x38
	internal object $current; // 0x40
	internal bool $disposing; // 0x48
	internal int $PC; // 0x4C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD7E70 Offset: 0xCD7E70 VA: 0xCD7E70
	// RVA: 0x145A054 Offset: 0x145A054 VA: 0x145A054
	public void .ctor() { }

	// RVA: 0x145B954 Offset: 0x145B954 VA: 0x145B954 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7E80 Offset: 0xCD7E80 VA: 0xCD7E80
	// RVA: 0x145CB84 Offset: 0x145CB84 VA: 0x145CB84 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7E90 Offset: 0xCD7E90 VA: 0xCD7E90
	// RVA: 0x145CB8C Offset: 0x145CB8C VA: 0x145CB8C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7EA0 Offset: 0xCD7EA0 VA: 0xCD7EA0
	// RVA: 0x145CB94 Offset: 0x145CB94 VA: 0x145CB94 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7EB0 Offset: 0xCD7EB0 VA: 0xCD7EB0
	// RVA: 0x145CBA8 Offset: 0x145CBA8 VA: 0x145CBA8 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41D04 Offset: 0xC41D04 VA: 0xC41D04
private sealed class ConnectMark.<ProgressBarCR>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 5412
{
	// Fields
	internal bool <isUseCancel>__0; // 0x10
	internal bool <isUseDialog>__0; // 0x11
	internal float <sliderValue>__0; // 0x14
	internal long <allSize>__1; // 0x18
	internal long <size>__2; // 0x20
	internal float <vs>__2; // 0x28
	internal ConnectMark $this; // 0x30
	internal object $current; // 0x38
	internal bool $disposing; // 0x40
	internal int $PC; // 0x44

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD7EC0 Offset: 0xCD7EC0 VA: 0xCD7EC0
	// RVA: 0x145ABEC Offset: 0x145ABEC VA: 0x145ABEC
	public void .ctor() { }

	// RVA: 0x145CC10 Offset: 0x145CC10 VA: 0x145CC10 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7ED0 Offset: 0xCD7ED0 VA: 0xCD7ED0
	// RVA: 0x145DC40 Offset: 0x145DC40 VA: 0x145DC40 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7EE0 Offset: 0xCD7EE0 VA: 0xCD7EE0
	// RVA: 0x145DC48 Offset: 0x145DC48 VA: 0x145DC48 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7EF0 Offset: 0xCD7EF0 VA: 0xCD7EF0
	// RVA: 0x145DC50 Offset: 0x145DC50 VA: 0x145DC50 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7F00 Offset: 0xCD7F00 VA: 0xCD7F00
	// RVA: 0x145DC64 Offset: 0x145DC64 VA: 0x145DC64 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41D14 Offset: 0xC41D14 VA: 0xC41D14
private sealed class ConnectMark.<LoadAtlas>c__AnonStorey2 // TypeDefIndex: 5413
{
	// Fields
	internal string atlasName; // 0x10
	internal Action callback; // 0x18
	internal ConnectMark $this; // 0x20

	// Methods

	// RVA: 0x145B2D0 Offset: 0x145B2D0 VA: 0x145B2D0
	public void .ctor() { }

	// RVA: 0x145B808 Offset: 0x145B808 VA: 0x145B808
	internal void <>m__0(AssetData prefabData) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41D24 Offset: 0xC41D24 VA: 0xC41D24
private sealed class ConnectMark.<SetOtherMark>c__AnonStorey4 // TypeDefIndex: 5414
{
	// Fields
	internal int eventId; // 0x10
	internal int animationId; // 0x14
	internal ConnectMark $this; // 0x18

	// Methods

	// RVA: 0x145B5E8 Offset: 0x145B5E8 VA: 0x145B5E8
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41D34 Offset: 0xC41D34 VA: 0xC41D34
private sealed class ConnectMark.<SetOtherMark>c__AnonStorey3 // TypeDefIndex: 5415
{
	// Fields
	internal string atlasName; // 0x10
	internal ConnectMark.<SetOtherMark>c__AnonStorey4 <>f__ref$4; // 0x18

	// Methods

	// RVA: 0x145B5F0 Offset: 0x145B5F0 VA: 0x145B5F0
	public void .ctor() { }

	// RVA: 0x145DCCC Offset: 0x145DCCC VA: 0x145DCCC
	internal void <>m__0() { }
}

// Namespace: 
public class DebugSelectDialog : DummyErrorSelectDialog // TypeDefIndex: 5416
{
	// Fields
	[SerializeField] // RVA: 0xC4C0AC Offset: 0xC4C0AC VA: 0xC4C0AC
	protected UILabel cancelLabel; // 0x88

	// Methods

	// RVA: 0x10BC00C Offset: 0x10BC00C VA: 0x10BC00C
	public void .ctor() { }

	// RVA: 0x10BC078 Offset: 0x10BC078 VA: 0x10BC078
	public void Init() { }
}

// Namespace: 
public class DetailInfoDialog : BaseDialog // TypeDefIndex: 5417
{
	// Fields
	[SerializeField] // RVA: 0xC4C0BC Offset: 0xC4C0BC VA: 0xC4C0BC
	protected UILabel nameLabel; // 0x58
	[SerializeField] // RVA: 0xC4C0CC Offset: 0xC4C0CC VA: 0xC4C0CC
	protected UILabel infoLabel; // 0x60
	[SerializeField] // RVA: 0xC4C0DC Offset: 0xC4C0DC VA: 0xC4C0DC
	protected UILabel infoLongLabel; // 0x68
	[SerializeField] // RVA: 0xC4C0EC Offset: 0xC4C0EC VA: 0xC4C0EC
	protected UILabel detailMsgLabel; // 0x70
	[SerializeField] // RVA: 0xC4C0FC Offset: 0xC4C0FC VA: 0xC4C0FC
	protected UIScrollView scrollView; // 0x78
	protected bool isButtonEnable; // 0x80
	private static readonly int DEFAULT_LABEL_HEIGHT; // 0x0
	private static readonly int DEFAULT_NAME_WIDTH; // 0x4
	private static readonly int DETAIL_FONT_SIZE; // 0x8
	private static readonly int MAX_HEIGHT; // 0xC

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x10CE310 Offset: 0x10CE310 VA: 0x10CE310
	public void .ctor() { }

	// RVA: 0x10CE378 Offset: 0x10CE378 VA: 0x10CE378
	public void Init() { }

	// RVA: 0x10CE600 Offset: 0x10CE600 VA: 0x10CE600
	public void Open(string name, string info, string detail) { }

	// RVA: 0x10CE930 Offset: 0x10CE930 VA: 0x10CE930
	public void OpenWithLongInfo(string name, string info, string detail, bool isSetMinSize = True, bool isCondensedName = False) { }

	// RVA: 0x10CE7C4 Offset: 0x10CE7C4 VA: 0x10CE7C4
	private void SetOverFlowName(bool isCondensedName) { }

	// RVA: 0x10CECC4 Offset: 0x10CECC4 VA: 0x10CECC4
	protected void EndOpen() { }

	// RVA: 0x10CECD0 Offset: 0x10CECD0 VA: 0x10CECD0
	public void OnClickClose() { }

	// RVA: 0x10CED8C Offset: 0x10CED8C VA: 0x10CED8C
	protected void EndClose() { }

	// RVA: 0x10CED90 Offset: 0x10CED90 VA: 0x10CED90 Slot: 6
	protected override string get_closeBtnPath() { }

	// RVA: 0x10CEDD8 Offset: 0x10CEDD8 VA: 0x10CEDD8
	private static void .cctor() { }
}

// Namespace: 
public class DummyErrorSelectDialog : BaseDialog // TypeDefIndex: 5418
{
	// Fields
	[SerializeField] // RVA: 0xC4C10C Offset: 0xC4C10C VA: 0xC4C10C
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC4C11C Offset: 0xC4C11C VA: 0xC4C11C
	protected UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC4C12C Offset: 0xC4C12C VA: 0xC4C12C
	protected UILabel decideLabel; // 0x68
	[SerializeField] // RVA: 0xC4C13C Offset: 0xC4C13C VA: 0xC4C13C
	public UIPopupList errorInput; // 0x70
	protected DummyErrorSelectDialog.ClickDelegate clickFunc; // 0x78
	protected bool isButtonEnable; // 0x80

	// Methods

	// RVA: 0x10BC010 Offset: 0x10BC010 VA: 0x10BC010
	public void .ctor() { }

	// RVA: 0x10BC148 Offset: 0x10BC148 VA: 0x10BC148
	public void Init() { }
}

// Namespace: 
public sealed class DummyErrorSelectDialog.ClickDelegate : MulticastDelegate // TypeDefIndex: 5419
{
	// Methods

	// RVA: 0x10D4E04 Offset: 0x10D4E04 VA: 0x10D4E04
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x10D4E14 Offset: 0x10D4E14 VA: 0x10D4E14 Slot: 11
	public virtual void Invoke(int selectError) { }

	// RVA: 0x10D5040 Offset: 0x10D5040 VA: 0x10D5040 Slot: 12
	public virtual IAsyncResult BeginInvoke(int selectError, AsyncCallback callback, object object) { }

	// RVA: 0x10D50CC Offset: 0x10D50CC VA: 0x10D50CC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class EnableCommonReleaseComponent : MonoBehaviour // TypeDefIndex: 5420
{
	// Fields
	[SerializeField] // RVA: 0xC4C14C Offset: 0xC4C14C VA: 0xC4C14C
	private int commonReleaseId; // 0x18
	[SerializeField] // RVA: 0xC4C15C Offset: 0xC4C15C VA: 0xC4C15C
	private bool visibleCommonReleaseIsOpen; // 0x1C
	[SerializeField] // RVA: 0xC4C16C Offset: 0xC4C16C VA: 0xC4C16C
	private bool refreshingWhenStart; // 0x1D
	[SerializeField] // RVA: 0xC4C17C Offset: 0xC4C17C VA: 0xC4C17C
	private bool refreshingWhenOnEnable; // 0x1E
	[SerializeField] // RVA: 0xC4C18C Offset: 0xC4C18C VA: 0xC4C18C
	private GameObject target; // 0x20

	// Methods

	// RVA: 0x16F7164 Offset: 0x16F7164 VA: 0x16F7164
	public void .ctor() { }

	// RVA: 0x16F7174 Offset: 0x16F7174 VA: 0x16F7174
	private void Awake() { }

	// RVA: 0x16F71FC Offset: 0x16F71FC VA: 0x16F71FC
	private void Start() { }

	// RVA: 0x16F7260 Offset: 0x16F7260 VA: 0x16F7260
	private void OnEnable() { }

	// RVA: 0x16F720C Offset: 0x16F720C VA: 0x16F720C
	public void Refresh() { }

	// RVA: 0x16F7270 Offset: 0x16F7270 VA: 0x16F7270
	private bool IsOpen() { }
}

// Namespace: 
public class EquipGraphListMenu : BaseMenu // TypeDefIndex: 5421
{
	// Fields
	[SerializeField] // RVA: 0xC4C19C Offset: 0xC4C19C VA: 0xC4C19C
	protected EquipGraphListViewManager servantEquipListViewManager; // 0x58
	[SerializeField] // RVA: 0xC4C1AC Offset: 0xC4C1AC VA: 0xC4C1AC
	protected UISprite statusTabSprite; // 0x60
	[SerializeField] // RVA: 0xC4C1BC Offset: 0xC4C1BC VA: 0xC4C1BC
	protected UISprite lockTabSprite; // 0x68
	[SerializeField] // RVA: 0xC4C1CC Offset: 0xC4C1CC VA: 0xC4C1CC
	protected UISprite choiceTabSprite; // 0x70
	[SerializeField] // RVA: 0xC4C1DC Offset: 0xC4C1DC VA: 0xC4C1DC
	protected UISprite scaleChangeTabSprite; // 0x78
	[SerializeField] // RVA: 0xC4C1EC Offset: 0xC4C1EC VA: 0xC4C1EC
	protected UICommonButton statusTabButton; // 0x80
	[SerializeField] // RVA: 0xC4C1FC Offset: 0xC4C1FC VA: 0xC4C1FC
	protected UICommonButton lockTabButton; // 0x88
	[SerializeField] // RVA: 0xC4C20C Offset: 0xC4C20C VA: 0xC4C20C
	protected UICommonButton choiceTabButton; // 0x90
	[SerializeField] // RVA: 0xC4C21C Offset: 0xC4C21C VA: 0xC4C21C
	protected UICommonButton scaleChangeTabButton; // 0x98
	[SerializeField] // RVA: 0xC4C22C Offset: 0xC4C22C VA: 0xC4C22C
	protected UILabel explanationLabel; // 0xA0
	[SerializeField] // RVA: 0xC4C23C Offset: 0xC4C23C VA: 0xC4C23C
	protected TitleInfoControl titleInfo; // 0xA8
	protected EquipGraphListMenu.ModeKind modeKind; // 0xB0
	protected bool isInitTab; // 0xB4
	protected EquipGraphListMenu.State state; // 0xB8
	[CompilerGeneratedAttribute] // RVA: 0xC4C24C Offset: 0xC4C24C VA: 0xC4C24C
	[DebuggerBrowsableAttribute] // RVA: 0xC4C24C Offset: 0xC4C24C VA: 0xC4C24C
	private EquipGraphListMenu.CallbackFunc callbackFunc; // 0xC0
	protected Action closeCallbackFunc; // 0xC8
	protected int selectNum; // 0xD0
	private bool isSelectedSvt; // 0xD4
	protected EquipGraphListMenu.RequestCallbackFunc requedstCallback; // 0xD8
	[CompilerGeneratedAttribute] // RVA: 0xC4C288 Offset: 0xC4C288 VA: 0xC4C288
	private static ErrorDialog.ClickDelegate <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC4C298 Offset: 0xC4C298 VA: 0xC4C298
	private static ErrorDialog.ClickDelegate <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x16FEDA0 Offset: 0x16FEDA0 VA: 0x16FEDA0
	public void .ctor() { }

	// RVA: 0x16FEE08 Offset: 0x16FEE08 VA: 0x16FEE08
	protected void add_callbackFunc(EquipGraphListMenu.CallbackFunc value) { }

	// RVA: 0x16FEEF4 Offset: 0x16FEEF4 VA: 0x16FEEF4
	protected void remove_callbackFunc(EquipGraphListMenu.CallbackFunc value) { }

	// RVA: 0x16FEFE0 Offset: 0x16FEFE0 VA: 0x16FEFE0
	public EquipGraphListMenu.ModeKind GetModeKind() { }

	// RVA: 0x16FEFE8 Offset: 0x16FEFE8 VA: 0x16FEFE8
	public void Init() { }

	// RVA: 0x16FF074 Offset: 0x16FF074 VA: 0x16FF074
	public void Open(PartyListViewItem partyItem, int member, EventUpValSetupInfo setupInfo, EquipGraphListMenu.CallbackFunc callback) { }

	// RVA: 0x16FFFC4 Offset: 0x16FFFC4 VA: 0x16FFFC4
	public void Open(WarBoardPartyListViewItem partyItem, int member, EventUpValSetupInfo setupInfo, EquipGraphListMenu.CallbackFunc callback) { }

	// RVA: 0x1700A0C Offset: 0x1700A0C VA: 0x1700A0C
	protected void EndOpen() { }

	// RVA: 0x1700B40 Offset: 0x1700B40 VA: 0x1700B40
	public void Close() { }

	// RVA: 0x1700B48 Offset: 0x1700B48 VA: 0x1700B48
	public void Close(Action callback) { }

	// RVA: 0x1700BE8 Offset: 0x1700BE8 VA: 0x1700BE8
	protected void EndCloseList() { }

	// RVA: 0x1700BEC Offset: 0x1700BEC VA: 0x1700BEC
	protected void EndClose() { }

	// RVA: 0x16FF40C Offset: 0x16FF40C VA: 0x16FF40C
	protected void SetTabKind(EquipGraphListMenu.ModeKind modeKind, bool isInit = False) { }

	// RVA: 0x1700D54 Offset: 0x1700D54 VA: 0x1700D54
	protected void Callback(EquipGraphListMenu.ResultKind result, int n = -1) { }

	// RVA: 0x17010CC Offset: 0x17010CC VA: 0x17010CC
	public void OnClickDecide() { }

	// RVA: 0x170129C Offset: 0x170129C VA: 0x170129C
	protected void Decide() { }

	// RVA: 0x170178C Offset: 0x170178C VA: 0x170178C
	protected void EndCloseEventServantWarning() { }

	// RVA: 0x1701800 Offset: 0x1701800 VA: 0x1701800
	protected void EndRequestClickDecide(bool isRequest) { }

	// RVA: 0x1701C20 Offset: 0x1701C20 VA: 0x1701C20
	public void OnClickCancel() { }

	// RVA: 0x1701D04 Offset: 0x1701D04 VA: 0x1701D04
	protected void EndRequestClickCancel(bool isRequest) { }

	// RVA: 0x1701D80 Offset: 0x1701D80 VA: 0x1701D80
	public void OnClickTabStatus() { }

	// RVA: 0x1701E38 Offset: 0x1701E38 VA: 0x1701E38
	protected void EndClickTabStatus(bool isRequest) { }

	// RVA: 0x1701E9C Offset: 0x1701E9C VA: 0x1701E9C
	public void OnClickTabLock() { }

	// RVA: 0x1701FB4 Offset: 0x1701FB4 VA: 0x1701FB4
	protected void EndClickTabLock(bool isRequest) { }

	// RVA: 0x1702018 Offset: 0x1702018 VA: 0x1702018
	public void OnClickTabChoice() { }

	// RVA: 0x1702130 Offset: 0x1702130 VA: 0x1702130
	protected void EndClickTabChoice(bool isRequest) { }

	// RVA: 0x1701590 Offset: 0x1701590 VA: 0x1701590
	public void StatusRequest(EquipGraphListMenu.RequestCallbackFunc callback) { }

	// RVA: 0x170297C Offset: 0x170297C VA: 0x170297C
	protected void EndStatusSync(string result) { }

	// RVA: 0x170299C Offset: 0x170299C VA: 0x170299C
	protected void OnSelectServantEquip(EquipGraphListViewManager.ResultKind kind, int n) { }

	// RVA: 0x17036C0 Offset: 0x17036C0 VA: 0x17036C0
	protected void EndSelectEquip() { }

	// RVA: 0x1703758 Offset: 0x1703758 VA: 0x1703758
	protected void EndShowServantEquip(bool isDecide) { }

	// RVA: 0x170383C Offset: 0x170383C VA: 0x170383C
	protected void EndCloseShowServantEquip() { }

	// RVA: 0x17038D4 Offset: 0x17038D4 VA: 0x17038D4
	public void OnClickScaleChange() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7C54 Offset: 0xCC7C54 VA: 0xCC7C54
	// RVA: 0x1703A80 Offset: 0x1703A80 VA: 0x1703A80
	private static void <Open>m__0(bool isDecide) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7C64 Offset: 0xCC7C64 VA: 0xCC7C64
	// RVA: 0x1703AE4 Offset: 0x1703AE4 VA: 0x1703AE4
	private static void <Open>m__1(bool isDecide) { }
}

// Namespace: 
public enum EquipGraphListMenu.ModeKind // TypeDefIndex: 5422
{
	// Fields
	public int value__; // 0x0
	public const EquipGraphListMenu.ModeKind STATUS = 0;
	public const EquipGraphListMenu.ModeKind LOCK = 1;
	public const EquipGraphListMenu.ModeKind CHOICE = 2;
	public const EquipGraphListMenu.ModeKind SUM = 3;
}

// Namespace: 
public enum EquipGraphListMenu.ResultKind // TypeDefIndex: 5423
{
	// Fields
	public int value__; // 0x0
	public const EquipGraphListMenu.ResultKind CANCEL = 0;
	public const EquipGraphListMenu.ResultKind DECIDE = 1;
}

// Namespace: 
protected enum EquipGraphListMenu.State // TypeDefIndex: 5424
{
	// Fields
	public int value__; // 0x0
	public const EquipGraphListMenu.State INIT = 0;
	public const EquipGraphListMenu.State OPEN = 1;
	public const EquipGraphListMenu.State INPUT = 2;
	public const EquipGraphListMenu.State SELECTED = 3;
	public const EquipGraphListMenu.State CLOSE = 4;
	public const EquipGraphListMenu.State SHOW_STATUS = 5;
}

// Namespace: 
public sealed class EquipGraphListMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 5425
{
	// Methods

	// RVA: 0x1703B48 Offset: 0x1703B48 VA: 0x1703B48
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1700E88 Offset: 0x1700E88 VA: 0x1700E88 Slot: 11
	public virtual void Invoke(EquipGraphListMenu.ResultKind result, EquipGraphListViewItem item) { }

	// RVA: 0x1703B58 Offset: 0x1703B58 VA: 0x1703B58 Slot: 12
	public virtual IAsyncResult BeginInvoke(EquipGraphListMenu.ResultKind result, EquipGraphListViewItem item, AsyncCallback callback, object object) { }

	// RVA: 0x1703BF0 Offset: 0x1703BF0 VA: 0x1703BF0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class EquipGraphListMenu.RequestCallbackFunc : MulticastDelegate // TypeDefIndex: 5426
{
	// Methods

	// RVA: 0x1701580 Offset: 0x1701580 VA: 0x1701580
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1702750 Offset: 0x1702750 VA: 0x1702750 Slot: 11
	public virtual void Invoke(bool isRequest) { }

	// RVA: 0x1703BFC Offset: 0x1703BFC VA: 0x1703BFC Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isRequest, AsyncCallback callback, object object) { }

	// RVA: 0x1703C8C Offset: 0x1703C8C VA: 0x1703C8C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class EquipGraphListViewItem : ListViewItem // TypeDefIndex: 5427
{
	// Fields
	protected UserServantEntity userSvtEntity; // 0x70
	protected ServantEntity servantEntity; // 0x78
	protected EventUpValSetupInfo setupInfo; // 0x80
	protected int classId; // 0x88
	protected int rarity; // 0x8C
	protected bool isOldBase; // 0x90
	protected bool isBase; // 0x91
	protected int wearerMember; // 0x94
	protected string wearerServantName; // 0x98
	protected int weareClassId; // 0xA0
	protected int wearersSvtId; // 0xA4
	private int weareRarity; // 0xA8
	protected bool isLock; // 0xAC
	protected bool isChoice; // 0xAD
	protected ListViewSort.BonusFilterKind bonusKind; // 0xB0
	protected int bonusKindId; // 0xB4
	protected bool isEventUpVal; // 0xB8
	protected long amountSortValue; // 0xC0
	protected bool isSwapLock; // 0xC8
	protected bool isSwapChoice; // 0xC9
	protected bool isInvalidRarity; // 0xCA
	protected int[] categoryIdList; // 0xD0
	protected IconLabelInfo iconLabelInfo1; // 0xD8
	protected IconLabelInfo iconLabelInfo2; // 0xE0

	// Properties
	public UserServantEntity UserServant { get; }
	public ServantEntity Servant { get; }
	public string NameText { get; }
	public int Attack { get; }
	public int AdjustAttack { get; }
	public int Hp { get; }
	public int AdjustHp { get; }
	public int Cost { get; }
	public bool IsOldBase { get; }
	public bool IsBase { get; set; }
	public bool IsUse { get; }
	public int WeareMember { get; }
	public string WeareServantName { get; }
	public string WeareServantClassName { get; }
	public int WeareServantRarity { get; }
	public bool IsLock { get; }
	public bool IsSwapLock { get; }
	public bool IsDispLock { get; }
	public bool IsChoice { get; }
	public bool IsSwapChoice { get; }
	public bool IsDispChoice { get; }
	public bool IsCanNotSelect { get; }
	public IconLabelInfo IconInfo1 { get; }
	public IconLabelInfo IconInfo2 { get; }
	public bool IsInvalidRarity { get; }

	// Methods

	// RVA: 0x1703C98 Offset: 0x1703C98 VA: 0x1703C98
