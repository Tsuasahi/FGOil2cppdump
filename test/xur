	public const QuestInformationListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1CD0 Offset: 0xCB1CD0 VA: 0xCB1CD0
private sealed class QuestInformationListViewItemDraw.<SetItem>c__AnonStorey0 // TypeDefIndex: 11147
{
	// Fields
	internal QuestInformationListViewItem item; // 0x10
	internal QuestInformationListViewItemDraw $this; // 0x18

	// Methods

	// RVA: 0x173FE5C Offset: 0x173FE5C VA: 0x173FE5C
	public void .ctor() { }

	// RVA: 0x1741100 Offset: 0x1741100 VA: 0x1741100
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1CE0 Offset: 0xCB1CE0 VA: 0xCB1CE0
private sealed class QuestInformationListViewItemDraw.<LoadEnemyTexture>c__AnonStorey1 // TypeDefIndex: 11148
{
	// Fields
	internal Action callback; // 0x10
	internal QuestInformationListViewItemDraw $this; // 0x18

	// Methods

	// RVA: 0x1740D84 Offset: 0x1740D84 VA: 0x1740D84
	public void .ctor() { }

	// RVA: 0x1740ED8 Offset: 0x1740ED8 VA: 0x1740ED8
	internal void <>m__0(AssetData assetData) { }
}

// Namespace: 
public class QuestInformationListViewManager : ListViewManager // TypeDefIndex: 11149
{
	// Fields
	private static readonly string CHOCO_SHADER_TX; // 0x0
	private static readonly string CHOCO_SHADER_SP; // 0x8
	protected QuestInformationListViewManager.InitMode initMode; // 0x138
	[SerializeField] // RVA: 0xCE9DD4 Offset: 0xCE9DD4 VA: 0xCE9DD4
	private ListViewItemSeed rewardSeed; // 0x140
	[SerializeField] // RVA: 0xCE9DE4 Offset: 0xCE9DE4 VA: 0xCE9DE4
	private ListViewItemSeed enemySeed; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xCE9DF4 Offset: 0xCE9DF4 VA: 0xCE9DF4
	[DebuggerBrowsableAttribute] // RVA: 0xCE9DF4 Offset: 0xCE9DF4 VA: 0xCE9DF4
	private QuestInformationListViewManager.CallbackFunc callbackFunc; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xCE9E30 Offset: 0xCE9E30 VA: 0xCE9E30
	[DebuggerBrowsableAttribute] // RVA: 0xCE9E30 Offset: 0xCE9E30 VA: 0xCE9E30
	private Action callbackFunc2; // 0x158
	protected int callbackCount; // 0x160
	private string[] loadedAssets; // 0x168
	private bool loading; // 0x170
	private bool mIsBuildingList; // 0x171
	private bool mIsResetReady; // 0x172
	private Texture2D mChocoTex; // 0x178
	private Material mChocoMaterialTx; // 0x180
	private Material mChocoMaterialSp; // 0x188
	[CompilerGeneratedAttribute] // RVA: 0xCE9E6C Offset: 0xCE9E6C VA: 0xCE9E6C
	private static ItemDetailInfoComponent.CallbackFunc <>f__am$cache0; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCE9E7C Offset: 0xCE9E7C VA: 0xCE9E7C
	private static ServantStatusDialog.EndDelegate <>f__am$cache1; // 0x18

	// Properties
	public List<QuestInformationListViewObject> ObjectList { get; }
	public List<QuestInformationListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x17411C4 Offset: 0x17411C4 VA: 0x17411C4
	public void .ctor() { }

	// RVA: 0x17411CC Offset: 0x17411CC VA: 0x17411CC
	protected void add_callbackFunc(QuestInformationListViewManager.CallbackFunc value) { }

	// RVA: 0x17412BC Offset: 0x17412BC VA: 0x17412BC
	protected void remove_callbackFunc(QuestInformationListViewManager.CallbackFunc value) { }

	// RVA: 0x17413AC Offset: 0x17413AC VA: 0x17413AC
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x174149C Offset: 0x174149C VA: 0x174149C
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x174158C Offset: 0x174158C VA: 0x174158C
	public List<QuestInformationListViewObject> get_ObjectList() { }

	// RVA: 0x1741758 Offset: 0x1741758 VA: 0x1741758
	public List<QuestInformationListViewObject> get_ClippingObjectList() { }

	// RVA: 0x173C9CC Offset: 0x173C9CC VA: 0x173C9CC
	public void DestroyList() { }

	// RVA: 0x173D318 Offset: 0x173D318 VA: 0x173D318
	public void CreateRewardList(QuestInformationListViewManager.Kind kind, int[] items, int[] svts) { }

	// RVA: 0x1741A38 Offset: 0x1741A38 VA: 0x1741A38
	private void SplitSvtsWithCombineMaterial(int[] svts, out int[] withoutCM, out int[] combineMaterials) { }

	// RVA: 0x1741D30 Offset: 0x1741D30 VA: 0x1741D30
	private void SplitItemsWithQP(int[] itms, out int[] withoutQP, out int[] qps) { }

	// RVA: 0x17420B4 Offset: 0x17420B4 VA: 0x17420B4
	private int CreateRewardItemList(int[] items, int sum) { }

	// RVA: 0x1741F9C Offset: 0x1741F9C VA: 0x1741F9C
	private int CreateRewardSvtList(int[] svts, int sum) { }

	// RVA: 0x173D3F0 Offset: 0x173D3F0 VA: 0x173D3F0
	public void CreateEmptyRewardList(QuestInformationListViewManager.Kind kind, int itemCnt, int svtCnt) { }

	// RVA: 0x173D580 Offset: 0x173D580 VA: 0x173D580
	public void CreateEnemyList(QuestInformationListViewManager.Kind kind, int questId, int[] enemies) { }

	// RVA: 0x17421D4 Offset: 0x17421D4 VA: 0x17421D4
	private void CreateEnemyList(int questId, int[] enemies, ViewEnemyEntity[] veEnts) { }

	// RVA: 0x17423A8 Offset: 0x17423A8 VA: 0x17423A8 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x17424B4 Offset: 0x17424B4 VA: 0x17424B4
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x173D2E0 Offset: 0x173D2E0 VA: 0x173D2E0
	public bool IsListBuilding() { }

	// RVA: 0x173DCC4 Offset: 0x173DCC4 VA: 0x173DCC4
	public void SetResetReady(bool onOff) { }

	// RVA: 0x173DD88 Offset: 0x173DD88 VA: 0x173DD88
	public bool IsTouchable() { }

	// RVA: 0x1740B24 Offset: 0x1740B24 VA: 0x1740B24
	public Material NewChocoMaterialForTexture() { }

	// RVA: 0x17409C4 Offset: 0x17409C4 VA: 0x17409C4
	public Material NewChocoMaterialForSprite() { }

	// RVA: 0x1742854 Offset: 0x1742854 VA: 0x1742854
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD40F54 Offset: 0xD40F54 VA: 0xD40F54
	// RVA: 0x17428C8 Offset: 0x17428C8 VA: 0x17428C8
	private static void <OnClickListView>m__0(bool isDecide) { }

	[CompilerGeneratedAttribute] // RVA: 0xD40F64 Offset: 0xD40F64 VA: 0xD40F64
	// RVA: 0x1742954 Offset: 0x1742954 VA: 0x1742954
	private static void <OnClickListView>m__1(bool isDecide) { }
}

// Namespace: 
public enum QuestInformationListViewManager.Kind // TypeDefIndex: 11150
{
	// Fields
	public int value__; // 0x0
	public const QuestInformationListViewManager.Kind NORMAL = 0;
}

// Namespace: 
public enum QuestInformationListViewManager.InitMode // TypeDefIndex: 11151
{
	// Fields
	public int value__; // 0x0
	public const QuestInformationListViewManager.InitMode NONE = 0;
	public const QuestInformationListViewManager.InitMode INPUT = 1;
}

// Namespace: 
public sealed class QuestInformationListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 11152
{
	// Methods

	// RVA: 0x1742AB0 Offset: 0x1742AB0 VA: 0x1742AB0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1742AC0 Offset: 0x1742AC0 VA: 0x1742AC0 Slot: 11
	public virtual void Invoke(int result) { }

	// RVA: 0x1742CEC Offset: 0x1742CEC VA: 0x1742CEC Slot: 12
	public virtual IAsyncResult BeginInvoke(int result, AsyncCallback callback, object object) { }

	// RVA: 0x1742D78 Offset: 0x1742D78 VA: 0x1742D78 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1CF0 Offset: 0xCB1CF0 VA: 0xCB1CF0
private sealed class QuestInformationListViewManager.<CreateEnemyList>c__AnonStorey0 // TypeDefIndex: 11153
{
	// Fields
	internal int questId; // 0x10
	internal int[] enemies; // 0x18
	internal ViewEnemyEntity[] veEnts; // 0x20
	internal QuestInformationListViewManager $this; // 0x28

	// Methods

	// RVA: 0x17421CC Offset: 0x17421CC VA: 0x17421CC
	public void .ctor() { }

	// RVA: 0x17429B8 Offset: 0x17429B8 VA: 0x17429B8
	internal void <>m__0() { }

	// RVA: 0x1742A70 Offset: 0x1742A70 VA: 0x1742A70
	internal void <>m__1() { }
}

// Namespace: 
public class QuestInformationListViewObject : ListViewObject // TypeDefIndex: 11154
{
	// Fields
	protected QuestInformationListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCE9E8C Offset: 0xCE9E8C VA: 0xCE9E8C
	[DebuggerBrowsableAttribute] // RVA: 0xCE9E8C Offset: 0xCE9E8C VA: 0xCE9E8C
	private Action callbackFunc; // 0x70
	protected QuestInformationListViewItemDraw itemDraw; // 0x78
	protected QuestInformationListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x1742D84 Offset: 0x1742D84 VA: 0x1742D84
	public void .ctor() { }

	// RVA: 0x1742DEC Offset: 0x1742DEC VA: 0x1742DEC
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1742ED8 Offset: 0x1742ED8 VA: 0x1742ED8
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1742FC4 Offset: 0x1742FC4 VA: 0x1742FC4
	protected void Awake() { }

	// RVA: 0x1743038 Offset: 0x1743038 VA: 0x1743038
	private void Start() { }

	// RVA: 0x174304C Offset: 0x174304C VA: 0x174304C
	private void OnDestroy() { }

	// RVA: 0x17419B4 Offset: 0x17419B4 VA: 0x17419B4
	public QuestInformationListViewItem GetItem() { }

	// RVA: 0x17430F8 Offset: 0x17430F8 VA: 0x17430F8 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1743104 Offset: 0x1743104 VA: 0x1743104 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x174318C Offset: 0x174318C VA: 0x174318C
	public void Init(QuestInformationListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1743460 Offset: 0x1743460 VA: 0x1743460
	public void Init(QuestInformationListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x17434E4 Offset: 0x17434E4 VA: 0x17434E4
	public void Init(QuestInformationListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x1742434 Offset: 0x1742434 VA: 0x1742434
	public void Init(QuestInformationListViewObject.InitMode initMode) { }

	// RVA: 0x1743350 Offset: 0x1743350 VA: 0x1743350
	protected void SetupDisp() { }

	// RVA: 0x1743568 Offset: 0x1743568 VA: 0x1743568 Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum QuestInformationListViewObject.InitMode // TypeDefIndex: 11155
{
	// Fields
	public int value__; // 0x0
	public const QuestInformationListViewObject.InitMode INVISIBLE = 0;
	public const QuestInformationListViewObject.InitMode INVALID = 1;
	public const QuestInformationListViewObject.InitMode VALID = 2;
	public const QuestInformationListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum QuestInformationListViewObject.State // TypeDefIndex: 11156
{
	// Fields
	public int value__; // 0x0
	public const QuestInformationListViewObject.State INIT = 0;
	public const QuestInformationListViewObject.State IDLE = 1;
	public const QuestInformationListViewObject.State MOVE = 2;
	public const QuestInformationListViewObject.State INPUT = 3;
}

// Namespace: 
public class QuestRewardBoxAction : MonoBehaviour // TypeDefIndex: 11157
{
	// Fields
	public const float WHITE_OUT_TIME = 1;
	public const float WHITE_IN_TIME = 1;
	private CStateManager<QuestRewardBoxAction> mFSM; // 0x18
	private Animation mAnimation; // 0x20
	private SimpleAnimation mSimpleAnimation; // 0x28
	[SerializeField] // RVA: 0xCE9EC8 Offset: 0xCE9EC8 VA: 0xCE9EC8
	private UIAtlas mNormalAtlas; // 0x30
	[SerializeField] // RVA: 0xCE9ED8 Offset: 0xCE9ED8 VA: 0xCE9ED8
	private UIAtlas mSilverAtlas; // 0x38
	[SerializeField] // RVA: 0xCE9EE8 Offset: 0xCE9EE8 VA: 0xCE9EE8
	private UIAtlas mGoldAtlas; // 0x40
	[SerializeField] // RVA: 0xCE9EF8 Offset: 0xCE9EF8 VA: 0xCE9EF8
	private UISprite mBoxBaseSp; // 0x48
	[SerializeField] // RVA: 0xCE9F08 Offset: 0xCE9F08 VA: 0xCE9F08
	private UISprite mBoxLockSp; // 0x50
	[SerializeField] // RVA: 0xCE9F18 Offset: 0xCE9F18 VA: 0xCE9F18
	private UISprite mBoxOpenSp; // 0x58
	[SerializeField] // RVA: 0xCE9F28 Offset: 0xCE9F28 VA: 0xCE9F28
	private GameObject particlePrefab; // 0x60
	protected GameObject particleObj; // 0x68
	private Action mEndAct; // 0x70

	// Methods

	// RVA: 0x1807234 Offset: 0x1807234 VA: 0x1807234
	public void .ctor() { }

	// RVA: 0x180723C Offset: 0x180723C VA: 0x180723C
	private void Awake() { }

	// RVA: 0x18074FC Offset: 0x18074FC VA: 0x18074FC
	private void Update() { }

	// RVA: 0x180755C Offset: 0x180755C VA: 0x180755C
	public void Setup(QuestRewardBoxAction.BOX_TYPE box_type, bool overwrite = False) { }

	// RVA: 0x1807930 Offset: 0x1807930 VA: 0x1807930
	public void Play(Action end_act) { }

	// RVA: 0x1807BE8 Offset: 0x1807BE8 VA: 0x1807BE8
	public QuestRewardBoxAction.STATE GetState() { }

	// RVA: 0x180748C Offset: 0x180748C VA: 0x180748C
	public void SetState(QuestRewardBoxAction.STATE state) { }

	[CompilerGeneratedAttribute] // RVA: 0xD40F74 Offset: 0xD40F74 VA: 0xD40F74
	// RVA: 0x1807C48 Offset: 0x1807C48 VA: 0x1807C48
	private void <Play>m__0() { }
}

// Namespace: 
public enum QuestRewardBoxAction.BOX_TYPE // TypeDefIndex: 11158
{
	// Fields
	public int value__; // 0x0
	public const QuestRewardBoxAction.BOX_TYPE NORMAL = 0;
	public const QuestRewardBoxAction.BOX_TYPE SILVER = 1;
	public const QuestRewardBoxAction.BOX_TYPE GOLD = 2;
	public const QuestRewardBoxAction.BOX_TYPE SIZEOF = 3;
}

// Namespace: 
public enum QuestRewardBoxAction.STATE // TypeDefIndex: 11159
{
	// Fields
	public int value__; // 0x0
	public const QuestRewardBoxAction.STATE NONE = 0;
	public const QuestRewardBoxAction.STATE PLAY = 1;
	public const QuestRewardBoxAction.STATE SIZEOF = 2;
}

// Namespace: 
private class QuestRewardBoxAction.StateNone : IState<QuestRewardBoxAction> // TypeDefIndex: 11160
{
	// Methods

	// RVA: 0x180747C Offset: 0x180747C VA: 0x180747C
	public void .ctor() { }

	// RVA: 0x1807C50 Offset: 0x1807C50 VA: 0x1807C50 Slot: 4
	public void begin(QuestRewardBoxAction that) { }

	// RVA: 0x1807C54 Offset: 0x1807C54 VA: 0x1807C54 Slot: 5
	public void update(QuestRewardBoxAction that) { }

	// RVA: 0x1807C58 Offset: 0x1807C58 VA: 0x1807C58 Slot: 6
	public void end(QuestRewardBoxAction that) { }
}

// Namespace: 
private class QuestRewardBoxAction.StatePlay : IState<QuestRewardBoxAction> // TypeDefIndex: 11161
{
	// Methods

	// RVA: 0x1807484 Offset: 0x1807484 VA: 0x1807484
	public void .ctor() { }

	// RVA: 0x1807C5C Offset: 0x1807C5C VA: 0x1807C5C Slot: 4
	public void begin(QuestRewardBoxAction that) { }

	// RVA: 0x1807F18 Offset: 0x1807F18 VA: 0x1807F18 Slot: 5
	public void update(QuestRewardBoxAction that) { }

	// RVA: 0x1808234 Offset: 0x1808234 VA: 0x1808234 Slot: 6
	public void end(QuestRewardBoxAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1D00 Offset: 0xCB1D00 VA: 0xCB1D00
private sealed class QuestRewardBoxAction.StatePlay.<update>c__AnonStorey0 // TypeDefIndex: 11162
{
	// Fields
	internal QuestRewardBoxAction that; // 0x10

	// Methods

	// RVA: 0x180822C Offset: 0x180822C VA: 0x180822C
	public void .ctor() { }

	// RVA: 0x1808238 Offset: 0x1808238 VA: 0x1808238
	internal void <>m__0() { }

	// RVA: 0x1808268 Offset: 0x1808268 VA: 0x1808268
	internal void <>m__1() { }
}

// Namespace: 
public class QuestRewardCostumeAction : MonoBehaviour // TypeDefIndex: 11163
{
	// Fields
	private CStateManager<QuestRewardCostumeAction> mFSM; // 0x18
	private Animation mAnimation; // 0x20
	private SimpleAnimation mSimpleAnimation; // 0x28
	[SerializeField] // RVA: 0xCE9F38 Offset: 0xCE9F38 VA: 0xCE9F38
	private UISprite mItemSp; // 0x30
	[SerializeField] // RVA: 0xCE9F48 Offset: 0xCE9F48 VA: 0xCE9F48
	private UILabel mItemLabel; // 0x38
	[SerializeField] // RVA: 0xCE9F58 Offset: 0xCE9F58 VA: 0xCE9F58
	private GameObject mAppearEffObj; // 0x40
	[SerializeField] // RVA: 0xCE9F68 Offset: 0xCE9F68 VA: 0xCE9F68
	private GameObject particlePrefab; // 0x48
	protected GameObject particleObj; // 0x50
	private ScreenTouchInformationComponent mScreenTouchInfo; // 0x58
	private Action mEndAct; // 0x60

	// Methods

	// RVA: 0x1808298 Offset: 0x1808298 VA: 0x1808298
	public void .ctor() { }

	// RVA: 0x18082A0 Offset: 0x18082A0 VA: 0x18082A0
	private void Awake() { }

	// RVA: 0x1808614 Offset: 0x1808614 VA: 0x1808614
	private void Update() { }

	// RVA: 0x180869C Offset: 0x180869C VA: 0x180869C
	public void Setup(ImageItem.Id imgId, string itmName) { }

	// RVA: 0x18089AC Offset: 0x18089AC VA: 0x18089AC
	public void Play(Action endAct, float fadeInTime = 0) { }

	// RVA: 0x1808C6C Offset: 0x1808C6C VA: 0x1808C6C
	public QuestRewardCostumeAction.STATE GetState() { }

	// RVA: 0x18085A4 Offset: 0x18085A4 VA: 0x18085A4
	public void SetState(QuestRewardCostumeAction.STATE state) { }

	[CompilerGeneratedAttribute] // RVA: 0xD40F84 Offset: 0xD40F84 VA: 0xD40F84
	// RVA: 0x1808CCC Offset: 0x1808CCC VA: 0x1808CCC
	private void <Play>m__0() { }
}

// Namespace: 
public enum QuestRewardCostumeAction.STATE // TypeDefIndex: 11164
{
	// Fields
	public int value__; // 0x0
	public const QuestRewardCostumeAction.STATE NONE = 0;
	public const QuestRewardCostumeAction.STATE PLAY = 1;
	public const QuestRewardCostumeAction.STATE ITEM_LABEL = 2;
	public const QuestRewardCostumeAction.STATE TOUCH_WAIT = 3;
	public const QuestRewardCostumeAction.STATE SIZEOF = 4;
}

// Namespace: 
private class QuestRewardCostumeAction.StateNone : IState<QuestRewardCostumeAction> // TypeDefIndex: 11165
{
	// Methods

	// RVA: 0x1808584 Offset: 0x1808584 VA: 0x1808584
	public void .ctor() { }

	// RVA: 0x1808FD4 Offset: 0x1808FD4 VA: 0x1808FD4 Slot: 4
	public void begin(QuestRewardCostumeAction that) { }

	// RVA: 0x1808FD8 Offset: 0x1808FD8 VA: 0x1808FD8 Slot: 5
	public void update(QuestRewardCostumeAction that) { }

	// RVA: 0x1808FDC Offset: 0x1808FDC VA: 0x1808FDC Slot: 6
	public void end(QuestRewardCostumeAction that) { }
}

// Namespace: 
private class QuestRewardCostumeAction.StatePlay : IState<QuestRewardCostumeAction> // TypeDefIndex: 11166
{
	// Fields
	private AnimationState mAnimState; // 0x10
	private SimpleAnimation.State mSimpleAnimState; // 0x18

	// Methods

	// RVA: 0x180858C Offset: 0x180858C VA: 0x180858C
	public void .ctor() { }

	// RVA: 0x1808FE0 Offset: 0x1808FE0 VA: 0x1808FE0 Slot: 4
	public void begin(QuestRewardCostumeAction that) { }

	// RVA: 0x1809358 Offset: 0x1809358 VA: 0x1809358 Slot: 5
	public void update(QuestRewardCostumeAction that) { }

	// RVA: 0x180950C Offset: 0x180950C VA: 0x180950C Slot: 6
	public void end(QuestRewardCostumeAction that) { }
}

// Namespace: 
private class QuestRewardCostumeAction.StateItemLabel : IState<QuestRewardCostumeAction> // TypeDefIndex: 11167
{
	// Fields
	private const float MV_TIME = 0.25;

	// Methods

	// RVA: 0x1808594 Offset: 0x1808594 VA: 0x1808594
	public void .ctor() { }

	// RVA: 0x1808CD4 Offset: 0x1808CD4 VA: 0x1808CD4 Slot: 4
	public void begin(QuestRewardCostumeAction that) { }

	// RVA: 0x1808F60 Offset: 0x1808F60 VA: 0x1808F60 Slot: 5
	public void update(QuestRewardCostumeAction that) { }

	// RVA: 0x1808F64 Offset: 0x1808F64 VA: 0x1808F64 Slot: 6
	public void end(QuestRewardCostumeAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1D10 Offset: 0xCB1D10 VA: 0xCB1D10
private sealed class QuestRewardCostumeAction.StateItemLabel.<begin>c__AnonStorey0 // TypeDefIndex: 11168
{
	// Fields
	internal GameObject tgt_obj; // 0x10
	internal MoveObject mo; // 0x18
	internal QuestRewardCostumeAction that; // 0x20

	// Methods

	// RVA: 0x1808F58 Offset: 0x1808F58 VA: 0x1808F58
	public void .ctor() { }

	// RVA: 0x1808F68 Offset: 0x1808F68 VA: 0x1808F68
	internal void <>m__0() { }

	// RVA: 0x1808FA4 Offset: 0x1808FA4 VA: 0x1808FA4
	internal void <>m__1() { }
}

// Namespace: 
private class QuestRewardCostumeAction.StateTouchWait : IState<QuestRewardCostumeAction> // TypeDefIndex: 11169
{
	// Methods

	// RVA: 0x180859C Offset: 0x180859C VA: 0x180859C
	public void .ctor() { }

	// RVA: 0x1809510 Offset: 0x1809510 VA: 0x1809510 Slot: 4
	public void begin(QuestRewardCostumeAction that) { }

	// RVA: 0x180956C Offset: 0x180956C VA: 0x180956C Slot: 5
	public void update(QuestRewardCostumeAction that) { }

	// RVA: 0x1809750 Offset: 0x1809750 VA: 0x1809750 Slot: 6
	public void end(QuestRewardCostumeAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1D20 Offset: 0xCB1D20 VA: 0xCB1D20
private sealed class QuestRewardCostumeAction.StateTouchWait.<update>c__AnonStorey0 // TypeDefIndex: 11170
{
	// Fields
	internal QuestRewardCostumeAction that; // 0x10

	// Methods

	// RVA: 0x1809748 Offset: 0x1809748 VA: 0x1809748
	public void .ctor() { }

	// RVA: 0x1809754 Offset: 0x1809754 VA: 0x1809754
	internal void <>m__0() { }
}

// Namespace: 
public class QuestRewardHarvestAction : MonoBehaviour // TypeDefIndex: 11171
{
	// Fields
	private CStateManager<QuestRewardHarvestAction> fsm; // 0x18
	private Animation animation; // 0x20
	private SimpleAnimation simpleAnimation; // 0x28
	private Action endAct; // 0x30
	[SerializeField] // RVA: 0xCE9F78 Offset: 0xCE9F78 VA: 0xCE9F78
	[HeaderAttribute] // RVA: 0xCE9F78 Offset: 0xCE9F78 VA: 0xCE9F78
	private UISprite[] itemSprite; // 0x38
	[SerializeField] // RVA: 0xCE9FC4 Offset: 0xCE9FC4 VA: 0xCE9FC4
	[HeaderAttribute] // RVA: 0xCE9FC4 Offset: 0xCE9FC4 VA: 0xCE9FC4
	private UILabel[] itemLabel; // 0x40
	[SerializeField] // RVA: 0xCEA010 Offset: 0xCEA010 VA: 0xCEA010
	[HeaderAttribute] // RVA: 0xCEA010 Offset: 0xCEA010 VA: 0xCEA010
	private GameObject[] imageFrame; // 0x48
	private ScreenTouchInformationComponent screenTouchInfo; // 0x50

	// Methods

	// RVA: 0x1809784 Offset: 0x1809784 VA: 0x1809784
	public void .ctor() { }

	// RVA: 0x180978C Offset: 0x180978C VA: 0x180978C
	private void Awake() { }

	// RVA: 0x18099B8 Offset: 0x18099B8 VA: 0x18099B8
	private void Update() { }

	// RVA: 0x1809A40 Offset: 0x1809A40 VA: 0x1809A40
	public void Setup(QuestRewardInfo[] infos) { }

	// RVA: 0x180A9D4 Offset: 0x180A9D4 VA: 0x180A9D4
	public void Play(Action end_act, float fade_in_time = 0) { }

	// RVA: 0x180AAE8 Offset: 0x180AAE8 VA: 0x180AAE8
	public QuestRewardHarvestAction.STATE GetState() { }

	// RVA: 0x1809948 Offset: 0x1809948 VA: 0x1809948
	public void SetState(QuestRewardHarvestAction.STATE state) { }

	[CompilerGeneratedAttribute] // RVA: 0xD40F94 Offset: 0xD40F94 VA: 0xD40F94
	// RVA: 0x180AB48 Offset: 0x180AB48 VA: 0x180AB48
	private void <Play>m__0() { }
}

// Namespace: 
public enum QuestRewardHarvestAction.STATE // TypeDefIndex: 11172
{
	// Fields
	public int value__; // 0x0
	public const QuestRewardHarvestAction.STATE NONE = 0;
	public const QuestRewardHarvestAction.STATE PLAY = 1;
	public const QuestRewardHarvestAction.STATE ITEM_LABEL = 2;
	public const QuestRewardHarvestAction.STATE TOUCH_WAIT = 3;
	public const QuestRewardHarvestAction.STATE SIZEOF = 4;
}

// Namespace: 
private class QuestRewardHarvestAction.StateNone : IState<QuestRewardHarvestAction> // TypeDefIndex: 11173
{
	// Methods

	// RVA: 0x1809928 Offset: 0x1809928 VA: 0x1809928
	public void .ctor() { }

	// RVA: 0x180AF70 Offset: 0x180AF70 VA: 0x180AF70 Slot: 4
	public void begin(QuestRewardHarvestAction that) { }

	// RVA: 0x180AF74 Offset: 0x180AF74 VA: 0x180AF74 Slot: 5
	public void update(QuestRewardHarvestAction that) { }

	// RVA: 0x180AF78 Offset: 0x180AF78 VA: 0x180AF78 Slot: 6
	public void end(QuestRewardHarvestAction that) { }
}

// Namespace: 
private class QuestRewardHarvestAction.StatePlay : IState<QuestRewardHarvestAction> // TypeDefIndex: 11174
{
	// Methods

	// RVA: 0x1809930 Offset: 0x1809930 VA: 0x1809930
	public void .ctor() { }

	// RVA: 0x180AF7C Offset: 0x180AF7C VA: 0x180AF7C Slot: 4
	public void begin(QuestRewardHarvestAction that) { }

	// RVA: 0x180B448 Offset: 0x180B448 VA: 0x180B448 Slot: 5
	public void update(QuestRewardHarvestAction that) { }

	// RVA: 0x180B5FC Offset: 0x180B5FC VA: 0x180B5FC Slot: 6
	public void end(QuestRewardHarvestAction that) { }
}

// Namespace: 
private class QuestRewardHarvestAction.StateItemLabel : IState<QuestRewardHarvestAction> // TypeDefIndex: 11175
{
	// Fields
	private const float MV_TIME = 0.25;

	// Methods

	// RVA: 0x1809938 Offset: 0x1809938 VA: 0x1809938
	public void .ctor() { }

	// RVA: 0x180AB50 Offset: 0x180AB50 VA: 0x180AB50 Slot: 4
	public void begin(QuestRewardHarvestAction that) { }

	// RVA: 0x180AEEC Offset: 0x180AEEC VA: 0x180AEEC Slot: 5
	public void update(QuestRewardHarvestAction that) { }

	// RVA: 0x180AEF0 Offset: 0x180AEF0 VA: 0x180AEF0 Slot: 6
	public void end(QuestRewardHarvestAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1D30 Offset: 0xCB1D30 VA: 0xCB1D30
private sealed class QuestRewardHarvestAction.StateItemLabel.<begin>c__AnonStorey1 // TypeDefIndex: 11176
{
	// Fields
	internal QuestRewardHarvestAction that; // 0x10

	// Methods

	// RVA: 0x180AEDC Offset: 0x180AEDC VA: 0x180AEDC
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1D40 Offset: 0xCB1D40 VA: 0xCB1D40
private sealed class QuestRewardHarvestAction.StateItemLabel.<begin>c__AnonStorey0 // TypeDefIndex: 11177
{
	// Fields
	internal GameObject tgt_obj; // 0x10
	internal MoveObject mo; // 0x18
	internal QuestRewardHarvestAction.StateItemLabel.<begin>c__AnonStorey1 <>f__ref$1; // 0x20

	// Methods

	// RVA: 0x180AEE4 Offset: 0x180AEE4 VA: 0x180AEE4
	public void .ctor() { }

	// RVA: 0x180AEF4 Offset: 0x180AEF4 VA: 0x180AEF4
	internal void <>m__0() { }

	// RVA: 0x180AF30 Offset: 0x180AF30 VA: 0x180AF30
	internal void <>m__1() { }
}

// Namespace: 
private class QuestRewardHarvestAction.StateTouchWait : IState<QuestRewardHarvestAction> // TypeDefIndex: 11178
{
	// Methods

	// RVA: 0x1809940 Offset: 0x1809940 VA: 0x1809940
	public void .ctor() { }

	// RVA: 0x180B600 Offset: 0x180B600 VA: 0x180B600 Slot: 4
	public void begin(QuestRewardHarvestAction that) { }

	// RVA: 0x180B65C Offset: 0x180B65C VA: 0x180B65C Slot: 5
	public void update(QuestRewardHarvestAction that) { }

	// RVA: 0x180B86C Offset: 0x180B86C VA: 0x180B86C Slot: 6
	public void end(QuestRewardHarvestAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1D50 Offset: 0xCB1D50 VA: 0xCB1D50
private sealed class QuestRewardHarvestAction.StateTouchWait.<update>c__AnonStorey0 // TypeDefIndex: 11179
{
	// Fields
	internal QuestRewardHarvestAction that; // 0x10

	// Methods

	// RVA: 0x180B864 Offset: 0x180B864 VA: 0x180B864
	public void .ctor() { }

	// RVA: 0x180B870 Offset: 0x180B870 VA: 0x180B870
	internal void <>m__0() { }
}

// Namespace: 
public class QuestRewardItemAction : MonoBehaviour // TypeDefIndex: 11180
{
	// Fields
	private CStateManager<QuestRewardItemAction> mFSM; // 0x18
	private Animation mAnimation; // 0x20
	private SimpleAnimation mSimpleAnimation; // 0x28
	private bool mIsFromTreasureBox; // 0x30
	[SerializeField] // RVA: 0xCEA05C Offset: 0xCEA05C VA: 0xCEA05C
	private UISprite mItemSp; // 0x38
	[SerializeField] // RVA: 0xCEA06C Offset: 0xCEA06C VA: 0xCEA06C
	private UILabel mItemLabel; // 0x40
	[SerializeField] // RVA: 0xCEA07C Offset: 0xCEA07C VA: 0xCEA07C
	private GameObject mAppearEffObj; // 0x48
	[SerializeField] // RVA: 0xCEA08C Offset: 0xCEA08C VA: 0xCEA08C
	private GameObject particlePrefab; // 0x50
	[SerializeField] // RVA: 0xCEA09C Offset: 0xCEA09C VA: 0xCEA09C
	[HeaderAttribute] // RVA: 0xCEA09C Offset: 0xCEA09C VA: 0xCEA09C
	private bool mLabelAnimate; // 0x58
	[SerializeField] // RVA: 0xCEA0E8 Offset: 0xCEA0E8 VA: 0xCEA0E8
	[HeaderAttribute] // RVA: 0xCEA0E8 Offset: 0xCEA0E8 VA: 0xCEA0E8
	private float mTreasureAnimStartTime; // 0x5C
	[SerializeField] // RVA: 0xCEA134 Offset: 0xCEA134 VA: 0xCEA134
	[HeaderAttribute] // RVA: 0xCEA134 Offset: 0xCEA134 VA: 0xCEA134
	private bool mTreasureEffectOff; // 0x60
	[SerializeField] // RVA: 0xCEA180 Offset: 0xCEA180 VA: 0xCEA180
	[HeaderAttribute] // RVA: 0xCEA180 Offset: 0xCEA180 VA: 0xCEA180
	private bool mGetSEonProgram; // 0x61
	protected GameObject particleObj; // 0x68
	private ScreenTouchInformationComponent mScreenTouchInfo; // 0x70
	private Action mEndAct; // 0x78

	// Methods

	// RVA: 0x180B8C8 Offset: 0x180B8C8 VA: 0x180B8C8
	public void .ctor() { }

	// RVA: 0x180B8E8 Offset: 0x180B8E8 VA: 0x180B8E8
	private void Awake() { }

	// RVA: 0x180BC38 Offset: 0x180BC38 VA: 0x180BC38
	private void Update() { }

	// RVA: 0x180BCC0 Offset: 0x180BCC0 VA: 0x180BCC0
	public void Setup(QuestRewardInfo qri) { }

	// RVA: 0x180C1CC Offset: 0x180C1CC VA: 0x180C1CC
	public void Play(bool is_from_treasure_box, Action end_act, float fade_in_time = 0) { }

	// RVA: 0x180C4AC Offset: 0x180C4AC VA: 0x180C4AC
	public QuestRewardItemAction.STATE GetState() { }

	// RVA: 0x180BBC8 Offset: 0x180BBC8 VA: 0x180BBC8
	public void SetState(QuestRewardItemAction.STATE state) { }

	[CompilerGeneratedAttribute] // RVA: 0xD40FA4 Offset: 0xD40FA4 VA: 0xD40FA4
	// RVA: 0x180C50C Offset: 0x180C50C VA: 0x180C50C
	private void <Play>m__0() { }
}

// Namespace: 
public enum QuestRewardItemAction.STATE // TypeDefIndex: 11181
{
	// Fields
	public int value__; // 0x0
	public const QuestRewardItemAction.STATE NONE = 0;
	public const QuestRewardItemAction.STATE PLAY = 1;
	public const QuestRewardItemAction.STATE ITEM_LABEL = 2;
	public const QuestRewardItemAction.STATE TOUCH_WAIT = 3;
	public const QuestRewardItemAction.STATE SIZEOF = 4;
}

// Namespace: 
private class QuestRewardItemAction.StateNone : IState<QuestRewardItemAction> // TypeDefIndex: 11182
{
	// Methods

	// RVA: 0x180BBA8 Offset: 0x180BBA8 VA: 0x180BBA8
	public void .ctor() { }

	// RVA: 0x180C89C Offset: 0x180C89C VA: 0x180C89C Slot: 4
	public void begin(QuestRewardItemAction that) { }

	// RVA: 0x180C8A0 Offset: 0x180C8A0 VA: 0x180C8A0 Slot: 5
	public void update(QuestRewardItemAction that) { }

	// RVA: 0x180C8A4 Offset: 0x180C8A4 VA: 0x180C8A4 Slot: 6
	public void end(QuestRewardItemAction that) { }
}

// Namespace: 
private class QuestRewardItemAction.StatePlay : IState<QuestRewardItemAction> // TypeDefIndex: 11183
{
	// Fields
	private AnimationState mAnimState; // 0x10
	private SimpleAnimation.State mSimpleAnimState; // 0x18

	// Methods

	// RVA: 0x180BBB0 Offset: 0x180BBB0 VA: 0x180BBB0
	public void .ctor() { }

	// RVA: 0x180C8A8 Offset: 0x180C8A8 VA: 0x180C8A8 Slot: 4
	public void begin(QuestRewardItemAction that) { }

	// RVA: 0x180CC8C Offset: 0x180CC8C VA: 0x180CC8C Slot: 5
	public void update(QuestRewardItemAction that) { }

	// RVA: 0x180CE84 Offset: 0x180CE84 VA: 0x180CE84 Slot: 6
	public void end(QuestRewardItemAction that) { }
}

// Namespace: 
private class QuestRewardItemAction.StateItemLabel : IState<QuestRewardItemAction> // TypeDefIndex: 11184
{
	// Fields
	private const float MV_TIME = 0.25;

	// Methods

	// RVA: 0x180BBB8 Offset: 0x180BBB8 VA: 0x180BBB8
	public void .ctor() { }

	// RVA: 0x180C520 Offset: 0x180C520 VA: 0x180C520 Slot: 4
	public void begin(QuestRewardItemAction that) { }

	// RVA: 0x180C828 Offset: 0x180C828 VA: 0x180C828 Slot: 5
	public void update(QuestRewardItemAction that) { }

	// RVA: 0x180C82C Offset: 0x180C82C VA: 0x180C82C Slot: 6
	public void end(QuestRewardItemAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1D60 Offset: 0xCB1D60 VA: 0xCB1D60
private sealed class QuestRewardItemAction.StateItemLabel.<begin>c__AnonStorey0 // TypeDefIndex: 11185
{
	// Fields
	internal GameObject tgt_obj; // 0x10
	internal MoveObject mo; // 0x18
	internal QuestRewardItemAction that; // 0x20

	// Methods

	// RVA: 0x180C820 Offset: 0x180C820 VA: 0x180C820
	public void .ctor() { }

	// RVA: 0x180C830 Offset: 0x180C830 VA: 0x180C830
	internal void <>m__0() { }

	// RVA: 0x180C86C Offset: 0x180C86C VA: 0x180C86C
	internal void <>m__1() { }
}

// Namespace: 
private class QuestRewardItemAction.StateTouchWait : IState<QuestRewardItemAction> // TypeDefIndex: 11186
{
	// Methods

	// RVA: 0x180BBC0 Offset: 0x180BBC0 VA: 0x180BBC0
	public void .ctor() { }

	// RVA: 0x180CE88 Offset: 0x180CE88 VA: 0x180CE88 Slot: 4
	public void begin(QuestRewardItemAction that) { }

	// RVA: 0x180CEE4 Offset: 0x180CEE4 VA: 0x180CEE4 Slot: 5
	public void update(QuestRewardItemAction that) { }

	// RVA: 0x180D0F4 Offset: 0x180D0F4 VA: 0x180D0F4 Slot: 6
	public void end(QuestRewardItemAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1D70 Offset: 0xCB1D70 VA: 0xCB1D70
private sealed class QuestRewardItemAction.StateTouchWait.<update>c__AnonStorey0 // TypeDefIndex: 11187
{
	// Fields
	internal QuestRewardItemAction that; // 0x10

	// Methods

	// RVA: 0x180D0EC Offset: 0x180D0EC VA: 0x180D0EC
	public void .ctor() { }

	// RVA: 0x180D0F8 Offset: 0x180D0F8 VA: 0x180D0F8
	internal void <>m__0() { }
}

// Namespace: 
public class QuestRewardOrderGradeAction : MonoBehaviour // TypeDefIndex: 11188
{
	// Fields
	private CStateManager<QuestRewardOrderGradeAction> mFSM; // 0x18
	private Animation mAnimation; // 0x20
	private SimpleAnimation mSimpleAnimation; // 0x28
	[SerializeField] // RVA: 0xCEA1CC Offset: 0xCEA1CC VA: 0xCEA1CC
	private UISprite mItemSp; // 0x30
	[SerializeField] // RVA: 0xCEA1DC Offset: 0xCEA1DC VA: 0xCEA1DC
	private UILabel mItemLabel; // 0x38
	[SerializeField] // RVA: 0xCEA1EC Offset: 0xCEA1EC VA: 0xCEA1EC
	private GameObject mAppearEffObj; // 0x40
	[SerializeField] // RVA: 0xCEA1FC Offset: 0xCEA1FC VA: 0xCEA1FC
	private GameObject particlePrefab; // 0x48
	protected GameObject particleObj; // 0x50
	private ScreenTouchInformationComponent mScreenTouchInfo; // 0x58
	private Action mEndAct; // 0x60

	// Methods

	// RVA: 0x180D128 Offset: 0x180D128 VA: 0x180D128
	public void .ctor() { }

	// RVA: 0x180D130 Offset: 0x180D130 VA: 0x180D130
	private void Awake() { }

	// RVA: 0x180D480 Offset: 0x180D480 VA: 0x180D480
	private void Update() { }

