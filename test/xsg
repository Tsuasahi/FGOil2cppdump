public class ServantNpInfoIconComponent : BaseMonoBehaviour // TypeDefIndex: 9665
{
	// Fields
	[SerializeField] // RVA: 0xCD91B4 Offset: 0xCD91B4 VA: 0xCD91B4
	protected UISprite backSprite; // 0x18
	[SerializeField] // RVA: 0xCD91C4 Offset: 0xCD91C4 VA: 0xCD91C4
	protected UISprite skillIconSprite; // 0x20
	[SerializeField] // RVA: 0xCD91D4 Offset: 0xCD91D4 VA: 0xCD91D4
	protected UISprite frameSprite; // 0x28
	[SerializeField] // RVA: 0xCD91E4 Offset: 0xCD91E4 VA: 0xCD91E4
	protected UIIconLabel iconLabel; // 0x30
	[SerializeField] // RVA: 0xCD91F4 Offset: 0xCD91F4 VA: 0xCD91F4
	protected UILabel levelLabel; // 0x38
	[SerializeField] // RVA: 0xCD9204 Offset: 0xCD9204 VA: 0xCD9204
	protected UILabel tdNameRubyLabel; // 0x40
	[SerializeField] // RVA: 0xCD9214 Offset: 0xCD9214 VA: 0xCD9214
	protected UILabel tdNameLabel; // 0x48
	[SerializeField] // RVA: 0xCD9224 Offset: 0xCD9224 VA: 0xCD9224
	protected UILabel tdDetailLabel; // 0x50
	[SerializeField] // RVA: 0xCD9234 Offset: 0xCD9234 VA: 0xCD9234
	protected UISprite noSelectMskImg; // 0x58
	[SerializeField] // RVA: 0xCD9244 Offset: 0xCD9244 VA: 0xCD9244
	protected GameObject commandCardPrefab; // 0x60
	[SerializeField] // RVA: 0xCD9254 Offset: 0xCD9254 VA: 0xCD9254
	protected GameObject commandCardBase; // 0x68
	protected BattleCommandComponent commandCard; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xCD9264 Offset: 0xCD9264 VA: 0xCD9264
	[DebuggerBrowsableAttribute] // RVA: 0xCD9264 Offset: 0xCD9264 VA: 0xCD9264
	private int <infoIndex>k__BackingField; // 0x78

	// Properties
	public int infoIndex { get; set; }

	// Methods

	// RVA: 0x1ECD808 Offset: 0x1ECD808 VA: 0x1ECD808
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D1F4 Offset: 0xD3D1F4 VA: 0xD3D1F4
	// RVA: 0x1ECD810 Offset: 0x1ECD810 VA: 0x1ECD810
	public int get_infoIndex() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D204 Offset: 0xD3D204 VA: 0xD3D204
	// RVA: 0x1ECD818 Offset: 0x1ECD818 VA: 0x1ECD818
	private void set_infoIndex(int value) { }

	// RVA: 0x1ECD820 Offset: 0x1ECD820 VA: 0x1ECD820
	public void SetNpInfo(UserServantEntity baseData, int idx, SvtUseNpData npData) { }

	// RVA: 0x1ECDA60 Offset: 0x1ECDA60 VA: 0x1ECDA60
	private void setNpIconImg(UserServantEntity baseUsrSvtData, SvtUseNpData npData) { }

	// RVA: 0x1ECD928 Offset: 0x1ECD928 VA: 0x1ECD928
	private void setNpLv(int lv) { }

	// RVA: 0x1ECDEF4 Offset: 0x1ECDEF4 VA: 0x1ECDEF4
	public void getNpInfo() { }

	// RVA: 0x1ECDEF8 Offset: 0x1ECDEF8 VA: 0x1ECDEF8
	public void setDispSelectMskImg(bool isShow) { }
}

// Namespace: 
public sealed class ServantNpInfoIconComponent.ClickDelegate : MulticastDelegate // TypeDefIndex: 9666
{
	// Methods

	// RVA: 0x1ECDEFC Offset: 0x1ECDEFC VA: 0x1ECDEFC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1ECDF0C Offset: 0x1ECDF0C VA: 0x1ECDF0C Slot: 11
	public virtual void Invoke(bool isDecide) { }

	// RVA: 0x1ECE138 Offset: 0x1ECE138 VA: 0x1ECE138 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isDecide, AsyncCallback callback, object object) { }

	// RVA: 0x1ECE1C8 Offset: 0x1ECE1C8 VA: 0x1ECE1C8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantSkillInfoIconComponent : BaseMonoBehaviour // TypeDefIndex: 9667
{
	// Fields
	[SerializeField] // RVA: 0xCD92A0 Offset: 0xCD92A0 VA: 0xCD92A0
	protected SkillIconComponent skillIconComp; // 0x18
	[SerializeField] // RVA: 0xCD92B0 Offset: 0xCD92B0 VA: 0xCD92B0
	protected GameObject defLvLabel; // 0x20
	[SerializeField] // RVA: 0xCD92C0 Offset: 0xCD92C0 VA: 0xCD92C0
	protected UISprite backSprite; // 0x28
	[SerializeField] // RVA: 0xCD92D0 Offset: 0xCD92D0 VA: 0xCD92D0
	protected UISprite skillIconSprite; // 0x30
	[SerializeField] // RVA: 0xCD92E0 Offset: 0xCD92E0 VA: 0xCD92E0
	protected UISprite frameSprite; // 0x38
	[SerializeField] // RVA: 0xCD92F0 Offset: 0xCD92F0 VA: 0xCD92F0
	protected GameObject levelInfo; // 0x40
	[SerializeField] // RVA: 0xCD9300 Offset: 0xCD9300 VA: 0xCD9300
	protected UILabel levelLabel; // 0x48
	[SerializeField] // RVA: 0xCD9310 Offset: 0xCD9310 VA: 0xCD9310
	protected UILabel skillNameLabel; // 0x50
	[SerializeField] // RVA: 0xCD9320 Offset: 0xCD9320 VA: 0xCD9320
	protected UISprite noSelectMskImg; // 0x58
	[SerializeField] // RVA: 0xCD9330 Offset: 0xCD9330 VA: 0xCD9330
	protected GameObject chargeInfoObj; // 0x60
	[SerializeField] // RVA: 0xCD9340 Offset: 0xCD9340 VA: 0xCD9340
	protected UILabel chargeTitleLb; // 0x68
	[SerializeField] // RVA: 0xCD9350 Offset: 0xCD9350 VA: 0xCD9350
	protected UILabel chargeTimeLb; // 0x70
	[SerializeField] // RVA: 0xCD9360 Offset: 0xCD9360 VA: 0xCD9360
	private UILabel statusLb; // 0x78
	[SerializeField] // RVA: 0xCD9370 Offset: 0xCD9370 VA: 0xCD9370
	private UISprite lockImg; // 0x80
	[SerializeField] // RVA: 0xCD9380 Offset: 0xCD9380 VA: 0xCD9380
	private UISprite lineImg; // 0x88
	private int index; // 0x90
	private bool isSetSkillId; // 0x94
	protected ServantSkillInfoIconComponent.ClickDelegate callbackFunc; // 0x98
	private int currentSkillId; // 0xA0
	private int currentSkillLv; // 0xA4
	private ServantSkillStrengthStatus skillStrengthStatus; // 0xA8

	// Methods

	// RVA: 0x1FC0004 Offset: 0x1FC0004 VA: 0x1FC0004
	public void .ctor() { }

	// RVA: 0x1FC000C Offset: 0x1FC000C VA: 0x1FC000C
	public void SetSkillInfo(int idx, int skillId, int skillLv, int skillMaxLv, string skillName, int skillIconId, int statusKind, int skillRecord, int baseSvtId, ServantSkillInfoIconComponent.ClickDelegate callback) { }

	// RVA: 0x1FC044C Offset: 0x1FC044C VA: 0x1FC044C
	private void SetSkillIconInfo(int idx, int skillId, int skillLv, ServantSkillInfoIconComponent.ClickDelegate callback) { }

	// RVA: 0x1FC0E90 Offset: 0x1FC0E90 VA: 0x1FC0E90
	public void SetSkillInfo(int idx, string skillName, int skillId, int skillLv, int skillMaxLv, ServantSkillInfoIconComponent.ClickDelegate callback) { }

	// RVA: 0x1FC103C Offset: 0x1FC103C VA: 0x1FC103C
	public void SetSkillIconStatusDisp(int skillLv, bool isEnableCombine) { }

	// RVA: 0x1FC1258 Offset: 0x1FC1258 VA: 0x1FC1258
	public int getSkillInfo() { }

	// RVA: 0x1FC1260 Offset: 0x1FC1260 VA: 0x1FC1260
	public void setDispSelectMskImg(bool isShow) { }

	// RVA: 0x1FC12B0 Offset: 0x1FC12B0 VA: 0x1FC12B0
	public void OnClickSkill() { }

	// RVA: 0x1FC158C Offset: 0x1FC158C VA: 0x1FC158C
	public void OnClickSkillDetail() { }

	// RVA: 0x1FC0AA8 Offset: 0x1FC0AA8 VA: 0x1FC0AA8
	public void checkEnableCombine(int id) { }

	// RVA: 0x1FC18BC Offset: 0x1FC18BC VA: 0x1FC18BC
	public void Clear() { }

	// RVA: 0x1FC1AAC Offset: 0x1FC1AAC VA: 0x1FC1AAC
	public void ClearAppendSkillInfo() { }
}

// Namespace: 
public sealed class ServantSkillInfoIconComponent.ClickDelegate : MulticastDelegate // TypeDefIndex: 9668
{
	// Methods

	// RVA: 0x1FC1CF4 Offset: 0x1FC1CF4 VA: 0x1FC1CF4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1FC1348 Offset: 0x1FC1348 VA: 0x1FC1348 Slot: 11
	public virtual void Invoke(bool isDecide, int idx) { }

	// RVA: 0x1FC1D04 Offset: 0x1FC1D04 VA: 0x1FC1D04 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isDecide, int idx, AsyncCallback callback, object object) { }

	// RVA: 0x1FC1DB4 Offset: 0x1FC1DB4 VA: 0x1FC1DB4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SkillCombineControl : CombineMenuControl // TypeDefIndex: 9669
{
	// Fields
	[SerializeField] // RVA: 0xCD9390 Offset: 0xCD9390 VA: 0xCD9390
	private UISprite eventNoticeImg; // 0x68
	[SerializeField] // RVA: 0xCD93A0 Offset: 0xCD93A0 VA: 0xCD93A0
	private UILabel preSelectBaseLb; // 0x70
	[SerializeField] // RVA: 0xCD93B0 Offset: 0xCD93B0 VA: 0xCD93B0
	private GameObject baseSelectInfoLb; // 0x78
	[SerializeField] // RVA: 0xCD93C0 Offset: 0xCD93C0 VA: 0xCD93C0
	private GameObject selectSkillInfo; // 0x80
	[SerializeField] // RVA: 0xCD93D0 Offset: 0xCD93D0 VA: 0xCD93D0
	private GameObject skillCombineInfo; // 0x88
	[SerializeField] // RVA: 0xCD93E0 Offset: 0xCD93E0 VA: 0xCD93E0
	private UILabel haveQpLb; // 0x90
	[SerializeField] // RVA: 0xCD93F0 Offset: 0xCD93F0 VA: 0xCD93F0
	private UILabel needQpLb; // 0x98
	[SerializeField] // RVA: 0xCD9400 Offset: 0xCD9400 VA: 0xCD9400
	private UILabel qpLb; // 0xA0
	[SerializeField] // RVA: 0xCD9410 Offset: 0xCD9410 VA: 0xCD9410
	private UILabel detailInfoLb; // 0xA8
	[SerializeField] // RVA: 0xCD9420 Offset: 0xCD9420 VA: 0xCD9420
	private UILabel combineBtnTxt; // 0xB0
	[SerializeField] // RVA: 0xCD9430 Offset: 0xCD9430 VA: 0xCD9430
	private UISprite combineBtnBg; // 0xB8
	[SerializeField] // RVA: 0xCD9440 Offset: 0xCD9440 VA: 0xCD9440
	private UISprite combineTxtImg; // 0xC0
	[SerializeField] // RVA: 0xCD9450 Offset: 0xCD9450 VA: 0xCD9450
	private UILabel selectSkillHelpLb; // 0xC8
	[SerializeField] // RVA: 0xCD9460 Offset: 0xCD9460 VA: 0xCD9460
	private List<LimitCntUpItemComponent> itemInfoList; // 0xD0
	[SerializeField] // RVA: 0xCD9470 Offset: 0xCD9470 VA: 0xCD9470
	private List<ServantSkillInfoIconComponent> skillInfoList; // 0xD8
	private int haveQpVal; // 0xE0
	private int spendQpVal; // 0xE4
	private long userId; // 0xE8
	private int userQP; // 0xF0
	private SvtUseSkillData skillData; // 0xF8
	private SetLevelUpData lvUpData; // 0x100
	private List<ServantSkillInfoIconComponent> targetList; // 0x108
	private UICharaGraphTexture charaGraph; // 0x110
	private List<EventInfoData> combineEventList; // 0x118
	private int[] useSkillIdList; // 0x120
	private int currentIdx; // 0x128

	// Methods

	// RVA: 0x1A5AF20 Offset: 0x1A5AF20 VA: 0x1A5AF20
	public void .ctor() { }

	// RVA: 0x1A5AF28 Offset: 0x1A5AF28 VA: 0x1A5AF28 Slot: 6
	protected override EventTutorialMaster.OpenType GetTutorialOpenType() { }

	// RVA: 0x1A5AF30 Offset: 0x1A5AF30 VA: 0x1A5AF30
	public void InitSvtSkillCombine() { }

	// RVA: 0x1A5B260 Offset: 0x1A5B260 VA: 0x1A5B260
	private void InitDispCombineInfo() { }

	// RVA: 0x1A5B7AC Offset: 0x1A5B7AC VA: 0x1A5B7AC
	private void SetHaveQpInfo() { }

	// RVA: 0x1A5B840 Offset: 0x1A5B840 VA: 0x1A5B840
	public void SetBaseSvtSkillInfo(UserServantEntity usrSvtEn, int idx = 0) { }

	// RVA: 0x1A5BE0C Offset: 0x1A5BE0C VA: 0x1A5BE0C
	public void SetBaseSvtCardImg(UserServantEntity usrSvtData) { }

	// RVA: 0x1A5B9A0 Offset: 0x1A5B9A0 VA: 0x1A5B9A0
	private SvtUseSkillData GetSvtSkillData(UserServantEntity usrSvtData) { }

	// RVA: 0x1A5BA78 Offset: 0x1A5BA78 VA: 0x1A5BA78
	private void SetCombineSkillList(SvtUseSkillData skillData, GameObject targetGo, int svtId) { }

	// RVA: 0x1A5C200 Offset: 0x1A5C200 VA: 0x1A5C200
	public void OnClickInfo(bool isdecide, int idx) { }

	// RVA: 0x1A5C03C Offset: 0x1A5C03C VA: 0x1A5C03C
	private void SetNeedItemInfo(int idx) { }

	// RVA: 0x1A5C208 Offset: 0x1A5C208 VA: 0x1A5C208
	private void SetSvtSkillCombineData(int idx) { }

	// RVA: 0x1A5B580 Offset: 0x1A5B580 VA: 0x1A5B580
	private void SetExeBtnState() { }

	// RVA: 0x1A5CD6C Offset: 0x1A5CD6C VA: 0x1A5CD6C
	public SetLevelUpData GetTargetData() { }

	// RVA: 0x1A5CD74 Offset: 0x1A5CD74 VA: 0x1A5CD74
	public void OnClickExeCombine() { }

	// RVA: 0x1A5CE18 Offset: 0x1A5CE18 VA: 0x1A5CE18
	public void SetStateInfoMsg(CombineRootComponent.StateType state) { }

	// RVA: 0x1A5CF68 Offset: 0x1A5CF68 VA: 0x1A5CF68
	public bool CheckIsMaxLvSkills(UserServantEntity resData) { }
}

// Namespace: 
public class SvtEqCombineListViewItem : ListViewItem // TypeDefIndex: 9670
{
	// Fields
	protected SvtEqCombineListViewItem.Type type; // 0x70
	protected UserServantEntity userSvtEntity; // 0x78
	protected ServantEntity servantEntity; // 0x80
	protected EventUpValSetupInfo setupInfo; // 0x88
	protected EventUpValSetupInfo finishSetupInfo; // 0x90
	protected int svtId; // 0x98
	protected int rarity; // 0x9C
	protected bool isLock; // 0xA0
	protected bool isLimitCntTarget; // 0xA1
	protected bool isLvMax; // 0xA2
	protected bool isLimitCntMax; // 0xA3
	protected bool isFavorite; // 0xA4
	protected bool isChoice; // 0xA5
	private bool isNotSelection; // 0xA6
	private bool isFriendShipSvtEq; // 0xA7
	private bool isChocolateSvtEquip; // 0xA8
	protected bool isBaseSvt; // 0xA9
	protected bool isMaterialSvt; // 0xAA
	public bool isLastSelectMaterial; // 0xAB
	protected int materialExp; // 0xAC
	protected int partyIndex; // 0xB0
	protected bool isMaxSelect; // 0xB4
	protected string sortInfoText; // 0xB8
	protected int classId; // 0xC0
	protected int friendship; // 0xC4
	protected int friendshipMax; // 0xC8
	protected bool isEquiped; // 0xCC
	protected IconLabelInfo iconLabelInfo1; // 0xD0
	protected IconLabelInfo iconLabelInfo2; // 0xD8
	protected long amountSortValue; // 0xE0
	protected int maxLimitCnt; // 0xE8
	protected int currentLimitCnt; // 0xEC
	protected bool isSvtEqMaterial; // 0xF0
	protected bool isBaseLvMax; // 0xF1
	protected bool isMaxNextLv; // 0xF2
	protected bool isSameSvt; // 0xF3
	protected bool isUseSupportEquip; // 0xF4
	protected bool isSwapLock; // 0xF5
	protected bool isSwapChoice; // 0xF6
	protected int dragSelectNum; // 0xF8
	protected bool isCanNotLock; // 0xFC
	protected ListViewSort.BonusFilterKind bonusKind; // 0x100
	protected int bonusKindId; // 0x104
	protected bool isEventUpVal; // 0x108
	protected int[] categoryIdList; // 0x110

	// Properties
	public SvtEqCombineListViewItem.Type ListType { get; }
	public UserServantEntity UserSvtEntity { get; }
	public long UserSvtId { get; }
	public int SvtId { get; }
	public int SvtRariry { get; }
	public bool IsCanNotBaseSelect { get; }
	public bool IsCanNotSelect { get; }
	public bool IsLimitTarget { get; }
	public bool IsLock { get; }
	public bool IsChoice { get; }
	public int GetMaterialExp { get; }
	public bool IsBaseSvt { get; }
	public bool IsMtSelect { get; set; }
	public bool IsSelectMax { get; set; }
	public IconLabelInfo IconInfo1 { get; }
	public IconLabelInfo IconInfo2 { get; }
	public bool IsLimitCntMax { get; }
	public bool IsLvMax { get; }
	public bool IsEquip { get; }
	public int GetMaxLimitCnt { get; }
	public int GetCurrentLimitCnt { get; }
	public bool IsSvtEqMaterial { get; }
	public bool IsMaxNextLv { get; set; }
	public bool IsBaseLvMax { get; }
	public bool IsUseSupportEquip { get; }
	public int GetAddTotalExp { get; }
	public bool IsSwapLock { get; }
	public bool IsDispLock { get; }
	public bool IsSwapChoice { get; }
	public bool IsDispChoice { get; }
	public bool IsDragSelect { get; set; }
	public int DragSelectNum { get; set; }
	public bool IsCanNotLock { get; set; }
	public int CombineQp { get; }
	public int PartyIndex { get; }
	public bool IsNotSelection { get; }
	public bool IsFriendShipSvtEq { get; }
	public bool IsChocolateSvtEquip { get; }

	// Methods

	// RVA: 0x1A18874 Offset: 0x1A18874 VA: 0x1A18874
	public void .ctor(SvtEqCombineListViewItem.Type type, int index, UserServantEntity userSvtEntity, bool isFavorite, UserServantEntity baseUsrSvtData, bool isMtSvt, EventUpValSetupInfo setupInfo, EventUpValSetupInfo finishSetupInfo) { }

	// RVA: 0x1A19710 Offset: 0x1A19710 VA: 0x1A19710 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1A19718 Offset: 0x1A19718 VA: 0x1A19718
	public void ModifyItem(bool isFavorite) { }

	// RVA: 0x1A19744 Offset: 0x1A19744 VA: 0x1A19744
	public void ModifyLockItem() { }

	// RVA: 0x1A19788 Offset: 0x1A19788 VA: 0x1A19788
	public void ModifyChoiceItem() { }

	// RVA: 0x1A197CC Offset: 0x1A197CC VA: 0x1A197CC Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x1A1A394 Offset: 0x1A1A394 VA: 0x1A1A394 Slot: 5
	public override bool IsMatchFilter(ListViewSort sort) { }

	// RVA: 0x1A1A550 Offset: 0x1A1A550 VA: 0x1A1A550
	public SvtEqCombineListViewItem.Type get_ListType() { }

	// RVA: 0x1A1A558 Offset: 0x1A1A558 VA: 0x1A1A558
	public void setUserServantEntity(UserServantEntity entity) { }

	// RVA: 0x1A1A560 Offset: 0x1A1A560 VA: 0x1A1A560
	public UserServantEntity get_UserSvtEntity() { }

	// RVA: 0x1A1A568 Offset: 0x1A1A568 VA: 0x1A1A568
	public long get_UserSvtId() { }

	// RVA: 0x1A1A604 Offset: 0x1A1A604 VA: 0x1A1A604
	public int get_SvtId() { }

	// RVA: 0x1A1A60C Offset: 0x1A1A60C VA: 0x1A1A60C
	public int get_SvtRariry() { }

	// RVA: 0x1A1A614 Offset: 0x1A1A614 VA: 0x1A1A614
	public bool get_IsCanNotBaseSelect() { }

	// RVA: 0x1A1A64C Offset: 0x1A1A64C VA: 0x1A1A64C
	public bool get_IsCanNotSelect() { }

	// RVA: 0x1A1A694 Offset: 0x1A1A694 VA: 0x1A1A694
	public bool get_IsLimitTarget() { }

	// RVA: 0x1A1A69C Offset: 0x1A1A69C VA: 0x1A1A69C
	public bool get_IsLock() { }

	// RVA: 0x1A1A6A4 Offset: 0x1A1A6A4 VA: 0x1A1A6A4
	public bool get_IsChoice() { }

	// RVA: 0x1A1A6AC Offset: 0x1A1A6AC VA: 0x1A1A6AC
	public int get_GetMaterialExp() { }

	// RVA: 0x1A1A200 Offset: 0x1A1A200 VA: 0x1A1A200
	public bool get_IsBaseSvt() { }

	// RVA: 0x1A1A6B4 Offset: 0x1A1A6B4 VA: 0x1A1A6B4
	public bool get_IsMtSelect() { }

	// RVA: 0x1A1A6BC Offset: 0x1A1A6BC VA: 0x1A1A6BC
	public void set_IsMtSelect(bool value) { }

	// RVA: 0x1A1A6C8 Offset: 0x1A1A6C8 VA: 0x1A1A6C8
	public bool get_IsSelectMax() { }

	// RVA: 0x1A1A6D0 Offset: 0x1A1A6D0 VA: 0x1A1A6D0
	public void set_IsSelectMax(bool value) { }

	// RVA: 0x1A1A6DC Offset: 0x1A1A6DC VA: 0x1A1A6DC
	public IconLabelInfo get_IconInfo1() { }

	// RVA: 0x1A1A6E4 Offset: 0x1A1A6E4 VA: 0x1A1A6E4
	public IconLabelInfo get_IconInfo2() { }

	// RVA: 0x1A1A6EC Offset: 0x1A1A6EC VA: 0x1A1A6EC
	public bool get_IsLimitCntMax() { }

	// RVA: 0x1A1A6F4 Offset: 0x1A1A6F4 VA: 0x1A1A6F4
	public bool get_IsLvMax() { }

	// RVA: 0x1A1A6FC Offset: 0x1A1A6FC VA: 0x1A1A6FC
	public bool get_IsEquip() { }

	// RVA: 0x1A1A704 Offset: 0x1A1A704 VA: 0x1A1A704
	public int get_GetMaxLimitCnt() { }

	// RVA: 0x1A1A70C Offset: 0x1A1A70C VA: 0x1A1A70C
	public int get_GetCurrentLimitCnt() { }

	// RVA: 0x1A1A714 Offset: 0x1A1A714 VA: 0x1A1A714
	public bool get_IsSvtEqMaterial() { }

	// RVA: 0x1A1A71C Offset: 0x1A1A71C VA: 0x1A1A71C
	public bool get_IsMaxNextLv() { }

	// RVA: 0x1A1A724 Offset: 0x1A1A724 VA: 0x1A1A724
	public void set_IsMaxNextLv(bool value) { }

	// RVA: 0x1A1A730 Offset: 0x1A1A730 VA: 0x1A1A730
	public bool get_IsBaseLvMax() { }

	// RVA: 0x1A1A738 Offset: 0x1A1A738 VA: 0x1A1A738
	public bool get_IsUseSupportEquip() { }

	// RVA: 0x1A1A740 Offset: 0x1A1A740 VA: 0x1A1A740
	public int get_GetAddTotalExp() { }

	// RVA: 0x1A1A784 Offset: 0x1A1A784 VA: 0x1A1A784
	public bool SwapLock() { }

	// RVA: 0x1A1A7A0 Offset: 0x1A1A7A0 VA: 0x1A1A7A0
	public bool get_IsSwapLock() { }

	// RVA: 0x1A1A208 Offset: 0x1A1A208 VA: 0x1A1A208
	public bool get_IsDispLock() { }

	// RVA: 0x1A1A7A8 Offset: 0x1A1A7A8 VA: 0x1A1A7A8
	public bool SwapChoice() { }

	// RVA: 0x1A1A7C4 Offset: 0x1A1A7C4 VA: 0x1A1A7C4
	public bool get_IsSwapChoice() { }

	// RVA: 0x1A1A1E0 Offset: 0x1A1A1E0 VA: 0x1A1A1E0
	public bool get_IsDispChoice() { }

	// RVA: 0x1A1A7CC Offset: 0x1A1A7CC VA: 0x1A1A7CC
	public bool get_IsDragSelect() { }

	// RVA: 0x1A1A7DC Offset: 0x1A1A7DC VA: 0x1A1A7DC
	public void set_IsDragSelect(bool value) { }

	// RVA: 0x1A1A80C Offset: 0x1A1A80C VA: 0x1A1A80C
	public int get_DragSelectNum() { }

	// RVA: 0x1A1A814 Offset: 0x1A1A814 VA: 0x1A1A814
	public void set_DragSelectNum(int value) { }

	// RVA: 0x1A1A81C Offset: 0x1A1A81C VA: 0x1A1A81C
	public bool get_IsCanNotLock() { }

	// RVA: 0x1A1A824 Offset: 0x1A1A824 VA: 0x1A1A824
	public void set_IsCanNotLock(bool value) { }

	// RVA: 0x1A1A830 Offset: 0x1A1A830 VA: 0x1A1A830
	public int get_CombineQp() { }

	// RVA: 0x1A1A860 Offset: 0x1A1A860 VA: 0x1A1A860
	public int get_PartyIndex() { }

	// RVA: 0x1A1A868 Offset: 0x1A1A868 VA: 0x1A1A868
	public bool get_IsNotSelection() { }

	// RVA: 0x1A1A870 Offset: 0x1A1A870 VA: 0x1A1A870
	public bool get_IsFriendShipSvtEq() { }

	// RVA: 0x1A1A878 Offset: 0x1A1A878 VA: 0x1A1A878
	public bool get_IsChocolateSvtEquip() { }
}

// Namespace: 
public enum SvtEqCombineListViewItem.Type // TypeDefIndex: 9671
{
	// Fields
	public int value__; // 0x0
	public const SvtEqCombineListViewItem.Type SVTEQ_BASE = 0;
	public const SvtEqCombineListViewItem.Type SVTEQ_MATERIAL = 1;
	public const SvtEqCombineListViewItem.Type SUM = 2;
}

// Namespace: 
public class SvtEqCombineListViewItemDraw : BaseMonoBehaviour // TypeDefIndex: 9672
{
	// Fields
	[SerializeField] // RVA: 0xCD9480 Offset: 0xCD9480 VA: 0xCD9480
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xCD9490 Offset: 0xCD9490 VA: 0xCD9490
	private ServantFaceIconComponent servantface; // 0x20
	[SerializeField] // RVA: 0xCD94A0 Offset: 0xCD94A0 VA: 0xCD94A0
	protected DragSelectComponent dragSelect; // 0x28
	[SerializeField] // RVA: 0xCD94B0 Offset: 0xCD94B0 VA: 0xCD94B0
	protected UILabel statusTextLabel; // 0x30
	[SerializeField] // RVA: 0xCD94C0 Offset: 0xCD94C0 VA: 0xCD94C0
	protected UISprite faceImg; // 0x38
	[SerializeField] // RVA: 0xCD94D0 Offset: 0xCD94D0 VA: 0xCD94D0
	protected UISprite frameImg; // 0x40
	[SerializeField] // RVA: 0xCD94E0 Offset: 0xCD94E0 VA: 0xCD94E0
	protected UISprite partyImg; // 0x48
	[SerializeField] // RVA: 0xCD94F0 Offset: 0xCD94F0 VA: 0xCD94F0
	protected FlashingIconComponent partyIcon; // 0x50
	[SerializeField] // RVA: 0xCD9500 Offset: 0xCD9500 VA: 0xCD9500
	protected UISprite removeImg; // 0x58
	[SerializeField] // RVA: 0xCD9510 Offset: 0xCD9510 VA: 0xCD9510
	protected UISprite lockImg; // 0x60
	[SerializeField] // RVA: 0xCD9520 Offset: 0xCD9520 VA: 0xCD9520
	protected UISprite choiceImg; // 0x68
	[SerializeField] // RVA: 0xCD9530 Offset: 0xCD9530 VA: 0xCD9530
	protected UISprite equipSprite; // 0x70
	[SerializeField] // RVA: 0xCD9540 Offset: 0xCD9540 VA: 0xCD9540
	protected UISprite maskSprite; // 0x78
	[SerializeField] // RVA: 0xCD9550 Offset: 0xCD9550 VA: 0xCD9550
	protected UILabel maskLabel; // 0x80
	[SerializeField] // RVA: 0xCD9560 Offset: 0xCD9560 VA: 0xCD9560
	private UISprite friendShipImg; // 0x88
	[SerializeField] // RVA: 0xCD9570 Offset: 0xCD9570 VA: 0xCD9570
	private UISprite chocolateSprite; // 0x90
	public LimitCountIconComponent limitCountIcon; // 0x98
	public UIIconLabel subIconLabel; // 0xA0

	// Methods

	// RVA: 0x1A1A880 Offset: 0x1A1A880 VA: 0x1A1A880
	public void .ctor() { }

	// RVA: 0x1A1A888 Offset: 0x1A1A888 VA: 0x1A1A888
	public void SetItem(SvtEqCombineListViewItem item, SvtEqCombineListViewItemDraw.DispMode mode, SvtEqCombineListViewManager.ModeKind modeKind) { }

	// RVA: 0x1A1BA20 Offset: 0x1A1BA20 VA: 0x1A1BA20
	public void SetInput(SvtEqCombineListViewItem item, bool isInput) { }

	// RVA: 0x1A1B938 Offset: 0x1A1B938 VA: 0x1A1B938
	protected void SetSelectDisp(SvtEqCombineListViewItem item) { }
}

// Namespace: 
public enum SvtEqCombineListViewItemDraw.DispMode // TypeDefIndex: 9673
{
	// Fields
	public int value__; // 0x0
	public const SvtEqCombineListViewItemDraw.DispMode INVISIBLE = 0;
	public const SvtEqCombineListViewItemDraw.DispMode INVALID = 1;
	public const SvtEqCombineListViewItemDraw.DispMode VALID = 2;
	public const SvtEqCombineListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class SvtEqCombineListViewManager : ListViewManager // TypeDefIndex: 9674
{
	// Fields
	protected static readonly float COLOR_VAL; // 0x0
	protected static readonly int FILTER2_MAX_KIND_NUM; // 0x4
	public static readonly string SORT_SAVE_KEY; // 0x8
	[SerializeField] // RVA: 0xCD9580 Offset: 0xCD9580 VA: 0xCD9580
	private CombineRootComponent combineRootComponent; // 0x138
	[SerializeField] // RVA: 0xCD9590 Offset: 0xCD9590 VA: 0xCD9590
	private UILabel emptyListNoticeLabel; // 0x140
	[SerializeField] // RVA: 0xCD95A0 Offset: 0xCD95A0 VA: 0xCD95A0
	private UILabel servantInfoLabel; // 0x148
	[SerializeField] // RVA: 0xCD95B0 Offset: 0xCD95B0 VA: 0xCD95B0
	private UILabel selectInfoLabel; // 0x150
	[SerializeField] // RVA: 0xCD95C0 Offset: 0xCD95C0 VA: 0xCD95C0
	private UILabel spendQpInfoLabel; // 0x158
	[SerializeField] // RVA: 0xCD95D0 Offset: 0xCD95D0 VA: 0xCD95D0
	private UILabel spendQpLabel; // 0x160
	[SerializeField] // RVA: 0xCD95E0 Offset: 0xCD95E0 VA: 0xCD95E0
	private UISprite spendQpBg; // 0x168
	[SerializeField] // RVA: 0xCD95F0 Offset: 0xCD95F0 VA: 0xCD95F0
	private UISprite spendQpInfoImg; // 0x170
	[SerializeField] // RVA: 0xCD9600 Offset: 0xCD9600 VA: 0xCD9600
	private GameObject getExpInfo; // 0x178
	[SerializeField] // RVA: 0xCD9610 Offset: 0xCD9610 VA: 0xCD9610
	private UILabel getExpInfoLabel; // 0x180
	[SerializeField] // RVA: 0xCD9620 Offset: 0xCD9620 VA: 0xCD9620
	private UILabel getExpLabel; // 0x188
	[SerializeField] // RVA: 0xCD9630 Offset: 0xCD9630 VA: 0xCD9630
	private UISprite getExpBg; // 0x190
	[SerializeField] // RVA: 0xCD9640 Offset: 0xCD9640 VA: 0xCD9640
	private UISprite getExpBgImg; // 0x198
	[SerializeField] // RVA: 0xCD9650 Offset: 0xCD9650 VA: 0xCD9650
	private UILabel getBasicExpLabel; // 0x1A0
	[SerializeField] // RVA: 0xCD9660 Offset: 0xCD9660 VA: 0xCD9660
	private UILabel getAccExpLabel; // 0x1A8
	[SerializeField] // RVA: 0xCD9670 Offset: 0xCD9670 VA: 0xCD9670
	private UILabel haveQpLabel; // 0x1B0
	[SerializeField] // RVA: 0xCD9680 Offset: 0xCD9680 VA: 0xCD9680
	private UISprite haveQpInfoImg; // 0x1B8
	[SerializeField] // RVA: 0xCD9690 Offset: 0xCD9690 VA: 0xCD9690
	private UISprite haveQpBg; // 0x1C0
	[SerializeField] // RVA: 0xCD96A0 Offset: 0xCD96A0 VA: 0xCD96A0
	private UILabel nextExpLabel; // 0x1C8
	[SerializeField] // RVA: 0xCD96B0 Offset: 0xCD96B0 VA: 0xCD96B0
	private UISprite nextExpInfoImg; // 0x1D0
	[SerializeField] // RVA: 0xCD96C0 Offset: 0xCD96C0 VA: 0xCD96C0
	private UISprite nextExpBg; // 0x1D8
	[SerializeField] // RVA: 0xCD96D0 Offset: 0xCD96D0 VA: 0xCD96D0
	private UICommonButton allReleaseButton; // 0x1E0
	[SerializeField] // RVA: 0xCD96E0 Offset: 0xCD96E0 VA: 0xCD96E0
	private UIButton decideButton; // 0x1E8
	[SerializeField] // RVA: 0xCD96F0 Offset: 0xCD96F0 VA: 0xCD96F0
	private UISprite decideBtnBg; // 0x1F0
	private bool isDecideFlg; // 0x1F8
	[SerializeField] // RVA: 0xCD9700 Offset: 0xCD9700 VA: 0xCD9700
	private int selectMax; // 0x1FC
	[SerializeField] // RVA: 0xCD9710 Offset: 0xCD9710 VA: 0xCD9710
	private UISprite levelUpInfoImg; // 0x200
	[SerializeField] // RVA: 0xCD9720 Offset: 0xCD9720 VA: 0xCD9720
	private UILabel combineInfoMsgLb; // 0x208
	[SerializeField] // RVA: 0xCD9730 Offset: 0xCD9730 VA: 0xCD9730
	private UISprite sortExplanationSprite; // 0x210
	[SerializeField] // RVA: 0xCD9740 Offset: 0xCD9740 VA: 0xCD9740
	private UISprite statusTabSprite; // 0x218
	[SerializeField] // RVA: 0xCD9750 Offset: 0xCD9750 VA: 0xCD9750
	private UISprite lockTabSprite; // 0x220
	[SerializeField] // RVA: 0xCD9760 Offset: 0xCD9760 VA: 0xCD9760
	private UISprite choiceTabSprite; // 0x228
	[SerializeField] // RVA: 0xCD9770 Offset: 0xCD9770 VA: 0xCD9770
	private UICommonButton statusTabButton; // 0x230
	[SerializeField] // RVA: 0xCD9780 Offset: 0xCD9780 VA: 0xCD9780
	private UICommonButton lockTabButton; // 0x238
	[SerializeField] // RVA: 0xCD9790 Offset: 0xCD9790 VA: 0xCD9790
	private UICommonButton choiceTabButton; // 0x240
	[SerializeField] // RVA: 0xCD97A0 Offset: 0xCD97A0 VA: 0xCD97A0
	private UISprite filterSprite; // 0x248
	[SerializeField] // RVA: 0xCD97B0 Offset: 0xCD97B0 VA: 0xCD97B0
	private UICommonButton bonusFilterKindButton; // 0x250
	[SerializeField] // RVA: 0xCD97C0 Offset: 0xCD97C0 VA: 0xCD97C0
	private UILabel bonusFilterKindLabel; // 0x258
	[SerializeField] // RVA: 0xCD97D0 Offset: 0xCD97D0 VA: 0xCD97D0
	private ListViewItemSeed normalSizeSeed; // 0x260
	[SerializeField] // RVA: 0xCD97E0 Offset: 0xCD97E0 VA: 0xCD97E0
	private ListViewItemSeed smallSizeSeed; // 0x268
	[SerializeField] // RVA: 0xCD97F0 Offset: 0xCD97F0 VA: 0xCD97F0
	private ListViewItemSeed extremelySmallSizeSeed; // 0x270
	[SerializeField] // RVA: 0xCD9800 Offset: 0xCD9800 VA: 0xCD9800
	private UICommonButton scaleChangeButton; // 0x278
	[SerializeField] // RVA: 0xCD9810 Offset: 0xCD9810 VA: 0xCD9810
	private UISprite scaleChangeButtonSprite; // 0x280
	[SerializeField] // RVA: 0xCD9820 Offset: 0xCD9820 VA: 0xCD9820
	private UISprite bgTxtSprite; // 0x288
	[SerializeField] // RVA: 0xCD9830 Offset: 0xCD9830 VA: 0xCD9830
	private ServantCheckEquipDialog servantEquipCheckDialog; // 0x290
	[SerializeField] // RVA: 0xCD9840 Offset: 0xCD9840 VA: 0xCD9840
	private MenuListControl menuListCtr; // 0x298
	private static bool isInitSystem; // 0x10
	private static ListViewSort[] sortStatusList; // 0x18
	private List<SvtEqCombineListViewItem> tempMtSvtList; // 0x2A0
	[CompilerGeneratedAttribute] // RVA: 0xCD9850 Offset: 0xCD9850 VA: 0xCD9850
	[DebuggerBrowsableAttribute] // RVA: 0xCD9850 Offset: 0xCD9850 VA: 0xCD9850
	private List<SvtEqCombineListViewItem> <selectedMtSvtList>k__BackingField; // 0x2A8
	private SetCombineData combineData; // 0x2B0
	private UserServantEntity selectUsrSvtEntity; // 0x2B8
	private SvtEqCombineListViewItem.Type itemType; // 0x2C0
	private SvtEqCombineListViewManager.InitMode initMode; // 0x2C4
	private SvtEqCombineListViewManager.ModeKind modeKind; // 0x2C8
	private ListViewSort.ScaleType scaleType; // 0x2CC
	[CompilerGeneratedAttribute] // RVA: 0xCD988C Offset: 0xCD988C VA: 0xCD988C
	[DebuggerBrowsableAttribute] // RVA: 0xCD988C Offset: 0xCD988C VA: 0xCD988C
	private SvtEqCombineListViewManager.CallbackFunc callbackFunc; // 0x2D0
	[CompilerGeneratedAttribute] // RVA: 0xCD98C8 Offset: 0xCD98C8 VA: 0xCD98C8
	[DebuggerBrowsableAttribute] // RVA: 0xCD98C8 Offset: 0xCD98C8 VA: 0xCD98C8
	private Action callbackFunc2; // 0x2D8
	private int callbackCount; // 0x2E0
	private SvtEqCombineListViewManager.RequestCallbackFunc requestCallback; // 0x2E8
	private UserServantMaster userServantMaster; // 0x2F0
	private int userQP; // 0x2F8
	private int selectSum; // 0x2FC
	private int selectQp; // 0x300
	private int selectExp; // 0x304
	private int addTotalExp; // 0x308
	private UserServantEntity baseUsrSvtData; // 0x310
	private long[] highRarityList; // 0x318
	private int expType; // 0x320
	private int totalExp; // 0x324
	private int increLv; // 0x328
	private int checkLv; // 0x32C
	private int getHpUpVal; // 0x330
	private int getAtkUpVal; // 0x334
	private bool isAllUpMax; // 0x338
	private bool isSelectMaterial; // 0x339
	[CompilerGeneratedAttribute] // RVA: 0xCD9904 Offset: 0xCD9904 VA: 0xCD9904
	[DebuggerBrowsableAttribute] // RVA: 0xCD9904 Offset: 0xCD9904 VA: 0xCD9904
	private bool <isOpenCheckEquipDialog>k__BackingField; // 0x33A
	private int[] bonusEventIdList; // 0x340
	private int[] bonusFinishEventIdList; // 0x348
	private SvtEqCombineListViewItem.Type currentType; // 0x350
	protected int dragSelectSum; // 0x354
	protected int dragStartIndex; // 0x358
	protected int dragEndIndex; // 0x35C
	protected bool isDragSelect; // 0x360
	[CompilerGeneratedAttribute] // RVA: 0xCD9940 Offset: 0xCD9940 VA: 0xCD9940
	private static Comparison<SvtEqCombineListViewItem> <>f__am$cache0; // 0x20

	// Properties
	public List<SvtEqCombineListViewItem> selectedMtSvtList { get; set; }
	public bool isOpenCheckEquipDialog { get; set; }
	public List<SvtEqCombineListViewObject> ObjectList { get; }
	public List<SvtEqCombineListViewObject> ClippingObjectList { get; }
	public SvtEqCombineListViewManager.ModeKind getModeKind { get; }

	// Methods

	// RVA: 0x1A1BF34 Offset: 0x1A1BF34 VA: 0x1A1BF34
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D214 Offset: 0xD3D214 VA: 0xD3D214
	// RVA: 0x1A1BFAC Offset: 0x1A1BFAC VA: 0x1A1BFAC
	public List<SvtEqCombineListViewItem> get_selectedMtSvtList() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D224 Offset: 0xD3D224 VA: 0xD3D224
	// RVA: 0x1A1BFB4 Offset: 0x1A1BFB4 VA: 0x1A1BFB4
	private void set_selectedMtSvtList(List<SvtEqCombineListViewItem> value) { }

	// RVA: 0x1A1BFBC Offset: 0x1A1BFBC VA: 0x1A1BFBC
	private void add_callbackFunc(SvtEqCombineListViewManager.CallbackFunc value) { }

	// RVA: 0x1A1C0AC Offset: 0x1A1C0AC VA: 0x1A1C0AC
	private void remove_callbackFunc(SvtEqCombineListViewManager.CallbackFunc value) { }

	// RVA: 0x1A1C19C Offset: 0x1A1C19C VA: 0x1A1C19C
	private void add_callbackFunc2(Action value) { }

	// RVA: 0x1A1C28C Offset: 0x1A1C28C VA: 0x1A1C28C
	private void remove_callbackFunc2(Action value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D234 Offset: 0xD3D234 VA: 0xD3D234
	// RVA: 0x1A1C37C Offset: 0x1A1C37C VA: 0x1A1C37C
	public bool get_isOpenCheckEquipDialog() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D244 Offset: 0xD3D244 VA: 0xD3D244
	// RVA: 0x1A1C384 Offset: 0x1A1C384 VA: 0x1A1C384
	private void set_isOpenCheckEquipDialog(bool value) { }

	// RVA: 0x1A1C390 Offset: 0x1A1C390 VA: 0x1A1C390
	public static void CreateSorteData() { }

	// RVA: 0x1A1C5AC Offset: 0x1A1C5AC VA: 0x1A1C5AC
	public static void DeleteContinueData() { }

	// RVA: 0x1A1C690 Offset: 0x1A1C690 VA: 0x1A1C690
	public static void InitLoad() { }

	// RVA: 0x1A1C784 Offset: 0x1A1C784 VA: 0x1A1C784
	public List<SvtEqCombineListViewObject> get_ObjectList() { }

	// RVA: 0x1A1C950 Offset: 0x1A1C950 VA: 0x1A1C950
	public List<SvtEqCombineListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1A1CBB0 Offset: 0x1A1CBB0 VA: 0x1A1CBB0
	public void CreateList(SvtEqCombineListViewItem.Type type, SvtEqCombineListViewManager.ModeKind modeKind, EventUpValSetupInfo setupInfo, EventUpValSetupInfo finishSetupInfo) { }

	// RVA: 0x1A1E598 Offset: 0x1A1E598 VA: 0x1A1E598
	private void SetStatusKind(SvtEqCombineListViewManager.ModeKind modeKind) { }

	// RVA: 0x1A1EA5C Offset: 0x1A1EA5C VA: 0x1A1EA5C
	private int GetCombineInfoMsgLbFontSize() { }

	// RVA: 0x1A1D0B0 Offset: 0x1A1D0B0 VA: 0x1A1D0B0
	private void SetDispActive(bool isShow) { }

	// RVA: 0x1A1D828 Offset: 0x1A1D828 VA: 0x1A1D828
	private void SetBtnEnable(bool isEnable) { }

	// RVA: 0x1A1EA8C Offset: 0x1A1EA8C VA: 0x1A1EA8C
	private void SetReleaseBtnEnable(bool isEnable) { }

	// RVA: 0x1A1D90C Offset: 0x1A1D90C VA: 0x1A1D90C
	private void SetServantList(SvtEqCombineListViewItem.Type type, EventUpValSetupInfo setupInfo, EventUpValSetupInfo finishSetupInfo) { }

	// RVA: 0x1A1F79C Offset: 0x1A1F79C VA: 0x1A1F79C
	private void SetMaterialSvtInfo() { }

	// RVA: 0x1A1FB00 Offset: 0x1A1FB00 VA: 0x1A1FB00
	private int CheckCompareQp(int nowCombineQp) { }

	// RVA: 0x1A1EB6C Offset: 0x1A1EB6C VA: 0x1A1EB6C
	private void RefrashListDisp() { }

	// RVA: 0x1A1FE18 Offset: 0x1A1FE18 VA: 0x1A1FE18
	private void CheckDragMax(out bool isMaxLvSelected) { }

	// RVA: 0x1A1FCB4 Offset: 0x1A1FCB4 VA: 0x1A1FCB4
	private bool CheckIncrementLv(ref int checkLv, ref int increLv, int totalExp) { }

	// RVA: 0x1A203B8 Offset: 0x1A203B8 VA: 0x1A203B8
	public void DestroyList() { }

	// RVA: 0x1A20400 Offset: 0x1A20400 VA: 0x1A20400
	public void SetSelectBaseSvtData(UserServantEntity resData) { }

	// RVA: 0x1A20408 Offset: 0x1A20408 VA: 0x1A20408
	public UserServantEntity GetSelectBaseSvtData() { }

	// RVA: 0x1A20520 Offset: 0x1A20520 VA: 0x1A20520
	public int GetBaseCollectionLv() { }

	// RVA: 0x1A20670 Offset: 0x1A20670 VA: 0x1A20670
	public SvtEqCombineListViewItem GetItem(int index) { }

	// RVA: 0x1A20758 Offset: 0x1A20758 VA: 0x1A20758
	public void ModifyItem(long usrSvtId) { }

	// RVA: 0x1A20B28 Offset: 0x1A20B28 VA: 0x1A20B28
	private void ModifyLockItem(long usrSvtId, bool isInit, bool isIconSizeChange = False) { }

	// RVA: 0x1A20F2C Offset: 0x1A20F2C VA: 0x1A20F2C
	private void ModifyLockItem(SvtEqCombineListViewItem servantItem, long usrSvtId, bool isInit, bool isIconSizeChange = False) { }

	// RVA: 0x1A2117C Offset: 0x1A2117C VA: 0x1A2117C
	private void ModifyList(bool isIconSizeChange = False) { }

	// RVA: 0x1A21B44 Offset: 0x1A21B44 VA: 0x1A21B44 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1A21C48 Offset: 0x1A21C48 VA: 0x1A21C48
	public void SetMode(SvtEqCombineListViewManager.InitMode mode, SvtEqCombineListViewManager.CallbackFunc callback) { }

	// RVA: 0x1A22164 Offset: 0x1A22164 VA: 0x1A22164
	public void SetMode(SvtEqCombineListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1A21C50 Offset: 0x1A21C50 VA: 0x1A21C50
	public void SetMode(SvtEqCombineListViewManager.InitMode mode) { }

	// RVA: 0x1A22364 Offset: 0x1A22364 VA: 0x1A22364
	protected void RequestListObject(SvtEqCombineListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1A2216C Offset: 0x1A2216C VA: 0x1A2216C
	protected void RequestListObject(SvtEqCombineListViewObject.InitMode mode) { }

	// RVA: 0x1A22570 Offset: 0x1A22570 VA: 0x1A22570
	protected void OnMoveEnd() { }

	// RVA: 0x1A22658 Offset: 0x1A22658 VA: 0x1A22658
	public void OnClickDecide() { }

	// RVA: 0x1A227F0 Offset: 0x1A227F0 VA: 0x1A227F0
	private bool CheckMaterialEquipped() { }

	// RVA: 0x1A22984 Offset: 0x1A22984 VA: 0x1A22984
	private List<SvtEqCombineListViewItem> GetSelectedMaterialList() { }

	// RVA: 0x1A22CD8 Offset: 0x1A22CD8 VA: 0x1A22CD8
	private void SetSelectedMaterialInfo() { }

	// RVA: 0x1A23298 Offset: 0x1A23298 VA: 0x1A23298
	private void CloseServantCheckEquipDialog(bool isDecide) { }

	// RVA: 0x1A22F50 Offset: 0x1A22F50 VA: 0x1A22F50
	private void SetSelectMaterialList(List<SvtEqCombineListViewItem> selectedItems) { }

	// RVA: 0x1A23310 Offset: 0x1A23310 VA: 0x1A23310
	public SetCombineData GetSelectCombineData() { }

	// RVA: 0x1A23318 Offset: 0x1A23318 VA: 0x1A23318
	public void SetSelectedSvtList() { }

	// RVA: 0x1A23328 Offset: 0x1A23328 VA: 0x1A23328
	public void ClearSelectedSvtList() { }

	// RVA: 0x1A23388 Offset: 0x1A23388 VA: 0x1A23388
	public void OnClickReleaseAll() { }

	// RVA: 0x1A233F8 Offset: 0x1A233F8 VA: 0x1A233F8
	public void ReleaseAll() { }

	// RVA: 0x1A23638 Offset: 0x1A23638 VA: 0x1A23638
	public void ResetInit() { }

	// RVA: 0x1A237D4 Offset: 0x1A237D4 VA: 0x1A237D4
	protected void OnClickSelectBase(ListViewObject obj) { }

	// RVA: 0x1A23A8C Offset: 0x1A23A8C VA: 0x1A23A8C
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x1A23A90 Offset: 0x1A23A90 VA: 0x1A23A90
	protected void OnClickSelectMaterial(ListViewObject obj) { }

	// RVA: 0x1A23DBC Offset: 0x1A23DBC VA: 0x1A23DBC
	public void OnClickLockModeItem(ListViewObject obj) { }

	// RVA: 0x1A23F80 Offset: 0x1A23F80 VA: 0x1A23F80
	public bool IsDragEnable(SvtEqCombineListViewItem item) { }

	// RVA: 0x1A23D3C Offset: 0x1A23D3C VA: 0x1A23D3C
	public bool IsSelectEnable(SvtEqCombineListViewItem item, int addSum = 0, bool isDrag = False) { }

	// RVA: 0x1A24000 Offset: 0x1A24000 VA: 0x1A24000
	protected void OnLongPushListView(ListViewItem item) { }

	// RVA: 0x1A242AC Offset: 0x1A242AC VA: 0x1A242AC
	public UserServantEntity GetSelectUsrSvtEntity() { }

	// RVA: 0x1A242B4 Offset: 0x1A242B4 VA: 0x1A242B4
	public bool CheckIsSelectMaterial() { }

	// RVA: 0x1A242BC Offset: 0x1A242BC VA: 0x1A242BC
	public bool CheckIsMaterialSelectSvt(long usrSvtId) { }

	// RVA: 0x1A2441C Offset: 0x1A2441C VA: 0x1A2441C
	public void OnClickFilterKind() { }

	// RVA: 0x1A24514 Offset: 0x1A24514 VA: 0x1A24514
	public void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x1A245E0 Offset: 0x1A245E0 VA: 0x1A245E0
	protected void EndCloseSelectFilterKind() { }

	// RVA: 0x1A1FA6C Offset: 0x1A1FA6C VA: 0x1A1FA6C
	private void SetFilterButtonImage() { }

	// RVA: 0x1A245E4 Offset: 0x1A245E4 VA: 0x1A245E4
	public void OnClickBonusFilterKind() { }

	// RVA: 0x1A246C4 Offset: 0x1A246C4 VA: 0x1A246C4
	public void OnClickFilter2Kind() { }

	// RVA: 0x1A247E4 Offset: 0x1A247E4 VA: 0x1A247E4
	public void OnClickSortKind() { }

	// RVA: 0x1A248F0 Offset: 0x1A248F0 VA: 0x1A248F0
	protected void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x1A24980 Offset: 0x1A24980 VA: 0x1A24980
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x1A24A70 Offset: 0x1A24A70 VA: 0x1A24A70 Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x1A1A228 Offset: 0x1A1A228 VA: 0x1A1A228
	public long GetAmountSortValue(int svtId) { }

	// RVA: 0x1A24DEC Offset: 0x1A24DEC VA: 0x1A24DEC
	public void OnClickScaleChange() { }

	// RVA: 0x1A24F40 Offset: 0x1A24F40 VA: 0x1A24F40
	private bool GetSwapLockList(out long[] lockList, out long[] unlockList) { }

	// RVA: 0x1A2526C Offset: 0x1A2526C VA: 0x1A2526C
