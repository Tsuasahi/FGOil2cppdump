	// RVA: 0x1088DB0 Offset: 0x1088DB0 VA: 0x1088DB0
	public void .ctor() { }

	// RVA: 0x1088E18 Offset: 0x1088E18 VA: 0x1088E18
	protected void add_callbackFunc(TakeoverDecideMenu.CallbackFunc value) { }

	// RVA: 0x1088F04 Offset: 0x1088F04 VA: 0x1088F04
	protected void remove_callbackFunc(TakeoverDecideMenu.CallbackFunc value) { }

	// RVA: 0x1088FF0 Offset: 0x1088FF0 VA: 0x1088FF0
	public void Init() { }

	// RVA: 0x108916C Offset: 0x108916C VA: 0x108916C
	public void Open(string userName, TakeoverDecideMenu.CallbackFunc callback) { }

	// RVA: 0x10893BC Offset: 0x10893BC VA: 0x10893BC
	protected void EndOpen() { }

	// RVA: 0x10893C8 Offset: 0x10893C8 VA: 0x10893C8
	public void Close() { }

	// RVA: 0x10893D0 Offset: 0x10893D0 VA: 0x10893D0
	public void Close(Action callback) { }

	// RVA: 0x1089460 Offset: 0x1089460 VA: 0x1089460
	protected void EndClose() { }

	// RVA: 0x108949C Offset: 0x108949C VA: 0x108949C
	protected void Callback(bool result) { }

	// RVA: 0x10896E8 Offset: 0x10896E8 VA: 0x10896E8
	public void OnClickClose() { }

	// RVA: 0x1089788 Offset: 0x1089788 VA: 0x1089788 Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
protected enum TakeoverDecideMenu.State // TypeDefIndex: 11708
{
	// Fields
	public int value__; // 0x0
	public const TakeoverDecideMenu.State INIT = 0;
	public const TakeoverDecideMenu.State OPEN = 1;
	public const TakeoverDecideMenu.State INPUT = 2;
	public const TakeoverDecideMenu.State SELECTED = 3;
	public const TakeoverDecideMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class TakeoverDecideMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 11709
{
	// Methods

	// RVA: 0x10897D0 Offset: 0x10897D0 VA: 0x10897D0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x10894BC Offset: 0x10894BC VA: 0x10894BC Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x10897E0 Offset: 0x10897E0 VA: 0x10897E0 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x1089870 Offset: 0x1089870 VA: 0x1089870 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class TermsOfUseMenu : BaseDialog // TypeDefIndex: 11710
{
	// Fields
	protected static readonly string SAVE_KEY; // 0x0
	protected static readonly string SAVE_DEFAULT_STR; // 0x8
	[SerializeField] // RVA: 0xC80FE4 Offset: 0xC80FE4 VA: 0xC80FE4
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC80FF4 Offset: 0xC80FF4 VA: 0xC80FF4
	protected UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC81004 Offset: 0xC81004 VA: 0xC81004
	protected UILabel showLabel; // 0x68
	[SerializeField] // RVA: 0xC81014 Offset: 0xC81014 VA: 0xC81014
	protected UILabel decideLabel; // 0x70
	[SerializeField] // RVA: 0xC81024 Offset: 0xC81024 VA: 0xC81024
	protected UILabel cancelLabel; // 0x78
	protected TermsOfUseMenu.State state; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC81034 Offset: 0xC81034 VA: 0xC81034
	[DebuggerBrowsableAttribute] // RVA: 0xC81034 Offset: 0xC81034 VA: 0xC81034
	private TermsOfUseMenu.CallbackFunc callbackFunc; // 0x88
	protected Action closeCallbackFunc; // 0x90

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0xEB6BFC Offset: 0xEB6BFC VA: 0xEB6BFC
	public void .ctor() { }

	// RVA: 0xEB6C64 Offset: 0xEB6C64 VA: 0xEB6C64
	protected void add_callbackFunc(TermsOfUseMenu.CallbackFunc value) { }

	// RVA: 0xEB6D50 Offset: 0xEB6D50 VA: 0xEB6D50
	protected void remove_callbackFunc(TermsOfUseMenu.CallbackFunc value) { }

	// RVA: 0xEB6E3C Offset: 0xEB6E3C VA: 0xEB6E3C
	public bool IsConcent() { }

	// RVA: 0xEB6F50 Offset: 0xEB6F50 VA: 0xEB6F50
	public bool IsConcentFirst() { }

	// RVA: 0xEB6A08 Offset: 0xEB6A08 VA: 0xEB6A08
	public static void Save() { }

	// RVA: 0xEB7040 Offset: 0xEB7040 VA: 0xEB7040
	public void Init() { }

	// RVA: 0xEB7164 Offset: 0xEB7164 VA: 0xEB7164
	public void Open(TermsOfUseMenu.CallbackFunc callback) { }

	// RVA: 0xEB73A4 Offset: 0xEB73A4 VA: 0xEB73A4
	protected void EndOpen() { }

	// RVA: 0xEB73B0 Offset: 0xEB73B0 VA: 0xEB73B0
	public void Close() { }

	// RVA: 0xEB73B8 Offset: 0xEB73B8 VA: 0xEB73B8
	public void Close(Action callback) { }

	// RVA: 0xEB7448 Offset: 0xEB7448 VA: 0xEB7448
	protected void EndClose() { }

	// RVA: 0xEB7484 Offset: 0xEB7484 VA: 0xEB7484
	protected void Callback(bool result) { }

	// RVA: 0xEB76D0 Offset: 0xEB76D0 VA: 0xEB76D0
	public void OnClickShow() { }

	// RVA: 0xEB782C Offset: 0xEB782C VA: 0xEB782C
	protected void OnEndShowWebView() { }

	// RVA: 0xEB7830 Offset: 0xEB7830 VA: 0xEB7830
	public void OnClickDecide() { }

	// RVA: 0xEB78F4 Offset: 0xEB78F4 VA: 0xEB78F4
	public void OnClickCancel() { }

	// RVA: 0xEB7994 Offset: 0xEB7994 VA: 0xEB7994 Slot: 6
	protected override string get_closeBtnPath() { }

	// RVA: 0xEB79DC Offset: 0xEB79DC VA: 0xEB79DC
	private static void .cctor() { }
}

// Namespace: 
protected enum TermsOfUseMenu.State // TypeDefIndex: 11711
{
	// Fields
	public int value__; // 0x0
	public const TermsOfUseMenu.State INIT = 0;
	public const TermsOfUseMenu.State OPEN = 1;
	public const TermsOfUseMenu.State INPUT = 2;
	public const TermsOfUseMenu.State SELECTED = 3;
	public const TermsOfUseMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class TermsOfUseMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 11712
{
	// Methods

	// RVA: 0xEB7A50 Offset: 0xEB7A50 VA: 0xEB7A50
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xEB74A4 Offset: 0xEB74A4 VA: 0xEB74A4 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0xEB7A60 Offset: 0xEB7A60 VA: 0xEB7A60 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0xEB7AF0 Offset: 0xEB7AF0 VA: 0xEB7AF0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class TitleBgEffectComponent : MonoBehaviour // TypeDefIndex: 11713
{
	// Fields
	[SerializeField] // RVA: 0xC81070 Offset: 0xC81070 VA: 0xC81070
	protected MeshRenderer mesh; // 0x18
	[SerializeField] // RVA: 0xC81080 Offset: 0xC81080 VA: 0xC81080
	protected ParticleSystemRenderer particle; // 0x20
	[SerializeField] // RVA: 0xC81090 Offset: 0xC81090 VA: 0xC81090
	protected Camera targetCamera; // 0x28

	// Methods

	// RVA: 0xEB9C6C Offset: 0xEB9C6C VA: 0xEB9C6C
	public void .ctor() { }

	// RVA: 0xEB9C74 Offset: 0xEB9C74 VA: 0xEB9C74
	public void Release() { }
}

// Namespace: 
public class TitleEffect : MonoBehaviour // TypeDefIndex: 11714
{
	// Fields
	public ParticleSystem titlePsLeft; // 0x18
	public ParticleSystem titlePsRight; // 0x20

	// Methods

	// RVA: 0xEB9E98 Offset: 0xEB9E98 VA: 0xEB9E98
	public void .ctor() { }

	// RVA: 0xEB9EA0 Offset: 0xEB9EA0 VA: 0xEB9EA0
	private void Start() { }
}

// Namespace: 
public class TitleIlluminationComponent : MonoBehaviour // TypeDefIndex: 11715
{
	// Fields
	public int IlluminationX; // 0x18
	public int IlluminationY; // 0x1C
	public float lifetime; // 0x20
	public float lifetimeMax; // 0x24
	protected TitleIlluminationManager manager; // 0x28

	// Methods

	// RVA: 0xEB9EF0 Offset: 0xEB9EF0 VA: 0xEB9EF0
	public void .ctor() { }

	// RVA: 0xEB9EF8 Offset: 0xEB9EF8 VA: 0xEB9EF8
	public void Setup(int x, int y, int sz, float lifetime, TitleIlluminationManager manager) { }

	// RVA: 0xEBA0A0 Offset: 0xEBA0A0 VA: 0xEBA0A0
	private void Start() { }

	// RVA: 0xEBA0A4 Offset: 0xEBA0A4 VA: 0xEBA0A4
	private void Update() { }
}

// Namespace: 
public class TitleIlluminationManager : MonoBehaviour // TypeDefIndex: 11716
{
	// Fields
	[SerializeField] // RVA: 0xC810A0 Offset: 0xC810A0 VA: 0xC810A0
	protected int IlluminationCountMax; // 0x18
	protected int IlluminationCount; // 0x1C
	[SerializeField] // RVA: 0xC810B0 Offset: 0xC810B0 VA: 0xC810B0
	protected int[] IlluminationPopFrames; // 0x20
	[SerializeField] // RVA: 0xC810C0 Offset: 0xC810C0 VA: 0xC810C0
	protected int[] IlluminationPopProb; // 0x28
	[SerializeField] // RVA: 0xC810D0 Offset: 0xC810D0 VA: 0xC810D0
	protected GameObject IlluminationPrefab; // 0x30
	[SerializeField] // RVA: 0xC810E0 Offset: 0xC810E0 VA: 0xC810E0
	protected UIPanel TargetPanel; // 0x38
	[SerializeField] // RVA: 0xC810F0 Offset: 0xC810F0 VA: 0xC810F0
	protected List<GameObject> IlluminationPool; // 0x40
	[SerializeField] // RVA: 0xC81100 Offset: 0xC81100 VA: 0xC81100
	protected List<GameObject> IlluminationDisp; // 0x48
	[SerializeField] // RVA: 0xC81110 Offset: 0xC81110 VA: 0xC81110
	protected static readonly int IlluminationPoolCount; // 0x0
	[SerializeField] // RVA: 0xC81120 Offset: 0xC81120 VA: 0xC81120
	protected float MoveSpeed; // 0x50
	[SerializeField] // RVA: 0xC81130 Offset: 0xC81130 VA: 0xC81130
	protected float FadeSpeed; // 0x54
	protected static readonly int IlluminationWidth; // 0x4
	protected static readonly int IlluminationHeight; // 0x8
	protected static readonly int IlluminationSize; // 0xC
	protected bool Spawn; // 0x58
	protected float PopTime; // 0x5C
	protected TitleIlluminationManager.IlluminationInfo[] IlluminationObjects; // 0x60
	private static int[,,] DirTable; // 0x10

	// Methods

	// RVA: 0xEBA2EC Offset: 0xEBA2EC VA: 0xEBA2EC
	public void .ctor() { }

	// RVA: 0xEBA30C Offset: 0xEBA30C VA: 0xEBA30C
	public void StartIllumination() { }

	// RVA: 0xEBA334 Offset: 0xEBA334 VA: 0xEBA334
	public void Initialize() { }

	// RVA: 0xEBA1E8 Offset: 0xEBA1E8 VA: 0xEBA1E8
	public void ReturnIllumination(TitleIlluminationComponent obj) { }

	// RVA: 0xEBA764 Offset: 0xEBA764 VA: 0xEBA764
	public void StartEffect() { }

	// RVA: 0xEBA778 Offset: 0xEBA778 VA: 0xEBA778
	protected void CreateIllumination() { }

	// RVA: 0xEBA918 Offset: 0xEBA918 VA: 0xEBA918
	protected void SpawnIllumination(int x, int y) { }

	// RVA: 0xEBAB1C Offset: 0xEBAB1C VA: 0xEBAB1C
	protected void UpdateIllumination(float delta) { }

	// RVA: 0xEBAEE4 Offset: 0xEBAEE4 VA: 0xEBAEE4
	private void Update() { }

	// RVA: 0xEBB028 Offset: 0xEBB028 VA: 0xEBB028
	private void OnDestroy() { }

	// RVA: 0xEBB030 Offset: 0xEBB030 VA: 0xEBB030
	private static void .cctor() { }
}

// Namespace: 
protected class TitleIlluminationManager.IlluminationInfo // TypeDefIndex: 11717
{
	// Fields
	public int x; // 0x10
	public int y; // 0x14
	public int prevX; // 0x18
	public int prevY; // 0x1C
	public int restCount; // 0x20
	public float moveTime; // 0x24
	public bool exists; // 0x28

	// Methods

	// RVA: 0xEBA770 Offset: 0xEBA770 VA: 0xEBA770
	public void .ctor() { }
}

// Namespace: 
public class WarBoardBackgroundComponent : MonoBehaviour // TypeDefIndex: 11718
{
	// Fields
	[SerializeField] // RVA: 0xC81140 Offset: 0xC81140 VA: 0xC81140
	private UITexture boardBg; // 0x18
	[SerializeField] // RVA: 0xC81150 Offset: 0xC81150 VA: 0xC81150
	private UISprite maskSprite; // 0x20

	// Properties
	public UITexture BoardBackground { get; }

	// Methods

	// RVA: 0x139EE0C Offset: 0x139EE0C VA: 0x139EE0C
	public void .ctor() { }

	// RVA: 0x139EE14 Offset: 0x139EE14 VA: 0x139EE14
	public UITexture get_BoardBackground() { }

	// RVA: 0x139EE1C Offset: 0x139EE1C VA: 0x139EE1C
	public void ChangeColorDarkness(bool immediate = False) { }

	// RVA: 0x139EFA4 Offset: 0x139EFA4 VA: 0x139EFA4
	public void ChangeColorNormal(bool immediate = False) { }

	// RVA: 0x139EE28 Offset: 0x139EE28 VA: 0x139EE28
	private void ChangeMaskSpriteAlpha(float alpha, bool immediate) { }
}

// Namespace: 
public class WarBoardBreakPointComponent : MonoBehaviour // TypeDefIndex: 11719
{
	// Fields
	[SerializeField] // RVA: 0xC81160 Offset: 0xC81160 VA: 0xC81160
	private UISprite activeObject; // 0x18
	[SerializeField] // RVA: 0xC81170 Offset: 0xC81170 VA: 0xC81170
	private UISprite deactiveObject; // 0x20
	[SerializeField] // RVA: 0xC81180 Offset: 0xC81180 VA: 0xC81180
	private UISprite baseObject; // 0x28
	[SerializeField] // RVA: 0xC81190 Offset: 0xC81190 VA: 0xC81190
	public float maxSpacing; // 0x30
	[SerializeField] // RVA: 0xC811A0 Offset: 0xC811A0 VA: 0xC811A0
	private bool startState; // 0x34
	private int objectColorNumber; // 0x38
	private bool isMaster; // 0x3C
	[CompilerGeneratedAttribute] // RVA: 0xC811B0 Offset: 0xC811B0 VA: 0xC811B0
	[DebuggerBrowsableAttribute] // RVA: 0xC811B0 Offset: 0xC811B0 VA: 0xC811B0
	private bool <isActive>k__BackingField; // 0x3D
	private static readonly string BreakPointOnImageName; // 0x0
	private static readonly string BreakPointOffImageName; // 0x8
	private static readonly string BreakPointEffectName; // 0x10
	private static readonly string MasterPointOnImageName; // 0x18
	private static readonly string MasterPointOffImageName; // 0x20
	private static readonly string MasterPointEffectName; // 0x28

	// Properties
	public bool isActive { get; set; }

	// Methods

	// RVA: 0x13A2EFC Offset: 0x13A2EFC VA: 0x13A2EFC
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD5280 Offset: 0xCD5280 VA: 0xCD5280
	// RVA: 0x13A2F04 Offset: 0x13A2F04 VA: 0x13A2F04
	public bool get_isActive() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD5290 Offset: 0xCD5290 VA: 0xCD5290
	// RVA: 0x13A2F0C Offset: 0x13A2F0C VA: 0x13A2F0C
	private void set_isActive(bool value) { }

	// RVA: 0x13A2F18 Offset: 0x13A2F18 VA: 0x13A2F18
	public void Initialize(int depth, int number, bool isMaster) { }

	// RVA: 0x13A3414 Offset: 0x13A3414 VA: 0x13A3414
	public void OnBreak(List<WarBoardTaskBase> taskList) { }

	// RVA: 0x13A32D0 Offset: 0x13A32D0 VA: 0x13A32D0
	public void SetActive(bool active, bool force = False) { }

	// RVA: 0x13A3C00 Offset: 0x13A3C00 VA: 0x13A3C00
	public void SetBreakPointFadeOut(float duration) { }

	// RVA: 0x13A3D24 Offset: 0x13A3D24 VA: 0x13A3D24
	public void SetBreakPointFadeIn(float duration) { }

	// RVA: 0x13A3E48 Offset: 0x13A3E48 VA: 0x13A3E48
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD52A0 Offset: 0xCD52A0 VA: 0xCD52A0
	// RVA: 0x13A3F0C Offset: 0x13A3F0C VA: 0x13A3F0C
	private void <OnBreak>m__0() { }
}

// Namespace: 
public class WarBoardBreakPointEffectComponent : MonoBehaviour // TypeDefIndex: 11720
{
	// Fields
	private WarBoardBreakPointComponent parentComponent; // 0x18

	// Methods

	// RVA: 0x13A3F18 Offset: 0x13A3F18 VA: 0x13A3F18
	public void .ctor() { }

	// RVA: 0x13A38D8 Offset: 0x13A38D8 VA: 0x13A38D8
	public void Initialize(WarBoardBreakPointComponent parentComponent) { }

	// RVA: 0x13A3F20 Offset: 0x13A3F20 VA: 0x13A3F20
	public void SetBreakPointFadeOut(float duration) { }

	// RVA: 0x13A3FCC Offset: 0x13A3FCC VA: 0x13A3FCC
	public void SetBreakPointFadeIn(float duration) { }

	// RVA: 0x13A4078 Offset: 0x13A4078 VA: 0x13A4078
	public void SetBreakPointActive(bool active) { }
}

// Namespace: 
public class WarBoardEffectComponent : MonoBehaviour // TypeDefIndex: 11721
{
	// Fields
	[SerializeField] // RVA: 0xC811EC Offset: 0xC811EC VA: 0xC811EC
	private UISprite effectIcon; // 0x18
	[SerializeField] // RVA: 0xC811FC Offset: 0xC811FC VA: 0xC811FC
	private UICommonButton button; // 0x20
	private WarBoardEffectData effectData; // 0x28
	private bool isSelectable; // 0x30
	protected UIWidget[] uIWidgets; // 0x38

	// Methods

	// RVA: 0x13AD408 Offset: 0x13AD408 VA: 0x13AD408
	public void .ctor() { }

	// RVA: 0x13AD410 Offset: 0x13AD410 VA: 0x13AD410
	public void Initialize(WarBoardEffectData data, UIAtlas itemIconAtlas) { }

	// RVA: 0x13AD690 Offset: 0x13AD690 VA: 0x13AD690
	protected void SetButtonTweenTarget(Transform[] parents) { }

	// RVA: 0x13AD8CC Offset: 0x13AD8CC VA: 0x13AD8CC
	public void SetTouchEnable(bool enable) { }

	// RVA: 0x13AD980 Offset: 0x13AD980 VA: 0x13AD980
	public void OnClick() { }

	// RVA: 0x13ADB78 Offset: 0x13ADB78 VA: 0x13ADB78
	public void OnLongClick() { }

	// RVA: 0x13ADC98 Offset: 0x13ADC98 VA: 0x13ADC98 Slot: 4
	public virtual void Selectable() { }

	// RVA: 0x13ADCA4 Offset: 0x13ADCA4 VA: 0x13ADCA4 Slot: 5
	public virtual void Unselectable() { }

	// RVA: 0x13ADCAC Offset: 0x13ADCAC VA: 0x13ADCAC
	protected void WidgetDepthIncrement(int value) { }
}

// Namespace: 
public class WarBoardItemComponent : MonoBehaviour // TypeDefIndex: 11722
{
	// Fields
	[SerializeField] // RVA: 0xC8120C Offset: 0xC8120C VA: 0xC8120C
	private UISprite itemIcon; // 0x18
	[SerializeField] // RVA: 0xC8121C Offset: 0xC8121C VA: 0xC8121C
	private UICommonButton button; // 0x20
	private WarBoardItemData itemData; // 0x28
	private bool isSelectable; // 0x30
	protected UIWidget[] uIWidgets; // 0x38

	// Methods

	// RVA: 0x134141C Offset: 0x134141C VA: 0x134141C
	public void .ctor() { }

	// RVA: 0x1341424 Offset: 0x1341424 VA: 0x1341424
	public void Initialize(WarBoardItemData data, UIAtlas itemIconAtlas) { }

	// RVA: 0x13417C0 Offset: 0x13417C0 VA: 0x13417C0
	protected void SetButtonTweenTarget(Transform[] parents) { }

	// RVA: 0x1341A1C Offset: 0x1341A1C VA: 0x1341A1C
	public void SetTouchEnable(bool enable) { }

	// RVA: 0x1341AD0 Offset: 0x1341AD0 VA: 0x1341AD0
	public void OnClick() { }

	// RVA: 0x134277C Offset: 0x134277C VA: 0x134277C
	public void OnLongClick() { }

	// RVA: 0x13428C8 Offset: 0x13428C8 VA: 0x13428C8 Slot: 4
	public virtual void Selectable() { }

	// RVA: 0x134290C Offset: 0x134290C VA: 0x134290C Slot: 5
	public virtual void Unselectable() { }

	// RVA: 0x134294C Offset: 0x134294C VA: 0x134294C
	public void OnUse(int squareIndex) { }

	// RVA: 0x1342CC8 Offset: 0x1342CC8 VA: 0x1342CC8
	public void OnGet() { }

	// RVA: 0x1342EB8 Offset: 0x1342EB8 VA: 0x1342EB8
	private void ItemGetEffectEndCallback() { }

	// RVA: 0x1342EF0 Offset: 0x1342EF0 VA: 0x1342EF0
	protected void WidgetDepthIncrement(int value) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46614 Offset: 0xC46614 VA: 0xC46614
private sealed class WarBoardItemComponent.<OnUse>c__AnonStorey0 // TypeDefIndex: 11723
{
	// Fields
	internal int squareIndex; // 0x10
	internal WarBoardItemComponent $this; // 0x18

	// Methods

	// RVA: 0x1342C44 Offset: 0x1342C44 VA: 0x1342C44
	public void .ctor() { }

	// RVA: 0x134300C Offset: 0x134300C VA: 0x134300C
	internal void <>m__0() { }
}

// Namespace: 
public class WarBoardMapCameraComponent : MonoBehaviour // TypeDefIndex: 11724
{
	// Fields
	[SerializeField] // RVA: 0xC8122C Offset: 0xC8122C VA: 0xC8122C
	public float cameraAutoMoveSec; // 0x18
	[SerializeField] // RVA: 0xC8123C Offset: 0xC8123C VA: 0xC8123C
	public float onAttackCameraMargin; // 0x1C
	[SerializeField] // RVA: 0xC8124C Offset: 0xC8124C VA: 0xC8124C
	public float AutoMoveCameraMinSize; // 0x20
	[SerializeField] // RVA: 0xC8125C Offset: 0xC8125C VA: 0xC8125C
	public float cameraYCorrectionDiff; // 0x24

	// Methods

	// RVA: 0x1688618 Offset: 0x1688618 VA: 0x1688618
	public void .ctor() { }
}

// Namespace: 
public class WarBoardMasterPieceComponent : WarBoardPieceBaseComponent // TypeDefIndex: 11725
{
	// Fields
	private static readonly string ENEMY_MASTER_FACE_ASSET_NAME; // 0x0
	private static readonly string ENEMY_MASTER_FACE_TEXTURE_NAME; // 0x8
	[SerializeField] // RVA: 0xC8126C Offset: 0xC8126C VA: 0xC8126C
	private UITexture masterIcon; // 0xA8
	private AssetData[] assetDatas; // 0xB0
	[SerializeField] // RVA: 0xC8127C Offset: 0xC8127C VA: 0xC8127C
	private int playerMasterIconSize; // 0xB8
	[SerializeField] // RVA: 0xC8128C Offset: 0xC8128C VA: 0xC8128C
	private Vector3 playerMasterIconAngle; // 0xBC
	[SerializeField] // RVA: 0xC8129C Offset: 0xC8129C VA: 0xC8129C
	private int enemyMasterIconSize; // 0xC8
	[SerializeField] // RVA: 0xC812AC Offset: 0xC812AC VA: 0xC812AC
	private Vector3 enemyMasterIconAngle; // 0xCC
	[SerializeField] // RVA: 0xC812BC Offset: 0xC812BC VA: 0xC812BC
	private GameObject commandSpellIconRoot; // 0xD8
	[SerializeField] // RVA: 0xC812CC Offset: 0xC812CC VA: 0xC812CC
	private CommandSpellIconComponent commandSpellIconComponent; // 0xE0

	// Methods

	// RVA: 0x1688F4C Offset: 0x1688F4C VA: 0x1688F4C
	public void .ctor() { }

	// RVA: 0x1688FCC Offset: 0x1688FCC VA: 0x1688FCC Slot: 4
	public override void Initialize(WarBoardPieceData pieceData) { }

	// RVA: 0x1689708 Offset: 0x1689708 VA: 0x1689708 Slot: 28
	public override void OnDead(List<WarBoardTaskBase> taskList) { }

	// RVA: 0x168996C Offset: 0x168996C VA: 0x168996C Slot: 12
	protected override bool ShowStatus() { }

	// RVA: 0x16896AC Offset: 0x16896AC VA: 0x16896AC
	public void SetMasterIcon() { }

	// RVA: 0x1689E08 Offset: 0x1689E08 VA: 0x1689E08
	public void SetCommandSpellRemain(int remain) { }

	// RVA: 0x1689A00 Offset: 0x1689A00 VA: 0x1689A00
	private void SetPlayerMasterIcon() { }

	// RVA: 0x1689C00 Offset: 0x1689C00 VA: 0x1689C00
	private void SetEnemyMasterIcon() { }

	// RVA: 0x1689E50 Offset: 0x1689E50 VA: 0x1689E50 Slot: 29
	protected override Vector3 GetIconPosition() { }

	// RVA: 0x1689E98 Offset: 0x1689E98 VA: 0x1689E98 Slot: 30
	protected override Vector3 GetIconLocalPosition() { }

	// RVA: 0x1689EE0 Offset: 0x1689EE0 VA: 0x1689EE0
	private void OnDestroy() { }

	// RVA: 0x1689F58 Offset: 0x1689F58 VA: 0x1689F58
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD52B0 Offset: 0xCD52B0 VA: 0xCD52B0
	// RVA: 0x1689FCC Offset: 0x1689FCC VA: 0x1689FCC
	private void <OnDead>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD52C0 Offset: 0xCD52C0 VA: 0xCD52C0
	// RVA: 0x168A004 Offset: 0x168A004 VA: 0x168A004
	private void <SetEnemyMasterIcon>m__1(AssetData asset) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46624 Offset: 0xC46624 VA: 0xC46624
private sealed class WarBoardMasterPieceComponent.<SetPlayerMasterIcon>c__AnonStorey0 // TypeDefIndex: 11726
{
	// Fields
	internal string[] loadAssets; // 0x10
	internal WarBoardMasterPieceComponent $this; // 0x18

	// Methods

	// RVA: 0x1689E40 Offset: 0x1689E40 VA: 0x1689E40
	public void .ctor() { }

	// RVA: 0x168A1C8 Offset: 0x168A1C8 VA: 0x168A1C8
	internal void <>m__0() { }
}

// Namespace: 
public class WarBoardObjectAnimationEvent : MonoBehaviour // TypeDefIndex: 11727
{
	// Fields
	private bool isInit; // 0x18
	private UIWidget myWidget; // 0x20
	private UIWidget[] children; // 0x28

	// Methods

	// RVA: 0x168A99C Offset: 0x168A99C VA: 0x168A99C
	public void .ctor() { }

	// RVA: 0x168A9A4 Offset: 0x168A9A4 VA: 0x168A9A4
	private void Init() { }

	// RVA: 0x168AA68 Offset: 0x168AA68 VA: 0x168AA68
	public void SetWidgetDepth(string nameAndDepth) { }

	// RVA: 0x168AD98 Offset: 0x168AD98 VA: 0x168AD98
	public void AllWidgetDepthIncrement(int value) { }
}

// Namespace: 
public class WarBoardPieceBaseComponent : MonoBehaviour // TypeDefIndex: 11728
{
	// Fields
	[SerializeField] // RVA: 0xC812DC Offset: 0xC812DC VA: 0xC812DC
	protected UIWidget breakPointParent; // 0x18
	[SerializeField] // RVA: 0xC812EC Offset: 0xC812EC VA: 0xC812EC
	protected GameObject breakPointPrefab; // 0x20
	[SerializeField] // RVA: 0xC812FC Offset: 0xC812FC VA: 0xC812FC
	protected UISprite frameSprite; // 0x28
	[SerializeField] // RVA: 0xC8130C Offset: 0xC8130C VA: 0xC8130C
	protected GameObject selectObject; // 0x30
	[SerializeField] // RVA: 0xC8131C Offset: 0xC8131C VA: 0xC8131C
	protected GameObject currentActionPointRoot; // 0x38
	[SerializeField] // RVA: 0xC8132C Offset: 0xC8132C VA: 0xC8132C
	protected UILabel currentActionPointLabel; // 0x40
	[SerializeField] // RVA: 0xC8133C Offset: 0xC8133C VA: 0xC8133C
	protected UICommonButton button; // 0x48
	[SerializeField] // RVA: 0xC8134C Offset: 0xC8134C VA: 0xC8134C
	protected float pixelPerSecond; // 0x50
	[SerializeField] // RVA: 0xC8135C Offset: 0xC8135C VA: 0xC8135C
	protected float lengthOnAttack; // 0x54
	[SerializeField] // RVA: 0xC8136C Offset: 0xC8136C VA: 0xC8136C
	protected float lengthOnEncount; // 0x58
	[SerializeField] // RVA: 0xC8137C Offset: 0xC8137C VA: 0xC8137C
	protected float encountCameraSize; // 0x5C
	[SerializeField] // RVA: 0xC8138C Offset: 0xC8138C VA: 0xC8138C
	protected float lengthMoveAttack; // 0x60
	[SerializeField] // RVA: 0xC8139C Offset: 0xC8139C VA: 0xC8139C
	protected UIWidget[] cannotActTurnDurk; // 0x68
	protected SimpleAnimation simpleAnimation; // 0x70
	protected WarBoardBreakPointComponent[] breakPoints; // 0x78
	protected WarBoardPieceData pieceData; // 0x80
	protected bool isSelectable; // 0x88
	protected string baseFrameName; // 0x90
	protected int dispPriotiry; // 0x98
	private const int DepthOffset = 20;
	protected UIWidget[] uiWidgets; // 0xA0
	[CompilerGeneratedAttribute] // RVA: 0xC813AC Offset: 0xC813AC VA: 0xC813AC
	private static Action<UIWidget> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC813BC Offset: 0xC813BC VA: 0xC813BC
	private static Func<UIWidget, GameObject> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC813CC Offset: 0xC813CC VA: 0xC813CC
	private static Action<UIWidget> <>f__am$cache2; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC813DC Offset: 0xC813DC VA: 0xC813DC
	private static Func<UIWidget, GameObject> <>f__am$cache3; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC813EC Offset: 0xC813EC VA: 0xC813EC
	private static Action <>f__am$cache4; // 0x20

	// Methods

	// RVA: 0x1688F60 Offset: 0x1688F60 VA: 0x1688F60
	public void .ctor() { }

	// RVA: 0x1689184 Offset: 0x1689184 VA: 0x1689184 Slot: 4
	public virtual void Initialize(WarBoardPieceData pieceData) { }

	// RVA: 0x16937F4 Offset: 0x16937F4 VA: 0x16937F4
	protected void SetButtonTweenTarget(Transform[] parents) { }

	// RVA: 0x1693C78 Offset: 0x1693C78 VA: 0x1693C78
	public void SetTouchEnable(bool enable) { }

	// RVA: 0x1693D2C Offset: 0x1693D2C VA: 0x1693D2C Slot: 5
	public virtual void ClickIcon() { }

	// RVA: 0x1694114 Offset: 0x1694114 VA: 0x1694114 Slot: 6
	public virtual void LongTapIcon() { }

	// RVA: 0x1694118 Offset: 0x1694118 VA: 0x1694118 Slot: 7
	public virtual void ShowActionCount() { }

	// RVA: 0x16941BC Offset: 0x16941BC VA: 0x16941BC Slot: 8
	public virtual void HideActionCount() { }

	// RVA: 0x169422C Offset: 0x169422C VA: 0x169422C Slot: 9
	public virtual void UpdateDisplayActionCount() { }

	// RVA: 0x16942EC Offset: 0x16942EC VA: 0x16942EC Slot: 10
	protected virtual void ActionEnableIcon() { }

	// RVA: 0x1694574 Offset: 0x1694574 VA: 0x1694574 Slot: 11
	protected virtual void ActionDisableIcon() { }

	// RVA: 0x1694840 Offset: 0x1694840 VA: 0x1694840 Slot: 12
	protected virtual bool ShowStatus() { }

	// RVA: 0x1694848 Offset: 0x1694848 VA: 0x1694848 Slot: 13
	protected virtual void HideStatus() { }

	// RVA: 0x16948AC Offset: 0x16948AC VA: 0x16948AC Slot: 14
	protected virtual void EditPiece() { }

	// RVA: 0x16948B0 Offset: 0x16948B0 VA: 0x16948B0 Slot: 15
	public virtual void ChangeStatus(bool isBreak) { }

	// RVA: 0x16948B4 Offset: 0x16948B4 VA: 0x16948B4 Slot: 16
	public virtual bool IsModifyStatus() { }

	// RVA: 0x16948BC Offset: 0x16948BC VA: 0x16948BC Slot: 17
	public virtual void ChangeCriticalStars() { }

	// RVA: 0x16948C0 Offset: 0x16948C0 VA: 0x16948C0 Slot: 18
	public virtual void Selectable() { }

	// RVA: 0x16948CC Offset: 0x16948CC VA: 0x16948CC Slot: 19
	public virtual void Unselectable() { }

	// RVA: 0x16948D4 Offset: 0x16948D4 VA: 0x16948D4 Slot: 20
	public virtual void ShowActionTarget() { }

	// RVA: 0x1694908 Offset: 0x1694908 VA: 0x1694908 Slot: 21
	public virtual void HideActionTarget() { }

	// RVA: 0x169493C Offset: 0x169493C VA: 0x169493C Slot: 22
	public virtual void OnSelect() { }

	// RVA: 0x16949D0 Offset: 0x16949D0 VA: 0x16949D0 Slot: 23
	public virtual void OnDeselect() { }

	// RVA: 0x1694A6C Offset: 0x1694A6C VA: 0x1694A6C Slot: 24
	public virtual void OnMove(int squareIndex) { }

	// RVA: 0x16951A8 Offset: 0x16951A8 VA: 0x16951A8 Slot: 25
	public virtual void OnAttack(int squareIndex) { }

	// RVA: 0x1696064 Offset: 0x1696064 VA: 0x1696064 Slot: 26
	public virtual void OnAfterAttack(int squareIndex, bool attackTreasure) { }

	// RVA: 0x1693A30 Offset: 0x1693A30 VA: 0x1693A30
	protected void WidgetDepthIncrement(int value) { }

	// RVA: 0x16965D4 Offset: 0x16965D4 VA: 0x16965D4
	protected void PlaySimpleAnimation(string animationName) { }

	// RVA: 0x1696658 Offset: 0x1696658 VA: 0x1696658
	protected void StopSimpleAnimation(string animationName) { }

	// RVA: 0x16898F4 Offset: 0x16898F4 VA: 0x16898F4
	protected WarBoardSimpleAnimationPerformance GetSimpleAnimationPerformance(string animationName) { }

	// RVA: 0x16966EC Offset: 0x16966EC VA: 0x16966EC Slot: 27
	public virtual void OnBreak(int oldBreakPoint, List<WarBoardTaskBase> taskList, int dummyPoint = -1) { }

	// RVA: 0x1696804 Offset: 0x1696804 VA: 0x1696804 Slot: 28
	public virtual void OnDead(List<WarBoardTaskBase> taskList) { }

	// RVA: 0x169683C Offset: 0x169683C VA: 0x169683C Slot: 29
	protected virtual Vector3 GetIconPosition() { }

	// RVA: 0x169689C Offset: 0x169689C VA: 0x169689C Slot: 30
	protected virtual Vector3 GetIconLocalPosition() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD52D0 Offset: 0xCD52D0 VA: 0xCD52D0
	// RVA: 0x16968FC Offset: 0x16968FC VA: 0x16968FC
	private static void <ActionEnableIcon>m__0(UIWidget x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD52E0 Offset: 0xCD52E0 VA: 0xCD52E0
	// RVA: 0x1696964 Offset: 0x1696964 VA: 0x1696964
	private static GameObject <ActionEnableIcon>m__1(UIWidget x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD52F0 Offset: 0xCD52F0 VA: 0xCD52F0
	// RVA: 0x1696990 Offset: 0x1696990 VA: 0x1696990
	private static void <ActionDisableIcon>m__2(UIWidget x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD5300 Offset: 0xCD5300 VA: 0xCD5300
	// RVA: 0x16969F8 Offset: 0x16969F8 VA: 0x16969F8
	private static GameObject <ActionDisableIcon>m__3(UIWidget x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD5310 Offset: 0xCD5310 VA: 0xCD5310
	// RVA: 0x1696A24 Offset: 0x1696A24 VA: 0x1696A24
	private static void <OnAttack>m__4() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46634 Offset: 0xC46634 VA: 0xC46634
private sealed class WarBoardPieceBaseComponent.<ActionEnableIcon>c__AnonStorey0 // TypeDefIndex: 11729
{
	// Fields
	internal GameObject[] gameObjects; // 0x10

	// Methods

	// RVA: 0x169456C Offset: 0x169456C VA: 0x169456C
	public void .ctor() { }

	// RVA: 0x1696AF0 Offset: 0x1696AF0 VA: 0x1696AF0
	internal bool <>m__0(GameObject x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46644 Offset: 0xC46644 VA: 0xC46644
private sealed class WarBoardPieceBaseComponent.<ActionDisableIcon>c__AnonStorey1 // TypeDefIndex: 11730
{
	// Fields
	internal GameObject[] gameObjects; // 0x10

	// Methods

	// RVA: 0x1694838 Offset: 0x1694838 VA: 0x1694838
	public void .ctor() { }

	// RVA: 0x1696A90 Offset: 0x1696A90 VA: 0x1696A90
	internal bool <>m__0(GameObject x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46654 Offset: 0xC46654 VA: 0xC46654
private sealed class WarBoardPieceBaseComponent.<OnMove>c__AnonStorey2 // TypeDefIndex: 11731
{
	// Fields
	internal WarBoardSquareData targetSquareData; // 0x10

	// Methods

	// RVA: 0x1695168 Offset: 0x1695168 VA: 0x1695168
	public void .ctor() { }

	// RVA: 0x1696F54 Offset: 0x1696F54 VA: 0x1696F54
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46664 Offset: 0xC46664 VA: 0xC46664
private sealed class WarBoardPieceBaseComponent.<OnAttack>c__AnonStorey3 // TypeDefIndex: 11732
{
	// Fields
	internal WarBoardSquareData targetSquareData; // 0x10
	internal WarBoardManager warBoardManager; // 0x18

	// Methods

	// RVA: 0x1695F6C Offset: 0x1695F6C VA: 0x1695F6C
	public void .ctor() { }

	// RVA: 0x1696D88 Offset: 0x1696D88 VA: 0x1696D88
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46674 Offset: 0xC46674 VA: 0xC46674
private sealed class WarBoardPieceBaseComponent.<OnAttack>c__AnonStorey4 // TypeDefIndex: 11733
{
	// Fields
	internal float prevCameraSize; // 0x10
	internal Vector2 prevCameraPos; // 0x14
	internal WarBoardPieceBaseComponent.<OnAttack>c__AnonStorey3 <>f__ref$3; // 0x20

	// Methods

	// RVA: 0x169605C Offset: 0x169605C VA: 0x169605C
	public void .ctor() { }

	// RVA: 0x1696DB8 Offset: 0x1696DB8 VA: 0x1696DB8
	internal void <>m__0() { }

	// RVA: 0x1696F14 Offset: 0x1696F14 VA: 0x1696F14
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46684 Offset: 0xC46684 VA: 0xC46684
private sealed class WarBoardPieceBaseComponent.<OnAfterAttack>c__AnonStorey5 // TypeDefIndex: 11734
{
	// Fields
	internal WarBoardManager warBoardManager; // 0x10
	internal int squareIndex; // 0x18
	internal WarBoardPieceData targetPiece; // 0x20
	internal WarBoardPieceBaseComponent $this; // 0x28

	// Methods

	// RVA: 0x16965CC Offset: 0x16965CC VA: 0x16965CC
	public void .ctor() { }

	// RVA: 0x1696B50 Offset: 0x1696B50 VA: 0x1696B50
	internal void <>m__0() { }

	// RVA: 0x1696C6C Offset: 0x1696C6C VA: 0x1696C6C
	internal bool <>m__1() { }
}

// Namespace: 
private sealed class WarBoardPieceBaseComponent.<OnAfterAttack>c__AnonStorey5.<OnAfterAttack>c__AnonStorey6 // TypeDefIndex: 11735
{
	// Fields
	internal WarBoardTreasureData treasureData; // 0x10
	internal WarBoardPieceBaseComponent.<OnAfterAttack>c__AnonStorey5 <>f__ref$5; // 0x18

	// Methods

	// RVA: 0x1696C64 Offset: 0x1696C64 VA: 0x1696C64
	public void .ctor() { }

	// RVA: 0x1696C98 Offset: 0x1696C98 VA: 0x1696C98
	internal void <>m__0() { }
}

// Namespace: 
public class WarBoardRoadComponent : MonoBehaviour // TypeDefIndex: 11736
{
	// Fields
	[SerializeField] // RVA: 0xC813FC Offset: 0xC813FC VA: 0xC813FC
	private UISprite roadImage; // 0x18
	private int squareIndex1; // 0x20
	private int squareIndex2; // 0x24

	// Methods

	// RVA: 0x1527C68 Offset: 0x1527C68 VA: 0x1527C68
	public void .ctor() { }

	// RVA: 0x1527C70 Offset: 0x1527C70 VA: 0x1527C70
