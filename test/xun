	[ExtensionAttribute] // RVA: 0xCD3198 Offset: 0xCD3198 VA: 0xCD3198
	// RVA: 0x1933938 Offset: 0x1933938 VA: 0x1933938
	public static GameObject FindDeepWithLog(GameObject self, string name, bool includeInactive = False) { }

	[ExtensionAttribute] // RVA: 0xCD31A8 Offset: 0xCD31A8 VA: 0xCD31A8
	// RVA: 0x1933940 Offset: 0x1933940 VA: 0x1933940
	public static void ResetPosition(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD31B8 Offset: 0xCD31B8 VA: 0xCD31B8
	// RVA: 0x1933A04 Offset: 0x1933A04 VA: 0x1933A04
	public static Vector3 GetPosition(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD31C8 Offset: 0xCD31C8 VA: 0xCD31C8
	// RVA: 0x1933A48 Offset: 0x1933A48 VA: 0x1933A48
	public static float GetPositionX(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD31D8 Offset: 0xCD31D8 VA: 0xCD31D8
	// RVA: 0x1933A8C Offset: 0x1933A8C VA: 0x1933A8C
	public static float GetPositionY(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD31E8 Offset: 0xCD31E8 VA: 0xCD31E8
	// RVA: 0x1933AD8 Offset: 0x1933AD8 VA: 0x1933AD8
	public static float GetPositionZ(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD31F8 Offset: 0xCD31F8 VA: 0xCD31F8
	// RVA: 0x1933B24 Offset: 0x1933B24 VA: 0x1933B24
	public static void SetPositionX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xCD3208 Offset: 0xCD3208 VA: 0xCD3208
	// RVA: 0x1933C24 Offset: 0x1933C24 VA: 0x1933C24
	public static void SetPositionY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xCD3218 Offset: 0xCD3218 VA: 0xCD3218
	// RVA: 0x1933D24 Offset: 0x1933D24 VA: 0x1933D24
	public static void SetPositionZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xCD3228 Offset: 0xCD3228 VA: 0xCD3228
	// RVA: 0x1933E24 Offset: 0x1933E24 VA: 0x1933E24
	public static void SetPosition(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xCD3238 Offset: 0xCD3238 VA: 0xCD3238
	// RVA: 0x1933E90 Offset: 0x1933E90 VA: 0x1933E90
	public static void SetPosition(GameObject self, Vector2 v) { }

	[ExtensionAttribute] // RVA: 0xCD3248 Offset: 0xCD3248 VA: 0xCD3248
	// RVA: 0x1933F58 Offset: 0x1933F58 VA: 0x1933F58
	public static void SetPosition(GameObject self, float x, float y) { }

	[ExtensionAttribute] // RVA: 0xCD3258 Offset: 0xCD3258 VA: 0xCD3258
	// RVA: 0x1934020 Offset: 0x1934020 VA: 0x1934020
	public static void SetPosition(GameObject self, float x, float y, float z) { }

	[ExtensionAttribute] // RVA: 0xCD3268 Offset: 0xCD3268 VA: 0xCD3268
	// RVA: 0x19340B8 Offset: 0x19340B8 VA: 0x19340B8
	public static void AddPositionX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xCD3278 Offset: 0xCD3278 VA: 0xCD3278
	// RVA: 0x19341F4 Offset: 0x19341F4 VA: 0x19341F4
	public static void AddPositionY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xCD3288 Offset: 0xCD3288 VA: 0xCD3288
	// RVA: 0x1934330 Offset: 0x1934330 VA: 0x1934330
	public static void AddPositionZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xCD3298 Offset: 0xCD3298 VA: 0xCD3298
	// RVA: 0x1934470 Offset: 0x1934470 VA: 0x1934470
	public static void AddPosition(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xCD32A8 Offset: 0xCD32A8 VA: 0xCD32A8
	// RVA: 0x193457C Offset: 0x193457C VA: 0x193457C
	public static void AddPosition(GameObject self, Vector2 v) { }

	[ExtensionAttribute] // RVA: 0xCD32B8 Offset: 0xCD32B8 VA: 0xCD32B8
	// RVA: 0x19346BC Offset: 0x19346BC VA: 0x19346BC
	public static void AddPosition(GameObject self, float x, float y) { }

	[ExtensionAttribute] // RVA: 0xCD32C8 Offset: 0xCD32C8 VA: 0xCD32C8
	// RVA: 0x19347FC Offset: 0x19347FC VA: 0x19347FC
	public static void AddPosition(GameObject self, float x, float y, float z) { }

	[ExtensionAttribute] // RVA: 0xCD32D8 Offset: 0xCD32D8 VA: 0xCD32D8
	// RVA: 0x193494C Offset: 0x193494C VA: 0x193494C
	public static void ResetLocalPosition(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD32E8 Offset: 0xCD32E8 VA: 0xCD32E8
	// RVA: 0x1934A10 Offset: 0x1934A10 VA: 0x1934A10
	public static Vector3 GetLocalPosition(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD32F8 Offset: 0xCD32F8 VA: 0xCD32F8
	// RVA: 0x1934A54 Offset: 0x1934A54 VA: 0x1934A54
	public static float GetLocalPositionX(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3308 Offset: 0xCD3308 VA: 0xCD3308
	// RVA: 0x1934A98 Offset: 0x1934A98 VA: 0x1934A98
	public static float GetLocalPositionY(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3318 Offset: 0xCD3318 VA: 0xCD3318
	// RVA: 0x1934AE4 Offset: 0x1934AE4 VA: 0x1934AE4
	public static float GetLocalPositionZ(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3328 Offset: 0xCD3328 VA: 0xCD3328
	// RVA: 0x1934B30 Offset: 0x1934B30 VA: 0x1934B30
	public static void SetLocalPositionX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xCD3338 Offset: 0xCD3338 VA: 0xCD3338
	// RVA: 0x1934C30 Offset: 0x1934C30 VA: 0x1934C30
	public static void SetLocalPositionY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xCD3348 Offset: 0xCD3348 VA: 0xCD3348
	// RVA: 0x1934D30 Offset: 0x1934D30 VA: 0x1934D30
	public static void SetLocalPositionZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xCD3358 Offset: 0xCD3358 VA: 0xCD3358
	// RVA: 0x1934E30 Offset: 0x1934E30 VA: 0x1934E30
	public static void SetLocalPosition(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xCD3368 Offset: 0xCD3368 VA: 0xCD3368
	// RVA: 0x1934E9C Offset: 0x1934E9C VA: 0x1934E9C
	public static void SetLocalPosition(GameObject self, Vector2 v) { }

	[ExtensionAttribute] // RVA: 0xCD3378 Offset: 0xCD3378 VA: 0xCD3378
	// RVA: 0x1934F64 Offset: 0x1934F64 VA: 0x1934F64
	public static void SetLocalPosition(GameObject self, float x, float y) { }

	[ExtensionAttribute] // RVA: 0xCD3388 Offset: 0xCD3388 VA: 0xCD3388
	// RVA: 0x193502C Offset: 0x193502C VA: 0x193502C
	public static void SetLocalPosition(GameObject self, float x, float y, float z) { }

	[ExtensionAttribute] // RVA: 0xCD3398 Offset: 0xCD3398 VA: 0xCD3398
	// RVA: 0x19350C4 Offset: 0x19350C4 VA: 0x19350C4
	public static void AddLocalPositionX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xCD33A8 Offset: 0xCD33A8 VA: 0xCD33A8
	// RVA: 0x1935200 Offset: 0x1935200 VA: 0x1935200
	public static void AddLocalPositionY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xCD33B8 Offset: 0xCD33B8 VA: 0xCD33B8
	// RVA: 0x193533C Offset: 0x193533C VA: 0x193533C
	public static void AddLocalPositionZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xCD33C8 Offset: 0xCD33C8 VA: 0xCD33C8
	// RVA: 0x193547C Offset: 0x193547C VA: 0x193547C
	public static void AddLocalPosition(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xCD33D8 Offset: 0xCD33D8 VA: 0xCD33D8
	// RVA: 0x1935588 Offset: 0x1935588 VA: 0x1935588
	public static void AddLocalPosition(GameObject self, Vector2 v) { }

	[ExtensionAttribute] // RVA: 0xCD33E8 Offset: 0xCD33E8 VA: 0xCD33E8
	// RVA: 0x19356C8 Offset: 0x19356C8 VA: 0x19356C8
	public static void AddLocalPosition(GameObject self, float x, float y) { }

	[ExtensionAttribute] // RVA: 0xCD33F8 Offset: 0xCD33F8 VA: 0xCD33F8
	// RVA: 0x1935808 Offset: 0x1935808 VA: 0x1935808
	public static void AddLocalPosition(GameObject self, float x, float y, float z) { }

	[ExtensionAttribute] // RVA: 0xCD3408 Offset: 0xCD3408 VA: 0xCD3408
	// RVA: 0x1935958 Offset: 0x1935958 VA: 0x1935958
	public static void ResetLocalScale(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3418 Offset: 0xCD3418 VA: 0xCD3418
	// RVA: 0x1935A1C Offset: 0x1935A1C VA: 0x1935A1C
	public static Vector3 GetLocalScale(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3428 Offset: 0xCD3428 VA: 0xCD3428
	// RVA: 0x1935A60 Offset: 0x1935A60 VA: 0x1935A60
	public static float GetLocalScaleX(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3438 Offset: 0xCD3438 VA: 0xCD3438
	// RVA: 0x1935AA4 Offset: 0x1935AA4 VA: 0x1935AA4
	public static float GetLocalScaleY(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3448 Offset: 0xCD3448 VA: 0xCD3448
	// RVA: 0x1935AF0 Offset: 0x1935AF0 VA: 0x1935AF0
	public static float GetLocalScaleZ(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3458 Offset: 0xCD3458 VA: 0xCD3458
	// RVA: 0x1935B3C Offset: 0x1935B3C VA: 0x1935B3C
	public static void SetLocalScaleX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xCD3468 Offset: 0xCD3468 VA: 0xCD3468
	// RVA: 0x1935C3C Offset: 0x1935C3C VA: 0x1935C3C
	public static void SetLocalScaleY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xCD3478 Offset: 0xCD3478 VA: 0xCD3478
	// RVA: 0x1935D3C Offset: 0x1935D3C VA: 0x1935D3C
	public static void SetLocalScaleZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xCD3488 Offset: 0xCD3488 VA: 0xCD3488
	// RVA: 0x1935E3C Offset: 0x1935E3C VA: 0x1935E3C
	public static void SetLocalScale(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xCD3498 Offset: 0xCD3498 VA: 0xCD3498
	// RVA: 0x1935EA8 Offset: 0x1935EA8 VA: 0x1935EA8
	public static void SetLocalScale(GameObject self, Vector2 v) { }

	[ExtensionAttribute] // RVA: 0xCD34A8 Offset: 0xCD34A8 VA: 0xCD34A8
	// RVA: 0x1935F70 Offset: 0x1935F70 VA: 0x1935F70
	public static void SetLocalScale(GameObject self, float f) { }

	[ExtensionAttribute] // RVA: 0xCD34B8 Offset: 0xCD34B8 VA: 0xCD34B8
	// RVA: 0x1935FF8 Offset: 0x1935FF8 VA: 0x1935FF8
	public static void SetLocalScale(GameObject self, float x, float y) { }

	[ExtensionAttribute] // RVA: 0xCD34C8 Offset: 0xCD34C8 VA: 0xCD34C8
	// RVA: 0x19360C0 Offset: 0x19360C0 VA: 0x19360C0
	public static void SetLocalScale(GameObject self, float x, float y, float z) { }

	[ExtensionAttribute] // RVA: 0xCD34D8 Offset: 0xCD34D8 VA: 0xCD34D8
	// RVA: 0x1936158 Offset: 0x1936158 VA: 0x1936158
	public static void AddLocalScaleX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xCD34E8 Offset: 0xCD34E8 VA: 0xCD34E8
	// RVA: 0x1936294 Offset: 0x1936294 VA: 0x1936294
	public static void AddLocalScaleY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xCD34F8 Offset: 0xCD34F8 VA: 0xCD34F8
	// RVA: 0x19363D0 Offset: 0x19363D0 VA: 0x19363D0
	public static void AddLocalScaleZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xCD3508 Offset: 0xCD3508 VA: 0xCD3508
	// RVA: 0x1936510 Offset: 0x1936510 VA: 0x1936510
	public static void AddLocalScale(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xCD3518 Offset: 0xCD3518 VA: 0xCD3518
	// RVA: 0x193661C Offset: 0x193661C VA: 0x193661C
	public static void AddLocalScale(GameObject self, Vector2 v) { }

	[ExtensionAttribute] // RVA: 0xCD3528 Offset: 0xCD3528 VA: 0xCD3528
	// RVA: 0x193675C Offset: 0x193675C VA: 0x193675C
	public static void AddLocalScale(GameObject self, float f) { }

	[ExtensionAttribute] // RVA: 0xCD3538 Offset: 0xCD3538 VA: 0xCD3538
	// RVA: 0x193689C Offset: 0x193689C VA: 0x193689C
	public static void AddLocalScale(GameObject self, float x, float y) { }

	[ExtensionAttribute] // RVA: 0xCD3548 Offset: 0xCD3548 VA: 0xCD3548
	// RVA: 0x19369DC Offset: 0x19369DC VA: 0x19369DC
	public static void AddLocalScale(GameObject self, float x, float y, float z) { }

	[ExtensionAttribute] // RVA: 0xCD3558 Offset: 0xCD3558 VA: 0xCD3558
	// RVA: 0x1936B2C Offset: 0x1936B2C VA: 0x1936B2C
	public static void ResetLocalRotation(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3568 Offset: 0xCD3568 VA: 0xCD3568
	// RVA: 0x1936BF8 Offset: 0x1936BF8 VA: 0x1936BF8
	public static void ResetEulerAngles(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3578 Offset: 0xCD3578 VA: 0xCD3578
	// RVA: 0x1936CBC Offset: 0x1936CBC VA: 0x1936CBC
	public static Vector3 GetEulerAngles(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3588 Offset: 0xCD3588 VA: 0xCD3588
	// RVA: 0x1936D00 Offset: 0x1936D00 VA: 0x1936D00
	public static float GetEulerAngleX(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3598 Offset: 0xCD3598 VA: 0xCD3598
	// RVA: 0x1936D44 Offset: 0x1936D44 VA: 0x1936D44
	public static float GetEulerAngleY(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD35A8 Offset: 0xCD35A8 VA: 0xCD35A8
	// RVA: 0x1936D90 Offset: 0x1936D90 VA: 0x1936D90
	public static float GetEulerAngleZ(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD35B8 Offset: 0xCD35B8 VA: 0xCD35B8
	// RVA: 0x1936DDC Offset: 0x1936DDC VA: 0x1936DDC
	public static void SetEulerAngles(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xCD35C8 Offset: 0xCD35C8 VA: 0xCD35C8
	// RVA: 0x1936E48 Offset: 0x1936E48 VA: 0x1936E48
	public static void SetEulerAngleX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xCD35D8 Offset: 0xCD35D8 VA: 0xCD35D8
	// RVA: 0x1936F48 Offset: 0x1936F48 VA: 0x1936F48
	public static void SetEulerAngleY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xCD35E8 Offset: 0xCD35E8 VA: 0xCD35E8
	// RVA: 0x1937048 Offset: 0x1937048 VA: 0x1937048
	public static void SetEulerAngleZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xCD35F8 Offset: 0xCD35F8 VA: 0xCD35F8
	// RVA: 0x1937148 Offset: 0x1937148 VA: 0x1937148
	public static void AddEulerAngleX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xCD3608 Offset: 0xCD3608 VA: 0xCD3608
	// RVA: 0x19371A8 Offset: 0x19371A8 VA: 0x19371A8
	public static void AddEulerAngleY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xCD3618 Offset: 0xCD3618 VA: 0xCD3618
	// RVA: 0x1937208 Offset: 0x1937208 VA: 0x1937208
	public static void AddEulerAngleZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xCD3628 Offset: 0xCD3628 VA: 0xCD3628
	// RVA: 0x1937268 Offset: 0x1937268 VA: 0x1937268
	public static void ResetLocalEulerAngles(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3638 Offset: 0xCD3638 VA: 0xCD3638
	// RVA: 0x193732C Offset: 0x193732C VA: 0x193732C
	public static Vector3 GetLocalEulerAngles(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3648 Offset: 0xCD3648 VA: 0xCD3648
	// RVA: 0x1937370 Offset: 0x1937370 VA: 0x1937370
	public static float GetLocalEulerAngleX(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3658 Offset: 0xCD3658 VA: 0xCD3658
	// RVA: 0x19373B4 Offset: 0x19373B4 VA: 0x19373B4
	public static float GetLocalEulerAngleY(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3668 Offset: 0xCD3668 VA: 0xCD3668
	// RVA: 0x1937400 Offset: 0x1937400 VA: 0x1937400
	public static float GetLocalEulerAngleZ(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3678 Offset: 0xCD3678 VA: 0xCD3678
	// RVA: 0x193744C Offset: 0x193744C VA: 0x193744C
	public static void SetLocalEulerAngle(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xCD3688 Offset: 0xCD3688 VA: 0xCD3688
	// RVA: 0x19374B8 Offset: 0x19374B8 VA: 0x19374B8
	public static void SetLocalEulerAngleX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xCD3698 Offset: 0xCD3698 VA: 0xCD3698
	// RVA: 0x19375B8 Offset: 0x19375B8 VA: 0x19375B8
	public static void SetLocalEulerAngleY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xCD36A8 Offset: 0xCD36A8 VA: 0xCD36A8
	// RVA: 0x19376B8 Offset: 0x19376B8 VA: 0x19376B8
	public static void SetLocalEulerAngleZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xCD36B8 Offset: 0xCD36B8 VA: 0xCD36B8
	// RVA: 0x19377B8 Offset: 0x19377B8 VA: 0x19377B8
	public static void AddLocalEulerAngleX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xCD36C8 Offset: 0xCD36C8 VA: 0xCD36C8
	// RVA: 0x1937818 Offset: 0x1937818 VA: 0x1937818
	public static void AddLocalEulerAngleY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xCD36D8 Offset: 0xCD36D8 VA: 0xCD36D8
	// RVA: 0x1937878 Offset: 0x1937878 VA: 0x1937878
	public static void AddLocalEulerAngleZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xCD36E8 Offset: 0xCD36E8 VA: 0xCD36E8
	// RVA: 0x19378D8 Offset: 0x19378D8 VA: 0x19378D8
	public static bool HasParent(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD36F8 Offset: 0xCD36F8 VA: 0xCD36F8
	// RVA: 0x193797C Offset: 0x193797C VA: 0x193797C
	public static Transform GetParent(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3708 Offset: 0xCD3708 VA: 0xCD3708
	// RVA: 0x19379C0 Offset: 0x19379C0 VA: 0x19379C0
	public static void SetParent(GameObject self, Component parent) { }

	[ExtensionAttribute] // RVA: 0xCD3718 Offset: 0xCD3718 VA: 0xCD3718
	// RVA: 0x1937A2C Offset: 0x1937A2C VA: 0x1937A2C
	public static void SetParent(GameObject self, GameObject parent) { }

	[ExtensionAttribute] // RVA: 0xCD3728 Offset: 0xCD3728 VA: 0xCD3728
	// RVA: 0x1937A98 Offset: 0x1937A98 VA: 0x1937A98
	public static void SafeSetParent(GameObject self, Component parent) { }

	[ExtensionAttribute] // RVA: 0xCD3738 Offset: 0xCD3738 VA: 0xCD3738
	// RVA: 0x1937AD8 Offset: 0x1937AD8 VA: 0x1937AD8
	public static void SafeSetParent(GameObject self, GameObject parent) { }

	[ExtensionAttribute] // RVA: 0xCD3748 Offset: 0xCD3748 VA: 0xCD3748
	// RVA: 0x1937CAC Offset: 0x1937CAC VA: 0x1937CAC
	public static void LookAt(GameObject self, GameObject target) { }

	[ExtensionAttribute] // RVA: 0xCD3758 Offset: 0xCD3758 VA: 0xCD3758
	// RVA: 0x1937D18 Offset: 0x1937D18 VA: 0x1937D18
	public static void LookAt(GameObject self, Transform target) { }

	[ExtensionAttribute] // RVA: 0xCD3768 Offset: 0xCD3768 VA: 0xCD3768
	// RVA: 0x1937D64 Offset: 0x1937D64 VA: 0x1937D64
	public static void LookAt(GameObject self, Vector3 worldPosition) { }

	[ExtensionAttribute] // RVA: 0xCD3778 Offset: 0xCD3778 VA: 0xCD3778
	// RVA: 0x1937DD0 Offset: 0x1937DD0 VA: 0x1937DD0
	public static void LookAt(GameObject self, GameObject target, Vector3 worldUp) { }

	[ExtensionAttribute] // RVA: 0xCD3788 Offset: 0xCD3788 VA: 0xCD3788
	// RVA: 0x1937E64 Offset: 0x1937E64 VA: 0x1937E64
	public static void LookAt(GameObject self, Transform target, Vector3 worldUp) { }

	[ExtensionAttribute] // RVA: 0xCD3798 Offset: 0xCD3798 VA: 0xCD3798
	// RVA: 0x1937ED8 Offset: 0x1937ED8 VA: 0x1937ED8
	public static void LookAt(GameObject self, Vector3 worldPosition, Vector3 worldUp) { }

	[ExtensionAttribute] // RVA: 0xCD37A8 Offset: 0xCD37A8 VA: 0xCD37A8
	// RVA: 0x1937F64 Offset: 0x1937F64 VA: 0x1937F64
	public static bool HasChild(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD37B8 Offset: 0xCD37B8 VA: 0xCD37B8
	// RVA: 0x1937FB4 Offset: 0x1937FB4 VA: 0x1937FB4
	public static Transform GetChild(GameObject self, int index) { }

	[ExtensionAttribute] // RVA: 0xCD37C8 Offset: 0xCD37C8 VA: 0xCD37C8
	// RVA: 0x1938000 Offset: 0x1938000 VA: 0x1938000
	public static GameObject GetRoot(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD37D8 Offset: 0xCD37D8 VA: 0xCD37D8
	// RVA: 0x19380D0 Offset: 0x19380D0 VA: 0x19380D0
	public static void SetLayerRecursively(GameObject self, int layer) { }

	[ExtensionAttribute] // RVA: 0xCD37E8 Offset: 0xCD37E8 VA: 0xCD37E8
	// RVA: 0x19381B0 Offset: 0x19381B0 VA: 0x19381B0
	public static void ResetTransform(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD37F8 Offset: 0xCD37F8 VA: 0xCD37F8
	// RVA: 0x19381DC Offset: 0x19381DC VA: 0x19381DC
	public static bool IsNullOrInactive(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xCD3808 Offset: 0xCD3808 VA: 0xCD3808
	// RVA: 0x1938294 Offset: 0x1938294 VA: 0x1938294
	public static bool IsNotNullOrInactive(GameObject self) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3818 Offset: 0xCD3818 VA: 0xCD3818
	// RVA: 0x19382B0 Offset: 0x19382B0 VA: 0x19382B0
	private static GameObject <GetChildren>m__0(Transform c) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC459B4 Offset: 0xC459B4 VA: 0xC459B4
private sealed class GameObjectExtensions.<GetChildren>c__AnonStorey0 // TypeDefIndex: 11043
{
	// Fields
	internal GameObject self; // 0x10

	// Methods

	// RVA: 0x1BA2DA0 Offset: 0x1BA2DA0 VA: 0x1BA2DA0
	public void .ctor() { }

	// RVA: 0x1BA2DA8 Offset: 0x1BA2DA8 VA: 0x1BA2DA8
	internal bool <>m__0(Transform c) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC459C4 Offset: 0xC459C4 VA: 0xC459C4
private sealed class GameObjectExtensions.<GetComponentsInChildrenWithoutSelf>c__AnonStorey1<T> // TypeDefIndex: 11044
{
	// Fields
	internal GameObject self; // 0x0

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226D38C Offset: 0x226D38C VA: 0x226D38C
	|-GameObjectExtensions.<GetComponentsInChildrenWithoutSelf>c__AnonStorey1<object>..ctor
	*/

	// RVA: -1 Offset: -1
	internal bool <>m__0(T c) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226D3B8 Offset: 0x226D3B8 VA: 0x226D3B8
	|-GameObjectExtensions.<GetComponentsInChildrenWithoutSelf>c__AnonStorey1<object>.<>m__0
	*/
}

// Namespace: 
public class MoveObject : MonoBehaviour // TypeDefIndex: 11045
{
	// Fields
	private bool mIsMoving; // 0x18
	private Vector3 mFrom; // 0x1C
	private Vector3 mTo; // 0x28
	private Vector3 mNow; // 0x34
	private float mStartTime; // 0x40
	private float mTime; // 0x44
	private float mDelay; // 0x48
	private Action mProcessAct; // 0x50
	private Action mEndAct; // 0x58
	private bool mIsPause; // 0x60
	private float mPauseStartTime; // 0x64
	private Easing.TYPE mEasingType; // 0x68
	private bool mIsSkip; // 0x6C

	// Properties
	public bool IsMoving { get; }

	// Methods

	// RVA: 0x1197F5C Offset: 0x1197F5C VA: 0x1197F5C
	public void .ctor() { }

	// RVA: 0x1197F64 Offset: 0x1197F64 VA: 0x1197F64
	public bool get_IsMoving() { }

	// RVA: 0x1197F6C Offset: 0x1197F6C VA: 0x1197F6C
	private void Awake() { }

	// RVA: 0x1197F78 Offset: 0x1197F78 VA: 0x1197F78
	private void Update() { }

	// RVA: 0x11980B4 Offset: 0x11980B4 VA: 0x11980B4
	public void Play(Vector3 from, Vector3 to, float sec, Action procAct, Action endAct, float delay = 0, Easing.TYPE easingType = 0) { }

	// RVA: 0x119816C Offset: 0x119816C VA: 0x119816C
	public Vector3 Now() { }

	// RVA: 0x1198178 Offset: 0x1198178 VA: 0x1198178
	public void Pause() { }

	// RVA: 0x11981B0 Offset: 0x11981B0 VA: 0x11981B0
	public void Resume() { }

	// RVA: 0x11981F4 Offset: 0x11981F4 VA: 0x11981F4
	public void Stop() { }

	// RVA: 0x11981FC Offset: 0x11981FC VA: 0x11981FC
	public void SetPause(bool isPause) { }

	// RVA: 0x1198260 Offset: 0x1198260 VA: 0x1198260
	public void Skip() { }
}

// Namespace: 
public class NoticeNumberComponent : MonoBehaviour // TypeDefIndex: 11046
{
	// Fields
	public static readonly float ALPHA_SPEED_RATE; // 0x0
	private static readonly int ALPHA_FADE_FRAME_NUM; // 0x4
	public static readonly int DISP_NUMBER_MAX; // 0x8
	[SerializeField] // RVA: 0xC7C2E0 Offset: 0xC7C2E0 VA: 0xC7C2E0
	private UILabel numberLabel; // 0x18
	private int mNumber; // 0x20
	private bool mIsActive; // 0x24
	private UIWidget mWidget; // 0x28
	private AlphaTransitionCalculator widgetAlphaCalculator; // 0x30

	// Properties
	private AlphaTransitionCalculator WidgetAlphaCalculator { get; }

	// Methods

	// RVA: 0x138BAE0 Offset: 0x138BAE0 VA: 0x138BAE0
	public void .ctor() { }

	// RVA: 0x138BAE8 Offset: 0x138BAE8 VA: 0x138BAE8
	private AlphaTransitionCalculator get_WidgetAlphaCalculator() { }

	// RVA: 0x138BBF4 Offset: 0x138BBF4 VA: 0x138BBF4
	private void Awake() { }

	// RVA: 0x138BC6C Offset: 0x138BC6C VA: 0x138BC6C
	private void Update() { }

	// RVA: 0x138BD00 Offset: 0x138BD00 VA: 0x138BD00
	public UISprite GetNumberBg() { }

	// RVA: 0x138BD68 Offset: 0x138BD68 VA: 0x138BD68
	public UILabel GetNumberLabel() { }

	// RVA: 0x138BD70 Offset: 0x138BD70 VA: 0x138BD70
	public void SetNumber(int number) { }

	// RVA: 0x138BEDC Offset: 0x138BEDC VA: 0x138BEDC
	public int GetNumber() { }

	// RVA: 0x138BEE4 Offset: 0x138BEE4 VA: 0x138BEE4
	public void SetDisp(bool is_disp) { }

	// RVA: 0x138BF34 Offset: 0x138BF34 VA: 0x138BF34
	public void SetDispForce(bool is_disp) { }

	// RVA: 0x138BB30 Offset: 0x138BB30 VA: 0x138BB30
	private AlphaTransitionCalculator CreateWidgetAlphaCalculator() { }

	// RVA: 0x138C00C Offset: 0x138C00C VA: 0x138C00C
	private static void .cctor() { }
}

// Namespace: 
public class OuterFrameController : SingletonMonoBehaviour<OuterFrameController> // TypeDefIndex: 11047
{
	// Methods

	// RVA: 0x123DB28 Offset: 0x123DB28 VA: 0x123DB28
	public void .ctor() { }

	// RVA: 0x123DB78 Offset: 0x123DB78 VA: 0x123DB78
	public void OnPressOuterFrame() { }

	// RVA: 0x123DD34 Offset: 0x123DD34 VA: 0x123DD34
	private void Start() { }

	// RVA: 0x123DDB4 Offset: 0x123DDB4 VA: 0x123DDB4
	private void Update() { }
}

// Namespace: 
public class ScreenTouchInformationComponent : MonoBehaviour // TypeDefIndex: 11048
{
	// Fields
	public const float ANIM_TIME = 2;
	[SerializeField] // RVA: 0xC7C2F0 Offset: 0xC7C2F0 VA: 0xC7C2F0
	private UISprite overSp; // 0x18
	protected Action callbackFunc; // 0x20
	private bool isOnClick; // 0x28
	private bool isExpand; // 0x29

	// Methods

	// RVA: 0x159D87C Offset: 0x159D87C VA: 0x159D87C
	public void .ctor() { }

	// RVA: 0x159D884 Offset: 0x159D884 VA: 0x159D884
	public UISprite GetOverSprite() { }

	// RVA: 0x159D88C Offset: 0x159D88C VA: 0x159D88C
	private void Awake() { }

	// RVA: 0x159D9CC Offset: 0x159D9CC VA: 0x159D9CC
	public void Setup(Action callback) { }

	// RVA: 0x159D9DC Offset: 0x159D9DC VA: 0x159D9DC
	public void OnClickDecide() { }

	// RVA: 0x159DA0C Offset: 0x159DA0C VA: 0x159DA0C
	private void Update() { }
}

// Namespace: 
public class ScrollArrowComponent : MonoBehaviour // TypeDefIndex: 11049
{
	// Fields
	public static readonly int MOVE_RANGE; // 0x0
	public static readonly float MOVE_TIME; // 0x4
	public static readonly float TGT_ALP_SPD_RATE; // 0x8
	public static readonly int ALPHA_FADE_FRAME_NUM; // 0xC
	protected static List<ScrollArrowComponent> _arrowList; // 0x10
	[SerializeField] // RVA: 0xC7C300 Offset: 0xC7C300 VA: 0xC7C300
	private ScrollArrowComponent.DirectionType directionType; // 0x18
	[SerializeField] // RVA: 0xC7C310 Offset: 0xC7C310 VA: 0xC7C310
	private int moveRange; // 0x1C
	[SerializeField] // RVA: 0xC7C320 Offset: 0xC7C320 VA: 0xC7C320
	private float moveTime; // 0x20
	private UIWidget mWidget; // 0x28
	private AlphaTransitionCalculator widgetAlphaCalculator; // 0x30

	// Properties
	private AlphaTransitionCalculator WidgetAlphaCalculator { get; }

	// Methods

	// RVA: 0x172A308 Offset: 0x172A308 VA: 0x172A308
	public void .ctor() { }

	// RVA: 0x172A38C Offset: 0x172A38C VA: 0x172A38C
	private AlphaTransitionCalculator get_WidgetAlphaCalculator() { }

	// RVA: 0x172A498 Offset: 0x172A498 VA: 0x172A498
	private void Awake() { }

	// RVA: 0x172A76C Offset: 0x172A76C VA: 0x172A76C
	private void OnDestroy() { }

	// RVA: 0x172A7F8 Offset: 0x172A7F8 VA: 0x172A7F8
	private void OnEnable() { }

	// RVA: 0x172A91C Offset: 0x172A91C VA: 0x172A91C
	private void Update() { }

	// RVA: 0x172A9F8 Offset: 0x172A9F8 VA: 0x172A9F8
	public void SetDisp(bool is_disp, bool is_force = False) { }

	// RVA: 0x172AB08 Offset: 0x172AB08 VA: 0x172AB08
	protected ScrollArrowComponent FetchActiveArrow() { }

	// RVA: 0x172A7FC Offset: 0x172A7FC VA: 0x172A7FC
	protected void SyncAnimation() { }

	// RVA: 0x172A3D4 Offset: 0x172A3D4 VA: 0x172A3D4
	private AlphaTransitionCalculator CreateWidgetAlphaCalculator() { }

	// RVA: 0x172ACD8 Offset: 0x172ACD8 VA: 0x172ACD8
	private static void .cctor() { }
}

// Namespace: 
public enum ScrollArrowComponent.DirectionType // TypeDefIndex: 11050
{
	// Fields
	public int value__; // 0x0
	public const ScrollArrowComponent.DirectionType Left = 0;
	public const ScrollArrowComponent.DirectionType Right = 1;
	public const ScrollArrowComponent.DirectionType Top = 2;
	public const ScrollArrowComponent.DirectionType Bottom = 3;
}

// Namespace: 
public class SingletonTemplate<CLASS> // TypeDefIndex: 11051
{
	// Fields
	protected static CLASS mInstance; // 0x0

	// Properties
	public static CLASS Instance { get; }

	// Methods

	// RVA: -1 Offset: -1
	protected void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21C22F8 Offset: 0x21C22F8 VA: 0x21C22F8
	|-SingletonTemplate<BoostFunctionUtility>..ctor
	|-SingletonTemplate<MissionNotifyManager>..ctor
	|-SingletonTemplate<PartyOrganizationUtility>..ctor
	|-SingletonTemplate<QuestTree>..ctor
	|-SingletonTemplate<object>..ctor
	|-SingletonTemplate<clsQuestCheck>..ctor
	*/

	// RVA: -1 Offset: -1
	public static CLASS get_Instance() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21C2324 Offset: 0x21C2324 VA: 0x21C2324
	|-SingletonTemplate<BoostFunctionUtility>.get_Instance
	|-SingletonTemplate<MissionNotifyManager>.get_Instance
	|-SingletonTemplate<PartyOrganizationUtility>.get_Instance
	|-SingletonTemplate<QuestTree>.get_Instance
	|-SingletonTemplate<object>.get_Instance
	|-SingletonTemplate<clsQuestCheck>.get_Instance
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public virtual void Destroy() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21C2604 Offset: 0x21C2604 VA: 0x21C2604
	|-SingletonTemplate<BoostFunctionUtility>.Destroy
	|-SingletonTemplate<MissionNotifyManager>.Destroy
	|-SingletonTemplate<PartyOrganizationUtility>.Destroy
	|-SingletonTemplate<QuestTree>.Destroy
	|-SingletonTemplate<object>.Destroy
	|-SingletonTemplate<clsQuestCheck>.Destroy
	*/

	// RVA: -1 Offset: -1
	public static void Delete() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21C2608 Offset: 0x21C2608 VA: 0x21C2608
	|-SingletonTemplate<object>.Delete
	*/

	// RVA: -1 Offset: -1
	private static void .cctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21C27F0 Offset: 0x21C27F0 VA: 0x21C27F0
	|-SingletonTemplate<object>..cctor
	*/
}

// Namespace: 
public class SlideFadeObject : CachableMonoBehaviour // TypeDefIndex: 11052
{
	// Fields
	private MoveObject mMoveObject; // 0x30
	private Vector3 mInitPos; // 0x38
	private Vector3 mLeftPos; // 0x44
	private Vector3 mRightPos; // 0x50
	private SlideFadeObject.SLIDE_STATE mSlideState; // 0x5C
	private UIPanel mPanel; // 0x60

	// Properties
	public Vector3 InitPosition { get; }

	// Methods

	// RVA: 0x1750CE0 Offset: 0x1750CE0 VA: 0x1750CE0
	public void .ctor() { }

	// RVA: 0x1750CE8 Offset: 0x1750CE8 VA: 0x1750CE8
	public Vector3 get_InitPosition() { }

	// RVA: 0x1750CF4 Offset: 0x1750CF4 VA: 0x1750CF4
	private void Awake() { }

	// RVA: 0x1750DF0 Offset: 0x1750DF0 VA: 0x1750DF0
	public void Refresh() { }

	// RVA: 0x1750ED8 Offset: 0x1750ED8 VA: 0x1750ED8
	public void Skip() { }

	// RVA: 0x1750F08 Offset: 0x1750F08 VA: 0x1750F08
	public SlideFadeObject.SLIDE_STATE GetSlideState() { }

	// RVA: 0x1750F10 Offset: 0x1750F10 VA: 0x1750F10
	public void SlideIn(SlideFadeObject.STYLE style, float time, float delay = 0, Action endAct) { }

	// RVA: 0x17510E0 Offset: 0x17510E0 VA: 0x17510E0
	public void SlideIn(float out_pos_ofs_x, float time, float delay = 0, Action endAct) { }

	// RVA: 0x1750F5C Offset: 0x1750F5C VA: 0x1750F5C
	public void SlideIn(Vector3 startPos, float time, float delay = 0, Action endAct) { }

	// RVA: 0x1751108 Offset: 0x1751108 VA: 0x1751108
	public void SlideOut(SlideFadeObject.STYLE style, float time, float delay = 0, Action endAct) { }

	// RVA: 0x17512B8 Offset: 0x17512B8 VA: 0x17512B8
	public void SlideOut(float out_pos_ofs_x, float time, float delay = 0, Action endAct) { }

	// RVA: 0x1751154 Offset: 0x1751154 VA: 0x1751154
	public void SlideOut(Vector3 endPos, float time, float delay = 0, Action endAct) { }

	// RVA: 0x17512E0 Offset: 0x17512E0 VA: 0x17512E0
	public void ResetPosition() { }

	// RVA: 0x1751320 Offset: 0x1751320 VA: 0x1751320
	public void SetPosition(Vector3 pos) { }
}

// Namespace: 
public enum SlideFadeObject.STYLE // TypeDefIndex: 11053
{
	// Fields
	public int value__; // 0x0
	public const SlideFadeObject.STYLE LEFT = 0;
	public const SlideFadeObject.STYLE RIGHT = 1;
}

// Namespace: 
public enum SlideFadeObject.SLIDE_STATE // TypeDefIndex: 11054
{
	// Fields
	public int value__; // 0x0
	public const SlideFadeObject.SLIDE_STATE NONE = 0;
	public const SlideFadeObject.SLIDE_STATE IN_COMPLETE = 1;
	public const SlideFadeObject.SLIDE_STATE OUT_COMPLETE = 2;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC459D4 Offset: 0xC459D4 VA: 0xC459D4
private sealed class SlideFadeObject.<SlideIn>c__AnonStorey0 // TypeDefIndex: 11055
{
	// Fields
	internal Action endAct; // 0x10
	internal SlideFadeObject $this; // 0x18

	// Methods

	// RVA: 0x1751100 Offset: 0x1751100 VA: 0x1751100
	public void .ctor() { }

	// RVA: 0x1751364 Offset: 0x1751364 VA: 0x1751364
	internal void <>m__0() { }

	// RVA: 0x175148C Offset: 0x175148C VA: 0x175148C
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC459E4 Offset: 0xC459E4 VA: 0xC459E4
private sealed class SlideFadeObject.<SlideOut>c__AnonStorey1 // TypeDefIndex: 11056
{
	// Fields
	internal Action endAct; // 0x10
	internal SlideFadeObject $this; // 0x18

	// Methods

	// RVA: 0x17512D8 Offset: 0x17512D8 VA: 0x17512D8
	public void .ctor() { }

	// RVA: 0x1751568 Offset: 0x1751568 VA: 0x1751568
	internal void <>m__0() { }

	// RVA: 0x1751690 Offset: 0x1751690 VA: 0x1751690
	internal void <>m__1() { }
}

// Namespace: 
public class StandFigureSlideComponent : MonoBehaviour // TypeDefIndex: 11057
{
	// Fields
	public const float POS_SPD_RATE = 0.35;
	public const float ALP_IN_SPD_RATE = 0.175;
	public const float ALP_OUT_SPD_RATE = 0.45;
	public const float BASE_POS_Y = 288;
	public static readonly float FRAME_IN_POS_X; // 0x0
	public static readonly float FRAME_OUT_POS_X; // 0x4
	protected CStateManager<StandFigureSlideComponent> mFSM; // 0x18
	protected UIStandFigureR mUIStandFigureR; // 0x20
	protected float mTgtPosX; // 0x28
	protected float mTgtAlp; // 0x2C
	protected float mNowAlp; // 0x30
	protected float mSpdRateAlp; // 0x34
	protected bool mIsFrameIn; // 0x38
	protected bool mIsLoading; // 0x39
	protected bool mIsEnable; // 0x3A
	[SerializeField] // RVA: 0xC7C330 Offset: 0xC7C330 VA: 0xC7C330
	protected BoxCollider mBtnColl; // 0x40
	protected Action mBtnAct; // 0x48
	protected Action mSlideEndAct; // 0x50

	// Methods

	// RVA: 0x179E888 Offset: 0x179E888 VA: 0x179E888
	public void .ctor() { }

	// RVA: 0x179E890 Offset: 0x179E890 VA: 0x179E890
	public bool IsMoving() { }

	// RVA: 0x179E90C Offset: 0x179E90C VA: 0x179E90C
	public bool IsFrameIn() { }

	// RVA: 0x179E914 Offset: 0x179E914 VA: 0x179E914
	public bool IsLoding() { }

	// RVA: 0x179E91C Offset: 0x179E91C VA: 0x179E91C
	public bool IsEnable() { }

	// RVA: 0x179E924 Offset: 0x179E924 VA: 0x179E924
	public void SetEnable(bool is_enable) { }

	// RVA: 0x179E960 Offset: 0x179E960 VA: 0x179E960
	private void Awake() { }

	// RVA: 0x179EB5C Offset: 0x179EB5C VA: 0x179EB5C
	private void Update() { }

	// RVA: 0x179EBBC Offset: 0x179EBBC VA: 0x179EBBC
	private void OnDestroy() { }

	// RVA: 0x179EBC0 Offset: 0x179EBC0 VA: 0x179EBC0
	private void Destroy() { }

	// RVA: 0x179ECA4 Offset: 0x179ECA4 VA: 0x179ECA4
	public void Setup(UserServantEntity usd, int depth, Action end_act) { }

	// RVA: 0x179F0B4 Offset: 0x179F0B4 VA: 0x179F0B4
	public void SetBtnAct(Action btn_act) { }

	// RVA: 0x179F0BC Offset: 0x179F0BC VA: 0x179F0BC
	public void SlideIn(Action end_act) { }

	// RVA: 0x179EFC0 Offset: 0x179EFC0 VA: 0x179EFC0
	public void SlideOut(Action end_act, bool is_force = False) { }

	// RVA: 0x179F198 Offset: 0x179F198 VA: 0x179F198
	public void ToggleSlide() { }

	// RVA: 0x179F1B4 Offset: 0x179F1B4 VA: 0x179F1B4
	public void OnClickBtn() { }

	// RVA: 0x179E8AC Offset: 0x179E8AC VA: 0x179E8AC
	protected StandFigureSlideComponent.STATE GetState() { }

	// RVA: 0x179EAEC Offset: 0x179EAEC VA: 0x179EAEC
	protected void SetState(StandFigureSlideComponent.STATE state) { }

	// RVA: 0x179F1EC Offset: 0x179F1EC VA: 0x179F1EC
	public void EndSlide() { }

	// RVA: 0x179F2E0 Offset: 0x179F2E0 VA: 0x179F2E0
	private static void .cctor() { }
}

// Namespace: 
public enum StandFigureSlideComponent.STATE // TypeDefIndex: 11058
{
	// Fields
	public int value__; // 0x0
	public const StandFigureSlideComponent.STATE NONE = 0;
	public const StandFigureSlideComponent.STATE READY = 1;
	public const StandFigureSlideComponent.STATE SLIDE = 2;
	public const StandFigureSlideComponent.STATE SIZEOF = 3;
}

// Namespace: 
protected class StandFigureSlideComponent.StateNone : IState<StandFigureSlideComponent> // TypeDefIndex: 11059
{
	// Methods

	// RVA: 0x179EAD4 Offset: 0x179EAD4 VA: 0x179EAD4
	public void .ctor() { }

	// RVA: 0x179F450 Offset: 0x179F450 VA: 0x179F450 Slot: 4
	public void begin(StandFigureSlideComponent that) { }

	// RVA: 0x179F454 Offset: 0x179F454 VA: 0x179F454 Slot: 5
	public void update(StandFigureSlideComponent that) { }

	// RVA: 0x179F458 Offset: 0x179F458 VA: 0x179F458 Slot: 6
	public void end(StandFigureSlideComponent that) { }
}

// Namespace: 
protected class StandFigureSlideComponent.StateReady : IState<StandFigureSlideComponent> // TypeDefIndex: 11060
{
	// Methods

