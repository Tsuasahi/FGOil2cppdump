[CompilerGeneratedAttribute] // RVA: 0xC46364 Offset: 0xC46364 VA: 0xC46364
private sealed class ScrTerminalMap.<showEventScriptDlgs>c__AnonStoreyC // TypeDefIndex: 11371
{
	// Fields
	internal Action callback; // 0x10
	internal ScrTerminalMap $this; // 0x18

	// Methods

	// RVA: 0x159D11C Offset: 0x159D11C VA: 0x159D11C
	public void .ctor() { }

	// RVA: 0x159D124 Offset: 0x159D124 VA: 0x159D124
	internal void <>m__0() { }

	// RVA: 0x159D21C Offset: 0x159D21C VA: 0x159D21C
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46374 Offset: 0xC46374 VA: 0xC46374
private sealed class ScrTerminalMap.<EventScriptCaller>c__AnonStoreyD // TypeDefIndex: 11372
{
	// Fields
	internal EventScriptEntity eventScriptEntity; // 0x10
	internal ScrTerminalMap $this; // 0x18

	// Methods

	// RVA: 0x159B738 Offset: 0x159B738 VA: 0x159B738
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46384 Offset: 0xC46384 VA: 0xC46384
private sealed class ScrTerminalMap.<EventScriptCaller>c__AnonStoreyE // TypeDefIndex: 11373
{
	// Fields
	internal EventRaceResultEffect effect; // 0x10
	internal ScrTerminalMap.<EventScriptCaller>c__AnonStoreyD <>f__ref$13; // 0x18

	// Methods

	// RVA: 0x159B740 Offset: 0x159B740 VA: 0x159B740
	public void .ctor() { }

	// RVA: 0x159B748 Offset: 0x159B748 VA: 0x159B748
	internal void <>m__0(bool isExit) { }

	// RVA: 0x159B7A8 Offset: 0x159B7A8 VA: 0x159B7A8
	internal void <>m__1() { }

	// RVA: 0x159B838 Offset: 0x159B838 VA: 0x159B838
	internal void <>m__2() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46394 Offset: 0xC46394 VA: 0xC46394
private sealed class ScrTerminalMap.<CheckAndWarningEventQuestBoardAllClear>c__AnonStoreyF // TypeDefIndex: 11374
{
	// Fields
	internal Action callback; // 0x10
	internal ScrTerminalMap $this; // 0x18

	// Methods

	// RVA: 0x159AFA8 Offset: 0x159AFA8 VA: 0x159AFA8
	public void .ctor() { }

	// RVA: 0x159AFB0 Offset: 0x159AFB0 VA: 0x159AFB0
	internal void <>m__0(bool isDecide) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC463A4 Offset: 0xC463A4 VA: 0xC463A4
private sealed class ScrTerminalMap.<EndRequestDiceUse>c__AnonStorey10 // TypeDefIndex: 11375
{
	// Fields
	internal string result; // 0x10
	internal ScrTerminalMap $this; // 0x18

	// Methods

	// RVA: 0x159B12C Offset: 0x159B12C VA: 0x159B12C
	public void .ctor() { }

	// RVA: 0x159B134 Offset: 0x159B134 VA: 0x159B134
	internal void <>m__0() { }

	// RVA: 0x159B37C Offset: 0x159B37C VA: 0x159B37C
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC463B4 Offset: 0xC463B4 VA: 0xC463B4
private sealed class ScrTerminalMap.<PlayBoardGamePieceEffectSub>c__AnonStorey11 // TypeDefIndex: 11376
{
	// Fields
	internal Vector3 oldPos; // 0x10
	internal ScrTerminalMap $this; // 0x20

	// Methods

	// RVA: 0x159C1BC Offset: 0x159C1BC VA: 0x159C1BC
	public void .ctor() { }

	// RVA: 0x159C1C4 Offset: 0x159C1C4 VA: 0x159C1C4
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC463C4 Offset: 0xC463C4 VA: 0xC463C4
private sealed class ScrTerminalMap.<PlayBoardGameQuestArrivalEffect>c__AnonStorey12 // TypeDefIndex: 11377
{
	// Fields
	internal bool isAuto; // 0x10
	internal int squareId; // 0x14
	internal int clearCount; // 0x18
	internal int maxClearCount; // 0x1C
	internal Action callback; // 0x20
	internal ScrTerminalMap $this; // 0x28

	// Methods

	// RVA: 0x159C3F8 Offset: 0x159C3F8 VA: 0x159C3F8
	public void .ctor() { }

	// RVA: 0x159C400 Offset: 0x159C400 VA: 0x159C400
	internal void <>m__0() { }

	// RVA: 0x159C52C Offset: 0x159C52C VA: 0x159C52C
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC463D4 Offset: 0xC463D4 VA: 0xC463D4
private sealed class ScrTerminalMap.<EventBoardCameraActionAuto_IE>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 11378
{
	// Fields
	internal Action callback; // 0x10
	internal int squareId; // 0x18
	internal int clearCount; // 0x1C
	internal int maxClearCount; // 0x20
	internal ScrTerminalMap $this; // 0x28
	internal object $current; // 0x30
	internal bool $disposing; // 0x38
	internal int $PC; // 0x3C
	private ScrTerminalMap.<EventBoardCameraActionAuto_IE>c__Iterator2.<EventBoardCameraActionAuto_IE>c__AnonStorey13 $locvar0; // 0x40

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDD200 Offset: 0xCDD200 VA: 0xCDD200
	// RVA: 0x159B3AC Offset: 0x159B3AC VA: 0x159B3AC
	public void .ctor() { }

	// RVA: 0x159B3B4 Offset: 0x159B3B4 VA: 0x159B3B4 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDD210 Offset: 0xCDD210 VA: 0xCDD210
	// RVA: 0x159B56C Offset: 0x159B56C VA: 0x159B56C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDD220 Offset: 0xCDD220 VA: 0xCDD220
	// RVA: 0x159B574 Offset: 0x159B574 VA: 0x159B574 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDD230 Offset: 0xCDD230 VA: 0xCDD230
	// RVA: 0x159B57C Offset: 0x159B57C VA: 0x159B57C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDD240 Offset: 0xCDD240 VA: 0xCDD240
	// RVA: 0x159B590 Offset: 0x159B590 VA: 0x159B590 Slot: 6
	public void Reset() { }
}

// Namespace: 
private sealed class ScrTerminalMap.<EventBoardCameraActionAuto_IE>c__Iterator2.<EventBoardCameraActionAuto_IE>c__AnonStorey13 // TypeDefIndex: 11379
{
	// Fields
	internal Action callback; // 0x10
	internal int squareId; // 0x18
	internal int clearCount; // 0x1C
	internal int maxClearCount; // 0x20
	internal ScrTerminalMap.<EventBoardCameraActionAuto_IE>c__Iterator2 <>f__ref$2; // 0x28

	// Methods

	// RVA: 0x159B564 Offset: 0x159B564 VA: 0x159B564
	public void .ctor() { }

	// RVA: 0x159B5F8 Offset: 0x159B5F8 VA: 0x159B5F8
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC463E4 Offset: 0xC463E4 VA: 0xC463E4
private sealed class ScrTerminalMap.<JumpEventBoardGamePiece>c__AnonStorey15 // TypeDefIndex: 11380
{
	// Fields
	internal Vector3 oldPos; // 0x10
	internal Vector3 newPos; // 0x1C
	internal int oldIndex; // 0x28
	internal int endIndex; // 0x2C
	internal Action callback; // 0x30
	internal ScrTerminalMap $this; // 0x38

	// Methods

	// RVA: 0x159B91C Offset: 0x159B91C VA: 0x159B91C
	public void .ctor() { }

	// RVA: 0x159B924 Offset: 0x159B924 VA: 0x159B924
	internal void <>m__0() { }

	// RVA: 0x159BACC Offset: 0x159BACC VA: 0x159BACC
	internal void <>m__1() { }

	// RVA: 0x159BD44 Offset: 0x159BD44 VA: 0x159BD44
	internal void <>m__2() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC463F4 Offset: 0xC463F4 VA: 0xC463F4
private sealed class ScrTerminalMap.<SetBoardGameSquareHaveToken>c__AnonStorey16 // TypeDefIndex: 11381
{
	// Fields
	internal int questId; // 0x10
	internal EventBoardGameTokenRewardEntity rewardEnt; // 0x18

	// Methods

	// RVA: 0x159C6E8 Offset: 0x159C6E8 VA: 0x159C6E8
	public void .ctor() { }

	// RVA: 0x159C6F0 Offset: 0x159C6F0 VA: 0x159C6F0
	internal bool <>m__0(EventBoardGameTokenRewardEntity x) { }

	// RVA: 0x159C72C Offset: 0x159C72C VA: 0x159C72C
	internal bool <>m__1(GiftEntity x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46404 Offset: 0xC46404 VA: 0xC46404
private sealed class ScrTerminalMap.<UpdateBoardGameSquare>c__AnonStorey14 // TypeDefIndex: 11382
{
	// Fields
	internal MapControl.MapGimmickInfo x; // 0x10
	internal ScrTerminalMap $this; // 0x18

	// Methods

	// RVA: 0x159C88C Offset: 0x159C88C VA: 0x159C88C
	public void .ctor() { }

	// RVA: 0x159C894 Offset: 0x159C894 VA: 0x159C894
	internal bool <>m__0(MapGimmickComponent y) { }
}

// Namespace: 
public class ServantRewardAction : MonoBehaviour // TypeDefIndex: 11383
{
	// Fields
	public const float SCREEN_TOUCH_INFO_Y = -265;
	private CStateManager<ServantRewardAction> mFSM; // 0x18
	private Animation mAnimation; // 0x20
	private SimpleAnimation mSimpleAnimation; // 0x28
	private Animation numDisplayAnimation; // 0x30
	private SimpleAnimation numDisplaySimpleAnimation; // 0x38
	private int mServantId; // 0x40
	private int mLimitCount; // 0x44
	private ServantRewardAction.PLAY_FLAG mPlayFlag; // 0x48
	private int servantNum; // 0x4C
	private bool mIsDoneLoad; // 0x50
	private bool mIsPlayReq; // 0x51
	private float mFadeInTime; // 0x54
	private Action mEndAct; // 0x58
	private SvtType.Type mSvtType; // 0x60
	private bool mIsFromTreasureBox; // 0x64
	private bool isSkip; // 0x65
	private bool isDispNum; // 0x66
	private bool isPlayFinish; // 0x67
	private bool mIsCommandCode; // 0x68
	private UserCommandCodeEntity mUserCommandCodeEntity; // 0x70
	[SerializeField] // RVA: 0xC7E8A8 Offset: 0xC7E8A8 VA: 0xC7E8A8
	private GameObject mCardParent; // 0x78
	[SerializeField] // RVA: 0xC7E8B8 Offset: 0xC7E8B8 VA: 0xC7E8B8
	private AnimationClip mAnimNormal; // 0x80
	[SerializeField] // RVA: 0xC7E8C8 Offset: 0xC7E8C8 VA: 0xC7E8C8
	private AnimationClip mAnimSvtNew; // 0x88
	[SerializeField] // RVA: 0xC7E8D8 Offset: 0xC7E8D8 VA: 0xC7E8D8
	private AnimationClip mAnimSvtEquipNew; // 0x90
	[SerializeField] // RVA: 0xC7E8E8 Offset: 0xC7E8E8 VA: 0xC7E8E8
	private AnimationClip mAnimCommandCode; // 0x98
	[SerializeField] // RVA: 0xC7E8F8 Offset: 0xC7E8F8 VA: 0xC7E8F8
	private AnimationClip mAnimCommandCodeNew; // 0xA0
	[SerializeField] // RVA: 0xC7E908 Offset: 0xC7E908 VA: 0xC7E908
	private GameObject particlePrefab; // 0xA8
	[SerializeField] // RVA: 0xC7E918 Offset: 0xC7E918 VA: 0xC7E918
	private GameObject servantGetObj; // 0xB0
	[SerializeField] // RVA: 0xC7E928 Offset: 0xC7E928 VA: 0xC7E928
	private GameObject numDisplayObj; // 0xB8
	[SerializeField] // RVA: 0xC7E938 Offset: 0xC7E938 VA: 0xC7E938
	private UILabel numText; // 0xC0
	[SerializeField] // RVA: 0xC7E948 Offset: 0xC7E948 VA: 0xC7E948
	private float numPlayStartSec; // 0xC8
	[SerializeField] // RVA: 0xC7E958 Offset: 0xC7E958 VA: 0xC7E958
	private AnimationClip mAnimNumDisplayDigit1; // 0xD0
	[SerializeField] // RVA: 0xC7E968 Offset: 0xC7E968 VA: 0xC7E968
	private AnimationClip mAnimNumDisplayDigit2; // 0xD8
	[SerializeField] // RVA: 0xC7E978 Offset: 0xC7E978 VA: 0xC7E978
	private GameObject mTouchParent; // 0xE0
	protected GameObject particleObj; // 0xE8
	private ScreenTouchInformationComponent mScreenTouchInfo; // 0xF0
	private UICharaGraphTexture mUICharaGraph; // 0xF8
	private UserServantEntity userSvtEntity; // 0x100
	[CompilerGeneratedAttribute] // RVA: 0xC7E988 Offset: 0xC7E988 VA: 0xC7E988
	[DebuggerBrowsableAttribute] // RVA: 0xC7E988 Offset: 0xC7E988 VA: 0xC7E988
	private int <PresentDialogMessageId>k__BackingField; // 0x108
	[CompilerGeneratedAttribute] // RVA: 0xC7E9C4 Offset: 0xC7E9C4 VA: 0xC7E9C4
	private static Action <>f__am$cache0; // 0x0

	// Properties
	public int PresentDialogMessageId { get; set; }

	// Methods

	// RVA: 0x1A72318 Offset: 0x1A72318 VA: 0x1A72318
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4650 Offset: 0xCD4650 VA: 0xCD4650
	// RVA: 0x1A72320 Offset: 0x1A72320 VA: 0x1A72320
	public int get_PresentDialogMessageId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4660 Offset: 0xCD4660 VA: 0xCD4660
	// RVA: 0x1A72328 Offset: 0x1A72328 VA: 0x1A72328
	public void set_PresentDialogMessageId(int value) { }

	// RVA: 0x1A72330 Offset: 0x1A72330 VA: 0x1A72330
	private void Awake() { }

	// RVA: 0x1A727C8 Offset: 0x1A727C8 VA: 0x1A727C8
	private void Update() { }

	// RVA: 0x1A72960 Offset: 0x1A72960 VA: 0x1A72960
	private ServantRewardAction.PLAY_FLAG SetupPlayFlag(bool isSvtNew, bool isDoEffect, ServantRewardAction.PLAY_FLAG playFlag) { }

	// RVA: 0x1A72978 Offset: 0x1A72978 VA: 0x1A72978
	private void SetupScreenTouchInfo() { }

	// RVA: 0x1A72B3C Offset: 0x1A72B3C VA: 0x1A72B3C
	public void Setup(int servant_id, long user_svt_id, int limit_count, int svt_num, bool is_svt_new, bool isDoEffect, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1A730FC Offset: 0x1A730FC VA: 0x1A730FC
	public void Setup(int servant_id, UserServantEntity usrSvtEntity, int limit_count, int svt_num, bool is_svt_new, bool isDoEffect, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1A73114 Offset: 0x1A73114 VA: 0x1A73114
	public void Setup(int servant_id, long user_svt_id, int limit_count, int svt_num, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1A72C48 Offset: 0x1A72C48 VA: 0x1A72C48
	public void Setup(int servant_id, UserServantEntity usrSvtEntity, int limit_count, int svt_num, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1A7325C Offset: 0x1A7325C VA: 0x1A7325C
	public void Setup(QuestRewardInfo qri, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1A73348 Offset: 0x1A73348 VA: 0x1A73348
	public void SetupCommandCode(QuestRewardInfo qri, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1A733B8 Offset: 0x1A733B8 VA: 0x1A733B8
	public void SetupCommandCode(long user_command_code_id, bool is_svt_new, bool isDoEffect, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1A733D0 Offset: 0x1A733D0 VA: 0x1A733D0
	public void SetupCommandCode(long user_command_code_id, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1A73668 Offset: 0x1A73668 VA: 0x1A73668
	public void Play(Action end_act, float fade_in_time = 0) { }

	// RVA: 0x1A73680 Offset: 0x1A73680 VA: 0x1A73680
	public void Play(bool is_from_treasure_box, Action end_act, float fade_in_time = 0) { }

	// RVA: 0x1A731FC Offset: 0x1A731FC VA: 0x1A731FC
	public ServantRewardAction.STATE GetState() { }

	// RVA: 0x1A72758 Offset: 0x1A72758 VA: 0x1A72758
	public void SetState(ServantRewardAction.STATE state) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4670 Offset: 0xCD4670 VA: 0xCD4670
	// RVA: 0x1A7369C Offset: 0x1A7369C VA: 0x1A7369C
	private static void <Update>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4680 Offset: 0xCD4680 VA: 0xCD4680
	// RVA: 0x1A736A0 Offset: 0x1A736A0 VA: 0x1A736A0
	private void <Setup>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD4690 Offset: 0xCD4690 VA: 0xCD4690
	// RVA: 0x1A738B4 Offset: 0x1A738B4 VA: 0x1A738B4
	private void <SetupCommandCode>m__2() { }
}

// Namespace: 
public enum ServantRewardAction.PLAY_FLAG // TypeDefIndex: 11384
{
	// Fields
	public int value__; // 0x0
	public const ServantRewardAction.PLAY_FLAG NONE = 0;
	public const ServantRewardAction.PLAY_FLAG SVT_NEW = 1;
	public const ServantRewardAction.PLAY_FLAG FADE_IN = 2;
	public const ServantRewardAction.PLAY_FLAG FADE_OUT = 4;
	public const ServantRewardAction.PLAY_FLAG EVENT_SVT_GET = 8;
	public const ServantRewardAction.PLAY_FLAG NEW_EFFECT = 16;
	public const ServantRewardAction.PLAY_FLAG DETAIL_SKIP = 32;
	public const ServantRewardAction.PLAY_FLAG EVENT_JOIN_SKIP = 64;
}

// Namespace: 
public enum ServantRewardAction.STATE // TypeDefIndex: 11385
{
	// Fields
	public int value__; // 0x0
	public const ServantRewardAction.STATE NONE = 0;
	public const ServantRewardAction.STATE PLAY = 1;
	public const ServantRewardAction.STATE NUM_DISPLAY = 2;
	public const ServantRewardAction.STATE TOUCH_WAIT = 3;
	public const ServantRewardAction.STATE TALK = 4;
	public const ServantRewardAction.STATE DETAIL = 5;
	public const ServantRewardAction.STATE SECRET_TREASURE_DEVICE = 6;
	public const ServantRewardAction.STATE END = 7;
	public const ServantRewardAction.STATE SIZEOF = 8;
}

// Namespace: 
private class ServantRewardAction.StateNone : IState<ServantRewardAction> // TypeDefIndex: 11386
{
	// Methods

	// RVA: 0x1A72718 Offset: 0x1A72718 VA: 0x1A72718
	public void .ctor() { }

	// RVA: 0x1A74390 Offset: 0x1A74390 VA: 0x1A74390 Slot: 4
	public void begin(ServantRewardAction that) { }

	// RVA: 0x1A74394 Offset: 0x1A74394 VA: 0x1A74394 Slot: 5
	public void update(ServantRewardAction that) { }

	// RVA: 0x1A74398 Offset: 0x1A74398 VA: 0x1A74398 Slot: 6
	public void end(ServantRewardAction that) { }
}

// Namespace: 
private class ServantRewardAction.StatePlay : IState<ServantRewardAction> // TypeDefIndex: 11387
{
	// Fields
	private AnimationState mAnimState; // 0x10
	private SimpleAnimation.State mSimpleAnimState; // 0x18
	private float totalTime; // 0x20

	// Methods

	// RVA: 0x1A72720 Offset: 0x1A72720 VA: 0x1A72720
	public void .ctor() { }

	// RVA: 0x1A74950 Offset: 0x1A74950 VA: 0x1A74950 Slot: 4
	public void begin(ServantRewardAction that) { }

	// RVA: 0x1A74CA8 Offset: 0x1A74CA8 VA: 0x1A74CA8 Slot: 5
	public void update(ServantRewardAction that) { }

	// RVA: 0x1A74F18 Offset: 0x1A74F18 VA: 0x1A74F18 Slot: 6
	public void end(ServantRewardAction that) { }
}

// Namespace: 
private class ServantRewardAction.StateNumDisplay : IState<ServantRewardAction> // TypeDefIndex: 11388
{
	// Fields
	private AnimationState mAnimState; // 0x10
	private SimpleAnimation.State mSimpleAnimState; // 0x18

	// Methods

	// RVA: 0x1A72728 Offset: 0x1A72728 VA: 0x1A72728
	public void .ctor() { }

	// RVA: 0x1A7439C Offset: 0x1A7439C VA: 0x1A7439C Slot: 4
	public void begin(ServantRewardAction that) { }

	// RVA: 0x1A74648 Offset: 0x1A74648 VA: 0x1A74648 Slot: 5
	public void update(ServantRewardAction that) { }

	// RVA: 0x1A7494C Offset: 0x1A7494C VA: 0x1A7494C Slot: 6
	public void end(ServantRewardAction that) { }
}

// Namespace: 
private class ServantRewardAction.StateTouchWait : IState<ServantRewardAction> // TypeDefIndex: 11389
{
	// Fields
	private bool isWaitCloseDialog; // 0x10

	// Methods

	// RVA: 0x1A72730 Offset: 0x1A72730 VA: 0x1A72730
	public void .ctor() { }

	// RVA: 0x1A75458 Offset: 0x1A75458 VA: 0x1A75458 Slot: 4
	public void begin(ServantRewardAction that) { }

	// RVA: 0x1A75764 Offset: 0x1A75764 VA: 0x1A75764 Slot: 5
	public void update(ServantRewardAction that) { }

	// RVA: 0x1A75874 Offset: 0x1A75874 VA: 0x1A75874 Slot: 6
	public void end(ServantRewardAction that) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD46A0 Offset: 0xCD46A0 VA: 0xCD46A0
	// RVA: 0x1A75878 Offset: 0x1A75878 VA: 0x1A75878
	private void <begin>m__0(bool decide) { }
}

// Namespace: 
private class ServantRewardAction.StateTalk : IState<ServantRewardAction> // TypeDefIndex: 11390
{
	// Methods

	// RVA: 0x1A72738 Offset: 0x1A72738 VA: 0x1A72738
	public void .ctor() { }

	// RVA: 0x1A75120 Offset: 0x1A75120 VA: 0x1A75120 Slot: 4
	public void begin(ServantRewardAction rewardAction) { }

	// RVA: 0x1A75420 Offset: 0x1A75420 VA: 0x1A75420 Slot: 5
	public void update(ServantRewardAction rewardAction) { }

	// RVA: 0x1A75424 Offset: 0x1A75424 VA: 0x1A75424 Slot: 6
	public void end(ServantRewardAction rewardAction) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46414 Offset: 0xC46414 VA: 0xC46414
private sealed class ServantRewardAction.StateTalk.<begin>c__AnonStorey0 // TypeDefIndex: 11391
{
	// Fields
	internal ServantRewardAction rewardAction; // 0x10

	// Methods

	// RVA: 0x1A75418 Offset: 0x1A75418 VA: 0x1A75418
	public void .ctor() { }

	// RVA: 0x1A75428 Offset: 0x1A75428 VA: 0x1A75428
	internal void <>m__0() { }
}

// Namespace: 
private class ServantRewardAction.StateDetail : IState<ServantRewardAction> // TypeDefIndex: 11392
{
	// Fields
	private ServantRewardAction that; // 0x10

	// Methods

	// RVA: 0x1A72740 Offset: 0x1A72740 VA: 0x1A72740
	public void .ctor() { }

	// RVA: 0x1A73A2C Offset: 0x1A73A2C VA: 0x1A73A2C Slot: 4
	public void begin(ServantRewardAction servantrewardAction) { }

	// RVA: 0x1A73B54 Offset: 0x1A73B54 VA: 0x1A73B54 Slot: 5
	public void update(ServantRewardAction that) { }

	// RVA: 0x1A73B58 Offset: 0x1A73B58 VA: 0x1A73B58 Slot: 6
	public void end(ServantRewardAction that) { }

	// RVA: 0x1A73B5C Offset: 0x1A73B5C VA: 0x1A73B5C
	private void detailOpen() { }

	// RVA: 0x1A73C00 Offset: 0x1A73C00 VA: 0x1A73C00
	private void detailEnd(bool isDecide) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD46B0 Offset: 0xCD46B0 VA: 0xCD46B0
	// RVA: 0x1A73D68 Offset: 0x1A73D68 VA: 0x1A73D68
	private void <begin>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD46C0 Offset: 0xCD46C0 VA: 0xCD46C0
	// RVA: 0x1A73F0C Offset: 0x1A73F0C VA: 0x1A73F0C
	private void <detailEnd>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD46D0 Offset: 0xCD46D0 VA: 0xCD46D0
	// RVA: 0x1A73FEC Offset: 0x1A73FEC VA: 0x1A73FEC
	private void <detailEnd>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD46E0 Offset: 0xCD46E0 VA: 0xCD46E0
	// RVA: 0x1A74070 Offset: 0x1A74070 VA: 0x1A74070
	private void <detailEnd>m__3() { }
}

// Namespace: 
private class ServantRewardAction.StateSecretTreasureDevice : IState<ServantRewardAction> // TypeDefIndex: 11393
{
	// Methods

	// RVA: 0x1A72748 Offset: 0x1A72748 VA: 0x1A72748
	public void .ctor() { }

	// RVA: 0x1A74F1C Offset: 0x1A74F1C VA: 0x1A74F1C Slot: 4
	public void begin(ServantRewardAction that) { }

	// RVA: 0x1A75030 Offset: 0x1A75030 VA: 0x1A75030 Slot: 5
	public void update(ServantRewardAction that) { }

	// RVA: 0x1A75034 Offset: 0x1A75034 VA: 0x1A75034 Slot: 6
	public void end(ServantRewardAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46424 Offset: 0xC46424 VA: 0xC46424
private sealed class ServantRewardAction.StateSecretTreasureDevice.<begin>c__AnonStorey0 // TypeDefIndex: 11394
{
	// Fields
	internal ServantRewardAction that; // 0x10

	// Methods

	// RVA: 0x1A75028 Offset: 0x1A75028 VA: 0x1A75028
	public void .ctor() { }

	// RVA: 0x1A75038 Offset: 0x1A75038 VA: 0x1A75038
	internal void <>m__0() { }

	// RVA: 0x1A750F0 Offset: 0x1A750F0 VA: 0x1A750F0
	internal void <>m__1(bool isDecide) { }
}

// Namespace: 
private class ServantRewardAction.StateEnd : IState<ServantRewardAction> // TypeDefIndex: 11395
{
	// Methods

	// RVA: 0x1A72750 Offset: 0x1A72750 VA: 0x1A72750
	public void .ctor() { }

	// RVA: 0x1A740F4 Offset: 0x1A740F4 VA: 0x1A740F4 Slot: 4
	public void begin(ServantRewardAction that) { }

	// RVA: 0x1A742BC Offset: 0x1A742BC VA: 0x1A742BC Slot: 5
	public void update(ServantRewardAction that) { }

	// RVA: 0x1A742EC Offset: 0x1A742EC VA: 0x1A742EC Slot: 6
	public void end(ServantRewardAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46434 Offset: 0xC46434 VA: 0xC46434
private sealed class ServantRewardAction.StateEnd.<begin>c__AnonStorey0 // TypeDefIndex: 11396
{
	// Fields
	internal ServantRewardAction that; // 0x10

	// Methods

	// RVA: 0x1A742B4 Offset: 0x1A742B4 VA: 0x1A742B4
	public void .ctor() { }

	// RVA: 0x1A742F0 Offset: 0x1A742F0 VA: 0x1A742F0
	internal void <>m__0() { }
}

// Namespace: 
public class SideItemComponent : MonoBehaviour // TypeDefIndex: 11397
{
	// Fields
	public UISprite sprite; // 0x18
	public UILabel label; // 0x20

	// Methods

	// RVA: 0x1521550 Offset: 0x1521550 VA: 0x1521550
	public void .ctor() { }
}

// Namespace: 
public class SpotLargeComponent : MonoBehaviour // TypeDefIndex: 11398
{
	// Fields
	private const float LARGE_POS_X = -230;
	private const float LARGE_POS_Y = -85;
	private const float LARGE_SCL = 2;
	private const float LARGE_IN_TIME = 0.15;
	private const float LARGE_OUT_TIME = 0.05;
	private const UITweener.Method LARGE_TWEEN_METHOD = 2;
	private const float DEFAULT_SPRITE_Y = 0;
	private CStateManager<SpotLargeComponent> mFSM; // 0x18
	[SerializeField] // RVA: 0xC7E9D4 Offset: 0xC7E9D4 VA: 0xC7E9D4
	private UISprite mSpotSp; // 0x20
	[SerializeField] // RVA: 0xC7E9E4 Offset: 0xC7E9E4 VA: 0xC7E9E4
	private UISprite mSpotNameSp; // 0x28
	[SerializeField] // RVA: 0xC7E9F4 Offset: 0xC7E9F4 VA: 0xC7E9F4
	private UILabel mSpotNameLabel; // 0x30
	private Action mShowEndAct; // 0x38
	private Action mHideEndAct; // 0x40
	private SrcSpotBasePrefab mBaseSpot; // 0x48
	private MapCamera mMapCamera; // 0x50

	// Methods

	// RVA: 0x13E21EC Offset: 0x13E21EC VA: 0x13E21EC
	public void .ctor() { }

	// RVA: 0x13E21F4 Offset: 0x13E21F4 VA: 0x13E21F4
	private void Awake() { }

	// RVA: 0x13E2420 Offset: 0x13E2420 VA: 0x13E2420
	private void Update() { }

	// RVA: 0x13E2480 Offset: 0x13E2480 VA: 0x13E2480
	public void LargeIn(SrcSpotBasePrefab spot, MapCamera map_cam, Action end_act) { }

	// RVA: 0x13E2C8C Offset: 0x13E2C8C VA: 0x13E2C8C
	public void LargeOut(Action end_act) { }

	// RVA: 0x13E2C9C Offset: 0x13E2C9C VA: 0x13E2C9C
	public void ForceOff() { }

	// RVA: 0x13E2CF8 Offset: 0x13E2CF8 VA: 0x13E2CF8
	public SpotLargeComponent.STATE GetState() { }

	// RVA: 0x13E23B0 Offset: 0x13E23B0 VA: 0x13E23B0
	private void SetState(SpotLargeComponent.STATE state) { }

	// RVA: 0x13E2978 Offset: 0x13E2978 VA: 0x13E2978
	private float GetBaseScale() { }

	// RVA: 0x13E2A30 Offset: 0x13E2A30 VA: 0x13E2A30
	private Vector3 GetBasePosition() { }

	// RVA: 0x13E2D58 Offset: 0x13E2D58 VA: 0x13E2D58
	private void SetLargeSpotNameScale_NormalScale() { }

	// RVA: 0x13E2DC0 Offset: 0x13E2DC0 VA: 0x13E2DC0
	private void StateLargeIn_End() { }

	// RVA: 0x13E2DF4 Offset: 0x13E2DF4 VA: 0x13E2DF4
	private void StateLargeOut_End() { }
}

// Namespace: 
public enum SpotLargeComponent.STATE // TypeDefIndex: 11399
{
	// Fields
	public int value__; // 0x0
	public const SpotLargeComponent.STATE NONE = 0;
	public const SpotLargeComponent.STATE LARGE_IN = 1;
	public const SpotLargeComponent.STATE LARGE_MAIN = 2;
	public const SpotLargeComponent.STATE LARGE_OUT = 3;
	public const SpotLargeComponent.STATE SIZEOF = 4;
}

// Namespace: 
private class SpotLargeComponent.StateNone : IState<SpotLargeComponent> // TypeDefIndex: 11400
{
	// Methods

	// RVA: 0x13E2390 Offset: 0x13E2390 VA: 0x13E2390
	public void .ctor() { }

	// RVA: 0x13E35C8 Offset: 0x13E35C8 VA: 0x13E35C8 Slot: 4
	public void begin(SpotLargeComponent that) { }

	// RVA: 0x13E35CC Offset: 0x13E35CC VA: 0x13E35CC Slot: 5
	public void update(SpotLargeComponent that) { }

	// RVA: 0x13E35D0 Offset: 0x13E35D0 VA: 0x13E35D0 Slot: 6
	public void end(SpotLargeComponent that) { }
}

// Namespace: 
private class SpotLargeComponent.StateLargeIn : IState<SpotLargeComponent> // TypeDefIndex: 11401
{
	// Fields
	private GameObject mNameBgObj; // 0x10

	// Methods

	// RVA: 0x13E2398 Offset: 0x13E2398 VA: 0x13E2398
	public void .ctor() { }

	// RVA: 0x13E2E28 Offset: 0x13E2E28 VA: 0x13E2E28 Slot: 4
	public void begin(SpotLargeComponent that) { }

	// RVA: 0x13E30A8 Offset: 0x13E30A8 VA: 0x13E30A8 Slot: 5
	public void update(SpotLargeComponent that) { }

	// RVA: 0x13E30D4 Offset: 0x13E30D4 VA: 0x13E30D4 Slot: 6
	public void end(SpotLargeComponent that) { }
}

// Namespace: 
private class SpotLargeComponent.StateLargeMain : IState<SpotLargeComponent> // TypeDefIndex: 11402
{
	// Methods

	// RVA: 0x13E23A0 Offset: 0x13E23A0 VA: 0x13E23A0
	public void .ctor() { }

	// RVA: 0x13E30D8 Offset: 0x13E30D8 VA: 0x13E30D8 Slot: 4
	public void begin(SpotLargeComponent that) { }

	// RVA: 0x13E334C Offset: 0x13E334C VA: 0x13E334C Slot: 5
	public void update(SpotLargeComponent that) { }

	// RVA: 0x13E3350 Offset: 0x13E3350 VA: 0x13E3350 Slot: 6
	public void end(SpotLargeComponent that) { }
}

// Namespace: 
private class SpotLargeComponent.StateLargeOut : IState<SpotLargeComponent> // TypeDefIndex: 11403
{
	// Fields
	private GameObject mNameBgObj; // 0x10

	// Methods

	// RVA: 0x13E23A8 Offset: 0x13E23A8 VA: 0x13E23A8
	public void .ctor() { }

	// RVA: 0x13E3354 Offset: 0x13E3354 VA: 0x13E3354 Slot: 4
	public void begin(SpotLargeComponent that) { }

	// RVA: 0x13E3598 Offset: 0x13E3598 VA: 0x13E3598 Slot: 5
	public void update(SpotLargeComponent that) { }

	// RVA: 0x13E35C4 Offset: 0x13E35C4 VA: 0x13E35C4 Slot: 6
	public void end(SpotLargeComponent that) { }
}

// Namespace: 
public class srcLineSprite : MonoBehaviour // TypeDefIndex: 11404
{
	// Fields
	public const float WHITE = 1;
	public const float GRAY = 0.5;
	private CStateManager<srcLineSprite> mFSM; // 0x18
	private bool mtIsUpdate; // 0x20
	public Transform mcMyTrans; // 0x28
	public UISprite mcLineSprite; // 0x30
	public TweenAlpha mcTweenAlphaP; // 0x38
	public TweenScale mcTweenScaleP; // 0x40
	public float mfWidth; // 0x48
	public int miLineW; // 0x4C
	public int miLineH; // 0x50
	public Vector2 mcFrom; // 0x54
	public Vector2 mcTo; // 0x5C
	public UIAtlas mcAtlasP; // 0x68
	public string msSpriteName; // 0x70
	private MapControl.SpotRoadInfo mMapCtrl_SpotRoadInfo; // 0x78
	private Action mStateEndAct; // 0x80

	// Methods

	// RVA: 0x2B1BAF8 Offset: 0x2B1BAF8 VA: 0x2B1BAF8
	public void .ctor() { }

	// RVA: 0x2B1BB78 Offset: 0x2B1BB78 VA: 0x2B1BB78
	public static string GetGobjName(int id) { }

	// RVA: 0x2B1BC10 Offset: 0x2B1BC10 VA: 0x2B1BC10
	public void SetMapCtrl_SpotRoadInfo(MapControl.SpotRoadInfo _MapCtrl_SpotRoadInfo) { }

	// RVA: 0x2B1BC18 Offset: 0x2B1BC18 VA: 0x2B1BC18
	public MapControl.SpotRoadInfo GetMapCtrl_SpotRoadInfo() { }

	// RVA: 0x2B1BC20 Offset: 0x2B1BC20 VA: 0x2B1BC20
	private void Awake() { }

	// RVA: 0x2B1BF64 Offset: 0x2B1BF64 VA: 0x2B1BF64
	private void Start() { }

	// RVA: 0x2B1BF68 Offset: 0x2B1BF68 VA: 0x2B1BF68
	private void Update() { }

	// RVA: 0x2B1BFC8 Offset: 0x2B1BFC8 VA: 0x2B1BFC8
	public void SetContrast(float val) { }

	// RVA: 0x2B1C04C Offset: 0x2B1C04C VA: 0x2B1C04C
	public void mfSetITweenSize(float fSrcW, float fDstW, float fTime) { }

	// RVA: 0x2B1C154 Offset: 0x2B1C154 VA: 0x2B1C154
	public void mfSetPos2(Vector2 cFrom, Vector2 cTo) { }

	// RVA: 0x2B1C440 Offset: 0x2B1C440 VA: 0x2B1C440
	public void mfSetAtlas(UIAtlas cAtlasP, string sSpriteName) { }

	// RVA: 0x2B1C3A4 Offset: 0x2B1C3A4 VA: 0x2B1C3A4
	public float GetAim(Vector2 p1, Vector2 p2) { }

	// RVA: 0x2B1C450 Offset: 0x2B1C450 VA: 0x2B1C450
	public srcLineSprite.STATE GetState() { }

	// RVA: 0x2B1BEEC Offset: 0x2B1BEEC VA: 0x2B1BEEC
	public void SetState(srcLineSprite.STATE state, Action end_act) { }

	// RVA: 0x2B1C4B0 Offset: 0x2B1C4B0 VA: 0x2B1C4B0
	private void StateQaaEnd() { }

	// RVA: 0x2B1C4E4 Offset: 0x2B1C4E4 VA: 0x2B1C4E4
	private void SetQaaScaleAnim(bool is_disp) { }

	// RVA: 0x2B1C738 Offset: 0x2B1C738 VA: 0x2B1C738
	private void SetQaaColorAnim(bool is_disp) { }
}

// Namespace: 
public enum srcLineSprite.STATE // TypeDefIndex: 11405
{
	// Fields
	public int value__; // 0x0
	public const srcLineSprite.STATE NONE = 0;
	public const srcLineSprite.STATE MAP_MAIN = 1;
	public const srcLineSprite.STATE QAA_HIDE = 2;
	public const srcLineSprite.STATE QAA_GRAY = 3;
	public const srcLineSprite.STATE QAA_DISP = 4;
	public const srcLineSprite.STATE SIZEOF = 5;
}

// Namespace: 
private class srcLineSprite.StateNone : IState<srcLineSprite> // TypeDefIndex: 11406
{
	// Methods

	// RVA: 0x2B1BEC4 Offset: 0x2B1BEC4 VA: 0x2B1BEC4
	public void .ctor() { }

	// RVA: 0x2B1CAD8 Offset: 0x2B1CAD8 VA: 0x2B1CAD8 Slot: 4
	public void begin(srcLineSprite that) { }

	// RVA: 0x2B1CADC Offset: 0x2B1CADC VA: 0x2B1CADC Slot: 5
	public void update(srcLineSprite that) { }

	// RVA: 0x2B1CAE0 Offset: 0x2B1CAE0 VA: 0x2B1CAE0 Slot: 6
	public void end(srcLineSprite that) { }
}

// Namespace: 
private class srcLineSprite.StateMapMain : IState<srcLineSprite> // TypeDefIndex: 11407
{
	// Methods

	// RVA: 0x2B1BECC Offset: 0x2B1BECC VA: 0x2B1BECC
	public void .ctor() { }

	// RVA: 0x2B1C974 Offset: 0x2B1C974 VA: 0x2B1C974 Slot: 4
	public void begin(srcLineSprite that) { }

	// RVA: 0x2B1C978 Offset: 0x2B1C978 VA: 0x2B1C978 Slot: 5
	public void update(srcLineSprite that) { }

	// RVA: 0x2B1CAD4 Offset: 0x2B1CAD4 VA: 0x2B1CAD4 Slot: 6
	public void end(srcLineSprite that) { }
}

// Namespace: 
private class srcLineSprite.StateQaaHide : IState<srcLineSprite> // TypeDefIndex: 11408
{
	// Methods

	// RVA: 0x2B1BED4 Offset: 0x2B1BED4 VA: 0x2B1BED4
	public void .ctor() { }

	// RVA: 0x2B1CC54 Offset: 0x2B1CC54 VA: 0x2B1CC54 Slot: 4
	public void begin(srcLineSprite that) { }

	// RVA: 0x2B1CCE0 Offset: 0x2B1CCE0 VA: 0x2B1CCE0 Slot: 5
	public void update(srcLineSprite that) { }

	// RVA: 0x2B1CCE4 Offset: 0x2B1CCE4 VA: 0x2B1CCE4 Slot: 6
	public void end(srcLineSprite that) { }
}

// Namespace: 
private class srcLineSprite.StateQaaGray : IState<srcLineSprite> // TypeDefIndex: 11409
{
	// Methods

	// RVA: 0x2B1BEDC Offset: 0x2B1BEDC VA: 0x2B1BEDC
	public void .ctor() { }

	// RVA: 0x2B1CB9C Offset: 0x2B1CB9C VA: 0x2B1CB9C Slot: 4
	public void begin(srcLineSprite that) { }

	// RVA: 0x2B1CC4C Offset: 0x2B1CC4C VA: 0x2B1CC4C Slot: 5
	public void update(srcLineSprite that) { }

	// RVA: 0x2B1CC50 Offset: 0x2B1CC50 VA: 0x2B1CC50 Slot: 6
	public void end(srcLineSprite that) { }
}

// Namespace: 
private class srcLineSprite.StateQaaDisp : IState<srcLineSprite> // TypeDefIndex: 11410
