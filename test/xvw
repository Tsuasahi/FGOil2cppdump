
	// RVA: 0x23F233C Offset: 0x23F233C VA: 0x23F233C
	public static void LookFrom(GameObject target, Hashtable args) { }

	// RVA: 0x23F2C5C Offset: 0x23F2C5C VA: 0x23F2C5C
	public static void LookTo(GameObject target, Vector3 looktarget, float time) { }

	// RVA: 0x23F2E90 Offset: 0x23F2E90 VA: 0x23F2E90
	public static void LookTo(GameObject target, Hashtable args) { }

	// RVA: 0x23F3278 Offset: 0x23F3278 VA: 0x23F3278
	public static void MoveTo(GameObject target, Vector3 position, float time) { }

	// RVA: 0x23F34AC Offset: 0x23F34AC VA: 0x23F34AC
	public static void MoveTo(GameObject target, Hashtable args) { }

	// RVA: 0x23F395C Offset: 0x23F395C VA: 0x23F395C
	public static void MoveFrom(GameObject target, Vector3 position, float time) { }

	// RVA: 0x23F3B90 Offset: 0x23F3B90 VA: 0x23F3B90
	public static void MoveFrom(GameObject target, Hashtable args) { }

	// RVA: 0x23F4748 Offset: 0x23F4748 VA: 0x23F4748
	public static void MoveAdd(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x23F497C Offset: 0x23F497C VA: 0x23F497C
	public static void MoveAdd(GameObject target, Hashtable args) { }

	// RVA: 0x23EDBEC Offset: 0x23EDBEC VA: 0x23EDBEC
	public static void MoveBy(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x23F4A68 Offset: 0x23F4A68 VA: 0x23F4A68
	public static void MoveBy(GameObject target, Hashtable args) { }

	// RVA: 0x23F4B54 Offset: 0x23F4B54 VA: 0x23F4B54
	public static void ScaleTo(GameObject target, Vector3 scale, float time) { }

	// RVA: 0x23F4D88 Offset: 0x23F4D88 VA: 0x23F4D88
	public static void ScaleTo(GameObject target, Hashtable args) { }

	// RVA: 0x23F5230 Offset: 0x23F5230 VA: 0x23F5230
	public static void ScaleFrom(GameObject target, Vector3 scale, float time) { }

	// RVA: 0x23F5464 Offset: 0x23F5464 VA: 0x23F5464
	public static void ScaleFrom(GameObject target, Hashtable args) { }

	// RVA: 0x23F5954 Offset: 0x23F5954 VA: 0x23F5954
	public static void ScaleAdd(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x23F5B88 Offset: 0x23F5B88 VA: 0x23F5B88
	public static void ScaleAdd(GameObject target, Hashtable args) { }

	// RVA: 0x23F5C74 Offset: 0x23F5C74 VA: 0x23F5C74
	public static void ScaleBy(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x23F5EA8 Offset: 0x23F5EA8 VA: 0x23F5EA8
	public static void ScaleBy(GameObject target, Hashtable args) { }

	// RVA: 0x23F5F94 Offset: 0x23F5F94 VA: 0x23F5F94
	public static void RotateTo(GameObject target, Vector3 rotation, float time) { }

	// RVA: 0x23F61C8 Offset: 0x23F61C8 VA: 0x23F61C8
	public static void RotateTo(GameObject target, Hashtable args) { }

	// RVA: 0x23F6678 Offset: 0x23F6678 VA: 0x23F6678
	public static void RotateFrom(GameObject target, Vector3 rotation, float time) { }

	// RVA: 0x23F68AC Offset: 0x23F68AC VA: 0x23F68AC
	public static void RotateFrom(GameObject target, Hashtable args) { }

	// RVA: 0x23F6E30 Offset: 0x23F6E30 VA: 0x23F6E30
	public static void RotateAdd(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x23F7064 Offset: 0x23F7064 VA: 0x23F7064
	public static void RotateAdd(GameObject target, Hashtable args) { }

	// RVA: 0x23F7150 Offset: 0x23F7150 VA: 0x23F7150
	public static void RotateBy(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x23F7384 Offset: 0x23F7384 VA: 0x23F7384
	public static void RotateBy(GameObject target, Hashtable args) { }

	// RVA: 0x23F7470 Offset: 0x23F7470 VA: 0x23F7470
	public static void ShakePosition(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x23F76A4 Offset: 0x23F76A4 VA: 0x23F76A4
	public static void ShakePosition(GameObject target, Hashtable args) { }

	// RVA: 0x23F7790 Offset: 0x23F7790 VA: 0x23F7790
	public static void ShakeScale(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x23F79C4 Offset: 0x23F79C4 VA: 0x23F79C4
	public static void ShakeScale(GameObject target, Hashtable args) { }

	// RVA: 0x23F7AB0 Offset: 0x23F7AB0 VA: 0x23F7AB0
	public static void ShakeRotation(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x23F7CE4 Offset: 0x23F7CE4 VA: 0x23F7CE4
	public static void ShakeRotation(GameObject target, Hashtable args) { }

	// RVA: 0x23F7DD0 Offset: 0x23F7DD0 VA: 0x23F7DD0
	public static void PunchPosition(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x23F8004 Offset: 0x23F8004 VA: 0x23F8004
	public static void PunchPosition(GameObject target, Hashtable args) { }

	// RVA: 0x23F8144 Offset: 0x23F8144 VA: 0x23F8144
	public static void PunchRotation(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x23F8378 Offset: 0x23F8378 VA: 0x23F8378
	public static void PunchRotation(GameObject target, Hashtable args) { }

	// RVA: 0x23F84B8 Offset: 0x23F84B8 VA: 0x23F84B8
	public static void PunchScale(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x23F86EC Offset: 0x23F86EC VA: 0x23F86EC
	public static void PunchScale(GameObject target, Hashtable args) { }

	// RVA: 0x23F882C Offset: 0x23F882C VA: 0x23F882C
	private void GenerateTargets() { }

	// RVA: 0x23F9DB0 Offset: 0x23F9DB0 VA: 0x23F9DB0
	private void GenerateRectTargets() { }

	// RVA: 0x23F9C14 Offset: 0x23F9C14 VA: 0x23F9C14
	private void GenerateColorTargets() { }

	// RVA: 0x23F998C Offset: 0x23F998C VA: 0x23F998C
	private void GenerateVector3Targets() { }

	// RVA: 0x23F9670 Offset: 0x23F9670 VA: 0x23F9670
	private void GenerateVector2Targets() { }

	// RVA: 0x23F9440 Offset: 0x23F9440 VA: 0x23F9440
	private void GenerateFloatTargets() { }

	// RVA: 0x23F9EF0 Offset: 0x23F9EF0 VA: 0x23F9EF0
	private void GenerateColorToTargets() { }

	// RVA: 0x23FAE18 Offset: 0x23FAE18 VA: 0x23FAE18
	private void GenerateAudioToTargets() { }

	// RVA: 0x2401688 Offset: 0x2401688 VA: 0x2401688
	private void GenerateStabTargets() { }

	// RVA: 0x2400950 Offset: 0x2400950 VA: 0x2400950
	private void GenerateLookToTargets() { }

	// RVA: 0x23FB1F0 Offset: 0x23FB1F0 VA: 0x23FB1F0
	private void GenerateMoveToPathTargets() { }

	// RVA: 0x23FBCA4 Offset: 0x23FBCA4 VA: 0x23FBCA4
	private void GenerateMoveToTargets() { }

	// RVA: 0x23FC494 Offset: 0x23FC494 VA: 0x23FC494
	private void GenerateMoveByTargets() { }

	// RVA: 0x23FCD44 Offset: 0x23FCD44 VA: 0x23FCD44
	private void GenerateScaleToTargets() { }

	// RVA: 0x23FD41C Offset: 0x23FD41C VA: 0x23FD41C
	private void GenerateScaleByTargets() { }

	// RVA: 0x23FD978 Offset: 0x23FD978 VA: 0x23FD978
	private void GenerateScaleAddTargets() { }

	// RVA: 0x23FDE90 Offset: 0x23FDE90 VA: 0x23FDE90
	private void GenerateRotateToTargets() { }

	// RVA: 0x23FE724 Offset: 0x23FE724 VA: 0x23FE724
	private void GenerateRotateAddTargets() { }

	// RVA: 0x23FEC7C Offset: 0x23FEC7C VA: 0x23FEC7C
	private void GenerateRotateByTargets() { }

	// RVA: 0x23FF240 Offset: 0x23FF240 VA: 0x23FF240
	private void GenerateShakePositionTargets() { }

	// RVA: 0x23FF618 Offset: 0x23FF618 VA: 0x23FF618
	private void GenerateShakeScaleTargets() { }

	// RVA: 0x23FF98C Offset: 0x23FF98C VA: 0x23FF98C
	private void GenerateShakeRotationTargets() { }

	// RVA: 0x23FFD00 Offset: 0x23FFD00 VA: 0x23FFD00
	private void GeneratePunchPositionTargets() { }

	// RVA: 0x2400170 Offset: 0x2400170 VA: 0x2400170
	private void GeneratePunchRotationTargets() { }

	// RVA: 0x240057C Offset: 0x240057C VA: 0x240057C
	private void GeneratePunchScaleTargets() { }

	// RVA: 0x2402018 Offset: 0x2402018 VA: 0x2402018
	private void ApplyRectTargets() { }

	// RVA: 0x24024F8 Offset: 0x24024F8 VA: 0x24024F8
	private void ApplyColorTargets() { }

	// RVA: 0x2402B00 Offset: 0x2402B00 VA: 0x2402B00
	private void ApplyVector3Targets() { }

	// RVA: 0x2402EA8 Offset: 0x2402EA8 VA: 0x2402EA8
	private void ApplyVector2Targets() { }

	// RVA: 0x2403188 Offset: 0x2403188 VA: 0x2403188
	private void ApplyFloatTargets() { }

	// RVA: 0x240339C Offset: 0x240339C VA: 0x240339C
	private void ApplyColorToTargets() { }

	// RVA: 0x2404328 Offset: 0x2404328 VA: 0x2404328
	private void ApplyAudioToTargets() { }

	// RVA: 0x2404644 Offset: 0x2404644 VA: 0x2404644
	private void ApplyStabTargets() { }

	// RVA: 0x2404648 Offset: 0x2404648 VA: 0x2404648
	private void ApplyMoveToPathTargets() { }

	// RVA: 0x2404AD4 Offset: 0x2404AD4 VA: 0x2404AD4
	private void ApplyMoveToTargets() { }

	// RVA: 0x2404F84 Offset: 0x2404F84 VA: 0x2404F84
	private void ApplyMoveByTargets() { }

	// RVA: 0x24055E4 Offset: 0x24055E4 VA: 0x24055E4
	private void ApplyScaleToTargets() { }

	// RVA: 0x2405948 Offset: 0x2405948 VA: 0x2405948
	private void ApplyLookToTargets() { }

	// RVA: 0x2405D00 Offset: 0x2405D00 VA: 0x2405D00
	private void ApplyRotateToTargets() { }

	// RVA: 0x2406300 Offset: 0x2406300 VA: 0x2406300
	private void ApplyRotateAddTargets() { }

	// RVA: 0x2406854 Offset: 0x2406854 VA: 0x2406854
	private void ApplyShakePositionTargets() { }

	// RVA: 0x2406E34 Offset: 0x2406E34 VA: 0x2406E34
	private void ApplyShakeScaleTargets() { }

	// RVA: 0x2407244 Offset: 0x2407244 VA: 0x2407244
	private void ApplyShakeRotationTargets() { }

	// RVA: 0x2407734 Offset: 0x2407734 VA: 0x2407734
	private void ApplyPunchPositionTargets() { }

	// RVA: 0x2408034 Offset: 0x2408034 VA: 0x2408034
	private void ApplyPunchRotationTargets() { }

	// RVA: 0x2408768 Offset: 0x2408768 VA: 0x2408768
	private void ApplyPunchScaleTargets() { }

	[DebuggerHiddenAttribute] // RVA: 0xD43954 Offset: 0xD43954 VA: 0xD43954
	// RVA: 0x2408CC4 Offset: 0x2408CC4 VA: 0x2408CC4
	private IEnumerator TweenDelay() { }

	// RVA: 0x2408D34 Offset: 0x2408D34 VA: 0x2408D34
	private void TweenStart() { }

	[DebuggerHiddenAttribute] // RVA: 0xD43964 Offset: 0xD43964 VA: 0xD43964
	// RVA: 0x2409CCC Offset: 0x2409CCC VA: 0x2409CCC
	private IEnumerator TweenRestart() { }

	// RVA: 0x2409D3C Offset: 0x2409D3C VA: 0x2409D3C
	private void TweenUpdate() { }

	// RVA: 0x2409E28 Offset: 0x2409E28 VA: 0x2409E28
	private void TweenComplete() { }

	// RVA: 0x2409F24 Offset: 0x2409F24 VA: 0x2409F24
	private void TweenLoop() { }

	// RVA: 0x2409FD0 Offset: 0x2409FD0 VA: 0x2409FD0
	public static Rect RectUpdate(Rect currentValue, Rect targetValue, float speed) { }

	// RVA: 0x240A198 Offset: 0x240A198 VA: 0x240A198
	public static Vector3 Vector3Update(Vector3 currentValue, Vector3 targetValue, float speed) { }

	// RVA: 0x240A2A4 Offset: 0x240A2A4 VA: 0x240A2A4
	public static Vector2 Vector2Update(Vector2 currentValue, Vector2 targetValue, float speed) { }

	// RVA: 0x240A158 Offset: 0x240A158 VA: 0x240A158
	public static float FloatUpdate(float currentValue, float targetValue, float speed) { }

	// RVA: 0x240A388 Offset: 0x240A388 VA: 0x240A388
	public static void FadeUpdate(GameObject target, Hashtable args) { }

	// RVA: 0x240B488 Offset: 0x240B488 VA: 0x240B488
	public static void FadeUpdate(GameObject target, float alpha, float time) { }

	// RVA: 0x240A45C Offset: 0x240A45C VA: 0x240A45C
	public static void ColorUpdate(GameObject target, Hashtable args) { }

	// RVA: 0x240B6A0 Offset: 0x240B6A0 VA: 0x240B6A0
	public static void ColorUpdate(GameObject target, Color color, float time) { }

	// RVA: 0x240B8E4 Offset: 0x240B8E4 VA: 0x240B8E4
	public static void AudioUpdate(GameObject target, Hashtable args) { }

	// RVA: 0x240BF04 Offset: 0x240BF04 VA: 0x240BF04
	public static void AudioUpdate(GameObject target, float volume, float pitch, float time) { }

	// RVA: 0x240C1D8 Offset: 0x240C1D8 VA: 0x240C1D8
	public static void RotateUpdate(GameObject target, Hashtable args) { }

	// RVA: 0x240CA98 Offset: 0x240CA98 VA: 0x240CA98
	public static void RotateUpdate(GameObject target, Vector3 rotation, float time) { }

	// RVA: 0x240CCCC Offset: 0x240CCCC VA: 0x240CCCC
	public static void ScaleUpdate(GameObject target, Hashtable args) { }

	// RVA: 0x240D4C0 Offset: 0x240D4C0 VA: 0x240D4C0
	public static void ScaleUpdate(GameObject target, Vector3 scale, float time) { }

	// RVA: 0x240D6F4 Offset: 0x240D6F4 VA: 0x240D6F4
	public static void MoveUpdate(GameObject target, Hashtable args) { }

	// RVA: 0x240F02C Offset: 0x240F02C VA: 0x240F02C
	public static void MoveUpdate(GameObject target, Vector3 position, float time) { }

	// RVA: 0x240E214 Offset: 0x240E214 VA: 0x240E214
	public static void LookUpdate(GameObject target, Hashtable args) { }

	// RVA: 0x240F260 Offset: 0x240F260 VA: 0x240F260
	public static void LookUpdate(GameObject target, Vector3 looktarget, float time) { }

	// RVA: 0x240F494 Offset: 0x240F494 VA: 0x240F494
	public static float PathLength(Transform[] path) { }

	// RVA: 0x2401E9C Offset: 0x2401E9C VA: 0x2401E9C
	public static float PathLength(Vector3[] path) { }

	// RVA: 0x240FFE0 Offset: 0x240FFE0 VA: 0x240FFE0
	public static Texture2D CameraTexture(Color color) { }

	// RVA: 0x2410150 Offset: 0x2410150 VA: 0x2410150
	public static void PutOnPath(GameObject target, Vector3[] path, float percent) { }

	// RVA: 0x241022C Offset: 0x241022C VA: 0x241022C
	public static void PutOnPath(Transform target, Vector3[] path, float percent) { }

	// RVA: 0x24102E8 Offset: 0x24102E8 VA: 0x24102E8
	public static void PutOnPath(GameObject target, Transform[] path, float percent) { }

	// RVA: 0x241049C Offset: 0x241049C VA: 0x241049C
	public static void PutOnPath(Transform target, Transform[] path, float percent) { }

	// RVA: 0x2410630 Offset: 0x2410630 VA: 0x2410630
	public static Vector3 PointOnPath(Transform[] path, float percent) { }

	// RVA: 0x2410788 Offset: 0x2410788 VA: 0x2410788
	public static void DrawLine(Vector3[] line) { }

	// RVA: 0x2410A18 Offset: 0x2410A18 VA: 0x2410A18
	public static void DrawLine(Vector3[] line, Color color) { }

	// RVA: 0x2410AE4 Offset: 0x2410AE4 VA: 0x2410AE4
	public static void DrawLine(Transform[] line) { }

	// RVA: 0x2410CA4 Offset: 0x2410CA4 VA: 0x2410CA4
	public static void DrawLine(Transform[] line, Color color) { }

	// RVA: 0x2410E5C Offset: 0x2410E5C VA: 0x2410E5C
	public static void DrawLineGizmos(Vector3[] line) { }

	// RVA: 0x2410F48 Offset: 0x2410F48 VA: 0x2410F48
	public static void DrawLineGizmos(Vector3[] line, Color color) { }

	// RVA: 0x2411014 Offset: 0x2411014 VA: 0x2411014
	public static void DrawLineGizmos(Transform[] line) { }

	// RVA: 0x24111D4 Offset: 0x24111D4 VA: 0x24111D4
	public static void DrawLineGizmos(Transform[] line, Color color) { }

	// RVA: 0x241138C Offset: 0x241138C VA: 0x241138C
	public static void DrawLineHandles(Vector3[] line) { }

	// RVA: 0x2411478 Offset: 0x2411478 VA: 0x2411478
	public static void DrawLineHandles(Vector3[] line, Color color) { }

	// RVA: 0x2411544 Offset: 0x2411544 VA: 0x2411544
	public static void DrawLineHandles(Transform[] line) { }

	// RVA: 0x2411704 Offset: 0x2411704 VA: 0x2411704
	public static void DrawLineHandles(Transform[] line, Color color) { }

	// RVA: 0x24118BC Offset: 0x24118BC VA: 0x24118BC
	public static Vector3 PointOnPath(Vector3[] path, float percent) { }

	// RVA: 0x2411934 Offset: 0x2411934 VA: 0x2411934
	public static void DrawPath(Vector3[] path) { }

	// RVA: 0x2411C10 Offset: 0x2411C10 VA: 0x2411C10
	public static void DrawPath(Vector3[] path, Color color) { }

	// RVA: 0x2411CDC Offset: 0x2411CDC VA: 0x2411CDC
	public static void DrawPath(Transform[] path) { }

	// RVA: 0x2411E9C Offset: 0x2411E9C VA: 0x2411E9C
	public static void DrawPath(Transform[] path, Color color) { }

	// RVA: 0x2412054 Offset: 0x2412054 VA: 0x2412054
	public static void DrawPathGizmos(Vector3[] path) { }

	// RVA: 0x2412140 Offset: 0x2412140 VA: 0x2412140
	public static void DrawPathGizmos(Vector3[] path, Color color) { }

	// RVA: 0x241220C Offset: 0x241220C VA: 0x241220C
	public static void DrawPathGizmos(Transform[] path) { }

	// RVA: 0x24123CC Offset: 0x24123CC VA: 0x24123CC
	public static void DrawPathGizmos(Transform[] path, Color color) { }

	// RVA: 0x2412584 Offset: 0x2412584 VA: 0x2412584
	public static void DrawPathHandles(Vector3[] path) { }

	// RVA: 0x2412670 Offset: 0x2412670 VA: 0x2412670
	public static void DrawPathHandles(Vector3[] path, Color color) { }

	// RVA: 0x241273C Offset: 0x241273C VA: 0x241273C
	public static void DrawPathHandles(Transform[] path) { }

	// RVA: 0x24128FC Offset: 0x24128FC VA: 0x24128FC
	public static void DrawPathHandles(Transform[] path, Color color) { }

	// RVA: 0x2412AB4 Offset: 0x2412AB4 VA: 0x2412AB4
	public static void CameraFadeDepth(int depth) { }

	// RVA: 0x2412C64 Offset: 0x2412C64 VA: 0x2412C64
	public static void CameraFadeDestroy() { }

	// RVA: 0x2412D60 Offset: 0x2412D60 VA: 0x2412D60
	public static void CameraFadeSwap(Texture2D texture) { }

	// RVA: 0x2412E74 Offset: 0x2412E74 VA: 0x2412E74
	public static GameObject CameraFadeAdd(Texture2D texture, int depth) { }

	// RVA: 0x24130C8 Offset: 0x24130C8 VA: 0x24130C8
	public static GameObject CameraFadeAdd(Texture2D texture) { }

	// RVA: 0x2413348 Offset: 0x2413348 VA: 0x2413348
	public static GameObject CameraFadeAdd() { }

	// RVA: 0x24135D8 Offset: 0x24135D8 VA: 0x24135D8
	public static void Resume(GameObject target) { }

	// RVA: 0x2413960 Offset: 0x2413960 VA: 0x2413960
	public static void Resume(GameObject target, bool includechildren) { }

	// RVA: 0x2413C94 Offset: 0x2413C94 VA: 0x2413C94
	public static void Resume(GameObject target, string type) { }

	// RVA: 0x241413C Offset: 0x241413C VA: 0x241413C
	public static void Resume(GameObject target, string type, bool includechildren) { }

	// RVA: 0x24148F8 Offset: 0x24148F8 VA: 0x24148F8
	public static void Resume() { }

	// RVA: 0x2414AF8 Offset: 0x2414AF8 VA: 0x2414AF8
	public static void Resume(string type) { }

	// RVA: 0x2414E48 Offset: 0x2414E48 VA: 0x2414E48
	public static void Pause(GameObject target) { }

	// RVA: 0x2415238 Offset: 0x2415238 VA: 0x2415238
	public static void Pause(GameObject target, bool includechildren) { }

	// RVA: 0x241556C Offset: 0x241556C VA: 0x241556C
	public static void Pause(GameObject target, string type) { }

	// RVA: 0x2415A6C Offset: 0x2415A6C VA: 0x2415A6C
	public static void Pause(GameObject target, string type, bool includechildren) { }

	// RVA: 0x241627C Offset: 0x241627C VA: 0x241627C
	public static void Pause() { }

	// RVA: 0x241647C Offset: 0x241647C VA: 0x241647C
	public static void Pause(string type) { }

	// RVA: 0x24167CC Offset: 0x24167CC VA: 0x24167CC
	public static int Count() { }

	// RVA: 0x2416850 Offset: 0x2416850 VA: 0x2416850
	public static int Count(string type) { }

	// RVA: 0x2416BD8 Offset: 0x2416BD8 VA: 0x2416BD8
	public static int Count(GameObject target) { }

	// RVA: 0x2416D08 Offset: 0x2416D08 VA: 0x2416D08
	public static int Count(GameObject target, string type) { }

	// RVA: 0x2417190 Offset: 0x2417190 VA: 0x2417190
	public static void Stop() { }

	// RVA: 0x2417754 Offset: 0x2417754 VA: 0x2417754
	public static void Stop(string type) { }

	// RVA: 0x2417F44 Offset: 0x2417F44 VA: 0x2417F44
	public static void StopByName(string name) { }

	// RVA: 0x24173D4 Offset: 0x24173D4 VA: 0x24173D4
	public static void Stop(GameObject target) { }

	// RVA: 0x2418670 Offset: 0x2418670 VA: 0x2418670
	public static void Stop(GameObject target, bool includechildren) { }

	// RVA: 0x2417AA4 Offset: 0x2417AA4 VA: 0x2417AA4
	public static void Stop(GameObject target, string type) { }

	// RVA: 0x2418294 Offset: 0x2418294 VA: 0x2418294
	public static void StopByName(GameObject target, string name) { }

	// RVA: 0x24189A4 Offset: 0x24189A4 VA: 0x24189A4
	public static void Stop(GameObject target, string type, bool includechildren) { }

	// RVA: 0x2419158 Offset: 0x2419158 VA: 0x2419158
	public static void StopByName(GameObject target, string name, bool includechildren) { }

	// RVA: 0x23EE084 Offset: 0x23EE084 VA: 0x23EE084
	public static Hashtable Hash(object[] args) { }

	// RVA: 0x241983C Offset: 0x241983C VA: 0x241983C
	private void Awake() { }

	[DebuggerHiddenAttribute] // RVA: 0xD43974 Offset: 0xD43974 VA: 0xD43974
	// RVA: 0x241AC1C Offset: 0x241AC1C VA: 0x241AC1C
	private IEnumerator Start() { }

	// RVA: 0x241AC8C Offset: 0x241AC8C VA: 0x241AC8C
	private void Update() { }

	// RVA: 0x241ACCC Offset: 0x241ACCC VA: 0x241ACCC
	private void FixedUpdate() { }

	// RVA: 0x241AD0C Offset: 0x241AD0C VA: 0x241AD0C
	private void LateUpdate() { }

	// RVA: 0x241AE90 Offset: 0x241AE90 VA: 0x241AE90
	private void OnEnable() { }

	// RVA: 0x241AF60 Offset: 0x241AF60 VA: 0x241AF60
	private void OnDisable() { }

	// RVA: 0x2410874 Offset: 0x2410874 VA: 0x2410874
	private static void DrawLineHelper(Vector3[] line, Color color, string method) { }

	// RVA: 0x2411A20 Offset: 0x2411A20 VA: 0x2411A20
	private static void DrawPathHelper(Vector3[] path, Color color, string method) { }

	// RVA: 0x240F6CC Offset: 0x240F6CC VA: 0x240F6CC
	private static Vector3[] PathControlPointGenerator(Vector3[] path) { }

	// RVA: 0x240FB68 Offset: 0x240FB68 VA: 0x240FB68
	private static Vector3 Interp(Vector3[] pts, float t) { }

	// RVA: 0x23F07E0 Offset: 0x23F07E0 VA: 0x23F07E0
	private static void Launch(GameObject target, Hashtable args) { }

	// RVA: 0x23EFDB0 Offset: 0x23EFDB0 VA: 0x23EFDB0
	private static Hashtable CleanArgs(Hashtable args) { }

	// RVA: 0x241AF64 Offset: 0x241AF64 VA: 0x241AF64
	private static string GenerateID() { }

	// RVA: 0x2419884 Offset: 0x2419884 VA: 0x2419884
	private void RetrieveArgs() { }

	// RVA: 0x241B0F0 Offset: 0x241B0F0 VA: 0x241B0F0
	private void GetEasingFunction() { }

	// RVA: 0x2409DB0 Offset: 0x2409DB0 VA: 0x2409DB0
	private void UpdatePercentage() { }

	// RVA: 0x2408FC0 Offset: 0x2408FC0 VA: 0x2408FC0
	private void CallBack(string callbackType) { }

	// RVA: 0x2401B30 Offset: 0x2401B30 VA: 0x2401B30
	private void Dispose() { }

	// RVA: 0x2409378 Offset: 0x2409378 VA: 0x2409378
	private void ConflictCheck() { }

	// RVA: 0x2409CC8 Offset: 0x2409CC8 VA: 0x2409CC8
	private void EnableKinematic() { }

	// RVA: 0x2409FCC Offset: 0x2409FCC VA: 0x2409FCC
	private void DisableKinematic() { }

	// RVA: 0x241AF0C Offset: 0x241AF0C VA: 0x241AF0C
	private void ResumeDelay() { }

	// RVA: 0x241B4E4 Offset: 0x241B4E4 VA: 0x241B4E4
	private float linear(float start, float end, float value) { }

	// RVA: 0x2401DD0 Offset: 0x2401DD0 VA: 0x2401DD0
	private float clerp(float start, float end, float value) { }

	// RVA: 0x241B56C Offset: 0x241B56C VA: 0x241B56C
	private float spring(float start, float end, float value) { }

	// RVA: 0x241B670 Offset: 0x241B670 VA: 0x241B670
	private float easeInQuad(float start, float end, float value) { }

	// RVA: 0x241B684 Offset: 0x241B684 VA: 0x241B684
	private float easeOutQuad(float start, float end, float value) { }

	// RVA: 0x241B6A0 Offset: 0x241B6A0 VA: 0x241B6A0
	private float easeInOutQuad(float start, float end, float value) { }

	// RVA: 0x241B6F4 Offset: 0x241B6F4 VA: 0x241B6F4
	private float easeInCubic(float start, float end, float value) { }

	// RVA: 0x241B70C Offset: 0x241B70C VA: 0x241B70C
	private float easeOutCubic(float start, float end, float value) { }

	// RVA: 0x241B734 Offset: 0x241B734 VA: 0x241B734
	private float easeInOutCubic(float start, float end, float value) { }

	// RVA: 0x241B78C Offset: 0x241B78C VA: 0x241B78C
	private float easeInQuart(float start, float end, float value) { }

	// RVA: 0x241B7A8 Offset: 0x241B7A8 VA: 0x241B7A8
	private float easeOutQuart(float start, float end, float value) { }

	// RVA: 0x241B7D0 Offset: 0x241B7D0 VA: 0x241B7D0
	private float easeInOutQuart(float start, float end, float value) { }

	// RVA: 0x241B82C Offset: 0x241B82C VA: 0x241B82C
	private float easeInQuint(float start, float end, float value) { }

	// RVA: 0x241B84C Offset: 0x241B84C VA: 0x241B84C
	private float easeOutQuint(float start, float end, float value) { }

	// RVA: 0x241B87C Offset: 0x241B87C VA: 0x241B87C
	private float easeInOutQuint(float start, float end, float value) { }

	// RVA: 0x241B8E4 Offset: 0x241B8E4 VA: 0x241B8E4
	private float easeInSine(float start, float end, float value) { }

	// RVA: 0x241B97C Offset: 0x241B97C VA: 0x241B97C
	private float easeOutSine(float start, float end, float value) { }

	// RVA: 0x241BA10 Offset: 0x241BA10 VA: 0x241BA10
	private float easeInOutSine(float start, float end, float value) { }

	// RVA: 0x241BAB4 Offset: 0x241BAB4 VA: 0x241BAB4
	private float easeInExpo(float start, float end, float value) { }

	// RVA: 0x241BB4C Offset: 0x241BB4C VA: 0x241BB4C
	private float easeOutExpo(float start, float end, float value) { }

	// RVA: 0x241BBE4 Offset: 0x241BBE4 VA: 0x241BBE4
	private float easeInOutExpo(float start, float end, float value) { }

	// RVA: 0x241BCD4 Offset: 0x241BCD4 VA: 0x241BCD4
	private float easeInCirc(float start, float end, float value) { }

	// RVA: 0x241BD80 Offset: 0x241BD80 VA: 0x241BD80
	private float easeOutCirc(float start, float end, float value) { }

	// RVA: 0x241BE2C Offset: 0x241BE2C VA: 0x241BE2C
	private float easeInOutCirc(float start, float end, float value) { }

	// RVA: 0x241BF24 Offset: 0x241BF24 VA: 0x241BF24
	private float easeInBounce(float start, float end, float value) { }

	// RVA: 0x241BF60 Offset: 0x241BF60 VA: 0x241BF60
	private float easeOutBounce(float start, float end, float value) { }

	// RVA: 0x241C030 Offset: 0x241C030 VA: 0x241C030
	private float easeInOutBounce(float start, float end, float value) { }

	// RVA: 0x241C0B4 Offset: 0x241C0B4 VA: 0x241C0B4
	private float easeInBack(float start, float end, float value) { }

	// RVA: 0x241C0E4 Offset: 0x241C0E4 VA: 0x241C0E4
	private float easeOutBack(float start, float end, float value) { }

	// RVA: 0x241C124 Offset: 0x241C124 VA: 0x241C124
	private float easeInOutBack(float start, float end, float value) { }

	// RVA: 0x2407F74 Offset: 0x2407F74 VA: 0x2407F74
	private float punch(float amplitude, float value) { }

	// RVA: 0x241C1A8 Offset: 0x241C1A8 VA: 0x241C1A8
	private float easeInElastic(float start, float end, float value) { }

	// RVA: 0x241C290 Offset: 0x241C290 VA: 0x241C290
	private float easeOutElastic(float start, float end, float value) { }

	// RVA: 0x241C374 Offset: 0x241C374 VA: 0x241C374
	private float easeInOutElastic(float start, float end, float value) { }

	// RVA: 0x241C4D8 Offset: 0x241C4D8 VA: 0x241C4D8
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD43984 Offset: 0xD43984 VA: 0xD43984
	// RVA: 0x241C544 Offset: 0x241C544 VA: 0x241C544
	private static bool <AddOrRecycleTweenComponent>m__0(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD43994 Offset: 0xD43994 VA: 0xD43994
	// RVA: 0x241C56C Offset: 0x241C56C VA: 0x241C56C
	private static bool <Resume>m__1(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD439A4 Offset: 0xD439A4 VA: 0xD439A4
	// RVA: 0x241C59C Offset: 0x241C59C VA: 0x241C59C
	private static bool <Resume>m__2(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD439B4 Offset: 0xD439B4 VA: 0xD439B4
	// RVA: 0x241C5CC Offset: 0x241C5CC VA: 0x241C5CC
	private static bool <Resume>m__3(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD439C4 Offset: 0xD439C4 VA: 0xD439C4
	// RVA: 0x241C5FC Offset: 0x241C5FC VA: 0x241C5FC
	private static bool <Pause>m__4(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD439D4 Offset: 0xD439D4 VA: 0xD439D4
	// RVA: 0x241C62C Offset: 0x241C62C VA: 0x241C62C
	private static bool <Pause>m__5(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD439E4 Offset: 0xD439E4 VA: 0xD439E4
	// RVA: 0x241C65C Offset: 0x241C65C VA: 0x241C65C
	private static bool <Pause>m__6(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD439F4 Offset: 0xD439F4 VA: 0xD439F4
	// RVA: 0x241C68C Offset: 0x241C68C VA: 0x241C68C
	private static bool <Count>m__7(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD43A04 Offset: 0xD43A04 VA: 0xD43A04
	// RVA: 0x241C6BC Offset: 0x241C6BC VA: 0x241C6BC
	private static bool <Count>m__8(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD43A14 Offset: 0xD43A14 VA: 0xD43A14
	// RVA: 0x241C6EC Offset: 0x241C6EC VA: 0x241C6EC
	private static bool <Stop>m__9(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD43A24 Offset: 0xD43A24 VA: 0xD43A24
	// RVA: 0x241C71C Offset: 0x241C71C VA: 0x241C71C
	private static bool <Stop>m__A(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD43A34 Offset: 0xD43A34 VA: 0xD43A34
	// RVA: 0x241C74C Offset: 0x241C74C VA: 0x241C74C
	private static bool <StopByName>m__B(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD43A44 Offset: 0xD43A44 VA: 0xD43A44
	// RVA: 0x241C77C Offset: 0x241C77C VA: 0x241C77C
	private static bool <Stop>m__C(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD43A54 Offset: 0xD43A54 VA: 0xD43A54
	// RVA: 0x241C7AC Offset: 0x241C7AC VA: 0x241C7AC
	private static bool <StopByName>m__D(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD43A64 Offset: 0xD43A64 VA: 0xD43A64
	// RVA: 0x241C7DC Offset: 0x241C7DC VA: 0x241C7DC
	private static bool <ConflictCheck>m__E(iTween x) { }
}

// Namespace: 
private sealed class iTween.EasingFunction : MulticastDelegate // TypeDefIndex: 11999
{
	// Methods

	// RVA: 0x2B7A0F0 Offset: 0x2B7A0F0 VA: 0x2B7A0F0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2B7A100 Offset: 0x2B7A100 VA: 0x2B7A100 Slot: 11
	public virtual float Invoke(float start, float end, float value) { }

	// RVA: 0x2B7A380 Offset: 0x2B7A380 VA: 0x2B7A380 Slot: 12
	public virtual IAsyncResult BeginInvoke(float start, float end, float value, AsyncCallback callback, object object) { }

	// RVA: 0x2B7A438 Offset: 0x2B7A438 VA: 0x2B7A438 Slot: 13
	public virtual float EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private sealed class iTween.ApplyTween : MulticastDelegate // TypeDefIndex: 12000
{
	// Methods

	// RVA: 0x2B797FC Offset: 0x2B797FC VA: 0x2B797FC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2B7980C Offset: 0x2B7980C VA: 0x2B7980C Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x2B79A0C Offset: 0x2B79A0C VA: 0x2B79A0C Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x2B79A40 Offset: 0x2B79A40 VA: 0x2B79A40 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public enum iTween.EaseType // TypeDefIndex: 12001
{
	// Fields
	public int value__; // 0x0
	public const iTween.EaseType easeInQuad = 0;
	public const iTween.EaseType easeOutQuad = 1;
	public const iTween.EaseType easeInOutQuad = 2;
	public const iTween.EaseType easeInCubic = 3;
	public const iTween.EaseType easeOutCubic = 4;
	public const iTween.EaseType easeInOutCubic = 5;
	public const iTween.EaseType easeInQuart = 6;
	public const iTween.EaseType easeOutQuart = 7;
	public const iTween.EaseType easeInOutQuart = 8;
	public const iTween.EaseType easeInQuint = 9;
	public const iTween.EaseType easeOutQuint = 10;
	public const iTween.EaseType easeInOutQuint = 11;
	public const iTween.EaseType easeInSine = 12;
	public const iTween.EaseType easeOutSine = 13;
	public const iTween.EaseType easeInOutSine = 14;
	public const iTween.EaseType easeInExpo = 15;
	public const iTween.EaseType easeOutExpo = 16;
	public const iTween.EaseType easeInOutExpo = 17;
	public const iTween.EaseType easeInCirc = 18;
	public const iTween.EaseType easeOutCirc = 19;
	public const iTween.EaseType easeInOutCirc = 20;
	public const iTween.EaseType linear = 21;
	public const iTween.EaseType spring = 22;
	public const iTween.EaseType easeInBounce = 23;
	public const iTween.EaseType easeOutBounce = 24;
	public const iTween.EaseType easeInOutBounce = 25;
	public const iTween.EaseType easeInBack = 26;
	public const iTween.EaseType easeOutBack = 27;
	public const iTween.EaseType easeInOutBack = 28;
	public const iTween.EaseType easeInElastic = 29;
	public const iTween.EaseType easeOutElastic = 30;
	public const iTween.EaseType easeInOutElastic = 31;
	public const iTween.EaseType punch = 32;
}

// Namespace: 
public enum iTween.LoopType // TypeDefIndex: 12002
{
	// Fields
	public int value__; // 0x0
	public const iTween.LoopType none = 0;
	public const iTween.LoopType loop = 1;
	public const iTween.LoopType pingPong = 2;
}

// Namespace: 
public enum iTween.NamedValueColor // TypeDefIndex: 12003
{
	// Fields
	public int value__; // 0x0
	public const iTween.NamedValueColor _Color = 0;
	public const iTween.NamedValueColor _SpecColor = 1;
	public const iTween.NamedValueColor _Emission = 2;
	public const iTween.NamedValueColor _ReflectColor = 3;
}

// Namespace: 
public static class iTween.Defaults // TypeDefIndex: 12004
{
	// Fields
	public static float time; // 0x0
	public static float delay; // 0x4
	public static iTween.NamedValueColor namedColorValue; // 0x8
	public static iTween.LoopType loopType; // 0xC
	public static iTween.EaseType easeType; // 0x10
	public static float lookSpeed; // 0x14
	public static bool isLocal; // 0x18
	public static Space space; // 0x1C
	public static bool orientToPath; // 0x20
	public static Color color; // 0x24
	public static float updateTimePercentage; // 0x34
	public static float updateTime; // 0x38
	public static int cameraFadeDepth; // 0x3C
	public static float lookAhead; // 0x40
	public static bool useRealTime; // 0x44
	public static Vector3 up; // 0x48

	// Methods

	// RVA: 0x2B79FBC Offset: 0x2B79FBC VA: 0x2B79FBC
	private static void .cctor() { }
}

// Namespace: 
private class iTween.CRSpline // TypeDefIndex: 12005
{
	// Fields
	public Vector3[] pts; // 0x10

	// Methods

	// RVA: 0x2B79A4C Offset: 0x2B79A4C VA: 0x2B79A4C
	public void .ctor(Vector3[] pts) { }

	// RVA: 0x2B79AE8 Offset: 0x2B79AE8 VA: 0x2B79AE8
	public Vector3 Interp(float t) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2EB0 Offset: 0xCB2EB0 VA: 0xCB2EB0
private sealed class iTween.<TweenDelay>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 12006
{
	// Fields
	internal iTween $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD4B204 Offset: 0xD4B204 VA: 0xD4B204
	// RVA: 0x2B79430 Offset: 0x2B79430 VA: 0x2B79430
	public void .ctor() { }

	// RVA: 0x2B79438 Offset: 0x2B79438 VA: 0x2B79438 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B214 Offset: 0xD4B214 VA: 0xD4B214
	// RVA: 0x2B7957C Offset: 0x2B7957C VA: 0x2B7957C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B224 Offset: 0xD4B224 VA: 0xD4B224
	// RVA: 0x2B79584 Offset: 0x2B79584 VA: 0x2B79584 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B234 Offset: 0xD4B234 VA: 0xD4B234
	// RVA: 0x2B7958C Offset: 0x2B7958C VA: 0x2B7958C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B244 Offset: 0xD4B244 VA: 0xD4B244
	// RVA: 0x2B795A0 Offset: 0x2B795A0 VA: 0x2B795A0 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2EC0 Offset: 0xCB2EC0 VA: 0xCB2EC0
private sealed class iTween.<TweenRestart>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 12007
{
	// Fields
	internal iTween $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD4B254 Offset: 0xD4B254 VA: 0xD4B254
	// RVA: 0x2B79608 Offset: 0x2B79608 VA: 0x2B79608
	public void .ctor() { }

	// RVA: 0x2B79610 Offset: 0x2B79610 VA: 0x2B79610 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B264 Offset: 0xD4B264 VA: 0xD4B264
	// RVA: 0x2B79770 Offset: 0x2B79770 VA: 0x2B79770 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B274 Offset: 0xD4B274 VA: 0xD4B274
	// RVA: 0x2B79778 Offset: 0x2B79778 VA: 0x2B79778 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B284 Offset: 0xD4B284 VA: 0xD4B284
	// RVA: 0x2B79780 Offset: 0x2B79780 VA: 0x2B79780 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B294 Offset: 0xD4B294 VA: 0xD4B294
	// RVA: 0x2B79794 Offset: 0x2B79794 VA: 0x2B79794 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2ED0 Offset: 0xCB2ED0 VA: 0xCB2ED0
private sealed class iTween.<Start>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 12008
{
	// Fields
	internal iTween $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD4B2A4 Offset: 0xD4B2A4 VA: 0xD4B2A4
	// RVA: 0x2B7925C Offset: 0x2B7925C VA: 0x2B7925C
	public void .ctor() { }

