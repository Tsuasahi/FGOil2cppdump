	// RVA: 0x14A3668 Offset: 0x14A3668 VA: 0x14A3668
	private void HideCompleteMissionIconLb() { }

	// RVA: 0x14A2F54 Offset: 0x14A2F54 VA: 0x14A2F54
	private int GetCompleteMissionClearCount(EventMissionEntity[] eventMissionList, CompleteMissionComponent.Type type) { }

	// RVA: 0x14A3714 Offset: 0x14A3714 VA: 0x14A3714
	public void OpenCompleteMission(Action callback) { }

	// RVA: 0x14A38D0 Offset: 0x14A38D0 VA: 0x14A38D0
	public void OnClickCompleteMissionBtn() { }

	// RVA: 0x14A3C44 Offset: 0x14A3C44 VA: 0x14A3C44
	protected void ExitCompleteMission(bool isDecide) { }

	// RVA: 0x14A0D3C Offset: 0x14A0D3C VA: 0x14A0D3C
	private bool IsLimitedMissionEnableTime() { }

	// RVA: 0x14A3D94 Offset: 0x14A3D94 VA: 0x14A3D94
	private void checkIsOpen() { }

	// RVA: 0x14A03D0 Offset: 0x14A03D0 VA: 0x14A03D0
	private void reDispMissionList() { }

	// RVA: 0x14A4008 Offset: 0x14A4008 VA: 0x14A4008
	private List<EventMissionEntity> getVaildDailyMissionData() { }

	// RVA: 0x14A4588 Offset: 0x14A4588 VA: 0x14A4588
	private List<EventMissionEntity> getVaildWeeklyMissionData() { }

	// RVA: 0x14A4BBC Offset: 0x14A4BBC VA: 0x14A4BBC
	private List<EventMissionEntity> getValidExtraMissionData() { }

	// RVA: 0x14A5158 Offset: 0x14A5158 VA: 0x14A5158
	private List<EventMissionEntity> getVaildLimitedMissionData() { }

	// RVA: 0x14A57A0 Offset: 0x14A57A0 VA: 0x14A57A0
	private void setMissionCompleteNum() { }

	// RVA: 0x14A2AAC Offset: 0x14A2AAC VA: 0x14A2AAC
	private void setGuideSvtVoice() { }

	// RVA: 0x14A5A38 Offset: 0x14A5A38 VA: 0x14A5A38
	private void OnCompleteLoadVoiceAsset() { }

	// RVA: 0x14A59A8 Offset: 0x14A59A8 VA: 0x14A59A8
	private void EndLoadVoiceAssets() { }

	// RVA: 0x14A2704 Offset: 0x14A2704 VA: 0x14A2704
	private void SetMissionClearNum() { }

	// RVA: 0x14A5C14 Offset: 0x14A5C14 VA: 0x14A5C14
	private int GetMissionClearCount(EventMissionEntity[] eventMissionList, MasterMissionComponent.Type type) { }

	// RVA: 0x14A5E84 Offset: 0x14A5E84 VA: 0x14A5E84
	private void SetDailyMissionList() { }

	// RVA: 0x14A648C Offset: 0x14A648C VA: 0x14A648C
	private void SetWeeklyMissionList() { }

	// RVA: 0x14A65E4 Offset: 0x14A65E4 VA: 0x14A65E4
	private void SetExtraMissionList() { }

	// RVA: 0x14A673C Offset: 0x14A673C VA: 0x14A673C
	private void SetLimitedMissionList() { }

	// RVA: 0x14A1F20 Offset: 0x14A1F20 VA: 0x14A1F20
	private void SetMissionDisp() { }

	// RVA: 0x14A2A04 Offset: 0x14A2A04 VA: 0x14A2A04
	private void setMySvtFigure() { }

	// RVA: 0x14A5A54 Offset: 0x14A5A54 VA: 0x14A5A54
	private void setCurrentSvtVoice() { }

	// RVA: 0x14A6ABC Offset: 0x14A6ABC VA: 0x14A6ABC
	public void OnClickSvt() { }

	// RVA: 0x14A6894 Offset: 0x14A6894 VA: 0x14A6894
	private void playSvtVoice() { }

	// RVA: 0x14A6BCC Offset: 0x14A6BCC VA: 0x14A6BCC
	public void playEventMissionSvtVoice(string[] voiceIDs) { }

	// RVA: 0x14A6CC4 Offset: 0x14A6CC4 VA: 0x14A6CC4
	public void playEventMissionSvtVoice(string[] voiceIDs, Action action) { }

	// RVA: 0x14A6B10 Offset: 0x14A6B10 VA: 0x14A6B10
	public void setNormalFace() { }

	// RVA: 0x14A6E0C Offset: 0x14A6E0C VA: 0x14A6E0C
	public void stopSvtVoice() { }

	// RVA: 0x14A6E48 Offset: 0x14A6E48 VA: 0x14A6E48
	public void OnClickShopBtn() { }

	// RVA: 0x14A19D0 Offset: 0x14A19D0 VA: 0x14A19D0
	private void ChangeTabImage() { }

	// RVA: 0x14A6FC4 Offset: 0x14A6FC4 VA: 0x14A6FC4
	public void OnClickDailyTab() { }

	// RVA: 0x14A705C Offset: 0x14A705C VA: 0x14A705C
	public void OnClickWeeklyTab() { }

	// RVA: 0x14A70FC Offset: 0x14A70FC VA: 0x14A70FC
	public void OnClickExtraTab() { }

	// RVA: 0x14A719C Offset: 0x14A719C VA: 0x14A719C
	public void OnClickLimitedTab() { }

	// RVA: 0x14A723C Offset: 0x14A723C VA: 0x14A723C
	public void CheckRewardAcceptable() { }

	// RVA: 0x14A75C4 Offset: 0x14A75C4 VA: 0x14A75C4
	public void UnAcceptableRewardDlg() { }

	// RVA: 0x14A76A4 Offset: 0x14A76A4 VA: 0x14A76A4
	public void RequestMissionReward() { }

	// RVA: 0x14A77C8 Offset: 0x14A77C8 VA: 0x14A77C8
	private void missionRewardCallback(string result) { }

	// RVA: 0x14A79EC Offset: 0x14A79EC VA: 0x14A79EC
	public void SetAfterAction() { }

	// RVA: 0x14A7B04 Offset: 0x14A7B04 VA: 0x14A7B04
	public void AcceptReward() { }

	// RVA: 0x14A8B44 Offset: 0x14A8B44 VA: 0x14A8B44
	private void ReleaseSvtVoiceData() { }

	// RVA: 0x14A8CB4 Offset: 0x14A8CB4 VA: 0x14A8CB4
	private void destroySvtFigure() { }

	// RVA: 0x14A7BD0 Offset: 0x14A7BD0 VA: 0x14A7BD0
	public void SetBtnEnable(bool isEnable) { }

	// RVA: 0x14A8CE4 Offset: 0x14A8CE4 VA: 0x14A8CE4
	public void OnClickBack() { }

	// RVA: 0x14A8F98 Offset: 0x14A8F98 VA: 0x14A8F98
	public void Close() { }

	// RVA: 0x14A9198 Offset: 0x14A9198 VA: 0x14A9198
	public void setRecieveModifyItem() { }

	// RVA: 0x14A9730 Offset: 0x14A9730 VA: 0x14A9730
	public MasterMissionListViewManager get_listViewManager() { }

	// RVA: 0x14A1500 Offset: 0x14A1500 VA: 0x14A1500
	public void RefreshInfo() { }

	// RVA: 0x14A9780 Offset: 0x14A9780 VA: 0x14A9780
	private void UpdateStoneExchangeCount(int fragmentCount) { }

	// RVA: 0x14A991C Offset: 0x14A991C VA: 0x14A991C
	public void OnClickHelp() { }

	// RVA: 0x14A2EE0 Offset: 0x14A2EE0 VA: 0x14A2EE0
	public void OpenHelp() { }

	// RVA: 0x14A9984 Offset: 0x14A9984 VA: 0x14A9984
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7ED4 Offset: 0xCC7ED4 VA: 0xCC7ED4
	// RVA: 0x14A9AD4 Offset: 0x14A9AD4 VA: 0x14A9AD4
	private void <Open>m__0(int stoneCount) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7EE4 Offset: 0xCC7EE4 VA: 0xCC7EE4
	// RVA: 0x14A9B6C Offset: 0x14A9B6C VA: 0x14A9B6C
	private void <LoadNotificationEnd>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7EF4 Offset: 0xCC7EF4 VA: 0xCC7EF4
	// RVA: 0x14A9B78 Offset: 0x14A9B78 VA: 0x14A9B78
	private static void <OpenCompleteMission>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7F04 Offset: 0xCC7F04 VA: 0xCC7F04
	// RVA: 0x14A9BF0 Offset: 0x14A9BF0 VA: 0x14A9BF0
	private static void <OnClickCompleteMissionBtn>m__3() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7F14 Offset: 0xCC7F14 VA: 0xCC7F14
	// RVA: 0x14A9BF4 Offset: 0x14A9BF4 VA: 0x14A9BF4
	private void <OnClickCompleteMissionBtn>m__4() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7F24 Offset: 0xCC7F24 VA: 0xCC7F24
	// RVA: 0x14A9C60 Offset: 0x14A9C60 VA: 0x14A9C60
	private static void <ExitCompleteMission>m__5() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7F34 Offset: 0xCC7F34 VA: 0xCC7F34
	// RVA: 0x14A9DA4 Offset: 0x14A9DA4 VA: 0x14A9DA4
	private static void <reDispMissionList>m__6() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7F44 Offset: 0xCC7F44 VA: 0xCC7F44
	// RVA: 0x14A9E08 Offset: 0x14A9E08 VA: 0x14A9E08
	private static void <OnClickShopBtn>m__7() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7F54 Offset: 0xCC7F54 VA: 0xCC7F54
	// RVA: 0x14A9EDC Offset: 0x14A9EDC VA: 0x14A9EDC
	private void <AcceptReward>m__8() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7F64 Offset: 0xCC7F64 VA: 0xCC7F64
	// RVA: 0x14A9EE4 Offset: 0x14A9EE4 VA: 0x14A9EE4
	private void <setRecieveModifyItem>m__9() { }
}

// Namespace: 
public class MasterMissionComponent.MasterMissionInfoItem // TypeDefIndex: 5537
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC4D9F0 Offset: 0xC4D9F0 VA: 0xC4D9F0
	[DebuggerBrowsableAttribute] // RVA: 0xC4D9F0 Offset: 0xC4D9F0 VA: 0xC4D9F0
	private MstMissionEntity <MstMissionEntity>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC4DA2C Offset: 0xC4DA2C VA: 0xC4DA2C
	[DebuggerBrowsableAttribute] // RVA: 0xC4DA2C Offset: 0xC4DA2C VA: 0xC4DA2C
	private int <MissionCount>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC4DA68 Offset: 0xC4DA68 VA: 0xC4DA68
	[DebuggerBrowsableAttribute] // RVA: 0xC4DA68 Offset: 0xC4DA68 VA: 0xC4DA68
	private int <MissionClearCount>k__BackingField; // 0x1C
	[CompilerGeneratedAttribute] // RVA: 0xC4DAA4 Offset: 0xC4DAA4 VA: 0xC4DAA4
	[DebuggerBrowsableAttribute] // RVA: 0xC4DAA4 Offset: 0xC4DAA4 VA: 0xC4DAA4
	private int <MissionAchiveCount>k__BackingField; // 0x20

	// Properties
	public MstMissionEntity MstMissionEntity { get; set; }
	public int MissionCount { get; set; }
	public int MissionClearCount { get; set; }
	public int MissionAchiveCount { get; set; }

	// Methods

	// RVA: 0x14A3104 Offset: 0x14A3104 VA: 0x14A3104
	public void .ctor(MstMissionEntity mstMission, int missionCnt, int clearCnt, int achiveCnt) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7F74 Offset: 0xCC7F74 VA: 0xCC7F74
	// RVA: 0x14A36FC Offset: 0x14A36FC VA: 0x14A36FC
	public MstMissionEntity get_MstMissionEntity() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7F84 Offset: 0xCC7F84 VA: 0xCC7F84
	// RVA: 0x14AA050 Offset: 0x14AA050 VA: 0x14AA050
	private void set_MstMissionEntity(MstMissionEntity value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7F94 Offset: 0xCC7F94 VA: 0xCC7F94
	// RVA: 0x14A370C Offset: 0x14A370C VA: 0x14A370C
	public int get_MissionCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7FA4 Offset: 0xCC7FA4 VA: 0xCC7FA4
	// RVA: 0x14AA058 Offset: 0x14AA058 VA: 0x14AA058
	private void set_MissionCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7FB4 Offset: 0xCC7FB4 VA: 0xCC7FB4
	// RVA: 0x14AA070 Offset: 0x14AA070 VA: 0x14AA070
	public int get_MissionClearCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7FC4 Offset: 0xCC7FC4 VA: 0xCC7FC4
	// RVA: 0x14AA060 Offset: 0x14AA060 VA: 0x14AA060
	private void set_MissionClearCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7FD4 Offset: 0xCC7FD4 VA: 0xCC7FD4
	// RVA: 0x14A3704 Offset: 0x14A3704 VA: 0x14A3704
	public int get_MissionAchiveCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7FE4 Offset: 0xCC7FE4 VA: 0xCC7FE4
	// RVA: 0x14AA068 Offset: 0x14AA068 VA: 0x14AA068
	private void set_MissionAchiveCount(int value) { }
}

// Namespace: 
public sealed class MasterMissionComponent.ClickDelegate : MulticastDelegate // TypeDefIndex: 5538
{
	// Methods

	// RVA: 0x14A9FA4 Offset: 0x14A9FA4 VA: 0x14A9FA4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x14A8D6C Offset: 0x14A8D6C VA: 0x14A8D6C Slot: 11
	public virtual void Invoke(bool isDecide) { }

	// RVA: 0x14A9FB4 Offset: 0x14A9FB4 VA: 0x14A9FB4 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isDecide, AsyncCallback callback, object object) { }

	// RVA: 0x14AA044 Offset: 0x14AA044 VA: 0x14AA044 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public enum MasterMissionComponent.Type // TypeDefIndex: 5539
{
	// Fields
	public int value__; // 0x0
	public const MasterMissionComponent.Type NONE = -1;
	public const MasterMissionComponent.Type DAILY = 0;
	public const MasterMissionComponent.Type WEEKLY = 1;
	public const MasterMissionComponent.Type EXTRA = 2;
	public const MasterMissionComponent.Type LIMITED = 3;
}

// Namespace: 
public class MasterMissionComponent.VoiceData // TypeDefIndex: 5540
{
	// Fields
	public string DataName; // 0x10
	public List<ServantVoiceData[]> DataListRand; // 0x18
	public List<ServantVoiceData[]> DataListMission; // 0x20

	// Methods

	// RVA: 0x14A5968 Offset: 0x14A5968 VA: 0x14A5968
	public void .ctor(string voiceDataName, List<ServantVoiceData[]> voiceDataListRand, List<ServantVoiceData[]> voiceDataListMission) { }
}

// Namespace: 
private class MasterMissionComponent.resData // TypeDefIndex: 5541
{
	// Fields
	public GetSvts[] getSvts; // 0x10
	public GetCommandCodes[] getCommandCodes; // 0x18

	// Methods

	// RVA: 0x14AA078 Offset: 0x14AA078 VA: 0x14AA078
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41EC4 Offset: 0xC41EC4 VA: 0xC41EC4
private sealed class MasterMissionComponent.<playEventMissionSvtVoice>c__AnonStorey0 // TypeDefIndex: 5542
{
	// Fields
	internal Action action; // 0x10
	internal MasterMissionComponent $this; // 0x18

	// Methods

	// RVA: 0x14A6E04 Offset: 0x14A6E04 VA: 0x14A6E04
	public void .ctor() { }

	// RVA: 0x14A9F58 Offset: 0x14A9F58 VA: 0x14A9F58
	internal void <>m__0() { }
}

// Namespace: 
public class MasterMissionListViewItem : MissionListViewItem // TypeDefIndex: 5543
{
	// Fields
	private MasterMissionComponent.Type missionType; // 0x120

	// Properties
	public MasterMissionComponent.Type MissionType { get; }
	public bool IsHideReward { get; }

	// Methods

	// RVA: 0x14A5D00 Offset: 0x14A5D00 VA: 0x14A5D00
	public void .ctor(EventMissionEntity missionData, MasterMissionComponent.Type type) { }

	// RVA: 0x14AA080 Offset: 0x14AA080 VA: 0x14AA080 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x14AA1DC Offset: 0x14AA1DC VA: 0x14AA1DC
	public MasterMissionComponent.Type get_MissionType() { }

	// RVA: 0x14AA1E4 Offset: 0x14AA1E4 VA: 0x14AA1E4
	public bool get_IsHideReward() { }
}

// Namespace: 
public class MasterMissionListViewItemDraw : MissionListViewItemDraw // TypeDefIndex: 5544
{
	// Methods

	// RVA: 0x14AA228 Offset: 0x14AA228 VA: 0x14AA228
	public void .ctor() { }

	// RVA: 0x14AA290 Offset: 0x14AA290 VA: 0x14AA290 Slot: 4
	public override bool SetItem(MissionListViewItem missionListViewItem, MissionListViewItemDraw.DispMode mode, ListViewManager listViewManager) { }

	// RVA: 0x14AA8F8 Offset: 0x14AA8F8 VA: 0x14AA8F8 Slot: 5
	protected override void InitDispResTime(MissionListViewItem missionListviewItem) { }

	// RVA: 0x14AABF0 Offset: 0x14AABF0 VA: 0x14AABF0 Slot: 7
	protected override bool IsUseDefaultLockBoard() { }

	// RVA: 0x14AA3EC Offset: 0x14AA3EC VA: 0x14AA3EC
	private void SetRewardItemIcon(MasterMissionListViewItem item, MasterMissionListViewManager manager) { }

	// RVA: 0x14AABF8 Offset: 0x14AABF8 VA: 0x14AABF8 Slot: 9
	public override void UpdateDispResTime(MissionListViewItem missionListViewItem, long nowTime) { }

	// RVA: 0x14AAF78 Offset: 0x14AAF78 VA: 0x14AAF78
	public void UpdateItem(MasterMissionListViewItem item, MissionListViewItemDraw.DispMode mode, MasterMissionListViewManager manager) { }

	// RVA: 0x14AB0EC Offset: 0x14AB0EC VA: 0x14AB0EC
	public void OnChangeAlphaAnim(MasterMissionListViewItem item, MissionListViewItemDraw.DispMode mode, MasterMissionListViewManager manager) { }

	// RVA: 0x14AB0F4 Offset: 0x14AB0F4 VA: 0x14AB0F4
	private void ChangeNextRewardIcon(MasterMissionListViewManager manager) { }
}

// Namespace: 
public class MasterMissionListViewManager : MissionListViewManager // TypeDefIndex: 5545
{
	// Fields
	[SerializeField] // RVA: 0xC4DAE0 Offset: 0xC4DAE0 VA: 0xC4DAE0
	protected PlayMakerFSM targetFSM; // 0x1A0
	private QuestRewardItemAction mRewardItemAction; // 0x1A8
	protected bool isEndEvent; // 0x1B0
	protected MasterMissionListViewManager.FilterStatus filterStatus; // 0x1B4
	[SerializeField] // RVA: 0xC4DAF0 Offset: 0xC4DAF0 VA: 0xC4DAF0
	protected UICommonButton filterBtn; // 0x1B8
	[SerializeField] // RVA: 0xC4DB00 Offset: 0xC4DB00 VA: 0xC4DB00
	protected UISprite filterBtnTxt; // 0x1C0
	protected ListViewSort baseSortInfo; // 0x1C8
	protected ListViewSort operationSortInfo; // 0x1D0
	protected int targetMissionId; // 0x1D8
	protected Action actionCallback; // 0x1E0
	protected static AssetData effectAssetData; // 0x0
	protected MasterMissionListViewItem openTargetItem; // 0x1E8
	protected MasterMissionComponent.Type listType; // 0x1F0
	protected Action reDispAct; // 0x1F8
	[CompilerGeneratedAttribute] // RVA: 0xC4DB10 Offset: 0xC4DB10 VA: 0xC4DB10
	private static Action <>f__am$cache0; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC4DB20 Offset: 0xC4DB20 VA: 0xC4DB20
	private static Action <>f__am$cache1; // 0x10

	// Properties
	public List<MasterMissionListViewObject> ObjectList { get; }
	public List<MasterMissionListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x14AB280 Offset: 0x14AB280 VA: 0x14AB280
	public void .ctor() { }

	// RVA: 0x14AB2E8 Offset: 0x14AB2E8 VA: 0x14AB2E8
	public List<MasterMissionListViewObject> get_ObjectList() { }

	// RVA: 0x14AB338 Offset: 0x14AB338 VA: 0x14AB338
	public List<MasterMissionListViewObject> get_ClippingObjectList() { }

	// RVA: 0x14A5FD4 Offset: 0x14A5FD4 VA: 0x14A5FD4
	public void CreateList(List<EventMissionEntity> missionList, int[] mstMissionIdList, MasterMissionComponent.Type type, Action redispCallBack) { }

	// RVA: 0x14AB5A0 Offset: 0x14AB5A0 VA: 0x14AB5A0
	public void setNextMissionInfo(int missionID, Action callback) { }

	// RVA: 0x14AB760 Offset: 0x14AB760 VA: 0x14AB760
	public void setMissionListIdx(int targetMissionId) { }

	// RVA: 0x14A9190 Offset: 0x14A9190 VA: 0x14A9190
	public void DestroyList() { }

	// RVA: 0x14AB91C Offset: 0x14AB91C VA: 0x14AB91C
	public MasterMissionListViewItem GetItem(int index) { }

	// RVA: 0x14AB9C4 Offset: 0x14AB9C4 VA: 0x14AB9C4
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x14ABC18 Offset: 0x14ABC18 VA: 0x14ABC18
	protected void RefrashListDisp() { }

	// RVA: 0x14ABE74 Offset: 0x14ABE74 VA: 0x14ABE74
	public void OnClickFilterList() { }

	// RVA: 0x14AB598 Offset: 0x14AB598 VA: 0x14AB598
	private void setFilterId(int id) { }

	// RVA: 0x14ABF00 Offset: 0x14ABF00 VA: 0x14ABF00
	private void setList() { }

	// RVA: 0x14AC444 Offset: 0x14AC444 VA: 0x14AC444
	private void setFilterName(string targetFile) { }

	// RVA: 0x14ABB78 Offset: 0x14ABB78 VA: 0x14ABB78
	private void recieveReward(EventMissionEntity missionEntity) { }

	// RVA: 0x14A729C Offset: 0x14A729C VA: 0x14A729C
	public void checkAcceptable() { }

	// RVA: 0x14A7624 Offset: 0x14A7624 VA: 0x14A7624
	public void unAcceptableDlg() { }

	// RVA: 0x14A79B8 Offset: 0x14A79B8 VA: 0x14A79B8
	public void SetResultData(GetSvts[] svts, GetCommandCodes[] cmds) { }

	// RVA: 0x14A7DA0 Offset: 0x14A7DA0 VA: 0x14A7DA0
	public void AcceptReward(Action callback) { }

	// RVA: 0x14AC4AC Offset: 0x14AC4AC VA: 0x14AC4AC
	private void afterReward() { }

	// RVA: 0x14A7A4C Offset: 0x14A7A4C VA: 0x14A7A4C
	public void setAfterAction() { }

	// RVA: 0x14AC53C Offset: 0x14AC53C VA: 0x14AC53C
	public static GameObject getEffect(string name, Transform parentTr) { }

	// RVA: 0x14A92B4 Offset: 0x14A92B4 VA: 0x14A92B4
	public void ModifyItem() { }

	// RVA: 0x14AC710 Offset: 0x14AC710 VA: 0x14AC710
	public void SetOpenItem() { }

	// RVA: 0x14AC92C Offset: 0x14AC92C VA: 0x14AC92C
	private void modifyOpenItem() { }

	// RVA: 0x14ACB84 Offset: 0x14ACB84 VA: 0x14ACB84
	private void actionAfterCallback() { }

	// RVA: 0x14ACBA0 Offset: 0x14ACBA0 VA: 0x14ACBA0 Slot: 12
	protected override void OnChangeAlphaAnim() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7FF4 Offset: 0xCC7FF4 VA: 0xCC7FF4
	// RVA: 0x14ACC78 Offset: 0x14ACC78 VA: 0x14ACC78
	private void <setNextMissionInfo>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8004 Offset: 0xCC8004 VA: 0xCC8004
	// RVA: 0x14ACC7C Offset: 0x14ACC7C VA: 0x14ACC7C
	private static void <checkAcceptable>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8014 Offset: 0xCC8014 VA: 0xCC8014
	// RVA: 0x14ACDF4 Offset: 0x14ACDF4 VA: 0x14ACDF4
	private void <modifyOpenItem>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8024 Offset: 0xCC8024 VA: 0xCC8024
	// RVA: 0x14ACE54 Offset: 0x14ACE54 VA: 0x14ACE54
	private static void <checkAcceptable>m__3() { }
}

// Namespace: 
public enum MasterMissionListViewManager.FilterStatus // TypeDefIndex: 5546
{
	// Fields
	public int value__; // 0x0
	public const MasterMissionListViewManager.FilterStatus INIT = 0;
	public const MasterMissionListViewManager.FilterStatus CLEAR = 1;
	public const MasterMissionListViewManager.FilterStatus PROGRESS = 2;
	public const MasterMissionListViewManager.FilterStatus ACHIVE = 3;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41ED4 Offset: 0xC41ED4 VA: 0xC41ED4
private sealed class MasterMissionListViewManager.<AcceptReward>c__AnonStorey1 // TypeDefIndex: 5547
{
	// Fields
	internal StringBuilder svtTypeDialogMessage; // 0x10
	internal StringBuilder itemTypeDialogMessage; // 0x18
	internal Action callback; // 0x20
	internal MasterMissionListViewManager $this; // 0x28

	// Methods

	// RVA: 0x1611A18 Offset: 0x1611A18 VA: 0x1611A18
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41EE4 Offset: 0xC41EE4 VA: 0xC41EE4
private sealed class MasterMissionListViewManager.<AcceptReward>c__AnonStorey0 // TypeDefIndex: 5548
{
	// Fields
	internal List<GiftEntity> giftList; // 0x10
	internal int giftTypeItemNum; // 0x18
	internal EventRewardSetEntity rwdSetEnt; // 0x20
	internal string sendName; // 0x28
	internal MasterMissionListViewManager.<AcceptReward>c__AnonStorey1 <>f__ref$1; // 0x30

	// Methods

	// RVA: 0x1611154 Offset: 0x1611154 VA: 0x1611154
	public void .ctor() { }

	// RVA: 0x161115C Offset: 0x161115C VA: 0x161115C
	internal void <>m__0() { }

	// RVA: 0x16115F8 Offset: 0x16115F8 VA: 0x16115F8
	internal void <>m__1() { }

	// RVA: 0x161169C Offset: 0x161169C VA: 0x161169C
	internal void <>m__2() { }

	// RVA: 0x161172C Offset: 0x161172C VA: 0x161172C
	internal void <>m__3() { }

	// RVA: 0x16117BC Offset: 0x16117BC VA: 0x16117BC
	internal void <>m__4() { }

	// RVA: 0x1611988 Offset: 0x1611988 VA: 0x1611988
	internal void <>m__5() { }
}

// Namespace: 
public class MasterMissionListViewObject : MissionListViewObject // TypeDefIndex: 5549
{
	// Properties
	private MasterMissionListViewItemDraw MasterMissionItemDraw { get; }

	// Methods

	// RVA: 0x1611A20 Offset: 0x1611A20 VA: 0x1611A20
	public void .ctor() { }

	// RVA: 0x1611A28 Offset: 0x1611A28 VA: 0x1611A28
	private MasterMissionListViewItemDraw get_MasterMissionItemDraw() { }

	// RVA: 0x1611AAC Offset: 0x1611AAC VA: 0x1611AAC
	private void Update() { }

	// RVA: 0x1611AB4 Offset: 0x1611AB4 VA: 0x1611AB4
	public MasterMissionListViewItem GetItem() { }

	// RVA: 0x1611B38 Offset: 0x1611B38 VA: 0x1611B38
	public void OnChangeAlphaAnim() { }
}

// Namespace: 
public class MasterMissionTab : MonoBehaviour // TypeDefIndex: 5550
{
	// Fields
	public const string TAB_BUTTON_ON_SMALL = "btn_bg_on_5";
	public const string TAB_BUTTON_OFF_SMALL = "btn_bg_off_5";
	public const string TAB_BUTTON_ON_LARGE = "btn_bg_on_4";
	public const string TAB_BUTTON_OFF_LARGE = "btn_bg_off_4";
	[SerializeField] // RVA: 0xC4DB30 Offset: 0xC4DB30 VA: 0xC4DB30
	private BoxCollider tabCollider; // 0x18
	[SerializeField] // RVA: 0xC4DB40 Offset: 0xC4DB40 VA: 0xC4DB40
	private UISprite tabBg; // 0x20
	[SerializeField] // RVA: 0xC4DB50 Offset: 0xC4DB50 VA: 0xC4DB50
	private UISprite labelBg; // 0x28
	[SerializeField] // RVA: 0xC4DB60 Offset: 0xC4DB60 VA: 0xC4DB60
	private UISprite selectedTabBg; // 0x30
	[SerializeField] // RVA: 0xC4DB70 Offset: 0xC4DB70 VA: 0xC4DB70
	private UISprite tabLabel; // 0x38
	[SerializeField] // RVA: 0xC4DB80 Offset: 0xC4DB80 VA: 0xC4DB80
	private NoticeNumberComponent noticeNumber; // 0x40
	[SerializeField] // RVA: 0xC4DB90 Offset: 0xC4DB90 VA: 0xC4DB90
	private bool isViewLargeTab; // 0x48
	[SerializeField] // RVA: 0xC4DBA0 Offset: 0xC4DBA0 VA: 0xC4DBA0
	[HeaderAttribute] // RVA: 0xC4DBA0 Offset: 0xC4DBA0 VA: 0xC4DBA0
	private Vector3 tabPositionSmall; // 0x4C
	[SerializeField] // RVA: 0xC4DBEC Offset: 0xC4DBEC VA: 0xC4DBEC
	private Vector3 tabColliderPositionSmall; // 0x58
	[SerializeField] // RVA: 0xC4DBFC Offset: 0xC4DBFC VA: 0xC4DBFC
	private Vector3 tabColliderSizeSmall; // 0x64
	[SerializeField] // RVA: 0xC4DC0C Offset: 0xC4DC0C VA: 0xC4DC0C
	private Vector3 tabBgPositionSmall; // 0x70
	[SerializeField] // RVA: 0xC4DC1C Offset: 0xC4DC1C VA: 0xC4DC1C
	private Vector2 tabBgSizeSmall; // 0x7C
	[SerializeField] // RVA: 0xC4DC2C Offset: 0xC4DC2C VA: 0xC4DC2C
	private string tabBgSpriteNameSmall; // 0x88
	[SerializeField] // RVA: 0xC4DC3C Offset: 0xC4DC3C VA: 0xC4DC3C
	private Vector3 labelBgPositionSmall; // 0x90
	[SerializeField] // RVA: 0xC4DC4C Offset: 0xC4DC4C VA: 0xC4DC4C
	private Vector2 labelBgSizeSmall; // 0x9C
	[SerializeField] // RVA: 0xC4DC5C Offset: 0xC4DC5C VA: 0xC4DC5C
	private string labelBgSpriteNameSmall; // 0xA8
	[SerializeField] // RVA: 0xC4DC6C Offset: 0xC4DC6C VA: 0xC4DC6C
	private Vector3 selectedTabPositionSmall; // 0xB0
	[SerializeField] // RVA: 0xC4DC7C Offset: 0xC4DC7C VA: 0xC4DC7C
	private Vector2 selectedTabSizeSmall; // 0xBC
	[SerializeField] // RVA: 0xC4DC8C Offset: 0xC4DC8C VA: 0xC4DC8C
	private string selectedTabSpriteNameSmall; // 0xC8
	[SerializeField] // RVA: 0xC4DC9C Offset: 0xC4DC9C VA: 0xC4DC9C
	private Vector3 tabLabelPositionSmall; // 0xD0
	[SerializeField] // RVA: 0xC4DCAC Offset: 0xC4DCAC VA: 0xC4DCAC
	private Vector2 tabLabelSizeSmall; // 0xDC
	[SerializeField] // RVA: 0xC4DCBC Offset: 0xC4DCBC VA: 0xC4DCBC
	private Vector3 noticeNumberPositionSmall; // 0xE4
	[SerializeField] // RVA: 0xC4DCCC Offset: 0xC4DCCC VA: 0xC4DCCC
	[HeaderAttribute] // RVA: 0xC4DCCC Offset: 0xC4DCCC VA: 0xC4DCCC
	private Vector3 tabPositionLarge; // 0xF0
	[SerializeField] // RVA: 0xC4DD18 Offset: 0xC4DD18 VA: 0xC4DD18
	private Vector3 tabColliderPositionLarge; // 0xFC
	[SerializeField] // RVA: 0xC4DD28 Offset: 0xC4DD28 VA: 0xC4DD28
	private Vector3 tabColliderSizeLarge; // 0x108
	[SerializeField] // RVA: 0xC4DD38 Offset: 0xC4DD38 VA: 0xC4DD38
	private Vector3 tabBgPositionLarge; // 0x114
	[SerializeField] // RVA: 0xC4DD48 Offset: 0xC4DD48 VA: 0xC4DD48
	private Vector2 tabBgSizeLarge; // 0x120
	[SerializeField] // RVA: 0xC4DD58 Offset: 0xC4DD58 VA: 0xC4DD58
	private string tabBgSpriteNameLarge; // 0x128
	[SerializeField] // RVA: 0xC4DD68 Offset: 0xC4DD68 VA: 0xC4DD68
	private Vector3 labelBgPositionLarge; // 0x130
	[SerializeField] // RVA: 0xC4DD78 Offset: 0xC4DD78 VA: 0xC4DD78
	private Vector2 labelBgSizeLarge; // 0x13C
	[SerializeField] // RVA: 0xC4DD88 Offset: 0xC4DD88 VA: 0xC4DD88
	private string labelBgSpriteNameLarge; // 0x148
	[SerializeField] // RVA: 0xC4DD98 Offset: 0xC4DD98 VA: 0xC4DD98
	private Vector3 selectedTabPositionLarge; // 0x150
	[SerializeField] // RVA: 0xC4DDA8 Offset: 0xC4DDA8 VA: 0xC4DDA8
	private Vector2 selectedTabSizeLarge; // 0x15C
	[SerializeField] // RVA: 0xC4DDB8 Offset: 0xC4DDB8 VA: 0xC4DDB8
	private string selectedTabSpriteNameLarge; // 0x168
	[SerializeField] // RVA: 0xC4DDC8 Offset: 0xC4DDC8 VA: 0xC4DDC8
	private Vector3 tabLabelPositionLarge; // 0x170
	[SerializeField] // RVA: 0xC4DDD8 Offset: 0xC4DDD8 VA: 0xC4DDD8
	private Vector2 tabLabelSizeLarge; // 0x17C
	[SerializeField] // RVA: 0xC4DDE8 Offset: 0xC4DDE8 VA: 0xC4DDE8
	private Vector3 noticeNumberPositionLarge; // 0x184
	private bool isSmall; // 0x190

	// Methods

	// RVA: 0x1611C14 Offset: 0x1611C14 VA: 0x1611C14
	public void .ctor() { }

	// RVA: 0x1611C1C Offset: 0x1611C1C VA: 0x1611C1C
	private void SetSmallTab() { }

	// RVA: 0x1612010 Offset: 0x1612010 VA: 0x1612010
	private void SetLargeTab() { }

	// RVA: 0x161242C Offset: 0x161242C VA: 0x161242C
	public void SetTabSize(bool isSmall) { }

	// RVA: 0x1612438 Offset: 0x1612438 VA: 0x1612438
	public string GetButtonSpriteName(bool isOn) { }
}

// Namespace: 
public static class MissionInfoMaker // TypeDefIndex: 5551
{
	// Fields
	private static readonly int NORMAL_ICON_PRIORITY; // 0x0
	private static readonly int MINI_ICON_SHOW_PRIORITY; // 0x4
	public static readonly string ITEM_GET_ASSET_NAME; // 0x8
	public static readonly string ITEM_GET_EFFECT_NAME; // 0x10
	private static readonly int ITEM_GET_EFFECT_DEFAULT_ID; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC4DDF8 Offset: 0xC4DDF8 VA: 0xC4DDF8
	private static Comparison<EventMissionConditionEntity> <>f__am$cache0; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC4DE08 Offset: 0xC4DE08 VA: 0xC4DE08
	private static Comparison<EventMissionConditionEntity> <>f__am$cache1; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC4DE18 Offset: 0xC4DE18 VA: 0xC4DE18
	private static Comparison<EventMissionConditionEntity> <>f__am$cache2; // 0x30

	// Methods

	// RVA: 0x12996E4 Offset: 0x12996E4 VA: 0x12996E4
	public static MissionProgressType.Type GetMissionProgressType(int eventId, int missionId, bool isNowMission, bool ignoreStartCondition) { }

	// RVA: 0x1299B48 Offset: 0x1299B48 VA: 0x1299B48
	private static Dictionary<int, Dictionary<int, List<EventMissionConditionEntity>>> GetEventMissionConditionGroup(int eventId, int missionId) { }

	// RVA: 0x1299E60 Offset: 0x1299E60 VA: 0x1299E60
	private static bool GetMissionConditionGroupProgress(List<EventMissionConditionEntity> entities) { }

	// RVA: 0x1299F98 Offset: 0x1299F98 VA: 0x1299F98
	public static MissionInfoMaker.ProgStatus GetProgStatus(int eventId, int missionId, MissionProgressType.Type progressType, bool isNowMission) { }

	// RVA: 0x129A0F8 Offset: 0x129A0F8 VA: 0x129A0F8
	public static MissionProgressType.Type GetConditionMessageType(MissionProgressType.Type progressType) { }

	// RVA: 0x129A128 Offset: 0x129A128 VA: 0x129A128
	public static string GetConditionMessage(List<EventMissionConditionEntity> entityList) { }

	// RVA: 0x129A2A4 Offset: 0x129A2A4 VA: 0x129A2A4
	public static string GetClosedMessage(List<EventMissionConditionEntity> entityList) { }

	// RVA: 0x129A420 Offset: 0x129A420 VA: 0x129A420
	public static string GetProgressText(List<EventMissionConditionEntity> entityList, MissionInfoMaker.ProgStatus progStatus, out long progressNum, out long targetNum) { }

	// RVA: 0x129A7E4 Offset: 0x129A7E4 VA: 0x129A7E4
	public static float GetProgressValue(MissionInfoMaker.ProgStatus progStatus, long progNum, long targetNum) { }

	// RVA: 0x129A800 Offset: 0x129A800 VA: 0x129A800
	public static bool GetIsShowNew(int missionId, MissionInfoMaker.ProgStatus progStatus) { }

	// RVA: 0x129A894 Offset: 0x129A894 VA: 0x129A894
	public static GiftEntity GetSubGiftEntity(GiftEntity[] entities) { }

	// RVA: 0x129A978 Offset: 0x129A978 VA: 0x129A978
	public static void SetGiftInfo(GiftEntity giftEntity, out ItemEntity itemEntity, out ServantEntity servantEntity, out CommandCodeEntity commandCodeEntity, out ServantCostumeEntity servantCostumeEntity) { }

	// RVA: 0x129ACF4 Offset: 0x129ACF4 VA: 0x129ACF4
	public static GiftEntity GetIconGiftEntity(GiftEntity[] entities) { }

	// RVA: 0x129ADD8 Offset: 0x129ADD8 VA: 0x129ADD8
	public static int GetItemGetEffectId(int itemId) { }

	// RVA: 0x129AF54 Offset: 0x129AF54 VA: 0x129AF54
	public static bool TryGetSvtListData(GetSvts[] svtList, out GetSvts data, int svtId, Gift.Type giftType = 1) { }

	// RVA: 0x129B1C8 Offset: 0x129B1C8 VA: 0x129B1C8
	public static bool GetSvtListData(GetSvts[] svtList, out GetSvts data, int svtId) { }

	// RVA: 0x129B3A4 Offset: 0x129B3A4 VA: 0x129B3A4
	public static bool GetCommandCodeData(GetCommandCodes[] commandCodeList, out GetCommandCodes data, int commandCodeId) { }

	// RVA: 0x129B580 Offset: 0x129B580 VA: 0x129B580
	public static void OpenCostumeReleaseDetail(ServantCostumeEntity costumeEntity, ItemDetailInfoComponent.CallbackFunc callback) { }

	// RVA: 0x129B680 Offset: 0x129B680 VA: 0x129B680
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8034 Offset: 0xCC8034 VA: 0xCC8034
	// RVA: 0x129B70C Offset: 0x129B70C VA: 0x129B70C
	private static int <GetConditionMessage>m__0(EventMissionConditionEntity a, EventMissionConditionEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8044 Offset: 0xCC8044 VA: 0xCC8044
	// RVA: 0x129B750 Offset: 0x129B750 VA: 0x129B750
	private static int <GetClosedMessage>m__1(EventMissionConditionEntity a, EventMissionConditionEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8054 Offset: 0xCC8054 VA: 0xCC8054
	// RVA: 0x129B794 Offset: 0x129B794 VA: 0x129B794
	private static int <GetProgressText>m__2(EventMissionConditionEntity a, EventMissionConditionEntity b) { }
}

// Namespace: 
public enum MissionInfoMaker.ProgStatus // TypeDefIndex: 5552
{
	// Fields
	public int value__; // 0x0
	public const MissionInfoMaker.ProgStatus LOCK = 0;
	public const MissionInfoMaker.ProgStatus NOSTART = 1;
	public const MissionInfoMaker.ProgStatus PROGRESS = 2;
	public const MissionInfoMaker.ProgStatus CLEAR = 3;
	public const MissionInfoMaker.ProgStatus ACHIVE = 4;
	public const MissionInfoMaker.ProgStatus END = 5;
}

// Namespace: 
public class MissionRewardGetDialog : BaseDialog // TypeDefIndex: 5553
{
	// Fields
	private readonly float ICON_SCALE_SIZE; // 0x58
	private readonly float TYPE_SPRITE_POS_Y; // 0x5C
	private readonly int NORMAL_FONT_SIZE; // 0x60
	private readonly int SMALL_FONT_SIZE; // 0x64
	[SerializeField] // RVA: 0xC4DE28 Offset: 0xC4DE28 VA: 0xC4DE28
	protected GameObject itemIcon; // 0x68
	[SerializeField] // RVA: 0xC4DE38 Offset: 0xC4DE38 VA: 0xC4DE38
	protected UILabel itemGetDetailLabel; // 0x70
	[SerializeField] // RVA: 0xC4DE48 Offset: 0xC4DE48 VA: 0xC4DE48
	protected UIGrid itemIconGrid; // 0x78
	protected MissionRewardGetDialog.State state; // 0x80
	protected MissionRewardGetDialog.ClickDelegate closeFunc; // 0x88
	protected Action closeCallbackFunc; // 0x90

	// Methods

	// RVA: 0x12A7530 Offset: 0x12A7530 VA: 0x12A7530
	public void .ctor() { }

	// RVA: 0x12A75B4 Offset: 0x12A75B4 VA: 0x12A75B4
	public void Init() { }

	// RVA: 0x12A7950 Offset: 0x12A7950 VA: 0x12A7950
	public void Open(GiftEntity[] rewards, string detail, MissionRewardGetDialog.ClickDelegate closeCb) { }

	// RVA: 0x12A7E40 Offset: 0x12A7E40 VA: 0x12A7E40
	public void Open(EventRewardSetEntity reward, string detail, MissionRewardGetDialog.ClickDelegate closeCb) { }

	// RVA: 0x12A7EF4 Offset: 0x12A7EF4 VA: 0x12A7EF4
	protected void EndOpen() { }

	// RVA: 0x12A7F00 Offset: 0x12A7F00 VA: 0x12A7F00
	public void Close() { }

	// RVA: 0x12A7F08 Offset: 0x12A7F08 VA: 0x12A7F08
	public void Close(Action callback) { }

	// RVA: 0x12A7F98 Offset: 0x12A7F98 VA: 0x12A7F98
	protected void EndClose() { }

	// RVA: 0x12A7FD4 Offset: 0x12A7FD4 VA: 0x12A7FD4
	public void OnClickClose() { }
}

// Namespace: 
protected enum MissionRewardGetDialog.State // TypeDefIndex: 5554
{
	// Fields
	public int value__; // 0x0
	public const MissionRewardGetDialog.State INIT = 0;
	public const MissionRewardGetDialog.State OPEN = 1;
	public const MissionRewardGetDialog.State INPUT = 2;
	public const MissionRewardGetDialog.State CLOSE = 3;
}

// Namespace: 
public sealed class MissionRewardGetDialog.ClickDelegate : MulticastDelegate // TypeDefIndex: 5555
{
	// Methods

	// RVA: 0x12A8270 Offset: 0x12A8270 VA: 0x12A8270
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x12A8070 Offset: 0x12A8070 VA: 0x12A8070 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x12A8280 Offset: 0x12A8280 VA: 0x12A8280 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x12A82B4 Offset: 0x12A82B4 VA: 0x12A82B4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class MissionListViewItem : ListViewItem // TypeDefIndex: 5556
{
	// Fields
	protected EventMissionEntity eventMissionEnt; // 0x70
	protected GiftEntity[] giftEnts; // 0x78
	protected GiftEntity subGiftEntity; // 0x80
	protected ServantEntity svtEnt; // 0x88
	protected ItemEntity itemEnt; // 0x90
	protected CommandCodeEntity cmdEnt; // 0x98
	protected ServantCostumeEntity servantCostumeEnt; // 0xA0
	protected int currentEventId; // 0xA8
	protected int currentMissionId; // 0xAC
	protected int rewardObjectId; // 0xB0
	protected bool isNew; // 0xB4
	protected int dispNo; // 0xB8
	protected string condMsg; // 0xC0
	protected long targetNum; // 0xC8
	protected long progNum; // 0xD0
	protected string progTxt; // 0xD8
	protected float progVal; // 0xE0
	protected string closedMessage; // 0xE8
	protected int bannerGroupId; // 0xF0
	protected string nameTxt; // 0xF8
	protected int iconId; // 0x100
	protected string rewardExtraDetailTxt; // 0x108
	protected MissionInfoMaker.ProgStatus progStatus; // 0x110
	protected MissionProgressType.Type progType; // 0x114
	protected MissionProgressType.Type condMsgType; // 0x118
	protected bool isNowMission; // 0x11C
	protected bool isColliderEnable; // 0x11D
	[CompilerGeneratedAttribute] // RVA: 0xC4DE58 Offset: 0xC4DE58 VA: 0xC4DE58
	private static Comparison<EventMissionAddEntity> <>f__am$cache0; // 0x0

	// Properties
	public RewardType.Type EventRewardType { get; }
	public Gift.Type Type { get; }
	public int RewardObjId { get; }
	public int SetExtraIconId { get; }
	public EventMissionEntity EventMissionEntity { get; }
	public int MissionId { get; }
	public ServantEntity SvtEntity { get; }
	public ItemEntity ItemEntity { get; }
	public CommandCodeEntity CmdEntity { get; }
	public ServantCostumeEntity ServantCostumeEntity { get; }
	public int CurrentEventId { get; }
	public int CurrentMissionId { get; }
	public int DispNo { get; }
	public string CondMsg { get; }
	public MissionInfoMaker.ProgStatus CurrentStatus { get; set; }
	public virtual bool IsShowRewardInfo { get; }
	public string NameText { get; }
	public string ExtraDetailTxt { get; }
	public bool IsNew { get; }
	public int BannerGroupId { get; }
	public bool IsEndMission { get; set; }
	public bool IsOpenMission { get; }
	public int DisplayGiftNum { get; }
	public GiftEntity MiniIconGiftEntity { get; }
	public string ClosedMessage { get; }
	public GiftEntity[] GiftEntityList { get; }
	public bool IsColliderEnable { get; set; }

	// Methods

	// RVA: 0x129C368 Offset: 0x129C368 VA: 0x129C368
	public void .ctor() { }

	// RVA: 0x129C370 Offset: 0x129C370 VA: 0x129C370 Slot: 6
	public virtual void CheckMissionCond() { }

	// RVA: 0x129C454 Offset: 0x129C454 VA: 0x129C454
	protected void SetMissionCondInfo() { }

	// RVA: 0x129C520 Offset: 0x129C520 VA: 0x129C520
	protected void SetMissionCondMsg() { }

	// RVA: 0x129C668 Offset: 0x129C668 VA: 0x129C668
	protected void SetRewardInfo() { }

	// RVA: 0x129C770 Offset: 0x129C770 VA: 0x129C770
	protected void CheckEventMissionAdd() { }

	// RVA: 0x129CA8C Offset: 0x129CA8C VA: 0x129CA8C Slot: 7
	protected virtual void SetGiftData() { }

	// RVA: 0x129CB28 Offset: 0x129CB28 VA: 0x129CB28
	public void ModifyItem(bool isRecieveReward) { }

	// RVA: 0x129CBA8 Offset: 0x129CBA8 VA: 0x129CBA8 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x129CCBC Offset: 0x129CCBC VA: 0x129CCBC
	public bool HasMissionConditionFlag(EventMissionConditionEntity.Flag flag) { }

	// RVA: 0x129CDE0 Offset: 0x129CDE0 VA: 0x129CDE0
	public bool GetProgInfo(out string progTxt, out float barExp) { }

	// RVA: 0x129CDF8 Offset: 0x129CDF8 VA: 0x129CDF8
	public RewardType.Type get_EventRewardType() { }

	// RVA: 0x129CE24 Offset: 0x129CE24 VA: 0x129CE24
	public Gift.Type get_Type() { }
