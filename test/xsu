	public const FriendOperationConfirmMenu.State INPUT = 2;
	public const FriendOperationConfirmMenu.State SELECTED = 3;
	public const FriendOperationConfirmMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class FriendOperationConfirmMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 9954
{
	// Methods

	// RVA: 0x172122C Offset: 0x172122C VA: 0x172122C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1720E78 Offset: 0x1720E78 VA: 0x1720E78 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x172123C Offset: 0x172123C VA: 0x172123C Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x17212CC Offset: 0x17212CC VA: 0x17212CC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class FriendOperationItemListViewItem : ListViewItem // TypeDefIndex: 9955
{
	// Fields
	protected FriendStatus.Kind kind; // 0x70
	protected OtherUserGameEntity otherUserGameEntity; // 0x78
	protected UserBlacklistEntity userBlacklistEntity; // 0x80
	protected UserFriendRequestHistoryEntity userFriendRequestHistoryEntity; // 0x88
	protected ServantEntity servantEntity; // 0x90
	protected IconLabelInfo iconLabelInfo1; // 0x98
	protected IconLabelInfo iconLabelInfo2; // 0xA0
	protected int classPos; // 0xA8
	protected int priority; // 0xAC
	private bool swapMessageDisp; // 0xB0
	private bool isLock; // 0xB1
	private bool isSwapLock; // 0xB2
	private OtherUserGameEntity.ReturnSupportServantType displayServantType; // 0xB4

	// Properties
	public OtherUserGameEntity.ReturnSupportServantType DisplayServantType { get; }
	public bool isSwapMessageDisp { get; set; }
	public bool IsSwapLock { get; }
	public bool IsLockDisp { get; }
	public FriendStatus.Kind Kind { get; }
	public OtherUserGameEntity GameUser { get; }
	public string PlayerNameText { get; }
	public int PlayerLevel { get; }
	public long LoginTime { get; }
	public long friendReqDate { get; }
	public long blacklistRegistDate { get; }
	public string SvtNameText { get; }
	public ServantEntity SvtEntity { get; }
	public int EquipSvtId { get; }
	public EquipTargetInfo EquipTargetInfo { get; }
	public ServantLeaderInfo ServantLeader { get; }
	public IconLabelInfo IconInfo1 { get; }
	public IconLabelInfo IconInfo2 { get; }
	public int ClassPos { get; }

	// Methods

	// RVA: 0x17212D8 Offset: 0x17212D8 VA: 0x17212D8
	public void .ctor(FriendStatus.Kind kind, int index, int id, int classPos = 0) { }

	// RVA: 0x17214D8 Offset: 0x17214D8 VA: 0x17214D8
	public void .ctor(FriendStatus.Kind kind, int index, OtherUserGameEntity _otherUserGameEntity, int classPos = 0) { }

	// RVA: 0x1721598 Offset: 0x1721598 VA: 0x1721598
	public void .ctor(FriendStatus.Kind kind, int index, OtherUserGameEntity _otherUserGameEntity, UserBlacklistEntity _userBlacklistEntity, int classPos = 0) { }

	// RVA: 0x172165C Offset: 0x172165C VA: 0x172165C
	public void .ctor(FriendStatus.Kind kind, int index, OtherUserGameEntity _otherUserGameEntity, UserFriendRequestHistoryEntity _userFriendRequestHistoryEntity, int classPos = 0) { }

	// RVA: 0x1721724 Offset: 0x1721724 VA: 0x1721724
	public OtherUserGameEntity.ReturnSupportServantType get_DisplayServantType() { }

	// RVA: 0x172172C Offset: 0x172172C VA: 0x172172C
	public bool get_isSwapMessageDisp() { }

	// RVA: 0x1721734 Offset: 0x1721734 VA: 0x1721734
	public void set_isSwapMessageDisp(bool value) { }

	// RVA: 0x17218F4 Offset: 0x17218F4 VA: 0x17218F4
	public bool get_IsSwapLock() { }

	// RVA: 0x17218FC Offset: 0x17218FC VA: 0x17218FC
	public bool get_IsLockDisp() { }

	// RVA: 0x172191C Offset: 0x172191C VA: 0x172191C
	public void SwapLock() { }

	// RVA: 0x17213E8 Offset: 0x17213E8 VA: 0x17213E8
	private void setupItem(FriendStatus.Kind kind, int classPos) { }

	// RVA: 0x1721A04 Offset: 0x1721A04 VA: 0x1721A04
	public void RefreshLockInfo() { }

	// RVA: 0x1721DD4 Offset: 0x1721DD4 VA: 0x1721DD4
	public void SetClassId(int classPos) { }

	// RVA: 0x1721AD0 Offset: 0x1721AD0 VA: 0x1721AD0
	protected void AnalyzeEntity(int classPos) { }

	// RVA: 0x1721DD8 Offset: 0x1721DD8 VA: 0x1721DD8 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1721DE0 Offset: 0x1721DE0 VA: 0x1721DE0 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x17222E4 Offset: 0x17222E4 VA: 0x17222E4
	public FriendStatus.Kind get_Kind() { }

	// RVA: 0x17222EC Offset: 0x17222EC VA: 0x17222EC
	public OtherUserGameEntity get_GameUser() { }

	// RVA: 0x17222F4 Offset: 0x17222F4 VA: 0x17222F4
	public string get_PlayerNameText() { }

	// RVA: 0x1722350 Offset: 0x1722350 VA: 0x1722350
	public int get_PlayerLevel() { }

	// RVA: 0x1722368 Offset: 0x1722368 VA: 0x1722368
	public long get_LoginTime() { }

	// RVA: 0x1722384 Offset: 0x1722384 VA: 0x1722384
	public long get_friendReqDate() { }

	// RVA: 0x172239C Offset: 0x172239C VA: 0x172239C
	public long get_blacklistRegistDate() { }

	// RVA: 0x17223B4 Offset: 0x17223B4 VA: 0x17223B4
	public string get_SvtNameText() { }

	// RVA: 0x1722540 Offset: 0x1722540 VA: 0x1722540
	public ServantEntity get_SvtEntity() { }

	// RVA: 0x1722548 Offset: 0x1722548 VA: 0x1722548
	public int get_EquipSvtId() { }

	// RVA: 0x17225C8 Offset: 0x17225C8 VA: 0x17225C8
	public EquipTargetInfo get_EquipTargetInfo() { }

	// RVA: 0x1722648 Offset: 0x1722648 VA: 0x1722648
	public ServantLeaderInfo get_ServantLeader() { }

	// RVA: 0x17226CC Offset: 0x17226CC VA: 0x17226CC
	public IconLabelInfo get_IconInfo1() { }

	// RVA: 0x17226D4 Offset: 0x17226D4 VA: 0x17226D4
	public IconLabelInfo get_IconInfo2() { }

	// RVA: 0x17226DC Offset: 0x17226DC VA: 0x17226DC
	public bool GetSkillInfo(out SkillInfo[] skillInfoList) { }

	// RVA: 0x17227D4 Offset: 0x17227D4 VA: 0x17227D4
	public bool GetNpInfo(out TreasureDvcInfo tdInfo) { }

	// RVA: 0x17228B0 Offset: 0x17228B0 VA: 0x17228B0
	public int GetTreasureDeviceLevelIcon() { }

	// RVA: 0x1722924 Offset: 0x1722924 VA: 0x1722924
	public int get_ClassPos() { }
}

// Namespace: 
public class FriendOperationItemListViewItemDraw : MonoBehaviour // TypeDefIndex: 9956
{
	// Fields
	[SerializeField] // RVA: 0xC70104 Offset: 0xC70104 VA: 0xC70104
	protected UISprite rangeSprite; // 0x18
	[SerializeField] // RVA: 0xC70114 Offset: 0xC70114 VA: 0xC70114
	protected UISprite addRangeSprite; // 0x20
	[SerializeField] // RVA: 0xC70124 Offset: 0xC70124 VA: 0xC70124
	protected ServantFaceIconComponent servantFaceIcon; // 0x28
	[SerializeField] // RVA: 0xC70134 Offset: 0xC70134 VA: 0xC70134
	protected UILabel playerNameLabel; // 0x30
	[SerializeField] // RVA: 0xC70144 Offset: 0xC70144 VA: 0xC70144
	protected UIIconLabel playerLevelIconLabel; // 0x38
	[SerializeField] // RVA: 0xC70154 Offset: 0xC70154 VA: 0xC70154
	protected UIRangeLabel servantNameLabel; // 0x40
	[SerializeField] // RVA: 0xC70164 Offset: 0xC70164 VA: 0xC70164
	protected UIRangeLabel svtNpTitleLabel; // 0x48
	[SerializeField] // RVA: 0xC70174 Offset: 0xC70174 VA: 0xC70174
	protected ServantNpCommandCardComponent svtNpCommandCard; // 0x50
	[SerializeField] // RVA: 0xC70184 Offset: 0xC70184 VA: 0xC70184
	protected UILabel loginDataLabel; // 0x58
	[SerializeField] // RVA: 0xC70194 Offset: 0xC70194 VA: 0xC70194
	protected UISprite loginDataSpr; // 0x60
	[SerializeField] // RVA: 0xC701A4 Offset: 0xC701A4 VA: 0xC701A4
	protected GameObject skillMainBase; // 0x68
	[SerializeField] // RVA: 0xC701B4 Offset: 0xC701B4 VA: 0xC701B4
	protected GameObject skillType1Base; // 0x70
	[SerializeField] // RVA: 0xC701C4 Offset: 0xC701C4 VA: 0xC701C4
	protected GameObject skillType2Base; // 0x78
	[SerializeField] // RVA: 0xC701D4 Offset: 0xC701D4 VA: 0xC701D4
	protected GameObject[] skillBaseList; // 0x80
	[SerializeField] // RVA: 0xC701E4 Offset: 0xC701E4 VA: 0xC701E4
	protected SkillIconComponent[] skillIconList; // 0x88
	[SerializeField] // RVA: 0xC701F4 Offset: 0xC701F4 VA: 0xC701F4
	protected UIIconLabel[] skillLevelIconLabelList; // 0x90
	[SerializeField] // RVA: 0xC70204 Offset: 0xC70204 VA: 0xC70204
	protected UICommonButton[] skillButtonList; // 0x98
	[SerializeField] // RVA: 0xC70214 Offset: 0xC70214 VA: 0xC70214
	protected ServantCommandCardListComponent svtCommandCardList; // 0xA0
	[SerializeField] // RVA: 0xC70224 Offset: 0xC70224 VA: 0xC70224
	protected UICommonButton baseButton; // 0xA8
	[SerializeField] // RVA: 0xC70234 Offset: 0xC70234 VA: 0xC70234
	protected UICommonButton offerButton; // 0xB0
	[SerializeField] // RVA: 0xC70244 Offset: 0xC70244 VA: 0xC70244
	protected UICommonButton acceptButton; // 0xB8
	[SerializeField] // RVA: 0xC70254 Offset: 0xC70254 VA: 0xC70254
	protected UICommonButton rejectButton; // 0xC0
	[SerializeField] // RVA: 0xC70264 Offset: 0xC70264 VA: 0xC70264
	protected UICommonButton cancelButton; // 0xC8
	[SerializeField] // RVA: 0xC70274 Offset: 0xC70274 VA: 0xC70274
	protected UICommonButton removeButton; // 0xD0
	[SerializeField] // RVA: 0xC70284 Offset: 0xC70284 VA: 0xC70284
	protected UICommonButton removeButton2; // 0xD8
	[SerializeField] // RVA: 0xC70294 Offset: 0xC70294 VA: 0xC70294
	protected UISprite removeMarkSpr; // 0xE0
	[SerializeField] // RVA: 0xC702A4 Offset: 0xC702A4 VA: 0xC702A4
	protected UICommonButton registButton; // 0xE8
	[SerializeField] // RVA: 0xC702B4 Offset: 0xC702B4 VA: 0xC702B4
	protected UILabel cancelLabel; // 0xF0
	[SerializeField] // RVA: 0xC702C4 Offset: 0xC702C4 VA: 0xC702C4
	protected UILabel messageLabel; // 0xF8
	[SerializeField] // RVA: 0xC702D4 Offset: 0xC702D4 VA: 0xC702D4
	protected GameObject messageDispButton; // 0x100
	[SerializeField] // RVA: 0xC702E4 Offset: 0xC702E4 VA: 0xC702E4
	protected GameObject playerProfileObj; // 0x108
	[SerializeField] // RVA: 0xC702F4 Offset: 0xC702F4 VA: 0xC702F4
	protected GameObject svtProfileObj; // 0x110
	[SerializeField] // RVA: 0xC70304 Offset: 0xC70304 VA: 0xC70304
	private GameObject lockMarkObj; // 0x118
	[SerializeField] // RVA: 0xC70314 Offset: 0xC70314 VA: 0xC70314
	protected UISprite pushSpr; // 0x120
	[SerializeField] // RVA: 0xC70324 Offset: 0xC70324 VA: 0xC70324
	protected UISprite baseSpr; // 0x128
	[SerializeField] // RVA: 0xC70334 Offset: 0xC70334 VA: 0xC70334
	protected UserGradeComponent gradeIcon; // 0x130

	// Methods

	// RVA: 0x172292C Offset: 0x172292C VA: 0x172292C
	public void .ctor() { }

	// RVA: 0x17229F4 Offset: 0x17229F4 VA: 0x17229F4
	public void SetItem(FriendOperationItemListViewItem item, FriendOperationItemListViewItemDraw.DispMode mode) { }

	// RVA: 0x1724438 Offset: 0x1724438 VA: 0x1724438
	public void setMessageButtonUI(FriendOperationItemListViewItem item, bool isDisp) { }

	// RVA: 0x1724300 Offset: 0x1724300 VA: 0x1724300
	public void UpdateLockUI(FriendOperationItemListViewItem item) { }

	// RVA: 0x1724654 Offset: 0x1724654 VA: 0x1724654
	private void dispMessageUI(bool isHide) { }

	// RVA: 0x17241C0 Offset: 0x17241C0 VA: 0x17241C0
	private void setupMessageUI(FriendOperationItemListViewItem item) { }

	// RVA: 0x17247C0 Offset: 0x17247C0 VA: 0x17247C0
	public void SetInput(FriendOperationItemListViewItem item, bool isInput) { }
}

// Namespace: 
public enum FriendOperationItemListViewItemDraw.DispMode // TypeDefIndex: 9957
{
	// Fields
	public int value__; // 0x0
	public const FriendOperationItemListViewItemDraw.DispMode INVISIBLE = 0;
	public const FriendOperationItemListViewItemDraw.DispMode INVALID = 1;
	public const FriendOperationItemListViewItemDraw.DispMode VALID = 2;
	public const FriendOperationItemListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class FriendOperationItemListViewManager : ListViewManager // TypeDefIndex: 9958
{
	// Fields
	protected const int LIST_VIEW_LENGTH = 3;
	protected const string SORT_SAVE_KEY = "FriendOperation";
	protected static bool isInitSystem; // 0x0
	protected static ListViewSort[] sortStatusList; // 0x8
	[SerializeField] // RVA: 0xC70344 Offset: 0xC70344 VA: 0xC70344
	protected PlayMakerFSM targetFSM; // 0x138
	[SerializeField] // RVA: 0xC70354 Offset: 0xC70354 VA: 0xC70354
	protected UISprite sortExplanationSprite; // 0x140
	protected FriendOperationItemListViewManager.InitMode initMode; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xC70364 Offset: 0xC70364 VA: 0xC70364
	[DebuggerBrowsableAttribute] // RVA: 0xC70364 Offset: 0xC70364 VA: 0xC70364
	private FriendOperationItemListViewManager.CallbackFunc callbackFunc; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xC703A0 Offset: 0xC703A0 VA: 0xC703A0
	[DebuggerBrowsableAttribute] // RVA: 0xC703A0 Offset: 0xC703A0 VA: 0xC703A0
	private Action callbackFunc2; // 0x158
	protected int callbackCount; // 0x160
	protected FriendStatus.Kind menuKind; // 0x164
	protected string friendCode; // 0x168
	[CompilerGeneratedAttribute] // RVA: 0xC703DC Offset: 0xC703DC VA: 0xC703DC
	[DebuggerBrowsableAttribute] // RVA: 0xC703DC Offset: 0xC703DC VA: 0xC703DC
	private bool <isMessageApply>k__BackingField; // 0x170
	private static ListViewSort.FilterKind[] classFilter; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC70418 Offset: 0xC70418 VA: 0xC70418
	private static Comparison<DataEntityBase> <>f__am$cache0; // 0x18

	// Properties
	public bool isMessageApply { get; set; }
	public List<FriendOperationItemListViewObject> ObjectList { get; }
	public List<FriendOperationItemListViewObject> ClippingObjectList { get; }
	public bool IsExistSwapLockUser { get; }

	// Methods

	// RVA: 0x1725004 Offset: 0x1725004 VA: 0x1725004
	public void .ctor() { }

	// RVA: 0x172500C Offset: 0x172500C VA: 0x172500C
	protected void add_callbackFunc(FriendOperationItemListViewManager.CallbackFunc value) { }

	// RVA: 0x17250FC Offset: 0x17250FC VA: 0x17250FC
	protected void remove_callbackFunc(FriendOperationItemListViewManager.CallbackFunc value) { }

	// RVA: 0x17251EC Offset: 0x17251EC VA: 0x17251EC
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x17252DC Offset: 0x17252DC VA: 0x17252DC
	protected void remove_callbackFunc2(Action value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD05C0 Offset: 0xCD05C0 VA: 0xCD05C0
	// RVA: 0x17253CC Offset: 0x17253CC VA: 0x17253CC
	public bool get_isMessageApply() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD05D0 Offset: 0xCD05D0 VA: 0xCD05D0
	// RVA: 0x17218E8 Offset: 0x17218E8 VA: 0x17218E8
	public void set_isMessageApply(bool value) { }

	// RVA: 0x17253D4 Offset: 0x17253D4 VA: 0x17253D4
	public static void CreateSorteData(int classPos = 0) { }

	// RVA: 0x1725794 Offset: 0x1725794 VA: 0x1725794
	public static void DeleteContinueData() { }

	// RVA: 0x172587C Offset: 0x172587C VA: 0x172587C
	public static void InitLoad() { }

	// RVA: 0x1725970 Offset: 0x1725970 VA: 0x1725970
	public List<FriendOperationItemListViewObject> get_ObjectList() { }

	// RVA: 0x1725B3C Offset: 0x1725B3C VA: 0x1725B3C
	public List<FriendOperationItemListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1725D9C Offset: 0x1725D9C VA: 0x1725D9C
	public bool get_IsExistSwapLockUser() { }

	// RVA: 0x1725EA0 Offset: 0x1725EA0 VA: 0x1725EA0
	public void CreateListFriendCode(string friendCode) { }

	// RVA: 0x1725EB0 Offset: 0x1725EB0 VA: 0x1725EB0
	public void CreateList(FriendStatus.Kind kind, int classPos = 0) { }

	// RVA: 0x17269F0 Offset: 0x17269F0 VA: 0x17269F0
	public void DestroyList() { }

	// RVA: 0x1726A2C Offset: 0x1726A2C VA: 0x1726A2C
	public FriendOperationItemListViewItem GetItem(int index) { }

	// RVA: 0x1726AD4 Offset: 0x1726AD4 VA: 0x1726AD4 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1726B90 Offset: 0x1726B90 VA: 0x1726B90
	public void SetMode(FriendOperationItemListViewManager.InitMode mode, FriendOperationItemListViewManager.CallbackFunc callback) { }

	// RVA: 0x1727008 Offset: 0x1727008 VA: 0x1727008
	public void SetMode(FriendOperationItemListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1726B98 Offset: 0x1726B98 VA: 0x1726B98
	public void SetMode(FriendOperationItemListViewManager.InitMode mode) { }

	// RVA: 0x1727208 Offset: 0x1727208 VA: 0x1727208
	protected void RequestListObject(FriendOperationItemListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1727010 Offset: 0x1727010 VA: 0x1727010
	protected void RequestListObject(FriendOperationItemListViewObject.InitMode mode) { }

	// RVA: 0x1727414 Offset: 0x1727414 VA: 0x1727414
	protected void RequestInto() { }

	// RVA: 0x17275E8 Offset: 0x17275E8 VA: 0x17275E8
	protected void OnMoveEnd() { }

	// RVA: 0x1727748 Offset: 0x1727748 VA: 0x1727748
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x17277A4 Offset: 0x17277A4 VA: 0x17277A4
	protected void OnLongPushServantEquip(ListViewObject obj) { }

	// RVA: 0x1727800 Offset: 0x1727800 VA: 0x1727800
	protected void OnClickSkill1ListView(ListViewObject obj) { }

	// RVA: 0x1727804 Offset: 0x1727804 VA: 0x1727804
	protected void OnLongPushSkill1ListView(ListViewObject obj) { }

	// RVA: 0x1727908 Offset: 0x1727908 VA: 0x1727908
	protected void OnClickSkill2ListView(ListViewObject obj) { }

	// RVA: 0x172790C Offset: 0x172790C VA: 0x172790C
	protected void OnLongPushSkill2ListView(ListViewObject obj) { }

	// RVA: 0x1727914 Offset: 0x1727914 VA: 0x1727914
	protected void OnClickSkill3ListView(ListViewObject obj) { }

	// RVA: 0x1727918 Offset: 0x1727918 VA: 0x1727918
	protected void OnLongPushSkill3ListView(ListViewObject obj) { }

	// RVA: 0x172780C Offset: 0x172780C VA: 0x172780C
	protected void OnLongPushSkill(ListViewObject obj, FriendOperationItemListViewManager.ResultKind kind) { }

	// RVA: 0x1727920 Offset: 0x1727920 VA: 0x1727920
	protected void ScrollViewEnabled() { }

	// RVA: 0x1727954 Offset: 0x1727954 VA: 0x1727954
	protected void OnClickListViewOffer(ListViewObject obj) { }

	// RVA: 0x17279B0 Offset: 0x17279B0 VA: 0x17279B0
	protected void OnClickListViewAccept(ListViewObject obj) { }

	// RVA: 0x1727A0C Offset: 0x1727A0C VA: 0x1727A0C
	protected void OnClickListViewReject(ListViewObject obj) { }

	// RVA: 0x1727A68 Offset: 0x1727A68 VA: 0x1727A68
	protected void OnClickListViewCancel(ListViewObject obj) { }

	// RVA: 0x1727AC4 Offset: 0x1727AC4 VA: 0x1727AC4
	protected void OnClickListViewRemove(ListViewObject obj) { }

	// RVA: 0x1727B20 Offset: 0x1727B20 VA: 0x1727B20
	protected void onClickListViewBlacklistRegist(ListViewObject obj) { }

	// RVA: 0x1727B7C Offset: 0x1727B7C VA: 0x1727B7C
	protected void onClickListViewBlacklistRemove(ListViewObject obj) { }

	// RVA: 0x1727BD8 Offset: 0x1727BD8 VA: 0x1727BD8
	protected void onClickListViewMessageDisp(ListViewObject obj) { }

	// RVA: 0x1727C34 Offset: 0x1727C34 VA: 0x1727C34
	public void OnClickSortKind() { }

	// RVA: 0x1727D64 Offset: 0x1727D64 VA: 0x1727D64
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x1727E54 Offset: 0x1727E54 VA: 0x1727E54 Slot: 9
	public override void SetSortKind(ListViewSort.SortKind kind) { }

	// RVA: 0x1727E8C Offset: 0x1727E8C VA: 0x1727E8C
	public void changeSortKindDisp() { }

	// RVA: 0x1727E98 Offset: 0x1727E98 VA: 0x1727E98 Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x1728138 Offset: 0x1728138 VA: 0x1728138
	public void SetClassId(int classPos) { }

	// RVA: 0x1728530 Offset: 0x1728530 VA: 0x1728530
	public void setScrollBarActive(bool b) { }

	// RVA: 0x1728580 Offset: 0x1728580 VA: 0x1728580
	public void resetScrollBarPos() { }

	// RVA: 0x17285D8 Offset: 0x17285D8 VA: 0x17285D8
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD05E0 Offset: 0xCD05E0 VA: 0xCD05E0
	// RVA: 0x1728660 Offset: 0x1728660 VA: 0x1728660
	private static int <CreateList>m__0(DataEntityBase a, DataEntityBase b) { }
}

// Namespace: 
public enum FriendOperationItemListViewManager.InitMode // TypeDefIndex: 9959
{
	// Fields
	public int value__; // 0x0
	public const FriendOperationItemListViewManager.InitMode NONE = 0;
	public const FriendOperationItemListViewManager.InitMode INTO = 1;
	public const FriendOperationItemListViewManager.InitMode INPUT = 2;
	public const FriendOperationItemListViewManager.InitMode ENTER = 3;
	public const FriendOperationItemListViewManager.InitMode EXIT = 4;
	public const FriendOperationItemListViewManager.InitMode MODIFY = 5;
}

// Namespace: 
public enum FriendOperationItemListViewManager.ResultKind // TypeDefIndex: 9960
{
	// Fields
	public int value__; // 0x0
	public const FriendOperationItemListViewManager.ResultKind NONE = 0;
	public const FriendOperationItemListViewManager.ResultKind SERVANT_SKILL1_STATUS = 1;
	public const FriendOperationItemListViewManager.ResultKind SERVANT_SKILL2_STATUS = 2;
	public const FriendOperationItemListViewManager.ResultKind SERVANT_SKILL3_STATUS = 3;
	public const FriendOperationItemListViewManager.ResultKind OFFER = 4;
	public const FriendOperationItemListViewManager.ResultKind ACCEPT = 5;
	public const FriendOperationItemListViewManager.ResultKind REJECT = 6;
	public const FriendOperationItemListViewManager.ResultKind CANCEL = 7;
	public const FriendOperationItemListViewManager.ResultKind REMOVE = 8;
	public const FriendOperationItemListViewManager.ResultKind BLACKLIST_REGIST = 9;
	public const FriendOperationItemListViewManager.ResultKind BLACKLIST_REMOVE = 10;
	public const FriendOperationItemListViewManager.ResultKind MESSAGE_DISP = 11;
	public const FriendOperationItemListViewManager.ResultKind SERVANT_EQUIP_STATUS = 12;
}

// Namespace: 
public sealed class FriendOperationItemListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 9961
{
	// Methods

	// RVA: 0x191ACB0 Offset: 0x191ACB0 VA: 0x191ACB0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x191ACC0 Offset: 0x191ACC0 VA: 0x191ACC0 Slot: 11
	public virtual void Invoke(FriendOperationItemListViewManager.ResultKind kind, int result) { }

	// RVA: 0x191AF04 Offset: 0x191AF04 VA: 0x191AF04 Slot: 12
	public virtual IAsyncResult BeginInvoke(FriendOperationItemListViewManager.ResultKind kind, int result, AsyncCallback callback, object object) { }

	// RVA: 0x191AFAC Offset: 0x191AFAC VA: 0x191AFAC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class FriendOperationItemListViewObject : ListViewObject // TypeDefIndex: 9962
{
	// Fields
	protected FriendOperationItemListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC70428 Offset: 0xC70428 VA: 0xC70428
	[DebuggerBrowsableAttribute] // RVA: 0xC70428 Offset: 0xC70428 VA: 0xC70428
	private Action callbackFunc; // 0x70
	protected FriendOperationItemListViewItemDraw itemDraw; // 0x78
	protected FriendOperationItemListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x191AFB8 Offset: 0x191AFB8 VA: 0x191AFB8
	public void .ctor() { }

	// RVA: 0x191B020 Offset: 0x191B020 VA: 0x191B020
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x191B10C Offset: 0x191B10C VA: 0x191B10C
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x191B1F8 Offset: 0x191B1F8 VA: 0x191B1F8
	protected void Awake() { }

	// RVA: 0x191B26C Offset: 0x191B26C VA: 0x191B26C
	private void OnDestroy() { }

	// RVA: 0x191B318 Offset: 0x191B318 VA: 0x191B318
	public FriendOperationItemListViewItem GetItem() { }

	// RVA: 0x191B39C Offset: 0x191B39C VA: 0x191B39C Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x191B3CC Offset: 0x191B3CC VA: 0x191B3CC Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x191B3C4 Offset: 0x191B3C4 VA: 0x191B3C4
	protected void InitItem() { }

	// RVA: 0x191B3F4 Offset: 0x191B3F4 VA: 0x191B3F4 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x191B4FC Offset: 0x191B4FC VA: 0x191B4FC Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x191B608 Offset: 0x191B608 VA: 0x191B608
	public void Init(FriendOperationItemListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x191BC3C Offset: 0x191BC3C VA: 0x191BC3C
	public void Init(FriendOperationItemListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x191BCD0 Offset: 0x191BCD0 VA: 0x191BCD0
	public void Init(FriendOperationItemListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x191B584 Offset: 0x191B584 VA: 0x191B584
	public void Init(FriendOperationItemListViewObject.InitMode initMode) { }

	// RVA: 0x191B874 Offset: 0x191B874 VA: 0x191B874
	protected void SetupDisp() { }

	// RVA: 0x191B988 Offset: 0x191B988 VA: 0x191B988
	private void EventIntoStart(float delay) { }

	// RVA: 0x191BD58 Offset: 0x191BD58 VA: 0x191BD58
	private void EventIntoMove() { }

	// RVA: 0x191BEF8 Offset: 0x191BEF8 VA: 0x191BEF8
	private void EventIntoMove2() { }

	// RVA: 0x191BFE8 Offset: 0x191BFE8 VA: 0x191BFE8
	private void EventEnterStart(float delay) { }

	// RVA: 0x191C0BC Offset: 0x191C0BC VA: 0x191C0BC
	private void EventEnterMove() { }

	// RVA: 0x191C2D0 Offset: 0x191C2D0 VA: 0x191C2D0
	private void EventEnterMove2() { }

	// RVA: 0x191BAF0 Offset: 0x191BAF0 VA: 0x191BAF0
	private void EventExitStart(float delay) { }

	// RVA: 0x191C36C Offset: 0x191C36C VA: 0x191C36C
	private void EventExitMove() { }

	// RVA: 0x191C5F0 Offset: 0x191C5F0 VA: 0x191C5F0
	private void EventExitMove2() { }

	// RVA: 0x191BFC0 Offset: 0x191BFC0 VA: 0x191BFC0
	protected void EventMoveEnd() { }

	// RVA: 0x191C68C Offset: 0x191C68C VA: 0x191C68C
	public void setMessageButtonUI(bool disp) { }

	// RVA: 0x191C740 Offset: 0x191C740 VA: 0x191C740
	public void UpdateLock(FriendOperationItemListViewItem item) { }

	// RVA: 0x191C778 Offset: 0x191C778 VA: 0x191C778
	public void OnClickSkill1() { }

	// RVA: 0x191C7E0 Offset: 0x191C7E0 VA: 0x191C7E0
	public void OnLongPushEquip() { }

	// RVA: 0x191C88C Offset: 0x191C88C VA: 0x191C88C
	public void OnClickEquip() { }

	// RVA: 0x191C8A0 Offset: 0x191C8A0 VA: 0x191C8A0
	public void OnLongPushSkill1() { }

	// RVA: 0x191C94C Offset: 0x191C94C VA: 0x191C94C
	public void OnClickSkill2() { }

	// RVA: 0x191C9B4 Offset: 0x191C9B4 VA: 0x191C9B4
	public void OnLongPushSkill2() { }

	// RVA: 0x191CA60 Offset: 0x191CA60 VA: 0x191CA60
	public void OnClickSkill13() { }

	// RVA: 0x191CAC8 Offset: 0x191CAC8 VA: 0x191CAC8
	public void OnLongPushSkill3() { }

	// RVA: 0x191CB74 Offset: 0x191CB74 VA: 0x191CB74
	public void OnClickOffer() { }

	// RVA: 0x191CBF0 Offset: 0x191CBF0 VA: 0x191CBF0
	public void OnClickAccept() { }

	// RVA: 0x191CC6C Offset: 0x191CC6C VA: 0x191CC6C
	public void OnClickReject() { }

	// RVA: 0x191CCE8 Offset: 0x191CCE8 VA: 0x191CCE8
	public void OnClickCancel() { }

	// RVA: 0x191CD64 Offset: 0x191CD64 VA: 0x191CD64
	public void OnClickRemove() { }

	// RVA: 0x191CEFC Offset: 0x191CEFC VA: 0x191CEFC
	public void onClickRegist() { }

	// RVA: 0x191CF78 Offset: 0x191CF78 VA: 0x191CF78
	public void onClickMessageDisp() { }

	// RVA: 0x191CFF4 Offset: 0x191CFF4 VA: 0x191CFF4
	public void OnClickSupportInfo() { }
}

// Namespace: 
public enum FriendOperationItemListViewObject.InitMode // TypeDefIndex: 9963
{
	// Fields
	public int value__; // 0x0
	public const FriendOperationItemListViewObject.InitMode INVISIBLE = 0;
	public const FriendOperationItemListViewObject.InitMode INVALID = 1;
	public const FriendOperationItemListViewObject.InitMode VALID = 2;
	public const FriendOperationItemListViewObject.InitMode INPUT = 3;
	public const FriendOperationItemListViewObject.InitMode INTO = 4;
	public const FriendOperationItemListViewObject.InitMode ENTER = 5;
	public const FriendOperationItemListViewObject.InitMode EXIT = 6;
	public const FriendOperationItemListViewObject.InitMode MODIFY = 7;
}

// Namespace: 
protected enum FriendOperationItemListViewObject.State // TypeDefIndex: 9964
{
	// Fields
	public int value__; // 0x0
	public const FriendOperationItemListViewObject.State INIT = 0;
	public const FriendOperationItemListViewObject.State IDLE = 1;
	public const FriendOperationItemListViewObject.State MOVE = 2;
	public const FriendOperationItemListViewObject.State INPUT = 3;
}

// Namespace: 
public class FriendRootComponent : SceneRootComponent // TypeDefIndex: 9965
{
	// Fields
	[SerializeField] // RVA: 0xC70464 Offset: 0xC70464 VA: 0xC70464
	protected FriendOperationItemListViewManager operationItemListViewManager; // 0x38
	[SerializeField] // RVA: 0xC70474 Offset: 0xC70474 VA: 0xC70474
	protected FriendOperationConfirmMenu operationConfirmMenu; // 0x40
	[SerializeField] // RVA: 0xC70484 Offset: 0xC70484 VA: 0xC70484
	protected FriendSearchMenu friendSearchMenu; // 0x48
	[SerializeField] // RVA: 0xC70494 Offset: 0xC70494 VA: 0xC70494
	protected FriendSearchResultMenu friendSearchResultMenu; // 0x50
	[SerializeField] // RVA: 0xC704A4 Offset: 0xC704A4 VA: 0xC704A4
	protected FriendWarningDialog friendWarningDialog; // 0x58
	[SerializeField] // RVA: 0xC704B4 Offset: 0xC704B4 VA: 0xC704B4
	protected TitleInfoControl titleInfo; // 0x60
	[SerializeField] // RVA: 0xC704C4 Offset: 0xC704C4 VA: 0xC704C4
	protected UILabel friendCountLabel; // 0x68
	[SerializeField] // RVA: 0xC704D4 Offset: 0xC704D4 VA: 0xC704D4
	protected UILabel followCountLabel; // 0x70
	[SerializeField] // RVA: 0xC704E4 Offset: 0xC704E4 VA: 0xC704E4
	protected NoticeNumberComponent noticeNumber; // 0x78
	[SerializeField] // RVA: 0xC704F4 Offset: 0xC704F4 VA: 0xC704F4
	protected UISprite tabFriendTitleSprite; // 0x80
	[SerializeField] // RVA: 0xC70504 Offset: 0xC70504 VA: 0xC70504
	protected UISprite tabOfferedTitleSprite; // 0x88
	[SerializeField] // RVA: 0xC70514 Offset: 0xC70514 VA: 0xC70514
	protected UISprite tabSearchTitleSprite; // 0x90
	[SerializeField] // RVA: 0xC70524 Offset: 0xC70524 VA: 0xC70524
	protected UISprite tabFriendSprite; // 0x98
	[SerializeField] // RVA: 0xC70534 Offset: 0xC70534 VA: 0xC70534
	protected UISprite tabOfferedSprite; // 0xA0
	[SerializeField] // RVA: 0xC70544 Offset: 0xC70544 VA: 0xC70544
	protected UISprite tabSearchSprite; // 0xA8
	[SerializeField] // RVA: 0xC70554 Offset: 0xC70554 VA: 0xC70554
	protected UICommonButton tabFriendButton; // 0xB0
	[SerializeField] // RVA: 0xC70564 Offset: 0xC70564 VA: 0xC70564
	protected UICommonButton tabOfferedButton; // 0xB8
	[SerializeField] // RVA: 0xC70574 Offset: 0xC70574 VA: 0xC70574
	protected UICommonButton tabSearchButton; // 0xC0
	[SerializeField] // RVA: 0xC70584 Offset: 0xC70584 VA: 0xC70584
	protected UISprite modeUserDetailSprite; // 0xC8
	[SerializeField] // RVA: 0xC70594 Offset: 0xC70594 VA: 0xC70594
	protected UISprite modeEditLockSprite; // 0xD0
	[SerializeField] // RVA: 0xC705A4 Offset: 0xC705A4 VA: 0xC705A4
	protected UICommonButton modeUserDetailButton; // 0xD8
	[SerializeField] // RVA: 0xC705B4 Offset: 0xC705B4 VA: 0xC705B4
	protected UICommonButton modeEditLockButton; // 0xE0
	[SerializeField] // RVA: 0xC705C4 Offset: 0xC705C4 VA: 0xC705C4
	protected GameObject modeButtonParent; // 0xE8
	[SerializeField] // RVA: 0xC705D4 Offset: 0xC705D4 VA: 0xC705D4
	protected UILabel helpLabel; // 0xF0
	[SerializeField] // RVA: 0xC705E4 Offset: 0xC705E4 VA: 0xC705E4
	protected ClassButtonControlComponent classButtonControl; // 0xF8
	[SerializeField] // RVA: 0xC705F4 Offset: 0xC705F4 VA: 0xC705F4
	protected UISprite bgTxtSprite; // 0x100
	protected static FriendRootComponent.TabKind tabKindSave; // 0x0
	protected FriendRootComponent.State state; // 0x108
	protected int selectItemNum; // 0x10C
	protected string selectFriendCode; // 0x110
	protected OtherUserGameEntity selectFriendEntity; // 0x118
	protected bool isReturnSupport; // 0x120
	protected FriendRootComponent.ModeKind currentModeKind; // 0x124
	protected bool isActiveModeKindButtons; // 0x128

	// Properties
	protected FriendRootComponent.TabKind tabKind { get; set; }

	// Methods

	// RVA: 0x191D568 Offset: 0x191D568 VA: 0x191D568
	public void .ctor() { }

	// RVA: 0x191D570 Offset: 0x191D570 VA: 0x191D570
	protected void set_tabKind(FriendRootComponent.TabKind value) { }

	// RVA: 0x191D5DC Offset: 0x191D5DC VA: 0x191D5DC
	protected FriendRootComponent.TabKind get_tabKind() { }

	// RVA: 0x191D644 Offset: 0x191D644 VA: 0x191D644 Slot: 4
	public override void beginInitialize() { }

	// RVA: 0x191D834 Offset: 0x191D834 VA: 0x191D834 Slot: 6
	public override void beginStartUp() { }

	// RVA: 0x191D77C Offset: 0x191D77C VA: 0x191D77C
	private void CheckHelpUI() { }

	// RVA: 0x191D9D4 Offset: 0x191D9D4 VA: 0x191D9D4
	protected void EndFriendRequest(string result) { }

	// RVA: 0x191E5D8 Offset: 0x191E5D8 VA: 0x191E5D8 Slot: 7
	public override void beginFinish() { }

	// RVA: 0x191EA94 Offset: 0x191EA94 VA: 0x191EA94 Slot: 9
	public override void beginResume(object data) { }

	// RVA: 0x191EC04 Offset: 0x191EC04 VA: 0x191EC04
	public bool CheckTabKind() { }

	// RVA: 0x191ECC0 Offset: 0x191ECC0 VA: 0x191ECC0
	public void Init() { }

	// RVA: 0x191ECD8 Offset: 0x191ECD8 VA: 0x191ECD8
	public void Quit() { }

	// RVA: 0x191DC18 Offset: 0x191DC18 VA: 0x191DC18
	protected void RefreshTab() { }

	// RVA: 0x191E2F8 Offset: 0x191E2F8 VA: 0x191E2F8
	public void RefreshInfo() { }

	// RVA: 0x191F10C Offset: 0x191F10C VA: 0x191F10C
	public void SelectShowFriend() { }

	// RVA: 0x191F26C Offset: 0x191F26C VA: 0x191F26C
	public void BackShowFriend() { }

	// RVA: 0x191F32C Offset: 0x191F32C VA: 0x191F32C
	public void SelectShowOffer() { }

	// RVA: 0x191F468 Offset: 0x191F468 VA: 0x191F468
	public void BackShowOffer() { }

	// RVA: 0x191F51C Offset: 0x191F51C VA: 0x191F51C
	public void SelectShowOffered() { }

	// RVA: 0x191F67C Offset: 0x191F67C VA: 0x191F67C
	public void BackShowOffered() { }

	// RVA: 0x191F73C Offset: 0x191F73C VA: 0x191F73C
	public void SelectShowSearch() { }

	// RVA: 0x191F984 Offset: 0x191F984 VA: 0x191F984
	public void BackShowSearch() { }

	// RVA: 0x191FA3C Offset: 0x191FA3C VA: 0x191FA3C
	public void SelectSearchFriend() { }

	// RVA: 0x191FE74 Offset: 0x191FE74 VA: 0x191FE74
	public void BackSearchFriend() { }

	// RVA: 0x191FF54 Offset: 0x191FF54 VA: 0x191FF54
	public void ShowSearchResult() { }

	// RVA: 0x1920760 Offset: 0x1920760 VA: 0x1920760
	protected void StartSearchInput() { }

	// RVA: 0x19208B0 Offset: 0x19208B0 VA: 0x19208B0
	public void SelectShowServant(ServantLeaderInfo servantLeaderInfo) { }

	// RVA: 0x19209AC Offset: 0x19209AC VA: 0x19209AC
	protected void EndShowServant(bool isDecide) { }

	// RVA: 0x1920AA0 Offset: 0x1920AA0 VA: 0x1920AA0
	protected void EndCloseShowServant() { }

	// RVA: 0x1920B34 Offset: 0x1920B34 VA: 0x1920B34
	public void SelectFriendOfferConfirm() { }

	// RVA: 0x1921420 Offset: 0x1921420 VA: 0x1921420
	public void BackFriendOfferConfirm() { }

	// RVA: 0x19214B4 Offset: 0x19214B4 VA: 0x19214B4
	public void BackFriendOfferConfirmRefreshShowSearch() { }

	// RVA: 0x19215A4 Offset: 0x19215A4 VA: 0x19215A4
	public void SelectFriendAcceptConfirm() { }

	// RVA: 0x19216A4 Offset: 0x19216A4 VA: 0x19216A4
	public void BackFriendAcceptConfirm() { }

	// RVA: 0x192176C Offset: 0x192176C VA: 0x192176C
	public void BackFriendAcceptConfirmRefreshShowOffered() { }

	// RVA: 0x19218A8 Offset: 0x19218A8 VA: 0x19218A8
	public void SelectFriendRejectConfirm() { }

	// RVA: 0x19219A8 Offset: 0x19219A8 VA: 0x19219A8
	public void BackFriendRejectConfirm() { }

	// RVA: 0x1921A70 Offset: 0x1921A70 VA: 0x1921A70
	public void BackFriendRejectConfirmRefreshShowOffered() { }

	// RVA: 0x1921BAC Offset: 0x1921BAC VA: 0x1921BAC
	public void SelectFriendCancelConfirm() { }

	// RVA: 0x1921CAC Offset: 0x1921CAC VA: 0x1921CAC
	public void BackFriendCancelConfirm() { }

	// RVA: 0x1921D74 Offset: 0x1921D74 VA: 0x1921D74
	public void BackFriendCancelConfirmRefreshShowOffer() { }

	// RVA: 0x1921EB0 Offset: 0x1921EB0 VA: 0x1921EB0
	public void SelectFriendRemoveConfirm() { }

	// RVA: 0x1921FB0 Offset: 0x1921FB0 VA: 0x1921FB0
	public void BackFriendRemoveConfirm() { }

	// RVA: 0x1922078 Offset: 0x1922078 VA: 0x1922078
	public void BackFriendRemoveConfirmRefreshShowFriend() { }

	// RVA: 0x19221B4 Offset: 0x19221B4 VA: 0x19221B4
	public void RequestFriendOffer() { }

	// RVA: 0x19222BC Offset: 0x19222BC VA: 0x19222BC
	public void RequestFriendOffer2() { }

	// RVA: 0x192275C Offset: 0x192275C VA: 0x192275C
	public void RequestFriendAccept() { }

	// RVA: 0x192288C Offset: 0x192288C VA: 0x192288C
	public void RequestFriendReject() { }

	// RVA: 0x19229E4 Offset: 0x19229E4 VA: 0x19229E4
	public void RequestFriendCancel() { }

	// RVA: 0x1922B14 Offset: 0x1922B14 VA: 0x1922B14
	public void RequestFriendRemove() { }

	// RVA: 0x1922B90 Offset: 0x1922B90 VA: 0x1922B90
	private void EndRequestFriend(string result) { }

	// RVA: 0x1922DE4 Offset: 0x1922DE4 VA: 0x1922DE4
	protected void OnEndRequestDialog(bool isDecide) { }

	// RVA: 0x1922E70 Offset: 0x1922E70 VA: 0x1922E70
	public void RequestFriendProfile() { }

	// RVA: 0x192301C Offset: 0x192301C VA: 0x192301C
	protected void EndRequestFriendProfile(string result) { }

	// RVA: 0x192316C Offset: 0x192316C VA: 0x192316C
	public void ChangeLimitCountBySpoilerProtection() { }

	// RVA: 0x19232D0 Offset: 0x19232D0 VA: 0x19232D0
	protected void EndNoSearchWarning(bool isDecide) { }

	// RVA: 0x191FACC Offset: 0x191FACC VA: 0x191FACC
	protected void OnMoveEnd() { }

	// RVA: 0x19233AC Offset: 0x19233AC VA: 0x19233AC
	public void OnClickBack() { }

	// RVA: 0x19237B0 Offset: 0x19237B0 VA: 0x19237B0
	public void afterMainMenubarSelect() { }

	// RVA: 0x1923824 Offset: 0x1923824 VA: 0x1923824
	public void OnClickModeUserDetail() { }

	// RVA: 0x19238B4 Offset: 0x19238B4 VA: 0x19238B4
	public void OnClickModeEditLock() { }

	// RVA: 0x191ED54 Offset: 0x191ED54 VA: 0x191ED54
	private void CheckModeKind() { }

	// RVA: 0x1923944 Offset: 0x1923944 VA: 0x1923944
	private Vector3 GetHidePositionModeKindButtons() { }

	// RVA: 0x1923A04 Offset: 0x1923A04 VA: 0x1923A04
	private Vector3 GetDisplayPositionModeKindButtons() { }

	// RVA: 0x191DB84 Offset: 0x191DB84 VA: 0x191DB84
	private void InitModeKindButtons() { }

	// RVA: 0x191F04C Offset: 0x191F04C VA: 0x191F04C
	private void SetActiveModeKindButtons(bool isActive) { }

	// RVA: 0x1923B70 Offset: 0x1923B70 VA: 0x1923B70
	public void OnClickTabFriend() { }

	// RVA: 0x1923BEC Offset: 0x1923BEC VA: 0x1923BEC
	public void OnClickTabOffered() { }

	// RVA: 0x1923C60 Offset: 0x1923C60 VA: 0x1923C60
	public void OnClickTabSearch() { }

	// RVA: 0x192348C Offset: 0x192348C VA: 0x192348C
	public void messageDispChangeRequest(FriendRootComponent.messageRequestCallback callback) { }

	// RVA: 0x1922338 Offset: 0x1922338 VA: 0x1922338
	public void FriendLockRequst(Action<string> onFinishedRequest) { }

	// RVA: 0x1924084 Offset: 0x1924084 VA: 0x1924084
	public void changeClass(int classPos) { }

	// RVA: 0x1924118 Offset: 0x1924118 VA: 0x1924118
	public void SelectShowServantEquip(EquipTargetInfo equipInfo, ServantStatusDialog.Kind statusKind) { }

	// RVA: 0x19241D8 Offset: 0x19241D8 VA: 0x19241D8
	protected void EndShowServantEquip(bool isDecide) { }

	// RVA: 0x192427C Offset: 0x192427C VA: 0x192427C
	protected void EndCloseShowServantEquip() { }

	// RVA: 0x1924310 Offset: 0x1924310 VA: 0x1924310
	private void OnSelectFriendItem(FriendOperationItemListViewManager.ResultKind kind, int n) { }
