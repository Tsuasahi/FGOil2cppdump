
	// RVA: 0x1910A40 Offset: 0x1910A40 VA: 0x1910A40
	public void SetMode(BoxGachaItemListViewManager.InitMode mode, BoxGachaItemListViewManager.CallbackFunc callback) { }

	// RVA: 0x1910B68 Offset: 0x1910B68 VA: 0x1910B68
	public void SetMode(BoxGachaItemListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1910B70 Offset: 0x1910B70 VA: 0x1910B70
	public void SetMode(BoxGachaItemListViewManager.InitMode mode, float delay, Action callback) { }

	// RVA: 0x1910A48 Offset: 0x1910A48 VA: 0x1910A48
	public void SetMode(BoxGachaItemListViewManager.InitMode mode) { }

	// RVA: 0x1910B7C Offset: 0x1910B7C VA: 0x1910B7C
	protected void RequestListObject(BoxGachaItemListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1910E18 Offset: 0x1910E18 VA: 0x1910E18
	protected void RequestListObject(BoxGachaItemListViewObject.InitMode mode) { }

	// RVA: 0x1911094 Offset: 0x1911094 VA: 0x1911094
	protected void RequestInto() { }

	// RVA: 0x1911264 Offset: 0x1911264 VA: 0x1911264
	protected void OnMoveEnd() { }

	// RVA: 0x1911330 Offset: 0x1911330 VA: 0x1911330
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x191193C Offset: 0x191193C VA: 0x191193C
	public void closeItemDetail(bool isDecide) { }

	// RVA: 0x19119C8 Offset: 0x19119C8 VA: 0x19119C8
	private void closeSvtDetail(bool isDecide) { }

	// RVA: 0x1911A4C Offset: 0x1911A4C VA: 0x1911A4C
	private void CloseCommandCodeDetail(bool isDecide) { }

	// RVA: 0x1911AD0 Offset: 0x1911AD0 VA: 0x1911AD0
	public void ClickResetGachaBtn() { }

	// RVA: 0x1911F7C Offset: 0x1911F7C VA: 0x1911F7C
	public bool getIsRareTarget() { }

	// RVA: 0x1911F84 Offset: 0x1911F84 VA: 0x1911F84
	private void closeEventSvtConfirmDlg(bool isDecide) { }

	// RVA: 0x1912050 Offset: 0x1912050 VA: 0x1912050
	public void itemColliderCtr(bool isDisp) { }

	// RVA: 0x1912288 Offset: 0x1912288 VA: 0x1912288
	public void ResetBtnColliderCtr(bool isGachaReset) { }

	// RVA: 0x19122FC Offset: 0x19122FC VA: 0x19122FC
	public void SetScrollInfo() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D304 Offset: 0xD3D304 VA: 0xD3D304
	// RVA: 0x191243C Offset: 0x191243C VA: 0x191243C
	private void <closeEventSvtConfirmDlg>m__0() { }
}

// Namespace: 
public enum BoxGachaItemListViewManager.InitMode // TypeDefIndex: 9727
{
	// Fields
	public int value__; // 0x0
	public const BoxGachaItemListViewManager.InitMode NONE = 0;
	public const BoxGachaItemListViewManager.InitMode INTO = 1;
	public const BoxGachaItemListViewManager.InitMode INPUT = 2;
	public const BoxGachaItemListViewManager.InitMode ENTER = 3;
	public const BoxGachaItemListViewManager.InitMode EXIT = 4;
	public const BoxGachaItemListViewManager.InitMode MODIFY = 5;
}

// Namespace: 
public sealed class BoxGachaItemListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 9728
{
	// Methods

	// RVA: 0x19124A0 Offset: 0x19124A0 VA: 0x19124A0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x19124B0 Offset: 0x19124B0 VA: 0x19124B0 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x19126B0 Offset: 0x19126B0 VA: 0x19126B0 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x19126E4 Offset: 0x19126E4 VA: 0x19126E4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class BoxGachaItemListViewObject : ListViewObject // TypeDefIndex: 9729
{
	// Fields
	protected BoxGachaItemListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCD9FB0 Offset: 0xCD9FB0 VA: 0xCD9FB0
	[DebuggerBrowsableAttribute] // RVA: 0xCD9FB0 Offset: 0xCD9FB0 VA: 0xCD9FB0
	private Action callbackFunc; // 0x70
	protected BoxGachaItemListViewItemDraw itemDraw; // 0x78
	protected BoxGachaItemListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x19126F0 Offset: 0x19126F0 VA: 0x19126F0
	public void .ctor() { }

	// RVA: 0x1912758 Offset: 0x1912758 VA: 0x1912758
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1912844 Offset: 0x1912844 VA: 0x1912844
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1912930 Offset: 0x1912930 VA: 0x1912930
	protected void Awake() { }

	// RVA: 0x19129A4 Offset: 0x19129A4 VA: 0x19129A4
	private void OnDestroy() { }

	// RVA: 0x19103D8 Offset: 0x19103D8 VA: 0x19103D8
	public BoxGachaItemListViewItem GetItem() { }

	// RVA: 0x1912A70 Offset: 0x1912A70 VA: 0x1912A70 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1912A7C Offset: 0x1912A7C VA: 0x1912A7C Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1912B04 Offset: 0x1912B04 VA: 0x1912B04
	public void Init(BoxGachaItemListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1910D84 Offset: 0x1910D84 VA: 0x1910D84
	public void Init(BoxGachaItemListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x191100C Offset: 0x191100C VA: 0x191100C
	public void Init(BoxGachaItemListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x19109BC Offset: 0x19109BC VA: 0x19109BC
	public void Init(BoxGachaItemListViewObject.InitMode initMode) { }

	// RVA: 0x191300C Offset: 0x191300C VA: 0x191300C
	protected void SetupDisp() { }

	// RVA: 0x1912D58 Offset: 0x1912D58 VA: 0x1912D58
	private void EventIntoStart(float delay) { }

	// RVA: 0x191311C Offset: 0x191311C VA: 0x191311C
	private void EventIntoMove() { }

	// RVA: 0x19132BC Offset: 0x19132BC VA: 0x19132BC
	private void EventIntoMove2() { }

	// RVA: 0x1912EC0 Offset: 0x1912EC0 VA: 0x1912EC0
	private void EventExitStart(float delay) { }

	// RVA: 0x19133AC Offset: 0x19133AC VA: 0x19133AC
	private void EventExitMove() { }

	// RVA: 0x1913630 Offset: 0x1913630 VA: 0x1913630
	private void EventExitMove2() { }

	// RVA: 0x1913384 Offset: 0x1913384 VA: 0x1913384
	protected void EventMoveEnd() { }

	// RVA: 0x19136CC Offset: 0x19136CC VA: 0x19136CC Slot: 3
	public override string ToString() { }

	// RVA: 0x191379C Offset: 0x191379C VA: 0x191379C
	public void OnClickSelect() { }
}

// Namespace: 
public enum BoxGachaItemListViewObject.InitMode // TypeDefIndex: 9730
{
	// Fields
	public int value__; // 0x0
	public const BoxGachaItemListViewObject.InitMode INVISIBLE = 0;
	public const BoxGachaItemListViewObject.InitMode INVALID = 1;
	public const BoxGachaItemListViewObject.InitMode VALID = 2;
	public const BoxGachaItemListViewObject.InitMode INPUT = 3;
	public const BoxGachaItemListViewObject.InitMode INTO = 4;
	public const BoxGachaItemListViewObject.InitMode ENTER = 5;
	public const BoxGachaItemListViewObject.InitMode EXIT = 6;
	public const BoxGachaItemListViewObject.InitMode MODIFY = 7;
}

// Namespace: 
protected enum BoxGachaItemListViewObject.State // TypeDefIndex: 9731
{
	// Fields
	public int value__; // 0x0
	public const BoxGachaItemListViewObject.State INIT = 0;
	public const BoxGachaItemListViewObject.State IDLE = 1;
	public const BoxGachaItemListViewObject.State MOVE = 2;
	public const BoxGachaItemListViewObject.State INPUT = 3;
}

// Namespace: 
public class BoxGachaTalkInfo // TypeDefIndex: 9732
{
	// Fields
	public List<string> beforeVoiceIdList; // 0x10
	public List<string> beforeTalkMessageList; // 0x18
	public List<string> afterVoiceIdList; // 0x20
	public List<string> afterTalkMessageList; // 0x28

	// Methods

	// RVA: 0x1916880 Offset: 0x1916880 VA: 0x1916880
	public void .ctor() { }

	// RVA: 0x1916944 Offset: 0x1916944 VA: 0x1916944
	public void SetBeforeGachaTalkInfo(string voiceId, string text) { }

	// RVA: 0x19169E0 Offset: 0x19169E0 VA: 0x19169E0
	public void SetAfterGachaTalkInfo(string voiceId, string text) { }

	// RVA: 0x1915500 Offset: 0x1915500 VA: 0x1915500
	public string getBeforeVoiceId(int idx) { }

	// RVA: 0x1914660 Offset: 0x1914660 VA: 0x1914660
	public string getBeforeTalkMessage(int idx) { }

	// RVA: 0x1916608 Offset: 0x1916608 VA: 0x1916608
	public string getAfterVoiceId(int idx) { }

	// RVA: 0x19146D0 Offset: 0x19146D0 VA: 0x19146D0
	public string getAfterTalkMessage(int idx) { }
}

// Namespace: 
public class MultiSvtInfoComponent : BaseMonoBehaviour // TypeDefIndex: 9733
{
	// Fields
	[SerializeField] // RVA: 0xCD9FEC Offset: 0xCD9FEC VA: 0xCD9FEC
	protected GameObject svtFigurePanel; // 0x18
	private List<StandFigureCollect> standFigureCollectList; // 0x20
	private int currentIdx; // 0x28
	private int currentMoveIdx; // 0x2C
	private int currentSvtId; // 0x30
	private int currentSvtLimitCnt; // 0x34
	private int currentSvtFace; // 0x38

	// Methods

	// RVA: 0x17B906C Offset: 0x17B906C VA: 0x17B906C
	public void .ctor() { }

	// RVA: 0x17B9074 Offset: 0x17B9074 VA: 0x17B9074
	public void setCurrentRewardInfo(int svtId, int svtLimitCnt, int face, int idx, int moveIdx, bool isEventShop, bool isNpc, Action callbackFunc) { }

	// RVA: 0x17B93E4 Offset: 0x17B93E4 VA: 0x17B93E4
	public UIStandFigureR GetSvtStandFigure(int index = 0) { }

	// RVA: 0x17B946C Offset: 0x17B946C VA: 0x17B946C
	public List<StandFigureCollect> GetSvtStandFigureCollect() { }

	// RVA: 0x17B9474 Offset: 0x17B9474 VA: 0x17B9474
	public int getBannerIdx() { }

	// RVA: 0x17B947C Offset: 0x17B947C VA: 0x17B947C
	public int getMoveBannerIdx() { }

	// RVA: 0x17B9484 Offset: 0x17B9484 VA: 0x17B9484
	public void setEnabledCollider(bool isEnable) { }

	// RVA: 0x17B94FC Offset: 0x17B94FC VA: 0x17B94FC
	public int getGuideSvtInfo() { }

	// RVA: 0x17B9504 Offset: 0x17B9504 VA: 0x17B9504
	public int getGuideSvtFace() { }

	// RVA: 0x17B950C Offset: 0x17B950C VA: 0x17B950C
	public void SetGuideSvtInfo(int id) { }

	// RVA: 0x17B9514 Offset: 0x17B9514 VA: 0x17B9514
	public void SetGuideSvtFace(int face) { }
}

// Namespace: 
public static class BoxGachaUtility // TypeDefIndex: 9734
{
	// Fields
	public const int MAX_DRAW_COUNT = 10;
	public const int CHANGE_MAX_DRAW_COUNT = 100;
	public const int ITEM_UNIT_COUNT = 10;
	public const int OVER_VIEW_COUNT = 51;
	public const int OVER_VIEW_EFFECT_COUNT = 30;
	public const int START_SCROLL_COUNT = 50;
	public const int ITEM_HEIGHT = 60;
	public const int SCROLL_VIEW_ADJUST_HEIGHT = 5;
	public static readonly Vector3 NORMAL_ITEM_SIZE; // 0x0
	public static readonly Vector3 CHANGE_MAX_ITEM_SIZE; // 0xC
	public static readonly Vector3 CHANGE_MAX_DRAW_EFFECT_SCALE; // 0x18
	public const string GACHA_NUM_IMG = "img_gachatxt_{0:D2}";

	// Methods

	// RVA: 0x1914BC0 Offset: 0x1914BC0 VA: 0x1914BC0
	public static void SetMultiGachaButtonDigitNum(int gachaTime, UISprite oneDigit, UISprite twoDigit, UISprite threeDigit) { }

	// RVA: 0x1916D60 Offset: 0x1916D60 VA: 0x1916D60
	public static void SetBoxGachaNumSprite(UISprite sprite, int num) { }

	// RVA: 0x1916E54 Offset: 0x1916E54 VA: 0x1916E54
	private static void .cctor() { }
}

// Namespace: 
public class BoxGahcaHistory // TypeDefIndex: 9735
{
	// Fields
	public int boxGachaId; // 0x10
	public int[] numbers; // 0x18

	// Methods

	// RVA: 0x1916F58 Offset: 0x1916F58 VA: 0x1916F58
	public void .ctor() { }
}

// Namespace: 
public class EventMissionItemListViewItem : MissionListViewItem // TypeDefIndex: 9736
{
	// Fields
	private int rewardRarityId; // 0x120
	private int rewardNum; // 0x124
	private bool isHideReward; // 0x128
	private bool isDailyMission; // 0x129

	// Properties
	public override bool IsShowRewardInfo { get; }
	public int GetRewardNum { get; }
	public bool IsHideReward { get; }
	public bool IsDailyMission { get; }
	public int RewardRarityId { get; }

	// Methods

	// RVA: 0x1B85544 Offset: 0x1B85544 VA: 0x1B85544
	public void .ctor(EventMissionEntity missionData, bool isDaily) { }

	// RVA: 0x1B856C4 Offset: 0x1B856C4 VA: 0x1B856C4 Slot: 7
	protected override void SetGiftData() { }

	// RVA: 0x1B85790 Offset: 0x1B85790 VA: 0x1B85790 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x1B85870 Offset: 0x1B85870 VA: 0x1B85870
	public string GetGiftName() { }

	// RVA: 0x1B85A18 Offset: 0x1B85A18 VA: 0x1B85A18 Slot: 8
	public override bool get_IsShowRewardInfo() { }

	// RVA: 0x1B85A54 Offset: 0x1B85A54 VA: 0x1B85A54
	public int get_GetRewardNum() { }

	// RVA: 0x1B85A5C Offset: 0x1B85A5C VA: 0x1B85A5C
	public bool get_IsHideReward() { }

	// RVA: 0x1B85A9C Offset: 0x1B85A9C VA: 0x1B85A9C
	public bool get_IsDailyMission() { }

	// RVA: 0x1B85AA4 Offset: 0x1B85AA4 VA: 0x1B85AA4
	public int get_RewardRarityId() { }

	// RVA: 0x1B85AAC Offset: 0x1B85AAC VA: 0x1B85AAC
	public bool ExistClearConditionEntity() { }
}

// Namespace: 
public class EventMissionItemListViewItemDraw : MissionListViewItemDraw // TypeDefIndex: 9737
{
	// Fields
	public static readonly int TIME_UPDATE_ITVL_SEC; // 0x0
	[SerializeField] // RVA: 0xCD9FFC Offset: 0xCD9FFC VA: 0xCD9FFC
	protected ShiningIconComponent newIcon; // 0xF8
	[SerializeField] // RVA: 0xCDA00C Offset: 0xCDA00C VA: 0xCDA00C
	protected ItemNumDispControl numDispctr; // 0x100
	[SerializeField] // RVA: 0xCDA01C Offset: 0xCDA01C VA: 0xCDA01C
	protected GameObject rarityInfo; // 0x108
	[SerializeField] // RVA: 0xCDA02C Offset: 0xCDA02C VA: 0xCDA02C
	protected GameObject countLbInfo; // 0x110
	[SerializeField] // RVA: 0xCDA03C Offset: 0xCDA03C VA: 0xCDA03C
	protected UISprite rewardBackSprite; // 0x118
	[SerializeField] // RVA: 0xCDA04C Offset: 0xCDA04C VA: 0xCDA04C
	private UILabel debugLabel; // 0x120
	private bool isAchiveTime; // 0x128

	// Methods

	// RVA: 0x1EB01D4 Offset: 0x1EB01D4 VA: 0x1EB01D4
	public void .ctor() { }

	// RVA: 0x1EB023C Offset: 0x1EB023C VA: 0x1EB023C Slot: 4
	public override bool SetItem(MissionListViewItem missionListViewItem, MissionListViewItemDraw.DispMode mode, ListViewManager listViewManager) { }

	// RVA: 0x1EB0ACC Offset: 0x1EB0ACC VA: 0x1EB0ACC Slot: 5
	protected override void InitDispResTime(MissionListViewItem missionListviewItem) { }

	// RVA: 0x1EB0FFC Offset: 0x1EB0FFC VA: 0x1EB0FFC Slot: 6
	protected override void SetLockMissionBoard(MissionListViewItem missionListViewItem) { }

	// RVA: 0x1EB04CC Offset: 0x1EB04CC VA: 0x1EB04CC
	private void SetRewardItemIcon(EventMissionItemListViewItem item, EventMissionItemListViewManager manager) { }

	// RVA: 0x1EB1040 Offset: 0x1EB1040 VA: 0x1EB1040 Slot: 8
	protected override void SetRewardStatusImg(MissionInfoMaker.ProgStatus status) { }

	// RVA: 0x1EB0E80 Offset: 0x1EB0E80 VA: 0x1EB0E80
	private static string GetRestTimeText(long endTime) { }

	// RVA: 0x1EB0F38 Offset: 0x1EB0F38 VA: 0x1EB0F38
	private static string GetAchiveTimeText(long closeTime) { }

	// RVA: 0x1EB1148 Offset: 0x1EB1148 VA: 0x1EB1148
	public void UpdateItem(EventMissionItemListViewItem item, MissionListViewItemDraw.DispMode mode) { }

	// RVA: 0x1EB142C Offset: 0x1EB142C VA: 0x1EB142C
	public void OnChangeAlphaAnim(EventMissionItemListViewItem item, MissionListViewItemDraw.DispMode mode, EventMissionItemListViewManager manager) { }

	// RVA: 0x1EB1434 Offset: 0x1EB1434 VA: 0x1EB1434
	private void ChangeNextRewardIcon(EventMissionItemListViewManager manager) { }

	// RVA: 0x1EB15B8 Offset: 0x1EB15B8 VA: 0x1EB15B8 Slot: 10
	public override void SetInput(MissionListViewItem missionListViewItem) { }

	// RVA: 0x1EB09D4 Offset: 0x1EB09D4 VA: 0x1EB09D4
	public void UpdateNewIcon(EventMissionItemListViewItem item) { }

	// RVA: 0x1EB16B8 Offset: 0x1EB16B8 VA: 0x1EB16B8
	public void ModifyBoardImage(int bannerGroupId) { }

	// RVA: 0x1EB178C Offset: 0x1EB178C VA: 0x1EB178C
	private static void .cctor() { }
}

// Namespace: 
public class EventMissionItemListViewManager : ListViewManager // TypeDefIndex: 9738
{
	// Fields
	private static readonly float ALPHA_ANIMATION_SPD; // 0x0
	private static readonly float ALPHA_ANIMATION_INTERVAL; // 0x4
	private static readonly int ALPHA_ANIM_COUNT_RESET_VAL; // 0x8
	private float alphaAnimNow; // 0x138
	private float alphaAnimTgt; // 0x13C
	private float alphaAnimTimeOld; // 0x140
	private int alphaAnimCnt; // 0x144
	[SerializeField] // RVA: 0xCDA05C Offset: 0xCDA05C VA: 0xCDA05C
	protected PlayMakerFSM targetFSM; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xCDA06C Offset: 0xCDA06C VA: 0xCDA06C
	[DebuggerBrowsableAttribute] // RVA: 0xCDA06C Offset: 0xCDA06C VA: 0xCDA06C
	private Action callbackFunc2; // 0x150
	protected int callbackCount; // 0x158
	protected EventMissionItemListViewManager.InitMode initMode; // 0x15C
	protected Action actionCallback; // 0x160
	protected static AssetData effectAssetData; // 0x10
	protected EventMissionItemListViewItem openTargetItem; // 0x168
	protected float openItemTime; // 0x170
	protected float endEffectTime; // 0x174
	protected float listInDelay; // 0x178
	protected int targetMissionId; // 0x17C
	protected EventMissionItemListViewManager.FilterStatus filterStatus; // 0x180
	private EventMissionItemListViewManager.FilterStatus tempFilterStatus; // 0x184
	private int tempSelectDispNo; // 0x188
	[SerializeField] // RVA: 0xCDA0A8 Offset: 0xCDA0A8 VA: 0xCDA0A8
	protected UICommonButton filterBtn; // 0x190
	[SerializeField] // RVA: 0xCDA0B8 Offset: 0xCDA0B8 VA: 0xCDA0B8
	protected UISprite filterBtnTxt; // 0x198
	protected ListViewSort baseSortInfo; // 0x1A0
	protected ListViewSort operationSortInfo; // 0x1A8
	[SerializeField] // RVA: 0xCDA0C8 Offset: 0xCDA0C8 VA: 0xCDA0C8
	protected GameObject touchBlocker; // 0x1B0
	protected bool isEndEvent; // 0x1B8
	protected int currentEventId; // 0x1BC
	private bool isGetCostumeReleaseItem; // 0x1C0
	private int costumeReleaseItemObjectId; // 0x1C4
	private bool isClickListViewEnabled; // 0x1C8
	private EventMissionEntity missionToRecieve; // 0x1D0
	private GetSvts[] getSvtList; // 0x1D8
	private GetCommandCodes[] getCommandCodeList; // 0x1E0
	public Transform instantiatingPOS; // 0x1E8
	public EventRewardRootComponent eventRootComponent; // 0x1F0
	private ServantRewardAction svtRewardComp; // 0x1F8
	private const int messageDlgDepth = 150;
	private Action ShowMSG; // 0x200
	[CompilerGeneratedAttribute] // RVA: 0xCDA0D8 Offset: 0xCDA0D8 VA: 0xCDA0D8
	private static Action <>f__am$cache0; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCDA0E8 Offset: 0xCDA0E8 VA: 0xCDA0E8
	private static Action <>f__am$cache1; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCDA0F8 Offset: 0xCDA0F8 VA: 0xCDA0F8
	private static Action <>f__am$cache2; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCDA108 Offset: 0xCDA108 VA: 0xCDA108
	private static Action <>f__am$cache3; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xCDA118 Offset: 0xCDA118 VA: 0xCDA118
	private static Comparison<EventMissionActionInfo> <>f__am$cache4; // 0x38

	// Properties
	public List<EventMissionItemListViewObject> ObjectList { get; }
	public List<EventMissionItemListViewObject> ClippingObjectList { get; }
	public float AlphaAnimNow { get; }

	// Methods

	// RVA: 0x1EB17E0 Offset: 0x1EB17E0 VA: 0x1EB17E0
	public void .ctor() { }

	// RVA: 0x1EB17F4 Offset: 0x1EB17F4 VA: 0x1EB17F4
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x1EB18E4 Offset: 0x1EB18E4 VA: 0x1EB18E4
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x1EB19D4 Offset: 0x1EB19D4 VA: 0x1EB19D4
	private void Update() { }

	// RVA: 0x1EB1B74 Offset: 0x1EB1B74 VA: 0x1EB1B74
	public List<EventMissionItemListViewObject> get_ObjectList() { }

	// RVA: 0x1EB1D40 Offset: 0x1EB1D40 VA: 0x1EB1D40
	public List<EventMissionItemListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1EB2020 Offset: 0x1EB2020 VA: 0x1EB2020
	public void CreateList(EventMissionEntity[] missionList, int eventId, bool isDailyMission) { }

	// RVA: 0x1EB202C Offset: 0x1EB202C VA: 0x1EB202C
	public void CreateList(EventMissionEntity[] missionList, int eventId, bool isDailyMission, bool isTouchListEnabled) { }

	// RVA: 0x1EB2310 Offset: 0x1EB2310 VA: 0x1EB2310
	public void setNextMissionInfo(EventMissionActionInfo currentMissionActionInfo, EventMissionActionInfo eventMissionActionInfo, int missionID, Action callback) { }

	// RVA: 0x1EB25CC Offset: 0x1EB25CC VA: 0x1EB25CC
	public void MoveEaseScroll(int index, Action onFinish, EventMissionActionInfo eventMissionActionInfo) { }

	[DebuggerHiddenAttribute] // RVA: 0xD3D314 Offset: 0xD3D314 VA: 0xD3D314
	// RVA: 0x1EB28B4 Offset: 0x1EB28B4 VA: 0x1EB28B4
	private IEnumerator SetPreviousFilter(int index, Action onFinished) { }

	[DebuggerHiddenAttribute] // RVA: 0xD3D324 Offset: 0xD3D324 VA: 0xD3D324
	// RVA: 0x1EB2960 Offset: 0x1EB2960 VA: 0x1EB2960
	private IEnumerator MoveEaseScroll_IE(int index, Action onFinished) { }

	// RVA: 0x1EB2A18 Offset: 0x1EB2A18 VA: 0x1EB2A18
	private float DoMoveEaseOut(float currentTime, float duration, float startValue, float changeValue) { }

	// RVA: 0x1EB2B08 Offset: 0x1EB2B08 VA: 0x1EB2B08
	public void setMissionListIdx(bool isRaid) { }

	// RVA: 0x1EB2CD0 Offset: 0x1EB2CD0 VA: 0x1EB2CD0
	public void DestroyList() { }

	// RVA: 0x1EB280C Offset: 0x1EB280C VA: 0x1EB280C
	public EventMissionItemListViewItem GetItem(int index) { }

	// RVA: 0x1EB2CD8 Offset: 0x1EB2CD8 VA: 0x1EB2CD8 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1EB2D98 Offset: 0x1EB2D98 VA: 0x1EB2D98
	public void SetMode(EventMissionItemListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1EB3060 Offset: 0x1EB3060 VA: 0x1EB3060
	public void SetMode(EventMissionItemListViewManager.InitMode mode, float delay, Action callback) { }

	// RVA: 0x1EB2DA0 Offset: 0x1EB2DA0 VA: 0x1EB2DA0
	public void SetMode(EventMissionItemListViewManager.InitMode mode) { }

	// RVA: 0x1EB3268 Offset: 0x1EB3268 VA: 0x1EB3268
	protected void RequestListObject(MissionListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1EB306C Offset: 0x1EB306C VA: 0x1EB306C
	protected void RequestListObject(MissionListViewObject.InitMode mode) { }

	// RVA: 0x1EB3478 Offset: 0x1EB3478 VA: 0x1EB3478
	protected void RequestInto() { }

	// RVA: 0x1EB3650 Offset: 0x1EB3650 VA: 0x1EB3650
	protected void OnMoveEnd() { }

	// RVA: 0x1EB379C Offset: 0x1EB379C VA: 0x1EB379C
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x1EB3B9C Offset: 0x1EB3B9C VA: 0x1EB3B9C
	private void showRewardDetailInfo(EventMissionItemListViewItem selectItem) { }

	// RVA: 0x1EB46E4 Offset: 0x1EB46E4 VA: 0x1EB46E4
	private void openCostumeReleaseDetail(int objectId) { }

	// RVA: 0x1EB440C Offset: 0x1EB440C VA: 0x1EB440C
	private string GetReplaceDialogMessage(GiftEntity beforeGiftEntity, GiftEntity AfterGiftEntity) { }

	// RVA: 0x1EB4398 Offset: 0x1EB4398 VA: 0x1EB4398
	private void recieveReward(EventMissionEntity missionEntity) { }

	// RVA: 0x1EB4928 Offset: 0x1EB4928 VA: 0x1EB4928
	public void checkAcceptable() { }

	// RVA: 0x1EB4D6C Offset: 0x1EB4D6C VA: 0x1EB4D6C
	public void unAcceptableDlg() { }

	// RVA: 0x1EB4DEC Offset: 0x1EB4DEC VA: 0x1EB4DEC
	public void requestMissionReward() { }

	// RVA: 0x1EB4F04 Offset: 0x1EB4F04 VA: 0x1EB4F04
	private void missionRewardCallback(string result) { }

	// RVA: 0x1EB50E8 Offset: 0x1EB50E8 VA: 0x1EB50E8
	private void SaveTerminalTransitionInfo() { }

	// RVA: 0x1EB516C Offset: 0x1EB516C VA: 0x1EB516C
	private TerminalTransitionInfo CreateTerminalTransitionInfo(int missionId) { }

	// RVA: 0x1EB5318 Offset: 0x1EB5318 VA: 0x1EB5318
	private string GetVoiceAssetName(string[] afterActionVals) { }

	// RVA: 0x1EB551C Offset: 0x1EB551C VA: 0x1EB551C
	public void AcceptReward() { }

	// RVA: 0x1EB631C Offset: 0x1EB631C VA: 0x1EB631C
	private void StartItemGetEffectAction(GiftEntity[] gifts, int idx, Action afterDetail) { }

	// RVA: 0x1EB6B30 Offset: 0x1EB6B30 VA: 0x1EB6B30
	private void EndItemGetEffectAction(Action afterDetail) { }

	// RVA: 0x1EB71C4 Offset: 0x1EB71C4 VA: 0x1EB71C4
	private void afterReward() { }

	// RVA: 0x1EB6E50 Offset: 0x1EB6E50 VA: 0x1EB6E50
	private void startRewardCostumeReleaseGetEffect(string name, GiftEntity[] gifts, int idx, Action afterDetail) { }

	// RVA: 0x1EB6FE4 Offset: 0x1EB6FE4 VA: 0x1EB6FE4
	private void startRewardItemGetEffect(int itemId, GiftEntity[] gifts, int idx, Action afterDetail) { }

	// RVA: 0x1EB6C54 Offset: 0x1EB6C54 VA: 0x1EB6C54
	private void startRewardGetEffect(long userSvtID, bool isNew, bool isDoEffect, Gift.Type giftType, GiftEntity[] gifts, int idx, Action afterDetail) { }

	// RVA: 0x1EB726C Offset: 0x1EB726C VA: 0x1EB726C
	private void startSvtListGetEffect(int callCnt, Action callback) { }

	// RVA: 0x1EB741C Offset: 0x1EB741C VA: 0x1EB741C
	private void SvtEffCaller(Action callback) { }

	// RVA: 0x1EB7534 Offset: 0x1EB7534 VA: 0x1EB7534
	public void setAfterAction() { }

	// RVA: 0x1EB75D4 Offset: 0x1EB75D4 VA: 0x1EB75D4
	private void loadOpenMissionEffect() { }

	// RVA: 0x1EB7684 Offset: 0x1EB7684 VA: 0x1EB7684
	private void endloadEffect(AssetData data) { }

	// RVA: 0x1EB7DCC Offset: 0x1EB7DCC VA: 0x1EB7DCC
	public static GameObject getEffect(string name, Transform parentTr) { }

	// RVA: 0x1EB7FB8 Offset: 0x1EB7FB8 VA: 0x1EB7FB8
	public void closeItemDetail(bool isDecide) { }

	// RVA: 0x1EB8044 Offset: 0x1EB8044 VA: 0x1EB8044
	private void closeSvtDetail(bool isDecide) { }

	// RVA: 0x1EB80A8 Offset: 0x1EB80A8 VA: 0x1EB80A8
	private void CloseCommandCodeDetail(bool isDecide) { }

	// RVA: 0x1EB810C Offset: 0x1EB810C VA: 0x1EB810C
	public void ModifyItem() { }

	// RVA: 0x1EB84D0 Offset: 0x1EB84D0 VA: 0x1EB84D0
	public void SetOpenItem() { }

	// RVA: 0x1EB870C Offset: 0x1EB870C VA: 0x1EB870C
	private void modifyOpenItem() { }

	// RVA: 0x1EB8B90 Offset: 0x1EB8B90 VA: 0x1EB8B90
	private void actionAfterCallback() { }

	// RVA: 0x1EB19FC Offset: 0x1EB19FC VA: 0x1EB19FC
	private void UpdateAnim() { }

	// RVA: 0x1EB8C80 Offset: 0x1EB8C80 VA: 0x1EB8C80
	private void ResetAlphaAnimTime() { }

	// RVA: 0x1EB1030 Offset: 0x1EB1030 VA: 0x1EB1030
	public int GetAlphaAnimCnt(int length) { }

	// RVA: 0x1EB8BAC Offset: 0x1EB8BAC VA: 0x1EB8BAC
	private void OnChangeAlphaAnim() { }

	// RVA: 0x1EB8D6C Offset: 0x1EB8D6C VA: 0x1EB8D6C
	public float get_AlphaAnimNow() { }

	// RVA: 0x1EB77A0 Offset: 0x1EB77A0 VA: 0x1EB77A0
	protected void RefrashListDisp() { }

	// RVA: 0x1EB8D74 Offset: 0x1EB8D74 VA: 0x1EB8D74
	protected void RefrashListDisp(int missionId) { }

	// RVA: 0x1EB9030 Offset: 0x1EB9030 VA: 0x1EB9030
	public void OnClickFilterList() { }

	// RVA: 0x1EB2308 Offset: 0x1EB2308 VA: 0x1EB2308
	private void setFilterId(int id) { }

	// RVA: 0x1EB79FC Offset: 0x1EB79FC VA: 0x1EB79FC
	private void setList() { }

	// RVA: 0x1EB90BC Offset: 0x1EB90BC VA: 0x1EB90BC
	private void setFilterName(string targetFile) { }

	// RVA: 0x1EB9190 Offset: 0x1EB9190 VA: 0x1EB9190
	public bool GetIsCostumeReleaseItem() { }

	// RVA: 0x1EB9198 Offset: 0x1EB9198 VA: 0x1EB9198
	public int GetCostumeReleaseItemObjectId() { }

	// RVA: 0x1EB91A0 Offset: 0x1EB91A0 VA: 0x1EB91A0
	public void SetScrollEnable(bool enable) { }

	// RVA: 0x1EB9208 Offset: 0x1EB9208 VA: 0x1EB9208
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D334 Offset: 0xD3D334 VA: 0xD3D334
	// RVA: 0x1EB9280 Offset: 0x1EB9280 VA: 0x1EB9280
	private void <setNextMissionInfo>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D344 Offset: 0xD3D344 VA: 0xD3D344
	// RVA: 0x1EB9284 Offset: 0x1EB9284 VA: 0x1EB9284
	private void <setNextMissionInfo>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D354 Offset: 0xD3D354 VA: 0xD3D354
	// RVA: 0x1EB9288 Offset: 0x1EB9288 VA: 0x1EB9288
	private static void <checkAcceptable>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D364 Offset: 0xD3D364 VA: 0xD3D364
	// RVA: 0x1EB944C Offset: 0x1EB944C VA: 0x1EB944C
	private static void <checkAcceptable>m__3() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D374 Offset: 0xD3D374 VA: 0xD3D374
	// RVA: 0x1EB9610 Offset: 0x1EB9610 VA: 0x1EB9610
	private void <modifyOpenItem>m__4() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D384 Offset: 0xD3D384 VA: 0xD3D384
	// RVA: 0x1EB9B68 Offset: 0x1EB9B68 VA: 0x1EB9B68
	private static void <checkAcceptable>m__5() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D394 Offset: 0xD3D394 VA: 0xD3D394
	// RVA: 0x1EB9BC8 Offset: 0x1EB9BC8 VA: 0x1EB9BC8
	private static void <checkAcceptable>m__6() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D3A4 Offset: 0xD3D3A4 VA: 0xD3D3A4
	// RVA: 0x1EB9C28 Offset: 0x1EB9C28 VA: 0x1EB9C28
	private static int <modifyOpenItem>m__7(EventMissionActionInfo a, EventMissionActionInfo b) { }
}

// Namespace: 
public enum EventMissionItemListViewManager.InitMode // TypeDefIndex: 9739
{
	// Fields
	public int value__; // 0x0
	public const EventMissionItemListViewManager.InitMode NONE = 0;
	public const EventMissionItemListViewManager.InitMode INTO = 1;
	public const EventMissionItemListViewManager.InitMode VALID = 2;
	public const EventMissionItemListViewManager.InitMode INPUT = 3;
	public const EventMissionItemListViewManager.InitMode ENTER = 4;
	public const EventMissionItemListViewManager.InitMode EXIT = 5;
	public const EventMissionItemListViewManager.InitMode MODIFY = 6;
}

// Namespace: 
public enum EventMissionItemListViewManager.FilterStatus // TypeDefIndex: 9740
{
	// Fields
	public int value__; // 0x0
	public const EventMissionItemListViewManager.FilterStatus INIT = 0;
	public const EventMissionItemListViewManager.FilterStatus CLEAR = 1;
	public const EventMissionItemListViewManager.FilterStatus PROGRESS = 2;
	public const EventMissionItemListViewManager.FilterStatus NOTOPEN = 3;
	public const EventMissionItemListViewManager.FilterStatus ACHIVE = 4;
}

// Namespace: 
private class EventMissionItemListViewManager.resData // TypeDefIndex: 9741
{
	// Fields
	public GetSvts[] getSvts; // 0x10
	public GetCommandCodes[] getCommandCodes; // 0x18

	// Methods

	// RVA: 0x1EBC584 Offset: 0x1EBC584 VA: 0x1EBC584
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB0990 Offset: 0xCB0990 VA: 0xCB0990
private sealed class EventMissionItemListViewManager.<SetPreviousFilter>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9742
{
	// Fields
	internal int index; // 0x10
	internal Action onFinished; // 0x18
	internal int <sum>__0; // 0x20
	internal List<int> <tempList>__0; // 0x28
	internal int <closest>__0; // 0x30
	internal int <order>__0; // 0x34
	internal EventMissionItemListViewManager $this; // 0x38
	internal object $current; // 0x40
	internal bool $disposing; // 0x48
	internal int $PC; // 0x4C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD49574 Offset: 0xD49574 VA: 0xD49574
	// RVA: 0x1EB2A08 Offset: 0x1EB2A08 VA: 0x1EB2A08
	public void .ctor() { }

	// RVA: 0x1EBAA90 Offset: 0x1EBAA90 VA: 0x1EBAA90 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD49584 Offset: 0xD49584 VA: 0xD49584
	// RVA: 0x1EBAF20 Offset: 0x1EBAF20 VA: 0x1EBAF20 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD49594 Offset: 0xD49594 VA: 0xD49594
	// RVA: 0x1EBAF28 Offset: 0x1EBAF28 VA: 0x1EBAF28 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD495A4 Offset: 0xD495A4 VA: 0xD495A4
	// RVA: 0x1EBAF30 Offset: 0x1EBAF30 VA: 0x1EBAF30 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD495B4 Offset: 0xD495B4 VA: 0xD495B4
	// RVA: 0x1EBAF44 Offset: 0x1EBAF44 VA: 0x1EBAF44 Slot: 6
	public void Reset() { }

	// RVA: 0x1EBAFAC Offset: 0x1EBAFAC VA: 0x1EBAFAC
	internal int <>m__0(int x, int y) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB09A0 Offset: 0xCB09A0 VA: 0xCB09A0
private sealed class EventMissionItemListViewManager.<MoveEaseScroll_IE>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9743
{
	// Fields
	internal float <start>__0; // 0x10
	internal Vector3 <initPosion>__0; // 0x14
	internal float <scrollContentSize>__0; // 0x20
	internal int index; // 0x24
	internal float <end>__0; // 0x28
	internal float <movePer>__0; // 0x2C
	internal float <moveValue>__0; // 0x30
	internal float <duration>__0; // 0x34
	internal float <timer>__0; // 0x38
	internal float <val>__1; // 0x3C
	internal Action onFinished; // 0x40
	internal EventMissionItemListViewManager $this; // 0x48
	internal object $current; // 0x50
	internal bool $disposing; // 0x58
	internal int $PC; // 0x5C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD495C4 Offset: 0xD495C4 VA: 0xD495C4
	// RVA: 0x1EB2A10 Offset: 0x1EB2A10 VA: 0x1EB2A10
	public void .ctor() { }

	// RVA: 0x1EBA608 Offset: 0x1EBA608 VA: 0x1EBA608 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD495D4 Offset: 0xD495D4 VA: 0xD495D4
	// RVA: 0x1EBA9B8 Offset: 0x1EBA9B8 VA: 0x1EBA9B8 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD495E4 Offset: 0xD495E4 VA: 0xD495E4
	// RVA: 0x1EBA9C0 Offset: 0x1EBA9C0 VA: 0x1EBA9C0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD495F4 Offset: 0xD495F4 VA: 0xD495F4
	// RVA: 0x1EBA9C8 Offset: 0x1EBA9C8 VA: 0x1EBA9C8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD49604 Offset: 0xD49604 VA: 0xD49604
	// RVA: 0x1EBA9DC Offset: 0x1EBA9DC VA: 0x1EBA9DC Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB09B0 Offset: 0xCB09B0 VA: 0xCB09B0
private sealed class EventMissionItemListViewManager.<OnClickListView>c__AnonStorey2 // TypeDefIndex: 9744
{
	// Fields
	internal EventMissionItemListViewItem selectItem; // 0x10
	internal EventMissionItemListViewManager $this; // 0x18

	// Methods

	// RVA: 0x1EB3B94 Offset: 0x1EB3B94 VA: 0x1EB3B94
	public void .ctor() { }

	// RVA: 0x1EBAA44 Offset: 0x1EBAA44 VA: 0x1EBAA44
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB09C0 Offset: 0xCB09C0 VA: 0xCB09C0
private sealed class EventMissionItemListViewManager.<AcceptReward>c__AnonStorey4 // TypeDefIndex: 9745
{
	// Fields
	internal StringBuilder svtTypeDialogMessage; // 0x10
	internal StringBuilder itemTypeDialogMessage; // 0x18
	internal EventMissionItemListViewManager $this; // 0x20

	// Methods

	// RVA: 0x1EB630C Offset: 0x1EB630C VA: 0x1EB630C
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB09D0 Offset: 0xCB09D0 VA: 0xCB09D0
private sealed class EventMissionItemListViewManager.<AcceptReward>c__AnonStorey3 // TypeDefIndex: 9746
{
	// Fields
	internal List<GiftEntity> giftList; // 0x10
	internal int giftTypeItemDialogNum; // 0x18
	internal string sendName; // 0x20
	internal EventMissionItemListViewManager.<AcceptReward>c__AnonStorey4 <>f__ref$4; // 0x28

	// Methods

	// RVA: 0x1EB6314 Offset: 0x1EB6314 VA: 0x1EB6314
	public void .ctor() { }

	// RVA: 0x1EB9C68 Offset: 0x1EB9C68 VA: 0x1EB9C68
	internal void <>m__0() { }

	// RVA: 0x1EBA118 Offset: 0x1EBA118 VA: 0x1EBA118
	internal void <>m__1() { }

	// RVA: 0x1EBA1B8 Offset: 0x1EBA1B8 VA: 0x1EBA1B8
	internal void <>m__2() { }

	// RVA: 0x1EBA244 Offset: 0x1EBA244 VA: 0x1EBA244
	internal void <>m__3() { }

	// RVA: 0x1EBA358 Offset: 0x1EBA358 VA: 0x1EBA358
	internal void <>m__4() { }

	// RVA: 0x1EBA518 Offset: 0x1EBA518 VA: 0x1EBA518
	internal void <>m__5() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB09E0 Offset: 0xCB09E0 VA: 0xCB09E0
private sealed class EventMissionItemListViewManager.<EndItemGetEffectAction>c__AnonStorey5 // TypeDefIndex: 9747
{
	// Fields
	internal Action afterDetail; // 0x10
	internal EventMissionItemListViewManager $this; // 0x18

	// Methods

	// RVA: 0x1EB71BC Offset: 0x1EB71BC VA: 0x1EB71BC
	public void .ctor() { }

	// RVA: 0x1EBA5A4 Offset: 0x1EBA5A4 VA: 0x1EBA5A4
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB09F0 Offset: 0xCB09F0 VA: 0xCB09F0
private sealed class EventMissionItemListViewManager.<startRewardCostumeReleaseGetEffect>c__AnonStorey6 // TypeDefIndex: 9748
{
	// Fields
	internal string name; // 0x10
	internal GiftEntity[] gifts; // 0x18
	internal int idx; // 0x20
	internal Action afterDetail; // 0x28
	internal EventMissionItemListViewManager $this; // 0x30

	// Methods

	// RVA: 0x1EB7254 Offset: 0x1EB7254 VA: 0x1EB7254
	public void .ctor() { }

	// RVA: 0x1EBB0CC Offset: 0x1EBB0CC VA: 0x1EBB0CC
	internal void <>m__0() { }

	// RVA: 0x1EBB170 Offset: 0x1EBB170 VA: 0x1EBB170
	internal void <>m__1() { }

	// RVA: 0x1EBB224 Offset: 0x1EBB224 VA: 0x1EBB224
	internal void <>m__2() { }
}
