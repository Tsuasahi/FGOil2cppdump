
	// RVA: 0xEF5DE4 Offset: 0xEF5DE4 VA: 0xEF5DE4
	public static AsyncFlowControl SuppressFlow() { }

	// RVA: 0xEF5EF4 Offset: 0xEF5EF4 VA: 0xEF5EF4
	public static AsyncFlowControl SuppressFlowWindowsIdentity() { }
}

// Namespace: System.Security
[MonoTODOAttribute] // RVA: 0xC36404 Offset: 0xC36404 VA: 0xC36404
[AttributeUsageAttribute] // RVA: 0xC36404 Offset: 0xC36404 VA: 0xC36404
public sealed class SecurityCriticalAttribute : Attribute // TypeDefIndex: 878
{
	// Fields
	private SecurityCriticalScope _scope; // 0x10

	// Properties
	public SecurityCriticalScope Scope { get; }

	// Methods

	// RVA: 0xEF5FC0 Offset: 0xEF5FC0 VA: 0xEF5FC0
	public void .ctor() { }

	// RVA: 0xEF5FE8 Offset: 0xEF5FE8 VA: 0xEF5FE8
	public void .ctor(SecurityCriticalScope scope) { }

	// RVA: 0xEF601C Offset: 0xEF601C VA: 0xEF601C
	public SecurityCriticalScope get_Scope() { }
}

// Namespace: System.Security
public enum SecurityCriticalScope // TypeDefIndex: 879
{
	// Fields
	public int value__; // 0x0
	public const SecurityCriticalScope Explicit = 0;
	public const SecurityCriticalScope Everything = 1;
}

// Namespace: System.Security
[ComVisibleAttribute] // RVA: 0xC36478 Offset: 0xC36478 VA: 0xC36478
[Serializable]
public sealed class SecurityElement // TypeDefIndex: 880
{
	// Fields
	private string text; // 0x10
	private string tag; // 0x18
	private ArrayList attributes; // 0x20
	private ArrayList children; // 0x28
	private static readonly char[] invalid_tag_chars; // 0x0
	private static readonly char[] invalid_text_chars; // 0x8
	private static readonly char[] invalid_attr_name_chars; // 0x10
	private static readonly char[] invalid_attr_value_chars; // 0x18
	private static readonly char[] invalid_chars; // 0x20

	// Properties
	public Hashtable Attributes { get; set; }
	public ArrayList Children { get; set; }
	public string Tag { get; set; }
	public string Text { get; set; }

	// Methods

	// RVA: 0xEE64B4 Offset: 0xEE64B4 VA: 0xEE64B4
	public void .ctor(string tag) { }

	// RVA: 0xEE9F20 Offset: 0xEE9F20 VA: 0xEE9F20
	public void .ctor(string tag, string text) { }

	// RVA: 0xEF61EC Offset: 0xEF61EC VA: 0xEF61EC
	internal void .ctor(SecurityElement se) { }

	// RVA: 0xEF6964 Offset: 0xEF6964 VA: 0xEF6964
	private static void .cctor() { }

	// RVA: 0xEEF478 Offset: 0xEEF478 VA: 0xEEF478
	public Hashtable get_Attributes() { }

	// RVA: 0xEF6BF4 Offset: 0xEF6BF4 VA: 0xEF6BF4
	public void set_Attributes(Hashtable value) { }

	// RVA: 0xEEF2B4 Offset: 0xEEF2B4 VA: 0xEEF2B4
	public ArrayList get_Children() { }

	// RVA: 0xEF7148 Offset: 0xEF7148 VA: 0xEF7148
	public void set_Children(ArrayList value) { }

	// RVA: 0xEEA54C Offset: 0xEEA54C VA: 0xEEA54C
	public string get_Tag() { }

	// RVA: 0xEF67FC Offset: 0xEF67FC VA: 0xEF67FC
	public void set_Tag(string value) { }

	// RVA: 0xEF694C Offset: 0xEF694C VA: 0xEF694C
	public string get_Text() { }

	// RVA: 0xEF60AC Offset: 0xEF60AC VA: 0xEF60AC
	public void set_Text(string value) { }

	// RVA: 0xEE64BC Offset: 0xEE64BC VA: 0xEE64BC
	public void AddAttribute(string name, string value) { }

	// RVA: 0xEEA088 Offset: 0xEEA088 VA: 0xEEA088
	public void AddChild(SecurityElement child) { }

	// RVA: 0xEE8AD0 Offset: 0xEE8AD0 VA: 0xEE8AD0
	public string Attribute(string name) { }

	[ComVisibleAttribute] // RVA: 0xC39DDC Offset: 0xC39DDC VA: 0xC39DDC
	// RVA: 0xEF79A8 Offset: 0xEF79A8 VA: 0xEF79A8
	public SecurityElement Copy() { }

	// RVA: 0xEF7A08 Offset: 0xEF7A08 VA: 0xEF7A08
	public bool Equal(SecurityElement other) { }

	// RVA: 0xEF80FC Offset: 0xEF80FC VA: 0xEF80FC
	public static string Escape(string str) { }

	// RVA: 0xEF7438 Offset: 0xEF7438 VA: 0xEF7438
	private static string Unescape(string str) { }

	// RVA: 0xEF845C Offset: 0xEF845C VA: 0xEF845C
	public static SecurityElement FromString(string xml) { }

	// RVA: 0xEF866C Offset: 0xEF866C VA: 0xEF866C
	public static bool IsValidAttributeName(string name) { }

	// RVA: 0xEF86F4 Offset: 0xEF86F4 VA: 0xEF86F4
	public static bool IsValidAttributeValue(string value) { }

	// RVA: 0xEF6024 Offset: 0xEF6024 VA: 0xEF6024
	public static bool IsValidTag(string tag) { }

	// RVA: 0xEF73B0 Offset: 0xEF73B0 VA: 0xEF73B0
	public static bool IsValidText(string text) { }

	// RVA: 0xEEF2C4 Offset: 0xEEF2C4 VA: 0xEEF2C4
	public SecurityElement SearchForChildByTag(string tag) { }

	// RVA: 0xEF877C Offset: 0xEF877C VA: 0xEF877C
	public string SearchForTextOfTag(string tag) { }

	// RVA: 0xEEA164 Offset: 0xEEA164 VA: 0xEEA164 Slot: 3
	public override string ToString() { }

	// RVA: 0xEF8998 Offset: 0xEF8998 VA: 0xEF8998
	private void ToXml(ref StringBuilder s, int level) { }

	// RVA: 0xEF7654 Offset: 0xEF7654 VA: 0xEF7654
	internal SecurityElement.SecurityAttribute GetAttribute(string name) { }
}

// Namespace: 
internal class SecurityElement.SecurityAttribute // TypeDefIndex: 881
{
	// Fields
	private string _name; // 0x10
	private string _value; // 0x18

	// Properties
	public string Name { get; }
	public string Value { get; }

	// Methods

	// RVA: 0xEF6F8C Offset: 0xEF6F8C VA: 0xEF6F8C
	public void .ctor(string name, string value) { }

	// RVA: 0xEF6954 Offset: 0xEF6954 VA: 0xEF6954
	public string get_Name() { }

	// RVA: 0xEF695C Offset: 0xEF695C VA: 0xEF695C
	public string get_Value() { }
}

// Namespace: System.Security
[ComVisibleAttribute] // RVA: 0xC3648C Offset: 0xC3648C VA: 0xC3648C
[Serializable]
public class SecurityException : SystemException // TypeDefIndex: 882
{
	// Fields
	private string permissionState; // 0x60
	private Type permissionType; // 0x68
	private string _granted; // 0x70
	private string _refused; // 0x78
	private object _demanded; // 0x80
	private IPermission _firstperm; // 0x88
	private MethodInfo _method; // 0x90
	private Evidence _evidence; // 0x98
	private SecurityAction _action; // 0xA0
	private object _denyset; // 0xA8
	private object _permitset; // 0xB0
	private AssemblyName _assembly; // 0xB8
	private string _url; // 0xC0
	private SecurityZone _zone; // 0xC8

	// Properties
	[ComVisibleAttribute] // RVA: 0xC3B47C Offset: 0xC3B47C VA: 0xC3B47C
	public SecurityAction Action { get; set; }
	[ComVisibleAttribute] // RVA: 0xC3B490 Offset: 0xC3B490 VA: 0xC3B490
	public object DenySetInstance { get; set; }
	[ComVisibleAttribute] // RVA: 0xC3B4A4 Offset: 0xC3B4A4 VA: 0xC3B4A4
	public AssemblyName FailedAssemblyInfo { get; set; }
	[ComVisibleAttribute] // RVA: 0xC3B4B8 Offset: 0xC3B4B8 VA: 0xC3B4B8
	public MethodInfo Method { get; set; }
	[ComVisibleAttribute] // RVA: 0xC3B4CC Offset: 0xC3B4CC VA: 0xC3B4CC
	public object PermitOnlySetInstance { get; set; }
	public string Url { get; set; }
	public SecurityZone Zone { get; set; }
	[ComVisibleAttribute] // RVA: 0xC3B4E0 Offset: 0xC3B4E0 VA: 0xC3B4E0
	public object Demanded { get; set; }
	public IPermission FirstPermissionThatFailed { get; set; }
	public string PermissionState { get; set; }
	public Type PermissionType { get; set; }
	public string GrantedSet { get; set; }
	public string RefusedSet { get; set; }

	// Methods

	// RVA: 0xEF90B4 Offset: 0xEF90B4 VA: 0xEF90B4
	public void .ctor() { }

	// RVA: 0xEEA1F4 Offset: 0xEEA1F4 VA: 0xEEA1F4
	public void .ctor(string message) { }

	// RVA: 0xEF9128 Offset: 0xEF9128 VA: 0xEF9128
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0xEF92B8 Offset: 0xEF92B8 VA: 0xEF92B8
	public void .ctor(string message, Exception inner) { }

	// RVA: 0xEF92EC Offset: 0xEF92EC VA: 0xEF92EC
	public void .ctor(string message, Type type) { }

	// RVA: 0xEF932C Offset: 0xEF932C VA: 0xEF932C
	public void .ctor(string message, Type type, string state) { }

	// RVA: 0xEF9378 Offset: 0xEF9378 VA: 0xEF9378
	internal void .ctor(string message, PermissionSet granted, PermissionSet refused) { }

	// RVA: 0xEF9400 Offset: 0xEF9400 VA: 0xEF9400
	public void .ctor(string message, object deny, object permitOnly, MethodInfo method, object demanded, IPermission permThatFailed) { }

	// RVA: 0xEF9468 Offset: 0xEF9468 VA: 0xEF9468
	public void .ctor(string message, AssemblyName assemblyName, PermissionSet grant, PermissionSet refused, MethodInfo method, SecurityAction action, object demanded, IPermission permThatFailed, Evidence evidence) { }

	// RVA: 0xEF95C4 Offset: 0xEF95C4 VA: 0xEF95C4
	public SecurityAction get_Action() { }

	// RVA: 0xEF95CC Offset: 0xEF95CC VA: 0xEF95CC
	public void set_Action(SecurityAction value) { }

	// RVA: 0xEF95D4 Offset: 0xEF95D4 VA: 0xEF95D4
	public object get_DenySetInstance() { }

	// RVA: 0xEF95DC Offset: 0xEF95DC VA: 0xEF95DC
	public void set_DenySetInstance(object value) { }

	// RVA: 0xEF95E4 Offset: 0xEF95E4 VA: 0xEF95E4
	public AssemblyName get_FailedAssemblyInfo() { }

	// RVA: 0xEF95EC Offset: 0xEF95EC VA: 0xEF95EC
	public void set_FailedAssemblyInfo(AssemblyName value) { }

	// RVA: 0xEF95F4 Offset: 0xEF95F4 VA: 0xEF95F4
	public MethodInfo get_Method() { }

	// RVA: 0xEF95FC Offset: 0xEF95FC VA: 0xEF95FC
	public void set_Method(MethodInfo value) { }

	// RVA: 0xEF9604 Offset: 0xEF9604 VA: 0xEF9604
	public object get_PermitOnlySetInstance() { }

	// RVA: 0xEF960C Offset: 0xEF960C VA: 0xEF960C
	public void set_PermitOnlySetInstance(object value) { }

	// RVA: 0xEF9614 Offset: 0xEF9614 VA: 0xEF9614
	public string get_Url() { }

	// RVA: 0xEF961C Offset: 0xEF961C VA: 0xEF961C
	public void set_Url(string value) { }

	// RVA: 0xEF9624 Offset: 0xEF9624 VA: 0xEF9624
	public SecurityZone get_Zone() { }

	// RVA: 0xEF962C Offset: 0xEF962C VA: 0xEF962C
	public void set_Zone(SecurityZone value) { }

	// RVA: 0xEF9634 Offset: 0xEF9634 VA: 0xEF9634
	public object get_Demanded() { }

	// RVA: 0xEF963C Offset: 0xEF963C VA: 0xEF963C
	public void set_Demanded(object value) { }

	// RVA: 0xEF9644 Offset: 0xEF9644 VA: 0xEF9644
	public IPermission get_FirstPermissionThatFailed() { }

	// RVA: 0xEF964C Offset: 0xEF964C VA: 0xEF964C
	public void set_FirstPermissionThatFailed(IPermission value) { }

	// RVA: 0xEF9654 Offset: 0xEF9654 VA: 0xEF9654
	public string get_PermissionState() { }

	// RVA: 0xEF965C Offset: 0xEF965C VA: 0xEF965C
	public void set_PermissionState(string value) { }

	// RVA: 0xEF9664 Offset: 0xEF9664 VA: 0xEF9664
	public Type get_PermissionType() { }

	// RVA: 0xEF966C Offset: 0xEF966C VA: 0xEF966C
	public void set_PermissionType(Type value) { }

	// RVA: 0xEF9674 Offset: 0xEF9674 VA: 0xEF9674
	public string get_GrantedSet() { }

	// RVA: 0xEF967C Offset: 0xEF967C VA: 0xEF967C
	public void set_GrantedSet(string value) { }

	// RVA: 0xEF9684 Offset: 0xEF9684 VA: 0xEF9684
	public string get_RefusedSet() { }

	// RVA: 0xEF968C Offset: 0xEF968C VA: 0xEF968C
	public void set_RefusedSet(string value) { }

	// RVA: 0xEF9694 Offset: 0xEF9694 VA: 0xEF9694 Slot: 10
	public override void GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0xEF97B0 Offset: 0xEF97B0 VA: 0xEF97B0 Slot: 3
	public override string ToString() { }
}

// Namespace: System.Security
internal struct RuntimeDeclSecurityEntry // TypeDefIndex: 883
{
	// Fields
	public IntPtr blob; // 0x0
	public int size; // 0x8
	public int index; // 0xC
}

// Namespace: System.Security
internal class RuntimeSecurityFrame // TypeDefIndex: 884
{
	// Fields
	public AppDomain domain; // 0x10
	public MethodInfo method; // 0x18
	public RuntimeDeclSecurityEntry assert; // 0x20
	public RuntimeDeclSecurityEntry deny; // 0x30
	public RuntimeDeclSecurityEntry permitonly; // 0x40

	// Methods

	// RVA: 0xEF45DC Offset: 0xEF45DC VA: 0xEF45DC
	public void .ctor() { }
}

// Namespace: System.Security
internal struct SecurityFrame // TypeDefIndex: 885
{
	// Fields
	private AppDomain _domain; // 0x0
	private MethodInfo _method; // 0x8
	private PermissionSet _assert; // 0x10
	private PermissionSet _deny; // 0x18
	private PermissionSet _permitonly; // 0x20

	// Properties
	public Assembly Assembly { get; }
	public AppDomain Domain { get; }
	public MethodInfo Method { get; }
	public PermissionSet Assert { get; }
	public PermissionSet Deny { get; }
	public PermissionSet PermitOnly { get; }
	public bool HasStackModifiers { get; }

	// Methods

	// RVA: 0xBB7298 Offset: 0xBB7298 VA: 0xBB7298
	internal void .ctor(RuntimeSecurityFrame frame) { }

	// RVA: 0xBB72AC Offset: 0xBB72AC VA: 0xBB72AC
	internal void .ctor(int skip) { }

	// RVA: 0xEFA218 Offset: 0xEFA218 VA: 0xEFA218
	private static RuntimeSecurityFrame _GetSecurityFrame(int skip) { }

	// RVA: 0xEFA21C Offset: 0xEFA21C VA: 0xEFA21C
	private static Array _GetSecurityStack(int skip) { }

	// RVA: 0xBB72E8 Offset: 0xBB72E8 VA: 0xBB72E8
	internal void InitFromRuntimeFrame(RuntimeSecurityFrame frame) { }

	// RVA: 0xBB72F0 Offset: 0xBB72F0 VA: 0xBB72F0
	public Assembly get_Assembly() { }

	// RVA: 0xBB72F8 Offset: 0xBB72F8 VA: 0xBB72F8
	public AppDomain get_Domain() { }

	// RVA: 0xBB7300 Offset: 0xBB7300 VA: 0xBB7300
	public MethodInfo get_Method() { }

	// RVA: 0xBB7308 Offset: 0xBB7308 VA: 0xBB7308
	public PermissionSet get_Assert() { }

	// RVA: 0xBB7310 Offset: 0xBB7310 VA: 0xBB7310
	public PermissionSet get_Deny() { }

	// RVA: 0xBB7318 Offset: 0xBB7318 VA: 0xBB7318
	public PermissionSet get_PermitOnly() { }

	// RVA: 0xBB7320 Offset: 0xBB7320 VA: 0xBB7320
	public bool get_HasStackModifiers() { }

	// RVA: 0xBB7348 Offset: 0xBB7348 VA: 0xBB7348
	public bool Equals(SecurityFrame sf) { }

	// RVA: 0xBB7388 Offset: 0xBB7388 VA: 0xBB7388 Slot: 3
	public override string ToString() { }

	// RVA: 0xEFA9BC Offset: 0xEFA9BC VA: 0xEFA9BC
	public static ArrayList GetStack(int skipFrames) { }
}

// Namespace: System.Security
internal struct RuntimeDeclSecurityActions // TypeDefIndex: 886
{
	// Fields
	public RuntimeDeclSecurityEntry cas; // 0x0
	public RuntimeDeclSecurityEntry noncas; // 0x10
	public RuntimeDeclSecurityEntry choice; // 0x20
}

// Namespace: System.Security
[ComVisibleAttribute] // RVA: 0xC364A0 Offset: 0xC364A0 VA: 0xC364A0
public static class SecurityManager // TypeDefIndex: 887
{
	// Fields
	private static object _lockObject; // 0x0
	private static ArrayList _hierarchy; // 0x8
	private static IPermission _unmanagedCode; // 0x10
	private static Hashtable _declsecCache; // 0x18
	private static PolicyLevel _level; // 0x20
	private static SecurityPermission _execution; // 0x28

	// Properties
	public static bool CheckExecutionRights { get; set; }
	[ObsoleteAttribute] // RVA: 0xC3B4F4 Offset: 0xC3B4F4 VA: 0xC3B4F4
	public static bool SecurityEnabled { get; set; }
	private static IEnumerator Hierarchy { get; }
	internal static PolicyLevel ResolvingPolicyLevel { get; set; }
	private static IPermission UnmanagedCode { get; }

	// Methods

	// RVA: 0xEFAB8C Offset: 0xEFAB8C VA: 0xEFAB8C
	private static void .cctor() { }

	// RVA: 0xEFAC24 Offset: 0xEFAC24 VA: 0xEFAC24
	public static bool get_CheckExecutionRights() { }

	// RVA: 0xEFAC28 Offset: 0xEFAC28 VA: 0xEFAC28
	public static void set_CheckExecutionRights(bool value) { }

	// RVA: 0xEE6DE8 Offset: 0xEE6DE8 VA: 0xEE6DE8
	public static bool get_SecurityEnabled() { }

	// RVA: 0xEFAC30 Offset: 0xEFAC30 VA: 0xEFAC30
	public static void set_SecurityEnabled(bool value) { }

	[MonoTODOAttribute] // RVA: 0xC39DF0 Offset: 0xC39DF0 VA: 0xC39DF0
	// RVA: 0xEFAC38 Offset: 0xEFAC38 VA: 0xEFAC38
	public static void GetZoneAndOrigin(out ArrayList zone, out ArrayList origin) { }

	// RVA: 0xEFACBC Offset: 0xEFACBC VA: 0xEFACBC
	public static bool IsGranted(IPermission perm) { }

	// RVA: 0xEFAD68 Offset: 0xEFAD68 VA: 0xEFAD68
	internal static bool IsGranted(Assembly a, IPermission perm) { }

	// RVA: 0xEFB0C0 Offset: 0xEFB0C0 VA: 0xEFB0C0
	internal static IPermission CheckPermissionSet(Assembly a, PermissionSet ps, bool noncas) { }

	// RVA: 0xEFB578 Offset: 0xEFB578 VA: 0xEFB578
	internal static IPermission CheckPermissionSet(AppDomain ad, PermissionSet ps) { }

	// RVA: 0xEFBBE0 Offset: 0xEFBBE0 VA: 0xEFBBE0
	public static PolicyLevel LoadPolicyLevelFromFile(string path, PolicyLevelType type) { }

	// RVA: 0xEFBDC4 Offset: 0xEFBDC4 VA: 0xEFBDC4
	public static PolicyLevel LoadPolicyLevelFromString(string str, PolicyLevelType type) { }

	// RVA: 0xEFBFB0 Offset: 0xEFBFB0 VA: 0xEFBFB0
	public static IEnumerator PolicyHierarchy() { }

	// RVA: 0xEFC150 Offset: 0xEFC150 VA: 0xEFC150
	public static PermissionSet ResolvePolicy(Evidence evidence) { }

	[MonoTODOAttribute] // RVA: 0xC39E28 Offset: 0xC39E28 VA: 0xC39E28
	// RVA: 0xEFC698 Offset: 0xEFC698 VA: 0xEFC698
	public static PermissionSet ResolvePolicy(Evidence[] evidences) { }

	// RVA: 0xEFC814 Offset: 0xEFC814 VA: 0xEFC814
	public static PermissionSet ResolveSystemPolicy(Evidence evidence) { }

	// RVA: 0xEFCA7C Offset: 0xEFCA7C VA: 0xEFCA7C
	public static PermissionSet ResolvePolicy(Evidence evidence, PermissionSet reqdPset, PermissionSet optPset, PermissionSet denyPset, out PermissionSet denied) { }

	// RVA: 0xEFCC5C Offset: 0xEFCC5C VA: 0xEFCC5C
	public static IEnumerator ResolvePolicyGroups(Evidence evidence) { }

	// RVA: 0xEFCEE8 Offset: 0xEFCEE8 VA: 0xEFCEE8
	public static void SavePolicy() { }

	// RVA: 0xEFD06C Offset: 0xEFD06C VA: 0xEFD06C
	public static void SavePolicyLevel(PolicyLevel level) { }

	// RVA: 0xEFC00C Offset: 0xEFC00C VA: 0xEFC00C
	private static IEnumerator get_Hierarchy() { }

	// RVA: 0xEFD094 Offset: 0xEFD094 VA: 0xEFD094
	private static void InitializePolicyHierarchy() { }

	// RVA: 0xEFC3A8 Offset: 0xEFC3A8 VA: 0xEFC3A8
	internal static bool ResolvePolicyLevel(ref PermissionSet ps, PolicyLevel pl, Evidence evidence) { }

	// RVA: 0xEFC488 Offset: 0xEFC488 VA: 0xEFC488
	internal static void ResolveIdentityPermissions(PermissionSet ps, Evidence evidence) { }

	// RVA: 0xEFD368 Offset: 0xEFD368 VA: 0xEFD368
	internal static PolicyLevel get_ResolvingPolicyLevel() { }

	// RVA: 0xEED7B4 Offset: 0xEED7B4 VA: 0xEED7B4
	internal static void set_ResolvingPolicyLevel(PolicyLevel value) { }

	// RVA: 0xEFA220 Offset: 0xEFA220 VA: 0xEFA220
	internal static PermissionSet Decode(IntPtr permissions, int length) { }

	// RVA: 0xEFD3D0 Offset: 0xEFD3D0 VA: 0xEFD3D0
	internal static PermissionSet Decode(byte[] encodedPermissions) { }

	// RVA: 0xEFD548 Offset: 0xEFD548 VA: 0xEFD548
	private static IPermission get_UnmanagedCode() { }

	// RVA: 0xEFD6A4 Offset: 0xEFD6A4 VA: 0xEFD6A4
	private static bool GetLinkDemandSecurity(MethodBase method, RuntimeDeclSecurityActions* cdecl, RuntimeDeclSecurityActions* mdecl) { }

	// RVA: 0xEFD6A8 Offset: 0xEFD6A8 VA: 0xEFD6A8
	internal static void ReflectedLinkDemandInvoke(MethodBase mb) { }

	// RVA: 0xEFD890 Offset: 0xEFD890 VA: 0xEFD890
	internal static bool ReflectedLinkDemandQuery(MethodBase mb) { }

	// RVA: 0xEFD994 Offset: 0xEFD994 VA: 0xEFD994
	private static bool LinkDemand(Assembly a, RuntimeDeclSecurityActions* klass, RuntimeDeclSecurityActions* method) { }

	// RVA: 0xEFDBEC Offset: 0xEFDBEC VA: 0xEFDBEC
	private static bool LinkDemandFullTrust(Assembly a) { }

	// RVA: 0xEFDC68 Offset: 0xEFDC68 VA: 0xEFDC68
	private static bool LinkDemandUnmanaged(Assembly a) { }

	// RVA: 0xEFDCD4 Offset: 0xEFDCD4 VA: 0xEFDCD4
	private static void LinkDemandSecurityException(int securityViolation, IntPtr methodHandle) { }

	// RVA: 0xEFDF88 Offset: 0xEFDF88 VA: 0xEFDF88
	private static void InheritanceDemandSecurityException(int securityViolation, Assembly a, Type t, MethodInfo method) { }

	// RVA: 0xEFE0F0 Offset: 0xEFE0F0 VA: 0xEFE0F0
	private static void ThrowException(Exception ex) { }

	// RVA: 0xEFE140 Offset: 0xEFE140 VA: 0xEFE140
	private static bool InheritanceDemand(AppDomain ad, Assembly a, RuntimeDeclSecurityActions* actions) { }

	// RVA: 0xEFE344 Offset: 0xEFE344 VA: 0xEFE344
	private static void DemandUnmanaged() { }

	// RVA: 0xEFE418 Offset: 0xEFE418 VA: 0xEFE418
	private static void InternalDemand(IntPtr permissions, int length) { }

	// RVA: 0xEFE4A8 Offset: 0xEFE4A8 VA: 0xEFE4A8
	private static void InternalDemandChoice(IntPtr permissions, int length) { }
}

// Namespace: System.Security
[AttributeUsageAttribute] // RVA: 0xC364B4 Offset: 0xC364B4 VA: 0xC364B4
[MonoTODOAttribute] // RVA: 0xC364B4 Offset: 0xC364B4 VA: 0xC364B4
public sealed class SecuritySafeCriticalAttribute : Attribute // TypeDefIndex: 888
{
	// Methods

	// RVA: 0xEFE518 Offset: 0xEFE518 VA: 0xEFE518
	public void .ctor() { }
}

// Namespace: System.Security
public abstract class SecurityState // TypeDefIndex: 889
{
	// Methods

	// RVA: 0xEFE520 Offset: 0xEFE520 VA: 0xEFE520
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void EnsureState();

	// RVA: 0xEFE528 Offset: 0xEFE528 VA: 0xEFE528
	public bool IsStateAvailable() { }
}

// Namespace: System.Security
[MonoTODOAttribute] // RVA: 0xC36528 Offset: 0xC36528 VA: 0xC36528
[AttributeUsageAttribute] // RVA: 0xC36528 Offset: 0xC36528 VA: 0xC36528
public sealed class SecurityTransparentAttribute : Attribute // TypeDefIndex: 890
{
	// Methods

	// RVA: 0xEFE580 Offset: 0xEFE580 VA: 0xEFE580
	public void .ctor() { }
}

// Namespace: System.Security
[AttributeUsageAttribute] // RVA: 0xC3659C Offset: 0xC3659C VA: 0xC3659C
[MonoTODOAttribute] // RVA: 0xC3659C Offset: 0xC3659C VA: 0xC3659C
public sealed class SecurityTreatAsSafeAttribute : Attribute // TypeDefIndex: 891
{
	// Methods

	// RVA: 0xEFE588 Offset: 0xEFE588 VA: 0xEFE588
	public void .ctor() { }
}

// Namespace: System.Security
[ComVisibleAttribute] // RVA: 0xC36610 Offset: 0xC36610 VA: 0xC36610
[Serializable]
public enum SecurityZone // TypeDefIndex: 892
{
	// Fields
	public int value__; // 0x0
	public const SecurityZone MyComputer = 0;
	public const SecurityZone Intranet = 1;
	public const SecurityZone Trusted = 2;
	public const SecurityZone Internet = 3;
	public const SecurityZone Untrusted = 4;
	public const SecurityZone NoZone = -1;
}

// Namespace: System.Security
[AttributeUsageAttribute] // RVA: 0xC36624 Offset: 0xC36624 VA: 0xC36624
[ComVisibleAttribute] // RVA: 0xC36624 Offset: 0xC36624 VA: 0xC36624
public sealed class SuppressUnmanagedCodeSecurityAttribute : Attribute // TypeDefIndex: 893
{
	// Methods

	// RVA: 0xEFE590 Offset: 0xEFE590 VA: 0xEFE590
	public void .ctor() { }
}

// Namespace: System.Security
[AttributeUsageAttribute] // RVA: 0xC36688 Offset: 0xC36688 VA: 0xC36688
[ComVisibleAttribute] // RVA: 0xC36688 Offset: 0xC36688 VA: 0xC36688
public sealed class UnverifiableCodeAttribute : Attribute // TypeDefIndex: 894
{
	// Methods

	// RVA: 0xEFE598 Offset: 0xEFE598 VA: 0xEFE598
	public void .ctor() { }
}

// Namespace: System.Security
[ComVisibleAttribute] // RVA: 0xC366EC Offset: 0xC366EC VA: 0xC366EC
[Serializable]
public class VerificationException : SystemException // TypeDefIndex: 895
{
	// Methods

	// RVA: 0xEFE5A0 Offset: 0xEFE5A0 VA: 0xEFE5A0
	public void .ctor() { }

	// RVA: 0xEFE5A8 Offset: 0xEFE5A8 VA: 0xEFE5A8
	public void .ctor(string message) { }

	// RVA: 0xEFE5B0 Offset: 0xEFE5B0 VA: 0xEFE5B0
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0xEFE5B8 Offset: 0xEFE5B8 VA: 0xEFE5B8
	public void .ctor(string message, Exception innerException) { }
}

// Namespace: System.Security
[ComVisibleAttribute] // RVA: 0xC36700 Offset: 0xC36700 VA: 0xC36700
[Serializable]
public sealed class XmlSyntaxException : SystemException // TypeDefIndex: 896
{
	// Methods

	// RVA: 0xEFE5C0 Offset: 0xEFE5C0 VA: 0xEFE5C0
	public void .ctor() { }

	// RVA: 0xEFE5C8 Offset: 0xEFE5C8 VA: 0xEFE5C8
	public void .ctor(int lineNumber) { }

	// RVA: 0xEFE688 Offset: 0xEFE688 VA: 0xEFE688
	public void .ctor(int lineNumber, string message) { }

	// RVA: 0xEF865C Offset: 0xEF865C VA: 0xEF865C
	public void .ctor(string message) { }

	// RVA: 0xEF8664 Offset: 0xEF8664 VA: 0xEF8664
	public void .ctor(string message, Exception inner) { }

	// RVA: 0xEFE758 Offset: 0xEFE758 VA: 0xEFE758
	internal void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System.Text
[ComVisibleAttribute] // RVA: 0xC36714 Offset: 0xC36714 VA: 0xC36714
[MonoTODOAttribute] // RVA: 0xC36714 Offset: 0xC36714 VA: 0xC36714
[Serializable]
public class ASCIIEncoding : Encoding // TypeDefIndex: 897
{
	// Methods

	// RVA: 0x12B6708 Offset: 0x12B6708 VA: 0x12B6708
	public void .ctor() { }

	// RVA: 0x12B68F8 Offset: 0x12B68F8 VA: 0x12B68F8 Slot: 5
	public override int GetByteCount(char[] chars, int index, int count) { }

	// RVA: 0x12B6A64 Offset: 0x12B6A64 VA: 0x12B6A64 Slot: 6
	public override int GetByteCount(string chars) { }

	// RVA: 0x12B6AF4 Offset: 0x12B6AF4 VA: 0x12B6AF4 Slot: 8
	public override int GetBytes(char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex) { }

	// RVA: 0x12B6B20 Offset: 0x12B6B20 VA: 0x12B6B20
	private int GetBytes(char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, ref EncoderFallbackBuffer buffer, ref char[] fallback_chars) { }

	// RVA: 0x12B709C Offset: 0x12B709C VA: 0x12B709C Slot: 9
	public override int GetBytes(string chars, int charIndex, int charCount, byte[] bytes, int byteIndex) { }

	// RVA: 0x12B70C8 Offset: 0x12B70C8 VA: 0x12B70C8
	private int GetBytes(string chars, int charIndex, int charCount, byte[] bytes, int byteIndex, ref EncoderFallbackBuffer buffer, ref char[] fallback_chars) { }

	// RVA: 0x12B7628 Offset: 0x12B7628 VA: 0x12B7628 Slot: 13
	public override int GetCharCount(byte[] bytes, int index, int count) { }

	// RVA: 0x12B7790 Offset: 0x12B7790 VA: 0x12B7790 Slot: 14
	public override int GetChars(byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex) { }

	// RVA: 0x12B77B4 Offset: 0x12B77B4 VA: 0x12B77B4
	private int GetChars(byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex, ref DecoderFallbackBuffer buffer) { }

	// RVA: 0x12B7B6C Offset: 0x12B7B6C VA: 0x12B7B6C Slot: 19
	public override int GetMaxByteCount(int charCount) { }

	// RVA: 0x12B7C28 Offset: 0x12B7C28 VA: 0x12B7C28 Slot: 20
	public override int GetMaxCharCount(int byteCount) { }

	// RVA: 0x12B7CE4 Offset: 0x12B7CE4 VA: 0x12B7CE4 Slot: 22
	public override string GetString(byte[] bytes, int byteIndex, int byteCount) { }

	[CLSCompliantAttribute] // RVA: 0xC39E60 Offset: 0xC39E60 VA: 0xC39E60
	[ComVisibleAttribute] // RVA: 0xC39E60 Offset: 0xC39E60 VA: 0xC39E60
	// RVA: 0x12B7EFC Offset: 0x12B7EFC VA: 0x12B7EFC Slot: 27
	public override int GetBytes(char* chars, int charCount, byte* bytes, int byteCount) { }

	[CLSCompliantAttribute] // RVA: 0xC39EA0 Offset: 0xC39EA0 VA: 0xC39EA0
	[ComVisibleAttribute] // RVA: 0xC39EA0 Offset: 0xC39EA0 VA: 0xC39EA0
	// RVA: 0x12B8084 Offset: 0x12B8084 VA: 0x12B8084 Slot: 26
	public override int GetByteCount(char* chars, int count) { }

	[MonoTODOAttribute] // RVA: 0xC39EE0 Offset: 0xC39EE0 VA: 0xC39EE0
	[ComVisibleAttribute] // RVA: 0xC39EE0 Offset: 0xC39EE0 VA: 0xC39EE0
	// RVA: 0x12B808C Offset: 0x12B808C VA: 0x12B808C Slot: 17
	public override Decoder GetDecoder() { }
}

// Namespace: System.Text
[ComVisibleAttribute] // RVA: 0xC36764 Offset: 0xC36764 VA: 0xC36764
[Serializable]
public abstract class Decoder // TypeDefIndex: 898
{
	// Fields
	private DecoderFallback fallback; // 0x10
	private DecoderFallbackBuffer fallback_buffer; // 0x18

	// Properties
	[ComVisibleAttribute] // RVA: 0xC3B52C Offset: 0xC3B52C VA: 0xC3B52C
	public DecoderFallback Fallback { set; }
	[ComVisibleAttribute] // RVA: 0xC3B540 Offset: 0xC3B540 VA: 0xC3B540
	public DecoderFallbackBuffer FallbackBuffer { get; }

	// Methods

	// RVA: 0x12B80F0 Offset: 0x12B80F0 VA: 0x12B80F0
	protected void .ctor() { }

	// RVA: 0x12B81A4 Offset: 0x12B81A4 VA: 0x12B81A4
	public void set_Fallback(DecoderFallback value) { }

	// RVA: 0x12B8230 Offset: 0x12B8230 VA: 0x12B8230
	public DecoderFallbackBuffer get_FallbackBuffer() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract int GetChars(byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);
}

// Namespace: System.Text
[Serializable]
public sealed class DecoderExceptionFallback : DecoderFallback // TypeDefIndex: 899
{
	// Methods

	// RVA: 0x12B8278 Offset: 0x12B8278 VA: 0x12B8278
	public void .ctor() { }

	// RVA: 0x12B82E8 Offset: 0x12B82E8 VA: 0x12B82E8 Slot: 4
	public override DecoderFallbackBuffer CreateFallbackBuffer() { }

	// RVA: 0x12B834C Offset: 0x12B834C VA: 0x12B834C Slot: 0
	public override bool Equals(object value) { }

	// RVA: 0x12B83B0 Offset: 0x12B83B0 VA: 0x12B83B0 Slot: 2
	public override int GetHashCode() { }
}

// Namespace: System.Text
public sealed class DecoderExceptionFallbackBuffer : DecoderFallbackBuffer // TypeDefIndex: 900
{
	// Properties
	public override int Remaining { get; }

	// Methods

	// RVA: 0x12B8344 Offset: 0x12B8344 VA: 0x12B8344
	public void .ctor() { }

	// RVA: 0x12B83C0 Offset: 0x12B83C0 VA: 0x12B83C0 Slot: 4
	public override int get_Remaining() { }

	// RVA: 0x12B83C8 Offset: 0x12B83C8 VA: 0x12B83C8 Slot: 5
	public override bool Fallback(byte[] bytesUnknown, int index) { }

	// RVA: 0x12B8488 Offset: 0x12B8488 VA: 0x12B8488 Slot: 6
	public override char GetNextChar() { }
}

// Namespace: System.Text
[Serializable]
public abstract class DecoderFallback // TypeDefIndex: 901
{
	// Fields
	private static DecoderFallback exception_fallback; // 0x0
	private static DecoderFallback replacement_fallback; // 0x8
	private static DecoderFallback standard_safe_fallback; // 0x10

	// Properties
	public static DecoderFallback ExceptionFallback { get; }
	public static DecoderFallback ReplacementFallback { get; }
	internal static DecoderFallback StandardSafeFallback { get; }

	// Methods

	// RVA: 0x12B82E0 Offset: 0x12B82E0 VA: 0x12B82E0
	protected void .ctor() { }

	// RVA: 0x12B8490 Offset: 0x12B8490 VA: 0x12B8490
	private static void .cctor() { }

	// RVA: 0x12B8604 Offset: 0x12B8604 VA: 0x12B8604
	public static DecoderFallback get_ExceptionFallback() { }

	// RVA: 0x12B866C Offset: 0x12B866C VA: 0x12B866C
	public static DecoderFallback get_ReplacementFallback() { }

	// RVA: 0x12B86D4 Offset: 0x12B86D4 VA: 0x12B86D4
	internal static DecoderFallback get_StandardSafeFallback() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract DecoderFallbackBuffer CreateFallbackBuffer();
}

// Namespace: System.Text
public abstract class DecoderFallbackBuffer // TypeDefIndex: 902
{
	// Properties
	public abstract int Remaining { get; }

	// Methods

	// RVA: 0x12B83B8 Offset: 0x12B83B8 VA: 0x12B83B8
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract int get_Remaining();

	// RVA: -1 Offset: -1 Slot: 5
	public abstract bool Fallback(byte[] bytesUnknown, int index);

	// RVA: -1 Offset: -1 Slot: 6
	public abstract char GetNextChar();

	// RVA: 0x12B873C Offset: 0x12B873C VA: 0x12B873C Slot: 7
	public virtual void Reset() { }
}

// Namespace: System.Text
[Serializable]
public sealed class DecoderFallbackException : ArgumentException // TypeDefIndex: 903
{
	// Fields
	private byte[] bytes_unknown; // 0x68
	private int index; // 0x70

	// Methods

	// RVA: 0x12B8740 Offset: 0x12B8740 VA: 0x12B8740
	public void .ctor() { }

	// RVA: 0x12B8754 Offset: 0x12B8754 VA: 0x12B8754
	public void .ctor(string message) { }

	// RVA: 0x12B8444 Offset: 0x12B8444 VA: 0x12B8444
	public void .ctor(string message, byte[] bytesUnknown, int index) { }
}

// Namespace: System.Text
[Serializable]
public sealed class DecoderReplacementFallback : DecoderFallback // TypeDefIndex: 904
{
	// Fields
	private string replacement; // 0x10

	// Properties
	public string DefaultString { get; }

	// Methods

	// RVA: 0x12B8154 Offset: 0x12B8154 VA: 0x12B8154
	public void .ctor() { }

	[MonoTODOAttribute] // RVA: 0xC39F30 Offset: 0xC39F30 VA: 0xC39F30
	// RVA: 0x12B854C Offset: 0x12B854C VA: 0x12B854C
	public void .ctor(string replacement) { }

	// RVA: 0x12B8764 Offset: 0x12B8764 VA: 0x12B8764
	public string get_DefaultString() { }

	// RVA: 0x12B876C Offset: 0x12B876C VA: 0x12B876C Slot: 4
	public override DecoderFallbackBuffer CreateFallbackBuffer() { }

	// RVA: 0x12B8878 Offset: 0x12B8878 VA: 0x12B8878 Slot: 0
	public override bool Equals(object value) { }

	// RVA: 0x12B8928 Offset: 0x12B8928 VA: 0x12B8928 Slot: 2
	public override int GetHashCode() { }
}

// Namespace: System.Text
public sealed class DecoderReplacementFallbackBuffer : DecoderFallbackBuffer // TypeDefIndex: 905
{
	// Fields
	private bool fallback_assigned; // 0x10
	private int current; // 0x14
	private string replacement; // 0x18

	// Properties
	public override int Remaining { get; }

	// Methods

	// RVA: 0x12B87CC Offset: 0x12B87CC VA: 0x12B87CC
	public void .ctor(DecoderReplacementFallback fallback) { }

	// RVA: 0x12B8958 Offset: 0x12B8958 VA: 0x12B8958 Slot: 4
	public override int get_Remaining() { }

	// RVA: 0x12B89A8 Offset: 0x12B89A8 VA: 0x12B89A8 Slot: 5
	public override bool Fallback(byte[] bytesUnknown, int index) { }

	// RVA: 0x12B8AEC Offset: 0x12B8AEC VA: 0x12B8AEC Slot: 6
	public override char GetNextChar() { }

	// RVA: 0x12B8B7C Offset: 0x12B8B7C VA: 0x12B8B7C Slot: 7
	public override void Reset() { }
}

// Namespace: System.Text
[Serializable]
public sealed class EncoderExceptionFallback : EncoderFallback // TypeDefIndex: 906
{
	// Methods

	// RVA: 0x12B8B88 Offset: 0x12B8B88 VA: 0x12B8B88
	public void .ctor() { }

	// RVA: 0x12B8BF8 Offset: 0x12B8BF8 VA: 0x12B8BF8 Slot: 4
	public override EncoderFallbackBuffer CreateFallbackBuffer() { }

