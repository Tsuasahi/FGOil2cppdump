
	// RVA: 0x1F5AF54 Offset: 0x1F5AF54 VA: 0x1F5AF54
	internal void set_WindowsIdentityFlowSuppressed(bool value) { }

	// RVA: 0x1F5AF60 Offset: 0x1F5AF60 VA: 0x1F5AF60
	internal CompressedStack get_CompressedStack() { }

	// RVA: 0x1F5AF68 Offset: 0x1F5AF68 VA: 0x1F5AF68
	internal void set_CompressedStack(CompressedStack value) { }

	// RVA: 0x1F5AF70 Offset: 0x1F5AF70 VA: 0x1F5AF70
	internal IntPtr get_IdentityToken() { }

	// RVA: 0x1F5AF78 Offset: 0x1F5AF78 VA: 0x1F5AF78
	internal void set_IdentityToken(IntPtr value) { }

	// RVA: 0x1F5AF80 Offset: 0x1F5AF80 VA: 0x1F5AF80
	public static bool IsFlowSuppressed() { }

	// RVA: 0x1F5B024 Offset: 0x1F5B024 VA: 0x1F5B024
	public static bool IsWindowsIdentityFlowSuppressed() { }

	// RVA: 0x1F5B0C8 Offset: 0x1F5B0C8 VA: 0x1F5B0C8
	public static void RestoreFlow() { }

	// RVA: 0x1F5B1B4 Offset: 0x1F5B1B4 VA: 0x1F5B1B4
	public static void Run(SecurityContext securityContext, ContextCallback callback, object state) { }

	// RVA: 0x1F5B470 Offset: 0x1F5B470 VA: 0x1F5B470
	public static AsyncFlowControl SuppressFlow() { }

	// RVA: 0x1F5B580 Offset: 0x1F5B580 VA: 0x1F5B580
	public static AsyncFlowControl SuppressFlowWindowsIdentity() { }
}

// Namespace: System.Security
[MonoTODOAttribute] // RVA: 0xBCA2DC Offset: 0xBCA2DC VA: 0xBCA2DC
[AttributeUsageAttribute] // RVA: 0xBCA2DC Offset: 0xBCA2DC VA: 0xBCA2DC
public sealed class SecurityCriticalAttribute : Attribute // TypeDefIndex: 878
{
	// Fields
	private SecurityCriticalScope _scope; // 0x10

	// Properties
	public SecurityCriticalScope Scope { get; }

	// Methods

	// RVA: 0x1F5B64C Offset: 0x1F5B64C VA: 0x1F5B64C
	public void .ctor() { }

	// RVA: 0x1F5B674 Offset: 0x1F5B674 VA: 0x1F5B674
	public void .ctor(SecurityCriticalScope scope) { }

	// RVA: 0x1F5B6A8 Offset: 0x1F5B6A8 VA: 0x1F5B6A8
	public SecurityCriticalScope get_Scope() { }
}

// Namespace: System.Security
public enum SecurityCriticalScope // TypeDefIndex: 879
{
	// Fields
	public int value__; // 0x0
	public const SecurityCriticalScope Explicit = 0;
	public const SecurityCriticalScope Everything = 1;
}

// Namespace: System.Security
[ComVisibleAttribute] // RVA: 0xBCA350 Offset: 0xBCA350 VA: 0xBCA350
[Serializable]
public sealed class SecurityElement // TypeDefIndex: 880
{
	// Fields
	private string text; // 0x10
	private string tag; // 0x18
	private ArrayList attributes; // 0x20
	private ArrayList children; // 0x28
	private static readonly char[] invalid_tag_chars; // 0x0
	private static readonly char[] invalid_text_chars; // 0x8
	private static readonly char[] invalid_attr_name_chars; // 0x10
	private static readonly char[] invalid_attr_value_chars; // 0x18
	private static readonly char[] invalid_chars; // 0x20

	// Properties
	public Hashtable Attributes { get; set; }
	public ArrayList Children { get; set; }
	public string Tag { get; set; }
	public string Text { get; set; }

	// Methods

	// RVA: 0x1F4BB40 Offset: 0x1F4BB40 VA: 0x1F4BB40
	public void .ctor(string tag) { }

	// RVA: 0x1F4F5AC Offset: 0x1F4F5AC VA: 0x1F4F5AC
	public void .ctor(string tag, string text) { }

	// RVA: 0x1F5B878 Offset: 0x1F5B878 VA: 0x1F5B878
	internal void .ctor(SecurityElement se) { }

	// RVA: 0x1F5BFF0 Offset: 0x1F5BFF0 VA: 0x1F5BFF0
	private static void .cctor() { }

	// RVA: 0x1F54B04 Offset: 0x1F54B04 VA: 0x1F54B04
	public Hashtable get_Attributes() { }

	// RVA: 0x1F5C280 Offset: 0x1F5C280 VA: 0x1F5C280
	public void set_Attributes(Hashtable value) { }

	// RVA: 0x1F54940 Offset: 0x1F54940 VA: 0x1F54940
	public ArrayList get_Children() { }

	// RVA: 0x1F5C7D4 Offset: 0x1F5C7D4 VA: 0x1F5C7D4
	public void set_Children(ArrayList value) { }

	// RVA: 0x1F4FBD8 Offset: 0x1F4FBD8 VA: 0x1F4FBD8
	public string get_Tag() { }

	// RVA: 0x1F5BE88 Offset: 0x1F5BE88 VA: 0x1F5BE88
	public void set_Tag(string value) { }

	// RVA: 0x1F5BFD8 Offset: 0x1F5BFD8 VA: 0x1F5BFD8
	public string get_Text() { }

	// RVA: 0x1F5B738 Offset: 0x1F5B738 VA: 0x1F5B738
	public void set_Text(string value) { }

	// RVA: 0x1F4BB48 Offset: 0x1F4BB48 VA: 0x1F4BB48
	public void AddAttribute(string name, string value) { }

	// RVA: 0x1F4F714 Offset: 0x1F4F714 VA: 0x1F4F714
	public void AddChild(SecurityElement child) { }

	// RVA: 0x1F4E15C Offset: 0x1F4E15C VA: 0x1F4E15C
	public string Attribute(string name) { }

	[ComVisibleAttribute] // RVA: 0xBCDCB4 Offset: 0xBCDCB4 VA: 0xBCDCB4
	// RVA: 0x1F5D034 Offset: 0x1F5D034 VA: 0x1F5D034
	public SecurityElement Copy() { }

	// RVA: 0x1F5D094 Offset: 0x1F5D094 VA: 0x1F5D094
	public bool Equal(SecurityElement other) { }

	// RVA: 0x1F5D788 Offset: 0x1F5D788 VA: 0x1F5D788
	public static string Escape(string str) { }

	// RVA: 0x1F5CAC4 Offset: 0x1F5CAC4 VA: 0x1F5CAC4
	private static string Unescape(string str) { }

	// RVA: 0x1F5DAE8 Offset: 0x1F5DAE8 VA: 0x1F5DAE8
	public static SecurityElement FromString(string xml) { }

	// RVA: 0x1F5DCF8 Offset: 0x1F5DCF8 VA: 0x1F5DCF8
	public static bool IsValidAttributeName(string name) { }

	// RVA: 0x1F5DD80 Offset: 0x1F5DD80 VA: 0x1F5DD80
	public static bool IsValidAttributeValue(string value) { }

	// RVA: 0x1F5B6B0 Offset: 0x1F5B6B0 VA: 0x1F5B6B0
	public static bool IsValidTag(string tag) { }

	// RVA: 0x1F5CA3C Offset: 0x1F5CA3C VA: 0x1F5CA3C
	public static bool IsValidText(string text) { }

	// RVA: 0x1F54950 Offset: 0x1F54950 VA: 0x1F54950
	public SecurityElement SearchForChildByTag(string tag) { }

	// RVA: 0x1F5DE08 Offset: 0x1F5DE08 VA: 0x1F5DE08
	public string SearchForTextOfTag(string tag) { }

	// RVA: 0x1F4F7F0 Offset: 0x1F4F7F0 VA: 0x1F4F7F0 Slot: 3
	public override string ToString() { }

	// RVA: 0x1F5E024 Offset: 0x1F5E024 VA: 0x1F5E024
	private void ToXml(ref StringBuilder s, int level) { }

	// RVA: 0x1F5CCE0 Offset: 0x1F5CCE0 VA: 0x1F5CCE0
	internal SecurityElement.SecurityAttribute GetAttribute(string name) { }
}

// Namespace: 
internal class SecurityElement.SecurityAttribute // TypeDefIndex: 881
{
	// Fields
	private string _name; // 0x10
	private string _value; // 0x18

	// Properties
	public string Name { get; }
	public string Value { get; }

	// Methods

	// RVA: 0x1F5C618 Offset: 0x1F5C618 VA: 0x1F5C618
	public void .ctor(string name, string value) { }

	// RVA: 0x1F5BFE0 Offset: 0x1F5BFE0 VA: 0x1F5BFE0
	public string get_Name() { }

	// RVA: 0x1F5BFE8 Offset: 0x1F5BFE8 VA: 0x1F5BFE8
	public string get_Value() { }
}

// Namespace: System.Security
[ComVisibleAttribute] // RVA: 0xBCA364 Offset: 0xBCA364 VA: 0xBCA364
[Serializable]
public class SecurityException : SystemException // TypeDefIndex: 882
{
	// Fields
	private string permissionState; // 0x60
	private Type permissionType; // 0x68
	private string _granted; // 0x70
	private string _refused; // 0x78
	private object _demanded; // 0x80
	private IPermission _firstperm; // 0x88
	private MethodInfo _method; // 0x90
	private Evidence _evidence; // 0x98
	private SecurityAction _action; // 0xA0
	private object _denyset; // 0xA8
	private object _permitset; // 0xB0
	private AssemblyName _assembly; // 0xB8
	private string _url; // 0xC0
	private SecurityZone _zone; // 0xC8

	// Properties
	[ComVisibleAttribute] // RVA: 0xBCF354 Offset: 0xBCF354 VA: 0xBCF354
	public SecurityAction Action { get; set; }
	[ComVisibleAttribute] // RVA: 0xBCF368 Offset: 0xBCF368 VA: 0xBCF368
	public object DenySetInstance { get; set; }
	[ComVisibleAttribute] // RVA: 0xBCF37C Offset: 0xBCF37C VA: 0xBCF37C
	public AssemblyName FailedAssemblyInfo { get; set; }
	[ComVisibleAttribute] // RVA: 0xBCF390 Offset: 0xBCF390 VA: 0xBCF390
	public MethodInfo Method { get; set; }
	[ComVisibleAttribute] // RVA: 0xBCF3A4 Offset: 0xBCF3A4 VA: 0xBCF3A4
	public object PermitOnlySetInstance { get; set; }
	public string Url { get; set; }
	public SecurityZone Zone { get; set; }
	[ComVisibleAttribute] // RVA: 0xBCF3B8 Offset: 0xBCF3B8 VA: 0xBCF3B8
	public object Demanded { get; set; }
	public IPermission FirstPermissionThatFailed { get; set; }
	public string PermissionState { get; set; }
	public Type PermissionType { get; set; }
	public string GrantedSet { get; set; }
	public string RefusedSet { get; set; }

	// Methods

	// RVA: 0x1F5E740 Offset: 0x1F5E740 VA: 0x1F5E740
	public void .ctor() { }

	// RVA: 0x1F4F880 Offset: 0x1F4F880 VA: 0x1F4F880
	public void .ctor(string message) { }

	// RVA: 0x1F5E7B4 Offset: 0x1F5E7B4 VA: 0x1F5E7B4
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x1F5E944 Offset: 0x1F5E944 VA: 0x1F5E944
	public void .ctor(string message, Exception inner) { }

	// RVA: 0x1F5E978 Offset: 0x1F5E978 VA: 0x1F5E978
	public void .ctor(string message, Type type) { }

	// RVA: 0x1F5E9B8 Offset: 0x1F5E9B8 VA: 0x1F5E9B8
	public void .ctor(string message, Type type, string state) { }

	// RVA: 0x1F5EA04 Offset: 0x1F5EA04 VA: 0x1F5EA04
	internal void .ctor(string message, PermissionSet granted, PermissionSet refused) { }

	// RVA: 0x1F5EA8C Offset: 0x1F5EA8C VA: 0x1F5EA8C
	public void .ctor(string message, object deny, object permitOnly, MethodInfo method, object demanded, IPermission permThatFailed) { }

	// RVA: 0x1F5EAF4 Offset: 0x1F5EAF4 VA: 0x1F5EAF4
	public void .ctor(string message, AssemblyName assemblyName, PermissionSet grant, PermissionSet refused, MethodInfo method, SecurityAction action, object demanded, IPermission permThatFailed, Evidence evidence) { }

	// RVA: 0x1F5EC50 Offset: 0x1F5EC50 VA: 0x1F5EC50
	public SecurityAction get_Action() { }

	// RVA: 0x1F5EC58 Offset: 0x1F5EC58 VA: 0x1F5EC58
	public void set_Action(SecurityAction value) { }

	// RVA: 0x1F5EC60 Offset: 0x1F5EC60 VA: 0x1F5EC60
	public object get_DenySetInstance() { }

	// RVA: 0x1F5EC68 Offset: 0x1F5EC68 VA: 0x1F5EC68
	public void set_DenySetInstance(object value) { }

	// RVA: 0x1F5EC70 Offset: 0x1F5EC70 VA: 0x1F5EC70
	public AssemblyName get_FailedAssemblyInfo() { }

	// RVA: 0x1F5EC78 Offset: 0x1F5EC78 VA: 0x1F5EC78
	public void set_FailedAssemblyInfo(AssemblyName value) { }

	// RVA: 0x1F5EC80 Offset: 0x1F5EC80 VA: 0x1F5EC80
	public MethodInfo get_Method() { }

	// RVA: 0x1F5EC88 Offset: 0x1F5EC88 VA: 0x1F5EC88
	public void set_Method(MethodInfo value) { }

	// RVA: 0x1F5EC90 Offset: 0x1F5EC90 VA: 0x1F5EC90
	public object get_PermitOnlySetInstance() { }

	// RVA: 0x1F5EC98 Offset: 0x1F5EC98 VA: 0x1F5EC98
	public void set_PermitOnlySetInstance(object value) { }

	// RVA: 0x1F5ECA0 Offset: 0x1F5ECA0 VA: 0x1F5ECA0
	public string get_Url() { }

	// RVA: 0x1F5ECA8 Offset: 0x1F5ECA8 VA: 0x1F5ECA8
	public void set_Url(string value) { }

	// RVA: 0x1F5ECB0 Offset: 0x1F5ECB0 VA: 0x1F5ECB0
	public SecurityZone get_Zone() { }

	// RVA: 0x1F5ECB8 Offset: 0x1F5ECB8 VA: 0x1F5ECB8
	public void set_Zone(SecurityZone value) { }

	// RVA: 0x1F5ECC0 Offset: 0x1F5ECC0 VA: 0x1F5ECC0
	public object get_Demanded() { }

	// RVA: 0x1F5ECC8 Offset: 0x1F5ECC8 VA: 0x1F5ECC8
	public void set_Demanded(object value) { }

	// RVA: 0x1F5ECD0 Offset: 0x1F5ECD0 VA: 0x1F5ECD0
	public IPermission get_FirstPermissionThatFailed() { }

	// RVA: 0x1F5ECD8 Offset: 0x1F5ECD8 VA: 0x1F5ECD8
	public void set_FirstPermissionThatFailed(IPermission value) { }

	// RVA: 0x1F5ECE0 Offset: 0x1F5ECE0 VA: 0x1F5ECE0
	public string get_PermissionState() { }

	// RVA: 0x1F5ECE8 Offset: 0x1F5ECE8 VA: 0x1F5ECE8
	public void set_PermissionState(string value) { }

	// RVA: 0x1F5ECF0 Offset: 0x1F5ECF0 VA: 0x1F5ECF0
	public Type get_PermissionType() { }

	// RVA: 0x1F5ECF8 Offset: 0x1F5ECF8 VA: 0x1F5ECF8
	public void set_PermissionType(Type value) { }

	// RVA: 0x1F5ED00 Offset: 0x1F5ED00 VA: 0x1F5ED00
	public string get_GrantedSet() { }

	// RVA: 0x1F5ED08 Offset: 0x1F5ED08 VA: 0x1F5ED08
	public void set_GrantedSet(string value) { }

	// RVA: 0x1F5ED10 Offset: 0x1F5ED10 VA: 0x1F5ED10
	public string get_RefusedSet() { }

	// RVA: 0x1F5ED18 Offset: 0x1F5ED18 VA: 0x1F5ED18
	public void set_RefusedSet(string value) { }

	// RVA: 0x1F5ED20 Offset: 0x1F5ED20 VA: 0x1F5ED20 Slot: 10
	public override void GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x1F5EE3C Offset: 0x1F5EE3C VA: 0x1F5EE3C Slot: 3
	public override string ToString() { }
}

// Namespace: System.Security
internal struct RuntimeDeclSecurityEntry // TypeDefIndex: 883
{
	// Fields
	public IntPtr blob; // 0x0
	public int size; // 0x8
	public int index; // 0xC
}

// Namespace: System.Security
internal class RuntimeSecurityFrame // TypeDefIndex: 884
{
	// Fields
	public AppDomain domain; // 0x10
	public MethodInfo method; // 0x18
	public RuntimeDeclSecurityEntry assert; // 0x20
	public RuntimeDeclSecurityEntry deny; // 0x30
	public RuntimeDeclSecurityEntry permitonly; // 0x40

	// Methods

	// RVA: 0x1F59C68 Offset: 0x1F59C68 VA: 0x1F59C68
	public void .ctor() { }
}

// Namespace: System.Security
internal struct SecurityFrame // TypeDefIndex: 885
{
	// Fields
	private AppDomain _domain; // 0x0
	private MethodInfo _method; // 0x8
	private PermissionSet _assert; // 0x10
	private PermissionSet _deny; // 0x18
	private PermissionSet _permitonly; // 0x20

	// Properties
	public Assembly Assembly { get; }
	public AppDomain Domain { get; }
	public MethodInfo Method { get; }
	public PermissionSet Assert { get; }
	public PermissionSet Deny { get; }
	public PermissionSet PermitOnly { get; }
	public bool HasStackModifiers { get; }

	// Methods

	// RVA: 0xD63748 Offset: 0xD63748 VA: 0xD63748
	internal void .ctor(RuntimeSecurityFrame frame) { }

	// RVA: 0xD6375C Offset: 0xD6375C VA: 0xD6375C
	internal void .ctor(int skip) { }

	// RVA: 0x1F5F8A4 Offset: 0x1F5F8A4 VA: 0x1F5F8A4
	private static RuntimeSecurityFrame _GetSecurityFrame(int skip) { }

	// RVA: 0x1F5F8A8 Offset: 0x1F5F8A8 VA: 0x1F5F8A8
	private static Array _GetSecurityStack(int skip) { }

	// RVA: 0xD63798 Offset: 0xD63798 VA: 0xD63798
	internal void InitFromRuntimeFrame(RuntimeSecurityFrame frame) { }

	// RVA: 0xD637A0 Offset: 0xD637A0 VA: 0xD637A0
	public Assembly get_Assembly() { }

	// RVA: 0xD637A8 Offset: 0xD637A8 VA: 0xD637A8
	public AppDomain get_Domain() { }

	// RVA: 0xD637B0 Offset: 0xD637B0 VA: 0xD637B0
	public MethodInfo get_Method() { }

	// RVA: 0xD637B8 Offset: 0xD637B8 VA: 0xD637B8
	public PermissionSet get_Assert() { }

	// RVA: 0xD637C0 Offset: 0xD637C0 VA: 0xD637C0
	public PermissionSet get_Deny() { }

	// RVA: 0xD637C8 Offset: 0xD637C8 VA: 0xD637C8
	public PermissionSet get_PermitOnly() { }

	// RVA: 0xD637D0 Offset: 0xD637D0 VA: 0xD637D0
	public bool get_HasStackModifiers() { }

	// RVA: 0xD637F8 Offset: 0xD637F8 VA: 0xD637F8
	public bool Equals(SecurityFrame sf) { }

	// RVA: 0xD63838 Offset: 0xD63838 VA: 0xD63838 Slot: 3
	public override string ToString() { }

	// RVA: 0x1F60048 Offset: 0x1F60048 VA: 0x1F60048
	public static ArrayList GetStack(int skipFrames) { }
}

// Namespace: System.Security
internal struct RuntimeDeclSecurityActions // TypeDefIndex: 886
{
	// Fields
	public RuntimeDeclSecurityEntry cas; // 0x0
	public RuntimeDeclSecurityEntry noncas; // 0x10
	public RuntimeDeclSecurityEntry choice; // 0x20
}

// Namespace: System.Security
[ComVisibleAttribute] // RVA: 0xBCA378 Offset: 0xBCA378 VA: 0xBCA378
public static class SecurityManager // TypeDefIndex: 887
{
	// Fields
	private static object _lockObject; // 0x0
	private static ArrayList _hierarchy; // 0x8
	private static IPermission _unmanagedCode; // 0x10
	private static Hashtable _declsecCache; // 0x18
	private static PolicyLevel _level; // 0x20
	private static SecurityPermission _execution; // 0x28

	// Properties
	public static bool CheckExecutionRights { get; set; }
	[ObsoleteAttribute] // RVA: 0xBCF3CC Offset: 0xBCF3CC VA: 0xBCF3CC
	public static bool SecurityEnabled { get; set; }
	private static IEnumerator Hierarchy { get; }
	internal static PolicyLevel ResolvingPolicyLevel { get; set; }
	private static IPermission UnmanagedCode { get; }

	// Methods

	// RVA: 0x1F60218 Offset: 0x1F60218 VA: 0x1F60218
	private static void .cctor() { }

	// RVA: 0x1F602B0 Offset: 0x1F602B0 VA: 0x1F602B0
	public static bool get_CheckExecutionRights() { }

	// RVA: 0x1F602B4 Offset: 0x1F602B4 VA: 0x1F602B4
	public static void set_CheckExecutionRights(bool value) { }

	// RVA: 0x1F4C474 Offset: 0x1F4C474 VA: 0x1F4C474
	public static bool get_SecurityEnabled() { }

	// RVA: 0x1F602BC Offset: 0x1F602BC VA: 0x1F602BC
	public static void set_SecurityEnabled(bool value) { }

	[MonoTODOAttribute] // RVA: 0xBCDCC8 Offset: 0xBCDCC8 VA: 0xBCDCC8
	// RVA: 0x1F602C4 Offset: 0x1F602C4 VA: 0x1F602C4
	public static void GetZoneAndOrigin(out ArrayList zone, out ArrayList origin) { }

	// RVA: 0x1F60348 Offset: 0x1F60348 VA: 0x1F60348
	public static bool IsGranted(IPermission perm) { }

	// RVA: 0x1F603F4 Offset: 0x1F603F4 VA: 0x1F603F4
	internal static bool IsGranted(Assembly a, IPermission perm) { }

	// RVA: 0x1F6074C Offset: 0x1F6074C VA: 0x1F6074C
	internal static IPermission CheckPermissionSet(Assembly a, PermissionSet ps, bool noncas) { }

	// RVA: 0x1F60C04 Offset: 0x1F60C04 VA: 0x1F60C04
	internal static IPermission CheckPermissionSet(AppDomain ad, PermissionSet ps) { }

	// RVA: 0x1F6126C Offset: 0x1F6126C VA: 0x1F6126C
	public static PolicyLevel LoadPolicyLevelFromFile(string path, PolicyLevelType type) { }

	// RVA: 0x1F61450 Offset: 0x1F61450 VA: 0x1F61450
	public static PolicyLevel LoadPolicyLevelFromString(string str, PolicyLevelType type) { }

	// RVA: 0x1F6163C Offset: 0x1F6163C VA: 0x1F6163C
	public static IEnumerator PolicyHierarchy() { }

	// RVA: 0x1F617DC Offset: 0x1F617DC VA: 0x1F617DC
	public static PermissionSet ResolvePolicy(Evidence evidence) { }

	[MonoTODOAttribute] // RVA: 0xBCDD00 Offset: 0xBCDD00 VA: 0xBCDD00
	// RVA: 0x1F61D24 Offset: 0x1F61D24 VA: 0x1F61D24
	public static PermissionSet ResolvePolicy(Evidence[] evidences) { }

	// RVA: 0x1F61EA0 Offset: 0x1F61EA0 VA: 0x1F61EA0
	public static PermissionSet ResolveSystemPolicy(Evidence evidence) { }

	// RVA: 0x1F62108 Offset: 0x1F62108 VA: 0x1F62108
	public static PermissionSet ResolvePolicy(Evidence evidence, PermissionSet reqdPset, PermissionSet optPset, PermissionSet denyPset, out PermissionSet denied) { }

	// RVA: 0x1F622E8 Offset: 0x1F622E8 VA: 0x1F622E8
	public static IEnumerator ResolvePolicyGroups(Evidence evidence) { }

	// RVA: 0x1F62574 Offset: 0x1F62574 VA: 0x1F62574
	public static void SavePolicy() { }

	// RVA: 0x1F626F8 Offset: 0x1F626F8 VA: 0x1F626F8
	public static void SavePolicyLevel(PolicyLevel level) { }

	// RVA: 0x1F61698 Offset: 0x1F61698 VA: 0x1F61698
	private static IEnumerator get_Hierarchy() { }

	// RVA: 0x1F62720 Offset: 0x1F62720 VA: 0x1F62720
	private static void InitializePolicyHierarchy() { }

	// RVA: 0x1F61A34 Offset: 0x1F61A34 VA: 0x1F61A34
	internal static bool ResolvePolicyLevel(ref PermissionSet ps, PolicyLevel pl, Evidence evidence) { }

	// RVA: 0x1F61B14 Offset: 0x1F61B14 VA: 0x1F61B14
	internal static void ResolveIdentityPermissions(PermissionSet ps, Evidence evidence) { }

	// RVA: 0x1F629F4 Offset: 0x1F629F4 VA: 0x1F629F4
	internal static PolicyLevel get_ResolvingPolicyLevel() { }

	// RVA: 0x1F52E40 Offset: 0x1F52E40 VA: 0x1F52E40
	internal static void set_ResolvingPolicyLevel(PolicyLevel value) { }

	// RVA: 0x1F5F8AC Offset: 0x1F5F8AC VA: 0x1F5F8AC
	internal static PermissionSet Decode(IntPtr permissions, int length) { }

	// RVA: 0x1F62A5C Offset: 0x1F62A5C VA: 0x1F62A5C
	internal static PermissionSet Decode(byte[] encodedPermissions) { }

	// RVA: 0x1F62BD4 Offset: 0x1F62BD4 VA: 0x1F62BD4
	private static IPermission get_UnmanagedCode() { }

	// RVA: 0x1F62D30 Offset: 0x1F62D30 VA: 0x1F62D30
	private static bool GetLinkDemandSecurity(MethodBase method, RuntimeDeclSecurityActions* cdecl, RuntimeDeclSecurityActions* mdecl) { }

	// RVA: 0x1F62D34 Offset: 0x1F62D34 VA: 0x1F62D34
	internal static void ReflectedLinkDemandInvoke(MethodBase mb) { }

	// RVA: 0x1F62F1C Offset: 0x1F62F1C VA: 0x1F62F1C
	internal static bool ReflectedLinkDemandQuery(MethodBase mb) { }

	// RVA: 0x1F63020 Offset: 0x1F63020 VA: 0x1F63020
	private static bool LinkDemand(Assembly a, RuntimeDeclSecurityActions* klass, RuntimeDeclSecurityActions* method) { }

	// RVA: 0x1F63278 Offset: 0x1F63278 VA: 0x1F63278
	private static bool LinkDemandFullTrust(Assembly a) { }

	// RVA: 0x1F632F4 Offset: 0x1F632F4 VA: 0x1F632F4
	private static bool LinkDemandUnmanaged(Assembly a) { }

	// RVA: 0x1F63360 Offset: 0x1F63360 VA: 0x1F63360
	private static void LinkDemandSecurityException(int securityViolation, IntPtr methodHandle) { }

	// RVA: 0x1F63614 Offset: 0x1F63614 VA: 0x1F63614
	private static void InheritanceDemandSecurityException(int securityViolation, Assembly a, Type t, MethodInfo method) { }

	// RVA: 0x1F6377C Offset: 0x1F6377C VA: 0x1F6377C
	private static void ThrowException(Exception ex) { }

	// RVA: 0x1F637CC Offset: 0x1F637CC VA: 0x1F637CC
	private static bool InheritanceDemand(AppDomain ad, Assembly a, RuntimeDeclSecurityActions* actions) { }

	// RVA: 0x1F639D0 Offset: 0x1F639D0 VA: 0x1F639D0
	private static void DemandUnmanaged() { }

	// RVA: 0x1F63AA4 Offset: 0x1F63AA4 VA: 0x1F63AA4
	private static void InternalDemand(IntPtr permissions, int length) { }

	// RVA: 0x1F63B34 Offset: 0x1F63B34 VA: 0x1F63B34
	private static void InternalDemandChoice(IntPtr permissions, int length) { }
}

// Namespace: System.Security
[AttributeUsageAttribute] // RVA: 0xBCA38C Offset: 0xBCA38C VA: 0xBCA38C
[MonoTODOAttribute] // RVA: 0xBCA38C Offset: 0xBCA38C VA: 0xBCA38C
public sealed class SecuritySafeCriticalAttribute : Attribute // TypeDefIndex: 888
{
	// Methods

	// RVA: 0x1F63BA4 Offset: 0x1F63BA4 VA: 0x1F63BA4
	public void .ctor() { }
}

// Namespace: System.Security
public abstract class SecurityState // TypeDefIndex: 889
{
	// Methods

	// RVA: 0x1F63BAC Offset: 0x1F63BAC VA: 0x1F63BAC
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void EnsureState();

	// RVA: 0x1F63BB4 Offset: 0x1F63BB4 VA: 0x1F63BB4
	public bool IsStateAvailable() { }
}

// Namespace: System.Security
[MonoTODOAttribute] // RVA: 0xBCA400 Offset: 0xBCA400 VA: 0xBCA400
[AttributeUsageAttribute] // RVA: 0xBCA400 Offset: 0xBCA400 VA: 0xBCA400
public sealed class SecurityTransparentAttribute : Attribute // TypeDefIndex: 890
{
	// Methods

	// RVA: 0x1F63C0C Offset: 0x1F63C0C VA: 0x1F63C0C
	public void .ctor() { }
}

// Namespace: System.Security
[AttributeUsageAttribute] // RVA: 0xBCA474 Offset: 0xBCA474 VA: 0xBCA474
[MonoTODOAttribute] // RVA: 0xBCA474 Offset: 0xBCA474 VA: 0xBCA474
public sealed class SecurityTreatAsSafeAttribute : Attribute // TypeDefIndex: 891
{
	// Methods

	// RVA: 0x1F63C14 Offset: 0x1F63C14 VA: 0x1F63C14
	public void .ctor() { }
}

// Namespace: System.Security
[ComVisibleAttribute] // RVA: 0xBCA4E8 Offset: 0xBCA4E8 VA: 0xBCA4E8
[Serializable]
public enum SecurityZone // TypeDefIndex: 892
{
	// Fields
	public int value__; // 0x0
	public const SecurityZone MyComputer = 0;
	public const SecurityZone Intranet = 1;
	public const SecurityZone Trusted = 2;
	public const SecurityZone Internet = 3;
	public const SecurityZone Untrusted = 4;
	public const SecurityZone NoZone = -1;
}

// Namespace: System.Security
[AttributeUsageAttribute] // RVA: 0xBCA4FC Offset: 0xBCA4FC VA: 0xBCA4FC
[ComVisibleAttribute] // RVA: 0xBCA4FC Offset: 0xBCA4FC VA: 0xBCA4FC
public sealed class SuppressUnmanagedCodeSecurityAttribute : Attribute // TypeDefIndex: 893
{
	// Methods

	// RVA: 0x1F63C1C Offset: 0x1F63C1C VA: 0x1F63C1C
	public void .ctor() { }
}

// Namespace: System.Security
[AttributeUsageAttribute] // RVA: 0xBCA560 Offset: 0xBCA560 VA: 0xBCA560
[ComVisibleAttribute] // RVA: 0xBCA560 Offset: 0xBCA560 VA: 0xBCA560
public sealed class UnverifiableCodeAttribute : Attribute // TypeDefIndex: 894
{
	// Methods

	// RVA: 0x1F63C24 Offset: 0x1F63C24 VA: 0x1F63C24
	public void .ctor() { }
}

// Namespace: System.Security
[ComVisibleAttribute] // RVA: 0xBCA5C4 Offset: 0xBCA5C4 VA: 0xBCA5C4
[Serializable]
public class VerificationException : SystemException // TypeDefIndex: 895
{
	// Methods

	// RVA: 0x1F63C2C Offset: 0x1F63C2C VA: 0x1F63C2C
	public void .ctor() { }

	// RVA: 0x1F63C34 Offset: 0x1F63C34 VA: 0x1F63C34
	public void .ctor(string message) { }

	// RVA: 0x1F63C3C Offset: 0x1F63C3C VA: 0x1F63C3C
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x1F63C44 Offset: 0x1F63C44 VA: 0x1F63C44
	public void .ctor(string message, Exception innerException) { }
}

// Namespace: System.Security
[ComVisibleAttribute] // RVA: 0xBCA5D8 Offset: 0xBCA5D8 VA: 0xBCA5D8
[Serializable]
public sealed class XmlSyntaxException : SystemException // TypeDefIndex: 896
{
	// Methods

	// RVA: 0x1F63C4C Offset: 0x1F63C4C VA: 0x1F63C4C
	public void .ctor() { }

	// RVA: 0x1F63C54 Offset: 0x1F63C54 VA: 0x1F63C54
	public void .ctor(int lineNumber) { }

	// RVA: 0x1F63D14 Offset: 0x1F63D14 VA: 0x1F63D14
	public void .ctor(int lineNumber, string message) { }

	// RVA: 0x1F5DCE8 Offset: 0x1F5DCE8 VA: 0x1F5DCE8
	public void .ctor(string message) { }

	// RVA: 0x1F5DCF0 Offset: 0x1F5DCF0 VA: 0x1F5DCF0
	public void .ctor(string message, Exception inner) { }

	// RVA: 0x1F63DE4 Offset: 0x1F63DE4 VA: 0x1F63DE4
	internal void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System.Text
[ComVisibleAttribute] // RVA: 0xBCA5EC Offset: 0xBCA5EC VA: 0xBCA5EC
[MonoTODOAttribute] // RVA: 0xBCA5EC Offset: 0xBCA5EC VA: 0xBCA5EC
[Serializable]
public class ASCIIEncoding : Encoding // TypeDefIndex: 897
{
	// Methods

	// RVA: 0x27B9608 Offset: 0x27B9608 VA: 0x27B9608
	public void .ctor() { }

	// RVA: 0x27B97F8 Offset: 0x27B97F8 VA: 0x27B97F8 Slot: 5
	public override int GetByteCount(char[] chars, int index, int count) { }

	// RVA: 0x27B9964 Offset: 0x27B9964 VA: 0x27B9964 Slot: 6
	public override int GetByteCount(string chars) { }

	// RVA: 0x27B99F4 Offset: 0x27B99F4 VA: 0x27B99F4 Slot: 8
	public override int GetBytes(char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex) { }

	// RVA: 0x27B9A20 Offset: 0x27B9A20 VA: 0x27B9A20
	private int GetBytes(char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, ref EncoderFallbackBuffer buffer, ref char[] fallback_chars) { }

	// RVA: 0x27B9F9C Offset: 0x27B9F9C VA: 0x27B9F9C Slot: 9
	public override int GetBytes(string chars, int charIndex, int charCount, byte[] bytes, int byteIndex) { }

	// RVA: 0x27B9FC8 Offset: 0x27B9FC8 VA: 0x27B9FC8
	private int GetBytes(string chars, int charIndex, int charCount, byte[] bytes, int byteIndex, ref EncoderFallbackBuffer buffer, ref char[] fallback_chars) { }

	// RVA: 0x27BA528 Offset: 0x27BA528 VA: 0x27BA528 Slot: 13
	public override int GetCharCount(byte[] bytes, int index, int count) { }

	// RVA: 0x27BA690 Offset: 0x27BA690 VA: 0x27BA690 Slot: 14
	public override int GetChars(byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex) { }

	// RVA: 0x27BA6B4 Offset: 0x27BA6B4 VA: 0x27BA6B4
	private int GetChars(byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex, ref DecoderFallbackBuffer buffer) { }

	// RVA: 0x27BAA6C Offset: 0x27BAA6C VA: 0x27BAA6C Slot: 19
	public override int GetMaxByteCount(int charCount) { }

	// RVA: 0x27BAB28 Offset: 0x27BAB28 VA: 0x27BAB28 Slot: 20
	public override int GetMaxCharCount(int byteCount) { }

	// RVA: 0x27BABE4 Offset: 0x27BABE4 VA: 0x27BABE4 Slot: 22
	public override string GetString(byte[] bytes, int byteIndex, int byteCount) { }

	[CLSCompliantAttribute] // RVA: 0xBCDD38 Offset: 0xBCDD38 VA: 0xBCDD38
	[ComVisibleAttribute] // RVA: 0xBCDD38 Offset: 0xBCDD38 VA: 0xBCDD38
	// RVA: 0x27BADFC Offset: 0x27BADFC VA: 0x27BADFC Slot: 27
	public override int GetBytes(char* chars, int charCount, byte* bytes, int byteCount) { }

	[CLSCompliantAttribute] // RVA: 0xBCDD78 Offset: 0xBCDD78 VA: 0xBCDD78
	[ComVisibleAttribute] // RVA: 0xBCDD78 Offset: 0xBCDD78 VA: 0xBCDD78
	// RVA: 0x27BAF84 Offset: 0x27BAF84 VA: 0x27BAF84 Slot: 26
	public override int GetByteCount(char* chars, int count) { }

	[MonoTODOAttribute] // RVA: 0xBCDDB8 Offset: 0xBCDDB8 VA: 0xBCDDB8
	[ComVisibleAttribute] // RVA: 0xBCDDB8 Offset: 0xBCDDB8 VA: 0xBCDDB8
	// RVA: 0x27BAF8C Offset: 0x27BAF8C VA: 0x27BAF8C Slot: 17
	public override Decoder GetDecoder() { }
}

// Namespace: System.Text
[ComVisibleAttribute] // RVA: 0xBCA63C Offset: 0xBCA63C VA: 0xBCA63C
[Serializable]
public abstract class Decoder // TypeDefIndex: 898
{
	// Fields
	private DecoderFallback fallback; // 0x10
	private DecoderFallbackBuffer fallback_buffer; // 0x18

	// Properties
	[ComVisibleAttribute] // RVA: 0xBCF404 Offset: 0xBCF404 VA: 0xBCF404
	public DecoderFallback Fallback { set; }
	[ComVisibleAttribute] // RVA: 0xBCF418 Offset: 0xBCF418 VA: 0xBCF418
	public DecoderFallbackBuffer FallbackBuffer { get; }

	// Methods

	// RVA: 0x27BAFF0 Offset: 0x27BAFF0 VA: 0x27BAFF0
	protected void .ctor() { }

	// RVA: 0x27BB0A4 Offset: 0x27BB0A4 VA: 0x27BB0A4
	public void set_Fallback(DecoderFallback value) { }

	// RVA: 0x27BB130 Offset: 0x27BB130 VA: 0x27BB130
	public DecoderFallbackBuffer get_FallbackBuffer() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract int GetChars(byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);
}

// Namespace: System.Text
[Serializable]
public sealed class DecoderExceptionFallback : DecoderFallback // TypeDefIndex: 899
{
	// Methods

	// RVA: 0x27BB178 Offset: 0x27BB178 VA: 0x27BB178
	public void .ctor() { }

	// RVA: 0x27BB1E8 Offset: 0x27BB1E8 VA: 0x27BB1E8 Slot: 4
	public override DecoderFallbackBuffer CreateFallbackBuffer() { }

	// RVA: 0x27BB24C Offset: 0x27BB24C VA: 0x27BB24C Slot: 0
	public override bool Equals(object value) { }

	// RVA: 0x27BB2B0 Offset: 0x27BB2B0 VA: 0x27BB2B0 Slot: 2
	public override int GetHashCode() { }
}

// Namespace: System.Text
public sealed class DecoderExceptionFallbackBuffer : DecoderFallbackBuffer // TypeDefIndex: 900
{
	// Properties
	public override int Remaining { get; }

	// Methods

	// RVA: 0x27BB244 Offset: 0x27BB244 VA: 0x27BB244
	public void .ctor() { }

	// RVA: 0x27BB2C0 Offset: 0x27BB2C0 VA: 0x27BB2C0 Slot: 4
	public override int get_Remaining() { }

	// RVA: 0x27BB2C8 Offset: 0x27BB2C8 VA: 0x27BB2C8 Slot: 5
	public override bool Fallback(byte[] bytesUnknown, int index) { }

	// RVA: 0x27BB388 Offset: 0x27BB388 VA: 0x27BB388 Slot: 6
	public override char GetNextChar() { }
}

// Namespace: System.Text
[Serializable]
public abstract class DecoderFallback // TypeDefIndex: 901
{
	// Fields
	private static DecoderFallback exception_fallback; // 0x0
	private static DecoderFallback replacement_fallback; // 0x8
	private static DecoderFallback standard_safe_fallback; // 0x10

	// Properties
	public static DecoderFallback ExceptionFallback { get; }
	public static DecoderFallback ReplacementFallback { get; }
	internal static DecoderFallback StandardSafeFallback { get; }

	// Methods

	// RVA: 0x27BB1E0 Offset: 0x27BB1E0 VA: 0x27BB1E0
	protected void .ctor() { }

	// RVA: 0x27BB390 Offset: 0x27BB390 VA: 0x27BB390
	private static void .cctor() { }

	// RVA: 0x27BB504 Offset: 0x27BB504 VA: 0x27BB504
	public static DecoderFallback get_ExceptionFallback() { }

	// RVA: 0x27BB56C Offset: 0x27BB56C VA: 0x27BB56C
	public static DecoderFallback get_ReplacementFallback() { }

	// RVA: 0x27BB5D4 Offset: 0x27BB5D4 VA: 0x27BB5D4
	internal static DecoderFallback get_StandardSafeFallback() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract DecoderFallbackBuffer CreateFallbackBuffer();
}

// Namespace: System.Text
public abstract class DecoderFallbackBuffer // TypeDefIndex: 902
{
	// Properties
	public abstract int Remaining { get; }

	// Methods

	// RVA: 0x27BB2B8 Offset: 0x27BB2B8 VA: 0x27BB2B8
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract int get_Remaining();

	// RVA: -1 Offset: -1 Slot: 5
	public abstract bool Fallback(byte[] bytesUnknown, int index);

	// RVA: -1 Offset: -1 Slot: 6
	public abstract char GetNextChar();

	// RVA: 0x27BB63C Offset: 0x27BB63C VA: 0x27BB63C Slot: 7
	public virtual void Reset() { }
}

// Namespace: System.Text
[Serializable]
public sealed class DecoderFallbackException : ArgumentException // TypeDefIndex: 903
{
	// Fields
	private byte[] bytes_unknown; // 0x68
	private int index; // 0x70

	// Methods

	// RVA: 0x27BB640 Offset: 0x27BB640 VA: 0x27BB640
	public void .ctor() { }

	// RVA: 0x27BB654 Offset: 0x27BB654 VA: 0x27BB654
	public void .ctor(string message) { }

	// RVA: 0x27BB344 Offset: 0x27BB344 VA: 0x27BB344
	public void .ctor(string message, byte[] bytesUnknown, int index) { }
}

// Namespace: System.Text
[Serializable]
public sealed class DecoderReplacementFallback : DecoderFallback // TypeDefIndex: 904
{
	// Fields
	private string replacement; // 0x10

	// Properties
	public string DefaultString { get; }

	// Methods

	// RVA: 0x27BB054 Offset: 0x27BB054 VA: 0x27BB054
	public void .ctor() { }

	[MonoTODOAttribute] // RVA: 0xBCDE08 Offset: 0xBCDE08 VA: 0xBCDE08
	// RVA: 0x27BB44C Offset: 0x27BB44C VA: 0x27BB44C
	public void .ctor(string replacement) { }

	// RVA: 0x27BB664 Offset: 0x27BB664 VA: 0x27BB664
	public string get_DefaultString() { }

	// RVA: 0x27BB66C Offset: 0x27BB66C VA: 0x27BB66C Slot: 4
	public override DecoderFallbackBuffer CreateFallbackBuffer() { }

	// RVA: 0x27BB778 Offset: 0x27BB778 VA: 0x27BB778 Slot: 0
	public override bool Equals(object value) { }

	// RVA: 0x27BB828 Offset: 0x27BB828 VA: 0x27BB828 Slot: 2
	public override int GetHashCode() { }
}

// Namespace: System.Text
public sealed class DecoderReplacementFallbackBuffer : DecoderFallbackBuffer // TypeDefIndex: 905
{
	// Fields
	private bool fallback_assigned; // 0x10
	private int current; // 0x14
	private string replacement; // 0x18

	// Properties
	public override int Remaining { get; }

	// Methods

	// RVA: 0x27BB6CC Offset: 0x27BB6CC VA: 0x27BB6CC
