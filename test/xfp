	public IAsyncResult BeginReceiveMessageFrom(byte[] buffer, int offset, int size, SocketFlags socketFlags, ref EndPoint remoteEP, AsyncCallback callback, object state) { }

	// RVA: 0x23178FC Offset: 0x23178FC VA: 0x23178FC
	public IAsyncResult BeginSend(byte[] buffer, int offset, int size, SocketFlags socket_flags, AsyncCallback callback, object state) { }

	// RVA: 0x231D9F4 Offset: 0x231D9F4 VA: 0x231D9F4
	public IAsyncResult BeginSend(byte[] buffer, int offset, int size, SocketFlags socketFlags, out SocketError errorCode, AsyncCallback callback, object state) { }

	// RVA: 0x231DADC Offset: 0x231DADC VA: 0x231DADC
	public IAsyncResult BeginSend(IList<ArraySegment<byte>> buffers, SocketFlags socketFlags, AsyncCallback callback, object state) { }

	[CLSCompliantAttribute] // RVA: 0xBD19E0 Offset: 0xBD19E0 VA: 0xBD19E0
	// RVA: 0x231DDC8 Offset: 0x231DDC8 VA: 0x231DDC8
	public IAsyncResult BeginSend(IList<ArraySegment<byte>> buffers, SocketFlags socketFlags, out SocketError errorCode, AsyncCallback callback, object state) { }

	// RVA: 0x231DE98 Offset: 0x231DE98 VA: 0x231DE98
	public IAsyncResult BeginSendFile(string fileName, AsyncCallback callback, object state) { }

	// RVA: 0x231DFF0 Offset: 0x231DFF0 VA: 0x231DFF0
	public IAsyncResult BeginSendFile(string fileName, byte[] preBuffer, byte[] postBuffer, TransmitFileOptions flags, AsyncCallback callback, object state) { }

	// RVA: 0x231E2B8 Offset: 0x231E2B8 VA: 0x231E2B8
	public IAsyncResult BeginSendTo(byte[] buffer, int offset, int size, SocketFlags socket_flags, EndPoint remote_end, AsyncCallback callback, object state) { }

	// RVA: 0x231E66C Offset: 0x231E66C VA: 0x231E66C
	private static void Bind_internal(IntPtr sock, SocketAddress sa, out int error) { }

	// RVA: 0x2311DE0 Offset: 0x2311DE0 VA: 0x2311DE0
	public void Bind(EndPoint local_end) { }

	// RVA: 0x231E670 Offset: 0x231E670 VA: 0x231E670
	public bool ConnectAsync(SocketAsyncEventArgs e) { }

	// RVA: 0x231E838 Offset: 0x231E838 VA: 0x231E838
	public void Connect(IPAddress address, int port) { }

	// RVA: 0x231E8C0 Offset: 0x231E8C0 VA: 0x231E8C0
	public void Connect(IPAddress[] addresses, int port) { }

	// RVA: 0x231ED78 Offset: 0x231ED78 VA: 0x231ED78
	public void Connect(string host, int port) { }

	// RVA: 0x231EE00 Offset: 0x231EE00 VA: 0x231EE00
	public bool DisconnectAsync(SocketAsyncEventArgs e) { }

	// RVA: 0x231EEEC Offset: 0x231EEEC VA: 0x231EEEC
	private static void Disconnect_internal(IntPtr sock, bool reuse, out int error) { }

	// RVA: 0x231EEF4 Offset: 0x231EEF4 VA: 0x231EEF4
	public void Disconnect(bool reuseSocket) { }

	[MonoTODOAttribute] // RVA: 0xBD19F4 Offset: 0xBD19F4 VA: 0xBD19F4
	// RVA: 0x231F05C Offset: 0x231F05C VA: 0x231F05C
	public SocketInformation DuplicateAndClose(int targetProcessId) { }

	// RVA: 0x231F0C4 Offset: 0x231F0C4 VA: 0x231F0C4
	public Socket EndAccept(IAsyncResult result) { }

	// RVA: 0x231F3A4 Offset: 0x231F3A4 VA: 0x231F3A4
	public Socket EndAccept(out byte[] buffer, IAsyncResult asyncResult) { }

	// RVA: 0x231F0F8 Offset: 0x231F0F8 VA: 0x231F0F8
	public Socket EndAccept(out byte[] buffer, out int bytesTransferred, IAsyncResult asyncResult) { }

	// RVA: 0x231F54C Offset: 0x231F54C VA: 0x231F54C
	public void EndConnect(IAsyncResult result) { }

	// RVA: 0x231F7D0 Offset: 0x231F7D0 VA: 0x231F7D0
	public void EndDisconnect(IAsyncResult asyncResult) { }

	// RVA: 0x2317F90 Offset: 0x2317F90 VA: 0x2317F90
	public int EndReceive(IAsyncResult result) { }

	// RVA: 0x231FA54 Offset: 0x231FA54 VA: 0x231FA54
	public int EndReceive(IAsyncResult asyncResult, out SocketError errorCode) { }

	// RVA: 0x231FD80 Offset: 0x231FD80 VA: 0x231FD80
	public int EndReceiveFrom(IAsyncResult result, ref EndPoint end_point) { }

	[MonoTODOAttribute] // RVA: 0xBD1A2C Offset: 0xBD1A2C VA: 0xBD1A2C
	// RVA: 0x2320018 Offset: 0x2320018 VA: 0x2320018
	public int EndReceiveMessageFrom(IAsyncResult asyncResult, ref SocketFlags socketFlags, ref EndPoint endPoint, out IPPacketInformation ipPacketInformation) { }

	// RVA: 0x231811C Offset: 0x231811C VA: 0x231811C
	public int EndSend(IAsyncResult result) { }

	// RVA: 0x23201DC Offset: 0x23201DC VA: 0x23201DC
	public int EndSend(IAsyncResult asyncResult, out SocketError errorCode) { }

	// RVA: 0x2320478 Offset: 0x2320478 VA: 0x2320478
	public void EndSendFile(IAsyncResult asyncResult) { }

	// RVA: 0x231F3D0 Offset: 0x231F3D0 VA: 0x231F3D0
	private Exception InvalidAsyncOp(string method) { }

	// RVA: 0x2320600 Offset: 0x2320600 VA: 0x2320600
	public int EndSendTo(IAsyncResult result) { }

	// RVA: 0x232088C Offset: 0x232088C VA: 0x232088C
	private static void GetSocketOption_arr_internal(IntPtr socket, SocketOptionLevel level, SocketOptionName name, ref byte[] byte_val, out int error) { }

	// RVA: 0x2320890 Offset: 0x2320890 VA: 0x2320890
	public void GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, byte[] optionValue) { }

	// RVA: 0x2320A20 Offset: 0x2320A20 VA: 0x2320A20
	public byte[] GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, int length) { }

	// RVA: 0x2320B8C Offset: 0x2320B8C VA: 0x2320B8C
	private static int WSAIoctl(IntPtr sock, int ioctl_code, byte[] input, byte[] output, out int error) { }

	// RVA: 0x2320B90 Offset: 0x2320B90 VA: 0x2320B90
	public int IOControl(int ioctl_code, byte[] in_value, byte[] out_value) { }

	[MonoTODOAttribute] // RVA: 0xBD1A3C Offset: 0xBD1A3C VA: 0xBD1A3C
	// RVA: 0x2320D0C Offset: 0x2320D0C VA: 0x2320D0C
	public int IOControl(IOControlCode ioControlCode, byte[] optionInValue, byte[] optionOutValue) { }

	// RVA: 0x2320D74 Offset: 0x2320D74 VA: 0x2320D74
	private static void Listen_internal(IntPtr sock, int backlog, out int error) { }

	// RVA: 0x2320D78 Offset: 0x2320D78 VA: 0x2320D78
	public void Listen(int backlog) { }

	// RVA: 0x231EBA8 Offset: 0x231EBA8 VA: 0x231EBA8
	public bool Poll(int time_us, SelectMode mode) { }

	// RVA: 0x2320F84 Offset: 0x2320F84 VA: 0x2320F84
	public int Receive(byte[] buffer) { }

	// RVA: 0x2321284 Offset: 0x2321284 VA: 0x2321284
	public int Receive(byte[] buffer, SocketFlags flags) { }

	// RVA: 0x2321424 Offset: 0x2321424 VA: 0x2321424
	public int Receive(byte[] buffer, int size, SocketFlags flags) { }

	// RVA: 0x2318328 Offset: 0x2318328 VA: 0x2318328
	public int Receive(byte[] buffer, int offset, int size, SocketFlags flags) { }

	// RVA: 0x2321604 Offset: 0x2321604 VA: 0x2321604
	public int Receive(byte[] buffer, int offset, int size, SocketFlags flags, out SocketError error) { }

	// RVA: 0x23217A8 Offset: 0x23217A8 VA: 0x23217A8
	private static int Receive_internal(IntPtr sock, Socket.WSABUF[] bufarray, SocketFlags flags, out int error) { }

	// RVA: 0x23217AC Offset: 0x23217AC VA: 0x23217AC
	public int Receive(IList<ArraySegment<byte>> buffers) { }

	[CLSCompliantAttribute] // RVA: 0xBD1A4C Offset: 0xBD1A4C VA: 0xBD1A4C
	// RVA: 0x2321D60 Offset: 0x2321D60 VA: 0x2321D60
	public int Receive(IList<ArraySegment<byte>> buffers, SocketFlags socketFlags) { }

	[CLSCompliantAttribute] // RVA: 0xBD1A60 Offset: 0xBD1A60 VA: 0xBD1A60
	// RVA: 0x2321854 Offset: 0x2321854 VA: 0x2321854
	public int Receive(IList<ArraySegment<byte>> buffers, SocketFlags socketFlags, out SocketError errorCode) { }

	// RVA: 0x2321E14 Offset: 0x2321E14 VA: 0x2321E14
	public bool ReceiveFromAsync(SocketAsyncEventArgs e) { }

	// RVA: 0x2321FA8 Offset: 0x2321FA8 VA: 0x2321FA8
	public int ReceiveFrom(byte[] buffer, ref EndPoint remoteEP) { }

	// RVA: 0x232212C Offset: 0x232212C VA: 0x232212C
	public int ReceiveFrom(byte[] buffer, SocketFlags flags, ref EndPoint remoteEP) { }

	// RVA: 0x2322294 Offset: 0x2322294 VA: 0x2322294
	public int ReceiveFrom(byte[] buffer, int size, SocketFlags flags, ref EndPoint remoteEP) { }

	// RVA: 0x232243C Offset: 0x232243C VA: 0x232243C
	private static int RecvFrom_internal(IntPtr sock, byte[] buffer, int offset, int count, SocketFlags flags, ref SocketAddress sockaddr, out int error) { }

	// RVA: 0x2322440 Offset: 0x2322440 VA: 0x2322440
	public int ReceiveFrom(byte[] buffer, int offset, int size, SocketFlags flags, ref EndPoint remoteEP) { }

	// RVA: 0x2322104 Offset: 0x2322104 VA: 0x2322104
	internal int ReceiveFrom_nochecks(byte[] buf, int offset, int size, SocketFlags flags, ref EndPoint remote_end) { }

	// RVA: 0x2322620 Offset: 0x2322620 VA: 0x2322620
	internal int ReceiveFrom_nochecks_exc(byte[] buf, int offset, int size, SocketFlags flags, ref EndPoint remote_end, bool throwOnError, out int error) { }

	[MonoTODOAttribute] // RVA: 0xBD1A74 Offset: 0xBD1A74 VA: 0xBD1A74
	// RVA: 0x2322CF4 Offset: 0x2322CF4 VA: 0x2322CF4
	public bool ReceiveMessageFromAsync(SocketAsyncEventArgs e) { }

	[MonoTODOAttribute] // RVA: 0xBD1AAC Offset: 0xBD1AAC VA: 0xBD1AAC
	// RVA: 0x2322DD0 Offset: 0x2322DD0 VA: 0x2322DD0
	public int ReceiveMessageFrom(byte[] buffer, int offset, int size, ref SocketFlags socketFlags, ref EndPoint remoteEP, out IPPacketInformation ipPacketInformation) { }

	[MonoTODOAttribute] // RVA: 0xBD1AE4 Offset: 0xBD1AE4 VA: 0xBD1AE4
	// RVA: 0x2322F80 Offset: 0x2322F80 VA: 0x2322F80
	public bool SendPacketsAsync(SocketAsyncEventArgs e) { }

	// RVA: 0x232305C Offset: 0x232305C VA: 0x232305C
	public int Send(byte[] buf) { }

	// RVA: 0x2323298 Offset: 0x2323298 VA: 0x2323298
	public int Send(byte[] buf, SocketFlags flags) { }

	// RVA: 0x23233F4 Offset: 0x23233F4 VA: 0x23233F4
	public int Send(byte[] buf, int size, SocketFlags flags) { }

	// RVA: 0x2318818 Offset: 0x2318818 VA: 0x2318818
	public int Send(byte[] buf, int offset, int size, SocketFlags flags) { }

	// RVA: 0x2323590 Offset: 0x2323590 VA: 0x2323590
	public int Send(byte[] buf, int offset, int size, SocketFlags flags, out SocketError error) { }

	// RVA: 0x2323734 Offset: 0x2323734 VA: 0x2323734
	private static int Send_internal(IntPtr sock, Socket.WSABUF[] bufarray, SocketFlags flags, out int error) { }

	// RVA: 0x2323738 Offset: 0x2323738 VA: 0x2323738
	public int Send(IList<ArraySegment<byte>> buffers) { }

	// RVA: 0x2323D24 Offset: 0x2323D24 VA: 0x2323D24
	public int Send(IList<ArraySegment<byte>> buffers, SocketFlags socketFlags) { }

	[CLSCompliantAttribute] // RVA: 0xBD1B1C Offset: 0xBD1B1C VA: 0xBD1B1C
	// RVA: 0x23237E0 Offset: 0x23237E0 VA: 0x23237E0
	public int Send(IList<ArraySegment<byte>> buffers, SocketFlags socketFlags, out SocketError errorCode) { }

	// RVA: 0x2323DD8 Offset: 0x2323DD8 VA: 0x2323DD8
	private static bool SendFile(IntPtr sock, string filename, byte[] pre_buffer, byte[] post_buffer, TransmitFileOptions flags) { }

	// RVA: 0x2323DDC Offset: 0x2323DDC VA: 0x2323DDC
	public void SendFile(string fileName) { }

	// RVA: 0x2323F14 Offset: 0x2323F14 VA: 0x2323F14
	public void SendFile(string fileName, byte[] preBuffer, byte[] postBuffer, TransmitFileOptions flags) { }

	// RVA: 0x2324104 Offset: 0x2324104 VA: 0x2324104
	public bool SendToAsync(SocketAsyncEventArgs e) { }

	// RVA: 0x2324250 Offset: 0x2324250 VA: 0x2324250
	public int SendTo(byte[] buffer, EndPoint remote_end) { }

	// RVA: 0x23244D8 Offset: 0x23244D8 VA: 0x23244D8
	public int SendTo(byte[] buffer, SocketFlags flags, EndPoint remote_end) { }

	// RVA: 0x2324624 Offset: 0x2324624 VA: 0x2324624
	public int SendTo(byte[] buffer, int size, SocketFlags flags, EndPoint remote_end) { }

	// RVA: 0x23247B0 Offset: 0x23247B0 VA: 0x23247B0
	private static int SendTo_internal_real(IntPtr sock, byte[] buffer, int offset, int count, SocketFlags flags, SocketAddress sa, out int error) { }

	// RVA: 0x23247B4 Offset: 0x23247B4 VA: 0x23247B4
	private static int SendTo_internal(IntPtr sock, byte[] buffer, int offset, int count, SocketFlags flags, SocketAddress sa, out int error) { }

	// RVA: 0x2324948 Offset: 0x2324948 VA: 0x2324948
	public int SendTo(byte[] buffer, int offset, int size, SocketFlags flags, EndPoint remote_end) { }

	// RVA: 0x2324390 Offset: 0x2324390 VA: 0x2324390
	internal int SendTo_nochecks(byte[] buffer, int offset, int size, SocketFlags flags, EndPoint remote_end) { }

	// RVA: 0x2324B0C Offset: 0x2324B0C VA: 0x2324B0C
	public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, byte[] optionValue) { }

	// RVA: 0x231AC00 Offset: 0x231AC00 VA: 0x231AC00
	public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, object optionValue) { }

	// RVA: 0x2324CC8 Offset: 0x2324CC8 VA: 0x2324CC8
	public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, bool optionValue) { }

	// RVA: 0x23190AC Offset: 0x23190AC VA: 0x23190AC
	internal static void CheckProtocolSupport() { }

	// RVA: 0x2324E50 Offset: 0x2324E50 VA: 0x2324E50
	public static bool get_SupportsIPv4() { }

	// RVA: 0x2324EC4 Offset: 0x2324EC4 VA: 0x2324EC4
	public static bool get_SupportsIPv6() { }

	// RVA: 0x2324F38 Offset: 0x2324F38 VA: 0x2324F38
	public static bool get_OSSupportsIPv4() { }

	// RVA: 0x2324FAC Offset: 0x2324FAC VA: 0x2324FAC
	public static bool get_OSSupportsIPv6() { }

	// RVA: 0x2319048 Offset: 0x2319048 VA: 0x2319048
	private IntPtr Socket_internal(AddressFamily family, SocketType type, ProtocolType proto, out int error) { }

	// RVA: 0x2325020 Offset: 0x2325020 VA: 0x2325020 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x231B6E8 Offset: 0x231B6E8 VA: 0x231B6E8
	public AddressFamily get_AddressFamily() { }

	// RVA: 0x23250A0 Offset: 0x23250A0 VA: 0x23250A0
	private static void Blocking_internal(IntPtr socket, bool block, out int error) { }

	// RVA: 0x231676C Offset: 0x231676C VA: 0x231676C
	public bool get_Blocking() { }

	// RVA: 0x231B9EC Offset: 0x231B9EC VA: 0x231B9EC
	public void set_Blocking(bool value) { }

	// RVA: 0x2316764 Offset: 0x2316764 VA: 0x2316764
	public bool get_Connected() { }

	// RVA: 0x23250A8 Offset: 0x23250A8 VA: 0x23250A8
	internal void set_Connected(bool value) { }

	// RVA: 0x231B6F0 Offset: 0x231B6F0 VA: 0x231B6F0
	public ProtocolType get_ProtocolType() { }

	// RVA: 0x23250B4 Offset: 0x23250B4 VA: 0x23250B4
	public bool get_NoDelay() { }

	// RVA: 0x23251A0 Offset: 0x23251A0 VA: 0x23251A0
	public void set_NoDelay(bool value) { }

	// RVA: 0x2325278 Offset: 0x2325278 VA: 0x2325278
	public int get_ReceiveBufferSize() { }

	// RVA: 0x2325358 Offset: 0x2325358 VA: 0x2325358
	public void set_ReceiveBufferSize(int value) { }

	// RVA: 0x2325478 Offset: 0x2325478 VA: 0x2325478
	public int get_SendBufferSize() { }

	// RVA: 0x2325558 Offset: 0x2325558 VA: 0x2325558
	public void set_SendBufferSize(int value) { }

	// RVA: 0x2325678 Offset: 0x2325678 VA: 0x2325678
	public short get_Ttl() { }

	// RVA: 0x23257B4 Offset: 0x23257B4 VA: 0x23257B4
	public void set_Ttl(short value) { }

	// RVA: 0x23258EC Offset: 0x23258EC VA: 0x23258EC
	private static SocketAddress RemoteEndPoint_internal(IntPtr socket, out int error) { }

	// RVA: 0x23258F0 Offset: 0x23258F0 VA: 0x23258F0
	public EndPoint get_RemoteEndPoint() { }

	// RVA: 0x2325A50 Offset: 0x2325A50 VA: 0x2325A50
	private void Linger(IntPtr handle) { }

	// RVA: 0x2325BD0 Offset: 0x2325BD0 VA: 0x2325BD0 Slot: 5
	protected virtual void Dispose(bool explicitDisposing) { }

	// RVA: 0x2325D68 Offset: 0x2325D68 VA: 0x2325D68 Slot: 4
	public void Dispose() { }

	// RVA: 0x2325D64 Offset: 0x2325D64 VA: 0x2325D64
	private static void Close_internal(IntPtr socket, out int error) { }

	// RVA: 0x2317D80 Offset: 0x2317D80 VA: 0x2317D80
	public void Close() { }

	// RVA: 0x2325D9C Offset: 0x2325D9C VA: 0x2325D9C
	public void Close(int timeout) { }

	// RVA: 0x2325E50 Offset: 0x2325E50 VA: 0x2325E50
	private static void Connect_internal_real(IntPtr sock, SocketAddress sa, out int error) { }

	// RVA: 0x231C9BC Offset: 0x231C9BC VA: 0x231C9BC
	private static void Connect_internal(IntPtr sock, SocketAddress sa, out int error) { }

	// RVA: 0x2325E54 Offset: 0x2325E54 VA: 0x2325E54
	private static void Connect_internal(IntPtr sock, SocketAddress sa, out int error, bool requireSocketPolicyFile) { }

	// RVA: 0x23228A8 Offset: 0x23228A8 VA: 0x23228A8
	internal static bool CheckEndPoint(SocketAddress sa) { }

	// RVA: 0x2325F50 Offset: 0x2325F50 VA: 0x2325F50
	private static MethodInfo GetUnityCrossDomainHelperMethod(string methodname) { }

	// RVA: 0x231E8B8 Offset: 0x231E8B8 VA: 0x231E8B8
	public void Connect(EndPoint remoteEP) { }

	// RVA: 0x23260AC Offset: 0x23260AC VA: 0x23260AC
	internal void Connect(EndPoint remoteEP, bool requireSocketPolicy) { }

	// RVA: 0x23264A8 Offset: 0x23264A8 VA: 0x23264A8
	public bool ReceiveAsync(SocketAsyncEventArgs e) { }

	// RVA: 0x23265E8 Offset: 0x23265E8 VA: 0x23265E8
	public bool SendAsync(SocketAsyncEventArgs e) { }

	// RVA: 0x2320F80 Offset: 0x2320F80 VA: 0x2320F80
	private static bool Poll_internal(IntPtr socket, SelectMode mode, int timeout, out int error) { }

	// RVA: 0x2326744 Offset: 0x2326744 VA: 0x2326744
	internal bool Poll(int time_us, SelectMode mode, out int socket_error) { }

	// RVA: 0x2326914 Offset: 0x2326914 VA: 0x2326914
	private static int Receive_internal(IntPtr sock, byte[] buffer, int offset, int count, SocketFlags flags, out int error) { }

	// RVA: 0x23210D4 Offset: 0x23210D4 VA: 0x23210D4
	internal int Receive_nochecks(byte[] buf, int offset, int size, SocketFlags flags, out SocketError error) { }

	// RVA: 0x2326918 Offset: 0x2326918 VA: 0x2326918
	private static void GetSocketOption_obj_internal(IntPtr socket, SocketOptionLevel level, SocketOptionName name, out object obj_val, out int error) { }

	// RVA: 0x232691C Offset: 0x232691C VA: 0x232691C
	private static int Send_internal(IntPtr sock, byte[] buf, int offset, int count, SocketFlags flags, out int error) { }

	// RVA: 0x23231AC Offset: 0x23231AC VA: 0x23231AC
	internal int Send_nochecks(byte[] buf, int offset, int size, SocketFlags flags, out SocketError error) { }

	// RVA: 0x2319E68 Offset: 0x2319E68 VA: 0x2319E68
	public object GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName) { }

	// RVA: 0x2325BCC Offset: 0x2325BCC VA: 0x2325BCC
	private static void Shutdown_internal(IntPtr socket, SocketShutdown how, out int error) { }

	// RVA: 0x2326920 Offset: 0x2326920 VA: 0x2326920
	public void Shutdown(SocketShutdown how) { }

	// RVA: 0x2324CC4 Offset: 0x2324CC4 VA: 0x2324CC4
	private static void SetSocketOption_internal(IntPtr socket, SocketOptionLevel level, SocketOptionName name, object obj_val, byte[] byte_val, int int_val, out int error) { }

	// RVA: 0x231A448 Offset: 0x231A448 VA: 0x231A448
	public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, int optionValue) { }

	// RVA: 0x232519C Offset: 0x232519C VA: 0x232519C
	private void ThrowIfUpd() { }
}

// Namespace: 
private enum Socket.SocketOperation // TypeDefIndex: 1482
{
	// Fields
	public int value__; // 0x0
	public const Socket.SocketOperation Accept = 0;
	public const Socket.SocketOperation Connect = 1;
	public const Socket.SocketOperation Receive = 2;
	public const Socket.SocketOperation ReceiveFrom = 3;
	public const Socket.SocketOperation Send = 4;
	public const Socket.SocketOperation SendTo = 5;
	public const Socket.SocketOperation UsedInManaged1 = 6;
	public const Socket.SocketOperation UsedInManaged2 = 7;
	public const Socket.SocketOperation UsedInProcess = 8;
	public const Socket.SocketOperation UsedInConsole2 = 9;
	public const Socket.SocketOperation Disconnect = 10;
	public const Socket.SocketOperation AcceptReceive = 11;
	public const Socket.SocketOperation ReceiveGeneric = 12;
	public const Socket.SocketOperation SendGeneric = 13;
}

// Namespace: 
private struct Socket.WSABUF // TypeDefIndex: 1483
{
	// Fields
	public int len; // 0x0
	public IntPtr buf; // 0x8
}

// Namespace: 
private sealed class Socket.SocketAsyncResult : IAsyncResult // TypeDefIndex: 1484
{
	// Fields
	public Socket Sock; // 0x10
	public IntPtr handle; // 0x18
	private object state; // 0x20
	private AsyncCallback callback; // 0x28
	private WaitHandle waithandle; // 0x30
	private Exception delayedException; // 0x38
	public EndPoint EndPoint; // 0x40
	public byte[] Buffer; // 0x48
	public int Offset; // 0x50
	public int Size; // 0x54
	public SocketFlags SockFlags; // 0x58
	public Socket AcceptSocket; // 0x60
	public IPAddress[] Addresses; // 0x68
	public int Port; // 0x70
	public IList<ArraySegment<byte>> Buffers; // 0x78
	public bool ReuseSocket; // 0x80
	private Socket acc_socket; // 0x88
	private int total; // 0x90
	private bool completed_sync; // 0x94
	private bool completed; // 0x95
	public bool blocking; // 0x96
	internal int error; // 0x98
	private Socket.SocketOperation operation; // 0x9C
	public object ares; // 0xA0
	public int EndCalled; // 0xA8

	// Properties
	public object AsyncState { get; }
	public WaitHandle AsyncWaitHandle { get; set; }
	public bool CompletedSynchronously { get; }
	public bool IsCompleted { get; set; }
	public Socket Socket { get; }
	public int Total { get; set; }
	public SocketError ErrorCode { get; }

	// Methods

	// RVA: 0x231C024 Offset: 0x231C024 VA: 0x231C024
	public void .ctor(Socket sock, object state, AsyncCallback callback, Socket.SocketOperation operation) { }

	// RVA: 0x231F474 Offset: 0x231F474 VA: 0x231F474
	public void CheckIfThrowDelayedException() { }

	// RVA: 0x232737C Offset: 0x232737C VA: 0x232737C
	private void CompleteAllOnDispose(Queue queue) { }

	// RVA: 0x232752C Offset: 0x232752C VA: 0x232752C
	private void CompleteDisposed(object unused) { }

	// RVA: 0x2327530 Offset: 0x2327530 VA: 0x2327530
	public void Complete() { }

	// RVA: 0x23279E8 Offset: 0x23279E8 VA: 0x23279E8
	private Socket.SocketAsyncCall GetDelegate(Socket.Worker worker, Socket.SocketOperation op) { }

	// RVA: 0x231CA3C Offset: 0x231CA3C VA: 0x231CA3C
	public void Complete(bool synch) { }

	// RVA: 0x2327AA4 Offset: 0x2327AA4 VA: 0x2327AA4
	public void Complete(int total) { }

	// RVA: 0x231C9AC Offset: 0x231C9AC VA: 0x231C9AC
	public void Complete(Exception e, bool synch) { }

	// RVA: 0x2327AAC Offset: 0x2327AAC VA: 0x2327AAC
	public void Complete(Exception e) { }

	// RVA: 0x2327AB4 Offset: 0x2327AB4 VA: 0x2327AB4
	public void Complete(Socket s) { }

	// RVA: 0x2327ABC Offset: 0x2327ABC VA: 0x2327ABC
	public void Complete(Socket s, int total) { }

	// RVA: 0x2327AC8 Offset: 0x2327AC8 VA: 0x2327AC8 Slot: 4
	public object get_AsyncState() { }

	// RVA: 0x2327AD0 Offset: 0x2327AD0 VA: 0x2327AD0 Slot: 5
	public WaitHandle get_AsyncWaitHandle() { }

	// RVA: 0x2327BAC Offset: 0x2327BAC VA: 0x2327BAC
	public void set_AsyncWaitHandle(WaitHandle value) { }

	// RVA: 0x2327BB4 Offset: 0x2327BB4 VA: 0x2327BB4 Slot: 6
	public bool get_CompletedSynchronously() { }

	// RVA: 0x2327BBC Offset: 0x2327BBC VA: 0x2327BBC Slot: 7
	public bool get_IsCompleted() { }

	// RVA: 0x2327850 Offset: 0x2327850 VA: 0x2327850
	public void set_IsCompleted(bool value) { }

	// RVA: 0x231F544 Offset: 0x231F544 VA: 0x231F544
	public Socket get_Socket() { }

	// RVA: 0x231F53C Offset: 0x231F53C VA: 0x231F53C
	public int get_Total() { }

	// RVA: 0x2327BC4 Offset: 0x2327BC4 VA: 0x2327BC4
	public void set_Total(int value) { }

	// RVA: 0x231FCF0 Offset: 0x231FCF0 VA: 0x231FCF0
	public SocketError get_ErrorCode() { }
}

// Namespace: 
private sealed class Socket.Worker // TypeDefIndex: 1485
{
	// Fields
	private Socket.SocketAsyncResult result; // 0x10
	private bool requireSocketSecurity; // 0x18
	private int send_so_far; // 0x1C

	// Methods

	// RVA: 0x221594C Offset: 0x221594C VA: 0x221594C
	public void .ctor(Socket.SocketAsyncResult ares) { }

	// RVA: 0x2215980 Offset: 0x2215980 VA: 0x2215980
	public void .ctor(Socket.SocketAsyncResult ares, bool requireSocketSecurity) { }

	// RVA: 0x22159C0 Offset: 0x22159C0 VA: 0x22159C0
	public void Accept() { }

	// RVA: 0x2215AF0 Offset: 0x2215AF0 VA: 0x2215AF0
	public void AcceptReceive() { }

	// RVA: 0x2215DF0 Offset: 0x2215DF0 VA: 0x2215DF0
	public void Connect() { }

	// RVA: 0x22163E4 Offset: 0x22163E4 VA: 0x22163E4
	public void Disconnect() { }

	// RVA: 0x2216540 Offset: 0x2216540 VA: 0x2216540
	public void Receive() { }

	// RVA: 0x2216570 Offset: 0x2216570 VA: 0x2216570
	public void ReceiveFrom() { }

	// RVA: 0x221676C Offset: 0x221676C VA: 0x221676C
	public void ReceiveGeneric() { }

	// RVA: 0x22168F4 Offset: 0x22168F4 VA: 0x22168F4
	private void UpdateSendValues(int last_sent) { }

	// RVA: 0x22169A0 Offset: 0x22169A0 VA: 0x22169A0
	public void Send() { }

	// RVA: 0x2216B14 Offset: 0x2216B14 VA: 0x2216B14
	public void SendTo() { }

	// RVA: 0x2216DE0 Offset: 0x2216DE0 VA: 0x2216DE0
	public void SendGeneric() { }
}

// Namespace: 
private sealed class Socket.SendFileAsyncResult : IAsyncResult // TypeDefIndex: 1486
{
	// Fields
	private IAsyncResult ares; // 0x10
	private Socket.SendFileHandler d; // 0x18

	// Properties
	public object AsyncState { get; }
	public WaitHandle AsyncWaitHandle { get; }
	public bool CompletedSynchronously { get; }
	public bool IsCompleted { get; }
	public Socket.SendFileHandler Delegate { get; }
	public IAsyncResult Original { get; }

	// Methods

	// RVA: 0x231E280 Offset: 0x231E280 VA: 0x231E280
	public void .ctor(Socket.SendFileHandler d, IAsyncResult ares) { }

	// RVA: 0x2326A84 Offset: 0x2326A84 VA: 0x2326A84 Slot: 4
	public object get_AsyncState() { }

	// RVA: 0x2326B38 Offset: 0x2326B38 VA: 0x2326B38 Slot: 5
	public WaitHandle get_AsyncWaitHandle() { }

	// RVA: 0x2326BF0 Offset: 0x2326BF0 VA: 0x2326BF0 Slot: 6
	public bool get_CompletedSynchronously() { }

	// RVA: 0x2326CA8 Offset: 0x2326CA8 VA: 0x2326CA8 Slot: 7
	public bool get_IsCompleted() { }

	// RVA: 0x23205E4 Offset: 0x23205E4 VA: 0x23205E4
	public Socket.SendFileHandler get_Delegate() { }

	// RVA: 0x23205EC Offset: 0x23205EC VA: 0x23205EC
	public IAsyncResult get_Original() { }
}

// Namespace: 
private sealed class Socket.SocketAsyncCall : MulticastDelegate // TypeDefIndex: 1487
{
	// Methods

	// RVA: 0x231C0AC Offset: 0x231C0AC VA: 0x231C0AC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2327170 Offset: 0x2327170 VA: 0x2327170 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x231C0BC Offset: 0x231C0BC VA: 0x231C0BC Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x2327370 Offset: 0x2327370 VA: 0x2327370 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private sealed class Socket.SendFileHandler : MulticastDelegate // TypeDefIndex: 1488
{
	// Methods

	// RVA: 0x231E1C0 Offset: 0x231E1C0 VA: 0x231E1C0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2326D60 Offset: 0x2326D60 VA: 0x2326D60 Slot: 11
	public virtual void Invoke(string fileName, byte[] preBuffer, byte[] postBuffer, TransmitFileOptions flags) { }

	// RVA: 0x231E1D0 Offset: 0x231E1D0 VA: 0x231E1D0 Slot: 12
	public virtual IAsyncResult BeginInvoke(string fileName, byte[] preBuffer, byte[] postBuffer, TransmitFileOptions flags, AsyncCallback callback, object object) { }

	// RVA: 0x23205F4 Offset: 0x23205F4 VA: 0x23205F4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net.Sockets
public class SocketAsyncEventArgs : EventArgs, IDisposable // TypeDefIndex: 1489
{
	// Fields
	private IList<ArraySegment<byte>> _bufferList; // 0x10
	private Socket curSocket; // 0x18
	private EventHandler<SocketAsyncEventArgs> Completed; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xBD0E7C Offset: 0xBD0E7C VA: 0xBD0E7C
	private Socket <AcceptSocket>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xBD0E8C Offset: 0xBD0E8C VA: 0xBD0E8C
	private byte[] <Buffer>k__BackingField; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xBD0E9C Offset: 0xBD0E9C VA: 0xBD0E9C
	private int <BytesTransferred>k__BackingField; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xBD0EAC Offset: 0xBD0EAC VA: 0xBD0EAC
	private int <Count>k__BackingField; // 0x3C
	[CompilerGeneratedAttribute] // RVA: 0xBD0EBC Offset: 0xBD0EBC VA: 0xBD0EBC
	private bool <DisconnectReuseSocket>k__BackingField; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xBD0ECC Offset: 0xBD0ECC VA: 0xBD0ECC
	private SocketAsyncOperation <LastOperation>k__BackingField; // 0x44
	[CompilerGeneratedAttribute] // RVA: 0xBD0EDC Offset: 0xBD0EDC VA: 0xBD0EDC
	private int <Offset>k__BackingField; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xBD0EEC Offset: 0xBD0EEC VA: 0xBD0EEC
	private EndPoint <RemoteEndPoint>k__BackingField; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xBD0EFC Offset: 0xBD0EFC VA: 0xBD0EFC
	private int <SendPacketsSendSize>k__BackingField; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xBD0F0C Offset: 0xBD0F0C VA: 0xBD0F0C
	private SocketError <SocketError>k__BackingField; // 0x5C
	[CompilerGeneratedAttribute] // RVA: 0xBD0F1C Offset: 0xBD0F1C VA: 0xBD0F1C
	private SocketFlags <SocketFlags>k__BackingField; // 0x60
	[CompilerGeneratedAttribute] // RVA: 0xBD0F2C Offset: 0xBD0F2C VA: 0xBD0F2C
	private object <UserToken>k__BackingField; // 0x68
	[CompilerGeneratedAttribute] // RVA: 0xBD0F3C Offset: 0xBD0F3C VA: 0xBD0F3C
	private bool <PolicyRestricted>k__BackingField; // 0x70

	// Properties
	public Socket AcceptSocket { get; set; }
	public byte[] Buffer { get; set; }
	[MonoTODOAttribute] // RVA: 0xBD35DC Offset: 0xBD35DC VA: 0xBD35DC
	public IList<ArraySegment<byte>> BufferList { get; set; }
	public int BytesTransferred { get; set; }
	public int Count { get; set; }
	public bool DisconnectReuseSocket { get; set; }
	public SocketAsyncOperation LastOperation { get; set; }
	public int Offset { get; set; }
	public EndPoint RemoteEndPoint { get; set; }
	[MonoTODOAttribute] // RVA: 0xBD3614 Offset: 0xBD3614 VA: 0xBD3614
	public int SendPacketsSendSize { get; set; }
	public SocketError SocketError { get; set; }
	public SocketFlags SocketFlags { get; set; }
	public object UserToken { get; set; }
	public Socket ConnectSocket { get; }
	internal bool PolicyRestricted { get; set; }

	// Methods

	// RVA: 0x2216F68 Offset: 0x2216F68 VA: 0x2216F68
	internal void .ctor(bool policy) { }

	// RVA: 0x2216F94 Offset: 0x2216F94 VA: 0x2216F94
	public void .ctor() { }

	// RVA: 0x221713C Offset: 0x221713C VA: 0x221713C
	public void add_Completed(EventHandler<SocketAsyncEventArgs> value) { }

	// RVA: 0x2217200 Offset: 0x2217200 VA: 0x2217200
	public void remove_Completed(EventHandler<SocketAsyncEventArgs> value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1B30 Offset: 0xBD1B30 VA: 0xBD1B30
	// RVA: 0x22172C4 Offset: 0x22172C4 VA: 0x22172C4
	public Socket get_AcceptSocket() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1B40 Offset: 0xBD1B40 VA: 0xBD1B40
	// RVA: 0x2217038 Offset: 0x2217038 VA: 0x2217038
	public void set_AcceptSocket(Socket value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1B50 Offset: 0xBD1B50 VA: 0xBD1B50
	// RVA: 0x22172CC Offset: 0x22172CC VA: 0x22172CC
	public byte[] get_Buffer() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1B60 Offset: 0xBD1B60 VA: 0xBD1B60
	// RVA: 0x2217040 Offset: 0x2217040 VA: 0x2217040
	private void set_Buffer(byte[] value) { }

	// RVA: 0x22172D4 Offset: 0x22172D4 VA: 0x22172D4
	public IList<ArraySegment<byte>> get_BufferList() { }

	// RVA: 0x2217048 Offset: 0x2217048 VA: 0x2217048
	public void set_BufferList(IList<ArraySegment<byte>> value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1B70 Offset: 0xBD1B70 VA: 0xBD1B70
	// RVA: 0x22172DC Offset: 0x22172DC VA: 0x22172DC
	public int get_BytesTransferred() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1B80 Offset: 0xBD1B80 VA: 0xBD1B80
	// RVA: 0x22170E8 Offset: 0x22170E8 VA: 0x22170E8
	private void set_BytesTransferred(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1B90 Offset: 0xBD1B90 VA: 0xBD1B90
	// RVA: 0x22172E4 Offset: 0x22172E4 VA: 0x22172E4
	public int get_Count() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1BA0 Offset: 0xBD1BA0 VA: 0xBD1BA0
	// RVA: 0x22170F0 Offset: 0x22170F0 VA: 0x22170F0
	private void set_Count(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1BB0 Offset: 0xBD1BB0 VA: 0xBD1BB0
	// RVA: 0x22172EC Offset: 0x22172EC VA: 0x22172EC
	public bool get_DisconnectReuseSocket() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1BC0 Offset: 0xBD1BC0 VA: 0xBD1BC0
	// RVA: 0x22170F8 Offset: 0x22170F8 VA: 0x22170F8
	public void set_DisconnectReuseSocket(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1BD0 Offset: 0xBD1BD0 VA: 0xBD1BD0
	// RVA: 0x22172F4 Offset: 0x22172F4 VA: 0x22172F4
	public SocketAsyncOperation get_LastOperation() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1BE0 Offset: 0xBD1BE0 VA: 0xBD1BE0
	// RVA: 0x2217104 Offset: 0x2217104 VA: 0x2217104
	private void set_LastOperation(SocketAsyncOperation value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1BF0 Offset: 0xBD1BF0 VA: 0xBD1BF0
	// RVA: 0x22172FC Offset: 0x22172FC VA: 0x22172FC
	public int get_Offset() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1C00 Offset: 0xBD1C00 VA: 0xBD1C00
	// RVA: 0x221710C Offset: 0x221710C VA: 0x221710C
	private void set_Offset(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1C10 Offset: 0xBD1C10 VA: 0xBD1C10
	// RVA: 0x2217304 Offset: 0x2217304 VA: 0x2217304
	public EndPoint get_RemoteEndPoint() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1C20 Offset: 0xBD1C20 VA: 0xBD1C20
	// RVA: 0x2217114 Offset: 0x2217114 VA: 0x2217114
	public void set_RemoteEndPoint(EndPoint value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1C30 Offset: 0xBD1C30 VA: 0xBD1C30
	// RVA: 0x221730C Offset: 0x221730C VA: 0x221730C
	public int get_SendPacketsSendSize() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1C40 Offset: 0xBD1C40 VA: 0xBD1C40
	// RVA: 0x221711C Offset: 0x221711C VA: 0x221711C
	public void set_SendPacketsSendSize(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1C50 Offset: 0xBD1C50 VA: 0xBD1C50
	// RVA: 0x2217314 Offset: 0x2217314 VA: 0x2217314
	public SocketError get_SocketError() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1C60 Offset: 0xBD1C60 VA: 0xBD1C60
	// RVA: 0x2217124 Offset: 0x2217124 VA: 0x2217124
	public void set_SocketError(SocketError value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1C70 Offset: 0xBD1C70 VA: 0xBD1C70
	// RVA: 0x221731C Offset: 0x221731C VA: 0x221731C
	public SocketFlags get_SocketFlags() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1C80 Offset: 0xBD1C80 VA: 0xBD1C80
	// RVA: 0x221712C Offset: 0x221712C VA: 0x221712C
	public void set_SocketFlags(SocketFlags value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1C90 Offset: 0xBD1C90 VA: 0xBD1C90
	// RVA: 0x2217324 Offset: 0x2217324 VA: 0x2217324
	public object get_UserToken() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1CA0 Offset: 0xBD1CA0 VA: 0xBD1CA0
	// RVA: 0x2217134 Offset: 0x2217134 VA: 0x2217134
	public void set_UserToken(object value) { }

	// RVA: 0x221732C Offset: 0x221732C VA: 0x221732C
	public Socket get_ConnectSocket() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1CB0 Offset: 0xBD1CB0 VA: 0xBD1CB0
	// RVA: 0x221734C Offset: 0x221734C VA: 0x221734C
	internal bool get_PolicyRestricted() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1CC0 Offset: 0xBD1CC0 VA: 0xBD1CC0
	// RVA: 0x221702C Offset: 0x221702C VA: 0x221702C
	private void set_PolicyRestricted(bool value) { }

	// RVA: 0x2217354 Offset: 0x2217354 VA: 0x2217354 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x22173D4 Offset: 0x22173D4 VA: 0x22173D4
	private void Dispose(bool disposing) { }

	// RVA: 0x221741C Offset: 0x221741C VA: 0x221741C Slot: 4
	public void Dispose() { }

	// RVA: 0x2217424 Offset: 0x2217424 VA: 0x2217424 Slot: 5
	protected virtual void OnCompleted(SocketAsyncEventArgs e) { }

	// RVA: 0x2217490 Offset: 0x2217490 VA: 0x2217490
	public void SetBuffer(int offset, int count) { }

	// RVA: 0x22175D0 Offset: 0x22175D0 VA: 0x22175D0
	public void SetBuffer(byte[] buffer, int offset, int count) { }

	// RVA: 0x22174AC Offset: 0x22174AC VA: 0x22174AC
	private void SetBufferInternal(byte[] buffer, int offset, int count) { }

	// RVA: 0x22175D4 Offset: 0x22175D4 VA: 0x22175D4
	private void ReceiveCallback() { }

	// RVA: 0x22176F0 Offset: 0x22176F0 VA: 0x22176F0
	private void ConnectCallback() { }

	// RVA: 0x2217798 Offset: 0x2217798 VA: 0x2217798
	private SocketError TryConnect(EndPoint endpoint) { }

	// RVA: 0x22178FC Offset: 0x22178FC VA: 0x22178FC
	private void SendCallback() { }

	// RVA: 0x2217D60 Offset: 0x2217D60 VA: 0x2217D60
	internal void DoOperation(SocketAsyncOperation operation, Socket socket) { }
}

// Namespace: System.Net.Sockets
public enum SocketAsyncOperation // TypeDefIndex: 1490
{
	// Fields
	public int value__; // 0x0
	public const SocketAsyncOperation None = 0;
	public const SocketAsyncOperation Accept = 1;
	public const SocketAsyncOperation Connect = 2;
	public const SocketAsyncOperation Disconnect = 3;
	public const SocketAsyncOperation Receive = 4;
	public const SocketAsyncOperation ReceiveFrom = 5;
	public const SocketAsyncOperation ReceiveMessageFrom = 6;
	public const SocketAsyncOperation Send = 7;
	public const SocketAsyncOperation SendPackets = 8;
	public const SocketAsyncOperation SendTo = 9;
}

// Namespace: System.Net.Sockets
public enum SocketError // TypeDefIndex: 1491
{
	// Fields
	public int value__; // 0x0
	public const SocketError AccessDenied = 10013;
	public const SocketError AddressAlreadyInUse = 10048;
	public const SocketError AddressFamilyNotSupported = 10047;
	public const SocketError AddressNotAvailable = 10049;
	public const SocketError AlreadyInProgress = 10037;
	public const SocketError ConnectionAborted = 10053;
	public const SocketError ConnectionRefused = 10061;
	public const SocketError ConnectionReset = 10054;
	public const SocketError DestinationAddressRequired = 10039;
	public const SocketError Disconnecting = 10101;
	public const SocketError Fault = 10014;
	public const SocketError HostDown = 10064;
	public const SocketError HostNotFound = 11001;
	public const SocketError HostUnreachable = 10065;
	public const SocketError InProgress = 10036;
	public const SocketError Interrupted = 10004;
	public const SocketError InvalidArgument = 10022;
	public const SocketError IOPending = 997;
	public const SocketError IsConnected = 10056;
	public const SocketError MessageSize = 10040;
	public const SocketError NetworkDown = 10050;
	public const SocketError NetworkReset = 10052;
	public const SocketError NetworkUnreachable = 10051;
	public const SocketError NoBufferSpaceAvailable = 10055;
	public const SocketError NoData = 11004;
	public const SocketError NoRecovery = 11003;
	public const SocketError NotConnected = 10057;
	public const SocketError NotInitialized = 10093;
	public const SocketError NotSocket = 10038;
	public const SocketError OperationAborted = 995;
	public const SocketError OperationNotSupported = 10045;
	public const SocketError ProcessLimit = 10067;
	public const SocketError ProtocolFamilyNotSupported = 10046;
	public const SocketError ProtocolNotSupported = 10043;
	public const SocketError ProtocolOption = 10042;
	public const SocketError ProtocolType = 10041;
	public const SocketError Shutdown = 10058;
	public const SocketError SocketError = -1;
	public const SocketError SocketNotSupported = 10044;
	public const SocketError Success = 0;
	public const SocketError SystemNotReady = 10091;
	public const SocketError TimedOut = 10060;
	public const SocketError TooManyOpenSockets = 10024;
	public const SocketError TryAgain = 11002;
	public const SocketError TypeNotFound = 10109;
	public const SocketError VersionNotSupported = 10092;
	public const SocketError WouldBlock = 10035;
}

// Namespace: System.Net.Sockets
[Serializable]
public class SocketException : Win32Exception // TypeDefIndex: 1492
{
	// Properties
	public override int ErrorCode { get; }
	public SocketError SocketErrorCode { get; }
	public override string Message { get; }

	// Methods

	// RVA: 0x2217EC8 Offset: 0x2217EC8 VA: 0x2217EC8
	public void .ctor() { }

	// RVA: 0x22163DC Offset: 0x22163DC VA: 0x22163DC
	public void .ctor(int error) { }

	// RVA: 0x2217EF8 Offset: 0x2217EF8 VA: 0x2217EF8
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x2217F00 Offset: 0x2217F00 VA: 0x2217F00
	internal void .ctor(int error, string message) { }

	// RVA: 0x2217EF4 Offset: 0x2217EF4 VA: 0x2217EF4
	private static int WSAGetLastError_internal() { }

	// RVA: 0x2217F08 Offset: 0x2217F08 VA: 0x2217F08 Slot: 12
	public override int get_ErrorCode() { }

	// RVA: 0x22178F4 Offset: 0x22178F4 VA: 0x22178F4
	public SocketError get_SocketErrorCode() { }

