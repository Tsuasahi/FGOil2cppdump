	// RVA: 0x1147740 Offset: 0x1147740 VA: 0x1147740
	public void Connect(IPAddress address, int port) { }

	// RVA: 0x11477C8 Offset: 0x11477C8 VA: 0x11477C8
	public void Connect(IPAddress[] addresses, int port) { }

	// RVA: 0x1147C80 Offset: 0x1147C80 VA: 0x1147C80
	public void Connect(string host, int port) { }

	// RVA: 0x1147D08 Offset: 0x1147D08 VA: 0x1147D08
	public bool DisconnectAsync(SocketAsyncEventArgs e) { }

	// RVA: 0x1147DF4 Offset: 0x1147DF4 VA: 0x1147DF4
	private static void Disconnect_internal(IntPtr sock, bool reuse, out int error) { }

	// RVA: 0x1147DFC Offset: 0x1147DFC VA: 0x1147DFC
	public void Disconnect(bool reuseSocket) { }

	[MonoTODOAttribute] // RVA: 0xC3DB1C Offset: 0xC3DB1C VA: 0xC3DB1C
	// RVA: 0x1147F64 Offset: 0x1147F64 VA: 0x1147F64
	public SocketInformation DuplicateAndClose(int targetProcessId) { }

	// RVA: 0x1147FCC Offset: 0x1147FCC VA: 0x1147FCC
	public Socket EndAccept(IAsyncResult result) { }

	// RVA: 0x11482AC Offset: 0x11482AC VA: 0x11482AC
	public Socket EndAccept(out byte[] buffer, IAsyncResult asyncResult) { }

	// RVA: 0x1148000 Offset: 0x1148000 VA: 0x1148000
	public Socket EndAccept(out byte[] buffer, out int bytesTransferred, IAsyncResult asyncResult) { }

	// RVA: 0x1148454 Offset: 0x1148454 VA: 0x1148454
	public void EndConnect(IAsyncResult result) { }

	// RVA: 0x11486D8 Offset: 0x11486D8 VA: 0x11486D8
	public void EndDisconnect(IAsyncResult asyncResult) { }

	// RVA: 0x1140E98 Offset: 0x1140E98 VA: 0x1140E98
	public int EndReceive(IAsyncResult result) { }

	// RVA: 0x114895C Offset: 0x114895C VA: 0x114895C
	public int EndReceive(IAsyncResult asyncResult, out SocketError errorCode) { }

	// RVA: 0x1148C88 Offset: 0x1148C88 VA: 0x1148C88
	public int EndReceiveFrom(IAsyncResult result, ref EndPoint end_point) { }

	[MonoTODOAttribute] // RVA: 0xC3DB54 Offset: 0xC3DB54 VA: 0xC3DB54
	// RVA: 0x1148F20 Offset: 0x1148F20 VA: 0x1148F20
	public int EndReceiveMessageFrom(IAsyncResult asyncResult, ref SocketFlags socketFlags, ref EndPoint endPoint, out IPPacketInformation ipPacketInformation) { }

	// RVA: 0x1141024 Offset: 0x1141024 VA: 0x1141024
	public int EndSend(IAsyncResult result) { }

	// RVA: 0x11490E4 Offset: 0x11490E4 VA: 0x11490E4
	public int EndSend(IAsyncResult asyncResult, out SocketError errorCode) { }

	// RVA: 0x1149380 Offset: 0x1149380 VA: 0x1149380
	public void EndSendFile(IAsyncResult asyncResult) { }

	// RVA: 0x11482D8 Offset: 0x11482D8 VA: 0x11482D8
	private Exception InvalidAsyncOp(string method) { }

	// RVA: 0x1149508 Offset: 0x1149508 VA: 0x1149508
	public int EndSendTo(IAsyncResult result) { }

	// RVA: 0x1149794 Offset: 0x1149794 VA: 0x1149794
	private static void GetSocketOption_arr_internal(IntPtr socket, SocketOptionLevel level, SocketOptionName name, ref byte[] byte_val, out int error) { }

	// RVA: 0x1149798 Offset: 0x1149798 VA: 0x1149798
	public void GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, byte[] optionValue) { }

	// RVA: 0x1149928 Offset: 0x1149928 VA: 0x1149928
	public byte[] GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, int length) { }

	// RVA: 0x1149A94 Offset: 0x1149A94 VA: 0x1149A94
	private static int WSAIoctl(IntPtr sock, int ioctl_code, byte[] input, byte[] output, out int error) { }

	// RVA: 0x1149A98 Offset: 0x1149A98 VA: 0x1149A98
	public int IOControl(int ioctl_code, byte[] in_value, byte[] out_value) { }

	[MonoTODOAttribute] // RVA: 0xC3DB64 Offset: 0xC3DB64 VA: 0xC3DB64
	// RVA: 0x1149C14 Offset: 0x1149C14 VA: 0x1149C14
	public int IOControl(IOControlCode ioControlCode, byte[] optionInValue, byte[] optionOutValue) { }

	// RVA: 0x1149C7C Offset: 0x1149C7C VA: 0x1149C7C
	private static void Listen_internal(IntPtr sock, int backlog, out int error) { }

	// RVA: 0x1149C80 Offset: 0x1149C80 VA: 0x1149C80
	public void Listen(int backlog) { }

	// RVA: 0x1147AB0 Offset: 0x1147AB0 VA: 0x1147AB0
	public bool Poll(int time_us, SelectMode mode) { }

	// RVA: 0x1149E8C Offset: 0x1149E8C VA: 0x1149E8C
	public int Receive(byte[] buffer) { }

	// RVA: 0x114A18C Offset: 0x114A18C VA: 0x114A18C
	public int Receive(byte[] buffer, SocketFlags flags) { }

	// RVA: 0x114A32C Offset: 0x114A32C VA: 0x114A32C
	public int Receive(byte[] buffer, int size, SocketFlags flags) { }

	// RVA: 0x1141230 Offset: 0x1141230 VA: 0x1141230
	public int Receive(byte[] buffer, int offset, int size, SocketFlags flags) { }

	// RVA: 0x114A50C Offset: 0x114A50C VA: 0x114A50C
	public int Receive(byte[] buffer, int offset, int size, SocketFlags flags, out SocketError error) { }

	// RVA: 0x114A6B0 Offset: 0x114A6B0 VA: 0x114A6B0
	private static int Receive_internal(IntPtr sock, Socket.WSABUF[] bufarray, SocketFlags flags, out int error) { }

	// RVA: 0x114A6B4 Offset: 0x114A6B4 VA: 0x114A6B4
	public int Receive(IList<ArraySegment<byte>> buffers) { }

	[CLSCompliantAttribute] // RVA: 0xC3DB74 Offset: 0xC3DB74 VA: 0xC3DB74
	// RVA: 0x114AC68 Offset: 0x114AC68 VA: 0x114AC68
	public int Receive(IList<ArraySegment<byte>> buffers, SocketFlags socketFlags) { }

	[CLSCompliantAttribute] // RVA: 0xC3DB88 Offset: 0xC3DB88 VA: 0xC3DB88
	// RVA: 0x114A75C Offset: 0x114A75C VA: 0x114A75C
	public int Receive(IList<ArraySegment<byte>> buffers, SocketFlags socketFlags, out SocketError errorCode) { }

	// RVA: 0x114AD1C Offset: 0x114AD1C VA: 0x114AD1C
	public bool ReceiveFromAsync(SocketAsyncEventArgs e) { }

	// RVA: 0x114AEB0 Offset: 0x114AEB0 VA: 0x114AEB0
	public int ReceiveFrom(byte[] buffer, ref EndPoint remoteEP) { }

	// RVA: 0x114B034 Offset: 0x114B034 VA: 0x114B034
	public int ReceiveFrom(byte[] buffer, SocketFlags flags, ref EndPoint remoteEP) { }

	// RVA: 0x114B19C Offset: 0x114B19C VA: 0x114B19C
	public int ReceiveFrom(byte[] buffer, int size, SocketFlags flags, ref EndPoint remoteEP) { }

	// RVA: 0x114B344 Offset: 0x114B344 VA: 0x114B344
	private static int RecvFrom_internal(IntPtr sock, byte[] buffer, int offset, int count, SocketFlags flags, ref SocketAddress sockaddr, out int error) { }

	// RVA: 0x114B348 Offset: 0x114B348 VA: 0x114B348
	public int ReceiveFrom(byte[] buffer, int offset, int size, SocketFlags flags, ref EndPoint remoteEP) { }

	// RVA: 0x114B00C Offset: 0x114B00C VA: 0x114B00C
	internal int ReceiveFrom_nochecks(byte[] buf, int offset, int size, SocketFlags flags, ref EndPoint remote_end) { }

	// RVA: 0x114B528 Offset: 0x114B528 VA: 0x114B528
	internal int ReceiveFrom_nochecks_exc(byte[] buf, int offset, int size, SocketFlags flags, ref EndPoint remote_end, bool throwOnError, out int error) { }

	[MonoTODOAttribute] // RVA: 0xC3DB9C Offset: 0xC3DB9C VA: 0xC3DB9C
	// RVA: 0x114BBFC Offset: 0x114BBFC VA: 0x114BBFC
	public bool ReceiveMessageFromAsync(SocketAsyncEventArgs e) { }

	[MonoTODOAttribute] // RVA: 0xC3DBD4 Offset: 0xC3DBD4 VA: 0xC3DBD4
	// RVA: 0x114BCD8 Offset: 0x114BCD8 VA: 0x114BCD8
	public int ReceiveMessageFrom(byte[] buffer, int offset, int size, ref SocketFlags socketFlags, ref EndPoint remoteEP, out IPPacketInformation ipPacketInformation) { }

	[MonoTODOAttribute] // RVA: 0xC3DC0C Offset: 0xC3DC0C VA: 0xC3DC0C
	// RVA: 0x114BE88 Offset: 0x114BE88 VA: 0x114BE88
	public bool SendPacketsAsync(SocketAsyncEventArgs e) { }

	// RVA: 0x114BF64 Offset: 0x114BF64 VA: 0x114BF64
	public int Send(byte[] buf) { }

	// RVA: 0x114C1A0 Offset: 0x114C1A0 VA: 0x114C1A0
	public int Send(byte[] buf, SocketFlags flags) { }

	// RVA: 0x114C2FC Offset: 0x114C2FC VA: 0x114C2FC
	public int Send(byte[] buf, int size, SocketFlags flags) { }

	// RVA: 0x1141720 Offset: 0x1141720 VA: 0x1141720
	public int Send(byte[] buf, int offset, int size, SocketFlags flags) { }

	// RVA: 0x114C498 Offset: 0x114C498 VA: 0x114C498
	public int Send(byte[] buf, int offset, int size, SocketFlags flags, out SocketError error) { }

	// RVA: 0x114C63C Offset: 0x114C63C VA: 0x114C63C
	private static int Send_internal(IntPtr sock, Socket.WSABUF[] bufarray, SocketFlags flags, out int error) { }

	// RVA: 0x114C640 Offset: 0x114C640 VA: 0x114C640
	public int Send(IList<ArraySegment<byte>> buffers) { }

	// RVA: 0x114CC2C Offset: 0x114CC2C VA: 0x114CC2C
	public int Send(IList<ArraySegment<byte>> buffers, SocketFlags socketFlags) { }

	[CLSCompliantAttribute] // RVA: 0xC3DC44 Offset: 0xC3DC44 VA: 0xC3DC44
	// RVA: 0x114C6E8 Offset: 0x114C6E8 VA: 0x114C6E8
	public int Send(IList<ArraySegment<byte>> buffers, SocketFlags socketFlags, out SocketError errorCode) { }

	// RVA: 0x114CCE0 Offset: 0x114CCE0 VA: 0x114CCE0
	private static bool SendFile(IntPtr sock, string filename, byte[] pre_buffer, byte[] post_buffer, TransmitFileOptions flags) { }

	// RVA: 0x114CCE4 Offset: 0x114CCE4 VA: 0x114CCE4
	public void SendFile(string fileName) { }

	// RVA: 0x114CE1C Offset: 0x114CE1C VA: 0x114CE1C
	public void SendFile(string fileName, byte[] preBuffer, byte[] postBuffer, TransmitFileOptions flags) { }

	// RVA: 0x114D00C Offset: 0x114D00C VA: 0x114D00C
	public bool SendToAsync(SocketAsyncEventArgs e) { }

	// RVA: 0x114D158 Offset: 0x114D158 VA: 0x114D158
	public int SendTo(byte[] buffer, EndPoint remote_end) { }

	// RVA: 0x114D3E0 Offset: 0x114D3E0 VA: 0x114D3E0
	public int SendTo(byte[] buffer, SocketFlags flags, EndPoint remote_end) { }

	// RVA: 0x114D52C Offset: 0x114D52C VA: 0x114D52C
	public int SendTo(byte[] buffer, int size, SocketFlags flags, EndPoint remote_end) { }

	// RVA: 0x114D6B8 Offset: 0x114D6B8 VA: 0x114D6B8
	private static int SendTo_internal_real(IntPtr sock, byte[] buffer, int offset, int count, SocketFlags flags, SocketAddress sa, out int error) { }

	// RVA: 0x114D6BC Offset: 0x114D6BC VA: 0x114D6BC
	private static int SendTo_internal(IntPtr sock, byte[] buffer, int offset, int count, SocketFlags flags, SocketAddress sa, out int error) { }

	// RVA: 0x114D850 Offset: 0x114D850 VA: 0x114D850
	public int SendTo(byte[] buffer, int offset, int size, SocketFlags flags, EndPoint remote_end) { }

	// RVA: 0x114D298 Offset: 0x114D298 VA: 0x114D298
	internal int SendTo_nochecks(byte[] buffer, int offset, int size, SocketFlags flags, EndPoint remote_end) { }

	// RVA: 0x114DA14 Offset: 0x114DA14 VA: 0x114DA14
	public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, byte[] optionValue) { }

	// RVA: 0x1143B08 Offset: 0x1143B08 VA: 0x1143B08
	public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, object optionValue) { }

	// RVA: 0x114DBD0 Offset: 0x114DBD0 VA: 0x114DBD0
	public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, bool optionValue) { }

	// RVA: 0x1141FB4 Offset: 0x1141FB4 VA: 0x1141FB4
	internal static void CheckProtocolSupport() { }

	// RVA: 0x114DD58 Offset: 0x114DD58 VA: 0x114DD58
	public static bool get_SupportsIPv4() { }

	// RVA: 0x114DDCC Offset: 0x114DDCC VA: 0x114DDCC
	public static bool get_SupportsIPv6() { }

	// RVA: 0x114DE40 Offset: 0x114DE40 VA: 0x114DE40
	public static bool get_OSSupportsIPv4() { }

	// RVA: 0x114DEB4 Offset: 0x114DEB4 VA: 0x114DEB4
	public static bool get_OSSupportsIPv6() { }

	// RVA: 0x1141F50 Offset: 0x1141F50 VA: 0x1141F50
	private IntPtr Socket_internal(AddressFamily family, SocketType type, ProtocolType proto, out int error) { }

	// RVA: 0x114DF28 Offset: 0x114DF28 VA: 0x114DF28 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x11445F0 Offset: 0x11445F0 VA: 0x11445F0
	public AddressFamily get_AddressFamily() { }

	// RVA: 0x114DFA8 Offset: 0x114DFA8 VA: 0x114DFA8
	private static void Blocking_internal(IntPtr socket, bool block, out int error) { }

	// RVA: 0x113F674 Offset: 0x113F674 VA: 0x113F674
	public bool get_Blocking() { }

	// RVA: 0x11448F4 Offset: 0x11448F4 VA: 0x11448F4
	public void set_Blocking(bool value) { }

	// RVA: 0x113F66C Offset: 0x113F66C VA: 0x113F66C
	public bool get_Connected() { }

	// RVA: 0x114DFB0 Offset: 0x114DFB0 VA: 0x114DFB0
	internal void set_Connected(bool value) { }

	// RVA: 0x11445F8 Offset: 0x11445F8 VA: 0x11445F8
	public ProtocolType get_ProtocolType() { }

	// RVA: 0x114DFBC Offset: 0x114DFBC VA: 0x114DFBC
	public bool get_NoDelay() { }

	// RVA: 0x114E0A8 Offset: 0x114E0A8 VA: 0x114E0A8
	public void set_NoDelay(bool value) { }

	// RVA: 0x114E180 Offset: 0x114E180 VA: 0x114E180
	public int get_ReceiveBufferSize() { }

	// RVA: 0x114E260 Offset: 0x114E260 VA: 0x114E260
	public void set_ReceiveBufferSize(int value) { }

	// RVA: 0x114E380 Offset: 0x114E380 VA: 0x114E380
	public int get_SendBufferSize() { }

	// RVA: 0x114E460 Offset: 0x114E460 VA: 0x114E460
	public void set_SendBufferSize(int value) { }

	// RVA: 0x114E580 Offset: 0x114E580 VA: 0x114E580
	public short get_Ttl() { }

	// RVA: 0x114E6BC Offset: 0x114E6BC VA: 0x114E6BC
	public void set_Ttl(short value) { }

	// RVA: 0x114E7F4 Offset: 0x114E7F4 VA: 0x114E7F4
	private static SocketAddress RemoteEndPoint_internal(IntPtr socket, out int error) { }

	// RVA: 0x114E7F8 Offset: 0x114E7F8 VA: 0x114E7F8
	public EndPoint get_RemoteEndPoint() { }

	// RVA: 0x114E958 Offset: 0x114E958 VA: 0x114E958
	private void Linger(IntPtr handle) { }

	// RVA: 0x114EAD8 Offset: 0x114EAD8 VA: 0x114EAD8 Slot: 5
	protected virtual void Dispose(bool explicitDisposing) { }

	// RVA: 0x114EC70 Offset: 0x114EC70 VA: 0x114EC70 Slot: 4
	public void Dispose() { }

	// RVA: 0x114EC6C Offset: 0x114EC6C VA: 0x114EC6C
	private static void Close_internal(IntPtr socket, out int error) { }

	// RVA: 0x1140C88 Offset: 0x1140C88 VA: 0x1140C88
	public void Close() { }

	// RVA: 0x114ECA4 Offset: 0x114ECA4 VA: 0x114ECA4
	public void Close(int timeout) { }

	// RVA: 0x114ED58 Offset: 0x114ED58 VA: 0x114ED58
	private static void Connect_internal_real(IntPtr sock, SocketAddress sa, out int error) { }

	// RVA: 0x11458C4 Offset: 0x11458C4 VA: 0x11458C4
	private static void Connect_internal(IntPtr sock, SocketAddress sa, out int error) { }

	// RVA: 0x114ED5C Offset: 0x114ED5C VA: 0x114ED5C
	private static void Connect_internal(IntPtr sock, SocketAddress sa, out int error, bool requireSocketPolicyFile) { }

	// RVA: 0x114B7B0 Offset: 0x114B7B0 VA: 0x114B7B0
	internal static bool CheckEndPoint(SocketAddress sa) { }

	// RVA: 0x114EE58 Offset: 0x114EE58 VA: 0x114EE58
	private static MethodInfo GetUnityCrossDomainHelperMethod(string methodname) { }

	// RVA: 0x11477C0 Offset: 0x11477C0 VA: 0x11477C0
	public void Connect(EndPoint remoteEP) { }

	// RVA: 0x114EFB4 Offset: 0x114EFB4 VA: 0x114EFB4
	internal void Connect(EndPoint remoteEP, bool requireSocketPolicy) { }

	// RVA: 0x114F3B0 Offset: 0x114F3B0 VA: 0x114F3B0
	public bool ReceiveAsync(SocketAsyncEventArgs e) { }

	// RVA: 0x114F4F0 Offset: 0x114F4F0 VA: 0x114F4F0
	public bool SendAsync(SocketAsyncEventArgs e) { }

	// RVA: 0x1149E88 Offset: 0x1149E88 VA: 0x1149E88
	private static bool Poll_internal(IntPtr socket, SelectMode mode, int timeout, out int error) { }

	// RVA: 0x114F64C Offset: 0x114F64C VA: 0x114F64C
	internal bool Poll(int time_us, SelectMode mode, out int socket_error) { }

	// RVA: 0x114F81C Offset: 0x114F81C VA: 0x114F81C
	private static int Receive_internal(IntPtr sock, byte[] buffer, int offset, int count, SocketFlags flags, out int error) { }

	// RVA: 0x1149FDC Offset: 0x1149FDC VA: 0x1149FDC
	internal int Receive_nochecks(byte[] buf, int offset, int size, SocketFlags flags, out SocketError error) { }

	// RVA: 0x114F820 Offset: 0x114F820 VA: 0x114F820
	private static void GetSocketOption_obj_internal(IntPtr socket, SocketOptionLevel level, SocketOptionName name, out object obj_val, out int error) { }

	// RVA: 0x114F824 Offset: 0x114F824 VA: 0x114F824
	private static int Send_internal(IntPtr sock, byte[] buf, int offset, int count, SocketFlags flags, out int error) { }

	// RVA: 0x114C0B4 Offset: 0x114C0B4 VA: 0x114C0B4
	internal int Send_nochecks(byte[] buf, int offset, int size, SocketFlags flags, out SocketError error) { }

	// RVA: 0x1142D70 Offset: 0x1142D70 VA: 0x1142D70
	public object GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName) { }

	// RVA: 0x114EAD4 Offset: 0x114EAD4 VA: 0x114EAD4
	private static void Shutdown_internal(IntPtr socket, SocketShutdown how, out int error) { }

	// RVA: 0x114F828 Offset: 0x114F828 VA: 0x114F828
	public void Shutdown(SocketShutdown how) { }

	// RVA: 0x114DBCC Offset: 0x114DBCC VA: 0x114DBCC
	private static void SetSocketOption_internal(IntPtr socket, SocketOptionLevel level, SocketOptionName name, object obj_val, byte[] byte_val, int int_val, out int error) { }

	// RVA: 0x1143350 Offset: 0x1143350 VA: 0x1143350
	public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, int optionValue) { }

	// RVA: 0x114E0A4 Offset: 0x114E0A4 VA: 0x114E0A4
	private void ThrowIfUpd() { }
}

// Namespace: 
private enum Socket.SocketOperation // TypeDefIndex: 1482
{
	// Fields
	public int value__; // 0x0
	public const Socket.SocketOperation Accept = 0;
	public const Socket.SocketOperation Connect = 1;
	public const Socket.SocketOperation Receive = 2;
	public const Socket.SocketOperation ReceiveFrom = 3;
	public const Socket.SocketOperation Send = 4;
	public const Socket.SocketOperation SendTo = 5;
	public const Socket.SocketOperation UsedInManaged1 = 6;
	public const Socket.SocketOperation UsedInManaged2 = 7;
	public const Socket.SocketOperation UsedInProcess = 8;
	public const Socket.SocketOperation UsedInConsole2 = 9;
	public const Socket.SocketOperation Disconnect = 10;
	public const Socket.SocketOperation AcceptReceive = 11;
	public const Socket.SocketOperation ReceiveGeneric = 12;
	public const Socket.SocketOperation SendGeneric = 13;
}

// Namespace: 
private struct Socket.WSABUF // TypeDefIndex: 1483
{
	// Fields
	public int len; // 0x0
	public IntPtr buf; // 0x8
}

// Namespace: 
private sealed class Socket.SocketAsyncResult : IAsyncResult // TypeDefIndex: 1484
{
	// Fields
	public Socket Sock; // 0x10
	public IntPtr handle; // 0x18
	private object state; // 0x20
	private AsyncCallback callback; // 0x28
	private WaitHandle waithandle; // 0x30
	private Exception delayedException; // 0x38
	public EndPoint EndPoint; // 0x40
	public byte[] Buffer; // 0x48
	public int Offset; // 0x50
	public int Size; // 0x54
	public SocketFlags SockFlags; // 0x58
	public Socket AcceptSocket; // 0x60
	public IPAddress[] Addresses; // 0x68
	public int Port; // 0x70
	public IList<ArraySegment<byte>> Buffers; // 0x78
	public bool ReuseSocket; // 0x80
	private Socket acc_socket; // 0x88
	private int total; // 0x90
	private bool completed_sync; // 0x94
	private bool completed; // 0x95
	public bool blocking; // 0x96
	internal int error; // 0x98
	private Socket.SocketOperation operation; // 0x9C
	public object ares; // 0xA0
	public int EndCalled; // 0xA8

	// Properties
	public object AsyncState { get; }
	public WaitHandle AsyncWaitHandle { get; set; }
	public bool CompletedSynchronously { get; }
	public bool IsCompleted { get; set; }
	public Socket Socket { get; }
	public int Total { get; set; }
	public SocketError ErrorCode { get; }

	// Methods

	// RVA: 0x1144F2C Offset: 0x1144F2C VA: 0x1144F2C
	public void .ctor(Socket sock, object state, AsyncCallback callback, Socket.SocketOperation operation) { }

	// RVA: 0x114837C Offset: 0x114837C VA: 0x114837C
	public void CheckIfThrowDelayedException() { }

	// RVA: 0x1150284 Offset: 0x1150284 VA: 0x1150284
	private void CompleteAllOnDispose(Queue queue) { }

	// RVA: 0x1150434 Offset: 0x1150434 VA: 0x1150434
	private void CompleteDisposed(object unused) { }

	// RVA: 0x1150438 Offset: 0x1150438 VA: 0x1150438
	public void Complete() { }

	// RVA: 0x11508F0 Offset: 0x11508F0 VA: 0x11508F0
	private Socket.SocketAsyncCall GetDelegate(Socket.Worker worker, Socket.SocketOperation op) { }

	// RVA: 0x1145944 Offset: 0x1145944 VA: 0x1145944
	public void Complete(bool synch) { }

	// RVA: 0x11509AC Offset: 0x11509AC VA: 0x11509AC
	public void Complete(int total) { }

	// RVA: 0x11458B4 Offset: 0x11458B4 VA: 0x11458B4
	public void Complete(Exception e, bool synch) { }

	// RVA: 0x11509B4 Offset: 0x11509B4 VA: 0x11509B4
	public void Complete(Exception e) { }

	// RVA: 0x11509BC Offset: 0x11509BC VA: 0x11509BC
	public void Complete(Socket s) { }

	// RVA: 0x11509C4 Offset: 0x11509C4 VA: 0x11509C4
	public void Complete(Socket s, int total) { }

	// RVA: 0x11509D0 Offset: 0x11509D0 VA: 0x11509D0 Slot: 4
	public object get_AsyncState() { }

	// RVA: 0x11509D8 Offset: 0x11509D8 VA: 0x11509D8 Slot: 5
	public WaitHandle get_AsyncWaitHandle() { }

	// RVA: 0x1150AB4 Offset: 0x1150AB4 VA: 0x1150AB4
	public void set_AsyncWaitHandle(WaitHandle value) { }

	// RVA: 0x1150ABC Offset: 0x1150ABC VA: 0x1150ABC Slot: 6
	public bool get_CompletedSynchronously() { }

	// RVA: 0x1150AC4 Offset: 0x1150AC4 VA: 0x1150AC4 Slot: 7
	public bool get_IsCompleted() { }

	// RVA: 0x1150758 Offset: 0x1150758 VA: 0x1150758
	public void set_IsCompleted(bool value) { }

	// RVA: 0x114844C Offset: 0x114844C VA: 0x114844C
	public Socket get_Socket() { }

	// RVA: 0x1148444 Offset: 0x1148444 VA: 0x1148444
	public int get_Total() { }

	// RVA: 0x1150ACC Offset: 0x1150ACC VA: 0x1150ACC
	public void set_Total(int value) { }

	// RVA: 0x1148BF8 Offset: 0x1148BF8 VA: 0x1148BF8
	public SocketError get_ErrorCode() { }
}

// Namespace: 
private sealed class Socket.Worker // TypeDefIndex: 1485
{
	// Fields
	private Socket.SocketAsyncResult result; // 0x10
	private bool requireSocketSecurity; // 0x18
	private int send_so_far; // 0x1C

	// Methods

	// RVA: 0x1085FE0 Offset: 0x1085FE0 VA: 0x1085FE0
	public void .ctor(Socket.SocketAsyncResult ares) { }

	// RVA: 0x1086014 Offset: 0x1086014 VA: 0x1086014
	public void .ctor(Socket.SocketAsyncResult ares, bool requireSocketSecurity) { }

	// RVA: 0x1086054 Offset: 0x1086054 VA: 0x1086054
	public void Accept() { }

	// RVA: 0x1086184 Offset: 0x1086184 VA: 0x1086184
	public void AcceptReceive() { }

	// RVA: 0x1086484 Offset: 0x1086484 VA: 0x1086484
	public void Connect() { }

	// RVA: 0x1086A78 Offset: 0x1086A78 VA: 0x1086A78
	public void Disconnect() { }

	// RVA: 0x1086BD4 Offset: 0x1086BD4 VA: 0x1086BD4
	public void Receive() { }

	// RVA: 0x1086C04 Offset: 0x1086C04 VA: 0x1086C04
	public void ReceiveFrom() { }

	// RVA: 0x1086E00 Offset: 0x1086E00 VA: 0x1086E00
	public void ReceiveGeneric() { }

	// RVA: 0x1086F88 Offset: 0x1086F88 VA: 0x1086F88
	private void UpdateSendValues(int last_sent) { }

	// RVA: 0x1087034 Offset: 0x1087034 VA: 0x1087034
	public void Send() { }

	// RVA: 0x10871A8 Offset: 0x10871A8 VA: 0x10871A8
	public void SendTo() { }

	// RVA: 0x1087474 Offset: 0x1087474 VA: 0x1087474
	public void SendGeneric() { }
}

// Namespace: 
private sealed class Socket.SendFileAsyncResult : IAsyncResult // TypeDefIndex: 1486
{
	// Fields
	private IAsyncResult ares; // 0x10
	private Socket.SendFileHandler d; // 0x18

	// Properties
	public object AsyncState { get; }
	public WaitHandle AsyncWaitHandle { get; }
	public bool CompletedSynchronously { get; }
	public bool IsCompleted { get; }
	public Socket.SendFileHandler Delegate { get; }
	public IAsyncResult Original { get; }

	// Methods

	// RVA: 0x1147188 Offset: 0x1147188 VA: 0x1147188
	public void .ctor(Socket.SendFileHandler d, IAsyncResult ares) { }

	// RVA: 0x114F98C Offset: 0x114F98C VA: 0x114F98C Slot: 4
	public object get_AsyncState() { }

	// RVA: 0x114FA40 Offset: 0x114FA40 VA: 0x114FA40 Slot: 5
	public WaitHandle get_AsyncWaitHandle() { }

	// RVA: 0x114FAF8 Offset: 0x114FAF8 VA: 0x114FAF8 Slot: 6
	public bool get_CompletedSynchronously() { }

	// RVA: 0x114FBB0 Offset: 0x114FBB0 VA: 0x114FBB0 Slot: 7
	public bool get_IsCompleted() { }

	// RVA: 0x11494EC Offset: 0x11494EC VA: 0x11494EC
	public Socket.SendFileHandler get_Delegate() { }

	// RVA: 0x11494F4 Offset: 0x11494F4 VA: 0x11494F4
	public IAsyncResult get_Original() { }
}

// Namespace: 
private sealed class Socket.SocketAsyncCall : MulticastDelegate // TypeDefIndex: 1487
{
	// Methods

	// RVA: 0x1144FB4 Offset: 0x1144FB4 VA: 0x1144FB4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1150078 Offset: 0x1150078 VA: 0x1150078 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1144FC4 Offset: 0x1144FC4 VA: 0x1144FC4 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1150278 Offset: 0x1150278 VA: 0x1150278 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private sealed class Socket.SendFileHandler : MulticastDelegate // TypeDefIndex: 1488
{
	// Methods

	// RVA: 0x11470C8 Offset: 0x11470C8 VA: 0x11470C8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x114FC68 Offset: 0x114FC68 VA: 0x114FC68 Slot: 11
	public virtual void Invoke(string fileName, byte[] preBuffer, byte[] postBuffer, TransmitFileOptions flags) { }

	// RVA: 0x11470D8 Offset: 0x11470D8 VA: 0x11470D8 Slot: 12
	public virtual IAsyncResult BeginInvoke(string fileName, byte[] preBuffer, byte[] postBuffer, TransmitFileOptions flags, AsyncCallback callback, object object) { }

	// RVA: 0x11494FC Offset: 0x11494FC VA: 0x11494FC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net.Sockets
public class SocketAsyncEventArgs : EventArgs, IDisposable // TypeDefIndex: 1489
{
	// Fields
	private IList<ArraySegment<byte>> _bufferList; // 0x10
	private Socket curSocket; // 0x18
	private EventHandler<SocketAsyncEventArgs> Completed; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC3CFA4 Offset: 0xC3CFA4 VA: 0xC3CFA4
	private Socket <AcceptSocket>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC3CFB4 Offset: 0xC3CFB4 VA: 0xC3CFB4
	private byte[] <Buffer>k__BackingField; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC3CFC4 Offset: 0xC3CFC4 VA: 0xC3CFC4
	private int <BytesTransferred>k__BackingField; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC3CFD4 Offset: 0xC3CFD4 VA: 0xC3CFD4
	private int <Count>k__BackingField; // 0x3C
	[CompilerGeneratedAttribute] // RVA: 0xC3CFE4 Offset: 0xC3CFE4 VA: 0xC3CFE4
	private bool <DisconnectReuseSocket>k__BackingField; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC3CFF4 Offset: 0xC3CFF4 VA: 0xC3CFF4
	private SocketAsyncOperation <LastOperation>k__BackingField; // 0x44
	[CompilerGeneratedAttribute] // RVA: 0xC3D004 Offset: 0xC3D004 VA: 0xC3D004
	private int <Offset>k__BackingField; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC3D014 Offset: 0xC3D014 VA: 0xC3D014
	private EndPoint <RemoteEndPoint>k__BackingField; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xC3D024 Offset: 0xC3D024 VA: 0xC3D024
	private int <SendPacketsSendSize>k__BackingField; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xC3D034 Offset: 0xC3D034 VA: 0xC3D034
	private SocketError <SocketError>k__BackingField; // 0x5C
	[CompilerGeneratedAttribute] // RVA: 0xC3D044 Offset: 0xC3D044 VA: 0xC3D044
	private SocketFlags <SocketFlags>k__BackingField; // 0x60
	[CompilerGeneratedAttribute] // RVA: 0xC3D054 Offset: 0xC3D054 VA: 0xC3D054
	private object <UserToken>k__BackingField; // 0x68
	[CompilerGeneratedAttribute] // RVA: 0xC3D064 Offset: 0xC3D064 VA: 0xC3D064
	private bool <PolicyRestricted>k__BackingField; // 0x70

	// Properties
	public Socket AcceptSocket { get; set; }
	public byte[] Buffer { get; set; }
	[MonoTODOAttribute] // RVA: 0xC3F704 Offset: 0xC3F704 VA: 0xC3F704
	public IList<ArraySegment<byte>> BufferList { get; set; }
	public int BytesTransferred { get; set; }
	public int Count { get; set; }
	public bool DisconnectReuseSocket { get; set; }
	public SocketAsyncOperation LastOperation { get; set; }
	public int Offset { get; set; }
	public EndPoint RemoteEndPoint { get; set; }
	[MonoTODOAttribute] // RVA: 0xC3F73C Offset: 0xC3F73C VA: 0xC3F73C
	public int SendPacketsSendSize { get; set; }
	public SocketError SocketError { get; set; }
	public SocketFlags SocketFlags { get; set; }
	public object UserToken { get; set; }
	public Socket ConnectSocket { get; }
	internal bool PolicyRestricted { get; set; }

	// Methods

	// RVA: 0x10875FC Offset: 0x10875FC VA: 0x10875FC
	internal void .ctor(bool policy) { }

	// RVA: 0x1087628 Offset: 0x1087628 VA: 0x1087628
	public void .ctor() { }

	// RVA: 0x10877D0 Offset: 0x10877D0 VA: 0x10877D0
	public void add_Completed(EventHandler<SocketAsyncEventArgs> value) { }

	// RVA: 0x1087894 Offset: 0x1087894 VA: 0x1087894
	public void remove_Completed(EventHandler<SocketAsyncEventArgs> value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DC58 Offset: 0xC3DC58 VA: 0xC3DC58
	// RVA: 0x1087958 Offset: 0x1087958 VA: 0x1087958
	public Socket get_AcceptSocket() { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DC68 Offset: 0xC3DC68 VA: 0xC3DC68
	// RVA: 0x10876CC Offset: 0x10876CC VA: 0x10876CC
	public void set_AcceptSocket(Socket value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DC78 Offset: 0xC3DC78 VA: 0xC3DC78
	// RVA: 0x1087960 Offset: 0x1087960 VA: 0x1087960
	public byte[] get_Buffer() { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DC88 Offset: 0xC3DC88 VA: 0xC3DC88
	// RVA: 0x10876D4 Offset: 0x10876D4 VA: 0x10876D4
	private void set_Buffer(byte[] value) { }

	// RVA: 0x1087968 Offset: 0x1087968 VA: 0x1087968
	public IList<ArraySegment<byte>> get_BufferList() { }

	// RVA: 0x10876DC Offset: 0x10876DC VA: 0x10876DC
	public void set_BufferList(IList<ArraySegment<byte>> value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DC98 Offset: 0xC3DC98 VA: 0xC3DC98
	// RVA: 0x1087970 Offset: 0x1087970 VA: 0x1087970
	public int get_BytesTransferred() { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DCA8 Offset: 0xC3DCA8 VA: 0xC3DCA8
	// RVA: 0x108777C Offset: 0x108777C VA: 0x108777C
	private void set_BytesTransferred(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DCB8 Offset: 0xC3DCB8 VA: 0xC3DCB8
	// RVA: 0x1087978 Offset: 0x1087978 VA: 0x1087978
	public int get_Count() { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DCC8 Offset: 0xC3DCC8 VA: 0xC3DCC8
	// RVA: 0x1087784 Offset: 0x1087784 VA: 0x1087784
	private void set_Count(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DCD8 Offset: 0xC3DCD8 VA: 0xC3DCD8
	// RVA: 0x1087980 Offset: 0x1087980 VA: 0x1087980
	public bool get_DisconnectReuseSocket() { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DCE8 Offset: 0xC3DCE8 VA: 0xC3DCE8
	// RVA: 0x108778C Offset: 0x108778C VA: 0x108778C
	public void set_DisconnectReuseSocket(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DCF8 Offset: 0xC3DCF8 VA: 0xC3DCF8
	// RVA: 0x1087988 Offset: 0x1087988 VA: 0x1087988
	public SocketAsyncOperation get_LastOperation() { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DD08 Offset: 0xC3DD08 VA: 0xC3DD08
	// RVA: 0x1087798 Offset: 0x1087798 VA: 0x1087798
	private void set_LastOperation(SocketAsyncOperation value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DD18 Offset: 0xC3DD18 VA: 0xC3DD18
	// RVA: 0x1087990 Offset: 0x1087990 VA: 0x1087990
	public int get_Offset() { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DD28 Offset: 0xC3DD28 VA: 0xC3DD28
	// RVA: 0x10877A0 Offset: 0x10877A0 VA: 0x10877A0
	private void set_Offset(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DD38 Offset: 0xC3DD38 VA: 0xC3DD38
	// RVA: 0x1087998 Offset: 0x1087998 VA: 0x1087998
	public EndPoint get_RemoteEndPoint() { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DD48 Offset: 0xC3DD48 VA: 0xC3DD48
	// RVA: 0x10877A8 Offset: 0x10877A8 VA: 0x10877A8
	public void set_RemoteEndPoint(EndPoint value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DD58 Offset: 0xC3DD58 VA: 0xC3DD58
	// RVA: 0x10879A0 Offset: 0x10879A0 VA: 0x10879A0
	public int get_SendPacketsSendSize() { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DD68 Offset: 0xC3DD68 VA: 0xC3DD68
	// RVA: 0x10877B0 Offset: 0x10877B0 VA: 0x10877B0
	public void set_SendPacketsSendSize(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DD78 Offset: 0xC3DD78 VA: 0xC3DD78
	// RVA: 0x10879A8 Offset: 0x10879A8 VA: 0x10879A8
	public SocketError get_SocketError() { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DD88 Offset: 0xC3DD88 VA: 0xC3DD88
	// RVA: 0x10877B8 Offset: 0x10877B8 VA: 0x10877B8
	public void set_SocketError(SocketError value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DD98 Offset: 0xC3DD98 VA: 0xC3DD98
	// RVA: 0x10879B0 Offset: 0x10879B0 VA: 0x10879B0
	public SocketFlags get_SocketFlags() { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DDA8 Offset: 0xC3DDA8 VA: 0xC3DDA8
	// RVA: 0x10877C0 Offset: 0x10877C0 VA: 0x10877C0
	public void set_SocketFlags(SocketFlags value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DDB8 Offset: 0xC3DDB8 VA: 0xC3DDB8
	// RVA: 0x10879B8 Offset: 0x10879B8 VA: 0x10879B8
	public object get_UserToken() { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DDC8 Offset: 0xC3DDC8 VA: 0xC3DDC8
	// RVA: 0x10877C8 Offset: 0x10877C8 VA: 0x10877C8
	public void set_UserToken(object value) { }

	// RVA: 0x10879C0 Offset: 0x10879C0 VA: 0x10879C0
	public Socket get_ConnectSocket() { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DDD8 Offset: 0xC3DDD8 VA: 0xC3DDD8
	// RVA: 0x10879E0 Offset: 0x10879E0 VA: 0x10879E0
	internal bool get_PolicyRestricted() { }

	[CompilerGeneratedAttribute] // RVA: 0xC3DDE8 Offset: 0xC3DDE8 VA: 0xC3DDE8
	// RVA: 0x10876C0 Offset: 0x10876C0 VA: 0x10876C0
	private void set_PolicyRestricted(bool value) { }

	// RVA: 0x10879E8 Offset: 0x10879E8 VA: 0x10879E8 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1087A68 Offset: 0x1087A68 VA: 0x1087A68
	private void Dispose(bool disposing) { }

	// RVA: 0x1087AB0 Offset: 0x1087AB0 VA: 0x1087AB0 Slot: 4
	public void Dispose() { }

	// RVA: 0x1087AB8 Offset: 0x1087AB8 VA: 0x1087AB8 Slot: 5
	protected virtual void OnCompleted(SocketAsyncEventArgs e) { }

	// RVA: 0x1087B24 Offset: 0x1087B24 VA: 0x1087B24
	public void SetBuffer(int offset, int count) { }

	// RVA: 0x1087C64 Offset: 0x1087C64 VA: 0x1087C64
	public void SetBuffer(byte[] buffer, int offset, int count) { }

	// RVA: 0x1087B40 Offset: 0x1087B40 VA: 0x1087B40
	private void SetBufferInternal(byte[] buffer, int offset, int count) { }

	// RVA: 0x1087C68 Offset: 0x1087C68 VA: 0x1087C68
	private void ReceiveCallback() { }

	// RVA: 0x1087D84 Offset: 0x1087D84 VA: 0x1087D84
	private void ConnectCallback() { }

	// RVA: 0x1087E2C Offset: 0x1087E2C VA: 0x1087E2C
	private SocketError TryConnect(EndPoint endpoint) { }

	// RVA: 0x1087F90 Offset: 0x1087F90 VA: 0x1087F90
	private void SendCallback() { }

	// RVA: 0x10883F4 Offset: 0x10883F4 VA: 0x10883F4
	internal void DoOperation(SocketAsyncOperation operation, Socket socket) { }
}

// Namespace: System.Net.Sockets
public enum SocketAsyncOperation // TypeDefIndex: 1490
{
	// Fields
	public int value__; // 0x0
	public const SocketAsyncOperation None = 0;
	public const SocketAsyncOperation Accept = 1;
	public const SocketAsyncOperation Connect = 2;
	public const SocketAsyncOperation Disconnect = 3;
	public const SocketAsyncOperation Receive = 4;
	public const SocketAsyncOperation ReceiveFrom = 5;
	public const SocketAsyncOperation ReceiveMessageFrom = 6;
	public const SocketAsyncOperation Send = 7;
	public const SocketAsyncOperation SendPackets = 8;
	public const SocketAsyncOperation SendTo = 9;
}

// Namespace: System.Net.Sockets
public enum SocketError // TypeDefIndex: 1491
{
	// Fields
	public int value__; // 0x0
	public const SocketError AccessDenied = 10013;
	public const SocketError AddressAlreadyInUse = 10048;
	public const SocketError AddressFamilyNotSupported = 10047;
	public const SocketError AddressNotAvailable = 10049;
	public const SocketError AlreadyInProgress = 10037;
	public const SocketError ConnectionAborted = 10053;
	public const SocketError ConnectionRefused = 10061;
	public const SocketError ConnectionReset = 10054;
	public const SocketError DestinationAddressRequired = 10039;
	public const SocketError Disconnecting = 10101;
	public const SocketError Fault = 10014;
	public const SocketError HostDown = 10064;
	public const SocketError HostNotFound = 11001;
	public const SocketError HostUnreachable = 10065;
	public const SocketError InProgress = 10036;
	public const SocketError Interrupted = 10004;
	public const SocketError InvalidArgument = 10022;
	public const SocketError IOPending = 997;
	public const SocketError IsConnected = 10056;
	public const SocketError MessageSize = 10040;
	public const SocketError NetworkDown = 10050;
	public const SocketError NetworkReset = 10052;
	public const SocketError NetworkUnreachable = 10051;
	public const SocketError NoBufferSpaceAvailable = 10055;
	public const SocketError NoData = 11004;
	public const SocketError NoRecovery = 11003;
	public const SocketError NotConnected = 10057;
	public const SocketError NotInitialized = 10093;
	public const SocketError NotSocket = 10038;
	public const SocketError OperationAborted = 995;
	public const SocketError OperationNotSupported = 10045;
	public const SocketError ProcessLimit = 10067;
	public const SocketError ProtocolFamilyNotSupported = 10046;
	public const SocketError ProtocolNotSupported = 10043;
	public const SocketError ProtocolOption = 10042;
	public const SocketError ProtocolType = 10041;
	public const SocketError Shutdown = 10058;
	public const SocketError SocketError = -1;
	public const SocketError SocketNotSupported = 10044;
	public const SocketError Success = 0;
	public const SocketError SystemNotReady = 10091;
	public const SocketError TimedOut = 10060;
	public const SocketError TooManyOpenSockets = 10024;
	public const SocketError TryAgain = 11002;
	public const SocketError TypeNotFound = 10109;
	public const SocketError VersionNotSupported = 10092;
	public const SocketError WouldBlock = 10035;
}

// Namespace: System.Net.Sockets
[Serializable]
public class SocketException : Win32Exception // TypeDefIndex: 1492
{
	// Properties
	public override int ErrorCode { get; }
	public SocketError SocketErrorCode { get; }
	public override string Message { get; }

	// Methods

	// RVA: 0x108855C Offset: 0x108855C VA: 0x108855C
	public void .ctor() { }

	// RVA: 0x1086A70 Offset: 0x1086A70 VA: 0x1086A70
	public void .ctor(int error) { }

	// RVA: 0x108858C Offset: 0x108858C VA: 0x108858C
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x1088594 Offset: 0x1088594 VA: 0x1088594
	internal void .ctor(int error, string message) { }

	// RVA: 0x1088588 Offset: 0x1088588 VA: 0x1088588
	private static int WSAGetLastError_internal() { }

	// RVA: 0x108859C Offset: 0x108859C VA: 0x108859C Slot: 12
	public override int get_ErrorCode() { }

	// RVA: 0x1087F88 Offset: 0x1087F88 VA: 0x1087F88
	public SocketError get_SocketErrorCode() { }

	// RVA: 0x10885A4 Offset: 0x10885A4 VA: 0x10885A4 Slot: 6
	public override string get_Message() { }
}

// Namespace: System.Net.Sockets
[FlagsAttribute] // RVA: 0xC3C8D4 Offset: 0xC3C8D4 VA: 0xC3C8D4
public enum SocketFlags // TypeDefIndex: 1493
{
	// Fields
	public int value__; // 0x0
	public const SocketFlags None = 0;
	public const SocketFlags OutOfBand = 1;
	public const SocketFlags Peek = 2;
	public const SocketFlags DontRoute = 4;
	public const SocketFlags MaxIOVectorLength = 16;
	public const SocketFlags Truncated = 256;
	public const SocketFlags ControlDataTruncated = 512;
	public const SocketFlags Broadcast = 1024;
	public const SocketFlags Multicast = 2048;
	public const SocketFlags Partial = 32768;
}

// Namespace: System.Net.Sockets
[Serializable]
public struct SocketInformation // TypeDefIndex: 1494
{
	// Fields
	private SocketInformationOptions options; // 0x0
	private byte[] protocol_info; // 0x8

	// Properties
	public SocketInformationOptions Options { get; set; }
	public byte[] ProtocolInformation { get; set; }
