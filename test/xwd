	private void OnEnable() { }

	// RVA: 0x208C734 Offset: 0x208C734 VA: 0x208C734
	private void OnDisable() { }

	// RVA: 0x208C834 Offset: 0x208C834 VA: 0x208C834
	private void OnDestroy() { }

	// RVA: 0x208C8A8 Offset: 0x208C8A8 VA: 0x208C8A8
	public static UIDrawCall Create(UIPanel panel, Material mat, Texture tex, Shader shader) { }

	// RVA: 0x208C938 Offset: 0x208C938 VA: 0x208C938
	private static UIDrawCall Create(string name, UIPanel pan, Material mat, Texture tex, Shader shader) { }

	// RVA: 0x208CB00 Offset: 0x208CB00 VA: 0x208CB00
	private static UIDrawCall Create(string name, UIPanel pan) { }

	// RVA: 0x208CD38 Offset: 0x208CD38 VA: 0x208CD38
	public static void ClearAll() { }

	// RVA: 0x208CF3C Offset: 0x208CF3C VA: 0x208CF3C
	public static void ReleaseAll() { }

	// RVA: 0x208CF9C Offset: 0x208CF9C VA: 0x208CF9C
	public static void ReleaseInactive() { }

	// RVA: 0x208D15C Offset: 0x208D15C VA: 0x208D15C
	public static int Count(UIPanel panel) { }

	// RVA: 0x208D29C Offset: 0x208D29C VA: 0x208D29C
	public static void Destroy(UIDrawCall dc) { }

	// RVA: 0x208D4B8 Offset: 0x208D4B8 VA: 0x208D4B8
	private static void .cctor() { }
}

// Namespace: 
public enum UIDrawCall.Clipping // TypeDefIndex: 12122
{
	// Fields
	public int value__; // 0x0
	public const UIDrawCall.Clipping None = 0;
	public const UIDrawCall.Clipping TextureMask = 1;
	public const UIDrawCall.Clipping SoftClip = 3;
	public const UIDrawCall.Clipping ConstrainButDontClip = 4;
}

// Namespace: 
public sealed class UIDrawCall.OnRenderCallback : MulticastDelegate // TypeDefIndex: 12123
{
	// Methods

	// RVA: 0x208D598 Offset: 0x208D598 VA: 0x208D598
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x208BE0C Offset: 0x208BE0C VA: 0x208BE0C Slot: 11
	public virtual void Invoke(Material mat) { }

	// RVA: 0x208D5A8 Offset: 0x208D5A8 VA: 0x208D5A8 Slot: 12
	public virtual IAsyncResult BeginInvoke(Material mat, AsyncCallback callback, object object) { }

	// RVA: 0x208D5CC Offset: 0x208D5CC VA: 0x208D5CC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC98A40 Offset: 0xC98A40 VA: 0xC98A40
public class UIEventListener : MonoBehaviour // TypeDefIndex: 12124
{
	// Fields
	public object parameter; // 0x18
	public UIEventListener.VoidDelegate onSubmit; // 0x20
	public UIEventListener.VoidDelegate onClick; // 0x28
	public UIEventListener.VoidDelegate onDoubleClick; // 0x30
	public UIEventListener.BoolDelegate onHover; // 0x38
	public UIEventListener.BoolDelegate onPress; // 0x40
	public UIEventListener.BoolDelegate onSelect; // 0x48
	public UIEventListener.FloatDelegate onScroll; // 0x50
	public UIEventListener.VoidDelegate onDragStart; // 0x58
	public UIEventListener.VectorDelegate onDrag; // 0x60
	public UIEventListener.VoidDelegate onDragOver; // 0x68
	public UIEventListener.VoidDelegate onDragOut; // 0x70
	public UIEventListener.VoidDelegate onDragEnd; // 0x78
	public UIEventListener.ObjectDelegate onDrop; // 0x80
	public UIEventListener.KeyCodeDelegate onKey; // 0x88
	public UIEventListener.BoolDelegate onTooltip; // 0x90

	// Methods

	// RVA: 0x2090120 Offset: 0x2090120 VA: 0x2090120
	public void .ctor() { }

	// RVA: 0x2090128 Offset: 0x2090128 VA: 0x2090128
	private void OnSubmit() { }

	// RVA: 0x2090508 Offset: 0x2090508 VA: 0x2090508
	private void OnClick() { }

	// RVA: 0x2090548 Offset: 0x2090548 VA: 0x2090548
	private void OnDoubleClick() { }

	// RVA: 0x2090588 Offset: 0x2090588 VA: 0x2090588
	private void OnHover(bool isOver) { }

	// RVA: 0x2090990 Offset: 0x2090990 VA: 0x2090990
	private void OnPress(bool isPressed) { }

	// RVA: 0x20909D8 Offset: 0x20909D8 VA: 0x20909D8
	private void OnSelect(bool selected) { }

	// RVA: 0x2090A20 Offset: 0x2090A20 VA: 0x2090A20
	private void OnScroll(float delta) { }

	// RVA: 0x2090E34 Offset: 0x2090E34 VA: 0x2090E34
	private void OnDragStart() { }

	// RVA: 0x2090E74 Offset: 0x2090E74 VA: 0x2090E74
	private void OnDrag(Vector2 delta) { }

	// RVA: 0x20912C0 Offset: 0x20912C0 VA: 0x20912C0
	private void OnDragOver() { }

	// RVA: 0x2091300 Offset: 0x2091300 VA: 0x2091300
	private void OnDragOut() { }

	// RVA: 0x2091340 Offset: 0x2091340 VA: 0x2091340
	private void OnDragEnd() { }

	// RVA: 0x2091380 Offset: 0x2091380 VA: 0x2091380
	private void OnDrop(GameObject go) { }

	// RVA: 0x2091788 Offset: 0x2091788 VA: 0x2091788
	private void OnKey(KeyCode key) { }

	// RVA: 0x2091B90 Offset: 0x2091B90 VA: 0x2091B90
	private void OnTooltip(bool show) { }

	// RVA: 0x2091BD8 Offset: 0x2091BD8 VA: 0x2091BD8
	public static UIEventListener Get(GameObject go) { }
}

// Namespace: 
public sealed class UIEventListener.VoidDelegate : MulticastDelegate // TypeDefIndex: 12125
{
	// Methods

	// RVA: 0x2091FD0 Offset: 0x2091FD0 VA: 0x2091FD0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2090168 Offset: 0x2090168 VA: 0x2090168 Slot: 11
	public virtual void Invoke(GameObject go) { }

	// RVA: 0x2091FE0 Offset: 0x2091FE0 VA: 0x2091FE0 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, AsyncCallback callback, object object) { }

	// RVA: 0x2092004 Offset: 0x2092004 VA: 0x2092004 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UIEventListener.BoolDelegate : MulticastDelegate // TypeDefIndex: 12126
{
	// Methods

	// RVA: 0x2091CA0 Offset: 0x2091CA0 VA: 0x2091CA0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20905D0 Offset: 0x20905D0 VA: 0x20905D0 Slot: 11
	public virtual void Invoke(GameObject go, bool state) { }

	// RVA: 0x2091CB0 Offset: 0x2091CB0 VA: 0x2091CB0 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, bool state, AsyncCallback callback, object object) { }

	// RVA: 0x2091D50 Offset: 0x2091D50 VA: 0x2091D50 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UIEventListener.FloatDelegate : MulticastDelegate // TypeDefIndex: 12127
{
	// Methods

	// RVA: 0x2091D5C Offset: 0x2091D5C VA: 0x2091D5C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2090A74 Offset: 0x2090A74 VA: 0x2090A74 Slot: 11
	public virtual void Invoke(GameObject go, float delta) { }

	// RVA: 0x2091D6C Offset: 0x2091D6C VA: 0x2091D6C Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, float delta, AsyncCallback callback, object object) { }

	// RVA: 0x2091E08 Offset: 0x2091E08 VA: 0x2091E08 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UIEventListener.VectorDelegate : MulticastDelegate // TypeDefIndex: 12128
{
	// Methods

	// RVA: 0x2091F18 Offset: 0x2091F18 VA: 0x2091F18
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2090ED0 Offset: 0x2090ED0 VA: 0x2090ED0 Slot: 11
	public virtual void Invoke(GameObject go, Vector2 delta) { }

	// RVA: 0x2091F28 Offset: 0x2091F28 VA: 0x2091F28 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, Vector2 delta, AsyncCallback callback, object object) { }

	// RVA: 0x2091FC4 Offset: 0x2091FC4 VA: 0x2091FC4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UIEventListener.ObjectDelegate : MulticastDelegate // TypeDefIndex: 12129
{
	// Methods

	// RVA: 0x2091ECC Offset: 0x2091ECC VA: 0x2091ECC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20913C8 Offset: 0x20913C8 VA: 0x20913C8 Slot: 11
	public virtual void Invoke(GameObject go, GameObject obj) { }

	// RVA: 0x2091EDC Offset: 0x2091EDC VA: 0x2091EDC Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, GameObject obj, AsyncCallback callback, object object) { }

	// RVA: 0x2091F0C Offset: 0x2091F0C VA: 0x2091F0C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UIEventListener.KeyCodeDelegate : MulticastDelegate // TypeDefIndex: 12130
{
	// Methods

	// RVA: 0x2091E14 Offset: 0x2091E14 VA: 0x2091E14
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20917D0 Offset: 0x20917D0 VA: 0x20917D0 Slot: 11
	public virtual void Invoke(GameObject go, KeyCode key) { }

	// RVA: 0x2091E24 Offset: 0x2091E24 VA: 0x2091E24 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, KeyCode key, AsyncCallback callback, object object) { }

	// RVA: 0x2091EC0 Offset: 0x2091EC0 VA: 0x2091EC0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class UIGeometry // TypeDefIndex: 12131
{
	// Fields
	public BetterList<Vector3> verts; // 0x10
	public BetterList<Vector2> uvs; // 0x18
	public BetterList<Color32> cols; // 0x20
	private BetterList<Vector3> mRtpVerts; // 0x28
	private Vector3 mRtpNormal; // 0x30
	private Vector4 mRtpTan; // 0x3C

	// Properties
	public bool hasVertices { get; }
	public bool hasTransformed { get; }

	// Methods

	// RVA: 0x214B9E4 Offset: 0x214B9E4 VA: 0x214B9E4
	public void .ctor() { }

	// RVA: 0x214BAC4 Offset: 0x214BAC4 VA: 0x214BAC4
	public bool get_hasVertices() { }

	// RVA: 0x214BAF8 Offset: 0x214BAF8 VA: 0x214BAF8
	public bool get_hasTransformed() { }

	// RVA: 0x214BB48 Offset: 0x214BB48 VA: 0x214BB48
	public void Clear() { }

	// RVA: 0x214BC14 Offset: 0x214BC14 VA: 0x214BC14
	public void ApplyTransform(Matrix4x4 widgetToPanel) { }

	// RVA: 0x214BE18 Offset: 0x214BE18 VA: 0x214BE18
	public void WriteToBuffers(BetterList<Vector3> v, BetterList<Vector2> u, BetterList<Color32> c, BetterList<Vector3> n, BetterList<Vector4> t) { }
}

// Namespace: 
public abstract class UIRect : MonoBehaviour // TypeDefIndex: 12132
{
	// Fields
	public UIRect.AnchorPoint leftAnchor; // 0x18
	public UIRect.AnchorPoint rightAnchor; // 0x20
	public UIRect.AnchorPoint bottomAnchor; // 0x28
	public UIRect.AnchorPoint topAnchor; // 0x30
	public UIRect.AnchorUpdate updateAnchors; // 0x38
	protected GameObject mGo; // 0x40
	protected Transform mTrans; // 0x48
	protected BetterList<UIRect> mChildren; // 0x50
	protected bool mChanged; // 0x58
	protected bool mStarted; // 0x59
	protected bool mParentFound; // 0x5A
	private bool mUpdateAnchors; // 0x5B
	private int mUpdateFrame; // 0x5C
	private bool mAnchorsCached; // 0x60
	private UIRoot mRoot; // 0x68
	private UIRect mParent; // 0x70
	private bool mRootSet; // 0x78
	protected Camera mCam; // 0x80
	public float finalAlpha; // 0x88
	protected static Vector3[] mSides; // 0x0

	// Properties
	public GameObject cachedGameObject { get; }
	public Transform cachedTransform { get; }
	public Camera anchorCamera { get; }
	public bool isFullyAnchored { get; }
	public virtual bool isAnchoredHorizontally { get; }
	public virtual bool isAnchoredVertically { get; }
	public virtual bool canBeAnchored { get; }
	public bool started { get; }
	public UIRect parent { get; }
	public UIRoot root { get; }
	public bool isAnchored { get; }
	public abstract float alpha { get; set; }
	public abstract Vector3[] localCorners { get; }
	public abstract Vector3[] worldCorners { get; }
	protected float cameraRayDistance { get; }

	// Methods

	// RVA: 0x21AEF3C Offset: 0x21AEF3C VA: 0x21AEF3C
	protected void .ctor() { }

	// RVA: 0x21B6B3C Offset: 0x21B6B3C VA: 0x21B6B3C
	public GameObject get_cachedGameObject() { }

	// RVA: 0x21B10A4 Offset: 0x21B10A4 VA: 0x21B10A4
	public Transform get_cachedTransform() { }

	// RVA: 0x21AFD08 Offset: 0x21AFD08 VA: 0x21AFD08
	public Camera get_anchorCamera() { }

	// RVA: 0x21C1FDC Offset: 0x21C1FDC VA: 0x21C1FDC
	public bool get_isFullyAnchored() { }

	// RVA: 0x21C2128 Offset: 0x21C2128 VA: 0x21C2128 Slot: 4
	public virtual bool get_isAnchoredHorizontally() { }

	// RVA: 0x21C21FC Offset: 0x21C21FC VA: 0x21C21FC Slot: 5
	public virtual bool get_isAnchoredVertically() { }

	// RVA: 0x21C22D0 Offset: 0x21C22D0 VA: 0x21C22D0 Slot: 6
	public virtual bool get_canBeAnchored() { }

	// RVA: 0x21C22D8 Offset: 0x21C22D8 VA: 0x21C22D8
	public bool get_started() { }

	// RVA: 0x21B260C Offset: 0x21B260C VA: 0x21B260C
	public UIRect get_parent() { }

	// RVA: 0x21B003C Offset: 0x21B003C VA: 0x21B003C
	public UIRoot get_root() { }

	// RVA: 0x21B2990 Offset: 0x21B2990 VA: 0x21B2990
	public bool get_isAnchored() { }

	// RVA: -1 Offset: -1 Slot: 7
	public abstract float get_alpha();

	// RVA: -1 Offset: -1 Slot: 8
	public abstract void set_alpha(float value);

	// RVA: -1 Offset: -1 Slot: 9
	public abstract float CalculateFinalAlpha(int frameID);

	// RVA: -1 Offset: -1 Slot: 10
	public abstract Vector3[] get_localCorners();

	// RVA: -1 Offset: -1 Slot: 11
	public abstract Vector3[] get_worldCorners();

	// RVA: 0x21B1800 Offset: 0x21B1800 VA: 0x21B1800
	protected float get_cameraRayDistance() { }

	// RVA: 0x21B2464 Offset: 0x21B2464 VA: 0x21B2464 Slot: 12
	public virtual void Invalidate(bool includeChildren) { }

	// RVA: 0x21B2174 Offset: 0x21B2174 VA: 0x21B2174 Slot: 13
	public virtual Vector3[] GetSides(Transform relativeTo) { }

	// RVA: 0x21B50B8 Offset: 0x21B50B8 VA: 0x21B50B8
	protected Vector3 GetLocalPos(UIRect.AnchorPoint ac, Transform trans) { }

	// RVA: 0x21B3C38 Offset: 0x21B3C38 VA: 0x21B3C38 Slot: 14
	protected virtual void OnEnable() { }

	// RVA: 0x21B409C Offset: 0x21B409C VA: 0x21B409C Slot: 15
	protected virtual void OnInit() { }

	// RVA: 0x21B4394 Offset: 0x21B4394 VA: 0x21B4394 Slot: 16
	protected virtual void OnDisable() { }

	// RVA: 0x21C23D8 Offset: 0x21C23D8 VA: 0x21C23D8
	protected void Start() { }

	// RVA: 0x21C241C Offset: 0x21C241C VA: 0x21C241C
	public void UpdateMe() { }

	// RVA: 0x21C284C Offset: 0x21C284C VA: 0x21C284C
	public void UpdateAnchors() { }

	// RVA: -1 Offset: -1 Slot: 17
	protected abstract void OnAnchor();

	// RVA: 0x21C2898 Offset: 0x21C2898 VA: 0x21C2898
	public void SetAnchor(Transform t) { }

	// RVA: 0x21C291C Offset: 0x21C291C VA: 0x21C291C
	public void SetAnchor(GameObject go) { }

	// RVA: 0x21C2A18 Offset: 0x21C2A18 VA: 0x21C2A18
	public void SetAnchor(GameObject go, int left, int bottom, int right, int top) { }

	// RVA: 0x21B6BCC Offset: 0x21B6BCC VA: 0x21B6BCC
	public void ResetAnchors() { }

	// RVA: 0x21C2D14 Offset: 0x21C2D14 VA: 0x21C2D14
	public void ResetAndUpdateAnchors() { }

	// RVA: -1 Offset: -1 Slot: 18
	public abstract void SetRect(float x, float y, float width, float height);

	// RVA: 0x21C2BDC Offset: 0x21C2BDC VA: 0x21C2BDC
	private void FindCameraFor(UIRect.AnchorPoint ap) { }

	// RVA: 0x21B39E4 Offset: 0x21B39E4 VA: 0x21B39E4 Slot: 19
	public virtual void ParentHasChanged() { }

	// RVA: -1 Offset: -1 Slot: 20
	protected abstract void OnStart();

	// RVA: 0x21C2D38 Offset: 0x21C2D38 VA: 0x21C2D38 Slot: 21
	protected virtual void OnUpdate() { }

	// RVA: 0x21C2D3C Offset: 0x21C2D3C VA: 0x21C2D3C
	private static void .cctor() { }
}

// Namespace: 
[Serializable]
public class UIRect.AnchorPoint // TypeDefIndex: 12133
{
	// Fields
	public Transform target; // 0x10
	public float relative; // 0x18
	public int absolute; // 0x1C
	public UIRect rect; // 0x20
	public Camera targetCam; // 0x28

	// Methods

	// RVA: 0x21C1FA0 Offset: 0x21C1FA0 VA: 0x21C1FA0
	public void .ctor() { }

	// RVA: 0x21C1FA8 Offset: 0x21C1FA8 VA: 0x21C1FA8
	public void .ctor(float relative) { }

	// RVA: 0x21C2DA0 Offset: 0x21C2DA0 VA: 0x21C2DA0
	public void Set(float relative, float absolute) { }

	// RVA: 0x21C2E28 Offset: 0x21C2E28 VA: 0x21C2E28
	public void Set(Transform target, float relative, float absolute) { }

	// RVA: 0x21C2EC0 Offset: 0x21C2EC0 VA: 0x21C2EC0
	public void SetToNearest(float abs0, float abs1, float abs2) { }

	// RVA: 0x21C2EDC Offset: 0x21C2EDC VA: 0x21C2EDC
	public void SetToNearest(float rel0, float rel1, float rel2, float abs0, float abs1, float abs2) { }

	// RVA: 0x21B2AF0 Offset: 0x21B2AF0 VA: 0x21B2AF0
	public void SetHorizontal(Transform parent, float localPos) { }

	// RVA: 0x21B2CE4 Offset: 0x21B2CE4 VA: 0x21B2CE4
	public void SetVertical(Transform parent, float localPos) { }

	// RVA: 0x21B4F08 Offset: 0x21B4F08 VA: 0x21B4F08
	public Vector3[] GetSides(Transform relativeTo) { }
}

// Namespace: 
public enum UIRect.AnchorUpdate // TypeDefIndex: 12134
{
	// Fields
	public int value__; // 0x0
	public const UIRect.AnchorUpdate OnEnable = 0;
	public const UIRect.AnchorUpdate OnUpdate = 1;
	public const UIRect.AnchorUpdate OnStart = 2;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC98A78 Offset: 0xC98A78 VA: 0xC98A78
[AddComponentMenu] // RVA: 0xC98A78 Offset: 0xC98A78 VA: 0xC98A78
public class UISnapshotPoint : MonoBehaviour // TypeDefIndex: 12135
{
	// Fields
	public bool isOrthographic; // 0x18
	public float nearClip; // 0x1C
	public float farClip; // 0x20
	[RangeAttribute] // RVA: 0xCF1B18 Offset: 0xCF1B18 VA: 0xCF1B18
	public int fieldOfView; // 0x24
	public float orthoSize; // 0x28
	public Texture2D thumbnail; // 0x30

	// Methods

	// RVA: 0x1D83018 Offset: 0x1D83018 VA: 0x1D83018
	public void .ctor() { }

	// RVA: 0x1D83040 Offset: 0x1D83040 VA: 0x1D83040
	private void Start() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC98AC4 Offset: 0xC98AC4 VA: 0xC98AC4
[AddComponentMenu] // RVA: 0xC98AC4 Offset: 0xC98AC4 VA: 0xC98AC4
public class UIWidget : UIRect // TypeDefIndex: 12136
{
	// Fields
	[HideInInspector] // RVA: 0xCF1B34 Offset: 0xCF1B34 VA: 0xCF1B34
	[SerializeField] // RVA: 0xCF1B34 Offset: 0xCF1B34 VA: 0xCF1B34
	protected Color mColor; // 0x8C
	[HideInInspector] // RVA: 0xCF1B6C Offset: 0xCF1B6C VA: 0xCF1B6C
	[SerializeField] // RVA: 0xCF1B6C Offset: 0xCF1B6C VA: 0xCF1B6C
	protected UIWidget.Pivot mPivot; // 0x9C
	[HideInInspector] // RVA: 0xCF1BA4 Offset: 0xCF1BA4 VA: 0xCF1BA4
	[SerializeField] // RVA: 0xCF1BA4 Offset: 0xCF1BA4 VA: 0xCF1BA4
	protected int mWidth; // 0xA0
	[HideInInspector] // RVA: 0xCF1BDC Offset: 0xCF1BDC VA: 0xCF1BDC
	[SerializeField] // RVA: 0xCF1BDC Offset: 0xCF1BDC VA: 0xCF1BDC
	protected int mHeight; // 0xA4
	[HideInInspector] // RVA: 0xCF1C14 Offset: 0xCF1C14 VA: 0xCF1C14
	[SerializeField] // RVA: 0xCF1C14 Offset: 0xCF1C14 VA: 0xCF1C14
	protected int mDepth; // 0xA8
	public UIWidget.OnDimensionsChanged onChange; // 0xB0
	public UIWidget.OnPostFillCallback onPostFill; // 0xB8
	public UIDrawCall.OnRenderCallback mOnRender; // 0xC0
	public bool autoResizeBoxCollider; // 0xC8
	public bool hideIfOffScreen; // 0xC9
	public UIWidget.AspectRatioSource keepAspectRatio; // 0xCC
	public float aspectRatio; // 0xD0
	public UIWidget.HitCheck hitCheck; // 0xD8
	public UIPanel panel; // 0xE0
	public UIGeometry geometry; // 0xE8
	public bool fillGeometry; // 0xF0
	protected bool mPlayMode; // 0xF1
	protected Vector4 mDrawRegion; // 0xF4
	private Matrix4x4 mLocalToPanel; // 0x104
	private bool mIsVisibleByAlpha; // 0x144
	private bool mIsVisibleByPanel; // 0x145
	private bool mIsInFront; // 0x146
	private float mLastAlpha; // 0x148
	private bool mMoved; // 0x14C
	public UIDrawCall drawCall; // 0x150
	protected Vector3[] mCorners; // 0x158
	private int mAlphaFrameID; // 0x160
	private int mMatrixFrame; // 0x164
	private Vector3 mOldV0; // 0x168
	private Vector3 mOldV1; // 0x174

	// Properties
	public UIDrawCall.OnRenderCallback onRender { get; set; }
	public Vector4 drawRegion { get; set; }
	public Vector2 pivotOffset { get; }
	public int width { get; set; }
	public int height { get; set; }
	public Color color { get; set; }
	public override float alpha { get; set; }
	public bool isVisible { get; }
	public bool hasVertices { get; }
	public UIWidget.Pivot rawPivot { get; set; }
	public UIWidget.Pivot pivot { get; set; }
	public int depth { get; set; }
	public int raycastDepth { get; }
	public override Vector3[] localCorners { get; }
	public virtual Vector2 localSize { get; }
	public Vector3 localCenter { get; }
	public override Vector3[] worldCorners { get; }
	public Vector3 worldCenter { get; }
	public virtual Vector4 drawingDimensions { get; }
	public virtual Material material { get; set; }
	public virtual Texture mainTexture { get; set; }
	public virtual Shader shader { get; set; }
	[ObsoleteAttribute] // RVA: 0xD4BF84 Offset: 0xD4BF84 VA: 0xD4BF84
	public Vector2 relativeSize { get; }
	public bool hasBoxCollider { get; }
	public virtual int minWidth { get; }
	public virtual int minHeight { get; }
	public virtual Vector4 border { get; set; }

	// Methods

	// RVA: 0x2029B54 Offset: 0x2029B54 VA: 0x2029B54
	public void .ctor() { }

	// RVA: 0x2030B64 Offset: 0x2030B64 VA: 0x2030B64
	public UIDrawCall.OnRenderCallback get_onRender() { }

	// RVA: 0x2030B6C Offset: 0x2030B6C VA: 0x2030B6C
	public void set_onRender(UIDrawCall.OnRenderCallback value) { }

	// RVA: 0x2030D94 Offset: 0x2030D94 VA: 0x2030D94
	public Vector4 get_drawRegion() { }

	// RVA: 0x2026300 Offset: 0x2026300 VA: 0x2026300
	public void set_drawRegion(Vector4 value) { }

	// RVA: 0x2025C1C Offset: 0x2025C1C VA: 0x2025C1C
	public Vector2 get_pivotOffset() { }

	// RVA: 0x202227C Offset: 0x202227C VA: 0x202227C
	public int get_width() { }

	// RVA: 0x202228C Offset: 0x202228C VA: 0x202228C
	public void set_width(int value) { }

	// RVA: 0x2022284 Offset: 0x2022284 VA: 0x2022284
	public int get_height() { }

	// RVA: 0x20224CC Offset: 0x20224CC VA: 0x20224CC
	public void set_height(int value) { }

	// RVA: 0x2020A24 Offset: 0x2020A24 VA: 0x2020A24
	public Color get_color() { }

	// RVA: 0x20289B0 Offset: 0x20289B0 VA: 0x20289B0
	public void set_color(Color value) { }

	// RVA: 0x2030FA8 Offset: 0x2030FA8 VA: 0x2030FA8 Slot: 7
	public override float get_alpha() { }

	// RVA: 0x2030FB0 Offset: 0x2030FB0 VA: 0x2030FB0 Slot: 8
	public override void set_alpha(float value) { }

	// RVA: 0x2030FD4 Offset: 0x2030FD4 VA: 0x2030FD4
	public bool get_isVisible() { }

	// RVA: 0x2031078 Offset: 0x2031078 VA: 0x2031078
	public bool get_hasVertices() { }

	// RVA: 0x203108C Offset: 0x203108C VA: 0x203108C
	public UIWidget.Pivot get_rawPivot() { }

	// RVA: 0x2031094 Offset: 0x2031094 VA: 0x2031094
	public void set_rawPivot(UIWidget.Pivot value) { }

	// RVA: 0x2030E50 Offset: 0x2030E50 VA: 0x2030E50
	public UIWidget.Pivot get_pivot() { }

	// RVA: 0x2024594 Offset: 0x2024594 VA: 0x2024594
	public void set_pivot(UIWidget.Pivot value) { }

	// RVA: 0x20310EC Offset: 0x20310EC VA: 0x20310EC
	public int get_depth() { }

	// RVA: 0x20310F4 Offset: 0x20310F4 VA: 0x20310F4
	public void set_depth(int value) { }

	// RVA: 0x2031248 Offset: 0x2031248 VA: 0x2031248
	public int get_raycastDepth() { }

	// RVA: 0x20314F0 Offset: 0x20314F0 VA: 0x20314F0 Slot: 10
	public override Vector3[] get_localCorners() { }

	// RVA: 0x20316C4 Offset: 0x20316C4 VA: 0x20316C4 Slot: 22
	public virtual Vector2 get_localSize() { }

	// RVA: 0x20317F8 Offset: 0x20317F8 VA: 0x20317F8
	public Vector3 get_localCenter() { }

	// RVA: 0x20318F0 Offset: 0x20318F0 VA: 0x20318F0 Slot: 11
	public override Vector3[] get_worldCorners() { }

	// RVA: 0x2031B14 Offset: 0x2031B14 VA: 0x2031B14
	public Vector3 get_worldCenter() { }

	// RVA: 0x2031B80 Offset: 0x2031B80 VA: 0x2031B80 Slot: 23
	public virtual Vector4 get_drawingDimensions() { }

	// RVA: 0x2031D60 Offset: 0x2031D60 VA: 0x2031D60 Slot: 24
	public virtual Material get_material() { }

	// RVA: 0x2031D68 Offset: 0x2031D68 VA: 0x2031D68 Slot: 25
	public virtual void set_material(Material value) { }

	// RVA: 0x2031E2C Offset: 0x2031E2C VA: 0x2031E2C Slot: 26
	public virtual Texture get_mainTexture() { }

	// RVA: 0x2031EE0 Offset: 0x2031EE0 VA: 0x2031EE0 Slot: 27
	public virtual void set_mainTexture(Texture value) { }

	// RVA: 0x2031FA4 Offset: 0x2031FA4 VA: 0x2031FA4 Slot: 28
	public virtual Shader get_shader() { }

	// RVA: 0x2032058 Offset: 0x2032058 VA: 0x2032058 Slot: 29
	public virtual void set_shader(Shader value) { }

	// RVA: 0x203211C Offset: 0x203211C VA: 0x203211C
	public Vector2 get_relativeSize() { }

	// RVA: 0x203217C Offset: 0x203217C VA: 0x203217C
	public bool get_hasBoxCollider() { }

	// RVA: 0x2030E58 Offset: 0x2030E58 VA: 0x2030E58
	public void SetDimensions(int w, int h) { }

	// RVA: 0x20322A0 Offset: 0x20322A0 VA: 0x20322A0 Slot: 13
	public override Vector3[] GetSides(Transform relativeTo) { }

	// RVA: 0x2032608 Offset: 0x2032608 VA: 0x2032608 Slot: 9
	public override float CalculateFinalAlpha(int frameID) { }

	// RVA: 0x2032640 Offset: 0x2032640 VA: 0x2032640
	protected void UpdateFinalAlpha(int frameID) { }

	// RVA: 0x203271C Offset: 0x203271C VA: 0x203271C Slot: 12
	public override void Invalidate(bool includeChildren) { }

	// RVA: 0x20328A0 Offset: 0x20328A0 VA: 0x20328A0
	public float CalculateCumulativeAlpha(int frameID) { }

	// RVA: 0x20329B4 Offset: 0x20329B4 VA: 0x20329B4 Slot: 18
	public override void SetRect(float x, float y, float width, float height) { }

	// RVA: 0x2030DA0 Offset: 0x2030DA0 VA: 0x2030DA0
	public void ResizeCollider() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4463C Offset: 0xD4463C VA: 0xD4463C
	[DebuggerStepThroughAttribute] // RVA: 0xD4463C Offset: 0xD4463C VA: 0xD4463C
	// RVA: 0x2032DB8 Offset: 0x2032DB8 VA: 0x2032DB8
	public static int FullCompareFunc(UIWidget left, UIWidget right) { }

	[DebuggerHiddenAttribute] // RVA: 0xD44674 Offset: 0xD44674 VA: 0xD44674
	[DebuggerStepThroughAttribute] // RVA: 0xD44674 Offset: 0xD44674 VA: 0xD44674
	// RVA: 0x2032E70 Offset: 0x2032E70 VA: 0x2032E70
	public static int PanelCompareFunc(UIWidget left, UIWidget right) { }

	// RVA: 0x2033008 Offset: 0x2033008 VA: 0x2033008
	public Bounds CalculateBounds() { }

	// RVA: 0x2021FA4 Offset: 0x2021FA4 VA: 0x2021FA4
	public Bounds CalculateBounds(Transform relativeParent) { }

	// RVA: 0x2033010 Offset: 0x2033010 VA: 0x2033010
	public void SetDirty() { }

	// RVA: 0x202527C Offset: 0x202527C VA: 0x202527C
	public void RemoveFromPanel() { }

	// RVA: 0x20330D4 Offset: 0x20330D4 VA: 0x20330D4 Slot: 30
	public virtual void MarkAsChanged() { }

	// RVA: 0x203132C Offset: 0x203132C VA: 0x203132C
	public UIPanel CreatePanel() { }

	// RVA: 0x20331FC Offset: 0x20331FC VA: 0x20331FC
	public void CheckLayer() { }

	// RVA: 0x2033350 Offset: 0x2033350 VA: 0x2033350 Slot: 19
	public override void ParentHasChanged() { }

	// RVA: 0x20334A0 Offset: 0x20334A0 VA: 0x20334A0 Slot: 31
	protected virtual void Awake() { }

	// RVA: 0x20334D8 Offset: 0x20334D8 VA: 0x20334D8 Slot: 15
	protected override void OnInit() { }

	// RVA: 0x203363C Offset: 0x203363C VA: 0x203363C Slot: 32
	protected virtual void UpgradeFrom265() { }

	// RVA: 0x2033740 Offset: 0x2033740 VA: 0x2033740 Slot: 20
	protected override void OnStart() { }

	// RVA: 0x2033744 Offset: 0x2033744 VA: 0x2033744 Slot: 17
	protected override void OnAnchor() { }

	// RVA: 0x2026278 Offset: 0x2026278 VA: 0x2026278 Slot: 21
	protected override void OnUpdate() { }

	// RVA: 0x203434C Offset: 0x203434C VA: 0x203434C
	private void OnApplicationPause(bool paused) { }

	// RVA: 0x2034364 Offset: 0x2034364 VA: 0x2034364 Slot: 16
	protected override void OnDisable() { }

	// RVA: 0x203438C Offset: 0x203438C VA: 0x203438C
	private void OnDestroy() { }

	// RVA: 0x2032964 Offset: 0x2032964 VA: 0x2032964
	public bool UpdateVisibility(bool visibleByAlpha, bool visibleByPanel) { }

	// RVA: 0x2034390 Offset: 0x2034390 VA: 0x2034390
	public bool UpdateTransform(int frame) { }

	// RVA: 0x203495C Offset: 0x203495C VA: 0x203495C
	public bool UpdateGeometry(int frame) { }

	// RVA: 0x2034E50 Offset: 0x2034E50 VA: 0x2034E50
	public void WriteToBuffers(BetterList<Vector3> v, BetterList<Vector2> u, BetterList<Color32> c, BetterList<Vector3> n, BetterList<Vector4> t) { }

	// RVA: 0x2025E20 Offset: 0x2025E20 VA: 0x2025E20 Slot: 33
	public virtual void MakePixelPerfect() { }

	// RVA: 0x2034EB8 Offset: 0x2034EB8 VA: 0x2034EB8 Slot: 34
	public virtual int get_minWidth() { }

	// RVA: 0x2034EC0 Offset: 0x2034EC0 VA: 0x2034EC0 Slot: 35
	public virtual int get_minHeight() { }

	// RVA: 0x2034EC8 Offset: 0x2034EC8 VA: 0x2034EC8 Slot: 36
	public virtual Vector4 get_border() { }

	// RVA: 0x2034F28 Offset: 0x2034F28 VA: 0x2034F28 Slot: 37
	public virtual void set_border(Vector4 value) { }

	// RVA: 0x2034F2C Offset: 0x2034F2C VA: 0x2034F2C Slot: 38
	public virtual void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }
}

// Namespace: 
public enum UIWidget.Pivot // TypeDefIndex: 12137
{
	// Fields
	public int value__; // 0x0
	public const UIWidget.Pivot TopLeft = 0;
	public const UIWidget.Pivot Top = 1;
	public const UIWidget.Pivot TopRight = 2;
	public const UIWidget.Pivot Left = 3;
	public const UIWidget.Pivot Center = 4;
	public const UIWidget.Pivot Right = 5;
	public const UIWidget.Pivot BottomLeft = 6;
	public const UIWidget.Pivot Bottom = 7;
	public const UIWidget.Pivot BottomRight = 8;
}

// Namespace: 
public sealed class UIWidget.OnDimensionsChanged : MulticastDelegate // TypeDefIndex: 12138
{
	// Methods

	// RVA: 0x203528C Offset: 0x203528C VA: 0x203528C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x203475C Offset: 0x203475C VA: 0x203475C Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x203529C Offset: 0x203529C VA: 0x203529C Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x20352D0 Offset: 0x20352D0 VA: 0x20352D0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UIWidget.OnPostFillCallback : MulticastDelegate // TypeDefIndex: 12139
{
	// Methods

	// RVA: 0x20352DC Offset: 0x20352DC VA: 0x20352DC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20267F8 Offset: 0x20267F8 VA: 0x20267F8 Slot: 11
	public virtual void Invoke(UIWidget widget, int bufferOffset, BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }

	// RVA: 0x20352EC Offset: 0x20352EC VA: 0x20352EC Slot: 12
	public virtual IAsyncResult BeginInvoke(UIWidget widget, int bufferOffset, BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols, AsyncCallback callback, object object) { }

	// RVA: 0x20353A0 Offset: 0x20353A0 VA: 0x20353A0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public enum UIWidget.AspectRatioSource // TypeDefIndex: 12140
{
	// Fields
	public int value__; // 0x0
	public const UIWidget.AspectRatioSource Free = 0;
	public const UIWidget.AspectRatioSource BasedOnWidth = 1;
	public const UIWidget.AspectRatioSource BasedOnHeight = 2;
}

// Namespace: 
public sealed class UIWidget.HitCheck : MulticastDelegate // TypeDefIndex: 12141
{
	// Methods

	// RVA: 0x2034F30 Offset: 0x2034F30 VA: 0x2034F30
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2034F40 Offset: 0x2034F40 VA: 0x2034F40 Slot: 11
	public virtual bool Invoke(Vector3 worldPos) { }

	// RVA: 0x20351C0 Offset: 0x20351C0 VA: 0x20351C0 Slot: 12
	public virtual IAsyncResult BeginInvoke(Vector3 worldPos, AsyncCallback callback, object object) { }

	// RVA: 0x2035250 Offset: 0x2035250 VA: 0x2035250 Slot: 13
	public virtual bool EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC98B10 Offset: 0xC98B10 VA: 0xC98B10
public class AnimatedAlpha : MonoBehaviour // TypeDefIndex: 12142
{
	// Fields
	[RangeAttribute] // RVA: 0xCF1C4C Offset: 0xCF1C4C VA: 0xCF1C4C
	public float alpha; // 0x18
	private UIWidget mWidget; // 0x20
	private UIPanel mPanel; // 0x28

	// Methods

	// RVA: 0x15ACF7C Offset: 0x15ACF7C VA: 0x15ACF7C
	public void .ctor() { }

	// RVA: 0x15ACF8C Offset: 0x15ACF8C VA: 0x15ACF8C
	private void OnEnable() { }

	// RVA: 0x15AD000 Offset: 0x15AD000 VA: 0x15AD000
	private void LateUpdate() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC98B20 Offset: 0xC98B20 VA: 0xC98B20
[RequireComponent] // RVA: 0xC98B20 Offset: 0xC98B20 VA: 0xC98B20
public class AnimatedColor : MonoBehaviour // TypeDefIndex: 12143
{
	// Fields
	public Color color; // 0x18
	private UIWidget mWidget; // 0x28

	// Methods

	// RVA: 0x15AD118 Offset: 0x15AD118 VA: 0x15AD118
	public void .ctor() { }

	// RVA: 0x15AD14C Offset: 0x15AD14C VA: 0x15AD14C
	private void OnEnable() { }

	// RVA: 0x15AD1A8 Offset: 0x15AD1A8 VA: 0x15AD1A8
	private void LateUpdate() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC98B94 Offset: 0xC98B94 VA: 0xC98B94
public class AnimatedWidget : MonoBehaviour // TypeDefIndex: 12144
{
	// Fields
	public float width; // 0x18
	public float height; // 0x1C
	private UIWidget mWidget; // 0x20

	// Methods

	// RVA: 0x15AD200 Offset: 0x15AD200 VA: 0x15AD200
	public void .ctor() { }

	// RVA: 0x15AD210 Offset: 0x15AD210 VA: 0x15AD210
	private void OnEnable() { }

	// RVA: 0x15AD26C Offset: 0x15AD26C VA: 0x15AD26C
	private void LateUpdate() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC98BA4 Offset: 0xC98BA4 VA: 0xC98BA4
public class SpringPosition : MonoBehaviour // TypeDefIndex: 12145
{
	// Fields
	public static SpringPosition current; // 0x0
	public Vector3 target; // 0x18
	public float strength; // 0x24
	public bool worldSpace; // 0x28
	public bool ignoreTimeScale; // 0x29
	public bool updateScrollView; // 0x2A
	public SpringPosition.OnFinished onFinished; // 0x30
	[SerializeField] // RVA: 0xCF1C64 Offset: 0xCF1C64 VA: 0xCF1C64
	[HideInInspector] // RVA: 0xCF1C64 Offset: 0xCF1C64 VA: 0xCF1C64
	private GameObject eventReceiver; // 0x38
	[SerializeField] // RVA: 0xCF1C9C Offset: 0xCF1C9C VA: 0xCF1C9C
	[HideInInspector] // RVA: 0xCF1C9C Offset: 0xCF1C9C VA: 0xCF1C9C
	public string callWhenFinished; // 0x40
	private Transform mTrans; // 0x48
	private float mThreshold; // 0x50
	private UIScrollView mSv; // 0x58

	// Methods

	// RVA: 0x1960BF0 Offset: 0x1960BF0 VA: 0x1960BF0
	public void .ctor() { }

	// RVA: 0x1960C70 Offset: 0x1960C70 VA: 0x1960C70
	private void Start() { }
