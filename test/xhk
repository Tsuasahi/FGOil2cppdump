
	// RVA: 0x134386C Offset: 0x134386C VA: 0x134386C
	public UploadHandler get_uploadHandler() { }

	// RVA: 0x1343418 Offset: 0x1343418 VA: 0x1343418
	public void set_uploadHandler(UploadHandler value) { }

	// RVA: 0x1344ABC Offset: 0x1344ABC VA: 0x1344ABC
	private UnityWebRequest.UnityWebRequestError SetDownloadHandler(DownloadHandler dh) { }

	// RVA: 0x1343864 Offset: 0x1343864 VA: 0x1343864
	public DownloadHandler get_downloadHandler() { }

	// RVA: 0x134332C Offset: 0x134332C VA: 0x134332C
	public void set_downloadHandler(DownloadHandler value) { }

	// RVA: 0x13438D4 Offset: 0x13438D4 VA: 0x13438D4
	public CertificateHandler get_certificateHandler() { }

	// RVA: 0x1344B30 Offset: 0x1344B30 VA: 0x1344B30
	public static UnityWebRequest Get(string uri) { }

	// RVA: 0x1344BD4 Offset: 0x1344BD4 VA: 0x1344BD4
	public static string EscapeURL(string s) { }

	// RVA: 0x1344C44 Offset: 0x1344C44 VA: 0x1344C44
	public static string EscapeURL(string s, Encoding e) { }

	// RVA: 0x1344DC4 Offset: 0x1344DC4 VA: 0x1344DC4
	public static string UnEscapeURL(string s) { }

	// RVA: 0x1344E34 Offset: 0x1344E34 VA: 0x1344E34
	public static string UnEscapeURL(string s, Encoding e) { }
}

// Namespace: 
internal enum UnityWebRequest.UnityWebRequestMethod // TypeDefIndex: 2585
{
	// Fields
	public int value__; // 0x0
	public const UnityWebRequest.UnityWebRequestMethod Get = 0;
	public const UnityWebRequest.UnityWebRequestMethod Post = 1;
	public const UnityWebRequest.UnityWebRequestMethod Put = 2;
	public const UnityWebRequest.UnityWebRequestMethod Head = 3;
	public const UnityWebRequest.UnityWebRequestMethod Custom = 4;
}

// Namespace: 
internal enum UnityWebRequest.UnityWebRequestError // TypeDefIndex: 2586
{
	// Fields
	public int value__; // 0x0
	public const UnityWebRequest.UnityWebRequestError OK = 0;
	public const UnityWebRequest.UnityWebRequestError Unknown = 1;
	public const UnityWebRequest.UnityWebRequestError SDKError = 2;
	public const UnityWebRequest.UnityWebRequestError UnsupportedProtocol = 3;
	public const UnityWebRequest.UnityWebRequestError MalformattedUrl = 4;
	public const UnityWebRequest.UnityWebRequestError CannotResolveProxy = 5;
	public const UnityWebRequest.UnityWebRequestError CannotResolveHost = 6;
	public const UnityWebRequest.UnityWebRequestError CannotConnectToHost = 7;
	public const UnityWebRequest.UnityWebRequestError AccessDenied = 8;
	public const UnityWebRequest.UnityWebRequestError GenericHttpError = 9;
	public const UnityWebRequest.UnityWebRequestError WriteError = 10;
	public const UnityWebRequest.UnityWebRequestError ReadError = 11;
	public const UnityWebRequest.UnityWebRequestError OutOfMemory = 12;
	public const UnityWebRequest.UnityWebRequestError Timeout = 13;
	public const UnityWebRequest.UnityWebRequestError HTTPPostError = 14;
	public const UnityWebRequest.UnityWebRequestError SSLCannotConnect = 15;
	public const UnityWebRequest.UnityWebRequestError Aborted = 16;
	public const UnityWebRequest.UnityWebRequestError TooManyRedirects = 17;
	public const UnityWebRequest.UnityWebRequestError ReceivedNoData = 18;
	public const UnityWebRequest.UnityWebRequestError SSLNotSupported = 19;
	public const UnityWebRequest.UnityWebRequestError FailedToSendData = 20;
	public const UnityWebRequest.UnityWebRequestError FailedToReceiveData = 21;
	public const UnityWebRequest.UnityWebRequestError SSLCertificateError = 22;
	public const UnityWebRequest.UnityWebRequestError SSLCipherNotAvailable = 23;
	public const UnityWebRequest.UnityWebRequestError SSLCACertError = 24;
	public const UnityWebRequest.UnityWebRequestError UnrecognizedContentEncoding = 25;
	public const UnityWebRequest.UnityWebRequestError LoginFailed = 26;
	public const UnityWebRequest.UnityWebRequestError SSLShutdownFailed = 27;
	public const UnityWebRequest.UnityWebRequestError NoInternetConnection = 28;
}

// Namespace: UnityEngine
public class WWWForm // TypeDefIndex: 2587
{
	// Fields
	private List<byte[]> formData; // 0x10
	private List<string> fieldNames; // 0x18
	private List<string> fileNames; // 0x20
	private List<string> types; // 0x28
	private byte[] boundary; // 0x30
	private bool containsFiles; // 0x38

	// Properties
	internal static Encoding DefaultEncoding { get; }
	public Dictionary<string, string> headers { get; }
	public byte[] data { get; }

	// Methods

	// RVA: 0x1345244 Offset: 0x1345244 VA: 0x1345244
	public void .ctor() { }

	// RVA: 0x13453A4 Offset: 0x13453A4 VA: 0x13453A4
	internal static Encoding get_DefaultEncoding() { }

	// RVA: 0x1345404 Offset: 0x1345404 VA: 0x1345404
	public void AddField(string fieldName, string value) { }

	// RVA: 0x134548C Offset: 0x134548C VA: 0x134548C
	public void AddField(string fieldName, string value, Encoding e) { }

	// RVA: 0x13455FC Offset: 0x13455FC VA: 0x13455FC
	public void AddField(string fieldName, int i) { }

	// RVA: 0x1345644 Offset: 0x1345644 VA: 0x1345644
	public void AddBinaryData(string fieldName, byte[] contents, string fileName, string mimeType) { }

	// RVA: 0x1345904 Offset: 0x1345904 VA: 0x1345904
	public Dictionary<string, string> get_headers() { }

	// RVA: 0x1345AA4 Offset: 0x1345AA4 VA: 0x1345AA4
	public byte[] get_data() { }
}

// Namespace: UnityEngine
[VisibleToOtherModulesAttribute] // RVA: 0xC57120 Offset: 0xC57120 VA: 0xC57120
internal class WWWTranscoder // TypeDefIndex: 2588
{
	// Fields
	private static byte[] ucHexChars; // 0x0
	private static byte[] lcHexChars; // 0x8
	private static byte urlEscapeChar; // 0x10
	private static byte[] urlSpace; // 0x18
	private static byte[] dataSpace; // 0x20
	private static byte[] urlForbidden; // 0x28
	private static byte qpEscapeChar; // 0x30
	private static byte[] qpSpace; // 0x38
	private static byte[] qpForbidden; // 0x40

	// Methods

	// RVA: 0x1346F60 Offset: 0x1346F60 VA: 0x1346F60
	private static byte Hex2Byte(byte[] b, int offset) { }

	// RVA: 0x134704C Offset: 0x134704C VA: 0x134704C
	private static byte[] Byte2Hex(byte b, byte[] hexChars) { }

	// RVA: 0x1344D48 Offset: 0x1344D48 VA: 0x1344D48
	public static byte[] URLEncode(byte[] toEncode) { }

	// RVA: 0x1346EE8 Offset: 0x1346EE8 VA: 0x1346EE8
	public static byte[] DataEncode(byte[] toEncode) { }

	// RVA: 0x1346DF0 Offset: 0x1346DF0 VA: 0x1346DF0
	public static string QPEncode(string toEncode, Encoding e) { }

	// RVA: 0x134715C Offset: 0x134715C VA: 0x134715C
	public static byte[] Encode(byte[] input, byte escapeChar, byte[] space, byte[] forbidden, bool uppercase) { }

	// RVA: 0x1347548 Offset: 0x1347548 VA: 0x1347548
	private static bool ByteArrayContains(byte[] array, byte b) { }

	// RVA: 0x1344F2C Offset: 0x1344F2C VA: 0x1344F2C
	public static byte[] URLDecode(byte[] toEncode) { }

	// RVA: 0x13478DC Offset: 0x13478DC VA: 0x13478DC
	private static bool ByteSubArrayEquals(byte[] array, int index, byte[] comperand) { }

	// RVA: 0x13475E0 Offset: 0x13475E0 VA: 0x13475E0
	public static byte[] Decode(byte[] input, byte escapeChar, byte[] space) { }

	// RVA: 0x1346D58 Offset: 0x1346D58 VA: 0x1346D58
	public static bool SevenBitClean(string s, Encoding e) { }

	// RVA: 0x13479C8 Offset: 0x13479C8 VA: 0x13479C8
	public static bool SevenBitClean(byte[] input) { }

	// RVA: 0x1347A6C Offset: 0x1347A6C VA: 0x1347A6C
	private static void .cctor() { }
}

// Namespace: UnityEngineInternal
internal static class WebRequestUtils // TypeDefIndex: 2589
{
	// Fields
	private static Regex domainRegex; // 0x0

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC57628 Offset: 0xC57628 VA: 0xC57628
	// RVA: 0x1347C78 Offset: 0x1347C78 VA: 0x1347C78
	internal static string RedirectTo(string baseUri, string redirectUri) { }

	// RVA: 0x1343FC0 Offset: 0x1343FC0 VA: 0x1343FC0
	internal static string MakeInitialUrl(string targetUrl, string localUrl) { }

	// RVA: 0x1347DA8 Offset: 0x1347DA8 VA: 0x1347DA8
	internal static string MakeUriString(Uri targetUri, string targetUrl, bool prependProtocol) { }

	// RVA: 0x1348330 Offset: 0x1348330 VA: 0x1348330
	private static string URLDecode(string encoded) { }

	// RVA: 0x1348414 Offset: 0x1348414 VA: 0x1348414
	private static void .cctor() { }
}

// Namespace: UnityEngine.Networking
[NativeHeaderAttribute] // RVA: 0xC57198 Offset: 0xC57198 VA: 0xC57198
public class CertificateHandler : IDisposable // TypeDefIndex: 2590
{
	// Fields
	internal IntPtr m_Ptr; // 0x10

	// Methods

	[NativeMethodAttribute] // RVA: 0xC57638 Offset: 0xC57638 VA: 0xC57638
	// RVA: 0x1342470 Offset: 0x1342470 VA: 0x1342470
	private void Release() { }

	// RVA: 0x13424DC Offset: 0x13424DC VA: 0x13424DC Slot: 1
	protected override void Finalize() { }

	// RVA: 0x13425B0 Offset: 0x13425B0 VA: 0x13425B0 Slot: 5
	protected virtual bool ValidateCertificate(byte[] certificateData) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC57670 Offset: 0xC57670 VA: 0xC57670
	// RVA: 0x13425B8 Offset: 0x13425B8 VA: 0x13425B8
	internal bool ValidateCertificateNative(byte[] certificateData) { }

	// RVA: 0x1342550 Offset: 0x1342550 VA: 0x1342550 Slot: 4
	public void Dispose() { }
}

// Namespace: UnityEngine.Networking
[NativeHeaderAttribute] // RVA: 0xC571D0 Offset: 0xC571D0 VA: 0xC571D0
public class DownloadHandler : IDisposable // TypeDefIndex: 2591
{
	// Fields
	[VisibleToOtherModulesAttribute] // RVA: 0xC573D8 Offset: 0xC573D8 VA: 0xC573D8
	internal IntPtr m_Ptr; // 0x10

	// Properties
	public byte[] data { get; }
	public string text { get; }

	// Methods

	[VisibleToOtherModulesAttribute] // RVA: 0xC57680 Offset: 0xC57680 VA: 0xC57680
	// RVA: 0x13425C4 Offset: 0x13425C4 VA: 0x13425C4
	internal void .ctor() { }

	[NativeMethodAttribute] // RVA: 0xC57690 Offset: 0xC57690 VA: 0xC57690
	// RVA: 0x13425CC Offset: 0x13425CC VA: 0x13425CC
	private void Release() { }

	// RVA: 0x1342638 Offset: 0x1342638 VA: 0x1342638 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x13426AC Offset: 0x13426AC VA: 0x13426AC Slot: 4
	public void Dispose() { }

	// RVA: 0x134270C Offset: 0x134270C VA: 0x134270C
	public byte[] get_data() { }

	// RVA: 0x1342718 Offset: 0x1342718 VA: 0x1342718
	public string get_text() { }

	// RVA: 0x1342724 Offset: 0x1342724 VA: 0x1342724 Slot: 5
	protected virtual byte[] GetData() { }

	// RVA: 0x134272C Offset: 0x134272C VA: 0x134272C Slot: 6
	protected virtual string GetText() { }

	// RVA: 0x13427D8 Offset: 0x13427D8 VA: 0x13427D8
	private Encoding GetTextEncoder() { }

	// RVA: 0x1342B34 Offset: 0x1342B34 VA: 0x1342B34
	private string GetContentType() { }

	[UsedByNativeCodeAttribute] // RVA: 0xC576C8 Offset: 0xC576C8 VA: 0xC576C8
	// RVA: 0x1342BA0 Offset: 0x1342BA0 VA: 0x1342BA0 Slot: 7
	protected virtual bool ReceiveData(byte[] data, int dataLength) { }

	[UsedByNativeCodeAttribute] // RVA: 0xC576D8 Offset: 0xC576D8 VA: 0xC576D8
	// RVA: 0x1342BA8 Offset: 0x1342BA8 VA: 0x1342BA8 Slot: 8
	protected virtual void ReceiveContentLength(int contentLength) { }

	[UsedByNativeCodeAttribute] // RVA: 0xC576E8 Offset: 0xC576E8 VA: 0xC576E8
	// RVA: 0x1342BAC Offset: 0x1342BAC VA: 0x1342BAC Slot: 9
	protected virtual void CompleteContent() { }

	[UsedByNativeCodeAttribute] // RVA: 0xC576F8 Offset: 0xC576F8 VA: 0xC576F8
	// RVA: 0x1342BB0 Offset: 0x1342BB0 VA: 0x1342BB0 Slot: 10
	protected virtual float GetProgress() { }

	// RVA: -1 Offset: -1
	protected static T GetCheckedDownloader<T>(UnityWebRequest www) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x219FDA4 Offset: 0x219FDA4 VA: 0x219FDA4
	|-DownloadHandler.GetCheckedDownloader<DownloadHandlerAssetBundle>
	|-DownloadHandler.GetCheckedDownloader<object>
	*/

	[VisibleToOtherModulesAttribute] // RVA: 0xC57708 Offset: 0xC57708 VA: 0xC57708
	[NativeThrowsAttribute] // RVA: 0xC57708 Offset: 0xC57708 VA: 0xC57708
	// RVA: 0x1342BB8 Offset: 0x1342BB8 VA: 0x1342BB8
	internal static byte[] InternalGetByteArray(DownloadHandler dh) { }
}

// Namespace: UnityEngine.Networking
[NativeHeaderAttribute] // RVA: 0xC57208 Offset: 0xC57208 VA: 0xC57208
public sealed class DownloadHandlerBuffer : DownloadHandler // TypeDefIndex: 2592
{
	// Methods

	// RVA: 0x1342C24 Offset: 0x1342C24 VA: 0x1342C24
	public void .ctor() { }

	// RVA: 0x1342C78 Offset: 0x1342C78 VA: 0x1342C78
	private static IntPtr Create(DownloadHandlerBuffer obj) { }

	// RVA: 0x1342C54 Offset: 0x1342C54 VA: 0x1342C54
	private void InternalCreateBuffer() { }

	// RVA: 0x1342CE4 Offset: 0x1342CE4 VA: 0x1342CE4 Slot: 5
	protected override byte[] GetData() { }

	// RVA: 0x1342CE8 Offset: 0x1342CE8 VA: 0x1342CE8
	private byte[] InternalGetData() { }
}

// Namespace: UnityEngine.Networking
[NativeHeaderAttribute] // RVA: 0xC57240 Offset: 0xC57240 VA: 0xC57240
public class DownloadHandlerScript : DownloadHandler // TypeDefIndex: 2593
{
	// Methods

	// RVA: 0x1342CEC Offset: 0x1342CEC VA: 0x1342CEC
	public void .ctor() { }

	// RVA: 0x1342D40 Offset: 0x1342D40 VA: 0x1342D40
	public void .ctor(byte[] preallocatedBuffer) { }

	// RVA: 0x1342E20 Offset: 0x1342E20 VA: 0x1342E20
	private static IntPtr Create(DownloadHandlerScript obj) { }

	// RVA: 0x1342E8C Offset: 0x1342E8C VA: 0x1342E8C
	private static IntPtr CreatePreallocated(DownloadHandlerScript obj, byte[] preallocatedBuffer) { }

	// RVA: 0x1342D1C Offset: 0x1342D1C VA: 0x1342D1C
	private void InternalCreateScript() { }

	// RVA: 0x1342DFC Offset: 0x1342DFC VA: 0x1342DFC
	private void InternalCreateScript(byte[] preallocatedBuffer) { }
}

// Namespace: UnityEngine.Networking
[NativeHeaderAttribute] // RVA: 0xC57278 Offset: 0xC57278 VA: 0xC57278
public class UploadHandler : IDisposable // TypeDefIndex: 2594
{
	// Fields
	internal IntPtr m_Ptr; // 0x10

	// Properties
	public string contentType { set; }

	// Methods

	// RVA: 0x1344FA8 Offset: 0x1344FA8 VA: 0x1344FA8
	internal void .ctor() { }

	[NativeMethodAttribute] // RVA: 0xC57740 Offset: 0xC57740 VA: 0xC57740
	// RVA: 0x1344FB0 Offset: 0x1344FB0 VA: 0x1344FB0
	private void Release() { }

	// RVA: 0x134501C Offset: 0x134501C VA: 0x134501C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1343874 Offset: 0x1343874 VA: 0x1343874 Slot: 4
	public void Dispose() { }

	// RVA: 0x1345090 Offset: 0x1345090 VA: 0x1345090
	public void set_contentType(string value) { }

	// RVA: 0x134509C Offset: 0x134509C VA: 0x134509C Slot: 5
	internal virtual void SetContentType(string newContentType) { }
}

// Namespace: UnityEngine.Networking
[NativeHeaderAttribute] // RVA: 0xC572B0 Offset: 0xC572B0 VA: 0xC572B0
public sealed class UploadHandlerRaw : UploadHandler // TypeDefIndex: 2595
{
	// Methods

	// RVA: 0x13450A0 Offset: 0x13450A0 VA: 0x13450A0
	public void .ctor(byte[] data) { }

	// RVA: 0x1345158 Offset: 0x1345158 VA: 0x1345158
	private static IntPtr Create(UploadHandlerRaw self, byte[] data) { }

	[NativeMethodAttribute] // RVA: 0xC57778 Offset: 0xC57778 VA: 0xC57778
	// RVA: 0x13451CC Offset: 0x13451CC VA: 0x13451CC
	private void InternalSetContentType(string newContentType) { }

	// RVA: 0x1345240 Offset: 0x1345240 VA: 0x1345240 Slot: 5
	internal override void SetContentType(string newContentType) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2596
{}

// Namespace: UnityEngine
internal class AudioExtensionDefinition // TypeDefIndex: 2597
{
	// Fields
	private string assemblyName; // 0x10
	private string extensionNamespace; // 0x18
	private string extensionTypeName; // 0x20
	private Type extensionType; // 0x28

	// Methods

	// RVA: 0x1355000 Offset: 0x1355000 VA: 0x1355000
	public Type GetExtensionType() { }
}

// Namespace: UnityEngine
internal class AudioSpatializerExtensionDefinition // TypeDefIndex: 2598
{
	// Fields
	public PropertyName spatializerName; // 0x10
	public AudioExtensionDefinition definition; // 0x18
}

// Namespace: UnityEngine
internal class AudioAmbisonicExtensionDefinition // TypeDefIndex: 2599
{
	// Fields
	public PropertyName ambisonicPluginName; // 0x10
	public AudioExtensionDefinition definition; // 0x18
}

// Namespace: UnityEngine
internal class AudioListenerExtension : ScriptableObject // TypeDefIndex: 2600
{
	// Fields
	[SerializeField] // RVA: 0xC58D38 Offset: 0xC58D38 VA: 0xC58D38
	private AudioListener m_audioListener; // 0x18

	// Properties
	public AudioListener audioListener { get; set; }

	// Methods

	// RVA: 0x13572CC Offset: 0x13572CC VA: 0x13572CC
	public void .ctor() { }

	// RVA: 0x1356500 Offset: 0x1356500 VA: 0x1356500
	public AudioListener get_audioListener() { }

	// RVA: 0x13562EC Offset: 0x13562EC VA: 0x13562EC
	public void set_audioListener(AudioListener value) { }

	// RVA: 0x13572D4 Offset: 0x13572D4 VA: 0x13572D4 Slot: 4
	public virtual float ReadExtensionProperty(PropertyName propertyName) { }

	// RVA: 0x13572DC Offset: 0x13572DC VA: 0x13572DC Slot: 5
	public virtual void WriteExtensionProperty(PropertyName propertyName, float propertyValue) { }

	// RVA: 0x13572E0 Offset: 0x13572E0 VA: 0x13572E0 Slot: 6
	public virtual void ExtensionUpdate() { }
}

// Namespace: UnityEngine
internal class AudioSourceExtension : ScriptableObject // TypeDefIndex: 2601
{
	// Fields
	[SerializeField] // RVA: 0xC58D48 Offset: 0xC58D48 VA: 0xC58D48
	private AudioSource m_audioSource; // 0x18
	internal int m_ExtensionManagerUpdateIndex; // 0x20

	// Properties
	public AudioSource audioSource { get; set; }

	// Methods

	// RVA: 0x135850C Offset: 0x135850C VA: 0x135850C
	public void .ctor() { }

	// RVA: 0x1355D98 Offset: 0x1355D98 VA: 0x1355D98
	public AudioSource get_audioSource() { }

	// RVA: 0x13557D0 Offset: 0x13557D0 VA: 0x13557D0
	public void set_audioSource(AudioSource value) { }

	// RVA: 0x135851C Offset: 0x135851C VA: 0x135851C Slot: 4
	public virtual float ReadExtensionProperty(PropertyName propertyName) { }

	// RVA: 0x1358524 Offset: 0x1358524 VA: 0x1358524 Slot: 5
	public virtual void WriteExtensionProperty(PropertyName propertyName, float propertyValue) { }

	// RVA: 0x1358528 Offset: 0x1358528 VA: 0x1358528 Slot: 6
	public virtual void Play() { }

	// RVA: 0x135852C Offset: 0x135852C VA: 0x135852C Slot: 7
	public virtual void Stop() { }

	// RVA: 0x1358530 Offset: 0x1358530 VA: 0x1358530 Slot: 8
	public virtual void ExtensionUpdate() { }

	// RVA: 0x1358534 Offset: 0x1358534 VA: 0x1358534
	public void OnDestroy() { }
}

// Namespace: UnityEngine
internal sealed class AudioExtensionManager // TypeDefIndex: 2602
{
	// Fields
	private static List<AudioSpatializerExtensionDefinition> m_ListenerSpatializerExtensionDefinitions; // 0x0
	private static List<AudioSpatializerExtensionDefinition> m_SourceSpatializerExtensionDefinitions; // 0x8
	private static List<AudioAmbisonicExtensionDefinition> m_SourceAmbisonicDecoderExtensionDefinitions; // 0x10
	private static List<AudioSourceExtension> m_SourceExtensionsToUpdate; // 0x18
	private static int m_NextStopIndex; // 0x20
	private static bool m_BuiltinDefinitionsRegistered; // 0x24
	private static PropertyName m_SpatializerName; // 0x28
	private static PropertyName m_SpatializerExtensionName; // 0x2C
	private static PropertyName m_ListenerSpatializerExtensionName; // 0x30

	// Methods

	// RVA: 0x1355278 Offset: 0x1355278 VA: 0x1355278
	internal static AudioSourceExtension AddSpatializerExtension(AudioSource source) { }

	// RVA: 0x13559E4 Offset: 0x13559E4 VA: 0x13559E4
	internal static AudioSourceExtension AddAmbisonicDecoderExtension(AudioSource source) { }

	// RVA: 0x13557D8 Offset: 0x13557D8 VA: 0x13557D8
	internal static void WriteExtensionProperties(AudioSourceExtension extension, string extensionName) { }

	// RVA: 0x1355EF4 Offset: 0x1355EF4 VA: 0x1355EF4
	internal static AudioListenerExtension AddSpatializerExtension(AudioListener listener) { }

	// RVA: 0x13562F4 Offset: 0x13562F4 VA: 0x13562F4
	internal static void WriteExtensionProperties(AudioListenerExtension extension, string extensionName) { }

	// RVA: 0x135665C Offset: 0x135665C VA: 0x135665C
	internal static void AddExtensionToManager(AudioSourceExtension extension) { }

	// RVA: 0x135675C Offset: 0x135675C VA: 0x135675C
	internal static void RemoveExtensionFromManager(AudioSourceExtension extension) { }

	// RVA: 0x1356944 Offset: 0x1356944 VA: 0x1356944
	internal static void Update() { }

	// RVA: 0x1356ECC Offset: 0x1356ECC VA: 0x1356ECC
	internal static void GetReadyToPlay(AudioSourceExtension extension) { }

	// RVA: 0x1355588 Offset: 0x1355588 VA: 0x1355588
	private static void RegisterBuiltinDefinitions() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC58FB0 Offset: 0xC58FB0 VA: 0xC58FB0
	// RVA: 0x1356E08 Offset: 0x1356E08 VA: 0x1356E08
	internal static Object GetAudioListener() { }

	// RVA: 0x1356F8C Offset: 0x1356F8C VA: 0x1356F8C
	private static void .cctor() { }
}

// Namespace: UnityEngine.Audio
[NativeHeaderAttribute] // RVA: 0xC589B8 Offset: 0xC589B8 VA: 0xC589B8
[RequiredByNativeCodeAttribute] // RVA: 0xC589B8 Offset: 0xC589B8 VA: 0xC589B8
[StaticAccessorAttribute] // RVA: 0xC589B8 Offset: 0xC589B8 VA: 0xC589B8
[NativeHeaderAttribute] // RVA: 0xC589B8 Offset: 0xC589B8 VA: 0xC589B8
[NativeHeaderAttribute] // RVA: 0xC589B8 Offset: 0xC589B8 VA: 0xC589B8
public struct AudioPlayableOutput : IPlayableOutput // TypeDefIndex: 2603
{
	// Fields
	private PlayableOutputHandle m_Handle; // 0x0

	// Methods

	// RVA: 0xBC1310 Offset: 0xBC1310 VA: 0xBC1310 Slot: 4
	public PlayableOutputHandle GetHandle() { }
}

// Namespace: UnityEngine.Audio
[NativeHeaderAttribute] // RVA: 0xC58A74 Offset: 0xC58A74 VA: 0xC58A74
[RequiredByNativeCodeAttribute] // RVA: 0xC58A74 Offset: 0xC58A74 VA: 0xC58A74
[NativeHeaderAttribute] // RVA: 0xC58A74 Offset: 0xC58A74 VA: 0xC58A74
[NativeHeaderAttribute] // RVA: 0xC58A74 Offset: 0xC58A74 VA: 0xC58A74
[StaticAccessorAttribute] // RVA: 0xC58A74 Offset: 0xC58A74 VA: 0xC58A74
public struct AudioClipPlayable : IPlayable, IEquatable<AudioClipPlayable> // TypeDefIndex: 2604
{
	// Fields
	private PlayableHandle m_Handle; // 0x0

	// Methods

	// RVA: 0xBC12E8 Offset: 0xBC12E8 VA: 0xBC12E8 Slot: 4
	public PlayableHandle GetHandle() { }

	// RVA: 0xBC12F4 Offset: 0xBC12F4 VA: 0xBC12F4 Slot: 5
	public bool Equals(AudioClipPlayable other) { }
}

// Namespace: UnityEngine.Audio
[NativeHeaderAttribute] // RVA: 0xC58B30 Offset: 0xC58B30 VA: 0xC58B30
[RequiredByNativeCodeAttribute] // RVA: 0xC58B30 Offset: 0xC58B30 VA: 0xC58B30
[NativeHeaderAttribute] // RVA: 0xC58B30 Offset: 0xC58B30 VA: 0xC58B30
[NativeHeaderAttribute] // RVA: 0xC58B30 Offset: 0xC58B30 VA: 0xC58B30
[StaticAccessorAttribute] // RVA: 0xC58B30 Offset: 0xC58B30 VA: 0xC58B30
public struct AudioMixerPlayable : IPlayable, IEquatable<AudioMixerPlayable> // TypeDefIndex: 2605
{
	// Fields
	private PlayableHandle m_Handle; // 0x0

	// Methods

	// RVA: 0xBC12FC Offset: 0xBC12FC VA: 0xBC12FC Slot: 4
	public PlayableHandle GetHandle() { }

	// RVA: 0xBC1308 Offset: 0xBC1308 VA: 0xBC1308 Slot: 5
	public bool Equals(AudioMixerPlayable other) { }
}

// Namespace: UnityEngine.Experimental.Audio
[StaticAccessorAttribute] // RVA: 0xC58BEC Offset: 0xC58BEC VA: 0xC58BEC
[NativeTypeAttribute] // RVA: 0xC58BEC Offset: 0xC58BEC VA: 0xC58BEC
public class AudioSampleProvider : IDisposable // TypeDefIndex: 2606
{
	// Fields
	private AudioSampleProvider.ConsumeSampleFramesNativeFunction m_ConsumeSampleFramesNativeFunction; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC58D58 Offset: 0xC58D58 VA: 0xC58D58
	[DebuggerBrowsableAttribute] // RVA: 0xC58D58 Offset: 0xC58D58 VA: 0xC58D58
	private uint <id>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC58D94 Offset: 0xC58D94 VA: 0xC58D94
	[DebuggerBrowsableAttribute] // RVA: 0xC58D94 Offset: 0xC58D94 VA: 0xC58D94
	private ushort <trackIndex>k__BackingField; // 0x1C
	[CompilerGeneratedAttribute] // RVA: 0xC58DD0 Offset: 0xC58DD0 VA: 0xC58DD0
	[DebuggerBrowsableAttribute] // RVA: 0xC58DD0 Offset: 0xC58DD0 VA: 0xC58DD0
	private Object <owner>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC58E0C Offset: 0xC58E0C VA: 0xC58E0C
	[DebuggerBrowsableAttribute] // RVA: 0xC58E0C Offset: 0xC58E0C VA: 0xC58E0C
	private ushort <channelCount>k__BackingField; // 0x28
	[DebuggerBrowsableAttribute] // RVA: 0xC58E48 Offset: 0xC58E48 VA: 0xC58E48
	[CompilerGeneratedAttribute] // RVA: 0xC58E48 Offset: 0xC58E48 VA: 0xC58E48
	private uint <sampleRate>k__BackingField; // 0x2C
	[CompilerGeneratedAttribute] // RVA: 0xC58E84 Offset: 0xC58E84 VA: 0xC58E84
	[DebuggerBrowsableAttribute] // RVA: 0xC58E84 Offset: 0xC58E84 VA: 0xC58E84
	private AudioSampleProvider.SampleFramesHandler sampleFramesAvailable; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC58EC0 Offset: 0xC58EC0 VA: 0xC58EC0
	[DebuggerBrowsableAttribute] // RVA: 0xC58EC0 Offset: 0xC58EC0 VA: 0xC58EC0
	private AudioSampleProvider.SampleFramesHandler sampleFramesOverflow; // 0x38

	// Properties
	public uint id { get; set; }

	// Methods

	// RVA: 0x1358694 Offset: 0x1358694 VA: 0x1358694 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1358708 Offset: 0x1358708 VA: 0x1358708 Slot: 4
	public void Dispose() { }

	[CompilerGeneratedAttribute] // RVA: 0xC58FC0 Offset: 0xC58FC0 VA: 0xC58FC0
	// RVA: 0x1358740 Offset: 0x1358740 VA: 0x1358740
	public uint get_id() { }

	[CompilerGeneratedAttribute] // RVA: 0xC58FD0 Offset: 0xC58FD0 VA: 0xC58FD0
	// RVA: 0x13587BC Offset: 0x13587BC VA: 0x13587BC
	private void set_id(uint value) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC58FE0 Offset: 0xC58FE0 VA: 0xC58FE0
	// RVA: 0x13587C4 Offset: 0x13587C4 VA: 0x13587C4
	private void InvokeSampleFramesAvailable(int sampleFrameCount) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC58FF0 Offset: 0xC58FF0 VA: 0xC58FF0
	// RVA: 0x1358BA8 Offset: 0x1358BA8 VA: 0x1358BA8
	private void InvokeSampleFramesOverflow(int droppedSampleFrameCount) { }

	[NativeMethodAttribute] // RVA: 0xC59000 Offset: 0xC59000 VA: 0xC59000
	// RVA: 0x1358748 Offset: 0x1358748 VA: 0x1358748
	private static void InternalSetScriptingPtr(uint providerId, AudioSampleProvider provider) { }
}

// Namespace: 
[UnmanagedFunctionPointerAttribute] // RVA: 0xC58C5C Offset: 0xC58C5C VA: 0xC58C5C
public sealed class AudioSampleProvider.ConsumeSampleFramesNativeFunction : MulticastDelegate // TypeDefIndex: 2607
{
	// Methods

	// RVA: 0x1358BCC Offset: 0x1358BCC VA: 0x1358BCC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1358BDC Offset: 0x1358BDC VA: 0x1358BDC Slot: 11
	public virtual uint Invoke(uint providerId, IntPtr interleavedSampleFrames, uint sampleFrameCount) { }

	// RVA: 0x1358E4C Offset: 0x1358E4C VA: 0x1358E4C Slot: 12
	public virtual IAsyncResult BeginInvoke(uint providerId, IntPtr interleavedSampleFrames, uint sampleFrameCount, AsyncCallback callback, object object) { }

	// RVA: 0x1358F10 Offset: 0x1358F10 VA: 0x1358F10 Slot: 13
	public virtual uint EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class AudioSampleProvider.SampleFramesHandler : MulticastDelegate // TypeDefIndex: 2608
{
	// Methods

	// RVA: 0x1358F4C Offset: 0x1358F4C VA: 0x1358F4C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x13587E8 Offset: 0x13587E8 VA: 0x13587E8 Slot: 11
	public virtual void Invoke(AudioSampleProvider provider, uint sampleFrameCount) { }

	// RVA: 0x1358F5C Offset: 0x1358F5C VA: 0x1358F5C Slot: 12
	public virtual IAsyncResult BeginInvoke(AudioSampleProvider provider, uint sampleFrameCount, AsyncCallback callback, object object) { }

	// RVA: 0x1358FF8 Offset: 0x1358FF8 VA: 0x1358FF8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine
public sealed class AudioSettings // TypeDefIndex: 2609
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC58EFC Offset: 0xC58EFC VA: 0xC58EFC
	[DebuggerBrowsableAttribute] // RVA: 0xC58EFC Offset: 0xC58EFC VA: 0xC58EFC
	private static AudioSettings.AudioConfigurationChangeHandler OnAudioConfigurationChanged; // 0x0

	// Methods

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC59038 Offset: 0xC59038 VA: 0xC59038
	// RVA: 0x135569C Offset: 0x135569C VA: 0x135569C
	public static string GetSpatializerPluginName() { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC59048 Offset: 0xC59048 VA: 0xC59048
	// RVA: 0x13572E4 Offset: 0x13572E4 VA: 0x13572E4
	internal static void InvokeOnAudioConfigurationChanged(bool deviceWasChanged) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC59058 Offset: 0xC59058 VA: 0xC59058
	// RVA: 0x135757C Offset: 0x135757C VA: 0x135757C
	internal static void InvokeOnAudioManagerUpdate() { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC59068 Offset: 0xC59068 VA: 0xC59068
	// RVA: 0x13575D8 Offset: 0x13575D8 VA: 0x13575D8
	internal static void InvokeOnAudioSourcePlay(AudioSource source) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC59078 Offset: 0xC59078 VA: 0xC59078
	// RVA: 0x1355C64 Offset: 0x1355C64 VA: 0x1355C64
	internal static string GetAmbisonicDecoderPluginName() { }
}

// Namespace: 
public sealed class AudioSettings.AudioConfigurationChangeHandler : MulticastDelegate // TypeDefIndex: 2610
{
	// Methods

	// RVA: 0x1357804 Offset: 0x1357804 VA: 0x1357804
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1357350 Offset: 0x1357350 VA: 0x1357350 Slot: 11
	public virtual void Invoke(bool deviceWasChanged) { }

	// RVA: 0x1357814 Offset: 0x1357814 VA: 0x1357814 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool deviceWasChanged, AsyncCallback callback, object object) { }

	// RVA: 0x13578A4 Offset: 0x13578A4 VA: 0x13578A4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine
public sealed class AudioClip : Object // TypeDefIndex: 2611
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC58F38 Offset: 0xC58F38 VA: 0xC58F38
	[DebuggerBrowsableAttribute] // RVA: 0xC58F38 Offset: 0xC58F38 VA: 0xC58F38
	private AudioClip.PCMReaderCallback m_PCMReaderCallback; // 0x18
	[DebuggerBrowsableAttribute] // RVA: 0xC58F74 Offset: 0xC58F74 VA: 0xC58F74
	[CompilerGeneratedAttribute] // RVA: 0xC58F74 Offset: 0xC58F74 VA: 0xC58F74
	private AudioClip.PCMSetPositionCallback m_PCMSetPositionCallback; // 0x20

	// Properties
	public float length { get; }
	public bool ambisonic { get; }

	// Methods

	// RVA: 0x13540FC Offset: 0x13540FC VA: 0x13540FC
	private void .ctor() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC59088 Offset: 0xC59088 VA: 0xC59088
	// RVA: 0x1354168 Offset: 0x1354168 VA: 0x1354168
	public float get_length() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC59098 Offset: 0xC59098 VA: 0xC59098
	// RVA: 0x13541D4 Offset: 0x13541D4 VA: 0x13541D4
	public bool get_ambisonic() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC590A8 Offset: 0xC590A8 VA: 0xC590A8
	// RVA: 0x1354240 Offset: 0x1354240 VA: 0x1354240
	public bool SetData(float[] data, int offsetSamples) { }

	[ObsoleteAttribute] // RVA: 0xC590B8 Offset: 0xC590B8 VA: 0xC590B8
	// RVA: 0x13542C4 Offset: 0x13542C4 VA: 0x13542C4
	public static AudioClip Create(string name, int lengthSamples, int channels, int frequency, bool _3D, bool stream) { }

	// RVA: 0x13542D4 Offset: 0x13542D4 VA: 0x13542D4
	public static AudioClip Create(string name, int lengthSamples, int channels, int frequency, bool stream) { }

	// RVA: 0x13542E4 Offset: 0x13542E4 VA: 0x13542E4
	public static AudioClip Create(string name, int lengthSamples, int channels, int frequency, bool stream, AudioClip.PCMReaderCallback pcmreadercallback, AudioClip.PCMSetPositionCallback pcmsetpositioncallback) { }

	// RVA: 0x13544D0 Offset: 0x13544D0 VA: 0x13544D0
	private void add_m_PCMReaderCallback(AudioClip.PCMReaderCallback value) { }

	// RVA: 0x135474C Offset: 0x135474C VA: 0x135474C
	private void remove_m_PCMReaderCallback(AudioClip.PCMReaderCallback value) { }

	// RVA: 0x13545BC Offset: 0x13545BC VA: 0x13545BC
	private void add_m_PCMSetPositionCallback(AudioClip.PCMSetPositionCallback value) { }

	// RVA: 0x1354838 Offset: 0x1354838 VA: 0x1354838
	private void remove_m_PCMSetPositionCallback(AudioClip.PCMSetPositionCallback value) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC590F0 Offset: 0xC590F0 VA: 0xC590F0
	// RVA: 0x1354924 Offset: 0x1354924 VA: 0x1354924
	private void InvokePCMReaderCallback_Internal(float[] data) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC59100 Offset: 0xC59100 VA: 0xC59100
	// RVA: 0x1354CD8 Offset: 0x1354CD8 VA: 0x1354CD8
	private void InvokePCMSetPositionCallback_Internal(int position) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC59110 Offset: 0xC59110 VA: 0xC59110
	// RVA: 0x1354478 Offset: 0x1354478 VA: 0x1354478
	private static AudioClip Construct_Internal() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC59120 Offset: 0xC59120 VA: 0xC59120
	// RVA: 0x13546A8 Offset: 0x13546A8 VA: 0x13546A8
	private void Init_Internal(string name, int lengthSamples, int channels, int frequency, bool stream) { }
}

// Namespace: 
public sealed class AudioClip.PCMReaderCallback : MulticastDelegate // TypeDefIndex: 2612
{
	// Methods

	// RVA: 0x1354F18 Offset: 0x1354F18 VA: 0x1354F18
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1354938 Offset: 0x1354938 VA: 0x1354938 Slot: 11
	public virtual void Invoke(float[] data) { }

	// RVA: 0x1354F28 Offset: 0x1354F28 VA: 0x1354F28 Slot: 12
	public virtual IAsyncResult BeginInvoke(float[] data, AsyncCallback callback, object object) { }

	// RVA: 0x1354F4C Offset: 0x1354F4C VA: 0x1354F4C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class AudioClip.PCMSetPositionCallback : MulticastDelegate // TypeDefIndex: 2613
{
	// Methods

	// RVA: 0x1354F58 Offset: 0x1354F58 VA: 0x1354F58
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1354CEC Offset: 0x1354CEC VA: 0x1354CEC Slot: 11
	public virtual void Invoke(int position) { }

	// RVA: 0x1354F68 Offset: 0x1354F68 VA: 0x1354F68 Slot: 12
	public virtual IAsyncResult BeginInvoke(int position, AsyncCallback callback, object object) { }

	// RVA: 0x1354FF4 Offset: 0x1354FF4 VA: 0x1354FF4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine
public class AudioBehaviour : Behaviour // TypeDefIndex: 2614
{}

// Namespace: UnityEngine
[RequireComponent] // RVA: 0xC58C70 Offset: 0xC58C70 VA: 0xC58C70
public sealed class AudioListener : AudioBehaviour // TypeDefIndex: 2615
{
	// Fields
	internal AudioListenerExtension spatializerExtension; // 0x18

	// Properties
	public static float volume { set; }

	// Methods

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC59130 Offset: 0xC59130 VA: 0xC59130
	// RVA: 0x13570E0 Offset: 0x13570E0 VA: 0x13570E0
	public static void set_volume(float value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC59140 Offset: 0xC59140 VA: 0xC59140
	// RVA: 0x13565CC Offset: 0x13565CC VA: 0x13565CC
	internal int GetNumExtensionProperties() { }

	// RVA: 0x1356508 Offset: 0x1356508 VA: 0x1356508
	internal PropertyName ReadExtensionName(int listenerIndex) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC59150 Offset: 0xC59150 VA: 0xC59150
	// RVA: 0x1357150 Offset: 0x1357150 VA: 0x1357150
	private static void INTERNAL_CALL_ReadExtensionName(AudioListener self, int listenerIndex, out PropertyName value) { }

	// RVA: 0x1356530 Offset: 0x1356530 VA: 0x1356530
	internal PropertyName ReadExtensionPropertyName(int listenerIndex) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC59160 Offset: 0xC59160 VA: 0xC59160
	// RVA: 0x13571D4 Offset: 0x13571D4 VA: 0x13571D4
	private static void INTERNAL_CALL_ReadExtensionPropertyName(AudioListener self, int listenerIndex, out PropertyName value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC59170 Offset: 0xC59170 VA: 0xC59170
	// RVA: 0x1356558 Offset: 0x1356558 VA: 0x1356558
	internal float ReadExtensionPropertyValue(int listenerIndex) { }

	// RVA: 0x1356638 Offset: 0x1356638 VA: 0x1356638
	internal void ClearExtensionProperties(PropertyName extensionName) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC59180 Offset: 0xC59180 VA: 0xC59180
	// RVA: 0x1357258 Offset: 0x1357258 VA: 0x1357258
	private static void INTERNAL_CALL_ClearExtensionProperties(AudioListener self, ref PropertyName extensionName) { }

	// RVA: 0x1356210 Offset: 0x1356210 VA: 0x1356210
	internal AudioListenerExtension AddExtension(Type extensionType) { }
}

// Namespace: UnityEngine
[RequireComponent] // RVA: 0xC58CD4 Offset: 0xC58CD4 VA: 0xC58CD4
public sealed class AudioSource : AudioBehaviour // TypeDefIndex: 2616
{
	// Fields
	internal AudioSourceExtension spatializerExtension; // 0x18
	internal AudioSourceExtension ambisonicExtension; // 0x20

	// Properties
	public float volume { get; set; }
	public float pitch { get; set; }
	public float time { set; }
	[ThreadAndSerializationSafeAttribute] // RVA: 0xC59400 Offset: 0xC59400 VA: 0xC59400
	public AudioClip clip { get; set; }
	public bool isPlaying { get; }
	public bool loop { set; }
	public bool playOnAwake { set; }
	public float spatialBlend { set; }
	internal bool spatializeInternal { get; }
	public bool spatialize { get; }
	public int priority { set; }
	public bool mute { set; }

	// Methods

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC59190 Offset: 0xC59190 VA: 0xC59190
	// RVA: 0x13578B0 Offset: 0x13578B0 VA: 0x13578B0
	public float get_volume() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC591A0 Offset: 0xC591A0 VA: 0xC591A0
	// RVA: 0x135791C Offset: 0x135791C VA: 0x135791C
	public void set_volume(float value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC591B0 Offset: 0xC591B0 VA: 0xC591B0
	// RVA: 0x1357990 Offset: 0x1357990 VA: 0x1357990
	public float get_pitch() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC591C0 Offset: 0xC591C0 VA: 0xC591C0
	// RVA: 0x13579FC Offset: 0x13579FC VA: 0x13579FC
	public void set_pitch(float value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC591D0 Offset: 0xC591D0 VA: 0xC591D0
	// RVA: 0x1357A70 Offset: 0x1357A70 VA: 0x1357A70
	public void set_time(float value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC591E0 Offset: 0xC591E0 VA: 0xC591E0
	// RVA: 0x1357798 Offset: 0x1357798 VA: 0x1357798
	public AudioClip get_clip() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC591F0 Offset: 0xC591F0 VA: 0xC591F0
	// RVA: 0x1357AE4 Offset: 0x1357AE4 VA: 0x1357AE4
	public void set_clip(AudioClip value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC59200 Offset: 0xC59200 VA: 0xC59200
	// RVA: 0x1357B58 Offset: 0x1357B58 VA: 0x1357B58
	public void Play(ulong delay) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC59210 Offset: 0xC59210 VA: 0xC59210
	// RVA: 0x1357BCC Offset: 0x1357BCC VA: 0x1357BCC
	public void Play() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC59220 Offset: 0xC59220 VA: 0xC59220
	// RVA: 0x1357BD4 Offset: 0x1357BD4 VA: 0x1357BD4
	public void Stop() { }
