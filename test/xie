	private readonly Vector3[] m_Corners; // 0xA8

	// Properties
	public MaskableGraphic.CullStateChangedEvent onCullStateChanged { get; set; }
	public bool maskable { get; set; }
	private Rect rootCanvasRect { get; }

	// Methods

	// RVA: 0x21104EC Offset: 0x21104EC VA: 0x21104EC
	protected void .ctor() { }

	// RVA: 0x21105F4 Offset: 0x21105F4 VA: 0x21105F4
	public MaskableGraphic.CullStateChangedEvent get_onCullStateChanged() { }

	// RVA: 0x21105FC Offset: 0x21105FC VA: 0x21105FC
	public void set_onCullStateChanged(MaskableGraphic.CullStateChangedEvent value) { }

	// RVA: 0x2110604 Offset: 0x2110604 VA: 0x2110604
	public bool get_maskable() { }

	// RVA: 0x211060C Offset: 0x211060C VA: 0x211060C
	public void set_maskable(bool value) { }

	// RVA: 0x2110644 Offset: 0x2110644 VA: 0x2110644 Slot: 57
	public virtual Material GetModifiedMaterial(Material baseMaterial) { }

	// RVA: 0x21107C4 Offset: 0x21107C4 VA: 0x21107C4 Slot: 58
	public virtual void Cull(Rect clipRect, bool validRect) { }

	// RVA: 0x2110B54 Offset: 0x2110B54 VA: 0x2110B54
	private void UpdateCull(bool cull) { }

	// RVA: 0x2110C58 Offset: 0x2110C58 VA: 0x2110C58 Slot: 59
	public virtual void SetClipRect(Rect clipRect, bool validRect) { }

	// RVA: 0x2110CE4 Offset: 0x2110CE4 VA: 0x2110CE4 Slot: 5
	protected override void OnEnable() { }

	// RVA: 0x2110F38 Offset: 0x2110F38 VA: 0x2110F38 Slot: 7
	protected override void OnDisable() { }

	// RVA: 0x2111038 Offset: 0x2111038 VA: 0x2111038 Slot: 12
	protected override void OnTransformParentChanged() { }

	[EditorBrowsableAttribute] // RVA: 0xC15940 Offset: 0xC15940 VA: 0xC15940
	[ObsoleteAttribute] // RVA: 0xC15940 Offset: 0xC15940 VA: 0xC15940
	// RVA: 0x2111098 Offset: 0x2111098 VA: 0x2111098 Slot: 60
	public virtual void ParentMaskStateChanged() { }

	// RVA: 0x211109C Offset: 0x211109C VA: 0x211109C Slot: 15
	protected override void OnCanvasHierarchyChanged() { }

	// RVA: 0x2110824 Offset: 0x2110824 VA: 0x2110824
	private Rect get_rootCanvasRect() { }

	// RVA: 0x2110DB4 Offset: 0x2110DB4 VA: 0x2110DB4
	private void UpdateClipParent() { }

	// RVA: 0x21112B8 Offset: 0x21112B8 VA: 0x21112B8 Slot: 61
	public virtual void RecalculateClipping() { }

	// RVA: 0x21112BC Offset: 0x21112BC VA: 0x21112BC Slot: 62
	public virtual void RecalculateMasking() { }

	// RVA: 0x2111344 Offset: 0x2111344 VA: 0x2111344 Slot: 50
	private GameObject UnityEngine.UI.IClippable.get_gameObject() { }
}

// Namespace: 
[Serializable]
public class MaskableGraphic.CullStateChangedEvent : UnityEvent<bool> // TypeDefIndex: 3100
{
	// Methods

	// RVA: 0x21105A4 Offset: 0x21105A4 VA: 0x21105A4
	public void .ctor() { }
}

// Namespace: UnityEngine.UI
internal static class Misc // TypeDefIndex: 3101
{
	// Methods

	// RVA: 0x211134C Offset: 0x211134C VA: 0x211134C
	public static void Destroy(Object obj) { }

	// RVA: 0x2111478 Offset: 0x2111478 VA: 0x2111478
	public static void DestroyImmediate(Object obj) { }
}

// Namespace: UnityEngine.UI
internal static class MultipleDisplayUtilities // TypeDefIndex: 3102
{
	// Methods

	// RVA: 0x2111550 Offset: 0x2111550 VA: 0x2111550
	public static bool GetRelativeMousePositionForDrag(PointerEventData eventData, ref Vector2 position) { }

	// RVA: 0x21116D8 Offset: 0x21116D8 VA: 0x21116D8
	public static Vector2 GetMousePositionRelativeToMainDisplayResolution() { }
}

// Namespace: UnityEngine.UI
[Serializable]
public struct Navigation : IEquatable<Navigation> // TypeDefIndex: 3103
{
	// Fields
	[SerializeField] // RVA: 0xC1473C Offset: 0xC1473C VA: 0xC1473C
	private Navigation.Mode m_Mode; // 0x0
	[SerializeField] // RVA: 0xC1474C Offset: 0xC1474C VA: 0xC1474C
	private Selectable m_SelectOnUp; // 0x8
	[SerializeField] // RVA: 0xC1475C Offset: 0xC1475C VA: 0xC1475C
	private Selectable m_SelectOnDown; // 0x10
	[SerializeField] // RVA: 0xC1476C Offset: 0xC1476C VA: 0xC1476C
	private Selectable m_SelectOnLeft; // 0x18
	[SerializeField] // RVA: 0xC1477C Offset: 0xC1477C VA: 0xC1477C
	private Selectable m_SelectOnRight; // 0x20

	// Properties
	public Navigation.Mode mode { get; set; }
	public Selectable selectOnUp { get; set; }
	public Selectable selectOnDown { get; set; }
	public Selectable selectOnLeft { get; set; }
	public Selectable selectOnRight { get; set; }
	public static Navigation defaultNavigation { get; }

	// Methods

	// RVA: 0xD66004 Offset: 0xD66004 VA: 0xD66004
	public Navigation.Mode get_mode() { }

	// RVA: 0xD6600C Offset: 0xD6600C VA: 0xD6600C
	public void set_mode(Navigation.Mode value) { }

	// RVA: 0xD66014 Offset: 0xD66014 VA: 0xD66014
	public Selectable get_selectOnUp() { }

	// RVA: 0xD6601C Offset: 0xD6601C VA: 0xD6601C
	public void set_selectOnUp(Selectable value) { }

	// RVA: 0xD66024 Offset: 0xD66024 VA: 0xD66024
	public Selectable get_selectOnDown() { }

	// RVA: 0xD6602C Offset: 0xD6602C VA: 0xD6602C
	public void set_selectOnDown(Selectable value) { }

	// RVA: 0xD66034 Offset: 0xD66034 VA: 0xD66034
	public Selectable get_selectOnLeft() { }

	// RVA: 0xD6603C Offset: 0xD6603C VA: 0xD6603C
	public void set_selectOnLeft(Selectable value) { }

	// RVA: 0xD66044 Offset: 0xD66044 VA: 0xD66044
	public Selectable get_selectOnRight() { }

	// RVA: 0xD6604C Offset: 0xD6604C VA: 0xD6604C
	public void set_selectOnRight(Selectable value) { }

	// RVA: 0x2111930 Offset: 0x2111930 VA: 0x2111930
	public static Navigation get_defaultNavigation() { }

	// RVA: 0xD66054 Offset: 0xD66054 VA: 0xD66054 Slot: 4
	public bool Equals(Navigation other) { }
}

// Namespace: 
[FlagsAttribute] // RVA: 0xC12588 Offset: 0xC12588 VA: 0xC12588
public enum Navigation.Mode // TypeDefIndex: 3104
{
	// Fields
	public int value__; // 0x0
	public const Navigation.Mode None = 0;
	public const Navigation.Mode Horizontal = 1;
	public const Navigation.Mode Vertical = 2;
	public const Navigation.Mode Automatic = 3;
	public const Navigation.Mode Explicit = 4;
}

// Namespace: UnityEngine.UI
[AddComponentMenu] // RVA: 0xC12598 Offset: 0xC12598 VA: 0xC12598
public class RawImage : MaskableGraphic // TypeDefIndex: 3105
{
	// Fields
	[FormerlySerializedAsAttribute] // RVA: 0xC1478C Offset: 0xC1478C VA: 0xC1478C
	[SerializeField] // RVA: 0xC1478C Offset: 0xC1478C VA: 0xC1478C
	private Texture m_Texture; // 0xB0
	[SerializeField] // RVA: 0xC147D8 Offset: 0xC147D8 VA: 0xC147D8
	private Rect m_UVRect; // 0xB8

	// Properties
	public override Texture mainTexture { get; }
	public Texture texture { get; set; }
	public Rect uvRect { get; set; }

	// Methods

	// RVA: 0x21128E8 Offset: 0x21128E8 VA: 0x21128E8
	protected void .ctor() { }

	// RVA: 0x211295C Offset: 0x211295C VA: 0x211295C Slot: 35
	public override Texture get_mainTexture() { }

	// RVA: 0x2112AF0 Offset: 0x2112AF0 VA: 0x2112AF0
	public Texture get_texture() { }

	// RVA: 0x2112AF8 Offset: 0x2112AF8 VA: 0x2112AF8
	public void set_texture(Texture value) { }

	// RVA: 0x2112BB4 Offset: 0x2112BB4 VA: 0x2112BB4
	public Rect get_uvRect() { }

	// RVA: 0x2112BC0 Offset: 0x2112BC0 VA: 0x2112BC0
	public void set_uvRect(Rect value) { }

	// RVA: 0x2112C50 Offset: 0x2112C50 VA: 0x2112C50 Slot: 45
	public override void SetNativeSize() { }

	// RVA: 0x2112E50 Offset: 0x2112E50 VA: 0x2112E50 Slot: 44
	protected override void OnPopulateMesh(VertexHelper vh) { }
}

// Namespace: UnityEngine.UI
[AddComponentMenu] // RVA: 0xC125D4 Offset: 0xC125D4 VA: 0xC125D4
[ExecuteAlways] // RVA: 0xC125D4 Offset: 0xC125D4 VA: 0xC125D4
[DisallowMultipleComponent] // RVA: 0xC125D4 Offset: 0xC125D4 VA: 0xC125D4
[RequireComponent] // RVA: 0xC125D4 Offset: 0xC125D4 VA: 0xC125D4
public class RectMask2D : UIBehaviour, IClipper, ICanvasRaycastFilter // TypeDefIndex: 3106
{
	// Fields
	private readonly RectangularVertexClipper m_VertexClipper; // 0x18
	private RectTransform m_RectTransform; // 0x20
	private HashSet<IClippable> m_ClipTargets; // 0x28
	private bool m_ShouldRecalculateClipRects; // 0x30
	private List<RectMask2D> m_Clippers; // 0x38
	private Rect m_LastClipRectCanvasSpace; // 0x40
	private bool m_ForceClip; // 0x50
	private Canvas m_Canvas; // 0x58
	private Vector3[] m_Corners; // 0x60

	// Properties
	private Canvas Canvas { get; }
	public Rect canvasRect { get; }
	public RectTransform rectTransform { get; }
	private Rect rootCanvasRect { get; }

	// Methods

	// RVA: 0x21134F4 Offset: 0x21134F4 VA: 0x21134F4
	protected void .ctor() { }

	// RVA: 0x2113630 Offset: 0x2113630 VA: 0x2113630
	private Canvas get_Canvas() { }

	// RVA: 0x21137CC Offset: 0x21137CC VA: 0x21137CC
	public Rect get_canvasRect() { }

	// RVA: 0x2113820 Offset: 0x2113820 VA: 0x2113820
	public RectTransform get_rectTransform() { }

	// RVA: 0x2113B6C Offset: 0x2113B6C VA: 0x2113B6C Slot: 5
	protected override void OnEnable() { }

	// RVA: 0x2113BA8 Offset: 0x2113BA8 VA: 0x2113BA8 Slot: 7
	protected override void OnDisable() { }

	// RVA: 0x2113C4C Offset: 0x2113C4C VA: 0x2113C4C Slot: 19
	public virtual bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera) { }

	// RVA: 0x2113D14 Offset: 0x2113D14 VA: 0x2113D14
	private Rect get_rootCanvasRect() { }

	// RVA: 0x2113FD4 Offset: 0x2113FD4 VA: 0x2113FD4 Slot: 20
	public virtual void PerformClipping() { }

	// RVA: 0x2111204 Offset: 0x2111204 VA: 0x2111204
	public void AddClippable(IClippable clippable) { }

	// RVA: 0x21110FC Offset: 0x21110FC VA: 0x21110FC
	public void RemoveClippable(IClippable clippable) { }

	// RVA: 0x2114428 Offset: 0x2114428 VA: 0x2114428 Slot: 12
	protected override void OnTransformParentChanged() { }

	// RVA: 0x2114454 Offset: 0x2114454 VA: 0x2114454 Slot: 15
	protected override void OnCanvasHierarchyChanged() { }
}

// Namespace: UnityEngine.UI
[AddComponentMenu] // RVA: 0xC12680 Offset: 0xC12680 VA: 0xC12680
[SelectionBaseAttribute] // RVA: 0xC12680 Offset: 0xC12680 VA: 0xC12680
[ExecuteAlways] // RVA: 0xC12680 Offset: 0xC12680 VA: 0xC12680
[DisallowMultipleComponent] // RVA: 0xC12680 Offset: 0xC12680 VA: 0xC12680
[RequireComponent] // RVA: 0xC12680 Offset: 0xC12680 VA: 0xC12680
public class ScrollRect : UIBehaviour, IInitializePotentialDragHandler, IBeginDragHandler, IEndDragHandler, IDragHandler, IScrollHandler, ICanvasElement, ILayoutElement, ILayoutGroup, IEventSystemHandler, ILayoutController // TypeDefIndex: 3107
{
	// Fields
	[SerializeField] // RVA: 0xC147E8 Offset: 0xC147E8 VA: 0xC147E8
	private RectTransform m_Content; // 0x18
	[SerializeField] // RVA: 0xC147F8 Offset: 0xC147F8 VA: 0xC147F8
	private bool m_Horizontal; // 0x20
	[SerializeField] // RVA: 0xC14808 Offset: 0xC14808 VA: 0xC14808
	private bool m_Vertical; // 0x21
	[SerializeField] // RVA: 0xC14818 Offset: 0xC14818 VA: 0xC14818
	private ScrollRect.MovementType m_MovementType; // 0x24
	[SerializeField] // RVA: 0xC14828 Offset: 0xC14828 VA: 0xC14828
	private float m_Elasticity; // 0x28
	[SerializeField] // RVA: 0xC14838 Offset: 0xC14838 VA: 0xC14838
	private bool m_Inertia; // 0x2C
	[SerializeField] // RVA: 0xC14848 Offset: 0xC14848 VA: 0xC14848
	private float m_DecelerationRate; // 0x30
	[SerializeField] // RVA: 0xC14858 Offset: 0xC14858 VA: 0xC14858
	private float m_ScrollSensitivity; // 0x34
	[SerializeField] // RVA: 0xC14868 Offset: 0xC14868 VA: 0xC14868
	private RectTransform m_Viewport; // 0x38
	[SerializeField] // RVA: 0xC14878 Offset: 0xC14878 VA: 0xC14878
	private Scrollbar m_HorizontalScrollbar; // 0x40
	[SerializeField] // RVA: 0xC14888 Offset: 0xC14888 VA: 0xC14888
	private Scrollbar m_VerticalScrollbar; // 0x48
	[SerializeField] // RVA: 0xC14898 Offset: 0xC14898 VA: 0xC14898
	private ScrollRect.ScrollbarVisibility m_HorizontalScrollbarVisibility; // 0x50
	[SerializeField] // RVA: 0xC148A8 Offset: 0xC148A8 VA: 0xC148A8
	private ScrollRect.ScrollbarVisibility m_VerticalScrollbarVisibility; // 0x54
	[SerializeField] // RVA: 0xC148B8 Offset: 0xC148B8 VA: 0xC148B8
	private float m_HorizontalScrollbarSpacing; // 0x58
	[SerializeField] // RVA: 0xC148C8 Offset: 0xC148C8 VA: 0xC148C8
	private float m_VerticalScrollbarSpacing; // 0x5C
	[SerializeField] // RVA: 0xC148D8 Offset: 0xC148D8 VA: 0xC148D8
	private ScrollRect.ScrollRectEvent m_OnValueChanged; // 0x60
	private Vector2 m_PointerStartLocalCursor; // 0x68
	protected Vector2 m_ContentStartPosition; // 0x70
	private RectTransform m_ViewRect; // 0x78
	protected Bounds m_ContentBounds; // 0x80
	private Bounds m_ViewBounds; // 0x98
	private Vector2 m_Velocity; // 0xB0
	private bool m_Dragging; // 0xB8
	private bool m_Scrolling; // 0xB9
	private Vector2 m_PrevPosition; // 0xBC
	private Bounds m_PrevContentBounds; // 0xC4
	private Bounds m_PrevViewBounds; // 0xDC
	private bool m_HasRebuiltLayout; // 0xF4
	private bool m_HSliderExpand; // 0xF5
	private bool m_VSliderExpand; // 0xF6
	private float m_HSliderHeight; // 0xF8
	private float m_VSliderWidth; // 0xFC
	private RectTransform m_Rect; // 0x100
	private RectTransform m_HorizontalScrollbarRect; // 0x108
	private RectTransform m_VerticalScrollbarRect; // 0x110
	private DrivenRectTransformTracker m_Tracker; // 0x118
	private readonly Vector3[] m_Corners; // 0x120

	// Properties
	public RectTransform content { get; set; }
	public bool horizontal { get; set; }
	public bool vertical { get; set; }
	public ScrollRect.MovementType movementType { get; set; }
	public float elasticity { get; set; }
	public bool inertia { get; set; }
	public float decelerationRate { get; set; }
	public float scrollSensitivity { get; set; }
	public RectTransform viewport { get; set; }
	public Scrollbar horizontalScrollbar { get; set; }
	public Scrollbar verticalScrollbar { get; set; }
	public ScrollRect.ScrollbarVisibility horizontalScrollbarVisibility { get; set; }
	public ScrollRect.ScrollbarVisibility verticalScrollbarVisibility { get; set; }
	public float horizontalScrollbarSpacing { get; set; }
	public float verticalScrollbarSpacing { get; set; }
	public ScrollRect.ScrollRectEvent onValueChanged { get; set; }
	protected RectTransform viewRect { get; }
	public Vector2 velocity { get; set; }
	private RectTransform rectTransform { get; }
	public Vector2 normalizedPosition { get; set; }
	public float horizontalNormalizedPosition { get; set; }
	public float verticalNormalizedPosition { get; set; }
	private bool hScrollingNeeded { get; }
	private bool vScrollingNeeded { get; }
	public virtual float minWidth { get; }
	public virtual float preferredWidth { get; }
	public virtual float flexibleWidth { get; }
	public virtual float minHeight { get; }
	public virtual float preferredHeight { get; }
	public virtual float flexibleHeight { get; }
	public virtual int layoutPriority { get; }

	// Methods

	// RVA: 0x2116F9C Offset: 0x2116F9C VA: 0x2116F9C
	protected void .ctor() { }

	// RVA: 0x21170E0 Offset: 0x21170E0 VA: 0x21170E0
	public RectTransform get_content() { }

	// RVA: 0x21170E8 Offset: 0x21170E8 VA: 0x21170E8
	public void set_content(RectTransform value) { }

	// RVA: 0x21170F0 Offset: 0x21170F0 VA: 0x21170F0
	public bool get_horizontal() { }

	// RVA: 0x21170F8 Offset: 0x21170F8 VA: 0x21170F8
	public void set_horizontal(bool value) { }

	// RVA: 0x2117104 Offset: 0x2117104 VA: 0x2117104
	public bool get_vertical() { }

	// RVA: 0x211710C Offset: 0x211710C VA: 0x211710C
	public void set_vertical(bool value) { }

	// RVA: 0x2117118 Offset: 0x2117118 VA: 0x2117118
	public ScrollRect.MovementType get_movementType() { }

	// RVA: 0x2117120 Offset: 0x2117120 VA: 0x2117120
	public void set_movementType(ScrollRect.MovementType value) { }

	// RVA: 0x2117128 Offset: 0x2117128 VA: 0x2117128
	public float get_elasticity() { }

	// RVA: 0x2117130 Offset: 0x2117130 VA: 0x2117130
	public void set_elasticity(float value) { }

	// RVA: 0x2117138 Offset: 0x2117138 VA: 0x2117138
	public bool get_inertia() { }

	// RVA: 0x2117140 Offset: 0x2117140 VA: 0x2117140
	public void set_inertia(bool value) { }

	// RVA: 0x211714C Offset: 0x211714C VA: 0x211714C
	public float get_decelerationRate() { }

	// RVA: 0x2117154 Offset: 0x2117154 VA: 0x2117154
	public void set_decelerationRate(float value) { }

	// RVA: 0x211715C Offset: 0x211715C VA: 0x211715C
	public float get_scrollSensitivity() { }

	// RVA: 0x2117164 Offset: 0x2117164 VA: 0x2117164
	public void set_scrollSensitivity(float value) { }

	// RVA: 0x211716C Offset: 0x211716C VA: 0x211716C
	public RectTransform get_viewport() { }

	// RVA: 0x2117174 Offset: 0x2117174 VA: 0x2117174
	public void set_viewport(RectTransform value) { }

	// RVA: 0x211723C Offset: 0x211723C VA: 0x211723C
	public Scrollbar get_horizontalScrollbar() { }

	// RVA: 0x2117244 Offset: 0x2117244 VA: 0x2117244
	public void set_horizontalScrollbar(Scrollbar value) { }

	// RVA: 0x21173DC Offset: 0x21173DC VA: 0x21173DC
	public Scrollbar get_verticalScrollbar() { }

	// RVA: 0x21173E4 Offset: 0x21173E4 VA: 0x21173E4
	public void set_verticalScrollbar(Scrollbar value) { }

	// RVA: 0x2117574 Offset: 0x2117574 VA: 0x2117574
	public ScrollRect.ScrollbarVisibility get_horizontalScrollbarVisibility() { }

	// RVA: 0x211757C Offset: 0x211757C VA: 0x211757C
	public void set_horizontalScrollbarVisibility(ScrollRect.ScrollbarVisibility value) { }

	// RVA: 0x2117584 Offset: 0x2117584 VA: 0x2117584
	public ScrollRect.ScrollbarVisibility get_verticalScrollbarVisibility() { }

	// RVA: 0x211758C Offset: 0x211758C VA: 0x211758C
	public void set_verticalScrollbarVisibility(ScrollRect.ScrollbarVisibility value) { }

	// RVA: 0x2117594 Offset: 0x2117594 VA: 0x2117594
	public float get_horizontalScrollbarSpacing() { }

	// RVA: 0x211759C Offset: 0x211759C VA: 0x211759C
	public void set_horizontalScrollbarSpacing(float value) { }

	// RVA: 0x2117638 Offset: 0x2117638 VA: 0x2117638
	public float get_verticalScrollbarSpacing() { }

	// RVA: 0x2117640 Offset: 0x2117640 VA: 0x2117640
	public void set_verticalScrollbarSpacing(float value) { }

	// RVA: 0x2117648 Offset: 0x2117648 VA: 0x2117648
	public ScrollRect.ScrollRectEvent get_onValueChanged() { }

	// RVA: 0x2117650 Offset: 0x2117650 VA: 0x2117650
	public void set_onValueChanged(ScrollRect.ScrollRectEvent value) { }

	// RVA: 0x2117658 Offset: 0x2117658 VA: 0x2117658
	protected RectTransform get_viewRect() { }

	// RVA: 0x2117790 Offset: 0x2117790 VA: 0x2117790
	public Vector2 get_velocity() { }

	// RVA: 0x2117798 Offset: 0x2117798 VA: 0x2117798
	public void set_velocity(Vector2 value) { }

	// RVA: 0x21177A0 Offset: 0x21177A0 VA: 0x21177A0
	private RectTransform get_rectTransform() { }

	// RVA: 0x2117838 Offset: 0x2117838 VA: 0x2117838 Slot: 38
	public virtual void Rebuild(CanvasUpdate executing) { }

	// RVA: 0x2118588 Offset: 0x2118588 VA: 0x2118588 Slot: 39
	public virtual void LayoutComplete() { }

	// RVA: 0x211858C Offset: 0x211858C VA: 0x211858C Slot: 40
	public virtual void GraphicUpdateComplete() { }

	// RVA: 0x21178EC Offset: 0x21178EC VA: 0x21178EC
	private void UpdateCachedData() { }

	// RVA: 0x2118590 Offset: 0x2118590 VA: 0x2118590 Slot: 5
	protected override void OnEnable() { }

	// RVA: 0x211874C Offset: 0x211874C VA: 0x211874C Slot: 7
	protected override void OnDisable() { }

	// RVA: 0x2118978 Offset: 0x2118978 VA: 0x2118978 Slot: 9
	public override bool IsActive() { }

	// RVA: 0x2118A08 Offset: 0x2118A08 VA: 0x2118A08
	private void EnsureLayoutHasRebuilt() { }

	// RVA: 0x2118A8C Offset: 0x2118A8C VA: 0x2118A8C Slot: 41
	public virtual void StopMovement() { }

	// RVA: 0x2118AF8 Offset: 0x2118AF8 VA: 0x2118AF8 Slot: 42
	public virtual void OnScroll(PointerEventData data) { }

	// RVA: 0x2118E10 Offset: 0x2118E10 VA: 0x2118E10 Slot: 43
	public virtual void OnInitializePotentialDrag(PointerEventData eventData) { }

	// RVA: 0x2118EA4 Offset: 0x2118EA4 VA: 0x2118EA4 Slot: 44
	public virtual void OnBeginDrag(PointerEventData eventData) { }

	// RVA: 0x2119020 Offset: 0x2119020 VA: 0x2119020 Slot: 45
	public virtual void OnEndDrag(PointerEventData eventData) { }

	// RVA: 0x2119060 Offset: 0x2119060 VA: 0x2119060 Slot: 46
	public virtual void OnDrag(PointerEventData eventData) { }

	// RVA: 0x211939C Offset: 0x211939C VA: 0x211939C Slot: 47
	protected virtual void SetContentAnchoredPosition(Vector2 position) { }

	// RVA: 0x21194E0 Offset: 0x21194E0 VA: 0x21194E0 Slot: 48
	protected virtual void LateUpdate() { }

	// RVA: 0x21184A4 Offset: 0x21184A4 VA: 0x21184A4
	protected void UpdatePrevData() { }

	// RVA: 0x2118238 Offset: 0x2118238 VA: 0x2118238
	private void UpdateScrollbars(Vector2 offset) { }

	// RVA: 0x2119BD4 Offset: 0x2119BD4 VA: 0x2119BD4
	public Vector2 get_normalizedPosition() { }

	// RVA: 0x2119FC8 Offset: 0x2119FC8 VA: 0x2119FC8
	public void set_normalizedPosition(Vector2 value) { }

	// RVA: 0x2119D20 Offset: 0x2119D20 VA: 0x2119D20
	public float get_horizontalNormalizedPosition() { }

	// RVA: 0x211A01C Offset: 0x211A01C VA: 0x211A01C
	public void set_horizontalNormalizedPosition(float value) { }

	// RVA: 0x2119E78 Offset: 0x2119E78 VA: 0x2119E78
	public float get_verticalNormalizedPosition() { }

	// RVA: 0x211A030 Offset: 0x211A030 VA: 0x211A030
	public void set_verticalNormalizedPosition(float value) { }

	// RVA: 0x211A044 Offset: 0x211A044 VA: 0x211A044
	private void SetHorizontalNormalizedPosition(float value) { }

	// RVA: 0x211A058 Offset: 0x211A058 VA: 0x211A058
	private void SetVerticalNormalizedPosition(float value) { }

	// RVA: 0x211A06C Offset: 0x211A06C VA: 0x211A06C Slot: 49
	protected virtual void SetNormalizedPosition(float value, int axis) { }

	// RVA: 0x21192F0 Offset: 0x21192F0 VA: 0x21192F0
	private static float RubberDelta(float overStretching, float viewSize) { }

	// RVA: 0x211A2B8 Offset: 0x211A2B8 VA: 0x211A2B8 Slot: 10
	protected override void OnRectTransformDimensionsChange() { }

	// RVA: 0x211A2BC Offset: 0x211A2BC VA: 0x211A2BC
	private bool get_hScrollingNeeded() { }

	// RVA: 0x211A324 Offset: 0x211A324 VA: 0x211A324
	private bool get_vScrollingNeeded() { }

	// RVA: 0x211A38C Offset: 0x211A38C VA: 0x211A38C Slot: 50
	public virtual void CalculateLayoutInputHorizontal() { }

	// RVA: 0x211A390 Offset: 0x211A390 VA: 0x211A390 Slot: 51
	public virtual void CalculateLayoutInputVertical() { }

	// RVA: 0x211A394 Offset: 0x211A394 VA: 0x211A394 Slot: 52
	public virtual float get_minWidth() { }

	// RVA: 0x211A39C Offset: 0x211A39C VA: 0x211A39C Slot: 53
	public virtual float get_preferredWidth() { }

	// RVA: 0x211A3A4 Offset: 0x211A3A4 VA: 0x211A3A4 Slot: 54
	public virtual float get_flexibleWidth() { }

	// RVA: 0x211A3AC Offset: 0x211A3AC VA: 0x211A3AC Slot: 55
	public virtual float get_minHeight() { }

	// RVA: 0x211A3B4 Offset: 0x211A3B4 VA: 0x211A3B4 Slot: 56
	public virtual float get_preferredHeight() { }

	// RVA: 0x211A3BC Offset: 0x211A3BC VA: 0x211A3BC Slot: 57
	public virtual float get_flexibleHeight() { }

	// RVA: 0x211A3C4 Offset: 0x211A3C4 VA: 0x211A3C4 Slot: 58
	public virtual int get_layoutPriority() { }

	// RVA: 0x211A3CC Offset: 0x211A3CC VA: 0x211A3CC Slot: 59
	public virtual void SetLayoutHorizontal() { }

	// RVA: 0x211ABE0 Offset: 0x211ABE0 VA: 0x211ABE0 Slot: 60
	public virtual void SetLayoutVertical() { }

	// RVA: 0x2119C2C Offset: 0x2119C2C VA: 0x2119C2C
	private void UpdateScrollbarVisibility() { }

	// RVA: 0x211B120 Offset: 0x211B120 VA: 0x211B120
	private static void UpdateOneScrollbarVisibility(bool xScrollingNeeded, bool xAxisEnabled, ScrollRect.ScrollbarVisibility scrollbarVisibility, Scrollbar scrollbar) { }

	// RVA: 0x211AD54 Offset: 0x211AD54 VA: 0x211AD54
	private void UpdateScrollbarLayout() { }

	// RVA: 0x2117D14 Offset: 0x2117D14 VA: 0x2117D14
	protected void UpdateBounds() { }

	// RVA: 0x211B260 Offset: 0x211B260 VA: 0x211B260
	internal static void AdjustBounds(ref Bounds viewBounds, ref Vector2 contentPivot, ref Vector3 contentSize, ref Vector3 contentPos) { }

	// RVA: 0x211AAB0 Offset: 0x211AAB0 VA: 0x211AAB0
	private Bounds GetBounds() { }

	// RVA: 0x211B3A0 Offset: 0x211B3A0 VA: 0x211B3A0
	internal static Bounds InternalGetBounds(Vector3[] corners, ref Matrix4x4 viewWorldToLocalMatrix) { }

	// RVA: 0x2118DD4 Offset: 0x2118DD4 VA: 0x2118DD4
	private Vector2 CalculateOffset(Vector2 delta) { }

	// RVA: 0x211B5A8 Offset: 0x211B5A8 VA: 0x211B5A8
	internal static Vector2 InternalCalculateOffset(ref Bounds viewBounds, ref Bounds contentBounds, bool horizontal, bool vertical, ScrollRect.MovementType movementType, ref Vector2 delta) { }

	// RVA: 0x21175A4 Offset: 0x21175A4 VA: 0x21175A4
	protected void SetDirty() { }

	// RVA: 0x211717C Offset: 0x211717C VA: 0x211717C
	protected void SetDirtyCaching() { }

	// RVA: 0x211B78C Offset: 0x211B78C VA: 0x211B78C Slot: 23
	private Transform UnityEngine.UI.ICanvasElement.get_transform() { }
}

// Namespace: 
public enum ScrollRect.MovementType // TypeDefIndex: 3108
{
	// Fields
	public int value__; // 0x0
	public const ScrollRect.MovementType Unrestricted = 0;
	public const ScrollRect.MovementType Elastic = 1;
	public const ScrollRect.MovementType Clamped = 2;
}

// Namespace: 
public enum ScrollRect.ScrollbarVisibility // TypeDefIndex: 3109
{
	// Fields
	public int value__; // 0x0
	public const ScrollRect.ScrollbarVisibility Permanent = 0;
	public const ScrollRect.ScrollbarVisibility AutoHide = 1;
	public const ScrollRect.ScrollbarVisibility AutoHideAndExpandViewport = 2;
}

// Namespace: 
[Serializable]
public class ScrollRect.ScrollRectEvent : UnityEvent<Vector2> // TypeDefIndex: 3110
{
	// Methods

	// RVA: 0x2117090 Offset: 0x2117090 VA: 0x2117090
	public void .ctor() { }
}

// Namespace: UnityEngine.UI
[AddComponentMenu] // RVA: 0xC1273C Offset: 0xC1273C VA: 0xC1273C
[RequireComponent] // RVA: 0xC1273C Offset: 0xC1273C VA: 0xC1273C
public class Scrollbar : Selectable, IBeginDragHandler, IDragHandler, IInitializePotentialDragHandler, ICanvasElement, IEventSystemHandler // TypeDefIndex: 3111
{
	// Fields
	[SerializeField] // RVA: 0xC148E8 Offset: 0xC148E8 VA: 0xC148E8
	private RectTransform m_HandleRect; // 0xD8
	[SerializeField] // RVA: 0xC148F8 Offset: 0xC148F8 VA: 0xC148F8
	private Scrollbar.Direction m_Direction; // 0xE0
	[RangeAttribute] // RVA: 0xC14908 Offset: 0xC14908 VA: 0xC14908
	[SerializeField] // RVA: 0xC14908 Offset: 0xC14908 VA: 0xC14908
	private float m_Value; // 0xE4
	[RangeAttribute] // RVA: 0xC14948 Offset: 0xC14948 VA: 0xC14948
	[SerializeField] // RVA: 0xC14948 Offset: 0xC14948 VA: 0xC14948
	private float m_Size; // 0xE8
	[RangeAttribute] // RVA: 0xC14988 Offset: 0xC14988 VA: 0xC14988
	[SerializeField] // RVA: 0xC14988 Offset: 0xC14988 VA: 0xC14988
	private int m_NumberOfSteps; // 0xEC
	[SpaceAttribute] // RVA: 0xC149C8 Offset: 0xC149C8 VA: 0xC149C8
	[SerializeField] // RVA: 0xC149C8 Offset: 0xC149C8 VA: 0xC149C8
	private Scrollbar.ScrollEvent m_OnValueChanged; // 0xF0
	private RectTransform m_ContainerRect; // 0xF8
	private Vector2 m_Offset; // 0x100
	private DrivenRectTransformTracker m_Tracker; // 0x108
	private Coroutine m_PointerDownRepeat; // 0x110
	private bool isPointerDownAndNotDragging; // 0x118

	// Properties
	public RectTransform handleRect { get; set; }
	public Scrollbar.Direction direction { get; set; }
	public float value { get; set; }
	public float size { get; set; }
	public int numberOfSteps { get; set; }
	public Scrollbar.ScrollEvent onValueChanged { get; set; }
	private float stepSize { get; }
	private Scrollbar.Axis axis { get; }
	private bool reverseValue { get; }

	// Methods

	// RVA: 0x211B794 Offset: 0x211B794 VA: 0x211B794
	protected void .ctor() { }

	// RVA: 0x211B98C Offset: 0x211B98C VA: 0x211B98C
	public RectTransform get_handleRect() { }

	// RVA: 0x211B994 Offset: 0x211B994 VA: 0x211B994
	public void set_handleRect(RectTransform value) { }

	// RVA: 0x211BD08 Offset: 0x211BD08 VA: 0x211BD08
	public Scrollbar.Direction get_direction() { }

	// RVA: 0x211BD10 Offset: 0x211BD10 VA: 0x211BD10
	public void set_direction(Scrollbar.Direction value) { }

	// RVA: 0x211BD8C Offset: 0x211BD8C VA: 0x211BD8C
	public float get_value() { }

	// RVA: 0x2119E70 Offset: 0x2119E70 VA: 0x2119E70
	public void set_value(float value) { }

	// RVA: 0x211BEA0 Offset: 0x211BEA0 VA: 0x211BEA0
	public float get_size() { }

	// RVA: 0x2119C78 Offset: 0x2119C78 VA: 0x2119C78
	public void set_size(float value) { }

	// RVA: 0x211BEA8 Offset: 0x211BEA8 VA: 0x211BEA8
	public int get_numberOfSteps() { }

	// RVA: 0x211BEB0 Offset: 0x211BEB0 VA: 0x211BEB0
	public void set_numberOfSteps(int value) { }

	// RVA: 0x21173D4 Offset: 0x21173D4 VA: 0x21173D4
	public Scrollbar.ScrollEvent get_onValueChanged() { }

	// RVA: 0x211BF3C Offset: 0x211BF3C VA: 0x211BF3C
	public void set_onValueChanged(Scrollbar.ScrollEvent value) { }

	// RVA: 0x211BF44 Offset: 0x211BF44 VA: 0x211BF44
	private float get_stepSize() { }

	// RVA: 0x211BF70 Offset: 0x211BF70 VA: 0x211BF70 Slot: 47
	public virtual void Rebuild(CanvasUpdate executing) { }

	// RVA: 0x211BF74 Offset: 0x211BF74 VA: 0x211BF74 Slot: 48
	public virtual void LayoutComplete() { }

	// RVA: 0x211BF78 Offset: 0x211BF78 VA: 0x211BF78 Slot: 49
	public virtual void GraphicUpdateComplete() { }

	// RVA: 0x211BF7C Offset: 0x211BF7C VA: 0x211BF7C Slot: 5
	protected override void OnEnable() { }

	// RVA: 0x211C168 Offset: 0x211C168 VA: 0x211C168 Slot: 7
	protected override void OnDisable() { }

	// RVA: 0x211BA18 Offset: 0x211BA18 VA: 0x211BA18
	private void UpdateCachedReferences() { }

	// RVA: 0x211BE98 Offset: 0x211BE98 VA: 0x211BE98
	private void Set(float input) { }

	// RVA: 0x211C064 Offset: 0x211C064 VA: 0x211C064
	private void Set(float input, bool sendCallback) { }

	// RVA: 0x211C240 Offset: 0x211C240 VA: 0x211C240 Slot: 10
	protected override void OnRectTransformDimensionsChange() { }

	// RVA: 0x211C288 Offset: 0x211C288 VA: 0x211C288
	private Scrollbar.Axis get_axis() { }

	// RVA: 0x211C2A4 Offset: 0x211C2A4 VA: 0x211C2A4
	private bool get_reverseValue() { }

	// RVA: 0x211BB34 Offset: 0x211BB34 VA: 0x211BB34
	private void UpdateVisuals() { }

	// RVA: 0x211C2B8 Offset: 0x211C2B8 VA: 0x211C2B8
	private void UpdateDrag(PointerEventData eventData) { }

	// RVA: 0x211C60C Offset: 0x211C60C VA: 0x211C60C
	private bool MayDrag(PointerEventData eventData) { }

	// RVA: 0x211C680 Offset: 0x211C680 VA: 0x211C680 Slot: 50
	public virtual void OnBeginDrag(PointerEventData eventData) { }

	// RVA: 0x211C8E0 Offset: 0x211C8E0 VA: 0x211C8E0 Slot: 51
	public virtual void OnDrag(PointerEventData eventData) { }

	// RVA: 0x211C98C Offset: 0x211C98C VA: 0x211C98C Slot: 32
	public override void OnPointerDown(PointerEventData eventData) { }

	[DebuggerHiddenAttribute] // RVA: 0xC15994 Offset: 0xC15994 VA: 0xC15994
	// RVA: 0x211CB48 Offset: 0x211CB48 VA: 0x211CB48
	protected IEnumerator ClickRepeat(PointerEventData eventData) { }

	// RVA: 0x211CBE4 Offset: 0x211CBE4 VA: 0x211CBE4 Slot: 33
	public override void OnPointerUp(PointerEventData eventData) { }

	// RVA: 0x211CC5C Offset: 0x211CC5C VA: 0x211CC5C Slot: 31
	public override void OnMove(AxisEventData eventData) { }

	// RVA: 0x211CF6C Offset: 0x211CF6C VA: 0x211CF6C Slot: 27
	public override Selectable FindSelectableOnLeft() { }

	// RVA: 0x211D0F4 Offset: 0x211D0F4 VA: 0x211D0F4 Slot: 28
	public override Selectable FindSelectableOnRight() { }

	// RVA: 0x211D260 Offset: 0x211D260 VA: 0x211D260 Slot: 29
	public override Selectable FindSelectableOnUp() { }

	// RVA: 0x211D3CC Offset: 0x211D3CC VA: 0x211D3CC Slot: 30
	public override Selectable FindSelectableOnDown() { }

	// RVA: 0x211D538 Offset: 0x211D538 VA: 0x211D538 Slot: 52
	public virtual void OnInitializePotentialDrag(PointerEventData eventData) { }

	// RVA: 0x211D56C Offset: 0x211D56C VA: 0x211D56C
	public void SetDirection(Scrollbar.Direction direction, bool includeRectLayouts) { }

	// RVA: 0x211D700 Offset: 0x211D700 VA: 0x211D700 Slot: 43
	private Transform UnityEngine.UI.ICanvasElement.get_transform() { }
}

// Namespace: 
public enum Scrollbar.Direction // TypeDefIndex: 3112
{
	// Fields
	public int value__; // 0x0
	public const Scrollbar.Direction LeftToRight = 0;
	public const Scrollbar.Direction RightToLeft = 1;
	public const Scrollbar.Direction BottomToTop = 2;
	public const Scrollbar.Direction TopToBottom = 3;
}

// Namespace: 
[Serializable]
public class Scrollbar.ScrollEvent : UnityEvent<float> // TypeDefIndex: 3113
{
	// Methods

	// RVA: 0x211B858 Offset: 0x211B858 VA: 0x211B858
	public void .ctor() { }
}

// Namespace: 
private enum Scrollbar.Axis // TypeDefIndex: 3114
{
	// Fields
	public int value__; // 0x0
	public const Scrollbar.Axis Horizontal = 0;
	public const Scrollbar.Axis Vertical = 1;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC12FA0 Offset: 0xC12FA0 VA: 0xC12FA0
private sealed class Scrollbar.<ClickRepeat>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 3115
{
	// Fields
	internal PointerEventData eventData; // 0x10
	internal Scrollbar $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xC15E48 Offset: 0xC15E48 VA: 0xC15E48
	// RVA: 0x211CBDC Offset: 0x211CBDC VA: 0x211CBDC
	public void .ctor() { }

	// RVA: 0x211D708 Offset: 0x211D708 VA: 0x211D708 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xC15E58 Offset: 0xC15E58 VA: 0xC15E58
	// RVA: 0x211D9CC Offset: 0x211D9CC VA: 0x211D9CC Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC15E68 Offset: 0xC15E68 VA: 0xC15E68
	// RVA: 0x211D9D4 Offset: 0x211D9D4 VA: 0x211D9D4 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC15E78 Offset: 0xC15E78 VA: 0xC15E78
	// RVA: 0x211D9DC Offset: 0x211D9DC VA: 0x211D9DC Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xC15E88 Offset: 0xC15E88 VA: 0xC15E88
	// RVA: 0x211D9F0 Offset: 0x211D9F0 VA: 0x211D9F0 Slot: 6
	public void Reset() { }
}

// Namespace: UnityEngine.UI
[AddComponentMenu] // RVA: 0xC127C8 Offset: 0xC127C8 VA: 0xC127C8
[ExecuteAlways] // RVA: 0xC127C8 Offset: 0xC127C8 VA: 0xC127C8
[SelectionBaseAttribute] // RVA: 0xC127C8 Offset: 0xC127C8 VA: 0xC127C8
[DisallowMultipleComponent] // RVA: 0xC127C8 Offset: 0xC127C8 VA: 0xC127C8
public class Selectable : UIBehaviour, IMoveHandler, IPointerDownHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler, ISelectHandler, IDeselectHandler, IEventSystemHandler // TypeDefIndex: 3116
{
	// Fields
	private static List<Selectable> s_List; // 0x0
	[FormerlySerializedAsAttribute] // RVA: 0xC14A04 Offset: 0xC14A04 VA: 0xC14A04
	[SerializeField] // RVA: 0xC14A04 Offset: 0xC14A04 VA: 0xC14A04
	private Navigation m_Navigation; // 0x18
	[FormerlySerializedAsAttribute] // RVA: 0xC14A50 Offset: 0xC14A50 VA: 0xC14A50
	[SerializeField] // RVA: 0xC14A50 Offset: 0xC14A50 VA: 0xC14A50
	private Selectable.Transition m_Transition; // 0x40
	[FormerlySerializedAsAttribute] // RVA: 0xC14A9C Offset: 0xC14A9C VA: 0xC14A9C
	[SerializeField] // RVA: 0xC14A9C Offset: 0xC14A9C VA: 0xC14A9C
	private ColorBlock m_Colors; // 0x44
	[FormerlySerializedAsAttribute] // RVA: 0xC14AE8 Offset: 0xC14AE8 VA: 0xC14AE8
	[SerializeField] // RVA: 0xC14AE8 Offset: 0xC14AE8 VA: 0xC14AE8
	private SpriteState m_SpriteState; // 0x90
	[FormerlySerializedAsAttribute] // RVA: 0xC14B34 Offset: 0xC14B34 VA: 0xC14B34
	[SerializeField] // RVA: 0xC14B34 Offset: 0xC14B34 VA: 0xC14B34
	private AnimationTriggers m_AnimationTriggers; // 0xA8
	[TooltipAttribute] // RVA: 0xC14B80 Offset: 0xC14B80 VA: 0xC14B80
	[SerializeField] // RVA: 0xC14B80 Offset: 0xC14B80 VA: 0xC14B80
	private bool m_Interactable; // 0xB0
	[FormerlySerializedAsAttribute] // RVA: 0xC14BCC Offset: 0xC14BCC VA: 0xC14BCC
	[FormerlySerializedAsAttribute] // RVA: 0xC14BCC Offset: 0xC14BCC VA: 0xC14BCC
	[SerializeField] // RVA: 0xC14BCC Offset: 0xC14BCC VA: 0xC14BCC
	private Graphic m_TargetGraphic; // 0xB8
	private bool m_GroupsAllowInteraction; // 0xC0
	private Selectable.SelectionState m_CurrentSelectionState; // 0xC4
	[CompilerGeneratedAttribute] // RVA: 0xC14C3C Offset: 0xC14C3C VA: 0xC14C3C
	[DebuggerBrowsableAttribute] // RVA: 0xC14C3C Offset: 0xC14C3C VA: 0xC14C3C
	private bool <isPointerInside>k__BackingField; // 0xC8
	[CompilerGeneratedAttribute] // RVA: 0xC14C78 Offset: 0xC14C78 VA: 0xC14C78
	[DebuggerBrowsableAttribute] // RVA: 0xC14C78 Offset: 0xC14C78 VA: 0xC14C78
	private bool <isPointerDown>k__BackingField; // 0xC9
	[CompilerGeneratedAttribute] // RVA: 0xC14CB4 Offset: 0xC14CB4 VA: 0xC14CB4
	[DebuggerBrowsableAttribute] // RVA: 0xC14CB4 Offset: 0xC14CB4 VA: 0xC14CB4
	private bool <hasSelection>k__BackingField; // 0xCA
	private readonly List<CanvasGroup> m_CanvasGroupCache; // 0xD0

	// Properties
	public static List<Selectable> allSelectables { get; }
	public Navigation navigation { get; set; }
	public Selectable.Transition transition { get; set; }
	public ColorBlock colors { get; set; }
	public SpriteState spriteState { get; set; }
	public AnimationTriggers animationTriggers { get; set; }
	public Graphic targetGraphic { get; set; }
	public bool interactable { get; set; }
	private bool isPointerInside { get; set; }
	private bool isPointerDown { get; set; }
	private bool hasSelection { get; set; }
	public Image image { get; set; }
	public Animator animator { get; }
	protected Selectable.SelectionState currentSelectionState { get; }

	// Methods

	// RVA: 0x211B8A8 Offset: 0x211B8A8 VA: 0x211B8A8
	protected void .ctor() { }

	// RVA: 0x211DA58 Offset: 0x211DA58 VA: 0x211DA58
	public static List<Selectable> get_allSelectables() { }

	// RVA: 0x211CF90 Offset: 0x211CF90 VA: 0x211CF90
	public Navigation get_navigation() { }

	// RVA: 0x211DAC0 Offset: 0x211DAC0 VA: 0x211DAC0
	public void set_navigation(Navigation value) { }
