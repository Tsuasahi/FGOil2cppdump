	public void ExecuteUpdate() { }

	// RVA: 0x24AF04C Offset: 0x24AF04C VA: 0x24AF04C
	public void ExecuteLateUpdate() { }

	// RVA: 0x24B4750 Offset: 0x24B4750 VA: 0x24B4750
	public void ProcessMouse() { }

	// RVA: 0x24B3F1C Offset: 0x24B3F1C VA: 0x24B3F1C
	public void ProcessTouches() { }

	// RVA: 0x24B670C Offset: 0x24B670C VA: 0x24B670C
	private void ProcessFakeTouches() { }

	// RVA: 0x24B55E8 Offset: 0x24B55E8 VA: 0x24B55E8
	public void ProcessOthers() { }

	// RVA: 0x24B6CB4 Offset: 0x24B6CB4 VA: 0x24B6CB4
	private void ProcessPress(bool pressed, float click, float drag) { }

	// RVA: 0x24B7CDC Offset: 0x24B7CDC VA: 0x24B7CDC
	private void ProcessRelease(bool isMouse, float drag) { }

	// RVA: 0x24B6564 Offset: 0x24B6564 VA: 0x24B6564
	public void ProcessTouch(bool pressed, bool released) { }

	// RVA: 0x24B6424 Offset: 0x24B6424 VA: 0x24B6424
	public void ShowTooltip(bool val) { }

	// RVA: 0x24B877C Offset: 0x24B877C VA: 0x24B877C
	private void OnApplicationPause() { }

	// RVA: 0x24B8D8C Offset: 0x24B8D8C VA: 0x24B8D8C
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD38344 Offset: 0xD38344 VA: 0xD38344
	// RVA: 0x24B9268 Offset: 0x24B9268 VA: 0x24B9268
	private static int <Raycast>m__0(UICamera.DepthEntry r1, UICamera.DepthEntry r2) { }

	[CompilerGeneratedAttribute] // RVA: 0xD38354 Offset: 0xD38354 VA: 0xD38354
	// RVA: 0x24B927C Offset: 0x24B927C VA: 0x24B927C
	private static int <Raycast>m__1(UICamera.DepthEntry r1, UICamera.DepthEntry r2) { }
}

// Namespace: 
public enum UICamera.ControlScheme // TypeDefIndex: 7741
{
	// Fields
	public int value__; // 0x0
	public const UICamera.ControlScheme Mouse = 0;
	public const UICamera.ControlScheme Touch = 1;
	public const UICamera.ControlScheme Controller = 2;
}

// Namespace: 
public enum UICamera.ClickNotification // TypeDefIndex: 7742
{
	// Fields
	public int value__; // 0x0
	public const UICamera.ClickNotification None = 0;
	public const UICamera.ClickNotification Always = 1;
	public const UICamera.ClickNotification BasedOnDelta = 2;
}

// Namespace: 
public class UICamera.MouseOrTouch // TypeDefIndex: 7743
{
	// Fields
	public Vector2 pos; // 0x10
	public Vector2 lastPos; // 0x18
	public Vector2 delta; // 0x20
	public Vector2 totalDelta; // 0x28
	public Camera pressedCam; // 0x30
	public GameObject last; // 0x38
	public GameObject current; // 0x40
	public GameObject pressed; // 0x48
	public GameObject dragged; // 0x50
	public float pressTime; // 0x58
	public float clickTime; // 0x5C
	public UICamera.ClickNotification clickNotification; // 0x60
	public bool touchBegan; // 0x64
	public bool pressStarted; // 0x65
	public bool dragStarted; // 0x66

	// Properties
	public float deltaTime { get; }
	public bool isOverUI { get; }

	// Methods

	// RVA: 0x2076E24 Offset: 0x2076E24 VA: 0x2076E24
	public void .ctor() { }

	// RVA: 0x2076E38 Offset: 0x2076E38 VA: 0x2076E38
	public float get_deltaTime() { }

	// RVA: 0x2076E74 Offset: 0x2076E74 VA: 0x2076E74
	public bool get_isOverUI() { }
}

// Namespace: 
public enum UICamera.EventType // TypeDefIndex: 7744
{
	// Fields
	public int value__; // 0x0
	public const UICamera.EventType World_3D = 0;
	public const UICamera.EventType UI_3D = 1;
	public const UICamera.EventType World_2D = 2;
	public const UICamera.EventType UI_2D = 3;
}

// Namespace: 
public sealed class UICamera.GetKeyStateFunc : MulticastDelegate // TypeDefIndex: 7745
{
	// Methods

	// RVA: 0x24B9248 Offset: 0x24B9248 VA: 0x24B9248
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x24B2B74 Offset: 0x24B2B74 VA: 0x24B2B74 Slot: 11
	public virtual bool Invoke(KeyCode key) { }

	// RVA: 0x24B9464 Offset: 0x24B9464 VA: 0x24B9464 Slot: 12
	public virtual IAsyncResult BeginInvoke(KeyCode key, AsyncCallback callback, object object) { }

	// RVA: 0x24B94F0 Offset: 0x24B94F0 VA: 0x24B94F0 Slot: 13
	public virtual bool EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UICamera.GetAxisFunc : MulticastDelegate // TypeDefIndex: 7746
{
	// Methods

	// RVA: 0x24B9258 Offset: 0x24B9258 VA: 0x24B9258
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x24B30AC Offset: 0x24B30AC VA: 0x24B30AC Slot: 11
	public virtual float Invoke(string name) { }

	// RVA: 0x24B9404 Offset: 0x24B9404 VA: 0x24B9404 Slot: 12
	public virtual IAsyncResult BeginInvoke(string name, AsyncCallback callback, object object) { }

	// RVA: 0x24B9428 Offset: 0x24B9428 VA: 0x24B9428 Slot: 13
	public virtual float EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UICamera.OnScreenResize : MulticastDelegate // TypeDefIndex: 7747
{
	// Methods

	// RVA: 0x2077910 Offset: 0x2077910 VA: 0x2077910
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2077920 Offset: 0x2077920 VA: 0x2077920 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x2077B20 Offset: 0x2077B20 VA: 0x2077B20 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x2077B54 Offset: 0x2077B54 VA: 0x2077B54 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UICamera.OnCustomInput : MulticastDelegate // TypeDefIndex: 7748
{
	// Methods

	// RVA: 0x20776C0 Offset: 0x20776C0 VA: 0x20776C0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20776D0 Offset: 0x20776D0 VA: 0x20776D0 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x20778D0 Offset: 0x20778D0 VA: 0x20778D0 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x2077904 Offset: 0x2077904 VA: 0x2077904 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UICamera.MoveDelegate : MulticastDelegate // TypeDefIndex: 7749
{
	// Methods

	// RVA: 0x2076FCC Offset: 0x2076FCC VA: 0x2076FCC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2076FDC Offset: 0x2076FDC VA: 0x2076FDC Slot: 11
	public virtual void Invoke(Vector2 delta) { }

	// RVA: 0x207721C Offset: 0x207721C VA: 0x207721C Slot: 12
	public virtual IAsyncResult BeginInvoke(Vector2 delta, AsyncCallback callback, object object) { }

	// RVA: 0x20772A8 Offset: 0x20772A8 VA: 0x20772A8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UICamera.VoidDelegate : MulticastDelegate // TypeDefIndex: 7750
{
	// Methods

	// RVA: 0x2078010 Offset: 0x2078010 VA: 0x2078010
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2078020 Offset: 0x2078020 VA: 0x2078020 Slot: 11
	public virtual void Invoke(GameObject go) { }

	// RVA: 0x20783C0 Offset: 0x20783C0 VA: 0x20783C0 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, AsyncCallback callback, object object) { }

	// RVA: 0x20783E4 Offset: 0x20783E4 VA: 0x20783E4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UICamera.BoolDelegate : MulticastDelegate // TypeDefIndex: 7751
{
	// Methods

	// RVA: 0x24B9290 Offset: 0x24B9290 VA: 0x24B9290
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x24AFEC8 Offset: 0x24AFEC8 VA: 0x24AFEC8 Slot: 11
	public virtual void Invoke(GameObject go, bool state) { }

	// RVA: 0x24B92A0 Offset: 0x24B92A0 VA: 0x24B92A0 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, bool state, AsyncCallback callback, object object) { }

	// RVA: 0x24B9340 Offset: 0x24B9340 VA: 0x24B9340 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UICamera.FloatDelegate : MulticastDelegate // TypeDefIndex: 7752
{
	// Methods

	// RVA: 0x24B934C Offset: 0x24B934C VA: 0x24B934C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x24B6064 Offset: 0x24B6064 VA: 0x24B6064 Slot: 11
	public virtual void Invoke(GameObject go, float delta) { }

	// RVA: 0x24B935C Offset: 0x24B935C VA: 0x24B935C Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, float delta, AsyncCallback callback, object object) { }

	// RVA: 0x24B93F8 Offset: 0x24B93F8 VA: 0x24B93F8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UICamera.VectorDelegate : MulticastDelegate // TypeDefIndex: 7753
{
	// Methods

	// RVA: 0x2077B68 Offset: 0x2077B68 VA: 0x2077B68
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2077B78 Offset: 0x2077B78 VA: 0x2077B78 Slot: 11
	public virtual void Invoke(GameObject go, Vector2 delta) { }

	// RVA: 0x2077F68 Offset: 0x2077F68 VA: 0x2077F68 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, Vector2 delta, AsyncCallback callback, object object) { }

	// RVA: 0x2078004 Offset: 0x2078004 VA: 0x2078004 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UICamera.ObjectDelegate : MulticastDelegate // TypeDefIndex: 7754
{
	// Methods

	// RVA: 0x20772B4 Offset: 0x20772B4 VA: 0x20772B4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20772C4 Offset: 0x20772C4 VA: 0x20772C4 Slot: 11
	public virtual void Invoke(GameObject go, GameObject obj) { }

	// RVA: 0x2077684 Offset: 0x2077684 VA: 0x2077684 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, GameObject obj, AsyncCallback callback, object object) { }

	// RVA: 0x20776B4 Offset: 0x20776B4 VA: 0x20776B4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UICamera.KeyCodeDelegate : MulticastDelegate // TypeDefIndex: 7755
{
	// Methods

	// RVA: 0x20769AC Offset: 0x20769AC VA: 0x20769AC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20769BC Offset: 0x20769BC VA: 0x20769BC Slot: 11
	public virtual void Invoke(GameObject go, KeyCode key) { }

	// RVA: 0x2076D7C Offset: 0x2076D7C VA: 0x2076D7C Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, KeyCode key, AsyncCallback callback, object object) { }

	// RVA: 0x2076E18 Offset: 0x2076E18 VA: 0x2076E18 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private struct UICamera.DepthEntry // TypeDefIndex: 7756
{
	// Fields
	public int depth; // 0x0
	public RaycastHit hit; // 0x4
	public Vector3 point; // 0x30
	public GameObject go; // 0x40
}

// Namespace: 
public class UICamera.Touch // TypeDefIndex: 7757
{
	// Fields
	public int fingerId; // 0x10
	public TouchPhase phase; // 0x14
	public Vector2 position; // 0x18
	public int tapCount; // 0x20

	// Methods

	// RVA: 0x2077B60 Offset: 0x2077B60 VA: 0x2077B60
	public void .ctor() { }
}

// Namespace: 
public sealed class UICamera.GetTouchCountCallback : MulticastDelegate // TypeDefIndex: 7758
{
	// Methods

	// RVA: 0x2076728 Offset: 0x2076728 VA: 0x2076728
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2076738 Offset: 0x2076738 VA: 0x2076738 Slot: 11
	public virtual int Invoke() { }

	// RVA: 0x207693C Offset: 0x207693C VA: 0x207693C Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x2076970 Offset: 0x2076970 VA: 0x2076970 Slot: 13
	public virtual int EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UICamera.GetTouchCallback : MulticastDelegate // TypeDefIndex: 7759
{
	// Methods

	// RVA: 0x2076450 Offset: 0x2076450 VA: 0x2076450
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2076460 Offset: 0x2076460 VA: 0x2076460 Slot: 11
	public virtual UICamera.Touch Invoke(int index) { }

	// RVA: 0x2076690 Offset: 0x2076690 VA: 0x2076690 Slot: 12
	public virtual IAsyncResult BeginInvoke(int index, AsyncCallback callback, object object) { }

	// RVA: 0x207671C Offset: 0x207671C VA: 0x207671C Slot: 13
	public virtual UICamera.Touch EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ExUICenterChild : UICenterOnChild // TypeDefIndex: 7760
{
	// Fields
	[SerializeField] // RVA: 0xCC3268 Offset: 0xCC3268 VA: 0xCC3268
	protected EventRewardRootComponent rootComp; // 0x40
	private const int DIFFERENCE = 10;
	private float scrollPosX; // 0x48

	// Properties
	public float scrollPostion { get; }

	// Methods

	// RVA: 0x160F430 Offset: 0x160F430 VA: 0x160F430
	public void .ctor() { }

	// RVA: 0x160F438 Offset: 0x160F438 VA: 0x160F438
	public float get_scrollPostion() { }

	// RVA: 0x160F480 Offset: 0x160F480 VA: 0x160F480
	public void SetScrollPosition(float posX) { }

	// RVA: 0x160F488 Offset: 0x160F488 VA: 0x160F488 Slot: 4
	public override void Recenter() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC9185C Offset: 0xC9185C VA: 0xC9185C
public class ExUILabel : UILabel // TypeDefIndex: 7761
{
	// Methods

	// RVA: 0x160F578 Offset: 0x160F578 VA: 0x160F578
	public void .ctor() { }
}

// Namespace: 
public class ExUISkinTexture : ExUITexture // TypeDefIndex: 7762
{
	// Fields
	[HideInInspector] // RVA: 0xCC3278 Offset: 0xCC3278 VA: 0xCC3278
	[SerializeField] // RVA: 0xCC3278 Offset: 0xCC3278 VA: 0xCC3278
	private AtlasManager.SkinType skinType; // 0x228
	[SerializeField] // RVA: 0xCC32B0 Offset: 0xCC32B0 VA: 0xCC32B0
	private List<string> texNameList; // 0x230

	// Methods

	// RVA: 0x16105F4 Offset: 0x16105F4 VA: 0x16105F4
	public void .ctor() { }

	// RVA: 0x1610604 Offset: 0x1610604 VA: 0x1610604
	private void OnEnable() { }

	// RVA: 0x161062C Offset: 0x161062C VA: 0x161062C
	public void setupTexture() { }

	// RVA: 0x16106A4 Offset: 0x16106A4 VA: 0x16106A4
	public void loadTexture(string texName, Action callback) { }

	// RVA: 0x16107E8 Offset: 0x16107E8 VA: 0x16107E8
	public void loadTexture(Action callback) { }

	// RVA: 0x16108E0 Offset: 0x16108E0 VA: 0x16108E0
	public void releaseTexture() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF0E0 Offset: 0xCAF0E0 VA: 0xCAF0E0
private sealed class ExUISkinTexture.<loadTexture>c__AnonStorey0 // TypeDefIndex: 7763
{
	// Fields
	internal Action callback; // 0x10
	internal ExUISkinTexture $this; // 0x18

	// Methods

	// RVA: 0x16107E0 Offset: 0x16107E0 VA: 0x16107E0
	public void .ctor() { }

	// RVA: 0x1610950 Offset: 0x1610950 VA: 0x1610950
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF0F0 Offset: 0xCAF0F0 VA: 0xCAF0F0
private sealed class ExUISkinTexture.<loadTexture>c__AnonStorey1 // TypeDefIndex: 7764
{
	// Fields
	internal Action callback; // 0x10
	internal ExUISkinTexture $this; // 0x18

	// Methods

	// RVA: 0x16108D8 Offset: 0x16108D8 VA: 0x16108D8
	public void .ctor() { }

	// RVA: 0x161098C Offset: 0x161098C VA: 0x161098C
	internal void <>m__0() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC9186C Offset: 0xC9186C VA: 0xC9186C
[AddComponentMenu] // RVA: 0xC9186C Offset: 0xC9186C VA: 0xC9186C
public class ExUITexture : UITexture // TypeDefIndex: 7765
{
	// Fields
	protected AssetData assetData; // 0x208
	protected string loadAssetName; // 0x210
	protected string assetLabel; // 0x218
	protected Action callbackFunc; // 0x220

	// Methods

	// RVA: 0x16105FC Offset: 0x16105FC VA: 0x16105FC
	public void .ctor() { }

	// RVA: 0x1612450 Offset: 0x1612450 VA: 0x1612450
	public void ClearImage() { }

	// RVA: 0x1612534 Offset: 0x1612534 VA: 0x1612534
	public void SetImage(Texture tex) { }

	// RVA: 0x1612628 Offset: 0x1612628 VA: 0x1612628
	public bool SetAssetImage(string assetName, Action callback) { }

	// RVA: 0x1612638 Offset: 0x1612638 VA: 0x1612638
	public bool SetAssetImage(string assetName, string assetLabel, Action callback) { }

	// RVA: 0x16128F4 Offset: 0x16128F4 VA: 0x16128F4
	protected void EndLoad(AssetData data) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC918B8 Offset: 0xC918B8 VA: 0xC918B8
[Serializable]
public class FsmEventData // TypeDefIndex: 7766
{
	// Fields
	[SerializeField] // RVA: 0xCC32C0 Offset: 0xCC32C0 VA: 0xCC32C0
	protected string eventData; // 0x10
	[SerializeField] // RVA: 0xCC32D0 Offset: 0xCC32D0 VA: 0xCC32D0
	protected string title; // 0x18

	// Properties
	public string EventData { get; set; }
	public string Title { get; set; }

	// Methods

	// RVA: 0x1E87A84 Offset: 0x1E87A84 VA: 0x1E87A84
	public void .ctor() { }

	// RVA: 0x1E87B0C Offset: 0x1E87B0C VA: 0x1E87B0C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1E87B14 Offset: 0x1E87B14 VA: 0x1E87B14
	public string get_EventData() { }

	// RVA: 0x1E87B1C Offset: 0x1E87B1C VA: 0x1E87B1C
	public void set_EventData(string value) { }

	// RVA: 0x1E87B24 Offset: 0x1E87B24 VA: 0x1E87B24
	public string get_Title() { }

	// RVA: 0x1E87B2C Offset: 0x1E87B2C VA: 0x1E87B2C
	public void set_Title(string value) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC918F0 Offset: 0xC918F0 VA: 0xC918F0
public class FsmEventDataList : MonoBehaviour // TypeDefIndex: 7767
{
	// Fields
	[SerializeField] // RVA: 0xCC32E0 Offset: 0xCC32E0 VA: 0xCC32E0
	protected PlayMakerFSM targetFSM; // 0x18
	[HideInInspector] // RVA: 0xCC32F0 Offset: 0xCC32F0 VA: 0xCC32F0
	[SerializeField] // RVA: 0xCC32F0 Offset: 0xCC32F0 VA: 0xCC32F0
	protected FsmEventData[] eventDataList; // 0x20

	// Properties
	public PlayMakerFSM TargetFSM { get; set; }
	public int Length { get; set; }

	// Methods

	// RVA: 0x1E87B34 Offset: 0x1E87B34 VA: 0x1E87B34
	public void .ctor() { }

	// RVA: 0x1E87B3C Offset: 0x1E87B3C VA: 0x1E87B3C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1E87B44 Offset: 0x1E87B44 VA: 0x1E87B44
	public PlayMakerFSM get_TargetFSM() { }

	// RVA: 0x1E87B4C Offset: 0x1E87B4C VA: 0x1E87B4C
	public void set_TargetFSM(PlayMakerFSM value) { }

	// RVA: 0x1E87B54 Offset: 0x1E87B54 VA: 0x1E87B54
	public int get_Length() { }

	// RVA: 0x1E87B6C Offset: 0x1E87B6C VA: 0x1E87B6C
	public void set_Length(int value) { }

	// RVA: 0x1E87CD4 Offset: 0x1E87CD4 VA: 0x1E87CD4
	public FsmEventData Get(int index) { }

	// RVA: 0x1E87D28 Offset: 0x1E87D28 VA: 0x1E87D28
	public string GetEventData(int index) { }

	// RVA: 0x1E87D8C Offset: 0x1E87D8C VA: 0x1E87D8C
	public string GetTitle(int index) { }

	// RVA: 0x1E87DF0 Offset: 0x1E87DF0 VA: 0x1E87DF0
	public void SendEvent(int index) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC91928 Offset: 0xC91928 VA: 0xC91928
public class ItemSeed : MonoBehaviour // TypeDefIndex: 7768
{
	// Fields
	[SerializeField] // RVA: 0xCC3328 Offset: 0xCC3328 VA: 0xCC3328
	protected GameObject parent; // 0x18
	[SerializeField] // RVA: 0xCC3338 Offset: 0xCC3338 VA: 0xCC3338
	protected GameObject prefab; // 0x20

	// Properties
	public GameObject Parent { get; }
	public GameObject Prefab { get; }

	// Methods

	// RVA: 0x1721A80 Offset: 0x1721A80 VA: 0x1721A80
	public void .ctor() { }

	// RVA: 0x1721A88 Offset: 0x1721A88 VA: 0x1721A88
	public GameObject get_Parent() { }

	// RVA: 0x1721A90 Offset: 0x1721A90 VA: 0x1721A90
	public GameObject get_Prefab() { }

	// RVA: 0x1721A98 Offset: 0x1721A98 VA: 0x1721A98
	public Vector3 GetPosition() { }

	// RVA: 0x1721AD8 Offset: 0x1721AD8 VA: 0x1721AD8
	public Vector3 GetLocalPosition() { }

	// RVA: 0x1721B58 Offset: 0x1721B58 VA: 0x1721B58
	public void SetTransform(GameObject obj) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC91960 Offset: 0xC91960 VA: 0xC91960
public class ListViewDropInfo // TypeDefIndex: 7769
{
	// Fields
	protected GameObject listViewItemObject; // 0x10
	protected GameObject dropSurfaceObject; // 0x18

	// Properties
	public GameObject ListViewItemObject { get; }
	public GameObject DropSurfaceObject { get; }
	public ListViewObject ListViewObject { get; }
	public ListViewItem ListViewItem { get; }
	public ListViewManager ListViewManager { get; }

	// Methods

	// RVA: 0x1732244 Offset: 0x1732244 VA: 0x1732244
	public void .ctor(GameObject listViewItemObject, GameObject dropSurfaceObject) { }

	// RVA: 0x173227C Offset: 0x173227C VA: 0x173227C
	public GameObject get_ListViewItemObject() { }

	// RVA: 0x1732284 Offset: 0x1732284 VA: 0x1732284
	public GameObject get_DropSurfaceObject() { }

	// RVA: 0x173228C Offset: 0x173228C VA: 0x173228C
	public ListViewObject get_ListViewObject() { }

	// RVA: 0x1732330 Offset: 0x1732330 VA: 0x1732330
	public ListViewItem get_ListViewItem() { }

	// RVA: 0x1732430 Offset: 0x1732430 VA: 0x1732430
	public ListViewManager get_ListViewManager() { }

	// RVA: 0x1732530 Offset: 0x1732530 VA: 0x1732530
	public void SendMessage(string methodName) { }

	// RVA: 0x17325BC Offset: 0x17325BC VA: 0x17325BC
	public void SendMessageOnDropItem() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC91998 Offset: 0xC91998 VA: 0xC91998
public class ListViewDropObject : ListViewObject // TypeDefIndex: 7770
{
	// Methods

	// RVA: 0x1732644 Offset: 0x1732644 VA: 0x1732644
	public void .ctor() { }

	// RVA: 0x17326AC Offset: 0x17326AC VA: 0x17326AC
	public void ReleaseItem() { }

	// RVA: 0x1732700 Offset: 0x1732700 VA: 0x1732700 Slot: 4
	public override bool ClearItem() { }

	// RVA: 0x1732758 Offset: 0x1732758 VA: 0x1732758 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x1732768 Offset: 0x1732768 VA: 0x1732768 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1732808 Offset: 0x1732808 VA: 0x1732808 Slot: 8
	public override GameObject CreateDragObject() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC919D0 Offset: 0xC919D0 VA: 0xC919D0
public class ListViewIndicator : MonoBehaviour // TypeDefIndex: 7771
{
	// Methods

	// RVA: 0x1D36134 Offset: 0x1D36134 VA: 0x1D36134
	public void .ctor() { }

	// RVA: 0x1D3613C Offset: 0x1D3613C VA: 0x1D3613C Slot: 4
	public virtual void SetIndexMax(int max) { }

	// RVA: 0x1D36140 Offset: 0x1D36140 VA: 0x1D36140 Slot: 5
	public virtual void OnModifyCenterItem(ListViewManager manager, ListViewItem item, bool isTop, bool isBottom, bool isLeft, bool isRight) { }

	// RVA: 0x1D36144 Offset: 0x1D36144 VA: 0x1D36144 Slot: 6
	public virtual void OnModifyPosition(ListViewManager manager, ListViewItem item) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC91A08 Offset: 0xC91A08 VA: 0xC91A08
public class ListViewItem // TypeDefIndex: 7772
{
	// Fields
	protected int selectNum; // 0x10
	protected int index; // 0x14
	protected int sortIndex; // 0x18
	protected int loopIndex; // 0x1C
	protected long sortValue0; // 0x20
	protected long sortValue0B; // 0x28
	protected long sortValue1; // 0x30
	protected string sortStr1; // 0x38
	protected long sortValue1B; // 0x40
	protected long sortValue2; // 0x48
	protected long sortValue2B; // 0x50
	protected bool isTermination; // 0x58
	protected bool isTerminationSpace; // 0x59
	protected Vector3 basePosition; // 0x5C
	protected ListViewObject viewObject; // 0x68

	// Properties
	public int Index { get; }
	public int SortIndex { get; }
	public int LoopIndex { get; }
	public Vector3 BasePosition { get; set; }
	public ListViewObject ViewObject { get; set; }
	public bool IsSelect { get; set; }
	public int SelectNum { get; set; }
	public bool IsTermination { get; set; }
	public bool IsTerminationSpace { get; set; }

	// Methods

	// RVA: 0x1D36148 Offset: 0x1D36148 VA: 0x1D36148
	public void .ctor() { }

	// RVA: 0x1D361D4 Offset: 0x1D361D4 VA: 0x1D361D4
	public void .ctor(int index) { }

	// RVA: 0x1D36290 Offset: 0x1D36290 VA: 0x1D36290
	public void Set(ListViewItem item) { }

	// RVA: 0x1D363E8 Offset: 0x1D363E8 VA: 0x1D363E8 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1D363F0 Offset: 0x1D363F0 VA: 0x1D363F0
	public int get_Index() { }

	// RVA: 0x1D363F8 Offset: 0x1D363F8 VA: 0x1D363F8
	public int get_SortIndex() { }

	// RVA: 0x1D36400 Offset: 0x1D36400 VA: 0x1D36400
	public void SetSortIndex(int index) { }

	// RVA: 0x1D36408 Offset: 0x1D36408 VA: 0x1D36408
	public int get_LoopIndex() { }

	// RVA: 0x1D36410 Offset: 0x1D36410 VA: 0x1D36410
	public void SetLoopIndex(int index) { }

	// RVA: 0x1D36418 Offset: 0x1D36418 VA: 0x1D36418 Slot: 4
	public virtual bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x1D364A0 Offset: 0x1D364A0 VA: 0x1D364A0 Slot: 5
	public virtual bool IsMatchFilter(ListViewSort sort) { }

	// RVA: 0x1D364A8 Offset: 0x1D364A8 VA: 0x1D364A8
	public Vector3 get_BasePosition() { }

	// RVA: 0x1D364B4 Offset: 0x1D364B4 VA: 0x1D364B4
	public void set_BasePosition(Vector3 value) { }

	// RVA: 0x1D364C0 Offset: 0x1D364C0 VA: 0x1D364C0
	public ListViewObject get_ViewObject() { }

	// RVA: 0x1D364C8 Offset: 0x1D364C8 VA: 0x1D364C8
	public void set_ViewObject(ListViewObject value) { }

	// RVA: 0x1D364D0 Offset: 0x1D364D0 VA: 0x1D364D0
	public bool get_IsSelect() { }

	// RVA: 0x1D364E0 Offset: 0x1D364E0 VA: 0x1D364E0
	public void set_IsSelect(bool value) { }

	// RVA: 0x1D36510 Offset: 0x1D36510 VA: 0x1D36510
	public int get_SelectNum() { }

	// RVA: 0x1D36518 Offset: 0x1D36518 VA: 0x1D36518
	public void set_SelectNum(int value) { }

	// RVA: 0x1D36520 Offset: 0x1D36520 VA: 0x1D36520
	public bool get_IsTermination() { }

	// RVA: 0x1D36528 Offset: 0x1D36528 VA: 0x1D36528
	public void set_IsTermination(bool value) { }

	// RVA: 0x1D36534 Offset: 0x1D36534 VA: 0x1D36534
	public bool get_IsTerminationSpace() { }

	// RVA: 0x1D3653C Offset: 0x1D3653C VA: 0x1D3653C
	public void set_IsTerminationSpace(bool value) { }

	// RVA: 0x1D36548 Offset: 0x1D36548 VA: 0x1D36548
	public int SortCompUp(ListViewItem item) { }

	// RVA: 0x1D3664C Offset: 0x1D3664C VA: 0x1D3664C
	public int SortCompDown(ListViewItem item) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC91A40 Offset: 0xC91A40 VA: 0xC91A40
public class ListViewItemSeed : ItemSeed // TypeDefIndex: 7773
{
	// Fields
	public ListViewItemSeed.Arrangement arrangement; // 0x28
	public Vector2 arrangementVolume; // 0x2C
	public Vector2 arrangementPich; // 0x34

	// Methods

	// RVA: 0x1D36744 Offset: 0x1D36744 VA: 0x1D36744
	public void .ctor() { }

	// RVA: 0x1D367C0 Offset: 0x1D367C0 VA: 0x1D367C0
	public Vector3 GetBlank(GameObject obj) { }

	// RVA: 0x1D368C4 Offset: 0x1D368C4 VA: 0x1D368C4
	public Vector3 GetPosition(int index) { }

	// RVA: 0x1D36994 Offset: 0x1D36994 VA: 0x1D36994
	public Vector3 GetLocalPosition(int index) { }

	// RVA: 0x1D36A24 Offset: 0x1D36A24 VA: 0x1D36A24
	public void SetTransform(GameObject obj, int index) { }
}

// Namespace: 
public enum ListViewItemSeed.Arrangement // TypeDefIndex: 7774
{
	// Fields
	public int value__; // 0x0
	public const ListViewItemSeed.Arrangement Horizontal = 0;
	public const ListViewItemSeed.Arrangement Vertical = 1;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC91A78 Offset: 0xC91A78 VA: 0xC91A78
public class ListViewManager : MonoBehaviour // TypeDefIndex: 7775
{
	// Fields
	[SerializeField] // RVA: 0xCC3348 Offset: 0xCC3348 VA: 0xCC3348
	protected List<ListViewDropObject> dropObjectList; // 0x18
	[SerializeField] // RVA: 0xCC3358 Offset: 0xCC3358 VA: 0xCC3358
	protected ListViewIndicator indicator; // 0x20
	[SerializeField] // RVA: 0xCC3368 Offset: 0xCC3368 VA: 0xCC3368
	protected GameObject emptyMessageBase; // 0x28
	[SerializeField] // RVA: 0xCC3378 Offset: 0xCC3378 VA: 0xCC3378
	protected UILabel emptyMessageLabel; // 0x30
	[SerializeField] // RVA: 0xCC3388 Offset: 0xCC3388 VA: 0xCC3388
	protected UILabel sortKindLabel; // 0x38
	[SerializeField] // RVA: 0xCC3398 Offset: 0xCC3398 VA: 0xCC3398
	protected UISprite sortOrderSprite; // 0x40
	[SerializeField] // RVA: 0xCC33A8 Offset: 0xCC33A8 VA: 0xCC33A8
	protected UIScrollView scrollView; // 0x48
	[SerializeField] // RVA: 0xCC33B8 Offset: 0xCC33B8 VA: 0xCC33B8
	protected UIScrollBar scrollBar; // 0x50
	[SerializeField] // RVA: 0xCC33C8 Offset: 0xCC33C8 VA: 0xCC33C8
	protected ListViewItemSeed seed; // 0x58
	[SerializeField] // RVA: 0xCC33D8 Offset: 0xCC33D8 VA: 0xCC33D8
	protected GameObject dropDragPrefab; // 0x60
	[SerializeField] // RVA: 0xCC33E8 Offset: 0xCC33E8 VA: 0xCC33E8
	protected Vector2 clipRange; // 0x68
	[SerializeField] // RVA: 0xCC33F8 Offset: 0xCC33F8 VA: 0xCC33F8
	private GameObject dragParentObject; // 0x70
	[SerializeField] // RVA: 0xCC3408 Offset: 0xCC3408 VA: 0xCC3408
	protected List<UIDragDropListViewSurface> dropList; // 0x78
	[SerializeField] // RVA: 0xCC3418 Offset: 0xCC3418 VA: 0xCC3418
	private UICommonButton sortKindButton; // 0x80
	[SerializeField] // RVA: 0xCC3428 Offset: 0xCC3428 VA: 0xCC3428
	private UICommonButton sortOrderButton; // 0x88
	[SerializeField] // RVA: 0xCC3438 Offset: 0xCC3438 VA: 0xCC3438
	private GameObject listDragPrefab; // 0x90
	[SerializeField] // RVA: 0xCC3448 Offset: 0xCC3448 VA: 0xCC3448
	protected Vector2 clipOffset; // 0x98
	[SerializeField] // RVA: 0xCC3458 Offset: 0xCC3458 VA: 0xCC3458
	private float topFocusOffset; // 0xA0
	[SerializeField] // RVA: 0xCC3468 Offset: 0xCC3468 VA: 0xCC3468
	private bool isLoop; // 0xA4
	protected ListViewSort sort; // 0xA8
	protected List<ListViewItem> itemList; // 0xB0
	protected List<ListViewItem> itemSortList; // 0xB8
	protected List<GameObject> objectList; // 0xC0
	protected bool isInput; // 0xC8
	protected bool isScrollRefresh; // 0xC9
	protected bool execObjectExtraFlag; // 0xCA
	private Stack<GameObject> objectStock; // 0xD0
	private ListViewItem topItem; // 0xD8
	private ListViewItem bottomItem; // 0xE0
	private ListViewItem leftItem; // 0xE8
	private ListViewItem rightItem; // 0xF0
	private ListViewItem centerItem; // 0xF8
	private ListViewItem horizontalItem; // 0x100
	private ListViewItem verticalItem; // 0x108
	private bool isAllDisp; // 0x110
	private int terminalIndex; // 0x114
	private Action callbackAfterScroll; // 0x118
	private Vector3 oldScrollPosition; // 0x120
	private bool isIndecatorRefresh; // 0x12C
	protected float scrollBarValue; // 0x130
	protected int lastSelectIndex; // 0x134
	private const string SVTEQ_SCROLL_SAVE_KEY = "SvtEqScrollBarValue";
	[CompilerGeneratedAttribute] // RVA: 0xCC3478 Offset: 0xCC3478 VA: 0xCC3478
	private static Comparison<ListViewItem> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC3488 Offset: 0xCC3488 VA: 0xCC3488
	private static Comparison<ListViewItem> <>f__am$cache1; // 0x8

	// Properties
	public bool IsLoop { get; set; }
	public int DropObjectSum { get; }
	public bool IsInput { get; set; }
	public List<ListViewObject> ObjectList { get; }
	public int ItemSum { get; }
	public int ObjectSum { get; }

	// Methods

	// RVA: 0x1D36BE4 Offset: 0x1D36BE4 VA: 0x1D36BE4
	public void .ctor() { }

	// RVA: 0x1D36E10 Offset: 0x1D36E10 VA: 0x1D36E10
	public bool get_IsLoop() { }

	// RVA: 0x1D36E18 Offset: 0x1D36E18 VA: 0x1D36E18
	protected void set_IsLoop(bool value) { }

	// RVA: 0x1D36E24 Offset: 0x1D36E24 VA: 0x1D36E24
	public int get_DropObjectSum() { }

	// RVA: 0x1D36F78 Offset: 0x1D36F78 VA: 0x1D36F78
	public bool get_IsInput() { }

	// RVA: 0x1D36F80 Offset: 0x1D36F80 VA: 0x1D36F80
	public void set_IsInput(bool value) { }

	// RVA: 0x1D37070 Offset: 0x1D37070 VA: 0x1D37070
	public List<ListViewObject> get_ObjectList() { }

	// RVA: 0x1D3723C Offset: 0x1D3723C VA: 0x1D3723C
	protected void OnEnable() { }

	// RVA: 0x1D37248 Offset: 0x1D37248 VA: 0x1D37248
	public void CreateList(int sum) { }

	// RVA: 0x1D3753C Offset: 0x1D3753C VA: 0x1D3753C
	public void DestroyList() { }

	// RVA: 0x1D3794C Offset: 0x1D3794C VA: 0x1D3794C
	public int get_ItemSum() { }

	// RVA: 0x1D379AC Offset: 0x1D379AC VA: 0x1D379AC
	public ListViewItem GetItem(int index) { }

	// RVA: 0x1D37A54 Offset: 0x1D37A54 VA: 0x1D37A54
	public int get_ObjectSum() { }

	// RVA: 0x1D37BBC Offset: 0x1D37BBC VA: 0x1D37BBC
	protected void ReleaseObject() { }

	// RVA: 0x1D37DE8 Offset: 0x1D37DE8 VA: 0x1D37DE8 Slot: 4
	protected virtual void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1D37E28 Offset: 0x1D37E28 VA: 0x1D37E28 Slot: 5
	protected virtual void SetSortButtonImage() { }

	// RVA: 0x1D37FEC Offset: 0x1D37FEC VA: 0x1D37FEC
	public void DispItem(int selectIndex = -1, bool isAllDisp = False, int addEmptyTarminal = -1) { }

	// RVA: 0x1D39B10 Offset: 0x1D39B10 VA: 0x1D39B10
	public int GetMatchItemCount(ListViewSort sort) { }

	// RVA: 0x1D39C60 Offset: 0x1D39C60 VA: 0x1D39C60
	public void SortItem(int selectIndex = -1, bool isAllDisp = False, int addEmptyTarminal = -1) { }

	// RVA: 0x1D3A4A0 Offset: 0x1D3A4A0 VA: 0x1D3A4A0
	private void CheckFocusItem(List<ListViewItem> list, int sum) { }

	[DebuggerHiddenAttribute] // RVA: 0xD38364 Offset: 0xD38364 VA: 0xD38364
	// RVA: 0x1D3AC40 Offset: 0x1D3AC40 VA: 0x1D3AC40
	private IEnumerator FocusSelectItem(List<ListViewItem> list, int index) { }

