	public bool getEventUpVal(int wearersSvtId, int wearesLimitCount, int wearesDispLimitCount, EventUpValSetupInfo setupInfo) { }

	// RVA: 0x1CDFBCC Offset: 0x1CDFBCC VA: 0x1CDFBCC
	public bool getEventUpVal(ref EventUpValInfo eventUpVallInfo, bool isSupport = False) { }

	// RVA: 0x1CDFE1C Offset: 0x1CDFE1C VA: 0x1CDFE1C
	public bool getExpInfo(out int exp, out int lateExp, out float barExp) { }

	// RVA: 0x1CE00C4 Offset: 0x1CE00C4 VA: 0x1CE00C4
	public string GetSvtName() { }

	// RVA: 0x1CE0254 Offset: 0x1CE0254 VA: 0x1CE0254
	private static void .cctor() { }
}

// Namespace: 
public class EventDropItemUpValInfo // TypeDefIndex: 6614
{
	// Fields
	public int eventId; // 0x10
	public int member; // 0x14
	public FunctionEntity funcEntity; // 0x18
	public FunctionGroupEntity funcGroupEntity; // 0x20
	public FunctionGroupEntity baseFuncGroupEntity; // 0x28
	public int baseFuncId; // 0x30
	public FuncList.TYPE baseFuncType; // 0x34
	public Target.TYPE targetType; // 0x38
	public int priority; // 0x3C
	public ItemEntity itemEntity; // 0x40
	public bool isEquipUp; // 0x48
	public int addCount; // 0x4C
	public int rateCount; // 0x50
	public bool isInvalid; // 0x54

	// Methods

	// RVA: 0x1D2B7E0 Offset: 0x1D2B7E0 VA: 0x1D2B7E0
	public void .ctor(int member, EventDropUpValInfo dropInfo, bool isEquip = False) { }

	// RVA: 0x1D2BB08 Offset: 0x1D2BB08 VA: 0x1D2BB08
	public void .ctor(int member, EventDropUpValInfo dropInfo, ItemEntity itemEntity) { }
}

// Namespace: 
public class EventDropUpValInfo // TypeDefIndex: 6615
{
	// Fields
	public int eventId; // 0x10
	public FunctionEntity funcEntity; // 0x18
	public int individuality; // 0x20
	public bool isEquipUp; // 0x24
	public int addCount; // 0x28
	public int rateCount; // 0x2C
	public bool isInvalid; // 0x30

	// Methods

	// RVA: 0x1D2BE3C Offset: 0x1D2BE3C VA: 0x1D2BE3C
	public void .ctor(int eventId, FunctionEntity funcEntity) { }

	// RVA: 0x1D2BE7C Offset: 0x1D2BE7C VA: 0x1D2BE7C
	public void .ctor(int eventId, FunctionEntity funcEntity, int individuality) { }

	// RVA: 0x1D2BEC0 Offset: 0x1D2BEC0 VA: 0x1D2BEC0
	public void SetAddCount(int v, bool isEquipUp = False, bool isInvalid = False) { }

	// RVA: 0x1D2BED8 Offset: 0x1D2BED8 VA: 0x1D2BED8
	public void SetRateCount(int v, bool isEquipUp = False, bool isInvalid = False) { }

	// RVA: 0x1D2BEF0 Offset: 0x1D2BEF0 VA: 0x1D2BEF0
	public FuncList.TYPE GetFuncType() { }
}

// Namespace: 
public class EventMargeItemUpValInfo // TypeDefIndex: 6616
{
	// Fields
	public int eventId; // 0x10
	public int member; // 0x14
	public string servantName; // 0x18
	public bool isFollower; // 0x20
	public bool isOtherUp; // 0x21
	public FunctionGroupEntity funcGroupEntity; // 0x28
	public FunctionGroupEntity baseFuncGroupEntity; // 0x30
	public int baseFuncId; // 0x38
	public FuncList.TYPE baseFuncType; // 0x3C
	public Target.TYPE targetType; // 0x40
	public int priority1; // 0x44
	public int priority2; // 0x48
	public ItemEntity itemEntity; // 0x50
	public bool isEquipUp; // 0x58
	public int addCount; // 0x5C
	public int rateCount; // 0x60
	private bool isFriendPointBonus; // 0x64
	private int friendPointBonus; // 0x68

	// Methods

	// RVA: 0x1B7CC78 Offset: 0x1B7CC78 VA: 0x1B7CC78
	public void .ctor(EventDropItemUpValInfo dropItemInfo) { }

	// RVA: 0x1B7CD64 Offset: 0x1B7CD64 VA: 0x1B7CD64
	public void .ctor(int member, string servantName, bool isFollower, bool isOtherUp, EventDropItemUpValInfo dropItemInfo) { }

	// RVA: 0x1B7CEA4 Offset: 0x1B7CEA4 VA: 0x1B7CEA4
	public void .ctor(int eventId, int friendPointBonus) { }

	// RVA: 0x1B7CEE8 Offset: 0x1B7CEE8 VA: 0x1B7CEE8
	public bool IsFriendPointUpBonus() { }

	// RVA: 0x1B7CEF0 Offset: 0x1B7CEF0 VA: 0x1B7CEF0
	public bool IsServantSelfValInfo() { }

	// RVA: 0x1B7CF00 Offset: 0x1B7CF00 VA: 0x1B7CF00
	public string GetColorString() { }

	// RVA: 0x1B7CF94 Offset: 0x1B7CF94 VA: 0x1B7CF94
	public string GetServantName() { }

	// RVA: 0x1B7D098 Offset: 0x1B7D098 VA: 0x1B7D098
	public string GetItemName() { }

	// RVA: 0x1B7D114 Offset: 0x1B7D114 VA: 0x1B7D114
	public string GetNameTitleString() { }

	// RVA: 0x1B7D190 Offset: 0x1B7D190 VA: 0x1B7D190
	public string GetNameTotalString() { }

	// RVA: 0x1B7D20C Offset: 0x1B7D20C VA: 0x1B7D20C
	public string GetTargetString() { }

	// RVA: 0x1B7D384 Offset: 0x1B7D384 VA: 0x1B7D384
	public string GetEventUpString() { }

	// RVA: 0x1B7D6B8 Offset: 0x1B7D6B8 VA: 0x1B7D6B8
	public void SetIcon(UISprite sprite) { }

	// RVA: 0x1B7D868 Offset: 0x1B7D868 VA: 0x1B7D868
	public int CompPersonalPriority(EventMargeItemUpValInfo info) { }

	// RVA: 0x1B7D8C0 Offset: 0x1B7D8C0 VA: 0x1B7D8C0
	public int CompMemberPriority(EventMargeItemUpValInfo info) { }

	// RVA: 0x1B7D94C Offset: 0x1B7D94C VA: 0x1B7D94C
	public int CompPartyPriority(EventMargeItemUpValInfo info) { }
}

// Namespace: 
public class EventMemberMargeUpValInfo // TypeDefIndex: 6617
{
	// Fields
	public int eventId; // 0x10
	public int member; // 0x14
	public ServantEntity servantEntity; // 0x18
	public string servantName; // 0x20
	public bool isFollower; // 0x28
	public List<EventMargeItemUpValInfo> margeList; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xCC13D0 Offset: 0xCC13D0 VA: 0xCC13D0
	private static Comparison<EventMargeItemUpValInfo> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1B806A4 Offset: 0x1B806A4 VA: 0x1B806A4
	public void .ctor(int eventId, int member, ServantEntity servantEntity, string servantName, bool isFollower) { }

	// RVA: 0x1B80754 Offset: 0x1B80754 VA: 0x1B80754
	public bool IsEmpry() { }

	// RVA: 0x1B807C0 Offset: 0x1B807C0 VA: 0x1B807C0
	public int GetCount() { }

	// RVA: 0x1B80820 Offset: 0x1B80820 VA: 0x1B80820
	public EventMargeItemUpValInfo GetMargeItem(int index) { }

	// RVA: 0x1B808C8 Offset: 0x1B808C8 VA: 0x1B808C8
	public void Add(EventDropItemUpValInfo[] dropItemInfoList) { }

	// RVA: 0x1B80940 Offset: 0x1B80940 VA: 0x1B80940
	public void Add(EventDropItemUpValInfo dropItemInfo) { }

	// RVA: 0x1B80EDC Offset: 0x1B80EDC VA: 0x1B80EDC
	public EventMargeItemUpValInfo[] GetList() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3765C Offset: 0xD3765C VA: 0xD3765C
	// RVA: 0x1B80FD0 Offset: 0x1B80FD0 VA: 0x1B80FD0
	private static int <GetList>m__0(EventMargeItemUpValInfo a, EventMargeItemUpValInfo b) { }
}

// Namespace: 
public class EventPartyMargeUpValInfo // TypeDefIndex: 6618
{
	// Fields
	public int eventId; // 0x10
	public ServantEntity[] svtEntityList; // 0x18
	public string[] servantNameList; // 0x20
	public bool[] isFollowerList; // 0x28
	public List<EventMargeItemUpValInfo> margeList; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xCC13E0 Offset: 0xCC13E0 VA: 0xCC13E0
	private static Comparison<EventMargeItemUpValInfo> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1EC07A0 Offset: 0x1EC07A0 VA: 0x1EC07A0
	public void .ctor(int eventId, ServantEntity[] svtEntityList, string[] servantNameList, bool[] isFollowerList) { }

	// RVA: 0x1EC0840 Offset: 0x1EC0840 VA: 0x1EC0840
	public bool IsEmpry() { }

	// RVA: 0x1EC08AC Offset: 0x1EC08AC VA: 0x1EC08AC
	public int GetCount() { }

	// RVA: 0x1EC090C Offset: 0x1EC090C VA: 0x1EC090C
	public EventMargeItemUpValInfo GetMargeItem(int index) { }

	// RVA: 0x1EC09B4 Offset: 0x1EC09B4 VA: 0x1EC09B4
	public void Add(EventDropItemUpValInfo[] dropItemInfoList) { }

	// RVA: 0x1EC0A2C Offset: 0x1EC0A2C VA: 0x1EC0A2C
	public void Add(EventDropItemUpValInfo dropItemInfo) { }

	// RVA: 0x1EC129C Offset: 0x1EC129C VA: 0x1EC129C
	public EventMargeItemUpValInfo[] GetList() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3766C Offset: 0xD3766C VA: 0xD3766C
	// RVA: 0x1EC1390 Offset: 0x1EC1390 VA: 0x1EC1390
	private static int <GetList>m__0(EventMargeItemUpValInfo a, EventMargeItemUpValInfo b) { }
}

// Namespace: 
public class EventPersonalMargeUpValInfo // TypeDefIndex: 6619
{
	// Fields
	public int eventId; // 0x10
	public ServantEntity servantEntity; // 0x18
	public List<EventMargeItemUpValInfo> margeList; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCC13F0 Offset: 0xCC13F0 VA: 0xCC13F0
	private static Comparison<EventMargeItemUpValInfo> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1EC13C4 Offset: 0x1EC13C4 VA: 0x1EC13C4
	public void .ctor(int eventId, ServantEntity servantEntity) { }

	// RVA: 0x1EC1450 Offset: 0x1EC1450 VA: 0x1EC1450
	public bool IsEmpty() { }

	// RVA: 0x1EC14BC Offset: 0x1EC14BC VA: 0x1EC14BC
	public int GetCount() { }

	// RVA: 0x1EC151C Offset: 0x1EC151C VA: 0x1EC151C
	public EventMargeItemUpValInfo GetMargeItem(int index) { }

	// RVA: 0x1EC15C4 Offset: 0x1EC15C4 VA: 0x1EC15C4
	public void Add(EventDropItemUpValInfo[] dropItemInfoList) { }

	// RVA: 0x1EC17A0 Offset: 0x1EC17A0 VA: 0x1EC17A0
	public void Add(EventDropItemUpValInfo dropItemInfo, bool isInvalid) { }

	// RVA: 0x1EC1D50 Offset: 0x1EC1D50 VA: 0x1EC1D50
	public EventMargeItemUpValInfo[] GetList() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3767C Offset: 0xD3767C VA: 0xD3767C
	// RVA: 0x1EC1E44 Offset: 0x1EC1E44 VA: 0x1EC1E44
	private static int <GetList>m__0(EventMargeItemUpValInfo a, EventMargeItemUpValInfo b) { }
}

// Namespace: 
public class EventRandomMissionClearManager : ScriptableObject // TypeDefIndex: 6620
{
	// Fields
	protected static readonly string SAVE_DATA_VERSION; // 0x0
	protected static readonly int LIST_MAX; // 0x8
	protected static bool isModify; // 0xC
	protected static bool isContinueDevice; // 0xD
	protected static List<ClearRandomMissionInfo> clearRandomMissionList; // 0x10

	// Methods

	// RVA: 0x1C98F98 Offset: 0x1C98F98 VA: 0x1C98F98
	public void .ctor() { }

	// RVA: 0x1C98FA0 Offset: 0x1C98FA0 VA: 0x1C98FA0
	protected static string GetSaveFileName() { }

	// RVA: 0x1C99078 Offset: 0x1C99078 VA: 0x1C99078
	public static void DeleteSaveData() { }

	// RVA: 0x1C990FC Offset: 0x1C990FC VA: 0x1C990FC
	public static void Initialize() { }

	// RVA: 0x1C99720 Offset: 0x1C99720 VA: 0x1C99720
	public static void ClearSaveDataList() { }

	// RVA: 0x1C99824 Offset: 0x1C99824 VA: 0x1C99824
	public static void AddClearRandomMissionInfo(ClearRandomMissionInfo info) { }

	// RVA: 0x1C99970 Offset: 0x1C99970 VA: 0x1C99970
	public static ClearRandomMissionInfo[] GetClearRandomMissionInfos() { }

	// RVA: 0x1C99158 Offset: 0x1C99158 VA: 0x1C99158
	public static bool ReadData() { }

	// RVA: 0x1C999F4 Offset: 0x1C999F4 VA: 0x1C999F4
	public static bool WriteData() { }

	// RVA: 0x1C99EFC Offset: 0x1C99EFC VA: 0x1C99EFC
	private static void .cctor() { }
}

// Namespace: 
public class EventServantFatigueInfo // TypeDefIndex: 6621
{
	// Fields
	public int svtId; // 0x10
	public long recoveryAt; // 0x18

	// Methods

	// RVA: 0x1C372E0 Offset: 0x1C372E0 VA: 0x1C372E0
	public void .ctor() { }
}

// Namespace: 
public class EventUpValInfo // TypeDefIndex: 6622
{
	// Fields
	public EventUpValSetupInfo setupInfo; // 0x10
	public int svtId; // 0x18
	public int limitCount; // 0x1C
	public int dispLimitCount; // 0x20
	public int equipSvtId; // 0x24
	public int npcFlag; // 0x28
	public List<EventDropUpValInfo> dropList; // 0x30

	// Methods

	// RVA: 0x160C68C Offset: 0x160C68C VA: 0x160C68C
	public void .ctor(EventUpValSetupInfo setupInfo, int svtId, int limitCount, int dispLimitCount, int npcFlag = 0) { }

	// RVA: 0x160C73C Offset: 0x160C73C VA: 0x160C73C
	public void SetEquipSvtId(int equipSvtId) { }

	// RVA: 0x160C744 Offset: 0x160C744 VA: 0x160C744
	public void ClearEquipSvtId() { }

	// RVA: 0x160C74C Offset: 0x160C74C VA: 0x160C74C
	public bool IsEmpry() { }

	// RVA: 0x160C7B8 Offset: 0x160C7B8 VA: 0x160C7B8
	public bool IsEquipSvtId() { }

	// RVA: 0x160C7C8 Offset: 0x160C7C8 VA: 0x160C7C8
	public EventDropItemUpValInfo[] GetDropItemList(int member) { }

	// RVA: 0x160CB10 Offset: 0x160CB10 VA: 0x160CB10
	public void RemoveDropItem(int funcId) { }
}

// Namespace: 
public class EventUpValSetupInfo // TypeDefIndex: 6623
{
	// Fields
	protected bool isQuestStart; // 0x10
	protected int questId; // 0x14
	protected int[] eventIdList; // 0x18
	protected int[] servantFilterEventIdList; // 0x20
	protected int[] servantEquipFilterEventIdList; // 0x28
	protected int[] supportFilterEventIdList; // 0x30
	protected int[] supportEquipFilterEventIdList; // 0x38
	protected int[] servantFilterIdList; // 0x40
	protected int[] eventCampaignIdList; // 0x48
	protected List<int[]> eventCampaignServantIdList; // 0x50
	protected Dictionary<int, int[]> questPhaseIndivLists; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xCC1400 Offset: 0xCC1400 VA: 0xCC1400
	private static Comparison<EventCampaignEntity> <>f__am$cache0; // 0x0

	// Properties
	public bool IsQuestStart { get; }
	public int QuestId { get; }
	public int EventId { get; }
	public int[] EventIdList { get; }
	public int ServantFilterEventId { get; }
	public int[] ServantFilterEventIdList { get; }
	public int ServantEquipFilterEventId { get; }
	public int[] ServantEquipFilterEventIdList { get; }
	public int SupportFilterEventId { get; }
	public int[] SupportFilterEventIdList { get; }
	public int SupportEquipFilterEventId { get; }
	public int[] SupportEquipFilterEventIdList { get; }
	public int[] ServantFilterIdList { get; }
	public int[] EventCampaignIdList { get; }
	public List<int[]> EventCampaignServantIdList { get; }

	// Methods

	// RVA: 0x160CC80 Offset: 0x160CC80 VA: 0x160CC80
	public void .ctor(int questId, int questPhase, int eventId) { }

	// RVA: 0x160D220 Offset: 0x160D220 VA: 0x160D220
	public void .ctor(int[] eventIdList, bool ignoreFlg = False) { }

	// RVA: 0x160D2D4 Offset: 0x160D2D4 VA: 0x160D2D4
	public bool get_IsQuestStart() { }

	// RVA: 0x160D2DC Offset: 0x160D2DC VA: 0x160D2DC
	public int get_QuestId() { }

	// RVA: 0x160D2E4 Offset: 0x160D2E4 VA: 0x160D2E4
	public int get_EventId() { }

	// RVA: 0x160D350 Offset: 0x160D350 VA: 0x160D350
	public int[] get_EventIdList() { }

	// RVA: 0x160D358 Offset: 0x160D358 VA: 0x160D358
	public int get_ServantFilterEventId() { }

	// RVA: 0x160D3C4 Offset: 0x160D3C4 VA: 0x160D3C4
	public int[] get_ServantFilterEventIdList() { }

	// RVA: 0x160D3CC Offset: 0x160D3CC VA: 0x160D3CC
	public int get_ServantEquipFilterEventId() { }

	// RVA: 0x160D438 Offset: 0x160D438 VA: 0x160D438
	public int[] get_ServantEquipFilterEventIdList() { }

	// RVA: 0x160D440 Offset: 0x160D440 VA: 0x160D440
	public int get_SupportFilterEventId() { }

	// RVA: 0x160D4AC Offset: 0x160D4AC VA: 0x160D4AC
	public int[] get_SupportFilterEventIdList() { }

	// RVA: 0x160D4B4 Offset: 0x160D4B4 VA: 0x160D4B4
	public int get_SupportEquipFilterEventId() { }

	// RVA: 0x160D520 Offset: 0x160D520 VA: 0x160D520
	public int[] get_SupportEquipFilterEventIdList() { }

	// RVA: 0x160D528 Offset: 0x160D528 VA: 0x160D528
	public int[] get_ServantFilterIdList() { }

	// RVA: 0x160D530 Offset: 0x160D530 VA: 0x160D530
	public int[] get_EventCampaignIdList() { }

	// RVA: 0x160D538 Offset: 0x160D538 VA: 0x160D538
	public List<int[]> get_EventCampaignServantIdList() { }

	// RVA: 0x160CE9C Offset: 0x160CE9C VA: 0x160CE9C
	protected void AnalyzeInfo(bool ignoreFlg = False) { }

	// RVA: 0x160D540 Offset: 0x160D540 VA: 0x160D540
	public void AnalyzeInfoCampaign() { }

	// RVA: 0x160DC30 Offset: 0x160DC30 VA: 0x160DC30
	public int[] GetQuestPhaseIndividualList(int eventId) { }

	// RVA: 0x160DDBC Offset: 0x160DDBC VA: 0x160DDBC
	public bool IsUpVal(int[] questPhaseIndividualityList, int[] questIndividualities) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3768C Offset: 0xD3768C VA: 0xD3768C
	// RVA: 0x160DDF0 Offset: 0x160DDF0 VA: 0x160DDF0
	private static int <AnalyzeInfoCampaign>m__0(EventCampaignEntity a, EventCampaignEntity b) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEC70 Offset: 0xCAEC70 VA: 0xCAEC70
private sealed class EventUpValSetupInfo.<AnalyzeInfoCampaign>c__AnonStorey0 // TypeDefIndex: 6624
{
	// Fields
	internal EventMaster eventMaster; // 0x10

	// Methods

	// RVA: 0x160DC28 Offset: 0x160DC28 VA: 0x160DC28
	public void .ctor() { }

	// RVA: 0x160DE68 Offset: 0x160DE68 VA: 0x160DE68
	internal int <>m__0(EventCampaignEntity a, EventCampaignEntity b) { }
}

// Namespace: 
public class FollowerInfo // TypeDefIndex: 6625
{
	// Fields
	public long userId; // 0x10
	public string userName; // 0x18
	public int userLv; // 0x20
	public int type; // 0x24
	public ServantLeaderInfo[] userSvtLeaderHash; // 0x28
	public ServantLeaderInfo[] eventUserSvtLeaderHash; // 0x30
	public long tutorial1; // 0x38
	public string message; // 0x40
	public long npcFollowerSvtId; // 0x48
	public int npcInitIdx; // 0x50
	public long pushUserSvtId; // 0x58
	public bool isMySvtOrNpc; // 0x60
	public bool isFixedNpc; // 0x61
	public int imageSvtId; // 0x64
	public int[] mainSupportDeckIds; // 0x68
	public int[] eventSupportDeckIds; // 0x70

	// Properties
	public Follower.Type FollowerType { get; }
	public bool IsNpc { get; }

	// Methods

	// RVA: 0x1905124 Offset: 0x1905124 VA: 0x1905124
	public void .ctor() { }

	// RVA: 0x190512C Offset: 0x190512C VA: 0x190512C
	public static FollowerInfo.ReturnSupportServantType GetReturnTypeByQuestId(int questId) { }

	// RVA: 0x19051D8 Offset: 0x19051D8 VA: 0x19051D8
	public Follower.Type get_FollowerType() { }

	// RVA: 0x19051E0 Offset: 0x19051E0 VA: 0x19051E0
	public bool get_IsNpc() { }

	// RVA: 0x19051F4 Offset: 0x19051F4 VA: 0x19051F4
	private ServantLeaderInfo[] GetServantLeaderInfoByReturnType(FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x190520C Offset: 0x190520C VA: 0x190520C
	public int getIndex(int classId, FollowerInfo.ReturnSupportServantType returnSupportServantType, int supportDeckId = 0) { }

	// RVA: 0x1905374 Offset: 0x1905374 VA: 0x1905374
	public int getIndexForSupport(int classId, FollowerInfo.ReturnSupportServantType returnSupportServantType, int supportDeckId = 0) { }

	// RVA: 0x1905454 Offset: 0x1905454 VA: 0x1905454
	public ServantLeaderInfo getServantLeaderInfo(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x19054C0 Offset: 0x19054C0 VA: 0x19054C0
	public EquipTargetInfo getEquipTarget1(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x190556C Offset: 0x190556C VA: 0x190556C
	public long getUserSvtId(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1905618 Offset: 0x1905618 VA: 0x1905618
	public int getSvtId(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1905728 Offset: 0x1905728 VA: 0x1905728
	public int getLv(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x19057D4 Offset: 0x19057D4 VA: 0x19057D4
	public int getMaxLv(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x19058A0 Offset: 0x19058A0 VA: 0x19058A0
	public int getLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x190594C Offset: 0x190594C VA: 0x190594C
	public int getExceedCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x19059F8 Offset: 0x19059F8 VA: 0x19059F8
	public int getHp(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1905A6C Offset: 0x1905A6C VA: 0x1905A6C
	public int getAdjustHp(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1905AE0 Offset: 0x1905AE0 VA: 0x1905AE0
	public int getAtk(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1905B54 Offset: 0x1905B54 VA: 0x1905B54
	public int getAdjustAtk(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1905BC8 Offset: 0x1905BC8 VA: 0x1905BC8
	public int getExp(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1905C3C Offset: 0x1905C3C VA: 0x1905C3C
	public long getEquipUserSvtId(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1905DA0 Offset: 0x1905DA0 VA: 0x1905DA0
	public int getEquipSvtId(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1905EF4 Offset: 0x1905EF4 VA: 0x1905EF4
	public int getEquipLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1905F78 Offset: 0x1905F78 VA: 0x1905F78
	public int getEquipHp(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906068 Offset: 0x1906068 VA: 0x1906068
	public int getEquipAtk(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906174 Offset: 0x1906174 VA: 0x1906174
	public long getUpdatedAt() { }

	// RVA: 0x19061EC Offset: 0x19061EC VA: 0x19061EC
	public int[] getSkillIdList(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906264 Offset: 0x1906264 VA: 0x1906264
	public int[] getSkillLevelList(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x19062DC Offset: 0x19062DC VA: 0x19062DC
	public void getSkillInfo(out SkillInfo[] skillInfoList, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906364 Offset: 0x1906364 VA: 0x1906364
	public int getFriendPointUpVal(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x19063DC Offset: 0x19063DC VA: 0x19063DC
	public FuncList.TYPE getFriendPointUpType(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906454 Offset: 0x1906454 VA: 0x1906454
	public bool getEventUpVal(EventUpValSetupInfo setupInfo, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x19064DC Offset: 0x19064DC VA: 0x19064DC
	public bool getServantEventUpVal(EventUpValSetupInfo setupInfo, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906564 Offset: 0x1906564 VA: 0x1906564
	public bool getEquipEventUpVal(EventUpValSetupInfo setupInfo, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x19065EC Offset: 0x19065EC VA: 0x19065EC
	public bool getEventUpVal(out EventUpValInfo eventUpVallInfo, EventUpValSetupInfo setupInfo, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x190667C Offset: 0x190667C VA: 0x190667C
	public bool getEventUpVal(out EventUpValInfo eventUpVallInfo, out bool isServantEventUpVal, out bool isEquipEventUpVal, EventUpValSetupInfo setupInfo, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906724 Offset: 0x1906724 VA: 0x1906724
	public bool getQuestRestriction(QuestRestrictionInfo questRestrictionInfo, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x19067D0 Offset: 0x19067D0 VA: 0x19067D0
	public bool getUniqueSvtRestriction(QuestRestrictionInfo questRestrictionInfo, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906858 Offset: 0x1906858 VA: 0x1906858
	public bool getUniqueSvtRestriction(QuestRestrictionInfo questRestrictionInfo, int index, PartyListViewItem partyItem, int num, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x19068F8 Offset: 0x19068F8 VA: 0x19068F8
	public bool getTreasureDeviceInfo(out TreasureDvcInfo tdInfo, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906980 Offset: 0x1906980 VA: 0x1906980
	public bool getTreasureDeviceInfo(out int tdLv, out int tdMaxLv, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906A10 Offset: 0x1906A10 VA: 0x1906A10
	public int getTreasureDeviceLevelIcon(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906A88 Offset: 0x1906A88 VA: 0x1906A88
	public int getFrameType(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906AAC Offset: 0x1906AAC VA: 0x1906AAC
	public int getDispLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906AD0 Offset: 0x1906AD0 VA: 0x1906AD0
	public int getMaxDispLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906AF4 Offset: 0x1906AF4 VA: 0x1906AF4
	public int getCommandCardLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906B18 Offset: 0x1906B18 VA: 0x1906B18
	public int getMaxCommandCardLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906B3C Offset: 0x1906B3C VA: 0x1906B3C
	public int getCardImageLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906B60 Offset: 0x1906B60 VA: 0x1906B60
	public int getMaxCardImageLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906B88 Offset: 0x1906B88 VA: 0x1906B88
	public int getIconImageLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906BAC Offset: 0x1906BAC VA: 0x1906BAC
	public int getMaxIconLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906BD4 Offset: 0x1906BD4 VA: 0x1906BD4
	public int[] getCommandCodeIdList(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1906BF8 Offset: 0x1906BF8 VA: 0x1906BF8
	public void SetEquipInfoForNpc(EquipTargetInfo equipTargetInfo) { }

	// RVA: 0x1906C98 Offset: 0x1906C98 VA: 0x1906C98
	public void ChangeLimitCountBySpoilerProtection() { }

	// RVA: 0x1906DD4 Offset: 0x1906DD4 VA: 0x1906DD4
	public void GetAppendSkillInfo(out SkillInfo[] skillInfoList, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType, bool isNpc) { }
}

// Namespace: 
public enum FollowerInfo.ReturnSupportServantType // TypeDefIndex: 6626
{
	// Fields
	public int value__; // 0x0
	public const FollowerInfo.ReturnSupportServantType MainQuest = 0;
	public const FollowerInfo.ReturnSupportServantType EventQuest = 1;
}

// Namespace: 
public class GachaData // TypeDefIndex: 6627
{
	// Fields
	public GachaPickupSvt[] pickUpSvts; // 0x10
	public GachaSvts[] svts; // 0x18

	// Methods

	// RVA: 0x1E8AA8C Offset: 0x1E8AA8C VA: 0x1E8AA8C
	public void .ctor() { }
}

// Namespace: 
public class GachaPickupSvt // TypeDefIndex: 6628
{
	// Fields
	public int svtId; // 0x10
	public int imageId; // 0x14

	// Methods

	// RVA: 0x1E8C51C Offset: 0x1E8C51C VA: 0x1E8C51C
	public void .ctor() { }
}

// Namespace: 
public class GachaSvts // TypeDefIndex: 6629
{
	// Fields
	public int svtId; // 0x10
	public int imageId; // 0x14

	// Methods

	// RVA: 0x1E8D354 Offset: 0x1E8D354 VA: 0x1E8D354
	public void .ctor() { }
}

// Namespace: GiftName
public abstract class GiftNameBase // TypeDefIndex: 6630
{
	// Fields
	protected string name; // 0x10
	protected string count; // 0x18

	// Methods

	// RVA: 0x20FD258 Offset: 0x20FD258 VA: 0x20FD258
	protected void .ctor() { }

	// RVA: 0x20FD8AC Offset: 0x20FD8AC VA: 0x20FD8AC
	public string GetGiftName() { }

	// RVA: 0x20FD8B4 Offset: 0x20FD8B4 VA: 0x20FD8B4
	public string GetGiftCountString() { }
}

// Namespace: GiftName
public class Item : GiftNameBase // TypeDefIndex: 6631
{
	// Methods

	// RVA: 0x20FDA40 Offset: 0x20FDA40 VA: 0x20FDA40
	public void .ctor(int objectId, int count) { }
}

// Namespace: GiftName
public class Servant : GiftNameBase // TypeDefIndex: 6632
{
	// Methods

	// RVA: 0x20FDB2C Offset: 0x20FDB2C VA: 0x20FDB2C
	public void .ctor(int objectId, int count) { }
}

// Namespace: GiftName
public class FriendShip : GiftNameBase // TypeDefIndex: 6633
{
	// Methods

	// RVA: 0x20FD7F4 Offset: 0x20FD7F4 VA: 0x20FD7F4
	public void .ctor(int count) { }
}

// Namespace: GiftName
public class UserExp : GiftNameBase // TypeDefIndex: 6634
{
	// Methods

	// RVA: 0x20FDC40 Offset: 0x20FDC40 VA: 0x20FDC40
	public void .ctor(int count) { }
}

// Namespace: GiftName
public class Equip : GiftNameBase // TypeDefIndex: 6635
{
	// Methods

	// RVA: 0x20FD6C0 Offset: 0x20FD6C0 VA: 0x20FD6C0
	public void .ctor(int objectId, int count) { }
}

// Namespace: GiftName
public class CommandCode : GiftNameBase // TypeDefIndex: 6636
{
	// Methods

	// RVA: 0x20FD124 Offset: 0x20FD124 VA: 0x20FD124
	public void .ctor(int objectId, int count) { }
}

// Namespace: GiftName
public class CostumeRelease : GiftNameBase // TypeDefIndex: 6637
{
	// Methods

	// RVA: 0x20FD560 Offset: 0x20FD560 VA: 0x20FD560
	public void .ctor(int objectId, int count) { }
}

// Namespace: GiftName
public class Unknown : GiftNameBase // TypeDefIndex: 6638
{
	// Methods

	// RVA: 0x20FDCF8 Offset: 0x20FDCF8 VA: 0x20FDCF8
	public void .ctor() { }
}

// Namespace: GiftName
public class GiftNameFactoryBySummonHistory // TypeDefIndex: 6639
{
	// Methods

	// RVA: 0x20FDDA0 Offset: 0x20FDDA0 VA: 0x20FDDA0
	public void .ctor() { }

	// RVA: 0x20FDDA8 Offset: 0x20FDDA8 VA: 0x20FDDA8
	public static GiftNameBase Create(Gift.Type type, int objectId, int count) { }

	// RVA: 0x20FDF24 Offset: 0x20FDF24 VA: 0x20FDF24
	private static void OutputWarnLog(Gift.Type type) { }
}

// Namespace: GiftName
public class ServantBySummonHistory : GiftNameBase // TypeDefIndex: 6640
{
	// Methods

	// RVA: 0x20FDF28 Offset: 0x20FDF28 VA: 0x20FDF28
	public void .ctor(int objectId, int count) { }
}

// Namespace: GiftName
public class CommandCodeBySummonHistory : GiftNameBase // TypeDefIndex: 6641
{
	// Methods

	// RVA: 0x20FD260 Offset: 0x20FD260 VA: 0x20FD260
	public void .ctor(int objectId, int count) { }
}

// Namespace: GiftName
public class GiftNameFactory // TypeDefIndex: 6642
{
	// Methods

	// RVA: 0x20FD8BC Offset: 0x20FD8BC VA: 0x20FD8BC
	public void .ctor() { }

	// RVA: 0x20FD8C4 Offset: 0x20FD8C4 VA: 0x20FD8C4
	public static GiftNameBase Create(Gift.Type type, int objectId, int count) { }
}

// Namespace: 
public class LastUsedDeckNumberManager // TypeDefIndex: 6643
{
	// Fields
	protected static readonly string SAVE_DATA_VERSION; // 0x0
	protected static bool isModfiy; // 0x8
	protected static bool isContinueDevice; // 0x9
	protected static List<LastUsedDeckNumberManager.LastUsedInfo> lastUsedInfoList; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCC1410 Offset: 0xCC1410 VA: 0xCC1410
	private static Func<LastUsedDeckNumberManager.LastUsedInfo, LastUsedDeckNumberManager.LastUsedInfo, LastUsedDeckNumberManager.LastUsedInfo> <>f__am$cache0; // 0x18

	// Methods

	// RVA: 0x1728D84 Offset: 0x1728D84 VA: 0x1728D84
	public void .ctor() { }

	// RVA: 0x1728D8C Offset: 0x1728D8C VA: 0x1728D8C
	protected static string GetSaveFileName() { }

	// RVA: 0x1728E64 Offset: 0x1728E64 VA: 0x1728E64
	public static void DeleteSaveData() { }

	// RVA: 0x1728FF0 Offset: 0x1728FF0 VA: 0x1728FF0
	public static void Initialize() { }

	// RVA: 0x1728EEC Offset: 0x1728EEC VA: 0x1728EEC
	protected static void ClearSaveDataList() { }

	// RVA: 0x1729528 Offset: 0x1729528 VA: 0x1729528
	public static void SetDeckNumber(int questId, int deckNumber) { }

	// RVA: 0x17299E0 Offset: 0x17299E0 VA: 0x17299E0
	public static int GetDeckNumber(int questId) { }

	// RVA: 0x1729880 Offset: 0x1729880 VA: 0x1729880
	public static void DeleteData(int questId) { }

	// RVA: 0x172904C Offset: 0x172904C VA: 0x172904C
	public static bool ReadData() { }

	// RVA: 0x1729AF0 Offset: 0x1729AF0 VA: 0x1729AF0
	public static bool WriteData() { }

	// RVA: 0x1729F08 Offset: 0x1729F08 VA: 0x1729F08
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3769C Offset: 0xD3769C VA: 0xD3769C
	// RVA: 0x1729FA8 Offset: 0x1729FA8 VA: 0x1729FA8
	private static LastUsedDeckNumberManager.LastUsedInfo <SetDeckNumber>m__0(LastUsedDeckNumberManager.LastUsedInfo x, LastUsedDeckNumberManager.LastUsedInfo y) { }
}

// Namespace: 
protected class LastUsedDeckNumberManager.LastUsedInfo // TypeDefIndex: 6644
{
	// Fields
	public int questId; // 0x10
	public int deckNumber; // 0x14
	public long time; // 0x18

	// Methods

	// RVA: 0x17299D8 Offset: 0x17299D8 VA: 0x17299D8
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEC80 Offset: 0xCAEC80 VA: 0xCAEC80
private sealed class LastUsedDeckNumberManager.<SetDeckNumber>c__AnonStorey0 // TypeDefIndex: 6645
{
	// Fields
	internal int questId; // 0x10

	// Methods

	// RVA: 0x1729878 Offset: 0x1729878 VA: 0x1729878
	public void .ctor() { }

	// RVA: 0x172A06C Offset: 0x172A06C VA: 0x172A06C
	internal bool <>m__0(LastUsedDeckNumberManager.LastUsedInfo x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEC90 Offset: 0xCAEC90 VA: 0xCAEC90
private sealed class LastUsedDeckNumberManager.<GetDeckNumber>c__AnonStorey1 // TypeDefIndex: 6646
{
	// Fields
	internal int questId; // 0x10

	// Methods

	// RVA: 0x1729AE0 Offset: 0x1729AE0 VA: 0x1729AE0
	public void .ctor() { }

	// RVA: 0x172A030 Offset: 0x172A030 VA: 0x172A030
	internal bool <>m__0(LastUsedDeckNumberManager.LastUsedInfo x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAECA0 Offset: 0xCAECA0 VA: 0xCAECA0
private sealed class LastUsedDeckNumberManager.<DeleteData>c__AnonStorey2 // TypeDefIndex: 6647
{
	// Fields
	internal int questId; // 0x10

	// Methods

	// RVA: 0x1729AE8 Offset: 0x1729AE8 VA: 0x1729AE8
	public void .ctor() { }

	// RVA: 0x1729FF4 Offset: 0x1729FF4 VA: 0x1729FF4
	internal bool <>m__0(LastUsedDeckNumberManager.LastUsedInfo x) { }
}

// Namespace: 
public abstract class DataEntityBase // TypeDefIndex: 6648
{
	// Properties
	public abstract string PrimaryKey { get; }

	// Methods

	// RVA: 0x138CCD0 Offset: 0x138CCD0 VA: 0x138CCD0
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract string get_PrimaryKey();

	// RVA: -1 Offset: -1
	protected static string CreateMultiplePK<T>(T arg1) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21CB1AC Offset: 0x21CB1AC VA: 0x21CB1AC
	|-DataEntityBase.CreateMultiplePK<int>
	|
	|-RVA: 0x21CB1D4 Offset: 0x21CB1D4 VA: 0x21CB1D4
	|-DataEntityBase.CreateMultiplePK<object>
	*/

	// RVA: 0x138CCD8 Offset: 0x138CCD8 VA: 0x138CCD8
	protected static string CreateMultiplePK(long arg1, long arg2) { }

	// RVA: 0x138CD80 Offset: 0x138CD80 VA: 0x138CD80
	protected static string CreateMultiplePK(long arg1, long arg2, long arg3) { }

