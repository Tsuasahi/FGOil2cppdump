	private string GetIconImageName(TitleInfoEventTimeImgListComponent.TimeState state) { }

	// RVA: 0x17D2314 Offset: 0x17D2314 VA: 0x17D2314
	private string GetLabelImageName(TitleInfoEventTimeImgListComponent.TimeState state) { }
}

// Namespace: 
public class TitleInfoEventTimeImgListViewObject : MonoBehaviour // TypeDefIndex: 5865
{
	// Fields
	[SerializeField] // RVA: 0xCBD9CC Offset: 0xCBD9CC VA: 0xCBD9CC
	protected GameObject dispObject; // 0x18
	protected TitleInfoEventTimeImgListViewDraw itemDraw; // 0x20

	// Methods

	// RVA: 0x17D2398 Offset: 0x17D2398 VA: 0x17D2398
	public void .ctor() { }

	// RVA: 0x17D1CD8 Offset: 0x17D1CD8 VA: 0x17D1CD8
	public void Init(TitleInfoEventTimeImgListComponent.TimeState state) { }
}

// Namespace: 
public class TitleInfoEventTimeStatus : MonoBehaviour // TypeDefIndex: 5866
{
	// Fields
	private static readonly int TIME_STATUS_DAY_MAX; // 0x0
	[SerializeField] // RVA: 0xCBD9DC Offset: 0xCBD9DC VA: 0xCBD9DC
	private float TIME_STATUS_DAY_ANIME_TIME; // 0x18
	[SerializeField] // RVA: 0xCBD9EC Offset: 0xCBD9EC VA: 0xCBD9EC
	private float TIME_STATUS_DAY_EFFECT_TIME; // 0x1C
	[SerializeField] // RVA: 0xCBD9FC Offset: 0xCBD9FC VA: 0xCBD9FC
	private float TIME_STATUS_DAY_EFFECT_SIZE; // 0x20
	[SerializeField] // RVA: 0xCBDA0C Offset: 0xCBDA0C VA: 0xCBDA0C
	private TitleInfoEventTimeImgListComponent iconList; // 0x28
	[SerializeField] // RVA: 0xCBDA1C Offset: 0xCBDA1C VA: 0xCBDA1C
	private UISprite bgSprite; // 0x30
	[SerializeField] // RVA: 0xCBDA2C Offset: 0xCBDA2C VA: 0xCBDA2C
	private UILabel dayCountLabel; // 0x38
	[SerializeField] // RVA: 0xCBDA3C Offset: 0xCBDA3C VA: 0xCBDA3C
	private UISprite restDayTextSprite; // 0x40
	[SerializeField] // RVA: 0xCBDA4C Offset: 0xCBDA4C VA: 0xCBDA4C
	private UILabel restDayCountLabel; // 0x48
	[SerializeField] // RVA: 0xCBDA5C Offset: 0xCBDA5C VA: 0xCBDA5C
	private UILabel loopCountLabel; // 0x50
	[SerializeField] // RVA: 0xCBDA6C Offset: 0xCBDA6C VA: 0xCBDA6C
	private UISprite loopTitleSprite; // 0x58
	[SerializeField] // RVA: 0xCBDA7C Offset: 0xCBDA7C VA: 0xCBDA7C
	private TweenScale dayCountTween; // 0x60
	private int currentDay; // 0x68
	private int currentLoop; // 0x6C

	// Methods

	// RVA: 0x17D23A0 Offset: 0x17D23A0 VA: 0x17D23A0
	public void .ctor() { }

	// RVA: 0x17D23C0 Offset: 0x17D23C0 VA: 0x17D23C0
	public void Setup(EventDetailEntity eventDetailEntity) { }

	// RVA: 0x17D2C58 Offset: 0x17D2C58 VA: 0x17D2C58
	private void SetDay(int day) { }

	// RVA: 0x17D2CAC Offset: 0x17D2CAC VA: 0x17D2CAC
	private void SetLoop(int loop) { }

	// RVA: 0x17D2E34 Offset: 0x17D2E34 VA: 0x17D2E34
	private void SetRestDay(int restDay) { }

	// RVA: 0x17D2FF0 Offset: 0x17D2FF0 VA: 0x17D2FF0
	public void PlayIconScrollAnime() { }

	// RVA: 0x17D30F4 Offset: 0x17D30F4 VA: 0x17D30F4
	private void PlayChangeDayAnime() { }

	// RVA: 0x17D2AE0 Offset: 0x17D2AE0 VA: 0x17D2AE0
	private bool IsChangedDay() { }

	// RVA: 0x17D2B84 Offset: 0x17D2B84 VA: 0x17D2B84
	private void SetYesterday() { }

	// RVA: 0x17D29C0 Offset: 0x17D29C0 VA: 0x17D29C0
	private UserEventEntity GetUserEventEntity(int eventId) { }

	// RVA: 0x17D2934 Offset: 0x17D2934 VA: 0x17D2934
	private EventStatusEntity GetEventStatusEntity(int eventId) { }

	// RVA: 0x17D2A8C Offset: 0x17D2A8C VA: 0x17D2A8C
	private TitleInfoEventTimeImgListComponent.TimeState GetNowTimeState(EventStatusEntity entity) { }

	// RVA: 0x17D3380 Offset: 0x17D3380 VA: 0x17D3380
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35AB8 Offset: 0xD35AB8 VA: 0xD35AB8
	// RVA: 0x17D33D4 Offset: 0x17D33D4 VA: 0x17D33D4
	private void <PlayChangeDayAnime>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35AC8 Offset: 0xD35AC8 VA: 0xD35AC8
	// RVA: 0x17D348C Offset: 0x17D348C VA: 0x17D348C
	private void <PlayChangeDayAnime>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35AD8 Offset: 0xD35AD8 VA: 0xD35AD8
	// RVA: 0x17D34D8 Offset: 0x17D34D8 VA: 0x17D34D8
	private void <PlayChangeDayAnime>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35AE8 Offset: 0xD35AE8 VA: 0xD35AE8
	// RVA: 0x17D351C Offset: 0x17D351C VA: 0x17D351C
	private void <PlayChangeDayAnime>m__3() { }
}

// Namespace: 
public class TitleInfoEventTimeStatus.UIActiveQuestData // TypeDefIndex: 5867
{
	// Fields
	public int eventId; // 0x10
	public int questId; // 0x14

	// Methods

	// RVA: 0x17D3810 Offset: 0x17D3810 VA: 0x17D3810
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE1C0 Offset: 0xCAE1C0 VA: 0xCAE1C0
private sealed class TitleInfoEventTimeStatus.<PlayChangeDayAnime>c__AnonStorey0 // TypeDefIndex: 5868
{
	// Fields
	internal GameObject effect; // 0x10

	// Methods

	// RVA: 0x17D377C Offset: 0x17D377C VA: 0x17D377C
	public void .ctor() { }

	// RVA: 0x17D3784 Offset: 0x17D3784 VA: 0x17D3784
	internal void <>m__0() { }
}

// Namespace: 
public class TitleInfoEventTower : BaseMonoBehaviour // TypeDefIndex: 5869
{
	// Fields
	private static readonly string EFFECT_ANIMATION_START_FORMAT; // 0x0
	private static readonly string EFFECT_ANIMATION_END_FORMAT; // 0x8
	private static readonly string OBJECT_NAME_EFFECT_BASE; // 0x10
	[SerializeField] // RVA: 0xCBDA8C Offset: 0xCBDA8C VA: 0xCBDA8C
	private UISprite baseSprite; // 0x18
	[SerializeField] // RVA: 0xCBDA9C Offset: 0xCBDA9C VA: 0xCBDA9C
	private UISprite floorSprite; // 0x20
	[SerializeField] // RVA: 0xCBDAAC Offset: 0xCBDAAC VA: 0xCBDAAC
	private UISprite nameSprite; // 0x28
	[SerializeField] // RVA: 0xCBDABC Offset: 0xCBDABC VA: 0xCBDABC
	private Transform spriteRoot; // 0x30
	[SerializeField] // RVA: 0xCBDACC Offset: 0xCBDACC VA: 0xCBDACC
	private GameObject stamp; // 0x38
	private EventDetailEntity eventDetailEntity; // 0x40
	private SimpleAnimation simpleAnimationData; // 0x48
	private Animation animationData; // 0x50
	private string animationName; // 0x58
	private int openEffectId; // 0x60
	private Action endCallback; // 0x68
	private int TowerFloorMax; // 0x70

	// Properties
	public EventDetailEntity EventDetailEntity { set; }

	// Methods

	// RVA: 0x17D3818 Offset: 0x17D3818 VA: 0x17D3818
	public void .ctor() { }

	// RVA: 0x17D3828 Offset: 0x17D3828 VA: 0x17D3828
	public void set_EventDetailEntity(EventDetailEntity value) { }

	// RVA: 0x17D3830 Offset: 0x17D3830 VA: 0x17D3830
	public void Open(Action callback, AssetData effectAsset) { }

	// RVA: 0x17D45FC Offset: 0x17D45FC VA: 0x17D45FC
	private void SetTowerPosition(int towerId) { }

	// RVA: 0x17D5814 Offset: 0x17D5814 VA: 0x17D5814
	public void Close() { }

	// RVA: 0x17D5940 Offset: 0x17D5940 VA: 0x17D5940
	private void Update() { }

	// RVA: 0x17D5D98 Offset: 0x17D5D98 VA: 0x17D5D98
	public bool IsOpenedNextTower(int eventId, int nowTowerId) { }

	// RVA: 0x17D5E60 Offset: 0x17D5E60 VA: 0x17D5E60
	private int GetQuestIdOnFirstFloorOfNextTower(int eventId, int nowTowerId) { }

	// RVA: 0x17D5F00 Offset: 0x17D5F00 VA: 0x17D5F00
	private static void .cctor() { }
}

// Namespace: 
public class TitleInfoEventTowerBase : MonoBehaviour // TypeDefIndex: 5870
{
	// Fields
	[SerializeField] // RVA: 0xCBDADC Offset: 0xCBDADC VA: 0xCBDADC
	private int towerBaseWidth; // 0x18
	[SerializeField] // RVA: 0xCBDAEC Offset: 0xCBDAEC VA: 0xCBDAEC
	private int towerBaseHeight; // 0x1C
	[SerializeField] // RVA: 0xCBDAFC Offset: 0xCBDAFC VA: 0xCBDAFC
	private int towerBaseDefaultWidth; // 0x20
	[SerializeField] // RVA: 0xCBDB0C Offset: 0xCBDB0C VA: 0xCBDB0C
	private int towerBaseDefaultHeight; // 0x24
	private static readonly string SPRITE_NAME_TOWER_BASE; // 0x0

	// Methods

	// RVA: 0x17D5F88 Offset: 0x17D5F88 VA: 0x17D5F88
	public void .ctor() { }

	// RVA: 0x17D5640 Offset: 0x17D5640 VA: 0x17D5640
	public void SetBaseSprite(int towerId, bool changeSize) { }

	// RVA: 0x17D5F90 Offset: 0x17D5F90 VA: 0x17D5F90
	private static void .cctor() { }
}

// Namespace: 
public class TitleInfoEventTowerFloorLabel : MonoBehaviour // TypeDefIndex: 5871
{
	// Fields
	[SerializeField] // RVA: 0xCBDB1C Offset: 0xCBDB1C VA: 0xCBDB1C
	private int towerFloorInitPosY; // 0x18
	[SerializeField] // RVA: 0xCBDB2C Offset: 0xCBDB2C VA: 0xCBDB2C
	private int towerFloorMoveRange; // 0x1C
	[SerializeField] // RVA: 0xCBDB3C Offset: 0xCBDB3C VA: 0xCBDB3C
	private UILabel floorLabel; // 0x20
	[SerializeField] // RVA: 0xCBDB4C Offset: 0xCBDB4C VA: 0xCBDB4C
	private UILabel floorNowLabel; // 0x28
	private static readonly string SPRITE_NAME_FLOOR_CLEAR; // 0x0
	private static readonly string SPRITE_NAME_FLOOR; // 0x8

	// Methods

	// RVA: 0x17D5FEC Offset: 0x17D5FEC VA: 0x17D5FEC
	public void .ctor() { }

	// RVA: 0x17D5118 Offset: 0x17D5118 VA: 0x17D5118
	public void SetFloorLabel(int towerFloorMax, int floor, string floorLabel, bool isTowerClear, bool fixedLabel) { }

	// RVA: 0x17D5FF4 Offset: 0x17D5FF4 VA: 0x17D5FF4
	private static void .cctor() { }
}

// Namespace: 
public class TitleInfoEventTowerNameLabel : MonoBehaviour // TypeDefIndex: 5872
{
	// Fields
	[SerializeField] // RVA: 0xCBDB5C Offset: 0xCBDB5C VA: 0xCBDB5C
	private int towerNameLabelPosX; // 0x18
	[SerializeField] // RVA: 0xCBDB6C Offset: 0xCBDB6C VA: 0xCBDB6C
	private int towerNameLabelPosY; // 0x1C
	[SerializeField] // RVA: 0xCBDB7C Offset: 0xCBDB7C VA: 0xCBDB7C
	private int towerNameFixedLabelPosX; // 0x20
	[SerializeField] // RVA: 0xCBDB8C Offset: 0xCBDB8C VA: 0xCBDB8C
	private int towerNameFixedLabelPosY; // 0x24
	private static readonly string SPRITE_NAME_NAME; // 0x0

	// Methods

	// RVA: 0x17D6068 Offset: 0x17D6068 VA: 0x17D6068
	public void .ctor() { }

	// RVA: 0x17D54D0 Offset: 0x17D54D0 VA: 0x17D54D0
	public void SetTowerNameLabel(int towerId, bool fixedLabel) { }

	// RVA: 0x17D6070 Offset: 0x17D6070 VA: 0x17D6070
	private static void .cctor() { }
}

// Namespace: 
public class TitleInfoEventTowerReward : BaseMonoBehaviour // TypeDefIndex: 5873
{
	// Fields
	private static readonly string SPRITE_NAME_TOWER; // 0x0
	private static readonly string SPRITE_NAME_BG; // 0x8
	private static readonly string CLIP_NAME_TOWER_REWARD; // 0x10
	[SerializeField] // RVA: 0xCBDB9C Offset: 0xCBDB9C VA: 0xCBDB9C
	private ExUITexture bgSprite; // 0x18
	[SerializeField] // RVA: 0xCBDBAC Offset: 0xCBDBAC VA: 0xCBDBAC
	private ItemIconComponent itemIcon; // 0x20
	[SerializeField] // RVA: 0xCBDBBC Offset: 0xCBDBBC VA: 0xCBDBBC
	private UISprite nameSprite; // 0x28
	[SerializeField] // RVA: 0xCBDBCC Offset: 0xCBDBCC VA: 0xCBDBCC
	private UILabel floorLabel; // 0x30
	[SerializeField] // RVA: 0xCBDBDC Offset: 0xCBDBDC VA: 0xCBDBDC
	private UILabel rewardLabel; // 0x38
	[SerializeField] // RVA: 0xCBDBEC Offset: 0xCBDBEC VA: 0xCBDBEC
	private UIStandFigureR standFigure; // 0x40
	[SerializeField] // RVA: 0xCBDBFC Offset: 0xCBDBFC VA: 0xCBDBFC
	private SimpleAnimation simpleAnimation; // 0x48
	[SerializeField] // RVA: 0xCBDC0C Offset: 0xCBDC0C VA: 0xCBDC0C
	private Animation animation; // 0x50
	[SerializeField] // RVA: 0xCBDC1C Offset: 0xCBDC1C VA: 0xCBDC1C
	private GameObject imageFrame; // 0x58
	[SerializeField] // RVA: 0xCBDC2C Offset: 0xCBDC2C VA: 0xCBDC2C
	private GameObject floorNumberNull; // 0x60
	[SerializeField] // RVA: 0xCBDC3C Offset: 0xCBDC3C VA: 0xCBDC3C
	private float voiceStartTime; // 0x68
	[SerializeField] // RVA: 0xCBDC4C Offset: 0xCBDC4C VA: 0xCBDC4C
	private List<UIFont> floorNumFontList; // 0x70
	private TitleInfoEventTowerReward.STATE state; // 0x78
	private Action endCallback; // 0x80
	private EventTowerReward eventTowerReward; // 0x88
	private QuestRewardInfo[] resultEventTowerRewardInfo; // 0x90
	private List<ServantVoiceData[]> voiceList; // 0x98
	private string voiceAssetName; // 0xA0
	private string voiceName; // 0xA8
	private SePlayer voicePlayer; // 0xB0
	private int selectVoiceIndex; // 0xB8
	private int maxPlayCnt; // 0xBC
	private int playCnt; // 0xC0
	private ScreenTouchInformationComponent screenTouchInfo; // 0xC8
	private ServantRewardAction servantRewardAction; // 0xD0

	// Methods

	// RVA: 0x17D60CC Offset: 0x17D60CC VA: 0x17D60CC
	public void .ctor() { }

	// RVA: 0x17D60D4 Offset: 0x17D60D4 VA: 0x17D60D4
	public void Open(Action callback) { }

	// RVA: 0x17D6E34 Offset: 0x17D6E34 VA: 0x17D6E34
	private void OnLoadEndBG() { }

	// RVA: 0x17D6F0C Offset: 0x17D6F0C VA: 0x17D6F0C
	private void OnLoadEndSvt() { }

	// RVA: 0x17D7328 Offset: 0x17D7328 VA: 0x17D7328
	private void StartVoice() { }

	// RVA: 0x17D744C Offset: 0x17D744C VA: 0x17D744C
	private void PlayVoice() { }

	// RVA: 0x17D7628 Offset: 0x17D7628 VA: 0x17D7628
	private void EndPlayVoice() { }

	// RVA: 0x17D7710 Offset: 0x17D7710 VA: 0x17D7710
	private void Update() { }

	// RVA: 0x17D7A5C Offset: 0x17D7A5C VA: 0x17D7A5C
	public void OnTouchDisp() { }

	// RVA: 0x17D7B7C Offset: 0x17D7B7C VA: 0x17D7B7C
	public void Close() { }

	// RVA: 0x17D7CC8 Offset: 0x17D7CC8 VA: 0x17D7CC8
	public void StartRewardAction(Action callback) { }

	// RVA: 0x17D7E00 Offset: 0x17D7E00 VA: 0x17D7E00
	private void StartRewardAction_sub(QuestRewardInfo[] rewardInfoList, int idx, Action subEndAction) { }

	// RVA: 0x17D7DD0 Offset: 0x17D7DD0 VA: 0x17D7DD0
	private void EndItemGetEffectAction(Action afterDetail) { }

	// RVA: 0x17D8190 Offset: 0x17D8190 VA: 0x17D8190
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35AF8 Offset: 0xD35AF8 VA: 0xD35AF8
	// RVA: 0x17D8218 Offset: 0x17D8218 VA: 0x17D8218
	private void <OnLoadEndSvt>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35B08 Offset: 0xD35B08 VA: 0xD35B08
	// RVA: 0x17D85DC Offset: 0x17D85DC VA: 0x17D85DC
	private void <OnTouchDisp>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35B18 Offset: 0xD35B18 VA: 0xD35B18
	// RVA: 0x17D85E0 Offset: 0x17D85E0 VA: 0x17D85E0
	private void <Close>m__2() { }
}

// Namespace: 
private enum TitleInfoEventTowerReward.STATE // TypeDefIndex: 5874
{
	// Fields
	public int value__; // 0x0
	public const TitleInfoEventTowerReward.STATE NONE = 0;
	public const TitleInfoEventTowerReward.STATE PLAY = 1;
	public const TitleInfoEventTowerReward.STATE TOUCH_WAIT = 2;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE1D0 Offset: 0xCAE1D0 VA: 0xCAE1D0
private sealed class TitleInfoEventTowerReward.<StartRewardAction>c__AnonStorey0 // TypeDefIndex: 5875
{
	// Fields
	internal Action callback; // 0x10
	internal TitleInfoEventTowerReward $this; // 0x18

	// Methods

	// RVA: 0x17D7DC8 Offset: 0x17D7DC8 VA: 0x17D7DC8
	public void .ctor() { }

	// RVA: 0x17D85FC Offset: 0x17D85FC VA: 0x17D85FC
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE1E0 Offset: 0xCAE1E0 VA: 0xCAE1E0
private sealed class TitleInfoEventTowerReward.<StartRewardAction_sub>c__AnonStorey1 // TypeDefIndex: 5876
{
	// Fields
	internal QuestRewardInfo rewardInfo; // 0x10
	internal QuestRewardInfo[] rewardInfoList; // 0x18
	internal int idx; // 0x20
	internal Action subEndAction; // 0x28
	internal TitleInfoEventTowerReward $this; // 0x30

	// Methods

	// RVA: 0x17D8188 Offset: 0x17D8188 VA: 0x17D8188
	public void .ctor() { }

	// RVA: 0x17D8640 Offset: 0x17D8640 VA: 0x17D8640
	internal void <>m__0() { }

	// RVA: 0x17D88DC Offset: 0x17D88DC VA: 0x17D88DC
	internal void <>m__1() { }
}

// Namespace: 
public class TitleInfoEventTowerSlideAnimation : MonoBehaviour // TypeDefIndex: 5877
{
	// Fields
	[SerializeField] // RVA: 0xCBDC5C Offset: 0xCBDC5C VA: 0xCBDC5C
	private string easeTypeIn; // 0x18
	[SerializeField] // RVA: 0xCBDC6C Offset: 0xCBDC6C VA: 0xCBDC6C
	private string easeTypeOut; // 0x20
	[SerializeField] // RVA: 0xCBDC7C Offset: 0xCBDC7C VA: 0xCBDC7C
	private float slideInTime; // 0x28
	[SerializeField] // RVA: 0xCBDC8C Offset: 0xCBDC8C VA: 0xCBDC8C
	private float slideOutTime; // 0x2C
	[SerializeField] // RVA: 0xCBDC9C Offset: 0xCBDC9C VA: 0xCBDC9C
	private Vector3 slideOutPosition; // 0x30
	private Vector3 slideInPosition; // 0x3C
	private Action endCallback; // 0x48

	// Methods

	// RVA: 0x17D89D4 Offset: 0x17D89D4 VA: 0x17D89D4
	public void .ctor() { }

	// RVA: 0x17D47C0 Offset: 0x17D47C0 VA: 0x17D47C0
	public void StartSlideAnim(Action callback, Vector3 afterPosition) { }

	// RVA: 0x17D89DC Offset: 0x17D89DC VA: 0x17D89DC
	private void onMoveComplete() { }

	// RVA: 0x17D8F74 Offset: 0x17D8F74 VA: 0x17D8F74
	private void onAnimEnd() { }

	// RVA: 0x17D8F90 Offset: 0x17D8F90 VA: 0x17D8F90
	private void SetPotision() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35B28 Offset: 0xD35B28 VA: 0xD35B28
	// RVA: 0x17D8FF4 Offset: 0x17D8FF4 VA: 0x17D8FF4
	private void <onMoveComplete>m__0() { }
}

// Namespace: 
public class TitleInfoEventTowerStamp : MonoBehaviour // TypeDefIndex: 5878
{
	// Fields
	[SerializeField] // RVA: 0xCBDCAC Offset: 0xCBDCAC VA: 0xCBDCAC
	private int stampStartPosX; // 0x18
	[SerializeField] // RVA: 0xCBDCBC Offset: 0xCBDCBC VA: 0xCBDCBC
	private int stampStartPosY; // 0x1C
	[SerializeField] // RVA: 0xCBDCCC Offset: 0xCBDCCC VA: 0xCBDCCC
	private int stampWidth; // 0x20
	[SerializeField] // RVA: 0xCBDCDC Offset: 0xCBDCDC VA: 0xCBDCDC
	private int stampHeight; // 0x24
	[SerializeField] // RVA: 0xCBDCEC Offset: 0xCBDCEC VA: 0xCBDCEC
	private int row; // 0x28
	private List<GameObject> stampList; // 0x30
	private static readonly string SPRITE_NAME_STAMP; // 0x0

	// Methods

	// RVA: 0x17D8FF8 Offset: 0x17D8FF8 VA: 0x17D8FF8
	public void .ctor() { }

	// RVA: 0x17D4D00 Offset: 0x17D4D00 VA: 0x17D4D00
	public void StampProgress(int floor, int towerId, Transform spriteRoot) { }

	// RVA: 0x17D9000 Offset: 0x17D9000 VA: 0x17D9000
	private Vector3 GetStampPosition(int i) { }

	// RVA: 0x17D4F90 Offset: 0x17D4F90 VA: 0x17D4F90
	public void ResetStamp() { }

	// RVA: 0x17D9058 Offset: 0x17D9058 VA: 0x17D9058
	private static void .cctor() { }
}

// Namespace: 
public class TitleInfoEventUIComponent : TitleInfoEventInfoComponent // TypeDefIndex: 5879
{
	// Fields
	[SerializeField] // RVA: 0xCBDCFC Offset: 0xCBDCFC VA: 0xCBDCFC
	private UISprite imageSprite; // 0x20
	private List<AssetData> eventInfoAssetDataList; // 0x28
	private List<EventInfoUIBase> eventUiPrefabList; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xCBDD0C Offset: 0xCBDD0C VA: 0xCBDD0C
	[DebuggerBrowsableAttribute] // RVA: 0xCBDD0C Offset: 0xCBDD0C VA: 0xCBDD0C
	private EventUiEntity <eventUIEntity>k__BackingField; // 0x38
	private List<TitleInfoEventUIPartsComponent> eventUIPartsList; // 0x40

	// Properties
	public EventUiEntity eventUIEntity { get; set; }

	// Methods

	// RVA: 0x17D90B4 Offset: 0x17D90B4 VA: 0x17D90B4
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35B38 Offset: 0xD35B38 VA: 0xD35B38
	// RVA: 0x17D9174 Offset: 0x17D9174 VA: 0x17D9174
	private void set_eventUIEntity(EventUiEntity value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD35B48 Offset: 0xD35B48 VA: 0xD35B48
	// RVA: 0x17D917C Offset: 0x17D917C VA: 0x17D917C
	public EventUiEntity get_eventUIEntity() { }

	// RVA: 0x17D9184 Offset: 0x17D9184 VA: 0x17D9184 Slot: 4
	public override bool IsDispPossible() { }

	// RVA: 0x17D918C Offset: 0x17D918C VA: 0x17D918C Slot: 5
	public override void UpdateDisp() { }

	// RVA: 0x17D9190 Offset: 0x17D9190 VA: 0x17D9190
	public void Redisplay() { }

	// RVA: 0x17D92E8 Offset: 0x17D92E8 VA: 0x17D92E8 Slot: 6
	public override bool IsEventRaidBoss() { }

	[DebuggerHiddenAttribute] // RVA: 0xD35B58 Offset: 0xD35B58 VA: 0xD35B58
	// RVA: 0x17D92F0 Offset: 0x17D92F0 VA: 0x17D92F0
	public IEnumerator AsyncSetup(EventUiEntity eventUIEntity, bool isMap, bool isEventReward, bool isCaldea, Action callback) { }

	[DebuggerHiddenAttribute] // RVA: 0xD35B68 Offset: 0xD35B68 VA: 0xD35B68
	// RVA: 0x17D93E8 Offset: 0x17D93E8 VA: 0x17D93E8
	private IEnumerator LoadAssetBundle(EventUiEntity eventUIEntity, Action callback) { }

	// RVA: 0x17D9498 Offset: 0x17D9498 VA: 0x17D9498
	private void UpdateEventUI(EventUiEntity entity) { }

	// RVA: 0x17D9798 Offset: 0x17D9798 VA: 0x17D9798
	public void SetDispEventUIForSpot(int spotId) { }

	// RVA: 0x17D9848 Offset: 0x17D9848 VA: 0x17D9848
	public bool IsDispEventUIForSpot(int spotId) { }

	// RVA: 0x17D985C Offset: 0x17D985C VA: 0x17D985C
	private void SetActiveChildren(bool isActive) { }

	// RVA: 0x17D9B54 Offset: 0x17D9B54 VA: 0x17D9B54
	private void SwitchSpotState(bool isOpen) { }

	// RVA: 0x17D9CC0 Offset: 0x17D9CC0 VA: 0x17D9CC0
	public void UpdatePartsDisp() { }

	// RVA: 0x17D968C Offset: 0x17D968C VA: 0x17D968C
	private void SetGameObject(EventUiEntity entity) { }

	// RVA: 0x17D9574 Offset: 0x17D9574 VA: 0x17D9574
	private void SetImage(EventUiEntity entity) { }

	// RVA: 0x17DA11C Offset: 0x17DA11C VA: 0x17DA11C
	public void SetValue(EventInfoUIBase.ValueType valueType, object val, EventInfoUIBase.SetType setType) { }

	// RVA: 0x17DA29C Offset: 0x17DA29C VA: 0x17DA29C
	public void PlayAnim(EventInfoUIBase.PlayType playType, Action callback) { }

	// RVA: 0x17DA05C Offset: 0x17DA05C VA: 0x17DA05C
	private Vector3 GetPosition(EventUiEntity entity) { }

	// RVA: 0x17DA514 Offset: 0x17DA514 VA: 0x17DA514
	public void ReleaseAsset() { }

	// RVA: 0x17DA670 Offset: 0x17DA670 VA: 0x17DA670
	private void OnDestroy() { }

	// RVA: 0x17D9F04 Offset: 0x17D9F04 VA: 0x17D9F04
	private string GetAssetName(EventUiEntity eventUIEntity) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE1F0 Offset: 0xCAE1F0 VA: 0xCAE1F0
private sealed class TitleInfoEventUIComponent.<AsyncSetup>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 5880
{
	// Fields
	internal EventUiEntity eventUIEntity; // 0x10
	internal bool isMap; // 0x18
	internal bool isEventReward; // 0x19
	internal Action callback; // 0x20
	internal TitleInfoEventUIComponent $this; // 0x28
	internal object $current; // 0x30
	internal bool $disposing; // 0x38
	internal int $PC; // 0x3C
	private TitleInfoEventUIComponent.<AsyncSetup>c__Iterator0.<AsyncSetup>c__AnonStorey2 $locvar0; // 0x40

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD45594 Offset: 0xD45594 VA: 0xD45594
	// RVA: 0x17D93E0 Offset: 0x17D93E0 VA: 0x17D93E0
	public void .ctor() { }

	// RVA: 0x17DA6CC Offset: 0x17DA6CC VA: 0x17DA6CC Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD455A4 Offset: 0xD455A4 VA: 0xD455A4
	// RVA: 0x17DA8B8 Offset: 0x17DA8B8 VA: 0x17DA8B8 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD455B4 Offset: 0xD455B4 VA: 0xD455B4
	// RVA: 0x17DA8C0 Offset: 0x17DA8C0 VA: 0x17DA8C0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD455C4 Offset: 0xD455C4 VA: 0xD455C4
	// RVA: 0x17DA8C8 Offset: 0x17DA8C8 VA: 0x17DA8C8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD455D4 Offset: 0xD455D4 VA: 0xD455D4
	// RVA: 0x17DA8DC Offset: 0x17DA8DC VA: 0x17DA8DC Slot: 6
	public void Reset() { }
}

// Namespace: 
private sealed class TitleInfoEventUIComponent.<AsyncSetup>c__Iterator0.<AsyncSetup>c__AnonStorey2 // TypeDefIndex: 5881
{
	// Fields
	internal EventUiEntity eventUIEntity; // 0x10
	internal bool isMap; // 0x18
	internal bool isEventReward; // 0x19
	internal Action callback; // 0x20
	internal TitleInfoEventUIComponent.<AsyncSetup>c__Iterator0 <>f__ref$0; // 0x28

	// Methods

	// RVA: 0x17DA8B0 Offset: 0x17DA8B0 VA: 0x17DA8B0
	public void .ctor() { }

	// RVA: 0x17DA944 Offset: 0x17DA944 VA: 0x17DA944
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE200 Offset: 0xCAE200 VA: 0xCAE200
private sealed class TitleInfoEventUIComponent.<LoadAssetBundle>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 5882
{
	// Fields
	internal EventUiEntity eventUIEntity; // 0x10
	internal Action callback; // 0x18
	internal bool <isAssetFound>__0; // 0x20
	internal TitleInfoEventUIComponent $this; // 0x28
	internal object $current; // 0x30
	internal bool $disposing; // 0x38
	internal int $PC; // 0x3C
	private TitleInfoEventUIComponent.<LoadAssetBundle>c__Iterator1.<LoadAssetBundle>c__AnonStorey3 $locvar0; // 0x40

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD455E4 Offset: 0xD455E4 VA: 0xD455E4
	// RVA: 0x17D9490 Offset: 0x17D9490 VA: 0x17D9490
	public void .ctor() { }

	// RVA: 0x17DAB80 Offset: 0x17DAB80 VA: 0x17DAB80 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD455F4 Offset: 0xD455F4 VA: 0xD455F4
	// RVA: 0x17DAD70 Offset: 0x17DAD70 VA: 0x17DAD70 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45604 Offset: 0xD45604 VA: 0xD45604
	// RVA: 0x17DAD78 Offset: 0x17DAD78 VA: 0x17DAD78 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45614 Offset: 0xD45614 VA: 0xD45614
	// RVA: 0x17DAD80 Offset: 0x17DAD80 VA: 0x17DAD80 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45624 Offset: 0xD45624 VA: 0xD45624
	// RVA: 0x17DAD94 Offset: 0x17DAD94 VA: 0x17DAD94 Slot: 6
	public void Reset() { }
}

// Namespace: 
private sealed class TitleInfoEventUIComponent.<LoadAssetBundle>c__Iterator1.<LoadAssetBundle>c__AnonStorey3 // TypeDefIndex: 5883
{
	// Fields
	internal bool isAssetLoaded; // 0x10
	internal TitleInfoEventUIComponent.<LoadAssetBundle>c__Iterator1 <>f__ref$1; // 0x18

	// Methods

	// RVA: 0x17DAD68 Offset: 0x17DAD68 VA: 0x17DAD68
	public void .ctor() { }

	// RVA: 0x17DADFC Offset: 0x17DADFC VA: 0x17DADFC
	internal void <>m__0(AssetData asset) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE210 Offset: 0xCAE210 VA: 0xCAE210
private sealed class TitleInfoEventUIComponent.<SetGameObject>c__AnonStorey4 // TypeDefIndex: 5884
{
	// Fields
	internal EventUiEntity entity; // 0x10
	internal TitleInfoEventUIComponent $this; // 0x18

	// Methods

	// RVA: 0x17D9EFC Offset: 0x17D9EFC VA: 0x17D9EFC
	public void .ctor() { }

	// RVA: 0x17DAF2C Offset: 0x17DAF2C VA: 0x17DAF2C
	internal void <>m__0(AssetData prefabData) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE220 Offset: 0xCAE220 VA: 0xCAE220
private sealed class TitleInfoEventUIComponent.<PlayAnim>c__AnonStorey6 // TypeDefIndex: 5885
{
	// Fields
	internal Action callback; // 0x10

	// Methods

	// RVA: 0x17DA504 Offset: 0x17DA504 VA: 0x17DA504
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE230 Offset: 0xCAE230 VA: 0xCAE230
private sealed class TitleInfoEventUIComponent.<PlayAnim>c__AnonStorey5 // TypeDefIndex: 5886
{
	// Fields
	internal int callbackCount; // 0x10
	internal TitleInfoEventUIComponent.<PlayAnim>c__AnonStorey6 <>f__ref$6; // 0x18

	// Methods

	// RVA: 0x17DA50C Offset: 0x17DA50C VA: 0x17DA50C
	public void .ctor() { }

	// RVA: 0x17DAEE4 Offset: 0x17DAEE4 VA: 0x17DAEE4
	internal void <>m__0() { }
}

// Namespace: 
public class TitleInfoEventUIPartsComponent : MonoBehaviour // TypeDefIndex: 5887
{
	// Fields
	[SerializeField] // RVA: 0xCBDD48 Offset: 0xCBDD48 VA: 0xCBDD48
	private int commonReleaseId; // 0x18

	// Methods

	// RVA: 0x17DB1D4 Offset: 0x17DB1D4 VA: 0x17DB1D4
	public void .ctor() { }

	// RVA: 0x17D9E04 Offset: 0x17D9E04 VA: 0x17D9E04
	public void UpdateDisp() { }
}

// Namespace: 
public class TitleInfoSuperBossComponent : TitleInfoEventInfoComponent // TypeDefIndex: 5888
{
	// Fields
	private static readonly string SUPERBOSS_ICON_SPNAME_PREFIX; // 0x0
	private static readonly string SUPERBOSS_SPLIT_EFFECT_PREFAB; // 0x8
	private static readonly string SUPERBOSS_CLEAR_EFFECT_PREFAB; // 0x10
	private static readonly Vector3 SUPERBOSS_ANIM_ROOT_POS; // 0x18
	private static readonly Vector3 SUPERBOSS_SPLIT_POS_DELTA; // 0x24
	private static readonly int SUPERBOSS_HP_BAR_LENGTH; // 0x30
	private static readonly float ANIM_DURATION_FRAME_IN_BOSS; // 0x34
	private static readonly float ANIM_DURATION_HP_NAME_ALPHA; // 0x38
	private static readonly float ANIM_DURATION_HP_CUT; // 0x3C
	private static readonly float ANIM_DURATION_SPLIT_ALPHA; // 0x40
	private static readonly float ANIM_DURATION_HP_DELETION; // 0x44
	private static readonly float ANIM_DURATION_BOSS_ALPHA; // 0x48
	private static readonly float CLEAR_CALLBACK_DELAY; // 0x4C
	private static readonly float CLEAR_END_CALLBACK_DELAY; // 0x50
	[SerializeField] // RVA: 0xCBDD58 Offset: 0xCBDD58 VA: 0xCBDD58
	private UISprite superBossIconSp; // 0x20
	[SerializeField] // RVA: 0xCBDD68 Offset: 0xCBDD68 VA: 0xCBDD68
	private UISprite superBossHpFrame; // 0x28
	[SerializeField] // RVA: 0xCBDD78 Offset: 0xCBDD78 VA: 0xCBDD78
	private UISprite superBossHpBg; // 0x30
	[SerializeField] // RVA: 0xCBDD88 Offset: 0xCBDD88 VA: 0xCBDD88
	private UISlider hpBarSlider; // 0x38
	[SerializeField] // RVA: 0xCBDD98 Offset: 0xCBDD98 VA: 0xCBDD98
	private UISlider hpBarSliderUnder; // 0x40
	[SerializeField] // RVA: 0xCBDDA8 Offset: 0xCBDDA8 VA: 0xCBDDA8
	private UISlider hpBarSliderWhite; // 0x48
	[SerializeField] // RVA: 0xCBDDB8 Offset: 0xCBDDB8 VA: 0xCBDDB8
	private GameObject hpBarSplitter; // 0x50
	[SerializeField] // RVA: 0xCBDDC8 Offset: 0xCBDDC8 VA: 0xCBDDC8
	private GameObject hpBarSplitPoint; // 0x58
	[SerializeField] // RVA: 0xCBDDD8 Offset: 0xCBDDD8 VA: 0xCBDDD8
	private UILabel totalHpLabel; // 0x60
	[SerializeField] // RVA: 0xCBDDE8 Offset: 0xCBDDE8 VA: 0xCBDDE8
	private UISprite hpBarUnderSprite; // 0x68
	[SerializeField] // RVA: 0xCBDDF8 Offset: 0xCBDDF8 VA: 0xCBDDF8
	private UISprite hpBarUpperSprite; // 0x70
	[SerializeField] // RVA: 0xCBDE08 Offset: 0xCBDE08 VA: 0xCBDE08
	private UISprite hpBarWhiteSprite; // 0x78
	[SerializeField] // RVA: 0xCBDE18 Offset: 0xCBDE18 VA: 0xCBDE18
	private UISprite hpSplitSprite; // 0x80
	[SerializeField] // RVA: 0xCBDE28 Offset: 0xCBDE28 VA: 0xCBDE28
	private UISprite hpSplitPointSprite; // 0x88
	private UISprite[] hpBarSplitterList; // 0x90
	private UISprite[] hpBarSplitPointList; // 0x98
	private EventSuperBossEntity eventSuperBossEntity; // 0xA0
	private EventBossStatusUiEntity eventBossStatusUiEntity; // 0xA8
	private bool isEncountSuperBoss; // 0xB0
	private bool isCheckTutorial; // 0xB1
	private bool isAnimate; // 0xB2
	private float HPfrom; // 0xB4
	private float HPto; // 0xB8
	private float HPsplitPoint; // 0xBC
	private int HPsplitNo; // 0xC0
	private Vector3 originPos; // 0xC4
	private Action animEndCall; // 0xD0
	private Action onClearCall; // 0xD8
	private GameObject splitHpEffect; // 0xE0
	private GameObject clearBossEffect; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xCBDE38 Offset: 0xCBDE38 VA: 0xCBDE38
	[DebuggerBrowsableAttribute] // RVA: 0xCBDE38 Offset: 0xCBDE38 VA: 0xCBDE38
	private bool <IsShowClearEvent>k__BackingField; // 0xF0

	// Properties
	public bool IsShowClearEvent { get; set; }

	// Methods

	// RVA: 0x17DB1DC Offset: 0x17DB1DC VA: 0x17DB1DC
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35B78 Offset: 0xD35B78 VA: 0xD35B78
	// RVA: 0x17DB1E4 Offset: 0x17DB1E4 VA: 0x17DB1E4
	public bool get_IsShowClearEvent() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35B88 Offset: 0xD35B88 VA: 0xD35B88
	// RVA: 0x17DB1EC Offset: 0x17DB1EC VA: 0x17DB1EC
	public void set_IsShowClearEvent(bool value) { }

	// RVA: 0x17DB1F8 Offset: 0x17DB1F8 VA: 0x17DB1F8
	public void DisableCheckTutorial() { }

	// RVA: 0x17DB200 Offset: 0x17DB200 VA: 0x17DB200 Slot: 4
	public override bool IsDispPossible() { }

	// RVA: 0x17DB220 Offset: 0x17DB220 VA: 0x17DB220
	public void Setup(EventSuperBossEntity superBossEntity, UIAtlas termAtlas) { }

	// RVA: 0x17DBE60 Offset: 0x17DBE60 VA: 0x17DBE60
	public void OnDestroy() { }

	// RVA: 0x17DB3FC Offset: 0x17DB3FC VA: 0x17DB3FC
	private void Destroy() { }

	// RVA: 0x17DBE64 Offset: 0x17DBE64 VA: 0x17DBE64 Slot: 5
	public override void UpdateDisp() { }

	// RVA: 0x17DBE68 Offset: 0x17DBE68 VA: 0x17DBE68 Slot: 6
	public override bool IsEventRaidBoss() { }

	// RVA: 0x17DBE70 Offset: 0x17DBE70 VA: 0x17DBE70
	private void SetBossIcon(string spName) { }

	// RVA: 0x17DB400 Offset: 0x17DB400 VA: 0x17DB400
	private void SetSpriteFromEventUI(UISprite sprite, string prefix, int gaugeId) { }

	// RVA: 0x17DB51C Offset: 0x17DB51C VA: 0x17DB51C
	public void SetDisp() { }

	// RVA: 0x17DC014 Offset: 0x17DC014 VA: 0x17DC014
	public void SetDamageAnimation(long damage, Action onClearCallback) { }

	// RVA: 0x17DC6B8 Offset: 0x17DC6B8 VA: 0x17DC6B8
	public void StartDamageAnimation(AssetData mapAssetData, Action callBack) { }

	// RVA: 0x17DC948 Offset: 0x17DC948 VA: 0x17DC948
	private void PlayFrameInBoss() { }

	// RVA: 0x17DCB14 Offset: 0x17DCB14 VA: 0x17DCB14
	private void PlayHpNameAlpha() { }

	// RVA: 0x17DCC44 Offset: 0x17DCC44 VA: 0x17DCC44
	private void PlayHpCut() { }

	// RVA: 0x17DCF78 Offset: 0x17DCF78 VA: 0x17DCF78
	private void PlayHpDeletion() { }

	// RVA: 0x17DD258 Offset: 0x17DD258 VA: 0x17DD258
	private void SetClearAlpha() { }

	// RVA: 0x17DD2DC Offset: 0x17DD2DC VA: 0x17DD2DC
	private void DoClearCallback() { }

	// RVA: 0x17DD3F8 Offset: 0x17DD3F8 VA: 0x17DD3F8
	private void OnEndAnimation() { }

	// RVA: 0x17DBFF8 Offset: 0x17DBFF8 VA: 0x17DBFF8
	private float ConvertHpToRate(long hp, long maxHp) { }

	// RVA: 0x17DBF60 Offset: 0x17DBF60 VA: 0x17DBF60
	private float GetHpSplitPositionX(long splitHp, long maxHp) { }

	// RVA: 0x17DCDB4 Offset: 0x17DCDB4 VA: 0x17DCDB4
	private void PlaySeByEventId(int eventId, bool isPlay) { }

	// RVA: 0x17DD428 Offset: 0x17DD428 VA: 0x17DD428
	public bool IsAlive() { }

	// RVA: 0x17DD458 Offset: 0x17DD458 VA: 0x17DD458
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE240 Offset: 0xCAE240 VA: 0xCAE240
private sealed class TitleInfoSuperBossComponent.<PlayHpCut>c__AnonStorey0 // TypeDefIndex: 5889
{
	// Fields
	internal EasingObject eo; // 0x10
	internal TitleInfoSuperBossComponent $this; // 0x18

	// Methods

	// RVA: 0x17DCDAC Offset: 0x17DCDAC VA: 0x17DCDAC
	public void .ctor() { }

	// RVA: 0x17DD5DC Offset: 0x17DD5DC VA: 0x17DD5DC
	internal void <>m__0() { }
}

// Namespace: 
public class TitleInfoSuperBossStatusComponent : TitleInfoEventInfoComponent // TypeDefIndex: 5890
{
	// Fields
	private static readonly string SUPERBOSS_ICON_SPNAME_PREFIX_BATTLE; // 0x0
	private static readonly string SUPERBOSS_ICON_SPNAME_PREFIX_WIN; // 0x8
	private static readonly Vector3 FRAME_ANIM_OUT_POS_DELTA; // 0x10
	private static readonly float FRAME_ANIM_DURATION; // 0x1C
	private static readonly float ENTRY_ANIM_DELAY; // 0x20
	[SerializeField] // RVA: 0xCBDE74 Offset: 0xCBDE74 VA: 0xCBDE74
	private UISprite superBossIconSp; // 0x20
	[SerializeField] // RVA: 0xCBDE84 Offset: 0xCBDE84 VA: 0xCBDE84
	private Vector3 bossGridPosition; // 0x28
	[SerializeField] // RVA: 0xCBDE94 Offset: 0xCBDE94 VA: 0xCBDE94
	private int backBtnDepth; // 0x34
	[SerializeField] // RVA: 0xCBDEA4 Offset: 0xCBDEA4 VA: 0xCBDEA4
	private BoxCollider boxCollider; // 0x38
	private EventSuperBossEntity superBossEntity; // 0x40
	private Vector3 inPos; // 0x48
	private Vector3 outPos; // 0x54
	private Action clickCallBack; // 0x60
	private float offsetY; // 0x68

	// Methods

	// RVA: 0x17DDB80 Offset: 0x17DDB80 VA: 0x17DDB80
	public void .ctor() { }

	// RVA: 0x17DDB88 Offset: 0x17DDB88 VA: 0x17DDB88 Slot: 4
	public override bool IsDispPossible() { }

	// RVA: 0x17DDB90 Offset: 0x17DDB90 VA: 0x17DDB90
	public void Setup(EventSuperBossEntity eventSuperBossEntity, float offsetY = 0) { }

	// RVA: 0x17DDC9C Offset: 0x17DDC9C VA: 0x17DDC9C
	public void OnDestroy() { }

	// RVA: 0x17DDC98 Offset: 0x17DDC98 VA: 0x17DDC98
	private void Destroy() { }

	// RVA: 0x17DDCA0 Offset: 0x17DDCA0 VA: 0x17DDCA0
	private void SetBossIcon(string spName) { }

	// RVA: 0x17DDD90 Offset: 0x17DDD90 VA: 0x17DDD90 Slot: 5
	public override void UpdateDisp() { }

