	// RVA: 0x149D2E4 Offset: 0x149D2E4 VA: 0x149D2E4
	public void setDispRePosition(int idx) { }

	// RVA: 0x149D4BC Offset: 0x149D4BC VA: 0x149D4BC
	private void OnDragStarted() { }

	// RVA: 0x149D7E0 Offset: 0x149D7E0 VA: 0x149D7E0
	private void OnIconDragStarted() { }

	// RVA: 0x149D8D0 Offset: 0x149D8D0 VA: 0x149D8D0
	private void OnIconDragFinished() { }

	// RVA: 0x149DA18 Offset: 0x149DA18 VA: 0x149DA18
	private void OnCenterOnChildFinished() { }

	// RVA: 0x149DB80 Offset: 0x149DB80 VA: 0x149DB80
	private void OnIconCenterOnChildFinished() { }

	// RVA: 0x149DDDC Offset: 0x149DDDC VA: 0x149DDDC
	private void RefreshCurrentInfo() { }

	// RVA: 0x149D0F4 Offset: 0x149D0F4 VA: 0x149D0F4
	private void setDisEquipEffect() { }

	// RVA: 0x149DFE0 Offset: 0x149DFE0 VA: 0x149DFE0
	public void onClickRightArrow() { }

	// RVA: 0x149E27C Offset: 0x149E27C VA: 0x149E27C
	public void onClickLeftArrow() { }

	// RVA: 0x149E51C Offset: 0x149E51C VA: 0x149E51C
	public void setChangeMasterInfo() { }

	// RVA: 0x149E5BC Offset: 0x149E5BC VA: 0x149E5BC
	public long getCurrentUsrEquipId() { }

	// RVA: 0x149E5C4 Offset: 0x149E5C4 VA: 0x149E5C4
	public bool isChangeEquip() { }

	// RVA: 0x149BC38 Offset: 0x149BC38 VA: 0x149BC38
	private int getSpellImageId(int genderType, long equipId) { }

	// RVA: 0x149E5CC Offset: 0x149E5CC VA: 0x149E5CC
	public void closeMasterFormation() { }

	// RVA: 0x149E854 Offset: 0x149E854 VA: 0x149E854
	private void destroyMasterFigure() { }

	// RVA: 0x149E920 Offset: 0x149E920 VA: 0x149E920
	public void OnClickCmdSpell() { }

	// RVA: 0x149E9AC Offset: 0x149E9AC VA: 0x149E9AC
	public void CloseCmdSpell() { }

	// RVA: 0x149EA64 Offset: 0x149EA64 VA: 0x149EA64
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD06D0 Offset: 0xCD06D0 VA: 0xCD06D0
	// RVA: 0x149EAE8 Offset: 0x149EAE8 VA: 0x149EAE8
	private static void <setMstImg>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD06E0 Offset: 0xCD06E0 VA: 0xCD06E0
	// RVA: 0x149EAEC Offset: 0x149EAEC VA: 0x149EAEC
	private void <changeCmdSpellImg>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD06F0 Offset: 0xCD06F0 VA: 0xCD06F0
	// RVA: 0x149EB80 Offset: 0x149EB80 VA: 0x149EB80
	private static int <setUsrEquipData>m__2(UserEquipEntity a, UserEquipEntity b) { }
}

// Namespace: 
public sealed class MasterFormationComponent.NotificationDragState : MulticastDelegate // TypeDefIndex: 9990
{
	// Methods

	// RVA: 0x149EC2C Offset: 0x149EC2C VA: 0x149EC2C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x149D5B4 Offset: 0x149D5B4 VA: 0x149D5B4 Slot: 11
	public virtual void Invoke(bool flg) { }

	// RVA: 0x149EC3C Offset: 0x149EC3C VA: 0x149EC3C Slot: 12
	public virtual IAsyncResult BeginInvoke(bool flg, AsyncCallback callback, object object) { }

	// RVA: 0x149ECCC Offset: 0x149ECCC VA: 0x149ECCC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class MasterFormationRootComponent : SceneRootComponent // TypeDefIndex: 9991
{
	// Fields
	[SerializeField] // RVA: 0xC70AF0 Offset: 0xC70AF0 VA: 0xC70AF0
	protected TitleInfoControl titleInfo; // 0x38
	[SerializeField] // RVA: 0xC70B00 Offset: 0xC70B00 VA: 0xC70B00
	protected MasterFormationComponent mstFormationComp; // 0x40
	[SerializeField] // RVA: 0xC70B10 Offset: 0xC70B10 VA: 0xC70B10
	protected UISprite bgTxtSprite; // 0x48
	protected SceneJumpInfo jumpInfo; // 0x50
	protected int deckNo; // 0x58
	protected long deckId; // 0x60
	protected long userEquipId; // 0x68
	protected UserGameEntity usrGameEnt; // 0x70

	// Methods

	// RVA: 0x149ECD8 Offset: 0x149ECD8 VA: 0x149ECD8
	public void .ctor() { }

	// RVA: 0x149ECE0 Offset: 0x149ECE0 VA: 0x149ECE0 Slot: 4
	public override void beginInitialize() { }

	// RVA: 0x149ED54 Offset: 0x149ED54 VA: 0x149ED54 Slot: 5
	public override void beginStartUp(object data) { }

	// RVA: 0x149F0E0 Offset: 0x149F0E0 VA: 0x149F0E0 Slot: 10
	public override void beginResume() { }

	// RVA: 0x149F0E8 Offset: 0x149F0E8 VA: 0x149F0E8 Slot: 7
	public override void beginFinish() { }

	// RVA: 0x149F0EC Offset: 0x149F0EC VA: 0x149F0EC
	public void Init() { }

	// RVA: 0x149F150 Offset: 0x149F150 VA: 0x149F150
	public void showMasterFormation() { }

	// RVA: 0x149F294 Offset: 0x149F294 VA: 0x149F294
	private void SetBackBtnEnabled(bool isDrag) { }

	// RVA: 0x149F2D0 Offset: 0x149F2D0 VA: 0x149F2D0
	public void requestChangeUsrEquip() { }

	// RVA: 0x149F394 Offset: 0x149F394 VA: 0x149F394
	private void changeUserEquipCallback(string res) { }

	// RVA: 0x149F3F8 Offset: 0x149F3F8 VA: 0x149F3F8
	public void closeMasterFormation() { }

	// RVA: 0x149F4D8 Offset: 0x149F4D8 VA: 0x149F4D8
	public void OnClickBack() { }

	// RVA: 0x149F53C Offset: 0x149F53C VA: 0x149F53C
	public void gotoBack() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0700 Offset: 0xCD0700 VA: 0xCD0700
	// RVA: 0x149F7DC Offset: 0x149F7DC VA: 0x149F7DC
	private void <beginStartUp>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0710 Offset: 0xCD0710 VA: 0xCD0710
	// RVA: 0x149F7E4 Offset: 0x149F7E4 VA: 0x149F7E4
	private void <closeMasterFormation>m__1() { }
}

// Namespace: 
public class BlacklistRegistDialog : CommonConfirmDialog // TypeDefIndex: 9992
{
	// Fields
	[SerializeField] // RVA: 0xC70B20 Offset: 0xC70B20 VA: 0xC70B20
	protected UILabel messageLabel_sub; // 0xA8

	// Methods

	// RVA: 0x19ADD88 Offset: 0x19ADD88 VA: 0x19ADD88
	public void .ctor() { }

	// RVA: 0x19ADD90 Offset: 0x19ADD90 VA: 0x19ADD90
	public void Open(string title, string message_main, string message_sub, CommonConfirmDialog.ClickDelegate func, int fontsize_main = 0, int fontsize_sub = 0) { }
}

// Namespace: 
public class BlacklistRootComponent : MonoBehaviour // TypeDefIndex: 9993
{
	// Fields
	private static readonly int SCROLL_BAR_ACTIVE; // 0x0
	[SerializeField] // RVA: 0xC70B30 Offset: 0xC70B30 VA: 0xC70B30
	private PlayMakerFSM myRoomFsm; // 0x18
	[SerializeField] // RVA: 0xC70B40 Offset: 0xC70B40 VA: 0xC70B40
	private TitleInfoControl titleInfoCtr; // 0x20
	[SerializeField] // RVA: 0xC70B50 Offset: 0xC70B50 VA: 0xC70B50
	private SetGameOptionComponent gameOptionComp; // 0x28
	[SerializeField] // RVA: 0xC70B60 Offset: 0xC70B60 VA: 0xC70B60
	private FriendOperationItemListViewManager friendOperationItemListViewManager; // 0x30
	[SerializeField] // RVA: 0xC70B70 Offset: 0xC70B70 VA: 0xC70B70
	private GameObject blackListObj; // 0x38
	[SerializeField] // RVA: 0xC70B80 Offset: 0xC70B80 VA: 0xC70B80
	private GameObject optionTopObj; // 0x40
	[SerializeField] // RVA: 0xC70B90 Offset: 0xC70B90 VA: 0xC70B90
	private UILabel listExplanationLabel; // 0x48
	[SerializeField] // RVA: 0xC70BA0 Offset: 0xC70BA0 VA: 0xC70BA0
	private UILabel helpLabel; // 0x50
	[SerializeField] // RVA: 0xC70BB0 Offset: 0xC70BB0 VA: 0xC70BB0
	private UICommonButton friendHistoryTabButton; // 0x58
	[SerializeField] // RVA: 0xC70BC0 Offset: 0xC70BC0 VA: 0xC70BC0
	private BoxCollider friendHistoryTabBoxCollider; // 0x60
	[SerializeField] // RVA: 0xC70BD0 Offset: 0xC70BD0 VA: 0xC70BD0
	private UISprite friendHistoryTabButtonTitleSpr; // 0x68
	[SerializeField] // RVA: 0xC70BE0 Offset: 0xC70BE0 VA: 0xC70BE0
	private UISprite friendHistoryTabButtonBackSpr; // 0x70
	[SerializeField] // RVA: 0xC70BF0 Offset: 0xC70BF0 VA: 0xC70BF0
	private UICommonButton blackListTabButton; // 0x78
	[SerializeField] // RVA: 0xC70C00 Offset: 0xC70C00 VA: 0xC70C00
	private BoxCollider blackListTabBoxCollider; // 0x80
	[SerializeField] // RVA: 0xC70C10 Offset: 0xC70C10 VA: 0xC70C10
	private UISprite blackLisTabButtonTitleSpr; // 0x88
	[SerializeField] // RVA: 0xC70C20 Offset: 0xC70C20 VA: 0xC70C20
	private UISprite blackLisTabButtonBackSpr; // 0x90
	[SerializeField] // RVA: 0xC70C30 Offset: 0xC70C30 VA: 0xC70C30
	private UILabel registCntLabel; // 0x98
	[SerializeField] // RVA: 0xC70C40 Offset: 0xC70C40 VA: 0xC70C40
	private BlacklistRegistDialog blackListRegistDlg; // 0xA0
	private List<long> friendOfferList; // 0xA8
	private int selectItemNum; // 0xB0
	private BlacklistRootComponent.MODE listMode; // 0xB4

	// Methods

	// RVA: 0x19AE600 Offset: 0x19AE600 VA: 0x19AE600
	public void .ctor() { }

	// RVA: 0x19AE670 Offset: 0x19AE670 VA: 0x19AE670
	public void fadeIn() { }

	// RVA: 0x19AE74C Offset: 0x19AE74C VA: 0x19AE74C
	public void fadeOut() { }

	// RVA: 0x19AE82C Offset: 0x19AE82C VA: 0x19AE82C
	public void returnBlackList() { }

	// RVA: 0x19AE83C Offset: 0x19AE83C VA: 0x19AE83C
	public void blackListSetup() { }

	// RVA: 0x19AEB24 Offset: 0x19AEB24 VA: 0x19AEB24
	private void onMoveEnd() { }

	// RVA: 0x19AEC58 Offset: 0x19AEC58 VA: 0x19AEC58
	public void SelectShowServantEquip(EquipTargetInfo equipInfo, ServantStatusDialog.Kind statusKind) { }

	// RVA: 0x19AED18 Offset: 0x19AED18 VA: 0x19AED18
	protected void EndShowServantEquip(bool isDecide) { }

	// RVA: 0x19AEDBC Offset: 0x19AEDBC VA: 0x19AEDBC
	protected void EndCloseShowServantEquip() { }

	// RVA: 0x19AEE50 Offset: 0x19AEE50 VA: 0x19AEE50
	private void OnSelectFriendItem(FriendOperationItemListViewManager.ResultKind kind, int n) { }

	// RVA: 0x19AFA30 Offset: 0x19AFA30 VA: 0x19AFA30
	public void SelectShowServant(ServantLeaderInfo servantLeaderInfo) { }

	// RVA: 0x19AFAE0 Offset: 0x19AFAE0 VA: 0x19AFAE0
	protected void EndShowServant(bool isDecide) { }

	// RVA: 0x19AFBD4 Offset: 0x19AFBD4 VA: 0x19AFBD4
	protected void EndCloseShowServant() { }

	// RVA: 0x19AFC68 Offset: 0x19AFC68 VA: 0x19AFC68
	public void clickFriendHistoryTabButton() { }

	// RVA: 0x19B0220 Offset: 0x19B0220 VA: 0x19B0220
	public void clickBlacklistTabButton() { }

	// RVA: 0x19AFCDC Offset: 0x19AFCDC VA: 0x19AFCDC
	private void modeChange(BlacklistRootComponent.MODE mode) { }

	// RVA: 0x19B0294 Offset: 0x19B0294 VA: 0x19B0294
	private void setRegistCount() { }

	// RVA: 0x19B0450 Offset: 0x19B0450 VA: 0x19B0450
	public void afterMainMenuBar() { }

	// RVA: 0x19B0530 Offset: 0x19B0530 VA: 0x19B0530
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0720 Offset: 0xCD0720 VA: 0xCD0720
	// RVA: 0x19B0584 Offset: 0x19B0584 VA: 0x19B0584
	private void <fadeIn>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0730 Offset: 0xCD0730 VA: 0xCD0730
	// RVA: 0x19B061C Offset: 0x19B061C VA: 0x19B061C
	private void <fadeOut>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0740 Offset: 0xCD0740 VA: 0xCD0740
	// RVA: 0x19B0680 Offset: 0x19B0680 VA: 0x19B0680
	private void <blackListSetup>m__2(string result) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0750 Offset: 0xCD0750 VA: 0xCD0750
	// RVA: 0x19B0A2C Offset: 0x19B0A2C VA: 0x19B0A2C
	private void <afterMainMenuBar>m__3() { }
}

// Namespace: 
public enum BlacklistRootComponent.MODE // TypeDefIndex: 9994
{
	// Fields
	public int value__; // 0x0
	public const BlacklistRootComponent.MODE FRIEND_HISTORY = 0;
	public const BlacklistRootComponent.MODE BLACKLIST = 1;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44C74 Offset: 0xC44C74 VA: 0xC44C74
private sealed class BlacklistRootComponent.<OnSelectFriendItem>c__AnonStorey1 // TypeDefIndex: 9995
{
	// Fields
	internal long otherUserId; // 0x10
	internal BlacklistRootComponent $this; // 0x18

	// Methods

	// RVA: 0x19AFA20 Offset: 0x19AFA20 VA: 0x19AFA20
	public void .ctor() { }

	// RVA: 0x19B0B54 Offset: 0x19B0B54 VA: 0x19B0B54
	internal void <>m__0(bool isDecide) { }
}

// Namespace: 
private sealed class BlacklistRootComponent.<OnSelectFriendItem>c__AnonStorey1.<OnSelectFriendItem>c__AnonStorey0 // TypeDefIndex: 9996
{
	// Fields
	internal bool isDecide; // 0x10
	internal BlacklistRootComponent.<OnSelectFriendItem>c__AnonStorey1 <>f__ref$1; // 0x18

	// Methods

	// RVA: 0x19B0C40 Offset: 0x19B0C40 VA: 0x19B0C40
	public void .ctor() { }

	// RVA: 0x19B0C48 Offset: 0x19B0C48 VA: 0x19B0C48
	internal void <>m__0() { }

	// RVA: 0x19B0DB4 Offset: 0x19B0DB4 VA: 0x19B0DB4
	internal void <>m__1(string result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44C84 Offset: 0xC44C84 VA: 0xC44C84
private sealed class BlacklistRootComponent.<OnSelectFriendItem>c__AnonStorey2 // TypeDefIndex: 9997
{
	// Fields
	internal long otherUserId; // 0x10
	internal BlacklistRootComponent $this; // 0x18

	// Methods

	// RVA: 0x19AFA28 Offset: 0x19AFA28 VA: 0x19AFA28
	public void .ctor() { }

	// RVA: 0x19B0EC8 Offset: 0x19B0EC8 VA: 0x19B0EC8
	internal void <>m__0(bool isDecide) { }

	// RVA: 0x19B0FFC Offset: 0x19B0FFC VA: 0x19B0FFC
	internal void <>m__1(string result) { }

	// RVA: 0x19B10E8 Offset: 0x19B10E8 VA: 0x19B10E8
	internal void <>m__2() { }

	// RVA: 0x19B1194 Offset: 0x19B1194 VA: 0x19B1194
	internal void <>m__3() { }
}

// Namespace: 
public class ContinueDeviceComponent : MonoBehaviour // TypeDefIndex: 9998
{
	// Fields
	[SerializeField] // RVA: 0xC70C50 Offset: 0xC70C50 VA: 0xC70C50
	protected PlayMakerFSM myRoomFsm; // 0x18
	[SerializeField] // RVA: 0xC70C60 Offset: 0xC70C60 VA: 0xC70C60
	protected ContinueDeviceInputMenu continueDeviceInputMenu; // 0x20
	[SerializeField] // RVA: 0xC70C70 Offset: 0xC70C70 VA: 0xC70C70
	protected ContinueDeviceDispMenu continueDeviceDispMenu; // 0x28
	[SerializeField] // RVA: 0xC70C80 Offset: 0xC70C80 VA: 0xC70C80
	protected CommonConfirmDialog continueDeviceConfirmDialog; // 0x30
	[SerializeField] // RVA: 0xC70C90 Offset: 0xC70C90 VA: 0xC70C90
	protected MyRoomControl myRoomCtrl; // 0x38
	protected ContinueDeviceComponent.State state; // 0x40
	protected int closeCount; // 0x44
	protected string passwardCode; // 0x48
	protected string continueCode; // 0x50

	// Methods

	// RVA: 0x145F888 Offset: 0x145F888 VA: 0x145F888
	public void .ctor() { }

	// RVA: 0x145F890 Offset: 0x145F890 VA: 0x145F890
	public void showMenu() { }

	// RVA: 0x145FC98 Offset: 0x145FC98 VA: 0x145FC98
	public void hideMenu() { }

	// RVA: 0x145FD28 Offset: 0x145FD28 VA: 0x145FD28
	public bool openMenu() { }

	// RVA: 0x146064C Offset: 0x146064C VA: 0x146064C
	public bool closeMenu() { }

	// RVA: 0x1460A34 Offset: 0x1460A34 VA: 0x1460A34
	protected void onClose() { }

	// RVA: 0x1460AB4 Offset: 0x1460AB4 VA: 0x1460AB4
	protected void onInputCode(string code) { }

	// RVA: 0x1460C4C Offset: 0x1460C4C VA: 0x1460C4C
	protected void onConfirmCode(bool isDecide) { }

	// RVA: 0x1460D94 Offset: 0x1460D94 VA: 0x1460D94
	protected void callbackCodeInput(string result) { }

	// RVA: 0x1460EF8 Offset: 0x1460EF8 VA: 0x1460EF8
	protected void onNextDispOpen() { }

	// RVA: 0x1460FD4 Offset: 0x1460FD4 VA: 0x1460FD4
	protected void onDispCode(bool isDecide) { }

	// RVA: 0x14610F8 Offset: 0x14610F8 VA: 0x14610F8
	protected void onConfirmRetry(bool isDecide) { }

	// RVA: 0x1461260 Offset: 0x1461260 VA: 0x1461260
	protected void onNextRetryOpen() { }

	// RVA: 0x1461350 Offset: 0x1461350 VA: 0x1461350
	protected void onCloseDialog(bool result) { }

	// RVA: 0x14613B4 Offset: 0x14613B4 VA: 0x14613B4
	protected void onCloseMenu(PresentBoxNotificationMenu.Result result) { }
}

// Namespace: 
protected enum ContinueDeviceComponent.State // TypeDefIndex: 9999
{
	// Fields
	public int value__; // 0x0
	public const ContinueDeviceComponent.State INIT = 0;
	public const ContinueDeviceComponent.State INPUT_PASSWARD = 1;
	public const ContinueDeviceComponent.State CONFIRM_PASSEWARD = 2;
	public const ContinueDeviceComponent.State REQUEST_PASSWARD = 3;
	public const ContinueDeviceComponent.State OUTPUT_CONTINUE_CODE = 4;
	public const ContinueDeviceComponent.State CONFIRM_RETRY = 5;
	public const ContinueDeviceComponent.State CLOSE = 6;
}

// Namespace: 
public class ContinueDeviceDispMenu : BaseMenu // TypeDefIndex: 10000
{
	// Fields
	[SerializeField] // RVA: 0xC70CA0 Offset: 0xC70CA0 VA: 0xC70CA0
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC70CB0 Offset: 0xC70CB0 VA: 0xC70CB0
	protected UILabel explanation2Label; // 0x60
	[SerializeField] // RVA: 0xC70CC0 Offset: 0xC70CC0 VA: 0xC70CC0
	protected UILabel continueCodeLabel; // 0x68
	[SerializeField] // RVA: 0xC70CD0 Offset: 0xC70CD0 VA: 0xC70CD0
	protected UICommonButton decideButton; // 0x70
	[SerializeField] // RVA: 0xC70CE0 Offset: 0xC70CE0 VA: 0xC70CE0
	protected UICommonButton cancelButton; // 0x78
	[SerializeField] // RVA: 0xC70CF0 Offset: 0xC70CF0 VA: 0xC70CF0
	protected UILabel decideLabel; // 0x80
	[SerializeField] // RVA: 0xC70D00 Offset: 0xC70D00 VA: 0xC70D00
	protected UILabel cancelLabel; // 0x88
	[SerializeField] // RVA: 0xC70D10 Offset: 0xC70D10 VA: 0xC70D10
	protected UILabel copyLabel; // 0x90
	protected ContinueDeviceDispMenu.State state; // 0x98
	[CompilerGeneratedAttribute] // RVA: 0xC70D20 Offset: 0xC70D20 VA: 0xC70D20
	[DebuggerBrowsableAttribute] // RVA: 0xC70D20 Offset: 0xC70D20 VA: 0xC70D20
	private ContinueDeviceDispMenu.CallbackFunc callbackFunc; // 0xA0
	protected Action closeCallbackFunc; // 0xA8
	protected string code; // 0xB0

	// Methods

	// RVA: 0x1461440 Offset: 0x1461440 VA: 0x1461440
	public void .ctor() { }

	// RVA: 0x14614A8 Offset: 0x14614A8 VA: 0x14614A8
	protected void add_callbackFunc(ContinueDeviceDispMenu.CallbackFunc value) { }

	// RVA: 0x1461594 Offset: 0x1461594 VA: 0x1461594
	protected void remove_callbackFunc(ContinueDeviceDispMenu.CallbackFunc value) { }

	// RVA: 0x145FB78 Offset: 0x145FB78 VA: 0x145FB78
	public void Init() { }

	// RVA: 0x145FFD4 Offset: 0x145FFD4 VA: 0x145FFD4
	public void Open(string code, ContinueDeviceDispMenu.CallbackFunc callback) { }

	// RVA: 0x1461680 Offset: 0x1461680 VA: 0x1461680
	protected void EndOpen() { }

	// RVA: 0x146168C Offset: 0x146168C VA: 0x146168C
	public void Close() { }

	// RVA: 0x14609A4 Offset: 0x14609A4 VA: 0x14609A4
	public void Close(Action callback) { }

	// RVA: 0x1461694 Offset: 0x1461694 VA: 0x1461694
	protected void EndClose() { }

	// RVA: 0x14616F8 Offset: 0x14616F8 VA: 0x14616F8
	protected void Callback(bool result) { }

	// RVA: 0x1461944 Offset: 0x1461944 VA: 0x1461944
	public void OnClickCopy() { }

	// RVA: 0x1461AD4 Offset: 0x1461AD4 VA: 0x1461AD4
	public void EndCopyDialog(bool isDecide) { }

	// RVA: 0x1461B34 Offset: 0x1461B34 VA: 0x1461B34
	public void OnClickDecide() { }

	// RVA: 0x1461BD4 Offset: 0x1461BD4 VA: 0x1461BD4
	public void OnClickCancel() { }
}

// Namespace: 
protected enum ContinueDeviceDispMenu.State // TypeDefIndex: 10001
{
	// Fields
	public int value__; // 0x0
	public const ContinueDeviceDispMenu.State INIT = 0;
	public const ContinueDeviceDispMenu.State OPEN = 1;
	public const ContinueDeviceDispMenu.State INPUT = 2;
	public const ContinueDeviceDispMenu.State SELECTED = 3;
	public const ContinueDeviceDispMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class ContinueDeviceDispMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10002
{
	// Methods

	// RVA: 0x145FFC4 Offset: 0x145FFC4 VA: 0x145FFC4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1461718 Offset: 0x1461718 VA: 0x1461718 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x1461C74 Offset: 0x1461C74 VA: 0x1461C74 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x1461D04 Offset: 0x1461D04 VA: 0x1461D04 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ContinueDeviceInputMenu : BaseMenu // TypeDefIndex: 10003
{
	// Fields
	[SerializeField] // RVA: 0xC70D5C Offset: 0xC70D5C VA: 0xC70D5C
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC70D6C Offset: 0xC70D6C VA: 0xC70D6C
	protected UILabel explanation1Label; // 0x60
	[SerializeField] // RVA: 0xC70D7C Offset: 0xC70D7C VA: 0xC70D7C
	protected UILabel explanation2Label; // 0x68
	[SerializeField] // RVA: 0xC70D8C Offset: 0xC70D8C VA: 0xC70D8C
	protected UILineInput passward1Input; // 0x70
	[SerializeField] // RVA: 0xC70D9C Offset: 0xC70D9C VA: 0xC70D9C
	protected UILineInput passward2Input; // 0x78
	[SerializeField] // RVA: 0xC70DAC Offset: 0xC70DAC VA: 0xC70DAC
	protected UILabel warningLabel1; // 0x80
	[SerializeField] // RVA: 0xC70DBC Offset: 0xC70DBC VA: 0xC70DBC
	protected UILabel warningLabel2; // 0x88
	[SerializeField] // RVA: 0xC70DCC Offset: 0xC70DCC VA: 0xC70DCC
	protected UICommonButton decideButton; // 0x90
	[SerializeField] // RVA: 0xC70DDC Offset: 0xC70DDC VA: 0xC70DDC
	protected UILabel decideLabel; // 0x98
	protected ContinueDeviceInputMenu.State state; // 0xA0
	[CompilerGeneratedAttribute] // RVA: 0xC70DEC Offset: 0xC70DEC VA: 0xC70DEC
	[DebuggerBrowsableAttribute] // RVA: 0xC70DEC Offset: 0xC70DEC VA: 0xC70DEC
	private ContinueDeviceInputMenu.CallbackFunc callbackFunc; // 0xA8
	protected Action closeCallbackFunc; // 0xB0

	// Methods

	// RVA: 0x1461D10 Offset: 0x1461D10 VA: 0x1461D10
	public void .ctor() { }

	// RVA: 0x1461D78 Offset: 0x1461D78 VA: 0x1461D78
	protected void add_callbackFunc(ContinueDeviceInputMenu.CallbackFunc value) { }

	// RVA: 0x1461E64 Offset: 0x1461E64 VA: 0x1461E64
	protected void remove_callbackFunc(ContinueDeviceInputMenu.CallbackFunc value) { }

	// RVA: 0x145F91C Offset: 0x145F91C VA: 0x145F91C
	public void Init() { }

	// RVA: 0x1460264 Offset: 0x1460264 VA: 0x1460264
	public void Open(ContinueDeviceInputMenu.CallbackFunc callback) { }

	// RVA: 0x1461F50 Offset: 0x1461F50 VA: 0x1461F50
	protected void EndOpen() { }

	// RVA: 0x1462054 Offset: 0x1462054 VA: 0x1462054
	public void Close() { }

	// RVA: 0x146085C Offset: 0x146085C VA: 0x146085C
	public void Close(Action callback) { }

	// RVA: 0x146205C Offset: 0x146205C VA: 0x146205C
	protected void EndClose() { }

	// RVA: 0x14620C0 Offset: 0x14620C0 VA: 0x14620C0
	protected void Callback(string result) { }

	// RVA: 0x146247C Offset: 0x146247C VA: 0x146247C
	public void OnChangeInput() { }

	// RVA: 0x14627DC Offset: 0x14627DC VA: 0x14627DC
	public void OnClickDecide() { }

	// RVA: 0x14628A0 Offset: 0x14628A0 VA: 0x14628A0
	public void OnClickCancel() { }
}

// Namespace: 
protected enum ContinueDeviceInputMenu.State // TypeDefIndex: 10004
{
	// Fields
	public int value__; // 0x0
	public const ContinueDeviceInputMenu.State INIT = 0;
	public const ContinueDeviceInputMenu.State OPEN = 1;
	public const ContinueDeviceInputMenu.State INPUT = 2;
	public const ContinueDeviceInputMenu.State SELECTED = 3;
	public const ContinueDeviceInputMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class ContinueDeviceInputMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10005
{
	// Methods

	// RVA: 0x1460254 Offset: 0x1460254 VA: 0x1460254
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x14620DC Offset: 0x14620DC VA: 0x14620DC Slot: 11
	public virtual void Invoke(string result) { }

	// RVA: 0x1462940 Offset: 0x1462940 VA: 0x1462940 Slot: 12
	public virtual IAsyncResult BeginInvoke(string result, AsyncCallback callback, object object) { }

	// RVA: 0x1462964 Offset: 0x1462964 VA: 0x1462964 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class FavoriteChangeComponent : MonoBehaviour // TypeDefIndex: 10006
{
	// Fields
	[SerializeField] // RVA: 0xC70E28 Offset: 0xC70E28 VA: 0xC70E28
	protected PlayMakerFSM myRoomFsm; // 0x18
	[SerializeField] // RVA: 0xC70E38 Offset: 0xC70E38 VA: 0xC70E38
	protected TitleInfoControl titleInfo; // 0x20
	[SerializeField] // RVA: 0xC70E48 Offset: 0xC70E48 VA: 0xC70E48
	protected UILabel infoLb; // 0x28
	[SerializeField] // RVA: 0xC70E58 Offset: 0xC70E58 VA: 0xC70E58
	protected FavoriteChangeListViewManager favoriteChangeManager; // 0x30
	[SerializeField] // RVA: 0xC70E68 Offset: 0xC70E68 VA: 0xC70E68
	protected UISprite normalTabSprite; // 0x38
	[SerializeField] // RVA: 0xC70E78 Offset: 0xC70E78 VA: 0xC70E78
	protected UICommonButton normalTabButton; // 0x40
	[SerializeField] // RVA: 0xC70E88 Offset: 0xC70E88 VA: 0xC70E88
	protected BoxCollider normalTabBoxCollider; // 0x48
	[SerializeField] // RVA: 0xC70E98 Offset: 0xC70E98 VA: 0xC70E98
	protected UISprite lockTabSprite; // 0x50
	[SerializeField] // RVA: 0xC70EA8 Offset: 0xC70EA8 VA: 0xC70EA8
	protected UICommonButton lockTabButton; // 0x58
	[SerializeField] // RVA: 0xC70EB8 Offset: 0xC70EB8 VA: 0xC70EB8
	protected BoxCollider lockTabBoxCollider; // 0x60
	[SerializeField] // RVA: 0xC70EC8 Offset: 0xC70EC8 VA: 0xC70EC8
	protected UISprite choiceTabSprite; // 0x68
	[SerializeField] // RVA: 0xC70ED8 Offset: 0xC70ED8 VA: 0xC70ED8
	protected UICommonButton choiceTabButton; // 0x70
	[SerializeField] // RVA: 0xC70EE8 Offset: 0xC70EE8 VA: 0xC70EE8
	protected BoxCollider choiceTabBoxCollider; // 0x78
	[SerializeField] // RVA: 0xC70EF8 Offset: 0xC70EF8 VA: 0xC70EF8
	protected UISprite pushTabSprite; // 0x80
	[SerializeField] // RVA: 0xC70F08 Offset: 0xC70F08 VA: 0xC70F08
	protected UICommonButton pushTabButton; // 0x88
	[SerializeField] // RVA: 0xC70F18 Offset: 0xC70F18 VA: 0xC70F18
	protected BoxCollider pushTabBoxCollider; // 0x90
	[SerializeField] // RVA: 0xC70F28 Offset: 0xC70F28 VA: 0xC70F28
	protected UISprite scaleChangeTabSprite; // 0x98
	[SerializeField] // RVA: 0xC70F38 Offset: 0xC70F38 VA: 0xC70F38
	protected UISprite bgTxtSprite; // 0xA0
	protected FavoriteChangeComponent.State state; // 0xA8
	private FavoriteChangeComponent.ModeKind tabModeKind; // 0xAC
	private long usrSvtId; // 0xB0
	protected FavoriteChangeComponent.RequestCallbackFunc requedstCallback; // 0xB8
	private Action cancelCallback; // 0xC0

	// Methods

	// RVA: 0x135CF84 Offset: 0x135CF84 VA: 0x135CF84
	public void .ctor() { }

	// RVA: 0x135CF8C Offset: 0x135CF8C VA: 0x135CF8C
	public void Init() { }

	// RVA: 0x135D4C4 Offset: 0x135D4C4 VA: 0x135D4C4
	public void Open() { }

	// RVA: 0x135DDE0 Offset: 0x135DDE0 VA: 0x135DDE0
	public void dispSvtList() { }

	// RVA: 0x135DE18 Offset: 0x135DE18 VA: 0x135DE18
	public void cancelFavoriteWindow(Action callback) { }

	// RVA: 0x135E0A8 Offset: 0x135E0A8 VA: 0x135E0A8
	protected void endCancelButton(bool isRequest) { }

	// RVA: 0x135E46C Offset: 0x135E46C VA: 0x135E46C
	private void OnClickServant(FavoriteChangeListViewManager.ResultKind kind, int n) { }

	// RVA: 0x135FE08 Offset: 0x135FE08 VA: 0x135FE08
	private void EndCloseConfirmSelectFavorite() { }

	// RVA: 0x135F574 Offset: 0x135F574 VA: 0x135F574
	public void setFavoriteRequest(FavoriteChangeListViewItem selectItem) { }

	// RVA: 0x135FE98 Offset: 0x135FE98 VA: 0x135FE98
	private void EndCardFavoriteRequest(string result) { }

	// RVA: 0x135F9C8 Offset: 0x135F9C8 VA: 0x135F9C8
	private void PushRequest(FavoriteChangeListViewItem selectItem) { }

	// RVA: 0x1360314 Offset: 0x1360314 VA: 0x1360314
	private void EndePushRequest(string result) { }

	// RVA: 0x1360584 Offset: 0x1360584 VA: 0x1360584
	private void closeSvtDetail(bool isDecide, bool isIndividualityChanged, int questId) { }

	// RVA: 0x1360694 Offset: 0x1360694 VA: 0x1360694
	public void onClickNormalTabButton() { }

	// RVA: 0x136074C Offset: 0x136074C VA: 0x136074C
	protected void EndClickTabNormal(bool isRequest) { }

	// RVA: 0x1360894 Offset: 0x1360894 VA: 0x1360894
	public void onClickLockTabButton() { }

	// RVA: 0x13609A8 Offset: 0x13609A8 VA: 0x13609A8
	protected void EndClickTabLock(bool isRequest) { }

	// RVA: 0x1360A08 Offset: 0x1360A08 VA: 0x1360A08
	public void onClickChoiceTabButton() { }

	// RVA: 0x1360B1C Offset: 0x1360B1C VA: 0x1360B1C
	protected void EndClickTabChoice(bool isRequest) { }

	// RVA: 0x1360B7C Offset: 0x1360B7C VA: 0x1360B7C
	public void onClickPushTabButton() { }

	// RVA: 0x1360C58 Offset: 0x1360C58 VA: 0x1360C58
	protected void EndClickTabPush(bool isRequest) { }

	// RVA: 0x135D08C Offset: 0x135D08C VA: 0x135D08C
	private void setModeTabKind(FavoriteChangeComponent.ModeKind modeKind) { }

	// RVA: 0x135DEAC Offset: 0x135DEAC VA: 0x135DEAC
	public void StatusRequest(FavoriteChangeComponent.RequestCallbackFunc callback) { }

	// RVA: 0x1361498 Offset: 0x1361498 VA: 0x1361498
	protected void EndStatusSync(string result) { }

	// RVA: 0x13614B8 Offset: 0x13614B8 VA: 0x13614B8
	public void OnClickScaleChange() { }

	// RVA: 0x135DD78 Offset: 0x135DD78 VA: 0x135DD78
	private void UpdateScaleChangeIconSprite() { }
}

// Namespace: 
public enum FavoriteChangeComponent.ModeKind // TypeDefIndex: 10007
{
	// Fields
	public int value__; // 0x0
	public const FavoriteChangeComponent.ModeKind NORMAL = 0;
	public const FavoriteChangeComponent.ModeKind LOCK = 1;
	public const FavoriteChangeComponent.ModeKind CHOICE = 2;
	public const FavoriteChangeComponent.ModeKind PUSH = 3;
	public const FavoriteChangeComponent.ModeKind SUM = 4;
}

// Namespace: 
protected enum FavoriteChangeComponent.State // TypeDefIndex: 10008
{
	// Fields
	public int value__; // 0x0
	public const FavoriteChangeComponent.State INIT = 0;
	public const FavoriteChangeComponent.State OPEN = 1;
	public const FavoriteChangeComponent.State INPUT = 2;
	public const FavoriteChangeComponent.State SELECTED = 3;
	public const FavoriteChangeComponent.State CLOSE = 4;
	public const FavoriteChangeComponent.State SHOW_STATUS = 5;
	public const FavoriteChangeComponent.State WARNING = 6;
}

// Namespace: 
public sealed class FavoriteChangeComponent.RequestCallbackFunc : MulticastDelegate // TypeDefIndex: 10009
{
	// Methods

	// RVA: 0x135DE9C Offset: 0x135DE9C VA: 0x135DE9C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x136126C Offset: 0x136126C VA: 0x136126C Slot: 11
	public virtual void Invoke(bool isRequest) { }

	// RVA: 0x1361AC0 Offset: 0x1361AC0 VA: 0x1361AC0 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isRequest, AsyncCallback callback, object object) { }

	// RVA: 0x1361B50 Offset: 0x1361B50 VA: 0x1361B50 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44C94 Offset: 0xC44C94 VA: 0xC44C94
private sealed class FavoriteChangeComponent.<OnClickServant>c__AnonStorey0 // TypeDefIndex: 10010
{
	// Fields
	internal FavoriteChangeListViewItem item; // 0x10
	internal FavoriteChangeComponent $this; // 0x18

	// Methods

	// RVA: 0x135F4BC Offset: 0x135F4BC VA: 0x135F4BC
	public void .ctor() { }

	// RVA: 0x13616A0 Offset: 0x13616A0 VA: 0x13616A0
	internal void <>m__0(bool isDecide) { }

	// RVA: 0x136176C Offset: 0x136176C VA: 0x136176C
	internal void <>m__1(bool isDecide) { }

	// RVA: 0x1361838 Offset: 0x1361838 VA: 0x1361838
	internal void <>m__2() { }

	// RVA: 0x1361868 Offset: 0x1361868 VA: 0x1361868
	internal void <>m__3() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44CA4 Offset: 0xC44CA4 VA: 0xC44CA4
private sealed class FavoriteChangeComponent.<closeSvtDetail>c__AnonStorey1 // TypeDefIndex: 10011
{
	// Fields
	internal int questId; // 0x10
	internal bool isIndividualityChanged; // 0x14
	internal FavoriteChangeComponent $this; // 0x18

	// Methods

	// RVA: 0x136068C Offset: 0x136068C VA: 0x136068C
	public void .ctor() { }

	// RVA: 0x1361908 Offset: 0x1361908 VA: 0x1361908
	internal void <>m__0() { }
}

// Namespace: 
public class FavoriteChangeListViewItem : ListViewItem // TypeDefIndex: 10012
{
	// Fields
	protected UserServantEntity userSvtEntity; // 0x70
	protected ServantEntity servantEntity; // 0x78
	protected int svtId; // 0x80
	protected int classId; // 0x84
	protected int rarity; // 0x88
	protected int friendship; // 0x8C
	protected int friendshipMax; // 0x90
	protected bool isBase; // 0x94
	protected int partyIndex; // 0x98
	protected bool isUse; // 0x9C
	protected bool isLock; // 0x9D
	protected bool isChoice; // 0x9E
	protected bool isFavorite; // 0x9F
	protected bool isHeroine; // 0xA0
	protected bool isSwapLock; // 0xA1
	protected bool isSwapChoice; // 0xA2
	protected bool isPush; // 0xA3
	protected bool isPushMode; // 0xA4
	protected int priority; // 0xA8
	protected IconLabelInfo iconLabelInfo1; // 0xB0
	protected IconLabelInfo iconLabelInfo2; // 0xB8
	protected long amountSortValue; // 0xC0
	private int hpReinforceValue; // 0xC8
	private int atkReinforceValue; // 0xCC
	private int nowMaxHpReinforceValue; // 0xD0
	private int nowMaxAtkReinforceValue; // 0xD4

	// Properties
	public UserServantEntity UserServant { get; }
	public ServantEntity Servant { get; }
	public int SvtId { get; }
	public bool IsParty { get; }
	public bool IsBase { get; }
	public bool IsLock { get; }
	public bool IsChoice { get; }
	public bool IsPush { get; }
	public bool IsPushMode { get; set; }
	public bool IsFavorite { get; }
	public bool IsHerioneReave { get; }
	public bool IsCanNotSelect { get; }
	public bool IsSwapLock { get; }
	public bool IsDispLock { get; }
	public bool IsSwapChoice { get; }
	public bool IsDispChoice { get; }
	public IconLabelInfo IconInfo1 { get; }
	public IconLabelInfo IconInfo2 { get; }
	public bool IsEventJoin { get; }
	public bool IsNoPeriod { get; }

	// Methods

	// RVA: 0x1361B5C Offset: 0x1361B5C VA: 0x1361B5C
	public void .ctor(int index, UserServantEntity userSvtEntity, long[] partyUserSvtList, bool isFavorite) { }

	// RVA: 0x136212C Offset: 0x136212C VA: 0x136212C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1362134 Offset: 0x1362134 VA: 0x1362134
	public void ModifyItem(bool isFavorite) { }

	// RVA: 0x1362254 Offset: 0x1362254 VA: 0x1362254
	public void Modify(UserServantEntity userServantEntity) { }

	// RVA: 0x136236C Offset: 0x136236C VA: 0x136236C
	public void ModifyLockItem() { }

	// RVA: 0x13623B0 Offset: 0x13623B0 VA: 0x13623B0
	public void ModifyChoiceItem() { }

	// RVA: 0x13623F4 Offset: 0x13623F4 VA: 0x13623F4 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x135F8F4 Offset: 0x135F8F4 VA: 0x135F8F4
	public bool SwapLock() { }

	// RVA: 0x135F910 Offset: 0x135F910 VA: 0x135F910
	public bool SwapChoice() { }

	// RVA: 0x1362E40 Offset: 0x1362E40 VA: 0x1362E40
	public void setUserServantEntity(UserServantEntity entity) { }

	// RVA: 0x135F56C Offset: 0x135F56C VA: 0x135F56C
	public UserServantEntity get_UserServant() { }

	// RVA: 0x135F9C0 Offset: 0x135F9C0 VA: 0x135F9C0
	public ServantEntity get_Servant() { }

	// RVA: 0x1362E48 Offset: 0x1362E48 VA: 0x1362E48
	public int get_SvtId() { }

	// RVA: 0x1362E50 Offset: 0x1362E50 VA: 0x1362E50
	public bool get_IsParty() { }

	// RVA: 0x1362E60 Offset: 0x1362E60 VA: 0x1362E60
	public bool get_IsBase() { }

	// RVA: 0x1362E68 Offset: 0x1362E68 VA: 0x1362E68
	public bool get_IsLock() { }

	// RVA: 0x1362E70 Offset: 0x1362E70 VA: 0x1362E70
	public bool get_IsChoice() { }

	// RVA: 0x1362E78 Offset: 0x1362E78 VA: 0x1362E78
	public bool get_IsPush() { }

	// RVA: 0x1362E80 Offset: 0x1362E80 VA: 0x1362E80
	public void set_IsPushMode(bool value) { }

	// RVA: 0x1362E8C Offset: 0x1362E8C VA: 0x1362E8C
	public bool get_IsPushMode() { }

	// RVA: 0x1362E94 Offset: 0x1362E94 VA: 0x1362E94
	public bool get_IsFavorite() { }

	// RVA: 0x135F940 Offset: 0x135F940 VA: 0x135F940
	public bool get_IsHerioneReave() { }

	// RVA: 0x135FD70 Offset: 0x135FD70 VA: 0x135FD70
	public bool get_IsCanNotSelect() { }

	// RVA: 0x1362E9C Offset: 0x1362E9C VA: 0x1362E9C
	public bool get_IsSwapLock() { }

	// RVA: 0x1362EA4 Offset: 0x1362EA4 VA: 0x1362EA4
	public bool get_IsDispLock() { }

	// RVA: 0x1362EC4 Offset: 0x1362EC4 VA: 0x1362EC4
	public bool get_IsSwapChoice() { }

	// RVA: 0x1362D00 Offset: 0x1362D00 VA: 0x1362D00
	public bool get_IsDispChoice() { }

	// RVA: 0x1362ECC Offset: 0x1362ECC VA: 0x1362ECC
	public IconLabelInfo get_IconInfo1() { }

	// RVA: 0x1362ED4 Offset: 0x1362ED4 VA: 0x1362ED4
