
	// RVA: 0x2AF067C Offset: 0x2AF067C VA: 0x2AF067C Slot: 37
	public bool Equals(Type o) { }

	// RVA: 0x2AF06EC Offset: 0x2AF06EC VA: 0x2AF06EC
	internal bool EqualsInternal(Type type) { }

	// RVA: 0x2AF06F0 Offset: 0x2AF06F0 VA: 0x2AF06F0
	private static Type internal_from_handle(IntPtr handle) { }

	// RVA: 0x2AF06F4 Offset: 0x2AF06F4 VA: 0x2AF06F4
	private static Type internal_from_name(string name, bool throwOnError, bool ignoreCase) { }

	// RVA: 0x2AF0700 Offset: 0x2AF0700 VA: 0x2AF0700
	public static Type GetType(string typeName) { }

	// RVA: 0x2AF07B4 Offset: 0x2AF07B4 VA: 0x2AF07B4
	public static Type GetType(string typeName, bool throwOnError) { }

	// RVA: 0x2AF092C Offset: 0x2AF092C VA: 0x2AF092C
	internal static TypeCode GetTypeCodeInternal(Type type) { }

	// RVA: 0x2AF0930 Offset: 0x2AF0930 VA: 0x2AF0930
	public static TypeCode GetTypeCode(Type type) { }

	// RVA: 0x2AF0290 Offset: 0x2AF0290 VA: 0x2AF0290
	public static Type GetTypeFromHandle(RuntimeTypeHandle handle) { }

	// RVA: 0x2AF0A0C Offset: 0x2AF0A0C VA: 0x2AF0A0C
	public static RuntimeTypeHandle GetTypeHandle(object o) { }

	// RVA: 0x2AF05BC Offset: 0x2AF05BC VA: 0x2AF05BC
	internal static bool type_is_subtype_of(Type a, Type b, bool check_interfaces) { }

	// RVA: 0x2AF0AB0 Offset: 0x2AF0AB0 VA: 0x2AF0AB0
	internal static bool type_is_assignable_from(Type a, Type b) { }

	// RVA: 0x2AF0AB4 Offset: 0x2AF0AB4 VA: 0x2AF0AB4 Slot: 38
	public Type GetType() { }

	[ComVisibleAttribute] // RVA: 0xBCC59C Offset: 0xBCC59C VA: 0xBCC59C
	// RVA: 0x2AF0ABC Offset: 0x2AF0ABC VA: 0x2AF0ABC Slot: 39
	public virtual bool IsSubclassOf(Type c) { }

	// RVA: -1 Offset: -1 Slot: 40
	public abstract Type[] GetInterfaces();

	// RVA: 0x2AF0B9C Offset: 0x2AF0B9C VA: 0x2AF0B9C Slot: 41
	public virtual bool IsAssignableFrom(Type c) { }

	// RVA: 0x2AF0D14 Offset: 0x2AF0D14 VA: 0x2AF0D14 Slot: 42
	public virtual bool IsInstanceOfType(object o) { }

	// RVA: 0x2AF0D18 Offset: 0x2AF0D18 VA: 0x2AF0D18 Slot: 43
	public virtual int GetArrayRank() { }

	// RVA: -1 Offset: -1 Slot: 44
	public abstract Type GetElementType();

	// RVA: 0x2AF0D80 Offset: 0x2AF0D80 VA: 0x2AF0D80 Slot: 45
	public EventInfo GetEvent(string name) { }

	// RVA: -1 Offset: -1 Slot: 46
	public abstract EventInfo GetEvent(string name, BindingFlags bindingAttr);

	// RVA: 0x2AF0D94 Offset: 0x2AF0D94 VA: 0x2AF0D94 Slot: 47
	public virtual EventInfo[] GetEvents() { }

	// RVA: -1 Offset: -1 Slot: 48
	public abstract EventInfo[] GetEvents(BindingFlags bindingAttr);

	// RVA: 0x2AF0DA8 Offset: 0x2AF0DA8 VA: 0x2AF0DA8 Slot: 49
	public FieldInfo GetField(string name) { }

	// RVA: -1 Offset: -1 Slot: 50
	public abstract FieldInfo GetField(string name, BindingFlags bindingAttr);

	// RVA: 0x2AF0DBC Offset: 0x2AF0DBC VA: 0x2AF0DBC Slot: 51
	public FieldInfo[] GetFields() { }

	// RVA: -1 Offset: -1 Slot: 52
	public abstract FieldInfo[] GetFields(BindingFlags bindingAttr);

	// RVA: 0x2AF0DD0 Offset: 0x2AF0DD0 VA: 0x2AF0DD0 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x2AF0E2C Offset: 0x2AF0E2C VA: 0x2AF0E2C Slot: 53
	public MethodInfo GetMethod(string name) { }

	// RVA: 0x2AF0EE8 Offset: 0x2AF0EE8 VA: 0x2AF0EE8 Slot: 54
	public MethodInfo GetMethod(string name, BindingFlags bindingAttr) { }

	// RVA: 0x2AF0FA8 Offset: 0x2AF0FA8 VA: 0x2AF0FA8 Slot: 55
	public MethodInfo GetMethod(string name, Type[] types) { }

	// RVA: 0x2AF110C Offset: 0x2AF110C VA: 0x2AF110C Slot: 56
	public MethodInfo GetMethod(string name, BindingFlags bindingAttr, Binder binder, Type[] types, ParameterModifier[] modifiers) { }

	// RVA: 0x2AF0FC4 Offset: 0x2AF0FC4 VA: 0x2AF0FC4 Slot: 57
	public MethodInfo GetMethod(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers) { }

	// RVA: -1 Offset: -1 Slot: 58
	protected abstract MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers);

	// RVA: 0x2AF1124 Offset: 0x2AF1124 VA: 0x2AF1124
	internal MethodInfo GetMethodImplInternal(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers) { }

	// RVA: -1 Offset: -1 Slot: 59
	public abstract MethodInfo[] GetMethods(BindingFlags bindingAttr);

	// RVA: -1 Offset: -1 Slot: 60
	public abstract Type[] GetNestedTypes(BindingFlags bindingAttr);

	// RVA: 0x2AF1134 Offset: 0x2AF1134 VA: 0x2AF1134 Slot: 61
	public PropertyInfo[] GetProperties() { }

	// RVA: -1 Offset: -1 Slot: 62
	public abstract PropertyInfo[] GetProperties(BindingFlags bindingAttr);

	// RVA: 0x2AF1148 Offset: 0x2AF1148 VA: 0x2AF1148 Slot: 63
	public PropertyInfo GetProperty(string name) { }

	// RVA: 0x2AF1204 Offset: 0x2AF1204 VA: 0x2AF1204 Slot: 64
	public PropertyInfo GetProperty(string name, BindingFlags bindingAttr) { }

	// RVA: 0x2AF12C4 Offset: 0x2AF12C4 VA: 0x2AF12C4 Slot: 65
	public PropertyInfo GetProperty(string name, Type returnType) { }

	// RVA: 0x2AF1384 Offset: 0x2AF1384 VA: 0x2AF1384 Slot: 66
	public PropertyInfo GetProperty(string name, Type returnType, Type[] types) { }

	// RVA: 0x2AF13A4 Offset: 0x2AF13A4 VA: 0x2AF13A4 Slot: 67
	public PropertyInfo GetProperty(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers) { }

	// RVA: -1 Offset: -1 Slot: 68
	protected abstract PropertyInfo GetPropertyImpl(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers);

	// RVA: 0x2AF14EC Offset: 0x2AF14EC VA: 0x2AF14EC
	internal PropertyInfo GetPropertyImplInternal(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers) { }

	// RVA: -1 Offset: -1 Slot: 69
	protected abstract ConstructorInfo GetConstructorImpl(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers);

	// RVA: -1 Offset: -1 Slot: 70
	protected abstract TypeAttributes GetAttributeFlagsImpl();

	// RVA: -1 Offset: -1 Slot: 71
	protected abstract bool HasElementTypeImpl();

	// RVA: -1 Offset: -1 Slot: 72
	protected abstract bool IsArrayImpl();

	// RVA: -1 Offset: -1 Slot: 73
	protected abstract bool IsByRefImpl();

	// RVA: -1 Offset: -1 Slot: 74
	protected abstract bool IsPointerImpl();

	// RVA: -1 Offset: -1 Slot: 75
	protected abstract bool IsPrimitiveImpl();

	// RVA: 0x2AF14FC Offset: 0x2AF14FC VA: 0x2AF14FC
	internal static bool IsArrayImpl(Type type) { }

	// RVA: 0x2AF1500 Offset: 0x2AF1500 VA: 0x2AF1500 Slot: 76
	protected virtual bool IsValueTypeImpl() { }

	// RVA: 0x2AF1604 Offset: 0x2AF1604 VA: 0x2AF1604 Slot: 77
	protected virtual bool IsContextfulImpl() { }

	// RVA: 0x2AF1698 Offset: 0x2AF1698 VA: 0x2AF1698 Slot: 78
	protected virtual bool IsMarshalByRefImpl() { }

	[ComVisibleAttribute] // RVA: 0xBCC5B0 Offset: 0xBCC5B0 VA: 0xBCC5B0
	// RVA: 0x2AF172C Offset: 0x2AF172C VA: 0x2AF172C Slot: 79
	public ConstructorInfo GetConstructor(Type[] types) { }

	[ComVisibleAttribute] // RVA: 0xBCC5C4 Offset: 0xBCC5C4 VA: 0xBCC5C4
	// RVA: 0x2AF1868 Offset: 0x2AF1868 VA: 0x2AF1868 Slot: 80
	public ConstructorInfo GetConstructor(BindingFlags bindingAttr, Binder binder, Type[] types, ParameterModifier[] modifiers) { }

	[ComVisibleAttribute] // RVA: 0xBCC5D8 Offset: 0xBCC5D8 VA: 0xBCC5D8
	// RVA: 0x2AF1748 Offset: 0x2AF1748 VA: 0x2AF1748 Slot: 81
	public ConstructorInfo GetConstructor(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers) { }

	[ComVisibleAttribute] // RVA: 0xBCC5EC Offset: 0xBCC5EC VA: 0xBCC5EC
	// RVA: -1 Offset: -1 Slot: 82
	public abstract ConstructorInfo[] GetConstructors(BindingFlags bindingAttr);

	// RVA: -1 Offset: -1 Slot: 83
	public abstract object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, object[] args, ParameterModifier[] modifiers, CultureInfo culture, string[] namedParameters);

	// RVA: 0x2AF1880 Offset: 0x2AF1880 VA: 0x2AF1880 Slot: 3
	public override string ToString() { }

	// RVA: 0x2AF0568 Offset: 0x2AF0568 VA: 0x2AF0568
	internal bool get_IsSystemType() { }

	// RVA: 0x2AF1890 Offset: 0x2AF1890 VA: 0x2AF1890 Slot: 84
	public virtual Type[] GetGenericArguments() { }

	// RVA: 0x2AF18F8 Offset: 0x2AF18F8 VA: 0x2AF18F8 Slot: 85
	public virtual bool get_ContainsGenericParameters() { }

	// RVA: 0x2AF1900 Offset: 0x2AF1900 VA: 0x2AF1900 Slot: 86
	public virtual bool get_IsGenericTypeDefinition() { }

	// RVA: 0x2AF1904 Offset: 0x2AF1904 VA: 0x2AF1904
	internal Type GetGenericTypeDefinition_impl() { }

	// RVA: 0x2AF1908 Offset: 0x2AF1908 VA: 0x2AF1908 Slot: 87
	public virtual Type GetGenericTypeDefinition() { }

	// RVA: 0x2AF197C Offset: 0x2AF197C VA: 0x2AF197C Slot: 88
	public virtual bool get_IsGenericType() { }

	// RVA: 0x2AF1980 Offset: 0x2AF1980 VA: 0x2AF1980
	private static Type MakeGenericType(Type gt, Type[] types) { }

	// RVA: 0x2AF1984 Offset: 0x2AF1984 VA: 0x2AF1984 Slot: 89
	public virtual Type MakeGenericType(Type[] typeArguments) { }

	// RVA: 0x2AF1D3C Offset: 0x2AF1D3C VA: 0x2AF1D3C Slot: 90
	public virtual bool get_IsGenericParameter() { }

	// RVA: 0x2AF1D44 Offset: 0x2AF1D44 VA: 0x2AF1D44
	public bool get_IsNested() { }

	// RVA: 0x2AF1D68 Offset: 0x2AF1D68 VA: 0x2AF1D68
	private Type make_array_type(int rank) { }

	// RVA: 0x2AF1D6C Offset: 0x2AF1D6C VA: 0x2AF1D6C Slot: 91
	public virtual Type MakeArrayType() { }

	// RVA: 0x2AF1D74 Offset: 0x2AF1D74 VA: 0x2AF1D74
	private Type make_byref_type() { }

	// RVA: 0x2AF1D78 Offset: 0x2AF1D78 VA: 0x2AF1D78 Slot: 92
	public virtual Type MakeByRefType() { }

	// RVA: 0x2AF1D7C Offset: 0x2AF1D7C VA: 0x2AF1D7C
	internal object[] GetPseudoCustomAttributes() { }

	// RVA: 0x2AF1F44 Offset: 0x2AF1F44 VA: 0x2AF1F44
	internal bool get_IsUserType() { }
}

// Namespace: System.Reflection
[ClassInterfaceAttribute] // RVA: 0xBC3504 Offset: 0xBC3504 VA: 0xBC3504
[ComVisibleAttribute] // RVA: 0xBC3504 Offset: 0xBC3504 VA: 0xBC3504
[ComDefaultInterfaceAttribute] // RVA: 0xBC3504 Offset: 0xBC3504 VA: 0xBC3504
[Serializable]
public abstract class MemberInfo : ICustomAttributeProvider, _MemberInfo // TypeDefIndex: 52
{
	// Properties
	public abstract Type DeclaringType { get; }
	public abstract MemberTypes MemberType { get; }
	public abstract string Name { get; }
	public abstract Type ReflectedType { get; }
	public virtual Module Module { get; }

	// Methods

	// RVA: 0x22E66D0 Offset: 0x22E66D0 VA: 0x22E66D0
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 6
	public abstract Type get_DeclaringType();

	// RVA: -1 Offset: -1 Slot: 7
	public abstract MemberTypes get_MemberType();

	// RVA: -1 Offset: -1 Slot: 8
	public abstract string get_Name();

	// RVA: -1 Offset: -1 Slot: 9
	public abstract Type get_ReflectedType();

	// RVA: 0x22D4AEC Offset: 0x22D4AEC VA: 0x22D4AEC Slot: 10
	public virtual Module get_Module() { }

	// RVA: -1 Offset: -1 Slot: 11
	public abstract bool IsDefined(Type attributeType, bool inherit);

	// RVA: -1 Offset: -1 Slot: 12
	public abstract object[] GetCustomAttributes(bool inherit);

	// RVA: -1 Offset: -1 Slot: 13
	public abstract object[] GetCustomAttributes(Type attributeType, bool inherit);
}

// Namespace: System.Reflection
[ComVisibleAttribute] // RVA: 0xBC3590 Offset: 0xBC3590 VA: 0xBC3590
public interface ICustomAttributeProvider // TypeDefIndex: 53
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract object[] GetCustomAttributes(Type attributeType, bool inherit);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract bool IsDefined(Type attributeType, bool inherit);
}

// Namespace: System.Runtime.InteropServices
[CLSCompliantAttribute] // RVA: 0xBC35A4 Offset: 0xBC35A4 VA: 0xBC35A4
[TypeLibImportClassAttribute] // RVA: 0xBC35A4 Offset: 0xBC35A4 VA: 0xBC35A4
[InterfaceTypeAttribute] // RVA: 0xBC35A4 Offset: 0xBC35A4 VA: 0xBC35A4
[ComVisibleAttribute] // RVA: 0xBC35A4 Offset: 0xBC35A4 VA: 0xBC35A4
[GuidAttribute] // RVA: 0xBC35A4 Offset: 0xBC35A4 VA: 0xBC35A4
public interface _MemberInfo // TypeDefIndex: 54
{}

// Namespace: System.Reflection
[GuidAttribute] // RVA: 0xBC3668 Offset: 0xBC3668 VA: 0xBC3668
[ComVisibleAttribute] // RVA: 0xBC3668 Offset: 0xBC3668 VA: 0xBC3668
public interface IReflect // TypeDefIndex: 55
{}

// Namespace: System.Runtime.InteropServices
[CLSCompliantAttribute] // RVA: 0xBC36B8 Offset: 0xBC36B8 VA: 0xBC36B8
[ComVisibleAttribute] // RVA: 0xBC36B8 Offset: 0xBC36B8 VA: 0xBC36B8
[TypeLibImportClassAttribute] // RVA: 0xBC36B8 Offset: 0xBC36B8 VA: 0xBC36B8
[GuidAttribute] // RVA: 0xBC36B8 Offset: 0xBC36B8 VA: 0xBC36B8
[InterfaceTypeAttribute] // RVA: 0xBC36B8 Offset: 0xBC36B8 VA: 0xBC36B8
public interface _Type // TypeDefIndex: 56
{}

// Namespace: System
[ComDefaultInterfaceAttribute] // RVA: 0xBC377C Offset: 0xBC377C VA: 0xBC377C
[ClassInterfaceAttribute] // RVA: 0xBC377C Offset: 0xBC377C VA: 0xBC377C
[ComVisibleAttribute] // RVA: 0xBC377C Offset: 0xBC377C VA: 0xBC377C
[Serializable]
public class Exception : ISerializable, _Exception // TypeDefIndex: 57
{
	// Fields
	private IntPtr[] trace_ips; // 0x10
	private Exception inner_exception; // 0x18
	internal string message; // 0x20
	private string help_link; // 0x28
	private string class_name; // 0x30
	private string stack_trace; // 0x38
	private string _remoteStackTraceString; // 0x40
	private int remote_stack_index; // 0x48
	internal int hresult; // 0x4C
	private string source; // 0x50
	private IDictionary _data; // 0x58

	// Properties
	public Exception InnerException { get; }
	protected int HResult { get; set; }
	private string ClassName { get; }
	public virtual string Message { get; }
	public virtual string Source { get; }
	public virtual string StackTrace { get; }

	// Methods

	// RVA: 0x23B3D94 Offset: 0x23B3D94 VA: 0x23B3D94
	public void .ctor() { }

	// RVA: 0x23A8E9C Offset: 0x23A8E9C VA: 0x23A8E9C
	public void .ctor(string message) { }

	// RVA: 0x23B3DA8 Offset: 0x23B3DA8 VA: 0x23B3DA8
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x23B4150 Offset: 0x23B4150 VA: 0x23B4150
	public void .ctor(string message, Exception innerException) { }

	// RVA: 0x23B4194 Offset: 0x23B4194 VA: 0x23B4194 Slot: 5
	public Exception get_InnerException() { }

	// RVA: 0x23B419C Offset: 0x23B419C VA: 0x23B419C
	protected int get_HResult() { }

	// RVA: 0x23AD040 Offset: 0x23AD040 VA: 0x23AD040
	protected void set_HResult(int value) { }

	// RVA: 0x23B41A4 Offset: 0x23B41A4 VA: 0x23B41A4
	private string get_ClassName() { }

	// RVA: 0x23B41FC Offset: 0x23B41FC VA: 0x23B41FC Slot: 6
	public virtual string get_Message() { }

	// RVA: 0x23B42A8 Offset: 0x23B42A8 VA: 0x23B42A8 Slot: 7
	public virtual string get_Source() { }

	// RVA: 0x23B43E0 Offset: 0x23B43E0 VA: 0x23B43E0 Slot: 8
	public virtual string get_StackTrace() { }

	// RVA: 0x23B4D10 Offset: 0x23B4D10 VA: 0x23B4D10 Slot: 9
	public virtual Exception GetBaseException() { }

	// RVA: 0x23B4D34 Offset: 0x23B4D34 VA: 0x23B4D34 Slot: 10
	public virtual void GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x23B4F60 Offset: 0x23B4F60 VA: 0x23B4F60 Slot: 3
	public override string ToString() { }

	// RVA: 0x23B47EC Offset: 0x23B47EC VA: 0x23B47EC
	internal void GetFullNameForStackTrace(StringBuilder sb, MethodBase mi) { }

	// RVA: 0x23B41F4 Offset: 0x23B41F4 VA: 0x23B41F4 Slot: 11
	public Type GetType() { }
}

// Namespace: System.Runtime.InteropServices
[InterfaceTypeAttribute] // RVA: 0xBC3808 Offset: 0xBC3808 VA: 0xBC3808
[GuidAttribute] // RVA: 0xBC3808 Offset: 0xBC3808 VA: 0xBC3808
[ComVisibleAttribute] // RVA: 0xBC3808 Offset: 0xBC3808 VA: 0xBC3808
[CLSCompliantAttribute] // RVA: 0xBC3808 Offset: 0xBC3808 VA: 0xBC3808
public interface _Exception // TypeDefIndex: 58
{}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBC3880 Offset: 0xBC3880 VA: 0xBC3880
[MonoTODOAttribute] // RVA: 0xBC3880 Offset: 0xBC3880 VA: 0xBC3880
[Serializable]
public struct RuntimeFieldHandle : ISerializable // TypeDefIndex: 59
{
	// Fields
	private IntPtr value; // 0x0

	// Properties
	public IntPtr Value { get; }

	// Methods

	// RVA: 0xD690F8 Offset: 0xD690F8 VA: 0xD690F8
	private void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0xD69100 Offset: 0xD69100 VA: 0xD69100
	public IntPtr get_Value() { }

	// RVA: 0xD69108 Offset: 0xD69108 VA: 0xD69108 Slot: 4
	public void GetObjectData(SerializationInfo info, StreamingContext context) { }

	[ReliabilityContractAttribute] // RVA: 0xBCC600 Offset: 0xBCC600 VA: 0xBCC600
	// RVA: 0xD69110 Offset: 0xD69110 VA: 0xD69110 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0xD69118 Offset: 0xD69118 VA: 0xD69118 Slot: 2
	public override int GetHashCode() { }
}

// Namespace: System
[MonoTODOAttribute] // RVA: 0xBC38D0 Offset: 0xBC38D0 VA: 0xBC38D0
[ComVisibleAttribute] // RVA: 0xBC38D0 Offset: 0xBC38D0 VA: 0xBC38D0
[Serializable]
public struct RuntimeTypeHandle : ISerializable // TypeDefIndex: 60
{
	// Fields
	private IntPtr value; // 0x0

	// Properties
	public IntPtr Value { get; }

	// Methods

	// RVA: 0xD69158 Offset: 0xD69158 VA: 0xD69158
	private void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0xD69160 Offset: 0xD69160 VA: 0xD69160
	public IntPtr get_Value() { }

	// RVA: 0xD69168 Offset: 0xD69168 VA: 0xD69168 Slot: 4
	public void GetObjectData(SerializationInfo info, StreamingContext context) { }

	[ReliabilityContractAttribute] // RVA: 0xBCC618 Offset: 0xBCC618 VA: 0xBCC618
	// RVA: 0xD69170 Offset: 0xD69170 VA: 0xD69170 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0xD69178 Offset: 0xD69178 VA: 0xD69178 Slot: 2
	public override int GetHashCode() { }
}

// Namespace: System
[AttributeUsageAttribute] // RVA: 0xBC3920 Offset: 0xBC3920 VA: 0xBC3920
[ComVisibleAttribute] // RVA: 0xBC3920 Offset: 0xBC3920 VA: 0xBC3920
public sealed class ParamArrayAttribute : Attribute // TypeDefIndex: 61
{
	// Methods

	// RVA: 0x21F1870 Offset: 0x21F1870 VA: 0x21F1870
	public void .ctor() { }
}

// Namespace: System.Runtime.InteropServices
[ComVisibleAttribute] // RVA: 0xBC3960 Offset: 0xBC3960 VA: 0xBC3960
[AttributeUsageAttribute] // RVA: 0xBC3960 Offset: 0xBC3960 VA: 0xBC3960
public sealed class OutAttribute : Attribute // TypeDefIndex: 62
{
	// Methods

	// RVA: 0x1F8F5FC Offset: 0x1F8F5FC VA: 0x1F8F5FC
	public void .ctor() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBC39B4 Offset: 0xBC39B4 VA: 0xBC39B4
[AttributeUsageAttribute] // RVA: 0xBC39B4 Offset: 0xBC39B4 VA: 0xBC39B4
[Serializable]
public sealed class ObsoleteAttribute : Attribute // TypeDefIndex: 63
{
	// Fields
	private string _message; // 0x10
	private bool _error; // 0x18

	// Methods

	// RVA: 0x21F1014 Offset: 0x21F1014 VA: 0x21F1014
	public void .ctor() { }

	// RVA: 0x21F101C Offset: 0x21F101C VA: 0x21F101C
	public void .ctor(string message) { }

	// RVA: 0x21F1048 Offset: 0x21F1048 VA: 0x21F1048
	public void .ctor(string message, bool error) { }
}

// Namespace: System.Runtime.InteropServices
[AttributeUsageAttribute] // RVA: 0xBC3A08 Offset: 0xBC3A08 VA: 0xBC3A08
[ComVisibleAttribute] // RVA: 0xBC3A08 Offset: 0xBC3A08 VA: 0xBC3A08
public sealed class DllImportAttribute : Attribute // TypeDefIndex: 64
{
	// Fields
	public CallingConvention CallingConvention; // 0x10
	public CharSet CharSet; // 0x14
	private string Dll; // 0x18
	public string EntryPoint; // 0x20
	public bool ExactSpelling; // 0x28
	public bool PreserveSig; // 0x29
	public bool SetLastError; // 0x2A
	public bool BestFitMapping; // 0x2B
	public bool ThrowOnUnmappableChar; // 0x2C

	// Properties
	public string Value { get; }

	// Methods

	// RVA: 0x1F8E6FC Offset: 0x1F8E6FC VA: 0x1F8E6FC
	public void .ctor(string dllName) { }

	// RVA: 0x1F8E728 Offset: 0x1F8E728 VA: 0x1F8E728
	public string get_Value() { }
}

// Namespace: System.Runtime.InteropServices
[ComVisibleAttribute] // RVA: 0xBC3A5C Offset: 0xBC3A5C VA: 0xBC3A5C
[AttributeUsageAttribute] // RVA: 0xBC3A5C Offset: 0xBC3A5C VA: 0xBC3A5C
public sealed class MarshalAsAttribute : Attribute // TypeDefIndex: 65
{
	// Fields
	private UnmanagedType utype; // 0x10
	public UnmanagedType ArraySubType; // 0x14
	public string MarshalCookie; // 0x18
	[ComVisibleAttribute] // RVA: 0xBCB3DC Offset: 0xBCB3DC VA: 0xBCB3DC
	public string MarshalType; // 0x20
	[ComVisibleAttribute] // RVA: 0xBCB3F0 Offset: 0xBCB3F0 VA: 0xBCB3F0
	public Type MarshalTypeRef; // 0x28
	public int SizeConst; // 0x30
	public short SizeParamIndex; // 0x34

	// Methods

	// RVA: 0x1F8F54C Offset: 0x1F8F54C VA: 0x1F8F54C
	public void .ctor(UnmanagedType unmanagedType) { }
}

// Namespace: System.Runtime.InteropServices
[AttributeUsageAttribute] // RVA: 0xBC3AB0 Offset: 0xBC3AB0 VA: 0xBC3AB0
[ComVisibleAttribute] // RVA: 0xBC3AB0 Offset: 0xBC3AB0 VA: 0xBC3AB0
public sealed class InAttribute : Attribute // TypeDefIndex: 66
{
	// Methods

	// RVA: 0x1F8EC2C Offset: 0x1F8EC2C VA: 0x1F8EC2C
	public void .ctor() { }
}

// Namespace: System.Diagnostics
[ComVisibleAttribute] // RVA: 0xBC3B04 Offset: 0xBC3B04 VA: 0xBC3B04
[AttributeUsageAttribute] // RVA: 0xBC3B04 Offset: 0xBC3B04 VA: 0xBC3B04
[Serializable]
public sealed class ConditionalAttribute : Attribute // TypeDefIndex: 67
{
	// Fields
	private string myCondition; // 0x10

	// Methods

	// RVA: 0x23ABBE0 Offset: 0x23ABBE0 VA: 0x23ABBE0
	public void .ctor(string conditionString) { }
}

// Namespace: System.Security.Permissions
[ComVisibleAttribute] // RVA: 0xBC3B58 Offset: 0xBC3B58 VA: 0xBC3B58
[ObsoleteAttribute] // RVA: 0xBC3B58 Offset: 0xBC3B58 VA: 0xBC3B58
[AttributeUsageAttribute] // RVA: 0xBC3B58 Offset: 0xBC3B58 VA: 0xBC3B58
[Serializable]
public abstract class SecurityAttribute : Attribute // TypeDefIndex: 68
{
	// Fields
	private SecurityAction m_Action; // 0x10
	private bool m_Unrestricted; // 0x14

	// Properties
	public bool Unrestricted { get; }
	public SecurityAction Action { set; }

	// Methods

	// RVA: 0x242A0E4 Offset: 0x242A0E4 VA: 0x242A0E4
	protected void .ctor(SecurityAction action) { }

	// RVA: -1 Offset: -1 Slot: 7
	public abstract IPermission CreatePermission();

	// RVA: 0x2433F28 Offset: 0x2433F28 VA: 0x2433F28
	public bool get_Unrestricted() { }

	// RVA: 0x2433F20 Offset: 0x2433F20 VA: 0x2433F20
	public void set_Action(SecurityAction value) { }
}

// Namespace: System.Runtime.InteropServices
[AttributeUsageAttribute] // RVA: 0xBC3BE0 Offset: 0xBC3BE0 VA: 0xBC3BE0
[ComVisibleAttribute] // RVA: 0xBC3BE0 Offset: 0xBC3BE0 VA: 0xBC3BE0
public sealed class GuidAttribute : Attribute // TypeDefIndex: 69
{
	// Fields
	private string guidValue; // 0x10

	// Methods

	// RVA: 0x1F8EBF0 Offset: 0x1F8EBF0 VA: 0x1F8EBF0
	public void .ctor(string guid) { }
}

// Namespace: System.Runtime.InteropServices
[AttributeUsageAttribute] // RVA: 0xBC3C34 Offset: 0xBC3C34 VA: 0xBC3C34
[ComVisibleAttribute] // RVA: 0xBC3C34 Offset: 0xBC3C34 VA: 0xBC3C34
public sealed class ComImportAttribute : Attribute // TypeDefIndex: 70
{
	// Methods

	// RVA: 0x1F8E698 Offset: 0x1F8E698 VA: 0x1F8E698
	public void .ctor() { }
}

// Namespace: System.Runtime.InteropServices
[ComVisibleAttribute] // RVA: 0xBC3C88 Offset: 0xBC3C88 VA: 0xBC3C88
[AttributeUsageAttribute] // RVA: 0xBC3C88 Offset: 0xBC3C88 VA: 0xBC3C88
public sealed class OptionalAttribute : Attribute // TypeDefIndex: 71
{
	// Methods

	// RVA: 0x1F8F5F4 Offset: 0x1F8F5F4 VA: 0x1F8F5F4
	public void .ctor() { }
}

// Namespace: System.Runtime.CompilerServices
[AttributeUsageAttribute] // RVA: 0xBC3CDC Offset: 0xBC3CDC VA: 0xBC3CDC
public sealed class FixedBufferAttribute : Attribute // TypeDefIndex: 72
{
	// Fields
	private Type elementType; // 0x10
	private int length; // 0x18

	// Properties
	public Type ElementType { get; }
	public int Length { get; }

	// Methods

	// RVA: 0x1F8DF54 Offset: 0x1F8DF54 VA: 0x1F8DF54
	public void .ctor(Type elementType, int length) { }

	// RVA: 0x1F8DF90 Offset: 0x1F8DF90 VA: 0x1F8DF90
	public Type get_ElementType() { }

	// RVA: 0x1F8DF98 Offset: 0x1F8DF98 VA: 0x1F8DF98
	public int get_Length() { }
}

// Namespace: System.Runtime.CompilerServices
[AttributeUsageAttribute] // RVA: 0xBC3D18 Offset: 0xBC3D18 VA: 0xBC3D18
[Serializable]
public sealed class CompilerGeneratedAttribute : Attribute // TypeDefIndex: 73
{
	// Methods

	// RVA: 0x1F8DE68 Offset: 0x1F8DE68 VA: 0x1F8DE68
	public void .ctor() { }
}

// Namespace: System.Runtime.CompilerServices
[AttributeUsageAttribute] // RVA: 0xBC3D2C Offset: 0xBC3D2C VA: 0xBC3D2C
public sealed class InternalsVisibleToAttribute : Attribute // TypeDefIndex: 74
{
	// Fields
	private string assemblyName; // 0x10
	private bool all_visible; // 0x18

	// Methods

	// RVA: 0x1F8DFA0 Offset: 0x1F8DFA0 VA: 0x1F8DFA0
	public void .ctor(string assemblyName) { }
}

// Namespace: System.Runtime.CompilerServices
[AttributeUsageAttribute] // RVA: 0xBC3D78 Offset: 0xBC3D78 VA: 0xBC3D78
[Serializable]
public sealed class RuntimeCompatibilityAttribute : Attribute // TypeDefIndex: 75
{
	// Fields
	private bool wrap_non_exception_throws; // 0x10

	// Properties
	public bool WrapNonExceptionThrows { set; }

	// Methods

	// RVA: 0x1F8DFD4 Offset: 0x1F8DFD4 VA: 0x1F8DFD4
	public void .ctor() { }

	// RVA: 0x1F8DFDC Offset: 0x1F8DFDC VA: 0x1F8DFDC
	public void set_WrapNonExceptionThrows(bool value) { }
}

// Namespace: System.Diagnostics
[AttributeUsageAttribute] // RVA: 0xBC3DC4 Offset: 0xBC3DC4 VA: 0xBC3DC4
[ComVisibleAttribute] // RVA: 0xBC3DC4 Offset: 0xBC3DC4 VA: 0xBC3DC4
[Serializable]
public sealed class DebuggerHiddenAttribute : Attribute // TypeDefIndex: 76
{
	// Methods

	// RVA: 0x23ABE14 Offset: 0x23ABE14 VA: 0x23ABE14
	public void .ctor() { }
}

// Namespace: System.Reflection
[ComVisibleAttribute] // RVA: 0xBC3E18 Offset: 0xBC3E18 VA: 0xBC3E18
[AttributeUsageAttribute] // RVA: 0xBC3E18 Offset: 0xBC3E18 VA: 0xBC3E18
[Serializable]
public sealed class DefaultMemberAttribute : Attribute // TypeDefIndex: 77
{
	// Fields
	private string member_name; // 0x10

	// Properties
	public string MemberName { get; }

	// Methods

	// RVA: 0x21F8504 Offset: 0x21F8504 VA: 0x21F8504
	public void .ctor(string memberName) { }

	// RVA: 0x21E80E0 Offset: 0x21E80E0 VA: 0x21E80E0
	public string get_MemberName() { }
}

// Namespace: System.Runtime.CompilerServices
[ComVisibleAttribute] // RVA: 0xBC3E58 Offset: 0xBC3E58 VA: 0xBC3E58
[AttributeUsageAttribute] // RVA: 0xBC3E58 Offset: 0xBC3E58 VA: 0xBC3E58
[Serializable]
public sealed class DecimalConstantAttribute : Attribute // TypeDefIndex: 78
{
	// Fields
	private byte scale; // 0x10
	private bool sign; // 0x11
	private int hi; // 0x14
	private int mid; // 0x18
	private int low; // 0x1C

	// Methods

	[CLSCompliantAttribute] // RVA: 0xBCC630 Offset: 0xBCC630 VA: 0xBCC630
	// RVA: 0x1F8DE70 Offset: 0x1F8DE70 VA: 0x1F8DE70
	public void .ctor(byte scale, byte sign, uint hi, uint mid, uint low) { }
}

// Namespace: System.Runtime.InteropServices
[ComVisibleAttribute] // RVA: 0xBC3EAC Offset: 0xBC3EAC VA: 0xBC3EAC
[AttributeUsageAttribute] // RVA: 0xBC3EAC Offset: 0xBC3EAC VA: 0xBC3EAC
public sealed class FieldOffsetAttribute : Attribute // TypeDefIndex: 79
{
	// Fields
	private int val; // 0x10

	// Methods

	// RVA: 0x1F8E76C Offset: 0x1F8E76C VA: 0x1F8E76C
	public void .ctor(int offset) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBC3F00 Offset: 0xBC3F00 VA: 0xBC3F00
public struct RuntimeArgumentHandle // TypeDefIndex: 80
{
	// Fields
	internal IntPtr args; // 0x0
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBC3F14 Offset: 0xBC3F14 VA: 0xBC3F14
[Serializable]
public sealed class AsyncCallback : MulticastDelegate // TypeDefIndex: 81
{
	// Methods

	// RVA: 0x2281758 Offset: 0x2281758 VA: 0x2281758
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2281768 Offset: 0x2281768 VA: 0x2281768 Slot: 11
	public virtual void Invoke(IAsyncResult ar) { }

	// RVA: 0x2281B08 Offset: 0x2281B08 VA: 0x2281B08 Slot: 12
	public virtual IAsyncResult BeginInvoke(IAsyncResult ar, AsyncCallback callback, object object) { }

	// RVA: 0x2281B2C Offset: 0x2281B2C VA: 0x2281B2C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBC3F28 Offset: 0xBC3F28 VA: 0xBC3F28
public interface IAsyncResult // TypeDefIndex: 82
{
	// Properties
	public abstract object AsyncState { get; }
	public abstract WaitHandle AsyncWaitHandle { get; }
	public abstract bool CompletedSynchronously { get; }
	public abstract bool IsCompleted { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract object get_AsyncState();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract WaitHandle get_AsyncWaitHandle();

	// RVA: -1 Offset: -1 Slot: 2
	public abstract bool get_CompletedSynchronously();

	// RVA: -1 Offset: -1 Slot: 3
	public abstract bool get_IsCompleted();
}

// Namespace: System
[CLSCompliantAttribute] // RVA: 0xBC3F3C Offset: 0xBC3F3C VA: 0xBC3F3C
[ComVisibleAttribute] // RVA: 0xBC3F3C Offset: 0xBC3F3C VA: 0xBC3F3C
public struct TypedReference // TypeDefIndex: 83
{
	// Fields
	private RuntimeTypeHandle type; // 0x0
	private IntPtr value; // 0x8
	private IntPtr klass; // 0x10

	// Methods

	// RVA: 0xD73930 Offset: 0xD73930 VA: 0xD73930 Slot: 0
	public override bool Equals(object o) { }

	// RVA: 0xD7393C Offset: 0xD7393C VA: 0xD7393C Slot: 2
	public override int GetHashCode() { }
}

// Namespace: System
public struct ArgIterator // TypeDefIndex: 84
{
	// Fields
	private IntPtr sig; // 0x0
	private IntPtr args; // 0x8
	private int next_arg; // 0x10
	private int num_args; // 0x14

	// Methods

	// RVA: 0xD67CEC Offset: 0xD67CEC VA: 0xD67CEC Slot: 0
	public override bool Equals(object o) { }

	// RVA: 0xD67CF8 Offset: 0xD67CF8 VA: 0xD67CF8 Slot: 2
	public override int GetHashCode() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBC3F7C Offset: 0xBC3F7C VA: 0xBC3F7C
[Serializable]
public abstract class MarshalByRefObject // TypeDefIndex: 85
{
	// Fields
	private ServerIdentity _identity; // 0x10

	// Properties
	internal ServerIdentity ObjectIdentity { get; set; }

	// Methods

	// RVA: 0x21E263C Offset: 0x21E263C VA: 0x21E263C
	protected void .ctor() { }

	// RVA: 0x21E2640 Offset: 0x21E2640 VA: 0x21E2640
	internal ServerIdentity get_ObjectIdentity() { }

	// RVA: 0x21E2648 Offset: 0x21E2648 VA: 0x21E2648
	internal void set_ObjectIdentity(ServerIdentity value) { }

	// RVA: 0x21E2650 Offset: 0x21E2650 VA: 0x21E2650 Slot: 4
	public virtual ObjRef CreateObjRef(Type requestedType) { }

	// RVA: 0x21E2708 Offset: 0x21E2708 VA: 0x21E2708 Slot: 5
	public virtual object InitializeLifetimeService() { }
}

// Namespace: System
[Serializable]
public struct Nullable<T> // TypeDefIndex: 86
{
	// Fields
	internal T value; // 0x0
	internal bool has_value; // 0x0

	// Properties
	public bool HasValue { get; }
	public T Value { get; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(T value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xD6CFA8 Offset: 0xD6CFA8 VA: 0xD6CFA8
	|-Nullable<ConnectMarkFadeInLagType>..ctor
	|
	|-RVA: 0xD6D1D0 Offset: 0xD6D1D0 VA: 0xD6D1D0
	|-Nullable<CriAtomEx.Randomize3dConfig>..ctor
	|
	|-RVA: 0xD6F224 Offset: 0xD6F224 VA: 0xD6F224
	|-Nullable<CriAtomExAuxIn.Config>..ctor
	|
	|-RVA: 0xD6F4F4 Offset: 0xD6F4F4 VA: 0xD6F4F4
	|-Nullable<CriAtomExMic.Config>..ctor
	|
	|-RVA: 0xD6F908 Offset: 0xD6F908 VA: 0xD6F908
	|-Nullable<CriAtomExMic.DeviceInfo>..ctor
	|
	|-RVA: 0xD6FC58 Offset: 0xD6FC58 VA: 0xD6FC58
	|-Nullable<Player.Status>..ctor
	|
	|-RVA: 0xD6FE80 Offset: 0xD6FE80 VA: 0xD6FE80
	|-Nullable<bool>..ctor
	|
	|-RVA: 0xD700DC Offset: 0xD700DC VA: 0xD700DC
	|-Nullable<char>..ctor
	|
	|-RVA: 0xD70308 Offset: 0xD70308 VA: 0xD70308
	|-Nullable<DateTime>..ctor
	|
	|-RVA: 0xD70554 Offset: 0xD70554 VA: 0xD70554
	|-Nullable<int>..ctor
	|
	|-RVA: 0xD7077C Offset: 0xD7077C VA: 0xD7077C
	|-Nullable<long>..ctor
	|
	|-RVA: 0xD70980 Offset: 0xD70980 VA: 0xD70980
	|-Nullable<GCHandle>..ctor
	|
	|-RVA: 0xD70BA8 Offset: 0xD70BA8 VA: 0xD70BA8
	|-Nullable<float>..ctor
	|
	|-RVA: 0xD70DEC Offset: 0xD70DEC VA: 0xD70DEC
	|-Nullable<TimeSpan>..ctor
	|
	|-RVA: 0xD70FF0 Offset: 0xD70FF0 VA: 0xD70FF0
	|-Nullable<uint>..ctor
	|
	|-RVA: 0xD71218 Offset: 0xD71218 VA: 0xD71218
	|-Nullable<Vector2>..ctor
	|
	|-RVA: 0xD714E4 Offset: 0xD714E4 VA: 0xD714E4
	|-Nullable<Vector3>..ctor
	*/

	// RVA: -1 Offset: -1
	public bool get_HasValue() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xD6CFB0 Offset: 0xD6CFB0 VA: 0xD6CFB0
	|-Nullable<ConnectMarkFadeInLagType>.get_HasValue
	|
	|-RVA: 0xD6D1D8 Offset: 0xD6D1D8 VA: 0xD6D1D8
	|-Nullable<CriAtomEx.Randomize3dConfig>.get_HasValue
	|
	|-RVA: 0xD6F230 Offset: 0xD6F230 VA: 0xD6F230
	|-Nullable<CriAtomExAuxIn.Config>.get_HasValue
