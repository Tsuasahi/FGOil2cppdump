}

// Namespace: 
public enum ShopTopListViewManager.Kind // TypeDefIndex: 10667
{
	// Fields
	public int value__; // 0x0
	public const ShopTopListViewManager.Kind NORMAL = 0;
}

// Namespace: 
public enum ShopTopListViewManager.InitMode // TypeDefIndex: 10668
{
	// Fields
	public int value__; // 0x0
	public const ShopTopListViewManager.InitMode NONE = 0;
	public const ShopTopListViewManager.InitMode INPUT = 1;
	public const ShopTopListViewManager.InitMode INTO = 2;
	public const ShopTopListViewManager.InitMode ENTER = 3;
	public const ShopTopListViewManager.InitMode EXIT = 4;
	public const ShopTopListViewManager.InitMode RETRY = 5;
	public const ShopTopListViewManager.InitMode ENTERED = 6;
}

// Namespace: 
public class ShopTopListViewObject : ListViewObject // TypeDefIndex: 10669
{
	// Fields
	private ShopTopListViewObject.InitMode initMode; // 0x6C
	private ShopTopListViewObject.State state; // 0x70
	private Action onMoveEnd; // 0x78
	private ShopTopListViewItemDraw itemDraw; // 0x80
	private ShopTopListViewItemDraw.DispMode dispMode; // 0x88
	private GameObject dragObject; // 0x90

	// Methods

	// RVA: 0x1A59184 Offset: 0x1A59184 VA: 0x1A59184
	public void .ctor() { }

	// RVA: 0x1A591EC Offset: 0x1A591EC VA: 0x1A591EC
	protected void Awake() { }

	// RVA: 0x1A59260 Offset: 0x1A59260 VA: 0x1A59260
	private void OnDestroy() { }

	// RVA: 0x1A578FC Offset: 0x1A578FC VA: 0x1A578FC
	public ShopTopListViewItem GetItem() { }

	// RVA: 0x1A5930C Offset: 0x1A5930C VA: 0x1A5930C Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1A59318 Offset: 0x1A59318 VA: 0x1A59318 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x1A5941C Offset: 0x1A5941C VA: 0x1A5941C Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1A57B48 Offset: 0x1A57B48 VA: 0x1A57B48
	public void Init(ShopTopListViewObject.InitMode initMode, Action onMoveEnd, float delay = 0) { }

	// RVA: 0x1A594AC Offset: 0x1A594AC VA: 0x1A594AC
	private ShopTopListViewObject.State GetState(ShopTopListViewObject.InitMode initMode) { }

	// RVA: 0x1A59634 Offset: 0x1A59634 VA: 0x1A59634
	protected void SetupDisp() { }

	// RVA: 0x1A594CC Offset: 0x1A594CC VA: 0x1A594CC
	private void EventStart(ShopTopListViewObject.InitMode initMode, float delay) { }

	// RVA: 0x1A5987C Offset: 0x1A5987C VA: 0x1A5987C
	private void EventMove() { }

	// RVA: 0x1A59B08 Offset: 0x1A59B08 VA: 0x1A59B08
	private void EventMoveFinish() { }

	// RVA: 0x1A59BD8 Offset: 0x1A59BD8 VA: 0x1A59BD8
	private void OnMoveEnd() { }

	// RVA: 0x1A597EC Offset: 0x1A597EC VA: 0x1A597EC
	private Vector3 GetStartPosition(ShopTopListViewObject.InitMode initMode) { }

	// RVA: 0x1A5998C Offset: 0x1A5998C VA: 0x1A5998C
	private Vector3 GetTargetPosition(ShopTopListViewObject.InitMode initMode) { }

	// RVA: 0x1A597D0 Offset: 0x1A597D0 VA: 0x1A597D0
	private void CallOnMoveEnd() { }

	// RVA: 0x1A582B0 Offset: 0x1A582B0 VA: 0x1A582B0
	public static ShopTopListViewObject.InitMode GetInitMode(ShopTopListViewManager.InitMode initMode) { }

	// RVA: 0x1A5880C Offset: 0x1A5880C VA: 0x1A5880C
	public void ResetShopListNotice() { }
}

// Namespace: 
public enum ShopTopListViewObject.InitMode // TypeDefIndex: 10670
{
	// Fields
	public int value__; // 0x0
	public const ShopTopListViewObject.InitMode INVISIBLE = 0;
	public const ShopTopListViewObject.InitMode INVALID = 1;
	public const ShopTopListViewObject.InitMode VALID = 2;
	public const ShopTopListViewObject.InitMode INPUT = 3;
	public const ShopTopListViewObject.InitMode INTO = 4;
	public const ShopTopListViewObject.InitMode ENTER = 5;
	public const ShopTopListViewObject.InitMode EXIT = 6;
	public const ShopTopListViewObject.InitMode RETRY = 7;
	public const ShopTopListViewObject.InitMode ENTERED = 8;
}

// Namespace: 
private enum ShopTopListViewObject.State // TypeDefIndex: 10671
{
	// Fields
	public int value__; // 0x0
	public const ShopTopListViewObject.State INIT = 0;
	public const ShopTopListViewObject.State IDLE = 1;
	public const ShopTopListViewObject.State MOVE = 2;
	public const ShopTopListViewObject.State INPUT = 3;
}

// Namespace: 
public class AutomaticSaleDlgComponent : BaseDialog // TypeDefIndex: 10672
{
	// Fields
	private static readonly int[] settingList; // 0x0
	[SerializeField] // RVA: 0xCE49C4 Offset: 0xCE49C4 VA: 0xCE49C4
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xCE49D4 Offset: 0xCE49D4 VA: 0xCE49D4
	protected UILabel msgLabel; // 0x60
	[SerializeField] // RVA: 0xCE49E4 Offset: 0xCE49E4 VA: 0xCE49E4
	protected UICommonButton decideButton; // 0x68
	[SerializeField] // RVA: 0xCE49F4 Offset: 0xCE49F4 VA: 0xCE49F4
	protected UICommonButton cancelButton; // 0x70
	[SerializeField] // RVA: 0xCE4A04 Offset: 0xCE4A04 VA: 0xCE4A04
	protected UILabel decideLabel; // 0x78
	[SerializeField] // RVA: 0xCE4A14 Offset: 0xCE4A14 VA: 0xCE4A14
	protected UILabel cancelLabel; // 0x80
	[SerializeField] // RVA: 0xCE4A24 Offset: 0xCE4A24 VA: 0xCE4A24
	protected UICommonButton[] settingButton; // 0x88
	[SerializeField] // RVA: 0xCE4A34 Offset: 0xCE4A34 VA: 0xCE4A34
	protected UISprite[] settingButtonSprites; // 0x90
	[SerializeField] // RVA: 0xCE4A44 Offset: 0xCE4A44 VA: 0xCE4A44
	protected UILabel[] settingButtonLabel; // 0x98
	[SerializeField] // RVA: 0xCE4A54 Offset: 0xCE4A54 VA: 0xCE4A54
	protected UILabel expTitleLb; // 0xA0
	[SerializeField] // RVA: 0xCE4A64 Offset: 0xCE4A64 VA: 0xCE4A64
	protected UILabel fouTitleLb; // 0xA8
	[SerializeField] // RVA: 0xCE4A74 Offset: 0xCE4A74 VA: 0xCE4A74
	protected UILabel equipTitleLb; // 0xB0
	[CompilerGeneratedAttribute] // RVA: 0xCE4A84 Offset: 0xCE4A84 VA: 0xCE4A84
	[DebuggerBrowsableAttribute] // RVA: 0xCE4A84 Offset: 0xCE4A84 VA: 0xCE4A84
	private AutomaticSaleDlgComponent.CallbackFunc callbackFunc; // 0xB8
	protected Action closeCallbackFunc; // 0xC0
	private List<int> enableList; // 0xC8
	protected AutomaticSaleDlgComponent.State state; // 0xD0

	// Methods

	// RVA: 0x1472E20 Offset: 0x1472E20 VA: 0x1472E20
	public void .ctor() { }

	// RVA: 0x1472F1C Offset: 0x1472F1C VA: 0x1472F1C
	protected void add_callbackFunc(AutomaticSaleDlgComponent.CallbackFunc value) { }

	// RVA: 0x1473008 Offset: 0x1473008 VA: 0x1473008
	protected void remove_callbackFunc(AutomaticSaleDlgComponent.CallbackFunc value) { }

	// RVA: 0x14730F4 Offset: 0x14730F4 VA: 0x14730F4
	public void Init() { }

	// RVA: 0x1473328 Offset: 0x1473328 VA: 0x1473328
	public void Open(AutomaticSaleDlgComponent.CallbackFunc callback) { }

	// RVA: 0x147418C Offset: 0x147418C VA: 0x147418C
	protected void EndOpen() { }

	// RVA: 0x1474198 Offset: 0x1474198 VA: 0x1474198
	public void Close() { }

	// RVA: 0x14741A0 Offset: 0x14741A0 VA: 0x14741A0
	public void Close(Action callback) { }

	// RVA: 0x1474638 Offset: 0x1474638 VA: 0x1474638
	protected void EndClose() { }

	// RVA: 0x147469C Offset: 0x147469C VA: 0x147469C
	protected void Callback(bool result) { }

	// RVA: 0x14748E8 Offset: 0x14748E8 VA: 0x14748E8
	public void OnClickDecide() { }

	// RVA: 0x1474A80 Offset: 0x1474A80 VA: 0x1474A80
	public void OnClickCancel() { }

	// RVA: 0x1474B2C Offset: 0x1474B2C VA: 0x1474B2C
	public void OnClickExp3() { }

	// RVA: 0x1474BDC Offset: 0x1474BDC VA: 0x1474BDC
	public void OnClickExp2() { }

	// RVA: 0x1474BE4 Offset: 0x1474BE4 VA: 0x1474BE4
	public void OnClickExp1() { }

	// RVA: 0x1474BEC Offset: 0x1474BEC VA: 0x1474BEC
	public void OnClickFou3() { }

	// RVA: 0x1474BF4 Offset: 0x1474BF4 VA: 0x1474BF4
	public void OnClickFou2() { }

	// RVA: 0x1474BFC Offset: 0x1474BFC VA: 0x1474BFC
	public void OnClickFou1() { }

	// RVA: 0x1474C04 Offset: 0x1474C04 VA: 0x1474C04
	public void OnClickEquip3() { }

	// RVA: 0x1474C0C Offset: 0x1474C0C VA: 0x1474C0C
	public void OnClickEquip2() { }

	// RVA: 0x1474C14 Offset: 0x1474C14 VA: 0x1474C14
	public void OnClickEquip1() { }

	// RVA: 0x1474B34 Offset: 0x1474B34 VA: 0x1474B34
	private void OnClickButton(AutomaticSaleDlgComponent.FlagKind kind) { }

	// RVA: 0x1473828 Offset: 0x1473828 VA: 0x1473828
	protected void SetButtonSelect(int kind) { }

	// RVA: 0x1473AD0 Offset: 0x1473AD0 VA: 0x1473AD0
	protected void SetButtonEnable(bool isEnable) { }

	// RVA: 0x1474C1C Offset: 0x1474C1C VA: 0x1474C1C
	private void SwitchSelect(int kind) { }

	// RVA: 0x1474984 Offset: 0x1474984 VA: 0x1474984
	private void RequestUserStatusFlagSet() { }

	// RVA: 0x1474EEC Offset: 0x1474EEC VA: 0x1474EEC
	private void callbackUsetStatusFlagSet(string result) { }

	// RVA: 0x1474D60 Offset: 0x1474D60 VA: 0x1474D60
	private int[] GetDisableList() { }

	// RVA: 0x1474FB4 Offset: 0x1474FB4 VA: 0x1474FB4
	private static void .cctor() { }
}

// Namespace: 
private enum AutomaticSaleDlgComponent.FlagKind // TypeDefIndex: 10673
{
	// Fields
	public int value__; // 0x0
	public const AutomaticSaleDlgComponent.FlagKind EXP_1 = 0;
	public const AutomaticSaleDlgComponent.FlagKind EXP_2 = 1;
	public const AutomaticSaleDlgComponent.FlagKind EXP_3 = 2;
	public const AutomaticSaleDlgComponent.FlagKind STATUS_UP_1 = 3;
	public const AutomaticSaleDlgComponent.FlagKind STATUS_UP_2 = 4;
	public const AutomaticSaleDlgComponent.FlagKind STATUS_UP_3 = 5;
	public const AutomaticSaleDlgComponent.FlagKind EQUIP_1 = 6;
	public const AutomaticSaleDlgComponent.FlagKind EQUIP_2 = 7;
	public const AutomaticSaleDlgComponent.FlagKind EQUIP_3 = 8;
	public const AutomaticSaleDlgComponent.FlagKind MAX = 9;
}

// Namespace: 
protected enum AutomaticSaleDlgComponent.State // TypeDefIndex: 10674
{
	// Fields
	public int value__; // 0x0
	public const AutomaticSaleDlgComponent.State INIT = 0;
	public const AutomaticSaleDlgComponent.State OPEN = 1;
	public const AutomaticSaleDlgComponent.State INPUT = 2;
	public const AutomaticSaleDlgComponent.State NETWORK = 3;
	public const AutomaticSaleDlgComponent.State SELECTED = 4;
	public const AutomaticSaleDlgComponent.State CLOSE = 5;
}

// Namespace: 
public sealed class AutomaticSaleDlgComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 10675
{
	// Methods

	// RVA: 0x1475070 Offset: 0x1475070 VA: 0x1475070
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x14746BC Offset: 0x14746BC VA: 0x14746BC Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x1475080 Offset: 0x1475080 VA: 0x1475080 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x1475110 Offset: 0x1475110 VA: 0x1475110 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB15F0 Offset: 0xCB15F0 VA: 0xCB15F0
private sealed class AutomaticSaleDlgComponent.<SetButtonSelect>c__AnonStorey1 // TypeDefIndex: 10676
{
	// Fields
	internal int kind; // 0x10

	// Methods

	// RVA: 0x1474D48 Offset: 0x1474D48 VA: 0x1474D48
	public void .ctor() { }

	// RVA: 0x1475050 Offset: 0x1475050 VA: 0x1475050
	internal bool <>m__0(int x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1600 Offset: 0xCB1600 VA: 0xCB1600
private sealed class AutomaticSaleDlgComponent.<SetButtonSelect>c__AnonStorey0 // TypeDefIndex: 10677
{
	// Fields
	internal int i; // 0x10

	// Methods

	// RVA: 0x1474D50 Offset: 0x1474D50 VA: 0x1474D50
	public void .ctor() { }

	// RVA: 0x1475040 Offset: 0x1475040 VA: 0x1475040
	internal bool <>m__0(int x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1610 Offset: 0xCB1610 VA: 0xCB1610
private sealed class AutomaticSaleDlgComponent.<SwitchSelect>c__AnonStorey2 // TypeDefIndex: 10678
{
	// Fields
	internal int kind; // 0x10

	// Methods

	// RVA: 0x1474D58 Offset: 0x1474D58 VA: 0x1474D58
	public void .ctor() { }

	// RVA: 0x1475060 Offset: 0x1475060 VA: 0x1475060
	internal bool <>m__0(int x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1620 Offset: 0xCB1620 VA: 0xCB1620
private sealed class AutomaticSaleDlgComponent.<GetDisableList>c__AnonStorey3 // TypeDefIndex: 10679
{
	// Fields
	internal int i; // 0x10

	// Methods

	// RVA: 0x1474FAC Offset: 0x1474FAC VA: 0x1474FAC
	public void .ctor() { }

	// RVA: 0x1475030 Offset: 0x1475030 VA: 0x1475030
	internal bool <>m__0(int x) { }
}

// Namespace: 
public class AutoSellInfoComponent : MonoBehaviour // TypeDefIndex: 10680
{
	// Fields
	[SerializeField] // RVA: 0xCE4AC0 Offset: 0xCE4AC0 VA: 0xCE4AC0
	protected GameObject line; // 0x18
	[SerializeField] // RVA: 0xCE4AD0 Offset: 0xCE4AD0 VA: 0xCE4AD0
	protected GameObject manaInfo; // 0x20
	[SerializeField] // RVA: 0xCE4AE0 Offset: 0xCE4AE0 VA: 0xCE4AE0
	protected GameObject qpInfo; // 0x28
	[SerializeField] // RVA: 0xCE4AF0 Offset: 0xCE4AF0 VA: 0xCE4AF0
	protected UILabel manaLabel; // 0x30
	[SerializeField] // RVA: 0xCE4B00 Offset: 0xCE4B00 VA: 0xCE4B00
	protected UILabel qpLabel; // 0x38

	// Methods

	// RVA: 0x1472008 Offset: 0x1472008 VA: 0x1472008
	public void .ctor() { }

	// RVA: 0x1472010 Offset: 0x1472010 VA: 0x1472010
	public void Clear() { }

	// RVA: 0x1472154 Offset: 0x1472154 VA: 0x1472154
	public void SetData(int mana, int qp, int befMana = -1, int befQp = -1) { }
}

// Namespace: 
public class GachaBannerComponent : MonoBehaviour // TypeDefIndex: 10681
{
	// Fields
	[SerializeField] // RVA: 0xCE4B10 Offset: 0xCE4B10 VA: 0xCE4B10
	protected UISprite bannerImg; // 0x18
	[SerializeField] // RVA: 0xCE4B20 Offset: 0xCE4B20 VA: 0xCE4B20
	protected GameObject closeInfo; // 0x20
	[SerializeField] // RVA: 0xCE4B30 Offset: 0xCE4B30 VA: 0xCE4B30
	protected UISprite closeImg; // 0x28
	[SerializeField] // RVA: 0xCE4B40 Offset: 0xCE4B40 VA: 0xCE4B40
	protected UILabel closeTxtLb; // 0x30
	[SerializeField] // RVA: 0xCE4B50 Offset: 0xCE4B50 VA: 0xCE4B50
	protected UIPanel clipPanel; // 0x38
	[SerializeField] // RVA: 0xCE4B60 Offset: 0xCE4B60 VA: 0xCE4B60
	private UILabel pickupMessage; // 0x40
	[SerializeField] // RVA: 0xCE4B70 Offset: 0xCE4B70 VA: 0xCE4B70
	private GameObject pickupMessageParent; // 0x48
	private VaildGachaInfo info; // 0x50
	private int bannerIdx; // 0x58
	private int moveBannerIdx; // 0x5C

	// Methods

	// RVA: 0x1E89F78 Offset: 0x1E89F78 VA: 0x1E89F78
	public void .ctor() { }

	// RVA: 0x1E89F80 Offset: 0x1E89F80 VA: 0x1E89F80
	public void setBannerGachaInfo(VaildGachaInfo data, int idx, int moveIdx, GameObject bannerAtlas, string imgName) { }

	// RVA: 0x1E8A16C Offset: 0x1E8A16C VA: 0x1E8A16C
	public void UpdateDisplay() { }

	// RVA: 0x1E8A458 Offset: 0x1E8A458 VA: 0x1E8A458
	public VaildGachaInfo getBannerGachaInfo() { }

	// RVA: 0x1E8A460 Offset: 0x1E8A460 VA: 0x1E8A460
	public int getBannerIdx() { }

	// RVA: 0x1E8A468 Offset: 0x1E8A468 VA: 0x1E8A468
	public int getMoveBannerIdx() { }

	// RVA: 0x1E8A470 Offset: 0x1E8A470 VA: 0x1E8A470
	public void setEnabledCollider(bool isEnable) { }

	// RVA: 0x1E8A4E8 Offset: 0x1E8A4E8 VA: 0x1E8A4E8
	public void OnClickDetail() { }
}

// Namespace: 
public class GachaInfos // TypeDefIndex: 10682
{
	// Fields
	public bool isNew; // 0x10
	public long userSvtId; // 0x18
	public int type; // 0x20
	public int objectId; // 0x24
	public int num; // 0x28
	public int limitCount; // 0x2C
	public int sellQp; // 0x30
	public int sellMana; // 0x34
	public int svtCoinNum; // 0x38

	// Methods

	// RVA: 0x1E8BCF0 Offset: 0x1E8BCF0 VA: 0x1E8BCF0
	public void .ctor() { }
}

// Namespace: 
public class GachaRqParamData // TypeDefIndex: 10683
{
	// Fields
	public int gachaType; // 0x10
	public int gachaId; // 0x14
	public int warId; // 0x18
	public int gachaTime; // 0x1C
	public int gachaResourceNum; // 0x20
	public int ticketItemId; // 0x24
	public int shopIdIdx; // 0x28
	public int gachaSubId; // 0x2C
	public int[] storyAdjustIds; // 0x30
	public bool isAppendSummon; // 0x38

	// Methods

	// RVA: 0x1E8C8D8 Offset: 0x1E8C8D8 VA: 0x1E8C8D8
	public void .ctor() { }
}

// Namespace: 
public class SummonHistoryDialog : TextLabelScrollDialog // TypeDefIndex: 10684
{
	// Fields
	[HeaderAttribute] // RVA: 0xCE4B80 Offset: 0xCE4B80 VA: 0xCE4B80
	[SerializeField] // RVA: 0xCE4B80 Offset: 0xCE4B80 VA: 0xCE4B80
	private SummonHistoryListViewManager summonHistoryListViewManager; // 0xA0
	[HeaderAttribute] // RVA: 0xCE4BCC Offset: 0xCE4BCC VA: 0xCE4BCC
	[SerializeField] // RVA: 0xCE4BCC Offset: 0xCE4BCC VA: 0xCE4BCC
	private UILabel summonNameLabel; // 0xA8
	[HeaderAttribute] // RVA: 0xCE4C18 Offset: 0xCE4C18 VA: 0xCE4C18
	[SerializeField] // RVA: 0xCE4C18 Offset: 0xCE4C18 VA: 0xCE4C18
	private UILabel UpperMessageLabel; // 0xB0

	// Methods

	// RVA: 0x1DACAD0 Offset: 0x1DACAD0 VA: 0x1DACAD0
	public void .ctor() { }

	// RVA: 0x1DACAD8 Offset: 0x1DACAD8 VA: 0x1DACAD8 Slot: 7
	protected override void Init() { }

	// RVA: 0x1DACB14 Offset: 0x1DACB14 VA: 0x1DACB14
	public void Open(VaildGachaInfo gachaInfo) { }
}

// Namespace: 
public class SummonHistoryListViewItem : ListViewItem // TypeDefIndex: 10685
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCE4C64 Offset: 0xCE4C64 VA: 0xCE4C64
	[DebuggerBrowsableAttribute] // RVA: 0xCE4C64 Offset: 0xCE4C64 VA: 0xCE4C64
	private string <Message>k__BackingField; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xCE4CA0 Offset: 0xCE4CA0 VA: 0xCE4CA0
	[DebuggerBrowsableAttribute] // RVA: 0xCE4CA0 Offset: 0xCE4CA0 VA: 0xCE4CA0
	private SummonHistoryListViewItem.LayoutType <Layout>k__BackingField; // 0x78

	// Properties
	public string Message { get; set; }
	public SummonHistoryListViewItem.LayoutType Layout { get; set; }

	// Methods

	// RVA: 0x1DAD4F0 Offset: 0x1DAD4F0 VA: 0x1DAD4F0
	public void .ctor(int index, string message, SummonHistoryListViewItem.LayoutType layout) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F01C Offset: 0xD3F01C VA: 0xD3F01C
	// RVA: 0x1DAD53C Offset: 0x1DAD53C VA: 0x1DAD53C
	public string get_Message() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F02C Offset: 0xD3F02C VA: 0xD3F02C
	// RVA: 0x1DAD52C Offset: 0x1DAD52C VA: 0x1DAD52C
	private void set_Message(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F03C Offset: 0xD3F03C VA: 0xD3F03C
	// RVA: 0x1DAD544 Offset: 0x1DAD544 VA: 0x1DAD544
	public SummonHistoryListViewItem.LayoutType get_Layout() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F04C Offset: 0xD3F04C VA: 0xD3F04C
	// RVA: 0x1DAD534 Offset: 0x1DAD534 VA: 0x1DAD534
	private void set_Layout(SummonHistoryListViewItem.LayoutType value) { }
}

// Namespace: 
public enum SummonHistoryListViewItem.LayoutType // TypeDefIndex: 10686
{
	// Fields
	public int value__; // 0x0
	public const SummonHistoryListViewItem.LayoutType Message = 0;
	public const SummonHistoryListViewItem.LayoutType Datetime = 1;
}

// Namespace: 
public class SummonHistoryListViewItemDraw : MonoBehaviour // TypeDefIndex: 10687
{
	// Fields
	[SerializeField] // RVA: 0xCE4CDC Offset: 0xCE4CDC VA: 0xCE4CDC
	private UILabel messageLabel; // 0x18
	[SerializeField] // RVA: 0xCE4CEC Offset: 0xCE4CEC VA: 0xCE4CEC
	private UILabel datetimeLabel; // 0x20
	[SerializeField] // RVA: 0xCE4CFC Offset: 0xCE4CFC VA: 0xCE4CFC
	private UILabel dotLabel; // 0x28

	// Methods

	// RVA: 0x1DAD54C Offset: 0x1DAD54C VA: 0x1DAD54C
	public void .ctor() { }

	// RVA: 0x1DAD554 Offset: 0x1DAD554 VA: 0x1DAD554
	public void SetItem(SummonHistoryListViewItem item) { }
}

// Namespace: 
public class SummonHistoryListViewManager : ListViewManager // TypeDefIndex: 10688
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCE4D0C Offset: 0xCE4D0C VA: 0xCE4D0C
	private static Func<UserGachaHistoryEntity, long> <>f__am$cache0; // 0x0

	// Properties
	public float ListViewHeight { get; }

	// Methods

	// RVA: 0x1DAD7A4 Offset: 0x1DAD7A4 VA: 0x1DAD7A4
	public void .ctor() { }

	// RVA: 0x1DAD4AC Offset: 0x1DAD4AC VA: 0x1DAD4AC
	public float get_ListViewHeight() { }

	// RVA: 0x1DACE40 Offset: 0x1DACE40 VA: 0x1DACE40
	public void CreateList() { }

	// RVA: 0x1DAD7AC Offset: 0x1DAD7AC VA: 0x1DAD7AC Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F05C Offset: 0xD3F05C VA: 0xD3F05C
	// RVA: 0x1DAD934 Offset: 0x1DAD934 VA: 0x1DAD934
	private static long <CreateList>m__0(UserGachaHistoryEntity entity) { }
}

// Namespace: 
public class SummonHistoryListViewObject : ListViewObject // TypeDefIndex: 10689
{
	// Fields
	private SummonHistoryListViewItemDraw itemDraw; // 0x70

	// Methods

	// RVA: 0x1DAD95C Offset: 0x1DAD95C VA: 0x1DAD95C
	public void .ctor() { }

	// RVA: 0x1DAD9C4 Offset: 0x1DAD9C4 VA: 0x1DAD9C4
	private void Awake() { }

	// RVA: 0x1DAD834 Offset: 0x1DAD834 VA: 0x1DAD834
	public void SetupDisp() { }
}

// Namespace: 
public class MaskWithOpening : MonoBehaviour // TypeDefIndex: 10690
{
	// Fields
	[SerializeField] // RVA: 0xCE4D1C Offset: 0xCE4D1C VA: 0xCE4D1C
	private BoxCollider mask1; // 0x18
	[SerializeField] // RVA: 0xCE4D2C Offset: 0xCE4D2C VA: 0xCE4D2C
	private BoxCollider mask2; // 0x20
	[SerializeField] // RVA: 0xCE4D3C Offset: 0xCE4D3C VA: 0xCE4D3C
	private BoxCollider mask3; // 0x28
	[SerializeField] // RVA: 0xCE4D4C Offset: 0xCE4D4C VA: 0xCE4D4C
	private BoxCollider mask4; // 0x30

	// Methods

	// RVA: 0x19EA748 Offset: 0x19EA748 VA: 0x19EA748
	public void .ctor() { }

	// RVA: 0x19EA750 Offset: 0x19EA750 VA: 0x19EA750
	private void Start() { }

	// RVA: 0x19EA820 Offset: 0x19EA820 VA: 0x19EA820
	public void SetDepth(int depth) { }

	// RVA: 0x19EA898 Offset: 0x19EA898 VA: 0x19EA898
	public void SetOpening(Rect hole, int depth) { }

	// RVA: 0x19EACB8 Offset: 0x19EACB8 VA: 0x19EACB8
	public void SetBlock() { }
}

// Namespace: 
public class PaySummonInfoComponent : MonoBehaviour // TypeDefIndex: 10691
{
	// Fields
	public UILabel paySummonDetailLb; // 0x18
	public UISprite payTitle; // 0x20
	public UISprite ticketTitle; // 0x28
	public GameObject stoneInfo; // 0x30
	public UILabel stoneNumLb; // 0x38
	public GameObject ticketInfo; // 0x40
	public UILabel ticketNumLb; // 0x48
	public UIButton paySummonBtn; // 0x50
	public UISprite paySummonBntImg; // 0x58
	public UISprite paySummonBg; // 0x60
	public GameObject payBtnInfo; // 0x68
	private VaildGachaInfo currentGachaData; // 0x70
	private bool isTicket; // 0x78
	private int ticketNum; // 0x7C
	private int haveStoneNum; // 0x80
	private int price; // 0x84
	private int gachaTime; // 0x88
	private GachaRqParamData requestData; // 0x90
	protected PaySummonInfoComponent.ClickDelegate clickCallbackFunc; // 0x98

	// Methods

	// RVA: 0x1BD0038 Offset: 0x1BD0038 VA: 0x1BD0038
	public void .ctor() { }

	// RVA: 0x1BD0048 Offset: 0x1BD0048 VA: 0x1BD0048
	public void init() { }

	// RVA: 0x1BD00C8 Offset: 0x1BD00C8 VA: 0x1BD00C8
	public void setPaySummonInfo(VaildGachaInfo gachaData, PaySummonInfoComponent.ClickDelegate callback) { }

	// RVA: 0x1BD0348 Offset: 0x1BD0348 VA: 0x1BD0348
	public void setPaySummonDispInfo() { }

	// RVA: 0x1BD07D4 Offset: 0x1BD07D4 VA: 0x1BD07D4
	public int getUsrStoneNum() { }

	// RVA: 0x1BD07DC Offset: 0x1BD07DC VA: 0x1BD07DC
	public int getUsrTicketNum() { }

	// RVA: 0x1BD07E4 Offset: 0x1BD07E4 VA: 0x1BD07E4
	public int getSummonPrice() { }

	// RVA: 0x1BD07EC Offset: 0x1BD07EC VA: 0x1BD07EC
	public void setCurrentBannerInfo(VaildGachaInfo gachaData) { }

	// RVA: 0x1BD0134 Offset: 0x1BD0134 VA: 0x1BD0134
	public void setEnableSummonBtn(bool isOpen) { }

	// RVA: 0x1BD0828 Offset: 0x1BD0828 VA: 0x1BD0828
	public void setDispSummonBtn(bool isDisp) { }

	// RVA: 0x1BD0A3C Offset: 0x1BD0A3C VA: 0x1BD0A3C
	public void setAlphaSummonBtn(bool isDisp) { }

	// RVA: 0x1BD0A54 Offset: 0x1BD0A54 VA: 0x1BD0A54
	private void MoveAlpha(GameObject target) { }

	// RVA: 0x1BD0C74 Offset: 0x1BD0C74 VA: 0x1BD0C74
	private void ClearAlpha(GameObject target) { }

	// RVA: 0x1BD0DC8 Offset: 0x1BD0DC8 VA: 0x1BD0DC8
	public void OnClickGacha() { }
}

// Namespace: 
public sealed class PaySummonInfoComponent.ClickDelegate : MulticastDelegate // TypeDefIndex: 10692
{
	// Methods

	// RVA: 0x1BD131C Offset: 0x1BD131C VA: 0x1BD131C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1BD0F7C Offset: 0x1BD0F7C VA: 0x1BD0F7C Slot: 11
	public virtual void Invoke(GachaRqParamData paramData) { }

	// RVA: 0x1BD132C Offset: 0x1BD132C VA: 0x1BD132C Slot: 12
	public virtual IAsyncResult BeginInvoke(GachaRqParamData paramData, AsyncCallback callback, object object) { }

	// RVA: 0x1BD1350 Offset: 0x1BD1350 VA: 0x1BD1350 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class PointSummonInfoComponent : MonoBehaviour // TypeDefIndex: 10693
{
	// Fields
	public GameObject singleGachaBtnInfo; // 0x18
	public UIButton freeGachaBtn; // 0x20
	public UISprite freeGachaBtnImg; // 0x28
	public UISprite freeGachaTxtImg; // 0x30
	public GameObject multiGachaBtnInfo; // 0x38
	public UIButton singleBtn; // 0x40
	public UISprite singleBtnImg; // 0x48
	public UISprite singleNumImg; // 0x50
	public UIButton multiBtn; // 0x58
	public UISprite multiBtnImg; // 0x60
	public UISprite multiNumImg; // 0x68
	public UILabel pointGachaDetailLb; // 0x70
	public UILabel pointNumLb; // 0x78
	public UISprite pointSummonBg; // 0x80
	private GachaEntity pointGachaData; // 0x88
	private GachaRqParamData requestData; // 0x90
	private int price; // 0x98
	private int gachaTime; // 0x9C
	private bool isFree; // 0xA0
	protected PointSummonInfoComponent.ClickDelegate clickCallbackFunc; // 0xA8

	// Methods

	// RVA: 0x1BD5320 Offset: 0x1BD5320 VA: 0x1BD5320
	public void .ctor() { }

	// RVA: 0x1BD5330 Offset: 0x1BD5330 VA: 0x1BD5330
	public void init() { }

	// RVA: 0x1BD5390 Offset: 0x1BD5390 VA: 0x1BD5390
	public void setPointSummonInfo(GachaEntity pointGachaEnt, PointSummonInfoComponent.ClickDelegate callback) { }

	// RVA: 0x1BD53EC Offset: 0x1BD53EC VA: 0x1BD53EC
	public void setPointSummonDispInfo() { }

	// RVA: 0x1BD5B80 Offset: 0x1BD5B80 VA: 0x1BD5B80
	public bool getIsFree() { }

	// RVA: 0x1BD59F0 Offset: 0x1BD59F0 VA: 0x1BD59F0
	private void setMultiGachaNum(int price, int usrFriendPoint) { }

	// RVA: 0x1BD5B88 Offset: 0x1BD5B88 VA: 0x1BD5B88
	public void setDispPointBtn(bool isDisp) { }

	// RVA: 0x1BD5DD0 Offset: 0x1BD5DD0 VA: 0x1BD5DD0
	public void OnClickGacha() { }

	// RVA: 0x1BD62B0 Offset: 0x1BD62B0 VA: 0x1BD62B0
	public void OnClickMutiGacha() { }

	// RVA: 0x1BD63F4 Offset: 0x1BD63F4 VA: 0x1BD63F4
	public GachaRqParamData getRequetParam() { }
}

// Namespace: 
public sealed class PointSummonInfoComponent.ClickDelegate : MulticastDelegate // TypeDefIndex: 10694
{
	// Methods

	// RVA: 0x1BD63FC Offset: 0x1BD63FC VA: 0x1BD63FC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1BD5F10 Offset: 0x1BD5F10 VA: 0x1BD5F10 Slot: 11
	public virtual void Invoke(GachaRqParamData paramData) { }

	// RVA: 0x1BD640C Offset: 0x1BD640C VA: 0x1BD640C Slot: 12
	public virtual IAsyncResult BeginInvoke(GachaRqParamData paramData, AsyncCallback callback, object object) { }

	// RVA: 0x1BD6430 Offset: 0x1BD6430 VA: 0x1BD6430 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SelectBannerSliderIcon : MonoBehaviour // TypeDefIndex: 10695
{
	// Fields
	public UISprite onImg; // 0x18
	public UISprite offImg; // 0x20

	// Methods

	// RVA: 0x1B21724 Offset: 0x1B21724 VA: 0x1B21724
	public void .ctor() { }

	// RVA: 0x1B2172C Offset: 0x1B2172C VA: 0x1B2172C
	public void setEnableOnImg(bool isOn) { }

	// RVA: 0x1B2177C Offset: 0x1B2177C VA: 0x1B2177C
	public void setEnableOffImg(bool isOff) { }
}

// Namespace: 
public class StoryGachaAdjustData // TypeDefIndex: 10696
{
	// Fields
	public GachaStoryAdjustEntity targetEntity; // 0x10
	public int[] adjustIds; // 0x18

	// Methods

	// RVA: 0x1D0C134 Offset: 0x1D0C134 VA: 0x1D0C134
	public void .ctor() { }
}

// Namespace: 
public class SummonCautionDlgComponent : BaseDialog // TypeDefIndex: 10697
{
	// Fields
	[SerializeField] // RVA: 0xCE4D5C Offset: 0xCE4D5C VA: 0xCE4D5C
	protected GameObject cautionInfo; // 0x58
	[SerializeField] // RVA: 0xCE4D6C Offset: 0xCE4D6C VA: 0xCE4D6C
	protected UILabel titleLabel; // 0x60
	[SerializeField] // RVA: 0xCE4D7C Offset: 0xCE4D7C VA: 0xCE4D7C
	protected UILabel messageLabel; // 0x68
	[SerializeField] // RVA: 0xCE4D8C Offset: 0xCE4D8C VA: 0xCE4D8C
	protected UILabel confirmBtnLabel; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xCE4D9C Offset: 0xCE4D9C VA: 0xCE4D9C
	[DebuggerBrowsableAttribute] // RVA: 0xCE4D9C Offset: 0xCE4D9C VA: 0xCE4D9C
	private SummonCautionDlgComponent.CallbackFunc callbackFunc; // 0x78
	protected Action closeCallbackFunc; // 0x80

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x16FC12C Offset: 0x16FC12C VA: 0x16FC12C
	public void .ctor() { }

	// RVA: 0x16FC194 Offset: 0x16FC194 VA: 0x16FC194
	protected void add_callbackFunc(SummonCautionDlgComponent.CallbackFunc value) { }

	// RVA: 0x16FC280 Offset: 0x16FC280 VA: 0x16FC280
	protected void remove_callbackFunc(SummonCautionDlgComponent.CallbackFunc value) { }

	// RVA: 0x16FC36C Offset: 0x16FC36C VA: 0x16FC36C
	public void Init() { }

	// RVA: 0x16FC47C Offset: 0x16FC47C VA: 0x16FC47C
	public void OpenCautionMessageDlg(string title, string message, SummonCautionDlgComponent.CallbackFunc callback) { }

	// RVA: 0x16FC5CC Offset: 0x16FC5CC VA: 0x16FC5CC
	public void Close(Action callback) { }

	// RVA: 0x16FC654 Offset: 0x16FC654 VA: 0x16FC654
	protected void EndClose() { }

	// RVA: 0x16FC690 Offset: 0x16FC690 VA: 0x16FC690
	protected void Callback(bool result) { }

	// RVA: 0x16FC8DC Offset: 0x16FC8DC VA: 0x16FC8DC
	public void OnClickDecide() { }

	// RVA: 0x16FC8FC Offset: 0x16FC8FC VA: 0x16FC8FC
	public void OnClickCancel() { }

	// RVA: 0x16FC91C Offset: 0x16FC91C VA: 0x16FC91C Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
public sealed class SummonCautionDlgComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 10698
{
	// Methods

	// RVA: 0x16FC964 Offset: 0x16FC964 VA: 0x16FC964
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x16FC6B0 Offset: 0x16FC6B0 VA: 0x16FC6B0 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x16FC974 Offset: 0x16FC974 VA: 0x16FC974 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x16FCA04 Offset: 0x16FCA04 VA: 0x16FCA04 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SummonConfirmDlgComponent : BaseDialog // TypeDefIndex: 10699
{
	// Fields
	private static readonly float CONFIRM_DETAIL_LABEL_POS_Y; // 0x0
	private static readonly float CONFIRM_DETAIL_LABEL_CAMPAIGN_POS_Y; // 0x4
	[SerializeField] // RVA: 0xCE4DD8 Offset: 0xCE4DD8 VA: 0xCE4DD8
	protected GameObject defMsgInfo; // 0x58
	[SerializeField] // RVA: 0xCE4DE8 Offset: 0xCE4DE8 VA: 0xCE4DE8
	protected UILabel confirmTitleLabel; // 0x60
	[SerializeField] // RVA: 0xCE4DF8 Offset: 0xCE4DF8 VA: 0xCE4DF8
	protected UILabel confirmDetailLabel; // 0x68
	[SerializeField] // RVA: 0xCE4E08 Offset: 0xCE4E08 VA: 0xCE4E08
	protected GameObject singleMsgInfo; // 0x70
	[SerializeField] // RVA: 0xCE4E18 Offset: 0xCE4E18 VA: 0xCE4E18
	protected UILabel infoMsgLabel; // 0x78
	[SerializeField] // RVA: 0xCE4E28 Offset: 0xCE4E28 VA: 0xCE4E28
	protected UILabel msgLabel; // 0x80
	[SerializeField] // RVA: 0xCE4E38 Offset: 0xCE4E38 VA: 0xCE4E38
	protected GameObject closeBtnObject; // 0x88
	[SerializeField] // RVA: 0xCE4E48 Offset: 0xCE4E48 VA: 0xCE4E48
	protected UIButton closeBtn; // 0x90
	[SerializeField] // RVA: 0xCE4E58 Offset: 0xCE4E58 VA: 0xCE4E58
	protected UILabel closeBtnLb; // 0x98
	[SerializeField] // RVA: 0xCE4E68 Offset: 0xCE4E68 VA: 0xCE4E68
	protected GameObject confirmBtnObject; // 0xA0
	[SerializeField] // RVA: 0xCE4E78 Offset: 0xCE4E78 VA: 0xCE4E78
	protected UILabel confirmBtnLb; // 0xA8
	[SerializeField] // RVA: 0xCE4E88 Offset: 0xCE4E88 VA: 0xCE4E88
	protected GameObject settingBtnObject; // 0xB0
	[SerializeField] // RVA: 0xCE4E98 Offset: 0xCE4E98 VA: 0xCE4E98
	protected UIButton settingBtn; // 0xB8
	[SerializeField] // RVA: 0xCE4EA8 Offset: 0xCE4EA8 VA: 0xCE4EA8
	protected UILabel settingBtnLb; // 0xC0
	[SerializeField] // RVA: 0xCE4EB8 Offset: 0xCE4EB8 VA: 0xCE4EB8
	protected AutomaticSaleDlgComponent autoSaleDlgInfo; // 0xC8
	[SerializeField] // RVA: 0xCE4EC8 Offset: 0xCE4EC8 VA: 0xCE4EC8
	private UILabel campaignLabel; // 0xD0
	[CompilerGeneratedAttribute] // RVA: 0xCE4ED8 Offset: 0xCE4ED8 VA: 0xCE4ED8
	[DebuggerBrowsableAttribute] // RVA: 0xCE4ED8 Offset: 0xCE4ED8 VA: 0xCE4ED8
	private SummonConfirmDlgComponent.CallbackFunc callbackFunc; // 0xD8
	protected Action closeCallbackFunc; // 0xE0
	protected Action autoSaleDialogCloseCallbackFunc; // 0xE8
	protected SummonConfirmDlgComponent.State state; // 0xF0
	protected SeManager.SystemSeKind seKind; // 0xF4

	// Methods

	// RVA: 0x16FCA10 Offset: 0x16FCA10 VA: 0x16FCA10
	public void .ctor() { }

	// RVA: 0x16FCA78 Offset: 0x16FCA78 VA: 0x16FCA78
	protected void add_callbackFunc(SummonConfirmDlgComponent.CallbackFunc value) { }

	// RVA: 0x16FCB64 Offset: 0x16FCB64 VA: 0x16FCB64
	protected void remove_callbackFunc(SummonConfirmDlgComponent.CallbackFunc value) { }

	// RVA: 0x16FCC50 Offset: 0x16FCC50 VA: 0x16FCC50
	public void Init() { }

	// RVA: 0x16FCE34 Offset: 0x16FCE34 VA: 0x16FCE34
	public void OpenShortStone(int haveNum, SummonConfirmDlgComponent.CallbackFunc callback) { }

	// RVA: 0x16FD2A8 Offset: 0x16FD2A8 VA: 0x16FD2A8
	public void OpenShortChargeStone(int price, int haveChargeStoneNum, int haveFreeStoneNum, SummonConfirmDlgComponent.CallbackFunc callback) { }

	// RVA: 0x16FD420 Offset: 0x16FD420 VA: 0x16FD420
	public void OpenShortPoint(int havePoint, SummonConfirmDlgComponent.CallbackFunc callback) { }

	// RVA: 0x16FD540 Offset: 0x16FD540 VA: 0x16FD540
	public void OpenConfirmStone(string title, PayType.Type type, int price, int num, int haveStoneNum, int haveFreeStoneNum, int haveChargeStoneNum, int afterStoneNum, int afterFreeStoneNum, int afterChargeStoneNum, SummonConfirmDlgComponent.CallbackFunc callback, bool isAppendSummon = False) { }

	// RVA: 0x16FD9C4 Offset: 0x16FD9C4 VA: 0x16FD9C4
	public void OpenConfirmTicket(string title, int num, int haveTicketNum, int afterTicketNum, SummonConfirmDlgComponent.CallbackFunc callback) { }

	// RVA: 0x16FDBC8 Offset: 0x16FDBC8 VA: 0x16FDBC8
	public void OpenConfirmPoint(int havePointNum, int needPointNum, int afterPointNum, SummonConfirmDlgComponent.CallbackFunc callback, Action autoSaleDialogCloseCallback) { }

	// RVA: 0x16FDD1C Offset: 0x16FDD1C VA: 0x16FDD1C
	public void OpenConfirmFree(SummonConfirmDlgComponent.CallbackFunc callback, Action autoSaleDialogCloseCallback) { }

	// RVA: 0x16FCF70 Offset: 0x16FCF70 VA: 0x16FCF70
	public void Open(string title, string msg, string decideTxt, SummonConfirmDlgComponent.CallbackFunc callback, float msgOffY = 14) { }

