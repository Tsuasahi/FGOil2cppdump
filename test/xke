	public void Connect(IPAddress[] ipAddresses, int port) { }

	// RVA: 0x1CBA728 Offset: 0x1CBA728 VA: 0x1CBA728
	public void EndConnect(IAsyncResult asyncResult) { }

	// RVA: 0x1CBA760 Offset: 0x1CBA760 VA: 0x1CBA760
	public IAsyncResult BeginConnect(IPAddress address, int port, AsyncCallback requestCallback, object state) { }

	// RVA: 0x1CBA7C0 Offset: 0x1CBA7C0 VA: 0x1CBA7C0
	public IAsyncResult BeginConnect(IPAddress[] addresses, int port, AsyncCallback requestCallback, object state) { }

	// RVA: 0x1CBA820 Offset: 0x1CBA820 VA: 0x1CBA820
	public IAsyncResult BeginConnect(string host, int port, AsyncCallback requestCallback, object state) { }

	// RVA: 0x1CBA880 Offset: 0x1CBA880 VA: 0x1CBA880 Slot: 4
	private void System.IDisposable.Dispose() { }

	// RVA: 0x1CBA8B4 Offset: 0x1CBA8B4 VA: 0x1CBA8B4 Slot: 5
	protected virtual void Dispose(bool disposing) { }

	// RVA: 0x1CBA918 Offset: 0x1CBA918 VA: 0x1CBA918 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1CA9DD0 Offset: 0x1CA9DD0 VA: 0x1CA9DD0
	public Stream GetStream() { }

	// RVA: 0x1CBA0D0 Offset: 0x1CBA0D0 VA: 0x1CBA0D0
	private void CheckDisposed() { }
}

// Namespace: 
private enum TcpClient.Properties // TypeDefIndex: 4391
{
	// Fields
	public uint value__; // 0x0
	public const TcpClient.Properties LingerState = 1;
	public const TcpClient.Properties NoDelay = 2;
	public const TcpClient.Properties ReceiveBufferSize = 4;
	public const TcpClient.Properties ReceiveTimeout = 8;
	public const TcpClient.Properties SendBufferSize = 16;
	public const TcpClient.Properties SendTimeout = 32;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41984 Offset: 0xC41984 VA: 0xC41984
private sealed class TcpClient.<Connect>c__AnonStorey0 // TypeDefIndex: 4392
{
	// Fields
	internal ManualResetEvent mre; // 0x10

	// Methods

	// RVA: 0x1CBA0C8 Offset: 0x1CBA0C8 VA: 0x1CBA0C8
	public void .ctor() { }

	// RVA: 0x1CBA998 Offset: 0x1CBA998 VA: 0x1CBA998
	internal void <>m__0(IAsyncResult res) { }
}

// Namespace: Org.BouncyCastle.Asn1.Anssi
public class AnssiNamedCurves // TypeDefIndex: 4393
{
	// Fields
	private static readonly IDictionary objIds; // 0x0
	private static readonly IDictionary curves; // 0x8
	private static readonly IDictionary names; // 0x10

	// Properties
	public static IEnumerable Names { get; }

	// Methods

	// RVA: 0x1A9820C Offset: 0x1A9820C VA: 0x1A9820C
	private static void .cctor() { }

	// RVA: 0x1A9855C Offset: 0x1A9855C VA: 0x1A9855C
	public void .ctor() { }

	// RVA: 0x1A98564 Offset: 0x1A98564 VA: 0x1A98564
	private static ECCurve ConfigureCurve(ECCurve curve) { }

	// RVA: 0x1A98568 Offset: 0x1A98568 VA: 0x1A98568
	private static BigInteger FromHex(string hex) { }

	// RVA: 0x1A98318 Offset: 0x1A98318 VA: 0x1A98318
	private static void DefineCurve(string name, DerObjectIdentifier oid, X9ECParametersHolder holder) { }

	// RVA: 0x1A98604 Offset: 0x1A98604 VA: 0x1A98604
	public static X9ECParameters GetByName(string name) { }

	// RVA: 0x1A98840 Offset: 0x1A98840 VA: 0x1A98840
	public static X9ECParameters GetByOid(DerObjectIdentifier oid) { }

	// RVA: 0x1A9869C Offset: 0x1A9869C VA: 0x1A9869C
	public static DerObjectIdentifier GetOid(string name) { }

	// RVA: 0x1A989C4 Offset: 0x1A989C4 VA: 0x1A989C4
	public static string GetName(DerObjectIdentifier oid) { }

	// RVA: 0x1A98B18 Offset: 0x1A98B18 VA: 0x1A98B18
	public static IEnumerable get_Names() { }
}

// Namespace: 
internal class AnssiNamedCurves.Frp256v1Holder : X9ECParametersHolder // TypeDefIndex: 4394
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1A98C24 Offset: 0x1A98C24 VA: 0x1A98C24
	private void .ctor() { }

	// RVA: 0x1A98C2C Offset: 0x1A98C2C VA: 0x1A98C2C Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1A98DE8 Offset: 0x1A98DE8 VA: 0x1A98DE8
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1.Anssi
public sealed class AnssiObjectIdentifiers // TypeDefIndex: 4395
{
	// Fields
	public static readonly DerObjectIdentifier FRP256v1; // 0x0

	// Methods

	// RVA: 0x1A98E4C Offset: 0x1A98E4C VA: 0x1A98E4C
	private void .ctor() { }

	// RVA: 0x1A98E54 Offset: 0x1A98E54 VA: 0x1A98E54
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1
public abstract class Asn1Encodable : IAsn1Convertible // TypeDefIndex: 4396
{
	// Fields
	public const string Der = "DER";
	public const string Ber = "BER";

	// Methods

	// RVA: 0x1A98ECC Offset: 0x1A98ECC VA: 0x1A98ECC
	protected void .ctor() { }

	// RVA: 0x1A98ED4 Offset: 0x1A98ED4 VA: 0x1A98ED4
	public byte[] GetEncoded() { }

	// RVA: 0x1A98FA0 Offset: 0x1A98FA0 VA: 0x1A98FA0
	public byte[] GetEncoded(string encoding) { }

	// RVA: 0x1A990A4 Offset: 0x1A990A4 VA: 0x1A990A4
	public byte[] GetDerEncoded() { }

	// RVA: 0x1A9916C Offset: 0x1A9916C VA: 0x1A9916C Slot: 2
	public sealed override int GetHashCode() { }

	// RVA: 0x1A991B4 Offset: 0x1A991B4 VA: 0x1A991B4 Slot: 0
	public sealed override bool Equals(object obj) { }

	// RVA: -1 Offset: -1 Slot: 5
	public abstract Asn1Object ToAsn1Object();
}

// Namespace: Org.BouncyCastle.Asn1
[DefaultMemberAttribute] // RVA: 0xC24C58 Offset: 0xC24C58 VA: 0xC24C58
public class Asn1EncodableVector : IEnumerable // TypeDefIndex: 4397
{
	// Fields
	private IList v; // 0x10

	// Properties
	public Asn1Encodable Item { get; }
	[ObsoleteAttribute] // RVA: 0xCDE750 Offset: 0xCDE750 VA: 0xCDE750
	public int Size { get; }
	public int Count { get; }

	// Methods

	// RVA: 0x1A992E0 Offset: 0x1A992E0 VA: 0x1A992E0
	public void .ctor(Asn1Encodable[] v) { }

	// RVA: 0x1A99488 Offset: 0x1A99488 VA: 0x1A99488
	public static Asn1EncodableVector FromEnumerable(IEnumerable e) { }

	// RVA: 0x1A9936C Offset: 0x1A9936C VA: 0x1A9936C
	public void Add(Asn1Encodable[] objs) { }

	// RVA: 0x1A99858 Offset: 0x1A99858 VA: 0x1A99858
	public void AddOptional(Asn1Encodable[] objs) { }

	// RVA: 0x1A99978 Offset: 0x1A99978 VA: 0x1A99978
	public Asn1Encodable get_Item(int index) { }

	[ObsoleteAttribute] // RVA: 0xCC71D4 Offset: 0xCC71D4 VA: 0xCC71D4
	// RVA: 0x1A99AC4 Offset: 0x1A99AC4 VA: 0x1A99AC4
	public Asn1Encodable Get(int index) { }

	// RVA: 0x1A99AC8 Offset: 0x1A99AC8 VA: 0x1A99AC8
	public int get_Size() { }

	// RVA: 0x1A99B7C Offset: 0x1A99B7C VA: 0x1A99B7C
	public int get_Count() { }

	// RVA: 0x1A99C30 Offset: 0x1A99C30 VA: 0x1A99C30 Slot: 4
	public IEnumerator GetEnumerator() { }
}

// Namespace: Org.BouncyCastle.Asn1
[Serializable]
public class Asn1Exception : IOException // TypeDefIndex: 4398
{
	// Methods

	// RVA: 0x1A99CE4 Offset: 0x1A99CE4 VA: 0x1A99CE4
	public void .ctor() { }

	// RVA: 0x1A99CEC Offset: 0x1A99CEC VA: 0x1A99CEC
	public void .ctor(string message) { }

	// RVA: 0x1A99CF4 Offset: 0x1A99CF4 VA: 0x1A99CF4
	public void .ctor(string message, Exception exception) { }
}

// Namespace: Org.BouncyCastle.Asn1
public abstract class Asn1Generator // TypeDefIndex: 4399
{
	// Fields
	private Stream _out; // 0x10

	// Properties
	protected Stream Out { get; }

	// Methods

	// RVA: 0x1A99CFC Offset: 0x1A99CFC VA: 0x1A99CFC
	protected void .ctor(Stream outStream) { }

	// RVA: 0x1A99D28 Offset: 0x1A99D28 VA: 0x1A99D28
	protected Stream get_Out() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void AddObject(Asn1Encodable obj);

	// RVA: -1 Offset: -1 Slot: 5
	public abstract Stream GetRawOutputStream();

	// RVA: -1 Offset: -1 Slot: 6
	public abstract void Close();
}

// Namespace: Org.BouncyCastle.Asn1
public class Asn1InputStream : FilterStream // TypeDefIndex: 4400
{
	// Fields
	private readonly int limit; // 0x18
	private readonly byte[][] tmpBuffers; // 0x20

	// Methods

	// RVA: 0x1A99D30 Offset: 0x1A99D30 VA: 0x1A99D30
	public void .ctor(Stream inputStream) { }

	// RVA: 0x1A99E48 Offset: 0x1A99E48 VA: 0x1A99E48
	public void .ctor(Stream inputStream, int limit) { }

	// RVA: 0x1A99EC4 Offset: 0x1A99EC4 VA: 0x1A99EC4
	public void .ctor(byte[] input) { }

	// RVA: 0x1A99D64 Offset: 0x1A99D64 VA: 0x1A99D64
	internal static int FindLimit(Stream input) { }

	// RVA: 0x1A99F4C Offset: 0x1A99F4C VA: 0x1A99F4C
	private Asn1Object BuildObject(int tag, int tagNo, int length) { }

	// RVA: 0x1A9B070 Offset: 0x1A9B070 VA: 0x1A9B070
	internal Asn1EncodableVector BuildEncodableVector() { }

	// RVA: 0x1A9B590 Offset: 0x1A9B590 VA: 0x1A9B590 Slot: 29
	internal virtual Asn1EncodableVector BuildDerEncodableVector(DefiniteLengthInputStream dIn) { }

	// RVA: 0x1A9B60C Offset: 0x1A9B60C VA: 0x1A9B60C Slot: 30
	internal virtual DerSequence CreateDerSequence(DefiniteLengthInputStream dIn) { }

	// RVA: 0x1A9B6A0 Offset: 0x1A9B6A0 VA: 0x1A9B6A0 Slot: 31
	internal virtual DerSet CreateDerSet(DefiniteLengthInputStream dIn) { }

	// RVA: 0x1A9B180 Offset: 0x1A9B180 VA: 0x1A9B180
	public Asn1Object ReadObject() { }

	// RVA: 0x1A9B738 Offset: 0x1A9B738 VA: 0x1A9B738
	internal static int ReadTagNumber(Stream s, int tag) { }

	// RVA: 0x1A9B85C Offset: 0x1A9B85C VA: 0x1A9B85C
	internal static int ReadLength(Stream s, int limit) { }

	// RVA: 0x1A9C108 Offset: 0x1A9C108 VA: 0x1A9C108
	internal static byte[] GetBuffer(DefiniteLengthInputStream defIn, byte[][] tmpBuffers) { }

	// RVA: 0x1A9ABE4 Offset: 0x1A9ABE4 VA: 0x1A9ABE4
	internal static Asn1Object CreatePrimitiveDerObject(int tagNo, DefiniteLengthInputStream defIn, byte[][] tmpBuffers) { }
}

// Namespace: Org.BouncyCastle.Asn1
public abstract class Asn1Null : Asn1Object // TypeDefIndex: 4401
{
	// Methods

	// RVA: 0x1A9CB94 Offset: 0x1A9CB94 VA: 0x1A9CB94
	internal void .ctor() { }

	// RVA: 0x1A9CBA4 Offset: 0x1A9CBA4 VA: 0x1A9CBA4 Slot: 3
	public override string ToString() { }
}

// Namespace: Org.BouncyCastle.Asn1
public abstract class Asn1Object : Asn1Encodable // TypeDefIndex: 4402
{
	// Methods

	// RVA: 0x1A9CB9C Offset: 0x1A9CB9C VA: 0x1A9CB9C
	protected void .ctor() { }

	// RVA: 0x1A9CBEC Offset: 0x1A9CBEC VA: 0x1A9CBEC
	public static Asn1Object FromByteArray(byte[] data) { }

	// RVA: 0x1A9CDF8 Offset: 0x1A9CDF8 VA: 0x1A9CDF8
	public static Asn1Object FromStream(Stream inStr) { }

	// RVA: 0x1A9CF2C Offset: 0x1A9CF2C VA: 0x1A9CF2C Slot: 5
	public sealed override Asn1Object ToAsn1Object() { }

	// RVA: -1 Offset: -1 Slot: 6
	internal abstract void Encode(DerOutputStream derOut);

	// RVA: -1 Offset: -1 Slot: 7
	protected abstract bool Asn1Equals(Asn1Object asn1Object);

	// RVA: -1 Offset: -1 Slot: 8
	protected abstract int Asn1GetHashCode();

	// RVA: 0x1A992D4 Offset: 0x1A992D4 VA: 0x1A992D4
	internal bool CallAsn1Equals(Asn1Object obj) { }

	// RVA: 0x1A991A8 Offset: 0x1A991A8 VA: 0x1A991A8
	internal int CallAsn1GetHashCode() { }
}

// Namespace: Org.BouncyCastle.Asn1
public abstract class Asn1OctetString : Asn1Object, Asn1OctetStringParser, IAsn1Convertible // TypeDefIndex: 4403
{
	// Fields
	internal byte[] str; // 0x10

	// Properties
	public Asn1OctetStringParser Parser { get; }

	// Methods

	// RVA: 0x1A9CF30 Offset: 0x1A9CF30 VA: 0x1A9CF30
	internal void .ctor(byte[] str) { }

	// RVA: 0x1A9CFD4 Offset: 0x1A9CFD4 VA: 0x1A9CFD4
	internal void .ctor(Asn1Encodable obj) { }

	// RVA: 0x1A9D15C Offset: 0x1A9D15C VA: 0x1A9D15C
	public static Asn1OctetString GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x1A9D230 Offset: 0x1A9D230 VA: 0x1A9D230
	public static Asn1OctetString GetInstance(object obj) { }

	// RVA: 0x1A9DBD4 Offset: 0x1A9DBD4 VA: 0x1A9DBD4 Slot: 9
	public Stream GetOctetStream() { }

	// RVA: 0x1A9DC40 Offset: 0x1A9DC40 VA: 0x1A9DC40
	public Asn1OctetStringParser get_Parser() { }

	// RVA: 0x1A9DC44 Offset: 0x1A9DC44 VA: 0x1A9DC44 Slot: 10
	public virtual byte[] GetOctets() { }

	// RVA: 0x1A9DC4C Offset: 0x1A9DC4C VA: 0x1A9DC4C Slot: 8
	protected override int Asn1GetHashCode() { }

	// RVA: 0x1A9DC6C Offset: 0x1A9DC6C VA: 0x1A9DC6C Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x1A9DD44 Offset: 0x1A9DD44 VA: 0x1A9DD44 Slot: 3
	public override string ToString() { }
}

// Namespace: Org.BouncyCastle.Asn1
public interface Asn1OctetStringParser : IAsn1Convertible // TypeDefIndex: 4404
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract Stream GetOctetStream();
}

// Namespace: Org.BouncyCastle.Asn1
public class Asn1OutputStream : DerOutputStream // TypeDefIndex: 4405
{
	// Methods

	// RVA: 0x1A98F98 Offset: 0x1A98F98 VA: 0x1A98F98
	public void .ctor(Stream os) { }

	[ObsoleteAttribute] // RVA: 0xCC720C Offset: 0xCC720C VA: 0xCC720C
	// RVA: 0x1A9DDF0 Offset: 0x1A9DDF0 VA: 0x1A9DDF0 Slot: 29
	public override void WriteObject(object obj) { }
}

// Namespace: Org.BouncyCastle.Asn1
[Serializable]
public class Asn1ParsingException : InvalidOperationException // TypeDefIndex: 4406
{
	// Methods

	// RVA: 0x1A9DF28 Offset: 0x1A9DF28 VA: 0x1A9DF28
	public void .ctor() { }

	// RVA: 0x1A9DF30 Offset: 0x1A9DF30 VA: 0x1A9DF30
	public void .ctor(string message) { }

	// RVA: 0x1A9DF38 Offset: 0x1A9DF38 VA: 0x1A9DF38
	public void .ctor(string message, Exception exception) { }
}

// Namespace: Org.BouncyCastle.Asn1
[DefaultMemberAttribute] // RVA: 0xC24C90 Offset: 0xC24C90 VA: 0xC24C90
public abstract class Asn1Sequence : Asn1Object, IEnumerable // TypeDefIndex: 4407
{
	// Fields
	private readonly IList seq; // 0x10

	// Properties
	public virtual Asn1SequenceParser Parser { get; }
	public virtual Asn1Encodable Item { get; }
	[ObsoleteAttribute] // RVA: 0xCDE788 Offset: 0xCDE788 VA: 0xCDE788
	public int Size { get; }
	public virtual int Count { get; }

	// Methods

	// RVA: 0x1A9DF40 Offset: 0x1A9DF40 VA: 0x1A9DF40
	protected internal void .ctor(int capacity) { }

	// RVA: 0x1A9D3A4 Offset: 0x1A9D3A4 VA: 0x1A9D3A4
	public static Asn1Sequence GetInstance(object obj) { }

	// RVA: 0x1A9DFC8 Offset: 0x1A9DFC8 VA: 0x1A9DFC8
	public static Asn1Sequence GetInstance(Asn1TaggedObject obj, bool explicitly) { }

	// RVA: 0x1A9E304 Offset: 0x1A9E304 VA: 0x1A9E304 Slot: 10
	public virtual IEnumerator GetEnumerator() { }

	[ObsoleteAttribute] // RVA: 0xCC7244 Offset: 0xCC7244 VA: 0xCC7244
	// RVA: 0x1A9E3B8 Offset: 0x1A9E3B8 VA: 0x1A9E3B8
	public IEnumerator GetObjects() { }

	// RVA: 0x1A9E3C4 Offset: 0x1A9E3C4 VA: 0x1A9E3C4 Slot: 11
	public virtual Asn1SequenceParser get_Parser() { }

	// RVA: 0x1A9E470 Offset: 0x1A9E470 VA: 0x1A9E470 Slot: 12
	public virtual Asn1Encodable get_Item(int index) { }

	[ObsoleteAttribute] // RVA: 0xCC727C Offset: 0xCC727C VA: 0xCC727C
	// RVA: 0x1A9E5BC Offset: 0x1A9E5BC VA: 0x1A9E5BC
	public Asn1Encodable GetObjectAt(int index) { }

	// RVA: 0x1A9E5C8 Offset: 0x1A9E5C8 VA: 0x1A9E5C8
	public int get_Size() { }

	// RVA: 0x1A9E5D4 Offset: 0x1A9E5D4 VA: 0x1A9E5D4 Slot: 13
	public virtual int get_Count() { }

	// RVA: 0x1A9E688 Offset: 0x1A9E688 VA: 0x1A9E688 Slot: 8
	protected override int Asn1GetHashCode() { }

	// RVA: 0x1A9E924 Offset: 0x1A9E924 VA: 0x1A9E924 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x1A9EB90 Offset: 0x1A9EB90 VA: 0x1A9EB90
	private Asn1Encodable GetCurrent(IEnumerator e) { }

	// RVA: 0x1A9ECF4 Offset: 0x1A9ECF4 VA: 0x1A9ECF4
	protected internal void AddObject(Asn1Encodable obj) { }

	// RVA: 0x1A9EDBC Offset: 0x1A9EDBC VA: 0x1A9EDBC Slot: 3
	public override string ToString() { }
}

// Namespace: 
private class Asn1Sequence.Asn1SequenceParserImpl : Asn1SequenceParser, IAsn1Convertible // TypeDefIndex: 4408
{
	// Fields
	private readonly Asn1Sequence outer; // 0x10
	private readonly int max; // 0x18
	private int index; // 0x1C

	// Methods

	// RVA: 0x1A9E424 Offset: 0x1A9E424 VA: 0x1A9E424
	public void .ctor(Asn1Sequence outer) { }

	// RVA: 0x1A9EDC8 Offset: 0x1A9EDC8 VA: 0x1A9EDC8 Slot: 4
	public IAsn1Convertible ReadObject() { }

	// RVA: 0x1A9EF24 Offset: 0x1A9EF24 VA: 0x1A9EF24 Slot: 5
	public Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1
public interface Asn1SequenceParser : IAsn1Convertible // TypeDefIndex: 4409
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract IAsn1Convertible ReadObject();
}

// Namespace: Org.BouncyCastle.Asn1
[DefaultMemberAttribute] // RVA: 0xC24CC8 Offset: 0xC24CC8 VA: 0xC24CC8
public abstract class Asn1Set : Asn1Object, IEnumerable // TypeDefIndex: 4410
{
	// Fields
	private readonly IList _set; // 0x10

	// Properties
	public virtual Asn1Encodable Item { get; }
	[ObsoleteAttribute] // RVA: 0xCDE7C0 Offset: 0xCDE7C0 VA: 0xCDE7C0
	public int Size { get; }
	public virtual int Count { get; }
	public Asn1SetParser Parser { get; }

	// Methods

	// RVA: 0x1A9EF2C Offset: 0x1A9EF2C VA: 0x1A9EF2C
	protected internal void .ctor(int capacity) { }

	// RVA: 0x1A9EFB4 Offset: 0x1A9EFB4 VA: 0x1A9EFB4
	public static Asn1Set GetInstance(object obj) { }

	// RVA: 0x1A9F448 Offset: 0x1A9F448 VA: 0x1A9F448
	public static Asn1Set GetInstance(Asn1TaggedObject obj, bool explicitly) { }

	// RVA: 0x1A9FA90 Offset: 0x1A9FA90 VA: 0x1A9FA90 Slot: 10
	public virtual IEnumerator GetEnumerator() { }

	[ObsoleteAttribute] // RVA: 0xCC72B4 Offset: 0xCC72B4 VA: 0xCC72B4
	// RVA: 0x1A9FB44 Offset: 0x1A9FB44 VA: 0x1A9FB44
	public IEnumerator GetObjects() { }

	// RVA: 0x1A9FB50 Offset: 0x1A9FB50 VA: 0x1A9FB50 Slot: 11
	public virtual Asn1Encodable get_Item(int index) { }

	[ObsoleteAttribute] // RVA: 0xCC72EC Offset: 0xCC72EC VA: 0xCC72EC
	// RVA: 0x1A9FC9C Offset: 0x1A9FC9C VA: 0x1A9FC9C
	public Asn1Encodable GetObjectAt(int index) { }

	// RVA: 0x1A9FCA8 Offset: 0x1A9FCA8 VA: 0x1A9FCA8
	public int get_Size() { }

	// RVA: 0x1A9FCB4 Offset: 0x1A9FCB4 VA: 0x1A9FCB4 Slot: 12
	public virtual int get_Count() { }

	// RVA: 0x1A9FD68 Offset: 0x1A9FD68 VA: 0x1A9FD68 Slot: 13
	public virtual Asn1Encodable[] ToArray() { }

	// RVA: 0x1A9EEC4 Offset: 0x1A9EEC4 VA: 0x1A9EEC4
	public Asn1SetParser get_Parser() { }

	// RVA: 0x1A9FEE8 Offset: 0x1A9FEE8 VA: 0x1A9FEE8 Slot: 8
	protected override int Asn1GetHashCode() { }

	// RVA: 0x1AA0184 Offset: 0x1AA0184 VA: 0x1AA0184 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x1AA03F0 Offset: 0x1AA03F0 VA: 0x1AA03F0
	private Asn1Encodable GetCurrent(IEnumerator e) { }

	// RVA: 0x1AA0554 Offset: 0x1AA0554 VA: 0x1AA0554
	protected internal void Sort() { }

	// RVA: 0x1AA0B30 Offset: 0x1AA0B30 VA: 0x1AA0B30
	protected internal void AddObject(Asn1Encodable obj) { }

	// RVA: 0x1AA0BF8 Offset: 0x1AA0BF8 VA: 0x1AA0BF8 Slot: 3
	public override string ToString() { }
}

// Namespace: 
private class Asn1Set.Asn1SetParserImpl : Asn1SetParser, IAsn1Convertible // TypeDefIndex: 4411
{
	// Fields
	private readonly Asn1Set outer; // 0x10
	private readonly int max; // 0x18
	private int index; // 0x1C

	// Methods

	// RVA: 0x1A9FE9C Offset: 0x1A9FE9C VA: 0x1A9FE9C
	public void .ctor(Asn1Set outer) { }

	// RVA: 0x1AA0C04 Offset: 0x1AA0C04 VA: 0x1AA0C04 Slot: 4
	public IAsn1Convertible ReadObject() { }

	// RVA: 0x1AA0D00 Offset: 0x1AA0D00 VA: 0x1AA0D00 Slot: 6
	public virtual Asn1Object ToAsn1Object() { }
}

// Namespace: 
private class Asn1Set.DerComparer : IComparer // TypeDefIndex: 4412
{
	// Methods

	// RVA: 0x1AA0B28 Offset: 0x1AA0B28 VA: 0x1AA0B28
	public void .ctor() { }

	// RVA: 0x1AA0D08 Offset: 0x1AA0D08 VA: 0x1AA0D08 Slot: 4
	public int Compare(object x, object y) { }

	// RVA: 0x1AA0F44 Offset: 0x1AA0F44 VA: 0x1AA0F44
	private bool AllZeroesFrom(byte[] bs, int pos) { }
}

// Namespace: Org.BouncyCastle.Asn1
public interface Asn1SetParser : IAsn1Convertible // TypeDefIndex: 4413
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract IAsn1Convertible ReadObject();
}

// Namespace: Org.BouncyCastle.Asn1
public class Asn1StreamParser // TypeDefIndex: 4414
{
	// Fields
	private readonly Stream _in; // 0x10
	private readonly int _limit; // 0x18
	private readonly byte[][] tmpBuffers; // 0x20

	// Methods

	// RVA: 0x1A9A658 Offset: 0x1A9A658 VA: 0x1A9A658
	public void .ctor(Stream inStream) { }

	// RVA: 0x1A9BA74 Offset: 0x1A9BA74 VA: 0x1A9BA74
	public void .ctor(Stream inStream, int limit) { }

	// RVA: 0x1AA0FC0 Offset: 0x1AA0FC0 VA: 0x1AA0FC0
	public void .ctor(byte[] encoding) { }

	// RVA: 0x1AA1048 Offset: 0x1AA1048 VA: 0x1AA1048
	internal IAsn1Convertible ReadIndef(int tagValue) { }

	// RVA: 0x1AA11A4 Offset: 0x1AA11A4 VA: 0x1AA11A4
	internal IAsn1Convertible ReadImplicit(bool constructed, int tag) { }

	// RVA: 0x1A9A68C Offset: 0x1A9A68C VA: 0x1A9A68C
	internal Asn1Object ReadTaggedObject(bool constructed, int tag) { }

	// RVA: 0x1AA1694 Offset: 0x1AA1694 VA: 0x1AA1694 Slot: 4
	public virtual IAsn1Convertible ReadObject() { }

	// RVA: 0x1AA1C10 Offset: 0x1AA1C10 VA: 0x1AA1C10
	private void Set00Check(bool enabled) { }

	// RVA: 0x1AA1438 Offset: 0x1AA1438 VA: 0x1AA1438
	internal Asn1EncodableVector ReadVector() { }
}

// Namespace: Org.BouncyCastle.Asn1
public abstract class Asn1TaggedObject : Asn1Object, Asn1TaggedObjectParser, IAsn1Convertible // TypeDefIndex: 4415
{
	// Fields
	internal int tagNo; // 0x10
	internal bool explicitly; // 0x14
	internal Asn1Encodable obj; // 0x18

	// Properties
	public int TagNo { get; }

	// Methods

	// RVA: 0x1AA1CA4 Offset: 0x1AA1CA4 VA: 0x1AA1CA4
	protected void .ctor(int tagNo, Asn1Encodable obj) { }

	// RVA: 0x1AA1CEC Offset: 0x1AA1CEC VA: 0x1AA1CEC
	protected void .ctor(bool explicitly, int tagNo, Asn1Encodable obj) { }

	// RVA: 0x1AA1D88 Offset: 0x1AA1D88 VA: 0x1AA1D88
	internal static bool IsConstructed(bool isExplicit, Asn1Object obj) { }

	// RVA: 0x1AA1EDC Offset: 0x1AA1EDC VA: 0x1AA1EDC
	public static Asn1TaggedObject GetInstance(Asn1TaggedObject obj, bool explicitly) { }

	// RVA: 0x1AA2010 Offset: 0x1AA2010 VA: 0x1AA2010
	public static Asn1TaggedObject GetInstance(object obj) { }

	// RVA: 0x1AA2148 Offset: 0x1AA2148 VA: 0x1AA2148 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x1AA2268 Offset: 0x1AA2268 VA: 0x1AA2268 Slot: 8
	protected override int Asn1GetHashCode() { }

	// RVA: 0x1AA22B4 Offset: 0x1AA22B4 VA: 0x1AA22B4 Slot: 9
	public int get_TagNo() { }

	// RVA: 0x1A9E284 Offset: 0x1A9E284 VA: 0x1A9E284
	public bool IsExplicit() { }

	// RVA: 0x1AA22BC Offset: 0x1AA22BC VA: 0x1AA22BC
	public bool IsEmpty() { }

	// RVA: 0x1A9D218 Offset: 0x1A9D218 VA: 0x1A9D218
	public Asn1Object GetObject() { }

	// RVA: 0x1AA22C4 Offset: 0x1AA22C4 VA: 0x1AA22C4 Slot: 10
	public IAsn1Convertible GetObjectParser(int tag, bool isExplicit) { }

	// RVA: 0x1AA2484 Offset: 0x1AA2484 VA: 0x1AA2484 Slot: 3
	public override string ToString() { }
}

// Namespace: Org.BouncyCastle.Asn1
public interface Asn1TaggedObjectParser : IAsn1Convertible // TypeDefIndex: 4416
{
	// Properties
	public abstract int TagNo { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract int get_TagNo();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract IAsn1Convertible GetObjectParser(int tag, bool isExplicit);
}

// Namespace: Org.BouncyCastle.Asn1
public class Asn1Tags // TypeDefIndex: 4417
{
	// Fields
	public const int Boolean = 1;
	public const int Integer = 2;
	public const int BitString = 3;
	public const int OctetString = 4;
	public const int Null = 5;
	public const int ObjectIdentifier = 6;
	public const int External = 8;
	public const int Enumerated = 10;
	public const int Sequence = 16;
	public const int SequenceOf = 16;
	public const int Set = 17;
	public const int SetOf = 17;
	public const int NumericString = 18;
	public const int PrintableString = 19;
	public const int T61String = 20;
	public const int VideotexString = 21;
	public const int IA5String = 22;
	public const int UtcTime = 23;
	public const int GeneralizedTime = 24;
	public const int GraphicString = 25;
	public const int VisibleString = 26;
	public const int GeneralString = 27;
	public const int UniversalString = 28;
	public const int BmpString = 30;
	public const int Utf8String = 12;
	public const int Constructed = 32;
	public const int Application = 64;
	public const int Tagged = 128;

	// Methods

	// RVA: 0x1AA2670 Offset: 0x1AA2670 VA: 0x1AA2670
	public void .ctor() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class BerApplicationSpecific : DerApplicationSpecific // TypeDefIndex: 4418
{
	// Methods

	// RVA: 0x1AA2678 Offset: 0x1AA2678 VA: 0x1AA2678
	public void .ctor(int tagNo, Asn1EncodableVector vec) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class BerApplicationSpecificParser : IAsn1ApplicationSpecificParser, IAsn1Convertible // TypeDefIndex: 4419
{
	// Fields
	private readonly int tag; // 0x10
	private readonly Asn1StreamParser parser; // 0x18

	// Methods

	// RVA: 0x1A9BB60 Offset: 0x1A9BB60 VA: 0x1A9BB60
	internal void .ctor(int tag, Asn1StreamParser parser) { }

	// RVA: 0x1AA287C Offset: 0x1AA287C VA: 0x1AA287C Slot: 4
	public IAsn1Convertible ReadObject() { }

	// RVA: 0x1A9BB9C Offset: 0x1A9BB9C VA: 0x1A9BB9C Slot: 5
	public Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class BerBitString : DerBitString // TypeDefIndex: 4420
{
	// Methods

	// RVA: 0x1AA28B0 Offset: 0x1AA28B0 VA: 0x1AA28B0
	public void .ctor(byte[] data, int padBits) { }

	// RVA: 0x1AA2A5C Offset: 0x1AA2A5C VA: 0x1AA2A5C
	public void .ctor(byte[] data) { }

	// RVA: 0x1AA2ADC Offset: 0x1AA2ADC VA: 0x1AA2ADC
	public void .ctor(int namedBits) { }

	// RVA: 0x1AA2CC4 Offset: 0x1AA2CC4 VA: 0x1AA2CC4
	public void .ctor(Asn1Encodable obj) { }

	// RVA: 0x1AA2D78 Offset: 0x1AA2D78 VA: 0x1AA2D78 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class BerGenerator : Asn1Generator // TypeDefIndex: 4421
{
	// Fields
	private bool _tagged; // 0x18
	private bool _isExplicit; // 0x19
	private int _tagNo; // 0x1C

	// Methods

	// RVA: 0x1AA2F98 Offset: 0x1AA2F98 VA: 0x1AA2F98
	protected void .ctor(Stream outStream) { }

	// RVA: 0x1AA2FC4 Offset: 0x1AA2FC4 VA: 0x1AA2FC4
	public void .ctor(Stream outStream, int tagNo, bool isExplicit) { }

	// RVA: 0x1AA3014 Offset: 0x1AA3014 VA: 0x1AA3014 Slot: 4
	public override void AddObject(Asn1Encodable obj) { }

	// RVA: 0x1AA30AC Offset: 0x1AA30AC VA: 0x1AA30AC Slot: 5
	public override Stream GetRawOutputStream() { }

	// RVA: 0x1AA30B4 Offset: 0x1AA30B4 VA: 0x1AA30B4 Slot: 6
	public override void Close() { }

	// RVA: 0x1AA318C Offset: 0x1AA318C VA: 0x1AA318C
	private void WriteHdr(int tag) { }

	// RVA: 0x1AA3200 Offset: 0x1AA3200 VA: 0x1AA3200
	protected void WriteBerHeader(int tag) { }

	// RVA: 0x1AA3268 Offset: 0x1AA3268 VA: 0x1AA3268
	protected void WriteBerBody(Stream contentStream) { }

	// RVA: 0x1AA30B8 Offset: 0x1AA30B8 VA: 0x1AA30B8
	protected void WriteBerEnd() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class BerOctetString : DerOctetString, IEnumerable // TypeDefIndex: 4422
{
	// Fields
	private const int MaxLength = 1000;
	private readonly IEnumerable octs; // 0x18

	// Methods

	// RVA: 0x1AA327C Offset: 0x1AA327C VA: 0x1AA327C
	public void .ctor(byte[] str) { }

	// RVA: 0x1A9A91C Offset: 0x1A9A91C VA: 0x1A9A91C
	public void .ctor(IEnumerable octets) { }

	// RVA: 0x1AA3634 Offset: 0x1AA3634 VA: 0x1AA3634
	public void .ctor(Asn1Object obj) { }

	// RVA: 0x1AA363C Offset: 0x1AA363C VA: 0x1AA363C
	public void .ctor(Asn1Encodable obj) { }

	// RVA: 0x1A9D838 Offset: 0x1A9D838 VA: 0x1A9D838
	public static BerOctetString FromSequence(Asn1Sequence seq) { }

	// RVA: 0x1AA3284 Offset: 0x1AA3284 VA: 0x1AA3284
	private static byte[] ToBytes(IEnumerable octs) { }

	// RVA: 0x1AA3684 Offset: 0x1AA3684 VA: 0x1AA3684 Slot: 10
	public override byte[] GetOctets() { }

	// RVA: 0x1AA368C Offset: 0x1AA368C VA: 0x1AA368C Slot: 11
	public IEnumerator GetEnumerator() { }

	[ObsoleteAttribute] // RVA: 0xCC7324 Offset: 0xCC7324 VA: 0xCC7324
	// RVA: 0x1AA3908 Offset: 0x1AA3908 VA: 0x1AA3908
	public IEnumerator GetObjects() { }

	// RVA: 0x1AA374C Offset: 0x1AA374C VA: 0x1AA374C
	private IList GenerateOcts() { }

	// RVA: 0x1AA390C Offset: 0x1AA390C VA: 0x1AA390C Slot: 6
	internal override void Encode(DerOutputStream derOut) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class BerOctetStringParser : Asn1OctetStringParser, IAsn1Convertible // TypeDefIndex: 4423
{
	// Fields
	private readonly Asn1StreamParser _parser; // 0x10

	// Methods

	// RVA: 0x1A9BDB4 Offset: 0x1A9BDB4 VA: 0x1A9BDB4
	internal void .ctor(Asn1StreamParser parser) { }

	// RVA: 0x1AA3CAC Offset: 0x1AA3CAC VA: 0x1AA3CAC Slot: 4
	public Stream GetOctetStream() { }

	// RVA: 0x1A9BDE0 Offset: 0x1A9BDE0 VA: 0x1A9BDE0 Slot: 5
	public Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class BerOutputStream : DerOutputStream // TypeDefIndex: 4424
{
	// Methods

	// RVA: 0x1AA30A4 Offset: 0x1AA30A4 VA: 0x1AA30A4
	public void .ctor(Stream os) { }

	[ObsoleteAttribute] // RVA: 0xCC735C Offset: 0xCC735C VA: 0xCC735C
	// RVA: 0x1AA3D50 Offset: 0x1AA3D50 VA: 0x1AA3D50 Slot: 29
	public override void WriteObject(object obj) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class BerSequence : DerSequence // TypeDefIndex: 4425
{
	// Fields
	public static readonly BerSequence Empty; // 0x0

	// Methods

	// RVA: 0x1AA3E88 Offset: 0x1AA3E88 VA: 0x1AA3E88
	public void .ctor() { }

	// RVA: 0x1A9E28C Offset: 0x1A9E28C VA: 0x1A9E28C
	public void .ctor(Asn1Encodable obj) { }

	// RVA: 0x1AA3EF0 Offset: 0x1AA3EF0 VA: 0x1AA3EF0
	public void .ctor(Asn1Encodable[] v) { }

	// RVA: 0x1AA3F68 Offset: 0x1AA3F68 VA: 0x1AA3F68
	public void .ctor(Asn1EncodableVector v) { }

	// RVA: 0x1AA15EC Offset: 0x1AA15EC VA: 0x1AA15EC
	public static BerSequence FromVector(Asn1EncodableVector v) { }

	// RVA: 0x1AA3FE0 Offset: 0x1AA3FE0 VA: 0x1AA3FE0 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x1AA4388 Offset: 0x1AA4388 VA: 0x1AA4388
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class BerSequenceGenerator : BerGenerator // TypeDefIndex: 4426
{
	// Methods

	// RVA: 0x1AA43E8 Offset: 0x1AA43E8 VA: 0x1AA43E8
	public void .ctor(Stream outStream) { }

	// RVA: 0x1AA441C Offset: 0x1AA441C VA: 0x1AA441C
	public void .ctor(Stream outStream, int tagNo, bool isExplicit) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class BerSequenceParser : Asn1SequenceParser, IAsn1Convertible // TypeDefIndex: 4427
{
	// Fields
	private readonly Asn1StreamParser _parser; // 0x10

	// Methods

	// RVA: 0x1A9BF80 Offset: 0x1A9BF80 VA: 0x1A9BF80
	internal void .ctor(Asn1StreamParser parser) { }

	// RVA: 0x1AA4474 Offset: 0x1AA4474 VA: 0x1AA4474 Slot: 4
	public IAsn1Convertible ReadObject() { }
