
	// RVA: 0x2038554 Offset: 0x2038554 VA: 0x2038554
	public UserAccessaryEntity GetEntity(long userId, int accessaryId) { }

	// RVA: 0x20385C8 Offset: 0x20385C8 VA: 0x20385C8
	public bool TryGetEntity(out UserAccessaryEntity entity, long userId, int accessaryId) { }
}

// Namespace: 
public class UserBlacklistEntity : DataEntityBase<string> // TypeDefIndex: 7368
{
	// Fields
	public long userId; // 0x10
	public long targetUserId; // 0x18
	public long createdAt; // 0x20

	// Methods

	// RVA: 0x203864C Offset: 0x203864C VA: 0x203864C
	public void .ctor() { }

	// RVA: 0x203869C Offset: 0x203869C VA: 0x203869C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x20386AC Offset: 0x20386AC VA: 0x20386AC
	public static string CreatePK(long userId, long targetUserId) { }

	// RVA: 0x20386B4 Offset: 0x20386B4 VA: 0x20386B4
	public long getOtherUserId() { }
}

// Namespace: 
public class UserBlacklistMaster : DataMasterBase<UserBlacklistMaster, UserBlacklistEntity, string> // TypeDefIndex: 7369
{
	// Methods

	// RVA: 0x203873C Offset: 0x203873C VA: 0x203873C
	public void .ctor() { }

	// RVA: 0x2038790 Offset: 0x2038790 VA: 0x2038790
	public UserBlacklistEntity GetEntity(long userId, long targetUserId) { }

	// RVA: 0x2038804 Offset: 0x2038804 VA: 0x2038804
	public bool TryGetEntity(out UserBlacklistEntity entity, long userId, long targetUserId) { }
}

// Namespace: 
public class UserBoxGachaEntity : DataEntityBase<string> // TypeDefIndex: 7370
{
	// Fields
	public long userId; // 0x10
	public int boxGachaId; // 0x18
	public int resetNum; // 0x1C
	public int drawNum; // 0x20
	public bool isReset; // 0x24
	public int boxIndex; // 0x28
	public Dictionary<string, object> script; // 0x30

	// Methods

	// RVA: 0x2038888 Offset: 0x2038888 VA: 0x2038888
	public void .ctor() { }

	// RVA: 0x20388D8 Offset: 0x20388D8 VA: 0x20388D8
	public List<int> GetReplaceGiftIdList() { }

	// RVA: 0x2038AF0 Offset: 0x2038AF0 VA: 0x2038AF0 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x2038B04 Offset: 0x2038B04 VA: 0x2038B04
	public static string CreatePK(long userId, int boxGachaId) { }
}

// Namespace: 
public class UserBoxGachaMaster : DataMasterBase<UserBoxGachaMaster, UserBoxGachaEntity, string> // TypeDefIndex: 7371
{
	// Methods

	// RVA: 0x2038B10 Offset: 0x2038B10 VA: 0x2038B10
	public void .ctor() { }

	// RVA: 0x2038B64 Offset: 0x2038B64 VA: 0x2038B64
	public UserBoxGachaEntity GetEntity(long userId, int boxGachaId) { }

	// RVA: 0x2038BD8 Offset: 0x2038BD8 VA: 0x2038BD8
	public bool TryGetEntity(out UserBoxGachaEntity entity, long userId, int boxGachaId) { }
}

// Namespace: 
public class UserCoinRoomEntity : DataEntityBase<long> // TypeDefIndex: 7372
{
	// Fields
	public long userId; // 0x10
	public int cnt; // 0x18
	public int num; // 0x1C
	public int totalNnum; // 0x20
	public long updatedAt; // 0x28
	public long createdAt; // 0x30

	// Methods

	// RVA: 0x2038C5C Offset: 0x2038C5C VA: 0x2038C5C
	public void .ctor() { }

	// RVA: 0x2038CAC Offset: 0x2038CAC VA: 0x2038CAC Slot: 5
	protected sealed override long CreatePrimaryKey() { }
}

// Namespace: 
public class UserCoinRoomMaster : DataMasterBase<UserCoinRoomMaster, UserCoinRoomEntity, long> // TypeDefIndex: 7373
{
	// Methods

	// RVA: 0x2038CB4 Offset: 0x2038CB4 VA: 0x2038CB4
	public void .ctor() { }
}

// Namespace: 
public class UserCombineExpEntity : DataEntityBase<string> // TypeDefIndex: 7374
{
	// Fields
	public long[] presentIds; // 0x10
	public ObscuredLong[] userSvtIds; // 0x18

	// Methods

	// RVA: 0x2038D08 Offset: 0x2038D08 VA: 0x2038D08
	public void .ctor() { }

	// RVA: 0x2038D58 Offset: 0x2038D58 VA: 0x2038D58 Slot: 5
	protected sealed override string CreatePrimaryKey() { }
}

// Namespace: 
public class UserCombineExpMaster : DataMasterBase<UserCombineExpMaster, UserCombineExpEntity, string> // TypeDefIndex: 7375
{
	// Methods

	// RVA: 0x2038DC0 Offset: 0x2038DC0 VA: 0x2038DC0
	public void .ctor() { }

	// RVA: 0x2038E14 Offset: 0x2038E14 VA: 0x2038E14
	public ObscuredLong GetUserSvtId() { }
}

// Namespace: 
public class UserCommandCodeCollectionEntity : DataEntityBase<string> // TypeDefIndex: 7376
{
	// Fields
	public long userId; // 0x10
	public ObscuredInt commandCodeId; // 0x18
	public int status; // 0x28
	public int getNum; // 0x2C
	public long createdAt; // 0x30

	// Methods

	// RVA: 0x2039010 Offset: 0x2039010 VA: 0x2039010
	public void .ctor() { }

	// RVA: 0x2039060 Offset: 0x2039060 VA: 0x2039060
	public void .ctor(UserCommandCodeCollectionEntity e) { }

	// RVA: 0x2039144 Offset: 0x2039144 VA: 0x2039144
	public void .ctor(long userId, int commandCodeId) { }

	// RVA: 0x20391E0 Offset: 0x20391E0 VA: 0x20391E0 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x203926C Offset: 0x203926C VA: 0x203926C
	public static string CreatePK(long userId, int commandCodeId) { }

	// RVA: 0x2039278 Offset: 0x2039278 VA: 0x2039278
	public long GetUserId() { }

	// RVA: 0x2039280 Offset: 0x2039280 VA: 0x2039280
	public int GetCommandCodeId() { }

	// RVA: 0x20392F0 Offset: 0x20392F0 VA: 0x20392F0
	public bool IsFinded() { }

	// RVA: 0x2039300 Offset: 0x2039300 VA: 0x2039300
	public bool IsGet() { }

	// RVA: 0x2039310 Offset: 0x2039310 VA: 0x2039310
	public bool IsNew() { }

	// RVA: 0x2039510 Offset: 0x2039510 VA: 0x2039510
	public void SetOld() { }

	// RVA: 0x2039768 Offset: 0x2039768 VA: 0x2039768
	public void GetSkillInfo(out int[] idList, out string[] titleList, out string[] explanationList) { }
}

// Namespace: 
public class UserCommandCodeCollectionMaster : DataMasterBase<UserCommandCodeCollectionMaster, UserCommandCodeCollectionEntity, string> // TypeDefIndex: 7377
{
	// Methods

	// RVA: 0x203A980 Offset: 0x203A980 VA: 0x203A980
	public void .ctor() { }

	// RVA: 0x203A9D4 Offset: 0x203A9D4 VA: 0x203A9D4
	public UserCommandCodeCollectionEntity GetEntity(long userId, int commandCodeId) { }

	// RVA: 0x203AA48 Offset: 0x203AA48 VA: 0x203AA48
	public bool TryGetEntity(out UserCommandCodeCollectionEntity entity, long userId, int commandCodeId) { }

	// RVA: 0x203AACC Offset: 0x203AACC VA: 0x203AACC
	public UserCommandCodeCollectionEntity getEntityFromId(long userId, int svtId) { }

	// RVA: 0x203AC58 Offset: 0x203AC58 VA: 0x203AC58
	public UserCommandCodeCollectionEntity[] getList(CollectionStatus.Kind kind) { }

	// RVA: 0x203AF24 Offset: 0x203AF24 VA: 0x203AF24
	public UserCommandCodeCollectionEntity[] getCollectionList(out int getSum, out int findSum) { }

	// RVA: 0x203B2B8 Offset: 0x203B2B8 VA: 0x203B2B8
	public bool IsNew(int commandCodeId) { }

	// RVA: 0x203B420 Offset: 0x203B420 VA: 0x203B420
	public int[] GetNewList() { }

	// RVA: 0x203A4C4 Offset: 0x203A4C4 VA: 0x203A4C4
	public void continueDeviceUserCommandCodeCollection() { }

	// RVA: 0x203B5CC Offset: 0x203B5CC VA: 0x203B5CC
	public int[] getCommandCodeIdList(long userId, int svtId) { }
}

// Namespace: 
public class UserCommandCodeEntity : DataEntityBase<long> // TypeDefIndex: 7378
{
	// Fields
	public ObscuredLong id; // 0x10
	public ObscuredLong userId; // 0x30
	public ObscuredInt commandCodeId; // 0x50
	public int status; // 0x60
	public long createdAt; // 0x68

	// Methods

	// RVA: 0x203B668 Offset: 0x203B668 VA: 0x203B668
	public void .ctor() { }

	// RVA: 0x203B6B8 Offset: 0x203B6B8 VA: 0x203B6B8
	public void .ctor(UserCommandCodeEntity e) { }

	// RVA: 0x203B794 Offset: 0x203B794 VA: 0x203B794 Slot: 5
	protected sealed override long CreatePrimaryKey() { }

	// RVA: 0x203B820 Offset: 0x203B820 VA: 0x203B820
	public int[] GetCategoryIdList() { }

	// RVA: 0x203BF18 Offset: 0x203BF18 VA: 0x203BF18
	public void GetSkillInfo(out int[] idList, out string[] titleList, out string[] explanationList) { }

	// RVA: 0x203C02C Offset: 0x203C02C VA: 0x203C02C
	public bool HasStatus(UserCommandCodeEntity.StatusFlag statusFlag) { }

	// RVA: 0x203C03C Offset: 0x203C03C VA: 0x203C03C
	public bool IsLock() { }

	// RVA: 0x203C048 Offset: 0x203C048 VA: 0x203C048
	public bool IsModifyLock(bool isLock) { }

	// RVA: 0x203C058 Offset: 0x203C058 VA: 0x203C058
	public bool IsChoice() { }

	// RVA: 0x203C064 Offset: 0x203C064 VA: 0x203C064
	public bool IsModifyChoice(bool isChoice) { }

	// RVA: 0x203C074 Offset: 0x203C074 VA: 0x203C074
	public bool IsNew() { }

	// RVA: 0x203C1BC Offset: 0x203C1BC VA: 0x203C1BC
	public void SetOld() { }

	// RVA: 0x203C27C Offset: 0x203C27C VA: 0x203C27C
	public int GetRarity() { }

	// RVA: 0x203C36C Offset: 0x203C36C VA: 0x203C36C
	public int GetSellQp() { }

	// RVA: 0x203C454 Offset: 0x203C454 VA: 0x203C454
	public int GetSellMana() { }

	// RVA: 0x203C53C Offset: 0x203C53C VA: 0x203C53C
	public int GetSellRarePri() { }
}

// Namespace: 
public enum UserCommandCodeEntity.StatusKind // TypeDefIndex: 7379
{
	// Fields
	public int value__; // 0x0
	public const UserCommandCodeEntity.StatusKind LOCK = 0;
	public const UserCommandCodeEntity.StatusKind CHOICE = 4;
}

// Namespace: 
public enum UserCommandCodeEntity.StatusFlag // TypeDefIndex: 7380
{
	// Fields
	public int value__; // 0x0
	public const UserCommandCodeEntity.StatusFlag LOCK = 1;
	public const UserCommandCodeEntity.StatusFlag CHOICE = 16;
}

// Namespace: 
public class UserCommandCodeMaster : DataMasterBase<UserCommandCodeMaster, UserCommandCodeEntity, long> // TypeDefIndex: 7381
{
	// Methods

	// RVA: 0x203C624 Offset: 0x203C624 VA: 0x203C624
	public void .ctor() { }

	// RVA: 0x203C678 Offset: 0x203C678 VA: 0x203C678
	public UserCommandCodeEntity[] getList() { }

	// RVA: 0x203C7DC Offset: 0x203C7DC VA: 0x203C7DC
	public int getCount() { }

	// RVA: 0x203C8E4 Offset: 0x203C8E4 VA: 0x203C8E4
	public bool CheckCommandCodeAdd(int count) { }

	// RVA: 0x203C930 Offset: 0x203C930 VA: 0x203C930
	public void continueDeviceUserCommandCode() { }
}

// Namespace: 
public class UserContinueEntity : DataEntityBase<long> // TypeDefIndex: 7382
{
	// Fields
	public long userId; // 0x10
	public int isDel; // 0x18
	public string continueKey; // 0x20
	public long remakeAt; // 0x28

	// Methods

	// RVA: 0x1BD95C8 Offset: 0x1BD95C8 VA: 0x1BD95C8
	public void .ctor() { }

	// RVA: 0x1BD9618 Offset: 0x1BD9618 VA: 0x1BD9618 Slot: 5
	protected sealed override long CreatePrimaryKey() { }
}

// Namespace: 
public class UserContinueMaster : DataMasterBase<UserContinueMaster, UserContinueEntity, long> // TypeDefIndex: 7383
{
	// Methods

	// RVA: 0x1BD9620 Offset: 0x1BD9620 VA: 0x1BD9620
	public void .ctor() { }
}

// Namespace: 
public class UserDeckEntity : DataEntityBase<long> // TypeDefIndex: 7384
{
	// Fields
	public long id; // 0x10
	public long userId; // 0x18
	public int deckNo; // 0x20
	public string name; // 0x28
	public DeckServant deckInfo; // 0x30
	public int cost; // 0x38

	// Methods

	// RVA: 0x1BD9674 Offset: 0x1BD9674 VA: 0x1BD9674
	public void .ctor() { }

	// RVA: 0x1BD96F4 Offset: 0x1BD96F4 VA: 0x1BD96F4
	public void .ctor(long userId, long deckId, int deckNo, long userEquipId) { }

	// RVA: 0x1BD97F4 Offset: 0x1BD97F4 VA: 0x1BD97F4 Slot: 5
	protected sealed override long CreatePrimaryKey() { }

	// RVA: 0x1BD97FC Offset: 0x1BD97FC VA: 0x1BD97FC
	public UserServantEntity GetUserServant(int menber) { }

	// RVA: 0x1BD9810 Offset: 0x1BD9810 VA: 0x1BD9810
	public long[] GetEquipList(int menber) { }

	// RVA: 0x1BD98B4 Offset: 0x1BD98B4 VA: 0x1BD98B4
	public long[] GetEquipList(long userSvtId) { }

	// RVA: 0x1BD9958 Offset: 0x1BD9958 VA: 0x1BD9958
	public bool IsEquip(long userSvtId) { }

	// RVA: 0x1BD996C Offset: 0x1BD996C VA: 0x1BD996C
	public UserServantEntity[] GetUserServantList() { }

	// RVA: 0x1BD9BC4 Offset: 0x1BD9BC4 VA: 0x1BD9BC4
	public int GetFollowerIndex() { }
}

// Namespace: 
public class UserDeckMaster : DataMasterBase<UserDeckMaster, UserDeckEntity, long> // TypeDefIndex: 7385
{
	// Methods

	// RVA: 0x1BD9CF4 Offset: 0x1BD9CF4 VA: 0x1BD9CF4
	public void .ctor() { }

	// RVA: 0x1BD9D48 Offset: 0x1BD9D48 VA: 0x1BD9D48
	public UserDeckEntity getEntityFromId(long deckId) { }

	// RVA: 0x1BD9DA8 Offset: 0x1BD9DA8 VA: 0x1BD9DA8
	public UserDeckEntity getDeck(long userId, int deckNo) { }

	// RVA: 0x1BD9EC4 Offset: 0x1BD9EC4 VA: 0x1BD9EC4
	public UserDeckEntity[] getDeckList(long userId) { }

	// RVA: 0x1BDA1E4 Offset: 0x1BDA1E4 VA: 0x1BDA1E4
	public void getPartyList(out long[] svtIdList, out long[] equipIdList, long userId) { }

	// RVA: 0x1BDA3EC Offset: 0x1BDA3EC VA: 0x1BDA3EC
	public void getEventPartyList(out long[] svtIdList, out long[] equipIdList, long userId) { }

	// RVA: 0x1BDA908 Offset: 0x1BDA908 VA: 0x1BDA908
	public bool IsEquip(long userSvtId) { }

	// RVA: 0x1BDAA78 Offset: 0x1BDAA78 VA: 0x1BDAA78
	public bool IsEquip(long userSvtId, out int partyIndex) { }

	// RVA: 0x1BDABF8 Offset: 0x1BDABF8 VA: 0x1BDABF8
	public UserServantEntity[] GetUserServantListFromDeck() { }

	// RVA: 0x1BDAE8C Offset: 0x1BDAE8C VA: 0x1BDAE8C
	public UserServantEntity[] GetUserServantListFromDeckReaveHeroine() { }

	// RVA: 0x1BDB0C4 Offset: 0x1BDB0C4 VA: 0x1BDB0C4
	public UserServantEntity[] GetUserServantListFromDeckIsTerminal() { }

	// RVA: 0x1BDAF20 Offset: 0x1BDAF20 VA: 0x1BDAF20
	private UserServantEntity[] NullBacktrackingDeck(UserServantEntity[] deck, bool isCheckHeroine, out int cnt) { }

	// RVA: 0x1BDAD94 Offset: 0x1BDAD94 VA: 0x1BDAD94
	private UserServantEntity[] GetServantListFromAllDeck(long userId, bool isCheckHeroine = False) { }
}

// Namespace: 
public class UserEntity : DataEntityBase<long> // TypeDefIndex: 7386
{
	// Fields
	public long id; // 0x10
	public int isDel; // 0x18
	public string authKey; // 0x20
	public string secretKey; // 0x28
	public int deviceType; // 0x30
	public string userAgent; // 0x38
	public string pushKey; // 0x40

	// Methods

	// RVA: 0x1BDB148 Offset: 0x1BDB148 VA: 0x1BDB148
	public void .ctor() { }

	// RVA: 0x1BDB198 Offset: 0x1BDB198 VA: 0x1BDB198 Slot: 5
	protected sealed override long CreatePrimaryKey() { }
}

// Namespace: 
public class UserEquipEntity : DataEntityBase<long> // TypeDefIndex: 7387
{
	// Fields
	public long id; // 0x10
	public long userId; // 0x18
	public ObscuredInt equipId; // 0x20
	public int lv; // 0x30
	public int exp; // 0x34
	public int skillLv1; // 0x38
	public int skillLv2; // 0x3C
	public int skillLv3; // 0x40

	// Methods

	// RVA: 0x1BDB1A0 Offset: 0x1BDB1A0 VA: 0x1BDB1A0
	public void .ctor() { }

	// RVA: 0x1BDB1F0 Offset: 0x1BDB1F0 VA: 0x1BDB1F0 Slot: 5
	protected sealed override long CreatePrimaryKey() { }

	// RVA: 0x1BDB1F8 Offset: 0x1BDB1F8 VA: 0x1BDB1F8
	public int getSkillLv(int index) { }

	// RVA: 0x1BDB344 Offset: 0x1BDB344 VA: 0x1BDB344
	public int[] getSkillLvList() { }

	// RVA: 0x1BDB4D0 Offset: 0x1BDB4D0 VA: 0x1BDB4D0
	public int[] getSkillIdList() { }

	// RVA: 0x1BDB6B4 Offset: 0x1BDB6B4 VA: 0x1BDB6B4
	public void getEquipInfo(out int condUsrLv, out int maxLv, out string equipName, out string detail, out int genderImageId) { }

	// RVA: 0x1BDB8DC Offset: 0x1BDB8DC VA: 0x1BDB8DC
	public void getExpInfo(out int exp, out int lateExp, out float barExp) { }

	// RVA: 0x1BDBB80 Offset: 0x1BDBB80 VA: 0x1BDBB80
	public bool IsNew() { }

	// RVA: 0x1BDBDB4 Offset: 0x1BDBDB4 VA: 0x1BDBDB4
	public void SetOld() { }
}

// Namespace: 
public class UserEquipMaster : DataMasterBase<UserEquipMaster, UserEquipEntity, long> // TypeDefIndex: 7388
{
	// Methods

	// RVA: 0x1BDC050 Offset: 0x1BDC050 VA: 0x1BDC050
	public void .ctor() { }

	// RVA: 0x1BDC0A4 Offset: 0x1BDC0A4 VA: 0x1BDC0A4
	public UserEquipEntity[] getList(long userId) { }

	// RVA: 0x1BDC220 Offset: 0x1BDC220 VA: 0x1BDC220
	public void continueDeviceEquipLvInfo() { }
}

// Namespace: 
public class UserEventBoardGameTokenEntity : DataEntityBase<string> // TypeDefIndex: 7389
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int tokenId; // 0x1C
	public int num; // 0x20

	// Methods

	// RVA: 0x1BDD10C Offset: 0x1BDD10C VA: 0x1BDD10C
	public void .ctor() { }

	// RVA: 0x1BDD15C Offset: 0x1BDD15C VA: 0x1BDD15C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1BDD170 Offset: 0x1BDD170 VA: 0x1BDD170
	public static string CreatePK(long userId, int eventId, int tokenId) { }
}

// Namespace: 
public class UserEventBoardGameTokenMaster : DataMasterBase<UserEventBoardGameTokenMaster, UserEventBoardGameTokenEntity, string> // TypeDefIndex: 7390
{
	// Methods

	// RVA: 0x1BDD180 Offset: 0x1BDD180 VA: 0x1BDD180
	public void .ctor() { }

	// RVA: 0x1BDD1D4 Offset: 0x1BDD1D4 VA: 0x1BDD1D4
	public UserEventBoardGameTokenEntity GetEntity(long userId, int eventId, int tokenId) { }

	// RVA: 0x1BDD258 Offset: 0x1BDD258 VA: 0x1BDD258
	public bool TryGetEntity(out UserEventBoardGameTokenEntity entity, long userId, int eventId, int tokenId) { }

	// RVA: 0x1BDD2E4 Offset: 0x1BDD2E4 VA: 0x1BDD2E4
	public UserEventBoardGameTokenEntity[] GetList(long userId) { }

	// RVA: 0x1BDD520 Offset: 0x1BDD520 VA: 0x1BDD520
	public UserEventBoardGameTokenEntity[] GetList() { }

	// RVA: 0x1BDD590 Offset: 0x1BDD590 VA: 0x1BDD590
	public bool IsHavingToken(int tokenId) { }

	// RVA: 0x1BDD668 Offset: 0x1BDD668 VA: 0x1BDD668
	public bool IsHavingGroupToken(int gameFlagVal, int kindNum) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEEF0 Offset: 0xCAEEF0 VA: 0xCAEEF0
private sealed class UserEventBoardGameTokenMaster.<IsHavingToken>c__AnonStorey0 // TypeDefIndex: 7391
{
	// Fields
	internal int tokenId; // 0x10

	// Methods

	// RVA: 0x1BDD660 Offset: 0x1BDD660 VA: 0x1BDD660
	public void .ctor() { }

	// RVA: 0x1BDD840 Offset: 0x1BDD840 VA: 0x1BDD840
	internal bool <>m__0(UserEventBoardGameTokenEntity x) { }
}

// Namespace: 
public class UserEventDeckEntity : DataEntityBase<string> // TypeDefIndex: 7392
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int deckNo; // 0x1C
	public DeckServant deckInfo; // 0x20

	// Methods

	// RVA: 0x1BDD890 Offset: 0x1BDD890 VA: 0x1BDD890
	public void .ctor() { }

	// RVA: 0x1BDD8E0 Offset: 0x1BDD8E0 VA: 0x1BDD8E0
	public void .ctor(long userId, int eventId, int deckNo, long userEquipId) { }

	// RVA: 0x1BDD9B0 Offset: 0x1BDD9B0 VA: 0x1BDD9B0 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1BDD9C4 Offset: 0x1BDD9C4 VA: 0x1BDD9C4
	public static string CreatePK(long userId, int eventId, int deckNo) { }

	// RVA: 0x1BDD9D4 Offset: 0x1BDD9D4 VA: 0x1BDD9D4
	public UserServantEntity GetUserServant(int menber) { }

	// RVA: 0x1BDD9E8 Offset: 0x1BDD9E8 VA: 0x1BDD9E8
	public long[] GetEquipList(int menber) { }

	// RVA: 0x1BDDA8C Offset: 0x1BDDA8C VA: 0x1BDDA8C
	public long[] GetEquipList(long userSvtId) { }

	// RVA: 0x1BDDB30 Offset: 0x1BDDB30 VA: 0x1BDDB30
	public bool IsEquip(long userSvtId) { }

	// RVA: 0x1BDDB44 Offset: 0x1BDDB44 VA: 0x1BDDB44
	public UserServantEntity[] GetUserServantList() { }

	// RVA: 0x1BDDDEC Offset: 0x1BDDDEC VA: 0x1BDDDEC
	public int GetFollowerIndex() { }
}

// Namespace: 
public class UserEventDeckMaster : DataMasterBase<UserEventDeckMaster, UserEventDeckEntity, string> // TypeDefIndex: 7393
{
	// Methods

	// RVA: 0x1BDDF1C Offset: 0x1BDDF1C VA: 0x1BDDF1C
	public void .ctor() { }

	// RVA: 0x1BDDF70 Offset: 0x1BDDF70 VA: 0x1BDDF70
	public UserEventDeckEntity GetEntity(long userId, int eventId, int deckNo) { }

	// RVA: 0x1BDDFF4 Offset: 0x1BDDFF4 VA: 0x1BDDFF4
	public bool TryGetEntity(out UserEventDeckEntity entity, long userId, int eventId, int deckNo) { }

	// RVA: 0x1BDE080 Offset: 0x1BDE080 VA: 0x1BDE080
	public UserEventDeckEntity getDeck(long userId, int eventId, int deckNo) { }

	// RVA: 0x1BDE18C Offset: 0x1BDE18C VA: 0x1BDE18C
	public UserEventDeckEntity[] getDeckList(long userId, int eventId, int questId, int questPhase) { }

	// RVA: 0x1BDE448 Offset: 0x1BDE448 VA: 0x1BDE448
	public void getEventPartyList(out long[] svtIdList, out long[] equipIdList, long userId) { }

	// RVA: 0x1BDA688 Offset: 0x1BDA688 VA: 0x1BDA688
	public void getEventPartyList(ref List<long> svtCollectList, ref List<long> equipCollectList, long userId) { }
}

// Namespace: 
public class UserEventEntity : DataEntityBase<string> // TypeDefIndex: 7394
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int value; // 0x1C
	public int flag; // 0x20
	public int tutorial; // 0x24
	public int scriptFlag; // 0x28
	public long updatedAt; // 0x30

	// Methods

	// RVA: 0x1BDE76C Offset: 0x1BDE76C VA: 0x1BDE76C
	public void .ctor() { }

	// RVA: 0x1BDE7BC Offset: 0x1BDE7BC VA: 0x1BDE7BC
	public void .ctor(long userId, int eventId) { }

	// RVA: 0x1BDE834 Offset: 0x1BDE834 VA: 0x1BDE834 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1BDE848 Offset: 0x1BDE848 VA: 0x1BDE848
	public static string CreatePK(long userId, int eventId) { }

	// RVA: 0x1BDE854 Offset: 0x1BDE854 VA: 0x1BDE854
	public bool getTutorialFlag(TutorialFlag.EventId flagId) { }

	// RVA: 0x1BDE870 Offset: 0x1BDE870 VA: 0x1BDE870
	public bool getEventFlag(EventStatus.Type flagId) { }

	// RVA: 0x1BDE88C Offset: 0x1BDE88C VA: 0x1BDE88C
	public bool getEventFlag(int flagId) { }

	// RVA: 0x1BDE8A8 Offset: 0x1BDE8A8 VA: 0x1BDE8A8
	public bool getEventFlag(EventStatus.TypeFlag flag) { }

	// RVA: 0x1BDE8B8 Offset: 0x1BDE8B8 VA: 0x1BDE8B8
	public bool getScriptFlag(int flagId) { }

	// RVA: 0x1BDE8D4 Offset: 0x1BDE8D4 VA: 0x1BDE8D4
	public long getUpdatedAt() { }
}

// Namespace: 
public class UserEventMapEntity : DataEntityBase<string> // TypeDefIndex: 7395
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int mapId; // 0x1C
	public long[] value; // 0x20

	// Methods

	// RVA: 0x1BDE8DC Offset: 0x1BDE8DC VA: 0x1BDE8DC
	public void .ctor() { }

	// RVA: 0x1BDE92C Offset: 0x1BDE92C VA: 0x1BDE92C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1BDE940 Offset: 0x1BDE940 VA: 0x1BDE940
	public static string CreatePK(long userId, int eventId, int mapId) { }
}

// Namespace: 
public class UserEventMapMaster : DataMasterBase<UserEventMapMaster, UserEventMapEntity, string> // TypeDefIndex: 7396
{
	// Methods

	// RVA: 0x1BDE950 Offset: 0x1BDE950 VA: 0x1BDE950
	public void .ctor() { }

	// RVA: 0x1BDE9A4 Offset: 0x1BDE9A4 VA: 0x1BDE9A4
	public UserEventMapEntity GetEntity(long userId, int eventId, int mapId) { }

	// RVA: 0x1BDEA28 Offset: 0x1BDEA28 VA: 0x1BDEA28
	public bool TryGetEntity(out UserEventMapEntity entity, long userId, int eventId, int mapId) { }

	// RVA: 0x1BDEAB4 Offset: 0x1BDEAB4 VA: 0x1BDEAB4
	public UserEventMapEntity GetEntity(int eventId, int mapId) { }

	// RVA: 0x1BDEDB0 Offset: 0x1BDEDB0 VA: 0x1BDEDB0
	public List<UserEventMapEntity> GetEntityListFromEventId(long userId, int eventId) { }
}

// Namespace: 
public class UserEventMaster : DataMasterBase<UserEventMaster, UserEventEntity, string> // TypeDefIndex: 7397
{
	// Methods

	// RVA: 0x1BDEFCC Offset: 0x1BDEFCC VA: 0x1BDEFCC
	public void .ctor() { }

	// RVA: 0x1BDF020 Offset: 0x1BDF020 VA: 0x1BDF020
	public UserEventEntity GetEntity(long userId, int eventId) { }

	// RVA: 0x1BDF094 Offset: 0x1BDF094 VA: 0x1BDF094
	public bool TryGetEntity(out UserEventEntity entity, long userId, int eventId) { }

	// RVA: 0x1BDF118 Offset: 0x1BDF118 VA: 0x1BDF118
	public UserEventEntity getEntityFromId(long userId, int eventId) { }

	// RVA: 0x1BDF2A4 Offset: 0x1BDF2A4 VA: 0x1BDF2A4
	public UserEventEntity getEntityFromIdNull(long userId, int eventId) { }

	// RVA: 0x1BDF400 Offset: 0x1BDF400 VA: 0x1BDF400
	public UserEventEntity[] getList() { }

	// RVA: 0x1BDF470 Offset: 0x1BDF470 VA: 0x1BDF470
	public UserEventEntity[] getList(long userId) { }
}

// Namespace: 
public class UserEventMissionCondDetailEntity : DataEntityBase<string> // TypeDefIndex: 7398
{
	// Fields
	public long userId; // 0x10
	public int conditionDetailId; // 0x18
	public int missionTargetId; // 0x1C
	public long progressNum; // 0x20

	// Methods

	// RVA: 0x1BDF5EC Offset: 0x1BDF5EC VA: 0x1BDF5EC
	public void .ctor() { }

	// RVA: 0x1BDF63C Offset: 0x1BDF63C VA: 0x1BDF63C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1BDF650 Offset: 0x1BDF650 VA: 0x1BDF650
	public static string CreatePK(long userId, int conditionDetailId) { }
}

// Namespace: 
public class UserEventMissionCondDetailMaster : DataMasterBase<UserEventMissionCondDetailMaster, UserEventMissionCondDetailEntity, string> // TypeDefIndex: 7399
{
	// Methods

	// RVA: 0x1BDF65C Offset: 0x1BDF65C VA: 0x1BDF65C
	public void .ctor() { }

	// RVA: 0x1BDF6B0 Offset: 0x1BDF6B0 VA: 0x1BDF6B0
	public UserEventMissionCondDetailEntity GetEntity(long userId, int conditionDetailId) { }

	// RVA: 0x1BDF724 Offset: 0x1BDF724 VA: 0x1BDF724
	public bool TryGetEntity(out UserEventMissionCondDetailEntity entity, long userId, int conditionDetailId) { }
}

// Namespace: 
public class UserEventMissionEntity : DataEntityBase<string> // TypeDefIndex: 7400
{
	// Fields
	public long userId; // 0x10
	public int missionId; // 0x18
	public int missionTargetId; // 0x1C
	public int missionProgressType; // 0x20
	public long updatedAt; // 0x28
	public long createdAt; // 0x30

	// Methods

	// RVA: 0x1BDF7A8 Offset: 0x1BDF7A8 VA: 0x1BDF7A8
	public void .ctor() { }

	// RVA: 0x1BDF7F8 Offset: 0x1BDF7F8 VA: 0x1BDF7F8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1BDF80C Offset: 0x1BDF80C VA: 0x1BDF80C
	public static string CreatePK(long userId, int missionId) { }

	// RVA: 0x1BDF818 Offset: 0x1BDF818 VA: 0x1BDF818
	public bool isClearMission() { }

	// RVA: 0x1BDF828 Offset: 0x1BDF828 VA: 0x1BDF828
	public bool isAchieveMission() { }

	// RVA: 0x1BDF838 Offset: 0x1BDF838 VA: 0x1BDF838
	public bool IsTodayMissionData() { }
}

// Namespace: 
public class UserEventMissionFixEntity : DataEntityBase<string> // TypeDefIndex: 7401
{
	// Fields
	public long userId; // 0x10
	public int missionId; // 0x18
	public int progressType; // 0x1C
	public int num; // 0x20

	// Methods

	// RVA: 0x1BDF8DC Offset: 0x1BDF8DC VA: 0x1BDF8DC
	public void .ctor() { }

	// RVA: 0x1BDF92C Offset: 0x1BDF92C VA: 0x1BDF92C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1BDF940 Offset: 0x1BDF940 VA: 0x1BDF940
	public static string CreatePK(long userId, int missionId) { }

	// RVA: 0x1BDF94C Offset: 0x1BDF94C VA: 0x1BDF94C
	public MissionProgressType.Type getProgressType() { }
}

// Namespace: 
public class UserEventMissionFixMaster : DataMasterBase<UserEventMissionFixMaster, UserEventMissionFixEntity, string> // TypeDefIndex: 7402
{
	// Methods

	// RVA: 0x1BDF954 Offset: 0x1BDF954 VA: 0x1BDF954
	public void .ctor() { }

	// RVA: 0x1BDF9A8 Offset: 0x1BDF9A8 VA: 0x1BDF9A8
	public UserEventMissionFixEntity GetEntity(long userId, int missionId) { }

	// RVA: 0x1BDFA1C Offset: 0x1BDFA1C VA: 0x1BDFA1C
	public bool TryGetEntity(out UserEventMissionFixEntity entity, long userId, int missionId) { }

	// RVA: 0x1BDFAA0 Offset: 0x1BDFAA0 VA: 0x1BDFAA0
	public UserEventMissionFixEntity GetEntityFromId(long userId, int missionId) { }
}

// Namespace: 
public class UserEventMissionMaster : DataMasterBase<UserEventMissionMaster, UserEventMissionEntity, string> // TypeDefIndex: 7403
{
	// Methods

	// RVA: 0x1BDFBD8 Offset: 0x1BDFBD8 VA: 0x1BDFBD8
	public void .ctor() { }

	// RVA: 0x1BDFC2C Offset: 0x1BDFC2C VA: 0x1BDFC2C
	public UserEventMissionEntity GetEntity(long userId, int missionId) { }

	// RVA: 0x1BDFCA0 Offset: 0x1BDFCA0 VA: 0x1BDFCA0
	public bool TryGetEntity(out UserEventMissionEntity entity, long userId, int missionId) { }

	// RVA: 0x1BDFD24 Offset: 0x1BDFD24 VA: 0x1BDFD24
	public UserEventMissionEntity getEntityFromId(long userId, int missionId) { }

	// RVA: 0x1BDFE80 Offset: 0x1BDFE80 VA: 0x1BDFE80
	public UserEventMissionEntity[] getUserEventMissionList(int eventId) { }

	// RVA: 0x1BDFFF8 Offset: 0x1BDFFF8 VA: 0x1BDFFF8
	public int getAchiveMissionNum(int eventId) { }

	// RVA: 0x1BE0000 Offset: 0x1BE0000 VA: 0x1BE0000
	public int getMissionProgressNum(int eventId, MissionProgressType.Type progress_type) { }

	// RVA: 0x1BE0178 Offset: 0x1BE0178 VA: 0x1BE0178
	public int getDailyMissionAchiveNum(int eventId) { }

	// RVA: 0x1BE0324 Offset: 0x1BE0324 VA: 0x1BE0324
	public List<UserEventMissionEntity> getListFromMissionTargetId(int missionTargetId) { }
}

// Namespace: 
public class UserEventPointEntity : DataEntityBase<string> // TypeDefIndex: 7404
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int groupId; // 0x1C
	public long value; // 0x20

	// Methods

	// RVA: 0x1BE04F8 Offset: 0x1BE04F8 VA: 0x1BE04F8
	public void .ctor() { }

	// RVA: 0x1BE0548 Offset: 0x1BE0548 VA: 0x1BE0548
	public void .ctor(long userId, int eventId, int groupId) { }

	// RVA: 0x1BE05C4 Offset: 0x1BE05C4 VA: 0x1BE05C4
	public void .ctor(long userId, int eventId, int groupId, long value) { }

	// RVA: 0x1BE0644 Offset: 0x1BE0644 VA: 0x1BE0644 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1BE0658 Offset: 0x1BE0658 VA: 0x1BE0658
	public static string CreatePK(long userId, int eventId, int groupId) { }
}

// Namespace: 
public class UserEventPointMaster : DataMasterBase<UserEventPointMaster, UserEventPointEntity, string> // TypeDefIndex: 7405
{
	// Methods

	// RVA: 0x1BE0668 Offset: 0x1BE0668 VA: 0x1BE0668
	public void .ctor() { }

	// RVA: 0x1BE06BC Offset: 0x1BE06BC VA: 0x1BE06BC
	public UserEventPointEntity GetEntity(long userId, int eventId, int groupId) { }

	// RVA: 0x1BE0740 Offset: 0x1BE0740 VA: 0x1BE0740
	public bool TryGetEntity(out UserEventPointEntity entity, long userId, int eventId, int groupId) { }

	// RVA: 0x1BE07CC Offset: 0x1BE07CC VA: 0x1BE07CC
	public UserEventPointEntity getEntityFromId(long userId, int eventId, int groupId) { }

	// RVA: 0x1BE0AF4 Offset: 0x1BE0AF4 VA: 0x1BE0AF4
	public UserEventPointEntity GetEntityFromEventIdWithGroupId(long userId, int eventId, int groupId) { }

	// RVA: 0x1BE0DE8 Offset: 0x1BE0DE8 VA: 0x1BE0DE8
	public long GetPoint(long userId, int eventId, int groupId) { }

	// RVA: 0x1BE0F08 Offset: 0x1BE0F08 VA: 0x1BE0F08
	public UserEventPointEntity GetTowerProgress(long userId, int eventId, int groupId) { }

	// RVA: 0x1BE0F0C Offset: 0x1BE0F0C VA: 0x1BE0F0C
	public long GetEventPointTotal(long userId, int eventId, int groupId = -1) { }

	// RVA: 0x1BE10C0 Offset: 0x1BE10C0 VA: 0x1BE10C0
	public static long GetEventPointNoGroup(int eventId) { }

	// RVA: 0x1BE11CC Offset: 0x1BE11CC VA: 0x1BE11CC
	public static long GetEventPoint(int eventId, int groupId) { }

	// RVA: 0x1BE12DC Offset: 0x1BE12DC VA: 0x1BE12DC
	public static long GetEventActivityPoint(int eventId) { }
}

// Namespace: 
public class UserEventQuestCooltimeEntity : DataEntityBase<string> // TypeDefIndex: 7406
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int questId; // 0x1C
	public int phase; // 0x20
	public long clearedAt; // 0x28

	// Methods

	// RVA: 0x1BE13E8 Offset: 0x1BE13E8 VA: 0x1BE13E8
	public void .ctor() { }

	// RVA: 0x1BE1438 Offset: 0x1BE1438 VA: 0x1BE1438 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1BE1450 Offset: 0x1BE1450 VA: 0x1BE1450
	public static string CreatePK(long userId, int eventId, int questId, int phase) { }

	// RVA: 0x1BE1464 Offset: 0x1BE1464 VA: 0x1BE1464
