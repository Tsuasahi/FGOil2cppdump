	protected override void ProcessAsTls1() { }

	// RVA: 0x10E6224 Offset: 0x10E6224 VA: 0x10E6224
	private void processProtocol(short protocol) { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Client
internal class TlsServerHelloDone : HandshakeMessage // TypeDefIndex: 1936
{
	// Methods

	// RVA: 0x10E63C4 Offset: 0x10E63C4 VA: 0x10E63C4
	public void .ctor(Context context, byte[] buffer) { }

	// RVA: 0x10E63F8 Offset: 0x10E63F8 VA: 0x10E63F8 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x10E63FC Offset: 0x10E63FC VA: 0x10E63FC Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Client
internal class TlsServerKeyExchange : HandshakeMessage // TypeDefIndex: 1937
{
	// Fields
	private RSAParameters rsaParams; // 0x40
	private byte[] signedParams; // 0x80

	// Methods

	// RVA: 0x10E6400 Offset: 0x10E6400 VA: 0x10E6400
	public void .ctor(Context context, byte[] buffer) { }

	// RVA: 0x10E6658 Offset: 0x10E6658 VA: 0x10E6658 Slot: 31
	public override void Update() { }

	// RVA: 0x10E6770 Offset: 0x10E6770 VA: 0x10E6770 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x10E6780 Offset: 0x10E6780 VA: 0x10E6780 Slot: 29
	protected override void ProcessAsTls1() { }

	// RVA: 0x10E6438 Offset: 0x10E6438 VA: 0x10E6438
	private void verifySignature() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsClientCertificate : HandshakeMessage // TypeDefIndex: 1938
{
	// Fields
	private X509CertificateCollection clientCertificates; // 0x40

	// Methods

	// RVA: 0x10E6B64 Offset: 0x10E6B64 VA: 0x10E6B64
	public void .ctor(Context context, byte[] buffer) { }

	// RVA: 0x10E6B98 Offset: 0x10E6B98 VA: 0x10E6B98 Slot: 31
	public override void Update() { }

	// RVA: 0x10E6DC4 Offset: 0x10E6DC4 VA: 0x10E6DC4 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x10E6DD4 Offset: 0x10E6DD4 VA: 0x10E6DD4 Slot: 29
	protected override void ProcessAsTls1() { }

	// RVA: 0x10E7888 Offset: 0x10E7888 VA: 0x10E7888
	private bool checkCertificateUsage(X509Certificate cert) { }

	// RVA: 0x10E6FC0 Offset: 0x10E6FC0 VA: 0x10E6FC0
	private void validateCertificates(X509CertificateCollection certificates) { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsClientCertificateVerify : HandshakeMessage // TypeDefIndex: 1939
{
	// Methods

	// RVA: 0x10E7BFC Offset: 0x10E7BFC VA: 0x10E7BFC
	public void .ctor(Context context, byte[] buffer) { }

	// RVA: 0x10E7C30 Offset: 0x10E7C30 VA: 0x10E7C30 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x10E7FE8 Offset: 0x10E7FE8 VA: 0x10E7FE8 Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsClientFinished : HandshakeMessage // TypeDefIndex: 1940
{
	// Methods

	// RVA: 0x10E822C Offset: 0x10E822C VA: 0x10E822C
	public void .ctor(Context context, byte[] buffer) { }

	// RVA: 0x10E8260 Offset: 0x10E8260 VA: 0x10E8260 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x10E84A8 Offset: 0x10E84A8 VA: 0x10E84A8 Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsClientHello : HandshakeMessage // TypeDefIndex: 1941
{
	// Fields
	private byte[] random; // 0x40
	private byte[] sessionId; // 0x48
	private short[] cipherSuites; // 0x50
	private byte[] compressionMethods; // 0x58

	// Methods

	// RVA: 0x10E8690 Offset: 0x10E8690 VA: 0x10E8690
	public void .ctor(Context context, byte[] buffer) { }

	// RVA: 0x10E86C4 Offset: 0x10E86C4 VA: 0x10E86C4 Slot: 31
	public override void Update() { }

	// RVA: 0x10E8968 Offset: 0x10E8968 VA: 0x10E8968 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x10E8978 Offset: 0x10E8978 VA: 0x10E8978 Slot: 29
	protected override void ProcessAsTls1() { }

	// RVA: 0x10E8B40 Offset: 0x10E8B40 VA: 0x10E8B40
	private void processProtocol(short protocol) { }

	// RVA: 0x10E8760 Offset: 0x10E8760 VA: 0x10E8760
	private void selectCipherSuite() { }

	// RVA: 0x10E8934 Offset: 0x10E8934 VA: 0x10E8934
	private void selectCompressionMethod() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsClientKeyExchange : HandshakeMessage // TypeDefIndex: 1942
{
	// Methods

	// RVA: 0x10E8CE0 Offset: 0x10E8CE0 VA: 0x10E8CE0
	public void .ctor(Context context, byte[] buffer) { }

	// RVA: 0x10E8D14 Offset: 0x10E8D14 VA: 0x10E8D14 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x10E904C Offset: 0x10E904C VA: 0x10E904C Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsServerCertificate : HandshakeMessage // TypeDefIndex: 1943
{
	// Methods

	// RVA: 0x10E9364 Offset: 0x10E9364 VA: 0x10E9364
	public void .ctor(Context context) { }

	// RVA: 0x10E9394 Offset: 0x10E9394 VA: 0x10E9394 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x10E93A4 Offset: 0x10E93A4 VA: 0x10E93A4 Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsServerCertificateRequest : HandshakeMessage // TypeDefIndex: 1944
{
	// Methods

	// RVA: 0x10E9784 Offset: 0x10E9784 VA: 0x10E9784
	public void .ctor(Context context) { }

	// RVA: 0x10E97B4 Offset: 0x10E97B4 VA: 0x10E97B4 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x10E97C4 Offset: 0x10E97C4 VA: 0x10E97C4 Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsServerFinished : HandshakeMessage // TypeDefIndex: 1945
{
	// Fields
	private static byte[] Ssl3Marker; // 0x0

	// Methods

	// RVA: 0x10E9B64 Offset: 0x10E9B64 VA: 0x10E9B64
	public void .ctor(Context context) { }

	// RVA: 0x10E9B94 Offset: 0x10E9B94 VA: 0x10E9B94
	private static void .cctor() { }

	// RVA: 0x10E9C10 Offset: 0x10E9C10 VA: 0x10E9C10 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x10E9E34 Offset: 0x10E9E34 VA: 0x10E9E34 Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsServerHello : HandshakeMessage // TypeDefIndex: 1946
{
	// Fields
	private int unixTime; // 0x40
	private byte[] random; // 0x48

	// Methods

	// RVA: 0x10E9FA4 Offset: 0x10E9FA4 VA: 0x10E9FA4
	public void .ctor(Context context) { }

	// RVA: 0x10E9FD4 Offset: 0x10E9FD4 VA: 0x10E9FD4 Slot: 31
	public override void Update() { }

	// RVA: 0x10EA224 Offset: 0x10EA224 VA: 0x10EA224 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x10EA234 Offset: 0x10EA234 VA: 0x10EA234 Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsServerHelloDone : HandshakeMessage // TypeDefIndex: 1947
{
	// Methods

	// RVA: 0x10EA400 Offset: 0x10EA400 VA: 0x10EA400
	public void .ctor(Context context) { }

	// RVA: 0x10EA430 Offset: 0x10EA430 VA: 0x10EA430 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x10EA434 Offset: 0x10EA434 VA: 0x10EA434 Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsServerKeyExchange : HandshakeMessage // TypeDefIndex: 1948
{
	// Methods

	// RVA: 0x10EA438 Offset: 0x10EA438 VA: 0x10EA438
	public void .ctor(Context context) { }

	// RVA: 0x10EA468 Offset: 0x10EA468 VA: 0x10EA468 Slot: 31
	public override void Update() { }

	// RVA: 0x10EA4D0 Offset: 0x10EA4D0 VA: 0x10EA4D0 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x10EA4E0 Offset: 0x10EA4E0 VA: 0x10EA4E0 Slot: 29
	protected override void ProcessAsTls1() { }

	// RVA: 0x10EABBC Offset: 0x10EABBC VA: 0x10EABBC
	private byte[] createSignature(RSA rsa, byte[] buffer) { }
}

// Namespace: Mono.Math.Prime
public sealed class PrimalityTest : MulticastDelegate // TypeDefIndex: 1949
{
	// Methods

	// RVA: 0x1261D4C Offset: 0x1261D4C VA: 0x1261D4C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1262138 Offset: 0x1262138 VA: 0x1262138 Slot: 11
	public virtual bool Invoke(BigInteger bi, ConfidenceFactor confidence) { }

	// RVA: 0x1262504 Offset: 0x1262504 VA: 0x1262504 Slot: 12
	public virtual IAsyncResult BeginInvoke(BigInteger bi, ConfidenceFactor confidence, AsyncCallback callback, object object) { }

	// RVA: 0x12625A0 Offset: 0x12625A0 VA: 0x12625A0 Slot: 13
	public virtual bool EndInvoke(IAsyncResult result) { }
}

// Namespace: Mono.Security.Protocol.Tls
public sealed class CertificateValidationCallback : MulticastDelegate // TypeDefIndex: 1950
{
	// Methods

	// RVA: 0x1270AEC Offset: 0x1270AEC VA: 0x1270AEC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1270AFC Offset: 0x1270AFC VA: 0x1270AFC Slot: 11
	public virtual bool Invoke(X509Certificate certificate, int[] certificateErrors) { }

	// RVA: 0x1270EC0 Offset: 0x1270EC0 VA: 0x1270EC0 Slot: 12
	public virtual IAsyncResult BeginInvoke(X509Certificate certificate, int[] certificateErrors, AsyncCallback callback, object object) { }

	// RVA: 0x1270EF0 Offset: 0x1270EF0 VA: 0x1270EF0 Slot: 13
	public virtual bool EndInvoke(IAsyncResult result) { }
}

// Namespace: Mono.Security.Protocol.Tls
public sealed class CertificateValidationCallback2 : MulticastDelegate // TypeDefIndex: 1951
{
	// Methods

	// RVA: 0x1270F2C Offset: 0x1270F2C VA: 0x1270F2C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1270F3C Offset: 0x1270F3C VA: 0x1270F3C Slot: 11
	public virtual ValidationResult Invoke(X509CertificateCollection collection) { }

	// RVA: 0x12712E0 Offset: 0x12712E0 VA: 0x12712E0 Slot: 12
	public virtual IAsyncResult BeginInvoke(X509CertificateCollection collection, AsyncCallback callback, object object) { }

	// RVA: 0x1271304 Offset: 0x1271304 VA: 0x1271304 Slot: 13
	public virtual ValidationResult EndInvoke(IAsyncResult result) { }
}

// Namespace: Mono.Security.Protocol.Tls
public sealed class CertificateSelectionCallback : MulticastDelegate // TypeDefIndex: 1952
{
	// Methods

	// RVA: 0x1270688 Offset: 0x1270688 VA: 0x1270688
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1270698 Offset: 0x1270698 VA: 0x1270698 Slot: 11
	public virtual X509Certificate Invoke(X509CertificateCollection clientCertificates, X509Certificate serverCertificate, string targetHost, X509CertificateCollection serverRequestedCertificates) { }

	// RVA: 0x1270AAC Offset: 0x1270AAC VA: 0x1270AAC Slot: 12
	public virtual IAsyncResult BeginInvoke(X509CertificateCollection clientCertificates, X509Certificate serverCertificate, string targetHost, X509CertificateCollection serverRequestedCertificates, AsyncCallback callback, object object) { }

	// RVA: 0x1270AE0 Offset: 0x1270AE0 VA: 0x1270AE0 Slot: 13
	public virtual X509Certificate EndInvoke(IAsyncResult result) { }
}

// Namespace: Mono.Security.Protocol.Tls
public sealed class PrivateKeySelectionCallback : MulticastDelegate // TypeDefIndex: 1953
{
	// Methods

	// RVA: 0x10EB1F0 Offset: 0x10EB1F0 VA: 0x10EB1F0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x10EA7F8 Offset: 0x10EA7F8 VA: 0x10EA7F8 Slot: 11
	public virtual AsymmetricAlgorithm Invoke(X509Certificate certificate, string targetHost) { }

	// RVA: 0x10EB700 Offset: 0x10EB700 VA: 0x10EB700 Slot: 12
	public virtual IAsyncResult BeginInvoke(X509Certificate certificate, string targetHost, AsyncCallback callback, object object) { }

	// RVA: 0x10EB730 Offset: 0x10EB730 VA: 0x10EB730 Slot: 13
	public virtual AsymmetricAlgorithm EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC3FF54 Offset: 0xC3FF54 VA: 0xC3FF54
internal class <PrivateImplementationDetails> // TypeDefIndex: 1954
{
	// Fields
	internal static <PrivateImplementationDetails>.$ArrayType$3132 $$field-0 /*Metadata offset 0x7761C8*/; // 0x0
	internal static <PrivateImplementationDetails>.$ArrayType$256 $$field-5 /*Metadata offset 0x776E04*/; // 0xC3C
	internal static <PrivateImplementationDetails>.$ArrayType$20 $$field-6 /*Metadata offset 0x776F04*/; // 0xD3C
	internal static <PrivateImplementationDetails>.$ArrayType$32 $$field-7 /*Metadata offset 0x776F18*/; // 0xD50
	internal static <PrivateImplementationDetails>.$ArrayType$48 $$field-8 /*Metadata offset 0x776F38*/; // 0xD70
	internal static <PrivateImplementationDetails>.$ArrayType$64 $$field-9 /*Metadata offset 0x776F68*/; // 0xDA0
	internal static <PrivateImplementationDetails>.$ArrayType$64 $$field-11 /*Metadata offset 0x776FA8*/; // 0xDE0
	internal static <PrivateImplementationDetails>.$ArrayType$64 $$field-12 /*Metadata offset 0x776FE8*/; // 0xE20
	internal static <PrivateImplementationDetails>.$ArrayType$64 $$field-13 /*Metadata offset 0x777028*/; // 0xE60
	internal static <PrivateImplementationDetails>.$ArrayType$12 $$field-14 /*Metadata offset 0x777068*/; // 0xEA0
	internal static <PrivateImplementationDetails>.$ArrayType$12 $$field-15 /*Metadata offset 0x777074*/; // 0xEAC
	internal static <PrivateImplementationDetails>.$ArrayType$12 $$field-16 /*Metadata offset 0x777080*/; // 0xEB8
	internal static <PrivateImplementationDetails>.$ArrayType$16 $$field-17 /*Metadata offset 0x77708C*/; // 0xEC4
	internal static <PrivateImplementationDetails>.$ArrayType$4 $$field-21 /*Metadata offset 0x77709C*/; // 0xED4
	internal static <PrivateImplementationDetails>.$ArrayType$4 $$field-22 /*Metadata offset 0x7770A0*/; // 0xED8
	internal static <PrivateImplementationDetails>.$ArrayType$4 $$field-23 /*Metadata offset 0x7770A4*/; // 0xEDC
}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$3132 // TypeDefIndex: 1955
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$256 // TypeDefIndex: 1956
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$20 // TypeDefIndex: 1957
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$32 // TypeDefIndex: 1958
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$48 // TypeDefIndex: 1959
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$64 // TypeDefIndex: 1960
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$12 // TypeDefIndex: 1961
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$16 // TypeDefIndex: 1962
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$4 // TypeDefIndex: 1963
{}

// Namespace: 
internal class <Module> // TypeDefIndex: 1964
{}

// Namespace: System.Runtime.CompilerServices
[AttributeUsageAttribute] // RVA: 0xC404A0 Offset: 0xC404A0 VA: 0xC404A0
public sealed class ExtensionAttribute : Attribute // TypeDefIndex: 1965
{
	// Methods

	// RVA: 0x132BE38 Offset: 0x132BE38 VA: 0x132BE38
	public void .ctor() { }
}

// Namespace: 
internal sealed class Locale // TypeDefIndex: 1966
{
	// Methods

	// RVA: 0x1328FF8 Offset: 0x1328FF8 VA: 0x1328FF8
	public static string GetText(string msg) { }

	// RVA: 0x1328FFC Offset: 0x1328FFC VA: 0x1328FFC
	public static string GetText(string fmt, object[] args) { }
}

// Namespace: System
[AttributeUsageAttribute] // RVA: 0xC404B4 Offset: 0xC404B4 VA: 0xC404B4
internal class MonoTODOAttribute : Attribute // TypeDefIndex: 1967
{
	// Methods

	// RVA: 0x132BE30 Offset: 0x132BE30 VA: 0x132BE30
	public void .ctor() { }
}

// Namespace: Mono.Security.Cryptography
public sealed class KeyBuilder // TypeDefIndex: 1968
{
	// Fields
	private static RandomNumberGenerator rng; // 0x0

	// Properties
	private static RandomNumberGenerator Rng { get; }

	// Methods

	// RVA: 0x1329074 Offset: 0x1329074 VA: 0x1329074
	private static RandomNumberGenerator get_Rng() { }

	// RVA: 0x13290E4 Offset: 0x13290E4 VA: 0x13290E4
	public static byte[] Key(int size) { }

	// RVA: 0x1329164 Offset: 0x1329164 VA: 0x1329164
	public static byte[] IV(int size) { }
}

// Namespace: Mono.Security.Cryptography
internal abstract class SymmetricTransform : IDisposable, ICryptoTransform // TypeDefIndex: 1969
{
	// Fields
	protected SymmetricAlgorithm algo; // 0x10
	protected bool encrypt; // 0x18
	private int BlockSizeByte; // 0x1C
	private byte[] temp; // 0x20
	private byte[] temp2; // 0x28
	private byte[] workBuff; // 0x30
	private byte[] workout; // 0x38
	private int FeedBackByte; // 0x40
	private int FeedBackIter; // 0x44
	private bool m_disposed; // 0x48
	private bool lastBlock; // 0x49
	private RandomNumberGenerator _rng; // 0x50

	// Properties
	public virtual bool CanTransformMultipleBlocks { get; }
	public virtual bool CanReuseTransform { get; }
	public virtual int InputBlockSize { get; }
	public virtual int OutputBlockSize { get; }
	private bool KeepLastBlock { get; }

	// Methods

	// RVA: 0x13291E4 Offset: 0x13291E4 VA: 0x13291E4
	public void .ctor(SymmetricAlgorithm symmAlgo, bool encryption, byte[] rgbIV) { }

	// RVA: 0x13294E4 Offset: 0x13294E4 VA: 0x13294E4 Slot: 4
	private void System.IDisposable.Dispose() { }

	// RVA: 0x1329518 Offset: 0x1329518 VA: 0x1329518 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1329598 Offset: 0x1329598 VA: 0x1329598 Slot: 11
	protected virtual void Dispose(bool disposing) { }

	// RVA: 0x13295F8 Offset: 0x13295F8 VA: 0x13295F8 Slot: 12
	public virtual bool get_CanTransformMultipleBlocks() { }

	// RVA: 0x1329600 Offset: 0x1329600 VA: 0x1329600 Slot: 13
	public virtual bool get_CanReuseTransform() { }

	// RVA: 0x1329608 Offset: 0x1329608 VA: 0x1329608 Slot: 14
	public virtual int get_InputBlockSize() { }

	// RVA: 0x1329610 Offset: 0x1329610 VA: 0x1329610 Slot: 15
	public virtual int get_OutputBlockSize() { }

	// RVA: 0x1329618 Offset: 0x1329618 VA: 0x1329618 Slot: 16
	protected virtual void Transform(byte[] input, byte[] output) { }

	// RVA: -1 Offset: -1 Slot: 17
	protected abstract void ECB(byte[] input, byte[] output);

	// RVA: 0x13297EC Offset: 0x13297EC VA: 0x13297EC Slot: 18
	protected virtual void CBC(byte[] input, byte[] output) { }

	// RVA: 0x13299C8 Offset: 0x13299C8 VA: 0x13299C8 Slot: 19
	protected virtual void CFB(byte[] input, byte[] output) { }

	// RVA: 0x1329C90 Offset: 0x1329C90 VA: 0x1329C90 Slot: 20
	protected virtual void OFB(byte[] input, byte[] output) { }

	// RVA: 0x1329D04 Offset: 0x1329D04 VA: 0x1329D04 Slot: 21
	protected virtual void CTS(byte[] input, byte[] output) { }

	// RVA: 0x1329D78 Offset: 0x1329D78 VA: 0x1329D78
	private void CheckInput(byte[] inputBuffer, int inputOffset, int inputCount) { }

	// RVA: 0x1329EC4 Offset: 0x1329EC4 VA: 0x1329EC4 Slot: 22
	public virtual int TransformBlock(byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset) { }

	// RVA: 0x132A114 Offset: 0x132A114 VA: 0x132A114
	private bool get_KeepLastBlock() { }

	// RVA: 0x132A198 Offset: 0x132A198 VA: 0x132A198
	private int InternalTransformBlock(byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset) { }

	// RVA: 0x132A36C Offset: 0x132A36C VA: 0x132A36C
	private void Random(byte[] buffer, int start, int length) { }

	// RVA: 0x132A430 Offset: 0x132A430 VA: 0x132A430
	private void ThrowBadPaddingException(PaddingMode padding, int length, int position) { }

	// RVA: 0x132A5EC Offset: 0x132A5EC VA: 0x132A5EC
	private byte[] FinalEncrypt(byte[] inputBuffer, int inputOffset, int inputCount) { }

	// RVA: 0x132A94C Offset: 0x132A94C VA: 0x132A94C
	private byte[] FinalDecrypt(byte[] inputBuffer, int inputOffset, int inputCount) { }

	// RVA: 0x132AD0C Offset: 0x132AD0C VA: 0x132AD0C Slot: 23
	public virtual byte[] TransformFinalBlock(byte[] inputBuffer, int inputOffset, int inputCount) { }
}

// Namespace: System.Collections.Generic
[Serializable]
public class HashSet<T> : ICollection<T>, IEnumerable<T>, IEnumerable, ISerializable, IDeserializationCallback // TypeDefIndex: 1970
{
	// Fields
	private const int INITIAL_SIZE = 10;
	private const float DEFAULT_LOAD_FACTOR = 0.9;
	private const int NO_SLOT = -1;
	private const int HASH_FLAG = -2147483648;
	private int[] table; // 0x0
	private HashSet.Link<T>[] links; // 0x0
	private T[] slots; // 0x0
	private int touched; // 0x0
	private int empty_slot; // 0x0
	private int count; // 0x0
	private int threshold; // 0x0
	private IEqualityComparer<T> comparer; // 0x0
	private SerializationInfo si; // 0x0
	private int generation; // 0x0

	// Properties
	private bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }
	public int Count { get; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27B1654 Offset: 0x27B1654 VA: 0x27B1654
	|-HashSet<BattleBuffData.BuffData>..ctor
	|-HashSet<MyRoomListControl.MainItemInfo>..ctor
	|-HashSet<object>..ctor
	|-HashSet<string>..ctor
	|-HashSet<UIPanel>..ctor
	|-HashSet<UIRect>..ctor
	|-HashSet<AndroidJavaObject>..ctor
	|-HashSet<GameObject>..ctor
	|-HashSet<ProductDescription>..ctor
	|-HashSet<Product>..ctor
	|-HashSet<ProductDefinition>..ctor
	|-HashSet<IClippable>..ctor
	|-HashSet<Text>..ctor
	|-HashSet<WarBoardAIRoute.RouteData>..ctor
	|
	|-RVA: 0x27A7424 Offset: 0x27A7424 VA: 0x27A7424
	|-HashSet<BattleLogicTask.ACTIONTYPE>..ctor
	|
	|-RVA: 0x27A9494 Offset: 0x27A9494 VA: 0x27A9494
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>..ctor
	|
	|-RVA: 0x27AB504 Offset: 0x27AB504 VA: 0x27AB504
	|-HashSet<CombineResultEffectComponent.Kind>..ctor
	|
	|-RVA: 0x27AD574 Offset: 0x27AD574 VA: 0x27AD574
	|-HashSet<int>..ctor
	|
	|-RVA: 0x27AF5E4 Offset: 0x27AF5E4 VA: 0x27AF5E4
	|-HashSet<long>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(IEqualityComparer<T> comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27A748C Offset: 0x27A748C VA: 0x27A748C
	|-HashSet<BattleLogicTask.ACTIONTYPE>..ctor
	|
	|-RVA: 0x27A94FC Offset: 0x27A94FC VA: 0x27A94FC
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>..ctor
	|
	|-RVA: 0x27AB56C Offset: 0x27AB56C VA: 0x27AB56C
	|-HashSet<CombineResultEffectComponent.Kind>..ctor
	|
	|-RVA: 0x27AD5DC Offset: 0x27AD5DC VA: 0x27AD5DC
	|-HashSet<int>..ctor
	|
	|-RVA: 0x27AF64C Offset: 0x27AF64C VA: 0x27AF64C
	|-HashSet<long>..ctor
	|
	|-RVA: 0x27B16BC Offset: 0x27B16BC VA: 0x27B16BC
	|-HashSet<object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(IEnumerable<T> collection) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27A7500 Offset: 0x27A7500 VA: 0x27A7500
	|-HashSet<BattleLogicTask.ACTIONTYPE>..ctor
	|
	|-RVA: 0x27A9570 Offset: 0x27A9570 VA: 0x27A9570
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>..ctor
	|
	|-RVA: 0x27AB5E0 Offset: 0x27AB5E0 VA: 0x27AB5E0
	|-HashSet<CombineResultEffectComponent.Kind>..ctor
	|
	|-RVA: 0x27AD650 Offset: 0x27AD650 VA: 0x27AD650
	|-HashSet<int>..ctor
	|
	|-RVA: 0x27AF6C0 Offset: 0x27AF6C0 VA: 0x27AF6C0
	|-HashSet<long>..ctor
	|
	|-RVA: 0x27B1730 Offset: 0x27B1730 VA: 0x27B1730
	|-HashSet<object>..ctor
	|-HashSet<string>..ctor
	|-HashSet<ProductDefinition>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(IEnumerable<T> collection, IEqualityComparer<T> comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27A7550 Offset: 0x27A7550 VA: 0x27A7550
	|-HashSet<BattleLogicTask.ACTIONTYPE>..ctor
	|
	|-RVA: 0x27A95C0 Offset: 0x27A95C0 VA: 0x27A95C0
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>..ctor
	|
	|-RVA: 0x27AB630 Offset: 0x27AB630 VA: 0x27AB630
	|-HashSet<CombineResultEffectComponent.Kind>..ctor
	|
	|-RVA: 0x27AD6A0 Offset: 0x27AD6A0 VA: 0x27AD6A0
	|-HashSet<int>..ctor
	|
	|-RVA: 0x27AF710 Offset: 0x27AF710 VA: 0x27AF710
	|-HashSet<long>..ctor
	|
	|-RVA: 0x27B1780 Offset: 0x27B1780 VA: 0x27B1780
	|-HashSet<object>..ctor
	*/

	// RVA: -1 Offset: -1
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27A7968 Offset: 0x27A7968 VA: 0x27A7968
	|-HashSet<BattleLogicTask.ACTIONTYPE>..ctor
	|
	|-RVA: 0x27A99D8 Offset: 0x27A99D8 VA: 0x27A99D8
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>..ctor
	|
	|-RVA: 0x27ABA48 Offset: 0x27ABA48 VA: 0x27ABA48
	|-HashSet<CombineResultEffectComponent.Kind>..ctor
	|
	|-RVA: 0x27ADAB8 Offset: 0x27ADAB8 VA: 0x27ADAB8
	|-HashSet<int>..ctor
	|
	|-RVA: 0x27AFB28 Offset: 0x27AFB28 VA: 0x27AFB28
	|-HashSet<long>..ctor
	|
	|-RVA: 0x27B1B98 Offset: 0x27B1B98 VA: 0x27B1B98
	|-HashSet<object>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 12
	private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27A79A0 Offset: 0x27A79A0 VA: 0x27A79A0
	|-HashSet<BattleLogicTask.ACTIONTYPE>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x27A9A10 Offset: 0x27A9A10 VA: 0x27A9A10
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x27ABA80 Offset: 0x27ABA80 VA: 0x27ABA80
	|-HashSet<CombineResultEffectComponent.Kind>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x27ADAF0 Offset: 0x27ADAF0 VA: 0x27ADAF0
	|-HashSet<int>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x27AFB60 Offset: 0x27AFB60 VA: 0x27AFB60
	|-HashSet<long>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x27B1BD0 Offset: 0x27B1BD0 VA: 0x27B1BD0
	|-HashSet<object>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 5
	private bool System.Collections.Generic.ICollection<T>.get_IsReadOnly() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27A7A08 Offset: 0x27A7A08 VA: 0x27A7A08
	|-HashSet<BattleLogicTask.ACTIONTYPE>.System.Collections.Generic.ICollection<T>.get_IsReadOnly
	|
	|-RVA: 0x27A9A78 Offset: 0x27A9A78 VA: 0x27A9A78
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.System.Collections.Generic.ICollection<T>.get_IsReadOnly
	|
	|-RVA: 0x27ABAE8 Offset: 0x27ABAE8 VA: 0x27ABAE8
	|-HashSet<CombineResultEffectComponent.Kind>.System.Collections.Generic.ICollection<T>.get_IsReadOnly
	|
	|-RVA: 0x27ADB58 Offset: 0x27ADB58 VA: 0x27ADB58
	|-HashSet<int>.System.Collections.Generic.ICollection<T>.get_IsReadOnly
	|
	|-RVA: 0x27AFBC8 Offset: 0x27AFBC8 VA: 0x27AFBC8
	|-HashSet<long>.System.Collections.Generic.ICollection<T>.get_IsReadOnly
	|
	|-RVA: 0x27B1C38 Offset: 0x27B1C38 VA: 0x27B1C38
	|-HashSet<object>.System.Collections.Generic.ICollection<T>.get_IsReadOnly
	*/

	// RVA: -1 Offset: -1 Slot: 9
	private void System.Collections.Generic.ICollection<T>.CopyTo(T[] array, int index) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27A7A10 Offset: 0x27A7A10 VA: 0x27A7A10
	|-HashSet<BattleLogicTask.ACTIONTYPE>.System.Collections.Generic.ICollection<T>.CopyTo
	|
	|-RVA: 0x27A9A80 Offset: 0x27A9A80 VA: 0x27A9A80
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.System.Collections.Generic.ICollection<T>.CopyTo
	|
	|-RVA: 0x27ABAF0 Offset: 0x27ABAF0 VA: 0x27ABAF0
	|-HashSet<CombineResultEffectComponent.Kind>.System.Collections.Generic.ICollection<T>.CopyTo
	|
	|-RVA: 0x27ADB60 Offset: 0x27ADB60 VA: 0x27ADB60
	|-HashSet<int>.System.Collections.Generic.ICollection<T>.CopyTo
	|
	|-RVA: 0x27AFBD0 Offset: 0x27AFBD0 VA: 0x27AFBD0
	|-HashSet<long>.System.Collections.Generic.ICollection<T>.CopyTo
	|
	|-RVA: 0x27B1C40 Offset: 0x27B1C40 VA: 0x27B1C40
	|-HashSet<object>.System.Collections.Generic.ICollection<T>.CopyTo
	*/

	// RVA: -1 Offset: -1 Slot: 6
	private void System.Collections.Generic.ICollection<T>.Add(T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27A7A64 Offset: 0x27A7A64 VA: 0x27A7A64
	|-HashSet<BattleLogicTask.ACTIONTYPE>.System.Collections.Generic.ICollection<T>.Add
	|
	|-RVA: 0x27A9AD4 Offset: 0x27A9AD4 VA: 0x27A9AD4
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.System.Collections.Generic.ICollection<T>.Add
	|
	|-RVA: 0x27ABB44 Offset: 0x27ABB44 VA: 0x27ABB44
	|-HashSet<CombineResultEffectComponent.Kind>.System.Collections.Generic.ICollection<T>.Add
	|
	|-RVA: 0x27ADBB4 Offset: 0x27ADBB4 VA: 0x27ADBB4
	|-HashSet<int>.System.Collections.Generic.ICollection<T>.Add
	|
	|-RVA: 0x27AFC24 Offset: 0x27AFC24 VA: 0x27AFC24
	|-HashSet<long>.System.Collections.Generic.ICollection<T>.Add
	|
	|-RVA: 0x27B1C94 Offset: 0x27B1C94 VA: 0x27B1C94
	|-HashSet<object>.System.Collections.Generic.ICollection<T>.Add
	*/

	// RVA: -1 Offset: -1 Slot: 11
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27A7AB0 Offset: 0x27A7AB0 VA: 0x27A7AB0
	|-HashSet<BattleLogicTask.ACTIONTYPE>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x27A9B20 Offset: 0x27A9B20 VA: 0x27A9B20
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x27ABB90 Offset: 0x27ABB90 VA: 0x27ABB90
	|-HashSet<CombineResultEffectComponent.Kind>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x27ADC00 Offset: 0x27ADC00 VA: 0x27ADC00
	|-HashSet<int>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x27AFC70 Offset: 0x27AFC70 VA: 0x27AFC70
	|-HashSet<long>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x27B1CE0 Offset: 0x27B1CE0 VA: 0x27B1CE0
	|-HashSet<object>.System.Collections.IEnumerable.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public int get_Count() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27B1D48 Offset: 0x27B1D48 VA: 0x27B1D48
	|-HashSet<BattleBuffData.BuffData>.get_Count
	|-HashSet<object>.get_Count
	|-HashSet<string>.get_Count
	|-HashSet<UIPanel>.get_Count
	|-HashSet<Product>.get_Count
	|-HashSet<ProductDefinition>.get_Count
	|-HashSet<Text>.get_Count
	|
	|-RVA: 0x27A7B18 Offset: 0x27A7B18 VA: 0x27A7B18
	|-HashSet<BattleLogicTask.ACTIONTYPE>.get_Count
	|
	|-RVA: 0x27A9B88 Offset: 0x27A9B88 VA: 0x27A9B88
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.get_Count
	|
	|-RVA: 0x27ABBF8 Offset: 0x27ABBF8 VA: 0x27ABBF8
	|-HashSet<CombineResultEffectComponent.Kind>.get_Count
	|
	|-RVA: 0x27ADC68 Offset: 0x27ADC68 VA: 0x27ADC68
	|-HashSet<int>.get_Count
	|
	|-RVA: 0x27AFCD8 Offset: 0x27AFCD8 VA: 0x27AFCD8
	|-HashSet<long>.get_Count
	*/

	// RVA: -1 Offset: -1
	private void Init(int capacity, IEqualityComparer<T> comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27A7B20 Offset: 0x27A7B20 VA: 0x27A7B20
	|-HashSet<BattleLogicTask.ACTIONTYPE>.Init
	|
	|-RVA: 0x27A9B90 Offset: 0x27A9B90 VA: 0x27A9B90
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.Init
	|
	|-RVA: 0x27ABC00 Offset: 0x27ABC00 VA: 0x27ABC00
	|-HashSet<CombineResultEffectComponent.Kind>.Init
	|
	|-RVA: 0x27ADC70 Offset: 0x27ADC70 VA: 0x27ADC70
	|-HashSet<int>.Init
	|
	|-RVA: 0x27AFCE0 Offset: 0x27AFCE0 VA: 0x27AFCE0
	|-HashSet<long>.Init
	|
	|-RVA: 0x27B1D50 Offset: 0x27B1D50 VA: 0x27B1D50
	|-HashSet<object>.Init
	*/

	// RVA: -1 Offset: -1
	private void InitArrays(int size) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27A7CB0 Offset: 0x27A7CB0 VA: 0x27A7CB0
	|-HashSet<BattleLogicTask.ACTIONTYPE>.InitArrays
	|
	|-RVA: 0x27A9D20 Offset: 0x27A9D20 VA: 0x27A9D20
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.InitArrays
	|
	|-RVA: 0x27ABD90 Offset: 0x27ABD90 VA: 0x27ABD90
	|-HashSet<CombineResultEffectComponent.Kind>.InitArrays
	|
	|-RVA: 0x27ADE00 Offset: 0x27ADE00 VA: 0x27ADE00
	|-HashSet<int>.InitArrays
	|
	|-RVA: 0x27AFE70 Offset: 0x27AFE70 VA: 0x27AFE70
	|-HashSet<long>.InitArrays
	|
	|-RVA: 0x27B1EE0 Offset: 0x27B1EE0 VA: 0x27B1EE0
	|-HashSet<object>.InitArrays
	*/

	// RVA: -1 Offset: -1
	private bool SlotsContainsAt(int index, int hash, T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27A7DD4 Offset: 0x27A7DD4 VA: 0x27A7DD4
	|-HashSet<BattleLogicTask.ACTIONTYPE>.SlotsContainsAt
	|
	|-RVA: 0x27A9E44 Offset: 0x27A9E44 VA: 0x27A9E44
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.SlotsContainsAt
	|
	|-RVA: 0x27ABEB4 Offset: 0x27ABEB4 VA: 0x27ABEB4
	|-HashSet<CombineResultEffectComponent.Kind>.SlotsContainsAt
	|
	|-RVA: 0x27ADF24 Offset: 0x27ADF24 VA: 0x27ADF24
	|-HashSet<int>.SlotsContainsAt
	|
	|-RVA: 0x27AFF94 Offset: 0x27AFF94 VA: 0x27AFF94
	|-HashSet<long>.SlotsContainsAt
	|
	|-RVA: 0x27B2004 Offset: 0x27B2004 VA: 0x27B2004
	|-HashSet<object>.SlotsContainsAt
	*/

	// RVA: -1 Offset: -1
	public void CopyTo(T[] array) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27A7FBC Offset: 0x27A7FBC VA: 0x27A7FBC
	|-HashSet<BattleLogicTask.ACTIONTYPE>.CopyTo
	|
	|-RVA: 0x27AA02C Offset: 0x27AA02C VA: 0x27AA02C
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.CopyTo
	|
	|-RVA: 0x27AC09C Offset: 0x27AC09C VA: 0x27AC09C
	|-HashSet<CombineResultEffectComponent.Kind>.CopyTo
	|
	|-RVA: 0x27AE10C Offset: 0x27AE10C VA: 0x27AE10C
	|-HashSet<int>.CopyTo
	|
	|-RVA: 0x27B017C Offset: 0x27B017C VA: 0x27B017C
	|-HashSet<long>.CopyTo
	|
	|-RVA: 0x27B2234 Offset: 0x27B2234 VA: 0x27B2234
	|-HashSet<object>.CopyTo
	|-HashSet<UIPanel>.CopyTo
	*/

	// RVA: -1 Offset: -1 Slot: 15
	public void CopyTo(T[] array, int index) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27A8014 Offset: 0x27A8014 VA: 0x27A8014
	|-HashSet<BattleLogicTask.ACTIONTYPE>.CopyTo
	|
	|-RVA: 0x27AA084 Offset: 0x27AA084 VA: 0x27AA084
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.CopyTo
	|
	|-RVA: 0x27AC0F4 Offset: 0x27AC0F4 VA: 0x27AC0F4
	|-HashSet<CombineResultEffectComponent.Kind>.CopyTo
	|
	|-RVA: 0x27AE164 Offset: 0x27AE164 VA: 0x27AE164
	|-HashSet<int>.CopyTo
	|
	|-RVA: 0x27B01D4 Offset: 0x27B01D4 VA: 0x27B01D4
	|-HashSet<long>.CopyTo
	|
	|-RVA: 0x27B228C Offset: 0x27B228C VA: 0x27B228C
	|-HashSet<object>.CopyTo
	*/

	// RVA: -1 Offset: -1
	public void CopyTo(T[] array, int index, int count) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27A8078 Offset: 0x27A8078 VA: 0x27A8078
	|-HashSet<BattleLogicTask.ACTIONTYPE>.CopyTo
	|
	|-RVA: 0x27AA0E8 Offset: 0x27AA0E8 VA: 0x27AA0E8
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.CopyTo
	|
	|-RVA: 0x27AC158 Offset: 0x27AC158 VA: 0x27AC158
	|-HashSet<CombineResultEffectComponent.Kind>.CopyTo
	|
	|-RVA: 0x27AE1C8 Offset: 0x27AE1C8 VA: 0x27AE1C8
	|-HashSet<int>.CopyTo
	|
	|-RVA: 0x27B0238 Offset: 0x27B0238 VA: 0x27B0238
	|-HashSet<long>.CopyTo
	|
	|-RVA: 0x27B22F0 Offset: 0x27B22F0 VA: 0x27B22F0
	|-HashSet<object>.CopyTo
	*/
