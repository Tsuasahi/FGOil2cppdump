	private static void .cctor() { }

	// RVA: 0x22BA898 Offset: 0x22BA898 VA: 0x22BA898 Slot: 31
	public override void Update() { }

	// RVA: 0x22BA8D4 Offset: 0x22BA8D4 VA: 0x22BA8D4 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x22BAC04 Offset: 0x22BAC04 VA: 0x22BAC04 Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Client
internal class TlsServerHello : HandshakeMessage // TypeDefIndex: 1935
{
	// Fields
	private SecurityCompressionType compressionMethod; // 0x40
	private byte[] random; // 0x48
	private byte[] sessionId; // 0x50
	private CipherSuite cipherSuite; // 0x58

	// Methods

	// RVA: 0x22BADF0 Offset: 0x22BADF0 VA: 0x22BADF0
	public void .ctor(Context context, byte[] buffer) { }

	// RVA: 0x22BAE24 Offset: 0x22BAE24 VA: 0x22BAE24 Slot: 31
	public override void Update() { }

	// RVA: 0x22BB0D8 Offset: 0x22BB0D8 VA: 0x22BB0D8 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x22BB0E8 Offset: 0x22BB0E8 VA: 0x22BB0E8 Slot: 29
	protected override void ProcessAsTls1() { }

	// RVA: 0x22BB31C Offset: 0x22BB31C VA: 0x22BB31C
	private void processProtocol(short protocol) { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Client
internal class TlsServerHelloDone : HandshakeMessage // TypeDefIndex: 1936
{
	// Methods

	// RVA: 0x22BB4BC Offset: 0x22BB4BC VA: 0x22BB4BC
	public void .ctor(Context context, byte[] buffer) { }

	// RVA: 0x22BB4F0 Offset: 0x22BB4F0 VA: 0x22BB4F0 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x22BB4F4 Offset: 0x22BB4F4 VA: 0x22BB4F4 Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Client
internal class TlsServerKeyExchange : HandshakeMessage // TypeDefIndex: 1937
{
	// Fields
	private RSAParameters rsaParams; // 0x40
	private byte[] signedParams; // 0x80

	// Methods

	// RVA: 0x22BB4F8 Offset: 0x22BB4F8 VA: 0x22BB4F8
	public void .ctor(Context context, byte[] buffer) { }

	// RVA: 0x22BB750 Offset: 0x22BB750 VA: 0x22BB750 Slot: 31
	public override void Update() { }

	// RVA: 0x22BB868 Offset: 0x22BB868 VA: 0x22BB868 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x22BB878 Offset: 0x22BB878 VA: 0x22BB878 Slot: 29
	protected override void ProcessAsTls1() { }

	// RVA: 0x22BB530 Offset: 0x22BB530 VA: 0x22BB530
	private void verifySignature() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsClientCertificate : HandshakeMessage // TypeDefIndex: 1938
{
	// Fields
	private X509CertificateCollection clientCertificates; // 0x40

	// Methods

	// RVA: 0x22BBC5C Offset: 0x22BBC5C VA: 0x22BBC5C
	public void .ctor(Context context, byte[] buffer) { }

	// RVA: 0x22BBC90 Offset: 0x22BBC90 VA: 0x22BBC90 Slot: 31
	public override void Update() { }

	// RVA: 0x22BBEBC Offset: 0x22BBEBC VA: 0x22BBEBC Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x22BBECC Offset: 0x22BBECC VA: 0x22BBECC Slot: 29
	protected override void ProcessAsTls1() { }

	// RVA: 0x22BC980 Offset: 0x22BC980 VA: 0x22BC980
	private bool checkCertificateUsage(X509Certificate cert) { }

	// RVA: 0x22BC0B8 Offset: 0x22BC0B8 VA: 0x22BC0B8
	private void validateCertificates(X509CertificateCollection certificates) { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsClientCertificateVerify : HandshakeMessage // TypeDefIndex: 1939
{
	// Methods

	// RVA: 0x22BCCF4 Offset: 0x22BCCF4 VA: 0x22BCCF4
	public void .ctor(Context context, byte[] buffer) { }

	// RVA: 0x22BCD28 Offset: 0x22BCD28 VA: 0x22BCD28 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x22BD0E0 Offset: 0x22BD0E0 VA: 0x22BD0E0 Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsClientFinished : HandshakeMessage // TypeDefIndex: 1940
{
	// Methods

	// RVA: 0x22BD324 Offset: 0x22BD324 VA: 0x22BD324
	public void .ctor(Context context, byte[] buffer) { }

	// RVA: 0x22BD358 Offset: 0x22BD358 VA: 0x22BD358 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x22BD5A0 Offset: 0x22BD5A0 VA: 0x22BD5A0 Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsClientHello : HandshakeMessage // TypeDefIndex: 1941
{
	// Fields
	private byte[] random; // 0x40
	private byte[] sessionId; // 0x48
	private short[] cipherSuites; // 0x50
	private byte[] compressionMethods; // 0x58

	// Methods

	// RVA: 0x22BD788 Offset: 0x22BD788 VA: 0x22BD788
	public void .ctor(Context context, byte[] buffer) { }

	// RVA: 0x22BD7BC Offset: 0x22BD7BC VA: 0x22BD7BC Slot: 31
	public override void Update() { }

	// RVA: 0x22BDA60 Offset: 0x22BDA60 VA: 0x22BDA60 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x22BDA70 Offset: 0x22BDA70 VA: 0x22BDA70 Slot: 29
	protected override void ProcessAsTls1() { }

	// RVA: 0x22BDC38 Offset: 0x22BDC38 VA: 0x22BDC38
	private void processProtocol(short protocol) { }

	// RVA: 0x22BD858 Offset: 0x22BD858 VA: 0x22BD858
	private void selectCipherSuite() { }

	// RVA: 0x22BDA2C Offset: 0x22BDA2C VA: 0x22BDA2C
	private void selectCompressionMethod() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsClientKeyExchange : HandshakeMessage // TypeDefIndex: 1942
{
	// Methods

	// RVA: 0x22BDDD8 Offset: 0x22BDDD8 VA: 0x22BDDD8
	public void .ctor(Context context, byte[] buffer) { }

	// RVA: 0x22BDE0C Offset: 0x22BDE0C VA: 0x22BDE0C Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x22BE144 Offset: 0x22BE144 VA: 0x22BE144 Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsServerCertificate : HandshakeMessage // TypeDefIndex: 1943
{
	// Methods

	// RVA: 0x22BE45C Offset: 0x22BE45C VA: 0x22BE45C
	public void .ctor(Context context) { }

	// RVA: 0x22BE48C Offset: 0x22BE48C VA: 0x22BE48C Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x22BE49C Offset: 0x22BE49C VA: 0x22BE49C Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsServerCertificateRequest : HandshakeMessage // TypeDefIndex: 1944
{
	// Methods

	// RVA: 0x22BE87C Offset: 0x22BE87C VA: 0x22BE87C
	public void .ctor(Context context) { }

	// RVA: 0x22BE8AC Offset: 0x22BE8AC VA: 0x22BE8AC Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x22BE8BC Offset: 0x22BE8BC VA: 0x22BE8BC Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsServerFinished : HandshakeMessage // TypeDefIndex: 1945
{
	// Fields
	private static byte[] Ssl3Marker; // 0x0

	// Methods

	// RVA: 0x22BEC5C Offset: 0x22BEC5C VA: 0x22BEC5C
	public void .ctor(Context context) { }

	// RVA: 0x22BEC8C Offset: 0x22BEC8C VA: 0x22BEC8C
	private static void .cctor() { }

	// RVA: 0x22BED08 Offset: 0x22BED08 VA: 0x22BED08 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x22BEF2C Offset: 0x22BEF2C VA: 0x22BEF2C Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsServerHello : HandshakeMessage // TypeDefIndex: 1946
{
	// Fields
	private int unixTime; // 0x40
	private byte[] random; // 0x48

	// Methods

	// RVA: 0x22BF09C Offset: 0x22BF09C VA: 0x22BF09C
	public void .ctor(Context context) { }

	// RVA: 0x22BF0CC Offset: 0x22BF0CC VA: 0x22BF0CC Slot: 31
	public override void Update() { }

	// RVA: 0x22BF31C Offset: 0x22BF31C VA: 0x22BF31C Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x22BF32C Offset: 0x22BF32C VA: 0x22BF32C Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsServerHelloDone : HandshakeMessage // TypeDefIndex: 1947
{
	// Methods

	// RVA: 0x22BF4F8 Offset: 0x22BF4F8 VA: 0x22BF4F8
	public void .ctor(Context context) { }

	// RVA: 0x22BF528 Offset: 0x22BF528 VA: 0x22BF528 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x22BF52C Offset: 0x22BF52C VA: 0x22BF52C Slot: 29
	protected override void ProcessAsTls1() { }
}

// Namespace: Mono.Security.Protocol.Tls.Handshake.Server
internal class TlsServerKeyExchange : HandshakeMessage // TypeDefIndex: 1948
{
	// Methods

	// RVA: 0x22BF530 Offset: 0x22BF530 VA: 0x22BF530
	public void .ctor(Context context) { }

	// RVA: 0x22BF560 Offset: 0x22BF560 VA: 0x22BF560 Slot: 31
	public override void Update() { }

	// RVA: 0x22BF5C8 Offset: 0x22BF5C8 VA: 0x22BF5C8 Slot: 30
	protected override void ProcessAsSsl3() { }

	// RVA: 0x22BF5D8 Offset: 0x22BF5D8 VA: 0x22BF5D8 Slot: 29
	protected override void ProcessAsTls1() { }

	// RVA: 0x22BFCB4 Offset: 0x22BFCB4 VA: 0x22BFCB4
	private byte[] createSignature(RSA rsa, byte[] buffer) { }
}

// Namespace: Mono.Math.Prime
public sealed class PrimalityTest : MulticastDelegate // TypeDefIndex: 1949
{
	// Methods

	// RVA: 0x25E70E0 Offset: 0x25E70E0 VA: 0x25E70E0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x25E74CC Offset: 0x25E74CC VA: 0x25E74CC Slot: 11
	public virtual bool Invoke(BigInteger bi, ConfidenceFactor confidence) { }

	// RVA: 0x25E7898 Offset: 0x25E7898 VA: 0x25E7898 Slot: 12
	public virtual IAsyncResult BeginInvoke(BigInteger bi, ConfidenceFactor confidence, AsyncCallback callback, object object) { }

	// RVA: 0x25E7934 Offset: 0x25E7934 VA: 0x25E7934 Slot: 13
	public virtual bool EndInvoke(IAsyncResult result) { }
}

// Namespace: Mono.Security.Protocol.Tls
public sealed class CertificateValidationCallback : MulticastDelegate // TypeDefIndex: 1950
{
	// Methods

	// RVA: 0x25F5E80 Offset: 0x25F5E80 VA: 0x25F5E80
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x25F5E90 Offset: 0x25F5E90 VA: 0x25F5E90 Slot: 11
	public virtual bool Invoke(X509Certificate certificate, int[] certificateErrors) { }

	// RVA: 0x25F6254 Offset: 0x25F6254 VA: 0x25F6254 Slot: 12
	public virtual IAsyncResult BeginInvoke(X509Certificate certificate, int[] certificateErrors, AsyncCallback callback, object object) { }

	// RVA: 0x25F6284 Offset: 0x25F6284 VA: 0x25F6284 Slot: 13
	public virtual bool EndInvoke(IAsyncResult result) { }
}

// Namespace: Mono.Security.Protocol.Tls
public sealed class CertificateValidationCallback2 : MulticastDelegate // TypeDefIndex: 1951
{
	// Methods

	// RVA: 0x25F62C0 Offset: 0x25F62C0 VA: 0x25F62C0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x25F62D0 Offset: 0x25F62D0 VA: 0x25F62D0 Slot: 11
	public virtual ValidationResult Invoke(X509CertificateCollection collection) { }

	// RVA: 0x25F6674 Offset: 0x25F6674 VA: 0x25F6674 Slot: 12
	public virtual IAsyncResult BeginInvoke(X509CertificateCollection collection, AsyncCallback callback, object object) { }

	// RVA: 0x25F6698 Offset: 0x25F6698 VA: 0x25F6698 Slot: 13
	public virtual ValidationResult EndInvoke(IAsyncResult result) { }
}

// Namespace: Mono.Security.Protocol.Tls
public sealed class CertificateSelectionCallback : MulticastDelegate // TypeDefIndex: 1952
{
	// Methods

	// RVA: 0x25F5A1C Offset: 0x25F5A1C VA: 0x25F5A1C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x25F5A2C Offset: 0x25F5A2C VA: 0x25F5A2C Slot: 11
	public virtual X509Certificate Invoke(X509CertificateCollection clientCertificates, X509Certificate serverCertificate, string targetHost, X509CertificateCollection serverRequestedCertificates) { }

	// RVA: 0x25F5E40 Offset: 0x25F5E40 VA: 0x25F5E40 Slot: 12
	public virtual IAsyncResult BeginInvoke(X509CertificateCollection clientCertificates, X509Certificate serverCertificate, string targetHost, X509CertificateCollection serverRequestedCertificates, AsyncCallback callback, object object) { }

	// RVA: 0x25F5E74 Offset: 0x25F5E74 VA: 0x25F5E74 Slot: 13
	public virtual X509Certificate EndInvoke(IAsyncResult result) { }
}

// Namespace: Mono.Security.Protocol.Tls
public sealed class PrivateKeySelectionCallback : MulticastDelegate // TypeDefIndex: 1953
{
	// Methods

	// RVA: 0x22C02E8 Offset: 0x22C02E8 VA: 0x22C02E8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x22BF8F0 Offset: 0x22BF8F0 VA: 0x22BF8F0 Slot: 11
	public virtual AsymmetricAlgorithm Invoke(X509Certificate certificate, string targetHost) { }

	// RVA: 0x22C07F8 Offset: 0x22C07F8 VA: 0x22C07F8 Slot: 12
	public virtual IAsyncResult BeginInvoke(X509Certificate certificate, string targetHost, AsyncCallback callback, object object) { }

	// RVA: 0x22C0828 Offset: 0x22C0828 VA: 0x22C0828 Slot: 13
	public virtual AsymmetricAlgorithm EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xBD3E2C Offset: 0xBD3E2C VA: 0xBD3E2C
internal class <PrivateImplementationDetails> // TypeDefIndex: 1954
{
	// Fields
	internal static <PrivateImplementationDetails>.$ArrayType$3132 $$field-0 /*Metadata offset 0x77D3E0*/; // 0x0
	internal static <PrivateImplementationDetails>.$ArrayType$256 $$field-5 /*Metadata offset 0x77E01C*/; // 0xC3C
	internal static <PrivateImplementationDetails>.$ArrayType$20 $$field-6 /*Metadata offset 0x77E11C*/; // 0xD3C
	internal static <PrivateImplementationDetails>.$ArrayType$32 $$field-7 /*Metadata offset 0x77E130*/; // 0xD50
	internal static <PrivateImplementationDetails>.$ArrayType$48 $$field-8 /*Metadata offset 0x77E150*/; // 0xD70
	internal static <PrivateImplementationDetails>.$ArrayType$64 $$field-9 /*Metadata offset 0x77E180*/; // 0xDA0
	internal static <PrivateImplementationDetails>.$ArrayType$64 $$field-11 /*Metadata offset 0x77E1C0*/; // 0xDE0
	internal static <PrivateImplementationDetails>.$ArrayType$64 $$field-12 /*Metadata offset 0x77E200*/; // 0xE20
	internal static <PrivateImplementationDetails>.$ArrayType$64 $$field-13 /*Metadata offset 0x77E240*/; // 0xE60
	internal static <PrivateImplementationDetails>.$ArrayType$12 $$field-14 /*Metadata offset 0x77E280*/; // 0xEA0
	internal static <PrivateImplementationDetails>.$ArrayType$12 $$field-15 /*Metadata offset 0x77E28C*/; // 0xEAC
	internal static <PrivateImplementationDetails>.$ArrayType$12 $$field-16 /*Metadata offset 0x77E298*/; // 0xEB8
	internal static <PrivateImplementationDetails>.$ArrayType$16 $$field-17 /*Metadata offset 0x77E2A4*/; // 0xEC4
	internal static <PrivateImplementationDetails>.$ArrayType$4 $$field-21 /*Metadata offset 0x77E2B4*/; // 0xED4
	internal static <PrivateImplementationDetails>.$ArrayType$4 $$field-22 /*Metadata offset 0x77E2B8*/; // 0xED8
	internal static <PrivateImplementationDetails>.$ArrayType$4 $$field-23 /*Metadata offset 0x77E2BC*/; // 0xEDC
}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$3132 // TypeDefIndex: 1955
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$256 // TypeDefIndex: 1956
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$20 // TypeDefIndex: 1957
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$32 // TypeDefIndex: 1958
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$48 // TypeDefIndex: 1959
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$64 // TypeDefIndex: 1960
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$12 // TypeDefIndex: 1961
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$16 // TypeDefIndex: 1962
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$4 // TypeDefIndex: 1963
{}

// Namespace: 
internal class <Module> // TypeDefIndex: 1964
{}

// Namespace: System.Runtime.CompilerServices
[AttributeUsageAttribute] // RVA: 0xBD4378 Offset: 0xBD4378 VA: 0xBD4378
public sealed class ExtensionAttribute : Attribute // TypeDefIndex: 1965
{
	// Methods

	// RVA: 0x2B3CEA8 Offset: 0x2B3CEA8 VA: 0x2B3CEA8
	public void .ctor() { }
}

// Namespace: 
internal sealed class Locale // TypeDefIndex: 1966
{
	// Methods

	// RVA: 0x2B3A068 Offset: 0x2B3A068 VA: 0x2B3A068
	public static string GetText(string msg) { }

	// RVA: 0x2B3A06C Offset: 0x2B3A06C VA: 0x2B3A06C
	public static string GetText(string fmt, object[] args) { }
}

// Namespace: System
[AttributeUsageAttribute] // RVA: 0xBD438C Offset: 0xBD438C VA: 0xBD438C
internal class MonoTODOAttribute : Attribute // TypeDefIndex: 1967
{
	// Methods

	// RVA: 0x2B3CEA0 Offset: 0x2B3CEA0 VA: 0x2B3CEA0
	public void .ctor() { }
}

// Namespace: Mono.Security.Cryptography
public sealed class KeyBuilder // TypeDefIndex: 1968
{
	// Fields
	private static RandomNumberGenerator rng; // 0x0

	// Properties
	private static RandomNumberGenerator Rng { get; }

	// Methods

	// RVA: 0x2B3A0E4 Offset: 0x2B3A0E4 VA: 0x2B3A0E4
	private static RandomNumberGenerator get_Rng() { }

	// RVA: 0x2B3A154 Offset: 0x2B3A154 VA: 0x2B3A154
	public static byte[] Key(int size) { }

	// RVA: 0x2B3A1D4 Offset: 0x2B3A1D4 VA: 0x2B3A1D4
	public static byte[] IV(int size) { }
}

// Namespace: Mono.Security.Cryptography
internal abstract class SymmetricTransform : IDisposable, ICryptoTransform // TypeDefIndex: 1969
{
	// Fields
	protected SymmetricAlgorithm algo; // 0x10
	protected bool encrypt; // 0x18
	private int BlockSizeByte; // 0x1C
	private byte[] temp; // 0x20
	private byte[] temp2; // 0x28
	private byte[] workBuff; // 0x30
	private byte[] workout; // 0x38
	private int FeedBackByte; // 0x40
	private int FeedBackIter; // 0x44
	private bool m_disposed; // 0x48
	private bool lastBlock; // 0x49
	private RandomNumberGenerator _rng; // 0x50

	// Properties
	public virtual bool CanTransformMultipleBlocks { get; }
	public virtual bool CanReuseTransform { get; }
	public virtual int InputBlockSize { get; }
	public virtual int OutputBlockSize { get; }
	private bool KeepLastBlock { get; }

	// Methods

	// RVA: 0x2B3A254 Offset: 0x2B3A254 VA: 0x2B3A254
	public void .ctor(SymmetricAlgorithm symmAlgo, bool encryption, byte[] rgbIV) { }

	// RVA: 0x2B3A554 Offset: 0x2B3A554 VA: 0x2B3A554 Slot: 4
	private void System.IDisposable.Dispose() { }

	// RVA: 0x2B3A588 Offset: 0x2B3A588 VA: 0x2B3A588 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x2B3A608 Offset: 0x2B3A608 VA: 0x2B3A608 Slot: 11
	protected virtual void Dispose(bool disposing) { }

	// RVA: 0x2B3A668 Offset: 0x2B3A668 VA: 0x2B3A668 Slot: 12
	public virtual bool get_CanTransformMultipleBlocks() { }

	// RVA: 0x2B3A670 Offset: 0x2B3A670 VA: 0x2B3A670 Slot: 13
	public virtual bool get_CanReuseTransform() { }

	// RVA: 0x2B3A678 Offset: 0x2B3A678 VA: 0x2B3A678 Slot: 14
	public virtual int get_InputBlockSize() { }

	// RVA: 0x2B3A680 Offset: 0x2B3A680 VA: 0x2B3A680 Slot: 15
	public virtual int get_OutputBlockSize() { }

	// RVA: 0x2B3A688 Offset: 0x2B3A688 VA: 0x2B3A688 Slot: 16
	protected virtual void Transform(byte[] input, byte[] output) { }

	// RVA: -1 Offset: -1 Slot: 17
	protected abstract void ECB(byte[] input, byte[] output);

	// RVA: 0x2B3A85C Offset: 0x2B3A85C VA: 0x2B3A85C Slot: 18
	protected virtual void CBC(byte[] input, byte[] output) { }

	// RVA: 0x2B3AA38 Offset: 0x2B3AA38 VA: 0x2B3AA38 Slot: 19
	protected virtual void CFB(byte[] input, byte[] output) { }

	// RVA: 0x2B3AD00 Offset: 0x2B3AD00 VA: 0x2B3AD00 Slot: 20
	protected virtual void OFB(byte[] input, byte[] output) { }

	// RVA: 0x2B3AD74 Offset: 0x2B3AD74 VA: 0x2B3AD74 Slot: 21
	protected virtual void CTS(byte[] input, byte[] output) { }

	// RVA: 0x2B3ADE8 Offset: 0x2B3ADE8 VA: 0x2B3ADE8
	private void CheckInput(byte[] inputBuffer, int inputOffset, int inputCount) { }

	// RVA: 0x2B3AF34 Offset: 0x2B3AF34 VA: 0x2B3AF34 Slot: 22
	public virtual int TransformBlock(byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset) { }

	// RVA: 0x2B3B184 Offset: 0x2B3B184 VA: 0x2B3B184
	private bool get_KeepLastBlock() { }

	// RVA: 0x2B3B208 Offset: 0x2B3B208 VA: 0x2B3B208
	private int InternalTransformBlock(byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset) { }

	// RVA: 0x2B3B3DC Offset: 0x2B3B3DC VA: 0x2B3B3DC
	private void Random(byte[] buffer, int start, int length) { }

	// RVA: 0x2B3B4A0 Offset: 0x2B3B4A0 VA: 0x2B3B4A0
	private void ThrowBadPaddingException(PaddingMode padding, int length, int position) { }

	// RVA: 0x2B3B65C Offset: 0x2B3B65C VA: 0x2B3B65C
	private byte[] FinalEncrypt(byte[] inputBuffer, int inputOffset, int inputCount) { }

	// RVA: 0x2B3B9BC Offset: 0x2B3B9BC VA: 0x2B3B9BC
	private byte[] FinalDecrypt(byte[] inputBuffer, int inputOffset, int inputCount) { }

	// RVA: 0x2B3BD7C Offset: 0x2B3BD7C VA: 0x2B3BD7C Slot: 23
	public virtual byte[] TransformFinalBlock(byte[] inputBuffer, int inputOffset, int inputCount) { }
}

// Namespace: System.Collections.Generic
[Serializable]
public class HashSet<T> : ICollection<T>, IEnumerable<T>, IEnumerable, ISerializable, IDeserializationCallback // TypeDefIndex: 1970
{
	// Fields
	private const int INITIAL_SIZE = 10;
	private const float DEFAULT_LOAD_FACTOR = 0.9;
	private const int NO_SLOT = -1;
	private const int HASH_FLAG = -2147483648;
	private int[] table; // 0x0
	private HashSet.Link<T>[] links; // 0x0
	private T[] slots; // 0x0
	private int touched; // 0x0
	private int empty_slot; // 0x0
	private int count; // 0x0
	private int threshold; // 0x0
	private IEqualityComparer<T> comparer; // 0x0
	private SerializationInfo si; // 0x0
	private int generation; // 0x0

	// Properties
	private bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }
	public int Count { get; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x26A5894 Offset: 0x26A5894 VA: 0x26A5894
	|-HashSet<BattleBuffData.BuffData>..ctor
	|-HashSet<MyRoomListControl.MainItemInfo>..ctor
	|-HashSet<object>..ctor
	|-HashSet<string>..ctor
	|-HashSet<UIPanel>..ctor
	|-HashSet<UIRect>..ctor
	|-HashSet<AndroidJavaObject>..ctor
	|-HashSet<GameObject>..ctor
	|-HashSet<ProductDescription>..ctor
	|-HashSet<Product>..ctor
	|-HashSet<ProductDefinition>..ctor
	|-HashSet<IClippable>..ctor
	|-HashSet<Text>..ctor
	|-HashSet<WarBoardAIRoute.RouteData>..ctor
	|
	|-RVA: 0x269B664 Offset: 0x269B664 VA: 0x269B664
	|-HashSet<BattleLogicTask.ACTIONTYPE>..ctor
	|
	|-RVA: 0x269D6D4 Offset: 0x269D6D4 VA: 0x269D6D4
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>..ctor
	|
	|-RVA: 0x269F744 Offset: 0x269F744 VA: 0x269F744
	|-HashSet<CombineResultEffectComponent.Kind>..ctor
	|
	|-RVA: 0x26A17B4 Offset: 0x26A17B4 VA: 0x26A17B4
	|-HashSet<int>..ctor
	|
	|-RVA: 0x26A3824 Offset: 0x26A3824 VA: 0x26A3824
	|-HashSet<long>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(IEqualityComparer<T> comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x269B6CC Offset: 0x269B6CC VA: 0x269B6CC
	|-HashSet<BattleLogicTask.ACTIONTYPE>..ctor
	|
	|-RVA: 0x269D73C Offset: 0x269D73C VA: 0x269D73C
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>..ctor
	|
	|-RVA: 0x269F7AC Offset: 0x269F7AC VA: 0x269F7AC
	|-HashSet<CombineResultEffectComponent.Kind>..ctor
	|
	|-RVA: 0x26A181C Offset: 0x26A181C VA: 0x26A181C
	|-HashSet<int>..ctor
	|
	|-RVA: 0x26A388C Offset: 0x26A388C VA: 0x26A388C
	|-HashSet<long>..ctor
	|
	|-RVA: 0x26A58FC Offset: 0x26A58FC VA: 0x26A58FC
	|-HashSet<object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(IEnumerable<T> collection) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x269B740 Offset: 0x269B740 VA: 0x269B740
	|-HashSet<BattleLogicTask.ACTIONTYPE>..ctor
	|
	|-RVA: 0x269D7B0 Offset: 0x269D7B0 VA: 0x269D7B0
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>..ctor
	|
	|-RVA: 0x269F820 Offset: 0x269F820 VA: 0x269F820
	|-HashSet<CombineResultEffectComponent.Kind>..ctor
	|
	|-RVA: 0x26A1890 Offset: 0x26A1890 VA: 0x26A1890
	|-HashSet<int>..ctor
	|
	|-RVA: 0x26A3900 Offset: 0x26A3900 VA: 0x26A3900
	|-HashSet<long>..ctor
	|
	|-RVA: 0x26A5970 Offset: 0x26A5970 VA: 0x26A5970
	|-HashSet<object>..ctor
	|-HashSet<string>..ctor
	|-HashSet<ProductDefinition>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(IEnumerable<T> collection, IEqualityComparer<T> comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x269B790 Offset: 0x269B790 VA: 0x269B790
	|-HashSet<BattleLogicTask.ACTIONTYPE>..ctor
	|
	|-RVA: 0x269D800 Offset: 0x269D800 VA: 0x269D800
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>..ctor
	|
	|-RVA: 0x269F870 Offset: 0x269F870 VA: 0x269F870
	|-HashSet<CombineResultEffectComponent.Kind>..ctor
	|
	|-RVA: 0x26A18E0 Offset: 0x26A18E0 VA: 0x26A18E0
	|-HashSet<int>..ctor
	|
	|-RVA: 0x26A3950 Offset: 0x26A3950 VA: 0x26A3950
	|-HashSet<long>..ctor
	|
	|-RVA: 0x26A59C0 Offset: 0x26A59C0 VA: 0x26A59C0
	|-HashSet<object>..ctor
	*/

	// RVA: -1 Offset: -1
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x269BBA8 Offset: 0x269BBA8 VA: 0x269BBA8
	|-HashSet<BattleLogicTask.ACTIONTYPE>..ctor
	|
	|-RVA: 0x269DC18 Offset: 0x269DC18 VA: 0x269DC18
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>..ctor
	|
	|-RVA: 0x269FC88 Offset: 0x269FC88 VA: 0x269FC88
	|-HashSet<CombineResultEffectComponent.Kind>..ctor
	|
	|-RVA: 0x26A1CF8 Offset: 0x26A1CF8 VA: 0x26A1CF8
	|-HashSet<int>..ctor
	|
	|-RVA: 0x26A3D68 Offset: 0x26A3D68 VA: 0x26A3D68
	|-HashSet<long>..ctor
	|
	|-RVA: 0x26A5DD8 Offset: 0x26A5DD8 VA: 0x26A5DD8
	|-HashSet<object>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 12
	private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x269BBE0 Offset: 0x269BBE0 VA: 0x269BBE0
	|-HashSet<BattleLogicTask.ACTIONTYPE>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x269DC50 Offset: 0x269DC50 VA: 0x269DC50
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x269FCC0 Offset: 0x269FCC0 VA: 0x269FCC0
	|-HashSet<CombineResultEffectComponent.Kind>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x26A1D30 Offset: 0x26A1D30 VA: 0x26A1D30
	|-HashSet<int>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x26A3DA0 Offset: 0x26A3DA0 VA: 0x26A3DA0
	|-HashSet<long>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x26A5E10 Offset: 0x26A5E10 VA: 0x26A5E10
	|-HashSet<object>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 5
	private bool System.Collections.Generic.ICollection<T>.get_IsReadOnly() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x269BC48 Offset: 0x269BC48 VA: 0x269BC48
	|-HashSet<BattleLogicTask.ACTIONTYPE>.System.Collections.Generic.ICollection<T>.get_IsReadOnly
	|
	|-RVA: 0x269DCB8 Offset: 0x269DCB8 VA: 0x269DCB8
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.System.Collections.Generic.ICollection<T>.get_IsReadOnly
	|
	|-RVA: 0x269FD28 Offset: 0x269FD28 VA: 0x269FD28
	|-HashSet<CombineResultEffectComponent.Kind>.System.Collections.Generic.ICollection<T>.get_IsReadOnly
	|
	|-RVA: 0x26A1D98 Offset: 0x26A1D98 VA: 0x26A1D98
	|-HashSet<int>.System.Collections.Generic.ICollection<T>.get_IsReadOnly
	|
	|-RVA: 0x26A3E08 Offset: 0x26A3E08 VA: 0x26A3E08
	|-HashSet<long>.System.Collections.Generic.ICollection<T>.get_IsReadOnly
	|
	|-RVA: 0x26A5E78 Offset: 0x26A5E78 VA: 0x26A5E78
	|-HashSet<object>.System.Collections.Generic.ICollection<T>.get_IsReadOnly
	*/

	// RVA: -1 Offset: -1 Slot: 9
	private void System.Collections.Generic.ICollection<T>.CopyTo(T[] array, int index) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x269BC50 Offset: 0x269BC50 VA: 0x269BC50
	|-HashSet<BattleLogicTask.ACTIONTYPE>.System.Collections.Generic.ICollection<T>.CopyTo
	|
	|-RVA: 0x269DCC0 Offset: 0x269DCC0 VA: 0x269DCC0
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.System.Collections.Generic.ICollection<T>.CopyTo
	|
	|-RVA: 0x269FD30 Offset: 0x269FD30 VA: 0x269FD30
	|-HashSet<CombineResultEffectComponent.Kind>.System.Collections.Generic.ICollection<T>.CopyTo
	|
	|-RVA: 0x26A1DA0 Offset: 0x26A1DA0 VA: 0x26A1DA0
	|-HashSet<int>.System.Collections.Generic.ICollection<T>.CopyTo
	|
	|-RVA: 0x26A3E10 Offset: 0x26A3E10 VA: 0x26A3E10
	|-HashSet<long>.System.Collections.Generic.ICollection<T>.CopyTo
	|
	|-RVA: 0x26A5E80 Offset: 0x26A5E80 VA: 0x26A5E80
	|-HashSet<object>.System.Collections.Generic.ICollection<T>.CopyTo
	*/

	// RVA: -1 Offset: -1 Slot: 6
	private void System.Collections.Generic.ICollection<T>.Add(T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x269BCA4 Offset: 0x269BCA4 VA: 0x269BCA4
	|-HashSet<BattleLogicTask.ACTIONTYPE>.System.Collections.Generic.ICollection<T>.Add
	|
	|-RVA: 0x269DD14 Offset: 0x269DD14 VA: 0x269DD14
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.System.Collections.Generic.ICollection<T>.Add
	|
	|-RVA: 0x269FD84 Offset: 0x269FD84 VA: 0x269FD84
	|-HashSet<CombineResultEffectComponent.Kind>.System.Collections.Generic.ICollection<T>.Add
	|
	|-RVA: 0x26A1DF4 Offset: 0x26A1DF4 VA: 0x26A1DF4
	|-HashSet<int>.System.Collections.Generic.ICollection<T>.Add
	|
	|-RVA: 0x26A3E64 Offset: 0x26A3E64 VA: 0x26A3E64
	|-HashSet<long>.System.Collections.Generic.ICollection<T>.Add
	|
	|-RVA: 0x26A5ED4 Offset: 0x26A5ED4 VA: 0x26A5ED4
	|-HashSet<object>.System.Collections.Generic.ICollection<T>.Add
	*/

	// RVA: -1 Offset: -1 Slot: 11
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x269BCF0 Offset: 0x269BCF0 VA: 0x269BCF0
	|-HashSet<BattleLogicTask.ACTIONTYPE>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x269DD60 Offset: 0x269DD60 VA: 0x269DD60
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x269FDD0 Offset: 0x269FDD0 VA: 0x269FDD0
	|-HashSet<CombineResultEffectComponent.Kind>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x26A1E40 Offset: 0x26A1E40 VA: 0x26A1E40
	|-HashSet<int>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x26A3EB0 Offset: 0x26A3EB0 VA: 0x26A3EB0
	|-HashSet<long>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x26A5F20 Offset: 0x26A5F20 VA: 0x26A5F20
	|-HashSet<object>.System.Collections.IEnumerable.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public int get_Count() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x26A5F88 Offset: 0x26A5F88 VA: 0x26A5F88
	|-HashSet<BattleBuffData.BuffData>.get_Count
	|-HashSet<object>.get_Count
	|-HashSet<string>.get_Count
	|-HashSet<UIPanel>.get_Count
	|-HashSet<Product>.get_Count
	|-HashSet<ProductDefinition>.get_Count
	|-HashSet<Text>.get_Count
	|
	|-RVA: 0x269BD58 Offset: 0x269BD58 VA: 0x269BD58
	|-HashSet<BattleLogicTask.ACTIONTYPE>.get_Count
	|
	|-RVA: 0x269DDC8 Offset: 0x269DDC8 VA: 0x269DDC8
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.get_Count
	|
	|-RVA: 0x269FE38 Offset: 0x269FE38 VA: 0x269FE38
	|-HashSet<CombineResultEffectComponent.Kind>.get_Count
	|
	|-RVA: 0x26A1EA8 Offset: 0x26A1EA8 VA: 0x26A1EA8
	|-HashSet<int>.get_Count
	|
	|-RVA: 0x26A3F18 Offset: 0x26A3F18 VA: 0x26A3F18
	|-HashSet<long>.get_Count
	*/

	// RVA: -1 Offset: -1
	private void Init(int capacity, IEqualityComparer<T> comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x269BD60 Offset: 0x269BD60 VA: 0x269BD60
	|-HashSet<BattleLogicTask.ACTIONTYPE>.Init
	|
	|-RVA: 0x269DDD0 Offset: 0x269DDD0 VA: 0x269DDD0
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.Init
	|
	|-RVA: 0x269FE40 Offset: 0x269FE40 VA: 0x269FE40
	|-HashSet<CombineResultEffectComponent.Kind>.Init
	|
	|-RVA: 0x26A1EB0 Offset: 0x26A1EB0 VA: 0x26A1EB0
	|-HashSet<int>.Init
	|
	|-RVA: 0x26A3F20 Offset: 0x26A3F20 VA: 0x26A3F20
	|-HashSet<long>.Init
	|
	|-RVA: 0x26A5F90 Offset: 0x26A5F90 VA: 0x26A5F90
	|-HashSet<object>.Init
	*/

	// RVA: -1 Offset: -1
	private void InitArrays(int size) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x269BEF0 Offset: 0x269BEF0 VA: 0x269BEF0
	|-HashSet<BattleLogicTask.ACTIONTYPE>.InitArrays
	|
	|-RVA: 0x269DF60 Offset: 0x269DF60 VA: 0x269DF60
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.InitArrays
	|
	|-RVA: 0x269FFD0 Offset: 0x269FFD0 VA: 0x269FFD0
	|-HashSet<CombineResultEffectComponent.Kind>.InitArrays
	|
	|-RVA: 0x26A2040 Offset: 0x26A2040 VA: 0x26A2040
	|-HashSet<int>.InitArrays
	|
	|-RVA: 0x26A40B0 Offset: 0x26A40B0 VA: 0x26A40B0
	|-HashSet<long>.InitArrays
	|
	|-RVA: 0x26A6120 Offset: 0x26A6120 VA: 0x26A6120
	|-HashSet<object>.InitArrays
	*/

	// RVA: -1 Offset: -1
	private bool SlotsContainsAt(int index, int hash, T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x269C014 Offset: 0x269C014 VA: 0x269C014
	|-HashSet<BattleLogicTask.ACTIONTYPE>.SlotsContainsAt
	|
	|-RVA: 0x269E084 Offset: 0x269E084 VA: 0x269E084
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.SlotsContainsAt
	|
	|-RVA: 0x26A00F4 Offset: 0x26A00F4 VA: 0x26A00F4
	|-HashSet<CombineResultEffectComponent.Kind>.SlotsContainsAt
	|
	|-RVA: 0x26A2164 Offset: 0x26A2164 VA: 0x26A2164
	|-HashSet<int>.SlotsContainsAt
	|
	|-RVA: 0x26A41D4 Offset: 0x26A41D4 VA: 0x26A41D4
	|-HashSet<long>.SlotsContainsAt
	|
	|-RVA: 0x26A6244 Offset: 0x26A6244 VA: 0x26A6244
	|-HashSet<object>.SlotsContainsAt
	*/

	// RVA: -1 Offset: -1
	public void CopyTo(T[] array) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x269C1FC Offset: 0x269C1FC VA: 0x269C1FC
	|-HashSet<BattleLogicTask.ACTIONTYPE>.CopyTo
	|
	|-RVA: 0x269E26C Offset: 0x269E26C VA: 0x269E26C
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.CopyTo
	|
	|-RVA: 0x26A02DC Offset: 0x26A02DC VA: 0x26A02DC
	|-HashSet<CombineResultEffectComponent.Kind>.CopyTo
	|
	|-RVA: 0x26A234C Offset: 0x26A234C VA: 0x26A234C
	|-HashSet<int>.CopyTo
	|
	|-RVA: 0x26A43BC Offset: 0x26A43BC VA: 0x26A43BC
	|-HashSet<long>.CopyTo
	|
	|-RVA: 0x26A6474 Offset: 0x26A6474 VA: 0x26A6474
	|-HashSet<object>.CopyTo
	|-HashSet<UIPanel>.CopyTo
	*/

	// RVA: -1 Offset: -1 Slot: 15
	public void CopyTo(T[] array, int index) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x269C254 Offset: 0x269C254 VA: 0x269C254
	|-HashSet<BattleLogicTask.ACTIONTYPE>.CopyTo
	|
	|-RVA: 0x269E2C4 Offset: 0x269E2C4 VA: 0x269E2C4
	|-HashSet<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>.CopyTo
	|
	|-RVA: 0x26A0334 Offset: 0x26A0334 VA: 0x26A0334
	|-HashSet<CombineResultEffectComponent.Kind>.CopyTo
