	// RVA: 0x1F046FC Offset: 0x1F046FC VA: 0x1F046FC
	public static Stream CatGameZ(Stream stream) { }

	// RVA: 0x1F04928 Offset: 0x1F04928 VA: 0x1F04928
	public static Stream MouseGameZ(Stream stream) { }

	// RVA: 0x1F04B54 Offset: 0x1F04B54 VA: 0x1F04B54
	public static string CatGame3(string str) { }

	// RVA: 0x1F04C88 Offset: 0x1F04C88 VA: 0x1F04C88
	public static string CatGame3(string str, string key) { }

	// RVA: 0x1F051E4 Offset: 0x1F051E4 VA: 0x1F051E4
	public static string MouseGame3(string str) { }

	// RVA: 0x1F0577C Offset: 0x1F0577C VA: 0x1F0577C
	public static byte[] CatGame4(byte[] data) { }

	// RVA: 0x1F05CCC Offset: 0x1F05CCC VA: 0x1F05CCC
	public static byte[] CatGame4(byte[] data, string key) { }

	// RVA: 0x1F05DC8 Offset: 0x1F05DC8 VA: 0x1F05DC8
	public static byte[] MouseGame4(byte[] data) { }

	// RVA: 0x1F05F34 Offset: 0x1F05F34 VA: 0x1F05F34
	public static CryptoStream MouseGame4Stream(Stream outputStream) { }

	// RVA: 0x1F06128 Offset: 0x1F06128 VA: 0x1F06128
	public static string CatGame5(string str) { }

	// RVA: 0x1F06410 Offset: 0x1F06410 VA: 0x1F06410
	public static string MouseGame5(string str) { }

	// RVA: 0x1F066DC Offset: 0x1F066DC VA: 0x1F066DC
	public static byte[] CatGame7(byte[] data) { }

	// RVA: 0x1F067F4 Offset: 0x1F067F4 VA: 0x1F067F4
	public static byte[] MouseGame7(byte[] data) { }

	// RVA: 0x1F068E8 Offset: 0x1F068E8 VA: 0x1F068E8
	public static string CatGame8(string str) { }

	// RVA: 0x1F06AF0 Offset: 0x1F06AF0 VA: 0x1F06AF0
	public static string MouseGame8(string str) { }

	// RVA: 0x1F071D0 Offset: 0x1F071D0 VA: 0x1F071D0
	public static string MouseInfo(byte[] data) { }

	// RVA: 0x1F0731C Offset: 0x1F0731C VA: 0x1F0731C
	public static object MouseInfoMsgPack(byte[] data) { }

	// RVA: 0x1F07468 Offset: 0x1F07468 VA: 0x1F07468
	public static void ThirdHomeBuilding(string data) { }

	// RVA: 0x1F076A8 Offset: 0x1F076A8 VA: 0x1F076A8
	public static void ForthHomeBuilding(string data) { }

	// RVA: 0x1F07B40 Offset: 0x1F07B40 VA: 0x1F07B40
	public static string MouseGame3(string str, string key) { }

	// RVA: 0x1F07C38 Offset: 0x1F07C38 VA: 0x1F07C38
	public static string MouseGame3(string str, byte[] home, byte[] info) { }

	// RVA: 0x1F07D8C Offset: 0x1F07D8C VA: 0x1F07D8C
	public static byte[] MouseGame4(byte[] data, string key) { }

	// RVA: 0x1F07F04 Offset: 0x1F07F04 VA: 0x1F07F04
	public static CryptoStream MouseGame4Stream(Stream outputStream, string key) { }

	// RVA: 0x1F07E84 Offset: 0x1F07E84 VA: 0x1F07E84
	public static byte[] MouseGame4(byte[] data, byte[] home, byte[] info) { }

	// RVA: 0x1F08000 Offset: 0x1F08000 VA: 0x1F08000
	public static void SetAssetbundleKeys(object obj) { }

	// RVA: 0x1F08198 Offset: 0x1F08198 VA: 0x1F08198
	public static string GetAssetbundleKey(string keyType) { }

	// RVA: 0x1F04DDC Offset: 0x1F04DDC VA: 0x1F04DDC
	public static void OtherHomeBuilding(string data, out byte[] home, out byte[] info) { }

	// RVA: 0x1F08244 Offset: 0x1F08244 VA: 0x1F08244
	public static string CatGame6(string str) { }

	// RVA: 0x1F08308 Offset: 0x1F08308 VA: 0x1F08308
	public static string CatGame6(byte[] data) { }

	// RVA: 0x1F0837C Offset: 0x1F0837C VA: 0x1F0837C
	public static string MouseGame6(string str) { }

	// RVA: 0x1F08424 Offset: 0x1F08424 VA: 0x1F08424
	public static byte[] MouseGame6ForMsgPack(string str) { }

	// RVA: 0x1F084CC Offset: 0x1F084CC VA: 0x1F084CC
	public static void SixHomeBuilding(string data) { }

	// RVA: 0x1F039FC Offset: 0x1F039FC VA: 0x1F039FC
	public static string CatHome(byte[] data, byte[] home, byte[] info, bool isCompress = False) { }

	// RVA: 0x1F06A1C Offset: 0x1F06A1C VA: 0x1F06A1C
	public static string CatHomeZ2(byte[] data, byte[] home, byte[] info, bool isCompress = False) { }

	// RVA: 0x1F04770 Offset: 0x1F04770 VA: 0x1F04770
	public static Stream CatHomeMainZ(Stream stream, byte[] home, byte[] info, bool isCompress = False) { }

	// RVA: 0x1F08610 Offset: 0x1F08610 VA: 0x1F08610
	public static byte[] CatHomeMainZ2(byte[] data, byte[] home, byte[] info, bool isCompress = False) { }

	// RVA: 0x1F058F0 Offset: 0x1F058F0 VA: 0x1F058F0
	public static byte[] CatHomeMain(byte[] data, byte[] home, byte[] info, bool isCompress = False) { }

	// RVA: 0x1F03C1C Offset: 0x1F03C1C VA: 0x1F03C1C
	public static string MouseHome(byte[] data, byte[] home, byte[] info, bool isCompress = False) { }

	// RVA: 0x1F03E84 Offset: 0x1F03E84 VA: 0x1F03E84
	public static object MouseHomeMsgPack(byte[] data, byte[] home, byte[] info, bool isCompress = False) { }

	// RVA: 0x1F04098 Offset: 0x1F04098 VA: 0x1F04098
	public static object MouseHomeMaster(byte[] data, byte[] home, byte[] info, bool isCompress = False) { }

	// RVA: 0x1F0499C Offset: 0x1F0499C VA: 0x1F0499C
	public static Stream MouseHomeMainZ(Stream stream, byte[] home, byte[] info, bool isCompress = False) { }

	// RVA: 0x1F06CE0 Offset: 0x1F06CE0 VA: 0x1F06CE0
	public static byte[] MouseHomeMainZ2(byte[] data, byte[] home, byte[] info, bool isCompress = False) { }

	// RVA: 0x1F0539C Offset: 0x1F0539C VA: 0x1F0539C
	public static byte[] MouseHomeMain(byte[] data, byte[] home, byte[] info, bool isCompress = False) { }

	// RVA: 0x1F05FA8 Offset: 0x1F05FA8 VA: 0x1F05FA8
	public static CryptoStream MouseHomeMainStream(Stream outputStream, byte[] home, byte[] info, bool isCompress = False) { }

	// RVA: 0x1F042B0 Offset: 0x1F042B0 VA: 0x1F042B0
	public static byte[] MouseHomeSub(byte[] data, byte[] home, byte[] info, bool isCompress = False) { }
}

// Namespace: 
public class CatAndMouseGame.AssetbundleKeyEntity // TypeDefIndex: 6475
{
	// Fields
	public string id; // 0x10
	public string decryptKey; // 0x18

	// Methods

	// RVA: 0x1F08E9C Offset: 0x1F08E9C VA: 0x1F08E9C
	public void .ctor() { }
}

// Namespace: 
private class CatAndMouseGame.DataDecryptor : IDisposable // TypeDefIndex: 6476
{
	// Fields
	private readonly byte[] data; // 0x10
	private readonly bool isCompress; // 0x18
	private MemoryStream memoryStream; // 0x20
	private CryptoStream cryptoStream; // 0x28
	private MemoryStream memoryStreamBZip; // 0x30
	private BZip2InputStream bzipStream; // 0x38
	private bool isDisposed; // 0x40

	// Methods

	// RVA: 0x1F089DC Offset: 0x1F089DC VA: 0x1F089DC
	public void .ctor(ICryptoTransform decryptor, byte[] data, bool isCompress) { }

	// RVA: 0x1F08AAC Offset: 0x1F08AAC VA: 0x1F08AAC
	public void ApplyWrite() { }

	// RVA: 0x1F08CD4 Offset: 0x1F08CD4 VA: 0x1F08CD4
	public byte[] ToByteArray() { }

	// RVA: 0x1F08EA4 Offset: 0x1F08EA4 VA: 0x1F08EA4 Slot: 4
	public void Dispose() { }

	// RVA: 0x1F08ED8 Offset: 0x1F08ED8 VA: 0x1F08ED8 Slot: 5
	protected virtual void Dispose(bool isDisposing) { }
}

// Namespace: DelightWorks.Network
public abstract class AlwaysValidVerifyer : ICertificateVerifyer // TypeDefIndex: 6477
{
	// Methods

	// RVA: 0x1629DE4 Offset: 0x1629DE4 VA: 0x1629DE4
	protected void .ctor() { }

	// RVA: 0x1629DEC Offset: 0x1629DEC VA: 0x1629DEC Slot: 5
	public virtual bool IsValid(Uri serverUri, X509CertificateStructure[] certs) { }
}

// Namespace: DelightWorks.Network
public abstract class AndroidCertVerifyer : ICertificateVerifyer // TypeDefIndex: 6478
{
	// Fields
	private static AndroidJavaObject certFactory; // 0x0
	private static AndroidJavaObject trustManager; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCC0884 Offset: 0xCC0884 VA: 0xCC0884
	private static Converter<AndroidJavaObject, IntPtr> <>f__am$cache0; // 0x10

	// Methods

	// RVA: 0x1629DF4 Offset: 0x1629DF4 VA: 0x1629DF4
	public void .ctor() { }

	// RVA: 0x1629E0C Offset: 0x1629E0C VA: 0x1629E0C
	private void MakeTrustManager() { }

	// RVA: 0x162A3B8 Offset: 0x162A3B8 VA: 0x162A3B8
	private string CheckException() { }

	// RVA: 0x162A50C Offset: 0x162A50C VA: 0x162A50C Slot: 5
	public virtual bool IsValid(Uri serverUri, X509CertificateStructure[] certs) { }

	[CompilerGeneratedAttribute] // RVA: 0xD36BF8 Offset: 0xD36BF8 VA: 0xD36BF8
	// RVA: 0x162AD04 Offset: 0x162AD04 VA: 0x162AD04
	private static IntPtr <IsValid>m__0(AndroidJavaObject cert) { }
}

// Namespace: DelightWorks.Network
public sealed class BestWWWCertVerifyer : AndroidCertVerifyer // TypeDefIndex: 6479
{
	// Fields
	private string host; // 0x10
	private HashSet<string> redirectHosts; // 0x18
	private string[] signatures; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCC0894 Offset: 0xCC0894 VA: 0xCC0894
	[DebuggerBrowsableAttribute] // RVA: 0xCC0894 Offset: 0xCC0894 VA: 0xCC0894
	private bool <IsCertEnabled>k__BackingField; // 0x28
	public static int API_VERSION_CONSIDER_AS_OLD_ANDROID; // 0x0
	private static int CachedAndroidApiLevel; // 0x4

	// Properties
	public bool IsCertEnabled { get; set; }

	// Methods

	// RVA: 0x162BCBC Offset: 0x162BCBC VA: 0x162BCBC
	public void .ctor(string host, string[] signatures) { }

	[CompilerGeneratedAttribute] // RVA: 0xD36C08 Offset: 0xD36C08 VA: 0xD36C08
	// RVA: 0x162BD5C Offset: 0x162BD5C VA: 0x162BD5C
	public bool get_IsCertEnabled() { }

	[CompilerGeneratedAttribute] // RVA: 0xD36C18 Offset: 0xD36C18 VA: 0xD36C18
	// RVA: 0x162BD50 Offset: 0x162BD50 VA: 0x162BD50
	private void set_IsCertEnabled(bool value) { }

	// RVA: 0x162BD64 Offset: 0x162BD64 VA: 0x162BD64
	public bool BeforeRedirectionDelegate(HTTPRequest originalRequest, HTTPResponse response, Uri redirectUri) { }

	// RVA: 0x162BDBC Offset: 0x162BDBC VA: 0x162BDBC
	public void AddRedirectHost(Uri originalUri, Uri redirectUri) { }

	// RVA: 0x162BE9C Offset: 0x162BE9C VA: 0x162BE9C Slot: 5
	public override bool IsValid(Uri serverUri, X509CertificateStructure[] certs) { }

	// RVA: 0x162C178 Offset: 0x162C178 VA: 0x162C178
	public static bool CheckGreaterAndroidOSVersion(int version) { }

	// RVA: 0x162C27C Offset: 0x162C27C VA: 0x162C27C
	public static bool IsOldAndroid() { }

	// RVA: 0x162C2F0 Offset: 0x162C2F0 VA: 0x162C2F0
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEA40 Offset: 0xCAEA40 VA: 0xCAEA40
private sealed class BestWWWCertVerifyer.<IsValid>c__AnonStorey0 // TypeDefIndex: 6480
{
	// Fields
	internal Uri serverUri; // 0x10

	// Methods

	// RVA: 0x162C168 Offset: 0x162C168 VA: 0x162C168
	public void .ctor() { }

	// RVA: 0x162C344 Offset: 0x162C344 VA: 0x162C344
	internal bool <>m__0(string x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEA50 Offset: 0xCAEA50 VA: 0xCAEA50
private sealed class BestWWWCertVerifyer.<IsValid>c__AnonStorey1 // TypeDefIndex: 6481
{
	// Fields
	internal byte[] signature; // 0x10

	// Methods

	// RVA: 0x162C170 Offset: 0x162C170 VA: 0x162C170
	public void .ctor() { }

	// RVA: 0x162C398 Offset: 0x162C398 VA: 0x162C398
	internal bool <>m__0(string sig) { }
}

// Namespace: DelightWorks.Network
public abstract class CertChainVerifyer : ICertificateVerifyer // TypeDefIndex: 6482
{
	// Methods

	// RVA: 0x162C428 Offset: 0x162C428 VA: 0x162C428
	protected void .ctor() { }

	// RVA: 0x162C430 Offset: 0x162C430 VA: 0x162C430
	private void DispErrorLog(X509CertificateStructure[] certs) { }

	// RVA: 0x162C718 Offset: 0x162C718 VA: 0x162C718 Slot: 5
	public virtual bool IsValid(Uri serverUri, X509CertificateStructure[] certs) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEA60 Offset: 0xCAEA60 VA: 0xCAEA60
private sealed class CertChainVerifyer.<IsValid>c__AnonStorey0 // TypeDefIndex: 6483
{
	// Fields
	internal string issuer; // 0x10

	// Methods

	// RVA: 0x162CB2C Offset: 0x162CB2C VA: 0x162CB2C
	public void .ctor() { }

	// RVA: 0x162CB34 Offset: 0x162CB34 VA: 0x162CB34
	internal bool <>m__0(string x) { }

	// RVA: 0x162CBB0 Offset: 0x162CBB0 VA: 0x162CBB0
	internal bool <>m__1(string x) { }
}

// Namespace: 
public static class Crc32 // TypeDefIndex: 6484
{
	// Fields
	public static int CRC_UNIT; // 0x0
	private const uint CrcSeed = 4294967295;
	private static readonly uint[] CrcTable; // 0x8

	// Methods

	// RVA: 0x197B2EC Offset: 0x197B2EC VA: 0x197B2EC
	public static uint Compute(byte[] buffer) { }

	// RVA: 0x197B40C Offset: 0x197B40C VA: 0x197B40C
	public static uint Compute(byte[] buffer, int length) { }

	// RVA: 0x197B538 Offset: 0x197B538 VA: 0x197B538
	public static uint Compute(byte[] buffer, int length, uint crc) { }

	// RVA: 0x197B660 Offset: 0x197B660 VA: 0x197B660
	private static void .cctor() { }
}

// Namespace: 
public static class Debug // TypeDefIndex: 6485
{
	// Fields
	private static bool isDebugBuild; // 0x0

	// Methods

	// RVA: 0x1788130 Offset: 0x1788130 VA: 0x1788130
	private static void .cctor() { }

	// RVA: 0x17881AC Offset: 0x17881AC VA: 0x17881AC
	public static void Break() { }

	[ConditionalAttribute] // RVA: 0xD36C28 Offset: 0xD36C28 VA: 0xD36C28
	// RVA: 0x17882A8 Offset: 0x17882A8 VA: 0x17882A8
	public static void Log(object message) { }

	[ConditionalAttribute] // RVA: 0xD36C60 Offset: 0xD36C60 VA: 0xD36C60
	// RVA: 0x1788344 Offset: 0x1788344 VA: 0x1788344
	public static void Log(object message, Object context) { }

	[ConditionalAttribute] // RVA: 0xD36C98 Offset: 0xD36C98 VA: 0xD36C98
	// RVA: 0x17883F4 Offset: 0x17883F4 VA: 0x17883F4
	public static void LogError(object message) { }

	[ConditionalAttribute] // RVA: 0xD36CD0 Offset: 0xD36CD0 VA: 0xD36CD0
	// RVA: 0x1788490 Offset: 0x1788490 VA: 0x1788490
	public static void LogError(object message, Object context) { }

	[ConditionalAttribute] // RVA: 0xD36D08 Offset: 0xD36D08 VA: 0xD36D08
	// RVA: 0x1788540 Offset: 0x1788540 VA: 0x1788540
	public static void LogWarning(object message) { }

	[ConditionalAttribute] // RVA: 0xD36D40 Offset: 0xD36D40 VA: 0xD36D40
	// RVA: 0x17885DC Offset: 0x17885DC VA: 0x17885DC
	public static void LogWarning(object message, Object context) { }

	[ConditionalAttribute] // RVA: 0xD36D78 Offset: 0xD36D78 VA: 0xD36D78
	// RVA: 0x178868C Offset: 0x178868C VA: 0x178868C
	public static void LogWarningFormat(string format, object[] args) { }

	[ConditionalAttribute] // RVA: 0xD36DB0 Offset: 0xD36DB0 VA: 0xD36DB0
	// RVA: 0x178873C Offset: 0x178873C VA: 0x178873C
	public static void LogFormat(string format, object[] args) { }

	[ConditionalAttribute] // RVA: 0xD36DE8 Offset: 0xD36DE8 VA: 0xD36DE8
	// RVA: 0x17887EC Offset: 0x17887EC VA: 0x17887EC
	public static void LogErrorFormat(string format, object[] args) { }

	[ConditionalAttribute] // RVA: 0xD36E20 Offset: 0xD36E20 VA: 0xD36E20
	// RVA: 0x178889C Offset: 0x178889C VA: 0x178889C
	public static void LogAssertionFormat(string format, object[] args) { }

	[ConditionalAttribute] // RVA: 0xD36E58 Offset: 0xD36E58 VA: 0xD36E58
	// RVA: 0x17888F8 Offset: 0x17888F8 VA: 0x17888F8
	public static void LogException(Exception exception) { }

	[ConditionalAttribute] // RVA: 0xD36E90 Offset: 0xD36E90 VA: 0xD36E90
	// RVA: 0x1788994 Offset: 0x1788994 VA: 0x1788994
	public static void LogException(Exception exception, Object context) { }

	[ConditionalAttribute] // RVA: 0xD36EC8 Offset: 0xD36EC8 VA: 0xD36EC8
	// RVA: 0x1788A44 Offset: 0x1788A44 VA: 0x1788A44
	public static void DrawLine(Vector3 vec1, Vector3 vec2, Color col) { }

	[ConditionalAttribute] // RVA: 0xD36F00 Offset: 0xD36F00 VA: 0xD36F00
	// RVA: 0x1788B40 Offset: 0x1788B40 VA: 0x1788B40
	public static void DrawRay(Vector3 vec1, Vector3 vec2, Color col) { }

	[ConditionalAttribute] // RVA: 0xD36F38 Offset: 0xD36F38 VA: 0xD36F38
	// RVA: 0x1788C3C Offset: 0x1788C3C VA: 0x1788C3C
	public static void Assert(bool condition, string message, string detailMessage) { }

	[ConditionalAttribute] // RVA: 0xD36F70 Offset: 0xD36F70 VA: 0xD36F70
	// RVA: 0x1788C98 Offset: 0x1788C98 VA: 0x1788C98
	public static void Assert(bool condition, string message) { }

	[ConditionalAttribute] // RVA: 0xD36FA8 Offset: 0xD36FA8 VA: 0xD36FA8
	// RVA: 0x1788CF4 Offset: 0x1788CF4 VA: 0x1788CF4
	public static void Assert(bool condition) { }

	// RVA: 0x1788240 Offset: 0x1788240 VA: 0x1788240
	private static bool IsEnable() { }
}

// Namespace: 
public class DesignCardManager : SingletonMonoBehaviour<DesignCardManager> // TypeDefIndex: 6486
{
	// Fields
	private readonly int[] cardTextureSize; // 0x18
	private readonly int SVT_EQ_IMAGE_ID; // 0x20

	// Methods

	// RVA: 0x162CC2C Offset: 0x162CC2C VA: 0x162CC2C
	public void .ctor() { }

	// RVA: 0x162CCEC Offset: 0x162CCEC VA: 0x162CCEC
	public void LoadDesignCardTexture(int imageId, Rarity.TYPE rarity, Action<Texture2D> callback) { }

	// RVA: 0x162CEF0 Offset: 0x162CEF0 VA: 0x162CEF0
	public void ReleaseDesignTexture(int imageId, Rarity.TYPE rarity) { }

	// RVA: 0x162CF80 Offset: 0x162CF80 VA: 0x162CF80
	public void SetupDesignCard(int imageId, Rarity.TYPE rarity, UITexture target, Action callback) { }

	// RVA: 0x162D0B0 Offset: 0x162D0B0 VA: 0x162D0B0
	public void ReleaseDesignCard(int imageId, Rarity.TYPE rarity) { }

	// RVA: 0x162CDF0 Offset: 0x162CDF0 VA: 0x162CDF0
	public string GetDesignCardPath(int imageId, Rarity.TYPE rarity) { }

	// RVA: 0x162D0D0 Offset: 0x162D0D0 VA: 0x162D0D0
	public string GetCommanCodeCardPath(int imageId, Rarity.TYPE rarity) { }

	// RVA: 0x162D20C Offset: 0x162D20C VA: 0x162D20C
	public string GetExceedFrameCardPath(int imageId, string prefix) { }

	// RVA: 0x162D0B4 Offset: 0x162D0B4 VA: 0x162D0B4
	protected int GetFileIndex(int imageId) { }

	// RVA: 0x162D2DC Offset: 0x162D2DC VA: 0x162D2DC
	public void SetupCardImage(AssetData d, Transform cardNode, int imageId) { }

	// RVA: 0x162D38C Offset: 0x162D38C VA: 0x162D38C
	protected void SetupDesignCardTexture(int imageId, UITexture target, Texture2D tex) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEA70 Offset: 0xCAEA70 VA: 0xCAEA70
private sealed class DesignCardManager.<LoadDesignCardTexture>c__AnonStorey0 // TypeDefIndex: 6487
{
	// Fields
	internal Action<Texture2D> callback; // 0x10

	// Methods

	// RVA: 0x162CDE8 Offset: 0x162CDE8 VA: 0x162CDE8
	public void .ctor() { }

	// RVA: 0x162D468 Offset: 0x162D468 VA: 0x162D468
	internal void <>m__0(AssetData data) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEA80 Offset: 0xCAEA80 VA: 0xCAEA80
private sealed class DesignCardManager.<SetupDesignCard>c__AnonStorey1 // TypeDefIndex: 6488
{
	// Fields
	internal int imageId; // 0x10
	internal UITexture target; // 0x18
	internal Action callback; // 0x20
	internal DesignCardManager $this; // 0x28

	// Methods

	// RVA: 0x162D0A8 Offset: 0x162D0A8 VA: 0x162D0A8
	public void .ctor() { }

	// RVA: 0x162D500 Offset: 0x162D500 VA: 0x162D500
	internal void <>m__0(Texture2D tex) { }
}

// Namespace: 
public class EncryptedPlayerPrefs // TypeDefIndex: 6489
{
	// Fields
	private static string privateKey; // 0x0
	public static string[] keys; // 0x8

	// Methods

	// RVA: 0x1CCAF6C Offset: 0x1CCAF6C VA: 0x1CCAF6C
	public void .ctor() { }

	// RVA: 0x1CCAF74 Offset: 0x1CCAF74 VA: 0x1CCAF74
	public static string Md5(string strToEncrypt) { }

	// RVA: 0x1CCB184 Offset: 0x1CCB184 VA: 0x1CCB184
	public static void SaveEncryption(string key, string type, string value) { }

	// RVA: 0x1CCB5F0 Offset: 0x1CCB5F0 VA: 0x1CCB5F0
	public static bool CheckEncryption(string key, string type, string value) { }

	// RVA: 0x1CCBA60 Offset: 0x1CCBA60 VA: 0x1CCBA60
	public static void SetInt(string key, int value) { }

	// RVA: 0x1CCBB0C Offset: 0x1CCBB0C VA: 0x1CCBB0C
	public static void SetLong(string key, long value) { }

	// RVA: 0x1CCBBC0 Offset: 0x1CCBBC0 VA: 0x1CCBBC0
	public static void SetFloat(string key, float value) { }

	// RVA: 0x1CCBCA0 Offset: 0x1CCBCA0 VA: 0x1CCBCA0
	public static void SetString(string key, string value) { }

	// RVA: 0x1CCBD30 Offset: 0x1CCBD30 VA: 0x1CCBD30
	public static int GetInt(string key) { }

	// RVA: 0x1CCBE4C Offset: 0x1CCBE4C VA: 0x1CCBE4C
	public static long GetLong(string key) { }

	// RVA: 0x1CCBF9C Offset: 0x1CCBF9C VA: 0x1CCBF9C
	public static float GetFloat(string key) { }

	// RVA: 0x1CCC0F4 Offset: 0x1CCC0F4 VA: 0x1CCC0F4
	public static string GetString(string key) { }

	// RVA: 0x1CCBD98 Offset: 0x1CCBD98 VA: 0x1CCBD98
	public static int GetInt(string key, int defaultValue) { }

	// RVA: 0x1CCBEB4 Offset: 0x1CCBEB4 VA: 0x1CCBEB4
	public static long GetLong(string key, long defaultValue) { }

	// RVA: 0x1CCC004 Offset: 0x1CCC004 VA: 0x1CCC004
	public static float GetFloat(string key, float defaultValue) { }

	// RVA: 0x1CCC18C Offset: 0x1CCC18C VA: 0x1CCC18C
	public static string GetString(string key, string defaultValue) { }

	// RVA: 0x1CCC22C Offset: 0x1CCC22C VA: 0x1CCC22C
	public static bool HasKey(string key) { }

	// RVA: 0x1CCC234 Offset: 0x1CCC234 VA: 0x1CCC234
	public static void DeleteKey(string key) { }

	// RVA: 0x1CCC2DC Offset: 0x1CCC2DC VA: 0x1CCC2DC
	private static void .cctor() { }
}

// Namespace: 
public static class FNV1a // TypeDefIndex: 6490
{
	// Fields
	public const uint FnvOffsetBasis32 = 2166136261;
	public const ulong FnvOffsetBasis64 = 14695981039346656037;
	private const uint FnvPrime32 = 16777619;
	private const ulong FnvPrime64 = 1099511628211;

	// Methods

	// RVA: 0x161544C Offset: 0x161544C VA: 0x161544C
	public static uint Hash32(byte[] bytes, int offset, int len, uint hash = 2166136261) { }

	// RVA: 0x16154E4 Offset: 0x16154E4 VA: 0x16154E4
	public static ulong Hash64(byte[] bytes, int offset, int len, ulong hash = 14695981039346656037) { }

	// RVA: 0x161557C Offset: 0x161557C VA: 0x161557C
	public static uint Hash32(string str) { }
}

// Namespace: 
public class GeoLocation // TypeDefIndex: 6491
{
	// Fields
	private static readonly int TIME_OUT; // 0x0
	private static readonly int TEST_COUNT; // 0x4
	private static GeoLocation.LocationDelegate callBack; // 0x8
	private static LocationInfo[] infoArray; // 0x10
	private static int dataCnt; // 0x18
	private static MonoBehaviour invoker; // 0x20

	// Methods

	// RVA: 0x20F911C Offset: 0x20F911C VA: 0x20F911C
	public void .ctor() { }

	// RVA: 0x20F9124 Offset: 0x20F9124 VA: 0x20F9124
	public static void GetLocation(GeoLocation.LocationDelegate locDel, MonoBehaviour someMonoForCoroutine) { }

	[DebuggerHiddenAttribute] // RVA: 0xD36FE0 Offset: 0xD36FE0 VA: 0xD36FE0
	// RVA: 0x20F91B8 Offset: 0x20F91B8 VA: 0x20F91B8
	private static IEnumerator GetLocationCoroutine() { }

	// RVA: 0x20F91B4 Offset: 0x20F91B4 VA: 0x20F91B4
	private static void CallDelegate(GeoLocation.ResultState resultStat) { }

	// RVA: 0x20F921C Offset: 0x20F921C VA: 0x20F921C
	private static LocationInfo GetAppropriateOne() { }

	// RVA: 0x20F91AC Offset: 0x20F91AC VA: 0x20F91AC
	public static bool IsLocationEnabledByUser() { }

	// RVA: 0x20F95AC Offset: 0x20F95AC VA: 0x20F95AC
	private static void .cctor() { }
}

// Namespace: 
public enum GeoLocation.ResultState // TypeDefIndex: 6492
{
	// Fields
	public int value__; // 0x0
	public const GeoLocation.ResultState NOT_STARTED = 0;
	public const GeoLocation.ResultState GETTING_INFO = 1;
	public const GeoLocation.ResultState DISABLED_BY_USER = 2;
	public const GeoLocation.ResultState TIME_OUT = 3;
	public const GeoLocation.ResultState FAILED = 4;
	public const GeoLocation.ResultState SUCEED = 5;
}

// Namespace: 
public sealed class GeoLocation.LocationDelegate : MulticastDelegate // TypeDefIndex: 6493
{
	// Methods

	// RVA: 0x20F969C Offset: 0x20F969C VA: 0x20F969C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20F96AC Offset: 0x20F96AC VA: 0x20F96AC Slot: 11
	public virtual void Invoke(GeoLocation.ResultState result, LocationInfo locInfo) { }

	// RVA: 0x20F99BC Offset: 0x20F99BC VA: 0x20F99BC Slot: 12
	public virtual IAsyncResult BeginInvoke(GeoLocation.ResultState result, LocationInfo locInfo, AsyncCallback callback, object object) { }

	// RVA: 0x20F9A70 Offset: 0x20F9A70 VA: 0x20F9A70 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEA90 Offset: 0xCAEA90 VA: 0xCAEA90
private sealed class GeoLocation.<GetLocationCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6494
{
	// Fields
	internal object $current; // 0x10
	internal bool $disposing; // 0x18
	internal int $PC; // 0x1C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD46054 Offset: 0xD46054 VA: 0xD46054
	// RVA: 0x20F9214 Offset: 0x20F9214 VA: 0x20F9214
	public void .ctor() { }

	// RVA: 0x20F9610 Offset: 0x20F9610 VA: 0x20F9610 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46064 Offset: 0xD46064 VA: 0xD46064
	// RVA: 0x20F9620 Offset: 0x20F9620 VA: 0x20F9620 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46074 Offset: 0xD46074 VA: 0xD46074
	// RVA: 0x20F9628 Offset: 0x20F9628 VA: 0x20F9628 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46084 Offset: 0xD46084 VA: 0xD46084
	// RVA: 0x20F9630 Offset: 0x20F9630 VA: 0x20F9630 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46094 Offset: 0xD46094 VA: 0xD46094
	// RVA: 0x20F9634 Offset: 0x20F9634 VA: 0x20F9634 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class LocalizationManager : SingletonMonoBehaviour<LocalizationManager> // TypeDefIndex: 6495
{
	// Fields
	[SerializeField] // RVA: 0xCC08D0 Offset: 0xCC08D0 VA: 0xCC08D0
	protected TextAsset mainTextData; // 0x18
	protected static string lowNumberString; // 0x0
	protected static string hiNumberString; // 0x8
	protected static string hi2NumberString; // 0x10
	protected static Dictionary<string, string> lookup; // 0x18
	protected static string unknownNameText; // 0x20
	protected static string noEntryNameText; // 0x28
	protected static bool isBusySetAssetData; // 0x30
	protected static string kinsokuTopString; // 0x38
	protected static string kinsokuLastString; // 0x40
	protected static string kinsokuSeparationString; // 0x48
	protected static Color normalEffectColor; // 0x50
	protected static Color selectEffectColor; // 0x60
	[CompilerGeneratedAttribute] // RVA: 0xCC08E0 Offset: 0xCC08E0 VA: 0xCC08E0
	private static Dictionary<string, int> <>f__switch$map3; // 0x70

	// Methods

	// RVA: 0x1D4B2BC Offset: 0x1D4B2BC VA: 0x1D4B2BC
	public void .ctor() { }

	// RVA: 0x1D4B30C Offset: 0x1D4B30C VA: 0x1D4B30C
	public static bool IsBusySetAssetData() { }

	// RVA: 0x1D4B374 Offset: 0x1D4B374 VA: 0x1D4B374
	public static void Initialize() { }

	// RVA: 0x1D4B4BC Offset: 0x1D4B4BC VA: 0x1D4B4BC
	public static void LoadAssetData() { }

	// RVA: 0x1D44F5C Offset: 0x1D44F5C VA: 0x1D44F5C
	public static string GetUnknownName() { }

	// RVA: 0x1D4B63C Offset: 0x1D4B63C VA: 0x1D4B63C
	public static string GetNoEntryName() { }

	// RVA: 0x1D4B6A4 Offset: 0x1D4B6A4 VA: 0x1D4B6A4
	public static string GetKinsokuTopString() { }

	// RVA: 0x1D4B70C Offset: 0x1D4B70C VA: 0x1D4B70C
	public static string GetKinsokuLastString() { }

	// RVA: 0x1D4B774 Offset: 0x1D4B774 VA: 0x1D4B774
	public static string GetKinsokuSeparationString() { }

	// RVA: 0x1D4B7DC Offset: 0x1D4B7DC VA: 0x1D4B7DC
	public static Color GetNormalEffectColor() { }

	// RVA: 0x1D4B848 Offset: 0x1D4B848 VA: 0x1D4B848
	public static Color GetSelectEffectColor() { }

	// RVA: 0x1D44EA0 Offset: 0x1D44EA0 VA: 0x1D44EA0
	public static string Get(string key) { }

	// RVA: 0x1D4B8B4 Offset: 0x1D4B8B4 VA: 0x1D4B8B4
	public static bool ContainsKey(string key) { }

	// RVA: 0x1D4B940 Offset: 0x1D4B940 VA: 0x1D4B940
	public static string GetBeforeTime(long at) { }

	// RVA: 0x1D4BB64 Offset: 0x1D4BB64 VA: 0x1D4BB64
	public static string GetRestTime(long at) { }

	// RVA: 0x1D4BDB8 Offset: 0x1D4BDB8 VA: 0x1D4BDB8
	public static string GetRestTime2(long at, long nowTime = -1) { }

	// RVA: 0x1D4C018 Offset: 0x1D4C018 VA: 0x1D4C018
	public static string GetRestTime3(long at) { }

	// RVA: 0x1D4C21C Offset: 0x1D4C21C VA: 0x1D4C21C
	public static string GetRestTime4(long at, long nowTime = -1) { }

	// RVA: 0x1D4C398 Offset: 0x1D4C398 VA: 0x1D4C398
	public static string GetRestTime5(long at, long nowTime = -1) { }

	// RVA: 0x1D4C5F8 Offset: 0x1D4C5F8 VA: 0x1D4C5F8
	public static void GetRestTimeWithSeparatedTimeStr(long at, out string numStr, out string charStr) { }

	// RVA: 0x1D4C864 Offset: 0x1D4C864 VA: 0x1D4C864
	public static bool GetRestIsLastHours(long at) { }

	// RVA: 0x1D4C8FC Offset: 0x1D4C8FC VA: 0x1D4C8FC
	public static string GetPeriod(long startedAt, long endedAt, bool isDispStartTime = False, bool isDispEndTime = False) { }

	// RVA: 0x1D4CE1C Offset: 0x1D4CE1C VA: 0x1D4CE1C
	public static string GetDate(long time) { }

	// RVA: 0x1D4CF90 Offset: 0x1D4CF90 VA: 0x1D4CF90
	public static string GetTime(long time) { }

	// RVA: 0x1D4CAE0 Offset: 0x1D4CAE0 VA: 0x1D4CAE0
	public static string GetDateTime(long time) { }

	// RVA: 0x1D4D0D4 Offset: 0x1D4D0D4 VA: 0x1D4D0D4
	public static string GetDateTimeDayOfWeek(long time) { }

	// RVA: 0x1D4D4B4 Offset: 0x1D4D4B4 VA: 0x1D4D4B4
	public static string GetLapTime(long time) { }

	// RVA: 0x1D4D5DC Offset: 0x1D4D5DC VA: 0x1D4D5DC
	public static string GetUnitInfo(int count) { }

	// RVA: 0x1D4D6E4 Offset: 0x1D4D6E4 VA: 0x1D4D6E4
	public static string GetHaveUnitInfo(int count) { }

	// RVA: 0x1D4D7B0 Offset: 0x1D4D7B0 VA: 0x1D4D7B0
	public static string GetCountInfo(int count) { }

	// RVA: 0x1D4D68C Offset: 0x1D4D68C VA: 0x1D4D68C
	public static string GetNumberFormat(int data) { }

	// RVA: 0x1D4D87C Offset: 0x1D4D87C VA: 0x1D4D87C
	public static string GetNumberFormatLong(long data) { }

	// RVA: 0x1D4D8D4 Offset: 0x1D4D8D4 VA: 0x1D4D8D4
	public static string GetNumberFormat(string data) { }

	// RVA: 0x1D4DAB8 Offset: 0x1D4DAB8 VA: 0x1D4DAB8
	public static string GetPriceInfo(int price) { }

	// RVA: 0x1D4DB68 Offset: 0x1D4DB68 VA: 0x1D4DB68
	public static string GetPrice2Info(int price) { }

	// RVA: 0x1D4DC18 Offset: 0x1D4DC18 VA: 0x1D4DC18
	public static string GetIdIconInfo(int id) { }

	// RVA: 0x1D4DCE4 Offset: 0x1D4DCE4 VA: 0x1D4DCE4
	public static string GetLevelInfo(int lv) { }

	// RVA: 0x1D4DDB0 Offset: 0x1D4DDB0 VA: 0x1D4DDB0
	public static string GetLevelIconInfo(int lv) { }

	// RVA: 0x1D4DEB4 Offset: 0x1D4DEB4 VA: 0x1D4DEB4
	public static string GetRarityInfo(int rare) { }

	// RVA: 0x1D4DF54 Offset: 0x1D4DF54 VA: 0x1D4DF54
	public static string GetCostInfo(int cost) { }

	// RVA: 0x1D4E020 Offset: 0x1D4E020 VA: 0x1D4E020
	public static string GetCostIconInfo(int cost) { }

	// RVA: 0x1D4E0EC Offset: 0x1D4E0EC VA: 0x1D4E0EC
	public static string GetHpInfo(int hp) { }

	// RVA: 0x1D4E1B8 Offset: 0x1D4E1B8 VA: 0x1D4E1B8
	public static string GetHpIconInfo(int hp) { }

	// RVA: 0x1D4E284 Offset: 0x1D4E284 VA: 0x1D4E284
	public static string GetAttackInfo(int atk) { }

	// RVA: 0x1D4E350 Offset: 0x1D4E350 VA: 0x1D4E350
	public static string GetAttackIconInfo(int atk) { }

	// RVA: 0x1D4E41C Offset: 0x1D4E41C VA: 0x1D4E41C
	public static string GetStoneInfo(int n) { }

	// RVA: 0x1D4E4E8 Offset: 0x1D4E4E8 VA: 0x1D4E4E8
	public static string GetEventPointInfo(int addPoint, int ratePoint, string unit = "") { }

	// RVA: 0x1D4E82C Offset: 0x1D4E82C VA: 0x1D4E82C
	public static string GetLevelList(int[] levelList) { }

	// RVA: 0x1D4E9A4 Offset: 0x1D4E9A4 VA: 0x1D4E9A4
	public static string GetLevelList(SkillInfo[] skillInfoList) { }

	// RVA: 0x1D4EBF4 Offset: 0x1D4EBF4 VA: 0x1D4EBF4
	public static string ReplaceCommonTag(string text) { }

	// RVA: 0x1D4EFDC Offset: 0x1D4EFDC VA: 0x1D4EFDC
	public static string ReplaceNameTag(string text, bool isUseColorTag = True) { }

	// RVA: 0x1D4FAD0 Offset: 0x1D4FAD0 VA: 0x1D4FAD0
	public static bool IsGreyCode(string tagText) { }

	// RVA: 0x1D4FB60 Offset: 0x1D4FB60 VA: 0x1D4FB60
	public static bool IsColorCode(string tagText) { }

	// RVA: 0x1D4FBFC Offset: 0x1D4FBFC VA: 0x1D4FBFC
	public static string ChineseNumber(int n) { }

	// RVA: 0x1D4B418 Offset: 0x1D4B418 VA: 0x1D4B418
	protected void InitializeLocal() { }

	// RVA: 0x1D4FFC4 Offset: 0x1D4FFC4 VA: 0x1D4FFC4
	protected void SetTextData(string text_data) { }

	// RVA: 0x1D50778 Offset: 0x1D50778 VA: 0x1D50778
	public static string ConvertNumberToRomaNumber(int number) { }

	// RVA: 0x1D50848 Offset: 0x1D50848 VA: 0x1D50848
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEAA0 Offset: 0xCAEAA0 VA: 0xCAEAA0
private sealed class LocalizationManager.<LoadAssetData>c__AnonStorey0 // TypeDefIndex: 6496
{
	// Fields
	internal LocalizationManager ins; // 0x10

	// Methods

	// RVA: 0x1D4B634 Offset: 0x1D4B634 VA: 0x1D4B634
	public void .ctor() { }

	// RVA: 0x1D508BC Offset: 0x1D508BC VA: 0x1D508BC
	internal void <>m__0(AssetData assetData) { }
}

// Namespace: 
public class MainMenuBar : SingletonMonoBehaviour<MainMenuBar> // TypeDefIndex: 6497
{
	// Fields
	protected MainMenuBar.Kind kind; // 0x18
	protected int panelDepth; // 0x1C
	protected SceneRootComponent activeScene; // 0x20
	protected MainMenuBarBase barBase; // 0x28
	private GameObject obj; // 0x30

	// Properties
	public static bool IsEnableOutSideCollider { get; }

	// Methods

	// RVA: 0x17EB61C Offset: 0x17EB61C VA: 0x17EB61C
	public void .ctor() { }

	// RVA: 0x17EB674 Offset: 0x17EB674 VA: 0x17EB674
	public static bool get_IsEnableOutSideCollider() { }

	// RVA: 0x17EB78C Offset: 0x17EB78C VA: 0x17EB78C
	public static void resumeMenuBar(SceneRootComponent scene, MainMenuBar.Kind kind, int depth) { }

	// RVA: 0x17EB96C Offset: 0x17EB96C VA: 0x17EB96C
	public static void setActiveScene(SceneRootComponent scene, Camera cam) { }

	// RVA: 0x17EBB80 Offset: 0x17EBB80 VA: 0x17EBB80
	public static void setActiveScene(SceneRootComponent scene, int depth, Camera cam) { }

	// RVA: 0x17EBC4C Offset: 0x17EBC4C VA: 0x17EBC4C
	public static void setActiveScene(SceneRootComponent scene, MainMenuBar.Kind kind, int depth, Camera cam) { }

	// RVA: 0x17EBD28 Offset: 0x17EBD28 VA: 0x17EBD28
	public static void setKind(MainMenuBar.Kind kind) { }

	// RVA: 0x17EBE70 Offset: 0x17EBE70 VA: 0x17EBE70
	public static void setMenuActive(bool isActive, Camera cam) { }

	// RVA: 0x17EC3E0 Offset: 0x17EC3E0 VA: 0x17EC3E0
	public static void setCloseHideMode(bool is_enable) { }

	// RVA: 0x17EC498 Offset: 0x17EC498 VA: 0x17EC498
	public static void setButtonActive(bool isActive) { }

	// RVA: 0x17EC620 Offset: 0x17EC620 VA: 0x17EC620
	public static void requestSelectedSignal() { }

	// RVA: 0x17EC764 Offset: 0x17EC764 VA: 0x17EC764
	public static void requestTerminalSceneChange() { }

	// RVA: 0x17EC8A4 Offset: 0x17EC8A4 VA: 0x17EC8A4
	public static void requestSelectedSceneChange() { }

	// RVA: 0x17EBA34 Offset: 0x17EBA34 VA: 0x17EBA34
	protected void SetActiveScene(SceneRootComponent scene, MainMenuBar.Kind kind, int panelDepth, Camera cam) { }

	// RVA: 0x17EBDD4 Offset: 0x17EBDD4 VA: 0x17EBDD4
	protected void SetButtonKind(MainMenuBar.Kind kind) { }

	// RVA: 0x17EB854 Offset: 0x17EB854 VA: 0x17EB854
	protected void SetResumeMenu(SceneRootComponent scene, MainMenuBar.Kind kind, int panelDepth) { }

	// RVA: 0x17EBF30 Offset: 0x17EBF30 VA: 0x17EBF30
	protected void SetMenuActive(bool isActive, Camera cam) { }

	// RVA: 0x17EC56C Offset: 0x17EC56C VA: 0x17EC56C
	protected void SetButtonActive(MainMenuBar.Kind kind, bool isActive) { }

	// RVA: 0x17EC6CC Offset: 0x17EC6CC VA: 0x17EC6CC
	public void RequestSelectedSignal() { }

