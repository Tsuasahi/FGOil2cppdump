	public virtual bool used { get; }

	// Methods

	// RVA: 0xF0A460 Offset: 0xF0A460 VA: 0xF0A460
	protected void .ctor() { }

	// RVA: 0xF0A468 Offset: 0xF0A468 VA: 0xF0A468 Slot: 4
	public virtual void Reset() { }

	// RVA: 0xF0A470 Offset: 0xF0A470 VA: 0xF0A470 Slot: 5
	public virtual void Use() { }

	// RVA: 0xF0A47C Offset: 0xF0A47C VA: 0xF0A47C Slot: 6
	public virtual bool get_used() { }
}

// Namespace: UnityEngine.EventSystems
public class BaseEventData : AbstractEventData // TypeDefIndex: 3028
{
	// Fields
	private readonly EventSystem m_EventSystem; // 0x18

	// Properties
	public BaseInputModule currentInputModule { get; }
	public GameObject selectedObject { get; set; }

	// Methods

	// RVA: 0xF0A514 Offset: 0xF0A514 VA: 0xF0A514
	public void .ctor(EventSystem eventSystem) { }

	// RVA: 0xF0A560 Offset: 0xF0A560 VA: 0xF0A560
	public BaseInputModule get_currentInputModule() { }

	// RVA: 0xF0A594 Offset: 0xF0A594 VA: 0xF0A594
	public GameObject get_selectedObject() { }

	// RVA: 0xF0A5C8 Offset: 0xF0A5C8 VA: 0xF0A5C8
	public void set_selectedObject(GameObject value) { }
}

// Namespace: UnityEngine.EventSystems
public class PointerEventData : BaseEventData // TypeDefIndex: 3029
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC7F38C Offset: 0xC7F38C VA: 0xC7F38C
	[DebuggerBrowsableAttribute] // RVA: 0xC7F38C Offset: 0xC7F38C VA: 0xC7F38C
	private GameObject <pointerEnter>k__BackingField; // 0x20
	private GameObject m_PointerPress; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC7F3C8 Offset: 0xC7F3C8 VA: 0xC7F3C8
	[DebuggerBrowsableAttribute] // RVA: 0xC7F3C8 Offset: 0xC7F3C8 VA: 0xC7F3C8
	private GameObject <lastPress>k__BackingField; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC7F404 Offset: 0xC7F404 VA: 0xC7F404
	[DebuggerBrowsableAttribute] // RVA: 0xC7F404 Offset: 0xC7F404 VA: 0xC7F404
	private GameObject <rawPointerPress>k__BackingField; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC7F440 Offset: 0xC7F440 VA: 0xC7F440
	[DebuggerBrowsableAttribute] // RVA: 0xC7F440 Offset: 0xC7F440 VA: 0xC7F440
	private GameObject <pointerDrag>k__BackingField; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC7F47C Offset: 0xC7F47C VA: 0xC7F47C
	[DebuggerBrowsableAttribute] // RVA: 0xC7F47C Offset: 0xC7F47C VA: 0xC7F47C
	private RaycastResult <pointerCurrentRaycast>k__BackingField; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC7F4B8 Offset: 0xC7F4B8 VA: 0xC7F4B8
	[DebuggerBrowsableAttribute] // RVA: 0xC7F4B8 Offset: 0xC7F4B8 VA: 0xC7F4B8
	private RaycastResult <pointerPressRaycast>k__BackingField; // 0x90
	public List<GameObject> hovered; // 0xD8
	[CompilerGeneratedAttribute] // RVA: 0xC7F4F4 Offset: 0xC7F4F4 VA: 0xC7F4F4
	[DebuggerBrowsableAttribute] // RVA: 0xC7F4F4 Offset: 0xC7F4F4 VA: 0xC7F4F4
	private bool <eligibleForClick>k__BackingField; // 0xE0
	[CompilerGeneratedAttribute] // RVA: 0xC7F530 Offset: 0xC7F530 VA: 0xC7F530
	[DebuggerBrowsableAttribute] // RVA: 0xC7F530 Offset: 0xC7F530 VA: 0xC7F530
	private int <pointerId>k__BackingField; // 0xE4
	[CompilerGeneratedAttribute] // RVA: 0xC7F56C Offset: 0xC7F56C VA: 0xC7F56C
	[DebuggerBrowsableAttribute] // RVA: 0xC7F56C Offset: 0xC7F56C VA: 0xC7F56C
	private Vector2 <position>k__BackingField; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xC7F5A8 Offset: 0xC7F5A8 VA: 0xC7F5A8
	[DebuggerBrowsableAttribute] // RVA: 0xC7F5A8 Offset: 0xC7F5A8 VA: 0xC7F5A8
	private Vector2 <delta>k__BackingField; // 0xF0
	[CompilerGeneratedAttribute] // RVA: 0xC7F5E4 Offset: 0xC7F5E4 VA: 0xC7F5E4
	[DebuggerBrowsableAttribute] // RVA: 0xC7F5E4 Offset: 0xC7F5E4 VA: 0xC7F5E4
	private Vector2 <pressPosition>k__BackingField; // 0xF8
	[CompilerGeneratedAttribute] // RVA: 0xC7F620 Offset: 0xC7F620 VA: 0xC7F620
	[DebuggerBrowsableAttribute] // RVA: 0xC7F620 Offset: 0xC7F620 VA: 0xC7F620
	private Vector3 <worldPosition>k__BackingField; // 0x100
	[CompilerGeneratedAttribute] // RVA: 0xC7F65C Offset: 0xC7F65C VA: 0xC7F65C
	[DebuggerBrowsableAttribute] // RVA: 0xC7F65C Offset: 0xC7F65C VA: 0xC7F65C
	private Vector3 <worldNormal>k__BackingField; // 0x10C
	[CompilerGeneratedAttribute] // RVA: 0xC7F698 Offset: 0xC7F698 VA: 0xC7F698
	[DebuggerBrowsableAttribute] // RVA: 0xC7F698 Offset: 0xC7F698 VA: 0xC7F698
	private float <clickTime>k__BackingField; // 0x118
	[CompilerGeneratedAttribute] // RVA: 0xC7F6D4 Offset: 0xC7F6D4 VA: 0xC7F6D4
	[DebuggerBrowsableAttribute] // RVA: 0xC7F6D4 Offset: 0xC7F6D4 VA: 0xC7F6D4
	private int <clickCount>k__BackingField; // 0x11C
	[CompilerGeneratedAttribute] // RVA: 0xC7F710 Offset: 0xC7F710 VA: 0xC7F710
	[DebuggerBrowsableAttribute] // RVA: 0xC7F710 Offset: 0xC7F710 VA: 0xC7F710
	private Vector2 <scrollDelta>k__BackingField; // 0x120
	[CompilerGeneratedAttribute] // RVA: 0xC7F74C Offset: 0xC7F74C VA: 0xC7F74C
	[DebuggerBrowsableAttribute] // RVA: 0xC7F74C Offset: 0xC7F74C VA: 0xC7F74C
	private bool <useDragThreshold>k__BackingField; // 0x128
	[CompilerGeneratedAttribute] // RVA: 0xC7F788 Offset: 0xC7F788 VA: 0xC7F788
	[DebuggerBrowsableAttribute] // RVA: 0xC7F788 Offset: 0xC7F788 VA: 0xC7F788
	private bool <dragging>k__BackingField; // 0x129
	[CompilerGeneratedAttribute] // RVA: 0xC7F7C4 Offset: 0xC7F7C4 VA: 0xC7F7C4
	[DebuggerBrowsableAttribute] // RVA: 0xC7F7C4 Offset: 0xC7F7C4 VA: 0xC7F7C4
	private PointerEventData.InputButton <button>k__BackingField; // 0x12C

	// Properties
	public GameObject pointerEnter { get; set; }
	public GameObject lastPress { get; set; }
	public GameObject rawPointerPress { get; set; }
	public GameObject pointerDrag { get; set; }
	public RaycastResult pointerCurrentRaycast { get; set; }
	public RaycastResult pointerPressRaycast { get; set; }
	public bool eligibleForClick { get; set; }
	public int pointerId { get; set; }
	public Vector2 position { get; set; }
	public Vector2 delta { get; set; }
	public Vector2 pressPosition { get; set; }
	[ObsoleteAttribute] // RVA: 0xC82058 Offset: 0xC82058 VA: 0xC82058
	public Vector3 worldPosition { get; set; }
	[ObsoleteAttribute] // RVA: 0xC82090 Offset: 0xC82090 VA: 0xC82090
	public Vector3 worldNormal { get; set; }
	public float clickTime { get; set; }
	public int clickCount { get; set; }
	public Vector2 scrollDelta { get; set; }
	public bool useDragThreshold { get; set; }
	public bool dragging { get; set; }
	public PointerEventData.InputButton button { get; set; }
	public Camera enterEventCamera { get; }
	public Camera pressEventCamera { get; }
	public GameObject pointerPress { get; set; }

	// Methods

	// RVA: 0xF107C4 Offset: 0xF107C4 VA: 0xF107C4
	public void .ctor(EventSystem eventSystem) { }

	[CompilerGeneratedAttribute] // RVA: 0xC81640 Offset: 0xC81640 VA: 0xC81640
	// RVA: 0xF0B6EC Offset: 0xF0B6EC VA: 0xF0B6EC
	public GameObject get_pointerEnter() { }

	[CompilerGeneratedAttribute] // RVA: 0xC81650 Offset: 0xC81650 VA: 0xC81650
	// RVA: 0xF0B75C Offset: 0xF0B75C VA: 0xF0B75C
	public void set_pointerEnter(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC81660 Offset: 0xC81660 VA: 0xC81660
	// RVA: 0xF10920 Offset: 0xF10920 VA: 0xF10920
	public GameObject get_lastPress() { }

	[CompilerGeneratedAttribute] // RVA: 0xC81670 Offset: 0xC81670 VA: 0xC81670
	// RVA: 0xF10928 Offset: 0xF10928 VA: 0xF10928
	private void set_lastPress(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC81680 Offset: 0xC81680 VA: 0xC81680
	// RVA: 0xF10930 Offset: 0xF10930 VA: 0xF10930
	public GameObject get_rawPointerPress() { }

	[CompilerGeneratedAttribute] // RVA: 0xC81690 Offset: 0xC81690 VA: 0xC81690
	// RVA: 0xF10938 Offset: 0xF10938 VA: 0xF10938
	public void set_rawPointerPress(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC816A0 Offset: 0xC816A0 VA: 0xC816A0
	// RVA: 0xF10940 Offset: 0xF10940 VA: 0xF10940
	public GameObject get_pointerDrag() { }

	[CompilerGeneratedAttribute] // RVA: 0xC816B0 Offset: 0xC816B0 VA: 0xC816B0
	// RVA: 0xF10948 Offset: 0xF10948 VA: 0xF10948
	public void set_pointerDrag(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC816C0 Offset: 0xC816C0 VA: 0xC816C0
	// RVA: 0xF10950 Offset: 0xF10950 VA: 0xF10950
	public RaycastResult get_pointerCurrentRaycast() { }

	[CompilerGeneratedAttribute] // RVA: 0xC816D0 Offset: 0xC816D0 VA: 0xC816D0
	// RVA: 0xF10970 Offset: 0xF10970 VA: 0xF10970
	public void set_pointerCurrentRaycast(RaycastResult value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC816E0 Offset: 0xC816E0 VA: 0xC816E0
	// RVA: 0xF1098C Offset: 0xF1098C VA: 0xF1098C
	public RaycastResult get_pointerPressRaycast() { }

	[CompilerGeneratedAttribute] // RVA: 0xC816F0 Offset: 0xC816F0 VA: 0xC816F0
	// RVA: 0xF109AC Offset: 0xF109AC VA: 0xF109AC
	public void set_pointerPressRaycast(RaycastResult value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC81700 Offset: 0xC81700 VA: 0xC81700
	// RVA: 0xF109C8 Offset: 0xF109C8 VA: 0xF109C8
	public bool get_eligibleForClick() { }

	[CompilerGeneratedAttribute] // RVA: 0xC81710 Offset: 0xC81710 VA: 0xC81710
	// RVA: 0xF108B8 Offset: 0xF108B8 VA: 0xF108B8
	public void set_eligibleForClick(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC81720 Offset: 0xC81720 VA: 0xC81720
	// RVA: 0xF109D0 Offset: 0xF109D0 VA: 0xF109D0
	public int get_pointerId() { }

	[CompilerGeneratedAttribute] // RVA: 0xC81730 Offset: 0xC81730 VA: 0xC81730
	// RVA: 0xF108C4 Offset: 0xF108C4 VA: 0xF108C4
	public void set_pointerId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC81740 Offset: 0xC81740 VA: 0xC81740
	// RVA: 0xF100F0 Offset: 0xF100F0 VA: 0xF100F0
	public Vector2 get_position() { }

	[CompilerGeneratedAttribute] // RVA: 0xC81750 Offset: 0xC81750 VA: 0xC81750
	// RVA: 0xF108CC Offset: 0xF108CC VA: 0xF108CC
	public void set_position(Vector2 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC81760 Offset: 0xC81760 VA: 0xC81760
	// RVA: 0xF109D8 Offset: 0xF109D8 VA: 0xF109D8
	public Vector2 get_delta() { }

	[CompilerGeneratedAttribute] // RVA: 0xC81770 Offset: 0xC81770 VA: 0xC81770
	// RVA: 0xF108D4 Offset: 0xF108D4 VA: 0xF108D4
	public void set_delta(Vector2 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC81780 Offset: 0xC81780 VA: 0xC81780
	// RVA: 0xF109E0 Offset: 0xF109E0 VA: 0xF109E0
	public Vector2 get_pressPosition() { }

	[CompilerGeneratedAttribute] // RVA: 0xC81790 Offset: 0xC81790 VA: 0xC81790
	// RVA: 0xF108DC Offset: 0xF108DC VA: 0xF108DC
	public void set_pressPosition(Vector2 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC817A0 Offset: 0xC817A0 VA: 0xC817A0
	// RVA: 0xF109E8 Offset: 0xF109E8 VA: 0xF109E8
	public Vector3 get_worldPosition() { }

	[CompilerGeneratedAttribute] // RVA: 0xC817B0 Offset: 0xC817B0 VA: 0xC817B0
	// RVA: 0xF109F8 Offset: 0xF109F8 VA: 0xF109F8
	public void set_worldPosition(Vector3 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC817C0 Offset: 0xC817C0 VA: 0xC817C0
	// RVA: 0xF10A08 Offset: 0xF10A08 VA: 0xF10A08
	public Vector3 get_worldNormal() { }

	[CompilerGeneratedAttribute] // RVA: 0xC817D0 Offset: 0xC817D0 VA: 0xC817D0
	// RVA: 0xF10A18 Offset: 0xF10A18 VA: 0xF10A18
	public void set_worldNormal(Vector3 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC817E0 Offset: 0xC817E0 VA: 0xC817E0
	// RVA: 0xF10A28 Offset: 0xF10A28 VA: 0xF10A28
	public float get_clickTime() { }

	[CompilerGeneratedAttribute] // RVA: 0xC817F0 Offset: 0xC817F0 VA: 0xC817F0
	// RVA: 0xF108E4 Offset: 0xF108E4 VA: 0xF108E4
	public void set_clickTime(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC81800 Offset: 0xC81800 VA: 0xC81800
	// RVA: 0xF10A30 Offset: 0xF10A30 VA: 0xF10A30
	public int get_clickCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xC81810 Offset: 0xC81810 VA: 0xC81810
	// RVA: 0xF108EC Offset: 0xF108EC VA: 0xF108EC
	public void set_clickCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC81820 Offset: 0xC81820 VA: 0xC81820
	// RVA: 0xF10A38 Offset: 0xF10A38 VA: 0xF10A38
	public Vector2 get_scrollDelta() { }

	[CompilerGeneratedAttribute] // RVA: 0xC81830 Offset: 0xC81830 VA: 0xC81830
	// RVA: 0xF108F4 Offset: 0xF108F4 VA: 0xF108F4
	public void set_scrollDelta(Vector2 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC81840 Offset: 0xC81840 VA: 0xC81840
	// RVA: 0xF10A44 Offset: 0xF10A44 VA: 0xF10A44
	public bool get_useDragThreshold() { }

	[CompilerGeneratedAttribute] // RVA: 0xC81850 Offset: 0xC81850 VA: 0xC81850
	// RVA: 0xF10900 Offset: 0xF10900 VA: 0xF10900
	public void set_useDragThreshold(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC81860 Offset: 0xC81860 VA: 0xC81860
	// RVA: 0xF10A4C Offset: 0xF10A4C VA: 0xF10A4C
	public bool get_dragging() { }

	[CompilerGeneratedAttribute] // RVA: 0xC81870 Offset: 0xC81870 VA: 0xC81870
	// RVA: 0xF1090C Offset: 0xF1090C VA: 0xF1090C
	public void set_dragging(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC81880 Offset: 0xC81880 VA: 0xC81880
	// RVA: 0xF10A54 Offset: 0xF10A54 VA: 0xF10A54
	public PointerEventData.InputButton get_button() { }

	[CompilerGeneratedAttribute] // RVA: 0xC81890 Offset: 0xC81890 VA: 0xC81890
	// RVA: 0xF10918 Offset: 0xF10918 VA: 0xF10918
	public void set_button(PointerEventData.InputButton value) { }

	// RVA: 0xF10A5C Offset: 0xF10A5C VA: 0xF10A5C
	public bool IsPointerMoving() { }

	// RVA: 0xF10A90 Offset: 0xF10A90 VA: 0xF10A90
	public bool IsScrolling() { }

	// RVA: 0xF10AC8 Offset: 0xF10AC8 VA: 0xF10AC8
	public Camera get_enterEventCamera() { }

	// RVA: 0xF10B70 Offset: 0xF10B70 VA: 0xF10B70
	public Camera get_pressEventCamera() { }

	// RVA: 0xF10C18 Offset: 0xF10C18 VA: 0xF10C18
	public GameObject get_pointerPress() { }

	// RVA: 0xF10C20 Offset: 0xF10C20 VA: 0xF10C20
	public void set_pointerPress(GameObject value) { }

	// RVA: 0xF10CAC Offset: 0xF10CAC VA: 0xF10CAC Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum PointerEventData.InputButton // TypeDefIndex: 3030
{
	// Fields
	public int value__; // 0x0
	public const PointerEventData.InputButton Left = 0;
	public const PointerEventData.InputButton Right = 1;
	public const PointerEventData.InputButton Middle = 2;
}

// Namespace: 
public enum PointerEventData.FramePressState // TypeDefIndex: 3031
{
	// Fields
	public int value__; // 0x0
	public const PointerEventData.FramePressState Pressed = 0;
	public const PointerEventData.FramePressState Released = 1;
	public const PointerEventData.FramePressState PressedAndReleased = 2;
	public const PointerEventData.FramePressState NotChanged = 3;
}

// Namespace: UnityEngine.EventSystems
public class BaseInput : UIBehaviour // TypeDefIndex: 3032
{
	// Properties
	public virtual string compositionString { get; }
	public virtual IMECompositionMode imeCompositionMode { get; set; }
	public virtual Vector2 compositionCursorPos { get; set; }
	public virtual bool mousePresent { get; }
	public virtual Vector2 mousePosition { get; }
	public virtual Vector2 mouseScrollDelta { get; }
	public virtual bool touchSupported { get; }
	public virtual int touchCount { get; }

	// Methods

	// RVA: 0xF0A794 Offset: 0xF0A794 VA: 0xF0A794
	public void .ctor() { }

	// RVA: 0xF0A7A4 Offset: 0xF0A7A4 VA: 0xF0A7A4 Slot: 17
	public virtual string get_compositionString() { }

	// RVA: 0xF0A7AC Offset: 0xF0A7AC VA: 0xF0A7AC Slot: 18
	public virtual IMECompositionMode get_imeCompositionMode() { }

	// RVA: 0xF0A7B4 Offset: 0xF0A7B4 VA: 0xF0A7B4 Slot: 19
	public virtual void set_imeCompositionMode(IMECompositionMode value) { }

	// RVA: 0xF0A7C0 Offset: 0xF0A7C0 VA: 0xF0A7C0 Slot: 20
	public virtual Vector2 get_compositionCursorPos() { }

	// RVA: 0xF0A7C8 Offset: 0xF0A7C8 VA: 0xF0A7C8 Slot: 21
	public virtual void set_compositionCursorPos(Vector2 value) { }

	// RVA: 0xF0A7D0 Offset: 0xF0A7D0 VA: 0xF0A7D0 Slot: 22
	public virtual bool get_mousePresent() { }

	// RVA: 0xF0A7D8 Offset: 0xF0A7D8 VA: 0xF0A7D8 Slot: 23
	public virtual bool GetMouseButtonDown(int button) { }

	// RVA: 0xF0A7E4 Offset: 0xF0A7E4 VA: 0xF0A7E4 Slot: 24
	public virtual bool GetMouseButtonUp(int button) { }

	// RVA: 0xF0A7F0 Offset: 0xF0A7F0 VA: 0xF0A7F0 Slot: 25
	public virtual bool GetMouseButton(int button) { }

	// RVA: 0xF0A7FC Offset: 0xF0A7FC VA: 0xF0A7FC Slot: 26
	public virtual Vector2 get_mousePosition() { }

	// RVA: 0xF0A804 Offset: 0xF0A804 VA: 0xF0A804 Slot: 27
	public virtual Vector2 get_mouseScrollDelta() { }

	// RVA: 0xF0A80C Offset: 0xF0A80C VA: 0xF0A80C Slot: 28
	public virtual bool get_touchSupported() { }

	// RVA: 0xF0A814 Offset: 0xF0A814 VA: 0xF0A814 Slot: 29
	public virtual int get_touchCount() { }

	// RVA: 0xF0A81C Offset: 0xF0A81C VA: 0xF0A81C Slot: 30
	public virtual Touch GetTouch(int index) { }

	// RVA: 0xF0A884 Offset: 0xF0A884 VA: 0xF0A884 Slot: 31
	public virtual float GetAxisRaw(string axisName) { }

	// RVA: 0xF0A890 Offset: 0xF0A890 VA: 0xF0A890 Slot: 32
	public virtual bool GetButtonDown(string buttonName) { }
}

// Namespace: UnityEngine.EventSystems
[RequireComponent] // RVA: 0xC7E0BC Offset: 0xC7E0BC VA: 0xC7E0BC
public abstract class BaseInputModule : UIBehaviour // TypeDefIndex: 3033
{
	// Fields
	protected List<RaycastResult> m_RaycastResultCache; // 0x18
	private AxisEventData m_AxisEventData; // 0x20
	private EventSystem m_EventSystem; // 0x28
	private BaseEventData m_BaseEventData; // 0x30
	protected BaseInput m_InputOverride; // 0x38
	private BaseInput m_DefaultInput; // 0x40

	// Properties
	public BaseInput input { get; }
	public BaseInput inputOverride { get; set; }
	protected EventSystem eventSystem { get; }

	// Methods

	// RVA: 0xF0A89C Offset: 0xF0A89C VA: 0xF0A89C
	protected void .ctor() { }

	// RVA: 0xF0A90C Offset: 0xF0A90C VA: 0xF0A90C
	public BaseInput get_input() { }

	// RVA: 0xF0AB34 Offset: 0xF0AB34 VA: 0xF0AB34
	public BaseInput get_inputOverride() { }

	// RVA: 0xF0AB3C Offset: 0xF0AB3C VA: 0xF0AB3C
	public void set_inputOverride(BaseInput value) { }

	// RVA: 0xF0AB44 Offset: 0xF0AB44 VA: 0xF0AB44
	protected EventSystem get_eventSystem() { }

	// RVA: 0xF0AB4C Offset: 0xF0AB4C VA: 0xF0AB4C Slot: 5
	protected override void OnEnable() { }

	// RVA: 0xF0AD1C Offset: 0xF0AD1C VA: 0xF0AD1C Slot: 7
	protected override void OnDisable() { }

	// RVA: -1 Offset: -1 Slot: 17
	public abstract void Process();

	// RVA: 0xF0AD4C Offset: 0xF0AD4C VA: 0xF0AD4C
	protected static RaycastResult FindFirstRaycast(List<RaycastResult> candidates) { }

	// RVA: 0xF0AEB0 Offset: 0xF0AEB0 VA: 0xF0AEB0
	protected static MoveDirection DetermineMoveDirection(float x, float y) { }

	// RVA: 0xF0AEBC Offset: 0xF0AEBC VA: 0xF0AEBC
	protected static MoveDirection DetermineMoveDirection(float x, float y, float deadZone) { }

	// RVA: 0xF0AFA0 Offset: 0xF0AFA0 VA: 0xF0AFA0
	protected static GameObject FindCommonRoot(GameObject g1, GameObject g2) { }

	// RVA: 0xF0B16C Offset: 0xF0B16C VA: 0xF0B16C
	protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget) { }

	// RVA: 0xF0B7CC Offset: 0xF0B7CC VA: 0xF0B7CC Slot: 18
	protected virtual AxisEventData GetAxisEventData(float x, float y, float moveDeadZone) { }

	// RVA: 0xF0B8DC Offset: 0xF0B8DC VA: 0xF0B8DC Slot: 19
	protected virtual BaseEventData GetBaseEventData() { }

	// RVA: 0xF0B974 Offset: 0xF0B974 VA: 0xF0B974 Slot: 20
	public virtual bool IsPointerOverGameObject(int pointerId) { }

	// RVA: 0xF0B97C Offset: 0xF0B97C VA: 0xF0B97C Slot: 21
	public virtual bool ShouldActivateModule() { }

	// RVA: 0xF0B9D4 Offset: 0xF0B9D4 VA: 0xF0B9D4 Slot: 22
	public virtual void DeactivateModule() { }

	// RVA: 0xF0B9D8 Offset: 0xF0B9D8 VA: 0xF0B9D8 Slot: 23
	public virtual void ActivateModule() { }

	// RVA: 0xF0B9DC Offset: 0xF0B9DC VA: 0xF0B9DC Slot: 24
	public virtual void UpdateModule() { }

	// RVA: 0xF0B9E0 Offset: 0xF0B9E0 VA: 0xF0B9E0 Slot: 25
	public virtual bool IsModuleSupported() { }
}

// Namespace: UnityEngine.EventSystems
public abstract class PointerInputModule : BaseInputModule // TypeDefIndex: 3034
{
	// Fields
	public const int kMouseLeftId = -1;
	public const int kMouseRightId = -2;
	public const int kMouseMiddleId = -3;
	public const int kFakeTouchesId = -4;
	protected Dictionary<int, PointerEventData> m_PointerData; // 0x48
	private readonly PointerInputModule.MouseState m_MouseState; // 0x50

	// Methods

	// RVA: 0xF11A0C Offset: 0xF11A0C VA: 0xF11A0C
	protected void .ctor() { }

	// RVA: 0xF11B04 Offset: 0xF11B04 VA: 0xF11B04
	protected bool GetPointerData(int id, out PointerEventData data, bool create) { }

	// RVA: 0xF11C00 Offset: 0xF11C00 VA: 0xF11C00
	protected void RemovePointerData(PointerEventData data) { }

	// RVA: 0xF11C80 Offset: 0xF11C80 VA: 0xF11C80
	protected PointerEventData GetTouchPointerEventData(Touch input, out bool pressed, out bool released) { }

	// RVA: 0xF11F94 Offset: 0xF11F94 VA: 0xF11F94
	protected void CopyFromTo(PointerEventData from, PointerEventData to) { }

	// RVA: 0xF12068 Offset: 0xF12068 VA: 0xF12068
	protected PointerEventData.FramePressState StateForMouseButton(int buttonId) { }

	// RVA: 0xF12104 Offset: 0xF12104 VA: 0xF12104 Slot: 26
	protected virtual PointerInputModule.MouseState GetMousePointerEventData() { }

	// RVA: 0xF12118 Offset: 0xF12118 VA: 0xF12118 Slot: 27
	protected virtual PointerInputModule.MouseState GetMousePointerEventData(int id) { }

	// RVA: 0xF12590 Offset: 0xF12590 VA: 0xF12590
	protected PointerEventData GetLastPointerEventData(int id) { }

	// RVA: 0xF125BC Offset: 0xF125BC VA: 0xF125BC
	private static bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold) { }

	// RVA: 0xF1268C Offset: 0xF1268C VA: 0xF1268C Slot: 28
	protected virtual void ProcessMove(PointerEventData pointerEvent) { }

	// RVA: 0xF126D0 Offset: 0xF126D0 VA: 0xF126D0 Slot: 29
	protected virtual void ProcessDrag(PointerEventData pointerEvent) { }

	// RVA: 0xF12910 Offset: 0xF12910 VA: 0xF12910 Slot: 20
	public override bool IsPointerOverGameObject(int pointerId) { }

	// RVA: 0xF129BC Offset: 0xF129BC VA: 0xF129BC
	protected void ClearSelection() { }

	// RVA: 0xF12B50 Offset: 0xF12B50 VA: 0xF12B50 Slot: 3
	public override string ToString() { }

	// RVA: 0xF12E38 Offset: 0xF12E38 VA: 0xF12E38
	protected void DeselectIfSelectionChanged(GameObject currentOverGo, BaseEventData pointerEvent) { }
}

// Namespace: 
protected class PointerInputModule.ButtonState // TypeDefIndex: 3035
{
	// Fields
	private PointerEventData.InputButton m_Button; // 0x10
	private PointerInputModule.MouseButtonEventData m_EventData; // 0x18

	// Properties
	public PointerInputModule.MouseButtonEventData eventData { get; set; }
	public PointerEventData.InputButton button { get; set; }

	// Methods

	// RVA: 0xF12F34 Offset: 0xF12F34 VA: 0xF12F34
	public void .ctor() { }

	// RVA: 0xF12F40 Offset: 0xF12F40 VA: 0xF12F40
	public PointerInputModule.MouseButtonEventData get_eventData() { }

	// RVA: 0xF12F48 Offset: 0xF12F48 VA: 0xF12F48
	public void set_eventData(PointerInputModule.MouseButtonEventData value) { }

	// RVA: 0xF12F50 Offset: 0xF12F50 VA: 0xF12F50
	public PointerEventData.InputButton get_button() { }

	// RVA: 0xF12F58 Offset: 0xF12F58 VA: 0xF12F58
	public void set_button(PointerEventData.InputButton value) { }
}

// Namespace: 
protected class PointerInputModule.MouseState // TypeDefIndex: 3036
{
	// Fields
	private List<PointerInputModule.ButtonState> m_TrackedButtons; // 0x10

	// Methods

	// RVA: 0xF11A94 Offset: 0xF11A94 VA: 0xF11A94
	public void .ctor() { }

	// RVA: 0xF12F90 Offset: 0xF12F90 VA: 0xF12F90
	public bool AnyPressesThisFrame() { }

	// RVA: 0xF13074 Offset: 0xF13074 VA: 0xF13074
	public bool AnyReleasesThisFrame() { }

	// RVA: 0xF13158 Offset: 0xF13158 VA: 0xF13158
	public PointerInputModule.ButtonState GetButtonState(PointerEventData.InputButton button) { }

	// RVA: 0xF12530 Offset: 0xF12530 VA: 0xF12530
	public void SetButtonState(PointerEventData.InputButton button, PointerEventData.FramePressState stateForMouseButton, PointerEventData data) { }
}

// Namespace: 
public class PointerInputModule.MouseButtonEventData // TypeDefIndex: 3037
{
	// Fields
	public PointerEventData.FramePressState buttonState; // 0x10
	public PointerEventData buttonData; // 0x18

	// Methods

	// RVA: 0xF12F60 Offset: 0xF12F60 VA: 0xF12F60
	public void .ctor() { }

	// RVA: 0xF12F68 Offset: 0xF12F68 VA: 0xF12F68
	public bool PressedThisFrame() { }

	// RVA: 0xF12F7C Offset: 0xF12F7C VA: 0xF12F7C
	public bool ReleasedThisFrame() { }
}

// Namespace: UnityEngine.EventSystems
[AddComponentMenu] // RVA: 0xC7E120 Offset: 0xC7E120 VA: 0xC7E120
public class StandaloneInputModule : PointerInputModule // TypeDefIndex: 3038
{
	// Fields
	private float m_PrevActionTime; // 0x58
	private Vector2 m_LastMoveVector; // 0x5C
	private int m_ConsecutiveMoveCount; // 0x64
	private Vector2 m_LastMousePosition; // 0x68
	private Vector2 m_MousePosition; // 0x70
	private GameObject m_CurrentFocusedGameObject; // 0x78
	private PointerEventData m_InputPointerEvent; // 0x80
	[SerializeField] // RVA: 0xC7F800 Offset: 0xC7F800 VA: 0xC7F800
	private string m_HorizontalAxis; // 0x88
	[SerializeField] // RVA: 0xC7F810 Offset: 0xC7F810 VA: 0xC7F810
	private string m_VerticalAxis; // 0x90
	[SerializeField] // RVA: 0xC7F820 Offset: 0xC7F820 VA: 0xC7F820
	private string m_SubmitButton; // 0x98
	[SerializeField] // RVA: 0xC7F830 Offset: 0xC7F830 VA: 0xC7F830
	private string m_CancelButton; // 0xA0
	[SerializeField] // RVA: 0xC7F840 Offset: 0xC7F840 VA: 0xC7F840
	private float m_InputActionsPerSecond; // 0xA8
	[SerializeField] // RVA: 0xC7F850 Offset: 0xC7F850 VA: 0xC7F850
	private float m_RepeatDelay; // 0xAC
	[SerializeField] // RVA: 0xC7F860 Offset: 0xC7F860 VA: 0xC7F860
	[FormerlySerializedAsAttribute] // RVA: 0xC7F860 Offset: 0xC7F860 VA: 0xC7F860
	private bool m_ForceModuleActive; // 0xB0

	// Properties
	[ObsoleteAttribute] // RVA: 0xC820C8 Offset: 0xC820C8 VA: 0xC820C8
	public StandaloneInputModule.InputMode inputMode { get; }
	[ObsoleteAttribute] // RVA: 0xC82104 Offset: 0xC82104 VA: 0xC82104
	public bool allowActivationOnMobileDevice { get; set; }
	public bool forceModuleActive { get; set; }
	public float inputActionsPerSecond { get; set; }
	public float repeatDelay { get; set; }
	public string horizontalAxis { get; set; }
	public string verticalAxis { get; set; }
	public string submitButton { get; set; }
	public string cancelButton { get; set; }

	// Methods

	// RVA: 0xF134F0 Offset: 0xF134F0 VA: 0xF134F0
	protected void .ctor() { }

	// RVA: 0xF13580 Offset: 0xF13580 VA: 0xF13580
	public StandaloneInputModule.InputMode get_inputMode() { }

	// RVA: 0xF13588 Offset: 0xF13588 VA: 0xF13588
	public bool get_allowActivationOnMobileDevice() { }

	// RVA: 0xF13590 Offset: 0xF13590 VA: 0xF13590
	public void set_allowActivationOnMobileDevice(bool value) { }

	// RVA: 0xF1359C Offset: 0xF1359C VA: 0xF1359C
	public bool get_forceModuleActive() { }

	// RVA: 0xF135A4 Offset: 0xF135A4 VA: 0xF135A4
	public void set_forceModuleActive(bool value) { }

	// RVA: 0xF135B0 Offset: 0xF135B0 VA: 0xF135B0
	public float get_inputActionsPerSecond() { }

	// RVA: 0xF135B8 Offset: 0xF135B8 VA: 0xF135B8
	public void set_inputActionsPerSecond(float value) { }

	// RVA: 0xF135C0 Offset: 0xF135C0 VA: 0xF135C0
	public float get_repeatDelay() { }

	// RVA: 0xF135C8 Offset: 0xF135C8 VA: 0xF135C8
	public void set_repeatDelay(float value) { }

	// RVA: 0xF135D0 Offset: 0xF135D0 VA: 0xF135D0
	public string get_horizontalAxis() { }

	// RVA: 0xF135D8 Offset: 0xF135D8 VA: 0xF135D8
	public void set_horizontalAxis(string value) { }

	// RVA: 0xF135E0 Offset: 0xF135E0 VA: 0xF135E0
	public string get_verticalAxis() { }

	// RVA: 0xF135E8 Offset: 0xF135E8 VA: 0xF135E8
	public void set_verticalAxis(string value) { }

	// RVA: 0xF135F0 Offset: 0xF135F0 VA: 0xF135F0
	public string get_submitButton() { }

	// RVA: 0xF135F8 Offset: 0xF135F8 VA: 0xF135F8
	public void set_submitButton(string value) { }

	// RVA: 0xF13600 Offset: 0xF13600 VA: 0xF13600
	public string get_cancelButton() { }

	// RVA: 0xF13608 Offset: 0xF13608 VA: 0xF13608
	public void set_cancelButton(string value) { }

	// RVA: 0xF13610 Offset: 0xF13610 VA: 0xF13610
	private bool ShouldIgnoreEventsOnNoFocus() { }

	// RVA: 0xF13634 Offset: 0xF13634 VA: 0xF13634 Slot: 24
	public override void UpdateModule() { }

	// RVA: 0xF13798 Offset: 0xF13798 VA: 0xF13798 Slot: 25
	public override bool IsModuleSupported() { }

	// RVA: 0xF1381C Offset: 0xF1381C VA: 0xF1381C Slot: 21
	public override bool ShouldActivateModule() { }

	// RVA: 0xF13A88 Offset: 0xF13A88 VA: 0xF13A88 Slot: 23
	public override void ActivateModule() { }

	// RVA: 0xF13BF4 Offset: 0xF13BF4 VA: 0xF13BF4 Slot: 22
	public override void DeactivateModule() { }

	// RVA: 0xF13BF8 Offset: 0xF13BF8 VA: 0xF13BF8 Slot: 17
	public override void Process() { }

	// RVA: 0xF142A0 Offset: 0xF142A0 VA: 0xF142A0
	private bool ProcessTouchEvents() { }

	// RVA: 0xF14428 Offset: 0xF14428 VA: 0xF14428
	protected void ProcessTouchPress(PointerEventData pointerEvent, bool pressed, bool released) { }

	// RVA: 0xF140BC Offset: 0xF140BC VA: 0xF140BC
	protected bool SendSubmitEventToSelectedObject() { }

	// RVA: 0xF14950 Offset: 0xF14950 VA: 0xF14950
	private Vector2 GetRawMoveVector() { }

	// RVA: 0xF13DF8 Offset: 0xF13DF8 VA: 0xF13DF8
	protected bool SendMoveEventToSelectedObject() { }

	// RVA: 0xF14420 Offset: 0xF14420 VA: 0xF14420
	protected void ProcessMouseEvent() { }

	[ObsoleteAttribute] // RVA: 0xC818A0 Offset: 0xC818A0 VA: 0xC818A0
	// RVA: 0xF14D90 Offset: 0xF14D90 VA: 0xF14D90 Slot: 30
	protected virtual bool ForceAutoSelect() { }

	// RVA: 0xF14AD0 Offset: 0xF14AD0 VA: 0xF14AD0
	protected void ProcessMouseEvent(int id) { }

	// RVA: 0xF13CDC Offset: 0xF13CDC VA: 0xF13CDC
	protected bool SendUpdateEventToSelectedObject() { }

	// RVA: 0xF14D98 Offset: 0xF14D98 VA: 0xF14D98
	protected void ProcessMousePress(PointerInputModule.MouseButtonEventData data) { }

	// RVA: 0xF152A8 Offset: 0xF152A8 VA: 0xF152A8
	protected GameObject GetCurrentFocusedGameObject() { }
}

// Namespace: 
[ObsoleteAttribute] // RVA: 0xC7E158 Offset: 0xC7E158 VA: 0xC7E158
public enum StandaloneInputModule.InputMode // TypeDefIndex: 3039
{
	// Fields
	public int value__; // 0x0
	public const StandaloneInputModule.InputMode Mouse = 0;
	public const StandaloneInputModule.InputMode Buttons = 1;
}

// Namespace: UnityEngine.EventSystems
[ObsoleteAttribute] // RVA: 0xC7E194 Offset: 0xC7E194 VA: 0xC7E194
[AddComponentMenu] // RVA: 0xC7E194 Offset: 0xC7E194 VA: 0xC7E194
public class TouchInputModule : PointerInputModule // TypeDefIndex: 3040
{
	// Fields
	private Vector2 m_LastMousePosition; // 0x58
	private Vector2 m_MousePosition; // 0x60
	private PointerEventData m_InputPointerEvent; // 0x68
	[SerializeField] // RVA: 0xC7F8AC Offset: 0xC7F8AC VA: 0xC7F8AC
	[FormerlySerializedAsAttribute] // RVA: 0xC7F8AC Offset: 0xC7F8AC VA: 0xC7F8AC
	private bool m_ForceModuleActive; // 0x70

	// Properties
	[ObsoleteAttribute] // RVA: 0xC8213C Offset: 0xC8213C VA: 0xC8213C
	public bool allowActivationOnStandalone { get; set; }
	public bool forceModuleActive { get; set; }

	// Methods

	// RVA: 0xF152B0 Offset: 0xF152B0 VA: 0xF152B0
	protected void .ctor() { }

	// RVA: 0xF152B4 Offset: 0xF152B4 VA: 0xF152B4
	public bool get_allowActivationOnStandalone() { }

	// RVA: 0xF152BC Offset: 0xF152BC VA: 0xF152BC
	public void set_allowActivationOnStandalone(bool value) { }

	// RVA: 0xF152C8 Offset: 0xF152C8 VA: 0xF152C8
	public bool get_forceModuleActive() { }

	// RVA: 0xF152D0 Offset: 0xF152D0 VA: 0xF152D0
	public void set_forceModuleActive(bool value) { }

	// RVA: 0xF152DC Offset: 0xF152DC VA: 0xF152DC Slot: 24
	public override void UpdateModule() { }

	// RVA: 0xF15428 Offset: 0xF15428 VA: 0xF15428 Slot: 25
	public override bool IsModuleSupported() { }

	// RVA: 0xF15470 Offset: 0xF15470 VA: 0xF15470 Slot: 21
	public override bool ShouldActivateModule() { }

	// RVA: 0xF155B0 Offset: 0xF155B0 VA: 0xF155B0
	private bool UseFakeInput() { }

	// RVA: 0xF155F4 Offset: 0xF155F4 VA: 0xF155F4 Slot: 17
	public override void Process() { }

	// RVA: 0xF1562C Offset: 0xF1562C VA: 0xF1562C
	private void FakeTouches() { }

	// RVA: 0xF157B4 Offset: 0xF157B4 VA: 0xF157B4
	private void ProcessTouchEvents() { }

	// RVA: 0xF15914 Offset: 0xF15914 VA: 0xF15914
	protected void ProcessTouchPress(PointerEventData pointerEvent, bool pressed, bool released) { }

	// RVA: 0xF15E3C Offset: 0xF15E3C VA: 0xF15E3C Slot: 22
	public override void DeactivateModule() { }

	// RVA: 0xF15E40 Offset: 0xF15E40 VA: 0xF15E40 Slot: 3
	public override string ToString() { }
}

// Namespace: UnityEngine.EventSystems
public abstract class BaseRaycaster : UIBehaviour // TypeDefIndex: 3041
{
	// Properties
	public abstract Camera eventCamera { get; }
	[ObsoleteAttribute] // RVA: 0xC82174 Offset: 0xC82174 VA: 0xC82174
	public virtual int priority { get; }
	public virtual int sortOrderPriority { get; }
	public virtual int renderOrderPriority { get; }

	// Methods

	// RVA: 0xF0B9E8 Offset: 0xF0B9E8 VA: 0xF0B9E8
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 17
	public abstract void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList);

	// RVA: -1 Offset: -1 Slot: 18
	public abstract Camera get_eventCamera();

	// RVA: 0xF0B9F0 Offset: 0xF0B9F0 VA: 0xF0B9F0 Slot: 19
	public virtual int get_priority() { }

	// RVA: 0xF0B9F8 Offset: 0xF0B9F8 VA: 0xF0B9F8 Slot: 20
	public virtual int get_sortOrderPriority() { }

	// RVA: 0xF0BA00 Offset: 0xF0BA00 VA: 0xF0BA00 Slot: 21
	public virtual int get_renderOrderPriority() { }

	// RVA: 0xF0BA08 Offset: 0xF0BA08 VA: 0xF0BA08 Slot: 3
	public override string ToString() { }

	// RVA: 0xF0BD98 Offset: 0xF0BD98 VA: 0xF0BD98 Slot: 5
	protected override void OnEnable() { }

	// RVA: 0xF0BEEC Offset: 0xF0BEEC VA: 0xF0BEEC Slot: 7
	protected override void OnDisable() { }
}

// Namespace: UnityEngine.EventSystems
[AddComponentMenu] // RVA: 0xC7E1F4 Offset: 0xC7E1F4 VA: 0xC7E1F4
[RequireComponent] // RVA: 0xC7E1F4 Offset: 0xC7E1F4 VA: 0xC7E1F4
public class Physics2DRaycaster : PhysicsRaycaster // TypeDefIndex: 3042
{
	// Fields
	private RaycastHit2D[] m_Hits; // 0x38

	// Methods

	// RVA: 0xF0F59C Offset: 0xF0F59C VA: 0xF0F59C
	protected void .ctor() { }

	// RVA: 0xF0F60C Offset: 0xF0F60C VA: 0xF0F60C Slot: 17
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList) { }
}

// Namespace: UnityEngine.EventSystems
[AddComponentMenu] // RVA: 0xC7E27C Offset: 0xC7E27C VA: 0xC7E27C
[RequireComponent] // RVA: 0xC7E27C Offset: 0xC7E27C VA: 0xC7E27C
public class PhysicsRaycaster : BaseRaycaster // TypeDefIndex: 3043
{
	// Fields
	protected const int kNoEventMaskSet = -1;
	protected Camera m_EventCamera; // 0x18
	[SerializeField] // RVA: 0xC7F8F8 Offset: 0xC7F8F8 VA: 0xC7F8F8
	protected LayerMask m_EventMask; // 0x20
	[SerializeField] // RVA: 0xC7F908 Offset: 0xC7F908 VA: 0xC7F908
	protected int m_MaxRayIntersections; // 0x24
	protected int m_LastMaxRayIntersections; // 0x28
	private RaycastHit[] m_Hits; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC7F918 Offset: 0xC7F918 VA: 0xC7F918
	private static Comparison<RaycastHit> <>f__am$cache0; // 0x0

	// Properties
	public override Camera eventCamera { get; }
	public virtual int depth { get; }
	public int finalEventMask { get; }
	public LayerMask eventMask { get; set; }
	public int maxRayIntersections { get; set; }

	// Methods

	// RVA: 0xF0F5D4 Offset: 0xF0F5D4 VA: 0xF0F5D4
	protected void .ctor() { }

	// RVA: 0xF100F8 Offset: 0xF100F8 VA: 0xF100F8 Slot: 18
	public override Camera get_eventCamera() { }

	// RVA: 0xF101A0 Offset: 0xF101A0 VA: 0xF101A0 Slot: 22
	public virtual int get_depth() { }

	// RVA: 0xF1000C Offset: 0xF1000C VA: 0xF1000C
	public int get_finalEventMask() { }

	// RVA: 0xF10268 Offset: 0xF10268 VA: 0xF10268
	public LayerMask get_eventMask() { }

	// RVA: 0xF10270 Offset: 0xF10270 VA: 0xF10270
	public void set_eventMask(LayerMask value) { }

	// RVA: 0xF10004 Offset: 0xF10004 VA: 0xF10004
	public int get_maxRayIntersections() { }

	// RVA: 0xF10278 Offset: 0xF10278 VA: 0xF10278
	public void set_maxRayIntersections(int value) { }

	// RVA: 0xF0FC68 Offset: 0xF0FC68 VA: 0xF0FC68
	protected bool ComputeRayAndDistance(PointerEventData eventData, ref Ray ray, ref int eventDisplayIndex, ref float distanceToClipPlane) { }

	// RVA: 0xF10280 Offset: 0xF10280 VA: 0xF10280 Slot: 17
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList) { }

	[CompilerGeneratedAttribute] // RVA: 0xC818D8 Offset: 0xC818D8 VA: 0xC818D8
	// RVA: 0xF10784 Offset: 0xF10784 VA: 0xF10784
	private static int <Raycast>m__0(RaycastHit r1, RaycastHit r2) { }
}

// Namespace: UnityEngine.UI.CoroutineTween
internal interface ITweenValue // TypeDefIndex: 3044
{
	// Properties
	public abstract bool ignoreTimeScale { get; }
	public abstract float duration { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void TweenValue(float floatPercentage);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract bool get_ignoreTimeScale();

	// RVA: -1 Offset: -1 Slot: 2
	public abstract float get_duration();

	// RVA: -1 Offset: -1 Slot: 3
	public abstract bool ValidTarget();
}

// Namespace: UnityEngine.UI.CoroutineTween
internal struct ColorTween : ITweenValue // TypeDefIndex: 3045
{
	// Fields
	private ColorTween.ColorTweenCallback m_Target; // 0x0
	private Color m_StartColor; // 0x8
	private Color m_TargetColor; // 0x18
	private ColorTween.ColorTweenMode m_TweenMode; // 0x28
	private float m_Duration; // 0x2C
	private bool m_IgnoreTimeScale; // 0x30

	// Properties
	public Color startColor { get; set; }
	public Color targetColor { get; set; }
	public ColorTween.ColorTweenMode tweenMode { get; set; }
