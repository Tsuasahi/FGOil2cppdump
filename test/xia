	public bool get_isValid() { }

	// RVA: 0xD63988 Offset: 0xD63988 VA: 0xD63988
	public void Clear() { }

	// RVA: 0xD63990 Offset: 0xD63990 VA: 0xD63990 Slot: 3
	public override string ToString() { }
}

// Namespace: UnityEngine.EventSystems
internal static class RaycasterManager // TypeDefIndex: 3024
{
	// Fields
	private static readonly List<BaseRaycaster> s_Raycasters; // 0x0

	// Methods

	// RVA: 0x1F71488 Offset: 0x1F71488 VA: 0x1F71488
	public static void AddRaycaster(BaseRaycaster baseRaycaster) { }

	// RVA: 0x1F720C8 Offset: 0x1F720C8 VA: 0x1F720C8
	public static List<BaseRaycaster> GetRaycasters() { }

	// RVA: 0x1F715DC Offset: 0x1F715DC VA: 0x1F715DC
	public static void RemoveRaycasters(BaseRaycaster baseRaycaster) { }

	// RVA: 0x1F78B08 Offset: 0x1F78B08 VA: 0x1F78B08
	private static void .cctor() { }
}

// Namespace: UnityEngine.EventSystems
public abstract class UIBehaviour : MonoBehaviour // TypeDefIndex: 3025
{
	// Methods

	// RVA: 0x1F6FE28 Offset: 0x1F6FE28 VA: 0x1F6FE28
	protected void .ctor() { }

	// RVA: 0x1F7B700 Offset: 0x1F7B700 VA: 0x1F7B700 Slot: 4
	protected virtual void Awake() { }

	// RVA: 0x1F70240 Offset: 0x1F70240 VA: 0x1F70240 Slot: 5
	protected virtual void OnEnable() { }

	// RVA: 0x1F7B704 Offset: 0x1F7B704 VA: 0x1F7B704 Slot: 6
	protected virtual void Start() { }

	// RVA: 0x1F703D4 Offset: 0x1F703D4 VA: 0x1F703D4 Slot: 7
	protected virtual void OnDisable() { }

	// RVA: 0x1F7B708 Offset: 0x1F7B708 VA: 0x1F7B708 Slot: 8
	protected virtual void OnDestroy() { }

	// RVA: 0x1F7B70C Offset: 0x1F7B70C VA: 0x1F7B70C Slot: 9
	public virtual bool IsActive() { }

	// RVA: 0x1F7B714 Offset: 0x1F7B714 VA: 0x1F7B714 Slot: 10
	protected virtual void OnRectTransformDimensionsChange() { }

	// RVA: 0x1F7B718 Offset: 0x1F7B718 VA: 0x1F7B718 Slot: 11
	protected virtual void OnBeforeTransformParentChanged() { }

	// RVA: 0x1F7B71C Offset: 0x1F7B71C VA: 0x1F7B71C Slot: 12
	protected virtual void OnTransformParentChanged() { }

	// RVA: 0x1F7B720 Offset: 0x1F7B720 VA: 0x1F7B720 Slot: 13
	protected virtual void OnDidApplyAnimationProperties() { }

	// RVA: 0x1F7B724 Offset: 0x1F7B724 VA: 0x1F7B724 Slot: 14
	protected virtual void OnCanvasGroupChanged() { }

	// RVA: 0x1F7B728 Offset: 0x1F7B728 VA: 0x1F7B728 Slot: 15
	protected virtual void OnCanvasHierarchyChanged() { }

	// RVA: 0x1F7B72C Offset: 0x1F7B72C VA: 0x1F7B72C Slot: 16
	public bool IsDestroyed() { }
}

// Namespace: UnityEngine.EventSystems
public class AxisEventData : BaseEventData // TypeDefIndex: 3026
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC131EC Offset: 0xC131EC VA: 0xC131EC
	[DebuggerBrowsableAttribute] // RVA: 0xC131EC Offset: 0xC131EC VA: 0xC131EC
	private Vector2 <moveVector>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC13228 Offset: 0xC13228 VA: 0xC13228
	[DebuggerBrowsableAttribute] // RVA: 0xC13228 Offset: 0xC13228 VA: 0xC13228
	private MoveDirection <moveDir>k__BackingField; // 0x28

	// Properties
	public Vector2 moveVector { get; set; }
	public MoveDirection moveDir { get; set; }

	// Methods

	// RVA: 0x1F6FB10 Offset: 0x1F6FB10 VA: 0x1F6FB10
	public void .ctor(EventSystem eventSystem) { }

	[CompilerGeneratedAttribute] // RVA: 0xC154D8 Offset: 0xC154D8 VA: 0xC154D8
	// RVA: 0x1F6FBDC Offset: 0x1F6FBDC VA: 0x1F6FBDC
	public Vector2 get_moveVector() { }

	[CompilerGeneratedAttribute] // RVA: 0xC154E8 Offset: 0xC154E8 VA: 0xC154E8
	// RVA: 0x1F6FBCC Offset: 0x1F6FBCC VA: 0x1F6FBCC
	public void set_moveVector(Vector2 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC154F8 Offset: 0xC154F8 VA: 0xC154F8
	// RVA: 0x1F6FBE4 Offset: 0x1F6FBE4 VA: 0x1F6FBE4
	public MoveDirection get_moveDir() { }

	[CompilerGeneratedAttribute] // RVA: 0xC15508 Offset: 0xC15508 VA: 0xC15508
	// RVA: 0x1F6FBD4 Offset: 0x1F6FBD4 VA: 0x1F6FBD4
	public void set_moveDir(MoveDirection value) { }
}

// Namespace: UnityEngine.EventSystems
public abstract class AbstractEventData // TypeDefIndex: 3027
{
	// Fields
	protected bool m_Used; // 0x10

	// Properties
	public virtual bool used { get; }

	// Methods

	// RVA: 0x1F6FAEC Offset: 0x1F6FAEC VA: 0x1F6FAEC
	protected void .ctor() { }

	// RVA: 0x1F6FAF4 Offset: 0x1F6FAF4 VA: 0x1F6FAF4 Slot: 4
	public virtual void Reset() { }

	// RVA: 0x1F6FAFC Offset: 0x1F6FAFC VA: 0x1F6FAFC Slot: 5
	public virtual void Use() { }

	// RVA: 0x1F6FB08 Offset: 0x1F6FB08 VA: 0x1F6FB08 Slot: 6
	public virtual bool get_used() { }
}

// Namespace: UnityEngine.EventSystems
public class BaseEventData : AbstractEventData // TypeDefIndex: 3028
{
	// Fields
	private readonly EventSystem m_EventSystem; // 0x18

	// Properties
	public BaseInputModule currentInputModule { get; }
	public GameObject selectedObject { get; set; }

	// Methods

	// RVA: 0x1F6FBA0 Offset: 0x1F6FBA0 VA: 0x1F6FBA0
	public void .ctor(EventSystem eventSystem) { }

	// RVA: 0x1F6FBEC Offset: 0x1F6FBEC VA: 0x1F6FBEC
	public BaseInputModule get_currentInputModule() { }

	// RVA: 0x1F6FC20 Offset: 0x1F6FC20 VA: 0x1F6FC20
	public GameObject get_selectedObject() { }

	// RVA: 0x1F6FC54 Offset: 0x1F6FC54 VA: 0x1F6FC54
	public void set_selectedObject(GameObject value) { }
}

// Namespace: UnityEngine.EventSystems
public class PointerEventData : BaseEventData // TypeDefIndex: 3029
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC13264 Offset: 0xC13264 VA: 0xC13264
	[DebuggerBrowsableAttribute] // RVA: 0xC13264 Offset: 0xC13264 VA: 0xC13264
	private GameObject <pointerEnter>k__BackingField; // 0x20
	private GameObject m_PointerPress; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC132A0 Offset: 0xC132A0 VA: 0xC132A0
	[DebuggerBrowsableAttribute] // RVA: 0xC132A0 Offset: 0xC132A0 VA: 0xC132A0
	private GameObject <lastPress>k__BackingField; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC132DC Offset: 0xC132DC VA: 0xC132DC
	[DebuggerBrowsableAttribute] // RVA: 0xC132DC Offset: 0xC132DC VA: 0xC132DC
	private GameObject <rawPointerPress>k__BackingField; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC13318 Offset: 0xC13318 VA: 0xC13318
	[DebuggerBrowsableAttribute] // RVA: 0xC13318 Offset: 0xC13318 VA: 0xC13318
	private GameObject <pointerDrag>k__BackingField; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC13354 Offset: 0xC13354 VA: 0xC13354
	[DebuggerBrowsableAttribute] // RVA: 0xC13354 Offset: 0xC13354 VA: 0xC13354
	private RaycastResult <pointerCurrentRaycast>k__BackingField; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC13390 Offset: 0xC13390 VA: 0xC13390
	[DebuggerBrowsableAttribute] // RVA: 0xC13390 Offset: 0xC13390 VA: 0xC13390
	private RaycastResult <pointerPressRaycast>k__BackingField; // 0x90
	public List<GameObject> hovered; // 0xD8
	[CompilerGeneratedAttribute] // RVA: 0xC133CC Offset: 0xC133CC VA: 0xC133CC
	[DebuggerBrowsableAttribute] // RVA: 0xC133CC Offset: 0xC133CC VA: 0xC133CC
	private bool <eligibleForClick>k__BackingField; // 0xE0
	[CompilerGeneratedAttribute] // RVA: 0xC13408 Offset: 0xC13408 VA: 0xC13408
	[DebuggerBrowsableAttribute] // RVA: 0xC13408 Offset: 0xC13408 VA: 0xC13408
	private int <pointerId>k__BackingField; // 0xE4
	[CompilerGeneratedAttribute] // RVA: 0xC13444 Offset: 0xC13444 VA: 0xC13444
	[DebuggerBrowsableAttribute] // RVA: 0xC13444 Offset: 0xC13444 VA: 0xC13444
	private Vector2 <position>k__BackingField; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xC13480 Offset: 0xC13480 VA: 0xC13480
	[DebuggerBrowsableAttribute] // RVA: 0xC13480 Offset: 0xC13480 VA: 0xC13480
	private Vector2 <delta>k__BackingField; // 0xF0
	[CompilerGeneratedAttribute] // RVA: 0xC134BC Offset: 0xC134BC VA: 0xC134BC
	[DebuggerBrowsableAttribute] // RVA: 0xC134BC Offset: 0xC134BC VA: 0xC134BC
	private Vector2 <pressPosition>k__BackingField; // 0xF8
	[CompilerGeneratedAttribute] // RVA: 0xC134F8 Offset: 0xC134F8 VA: 0xC134F8
	[DebuggerBrowsableAttribute] // RVA: 0xC134F8 Offset: 0xC134F8 VA: 0xC134F8
	private Vector3 <worldPosition>k__BackingField; // 0x100
	[CompilerGeneratedAttribute] // RVA: 0xC13534 Offset: 0xC13534 VA: 0xC13534
	[DebuggerBrowsableAttribute] // RVA: 0xC13534 Offset: 0xC13534 VA: 0xC13534
	private Vector3 <worldNormal>k__BackingField; // 0x10C
	[CompilerGeneratedAttribute] // RVA: 0xC13570 Offset: 0xC13570 VA: 0xC13570
	[DebuggerBrowsableAttribute] // RVA: 0xC13570 Offset: 0xC13570 VA: 0xC13570
	private float <clickTime>k__BackingField; // 0x118
	[CompilerGeneratedAttribute] // RVA: 0xC135AC Offset: 0xC135AC VA: 0xC135AC
	[DebuggerBrowsableAttribute] // RVA: 0xC135AC Offset: 0xC135AC VA: 0xC135AC
	private int <clickCount>k__BackingField; // 0x11C
	[CompilerGeneratedAttribute] // RVA: 0xC135E8 Offset: 0xC135E8 VA: 0xC135E8
	[DebuggerBrowsableAttribute] // RVA: 0xC135E8 Offset: 0xC135E8 VA: 0xC135E8
	private Vector2 <scrollDelta>k__BackingField; // 0x120
	[CompilerGeneratedAttribute] // RVA: 0xC13624 Offset: 0xC13624 VA: 0xC13624
	[DebuggerBrowsableAttribute] // RVA: 0xC13624 Offset: 0xC13624 VA: 0xC13624
	private bool <useDragThreshold>k__BackingField; // 0x128
	[CompilerGeneratedAttribute] // RVA: 0xC13660 Offset: 0xC13660 VA: 0xC13660
	[DebuggerBrowsableAttribute] // RVA: 0xC13660 Offset: 0xC13660 VA: 0xC13660
	private bool <dragging>k__BackingField; // 0x129
	[CompilerGeneratedAttribute] // RVA: 0xC1369C Offset: 0xC1369C VA: 0xC1369C
	[DebuggerBrowsableAttribute] // RVA: 0xC1369C Offset: 0xC1369C VA: 0xC1369C
	private PointerEventData.InputButton <button>k__BackingField; // 0x12C

	// Properties
	public GameObject pointerEnter { get; set; }
	public GameObject lastPress { get; set; }
	public GameObject rawPointerPress { get; set; }
	public GameObject pointerDrag { get; set; }
	public RaycastResult pointerCurrentRaycast { get; set; }
	public RaycastResult pointerPressRaycast { get; set; }
	public bool eligibleForClick { get; set; }
	public int pointerId { get; set; }
	public Vector2 position { get; set; }
	public Vector2 delta { get; set; }
	public Vector2 pressPosition { get; set; }
	[ObsoleteAttribute] // RVA: 0xC15F30 Offset: 0xC15F30 VA: 0xC15F30
	public Vector3 worldPosition { get; set; }
	[ObsoleteAttribute] // RVA: 0xC15F68 Offset: 0xC15F68 VA: 0xC15F68
	public Vector3 worldNormal { get; set; }
	public float clickTime { get; set; }
	public int clickCount { get; set; }
	public Vector2 scrollDelta { get; set; }
	public bool useDragThreshold { get; set; }
	public bool dragging { get; set; }
	public PointerEventData.InputButton button { get; set; }
	public Camera enterEventCamera { get; }
	public Camera pressEventCamera { get; }
	public GameObject pointerPress { get; set; }

	// Methods

	// RVA: 0x1F75E50 Offset: 0x1F75E50 VA: 0x1F75E50
	public void .ctor(EventSystem eventSystem) { }

	[CompilerGeneratedAttribute] // RVA: 0xC15518 Offset: 0xC15518 VA: 0xC15518
	// RVA: 0x1F70D78 Offset: 0x1F70D78 VA: 0x1F70D78
	public GameObject get_pointerEnter() { }

	[CompilerGeneratedAttribute] // RVA: 0xC15528 Offset: 0xC15528 VA: 0xC15528
	// RVA: 0x1F70DE8 Offset: 0x1F70DE8 VA: 0x1F70DE8
	public void set_pointerEnter(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC15538 Offset: 0xC15538 VA: 0xC15538
	// RVA: 0x1F75FAC Offset: 0x1F75FAC VA: 0x1F75FAC
	public GameObject get_lastPress() { }

	[CompilerGeneratedAttribute] // RVA: 0xC15548 Offset: 0xC15548 VA: 0xC15548
	// RVA: 0x1F75FB4 Offset: 0x1F75FB4 VA: 0x1F75FB4
	private void set_lastPress(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC15558 Offset: 0xC15558 VA: 0xC15558
	// RVA: 0x1F75FBC Offset: 0x1F75FBC VA: 0x1F75FBC
	public GameObject get_rawPointerPress() { }

	[CompilerGeneratedAttribute] // RVA: 0xC15568 Offset: 0xC15568 VA: 0xC15568
	// RVA: 0x1F75FC4 Offset: 0x1F75FC4 VA: 0x1F75FC4
	public void set_rawPointerPress(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC15578 Offset: 0xC15578 VA: 0xC15578
	// RVA: 0x1F75FCC Offset: 0x1F75FCC VA: 0x1F75FCC
	public GameObject get_pointerDrag() { }

	[CompilerGeneratedAttribute] // RVA: 0xC15588 Offset: 0xC15588 VA: 0xC15588
	// RVA: 0x1F75FD4 Offset: 0x1F75FD4 VA: 0x1F75FD4
	public void set_pointerDrag(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC15598 Offset: 0xC15598 VA: 0xC15598
	// RVA: 0x1F75FDC Offset: 0x1F75FDC VA: 0x1F75FDC
	public RaycastResult get_pointerCurrentRaycast() { }

	[CompilerGeneratedAttribute] // RVA: 0xC155A8 Offset: 0xC155A8 VA: 0xC155A8
	// RVA: 0x1F75FFC Offset: 0x1F75FFC VA: 0x1F75FFC
	public void set_pointerCurrentRaycast(RaycastResult value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC155B8 Offset: 0xC155B8 VA: 0xC155B8
	// RVA: 0x1F76018 Offset: 0x1F76018 VA: 0x1F76018
	public RaycastResult get_pointerPressRaycast() { }

	[CompilerGeneratedAttribute] // RVA: 0xC155C8 Offset: 0xC155C8 VA: 0xC155C8
	// RVA: 0x1F76038 Offset: 0x1F76038 VA: 0x1F76038
	public void set_pointerPressRaycast(RaycastResult value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC155D8 Offset: 0xC155D8 VA: 0xC155D8
	// RVA: 0x1F76054 Offset: 0x1F76054 VA: 0x1F76054
	public bool get_eligibleForClick() { }

	[CompilerGeneratedAttribute] // RVA: 0xC155E8 Offset: 0xC155E8 VA: 0xC155E8
	// RVA: 0x1F75F44 Offset: 0x1F75F44 VA: 0x1F75F44
	public void set_eligibleForClick(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC155F8 Offset: 0xC155F8 VA: 0xC155F8
	// RVA: 0x1F7605C Offset: 0x1F7605C VA: 0x1F7605C
	public int get_pointerId() { }

	[CompilerGeneratedAttribute] // RVA: 0xC15608 Offset: 0xC15608 VA: 0xC15608
	// RVA: 0x1F75F50 Offset: 0x1F75F50 VA: 0x1F75F50
	public void set_pointerId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC15618 Offset: 0xC15618 VA: 0xC15618
	// RVA: 0x1F7577C Offset: 0x1F7577C VA: 0x1F7577C
	public Vector2 get_position() { }

	[CompilerGeneratedAttribute] // RVA: 0xC15628 Offset: 0xC15628 VA: 0xC15628
	// RVA: 0x1F75F58 Offset: 0x1F75F58 VA: 0x1F75F58
	public void set_position(Vector2 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC15638 Offset: 0xC15638 VA: 0xC15638
	// RVA: 0x1F76064 Offset: 0x1F76064 VA: 0x1F76064
	public Vector2 get_delta() { }

	[CompilerGeneratedAttribute] // RVA: 0xC15648 Offset: 0xC15648 VA: 0xC15648
	// RVA: 0x1F75F60 Offset: 0x1F75F60 VA: 0x1F75F60
	public void set_delta(Vector2 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC15658 Offset: 0xC15658 VA: 0xC15658
	// RVA: 0x1F7606C Offset: 0x1F7606C VA: 0x1F7606C
	public Vector2 get_pressPosition() { }

	[CompilerGeneratedAttribute] // RVA: 0xC15668 Offset: 0xC15668 VA: 0xC15668
	// RVA: 0x1F75F68 Offset: 0x1F75F68 VA: 0x1F75F68
	public void set_pressPosition(Vector2 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC15678 Offset: 0xC15678 VA: 0xC15678
	// RVA: 0x1F76074 Offset: 0x1F76074 VA: 0x1F76074
	public Vector3 get_worldPosition() { }

	[CompilerGeneratedAttribute] // RVA: 0xC15688 Offset: 0xC15688 VA: 0xC15688
	// RVA: 0x1F76084 Offset: 0x1F76084 VA: 0x1F76084
	public void set_worldPosition(Vector3 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC15698 Offset: 0xC15698 VA: 0xC15698
	// RVA: 0x1F76094 Offset: 0x1F76094 VA: 0x1F76094
	public Vector3 get_worldNormal() { }

	[CompilerGeneratedAttribute] // RVA: 0xC156A8 Offset: 0xC156A8 VA: 0xC156A8
	// RVA: 0x1F760A4 Offset: 0x1F760A4 VA: 0x1F760A4
	public void set_worldNormal(Vector3 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC156B8 Offset: 0xC156B8 VA: 0xC156B8
	// RVA: 0x1F760B4 Offset: 0x1F760B4 VA: 0x1F760B4
	public float get_clickTime() { }

	[CompilerGeneratedAttribute] // RVA: 0xC156C8 Offset: 0xC156C8 VA: 0xC156C8
	// RVA: 0x1F75F70 Offset: 0x1F75F70 VA: 0x1F75F70
	public void set_clickTime(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC156D8 Offset: 0xC156D8 VA: 0xC156D8
	// RVA: 0x1F760BC Offset: 0x1F760BC VA: 0x1F760BC
	public int get_clickCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xC156E8 Offset: 0xC156E8 VA: 0xC156E8
	// RVA: 0x1F75F78 Offset: 0x1F75F78 VA: 0x1F75F78
	public void set_clickCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC156F8 Offset: 0xC156F8 VA: 0xC156F8
	// RVA: 0x1F760C4 Offset: 0x1F760C4 VA: 0x1F760C4
	public Vector2 get_scrollDelta() { }

	[CompilerGeneratedAttribute] // RVA: 0xC15708 Offset: 0xC15708 VA: 0xC15708
	// RVA: 0x1F75F80 Offset: 0x1F75F80 VA: 0x1F75F80
	public void set_scrollDelta(Vector2 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC15718 Offset: 0xC15718 VA: 0xC15718
	// RVA: 0x1F760D0 Offset: 0x1F760D0 VA: 0x1F760D0
	public bool get_useDragThreshold() { }

	[CompilerGeneratedAttribute] // RVA: 0xC15728 Offset: 0xC15728 VA: 0xC15728
	// RVA: 0x1F75F8C Offset: 0x1F75F8C VA: 0x1F75F8C
	public void set_useDragThreshold(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC15738 Offset: 0xC15738 VA: 0xC15738
	// RVA: 0x1F760D8 Offset: 0x1F760D8 VA: 0x1F760D8
	public bool get_dragging() { }

	[CompilerGeneratedAttribute] // RVA: 0xC15748 Offset: 0xC15748 VA: 0xC15748
	// RVA: 0x1F75F98 Offset: 0x1F75F98 VA: 0x1F75F98
	public void set_dragging(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC15758 Offset: 0xC15758 VA: 0xC15758
	// RVA: 0x1F760E0 Offset: 0x1F760E0 VA: 0x1F760E0
	public PointerEventData.InputButton get_button() { }

	[CompilerGeneratedAttribute] // RVA: 0xC15768 Offset: 0xC15768 VA: 0xC15768
	// RVA: 0x1F75FA4 Offset: 0x1F75FA4 VA: 0x1F75FA4
	public void set_button(PointerEventData.InputButton value) { }

	// RVA: 0x1F760E8 Offset: 0x1F760E8 VA: 0x1F760E8
	public bool IsPointerMoving() { }

	// RVA: 0x1F7611C Offset: 0x1F7611C VA: 0x1F7611C
	public bool IsScrolling() { }

	// RVA: 0x1F76154 Offset: 0x1F76154 VA: 0x1F76154
	public Camera get_enterEventCamera() { }

	// RVA: 0x1F761FC Offset: 0x1F761FC VA: 0x1F761FC
	public Camera get_pressEventCamera() { }

	// RVA: 0x1F762A4 Offset: 0x1F762A4 VA: 0x1F762A4
	public GameObject get_pointerPress() { }

	// RVA: 0x1F762AC Offset: 0x1F762AC VA: 0x1F762AC
	public void set_pointerPress(GameObject value) { }

	// RVA: 0x1F76338 Offset: 0x1F76338 VA: 0x1F76338 Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum PointerEventData.InputButton // TypeDefIndex: 3030
{
	// Fields
	public int value__; // 0x0
	public const PointerEventData.InputButton Left = 0;
	public const PointerEventData.InputButton Right = 1;
	public const PointerEventData.InputButton Middle = 2;
}

// Namespace: 
public enum PointerEventData.FramePressState // TypeDefIndex: 3031
{
	// Fields
	public int value__; // 0x0
	public const PointerEventData.FramePressState Pressed = 0;
	public const PointerEventData.FramePressState Released = 1;
	public const PointerEventData.FramePressState PressedAndReleased = 2;
	public const PointerEventData.FramePressState NotChanged = 3;
}

// Namespace: UnityEngine.EventSystems
public class BaseInput : UIBehaviour // TypeDefIndex: 3032
{
	// Properties
	public virtual string compositionString { get; }
	public virtual IMECompositionMode imeCompositionMode { get; set; }
	public virtual Vector2 compositionCursorPos { get; set; }
	public virtual bool mousePresent { get; }
	public virtual Vector2 mousePosition { get; }
	public virtual Vector2 mouseScrollDelta { get; }
	public virtual bool touchSupported { get; }
	public virtual int touchCount { get; }

	// Methods

	// RVA: 0x1F6FE20 Offset: 0x1F6FE20 VA: 0x1F6FE20
	public void .ctor() { }

	// RVA: 0x1F6FE30 Offset: 0x1F6FE30 VA: 0x1F6FE30 Slot: 17
	public virtual string get_compositionString() { }

	// RVA: 0x1F6FE38 Offset: 0x1F6FE38 VA: 0x1F6FE38 Slot: 18
	public virtual IMECompositionMode get_imeCompositionMode() { }

	// RVA: 0x1F6FE40 Offset: 0x1F6FE40 VA: 0x1F6FE40 Slot: 19
	public virtual void set_imeCompositionMode(IMECompositionMode value) { }

	// RVA: 0x1F6FE4C Offset: 0x1F6FE4C VA: 0x1F6FE4C Slot: 20
	public virtual Vector2 get_compositionCursorPos() { }

	// RVA: 0x1F6FE54 Offset: 0x1F6FE54 VA: 0x1F6FE54 Slot: 21
	public virtual void set_compositionCursorPos(Vector2 value) { }

	// RVA: 0x1F6FE5C Offset: 0x1F6FE5C VA: 0x1F6FE5C Slot: 22
	public virtual bool get_mousePresent() { }

	// RVA: 0x1F6FE64 Offset: 0x1F6FE64 VA: 0x1F6FE64 Slot: 23
	public virtual bool GetMouseButtonDown(int button) { }

	// RVA: 0x1F6FE70 Offset: 0x1F6FE70 VA: 0x1F6FE70 Slot: 24
	public virtual bool GetMouseButtonUp(int button) { }

	// RVA: 0x1F6FE7C Offset: 0x1F6FE7C VA: 0x1F6FE7C Slot: 25
	public virtual bool GetMouseButton(int button) { }

	// RVA: 0x1F6FE88 Offset: 0x1F6FE88 VA: 0x1F6FE88 Slot: 26
	public virtual Vector2 get_mousePosition() { }

	// RVA: 0x1F6FE90 Offset: 0x1F6FE90 VA: 0x1F6FE90 Slot: 27
	public virtual Vector2 get_mouseScrollDelta() { }

	// RVA: 0x1F6FE98 Offset: 0x1F6FE98 VA: 0x1F6FE98 Slot: 28
	public virtual bool get_touchSupported() { }

	// RVA: 0x1F6FEA0 Offset: 0x1F6FEA0 VA: 0x1F6FEA0 Slot: 29
	public virtual int get_touchCount() { }

	// RVA: 0x1F6FEA8 Offset: 0x1F6FEA8 VA: 0x1F6FEA8 Slot: 30
	public virtual Touch GetTouch(int index) { }

	// RVA: 0x1F6FF10 Offset: 0x1F6FF10 VA: 0x1F6FF10 Slot: 31
	public virtual float GetAxisRaw(string axisName) { }

	// RVA: 0x1F6FF1C Offset: 0x1F6FF1C VA: 0x1F6FF1C Slot: 32
	public virtual bool GetButtonDown(string buttonName) { }
}

// Namespace: UnityEngine.EventSystems
[RequireComponent] // RVA: 0xC11F94 Offset: 0xC11F94 VA: 0xC11F94
public abstract class BaseInputModule : UIBehaviour // TypeDefIndex: 3033
{
	// Fields
	protected List<RaycastResult> m_RaycastResultCache; // 0x18
	private AxisEventData m_AxisEventData; // 0x20
	private EventSystem m_EventSystem; // 0x28
	private BaseEventData m_BaseEventData; // 0x30
	protected BaseInput m_InputOverride; // 0x38
	private BaseInput m_DefaultInput; // 0x40

	// Properties
	public BaseInput input { get; }
	public BaseInput inputOverride { get; set; }
	protected EventSystem eventSystem { get; }

	// Methods

	// RVA: 0x1F6FF28 Offset: 0x1F6FF28 VA: 0x1F6FF28
	protected void .ctor() { }

	// RVA: 0x1F6FF98 Offset: 0x1F6FF98 VA: 0x1F6FF98
	public BaseInput get_input() { }

	// RVA: 0x1F701C0 Offset: 0x1F701C0 VA: 0x1F701C0
	public BaseInput get_inputOverride() { }

	// RVA: 0x1F701C8 Offset: 0x1F701C8 VA: 0x1F701C8
	public void set_inputOverride(BaseInput value) { }

	// RVA: 0x1F701D0 Offset: 0x1F701D0 VA: 0x1F701D0
	protected EventSystem get_eventSystem() { }

	// RVA: 0x1F701D8 Offset: 0x1F701D8 VA: 0x1F701D8 Slot: 5
	protected override void OnEnable() { }

	// RVA: 0x1F703A8 Offset: 0x1F703A8 VA: 0x1F703A8 Slot: 7
	protected override void OnDisable() { }

	// RVA: -1 Offset: -1 Slot: 17
	public abstract void Process();

	// RVA: 0x1F703D8 Offset: 0x1F703D8 VA: 0x1F703D8
	protected static RaycastResult FindFirstRaycast(List<RaycastResult> candidates) { }

	// RVA: 0x1F7053C Offset: 0x1F7053C VA: 0x1F7053C
	protected static MoveDirection DetermineMoveDirection(float x, float y) { }

	// RVA: 0x1F70548 Offset: 0x1F70548 VA: 0x1F70548
	protected static MoveDirection DetermineMoveDirection(float x, float y, float deadZone) { }

	// RVA: 0x1F7062C Offset: 0x1F7062C VA: 0x1F7062C
	protected static GameObject FindCommonRoot(GameObject g1, GameObject g2) { }

	// RVA: 0x1F707F8 Offset: 0x1F707F8 VA: 0x1F707F8
	protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget) { }

	// RVA: 0x1F70E58 Offset: 0x1F70E58 VA: 0x1F70E58 Slot: 18
	protected virtual AxisEventData GetAxisEventData(float x, float y, float moveDeadZone) { }

	// RVA: 0x1F70F68 Offset: 0x1F70F68 VA: 0x1F70F68 Slot: 19
	protected virtual BaseEventData GetBaseEventData() { }

	// RVA: 0x1F71000 Offset: 0x1F71000 VA: 0x1F71000 Slot: 20
	public virtual bool IsPointerOverGameObject(int pointerId) { }

	// RVA: 0x1F71008 Offset: 0x1F71008 VA: 0x1F71008 Slot: 21
	public virtual bool ShouldActivateModule() { }

	// RVA: 0x1F71060 Offset: 0x1F71060 VA: 0x1F71060 Slot: 22
	public virtual void DeactivateModule() { }

	// RVA: 0x1F71064 Offset: 0x1F71064 VA: 0x1F71064 Slot: 23
	public virtual void ActivateModule() { }

	// RVA: 0x1F71068 Offset: 0x1F71068 VA: 0x1F71068 Slot: 24
	public virtual void UpdateModule() { }

	// RVA: 0x1F7106C Offset: 0x1F7106C VA: 0x1F7106C Slot: 25
	public virtual bool IsModuleSupported() { }
}

// Namespace: UnityEngine.EventSystems
public abstract class PointerInputModule : BaseInputModule // TypeDefIndex: 3034
{
	// Fields
	public const int kMouseLeftId = -1;
	public const int kMouseRightId = -2;
	public const int kMouseMiddleId = -3;
	public const int kFakeTouchesId = -4;
	protected Dictionary<int, PointerEventData> m_PointerData; // 0x48
	private readonly PointerInputModule.MouseState m_MouseState; // 0x50

	// Methods

	// RVA: 0x1F77098 Offset: 0x1F77098 VA: 0x1F77098
	protected void .ctor() { }

	// RVA: 0x1F77190 Offset: 0x1F77190 VA: 0x1F77190
	protected bool GetPointerData(int id, out PointerEventData data, bool create) { }

	// RVA: 0x1F7728C Offset: 0x1F7728C VA: 0x1F7728C
	protected void RemovePointerData(PointerEventData data) { }

	// RVA: 0x1F7730C Offset: 0x1F7730C VA: 0x1F7730C
	protected PointerEventData GetTouchPointerEventData(Touch input, out bool pressed, out bool released) { }

	// RVA: 0x1F77620 Offset: 0x1F77620 VA: 0x1F77620
	protected void CopyFromTo(PointerEventData from, PointerEventData to) { }

	// RVA: 0x1F776F4 Offset: 0x1F776F4 VA: 0x1F776F4
	protected PointerEventData.FramePressState StateForMouseButton(int buttonId) { }

	// RVA: 0x1F77790 Offset: 0x1F77790 VA: 0x1F77790 Slot: 26
	protected virtual PointerInputModule.MouseState GetMousePointerEventData() { }

	// RVA: 0x1F777A4 Offset: 0x1F777A4 VA: 0x1F777A4 Slot: 27
	protected virtual PointerInputModule.MouseState GetMousePointerEventData(int id) { }

	// RVA: 0x1F77C1C Offset: 0x1F77C1C VA: 0x1F77C1C
	protected PointerEventData GetLastPointerEventData(int id) { }

	// RVA: 0x1F77C48 Offset: 0x1F77C48 VA: 0x1F77C48
	private static bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold) { }

	// RVA: 0x1F77D18 Offset: 0x1F77D18 VA: 0x1F77D18 Slot: 28
	protected virtual void ProcessMove(PointerEventData pointerEvent) { }

	// RVA: 0x1F77D5C Offset: 0x1F77D5C VA: 0x1F77D5C Slot: 29
	protected virtual void ProcessDrag(PointerEventData pointerEvent) { }

	// RVA: 0x1F77F9C Offset: 0x1F77F9C VA: 0x1F77F9C Slot: 20
	public override bool IsPointerOverGameObject(int pointerId) { }

	// RVA: 0x1F78048 Offset: 0x1F78048 VA: 0x1F78048
	protected void ClearSelection() { }

	// RVA: 0x1F781DC Offset: 0x1F781DC VA: 0x1F781DC Slot: 3
	public override string ToString() { }

	// RVA: 0x1F784C4 Offset: 0x1F784C4 VA: 0x1F784C4
	protected void DeselectIfSelectionChanged(GameObject currentOverGo, BaseEventData pointerEvent) { }
}

// Namespace: 
protected class PointerInputModule.ButtonState // TypeDefIndex: 3035
{
	// Fields
	private PointerEventData.InputButton m_Button; // 0x10
	private PointerInputModule.MouseButtonEventData m_EventData; // 0x18

	// Properties
	public PointerInputModule.MouseButtonEventData eventData { get; set; }
	public PointerEventData.InputButton button { get; set; }

	// Methods

	// RVA: 0x1F785C0 Offset: 0x1F785C0 VA: 0x1F785C0
	public void .ctor() { }

	// RVA: 0x1F785CC Offset: 0x1F785CC VA: 0x1F785CC
	public PointerInputModule.MouseButtonEventData get_eventData() { }

	// RVA: 0x1F785D4 Offset: 0x1F785D4 VA: 0x1F785D4
	public void set_eventData(PointerInputModule.MouseButtonEventData value) { }

	// RVA: 0x1F785DC Offset: 0x1F785DC VA: 0x1F785DC
	public PointerEventData.InputButton get_button() { }

	// RVA: 0x1F785E4 Offset: 0x1F785E4 VA: 0x1F785E4
	public void set_button(PointerEventData.InputButton value) { }
}

// Namespace: 
protected class PointerInputModule.MouseState // TypeDefIndex: 3036
{
	// Fields
	private List<PointerInputModule.ButtonState> m_TrackedButtons; // 0x10

	// Methods

	// RVA: 0x1F77120 Offset: 0x1F77120 VA: 0x1F77120
	public void .ctor() { }

	// RVA: 0x1F7861C Offset: 0x1F7861C VA: 0x1F7861C
	public bool AnyPressesThisFrame() { }

	// RVA: 0x1F78700 Offset: 0x1F78700 VA: 0x1F78700
	public bool AnyReleasesThisFrame() { }

	// RVA: 0x1F787E4 Offset: 0x1F787E4 VA: 0x1F787E4
	public PointerInputModule.ButtonState GetButtonState(PointerEventData.InputButton button) { }

	// RVA: 0x1F77BBC Offset: 0x1F77BBC VA: 0x1F77BBC
	public void SetButtonState(PointerEventData.InputButton button, PointerEventData.FramePressState stateForMouseButton, PointerEventData data) { }
}

// Namespace: 
public class PointerInputModule.MouseButtonEventData // TypeDefIndex: 3037
{
	// Fields
	public PointerEventData.FramePressState buttonState; // 0x10
	public PointerEventData buttonData; // 0x18

	// Methods

	// RVA: 0x1F785EC Offset: 0x1F785EC VA: 0x1F785EC
	public void .ctor() { }

	// RVA: 0x1F785F4 Offset: 0x1F785F4 VA: 0x1F785F4
	public bool PressedThisFrame() { }

	// RVA: 0x1F78608 Offset: 0x1F78608 VA: 0x1F78608
	public bool ReleasedThisFrame() { }
}

// Namespace: UnityEngine.EventSystems
[AddComponentMenu] // RVA: 0xC11FF8 Offset: 0xC11FF8 VA: 0xC11FF8
public class StandaloneInputModule : PointerInputModule // TypeDefIndex: 3038
{
	// Fields
	private float m_PrevActionTime; // 0x58
	private Vector2 m_LastMoveVector; // 0x5C
	private int m_ConsecutiveMoveCount; // 0x64
	private Vector2 m_LastMousePosition; // 0x68
	private Vector2 m_MousePosition; // 0x70
	private GameObject m_CurrentFocusedGameObject; // 0x78
	private PointerEventData m_InputPointerEvent; // 0x80
	[SerializeField] // RVA: 0xC136D8 Offset: 0xC136D8 VA: 0xC136D8
	private string m_HorizontalAxis; // 0x88
	[SerializeField] // RVA: 0xC136E8 Offset: 0xC136E8 VA: 0xC136E8
	private string m_VerticalAxis; // 0x90
	[SerializeField] // RVA: 0xC136F8 Offset: 0xC136F8 VA: 0xC136F8
	private string m_SubmitButton; // 0x98
	[SerializeField] // RVA: 0xC13708 Offset: 0xC13708 VA: 0xC13708
	private string m_CancelButton; // 0xA0
	[SerializeField] // RVA: 0xC13718 Offset: 0xC13718 VA: 0xC13718
	private float m_InputActionsPerSecond; // 0xA8
	[SerializeField] // RVA: 0xC13728 Offset: 0xC13728 VA: 0xC13728
	private float m_RepeatDelay; // 0xAC
	[SerializeField] // RVA: 0xC13738 Offset: 0xC13738 VA: 0xC13738
	[FormerlySerializedAsAttribute] // RVA: 0xC13738 Offset: 0xC13738 VA: 0xC13738
	private bool m_ForceModuleActive; // 0xB0

	// Properties
	[ObsoleteAttribute] // RVA: 0xC15FA0 Offset: 0xC15FA0 VA: 0xC15FA0
	public StandaloneInputModule.InputMode inputMode { get; }
	[ObsoleteAttribute] // RVA: 0xC15FDC Offset: 0xC15FDC VA: 0xC15FDC
	public bool allowActivationOnMobileDevice { get; set; }
	public bool forceModuleActive { get; set; }
	public float inputActionsPerSecond { get; set; }
	public float repeatDelay { get; set; }
	public string horizontalAxis { get; set; }
	public string verticalAxis { get; set; }
	public string submitButton { get; set; }
	public string cancelButton { get; set; }

	// Methods

	// RVA: 0x1F78B7C Offset: 0x1F78B7C VA: 0x1F78B7C
	protected void .ctor() { }

	// RVA: 0x1F78C0C Offset: 0x1F78C0C VA: 0x1F78C0C
	public StandaloneInputModule.InputMode get_inputMode() { }

	// RVA: 0x1F78C14 Offset: 0x1F78C14 VA: 0x1F78C14
	public bool get_allowActivationOnMobileDevice() { }

	// RVA: 0x1F78C1C Offset: 0x1F78C1C VA: 0x1F78C1C
	public void set_allowActivationOnMobileDevice(bool value) { }

	// RVA: 0x1F78C28 Offset: 0x1F78C28 VA: 0x1F78C28
	public bool get_forceModuleActive() { }

	// RVA: 0x1F78C30 Offset: 0x1F78C30 VA: 0x1F78C30
	public void set_forceModuleActive(bool value) { }

	// RVA: 0x1F78C3C Offset: 0x1F78C3C VA: 0x1F78C3C
	public float get_inputActionsPerSecond() { }

	// RVA: 0x1F78C44 Offset: 0x1F78C44 VA: 0x1F78C44
	public void set_inputActionsPerSecond(float value) { }

	// RVA: 0x1F78C4C Offset: 0x1F78C4C VA: 0x1F78C4C
	public float get_repeatDelay() { }

	// RVA: 0x1F78C54 Offset: 0x1F78C54 VA: 0x1F78C54
	public void set_repeatDelay(float value) { }

	// RVA: 0x1F78C5C Offset: 0x1F78C5C VA: 0x1F78C5C
	public string get_horizontalAxis() { }

	// RVA: 0x1F78C64 Offset: 0x1F78C64 VA: 0x1F78C64
	public void set_horizontalAxis(string value) { }

	// RVA: 0x1F78C6C Offset: 0x1F78C6C VA: 0x1F78C6C
	public string get_verticalAxis() { }

	// RVA: 0x1F78C74 Offset: 0x1F78C74 VA: 0x1F78C74
	public void set_verticalAxis(string value) { }

	// RVA: 0x1F78C7C Offset: 0x1F78C7C VA: 0x1F78C7C
	public string get_submitButton() { }

	// RVA: 0x1F78C84 Offset: 0x1F78C84 VA: 0x1F78C84
	public void set_submitButton(string value) { }

	// RVA: 0x1F78C8C Offset: 0x1F78C8C VA: 0x1F78C8C
	public string get_cancelButton() { }

	// RVA: 0x1F78C94 Offset: 0x1F78C94 VA: 0x1F78C94
	public void set_cancelButton(string value) { }

	// RVA: 0x1F78C9C Offset: 0x1F78C9C VA: 0x1F78C9C
	private bool ShouldIgnoreEventsOnNoFocus() { }

	// RVA: 0x1F78CC0 Offset: 0x1F78CC0 VA: 0x1F78CC0 Slot: 24
	public override void UpdateModule() { }

	// RVA: 0x1F78E24 Offset: 0x1F78E24 VA: 0x1F78E24 Slot: 25
	public override bool IsModuleSupported() { }

	// RVA: 0x1F78EA8 Offset: 0x1F78EA8 VA: 0x1F78EA8 Slot: 21
	public override bool ShouldActivateModule() { }

	// RVA: 0x1F79114 Offset: 0x1F79114 VA: 0x1F79114 Slot: 23
	public override void ActivateModule() { }

	// RVA: 0x1F79280 Offset: 0x1F79280 VA: 0x1F79280 Slot: 22
	public override void DeactivateModule() { }

	// RVA: 0x1F79284 Offset: 0x1F79284 VA: 0x1F79284 Slot: 17
	public override void Process() { }

	// RVA: 0x1F7992C Offset: 0x1F7992C VA: 0x1F7992C
	private bool ProcessTouchEvents() { }

	// RVA: 0x1F79AB4 Offset: 0x1F79AB4 VA: 0x1F79AB4
	protected void ProcessTouchPress(PointerEventData pointerEvent, bool pressed, bool released) { }

	// RVA: 0x1F79748 Offset: 0x1F79748 VA: 0x1F79748
	protected bool SendSubmitEventToSelectedObject() { }

	// RVA: 0x1F79FDC Offset: 0x1F79FDC VA: 0x1F79FDC
	private Vector2 GetRawMoveVector() { }

	// RVA: 0x1F79484 Offset: 0x1F79484 VA: 0x1F79484
	protected bool SendMoveEventToSelectedObject() { }

	// RVA: 0x1F79AAC Offset: 0x1F79AAC VA: 0x1F79AAC
	protected void ProcessMouseEvent() { }

	[ObsoleteAttribute] // RVA: 0xC15778 Offset: 0xC15778 VA: 0xC15778
	// RVA: 0x1F7A41C Offset: 0x1F7A41C VA: 0x1F7A41C Slot: 30
	protected virtual bool ForceAutoSelect() { }

	// RVA: 0x1F7A15C Offset: 0x1F7A15C VA: 0x1F7A15C
	protected void ProcessMouseEvent(int id) { }

	// RVA: 0x1F79368 Offset: 0x1F79368 VA: 0x1F79368
	protected bool SendUpdateEventToSelectedObject() { }

	// RVA: 0x1F7A424 Offset: 0x1F7A424 VA: 0x1F7A424
	protected void ProcessMousePress(PointerInputModule.MouseButtonEventData data) { }

	// RVA: 0x1F7A934 Offset: 0x1F7A934 VA: 0x1F7A934
	protected GameObject GetCurrentFocusedGameObject() { }
}

// Namespace: 
[ObsoleteAttribute] // RVA: 0xC12030 Offset: 0xC12030 VA: 0xC12030
public enum StandaloneInputModule.InputMode // TypeDefIndex: 3039
{
	// Fields
	public int value__; // 0x0
	public const StandaloneInputModule.InputMode Mouse = 0;
	public const StandaloneInputModule.InputMode Buttons = 1;
}

// Namespace: UnityEngine.EventSystems
[ObsoleteAttribute] // RVA: 0xC1206C Offset: 0xC1206C VA: 0xC1206C
[AddComponentMenu] // RVA: 0xC1206C Offset: 0xC1206C VA: 0xC1206C
public class TouchInputModule : PointerInputModule // TypeDefIndex: 3040
{
	// Fields
	private Vector2 m_LastMousePosition; // 0x58
	private Vector2 m_MousePosition; // 0x60
	private PointerEventData m_InputPointerEvent; // 0x68
	[SerializeField] // RVA: 0xC13784 Offset: 0xC13784 VA: 0xC13784
	[FormerlySerializedAsAttribute] // RVA: 0xC13784 Offset: 0xC13784 VA: 0xC13784
	private bool m_ForceModuleActive; // 0x70

	// Properties
	[ObsoleteAttribute] // RVA: 0xC16014 Offset: 0xC16014 VA: 0xC16014
	public bool allowActivationOnStandalone { get; set; }
	public bool forceModuleActive { get; set; }

	// Methods

	// RVA: 0x1F7A93C Offset: 0x1F7A93C VA: 0x1F7A93C
	protected void .ctor() { }

	// RVA: 0x1F7A940 Offset: 0x1F7A940 VA: 0x1F7A940
	public bool get_allowActivationOnStandalone() { }

	// RVA: 0x1F7A948 Offset: 0x1F7A948 VA: 0x1F7A948
	public void set_allowActivationOnStandalone(bool value) { }

	// RVA: 0x1F7A954 Offset: 0x1F7A954 VA: 0x1F7A954
	public bool get_forceModuleActive() { }

	// RVA: 0x1F7A95C Offset: 0x1F7A95C VA: 0x1F7A95C
	public void set_forceModuleActive(bool value) { }

	// RVA: 0x1F7A968 Offset: 0x1F7A968 VA: 0x1F7A968 Slot: 24
	public override void UpdateModule() { }

	// RVA: 0x1F7AAB4 Offset: 0x1F7AAB4 VA: 0x1F7AAB4 Slot: 25
	public override bool IsModuleSupported() { }

	// RVA: 0x1F7AAFC Offset: 0x1F7AAFC VA: 0x1F7AAFC Slot: 21
	public override bool ShouldActivateModule() { }

	// RVA: 0x1F7AC3C Offset: 0x1F7AC3C VA: 0x1F7AC3C
	private bool UseFakeInput() { }

	// RVA: 0x1F7AC80 Offset: 0x1F7AC80 VA: 0x1F7AC80 Slot: 17
	public override void Process() { }

	// RVA: 0x1F7ACB8 Offset: 0x1F7ACB8 VA: 0x1F7ACB8
	private void FakeTouches() { }

	// RVA: 0x1F7AE40 Offset: 0x1F7AE40 VA: 0x1F7AE40
	private void ProcessTouchEvents() { }

	// RVA: 0x1F7AFA0 Offset: 0x1F7AFA0 VA: 0x1F7AFA0
	protected void ProcessTouchPress(PointerEventData pointerEvent, bool pressed, bool released) { }

	// RVA: 0x1F7B4C8 Offset: 0x1F7B4C8 VA: 0x1F7B4C8 Slot: 22
	public override void DeactivateModule() { }

	// RVA: 0x1F7B4CC Offset: 0x1F7B4CC VA: 0x1F7B4CC Slot: 3
	public override string ToString() { }
}

// Namespace: UnityEngine.EventSystems
public abstract class BaseRaycaster : UIBehaviour // TypeDefIndex: 3041
{
	// Properties
	public abstract Camera eventCamera { get; }
	[ObsoleteAttribute] // RVA: 0xC1604C Offset: 0xC1604C VA: 0xC1604C
	public virtual int priority { get; }
	public virtual int sortOrderPriority { get; }
	public virtual int renderOrderPriority { get; }

	// Methods

	// RVA: 0x1F71074 Offset: 0x1F71074 VA: 0x1F71074
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 17
	public abstract void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList);

	// RVA: -1 Offset: -1 Slot: 18
	public abstract Camera get_eventCamera();

	// RVA: 0x1F7107C Offset: 0x1F7107C VA: 0x1F7107C Slot: 19
	public virtual int get_priority() { }

	// RVA: 0x1F71084 Offset: 0x1F71084 VA: 0x1F71084 Slot: 20
	public virtual int get_sortOrderPriority() { }

	// RVA: 0x1F7108C Offset: 0x1F7108C VA: 0x1F7108C Slot: 21
	public virtual int get_renderOrderPriority() { }

	// RVA: 0x1F71094 Offset: 0x1F71094 VA: 0x1F71094 Slot: 3
	public override string ToString() { }

