{
	// Methods

	// RVA: 0x1C739D8 Offset: 0x1C739D8 VA: 0x1C739D8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1C7374C Offset: 0x1C7374C VA: 0x1C7374C Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1C739E8 Offset: 0x1C739E8 VA: 0x1C739E8 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1C73A1C Offset: 0x1C73A1C VA: 0x1C73A1C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
protected class AssetManager.LoadWaitStatus // TypeDefIndex: 6263
{
	// Fields
	protected AssetData data; // 0x10
	protected Action callbackFunc; // 0x18
	protected AssetLoader.LoadEndDataHandler callbackFunc2; // 0x20
	private string[] resourceNames; // 0x28

	// Properties
	public string Name { get; }
	public AssetData Info { get; }
	public Action CallbackFunc { get; }
	public AssetLoader.LoadEndDataHandler DataCallbackFunc { get; }

	// Methods

	// RVA: 0x1C700E8 Offset: 0x1C700E8 VA: 0x1C700E8
	public void .ctor(Action callbackFunc) { }

	// RVA: 0x1C70114 Offset: 0x1C70114 VA: 0x1C70114
	public void .ctor(AssetData data) { }

	// RVA: 0x1C70208 Offset: 0x1C70208 VA: 0x1C70208
	public void .ctor(AssetData data, AssetLoader.LoadEndDataHandler callbackFunc, string[] resourceNames) { }

	// RVA: 0x1C6FB6C Offset: 0x1C6FB6C VA: 0x1C6FB6C
	public void AddEntry() { }

	// RVA: 0x1C6FB9C Offset: 0x1C6FB9C VA: 0x1C6FB9C
	public void AddCallback(AssetLoader.LoadEndDataHandler callbackFunc) { }

	// RVA: 0x1C70374 Offset: 0x1C70374 VA: 0x1C70374
	public string get_Name() { }

	// RVA: 0x1C6CC80 Offset: 0x1C6CC80 VA: 0x1C6CC80
	public AssetData get_Info() { }

	// RVA: 0x1C6FB58 Offset: 0x1C6FB58 VA: 0x1C6FB58
	public bool IsSame(AssetData.Type type, string name) { }

	// RVA: 0x1C70408 Offset: 0x1C70408 VA: 0x1C70408
	public Action get_CallbackFunc() { }

	// RVA: 0x1C70400 Offset: 0x1C70400 VA: 0x1C70400
	public AssetLoader.LoadEndDataHandler get_DataCallbackFunc() { }

	// RVA: 0x1C73424 Offset: 0x1C73424 VA: 0x1C73424
	public string[] ResourceNames() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE7B0 Offset: 0xCAE7B0 VA: 0xCAE7B0
private sealed class AssetManager.<WaitForExecutionUnloadUnuseAssets>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6264
{
	// Fields
	internal WaitForEndOfFrame <wait>__0; // 0x10
	internal AssetManager $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD45A94 Offset: 0xD45A94 VA: 0xD45A94
	// RVA: 0x1C680DC Offset: 0x1C680DC VA: 0x1C680DC
	public void .ctor() { }

	// RVA: 0x1C7342C Offset: 0x1C7342C VA: 0x1C7342C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45AA4 Offset: 0xD45AA4 VA: 0xD45AA4
	// RVA: 0x1C73520 Offset: 0x1C73520 VA: 0x1C73520 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45AB4 Offset: 0xD45AB4 VA: 0xD45AB4
	// RVA: 0x1C73528 Offset: 0x1C73528 VA: 0x1C73528 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45AC4 Offset: 0xD45AC4 VA: 0xD45AC4
	// RVA: 0x1C73530 Offset: 0x1C73530 VA: 0x1C73530 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45AD4 Offset: 0xD45AD4 VA: 0xD45AD4
	// RVA: 0x1C73544 Offset: 0x1C73544 VA: 0x1C73544 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE7C0 Offset: 0xCAE7C0 VA: 0xCAE7C0
private sealed class AssetManager.<DownloadAssetStorageAttributeWithCheckDialog>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6265
{
	// Fields
	internal Dictionary.ValueCollection.Enumerator<string, AssetData> $locvar0; // 0x10
	internal string attrib; // 0x30
	internal string <title>__1; // 0x38
	internal string <str>__1; // 0x40
	internal string <exp>__1; // 0x48
	internal bool <isDispLogo>__0; // 0x50
	internal int loadParallelMax; // 0x54
	internal AssetManager $this; // 0x58
	internal object $current; // 0x60
	internal bool $disposing; // 0x68
	internal int $PC; // 0x6C
	private AssetManager.<DownloadAssetStorageAttributeWithCheckDialog>c__Iterator1.<DownloadAssetStorageAttributeWithCheckDialog>c__AnonStorey5 $locvar1; // 0x70

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD45AE4 Offset: 0xD45AE4 VA: 0xD45AE4
	// RVA: 0x1C6DCB0 Offset: 0x1C6DCB0 VA: 0x1C6DCB0
	public void .ctor() { }

	// RVA: 0x1C709A4 Offset: 0x1C709A4 VA: 0x1C709A4 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45AF4 Offset: 0xD45AF4 VA: 0xD45AF4
	// RVA: 0x1C71010 Offset: 0x1C71010 VA: 0x1C71010 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45B04 Offset: 0xD45B04 VA: 0xD45B04
	// RVA: 0x1C71018 Offset: 0x1C71018 VA: 0x1C71018 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45B14 Offset: 0xD45B14 VA: 0xD45B14
	// RVA: 0x1C71020 Offset: 0x1C71020 VA: 0x1C71020 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45B24 Offset: 0xD45B24 VA: 0xD45B24
	// RVA: 0x1C71034 Offset: 0x1C71034 VA: 0x1C71034 Slot: 6
	public void Reset() { }

	// RVA: 0x1C7109C Offset: 0x1C7109C VA: 0x1C7109C
	internal void <>m__0() { }
}

// Namespace: 
private sealed class AssetManager.<DownloadAssetStorageAttributeWithCheckDialog>c__Iterator1.<DownloadAssetStorageAttributeWithCheckDialog>c__AnonStorey5 // TypeDefIndex: 6266
{
	// Fields
	internal bool isDataUpdate; // 0x10
	internal AssetManager.<DownloadAssetStorageAttributeWithCheckDialog>c__Iterator1 <>f__ref$1; // 0x18

	// Methods

	// RVA: 0x1C71008 Offset: 0x1C71008 VA: 0x1C71008
	public void .ctor() { }

	// RVA: 0x1C71154 Offset: 0x1C71154 VA: 0x1C71154
	internal void <>m__0(bool isDecide) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE7D0 Offset: 0xCAE7D0 VA: 0xCAE7D0
private sealed class AssetManager.<InitCR>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6267
{
	// Fields
	internal string <loadData>__1; // 0x10
	internal string[] <lines>__1; // 0x18
	internal string <errorCode>__1; // 0x20
	internal int <retryCount>__1; // 0x28
	internal string <configFileUrl>__2; // 0x30
	internal UnityWebRequest <loader>__2; // 0x38
	internal string <loadData>__2; // 0x40
	internal float <requestTime>__3; // 0x48
	internal float <loadProgress>__3; // 0x4C
	internal WaitForEndOfFrame <wait>__3; // 0x50
	internal string <errorCode>__3; // 0x58
	internal AssetManager $this; // 0x60
	internal object $current; // 0x68
	internal bool $disposing; // 0x70
	internal int $PC; // 0x74

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD45B34 Offset: 0xD45B34 VA: 0xD45B34
	// RVA: 0x1C6E564 Offset: 0x1C6E564 VA: 0x1C6E564
	public void .ctor() { }

	// RVA: 0x1C7116C Offset: 0x1C7116C VA: 0x1C7116C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45B44 Offset: 0xD45B44 VA: 0xD45B44
	// RVA: 0x1C7319C Offset: 0x1C7319C VA: 0x1C7319C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45B54 Offset: 0xD45B54 VA: 0xD45B54
	// RVA: 0x1C731A4 Offset: 0x1C731A4 VA: 0x1C731A4 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45B64 Offset: 0xD45B64 VA: 0xD45B64
	// RVA: 0x1C731AC Offset: 0x1C731AC VA: 0x1C731AC Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45B74 Offset: 0xD45B74 VA: 0xD45B74
	// RVA: 0x1C731C0 Offset: 0x1C731C0 VA: 0x1C731C0 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE7E0 Offset: 0xCAE7E0 VA: 0xCAE7E0
private sealed class AssetManager.<coUnloadUnusedAssets>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6268
{
	// Fields
	internal WaitForEndOfFrame <wait>__0; // 0x10
	internal AssetManager $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD45B84 Offset: 0xD45B84 VA: 0xD45B84
	// RVA: 0x1C6EEB4 Offset: 0x1C6EEB4 VA: 0x1C6EEB4
	public void .ctor() { }

	// RVA: 0x1C735AC Offset: 0x1C735AC VA: 0x1C735AC Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45B94 Offset: 0xD45B94 VA: 0xD45B94
	// RVA: 0x1C7394C Offset: 0x1C7394C VA: 0x1C7394C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45BA4 Offset: 0xD45BA4 VA: 0xD45BA4
	// RVA: 0x1C73954 Offset: 0x1C73954 VA: 0x1C73954 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45BB4 Offset: 0xD45BB4 VA: 0xD45BB4
	// RVA: 0x1C7395C Offset: 0x1C7395C VA: 0x1C7395C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45BC4 Offset: 0xD45BC4 VA: 0xD45BC4
	// RVA: 0x1C73970 Offset: 0x1C73970 VA: 0x1C73970 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE7F0 Offset: 0xCAE7F0 VA: 0xCAE7F0
private sealed class AssetManager.<LoadStart>c__AnonStorey7 // TypeDefIndex: 6269
{
	// Fields
	internal AssetManager.LoadWaitStatus waiter; // 0x10
	internal AssetManager $this; // 0x18

	// Methods

	// RVA: 0x1C7036C Offset: 0x1C7036C VA: 0x1C7036C
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE800 Offset: 0xCAE800 VA: 0xCAE800
private sealed class AssetManager.<LoadStart>c__AnonStorey6 // TypeDefIndex: 6270
{
	// Fields
	internal AssetLoader loader; // 0x10
	internal AssetManager.<LoadStart>c__AnonStorey7 <>f__ref$7; // 0x18

	// Methods

	// RVA: 0x1C703F8 Offset: 0x1C703F8 VA: 0x1C703F8
	public void .ctor() { }

	// RVA: 0x1C7335C Offset: 0x1C7335C VA: 0x1C7335C
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE810 Offset: 0xCAE810 VA: 0xCAE810
private sealed class AssetManager.<DelayLoadStart>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6271
{
	// Fields
	internal AssetManager $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD45BD4 Offset: 0xD45BD4 VA: 0xD45BD4
	// RVA: 0x1C70480 Offset: 0x1C70480 VA: 0x1C70480
	public void .ctor() { }

	// RVA: 0x1C70884 Offset: 0x1C70884 VA: 0x1C70884 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45BE4 Offset: 0xD45BE4 VA: 0xD45BE4
	// RVA: 0x1C70918 Offset: 0x1C70918 VA: 0x1C70918 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45BF4 Offset: 0xD45BF4 VA: 0xD45BF4
	// RVA: 0x1C70920 Offset: 0x1C70920 VA: 0x1C70920 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45C04 Offset: 0xD45C04 VA: 0xD45C04
	// RVA: 0x1C70928 Offset: 0x1C70928 VA: 0x1C70928 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45C14 Offset: 0xD45C14 VA: 0xD45C14
	// RVA: 0x1C7093C Offset: 0x1C7093C VA: 0x1C7093C Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE820 Offset: 0xCAE820 VA: 0xCAE820
private sealed class AssetManager.<LoadAssetStorage>c__AnonStorey8 // TypeDefIndex: 6272
{
	// Fields
	internal int calledCallbackFuncCounter; // 0x10
	internal List<string> remainNameList; // 0x18
	internal bool calledCallbackFunc; // 0x20
	internal Action callbackFunc; // 0x28
	internal int loadParallelMax; // 0x30
	internal AssetManager $this; // 0x38

	// Methods

	// RVA: 0x1C70760 Offset: 0x1C70760 VA: 0x1C70760
	public void .ctor() { }

	// RVA: 0x1C73228 Offset: 0x1C73228 VA: 0x1C73228
	internal void <>m__0(AssetData data) { }
}

// Namespace: 
public class AssetStorageCache // TypeDefIndex: 6273
{
	// Methods

	// RVA: 0x1C73A28 Offset: 0x1C73A28 VA: 0x1C73A28
	public void .ctor() { }

	// RVA: 0x1C68AAC Offset: 0x1C68AAC VA: 0x1C68AAC
	public static string GetPath() { }

	// RVA: 0x1C73A30 Offset: 0x1C73A30 VA: 0x1C73A30
	private static string GetOldEnvPath() { }

	// RVA: 0x1C73D14 Offset: 0x1C73D14 VA: 0x1C73D14
	public static void ClearOldEnvCacheAll() { }

	// RVA: 0x1C73DD4 Offset: 0x1C73DD4 VA: 0x1C73DD4
	public static void ClearCacheAll(bool isStandalone = True) { }

	// RVA: 0x1C73D2C Offset: 0x1C73D2C VA: 0x1C73D2C
	private static void ClearCacheAllCommonProc(string cachePath, bool isStandalone) { }

	// RVA: 0x1C73DF8 Offset: 0x1C73DF8 VA: 0x1C73DF8
	public static void ClearCache(bool isStandalone = True) { }
}

// Namespace: 
public class AtlasManager : SingletonMonoBehaviour<AtlasManager> // TypeDefIndex: 6274
{
	// Fields
	public const string BANNER_SPNAME_PREFIX = "banner_";
	public const string BANNER_NOTICE_SPNAME_PREFIX = "banner_notice_";
	public const string BANNER_ICON_SPNAME_PREFIX = "banner_icon_";
	public const string BANNER_ATLAS_PATH = "Banner/DownloadBanner";
	public const string EVENT_UI_ATLAS_PATH = "EventUI/DownloadEventUI";
	public const string SHOP_BANNER_ATLAS_PATH = "ShopBanners/DownloadShopBanner";
	public const string ENEMY_ATLAS_PATH = "Enemys/DownloadEnemy";
	public const string EQUIP_FACE_ATLAS_PATH = "EquipFaces/DownloadEquipFace";
	public const string COMMAND_CODE_ATLAS_PATH = "CommandCodes/DownloadCommandCode";
	public const string DOWNLOAD_BUFF_ICON_PATH = "BuffIcons/DownloadBuffIcon";
	public const string NOTIFICATION_ATLAS_PATH = "Notification/DownloadNotification";
	public const string FACE_ATLAS_PATH = "Faces/DownloadFace";
	public const string FACE_BATTLE_ATLAS_PATH = "FaceBattle/DownloadFaceBattle";
	public const string EVENT_DOWNLOAD_ATLAS_PATH = "Event/DownloadEvent";
	public const string COMMAND_CARD_PARAM_ATLAS_PATH = "CardLevel/DownloadCardLevel";
	public const string MYROOM_SOUND_ATLAS_PATH = "MyRoomSound/DownloadMyRoomSound";
	public const string MYROOM_ATLAS_PATH = "MyRoom/DownloadMyRoom";
	public const string WAR_BOARD_ATLAS_PATH = "WarBoard/Common";
	public const string FRIENDSHIP_EXCEED_ATLAS_PATH = "Bond/DownloadBond";
	public const string CHARA_GRAPH_OPTION_ATLAS_PATH = "CharaGraphOption/CharaGraphOption";
	public const string DATA_LOST_FRAME_ICON = "listframes6_bg";
	public const string FACE_DEFAULT_ICON = "f_1000000";
	public const string FACE_EQUIP_DEFAULT_ICON = "f_1000000";
	public const string COMMAND_CODE_DEFAULT_ICON = "c_1000000";
	public const string FACE_NO_MOUNT_ICON = "f_1000000";
	public const string FACE_HIDE_ICON = "f_1000010";
	public const string FACE_DATA_LOST_ICON = "f_1000012";
	public const string FACE_NOT_OPEN_ICON = "f_1000011";
	private const int AtlasLoadParalleMax = 5;
	private static readonly string[,] uiSkinChangePath; // 0x0
	public static readonly string OVERWITE_UI_SKIN_COMMONBG1; // 0x8
	public static readonly string OVERWITE_UI_SKIN_COMMONBG2; // 0x10
	private static readonly string[] baseFrameList; // 0x18
	protected static Dictionary<int, string[]> baseFrameTable; // 0x20
	private static readonly string[] baseTypeFrameList; // 0x28
	protected static Dictionary<int, string[]> baseTypeFrameTable; // 0x30
	private static readonly string[] formationBaseList; // 0x38
	private static readonly string[] formationFrameList; // 0x40
	private static readonly string[] formationFrameForSupportSelectList; // 0x48
	private static readonly string[] commandCodeBaseFrameList; // 0x50
	protected static string[] bannerFileList; // 0x58
	[SerializeField] // RVA: 0xCBF3E8 Offset: 0xCBF3E8 VA: 0xCBF3E8
	protected UIAtlas commonAtlas; // 0x18
	protected WeakReference _itemAtlasRef; // 0x20
	protected WeakReference _coinAtlasRef; // 0x28
	protected WeakReference _classIconsAtlasRef; // 0x30
	protected WeakReference _skillIconAtlasRef; // 0x38
	protected WeakReference _buffIconAtlasRef; // 0x40
	protected WeakReference _markAtlasRef; // 0x48
	protected WeakReference _bannerAtlasRef; // 0x50
	protected WeakReference _equipFaceAtlasRef; // 0x58
	protected WeakReference _faceAtlasRef; // 0x60
	protected WeakReference _commandCodeAtlasRef; // 0x68
	protected WeakReference _commandCodeMiniAtlasRef; // 0x70
	protected WeakReference _enemyAtlasRef; // 0x78
	protected WeakReference _commandCardParamAtlasRef; // 0x80
	protected AtlasManager.SkinData[] uiSkinAtlasData; // 0x88
	protected static Dictionary<int, int> classFrameIdList; // 0x60
	protected ServantLimitAddMaster servantLimitAddMaster; // 0x90
	protected UIAtlas[] itemDownloadAtlasList; // 0x98
	protected UIAtlas[] coinDownloadAtlasList; // 0xA0
	protected UIAtlas classIconsDownloadAtlas; // 0xA8
	protected UIAtlas[] skillIconDownloadAtlasList; // 0xB0
	protected UIAtlas[] buffIconDownloadAtlasList; // 0xB8
	protected Action buffIconAtlasLoadCallback; // 0xC0
	protected UIAtlas markDownloadAtlas; // 0xC8
	protected bool isCharaGraphOptionAtlasLoad; // 0xD0
	protected UIAtlas charaGraphOptionDownloadAtlas; // 0xD8
	protected Action charaGraphOptionAtlasLoadCallback; // 0xE0
	protected AssetData charaGraphOptionAtlasAssetData; // 0xE8
	protected UIAtlas[] faceNormalAtlasList; // 0xF0
	protected bool isFaceAtlasLoad; // 0xF8
	protected AssetData faceNormalAtlasAssetData; // 0x100
	protected Action faceAtlasLoadCallback; // 0x108
	protected Dictionary<string, int> faceAtlasSpriteMap; // 0x110
	protected UIAtlas[] faceBattleAtlasList; // 0x118
	protected bool isFaceBattleAtlasLoad; // 0x120
	protected AssetData faceBattleAtlasAssetData; // 0x128
	protected Action faceBattleAtlasLoadCallBack; // 0x130
	protected Dictionary<string, int> faceBattleAtlasSpriteMap; // 0x138
	protected bool isEnemyAtlasLoad; // 0x140
	protected AssetData enemyAtlasAssetData; // 0x148
	protected Action enemyAtlasLoadCallbackFunc; // 0x150
	protected UIAtlas[] enemyDownloadAtlasList; // 0x158
	protected bool isBannerLoad; // 0x160
	protected Action bannerLoadCallbackFunc; // 0x168
	protected AssetData bannerAssetData; // 0x170
	protected UIAtlas[] bannerDownloadAtlasList; // 0x178
	protected AssetData shopBannerAssetData; // 0x180
	protected UIAtlas[] shopBannerDownloadAtlasList; // 0x188
	protected bool isEventUILoad; // 0x190
	protected Action eventUILoadCallbackFunc; // 0x198
	protected AssetData eventUIAssetData; // 0x1A0
	protected UIAtlas[] eventUIDownloadAtlasList; // 0x1A8
	protected bool isEquipFaceLoad; // 0x1B0
	protected Action equipFaceLoadCallbackFunc; // 0x1B8
	protected AssetData equipFaceAssetData; // 0x1C0
	protected UIAtlas[] equipFaceAtlasList; // 0x1C8
	protected bool isCommandCodeLoad; // 0x1D0
	protected Action commandCodeLoadCallbackFunc; // 0x1D8
	protected AssetData commandCodeAssetData; // 0x1E0
	protected UIAtlas[] commandCodeAtlasList; // 0x1E8
	protected bool isCommandCodeMiniLoad; // 0x1F0
	protected Action commandCodeMiniLoadCallbackFunc; // 0x1F8
	protected AssetData commandCodeMiniAssetData; // 0x200
	protected UIAtlas[] commandCodeMiniAtlasList; // 0x208
	protected bool isFriendshipExceedLoad; // 0x210
	protected Action friendshipExceedLoadCallbackFunc; // 0x218
	protected AssetData friendshipExceedAssetData; // 0x220
	protected UIAtlas[] friendshipExceedAtlasList; // 0x228
	protected bool isNotificationLoad; // 0x230
	protected Action notificationLoadCallbackFunc; // 0x238
	protected AssetData notificationAssetData; // 0x240
	protected UIAtlas notificationAtlas; // 0x248
	protected int notificationAtlasRefCount; // 0x250
	protected bool isEventAtlasLoad; // 0x254
	protected Action eventAtlasLoadCallback; // 0x258
	protected AssetData eventAtlasAssetData; // 0x260
	protected UIAtlas[] eventAtlasList; // 0x268
	protected bool isCommandCardParamLoad; // 0x270
	protected Action commandCardParamLoadCallbackFunc; // 0x278
	protected AssetData commandCardParamAssetData; // 0x280
	protected UIAtlas commandCardParamAtlas; // 0x288
	protected bool isMyRoomSoundLoad; // 0x290
	protected Action myRoomSoundLoadCallbackFunc; // 0x298
	protected AssetData myRoomSoundAssetData; // 0x2A0
	protected UIAtlas myRoomSoundAtlas; // 0x2A8
	protected bool isMyRoomLoad; // 0x2B0
	protected Action myRoomLoadCallbackFunc; // 0x2B8
	protected AssetData myRoomAssetData; // 0x2C0
	protected UIAtlas myRoomAtlas; // 0x2C8
	protected Action warBoardAtlasLoadCallback; // 0x2D0
	protected UIAtlas warBoardAtlas; // 0x2D8
	protected bool isBusy; // 0x2E0
	protected Action outGameAtlasLoadCallback; // 0x2E8
	protected Action outGameIconAtlasLoadCallback; // 0x2F0

	// Properties
	protected UIAtlas itemAtlas { get; }
	protected UIAtlas coinAtlas { get; }
	protected UIAtlas classIconsAtlas { get; }
	protected UIAtlas skillIconAtlas { get; }
	protected UIAtlas buffIconAtlas { get; }
	protected UIAtlas markAtlas { get; }
	protected UIAtlas bannerAtlas { get; }
	protected UIAtlas equipFaceAtlas { get; }
	protected UIAtlas faceAtlas { get; }
	protected UIAtlas commandCodeAtlas { get; }
	protected UIAtlas commandCodeMiniAtlas { get; }
	protected UIAtlas enemyAtlas { get; }
	protected UIAtlas commandCardParamLocalAtlas { get; }
	protected AtlasSubManagerEventUI atlasSubManagerEventAtlas { get; }

	// Methods

	// RVA: 0x1C79D38 Offset: 0x1C79D38 VA: 0x1C79D38
	public void .ctor() { }

	// RVA: 0x1C79DB0 Offset: 0x1C79DB0 VA: 0x1C79DB0
	protected UIAtlas get_itemAtlas() { }

	// RVA: 0x1C79EC0 Offset: 0x1C79EC0 VA: 0x1C79EC0
	protected UIAtlas get_coinAtlas() { }

	// RVA: 0x1C79FD0 Offset: 0x1C79FD0 VA: 0x1C79FD0
	protected UIAtlas get_classIconsAtlas() { }

	// RVA: 0x1C7A0E0 Offset: 0x1C7A0E0 VA: 0x1C7A0E0
	protected UIAtlas get_skillIconAtlas() { }

	// RVA: 0x1C7A1F0 Offset: 0x1C7A1F0 VA: 0x1C7A1F0
	protected UIAtlas get_buffIconAtlas() { }

	// RVA: 0x1C7A300 Offset: 0x1C7A300 VA: 0x1C7A300
	protected UIAtlas get_markAtlas() { }

	// RVA: 0x1C7A410 Offset: 0x1C7A410 VA: 0x1C7A410
	protected UIAtlas get_bannerAtlas() { }

	// RVA: 0x1C7A520 Offset: 0x1C7A520 VA: 0x1C7A520
	protected UIAtlas get_equipFaceAtlas() { }

	// RVA: 0x1C7A630 Offset: 0x1C7A630 VA: 0x1C7A630
	protected UIAtlas get_faceAtlas() { }

	// RVA: 0x1C7A740 Offset: 0x1C7A740 VA: 0x1C7A740
	protected UIAtlas get_commandCodeAtlas() { }

	// RVA: 0x1C7A850 Offset: 0x1C7A850 VA: 0x1C7A850
	protected UIAtlas get_commandCodeMiniAtlas() { }

	// RVA: 0x1C7A960 Offset: 0x1C7A960 VA: 0x1C7A960
	protected UIAtlas get_enemyAtlas() { }

	// RVA: 0x1C7AA70 Offset: 0x1C7AA70 VA: 0x1C7AA70
	protected UIAtlas get_commandCardParamLocalAtlas() { }

	// RVA: 0x1C7AB80 Offset: 0x1C7AB80 VA: 0x1C7AB80
	protected AtlasSubManagerEventUI get_atlasSubManagerEventAtlas() { }

	// RVA: 0x1C7AB88 Offset: 0x1C7AB88 VA: 0x1C7AB88
	public static void Reboot() { }

	// RVA: 0x1C7AC28 Offset: 0x1C7AC28 VA: 0x1C7AC28
	public static void Initialize() { }

	// RVA: 0x1C7AE74 Offset: 0x1C7AE74 VA: 0x1C7AE74
	public static bool IsBusyInitialize() { }

	// RVA: 0x1C7AF1C Offset: 0x1C7AF1C VA: 0x1C7AF1C
	public static bool IsUseFaceBattle() { }

	// RVA: 0x1C7AFE0 Offset: 0x1C7AFE0 VA: 0x1C7AFE0
	private bool IsUseFaceBattleLocal() { }

	// RVA: 0x1C7B014 Offset: 0x1C7B014 VA: 0x1C7B014
	public static void LoadOutGameAtlas(Action callback) { }

	// RVA: 0x1C7B7D4 Offset: 0x1C7B7D4 VA: 0x1C7B7D4
	public static void LoadOutGameIconAtlas(Action callback) { }

	// RVA: 0x1C7B938 Offset: 0x1C7B938 VA: 0x1C7B938
	public static void SetClassTable(Dictionary<int, int> classFrameIdList) { }

	// RVA: 0x1C7B9A4 Offset: 0x1C7B9A4 VA: 0x1C7B9A4
	public static int GetFrameId(int classId) { }

	// RVA: 0x1C7BAA0 Offset: 0x1C7BAA0 VA: 0x1C7BAA0
	public static void SetCommon(UISprite sprite) { }

	// RVA: 0x1C7BB3C Offset: 0x1C7BB3C VA: 0x1C7BB3C
	public static bool SetItem(UISprite sprite, int itemImageId) { }

	// RVA: 0x1C7BDE0 Offset: 0x1C7BDE0 VA: 0x1C7BDE0
	public static bool SetCoin(UISprite sprite, int coinImageId) { }

	// RVA: 0x1C7C084 Offset: 0x1C7C084 VA: 0x1C7C084
	public static bool SetEquipItem(UISprite sprite, int equipItemImageId) { }

	// RVA: 0x1C7C38C Offset: 0x1C7C38C VA: 0x1C7C38C
	public static bool SetClassIcon(UISprite sprite, int iconImageId, int frameType) { }

	// RVA: 0x1C7C6F0 Offset: 0x1C7C6F0 VA: 0x1C7C6F0
	public static bool SetClassChart(UISprite sprite, string spriteName) { }

	// RVA: 0x1C7C764 Offset: 0x1C7C764 VA: 0x1C7C764
	public static bool SetClassTextIcon(UISprite sprite, int iconImageId, int frameType) { }

	// RVA: 0x1C7CAAC Offset: 0x1C7CAAC VA: 0x1C7CAAC
	public static bool SetGradeIcon(UISprite sprite, string spriteName) { }

	// RVA: 0x1C7CD24 Offset: 0x1C7CD24 VA: 0x1C7CD24
	public static bool SetGradeIcon(UISprite sprite, string spriteName, UIAtlas baseAtlas) { }

	// RVA: 0x1C7CDA0 Offset: 0x1C7CDA0 VA: 0x1C7CDA0
	public static bool SetGradeBase(UISprite sprite, string spriteName, UIAtlas baseAtlas) { }

	// RVA: 0x1C7D004 Offset: 0x1C7D004 VA: 0x1C7D004
	public static bool SetSkillIcon(UISprite sprite, int skillId) { }

	// RVA: 0x1C7D350 Offset: 0x1C7D350 VA: 0x1C7D350
	public static bool SetHideSkillIcon(UISprite sprite) { }

	// RVA: 0x1C7D3B8 Offset: 0x1C7D3B8 VA: 0x1C7D3B8
	public static bool SetSkillIconSpecifyIconId(UISprite sprite, int iconId) { }

	// RVA: 0x1C7D42C Offset: 0x1C7D42C VA: 0x1C7D42C
	public static bool SetMark(UISprite sprite, string markName) { }

	// RVA: 0x1C7D628 Offset: 0x1C7D628 VA: 0x1C7D628
	public static bool SetEquipFace(UISprite sprite, int svtId) { }

	// RVA: 0x1C7D970 Offset: 0x1C7D970 VA: 0x1C7D970
	public static bool SetFaceImage(UISprite sprite, int svtId, int imageLimitCount) { }

	// RVA: 0x1C7E128 Offset: 0x1C7E128 VA: 0x1C7E128
	public static bool SetFace(UISprite sprite, int svtId, int limitCount) { }

	// RVA: 0x1C7E1E8 Offset: 0x1C7E1E8 VA: 0x1C7E1E8
	public static bool SetFace(UISprite sprite, int svtId) { }

	// RVA: 0x1C7E260 Offset: 0x1C7E260 VA: 0x1C7E260
	public static bool SetNoMountFace(UISprite sprite) { }

	// RVA: 0x1C7E378 Offset: 0x1C7E378 VA: 0x1C7E378
	public static bool SetHideFace(UISprite sprite) { }

	// RVA: 0x1C7E5B0 Offset: 0x1C7E5B0 VA: 0x1C7E5B0
	public static bool SetDataLostFace(UISprite sprite) { }

	// RVA: 0x1C7E7E8 Offset: 0x1C7E7E8 VA: 0x1C7E7E8
	public static bool SetNotOpenFace(UISprite sprite) { }

	// RVA: 0x1C7EAD8 Offset: 0x1C7EAD8 VA: 0x1C7EAD8
	public static bool SetCommandCodeImage(UISprite sprite, int commandCodeId) { }

	// RVA: 0x1C7ED94 Offset: 0x1C7ED94 VA: 0x1C7ED94
	public static bool SetCommandCodeIcon(UISprite sprite, int commandCodeId) { }

	// RVA: 0x1C7EE08 Offset: 0x1C7EE08 VA: 0x1C7EE08
	public static bool SetCommandCodeMiniImage(UISprite sprite, int commandCodeId) { }

	// RVA: 0x1C7F0C4 Offset: 0x1C7F0C4 VA: 0x1C7F0C4
	public static bool SetBondAtlasImage(UISprite sprite, string spriteName) { }

	// RVA: 0x1C7F244 Offset: 0x1C7F244 VA: 0x1C7F244
	public static void LoadEnemyAtlas(Action callback) { }

	// RVA: 0x1C7F428 Offset: 0x1C7F428 VA: 0x1C7F428
	public static void ReleaseEnemyAtlas() { }

	// RVA: 0x1C7F54C Offset: 0x1C7F54C VA: 0x1C7F54C
	public static bool SetEnemy(UISprite sprite, int enemyImageId) { }

	// RVA: 0x1C7F7F0 Offset: 0x1C7F7F0 VA: 0x1C7F7F0
	public static void SetCharaGraphaOption(UISprite sprite, string optionName) { }

	// RVA: 0x1C7F944 Offset: 0x1C7F944 VA: 0x1C7F944
	public static void SetClass(UISprite sprite, int classId, int frameType) { }

	// RVA: 0x1C7FB00 Offset: 0x1C7FB00 VA: 0x1C7FB00
	public static bool SetClassChart(UISprite sprite) { }

	// RVA: 0x1C7FB70 Offset: 0x1C7FB70 VA: 0x1C7FB70
	public static void SetServantType(UISprite sprite, int type, int frameType, int classId = 0) { }

	// RVA: 0x1C7FFA8 Offset: 0x1C7FFA8 VA: 0x1C7FFA8
	public static void SetFaceFrameIcon(UISprite sprite) { }

	// RVA: 0x1C80008 Offset: 0x1C80008 VA: 0x1C80008
	public static void SetFaceBaseIcon(UISprite sprite, int frameType, int classId = 0) { }

	// RVA: 0x1C80250 Offset: 0x1C80250 VA: 0x1C80250
	public static void SetDataLostFaceBaseIcon(UISprite sprite) { }

	// RVA: 0x1C802B0 Offset: 0x1C802B0 VA: 0x1C802B0
	public static void SetCommandCodeBaseIcon(UISprite sprite, int rarity) { }

	// RVA: 0x1C80374 Offset: 0x1C80374 VA: 0x1C80374
	public static void SetFormationBase(UISprite sprite, int frameType, UIAtlas atlas) { }

	// RVA: 0x1C8051C Offset: 0x1C8051C VA: 0x1C8051C
	public static void SetFormationFrame(UISprite sprite, int frameType, UIAtlas atlas) { }

	// RVA: 0x1C806C4 Offset: 0x1C806C4 VA: 0x1C806C4
	public static void SetFormationFrameForSupportSelect(UISprite sprite, int frameType, UIAtlas atlas) { }

	// RVA: 0x1C8086C Offset: 0x1C8086C VA: 0x1C8086C
	public static void LoadBanner(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x1C80A88 Offset: 0x1C80A88 VA: 0x1C80A88
	public static void ReleaseBanner() { }

	// RVA: 0x1C80C14 Offset: 0x1C80C14 VA: 0x1C80C14
	public static bool SetBanner(UISprite sprite, string bannerName) { }

	// RVA: 0x1C80E18 Offset: 0x1C80E18 VA: 0x1C80E18
	public static bool SetBanner(UISprite sprite, EventEntity eventEntity) { }

	// RVA: 0x1C80FC8 Offset: 0x1C80FC8 VA: 0x1C80FC8
	public static bool SetBannerIcon(UISprite sprite, EventEntity eventEntity) { }

	// RVA: 0x1C78DCC Offset: 0x1C78DCC VA: 0x1C78DCC
	public static void LoadEventUI(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x1C81250 Offset: 0x1C81250 VA: 0x1C81250
	public static void ReleaseEventUI() { }

	// RVA: 0x1C78FC4 Offset: 0x1C78FC4 VA: 0x1C78FC4
	public static bool SetEventUI(UISprite sprite, string spriteName) { }

	// RVA: 0x1C814F0 Offset: 0x1C814F0 VA: 0x1C814F0
	public static void LoadEventUI(int eventId, Action callback, int loadParallelMax = 1) { }

	// RVA: 0x1C815B8 Offset: 0x1C815B8 VA: 0x1C815B8
	public static void ReleaseEventUI(int eventId) { }

	// RVA: 0x1C81650 Offset: 0x1C81650 VA: 0x1C81650
	public static bool SetEventUI(int eventId, UISprite sprite, string spriteName) { }

	// RVA: 0x1C81718 Offset: 0x1C81718 VA: 0x1C81718
	public static bool IsExistBanner(string imgName) { }

	// RVA: 0x1C81890 Offset: 0x1C81890 VA: 0x1C81890
	public static bool IsExistShopBanner(int bannerId) { }

	// RVA: 0x1C81AEC Offset: 0x1C81AEC VA: 0x1C81AEC
	public static bool SetShopBanner(UISprite sprite, int bannerId) { }

	// RVA: 0x1C81E64 Offset: 0x1C81E64 VA: 0x1C81E64
	public static bool SetShopBanner(UISprite sprite, string bannerName) { }

	// RVA: 0x1C81ED8 Offset: 0x1C81ED8 VA: 0x1C81ED8
	public static bool SetSBuffIcon(UISprite sprite, int buffId) { }

	// RVA: 0x1C82038 Offset: 0x1C82038 VA: 0x1C82038
	public static bool SetSBuffIconByIconId(UISprite sprite, int buffIconId) { }

	// RVA: 0x1C7FF34 Offset: 0x1C7FF34 VA: 0x1C7FF34
	public static bool SetEventSprite(UISprite sprite, string spriteName) { }

	// RVA: 0x1C823F0 Offset: 0x1C823F0 VA: 0x1C823F0
	public static void LoadEquipFace(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x1C825F4 Offset: 0x1C825F4 VA: 0x1C825F4
	public static void LoadCommandCode(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x1C827F8 Offset: 0x1C827F8 VA: 0x1C827F8
	public static void LoadCommandCodeMini(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x1C829FC Offset: 0x1C829FC VA: 0x1C829FC
	public static void LoadFriendshipExceed(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x1C82C00 Offset: 0x1C82C00 VA: 0x1C82C00
	public static void ReleaseFriendshipExceed() { }

	// RVA: 0x1C7AC24 Offset: 0x1C7AC24 VA: 0x1C7AC24
	protected void RebootLocal() { }

	// RVA: 0x1C7B078 Offset: 0x1C7B078 VA: 0x1C7B078
	public void LoadOutGameAtlasLocal(Action callback) { }

	// RVA: 0x1C82D24 Offset: 0x1C82D24 VA: 0x1C82D24
	public void EndLoadOutGameAtlasLocal() { }

	// RVA: 0x1C7B838 Offset: 0x1C7B838 VA: 0x1C7B838
	public void LoadOutGameIconAtlasLocal(Action callback) { }

	// RVA: 0x1C82D40 Offset: 0x1C82D40 VA: 0x1C82D40
	public void EndLoadOutGameIconAtlasLocal2() { }

	// RVA: 0x1C82DB8 Offset: 0x1C82DB8 VA: 0x1C82DB8
	public void EndLoadOutGameIconAtlasLocal3() { }

	// RVA: 0x1C82E30 Offset: 0x1C82E30 VA: 0x1C82E30
	public void EndLoadOutGameIconAtlasLocal() { }

	// RVA: 0x1C82E4C Offset: 0x1C82E4C VA: 0x1C82E4C
	public void ReleaseNoneResidentAtlas() { }

	// RVA: 0x1C7ACCC Offset: 0x1C7ACCC VA: 0x1C7ACCC
	protected void InitializeLocal() { }

	// RVA: 0x1C8308C Offset: 0x1C8308C VA: 0x1C8308C
	private void createSkinData() { }

	// RVA: 0x1C83288 Offset: 0x1C83288 VA: 0x1C83288
	public void setupBootSkin() { }

	[DebuggerHiddenAttribute] // RVA: 0xD362F8 Offset: 0xD362F8 VA: 0xD362F8
	// RVA: 0x1C83218 Offset: 0x1C83218 VA: 0x1C83218
	private IEnumerator loadAsset() { }

	// RVA: 0x1C83334 Offset: 0x1C83334 VA: 0x1C83334
	public static void LoadUISkin(Action callback, AtlasManager.SkinType skinType, int loadParallelMax = 1) { }

	// RVA: 0x1C83784 Offset: 0x1C83784 VA: 0x1C83784
	public static void LoadUISkinTex(Action callback, AtlasManager.SkinType skinType, List<string> texNameList) { }

	// RVA: 0x1C833B4 Offset: 0x1C833B4 VA: 0x1C833B4
	protected void LoadUISkinLocal(Action callback, AtlasManager.SkinType skinType, List<string> texNameList, int loadParallelMax = 1) { }

	// RVA: 0x1C838A4 Offset: 0x1C838A4 VA: 0x1C838A4
	private string GetUiSkinChangePath(AtlasManager.SkinType skinType, int skinNum) { }

	// RVA: 0x1C83804 Offset: 0x1C83804 VA: 0x1C83804
	public AtlasManager.SkinData getSkinAtlasData(AtlasManager.SkinType skinType) { }

	// RVA: 0x1C83B08 Offset: 0x1C83B08 VA: 0x1C83B08
	public bool isLoadedSkinData(AtlasManager.SkinType skinType) { }

	// RVA: 0x1C83B2C Offset: 0x1C83B2C VA: 0x1C83B2C
	protected void LoadUISkinEnd(AssetData data, AtlasManager.SkinType skinType, string path, bool isTex) { }

	// RVA: 0x1C83028 Offset: 0x1C83028 VA: 0x1C83028
	private void ReleaseNoneResidentUISkin() { }

	// RVA: 0x1C83A28 Offset: 0x1C83A28 VA: 0x1C83A28
	public void ReleaseUISkin(AtlasManager.SkinType skinType, bool isForce = False) { }

	// RVA: 0x1C83D60 Offset: 0x1C83D60 VA: 0x1C83D60
	protected UIAtlas[] CreateUIAtlasListFromAssetData(AssetData assetData, string prefixName) { }

	// RVA: 0x1C83F34 Offset: 0x1C83F34 VA: 0x1C83F34
	protected void LoadItemEnd(AssetData data) { }

	// RVA: 0x1C840F8 Offset: 0x1C840F8 VA: 0x1C840F8
	protected void LoadCoinEnd(AssetData data) { }

	// RVA: 0x1C84164 Offset: 0x1C84164 VA: 0x1C84164
	protected void LoadClassIconsEnd(AssetData data) { }

	// RVA: 0x1C8421C Offset: 0x1C8421C VA: 0x1C8421C
	protected void LoadSkillIconEnd(AssetData data) { }

	// RVA: 0x1C843E0 Offset: 0x1C843E0 VA: 0x1C843E0
	protected void LoadMarkEnd(AssetData data) { }

	// RVA: 0x1C84468 Offset: 0x1C84468 VA: 0x1C84468
	protected void generateFaceAtlasSpriteMapping(UIAtlas atlas, int spriteNumber) { }

	// RVA: 0x1C845B4 Offset: 0x1C845B4 VA: 0x1C845B4
	protected void generateFaceBattleAtlasSpriteMapping(UIAtlas atlas, int spriteNumber) { }

	// RVA: 0x1C84700 Offset: 0x1C84700 VA: 0x1C84700
	public static int GetFaceAtlasSpriteNumber(string spriteName) { }

	// RVA: 0x1C84764 Offset: 0x1C84764 VA: 0x1C84764
	public int getFaceAtlasSpriteNumberLocal(string spriteName) { }

	// RVA: 0x1C84814 Offset: 0x1C84814 VA: 0x1C84814
	protected void LoadFaceEnd(AssetData data) { }

	// RVA: 0x1C84A20 Offset: 0x1C84A20 VA: 0x1C84A20
	protected void EndLoadFaceBattle(AssetData data) { }

	// RVA: 0x1C84C30 Offset: 0x1C84C30 VA: 0x1C84C30
	protected void LoadCharaGraphEnd(AssetData data) { }

	// RVA: 0x1C7BB04 Offset: 0x1C7BB04 VA: 0x1C7BB04
	public void SetCommonLocal(UISprite sprite) { }

	// RVA: 0x1C84CEC Offset: 0x1C84CEC VA: 0x1C84CEC
	public bool checkCommonAtlasSprite(string spName) { }

	// RVA: 0x1C84D30 Offset: 0x1C84D30 VA: 0x1C84D30
	public bool SetSkinLocal(UISprite sprite, AtlasManager.SkinType skinType) { }

	// RVA: 0x1C84D98 Offset: 0x1C84D98 VA: 0x1C84D98
	public bool SetSkinLocal(ExUISkinTexture skinTex, AtlasManager.SkinType skinType) { }

	// RVA: 0x1C7C0F8 Offset: 0x1C7C0F8 VA: 0x1C7C0F8
	protected bool SetEquipItemLocal(UISprite sprite, int equipItemImageId) { }

	// RVA: 0x1C7C4E0 Offset: 0x1C7C4E0 VA: 0x1C7C4E0
	protected bool SetClassIconLocal(UISprite sprite, string classIconName) { }

	// RVA: 0x1C7C89C Offset: 0x1C7C89C VA: 0x1C7C89C
	protected bool SetClassTextIconLocal(UISprite sprite, string classIconName) { }

	// RVA: 0x1C7CB44 Offset: 0x1C7CB44 VA: 0x1C7CB44
	protected bool SetGradeIconLocal(UISprite sprite, string baseName, UIAtlas baseAtlas) { }

	// RVA: 0x1C7CE1C Offset: 0x1C7CE1C VA: 0x1C7CE1C
	protected bool SetGradeBaseLocal(UISprite sprite, string baseName, UIAtlas baseAtlas) { }

	// RVA: 0x1C7BBB0 Offset: 0x1C7BBB0 VA: 0x1C7BBB0
	protected bool SetItemLocal(UISprite sprite, int itemImageId) { }

	// RVA: 0x1C7BE54 Offset: 0x1C7BE54 VA: 0x1C7BE54
	protected bool SetCoinLocal(UISprite sprite, int coinImageId) { }

	// RVA: 0x1C7D0D8 Offset: 0x1C7D0D8 VA: 0x1C7D0D8
	protected bool SetSkillIconLocal(UISprite sprite, int skillImageId) { }

	// RVA: 0x1C7D4A0 Offset: 0x1C7D4A0 VA: 0x1C7D4A0
	protected bool SetMarkLocal(UISprite sprite, string markName) { }

	// RVA: 0x1C7D69C Offset: 0x1C7D69C VA: 0x1C7D69C
	protected bool SetEquipFaceLocal(UISprite sprite, int svtId) { }

	// RVA: 0x1C84E08 Offset: 0x1C84E08 VA: 0x1C84E08
	protected string GetFaceSpriteName(int svtId, int imageLimitCount) { }

	// RVA: 0x1C7DDC0 Offset: 0x1C7DDC0 VA: 0x1C7DDC0
	protected bool SetFaceLocal(UISprite sprite, int svtId, int imageLimitCount) { }

	// RVA: 0x1C7DA64 Offset: 0x1C7DA64 VA: 0x1C7DA64
	protected bool SetFaceBattleLocal(UISprite sprite, int svtId, int imageLimitCount) { }

	// RVA: 0x1C7E2CC Offset: 0x1C7E2CC VA: 0x1C7E2CC
	protected bool SetNoMountFaceLocal(UISprite sprite) { }

	// RVA: 0x1C7E3DC Offset: 0x1C7E3DC VA: 0x1C7E3DC
	protected bool SetHideFaceLocal(UISprite sprite) { }

	// RVA: 0x1C7E614 Offset: 0x1C7E614 VA: 0x1C7E614
	protected bool SetDatalostFaceLocal(UISprite sprite) { }

	// RVA: 0x1C7E84C Offset: 0x1C7E84C VA: 0x1C7E84C
	protected bool SetNotOpenFaceLocal(UISprite sprite) { }

	// RVA: 0x1C7EB4C Offset: 0x1C7EB4C VA: 0x1C7EB4C
	protected bool SetCommandCodeLocal(UISprite sprite, int commandCodeId) { }

	// RVA: 0x1C7EE7C Offset: 0x1C7EE7C VA: 0x1C7EE7C
	protected bool SetCommandCodeMiniLocal(UISprite sprite, int commandCodeId) { }

	// RVA: 0x1C7F138 Offset: 0x1C7F138 VA: 0x1C7F138
	protected bool SetBondAtlasLocal(UISprite sprite, string spriteName) { }

	// RVA: 0x1C822E4 Offset: 0x1C822E4 VA: 0x1C822E4
	protected bool SetEventLocalSprite(UISprite sprite, string spriteName) { }

	// RVA: 0x1C7F2A8 Offset: 0x1C7F2A8 VA: 0x1C7F2A8
	protected void LoadEnemyAtlasLocal(Action callback) { }

	// RVA: 0x1C84F00 Offset: 0x1C84F00 VA: 0x1C84F00
	protected void LoadEnemyAtlasEndLocal(AssetData aData) { }

	// RVA: 0x1C7F484 Offset: 0x1C7F484 VA: 0x1C7F484
	protected void ReleaseEnemyAtlasLocal() { }

	// RVA: 0x1C850FC Offset: 0x1C850FC VA: 0x1C850FC
	protected bool IsExistEnemyAtlasLocal(string spriteName) { }

	// RVA: 0x1C7F5C0 Offset: 0x1C7F5C0 VA: 0x1C7F5C0
	protected bool SetEnemyLocal(UISprite sprite, int enemyImageId) { }

	// RVA: 0x1C7F864 Offset: 0x1C7F864 VA: 0x1C7F864
