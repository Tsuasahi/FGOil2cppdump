	// RVA: 0x1414058 Offset: 0x1414058 VA: 0x1414058
	public void DownloadAssetStorageAll(int loadParallelMax = 1) { }

	// RVA: 0x14144B4 Offset: 0x14144B4 VA: 0x14144B4
	public bool isDownloadAssetStorageCheck(string attrib) { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8BF4 Offset: 0xCC8BF4 VA: 0xCC8BF4
	// RVA: 0x1414694 Offset: 0x1414694 VA: 0x1414694
	public IEnumerator DownloadAssetStorageAttributeWithCheckDialog(string attrib, int loadParallelMax = 1) { }

	// RVA: 0x1414744 Offset: 0x1414744 VA: 0x1414744
	private string GetDownloadSizeString() { }

	// RVA: 0x141475C Offset: 0x141475C VA: 0x141475C
	public string ConvertDownloadSizeToString(double size) { }

	// RVA: 0x1414A20 Offset: 0x1414A20 VA: 0x1414A20
	public void DownloadAssetStorageAttribute(string attrib, int loadParallelMax = 1) { }

	// RVA: 0x1414C34 Offset: 0x1414C34 VA: 0x1414C34
	public void DownloadAssetStorageAttribute(string[] attribList, int loadParallelMax = 1) { }

	// RVA: 0x1414F84 Offset: 0x1414F84 VA: 0x1414F84
	public bool IsInitializeAssetStorage() { }

	// RVA: 0x14111F4 Offset: 0x14111F4 VA: 0x14111F4
	public long GetDownloadSize() { }

	// RVA: 0x1411740 Offset: 0x1411740 VA: 0x1411740
	public string[] GetAssetStorageList(string path) { }

	// RVA: 0x1411A40 Offset: 0x1411A40 VA: 0x1411A40
	public void ResetAssetStorageVersion(string path) { }

	// RVA: 0x1411CB8 Offset: 0x1411CB8 VA: 0x1411CB8
	public void CancelDownloadAssetStorage() { }

	// RVA: 0x1414F8C Offset: 0x1414F8C VA: 0x1414F8C
	public void CancelDownloadAssetStorageAll() { }

	// RVA: 0x1411EA0 Offset: 0x1411EA0 VA: 0x1411EA0
	public void PauseDownloadAssetStorage() { }

	// RVA: 0x1411F68 Offset: 0x1411F68 VA: 0x1411F68
	public void ResumeDownloadAssetStorage() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8C04 Offset: 0xCC8C04 VA: 0xCC8C04
	// RVA: 0x1413DD8 Offset: 0x1413DD8 VA: 0x1413DD8
	private IEnumerator InitCR() { }

	// RVA: 0x1414FF8 Offset: 0x1414FF8 VA: 0x1414FF8
	protected void OnClickWaitDebugDialog(bool isDecide) { }

	// RVA: 0x1415000 Offset: 0x1415000 VA: 0x1415000
	protected void OnClickRetryDialog(bool isDecide) { }

	// RVA: 0x14150CC Offset: 0x14150CC VA: 0x14150CC
	protected void ConfigWriteRequest(bool isFast) { }

	// RVA: 0x14157C8 Offset: 0x14157C8 VA: 0x14157C8
	protected void StartConfigWriteRequestThread() { }

	// RVA: 0x14157E0 Offset: 0x14157E0 VA: 0x14157E0
	private void StartThreadConfigWriteRequest() { }

	// RVA: 0x1415890 Offset: 0x1415890 VA: 0x1415890
	private void ConfigWriteRequestThread() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8C14 Offset: 0xCC8C14 VA: 0xCC8C14
	// RVA: 0x14158D0 Offset: 0x14158D0 VA: 0x14158D0
	private IEnumerator coUnloadUnusedAssets() { }

	// RVA: 0x1413D30 Offset: 0x1413D30 VA: 0x1413D30
	public void RequestUnloadUnusedAssets(AssetManager.ResourceUnloadEventHandler callback) { }

	// RVA: 0x1415948 Offset: 0x1415948 VA: 0x1415948
	protected void LateUpdate() { }

	// RVA: 0x14163AC Offset: 0x14163AC VA: 0x14163AC
	protected bool AddEntryLoadStatus(AssetData.Type type, string name, AssetLoader.LoadEndDataHandler callbackFunc) { }

	// RVA: 0x14166D8 Offset: 0x14166D8 VA: 0x14166D8
	protected bool AddCallbackLoadStatus(AssetData.Type type, string name, AssetLoader.LoadEndDataHandler callbackFunc) { }

	// RVA: 0x14168E8 Offset: 0x14168E8 VA: 0x14168E8
	protected bool CheckEntryLoadStatus(AssetData.Type type, string name) { }

	// RVA: 0x1416AD4 Offset: 0x1416AD4 VA: 0x1416AD4
	protected void AddLoadWaitStatus(Action callbackFunc) { }

	// RVA: 0x1413FA4 Offset: 0x1413FA4 VA: 0x1413FA4
	protected void AddLoadWaitStatus(AssetData info) { }

	// RVA: 0x1416BBC Offset: 0x1416BBC VA: 0x1416BBC
	protected void AddLoadWaitStatus(AssetData info, AssetLoader.LoadEndDataHandler callbackFunc, string[] resourceNames) { }

	// RVA: 0x1416CC4 Offset: 0x1416CC4 VA: 0x1416CC4
	public void ReleaseReservation(AssetData info) { }

	// RVA: 0x1414060 Offset: 0x1414060 VA: 0x1414060
	protected bool LoadStart() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8C24 Offset: 0xCC8C24 VA: 0xCC8C24
	// RVA: 0x1416E8C Offset: 0x1416E8C VA: 0x1416E8C
	private IEnumerator DelayLoadStart() { }

	// RVA: 0x1416F04 Offset: 0x1416F04 VA: 0x1416F04
	protected void OnEndLoadAssetStorage(AssetLoader loader) { }

	// RVA: 0x1410808 Offset: 0x1410808 VA: 0x1410808
	public bool LoadAsset(AssetData.Type type, string name, AssetLoader.LoadEndDataHandler callbackFunc) { }

	// RVA: 0x1417080 Offset: 0x1417080 VA: 0x1417080
	public bool LoadAsset(string name, AssetLoader.LoadEndDataHandler callbackFunc) { }

	// RVA: 0x1410954 Offset: 0x1410954 VA: 0x1410954
	public AssetData GetAsset(AssetData.Type type, string name) { }

	// RVA: 0x1417184 Offset: 0x1417184 VA: 0x1417184
	public AssetData GetAsset(string name) { }

	// RVA: 0x1410A48 Offset: 0x1410A48 VA: 0x1410A48
	public bool GetAsset(AssetData.Type type, string name, AssetLoader.LoadEndDataHandler callbackFunc) { }

	// RVA: 0x1410B90 Offset: 0x1410B90 VA: 0x1410B90
	public bool GetAsset(string name, AssetLoader.LoadEndDataHandler callbackFunc) { }

	// RVA: 0x1410CF8 Offset: 0x1410CF8 VA: 0x1410CF8
	public void ReleaseAsset(AssetData.Type type, string name) { }

	// RVA: 0x1410E90 Offset: 0x1410E90 VA: 0x1410E90
	public void ReleaseAsset(AssetData.Type type, string[] nameList) { }

	// RVA: 0x1410FC4 Offset: 0x1410FC4 VA: 0x1410FC4
	public void ReleaseAsset(AssetData assetInfo) { }

	// RVA: 0x14110D4 Offset: 0x14110D4 VA: 0x14110D4
	public void ReleaseAsset(AssetData[] assetInfoList) { }

	// RVA: 0x14112C4 Offset: 0x14112C4 VA: 0x14112C4
	public bool IsExistAssetStorage(string name) { }

	// RVA: 0x14113E4 Offset: 0x14113E4 VA: 0x14113E4
	public bool IsExistAssetStorage(string[] nameList) { }

	// RVA: 0x1411520 Offset: 0x1411520 VA: 0x1411520
	public bool IsNeedDownload(string name) { }

	// RVA: 0x1411604 Offset: 0x1411604 VA: 0x1411604
	public bool IsNeedDownload(string[] nameList) { }

	// RVA: 0x1412048 Offset: 0x1412048 VA: 0x1412048
	public bool DownloadAssetStorage(string name, AssetLoader.LoadEndDataHandler callbackFunc, int loadParallelMax = 1) { }

	// RVA: 0x14121C4 Offset: 0x14121C4 VA: 0x14121C4
	public bool DownloadAssetStorage(string[] nameList, Action callbackFunc, int loadParallelMax = 1) { }

	// RVA: 0x1412298 Offset: 0x1412298 VA: 0x1412298
	public bool LoadAssetStorage(string name, AssetLoader.LoadEndDataHandler callbackFunc, int loadParallelMax = 1) { }

	// RVA: 0x14124F4 Offset: 0x14124F4 VA: 0x14124F4
	public bool LoadResourcesAssetStorage(string name, string[] resourceNames, AssetLoader.LoadEndDataHandler callbackFunc, int loadParallelMax = 1) { }

	// RVA: 0x141299C Offset: 0x141299C VA: 0x141299C
	public bool LoadAssetStorage(string[] nameList, Action callbackFunc, int loadParallelMax = 1) { }

	// RVA: 0x14170F4 Offset: 0x14170F4 VA: 0x14170F4
	private AssetData GetAssetData(Dictionary<string, AssetData> dic, string name) { }

	// RVA: 0x1412E28 Offset: 0x1412E28 VA: 0x1412E28
	public AssetData GetAssetStorage(string name) { }

	// RVA: 0x1412F20 Offset: 0x1412F20 VA: 0x1412F20
	public AssetData[] GetAssetStorage(string[] nameList) { }

	// RVA: 0x141311C Offset: 0x141311C VA: 0x141311C
	public bool GetAssetStorage(string name, AssetLoader.LoadEndDataHandler callbackFunc) { }

	// RVA: 0x14131AC Offset: 0x14131AC VA: 0x14131AC
	public void ReleaseAssetStorage(string name) { }

	// RVA: 0x141328C Offset: 0x141328C VA: 0x141328C
	public void ReleaseAssetStorage(string[] nameList) { }

	// RVA: 0x14133B4 Offset: 0x14133B4 VA: 0x14133B4
	public AssetData LoadAssetResource(string name) { }

	// RVA: 0x1413564 Offset: 0x1413564 VA: 0x1413564
	public AssetData GetAssetResource(string name) { }

	// RVA: 0x1413658 Offset: 0x1413658 VA: 0x1413658
	public void ReleaseAssetResource(string name) { }

	// RVA: 0x14171D4 Offset: 0x14171D4 VA: 0x14171D4
	private static void .cctor() { }
}

// Namespace: 
public sealed class AssetManager.ResourceUnloadEventHandler : MulticastDelegate // TypeDefIndex: 6260
{
	// Methods

	// RVA: 0x141A454 Offset: 0x141A454 VA: 0x141A454
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x141A1C8 Offset: 0x141A1C8 VA: 0x141A1C8 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x141A464 Offset: 0x141A464 VA: 0x141A464 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x141A498 Offset: 0x141A498 VA: 0x141A498 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
protected class AssetManager.LoadWaitStatus // TypeDefIndex: 6261
{
	// Fields
	protected AssetData data; // 0x10
	protected Action callbackFunc; // 0x18
	protected AssetLoader.LoadEndDataHandler callbackFunc2; // 0x20
	private string[] resourceNames; // 0x28

	// Properties
	public string Name { get; }
	public AssetData Info { get; }
	public Action CallbackFunc { get; }
	public AssetLoader.LoadEndDataHandler DataCallbackFunc { get; }

	// Methods

	// RVA: 0x1416B64 Offset: 0x1416B64 VA: 0x1416B64
	public void .ctor(Action callbackFunc) { }

	// RVA: 0x1416B90 Offset: 0x1416B90 VA: 0x1416B90
	public void .ctor(AssetData data) { }

	// RVA: 0x1416C84 Offset: 0x1416C84 VA: 0x1416C84
	public void .ctor(AssetData data, AssetLoader.LoadEndDataHandler callbackFunc, string[] resourceNames) { }

	// RVA: 0x14165E4 Offset: 0x14165E4 VA: 0x14165E4
	public void AddEntry() { }

	// RVA: 0x1416614 Offset: 0x1416614 VA: 0x1416614
	public void AddCallback(AssetLoader.LoadEndDataHandler callbackFunc) { }

	// RVA: 0x1416DF0 Offset: 0x1416DF0 VA: 0x1416DF0
	public string get_Name() { }

	// RVA: 0x1413718 Offset: 0x1413718 VA: 0x1413718
	public AssetData get_Info() { }

	// RVA: 0x14165D0 Offset: 0x14165D0 VA: 0x14165D0
	public bool IsSame(AssetData.Type type, string name) { }

	// RVA: 0x1416E84 Offset: 0x1416E84 VA: 0x1416E84
	public Action get_CallbackFunc() { }

	// RVA: 0x1416E7C Offset: 0x1416E7C VA: 0x1416E7C
	public AssetLoader.LoadEndDataHandler get_DataCallbackFunc() { }

	// RVA: 0x1419EA0 Offset: 0x1419EA0 VA: 0x1419EA0
	public string[] ResourceNames() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC426C4 Offset: 0xC426C4 VA: 0xC426C4
private sealed class AssetManager.<WaitForExecutionUnloadUnuseAssets>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6262
{
	// Fields
	internal WaitForEndOfFrame <wait>__0; // 0x10
	internal AssetManager $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8780 Offset: 0xCD8780 VA: 0xCD8780
	// RVA: 0x140F1F8 Offset: 0x140F1F8 VA: 0x140F1F8
	public void .ctor() { }

	// RVA: 0x1419EA8 Offset: 0x1419EA8 VA: 0x1419EA8 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8790 Offset: 0xCD8790 VA: 0xCD8790
	// RVA: 0x1419F9C Offset: 0x1419F9C VA: 0x1419F9C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD87A0 Offset: 0xCD87A0 VA: 0xCD87A0
	// RVA: 0x1419FA4 Offset: 0x1419FA4 VA: 0x1419FA4 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD87B0 Offset: 0xCD87B0 VA: 0xCD87B0
	// RVA: 0x1419FAC Offset: 0x1419FAC VA: 0x1419FAC Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD87C0 Offset: 0xCD87C0 VA: 0xCD87C0
	// RVA: 0x1419FC0 Offset: 0x1419FC0 VA: 0x1419FC0 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC426D4 Offset: 0xC426D4 VA: 0xC426D4
private sealed class AssetManager.<DownloadAssetStorageAttributeWithCheckDialog>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6263
{
	// Fields
	internal Dictionary.ValueCollection.Enumerator<string, AssetData> $locvar0; // 0x10
	internal string attrib; // 0x30
	internal string <title>__1; // 0x38
	internal string <str>__1; // 0x40
	internal string <exp>__1; // 0x48
	internal bool <isDispLogo>__0; // 0x50
	internal int loadParallelMax; // 0x54
	internal AssetManager $this; // 0x58
	internal object $current; // 0x60
	internal bool $disposing; // 0x68
	internal int $PC; // 0x6C
	private AssetManager.<DownloadAssetStorageAttributeWithCheckDialog>c__Iterator1.<DownloadAssetStorageAttributeWithCheckDialog>c__AnonStorey5 $locvar1; // 0x70

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD87D0 Offset: 0xCD87D0 VA: 0xCD87D0
	// RVA: 0x141473C Offset: 0x141473C VA: 0x141473C
	public void .ctor() { }

	// RVA: 0x1417410 Offset: 0x1417410 VA: 0x1417410 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD87E0 Offset: 0xCD87E0 VA: 0xCD87E0
	// RVA: 0x1417A7C Offset: 0x1417A7C VA: 0x1417A7C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD87F0 Offset: 0xCD87F0 VA: 0xCD87F0
	// RVA: 0x1417A84 Offset: 0x1417A84 VA: 0x1417A84 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8800 Offset: 0xCD8800 VA: 0xCD8800
	// RVA: 0x1417A8C Offset: 0x1417A8C VA: 0x1417A8C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8810 Offset: 0xCD8810 VA: 0xCD8810
	// RVA: 0x1417AA0 Offset: 0x1417AA0 VA: 0x1417AA0 Slot: 6
	public void Reset() { }

	// RVA: 0x1417B08 Offset: 0x1417B08 VA: 0x1417B08
	internal void <>m__0() { }
}

// Namespace: 
private sealed class AssetManager.<DownloadAssetStorageAttributeWithCheckDialog>c__Iterator1.<DownloadAssetStorageAttributeWithCheckDialog>c__AnonStorey5 // TypeDefIndex: 6264
{
	// Fields
	internal bool isDataUpdate; // 0x10
	internal AssetManager.<DownloadAssetStorageAttributeWithCheckDialog>c__Iterator1 <>f__ref$1; // 0x18

	// Methods

	// RVA: 0x1417A74 Offset: 0x1417A74 VA: 0x1417A74
	public void .ctor() { }

	// RVA: 0x1417BC0 Offset: 0x1417BC0 VA: 0x1417BC0
	internal void <>m__0(bool isDecide) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC426E4 Offset: 0xC426E4 VA: 0xC426E4
private sealed class AssetManager.<InitCR>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6265
{
	// Fields
	internal string <loadData>__1; // 0x10
	internal string[] <lines>__1; // 0x18
	internal string <errorCode>__1; // 0x20
	internal int <retryCount>__1; // 0x28
	internal string <configFileUrl>__2; // 0x30
	internal UnityWebRequest <loader>__2; // 0x38
	internal string <loadData>__2; // 0x40
	internal float <requestTime>__3; // 0x48
	internal float <loadProgress>__3; // 0x4C
	internal WaitForEndOfFrame <wait>__3; // 0x50
	internal string <errorCode>__3; // 0x58
	internal AssetManager $this; // 0x60
	internal object $current; // 0x68
	internal bool $disposing; // 0x70
	internal int $PC; // 0x74

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8820 Offset: 0xCD8820 VA: 0xCD8820
	// RVA: 0x1414FF0 Offset: 0x1414FF0 VA: 0x1414FF0
	public void .ctor() { }

	// RVA: 0x1417BD8 Offset: 0x1417BD8 VA: 0x1417BD8 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8830 Offset: 0xCD8830 VA: 0xCD8830
	// RVA: 0x1419C1C Offset: 0x1419C1C VA: 0x1419C1C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8840 Offset: 0xCD8840 VA: 0xCD8840
	// RVA: 0x1419C24 Offset: 0x1419C24 VA: 0x1419C24 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8850 Offset: 0xCD8850 VA: 0xCD8850
	// RVA: 0x1419C2C Offset: 0x1419C2C VA: 0x1419C2C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8860 Offset: 0xCD8860 VA: 0xCD8860
	// RVA: 0x1419C40 Offset: 0x1419C40 VA: 0x1419C40 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC426F4 Offset: 0xC426F4 VA: 0xC426F4
private sealed class AssetManager.<coUnloadUnusedAssets>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6266
{
	// Fields
	internal WaitForEndOfFrame <wait>__0; // 0x10
	internal AssetManager $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8870 Offset: 0xCD8870 VA: 0xCD8870
	// RVA: 0x1415940 Offset: 0x1415940 VA: 0x1415940
	public void .ctor() { }

	// RVA: 0x141A028 Offset: 0x141A028 VA: 0x141A028 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8880 Offset: 0xCD8880 VA: 0xCD8880
	// RVA: 0x141A3C8 Offset: 0x141A3C8 VA: 0x141A3C8 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8890 Offset: 0xCD8890 VA: 0xCD8890
	// RVA: 0x141A3D0 Offset: 0x141A3D0 VA: 0x141A3D0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD88A0 Offset: 0xCD88A0 VA: 0xCD88A0
	// RVA: 0x141A3D8 Offset: 0x141A3D8 VA: 0x141A3D8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD88B0 Offset: 0xCD88B0 VA: 0xCD88B0
	// RVA: 0x141A3EC Offset: 0x141A3EC VA: 0x141A3EC Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42704 Offset: 0xC42704 VA: 0xC42704
private sealed class AssetManager.<LoadStart>c__AnonStorey7 // TypeDefIndex: 6267
{
	// Fields
	internal AssetManager.LoadWaitStatus waiter; // 0x10
	internal AssetManager $this; // 0x18

	// Methods

	// RVA: 0x1416DE8 Offset: 0x1416DE8 VA: 0x1416DE8
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42714 Offset: 0xC42714 VA: 0xC42714
private sealed class AssetManager.<LoadStart>c__AnonStorey6 // TypeDefIndex: 6268
{
	// Fields
	internal AssetLoader loader; // 0x10
	internal AssetManager.<LoadStart>c__AnonStorey7 <>f__ref$7; // 0x18

	// Methods

	// RVA: 0x1416E74 Offset: 0x1416E74 VA: 0x1416E74
	public void .ctor() { }

	// RVA: 0x1419DDC Offset: 0x1419DDC VA: 0x1419DDC
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42724 Offset: 0xC42724 VA: 0xC42724
private sealed class AssetManager.<DelayLoadStart>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6269
{
	// Fields
	internal AssetManager $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD88C0 Offset: 0xCD88C0 VA: 0xCD88C0
	// RVA: 0x1416EFC Offset: 0x1416EFC VA: 0x1416EFC
	public void .ctor() { }

	// RVA: 0x14172F0 Offset: 0x14172F0 VA: 0x14172F0 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD88D0 Offset: 0xCD88D0 VA: 0xCD88D0
	// RVA: 0x1417384 Offset: 0x1417384 VA: 0x1417384 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD88E0 Offset: 0xCD88E0 VA: 0xCD88E0
	// RVA: 0x141738C Offset: 0x141738C VA: 0x141738C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD88F0 Offset: 0xCD88F0 VA: 0xCD88F0
	// RVA: 0x1417394 Offset: 0x1417394 VA: 0x1417394 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8900 Offset: 0xCD8900 VA: 0xCD8900
	// RVA: 0x14173A8 Offset: 0x14173A8 VA: 0x14173A8 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42734 Offset: 0xC42734 VA: 0xC42734
private sealed class AssetManager.<LoadAssetStorage>c__AnonStorey8 // TypeDefIndex: 6270
{
	// Fields
	internal int calledCallbackFuncCounter; // 0x10
	internal List<string> remainNameList; // 0x18
	internal bool calledCallbackFunc; // 0x20
	internal Action callbackFunc; // 0x28
	internal int loadParallelMax; // 0x30
	internal AssetManager $this; // 0x38

	// Methods

	// RVA: 0x14171CC Offset: 0x14171CC VA: 0x14171CC
	public void .ctor() { }

	// RVA: 0x1419CA8 Offset: 0x1419CA8 VA: 0x1419CA8
	internal void <>m__0(AssetData data) { }
}

// Namespace: 
public class AssetStorageCache // TypeDefIndex: 6271
{
	// Methods

	// RVA: 0x141A4A8 Offset: 0x141A4A8 VA: 0x141A4A8
	public void .ctor() { }

	// RVA: 0x140E7DC Offset: 0x140E7DC VA: 0x140E7DC
	public static string GetPath() { }

	// RVA: 0x141A4B0 Offset: 0x141A4B0 VA: 0x141A4B0
	private static string GetOldEnvPath() { }

	// RVA: 0x141A794 Offset: 0x141A794 VA: 0x141A794
	public static void ClearOldEnvCacheAll() { }

	// RVA: 0x141A854 Offset: 0x141A854 VA: 0x141A854
	public static void ClearCacheAll(bool isStandalone = True) { }

	// RVA: 0x141A7AC Offset: 0x141A7AC VA: 0x141A7AC
	private static void ClearCacheAllCommonProc(string cachePath, bool isStandalone) { }

	// RVA: 0x141A878 Offset: 0x141A878 VA: 0x141A878
	public static void ClearCache(bool isStandalone = True) { }
}

// Namespace: 
public class AssetPathLoadCounter : IEnumerable<KeyValuePair<string, int>>, IEnumerable // TypeDefIndex: 6272
{
	// Fields
	private Dictionary<string, int> pathToCountMap; // 0x10

	// Methods

	// RVA: 0x14097F0 Offset: 0x14097F0 VA: 0x14097F0
	public void .ctor() { }

	// RVA: 0x141A4A4 Offset: 0x141A4A4 VA: 0x141A4A4 Slot: 5
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x1409D30 Offset: 0x1409D30 VA: 0x1409D30 Slot: 4
	public IEnumerator<KeyValuePair<string, int>> GetEnumerator() { }

	// RVA: 0x1409860 Offset: 0x1409860 VA: 0x1409860
	public void AddCount(string path) { }

	// RVA: 0x1409970 Offset: 0x1409970 VA: 0x1409970
	public void SubCount(string path) { }

	// RVA: 0x1409DBC Offset: 0x1409DBC VA: 0x1409DBC
	public void Clear() { }
}

// Namespace: 
public abstract class AssetLoadWrapperBase // TypeDefIndex: 6273
{
	// Fields
	protected AssetPathLoadCounter pathCounter; // 0x10

	// Methods

	// RVA: 0x140946C Offset: 0x140946C VA: 0x140946C
	protected void .ctor() { }

	// RVA: 0x1409644 Offset: 0x1409644 VA: 0x1409644
	public void AddLoadCount(string path) { }

	// RVA: 0x14096AC Offset: 0x14096AC VA: 0x14096AC
	public void SubLoadCount(string path) { }

	// RVA: 0x1409A84 Offset: 0x1409A84 VA: 0x1409A84
	public void ReleaseAll() { }

	// RVA: -1 Offset: -1 Slot: 4
	protected abstract void Release(string path);
}

// Namespace: 
public class AssetLoadWrapper : AssetLoadWrapperBase // TypeDefIndex: 6274
{
	// Methods

	// RVA: 0x1409468 Offset: 0x1409468 VA: 0x1409468
	public void .ctor() { }

	// RVA: 0x14094D0 Offset: 0x14094D0 VA: 0x14094D0
	public bool LoadAssetStorage(string path, AssetLoader.LoadEndDataHandler callbackFunc, int maxParallelLoad = 1) { }

	// RVA: 0x1409678 Offset: 0x1409678 VA: 0x1409678
	public void ReleaseAssetStorage(string path) { }

	// RVA: 0x14096E0 Offset: 0x14096E0 VA: 0x14096E0 Slot: 4
	protected override void Release(string path) { }
}

// Namespace: 
public class SoundLoadWrapper : AssetLoadWrapperBase // TypeDefIndex: 6275
{
	// Methods

	// RVA: 0x175DC6C Offset: 0x175DC6C VA: 0x175DC6C
	public void .ctor() { }

	// RVA: 0x175DC74 Offset: 0x175DC74 VA: 0x175DC74
	public void LoadAudioAssetStorage(string path, Action callbackFunc, SoundManager.CueType cueType = 1) { }

	// RVA: 0x175DD0C Offset: 0x175DD0C VA: 0x175DD0C Slot: 4
	protected override void Release(string path) { }
}

// Namespace: 
public class AssetStorageLoadWrapper // TypeDefIndex: 6276
{
	// Fields
	private AssetLoadWrapper assetManagerWrapper; // 0x10
	private SoundLoadWrapper soundManagerWrapper; // 0x18

	// Methods

	// RVA: 0x141A934 Offset: 0x141A934 VA: 0x141A934
	public void .ctor() { }

	// RVA: 0x141A9B8 Offset: 0x141A9B8 VA: 0x141A9B8
	public bool LoadAssetStorage(string path, AssetLoader.LoadEndDataHandler callbackFunc, int maxParallelLoad = 1) { }

	// RVA: 0x141AA04 Offset: 0x141AA04 VA: 0x141AA04
	public void ReleaseAssetStorage(string path) { }

	// RVA: 0x141AA4C Offset: 0x141AA4C VA: 0x141AA4C
	public void LoadAudioAssetStorage(string path, Action callbackFunc, SoundManager.CueType cueType = 1) { }

	// RVA: 0x141AA9C Offset: 0x141AA9C VA: 0x141AA9C
	public void ReleaseAll() { }
}

// Namespace: 
public class AtlasManager : SingletonMonoBehaviour<AtlasManager> // TypeDefIndex: 6277
{
	// Fields
	public const string BANNER_SPNAME_PREFIX = "banner_";
	public const string BANNER_NOTICE_SPNAME_PREFIX = "banner_notice_";
	public const string BANNER_ICON_SPNAME_PREFIX = "banner_icon_";
	public const string BANNER_ATLAS_PATH = "Banner/DownloadBanner";
	public const string EVENT_UI_ATLAS_PATH = "EventUI/DownloadEventUI";
	public const string SHOP_BANNER_ATLAS_PATH = "ShopBanners/DownloadShopBanner";
	public const string ENEMY_ATLAS_PATH = "Enemys/DownloadEnemy";
	public const string EQUIP_FACE_ATLAS_PATH = "EquipFaces/DownloadEquipFace";
	public const string COMMAND_CODE_ATLAS_PATH = "CommandCodes/DownloadCommandCode";
	public const string DOWNLOAD_BUFF_ICON_PATH = "BuffIcons/DownloadBuffIcon";
	public const string NOTIFICATION_ATLAS_PATH = "Notification/DownloadNotification";
	public const string FACE_ATLAS_PATH = "Faces/DownloadFace";
	public const string FACE_BATTLE_ATLAS_PATH = "FaceBattle/DownloadFaceBattle";
	public const string EVENT_DOWNLOAD_ATLAS_PATH = "Event/DownloadEvent";
	public const string COMMAND_CARD_PARAM_ATLAS_PATH = "CardLevel/DownloadCardLevel";
	public const string MYROOM_SOUND_ATLAS_PATH = "MyRoomSound/DownloadMyRoomSound";
	public const string MYROOM_ATLAS_PATH = "MyRoom/DownloadMyRoom";
	public const string WAR_BOARD_ATLAS_PATH = "WarBoard/Common";
	public const string FRIENDSHIP_EXCEED_ATLAS_PATH = "Bond/DownloadBond";
	public const string CHARA_GRAPH_OPTION_ATLAS_PATH = "CharaGraphOption/CharaGraphOption";
	public const string DATA_LOST_FRAME_ICON = "listframes6_bg";
	public const string FACE_DEFAULT_ICON = "f_1000000";
	public const string FACE_EQUIP_DEFAULT_ICON = "f_1000000";
	public const string COMMAND_CODE_DEFAULT_ICON = "c_1000000";
	public const string FACE_NO_MOUNT_ICON = "f_1000000";
	public const string FACE_HIDE_ICON = "f_1000010";
	public const string FACE_DATA_LOST_ICON = "f_1000012";
	public const string FACE_NOT_OPEN_ICON = "f_1000011";
	private const int AtlasLoadParalleMax = 5;
	private static readonly string[,] uiSkinChangePath; // 0x0
	public static readonly string OVERWITE_UI_SKIN_COMMONBG1; // 0x8
	public static readonly string OVERWITE_UI_SKIN_COMMONBG2; // 0x10
	private static readonly string[] baseFrameList; // 0x18
	protected static Dictionary<int, string[]> baseFrameTable; // 0x20
	private static readonly string[] baseTypeFrameList; // 0x28
	protected static Dictionary<int, string[]> baseTypeFrameTable; // 0x30
	private static readonly string[] formationBaseList; // 0x38
	private static readonly string[] formationFrameList; // 0x40
	private static readonly string[] formationFrameForSupportSelectList; // 0x48
	private static readonly string[] commandCodeBaseFrameList; // 0x50
	protected static string[] bannerFileList; // 0x58
	[SerializeField] // RVA: 0xC53500 Offset: 0xC53500 VA: 0xC53500
	protected UIAtlas commonAtlas; // 0x18
	protected WeakReference _itemAtlasRef; // 0x20
	protected WeakReference _coinAtlasRef; // 0x28
	protected WeakReference _classIconsAtlasRef; // 0x30
	protected WeakReference _skillIconAtlasRef; // 0x38
	protected WeakReference _buffIconAtlasRef; // 0x40
	protected WeakReference _markAtlasRef; // 0x48
	protected WeakReference _bannerAtlasRef; // 0x50
	protected WeakReference _equipFaceAtlasRef; // 0x58
	protected WeakReference _faceAtlasRef; // 0x60
	protected WeakReference _commandCodeAtlasRef; // 0x68
	protected WeakReference _commandCodeMiniAtlasRef; // 0x70
	protected WeakReference _enemyAtlasRef; // 0x78
	protected WeakReference _commandCardParamAtlasRef; // 0x80
	protected AtlasManager.SkinData[] uiSkinAtlasData; // 0x88
	protected static Dictionary<int, int> classFrameIdList; // 0x60
	protected ServantLimitAddMaster servantLimitAddMaster; // 0x90
	protected UIAtlas[] itemDownloadAtlasList; // 0x98
	protected UIAtlas[] coinDownloadAtlasList; // 0xA0
	protected UIAtlas classIconsDownloadAtlas; // 0xA8
	protected UIAtlas[] skillIconDownloadAtlasList; // 0xB0
	protected UIAtlas[] buffIconDownloadAtlasList; // 0xB8
	protected Action buffIconAtlasLoadCallback; // 0xC0
	protected UIAtlas markDownloadAtlas; // 0xC8
	protected bool isCharaGraphOptionAtlasLoad; // 0xD0
	protected UIAtlas charaGraphOptionDownloadAtlas; // 0xD8
	protected Action charaGraphOptionAtlasLoadCallback; // 0xE0
	protected AssetData charaGraphOptionAtlasAssetData; // 0xE8
	protected UIAtlas[] faceNormalAtlasList; // 0xF0
	protected bool isFaceAtlasLoad; // 0xF8
	protected AssetData faceNormalAtlasAssetData; // 0x100
	protected Action faceAtlasLoadCallback; // 0x108
	protected Dictionary<string, int> faceAtlasSpriteMap; // 0x110
	protected UIAtlas[] faceBattleAtlasList; // 0x118
	protected bool isFaceBattleAtlasLoad; // 0x120
	protected AssetData faceBattleAtlasAssetData; // 0x128
	protected Action faceBattleAtlasLoadCallBack; // 0x130
	protected Dictionary<string, int> faceBattleAtlasSpriteMap; // 0x138
	protected bool isEnemyAtlasLoad; // 0x140
	protected AssetData enemyAtlasAssetData; // 0x148
	protected Action enemyAtlasLoadCallbackFunc; // 0x150
	protected UIAtlas[] enemyDownloadAtlasList; // 0x158
	protected bool isBannerLoad; // 0x160
	protected Action bannerLoadCallbackFunc; // 0x168
	protected AssetData bannerAssetData; // 0x170
	protected UIAtlas[] bannerDownloadAtlasList; // 0x178
	protected AssetData shopBannerAssetData; // 0x180
	protected UIAtlas[] shopBannerDownloadAtlasList; // 0x188
	protected bool isEventUILoad; // 0x190
	protected Action eventUILoadCallbackFunc; // 0x198
	protected AssetData eventUIAssetData; // 0x1A0
	protected UIAtlas[] eventUIDownloadAtlasList; // 0x1A8
	protected bool isEquipFaceLoad; // 0x1B0
	protected Action equipFaceLoadCallbackFunc; // 0x1B8
	protected AssetData equipFaceAssetData; // 0x1C0
	protected UIAtlas[] equipFaceAtlasList; // 0x1C8
	protected bool isCommandCodeLoad; // 0x1D0
	protected Action commandCodeLoadCallbackFunc; // 0x1D8
	protected AssetData commandCodeAssetData; // 0x1E0
	protected UIAtlas[] commandCodeAtlasList; // 0x1E8
	protected bool isCommandCodeMiniLoad; // 0x1F0
	protected Action commandCodeMiniLoadCallbackFunc; // 0x1F8
	protected AssetData commandCodeMiniAssetData; // 0x200
	protected UIAtlas[] commandCodeMiniAtlasList; // 0x208
	protected bool isFriendshipExceedLoad; // 0x210
	protected Action friendshipExceedLoadCallbackFunc; // 0x218
	protected AssetData friendshipExceedAssetData; // 0x220
	protected UIAtlas[] friendshipExceedAtlasList; // 0x228
	protected bool isNotificationLoad; // 0x230
	protected Action notificationLoadCallbackFunc; // 0x238
	protected AssetData notificationAssetData; // 0x240
	protected UIAtlas notificationAtlas; // 0x248
	protected int notificationAtlasRefCount; // 0x250
	protected bool isEventAtlasLoad; // 0x254
	protected Action eventAtlasLoadCallback; // 0x258
	protected AssetData eventAtlasAssetData; // 0x260
	protected UIAtlas[] eventAtlasList; // 0x268
	protected bool isCommandCardParamLoad; // 0x270
	protected Action commandCardParamLoadCallbackFunc; // 0x278
	protected AssetData commandCardParamAssetData; // 0x280
	protected UIAtlas commandCardParamAtlas; // 0x288
	protected bool isMyRoomSoundLoad; // 0x290
	protected Action myRoomSoundLoadCallbackFunc; // 0x298
	protected AssetData myRoomSoundAssetData; // 0x2A0
	protected UIAtlas myRoomSoundAtlas; // 0x2A8
	protected bool isMyRoomLoad; // 0x2B0
	protected Action myRoomLoadCallbackFunc; // 0x2B8
	protected AssetData myRoomAssetData; // 0x2C0
	protected UIAtlas myRoomAtlas; // 0x2C8
	protected Action warBoardAtlasLoadCallback; // 0x2D0
	protected UIAtlas warBoardAtlas; // 0x2D8
	protected bool isBusy; // 0x2E0
	protected Action outGameAtlasLoadCallback; // 0x2E8
	protected Action outGameIconAtlasLoadCallback; // 0x2F0

	// Properties
	protected UIAtlas itemAtlas { get; }
	protected UIAtlas coinAtlas { get; }
	protected UIAtlas classIconsAtlas { get; }
	protected UIAtlas skillIconAtlas { get; }
	protected UIAtlas buffIconAtlas { get; }
	protected UIAtlas markAtlas { get; }
	protected UIAtlas bannerAtlas { get; }
	protected UIAtlas equipFaceAtlas { get; }
	protected UIAtlas faceAtlas { get; }
	protected UIAtlas commandCodeAtlas { get; }
	protected UIAtlas commandCodeMiniAtlas { get; }
	protected UIAtlas enemyAtlas { get; }
	protected UIAtlas commandCardParamLocalAtlas { get; }
	protected AtlasSubManagerEventUI atlasSubManagerEventAtlas { get; }

	// Methods

	// RVA: 0x1420968 Offset: 0x1420968 VA: 0x1420968
	public void .ctor() { }

	// RVA: 0x14209E0 Offset: 0x14209E0 VA: 0x14209E0
	protected UIAtlas get_itemAtlas() { }

	// RVA: 0x1420AF0 Offset: 0x1420AF0 VA: 0x1420AF0
	protected UIAtlas get_coinAtlas() { }

	// RVA: 0x1420C00 Offset: 0x1420C00 VA: 0x1420C00
	protected UIAtlas get_classIconsAtlas() { }

	// RVA: 0x1420D10 Offset: 0x1420D10 VA: 0x1420D10
	protected UIAtlas get_skillIconAtlas() { }

	// RVA: 0x1420E20 Offset: 0x1420E20 VA: 0x1420E20
	protected UIAtlas get_buffIconAtlas() { }

	// RVA: 0x1420F30 Offset: 0x1420F30 VA: 0x1420F30
	protected UIAtlas get_markAtlas() { }

	// RVA: 0x1421040 Offset: 0x1421040 VA: 0x1421040
	protected UIAtlas get_bannerAtlas() { }

	// RVA: 0x1421150 Offset: 0x1421150 VA: 0x1421150
	protected UIAtlas get_equipFaceAtlas() { }

	// RVA: 0x1421260 Offset: 0x1421260 VA: 0x1421260
	protected UIAtlas get_faceAtlas() { }

	// RVA: 0x1421370 Offset: 0x1421370 VA: 0x1421370
	protected UIAtlas get_commandCodeAtlas() { }

	// RVA: 0x1421480 Offset: 0x1421480 VA: 0x1421480
	protected UIAtlas get_commandCodeMiniAtlas() { }

	// RVA: 0x1421590 Offset: 0x1421590 VA: 0x1421590
	protected UIAtlas get_enemyAtlas() { }

	// RVA: 0x14216A0 Offset: 0x14216A0 VA: 0x14216A0
	protected UIAtlas get_commandCardParamLocalAtlas() { }

	// RVA: 0x14217B0 Offset: 0x14217B0 VA: 0x14217B0
	protected AtlasSubManagerEventUI get_atlasSubManagerEventAtlas() { }

	// RVA: 0x14217B8 Offset: 0x14217B8 VA: 0x14217B8
	public static void Reboot() { }

	// RVA: 0x1421858 Offset: 0x1421858 VA: 0x1421858
	public static void Initialize() { }

	// RVA: 0x1421AA4 Offset: 0x1421AA4 VA: 0x1421AA4
	public static bool IsBusyInitialize() { }

	// RVA: 0x1421B4C Offset: 0x1421B4C VA: 0x1421B4C
	public static bool IsUseFaceBattle() { }

	// RVA: 0x1421C10 Offset: 0x1421C10 VA: 0x1421C10
	private bool IsUseFaceBattleLocal() { }

	// RVA: 0x1421C44 Offset: 0x1421C44 VA: 0x1421C44
	public static void LoadOutGameAtlas(Action callback) { }

	// RVA: 0x1422404 Offset: 0x1422404 VA: 0x1422404
	public static void LoadOutGameIconAtlas(Action callback) { }

	// RVA: 0x1422568 Offset: 0x1422568 VA: 0x1422568
	public static void SetClassTable(Dictionary<int, int> classFrameIdList) { }

	// RVA: 0x14225D4 Offset: 0x14225D4 VA: 0x14225D4
	public static int GetFrameId(int classId) { }

	// RVA: 0x14226D0 Offset: 0x14226D0 VA: 0x14226D0
	public static void SetCommon(UISprite sprite) { }

	// RVA: 0x142276C Offset: 0x142276C VA: 0x142276C
	public static bool SetItem(UISprite sprite, int itemImageId) { }

	// RVA: 0x1422A10 Offset: 0x1422A10 VA: 0x1422A10
	public static bool SetCoin(UISprite sprite, int coinImageId) { }

	// RVA: 0x1422CB4 Offset: 0x1422CB4 VA: 0x1422CB4
	public static bool SetEquipItem(UISprite sprite, int equipItemImageId) { }

	// RVA: 0x1422FBC Offset: 0x1422FBC VA: 0x1422FBC
	public static bool SetClassIcon(UISprite sprite, int iconImageId, int frameType) { }

	// RVA: 0x1423320 Offset: 0x1423320 VA: 0x1423320
	public static bool SetClassChart(UISprite sprite, string spriteName) { }

	// RVA: 0x1423394 Offset: 0x1423394 VA: 0x1423394
	public static bool SetClassTextIcon(UISprite sprite, int iconImageId, int frameType) { }

	// RVA: 0x14236DC Offset: 0x14236DC VA: 0x14236DC
	public static bool SetGradeIcon(UISprite sprite, string spriteName) { }

	// RVA: 0x1423954 Offset: 0x1423954 VA: 0x1423954
	public static bool SetGradeIcon(UISprite sprite, string spriteName, UIAtlas baseAtlas) { }

	// RVA: 0x14239D0 Offset: 0x14239D0 VA: 0x14239D0
	public static bool SetGradeBase(UISprite sprite, string spriteName, UIAtlas baseAtlas) { }

	// RVA: 0x1423C34 Offset: 0x1423C34 VA: 0x1423C34
	public static bool SetSkillIcon(UISprite sprite, int skillId) { }

	// RVA: 0x1423F80 Offset: 0x1423F80 VA: 0x1423F80
	public static bool SetHideSkillIcon(UISprite sprite) { }

	// RVA: 0x1423FE8 Offset: 0x1423FE8 VA: 0x1423FE8
	public static bool SetSkillIconSpecifyIconId(UISprite sprite, int iconId) { }

	// RVA: 0x142405C Offset: 0x142405C VA: 0x142405C
	public static bool SetMark(UISprite sprite, string markName) { }

	// RVA: 0x1424258 Offset: 0x1424258 VA: 0x1424258
	public static bool SetEquipFace(UISprite sprite, int svtId) { }

	// RVA: 0x14245A0 Offset: 0x14245A0 VA: 0x14245A0
	public static bool SetFaceImage(UISprite sprite, int svtId, int imageLimitCount) { }

	// RVA: 0x1424D58 Offset: 0x1424D58 VA: 0x1424D58
	public static bool SetFace(UISprite sprite, int svtId, int limitCount) { }

	// RVA: 0x1424E18 Offset: 0x1424E18 VA: 0x1424E18
	public static bool SetFace(UISprite sprite, int svtId) { }

	// RVA: 0x1424E90 Offset: 0x1424E90 VA: 0x1424E90
	public static bool SetNoMountFace(UISprite sprite) { }

	// RVA: 0x1424FA8 Offset: 0x1424FA8 VA: 0x1424FA8
	public static bool SetHideFace(UISprite sprite) { }

	// RVA: 0x14251E0 Offset: 0x14251E0 VA: 0x14251E0
	public static bool SetDataLostFace(UISprite sprite) { }

	// RVA: 0x1425418 Offset: 0x1425418 VA: 0x1425418
	public static bool SetNotOpenFace(UISprite sprite) { }

	// RVA: 0x1425708 Offset: 0x1425708 VA: 0x1425708
	public static bool SetCommandCodeImage(UISprite sprite, int commandCodeId) { }

	// RVA: 0x14259C4 Offset: 0x14259C4 VA: 0x14259C4
	public static bool SetCommandCodeIcon(UISprite sprite, int commandCodeId) { }

	// RVA: 0x1425A38 Offset: 0x1425A38 VA: 0x1425A38
	public static bool SetCommandCodeMiniImage(UISprite sprite, int commandCodeId) { }

