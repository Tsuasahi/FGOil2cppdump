	public static float Func(float from, float to, float t, Easing.TYPE type = 0) { }
}

// Namespace: 
public enum Easing.TYPE // TypeDefIndex: 11004
{
	// Fields
	public int value__; // 0x0
	public const Easing.TYPE LINER = 0;
	public const Easing.TYPE QUADRATIC_IN = 1;
	public const Easing.TYPE QUADRATIC_OUT = 2;
	public const Easing.TYPE QUADRATIC_IN_OUT = 3;
	public const Easing.TYPE CUBIC_IN = 4;
	public const Easing.TYPE CUBIC_OUT = 5;
	public const Easing.TYPE CUBIC_IN_OUT = 6;
	public const Easing.TYPE QUARTIC_IN = 7;
	public const Easing.TYPE QUARTIC_OUT = 8;
	public const Easing.TYPE QUARTIC_IN_OUT = 9;
	public const Easing.TYPE QUINTIC_IN = 10;
	public const Easing.TYPE QUINTIC_OUT = 11;
	public const Easing.TYPE QUINTIC_IN_OUT = 12;
	public const Easing.TYPE SINUSOIDAL_IN = 13;
	public const Easing.TYPE SINUSOIDAL_OUT = 14;
	public const Easing.TYPE SINUSOIDAL_IN_OUT = 15;
	public const Easing.TYPE EXPONENTIAL_IN = 16;
	public const Easing.TYPE EXPONENTIAL_OUT = 17;
	public const Easing.TYPE EXPONENTIAL_IN_OUT = 18;
	public const Easing.TYPE CIRCULAR_IN = 19;
	public const Easing.TYPE CIRCULAR_OUT = 20;
	public const Easing.TYPE CIRCULAR_IN_OUT = 21;
}

// Namespace: 
public class EasingObject : MonoBehaviour // TypeDefIndex: 11005
{
	// Fields
	private bool mIsMoving; // 0x18
	private float mFrom; // 0x1C
	private float mTo; // 0x20
	private float mNow; // 0x24
	private float mStartTime; // 0x28
	private float mTime; // 0x2C
	private float mDelay; // 0x30
	private Action mProcessAct; // 0x38
	private Action mEndAct; // 0x40
	private bool mIsPause; // 0x48
	private float mPauseStartTime; // 0x4C
	private Easing.TYPE mEasingType; // 0x50
	private bool mIsSkip; // 0x54

	// Properties
	public bool IsMoving { get; }
	public bool IsPause { get; }

	// Methods

	// RVA: 0x1CC7CBC Offset: 0x1CC7CBC VA: 0x1CC7CBC
	public void .ctor() { }

	// RVA: 0x1CC7CC4 Offset: 0x1CC7CC4 VA: 0x1CC7CC4
	public bool get_IsMoving() { }

	// RVA: 0x1CC7CCC Offset: 0x1CC7CCC VA: 0x1CC7CCC
	public bool get_IsPause() { }

	// RVA: 0x1CC7CD4 Offset: 0x1CC7CD4 VA: 0x1CC7CD4
	private void Awake() { }

	// RVA: 0x1CC7CE0 Offset: 0x1CC7CE0 VA: 0x1CC7CE0
	private void Update() { }

	// RVA: 0x1CC4C8C Offset: 0x1CC4C8C VA: 0x1CC4C8C
	public void Play(float sec, Action procAct, Action endAct, float delay = 0, Easing.TYPE easingType = 0) { }

	// RVA: 0x1CC5A58 Offset: 0x1CC5A58 VA: 0x1CC5A58
	public void Play(float from, float to, float sec, Action procAct, Action endAct, float delay = 0, Easing.TYPE easingType = 0) { }

	// RVA: 0x1CC5140 Offset: 0x1CC5140 VA: 0x1CC5140
	public float Now() { }

	// RVA: 0x1CC7E0C Offset: 0x1CC7E0C VA: 0x1CC7E0C
	public void Pause() { }

	// RVA: 0x1CC7E44 Offset: 0x1CC7E44 VA: 0x1CC7E44
	public void Resume() { }

	// RVA: 0x1CC7E88 Offset: 0x1CC7E88 VA: 0x1CC7E88
	public void Stop() { }

	// RVA: 0x1CC7E90 Offset: 0x1CC7E90 VA: 0x1CC7E90
	public void SetPause(bool isPause) { }

	// RVA: 0x1CC7EF4 Offset: 0x1CC7EF4 VA: 0x1CC7EF4
	public void Skip() { }
}

// Namespace: 
[ExtensionAttribute] // RVA: 0xC96B1C Offset: 0xC96B1C VA: 0xC96B1C
public static class GameObjectExtensions // TypeDefIndex: 11006
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCE8A10 Offset: 0xCE8A10 VA: 0xCE8A10
	private static Func<Transform, GameObject> <>f__am$cache0; // 0x0

	// Methods

	[ExtensionAttribute] // RVA: 0xD403EC Offset: 0xD403EC VA: 0xD403EC
	// RVA: -1 Offset: -1
	public static T SafeGetComponent<T>(GameObject self) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218E504 Offset: 0x218E504 VA: 0x218E504
	|-GameObjectExtensions.SafeGetComponent<EasingObject>
	|-GameObjectExtensions.SafeGetComponent<EventPointGaugeChangeEffectAction>
	|-GameObjectExtensions.SafeGetComponent<EventPointGaugeEffectAction>
	|-GameObjectExtensions.SafeGetComponent<ItemIconComponent>
	|-GameObjectExtensions.SafeGetComponent<MapButtonPrefab>
	|-GameObjectExtensions.SafeGetComponent<MoveObject>
	|-GameObjectExtensions.SafeGetComponent<QuestRewardBoxAction>
	|-GameObjectExtensions.SafeGetComponent<QuestRewardCostumeAction>
	|-GameObjectExtensions.SafeGetComponent<QuestRewardHarvestAction>
	|-GameObjectExtensions.SafeGetComponent<QuestRewardItemAction>
	|-GameObjectExtensions.SafeGetComponent<QuestRewardOrderGradeAction>
	|-GameObjectExtensions.SafeGetComponent<QuestRewardTokenAction>
	|-GameObjectExtensions.SafeGetComponent<SceneRootComponent>
	|-GameObjectExtensions.SafeGetComponent<ServantRewardAction>
	|-GameObjectExtensions.SafeGetComponent<SlideFadeObject>
	|-GameObjectExtensions.SafeGetComponent<SubmarineScanVoiceComponent>
	|-GameObjectExtensions.SafeGetComponent<SubmarineScannerComponent>
	|-GameObjectExtensions.SafeGetComponent<object>
	|-GameObjectExtensions.SafeGetComponent<TweenAlpha>
	|-GameObjectExtensions.SafeGetComponent<UIButton>
	|-GameObjectExtensions.SafeGetComponent<UIScaleSame>
	|-GameObjectExtensions.SafeGetComponent<UISprite>
	|-GameObjectExtensions.SafeGetComponent<BoxCollider>
	*/

	[ExtensionAttribute] // RVA: 0xD403FC Offset: 0xD403FC VA: 0xD403FC
	// RVA: 0x1E8D520 Offset: 0x1E8D520 VA: 0x1E8D520
	public static GameObject[] GetChildren(GameObject self, bool includeInactive = False) { }

	[ExtensionAttribute] // RVA: 0xD4040C Offset: 0xD4040C VA: 0xD4040C
	// RVA: -1 Offset: -1
	public static T[] GetComponentsInChildrenWithoutSelf<T>(GameObject self) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B80D24 Offset: 0x2B80D24 VA: 0x2B80D24
	|-GameObjectExtensions.GetComponentsInChildrenWithoutSelf<object>
	*/

	[ExtensionAttribute] // RVA: 0xD4041C Offset: 0xD4041C VA: 0xD4041C
	// RVA: -1 Offset: -1
	public static T[] GetComponentsInChildrenWithoutSelfWithLog<T>(GameObject self) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B80E30 Offset: 0x2B80E30 VA: 0x2B80E30
	|-GameObjectExtensions.GetComponentsInChildrenWithoutSelfWithLog<object>
	*/

	[ExtensionAttribute] // RVA: 0xD4042C Offset: 0xD4042C VA: 0xD4042C
	// RVA: -1 Offset: -1
	public static T GetComponentWithLog<T>(GameObject self) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218E4CC Offset: 0x218E4CC VA: 0x218E4CC
	|-GameObjectExtensions.GetComponentWithLog<object>
	*/

	[ExtensionAttribute] // RVA: 0xD4043C Offset: 0xD4043C VA: 0xD4043C
	// RVA: -1 Offset: -1
	public static T[] GetComponentsWithLog<T>(GameObject self) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B80E40 Offset: 0x2B80E40 VA: 0x2B80E40
	|-GameObjectExtensions.GetComponentsWithLog<object>
	*/

	[ExtensionAttribute] // RVA: 0xD4044C Offset: 0xD4044C VA: 0xD4044C
	// RVA: -1 Offset: -1
	public static T GetComponentInChildrenWithLog<T>(GameObject self) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218E494 Offset: 0x218E494 VA: 0x218E494
	|-GameObjectExtensions.GetComponentInChildrenWithLog<object>
	*/

	[ExtensionAttribute] // RVA: 0xD4045C Offset: 0xD4045C VA: 0xD4045C
	// RVA: -1 Offset: -1
	public static T[] GetComponentsInChildrenWithLog<T>(GameObject self) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B80CA4 Offset: 0x2B80CA4 VA: 0x2B80CA4
	|-GameObjectExtensions.GetComponentsInChildrenWithLog<object>
	*/

	[ExtensionAttribute] // RVA: 0xD4046C Offset: 0xD4046C VA: 0xD4046C
	// RVA: -1 Offset: -1
	public static T[] GetComponentsInChildrenWithLog<T>(GameObject self, bool includeInactive) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B80CDC Offset: 0x2B80CDC VA: 0x2B80CDC
	|-GameObjectExtensions.GetComponentsInChildrenWithLog<object>
	*/

	[ExtensionAttribute] // RVA: 0xD4047C Offset: 0xD4047C VA: 0xD4047C
	// RVA: -1 Offset: -1
	public static void RemoveComponent<T>(GameObject self) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D0DA8 Offset: 0x21D0DA8 VA: 0x21D0DA8
	|-GameObjectExtensions.RemoveComponent<object>
	|-GameObjectExtensions.RemoveComponent<UIRoot>
	|-GameObjectExtensions.RemoveComponent<UIRootReScale>
	|-GameObjectExtensions.RemoveComponent<Collider>
	*/

	[ExtensionAttribute] // RVA: 0xD4048C Offset: 0xD4048C VA: 0xD4048C
	// RVA: -1 Offset: -1
	public static void RemoveComponents<T>(GameObject self) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D0E44 Offset: 0x21D0E44 VA: 0x21D0E44
	|-GameObjectExtensions.RemoveComponents<EventMapManagerBase>
	|-GameObjectExtensions.RemoveComponents<object>
	*/

	[ExtensionAttribute] // RVA: 0xD4049C Offset: 0xD4049C VA: 0xD4049C
	// RVA: -1 Offset: -1
	public static bool HasComponent<T>(GameObject self) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x26A0F24 Offset: 0x26A0F24 VA: 0x26A0F24
	|-GameObjectExtensions.HasComponent<object>
	*/

	[ExtensionAttribute] // RVA: 0xD404AC Offset: 0xD404AC VA: 0xD404AC
	// RVA: 0x1E8D6B4 Offset: 0x1E8D6B4 VA: 0x1E8D6B4
	public static Transform Find(GameObject self, string name) { }

	[ExtensionAttribute] // RVA: 0xD404BC Offset: 0xD404BC VA: 0xD404BC
	// RVA: 0x1E8D700 Offset: 0x1E8D700 VA: 0x1E8D700
	public static Transform FindWithLog(GameObject self, string name) { }

	[ExtensionAttribute] // RVA: 0xD404CC Offset: 0xD404CC VA: 0xD404CC
	// RVA: 0x1E8D74C Offset: 0x1E8D74C VA: 0x1E8D74C
	public static GameObject FindGameObject(GameObject self, string name) { }

	[ExtensionAttribute] // RVA: 0xD404DC Offset: 0xD404DC VA: 0xD404DC
	// RVA: 0x1E8D7B0 Offset: 0x1E8D7B0 VA: 0x1E8D7B0
	public static GameObject FindGameObjectWithLog(GameObject self, string name) { }

	[ExtensionAttribute] // RVA: 0xD404EC Offset: 0xD404EC VA: 0xD404EC
	// RVA: -1 Offset: -1
	public static T FindComponentWithLog<T>(GameObject self, string name) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218E3C0 Offset: 0x218E3C0 VA: 0x218E3C0
	|-GameObjectExtensions.FindComponentWithLog<object>
	*/

	[ExtensionAttribute] // RVA: 0xD404FC Offset: 0xD404FC VA: 0xD404FC
	// RVA: -1 Offset: -1
	public static T FindComponent<T>(GameObject self, string name) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218E2D0 Offset: 0x218E2D0 VA: 0x218E2D0
	|-GameObjectExtensions.FindComponent<ServantStatusListViewItemDrawButton>
	|-GameObjectExtensions.FindComponent<object>
	*/

	[ExtensionAttribute] // RVA: 0xD4050C Offset: 0xD4050C VA: 0xD4050C
	// RVA: 0x1E8D894 Offset: 0x1E8D894 VA: 0x1E8D894
	public static GameObject FindDeep(GameObject self, string name, bool includeInactive = False) { }

	[ExtensionAttribute] // RVA: 0xD4051C Offset: 0xD4051C VA: 0xD4051C
	// RVA: 0x1E8D9D8 Offset: 0x1E8D9D8 VA: 0x1E8D9D8
	public static GameObject FindDeepWithLog(GameObject self, string name, bool includeInactive = False) { }

	[ExtensionAttribute] // RVA: 0xD4052C Offset: 0xD4052C VA: 0xD4052C
	// RVA: 0x1E8D9E0 Offset: 0x1E8D9E0 VA: 0x1E8D9E0
	public static void ResetPosition(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD4053C Offset: 0xD4053C VA: 0xD4053C
	// RVA: 0x1E8DAA4 Offset: 0x1E8DAA4 VA: 0x1E8DAA4
	public static Vector3 GetPosition(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD4054C Offset: 0xD4054C VA: 0xD4054C
	// RVA: 0x1E8DAE8 Offset: 0x1E8DAE8 VA: 0x1E8DAE8
	public static float GetPositionX(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD4055C Offset: 0xD4055C VA: 0xD4055C
	// RVA: 0x1E8DB2C Offset: 0x1E8DB2C VA: 0x1E8DB2C
	public static float GetPositionY(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD4056C Offset: 0xD4056C VA: 0xD4056C
	// RVA: 0x1E8DB78 Offset: 0x1E8DB78 VA: 0x1E8DB78
	public static float GetPositionZ(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD4057C Offset: 0xD4057C VA: 0xD4057C
	// RVA: 0x1E8DBC4 Offset: 0x1E8DBC4 VA: 0x1E8DBC4
	public static void SetPositionX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xD4058C Offset: 0xD4058C VA: 0xD4058C
	// RVA: 0x1E8DCC4 Offset: 0x1E8DCC4 VA: 0x1E8DCC4
	public static void SetPositionY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xD4059C Offset: 0xD4059C VA: 0xD4059C
	// RVA: 0x1E8DDC4 Offset: 0x1E8DDC4 VA: 0x1E8DDC4
	public static void SetPositionZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xD405AC Offset: 0xD405AC VA: 0xD405AC
	// RVA: 0x1E8DEC4 Offset: 0x1E8DEC4 VA: 0x1E8DEC4
	public static void SetPosition(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xD405BC Offset: 0xD405BC VA: 0xD405BC
	// RVA: 0x1E8DF30 Offset: 0x1E8DF30 VA: 0x1E8DF30
	public static void SetPosition(GameObject self, Vector2 v) { }

	[ExtensionAttribute] // RVA: 0xD405CC Offset: 0xD405CC VA: 0xD405CC
	// RVA: 0x1E8DFF8 Offset: 0x1E8DFF8 VA: 0x1E8DFF8
	public static void SetPosition(GameObject self, float x, float y) { }

	[ExtensionAttribute] // RVA: 0xD405DC Offset: 0xD405DC VA: 0xD405DC
	// RVA: 0x1E8E0C0 Offset: 0x1E8E0C0 VA: 0x1E8E0C0
	public static void SetPosition(GameObject self, float x, float y, float z) { }

	[ExtensionAttribute] // RVA: 0xD405EC Offset: 0xD405EC VA: 0xD405EC
	// RVA: 0x1E8E158 Offset: 0x1E8E158 VA: 0x1E8E158
	public static void AddPositionX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xD405FC Offset: 0xD405FC VA: 0xD405FC
	// RVA: 0x1E8E294 Offset: 0x1E8E294 VA: 0x1E8E294
	public static void AddPositionY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xD4060C Offset: 0xD4060C VA: 0xD4060C
	// RVA: 0x1E8E3D0 Offset: 0x1E8E3D0 VA: 0x1E8E3D0
	public static void AddPositionZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xD4061C Offset: 0xD4061C VA: 0xD4061C
	// RVA: 0x1E8E510 Offset: 0x1E8E510 VA: 0x1E8E510
	public static void AddPosition(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xD4062C Offset: 0xD4062C VA: 0xD4062C
	// RVA: 0x1E8E61C Offset: 0x1E8E61C VA: 0x1E8E61C
	public static void AddPosition(GameObject self, Vector2 v) { }

	[ExtensionAttribute] // RVA: 0xD4063C Offset: 0xD4063C VA: 0xD4063C
	// RVA: 0x1E8E75C Offset: 0x1E8E75C VA: 0x1E8E75C
	public static void AddPosition(GameObject self, float x, float y) { }

	[ExtensionAttribute] // RVA: 0xD4064C Offset: 0xD4064C VA: 0xD4064C
	// RVA: 0x1E8E89C Offset: 0x1E8E89C VA: 0x1E8E89C
	public static void AddPosition(GameObject self, float x, float y, float z) { }

	[ExtensionAttribute] // RVA: 0xD4065C Offset: 0xD4065C VA: 0xD4065C
	// RVA: 0x1E8E9EC Offset: 0x1E8E9EC VA: 0x1E8E9EC
	public static void ResetLocalPosition(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD4066C Offset: 0xD4066C VA: 0xD4066C
	// RVA: 0x1E8EAB0 Offset: 0x1E8EAB0 VA: 0x1E8EAB0
	public static Vector3 GetLocalPosition(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD4067C Offset: 0xD4067C VA: 0xD4067C
	// RVA: 0x1E8EAF4 Offset: 0x1E8EAF4 VA: 0x1E8EAF4
	public static float GetLocalPositionX(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD4068C Offset: 0xD4068C VA: 0xD4068C
	// RVA: 0x1E8EB38 Offset: 0x1E8EB38 VA: 0x1E8EB38
	public static float GetLocalPositionY(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD4069C Offset: 0xD4069C VA: 0xD4069C
	// RVA: 0x1E8EB84 Offset: 0x1E8EB84 VA: 0x1E8EB84
	public static float GetLocalPositionZ(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD406AC Offset: 0xD406AC VA: 0xD406AC
	// RVA: 0x1E8EBD0 Offset: 0x1E8EBD0 VA: 0x1E8EBD0
	public static void SetLocalPositionX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xD406BC Offset: 0xD406BC VA: 0xD406BC
	// RVA: 0x1E8ECD0 Offset: 0x1E8ECD0 VA: 0x1E8ECD0
	public static void SetLocalPositionY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xD406CC Offset: 0xD406CC VA: 0xD406CC
	// RVA: 0x1E8EDD0 Offset: 0x1E8EDD0 VA: 0x1E8EDD0
	public static void SetLocalPositionZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xD406DC Offset: 0xD406DC VA: 0xD406DC
	// RVA: 0x1E8EED0 Offset: 0x1E8EED0 VA: 0x1E8EED0
	public static void SetLocalPosition(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xD406EC Offset: 0xD406EC VA: 0xD406EC
	// RVA: 0x1E8EF3C Offset: 0x1E8EF3C VA: 0x1E8EF3C
	public static void SetLocalPosition(GameObject self, Vector2 v) { }

	[ExtensionAttribute] // RVA: 0xD406FC Offset: 0xD406FC VA: 0xD406FC
	// RVA: 0x1E8F004 Offset: 0x1E8F004 VA: 0x1E8F004
	public static void SetLocalPosition(GameObject self, float x, float y) { }

	[ExtensionAttribute] // RVA: 0xD4070C Offset: 0xD4070C VA: 0xD4070C
	// RVA: 0x1E8F0CC Offset: 0x1E8F0CC VA: 0x1E8F0CC
	public static void SetLocalPosition(GameObject self, float x, float y, float z) { }

	[ExtensionAttribute] // RVA: 0xD4071C Offset: 0xD4071C VA: 0xD4071C
	// RVA: 0x1E8F164 Offset: 0x1E8F164 VA: 0x1E8F164
	public static void AddLocalPositionX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xD4072C Offset: 0xD4072C VA: 0xD4072C
	// RVA: 0x1E8F2A0 Offset: 0x1E8F2A0 VA: 0x1E8F2A0
	public static void AddLocalPositionY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xD4073C Offset: 0xD4073C VA: 0xD4073C
	// RVA: 0x1E8F3DC Offset: 0x1E8F3DC VA: 0x1E8F3DC
	public static void AddLocalPositionZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xD4074C Offset: 0xD4074C VA: 0xD4074C
	// RVA: 0x1E8F51C Offset: 0x1E8F51C VA: 0x1E8F51C
	public static void AddLocalPosition(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xD4075C Offset: 0xD4075C VA: 0xD4075C
	// RVA: 0x1E8F628 Offset: 0x1E8F628 VA: 0x1E8F628
	public static void AddLocalPosition(GameObject self, Vector2 v) { }

	[ExtensionAttribute] // RVA: 0xD4076C Offset: 0xD4076C VA: 0xD4076C
	// RVA: 0x1E8F768 Offset: 0x1E8F768 VA: 0x1E8F768
	public static void AddLocalPosition(GameObject self, float x, float y) { }

	[ExtensionAttribute] // RVA: 0xD4077C Offset: 0xD4077C VA: 0xD4077C
	// RVA: 0x1E8F8A8 Offset: 0x1E8F8A8 VA: 0x1E8F8A8
	public static void AddLocalPosition(GameObject self, float x, float y, float z) { }

	[ExtensionAttribute] // RVA: 0xD4078C Offset: 0xD4078C VA: 0xD4078C
	// RVA: 0x1E8F9F8 Offset: 0x1E8F9F8 VA: 0x1E8F9F8
	public static void ResetLocalScale(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD4079C Offset: 0xD4079C VA: 0xD4079C
	// RVA: 0x1E8FABC Offset: 0x1E8FABC VA: 0x1E8FABC
	public static Vector3 GetLocalScale(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD407AC Offset: 0xD407AC VA: 0xD407AC
	// RVA: 0x1E8FB00 Offset: 0x1E8FB00 VA: 0x1E8FB00
	public static float GetLocalScaleX(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD407BC Offset: 0xD407BC VA: 0xD407BC
	// RVA: 0x1E8FB44 Offset: 0x1E8FB44 VA: 0x1E8FB44
	public static float GetLocalScaleY(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD407CC Offset: 0xD407CC VA: 0xD407CC
	// RVA: 0x1E8FB90 Offset: 0x1E8FB90 VA: 0x1E8FB90
	public static float GetLocalScaleZ(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD407DC Offset: 0xD407DC VA: 0xD407DC
	// RVA: 0x1E8FBDC Offset: 0x1E8FBDC VA: 0x1E8FBDC
	public static void SetLocalScaleX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xD407EC Offset: 0xD407EC VA: 0xD407EC
	// RVA: 0x1E8FCDC Offset: 0x1E8FCDC VA: 0x1E8FCDC
	public static void SetLocalScaleY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xD407FC Offset: 0xD407FC VA: 0xD407FC
	// RVA: 0x1E8FDDC Offset: 0x1E8FDDC VA: 0x1E8FDDC
	public static void SetLocalScaleZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xD4080C Offset: 0xD4080C VA: 0xD4080C
	// RVA: 0x1E8FEDC Offset: 0x1E8FEDC VA: 0x1E8FEDC
	public static void SetLocalScale(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xD4081C Offset: 0xD4081C VA: 0xD4081C
	// RVA: 0x1E8FF48 Offset: 0x1E8FF48 VA: 0x1E8FF48
	public static void SetLocalScale(GameObject self, Vector2 v) { }

	[ExtensionAttribute] // RVA: 0xD4082C Offset: 0xD4082C VA: 0xD4082C
	// RVA: 0x1E90010 Offset: 0x1E90010 VA: 0x1E90010
	public static void SetLocalScale(GameObject self, float f) { }

	[ExtensionAttribute] // RVA: 0xD4083C Offset: 0xD4083C VA: 0xD4083C
	// RVA: 0x1E90098 Offset: 0x1E90098 VA: 0x1E90098
	public static void SetLocalScale(GameObject self, float x, float y) { }

	[ExtensionAttribute] // RVA: 0xD4084C Offset: 0xD4084C VA: 0xD4084C
	// RVA: 0x1E90160 Offset: 0x1E90160 VA: 0x1E90160
	public static void SetLocalScale(GameObject self, float x, float y, float z) { }

	[ExtensionAttribute] // RVA: 0xD4085C Offset: 0xD4085C VA: 0xD4085C
	// RVA: 0x1E901F8 Offset: 0x1E901F8 VA: 0x1E901F8
	public static void AddLocalScaleX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xD4086C Offset: 0xD4086C VA: 0xD4086C
	// RVA: 0x1E90334 Offset: 0x1E90334 VA: 0x1E90334
	public static void AddLocalScaleY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xD4087C Offset: 0xD4087C VA: 0xD4087C
	// RVA: 0x1E90470 Offset: 0x1E90470 VA: 0x1E90470
	public static void AddLocalScaleZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xD4088C Offset: 0xD4088C VA: 0xD4088C
	// RVA: 0x1E905B0 Offset: 0x1E905B0 VA: 0x1E905B0
	public static void AddLocalScale(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xD4089C Offset: 0xD4089C VA: 0xD4089C
	// RVA: 0x1E906BC Offset: 0x1E906BC VA: 0x1E906BC
	public static void AddLocalScale(GameObject self, Vector2 v) { }

	[ExtensionAttribute] // RVA: 0xD408AC Offset: 0xD408AC VA: 0xD408AC
	// RVA: 0x1E907FC Offset: 0x1E907FC VA: 0x1E907FC
	public static void AddLocalScale(GameObject self, float f) { }

	[ExtensionAttribute] // RVA: 0xD408BC Offset: 0xD408BC VA: 0xD408BC
	// RVA: 0x1E9093C Offset: 0x1E9093C VA: 0x1E9093C
	public static void AddLocalScale(GameObject self, float x, float y) { }

	[ExtensionAttribute] // RVA: 0xD408CC Offset: 0xD408CC VA: 0xD408CC
	// RVA: 0x1E90A7C Offset: 0x1E90A7C VA: 0x1E90A7C
	public static void AddLocalScale(GameObject self, float x, float y, float z) { }

	[ExtensionAttribute] // RVA: 0xD408DC Offset: 0xD408DC VA: 0xD408DC
	// RVA: 0x1E90BCC Offset: 0x1E90BCC VA: 0x1E90BCC
	public static void ResetLocalRotation(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD408EC Offset: 0xD408EC VA: 0xD408EC
	// RVA: 0x1E90C98 Offset: 0x1E90C98 VA: 0x1E90C98
	public static void ResetEulerAngles(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD408FC Offset: 0xD408FC VA: 0xD408FC
	// RVA: 0x1E90D5C Offset: 0x1E90D5C VA: 0x1E90D5C
	public static Vector3 GetEulerAngles(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD4090C Offset: 0xD4090C VA: 0xD4090C
	// RVA: 0x1E90DA0 Offset: 0x1E90DA0 VA: 0x1E90DA0
	public static float GetEulerAngleX(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD4091C Offset: 0xD4091C VA: 0xD4091C
	// RVA: 0x1E90DE4 Offset: 0x1E90DE4 VA: 0x1E90DE4
	public static float GetEulerAngleY(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD4092C Offset: 0xD4092C VA: 0xD4092C
	// RVA: 0x1E90E30 Offset: 0x1E90E30 VA: 0x1E90E30
	public static float GetEulerAngleZ(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD4093C Offset: 0xD4093C VA: 0xD4093C
	// RVA: 0x1E90E7C Offset: 0x1E90E7C VA: 0x1E90E7C
	public static void SetEulerAngles(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xD4094C Offset: 0xD4094C VA: 0xD4094C
	// RVA: 0x1E90EE8 Offset: 0x1E90EE8 VA: 0x1E90EE8
	public static void SetEulerAngleX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xD4095C Offset: 0xD4095C VA: 0xD4095C
	// RVA: 0x1E90FE8 Offset: 0x1E90FE8 VA: 0x1E90FE8
	public static void SetEulerAngleY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xD4096C Offset: 0xD4096C VA: 0xD4096C
	// RVA: 0x1E910E8 Offset: 0x1E910E8 VA: 0x1E910E8
	public static void SetEulerAngleZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xD4097C Offset: 0xD4097C VA: 0xD4097C
	// RVA: 0x1E911E8 Offset: 0x1E911E8 VA: 0x1E911E8
	public static void AddEulerAngleX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xD4098C Offset: 0xD4098C VA: 0xD4098C
	// RVA: 0x1E91248 Offset: 0x1E91248 VA: 0x1E91248
	public static void AddEulerAngleY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xD4099C Offset: 0xD4099C VA: 0xD4099C
	// RVA: 0x1E912A8 Offset: 0x1E912A8 VA: 0x1E912A8
	public static void AddEulerAngleZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xD409AC Offset: 0xD409AC VA: 0xD409AC
	// RVA: 0x1E91308 Offset: 0x1E91308 VA: 0x1E91308
	public static void ResetLocalEulerAngles(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD409BC Offset: 0xD409BC VA: 0xD409BC
	// RVA: 0x1E913CC Offset: 0x1E913CC VA: 0x1E913CC
	public static Vector3 GetLocalEulerAngles(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD409CC Offset: 0xD409CC VA: 0xD409CC
	// RVA: 0x1E91410 Offset: 0x1E91410 VA: 0x1E91410
	public static float GetLocalEulerAngleX(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD409DC Offset: 0xD409DC VA: 0xD409DC
	// RVA: 0x1E91454 Offset: 0x1E91454 VA: 0x1E91454
	public static float GetLocalEulerAngleY(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD409EC Offset: 0xD409EC VA: 0xD409EC
	// RVA: 0x1E914A0 Offset: 0x1E914A0 VA: 0x1E914A0
	public static float GetLocalEulerAngleZ(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD409FC Offset: 0xD409FC VA: 0xD409FC
	// RVA: 0x1E914EC Offset: 0x1E914EC VA: 0x1E914EC
	public static void SetLocalEulerAngle(GameObject self, Vector3 v) { }

	[ExtensionAttribute] // RVA: 0xD40A0C Offset: 0xD40A0C VA: 0xD40A0C
	// RVA: 0x1E91558 Offset: 0x1E91558 VA: 0x1E91558
	public static void SetLocalEulerAngleX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xD40A1C Offset: 0xD40A1C VA: 0xD40A1C
	// RVA: 0x1E91658 Offset: 0x1E91658 VA: 0x1E91658
	public static void SetLocalEulerAngleY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xD40A2C Offset: 0xD40A2C VA: 0xD40A2C
	// RVA: 0x1E91758 Offset: 0x1E91758 VA: 0x1E91758
	public static void SetLocalEulerAngleZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xD40A3C Offset: 0xD40A3C VA: 0xD40A3C
	// RVA: 0x1E91858 Offset: 0x1E91858 VA: 0x1E91858
	public static void AddLocalEulerAngleX(GameObject self, float x) { }

	[ExtensionAttribute] // RVA: 0xD40A4C Offset: 0xD40A4C VA: 0xD40A4C
	// RVA: 0x1E918B8 Offset: 0x1E918B8 VA: 0x1E918B8
	public static void AddLocalEulerAngleY(GameObject self, float y) { }

	[ExtensionAttribute] // RVA: 0xD40A5C Offset: 0xD40A5C VA: 0xD40A5C
	// RVA: 0x1E91918 Offset: 0x1E91918 VA: 0x1E91918
	public static void AddLocalEulerAngleZ(GameObject self, float z) { }

	[ExtensionAttribute] // RVA: 0xD40A6C Offset: 0xD40A6C VA: 0xD40A6C
	// RVA: 0x1E91978 Offset: 0x1E91978 VA: 0x1E91978
	public static bool HasParent(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD40A7C Offset: 0xD40A7C VA: 0xD40A7C
	// RVA: 0x1E91A1C Offset: 0x1E91A1C VA: 0x1E91A1C
	public static Transform GetParent(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD40A8C Offset: 0xD40A8C VA: 0xD40A8C
	// RVA: 0x1E91A60 Offset: 0x1E91A60 VA: 0x1E91A60
	public static void SetParent(GameObject self, Component parent) { }

	[ExtensionAttribute] // RVA: 0xD40A9C Offset: 0xD40A9C VA: 0xD40A9C
	// RVA: 0x1E91ACC Offset: 0x1E91ACC VA: 0x1E91ACC
	public static void SetParent(GameObject self, GameObject parent) { }

	[ExtensionAttribute] // RVA: 0xD40AAC Offset: 0xD40AAC VA: 0xD40AAC
	// RVA: 0x1E91B38 Offset: 0x1E91B38 VA: 0x1E91B38
	public static void SafeSetParent(GameObject self, Component parent) { }

	[ExtensionAttribute] // RVA: 0xD40ABC Offset: 0xD40ABC VA: 0xD40ABC
	// RVA: 0x1E91B78 Offset: 0x1E91B78 VA: 0x1E91B78
	public static void SafeSetParent(GameObject self, GameObject parent) { }

	[ExtensionAttribute] // RVA: 0xD40ACC Offset: 0xD40ACC VA: 0xD40ACC
	// RVA: 0x1E91D4C Offset: 0x1E91D4C VA: 0x1E91D4C
	public static void LookAt(GameObject self, GameObject target) { }

	[ExtensionAttribute] // RVA: 0xD40ADC Offset: 0xD40ADC VA: 0xD40ADC
	// RVA: 0x1E91DB8 Offset: 0x1E91DB8 VA: 0x1E91DB8
	public static void LookAt(GameObject self, Transform target) { }

	[ExtensionAttribute] // RVA: 0xD40AEC Offset: 0xD40AEC VA: 0xD40AEC
	// RVA: 0x1E91E04 Offset: 0x1E91E04 VA: 0x1E91E04
	public static void LookAt(GameObject self, Vector3 worldPosition) { }

	[ExtensionAttribute] // RVA: 0xD40AFC Offset: 0xD40AFC VA: 0xD40AFC
	// RVA: 0x1E91E70 Offset: 0x1E91E70 VA: 0x1E91E70
	public static void LookAt(GameObject self, GameObject target, Vector3 worldUp) { }

	[ExtensionAttribute] // RVA: 0xD40B0C Offset: 0xD40B0C VA: 0xD40B0C
	// RVA: 0x1E91F04 Offset: 0x1E91F04 VA: 0x1E91F04
	public static void LookAt(GameObject self, Transform target, Vector3 worldUp) { }

	[ExtensionAttribute] // RVA: 0xD40B1C Offset: 0xD40B1C VA: 0xD40B1C
	// RVA: 0x1E91F78 Offset: 0x1E91F78 VA: 0x1E91F78
	public static void LookAt(GameObject self, Vector3 worldPosition, Vector3 worldUp) { }

	[ExtensionAttribute] // RVA: 0xD40B2C Offset: 0xD40B2C VA: 0xD40B2C
	// RVA: 0x1E92004 Offset: 0x1E92004 VA: 0x1E92004
	public static bool HasChild(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD40B3C Offset: 0xD40B3C VA: 0xD40B3C
	// RVA: 0x1E92054 Offset: 0x1E92054 VA: 0x1E92054
	public static Transform GetChild(GameObject self, int index) { }

	[ExtensionAttribute] // RVA: 0xD40B4C Offset: 0xD40B4C VA: 0xD40B4C
	// RVA: 0x1E920A0 Offset: 0x1E920A0 VA: 0x1E920A0
	public static GameObject GetRoot(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD40B5C Offset: 0xD40B5C VA: 0xD40B5C
	// RVA: 0x1E92170 Offset: 0x1E92170 VA: 0x1E92170
	public static void SetLayerRecursively(GameObject self, int layer) { }

	[ExtensionAttribute] // RVA: 0xD40B6C Offset: 0xD40B6C VA: 0xD40B6C
	// RVA: 0x1E92250 Offset: 0x1E92250 VA: 0x1E92250
	public static void ResetTransform(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD40B7C Offset: 0xD40B7C VA: 0xD40B7C
	// RVA: 0x1E9227C Offset: 0x1E9227C VA: 0x1E9227C
	public static bool IsNullOrInactive(GameObject self) { }

	[ExtensionAttribute] // RVA: 0xD40B8C Offset: 0xD40B8C VA: 0xD40B8C
	// RVA: 0x1E92334 Offset: 0x1E92334 VA: 0x1E92334
	public static bool IsNotNullOrInactive(GameObject self) { }

	[CompilerGeneratedAttribute] // RVA: 0xD40B9C Offset: 0xD40B9C VA: 0xD40B9C
	// RVA: 0x1E92350 Offset: 0x1E92350 VA: 0x1E92350
	private static GameObject <GetChildren>m__0(Transform c) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1A40 Offset: 0xCB1A40 VA: 0xCB1A40
private sealed class GameObjectExtensions.<GetChildren>c__AnonStorey0 // TypeDefIndex: 11007
{
	// Fields
	internal GameObject self; // 0x10

	// Methods

	// RVA: 0x20F8604 Offset: 0x20F8604 VA: 0x20F8604
	public void .ctor() { }

	// RVA: 0x20F860C Offset: 0x20F860C VA: 0x20F860C
	internal bool <>m__0(Transform c) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1A50 Offset: 0xCB1A50 VA: 0xCB1A50
private sealed class GameObjectExtensions.<GetComponentsInChildrenWithoutSelf>c__AnonStorey1<T> // TypeDefIndex: 11008
{
	// Fields
	internal GameObject self; // 0x0

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252D61C Offset: 0x252D61C VA: 0x252D61C
	|-GameObjectExtensions.<GetComponentsInChildrenWithoutSelf>c__AnonStorey1<object>..ctor
	*/

	// RVA: -1 Offset: -1
	internal bool <>m__0(T c) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252D648 Offset: 0x252D648 VA: 0x252D648
	|-GameObjectExtensions.<GetComponentsInChildrenWithoutSelf>c__AnonStorey1<object>.<>m__0
	*/
}

// Namespace: 
public class MoveObject : MonoBehaviour // TypeDefIndex: 11009
{
	// Fields
	private bool mIsMoving; // 0x18
	private Vector3 mFrom; // 0x1C
	private Vector3 mTo; // 0x28
	private Vector3 mNow; // 0x34
	private float mStartTime; // 0x40
	private float mTime; // 0x44
	private float mDelay; // 0x48
	private Action mProcessAct; // 0x50
	private Action mEndAct; // 0x58
	private bool mIsPause; // 0x60
	private float mPauseStartTime; // 0x64
	private Easing.TYPE mEasingType; // 0x68
	private bool mIsSkip; // 0x6C

	// Properties
	public bool IsMoving { get; }

	// Methods

	// RVA: 0x16F0618 Offset: 0x16F0618 VA: 0x16F0618
	public void .ctor() { }

	// RVA: 0x16F0620 Offset: 0x16F0620 VA: 0x16F0620
	public bool get_IsMoving() { }

	// RVA: 0x16F0628 Offset: 0x16F0628 VA: 0x16F0628
	private void Awake() { }

	// RVA: 0x16F0634 Offset: 0x16F0634 VA: 0x16F0634
	private void Update() { }

	// RVA: 0x16F0770 Offset: 0x16F0770 VA: 0x16F0770
	public void Play(Vector3 from, Vector3 to, float sec, Action procAct, Action endAct, float delay = 0, Easing.TYPE easingType = 0) { }

	// RVA: 0x16F0828 Offset: 0x16F0828 VA: 0x16F0828
	public Vector3 Now() { }

	// RVA: 0x16F0834 Offset: 0x16F0834 VA: 0x16F0834
	public void Pause() { }

	// RVA: 0x16F086C Offset: 0x16F086C VA: 0x16F086C
	public void Resume() { }

	// RVA: 0x16F08B0 Offset: 0x16F08B0 VA: 0x16F08B0
	public void Stop() { }

	// RVA: 0x16F08B8 Offset: 0x16F08B8 VA: 0x16F08B8
	public void SetPause(bool isPause) { }

	// RVA: 0x16F091C Offset: 0x16F091C VA: 0x16F091C
	public void Skip() { }
}

// Namespace: 
public class NoticeNumberComponent : MonoBehaviour // TypeDefIndex: 11010
{
	// Fields
	public static readonly float ALPHA_SPEED_RATE; // 0x0
	public static readonly int DISP_NUMBER_MAX; // 0x4
	[SerializeField] // RVA: 0xCE8A20 Offset: 0xCE8A20 VA: 0xCE8A20
	private UILabel numberLabel; // 0x18
	private int mNumber; // 0x20
	private bool mIsActive; // 0x24
	private UIWidget mWidget; // 0x28
	private float mTgtAlpha; // 0x30

	// Methods

	// RVA: 0x18CB638 Offset: 0x18CB638 VA: 0x18CB638
	public void .ctor() { }

	// RVA: 0x18CB640 Offset: 0x18CB640 VA: 0x18CB640
	private void Awake() { }

	// RVA: 0x18CB700 Offset: 0x18CB700 VA: 0x18CB700
	private void Update() { }

	// RVA: 0x18CB82C Offset: 0x18CB82C VA: 0x18CB82C
	public UISprite GetNumberBg() { }

	// RVA: 0x18CB894 Offset: 0x18CB894 VA: 0x18CB894
	public UILabel GetNumberLabel() { }

	// RVA: 0x18CB89C Offset: 0x18CB89C VA: 0x18CB89C
	public void SetNumber(int number) { }

	// RVA: 0x18CBA08 Offset: 0x18CBA08 VA: 0x18CBA08
	public int GetNumber() { }

	// RVA: 0x18CB6C0 Offset: 0x18CB6C0 VA: 0x18CB6C0
	public void SetDisp(bool is_disp) { }

	// RVA: 0x18CBA10 Offset: 0x18CBA10 VA: 0x18CBA10
	public void SetDispForce(bool is_disp) { }

	// RVA: 0x18CBA70 Offset: 0x18CBA70 VA: 0x18CBA70
	private static void .cctor() { }
}

// Namespace: 
public class OuterFrameController : SingletonMonoBehaviour<OuterFrameController> // TypeDefIndex: 11011
{
	// Methods

	// RVA: 0x179B608 Offset: 0x179B608 VA: 0x179B608
	public void .ctor() { }

	// RVA: 0x179B658 Offset: 0x179B658 VA: 0x179B658
	public void OnPressOuterFrame() { }

	// RVA: 0x179B814 Offset: 0x179B814 VA: 0x179B814
	private void Start() { }

	// RVA: 0x179B894 Offset: 0x179B894 VA: 0x179B894
	private void Update() { }
}

// Namespace: 
public class ScreenTouchInformationComponent : MonoBehaviour // TypeDefIndex: 11012
{
	// Fields
	public const float ANIM_TIME = 2;
	[SerializeField] // RVA: 0xCE8A30 Offset: 0xCE8A30 VA: 0xCE8A30
	private UISprite overSp; // 0x18
	protected Action callbackFunc; // 0x20
	private bool isOnClick; // 0x28
	private bool isExpand; // 0x29

	// Methods

	// RVA: 0x1ABA7D0 Offset: 0x1ABA7D0 VA: 0x1ABA7D0
	public void .ctor() { }

	// RVA: 0x1ABA7D8 Offset: 0x1ABA7D8 VA: 0x1ABA7D8
	public UISprite GetOverSprite() { }

	// RVA: 0x1ABA7E0 Offset: 0x1ABA7E0 VA: 0x1ABA7E0
	private void Awake() { }

	// RVA: 0x1ABA920 Offset: 0x1ABA920 VA: 0x1ABA920
	public void Setup(Action callback) { }

	// RVA: 0x1ABA930 Offset: 0x1ABA930 VA: 0x1ABA930
	public void OnClickDecide() { }

	// RVA: 0x1ABA960 Offset: 0x1ABA960 VA: 0x1ABA960
	private void Update() { }
}

// Namespace: 
public class ScrollArrowComponent : MonoBehaviour // TypeDefIndex: 11013
{
	// Fields
	public static readonly int MOVE_RANGE; // 0x0
	public static readonly float MOVE_TIME; // 0x4
	public static readonly float TGT_ALP_SPD_RATE; // 0x8
	protected static List<ScrollArrowComponent> _arrowList; // 0x10
	[SerializeField] // RVA: 0xCE8A40 Offset: 0xCE8A40 VA: 0xCE8A40
	private ScrollArrowComponent.DirectionType directionType; // 0x18
	[SerializeField] // RVA: 0xCE8A50 Offset: 0xCE8A50 VA: 0xCE8A50
	private int moveRange; // 0x1C
	[SerializeField] // RVA: 0xCE8A60 Offset: 0xCE8A60 VA: 0xCE8A60
	private float moveTime; // 0x20
	private UIWidget mWidget; // 0x28
	private float mTgtAlp; // 0x30

	// Methods

	// RVA: 0x1B15F44 Offset: 0x1B15F44 VA: 0x1B15F44
	public void .ctor() { }

	// RVA: 0x1B15FC8 Offset: 0x1B15FC8 VA: 0x1B15FC8
	private void Awake() { }

	// RVA: 0x1B162F0 Offset: 0x1B162F0 VA: 0x1B162F0
	private void OnDestroy() { }

	// RVA: 0x1B1637C Offset: 0x1B1637C VA: 0x1B1637C
	private void OnEnable() { }

	// RVA: 0x1B164A0 Offset: 0x1B164A0 VA: 0x1B164A0
	private void Update() { }

	// RVA: 0x1B165B0 Offset: 0x1B165B0 VA: 0x1B165B0
	public void SetDisp(bool is_disp, bool is_force = False) { }

	// RVA: 0x1B16628 Offset: 0x1B16628 VA: 0x1B16628
	protected ScrollArrowComponent FetchActiveArrow() { }

	// RVA: 0x1B16380 Offset: 0x1B16380 VA: 0x1B16380
	protected void SyncAnimation() { }

	// RVA: 0x1B167F8 Offset: 0x1B167F8 VA: 0x1B167F8
	private static void .cctor() { }
}

// Namespace: 
public enum ScrollArrowComponent.DirectionType // TypeDefIndex: 11014
{
	// Fields
	public int value__; // 0x0
	public const ScrollArrowComponent.DirectionType Left = 0;
	public const ScrollArrowComponent.DirectionType Right = 1;
	public const ScrollArrowComponent.DirectionType Top = 2;
	public const ScrollArrowComponent.DirectionType Bottom = 3;
}

// Namespace: 
public class SingletonTemplate<CLASS> // TypeDefIndex: 11015
{
	// Fields
	protected static CLASS mInstance; // 0x0

	// Properties
	public static CLASS Instance { get; }

	// Methods

	// RVA: -1 Offset: -1
	protected void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24DD674 Offset: 0x24DD674 VA: 0x24DD674
	|-SingletonTemplate<BoostFunctionUtility>..ctor
	|-SingletonTemplate<MissionNotifyManager>..ctor
	|-SingletonTemplate<PartyOrganizationUtility>..ctor
	|-SingletonTemplate<QuestTree>..ctor
	|-SingletonTemplate<object>..ctor
	|-SingletonTemplate<clsQuestCheck>..ctor
	*/

	// RVA: -1 Offset: -1
	public static CLASS get_Instance() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24DD6A0 Offset: 0x24DD6A0 VA: 0x24DD6A0
	|-SingletonTemplate<BoostFunctionUtility>.get_Instance
	|-SingletonTemplate<MissionNotifyManager>.get_Instance
	|-SingletonTemplate<PartyOrganizationUtility>.get_Instance
	|-SingletonTemplate<QuestTree>.get_Instance
	|-SingletonTemplate<object>.get_Instance
	|-SingletonTemplate<clsQuestCheck>.get_Instance
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public virtual void Destroy() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24DD980 Offset: 0x24DD980 VA: 0x24DD980
	|-SingletonTemplate<BoostFunctionUtility>.Destroy
	|-SingletonTemplate<MissionNotifyManager>.Destroy
	|-SingletonTemplate<PartyOrganizationUtility>.Destroy
	|-SingletonTemplate<QuestTree>.Destroy
	|-SingletonTemplate<object>.Destroy
	|-SingletonTemplate<clsQuestCheck>.Destroy
	*/

	// RVA: -1 Offset: -1
	public static void Delete() { }
