	private void DestroyDialog() { }

	// RVA: 0x17B42EC Offset: 0x17B42EC VA: 0x17B42EC
	private void LoadPoolEffects() { }

	// RVA: 0x17ADAB0 Offset: 0x17ADAB0 VA: 0x17ADAB0
	private void ReleasePoolEffects() { }

	// RVA: 0x17AD7F4 Offset: 0x17AD7F4 VA: 0x17AD7F4
	private void UpdateScannableEffects() { }

	// RVA: 0x17B448C Offset: 0x17B448C VA: 0x17B448C
	private void ShowScannableEffect() { }

	// RVA: 0x17B1930 Offset: 0x17B1930 VA: 0x17B1930
	private void HideScannableEffect() { }

	// RVA: 0x17AD72C Offset: 0x17AD72C VA: 0x17AD72C
	private void UpdateScannObstacleEffects() { }

	// RVA: 0x17B466C Offset: 0x17B466C VA: 0x17B466C
	private void ShowScanObstacleEffect() { }

	// RVA: 0x17B4610 Offset: 0x17B4610 VA: 0x17B4610
	private void HideScanObstacleEffect() { }

	// RVA: 0x17AEA18 Offset: 0x17AEA18 VA: 0x17AEA18
	private void ShowSelectedPanelEffect(SubmarineMapPanelData panelData) { }

	// RVA: 0x17AED34 Offset: 0x17AED34 VA: 0x17AED34
	private void HideSelectedPanelEffect() { }

	// RVA: 0x17B47F0 Offset: 0x17B47F0 VA: 0x17B47F0
	private void ShowScanRange(int scanId, SubmarineMapPanelData basePanelData) { }

	// RVA: 0x17B49EC Offset: 0x17B49EC VA: 0x17B49EC
	private void HideScanRange() { }

	// RVA: -1 Offset: -1
	private void RentAndPutEffectAbovePanel<T>(ComponentPool<T> pool, SubmarineMapPanelData panelData, Nullable<Vector3> offset, Nullable<Vector3> scale) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C612E0 Offset: 0x1C612E0 VA: 0x1C612E0
	|-SubmarineMapManager.RentAndPutEffectAbovePanel<SubmarineEffectScanObstaclePanelComponent>
	|-SubmarineMapManager.RentAndPutEffectAbovePanel<SubmarineEffectScannablePanelComponent>
	|-SubmarineMapManager.RentAndPutEffectAbovePanel<SubmarineEffectSelectedPanelComponent>
	|-SubmarineMapManager.RentAndPutEffectAbovePanel<object>
	*/

	// RVA: -1 Offset: -1
	private void ReturnEffectsToPool<T>(ComponentPool<T> pool) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C615DC Offset: 0x1C615DC VA: 0x1C615DC
	|-SubmarineMapManager.ReturnEffectsToPool<SubmarineEffectScanObstaclePanelComponent>
	|-SubmarineMapManager.ReturnEffectsToPool<SubmarineEffectScannablePanelComponent>
	|-SubmarineMapManager.ReturnEffectsToPool<SubmarineEffectSelectedPanelComponent>
	|-SubmarineMapManager.ReturnEffectsToPool<object>
	*/

	// RVA: 0x17B4A98 Offset: 0x17B4A98 VA: 0x17B4A98
	private SchedulerTaskBase CreateMoveCameraToPositionTask(Vector3 destPos, float size, float second) { }

	// RVA: 0x17AED88 Offset: 0x17AED88 VA: 0x17AED88
	private SchedulerTaskBase ShowScanRangeTask(int scanId, SubmarineMapPanelData panelData, out bool isShowDialogUpper) { }

	// RVA: 0x17B0068 Offset: 0x17B0068 VA: 0x17B0068
	private List<SchedulerTaskBase> CreateScanTask(SubmarineMapPanelData panelData, int scanId) { }

	// RVA: 0x17B4B8C Offset: 0x17B4B8C VA: 0x17B4B8C
	private List<SchedulerTaskBase> CreateRevealSpotOnPanelTasks(SubmarineMapPanelData panelData) { }

	// RVA: 0x17B5020 Offset: 0x17B5020 VA: 0x17B5020
	private SchedulerTaskBase CreateOpenPanelAndRevealSpotTask(SubmarineMapPanelData panelData, float waitTime = 0) { }

	// RVA: 0x17B5478 Offset: 0x17B5478 VA: 0x17B5478
	private SchedulerTaskBase CreateOpenPanelsAndRevealSpotsTask(SubmarineMapPanelData[] panelDataArray) { }

	// RVA: 0x17B0E84 Offset: 0x17B0E84 VA: 0x17B0E84
	private SchedulerTaskBase CreateScanOpenPanelTask(int scanId, SubmarineMapPanelData panelData) { }

	// RVA: 0x17B5590 Offset: 0x17B5590 VA: 0x17B5590
	private SchedulerTaskBase CreateHitObstractTask(SubmarineMapPanelData panelData, float waitTime = 0) { }

	// RVA: 0x17B17C4 Offset: 0x17B17C4 VA: 0x17B17C4
	private List<SchedulerTaskBase> CreateRevealEachSpotsTasks() { }

	// RVA: 0x17B4E10 Offset: 0x17B4E10 VA: 0x17B4E10
	private List<SchedulerTaskBase> CreateRevealSpotTasks(SrcSpotBasePrefab spot) { }

	// RVA: 0x17ADCA0 Offset: 0x17ADCA0 VA: 0x17ADCA0
	private List<SchedulerTaskBase> CreateHideEnemyOccupiedPanelTasks(int beforeClearQuestId) { }

	// RVA: 0x17AE278 Offset: 0x17AE278 VA: 0x17AE278
	private List<SchedulerTaskBase> CreateSubsequentialOpenPanelTasks() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2E68 Offset: 0xCD2E68 VA: 0xCD2E68
	// RVA: 0x17B55EC Offset: 0x17B55EC VA: 0x17B55EC
	private void <OnEveryActionEnd>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2E78 Offset: 0xCD2E78 VA: 0xCD2E78
	// RVA: 0x17B566C Offset: 0x17B566C VA: 0x17B566C
	private void <TryInitRequest>m__1(string result) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2E88 Offset: 0xCD2E88 VA: 0xCD2E88
	// RVA: 0x17B5678 Offset: 0x17B5678 VA: 0x17B5678
	private void <StartScanPerformance>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2E98 Offset: 0xCD2E98 VA: 0xCD2E98
	// RVA: 0x17B56EC Offset: 0x17B56EC VA: 0x17B56EC
	private void <OnEndScan>m__3() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2EA8 Offset: 0xCD2EA8 VA: 0xCD2EA8
	// RVA: 0x17B5724 Offset: 0x17B5724 VA: 0x17B5724
	private static bool <CreateScanOpenPanelTask>m__4(SubmarineScanEvent x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2EB8 Offset: 0xCD2EB8 VA: 0xCD2EB8
	// RVA: 0x17B577C Offset: 0x17B577C VA: 0x17B577C
	private static int <CreateScanOpenPanelTask>m__5(SubmarineScanEvent x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2EC8 Offset: 0xCD2EC8 VA: 0xCD2EC8
	// RVA: 0x17B57A8 Offset: 0x17B57A8 VA: 0x17B57A8
	private static bool <CreateHideEnemyOccupiedPanelTasks>m__6(SubmarineMapPanelData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2ED8 Offset: 0xCD2ED8 VA: 0xCD2ED8
	// RVA: 0x17B57E0 Offset: 0x17B57E0 VA: 0x17B57E0
	private void <OnEveryActionEnd>m__7() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2EE8 Offset: 0xCD2EE8 VA: 0xCD2EE8
	// RVA: 0x17B5804 Offset: 0x17B5804 VA: 0x17B5804
	private void <StartScanPerformance>m__8() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2EF8 Offset: 0xCD2EF8 VA: 0xCD2EF8
	// RVA: 0x17B5878 Offset: 0x17B5878 VA: 0x17B5878
	private void <StartScanPerformance>m__9() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45814 Offset: 0xC45814 VA: 0xC45814
private sealed class SubmarineMapManager.<LoadAssets>c__AnonStorey2 // TypeDefIndex: 10986
{
	// Fields
	internal Action finishCallback; // 0x10
	internal SubmarineMapManager $this; // 0x18

	// Methods

	// RVA: 0x1178FD0 Offset: 0x1178FD0 VA: 0x1178FD0
	public void .ctor() { }

	// RVA: 0x1178FD8 Offset: 0x1178FD8 VA: 0x1178FD8
	internal void <>m__0() { }

	// RVA: 0x11790DC Offset: 0x11790DC VA: 0x11790DC
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45824 Offset: 0xC45824 VA: 0xC45824
private sealed class SubmarineMapManager.<CoInitRequest>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 10987
{
	// Fields
	internal Action finishCallback; // 0x10
	internal SubmarineMapManager $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDCDA0 Offset: 0xCDCDA0 VA: 0xCDCDA0
	// RVA: 0x1178550 Offset: 0x1178550 VA: 0x1178550
	public void .ctor() { }

	// RVA: 0x1178558 Offset: 0x1178558 VA: 0x1178558 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCDB0 Offset: 0xCDCDB0 VA: 0xCDCDB0
	// RVA: 0x1178704 Offset: 0x1178704 VA: 0x1178704 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCDC0 Offset: 0xCDCDC0 VA: 0xCDCDC0
	// RVA: 0x117870C Offset: 0x117870C VA: 0x117870C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCDD0 Offset: 0xCDCDD0 VA: 0xCDCDD0
	// RVA: 0x1178714 Offset: 0x1178714 VA: 0x1178714 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCDE0 Offset: 0xCDCDE0 VA: 0xCDCDE0
	// RVA: 0x1178728 Offset: 0x1178728 VA: 0x1178728 Slot: 6
	public void Reset() { }

	// RVA: 0x1178790 Offset: 0x1178790 VA: 0x1178790
	internal bool <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45834 Offset: 0xC45834 VA: 0xC45834
private sealed class SubmarineMapManager.<CoOnAfterSpotCreated>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 10988
{
	// Fields
	internal Action finishCallback; // 0x10
	internal SubmarineMapManager $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDCDF0 Offset: 0xCDCDF0 VA: 0xCDCDF0
	// RVA: 0x11787BC Offset: 0x11787BC VA: 0x11787BC
	public void .ctor() { }

	// RVA: 0x11787C4 Offset: 0x11787C4 VA: 0x11787C4 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCE00 Offset: 0xCDCE00 VA: 0xCDCE00
	// RVA: 0x1178C0C Offset: 0x1178C0C VA: 0x1178C0C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCE10 Offset: 0xCDCE10 VA: 0xCDCE10
	// RVA: 0x1178C14 Offset: 0x1178C14 VA: 0x1178C14 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCE20 Offset: 0xCDCE20 VA: 0xCDCE20
	// RVA: 0x1178C1C Offset: 0x1178C1C VA: 0x1178C1C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCE30 Offset: 0xCDCE30 VA: 0xCDCE30
	// RVA: 0x1178C20 Offset: 0x1178C20 VA: 0x1178C20 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45844 Offset: 0xC45844 VA: 0xC45844
private sealed class SubmarineMapManager.<OnBeforeQuestAfterAction>c__AnonStorey3 // TypeDefIndex: 10989
{
	// Fields
	internal Action finishCallback; // 0x10
	internal SubmarineMapManager $this; // 0x18

	// Methods

	// RVA: 0x11791D4 Offset: 0x11791D4 VA: 0x11791D4
	public void .ctor() { }

	// RVA: 0x11791DC Offset: 0x11791DC VA: 0x11791DC
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45854 Offset: 0xC45854 VA: 0xC45854
private sealed class SubmarineMapManager.<DoPerformancesByVariedCond>c__AnonStorey4 // TypeDefIndex: 10990
{
	// Fields
	internal Action finishCallback; // 0x10
	internal SubmarineMapManager $this; // 0x18

	// Methods

	// RVA: 0x1178F94 Offset: 0x1178F94 VA: 0x1178F94
	public void .ctor() { }

	// RVA: 0x1178F9C Offset: 0x1178F9C VA: 0x1178F9C
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45864 Offset: 0xC45864 VA: 0xC45864
private sealed class SubmarineMapManager.<ClickPanel>c__AnonStorey5 // TypeDefIndex: 10991
{
	// Fields
	internal SubmarineMapPanelData panelData; // 0x10
	internal SubmarineMapManager $this; // 0x18

	// Methods

	// RVA: 0x1178450 Offset: 0x1178450 VA: 0x1178450
	public void .ctor() { }

	// RVA: 0x1178458 Offset: 0x1178458 VA: 0x1178458
	internal void <>m__0() { }

	// RVA: 0x117850C Offset: 0x117850C VA: 0x117850C
	internal void <>m__1(int scanId) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45874 Offset: 0xC45874 VA: 0xC45874
private sealed class SubmarineMapManager.<OnScannerSelected>c__AnonStorey6 // TypeDefIndex: 10992
{
	// Fields
	internal int scanId; // 0x10
	internal SubmarineMapPanelData panelData; // 0x18
	internal bool isShowDialogUpper; // 0x20
	internal SubmarineMapManager $this; // 0x28

	// Methods

	// RVA: 0x11793CC Offset: 0x11793CC VA: 0x11793CC
	public void .ctor() { }

	// RVA: 0x11793D4 Offset: 0x11793D4 VA: 0x11793D4
	internal void <>m__0() { }

	// RVA: 0x11794DC Offset: 0x11794DC VA: 0x11794DC
	internal void <>m__1(bool yes) { }

	// RVA: 0x11795CC Offset: 0x11795CC VA: 0x11795CC
	internal void <>m__2(int lscanId) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45884 Offset: 0xC45884 VA: 0xC45884
private sealed class SubmarineMapManager.<OnScanDecided>c__AnonStorey7 // TypeDefIndex: 10993
{
	// Fields
	internal int scanId; // 0x10
	internal SubmarineMapPanelData panelData; // 0x18
	internal SubmarineMapManager $this; // 0x20

	// Methods

	// RVA: 0x1179378 Offset: 0x1179378 VA: 0x1179378
	public void .ctor() { }

	// RVA: 0x1179380 Offset: 0x1179380 VA: 0x1179380
	internal void <>m__0(string result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45894 Offset: 0xC45894 VA: 0xC45894
private sealed class SubmarineMapManager.<SubsequentialOpenPanelTaskChain>c__AnonStorey8 // TypeDefIndex: 10994
{
	// Fields
	internal Action finishCallback; // 0x10

	// Methods

	// RVA: 0x1179748 Offset: 0x1179748 VA: 0x1179748
	public void .ctor() { }

	// RVA: 0x1179750 Offset: 0x1179750 VA: 0x1179750
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC458A4 Offset: 0xC458A4 VA: 0xC458A4
private sealed class SubmarineMapManager.<RevealAvailableSpots>c__AnonStorey9 // TypeDefIndex: 10995
{
	// Fields
	internal Action finishCallback; // 0x10

	// Methods

	// RVA: 0x1179734 Offset: 0x1179734 VA: 0x1179734
	public void .ctor() { }

	// RVA: 0x117973C Offset: 0x117973C VA: 0x117973C
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC458B4 Offset: 0xC458B4 VA: 0xC458B4
private sealed class SubmarineMapManager.<UpdateTerminalInfo>c__AnonStoreyA // TypeDefIndex: 10996
{
	// Fields
	internal EventDetailEntity eventDetailEntity; // 0x10
	internal SubmarineMapManager $this; // 0x18

	// Methods

	// RVA: 0x117975C Offset: 0x117975C VA: 0x117975C
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC458C4 Offset: 0xC458C4 VA: 0xC458C4
private sealed class SubmarineMapManager.<UpdateTerminalInfo>c__AnonStoreyB // TypeDefIndex: 10997
{
	// Fields
	internal int beforePoint; // 0x10
	internal SubmarineMapManager.<UpdateTerminalInfo>c__AnonStoreyA <>f__ref$10; // 0x18

	// Methods

	// RVA: 0x1179764 Offset: 0x1179764 VA: 0x1179764
	public void .ctor() { }

	// RVA: 0x117976C Offset: 0x117976C VA: 0x117976C
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC458D4 Offset: 0xC458D4 VA: 0xC458D4
private sealed class SubmarineMapManager.<AdjustSilhouetteGimmicks>c__AnonStoreyC // TypeDefIndex: 10998
{
	// Fields
	internal SubmarineSilhouetteData silhouetteData; // 0x10

	// Methods

	// RVA: 0x11783D0 Offset: 0x11783D0 VA: 0x11783D0
	public void .ctor() { }

	// RVA: 0x11783D8 Offset: 0x11783D8 VA: 0x11783D8
	internal bool <>m__0(SrcSpotBasePrefab x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC458E4 Offset: 0xC458E4 VA: 0xC458E4
private sealed class SubmarineMapManager.<OpenSelectScannerDialog>c__AnonStoreyD // TypeDefIndex: 10999
{
	// Fields
	internal Action<int> callback; // 0x10
	internal SubmarineMapManager $this; // 0x18

	// Methods

	// RVA: 0x11796A4 Offset: 0x11796A4 VA: 0x11796A4
	public void .ctor() { }

	// RVA: 0x11796AC Offset: 0x11796AC VA: 0x11796AC
	internal void <>m__0(int scanId) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC458F4 Offset: 0xC458F4 VA: 0xC458F4
private sealed class SubmarineMapManager.<OpenScanConfirmDialog>c__AnonStoreyE // TypeDefIndex: 11000
{
	// Fields
	internal Action<bool> callback; // 0x10
	internal SubmarineMapManager $this; // 0x18

	// Methods

	// RVA: 0x1179614 Offset: 0x1179614 VA: 0x1179614
	public void .ctor() { }

	// RVA: 0x117961C Offset: 0x117961C VA: 0x117961C
	internal void <>m__0(bool yes) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45904 Offset: 0xC45904 VA: 0xC45904
private sealed class SubmarineMapManager.<CreateScanTask>c__AnonStoreyF // TypeDefIndex: 11001
{
	// Fields
	internal GameObject scanAnimObj; // 0x10
	internal SubmarineScanVoiceComponent svtScanVoice; // 0x18
	internal SubmarineMapManager $this; // 0x20

	// Methods

	// RVA: 0x1178D9C Offset: 0x1178D9C VA: 0x1178D9C
	public void .ctor() { }

	// RVA: 0x1178DA4 Offset: 0x1178DA4 VA: 0x1178DA4
	internal void <>m__0() { }

	// RVA: 0x1178DD8 Offset: 0x1178DD8 VA: 0x1178DD8
	internal void <>m__1() { }

	// RVA: 0x1178EF8 Offset: 0x1178EF8 VA: 0x1178EF8
	internal void <>m__2() { }

	// RVA: 0x1178F28 Offset: 0x1178F28 VA: 0x1178F28
	internal void <>m__3() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45914 Offset: 0xC45914 VA: 0xC45914
private sealed class SubmarineMapManager.<CreateRevealSpotOnPanelTasks>c__AnonStorey10 // TypeDefIndex: 11002
{
	// Fields
	internal SubmarineMapPanelData panelData; // 0x10

	// Methods

	// RVA: 0x1178CE8 Offset: 0x1178CE8 VA: 0x1178CE8
	public void .ctor() { }

	// RVA: 0x1178CF0 Offset: 0x1178CF0 VA: 0x1178CF0
	internal bool <>m__0(MapControl.SpotInfo x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45924 Offset: 0xC45924 VA: 0xC45924
private sealed class SubmarineMapManager.<CreateScanOpenPanelTask>c__AnonStorey11 // TypeDefIndex: 11003
{
	// Fields
	internal int i; // 0x10

	// Methods

	// RVA: 0x1178D50 Offset: 0x1178D50 VA: 0x1178D50
	public void .ctor() { }

	// RVA: 0x1178D58 Offset: 0x1178D58 VA: 0x1178D58
	internal bool <>m__0(SubmarineScanEvent x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45934 Offset: 0xC45934 VA: 0xC45934
private sealed class SubmarineMapManager.<CreateHideEnemyOccupiedPanelTasks>c__AnonStorey12 // TypeDefIndex: 11004
{
	// Fields
	internal SubmarineSilhouetteData silhouetteData; // 0x10

	// Methods

	// RVA: 0x1178C88 Offset: 0x1178C88 VA: 0x1178C88
	public void .ctor() { }

	// RVA: 0x1178C90 Offset: 0x1178C90 VA: 0x1178C90
	internal bool <>m__0(MapControl.SpotInfo x) { }
}

// Namespace: 
public class EventPointVsResultAction : MonoBehaviour // TypeDefIndex: 11005
{
	// Fields
	private static readonly string ANIMATION_NAME; // 0x0
	private CStateManager<EventPointVsResultAction> mFSM; // 0x18
	private SimpleAnimation mSimpleAnimation; // 0x20
	private Animation mAnimation; // 0x28
	[SerializeField] // RVA: 0xC7C188 Offset: 0xC7C188 VA: 0xC7C188
	private EventPointVsResultAction.servants[] resultSvts; // 0x30
	[SerializeField] // RVA: 0xC7C198 Offset: 0xC7C198 VA: 0xC7C198
	private int[] bgs; // 0x38
	[SerializeField] // RVA: 0xC7C1A8 Offset: 0xC7C1A8 VA: 0xC7C1A8
	private ExUITexture mBg; // 0x40
	[SerializeField] // RVA: 0xC7C1B8 Offset: 0xC7C1B8 VA: 0xC7C1B8
	private UIStandFigureR[] SvtComponents; // 0x48
	[SerializeField] // RVA: 0xC7C1C8 Offset: 0xC7C1C8 VA: 0xC7C1C8
	private GameObject particlePrefab; // 0x50
	protected GameObject particleObj; // 0x58
	private ScreenTouchInformationComponent mScreenTouchInfo; // 0x60
	private EventPointVsResultAction.GROUP_WIN winType; // 0x68
	private MaskFade localMask; // 0x70
	private string animationName; // 0x78
	private Action mEndAct; // 0x80

	// Methods

	// RVA: 0x169B834 Offset: 0x169B834 VA: 0x169B834
	public void .ctor() { }

	// RVA: 0x169B83C Offset: 0x169B83C VA: 0x169B83C
	private void Awake() { }

	// RVA: 0x169BB44 Offset: 0x169BB44 VA: 0x169BB44
	private void Update() { }

	// RVA: 0x169BBA4 Offset: 0x169BBA4 VA: 0x169BBA4
	public void Setup(EventPointVsResultAction.GROUP_WIN winType, int resultNo, Action callBack) { }

	// RVA: 0x169C1AC Offset: 0x169C1AC VA: 0x169C1AC
	private void setupLocal(Action callBack) { }

	// RVA: 0x169C438 Offset: 0x169C438 VA: 0x169C438
	public void Play(Action end_act, MaskFade maskFade, float fade_in_time = 0) { }

	// RVA: 0x169BD7C Offset: 0x169BD7C VA: 0x169BD7C
	private void LoadSvts(int cnt, int[] servants, Face.Type[] faces, EventPointVsResultAction.GROUP_WIN winType, Action callBack) { }

	// RVA: 0x169C6F4 Offset: 0x169C6F4 VA: 0x169C6F4
	private string GetAnimName() { }

	// RVA: 0x169C6FC Offset: 0x169C6FC VA: 0x169C6FC
	public EventPointVsResultAction.STATE GetState() { }

	// RVA: 0x169BAD4 Offset: 0x169BAD4 VA: 0x169BAD4
	public void SetState(EventPointVsResultAction.STATE state) { }

	// RVA: 0x169C75C Offset: 0x169C75C VA: 0x169C75C
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2F08 Offset: 0xCD2F08 VA: 0xCD2F08
	// RVA: 0x169C7B8 Offset: 0x169C7B8 VA: 0x169C7B8
	private void <Play>m__0() { }
}

// Namespace: 
public enum EventPointVsResultAction.STATE // TypeDefIndex: 11006
{
	// Fields
	public int value__; // 0x0
	public const EventPointVsResultAction.STATE NONE = 0;
	public const EventPointVsResultAction.STATE PLAY = 1;
	public const EventPointVsResultAction.STATE TOUCH_WAIT = 2;
	public const EventPointVsResultAction.STATE SIZEOF = 3;
}

// Namespace: 
public enum EventPointVsResultAction.GROUP_WIN // TypeDefIndex: 11007
{
	// Fields
	public int value__; // 0x0
	public const EventPointVsResultAction.GROUP_WIN NONE = 0;
	public const EventPointVsResultAction.GROUP_WIN GROUP1_WIN = 1;
	public const EventPointVsResultAction.GROUP_WIN GROUP2_WIN = 2;
	public const EventPointVsResultAction.GROUP_WIN BOSSPOINT_WIN = 3;
	public const EventPointVsResultAction.GROUP_WIN SIZEOF = 4;
}

// Namespace: 
[Serializable]
private class EventPointVsResultAction.servants // TypeDefIndex: 11008
{
	// Fields
	public int[] servIds; // 0x10
	public Face.Type[] FaceIds; // 0x18

	// Methods

	// RVA: 0x169D1C8 Offset: 0x169D1C8 VA: 0x169D1C8
	public void .ctor() { }
}

// Namespace: 
private class EventPointVsResultAction.StateNone : IState<EventPointVsResultAction> // TypeDefIndex: 11009
{
	// Methods

	// RVA: 0x169BABC Offset: 0x169BABC VA: 0x169BABC
	public void .ctor() { }

	// RVA: 0x169C9D4 Offset: 0x169C9D4 VA: 0x169C9D4 Slot: 4
	public void begin(EventPointVsResultAction that) { }

	// RVA: 0x169C9D8 Offset: 0x169C9D8 VA: 0x169C9D8 Slot: 5
	public void update(EventPointVsResultAction that) { }

	// RVA: 0x169C9DC Offset: 0x169C9DC VA: 0x169C9DC Slot: 6
	public void end(EventPointVsResultAction that) { }
}

// Namespace: 
private class EventPointVsResultAction.StatePlay : IState<EventPointVsResultAction> // TypeDefIndex: 11010
{
	// Fields
	private SimpleAnimation.State mSimpleAnimState; // 0x10
	private AnimationState mAnimState; // 0x18

	// Methods

	// RVA: 0x169BAC4 Offset: 0x169BAC4 VA: 0x169BAC4
	public void .ctor() { }

	// RVA: 0x169C9E0 Offset: 0x169C9E0 VA: 0x169C9E0 Slot: 4
	public void begin(EventPointVsResultAction that) { }

	// RVA: 0x169CD58 Offset: 0x169CD58 VA: 0x169CD58 Slot: 5
	public void update(EventPointVsResultAction that) { }

	// RVA: 0x169CF54 Offset: 0x169CF54 VA: 0x169CF54 Slot: 6
	public void end(EventPointVsResultAction that) { }
}

// Namespace: 
private class EventPointVsResultAction.StateTouchWait : IState<EventPointVsResultAction> // TypeDefIndex: 11011
{
	// Methods

	// RVA: 0x169BACC Offset: 0x169BACC VA: 0x169BACC
	public void .ctor() { }

	// RVA: 0x169CF58 Offset: 0x169CF58 VA: 0x169CF58 Slot: 4
	public void begin(EventPointVsResultAction that) { }

	// RVA: 0x169CFB4 Offset: 0x169CFB4 VA: 0x169CFB4 Slot: 5
	public void update(EventPointVsResultAction that) { }

	// RVA: 0x169D194 Offset: 0x169D194 VA: 0x169D194 Slot: 6
	public void end(EventPointVsResultAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45964 Offset: 0xC45964 VA: 0xC45964
private sealed class EventPointVsResultAction.StateTouchWait.<update>c__AnonStorey0 // TypeDefIndex: 11012
{
	// Fields
	internal EventPointVsResultAction that; // 0x10

	// Methods

	// RVA: 0x169D18C Offset: 0x169D18C VA: 0x169D18C
	public void .ctor() { }

	// RVA: 0x169D198 Offset: 0x169D198 VA: 0x169D198
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45944 Offset: 0xC45944 VA: 0xC45944
private sealed class EventPointVsResultAction.<Setup>c__AnonStorey0 // TypeDefIndex: 11013
{
	// Fields
	internal int resultNo; // 0x10
	internal Action callBack; // 0x18
	internal EventPointVsResultAction $this; // 0x20

	// Methods

	// RVA: 0x169BD74 Offset: 0x169BD74 VA: 0x169BD74
	public void .ctor() { }

	// RVA: 0x169C81C Offset: 0x169C81C VA: 0x169C81C
	internal void <>m__0() { }

	// RVA: 0x169C9A4 Offset: 0x169C9A4 VA: 0x169C9A4
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45954 Offset: 0xC45954 VA: 0xC45954
private sealed class EventPointVsResultAction.<LoadSvts>c__AnonStorey1 // TypeDefIndex: 11014
{
	// Fields
	internal int cnt; // 0x10
	internal int[] servants; // 0x18
	internal Face.Type[] faces; // 0x20
	internal EventPointVsResultAction.GROUP_WIN winType; // 0x28
	internal Action callBack; // 0x30
	internal EventPointVsResultAction $this; // 0x38

	// Methods

	// RVA: 0x169C6EC Offset: 0x169C6EC VA: 0x169C6EC
	public void .ctor() { }

	// RVA: 0x169C7C0 Offset: 0x169C7C0 VA: 0x169C7C0
	internal void <>m__0() { }
}

// Namespace: 
public class EventRaceBoostEffect : MonoBehaviour // TypeDefIndex: 11015
{
	// Fields
	private static readonly string SP_NAME; // 0x0
	private static readonly string ANIM_NAME; // 0x8
	[SerializeField] // RVA: 0xC7C1D8 Offset: 0xC7C1D8 VA: 0xC7C1D8
	private UISprite[] effectSp; // 0x18
	[SerializeField] // RVA: 0xC7C1E8 Offset: 0xC7C1E8 VA: 0xC7C1E8
	private UISprite boostItemSp; // 0x20
	[SerializeField] // RVA: 0xC7C1F8 Offset: 0xC7C1F8 VA: 0xC7C1F8
	private UILabel boostCntLb; // 0x28
	private Action callBack; // 0x30
	private bool seEnded; // 0x38
	private bool animEnded; // 0x39
	private int randvoiceSvt; // 0x3C
	private string randvoiceId; // 0x40
	private bool destroyedBeforeVoiceStop; // 0x48

	// Methods

	// RVA: 0x169E868 Offset: 0x169E868 VA: 0x169E868
	public void .ctor() { }

	// RVA: 0x169E870 Offset: 0x169E870 VA: 0x169E870
	public void SetUpAndPlay(QuestRacePointEntity boostEnt, EventRaceBoostEffect.BoostGrade boostGrade, int boostPoint, int itemImgId, bool playVoice, Action callback) { }

	// RVA: 0x169ED40 Offset: 0x169ED40 VA: 0x169ED40
	private void setupLocal(QuestRacePointEntity boostEnt, EventRaceBoostEffect.BoostGrade boostGrade, int boostPoint, int itemImgId, Action callback) { }

	// RVA: 0x169F464 Offset: 0x169F464 VA: 0x169F464
	private void afterSE() { }

	// RVA: 0x169F640 Offset: 0x169F640 VA: 0x169F640
	private void afterVoice() { }

	// RVA: 0x169EB38 Offset: 0x169EB38 VA: 0x169EB38
	private int GetSvtId(string voiceStr) { }

	// RVA: 0x169EC24 Offset: 0x169EC24 VA: 0x169EC24
	private string GetVoiceId(string voiceStr) { }

	// RVA: 0x169F6D0 Offset: 0x169F6D0 VA: 0x169F6D0
	private void onEndAnim() { }

	// RVA: 0x169F618 Offset: 0x169F618 VA: 0x169F618
	private void CheckCallback() { }

	// RVA: 0x169F6E8 Offset: 0x169F6E8 VA: 0x169F6E8
	public void OnDestroy() { }

	// RVA: 0x169F7D8 Offset: 0x169F7D8 VA: 0x169F7D8
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2F18 Offset: 0xCD2F18 VA: 0xCD2F18
	// RVA: 0x169F84C Offset: 0x169F84C VA: 0x169F84C
	private void <setupLocal>m__0() { }
}

// Namespace: 
public enum EventRaceBoostEffect.BoostColor // TypeDefIndex: 11016
{
	// Fields
	public int value__; // 0x0
	public const EventRaceBoostEffect.BoostColor NONE = 0;
	public const EventRaceBoostEffect.BoostColor BURST = 1;
	public const EventRaceBoostEffect.BoostColor QUICK = 2;
	public const EventRaceBoostEffect.BoostColor ARTS = 3;
}

// Namespace: 
public enum EventRaceBoostEffect.BoostGrade // TypeDefIndex: 11017
{
	// Fields
	public int value__; // 0x0
	public const EventRaceBoostEffect.BoostGrade NONE = 1;
	public const EventRaceBoostEffect.BoostGrade BOOSTED = 2;
	public const EventRaceBoostEffect.BoostGrade BOOSTED_LOT = 3;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45974 Offset: 0xC45974 VA: 0xC45974
private sealed class EventRaceBoostEffect.<SetUpAndPlay>c__AnonStorey0 // TypeDefIndex: 11018
{
	// Fields
	internal QuestRacePointEntity boostEnt; // 0x10
	internal EventRaceBoostEffect.BoostGrade boostGrade; // 0x18
	internal int boostPoint; // 0x1C
	internal int itemImgId; // 0x20
	internal Action callback; // 0x28
	internal EventRaceBoostEffect $this; // 0x30

	// Methods

	// RVA: 0x169EB30 Offset: 0x169EB30 VA: 0x169EB30
	public void .ctor() { }

	// RVA: 0x169F850 Offset: 0x169F850 VA: 0x169F850
	internal void <>m__0() { }
}

// Namespace: 
public class EventRaceResultEffect : MonoBehaviour // TypeDefIndex: 11019
{
	// Fields
	private static readonly string TEAM_NAME_SP_NAME; // 0x0
	private static readonly int REST_DISTANCE_FONT_SIZE; // 0x8
	[SerializeField] // RVA: 0xC7C208 Offset: 0xC7C208 VA: 0xC7C208
	private ExUITexture mBg; // 0x18
	[SerializeField] // RVA: 0xC7C218 Offset: 0xC7C218 VA: 0xC7C218
	private UISprite[] teams; // 0x20
	[SerializeField] // RVA: 0xC7C228 Offset: 0xC7C228 VA: 0xC7C228
	private UILabel[] teamTimes; // 0x28
	[SerializeField] // RVA: 0xC7C238 Offset: 0xC7C238 VA: 0xC7C238
	private int bgId; // 0x30
	[SerializeField] // RVA: 0xC7C248 Offset: 0xC7C248 VA: 0xC7C248
	private GameObject mScreenTouchInfo; // 0x38
	private CStateManager<EventRaceResultEffect> mFSM; // 0x40
	private SimpleAnimation mSimpleAnimation; // 0x48
	private Animation mAnimation; // 0x50
	private Action mEndAct; // 0x58

	// Methods

	// RVA: 0x16A1054 Offset: 0x16A1054 VA: 0x16A1054
	public void .ctor() { }

	// RVA: 0x16A105C Offset: 0x16A105C VA: 0x16A105C
	private void Awake() { }

	// RVA: 0x16A1240 Offset: 0x16A1240 VA: 0x16A1240
	private void Update() { }

	// RVA: 0x16A12A0 Offset: 0x16A12A0 VA: 0x16A12A0
	public void SetUp(int eventId, int[] teamIconIds, long[] goalTimes, long[] restDistances, Action onSetupEnd) { }

	// RVA: 0x16A17A8 Offset: 0x16A17A8 VA: 0x16A17A8
	private string MakeTimeStr(long utime) { }

	// RVA: 0x16A191C Offset: 0x16A191C VA: 0x16A191C
	private string MakeRestDistanceStr(long restDistance) { }

	// RVA: 0x16A19EC Offset: 0x16A19EC VA: 0x16A19EC
	public void Play(Action end_act) { }

	// RVA: 0x16A1D68 Offset: 0x16A1D68 VA: 0x16A1D68
	public EventRaceResultEffect.STATE GetState() { }

	// RVA: 0x16A11D0 Offset: 0x16A11D0 VA: 0x16A11D0
	public void SetState(EventRaceResultEffect.STATE state) { }

	// RVA: 0x16A1DC8 Offset: 0x16A1DC8 VA: 0x16A1DC8
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2F28 Offset: 0xCD2F28 VA: 0xCD2F28
	// RVA: 0x16A1E34 Offset: 0x16A1E34 VA: 0x16A1E34
	private void <Play>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2F38 Offset: 0xCD2F38 VA: 0xCD2F38
	// RVA: 0x16A1E3C Offset: 0x16A1E3C VA: 0x16A1E3C
	private void <Play>m__1() { }
}

// Namespace: 
public enum EventRaceResultEffect.STATE // TypeDefIndex: 11020
{
	// Fields
	public int value__; // 0x0
	public const EventRaceResultEffect.STATE NONE = 0;
	public const EventRaceResultEffect.STATE PLAY = 1;
	public const EventRaceResultEffect.STATE TOUCH_WAIT = 2;
	public const EventRaceResultEffect.STATE SIZEOF = 3;
}

// Namespace: 
private class EventRaceResultEffect.StateNone : IState<EventRaceResultEffect> // TypeDefIndex: 11021
{
	// Methods

	// RVA: 0x16A11B8 Offset: 0x16A11B8 VA: 0x16A11B8
	public void .ctor() { }

	// RVA: 0x16A1E44 Offset: 0x16A1E44 VA: 0x16A1E44 Slot: 4
	public void begin(EventRaceResultEffect that) { }

	// RVA: 0x16A1E48 Offset: 0x16A1E48 VA: 0x16A1E48 Slot: 5
	public void update(EventRaceResultEffect that) { }

	// RVA: 0x16A1E4C Offset: 0x16A1E4C VA: 0x16A1E4C Slot: 6
	public void end(EventRaceResultEffect that) { }
}

// Namespace: 
private class EventRaceResultEffect.StatePlay : IState<EventRaceResultEffect> // TypeDefIndex: 11022
{
	// Fields
	private SimpleAnimation.State mSimpleAnimState; // 0x10
	private AnimationState mAnimState; // 0x18

	// Methods

	// RVA: 0x16A11C0 Offset: 0x16A11C0 VA: 0x16A11C0
	public void .ctor() { }

	// RVA: 0x16A1E50 Offset: 0x16A1E50 VA: 0x16A1E50 Slot: 4
	public void begin(EventRaceResultEffect that) { }

	// RVA: 0x16A2148 Offset: 0x16A2148 VA: 0x16A2148 Slot: 5
	public void update(EventRaceResultEffect that) { }

	// RVA: 0x16A2314 Offset: 0x16A2314 VA: 0x16A2314 Slot: 6
	public void end(EventRaceResultEffect that) { }
}

// Namespace: 
private class EventRaceResultEffect.StateTouchWait : IState<EventRaceResultEffect> // TypeDefIndex: 11023
{
	// Methods

	// RVA: 0x16A11C8 Offset: 0x16A11C8 VA: 0x16A11C8
	public void .ctor() { }

	// RVA: 0x16A2318 Offset: 0x16A2318 VA: 0x16A2318 Slot: 4
	public void begin(EventRaceResultEffect that) { }

	// RVA: 0x16A235C Offset: 0x16A235C VA: 0x16A235C Slot: 5
	public void update(EventRaceResultEffect that) { }

	// RVA: 0x16A2540 Offset: 0x16A2540 VA: 0x16A2540 Slot: 6
	public void end(EventRaceResultEffect that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45984 Offset: 0xC45984 VA: 0xC45984
private sealed class EventRaceResultEffect.StateTouchWait.<update>c__AnonStorey0 // TypeDefIndex: 11024
{
	// Fields
	internal EventRaceResultEffect that; // 0x10

	// Methods

	// RVA: 0x16A2538 Offset: 0x16A2538 VA: 0x16A2538
	public void .ctor() { }

	// RVA: 0x16A2544 Offset: 0x16A2544 VA: 0x16A2544
	internal void <>m__0() { }
}

// Namespace: 
[ExtensionAttribute] // RVA: 0xC2AA70 Offset: 0xC2AA70 VA: 0xC2AA70
public static class ActionExtensions // TypeDefIndex: 11025
{
	// Methods

	[ExtensionAttribute] // RVA: 0xCD2F48 Offset: 0xCD2F48 VA: 0xCD2F48
