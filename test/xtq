	protected void Callback(SelectMyServantOrNpcDialog.ResultClicked result) { }

	// RVA: 0x1736708 Offset: 0x1736708 VA: 0x1736708
	public void OnClickMyServant() { }

	// RVA: 0x17367A0 Offset: 0x17367A0 VA: 0x17367A0
	public void OnClickNpc() { }

	// RVA: 0x1736838 Offset: 0x1736838 VA: 0x1736838
	public void OnClickCancel() { }
}

// Namespace: 
public sealed class SelectMyServantOrNpcDialog.CallbackFunc : MulticastDelegate // TypeDefIndex: 10527
{
	// Methods

	// RVA: 0x17368D0 Offset: 0x17368D0 VA: 0x17368D0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x17364DC Offset: 0x17364DC VA: 0x17364DC Slot: 11
	public virtual void Invoke(SelectMyServantOrNpcDialog.ResultClicked result) { }

	// RVA: 0x17368E0 Offset: 0x17368E0 VA: 0x17368E0 Slot: 12
	public virtual IAsyncResult BeginInvoke(SelectMyServantOrNpcDialog.ResultClicked result, AsyncCallback callback, object object) { }

	// RVA: 0x173696C Offset: 0x173696C VA: 0x173696C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
protected enum SelectMyServantOrNpcDialog.State // TypeDefIndex: 10528
{
	// Fields
	public int value__; // 0x0
	public const SelectMyServantOrNpcDialog.State INIT = 0;
	public const SelectMyServantOrNpcDialog.State OPEN = 1;
	public const SelectMyServantOrNpcDialog.State INPUT = 2;
	public const SelectMyServantOrNpcDialog.State SELECTED = 3;
	public const SelectMyServantOrNpcDialog.State CLOSE = 4;
}

// Namespace: 
public enum SelectMyServantOrNpcDialog.ResultClicked // TypeDefIndex: 10529
{
	// Fields
	public int value__; // 0x0
	public const SelectMyServantOrNpcDialog.ResultClicked MY_SERVANT = 0;
	public const SelectMyServantOrNpcDialog.ResultClicked NPC = 1;
	public const SelectMyServantOrNpcDialog.ResultClicked CANCEL = 2;
}

// Namespace: 
public class ServantCheckEquipDialog : BaseDialog // TypeDefIndex: 10530
{
	// Fields
	[SerializeField] // RVA: 0xC753C4 Offset: 0xC753C4 VA: 0xC753C4
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC753D4 Offset: 0xC753D4 VA: 0xC753D4
	protected UILabel warningLabel; // 0x60
	[SerializeField] // RVA: 0xC753E4 Offset: 0xC753E4 VA: 0xC753E4
	protected UILabel decideButtonLabel; // 0x68
	[SerializeField] // RVA: 0xC753F4 Offset: 0xC753F4 VA: 0xC753F4
	protected UILabel cancelButtonLabel; // 0x70
	[SerializeField] // RVA: 0xC75404 Offset: 0xC75404 VA: 0xC75404
	protected ServantCheckEquipListViewManager servantEquipListViewManager; // 0x78
	protected ServantCheckEquipDialog.State state; // 0x80
	protected ServantCheckEquipDialog.ClickDelegate closeFunc; // 0x88
	protected Action closeCallbackFunc; // 0x90

	// Methods

	// RVA: 0x13B6B48 Offset: 0x13B6B48 VA: 0x13B6B48
	public void .ctor() { }

	// RVA: 0x13B6BB0 Offset: 0x13B6BB0 VA: 0x13B6BB0
	public void Init() { }

	// RVA: 0x13B6D18 Offset: 0x13B6D18 VA: 0x13B6D18
	public void Open(List<SvtEqCombineListViewItem> materialList, bool isLastCheck, ServantCheckEquipDialog.ClickDelegate closeCallback) { }

	// RVA: 0x13B7270 Offset: 0x13B7270 VA: 0x13B7270
	public void Open(List<ServantOperationListViewItem> materialList, ServantCheckEquipDialog.ClickDelegate closeCallback) { }

	// RVA: 0x13B76E4 Offset: 0x13B76E4 VA: 0x13B76E4
	public void OpenShopLastCheck(ServantCheckEquipDialog.ClickDelegate closeCallback) { }

	// RVA: 0x13B7824 Offset: 0x13B7824 VA: 0x13B7824
	protected void EndOpen() { }

	// RVA: 0x13B7830 Offset: 0x13B7830 VA: 0x13B7830
	public void Close() { }

	// RVA: 0x13B7838 Offset: 0x13B7838 VA: 0x13B7838
	public void Close(Action callback) { }

	// RVA: 0x13B78C8 Offset: 0x13B78C8 VA: 0x13B78C8
	protected void EndClose() { }

	// RVA: 0x13B7904 Offset: 0x13B7904 VA: 0x13B7904
	public void OnClickDecide() { }

	// RVA: 0x13B7BD0 Offset: 0x13B7BD0 VA: 0x13B7BD0
	public void OnClickCancel() { }

	// RVA: 0x13B7C70 Offset: 0x13B7C70 VA: 0x13B7C70
	public void OnEnable() { }
}

// Namespace: 
protected enum ServantCheckEquipDialog.State // TypeDefIndex: 10531
{
	// Fields
	public int value__; // 0x0
	public const ServantCheckEquipDialog.State INIT = 0;
	public const ServantCheckEquipDialog.State OPEN = 1;
	public const ServantCheckEquipDialog.State INPUT = 2;
	public const ServantCheckEquipDialog.State CLOSE = 3;
}

// Namespace: 
public sealed class ServantCheckEquipDialog.ClickDelegate : MulticastDelegate // TypeDefIndex: 10532
{
	// Methods

	// RVA: 0x13B7CF8 Offset: 0x13B7CF8 VA: 0x13B7CF8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x13B79A4 Offset: 0x13B79A4 VA: 0x13B79A4 Slot: 11
	public virtual void Invoke(bool isDecide) { }

	// RVA: 0x13B7D08 Offset: 0x13B7D08 VA: 0x13B7D08 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isDecide, AsyncCallback callback, object object) { }

	// RVA: 0x13B7D98 Offset: 0x13B7D98 VA: 0x13B7D98 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantCheckEquipListViewItem : ListViewItem // TypeDefIndex: 10533
{
	// Fields
	private ServantCheckEquipListViewItem.WarningType warningTextType; // 0x70
	private bool isParty; // 0x74
	private bool isSupport; // 0x75
	private int rarity; // 0x78
	private int partyIndex; // 0x7C
	private UserServantEntity materialUserServantEntity; // 0x80
	private UserServantEntity equipUserServantEntity; // 0x88
	private IconLabelInfo materialIconLabelInfo; // 0x90
	private IconLabelInfo equipSvtIconLabelInfo; // 0x98

	// Properties
	public bool IsParty { get; }
	public bool IsSupport { get; }
	public int PartyIndex { get; }
	public int MaterialServantRarity { get; }
	public UserServantEntity MaterialUserSvtEntity { get; }
	public UserServantEntity EquipUserServantEntity { get; }
	public IconLabelInfo MaterialIconLabelInfo { get; }
	public IconLabelInfo EquipSvtIconLabelInfo { get; }
	public ServantCheckEquipListViewItem.WarningType WarningTextType { get; }

	// Methods

	// RVA: 0x13B7DA4 Offset: 0x13B7DA4 VA: 0x13B7DA4
	public void .ctor(UserServantEntity materialUserSvtEntity, int idx, ServantCheckEquipListViewItem.WarningType warningType) { }

	// RVA: 0x13B7FB0 Offset: 0x13B7FB0 VA: 0x13B7FB0
	public void .ctor(bool isParty, bool isSupport, int partyIndex, long materialUserSvtId, long equipSvtId, ServantCheckEquipListViewItem.WarningType warningType) { }

	// RVA: 0x13B81EC Offset: 0x13B81EC VA: 0x13B81EC Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x13B820C Offset: 0x13B820C VA: 0x13B820C
	public bool get_IsParty() { }

	// RVA: 0x13B8214 Offset: 0x13B8214 VA: 0x13B8214
	public bool get_IsSupport() { }

	// RVA: 0x13B821C Offset: 0x13B821C VA: 0x13B821C
	public int get_PartyIndex() { }

	// RVA: 0x13B8224 Offset: 0x13B8224 VA: 0x13B8224
	public int get_MaterialServantRarity() { }

	// RVA: 0x13B822C Offset: 0x13B822C VA: 0x13B822C
	public UserServantEntity get_MaterialUserSvtEntity() { }

	// RVA: 0x13B8234 Offset: 0x13B8234 VA: 0x13B8234
	public UserServantEntity get_EquipUserServantEntity() { }

	// RVA: 0x13B823C Offset: 0x13B823C VA: 0x13B823C
	public IconLabelInfo get_MaterialIconLabelInfo() { }

	// RVA: 0x13B8244 Offset: 0x13B8244 VA: 0x13B8244
	public IconLabelInfo get_EquipSvtIconLabelInfo() { }

	// RVA: 0x13B824C Offset: 0x13B824C VA: 0x13B824C
	public ServantCheckEquipListViewItem.WarningType get_WarningTextType() { }
}

// Namespace: 
public enum ServantCheckEquipListViewItem.WarningType // TypeDefIndex: 10534
{
	// Fields
	public int value__; // 0x0
	public const ServantCheckEquipListViewItem.WarningType EQUIP = 0;
	public const ServantCheckEquipListViewItem.WarningType COMBINE = 1;
	public const ServantCheckEquipListViewItem.WarningType SSRARE = 2;
	public const ServantCheckEquipListViewItem.WarningType MATERIAL_TD = 3;
}

// Namespace: 
public class ServantCheckEquipListViewItemDraw : MonoBehaviour // TypeDefIndex: 10535
{
	// Fields
	[SerializeField] // RVA: 0xC75414 Offset: 0xC75414 VA: 0xC75414
	protected ServantFaceIconComponent servantEquipIcon; // 0x18
	[SerializeField] // RVA: 0xC75424 Offset: 0xC75424 VA: 0xC75424
	protected UISprite subInfo; // 0x20
	[SerializeField] // RVA: 0xC75434 Offset: 0xC75434 VA: 0xC75434
	protected ServantFaceIconComponent servantFaceIcon; // 0x28
	[SerializeField] // RVA: 0xC75444 Offset: 0xC75444 VA: 0xC75444
	protected UILabel maskLabel; // 0x30
	[SerializeField] // RVA: 0xC75454 Offset: 0xC75454 VA: 0xC75454
	private UISprite equipSprite; // 0x38
	[SerializeField] // RVA: 0xC75464 Offset: 0xC75464 VA: 0xC75464
	private UISprite warningSprite; // 0x40
	[SerializeField] // RVA: 0xC75474 Offset: 0xC75474 VA: 0xC75474
	private UISprite materialTdSprite; // 0x48

	// Methods

	// RVA: 0x13B8254 Offset: 0x13B8254 VA: 0x13B8254
	public void .ctor() { }

	// RVA: 0x13B825C Offset: 0x13B825C VA: 0x13B825C
	public void SetItem(ServantCheckEquipListViewItem item, ServantCheckEquipListViewItemDraw.DispMode mode) { }

	// RVA: 0x13B8704 Offset: 0x13B8704 VA: 0x13B8704
	public void SetInput(ServantCheckEquipListViewItem item) { }
}

// Namespace: 
public enum ServantCheckEquipListViewItemDraw.DispMode // TypeDefIndex: 10536
{
	// Fields
	public int value__; // 0x0
	public const ServantCheckEquipListViewItemDraw.DispMode INVISIBLE = 0;
	public const ServantCheckEquipListViewItemDraw.DispMode INVALID = 1;
	public const ServantCheckEquipListViewItemDraw.DispMode VALID = 2;
	public const ServantCheckEquipListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class ServantCheckEquipListViewManager : ListViewManager // TypeDefIndex: 10537
{
	// Fields
	protected ServantCheckEquipListViewManager.InitMode initMode; // 0x138
	[CompilerGeneratedAttribute] // RVA: 0xC75484 Offset: 0xC75484 VA: 0xC75484
	[DebuggerBrowsableAttribute] // RVA: 0xC75484 Offset: 0xC75484 VA: 0xC75484
	private Action callbackFunc2; // 0x140
	protected int callbackCount; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xC754C0 Offset: 0xC754C0 VA: 0xC754C0
	private static ServantStatusDialog.EndDelegate <>f__am$cache0; // 0x0

	// Properties
	public List<ServantCheckEquipListViewObject> ObjectList { get; }
	public List<ServantCheckEquipListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x13B8708 Offset: 0x13B8708 VA: 0x13B8708
	public void .ctor() { }

	// RVA: 0x13B8710 Offset: 0x13B8710 VA: 0x13B8710
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x13B8800 Offset: 0x13B8800 VA: 0x13B8800
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x13B88F0 Offset: 0x13B88F0 VA: 0x13B88F0
	public List<ServantCheckEquipListViewObject> get_ObjectList() { }

	// RVA: 0x13B8A64 Offset: 0x13B8A64 VA: 0x13B8A64
	public List<ServantCheckEquipListViewObject> get_ClippingObjectList() { }

	// RVA: 0x13B6FF4 Offset: 0x13B6FF4 VA: 0x13B6FF4
	public void CreateList(List<SvtEqCombineListViewItem> materialList) { }

	// RVA: 0x13B74C0 Offset: 0x13B74C0 VA: 0x13B74C0
	public void CreateList(List<ServantOperationListViewItem> materialList) { }

	// RVA: 0x13B8D64 Offset: 0x13B8D64 VA: 0x13B8D64
	public void CreateCombineServantList(List<UserServantEntity> userSvtEntityList) { }

	// RVA: 0x13B8FA4 Offset: 0x13B8FA4 VA: 0x13B8FA4
	public void CreateSSRareServantList(List<UserServantEntity> userSvtEntityList) { }

	// RVA: 0x13B92D0 Offset: 0x13B92D0 VA: 0x13B92D0
	public void CreateMaterialTdServantList(List<UserServantEntity> userSvtEntityList) { }

	// RVA: 0x13B95E4 Offset: 0x13B95E4 VA: 0x13B95E4
	public ServantCheckEquipListViewItem GetItem(int index) { }

	// RVA: 0x13B968C Offset: 0x13B968C VA: 0x13B968C Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x13B97C4 Offset: 0x13B97C4 VA: 0x13B97C4
	public void SetMode(ServantCheckEquipListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x13B71FC Offset: 0x13B71FC VA: 0x13B71FC
	public void SetMode(ServantCheckEquipListViewManager.InitMode mode) { }

	// RVA: 0x13B97CC Offset: 0x13B97CC VA: 0x13B97CC
	protected void RequestListObject(ServantCheckEquipListViewObject.InitMode mode, float delay = 0) { }

	// RVA: 0x13B9A04 Offset: 0x13B9A04 VA: 0x13B9A04
	protected void OnMoveEnd() { }

	// RVA: 0x13B9AD0 Offset: 0x13B9AD0 VA: 0x13B9AD0
	public void OnClickListView(ListViewObject obj) { }

	// RVA: 0x13B8C9C Offset: 0x13B8C9C VA: 0x13B8C9C
	private void SetScrollBarActive(bool isActive) { }

	// RVA: 0x13B9C8C Offset: 0x13B9C8C VA: 0x13B9C8C
	private void SetContentPivot() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1070 Offset: 0xCD1070 VA: 0xCD1070
	// RVA: 0x13B9D14 Offset: 0x13B9D14 VA: 0x13B9D14
	private static void <OnClickListView>m__0(bool isDecide) { }
}

// Namespace: 
public enum ServantCheckEquipListViewManager.InitMode // TypeDefIndex: 10538
{
	// Fields
	public int value__; // 0x0
	public const ServantCheckEquipListViewManager.InitMode NONE = 0;
	public const ServantCheckEquipListViewManager.InitMode INTO = 1;
	public const ServantCheckEquipListViewManager.InitMode VALID = 2;
	public const ServantCheckEquipListViewManager.InitMode INPUT = 3;
	public const ServantCheckEquipListViewManager.InitMode ENTER = 4;
	public const ServantCheckEquipListViewManager.InitMode EXIT = 5;
	public const ServantCheckEquipListViewManager.InitMode MODIFY = 6;
}

// Namespace: 
public class ServantCheckEquipListViewObject : ListViewObject // TypeDefIndex: 10539
{
	// Fields
	protected ServantCheckEquipListViewObject.State state; // 0x6C
	protected ServantCheckEquipListViewItemDraw.DispMode dispMode; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC754D0 Offset: 0xC754D0 VA: 0xC754D0
	[DebuggerBrowsableAttribute] // RVA: 0xC754D0 Offset: 0xC754D0 VA: 0xC754D0
	private Action callbackFunc; // 0x78
	protected ServantCheckEquipListViewItemDraw itemDraw; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x13B9D78 Offset: 0x13B9D78 VA: 0x13B9D78
	public void .ctor() { }

	// RVA: 0x13B9DE0 Offset: 0x13B9DE0 VA: 0x13B9DE0
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x13B9ECC Offset: 0x13B9ECC VA: 0x13B9ECC
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x13B9FB8 Offset: 0x13B9FB8 VA: 0x13B9FB8
	protected void Awake() { }

	// RVA: 0x13B8C18 Offset: 0x13B8C18 VA: 0x13B8C18
	public ServantCheckEquipListViewItem GetItem() { }

	// RVA: 0x13BA02C Offset: 0x13BA02C VA: 0x13BA02C Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x13BA05C Offset: 0x13BA05C VA: 0x13BA05C Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x13BA054 Offset: 0x13BA054 VA: 0x13BA054
	protected void InitItem() { }

	// RVA: 0x13BA084 Offset: 0x13BA084 VA: 0x13BA084 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x13BA134 Offset: 0x13BA134 VA: 0x13BA134
	public void Init(ServantCheckEquipListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x13BA400 Offset: 0x13BA400 VA: 0x13BA400
	public void Init(ServantCheckEquipListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x13B9980 Offset: 0x13B9980 VA: 0x13B9980
	public void Init(ServantCheckEquipListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x13B9744 Offset: 0x13B9744 VA: 0x13B9744
	public void Init(ServantCheckEquipListViewObject.InitMode initMode) { }

	// RVA: 0x13BA2F0 Offset: 0x13BA2F0 VA: 0x13BA2F0
	protected void SetupDisp() { }

	// RVA: 0x13BA484 Offset: 0x13BA484 VA: 0x13BA484 Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum ServantCheckEquipListViewObject.InitMode // TypeDefIndex: 10540
{
	// Fields
	public int value__; // 0x0
	public const ServantCheckEquipListViewObject.InitMode INVISIBLE = 0;
	public const ServantCheckEquipListViewObject.InitMode INVALID = 1;
	public const ServantCheckEquipListViewObject.InitMode VALID = 2;
	public const ServantCheckEquipListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum ServantCheckEquipListViewObject.State // TypeDefIndex: 10541
{
	// Fields
	public int value__; // 0x0
	public const ServantCheckEquipListViewObject.State INIT = 0;
	public const ServantCheckEquipListViewObject.State IDLE = 1;
	public const ServantCheckEquipListViewObject.State INPUT = 2;
}

// Namespace: 
public class ServantCheckWarningDialog : BaseDialog // TypeDefIndex: 10542
{
	// Fields
	private readonly Color DisableColor; // 0x58
	[SerializeField] // RVA: 0xC7550C Offset: 0xC7550C VA: 0xC7550C
	protected UILabel titleLabel; // 0x68
	[SerializeField] // RVA: 0xC7551C Offset: 0xC7551C VA: 0xC7551C
	protected UILabel warningLabel; // 0x70
	[SerializeField] // RVA: 0xC7552C Offset: 0xC7552C VA: 0xC7552C
	protected UILabel reInforeceLabel; // 0x78
	[SerializeField] // RVA: 0xC7553C Offset: 0xC7553C VA: 0xC7553C
	protected UILabel decideButtonLabel; // 0x80
	[SerializeField] // RVA: 0xC7554C Offset: 0xC7554C VA: 0xC7554C
	protected UILabel cancelButtonLabel; // 0x88
	[SerializeField] // RVA: 0xC7555C Offset: 0xC7555C VA: 0xC7555C
	protected ServantCheckEquipListViewManager servantEquipListViewManager; // 0x90
	[SerializeField] // RVA: 0xC7556C Offset: 0xC7556C VA: 0xC7556C
	protected UISprite sliderSprite; // 0x98
	[SerializeField] // RVA: 0xC7557C Offset: 0xC7557C VA: 0xC7557C
	protected UIButtonColor decideButton; // 0xA0
	[SerializeField] // RVA: 0xC7558C Offset: 0xC7558C VA: 0xC7558C
	protected BoxCollider sliderCollider; // 0xA8
	[SerializeField] // RVA: 0xC7559C Offset: 0xC7559C VA: 0xC7559C
	protected BoxCollider sliderThumbCollider; // 0xB0
	[SerializeField] // RVA: 0xC755AC Offset: 0xC755AC VA: 0xC755AC
	protected UISlider checkSlider; // 0xB8
	protected ServantCheckWarningDialog.State state; // 0xC0
	protected ServantCheckWarningDialog.ClickDelegate closeFunc; // 0xC8
	protected Action closeCallbackFunc; // 0xD0

	// Methods

	// RVA: 0x13BA554 Offset: 0x13BA554 VA: 0x13BA554
	public void .ctor() { }

	// RVA: 0x13BA600 Offset: 0x13BA600 VA: 0x13BA600
	public void Init() { }

	// RVA: 0x13BA828 Offset: 0x13BA828 VA: 0x13BA828
	private void SetSlider(bool sliderOn) { }

	// RVA: 0x13BA970 Offset: 0x13BA970 VA: 0x13BA970
	private void OnSliderDragFinished() { }

	// RVA: 0x13BAA08 Offset: 0x13BAA08 VA: 0x13BAA08
	public void OpenSellCombineWarning(List<UserServantEntity> userSvtEntityList, ServantCheckWarningDialog.ClickDelegate closeCallback) { }

	// RVA: 0x13BAC38 Offset: 0x13BAC38 VA: 0x13BAC38
	public void OpenSellSSRareWarning(List<UserServantEntity> userSvtEntityList, ServantCheckWarningDialog.ClickDelegate closeCallback) { }

	// RVA: 0x13BAE68 Offset: 0x13BAE68 VA: 0x13BAE68
	public void OpenSellMaterialTdWarning(List<UserServantEntity> userSvtEntityList, ServantCheckWarningDialog.ClickDelegate closeCallback) { }

	// RVA: 0x13BB098 Offset: 0x13BB098 VA: 0x13BB098
	protected void EndOpen() { }

	// RVA: 0x13BB0A4 Offset: 0x13BB0A4 VA: 0x13BB0A4
	public void Close() { }

	// RVA: 0x13BB0B8 Offset: 0x13BB0B8 VA: 0x13BB0B8
	protected void EndClose() { }

	// RVA: 0x13BB0BC Offset: 0x13BB0BC VA: 0x13BB0BC
	public void OnClickDecide() { }

	// RVA: 0x13BB1CC Offset: 0x13BB1CC VA: 0x13BB1CC
	public void OnClickCancel() { }

	// RVA: 0x13BB290 Offset: 0x13BB290 VA: 0x13BB290
	public void OnEnable() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1080 Offset: 0xCD1080 VA: 0xCD1080
	// RVA: 0x13BB318 Offset: 0x13BB318 VA: 0x13BB318
	private void <OnClickDecide>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1090 Offset: 0xCD1090 VA: 0xCD1090
	// RVA: 0x13BB578 Offset: 0x13BB578 VA: 0x13BB578
	private void <OnClickCancel>m__1() { }
}

// Namespace: 
protected enum ServantCheckWarningDialog.State // TypeDefIndex: 10543
{
	// Fields
	public int value__; // 0x0
	public const ServantCheckWarningDialog.State INIT = 0;
	public const ServantCheckWarningDialog.State OPEN = 1;
	public const ServantCheckWarningDialog.State INPUT = 2;
	public const ServantCheckWarningDialog.State CLOSE = 3;
}

// Namespace: 
public sealed class ServantCheckWarningDialog.ClickDelegate : MulticastDelegate // TypeDefIndex: 10544
{
	// Methods

	// RVA: 0x13BB5AC Offset: 0x13BB5AC VA: 0x13BB5AC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x13BB34C Offset: 0x13BB34C VA: 0x13BB34C Slot: 11
	public virtual void Invoke(bool isDecide) { }

	// RVA: 0x13BB5BC Offset: 0x13BB5BC VA: 0x13BB5BC Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isDecide, AsyncCallback callback, object object) { }

	// RVA: 0x13BB64C Offset: 0x13BB64C VA: 0x13BB64C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class CharaGraphListMenu : BaseMenu // TypeDefIndex: 10545
{
	// Fields
	[SerializeField] // RVA: 0xC755BC Offset: 0xC755BC VA: 0xC755BC
	protected ServantListViewManager servantListViewManager; // 0x58
	[SerializeField] // RVA: 0xC755CC Offset: 0xC755CC VA: 0xC755CC
	protected UILabel servantTabLabel; // 0x60
	[SerializeField] // RVA: 0xC755DC Offset: 0xC755DC VA: 0xC755DC
	protected UILabel servantEquipTabLabel; // 0x68
	[SerializeField] // RVA: 0xC755EC Offset: 0xC755EC VA: 0xC755EC
	protected UILabel commandCodeTabLabel; // 0x70
	[SerializeField] // RVA: 0xC755FC Offset: 0xC755FC VA: 0xC755FC
	protected UISprite servantTabTitleSprite; // 0x78
	[SerializeField] // RVA: 0xC7560C Offset: 0xC7560C VA: 0xC7560C
	protected UISprite servantEquipTabTitleSprite; // 0x80
	[SerializeField] // RVA: 0xC7561C Offset: 0xC7561C VA: 0xC7561C
	protected UISprite commandCodeTabTitleSprite; // 0x88
	[SerializeField] // RVA: 0xC7562C Offset: 0xC7562C VA: 0xC7562C
	protected UISprite servantTabSprite; // 0x90
	[SerializeField] // RVA: 0xC7563C Offset: 0xC7563C VA: 0xC7563C
	protected UISprite servantEquipTabSprite; // 0x98
	[SerializeField] // RVA: 0xC7564C Offset: 0xC7564C VA: 0xC7564C
	protected UISprite commandCodeTabSprite; // 0xA0
	[SerializeField] // RVA: 0xC7565C Offset: 0xC7565C VA: 0xC7565C
	protected UICommonButton servantTabButton; // 0xA8
	[SerializeField] // RVA: 0xC7566C Offset: 0xC7566C VA: 0xC7566C
	protected UICommonButton servantEquipTabButton; // 0xB0
	[SerializeField] // RVA: 0xC7567C Offset: 0xC7567C VA: 0xC7567C
	protected UICommonButton commandCodeTabButton; // 0xB8
	[SerializeField] // RVA: 0xC7568C Offset: 0xC7568C VA: 0xC7568C
	protected UISprite statusTabSprite; // 0xC0
	[SerializeField] // RVA: 0xC7569C Offset: 0xC7569C VA: 0xC7569C
	protected UISprite lockTabSprite; // 0xC8
	[SerializeField] // RVA: 0xC756AC Offset: 0xC756AC VA: 0xC756AC
	protected UISprite choiceTabSprite; // 0xD0
	[SerializeField] // RVA: 0xC756BC Offset: 0xC756BC VA: 0xC756BC
	protected UISprite pushTabSprite; // 0xD8
	[SerializeField] // RVA: 0xC756CC Offset: 0xC756CC VA: 0xC756CC
	protected UISprite scaleChangeTabSprite; // 0xE0
	[SerializeField] // RVA: 0xC756DC Offset: 0xC756DC VA: 0xC756DC
	protected UICommonButton statusTabButton; // 0xE8
	[SerializeField] // RVA: 0xC756EC Offset: 0xC756EC VA: 0xC756EC
	protected UICommonButton lockTabButton; // 0xF0
	[SerializeField] // RVA: 0xC756FC Offset: 0xC756FC VA: 0xC756FC
	protected UICommonButton choiceTabButton; // 0xF8
	[SerializeField] // RVA: 0xC7570C Offset: 0xC7570C VA: 0xC7570C
	protected UICommonButton pushTabButton; // 0x100
	[SerializeField] // RVA: 0xC7571C Offset: 0xC7571C VA: 0xC7571C
	protected UICommonButton scaleChageTabButton; // 0x108
	[SerializeField] // RVA: 0xC7572C Offset: 0xC7572C VA: 0xC7572C
	protected UILabel explanationLabel; // 0x110
	protected CharaGraphListMenu.State state; // 0x118
	protected CharaGraphListMenu.Kind kind; // 0x11C
	[CompilerGeneratedAttribute] // RVA: 0xC7573C Offset: 0xC7573C VA: 0xC7573C
	[DebuggerBrowsableAttribute] // RVA: 0xC7573C Offset: 0xC7573C VA: 0xC7573C
	private CharaGraphListMenu.CallbackFunc callbackFunc; // 0x120
	protected Action closeCallbackFunc; // 0x128
	protected CharaGraphListMenu.TabKind tabKind; // 0x130
	protected CharaGraphListMenu.ModeKind modeKind; // 0x134
	protected bool isInitTab; // 0x138
	protected int selectNum; // 0x13C
	protected CharaGraphListMenu.RequestCallbackFunc requedstCallback; // 0x140

	// Methods

	// RVA: 0x1A46CC0 Offset: 0x1A46CC0 VA: 0x1A46CC0
	public void .ctor() { }

	// RVA: 0x1A46D28 Offset: 0x1A46D28 VA: 0x1A46D28
	protected void add_callbackFunc(CharaGraphListMenu.CallbackFunc value) { }

	// RVA: 0x1A46E18 Offset: 0x1A46E18 VA: 0x1A46E18
	protected void remove_callbackFunc(CharaGraphListMenu.CallbackFunc value) { }

	// RVA: 0x1A46F08 Offset: 0x1A46F08 VA: 0x1A46F08
	public void Init() { }

	// RVA: 0x1A46F54 Offset: 0x1A46F54 VA: 0x1A46F54
	public void Open(CharaGraphListMenu.Kind kind, CharaGraphListMenu.CallbackFunc callback) { }

	// RVA: 0x1A48178 Offset: 0x1A48178 VA: 0x1A48178
	protected void EndOpen() { }

	// RVA: 0x1A48190 Offset: 0x1A48190 VA: 0x1A48190
	public void Close() { }

	// RVA: 0x1A48198 Offset: 0x1A48198 VA: 0x1A48198
	public void Close(Action callback) { }

	// RVA: 0x1A4823C Offset: 0x1A4823C VA: 0x1A4823C
	protected void EndCloseList() { }

	// RVA: 0x1A48240 Offset: 0x1A48240 VA: 0x1A48240
	protected void EndClose() { }

	// RVA: 0x1A47090 Offset: 0x1A47090 VA: 0x1A47090
	protected void SetTabKind(CharaGraphListMenu.TabKind tabKind, CharaGraphListMenu.ModeKind modeKind, bool isInit = False) { }

	// RVA: 0x1A48354 Offset: 0x1A48354 VA: 0x1A48354
	protected void Callback(CharaGraphListMenu.ResultKind result, int n = -1) { }

	// RVA: 0x1A4859C Offset: 0x1A4859C VA: 0x1A4859C
	public void OnClickDecide() { }

	// RVA: 0x1A485D0 Offset: 0x1A485D0 VA: 0x1A485D0
	public void OnClickCancel() { }

	// RVA: 0x1A48604 Offset: 0x1A48604 VA: 0x1A48604
	public void OnClickTabServant() { }

	// RVA: 0x1A489B4 Offset: 0x1A489B4 VA: 0x1A489B4
	protected void EndClickTabServant(bool isRequest) { }

	// RVA: 0x1A489C4 Offset: 0x1A489C4 VA: 0x1A489C4
	public void OnClickTabServantEquip() { }

	// RVA: 0x1A48AA0 Offset: 0x1A48AA0 VA: 0x1A48AA0
	protected void EndClickTabServantEquip(bool isRequest) { }

	// RVA: 0x1A48AF0 Offset: 0x1A48AF0 VA: 0x1A48AF0
	public void OnClickTabCommandCode() { }

	// RVA: 0x1A48BD0 Offset: 0x1A48BD0 VA: 0x1A48BD0
	protected void EndClickTabCommandCode(bool isRequest) { }

	// RVA: 0x1A48BE0 Offset: 0x1A48BE0 VA: 0x1A48BE0
	public void OnClickTabStatus() { }

	// RVA: 0x1A48C98 Offset: 0x1A48C98 VA: 0x1A48C98
	protected void EndClickTabStatus(bool isRequest) { }

	// RVA: 0x1A48D08 Offset: 0x1A48D08 VA: 0x1A48D08
	public void OnClickTabLock() { }

	// RVA: 0x1A48E24 Offset: 0x1A48E24 VA: 0x1A48E24
	protected void EndClickTabLock(bool isRequest) { }

	// RVA: 0x1A48E94 Offset: 0x1A48E94 VA: 0x1A48E94
	public void OnClickTabChoice() { }

	// RVA: 0x1A48FB0 Offset: 0x1A48FB0 VA: 0x1A48FB0
	protected void EndClickTabChoice(bool isRequest) { }

	// RVA: 0x1A49020 Offset: 0x1A49020 VA: 0x1A49020
	public void OnClickTabPush() { }

	// RVA: 0x1A490FC Offset: 0x1A490FC VA: 0x1A490FC
	protected void EndClickTabPush(bool isRequest) { }

	// RVA: 0x1A486F4 Offset: 0x1A486F4 VA: 0x1A486F4
	public void StatusRequest(CharaGraphListMenu.RequestCallbackFunc callback) { }

	// RVA: 0x1A49398 Offset: 0x1A49398 VA: 0x1A49398
	protected void EndStatusSync(string result) { }

	// RVA: 0x1A493B8 Offset: 0x1A493B8 VA: 0x1A493B8
	protected void OnSelectServant(ServantListViewManager.ResultKind kind, int n) { }

	// RVA: 0x1A4A278 Offset: 0x1A4A278 VA: 0x1A4A278
	protected void EndShowServant(bool isDecide, bool isIndividualityChanged, int questId) { }

	// RVA: 0x1A4A3B8 Offset: 0x1A4A3B8 VA: 0x1A4A3B8
	protected void EndShowServantEquip(bool isDecide) { }

	// RVA: 0x1A4A4A4 Offset: 0x1A4A4A4 VA: 0x1A4A4A4
	protected void EndCloseShowServant() { }

	// RVA: 0x1A4A568 Offset: 0x1A4A568 VA: 0x1A4A568
	protected void EndCloseShowServantQuestJump() { }

	// RVA: 0x1A4A590 Offset: 0x1A4A590 VA: 0x1A4A590
	public void OnClickScaleChange() { }

	// RVA: 0x1A4827C Offset: 0x1A4827C VA: 0x1A4827C
	private CharaGraphListMenu.ModeKind HidePushButton(CharaGraphListMenu.ModeKind modeKind, bool isInit) { }

	// RVA: 0x1A49EC0 Offset: 0x1A49EC0 VA: 0x1A49EC0
	private void PushRequest(ServantListViewItem selectItem) { }

	// RVA: 0x1A4A66C Offset: 0x1A4A66C VA: 0x1A4A66C
	private void EndCardFavoriteRequest(string result) { }
}

// Namespace: 
public enum CharaGraphListMenu.Kind // TypeDefIndex: 10546
{
	// Fields
	public int value__; // 0x0
	public const CharaGraphListMenu.Kind EQUIP = 0;
}

// Namespace: 
public enum CharaGraphListMenu.TabKind // TypeDefIndex: 10547
{
	// Fields
	public int value__; // 0x0
	public const CharaGraphListMenu.TabKind SERVANT = 0;
	public const CharaGraphListMenu.TabKind SERVANT_EQUIP = 1;
	public const CharaGraphListMenu.TabKind COMMAND_CODE = 2;
	public const CharaGraphListMenu.TabKind SUM = 3;
}

// Namespace: 
public enum CharaGraphListMenu.ModeKind // TypeDefIndex: 10548
{
	// Fields
	public int value__; // 0x0
	public const CharaGraphListMenu.ModeKind STATUS = 0;
	public const CharaGraphListMenu.ModeKind LOCK = 1;
	public const CharaGraphListMenu.ModeKind CHOICE = 2;
	public const CharaGraphListMenu.ModeKind PUSH = 3;
	public const CharaGraphListMenu.ModeKind SUM = 4;
}

// Namespace: 
public enum CharaGraphListMenu.ResultKind // TypeDefIndex: 10549
{
	// Fields
	public int value__; // 0x0
	public const CharaGraphListMenu.ResultKind CANCEL = 0;
	public const CharaGraphListMenu.ResultKind DECIDE = 1;
	public const CharaGraphListMenu.ResultKind SERVANT_QUEST = 2;
}

// Namespace: 
protected enum CharaGraphListMenu.State // TypeDefIndex: 10550
{
	// Fields
	public int value__; // 0x0
	public const CharaGraphListMenu.State INIT = 0;
	public const CharaGraphListMenu.State OPEN = 1;
	public const CharaGraphListMenu.State INPUT = 2;
	public const CharaGraphListMenu.State SELECTED = 3;
	public const CharaGraphListMenu.State CLOSE = 4;
	public const CharaGraphListMenu.State EQUIP_SELECT = 5;
	public const CharaGraphListMenu.State SHOW_STATUS = 6;
}

// Namespace: 
public sealed class CharaGraphListMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10551
{
	// Methods

	// RVA: 0x1A4A8A4 Offset: 0x1A4A8A4 VA: 0x1A4A8A4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1A48370 Offset: 0x1A48370 VA: 0x1A48370 Slot: 11
	public virtual void Invoke(CharaGraphListMenu.ResultKind result) { }

	// RVA: 0x1A4A8B4 Offset: 0x1A4A8B4 VA: 0x1A4A8B4 Slot: 12
	public virtual IAsyncResult BeginInvoke(CharaGraphListMenu.ResultKind result, AsyncCallback callback, object object) { }

	// RVA: 0x1A4A940 Offset: 0x1A4A940 VA: 0x1A4A940 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class CharaGraphListMenu.RequestCallbackFunc : MulticastDelegate // TypeDefIndex: 10552
{
	// Methods

	// RVA: 0x1A486E4 Offset: 0x1A486E4 VA: 0x1A486E4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1A4916C Offset: 0x1A4916C VA: 0x1A4916C Slot: 11
	public virtual void Invoke(bool isRequest) { }

	// RVA: 0x1A4A94C Offset: 0x1A4A94C VA: 0x1A4A94C Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isRequest, AsyncCallback callback, object object) { }

	// RVA: 0x1A4A9DC Offset: 0x1A4A9DC VA: 0x1A4A9DC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC453A4 Offset: 0xC453A4 VA: 0xC453A4
private sealed class CharaGraphListMenu.<OnSelectServant>c__AnonStorey0 // TypeDefIndex: 10553
{
	// Fields
	internal ServantListViewItem item; // 0x10
	internal CharaGraphListMenu $this; // 0x18

	// Methods

	// RVA: 0x1A49EB8 Offset: 0x1A49EB8 VA: 0x1A49EB8
	public void .ctor() { }

	// RVA: 0x1A4A728 Offset: 0x1A4A728 VA: 0x1A4A728
	internal void <>m__0(bool isDecide) { }

	// RVA: 0x1A4A874 Offset: 0x1A4A874 VA: 0x1A4A874
	internal void <>m__1() { }
}

// Namespace: 
public class ServantListRootComponent : SceneRootComponent // TypeDefIndex: 10554
{
	// Fields
	[SerializeField] // RVA: 0xC75778 Offset: 0xC75778 VA: 0xC75778
	protected UISkinSprite backSkinSprite; // 0x38
	[SerializeField] // RVA: 0xC75788 Offset: 0xC75788 VA: 0xC75788
	protected CharaGraphListMenu charaGraphListMenu; // 0x40
	[SerializeField] // RVA: 0xC75798 Offset: 0xC75798 VA: 0xC75798
	protected TitleInfoControl titleInfo; // 0x48
	[SerializeField] // RVA: 0xC757A8 Offset: 0xC757A8 VA: 0xC757A8
	protected UISprite bgTxtSprite; // 0x50
	protected ServantListRootComponent.State state; // 0x58

	// Methods

	// RVA: 0x16CC9AC Offset: 0x16CC9AC VA: 0x16CC9AC
	public void .ctor() { }

	// RVA: 0x16CC9B4 Offset: 0x16CC9B4 VA: 0x16CC9B4 Slot: 4
	public override void beginInitialize() { }

	// RVA: 0x16CCA28 Offset: 0x16CCA28 VA: 0x16CCA28 Slot: 6
	public override void beginStartUp() { }

	// RVA: 0x16CCC24 Offset: 0x16CCC24 VA: 0x16CCC24
	protected void EndLoadCommonBg() { }

	// RVA: 0x16CCCF0 Offset: 0x16CCCF0 VA: 0x16CCCF0
	protected void EndLoadOutGameIconAtlas() { }

	// RVA: 0x16CCCF8 Offset: 0x16CCCF8 VA: 0x16CCCF8 Slot: 7
	public override void beginFinish() { }

	// RVA: 0x16CCDBC Offset: 0x16CCDBC VA: 0x16CCDBC
	public void Init() { }

	// RVA: 0x16CCE70 Offset: 0x16CCE70 VA: 0x16CCE70
	public void Quit() { }

	// RVA: 0x16CCEA4 Offset: 0x16CCEA4 VA: 0x16CCEA4
	public void SelectServantList(CharaGraphListMenu.ResultKind result) { }

	// RVA: 0x16CCF6C Offset: 0x16CCF6C VA: 0x16CCF6C
	public void ExitList() { }

	// RVA: 0x16CCFFC Offset: 0x16CCFFC VA: 0x16CCFFC
	protected void EndExitList(bool isRrquest) { }

	// RVA: 0x16CD000 Offset: 0x16CD000 VA: 0x16CD000
	public void OnClickBack() { }

	// RVA: 0x16CD0BC Offset: 0x16CD0BC VA: 0x16CD0BC
	protected void EndClickBackRequest(bool isRrquest) { }

	// RVA: 0x16CD174 Offset: 0x16CD174 VA: 0x16CD174
	protected void EndServantQuestRequest(bool isRrquest) { }
}

// Namespace: 
protected enum ServantListRootComponent.State // TypeDefIndex: 10555
{
	// Fields
	public int value__; // 0x0
	public const ServantListRootComponent.State INIT = 0;
	public const ServantListRootComponent.State INIT_TOP = 1;
}

// Namespace: 
public class ServantListViewItem : ListViewItem // TypeDefIndex: 10556
{
	// Fields
	protected UserServantEntity userSvtEntity; // 0x70
	protected ServantEntity servantEntity; // 0x78
	protected ObscuredInt svtId; // 0x80
	protected UserCommandCodeEntity userCommandCodeEntity; // 0x90
	protected CommandCodeEntity commandCodeEntity; // 0x98
	protected ObscuredInt commandCodeId; // 0xA0
	private EventUpValSetupInfo setupInfo; // 0xB0
	private ListViewSort.BonusFilterKind bonusKind; // 0xB8
	private int bonusKindId; // 0xBC
	protected int classId; // 0xC0
	protected int rarity; // 0xC4
	protected ObscuredInt friendship; // 0xC8
	protected int friendshipMax; // 0xD8
	protected int partyIndex; // 0xDC
	protected bool isPartyEquip; // 0xE0
	protected bool isUse; // 0xE1
	protected bool isLock; // 0xE2
	protected bool isChoice; // 0xE3
	protected bool isLeave; // 0xE4
	protected bool isEventJoin; // 0xE5
	protected bool isPush; // 0xE6
	protected bool isEnabled; // 0xE7
	private bool isFriendShipSvtEq; // 0xE8
	private bool isChocolateSvtEquip; // 0xE9
	private bool isMaterialTdSvt; // 0xEA
	protected int priority; // 0xEC
	protected IconLabelInfo iconLabelInfo1; // 0xF0
	protected IconLabelInfo iconLabelInfo2; // 0xF8
	protected long amountSortValue; // 0x100
	protected bool isSwapLock; // 0x108
	protected bool isSwapChoice; // 0x109
	private int hpReinforceValue; // 0x10C
	private int atkReinforceValue; // 0x110
	private int nowMaxHpReinforceValue; // 0x114
	private int nowMaxAtkReinforceValue; // 0x118
	protected int[] equipCategoryIdList; // 0x120
	protected int[] commandCodeCategoryIdList; // 0x128
	private bool isNeedAdjustIconLabelScale; // 0x130

	// Properties
	public UserServantEntity UserServant { get; }
	public ServantEntity Servant { get; }
	public int SvtId { get; }
	public UserCommandCodeEntity UserCommandCode { get; }
	public CommandCodeEntity CommandCode { get; }
	public int CommandCodeId { get; }
	public string NameText { get; }
	public bool IsParty { get; }
	public bool IsUse { get; }
	public bool IsPartyEquip { get; }
	public bool IsLock { get; }
	public bool IsSwapLock { get; }
	public bool IsDispLock { get; }
	public bool IsChoice { get; }
	public bool IsSwapChoice { get; }
	public bool IsDispChoice { get; }
	public bool IsLeave { get; }
	public bool IsCanNotSelect { get; }
	public IconLabelInfo IconInfo1 { get; }
	public IconLabelInfo IconInfo2 { get; }
	public bool IsFriendShipSvtEq { get; }
	public bool IsChocolateSvtEquip { get; }
	public bool IsMaterialTdSvt { get; }
	public bool IsEventJoin { get; }
	public bool IsPush { get; set; }
	public bool IsEnabled { get; set; }
	public bool IsNeedAdjustIconLabelScale { get; }

	// Methods

	// RVA: 0x16CD1E4 Offset: 0x16CD1E4 VA: 0x16CD1E4
	public void .ctor(int index, UserServantEntity userSvtEntity, long[] partyUserServantList, long[] partyUserEquipList, EventUpValSetupInfo setupInfo) { }

	// RVA: 0x16CD990 Offset: 0x16CD990 VA: 0x16CD990
	public void .ctor(int index, UserCommandCodeEntity userCommandCodeEntity, long[] attachUserCommandCodeList) { }

	// RVA: 0x16CDD24 Offset: 0x16CDD24 VA: 0x16CDD24
	public void Modify(UserServantEntity userSvtEntity) { }

	// RVA: 0x16CDDEC Offset: 0x16CDDEC VA: 0x16CDDEC
	public void Modify(UserCommandCodeEntity userCommandCodeEntity) { }

	// RVA: 0x16CDD4C Offset: 0x16CDD4C VA: 0x16CDD4C
	public void ModifyUserServantEntity(UserServantEntity userServantEntity) { }

	// RVA: 0x16CDE14 Offset: 0x16CDE14 VA: 0x16CDE14
	public void ModifyUserCommandCodeEntity(UserCommandCodeEntity userCommandCodeEntity) { }

	// RVA: 0x16CDD54 Offset: 0x16CDD54 VA: 0x16CDD54
	public void ModifyLockItem() { }

	// RVA: 0x16CDDA0 Offset: 0x16CDDA0 VA: 0x16CDDA0
	public void ModifyChoiceItem() { }
