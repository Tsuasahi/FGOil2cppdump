public class UIPanel : UIRect // TypeDefIndex: 7859
{
	// Fields
	[HideInInspector] // RVA: 0xC57850 Offset: 0xC57850 VA: 0xC57850
	[SerializeField] // RVA: 0xC57850 Offset: 0xC57850 VA: 0xC57850
	private float mClipTextureRotation; // 0x8C
	public static List<UIPanel> list; // 0x0
	public static HashSet<UIPanel> updateAgainPanels; // 0x8
	public UIPanel.OnGeometryUpdated onGeometryUpdated; // 0x90
	public bool showInPanelTool; // 0x98
	public bool generateNormals; // 0x99
	public bool widgetsAreStatic; // 0x9A
	public bool cullWhileDragging; // 0x9B
	public bool alwaysOnScreen; // 0x9C
	public bool anchorOffset; // 0x9D
	public bool softBorderPadding; // 0x9E
	public UIPanel.RenderQueue renderQueue; // 0xA0
	public int startingRenderQueue; // 0xA4
	public List<UIWidget> widgets; // 0xA8
	public List<UIDrawCall> drawCalls; // 0xB0
	public Matrix4x4 worldToLocal; // 0xB8
	public Vector4 drawCallClipRange; // 0xF8
	public UIPanel.OnClippingMoved onClipMove; // 0x108
	[HideInInspector] // RVA: 0xC57888 Offset: 0xC57888 VA: 0xC57888
	[SerializeField] // RVA: 0xC57888 Offset: 0xC57888 VA: 0xC57888
	private Texture2D mClipTexture; // 0x110
	[HideInInspector] // RVA: 0xC578C0 Offset: 0xC578C0 VA: 0xC578C0
	[SerializeField] // RVA: 0xC578C0 Offset: 0xC578C0 VA: 0xC578C0
	private float mAlpha; // 0x118
	[HideInInspector] // RVA: 0xC578F8 Offset: 0xC578F8 VA: 0xC578F8
	[SerializeField] // RVA: 0xC578F8 Offset: 0xC578F8 VA: 0xC578F8
	private UIDrawCall.Clipping mClipping; // 0x11C
	[HideInInspector] // RVA: 0xC57930 Offset: 0xC57930 VA: 0xC57930
	[SerializeField] // RVA: 0xC57930 Offset: 0xC57930 VA: 0xC57930
	private Vector4 mClipRange; // 0x120
	[HideInInspector] // RVA: 0xC57968 Offset: 0xC57968 VA: 0xC57968
	[SerializeField] // RVA: 0xC57968 Offset: 0xC57968 VA: 0xC57968
	private Vector2 mClipSoftness; // 0x130
	[HideInInspector] // RVA: 0xC579A0 Offset: 0xC579A0 VA: 0xC579A0
	[SerializeField] // RVA: 0xC579A0 Offset: 0xC579A0 VA: 0xC579A0
	private int mDepth; // 0x138
	[HideInInspector] // RVA: 0xC579D8 Offset: 0xC579D8 VA: 0xC579D8
	[SerializeField] // RVA: 0xC579D8 Offset: 0xC579D8 VA: 0xC579D8
	private int mSortingOrder; // 0x13C
	private bool mRebuild; // 0x140
	private bool mResized; // 0x141
	[SerializeField] // RVA: 0xC57A10 Offset: 0xC57A10 VA: 0xC57A10
	private Vector2 mClipOffset; // 0x144
	private float mCullTime; // 0x14C
	private float mUpdateTime; // 0x150
	private int mUpdatedFrame; // 0x154
	private int mMatrixFrame; // 0x158
	private int mAlphaFrameID; // 0x15C
	private int mLayer; // 0x160
	private static float[] mTemp; // 0x10
	private Vector2 mMin; // 0x164
	private Vector2 mMax; // 0x16C
	private bool mHalfPixelOffset; // 0x174
	private bool mSortWidgets; // 0x175
	private bool mUpdateScroll; // 0x176
	private UIPanel mParentPanel; // 0x178
	private static Vector3[] mCorners; // 0x18
	private static int mUpdateFrame; // 0x20
	public static bool mUpdating; // 0x24
	private UIDrawCall.OnRenderCallback mOnRender; // 0x180
	private bool mForced; // 0x188
	[CompilerGeneratedAttribute] // RVA: 0xC57A20 Offset: 0xC57A20 VA: 0xC57A20
	private static Comparison<UIPanel> <>f__mg$cache0; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC57A30 Offset: 0xC57A30 VA: 0xC57A30
	private static Comparison<UIPanel> <>f__mg$cache1; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC57A40 Offset: 0xC57A40 VA: 0xC57A40
	private static Comparison<UIWidget> <>f__mg$cache2; // 0x38

	// Properties
	public float clipTextureRotation { get; set; }
	public Vector4 clipTextureRotationInfo { get; }
	public bool IsUpdated { get; }
	public static int nextUnusedDepth { get; }
	public override bool canBeAnchored { get; }
	public override float alpha { get; set; }
	public int depth { get; set; }
	public int sortingOrder { get; set; }
	public float width { get; }
	public float height { get; }
	public bool halfPixelOffset { get; }
	public bool usedForUI { get; }
	public Vector3 drawCallOffset { get; }
	public UIDrawCall.Clipping clipping { get; set; }
	public UIPanel parentPanel { get; }
	public int clipCount { get; }
	public bool hasClipping { get; }
	public bool hasCumulativeClipping { get; }
	[ObsoleteAttribute] // RVA: 0xCDEA60 Offset: 0xCDEA60 VA: 0xCDEA60
	public bool clipsChildren { get; }
	public Vector2 clipOffset { get; set; }
	public Texture2D clipTexture { get; set; }
	[ObsoleteAttribute] // RVA: 0xCDEA98 Offset: 0xCDEA98 VA: 0xCDEA98
	public Vector4 clipRange { get; set; }
	public Vector4 baseClipRegion { get; set; }
	public Vector4 finalClipRegion { get; }
	public Vector2 clipSoftness { get; set; }
	public override Vector3[] localCorners { get; }
	public override Vector3[] worldCorners { get; }

	// Methods

	// RVA: 0x1C3F638 Offset: 0x1C3F638 VA: 0x1C3F638
	public void .ctor() { }

	// RVA: 0x1C3F970 Offset: 0x1C3F970 VA: 0x1C3F970
	public float get_clipTextureRotation() { }

	// RVA: 0x1C3F978 Offset: 0x1C3F978 VA: 0x1C3F978
	public void set_clipTextureRotation(float value) { }

	// RVA: 0x1C3F98C Offset: 0x1C3F98C VA: 0x1C3F98C
	public Vector4 get_clipTextureRotationInfo() { }

	// RVA: 0x1C3F9CC Offset: 0x1C3F9CC VA: 0x1C3F9CC
	public bool get_IsUpdated() { }

	// RVA: 0x1C3FA44 Offset: 0x1C3FA44 VA: 0x1C3FA44
	public static int get_nextUnusedDepth() { }

	// RVA: 0x1C3FBAC Offset: 0x1C3FBAC VA: 0x1C3FBAC Slot: 6
	public override bool get_canBeAnchored() { }

	// RVA: 0x1C3FBBC Offset: 0x1C3FBBC VA: 0x1C3FBBC Slot: 7
	public override float get_alpha() { }

	// RVA: 0x1C3FBC4 Offset: 0x1C3FBC4 VA: 0x1C3FBC4 Slot: 8
	public override void set_alpha(float value) { }

	// RVA: 0x1C3FBA4 Offset: 0x1C3FBA4 VA: 0x1C3FBA4
	public int get_depth() { }

	// RVA: 0x1C3FD4C Offset: 0x1C3FD4C VA: 0x1C3FD4C
	public void set_depth(int value) { }

	// RVA: 0x1C3FE84 Offset: 0x1C3FE84 VA: 0x1C3FE84
	public int get_sortingOrder() { }

	// RVA: 0x1C3FE8C Offset: 0x1C3FE8C VA: 0x1C3FE8C
	public void set_sortingOrder(int value) { }

	// RVA: 0x1C4037C Offset: 0x1C4037C VA: 0x1C4037C
	public static int CompareFunc(UIPanel a, UIPanel b) { }

	// RVA: 0x1C404C4 Offset: 0x1C404C4 VA: 0x1C404C4
	public float get_width() { }

	// RVA: 0x1C40564 Offset: 0x1C40564 VA: 0x1C40564
	public float get_height() { }

	// RVA: 0x1C4057C Offset: 0x1C4057C VA: 0x1C4057C
	public bool get_halfPixelOffset() { }

	// RVA: 0x1C40584 Offset: 0x1C40584 VA: 0x1C40584
	public bool get_usedForUI() { }

	// RVA: 0x1C40664 Offset: 0x1C40664 VA: 0x1C40664
	public Vector3 get_drawCallOffset() { }

	// RVA: 0x1C40B3C Offset: 0x1C40B3C VA: 0x1C40B3C
	public UIDrawCall.Clipping get_clipping() { }

	// RVA: 0x1C40B44 Offset: 0x1C40B44 VA: 0x1C40B44
	public void set_clipping(UIDrawCall.Clipping value) { }

	// RVA: 0x1C40B68 Offset: 0x1C40B68 VA: 0x1C40B68
	public UIPanel get_parentPanel() { }

	// RVA: 0x1C40B70 Offset: 0x1C40B70 VA: 0x1C40B70
	public int get_clipCount() { }

	// RVA: 0x1C40C1C Offset: 0x1C40C1C VA: 0x1C40C1C
	public bool get_hasClipping() { }

	// RVA: 0x1C40C30 Offset: 0x1C40C30 VA: 0x1C40C30
	public bool get_hasCumulativeClipping() { }

	// RVA: 0x1C40C4C Offset: 0x1C40C4C VA: 0x1C40C4C
	public bool get_clipsChildren() { }

	// RVA: 0x1C40C68 Offset: 0x1C40C68 VA: 0x1C40C68
	public Vector2 get_clipOffset() { }

	// RVA: 0x1C40C74 Offset: 0x1C40C74 VA: 0x1C40C74
	public void set_clipOffset(Vector2 value) { }

	// RVA: 0x1C40D68 Offset: 0x1C40D68 VA: 0x1C40D68
	private void InvalidateClipping() { }

	// RVA: 0x1C412D0 Offset: 0x1C412D0 VA: 0x1C412D0
	public Texture2D get_clipTexture() { }

	// RVA: 0x1C412D8 Offset: 0x1C412D8 VA: 0x1C412D8
	public void set_clipTexture(Texture2D value) { }

	// RVA: 0x1C41360 Offset: 0x1C41360 VA: 0x1C41360
	public Vector4 get_clipRange() { }

	// RVA: 0x1C41388 Offset: 0x1C41388 VA: 0x1C41388
	public void set_clipRange(Vector4 value) { }

	// RVA: 0x1C41374 Offset: 0x1C41374 VA: 0x1C41374
	public Vector4 get_baseClipRegion() { }

	// RVA: 0x1C4138C Offset: 0x1C4138C VA: 0x1C4138C
	public void set_baseClipRegion(Vector4 value) { }

	// RVA: 0x1C41588 Offset: 0x1C41588 VA: 0x1C41588
	public Vector4 get_finalClipRegion() { }

	// RVA: 0x1C41604 Offset: 0x1C41604 VA: 0x1C41604
	public Vector2 get_clipSoftness() { }

	// RVA: 0x1C41610 Offset: 0x1C41610 VA: 0x1C41610
	public void set_clipSoftness(Vector2 value) { }

	// RVA: 0x1C416B4 Offset: 0x1C416B4 VA: 0x1C416B4 Slot: 10
	public override Vector3[] get_localCorners() { }

	// RVA: 0x1C41A60 Offset: 0x1C41A60 VA: 0x1C41A60 Slot: 11
	public override Vector3[] get_worldCorners() { }

	// RVA: 0x1C4246C Offset: 0x1C4246C VA: 0x1C4246C Slot: 13
	public override Vector3[] GetSides(Transform relativeTo) { }

	// RVA: 0x1C42D80 Offset: 0x1C42D80 VA: 0x1C42D80 Slot: 12
	public override void Invalidate(bool includeChildren) { }

	// RVA: 0x1C42E50 Offset: 0x1C42E50 VA: 0x1C42E50 Slot: 9
	public override float CalculateFinalAlpha(int frameID) { }

	// RVA: 0x1C42FF0 Offset: 0x1C42FF0 VA: 0x1C42FF0 Slot: 18
	public override void SetRect(float x, float y, float width, float height) { }

	// RVA: 0x1C43808 Offset: 0x1C43808 VA: 0x1C43808
	public bool IsVisible(Vector3 a, Vector3 b, Vector3 c, Vector3 d) { }

	// RVA: 0x1C43CF0 Offset: 0x1C43CF0 VA: 0x1C43CF0
	public bool IsVisible(Vector3 worldPos) { }

	// RVA: 0x1C43DAC Offset: 0x1C43DAC VA: 0x1C43DAC
	public bool IsVisible(UIWidget w) { }

	// RVA: 0x1C43F8C Offset: 0x1C43F8C VA: 0x1C43F8C
	public bool Affects(UIWidget w) { }

	[ContextMenu] // RVA: 0xCCAE10 Offset: 0xCCAE10 VA: 0xCCAE10
	// RVA: 0x1C440D8 Offset: 0x1C440D8 VA: 0x1C440D8
	public void RebuildAllDrawCalls() { }

	// RVA: 0x1C3FC70 Offset: 0x1C3FC70 VA: 0x1C3FC70
	public void SetDirty() { }

	// RVA: 0x1C440E4 Offset: 0x1C440E4 VA: 0x1C440E4
	private void Awake() { }

	// RVA: 0x1C441DC Offset: 0x1C441DC VA: 0x1C441DC
	private void FindParent() { }

	// RVA: 0x1C442EC Offset: 0x1C442EC VA: 0x1C442EC Slot: 19
	public override void ParentHasChanged() { }

	// RVA: 0x1C444DC Offset: 0x1C444DC VA: 0x1C444DC Slot: 20
	protected override void OnStart() { }

	// RVA: 0x1C44518 Offset: 0x1C44518 VA: 0x1C44518 Slot: 14
	protected override void OnEnable() { }

	// RVA: 0x1C44664 Offset: 0x1C44664 VA: 0x1C44664 Slot: 15
	protected override void OnInit() { }

	// RVA: 0x1C44AB4 Offset: 0x1C44AB4 VA: 0x1C44AB4 Slot: 16
	protected override void OnDisable() { }

	// RVA: 0x1C43BC8 Offset: 0x1C43BC8 VA: 0x1C43BC8
	private void UpdateTransformMatrix() { }

	// RVA: 0x1C44DF8 Offset: 0x1C44DF8 VA: 0x1C44DF8 Slot: 17
	protected override void OnAnchor() { }

	// RVA: 0x1C45CCC Offset: 0x1C45CCC VA: 0x1C45CCC
	private void LateUpdate() { }

	// RVA: 0x1C4621C Offset: 0x1C4621C VA: 0x1C4621C
	private void UpdateSelf() { }

	// RVA: 0x1C47350 Offset: 0x1C47350 VA: 0x1C47350
	public void SortWidgets() { }

	// RVA: 0x1C4694C Offset: 0x1C4694C VA: 0x1C4694C
	private void FillAllDrawCalls() { }

	// RVA: 0x1C47028 Offset: 0x1C47028 VA: 0x1C47028
	private bool FillDrawCall(UIDrawCall dc) { }

	// RVA: 0x1C3FEA4 Offset: 0x1C3FEA4 VA: 0x1C3FEA4
	private void UpdateDrawCalls() { }

	// RVA: 0x1C46444 Offset: 0x1C46444 VA: 0x1C46444
	private void UpdateLayers() { }

	// RVA: 0x1C466A8 Offset: 0x1C466A8 VA: 0x1C466A8
	private void UpdateWidgets() { }

	// RVA: 0x1C477C0 Offset: 0x1C477C0 VA: 0x1C477C0
	public UIDrawCall FindDrawCall(UIWidget w) { }

	// RVA: 0x1C47CC8 Offset: 0x1C47CC8 VA: 0x1C47CC8
	public void AddWidget(UIWidget w) { }

	// RVA: 0x1C47E9C Offset: 0x1C47E9C VA: 0x1C47E9C
	public void RemoveWidget(UIWidget w) { }

	// RVA: 0x1C47FC4 Offset: 0x1C47FC4 VA: 0x1C47FC4
	public void Refresh() { }

	// RVA: 0x1C480C8 Offset: 0x1C480C8 VA: 0x1C480C8 Slot: 22
	public virtual Vector3 CalculateConstrainOffset(Vector2 min, Vector2 max) { }

	// RVA: 0x1C48250 Offset: 0x1C48250 VA: 0x1C48250
	public bool ConstrainTargetToBounds(Transform target, ref Bounds targetBounds, bool immediate) { }

	// RVA: 0x1C486C4 Offset: 0x1C486C4 VA: 0x1C486C4
	public bool ConstrainTargetToBounds(Transform target, bool immediate) { }

	// RVA: 0x1C4873C Offset: 0x1C4873C VA: 0x1C4873C
	public static UIPanel Find(Transform trans) { }

	// RVA: 0x1C488BC Offset: 0x1C488BC VA: 0x1C488BC
	public static UIPanel Find(Transform trans, bool createIfMissing) { }

	// RVA: 0x1C487A8 Offset: 0x1C487A8 VA: 0x1C487A8
	public static UIPanel Find(Transform trans, bool createIfMissing, int layer) { }

	// RVA: 0x1C40814 Offset: 0x1C40814 VA: 0x1C40814
	public Vector2 GetWindowSize() { }

	// RVA: 0x1C404C8 Offset: 0x1C404C8 VA: 0x1C404C8
	public Vector2 GetViewSize() { }

	// RVA: 0x1C48A00 Offset: 0x1C48A00 VA: 0x1C48A00
	public void EndShowOverWriteRange(float overWriteValue) { }

	// RVA: 0x1C48A08 Offset: 0x1C48A08 VA: 0x1C48A08
	private static void .cctor() { }
}

// Namespace: 
public enum UIPanel.RenderQueue // TypeDefIndex: 7860
{
	// Fields
	public int value__; // 0x0
	public const UIPanel.RenderQueue Automatic = 0;
	public const UIPanel.RenderQueue StartAt = 1;
	public const UIPanel.RenderQueue Explicit = 2;
}

// Namespace: 
public sealed class UIPanel.OnGeometryUpdated : MulticastDelegate // TypeDefIndex: 7861
{
	// Methods

	// RVA: 0x1C48B40 Offset: 0x1C48B40 VA: 0x1C48B40
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1C47AC8 Offset: 0x1C47AC8 VA: 0x1C47AC8 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1C48B50 Offset: 0x1C48B50 VA: 0x1C48B50 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1C48B84 Offset: 0x1C48B84 VA: 0x1C48B84 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UIPanel.OnClippingMoved : MulticastDelegate // TypeDefIndex: 7862
{
	// Methods

	// RVA: 0x1C48B00 Offset: 0x1C48B00 VA: 0x1C48B00
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1C40F30 Offset: 0x1C40F30 VA: 0x1C40F30 Slot: 11
	public virtual void Invoke(UIPanel panel) { }

	// RVA: 0x1C48B10 Offset: 0x1C48B10 VA: 0x1C48B10 Slot: 12
	public virtual IAsyncResult BeginInvoke(UIPanel panel, AsyncCallback callback, object object) { }

	// RVA: 0x1C48B34 Offset: 0x1C48B34 VA: 0x1C48B34 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC25DA8 Offset: 0xC25DA8 VA: 0xC25DA8
public class UIPlaySystemSe : MonoBehaviour // TypeDefIndex: 7863
{
	// Fields
	public SeManager.SystemSeKind kind; // 0x18
	public UIPlaySystemSe.Trigger trigger; // 0x1C
	private bool mIsOver; // 0x20

	// Methods

	// RVA: 0x1C4A530 Offset: 0x1C4A530 VA: 0x1C4A530
	public void .ctor() { }

	// RVA: 0x1C4A538 Offset: 0x1C4A538 VA: 0x1C4A538
	private void OnHover(bool isOver) { }

	// RVA: 0x1C4A610 Offset: 0x1C4A610 VA: 0x1C4A610
	private void OnPress(bool isPressed) { }

	// RVA: 0x1C4A6E8 Offset: 0x1C4A6E8 VA: 0x1C4A6E8
	private void OnClick() { }

	// RVA: 0x1C4A778 Offset: 0x1C4A778 VA: 0x1C4A778
	private void OnSelect(bool isSelected) { }

	// RVA: 0x1C4A824 Offset: 0x1C4A824 VA: 0x1C4A824
	public void Play() { }
}

// Namespace: 
public enum UIPlaySystemSe.Trigger // TypeDefIndex: 7864
{
	// Fields
	public int value__; // 0x0
	public const UIPlaySystemSe.Trigger OnClick = 0;
	public const UIPlaySystemSe.Trigger OnMouseOver = 1;
	public const UIPlaySystemSe.Trigger OnMouseOut = 2;
	public const UIPlaySystemSe.Trigger OnPress = 3;
	public const UIPlaySystemSe.Trigger OnRelease = 4;
	public const UIPlaySystemSe.Trigger Custom = 5;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC25DE0 Offset: 0xC25DE0 VA: 0xC25DE0
[AddComponentMenu] // RVA: 0xC25DE0 Offset: 0xC25DE0 VA: 0xC25DE0
public class UIRotSprite : UISprite // TypeDefIndex: 7865
{
	// Fields
	private Rect mOuterUV; // 0x1EC

	// Properties
	private Vector4 drawingUVs { get; }
	private Color32 drawingColor { get; }

	// Methods

	// RVA: 0x1C547BC Offset: 0x1C547BC VA: 0x1C547BC
	public void .ctor() { }

	// RVA: 0x1C547D4 Offset: 0x1C547D4 VA: 0x1C547D4
	private Vector4 get_drawingUVs() { }

	// RVA: 0x1C5491C Offset: 0x1C5491C VA: 0x1C5491C
	private Color32 get_drawingColor() { }

	// RVA: 0x1C54A74 Offset: 0x1C54A74 VA: 0x1C54A74 Slot: 38
	public override void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }

	// RVA: 0x1C54E90 Offset: 0x1C54E90 VA: 0x1C54E90
	private void RotFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols, Rect outer, Rect inner) { }
}

// Namespace: 
public class UISkinSprite : UISprite // TypeDefIndex: 7866
{
	// Fields
	[HideInInspector] // RVA: 0xC57A50 Offset: 0xC57A50 VA: 0xC57A50
	[SerializeField] // RVA: 0xC57A50 Offset: 0xC57A50 VA: 0xC57A50
	private AtlasManager.SkinType skinType; // 0x1EC
	[HideInInspector] // RVA: 0xC57A88 Offset: 0xC57A88 VA: 0xC57A88
	[SerializeField] // RVA: 0xC57A88 Offset: 0xC57A88 VA: 0xC57A88
	private UIAtlas defaultAtlas; // 0x1F0
	[SerializeField] // RVA: 0xC57AC0 Offset: 0xC57AC0 VA: 0xC57AC0
	private List<string> spriteNameList; // 0x1F8
	[SerializeField] // RVA: 0xC57AD0 Offset: 0xC57AD0 VA: 0xC57AD0
	private List<UISkinSprite.ReplaceData> replaceDataList; // 0x200

	// Methods

	// RVA: 0x182268C Offset: 0x182268C VA: 0x182268C
	public void .ctor() { }

	// RVA: 0x1822700 Offset: 0x1822700 VA: 0x1822700
	private void OnEnable() { }

	// RVA: 0x1822728 Offset: 0x1822728 VA: 0x1822728
	public void setupSprite() { }

	// RVA: 0x1822CE4 Offset: 0x1822CE4 VA: 0x1822CE4
	public void OnDisable() { }

	// RVA: 0x1822BEC Offset: 0x1822BEC VA: 0x1822BEC
	private string GetSpriteName(int uiChangeType) { }

	// RVA: 0x1822D10 Offset: 0x1822D10 VA: 0x1822D10
	private string GetReplaceSpriteName(int uiChangeType, int version) { }
}

// Namespace: 
[Serializable]
public class UISkinSprite.ReplaceData // TypeDefIndex: 7867
{
	// Fields
	public int UiChangeType; // 0x10
	public int Version; // 0x14
	public string SpriteName; // 0x18

	// Methods

	// RVA: 0x1822E54 Offset: 0x1822E54 VA: 0x1822E54
	public void .ctor() { }
}

// Namespace: 
public class UISliderWithButton : UIProgressBar // TypeDefIndex: 7868
{
	// Fields
	[HideInInspector] // RVA: 0xC57AE0 Offset: 0xC57AE0 VA: 0xC57AE0
	[SerializeField] // RVA: 0xC57AE0 Offset: 0xC57AE0 VA: 0xC57AE0
	private Transform foreground; // 0x68
	[HideInInspector] // RVA: 0xC57B18 Offset: 0xC57B18 VA: 0xC57B18
	[SerializeField] // RVA: 0xC57B18 Offset: 0xC57B18 VA: 0xC57B18
	private float rawValue; // 0x70
	[HideInInspector] // RVA: 0xC57B50 Offset: 0xC57B50 VA: 0xC57B50
	[SerializeField] // RVA: 0xC57B50 Offset: 0xC57B50 VA: 0xC57B50
	private UISliderWithButton.Direction direction; // 0x74
	[HideInInspector] // RVA: 0xC57B88 Offset: 0xC57B88 VA: 0xC57B88
	[SerializeField] // RVA: 0xC57B88 Offset: 0xC57B88 VA: 0xC57B88
	protected bool mInverted; // 0x78
	[SerializeField] // RVA: 0xC57BC0 Offset: 0xC57BC0 VA: 0xC57BC0
	protected UICommonButton plusButton; // 0x80
	[SerializeField] // RVA: 0xC57BD0 Offset: 0xC57BD0 VA: 0xC57BD0
	protected UICommonButton minusButton; // 0x88
	[SerializeField] // RVA: 0xC57BE0 Offset: 0xC57BE0 VA: 0xC57BE0
	protected UILabel minValue; // 0x90
	[SerializeField] // RVA: 0xC57BF0 Offset: 0xC57BF0 VA: 0xC57BF0
	protected UILabel maxValue; // 0x98
	[SerializeField] // RVA: 0xC57C00 Offset: 0xC57C00 VA: 0xC57C00
	protected UILabel minLabel; // 0xA0
	[SerializeField] // RVA: 0xC57C10 Offset: 0xC57C10 VA: 0xC57C10
	protected UILabel maxLabel; // 0xA8
	protected int maxStep; // 0xB0
	protected int minStep; // 0xB4
	protected int nowStep; // 0xB8
	private const int ValueNone = 0;
	private const int ValuePlus = 1;
	private const int ValueMinus = -1;
	private int valueChange; // 0xBC
	private bool isTouchEnable; // 0xC0

	// Properties
	[ObsoleteAttribute] // RVA: 0xCDEAD0 Offset: 0xCDEAD0 VA: 0xCDEAD0
	public float sliderValue { get; set; }
	[ObsoleteAttribute] // RVA: 0xCDEB08 Offset: 0xCDEB08 VA: 0xCDEB08
	public bool inverted { get; set; }

	// Methods

	// RVA: 0x1823978 Offset: 0x1823978 VA: 0x1823978
	public void .ctor() { }

	// RVA: 0x1823994 Offset: 0x1823994 VA: 0x1823994
	public float get_sliderValue() { }

	// RVA: 0x182399C Offset: 0x182399C VA: 0x182399C
	public void set_sliderValue(float value) { }

	// RVA: 0x18239A4 Offset: 0x18239A4 VA: 0x18239A4
	public bool get_inverted() { }

	// RVA: 0x18239AC Offset: 0x18239AC VA: 0x18239AC
	public void set_inverted(bool value) { }

	// RVA: 0x18239B0 Offset: 0x18239B0 VA: 0x18239B0
	public void init(int max, bool setMax = False) { }

	// RVA: 0x1823B58 Offset: 0x1823B58 VA: 0x1823B58 Slot: 4
	protected override void Upgrade() { }

	// RVA: 0x1823C30 Offset: 0x1823C30 VA: 0x1823C30 Slot: 5
	protected override void OnStart() { }

	// RVA: 0x1824218 Offset: 0x1824218 VA: 0x1824218
	protected void OnPressBackground(GameObject go, bool isPressed) { }

	// RVA: 0x1824304 Offset: 0x1824304 VA: 0x1824304
	protected void OnDragBackground(GameObject go, Vector2 delta) { }

	// RVA: 0x18243CC Offset: 0x18243CC VA: 0x18243CC
	protected void OnPressForeground(GameObject go, bool isPressed) { }

	// RVA: 0x1824708 Offset: 0x1824708 VA: 0x1824708
	protected void OnDragForeground(GameObject go, Vector2 delta) { }

	// RVA: 0x18247E4 Offset: 0x18247E4 VA: 0x18247E4
	protected void OnKey(KeyCode key) { }

	// RVA: 0x18248C8 Offset: 0x18248C8 VA: 0x18248C8
	public void OnClickPlusButton() { }

	// RVA: 0x18249F0 Offset: 0x18249F0 VA: 0x18249F0
	public void OnClickMinusButton() { }

	// RVA: 0x1824B14 Offset: 0x1824B14 VA: 0x1824B14
	public int sliderValueChange() { }

	// RVA: 0x1824C4C Offset: 0x1824C4C VA: 0x1824C4C
	public void normalMode() { }

	// RVA: 0x182511C Offset: 0x182511C VA: 0x182511C
	public void grayMode() { }
}

// Namespace: 
private enum UISliderWithButton.Direction // TypeDefIndex: 7869
{
	// Fields
	public int value__; // 0x0
	public const UISliderWithButton.Direction Horizontal = 0;
	public const UISliderWithButton.Direction Vertical = 1;
	public const UISliderWithButton.Direction Upgraded = 2;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC25E2C Offset: 0xC25E2C VA: 0xC25E2C
[AddComponentMenu] // RVA: 0xC25E2C Offset: 0xC25E2C VA: 0xC25E2C
public class UISpriteAltMat : UISprite // TypeDefIndex: 7870
{
	// Fields
	protected Material exMaterial; // 0x1F0

	// Properties
	public override Material material { get; }

	// Methods

	// RVA: 0x1826BCC Offset: 0x1826BCC VA: 0x1826BCC
	public void .ctor() { }

	// RVA: 0x1826BD0 Offset: 0x1826BD0 VA: 0x1826BD0 Slot: 24
	public override Material get_material() { }

	// RVA: 0x1826C5C Offset: 0x1826C5C VA: 0x1826C5C
	public void ResetMaterial() { }

	// RVA: 0x1826CD0 Offset: 0x1826CD0 VA: 0x1826CD0
	public void SetMaterialKeepTexture(Material mat) { }
}

// Namespace: 
public class UIStandFigureM : UIStandFigureRender // TypeDefIndex: 7871
{
	// Fields
	protected AssetData assetData; // 0x260
	protected string loadName; // 0x268
	protected Action callbackFunc; // 0x270
	private bool isCrossFade; // 0x278

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x1827848 Offset: 0x1827848 VA: 0x1827848
	public void .ctor() { }

	// RVA: 0x182791C Offset: 0x182791C VA: 0x182791C
	public bool get_IsLoad() { }

	// RVA: 0x182792C Offset: 0x182792C VA: 0x182792C
	public void Dispose() { }

	// RVA: 0x18279B0 Offset: 0x18279B0 VA: 0x18279B0
	protected void OnDestroy() { }

	// RVA: 0x1815680 Offset: 0x1815680 VA: 0x1815680
	public void ReleaseCharacter() { }

	// RVA: 0x1827FDC Offset: 0x1827FDC VA: 0x1827FDC
	public void SetCharacter(int svtId, int limitCount, int lv, Face.Type faceType, Action callbackFunc) { }

	// RVA: 0x1828088 Offset: 0x1828088 VA: 0x1828088
	public bool SetCharacter(int svtId, int imageLimitCount, Face.Type faceType, Action callbackFunc, bool loadRequiredResource = False) { }

	// RVA: 0x1812E4C Offset: 0x1812E4C VA: 0x1812E4C
	public bool SetCharacter(int svtId, int imageLimitCount, Face.Type faceType, int formId, Action callbackFunc, bool loadRequiredResource = False) { }

	// RVA: 0x18281DC Offset: 0x18281DC VA: 0x18281DC
	private string[] GetRequiredResourceNames(int imageId, Face.Type faceType) { }

	// RVA: 0x1828770 Offset: 0x1828770 VA: 0x1828770
	protected void EndLoadAsset(AssetData assetData) { }

	// RVA: 0x1828864 Offset: 0x1828864 VA: 0x1828864
	protected void SetTexture() { }

	// RVA: 0x182809C Offset: 0x182809C VA: 0x182809C
	protected void SetTextureStatus() { }

	// RVA: 0x1813620 Offset: 0x1813620 VA: 0x1813620
	public void SetDispOffset() { }

	// RVA: 0x182ADEC Offset: 0x182ADEC VA: 0x182ADEC
	public void SetOffsetDirect(Vector3 offset) { }

	// RVA: 0x182AEA0 Offset: 0x182AEA0 VA: 0x182AEA0
	public void SetSclDirect(Vector3 scl) { }

	// RVA: 0x182AEFC Offset: 0x182AEFC VA: 0x182AEFC
	private int GetTexturePosition(Face.Type faceType, int faceTextureSize) { }

	// RVA: 0x1813BC4 Offset: 0x1813BC4 VA: 0x1813BC4
	public void SetCrossFadeCharactar(UIStandFigureM inFigure, UIStandFigureM outFigure) { }

	// RVA: 0x182AFBC Offset: 0x182AFBC VA: 0x182AFBC Slot: 39
	public override void SetTweenColor(Color c) { }
}

// Namespace: 
public class UIStandFigureR : MonoBehaviour // TypeDefIndex: 7872
{
	// Fields
	[SerializeField] // RVA: 0xC57C20 Offset: 0xC57C20 VA: 0xC57C20
	protected UITexture bodyTexture; // 0x18
	protected int imageId; // 0x20
	protected ServantScriptEntity.OffsetKind offsetKind; // 0x24
	protected Face.Type faceType; // 0x28
	protected int formId; // 0x2C
	protected List<AssetData> formAssetList; // 0x30
	protected AssetData assetData; // 0x38
	protected RenderTexture renderTexture; // 0x40
	protected List<string> loadNameList; // 0x48
	protected string loadName; // 0x50
	protected Action callbackFunc; // 0x58
	protected Action callbackFuncAfterLoadForms; // 0x60
	protected SvtMultiPortraitEntity svtMultiPortraitEntity; // 0x68
	protected bool isBusyRender; // 0x70
	protected bool isRetryRender; // 0x71
	public bool isAssetLoaded; // 0x72

	// Properties
	public int Id { get; }
	public bool IsLoad { get; }
	public int FormId { get; }
	public UITexture Texture { get; }

	// Methods

	// RVA: 0x182B334 Offset: 0x182B334 VA: 0x182B334
	public void .ctor() { }

	// RVA: 0x182B3CC Offset: 0x182B3CC VA: 0x182B3CC
	public int get_Id() { }

	// RVA: 0x182B3D4 Offset: 0x182B3D4 VA: 0x182B3D4
	public bool get_IsLoad() { }

	// RVA: 0x182B3E4 Offset: 0x182B3E4 VA: 0x182B3E4
	public int get_FormId() { }

	// RVA: 0x182B3EC Offset: 0x182B3EC VA: 0x182B3EC
	public void SetSvtMultiPortraitEntity(SvtMultiPortraitEntity entity) { }

	// RVA: 0x182B3F4 Offset: 0x182B3F4 VA: 0x182B3F4
	public void Destroy() { }

	// RVA: 0x182B3F8 Offset: 0x182B3F8 VA: 0x182B3F8
	protected void OnDestroy() { }

	// RVA: 0x182B758 Offset: 0x182B758 VA: 0x182B758
	public void SetActive(bool isActive) { }

	// RVA: 0x182B7A8 Offset: 0x182B7A8 VA: 0x182B7A8
	public UITexture get_Texture() { }

	// RVA: 0x182B3FC Offset: 0x182B3FC VA: 0x182B3FC
	public void ReleaseCharacter() { }

	// RVA: 0x182B7B0 Offset: 0x182B7B0 VA: 0x182B7B0
	public void SetCharacter(int svtId, int limitCount, int lv, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, Action callbackFunc) { }

	// RVA: 0x182BA0C Offset: 0x182BA0C VA: 0x182BA0C
	public void SetCharacter(int svtId, int imageLimitCount, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, Action callbackFunc) { }

	// RVA: 0x182B868 Offset: 0x182B868 VA: 0x182B868
	public void SetCharacter(int svtId, int imageLimitCount, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, int formId, Action callbackFunc) { }

	// RVA: 0x182BC10 Offset: 0x182BC10 VA: 0x182BC10
	public void SetCharacterForImageId(int imageId, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, int formId, Action callbackFunc) { }

	// RVA: 0x182BD9C Offset: 0x182BD9C VA: 0x182BD9C
	public void EndLoadAsset(AssetData assetData) { }

	// RVA: 0x182BF8C Offset: 0x182BF8C VA: 0x182BF8C
	protected void RequestRenderAsset() { }

	// RVA: 0x182C0A4 Offset: 0x182C0A4 VA: 0x182C0A4
	protected void EndRenderAsset(RenderTexture renderTex) { }

	// RVA: 0x182C520 Offset: 0x182C520 VA: 0x182C520
	public void SetFace(Face.Type faceType) { }

	// RVA: 0x182C534 Offset: 0x182C534 VA: 0x182C534
	public void SetFace(Face.Type faceType, Action callbackFunc) { }

	// RVA: 0x182C618 Offset: 0x182C618 VA: 0x182C618
	public void SetFace(Face.Type faceType, int formId, Action callbackFunc) { }

	// RVA: 0x182C82C Offset: 0x182C82C VA: 0x182C82C
	protected void EndLoadFormAsset(AssetData assetData) { }

	// RVA: 0x182C99C Offset: 0x182C99C VA: 0x182C99C
	public void PreloadFormAssets(List<int> formIdList, Action callbackFunc) { }

	// RVA: 0x182CD10 Offset: 0x182CD10 VA: 0x182CD10
	public void CancelPreloadFormAssets() { }

	// RVA: 0x182CD18 Offset: 0x182CD18 VA: 0x182CD18
	public void RemoveCallback(Action removeCallback) { }

	// RVA: 0x182CDDC Offset: 0x182CDDC VA: 0x182CDDC
	private void OnEndPreloadForms() { }

	// RVA: 0x182CFDC Offset: 0x182CFDC VA: 0x182CFDC
	public void SetAlpha(float a) { }

	// RVA: 0x182D020 Offset: 0x182D020 VA: 0x182D020
	public void SetDepth(int d) { }

	// RVA: 0x182D058 Offset: 0x182D058 VA: 0x182D058
	public void MoveAlpha(float duration, float alpha) { }

	// RVA: 0x182D0D0 Offset: 0x182D0D0 VA: 0x182D0D0
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x182D268 Offset: 0x182D268 VA: 0x182D268
	public void SetLayer(int layer) { }

	// RVA: 0x182D2E0 Offset: 0x182D2E0 VA: 0x182D2E0
	protected void SetLayer(Transform tf, int layer) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCAE48 Offset: 0xCCAE48 VA: 0xCCAE48
	// RVA: 0x182D5E0 Offset: 0x182D5E0 VA: 0x182D5E0
	private bool <SetFace>m__0(AssetData a) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC43054 Offset: 0xC43054 VA: 0xC43054
private sealed class UIStandFigureR.<EndLoadFormAsset>c__AnonStorey0 // TypeDefIndex: 7873
{
	// Fields
	internal AssetData assetData; // 0x10

	// Methods

	// RVA: 0x182C994 Offset: 0x182C994 VA: 0x182C994
	public void .ctor() { }

	// RVA: 0x182D634 Offset: 0x182D634 VA: 0x182D634
	internal bool <>m__0(AssetData a) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC43064 Offset: 0xC43064 VA: 0xC43064
private sealed class UIStandFigureR.<PreloadFormAssets>c__AnonStorey1 // TypeDefIndex: 7874
{
	// Fields
	internal string assetPath; // 0x10

	// Methods

	// RVA: 0x182CD08 Offset: 0x182CD08 VA: 0x182CD08
	public void .ctor() { }

	// RVA: 0x182D71C Offset: 0x182D71C VA: 0x182D71C
	internal bool <>m__0(AssetData a) { }

	// RVA: 0x182D770 Offset: 0x182D770 VA: 0x182D770
	internal bool <>m__1(string a) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC43074 Offset: 0xC43074 VA: 0xC43074
private sealed class UIStandFigureR.<OnEndPreloadForms>c__AnonStorey2 // TypeDefIndex: 7875
{
	// Fields
	internal AssetData asset; // 0x10

	// Methods

	// RVA: 0x182CFD4 Offset: 0x182CFD4 VA: 0x182CFD4
	public void .ctor() { }

	// RVA: 0x182D6A8 Offset: 0x182D6A8 VA: 0x182D6A8
	internal bool <>m__0(AssetData a) { }
}

// Namespace: 
public class UIStandFigureRender : UITweenRenderer // TypeDefIndex: 7876
{
	// Fields
	[SerializeField] // RVA: 0xC57C30 Offset: 0xC57C30 VA: 0xC57C30
	protected MeshFilter bodyFilter; // 0x188
	[SerializeField] // RVA: 0xC57C40 Offset: 0xC57C40 VA: 0xC57C40
	protected MeshRenderer bodyRenderer; // 0x190
	[SerializeField] // RVA: 0xC57C50 Offset: 0xC57C50 VA: 0xC57C50
	protected MeshFilter faceFilter; // 0x198
	[SerializeField] // RVA: 0xC57C60 Offset: 0xC57C60 VA: 0xC57C60
	protected MeshRenderer faceRenderer; // 0x1A0
	[SerializeField] // RVA: 0xC57C70 Offset: 0xC57C70 VA: 0xC57C70
	protected MeshFilter fadeFilter; // 0x1A8
	[SerializeField] // RVA: 0xC57C80 Offset: 0xC57C80 VA: 0xC57C80
	protected MeshRenderer fadeRenderer; // 0x1B0
	public static readonly int MAIN_SIZE_X; // 0x0
	public static readonly int MAIN_SIZE_Y; // 0x4
	public static readonly int BODY_SIZE_X; // 0x8
	public static readonly int BODY_SIZE_Y; // 0xC
	protected static readonly int FACE_SIZE_X; // 0x10
	protected static readonly int FACE_SIZE_Y; // 0x14
	public static readonly int LEFT_X; // 0x18
	public static readonly int RIGHT_X; // 0x1C
	public static readonly int TOP_Y; // 0x20
	public static readonly int BOTTOM_Y; // 0x24
	public static readonly float BODY_U; // 0x28
	public static readonly float BODY_V; // 0x2C
	public static readonly float BODY_W; // 0x30
	public static readonly float BODY_H; // 0x34
	protected static readonly float FACE1_W; // 0x38
	protected static readonly float FACE1_H; // 0x3C
	protected static readonly float FACE1_SX; // 0x40
	protected static readonly float FACE1_SY; // 0x44
	protected static readonly ReadOnlyCollection<Rect> faceRectTable; // 0x48
	protected static readonly float FACE2A_SIZE; // 0x50
	protected static readonly float FACE2A_W; // 0x54
	protected static readonly float FACE2A_H; // 0x58
	protected static readonly float FACE2A_SX; // 0x5C
	protected static readonly float FACE2A_SY; // 0x60
	protected static readonly ReadOnlyCollection<Rect> faceRectTable2a; // 0x68
	protected static readonly float FACE2B_SIZE; // 0x70
	protected static readonly float FACE2B_W; // 0x74
	protected static readonly float FACE2B_H; // 0x78
	protected static readonly float FACE2B_SX; // 0x7C
	protected static readonly float FACE2B_SY; // 0x80
	protected static readonly ReadOnlyCollection<Rect> faceRectTable2b; // 0x88
	protected static readonly float FACE2C_SIZE; // 0x90
	protected static readonly float FACE2C_W; // 0x94
	protected static readonly float FACE2C_H; // 0x98
	protected static readonly float FACE2C_SX; // 0x9C
	protected static readonly float FACE2C_SY; // 0xA0
	protected static readonly ReadOnlyCollection<Rect> faceRectTable2c; // 0xA8
	protected int imageId; // 0x1B8
	protected int faceTextureSize; // 0x1BC
	protected bool isFaceUse; // 0x1C0
	protected Face.Type faceType; // 0x1C4
	protected int formId; // 0x1C8
	protected int faceTextureSelect; // 0x1CC
	protected bool isShadow; // 0x1D0
	protected bool isTalkMask; // 0x1D1
	protected string filterName; // 0x1D8
	protected Color filterColor; // 0x1E0
	protected Rect facePositionRect; // 0x1F0
	protected Rect faceTextureRect; // 0x200
	protected Vector2 figureOffset; // 0x210
	protected Vector2 dispOffset; // 0x218
	protected Vector2 dispTop; // 0x220
	protected Texture2D[] textureList; // 0x228
	protected bool isBusyMoveAlpha; // 0x230
	protected GameObject moveAlphaCallbackObject; // 0x238
	protected string moveAlphaCallbackFunc; // 0x240
	protected float faceFadeAlpha; // 0x248
	protected Rect faceRect; // 0x24C
	protected bool loadRequiredResource; // 0x25C

	// Methods

	// RVA: 0x18278AC Offset: 0x18278AC VA: 0x18278AC
	public void .ctor() { }

	// RVA: 0x1812934 Offset: 0x1812934 VA: 0x1812934
	public static int GetServantId(string imageName) { }

	// RVA: 0x1812A98 Offset: 0x1812A98 VA: 0x1812A98
	public static int GetImageLimitCount(string imageName) { }

	// RVA: 0x1812AFC Offset: 0x1812AFC VA: 0x1812AFC
	public static int GetImageForm(string imageName) { }

	// RVA: 0x182D7A8 Offset: 0x182D7A8 VA: 0x182D7A8
	public static string GetAssetName(int svtId, int imageLimitCount) { }

	// RVA: 0x182D820 Offset: 0x182D820 VA: 0x182D820
	public static string GetAssetName(int svtId, int imageLimitCount, int formId) { }
