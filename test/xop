	// RVA: 0x18CE6C0 Offset: 0x18CE6C0 VA: 0x18CE6C0
	public bool isNotServantHaving() { }

	// RVA: 0x18CE7EC Offset: 0x18CE7EC VA: 0x18CE7EC
	public ServantEntity GetRelateServantEntity() { }

	// RVA: 0x18CE964 Offset: 0x18CE964 VA: 0x18CE964
	public bool isNotClearTotalTDCond() { }

	// RVA: 0x18CEB00 Offset: 0x18CEB00 VA: 0x18CEB00
	public bool isNotSvtCostumeReleased() { }

	// RVA: 0x18CC6C4 Offset: 0x18CC6C4 VA: 0x18CC6C4
	public bool isNotShopPurchase() { }

	// RVA: 0x18C62D8 Offset: 0x18C62D8 VA: 0x18C62D8
	public bool isClosedShopPriorityLowCheck() { }

	// RVA: 0x18CEC34 Offset: 0x18CEC34 VA: 0x18CEC34
	private bool IsNotClearNotShopPurchase() { }

	// RVA: 0x18C2B78 Offset: 0x18C2B78 VA: 0x18C2B78
	public bool CheckEquipItem(out int imageId) { }

	// RVA: 0x18CEE00 Offset: 0x18CEE00 VA: 0x18CEE00
	public bool isMaxOver(long buyCount, out int check) { }

	// RVA: 0x18BDB8C Offset: 0x18BDB8C VA: 0x18BDB8C
	public string getName() { }

	// RVA: 0x18CF1AC Offset: 0x18CF1AC VA: 0x18CF1AC
	public string GetAddMessage() { }

	// RVA: 0x18CDC24 Offset: 0x18CDC24 VA: 0x18CDC24
	public bool IsEventQuest() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA7D8 Offset: 0xCCA7D8 VA: 0xCCA7D8
	// RVA: 0x18CF274 Offset: 0x18CF274 VA: 0x18CF274
	private static bool <GetIsAlreadyInPossession>m__0(UserPresentBoxEntity v) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA7E8 Offset: 0xCCA7E8 VA: 0xCCA7E8
	// RVA: 0x18CF2A4 Offset: 0x18CF2A4 VA: 0x18CF2A4
	private static bool <IsServantGet>m__1(UserPresentBoxEntity v) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA7F8 Offset: 0xCCA7F8 VA: 0xCCA7F8
	// RVA: 0x18CF2D4 Offset: 0x18CF2D4 VA: 0x18CF2D4
	private static int <GetAnotherPayItemIds>m__2(object x) { }
}

// Namespace: 
public class ShopGroupEntity : DataEntityBase<string> // TypeDefIndex: 7293
{
	// Fields
	public int shopId; // 0x10
	public int groupId; // 0x14

	// Methods

	// RVA: 0x18D2944 Offset: 0x18D2944 VA: 0x18D2944
	public void .ctor() { }

	// RVA: 0x18D2994 Offset: 0x18D2994 VA: 0x18D2994 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x18D29A4 Offset: 0x18D29A4 VA: 0x18D29A4
	public static string CreatePK(int shopId, int groupId) { }
}

// Namespace: 
public class ShopGroupMaster : DataMasterBase<ShopGroupMaster, ShopGroupEntity, string> // TypeDefIndex: 7294
{
	// Methods

	// RVA: 0x18D29B4 Offset: 0x18D29B4 VA: 0x18D29B4
	public void .ctor() { }

	// RVA: 0x18D2A08 Offset: 0x18D2A08 VA: 0x18D2A08
	public ShopGroupEntity GetEntity(int shopId, int groupId) { }

	// RVA: 0x18D2A7C Offset: 0x18D2A7C VA: 0x18D2A7C
	public bool TryGetEntity(out ShopGroupEntity entity, int shopId, int groupId) { }

	// RVA: 0x18D2B00 Offset: 0x18D2B00 VA: 0x18D2B00
	public ShopGroupEntity[] GetTargetEntityList(int groupId) { }

	// RVA: 0x18D2C80 Offset: 0x18D2C80 VA: 0x18D2C80
	public int GetBuyableCount(int groupId) { }

	// RVA: 0x18CD8B0 Offset: 0x18CD8B0 VA: 0x18CD8B0
	public void CheckIncludeGroupItemType(int groupId, out bool item, out bool servant, out bool equip, out bool quest) { }
}

// Namespace: 
public class ShopMaster : DataMasterBase<ShopMaster, ShopEntity, int> // TypeDefIndex: 7295
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55E10 Offset: 0xC55E10 VA: 0xC55E10
	private static Comparison<ShopEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC55E20 Offset: 0xC55E20 VA: 0xC55E20
	private static Comparison<ShopEntity> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC55E30 Offset: 0xC55E30 VA: 0xC55E30
	private static Comparison<ShopEntity> <>f__am$cache2; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC55E40 Offset: 0xC55E40 VA: 0xC55E40
	private static Comparison<ShopEntity> <>f__am$cache3; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC55E50 Offset: 0xC55E50 VA: 0xC55E50
	private static Comparison<ShopEntity> <>f__am$cache4; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC55E60 Offset: 0xC55E60 VA: 0xC55E60
	private static Comparison<ShopEntity> <>f__am$cache5; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC55E70 Offset: 0xC55E70 VA: 0xC55E70
	private static Comparison<ShopEntity> <>f__am$cache6; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC55E80 Offset: 0xC55E80 VA: 0xC55E80
	private static Comparison<ItemEntity> <>f__am$cache7; // 0x38

	// Methods

	// RVA: 0x18D6A54 Offset: 0x18D6A54 VA: 0x18D6A54
	public void .ctor() { }

	// RVA: 0x18D6AA8 Offset: 0x18D6AA8 VA: 0x18D6AA8
	public ShopEntity getEntityFromId(int id) { }

	// RVA: 0x18C6528 Offset: 0x18C6528 VA: 0x18C6528
	public ShopEntity[] GetEnableEntitiyList(GamePurchase.Type purchaseType, ShopType.Type shopType) { }

	// RVA: 0x18D6BA8 Offset: 0x18D6BA8 VA: 0x18D6BA8
	public ShopEntity[] GetEnableEntitiyList(GamePurchase.Type purchaseType, ShopType.Type shopType, ShopFlag.Flag flag) { }

	// RVA: 0x18D7018 Offset: 0x18D7018 VA: 0x18D7018
	public ShopEntity[] GetEnableEntitiyList(GamePurchase.Type purchaseType, PayType.Type payType) { }

	// RVA: 0x18CB5C0 Offset: 0x18CB5C0 VA: 0x18CB5C0
	public ShopEntity[] GetEventEntitiyList(int eventId) { }

	// RVA: 0x18D7388 Offset: 0x18D7388 VA: 0x18D7388
	public ShopEntity[] GetOpenedEventEntitiyList(int eventId) { }

	// RVA: 0x18C7F4C Offset: 0x18C7F4C VA: 0x18C7F4C
	public ShopEntity[] GetEnableEventEntitiyList(int eventId) { }

	// RVA: 0x18C689C Offset: 0x18C689C VA: 0x18C689C
	public ShopEntity[] GetEnableEventEntityList(int eventId, int slot) { }

	// RVA: 0x18D75DC Offset: 0x18D75DC VA: 0x18D75DC
	public int GetEnableMainEventId() { }

	// RVA: 0x18D79FC Offset: 0x18D79FC VA: 0x18D79FC
	private bool CheckBuyAfterCloseShop(int eventId) { }

	// RVA: 0x18CF6EC Offset: 0x18CF6EC VA: 0x18CF6EC
	public bool GetEnableEventPeriod(out long openedAt, out long closedAt, int eventId) { }

	// RVA: 0x18C50C4 Offset: 0x18C50C4 VA: 0x18C50C4
	public int[] GetEventItemList(int eventId) { }

	// RVA: 0x18D7DC8 Offset: 0x18D7DC8 VA: 0x18D7DC8
	private bool IsHideItem(int eventId, int id) { }

	// RVA: 0x18D6F34 Offset: 0x18D6F34 VA: 0x18D6F34
	public bool IsOpenPurchaseCloseShop(ShopEntity shopEntity) { }

	// RVA: 0x18D7EE8 Offset: 0x18D7EE8 VA: 0x18D7EE8
	public bool PurchaseCloseEventShop(ShopEntity shopEntity) { }

	// RVA: 0x18D7AF8 Offset: 0x18D7AF8 VA: 0x18D7AF8
	public bool IsPurchaseCloseEventShopItem(int baseShopId) { }

	// RVA: 0x18D7FB4 Offset: 0x18D7FB4 VA: 0x18D7FB4
	public int GetEventShopBaseShopId(int eventId) { }

	// RVA: 0x18D8098 Offset: 0x18D8098 VA: 0x18D8098
	public bool IsEventCloseWithItemPurchase(int eventId) { }

	// RVA: 0x18D8484 Offset: 0x18D8484 VA: 0x18D8484
	public bool IsEnableEventShop(int eventId) { }

	// RVA: 0x18CF89C Offset: 0x18CF89C VA: 0x18CF89C
	public bool CloseLimitEventShop(int eventId) { }

	// RVA: 0x18D85A0 Offset: 0x18D85A0 VA: 0x18D85A0
	public ShopEntity GetEntityOfFragmentsShop() { }

	// RVA: 0x18D8778 Offset: 0x18D8778 VA: 0x18D8778
	public int GetFragmentCountToExchangeForStone() { }

	// RVA: 0x18D87E8 Offset: 0x18D87E8 VA: 0x18D87E8
	public bool CheckExistsPayType(int eventId, PayType.Type payType) { }

	// RVA: 0x18D4744 Offset: 0x18D4744 VA: 0x18D4744
	public bool IsEnableEventShop() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA808 Offset: 0xCCA808 VA: 0xCCA808
	// RVA: 0x18D8914 Offset: 0x18D8914 VA: 0x18D8914
	private static int <GetEnableEntitiyList>m__0(ShopEntity a, ShopEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA818 Offset: 0xCCA818 VA: 0xCCA818
	// RVA: 0x18D8954 Offset: 0x18D8954 VA: 0x18D8954
	private static int <GetEnableEntitiyList>m__1(ShopEntity a, ShopEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA828 Offset: 0xCCA828 VA: 0xCCA828
	// RVA: 0x18D8994 Offset: 0x18D8994 VA: 0x18D8994
	private static int <GetEnableEntitiyList>m__2(ShopEntity a, ShopEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA838 Offset: 0xCCA838 VA: 0xCCA838
	// RVA: 0x18D89D4 Offset: 0x18D89D4 VA: 0x18D89D4
	private static int <GetEventEntitiyList>m__3(ShopEntity a, ShopEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA848 Offset: 0xCCA848 VA: 0xCCA848
	// RVA: 0x18D8A14 Offset: 0x18D8A14 VA: 0x18D8A14
	private static int <GetOpenedEventEntitiyList>m__4(ShopEntity a, ShopEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA858 Offset: 0xCCA858 VA: 0xCCA858
	// RVA: 0x18D8A54 Offset: 0x18D8A54 VA: 0x18D8A54
	private static int <GetEnableEventEntitiyList>m__5(ShopEntity a, ShopEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA868 Offset: 0xCCA868 VA: 0xCCA868
	// RVA: 0x18D8A94 Offset: 0x18D8A94 VA: 0x18D8A94
	private static int <GetEnableEventEntityList>m__6(ShopEntity a, ShopEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA878 Offset: 0xCCA878 VA: 0xCCA878
	// RVA: 0x18D8AD4 Offset: 0x18D8AD4 VA: 0x18D8AD4
	private static int <GetEventItemList>m__7(ItemEntity a, ItemEntity b) { }
}

// Namespace: 
public class ShopReleaseEntity : DataEntityBase<string> // TypeDefIndex: 7296
{
	// Fields
	public int shopId; // 0x10
	public int condType; // 0x14
	public int[] condValues; // 0x18
	public long condNum; // 0x20
	public int priority; // 0x28
	public bool isClosedDisp; // 0x2C
	public string closedMessage; // 0x30
	public string closedItemName; // 0x38

	// Properties
	public bool IsClosedDisp { get; }
	public int condValue { get; }

	// Methods

	// RVA: 0x150F0F8 Offset: 0x150F0F8 VA: 0x150F0F8
	public void .ctor() { }

	// RVA: 0x150F148 Offset: 0x150F148 VA: 0x150F148 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x150F15C Offset: 0x150F15C VA: 0x150F15C
	public static string CreatePK(int shopId, int condType, int priority) { }

	// RVA: 0x150F170 Offset: 0x150F170 VA: 0x150F170
	public bool get_IsClosedDisp() { }

	// RVA: 0x150F178 Offset: 0x150F178 VA: 0x150F178
	public bool IsCondEnable() { }

	// RVA: 0x150F270 Offset: 0x150F270 VA: 0x150F270
	public int get_condValue() { }

	// RVA: 0x150F294 Offset: 0x150F294 VA: 0x150F294
	public bool IsOpen() { }

	// RVA: 0x150F2A8 Offset: 0x150F2A8 VA: 0x150F2A8
	public bool IsPreparation() { }

	// RVA: 0x150F2CC Offset: 0x150F2CC VA: 0x150F2CC
	public string GetPreparationConditionText() { }

	// RVA: 0x150F3D8 Offset: 0x150F3D8 VA: 0x150F3D8
	public string GetPreparationItemNameText() { }
}

// Namespace: 
public class ShopReleaseMaster : DataMasterBase<ShopReleaseMaster, ShopReleaseEntity, string> // TypeDefIndex: 7297
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55E90 Offset: 0xC55E90 VA: 0xC55E90
	private static Comparison<ShopReleaseEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x150F3E0 Offset: 0x150F3E0 VA: 0x150F3E0
	public void .ctor() { }

	// RVA: 0x150F434 Offset: 0x150F434 VA: 0x150F434
	public ShopReleaseEntity GetEntity(int shopId, int condType, int priority) { }

	// RVA: 0x150F4B8 Offset: 0x150F4B8 VA: 0x150F4B8
	public bool TryGetEntity(out ShopReleaseEntity entity, int shopId, int condType, int priority) { }

	// RVA: 0x150F544 Offset: 0x150F544 VA: 0x150F544
	public ShopReleaseEntity[] GetEntitiyList(int shopId) { }

	// RVA: 0x150F6C0 Offset: 0x150F6C0 VA: 0x150F6C0
	public ShopReleaseEntity[] GetEntitiyList(int shopId, bool isClosedDisp) { }

	// RVA: 0x150F8F4 Offset: 0x150F8F4 VA: 0x150F8F4
	public bool IsOpen(int shopId) { }

	// RVA: 0x150F9A8 Offset: 0x150F9A8 VA: 0x150F9A8
	public bool IsAllCondClear(int shopId) { }

	// RVA: 0x150FA50 Offset: 0x150FA50 VA: 0x150FA50
	public List<ShopReleaseEntity> GetNotClearShopReleaseEntity(int shopId) { }

	// RVA: 0x150FB7C Offset: 0x150FB7C VA: 0x150FB7C
	public bool IsPreparation(out string message, out string itemName, int shopId) { }

	// RVA: 0x150FC80 Offset: 0x150FC80 VA: 0x150FC80
	public bool TryGetClosedMessage(out string message, out string itemName, int shopId) { }

	// RVA: 0x150FD64 Offset: 0x150FD64 VA: 0x150FD64
	public int GetPurchaseShop(int shopId) { }

	// RVA: 0x150FE2C Offset: 0x150FE2C VA: 0x150FE2C
	public bool isQuestNotClearSet(int shopId, out int questId) { }

	// RVA: 0x150FF00 Offset: 0x150FF00 VA: 0x150FF00
	public bool isExistCondType(int shopId, CondType.Kind type) { }

	// RVA: 0x150FFAC Offset: 0x150FFAC VA: 0x150FFAC
	public bool CondClearCheck(int shopId, CondType.Kind kind) { }

	// RVA: 0x1510068 Offset: 0x1510068 VA: 0x1510068
	public int GetTargetShopGroupId(int shopId) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA888 Offset: 0xCCA888 VA: 0xCCA888
	// RVA: 0x1510138 Offset: 0x1510138 VA: 0x1510138
	private static int <GetEntitiyList>m__0(ShopReleaseEntity a, ShopReleaseEntity b) { }
}

// Namespace: 
public class ShopScriptEntity : DataEntityBase<int> // TypeDefIndex: 7298
{
	// Fields
	public int shopId; // 0x10
	public int priority; // 0x14
	public string name; // 0x18
	public int frequencyType; // 0x20
	public string scriptId; // 0x28
	public int eventId; // 0x30
	public int svtId; // 0x34
	public int limitCount; // 0x38
	public int materialFolderId; // 0x3C
	public int[] ignoreEventIds; // 0x40

	// Methods

	// RVA: 0x151BA84 Offset: 0x151BA84 VA: 0x151BA84
	public void .ctor() { }

	// RVA: 0x151BAD4 Offset: 0x151BAD4 VA: 0x151BAD4 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x151BADC Offset: 0x151BADC VA: 0x151BADC
	public Frequency.Type GetFrequencyType() { }
}

// Namespace: 
public class ShopScriptMaster : DataMasterBase<ShopScriptMaster, ShopScriptEntity, int> // TypeDefIndex: 7299
{
	// Methods

	// RVA: 0x151BAE4 Offset: 0x151BAE4 VA: 0x151BAE4
	public void .ctor() { }

	// RVA: 0x1516BDC Offset: 0x1516BDC VA: 0x1516BDC
	public ShopScriptEntity getEntityFromId(int shopId) { }

	// RVA: 0x151BB38 Offset: 0x151BB38 VA: 0x151BB38
	public static string GetScriptId(int shopId) { }

	// RVA: 0x151BC48 Offset: 0x151BC48 VA: 0x151BC48
	public Dictionary<string, List<int[]>> GetOpenScriptsWithOpenEventIds() { }
}

// Namespace: 
public class SkillAddEntity : DataEntityBase<string> // TypeDefIndex: 7300
{
	// Fields
	public int skillId; // 0x10
	public int priority; // 0x14
	public int commonReleaseId; // 0x18
	public string name; // 0x20
	public string ruby; // 0x28

	// Methods

	// RVA: 0x152180C Offset: 0x152180C VA: 0x152180C
	public void .ctor() { }

	// RVA: 0x152185C Offset: 0x152185C VA: 0x152185C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x152186C Offset: 0x152186C VA: 0x152186C
	public static string CreatePK(int skillId, int priority) { }

	// RVA: 0x152187C Offset: 0x152187C VA: 0x152187C
	public bool IsOpen() { }
}

// Namespace: 
public class SkillAddMaster : DataMasterBase<SkillAddMaster, SkillAddEntity, string> // TypeDefIndex: 7301
{
	// Methods

	// RVA: 0x1521910 Offset: 0x1521910 VA: 0x1521910
	public void .ctor() { }

	// RVA: 0x1521964 Offset: 0x1521964 VA: 0x1521964
	public SkillAddEntity GetEntity(int skillId, int priority) { }

	// RVA: 0x15219D8 Offset: 0x15219D8 VA: 0x15219D8
	public bool TryGetEntity(out SkillAddEntity entity, int skillId, int priority) { }
}

// Namespace: 
public class SkillDetailEntity : DataEntityBase<int> // TypeDefIndex: 7302
{
	// Fields
	public int id; // 0x10
	public string detail; // 0x18
	public string detailShort; // 0x20

	// Methods

	// RVA: 0x1523C50 Offset: 0x1523C50 VA: 0x1523C50
	public void .ctor() { }

	// RVA: 0x1523CA0 Offset: 0x1523CA0 VA: 0x1523CA0 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1523CA8 Offset: 0x1523CA8 VA: 0x1523CA8
	public string getDetail() { }

	// RVA: 0x1523D14 Offset: 0x1523D14 VA: 0x1523D14
	public string getDetailShort() { }
}

// Namespace: 
public class SkillDetailMaster : DataMasterBase<SkillDetailMaster, SkillDetailEntity, int> // TypeDefIndex: 7303
{
	// Methods

	// RVA: 0x1523D80 Offset: 0x1523D80 VA: 0x1523D80
	public void .ctor() { }

	// RVA: 0x1523DD4 Offset: 0x1523DD4 VA: 0x1523DD4
	public string getDetail(int id, bool isShort) { }
}

// Namespace: 
public class SkillEntity : DataEntityBase<int> // TypeDefIndex: 7304
{
	// Fields
	public int id; // 0x10
	public int type; // 0x14
	public string name; // 0x18
	public string ruby; // 0x20
	public int maxLv; // 0x28
	public int category; // 0x2C
	public int iconId; // 0x30
	public int motion; // 0x34
	public int[] effectList; // 0x38
	public Dictionary<string, object> script; // 0x40
	private static readonly int CHECK_SCRIPT_TRUE; // 0x0
	public int[] actIndividuality; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC55EA0 Offset: 0xC55EA0 VA: 0xC55EA0
	[DebuggerBrowsableAttribute] // RVA: 0xC55EA0 Offset: 0xC55EA0 VA: 0xC55EA0
	private List<SkillAddEntity> <SortedSkillAddEntityList>k__BackingField; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xC55EDC Offset: 0xC55EDC VA: 0xC55EDC
	private static Func<SkillAddEntity, bool> <>f__am$cache0; // 0x8

	// Properties
	public List<SkillAddEntity> SortedSkillAddEntityList { get; set; }

	// Methods

	// RVA: 0x1523EE8 Offset: 0x1523EE8 VA: 0x1523EE8
	public void .ctor() { }

	// RVA: 0x1523F38 Offset: 0x1523F38 VA: 0x1523F38 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1523F40 Offset: 0x1523F40 VA: 0x1523F40
	public static int CreatePK(int id) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA898 Offset: 0xCCA898 VA: 0xCCA898
	// RVA: 0x1523F44 Offset: 0x1523F44 VA: 0x1523F44
	public List<SkillAddEntity> get_SortedSkillAddEntityList() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA8A8 Offset: 0xCCA8A8 VA: 0xCCA8A8
	// RVA: 0x1523F4C Offset: 0x1523F4C VA: 0x1523F4C
	public void set_SortedSkillAddEntityList(List<SkillAddEntity> value) { }

	// RVA: 0x1523F54 Offset: 0x1523F54 VA: 0x1523F54
	public bool isActive() { }

	// RVA: 0x1523F64 Offset: 0x1523F64 VA: 0x1523F64
	public bool isPassive() { }

	// RVA: 0x1522AFC Offset: 0x1522AFC VA: 0x1522AFC
	public string getName() { }

	// RVA: 0x1523F74 Offset: 0x1523F74 VA: 0x1523F74
	public SkillAddEntity GetAvailableSkillAddEntity() { }

	// RVA: 0x15240A4 Offset: 0x15240A4 VA: 0x15240A4
	public int[] getEffectList() { }

	// RVA: 0x15240AC Offset: 0x15240AC VA: 0x15240AC
	public string getEffectTitle(int lv = 0) { }

	// RVA: 0x152420C Offset: 0x152420C VA: 0x152420C
	public int getEffectChargeTurn(int lv = 0) { }

	// RVA: 0x15242D4 Offset: 0x15242D4 VA: 0x15242D4
	public string getEffectExplanation(int lv = 0) { }

	// RVA: 0x15243C4 Offset: 0x15243C4 VA: 0x15243C4
	public string getFuncExplanation(int lv = 0) { }

	// RVA: 0x15244AC Offset: 0x15244AC VA: 0x15244AC
	public void getSkillMessageInfo(out string name, out string detail, int lv = 0) { }

	// RVA: 0x15244F4 Offset: 0x15244F4 VA: 0x15244F4
	public int getSkillChargeTime(int lv) { }

	// RVA: 0x15245A0 Offset: 0x15245A0 VA: 0x15245A0
	public int getSkillCutInId() { }

	// RVA: 0x1524610 Offset: 0x1524610 VA: 0x1524610
	public bool checkScript(string key, out int param) { }

	// RVA: 0x1524740 Offset: 0x1524740 VA: 0x1524740
	public int[] getActIndividuality() { }

	// RVA: 0x152479C Offset: 0x152479C VA: 0x152479C
	public bool checkUseTreasure(Follower.Type type) { }

	// RVA: 0x152482C Offset: 0x152482C VA: 0x152482C
	private bool checkScriptFromIdx(string key) { }

	// RVA: 0x15248D0 Offset: 0x15248D0 VA: 0x15248D0
	public bool isForcedSkillSpeedOne() { }

	// RVA: 0x1524944 Offset: 0x1524944 VA: 0x1524944
	private string[] getScriptStrings(string key, char splitChar) { }

	// RVA: 0x1524AB8 Offset: 0x1524AB8 VA: 0x1524AB8
	public string[] getSkillCutInVoices() { }

	// RVA: 0x1524B0C Offset: 0x1524B0C VA: 0x1524B0C
	public string[] getSkillCutInPrefabInfo() { }

	// RVA: 0x1524B60 Offset: 0x1524B60 VA: 0x1524B60
	public Vector3[] getSkillCutInPrefabOffsets() { }

	// RVA: 0x1524D7C Offset: 0x1524D7C VA: 0x1524D7C
	public Vector3[] getSkillCutInPrefabSizes() { }

	// RVA: 0x1524F98 Offset: 0x1524F98 VA: 0x1524F98
	public bool getSkillCutInCamPlayerAll() { }

	// RVA: 0x1525008 Offset: 0x1525008 VA: 0x1525008
	public bool isSkillCutInCamField() { }

	// RVA: 0x1525078 Offset: 0x1525078 VA: 0x1525078
	public int getSkillCutInMessageMode() { }

	// RVA: 0x15250E0 Offset: 0x15250E0 VA: 0x15250E0
	public int GetMotionId(int svtId) { }

	// RVA: 0x15251A8 Offset: 0x15251A8 VA: 0x15251A8
	public int GetLossCutinId() { }

	// RVA: 0x1525218 Offset: 0x1525218 VA: 0x1525218
	public int GetFieldCallEffectId(bool isBefore) { }

	// RVA: 0x152529C Offset: 0x152529C VA: 0x152529C
	public bool IsSkippable() { }

	// RVA: 0x1525308 Offset: 0x1525308 VA: 0x1525308
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA8B8 Offset: 0xCCA8B8 VA: 0xCCA8B8
	// RVA: 0x152535C Offset: 0x152535C VA: 0x152535C
	private static bool <GetAvailableSkillAddEntity>m__0(SkillAddEntity x) { }
}

// Namespace: 
public enum SkillEntity.CutinCameraSide // TypeDefIndex: 7305
{
	// Fields
	public int value__; // 0x0
	public const SkillEntity.CutinCameraSide ENEMY_ALL = 0;
	public const SkillEntity.CutinCameraSide PLAYER_ALL = 1;
	public const SkillEntity.CutinCameraSide FIELD_ALL = 2;
}

// Namespace: 
public class SkillLvEntity : DataEntityBase<string> // TypeDefIndex: 7306
{
	// Fields
	public int skillId; // 0x10
	public int lv; // 0x14
	public int chargeTurn; // 0x18
	public int priority; // 0x1C
	public int[] funcId; // 0x20
	public string[] svals; // 0x28
	public int skillDetailId; // 0x30
	public Dictionary<string, object> script; // 0x38
	private const string DIC_NUMBER_KEY_0 = "0";
	private const string DIC_NUMBER_KEY_1 = "1";
	private const string DIC_NUMBER_KEY_2 = "2";
	private const string DIC_NUMBER_KEY_3 = "3";
	private const string DIC_KEY_EVENT_ID = "EventId";
	private const string DIC_KEY_TARGET = "Target";
	private const string DIC_KEY_APPLY_SUPPORT_SVT = "ApplySupportSvt";
	[CompilerGeneratedAttribute] // RVA: 0xC55EEC Offset: 0xC55EEC VA: 0xC55EEC
	private static Func<long, Nullable<int>> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC55EFC Offset: 0xC55EFC VA: 0xC55EFC
	private static Func<List<object>, List<int>> <>f__mg$cache0; // 0x8

	// Methods

	// RVA: 0x1748950 Offset: 0x1748950 VA: 0x1748950
	public void .ctor() { }

	// RVA: 0x17489A0 Offset: 0x17489A0 VA: 0x17489A0 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x17489B0 Offset: 0x17489B0 VA: 0x17489B0
	public static string CreatePK(int skillId, int lv) { }

	// RVA: 0x17489C0 Offset: 0x17489C0 VA: 0x17489C0
	public Dictionary<string, int>[] getValues() { }

	// RVA: 0x1748E0C Offset: 0x1748E0C VA: 0x1748E0C
	public DataVals[] getDataValsList() { }

	// RVA: 0x1749018 Offset: 0x1749018 VA: 0x1749018
	public string getDetail(bool isShort = False) { }

	// RVA: 0x17490B8 Offset: 0x17490B8 VA: 0x17490B8
	public string getDetail(int lv, bool isShort = False) { }

	// RVA: 0x1749218 Offset: 0x1749218 VA: 0x1749218
	public string getFuncDetail() { }

	// RVA: 0x1749374 Offset: 0x1749374 VA: 0x1749374
	public int getFriendPointUpVal() { }

	// RVA: 0x174952C Offset: 0x174952C VA: 0x174952C
	public FuncList.TYPE getFriendPointUpType() { }

	// RVA: 0x174966C Offset: 0x174966C VA: 0x174966C
	public bool GetBonusUpVal(ref EventUpValInfo eventUpVallInfo, QuestPhaseEntity questPhaseEntity) { }

	// RVA: 0x1749B78 Offset: 0x1749B78 VA: 0x1749B78
	public bool getEventUpVal(int wearersSvtId, int wearesLimitCount, int wearesDispLimitCount, EventUpValSetupInfo setupInfo, int eventId, bool isFuncGroup = True, bool isOwner = True) { }

	// RVA: 0x174A454 Offset: 0x174A454 VA: 0x174A454
	public bool getEventUpVal(ref EventUpValInfo eventUpVallInfo, bool isFuncGroup = True, bool isOwner = True, bool isSupport = False, bool isEquipOnly = False) { }

	// RVA: 0x174BC18 Offset: 0x174BC18 VA: 0x174BC18
	public Dictionary<string, object> getCondition() { }

	// RVA: 0x174BC20 Offset: 0x174BC20 VA: 0x174BC20
	public string getVoiceAssetName() { }

	// RVA: 0x174BD1C Offset: 0x174BD1C VA: 0x174BD1C
	public string getPlayVoiceNo() { }

	// RVA: 0x174BE18 Offset: 0x174BE18 VA: 0x174BE18
	public bool isPlayVoiceWait() { }

	// RVA: 0x174BE84 Offset: 0x174BE84 VA: 0x174BE84
	public bool IsVoiceVolume() { }

	// RVA: 0x174BEF0 Offset: 0x174BEF0 VA: 0x174BEF0
	public float getVoiceVolume() { }

	// RVA: 0x174BB74 Offset: 0x174BB74 VA: 0x174BB74
	private bool IsSupportExcluded(Dictionary<string, int> vals) { }

	// RVA: 0x174BFB4 Offset: 0x174BFB4 VA: 0x174BFB4
	public int getMovePositionUp() { }

	// RVA: 0x174C060 Offset: 0x174C060 VA: 0x174C060
	public int getMovePositionDown() { }

	// RVA: 0x174C10C Offset: 0x174C10C VA: 0x174C10C
	public bool IsRevivalUp() { }

	// RVA: 0x174C178 Offset: 0x174C178 VA: 0x174C178
	public bool IsRevivalUnder() { }

	// RVA: 0x174C1E4 Offset: 0x174C1E4 VA: 0x174C1E4
	public bool IsAress() { }

	// RVA: 0x174C250 Offset: 0x174C250 VA: 0x174C250
	public bool IsEnableTarget() { }

	// RVA: 0x174C2BC Offset: 0x174C2BC VA: 0x174C2BC
	public int[] GetAddIndiv() { }

	// RVA: 0x174C494 Offset: 0x174C494 VA: 0x174C494
	public Nullable<int> GetFuncIndexForSplitFuncSequence() { }

	// RVA: 0x174C568 Offset: 0x174C568 VA: 0x174C568
	public List<int> GetOptionalBattleEffectIdList() { }

	// RVA: 0x174C630 Offset: 0x174C630 VA: 0x174C630
	public bool IsIgnoreWhiteFade() { }

	// RVA: 0x174C684 Offset: 0x174C684 VA: 0x174C684
	public int[] GetActRarity() { }

	// RVA: 0x174C6D4 Offset: 0x174C6D4 VA: 0x174C6D4
	private int[] GetIntArrayFromScript(string key) { }

	// RVA: 0x174C958 Offset: 0x174C958 VA: 0x174C958
	public List<SkillLvEntity.SvtChangeBgm> GetSvtChangeBgm() { }

	// RVA: 0x174CD88 Offset: 0x174CD88 VA: 0x174CD88
	public int GetScriptIntParam(string key, int defaultValue = -1) { }

	// RVA: 0x174CE44 Offset: 0x174CE44 VA: 0x174CE44
	public bool IsNoTargetSkipSkill() { }

	// RVA: 0x174CEA4 Offset: 0x174CEA4 VA: 0x174CEA4
	public int GetAddInvokeSkillId() { }

	// RVA: 0x174CEF8 Offset: 0x174CEF8 VA: 0x174CEF8
	public int GetAddInvokeSkillLv() { }

	// RVA: 0x174CF4C Offset: 0x174CF4C VA: 0x174CF4C
	public int GetAddInvokeSkillActorType() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA8C8 Offset: 0xCCA8C8 VA: 0xCCA8C8
	// RVA: 0x174CFA0 Offset: 0x174CFA0 VA: 0x174CFA0
	private static Nullable<int> <GetFuncIndexForSplitFuncSequence>m__0(long x) { }
}

// Namespace: 
public class SkillLvEntity.SvtChangeBgm // TypeDefIndex: 7307
{
	// Fields
	public int svtIndv; // 0x10
	public int questId; // 0x14
	public int questPhase; // 0x18
	public int beforeClearBgmId; // 0x1C
	public int afterClearBgmId; // 0x20

	// Methods

	// RVA: 0x174CBFC Offset: 0x174CBFC VA: 0x174CBFC
	public void .ctor(Dictionary<string, object> obj) { }
}

// Namespace: 
public class SkillLvMaster : DataMasterBase<SkillLvMaster, SkillLvEntity, string> // TypeDefIndex: 7308
{
	// Methods

	// RVA: 0x174D008 Offset: 0x174D008 VA: 0x174D008
	public void .ctor() { }

	// RVA: 0x174D05C Offset: 0x174D05C VA: 0x174D05C
	public SkillLvEntity GetEntity(int skillId, int lv) { }

	// RVA: 0x174D0D0 Offset: 0x174D0D0 VA: 0x174D0D0
	public bool TryGetEntity(out SkillLvEntity entity, int skillId, int lv) { }

	// RVA: 0x174D154 Offset: 0x174D154 VA: 0x174D154
	public SkillLvEntity getEntityFromId(int skillId, int lv) { }

	// RVA: 0x174D2A8 Offset: 0x174D2A8 VA: 0x174D2A8
	public SkillLvEntity GetAddInvokeSkillLvEntity(SkillLvEntity skillLvEnt) { }
}

// Namespace: 
public enum SkillLvMaster.AddInvokeSkillActorType // TypeDefIndex: 7309
{
	// Fields
	public int value__; // 0x0
	public const SkillLvMaster.AddInvokeSkillActorType FIELD = 1;
}

// Namespace: 
public class SkillMaster : DataMasterBase<SkillMaster, SkillEntity, int> // TypeDefIndex: 7310
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55F0C Offset: 0xC55F0C VA: 0xC55F0C
	private static Comparison<SkillAddEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x174D314 Offset: 0x174D314 VA: 0x174D314
	public void .ctor() { }

	// RVA: 0x174D368 Offset: 0x174D368 VA: 0x174D368 Slot: 6
	public override bool preProcess() { }

	// RVA: 0x174D380 Offset: 0x174D380 VA: 0x174D380
	private void LinkToSkillAddEntity() { }

	// RVA: 0x174D8E8 Offset: 0x174D8E8 VA: 0x174D8E8
	public bool IsSkippable(int skillId) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA8D8 Offset: 0xCCA8D8 VA: 0xCCA8D8
	// RVA: 0x174D964 Offset: 0x174D964 VA: 0x174D964
	private static int <LinkToSkillAddEntity>m__0(SkillAddEntity x, SkillAddEntity y) { }
}

// Namespace: 
public class SpotAddEntity : DataEntityBase<string> // TypeDefIndex: 7311
{
	// Fields
	public int spotId; // 0x10
	public int priority; // 0x14
	public int overrideType; // 0x18
	public int targetId; // 0x1C
	public int condType; // 0x20
	public int condTargetId; // 0x24
	public int condNum; // 0x28

	// Methods

	// RVA: 0x13DFF88 Offset: 0x13DFF88 VA: 0x13DFF88
	public void .ctor() { }

	// RVA: 0x13DFFD8 Offset: 0x13DFFD8 VA: 0x13DFFD8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x13DFFEC Offset: 0x13DFFEC VA: 0x13DFFEC
	public static string CreatePK(int spotId, int priority, int overrideType) { }

	// RVA: 0x13E0000 Offset: 0x13E0000 VA: 0x13E0000
	public CondType.Kind GetCondType() { }
}

// Namespace: 
public enum SpotAddEntity.SpotOverwriteType // TypeDefIndex: 7312
{
	// Fields
	public int value__; // 0x0
	public const SpotAddEntity.SpotOverwriteType NONE = 0;
	public const SpotAddEntity.SpotOverwriteType FLAG = 1;
	public const SpotAddEntity.SpotOverwriteType PATH_POINT_RATIO = 2;
	public const SpotAddEntity.SpotOverwriteType PATH_POINT_RATIO_LIMIT = 3;
	public const SpotAddEntity.SpotOverwriteType NAME_PANEL_OFFSET_X = 4;
	public const SpotAddEntity.SpotOverwriteType NAME_PANEL_OFFSET_Y = 5;
}

// Namespace: 
public class SpotAddMaster : DataMasterBase<SpotAddMaster, SpotAddEntity, string> // TypeDefIndex: 7313
{
	// Methods

	// RVA: 0x13E0008 Offset: 0x13E0008 VA: 0x13E0008
	public void .ctor() { }

	// RVA: 0x13E005C Offset: 0x13E005C VA: 0x13E005C
	public SpotAddEntity GetEntity(int spotId, int priority, int overrideType) { }

	// RVA: 0x13E00E0 Offset: 0x13E00E0 VA: 0x13E00E0
	public bool TryGetEntity(out SpotAddEntity entity, int spotId, int priority, int overrideType) { }

	// RVA: 0x13E016C Offset: 0x13E016C VA: 0x13E016C
	public int GetPrioredID(SpotAddEntity.SpotOverwriteType type, int spotId, int defVal) { }

	// RVA: 0x13E01A0 Offset: 0x13E01A0 VA: 0x13E01A0
	public bool HasPrioredData(SpotAddEntity.SpotOverwriteType type, int spotId, out int data) { }

	// RVA: 0x13E03C8 Offset: 0x13E03C8 VA: 0x13E03C8
	public void OverwriteNamePanelOffset(int spotId, ref int ofsX, ref int ofsY) { }
}

// Namespace: 
public class SpotEntity : DataEntityBase<int> // TypeDefIndex: 7314
{
	// Fields
	public int id; // 0x10
	public int warId; // 0x14
	public int mapId; // 0x18
	public string name; // 0x20
	public int imageId; // 0x28
	public int x; // 0x2C
	public int y; // 0x30
	public int imageOfsX; // 0x34
	public int imageOfsY; // 0x38
	public int nameOfsX; // 0x3C
	public int nameOfsY; // 0x40
	public int questOfsX; // 0x44
	public int questOfsY; // 0x48
	public int nextOfsX; // 0x4C
	public int nextOfsY; // 0x50
	public int dispCondType1; // 0x54
	public int dispTargetId1; // 0x58
	public int dispTargetValue1; // 0x5C
	public int dispCondType2; // 0x60
	public int dispTargetId2; // 0x64
	public int dispTargetValue2; // 0x68
	public int activeCondType; // 0x6C
	public int activeTargetId; // 0x70
	public int activeTargetValue; // 0x74
	public int[] joinSpotIds; // 0x78
	public int flag; // 0x80
	public string closedMessage; // 0x88

	// Methods

	// RVA: 0x13E173C Offset: 0x13E173C VA: 0x13E173C
	public void .ctor() { }

	// RVA: 0x13E178C Offset: 0x13E178C VA: 0x13E178C
	public void .ctor(SpotEntity cSrc) { }

	// RVA: 0x13E1A18 Offset: 0x13E1A18 VA: 0x13E1A18
	public int getSpotId() { }

	// RVA: 0x13E1A20 Offset: 0x13E1A20 VA: 0x13E1A20
	public int getMapId() { }

	// RVA: 0x13E1A28 Offset: 0x13E1A28 VA: 0x13E1A28
	public int getDispCondType1() { }

	// RVA: 0x13E1A30 Offset: 0x13E1A30 VA: 0x13E1A30
	public int getDispTargetId1() { }

	// RVA: 0x13E1A38 Offset: 0x13E1A38 VA: 0x13E1A38
	public int getDispTargetValue1() { }

	// RVA: 0x13E1A40 Offset: 0x13E1A40 VA: 0x13E1A40
	public int getDispCondType2() { }

	// RVA: 0x13E1A48 Offset: 0x13E1A48 VA: 0x13E1A48
	public int getDispTargetId2() { }

	// RVA: 0x13E1A50 Offset: 0x13E1A50 VA: 0x13E1A50
	public int getDispTargetValue2() { }

	// RVA: 0x13E1A58 Offset: 0x13E1A58 VA: 0x13E1A58
	public int getActiveCondType() { }

	// RVA: 0x13E1A60 Offset: 0x13E1A60 VA: 0x13E1A60
	public int getActiveTargetId() { }

	// RVA: 0x13E1A68 Offset: 0x13E1A68 VA: 0x13E1A68
	public int getActiveTargetValue() { }

	// RVA: 0x13E1A70 Offset: 0x13E1A70 VA: 0x13E1A70 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x13E1A78 Offset: 0x13E1A78 VA: 0x13E1A78
	public bool HasFlag(SpotEntity.Flag flag) { }

	// RVA: 0x13E1B40 Offset: 0x13E1B40 VA: 0x13E1B40
	public bool isInJoinSpot(int spotId) { }

	// RVA: 0x13E1BEC Offset: 0x13E1BEC VA: 0x13E1BEC
	public int GetPrioredImgId() { }

	// RVA: 0x13E1FE4 Offset: 0x13E1FE4 VA: 0x13E1FE4
	public bool IsHiddenInFolder() { }
}

// Namespace: 
public enum SpotEntity.enSpotCondType // TypeDefIndex: 7315
{
	// Fields
	public int value__; // 0x0
	public const SpotEntity.enSpotCondType NONE = 1;
	public const SpotEntity.enSpotCondType QUEST_CLEAR = 2;
	public const SpotEntity.enSpotCondType NOT_QUEST_CLEAR = 3;
	public const SpotEntity.enSpotCondType INVALID = 4;
	public const SpotEntity.enSpotCondType MISSION_ACHIEVE = 5;
	public const SpotEntity.enSpotCondType QUEST_RELEASED = 6;
	public const SpotEntity.enSpotCondType NOT_QUEST_GROUP_CLEAR = 7;
	public const SpotEntity.enSpotCondType QUEST_GROUP_CLEAR = 8;
	public const SpotEntity.enSpotCondType ITEM_GET = 9;
	public const SpotEntity.enSpotCondType QUEST_CLEAR_RAW = 10;
	public const SpotEntity.enSpotCondType QUEST_GROUP_CLEAR_RAW = 11;
	public const SpotEntity.enSpotCondType EVENT_GROUP_POINT_RATIO_IN_TERM = 12;
	public const SpotEntity.enSpotCondType EVENT_RACE_SCRIPT_PLAYED = 13;
	public const SpotEntity.enSpotCondType QUEST_CLEAR_PHASE = 14;
	public const SpotEntity.enSpotCondType NOT_QUEST_CLEAR_PHASE = 15;
	public const SpotEntity.enSpotCondType NOT_MISSION_ACHIEVE = 16;
	public const SpotEntity.enSpotCondType QUEST_AVAILABLE = 17;
	public const SpotEntity.enSpotCondType EVENT_GROUP_POINT = 18;
	public const SpotEntity.enSpotCondType EVENT_GROUP_POINT_BELOW = 19;
	public const SpotEntity.enSpotCondType EVENT_TOTAL_POINT = 20;
	public const SpotEntity.enSpotCondType EVENT_TOTAL_POINT_BELOW = 21;
	public const SpotEntity.enSpotCondType EVENT_VALUE = 22;
	public const SpotEntity.enSpotCondType EVENT_VALUE_BELOW = 23;
	public const SpotEntity.enSpotCondType EVENT_FLAG = 24;
	public const SpotEntity.enSpotCondType EVENT_STATUS = 25;
