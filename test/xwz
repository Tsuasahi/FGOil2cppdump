
	// RVA: 0x21E3584 Offset: 0x21E3584 VA: 0x21E3584
	public void .ctor() { }

	// RVA: 0x21E358C Offset: 0x21E358C VA: 0x21E358C Slot: 28
	public override void Reset() { }

	// RVA: 0x21E35FC Offset: 0x21E35FC VA: 0x21E35FC Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA367C Offset: 0xCA367C VA: 0xCA367C
[TooltipAttribute] // RVA: 0xCA367C Offset: 0xCA367C VA: 0xCA367C
public class PlayerPrefsSetInt : FsmStateAction // TypeDefIndex: 12694
{
	// Fields
	[CompoundArrayAttribute] // RVA: 0xD15C18 Offset: 0xD15C18 VA: 0xD15C18
	[TooltipAttribute] // RVA: 0xD15C18 Offset: 0xD15C18 VA: 0xD15C18
	public FsmString[] keys; // 0x50
	public FsmInt[] values; // 0x58

	// Methods

	// RVA: 0x21E386C Offset: 0x21E386C VA: 0x21E386C
	public void .ctor() { }

	// RVA: 0x21E3874 Offset: 0x21E3874 VA: 0x21E3874 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E38E4 Offset: 0x21E38E4 VA: 0x21E38E4 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA36DC Offset: 0xCA36DC VA: 0xCA36DC
[TooltipAttribute] // RVA: 0xCA36DC Offset: 0xCA36DC VA: 0xCA36DC
public class PlayerPrefsSetString : FsmStateAction // TypeDefIndex: 12695
{
	// Fields
	[CompoundArrayAttribute] // RVA: 0xD15CA8 Offset: 0xD15CA8 VA: 0xD15CA8
	[TooltipAttribute] // RVA: 0xD15CA8 Offset: 0xD15CA8 VA: 0xD15CA8
	public FsmString[] keys; // 0x50
	public FsmString[] values; // 0x58

	// Methods

	// RVA: 0x21E3B5C Offset: 0x21E3B5C VA: 0x21E3B5C
	public void .ctor() { }

	// RVA: 0x21E3B64 Offset: 0x21E3B64 VA: 0x21E3B64 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E3BCC Offset: 0x21E3BCC VA: 0x21E3BCC Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA373C Offset: 0xCA373C VA: 0xCA373C
[TooltipAttribute] // RVA: 0xCA373C Offset: 0xCA373C VA: 0xCA373C
public class PlayRandomAnimation : BaseAnimationAction // TypeDefIndex: 12696
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD15D38 Offset: 0xD15D38 VA: 0xD15D38
	[CheckForComponentAttribute] // RVA: 0xD15D38 Offset: 0xD15D38 VA: 0xD15D38
	[TooltipAttribute] // RVA: 0xD15D38 Offset: 0xD15D38 VA: 0xD15D38
	public FsmOwnerDefault gameObject; // 0x60
	[CompoundArrayAttribute] // RVA: 0xD15DD0 Offset: 0xD15DD0 VA: 0xD15DD0
	[UIHintAttribute] // RVA: 0xD15DD0 Offset: 0xD15DD0 VA: 0xD15DD0
	public FsmString[] animations; // 0x68
	[HasFloatSliderAttribute] // RVA: 0xD15E50 Offset: 0xD15E50 VA: 0xD15E50
	public FsmFloat[] weights; // 0x70
	[TooltipAttribute] // RVA: 0xD15E68 Offset: 0xD15E68 VA: 0xD15E68
	public PlayMode playMode; // 0x78
	[HasFloatSliderAttribute] // RVA: 0xD15EA0 Offset: 0xD15EA0 VA: 0xD15EA0
	[TooltipAttribute] // RVA: 0xD15EA0 Offset: 0xD15EA0 VA: 0xD15EA0
	public FsmFloat blendTime; // 0x80
	[TooltipAttribute] // RVA: 0xD15EF4 Offset: 0xD15EF4 VA: 0xD15EF4
	public FsmEvent finishEvent; // 0x88
	[TooltipAttribute] // RVA: 0xD15F2C Offset: 0xD15F2C VA: 0xD15F2C
	public FsmEvent loopEvent; // 0x90
	[TooltipAttribute] // RVA: 0xD15F64 Offset: 0xD15F64 VA: 0xD15F64
	public bool stopOnExit; // 0x98
	private AnimationState anim; // 0xA0
	private float prevAnimtTime; // 0xA8

	// Methods

	// RVA: 0x21E0E70 Offset: 0x21E0E70 VA: 0x21E0E70
	public void .ctor() { }

	// RVA: 0x21E0E78 Offset: 0x21E0E78 VA: 0x21E0E78 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E0F10 Offset: 0x21E0F10 VA: 0x21E0F10 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E0F14 Offset: 0x21E0F14 VA: 0x21E0F14
	private void DoPlayRandomAnimation() { }

	// RVA: 0x21E0FD4 Offset: 0x21E0FD4 VA: 0x21E0FD4
	private void DoPlayAnimation(string animName) { }

	// RVA: 0x21E11F0 Offset: 0x21E11F0 VA: 0x21E11F0 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21E1448 Offset: 0x21E1448 VA: 0x21E1448 Slot: 37
	public override void OnExit() { }

	// RVA: 0x21E1458 Offset: 0x21E1458 VA: 0x21E1458
	private void StopAnimation() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA378C Offset: 0xCA378C VA: 0xCA378C
[TooltipAttribute] // RVA: 0xCA378C Offset: 0xCA378C VA: 0xCA378C
public class PlayRandomSound : FsmStateAction // TypeDefIndex: 12697
{
	// Fields
	[TooltipAttribute] // RVA: 0xD15F9C Offset: 0xD15F9C VA: 0xD15F9C
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xD15FD4 Offset: 0xD15FD4 VA: 0xD15FD4
	public FsmVector3 position; // 0x58
	[CompoundArrayAttribute] // RVA: 0xD1600C Offset: 0xD1600C VA: 0xD1600C
	[ObjectTypeAttribute] // RVA: 0xD1600C Offset: 0xD1600C VA: 0xD1600C
	public FsmObject[] audioClips; // 0x60
	[HasFloatSliderAttribute] // RVA: 0xD160C4 Offset: 0xD160C4 VA: 0xD160C4
	public FsmFloat[] weights; // 0x68
	[HasFloatSliderAttribute] // RVA: 0xD160DC Offset: 0xD160DC VA: 0xD160DC
	public FsmFloat volume; // 0x70
	[TooltipAttribute] // RVA: 0xD160F4 Offset: 0xD160F4 VA: 0xD160F4
	public FsmBool noRepeat; // 0x78
	private int randomIndex; // 0x80
	private int lastIndex; // 0x84

	// Methods

	// RVA: 0x21E1548 Offset: 0x21E1548 VA: 0x21E1548
	public void .ctor() { }

	// RVA: 0x21E1584 Offset: 0x21E1584 VA: 0x21E1584 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E1778 Offset: 0x21E1778 VA: 0x21E1778 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E17A0 Offset: 0x21E17A0 VA: 0x21E17A0
	private void DoPlayRandomClip() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA37DC Offset: 0xCA37DC VA: 0xCA37DC
[TooltipAttribute] // RVA: 0xCA37DC Offset: 0xCA37DC VA: 0xCA37DC
public class PlaySound : FsmStateAction // TypeDefIndex: 12698
{
	// Fields
	public FsmOwnerDefault gameObject; // 0x50
	public FsmVector3 position; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD1612C Offset: 0xD1612C VA: 0xD1612C
	[TitleAttribute] // RVA: 0xD1612C Offset: 0xD1612C VA: 0xD1612C
	[ObjectTypeAttribute] // RVA: 0xD1612C Offset: 0xD1612C VA: 0xD1612C
	public FsmObject clip; // 0x60
	[HasFloatSliderAttribute] // RVA: 0xD161C4 Offset: 0xD161C4 VA: 0xD161C4
	public FsmFloat volume; // 0x68

	// Methods

	// RVA: 0x21E2230 Offset: 0x21E2230 VA: 0x21E2230
	public void .ctor() { }

	// RVA: 0x21E2264 Offset: 0x21E2264 VA: 0x21E2264 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E22F4 Offset: 0x21E22F4 VA: 0x21E22F4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E231C Offset: 0x21E231C VA: 0x21E231C
	private void DoPlaySound() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA382C Offset: 0xCA382C VA: 0xCA382C
[TooltipAttribute] // RVA: 0xCA382C Offset: 0xCA382C VA: 0xCA382C
public class RebuildTextures : FsmStateAction // TypeDefIndex: 12699
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD161DC Offset: 0xD161DC VA: 0xD161DC
	public FsmMaterial substanceMaterial; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD161EC Offset: 0xD161EC VA: 0xD161EC
	public FsmBool immediately; // 0x58
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x21E81A0 Offset: 0x21E81A0 VA: 0x21E81A0
	public void .ctor() { }

	// RVA: 0x21E81A8 Offset: 0x21E81A8 VA: 0x21E81A8 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E81DC Offset: 0x21E81DC VA: 0x21E81DC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E81F4 Offset: 0x21E81F4 VA: 0x21E81F4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21E81F0 Offset: 0x21E81F0 VA: 0x21E81F0
	private void DoRebuildTextures() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA388C Offset: 0xCA388C VA: 0xCA388C
[TooltipAttribute] // RVA: 0xCA388C Offset: 0xCA388C VA: 0xCA388C
public class SetProceduralBoolean : FsmStateAction // TypeDefIndex: 12700
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD161FC Offset: 0xD161FC VA: 0xD161FC
	[TooltipAttribute] // RVA: 0xD161FC Offset: 0xD161FC VA: 0xD161FC
	public FsmMaterial substanceMaterial; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD16248 Offset: 0xD16248 VA: 0xD16248
	[TooltipAttribute] // RVA: 0xD16248 Offset: 0xD16248 VA: 0xD16248
	public FsmString boolProperty; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD16294 Offset: 0xD16294 VA: 0xD16294
	[TooltipAttribute] // RVA: 0xD16294 Offset: 0xD16294 VA: 0xD16294
	public FsmBool boolValue; // 0x60
	[TooltipAttribute] // RVA: 0xD162E0 Offset: 0xD162E0 VA: 0xD162E0
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x211FEAC Offset: 0x211FEAC VA: 0x211FEAC
	public void .ctor() { }

	// RVA: 0x211FEB4 Offset: 0x211FEB4 VA: 0x211FEB4 Slot: 28
	public override void Reset() { }

	// RVA: 0x211FF44 Offset: 0x211FF44 VA: 0x211FF44 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x211FF5C Offset: 0x211FF5C VA: 0x211FF5C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x211FF58 Offset: 0x211FF58 VA: 0x211FF58
	private void DoSetProceduralFloat() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA38EC Offset: 0xCA38EC VA: 0xCA38EC
[TooltipAttribute] // RVA: 0xCA38EC Offset: 0xCA38EC VA: 0xCA38EC
public class SetProceduralColor : FsmStateAction // TypeDefIndex: 12701
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD16318 Offset: 0xD16318 VA: 0xD16318
	[TooltipAttribute] // RVA: 0xD16318 Offset: 0xD16318 VA: 0xD16318
	public FsmMaterial substanceMaterial; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD16364 Offset: 0xD16364 VA: 0xD16364
	[TooltipAttribute] // RVA: 0xD16364 Offset: 0xD16364 VA: 0xD16364
	public FsmString colorProperty; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD163B0 Offset: 0xD163B0 VA: 0xD163B0
	[TooltipAttribute] // RVA: 0xD163B0 Offset: 0xD163B0 VA: 0xD163B0
	public FsmColor colorValue; // 0x60
	[TooltipAttribute] // RVA: 0xD163FC Offset: 0xD163FC VA: 0xD163FC
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x211FF60 Offset: 0x211FF60 VA: 0x211FF60
	public void .ctor() { }

	// RVA: 0x211FF68 Offset: 0x211FF68 VA: 0x211FF68 Slot: 28
	public override void Reset() { }

	// RVA: 0x211FFFC Offset: 0x211FFFC VA: 0x211FFFC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2120014 Offset: 0x2120014 VA: 0x2120014 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2120010 Offset: 0x2120010 VA: 0x2120010
	private void DoSetProceduralFloat() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA394C Offset: 0xCA394C VA: 0xCA394C
[TooltipAttribute] // RVA: 0xCA394C Offset: 0xCA394C VA: 0xCA394C
public class SetProceduralFloat : FsmStateAction // TypeDefIndex: 12702
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD16434 Offset: 0xD16434 VA: 0xD16434
	[TooltipAttribute] // RVA: 0xD16434 Offset: 0xD16434 VA: 0xD16434
	public FsmMaterial substanceMaterial; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD16480 Offset: 0xD16480 VA: 0xD16480
	[TooltipAttribute] // RVA: 0xD16480 Offset: 0xD16480 VA: 0xD16480
	public FsmString floatProperty; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD164CC Offset: 0xD164CC VA: 0xD164CC
	[TooltipAttribute] // RVA: 0xD164CC Offset: 0xD164CC VA: 0xD164CC
	public FsmFloat floatValue; // 0x60
	[TooltipAttribute] // RVA: 0xD16518 Offset: 0xD16518 VA: 0xD16518
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x2120018 Offset: 0x2120018 VA: 0x2120018
	public void .ctor() { }

	// RVA: 0x2120020 Offset: 0x2120020 VA: 0x2120020 Slot: 28
	public override void Reset() { }

	// RVA: 0x21200B0 Offset: 0x21200B0 VA: 0x21200B0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21200C8 Offset: 0x21200C8 VA: 0x21200C8 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21200C4 Offset: 0x21200C4 VA: 0x21200C4
	private void DoSetProceduralFloat() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA39AC Offset: 0xCA39AC VA: 0xCA39AC
[TooltipAttribute] // RVA: 0xCA39AC Offset: 0xCA39AC VA: 0xCA39AC
public class SetProceduralVector2 : FsmStateAction // TypeDefIndex: 12703
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD16550 Offset: 0xD16550 VA: 0xD16550
	[TooltipAttribute] // RVA: 0xD16550 Offset: 0xD16550 VA: 0xD16550
	public FsmMaterial substanceMaterial; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD1659C Offset: 0xD1659C VA: 0xD1659C
	[TooltipAttribute] // RVA: 0xD1659C Offset: 0xD1659C VA: 0xD1659C
	public FsmString vector2Property; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD165E8 Offset: 0xD165E8 VA: 0xD165E8
	[TooltipAttribute] // RVA: 0xD165E8 Offset: 0xD165E8 VA: 0xD165E8
	public FsmVector2 vector2Value; // 0x60
	[TooltipAttribute] // RVA: 0xD16634 Offset: 0xD16634 VA: 0xD16634
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x21200CC Offset: 0x21200CC VA: 0x21200CC
	public void .ctor() { }

	// RVA: 0x21200D4 Offset: 0x21200D4 VA: 0x21200D4 Slot: 28
	public override void Reset() { }

	// RVA: 0x21200E4 Offset: 0x21200E4 VA: 0x21200E4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21200FC Offset: 0x21200FC VA: 0x21200FC Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21200F8 Offset: 0x21200F8 VA: 0x21200F8
	private void DoSetProceduralVector() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA3A0C Offset: 0xCA3A0C VA: 0xCA3A0C
[TooltipAttribute] // RVA: 0xCA3A0C Offset: 0xCA3A0C VA: 0xCA3A0C
public class SetProceduralVector3 : FsmStateAction // TypeDefIndex: 12704
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD1666C Offset: 0xD1666C VA: 0xD1666C
	[TooltipAttribute] // RVA: 0xD1666C Offset: 0xD1666C VA: 0xD1666C
	public FsmMaterial substanceMaterial; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD166B8 Offset: 0xD166B8 VA: 0xD166B8
	[TooltipAttribute] // RVA: 0xD166B8 Offset: 0xD166B8 VA: 0xD166B8
	public FsmString vector3Property; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD16704 Offset: 0xD16704 VA: 0xD16704
	[TooltipAttribute] // RVA: 0xD16704 Offset: 0xD16704 VA: 0xD16704
	public FsmVector3 vector3Value; // 0x60
	[TooltipAttribute] // RVA: 0xD16750 Offset: 0xD16750 VA: 0xD16750
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x2120100 Offset: 0x2120100 VA: 0x2120100
	public void .ctor() { }

	// RVA: 0x2120108 Offset: 0x2120108 VA: 0x2120108 Slot: 28
	public override void Reset() { }

	// RVA: 0x2120118 Offset: 0x2120118 VA: 0x2120118 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2120130 Offset: 0x2120130 VA: 0x2120130 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x212012C Offset: 0x212012C VA: 0x212012C
	private void DoSetProceduralVector() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA3A6C Offset: 0xCA3A6C VA: 0xCA3A6C
[TooltipAttribute] // RVA: 0xCA3A6C Offset: 0xCA3A6C VA: 0xCA3A6C
public class ProjectLocationToMap : FsmStateAction // TypeDefIndex: 12705
{
	// Fields
	[TooltipAttribute] // RVA: 0xD16788 Offset: 0xD16788 VA: 0xD16788
	public FsmVector3 GPSLocation; // 0x50
	[TooltipAttribute] // RVA: 0xD167C0 Offset: 0xD167C0 VA: 0xD167C0
	public ProjectLocationToMap.MapProjection mapProjection; // 0x58
	[ActionSection] // RVA: 0xD167F8 Offset: 0xD167F8 VA: 0xD167F8
	[HasFloatSliderAttribute] // RVA: 0xD167F8 Offset: 0xD167F8 VA: 0xD167F8
	public FsmFloat minLongitude; // 0x60
	[HasFloatSliderAttribute] // RVA: 0xD16854 Offset: 0xD16854 VA: 0xD16854
	public FsmFloat maxLongitude; // 0x68
	[HasFloatSliderAttribute] // RVA: 0xD16874 Offset: 0xD16874 VA: 0xD16874
	public FsmFloat minLatitude; // 0x70
	[HasFloatSliderAttribute] // RVA: 0xD16894 Offset: 0xD16894 VA: 0xD16894
	public FsmFloat maxLatitude; // 0x78
	[ActionSection] // RVA: 0xD168B4 Offset: 0xD168B4 VA: 0xD168B4
	public FsmFloat minX; // 0x80
	public FsmFloat minY; // 0x88
	public FsmFloat width; // 0x90
	public FsmFloat height; // 0x98
	[ActionSection] // RVA: 0xD168EC Offset: 0xD168EC VA: 0xD168EC
	[UIHintAttribute] // RVA: 0xD168EC Offset: 0xD168EC VA: 0xD168EC
	[TooltipAttribute] // RVA: 0xD168EC Offset: 0xD168EC VA: 0xD168EC
	public FsmFloat projectedX; // 0xA0
	[UIHintAttribute] // RVA: 0xD16960 Offset: 0xD16960 VA: 0xD16960
	[TooltipAttribute] // RVA: 0xD16960 Offset: 0xD16960 VA: 0xD16960
	public FsmFloat projectedY; // 0xA8
	[TooltipAttribute] // RVA: 0xD169B0 Offset: 0xD169B0 VA: 0xD169B0
	public FsmBool normalized; // 0xB0
	public bool everyFrame; // 0xB8
	private float x; // 0xBC
	private float y; // 0xC0

	// Methods

	// RVA: 0x21E3F58 Offset: 0x21E3F58 VA: 0x21E3F58
	public void .ctor() { }

	// RVA: 0x21E3F60 Offset: 0x21E3F60 VA: 0x21E3F60 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E4094 Offset: 0x21E4094 VA: 0x21E4094 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E43BC Offset: 0x21E43BC VA: 0x21E43BC Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21E40F4 Offset: 0x21E40F4 VA: 0x21E40F4
	private void DoProjectGPSLocation() { }

	// RVA: 0x21E43C0 Offset: 0x21E43C0 VA: 0x21E43C0
	private void DoEquidistantCylindrical() { }

	// RVA: 0x21E44CC Offset: 0x21E44CC VA: 0x21E44CC
	private void DoMercatorProjection() { }

	// RVA: 0x21E45E4 Offset: 0x21E45E4 VA: 0x21E45E4
	private static float LatitudeToMercator(float latitudeInDegrees) { }
}

// Namespace: 
public enum ProjectLocationToMap.MapProjection // TypeDefIndex: 12706
{
	// Fields
	public int value__; // 0x0
	public const ProjectLocationToMap.MapProjection EquidistantCylindrical = 0;
	public const ProjectLocationToMap.MapProjection Mercator = 1;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA3ABC Offset: 0xCA3ABC VA: 0xCA3ABC
[TooltipAttribute] // RVA: 0xCA3ABC Offset: 0xCA3ABC VA: 0xCA3ABC
public class GetQuaternionEulerAngles : QuaternionBaseAction // TypeDefIndex: 12707
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD169E8 Offset: 0xD169E8 VA: 0xD169E8
	[TooltipAttribute] // RVA: 0xD169E8 Offset: 0xD169E8 VA: 0xD169E8
	public FsmQuaternion quaternion; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD16A34 Offset: 0xD16A34 VA: 0xD16A34
	[UIHintAttribute] // RVA: 0xD16A34 Offset: 0xD16A34 VA: 0xD16A34
	[TooltipAttribute] // RVA: 0xD16A34 Offset: 0xD16A34 VA: 0xD16A34
	public FsmVector3 eulerAngles; // 0x58

	// Methods

	// RVA: 0x20E5F3C Offset: 0x20E5F3C VA: 0x20E5F3C
	public void .ctor() { }

	// RVA: 0x20E5F44 Offset: 0x20E5F44 VA: 0x20E5F44 Slot: 28
	public override void Reset() { }

	// RVA: 0x20E5F58 Offset: 0x20E5F58 VA: 0x20E5F58 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20E6028 Offset: 0x20E6028 VA: 0x20E6028 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x20E6038 Offset: 0x20E6038 VA: 0x20E6038 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x20E604C Offset: 0x20E604C VA: 0x20E604C Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x20E5F94 Offset: 0x20E5F94 VA: 0x20E5F94
	private void GetQuatEuler() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA3B0C Offset: 0xCA3B0C VA: 0xCA3B0C
[TooltipAttribute] // RVA: 0xCA3B0C Offset: 0xCA3B0C VA: 0xCA3B0C
public class GetQuaternionFromRotation : QuaternionBaseAction // TypeDefIndex: 12708
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD16A94 Offset: 0xD16A94 VA: 0xD16A94
	[TooltipAttribute] // RVA: 0xD16A94 Offset: 0xD16A94 VA: 0xD16A94
	public FsmVector3 fromDirection; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD16AE0 Offset: 0xD16AE0 VA: 0xD16AE0
	[TooltipAttribute] // RVA: 0xD16AE0 Offset: 0xD16AE0 VA: 0xD16AE0
	public FsmVector3 toDirection; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD16B2C Offset: 0xD16B2C VA: 0xD16B2C
	[UIHintAttribute] // RVA: 0xD16B2C Offset: 0xD16B2C VA: 0xD16B2C
	[TooltipAttribute] // RVA: 0xD16B2C Offset: 0xD16B2C VA: 0xD16B2C
	public FsmQuaternion result; // 0x60

	// Methods

	// RVA: 0x20E6060 Offset: 0x20E6060 VA: 0x20E6060
	public void .ctor() { }

	// RVA: 0x20E6068 Offset: 0x20E6068 VA: 0x20E6068 Slot: 28
	public override void Reset() { }

	// RVA: 0x20E6080 Offset: 0x20E6080 VA: 0x20E6080 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20E61E4 Offset: 0x20E61E4 VA: 0x20E61E4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x20E61F4 Offset: 0x20E61F4 VA: 0x20E61F4 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x20E6208 Offset: 0x20E6208 VA: 0x20E6208 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x20E60BC Offset: 0x20E60BC VA: 0x20E60BC
	private void DoQuatFromRotation() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA3B5C Offset: 0xCA3B5C VA: 0xCA3B5C
[TooltipAttribute] // RVA: 0xCA3B5C Offset: 0xCA3B5C VA: 0xCA3B5C
public class GetQuaternionMultipliedByQuaternion : QuaternionBaseAction // TypeDefIndex: 12709
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD16B8C Offset: 0xD16B8C VA: 0xD16B8C
	[TooltipAttribute] // RVA: 0xD16B8C Offset: 0xD16B8C VA: 0xD16B8C
	public FsmQuaternion quaternionA; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD16BD8 Offset: 0xD16BD8 VA: 0xD16BD8
	[TooltipAttribute] // RVA: 0xD16BD8 Offset: 0xD16BD8 VA: 0xD16BD8
	public FsmQuaternion quaternionB; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD16C24 Offset: 0xD16C24 VA: 0xD16C24
	[UIHintAttribute] // RVA: 0xD16C24 Offset: 0xD16C24 VA: 0xD16C24
	[TooltipAttribute] // RVA: 0xD16C24 Offset: 0xD16C24 VA: 0xD16C24
	public FsmQuaternion result; // 0x60

	// Methods

	// RVA: 0x20E621C Offset: 0x20E621C VA: 0x20E621C
	public void .ctor() { }

	// RVA: 0x20E6224 Offset: 0x20E6224 VA: 0x20E6224 Slot: 28
	public override void Reset() { }

	// RVA: 0x20E623C Offset: 0x20E623C VA: 0x20E623C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20E63B8 Offset: 0x20E63B8 VA: 0x20E63B8 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x20E63C8 Offset: 0x20E63C8 VA: 0x20E63C8 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x20E63DC Offset: 0x20E63DC VA: 0x20E63DC Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x20E6278 Offset: 0x20E6278 VA: 0x20E6278
	private void DoQuatMult() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA3BAC Offset: 0xCA3BAC VA: 0xCA3BAC
[TooltipAttribute] // RVA: 0xCA3BAC Offset: 0xCA3BAC VA: 0xCA3BAC
public class GetQuaternionMultipliedByVector : QuaternionBaseAction // TypeDefIndex: 12710
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD16C84 Offset: 0xD16C84 VA: 0xD16C84
	[TooltipAttribute] // RVA: 0xD16C84 Offset: 0xD16C84 VA: 0xD16C84
	public FsmQuaternion quaternion; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD16CD0 Offset: 0xD16CD0 VA: 0xD16CD0
	[TooltipAttribute] // RVA: 0xD16CD0 Offset: 0xD16CD0 VA: 0xD16CD0
	public FsmVector3 vector3; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD16D1C Offset: 0xD16D1C VA: 0xD16D1C
	[UIHintAttribute] // RVA: 0xD16D1C Offset: 0xD16D1C VA: 0xD16D1C
	[TooltipAttribute] // RVA: 0xD16D1C Offset: 0xD16D1C VA: 0xD16D1C
	public FsmVector3 result; // 0x60

	// Methods

	// RVA: 0x20E63F0 Offset: 0x20E63F0 VA: 0x20E63F0
	public void .ctor() { }

	// RVA: 0x20E63F8 Offset: 0x20E63F8 VA: 0x20E63F8 Slot: 28
	public override void Reset() { }

	// RVA: 0x20E6410 Offset: 0x20E6410 VA: 0x20E6410 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20E657C Offset: 0x20E657C VA: 0x20E657C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x20E658C Offset: 0x20E658C VA: 0x20E658C Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x20E65A0 Offset: 0x20E65A0 VA: 0x20E65A0 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x20E644C Offset: 0x20E644C VA: 0x20E644C
	private void DoQuatMult() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA3BFC Offset: 0xCA3BFC VA: 0xCA3BFC
[TooltipAttribute] // RVA: 0xCA3BFC Offset: 0xCA3BFC VA: 0xCA3BFC
public class QuaternionAngleAxis : QuaternionBaseAction // TypeDefIndex: 12711
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD16D7C Offset: 0xD16D7C VA: 0xD16D7C
	[TooltipAttribute] // RVA: 0xD16D7C Offset: 0xD16D7C VA: 0xD16D7C
	public FsmFloat angle; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD16DC8 Offset: 0xD16DC8 VA: 0xD16DC8
	[TooltipAttribute] // RVA: 0xD16DC8 Offset: 0xD16DC8 VA: 0xD16DC8
	public FsmVector3 axis; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD16E14 Offset: 0xD16E14 VA: 0xD16E14
	[UIHintAttribute] // RVA: 0xD16E14 Offset: 0xD16E14 VA: 0xD16E14
	[TooltipAttribute] // RVA: 0xD16E14 Offset: 0xD16E14 VA: 0xD16E14
	public FsmQuaternion result; // 0x60

	// Methods

	// RVA: 0x21E4734 Offset: 0x21E4734 VA: 0x21E4734
	public void .ctor() { }

	// RVA: 0x21E4744 Offset: 0x21E4744 VA: 0x21E4744 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E475C Offset: 0x21E475C VA: 0x21E475C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E48A8 Offset: 0x21E48A8 VA: 0x21E48A8 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21E48B8 Offset: 0x21E48B8 VA: 0x21E48B8 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x21E48CC Offset: 0x21E48CC VA: 0x21E48CC Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x21E4798 Offset: 0x21E4798 VA: 0x21E4798
	private void DoQuatAngleAxis() { }
}

// Namespace: HutongGames.PlayMaker.Actions
public abstract class QuaternionBaseAction : FsmStateAction // TypeDefIndex: 12712
{
	// Fields
	[TooltipAttribute] // RVA: 0xD16E74 Offset: 0xD16E74 VA: 0xD16E74
	public bool everyFrame; // 0x49
	[TooltipAttribute] // RVA: 0xD16EAC Offset: 0xD16EAC VA: 0xD16EAC
	public QuaternionBaseAction.everyFrameOptions everyFrameOption; // 0x4C

	// Methods

	// RVA: 0x21E473C Offset: 0x21E473C VA: 0x21E473C
	protected void .ctor() { }

	// RVA: 0x21E48E0 Offset: 0x21E48E0 VA: 0x21E48E0 Slot: 30
	public override void Awake() { }
}

// Namespace: 
public enum QuaternionBaseAction.everyFrameOptions // TypeDefIndex: 12713
{
	// Fields
	public int value__; // 0x0
	public const QuaternionBaseAction.everyFrameOptions Update = 0;
	public const QuaternionBaseAction.everyFrameOptions FixedUpdate = 1;
	public const QuaternionBaseAction.everyFrameOptions LateUpdate = 2;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA3C4C Offset: 0xCA3C4C VA: 0xCA3C4C
[TooltipAttribute] // RVA: 0xCA3C4C Offset: 0xCA3C4C VA: 0xCA3C4C
public class QuaternionCompare : QuaternionBaseAction // TypeDefIndex: 12714
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD16EE4 Offset: 0xD16EE4 VA: 0xD16EE4
	[TooltipAttribute] // RVA: 0xD16EE4 Offset: 0xD16EE4 VA: 0xD16EE4
	public FsmQuaternion Quaternion1; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD16F30 Offset: 0xD16F30 VA: 0xD16F30
	[TooltipAttribute] // RVA: 0xD16F30 Offset: 0xD16F30 VA: 0xD16F30
	public FsmQuaternion Quaternion2; // 0x58
	[TooltipAttribute] // RVA: 0xD16F7C Offset: 0xD16F7C VA: 0xD16F7C
	public FsmBool equal; // 0x60
	[TooltipAttribute] // RVA: 0xD16FB4 Offset: 0xD16FB4 VA: 0xD16FB4
	public FsmEvent equalEvent; // 0x68
	[TooltipAttribute] // RVA: 0xD16FEC Offset: 0xD16FEC VA: 0xD16FEC
	public FsmEvent notEqualEvent; // 0x70

	// Methods

	// RVA: 0x21E496C Offset: 0x21E496C VA: 0x21E496C
	public void .ctor() { }

	// RVA: 0x21E4974 Offset: 0x21E4974 VA: 0x21E4974 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E4A34 Offset: 0x21E4A34 VA: 0x21E4A34 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E4C04 Offset: 0x21E4C04 VA: 0x21E4C04 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21E4C14 Offset: 0x21E4C14 VA: 0x21E4C14 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x21E4C28 Offset: 0x21E4C28 VA: 0x21E4C28 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x21E4A70 Offset: 0x21E4A70 VA: 0x21E4A70
	private void DoQuatCompare() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA3C9C Offset: 0xCA3C9C VA: 0xCA3C9C
[TooltipAttribute] // RVA: 0xCA3C9C Offset: 0xCA3C9C VA: 0xCA3C9C
public class QuaternionEuler : QuaternionBaseAction // TypeDefIndex: 12715
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD17024 Offset: 0xD17024 VA: 0xD17024
	[TooltipAttribute] // RVA: 0xD17024 Offset: 0xD17024 VA: 0xD17024
	public FsmVector3 eulerAngles; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD17070 Offset: 0xD17070 VA: 0xD17070
	[UIHintAttribute] // RVA: 0xD17070 Offset: 0xD17070 VA: 0xD17070
	[TooltipAttribute] // RVA: 0xD17070 Offset: 0xD17070 VA: 0xD17070
	public FsmQuaternion result; // 0x58

	// Methods

	// RVA: 0x21E4C3C Offset: 0x21E4C3C VA: 0x21E4C3C
	public void .ctor() { }

	// RVA: 0x21E4C44 Offset: 0x21E4C44 VA: 0x21E4C44 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E4C58 Offset: 0x21E4C58 VA: 0x21E4C58 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E4D74 Offset: 0x21E4D74 VA: 0x21E4D74 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21E4D84 Offset: 0x21E4D84 VA: 0x21E4D84 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x21E4D98 Offset: 0x21E4D98 VA: 0x21E4D98 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x21E4C94 Offset: 0x21E4C94 VA: 0x21E4C94
	private void DoQuatEuler() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA3CEC Offset: 0xCA3CEC VA: 0xCA3CEC
[TooltipAttribute] // RVA: 0xCA3CEC Offset: 0xCA3CEC VA: 0xCA3CEC
public class QuaternionInverse : QuaternionBaseAction // TypeDefIndex: 12716
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD170D0 Offset: 0xD170D0 VA: 0xD170D0
	[TooltipAttribute] // RVA: 0xD170D0 Offset: 0xD170D0 VA: 0xD170D0
	public FsmQuaternion rotation; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD1711C Offset: 0xD1711C VA: 0xD1711C
	[UIHintAttribute] // RVA: 0xD1711C Offset: 0xD1711C VA: 0xD1711C
	[TooltipAttribute] // RVA: 0xD1711C Offset: 0xD1711C VA: 0xD1711C
	public FsmQuaternion result; // 0x58

	// Methods

	// RVA: 0x21E4DAC Offset: 0x21E4DAC VA: 0x21E4DAC
	public void .ctor() { }

	// RVA: 0x21E4DB4 Offset: 0x21E4DB4 VA: 0x21E4DB4 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E4DC8 Offset: 0x21E4DC8 VA: 0x21E4DC8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E4EEC Offset: 0x21E4EEC VA: 0x21E4EEC Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21E4EFC Offset: 0x21E4EFC VA: 0x21E4EFC Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x21E4F10 Offset: 0x21E4F10 VA: 0x21E4F10 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x21E4E04 Offset: 0x21E4E04 VA: 0x21E4E04
	private void DoQuatInverse() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA3D3C Offset: 0xCA3D3C VA: 0xCA3D3C
[TooltipAttribute] // RVA: 0xCA3D3C Offset: 0xCA3D3C VA: 0xCA3D3C
public class QuaternionLerp : QuaternionBaseAction // TypeDefIndex: 12717
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD1717C Offset: 0xD1717C VA: 0xD1717C
	[TooltipAttribute] // RVA: 0xD1717C Offset: 0xD1717C VA: 0xD1717C
	public FsmQuaternion fromQuaternion; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD171C8 Offset: 0xD171C8 VA: 0xD171C8
	[TooltipAttribute] // RVA: 0xD171C8 Offset: 0xD171C8 VA: 0xD171C8
	public FsmQuaternion toQuaternion; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD17214 Offset: 0xD17214 VA: 0xD17214
	[TooltipAttribute] // RVA: 0xD17214 Offset: 0xD17214 VA: 0xD17214
	[HasFloatSliderAttribute] // RVA: 0xD17214 Offset: 0xD17214 VA: 0xD17214
	public FsmFloat amount; // 0x60
	[RequiredFieldAttribute] // RVA: 0xD17278 Offset: 0xD17278 VA: 0xD17278
	[UIHintAttribute] // RVA: 0xD17278 Offset: 0xD17278 VA: 0xD17278
	[TooltipAttribute] // RVA: 0xD17278 Offset: 0xD17278 VA: 0xD17278
	public FsmQuaternion storeResult; // 0x68

	// Methods

	// RVA: 0x21E4F24 Offset: 0x21E4F24 VA: 0x21E4F24
	public void .ctor() { }

	// RVA: 0x21E4F2C Offset: 0x21E4F2C VA: 0x21E4F2C Slot: 28
	public override void Reset() { }

	// RVA: 0x21E5000 Offset: 0x21E5000 VA: 0x21E5000 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E51A8 Offset: 0x21E51A8 VA: 0x21E51A8 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21E51B8 Offset: 0x21E51B8 VA: 0x21E51B8 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x21E51CC Offset: 0x21E51CC VA: 0x21E51CC Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x21E503C Offset: 0x21E503C VA: 0x21E503C
	private void DoQuatLerp() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA3D8C Offset: 0xCA3D8C VA: 0xCA3D8C
[TooltipAttribute] // RVA: 0xCA3D8C Offset: 0xCA3D8C VA: 0xCA3D8C
public class QuaternionLookRotation : QuaternionBaseAction // TypeDefIndex: 12718
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD172D8 Offset: 0xD172D8 VA: 0xD172D8
	[TooltipAttribute] // RVA: 0xD172D8 Offset: 0xD172D8 VA: 0xD172D8
	public FsmVector3 direction; // 0x50
	[TooltipAttribute] // RVA: 0xD17324 Offset: 0xD17324 VA: 0xD17324
	public FsmVector3 upVector; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD1735C Offset: 0xD1735C VA: 0xD1735C
	[UIHintAttribute] // RVA: 0xD1735C Offset: 0xD1735C VA: 0xD1735C
	[TooltipAttribute] // RVA: 0xD1735C Offset: 0xD1735C VA: 0xD1735C
	public FsmQuaternion result; // 0x60

	// Methods

	// RVA: 0x21E51E0 Offset: 0x21E51E0 VA: 0x21E51E0
	public void .ctor() { }

	// RVA: 0x21E51E8 Offset: 0x21E51E8 VA: 0x21E51E8 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E527C Offset: 0x21E527C VA: 0x21E527C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E543C Offset: 0x21E543C VA: 0x21E543C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21E544C Offset: 0x21E544C VA: 0x21E544C Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x21E5460 Offset: 0x21E5460 VA: 0x21E5460 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x21E52B8 Offset: 0x21E52B8 VA: 0x21E52B8
	private void DoQuatLookRotation() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA3DDC Offset: 0xCA3DDC VA: 0xCA3DDC
[TooltipAttribute] // RVA: 0xCA3DDC Offset: 0xCA3DDC VA: 0xCA3DDC
public class QuaternionLowPassFilter : QuaternionBaseAction // TypeDefIndex: 12719
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD173BC Offset: 0xD173BC VA: 0xD173BC
	[UIHintAttribute] // RVA: 0xD173BC Offset: 0xD173BC VA: 0xD173BC
	[TooltipAttribute] // RVA: 0xD173BC Offset: 0xD173BC VA: 0xD173BC
	public FsmQuaternion quaternionVariable; // 0x50
	[TooltipAttribute] // RVA: 0xD1741C Offset: 0xD1741C VA: 0xD1741C
	public FsmFloat filteringFactor; // 0x58
	private Quaternion filteredQuaternion; // 0x60

	// Methods

	// RVA: 0x21E5474 Offset: 0x21E5474 VA: 0x21E5474
	public void .ctor() { }

	// RVA: 0x21E547C Offset: 0x21E547C VA: 0x21E547C Slot: 28
	public override void Reset() { }

	// RVA: 0x21E54BC Offset: 0x21E54BC VA: 0x21E54BC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E55B4 Offset: 0x21E55B4 VA: 0x21E55B4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21E5808 Offset: 0x21E5808 VA: 0x21E5808 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x21E581C Offset: 0x21E581C VA: 0x21E581C Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x21E55C4 Offset: 0x21E55C4 VA: 0x21E55C4
	private void DoQuatLowPassFilter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA3E2C Offset: 0xCA3E2C VA: 0xCA3E2C
[TooltipAttribute] // RVA: 0xCA3E2C Offset: 0xCA3E2C VA: 0xCA3E2C
public class QuaternionRotateTowards : QuaternionBaseAction // TypeDefIndex: 12720
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD17454 Offset: 0xD17454 VA: 0xD17454
	[TooltipAttribute] // RVA: 0xD17454 Offset: 0xD17454 VA: 0xD17454
	public FsmQuaternion fromQuaternion; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD174A0 Offset: 0xD174A0 VA: 0xD174A0
	[TooltipAttribute] // RVA: 0xD174A0 Offset: 0xD174A0 VA: 0xD174A0
	public FsmQuaternion toQuaternion; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD174EC Offset: 0xD174EC VA: 0xD174EC
	[TooltipAttribute] // RVA: 0xD174EC Offset: 0xD174EC VA: 0xD174EC
	public FsmFloat maxDegreesDelta; // 0x60
	[RequiredFieldAttribute] // RVA: 0xD17538 Offset: 0xD17538 VA: 0xD17538
	[UIHintAttribute] // RVA: 0xD17538 Offset: 0xD17538 VA: 0xD17538
	[TooltipAttribute] // RVA: 0xD17538 Offset: 0xD17538 VA: 0xD17538
	public FsmQuaternion storeResult; // 0x68

	// Methods

	// RVA: 0x21E5830 Offset: 0x21E5830 VA: 0x21E5830
	public void .ctor() { }

	// RVA: 0x21E5838 Offset: 0x21E5838 VA: 0x21E5838 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E590C Offset: 0x21E590C VA: 0x21E590C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E5AB4 Offset: 0x21E5AB4 VA: 0x21E5AB4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21E5AC4 Offset: 0x21E5AC4 VA: 0x21E5AC4 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x21E5AD8 Offset: 0x21E5AD8 VA: 0x21E5AD8 Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x21E5948 Offset: 0x21E5948 VA: 0x21E5948
	private void DoQuatRotateTowards() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA3E7C Offset: 0xCA3E7C VA: 0xCA3E7C
[TooltipAttribute] // RVA: 0xCA3E7C Offset: 0xCA3E7C VA: 0xCA3E7C
public class QuaternionSlerp : QuaternionBaseAction // TypeDefIndex: 12721
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD17598 Offset: 0xD17598 VA: 0xD17598
	[TooltipAttribute] // RVA: 0xD17598 Offset: 0xD17598 VA: 0xD17598
	public FsmQuaternion fromQuaternion; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD175E4 Offset: 0xD175E4 VA: 0xD175E4
	[TooltipAttribute] // RVA: 0xD175E4 Offset: 0xD175E4 VA: 0xD175E4
	public FsmQuaternion toQuaternion; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD17630 Offset: 0xD17630 VA: 0xD17630
	[TooltipAttribute] // RVA: 0xD17630 Offset: 0xD17630 VA: 0xD17630
	[HasFloatSliderAttribute] // RVA: 0xD17630 Offset: 0xD17630 VA: 0xD17630
	public FsmFloat amount; // 0x60
	[RequiredFieldAttribute] // RVA: 0xD17694 Offset: 0xD17694 VA: 0xD17694
	[UIHintAttribute] // RVA: 0xD17694 Offset: 0xD17694 VA: 0xD17694
	[TooltipAttribute] // RVA: 0xD17694 Offset: 0xD17694 VA: 0xD17694
	public FsmQuaternion storeResult; // 0x68

