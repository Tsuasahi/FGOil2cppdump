	// RVA: 0x134DCC8 Offset: 0x134DCC8 VA: 0x134DCC8
	private static void .cctor() { }
}

// Namespace: WellFired.Shared
public class GridRenderingCamera : MonoBehaviour // TypeDefIndex: 3633
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC88550 Offset: 0xC88550 VA: 0xC88550
	private bool[,] <Grid>k__BackingField; // 0x18
	public float gridWidth; // 0x20
	public float gridSpacing; // 0x24
	public Vector2 origin; // 0x28
	private Camera gridCamera; // 0x30

	// Properties
	public bool[,] Grid { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC886A0 Offset: 0xC886A0 VA: 0xC886A0
	// RVA: 0x134DD24 Offset: 0x134DD24 VA: 0x134DD24
	public bool[,] get_Grid() { }

	[CompilerGeneratedAttribute] // RVA: 0xC886B0 Offset: 0xC886B0 VA: 0xC886B0
	// RVA: 0x134DD2C Offset: 0x134DD2C VA: 0x134DD2C
	public void set_Grid(bool[,] value) { }

	// RVA: 0x134DD34 Offset: 0x134DD34 VA: 0x134DD34
	private void Start() { }

	// RVA: 0x134DD8C Offset: 0x134DD8C VA: 0x134DD8C
	private void OnPostRender() { }

	// RVA: 0x134DE7C Offset: 0x134DE7C VA: 0x134DE7C
	public void .ctor() { }
}

// Namespace: WellFired.Shared
public class BaseTransition // TypeDefIndex: 3634
{
	// Fields
	private List<Camera> additionalSourceCameras; // 0x10
	private List<Camera> additionalDestinationCameras; // 0x18
	private Camera sourceCamera; // 0x20
	private Camera destinationCamera; // 0x28
	private Material renderMaterial; // 0x30
	private RenderTexture introRenderTexture; // 0x38
	private RenderTexture outroRenderTexture; // 0x40
	private bool shouldRender; // 0x48
	private bool prevIntroCameraState; // 0x49
	private bool prevOutroCameraState; // 0x4A
	private float ratio; // 0x4C

	// Properties
	private RenderTexture IntroRenderTexture { get; }
	private RenderTexture OutroRenderTexture { get; }

	// Methods

	// RVA: 0x1349550 Offset: 0x1349550 VA: 0x1349550
	private RenderTexture get_IntroRenderTexture() { }

	// RVA: 0x134987C Offset: 0x134987C VA: 0x134987C
	private RenderTexture get_OutroRenderTexture() { }

	// RVA: 0x1349944 Offset: 0x1349944 VA: 0x1349944
	public void InitializeTransition(Camera sourceCamera, Camera destinationCamera, List<Camera> additionalSourceCameras, List<Camera> additionalDestinationCameras, TypeOfTransition transitionType) { }

	// RVA: 0x1349CCC Offset: 0x1349CCC VA: 0x1349CCC
	public void ProcessTransitionFromOnGUI() { }

	// RVA: 0x1349DE4 Offset: 0x1349DE4 VA: 0x1349DE4
	public void ProcessEventFromNoneOnGUI(float deltaTime, float duration) { }

	// RVA: 0x134A0EC Offset: 0x134A0EC VA: 0x134A0EC
	public void TransitionComplete() { }

	// RVA: 0x134A3DC Offset: 0x134A3DC VA: 0x134A3DC
	public void RevertTransition() { }

	// RVA: 0x134A780 Offset: 0x134A780 VA: 0x134A780
	public void .ctor() { }
}

// Namespace: WellFired.Shared
public static class TransitionHelper // TypeDefIndex: 3635
{
	// Fields
	private static Type gameViewType; // 0x0
	private static MethodInfo getMainGameView; // 0x8
	private static PropertyInfo gameViewRenderRect; // 0x10
	private static FieldInfo shownResolution; // 0x18
	private static object mainGameView; // 0x20

	// Properties
	private static Type GameViewType { get; }
	private static MethodInfo GetMainGameView { get; }
	private static PropertyInfo GameViewRenderRect { get; }
	private static FieldInfo ShownResolution { get; }
	private static object MainGameView { get; }
	public static Vector2 MainGameViewSize { get; }

	// Methods

	// RVA: 0x134E834 Offset: 0x134E834 VA: 0x134E834
	private static Type get_GameViewType() { }

	// RVA: 0x134E8F4 Offset: 0x134E8F4 VA: 0x134E8F4
	private static MethodInfo get_GetMainGameView() { }

	// RVA: 0x134EA00 Offset: 0x134EA00 VA: 0x134EA00
	private static PropertyInfo get_GameViewRenderRect() { }

	// RVA: 0x134EB0C Offset: 0x134EB0C VA: 0x134EB0C
	private static FieldInfo get_ShownResolution() { }

	// RVA: 0x134EC18 Offset: 0x134EC18 VA: 0x134EC18
	private static object get_MainGameView() { }

	// RVA: 0x1349618 Offset: 0x1349618 VA: 0x1349618
	public static Vector2 get_MainGameViewSize() { }
}

// Namespace: WellFired.Shared
public enum TypeOfTransition // TypeDefIndex: 3636
{
	// Fields
	public int value__; // 0x0
	public const TypeOfTransition Cut = 0;
	public const TypeOfTransition Dissolve = 1;
	public const TypeOfTransition WipeLeft = 2;
	public const TypeOfTransition WipeRight = 3;
	public const TypeOfTransition WipeUp = 4;
	public const TypeOfTransition WipeDown = 5;
}

// Namespace: WellFired.Data
[Serializable]
public class DataBaseEntry // TypeDefIndex: 3637
{
	// Methods

	// RVA: 0x134948C Offset: 0x134948C VA: 0x134948C
	public void .ctor() { }
}

// Namespace: WellFired.Data
public class DataComponent : MonoBehaviour // TypeDefIndex: 3638
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC88560 Offset: 0xC88560 VA: 0xC88560
	private DataBaseEntry <Data>k__BackingField; // 0x18

	// Properties
	protected DataBaseEntry Data { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC886C0 Offset: 0xC886C0 VA: 0xC886C0
	// RVA: 0x1349494 Offset: 0x1349494 VA: 0x1349494
	protected DataBaseEntry get_Data() { }

	[CompilerGeneratedAttribute] // RVA: 0xC886D0 Offset: 0xC886D0 VA: 0xC886D0
	// RVA: 0x134949C Offset: 0x134949C VA: 0x134949C
	protected void set_Data(DataBaseEntry value) { }

	// RVA: 0x13494A4 Offset: 0x13494A4 VA: 0x13494A4
	public void InitFromData(DataBaseEntry data) { }

	// RVA: 0x13494AC Offset: 0x13494AC VA: 0x13494AC Slot: 4
	protected virtual void Start() { }

	// RVA: 0x1349548 Offset: 0x1349548 VA: 0x1349548
	public void .ctor() { }
}

// Namespace: WellFired.Initialization
public class ContextInitializer<T> : MonoBehaviour // TypeDefIndex: 3639
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC88570 Offset: 0xC88570 VA: 0xC88570
	private T <Context>k__BackingField; // 0x0

	// Properties
	protected T Context { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC886E0 Offset: 0xC886E0 VA: 0xC886E0
	// RVA: -1 Offset: -1
	protected T get_Context() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B93EA8 Offset: 0x2B93EA8 VA: 0x2B93EA8
	|-ContextInitializer<object>.get_Context
	*/

	[CompilerGeneratedAttribute] // RVA: 0xC886F0 Offset: 0xC886F0 VA: 0xC886F0
	// RVA: -1 Offset: -1
	protected void set_Context(T value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B93EB0 Offset: 0x2B93EB0 VA: 0x2B93EB0
	|-ContextInitializer<object>.set_Context
	*/

	// RVA: -1 Offset: -1
	private void Start() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B93EB8 Offset: 0x2B93EB8 VA: 0x2B93EB8
	|-ContextInitializer<object>.Start
	*/

	// RVA: -1 Offset: -1 Slot: 4
	protected virtual void Ready() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B93F88 Offset: 0x2B93F88 VA: 0x2B93F88
	|-ContextInitializer<object>.Ready
	*/

	// RVA: -1 Offset: -1
	public void SetContext(T context) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B93FFC Offset: 0x2B93FFC VA: 0x2B93FFC
	|-ContextInitializer<object>.SetContext
	*/

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B94184 Offset: 0x2B94184 VA: 0x2B94184
	|-ContextInitializer<object>..ctor
	*/
}

// Namespace: WellFired.Initialization
public interface IInitializationContext // TypeDefIndex: 3640
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract bool IsContextSetupComplete();
}

// Namespace: 
internal class <Module> // TypeDefIndex: 3641
{}

// Namespace: PlayMaker.ConditionalExpression
public sealed class CompiledAst // TypeDefIndex: 3642
{}

// Namespace: PlayMaker.ConditionalExpression
public interface IEvaluatorContext // TypeDefIndex: 3643
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract FsmVar GetVariable(string name);
}

// Namespace: PlayMaker.ConditionalExpression
public class VariableNotFoundException : Exception // TypeDefIndex: 3644
{
	// Methods

	// RVA: 0x138AB60 Offset: 0x138AB60 VA: 0x138AB60
	public void .ctor(string variableName) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 3645
{}

// Namespace: Firebase.Messaging
public sealed class FirebaseMessaging // TypeDefIndex: 3646
{
	// Fields
	private static EventHandler<MessageReceivedEventArgs> MessageReceivedInternal; // 0x0
	private static EventHandler<TokenReceivedEventArgs> TokenReceivedInternal; // 0x8
	private static FirebaseMessaging.Listener listener; // 0x10

	// Methods

	// RVA: 0x135EE6C Offset: 0x135EE6C VA: 0x135EE6C
	private static void .cctor() { }

	// RVA: 0x135EFDC Offset: 0x135EFDC VA: 0x135EFDC
	internal static void add_MessageReceivedInternal(EventHandler<MessageReceivedEventArgs> value) { }

	// RVA: 0x135F11C Offset: 0x135F11C VA: 0x135F11C
	internal static void remove_MessageReceivedInternal(EventHandler<MessageReceivedEventArgs> value) { }

	// RVA: 0x135F25C Offset: 0x135F25C VA: 0x135F25C
	internal static void add_TokenReceivedInternal(EventHandler<TokenReceivedEventArgs> value) { }

	// RVA: 0x135F39C Offset: 0x135F39C VA: 0x135F39C
	internal static void remove_TokenReceivedInternal(EventHandler<TokenReceivedEventArgs> value) { }

	// RVA: 0x135F4DC Offset: 0x135F4DC VA: 0x135F4DC
	internal static void CreateOrDestroyListener() { }

	// RVA: 0x135F8F8 Offset: 0x135F8F8 VA: 0x135F8F8
	public static void add_MessageReceived(EventHandler<MessageReceivedEventArgs> value) { }

	// RVA: 0x135F9FC Offset: 0x135F9FC VA: 0x135F9FC
	public static void remove_MessageReceived(EventHandler<MessageReceivedEventArgs> value) { }

	// RVA: 0x135FB00 Offset: 0x135FB00 VA: 0x135FB00
	public static void add_TokenReceived(EventHandler<TokenReceivedEventArgs> value) { }

	// RVA: 0x135FC04 Offset: 0x135FC04 VA: 0x135FC04
	public static void remove_TokenReceived(EventHandler<TokenReceivedEventArgs> value) { }

	// RVA: 0x135FD08 Offset: 0x135FD08 VA: 0x135FD08
	private static void SetListenerCallbacks(FirebaseMessaging.Listener.MessageReceivedDelegate messageCallback, FirebaseMessaging.Listener.TokenReceivedDelegate tokenCallback) { }

	// RVA: 0x135F758 Offset: 0x135F758 VA: 0x135F758
	private static void SetListenerCallbacksEnabled(bool message_callback_enabled, bool token_callback_enabled) { }

	// RVA: 0x135F834 Offset: 0x135F834 VA: 0x135F834
	private static void SendPendingEvents() { }
}

// Namespace: 
internal class FirebaseMessaging.Listener : IDisposable // TypeDefIndex: 3647
{
	// Fields
	private FirebaseMessaging.Listener.MessageReceivedDelegate messageReceivedDelegate; // 0x10
	private FirebaseMessaging.Listener.TokenReceivedDelegate tokenReceivedDelegate; // 0x18
	private FirebaseApp app; // 0x20
	private static FirebaseMessaging.Listener listener; // 0x0

	// Methods

	// RVA: 0x1360170 Offset: 0x1360170 VA: 0x1360170
	private void .ctor() { }

	// RVA: 0x135EEC0 Offset: 0x135EEC0 VA: 0x135EEC0
	internal static FirebaseMessaging.Listener Create() { }

	// RVA: 0x135F668 Offset: 0x135F668 VA: 0x135F668
	internal static void Destroy() { }

	// RVA: 0x13603D0 Offset: 0x13603D0 VA: 0x13603D0 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1360290 Offset: 0x1360290 VA: 0x1360290 Slot: 4
	public void Dispose() { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC88B0C Offset: 0xC88B0C VA: 0xC88B0C
	// RVA: 0x135FFDC Offset: 0x135FFDC VA: 0x135FFDC
	private static int MessageReceivedDelegateMethod(IntPtr message) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC88B70 Offset: 0xC88B70 VA: 0xC88B70
	// RVA: 0x13600B0 Offset: 0x13600B0 VA: 0x13600B0
	private static void TokenReceivedDelegateMethod(string token) { }
}

// Namespace: 
internal sealed class FirebaseMessaging.Listener.MessageReceivedDelegate : MulticastDelegate // TypeDefIndex: 3648
{
	// Methods

	// RVA: 0x1360270 Offset: 0x1360270 VA: 0x1360270
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x13606F0 Offset: 0x13606F0 VA: 0x13606F0 Slot: 11
	public virtual int Invoke(IntPtr message) { }

	// RVA: 0x1360920 Offset: 0x1360920 VA: 0x1360920 Slot: 12
	public virtual IAsyncResult BeginInvoke(IntPtr message, AsyncCallback callback, object object) { }

	// RVA: 0x13609AC Offset: 0x13609AC VA: 0x13609AC Slot: 13
	public virtual int EndInvoke(IAsyncResult result) { }
}

// Namespace: 
internal sealed class FirebaseMessaging.Listener.TokenReceivedDelegate : MulticastDelegate // TypeDefIndex: 3649
{
	// Methods

	// RVA: 0x1360280 Offset: 0x1360280 VA: 0x1360280
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x13609E8 Offset: 0x13609E8 VA: 0x13609E8 Slot: 11
	public virtual void Invoke(string token) { }

	// RVA: 0x1360D88 Offset: 0x1360D88 VA: 0x1360D88 Slot: 12
	public virtual IAsyncResult BeginInvoke(string token, AsyncCallback callback, object object) { }

	// RVA: 0x1360DAC Offset: 0x1360DAC VA: 0x1360DAC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC88A64 Offset: 0xC88A64 VA: 0xC88A64
private sealed class FirebaseMessaging.Listener.<MessageReceivedDelegateMethod>c__AnonStorey0 // TypeDefIndex: 3650
{
	// Fields
	internal IntPtr message; // 0x10

	// Methods

	// RVA: 0x1360444 Offset: 0x1360444 VA: 0x1360444
	public void .ctor() { }

	// RVA: 0x1360454 Offset: 0x1360454 VA: 0x1360454
	internal int <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC88A74 Offset: 0xC88A74 VA: 0xC88A74
private sealed class FirebaseMessaging.Listener.<TokenReceivedDelegateMethod>c__AnonStorey1 // TypeDefIndex: 3651
{
	// Fields
	internal string token; // 0x10

	// Methods

	// RVA: 0x136044C Offset: 0x136044C VA: 0x136044C
	public void .ctor() { }

	// RVA: 0x13605B4 Offset: 0x13605B4 VA: 0x13605B4
	internal void <>m__0() { }
}

// Namespace: Firebase.Messaging
internal class FirebaseMessagingPINVOKE // TypeDefIndex: 3652
{
	// Fields
	protected static FirebaseMessagingPINVOKE.SWIGExceptionHelper swigExceptionHelper; // 0x0
	protected static FirebaseMessagingPINVOKE.SWIGStringHelper swigStringHelper; // 0x8

	// Methods

	// RVA: 0x1360DB8 Offset: 0x1360DB8 VA: 0x1360DB8
	private static void .cctor() { }

	// RVA: 0x135ED40 Offset: 0x135ED40 VA: 0x135ED40
	public static extern void delete_FirebaseMessage(HandleRef jarg1) { }

	// RVA: 0x135FDE4 Offset: 0x135FDE4 VA: 0x135FDE4
	public static extern void SetListenerCallbacks(FirebaseMessaging.Listener.MessageReceivedDelegate jarg1, FirebaseMessaging.Listener.TokenReceivedDelegate jarg2) { }

	// RVA: 0x135FEA4 Offset: 0x135FEA4 VA: 0x135FEA4
	public static extern void SetListenerCallbacksEnabled(bool jarg1, bool jarg2) { }

	// RVA: 0x135FF50 Offset: 0x135FF50 VA: 0x135FF50
	public static extern void SendPendingEvents() { }
}

// Namespace: 
protected class FirebaseMessagingPINVOKE.SWIGExceptionHelper // TypeDefIndex: 3653
{
	// Fields
	private static FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate applicationDelegate; // 0x0
	private static FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate arithmeticDelegate; // 0x8
	private static FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate divideByZeroDelegate; // 0x10
	private static FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate indexOutOfRangeDelegate; // 0x18
	private static FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate invalidCastDelegate; // 0x20
	private static FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate invalidOperationDelegate; // 0x28
	private static FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate ioDelegate; // 0x30
	private static FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate nullReferenceDelegate; // 0x38
	private static FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate outOfMemoryDelegate; // 0x40
	private static FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate overflowDelegate; // 0x48
	private static FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate systemDelegate; // 0x50
	private static FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionArgumentDelegate argumentDelegate; // 0x58
	private static FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionArgumentDelegate argumentNullDelegate; // 0x60
	private static FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionArgumentDelegate argumentOutOfRangeDelegate; // 0x68

	// Methods

	// RVA: 0x13617C4 Offset: 0x13617C4 VA: 0x13617C4
	private static void .cctor() { }

	// RVA: 0x1360E4C Offset: 0x1360E4C VA: 0x1360E4C
	public void .ctor() { }

	// RVA: 0x1361AE0 Offset: 0x1361AE0 VA: 0x1361AE0
	public static extern void SWIGRegisterExceptionCallbacks_FirebaseMessaging(FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate applicationDelegate, FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate arithmeticDelegate, FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate divideByZeroDelegate, FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate indexOutOfRangeDelegate, FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate invalidCastDelegate, FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate invalidOperationDelegate, FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate ioDelegate, FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate nullReferenceDelegate, FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate outOfMemoryDelegate, FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate overflowDelegate, FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate systemExceptionDelegate) { }

	// RVA: 0x1361C68 Offset: 0x1361C68 VA: 0x1361C68
	public static extern void SWIGRegisterExceptionCallbacksArgument_FirebaseMessaging(FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionArgumentDelegate argumentDelegate, FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionArgumentDelegate argumentNullDelegate, FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionArgumentDelegate argumentOutOfRangeDelegate) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC88BD4 Offset: 0xC88BD4 VA: 0xC88BD4
	// RVA: 0x1360E5C Offset: 0x1360E5C VA: 0x1360E5C
	private static void SetPendingApplicationException(string message) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC88C38 Offset: 0xC88C38 VA: 0xC88C38
	// RVA: 0x1360EF8 Offset: 0x1360EF8 VA: 0x1360EF8
	private static void SetPendingArithmeticException(string message) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC88C9C Offset: 0xC88C9C VA: 0xC88C9C
	// RVA: 0x1360F94 Offset: 0x1360F94 VA: 0x1360F94
	private static void SetPendingDivideByZeroException(string message) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC88D00 Offset: 0xC88D00 VA: 0xC88D00
	// RVA: 0x1361030 Offset: 0x1361030 VA: 0x1361030
	private static void SetPendingIndexOutOfRangeException(string message) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC88D64 Offset: 0xC88D64 VA: 0xC88D64
	// RVA: 0x13610CC Offset: 0x13610CC VA: 0x13610CC
	private static void SetPendingInvalidCastException(string message) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC88DC8 Offset: 0xC88DC8 VA: 0xC88DC8
	// RVA: 0x1361168 Offset: 0x1361168 VA: 0x1361168
	private static void SetPendingInvalidOperationException(string message) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC88E2C Offset: 0xC88E2C VA: 0xC88E2C
	// RVA: 0x1361204 Offset: 0x1361204 VA: 0x1361204
	private static void SetPendingIOException(string message) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC88E90 Offset: 0xC88E90 VA: 0xC88E90
	// RVA: 0x13612A0 Offset: 0x13612A0 VA: 0x13612A0
	private static void SetPendingNullReferenceException(string message) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC88EF4 Offset: 0xC88EF4 VA: 0xC88EF4
	// RVA: 0x136133C Offset: 0x136133C VA: 0x136133C
	private static void SetPendingOutOfMemoryException(string message) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC88F58 Offset: 0xC88F58 VA: 0xC88F58
	// RVA: 0x13613D8 Offset: 0x13613D8 VA: 0x13613D8
	private static void SetPendingOverflowException(string message) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC88FBC Offset: 0xC88FBC VA: 0xC88FBC
	// RVA: 0x1361474 Offset: 0x1361474 VA: 0x1361474
	private static void SetPendingSystemException(string message) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC89020 Offset: 0xC89020 VA: 0xC89020
	// RVA: 0x1361510 Offset: 0x1361510 VA: 0x1361510
	private static void SetPendingArgumentException(string message, string paramName) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC89084 Offset: 0xC89084 VA: 0xC89084
	// RVA: 0x13615B4 Offset: 0x13615B4 VA: 0x13615B4
	private static void SetPendingArgumentNullException(string message, string paramName) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC890E8 Offset: 0xC890E8 VA: 0xC890E8
	// RVA: 0x13616BC Offset: 0x13616BC VA: 0x13616BC
	private static void SetPendingArgumentOutOfRangeException(string message, string paramName) { }
}

// Namespace: 
public sealed class FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionDelegate : MulticastDelegate // TypeDefIndex: 3654
{
	// Methods

	// RVA: 0x1361AC0 Offset: 0x1361AC0 VA: 0x1361AC0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x136251C Offset: 0x136251C VA: 0x136251C Slot: 11
	public virtual void Invoke(string message) { }

	// RVA: 0x13628BC Offset: 0x13628BC VA: 0x13628BC Slot: 12
	public virtual IAsyncResult BeginInvoke(string message, AsyncCallback callback, object object) { }

	// RVA: 0x13628E0 Offset: 0x13628E0 VA: 0x13628E0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class FirebaseMessagingPINVOKE.SWIGExceptionHelper.ExceptionArgumentDelegate : MulticastDelegate // TypeDefIndex: 3655
{
	// Methods

	// RVA: 0x1361AD0 Offset: 0x1361AD0 VA: 0x1361AD0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1362120 Offset: 0x1362120 VA: 0x1362120 Slot: 11
	public virtual void Invoke(string message, string paramName) { }

	// RVA: 0x13624E0 Offset: 0x13624E0 VA: 0x13624E0 Slot: 12
	public virtual IAsyncResult BeginInvoke(string message, string paramName, AsyncCallback callback, object object) { }

	// RVA: 0x1362510 Offset: 0x1362510 VA: 0x1362510 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class FirebaseMessagingPINVOKE.SWIGPendingException // TypeDefIndex: 3656
{
	// Fields
	[ThreadStaticAttribute] // RVA: 0xC88A84 Offset: 0xC88A84 VA: 0xC88A84
	private static Exception pendingException; // 0x80000000
	private static int numExceptionsPending; // 0x0

	// Methods

	// RVA: 0x1361ED8 Offset: 0x1361ED8 VA: 0x1361ED8
	public static void Set(Exception e) { }

	// RVA: 0x1361D3C Offset: 0x1361D3C VA: 0x1361D3C
	public static Exception Retrieve() { }

	// RVA: 0x13628EC Offset: 0x13628EC VA: 0x13628EC
	private static void .cctor() { }
}

// Namespace: 
protected class FirebaseMessagingPINVOKE.SWIGStringHelper // TypeDefIndex: 3657
{
	// Fields
	private static FirebaseMessagingPINVOKE.SWIGStringHelper.SWIGStringDelegate stringDelegate; // 0x0

	// Methods

	// RVA: 0x13628F4 Offset: 0x13628F4 VA: 0x13628F4
	private static void .cctor() { }

	// RVA: 0x1360E54 Offset: 0x1360E54 VA: 0x1360E54
	public void .ctor() { }

	// RVA: 0x1362988 Offset: 0x1362988 VA: 0x1362988
	public static extern void SWIGRegisterStringCallback_FirebaseMessaging(FirebaseMessagingPINVOKE.SWIGStringHelper.SWIGStringDelegate stringDelegate) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC8914C Offset: 0xC8914C VA: 0xC8914C
	// RVA: 0x13628F0 Offset: 0x13628F0 VA: 0x13628F0
	private static string CreateString(string cString) { }
}

// Namespace: 
public sealed class FirebaseMessagingPINVOKE.SWIGStringHelper.SWIGStringDelegate : MulticastDelegate // TypeDefIndex: 3658
{
	// Methods

	// RVA: 0x1362978 Offset: 0x1362978 VA: 0x1362978
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1362A28 Offset: 0x1362A28 VA: 0x1362A28 Slot: 11
	public virtual string Invoke(string message) { }

	// RVA: 0x1362DCC Offset: 0x1362DCC VA: 0x1362DCC Slot: 12
	public virtual IAsyncResult BeginInvoke(string message, AsyncCallback callback, object object) { }

	// RVA: 0x1362DF0 Offset: 0x1362DF0 VA: 0x1362DF0 Slot: 13
	public virtual string EndInvoke(IAsyncResult result) { }
}

// Namespace: Firebase.Messaging
public sealed class FirebaseMessage : IDisposable // TypeDefIndex: 3659
{
	// Fields
	private HandleRef swigCPtr; // 0x10
	private bool swigCMemOwn; // 0x20
	private static DateTime UnixEpochUtc; // 0x0

	// Methods

	// RVA: 0x135EB04 Offset: 0x135EB04 VA: 0x135EB04
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x135EB68 Offset: 0x135EB68 VA: 0x135EB68 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x135EBDC Offset: 0x135EBDC VA: 0x135EBDC Slot: 4
	public void Dispose() { }

	// RVA: 0x135EDDC Offset: 0x135EDDC VA: 0x135EDDC
	private static void .cctor() { }
}

// Namespace: Firebase.Messaging
public sealed class MessageReceivedEventArgs : EventArgs // TypeDefIndex: 3660
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC88A94 Offset: 0xC88A94 VA: 0xC88A94
	[DebuggerBrowsableAttribute] // RVA: 0xC88A94 Offset: 0xC88A94 VA: 0xC88A94
	private FirebaseMessage <Message>k__BackingField; // 0x10

	// Properties
	public FirebaseMessage Message { set; }

	// Methods

	// RVA: 0x1360538 Offset: 0x1360538 VA: 0x1360538
	public void .ctor(FirebaseMessage msg) { }

	[CompilerGeneratedAttribute] // RVA: 0xC891B0 Offset: 0xC891B0 VA: 0xC891B0
	// RVA: 0x1362DFC Offset: 0x1362DFC VA: 0x1362DFC
	public void set_Message(FirebaseMessage value) { }
}

// Namespace: Firebase.Messaging
public sealed class TokenReceivedEventArgs : EventArgs // TypeDefIndex: 3661
{
	// Fields
	[DebuggerBrowsableAttribute] // RVA: 0xC88AD0 Offset: 0xC88AD0 VA: 0xC88AD0
	[CompilerGeneratedAttribute] // RVA: 0xC88AD0 Offset: 0xC88AD0 VA: 0xC88AD0
	private string <Token>k__BackingField; // 0x10

	// Properties
	public string Token { set; }

	// Methods

	// RVA: 0x1360674 Offset: 0x1360674 VA: 0x1360674
	public void .ctor(string token) { }

	[CompilerGeneratedAttribute] // RVA: 0xC891C0 Offset: 0xC891C0 VA: 0xC891C0
	// RVA: 0x1362E04 Offset: 0x1362E04 VA: 0x1362E04
	public void set_Token(string value) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 3662
{}

// Namespace: ICSharpCode.SharpZipLib
[Serializable]
public class SharpZipBaseException : Exception // TypeDefIndex: 3663
{
	// Methods

	// RVA: 0x12E1A18 Offset: 0x12E1A18 VA: 0x12E1A18
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x12E1A28 Offset: 0x12E1A28 VA: 0x12E1A28
	public void .ctor() { }

	// RVA: 0x12E1A38 Offset: 0x12E1A38 VA: 0x12E1A38
	public void .ctor(string message) { }
}

// Namespace: ICSharpCode.SharpZipLib.Zip
[Serializable]
public class ZipException : SharpZipBaseException // TypeDefIndex: 3664
{
	// Methods

	// RVA: 0x12F87F8 Offset: 0x12F87F8 VA: 0x12F87F8
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x12F8800 Offset: 0x12F8800 VA: 0x12F8800
	public void .ctor() { }

	// RVA: 0x12F8000 Offset: 0x12F8000 VA: 0x12F8000
	public void .ctor(string message) { }
}

// Namespace: ICSharpCode.SharpZipLib.Zip.Compression
public class Deflater // TypeDefIndex: 3665
{
	// Fields
	private int level; // 0x10
	private bool noZlibHeaderOrFooter; // 0x14
	private int state; // 0x18
	private long totalOut; // 0x20
	private DeflaterPending pending; // 0x28
	private DeflaterEngine engine; // 0x30

	// Properties
	public long TotalIn { get; }
	public bool IsFinished { get; }
	public bool IsNeedingInput { get; }

	// Methods

	// RVA: 0x12EE180 Offset: 0x12EE180 VA: 0x12EE180
	public void .ctor(int level, bool noZlibHeaderOrFooter) { }

	// RVA: 0x12EEF40 Offset: 0x12EEF40 VA: 0x12EEF40
	public void Reset() { }

	// RVA: 0x12EED14 Offset: 0x12EED14 VA: 0x12EED14
	public long get_TotalIn() { }

	// RVA: 0x12EF0B0 Offset: 0x12EF0B0 VA: 0x12EF0B0
	public void Flush() { }

	// RVA: 0x12EF0C0 Offset: 0x12EF0C0 VA: 0x12EF0C0
	public void Finish() { }

	// RVA: 0x12EF0D0 Offset: 0x12EF0D0 VA: 0x12EF0D0
	public bool get_IsFinished() { }

	// RVA: 0x12EF128 Offset: 0x12EF128 VA: 0x12EF128
	public bool get_IsNeedingInput() { }

	// RVA: 0x12EF16C Offset: 0x12EF16C VA: 0x12EF16C
	public void SetInput(byte[] input, int offset, int count) { }

	// RVA: 0x12EEE64 Offset: 0x12EEE64 VA: 0x12EEE64
	public void SetLevel(int level) { }

	// RVA: 0x12EEE34 Offset: 0x12EEE34 VA: 0x12EEE34
	public void SetStrategy(DeflateStrategy strategy) { }

	// RVA: 0x12EF748 Offset: 0x12EF748 VA: 0x12EF748
	public int Deflate(byte[] output, int offset, int length) { }
}

// Namespace: ICSharpCode.SharpZipLib.Zip.Compression
public static class DeflaterConstants // TypeDefIndex: 3666
{
	// Fields
	public static int MAX_BLOCK_SIZE; // 0x0
	public static int[] GOOD_LENGTH; // 0x8
	public static int[] MAX_LAZY; // 0x10
	public static int[] NICE_LENGTH; // 0x18
	public static int[] MAX_CHAIN; // 0x20
	public static int[] COMPR_FUNC; // 0x28

	// Methods

	// RVA: 0x12EFF9C Offset: 0x12EFF9C VA: 0x12EFF9C
	private static void .cctor() { }
}

// Namespace: ICSharpCode.SharpZipLib.Zip.Compression
public enum DeflateStrategy // TypeDefIndex: 3667
{
	// Fields
	public int value__; // 0x0
	public const DeflateStrategy Default = 0;
	public const DeflateStrategy Filtered = 1;
	public const DeflateStrategy HuffmanOnly = 2;
}

// Namespace: ICSharpCode.SharpZipLib.Zip.Compression
public class DeflaterEngine // TypeDefIndex: 3668
{
	// Fields
	private int ins_h; // 0x10
	private short[] head; // 0x18
	private short[] prev; // 0x20
	private int matchStart; // 0x28
	private int matchLen; // 0x2C
	private bool prevAvailable; // 0x30
	private int blockStart; // 0x34
	private int strstart; // 0x38
	private int lookahead; // 0x3C
	private byte[] window; // 0x40
	private DeflateStrategy strategy; // 0x48
	private int max_chain; // 0x4C
	private int max_lazy; // 0x50
	private int niceLength; // 0x54
	private int goodLength; // 0x58
	private int compressionFunction; // 0x5C
	private byte[] inputBuf; // 0x60
	private long totalIn; // 0x68
	private int inputOff; // 0x70
	private int inputEnd; // 0x74
	private DeflaterPending pending; // 0x78
	private DeflaterHuffman huffman; // 0x80
	private Adler32 adler; // 0x88

	// Properties
	public int Adler { get; }
	public long TotalIn { get; }
	public DeflateStrategy Strategy { set; }

	// Methods

	// RVA: 0x12EED48 Offset: 0x12EED48 VA: 0x12EED48
	public void .ctor(DeflaterPending pending) { }

	// RVA: 0x12EFCA4 Offset: 0x12EFCA4 VA: 0x12EFCA4
	public bool Deflate(bool flush, bool finish) { }

	// RVA: 0x12EF234 Offset: 0x12EF234 VA: 0x12EF234
	public void SetInput(byte[] buffer, int offset, int count) { }

	// RVA: 0x12EF15C Offset: 0x12EF15C VA: 0x12EF15C
	public bool NeedsInput() { }

	// RVA: 0x12EEFB4 Offset: 0x12EEFB4 VA: 0x12EEFB4
	public void Reset() { }

	// RVA: 0x12EFB84 Offset: 0x12EFB84 VA: 0x12EFB84
	public void ResetAdler() { }

	// RVA: 0x12EFB58 Offset: 0x12EFB58 VA: 0x12EFB58
	public int get_Adler() { }

	// RVA: 0x12EF0A8 Offset: 0x12EF0A8 VA: 0x12EF0A8
	public long get_TotalIn() { }

	// RVA: 0x12EF740 Offset: 0x12EF740 VA: 0x12EF740
	public void set_Strategy(DeflateStrategy value) { }

	// RVA: 0x12EF380 Offset: 0x12EF380 VA: 0x12EF380
	public void SetLevel(int level) { }

	// RVA: 0x12F01FC Offset: 0x12F01FC VA: 0x12F01FC
	public void FillWindow() { }

	// RVA: 0x12F0BE4 Offset: 0x12F0BE4 VA: 0x12F0BE4
	private void UpdateHash() { }

	// RVA: 0x12F13DC Offset: 0x12F13DC VA: 0x12F13DC
	private int InsertString() { }

	// RVA: 0x12F1268 Offset: 0x12F1268 VA: 0x12F1268
	private void SlideWindow() { }

	// RVA: 0x12F1500 Offset: 0x12F1500 VA: 0x12F1500
	private bool FindLongestMatch(int curMatch) { }

	// RVA: 0x12F0308 Offset: 0x12F0308 VA: 0x12F0308
	private bool DeflateStored(bool flush, bool finish) { }

	// RVA: 0x12F0490 Offset: 0x12F0490 VA: 0x12F0490
	private bool DeflateFast(bool flush, bool finish) { }

	// RVA: 0x12F0744 Offset: 0x12F0744 VA: 0x12F0744
	private bool DeflateSlow(bool flush, bool finish) { }
}

// Namespace: ICSharpCode.SharpZipLib.Zip.Compression
public class DeflaterHuffman // TypeDefIndex: 3669
{
	// Fields
	private static readonly int[] BL_ORDER; // 0x0
	private static readonly byte[] bit4Reverse; // 0x8
	private static short[] staticLCodes; // 0x10
	private static byte[] staticLLength; // 0x18
	private static short[] staticDCodes; // 0x20
	private static byte[] staticDLength; // 0x28
	public DeflaterPending pending; // 0x10
	private DeflaterHuffman.Tree literalTree; // 0x18
	private DeflaterHuffman.Tree distTree; // 0x20
	private DeflaterHuffman.Tree blTree; // 0x28
	private short[] d_buf; // 0x30
	private byte[] l_buf; // 0x38
	private int last_lit; // 0x40
	private int extra_bits; // 0x44

	// Methods

	// RVA: 0x12F2008 Offset: 0x12F2008 VA: 0x12F2008
	private static void .cctor() { }

	// RVA: 0x12F00FC Offset: 0x12F00FC VA: 0x12F00FC
	public void .ctor(DeflaterPending pending) { }

	// RVA: 0x12F0A98 Offset: 0x12F0A98 VA: 0x12F0A98
	public void Reset() { }

	// RVA: 0x12F2724 Offset: 0x12F2724 VA: 0x12F2724
	public void SendAllTrees(int blTreeCodes) { }

	// RVA: 0x12F2E30 Offset: 0x12F2E30 VA: 0x12F2E30
	public void CompressBlock() { }

	// RVA: 0x12F0AFC Offset: 0x12F0AFC VA: 0x12F0AFC
	public void FlushStoredBlock(byte[] stored, int storedOffset, int storedLength, bool lastBlock) { }

	// RVA: 0x12F0C88 Offset: 0x12F0C88 VA: 0x12F0C88
	public void FlushBlock(byte[] stored, int storedOffset, int storedLength, bool lastBlock) { }

	// RVA: 0x12F1FF8 Offset: 0x12F1FF8 VA: 0x12F1FF8
	public bool IsFull() { }

	// RVA: 0x12F116C Offset: 0x12F116C VA: 0x12F116C
	public bool TallyLit(int literal) { }

	// RVA: 0x12F1DA4 Offset: 0x12F1DA4 VA: 0x12F1DA4
	public bool TallyDist(int distance, int length) { }

	// RVA: 0x12F246C Offset: 0x12F246C VA: 0x12F246C
	public static short BitReverse(int toReverse) { }

	// RVA: 0x12F30D0 Offset: 0x12F30D0 VA: 0x12F30D0
	private static int Lcode(int length) { }

	// RVA: 0x12F31CC Offset: 0x12F31CC VA: 0x12F31CC
	private static int Dcode(int distance) { }
}

// Namespace: 
private class DeflaterHuffman.Tree // TypeDefIndex: 3670
{
	// Fields
	public short[] freqs; // 0x10
	public byte[] length; // 0x18
	public int minNumCodes; // 0x20
	public int numCodes; // 0x24
	private short[] codes; // 0x28
	private readonly int[] bl_counts; // 0x30
	private readonly int maxLength; // 0x38
	private DeflaterHuffman dh; // 0x40

	// Methods

	// RVA: 0x12F25F0 Offset: 0x12F25F0 VA: 0x12F25F0
	public void .ctor(DeflaterHuffman dh, int elems, int minCodes, int maxLength) { }

	// RVA: 0x12F2698 Offset: 0x12F2698 VA: 0x12F2698
	public void Reset() { }

	// RVA: 0x12F3104 Offset: 0x12F3104 VA: 0x12F3104
	public void WriteSymbol(int code) { }

	// RVA: 0x12F4140 Offset: 0x12F4140 VA: 0x12F4140
	public void SetStaticCodes(short[] staticCodes, byte[] staticLengths) { }
