
	// RVA: 0x104F180 Offset: 0x104F180 VA: 0x104F180 Slot: 11
	public virtual void Invoke(object sender, ProgressChangedEventArgs e) { }

	// RVA: 0x104F540 Offset: 0x104F540 VA: 0x104F540 Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, ProgressChangedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0x104F570 Offset: 0x104F570 VA: 0x104F570 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.ComponentModel
public sealed class PropertyChangedEventHandler : MulticastDelegate // TypeDefIndex: 1772
{
	// Methods

	// RVA: 0x104F600 Offset: 0x104F600 VA: 0x104F600
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x104F610 Offset: 0x104F610 VA: 0x104F610 Slot: 11
	public virtual void Invoke(object sender, PropertyChangedEventArgs e) { }

	// RVA: 0x104F9D0 Offset: 0x104F9D0 VA: 0x104F9D0 Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, PropertyChangedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0x104FA00 Offset: 0x104FA00 VA: 0x104FA00 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.ComponentModel
public sealed class RefreshEventHandler : MulticastDelegate // TypeDefIndex: 1773
{
	// Methods

	// RVA: 0x1057820 Offset: 0x1057820 VA: 0x1057820
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1057830 Offset: 0x1057830 VA: 0x1057830 Slot: 11
	public virtual void Invoke(RefreshEventArgs e) { }

	// RVA: 0x1057BD0 Offset: 0x1057BD0 VA: 0x1057BD0 Slot: 12
	public virtual IAsyncResult BeginInvoke(RefreshEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0x1057BF4 Offset: 0x1057BF4 VA: 0x1057BF4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.ComponentModel
public sealed class RunWorkerCompletedEventHandler : MulticastDelegate // TypeDefIndex: 1774
{
	// Methods

	// RVA: 0x1057ECC Offset: 0x1057ECC VA: 0x1057ECC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1057EDC Offset: 0x1057EDC VA: 0x1057EDC Slot: 11
	public virtual void Invoke(object sender, RunWorkerCompletedEventArgs e) { }

	// RVA: 0x105829C Offset: 0x105829C VA: 0x105829C Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, RunWorkerCompletedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0x10582CC Offset: 0x10582CC VA: 0x10582CC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Diagnostics
public sealed class DataReceivedEventHandler : MulticastDelegate // TypeDefIndex: 1775
{
	// Methods

	// RVA: 0x1065570 Offset: 0x1065570 VA: 0x1065570
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1065580 Offset: 0x1065580 VA: 0x1065580 Slot: 11
	public virtual void Invoke(object sender, DataReceivedEventArgs e) { }

	// RVA: 0x1065940 Offset: 0x1065940 VA: 0x1065940 Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, DataReceivedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0x1065970 Offset: 0x1065970 VA: 0x1065970 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net.NetworkInformation
public sealed class NetworkAddressChangedEventHandler : MulticastDelegate // TypeDefIndex: 1776
{
	// Methods

	// RVA: 0xF68650 Offset: 0xF68650 VA: 0xF68650
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xF68660 Offset: 0xF68660 VA: 0xF68660 Slot: 11
	public virtual void Invoke(object sender, EventArgs e) { }

	// RVA: 0xF68A20 Offset: 0xF68A20 VA: 0xF68A20 Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, EventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0xF68A50 Offset: 0xF68A50 VA: 0xF68A50 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net.NetworkInformation
public sealed class NetworkAvailabilityChangedEventHandler : MulticastDelegate // TypeDefIndex: 1777
{
	// Methods

	// RVA: 0xF68A5C Offset: 0xF68A5C VA: 0xF68A5C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xF68A6C Offset: 0xF68A6C VA: 0xF68A6C Slot: 11
	public virtual void Invoke(object sender, NetworkAvailabilityEventArgs e) { }

	// RVA: 0xF68E2C Offset: 0xF68E2C VA: 0xF68E2C Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, NetworkAvailabilityEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0xF68E5C Offset: 0xF68E5C VA: 0xF68E5C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net.NetworkInformation
public sealed class PingCompletedEventHandler : MulticastDelegate // TypeDefIndex: 1778
{
	// Methods

	// RVA: 0xF6DBDC Offset: 0xF6DBDC VA: 0xF6DBDC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xF6AE98 Offset: 0xF6AE98 VA: 0xF6AE98 Slot: 11
	public virtual void Invoke(object sender, PingCompletedEventArgs e) { }

	// RVA: 0xF6DBEC Offset: 0xF6DBEC VA: 0xF6DBEC Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, PingCompletedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0xF6DC1C Offset: 0xF6DC1C VA: 0xF6DC1C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net.Security
public sealed class LocalCertificateSelectionCallback : MulticastDelegate // TypeDefIndex: 1779
{
	// Methods

	// RVA: 0xF77C98 Offset: 0xF77C98 VA: 0xF77C98
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xF77CA8 Offset: 0xF77CA8 VA: 0xF77CA8 Slot: 11
	public virtual X509Certificate Invoke(object sender, string targetHost, X509CertificateCollection localCertificates, X509Certificate remoteCertificate, string[] acceptableIssuers) { }

	// RVA: 0xF780EC Offset: 0xF780EC VA: 0xF780EC Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, string targetHost, X509CertificateCollection localCertificates, X509Certificate remoteCertificate, string[] acceptableIssuers, AsyncCallback callback, object object) { }

	// RVA: 0xF78120 Offset: 0xF78120 VA: 0xF78120 Slot: 13
	public virtual X509Certificate EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net.Security
public sealed class RemoteCertificateValidationCallback : MulticastDelegate // TypeDefIndex: 1780
{
	// Methods

	// RVA: 0x11373E0 Offset: 0x11373E0 VA: 0x11373E0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x11373F0 Offset: 0x11373F0 VA: 0x11373F0 Slot: 11
	public virtual bool Invoke(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors) { }

	// RVA: 0x1137804 Offset: 0x1137804 VA: 0x1137804 Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors, AsyncCallback callback, object object) { }

	// RVA: 0x11378B4 Offset: 0x11378B4 VA: 0x11378B4 Slot: 13
	public virtual bool EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net
public sealed class AuthenticationSchemeSelector : MulticastDelegate // TypeDefIndex: 1781
{
	// Methods

	// RVA: 0xEC5ACC Offset: 0xEC5ACC VA: 0xEC5ACC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xEC5ADC Offset: 0xEC5ADC VA: 0xEC5ADC Slot: 11
	public virtual AuthenticationSchemes Invoke(HttpListenerRequest httpRequest) { }

	// RVA: 0xEC5E80 Offset: 0xEC5E80 VA: 0xEC5E80 Slot: 12
	public virtual IAsyncResult BeginInvoke(HttpListenerRequest httpRequest, AsyncCallback callback, object object) { }

	// RVA: 0xEC5EA4 Offset: 0xEC5EA4 VA: 0xEC5EA4 Slot: 13
	public virtual AuthenticationSchemes EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net
public sealed class BindIPEndPoint : MulticastDelegate // TypeDefIndex: 1782
{
	// Methods

	// RVA: 0xEC67A0 Offset: 0xEC67A0 VA: 0xEC67A0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xEC67B0 Offset: 0xEC67B0 VA: 0xEC67B0 Slot: 11
	public virtual IPEndPoint Invoke(ServicePoint servicePoint, IPEndPoint remoteEndPoint, int retryCount) { }

	// RVA: 0xEC6BA4 Offset: 0xEC6BA4 VA: 0xEC6BA4 Slot: 12
	public virtual IAsyncResult BeginInvoke(ServicePoint servicePoint, IPEndPoint remoteEndPoint, int retryCount, AsyncCallback callback, object object) { }

	// RVA: 0xEC6C44 Offset: 0xEC6C44 VA: 0xEC6C44 Slot: 13
	public virtual IPEndPoint EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net
public sealed class DownloadDataCompletedEventHandler : MulticastDelegate // TypeDefIndex: 1783
{
	// Methods

	// RVA: 0xED59FC Offset: 0xED59FC VA: 0xED59FC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xED5A0C Offset: 0xED5A0C VA: 0xED5A0C Slot: 11
	public virtual void Invoke(object sender, DownloadDataCompletedEventArgs e) { }

	// RVA: 0xED5DCC Offset: 0xED5DCC VA: 0xED5DCC Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, DownloadDataCompletedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0xED5DFC Offset: 0xED5DFC VA: 0xED5DFC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net
public sealed class DownloadProgressChangedEventHandler : MulticastDelegate // TypeDefIndex: 1784
{
	// Methods

	// RVA: 0xED5E94 Offset: 0xED5E94 VA: 0xED5E94
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xED5EA4 Offset: 0xED5EA4 VA: 0xED5EA4 Slot: 11
	public virtual void Invoke(object sender, DownloadProgressChangedEventArgs e) { }

	// RVA: 0xED6264 Offset: 0xED6264 VA: 0xED6264 Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, DownloadProgressChangedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0xED6294 Offset: 0xED6294 VA: 0xED6294 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net
public sealed class DownloadStringCompletedEventHandler : MulticastDelegate // TypeDefIndex: 1785
{
	// Methods

	// RVA: 0xED6304 Offset: 0xED6304 VA: 0xED6304
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xED6314 Offset: 0xED6314 VA: 0xED6314 Slot: 11
	public virtual void Invoke(object sender, DownloadStringCompletedEventArgs e) { }

	// RVA: 0xED66D4 Offset: 0xED66D4 VA: 0xED66D4 Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, DownloadStringCompletedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0xED6704 Offset: 0xED6704 VA: 0xED6704 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net
public sealed class HttpContinueDelegate : MulticastDelegate // TypeDefIndex: 1786
{
	// Methods

	// RVA: 0xF482A4 Offset: 0xF482A4 VA: 0xF482A4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xF482B4 Offset: 0xF482B4 VA: 0xF482B4 Slot: 11
	public virtual void Invoke(int StatusCode, WebHeaderCollection httpHeaders) { }

	// RVA: 0xF484F8 Offset: 0xF484F8 VA: 0xF484F8 Slot: 12
	public virtual IAsyncResult BeginInvoke(int StatusCode, WebHeaderCollection httpHeaders, AsyncCallback callback, object object) { }

	// RVA: 0xF48590 Offset: 0xF48590 VA: 0xF48590 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net
public sealed class OpenReadCompletedEventHandler : MulticastDelegate // TypeDefIndex: 1787
{
	// Methods

	// RVA: 0xF7544C Offset: 0xF7544C VA: 0xF7544C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xF7545C Offset: 0xF7545C VA: 0xF7545C Slot: 11
	public virtual void Invoke(object sender, OpenReadCompletedEventArgs e) { }

	// RVA: 0xF7581C Offset: 0xF7581C VA: 0xF7581C Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, OpenReadCompletedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0xF7584C Offset: 0xF7584C VA: 0xF7584C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net
public sealed class OpenWriteCompletedEventHandler : MulticastDelegate // TypeDefIndex: 1788
{
	// Methods

	// RVA: 0xF758BC Offset: 0xF758BC VA: 0xF758BC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xF758CC Offset: 0xF758CC VA: 0xF758CC Slot: 11
	public virtual void Invoke(object sender, OpenWriteCompletedEventArgs e) { }

	// RVA: 0xF75C8C Offset: 0xF75C8C VA: 0xF75C8C Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, OpenWriteCompletedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0xF75CBC Offset: 0xF75CBC VA: 0xF75CBC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net
public sealed class UploadDataCompletedEventHandler : MulticastDelegate // TypeDefIndex: 1789
{
	// Methods

	// RVA: 0x108DA2C Offset: 0x108DA2C VA: 0x108DA2C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x108DA3C Offset: 0x108DA3C VA: 0x108DA3C Slot: 11
	public virtual void Invoke(object sender, UploadDataCompletedEventArgs e) { }

	// RVA: 0x108DDFC Offset: 0x108DDFC VA: 0x108DDFC Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, UploadDataCompletedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0x108DE2C Offset: 0x108DE2C VA: 0x108DE2C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net
public sealed class UploadFileCompletedEventHandler : MulticastDelegate // TypeDefIndex: 1790
{
	// Methods

	// RVA: 0x108DE7C Offset: 0x108DE7C VA: 0x108DE7C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x108DE8C Offset: 0x108DE8C VA: 0x108DE8C Slot: 11
	public virtual void Invoke(object sender, UploadFileCompletedEventArgs e) { }

	// RVA: 0x108E24C Offset: 0x108E24C VA: 0x108E24C Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, UploadFileCompletedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0x108E27C Offset: 0x108E27C VA: 0x108E27C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net
public sealed class UploadProgressChangedEventHandler : MulticastDelegate // TypeDefIndex: 1791
{
	// Methods

	// RVA: 0x108E2FC Offset: 0x108E2FC VA: 0x108E2FC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x108E30C Offset: 0x108E30C VA: 0x108E30C Slot: 11
	public virtual void Invoke(object sender, UploadProgressChangedEventArgs e) { }

	// RVA: 0x108E6CC Offset: 0x108E6CC VA: 0x108E6CC Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, UploadProgressChangedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0x108E6FC Offset: 0x108E6FC VA: 0x108E6FC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net
public sealed class UploadStringCompletedEventHandler : MulticastDelegate // TypeDefIndex: 1792
{
	// Methods

	// RVA: 0x108E76C Offset: 0x108E76C VA: 0x108E76C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x108E77C Offset: 0x108E77C VA: 0x108E77C Slot: 11
	public virtual void Invoke(object sender, UploadStringCompletedEventArgs e) { }

	// RVA: 0x108EB3C Offset: 0x108EB3C VA: 0x108EB3C Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, UploadStringCompletedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0x108EB6C Offset: 0x108EB6C VA: 0x108EB6C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Net
public sealed class UploadValuesCompletedEventHandler : MulticastDelegate // TypeDefIndex: 1793
{
	// Methods

	// RVA: 0x108EBBC Offset: 0x108EBBC VA: 0x108EBBC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x108EBCC Offset: 0x108EBCC VA: 0x108EBCC Slot: 11
	public virtual void Invoke(object sender, UploadValuesCompletedEventArgs e) { }

	// RVA: 0x108EF8C Offset: 0x108EF8C VA: 0x108EF8C Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, UploadValuesCompletedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0x108EFBC Offset: 0x108EFBC VA: 0x108EFBC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Text.RegularExpressions
[Serializable]
public sealed class MatchEvaluator : MulticastDelegate // TypeDefIndex: 1794
{
	// Methods

	// RVA: 0xF7BB30 Offset: 0xF7BB30 VA: 0xF7BB30
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xF7C6F8 Offset: 0xF7C6F8 VA: 0xF7C6F8 Slot: 11
	public virtual string Invoke(Match match) { }

	// RVA: 0xF84A80 Offset: 0xF84A80 VA: 0xF84A80 Slot: 12
	public virtual IAsyncResult BeginInvoke(Match match, AsyncCallback callback, object object) { }

	// RVA: 0xF84AA4 Offset: 0xF84AA4 VA: 0xF84AA4 Slot: 13
	public virtual string EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC3CEF4 Offset: 0xC3CEF4 VA: 0xC3CEF4
internal class <PrivateImplementationDetails> // TypeDefIndex: 1795
{
	// Fields
	internal static <PrivateImplementationDetails>.$ArrayType$16 $$field-1 /*Metadata offset 0x775D28*/; // 0x0
	internal static <PrivateImplementationDetails>.$ArrayType$128 $$field-2 /*Metadata offset 0x775D38*/; // 0x10
	internal static <PrivateImplementationDetails>.$ArrayType$12 $$field-3 /*Metadata offset 0x775DB8*/; // 0x90
	internal static <PrivateImplementationDetails>.$ArrayType$12 $$field-4 /*Metadata offset 0x775DC4*/; // 0x9C
}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$16 // TypeDefIndex: 1796
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$128 // TypeDefIndex: 1797
{}

// Namespace: 
private struct <PrivateImplementationDetails>.$ArrayType$12 // TypeDefIndex: 1798
{}

// Namespace: 
internal class <Module> // TypeDefIndex: 1799
{}

// Namespace: 
internal sealed class Locale // TypeDefIndex: 1800
{
	// Methods

	// RVA: 0x125C7B0 Offset: 0x125C7B0 VA: 0x125C7B0
	public static string GetText(string msg) { }

	// RVA: 0x125C7B4 Offset: 0x125C7B4 VA: 0x125C7B4
	public static string GetText(string fmt, object[] args) { }
}

// Namespace: Mono.Math
public class BigInteger // TypeDefIndex: 1801
{
	// Fields
	private uint length; // 0x10
	private uint[] data; // 0x18
	internal static readonly uint[] smallPrimes; // 0x0
	private static RandomNumberGenerator rng; // 0x8

	// Properties
	private static RandomNumberGenerator Rng { get; }

	// Methods

	[CLSCompliantAttribute] // RVA: 0xC400A4 Offset: 0xC400A4 VA: 0xC400A4
	// RVA: 0x125C82C Offset: 0x125C82C VA: 0x125C82C
	public void .ctor(BigInteger.Sign sign, uint len) { }

	// RVA: 0x125C8A8 Offset: 0x125C8A8 VA: 0x125C8A8
	public void .ctor(BigInteger bi) { }

	[CLSCompliantAttribute] // RVA: 0xC400B8 Offset: 0xC400B8 VA: 0xC400B8
	// RVA: 0x125C9B8 Offset: 0x125C9B8 VA: 0x125C9B8
	public void .ctor(BigInteger bi, uint len) { }

	// RVA: 0x125CAD0 Offset: 0x125CAD0 VA: 0x125CAD0
	public void .ctor(byte[] inData) { }

	[CLSCompliantAttribute] // RVA: 0xC400CC Offset: 0xC400CC VA: 0xC400CC
	// RVA: 0x125CFB0 Offset: 0x125CFB0 VA: 0x125CFB0
	public void .ctor(uint ui) { }

	// RVA: 0x125D050 Offset: 0x125D050 VA: 0x125D050
	private static void .cctor() { }

	// RVA: 0x125D0CC Offset: 0x125D0CC VA: 0x125D0CC
	private static RandomNumberGenerator get_Rng() { }

	// RVA: 0x125D194 Offset: 0x125D194 VA: 0x125D194
	public static BigInteger GenerateRandom(int bits, RandomNumberGenerator rng) { }

	// RVA: 0x125D374 Offset: 0x125D374 VA: 0x125D374
	public static BigInteger GenerateRandom(int bits) { }

	// RVA: 0x125D3E0 Offset: 0x125D3E0 VA: 0x125D3E0
	public int BitCount() { }

	// RVA: 0x125D47C Offset: 0x125D47C VA: 0x125D47C
	public bool TestBit(int bitNum) { }

	[CLSCompliantAttribute] // RVA: 0xC400E0 Offset: 0xC400E0 VA: 0xC400E0
	// RVA: 0x125D5A0 Offset: 0x125D5A0 VA: 0x125D5A0
	public void SetBit(uint bitNum) { }

	[CLSCompliantAttribute] // RVA: 0xC400F4 Offset: 0xC400F4 VA: 0xC400F4
	// RVA: 0x125D5A8 Offset: 0x125D5A8 VA: 0x125D5A8
	public void SetBit(uint bitNum, bool value) { }

	// RVA: 0x125D63C Offset: 0x125D63C VA: 0x125D63C
	public int LowestSetBit() { }

	// RVA: 0x125D74C Offset: 0x125D74C VA: 0x125D74C
	public byte[] GetBytes() { }

	[CLSCompliantAttribute] // RVA: 0xC40108 Offset: 0xC40108 VA: 0xC40108
	// RVA: 0x125D8D0 Offset: 0x125D8D0 VA: 0x125D8D0
	public string ToString(uint radix) { }

	[CLSCompliantAttribute] // RVA: 0xC4011C Offset: 0xC4011C VA: 0xC4011C
	// RVA: 0x125D930 Offset: 0x125D930 VA: 0x125D930
	public string ToString(uint radix, string characterSet) { }

	// RVA: 0x125CF24 Offset: 0x125CF24 VA: 0x125CF24
	private void Normalize() { }

	// RVA: 0x125DD14 Offset: 0x125DD14 VA: 0x125DD14
	public void Clear() { }

	// RVA: 0x125DD8C Offset: 0x125DD8C VA: 0x125DD8C Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x125DE20 Offset: 0x125DE20 VA: 0x125DE20 Slot: 3
	public override string ToString() { }

	// RVA: 0x125DE28 Offset: 0x125DE28 VA: 0x125DE28 Slot: 0
	public override bool Equals(object o) { }

	// RVA: 0x125E354 Offset: 0x125E354 VA: 0x125E354
	public BigInteger ModInverse(BigInteger modulus) { }

	// RVA: 0x125EB04 Offset: 0x125EB04 VA: 0x125EB04
	public BigInteger ModPow(BigInteger exp, BigInteger n) { }

	// RVA: 0x125EDBC Offset: 0x125EDBC VA: 0x125EDBC
	public static BigInteger GeneratePseudoPrime(int bits) { }

	// RVA: 0x125EE3C Offset: 0x125EE3C VA: 0x125EE3C
	public void Incr2() { }

	[CLSCompliantAttribute] // RVA: 0xC40130 Offset: 0xC40130 VA: 0xC40130
	// RVA: 0x125EF74 Offset: 0x125EF74 VA: 0x125EF74
	public static BigInteger op_Implicit(uint value) { }

	// RVA: 0x125EFD4 Offset: 0x125EFD4 VA: 0x125EFD4
	public static BigInteger op_Implicit(int value) { }

	// RVA: 0x125F07C Offset: 0x125F07C VA: 0x125F07C
	public static BigInteger op_Addition(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0x125F438 Offset: 0x125F438 VA: 0x125F438
	public static BigInteger op_Subtraction(BigInteger bi1, BigInteger bi2) { }

	[CLSCompliantAttribute] // RVA: 0xC40144 Offset: 0xC40144 VA: 0xC40144
	// RVA: 0x125F86C Offset: 0x125F86C VA: 0x125F86C
	public static uint op_Modulus(BigInteger bi, uint ui) { }

	// RVA: 0x125F920 Offset: 0x125F920 VA: 0x125F920
	public static BigInteger op_Modulus(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0x1260230 Offset: 0x1260230 VA: 0x1260230
	public static BigInteger op_Division(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0x1260274 Offset: 0x1260274 VA: 0x1260274
	public static BigInteger op_Multiply(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0x12605AC Offset: 0x12605AC VA: 0x12605AC
	public static BigInteger op_LeftShift(BigInteger bi1, int shiftVal) { }

	// RVA: 0x1260870 Offset: 0x1260870 VA: 0x1260870
	public static BigInteger op_RightShift(BigInteger bi1, int shiftVal) { }

	[CLSCompliantAttribute] // RVA: 0xC40158 Offset: 0xC40158 VA: 0xC40158
	// RVA: 0x125D6C8 Offset: 0x125D6C8 VA: 0x125D6C8
	public static bool op_Equality(BigInteger bi1, uint ui) { }

	[CLSCompliantAttribute] // RVA: 0xC4016C Offset: 0xC4016C VA: 0xC4016C
	// RVA: 0x125DC90 Offset: 0x125DC90 VA: 0x125DC90
	public static bool op_Inequality(BigInteger bi1, uint ui) { }

	// RVA: 0x125DFB8 Offset: 0x125DFB8 VA: 0x125DFB8
	public static bool op_Equality(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0x1260AA4 Offset: 0x1260AA4 VA: 0x1260AA4
	public static bool op_Inequality(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0x1260B74 Offset: 0x1260B74 VA: 0x1260B74
	public static bool op_GreaterThan(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0x1260B90 Offset: 0x1260B90 VA: 0x1260B90
	public static bool op_LessThan(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0x1260BA8 Offset: 0x1260BA8 VA: 0x1260BA8
	public static bool op_GreaterThanOrEqual(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0x1260BC4 Offset: 0x1260BC4 VA: 0x1260BC4
	public static bool op_LessThanOrEqual(BigInteger bi1, BigInteger bi2) { }
}

// Namespace: 
public enum BigInteger.Sign // TypeDefIndex: 1802
{
	// Fields
	public int value__; // 0x0
	public const BigInteger.Sign Negative = -1;
	public const BigInteger.Sign Zero = 0;
	public const BigInteger.Sign Positive = 1;
}

// Namespace: 
public sealed class BigInteger.ModulusRing // TypeDefIndex: 1803
{
	// Fields
	private BigInteger mod; // 0x10
	private BigInteger constant; // 0x18

	// Methods

	// RVA: 0x125EB88 Offset: 0x125EB88 VA: 0x125EB88
	public void .ctor(BigInteger modulus) { }

	// RVA: 0x1261734 Offset: 0x1261734 VA: 0x1261734
	public void BarrettReduction(BigInteger x) { }

	// RVA: 0x1261A78 Offset: 0x1261A78 VA: 0x1261A78
	public BigInteger Multiply(BigInteger a, BigInteger b) { }

	// RVA: 0x126150C Offset: 0x126150C VA: 0x126150C
	public BigInteger Difference(BigInteger a, BigInteger b) { }

	// RVA: 0x125EC90 Offset: 0x125EC90 VA: 0x125EC90
	public BigInteger Pow(BigInteger a, BigInteger k) { }

	[CLSCompliantAttribute] // RVA: 0xC40180 Offset: 0xC40180 VA: 0xC40180
	// RVA: 0x1261C60 Offset: 0x1261C60 VA: 0x1261C60
	public BigInteger Pow(uint b, BigInteger exp) { }
}

// Namespace: 
private sealed class BigInteger.Kernel // TypeDefIndex: 1804
{
	// Methods

	// RVA: 0x125F168 Offset: 0x125F168 VA: 0x125F168
	public static BigInteger AddSameSign(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0x125F5C0 Offset: 0x125F5C0 VA: 0x125F5C0
	public static BigInteger Subtract(BigInteger big, BigInteger small) { }

	// RVA: 0x1260BE0 Offset: 0x1260BE0 VA: 0x1260BE0
	public static void MinusEq(BigInteger big, BigInteger small) { }

	// RVA: 0x1260DBC Offset: 0x1260DBC VA: 0x1260DBC
	public static void PlusEq(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0x125E088 Offset: 0x125E088 VA: 0x125E088
	public static BigInteger.Sign Compare(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0x125DB9C Offset: 0x125DB9C VA: 0x125DB9C
	public static uint SingleByteDivideInPlace(BigInteger n, uint d) { }

	// RVA: 0x125F870 Offset: 0x125F870 VA: 0x125F870
	public static uint DwordMod(BigInteger n, uint d) { }

	// RVA: 0x1261098 Offset: 0x1261098 VA: 0x1261098
	public static BigInteger[] DwordDivMod(BigInteger n, uint d) { }

	// RVA: 0x125F968 Offset: 0x125F968 VA: 0x125F968
	public static BigInteger[] multiByteDivide(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0x12605B0 Offset: 0x12605B0 VA: 0x12605B0
	public static BigInteger LeftShift(BigInteger bi, int n) { }

	// RVA: 0x1260874 Offset: 0x1260874 VA: 0x1260874
	public static BigInteger RightShift(BigInteger bi, int n) { }

	// RVA: 0x12604AC Offset: 0x12604AC VA: 0x12604AC
	public static void Multiply(uint[] x, uint xOffset, uint xLen, uint[] y, uint yOffset, uint yLen, uint[] d, uint dOffset) { }

	// RVA: 0x12612F0 Offset: 0x12612F0 VA: 0x12612F0
	public static void MultiplyMod2p32pmod(uint[] x, int xOffset, int xLen, uint[] y, int yOffest, int yLen, uint[] d, int dOffset, int mod) { }

	// RVA: 0x1261444 Offset: 0x1261444 VA: 0x1261444
	public static uint modInverse(BigInteger bi, uint modulus) { }

	// RVA: 0x125E358 Offset: 0x125E358 VA: 0x125E358
	public static BigInteger modInverse(BigInteger bi, BigInteger modulus) { }
}

// Namespace: Mono.Math.Prime
public enum ConfidenceFactor // TypeDefIndex: 1805
{
	// Fields
	public int value__; // 0x0
	public const ConfidenceFactor ExtraLow = 0;
	public const ConfidenceFactor Low = 1;
	public const ConfidenceFactor Medium = 2;
	public const ConfidenceFactor High = 3;
	public const ConfidenceFactor ExtraHigh = 4;
	public const ConfidenceFactor Provable = 5;
}

// Namespace: Mono.Math.Prime
public sealed class PrimalityTests // TypeDefIndex: 1806
{
	// Methods

	// RVA: 0x12625DC Offset: 0x12625DC VA: 0x12625DC
	private static int GetSPPRounds(BigInteger bi, ConfidenceFactor confidence) { }

	// RVA: 0x126279C Offset: 0x126279C VA: 0x126279C
	public static bool RabinMillerTest(BigInteger n, ConfidenceFactor confidence) { }
}

// Namespace: Mono.Math.Prime.Generator
public abstract class PrimeGeneratorBase // TypeDefIndex: 1807
{
	// Properties
	public virtual ConfidenceFactor Confidence { get; }
	public virtual PrimalityTest PrimalityTest { get; }
	public virtual int TrialDivisionBounds { get; }

	// Methods

	// RVA: 0x1261CD8 Offset: 0x1261CD8 VA: 0x1261CD8
	protected void .ctor() { }

	// RVA: 0x1261CE0 Offset: 0x1261CE0 VA: 0x1261CE0 Slot: 4
	public virtual ConfidenceFactor get_Confidence() { }

	// RVA: 0x1261CE8 Offset: 0x1261CE8 VA: 0x1261CE8 Slot: 5
	public virtual PrimalityTest get_PrimalityTest() { }

	// RVA: 0x1261D5C Offset: 0x1261D5C VA: 0x1261D5C Slot: 6
	public virtual int get_TrialDivisionBounds() { }

	// RVA: -1 Offset: -1 Slot: 7
	public abstract BigInteger GenerateNewPrime(int bits);
}

// Namespace: Mono.Math.Prime.Generator
public class SequentialSearchPrimeGeneratorBase : PrimeGeneratorBase // TypeDefIndex: 1808
{
	// Methods

	// RVA: 0x125EE34 Offset: 0x125EE34 VA: 0x125EE34
	public void .ctor() { }

	// RVA: 0x1261D64 Offset: 0x1261D64 VA: 0x1261D64 Slot: 8
	protected virtual BigInteger GenerateSearchBase(int bits, object context) { }

	// RVA: 0x1261DEC Offset: 0x1261DEC VA: 0x1261DEC Slot: 7
	public override BigInteger GenerateNewPrime(int bits) { }

	// RVA: 0x1261DFC Offset: 0x1261DFC VA: 0x1261DFC Slot: 9
	public virtual BigInteger GenerateNewPrime(int bits, object context) { }

	// RVA: 0x12624FC Offset: 0x12624FC VA: 0x12624FC Slot: 10
	protected virtual bool IsPrimeAcceptable(BigInteger bi, object context) { }
}

// Namespace: Mono.Security
[DefaultMemberAttribute] // RVA: 0xC3FDFC Offset: 0xC3FDFC VA: 0xC3FDFC
public class ASN1 // TypeDefIndex: 1809
{
	// Fields
	private byte m_nTag; // 0x10
	private byte[] m_aValue; // 0x18
	private ArrayList elist; // 0x20

	// Properties
	public int Count { get; }
	public byte Tag { get; }
	public int Length { get; }
	public byte[] Value { get; set; }
	public ASN1 Item { get; }

	// Methods

	// RVA: 0x1262AC4 Offset: 0x1262AC4 VA: 0x1262AC4
	public void .ctor(byte tag) { }

	// RVA: 0x1262AF4 Offset: 0x1262AF4 VA: 0x1262AF4
	public void .ctor(byte tag, byte[] data) { }

	// RVA: 0x1262B30 Offset: 0x1262B30 VA: 0x1262B30
	public void .ctor(byte[] data) { }

	// RVA: 0x1262E24 Offset: 0x1262E24 VA: 0x1262E24
	public int get_Count() { }

	// RVA: 0x1262E40 Offset: 0x1262E40 VA: 0x1262E40
	public byte get_Tag() { }

	// RVA: 0x1262E48 Offset: 0x1262E48 VA: 0x1262E48
	public int get_Length() { }

	// RVA: 0x1262E60 Offset: 0x1262E60 VA: 0x1262E60
	public byte[] get_Value() { }

	// RVA: 0x1262F50 Offset: 0x1262F50 VA: 0x1262F50
	public void set_Value(byte[] value) { }

	// RVA: 0x1263024 Offset: 0x1263024 VA: 0x1263024
	private bool CompareArray(byte[] array1, byte[] array2) { }

	// RVA: 0x12630F4 Offset: 0x12630F4 VA: 0x12630F4
	public bool CompareValue(byte[] value) { }

	// RVA: 0x1263108 Offset: 0x1263108 VA: 0x1263108
	public ASN1 Add(ASN1 asn1) { }

	// RVA: 0x12631A8 Offset: 0x12631A8 VA: 0x12631A8 Slot: 4
	public virtual byte[] GetBytes() { }

	// RVA: 0x1262CEC Offset: 0x1262CEC VA: 0x1262CEC
	protected void Decode(byte[] asn1, ref int anPos, int anLength) { }

	// RVA: 0x126398C Offset: 0x126398C VA: 0x126398C
	protected void DecodeTLV(byte[] asn1, ref int pos, out byte tag, out int length, out byte[] content) { }

	// RVA: 0x1263AFC Offset: 0x1263AFC VA: 0x1263AFC
	public ASN1 get_Item(int index) { }

	// RVA: 0x1263C94 Offset: 0x1263C94 VA: 0x1263C94
	public ASN1 Element(int index, byte anTag) { }

	// RVA: 0x1263E58 Offset: 0x1263E58 VA: 0x1263E58 Slot: 3
	public override string ToString() { }
}

// Namespace: Mono.Security
public static class ASN1Convert // TypeDefIndex: 1810
{
	// Methods

	// RVA: 0x126410C Offset: 0x126410C VA: 0x126410C
	public static ASN1 FromDateTime(DateTime dt) { }

	// RVA: 0x1264398 Offset: 0x1264398 VA: 0x1264398
	public static ASN1 FromInt32(int value) { }

	// RVA: 0x1264530 Offset: 0x1264530 VA: 0x1264530
	public static ASN1 FromOid(string oid) { }

	// RVA: 0x126460C Offset: 0x126460C VA: 0x126460C
	public static ASN1 FromUnsignedBigInteger(byte[] big) { }

	// RVA: 0x1264724 Offset: 0x1264724 VA: 0x1264724
	public static int ToInt32(ASN1 asn1) { }

	// RVA: 0x126486C Offset: 0x126486C VA: 0x126486C
	public static string ToOid(ASN1 asn1) { }

	// RVA: 0x1264BB8 Offset: 0x1264BB8 VA: 0x1264BB8
	public static DateTime ToDateTime(ASN1 time) { }
}

// Namespace: Mono.Security
internal sealed class BitConverterLE // TypeDefIndex: 1811
{
	// Methods

	// RVA: 0x1265D18 Offset: 0x1265D18 VA: 0x1265D18
	private static byte[] GetUIntBytes(byte* bytes) { }

	// RVA: 0x126450C Offset: 0x126450C VA: 0x126450C
	internal static byte[] GetBytes(int value) { }

	// RVA: 0x1265EC4 Offset: 0x1265EC4 VA: 0x1265EC4
	private static void UIntFromBytes(byte* dst, byte[] src, int startIndex) { }

	// RVA: 0x1265A5C Offset: 0x1265A5C VA: 0x1265A5C
	internal static int ToInt32(byte[] value, int startIndex) { }

	// RVA: 0x1265A24 Offset: 0x1265A24 VA: 0x1265A24
	internal static uint ToUInt32(byte[] value, int startIndex) { }
}

// Namespace: Mono.Security
public sealed class PKCS7 // TypeDefIndex: 1812
{
	// Methods

	// RVA: 0x126FB54 Offset: 0x126FB54 VA: 0x126FB54
	public static ASN1 AlgorithmIdentifier(string oid) { }

	// RVA: 0x126FC24 Offset: 0x126FC24 VA: 0x126FC24
	public static ASN1 AlgorithmIdentifier(string oid, ASN1 parameters) { }
}

// Namespace: 
public class PKCS7.ContentInfo // TypeDefIndex: 1813
{
	// Fields
	private string contentType; // 0x10
	private ASN1 content; // 0x18

	// Properties
	public ASN1 ASN1 { get; }
	public ASN1 Content { get; set; }
	public string ContentType { get; set; }

	// Methods

	// RVA: 0x126FCE4 Offset: 0x126FCE4 VA: 0x126FCE4
	public void .ctor() { }

	// RVA: 0x126FD5C Offset: 0x126FD5C VA: 0x126FD5C
	public void .ctor(string oid) { }

	// RVA: 0x126FD84 Offset: 0x126FD84 VA: 0x126FD84
	public void .ctor(byte[] data) { }

	// RVA: 0x126FDF4 Offset: 0x126FDF4 VA: 0x126FDF4
	public void .ctor(ASN1 asn1) { }

	// RVA: 0x126FFAC Offset: 0x126FFAC VA: 0x126FFAC
	public ASN1 get_ASN1() { }

	// RVA: 0x127008C Offset: 0x127008C VA: 0x127008C
	public ASN1 get_Content() { }

	// RVA: 0x1270094 Offset: 0x1270094 VA: 0x1270094
	public void set_Content(ASN1 value) { }

	// RVA: 0x127009C Offset: 0x127009C VA: 0x127009C
	public string get_ContentType() { }

	// RVA: 0x12700A4 Offset: 0x12700A4 VA: 0x12700A4
	public void set_ContentType(string value) { }

	// RVA: 0x126FFB0 Offset: 0x126FFB0 VA: 0x126FFB0
	internal ASN1 GetASN1() { }
}

// Namespace: 
public class PKCS7.EncryptedData // TypeDefIndex: 1814
{
	// Fields
	private byte _version; // 0x10
	private PKCS7.ContentInfo _content; // 0x18
	private PKCS7.ContentInfo _encryptionAlgorithm; // 0x20
	private byte[] _encrypted; // 0x28

	// Properties
	public PKCS7.ContentInfo EncryptionAlgorithm { get; }
	public byte[] EncryptedContent { get; }

	// Methods

	// RVA: 0x12700AC Offset: 0x12700AC VA: 0x12700AC
	public void .ctor() { }

	// RVA: 0x12700D4 Offset: 0x12700D4 VA: 0x12700D4
	public void .ctor(ASN1 asn1) { }

	// RVA: 0x12703CC Offset: 0x12703CC VA: 0x12703CC
	public PKCS7.ContentInfo get_EncryptionAlgorithm() { }

	// RVA: 0x12703D4 Offset: 0x12703D4 VA: 0x12703D4
	public byte[] get_EncryptedContent() { }
}

// Namespace: Mono.Security.Authenticode
public class PrivateKey // TypeDefIndex: 1815
{
	// Fields
	private bool encrypted; // 0x10
	private RSA rsa; // 0x18
	private bool weak; // 0x20
	private int keyType; // 0x24

	// Properties
	public RSA RSA { get; }

