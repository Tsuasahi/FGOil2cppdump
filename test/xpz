	// RVA: 0x1AC22D8 Offset: 0x1AC22D8 VA: 0x1AC22D8 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1AC269C Offset: 0x1AC269C VA: 0x1AC269C Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1AC26D0 Offset: 0x1AC26D0 VA: 0x1AC26D0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC9673C Offset: 0xC9673C VA: 0xC9673C
public class ScriptBackLogListViewItem : ListViewItem // TypeDefIndex: 8422
{
	// Fields
	protected ScriptMessageLabel label; // 0x70
	protected Font fontType; // 0x78

	// Properties
	public ScriptMessageLabel Label { get; }

	// Methods

	// RVA: 0x1AC26DC Offset: 0x1AC26DC VA: 0x1AC26DC
	public void .ctor(int index, ScriptMessageLabel label) { }

	// RVA: 0x1AC2708 Offset: 0x1AC2708 VA: 0x1AC2708 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1AC2710 Offset: 0x1AC2710 VA: 0x1AC2710
	public ScriptMessageLabel get_Label() { }

	// RVA: 0x1AC2718 Offset: 0x1AC2718 VA: 0x1AC2718
	private string ToString() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC96774 Offset: 0xC96774 VA: 0xC96774
public class ScriptBackLogListViewItemDraw : MonoBehaviour // TypeDefIndex: 8423
{
	// Fields
	[SerializeField] // RVA: 0xCCB344 Offset: 0xCCB344 VA: 0xCCB344
	protected GameObject mainPrefab; // 0x18
	[SerializeField] // RVA: 0xCCB354 Offset: 0xCCB354 VA: 0xCCB354
	protected GameObject rubyPrefab; // 0x20
	[SerializeField] // RVA: 0xCCB364 Offset: 0xCCB364 VA: 0xCCB364
	protected GameObject imagePrefab; // 0x28
	[SerializeField] // RVA: 0xCCB374 Offset: 0xCCB374 VA: 0xCCB374
	private GameObject playVoicePrefab; // 0x30
	[SerializeField] // RVA: 0xCCB384 Offset: 0xCCB384 VA: 0xCCB384
	private GameObject playVoiceEffect; // 0x38

	// Methods

	// RVA: 0x1AC2820 Offset: 0x1AC2820 VA: 0x1AC2820
	public void .ctor() { }

	// RVA: 0x1AC2828 Offset: 0x1AC2828 VA: 0x1AC2828
	public void SetItem(ScriptBackLogListViewItem item, ScriptBackLogListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public enum ScriptBackLogListViewItemDraw.DispMode // TypeDefIndex: 8424
{
	// Fields
	public int value__; // 0x0
	public const ScriptBackLogListViewItemDraw.DispMode INVISIBLE = 0;
	public const ScriptBackLogListViewItemDraw.DispMode INVALID = 1;
	public const ScriptBackLogListViewItemDraw.DispMode VALID = 2;
	public const ScriptBackLogListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC967AC Offset: 0xC967AC VA: 0xC967AC
public class ScriptBackLogListViewManager : ListViewManager // TypeDefIndex: 8425
{
	// Fields
	protected ScriptBackLogListViewManager.InitMode initMode; // 0x138
	[CompilerGeneratedAttribute] // RVA: 0xCCB394 Offset: 0xCCB394 VA: 0xCCB394
	[DebuggerBrowsableAttribute] // RVA: 0xCCB394 Offset: 0xCCB394 VA: 0xCCB394
	private Action callbackFunc; // 0x140
	protected int callbackCount; // 0x148
	protected ScriptBackLogListViewManager.ClickDelegate clickFunc; // 0x150

	// Properties
	public List<ScriptBackLogListViewObject> ObjectList { get; }

	// Methods

	// RVA: 0x1AC293C Offset: 0x1AC293C VA: 0x1AC293C
	public void .ctor() { }

	// RVA: 0x1AC2944 Offset: 0x1AC2944 VA: 0x1AC2944
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1AC2A34 Offset: 0x1AC2A34 VA: 0x1AC2A34
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1AC2B24 Offset: 0x1AC2B24 VA: 0x1AC2B24
	public List<ScriptBackLogListViewObject> get_ObjectList() { }

	// RVA: 0x1AC1E6C Offset: 0x1AC1E6C VA: 0x1AC1E6C
	public void CreateList(List<ScriptMessageLabel> logList, float offsetY, ScriptBackLogListViewManager.ClickDelegate callbackFunc) { }

	// RVA: 0x1AC2148 Offset: 0x1AC2148 VA: 0x1AC2148
	public void DestroyList() { }

	// RVA: 0x1AC2CF0 Offset: 0x1AC2CF0 VA: 0x1AC2CF0
	public ScriptBackLogListViewItem GetItem(int index) { }

	// RVA: 0x1AC2D98 Offset: 0x1AC2D98 VA: 0x1AC2D98 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1AC2088 Offset: 0x1AC2088 VA: 0x1AC2088
	public void SetMode(ScriptBackLogListViewManager.InitMode mode) { }

	// RVA: 0x1AC2ED0 Offset: 0x1AC2ED0 VA: 0x1AC2ED0
	public void SetMode(ScriptBackLogListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1AC321C Offset: 0x1AC321C VA: 0x1AC321C
	protected void RequestListObject(ScriptBackLogListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1AC3028 Offset: 0x1AC3028 VA: 0x1AC3028
	protected void RequestListObject(ScriptBackLogListViewObject.InitMode mode) { }

	// RVA: 0x1AC352C Offset: 0x1AC352C VA: 0x1AC352C
	protected void OnMoveEnd() { }

	// RVA: 0x1AC35F8 Offset: 0x1AC35F8 VA: 0x1AC35F8
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x1AC3878 Offset: 0x1AC3878 VA: 0x1AC3878
	public void OnClickBack() { }

	// RVA: 0x1AC3890 Offset: 0x1AC3890 VA: 0x1AC3890
	protected void OnEnable() { }
}

// Namespace: 
public enum ScriptBackLogListViewManager.InitMode // TypeDefIndex: 8426
{
	// Fields
	public int value__; // 0x0
	public const ScriptBackLogListViewManager.InitMode NONE = 0;
	public const ScriptBackLogListViewManager.InitMode INPUT = 1;
}

// Namespace: 
public sealed class ScriptBackLogListViewManager.ClickDelegate : MulticastDelegate // TypeDefIndex: 8427
{
	// Methods

	// RVA: 0x1AC1E5C Offset: 0x1AC1E5C VA: 0x1AC1E5C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1AC364C Offset: 0x1AC364C VA: 0x1AC364C Slot: 11
	public virtual void Invoke(int select) { }

	// RVA: 0x1AC3918 Offset: 0x1AC3918 VA: 0x1AC3918 Slot: 12
	public virtual IAsyncResult BeginInvoke(int select, AsyncCallback callback, object object) { }

	// RVA: 0x1AC39A4 Offset: 0x1AC39A4 VA: 0x1AC39A4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC967E4 Offset: 0xC967E4 VA: 0xC967E4
public class ScriptBackLogListViewObject : ListViewObject // TypeDefIndex: 8428
{
	// Fields
	protected ScriptBackLogListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCCB3D0 Offset: 0xCCB3D0 VA: 0xCCB3D0
	[DebuggerBrowsableAttribute] // RVA: 0xCCB3D0 Offset: 0xCCB3D0 VA: 0xCCB3D0
	private Action callbackFunc; // 0x70
	protected ScriptBackLogListViewItemDraw itemDraw; // 0x78
	protected ScriptBackLogListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x1AC39B0 Offset: 0x1AC39B0 VA: 0x1AC39B0
	public void .ctor() { }

	// RVA: 0x1AC3A18 Offset: 0x1AC3A18 VA: 0x1AC3A18
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1AC3B04 Offset: 0x1AC3B04 VA: 0x1AC3B04
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1AC3BF0 Offset: 0x1AC3BF0 VA: 0x1AC3BF0
	protected void Awake() { }

	// RVA: 0x1AC3C64 Offset: 0x1AC3C64 VA: 0x1AC3C64
	private void OnDestroy() { }

	// RVA: 0x1AC3D10 Offset: 0x1AC3D10 VA: 0x1AC3D10
	private void Start() { }

	// RVA: 0x1AC3D24 Offset: 0x1AC3D24 VA: 0x1AC3D24
	public ScriptBackLogListViewItem GetItem() { }

	// RVA: 0x1AC3DA8 Offset: 0x1AC3DA8 VA: 0x1AC3DA8 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1AC3DB4 Offset: 0x1AC3DB4 VA: 0x1AC3DB4 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1AC3E3C Offset: 0x1AC3E3C VA: 0x1AC3E3C
	public void Init(ScriptBackLogListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1AC3424 Offset: 0x1AC3424 VA: 0x1AC3424
	public void Init(ScriptBackLogListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x1AC34A8 Offset: 0x1AC34A8 VA: 0x1AC34A8
	public void Init(ScriptBackLogListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x1AC2E50 Offset: 0x1AC2E50 VA: 0x1AC2E50
	public void Init(ScriptBackLogListViewObject.InitMode initMode) { }

	// RVA: 0x1AC4000 Offset: 0x1AC4000 VA: 0x1AC4000
	protected void SetupDisp() { }

	// RVA: 0x1AC4110 Offset: 0x1AC4110 VA: 0x1AC4110
	protected void EventMoveEnd() { }

	// RVA: 0x1AC4138 Offset: 0x1AC4138 VA: 0x1AC4138 Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum ScriptBackLogListViewObject.InitMode // TypeDefIndex: 8429
{
	// Fields
	public int value__; // 0x0
	public const ScriptBackLogListViewObject.InitMode INVISIBLE = 0;
	public const ScriptBackLogListViewObject.InitMode INVALID = 1;
	public const ScriptBackLogListViewObject.InitMode VALID = 2;
	public const ScriptBackLogListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum ScriptBackLogListViewObject.State // TypeDefIndex: 8430
{
	// Fields
	public int value__; // 0x0
	public const ScriptBackLogListViewObject.State INIT = 0;
	public const ScriptBackLogListViewObject.State IDLE = 1;
	public const ScriptBackLogListViewObject.State MOVE = 2;
	public const ScriptBackLogListViewObject.State INPUT = 3;
}

// Namespace: 
public class ScriptCharaData // TypeDefIndex: 8431
{
	// Fields
	protected ScriptCharaData.Kind kind; // 0x10
	protected ScriptCharaData.State state; // 0x14
	protected string name; // 0x18
	protected string imageName; // 0x20
	protected string talkName; // 0x28
	protected GameObject gameObject; // 0x30
	protected UIScriptChara chara; // 0x38
	protected Face.Type faceType; // 0x40
	protected string changeKind; // 0x48
	protected float changeSpeed; // 0x50
	protected int defaultDepth; // 0x54
	protected bool isWaitTalkMoveAlpha; // 0x58

	// Properties
	public ScriptCharaData.Kind DispKind { get; }
	public string Name { get; }
	public string TalkName { get; }

	// Methods

	// RVA: 0x1AC83A4 Offset: 0x1AC83A4 VA: 0x1AC83A4
	public void .ctor(ScriptCharaData.Kind kind, string name, string imageName, ItemSeed seed) { }

	// RVA: 0x1AC8934 Offset: 0x1AC8934 VA: 0x1AC8934
	public ScriptCharaData.Kind get_DispKind() { }

	// RVA: 0x1AC893C Offset: 0x1AC893C VA: 0x1AC893C
	public string get_Name() { }

	// RVA: 0x1AC8944 Offset: 0x1AC8944 VA: 0x1AC8944
	public string get_TalkName() { }

	// RVA: 0x1AC894C Offset: 0x1AC894C VA: 0x1AC894C
	public bool IsLoad() { }

	// RVA: 0x1AC895C Offset: 0x1AC895C VA: 0x1AC895C
	public bool IsChange() { }

	// RVA: 0x1AC8878 Offset: 0x1AC8878 VA: 0x1AC8878
	public void SetCharacter(string imageName) { }

	// RVA: 0x1AC899C Offset: 0x1AC899C VA: 0x1AC899C
	protected void EndLoadAsset() { }

	// RVA: 0x1AC89A8 Offset: 0x1AC89A8 VA: 0x1AC89A8
	public void ChangeCharacter(string kind, float speed, string imageName, int type) { }

	// RVA: 0x1AC8A80 Offset: 0x1AC8A80 VA: 0x1AC8A80
	protected void EndChange() { }

	// RVA: 0x1AC8A8C Offset: 0x1AC8A8C VA: 0x1AC8A8C
	public void Destroy() { }

	// RVA: 0x1AC8B40 Offset: 0x1AC8B40 VA: 0x1AC8B40
	public void SetFace(int type, float fadeTime = 0) { }

	// RVA: 0x1AC8B90 Offset: 0x1AC8B90 VA: 0x1AC8B90
	public void SetShadow(bool isShadow, bool isSkip) { }

	// RVA: 0x1AC8BDC Offset: 0x1AC8BDC VA: 0x1AC8BDC
	public void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x1AC8C48 Offset: 0x1AC8C48 VA: 0x1AC8C48
	public void SetTalkName(string name) { }

	// RVA: 0x1AC8C50 Offset: 0x1AC8C50 VA: 0x1AC8C50
	public void SetPosition(int index) { }

	// RVA: 0x1AC8D08 Offset: 0x1AC8D08 VA: 0x1AC8D08
	public void SetPosition(float x, float y) { }

	// RVA: 0x1AC8DC0 Offset: 0x1AC8DC0 VA: 0x1AC8DC0
	public void SetPosition(Vector3 v) { }

	// RVA: 0x1AC8E18 Offset: 0x1AC8E18 VA: 0x1AC8E18
	public void SetScale(float v) { }

	// RVA: 0x1AC8E58 Offset: 0x1AC8E58 VA: 0x1AC8E58
	public void SetFullScreenScaleType(int type) { }

	// RVA: 0x1AC8E98 Offset: 0x1AC8E98 VA: 0x1AC8E98
	public void SetTalkMask(bool isMask) { }

	// RVA: 0x1AC8ED4 Offset: 0x1AC8ED4 VA: 0x1AC8ED4
	public void SetAlpha(float a) { }

	// RVA: 0x1AC892C Offset: 0x1AC892C VA: 0x1AC892C
	public void SetDepth(int d) { }

	// RVA: 0x1AC8F18 Offset: 0x1AC8F18 VA: 0x1AC8F18
	public void RecoverDepth() { }

	// RVA: 0x1AC8F54 Offset: 0x1AC8F54 VA: 0x1AC8F54
	public void SetTalkDepth() { }

	// RVA: 0x1AC8F8C Offset: 0x1AC8F8C VA: 0x1AC8F8C
	public bool IsMoveAlpha() { }

	// RVA: 0x1AC8FC0 Offset: 0x1AC8FC0 VA: 0x1AC8FC0
	public bool IsMoveAlphaWaitTalk() { }

	// RVA: 0x1AC9004 Offset: 0x1AC9004 VA: 0x1AC9004
	public void MoveAlpha(float duration, float alpha, bool isWaitTalk = True) { }

	// RVA: 0x1AC905C Offset: 0x1AC905C VA: 0x1AC905C
	public void MoveAlphaSpeed(float speed, float alpha, bool isWaitTalk = True) { }

	// RVA: 0x1AC90B4 Offset: 0x1AC90B4 VA: 0x1AC90B4
	public bool IsMove() { }

	// RVA: 0x1AC90E4 Offset: 0x1AC90E4 VA: 0x1AC90E4
	public void MovePosition(float duration, int index) { }

	// RVA: 0x1AC91E8 Offset: 0x1AC91E8 VA: 0x1AC91E8
	public void MovePosition(float duration, float x, float y) { }

	// RVA: 0x1AC9188 Offset: 0x1AC9188 VA: 0x1AC9188
	public void MovePosition(float duration, Vector3 v) { }

	// RVA: 0x1AC9294 Offset: 0x1AC9294 VA: 0x1AC9294
	public void MoveReturnPosition(float duration) { }

	// RVA: 0x1AC92D4 Offset: 0x1AC92D4 VA: 0x1AC92D4
	public void MoveReturnPosition(float duration, int index) { }

	// RVA: 0x1AC93D8 Offset: 0x1AC93D8 VA: 0x1AC93D8
	public void MoveReturnPosition(float duration, float x, float y) { }

	// RVA: 0x1AC9378 Offset: 0x1AC9378 VA: 0x1AC9378
	public void MoveReturnPosition(float duration, Vector3 v) { }

	// RVA: 0x1AC9484 Offset: 0x1AC9484 VA: 0x1AC9484
	public void MoveScale(float duration, float s) { }

	// RVA: 0x1AC94CC Offset: 0x1AC94CC VA: 0x1AC94CC
	public void MoveAttack(string kind, float duration, int index) { }

	// RVA: 0x1AC95E0 Offset: 0x1AC95E0 VA: 0x1AC95E0
	public void MoveAttack(string kind, float duration, float x, float y) { }

	// RVA: 0x1AC9578 Offset: 0x1AC9578 VA: 0x1AC9578
	public void MoveAttack(string kind, float duration, Vector3 v) { }

	// RVA: 0x1AC969C Offset: 0x1AC969C VA: 0x1AC969C
	public bool IsRoll() { }

	// RVA: 0x1AC96CC Offset: 0x1AC96CC VA: 0x1AC96CC
	public void InitRoll() { }

	// RVA: 0x1AC96FC Offset: 0x1AC96FC VA: 0x1AC96FC
	public void SetRoll(float rollZ, Vector3 centerOffset) { }

	// RVA: 0x1AC975C Offset: 0x1AC975C VA: 0x1AC975C
	public void StartRoll(float duration, float rollZ) { }

	// RVA: 0x1AC97A4 Offset: 0x1AC97A4 VA: 0x1AC97A4
	public void StartRollEx(float duration, float rollZ, Vector3 centerOffset) { }

	// RVA: 0x1AC9814 Offset: 0x1AC9814 VA: 0x1AC9814
	public bool IsShake() { }

	// RVA: 0x1AC9844 Offset: 0x1AC9844 VA: 0x1AC9844
	public void Shake(float duration, float cycle, float x, float y) { }

	// RVA: 0x1AC98A4 Offset: 0x1AC98A4 VA: 0x1AC98A4
	public void ShakeStop() { }

	// RVA: 0x1AC98E4 Offset: 0x1AC98E4 VA: 0x1AC98E4
	public bool IsCut() { }

	// RVA: 0x1AC9914 Offset: 0x1AC9914 VA: 0x1AC9914
	public bool IsCutStart() { }

	// RVA: 0x1AC9944 Offset: 0x1AC9944 VA: 0x1AC9944
	public void SetCutin(string n, float time, float mgd, bool isSkip = False, bool isPause = False) { }

	// RVA: 0x1AC99B4 Offset: 0x1AC99B4 VA: 0x1AC99B4
	public void ResumeCutin(bool isSkip = False) { }

	// RVA: 0x1AC99F4 Offset: 0x1AC99F4 VA: 0x1AC99F4
	public void SetCutout(float time, bool isSkip = False) { }

	// RVA: 0x1AC9A44 Offset: 0x1AC9A44 VA: 0x1AC9A44
	public void StopCut() { }

	// RVA: 0x1AC9A74 Offset: 0x1AC9A74 VA: 0x1AC9A74
	public bool IsSpecialEffect() { }

	// RVA: 0x1AC9AA4 Offset: 0x1AC9AA4 VA: 0x1AC9AA4
	public bool IsSpecialEffect(string n) { }

	// RVA: 0x1AC9ADC Offset: 0x1AC9ADC VA: 0x1AC9ADC
	public bool IsSpecialEffectStart() { }

	// RVA: 0x1AC9B0C Offset: 0x1AC9B0C VA: 0x1AC9B0C
	public bool IsSpecialEffectStart(string n) { }

	// RVA: 0x1AC9B44 Offset: 0x1AC9B44 VA: 0x1AC9B44
	public void SetSpecialEffect(string n, Vector3 pos, float time, Color color, float range, bool isSkip = False, bool isPause = False) { }

	// RVA: 0x1AC9C0C Offset: 0x1AC9C0C VA: 0x1AC9C0C
	public void ResumeSpecialEffect(bool isPause = False) { }

	// RVA: 0x1AC9C44 Offset: 0x1AC9C44 VA: 0x1AC9C44
	public void ResumeSpecialEffect(string n, bool isPause = False) { }

	// RVA: 0x1AC9C8C Offset: 0x1AC9C8C VA: 0x1AC9C8C
	public void StopSpecialEffect() { }

	// RVA: 0x1AC9CBC Offset: 0x1AC9CBC VA: 0x1AC9CBC
	public void StopSpecialEffect(string n) { }

	// RVA: 0x1AC9CF4 Offset: 0x1AC9CF4 VA: 0x1AC9CF4
	public bool IsEffect() { }

	// RVA: 0x1AC9D24 Offset: 0x1AC9D24 VA: 0x1AC9D24
	public bool IsEffect(string n) { }

	// RVA: 0x1AC9D5C Offset: 0x1AC9D5C VA: 0x1AC9D5C
	public bool IsEffectStart() { }

	// RVA: 0x1AC9D8C Offset: 0x1AC9D8C VA: 0x1AC9D8C
	public bool IsEffectStart(string n) { }

	// RVA: 0x1AC9DC4 Offset: 0x1AC9DC4 VA: 0x1AC9DC4
	public void SetEffect(string n, bool isSkip = False, bool isPause = False, CommonEffectManager.FlipKind flip = 0) { }

	// RVA: 0x1AC9E24 Offset: 0x1AC9E24 VA: 0x1AC9E24
	public void SetEffect(string n, Vector3 p, bool isSkip = False, bool isPause = False, CommonEffectManager.FlipKind flip = 0) { }

	// RVA: 0x1AC9EAC Offset: 0x1AC9EAC VA: 0x1AC9EAC
	public void ResumeEffect(bool isSkip = False) { }

	// RVA: 0x1AC9EE4 Offset: 0x1AC9EE4 VA: 0x1AC9EE4
	public void ResumeEffect(string n, bool isSkip = False) { }

	// RVA: 0x1AC9F2C Offset: 0x1AC9F2C VA: 0x1AC9F2C
	public bool StopEffect(bool isSkip = False) { }

	// RVA: 0x1AC9F64 Offset: 0x1AC9F64 VA: 0x1AC9F64
	public bool StopEffect(string n, bool isSkip = False) { }

	// RVA: 0x1AC9FAC Offset: 0x1AC9FAC VA: 0x1AC9FAC
	public bool IsBackEffect() { }

	// RVA: 0x1AC9FDC Offset: 0x1AC9FDC VA: 0x1AC9FDC
	public bool IsBackEffect(string n) { }

	// RVA: 0x1ACA014 Offset: 0x1ACA014 VA: 0x1ACA014
	public bool IsBackEffectStart() { }

	// RVA: 0x1ACA044 Offset: 0x1ACA044 VA: 0x1ACA044
	public bool IsBackEffectStart(string n) { }

	// RVA: 0x1ACA07C Offset: 0x1ACA07C VA: 0x1ACA07C
	public void SetBackEffect(string n, bool isSkip = False, bool isPause = False, CommonEffectManager.FlipKind flip = 0) { }

	// RVA: 0x1ACA0DC Offset: 0x1ACA0DC VA: 0x1ACA0DC
	public void SetBackEffect(string n, Vector3 p, bool isSkip = False, bool isPause = False, CommonEffectManager.FlipKind flip = 0) { }

	// RVA: 0x1ACA164 Offset: 0x1ACA164 VA: 0x1ACA164
	public void ResumeBackEffect(bool isSkip = False) { }

	// RVA: 0x1ACA19C Offset: 0x1ACA19C VA: 0x1ACA19C
	public void ResumeBackEffect(string n, bool isSkip = False) { }

	// RVA: 0x1ACA1E4 Offset: 0x1ACA1E4 VA: 0x1ACA1E4
	public bool StopBackEffect(bool isSkip = False) { }

	// RVA: 0x1ACA21C Offset: 0x1ACA21C VA: 0x1ACA21C
	public bool StopBackEffect(string n, bool isSkip = False) { }

	// RVA: 0x1ACA264 Offset: 0x1ACA264 VA: 0x1ACA264
	public float GetDepthPos() { }

	// RVA: 0x1ACA3D0 Offset: 0x1ACA3D0 VA: 0x1ACA3D0
	public void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x1ACA410 Offset: 0x1ACA410 VA: 0x1ACA410
	public void SetSortingOrder(int order) { }
}

// Namespace: 
public enum ScriptCharaData.Kind // TypeDefIndex: 8432
{
	// Fields
	public int value__; // 0x0
	public const ScriptCharaData.Kind FIGURE = 0;
	public const ScriptCharaData.Kind EQUIP = 1;
	public const ScriptCharaData.Kind IMAGE = 2;
	public const ScriptCharaData.Kind VERTICAL_IMAGE = 3;
	public const ScriptCharaData.Kind HORIZONTAL_IMAGE = 4;
}

// Namespace: 
public enum ScriptCharaData.State // TypeDefIndex: 8433
{
	// Fields
	public int value__; // 0x0
	public const ScriptCharaData.State LOAD = 0;
	public const ScriptCharaData.State IDLE = 1;
	public const ScriptCharaData.State MOVE = 2;
	public const ScriptCharaData.State DESTROY = 3;
}

// Namespace: 
public class ScriptCommandDelayParam // TypeDefIndex: 8434
{
	// Fields
	public int executeIndex; // 0x10
	public int executeIndexMax; // 0x14
	public float delaySecond; // 0x18
	public bool skipDropFlag; // 0x1C
	public bool messageFlag; // 0x1D
	public bool checkTextSpeed; // 0x1E

	// Methods

	// RVA: 0x1ACA450 Offset: 0x1ACA450 VA: 0x1ACA450
	public void .ctor(int index, int indexMax, float second, bool sflag, bool mflag, bool cflag) { }
}

// Namespace: 
[Serializable]
public class ScriptEncryptEntity // TypeDefIndex: 8435
{
	// Fields
	[SerializeField] // RVA: 0xCCB40C Offset: 0xCCB40C VA: 0xCCB40C
	public string scriptName; // 0x10
	[SerializeField] // RVA: 0xCCB41C Offset: 0xCCB41C VA: 0xCCB41C
	public string keyType; // 0x18

	// Methods

	// RVA: 0x1ACF678 Offset: 0x1ACF678 VA: 0x1ACF678
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class ScriptEncryptSettings : ScriptableObject // TypeDefIndex: 8436
{
	// Fields
	[SerializeField] // RVA: 0xCCB42C Offset: 0xCCB42C VA: 0xCCB42C
	private ScriptEncryptEntity[] settings; // 0x18
	private Dictionary<string, ScriptEncryptEntity> lookup; // 0x20

	// Methods

	// RVA: 0x1ACF680 Offset: 0x1ACF680 VA: 0x1ACF680
	public void .ctor() { }

	// RVA: 0x1ACF688 Offset: 0x1ACF688 VA: 0x1ACF688
	public void OnEnable() { }

	// RVA: 0x1ACF798 Offset: 0x1ACF798 VA: 0x1ACF798
	public string GetKey(string scriptName) { }

	// RVA: 0x1ACF854 Offset: 0x1ACF854 VA: 0x1ACF854
	public ScriptEncryptEntity GetEntity(string scriptName) { }
}

// Namespace: 
public class ScriptFlagData // TypeDefIndex: 8437
{
	// Fields
	protected string name; // 0x10
	protected long v; // 0x18

	// Properties
	public string Name { get; }

	// Methods

	// RVA: 0x1AD0DC4 Offset: 0x1AD0DC4 VA: 0x1AD0DC4
	public void .ctor(string name) { }

	// RVA: 0x1AD0DF0 Offset: 0x1AD0DF0 VA: 0x1AD0DF0
	public void .ctor(string name, long v) { }

	// RVA: 0x1AD0E28 Offset: 0x1AD0E28 VA: 0x1AD0E28
	public string get_Name() { }

	// RVA: 0x1AD0E30 Offset: 0x1AD0E30 VA: 0x1AD0E30
	protected long Conv(string vs) { }

	// RVA: 0x1AD0F7C Offset: 0x1AD0F7C VA: 0x1AD0F7C
	public bool Comp(string vs) { }

	// RVA: 0x1AD0FA4 Offset: 0x1AD0FA4 VA: 0x1AD0FA4
	public bool Comp() { }

	// RVA: 0x1AD0FB4 Offset: 0x1AD0FB4 VA: 0x1AD0FB4
	public void Set(string vs) { }

	// RVA: 0x1AD0FD8 Offset: 0x1AD0FD8 VA: 0x1AD0FD8
	public void Set(long v) { }

	// RVA: 0x1AD0FE0 Offset: 0x1AD0FE0 VA: 0x1AD0FE0
	public void SetRahdom(string ss, string es) { }
}

// Namespace: 
public class ScriptLineMessage : MonoBehaviour // TypeDefIndex: 8438
{
	// Fields
	[SerializeField] // RVA: 0xCCB43C Offset: 0xCCB43C VA: 0xCCB43C
	protected GameObject mainPrefab; // 0x18
	[SerializeField] // RVA: 0xCCB44C Offset: 0xCCB44C VA: 0xCCB44C
	protected GameObject rubyPrefab; // 0x20
	[SerializeField] // RVA: 0xCCB45C Offset: 0xCCB45C VA: 0xCCB45C
	protected GameObject imagePrefab; // 0x28
	[SerializeField] // RVA: 0xCCB46C Offset: 0xCCB46C VA: 0xCCB46C
	protected Transform messageRoot; // 0x30
	[SerializeField] // RVA: 0xCCB47C Offset: 0xCCB47C VA: 0xCCB47C
	protected Transform messageOffset; // 0x38
	[SerializeField] // RVA: 0xCCB48C Offset: 0xCCB48C VA: 0xCCB48C
	protected bool isRecycle; // 0x40
	[SerializeField] // RVA: 0xCCB49C Offset: 0xCCB49C VA: 0xCCB49C
	protected bool isCondensedScale; // 0x41
	[SerializeField] // RVA: 0xCCB4AC Offset: 0xCCB4AC VA: 0xCCB4AC
	protected int condensedSize; // 0x44
	[SerializeField] // RVA: 0xCCB4BC Offset: 0xCCB4BC VA: 0xCCB4BC
	protected float fontScale; // 0x48
	[SerializeField] // RVA: 0xCCB4CC Offset: 0xCCB4CC VA: 0xCCB4CC
	protected int depthOffset; // 0x4C
	protected float textOnlyLineHeight; // 0x50
	protected float beforeTextOnlyLineHeight; // 0x54
	protected float defaultTextOnlyLineHeight; // 0x58
	protected float rubyLineHeight; // 0x5C
	[SerializeField] // RVA: 0xCCB4DC Offset: 0xCCB4DC VA: 0xCCB4DC
	protected float defaultBetweenLineHeight; // 0x60
	protected float betweenLineHeight; // 0x64
	[SerializeField] // RVA: 0xCCB4EC Offset: 0xCCB4EC VA: 0xCCB4EC
	protected int defaultFontSize; // 0x68
	[SerializeField] // RVA: 0xCCB4FC Offset: 0xCCB4FC VA: 0xCCB4FC
	protected int rubyFontSize; // 0x6C
	protected int fontSize; // 0x70
	protected Dictionary<string, int> fontSizes; // 0x78
	protected string defaultColorTag; // 0x80
	private Vector2 startPosition; // 0x88
	private Vector2 dispPosition; // 0x90
	private Vector2 maxDispPosition; // 0x98
	protected Stack<UILabel> mainStock; // 0xA0
	protected Stack<UILabel> rubyStock; // 0xA8
	protected Stack<UISprite> imageStock; // 0xB0
	protected Stack<ScriptMessageLabel> labelStock; // 0xB8
	private List<ScriptMessageLabel> dispLabelList; // 0xC0
	protected bool isInit; // 0xC8

	// Properties
	protected float textLineHeight { get; }

	// Methods

	// RVA: 0x1AD103C Offset: 0x1AD103C VA: 0x1AD103C
	public void .ctor() { }

	// RVA: 0x1AD1234 Offset: 0x1AD1234 VA: 0x1AD1234
	protected float get_textLineHeight() { }

	// RVA: 0x1AD1244 Offset: 0x1AD1244 VA: 0x1AD1244
	public void Init() { }

	// RVA: 0x1AD1794 Offset: 0x1AD1794 VA: 0x1AD1794
	public void Quit() { }

	// RVA: 0x1AD1798 Offset: 0x1AD1798 VA: 0x1AD1798
	public void DeleteLabels() { }

	// RVA: 0x1AD1A2C Offset: 0x1AD1A2C VA: 0x1AD1A2C
	public void ClearLabels() { }

	// RVA: 0x1AD1EA0 Offset: 0x1AD1EA0 VA: 0x1AD1EA0
	protected UILabel FetchMainLabel() { }

	// RVA: 0x1AD21E4 Offset: 0x1AD21E4 VA: 0x1AD21E4
	protected UILabel FetchRubyLabel() { }

	// RVA: 0x1AD2548 Offset: 0x1AD2548 VA: 0x1AD2548
	protected UISprite FetchImageSprite() { }

	// RVA: 0x1AD288C Offset: 0x1AD288C VA: 0x1AD288C
	private ScriptMessageLabel FetchLabel() { }

	// RVA: 0x1AD1B70 Offset: 0x1AD1B70 VA: 0x1AD1B70
	private void ReleaseLabel(ScriptMessageLabel label) { }

	// RVA: 0x1AD2938 Offset: 0x1AD2938 VA: 0x1AD2938
	private void AddLabel(string text, string colorTag, bool isFoward, Font font) { }

	// RVA: 0x1AD32B8 Offset: 0x1AD32B8 VA: 0x1AD32B8
	protected void UpdateLabels(string txt, bool isFoward, string enforceColor, Font font, bool removeUserNameColorCode = False) { }

	// RVA: 0x1AD3E8C Offset: 0x1AD3E8C VA: 0x1AD3E8C
	protected void SetDefaultState() { }

	// RVA: 0x1AD3DB8 Offset: 0x1AD3DB8 VA: 0x1AD3DB8
	public void ReturnText() { }

	// RVA: 0x1AD3F24 Offset: 0x1AD3F24 VA: 0x1AD3F24
	public void SetFontSize(string sizeName) { }

	// RVA: 0x1AD3FCC Offset: 0x1AD3FCC VA: 0x1AD3FCC
	public void SetBetweenLineHeight(float height) { }

	// RVA: 0x1AD1688 Offset: 0x1AD1688 VA: 0x1AD1688
	public void ClearText() { }

	// RVA: 0x1AD4014 Offset: 0x1AD4014 VA: 0x1AD4014
	public void SetText(string text, string color, Font font, bool removeUserNameColorCode = False) { }

	// RVA: 0x1AD406C Offset: 0x1AD406C VA: 0x1AD406C
	public void FowardText(string text, string color, Font font) { }

	// RVA: 0x1AD4088 Offset: 0x1AD4088 VA: 0x1AD4088
	public Vector2 GetPrintedSize() { }

	// RVA: 0x1AD4128 Offset: 0x1AD4128 VA: 0x1AD4128
	public void Fadeout(float d) { }

	// RVA: 0x1AD41E8 Offset: 0x1AD41E8 VA: 0x1AD41E8
	public void EffectScale(float s, float d) { }
}

// Namespace: 
private sealed class ScriptLineMessage.ProcAddLabel : MulticastDelegate // TypeDefIndex: 8439
{
	// Methods

	// RVA: 0x14B3C5C Offset: 0x14B3C5C VA: 0x14B3C5C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x14B3C6C Offset: 0x14B3C6C VA: 0x14B3C6C Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x14B3E6C Offset: 0x14B3E6C VA: 0x14B3E6C Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x14B3EA0 Offset: 0x14B3EA0 VA: 0x14B3EA0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private sealed class ScriptLineMessage.ProcAddLabel2 : MulticastDelegate // TypeDefIndex: 8440
{
	// Methods

	// RVA: 0x14B3EAC Offset: 0x14B3EAC VA: 0x14B3EAC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x14B3EBC Offset: 0x14B3EBC VA: 0x14B3EBC Slot: 11
	public virtual void Invoke(string txt) { }

	// RVA: 0x14B425C Offset: 0x14B425C VA: 0x14B425C Slot: 12
	public virtual IAsyncResult BeginInvoke(string txt, AsyncCallback callback, object object) { }

	// RVA: 0x14B4280 Offset: 0x14B4280 VA: 0x14B4280 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF3B0 Offset: 0xCAF3B0 VA: 0xCAF3B0
private sealed class ScriptLineMessage.<UpdateLabels>c__AnonStorey0 // TypeDefIndex: 8441
{
	// Fields
	internal StringBuilder tmpTxt; // 0x10
	internal bool isFoward; // 0x18
	internal Font font; // 0x20
	internal string tmpColorTag; // 0x28
	internal ScriptLineMessage $this; // 0x30

	// Methods

	// RVA: 0x14B3AAC Offset: 0x14B3AAC VA: 0x14B3AAC
	public void .ctor() { }

	// RVA: 0x14B3AB4 Offset: 0x14B3AB4 VA: 0x14B3AB4
	internal void <>m__0() { }

	// RVA: 0x14B3BAC Offset: 0x14B3BAC VA: 0x14B3BAC
	internal void <>m__1(string text) { }
}

// Namespace: 
public class ScriptLogMessage : MonoBehaviour // TypeDefIndex: 8442
{
	// Fields
	private static readonly float ALIGN_LEFT_BASE; // 0x0
	private static readonly float ALIGN_CENTER_BASE; // 0x4
	private static readonly float ALIGN_RIGHT_BASE; // 0x8
	[SerializeField] // RVA: 0xCCB50C Offset: 0xCCB50C VA: 0xCCB50C
	protected ScriptBackLog backLogDialog; // 0x18
	[SerializeField] // RVA: 0xCCB51C Offset: 0xCCB51C VA: 0xCCB51C
	protected GameObject mainPrefab; // 0x20
	[SerializeField] // RVA: 0xCCB52C Offset: 0xCCB52C VA: 0xCCB52C
	protected GameObject rubyPrefab; // 0x28
	[SerializeField] // RVA: 0xCCB53C Offset: 0xCCB53C VA: 0xCCB53C
	protected GameObject imagePrefab; // 0x30
	[SerializeField] // RVA: 0xCCB54C Offset: 0xCCB54C VA: 0xCCB54C
	private GameObject playVoicePrefab; // 0x38
	[SerializeField] // RVA: 0xCCB55C Offset: 0xCCB55C VA: 0xCCB55C
	protected Transform workLabelRoot; // 0x40
	[SerializeField] // RVA: 0xCCB56C Offset: 0xCCB56C VA: 0xCCB56C
	protected bool isRecycle; // 0x48
	[SerializeField] // RVA: 0xCCB57C Offset: 0xCCB57C VA: 0xCCB57C
	protected float fontScale; // 0x4C
	[SerializeField] // RVA: 0xCCB58C Offset: 0xCCB58C VA: 0xCCB58C
	protected int depthOffset; // 0x50
	protected float textOnlyLineHeight; // 0x54
	protected float beforeTextOnlyLineHeight; // 0x58
	protected float defaultTextOnlyLineHeight; // 0x5C
	protected float rubyLineHeight; // 0x60
	[SerializeField] // RVA: 0xCCB59C Offset: 0xCCB59C VA: 0xCCB59C
	protected float defaultBetweenLineHeight; // 0x64
	protected float betweenLineHeight; // 0x68
	protected Font defaultFontType; // 0x70
	[SerializeField] // RVA: 0xCCB5AC Offset: 0xCCB5AC VA: 0xCCB5AC
	protected int defaultFontSize; // 0x78
	[SerializeField] // RVA: 0xCCB5BC Offset: 0xCCB5BC VA: 0xCCB5BC
	protected int rubyFontSize; // 0x7C
	protected Font fontType; // 0x80
	protected int fontSize; // 0x88
	private ScriptMessageLabel.VerticalAlign verticalAlign; // 0x8C
	private int maxFontSize; // 0x90
	private int fowardMaxFontSize; // 0x94
	protected string defaultColorTag; // 0x98
	protected string talkName; // 0xA0
	private Vector2 startPosition; // 0xA8
	private Vector2 dispPosition; // 0xB0
	protected ScriptMessageLabel analyzeLabel; // 0xB8
	private ScriptLogMessage.HorizontalAlign horizontalAlign; // 0xC0
	private bool isReservedAddPlayVoice; // 0xC4
	private string voiceAssetName; // 0xC8
	private string voiceObjectName; // 0xD0
	private float voiceVolume; // 0xD8
	private bool isDelayAddPlayVoice; // 0xDC
	protected bool isInit; // 0xDD

	// Properties
	protected float textLineHeight { get; }

	// Methods

	// RVA: 0x14B428C Offset: 0x14B428C VA: 0x14B428C
	public void .ctor() { }

	// RVA: 0x14B4314 Offset: 0x14B4314 VA: 0x14B4314
	protected float get_textLineHeight() { }

	// RVA: 0x14B4324 Offset: 0x14B4324 VA: 0x14B4324
	public void Init() { }

	// RVA: 0x14B4A70 Offset: 0x14B4A70 VA: 0x14B4A70
	public void Quit() { }

	// RVA: 0x14B4AC0 Offset: 0x14B4AC0 VA: 0x14B4AC0
	public void DeleteLabels() { }

	// RVA: 0x14B4AC4 Offset: 0x14B4AC4 VA: 0x14B4AC4
	public void ClearLabels() { }

	// RVA: 0x14B4AC8 Offset: 0x14B4AC8 VA: 0x14B4AC8
	public void SetMaxFontSize(int fontSize) { }

	// RVA: 0x14B4AE0 Offset: 0x14B4AE0 VA: 0x14B4AE0
	protected UILabel FetchMainLabel() { }

	// RVA: 0x14B4C14 Offset: 0x14B4C14 VA: 0x14B4C14
	protected UILabel FetchRubyLabel() { }

	// RVA: 0x14B4D70 Offset: 0x14B4D70 VA: 0x14B4D70
	protected UISprite FetchImageSprite() { }

	// RVA: 0x14B4EA4 Offset: 0x14B4EA4 VA: 0x14B4EA4
	private void AddLabel(string text, string colorTag, bool isFoward) { }

	// RVA: 0x14B5700 Offset: 0x14B5700 VA: 0x14B5700
	protected void UpdateLabels(string txt, bool isFoward, string enforceColor) { }

	// RVA: 0x14B6798 Offset: 0x14B6798 VA: 0x14B6798
	private void UpdatePlayVoice() { }

	// RVA: 0x14B6944 Offset: 0x14B6944 VA: 0x14B6944
	private void SetBackLogReplayingVoice(string assetName, string objectName, bool isReplaying) { }

	// RVA: 0x14B69D8 Offset: 0x14B69D8 VA: 0x14B69D8
	public void SetHomePosition(int x) { }

	// RVA: 0x14B6A1C Offset: 0x14B6A1C VA: 0x14B6A1C
	protected void SetDefaultState() { }

	// RVA: 0x14B66CC Offset: 0x14B66CC VA: 0x14B66CC
	public void ReturnText() { }

	// RVA: 0x14B6AC8 Offset: 0x14B6AC8 VA: 0x14B6AC8
	public void SetFontType(Font font) { }

	// RVA: 0x14B6B60 Offset: 0x14B6B60 VA: 0x14B6B60
	public void SetFontSize(string sizeName, string verticalAlign) { }

	// RVA: 0x14B6C20 Offset: 0x14B6C20 VA: 0x14B6C20
	public string GetFontSizeString() { }

	// RVA: 0x14B6C8C Offset: 0x14B6C8C VA: 0x14B6C8C
	public void SetBetweenLineHeight(float height) { }

	// RVA: 0x14B4A44 Offset: 0x14B4A44 VA: 0x14B4A44
	public void ClearText() { }

	// RVA: 0x14B6CD4 Offset: 0x14B6CD4 VA: 0x14B6CD4
	public void AddPlayVoice(string assetName, string objectName, float volume) { }

	// RVA: 0x14B6CE8 Offset: 0x14B6CE8 VA: 0x14B6CE8
	private void ReservePlayVoice(string assetName, string objectName, float volume) { }

	// RVA: 0x14B4988 Offset: 0x14B4988 VA: 0x14B4988
	private void ReleasePlayVoice() { }

	// RVA: 0x14B6CFC Offset: 0x14B6CFC VA: 0x14B6CFC
	public void SetText(string text, string color) { }

	// RVA: 0x14B6D4C Offset: 0x14B6D4C VA: 0x14B6D4C
	public void AddText(string text, string color) { }

	// RVA: 0x14B6D5C Offset: 0x14B6D5C VA: 0x14B6D5C
	public void AddText(string text, bool isLineHead, int lineLength) { }

	// RVA: 0x14B6D98 Offset: 0x14B6D98 VA: 0x14B6D98
	private void SetAlignedDispPosition(bool isLineHead, int lineLength) { }

	// RVA: 0x14B6EDC Offset: 0x14B6EDC VA: 0x14B6EDC
	public void SetHorizontalAlign(ScriptLogMessage.HorizontalAlign horizontalAlign) { }

	// RVA: 0x14B6EE4 Offset: 0x14B6EE4 VA: 0x14B6EE4
	public void FowardText(string text, string color) { }

	// RVA: 0x14B6F20 Offset: 0x14B6F20 VA: 0x14B6F20
	public void FooterText(string text, bool isAligned, string color) { }

	// RVA: 0x14B6FB0 Offset: 0x14B6FB0 VA: 0x14B6FB0
	public bool IsChangeTalkName(string text) { }

	// RVA: 0x14B702C Offset: 0x14B702C VA: 0x14B702C
	public void ClearTalkName() { }
