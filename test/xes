{
	// Fields
	private const int MBIG = 2147483647;
	private const int MSEED = 161803398;
	private const int MZ = 0;
	private int inext; // 0x10
	private int inextp; // 0x14
	private int[] SeedArray; // 0x18

	// Methods

	// RVA: 0x21F190C Offset: 0x21F190C VA: 0x21F190C
	public void .ctor() { }

	// RVA: 0x21F1938 Offset: 0x21F1938 VA: 0x21F1938
	public void .ctor(int Seed) { }

	// RVA: 0x21F1BDC Offset: 0x21F1BDC VA: 0x21F1BDC Slot: 4
	protected virtual double Sample() { }

	// RVA: 0x21F1CF0 Offset: 0x21F1CF0 VA: 0x21F1CF0 Slot: 5
	public virtual int Next() { }

	// RVA: 0x21F1D1C Offset: 0x21F1D1C VA: 0x21F1D1C Slot: 6
	public virtual int Next(int maxValue) { }

	// RVA: 0x21F1DE0 Offset: 0x21F1DE0 VA: 0x21F1DE0 Slot: 7
	public virtual int Next(int minValue, int maxValue) { }

	// RVA: 0x21F1EBC Offset: 0x21F1EBC VA: 0x21F1EBC Slot: 8
	public virtual void NextBytes(byte[] buffer) { }

	// RVA: 0x21F1FAC Offset: 0x21F1FAC VA: 0x21F1FAC Slot: 9
	public virtual double NextDouble() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAFB8 Offset: 0xBCAFB8 VA: 0xBCAFB8
[Serializable]
public class RankException : SystemException // TypeDefIndex: 1037
{
	// Methods

	// RVA: 0x21F1FB8 Offset: 0x21F1FB8 VA: 0x21F1FB8
	public void .ctor() { }

	// RVA: 0x21F202C Offset: 0x21F202C VA: 0x21F202C
	public void .ctor(string message) { }

	// RVA: 0x21F2060 Offset: 0x21F2060 VA: 0x21F2060
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAFCC Offset: 0xBCAFCC VA: 0xBCAFCC
public class ResolveEventArgs : EventArgs // TypeDefIndex: 1038
{
	// Fields
	private string m_Name; // 0x10

	// Methods

	// RVA: 0x1F89A1C Offset: 0x1F89A1C VA: 0x1F89A1C
	public void .ctor(string name) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAFE0 Offset: 0xBCAFE0 VA: 0xBCAFE0
[MonoTODOAttribute] // RVA: 0xBCAFE0 Offset: 0xBCAFE0 VA: 0xBCAFE0
[Serializable]
public struct RuntimeMethodHandle : ISerializable // TypeDefIndex: 1039
{
	// Fields
	private IntPtr value; // 0x0

	// Properties
	public IntPtr Value { get; }

	// Methods

	// RVA: 0xD69124 Offset: 0xD69124 VA: 0xD69124
	internal void .ctor(IntPtr v) { }

	// RVA: 0xD6912C Offset: 0xD6912C VA: 0xD6912C
	private void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0xD69134 Offset: 0xD69134 VA: 0xD69134
	public IntPtr get_Value() { }

	// RVA: 0xD6913C Offset: 0xD6913C VA: 0xD6913C Slot: 4
	public void GetObjectData(SerializationInfo info, StreamingContext context) { }

	[ReliabilityContractAttribute] // RVA: 0xBCEDCC Offset: 0xBCEDCC VA: 0xBCEDCC
	// RVA: 0xD69144 Offset: 0xD69144 VA: 0xD69144 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0xD6914C Offset: 0xD6914C VA: 0xD6914C Slot: 2
	public override int GetHashCode() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCB030 Offset: 0xBCB030 VA: 0xBCB030
[Serializable]
public sealed class StackOverflowException : SystemException // TypeDefIndex: 1040
{
	// Methods

	// RVA: 0x1F64DF0 Offset: 0x1F64DF0 VA: 0x1F64DF0
	public void .ctor() { }

	// RVA: 0x1F64E50 Offset: 0x1F64E50 VA: 0x1F64E50
	public void .ctor(string message) { }

	// RVA: 0x1F64E58 Offset: 0x1F64E58 VA: 0x1F64E58
	internal void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCB044 Offset: 0xBCB044 VA: 0xBCB044
[Serializable]
public abstract class StringComparer : IComparer<string>, IEqualityComparer<string>, IComparer, IEqualityComparer // TypeDefIndex: 1041
{
	// Fields
	private static StringComparer invariantCultureIgnoreCase; // 0x0
	private static StringComparer invariantCulture; // 0x8
	private static StringComparer ordinalIgnoreCase; // 0x10
	private static StringComparer ordinal; // 0x18

	// Properties
	public static StringComparer InvariantCultureIgnoreCase { get; }
	public static StringComparer OrdinalIgnoreCase { get; }

	// Methods

	// RVA: 0x27B8FF4 Offset: 0x27B8FF4 VA: 0x27B8FF4
	protected void .ctor() { }

	// RVA: 0x27B8FFC Offset: 0x27B8FFC VA: 0x27B8FFC
	private static void .cctor() { }

	// RVA: 0x27B9130 Offset: 0x27B9130 VA: 0x27B9130
	public static StringComparer get_InvariantCultureIgnoreCase() { }

	// RVA: 0x27B9198 Offset: 0x27B9198 VA: 0x27B9198
	public static StringComparer get_OrdinalIgnoreCase() { }

	// RVA: 0x27B9200 Offset: 0x27B9200 VA: 0x27B9200 Slot: 7
	public int Compare(object x, object y) { }

	// RVA: 0x27B9380 Offset: 0x27B9380 VA: 0x27B9380 Slot: 8
	public bool Equals(object x, object y) { }

	// RVA: 0x27B9450 Offset: 0x27B9450 VA: 0x27B9450 Slot: 9
	public int GetHashCode(object obj) { }

	// RVA: -1 Offset: -1 Slot: 10
	public abstract int Compare(string x, string y);

	// RVA: -1 Offset: -1 Slot: 11
	public abstract bool Equals(string x, string y);

	// RVA: -1 Offset: -1 Slot: 12
	public abstract int GetHashCode(string obj);
}

// Namespace: System
[Serializable]
internal sealed class CultureAwareComparer : StringComparer // TypeDefIndex: 1042
{
	// Fields
	private readonly bool _ignoreCase; // 0x10
	private readonly CompareInfo _compareInfo; // 0x18

	// Methods

	// RVA: 0x2536270 Offset: 0x2536270 VA: 0x2536270
	public void .ctor(CultureInfo ci, bool ignore_case) { }

	// RVA: 0x2536314 Offset: 0x2536314 VA: 0x2536314 Slot: 10
	public override int Compare(string x, string y) { }

	// RVA: 0x2536368 Offset: 0x2536368 VA: 0x2536368 Slot: 11
	public override bool Equals(string x, string y) { }

	// RVA: 0x2536384 Offset: 0x2536384 VA: 0x2536384 Slot: 12
	public override int GetHashCode(string s) { }
}

// Namespace: System
[Serializable]
internal sealed class OrdinalComparer : StringComparer // TypeDefIndex: 1043
{
	// Fields
	private readonly bool _ignoreCase; // 0x10

	// Methods

	// RVA: 0x21F1424 Offset: 0x21F1424 VA: 0x21F1424
	public void .ctor(bool ignoreCase) { }

	// RVA: 0x21F14A4 Offset: 0x21F14A4 VA: 0x21F14A4 Slot: 10
	public override int Compare(string x, string y) { }

	// RVA: 0x21F1574 Offset: 0x21F1574 VA: 0x21F1574 Slot: 11
	public override bool Equals(string x, string y) { }

	// RVA: 0x21F1620 Offset: 0x21F1620 VA: 0x21F1620 Slot: 12
	public override int GetHashCode(string s) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCB058 Offset: 0xBCB058 VA: 0xBCB058
[Serializable]
public enum StringComparison // TypeDefIndex: 1044
{
	// Fields
	public int value__; // 0x0
	public const StringComparison CurrentCulture = 0;
	public const StringComparison CurrentCultureIgnoreCase = 1;
	public const StringComparison InvariantCulture = 2;
	public const StringComparison InvariantCultureIgnoreCase = 3;
	public const StringComparison Ordinal = 4;
	public const StringComparison OrdinalIgnoreCase = 5;
}

// Namespace: System
[FlagsAttribute] // RVA: 0xBCB06C Offset: 0xBCB06C VA: 0xBCB06C
[ComVisibleAttribute] // RVA: 0xBCB06C Offset: 0xBCB06C VA: 0xBCB06C
public enum StringSplitOptions // TypeDefIndex: 1045
{
	// Fields
	public int value__; // 0x0
	public const StringSplitOptions None = 0;
	public const StringSplitOptions RemoveEmptyEntries = 1;
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCB0A8 Offset: 0xBCB0A8 VA: 0xBCB0A8
[Serializable]
public class SystemException : Exception // TypeDefIndex: 1046
{
	// Methods

	// RVA: 0x27B9524 Offset: 0x27B9524 VA: 0x27B9524
	public void .ctor() { }

	// RVA: 0x27B9598 Offset: 0x27B9598 VA: 0x27B9598
	public void .ctor(string message) { }

	// RVA: 0x27B95CC Offset: 0x27B95CC VA: 0x27B95CC
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x27B95D4 Offset: 0x27B95D4 VA: 0x27B95D4
	public void .ctor(string message, Exception innerException) { }
}

// Namespace: System
[AttributeUsageAttribute] // RVA: 0xBCB0BC Offset: 0xBCB0BC VA: 0xBCB0BC
[ComVisibleAttribute] // RVA: 0xBCB0BC Offset: 0xBCB0BC VA: 0xBCB0BC
[Serializable]
public class ThreadStaticAttribute : Attribute // TypeDefIndex: 1047
{
	// Methods

	// RVA: 0x27CC128 Offset: 0x27CC128 VA: 0x27CC128
	public void .ctor() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCB110 Offset: 0xBCB110 VA: 0xBCB110
[Serializable]
public struct TimeSpan : IComparable, IComparable<TimeSpan>, IEquatable<TimeSpan> // TypeDefIndex: 1048
{
	// Fields
	public const long TicksPerDay = 864000000000;
	public const long TicksPerHour = 36000000000;
	public const long TicksPerMillisecond = 10000;
	public const long TicksPerMinute = 600000000;
	public const long TicksPerSecond = 10000000;
	public static readonly TimeSpan MaxValue; // 0x0
	public static readonly TimeSpan MinValue; // 0x8
	public static readonly TimeSpan Zero; // 0x10
	private long _ticks; // 0x0

	// Properties
	public int Days { get; }
	public int Hours { get; }
	public int Milliseconds { get; }
	public int Minutes { get; }
	public int Seconds { get; }
	public long Ticks { get; }
	public double TotalDays { get; }
	public double TotalHours { get; }
	public double TotalMilliseconds { get; }
	public double TotalMinutes { get; }
	public double TotalSeconds { get; }

	// Methods

	// RVA: 0xD73670 Offset: 0xD73670 VA: 0xD73670
	public void .ctor(long ticks) { }

	// RVA: 0xD73678 Offset: 0xD73678 VA: 0xD73678
	public void .ctor(int hours, int minutes, int seconds) { }

	// RVA: 0xD73680 Offset: 0xD73680 VA: 0xD73680
	public void .ctor(int days, int hours, int minutes, int seconds) { }

	// RVA: 0xD73688 Offset: 0xD73688 VA: 0xD73688
	public void .ctor(int days, int hours, int minutes, int seconds, int milliseconds) { }

	// RVA: 0x2AECFDC Offset: 0x2AECFDC VA: 0x2AECFDC
	private static void .cctor() { }

	// RVA: 0x2AECD5C Offset: 0x2AECD5C VA: 0x2AECD5C
	internal static long CalculateTicks(int days, int hours, int minutes, int seconds, int milliseconds) { }

	// RVA: 0xD73690 Offset: 0xD73690 VA: 0xD73690
	public int get_Days() { }

	// RVA: 0xD736BC Offset: 0xD736BC VA: 0xD736BC
	public int get_Hours() { }

	// RVA: 0xD73714 Offset: 0xD73714 VA: 0xD73714
	public int get_Milliseconds() { }

	// RVA: 0xD73768 Offset: 0xD73768 VA: 0xD73768
	public int get_Minutes() { }

	// RVA: 0xD737BC Offset: 0xD737BC VA: 0xD737BC
	public int get_Seconds() { }

	// RVA: 0xD73810 Offset: 0xD73810 VA: 0xD73810
	public long get_Ticks() { }

	// RVA: 0xD73818 Offset: 0xD73818 VA: 0xD73818
	public double get_TotalDays() { }

	// RVA: 0xD73830 Offset: 0xD73830 VA: 0xD73830
	public double get_TotalHours() { }

	// RVA: 0xD73848 Offset: 0xD73848 VA: 0xD73848
	public double get_TotalMilliseconds() { }

	// RVA: 0xD73860 Offset: 0xD73860 VA: 0xD73860
	public double get_TotalMinutes() { }

	// RVA: 0xD73878 Offset: 0xD73878 VA: 0xD73878
	public double get_TotalSeconds() { }

	// RVA: 0xD73890 Offset: 0xD73890 VA: 0xD73890
	public TimeSpan Add(TimeSpan ts) { }

	// RVA: 0x2AED404 Offset: 0x2AED404 VA: 0x2AED404
	public static int Compare(TimeSpan t1, TimeSpan t2) { }

	// RVA: 0xD73898 Offset: 0xD73898 VA: 0xD73898 Slot: 4
	public int CompareTo(object value) { }

	// RVA: 0xD738A0 Offset: 0xD738A0 VA: 0xD738A0 Slot: 5
	public int CompareTo(TimeSpan value) { }

	// RVA: 0xD738A8 Offset: 0xD738A8 VA: 0xD738A8 Slot: 6
	public bool Equals(TimeSpan obj) { }

	// RVA: 0xD738B8 Offset: 0xD738B8 VA: 0xD738B8
	public TimeSpan Duration() { }

	// RVA: 0xD73904 Offset: 0xD73904 VA: 0xD73904 Slot: 0
	public override bool Equals(object value) { }

	// RVA: 0x2AED690 Offset: 0x2AED690 VA: 0x2AED690
	public static TimeSpan FromDays(double value) { }

	// RVA: 0x2AEDA34 Offset: 0x2AEDA34 VA: 0x2AEDA34
	public static TimeSpan FromHours(double value) { }

	// RVA: 0x2AEDAAC Offset: 0x2AEDAAC VA: 0x2AEDAAC
	public static TimeSpan FromMinutes(double value) { }

	// RVA: 0x2AEDB20 Offset: 0x2AEDB20 VA: 0x2AEDB20
	public static TimeSpan FromSeconds(double value) { }

	// RVA: 0x2AEDB94 Offset: 0x2AEDB94 VA: 0x2AEDB94
	public static TimeSpan FromMilliseconds(double value) { }

	// RVA: 0x2AED708 Offset: 0x2AED708 VA: 0x2AED708
	private static TimeSpan From(double value, long tickMultiplicator) { }

	// RVA: 0x2AEDC04 Offset: 0x2AEDC04 VA: 0x2AEDC04
	public static TimeSpan FromTicks(long value) { }

	// RVA: 0xD7390C Offset: 0xD7390C VA: 0xD7390C Slot: 2
	public override int GetHashCode() { }

	// RVA: 0xD73918 Offset: 0xD73918 VA: 0xD73918
	public TimeSpan Negate() { }

	// RVA: 0x2AEDCF0 Offset: 0x2AEDCF0 VA: 0x2AEDCF0
	public static TimeSpan Parse(string s) { }

	// RVA: 0xD73920 Offset: 0xD73920 VA: 0xD73920
	public TimeSpan Subtract(TimeSpan ts) { }

	// RVA: 0xD73928 Offset: 0xD73928 VA: 0xD73928 Slot: 3
	public override string ToString() { }

	// RVA: 0x2AEE4F8 Offset: 0x2AEE4F8 VA: 0x2AEE4F8
	public static TimeSpan op_Addition(TimeSpan t1, TimeSpan t2) { }

	// RVA: 0x2AEE51C Offset: 0x2AEE51C VA: 0x2AEE51C
	public static bool op_Equality(TimeSpan t1, TimeSpan t2) { }

	// RVA: 0x2AEE528 Offset: 0x2AEE528 VA: 0x2AEE528
	public static bool op_GreaterThan(TimeSpan t1, TimeSpan t2) { }

	// RVA: 0x2AEE534 Offset: 0x2AEE534 VA: 0x2AEE534
	public static bool op_GreaterThanOrEqual(TimeSpan t1, TimeSpan t2) { }

	// RVA: 0x2AEE540 Offset: 0x2AEE540 VA: 0x2AEE540
	public static bool op_Inequality(TimeSpan t1, TimeSpan t2) { }

	// RVA: 0x2AEE54C Offset: 0x2AEE54C VA: 0x2AEE54C
	public static bool op_LessThan(TimeSpan t1, TimeSpan t2) { }

	// RVA: 0x2AEE558 Offset: 0x2AEE558 VA: 0x2AEE558
	public static bool op_LessThanOrEqual(TimeSpan t1, TimeSpan t2) { }

	// RVA: 0x2AEE564 Offset: 0x2AEE564 VA: 0x2AEE564
	public static TimeSpan op_Subtraction(TimeSpan t1, TimeSpan t2) { }
}

// Namespace: 
private class TimeSpan.Parser // TypeDefIndex: 1049
{
	// Fields
	private string _src; // 0x10
	private int _cur; // 0x18
	private int _length; // 0x1C
	private bool formatError; // 0x20

	// Properties
	public bool AtEnd { get; }

	// Methods

	// RVA: 0x2AEDDA4 Offset: 0x2AEDDA4 VA: 0x2AEDDA4
	public void .ctor(string src) { }

	// RVA: 0x2AEE588 Offset: 0x2AEE588 VA: 0x2AEE588
	public bool get_AtEnd() { }

	// RVA: 0x2AEE598 Offset: 0x2AEE598 VA: 0x2AEE598
	private void ParseWhiteSpace() { }

	// RVA: 0x2AEE638 Offset: 0x2AEE638 VA: 0x2AEE638
	private bool ParseSign() { }

	// RVA: 0x2AEE6AC Offset: 0x2AEE6AC VA: 0x2AEE6AC
	private int ParseInt(bool optional) { }

	// RVA: 0x2AEE828 Offset: 0x2AEE828 VA: 0x2AEE828
	private bool ParseOptDot() { }

	// RVA: 0x2AEE89C Offset: 0x2AEE89C VA: 0x2AEE89C
	private void ParseOptColon() { }

	// RVA: 0x2AEE910 Offset: 0x2AEE910 VA: 0x2AEE910
	private long ParseTicks() { }

	// RVA: 0x2AEDDEC Offset: 0x2AEDDEC VA: 0x2AEDDEC
	public TimeSpan Execute() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCB124 Offset: 0xBCB124 VA: 0xBCB124
[Serializable]
public abstract class TimeZone // TypeDefIndex: 1050
{
	// Fields
	private static TimeZone currentTimeZone; // 0x0
	private static object tz_lock; // 0x8
	private static long timezone_check; // 0x10

	// Properties
	public static TimeZone CurrentTimeZone { get; }

	// Methods

	// RVA: 0x2AEEA30 Offset: 0x2AEEA30 VA: 0x2AEEA30
	protected void .ctor() { }

	// RVA: 0x2AEEA38 Offset: 0x2AEEA38 VA: 0x2AEEA38
	private static void .cctor() { }

	// RVA: 0x2AEEAA4 Offset: 0x2AEEAA4 VA: 0x2AEEAA4
	public static TimeZone get_CurrentTimeZone() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract DaylightTime GetDaylightChanges(int year);

	// RVA: -1 Offset: -1 Slot: 5
	public abstract TimeSpan GetUtcOffset(DateTime time);

	// RVA: 0x2AEEC7C Offset: 0x2AEEC7C VA: 0x2AEEC7C Slot: 6
	public virtual bool IsDaylightSavingTime(DateTime time) { }

	// RVA: 0x2AEED34 Offset: 0x2AEED34 VA: 0x2AEED34
	public static bool IsDaylightSavingTime(DateTime time, DaylightTime daylightTimes) { }

	// RVA: 0x2AEEFC0 Offset: 0x2AEEFC0 VA: 0x2AEEFC0 Slot: 7
	public virtual DateTime ToLocalTime(DateTime time) { }

	// RVA: 0x2AEF344 Offset: 0x2AEF344 VA: 0x2AEF344 Slot: 8
	public virtual DateTime ToUniversalTime(DateTime time) { }

	// RVA: 0x2AEF50C Offset: 0x2AEF50C VA: 0x2AEF50C
	internal TimeSpan GetLocalTimeDiff(DateTime time) { }

	// RVA: 0x2AEF554 Offset: 0x2AEF554 VA: 0x2AEF554
	internal TimeSpan GetLocalTimeDiff(DateTime time, TimeSpan utc_offset) { }
}

// Namespace: System
[Serializable]
internal class CurrentSystemTimeZone : TimeZone, IDeserializationCallback // TypeDefIndex: 1051
{
	// Fields
	private string m_standardName; // 0x10
	private string m_daylightName; // 0x18
	private Hashtable m_CachedDaylightChanges; // 0x20
	private long m_ticksOffset; // 0x28
	private TimeSpan utcOffsetWithOutDLS; // 0x30
	private TimeSpan utcOffsetWithDLS; // 0x38
	private static int this_year; // 0x0
	private static DaylightTime this_year_dlt; // 0x8

	// Methods

	// RVA: 0x253645C Offset: 0x253645C VA: 0x253645C
	internal void .ctor() { }

	// RVA: 0x25364E8 Offset: 0x25364E8 VA: 0x25364E8
	internal void .ctor(long lnow) { }

	// RVA: 0x2536D3C Offset: 0x2536D3C VA: 0x2536D3C Slot: 9
	private void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) { }

	// RVA: 0x25369FC Offset: 0x25369FC VA: 0x25369FC
	private static bool GetTimeZoneData(int year, out long[] data, out string[] names) { }

	// RVA: 0x2536D44 Offset: 0x2536D44 VA: 0x2536D44 Slot: 4
	public override DaylightTime GetDaylightChanges(int year) { }

	// RVA: 0x25370E8 Offset: 0x25370E8 VA: 0x25370E8 Slot: 5
	public override TimeSpan GetUtcOffset(DateTime time) { }

	// RVA: 0x2536B04 Offset: 0x2536B04 VA: 0x2536B04
	private void OnDeserialization(DaylightTime dlt) { }

	// RVA: 0x2536A00 Offset: 0x2536A00 VA: 0x2536A00
	private DaylightTime GetDaylightTimeFromData(long[] data) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCB138 Offset: 0xBCB138 VA: 0xBCB138
[Serializable]
public class TimeoutException : SystemException // TypeDefIndex: 1052
{
	// Methods

	// RVA: 0x2AEF85C Offset: 0x2AEF85C VA: 0x2AEF85C
	public void .ctor() { }

	// RVA: 0x2AEF8D0 Offset: 0x2AEF8D0 VA: 0x2AEF8D0
	public void .ctor(string message) { }

	// RVA: 0x2AEF904 Offset: 0x2AEF904 VA: 0x2AEF904
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCB14C Offset: 0xBCB14C VA: 0xBCB14C
[Serializable]
public enum TypeCode // TypeDefIndex: 1053
{
	// Fields
	public int value__; // 0x0
	public const TypeCode Empty = 0;
	public const TypeCode Object = 1;
	public const TypeCode DBNull = 2;
	public const TypeCode Boolean = 3;
	public const TypeCode Char = 4;
	public const TypeCode SByte = 5;
	public const TypeCode Byte = 6;
	public const TypeCode Int16 = 7;
	public const TypeCode UInt16 = 8;
	public const TypeCode Int32 = 9;
	public const TypeCode UInt32 = 10;
	public const TypeCode Int64 = 11;
	public const TypeCode UInt64 = 12;
	public const TypeCode Single = 13;
	public const TypeCode Double = 14;
	public const TypeCode Decimal = 15;
	public const TypeCode DateTime = 16;
	public const TypeCode String = 18;
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCB160 Offset: 0xBCB160 VA: 0xBCB160
[Serializable]
public sealed class TypeInitializationException : SystemException // TypeDefIndex: 1054
{
	// Fields
	private string type_name; // 0x60

	// Methods

	// RVA: 0x2AF2090 Offset: 0x2AF2090 VA: 0x2AF2090
	internal void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x2AF212C Offset: 0x2AF212C VA: 0x2AF212C Slot: 10
	public override void GetObjectData(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCB174 Offset: 0xBCB174 VA: 0xBCB174
[Serializable]
public class TypeLoadException : SystemException // TypeDefIndex: 1055
{
	// Fields
	private const int Result = -2146233054;
	private string className; // 0x60
	private string assemblyName; // 0x68

	// Properties
	public override string Message { get; }

	// Methods

	// RVA: 0x2AF1CC8 Offset: 0x2AF1CC8 VA: 0x2AF1CC8
	public void .ctor() { }

	// RVA: 0x2AF08F8 Offset: 0x2AF08F8 VA: 0x2AF08F8
	public void .ctor(string message) { }

	// RVA: 0x2AF21C8 Offset: 0x2AF21C8 VA: 0x2AF21C8
	internal void .ctor(string className, string assemblyName) { }

	// RVA: 0x2AF21FC Offset: 0x2AF21FC VA: 0x2AF21FC
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x2AF22F0 Offset: 0x2AF22F0 VA: 0x2AF22F0 Slot: 6
	public override string get_Message() { }

	// RVA: 0x2AF2418 Offset: 0x2AF2418 VA: 0x2AF2418 Slot: 10
	public override void GetObjectData(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCB188 Offset: 0xBCB188 VA: 0xBCB188
[Serializable]
public class UnauthorizedAccessException : SystemException // TypeDefIndex: 1056
{
	// Methods

	// RVA: 0x2AF63C8 Offset: 0x2AF63C8 VA: 0x2AF63C8
	public void .ctor() { }

	// RVA: 0x2AF643C Offset: 0x2AF643C VA: 0x2AF643C
	public void .ctor(string message) { }

	// RVA: 0x2AF6470 Offset: 0x2AF6470 VA: 0x2AF6470
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCB19C Offset: 0xBCB19C VA: 0xBCB19C
[Serializable]
public class UnhandledExceptionEventArgs : EventArgs // TypeDefIndex: 1057
{
	// Fields
	private object exception; // 0x10
	private bool m_isTerminating; // 0x18

	// Properties
	public object ExceptionObject { get; }
	public bool IsTerminating { get; }

	// Methods

	// RVA: 0x2AF6478 Offset: 0x2AF6478 VA: 0x2AF6478
	public void .ctor(object exception, bool isTerminating) { }

	[ReliabilityContractAttribute] // RVA: 0xBCEDE4 Offset: 0xBCEDE4 VA: 0xBCEDE4
	// RVA: 0x2AF6500 Offset: 0x2AF6500 VA: 0x2AF6500
	public object get_ExceptionObject() { }

	[ReliabilityContractAttribute] // RVA: 0xBCEDFC Offset: 0xBCEDFC VA: 0xBCEDFC
	// RVA: 0x2AF6508 Offset: 0x2AF6508 VA: 0x2AF6508
	public bool get_IsTerminating() { }
}

// Namespace: System
[Serializable]
internal class UnitySerializationHolder : ISerializable, IObjectReference // TypeDefIndex: 1058
{
	// Fields
	private string _data; // 0x10
	private UnitySerializationHolder.UnityType _unityType; // 0x18
	private string _assemblyName; // 0x20

	// Methods

	// RVA: 0x2AF691C Offset: 0x2AF691C VA: 0x2AF691C
	private void .ctor(SerializationInfo info, StreamingContext ctx) { }

	// RVA: 0x2AF6A08 Offset: 0x2AF6A08 VA: 0x2AF6A08
	public static void GetTypeData(Type instance, SerializationInfo info, StreamingContext ctx) { }

	// RVA: 0x2AF6B90 Offset: 0x2AF6B90 VA: 0x2AF6B90
	public static void GetDBNullData(DBNull instance, SerializationInfo info, StreamingContext ctx) { }

	// RVA: 0x2AF6D18 Offset: 0x2AF6D18 VA: 0x2AF6D18
	public static void GetModuleData(Module instance, SerializationInfo info, StreamingContext ctx) { }

	// RVA: 0x2AF6E9C Offset: 0x2AF6E9C VA: 0x2AF6E9C Slot: 6
	public virtual void GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x2AF6F04 Offset: 0x2AF6F04 VA: 0x2AF6F04 Slot: 7
	public virtual object GetRealObject(StreamingContext context) { }
}

// Namespace: 
private enum UnitySerializationHolder.UnityType // TypeDefIndex: 1059
{
	// Fields
	public byte value__; // 0x0
	public const UnitySerializationHolder.UnityType DBNull = 2;
	public const UnitySerializationHolder.UnityType Type = 4;
	public const UnitySerializationHolder.UnityType Module = 5;
	public const UnitySerializationHolder.UnityType Assembly = 6;
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCB1B0 Offset: 0xBCB1B0 VA: 0xBCB1B0
[Serializable]
public sealed class Version : IComparable, ICloneable, IComparable<Version>, IEquatable<Version> // TypeDefIndex: 1060
{
	// Fields
	private const int UNDEFINED = -1;
	private int _Major; // 0x10
	private int _Minor; // 0x14
	private int _Build; // 0x18
	private int _Revision; // 0x1C

	// Properties
	public int Build { get; }
	public int Major { get; }
	public int Minor { get; }
	public int Revision { get; }

	// Methods

	// RVA: 0x2AF72C0 Offset: 0x2AF72C0 VA: 0x2AF72C0
	public void .ctor() { }

	// RVA: 0x2AF745C Offset: 0x2AF745C VA: 0x2AF745C
	public void .ctor(string version) { }

	// RVA: 0x2AF7684 Offset: 0x2AF7684 VA: 0x2AF7684
	public void .ctor(int major, int minor) { }

	// RVA: 0x2AF76D0 Offset: 0x2AF76D0 VA: 0x2AF76D0
	public void .ctor(int major, int minor, int build) { }

	// RVA: 0x2AF7720 Offset: 0x2AF7720 VA: 0x2AF7720
	public void .ctor(int major, int minor, int build, int revision) { }

	// RVA: 0x2AF7314 Offset: 0x2AF7314 VA: 0x2AF7314
	private void CheckedSet(int defined, int major, int minor, int build, int revision) { }

	// RVA: 0x2AF777C Offset: 0x2AF777C VA: 0x2AF777C
	public int get_Build() { }

	// RVA: 0x2AF7784 Offset: 0x2AF7784 VA: 0x2AF7784
	public int get_Major() { }

	// RVA: 0x2AF778C Offset: 0x2AF778C VA: 0x2AF778C
	public int get_Minor() { }

	// RVA: 0x2AF7794 Offset: 0x2AF7794 VA: 0x2AF7794
	public int get_Revision() { }

	// RVA: 0x2AF779C Offset: 0x2AF779C VA: 0x2AF779C Slot: 5
	public object Clone() { }

	// RVA: 0x2AF7898 Offset: 0x2AF7898 VA: 0x2AF7898 Slot: 4
	public int CompareTo(object version) { }

	// RVA: 0x2AF7A1C Offset: 0x2AF7A1C VA: 0x2AF7A1C Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0x2AF796C Offset: 0x2AF796C VA: 0x2AF796C Slot: 6
	public int CompareTo(Version value) { }

	// RVA: 0x2AF7A90 Offset: 0x2AF7A90 VA: 0x2AF7A90 Slot: 7
	public bool Equals(Version obj) { }

	// RVA: 0x2AF7B40 Offset: 0x2AF7B40 VA: 0x2AF7B40 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x2AF7B5C Offset: 0x2AF7B5C VA: 0x2AF7B5C Slot: 3
	public override string ToString() { }

	// RVA: 0x2AF7CC4 Offset: 0x2AF7CC4 VA: 0x2AF7CC4
	internal static Version CreateFromString(string info) { }

	// RVA: 0x2AF7B18 Offset: 0x2AF7B18 VA: 0x2AF7B18
	public static bool op_Equality(Version v1, Version v2) { }

	// RVA: 0x2AF7B20 Offset: 0x2AF7B20 VA: 0x2AF7B20
	public static bool op_Inequality(Version v1, Version v2) { }

	// RVA: 0x2AF7F30 Offset: 0x2AF7F30 VA: 0x2AF7F30
	public static bool op_GreaterThan(Version v1, Version v2) { }

	// RVA: 0x2AF7F6C Offset: 0x2AF7F6C VA: 0x2AF7F6C
	public static bool op_GreaterThanOrEqual(Version v1, Version v2) { }

	// RVA: 0x2AF7FA8 Offset: 0x2AF7FA8 VA: 0x2AF7FA8
	public static bool op_LessThan(Version v1, Version v2) { }

	// RVA: 0x2AF7FE0 Offset: 0x2AF7FE0 VA: 0x2AF7FE0
	public static bool op_LessThanOrEqual(Version v1, Version v2) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCB1C4 Offset: 0xBCB1C4 VA: 0xBCB1C4
[Serializable]
public class WeakReference : ISerializable // TypeDefIndex: 1061
{
	// Fields
	private bool isLongReference; // 0x10
	private GCHandle gcHandle; // 0x14

	// Properties
	public virtual bool IsAlive { get; }
	public virtual object Target { get; }
	public virtual bool TrackResurrection { get; }

	// Methods

	// RVA: 0x2AF801C Offset: 0x2AF801C VA: 0x2AF801C
	protected void .ctor() { }

	// RVA: 0x2AF8024 Offset: 0x2AF8024 VA: 0x2AF8024
	public void .ctor(object target) { }

	// RVA: 0x2AF8064 Offset: 0x2AF8064 VA: 0x2AF8064
	public void .ctor(object target, bool trackResurrection) { }

	// RVA: 0x2AF80E4 Offset: 0x2AF80E4 VA: 0x2AF80E4
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x2AF80B0 Offset: 0x2AF80B0 VA: 0x2AF80B0
	private void AllocateHandle(object target) { }

	// RVA: 0x2AF8204 Offset: 0x2AF8204 VA: 0x2AF8204 Slot: 5
	public virtual bool get_IsAlive() { }

	// RVA: 0x2AF8228 Offset: 0x2AF8228 VA: 0x2AF8228 Slot: 6
	public virtual object get_Target() { }

	// RVA: 0x2AF8234 Offset: 0x2AF8234 VA: 0x2AF8234 Slot: 7
	public virtual bool get_TrackResurrection() { }

	// RVA: 0x2AF823C Offset: 0x2AF823C VA: 0x2AF823C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x2AF82B8 Offset: 0x2AF82B8 VA: 0x2AF82B8 Slot: 8
	public virtual void GetObjectData(SerializationInfo info, StreamingContext context) { }
}

// Namespace: Mono.Math.Prime
internal sealed class PrimalityTest : MulticastDelegate // TypeDefIndex: 1062
{
	// Methods

	// RVA: 0x27039F0 Offset: 0x27039F0 VA: 0x27039F0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2703DDC Offset: 0x2703DDC VA: 0x2703DDC Slot: 11
	public virtual bool Invoke(BigInteger bi, ConfidenceFactor confidence) { }

	// RVA: 0x27041A8 Offset: 0x27041A8 VA: 0x27041A8 Slot: 12
	public virtual IAsyncResult BeginInvoke(BigInteger bi, ConfidenceFactor confidence, AsyncCallback callback, object object) { }

	// RVA: 0x2704244 Offset: 0x2704244 VA: 0x2704244 Slot: 13
	public virtual bool EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Reflection
[ComVisibleAttribute] // RVA: 0xBCB1D8 Offset: 0xBCB1D8 VA: 0xBCB1D8
[Serializable]
public sealed class MemberFilter : MulticastDelegate // TypeDefIndex: 1063
{
	// Methods

	// RVA: 0x22E78CC Offset: 0x22E78CC VA: 0x22E78CC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x22E78DC Offset: 0x22E78DC VA: 0x22E78DC Slot: 11
	public virtual bool Invoke(MemberInfo m, object filterCriteria) { }

	// RVA: 0x22E7CA0 Offset: 0x22E7CA0 VA: 0x22E7CA0 Slot: 12
	public virtual IAsyncResult BeginInvoke(MemberInfo m, object filterCriteria, AsyncCallback callback, object object) { }

	// RVA: 0x22E7CD0 Offset: 0x22E7CD0 VA: 0x22E7CD0 Slot: 13
	public virtual bool EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Reflection
[ComVisibleAttribute] // RVA: 0xBCB1EC Offset: 0xBCB1EC VA: 0xBCB1EC
[Serializable]
public sealed class ModuleResolveEventHandler : MulticastDelegate // TypeDefIndex: 1064
{
	// Methods

	// RVA: 0x22E94B0 Offset: 0x22E94B0 VA: 0x22E94B0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x22E94C0 Offset: 0x22E94C0 VA: 0x22E94C0 Slot: 11
	public virtual Module Invoke(object sender, ResolveEventArgs e) { }

	// RVA: 0x22E9884 Offset: 0x22E9884 VA: 0x22E9884 Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, ResolveEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0x22E98B4 Offset: 0x22E98B4 VA: 0x22E98B4 Slot: 13
	public virtual Module EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Reflection
[ComVisibleAttribute] // RVA: 0xBCB200 Offset: 0xBCB200 VA: 0xBCB200
[Serializable]
public sealed class TypeFilter : MulticastDelegate // TypeDefIndex: 1065
{
	// Methods

	// RVA: 0x1F895DC Offset: 0x1F895DC VA: 0x1F895DC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1F895EC Offset: 0x1F895EC VA: 0x1F895EC Slot: 11
	public virtual bool Invoke(Type m, object filterCriteria) { }

	// RVA: 0x1F899B0 Offset: 0x1F899B0 VA: 0x1F899B0 Slot: 12
	public virtual IAsyncResult BeginInvoke(Type m, object filterCriteria, AsyncCallback callback, object object) { }

	// RVA: 0x1F899E0 Offset: 0x1F899E0 VA: 0x1F899E0 Slot: 13
	public virtual bool EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Runtime.Remoting.Contexts
[ComVisibleAttribute] // RVA: 0xBCB214 Offset: 0xBCB214 VA: 0xBCB214
public sealed class CrossContextDelegate : MulticastDelegate // TypeDefIndex: 1066
{
	// Methods

	// RVA: 0x1FA19AC Offset: 0x1FA19AC VA: 0x1FA19AC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1FA19BC Offset: 0x1FA19BC VA: 0x1FA19BC Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1FA1BBC Offset: 0x1FA1BBC VA: 0x1FA1BBC Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1FA1BF0 Offset: 0x1FA1BF0 VA: 0x1FA1BF0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Runtime.Remoting.Messaging
[ComVisibleAttribute] // RVA: 0xBCB228 Offset: 0xBCB228 VA: 0xBCB228
public sealed class HeaderHandler : MulticastDelegate // TypeDefIndex: 1067
{
	// Methods

	// RVA: 0x1EBB90C Offset: 0x1EBB90C VA: 0x1EBB90C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1EBB91C Offset: 0x1EBB91C VA: 0x1EBB91C Slot: 11
	public virtual object Invoke(Header[] headers) { }

	// RVA: 0x1EBBCC0 Offset: 0x1EBBCC0 VA: 0x1EBBCC0 Slot: 12
	public virtual IAsyncResult BeginInvoke(Header[] headers, AsyncCallback callback, object object) { }

	// RVA: 0x1EBBCE4 Offset: 0x1EBBCE4 VA: 0x1EBBCE4 Slot: 13
	public virtual object EndInvoke(IAsyncResult result) { }
}

