
	// RVA: 0x1AC3F90 Offset: 0x1AC3F90 VA: 0x1AC3F90 Slot: 28
	public override void Reset() { }

	// RVA: 0x1AC3FC4 Offset: 0x1AC3FC4 VA: 0x1AC3FC4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1AC40E4 Offset: 0x1AC40E4 VA: 0x1AC40E4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1AC4000 Offset: 0x1AC4000 VA: 0x1AC4000
	private void DoCosine() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3CF50 Offset: 0xC3CF50 VA: 0xC3CF50
[TooltipAttribute] // RVA: 0xC3CF50 Offset: 0xC3CF50 VA: 0xC3CF50
public class GetSine : FsmStateAction // TypeDefIndex: 12998
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCBAAD0 Offset: 0xCBAAD0 VA: 0xCBAAD0
	[TooltipAttribute] // RVA: 0xCBAAD0 Offset: 0xCBAAD0 VA: 0xCBAAD0
	public FsmFloat angle; // 0x50
	[TooltipAttribute] // RVA: 0xCBAB1C Offset: 0xCBAB1C VA: 0xCBAB1C
	public FsmBool DegToRad; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCBAB54 Offset: 0xCBAB54 VA: 0xCBAB54
	[UIHintAttribute] // RVA: 0xCBAB54 Offset: 0xCBAB54 VA: 0xCBAB54
	[TooltipAttribute] // RVA: 0xCBAB54 Offset: 0xCBAB54 VA: 0xCBAB54
	public FsmFloat result; // 0x60
	[TooltipAttribute] // RVA: 0xCBABB4 Offset: 0xCBABB4 VA: 0xCBABB4
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x1B76D4C Offset: 0x1B76D4C VA: 0x1B76D4C
	public void .ctor() { }

	// RVA: 0x1B76D54 Offset: 0x1B76D54 VA: 0x1B76D54 Slot: 28
	public override void Reset() { }

	// RVA: 0x1B76D88 Offset: 0x1B76D88 VA: 0x1B76D88 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B76EA8 Offset: 0x1B76EA8 VA: 0x1B76EA8 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1B76DC4 Offset: 0x1B76DC4 VA: 0x1B76DC4
	private void DoSine() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3CFA0 Offset: 0xC3CFA0 VA: 0xC3CFA0
[TooltipAttribute] // RVA: 0xC3CFA0 Offset: 0xC3CFA0 VA: 0xC3CFA0
public class GetTan : FsmStateAction // TypeDefIndex: 12999
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCBABEC Offset: 0xCBABEC VA: 0xCBABEC
	[TooltipAttribute] // RVA: 0xCBABEC Offset: 0xCBABEC VA: 0xCBABEC
	public FsmFloat angle; // 0x50
	[TooltipAttribute] // RVA: 0xCBAC38 Offset: 0xCBAC38 VA: 0xCBAC38
	public FsmBool DegToRad; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCBAC70 Offset: 0xCBAC70 VA: 0xCBAC70
	[UIHintAttribute] // RVA: 0xCBAC70 Offset: 0xCBAC70 VA: 0xCBAC70
	[TooltipAttribute] // RVA: 0xCBAC70 Offset: 0xCBAC70 VA: 0xCBAC70
	public FsmFloat result; // 0x60
	[TooltipAttribute] // RVA: 0xCBACD0 Offset: 0xCBACD0 VA: 0xCBACD0
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x1B77C90 Offset: 0x1B77C90 VA: 0x1B77C90
	public void .ctor() { }

	// RVA: 0x1B77C98 Offset: 0x1B77C98 VA: 0x1B77C98 Slot: 28
	public override void Reset() { }

	// RVA: 0x1B77CCC Offset: 0x1B77CCC VA: 0x1B77CCC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B77DEC Offset: 0x1B77DEC VA: 0x1B77DEC Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1B77D08 Offset: 0x1B77D08 VA: 0x1B77D08
	private void DoTan() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3CFF0 Offset: 0xC3CFF0 VA: 0xC3CFF0
[TooltipAttribute] // RVA: 0xC3CFF0 Offset: 0xC3CFF0 VA: 0xC3CFF0
public class UiCanvasEnableRaycast : ComponentAction<PlayMakerCanvasRaycastFilterProxy> // TypeDefIndex: 13000
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCBAD08 Offset: 0xCBAD08 VA: 0xCBAD08
	[TooltipAttribute] // RVA: 0xCBAD08 Offset: 0xCBAD08 VA: 0xCBAD08
	public FsmOwnerDefault gameObject; // 0x60
	public FsmBool enableRaycasting; // 0x68
	[TooltipAttribute] // RVA: 0xCBAD54 Offset: 0xCBAD54 VA: 0xCBAD54
	public FsmBool resetOnExit; // 0x70
	public bool everyFrame; // 0x78
	[SerializeField] // RVA: 0xCBAD8C Offset: 0xCBAD8C VA: 0xCBAD8C
	private PlayMakerCanvasRaycastFilterProxy raycastFilterProxy; // 0x80
	private bool originalValue; // 0x88

	// Methods

	// RVA: 0x1BFED28 Offset: 0x1BFED28 VA: 0x1BFED28
	public void .ctor() { }

	// RVA: 0x1BFED78 Offset: 0x1BFED78 VA: 0x1BFED78 Slot: 28
	public override void Reset() { }

	// RVA: 0x1BFEDAC Offset: 0x1BFEDAC VA: 0x1BFEDAC Slot: 29
	public override void OnPreprocess() { }

	// RVA: 0x1BFEE6C Offset: 0x1BFEE6C VA: 0x1BFEE6C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1BFEFF8 Offset: 0x1BFEFF8 VA: 0x1BFEFF8 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1BFEF40 Offset: 0x1BFEF40 VA: 0x1BFEF40
	private void DoAction() { }

	// RVA: 0x1BFEFFC Offset: 0x1BFEFFC VA: 0x1BFEFFC Slot: 37
	public override void OnExit() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D040 Offset: 0xC3D040 VA: 0xC3D040
[TooltipAttribute] // RVA: 0xC3D040 Offset: 0xC3D040 VA: 0xC3D040
public class UiCanvasForceUpdateCanvases : FsmStateAction // TypeDefIndex: 13001
{
	// Methods

	// RVA: 0x1BFF0AC Offset: 0x1BFF0AC VA: 0x1BFF0AC
	public void .ctor() { }

	// RVA: 0x1BFF0B4 Offset: 0x1BFF0B4 VA: 0x1BFF0B4 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D090 Offset: 0xC3D090 VA: 0xC3D090
[TooltipAttribute] // RVA: 0xC3D090 Offset: 0xC3D090 VA: 0xC3D090
public class UiCanvasGroupSetAlpha : ComponentAction<CanvasGroup> // TypeDefIndex: 13002
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCBAD9C Offset: 0xCBAD9C VA: 0xCBAD9C
	[CheckForComponentAttribute] // RVA: 0xCBAD9C Offset: 0xCBAD9C VA: 0xCBAD9C
	[TooltipAttribute] // RVA: 0xCBAD9C Offset: 0xCBAD9C VA: 0xCBAD9C
	public FsmOwnerDefault gameObject; // 0x60
	[RequiredFieldAttribute] // RVA: 0xCBAE34 Offset: 0xCBAE34 VA: 0xCBAE34
	[TooltipAttribute] // RVA: 0xCBAE34 Offset: 0xCBAE34 VA: 0xCBAE34
	public FsmFloat alpha; // 0x68
	[TooltipAttribute] // RVA: 0xCBAE80 Offset: 0xCBAE80 VA: 0xCBAE80
	public FsmBool resetOnExit; // 0x70
	[TooltipAttribute] // RVA: 0xCBAEB8 Offset: 0xCBAEB8 VA: 0xCBAEB8
	public bool everyFrame; // 0x78
	private CanvasGroup component; // 0x80
	private float originalValue; // 0x88

	// Methods

	// RVA: 0x1BFF0E0 Offset: 0x1BFF0E0 VA: 0x1BFF0E0
	public void .ctor() { }

	// RVA: 0x1BFF130 Offset: 0x1BFF130 VA: 0x1BFF130 Slot: 28
	public override void Reset() { }

	// RVA: 0x1BFF140 Offset: 0x1BFF140 VA: 0x1BFF140 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1BFF2F4 Offset: 0x1BFF2F4 VA: 0x1BFF2F4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1BFF228 Offset: 0x1BFF228 VA: 0x1BFF228
	private void DoSetValue() { }

	// RVA: 0x1BFF2F8 Offset: 0x1BFF2F8 VA: 0x1BFF2F8 Slot: 37
	public override void OnExit() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D0E0 Offset: 0xC3D0E0 VA: 0xC3D0E0
[TooltipAttribute] // RVA: 0xC3D0E0 Offset: 0xC3D0E0 VA: 0xC3D0E0
public class UiCanvasGroupSetProperties : ComponentAction<CanvasGroup> // TypeDefIndex: 13003
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCBAEF0 Offset: 0xCBAEF0 VA: 0xCBAEF0
	[CheckForComponentAttribute] // RVA: 0xCBAEF0 Offset: 0xCBAEF0 VA: 0xCBAEF0
	[TooltipAttribute] // RVA: 0xCBAEF0 Offset: 0xCBAEF0 VA: 0xCBAEF0
	public FsmOwnerDefault gameObject; // 0x60
	[TooltipAttribute] // RVA: 0xCBAF88 Offset: 0xCBAF88 VA: 0xCBAF88
	[HasFloatSliderAttribute] // RVA: 0xCBAF88 Offset: 0xCBAF88 VA: 0xCBAF88
	public FsmFloat alpha; // 0x68
	[TooltipAttribute] // RVA: 0xCBAFDC Offset: 0xCBAFDC VA: 0xCBAFDC
	public FsmBool interactable; // 0x70
	[TooltipAttribute] // RVA: 0xCBB014 Offset: 0xCBB014 VA: 0xCBB014
	public FsmBool blocksRaycasts; // 0x78
	[TooltipAttribute] // RVA: 0xCBB04C Offset: 0xCBB04C VA: 0xCBB04C
	public FsmBool ignoreParentGroup; // 0x80
	[TooltipAttribute] // RVA: 0xCBB084 Offset: 0xCBB084 VA: 0xCBB084
	public FsmBool resetOnExit; // 0x88
	public bool everyFrame; // 0x90
	private CanvasGroup component; // 0x98
	private float originalAlpha; // 0xA0
	private bool originalInteractable; // 0xA4
	private bool originalBlocksRaycasts; // 0xA5
	private bool originalIgnoreParentGroup; // 0xA6

	// Methods

	// RVA: 0x1BFF3C8 Offset: 0x1BFF3C8 VA: 0x1BFF3C8
	public void .ctor() { }

	// RVA: 0x1BFF418 Offset: 0x1BFF418 VA: 0x1BFF418 Slot: 28
	public override void Reset() { }

	// RVA: 0x1BFF548 Offset: 0x1BFF548 VA: 0x1BFF548 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1BFF8E0 Offset: 0x1BFF8E0 VA: 0x1BFF8E0 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1BFF6C8 Offset: 0x1BFF6C8 VA: 0x1BFF6C8
	private void DoAction() { }

	// RVA: 0x1BFF8E4 Offset: 0x1BFF8E4 VA: 0x1BFF8E4 Slot: 37
	public override void OnExit() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D130 Offset: 0xC3D130 VA: 0xC3D130
[TooltipAttribute] // RVA: 0xC3D130 Offset: 0xC3D130 VA: 0xC3D130
public class UiCanvasScalerGetScaleFactor : ComponentAction<CanvasScaler> // TypeDefIndex: 13004
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCBB0BC Offset: 0xCBB0BC VA: 0xCBB0BC
	[CheckForComponentAttribute] // RVA: 0xCBB0BC Offset: 0xCBB0BC VA: 0xCBB0BC
	[TooltipAttribute] // RVA: 0xCBB0BC Offset: 0xCBB0BC VA: 0xCBB0BC
	public FsmOwnerDefault gameObject; // 0x60
	[RequiredFieldAttribute] // RVA: 0xCBB154 Offset: 0xCBB154 VA: 0xCBB154
	[UIHintAttribute] // RVA: 0xCBB154 Offset: 0xCBB154 VA: 0xCBB154
	[TooltipAttribute] // RVA: 0xCBB154 Offset: 0xCBB154 VA: 0xCBB154
	public FsmFloat scaleFactor; // 0x68
	[TooltipAttribute] // RVA: 0xCBB1B4 Offset: 0xCBB1B4 VA: 0xCBB1B4
	public bool everyFrame; // 0x70
	private CanvasScaler component; // 0x78

	// Methods

	// RVA: 0x1BFFAB8 Offset: 0x1BFFAB8 VA: 0x1BFFAB8
	public void .ctor() { }

	// RVA: 0x1BFFB08 Offset: 0x1BFFB08 VA: 0x1BFFB08 Slot: 28
	public override void Reset() { }

	// RVA: 0x1BFFB14 Offset: 0x1BFFB14 VA: 0x1BFFB14 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1BFFCA0 Offset: 0x1BFFCA0 VA: 0x1BFFCA0 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1BFFBD4 Offset: 0x1BFFBD4 VA: 0x1BFFBD4
	private void DoGetValue() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D180 Offset: 0xC3D180 VA: 0xC3D180
[TooltipAttribute] // RVA: 0xC3D180 Offset: 0xC3D180 VA: 0xC3D180
public class UiCanvasScalerSetScaleFactor : ComponentAction<CanvasScaler> // TypeDefIndex: 13005
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCBB1EC Offset: 0xCBB1EC VA: 0xCBB1EC
	[CheckForComponentAttribute] // RVA: 0xCBB1EC Offset: 0xCBB1EC VA: 0xCBB1EC
	[TooltipAttribute] // RVA: 0xCBB1EC Offset: 0xCBB1EC VA: 0xCBB1EC
	public FsmOwnerDefault gameObject; // 0x60
	[RequiredFieldAttribute] // RVA: 0xCBB284 Offset: 0xCBB284 VA: 0xCBB284
	[TooltipAttribute] // RVA: 0xCBB284 Offset: 0xCBB284 VA: 0xCBB284
	public FsmFloat scaleFactor; // 0x68
	[TooltipAttribute] // RVA: 0xCBB2D0 Offset: 0xCBB2D0 VA: 0xCBB2D0
	public bool everyFrame; // 0x70
	private CanvasScaler component; // 0x78

	// Methods

	// RVA: 0x1BFFCA4 Offset: 0x1BFFCA4 VA: 0x1BFFCA4
	public void .ctor() { }

	// RVA: 0x1BFFCF4 Offset: 0x1BFFCF4 VA: 0x1BFFCF4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1BFFD00 Offset: 0x1BFFD00 VA: 0x1BFFD00 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1BFFE8C Offset: 0x1BFFE8C VA: 0x1BFFE8C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1BFFDC0 Offset: 0x1BFFDC0 VA: 0x1BFFDC0
	private void DoSetValue() { }
}

// Namespace: HutongGames.PlayMaker
public class PlayMakerCanvasRaycastFilterProxy : MonoBehaviour, ICanvasRaycastFilter // TypeDefIndex: 13006
{
	// Fields
	public bool RayCastingEnabled; // 0x18

	// Methods

	// RVA: 0x20B1608 Offset: 0x20B1608 VA: 0x20B1608
	public void .ctor() { }

	// RVA: 0x20B1618 Offset: 0x20B1618 VA: 0x20B1618 Slot: 4
	public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera) { }
}

// Namespace: HutongGames.PlayMaker
[AddComponentMenu] // RVA: 0xC3D1D0 Offset: 0xC3D1D0 VA: 0xC3D1D0
public class PlayMakerUiBoolValueChangedEvent : PlayMakerUiEventBase // TypeDefIndex: 13007
{
	// Fields
	public Toggle toggle; // 0x28

	// Methods

	// RVA: 0x20B1620 Offset: 0x20B1620 VA: 0x20B1620
	public void .ctor() { }

	// RVA: 0x20B1628 Offset: 0x20B1628 VA: 0x20B1628 Slot: 4
	protected override void Initialize() { }

	// RVA: 0x20B1780 Offset: 0x20B1780 VA: 0x20B1780
	protected void OnDisable() { }

	// RVA: 0x20B187C Offset: 0x20B187C VA: 0x20B187C
	private void OnValueChanged(bool value) { }
}

// Namespace: HutongGames.PlayMaker
[AddComponentMenu] // RVA: 0xC3D208 Offset: 0xC3D208 VA: 0xC3D208
public class PlayMakerUiClickEvent : PlayMakerUiEventBase // TypeDefIndex: 13008
{
	// Fields
	public Button button; // 0x28

	// Methods

	// RVA: 0x20B193C Offset: 0x20B193C VA: 0x20B193C
	public void .ctor() { }

	// RVA: 0x20B1944 Offset: 0x20B1944 VA: 0x20B1944 Slot: 4
	protected override void Initialize() { }

	// RVA: 0x20B1A9C Offset: 0x20B1A9C VA: 0x20B1A9C
	protected void OnDisable() { }

	// RVA: 0x20B1B98 Offset: 0x20B1B98 VA: 0x20B1B98
	private void DoOnClick() { }
}

// Namespace: HutongGames.PlayMaker
[AddComponentMenu] // RVA: 0xC3D240 Offset: 0xC3D240 VA: 0xC3D240
public class PlayMakerUiDragEvents : PlayMakerUiEventBase, IDragHandler, IBeginDragHandler, IEndDragHandler, IEventSystemHandler // TypeDefIndex: 13009
{
	// Methods

	// RVA: 0x20B1C0C Offset: 0x20B1C0C VA: 0x20B1C0C
	public void .ctor() { }

	// RVA: 0x20B1C14 Offset: 0x20B1C14 VA: 0x20B1C14 Slot: 6
	public void OnBeginDrag(PointerEventData eventData) { }

	// RVA: 0x20B1CA8 Offset: 0x20B1CA8 VA: 0x20B1CA8 Slot: 5
	public void OnDrag(PointerEventData eventData) { }

	// RVA: 0x20B1D3C Offset: 0x20B1D3C VA: 0x20B1D3C Slot: 7
	public void OnEndDrag(PointerEventData eventData) { }
}

// Namespace: HutongGames.PlayMaker
[AddComponentMenu] // RVA: 0xC3D278 Offset: 0xC3D278 VA: 0xC3D278
public class PlayMakerUiDropEvent : PlayMakerUiEventBase, IDropHandler, IEventSystemHandler // TypeDefIndex: 13010
{
	// Methods

	// RVA: 0x11B4B5C Offset: 0x11B4B5C VA: 0x11B4B5C
	public void .ctor() { }

	// RVA: 0x11B4BD0 Offset: 0x11B4BD0 VA: 0x11B4BD0 Slot: 5
	public void OnDrop(PointerEventData eventData) { }
}

// Namespace: HutongGames.PlayMaker
[AddComponentMenu] // RVA: 0xC3D2B0 Offset: 0xC3D2B0 VA: 0xC3D2B0
public class PlayMakerUiEndEditEvent : PlayMakerUiEventBase // TypeDefIndex: 13011
{
	// Fields
	public InputField inputField; // 0x28

	// Methods

	// RVA: 0x11B4D68 Offset: 0x11B4D68 VA: 0x11B4D68
	public void .ctor() { }

	// RVA: 0x11B4D6C Offset: 0x11B4D6C VA: 0x11B4D6C Slot: 4
	protected override void Initialize() { }

	// RVA: 0x11B4ED4 Offset: 0x11B4ED4 VA: 0x11B4ED4
	protected void OnDisable() { }

	// RVA: 0x11B4FE0 Offset: 0x11B4FE0 VA: 0x11B4FE0
	private void DoOnEndEdit(string value) { }
}

// Namespace: HutongGames.PlayMaker
public abstract class PlayMakerUiEventBase : MonoBehaviour // TypeDefIndex: 13012
{
	// Fields
	public List<PlayMakerFSM> targetFsms; // 0x18
	protected bool initialized; // 0x20

	// Methods

	// RVA: 0x11B4B60 Offset: 0x11B4B60 VA: 0x11B4B60
	protected void .ctor() { }

	// RVA: 0x11B5098 Offset: 0x11B5098 VA: 0x11B5098
	public void AddTargetFsm(PlayMakerFSM fsm) { }

	// RVA: 0x11B5128 Offset: 0x11B5128 VA: 0x11B5128
	private bool TargetsFsm(PlayMakerFSM fsm) { }

	// RVA: 0x11B5228 Offset: 0x11B5228 VA: 0x11B5228
	protected void OnEnable() { }

	// RVA: 0x11B5234 Offset: 0x11B5234 VA: 0x11B5234
	public void PreProcess() { }

	// RVA: 0x11B5240 Offset: 0x11B5240 VA: 0x11B5240 Slot: 4
	protected virtual void Initialize() { }

	// RVA: 0x11B4C60 Offset: 0x11B4C60 VA: 0x11B4C60
	protected void SendEvent(FsmEvent fsmEvent) { }
}

// Namespace: HutongGames.PlayMaker
[AddComponentMenu] // RVA: 0xC3D2E8 Offset: 0xC3D2E8 VA: 0xC3D2E8
public class PlayMakerUiFloatValueChangedEvent : PlayMakerUiEventBase // TypeDefIndex: 13013
{
	// Fields
	public Slider slider; // 0x28
	public Scrollbar scrollbar; // 0x30

	// Methods

	// RVA: 0x11B524C Offset: 0x11B524C VA: 0x11B524C
	public void .ctor() { }

	// RVA: 0x11B5250 Offset: 0x11B5250 VA: 0x11B5250 Slot: 4
	protected override void Initialize() { }

	// RVA: 0x11B54B4 Offset: 0x11B54B4 VA: 0x11B54B4
	protected void OnDisable() { }

	// RVA: 0x11B566C Offset: 0x11B566C VA: 0x11B566C
	private void OnValueChanged(float value) { }
}

// Namespace: HutongGames.PlayMaker
[AddComponentMenu] // RVA: 0xC3D320 Offset: 0xC3D320 VA: 0xC3D320
public class PlayMakerUiIntValueChangedEvent : PlayMakerUiEventBase // TypeDefIndex: 13014
{
	// Fields
	public Dropdown dropdown; // 0x28

	// Methods

	// RVA: 0x11B5724 Offset: 0x11B5724 VA: 0x11B5724
	public void .ctor() { }

	// RVA: 0x11B5728 Offset: 0x11B5728 VA: 0x11B5728 Slot: 4
	protected override void Initialize() { }

	// RVA: 0x11B5890 Offset: 0x11B5890 VA: 0x11B5890
	protected void OnDisable() { }

	// RVA: 0x11B599C Offset: 0x11B599C VA: 0x11B599C
	private void OnValueChanged(int value) { }
}

// Namespace: HutongGames.PlayMaker
[AddComponentMenu] // RVA: 0xC3D358 Offset: 0xC3D358 VA: 0xC3D358
public class PlayMakerUiPointerEvents : PlayMakerUiEventBase, IPointerClickHandler, IPointerDownHandler, IPointerEnterHandler, IPointerExitHandler, IPointerUpHandler, IEventSystemHandler // TypeDefIndex: 13015
{
	// Methods

	// RVA: 0x11B5A54 Offset: 0x11B5A54 VA: 0x11B5A54
	public void .ctor() { }

	// RVA: 0x11B5A58 Offset: 0x11B5A58 VA: 0x11B5A58 Slot: 5
	public void OnPointerClick(PointerEventData eventData) { }

	// RVA: 0x11B5AE8 Offset: 0x11B5AE8 VA: 0x11B5AE8 Slot: 6
	public void OnPointerDown(PointerEventData eventData) { }

	// RVA: 0x11B5B78 Offset: 0x11B5B78 VA: 0x11B5B78 Slot: 7
	public void OnPointerEnter(PointerEventData eventData) { }

	// RVA: 0x11B5C08 Offset: 0x11B5C08 VA: 0x11B5C08 Slot: 8
	public void OnPointerExit(PointerEventData eventData) { }

	// RVA: 0x11B5C98 Offset: 0x11B5C98 VA: 0x11B5C98 Slot: 9
	public void OnPointerUp(PointerEventData eventData) { }
}

// Namespace: HutongGames.PlayMaker
[AddComponentMenu] // RVA: 0xC3D390 Offset: 0xC3D390 VA: 0xC3D390
public class PlayMakerUiVector2ValueChangedEvent : PlayMakerUiEventBase // TypeDefIndex: 13016
{
	// Fields
	public ScrollRect scrollRect; // 0x28

	// Methods

	// RVA: 0x11B5D28 Offset: 0x11B5D28 VA: 0x11B5D28
	public void .ctor() { }

	// RVA: 0x11B5D2C Offset: 0x11B5D2C VA: 0x11B5D2C Slot: 4
	protected override void Initialize() { }

	// RVA: 0x11B5E94 Offset: 0x11B5E94 VA: 0x11B5E94
	protected void OnDisable() { }

	// RVA: 0x11B5FA0 Offset: 0x11B5FA0 VA: 0x11B5FA0
	private void OnValueChanged(Vector2 value) { }
}

// Namespace: HutongGames.PlayMaker.Actions
public abstract class EventTriggerActionBase : ComponentAction<EventTrigger> // TypeDefIndex: 13017
{
	// Fields
	[DisplayOrderAttribute] // RVA: 0xCBB308 Offset: 0xCBB308 VA: 0xCBB308
	[RequiredFieldAttribute] // RVA: 0xCBB308 Offset: 0xCBB308 VA: 0xCBB308
	[TooltipAttribute] // RVA: 0xCBB308 Offset: 0xCBB308 VA: 0xCBB308
	public FsmOwnerDefault gameObject; // 0x60
	[DisplayOrderAttribute] // RVA: 0xCBB368 Offset: 0xCBB368 VA: 0xCBB368
	[TooltipAttribute] // RVA: 0xCBB368 Offset: 0xCBB368 VA: 0xCBB368
	public FsmEventTarget eventTarget; // 0x68
	protected EventTrigger trigger; // 0x70
	protected EventTrigger.Entry entry; // 0x78

	// Methods

	// RVA: 0x12F1B70 Offset: 0x12F1B70 VA: 0x12F1B70
	protected void .ctor() { }

	// RVA: 0x12F1BC0 Offset: 0x12F1BC0 VA: 0x12F1BC0 Slot: 28
	public override void Reset() { }

	// RVA: 0x12F1BEC Offset: 0x12F1BEC VA: 0x12F1BEC
	protected void Init(EventTriggerType eventTriggerType, UnityAction<BaseEventData> call) { }

	// RVA: 0x12F1D58 Offset: 0x12F1D58 VA: 0x12F1D58 Slot: 37
	public override void OnExit() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D3C8 Offset: 0xC3D3C8 VA: 0xC3D3C8
[TooltipAttribute] // RVA: 0xC3D3C8 Offset: 0xC3D3C8 VA: 0xC3D3C8
public class UiEventSystemCurrentRayCastAll : FsmStateAction // TypeDefIndex: 13018
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCBB3B8 Offset: 0xCBB3B8 VA: 0xCBB3B8
	[TooltipAttribute] // RVA: 0xCBB3B8 Offset: 0xCBB3B8 VA: 0xCBB3B8
	public FsmVector3 screenPosition; // 0x50
	[TooltipAttribute] // RVA: 0xCBB404 Offset: 0xCBB404 VA: 0xCBB404
	public FsmVector2 orScreenPosition2d; // 0x58
	[TooltipAttribute] // RVA: 0xCBB43C Offset: 0xCBB43C VA: 0xCBB43C
	[UIHintAttribute] // RVA: 0xCBB43C Offset: 0xCBB43C VA: 0xCBB43C
	[ArrayEditorAttribute] // RVA: 0xCBB43C Offset: 0xCBB43C VA: 0xCBB43C
	public FsmArray gameObjectList; // 0x60
	[TooltipAttribute] // RVA: 0xCBB4C0 Offset: 0xCBB4C0 VA: 0xCBB4C0
	[UIHintAttribute] // RVA: 0xCBB4C0 Offset: 0xCBB4C0 VA: 0xCBB4C0
	public FsmInt hitCount; // 0x68
	[TooltipAttribute] // RVA: 0xCBB510 Offset: 0xCBB510 VA: 0xCBB510
	public bool everyFrame; // 0x70
	private PointerEventData pointer; // 0x78
	private List<RaycastResult> raycastResults; // 0x80

	// Methods

	// RVA: 0x1C00984 Offset: 0x1C00984 VA: 0x1C00984
	public void .ctor() { }

	// RVA: 0x1C009F4 Offset: 0x1C009F4 VA: 0x1C009F4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C00A7C Offset: 0x1C00A7C VA: 0x1C00A7C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C00E84 Offset: 0x1C00E84 VA: 0x1C00E84 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1C00AB8 Offset: 0x1C00AB8 VA: 0x1C00AB8
	private void ExecuteRayCastAll() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D418 Offset: 0xC3D418 VA: 0xC3D418
[TooltipAttribute] // RVA: 0xC3D418 Offset: 0xC3D418 VA: 0xC3D418
public class UiEventSystemExecuteEvent : FsmStateAction // TypeDefIndex: 13019
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCBB548 Offset: 0xCBB548 VA: 0xCBB548
	[TooltipAttribute] // RVA: 0xCBB548 Offset: 0xCBB548 VA: 0xCBB548
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xCBB594 Offset: 0xCBB594 VA: 0xCBB594
	[ObjectTypeAttribute] // RVA: 0xCBB594 Offset: 0xCBB594 VA: 0xCBB594
	public FsmEnum eventHandler; // 0x58
	[TooltipAttribute] // RVA: 0xCBB61C Offset: 0xCBB61C VA: 0xCBB61C
	public FsmEvent success; // 0x60
	[TooltipAttribute] // RVA: 0xCBB654 Offset: 0xCBB654 VA: 0xCBB654
	public FsmEvent canNotHandleEvent; // 0x68
	private GameObject go; // 0x70

	// Methods

	// RVA: 0x1C00E88 Offset: 0x1C00E88 VA: 0x1C00E88
	public void .ctor() { }

	// RVA: 0x1C00E90 Offset: 0x1C00E90 VA: 0x1C00E90 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C00F04 Offset: 0x1C00F04 VA: 0x1C00F04 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C00F74 Offset: 0x1C00F74 VA: 0x1C00F74
	private bool ExecuteEvent() { }
}

// Namespace: 
public enum UiEventSystemExecuteEvent.EventHandlers // TypeDefIndex: 13020
{
	// Fields
	public int value__; // 0x0
	public const UiEventSystemExecuteEvent.EventHandlers Submit = 0;
	public const UiEventSystemExecuteEvent.EventHandlers beginDrag = 1;
	public const UiEventSystemExecuteEvent.EventHandlers cancel = 2;
	public const UiEventSystemExecuteEvent.EventHandlers deselectHandler = 3;
	public const UiEventSystemExecuteEvent.EventHandlers dragHandler = 4;
	public const UiEventSystemExecuteEvent.EventHandlers dropHandler = 5;
	public const UiEventSystemExecuteEvent.EventHandlers endDragHandler = 6;
	public const UiEventSystemExecuteEvent.EventHandlers initializePotentialDrag = 7;
	public const UiEventSystemExecuteEvent.EventHandlers pointerClickHandler = 8;
	public const UiEventSystemExecuteEvent.EventHandlers pointerDownHandler = 9;
	public const UiEventSystemExecuteEvent.EventHandlers pointerEnterHandler = 10;
	public const UiEventSystemExecuteEvent.EventHandlers pointerExitHandler = 11;
	public const UiEventSystemExecuteEvent.EventHandlers pointerUpHandler = 12;
	public const UiEventSystemExecuteEvent.EventHandlers scrollHandler = 13;
	public const UiEventSystemExecuteEvent.EventHandlers submitHandler = 14;
	public const UiEventSystemExecuteEvent.EventHandlers updateSelectedHandler = 15;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D468 Offset: 0xC3D468 VA: 0xC3D468
[TooltipAttribute] // RVA: 0xC3D468 Offset: 0xC3D468 VA: 0xC3D468
public class UiGetLastPointerDataInfo : FsmStateAction // TypeDefIndex: 13021
{
	// Fields
	public static PointerEventData lastPointerEventData; // 0x0
	[TooltipAttribute] // RVA: 0xCBB68C Offset: 0xCBB68C VA: 0xCBB68C
	[UIHintAttribute] // RVA: 0xCBB68C Offset: 0xCBB68C VA: 0xCBB68C
	public FsmInt clickCount; // 0x50
	[TooltipAttribute] // RVA: 0xCBB6DC Offset: 0xCBB6DC VA: 0xCBB6DC
	[UIHintAttribute] // RVA: 0xCBB6DC Offset: 0xCBB6DC VA: 0xCBB6DC
	public FsmFloat clickTime; // 0x58
	[TooltipAttribute] // RVA: 0xCBB72C Offset: 0xCBB72C VA: 0xCBB72C
	[UIHintAttribute] // RVA: 0xCBB72C Offset: 0xCBB72C VA: 0xCBB72C
	public FsmVector2 delta; // 0x60
	[TooltipAttribute] // RVA: 0xCBB77C Offset: 0xCBB77C VA: 0xCBB77C
	[UIHintAttribute] // RVA: 0xCBB77C Offset: 0xCBB77C VA: 0xCBB77C
	public FsmBool dragging; // 0x68
	[TooltipAttribute] // RVA: 0xCBB7CC Offset: 0xCBB7CC VA: 0xCBB7CC
	[UIHintAttribute] // RVA: 0xCBB7CC Offset: 0xCBB7CC VA: 0xCBB7CC
	[ObjectTypeAttribute] // RVA: 0xCBB7CC Offset: 0xCBB7CC VA: 0xCBB7CC
	public FsmEnum inputButton; // 0x70
	[TooltipAttribute] // RVA: 0xCBB868 Offset: 0xCBB868 VA: 0xCBB868
	[UIHintAttribute] // RVA: 0xCBB868 Offset: 0xCBB868 VA: 0xCBB868
	public FsmBool eligibleForClick; // 0x78
	[TooltipAttribute] // RVA: 0xCBB8B8 Offset: 0xCBB8B8 VA: 0xCBB8B8
	[UIHintAttribute] // RVA: 0xCBB8B8 Offset: 0xCBB8B8 VA: 0xCBB8B8
	public FsmGameObject enterEventCamera; // 0x80
	[TooltipAttribute] // RVA: 0xCBB908 Offset: 0xCBB908 VA: 0xCBB908
	[UIHintAttribute] // RVA: 0xCBB908 Offset: 0xCBB908 VA: 0xCBB908
	public FsmGameObject pressEventCamera; // 0x88
	[TooltipAttribute] // RVA: 0xCBB958 Offset: 0xCBB958 VA: 0xCBB958
	[UIHintAttribute] // RVA: 0xCBB958 Offset: 0xCBB958 VA: 0xCBB958
	public FsmBool isPointerMoving; // 0x90
	[TooltipAttribute] // RVA: 0xCBB9A8 Offset: 0xCBB9A8 VA: 0xCBB9A8
	[UIHintAttribute] // RVA: 0xCBB9A8 Offset: 0xCBB9A8 VA: 0xCBB9A8
	public FsmBool isScrolling; // 0x98
	[TooltipAttribute] // RVA: 0xCBB9F8 Offset: 0xCBB9F8 VA: 0xCBB9F8
	[UIHintAttribute] // RVA: 0xCBB9F8 Offset: 0xCBB9F8 VA: 0xCBB9F8
	public FsmGameObject lastPress; // 0xA0
	[TooltipAttribute] // RVA: 0xCBBA48 Offset: 0xCBBA48 VA: 0xCBBA48
	[UIHintAttribute] // RVA: 0xCBBA48 Offset: 0xCBBA48 VA: 0xCBBA48
	public FsmGameObject pointerDrag; // 0xA8
	[TooltipAttribute] // RVA: 0xCBBA98 Offset: 0xCBBA98 VA: 0xCBBA98
	[UIHintAttribute] // RVA: 0xCBBA98 Offset: 0xCBBA98 VA: 0xCBBA98
	public FsmGameObject pointerEnter; // 0xB0
	[TooltipAttribute] // RVA: 0xCBBAE8 Offset: 0xCBBAE8 VA: 0xCBBAE8
	[UIHintAttribute] // RVA: 0xCBBAE8 Offset: 0xCBBAE8 VA: 0xCBBAE8
	public FsmInt pointerId; // 0xB8
	[TooltipAttribute] // RVA: 0xCBBB38 Offset: 0xCBBB38 VA: 0xCBBB38
	[UIHintAttribute] // RVA: 0xCBBB38 Offset: 0xCBBB38 VA: 0xCBBB38
	public FsmGameObject pointerPress; // 0xC0
	[TooltipAttribute] // RVA: 0xCBBB88 Offset: 0xCBBB88 VA: 0xCBBB88
	[UIHintAttribute] // RVA: 0xCBBB88 Offset: 0xCBBB88 VA: 0xCBBB88
	public FsmVector2 position; // 0xC8
	[TooltipAttribute] // RVA: 0xCBBBD8 Offset: 0xCBBBD8 VA: 0xCBBBD8
	[UIHintAttribute] // RVA: 0xCBBBD8 Offset: 0xCBBBD8 VA: 0xCBBBD8
	public FsmVector2 pressPosition; // 0xD0
	[TooltipAttribute] // RVA: 0xCBBC28 Offset: 0xCBBC28 VA: 0xCBBC28
	[UIHintAttribute] // RVA: 0xCBBC28 Offset: 0xCBBC28 VA: 0xCBBC28
	public FsmGameObject rawPointerPress; // 0xD8
	[TooltipAttribute] // RVA: 0xCBBC78 Offset: 0xCBBC78 VA: 0xCBBC78
	[UIHintAttribute] // RVA: 0xCBBC78 Offset: 0xCBBC78 VA: 0xCBBC78
	public FsmVector2 scrollDelta; // 0xE0
	[TooltipAttribute] // RVA: 0xCBBCC8 Offset: 0xCBBCC8 VA: 0xCBBCC8
	[UIHintAttribute] // RVA: 0xCBBCC8 Offset: 0xCBBCC8 VA: 0xCBBCC8
	public FsmBool used; // 0xE8
	[TooltipAttribute] // RVA: 0xCBBD18 Offset: 0xCBBD18 VA: 0xCBBD18
	[UIHintAttribute] // RVA: 0xCBBD18 Offset: 0xCBBD18 VA: 0xCBBD18
	public FsmBool useDragThreshold; // 0xF0
	[TooltipAttribute] // RVA: 0xCBBD68 Offset: 0xCBBD68 VA: 0xCBBD68
	[UIHintAttribute] // RVA: 0xCBBD68 Offset: 0xCBBD68 VA: 0xCBBD68
	public FsmVector3 worldNormal; // 0xF8
	[TooltipAttribute] // RVA: 0xCBBDB8 Offset: 0xCBBDB8 VA: 0xCBBDB8
	[UIHintAttribute] // RVA: 0xCBBDB8 Offset: 0xCBBDB8 VA: 0xCBBDB8
	public FsmVector3 worldPosition; // 0x100

	// Methods

	// RVA: 0x1C02348 Offset: 0x1C02348 VA: 0x1C02348
	public void .ctor() { }

	// RVA: 0x1C02350 Offset: 0x1C02350 VA: 0x1C02350 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C023D4 Offset: 0x1C023D4 VA: 0x1C023D4 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D4B8 Offset: 0xC3D4B8 VA: 0xC3D4B8
[TooltipAttribute] // RVA: 0xC3D4B8 Offset: 0xC3D4B8 VA: 0xC3D4B8
public class UiGetLastPointerEventDataInputButton : FsmStateAction // TypeDefIndex: 13022
{
	// Fields
	[TooltipAttribute] // RVA: 0xCBBE08 Offset: 0xCBBE08 VA: 0xCBBE08
	[UIHintAttribute] // RVA: 0xCBBE08 Offset: 0xCBBE08 VA: 0xCBBE08
	[ObjectTypeAttribute] // RVA: 0xCBBE08 Offset: 0xCBBE08 VA: 0xCBBE08
	public FsmEnum inputButton; // 0x50
	[TooltipAttribute] // RVA: 0xCBBEA4 Offset: 0xCBBEA4 VA: 0xCBBEA4
	public FsmEvent leftClick; // 0x58
	[TooltipAttribute] // RVA: 0xCBBEDC Offset: 0xCBBEDC VA: 0xCBBEDC
	public FsmEvent middleClick; // 0x60
	[TooltipAttribute] // RVA: 0xCBBF14 Offset: 0xCBBF14 VA: 0xCBBF14
	public FsmEvent rightClick; // 0x68

	// Methods

	// RVA: 0x1C02E64 Offset: 0x1C02E64 VA: 0x1C02E64
	public void .ctor() { }

	// RVA: 0x1C02E6C Offset: 0x1C02E6C VA: 0x1C02E6C Slot: 28
	public override void Reset() { }

	// RVA: 0x1C02EDC Offset: 0x1C02EDC VA: 0x1C02EDC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C02F04 Offset: 0x1C02F04 VA: 0x1C02F04
	private void ExecuteAction() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D508 Offset: 0xC3D508 VA: 0xC3D508
[TooltipAttribute] // RVA: 0xC3D508 Offset: 0xC3D508 VA: 0xC3D508
public class UiGetSelectedGameObject : FsmStateAction // TypeDefIndex: 13023
{
	// Fields
	[UIHintAttribute] // RVA: 0xCBBF4C Offset: 0xCBBF4C VA: 0xCBBF4C
	[TooltipAttribute] // RVA: 0xCBBF4C Offset: 0xCBBF4C VA: 0xCBBF4C
	public FsmGameObject StoreGameObject; // 0x50
	[UIHintAttribute] // RVA: 0xCBBF9C Offset: 0xCBBF9C VA: 0xCBBF9C
	[TooltipAttribute] // RVA: 0xCBBF9C Offset: 0xCBBF9C VA: 0xCBBF9C
	public FsmEvent ObjectChangedEvent; // 0x58
	[UIHintAttribute] // RVA: 0xCBBFEC Offset: 0xCBBFEC VA: 0xCBBFEC
	[TooltipAttribute] // RVA: 0xCBBFEC Offset: 0xCBBFEC VA: 0xCBBFEC
	public bool everyFrame; // 0x60
	private GameObject lastGameObject; // 0x68

	// Methods

	// RVA: 0x1C031B0 Offset: 0x1C031B0 VA: 0x1C031B0
	public void .ctor() { }

	// RVA: 0x1C031B8 Offset: 0x1C031B8 VA: 0x1C031B8 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C031C4 Offset: 0x1C031C4 VA: 0x1C031C4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C032A4 Offset: 0x1C032A4 VA: 0x1C032A4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1C03204 Offset: 0x1C03204 VA: 0x1C03204
	private void GetCurrentSelectedGameObject() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D558 Offset: 0xC3D558 VA: 0xC3D558
[TooltipAttribute] // RVA: 0xC3D558 Offset: 0xC3D558 VA: 0xC3D558
public class UiIsPointerOverUiObject : FsmStateAction // TypeDefIndex: 13024
{
	// Fields
	[TooltipAttribute] // RVA: 0xCBC03C Offset: 0xCBC03C VA: 0xCBC03C
	public FsmInt pointerId; // 0x50
	[TooltipAttribute] // RVA: 0xCBC074 Offset: 0xCBC074 VA: 0xCBC074
	public FsmEvent pointerOverUI; // 0x58
	[TooltipAttribute] // RVA: 0xCBC0AC Offset: 0xCBC0AC VA: 0xCBC0AC
	public FsmEvent pointerNotOverUI; // 0x60
	[UIHintAttribute] // RVA: 0xCBC0E4 Offset: 0xCBC0E4 VA: 0xCBC0E4
	public FsmBool isPointerOverUI; // 0x68
	[TooltipAttribute] // RVA: 0xCBC0F8 Offset: 0xCBC0F8 VA: 0xCBC0F8
	public bool everyFrame; // 0x70

	// Methods

	// RVA: 0x1C089B8 Offset: 0x1C089B8 VA: 0x1C089B8
	public void .ctor() { }

	// RVA: 0x1C089C0 Offset: 0x1C089C0 VA: 0x1C089C0 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C08A44 Offset: 0x1C08A44 VA: 0x1C08A44 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C08CB4 Offset: 0x1C08CB4 VA: 0x1C08CB4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1C08A80 Offset: 0x1C08A80 VA: 0x1C08A80
	private void DoCheckPointer() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D5A8 Offset: 0xC3D5A8 VA: 0xC3D5A8
[TooltipAttribute] // RVA: 0xC3D5A8 Offset: 0xC3D5A8 VA: 0xC3D5A8
public class UiOnBeginDragEvent : EventTriggerActionBase // TypeDefIndex: 13025
{
	// Fields
	[UIHintAttribute] // RVA: 0xCBC130 Offset: 0xCBC130 VA: 0xCBC130
	[TooltipAttribute] // RVA: 0xCBC130 Offset: 0xCBC130 VA: 0xCBC130
	public FsmEvent onBeginDragEvent; // 0x80

	// Methods

	// RVA: 0x1C0AF10 Offset: 0x1C0AF10 VA: 0x1C0AF10
	public void .ctor() { }

	// RVA: 0x1C0AF18 Offset: 0x1C0AF18 VA: 0x1C0AF18 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C0AF40 Offset: 0x1C0AF40 VA: 0x1C0AF40 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C0AFC4 Offset: 0x1C0AFC4 VA: 0x1C0AFC4
	private void OnBeginDragDelegate(BaseEventData data) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D5F8 Offset: 0xC3D5F8 VA: 0xC3D5F8
[TooltipAttribute] // RVA: 0xC3D5F8 Offset: 0xC3D5F8 VA: 0xC3D5F8
public class UiOnCancelEvent : EventTriggerActionBase // TypeDefIndex: 13026
{
	// Fields
	[UIHintAttribute] // RVA: 0xCBC180 Offset: 0xCBC180 VA: 0xCBC180
	[TooltipAttribute] // RVA: 0xCBC180 Offset: 0xCBC180 VA: 0xCBC180
	public FsmEvent onCancelEvent; // 0x80

	// Methods

	// RVA: 0x1C0B0C0 Offset: 0x1C0B0C0 VA: 0x1C0B0C0
	public void .ctor() { }

	// RVA: 0x1C0B0C8 Offset: 0x1C0B0C8 VA: 0x1C0B0C8 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C0B0D4 Offset: 0x1C0B0D4 VA: 0x1C0B0D4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C0B158 Offset: 0x1C0B158 VA: 0x1C0B158
	private void OnCancelDelegate(BaseEventData data) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D648 Offset: 0xC3D648 VA: 0xC3D648
[TooltipAttribute] // RVA: 0xC3D648 Offset: 0xC3D648 VA: 0xC3D648
public class UiOnDeselectEvent : EventTriggerActionBase // TypeDefIndex: 13027
{
	// Fields
	[UIHintAttribute] // RVA: 0xCBC1D0 Offset: 0xCBC1D0 VA: 0xCBC1D0
	[TooltipAttribute] // RVA: 0xCBC1D0 Offset: 0xCBC1D0 VA: 0xCBC1D0
	public FsmEvent onDeselectEvent; // 0x80

	// Methods

	// RVA: 0x1C0B254 Offset: 0x1C0B254 VA: 0x1C0B254
	public void .ctor() { }

	// RVA: 0x1C0B25C Offset: 0x1C0B25C VA: 0x1C0B25C Slot: 28
	public override void Reset() { }

	// RVA: 0x1C0B284 Offset: 0x1C0B284 VA: 0x1C0B284 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C0B308 Offset: 0x1C0B308 VA: 0x1C0B308
	private void OnDeselectDelegate(BaseEventData data) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D698 Offset: 0xC3D698 VA: 0xC3D698
[TooltipAttribute] // RVA: 0xC3D698 Offset: 0xC3D698 VA: 0xC3D698
public class UiOnDragEvent : EventTriggerActionBase // TypeDefIndex: 13028
{
	// Fields
	[UIHintAttribute] // RVA: 0xCBC220 Offset: 0xCBC220 VA: 0xCBC220
	[TooltipAttribute] // RVA: 0xCBC220 Offset: 0xCBC220 VA: 0xCBC220
	public FsmEvent onDragEvent; // 0x80

	// Methods

	// RVA: 0x1C0B404 Offset: 0x1C0B404 VA: 0x1C0B404
	public void .ctor() { }

	// RVA: 0x1C0B40C Offset: 0x1C0B40C VA: 0x1C0B40C Slot: 28
	public override void Reset() { }

	// RVA: 0x1C0B434 Offset: 0x1C0B434 VA: 0x1C0B434 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C0B4B8 Offset: 0x1C0B4B8 VA: 0x1C0B4B8
	private void OnDragDelegate(BaseEventData data) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D6E8 Offset: 0xC3D6E8 VA: 0xC3D6E8
[TooltipAttribute] // RVA: 0xC3D6E8 Offset: 0xC3D6E8 VA: 0xC3D6E8
public class UiOnDropEvent : EventTriggerActionBase // TypeDefIndex: 13029
{
	// Fields
	[UIHintAttribute] // RVA: 0xCBC270 Offset: 0xCBC270 VA: 0xCBC270
	[TooltipAttribute] // RVA: 0xCBC270 Offset: 0xCBC270 VA: 0xCBC270
	public FsmEvent onDropEvent; // 0x80

	// Methods

	// RVA: 0x1C0B5B4 Offset: 0x1C0B5B4 VA: 0x1C0B5B4
	public void .ctor() { }

	// RVA: 0x1C0B5BC Offset: 0x1C0B5BC VA: 0x1C0B5BC Slot: 28
	public override void Reset() { }

	// RVA: 0x1C0B5E4 Offset: 0x1C0B5E4 VA: 0x1C0B5E4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C0B668 Offset: 0x1C0B668 VA: 0x1C0B668
	private void OnDropDelegate(BaseEventData data) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3D738 Offset: 0xC3D738 VA: 0xC3D738
[TooltipAttribute] // RVA: 0xC3D738 Offset: 0xC3D738 VA: 0xC3D738
public class UiOnEndDragEvent : EventTriggerActionBase // TypeDefIndex: 13030
{
	// Fields
	[UIHintAttribute] // RVA: 0xCBC2C0 Offset: 0xCBC2C0 VA: 0xCBC2C0
	[TooltipAttribute] // RVA: 0xCBC2C0 Offset: 0xCBC2C0 VA: 0xCBC2C0
	public FsmEvent onEndDragEvent; // 0x80

	// Methods

	// RVA: 0x1C0B764 Offset: 0x1C0B764 VA: 0x1C0B764
	public void .ctor() { }

	// RVA: 0x1C0B76C Offset: 0x1C0B76C VA: 0x1C0B76C Slot: 28
	public override void Reset() { }

	// RVA: 0x1C0B794 Offset: 0x1C0B794 VA: 0x1C0B794 Slot: 32
