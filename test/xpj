	// RVA: 0x21AB98C Offset: 0x21AB98C VA: 0x21AB98C Slot: 7
	protected virtual void OnHover(bool isOver) { }

	// RVA: 0x21ABD2C Offset: 0x21ABD2C VA: 0x21ABD2C Slot: 8
	protected virtual void OnDragOver() { }

	// RVA: 0x21ABE84 Offset: 0x21ABE84 VA: 0x21ABE84 Slot: 9
	protected virtual void OnDragOut() { }

	// RVA: 0x21ABF28 Offset: 0x21ABF28 VA: 0x21ABF28 Slot: 10
	protected virtual void OnSelect(bool isSelected) { }

	// RVA: 0x21AC71C Offset: 0x21AC71C VA: 0x21AC71C
	protected void ChangeTweenColor(float duration, Color c) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC91E4C Offset: 0xC91E4C VA: 0xC91E4C
public class UIMultiTouch : MonoBehaviour // TypeDefIndex: 7836
{
	// Fields
	public List<EventDelegate> onDragUpdate; // 0x18
	public List<EventDelegate> onClick; // 0x20
	public float releaseRange; // 0x28
	protected Vector2 startPosition; // 0x2C
	protected bool isRangeOver; // 0x34
	protected int touchMax; // 0x38

	// Properties
	public bool IsEnabled { get; set; }

	// Methods

	// RVA: 0x21AC864 Offset: 0x21AC864 VA: 0x21AC864
	public void .ctor() { }

	// RVA: 0x21AC8FC Offset: 0x21AC8FC VA: 0x21AC8FC
	public bool get_IsEnabled() { }

	// RVA: 0x21AC904 Offset: 0x21AC904 VA: 0x21AC904
	public void set_IsEnabled(bool value) { }

	// RVA: 0x21AC94C Offset: 0x21AC94C VA: 0x21AC94C
	protected void OnEnable() { }

	// RVA: 0x21AC978 Offset: 0x21AC978 VA: 0x21AC978
	protected void Init() { }

	// RVA: 0x21AC980 Offset: 0x21AC980 VA: 0x21AC980
	protected void Update() { }

	// RVA: 0x21ACAD8 Offset: 0x21ACAD8 VA: 0x21ACAD8
	protected void OnDrag(Vector2 v) { }

	// RVA: 0x21ACBE8 Offset: 0x21ACBE8 VA: 0x21ACBE8
	public void OnClick() { }
}

// Namespace: 
public class UINarrowFigureRender : UITweenRenderer // TypeDefIndex: 7837
{
	// Fields
	protected static readonly int TEXTURE_PAGE_SIZE; // 0x0
	protected static readonly int MAIN_SIZE_X; // 0x4
	protected static readonly int MAIN_SIZE_Y; // 0x8
	protected static readonly int BODY_SIZE_X; // 0xC
	protected static readonly int BODY_SIZE_Y; // 0x10
	protected static readonly ReadOnlyCollection<Vector2> bodyTopTable; // 0x18
	protected static readonly Vector2 bodySize; // 0x20
	protected static readonly Vector2 bodyTextureSize; // 0x28
	protected int svtId; // 0x184
	protected int imageLimitCount; // 0x188
	protected int textureImageLimitCount; // 0x18C

	// Methods

	// RVA: 0x21ACC78 Offset: 0x21ACC78 VA: 0x21ACC78
	public void .ctor() { }

	// RVA: 0x21ACC88 Offset: 0x21ACC88 VA: 0x21ACC88
	public static string GetAssetName(int svtId, int imageLimitCount) { }

	// RVA: 0x21ACDE4 Offset: 0x21ACDE4 VA: 0x21ACDE4
	public void SetCharacter(int svtId, int imageLimitCount) { }

	// RVA: 0x21ACEA8 Offset: 0x21ACEA8 VA: 0x21ACEA8
	public Vector2 GetBodySize() { }

	// RVA: 0x21ACF10 Offset: 0x21ACF10 VA: 0x21ACF10
	public Rect GetBodyUvRect() { }

	// RVA: 0x21AD048 Offset: 0x21AD048 VA: 0x21AD048
	public Texture2D GetBodyTexture(AssetData assetData) { }

	// RVA: 0x21AD214 Offset: 0x21AD214 VA: 0x21AD214
	public Texture2D GetBodyAlphaTexture(AssetData assetData) { }

	// RVA: 0x21AD37C Offset: 0x21AD37C VA: 0x21AD37C
	public void SetAlpha(float alpha) { }

	// RVA: 0x21AD3C0 Offset: 0x21AD3C0 VA: 0x21AD3C0
	public void MoveAlpha(float duration, float alpha) { }

	// RVA: 0x21AD474 Offset: 0x21AD474 VA: 0x21AD474
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x21AD648 Offset: 0x21AD648 VA: 0x21AD648
	public void SetLayer(int layer) { }

	// RVA: 0x21AD6C0 Offset: 0x21AD6C0 VA: 0x21AD6C0
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x21AD9C0 Offset: 0x21AD9C0 VA: 0x21AD9C0
	private static void .cctor() { }
}

// Namespace: 
public enum UINarrowFigureRender.DispType // TypeDefIndex: 7838
{
	// Fields
	public int value__; // 0x0
	public const UINarrowFigureRender.DispType FULL = 0;
	public const UINarrowFigureRender.DispType USER_SELECT = 1;
	public const UINarrowFigureRender.DispType MY_ROOM = 2;
}

// Namespace: 
public class UINarrowFigureTexture : UINarrowFigureRender // TypeDefIndex: 7839
{
	// Fields
	[SerializeField] // RVA: 0xCC36D8 Offset: 0xCC36D8 VA: 0xCC36D8
	protected UITexture bodyTexture; // 0x190
	protected AssetData assetData; // 0x198
	protected string loadName; // 0x1A0
	protected Action callbackFunc; // 0x1A8

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x21ADBB0 Offset: 0x21ADBB0 VA: 0x21ADBB0
	public void .ctor() { }

	// RVA: 0x21ADC20 Offset: 0x21ADC20 VA: 0x21ADC20
	protected void Awake() { }

	// RVA: 0x21ADC5C Offset: 0x21ADC5C VA: 0x21ADC5C Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x21ADCC8 Offset: 0x21ADCC8 VA: 0x21ADCC8
	public bool get_IsLoad() { }

	// RVA: 0x21ADCD8 Offset: 0x21ADCD8 VA: 0x21ADCD8
	public void Destroy() { }

	// RVA: 0x21ADF4C Offset: 0x21ADF4C VA: 0x21ADF4C
	protected void OnDestroy() { }

	// RVA: 0x21ADF50 Offset: 0x21ADF50 VA: 0x21ADF50
	public void SetActive(bool isActive) { }

	// RVA: 0x21ADCDC Offset: 0x21ADCDC VA: 0x21ADCDC
	public void ReleaseCharacter() { }

	// RVA: 0x21ADFA0 Offset: 0x21ADFA0 VA: 0x21ADFA0
	public void SetHideCharacter(Action callbackFunc) { }

	// RVA: 0x21ADFB8 Offset: 0x21ADFB8 VA: 0x21ADFB8
	public void SetCharacter(int svtId, int imageLimitCount, Action callbackFunc) { }

	// RVA: 0x21AE68C Offset: 0x21AE68C VA: 0x21AE68C
	protected void EndLoadAsset(AssetData assetData) { }

	// RVA: 0x21AE504 Offset: 0x21AE504 VA: 0x21AE504
	protected void ClearTexture() { }

	// RVA: 0x21AE290 Offset: 0x21AE290 VA: 0x21AE290
	protected void SetTexture() { }

	// RVA: 0x21AE770 Offset: 0x21AE770 VA: 0x21AE770
	public void SetDepth(int d) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC91E84 Offset: 0xC91E84 VA: 0xC91E84
[AddComponentMenu] // RVA: 0xC91E84 Offset: 0xC91E84 VA: 0xC91E84
public class UIPanel : UIRect // TypeDefIndex: 7840
{
	// Fields
	[HideInInspector] // RVA: 0xCC36E8 Offset: 0xCC36E8 VA: 0xCC36E8
	[SerializeField] // RVA: 0xCC36E8 Offset: 0xCC36E8 VA: 0xCC36E8
	private float mClipTextureRotation; // 0x8C
	public static List<UIPanel> list; // 0x0
	public static HashSet<UIPanel> updateAgainPanels; // 0x8
	public UIPanel.OnGeometryUpdated onGeometryUpdated; // 0x90
	public bool showInPanelTool; // 0x98
	public bool generateNormals; // 0x99
	public bool widgetsAreStatic; // 0x9A
	public bool cullWhileDragging; // 0x9B
	public bool alwaysOnScreen; // 0x9C
	public bool anchorOffset; // 0x9D
	public bool softBorderPadding; // 0x9E
	public UIPanel.RenderQueue renderQueue; // 0xA0
	public int startingRenderQueue; // 0xA4
	public List<UIWidget> widgets; // 0xA8
	public List<UIDrawCall> drawCalls; // 0xB0
	public Matrix4x4 worldToLocal; // 0xB8
	public Vector4 drawCallClipRange; // 0xF8
	public UIPanel.OnClippingMoved onClipMove; // 0x108
	[HideInInspector] // RVA: 0xCC3720 Offset: 0xCC3720 VA: 0xCC3720
	[SerializeField] // RVA: 0xCC3720 Offset: 0xCC3720 VA: 0xCC3720
	private Texture2D mClipTexture; // 0x110
	[HideInInspector] // RVA: 0xCC3758 Offset: 0xCC3758 VA: 0xCC3758
	[SerializeField] // RVA: 0xCC3758 Offset: 0xCC3758 VA: 0xCC3758
	private float mAlpha; // 0x118
	[HideInInspector] // RVA: 0xCC3790 Offset: 0xCC3790 VA: 0xCC3790
	[SerializeField] // RVA: 0xCC3790 Offset: 0xCC3790 VA: 0xCC3790
	private UIDrawCall.Clipping mClipping; // 0x11C
	[HideInInspector] // RVA: 0xCC37C8 Offset: 0xCC37C8 VA: 0xCC37C8
	[SerializeField] // RVA: 0xCC37C8 Offset: 0xCC37C8 VA: 0xCC37C8
	private Vector4 mClipRange; // 0x120
	[HideInInspector] // RVA: 0xCC3800 Offset: 0xCC3800 VA: 0xCC3800
	[SerializeField] // RVA: 0xCC3800 Offset: 0xCC3800 VA: 0xCC3800
	private Vector2 mClipSoftness; // 0x130
	[HideInInspector] // RVA: 0xCC3838 Offset: 0xCC3838 VA: 0xCC3838
	[SerializeField] // RVA: 0xCC3838 Offset: 0xCC3838 VA: 0xCC3838
	private int mDepth; // 0x138
	[HideInInspector] // RVA: 0xCC3870 Offset: 0xCC3870 VA: 0xCC3870
	[SerializeField] // RVA: 0xCC3870 Offset: 0xCC3870 VA: 0xCC3870
	private int mSortingOrder; // 0x13C
	private bool mRebuild; // 0x140
	private bool mResized; // 0x141
	[SerializeField] // RVA: 0xCC38A8 Offset: 0xCC38A8 VA: 0xCC38A8
	private Vector2 mClipOffset; // 0x144
	private float mCullTime; // 0x14C
	private float mUpdateTime; // 0x150
	private int mUpdatedFrame; // 0x154
	private int mMatrixFrame; // 0x158
	private int mAlphaFrameID; // 0x15C
	private int mLayer; // 0x160
	private static float[] mTemp; // 0x10
	private Vector2 mMin; // 0x164
	private Vector2 mMax; // 0x16C
	private bool mHalfPixelOffset; // 0x174
	private bool mSortWidgets; // 0x175
	private bool mUpdateScroll; // 0x176
	private UIPanel mParentPanel; // 0x178
	private static Vector3[] mCorners; // 0x18
	private static int mUpdateFrame; // 0x20
	public static bool mUpdating; // 0x24
	private UIDrawCall.OnRenderCallback mOnRender; // 0x180
	private bool mForced; // 0x188
	[CompilerGeneratedAttribute] // RVA: 0xCC38B8 Offset: 0xCC38B8 VA: 0xCC38B8
	private static Comparison<UIPanel> <>f__mg$cache0; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCC38C8 Offset: 0xCC38C8 VA: 0xCC38C8
	private static Comparison<UIPanel> <>f__mg$cache1; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xCC38D8 Offset: 0xCC38D8 VA: 0xCC38D8
	private static Comparison<UIWidget> <>f__mg$cache2; // 0x38

	// Properties
	public float clipTextureRotation { get; set; }
	public Vector4 clipTextureRotationInfo { get; }
	public bool IsUpdated { get; }
	public static int nextUnusedDepth { get; }
	public override bool canBeAnchored { get; }
	public override float alpha { get; set; }
	public int depth { get; set; }
	public int sortingOrder { get; set; }
	public float width { get; }
	public float height { get; }
	public bool halfPixelOffset { get; }
	public bool usedForUI { get; }
	public Vector3 drawCallOffset { get; }
	public UIDrawCall.Clipping clipping { get; set; }
	public UIPanel parentPanel { get; }
	public int clipCount { get; }
	public bool hasClipping { get; }
	public bool hasCumulativeClipping { get; }
	[ObsoleteAttribute] // RVA: 0xD4BCB4 Offset: 0xD4BCB4 VA: 0xD4BCB4
	public bool clipsChildren { get; }
	public Vector2 clipOffset { get; set; }
	public Texture2D clipTexture { get; set; }
	[ObsoleteAttribute] // RVA: 0xD4BCEC Offset: 0xD4BCEC VA: 0xD4BCEC
	public Vector4 clipRange { get; set; }
	public Vector4 baseClipRegion { get; set; }
	public Vector4 finalClipRegion { get; }
	public Vector2 clipSoftness { get; set; }
	public override Vector3[] localCorners { get; }
	public override Vector3[] worldCorners { get; }

	// Methods

	// RVA: 0x21AED0C Offset: 0x21AED0C VA: 0x21AED0C
	public void .ctor() { }

	// RVA: 0x21AF044 Offset: 0x21AF044 VA: 0x21AF044
	public float get_clipTextureRotation() { }

	// RVA: 0x21AF04C Offset: 0x21AF04C VA: 0x21AF04C
	public void set_clipTextureRotation(float value) { }

	// RVA: 0x21AF060 Offset: 0x21AF060 VA: 0x21AF060
	public Vector4 get_clipTextureRotationInfo() { }

	// RVA: 0x21AF0A0 Offset: 0x21AF0A0 VA: 0x21AF0A0
	public bool get_IsUpdated() { }

	// RVA: 0x21AF118 Offset: 0x21AF118 VA: 0x21AF118
	public static int get_nextUnusedDepth() { }

	// RVA: 0x21AF280 Offset: 0x21AF280 VA: 0x21AF280 Slot: 6
	public override bool get_canBeAnchored() { }

	// RVA: 0x21AF290 Offset: 0x21AF290 VA: 0x21AF290 Slot: 7
	public override float get_alpha() { }

	// RVA: 0x21AF298 Offset: 0x21AF298 VA: 0x21AF298 Slot: 8
	public override void set_alpha(float value) { }

	// RVA: 0x21AF278 Offset: 0x21AF278 VA: 0x21AF278
	public int get_depth() { }

	// RVA: 0x21AF420 Offset: 0x21AF420 VA: 0x21AF420
	public void set_depth(int value) { }

	// RVA: 0x21AF558 Offset: 0x21AF558 VA: 0x21AF558
	public int get_sortingOrder() { }

	// RVA: 0x21AF560 Offset: 0x21AF560 VA: 0x21AF560
	public void set_sortingOrder(int value) { }

	// RVA: 0x21AFA50 Offset: 0x21AFA50 VA: 0x21AFA50
	public static int CompareFunc(UIPanel a, UIPanel b) { }

	// RVA: 0x21AFB98 Offset: 0x21AFB98 VA: 0x21AFB98
	public float get_width() { }

	// RVA: 0x21AFC38 Offset: 0x21AFC38 VA: 0x21AFC38
	public float get_height() { }

	// RVA: 0x21AFC50 Offset: 0x21AFC50 VA: 0x21AFC50
	public bool get_halfPixelOffset() { }

	// RVA: 0x21AFC58 Offset: 0x21AFC58 VA: 0x21AFC58
	public bool get_usedForUI() { }

	// RVA: 0x21AFD38 Offset: 0x21AFD38 VA: 0x21AFD38
	public Vector3 get_drawCallOffset() { }

	// RVA: 0x21B0210 Offset: 0x21B0210 VA: 0x21B0210
	public UIDrawCall.Clipping get_clipping() { }

	// RVA: 0x21B0218 Offset: 0x21B0218 VA: 0x21B0218
	public void set_clipping(UIDrawCall.Clipping value) { }

	// RVA: 0x21B023C Offset: 0x21B023C VA: 0x21B023C
	public UIPanel get_parentPanel() { }

	// RVA: 0x21B0244 Offset: 0x21B0244 VA: 0x21B0244
	public int get_clipCount() { }

	// RVA: 0x21B02F0 Offset: 0x21B02F0 VA: 0x21B02F0
	public bool get_hasClipping() { }

	// RVA: 0x21B0304 Offset: 0x21B0304 VA: 0x21B0304
	public bool get_hasCumulativeClipping() { }

	// RVA: 0x21B0320 Offset: 0x21B0320 VA: 0x21B0320
	public bool get_clipsChildren() { }

	// RVA: 0x21B033C Offset: 0x21B033C VA: 0x21B033C
	public Vector2 get_clipOffset() { }

	// RVA: 0x21B0348 Offset: 0x21B0348 VA: 0x21B0348
	public void set_clipOffset(Vector2 value) { }

	// RVA: 0x21B043C Offset: 0x21B043C VA: 0x21B043C
	private void InvalidateClipping() { }

	// RVA: 0x21B09A4 Offset: 0x21B09A4 VA: 0x21B09A4
	public Texture2D get_clipTexture() { }

	// RVA: 0x21B09AC Offset: 0x21B09AC VA: 0x21B09AC
	public void set_clipTexture(Texture2D value) { }

	// RVA: 0x21B0A34 Offset: 0x21B0A34 VA: 0x21B0A34
	public Vector4 get_clipRange() { }

	// RVA: 0x21B0A5C Offset: 0x21B0A5C VA: 0x21B0A5C
	public void set_clipRange(Vector4 value) { }

	// RVA: 0x21B0A48 Offset: 0x21B0A48 VA: 0x21B0A48
	public Vector4 get_baseClipRegion() { }

	// RVA: 0x21B0A60 Offset: 0x21B0A60 VA: 0x21B0A60
	public void set_baseClipRegion(Vector4 value) { }

	// RVA: 0x21B0C5C Offset: 0x21B0C5C VA: 0x21B0C5C
	public Vector4 get_finalClipRegion() { }

	// RVA: 0x21B0CD8 Offset: 0x21B0CD8 VA: 0x21B0CD8
	public Vector2 get_clipSoftness() { }

	// RVA: 0x21B0CE4 Offset: 0x21B0CE4 VA: 0x21B0CE4
	public void set_clipSoftness(Vector2 value) { }

	// RVA: 0x21B0D88 Offset: 0x21B0D88 VA: 0x21B0D88 Slot: 10
	public override Vector3[] get_localCorners() { }

	// RVA: 0x21B1134 Offset: 0x21B1134 VA: 0x21B1134 Slot: 11
	public override Vector3[] get_worldCorners() { }

	// RVA: 0x21B1B40 Offset: 0x21B1B40 VA: 0x21B1B40 Slot: 13
	public override Vector3[] GetSides(Transform relativeTo) { }

	// RVA: 0x21B2454 Offset: 0x21B2454 VA: 0x21B2454 Slot: 12
	public override void Invalidate(bool includeChildren) { }

	// RVA: 0x21B2524 Offset: 0x21B2524 VA: 0x21B2524 Slot: 9
	public override float CalculateFinalAlpha(int frameID) { }

	// RVA: 0x21B26C4 Offset: 0x21B26C4 VA: 0x21B26C4 Slot: 18
	public override void SetRect(float x, float y, float width, float height) { }

	// RVA: 0x21B2EDC Offset: 0x21B2EDC VA: 0x21B2EDC
	public bool IsVisible(Vector3 a, Vector3 b, Vector3 c, Vector3 d) { }

	// RVA: 0x21B33C4 Offset: 0x21B33C4 VA: 0x21B33C4
	public bool IsVisible(Vector3 worldPos) { }

	// RVA: 0x21B3480 Offset: 0x21B3480 VA: 0x21B3480
	public bool IsVisible(UIWidget w) { }

	// RVA: 0x21B3660 Offset: 0x21B3660 VA: 0x21B3660
	public bool Affects(UIWidget w) { }

	[ContextMenu] // RVA: 0xD38484 Offset: 0xD38484 VA: 0xD38484
	// RVA: 0x21B37AC Offset: 0x21B37AC VA: 0x21B37AC
	public void RebuildAllDrawCalls() { }

	// RVA: 0x21AF344 Offset: 0x21AF344 VA: 0x21AF344
	public void SetDirty() { }

	// RVA: 0x21B37B8 Offset: 0x21B37B8 VA: 0x21B37B8
	private void Awake() { }

	// RVA: 0x21B38B0 Offset: 0x21B38B0 VA: 0x21B38B0
	private void FindParent() { }

	// RVA: 0x21B39C0 Offset: 0x21B39C0 VA: 0x21B39C0 Slot: 19
	public override void ParentHasChanged() { }

	// RVA: 0x21B3BB0 Offset: 0x21B3BB0 VA: 0x21B3BB0 Slot: 20
	protected override void OnStart() { }

	// RVA: 0x21B3BEC Offset: 0x21B3BEC VA: 0x21B3BEC Slot: 14
	protected override void OnEnable() { }

	// RVA: 0x21B3D38 Offset: 0x21B3D38 VA: 0x21B3D38 Slot: 15
	protected override void OnInit() { }

	// RVA: 0x21B4188 Offset: 0x21B4188 VA: 0x21B4188 Slot: 16
	protected override void OnDisable() { }

	// RVA: 0x21B329C Offset: 0x21B329C VA: 0x21B329C
	private void UpdateTransformMatrix() { }

	// RVA: 0x21B44CC Offset: 0x21B44CC VA: 0x21B44CC Slot: 17
	protected override void OnAnchor() { }

	// RVA: 0x21B53A0 Offset: 0x21B53A0 VA: 0x21B53A0
	private void LateUpdate() { }

	// RVA: 0x21B58F0 Offset: 0x21B58F0 VA: 0x21B58F0
	private void UpdateSelf() { }

	// RVA: 0x21B6A24 Offset: 0x21B6A24 VA: 0x21B6A24
	public void SortWidgets() { }

	// RVA: 0x21B6020 Offset: 0x21B6020 VA: 0x21B6020
	private void FillAllDrawCalls() { }

	// RVA: 0x21B66FC Offset: 0x21B66FC VA: 0x21B66FC
	private bool FillDrawCall(UIDrawCall dc) { }

	// RVA: 0x21AF578 Offset: 0x21AF578 VA: 0x21AF578
	private void UpdateDrawCalls() { }

	// RVA: 0x21B5B18 Offset: 0x21B5B18 VA: 0x21B5B18
	private void UpdateLayers() { }

	// RVA: 0x21B5D7C Offset: 0x21B5D7C VA: 0x21B5D7C
	private void UpdateWidgets() { }

	// RVA: 0x21B6E94 Offset: 0x21B6E94 VA: 0x21B6E94
	public UIDrawCall FindDrawCall(UIWidget w) { }

	// RVA: 0x21B739C Offset: 0x21B739C VA: 0x21B739C
	public void AddWidget(UIWidget w) { }

	// RVA: 0x21B7570 Offset: 0x21B7570 VA: 0x21B7570
	public void RemoveWidget(UIWidget w) { }

	// RVA: 0x21B7698 Offset: 0x21B7698 VA: 0x21B7698
	public void Refresh() { }

	// RVA: 0x21B779C Offset: 0x21B779C VA: 0x21B779C Slot: 22
	public virtual Vector3 CalculateConstrainOffset(Vector2 min, Vector2 max) { }

	// RVA: 0x21B7924 Offset: 0x21B7924 VA: 0x21B7924
	public bool ConstrainTargetToBounds(Transform target, ref Bounds targetBounds, bool immediate) { }

	// RVA: 0x21B7D98 Offset: 0x21B7D98 VA: 0x21B7D98
	public bool ConstrainTargetToBounds(Transform target, bool immediate) { }

	// RVA: 0x21B7E10 Offset: 0x21B7E10 VA: 0x21B7E10
	public static UIPanel Find(Transform trans) { }

	// RVA: 0x21B7F90 Offset: 0x21B7F90 VA: 0x21B7F90
	public static UIPanel Find(Transform trans, bool createIfMissing) { }

	// RVA: 0x21B7E7C Offset: 0x21B7E7C VA: 0x21B7E7C
	public static UIPanel Find(Transform trans, bool createIfMissing, int layer) { }

	// RVA: 0x21AFEE8 Offset: 0x21AFEE8 VA: 0x21AFEE8
	public Vector2 GetWindowSize() { }

	// RVA: 0x21AFB9C Offset: 0x21AFB9C VA: 0x21AFB9C
	public Vector2 GetViewSize() { }

	// RVA: 0x21B80D4 Offset: 0x21B80D4 VA: 0x21B80D4
	public void EndShowOverWriteRange(float overWriteValue) { }

	// RVA: 0x21B80DC Offset: 0x21B80DC VA: 0x21B80DC
	private static void .cctor() { }
}

// Namespace: 
public enum UIPanel.RenderQueue // TypeDefIndex: 7841
{
	// Fields
	public int value__; // 0x0
	public const UIPanel.RenderQueue Automatic = 0;
	public const UIPanel.RenderQueue StartAt = 1;
	public const UIPanel.RenderQueue Explicit = 2;
}

// Namespace: 
public sealed class UIPanel.OnGeometryUpdated : MulticastDelegate // TypeDefIndex: 7842
{
	// Methods

	// RVA: 0x21B8214 Offset: 0x21B8214 VA: 0x21B8214
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x21B719C Offset: 0x21B719C VA: 0x21B719C Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x21B8224 Offset: 0x21B8224 VA: 0x21B8224 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x21B8258 Offset: 0x21B8258 VA: 0x21B8258 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UIPanel.OnClippingMoved : MulticastDelegate // TypeDefIndex: 7843
{
	// Methods

	// RVA: 0x21B81D4 Offset: 0x21B81D4 VA: 0x21B81D4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x21B0604 Offset: 0x21B0604 VA: 0x21B0604 Slot: 11
	public virtual void Invoke(UIPanel panel) { }

	// RVA: 0x21B81E4 Offset: 0x21B81E4 VA: 0x21B81E4 Slot: 12
	public virtual IAsyncResult BeginInvoke(UIPanel panel, AsyncCallback callback, object object) { }

	// RVA: 0x21B8208 Offset: 0x21B8208 VA: 0x21B8208 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC91ED0 Offset: 0xC91ED0 VA: 0xC91ED0
public class UIPlaySystemSe : MonoBehaviour // TypeDefIndex: 7844
{
	// Fields
	public SeManager.SystemSeKind kind; // 0x18
	public UIPlaySystemSe.Trigger trigger; // 0x1C
	private bool mIsOver; // 0x20

	// Methods

	// RVA: 0x21B9C04 Offset: 0x21B9C04 VA: 0x21B9C04
	public void .ctor() { }

	// RVA: 0x21B9C0C Offset: 0x21B9C0C VA: 0x21B9C0C
	private void OnHover(bool isOver) { }

	// RVA: 0x21B9CE4 Offset: 0x21B9CE4 VA: 0x21B9CE4
	private void OnPress(bool isPressed) { }

	// RVA: 0x21B9DBC Offset: 0x21B9DBC VA: 0x21B9DBC
	private void OnClick() { }

	// RVA: 0x21B9E4C Offset: 0x21B9E4C VA: 0x21B9E4C
	private void OnSelect(bool isSelected) { }

	// RVA: 0x21B9EF8 Offset: 0x21B9EF8 VA: 0x21B9EF8
	public void Play() { }
}

// Namespace: 
public enum UIPlaySystemSe.Trigger // TypeDefIndex: 7845
{
	// Fields
	public int value__; // 0x0
	public const UIPlaySystemSe.Trigger OnClick = 0;
	public const UIPlaySystemSe.Trigger OnMouseOver = 1;
	public const UIPlaySystemSe.Trigger OnMouseOut = 2;
	public const UIPlaySystemSe.Trigger OnPress = 3;
	public const UIPlaySystemSe.Trigger OnRelease = 4;
	public const UIPlaySystemSe.Trigger Custom = 5;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC91F08 Offset: 0xC91F08 VA: 0xC91F08
[AddComponentMenu] // RVA: 0xC91F08 Offset: 0xC91F08 VA: 0xC91F08
public class UIRotSprite : UISprite // TypeDefIndex: 7846
{
	// Fields
	private Rect mOuterUV; // 0x1EC

	// Properties
	private Vector4 drawingUVs { get; }
	private Color32 drawingColor { get; }

	// Methods

	// RVA: 0x21C3E90 Offset: 0x21C3E90 VA: 0x21C3E90
	public void .ctor() { }

	// RVA: 0x21C3EA8 Offset: 0x21C3EA8 VA: 0x21C3EA8
	private Vector4 get_drawingUVs() { }

	// RVA: 0x21C3FF0 Offset: 0x21C3FF0 VA: 0x21C3FF0
	private Color32 get_drawingColor() { }

	// RVA: 0x21C4148 Offset: 0x21C4148 VA: 0x21C4148 Slot: 38
	public override void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }

	// RVA: 0x21C4564 Offset: 0x21C4564 VA: 0x21C4564
	private void RotFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols, Rect outer, Rect inner) { }
}

// Namespace: 
public class UISkinSprite : UISprite // TypeDefIndex: 7847
{
	// Fields
	[HideInInspector] // RVA: 0xCC38E8 Offset: 0xCC38E8 VA: 0xCC38E8
	[SerializeField] // RVA: 0xCC38E8 Offset: 0xCC38E8 VA: 0xCC38E8
	private AtlasManager.SkinType skinType; // 0x1EC
	[HideInInspector] // RVA: 0xCC3920 Offset: 0xCC3920 VA: 0xCC3920
	[SerializeField] // RVA: 0xCC3920 Offset: 0xCC3920 VA: 0xCC3920
	private UIAtlas defaultAtlas; // 0x1F0
	[SerializeField] // RVA: 0xCC3958 Offset: 0xCC3958 VA: 0xCC3958
	private List<string> spriteNameList; // 0x1F8
	[SerializeField] // RVA: 0xCC3968 Offset: 0xCC3968 VA: 0xCC3968
	private List<UISkinSprite.ReplaceData> replaceDataList; // 0x200

	// Methods

	// RVA: 0x1D800BC Offset: 0x1D800BC VA: 0x1D800BC
	public void .ctor() { }

	// RVA: 0x1D80130 Offset: 0x1D80130 VA: 0x1D80130
	private void OnEnable() { }

	// RVA: 0x1D80158 Offset: 0x1D80158 VA: 0x1D80158
	public void setupSprite() { }

	// RVA: 0x1D80714 Offset: 0x1D80714 VA: 0x1D80714
	public void OnDisable() { }

	// RVA: 0x1D8061C Offset: 0x1D8061C VA: 0x1D8061C
	private string GetSpriteName(int uiChangeType) { }

	// RVA: 0x1D80740 Offset: 0x1D80740 VA: 0x1D80740
	private string GetReplaceSpriteName(int uiChangeType, int version) { }
}

// Namespace: 
[Serializable]
public class UISkinSprite.ReplaceData // TypeDefIndex: 7848
{
	// Fields
	public int UiChangeType; // 0x10
	public int Version; // 0x14
	public string SpriteName; // 0x18

	// Methods

	// RVA: 0x1D80884 Offset: 0x1D80884 VA: 0x1D80884
	public void .ctor() { }
}

// Namespace: 
public class UISliderWithButton : UIProgressBar // TypeDefIndex: 7849
{
	// Fields
	[HideInInspector] // RVA: 0xCC3978 Offset: 0xCC3978 VA: 0xCC3978
	[SerializeField] // RVA: 0xCC3978 Offset: 0xCC3978 VA: 0xCC3978
	private Transform foreground; // 0x68
	[HideInInspector] // RVA: 0xCC39B0 Offset: 0xCC39B0 VA: 0xCC39B0
	[SerializeField] // RVA: 0xCC39B0 Offset: 0xCC39B0 VA: 0xCC39B0
	private float rawValue; // 0x70
	[HideInInspector] // RVA: 0xCC39E8 Offset: 0xCC39E8 VA: 0xCC39E8
	[SerializeField] // RVA: 0xCC39E8 Offset: 0xCC39E8 VA: 0xCC39E8
	private UISliderWithButton.Direction direction; // 0x74
	[HideInInspector] // RVA: 0xCC3A20 Offset: 0xCC3A20 VA: 0xCC3A20
	[SerializeField] // RVA: 0xCC3A20 Offset: 0xCC3A20 VA: 0xCC3A20
	protected bool mInverted; // 0x78
	[SerializeField] // RVA: 0xCC3A58 Offset: 0xCC3A58 VA: 0xCC3A58
	protected UICommonButton plusButton; // 0x80
	[SerializeField] // RVA: 0xCC3A68 Offset: 0xCC3A68 VA: 0xCC3A68
	protected UICommonButton minusButton; // 0x88
	[SerializeField] // RVA: 0xCC3A78 Offset: 0xCC3A78 VA: 0xCC3A78
	protected UILabel minValue; // 0x90
	[SerializeField] // RVA: 0xCC3A88 Offset: 0xCC3A88 VA: 0xCC3A88
	protected UILabel maxValue; // 0x98
	[SerializeField] // RVA: 0xCC3A98 Offset: 0xCC3A98 VA: 0xCC3A98
	protected UILabel minLabel; // 0xA0
	[SerializeField] // RVA: 0xCC3AA8 Offset: 0xCC3AA8 VA: 0xCC3AA8
	protected UILabel maxLabel; // 0xA8
	protected int maxStep; // 0xB0
	protected int minStep; // 0xB4
	protected int nowStep; // 0xB8
	private const int ValueNone = 0;
	private const int ValuePlus = 1;
	private const int ValueMinus = -1;
	private int valueChange; // 0xBC
	private bool isTouchEnable; // 0xC0

	// Properties
	[ObsoleteAttribute] // RVA: 0xD4BD24 Offset: 0xD4BD24 VA: 0xD4BD24
	public float sliderValue { get; set; }
	[ObsoleteAttribute] // RVA: 0xD4BD5C Offset: 0xD4BD5C VA: 0xD4BD5C
	public bool inverted { get; set; }

	// Methods

	// RVA: 0x1D813A8 Offset: 0x1D813A8 VA: 0x1D813A8
	public void .ctor() { }

	// RVA: 0x1D813C4 Offset: 0x1D813C4 VA: 0x1D813C4
	public float get_sliderValue() { }

	// RVA: 0x1D813CC Offset: 0x1D813CC VA: 0x1D813CC
	public void set_sliderValue(float value) { }

	// RVA: 0x1D813D4 Offset: 0x1D813D4 VA: 0x1D813D4
	public bool get_inverted() { }

	// RVA: 0x1D813DC Offset: 0x1D813DC VA: 0x1D813DC
	public void set_inverted(bool value) { }

	// RVA: 0x1D813E0 Offset: 0x1D813E0 VA: 0x1D813E0
	public void init(int max, bool setMax = False) { }

	// RVA: 0x1D81588 Offset: 0x1D81588 VA: 0x1D81588 Slot: 4
	protected override void Upgrade() { }

	// RVA: 0x1D81660 Offset: 0x1D81660 VA: 0x1D81660 Slot: 5
	protected override void OnStart() { }

	// RVA: 0x1D81C48 Offset: 0x1D81C48 VA: 0x1D81C48
	protected void OnPressBackground(GameObject go, bool isPressed) { }

	// RVA: 0x1D81D34 Offset: 0x1D81D34 VA: 0x1D81D34
	protected void OnDragBackground(GameObject go, Vector2 delta) { }

	// RVA: 0x1D81DFC Offset: 0x1D81DFC VA: 0x1D81DFC
	protected void OnPressForeground(GameObject go, bool isPressed) { }

	// RVA: 0x1D82138 Offset: 0x1D82138 VA: 0x1D82138
	protected void OnDragForeground(GameObject go, Vector2 delta) { }

	// RVA: 0x1D82214 Offset: 0x1D82214 VA: 0x1D82214
	protected void OnKey(KeyCode key) { }

	// RVA: 0x1D822F8 Offset: 0x1D822F8 VA: 0x1D822F8
	public void OnClickPlusButton() { }

	// RVA: 0x1D82420 Offset: 0x1D82420 VA: 0x1D82420
	public void OnClickMinusButton() { }

	// RVA: 0x1D82544 Offset: 0x1D82544 VA: 0x1D82544
	public int sliderValueChange() { }

	// RVA: 0x1D8267C Offset: 0x1D8267C VA: 0x1D8267C
	public void normalMode() { }

	// RVA: 0x1D82B4C Offset: 0x1D82B4C VA: 0x1D82B4C
	public void grayMode() { }
}

// Namespace: 
private enum UISliderWithButton.Direction // TypeDefIndex: 7850
{
	// Fields
	public int value__; // 0x0
	public const UISliderWithButton.Direction Horizontal = 0;
	public const UISliderWithButton.Direction Vertical = 1;
	public const UISliderWithButton.Direction Upgraded = 2;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC91F54 Offset: 0xC91F54 VA: 0xC91F54
[AddComponentMenu] // RVA: 0xC91F54 Offset: 0xC91F54 VA: 0xC91F54
public class UISpriteAltMat : UISprite // TypeDefIndex: 7851
{
	// Fields
	protected Material exMaterial; // 0x1F0

	// Properties
	public override Material material { get; }

	// Methods

	// RVA: 0x1D845FC Offset: 0x1D845FC VA: 0x1D845FC
	public void .ctor() { }

	// RVA: 0x1D84600 Offset: 0x1D84600 VA: 0x1D84600 Slot: 24
	public override Material get_material() { }

	// RVA: 0x1D8468C Offset: 0x1D8468C VA: 0x1D8468C
	public void ResetMaterial() { }

	// RVA: 0x1D84700 Offset: 0x1D84700 VA: 0x1D84700
	public void SetMaterialKeepTexture(Material mat) { }
}

// Namespace: 
public class UIStandFigureM : UIStandFigureRender // TypeDefIndex: 7852
{
	// Fields
	protected AssetData assetData; // 0x260
	protected string loadName; // 0x268
	protected Action callbackFunc; // 0x270
	private bool isCrossFade; // 0x278

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x1D85278 Offset: 0x1D85278 VA: 0x1D85278
	public void .ctor() { }

	// RVA: 0x1D8534C Offset: 0x1D8534C VA: 0x1D8534C
	public bool get_IsLoad() { }

	// RVA: 0x1D8535C Offset: 0x1D8535C VA: 0x1D8535C
	public void Dispose() { }

	// RVA: 0x1D853E0 Offset: 0x1D853E0 VA: 0x1D853E0
	protected void OnDestroy() { }

	// RVA: 0x1D730B0 Offset: 0x1D730B0 VA: 0x1D730B0
	public void ReleaseCharacter() { }

	// RVA: 0x1D85A0C Offset: 0x1D85A0C VA: 0x1D85A0C
	public void SetCharacter(int svtId, int limitCount, int lv, Face.Type faceType, Action callbackFunc) { }

	// RVA: 0x1D85AB8 Offset: 0x1D85AB8 VA: 0x1D85AB8
	public bool SetCharacter(int svtId, int imageLimitCount, Face.Type faceType, Action callbackFunc, bool loadRequiredResource = False) { }

	// RVA: 0x1D7087C Offset: 0x1D7087C VA: 0x1D7087C
	public bool SetCharacter(int svtId, int imageLimitCount, Face.Type faceType, int formId, Action callbackFunc, bool loadRequiredResource = False) { }

	// RVA: 0x1D85C0C Offset: 0x1D85C0C VA: 0x1D85C0C
	private string[] GetRequiredResourceNames(int imageId, Face.Type faceType) { }

	// RVA: 0x1D861A0 Offset: 0x1D861A0 VA: 0x1D861A0
	protected void EndLoadAsset(AssetData assetData) { }

	// RVA: 0x1D86294 Offset: 0x1D86294 VA: 0x1D86294
	protected void SetTexture() { }

	// RVA: 0x1D85ACC Offset: 0x1D85ACC VA: 0x1D85ACC
	protected void SetTextureStatus() { }

	// RVA: 0x1D71050 Offset: 0x1D71050 VA: 0x1D71050
	public void SetDispOffset() { }

	// RVA: 0x1D8881C Offset: 0x1D8881C VA: 0x1D8881C
	public void SetOffsetDirect(Vector3 offset) { }

	// RVA: 0x1D888D0 Offset: 0x1D888D0 VA: 0x1D888D0
	public void SetSclDirect(Vector3 scl) { }

	// RVA: 0x1D8892C Offset: 0x1D8892C VA: 0x1D8892C
	private int GetTexturePosition(Face.Type faceType, int faceTextureSize) { }

	// RVA: 0x1D715F4 Offset: 0x1D715F4 VA: 0x1D715F4
	public void SetCrossFadeCharactar(UIStandFigureM inFigure, UIStandFigureM outFigure) { }

	// RVA: 0x1D889EC Offset: 0x1D889EC VA: 0x1D889EC Slot: 39
	public override void SetTweenColor(Color c) { }
}

// Namespace: 
public class UIStandFigureR : MonoBehaviour // TypeDefIndex: 7853
{
	// Fields
	[SerializeField] // RVA: 0xCC3AB8 Offset: 0xCC3AB8 VA: 0xCC3AB8
	protected UITexture bodyTexture; // 0x18
	protected int imageId; // 0x20
	protected ServantScriptEntity.OffsetKind offsetKind; // 0x24
	protected Face.Type faceType; // 0x28
	protected int formId; // 0x2C
	protected List<AssetData> formAssetList; // 0x30
	protected AssetData assetData; // 0x38
	protected RenderTexture renderTexture; // 0x40
	protected List<string> loadNameList; // 0x48
	protected string loadName; // 0x50
	protected Action callbackFunc; // 0x58
	protected Action callbackFuncAfterLoadForms; // 0x60
	protected SvtMultiPortraitEntity svtMultiPortraitEntity; // 0x68
	protected bool isBusyRender; // 0x70
	protected bool isRetryRender; // 0x71
	public bool isAssetLoaded; // 0x72

	// Properties
	public int Id { get; }
	public bool IsLoad { get; }
	public int FormId { get; }
	public UITexture Texture { get; }

	// Methods

	// RVA: 0x1D88D64 Offset: 0x1D88D64 VA: 0x1D88D64
	public void .ctor() { }

	// RVA: 0x1D88DFC Offset: 0x1D88DFC VA: 0x1D88DFC
	public int get_Id() { }

	// RVA: 0x1D88E04 Offset: 0x1D88E04 VA: 0x1D88E04
	public bool get_IsLoad() { }

	// RVA: 0x1D88E14 Offset: 0x1D88E14 VA: 0x1D88E14
	public int get_FormId() { }

	// RVA: 0x1D88E1C Offset: 0x1D88E1C VA: 0x1D88E1C
	public void SetSvtMultiPortraitEntity(SvtMultiPortraitEntity entity) { }

	// RVA: 0x1D88E24 Offset: 0x1D88E24 VA: 0x1D88E24
	public void Destroy() { }

	// RVA: 0x1D88E28 Offset: 0x1D88E28 VA: 0x1D88E28
	protected void OnDestroy() { }

	// RVA: 0x1D89188 Offset: 0x1D89188 VA: 0x1D89188
	public void SetActive(bool isActive) { }

	// RVA: 0x1D891D8 Offset: 0x1D891D8 VA: 0x1D891D8
	public UITexture get_Texture() { }

	// RVA: 0x1D88E2C Offset: 0x1D88E2C VA: 0x1D88E2C
	public void ReleaseCharacter() { }

	// RVA: 0x1D891E0 Offset: 0x1D891E0 VA: 0x1D891E0
	public void SetCharacter(int svtId, int limitCount, int lv, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, Action callbackFunc) { }

	// RVA: 0x1D8943C Offset: 0x1D8943C VA: 0x1D8943C
	public void SetCharacter(int svtId, int imageLimitCount, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, Action callbackFunc) { }

	// RVA: 0x1D89298 Offset: 0x1D89298 VA: 0x1D89298
	public void SetCharacter(int svtId, int imageLimitCount, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, int formId, Action callbackFunc) { }

	// RVA: 0x1D89640 Offset: 0x1D89640 VA: 0x1D89640
	public void SetCharacterForImageId(int imageId, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, int formId, Action callbackFunc) { }

	// RVA: 0x1D897CC Offset: 0x1D897CC VA: 0x1D897CC
	public void EndLoadAsset(AssetData assetData) { }

	// RVA: 0x1D899BC Offset: 0x1D899BC VA: 0x1D899BC
	protected void RequestRenderAsset() { }

	// RVA: 0x1D89AD4 Offset: 0x1D89AD4 VA: 0x1D89AD4
	protected void EndRenderAsset(RenderTexture renderTex) { }

	// RVA: 0x1D89F50 Offset: 0x1D89F50 VA: 0x1D89F50
	public void SetFace(Face.Type faceType) { }

	// RVA: 0x1D89F64 Offset: 0x1D89F64 VA: 0x1D89F64
	public void SetFace(Face.Type faceType, Action callbackFunc) { }

