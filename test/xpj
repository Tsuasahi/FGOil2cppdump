	public void MoveAlphaSpeed(float speed, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x1BC3D00 Offset: 0x1BC3D00 VA: 0x1BC3D00
	protected void EndMoveAlpha() { }

	// RVA: 0x1BC3FD0 Offset: 0x1BC3FD0 VA: 0x1BC3FD0
	public void SetLayer(int layer) { }

	// RVA: 0x1BC4048 Offset: 0x1BC4048 VA: 0x1BC4048
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x1BC4348 Offset: 0x1BC4348 VA: 0x1BC4348
	public void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x1BC43E8 Offset: 0x1BC43E8 VA: 0x1BC43E8
	public void SetSortingOrder(int order) { }

	// RVA: 0x1BC4420 Offset: 0x1BC4420 VA: 0x1BC4420
	private static void .cctor() { }
}

// Namespace: 
public class UIImageM : UIImageRender // TypeDefIndex: 7837
{
	// Fields
	protected AssetData[] assetDataList; // 0x1F0
	protected string[] loadNameList; // 0x1F8
	protected Action callbackFunc; // 0x200
	protected bool isBackImage; // 0x208

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x1BC713C Offset: 0x1BC713C VA: 0x1BC713C
	public void .ctor() { }

	// RVA: 0x1BC7210 Offset: 0x1BC7210 VA: 0x1BC7210
	public bool get_IsLoad() { }

	// RVA: 0x1BC7220 Offset: 0x1BC7220 VA: 0x1BC7220
	public void Destroy() { }

	// RVA: 0x1BC72DC Offset: 0x1BC72DC VA: 0x1BC72DC
	protected void OnDestroy() { }

	// RVA: 0x1BC7224 Offset: 0x1BC7224 VA: 0x1BC7224
	public void ReleaseCharacter() { }

	// RVA: 0x1BC7530 Offset: 0x1BC7530 VA: 0x1BC7530
	public void SetCharacter(string imageName, Face.Type faceType, Action callbackFunc) { }

	// RVA: 0x1BC7AA0 Offset: 0x1BC7AA0 VA: 0x1BC7AA0
	protected void EndLoadAsset() { }

	// RVA: 0x1BC7BC4 Offset: 0x1BC7BC4 VA: 0x1BC7BC4
	protected void SetTexture() { }

	// RVA: 0x1BC79C0 Offset: 0x1BC79C0 VA: 0x1BC79C0
	protected void SetTextureStatus() { }

	// RVA: 0x1BC87E8 Offset: 0x1BC87E8 VA: 0x1BC87E8
	public void SetDispOffset() { }
}

// Namespace: 
public class UIImageRender : UITweenRenderer // TypeDefIndex: 7838
{
	// Fields
	[SerializeField] // RVA: 0xC577E0 Offset: 0xC577E0 VA: 0xC577E0
	protected MeshFilter bodyFilter; // 0x188
	[SerializeField] // RVA: 0xC577F0 Offset: 0xC577F0 VA: 0xC577F0
	protected MeshRenderer bodyRenderer; // 0x190
	public static readonly int MAIN_SIZE_X; // 0x0
	public static readonly int MAIN_SIZE_Y; // 0x4
	public static readonly int BODY_SIZE_X; // 0x8
	public static readonly int BODY_SIZE_Y; // 0xC
	public static readonly int LEFT_X; // 0x10
	public static readonly int RIGHT_X; // 0x14
	public static readonly int TOP_Y; // 0x18
	public static readonly int BOTTOM_Y; // 0x1C
	public static readonly float BODY_U; // 0x20
	public static readonly float BODY_V; // 0x24
	public static readonly float BODY_W; // 0x28
	public static readonly float BODY_H; // 0x2C
	protected bool isShadow; // 0x198
	protected bool isTalkMask; // 0x199
	protected string filterName; // 0x1A0
	protected Color filterColor; // 0x1A8
	protected Vector2 figureOffset; // 0x1B8
	protected Vector2 dispOffset; // 0x1C0
	protected Vector2 dispTop; // 0x1C8
	protected Texture2D[] textureList; // 0x1D0
	protected bool isBusyMoveAlpha; // 0x1D8
	protected GameObject moveAlphaCallbackObject; // 0x1E0
	protected string moveAlphaCallbackFunc; // 0x1E8

	// Methods

	// RVA: 0x1BC71A0 Offset: 0x1BC71A0 VA: 0x1BC71A0
	public void .ctor() { }

	// RVA: 0x1BC7870 Offset: 0x1BC7870 VA: 0x1BC7870
	public static string[] GetAssetNameList(string imageName) { }

	// RVA: 0x1BC88C0 Offset: 0x1BC88C0 VA: 0x1BC88C0
	public bool IsBusyMoveAlpha() { }

	// RVA: 0x1BC88C8 Offset: 0x1BC88C8 VA: 0x1BC88C8
	public Vector2 GetCenterOffset() { }

	// RVA: 0x1BC8964 Offset: 0x1BC8964 VA: 0x1BC8964
	public static Vector2 GetCharacterOffset() { }

	// RVA: 0x1BC8998 Offset: 0x1BC8998 VA: 0x1BC8998
	public static Vector2 GetCharacterOffsetMyroom() { }

	// RVA: 0x1BC89CC Offset: 0x1BC89CC VA: 0x1BC89CC Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x1BC8AE0 Offset: 0x1BC8AE0 VA: 0x1BC8AE0
	public Vector2 GetBodySize() { }

	// RVA: 0x1BC8B64 Offset: 0x1BC8B64 VA: 0x1BC8B64
	public void SetActive(bool isActive) { }

	// RVA: 0x1BC72E0 Offset: 0x1BC72E0 VA: 0x1BC72E0
	public void ReleaseCharacter() { }

	// RVA: 0x1BC8BB4 Offset: 0x1BC8BB4 VA: 0x1BC8BB4
	public void SetCharacter(string imageName, Face.Type faceType, Texture2D[] textureList) { }

	// RVA: 0x1BC7DC0 Offset: 0x1BC7DC0 VA: 0x1BC7DC0
	protected void SetCharacterRender() { }

	// RVA: 0x1BC8D70 Offset: 0x1BC8D70 VA: 0x1BC8D70
	public void SetSharder(string shaderName) { }

	// RVA: 0x1BC8EEC Offset: 0x1BC8EEC VA: 0x1BC8EEC
	public void RecoverSharder() { }

	// RVA: 0x1BC8FC4 Offset: 0x1BC8FC4 VA: 0x1BC8FC4
	public void SetWipeTexture(Texture texture) { }

	// RVA: 0x1BC9208 Offset: 0x1BC9208 VA: 0x1BC9208
	public void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x1BC8BC0 Offset: 0x1BC8BC0 VA: 0x1BC8BC0
	public void SetBaseColor() { }

	// RVA: 0x1BC9260 Offset: 0x1BC9260 VA: 0x1BC9260
	public void SetShadow(bool isShadow) { }

	// RVA: 0x1BC926C Offset: 0x1BC926C VA: 0x1BC926C
	public void SetTalkMask(bool isMask) { }

	// RVA: 0x1BC9278 Offset: 0x1BC9278 VA: 0x1BC9278
	public void SetAlpha(float alpha) { }

	// RVA: 0x1BC8C98 Offset: 0x1BC8C98 VA: 0x1BC8C98
	public void SetFilterColor(Color c) { }

	// RVA: 0x1BC92BC Offset: 0x1BC92BC VA: 0x1BC92BC
	public void SetGradation(float g) { }

	// RVA: 0x1BC93A0 Offset: 0x1BC93A0 VA: 0x1BC93A0
	public void SetVolume(float v) { }

	// RVA: 0x1BC9484 Offset: 0x1BC9484 VA: 0x1BC9484
	public void SetDepth(float d) { }

	// RVA: 0x1BC950C Offset: 0x1BC950C VA: 0x1BC950C
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x1BC97C8 Offset: 0x1BC97C8 VA: 0x1BC97C8
	public void MoveAlphaSpeed(float speed, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x1BC9710 Offset: 0x1BC9710 VA: 0x1BC9710
	protected void EndMoveAlpha() { }

	// RVA: 0x1BC99E0 Offset: 0x1BC99E0 VA: 0x1BC99E0
	public void SetLayer(int layer) { }

	// RVA: 0x1BC9A58 Offset: 0x1BC9A58 VA: 0x1BC9A58
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x1BC9D58 Offset: 0x1BC9D58 VA: 0x1BC9D58
	public void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x1BC9DF8 Offset: 0x1BC9DF8 VA: 0x1BC9DF8
	public void SetSortingOrder(int order) { }

	// RVA: 0x1BC9E30 Offset: 0x1BC9E30 VA: 0x1BC9E30
	private static void .cctor() { }
}

// Namespace: 
[RequireComponent] // RVA: 0xC25B94 Offset: 0xC25B94 VA: 0xC25B94
[AddComponentMenu] // RVA: 0xC25B94 Offset: 0xC25B94 VA: 0xC25B94
public class UILineInput : MonoBehaviour // TypeDefIndex: 7839
{
	// Fields
	protected UIInput mInput; // 0x18

	// Methods

	// RVA: 0x1BD770C Offset: 0x1BD770C VA: 0x1BD770C
	public void .ctor() { }

	// RVA: 0x1BD7714 Offset: 0x1BD7714 VA: 0x1BD7714
	protected bool Init() { }

	// RVA: 0x1BD7820 Offset: 0x1BD7820 VA: 0x1BD7820
	public void SetInputEnable(bool flag) { }

	// RVA: 0x1BD78D0 Offset: 0x1BD78D0 VA: 0x1BD78D0
	public string GetText() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC25C1C Offset: 0xC25C1C VA: 0xC25C1C
public class UILoopListView : MonoBehaviour // TypeDefIndex: 7840
{
	// Fields
	private int itemSize; // 0x18
	protected int minIndex; // 0x1C
	protected int maxIndex; // 0x20
	public UILoopListView.OnInitializeItem onInitializeItem; // 0x28
	private Transform mTrans; // 0x30
	private UIPanel mPanel; // 0x38
	private UIScrollView mScroll; // 0x40
	private UICenterOnChild centerChild; // 0x48
	private bool isHorizontal; // 0x50
	private List<Transform> mChildList; // 0x58
	private List<Transform> realChildList; // 0x60
	private bool isFirstTime; // 0x68
	private int childIdx; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC57800 Offset: 0xC57800 VA: 0xC57800
	private static Comparison<Transform> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1BD7F00 Offset: 0x1BD7F00 VA: 0x1BD7F00
	public void .ctor() { }

	// RVA: 0x1BD7FA0 Offset: 0x1BD7FA0 VA: 0x1BD7FA0
	public void initWrapContent() { }

	// RVA: 0x1BD893C Offset: 0x1BD893C VA: 0x1BD893C
	private bool setScrollViewInfo() { }

	// RVA: 0x1BD80E8 Offset: 0x1BD80E8 VA: 0x1BD80E8
	private void sortBaseOnMovement() { }

	// RVA: 0x1BD8B04 Offset: 0x1BD8B04 VA: 0x1BD8B04
	public void resetChildPos() { }

	// RVA: 0x1BD82CC Offset: 0x1BD82CC VA: 0x1BD82CC
	private void wrapContent() { }

	// RVA: 0x1BD8D9C Offset: 0x1BD8D9C VA: 0x1BD8D9C
	private void OnMove() { }

	// RVA: 0x1BD8C50 Offset: 0x1BD8C50 VA: 0x1BD8C50
	private void updateItem(Transform item, int index) { }

	// RVA: 0x1BD9190 Offset: 0x1BD9190 VA: 0x1BD9190
	public int getChildIdx() { }

	// RVA: 0x1BD9198 Offset: 0x1BD9198 VA: 0x1BD9198
	public void setScrollPos(int idx) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCAE00 Offset: 0xCCAE00 VA: 0xCCAE00
	// RVA: 0x1BD9268 Offset: 0x1BD9268 VA: 0x1BD9268
	private static int <sortBaseOnMovement>m__0(Transform a, Transform b) { }
}

// Namespace: 
public sealed class UILoopListView.OnInitializeItem : MulticastDelegate // TypeDefIndex: 7841
{
	// Methods

	// RVA: 0x1BD92C8 Offset: 0x1BD92C8 VA: 0x1BD92C8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1BD8DA0 Offset: 0x1BD8DA0 VA: 0x1BD8DA0 Slot: 11
	public virtual void Invoke(GameObject go, int wrapIndex, int realIndex) { }

	// RVA: 0x1BD92D8 Offset: 0x1BD92D8 VA: 0x1BD92D8 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, int wrapIndex, int realIndex, AsyncCallback callback, object object) { }

	// RVA: 0x1BD938C Offset: 0x1BD938C VA: 0x1BD938C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class UIMasterFaceRender : UITweenRenderer // TypeDefIndex: 7842
{
	// Fields
	protected static readonly int MAIN_SIZE_X; // 0x0
	protected static readonly int MAIN_SIZE_Y; // 0x4
	protected static readonly int BODY_SIZE_X; // 0x8
	protected static readonly int BODY_SIZE_Y; // 0xC
	protected static readonly ReadOnlyCollection<Vector2> bodyTopTable; // 0x10
	protected static readonly ReadOnlyCollection<Vector2> bodyTextureSizeTable; // 0x18
	protected static readonly ReadOnlyCollection<Vector2> bodySizeTable; // 0x20
	protected UIMasterFaceRender.DispType dispType; // 0x184
	protected int genderType; // 0x188
	protected int equipId; // 0x18C

	// Methods

	// RVA: 0x1BD9398 Offset: 0x1BD9398 VA: 0x1BD9398
	public void .ctor() { }

	// RVA: 0x1BD93A0 Offset: 0x1BD93A0 VA: 0x1BD93A0
	public static string[] GetAssetNameList(UIMasterFaceRender.DispType dispType, int genderType, int equipId, int overWriteImageId = 0) { }

	// RVA: 0x1BD9748 Offset: 0x1BD9748 VA: 0x1BD9748
	public void SetCharacter(UIMasterFaceRender.DispType dispType, int genderType, int equipId) { }

	// RVA: 0x1BD9758 Offset: 0x1BD9758 VA: 0x1BD9758
	public Vector2 GetBodySize() { }

	// RVA: 0x1BD97E8 Offset: 0x1BD97E8 VA: 0x1BD97E8
	public Rect GetBodyUvRect() { }

	// RVA: 0x1BD9940 Offset: 0x1BD9940 VA: 0x1BD9940
	public Texture2D GetBodyTexture(AssetData[] dataList) { }

	// RVA: 0x1BD99C4 Offset: 0x1BD99C4 VA: 0x1BD99C4
	public Texture2D GetMaskTexture(AssetData[] dataList) { }

	// RVA: 0x1BD9A70 Offset: 0x1BD9A70 VA: 0x1BD9A70
	public void SetAlpha(float alpha) { }

	// RVA: 0x1BD9AB4 Offset: 0x1BD9AB4 VA: 0x1BD9AB4
	public void MoveAlpha(float duration, float alpha) { }

	// RVA: 0x1BD9B68 Offset: 0x1BD9B68 VA: 0x1BD9B68
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x1BD9D3C Offset: 0x1BD9D3C VA: 0x1BD9D3C
	public void SetLayer(int layer) { }

	// RVA: 0x1BD9DB4 Offset: 0x1BD9DB4 VA: 0x1BD9DB4
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x1BDA0B4 Offset: 0x1BDA0B4 VA: 0x1BDA0B4
	private static void .cctor() { }
}

// Namespace: 
public enum UIMasterFaceRender.DispType // TypeDefIndex: 7843
{
	// Fields
	public int value__; // 0x0
	public const UIMasterFaceRender.DispType FULL = 0;
	public const UIMasterFaceRender.DispType STATUS = 1;
}

// Namespace: 
public class UIMasterFaceTexture : UIMasterFaceRender // TypeDefIndex: 7844
{
	// Fields
	[SerializeField] // RVA: 0xC57810 Offset: 0xC57810 VA: 0xC57810
	protected UITexture bodyTexture; // 0x190
	protected AssetData[] assetDataList; // 0x198
	protected string[] loadNameList; // 0x1A0
	protected Action callbackFunc; // 0x1A8

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x1BDA34C Offset: 0x1BDA34C VA: 0x1BDA34C
	public void .ctor() { }

	// RVA: 0x1BDA3B4 Offset: 0x1BDA3B4 VA: 0x1BDA3B4 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x1BDA420 Offset: 0x1BDA420 VA: 0x1BDA420
	public bool get_IsLoad() { }

	// RVA: 0x1BDA430 Offset: 0x1BDA430 VA: 0x1BDA430
	public void Destroy() { }

	// RVA: 0x1BDA434 Offset: 0x1BDA434 VA: 0x1BDA434
	protected void OnDestroy() { }

	// RVA: 0x1BDA730 Offset: 0x1BDA730 VA: 0x1BDA730
	public void SetActive(bool isActive) { }

	// RVA: 0x1BDA438 Offset: 0x1BDA438 VA: 0x1BDA438
	public void ReleaseCharacter() { }

	// RVA: 0x1BDA780 Offset: 0x1BDA780 VA: 0x1BDA780
	public void SetCharacter(UIMasterFaceRender.DispType dispType, int genderType, int equipId, Action callbackFunc, int overWriteImageId) { }

	// RVA: 0x1BDA90C Offset: 0x1BDA90C VA: 0x1BDA90C
	protected void EndLoadAsset() { }

	// RVA: 0x1BDAC38 Offset: 0x1BDAC38 VA: 0x1BDAC38
	public void SetDepth(int d) { }
}

// Namespace: 
public class UIMasterFigureRenderOld : UITweenRenderer // TypeDefIndex: 7845
{
	// Fields
	protected static readonly int MAIN_SIZE_X; // 0x0
	protected static readonly int MAIN_SIZE_Y; // 0x4
	protected static readonly int BODY_SIZE_X; // 0x8
	protected static readonly int BODY_SIZE_Y; // 0xC
	protected static readonly ReadOnlyCollection<Vector2> bodyTopTable; // 0x10
	protected static readonly ReadOnlyCollection<Vector2> bodyTextureSizeTable; // 0x18
	protected static readonly ReadOnlyCollection<Vector2> bodySizeTable; // 0x20
	protected UIMasterFigureRenderOld.DispType dispType; // 0x184
	protected int genderType; // 0x188
	protected int equipId; // 0x18C
	protected Vector2 dispOffset; // 0x190

	// Methods

	// RVA: 0x1BDAC70 Offset: 0x1BDAC70 VA: 0x1BDAC70
	public void .ctor() { }

	// RVA: 0x1BDAC78 Offset: 0x1BDAC78 VA: 0x1BDAC78
	public static string[] GetAssetNameList(int genderType, int equipId, int overWriteEquipId = 0) { }

	// RVA: 0x1BDAF78 Offset: 0x1BDAF78 VA: 0x1BDAF78
	public static string[] GetEnemyAssetNameList(int enemyFaceId) { }

	// RVA: 0x1BDB090 Offset: 0x1BDB090 VA: 0x1BDB090
	public void SetCharacter(UIMasterFigureRenderOld.DispType dispType, int genderType, int equipId) { }

	// RVA: 0x1BDB320 Offset: 0x1BDB320 VA: 0x1BDB320
	public void SetEnemy(int enemyBattleId) { }

	// RVA: 0x1BDB470 Offset: 0x1BDB470 VA: 0x1BDB470
	public Vector2 GetBodySize() { }

	// RVA: 0x1BDB500 Offset: 0x1BDB500 VA: 0x1BDB500
	public Rect GetBodyUvRect() { }

	// RVA: 0x1BDB660 Offset: 0x1BDB660 VA: 0x1BDB660
	public Texture2D GetBodyTexture(AssetData[] dataList) { }

	// RVA: 0x1BDB720 Offset: 0x1BDB720 VA: 0x1BDB720
	public Texture2D GetBodyAlphaTexture(AssetData[] dataList) { }

	// RVA: 0x1BDB81C Offset: 0x1BDB81C VA: 0x1BDB81C
	public void SetAlpha(float alpha) { }

	// RVA: 0x1BDB860 Offset: 0x1BDB860 VA: 0x1BDB860
	public void MoveAlpha(float duration, float alpha) { }

	// RVA: 0x1BDB914 Offset: 0x1BDB914 VA: 0x1BDB914
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x1BDBAE8 Offset: 0x1BDBAE8 VA: 0x1BDBAE8
	public void SetLayer(int layer) { }

	// RVA: 0x1BDBB60 Offset: 0x1BDBB60 VA: 0x1BDBB60
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x1BDBE60 Offset: 0x1BDBE60 VA: 0x1BDBE60
	private static void .cctor() { }
}

// Namespace: 
public enum UIMasterFigureRenderOld.DispType // TypeDefIndex: 7846
{
	// Fields
	public int value__; // 0x0
	public const UIMasterFigureRenderOld.DispType FULL = 0;
	public const UIMasterFigureRenderOld.DispType USER_SELECT = 1;
	public const UIMasterFigureRenderOld.DispType MY_ROOM = 2;
}

// Namespace: 
public class UIMasterFigureTextureOld : UIMasterFigureRenderOld // TypeDefIndex: 7847
{
	// Fields
	[SerializeField] // RVA: 0xC57820 Offset: 0xC57820 VA: 0xC57820
	protected UITexture bodyTexture; // 0x198
	protected AssetData[] assetDataList; // 0x1A0
	protected string[] loadNameList; // 0x1A8
	protected Action onLoadCallbackFunc; // 0x1B0

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x1BDC1B4 Offset: 0x1BDC1B4 VA: 0x1BDC1B4
	public void .ctor() { }

	// RVA: 0x1BDC21C Offset: 0x1BDC21C VA: 0x1BDC21C Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x1BDC288 Offset: 0x1BDC288 VA: 0x1BDC288
	public bool get_IsLoad() { }

	// RVA: 0x1BDC298 Offset: 0x1BDC298 VA: 0x1BDC298
	public void Destroy() { }

	// RVA: 0x1BDC50C Offset: 0x1BDC50C VA: 0x1BDC50C
	protected void OnDestroy() { }

	// RVA: 0x1BDC510 Offset: 0x1BDC510 VA: 0x1BDC510
	public void SetActive(bool isActive) { }

	// RVA: 0x1BDC29C Offset: 0x1BDC29C VA: 0x1BDC29C
	public void ReleaseCharacter() { }

	// RVA: 0x1BDC560 Offset: 0x1BDC560 VA: 0x1BDC560
	public void SetCharacter(UIMasterFigureRenderOld.DispType dispType, int genderType, int equipId, Action callbackFunc, int overWriteEquipId = 0) { }

	// RVA: 0x1BDC89C Offset: 0x1BDC89C VA: 0x1BDC89C
	public void SetEnemy(int enemyFaceId, int battleId, Action callbackFunc) { }

	// RVA: 0x1BDC620 Offset: 0x1BDC620 VA: 0x1BDC620
	protected void StartLoadAsset(string[] loadNameList, Action callbackFunc) { }

	// RVA: 0x1BDCB2C Offset: 0x1BDCB2C VA: 0x1BDCB2C
	protected void EndLoadAsset() { }

	// RVA: 0x1BDCC50 Offset: 0x1BDCC50 VA: 0x1BDCC50
	protected void SetTexture() { }

	// RVA: 0x1BDC93C Offset: 0x1BDC93C VA: 0x1BDC93C
	protected void SetTextureStatus() { }

	// RVA: 0x1BDCD8C Offset: 0x1BDCD8C VA: 0x1BDCD8C
	public void SetDepth(int d) { }

	// RVA: 0x1BDCDC4 Offset: 0x1BDCDC4 VA: 0x1BDCDC4
	public void SetOffsetDirect(Vector3 offset) { }

	// RVA: 0x1BDCE34 Offset: 0x1BDCE34 VA: 0x1BDCE34
	public void SetSizeDirect(int width, int height) { }
}

// Namespace: 
public class UIMasterFullFigureRender : UITweenRenderer // TypeDefIndex: 7848
{
	// Fields
	protected static readonly int MAIN_SIZE_X; // 0x0
	protected static readonly int MAIN_SIZE_Y; // 0x4
	protected static readonly int BODY_SIZE_X; // 0x8
	protected static readonly int BODY_SIZE_Y; // 0xC
	protected static readonly ReadOnlyCollection<Vector2> bodyTopTable; // 0x10
	protected static readonly ReadOnlyCollection<Vector2> bodyTextureSizeTable; // 0x18
	protected static readonly ReadOnlyCollection<Vector2> bodySizeTable; // 0x20
	protected UIMasterFullFigureRender.DispType dispType; // 0x184
	protected int genderType; // 0x188
	protected int equipId; // 0x18C
	protected Vector2 dispOffset; // 0x190

	// Methods

	// RVA: 0x1C38174 Offset: 0x1C38174 VA: 0x1C38174
	public void .ctor() { }

	// RVA: 0x1C3817C Offset: 0x1C3817C VA: 0x1C3817C
	public static string[] GetAssetNameList(int genderType, int equipId) { }

	// RVA: 0x1C3845C Offset: 0x1C3845C VA: 0x1C3845C
	public void SetCharacter(UIMasterFullFigureRender.DispType dispType, int genderType, int equipId) { }

	// RVA: 0x1C386D4 Offset: 0x1C386D4 VA: 0x1C386D4
	public Vector2 GetBodySize() { }

	// RVA: 0x1C38764 Offset: 0x1C38764 VA: 0x1C38764
	public Rect GetBodyUvRect() { }

	// RVA: 0x1C388BC Offset: 0x1C388BC VA: 0x1C388BC
	public Texture2D GetBodyTexture(AssetData[] dataList) { }

	// RVA: 0x1C3897C Offset: 0x1C3897C VA: 0x1C3897C
	public Texture2D GetBodyAlphaTexture(AssetData[] dataList) { }

	// RVA: 0x1C38A78 Offset: 0x1C38A78 VA: 0x1C38A78
	public void SetAlpha(float alpha) { }

	// RVA: 0x1C38ABC Offset: 0x1C38ABC VA: 0x1C38ABC
	public void MoveAlpha(float duration, float alpha) { }

	// RVA: 0x1C38B70 Offset: 0x1C38B70 VA: 0x1C38B70
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x1C38D44 Offset: 0x1C38D44 VA: 0x1C38D44
	public void SetLayer(int layer) { }

	// RVA: 0x1C38DBC Offset: 0x1C38DBC VA: 0x1C38DBC
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x1C390BC Offset: 0x1C390BC VA: 0x1C390BC
	private static void .cctor() { }
}

// Namespace: 
public enum UIMasterFullFigureRender.DispType // TypeDefIndex: 7849
{
	// Fields
	public int value__; // 0x0
	public const UIMasterFullFigureRender.DispType USER_SELECT = 0;
}

// Namespace: 
public class UIMasterFullFigureTexture : UIMasterFullFigureRender // TypeDefIndex: 7850
{
	// Fields
	[SerializeField] // RVA: 0xC57830 Offset: 0xC57830 VA: 0xC57830
	protected UITexture bodyTexture; // 0x198
	protected AssetData[] assetDataList; // 0x1A0
	protected string[] loadNameList; // 0x1A8
	protected Action callbackFunc; // 0x1B0

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x1C3929C Offset: 0x1C3929C VA: 0x1C3929C
	public void .ctor() { }

	// RVA: 0x1C39304 Offset: 0x1C39304 VA: 0x1C39304 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x1C39370 Offset: 0x1C39370 VA: 0x1C39370
	public bool get_IsLoad() { }

	// RVA: 0x1C39380 Offset: 0x1C39380 VA: 0x1C39380
	public void Destroy() { }

	// RVA: 0x1C395F4 Offset: 0x1C395F4 VA: 0x1C395F4
	protected void OnDestroy() { }

	// RVA: 0x1C395F8 Offset: 0x1C395F8 VA: 0x1C395F8
	public void SetActive(bool isActive) { }

	// RVA: 0x1C39384 Offset: 0x1C39384 VA: 0x1C39384
	public void ReleaseCharacter() { }

	// RVA: 0x1C39648 Offset: 0x1C39648 VA: 0x1C39648
	public void SetCharacter(UIMasterFullFigureRender.DispType dispType, int genderType, int equipId, Action callbackFunc) { }

	// RVA: 0x1C39B0C Offset: 0x1C39B0C VA: 0x1C39B0C
	protected void EndLoadAsset() { }

	// RVA: 0x1C39C30 Offset: 0x1C39C30 VA: 0x1C39C30
	protected void SetTexture() { }

	// RVA: 0x1C3991C Offset: 0x1C3991C VA: 0x1C3991C
	protected void SetTextureStatus() { }

	// RVA: 0x1C39D6C Offset: 0x1C39D6C VA: 0x1C39D6C
	public void SetDepth(int d) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC25C54 Offset: 0xC25C54 VA: 0xC25C54
[AddComponentMenu] // RVA: 0xC25C54 Offset: 0xC25C54 VA: 0xC25C54
public class UIMeshSprite : UISprite // TypeDefIndex: 7851
{
	// Fields
	public const int SpriteMeshTypeCount = 4;
	protected static double[][] meshVertices; // 0x0
	protected static int[][] meshPolygons; // 0x8
	protected static double[][] uvPos; // 0x10
	protected static int[][] uvIndex; // 0x18
	protected static Vector3[][] sprMeshVert; // 0x20
	protected static Vector2[][] sprMeshUv; // 0x28
	private bool isEndInitialize; // 0x1E9
	public UIMeshSprite.SpriteMeshType meshType; // 0x1EC
	private Rect mOuterUV; // 0x1F0

	// Properties
	private Vector4 drawingUVs { get; }
	private Color32 drawingColor { get; }

	// Methods

	// RVA: 0x1C39DA4 Offset: 0x1C39DA4 VA: 0x1C39DA4
	public void .ctor() { }

	// RVA: 0x1C39DB8 Offset: 0x1C39DB8 VA: 0x1C39DB8
	public void Initialize() { }

	// RVA: 0x1C3B10C Offset: 0x1C3B10C VA: 0x1C3B10C
	private Vector4 get_drawingUVs() { }

	// RVA: 0x1C3B254 Offset: 0x1C3B254 VA: 0x1C3B254
	private Color32 get_drawingColor() { }

	// RVA: 0x1C3B3AC Offset: 0x1C3B3AC VA: 0x1C3B3AC Slot: 38
	public override void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }

	// RVA: 0x1C3B7C8 Offset: 0x1C3B7C8 VA: 0x1C3B7C8
	private void RotFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols, Rect outer, Rect inner) { }
}

// Namespace: 
public enum UIMeshSprite.SpriteMeshType // TypeDefIndex: 7852
{
	// Fields
	public int value__; // 0x0
	public const UIMeshSprite.SpriteMeshType NormalRect = 0;
	public const UIMeshSprite.SpriteMeshType TopCutFace = 1;
	public const UIMeshSprite.SpriteMeshType ServantEquipRect = 2;
	public const UIMeshSprite.SpriteMeshType ServantEquipBigRect = 3;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC25CA0 Offset: 0xC25CA0 VA: 0xC25CA0
public class UIMessageButton : UIMessageButtonColor // TypeDefIndex: 7853
{
	// Fields
	public static UIMessageButton current; // 0x0
	public Color disabledColor; // 0x70
	public bool dragHighlight; // 0x80
	public List<EventDelegate> onClick; // 0x88

	// Properties
	public virtual bool isEnabled { get; set; }

	// Methods

	// RVA: 0x1C3BBBC Offset: 0x1C3BBBC VA: 0x1C3BBBC
	public void .ctor() { }

	// RVA: 0x1C3BD14 Offset: 0x1C3BD14 VA: 0x1C3BD14 Slot: 11
	public virtual bool get_isEnabled() { }

	// RVA: 0x1C3BDD4 Offset: 0x1C3BDD4 VA: 0x1C3BDD4 Slot: 12
	public virtual void set_isEnabled(bool value) { }

	// RVA: 0x1C3C0CC Offset: 0x1C3C0CC VA: 0x1C3C0CC Slot: 4
	protected override void OnEnable() { }

	// RVA: 0x1C3C270 Offset: 0x1C3C270 VA: 0x1C3C270 Slot: 7
	protected override void OnHover(bool isOver) { }

	// RVA: 0x1C3C348 Offset: 0x1C3C348 VA: 0x1C3C348 Slot: 6
	protected override void OnPress(bool isPressed) { }

	// RVA: 0x1C3C55C Offset: 0x1C3C55C VA: 0x1C3C55C Slot: 8
	protected override void OnDragOver() { }

	// RVA: 0x1C3C6B4 Offset: 0x1C3C6B4 VA: 0x1C3C6B4 Slot: 9
	protected override void OnDragOut() { }

	// RVA: 0x1C3C80C Offset: 0x1C3C80C VA: 0x1C3C80C Slot: 10
	protected override void OnSelect(bool isSelected) { }

	// RVA: 0x1C3C940 Offset: 0x1C3C940 VA: 0x1C3C940 Slot: 13
	protected virtual void OnClick() { }

	// RVA: 0x1C3BEAC Offset: 0x1C3BEAC VA: 0x1C3BEAC
	public void UpdateColor(bool shouldBeEnabled, bool immediate) { }

	// RVA: 0x1C3CAC0 Offset: 0x1C3CAC0 VA: 0x1C3CAC0
	public void Fadeout(float d) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC25CD8 Offset: 0xC25CD8 VA: 0xC25CD8
[AddComponentMenu] // RVA: 0xC25CD8 Offset: 0xC25CD8 VA: 0xC25CD8
public class UIMessageButtonColor : UIWidgetContainer // TypeDefIndex: 7854
{
	// Fields
	public GameObject tweenTarget; // 0x18
	public Color normalColor; // 0x20
	public Color hover; // 0x30
	public Color pressed; // 0x40
	public float duration; // 0x50
	protected Color mColor; // 0x54
	protected bool mStarted; // 0x64
	protected UIWidget mWidget; // 0x68

	// Properties
	public Color defaultColor { get; set; }

	// Methods

	// RVA: 0x1C3BC38 Offset: 0x1C3BC38 VA: 0x1C3BC38
	public void .ctor() { }

	// RVA: 0x1C3CA84 Offset: 0x1C3CA84 VA: 0x1C3CA84
	public Color get_defaultColor() { }

	// RVA: 0x1C3CC0C Offset: 0x1C3CC0C VA: 0x1C3CC0C
	public void set_defaultColor(Color value) { }

	// RVA: 0x1C3CBF4 Offset: 0x1C3CBF4 VA: 0x1C3CBF4
	protected void Awake() { }

	// RVA: 0x1C3CC68 Offset: 0x1C3CC68 VA: 0x1C3CC68 Slot: 4
	protected virtual void OnEnable() { }

	// RVA: 0x1C3CE60 Offset: 0x1C3CE60 VA: 0x1C3CE60 Slot: 5
	protected virtual void OnDisable() { }

	// RVA: 0x1C3C9E4 Offset: 0x1C3C9E4 VA: 0x1C3C9E4
	protected void Init() { }

	// RVA: 0x1C3C390 Offset: 0x1C3C390 VA: 0x1C3C390 Slot: 6
	protected virtual void OnPress(bool isPressed) { }

	// RVA: 0x1C3C2B8 Offset: 0x1C3C2B8 VA: 0x1C3C2B8 Slot: 7
	protected virtual void OnHover(bool isOver) { }

	// RVA: 0x1C3C658 Offset: 0x1C3C658 VA: 0x1C3C658 Slot: 8
	protected virtual void OnDragOver() { }

	// RVA: 0x1C3C7B0 Offset: 0x1C3C7B0 VA: 0x1C3C7B0 Slot: 9
	protected virtual void OnDragOut() { }

	// RVA: 0x1C3C854 Offset: 0x1C3C854 VA: 0x1C3C854 Slot: 10
	protected virtual void OnSelect(bool isSelected) { }

	// RVA: 0x1C3D048 Offset: 0x1C3D048 VA: 0x1C3D048
	protected void ChangeTweenColor(float duration, Color c) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC25D24 Offset: 0xC25D24 VA: 0xC25D24
public class UIMultiTouch : MonoBehaviour // TypeDefIndex: 7855
{
	// Fields
	public List<EventDelegate> onDragUpdate; // 0x18
	public List<EventDelegate> onClick; // 0x20
	public float releaseRange; // 0x28
	protected Vector2 startPosition; // 0x2C
	protected bool isRangeOver; // 0x34
	protected int touchMax; // 0x38

	// Properties
	public bool IsEnabled { get; set; }

	// Methods

	// RVA: 0x1C3D190 Offset: 0x1C3D190 VA: 0x1C3D190
	public void .ctor() { }

	// RVA: 0x1C3D228 Offset: 0x1C3D228 VA: 0x1C3D228
	public bool get_IsEnabled() { }

	// RVA: 0x1C3D230 Offset: 0x1C3D230 VA: 0x1C3D230
	public void set_IsEnabled(bool value) { }

	// RVA: 0x1C3D278 Offset: 0x1C3D278 VA: 0x1C3D278
	protected void OnEnable() { }

	// RVA: 0x1C3D2A4 Offset: 0x1C3D2A4 VA: 0x1C3D2A4
	protected void Init() { }

	// RVA: 0x1C3D2AC Offset: 0x1C3D2AC VA: 0x1C3D2AC
	protected void Update() { }

	// RVA: 0x1C3D404 Offset: 0x1C3D404 VA: 0x1C3D404
	protected void OnDrag(Vector2 v) { }

	// RVA: 0x1C3D514 Offset: 0x1C3D514 VA: 0x1C3D514
	public void OnClick() { }
}

// Namespace: 
public class UINarrowFigureRender : UITweenRenderer // TypeDefIndex: 7856
{
	// Fields
	protected static readonly int TEXTURE_PAGE_SIZE; // 0x0
	protected static readonly int MAIN_SIZE_X; // 0x4
	protected static readonly int MAIN_SIZE_Y; // 0x8
	protected static readonly int BODY_SIZE_X; // 0xC
	protected static readonly int BODY_SIZE_Y; // 0x10
	protected static readonly ReadOnlyCollection<Vector2> bodyTopTable; // 0x18
	protected static readonly Vector2 bodySize; // 0x20
	protected static readonly Vector2 bodyTextureSize; // 0x28
	protected int svtId; // 0x184
	protected int imageLimitCount; // 0x188
	protected int textureImageLimitCount; // 0x18C

	// Methods

	// RVA: 0x1C3D5A4 Offset: 0x1C3D5A4 VA: 0x1C3D5A4
	public void .ctor() { }

	// RVA: 0x1C3D5B4 Offset: 0x1C3D5B4 VA: 0x1C3D5B4
	public static string GetAssetName(int svtId, int imageLimitCount) { }

	// RVA: 0x1C3D710 Offset: 0x1C3D710 VA: 0x1C3D710
	public void SetCharacter(int svtId, int imageLimitCount) { }

	// RVA: 0x1C3D7D4 Offset: 0x1C3D7D4 VA: 0x1C3D7D4
	public Vector2 GetBodySize() { }

	// RVA: 0x1C3D83C Offset: 0x1C3D83C VA: 0x1C3D83C
	public Rect GetBodyUvRect() { }

	// RVA: 0x1C3D974 Offset: 0x1C3D974 VA: 0x1C3D974
	public Texture2D GetBodyTexture(AssetData assetData) { }

	// RVA: 0x1C3DB40 Offset: 0x1C3DB40 VA: 0x1C3DB40
	public Texture2D GetBodyAlphaTexture(AssetData assetData) { }

	// RVA: 0x1C3DCA8 Offset: 0x1C3DCA8 VA: 0x1C3DCA8
	public void SetAlpha(float alpha) { }

	// RVA: 0x1C3DCEC Offset: 0x1C3DCEC VA: 0x1C3DCEC
	public void MoveAlpha(float duration, float alpha) { }

	// RVA: 0x1C3DDA0 Offset: 0x1C3DDA0 VA: 0x1C3DDA0
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x1C3DF74 Offset: 0x1C3DF74 VA: 0x1C3DF74
	public void SetLayer(int layer) { }

	// RVA: 0x1C3DFEC Offset: 0x1C3DFEC VA: 0x1C3DFEC
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x1C3E2EC Offset: 0x1C3E2EC VA: 0x1C3E2EC
	private static void .cctor() { }
}

// Namespace: 
public enum UINarrowFigureRender.DispType // TypeDefIndex: 7857
{
	// Fields
	public int value__; // 0x0
	public const UINarrowFigureRender.DispType FULL = 0;
	public const UINarrowFigureRender.DispType USER_SELECT = 1;
	public const UINarrowFigureRender.DispType MY_ROOM = 2;
}

// Namespace: 
public class UINarrowFigureTexture : UINarrowFigureRender // TypeDefIndex: 7858
{
	// Fields
	[SerializeField] // RVA: 0xC57840 Offset: 0xC57840 VA: 0xC57840
	protected UITexture bodyTexture; // 0x190
	protected AssetData assetData; // 0x198
	protected string loadName; // 0x1A0
	protected Action callbackFunc; // 0x1A8

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x1C3E4DC Offset: 0x1C3E4DC VA: 0x1C3E4DC
	public void .ctor() { }

	// RVA: 0x1C3E54C Offset: 0x1C3E54C VA: 0x1C3E54C
	protected void Awake() { }

	// RVA: 0x1C3E588 Offset: 0x1C3E588 VA: 0x1C3E588 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x1C3E5F4 Offset: 0x1C3E5F4 VA: 0x1C3E5F4
	public bool get_IsLoad() { }

	// RVA: 0x1C3E604 Offset: 0x1C3E604 VA: 0x1C3E604
	public void Destroy() { }

	// RVA: 0x1C3E878 Offset: 0x1C3E878 VA: 0x1C3E878
	protected void OnDestroy() { }

	// RVA: 0x1C3E87C Offset: 0x1C3E87C VA: 0x1C3E87C
	public void SetActive(bool isActive) { }

	// RVA: 0x1C3E608 Offset: 0x1C3E608 VA: 0x1C3E608
	public void ReleaseCharacter() { }

	// RVA: 0x1C3E8CC Offset: 0x1C3E8CC VA: 0x1C3E8CC
	public void SetHideCharacter(Action callbackFunc) { }

	// RVA: 0x1C3E8E4 Offset: 0x1C3E8E4 VA: 0x1C3E8E4
	public void SetCharacter(int svtId, int imageLimitCount, Action callbackFunc) { }

	// RVA: 0x1C3EFB8 Offset: 0x1C3EFB8 VA: 0x1C3EFB8
	protected void EndLoadAsset(AssetData assetData) { }

	// RVA: 0x1C3EE30 Offset: 0x1C3EE30 VA: 0x1C3EE30
	protected void ClearTexture() { }

	// RVA: 0x1C3EBBC Offset: 0x1C3EBBC VA: 0x1C3EBBC
	protected void SetTexture() { }

	// RVA: 0x1C3F09C Offset: 0x1C3F09C VA: 0x1C3F09C
	public void SetDepth(int d) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC25D5C Offset: 0xC25D5C VA: 0xC25D5C
[AddComponentMenu] // RVA: 0xC25D5C Offset: 0xC25D5C VA: 0xC25D5C
