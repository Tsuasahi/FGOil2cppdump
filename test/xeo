	private ActivationContext _activation; // 0x40
	private ApplicationIdentity _applicationIdentity; // 0x48
	private AssemblyLoadEventHandler AssemblyLoad; // 0x50
	private ResolveEventHandler AssemblyResolve; // 0x58
	private EventHandler DomainUnload; // 0x60
	private EventHandler ProcessExit; // 0x68
	private ResolveEventHandler ResourceResolve; // 0x70
	private ResolveEventHandler TypeResolve; // 0x78
	private UnhandledExceptionEventHandler UnhandledException; // 0x80
	private ResolveEventHandler ReflectionOnlyAssemblyResolve; // 0x88

	// Properties
	public string FriendlyName { get; }
	internal IPrincipal DefaultPrincipal { get; }
	internal PermissionSet GrantedPermissionSet { get; }
	public static AppDomain CurrentDomain { get; }
	public AppDomainManager DomainManager { get; }

	// Methods

	// RVA: 0x2279544 Offset: 0x2279544 VA: 0x2279544
	private void .ctor() { }

	// RVA: 0x227954C Offset: 0x227954C VA: 0x227954C
	public void add_AssemblyLoad(AssemblyLoadEventHandler value) { }

	// RVA: 0x2279610 Offset: 0x2279610 VA: 0x2279610
	public void remove_AssemblyLoad(AssemblyLoadEventHandler value) { }

	// RVA: 0x22796D4 Offset: 0x22796D4 VA: 0x22796D4
	public void add_DomainUnload(EventHandler value) { }

	// RVA: 0x2279798 Offset: 0x2279798 VA: 0x2279798
	public void remove_DomainUnload(EventHandler value) { }

	// RVA: 0x227985C Offset: 0x227985C VA: 0x227985C
	public void add_UnhandledException(UnhandledExceptionEventHandler value) { }

	// RVA: 0x2279920 Offset: 0x2279920 VA: 0x2279920
	public void remove_UnhandledException(UnhandledExceptionEventHandler value) { }

	// RVA: 0x22799E4 Offset: 0x22799E4 VA: 0x22799E4
	private string getFriendlyName() { }

	// RVA: 0x22799E8 Offset: 0x22799E8 VA: 0x22799E8
	public string get_FriendlyName() { }

	// RVA: 0x22799EC Offset: 0x22799EC VA: 0x22799EC
	internal IPrincipal get_DefaultPrincipal() { }

	// RVA: 0x2279B5C Offset: 0x2279B5C VA: 0x2279B5C
	internal PermissionSet get_GrantedPermissionSet() { }

	// RVA: 0x2279B64 Offset: 0x2279B64 VA: 0x2279B64
	private static AppDomain getCurDomain() { }

	// RVA: 0x2279B68 Offset: 0x2279B68 VA: 0x2279B68
	public static AppDomain get_CurrentDomain() { }

	// RVA: 0x2279B6C Offset: 0x2279B6C VA: 0x2279B6C
	internal AssemblyBuilder DefineInternalDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access) { }

	// RVA: 0x2279BE8 Offset: 0x2279BE8 VA: 0x2279BE8
	private Assembly[] GetAssemblies(bool refOnly) { }

	// RVA: 0x2279BF0 Offset: 0x2279BF0 VA: 0x2279BF0
	public Assembly[] GetAssemblies() { }

	// RVA: 0x2279BF8 Offset: 0x2279BF8 VA: 0x2279BF8 Slot: 5
	public override object InitializeLifetimeService() { }

	// RVA: 0x2279C00 Offset: 0x2279C00 VA: 0x2279C00
	internal Assembly LoadAssembly(string assemblyRef, Evidence securityEvidence, bool refOnly) { }

	// RVA: 0x2279C08 Offset: 0x2279C08 VA: 0x2279C08
	public Assembly Load(string assemblyString) { }

	// RVA: 0x2279C14 Offset: 0x2279C14 VA: 0x2279C14
	internal Assembly Load(string assemblyString, Evidence assemblySecurity, bool refonly) { }

	// RVA: 0x2279D6C Offset: 0x2279D6C VA: 0x2279D6C
	private static AppDomain InternalSetDomainByID(int domain_id) { }

	// RVA: 0x2279D70 Offset: 0x2279D70 VA: 0x2279D70
	private static AppDomain InternalSetDomain(AppDomain context) { }

	// RVA: 0x2279D74 Offset: 0x2279D74 VA: 0x2279D74
	internal static void InternalPushDomainRefByID(int domain_id) { }

	// RVA: 0x2279D78 Offset: 0x2279D78 VA: 0x2279D78
	internal static void InternalPopDomainRef() { }

	// RVA: 0x2279D7C Offset: 0x2279D7C VA: 0x2279D7C
	internal static Context InternalSetContext(Context context) { }

	// RVA: 0x2279D80 Offset: 0x2279D80 VA: 0x2279D80
	internal static Context InternalGetContext() { }

	// RVA: 0x2279D84 Offset: 0x2279D84 VA: 0x2279D84
	internal static Context InternalGetDefaultContext() { }

	// RVA: 0x2279D88 Offset: 0x2279D88 VA: 0x2279D88
	internal static string InternalGetProcessGuid(string newguid) { }

	// RVA: 0x2279D8C Offset: 0x2279D8C VA: 0x2279D8C
	internal static object InvokeInDomainByID(int domain_id, MethodInfo method, object obj, object[] args) { }

	// RVA: 0x2279FC0 Offset: 0x2279FC0 VA: 0x2279FC0
	internal static string GetProcessGuid() { }

	// RVA: 0x227A074 Offset: 0x227A074 VA: 0x227A074 Slot: 3
	public override string ToString() { }

	// RVA: 0x227A078 Offset: 0x227A078 VA: 0x227A078
	internal Assembly DoTypeResolve(object name_or_tb) { }

	// RVA: 0x227A418 Offset: 0x227A418 VA: 0x227A418
	internal void ProcessMessageInDomain(byte[] arrRequest, CADMethodCallMessage cadMsg, out byte[] arrResponse, out CADMethodReturnMessage cadMrm) { }

	// RVA: 0x227A548 Offset: 0x227A548 VA: 0x227A548
	public AppDomainManager get_DomainManager() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAAAC Offset: 0xBCAAAC VA: 0xBCAAAC
public class AppDomainManager : MarshalByRefObject // TypeDefIndex: 955
{
	// Methods

	// RVA: 0x227A930 Offset: 0x227A930 VA: 0x227A930 Slot: 6
	public virtual bool CheckSecuritySettings(SecurityState state) { }
}

// Namespace: System
[ClassInterfaceAttribute] // RVA: 0xBCAAC0 Offset: 0xBCAAC0 VA: 0xBCAAC0
[ComVisibleAttribute] // RVA: 0xBCAAC0 Offset: 0xBCAAC0 VA: 0xBCAAC0
[Serializable]
public sealed class AppDomainSetup // TypeDefIndex: 956
{
	// Fields
	private string application_base; // 0x10
	private string application_name; // 0x18
	private string cache_path; // 0x20
	private string configuration_file; // 0x28
	private string dynamic_base; // 0x30
	private string license_file; // 0x38
	private string private_bin_path; // 0x40
	private string private_bin_path_probe; // 0x48
	private string shadow_copy_directories; // 0x50
	private string shadow_copy_files; // 0x58
	private bool publisher_policy; // 0x60
	private bool path_changed; // 0x61
	private LoaderOptimization loader_optimization; // 0x64
	private bool disallow_binding_redirects; // 0x68
	private bool disallow_code_downloads; // 0x69
	private ActivationArguments _activationArguments; // 0x70
	private AppDomainInitializer domain_initializer; // 0x78
	private ApplicationTrust application_trust; // 0x80
	private string[] domain_initializer_args; // 0x88
	private SecurityElement application_trust_xml; // 0x90
	private bool disallow_appbase_probe; // 0x98
	private byte[] configuration_bytes; // 0xA0

	// Methods

	// RVA: 0x227A938 Offset: 0x227A938 VA: 0x227A938
	public void .ctor() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAB00 Offset: 0xBCAB00 VA: 0xBCAB00
[Serializable]
public class ApplicationException : Exception // TypeDefIndex: 957
{
	// Methods

	// RVA: 0x227A940 Offset: 0x227A940 VA: 0x227A940
	public void .ctor() { }

	// RVA: 0x227A9B4 Offset: 0x227A9B4 VA: 0x227A9B4
	public void .ctor(string message) { }

	// RVA: 0x227A9E8 Offset: 0x227A9E8 VA: 0x227A9E8
	public void .ctor(string message, Exception innerException) { }

	// RVA: 0x227AA1C Offset: 0x227AA1C VA: 0x227AA1C
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAB14 Offset: 0xBCAB14 VA: 0xBCAB14
[Serializable]
public sealed class ApplicationIdentity : ISerializable // TypeDefIndex: 958
{
	// Fields
	private string _fullName; // 0x10

	// Properties
	public string FullName { get; }

	// Methods

	// RVA: 0x227AA24 Offset: 0x227AA24 VA: 0x227AA24
	public void .ctor(string applicationIdentityFullName) { }

	[MonoTODOAttribute] // RVA: 0xBCE3F8 Offset: 0xBCE3F8 VA: 0xBCE3F8
	// RVA: 0x227AB20 Offset: 0x227AB20 VA: 0x227AB20 Slot: 4
	private void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x227ABA4 Offset: 0x227ABA4 VA: 0x227ABA4
	public string get_FullName() { }

	// RVA: 0x227ABAC Offset: 0x227ABAC VA: 0x227ABAC Slot: 3
	public override string ToString() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAB28 Offset: 0xBCAB28 VA: 0xBCAB28
[Serializable]
public class ArgumentException : SystemException // TypeDefIndex: 959
{
	// Fields
	private const int Result = -2147024809;
	private string param_name; // 0x60

	// Properties
	public virtual string ParamName { get; }
	public override string Message { get; }

	// Methods

	// RVA: 0x227AC44 Offset: 0x227AC44 VA: 0x227AC44
	public void .ctor() { }

	// RVA: 0x2279D38 Offset: 0x2279D38 VA: 0x2279D38
	public void .ctor(string message) { }

	// RVA: 0x227ACB8 Offset: 0x227ACB8 VA: 0x227ACB8
	public void .ctor(string message, Exception innerException) { }

	// RVA: 0x22793E8 Offset: 0x22793E8 VA: 0x22793E8
	public void .ctor(string message, string paramName) { }

	// RVA: 0x227ACEC Offset: 0x227ACEC VA: 0x227ACEC
	public void .ctor(string message, string paramName, Exception innerException) { }

	// RVA: 0x227AD2C Offset: 0x227AD2C VA: 0x227AD2C
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x227ADC8 Offset: 0x227ADC8 VA: 0x227ADC8 Slot: 12
	public virtual string get_ParamName() { }

	// RVA: 0x227ADD0 Offset: 0x227ADD0 VA: 0x227ADD0 Slot: 6
	public override string get_Message() { }

	// RVA: 0x227AEF4 Offset: 0x227AEF4 VA: 0x227AEF4 Slot: 10
	public override void GetObjectData(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAB3C Offset: 0xBCAB3C VA: 0xBCAB3C
[Serializable]
public class ArgumentNullException : ArgumentException // TypeDefIndex: 960
{
	// Fields
	private const int Result = -2147467261;

	// Methods

	// RVA: 0x227AFA0 Offset: 0x227AFA0 VA: 0x227AFA0
	public void .ctor() { }

	// RVA: 0x2274AB8 Offset: 0x2274AB8 VA: 0x2274AB8
	public void .ctor(string paramName) { }

	// RVA: 0x227B028 Offset: 0x227B028 VA: 0x227B028
	public void .ctor(string paramName, string message) { }

	// RVA: 0x227B07C Offset: 0x227B07C VA: 0x227B07C
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAB50 Offset: 0xBCAB50 VA: 0xBCAB50
[Serializable]
public class ArgumentOutOfRangeException : ArgumentException // TypeDefIndex: 961
{
	// Fields
	private object actual_value; // 0x68

	// Properties
	public override string Message { get; }

	// Methods

	// RVA: 0x227B080 Offset: 0x227B080 VA: 0x227B080
	public void .ctor() { }

	// RVA: 0x227B108 Offset: 0x227B108 VA: 0x227B108
	public void .ctor(string paramName) { }

	// RVA: 0x227B1A0 Offset: 0x227B1A0 VA: 0x227B1A0
	public void .ctor(string paramName, string message) { }

	// RVA: 0x227B1F4 Offset: 0x227B1F4 VA: 0x227B1F4
	public void .ctor(string paramName, object actualValue, string message) { }

	// RVA: 0x227B258 Offset: 0x227B258 VA: 0x227B258
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x227B2F0 Offset: 0x227B2F0 VA: 0x227B2F0 Slot: 6
	public override string get_Message() { }

	// RVA: 0x227B3A4 Offset: 0x227B3A4 VA: 0x227B3A4 Slot: 10
	public override void GetObjectData(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAB64 Offset: 0xBCAB64 VA: 0xBCAB64
[Serializable]
public class ArithmeticException : SystemException // TypeDefIndex: 962
{
	// Methods

	// RVA: 0x227B43C Offset: 0x227B43C VA: 0x227B43C
	public void .ctor() { }

	// RVA: 0x227B4B0 Offset: 0x227B4B0 VA: 0x227B4B0
	public void .ctor(string message) { }

	// RVA: 0x227B4E4 Offset: 0x227B4E4 VA: 0x227B4E4
	public void .ctor(string message, Exception innerException) { }

	// RVA: 0x227B518 Offset: 0x227B518 VA: 0x227B518
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[Serializable]
public struct ArraySegment<T> // TypeDefIndex: 963
{
	// Fields
	private T[] array; // 0x0
	private int offset; // 0x0
	private int count; // 0x0

	// Properties
	public T[] Array { get; }
	public int Offset { get; }
	public int Count { get; }

	// Methods

	// RVA: -1 Offset: -1
	public T[] get_Array() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xD5FE68 Offset: 0xD5FE68 VA: 0xD5FE68
	|-ArraySegment<byte>.get_Array
	|
	|-RVA: 0xD5FE98 Offset: 0xD5FE98 VA: 0xD5FE98
	|-ArraySegment<object>.get_Array
	*/

	// RVA: -1 Offset: -1
	public int get_Offset() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xD5FE70 Offset: 0xD5FE70 VA: 0xD5FE70
	|-ArraySegment<byte>.get_Offset
	|
	|-RVA: 0xD5FEA0 Offset: 0xD5FEA0 VA: 0xD5FEA0
	|-ArraySegment<object>.get_Offset
	*/

	// RVA: -1 Offset: -1
	public int get_Count() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xD5FE78 Offset: 0xD5FE78 VA: 0xD5FE78
	|-ArraySegment<byte>.get_Count
	|
	|-RVA: 0xD5FEA8 Offset: 0xD5FEA8 VA: 0xD5FEA8
	|-ArraySegment<object>.get_Count
	*/

	// RVA: -1 Offset: -1 Slot: 0
	public override bool Equals(object obj) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xD5FE80 Offset: 0xD5FE80 VA: 0xD5FE80
	|-ArraySegment<byte>.Equals
	|
	|-RVA: 0xD5FEB0 Offset: 0xD5FEB0 VA: 0xD5FEB0
	|-ArraySegment<object>.Equals
	*/

	// RVA: -1 Offset: -1
	public bool Equals(ArraySegment<T> obj) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xD5FE88 Offset: 0xD5FE88 VA: 0xD5FE88
	|-ArraySegment<byte>.Equals
	|
	|-RVA: 0xD5FEB8 Offset: 0xD5FEB8 VA: 0xD5FEB8
	|-ArraySegment<object>.Equals
	*/

	// RVA: -1 Offset: -1 Slot: 2
	public override int GetHashCode() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xD5FE90 Offset: 0xD5FE90 VA: 0xD5FE90
	|-ArraySegment<byte>.GetHashCode
	|
	|-RVA: 0xD5FEC0 Offset: 0xD5FEC0 VA: 0xD5FEC0
	|-ArraySegment<object>.GetHashCode
	*/
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAB78 Offset: 0xBCAB78 VA: 0xBCAB78
[Serializable]
public class ArrayTypeMismatchException : SystemException // TypeDefIndex: 964
{
	// Fields
	private const int Result = -2146233085;

	// Methods

	// RVA: 0x22812C8 Offset: 0x22812C8 VA: 0x22812C8
	public void .ctor() { }

	// RVA: 0x227E724 Offset: 0x227E724 VA: 0x227E724
	public void .ctor(string message) { }

	// RVA: 0x228133C Offset: 0x228133C VA: 0x228133C
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAB8C Offset: 0xBCAB8C VA: 0xBCAB8C
public class AssemblyLoadEventArgs : EventArgs // TypeDefIndex: 965
{
	// Fields
	private Assembly m_loadedAssembly; // 0x10

	// Properties
	public Assembly LoadedAssembly { get; }

	// Methods

	// RVA: 0x2281344 Offset: 0x2281344 VA: 0x2281344
	public Assembly get_LoadedAssembly() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCABA0 Offset: 0xBCABA0 VA: 0xBCABA0
[FlagsAttribute] // RVA: 0xBCABA0 Offset: 0xBCABA0 VA: 0xBCABA0
[Serializable]
public enum AttributeTargets // TypeDefIndex: 966
{
	// Fields
	public int value__; // 0x0
	public const AttributeTargets Assembly = 1;
	public const AttributeTargets Module = 2;
	public const AttributeTargets Class = 4;
	public const AttributeTargets Struct = 8;
	public const AttributeTargets Enum = 16;
	public const AttributeTargets Constructor = 32;
	public const AttributeTargets Method = 64;
	public const AttributeTargets Property = 128;
	public const AttributeTargets Field = 256;
	public const AttributeTargets Event = 512;
	public const AttributeTargets Interface = 1024;
	public const AttributeTargets Parameter = 2048;
	public const AttributeTargets Delegate = 4096;
	public const AttributeTargets ReturnValue = 8192;
	public const AttributeTargets GenericParameter = 16384;
	public const AttributeTargets All = 32767;
}

// Namespace: System
public static class BitConverter // TypeDefIndex: 967
{
	// Fields
	private static readonly bool SwappedWordsInDouble; // 0x0
	public static readonly bool IsLittleEndian; // 0x1

	// Methods

	// RVA: 0x228204C Offset: 0x228204C VA: 0x228204C
	private static void .cctor() { }

	// RVA: 0x22820E0 Offset: 0x22820E0 VA: 0x22820E0
	private static bool AmILittleEndian() { }

	// RVA: 0x22820C0 Offset: 0x22820C0 VA: 0x22820C0
	private static bool DoubleWordsAreSwapped() { }

	// RVA: 0x22820E8 Offset: 0x22820E8 VA: 0x22820E8
	public static long DoubleToInt64Bits(double value) { }

	// RVA: 0x22823C4 Offset: 0x22823C4 VA: 0x22823C4
	private static byte[] GetBytes(byte* ptr, int count) { }

	// RVA: 0x2282484 Offset: 0x2282484 VA: 0x2282484
	public static byte[] GetBytes(bool value) { }

	// RVA: 0x22824F4 Offset: 0x22824F4 VA: 0x22824F4
	public static byte[] GetBytes(short value) { }

	// RVA: 0x2282560 Offset: 0x2282560 VA: 0x2282560
	public static byte[] GetBytes(int value) { }

	// RVA: 0x22825CC Offset: 0x22825CC VA: 0x22825CC
	public static byte[] GetBytes(long value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE430 Offset: 0xBCE430 VA: 0xBCE430
	// RVA: 0x2282638 Offset: 0x2282638 VA: 0x2282638
	public static byte[] GetBytes(uint value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE444 Offset: 0xBCE444 VA: 0xBCE444
	// RVA: 0x22826A4 Offset: 0x22826A4 VA: 0x22826A4
	public static byte[] GetBytes(ulong value) { }

	// RVA: 0x2282710 Offset: 0x2282710 VA: 0x2282710
	public static byte[] GetBytes(float value) { }

	// RVA: 0x228215C Offset: 0x228215C VA: 0x228215C
	public static byte[] GetBytes(double value) { }

	// RVA: 0x228277C Offset: 0x228277C VA: 0x228277C
	private static void PutBytes(byte* dst, byte[] src, int start_index, int count) { }

	// RVA: 0x22828E8 Offset: 0x22828E8 VA: 0x22828E8
	public static bool ToBoolean(byte[] value, int startIndex) { }

	// RVA: 0x22829EC Offset: 0x22829EC VA: 0x22829EC
	public static short ToInt16(byte[] value, int startIndex) { }

	// RVA: 0x2282A74 Offset: 0x2282A74 VA: 0x2282A74
	public static int ToInt32(byte[] value, int startIndex) { }

	// RVA: 0x228233C Offset: 0x228233C VA: 0x228233C
	public static long ToInt64(byte[] value, int startIndex) { }

	[CLSCompliantAttribute] // RVA: 0xBCE458 Offset: 0xBCE458 VA: 0xBCE458
	// RVA: 0x2282AFC Offset: 0x2282AFC VA: 0x2282AFC
	public static ushort ToUInt16(byte[] value, int startIndex) { }

	[CLSCompliantAttribute] // RVA: 0xBCE46C Offset: 0xBCE46C VA: 0xBCE46C
	// RVA: 0x2282B84 Offset: 0x2282B84 VA: 0x2282B84
	public static uint ToUInt32(byte[] value, int startIndex) { }

	[CLSCompliantAttribute] // RVA: 0xBCE480 Offset: 0xBCE480 VA: 0xBCE480
	// RVA: 0x2282C0C Offset: 0x2282C0C VA: 0x2282C0C
	public static ulong ToUInt64(byte[] value, int startIndex) { }

	// RVA: 0x2282C94 Offset: 0x2282C94 VA: 0x2282C94
	public static float ToSingle(byte[] value, int startIndex) { }

	// RVA: 0x2282D1C Offset: 0x2282D1C VA: 0x2282D1C
	public static double ToDouble(byte[] value, int startIndex) { }

	// RVA: 0x2283004 Offset: 0x2283004 VA: 0x2283004
	public static string ToString(byte[] value) { }

	// RVA: 0x22830B4 Offset: 0x22830B4 VA: 0x22830B4
	public static string ToString(byte[] value, int startIndex, int length) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCABDC Offset: 0xBCABDC VA: 0xBCABDC
public static class Buffer // TypeDefIndex: 968
{
	// Methods

	// RVA: 0x22840FC Offset: 0x22840FC VA: 0x22840FC
	public static int ByteLength(Array array) { }

	// RVA: 0x22841D8 Offset: 0x22841D8 VA: 0x22841D8
	public static void SetByte(Array array, int index, byte value) { }

	// RVA: 0x22842AC Offset: 0x22842AC VA: 0x22842AC
	public static void BlockCopy(Array src, int srcOffset, Array dst, int dstOffset, int count) { }

	// RVA: 0x22841D4 Offset: 0x22841D4 VA: 0x22841D4
	private static int ByteLengthInternal(Array array) { }

	// RVA: 0x22842A8 Offset: 0x22842A8 VA: 0x22842A8
	private static void SetByteInternal(Array array, int index, int value) { }

	// RVA: 0x22844C0 Offset: 0x22844C0 VA: 0x22844C0
	internal static bool BlockCopyInternal(Array src, int src_offset, Array dest, int dest_offset, int count) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCABF0 Offset: 0xBCABF0 VA: 0xBCABF0
[Serializable]
public sealed class CharEnumerator : IEnumerator, IDisposable, ICloneable, IEnumerator<char> // TypeDefIndex: 969
{
	// Fields
	private string str; // 0x10
	private int index; // 0x18
	private int length; // 0x1C

	// Properties
	private object System.Collections.IEnumerator.Current { get; }
	public char Current { get; }

	// Methods

	// RVA: 0x22866EC Offset: 0x22866EC VA: 0x22866EC
	internal void .ctor(string s) { }

	// RVA: 0x228673C Offset: 0x228673C VA: 0x228673C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	// RVA: 0x2286874 Offset: 0x2286874 VA: 0x2286874 Slot: 7
	private void System.IDisposable.Dispose() { }

	// RVA: 0x22867A8 Offset: 0x22867A8 VA: 0x22867A8 Slot: 9
	public char get_Current() { }

	// RVA: 0x2286878 Offset: 0x2286878 VA: 0x2286878 Slot: 8
	public object Clone() { }

	// RVA: 0x22868F8 Offset: 0x22868F8 VA: 0x22868F8 Slot: 5
	public bool MoveNext() { }

	// RVA: 0x2286918 Offset: 0x2286918 VA: 0x2286918 Slot: 6
	public void Reset() { }
}

// Namespace: System
public static class Console // TypeDefIndex: 970
{
	// Fields
	internal static TextWriter stdout; // 0x0
	private static TextWriter stderr; // 0x8
	private static TextReader stdin; // 0x10
	private static Encoding inputEncoding; // 0x18
	private static Encoding outputEncoding; // 0x20

	// Properties
	public static TextWriter Error { get; }
	public static TextWriter Out { get; }

	// Methods

	// RVA: 0x252B438 Offset: 0x252B438 VA: 0x252B438
	private static void .cctor() { }

	// RVA: 0x252B54C Offset: 0x252B54C VA: 0x252B54C
	private static void SetEncodings(Encoding inputEncoding, Encoding outputEncoding) { }

	// RVA: 0x252BB5C Offset: 0x252BB5C VA: 0x252BB5C
	public static TextWriter get_Error() { }

	// RVA: 0x252BBC4 Offset: 0x252BBC4 VA: 0x252BBC4
	public static TextWriter get_Out() { }

	// RVA: 0x252BC2C Offset: 0x252BC2C VA: 0x252BC2C
	private static Stream Open(IntPtr handle, FileAccess access, int bufferSize) { }

	// RVA: 0x252B988 Offset: 0x252B988 VA: 0x252B988
	public static Stream OpenStandardError(int bufferSize) { }

	// RVA: 0x252BAC0 Offset: 0x252BAC0 VA: 0x252BAC0
	public static Stream OpenStandardInput(int bufferSize) { }

	// RVA: 0x252BA24 Offset: 0x252BA24 VA: 0x252BA24
	public static Stream OpenStandardOutput(int bufferSize) { }

	// RVA: 0x252BD4C Offset: 0x252BD4C VA: 0x252BD4C
	public static void SetOut(TextWriter newOut) { }

	// RVA: 0x252BE00 Offset: 0x252BE00 VA: 0x252BE00
	public static void WriteLine(string value) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAC04 Offset: 0xBCAC04 VA: 0xBCAC04
[Serializable]
public abstract class ContextBoundObject : MarshalByRefObject // TypeDefIndex: 971
{
	// Methods

	// RVA: 0x252BE8C Offset: 0x252BE8C VA: 0x252BE8C
	protected void .ctor() { }
}

// Namespace: System
public static class Convert // TypeDefIndex: 972
{
	// Fields
	public static readonly object DBNull; // 0x0
	private static readonly Type[] conversionTable; // 0x8

	// Methods

	// RVA: 0x252BE94 Offset: 0x252BE94 VA: 0x252BE94
	private static void .cctor() { }

	// RVA: 0x252C5D8 Offset: 0x252C5D8 VA: 0x252C5D8
	private static byte[] InternalFromBase64String(string str, bool allowWhitespaceOnly) { }

	// RVA: 0x252C5E0 Offset: 0x252C5E0 VA: 0x252C5E0
	public static byte[] FromBase64String(string s) { }

	// RVA: 0x252C6BC Offset: 0x252C6BC VA: 0x252C6BC
	public static string ToBase64String(byte[] inArray) { }

	// RVA: 0x252C770 Offset: 0x252C770 VA: 0x252C770
	public static string ToBase64String(byte[] inArray, int offset, int length) { }

	// RVA: 0x252C8C0 Offset: 0x252C8C0 VA: 0x252C8C0
	public static bool ToBoolean(byte value) { }

	// RVA: 0x252C8CC Offset: 0x252C8CC VA: 0x252C8CC
	public static bool ToBoolean(Decimal value) { }

	// RVA: 0x252C96C Offset: 0x252C96C VA: 0x252C96C
	public static bool ToBoolean(double value) { }

	// RVA: 0x252C978 Offset: 0x252C978 VA: 0x252C978
	public static bool ToBoolean(float value) { }

	// RVA: 0x252C984 Offset: 0x252C984 VA: 0x252C984
	public static bool ToBoolean(int value) { }

	// RVA: 0x252C990 Offset: 0x252C990 VA: 0x252C990
	public static bool ToBoolean(long value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE494 Offset: 0xBCE494 VA: 0xBCE494
	// RVA: 0x252C99C Offset: 0x252C99C VA: 0x252C99C
	public static bool ToBoolean(sbyte value) { }

	// RVA: 0x252C9A8 Offset: 0x252C9A8 VA: 0x252C9A8
	public static bool ToBoolean(short value) { }

	// RVA: 0x252C9B4 Offset: 0x252C9B4 VA: 0x252C9B4
	public static bool ToBoolean(string value, IFormatProvider provider) { }

	[CLSCompliantAttribute] // RVA: 0xBCE4A8 Offset: 0xBCE4A8 VA: 0xBCE4A8
	// RVA: 0x252CA30 Offset: 0x252CA30 VA: 0x252CA30
	public static bool ToBoolean(uint value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE4BC Offset: 0xBCE4BC VA: 0xBCE4BC
	// RVA: 0x252CA3C Offset: 0x252CA3C VA: 0x252CA3C
	public static bool ToBoolean(ulong value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE4D0 Offset: 0xBCE4D0 VA: 0xBCE4D0
	// RVA: 0x252CA48 Offset: 0x252CA48 VA: 0x252CA48
	public static bool ToBoolean(ushort value) { }

	// RVA: 0x252CA54 Offset: 0x252CA54 VA: 0x252CA54
	public static bool ToBoolean(object value) { }

	// RVA: 0x252CAD0 Offset: 0x252CAD0 VA: 0x252CAD0
	public static bool ToBoolean(object value, IFormatProvider provider) { }

	// RVA: 0x252CC6C Offset: 0x252CC6C VA: 0x252CC6C
	public static byte ToByte(bool value) { }

	// RVA: 0x252CC74 Offset: 0x252CC74 VA: 0x252CC74
	public static byte ToByte(char value) { }

	// RVA: 0x252CD1C Offset: 0x252CD1C VA: 0x252CD1C
	public static byte ToByte(Decimal value) { }

	// RVA: 0x252CE98 Offset: 0x252CE98 VA: 0x252CE98
	public static byte ToByte(double value) { }

	// RVA: 0x252CFE8 Offset: 0x252CFE8 VA: 0x252CFE8
	public static byte ToByte(float value) { }

	// RVA: 0x252D144 Offset: 0x252D144 VA: 0x252D144
	public static byte ToByte(int value) { }

	// RVA: 0x252D1E8 Offset: 0x252D1E8 VA: 0x252D1E8
	public static byte ToByte(long value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE4E4 Offset: 0xBCE4E4 VA: 0xBCE4E4
	// RVA: 0x252D28C Offset: 0x252D28C VA: 0x252D28C
	public static byte ToByte(sbyte value) { }

	// RVA: 0x252D330 Offset: 0x252D330 VA: 0x252D330
	public static byte ToByte(short value) { }

	// RVA: 0x252D3D8 Offset: 0x252D3D8 VA: 0x252D3D8
	public static byte ToByte(string value) { }

	// RVA: 0x252D3E8 Offset: 0x252D3E8 VA: 0x252D3E8
	public static byte ToByte(string value, IFormatProvider provider) { }

	// RVA: 0x252D3F8 Offset: 0x252D3F8 VA: 0x252D3F8
	public static byte ToByte(string value, int fromBase) { }

	[CLSCompliantAttribute] // RVA: 0xBCE4F8 Offset: 0xBCE4F8 VA: 0xBCE4F8
	// RVA: 0x252D910 Offset: 0x252D910 VA: 0x252D910
	public static byte ToByte(uint value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE50C Offset: 0xBCE50C VA: 0xBCE50C
	// RVA: 0x252D9B4 Offset: 0x252D9B4 VA: 0x252D9B4
	public static byte ToByte(ulong value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE520 Offset: 0xBCE520 VA: 0xBCE520
	// RVA: 0x252DA58 Offset: 0x252DA58 VA: 0x252DA58
	public static byte ToByte(ushort value) { }

	// RVA: 0x252DB00 Offset: 0x252DB00 VA: 0x252DB00
	public static byte ToByte(object value, IFormatProvider provider) { }

	// RVA: 0x252DC9C Offset: 0x252DC9C VA: 0x252DC9C
	public static char ToChar(byte value) { }

	// RVA: 0x252DCA4 Offset: 0x252DCA4 VA: 0x252DCA4
	public static char ToChar(int value) { }

	// RVA: 0x252DD48 Offset: 0x252DD48 VA: 0x252DD48
	public static char ToChar(long value) { }

	// RVA: 0x252DDEC Offset: 0x252DDEC VA: 0x252DDEC
	public static char ToChar(float value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE534 Offset: 0xBCE534 VA: 0xBCE534
	// RVA: 0x252DE60 Offset: 0x252DE60 VA: 0x252DE60
	public static char ToChar(sbyte value) { }

	// RVA: 0x252DF00 Offset: 0x252DF00 VA: 0x252DF00
	public static char ToChar(short value) { }

	// RVA: 0x252DFA4 Offset: 0x252DFA4 VA: 0x252DFA4
	public static char ToChar(string value, IFormatProvider provider) { }

	[CLSCompliantAttribute] // RVA: 0xBCE548 Offset: 0xBCE548 VA: 0xBCE548
	// RVA: 0x252E00C Offset: 0x252E00C VA: 0x252E00C
	public static char ToChar(uint value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE55C Offset: 0xBCE55C VA: 0xBCE55C
	// RVA: 0x252E0B0 Offset: 0x252E0B0 VA: 0x252E0B0
	public static char ToChar(ulong value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE570 Offset: 0xBCE570 VA: 0xBCE570
	// RVA: 0x252E154 Offset: 0x252E154 VA: 0x252E154
	public static char ToChar(ushort value) { }

	// RVA: 0x252E158 Offset: 0x252E158 VA: 0x252E158
	public static char ToChar(object value, IFormatProvider provider) { }

	// RVA: 0x252E2F4 Offset: 0x252E2F4 VA: 0x252E2F4
	public static DateTime ToDateTime(string value, IFormatProvider provider) { }

	// RVA: 0x252E410 Offset: 0x252E410 VA: 0x252E410
	public static DateTime ToDateTime(short value) { }

	// RVA: 0x252E484 Offset: 0x252E484 VA: 0x252E484
	public static DateTime ToDateTime(int value) { }

	// RVA: 0x252E4F8 Offset: 0x252E4F8 VA: 0x252E4F8
	public static DateTime ToDateTime(long value) { }

	// RVA: 0x252E56C Offset: 0x252E56C VA: 0x252E56C
	public static DateTime ToDateTime(float value) { }

	// RVA: 0x252E5E0 Offset: 0x252E5E0 VA: 0x252E5E0
	public static DateTime ToDateTime(object value, IFormatProvider provider) { }

	[CLSCompliantAttribute] // RVA: 0xBCE584 Offset: 0xBCE584 VA: 0xBCE584
	// RVA: 0x252E7A0 Offset: 0x252E7A0 VA: 0x252E7A0
	public static DateTime ToDateTime(sbyte value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE598 Offset: 0xBCE598 VA: 0xBCE598
	// RVA: 0x252E814 Offset: 0x252E814 VA: 0x252E814
	public static DateTime ToDateTime(ushort value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE5AC Offset: 0xBCE5AC VA: 0xBCE5AC
	// RVA: 0x252E888 Offset: 0x252E888 VA: 0x252E888
	public static DateTime ToDateTime(uint value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE5C0 Offset: 0xBCE5C0 VA: 0xBCE5C0
	// RVA: 0x252E8FC Offset: 0x252E8FC VA: 0x252E8FC
	public static DateTime ToDateTime(ulong value) { }

	// RVA: 0x252E970 Offset: 0x252E970 VA: 0x252E970
	public static Decimal ToDecimal(bool value) { }

	// RVA: 0x252E9DC Offset: 0x252E9DC VA: 0x252E9DC
	public static Decimal ToDecimal(byte value) { }

	// RVA: 0x252EA44 Offset: 0x252EA44 VA: 0x252EA44
	public static Decimal ToDecimal(Decimal value) { }

	// RVA: 0x252EA48 Offset: 0x252EA48 VA: 0x252EA48
	public static Decimal ToDecimal(double value) { }

	// RVA: 0x252EAB8 Offset: 0x252EAB8 VA: 0x252EAB8
	public static Decimal ToDecimal(float value) { }

	// RVA: 0x252EB28 Offset: 0x252EB28 VA: 0x252EB28
	public static Decimal ToDecimal(int value) { }

	// RVA: 0x252EB90 Offset: 0x252EB90 VA: 0x252EB90
	public static Decimal ToDecimal(long value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE5D4 Offset: 0xBCE5D4 VA: 0xBCE5D4
	// RVA: 0x252EBF8 Offset: 0x252EBF8 VA: 0x252EBF8
	public static Decimal ToDecimal(sbyte value) { }

	// RVA: 0x252EC60 Offset: 0x252EC60 VA: 0x252EC60
	public static Decimal ToDecimal(short value) { }

	// RVA: 0x252ECC8 Offset: 0x252ECC8 VA: 0x252ECC8
	public static Decimal ToDecimal(string value, IFormatProvider provider) { }

	[CLSCompliantAttribute] // RVA: 0xBCE5E8 Offset: 0xBCE5E8 VA: 0xBCE5E8
	// RVA: 0x252ED70 Offset: 0x252ED70 VA: 0x252ED70
	public static Decimal ToDecimal(uint value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE5FC Offset: 0xBCE5FC VA: 0xBCE5FC
	// RVA: 0x252EDD8 Offset: 0x252EDD8 VA: 0x252EDD8
	public static Decimal ToDecimal(ulong value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE610 Offset: 0xBCE610 VA: 0xBCE610
	// RVA: 0x252EE40 Offset: 0x252EE40 VA: 0x252EE40
	public static Decimal ToDecimal(ushort value) { }

	// RVA: 0x252EEA8 Offset: 0x252EEA8 VA: 0x252EEA8
	public static Decimal ToDecimal(object value) { }

	// RVA: 0x252EF40 Offset: 0x252EF40 VA: 0x252EF40
	public static Decimal ToDecimal(object value, IFormatProvider provider) { }

	// RVA: 0x252F0F4 Offset: 0x252F0F4 VA: 0x252F0F4
	public static double ToDouble(bool value) { }

	// RVA: 0x252F108 Offset: 0x252F108 VA: 0x252F108
	public static double ToDouble(byte value) { }

	// RVA: 0x252F114 Offset: 0x252F114 VA: 0x252F114
	public static double ToDouble(Decimal value) { }

	// RVA: 0x252F18C Offset: 0x252F18C VA: 0x252F18C
	public static double ToDouble(double value) { }

	// RVA: 0x252F190 Offset: 0x252F190 VA: 0x252F190
	public static double ToDouble(float value) { }

	// RVA: 0x252F198 Offset: 0x252F198 VA: 0x252F198
	public static double ToDouble(int value) { }

	// RVA: 0x252F1A0 Offset: 0x252F1A0 VA: 0x252F1A0
	public static double ToDouble(long value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE624 Offset: 0xBCE624 VA: 0xBCE624
	// RVA: 0x252F1A8 Offset: 0x252F1A8 VA: 0x252F1A8
	public static double ToDouble(sbyte value) { }

	// RVA: 0x252F1B4 Offset: 0x252F1B4 VA: 0x252F1B4
	public static double ToDouble(short value) { }

	// RVA: 0x252F1C0 Offset: 0x252F1C0 VA: 0x252F1C0
	public static double ToDouble(string value, IFormatProvider provider) { }

	[CLSCompliantAttribute] // RVA: 0xBCE638 Offset: 0xBCE638 VA: 0xBCE638
	// RVA: 0x252F1D4 Offset: 0x252F1D4 VA: 0x252F1D4
	public static double ToDouble(uint value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE64C Offset: 0xBCE64C VA: 0xBCE64C
	// RVA: 0x252F1DC Offset: 0x252F1DC VA: 0x252F1DC
	public static double ToDouble(ulong value) { }

	[CLSCompliantAttribute] // RVA: 0xBCE660 Offset: 0xBCE660 VA: 0xBCE660
	// RVA: 0x252F1E4 Offset: 0x252F1E4 VA: 0x252F1E4
	public static double ToDouble(ushort value) { }

	// RVA: 0x252F1F0 Offset: 0x252F1F0 VA: 0x252F1F0
	public static double ToDouble(object value) { }

	// RVA: 0x252F26C Offset: 0x252F26C VA: 0x252F26C
	public static double ToDouble(object value, IFormatProvider provider) { }

	// RVA: 0x252F408 Offset: 0x252F408 VA: 0x252F408
	public static short ToInt16(bool value) { }

	// RVA: 0x252F410 Offset: 0x252F410 VA: 0x252F410
	public static short ToInt16(byte value) { }

	// RVA: 0x252F418 Offset: 0x252F418 VA: 0x252F418
	public static short ToInt16(char value) { }

	// RVA: 0x252F4BC Offset: 0x252F4BC VA: 0x252F4BC
	public static short ToInt16(Decimal value) { }

	// RVA: 0x252F638 Offset: 0x252F638 VA: 0x252F638
	public static short ToInt16(double value) { }

	// RVA: 0x252F764 Offset: 0x252F764 VA: 0x252F764
