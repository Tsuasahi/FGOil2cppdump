	public override long EchoRepliesReceived { get; }
	public override long EchoRepliesSent { get; }
	public override long EchoRequestsReceived { get; }
	public override long EchoRequestsSent { get; }
	public override long ErrorsReceived { get; }
	public override long ErrorsSent { get; }
	public override long MessagesReceived { get; }
	public override long MessagesSent { get; }
	public override long ParameterProblemsReceived { get; }
	public override long ParameterProblemsSent { get; }
	public override long RedirectsReceived { get; }
	public override long RedirectsSent { get; }
	public override long SourceQuenchesReceived { get; }
	public override long SourceQuenchesSent { get; }
	public override long TimeExceededMessagesReceived { get; }
	public override long TimeExceededMessagesSent { get; }
	public override long TimestampRepliesReceived { get; }
	public override long TimestampRepliesSent { get; }
	public override long TimestampRequestsReceived { get; }
	public override long TimestampRequestsSent { get; }

	// Methods

	// RVA: 0x1FFAAE0 Offset: 0x1FFAAE0 VA: 0x1FFAAE0
	public void .ctor(StringDictionary dic) { }

	// RVA: 0x1FFBA1C Offset: 0x1FFBA1C VA: 0x1FFBA1C
	private long Get(string name) { }

	// RVA: 0x1FFBB00 Offset: 0x1FFBB00 VA: 0x1FFBB00 Slot: 4
	public override long get_AddressMaskRepliesReceived() { }

	// RVA: 0x1FFBB50 Offset: 0x1FFBB50 VA: 0x1FFBB50 Slot: 5
	public override long get_AddressMaskRepliesSent() { }

	// RVA: 0x1FFBBA0 Offset: 0x1FFBBA0 VA: 0x1FFBBA0 Slot: 6
	public override long get_AddressMaskRequestsReceived() { }

	// RVA: 0x1FFBBF0 Offset: 0x1FFBBF0 VA: 0x1FFBBF0 Slot: 7
	public override long get_AddressMaskRequestsSent() { }

	// RVA: 0x1FFBC40 Offset: 0x1FFBC40 VA: 0x1FFBC40 Slot: 8
	public override long get_DestinationUnreachableMessagesReceived() { }

	// RVA: 0x1FFBC90 Offset: 0x1FFBC90 VA: 0x1FFBC90 Slot: 9
	public override long get_DestinationUnreachableMessagesSent() { }

	// RVA: 0x1FFBCE0 Offset: 0x1FFBCE0 VA: 0x1FFBCE0 Slot: 10
	public override long get_EchoRepliesReceived() { }

	// RVA: 0x1FFBD30 Offset: 0x1FFBD30 VA: 0x1FFBD30 Slot: 11
	public override long get_EchoRepliesSent() { }

	// RVA: 0x1FFBD80 Offset: 0x1FFBD80 VA: 0x1FFBD80 Slot: 12
	public override long get_EchoRequestsReceived() { }

	// RVA: 0x1FFBDD0 Offset: 0x1FFBDD0 VA: 0x1FFBDD0 Slot: 13
	public override long get_EchoRequestsSent() { }

	// RVA: 0x1FFBE20 Offset: 0x1FFBE20 VA: 0x1FFBE20 Slot: 14
	public override long get_ErrorsReceived() { }

	// RVA: 0x1FFBE70 Offset: 0x1FFBE70 VA: 0x1FFBE70 Slot: 15
	public override long get_ErrorsSent() { }

	// RVA: 0x1FFBEC0 Offset: 0x1FFBEC0 VA: 0x1FFBEC0 Slot: 16
	public override long get_MessagesReceived() { }

	// RVA: 0x1FFBF10 Offset: 0x1FFBF10 VA: 0x1FFBF10 Slot: 17
	public override long get_MessagesSent() { }

	// RVA: 0x1FFBF60 Offset: 0x1FFBF60 VA: 0x1FFBF60 Slot: 18
	public override long get_ParameterProblemsReceived() { }

	// RVA: 0x1FFBFB0 Offset: 0x1FFBFB0 VA: 0x1FFBFB0 Slot: 19
	public override long get_ParameterProblemsSent() { }

	// RVA: 0x1FFC000 Offset: 0x1FFC000 VA: 0x1FFC000 Slot: 20
	public override long get_RedirectsReceived() { }

	// RVA: 0x1FFC050 Offset: 0x1FFC050 VA: 0x1FFC050 Slot: 21
	public override long get_RedirectsSent() { }

	// RVA: 0x1FFC0A0 Offset: 0x1FFC0A0 VA: 0x1FFC0A0 Slot: 22
	public override long get_SourceQuenchesReceived() { }

	// RVA: 0x1FFC0F0 Offset: 0x1FFC0F0 VA: 0x1FFC0F0 Slot: 23
	public override long get_SourceQuenchesSent() { }

	// RVA: 0x1FFC140 Offset: 0x1FFC140 VA: 0x1FFC140 Slot: 24
	public override long get_TimeExceededMessagesReceived() { }

	// RVA: 0x1FFC190 Offset: 0x1FFC190 VA: 0x1FFC190 Slot: 25
	public override long get_TimeExceededMessagesSent() { }

	// RVA: 0x1FFC1E0 Offset: 0x1FFC1E0 VA: 0x1FFC1E0 Slot: 26
	public override long get_TimestampRepliesReceived() { }

	// RVA: 0x1FFC230 Offset: 0x1FFC230 VA: 0x1FFC230 Slot: 27
	public override long get_TimestampRepliesSent() { }

	// RVA: 0x1FFC280 Offset: 0x1FFC280 VA: 0x1FFC280 Slot: 28
	public override long get_TimestampRequestsReceived() { }

	// RVA: 0x1FFC2D0 Offset: 0x1FFC2D0 VA: 0x1FFC2D0 Slot: 29
	public override long get_TimestampRequestsSent() { }
}

// Namespace: System.Net.NetworkInformation
internal class Win32IcmpV4Statistics : IcmpV4Statistics // TypeDefIndex: 1380
{
	// Fields
	private Win32_MIBICMPSTATS iin; // 0x10
	private Win32_MIBICMPSTATS iout; // 0x44

	// Properties
	public override long AddressMaskRepliesReceived { get; }
	public override long AddressMaskRepliesSent { get; }
	public override long AddressMaskRequestsReceived { get; }
	public override long AddressMaskRequestsSent { get; }
	public override long DestinationUnreachableMessagesReceived { get; }
	public override long DestinationUnreachableMessagesSent { get; }
	public override long EchoRepliesReceived { get; }
	public override long EchoRepliesSent { get; }
	public override long EchoRequestsReceived { get; }
	public override long EchoRequestsSent { get; }
	public override long ErrorsReceived { get; }
	public override long ErrorsSent { get; }
	public override long MessagesReceived { get; }
	public override long MessagesSent { get; }
	public override long ParameterProblemsReceived { get; }
	public override long ParameterProblemsSent { get; }
	public override long RedirectsReceived { get; }
	public override long RedirectsSent { get; }
	public override long SourceQuenchesReceived { get; }
	public override long SourceQuenchesSent { get; }
	public override long TimeExceededMessagesReceived { get; }
	public override long TimeExceededMessagesSent { get; }
	public override long TimestampRepliesReceived { get; }
	public override long TimestampRepliesSent { get; }
	public override long TimestampRequestsReceived { get; }
	public override long TimestampRequestsSent { get; }

	// Methods

	// RVA: 0x2007C74 Offset: 0x2007C74 VA: 0x2007C74
	public void .ctor(Win32_MIBICMPINFO info) { }

	// RVA: 0x20096F0 Offset: 0x20096F0 VA: 0x20096F0 Slot: 4
	public override long get_AddressMaskRepliesReceived() { }

	// RVA: 0x20096F8 Offset: 0x20096F8 VA: 0x20096F8 Slot: 5
	public override long get_AddressMaskRepliesSent() { }

	// RVA: 0x2009700 Offset: 0x2009700 VA: 0x2009700 Slot: 6
	public override long get_AddressMaskRequestsReceived() { }

	// RVA: 0x2009708 Offset: 0x2009708 VA: 0x2009708 Slot: 7
	public override long get_AddressMaskRequestsSent() { }

	// RVA: 0x2009710 Offset: 0x2009710 VA: 0x2009710 Slot: 8
	public override long get_DestinationUnreachableMessagesReceived() { }

	// RVA: 0x2009718 Offset: 0x2009718 VA: 0x2009718 Slot: 9
	public override long get_DestinationUnreachableMessagesSent() { }

	// RVA: 0x2009720 Offset: 0x2009720 VA: 0x2009720 Slot: 10
	public override long get_EchoRepliesReceived() { }

	// RVA: 0x2009728 Offset: 0x2009728 VA: 0x2009728 Slot: 11
	public override long get_EchoRepliesSent() { }

	// RVA: 0x2009730 Offset: 0x2009730 VA: 0x2009730 Slot: 12
	public override long get_EchoRequestsReceived() { }

	// RVA: 0x2009738 Offset: 0x2009738 VA: 0x2009738 Slot: 13
	public override long get_EchoRequestsSent() { }

	// RVA: 0x2009740 Offset: 0x2009740 VA: 0x2009740 Slot: 14
	public override long get_ErrorsReceived() { }

	// RVA: 0x2009748 Offset: 0x2009748 VA: 0x2009748 Slot: 15
	public override long get_ErrorsSent() { }

	// RVA: 0x2009750 Offset: 0x2009750 VA: 0x2009750 Slot: 16
	public override long get_MessagesReceived() { }

	// RVA: 0x2009758 Offset: 0x2009758 VA: 0x2009758 Slot: 17
	public override long get_MessagesSent() { }

	// RVA: 0x2009760 Offset: 0x2009760 VA: 0x2009760 Slot: 18
	public override long get_ParameterProblemsReceived() { }

	// RVA: 0x2009768 Offset: 0x2009768 VA: 0x2009768 Slot: 19
	public override long get_ParameterProblemsSent() { }

	// RVA: 0x2009770 Offset: 0x2009770 VA: 0x2009770 Slot: 20
	public override long get_RedirectsReceived() { }

	// RVA: 0x2009778 Offset: 0x2009778 VA: 0x2009778 Slot: 21
	public override long get_RedirectsSent() { }

	// RVA: 0x2009780 Offset: 0x2009780 VA: 0x2009780 Slot: 22
	public override long get_SourceQuenchesReceived() { }

	// RVA: 0x2009788 Offset: 0x2009788 VA: 0x2009788 Slot: 23
	public override long get_SourceQuenchesSent() { }

	// RVA: 0x2009790 Offset: 0x2009790 VA: 0x2009790 Slot: 24
	public override long get_TimeExceededMessagesReceived() { }

	// RVA: 0x2009798 Offset: 0x2009798 VA: 0x2009798 Slot: 25
	public override long get_TimeExceededMessagesSent() { }

	// RVA: 0x20097A0 Offset: 0x20097A0 VA: 0x20097A0 Slot: 26
	public override long get_TimestampRepliesReceived() { }

	// RVA: 0x20097A8 Offset: 0x20097A8 VA: 0x20097A8 Slot: 27
	public override long get_TimestampRepliesSent() { }

	// RVA: 0x20097B0 Offset: 0x20097B0 VA: 0x20097B0 Slot: 28
	public override long get_TimestampRequestsReceived() { }

	// RVA: 0x20097B8 Offset: 0x20097B8 VA: 0x20097B8 Slot: 29
	public override long get_TimestampRequestsSent() { }
}

// Namespace: System.Net.NetworkInformation
internal struct Win32_MIBICMPINFO // TypeDefIndex: 1381
{
	// Fields
	public Win32_MIBICMPSTATS InStats; // 0x0
	public Win32_MIBICMPSTATS OutStats; // 0x34
}

// Namespace: System.Net.NetworkInformation
internal struct Win32_MIBICMPSTATS // TypeDefIndex: 1382
{
	// Fields
	public uint Msgs; // 0x0
	public uint Errors; // 0x4
	public uint DestUnreachs; // 0x8
	public uint TimeExcds; // 0xC
	public uint ParmProbs; // 0x10
	public uint SrcQuenchs; // 0x14
	public uint Redirects; // 0x18
	public uint Echos; // 0x1C
	public uint EchoReps; // 0x20
	public uint Timestamps; // 0x24
	public uint TimestampReps; // 0x28
	public uint AddrMasks; // 0x2C
	public uint AddrMaskReps; // 0x30
}

// Namespace: System.Net.NetworkInformation
public abstract class IcmpV6Statistics // TypeDefIndex: 1383
{
	// Properties
	public abstract long DestinationUnreachableMessagesReceived { get; }
	public abstract long DestinationUnreachableMessagesSent { get; }
	public abstract long EchoRepliesReceived { get; }
	public abstract long EchoRepliesSent { get; }
	public abstract long EchoRequestsReceived { get; }
	public abstract long EchoRequestsSent { get; }
	public abstract long ErrorsReceived { get; }
	public abstract long ErrorsSent { get; }
	public abstract long MembershipQueriesReceived { get; }
	public abstract long MembershipQueriesSent { get; }
	public abstract long MembershipReductionsReceived { get; }
	public abstract long MembershipReductionsSent { get; }
	public abstract long MembershipReportsReceived { get; }
	public abstract long MembershipReportsSent { get; }
	public abstract long MessagesReceived { get; }
	public abstract long MessagesSent { get; }
	public abstract long NeighborAdvertisementsReceived { get; }
	public abstract long NeighborAdvertisementsSent { get; }
	public abstract long NeighborSolicitsReceived { get; }
	public abstract long NeighborSolicitsSent { get; }
	public abstract long PacketTooBigMessagesReceived { get; }
	public abstract long PacketTooBigMessagesSent { get; }
	public abstract long ParameterProblemsReceived { get; }
	public abstract long ParameterProblemsSent { get; }
	public abstract long RedirectsReceived { get; }
	public abstract long RedirectsSent { get; }
	public abstract long RouterAdvertisementsReceived { get; }
	public abstract long RouterAdvertisementsSent { get; }
	public abstract long RouterSolicitsReceived { get; }
	public abstract long RouterSolicitsSent { get; }
	public abstract long TimeExceededMessagesReceived { get; }
	public abstract long TimeExceededMessagesSent { get; }

	// Methods

	// RVA: 0x1FF5070 Offset: 0x1FF5070 VA: 0x1FF5070
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract long get_DestinationUnreachableMessagesReceived();

	// RVA: -1 Offset: -1 Slot: 5
	public abstract long get_DestinationUnreachableMessagesSent();

	// RVA: -1 Offset: -1 Slot: 6
	public abstract long get_EchoRepliesReceived();

	// RVA: -1 Offset: -1 Slot: 7
	public abstract long get_EchoRepliesSent();

	// RVA: -1 Offset: -1 Slot: 8
	public abstract long get_EchoRequestsReceived();

	// RVA: -1 Offset: -1 Slot: 9
	public abstract long get_EchoRequestsSent();

	// RVA: -1 Offset: -1 Slot: 10
	public abstract long get_ErrorsReceived();

	// RVA: -1 Offset: -1 Slot: 11
	public abstract long get_ErrorsSent();

	// RVA: -1 Offset: -1 Slot: 12
	public abstract long get_MembershipQueriesReceived();

	// RVA: -1 Offset: -1 Slot: 13
	public abstract long get_MembershipQueriesSent();

	// RVA: -1 Offset: -1 Slot: 14
	public abstract long get_MembershipReductionsReceived();

	// RVA: -1 Offset: -1 Slot: 15
	public abstract long get_MembershipReductionsSent();

	// RVA: -1 Offset: -1 Slot: 16
	public abstract long get_MembershipReportsReceived();

	// RVA: -1 Offset: -1 Slot: 17
	public abstract long get_MembershipReportsSent();

	// RVA: -1 Offset: -1 Slot: 18
	public abstract long get_MessagesReceived();

	// RVA: -1 Offset: -1 Slot: 19
	public abstract long get_MessagesSent();

	// RVA: -1 Offset: -1 Slot: 20
	public abstract long get_NeighborAdvertisementsReceived();

	// RVA: -1 Offset: -1 Slot: 21
	public abstract long get_NeighborAdvertisementsSent();

	// RVA: -1 Offset: -1 Slot: 22
	public abstract long get_NeighborSolicitsReceived();

	// RVA: -1 Offset: -1 Slot: 23
	public abstract long get_NeighborSolicitsSent();

	// RVA: -1 Offset: -1 Slot: 24
	public abstract long get_PacketTooBigMessagesReceived();

	// RVA: -1 Offset: -1 Slot: 25
	public abstract long get_PacketTooBigMessagesSent();

	// RVA: -1 Offset: -1 Slot: 26
	public abstract long get_ParameterProblemsReceived();

	// RVA: -1 Offset: -1 Slot: 27
	public abstract long get_ParameterProblemsSent();

	// RVA: -1 Offset: -1 Slot: 28
	public abstract long get_RedirectsReceived();

	// RVA: -1 Offset: -1 Slot: 29
	public abstract long get_RedirectsSent();

	// RVA: -1 Offset: -1 Slot: 30
	public abstract long get_RouterAdvertisementsReceived();

	// RVA: -1 Offset: -1 Slot: 31
	public abstract long get_RouterAdvertisementsSent();

	// RVA: -1 Offset: -1 Slot: 32
	public abstract long get_RouterSolicitsReceived();

	// RVA: -1 Offset: -1 Slot: 33
	public abstract long get_RouterSolicitsSent();

	// RVA: -1 Offset: -1 Slot: 34
	public abstract long get_TimeExceededMessagesReceived();

	// RVA: -1 Offset: -1 Slot: 35
	public abstract long get_TimeExceededMessagesSent();
}

// Namespace: System.Net.NetworkInformation
internal class MibIcmpV6Statistics : IcmpV6Statistics // TypeDefIndex: 1384
{
	// Fields
	private StringDictionary dic; // 0x10

	// Properties
	public override long DestinationUnreachableMessagesReceived { get; }
	public override long DestinationUnreachableMessagesSent { get; }
	public override long EchoRepliesReceived { get; }
	public override long EchoRepliesSent { get; }
	public override long EchoRequestsReceived { get; }
	public override long EchoRequestsSent { get; }
	public override long ErrorsReceived { get; }
	public override long ErrorsSent { get; }
	public override long MembershipQueriesReceived { get; }
	public override long MembershipQueriesSent { get; }
	public override long MembershipReductionsReceived { get; }
	public override long MembershipReductionsSent { get; }
	public override long MembershipReportsReceived { get; }
	public override long MembershipReportsSent { get; }
	public override long MessagesReceived { get; }
	public override long MessagesSent { get; }
	public override long NeighborAdvertisementsReceived { get; }
	public override long NeighborAdvertisementsSent { get; }
	public override long NeighborSolicitsReceived { get; }
	public override long NeighborSolicitsSent { get; }
	public override long PacketTooBigMessagesReceived { get; }
	public override long PacketTooBigMessagesSent { get; }
	public override long ParameterProblemsReceived { get; }
	public override long ParameterProblemsSent { get; }
	public override long RedirectsReceived { get; }
	public override long RedirectsSent { get; }
	public override long RouterAdvertisementsReceived { get; }
	public override long RouterAdvertisementsSent { get; }
	public override long RouterSolicitsReceived { get; }
	public override long RouterSolicitsSent { get; }
	public override long TimeExceededMessagesReceived { get; }
	public override long TimeExceededMessagesSent { get; }

	// Methods

	// RVA: 0x1FFAB8C Offset: 0x1FFAB8C VA: 0x1FFAB8C
	public void .ctor(StringDictionary dic) { }

	// RVA: 0x1FFC320 Offset: 0x1FFC320 VA: 0x1FFC320
	private long Get(string name) { }

	// RVA: 0x1FFC404 Offset: 0x1FFC404 VA: 0x1FFC404 Slot: 4
	public override long get_DestinationUnreachableMessagesReceived() { }

	// RVA: 0x1FFC454 Offset: 0x1FFC454 VA: 0x1FFC454 Slot: 5
	public override long get_DestinationUnreachableMessagesSent() { }

	// RVA: 0x1FFC4A4 Offset: 0x1FFC4A4 VA: 0x1FFC4A4 Slot: 6
	public override long get_EchoRepliesReceived() { }

	// RVA: 0x1FFC4F4 Offset: 0x1FFC4F4 VA: 0x1FFC4F4 Slot: 7
	public override long get_EchoRepliesSent() { }

	// RVA: 0x1FFC544 Offset: 0x1FFC544 VA: 0x1FFC544 Slot: 8
	public override long get_EchoRequestsReceived() { }

	// RVA: 0x1FFC594 Offset: 0x1FFC594 VA: 0x1FFC594 Slot: 9
	public override long get_EchoRequestsSent() { }

	// RVA: 0x1FFC5E4 Offset: 0x1FFC5E4 VA: 0x1FFC5E4 Slot: 10
	public override long get_ErrorsReceived() { }

	// RVA: 0x1FFC634 Offset: 0x1FFC634 VA: 0x1FFC634 Slot: 11
	public override long get_ErrorsSent() { }

	// RVA: 0x1FFC684 Offset: 0x1FFC684 VA: 0x1FFC684 Slot: 12
	public override long get_MembershipQueriesReceived() { }

	// RVA: 0x1FFC6D4 Offset: 0x1FFC6D4 VA: 0x1FFC6D4 Slot: 13
	public override long get_MembershipQueriesSent() { }

	// RVA: 0x1FFC724 Offset: 0x1FFC724 VA: 0x1FFC724 Slot: 14
	public override long get_MembershipReductionsReceived() { }

	// RVA: 0x1FFC774 Offset: 0x1FFC774 VA: 0x1FFC774 Slot: 15
	public override long get_MembershipReductionsSent() { }

	// RVA: 0x1FFC7C4 Offset: 0x1FFC7C4 VA: 0x1FFC7C4 Slot: 16
	public override long get_MembershipReportsReceived() { }

	// RVA: 0x1FFC814 Offset: 0x1FFC814 VA: 0x1FFC814 Slot: 17
	public override long get_MembershipReportsSent() { }

	// RVA: 0x1FFC864 Offset: 0x1FFC864 VA: 0x1FFC864 Slot: 18
	public override long get_MessagesReceived() { }

	// RVA: 0x1FFC8B4 Offset: 0x1FFC8B4 VA: 0x1FFC8B4 Slot: 19
	public override long get_MessagesSent() { }

	// RVA: 0x1FFC904 Offset: 0x1FFC904 VA: 0x1FFC904 Slot: 20
	public override long get_NeighborAdvertisementsReceived() { }

	// RVA: 0x1FFC954 Offset: 0x1FFC954 VA: 0x1FFC954 Slot: 21
	public override long get_NeighborAdvertisementsSent() { }

	// RVA: 0x1FFC9A4 Offset: 0x1FFC9A4 VA: 0x1FFC9A4 Slot: 22
	public override long get_NeighborSolicitsReceived() { }

	// RVA: 0x1FFC9F4 Offset: 0x1FFC9F4 VA: 0x1FFC9F4 Slot: 23
	public override long get_NeighborSolicitsSent() { }

	// RVA: 0x1FFCA44 Offset: 0x1FFCA44 VA: 0x1FFCA44 Slot: 24
	public override long get_PacketTooBigMessagesReceived() { }

	// RVA: 0x1FFCA94 Offset: 0x1FFCA94 VA: 0x1FFCA94 Slot: 25
	public override long get_PacketTooBigMessagesSent() { }

	// RVA: 0x1FFCAE4 Offset: 0x1FFCAE4 VA: 0x1FFCAE4 Slot: 26
	public override long get_ParameterProblemsReceived() { }

	// RVA: 0x1FFCB34 Offset: 0x1FFCB34 VA: 0x1FFCB34 Slot: 27
	public override long get_ParameterProblemsSent() { }

	// RVA: 0x1FFCB84 Offset: 0x1FFCB84 VA: 0x1FFCB84 Slot: 28
	public override long get_RedirectsReceived() { }

	// RVA: 0x1FFCBD4 Offset: 0x1FFCBD4 VA: 0x1FFCBD4 Slot: 29
	public override long get_RedirectsSent() { }

	// RVA: 0x1FFCC24 Offset: 0x1FFCC24 VA: 0x1FFCC24 Slot: 30
	public override long get_RouterAdvertisementsReceived() { }

	// RVA: 0x1FFCC74 Offset: 0x1FFCC74 VA: 0x1FFCC74 Slot: 31
	public override long get_RouterAdvertisementsSent() { }

	// RVA: 0x1FFCCC4 Offset: 0x1FFCCC4 VA: 0x1FFCCC4 Slot: 32
	public override long get_RouterSolicitsReceived() { }

	// RVA: 0x1FFCD14 Offset: 0x1FFCD14 VA: 0x1FFCD14 Slot: 33
	public override long get_RouterSolicitsSent() { }

	// RVA: 0x1FFCD64 Offset: 0x1FFCD64 VA: 0x1FFCD64 Slot: 34
	public override long get_TimeExceededMessagesReceived() { }

	// RVA: 0x1FFCDB4 Offset: 0x1FFCDB4 VA: 0x1FFCDB4 Slot: 35
	public override long get_TimeExceededMessagesSent() { }
}

// Namespace: System.Net.NetworkInformation
internal class IcmpV6MessageTypes // TypeDefIndex: 1385
{
	// Fields
	public const int DestinationUnreachable = 1;
	public const int PacketTooBig = 2;
	public const int TimeExceeded = 3;
	public const int ParameterProblem = 4;
	public const int EchoRequest = 128;
	public const int EchoReply = 129;
	public const int GroupMembershipQuery = 130;
	public const int GroupMembershipReport = 131;
	public const int GroupMembershipReduction = 132;
	public const int RouterSolicitation = 133;
	public const int RouterAdvertisement = 134;
	public const int NeighborSolicitation = 135;
	public const int NeighborAdvertisement = 136;
	public const int Redirect = 137;
	public const int RouterRenumbering = 138;

	// Methods

	// RVA: 0x1FF5068 Offset: 0x1FF5068 VA: 0x1FF5068
	public void .ctor() { }
}

// Namespace: System.Net.NetworkInformation
internal class Win32IcmpV6Statistics : IcmpV6Statistics // TypeDefIndex: 1386
{
	// Fields
	private Win32_MIBICMPSTATS_EX iin; // 0x10
	private Win32_MIBICMPSTATS_EX iout; // 0x20

	// Properties
	public override long DestinationUnreachableMessagesReceived { get; }
	public override long DestinationUnreachableMessagesSent { get; }
	public override long EchoRepliesReceived { get; }
	public override long EchoRepliesSent { get; }
	public override long EchoRequestsReceived { get; }
	public override long EchoRequestsSent { get; }
	public override long ErrorsReceived { get; }
	public override long ErrorsSent { get; }
	public override long MembershipQueriesReceived { get; }
	public override long MembershipQueriesSent { get; }
	public override long MembershipReductionsReceived { get; }
	public override long MembershipReductionsSent { get; }
	public override long MembershipReportsReceived { get; }
	public override long MembershipReportsSent { get; }
	public override long MessagesReceived { get; }
	public override long MessagesSent { get; }
	public override long NeighborAdvertisementsReceived { get; }
	public override long NeighborAdvertisementsSent { get; }
	public override long NeighborSolicitsReceived { get; }
	public override long NeighborSolicitsSent { get; }
	public override long PacketTooBigMessagesReceived { get; }
	public override long PacketTooBigMessagesSent { get; }
	public override long ParameterProblemsReceived { get; }
	public override long ParameterProblemsSent { get; }
	public override long RedirectsReceived { get; }
	public override long RedirectsSent { get; }
	public override long RouterAdvertisementsReceived { get; }
	public override long RouterAdvertisementsSent { get; }
	public override long RouterSolicitsReceived { get; }
	public override long RouterSolicitsSent { get; }
	public override long TimeExceededMessagesReceived { get; }
	public override long TimeExceededMessagesSent { get; }

	// Methods

	// RVA: 0x2007EBC Offset: 0x2007EBC VA: 0x2007EBC
	public void .ctor(Win32_MIB_ICMP_EX info) { }

	// RVA: 0x20097C0 Offset: 0x20097C0 VA: 0x20097C0 Slot: 4
	public override long get_DestinationUnreachableMessagesReceived() { }

	// RVA: 0x2009808 Offset: 0x2009808 VA: 0x2009808 Slot: 5
	public override long get_DestinationUnreachableMessagesSent() { }

	// RVA: 0x2009850 Offset: 0x2009850 VA: 0x2009850 Slot: 6
	public override long get_EchoRepliesReceived() { }

	// RVA: 0x2009898 Offset: 0x2009898 VA: 0x2009898 Slot: 7
	public override long get_EchoRepliesSent() { }

	// RVA: 0x20098E0 Offset: 0x20098E0 VA: 0x20098E0 Slot: 8
	public override long get_EchoRequestsReceived() { }

	// RVA: 0x2009928 Offset: 0x2009928 VA: 0x2009928 Slot: 9
	public override long get_EchoRequestsSent() { }

	// RVA: 0x2009970 Offset: 0x2009970 VA: 0x2009970 Slot: 10
	public override long get_ErrorsReceived() { }

	// RVA: 0x2009978 Offset: 0x2009978 VA: 0x2009978 Slot: 11
	public override long get_ErrorsSent() { }

	// RVA: 0x2009980 Offset: 0x2009980 VA: 0x2009980 Slot: 12
	public override long get_MembershipQueriesReceived() { }

	// RVA: 0x20099C8 Offset: 0x20099C8 VA: 0x20099C8 Slot: 13
	public override long get_MembershipQueriesSent() { }

	// RVA: 0x2009A10 Offset: 0x2009A10 VA: 0x2009A10 Slot: 14
	public override long get_MembershipReductionsReceived() { }

	// RVA: 0x2009A58 Offset: 0x2009A58 VA: 0x2009A58 Slot: 15
	public override long get_MembershipReductionsSent() { }

	// RVA: 0x2009AA0 Offset: 0x2009AA0 VA: 0x2009AA0 Slot: 16
	public override long get_MembershipReportsReceived() { }

	// RVA: 0x2009AE8 Offset: 0x2009AE8 VA: 0x2009AE8 Slot: 17
	public override long get_MembershipReportsSent() { }

	// RVA: 0x2009B30 Offset: 0x2009B30 VA: 0x2009B30 Slot: 18
	public override long get_MessagesReceived() { }

	// RVA: 0x2009B38 Offset: 0x2009B38 VA: 0x2009B38 Slot: 19
	public override long get_MessagesSent() { }

	// RVA: 0x2009B40 Offset: 0x2009B40 VA: 0x2009B40 Slot: 20
	public override long get_NeighborAdvertisementsReceived() { }

	// RVA: 0x2009B88 Offset: 0x2009B88 VA: 0x2009B88 Slot: 21
	public override long get_NeighborAdvertisementsSent() { }

	// RVA: 0x2009BD0 Offset: 0x2009BD0 VA: 0x2009BD0 Slot: 22
	public override long get_NeighborSolicitsReceived() { }

	// RVA: 0x2009C18 Offset: 0x2009C18 VA: 0x2009C18 Slot: 23
	public override long get_NeighborSolicitsSent() { }

	// RVA: 0x2009C60 Offset: 0x2009C60 VA: 0x2009C60 Slot: 24
	public override long get_PacketTooBigMessagesReceived() { }

	// RVA: 0x2009CA8 Offset: 0x2009CA8 VA: 0x2009CA8 Slot: 25
	public override long get_PacketTooBigMessagesSent() { }

	// RVA: 0x2009CF0 Offset: 0x2009CF0 VA: 0x2009CF0 Slot: 26
	public override long get_ParameterProblemsReceived() { }

	// RVA: 0x2009D38 Offset: 0x2009D38 VA: 0x2009D38 Slot: 27
	public override long get_ParameterProblemsSent() { }

	// RVA: 0x2009D80 Offset: 0x2009D80 VA: 0x2009D80 Slot: 28
	public override long get_RedirectsReceived() { }

	// RVA: 0x2009DC8 Offset: 0x2009DC8 VA: 0x2009DC8 Slot: 29
	public override long get_RedirectsSent() { }

	// RVA: 0x2009E10 Offset: 0x2009E10 VA: 0x2009E10 Slot: 30
	public override long get_RouterAdvertisementsReceived() { }

	// RVA: 0x2009E58 Offset: 0x2009E58 VA: 0x2009E58 Slot: 31
	public override long get_RouterAdvertisementsSent() { }

	// RVA: 0x2009EA0 Offset: 0x2009EA0 VA: 0x2009EA0 Slot: 32
	public override long get_RouterSolicitsReceived() { }

	// RVA: 0x2009EE8 Offset: 0x2009EE8 VA: 0x2009EE8 Slot: 33
	public override long get_RouterSolicitsSent() { }

	// RVA: 0x2009F30 Offset: 0x2009F30 VA: 0x2009F30 Slot: 34
	public override long get_TimeExceededMessagesReceived() { }

	// RVA: 0x2009F78 Offset: 0x2009F78 VA: 0x2009F78 Slot: 35
	public override long get_TimeExceededMessagesSent() { }
}

// Namespace: System.Net.NetworkInformation
internal struct Win32_MIB_ICMP_EX // TypeDefIndex: 1387
{
	// Fields
	public Win32_MIBICMPSTATS_EX InStats; // 0x0
	public Win32_MIBICMPSTATS_EX OutStats; // 0x10
}

// Namespace: System.Net.NetworkInformation
internal struct Win32_MIBICMPSTATS_EX // TypeDefIndex: 1388
{
	// Fields
	public uint Msgs; // 0x0
	public uint Errors; // 0x4
	public uint[] Counts; // 0x8
}

// Namespace: System.Net.NetworkInformation
internal struct ifa_ifu // TypeDefIndex: 1389
{
	// Fields
	public IntPtr ifu_broadaddr; // 0x0
	public IntPtr ifu_dstaddr; // 0x0
}

// Namespace: System.Net.NetworkInformation
internal struct ifaddrs // TypeDefIndex: 1390
{
	// Fields
	public IntPtr ifa_next; // 0x0
	public string ifa_name; // 0x8
	public uint ifa_flags; // 0x10
	public IntPtr ifa_addr; // 0x18
	public IntPtr ifa_netmask; // 0x20
	public ifa_ifu ifa_ifu; // 0x28
	public IntPtr ifa_data; // 0x30
}

// Namespace: System.Net.NetworkInformation
internal struct sockaddr_in // TypeDefIndex: 1391
{
	// Fields
	public ushort sin_family; // 0x0
	public ushort sin_port; // 0x2
	public uint sin_addr; // 0x4
}

// Namespace: System.Net.NetworkInformation
internal struct sockaddr_in6 // TypeDefIndex: 1392
{
	// Fields
	public ushort sin6_family; // 0x0
	public ushort sin6_port; // 0x2
	public uint sin6_flowinfo; // 0x4
	public in6_addr sin6_addr; // 0x8
	public uint sin6_scope_id; // 0x10
}

// Namespace: System.Net.NetworkInformation
internal struct in6_addr // TypeDefIndex: 1393
{
	// Fields
	public byte[] u6_addr8; // 0x0
}

// Namespace: System.Net.NetworkInformation
internal struct sockaddr_ll // TypeDefIndex: 1394
{
	// Fields
	public ushort sll_family; // 0x0
	public ushort sll_protocol; // 0x2
	public int sll_ifindex; // 0x4
	public ushort sll_hatype; // 0x8
	public byte sll_pkttype; // 0xA
	public byte sll_halen; // 0xB
	public byte[] sll_addr; // 0x10
}

// Namespace: System.Net.NetworkInformation
internal enum LinuxArpHardware // TypeDefIndex: 1395
{
	// Fields
	public int value__; // 0x0
	public const LinuxArpHardware ETHER = 1;
	public const LinuxArpHardware EETHER = 2;
	public const LinuxArpHardware PRONET = 4;
	public const LinuxArpHardware ATM = 19;
	public const LinuxArpHardware SLIP = 256;
	public const LinuxArpHardware PPP = 512;
	public const LinuxArpHardware LOOPBACK = 772;
	public const LinuxArpHardware FDDI = 774;
	public const LinuxArpHardware TUNNEL = 768;
	public const LinuxArpHardware TUNNEL6 = 769;
}

// Namespace: System.Net.NetworkInformation.MacOsStructs
internal struct ifaddrs // TypeDefIndex: 1396
{
	// Fields
	public IntPtr ifa_next; // 0x0
	public string ifa_name; // 0x8
	public uint ifa_flags; // 0x10
	public IntPtr ifa_addr; // 0x18
	public IntPtr ifa_netmask; // 0x20
	public IntPtr ifa_dstaddr; // 0x28
	public IntPtr ifa_data; // 0x30
}

// Namespace: System.Net.NetworkInformation.MacOsStructs
internal struct sockaddr // TypeDefIndex: 1397
{
	// Fields
	public byte sa_len; // 0x0
	public byte sa_family; // 0x1
}

// Namespace: System.Net.NetworkInformation.MacOsStructs
internal struct sockaddr_in // TypeDefIndex: 1398
{
	// Fields
	public byte sin_len; // 0x0
	public byte sin_family; // 0x1
	public ushort sin_port; // 0x2
	public uint sin_addr; // 0x4
}

// Namespace: System.Net.NetworkInformation.MacOsStructs
internal struct in6_addr // TypeDefIndex: 1399
{
	// Fields
	public byte[] u6_addr8; // 0x0
}

// Namespace: System.Net.NetworkInformation.MacOsStructs
internal struct sockaddr_in6 // TypeDefIndex: 1400
{
	// Fields
	public byte sin6_len; // 0x0
	public byte sin6_family; // 0x1
	public ushort sin6_port; // 0x2
	public uint sin6_flowinfo; // 0x4
	public in6_addr sin6_addr; // 0x8
	public uint sin6_scope_id; // 0x10
}

// Namespace: System.Net.NetworkInformation.MacOsStructs
internal struct sockaddr_dl // TypeDefIndex: 1401
{
	// Fields
	public byte sdl_len; // 0x0
	public byte sdl_family; // 0x1
	public ushort sdl_index; // 0x2
	public byte sdl_type; // 0x4
	public byte sdl_nlen; // 0x5
	public byte sdl_alen; // 0x6
	public byte sdl_slen; // 0x7
	public byte[] sdl_data; // 0x8
}

// Namespace: System.Net.NetworkInformation
internal enum MacOsArpHardware // TypeDefIndex: 1402
{
	// Fields
	public int value__; // 0x0
	public const MacOsArpHardware ETHER = 6;
	public const MacOsArpHardware ATM = 37;
	public const MacOsArpHardware SLIP = 28;
	public const MacOsArpHardware PPP = 23;
	public const MacOsArpHardware LOOPBACK = 24;
	public const MacOsArpHardware FDDI = 15;
}

// Namespace: System.Net.NetworkInformation
public abstract class MulticastIPAddressInformation : IPAddressInformation // TypeDefIndex: 1403
{
	// Properties
	public abstract long AddressPreferredLifetime { get; }
	public abstract long AddressValidLifetime { get; }
	public abstract long DhcpLeaseLifetime { get; }
	public abstract DuplicateAddressDetectionState DuplicateAddressDetectionState { get; }
	public abstract PrefixOrigin PrefixOrigin { get; }
	public abstract SuffixOrigin SuffixOrigin { get; }

	// Methods

	// RVA: 0x1FFD5D0 Offset: 0x1FFD5D0 VA: 0x1FFD5D0
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 7
	public abstract long get_AddressPreferredLifetime();

	// RVA: -1 Offset: -1 Slot: 8
	public abstract long get_AddressValidLifetime();

	// RVA: -1 Offset: -1 Slot: 9
	public abstract long get_DhcpLeaseLifetime();

	// RVA: -1 Offset: -1 Slot: 10
	public abstract DuplicateAddressDetectionState get_DuplicateAddressDetectionState();

	// RVA: -1 Offset: -1 Slot: 11
	public abstract PrefixOrigin get_PrefixOrigin();

	// RVA: -1 Offset: -1 Slot: 12
	public abstract SuffixOrigin get_SuffixOrigin();
}

// Namespace: System.Net.NetworkInformation
internal class MulticastIPAddressInformationImpl : MulticastIPAddressInformation // TypeDefIndex: 1404
{
	// Fields
	private IPAddress address; // 0x10
	private bool is_dns_eligible; // 0x18
	private bool is_transient; // 0x19

	// Properties
	public override IPAddress Address { get; }
	public override bool IsDnsEligible { get; }
	public override bool IsTransient { get; }
	public override long AddressPreferredLifetime { get; }
	public override long AddressValidLifetime { get; }
	public override long DhcpLeaseLifetime { get; }
	public override DuplicateAddressDetectionState DuplicateAddressDetectionState { get; }
	public override PrefixOrigin PrefixOrigin { get; }
	public override SuffixOrigin SuffixOrigin { get; }

	// Methods

	// RVA: 0x1FFDBA4 Offset: 0x1FFDBA4 VA: 0x1FFDBA4
	public void .ctor(IPAddress address, bool isDnsEligible, bool isTransient) { }

	// RVA: 0x1FFDBF0 Offset: 0x1FFDBF0 VA: 0x1FFDBF0 Slot: 4
	public override IPAddress get_Address() { }

	// RVA: 0x1FFDBF8 Offset: 0x1FFDBF8 VA: 0x1FFDBF8 Slot: 5
	public override bool get_IsDnsEligible() { }

	// RVA: 0x1FFDC00 Offset: 0x1FFDC00 VA: 0x1FFDC00 Slot: 6
	public override bool get_IsTransient() { }

	// RVA: 0x1FFDC08 Offset: 0x1FFDC08 VA: 0x1FFDC08 Slot: 7
	public override long get_AddressPreferredLifetime() { }

	// RVA: 0x1FFDC10 Offset: 0x1FFDC10 VA: 0x1FFDC10 Slot: 8
	public override long get_AddressValidLifetime() { }

	// RVA: 0x1FFDC18 Offset: 0x1FFDC18 VA: 0x1FFDC18 Slot: 9
	public override long get_DhcpLeaseLifetime() { }

	// RVA: 0x1FFDC20 Offset: 0x1FFDC20 VA: 0x1FFDC20 Slot: 10
	public override DuplicateAddressDetectionState get_DuplicateAddressDetectionState() { }

	// RVA: 0x1FFDC28 Offset: 0x1FFDC28 VA: 0x1FFDC28 Slot: 11
	public override PrefixOrigin get_PrefixOrigin() { }

	// RVA: 0x1FFDC30 Offset: 0x1FFDC30 VA: 0x1FFDC30 Slot: 12
	public override SuffixOrigin get_SuffixOrigin() { }
}

// Namespace: System.Net.NetworkInformation
[DefaultMemberAttribute] // RVA: 0xBD067C Offset: 0xBD067C VA: 0xBD067C
public class MulticastIPAddressInformationCollection : IEnumerable, IEnumerable<MulticastIPAddressInformation>, ICollection<MulticastIPAddressInformation> // TypeDefIndex: 1405
{
	// Fields
	private List<MulticastIPAddressInformation> list; // 0x10

	// Properties
	public virtual int Count { get; }
	public virtual bool IsReadOnly { get; }
	public virtual MulticastIPAddressInformation Item { get; }

	// Methods

	// RVA: 0x1FFD5D8 Offset: 0x1FFD5D8 VA: 0x1FFD5D8
	protected internal void .ctor() { }

	// RVA: 0x1FFD648 Offset: 0x1FFD648 VA: 0x1FFD648 Slot: 4
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x1FFD6DC Offset: 0x1FFD6DC VA: 0x1FFD6DC Slot: 13
	public virtual void Add(MulticastIPAddressInformation address) { }

	// RVA: 0x1FFD7A8 Offset: 0x1FFD7A8 VA: 0x1FFD7A8 Slot: 14
	public virtual void Clear() { }

	// RVA: 0x1FFD864 Offset: 0x1FFD864 VA: 0x1FFD864 Slot: 15
	public virtual bool Contains(MulticastIPAddressInformation address) { }

	// RVA: 0x1FFD8D4 Offset: 0x1FFD8D4 VA: 0x1FFD8D4 Slot: 16
	public virtual void CopyTo(MulticastIPAddressInformation[] array, int offset) { }

	// RVA: 0x1FFD94C Offset: 0x1FFD94C VA: 0x1FFD94C Slot: 17
	public virtual IEnumerator<MulticastIPAddressInformation> GetEnumerator() { }
