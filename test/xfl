	public override long get_AddressMaskRepliesSent() { }

	// RVA: 0xF66020 Offset: 0xF66020 VA: 0xF66020 Slot: 6
	public override long get_AddressMaskRequestsReceived() { }

	// RVA: 0xF66070 Offset: 0xF66070 VA: 0xF66070 Slot: 7
	public override long get_AddressMaskRequestsSent() { }

	// RVA: 0xF660C0 Offset: 0xF660C0 VA: 0xF660C0 Slot: 8
	public override long get_DestinationUnreachableMessagesReceived() { }

	// RVA: 0xF66110 Offset: 0xF66110 VA: 0xF66110 Slot: 9
	public override long get_DestinationUnreachableMessagesSent() { }

	// RVA: 0xF66160 Offset: 0xF66160 VA: 0xF66160 Slot: 10
	public override long get_EchoRepliesReceived() { }

	// RVA: 0xF661B0 Offset: 0xF661B0 VA: 0xF661B0 Slot: 11
	public override long get_EchoRepliesSent() { }

	// RVA: 0xF66200 Offset: 0xF66200 VA: 0xF66200 Slot: 12
	public override long get_EchoRequestsReceived() { }

	// RVA: 0xF66250 Offset: 0xF66250 VA: 0xF66250 Slot: 13
	public override long get_EchoRequestsSent() { }

	// RVA: 0xF662A0 Offset: 0xF662A0 VA: 0xF662A0 Slot: 14
	public override long get_ErrorsReceived() { }

	// RVA: 0xF662F0 Offset: 0xF662F0 VA: 0xF662F0 Slot: 15
	public override long get_ErrorsSent() { }

	// RVA: 0xF66340 Offset: 0xF66340 VA: 0xF66340 Slot: 16
	public override long get_MessagesReceived() { }

	// RVA: 0xF66390 Offset: 0xF66390 VA: 0xF66390 Slot: 17
	public override long get_MessagesSent() { }

	// RVA: 0xF663E0 Offset: 0xF663E0 VA: 0xF663E0 Slot: 18
	public override long get_ParameterProblemsReceived() { }

	// RVA: 0xF66430 Offset: 0xF66430 VA: 0xF66430 Slot: 19
	public override long get_ParameterProblemsSent() { }

	// RVA: 0xF66480 Offset: 0xF66480 VA: 0xF66480 Slot: 20
	public override long get_RedirectsReceived() { }

	// RVA: 0xF664D0 Offset: 0xF664D0 VA: 0xF664D0 Slot: 21
	public override long get_RedirectsSent() { }

	// RVA: 0xF66520 Offset: 0xF66520 VA: 0xF66520 Slot: 22
	public override long get_SourceQuenchesReceived() { }

	// RVA: 0xF66570 Offset: 0xF66570 VA: 0xF66570 Slot: 23
	public override long get_SourceQuenchesSent() { }

	// RVA: 0xF665C0 Offset: 0xF665C0 VA: 0xF665C0 Slot: 24
	public override long get_TimeExceededMessagesReceived() { }

	// RVA: 0xF66610 Offset: 0xF66610 VA: 0xF66610 Slot: 25
	public override long get_TimeExceededMessagesSent() { }

	// RVA: 0xF66660 Offset: 0xF66660 VA: 0xF66660 Slot: 26
	public override long get_TimestampRepliesReceived() { }

	// RVA: 0xF666B0 Offset: 0xF666B0 VA: 0xF666B0 Slot: 27
	public override long get_TimestampRepliesSent() { }

	// RVA: 0xF66700 Offset: 0xF66700 VA: 0xF66700 Slot: 28
	public override long get_TimestampRequestsReceived() { }

	// RVA: 0xF66750 Offset: 0xF66750 VA: 0xF66750 Slot: 29
	public override long get_TimestampRequestsSent() { }
}

// Namespace: System.Net.NetworkInformation
internal class Win32IcmpV4Statistics : IcmpV4Statistics // TypeDefIndex: 1380
{
	// Fields
	private Win32_MIBICMPSTATS iin; // 0x10
	private Win32_MIBICMPSTATS iout; // 0x44

	// Properties
	public override long AddressMaskRepliesReceived { get; }
	public override long AddressMaskRepliesSent { get; }
	public override long AddressMaskRequestsReceived { get; }
	public override long AddressMaskRequestsSent { get; }
	public override long DestinationUnreachableMessagesReceived { get; }
	public override long DestinationUnreachableMessagesSent { get; }
	public override long EchoRepliesReceived { get; }
	public override long EchoRepliesSent { get; }
	public override long EchoRequestsReceived { get; }
	public override long EchoRequestsSent { get; }
	public override long ErrorsReceived { get; }
	public override long ErrorsSent { get; }
	public override long MessagesReceived { get; }
	public override long MessagesSent { get; }
	public override long ParameterProblemsReceived { get; }
	public override long ParameterProblemsSent { get; }
	public override long RedirectsReceived { get; }
	public override long RedirectsSent { get; }
	public override long SourceQuenchesReceived { get; }
	public override long SourceQuenchesSent { get; }
	public override long TimeExceededMessagesReceived { get; }
	public override long TimeExceededMessagesSent { get; }
	public override long TimestampRepliesReceived { get; }
	public override long TimestampRepliesSent { get; }
	public override long TimestampRequestsReceived { get; }
	public override long TimestampRequestsSent { get; }

	// Methods

	// RVA: 0xF720F4 Offset: 0xF720F4 VA: 0xF720F4
	public void .ctor(Win32_MIBICMPINFO info) { }

	// RVA: 0xF73B70 Offset: 0xF73B70 VA: 0xF73B70 Slot: 4
	public override long get_AddressMaskRepliesReceived() { }

	// RVA: 0xF73B78 Offset: 0xF73B78 VA: 0xF73B78 Slot: 5
	public override long get_AddressMaskRepliesSent() { }

	// RVA: 0xF73B80 Offset: 0xF73B80 VA: 0xF73B80 Slot: 6
	public override long get_AddressMaskRequestsReceived() { }

	// RVA: 0xF73B88 Offset: 0xF73B88 VA: 0xF73B88 Slot: 7
	public override long get_AddressMaskRequestsSent() { }

	// RVA: 0xF73B90 Offset: 0xF73B90 VA: 0xF73B90 Slot: 8
	public override long get_DestinationUnreachableMessagesReceived() { }

	// RVA: 0xF73B98 Offset: 0xF73B98 VA: 0xF73B98 Slot: 9
	public override long get_DestinationUnreachableMessagesSent() { }

	// RVA: 0xF73BA0 Offset: 0xF73BA0 VA: 0xF73BA0 Slot: 10
	public override long get_EchoRepliesReceived() { }

	// RVA: 0xF73BA8 Offset: 0xF73BA8 VA: 0xF73BA8 Slot: 11
	public override long get_EchoRepliesSent() { }

	// RVA: 0xF73BB0 Offset: 0xF73BB0 VA: 0xF73BB0 Slot: 12
	public override long get_EchoRequestsReceived() { }

	// RVA: 0xF73BB8 Offset: 0xF73BB8 VA: 0xF73BB8 Slot: 13
	public override long get_EchoRequestsSent() { }

	// RVA: 0xF73BC0 Offset: 0xF73BC0 VA: 0xF73BC0 Slot: 14
	public override long get_ErrorsReceived() { }

	// RVA: 0xF73BC8 Offset: 0xF73BC8 VA: 0xF73BC8 Slot: 15
	public override long get_ErrorsSent() { }

	// RVA: 0xF73BD0 Offset: 0xF73BD0 VA: 0xF73BD0 Slot: 16
	public override long get_MessagesReceived() { }

	// RVA: 0xF73BD8 Offset: 0xF73BD8 VA: 0xF73BD8 Slot: 17
	public override long get_MessagesSent() { }

	// RVA: 0xF73BE0 Offset: 0xF73BE0 VA: 0xF73BE0 Slot: 18
	public override long get_ParameterProblemsReceived() { }

	// RVA: 0xF73BE8 Offset: 0xF73BE8 VA: 0xF73BE8 Slot: 19
	public override long get_ParameterProblemsSent() { }

	// RVA: 0xF73BF0 Offset: 0xF73BF0 VA: 0xF73BF0 Slot: 20
	public override long get_RedirectsReceived() { }

	// RVA: 0xF73BF8 Offset: 0xF73BF8 VA: 0xF73BF8 Slot: 21
	public override long get_RedirectsSent() { }

	// RVA: 0xF73C00 Offset: 0xF73C00 VA: 0xF73C00 Slot: 22
	public override long get_SourceQuenchesReceived() { }

	// RVA: 0xF73C08 Offset: 0xF73C08 VA: 0xF73C08 Slot: 23
	public override long get_SourceQuenchesSent() { }

	// RVA: 0xF73C10 Offset: 0xF73C10 VA: 0xF73C10 Slot: 24
	public override long get_TimeExceededMessagesReceived() { }

	// RVA: 0xF73C18 Offset: 0xF73C18 VA: 0xF73C18 Slot: 25
	public override long get_TimeExceededMessagesSent() { }

	// RVA: 0xF73C20 Offset: 0xF73C20 VA: 0xF73C20 Slot: 26
	public override long get_TimestampRepliesReceived() { }

	// RVA: 0xF73C28 Offset: 0xF73C28 VA: 0xF73C28 Slot: 27
	public override long get_TimestampRepliesSent() { }

	// RVA: 0xF73C30 Offset: 0xF73C30 VA: 0xF73C30 Slot: 28
	public override long get_TimestampRequestsReceived() { }

	// RVA: 0xF73C38 Offset: 0xF73C38 VA: 0xF73C38 Slot: 29
	public override long get_TimestampRequestsSent() { }
}

// Namespace: System.Net.NetworkInformation
internal struct Win32_MIBICMPINFO // TypeDefIndex: 1381
{
	// Fields
	public Win32_MIBICMPSTATS InStats; // 0x0
	public Win32_MIBICMPSTATS OutStats; // 0x34
}

// Namespace: System.Net.NetworkInformation
internal struct Win32_MIBICMPSTATS // TypeDefIndex: 1382
{
	// Fields
	public uint Msgs; // 0x0
	public uint Errors; // 0x4
	public uint DestUnreachs; // 0x8
	public uint TimeExcds; // 0xC
	public uint ParmProbs; // 0x10
	public uint SrcQuenchs; // 0x14
	public uint Redirects; // 0x18
	public uint Echos; // 0x1C
	public uint EchoReps; // 0x20
	public uint Timestamps; // 0x24
	public uint TimestampReps; // 0x28
	public uint AddrMasks; // 0x2C
	public uint AddrMaskReps; // 0x30
}

// Namespace: System.Net.NetworkInformation
public abstract class IcmpV6Statistics // TypeDefIndex: 1383
{
	// Properties
	public abstract long DestinationUnreachableMessagesReceived { get; }
	public abstract long DestinationUnreachableMessagesSent { get; }
	public abstract long EchoRepliesReceived { get; }
	public abstract long EchoRepliesSent { get; }
	public abstract long EchoRequestsReceived { get; }
	public abstract long EchoRequestsSent { get; }
	public abstract long ErrorsReceived { get; }
	public abstract long ErrorsSent { get; }
	public abstract long MembershipQueriesReceived { get; }
	public abstract long MembershipQueriesSent { get; }
	public abstract long MembershipReductionsReceived { get; }
	public abstract long MembershipReductionsSent { get; }
	public abstract long MembershipReportsReceived { get; }
	public abstract long MembershipReportsSent { get; }
	public abstract long MessagesReceived { get; }
	public abstract long MessagesSent { get; }
	public abstract long NeighborAdvertisementsReceived { get; }
	public abstract long NeighborAdvertisementsSent { get; }
	public abstract long NeighborSolicitsReceived { get; }
	public abstract long NeighborSolicitsSent { get; }
	public abstract long PacketTooBigMessagesReceived { get; }
	public abstract long PacketTooBigMessagesSent { get; }
	public abstract long ParameterProblemsReceived { get; }
	public abstract long ParameterProblemsSent { get; }
	public abstract long RedirectsReceived { get; }
	public abstract long RedirectsSent { get; }
	public abstract long RouterAdvertisementsReceived { get; }
	public abstract long RouterAdvertisementsSent { get; }
	public abstract long RouterSolicitsReceived { get; }
	public abstract long RouterSolicitsSent { get; }
	public abstract long TimeExceededMessagesReceived { get; }
	public abstract long TimeExceededMessagesSent { get; }

	// Methods

	// RVA: 0xF5F4F0 Offset: 0xF5F4F0 VA: 0xF5F4F0
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract long get_DestinationUnreachableMessagesReceived();

	// RVA: -1 Offset: -1 Slot: 5
	public abstract long get_DestinationUnreachableMessagesSent();

	// RVA: -1 Offset: -1 Slot: 6
	public abstract long get_EchoRepliesReceived();

	// RVA: -1 Offset: -1 Slot: 7
	public abstract long get_EchoRepliesSent();

	// RVA: -1 Offset: -1 Slot: 8
	public abstract long get_EchoRequestsReceived();

	// RVA: -1 Offset: -1 Slot: 9
	public abstract long get_EchoRequestsSent();

	// RVA: -1 Offset: -1 Slot: 10
	public abstract long get_ErrorsReceived();

	// RVA: -1 Offset: -1 Slot: 11
	public abstract long get_ErrorsSent();

	// RVA: -1 Offset: -1 Slot: 12
	public abstract long get_MembershipQueriesReceived();

	// RVA: -1 Offset: -1 Slot: 13
	public abstract long get_MembershipQueriesSent();

	// RVA: -1 Offset: -1 Slot: 14
	public abstract long get_MembershipReductionsReceived();

	// RVA: -1 Offset: -1 Slot: 15
	public abstract long get_MembershipReductionsSent();

	// RVA: -1 Offset: -1 Slot: 16
	public abstract long get_MembershipReportsReceived();

	// RVA: -1 Offset: -1 Slot: 17
	public abstract long get_MembershipReportsSent();

	// RVA: -1 Offset: -1 Slot: 18
	public abstract long get_MessagesReceived();

	// RVA: -1 Offset: -1 Slot: 19
	public abstract long get_MessagesSent();

	// RVA: -1 Offset: -1 Slot: 20
	public abstract long get_NeighborAdvertisementsReceived();

	// RVA: -1 Offset: -1 Slot: 21
	public abstract long get_NeighborAdvertisementsSent();

	// RVA: -1 Offset: -1 Slot: 22
	public abstract long get_NeighborSolicitsReceived();

	// RVA: -1 Offset: -1 Slot: 23
	public abstract long get_NeighborSolicitsSent();

	// RVA: -1 Offset: -1 Slot: 24
	public abstract long get_PacketTooBigMessagesReceived();

	// RVA: -1 Offset: -1 Slot: 25
	public abstract long get_PacketTooBigMessagesSent();

	// RVA: -1 Offset: -1 Slot: 26
	public abstract long get_ParameterProblemsReceived();

	// RVA: -1 Offset: -1 Slot: 27
	public abstract long get_ParameterProblemsSent();

	// RVA: -1 Offset: -1 Slot: 28
	public abstract long get_RedirectsReceived();

	// RVA: -1 Offset: -1 Slot: 29
	public abstract long get_RedirectsSent();

	// RVA: -1 Offset: -1 Slot: 30
	public abstract long get_RouterAdvertisementsReceived();

	// RVA: -1 Offset: -1 Slot: 31
	public abstract long get_RouterAdvertisementsSent();

	// RVA: -1 Offset: -1 Slot: 32
	public abstract long get_RouterSolicitsReceived();

	// RVA: -1 Offset: -1 Slot: 33
	public abstract long get_RouterSolicitsSent();

	// RVA: -1 Offset: -1 Slot: 34
	public abstract long get_TimeExceededMessagesReceived();

	// RVA: -1 Offset: -1 Slot: 35
	public abstract long get_TimeExceededMessagesSent();
}

// Namespace: System.Net.NetworkInformation
internal class MibIcmpV6Statistics : IcmpV6Statistics // TypeDefIndex: 1384
{
	// Fields
	private StringDictionary dic; // 0x10

	// Properties
	public override long DestinationUnreachableMessagesReceived { get; }
	public override long DestinationUnreachableMessagesSent { get; }
	public override long EchoRepliesReceived { get; }
	public override long EchoRepliesSent { get; }
	public override long EchoRequestsReceived { get; }
	public override long EchoRequestsSent { get; }
	public override long ErrorsReceived { get; }
	public override long ErrorsSent { get; }
	public override long MembershipQueriesReceived { get; }
	public override long MembershipQueriesSent { get; }
	public override long MembershipReductionsReceived { get; }
	public override long MembershipReductionsSent { get; }
	public override long MembershipReportsReceived { get; }
	public override long MembershipReportsSent { get; }
	public override long MessagesReceived { get; }
	public override long MessagesSent { get; }
	public override long NeighborAdvertisementsReceived { get; }
	public override long NeighborAdvertisementsSent { get; }
	public override long NeighborSolicitsReceived { get; }
	public override long NeighborSolicitsSent { get; }
	public override long PacketTooBigMessagesReceived { get; }
	public override long PacketTooBigMessagesSent { get; }
	public override long ParameterProblemsReceived { get; }
	public override long ParameterProblemsSent { get; }
	public override long RedirectsReceived { get; }
	public override long RedirectsSent { get; }
	public override long RouterAdvertisementsReceived { get; }
	public override long RouterAdvertisementsSent { get; }
	public override long RouterSolicitsReceived { get; }
	public override long RouterSolicitsSent { get; }
	public override long TimeExceededMessagesReceived { get; }
	public override long TimeExceededMessagesSent { get; }

	// Methods

	// RVA: 0xF6500C Offset: 0xF6500C VA: 0xF6500C
	public void .ctor(StringDictionary dic) { }

	// RVA: 0xF667A0 Offset: 0xF667A0 VA: 0xF667A0
	private long Get(string name) { }

	// RVA: 0xF66884 Offset: 0xF66884 VA: 0xF66884 Slot: 4
	public override long get_DestinationUnreachableMessagesReceived() { }

	// RVA: 0xF668D4 Offset: 0xF668D4 VA: 0xF668D4 Slot: 5
	public override long get_DestinationUnreachableMessagesSent() { }

	// RVA: 0xF66924 Offset: 0xF66924 VA: 0xF66924 Slot: 6
	public override long get_EchoRepliesReceived() { }

	// RVA: 0xF66974 Offset: 0xF66974 VA: 0xF66974 Slot: 7
	public override long get_EchoRepliesSent() { }

	// RVA: 0xF669C4 Offset: 0xF669C4 VA: 0xF669C4 Slot: 8
	public override long get_EchoRequestsReceived() { }

	// RVA: 0xF66A14 Offset: 0xF66A14 VA: 0xF66A14 Slot: 9
	public override long get_EchoRequestsSent() { }

	// RVA: 0xF66A64 Offset: 0xF66A64 VA: 0xF66A64 Slot: 10
	public override long get_ErrorsReceived() { }

	// RVA: 0xF66AB4 Offset: 0xF66AB4 VA: 0xF66AB4 Slot: 11
	public override long get_ErrorsSent() { }

	// RVA: 0xF66B04 Offset: 0xF66B04 VA: 0xF66B04 Slot: 12
	public override long get_MembershipQueriesReceived() { }

	// RVA: 0xF66B54 Offset: 0xF66B54 VA: 0xF66B54 Slot: 13
	public override long get_MembershipQueriesSent() { }

	// RVA: 0xF66BA4 Offset: 0xF66BA4 VA: 0xF66BA4 Slot: 14
	public override long get_MembershipReductionsReceived() { }

	// RVA: 0xF66BF4 Offset: 0xF66BF4 VA: 0xF66BF4 Slot: 15
	public override long get_MembershipReductionsSent() { }

	// RVA: 0xF66C44 Offset: 0xF66C44 VA: 0xF66C44 Slot: 16
	public override long get_MembershipReportsReceived() { }

	// RVA: 0xF66C94 Offset: 0xF66C94 VA: 0xF66C94 Slot: 17
	public override long get_MembershipReportsSent() { }

	// RVA: 0xF66CE4 Offset: 0xF66CE4 VA: 0xF66CE4 Slot: 18
	public override long get_MessagesReceived() { }

	// RVA: 0xF66D34 Offset: 0xF66D34 VA: 0xF66D34 Slot: 19
	public override long get_MessagesSent() { }

	// RVA: 0xF66D84 Offset: 0xF66D84 VA: 0xF66D84 Slot: 20
	public override long get_NeighborAdvertisementsReceived() { }

	// RVA: 0xF66DD4 Offset: 0xF66DD4 VA: 0xF66DD4 Slot: 21
	public override long get_NeighborAdvertisementsSent() { }

	// RVA: 0xF66E24 Offset: 0xF66E24 VA: 0xF66E24 Slot: 22
	public override long get_NeighborSolicitsReceived() { }

	// RVA: 0xF66E74 Offset: 0xF66E74 VA: 0xF66E74 Slot: 23
	public override long get_NeighborSolicitsSent() { }

	// RVA: 0xF66EC4 Offset: 0xF66EC4 VA: 0xF66EC4 Slot: 24
	public override long get_PacketTooBigMessagesReceived() { }

	// RVA: 0xF66F14 Offset: 0xF66F14 VA: 0xF66F14 Slot: 25
	public override long get_PacketTooBigMessagesSent() { }

	// RVA: 0xF66F64 Offset: 0xF66F64 VA: 0xF66F64 Slot: 26
	public override long get_ParameterProblemsReceived() { }

	// RVA: 0xF66FB4 Offset: 0xF66FB4 VA: 0xF66FB4 Slot: 27
	public override long get_ParameterProblemsSent() { }

	// RVA: 0xF67004 Offset: 0xF67004 VA: 0xF67004 Slot: 28
	public override long get_RedirectsReceived() { }

	// RVA: 0xF67054 Offset: 0xF67054 VA: 0xF67054 Slot: 29
	public override long get_RedirectsSent() { }

	// RVA: 0xF670A4 Offset: 0xF670A4 VA: 0xF670A4 Slot: 30
	public override long get_RouterAdvertisementsReceived() { }

	// RVA: 0xF670F4 Offset: 0xF670F4 VA: 0xF670F4 Slot: 31
	public override long get_RouterAdvertisementsSent() { }

	// RVA: 0xF67144 Offset: 0xF67144 VA: 0xF67144 Slot: 32
	public override long get_RouterSolicitsReceived() { }

	// RVA: 0xF67194 Offset: 0xF67194 VA: 0xF67194 Slot: 33
	public override long get_RouterSolicitsSent() { }

	// RVA: 0xF671E4 Offset: 0xF671E4 VA: 0xF671E4 Slot: 34
	public override long get_TimeExceededMessagesReceived() { }

	// RVA: 0xF67234 Offset: 0xF67234 VA: 0xF67234 Slot: 35
	public override long get_TimeExceededMessagesSent() { }
}

// Namespace: System.Net.NetworkInformation
internal class IcmpV6MessageTypes // TypeDefIndex: 1385
{
	// Fields
	public const int DestinationUnreachable = 1;
	public const int PacketTooBig = 2;
	public const int TimeExceeded = 3;
	public const int ParameterProblem = 4;
	public const int EchoRequest = 128;
	public const int EchoReply = 129;
	public const int GroupMembershipQuery = 130;
	public const int GroupMembershipReport = 131;
	public const int GroupMembershipReduction = 132;
	public const int RouterSolicitation = 133;
	public const int RouterAdvertisement = 134;
	public const int NeighborSolicitation = 135;
	public const int NeighborAdvertisement = 136;
	public const int Redirect = 137;
	public const int RouterRenumbering = 138;

	// Methods

	// RVA: 0xF5F4E8 Offset: 0xF5F4E8 VA: 0xF5F4E8
	public void .ctor() { }
}

// Namespace: System.Net.NetworkInformation
internal class Win32IcmpV6Statistics : IcmpV6Statistics // TypeDefIndex: 1386
{
	// Fields
	private Win32_MIBICMPSTATS_EX iin; // 0x10
	private Win32_MIBICMPSTATS_EX iout; // 0x20

	// Properties
	public override long DestinationUnreachableMessagesReceived { get; }
	public override long DestinationUnreachableMessagesSent { get; }
	public override long EchoRepliesReceived { get; }
	public override long EchoRepliesSent { get; }
	public override long EchoRequestsReceived { get; }
	public override long EchoRequestsSent { get; }
	public override long ErrorsReceived { get; }
	public override long ErrorsSent { get; }
	public override long MembershipQueriesReceived { get; }
	public override long MembershipQueriesSent { get; }
	public override long MembershipReductionsReceived { get; }
	public override long MembershipReductionsSent { get; }
	public override long MembershipReportsReceived { get; }
	public override long MembershipReportsSent { get; }
	public override long MessagesReceived { get; }
	public override long MessagesSent { get; }
	public override long NeighborAdvertisementsReceived { get; }
	public override long NeighborAdvertisementsSent { get; }
	public override long NeighborSolicitsReceived { get; }
	public override long NeighborSolicitsSent { get; }
	public override long PacketTooBigMessagesReceived { get; }
	public override long PacketTooBigMessagesSent { get; }
	public override long ParameterProblemsReceived { get; }
	public override long ParameterProblemsSent { get; }
	public override long RedirectsReceived { get; }
	public override long RedirectsSent { get; }
	public override long RouterAdvertisementsReceived { get; }
	public override long RouterAdvertisementsSent { get; }
	public override long RouterSolicitsReceived { get; }
	public override long RouterSolicitsSent { get; }
	public override long TimeExceededMessagesReceived { get; }
	public override long TimeExceededMessagesSent { get; }

	// Methods

	// RVA: 0xF7233C Offset: 0xF7233C VA: 0xF7233C
	public void .ctor(Win32_MIB_ICMP_EX info) { }

	// RVA: 0xF73C40 Offset: 0xF73C40 VA: 0xF73C40 Slot: 4
	public override long get_DestinationUnreachableMessagesReceived() { }

	// RVA: 0xF73C88 Offset: 0xF73C88 VA: 0xF73C88 Slot: 5
	public override long get_DestinationUnreachableMessagesSent() { }

	// RVA: 0xF73CD0 Offset: 0xF73CD0 VA: 0xF73CD0 Slot: 6
	public override long get_EchoRepliesReceived() { }

	// RVA: 0xF73D18 Offset: 0xF73D18 VA: 0xF73D18 Slot: 7
	public override long get_EchoRepliesSent() { }

	// RVA: 0xF73D60 Offset: 0xF73D60 VA: 0xF73D60 Slot: 8
	public override long get_EchoRequestsReceived() { }

	// RVA: 0xF73DA8 Offset: 0xF73DA8 VA: 0xF73DA8 Slot: 9
	public override long get_EchoRequestsSent() { }

	// RVA: 0xF73DF0 Offset: 0xF73DF0 VA: 0xF73DF0 Slot: 10
	public override long get_ErrorsReceived() { }

	// RVA: 0xF73DF8 Offset: 0xF73DF8 VA: 0xF73DF8 Slot: 11
	public override long get_ErrorsSent() { }

	// RVA: 0xF73E00 Offset: 0xF73E00 VA: 0xF73E00 Slot: 12
	public override long get_MembershipQueriesReceived() { }

	// RVA: 0xF73E48 Offset: 0xF73E48 VA: 0xF73E48 Slot: 13
	public override long get_MembershipQueriesSent() { }

	// RVA: 0xF73E90 Offset: 0xF73E90 VA: 0xF73E90 Slot: 14
	public override long get_MembershipReductionsReceived() { }

	// RVA: 0xF73ED8 Offset: 0xF73ED8 VA: 0xF73ED8 Slot: 15
	public override long get_MembershipReductionsSent() { }

	// RVA: 0xF73F20 Offset: 0xF73F20 VA: 0xF73F20 Slot: 16
	public override long get_MembershipReportsReceived() { }

	// RVA: 0xF73F68 Offset: 0xF73F68 VA: 0xF73F68 Slot: 17
	public override long get_MembershipReportsSent() { }

	// RVA: 0xF73FB0 Offset: 0xF73FB0 VA: 0xF73FB0 Slot: 18
	public override long get_MessagesReceived() { }

	// RVA: 0xF73FB8 Offset: 0xF73FB8 VA: 0xF73FB8 Slot: 19
	public override long get_MessagesSent() { }

	// RVA: 0xF73FC0 Offset: 0xF73FC0 VA: 0xF73FC0 Slot: 20
	public override long get_NeighborAdvertisementsReceived() { }

	// RVA: 0xF74008 Offset: 0xF74008 VA: 0xF74008 Slot: 21
	public override long get_NeighborAdvertisementsSent() { }

	// RVA: 0xF74050 Offset: 0xF74050 VA: 0xF74050 Slot: 22
	public override long get_NeighborSolicitsReceived() { }

	// RVA: 0xF74098 Offset: 0xF74098 VA: 0xF74098 Slot: 23
	public override long get_NeighborSolicitsSent() { }

	// RVA: 0xF740E0 Offset: 0xF740E0 VA: 0xF740E0 Slot: 24
	public override long get_PacketTooBigMessagesReceived() { }

	// RVA: 0xF74128 Offset: 0xF74128 VA: 0xF74128 Slot: 25
	public override long get_PacketTooBigMessagesSent() { }

	// RVA: 0xF74170 Offset: 0xF74170 VA: 0xF74170 Slot: 26
	public override long get_ParameterProblemsReceived() { }

	// RVA: 0xF741B8 Offset: 0xF741B8 VA: 0xF741B8 Slot: 27
	public override long get_ParameterProblemsSent() { }

	// RVA: 0xF74200 Offset: 0xF74200 VA: 0xF74200 Slot: 28
	public override long get_RedirectsReceived() { }

	// RVA: 0xF74248 Offset: 0xF74248 VA: 0xF74248 Slot: 29
	public override long get_RedirectsSent() { }

	// RVA: 0xF74290 Offset: 0xF74290 VA: 0xF74290 Slot: 30
	public override long get_RouterAdvertisementsReceived() { }

	// RVA: 0xF742D8 Offset: 0xF742D8 VA: 0xF742D8 Slot: 31
	public override long get_RouterAdvertisementsSent() { }

	// RVA: 0xF74320 Offset: 0xF74320 VA: 0xF74320 Slot: 32
	public override long get_RouterSolicitsReceived() { }

	// RVA: 0xF74368 Offset: 0xF74368 VA: 0xF74368 Slot: 33
	public override long get_RouterSolicitsSent() { }

	// RVA: 0xF743B0 Offset: 0xF743B0 VA: 0xF743B0 Slot: 34
	public override long get_TimeExceededMessagesReceived() { }

	// RVA: 0xF743F8 Offset: 0xF743F8 VA: 0xF743F8 Slot: 35
	public override long get_TimeExceededMessagesSent() { }
}

// Namespace: System.Net.NetworkInformation
internal struct Win32_MIB_ICMP_EX // TypeDefIndex: 1387
{
	// Fields
	public Win32_MIBICMPSTATS_EX InStats; // 0x0
	public Win32_MIBICMPSTATS_EX OutStats; // 0x10
}

// Namespace: System.Net.NetworkInformation
internal struct Win32_MIBICMPSTATS_EX // TypeDefIndex: 1388
{
	// Fields
	public uint Msgs; // 0x0
	public uint Errors; // 0x4
	public uint[] Counts; // 0x8
}

// Namespace: System.Net.NetworkInformation
internal struct ifa_ifu // TypeDefIndex: 1389
{
	// Fields
	public IntPtr ifu_broadaddr; // 0x0
	public IntPtr ifu_dstaddr; // 0x0
}

// Namespace: System.Net.NetworkInformation
internal struct ifaddrs // TypeDefIndex: 1390
{
	// Fields
	public IntPtr ifa_next; // 0x0
	public string ifa_name; // 0x8
	public uint ifa_flags; // 0x10
	public IntPtr ifa_addr; // 0x18
	public IntPtr ifa_netmask; // 0x20
	public ifa_ifu ifa_ifu; // 0x28
	public IntPtr ifa_data; // 0x30
}

// Namespace: System.Net.NetworkInformation
internal struct sockaddr_in // TypeDefIndex: 1391
{
	// Fields
	public ushort sin_family; // 0x0
	public ushort sin_port; // 0x2
	public uint sin_addr; // 0x4
}

// Namespace: System.Net.NetworkInformation
internal struct sockaddr_in6 // TypeDefIndex: 1392
{
	// Fields
	public ushort sin6_family; // 0x0
	public ushort sin6_port; // 0x2
	public uint sin6_flowinfo; // 0x4
	public in6_addr sin6_addr; // 0x8
	public uint sin6_scope_id; // 0x10
}

// Namespace: System.Net.NetworkInformation
internal struct in6_addr // TypeDefIndex: 1393
{
	// Fields
	public byte[] u6_addr8; // 0x0
}

// Namespace: System.Net.NetworkInformation
internal struct sockaddr_ll // TypeDefIndex: 1394
{
	// Fields
	public ushort sll_family; // 0x0
	public ushort sll_protocol; // 0x2
	public int sll_ifindex; // 0x4
	public ushort sll_hatype; // 0x8
	public byte sll_pkttype; // 0xA
	public byte sll_halen; // 0xB
	public byte[] sll_addr; // 0x10
}

// Namespace: System.Net.NetworkInformation
internal enum LinuxArpHardware // TypeDefIndex: 1395
{
	// Fields
	public int value__; // 0x0
	public const LinuxArpHardware ETHER = 1;
	public const LinuxArpHardware EETHER = 2;
	public const LinuxArpHardware PRONET = 4;
	public const LinuxArpHardware ATM = 19;
	public const LinuxArpHardware SLIP = 256;
	public const LinuxArpHardware PPP = 512;
	public const LinuxArpHardware LOOPBACK = 772;
	public const LinuxArpHardware FDDI = 774;
	public const LinuxArpHardware TUNNEL = 768;
	public const LinuxArpHardware TUNNEL6 = 769;
}

// Namespace: System.Net.NetworkInformation.MacOsStructs
internal struct ifaddrs // TypeDefIndex: 1396
{
	// Fields
	public IntPtr ifa_next; // 0x0
	public string ifa_name; // 0x8
	public uint ifa_flags; // 0x10
	public IntPtr ifa_addr; // 0x18
	public IntPtr ifa_netmask; // 0x20
	public IntPtr ifa_dstaddr; // 0x28
	public IntPtr ifa_data; // 0x30
}

// Namespace: System.Net.NetworkInformation.MacOsStructs
internal struct sockaddr // TypeDefIndex: 1397
{
	// Fields
	public byte sa_len; // 0x0
	public byte sa_family; // 0x1
}

// Namespace: System.Net.NetworkInformation.MacOsStructs
internal struct sockaddr_in // TypeDefIndex: 1398
{
	// Fields
	public byte sin_len; // 0x0
	public byte sin_family; // 0x1
	public ushort sin_port; // 0x2
	public uint sin_addr; // 0x4
}

// Namespace: System.Net.NetworkInformation.MacOsStructs
internal struct in6_addr // TypeDefIndex: 1399
{
	// Fields
	public byte[] u6_addr8; // 0x0
}

// Namespace: System.Net.NetworkInformation.MacOsStructs
internal struct sockaddr_in6 // TypeDefIndex: 1400
{
	// Fields
	public byte sin6_len; // 0x0
	public byte sin6_family; // 0x1
	public ushort sin6_port; // 0x2
	public uint sin6_flowinfo; // 0x4
	public in6_addr sin6_addr; // 0x8
	public uint sin6_scope_id; // 0x10
}

// Namespace: System.Net.NetworkInformation.MacOsStructs
internal struct sockaddr_dl // TypeDefIndex: 1401
{
	// Fields
	public byte sdl_len; // 0x0
	public byte sdl_family; // 0x1
	public ushort sdl_index; // 0x2
	public byte sdl_type; // 0x4
	public byte sdl_nlen; // 0x5
	public byte sdl_alen; // 0x6
	public byte sdl_slen; // 0x7
	public byte[] sdl_data; // 0x8
}

// Namespace: System.Net.NetworkInformation
internal enum MacOsArpHardware // TypeDefIndex: 1402
{
	// Fields
	public int value__; // 0x0
	public const MacOsArpHardware ETHER = 6;
	public const MacOsArpHardware ATM = 37;
	public const MacOsArpHardware SLIP = 28;
	public const MacOsArpHardware PPP = 23;
	public const MacOsArpHardware LOOPBACK = 24;
	public const MacOsArpHardware FDDI = 15;
}

// Namespace: System.Net.NetworkInformation
public abstract class MulticastIPAddressInformation : IPAddressInformation // TypeDefIndex: 1403
{
	// Properties
	public abstract long AddressPreferredLifetime { get; }
	public abstract long AddressValidLifetime { get; }
	public abstract long DhcpLeaseLifetime { get; }
	public abstract DuplicateAddressDetectionState DuplicateAddressDetectionState { get; }
	public abstract PrefixOrigin PrefixOrigin { get; }
	public abstract SuffixOrigin SuffixOrigin { get; }

	// Methods

	// RVA: 0xF67A50 Offset: 0xF67A50 VA: 0xF67A50
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 7
	public abstract long get_AddressPreferredLifetime();

	// RVA: -1 Offset: -1 Slot: 8
	public abstract long get_AddressValidLifetime();

	// RVA: -1 Offset: -1 Slot: 9
	public abstract long get_DhcpLeaseLifetime();

	// RVA: -1 Offset: -1 Slot: 10
	public abstract DuplicateAddressDetectionState get_DuplicateAddressDetectionState();

	// RVA: -1 Offset: -1 Slot: 11
	public abstract PrefixOrigin get_PrefixOrigin();

	// RVA: -1 Offset: -1 Slot: 12
	public abstract SuffixOrigin get_SuffixOrigin();
}

// Namespace: System.Net.NetworkInformation
internal class MulticastIPAddressInformationImpl : MulticastIPAddressInformation // TypeDefIndex: 1404
{
	// Fields
	private IPAddress address; // 0x10
	private bool is_dns_eligible; // 0x18
	private bool is_transient; // 0x19

	// Properties
	public override IPAddress Address { get; }
	public override bool IsDnsEligible { get; }
	public override bool IsTransient { get; }
	public override long AddressPreferredLifetime { get; }
	public override long AddressValidLifetime { get; }
	public override long DhcpLeaseLifetime { get; }
	public override DuplicateAddressDetectionState DuplicateAddressDetectionState { get; }
	public override PrefixOrigin PrefixOrigin { get; }
	public override SuffixOrigin SuffixOrigin { get; }

	// Methods

	// RVA: 0xF68024 Offset: 0xF68024 VA: 0xF68024
	public void .ctor(IPAddress address, bool isDnsEligible, bool isTransient) { }

	// RVA: 0xF68070 Offset: 0xF68070 VA: 0xF68070 Slot: 4
	public override IPAddress get_Address() { }

	// RVA: 0xF68078 Offset: 0xF68078 VA: 0xF68078 Slot: 5
	public override bool get_IsDnsEligible() { }

	// RVA: 0xF68080 Offset: 0xF68080 VA: 0xF68080 Slot: 6
	public override bool get_IsTransient() { }

	// RVA: 0xF68088 Offset: 0xF68088 VA: 0xF68088 Slot: 7
	public override long get_AddressPreferredLifetime() { }

	// RVA: 0xF68090 Offset: 0xF68090 VA: 0xF68090 Slot: 8
	public override long get_AddressValidLifetime() { }

	// RVA: 0xF68098 Offset: 0xF68098 VA: 0xF68098 Slot: 9
	public override long get_DhcpLeaseLifetime() { }

	// RVA: 0xF680A0 Offset: 0xF680A0 VA: 0xF680A0 Slot: 10
	public override DuplicateAddressDetectionState get_DuplicateAddressDetectionState() { }

	// RVA: 0xF680A8 Offset: 0xF680A8 VA: 0xF680A8 Slot: 11
	public override PrefixOrigin get_PrefixOrigin() { }

	// RVA: 0xF680B0 Offset: 0xF680B0 VA: 0xF680B0 Slot: 12
	public override SuffixOrigin get_SuffixOrigin() { }
}

// Namespace: System.Net.NetworkInformation
[DefaultMemberAttribute] // RVA: 0xC3C7A4 Offset: 0xC3C7A4 VA: 0xC3C7A4
public class MulticastIPAddressInformationCollection : IEnumerable, IEnumerable<MulticastIPAddressInformation>, ICollection<MulticastIPAddressInformation> // TypeDefIndex: 1405
{
	// Fields
	private List<MulticastIPAddressInformation> list; // 0x10

	// Properties
	public virtual int Count { get; }
	public virtual bool IsReadOnly { get; }
	public virtual MulticastIPAddressInformation Item { get; }

	// Methods

	// RVA: 0xF67A58 Offset: 0xF67A58 VA: 0xF67A58
	protected internal void .ctor() { }

	// RVA: 0xF67AC8 Offset: 0xF67AC8 VA: 0xF67AC8 Slot: 4
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0xF67B5C Offset: 0xF67B5C VA: 0xF67B5C Slot: 13
	public virtual void Add(MulticastIPAddressInformation address) { }

	// RVA: 0xF67C28 Offset: 0xF67C28 VA: 0xF67C28 Slot: 14
	public virtual void Clear() { }

	// RVA: 0xF67CE4 Offset: 0xF67CE4 VA: 0xF67CE4 Slot: 15
	public virtual bool Contains(MulticastIPAddressInformation address) { }

	// RVA: 0xF67D54 Offset: 0xF67D54 VA: 0xF67D54 Slot: 16
	public virtual void CopyTo(MulticastIPAddressInformation[] array, int offset) { }

	// RVA: 0xF67DCC Offset: 0xF67DCC VA: 0xF67DCC Slot: 17
	public virtual IEnumerator<MulticastIPAddressInformation> GetEnumerator() { }

	// RVA: 0xF67E80 Offset: 0xF67E80 VA: 0xF67E80 Slot: 18
	public virtual bool Remove(MulticastIPAddressInformation address) { }

	// RVA: 0xF67F4C Offset: 0xF67F4C VA: 0xF67F4C Slot: 19
	public virtual int get_Count() { }

	// RVA: 0xF67FAC Offset: 0xF67FAC VA: 0xF67FAC Slot: 20
	public virtual bool get_IsReadOnly() { }

	// RVA: 0xF67FB4 Offset: 0xF67FB4 VA: 0xF67FB4 Slot: 21
	public virtual MulticastIPAddressInformation get_Item(int index) { }
}

// Namespace: System.Net.NetworkInformation
internal class MulticastIPAddressInformationImplCollection : MulticastIPAddressInformationCollection // TypeDefIndex: 1406
{
	// Fields
	public static readonly MulticastIPAddressInformationImplCollection Empty; // 0x0
	private bool is_readonly; // 0x18

	// Properties
	public override bool IsReadOnly { get; }

	// Methods

	// RVA: 0xF680B8 Offset: 0xF680B8 VA: 0xF680B8
	private void .ctor(bool isReadOnly) { }

	// RVA: 0xF680E4 Offset: 0xF680E4 VA: 0xF680E4
	private static void .cctor() { }

	// RVA: 0xF6814C Offset: 0xF6814C VA: 0xF6814C Slot: 20
