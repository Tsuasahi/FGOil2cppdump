	public const DebugDrawShape.ShapeType WireSphere = 2;
	public const DebugDrawShape.ShapeType WireCube = 3;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30C84 Offset: 0xC30C84 VA: 0xC30C84
[TooltipAttribute] // RVA: 0xC30C84 Offset: 0xC30C84 VA: 0xC30C84
public class DebugFloat : BaseLogAction // TypeDefIndex: 12425
{
	// Fields
	[TooltipAttribute] // RVA: 0xC940B8 Offset: 0xC940B8 VA: 0xC940B8
	public LogLevel logLevel; // 0x4C
	[UIHintAttribute] // RVA: 0xC940F0 Offset: 0xC940F0 VA: 0xC940F0
	[TooltipAttribute] // RVA: 0xC940F0 Offset: 0xC940F0 VA: 0xC940F0
	public FsmFloat floatVariable; // 0x50

	// Methods

	// RVA: 0x12EAA54 Offset: 0x12EAA54 VA: 0x12EAA54
	public void .ctor() { }

	// RVA: 0x12EAA5C Offset: 0x12EAA5C VA: 0x12EAA5C Slot: 28
	public override void Reset() { }

	// RVA: 0x12EAA6C Offset: 0x12EAA6C VA: 0x12EAA6C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30CD4 Offset: 0xC30CD4 VA: 0xC30CD4
[TooltipAttribute] // RVA: 0xC30CD4 Offset: 0xC30CD4 VA: 0xC30CD4
public class DebugFsmVariable : BaseLogAction // TypeDefIndex: 12426
{
	// Fields
	[TooltipAttribute] // RVA: 0xC94140 Offset: 0xC94140 VA: 0xC94140
	public LogLevel logLevel; // 0x4C
	[HideTypeFilter] // RVA: 0xC94178 Offset: 0xC94178 VA: 0xC94178
	[UIHintAttribute] // RVA: 0xC94178 Offset: 0xC94178 VA: 0xC94178
	[TooltipAttribute] // RVA: 0xC94178 Offset: 0xC94178 VA: 0xC94178
	public FsmVar variable; // 0x50

	// Methods

	// RVA: 0x12EABA8 Offset: 0x12EABA8 VA: 0x12EABA8
	public void .ctor() { }

	// RVA: 0x12EABB0 Offset: 0x12EABB0 VA: 0x12EABB0 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EABC0 Offset: 0x12EABC0 VA: 0x12EABC0 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30D24 Offset: 0xC30D24 VA: 0xC30D24
[TooltipAttribute] // RVA: 0xC30D24 Offset: 0xC30D24 VA: 0xC30D24
public class DebugGameObject : BaseLogAction // TypeDefIndex: 12427
{
	// Fields
	[TooltipAttribute] // RVA: 0xC941D8 Offset: 0xC941D8 VA: 0xC941D8
	public LogLevel logLevel; // 0x4C
	[UIHintAttribute] // RVA: 0xC94210 Offset: 0xC94210 VA: 0xC94210
	[TooltipAttribute] // RVA: 0xC94210 Offset: 0xC94210 VA: 0xC94210
	public FsmGameObject gameObject; // 0x50

	// Methods

	// RVA: 0x12EAC30 Offset: 0x12EAC30 VA: 0x12EAC30
	public void .ctor() { }

	// RVA: 0x12EAC38 Offset: 0x12EAC38 VA: 0x12EAC38 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EAC48 Offset: 0x12EAC48 VA: 0x12EAC48 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30D74 Offset: 0xC30D74 VA: 0xC30D74
[TooltipAttribute] // RVA: 0xC30D74 Offset: 0xC30D74 VA: 0xC30D74
public class DebugInt : BaseLogAction // TypeDefIndex: 12428
{
	// Fields
	[TooltipAttribute] // RVA: 0xC94260 Offset: 0xC94260 VA: 0xC94260
	public LogLevel logLevel; // 0x4C
	[UIHintAttribute] // RVA: 0xC94298 Offset: 0xC94298 VA: 0xC94298
	[TooltipAttribute] // RVA: 0xC94298 Offset: 0xC94298 VA: 0xC94298
	public FsmInt intVariable; // 0x50

	// Methods

	// RVA: 0x12EAD4C Offset: 0x12EAD4C VA: 0x12EAD4C
	public void .ctor() { }

	// RVA: 0x12EAD54 Offset: 0x12EAD54 VA: 0x12EAD54 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EAD60 Offset: 0x12EAD60 VA: 0x12EAD60 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30DC4 Offset: 0xC30DC4 VA: 0xC30DC4
[TooltipAttribute] // RVA: 0xC30DC4 Offset: 0xC30DC4 VA: 0xC30DC4
public class DebugLog : BaseLogAction // TypeDefIndex: 12429
{
	// Fields
	[TooltipAttribute] // RVA: 0xC942E8 Offset: 0xC942E8 VA: 0xC942E8
	public LogLevel logLevel; // 0x4C
	[TooltipAttribute] // RVA: 0xC94320 Offset: 0xC94320 VA: 0xC94320
	public FsmString text; // 0x50

	// Methods

	// RVA: 0x12EAEA0 Offset: 0x12EAEA0 VA: 0x12EAEA0
	public void .ctor() { }

	// RVA: 0x12EAEA8 Offset: 0x12EAEA8 VA: 0x12EAEA8 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EAF2C Offset: 0x12EAF2C VA: 0x12EAF2C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30E14 Offset: 0xC30E14 VA: 0xC30E14
[TooltipAttribute] // RVA: 0xC30E14 Offset: 0xC30E14 VA: 0xC30E14
public class DebugObject : BaseLogAction // TypeDefIndex: 12430
{
	// Fields
	[TooltipAttribute] // RVA: 0xC94358 Offset: 0xC94358 VA: 0xC94358
	public LogLevel logLevel; // 0x4C
	[UIHintAttribute] // RVA: 0xC94390 Offset: 0xC94390 VA: 0xC94390
	[TooltipAttribute] // RVA: 0xC94390 Offset: 0xC94390 VA: 0xC94390
	public FsmObject fsmObject; // 0x50

	// Methods

	// RVA: 0x12EB018 Offset: 0x12EB018 VA: 0x12EB018
	public void .ctor() { }

	// RVA: 0x12EB020 Offset: 0x12EB020 VA: 0x12EB020 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EB030 Offset: 0x12EB030 VA: 0x12EB030 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30E64 Offset: 0xC30E64 VA: 0xC30E64
[TooltipAttribute] // RVA: 0xC30E64 Offset: 0xC30E64 VA: 0xC30E64
public class DebugVector3 : BaseLogAction // TypeDefIndex: 12431
{
	// Fields
	[TooltipAttribute] // RVA: 0xC943E0 Offset: 0xC943E0 VA: 0xC943E0
	public LogLevel logLevel; // 0x4C
	[UIHintAttribute] // RVA: 0xC94418 Offset: 0xC94418 VA: 0xC94418
	[TooltipAttribute] // RVA: 0xC94418 Offset: 0xC94418 VA: 0xC94418
	public FsmVector3 vector3Variable; // 0x50

	// Methods

	// RVA: 0x12EB284 Offset: 0x12EB284 VA: 0x12EB284
	public void .ctor() { }

	// RVA: 0x12EB28C Offset: 0x12EB28C VA: 0x12EB28C Slot: 28
	public override void Reset() { }

	// RVA: 0x12EB29C Offset: 0x12EB29C VA: 0x12EB29C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30EB4 Offset: 0xC30EB4 VA: 0xC30EB4
[TooltipAttribute] // RVA: 0xC30EB4 Offset: 0xC30EB4 VA: 0xC30EB4
public class DestroyComponent : FsmStateAction // TypeDefIndex: 12432
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC94468 Offset: 0xC94468 VA: 0xC94468
	[TooltipAttribute] // RVA: 0xC94468 Offset: 0xC94468 VA: 0xC94468
	public FsmOwnerDefault gameObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC944B4 Offset: 0xC944B4 VA: 0xC944B4
	[UIHintAttribute] // RVA: 0xC944B4 Offset: 0xC944B4 VA: 0xC944B4
	[TooltipAttribute] // RVA: 0xC944B4 Offset: 0xC944B4 VA: 0xC944B4
	public FsmString component; // 0x58
	private Component aComponent; // 0x60

	// Methods

	// RVA: 0x12EB3E4 Offset: 0x12EB3E4 VA: 0x12EB3E4
	public void .ctor() { }

	// RVA: 0x12EB3EC Offset: 0x12EB3EC VA: 0x12EB3EC Slot: 28
	public override void Reset() { }

	// RVA: 0x12EB3F8 Offset: 0x12EB3F8 VA: 0x12EB3F8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12EB48C Offset: 0x12EB48C VA: 0x12EB48C
	private void DoDestroyComponent(GameObject go) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30F04 Offset: 0xC30F04 VA: 0xC30F04
[TooltipAttribute] // RVA: 0xC30F04 Offset: 0xC30F04 VA: 0xC30F04
public class DestroyObject : FsmStateAction // TypeDefIndex: 12433
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC94514 Offset: 0xC94514 VA: 0xC94514
	[TooltipAttribute] // RVA: 0xC94514 Offset: 0xC94514 VA: 0xC94514
	public FsmGameObject gameObject; // 0x50
	[HasFloatSliderAttribute] // RVA: 0xC94560 Offset: 0xC94560 VA: 0xC94560
	[TooltipAttribute] // RVA: 0xC94560 Offset: 0xC94560 VA: 0xC94560
	public FsmFloat delay; // 0x58
	[TooltipAttribute] // RVA: 0xC945B4 Offset: 0xC945B4 VA: 0xC945B4
	public FsmBool detachChildren; // 0x60

	// Methods

	// RVA: 0x12EB620 Offset: 0x12EB620 VA: 0x12EB620
	public void .ctor() { }

	// RVA: 0x12EB628 Offset: 0x12EB628 VA: 0x12EB628 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EB658 Offset: 0x12EB658 VA: 0x12EB658 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12EB7EC Offset: 0x12EB7EC VA: 0x12EB7EC Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30F54 Offset: 0xC30F54 VA: 0xC30F54
[TooltipAttribute] // RVA: 0xC30F54 Offset: 0xC30F54 VA: 0xC30F54
public class DestroySelf : FsmStateAction // TypeDefIndex: 12434
{
	// Fields
	[TooltipAttribute] // RVA: 0xC945EC Offset: 0xC945EC VA: 0xC945EC
	public FsmBool detachChildren; // 0x50

	// Methods

	// RVA: 0x12EBAA0 Offset: 0x12EBAA0 VA: 0x12EBAA0
	public void .ctor() { }

	// RVA: 0x12EBAA8 Offset: 0x12EBAA8 VA: 0x12EBAA8 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EBAD4 Offset: 0x12EBAD4 VA: 0x12EBAD4 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30FA4 Offset: 0xC30FA4 VA: 0xC30FA4
[TooltipAttribute] // RVA: 0xC30FA4 Offset: 0xC30FA4 VA: 0xC30FA4
public class DetachChildren : FsmStateAction // TypeDefIndex: 12435
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC94624 Offset: 0xC94624 VA: 0xC94624
	[TooltipAttribute] // RVA: 0xC94624 Offset: 0xC94624 VA: 0xC94624
	public FsmOwnerDefault gameObject; // 0x50

	// Methods

	// RVA: 0x12EBC00 Offset: 0x12EBC00 VA: 0x12EBC00
	public void .ctor() { }

	// RVA: 0x12EBC08 Offset: 0x12EBC08 VA: 0x12EBC08 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EBC10 Offset: 0x12EBC10 VA: 0x12EBC10 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12EBC68 Offset: 0x12EBC68 VA: 0x12EBC68
	private static void DoDetachChildren(GameObject go) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30FF4 Offset: 0xC30FF4 VA: 0xC30FF4
[TooltipAttribute] // RVA: 0xC30FF4 Offset: 0xC30FF4 VA: 0xC30FF4
public class GetLocationInfo : FsmStateAction // TypeDefIndex: 12436
{
	// Fields
	[UIHintAttribute] // RVA: 0xC94670 Offset: 0xC94670 VA: 0xC94670
	public FsmVector3 vectorPosition; // 0x50
	[UIHintAttribute] // RVA: 0xC94684 Offset: 0xC94684 VA: 0xC94684
	public FsmFloat longitude; // 0x58
	[UIHintAttribute] // RVA: 0xC94698 Offset: 0xC94698 VA: 0xC94698
	public FsmFloat latitude; // 0x60
	[UIHintAttribute] // RVA: 0xC946AC Offset: 0xC946AC VA: 0xC946AC
	public FsmFloat altitude; // 0x68
	[UIHintAttribute] // RVA: 0xC946C0 Offset: 0xC946C0 VA: 0xC946C0
	public FsmFloat horizontalAccuracy; // 0x70
	[UIHintAttribute] // RVA: 0xC946D4 Offset: 0xC946D4 VA: 0xC946D4
	public FsmFloat verticalAccuracy; // 0x78
	[TooltipAttribute] // RVA: 0xC946E8 Offset: 0xC946E8 VA: 0xC946E8
	public FsmEvent errorEvent; // 0x80

	// Methods

	// RVA: 0x1B6E620 Offset: 0x1B6E620 VA: 0x1B6E620
	public void .ctor() { }

	// RVA: 0x1B6E628 Offset: 0x1B6E628 VA: 0x1B6E628 Slot: 28
	public override void Reset() { }

	// RVA: 0x1B6E63C Offset: 0x1B6E63C VA: 0x1B6E63C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B6E644 Offset: 0x1B6E644 VA: 0x1B6E644
	private void DoGetLocationInfo() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC31044 Offset: 0xC31044 VA: 0xC31044
[TooltipAttribute] // RVA: 0xC31044 Offset: 0xC31044 VA: 0xC31044
public class StartLocationServiceUpdates : FsmStateAction // TypeDefIndex: 12437
{
	// Fields
	[TooltipAttribute] // RVA: 0xC94720 Offset: 0xC94720 VA: 0xC94720
	public FsmFloat maxWait; // 0x50
	public FsmFloat desiredAccuracy; // 0x58
	public FsmFloat updateDistance; // 0x60
	[TooltipAttribute] // RVA: 0xC94758 Offset: 0xC94758 VA: 0xC94758
	public FsmEvent successEvent; // 0x68
	[TooltipAttribute] // RVA: 0xC94790 Offset: 0xC94790 VA: 0xC94790
	public FsmEvent failedEvent; // 0x70
	private float startTime; // 0x78

	// Methods

	// RVA: 0x1B9F878 Offset: 0x1B9F878 VA: 0x1B9F878
	public void .ctor() { }

	// RVA: 0x1B9F880 Offset: 0x1B9F880 VA: 0x1B9F880 Slot: 28
	public override void Reset() { }

	// RVA: 0x1B9F8DC Offset: 0x1B9F8DC VA: 0x1B9F8DC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B9F8E4 Offset: 0x1B9F8E4 VA: 0x1B9F8E4 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC31094 Offset: 0xC31094 VA: 0xC31094
[TooltipAttribute] // RVA: 0xC31094 Offset: 0xC31094 VA: 0xC31094
public class StopLocationServiceUpdates : FsmStateAction // TypeDefIndex: 12438
{
	// Methods

	// RVA: 0x1B9FAC0 Offset: 0x1B9FAC0 VA: 0x1B9FAC0
	public void .ctor() { }

	// RVA: 0x1B9FAC8 Offset: 0x1B9FAC8 VA: 0x1B9FAC8 Slot: 28
	public override void Reset() { }

	// RVA: 0x1B9FACC Offset: 0x1B9FACC VA: 0x1B9FACC Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC310E4 Offset: 0xC310E4 VA: 0xC310E4
[TooltipAttribute] // RVA: 0xC310E4 Offset: 0xC310E4 VA: 0xC310E4
public class DeviceOrientationEvent : FsmStateAction // TypeDefIndex: 12439
{
	// Fields
	[TooltipAttribute] // RVA: 0xC947C8 Offset: 0xC947C8 VA: 0xC947C8
	public DeviceOrientation orientation; // 0x4C
	[TooltipAttribute] // RVA: 0xC94800 Offset: 0xC94800 VA: 0xC94800
	public FsmEvent sendEvent; // 0x50
	[TooltipAttribute] // RVA: 0xC94838 Offset: 0xC94838 VA: 0xC94838
	public bool everyFrame; // 0x58

	// Methods

	// RVA: 0x12EBD14 Offset: 0x12EBD14 VA: 0x12EBD14
	public void .ctor() { }

	// RVA: 0x12EBD1C Offset: 0x12EBD1C VA: 0x12EBD1C Slot: 28
	public override void Reset() { }

	// RVA: 0x12EBD30 Offset: 0x12EBD30 VA: 0x12EBD30 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12EBDD0 Offset: 0x12EBDD0 VA: 0x12EBDD0 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x12EBD6C Offset: 0x12EBD6C VA: 0x12EBD6C
	private void DoDetectDeviceOrientation() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC31134 Offset: 0xC31134 VA: 0xC31134
[TooltipAttribute] // RVA: 0xC31134 Offset: 0xC31134 VA: 0xC31134
public class DevicePlayFullScreenMovie : FsmStateAction // TypeDefIndex: 12440
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC94870 Offset: 0xC94870 VA: 0xC94870
	[TooltipAttribute] // RVA: 0xC94870 Offset: 0xC94870 VA: 0xC94870
	public FsmString moviePath; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC948BC Offset: 0xC948BC VA: 0xC948BC
	[TooltipAttribute] // RVA: 0xC948BC Offset: 0xC948BC VA: 0xC948BC
	public FsmColor fadeColor; // 0x58
	[TooltipAttribute] // RVA: 0xC94908 Offset: 0xC94908 VA: 0xC94908
	public FullScreenMovieControlMode movieControlMode; // 0x60
	[TooltipAttribute] // RVA: 0xC94940 Offset: 0xC94940 VA: 0xC94940
	public FullScreenMovieScalingMode movieScalingMode; // 0x64

	// Methods

	// RVA: 0x12EBDD4 Offset: 0x12EBDD4 VA: 0x12EBDD4
	public void .ctor() { }

	// RVA: 0x12EBDDC Offset: 0x12EBDDC VA: 0x12EBDDC Slot: 28
	public override void Reset() { }

	// RVA: 0x12EBE6C Offset: 0x12EBE6C VA: 0x12EBE6C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC31184 Offset: 0xC31184 VA: 0xC31184
[TooltipAttribute] // RVA: 0xC31184 Offset: 0xC31184 VA: 0xC31184
public class DeviceShakeEvent : FsmStateAction // TypeDefIndex: 12441
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC94978 Offset: 0xC94978 VA: 0xC94978
	[TooltipAttribute] // RVA: 0xC94978 Offset: 0xC94978 VA: 0xC94978
	public FsmFloat shakeThreshold; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC949C4 Offset: 0xC949C4 VA: 0xC949C4
	[TooltipAttribute] // RVA: 0xC949C4 Offset: 0xC949C4 VA: 0xC949C4
	public FsmEvent sendEvent; // 0x58

	// Methods

	// RVA: 0x12EC478 Offset: 0x12EC478 VA: 0x12EC478
	public void .ctor() { }

	// RVA: 0x12EC480 Offset: 0x12EC480 VA: 0x12EC480 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EC4AC Offset: 0x12EC4AC VA: 0x12EC4AC Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC311D4 Offset: 0xC311D4 VA: 0xC311D4
[TooltipAttribute] // RVA: 0xC311D4 Offset: 0xC311D4 VA: 0xC311D4
public class DeviceVibrate : FsmStateAction // TypeDefIndex: 12442
{
	// Methods

	// RVA: 0x12EC56C Offset: 0x12EC56C VA: 0x12EC56C
	public void .ctor() { }

	// RVA: 0x12EC574 Offset: 0x12EC574 VA: 0x12EC574 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EC578 Offset: 0x12EC578 VA: 0x12EC578 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC31224 Offset: 0xC31224 VA: 0xC31224
[TooltipAttribute] // RVA: 0xC31224 Offset: 0xC31224 VA: 0xC31224
public class DontDestroyOnLoad : FsmStateAction // TypeDefIndex: 12443
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC94A10 Offset: 0xC94A10 VA: 0xC94A10
	[TooltipAttribute] // RVA: 0xC94A10 Offset: 0xC94A10 VA: 0xC94A10
	public FsmOwnerDefault gameObject; // 0x50

	// Methods

	// RVA: 0x12EC684 Offset: 0x12EC684 VA: 0x12EC684
	public void .ctor() { }

	// RVA: 0x12EC68C Offset: 0x12EC68C VA: 0x12EC68C Slot: 28
	public override void Reset() { }

	// RVA: 0x12EC694 Offset: 0x12EC694 VA: 0x12EC694 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC31274 Offset: 0xC31274 VA: 0xC31274
[TooltipAttribute] // RVA: 0xC31274 Offset: 0xC31274 VA: 0xC31274
public class DrawDebugLine : FsmStateAction // TypeDefIndex: 12444
{
	// Fields
	[TooltipAttribute] // RVA: 0xC94A5C Offset: 0xC94A5C VA: 0xC94A5C
	public FsmGameObject fromObject; // 0x50
	[TooltipAttribute] // RVA: 0xC94A94 Offset: 0xC94A94 VA: 0xC94A94
	public FsmVector3 fromPosition; // 0x58
	[TooltipAttribute] // RVA: 0xC94ACC Offset: 0xC94ACC VA: 0xC94ACC
	public FsmGameObject toObject; // 0x60
	[TooltipAttribute] // RVA: 0xC94B04 Offset: 0xC94B04 VA: 0xC94B04
	public FsmVector3 toPosition; // 0x68
	[TooltipAttribute] // RVA: 0xC94B3C Offset: 0xC94B3C VA: 0xC94B3C
	public FsmColor color; // 0x70

	// Methods

	// RVA: 0x12EC7C0 Offset: 0x12EC7C0 VA: 0x12EC7C0
	public void .ctor() { }

	// RVA: 0x12EC7C8 Offset: 0x12EC7C8 VA: 0x12EC7C8 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EC904 Offset: 0x12EC904 VA: 0x12EC904 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC312C4 Offset: 0xC312C4 VA: 0xC312C4
[TooltipAttribute] // RVA: 0xC312C4 Offset: 0xC312C4 VA: 0xC312C4
public class DrawDebugRay : FsmStateAction // TypeDefIndex: 12445
{
	// Fields
	[TooltipAttribute] // RVA: 0xC94B74 Offset: 0xC94B74 VA: 0xC94B74
	public FsmGameObject fromObject; // 0x50
	[TooltipAttribute] // RVA: 0xC94BAC Offset: 0xC94BAC VA: 0xC94BAC
	public FsmVector3 fromPosition; // 0x58
	[TooltipAttribute] // RVA: 0xC94BE4 Offset: 0xC94BE4 VA: 0xC94BE4
	public FsmVector3 direction; // 0x60
	[TooltipAttribute] // RVA: 0xC94C1C Offset: 0xC94C1C VA: 0xC94C1C
	public FsmColor color; // 0x68

	// Methods

	// RVA: 0x12EC934 Offset: 0x12EC934 VA: 0x12EC934
	public void .ctor() { }

	// RVA: 0x12EC93C Offset: 0x12EC93C VA: 0x12EC93C Slot: 28
	public override void Reset() { }

	// RVA: 0x12ECA44 Offset: 0x12ECA44 VA: 0x12ECA44 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC31314 Offset: 0xC31314 VA: 0xC31314
[TooltipAttribute] // RVA: 0xC31314 Offset: 0xC31314 VA: 0xC31314
public class DrawFullscreenColor : FsmStateAction // TypeDefIndex: 12446
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC94C54 Offset: 0xC94C54 VA: 0xC94C54
	[TooltipAttribute] // RVA: 0xC94C54 Offset: 0xC94C54 VA: 0xC94C54
	public FsmColor color; // 0x50

	// Methods

	// RVA: 0x12ECA54 Offset: 0x12ECA54 VA: 0x12ECA54
	public void .ctor() { }

	// RVA: 0x12ECA5C Offset: 0x12ECA5C VA: 0x12ECA5C Slot: 28
	public override void Reset() { }

	// RVA: 0x12ECA8C Offset: 0x12ECA8C VA: 0x12ECA8C Slot: 35
	public override void OnGUI() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC31364 Offset: 0xC31364 VA: 0xC31364
[TooltipAttribute] // RVA: 0xC31364 Offset: 0xC31364 VA: 0xC31364
public class DrawStateLabel : FsmStateAction // TypeDefIndex: 12447
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC94CA0 Offset: 0xC94CA0 VA: 0xC94CA0
	[TooltipAttribute] // RVA: 0xC94CA0 Offset: 0xC94CA0 VA: 0xC94CA0
	public FsmBool showLabel; // 0x50

	// Methods

	// RVA: 0x12ECBA4 Offset: 0x12ECBA4 VA: 0x12ECBA4
	public void .ctor() { }

	// RVA: 0x12ECBAC Offset: 0x12ECBAC VA: 0x12ECBAC Slot: 28
	public override void Reset() { }

	// RVA: 0x12ECBD8 Offset: 0x12ECBD8 VA: 0x12ECBD8 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC313B4 Offset: 0xC313B4 VA: 0xC313B4
[TooltipAttribute] // RVA: 0xC313B4 Offset: 0xC313B4 VA: 0xC313B4
public class DrawTexture : FsmStateAction // TypeDefIndex: 12448
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC94CEC Offset: 0xC94CEC VA: 0xC94CEC
	[TooltipAttribute] // RVA: 0xC94CEC Offset: 0xC94CEC VA: 0xC94CEC
	public FsmTexture texture; // 0x50
	[UIHintAttribute] // RVA: 0xC94D38 Offset: 0xC94D38 VA: 0xC94D38
	[TooltipAttribute] // RVA: 0xC94D38 Offset: 0xC94D38 VA: 0xC94D38
	[TitleAttribute] // RVA: 0xC94D38 Offset: 0xC94D38 VA: 0xC94D38
	public FsmRect screenRect; // 0x58
	[TooltipAttribute] // RVA: 0xC94DAC Offset: 0xC94DAC VA: 0xC94DAC
	public FsmFloat left; // 0x60
	[TooltipAttribute] // RVA: 0xC94DE4 Offset: 0xC94DE4 VA: 0xC94DE4
	public FsmFloat top; // 0x68
	[TooltipAttribute] // RVA: 0xC94E1C Offset: 0xC94E1C VA: 0xC94E1C
	public FsmFloat width; // 0x70
	[TooltipAttribute] // RVA: 0xC94E54 Offset: 0xC94E54 VA: 0xC94E54
	public FsmFloat height; // 0x78
	[TooltipAttribute] // RVA: 0xC94E8C Offset: 0xC94E8C VA: 0xC94E8C
	public ScaleMode scaleMode; // 0x80
	[TooltipAttribute] // RVA: 0xC94EC4 Offset: 0xC94EC4 VA: 0xC94EC4
	public FsmBool alphaBlend; // 0x88
	[TooltipAttribute] // RVA: 0xC94EFC Offset: 0xC94EFC VA: 0xC94EFC
	public FsmFloat imageAspect; // 0x90
	[TooltipAttribute] // RVA: 0xC94F34 Offset: 0xC94F34 VA: 0xC94F34
	public FsmBool normalized; // 0x98
	private Rect rect; // 0xA0

	// Methods

	// RVA: 0x12ECC4C Offset: 0x12ECC4C VA: 0x12ECC4C
	public void .ctor() { }

	// RVA: 0x12ECC54 Offset: 0x12ECC54 VA: 0x12ECC54 Slot: 28
	public override void Reset() { }

	// RVA: 0x12ECCF4 Offset: 0x12ECCF4 VA: 0x12ECCF4 Slot: 35
	public override void OnGUI() { }
}

// Namespace: HutongGames
public class EasingFunction // TypeDefIndex: 12449
{
	// Fields
	private const float NATURAL_LOG_OF_2 = 0.6931472;
	public static AnimationCurve AnimationCurve; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC94F6C Offset: 0xC94F6C VA: 0xC94F6C
	private static EasingFunction.Function <>f__mg$cache0; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC94F7C Offset: 0xC94F7C VA: 0xC94F7C
	private static EasingFunction.Function <>f__mg$cache1; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC94F8C Offset: 0xC94F8C VA: 0xC94F8C
	private static EasingFunction.Function <>f__mg$cache2; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC94F9C Offset: 0xC94F9C VA: 0xC94F9C
	private static EasingFunction.Function <>f__mg$cache3; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC94FAC Offset: 0xC94FAC VA: 0xC94FAC
	private static EasingFunction.Function <>f__mg$cache4; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC94FBC Offset: 0xC94FBC VA: 0xC94FBC
	private static EasingFunction.Function <>f__mg$cache5; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC94FCC Offset: 0xC94FCC VA: 0xC94FCC
	private static EasingFunction.Function <>f__mg$cache6; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC94FDC Offset: 0xC94FDC VA: 0xC94FDC
	private static EasingFunction.Function <>f__mg$cache7; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC94FEC Offset: 0xC94FEC VA: 0xC94FEC
	private static EasingFunction.Function <>f__mg$cache8; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC94FFC Offset: 0xC94FFC VA: 0xC94FFC
	private static EasingFunction.Function <>f__mg$cache9; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xC9500C Offset: 0xC9500C VA: 0xC9500C
	private static EasingFunction.Function <>f__mg$cacheA; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xC9501C Offset: 0xC9501C VA: 0xC9501C
	private static EasingFunction.Function <>f__mg$cacheB; // 0x60
	[CompilerGeneratedAttribute] // RVA: 0xC9502C Offset: 0xC9502C VA: 0xC9502C
	private static EasingFunction.Function <>f__mg$cacheC; // 0x68
	[CompilerGeneratedAttribute] // RVA: 0xC9503C Offset: 0xC9503C VA: 0xC9503C
	private static EasingFunction.Function <>f__mg$cacheD; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC9504C Offset: 0xC9504C VA: 0xC9504C
	private static EasingFunction.Function <>f__mg$cacheE; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xC9505C Offset: 0xC9505C VA: 0xC9505C
	private static EasingFunction.Function <>f__mg$cacheF; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC9506C Offset: 0xC9506C VA: 0xC9506C
	private static EasingFunction.Function <>f__mg$cache10; // 0x88
	[CompilerGeneratedAttribute] // RVA: 0xC9507C Offset: 0xC9507C VA: 0xC9507C
	private static EasingFunction.Function <>f__mg$cache11; // 0x90
	[CompilerGeneratedAttribute] // RVA: 0xC9508C Offset: 0xC9508C VA: 0xC9508C
	private static EasingFunction.Function <>f__mg$cache12; // 0x98
	[CompilerGeneratedAttribute] // RVA: 0xC9509C Offset: 0xC9509C VA: 0xC9509C
	private static EasingFunction.Function <>f__mg$cache13; // 0xA0
	[CompilerGeneratedAttribute] // RVA: 0xC950AC Offset: 0xC950AC VA: 0xC950AC
	private static EasingFunction.Function <>f__mg$cache14; // 0xA8
	[CompilerGeneratedAttribute] // RVA: 0xC950BC Offset: 0xC950BC VA: 0xC950BC
	private static EasingFunction.Function <>f__mg$cache15; // 0xB0
	[CompilerGeneratedAttribute] // RVA: 0xC950CC Offset: 0xC950CC VA: 0xC950CC
	private static EasingFunction.Function <>f__mg$cache16; // 0xB8
	[CompilerGeneratedAttribute] // RVA: 0xC950DC Offset: 0xC950DC VA: 0xC950DC
	private static EasingFunction.Function <>f__mg$cache17; // 0xC0
	[CompilerGeneratedAttribute] // RVA: 0xC950EC Offset: 0xC950EC VA: 0xC950EC
	private static EasingFunction.Function <>f__mg$cache18; // 0xC8
	[CompilerGeneratedAttribute] // RVA: 0xC950FC Offset: 0xC950FC VA: 0xC950FC
	private static EasingFunction.Function <>f__mg$cache19; // 0xD0
	[CompilerGeneratedAttribute] // RVA: 0xC9510C Offset: 0xC9510C VA: 0xC9510C
	private static EasingFunction.Function <>f__mg$cache1A; // 0xD8
	[CompilerGeneratedAttribute] // RVA: 0xC9511C Offset: 0xC9511C VA: 0xC9511C
	private static EasingFunction.Function <>f__mg$cache1B; // 0xE0
	[CompilerGeneratedAttribute] // RVA: 0xC9512C Offset: 0xC9512C VA: 0xC9512C
	private static EasingFunction.Function <>f__mg$cache1C; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xC9513C Offset: 0xC9513C VA: 0xC9513C
	private static EasingFunction.Function <>f__mg$cache1D; // 0xF0
	[CompilerGeneratedAttribute] // RVA: 0xC9514C Offset: 0xC9514C VA: 0xC9514C
	private static EasingFunction.Function <>f__mg$cache1E; // 0xF8
	[CompilerGeneratedAttribute] // RVA: 0xC9515C Offset: 0xC9515C VA: 0xC9515C
	private static EasingFunction.Function <>f__mg$cache1F; // 0x100
	[CompilerGeneratedAttribute] // RVA: 0xC9516C Offset: 0xC9516C VA: 0xC9516C
	private static EasingFunction.Function <>f__mg$cache20; // 0x108
	[CompilerGeneratedAttribute] // RVA: 0xC9517C Offset: 0xC9517C VA: 0xC9517C
	private static EasingFunction.Function <>f__mg$cache21; // 0x110
	[CompilerGeneratedAttribute] // RVA: 0xC9518C Offset: 0xC9518C VA: 0xC9518C
	private static EasingFunction.Function <>f__mg$cache22; // 0x118
	[CompilerGeneratedAttribute] // RVA: 0xC9519C Offset: 0xC9519C VA: 0xC9519C
	private static EasingFunction.Function <>f__mg$cache23; // 0x120
	[CompilerGeneratedAttribute] // RVA: 0xC951AC Offset: 0xC951AC VA: 0xC951AC
	private static EasingFunction.Function <>f__mg$cache24; // 0x128
	[CompilerGeneratedAttribute] // RVA: 0xC951BC Offset: 0xC951BC VA: 0xC951BC
	private static EasingFunction.Function <>f__mg$cache25; // 0x130
	[CompilerGeneratedAttribute] // RVA: 0xC951CC Offset: 0xC951CC VA: 0xC951CC
	private static EasingFunction.Function <>f__mg$cache26; // 0x138
	[CompilerGeneratedAttribute] // RVA: 0xC951DC Offset: 0xC951DC VA: 0xC951DC
	private static EasingFunction.Function <>f__mg$cache27; // 0x140
	[CompilerGeneratedAttribute] // RVA: 0xC951EC Offset: 0xC951EC VA: 0xC951EC
	private static EasingFunction.Function <>f__mg$cache28; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xC951FC Offset: 0xC951FC VA: 0xC951FC
	private static EasingFunction.Function <>f__mg$cache29; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xC9520C Offset: 0xC9520C VA: 0xC9520C
	private static EasingFunction.Function <>f__mg$cache2A; // 0x158
	[CompilerGeneratedAttribute] // RVA: 0xC9521C Offset: 0xC9521C VA: 0xC9521C
	private static EasingFunction.Function <>f__mg$cache2B; // 0x160
	[CompilerGeneratedAttribute] // RVA: 0xC9522C Offset: 0xC9522C VA: 0xC9522C
	private static EasingFunction.Function <>f__mg$cache2C; // 0x168
	[CompilerGeneratedAttribute] // RVA: 0xC9523C Offset: 0xC9523C VA: 0xC9523C
	private static EasingFunction.Function <>f__mg$cache2D; // 0x170
	[CompilerGeneratedAttribute] // RVA: 0xC9524C Offset: 0xC9524C VA: 0xC9524C
	private static EasingFunction.Function <>f__mg$cache2E; // 0x178
	[CompilerGeneratedAttribute] // RVA: 0xC9525C Offset: 0xC9525C VA: 0xC9525C
	private static EasingFunction.Function <>f__mg$cache2F; // 0x180
	[CompilerGeneratedAttribute] // RVA: 0xC9526C Offset: 0xC9526C VA: 0xC9526C
	private static EasingFunction.Function <>f__mg$cache30; // 0x188
	[CompilerGeneratedAttribute] // RVA: 0xC9527C Offset: 0xC9527C VA: 0xC9527C
	private static EasingFunction.Function <>f__mg$cache31; // 0x190
	[CompilerGeneratedAttribute] // RVA: 0xC9528C Offset: 0xC9528C VA: 0xC9528C
	private static EasingFunction.Function <>f__mg$cache32; // 0x198
	[CompilerGeneratedAttribute] // RVA: 0xC9529C Offset: 0xC9529C VA: 0xC9529C
	private static EasingFunction.Function <>f__mg$cache33; // 0x1A0
	[CompilerGeneratedAttribute] // RVA: 0xC952AC Offset: 0xC952AC VA: 0xC952AC
	private static EasingFunction.Function <>f__mg$cache34; // 0x1A8
	[CompilerGeneratedAttribute] // RVA: 0xC952BC Offset: 0xC952BC VA: 0xC952BC
	private static EasingFunction.Function <>f__mg$cache35; // 0x1B0
	[CompilerGeneratedAttribute] // RVA: 0xC952CC Offset: 0xC952CC VA: 0xC952CC
	private static EasingFunction.Function <>f__mg$cache36; // 0x1B8
	[CompilerGeneratedAttribute] // RVA: 0xC952DC Offset: 0xC952DC VA: 0xC952DC
	private static EasingFunction.Function <>f__mg$cache37; // 0x1C0
	[CompilerGeneratedAttribute] // RVA: 0xC952EC Offset: 0xC952EC VA: 0xC952EC
	private static EasingFunction.Function <>f__mg$cache38; // 0x1C8
	[CompilerGeneratedAttribute] // RVA: 0xC952FC Offset: 0xC952FC VA: 0xC952FC
	private static EasingFunction.Function <>f__mg$cache39; // 0x1D0
	[CompilerGeneratedAttribute] // RVA: 0xC9530C Offset: 0xC9530C VA: 0xC9530C
	private static EasingFunction.Function <>f__mg$cache3A; // 0x1D8
	[CompilerGeneratedAttribute] // RVA: 0xC9531C Offset: 0xC9531C VA: 0xC9531C
	private static EasingFunction.Function <>f__mg$cache3B; // 0x1E0
	[CompilerGeneratedAttribute] // RVA: 0xC9532C Offset: 0xC9532C VA: 0xC9532C
	private static EasingFunction.Function <>f__mg$cache3C; // 0x1E8
	[CompilerGeneratedAttribute] // RVA: 0xC9533C Offset: 0xC9533C VA: 0xC9533C
	private static EasingFunction.Function <>f__mg$cache3D; // 0x1F0
	[CompilerGeneratedAttribute] // RVA: 0xC9534C Offset: 0xC9534C VA: 0xC9534C
	private static EasingFunction.Function <>f__mg$cache3E; // 0x1F8
	[CompilerGeneratedAttribute] // RVA: 0xC9535C Offset: 0xC9535C VA: 0xC9535C
	private static EasingFunction.Function <>f__mg$cache3F; // 0x200
	[CompilerGeneratedAttribute] // RVA: 0xC9536C Offset: 0xC9536C VA: 0xC9536C
	private static EasingFunction.Function <>f__mg$cache40; // 0x208

	// Methods

	// RVA: 0x1BB6C40 Offset: 0x1BB6C40 VA: 0x1BB6C40
	public void .ctor() { }

	// RVA: 0x1BB6C48 Offset: 0x1BB6C48 VA: 0x1BB6C48
	public static float Linear(float start, float end, float value) { }

	// RVA: 0x1BB6CD0 Offset: 0x1BB6CD0 VA: 0x1BB6CD0
	public static float Spring(float start, float end, float value) { }

	// RVA: 0x1BB6DD4 Offset: 0x1BB6DD4 VA: 0x1BB6DD4
	public static float EaseInQuad(float start, float end, float value) { }

	// RVA: 0x1BB6DE8 Offset: 0x1BB6DE8 VA: 0x1BB6DE8
	public static float EaseOutQuad(float start, float end, float value) { }

	// RVA: 0x1BB6E04 Offset: 0x1BB6E04 VA: 0x1BB6E04
	public static float EaseInOutQuad(float start, float end, float value) { }

	// RVA: 0x1BB6E58 Offset: 0x1BB6E58 VA: 0x1BB6E58
	public static float EaseInCubic(float start, float end, float value) { }

	// RVA: 0x1BB6E70 Offset: 0x1BB6E70 VA: 0x1BB6E70
	public static float EaseOutCubic(float start, float end, float value) { }

	// RVA: 0x1BB6E98 Offset: 0x1BB6E98 VA: 0x1BB6E98
	public static float EaseInOutCubic(float start, float end, float value) { }

	// RVA: 0x1BB6EF0 Offset: 0x1BB6EF0 VA: 0x1BB6EF0
	public static float EaseInQuart(float start, float end, float value) { }

	// RVA: 0x1BB6F0C Offset: 0x1BB6F0C VA: 0x1BB6F0C
	public static float EaseOutQuart(float start, float end, float value) { }

	// RVA: 0x1BB6F34 Offset: 0x1BB6F34 VA: 0x1BB6F34
	public static float EaseInOutQuart(float start, float end, float value) { }

	// RVA: 0x1BB6F90 Offset: 0x1BB6F90 VA: 0x1BB6F90
	public static float EaseInQuint(float start, float end, float value) { }

	// RVA: 0x1BB6FB0 Offset: 0x1BB6FB0 VA: 0x1BB6FB0
	public static float EaseOutQuint(float start, float end, float value) { }

	// RVA: 0x1BB6FE0 Offset: 0x1BB6FE0 VA: 0x1BB6FE0
	public static float EaseInOutQuint(float start, float end, float value) { }

	// RVA: 0x1BB7048 Offset: 0x1BB7048 VA: 0x1BB7048
	public static float EaseInSine(float start, float end, float value) { }

	// RVA: 0x1BB70E0 Offset: 0x1BB70E0 VA: 0x1BB70E0
	public static float EaseOutSine(float start, float end, float value) { }

	// RVA: 0x1BB7174 Offset: 0x1BB7174 VA: 0x1BB7174
	public static float EaseInOutSine(float start, float end, float value) { }

	// RVA: 0x1BB7218 Offset: 0x1BB7218 VA: 0x1BB7218
	public static float EaseInExpo(float start, float end, float value) { }

	// RVA: 0x1BB72B0 Offset: 0x1BB72B0 VA: 0x1BB72B0
	public static float EaseOutExpo(float start, float end, float value) { }

	// RVA: 0x1BB7348 Offset: 0x1BB7348 VA: 0x1BB7348
	public static float EaseInOutExpo(float start, float end, float value) { }

	// RVA: 0x1BB7438 Offset: 0x1BB7438 VA: 0x1BB7438
	public static float EaseInCirc(float start, float end, float value) { }

	// RVA: 0x1BB74E4 Offset: 0x1BB74E4 VA: 0x1BB74E4
	public static float EaseOutCirc(float start, float end, float value) { }

	// RVA: 0x1BB7590 Offset: 0x1BB7590 VA: 0x1BB7590
	public static float EaseInOutCirc(float start, float end, float value) { }

	// RVA: 0x1BB7688 Offset: 0x1BB7688 VA: 0x1BB7688
	public static float EaseInBounce(float start, float end, float value) { }

	// RVA: 0x1BB76C4 Offset: 0x1BB76C4 VA: 0x1BB76C4
	public static float EaseOutBounce(float start, float end, float value) { }

	// RVA: 0x1BB7794 Offset: 0x1BB7794 VA: 0x1BB7794
	public static float EaseInOutBounce(float start, float end, float value) { }

	// RVA: 0x1BB7818 Offset: 0x1BB7818 VA: 0x1BB7818
	public static float EaseInBack(float start, float end, float value) { }

	// RVA: 0x1BB7848 Offset: 0x1BB7848 VA: 0x1BB7848
	public static float EaseOutBack(float start, float end, float value) { }

	// RVA: 0x1BB7888 Offset: 0x1BB7888 VA: 0x1BB7888
	public static float EaseInOutBack(float start, float end, float value) { }

	// RVA: 0x1BB790C Offset: 0x1BB790C VA: 0x1BB790C
	public static float EaseInElastic(float start, float end, float value) { }

	// RVA: 0x1BB79F4 Offset: 0x1BB79F4 VA: 0x1BB79F4
	public static float EaseOutElastic(float start, float end, float value) { }

	// RVA: 0x1BB7AD8 Offset: 0x1BB7AD8 VA: 0x1BB7AD8
	public static float EaseInOutElastic(float start, float end, float value) { }

	// RVA: 0x1BB7C3C Offset: 0x1BB7C3C VA: 0x1BB7C3C
	public static float LinearD(float start, float end, float value) { }

	// RVA: 0x1BB7C44 Offset: 0x1BB7C44 VA: 0x1BB7C44
	public static float EaseInQuadD(float start, float end, float value) { }

	// RVA: 0x1BB7C54 Offset: 0x1BB7C54 VA: 0x1BB7C54
	public static float EaseOutQuadD(float start, float end, float value) { }

	// RVA: 0x1BB7C70 Offset: 0x1BB7C70 VA: 0x1BB7C70
	public static float EaseInOutQuadD(float start, float end, float value) { }

	// RVA: 0x1BB7C98 Offset: 0x1BB7C98 VA: 0x1BB7C98
	public static float EaseInCubicD(float start, float end, float value) { }

	// RVA: 0x1BB7CB0 Offset: 0x1BB7CB0 VA: 0x1BB7CB0
	public static float EaseOutCubicD(float start, float end, float value) { }

	// RVA: 0x1BB7CD0 Offset: 0x1BB7CD0 VA: 0x1BB7CD0
	public static float EaseInOutCubicD(float start, float end, float value) { }

	// RVA: 0x1BB7D00 Offset: 0x1BB7D00 VA: 0x1BB7D00
	public static float EaseInQuartD(float start, float end, float value) { }

	// RVA: 0x1BB7D1C Offset: 0x1BB7D1C VA: 0x1BB7D1C
	public static float EaseOutQuartD(float start, float end, float value) { }

	// RVA: 0x1BB7D40 Offset: 0x1BB7D40 VA: 0x1BB7D40
	public static float EaseInOutQuartD(float start, float end, float value) { }

	// RVA: 0x1BB7D78 Offset: 0x1BB7D78 VA: 0x1BB7D78
	public static float EaseInQuintD(float start, float end, float value) { }

	// RVA: 0x1BB7D98 Offset: 0x1BB7D98 VA: 0x1BB7D98
	public static float EaseOutQuintD(float start, float end, float value) { }

	// RVA: 0x1BB7DC0 Offset: 0x1BB7DC0 VA: 0x1BB7DC0
	public static float EaseInOutQuintD(float start, float end, float value) { }

	// RVA: 0x1BB7DF8 Offset: 0x1BB7DF8 VA: 0x1BB7DF8
	public static float EaseInSineD(float start, float end, float value) { }

	// RVA: 0x1BB7E9C Offset: 0x1BB7E9C VA: 0x1BB7E9C
	public static float EaseOutSineD(float start, float end, float value) { }

	// RVA: 0x1BB7F30 Offset: 0x1BB7F30 VA: 0x1BB7F30
	public static float EaseInOutSineD(float start, float end, float value) { }

	// RVA: 0x1BB7FCC Offset: 0x1BB7FCC VA: 0x1BB7FCC
	public static float EaseInExpoD(float start, float end, float value) { }

	// RVA: 0x1BB806C Offset: 0x1BB806C VA: 0x1BB806C
	public static float EaseOutExpoD(float start, float end, float value) { }

	// RVA: 0x1BB810C Offset: 0x1BB810C VA: 0x1BB810C
	public static float EaseInOutExpoD(float start, float end, float value) { }

	// RVA: 0x1BB81FC Offset: 0x1BB81FC VA: 0x1BB81FC
	public static float EaseInCircD(float start, float end, float value) { }

	// RVA: 0x1BB82A0 Offset: 0x1BB82A0 VA: 0x1BB82A0
	public static float EaseOutCircD(float start, float end, float value) { }

	// RVA: 0x1BB834C Offset: 0x1BB834C VA: 0x1BB834C
	public static float EaseInOutCircD(float start, float end, float value) { }

	// RVA: 0x1BB8444 Offset: 0x1BB8444 VA: 0x1BB8444
	public static float EaseInBounceD(float start, float end, float value) { }

	// RVA: 0x1BB84B8 Offset: 0x1BB84B8 VA: 0x1BB84B8
	public static float EaseOutBounceD(float start, float end, float value) { }

	// RVA: 0x1BB8524 Offset: 0x1BB8524 VA: 0x1BB8524
	public static float EaseInOutBounceD(float start, float end, float value) { }

	// RVA: 0x1BB85B8 Offset: 0x1BB85B8 VA: 0x1BB85B8
	public static float EaseInBackD(float start, float end, float value) { }

	// RVA: 0x1BB85E8 Offset: 0x1BB85E8 VA: 0x1BB85E8
	public static float EaseOutBackD(float start, float end, float value) { }

	// RVA: 0x1BB8624 Offset: 0x1BB8624 VA: 0x1BB8624
	public static float EaseInOutBackD(float start, float end, float value) { }

	// RVA: 0x1BB86B4 Offset: 0x1BB86B4 VA: 0x1BB86B4
	public static float EaseInElasticD(float start, float end, float value) { }

	// RVA: 0x1BB87BC Offset: 0x1BB87BC VA: 0x1BB87BC
	public static float EaseOutElasticD(float start, float end, float value) { }

	// RVA: 0x1BB88C0 Offset: 0x1BB88C0 VA: 0x1BB88C0
	public static float EaseInOutElasticD(float start, float end, float value) { }

	// RVA: 0x1BB8A58 Offset: 0x1BB8A58 VA: 0x1BB8A58
	public static float SpringD(float start, float end, float value) { }

	// RVA: 0x1BB8C0C Offset: 0x1BB8C0C VA: 0x1BB8C0C
	public static float CustomCurve(float start, float end, float value) { }

	// RVA: 0x1BB8CC8 Offset: 0x1BB8CC8 VA: 0x1BB8CC8
	public static EasingFunction.Function GetEasingFunction(EasingFunction.Ease easingFunction) { }

	// RVA: 0x1BB9898 Offset: 0x1BB9898 VA: 0x1BB9898
	public static EasingFunction.Function GetEasingFunctionDerivative(EasingFunction.Ease easingFunction) { }
}

// Namespace: 
public enum EasingFunction.Ease // TypeDefIndex: 12450
{
	// Fields
	public int value__; // 0x0
	public const EasingFunction.Ease EaseInQuad = 0;
	public const EasingFunction.Ease EaseOutQuad = 1;
	public const EasingFunction.Ease EaseInOutQuad = 2;
	public const EasingFunction.Ease EaseInCubic = 3;
	public const EasingFunction.Ease EaseOutCubic = 4;
	public const EasingFunction.Ease EaseInOutCubic = 5;
	public const EasingFunction.Ease EaseInQuart = 6;
	public const EasingFunction.Ease EaseOutQuart = 7;
	public const EasingFunction.Ease EaseInOutQuart = 8;
	public const EasingFunction.Ease EaseInQuint = 9;
	public const EasingFunction.Ease EaseOutQuint = 10;
	public const EasingFunction.Ease EaseInOutQuint = 11;
	public const EasingFunction.Ease EaseInSine = 12;
	public const EasingFunction.Ease EaseOutSine = 13;
	public const EasingFunction.Ease EaseInOutSine = 14;
	public const EasingFunction.Ease EaseInExpo = 15;
	public const EasingFunction.Ease EaseOutExpo = 16;
	public const EasingFunction.Ease EaseInOutExpo = 17;
	public const EasingFunction.Ease EaseInCirc = 18;
	public const EasingFunction.Ease EaseOutCirc = 19;
	public const EasingFunction.Ease EaseInOutCirc = 20;
	public const EasingFunction.Ease Linear = 21;
