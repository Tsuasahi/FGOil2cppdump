	public string getEndTimeStr() { }

	// RVA: 0x1C37074 Offset: 0x1C37074 VA: 0x1C37074
	private static void .cctor() { }
}

// Namespace: 
public enum EventServantEntity.TYPE // TypeDefIndex: 6964
{
	// Fields
	public int value__; // 0x0
	public const EventServantEntity.TYPE NONE = 0;
	public const EventServantEntity.TYPE JOIN = 1;
	public const EventServantEntity.TYPE COND_JOIN = 2;
}

// Namespace: 
public class EventServantFatigueEntity : DataEntityBase<string> // TypeDefIndex: 6965
{
	// Fields
	public int eventId; // 0x10
	public int svtId; // 0x14
	public int fatigueTime; // 0x18

	// Methods

	// RVA: 0x1C37270 Offset: 0x1C37270 VA: 0x1C37270
	public void .ctor() { }

	// RVA: 0x1C372C0 Offset: 0x1C372C0 VA: 0x1C372C0 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C372D0 Offset: 0x1C372D0 VA: 0x1C372D0
	public static string CreatePK(int eventId, int svtId) { }
}

// Namespace: 
public class EventServantFatigueMaster : DataMasterBase<EventServantFatigueMaster, EventServantFatigueEntity, string> // TypeDefIndex: 6966
{
	// Methods

	// RVA: 0x1C40E5C Offset: 0x1C40E5C VA: 0x1C40E5C
	public void .ctor() { }

	// RVA: 0x1C40EB0 Offset: 0x1C40EB0 VA: 0x1C40EB0
	public EventServantFatigueEntity GetEntity(int eventId, int svtId) { }

	// RVA: 0x1C40F24 Offset: 0x1C40F24 VA: 0x1C40F24
	public bool TryGetEntity(out EventServantFatigueEntity entity, int eventId, int svtId) { }

	// RVA: 0x1C40FA8 Offset: 0x1C40FA8 VA: 0x1C40FA8
	public EventServantFatigueEntity[] GetEntities(int eventId) { }
}

// Namespace: 
public class EventServantMaster : DataMasterBase<EventServantMaster, EventServantEntity, string> // TypeDefIndex: 6967
{
	// Methods

	// RVA: 0x1C4118C Offset: 0x1C4118C VA: 0x1C4118C
	public void .ctor() { }

	// RVA: 0x1C411E0 Offset: 0x1C411E0 VA: 0x1C411E0
	public EventServantEntity GetEntity(int eventId, int svtId) { }

	// RVA: 0x1C41274 Offset: 0x1C41274 VA: 0x1C41274
	public bool TryGetEntity(out EventServantEntity entity, int eventId, int svtId) { }

	// RVA: 0x1C41318 Offset: 0x1C41318 VA: 0x1C41318
	public EventServantEntity getEntity(int svtId) { }

	// RVA: 0x1C41424 Offset: 0x1C41424 VA: 0x1C41424
	public EventServantEntity getEntity(int eventId, int svtId) { }

	// RVA: 0x1C41540 Offset: 0x1C41540 VA: 0x1C41540
	public EventServantEntity[] GetEntities(int svtId) { }
}

// Namespace: 
public class EventStatusEntity : DataEntityBase<string> // TypeDefIndex: 6968
{
	// Fields
	public int eventId; // 0x10
	public int statusId; // 0x14
	public int status; // 0x18

	// Methods

	// RVA: 0x1C44E50 Offset: 0x1C44E50 VA: 0x1C44E50
	public void .ctor() { }

	// RVA: 0x1C44EA0 Offset: 0x1C44EA0 VA: 0x1C44EA0 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C44EB0 Offset: 0x1C44EB0 VA: 0x1C44EB0
	public static string CreatePK(int eventId, int statusId) { }

	// RVA: 0x1C44EC0 Offset: 0x1C44EC0 VA: 0x1C44EC0
	public bool HasFlag(EventStatusEntity.EventTimeStatus flag) { }

	// RVA: 0x1C44ED0 Offset: 0x1C44ED0 VA: 0x1C44ED0
	public bool IsScenario() { }

	// RVA: 0x1C44EDC Offset: 0x1C44EDC VA: 0x1C44EDC
	public bool IsNight() { }

	// RVA: 0x1C44EE8 Offset: 0x1C44EE8 VA: 0x1C44EE8
	public int GetDay() { }
}

// Namespace: 
public enum EventStatusEntity.EventTimeStatusKind // TypeDefIndex: 6969
{
	// Fields
	public int value__; // 0x0
	public const EventStatusEntity.EventTimeStatusKind IS_SCENARIO = 0;
	public const EventStatusEntity.EventTimeStatusKind IS_NIGHT = 1;
	public const EventStatusEntity.EventTimeStatusKind DAY_1 = 2;
	public const EventStatusEntity.EventTimeStatusKind DAY_2 = 3;
	public const EventStatusEntity.EventTimeStatusKind DAY_3 = 4;
	public const EventStatusEntity.EventTimeStatusKind DAY_4 = 5;
	public const EventStatusEntity.EventTimeStatusKind DAY_5 = 6;
	public const EventStatusEntity.EventTimeStatusKind DAY_6 = 7;
	public const EventStatusEntity.EventTimeStatusKind DAY_7 = 8;
}

// Namespace: 
public enum EventStatusEntity.EventTimeStatus // TypeDefIndex: 6970
{
	// Fields
	public int value__; // 0x0
	public const EventStatusEntity.EventTimeStatus IS_SCENARIO = 1;
	public const EventStatusEntity.EventTimeStatus IS_NIGHT = 2;
	public const EventStatusEntity.EventTimeStatus DAY_1 = 4;
	public const EventStatusEntity.EventTimeStatus DAY_2 = 8;
	public const EventStatusEntity.EventTimeStatus DAY_3 = 16;
	public const EventStatusEntity.EventTimeStatus DAY_4 = 32;
	public const EventStatusEntity.EventTimeStatus DAY_5 = 64;
	public const EventStatusEntity.EventTimeStatus DAY_6 = 128;
	public const EventStatusEntity.EventTimeStatus DAY_7 = 256;
}

// Namespace: 
public class EventStatusMaster : DataMasterBase<EventStatusMaster, EventStatusEntity, string> // TypeDefIndex: 6971
{
	// Methods

	// RVA: 0x1C44F18 Offset: 0x1C44F18 VA: 0x1C44F18
	public void .ctor() { }

	// RVA: 0x1C44F6C Offset: 0x1C44F6C VA: 0x1C44F6C
	public EventStatusEntity GetEntity(int eventId, int statusId) { }

	// RVA: 0x1C44FE0 Offset: 0x1C44FE0 VA: 0x1C44FE0
	public bool TryGetEntity(out EventStatusEntity entity, int eventId, int statusId) { }

	// RVA: 0x1C45064 Offset: 0x1C45064 VA: 0x1C45064
	public EventStatusEntity getNowEntity(int eventId) { }
}

// Namespace: 
public class EventStatusQuestEntity : DataEntityBase<string> // TypeDefIndex: 6972
{
	// Fields
	public int eventId; // 0x10
	public int statusId; // 0x14
	public int priority; // 0x18
	public int questId; // 0x1C
	public Dictionary<string, object> script; // 0x20

	// Methods

	// RVA: 0x1C45210 Offset: 0x1C45210 VA: 0x1C45210
	public void .ctor() { }

	// RVA: 0x1C45260 Offset: 0x1C45260 VA: 0x1C45260 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C45274 Offset: 0x1C45274 VA: 0x1C45274
	public static string CreatePK(int eventId, int statusId, int priority, int questId) { }

	// RVA: 0x1C4528C Offset: 0x1C4528C VA: 0x1C4528C
	public int getPriority() { }
}

// Namespace: 
public class EventStatusQuestMaster : DataMasterBase<EventStatusQuestMaster, EventStatusQuestEntity, string> // TypeDefIndex: 6973
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC192C Offset: 0xCC192C VA: 0xCC192C
	private static Comparison<EventStatusQuestEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC193C Offset: 0xCC193C VA: 0xCC193C
	private static Predicate<EventStatusQuestEntity> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x1C4537C Offset: 0x1C4537C VA: 0x1C4537C
	public void .ctor() { }

	// RVA: 0x1C453D0 Offset: 0x1C453D0 VA: 0x1C453D0
	public EventStatusQuestEntity GetEntity(int eventId, int statusId, int priority, int questId) { }

	// RVA: 0x1C4545C Offset: 0x1C4545C VA: 0x1C4545C
	public bool TryGetEntity(out EventStatusQuestEntity entity, int eventId, int statusId, int priority, int questId) { }

	// RVA: 0x1C454F8 Offset: 0x1C454F8 VA: 0x1C454F8
	public List<EventStatusQuestEntity> getEntityFromId(int eventId, int statusId) { }

	// RVA: 0x1C456F0 Offset: 0x1C456F0 VA: 0x1C456F0
	public List<int> getMismatchQuestList(int eventId, int statusId) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37B1C Offset: 0xD37B1C VA: 0xD37B1C
	// RVA: 0x1C459D4 Offset: 0x1C459D4 VA: 0x1C459D4
	private static int <getEntityFromId>m__0(EventStatusQuestEntity a, EventStatusQuestEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37B2C Offset: 0xD37B2C VA: 0xD37B2C
	// RVA: 0x1C45A24 Offset: 0x1C45A24 VA: 0x1C45A24
	private static bool <getMismatchQuestList>m__1(EventStatusQuestEntity a) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEDF0 Offset: 0xCAEDF0 VA: 0xCAEDF0
private sealed class EventStatusQuestMaster.<getMismatchQuestList>c__AnonStorey0 // TypeDefIndex: 6974
{
	// Fields
	internal int maxPriority; // 0x10

	// Methods

	// RVA: 0x1C459CC Offset: 0x1C459CC VA: 0x1C459CC
	public void .ctor() { }

	// RVA: 0x1C45AC0 Offset: 0x1C45AC0 VA: 0x1C45AC0
	internal bool <>m__0(EventStatusQuestEntity a) { }
}

// Namespace: 
public class EventSuperBossEntity : DataEntityBase<string> // TypeDefIndex: 6975
{
	// Fields
	public int eventId; // 0x10
	public int id; // 0x14
	public long maxHp; // 0x18
	public int[] splitQuestIds; // 0x20
	public long[] splitHp; // 0x28
	public int iconId; // 0x30
	public int bossColor; // 0x34
	public long startedAt; // 0x38
	public long endedAt; // 0x40
	public Dictionary<string, object> script; // 0x48
	private static readonly string UI_START_QUEST_ID_KEY; // 0x0
	private static readonly string UI_START_QUEST_PHASE_KEY; // 0x8
	private static readonly string UI_END_QUEST_ID_KEY; // 0x10
	private static readonly string UI_END_QUEST_PHASE_KEY; // 0x18
	private static readonly string UI_HIDDEN; // 0x20

	// Methods

	// RVA: 0x1C45B08 Offset: 0x1C45B08 VA: 0x1C45B08
	public void .ctor() { }

	// RVA: 0x1C45B58 Offset: 0x1C45B58 VA: 0x1C45B58 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C45BC8 Offset: 0x1C45BC8 VA: 0x1C45BC8
	public static string CreatePK(int eventId, int id) { }

	// RVA: 0x1C45BD8 Offset: 0x1C45BD8 VA: 0x1C45BD8
	public Color GetBossColor() { }

	// RVA: 0x1C45C38 Offset: 0x1C45C38 VA: 0x1C45C38
	public int DamageProgressNum() { }

	// RVA: 0x1C45CE0 Offset: 0x1C45CE0 VA: 0x1C45CE0
	public UserSuperBossEntity GetUserSuperBossEntity() { }

	// RVA: 0x1C45EF0 Offset: 0x1C45EF0 VA: 0x1C45EF0
	public bool IsEncounted() { }

	// RVA: 0x1C46594 Offset: 0x1C46594 VA: 0x1C46594
	public bool IsCleard() { }

	// RVA: 0x1C4616C Offset: 0x1C4616C VA: 0x1C4616C
	public bool InUIDisplayPeriod() { }

	// RVA: 0x1C465D0 Offset: 0x1C465D0 VA: 0x1C465D0
	public bool IsHidden() { }

	// RVA: 0x1C466E0 Offset: 0x1C466E0 VA: 0x1C466E0
	private static void .cctor() { }
}

// Namespace: 
public class EventSuperBossMaster : DataMasterBase<EventSuperBossMaster, EventSuperBossEntity, string> // TypeDefIndex: 6976
{
	// Fields
	public static readonly string SAVE_KEY; // 0x0

	// Methods

	// RVA: 0x15FBEC4 Offset: 0x15FBEC4 VA: 0x15FBEC4
	public void .ctor() { }

	// RVA: 0x15FBF18 Offset: 0x15FBF18 VA: 0x15FBF18
	public EventSuperBossEntity GetEntity(int eventId, int id) { }

	// RVA: 0x15FBFAC Offset: 0x15FBFAC VA: 0x15FBFAC
	public bool TryGetEntity(out EventSuperBossEntity entity, int eventId, int id) { }

	// RVA: 0x15FC050 Offset: 0x15FC050 VA: 0x15FC050
	public List<EventSuperBossEntity> GetCurrentListByEventId(int eventId) { }

	// RVA: 0x15FC51C Offset: 0x15FC51C VA: 0x15FC51C
	public void DeleteContinueData() { }

	// RVA: 0x15FC768 Offset: 0x15FC768 VA: 0x15FC768
	private static void .cctor() { }
}

// Namespace: 
public class EventTowerEntity : DataEntityBase<string> // TypeDefIndex: 6977
{
	// Fields
	public int eventId; // 0x10
	public int towerId; // 0x14
	public string name; // 0x18
	public int topFloor; // 0x20
	public string floorLabel; // 0x28
	public int openEffectId; // 0x30
	public int flag; // 0x34

	// Methods

	// RVA: 0x15FF378 Offset: 0x15FF378 VA: 0x15FF378
	public void .ctor() { }

	// RVA: 0x15FF3C8 Offset: 0x15FF3C8 VA: 0x15FF3C8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x15FF3D8 Offset: 0x15FF3D8 VA: 0x15FF3D8
	public static string CreatePK(int eventId, int towerId) { }

	// RVA: 0x15FF3E8 Offset: 0x15FF3E8 VA: 0x15FF3E8
	public bool HasFlag(EventTowerEntity.Flag towerFlag) { }
}

// Namespace: 
public enum EventTowerEntity.Flag // TypeDefIndex: 6978
{
	// Fields
	public int value__; // 0x0
	public const EventTowerEntity.Flag HIDDEN_CLEAR_TOWER = 1;
	public const EventTowerEntity.Flag STAMP = 2;
}

// Namespace: 
public enum EventTowerEntity.EventTowerFlag // TypeDefIndex: 6979
{
	// Fields
	public int value__; // 0x0
	public const EventTowerEntity.EventTowerFlag HIDDEN_CLEAR_TOWER = 0;
	public const EventTowerEntity.EventTowerFlag STAMP = 1;
}

// Namespace: 
public class EventTowerMaster : DataMasterBase<EventTowerMaster, EventTowerEntity, string> // TypeDefIndex: 6980
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC194C Offset: 0xCC194C VA: 0xCC194C
	private static Comparison<EventTowerEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x16029D8 Offset: 0x16029D8 VA: 0x16029D8
	public void .ctor() { }

	// RVA: 0x1602A2C Offset: 0x1602A2C VA: 0x1602A2C
	public EventTowerEntity GetEntity(int eventId, int towerId) { }

	// RVA: 0x1602AA0 Offset: 0x1602AA0 VA: 0x1602AA0
	public bool TryGetEntity(out EventTowerEntity entity, int eventId, int towerId) { }

	// RVA: 0x1602B24 Offset: 0x1602B24 VA: 0x1602B24
	public EventTowerEntity[] GetDatas(int eventId) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37B3C Offset: 0xD37B3C VA: 0xD37B3C
	// RVA: 0x1602D3C Offset: 0x1602D3C VA: 0x1602D3C
	private static int <GetDatas>m__0(EventTowerEntity a, EventTowerEntity b) { }
}

// Namespace: 
public class EventTowerRewardEntity : DataEntityBase<string> // TypeDefIndex: 6981
{
	// Fields
	public int eventId; // 0x10
	public int towerId; // 0x14
	public int floor; // 0x18
	public int giftId; // 0x1C
	public int iconId; // 0x20
	public int presentMessageId; // 0x24
	public string boardMessage; // 0x28
	public int boardImageId; // 0x30

	// Methods

	// RVA: 0x1602DAC Offset: 0x1602DAC VA: 0x1602DAC
	public void .ctor() { }

	// RVA: 0x1602DFC Offset: 0x1602DFC VA: 0x1602DFC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1602E10 Offset: 0x1602E10 VA: 0x1602E10
	public static string CreatePK(int eventId, int towerId, int floor) { }
}

// Namespace: 
public class EventTowerRewardMaster : DataMasterBase<EventTowerRewardMaster, EventTowerRewardEntity, string> // TypeDefIndex: 6982
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC195C Offset: 0xCC195C VA: 0xCC195C
	private static Comparison<EventTowerRewardEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC196C Offset: 0xCC196C VA: 0xCC196C
	private static Comparison<EventTowerRewardEntity> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x1602E24 Offset: 0x1602E24 VA: 0x1602E24
	public void .ctor() { }

	// RVA: 0x1602E78 Offset: 0x1602E78 VA: 0x1602E78
	public EventTowerRewardEntity GetEntity(int eventId, int towerId, int floor) { }

	// RVA: 0x1602EFC Offset: 0x1602EFC VA: 0x1602EFC
	public bool TryGetEntity(out EventTowerRewardEntity entity, int eventId, int towerId, int floor) { }

	// RVA: 0x1602F88 Offset: 0x1602F88 VA: 0x1602F88
	public EventTowerRewardEntity[] GetTowerRewardEntityList(int eventId, int towerId) { }

	// RVA: 0x160091C Offset: 0x160091C VA: 0x160091C
	public EventTowerRewardEntity[] GetTowerRewardAllEntityList(int eventId) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37B4C Offset: 0xD37B4C VA: 0xD37B4C
	// RVA: 0x16031CC Offset: 0x16031CC VA: 0x16031CC
	private static int <GetTowerRewardEntityList>m__0(EventTowerRewardEntity a, EventTowerRewardEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37B5C Offset: 0xD37B5C VA: 0xD37B5C
	// RVA: 0x160320C Offset: 0x160320C VA: 0x160320C
	private static int <GetTowerRewardAllEntityList>m__1(EventTowerRewardEntity a, EventTowerRewardEntity b) { }
}

// Namespace: 
public class EventTutorialCondEntity : DataEntityBase<string> // TypeDefIndex: 6983
{
	// Fields
	public int eventId; // 0x10
	public int flagType; // 0x14
	public int num; // 0x18
	public int idx; // 0x1C
	public int condGroup; // 0x20
	public int condType; // 0x24
	public int[] condIds; // 0x28

	// Methods

	// RVA: 0x16053A8 Offset: 0x16053A8 VA: 0x16053A8
	public void .ctor() { }

	// RVA: 0x16053F8 Offset: 0x16053F8 VA: 0x16053F8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x160540C Offset: 0x160540C VA: 0x160540C
	public static string CreatePK(int eventId, int flagType, int num, int idx) { }
}

// Namespace: 
public class EventTutorialCondMaster : DataMasterBase<EventTutorialCondMaster, EventTutorialCondEntity, string> // TypeDefIndex: 6984
{
	// Methods

	// RVA: 0x1605424 Offset: 0x1605424 VA: 0x1605424
	public void .ctor() { }

	// RVA: 0x1605478 Offset: 0x1605478 VA: 0x1605478
	public EventTutorialCondEntity GetEntity(int eventId, int flagType, int num, int idx) { }

	// RVA: 0x1605504 Offset: 0x1605504 VA: 0x1605504
	public bool TryGetEntity(out EventTutorialCondEntity entity, int eventId, int flagType, int num, int idx) { }

	// RVA: 0x16055A0 Offset: 0x16055A0 VA: 0x16055A0
	public bool isEnableExtCondition(int evId, int flgType, int number, EventTutorialEntity baseEntity) { }

	// RVA: 0x16059C8 Offset: 0x16059C8 VA: 0x16059C8
	private bool isEnableCondition(int eventId, CondType.Kind condType, int[] condIds, int condValue) { }

	// RVA: 0x1605E10 Offset: 0x1605E10 VA: 0x1605E10
	private List<EventTutorialCondEntity> GetEventTutorialCondEntity(int evId, int flgType, int number) { }
}

// Namespace: 
public class EventTutorialEntity : DataEntityBase<string> // TypeDefIndex: 6985
{
	// Fields
	public int num; // 0x10
	public int eventId; // 0x14
	public int flagType; // 0x18
	public int openType; // 0x1C
	public string[] targetIds; // 0x20
	public int condType; // 0x28
	public int[] condIds; // 0x30
	public int condValue; // 0x38
	public int[] imageIds; // 0x40
	public EventTutorialEntity.TextTuto[] textJson; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xCC197C Offset: 0xCC197C VA: 0xCC197C
	private static Converter<string, int> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1606054 Offset: 0x1606054 VA: 0x1606054
	public void .ctor() { }

	// RVA: 0x16060A4 Offset: 0x16060A4 VA: 0x16060A4
	private int[][] getTargets() { }

	// RVA: 0x1606364 Offset: 0x1606364 VA: 0x1606364 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1606378 Offset: 0x1606378 VA: 0x1606378
	public static string CreatePK(int eventId, int flagType, int num) { }

	// RVA: 0x160638C Offset: 0x160638C VA: 0x160638C
	public EventTutorialMaster.OpenType GetOpenType() { }

	// RVA: 0x1606394 Offset: 0x1606394 VA: 0x1606394
	public bool isOpenCondition(int qId = 0, int ex1 = 0, int ex2 = 0, int ex3 = 0) { }

	// RVA: 0x1606464 Offset: 0x1606464 VA: 0x1606464
	public bool isEnableCondition(int qId = 0, int ex1 = 0, int ex2 = 0, int ex3 = 0) { }

	// RVA: 0x1606FC4 Offset: 0x1606FC4 VA: 0x1606FC4
	public void OpenTutorial(Action callback) { }

	// RVA: 0x1607EAC Offset: 0x1607EAC VA: 0x1607EAC
	public void OpenTutorialWithoutFlag(Action callback) { }

	// RVA: 0x16071F0 Offset: 0x16071F0 VA: 0x16071F0
	private void TextTutorialChain(int idx, Action callback) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37B6C Offset: 0xD37B6C VA: 0xD37B6C
	// RVA: 0x16080C0 Offset: 0x16080C0 VA: 0x16080C0
	private static int <getTargets>m__0(string input) { }
}

// Namespace: 
public class EventTutorialEntity.TextTuto // TypeDefIndex: 6986
{
	// Fields
	public EventTutorialEntity.RectData[] rects; // 0x10
	public int[] textPos; // 0x18
	public string text; // 0x20
	public string textAlign; // 0x28
	public int[] ptPos; // 0x30
	public int dlgFontSize; // 0x38
	public int dlgBgId; // 0x3C

	// Methods

	// RVA: 0x16084B0 Offset: 0x16084B0 VA: 0x16084B0
	public void .ctor() { }
}

// Namespace: 
public class EventTutorialEntity.RectData // TypeDefIndex: 6987
{
	// Fields
	public int x; // 0x10
	public int y; // 0x14
	public int w; // 0x18
	public int h; // 0x1C

	// Methods

	// RVA: 0x16084A8 Offset: 0x16084A8 VA: 0x16084A8
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEE00 Offset: 0xCAEE00 VA: 0xCAEE00
private sealed class EventTutorialEntity.<OpenTutorial>c__AnonStorey0 // TypeDefIndex: 6988
{
	// Fields
	internal Action callback; // 0x10
	internal EventTutorialEntity $this; // 0x18

	// Methods

	// RVA: 0x16071E8 Offset: 0x16071E8 VA: 0x16071E8
	public void .ctor() { }

	// RVA: 0x16080F4 Offset: 0x16080F4 VA: 0x16080F4
	internal void <>m__0() { }

	// RVA: 0x1608184 Offset: 0x1608184 VA: 0x1608184
	internal void <>m__1() { }

	// RVA: 0x1608278 Offset: 0x1608278 VA: 0x1608278
	internal void <>m__2(string result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEE10 Offset: 0xCAEE10 VA: 0xCAEE10
private sealed class EventTutorialEntity.<OpenTutorialWithoutFlag>c__AnonStorey1 // TypeDefIndex: 6989
{
	// Fields
	internal Action callback; // 0x10

	// Methods

	// RVA: 0x16080B0 Offset: 0x16080B0 VA: 0x16080B0
	public void .ctor() { }

	// RVA: 0x1608308 Offset: 0x1608308 VA: 0x1608308
	internal void <>m__0() { }

	// RVA: 0x1608398 Offset: 0x1608398 VA: 0x1608398
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEE20 Offset: 0xCAEE20 VA: 0xCAEE20
private sealed class EventTutorialEntity.<TextTutorialChain>c__AnonStorey2 // TypeDefIndex: 6990
{
	// Fields
	internal int idx; // 0x10
	internal Action callback; // 0x18
	internal EventTutorialEntity $this; // 0x20

	// Methods

	// RVA: 0x16080B8 Offset: 0x16080B8 VA: 0x16080B8
	public void .ctor() { }

	// RVA: 0x1608428 Offset: 0x1608428 VA: 0x1608428
	internal void <>m__0() { }

	// RVA: 0x1608468 Offset: 0x1608468 VA: 0x1608468
	internal void <>m__1() { }
}

// Namespace: 
public class EventTutorialMaster : DataMasterBase<EventTutorialMaster, EventTutorialEntity, string> // TypeDefIndex: 6991
{
	// Methods

	// RVA: 0x16084B8 Offset: 0x16084B8 VA: 0x16084B8
	public void .ctor() { }

	// RVA: 0x160850C Offset: 0x160850C VA: 0x160850C
	public EventTutorialEntity GetEntity(int eventId, int flagType, int num) { }

	// RVA: 0x1608590 Offset: 0x1608590 VA: 0x1608590
	public bool TryGetEntity(out EventTutorialEntity entity, int eventId, int flagType, int num) { }

	// RVA: 0x160861C Offset: 0x160861C VA: 0x160861C
	private void checkTutorial(int eventId, EventTutorialMaster.OpenType openKind, Action callbackAfter, int qId = 0, int bPhase = 0, int bWave = 0, int bTurn = 0) { }

	// RVA: 0x160898C Offset: 0x160898C VA: 0x160898C
	private void checkTutorial(List<int> checkEventIds, EventTutorialMaster.OpenType openKind, Action callbackAfter, int qId = 0, int bPhase = 0, int bWave = 0, int bTurn = 0) { }

	// RVA: 0x1608D34 Offset: 0x1608D34 VA: 0x1608D34
	private bool isTutorialDataExists(int eventId, EventTutorialMaster.OpenType openKind, int qId = 0, int bPhase = 0, int bWave = 0, int bTurn = 0, bool isChkEventId = False) { }

	// RVA: 0x1608EA0 Offset: 0x1608EA0 VA: 0x1608EA0
	private bool isTutorialAvailable(int eventId, EventTutorialMaster.OpenType openKind, int qId = 0, int bPhase = 0, int bWave = 0, int bTurn = 0) { }

	// RVA: 0x1608FF8 Offset: 0x1608FF8 VA: 0x1608FF8
	public static void CheckTutorial(int eventId, EventTutorialMaster.OpenType openKind, Action callbackAfter, int qId = 0, int bPhase = 0, int bWave = 0, int bTurn = 0) { }

	// RVA: 0x1609274 Offset: 0x1609274 VA: 0x1609274
	public static bool IsTutorialDataExists(int eventId, EventTutorialMaster.OpenType openKind, int qId = 0, int bPhase = 0, int bWave = 0, int bTurn = 0, bool isChkEventId = False) { }

	// RVA: 0x1609354 Offset: 0x1609354 VA: 0x1609354
	public static bool IsTutorialAvailable(int eventId, EventTutorialMaster.OpenType openKind, int qId = 0, int bPhase = 0, int bWave = 0, int bTurn = 0) { }

	// RVA: 0x160941C Offset: 0x160941C VA: 0x160941C
	public static void ShowTutorialWithoutCheck(int eventId, EventTutorialMaster.OpenType openKind, Action callback) { }

	// RVA: 0x16094BC Offset: 0x16094BC VA: 0x16094BC
	private void showTutorialWithoutCheck(int eventId, EventTutorialMaster.OpenType openKind, Action callback) { }

	// RVA: 0x1609818 Offset: 0x1609818 VA: 0x1609818
	public static void ShowTutorialWithoutCheck(int eventId, EventTutorialMaster.OpenType openKind, Action callback, int qId, int bPhase = 0, int bWave = 0, int bTurn = 0) { }

	// RVA: 0x16098F4 Offset: 0x16098F4 VA: 0x16098F4
	private void showTutorialWithoutCheck(int eventId, EventTutorialMaster.OpenType openKind, Action callbackAfter, int qId, int bPhase, int bWave, int bTurn) { }

	// RVA: 0x1609C64 Offset: 0x1609C64 VA: 0x1609C64
	public static void TutorialChainWithoutCheckStart(List<EventTutorialEntity> tutoList, Action callback) { }

	// RVA: 0x1609640 Offset: 0x1609640 VA: 0x1609640
	private void tutorialChainWithoutCheck(List<EventTutorialEntity> tutoList, int index, Action callback) { }

	// RVA: 0x160911C Offset: 0x160911C VA: 0x160911C
	private static List<int> GetOpenEventIds() { }

	// RVA: 0x1609D08 Offset: 0x1609D08 VA: 0x1609D08
	public static List<EventTutorialEntity> GetEventTutorialEntity(int eventId, EventTutorialMaster.OpenType openKind, string targetIds) { }

	// RVA: 0x1609DA8 Offset: 0x1609DA8 VA: 0x1609DA8
	private List<EventTutorialEntity> getEventTutorialEntity(int eventId, EventTutorialMaster.OpenType openKind, string targetIds) { }

	// RVA: 0x160A168 Offset: 0x160A168 VA: 0x160A168
	public static List<EventTutorialEntity> GetAvailableEventTutorialEntitys(int eventId, EventTutorialMaster.OpenType[] openKinds, int qId, int bPhase, int bWave, int bTurn) { }

	// RVA: 0x160A230 Offset: 0x160A230 VA: 0x160A230
	private List<EventTutorialEntity> getAvailableEventTutorialEntitys(int eventId, EventTutorialMaster.OpenType[] openKinds, int qId, int bPhase, int bWave, int bTurn) { }
}

// Namespace: 
public enum EventTutorialMaster.OpenType // TypeDefIndex: 6992
{
	// Fields
	public int value__; // 0x0
	public const EventTutorialMaster.OpenType ON_MAP = 1;
	public const EventTutorialMaster.OpenType ON_TERMINAL = 2;
	public const EventTutorialMaster.OpenType ON_SPOT = 3;
	public const EventTutorialMaster.OpenType ON_EVENT_SCENE = 4;
	public const EventTutorialMaster.OpenType BATTLE_START = 5;
	public const EventTutorialMaster.OpenType BATTLE_TURN = 6;
	public const EventTutorialMaster.OpenType BATTLE_RESULT = 7;
	public const EventTutorialMaster.OpenType BATTLE_RESULT_WIN = 8;
	public const EventTutorialMaster.OpenType BATTLE_RESULT_LOSE = 9;
	public const EventTutorialMaster.OpenType ON_EVENT_SHOP_HELP = 10;
	public const EventTutorialMaster.OpenType SVT_GET = 11;
	public const EventTutorialMaster.OpenType ON_EVENT_SCENE_HELP = 12;
	public const EventTutorialMaster.OpenType ON_QUEST_SELECT = 13;
	public const EventTutorialMaster.OpenType ON_EVENT_SHOP = 14;
	public const EventTutorialMaster.OpenType ON_SUPPORT_SELECT = 15;
	public const EventTutorialMaster.OpenType QUEST_START = 16;
	public const EventTutorialMaster.OpenType SHOP_BUY_AFTER = 17;
	public const EventTutorialMaster.OpenType ON_CALDEA_GATE = 18;
	public const EventTutorialMaster.OpenType ON_EVENT_POINT = 19;
	public const EventTutorialMaster.OpenType EVENT_TAB1 = 20;
	public const EventTutorialMaster.OpenType EVENT_TAB2 = 21;
	public const EventTutorialMaster.OpenType EVENT_TAB3 = 22;
	public const EventTutorialMaster.OpenType EVENT_TAB1_HELP = 23;
	public const EventTutorialMaster.OpenType EVENT_TAB2_HELP = 24;
	public const EventTutorialMaster.OpenType EVENT_TAB3_HELP = 25;
	public const EventTutorialMaster.OpenType BATTLE_GIMMICK = 26;
	public const EventTutorialMaster.OpenType BATTLE_WAVE = 27;
	public const EventTutorialMaster.OpenType EVENT_TAB1_EFFECT = 28;
	public const EventTutorialMaster.OpenType EVENT_TAB2_EFFECT = 29;
	public const EventTutorialMaster.OpenType EVENT_TAB3_EFFECT = 30;
	public const EventTutorialMaster.OpenType COSTUME = 31;
	public const EventTutorialMaster.OpenType OPEN_SORT_WINDOW = 32;
	public const EventTutorialMaster.OpenType ON_EVENT_FOLDER_HELP = 33;
	public const EventTutorialMaster.OpenType GACHA = 34;
	public const EventTutorialMaster.OpenType SVT_COMBINE = 35;
	public const EventTutorialMaster.OpenType SVT_LIMIT_UP = 36;
	public const EventTutorialMaster.OpenType SVT_SKILL_COMBINE = 37;
	public const EventTutorialMaster.OpenType SVT_EQUIP_COMBINE = 38;
	public const EventTutorialMaster.OpenType SVT_NP_COMBINE = 39;
	public const EventTutorialMaster.OpenType SVT_LVEXCEED = 40;
	public const EventTutorialMaster.OpenType OPEN_CHOICE_WINDOW = 41;
	public const EventTutorialMaster.OpenType OPEN_SMART_CHOICE_WINDOW = 42;
	public const EventTutorialMaster.OpenType EVENT_TAB4 = 43;
	public const EventTutorialMaster.OpenType EVENT_TAB4_HELP = 44;
	public const EventTutorialMaster.OpenType OPEN_QUEST_START = 45;
	public const EventTutorialMaster.OpenType BATTLE_BREAK_GAUGE_CHARACTER = 46;
	public const EventTutorialMaster.OpenType COMMAND_CODE = 47;
	public const EventTutorialMaster.OpenType SUPPORT_SETTING = 48;
	public const EventTutorialMaster.OpenType ON_FOLLOW = 49;
	public const EventTutorialMaster.OpenType USER_SEARCH_SUCCESS = 50;
	public const EventTutorialMaster.OpenType ON_FRIENDSHIP = 51;
	public const EventTutorialMaster.OpenType ON_EVENT_POINT_EFFECT_VIEW = 52;
	public const EventTutorialMaster.OpenType NO_COST_AT_DEFEAT = 53;
	public const EventTutorialMaster.OpenType ON_SVT_LIST_EQUIP_SELECT = 54;
	public const EventTutorialMaster.OpenType ON_SVT_STORAGE_EQUIP_SELECT = 55;
	public const EventTutorialMaster.OpenType ON_SVT_SELL_EQUIP_SELECT = 56;
	public const EventTutorialMaster.OpenType ON_SVT_EQUIP_COMBINE_BASE_SELECT = 57;
	public const EventTutorialMaster.OpenType ON_SVT_COMBINE_LIMIT_SPECIAL = 58;
	public const EventTutorialMaster.OpenType COMMAND_CARD_EXCEED = 59;
	public const EventTutorialMaster.OpenType ON_TERMINAL_WITH_SVT_COMBINE_LIMIT_SPECIAL = 60;
	public const EventTutorialMaster.OpenType MY_ROOM_SERVANTS_RECORDS_EPISODES_LIST = 61;
	public const EventTutorialMaster.OpenType WAR_BOARD_MAP = 62;
	public const EventTutorialMaster.OpenType WAR_BOARD_SETUP = 63;
	public const EventTutorialMaster.OpenType WAR_BOARD_START = 64;
	public const EventTutorialMaster.OpenType WAR_BOARD_MAP_SETUP = 65;
	public const EventTutorialMaster.OpenType LOGIN_BONUS_CLOSED = 66;
	public const EventTutorialMaster.OpenType OPEN_SPECIFIC_QUEST = 67;
	public const EventTutorialMaster.OpenType ON_PUSH_SVT_SELECT = 68;
	public const EventTutorialMaster.OpenType ON_NP_COMBINE_SVT_SELECT = 69;
	public const EventTutorialMaster.OpenType ON_APPEND_PASSIVE_SKILL_COMBINE = 70;
	public const EventTutorialMaster.OpenType ON_PARTY_CONFIRM = 71;
	public const EventTutorialMaster.OpenType BOX_GACHA_RESET = 72;
	public const EventTutorialMaster.OpenType ON_COIN_ROOM = 73;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEE30 Offset: 0xCAEE30 VA: 0xCAEE30
private sealed class EventTutorialMaster.<checkTutorial>c__AnonStorey0 // TypeDefIndex: 6993
{
	// Fields
	internal int eventId; // 0x10
	internal EventTutorialMaster.OpenType openKind; // 0x14
	internal Action callbackAfter; // 0x18
	internal int qId; // 0x20
	internal int bPhase; // 0x24
	internal int bWave; // 0x28
	internal int bTurn; // 0x2C
	internal EventTutorialMaster $this; // 0x30

	// Methods

	// RVA: 0x1608984 Offset: 0x1608984 VA: 0x1608984
	public void .ctor() { }

	// RVA: 0x160A4F0 Offset: 0x160A4F0 VA: 0x160A4F0
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEE40 Offset: 0xCAEE40 VA: 0xCAEE40
private sealed class EventTutorialMaster.<checkTutorial>c__AnonStorey1 // TypeDefIndex: 6994
{
	// Fields
	internal List<int> checkEventIds; // 0x10
	internal EventTutorialMaster.OpenType openKind; // 0x18
	internal Action callbackAfter; // 0x20
	internal int qId; // 0x28
	internal int bPhase; // 0x2C
	internal int bWave; // 0x30
	internal int bTurn; // 0x34
	internal EventTutorialMaster $this; // 0x38

	// Methods

	// RVA: 0x1608D2C Offset: 0x1608D2C VA: 0x1608D2C
	public void .ctor() { }

	// RVA: 0x160A56C Offset: 0x160A56C VA: 0x160A56C
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEE50 Offset: 0xCAEE50 VA: 0xCAEE50
private sealed class EventTutorialMaster.<showTutorialWithoutCheck>c__AnonStorey2 // TypeDefIndex: 6995
{
	// Fields
	internal int eventId; // 0x10
	internal EventTutorialMaster.OpenType openKind; // 0x14
	internal Action callbackAfter; // 0x18
	internal int qId; // 0x20
	internal int bPhase; // 0x24
	internal int bWave; // 0x28
	internal int bTurn; // 0x2C
	internal EventTutorialMaster $this; // 0x30

	// Methods

	// RVA: 0x1609C5C Offset: 0x1609C5C VA: 0x1609C5C
	public void .ctor() { }

	// RVA: 0x160A5EC Offset: 0x160A5EC VA: 0x160A5EC
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEE60 Offset: 0xCAEE60 VA: 0xCAEE60
private sealed class EventTutorialMaster.<tutorialChainWithoutCheck>c__AnonStorey3 // TypeDefIndex: 6996
{
	// Fields
	internal List<EventTutorialEntity> tutoList; // 0x10
	internal int index; // 0x18
	internal Action callback; // 0x20
	internal EventTutorialMaster $this; // 0x28

	// Methods

	// RVA: 0x1609D00 Offset: 0x1609D00 VA: 0x1609D00
	public void .ctor() { }

	// RVA: 0x160A668 Offset: 0x160A668 VA: 0x160A668
	internal void <>m__0() { }
}

// Namespace: 
public class EventUiEntity : DataEntityBase<string> // TypeDefIndex: 6997
{
	// Fields
	public int id; // 0x10
	public int priority; // 0x14
	public int eventId; // 0x18
	public int warId; // 0x1C
	public int mapId; // 0x20
	public int[] spotIds; // 0x28
	public int objectType; // 0x30
	public int objectId; // 0x34
	public int eventUiValueId; // 0x38
	public int x; // 0x3C
	public int y; // 0x40
	public int dispAreaFlag; // 0x44
	public static readonly float EVNET_UI_POSITION_MAGNIFICATION; // 0x0

	// Methods

	// RVA: 0x160A6B0 Offset: 0x160A6B0 VA: 0x160A6B0
	public void .ctor() { }

	// RVA: 0x160A724 Offset: 0x160A724 VA: 0x160A724 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x160A794 Offset: 0x160A794 VA: 0x160A794
	public static string CreatePK(int id, int priority) { }

	// RVA: 0x160A7A4 Offset: 0x160A7A4 VA: 0x160A7A4
	public EventUiEntity.ObjectType GetObjectType() { }

	// RVA: 0x160A7AC Offset: 0x160A7AC VA: 0x160A7AC
	public int GetEventId() { }

	// RVA: 0x160A7B4 Offset: 0x160A7B4 VA: 0x160A7B4
	public int GetWarId() { }

	// RVA: 0x160A7BC Offset: 0x160A7BC VA: 0x160A7BC
	public int GetMapId() { }

	// RVA: 0x160A7C4 Offset: 0x160A7C4 VA: 0x160A7C4
	public bool IsDispArea(EventUiEntity.DispAreaType type) { }

	// RVA: 0x160A7D4 Offset: 0x160A7D4 VA: 0x160A7D4
	public bool IsDispEventUIForSpot(int spotId) { }

	// RVA: 0x160A878 Offset: 0x160A878 VA: 0x160A878
	private static void .cctor() { }
}

// Namespace: 
public enum EventUiEntity.ObjectType // TypeDefIndex: 6998
{
	// Fields
	public int value__; // 0x0
	public const EventUiEntity.ObjectType NONE = 1;
	public const EventUiEntity.ObjectType IMAGE = 2;
	public const EventUiEntity.ObjectType GAMEOBJECT = 3;
}

// Namespace: 
public enum EventUiEntity.DispAreaType // TypeDefIndex: 6999
{
	// Fields
	public int value__; // 0x0
	public const EventUiEntity.DispAreaType MAP = 1;
	public const EventUiEntity.DispAreaType EVENT_REWARD = 2;
	public const EventUiEntity.DispAreaType CALDEA_GATE = 4;
	public const EventUiEntity.DispAreaType SPOT = 8;
}

// Namespace: 
public class EventUiMaster : DataMasterBase<EventUiMaster, EventUiEntity, string> // TypeDefIndex: 7000
{
	// Methods

	// RVA: 0x160A8D0 Offset: 0x160A8D0 VA: 0x160A8D0
	public void .ctor() { }

	// RVA: 0x160A924 Offset: 0x160A924 VA: 0x160A924
	public EventUiEntity GetEntity(int id, int priority) { }

	// RVA: 0x160A9B8 Offset: 0x160A9B8 VA: 0x160A9B8
	public bool TryGetEntity(out EventUiEntity entity, int id, int priority) { }

	// RVA: 0x160AA5C Offset: 0x160AA5C VA: 0x160AA5C
	public EventUiEntity[] getList(int event_id, int war_id, int map_id) { }

	// RVA: 0x160ABF8 Offset: 0x160ABF8 VA: 0x160ABF8
	public EventUiEntity[] getDispList(int event_id, int war_id, int map_id) { }

	// RVA: 0x160B378 Offset: 0x160B378 VA: 0x160B378
	public bool IsDispEventUIForSpot(int event_id, int war_id, int map_id, int spotId) { }

	// RVA: 0x160B418 Offset: 0x160B418 VA: 0x160B418
	public EventUiEntity getEntity(int eventId, int priority = 1) { }
}

// Namespace: 
public class EventUiReleaseEntity : DataEntityBase<string> // TypeDefIndex: 7001
{
	// Fields
	public int eventUiId; // 0x10
	public int priority; // 0x14
	public int idx; // 0x18
	public int condGroup; // 0x1C
	public int condType; // 0x20
	public int condTargetId; // 0x24
	public int condNum; // 0x28

	// Methods

	// RVA: 0x160B52C Offset: 0x160B52C VA: 0x160B52C
	public void .ctor() { }
