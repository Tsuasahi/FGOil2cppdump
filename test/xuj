	[DebuggerBrowsableAttribute] // RVA: 0xC7B088 Offset: 0xC7B088 VA: 0xC7B088
	private bool <IsOpened>k__BackingField; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC7B0C4 Offset: 0xC7B0C4 VA: 0xC7B0C4
	[DebuggerBrowsableAttribute] // RVA: 0xC7B0C4 Offset: 0xC7B0C4 VA: 0xC7B0C4
	private bool <HasEnemyParts>k__BackingField; // 0x39
	[CompilerGeneratedAttribute] // RVA: 0xC7B100 Offset: 0xC7B100 VA: 0xC7B100
	[DebuggerBrowsableAttribute] // RVA: 0xC7B100 Offset: 0xC7B100 VA: 0xC7B100
	private bool <IsScannable>k__BackingField; // 0x3A

	// Properties
	public int HIndex { get; set; }
	public int VIndex { get; set; }
	public int PanelId { get; set; }
	public Vector3 LocalPosition { get; set; }
	public int SpotId { get; set; }
	public bool HasSpot { get; }
	public int CommonReleaseId { get; set; }
	public bool HasReleaseCond { get; }
	public SubmarineMapPanelComponent Component { get; set; }
	public bool IsOpened { get; set; }
	public bool HasEnemyParts { get; set; }
	public bool IsScannable { get; set; }
	public bool IsEnemyVisible { get; }

	// Methods

	// RVA: 0x1179F5C Offset: 0x1179F5C VA: 0x1179F5C
	public void .ctor(EventPanelMapDetailEntity panelDetail) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD24A8 Offset: 0xCD24A8 VA: 0xCD24A8
	// RVA: 0x117A03C Offset: 0x117A03C VA: 0x117A03C
	public int get_HIndex() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD24B8 Offset: 0xCD24B8 VA: 0xCD24B8
	// RVA: 0x117A01C Offset: 0x117A01C VA: 0x117A01C
	public void set_HIndex(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD24C8 Offset: 0xCD24C8 VA: 0xCD24C8
	// RVA: 0x117A044 Offset: 0x117A044 VA: 0x117A044
	public int get_VIndex() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD24D8 Offset: 0xCD24D8 VA: 0xCD24D8
	// RVA: 0x117A024 Offset: 0x117A024 VA: 0x117A024
	public void set_VIndex(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD24E8 Offset: 0xCD24E8 VA: 0xCD24E8
	// RVA: 0x117A04C Offset: 0x117A04C VA: 0x117A04C
	public int get_PanelId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD24F8 Offset: 0xCD24F8 VA: 0xCD24F8
	// RVA: 0x117A02C Offset: 0x117A02C VA: 0x117A02C
	public void set_PanelId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2508 Offset: 0xCD2508 VA: 0xCD2508
	// RVA: 0x117A054 Offset: 0x117A054 VA: 0x117A054
	public Vector3 get_LocalPosition() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2518 Offset: 0xCD2518 VA: 0xCD2518
	// RVA: 0x117A060 Offset: 0x117A060 VA: 0x117A060
	public void set_LocalPosition(Vector3 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2528 Offset: 0xCD2528 VA: 0xCD2528
	// RVA: 0x1178D48 Offset: 0x1178D48 VA: 0x1178D48
	public int get_SpotId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2538 Offset: 0xCD2538 VA: 0xCD2538
	// RVA: 0x117A06C Offset: 0x117A06C VA: 0x117A06C
	public void set_SpotId(int value) { }

	// RVA: 0x117A074 Offset: 0x117A074 VA: 0x117A074
	public bool get_HasSpot() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2548 Offset: 0xCD2548 VA: 0xCD2548
	// RVA: 0x117A084 Offset: 0x117A084 VA: 0x117A084
	public int get_CommonReleaseId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2558 Offset: 0xCD2558 VA: 0xCD2558
	// RVA: 0x117A034 Offset: 0x117A034 VA: 0x117A034
	public void set_CommonReleaseId(int value) { }

	// RVA: 0x117A08C Offset: 0x117A08C VA: 0x117A08C
	public bool get_HasReleaseCond() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2568 Offset: 0xCD2568 VA: 0xCD2568
	// RVA: 0x117A09C Offset: 0x117A09C VA: 0x117A09C
	public SubmarineMapPanelComponent get_Component() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2578 Offset: 0xCD2578 VA: 0xCD2578
	// RVA: 0x117A0A4 Offset: 0x117A0A4 VA: 0x117A0A4
	private void set_Component(SubmarineMapPanelComponent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2588 Offset: 0xCD2588 VA: 0xCD2588
	// RVA: 0x117A0AC Offset: 0x117A0AC VA: 0x117A0AC
	public bool get_IsOpened() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2598 Offset: 0xCD2598 VA: 0xCD2598
	// RVA: 0x1179FF8 Offset: 0x1179FF8 VA: 0x1179FF8
	public void set_IsOpened(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD25A8 Offset: 0xCD25A8 VA: 0xCD25A8
	// RVA: 0x117A0B4 Offset: 0x117A0B4 VA: 0x117A0B4
	public bool get_HasEnemyParts() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD25B8 Offset: 0xCD25B8 VA: 0xCD25B8
	// RVA: 0x117A004 Offset: 0x117A004 VA: 0x117A004
	public void set_HasEnemyParts(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD25C8 Offset: 0xCD25C8 VA: 0xCD25C8
	// RVA: 0x117A0BC Offset: 0x117A0BC VA: 0x117A0BC
	public bool get_IsScannable() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD25D8 Offset: 0xCD25D8 VA: 0xCD25D8
	// RVA: 0x117A010 Offset: 0x117A010 VA: 0x117A010
	public void set_IsScannable(bool value) { }

	// RVA: 0x117A0C4 Offset: 0x117A0C4 VA: 0x117A0C4
	public bool get_IsEnemyVisible() { }

	// RVA: 0x117A0E4 Offset: 0x117A0E4 VA: 0x117A0E4
	public void SetComponent(SubmarineMapPanelComponent component) { }

	// RVA: 0x117A0EC Offset: 0x117A0EC VA: 0x117A0EC
	public void SetPanelClickAction(Action<SubmarineMapPanelData> clickAction) { }

	// RVA: 0x117A1FC Offset: 0x117A1FC VA: 0x117A1FC
	public void UpdatePanelDisplay() { }

	// RVA: 0x117A2A0 Offset: 0x117A2A0 VA: 0x117A2A0
	public void OpenPanel() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45784 Offset: 0xC45784 VA: 0xC45784
private sealed class SubmarineMapPanelData.<SetPanelClickAction>c__AnonStorey0 // TypeDefIndex: 10949
{
	// Fields
	internal Action<SubmarineMapPanelData> clickAction; // 0x10
	internal SubmarineMapPanelData $this; // 0x18

	// Methods

	// RVA: 0x117A1F4 Offset: 0x117A1F4 VA: 0x117A1F4
	public void .ctor() { }

	// RVA: 0x117A340 Offset: 0x117A340 VA: 0x117A340
	internal void <>m__0() { }
}

// Namespace: 
public class SubmarinePanelPositionCalculator // TypeDefIndex: 10950
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC7B13C Offset: 0xC7B13C VA: 0xC7B13C
	[DebuggerBrowsableAttribute] // RVA: 0xC7B13C Offset: 0xC7B13C VA: 0xC7B13C
	private Vector2 <PanelUnitSize>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC7B178 Offset: 0xC7B178 VA: 0xC7B178
	[DebuggerBrowsableAttribute] // RVA: 0xC7B178 Offset: 0xC7B178 VA: 0xC7B178
	private int <HorizontalPanelNum>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC7B1B4 Offset: 0xC7B1B4 VA: 0xC7B1B4
	[DebuggerBrowsableAttribute] // RVA: 0xC7B1B4 Offset: 0xC7B1B4 VA: 0xC7B1B4
	private int <VerticalPanelNum>k__BackingField; // 0x1C
	[CompilerGeneratedAttribute] // RVA: 0xC7B1F0 Offset: 0xC7B1F0 VA: 0xC7B1F0
	[DebuggerBrowsableAttribute] // RVA: 0xC7B1F0 Offset: 0xC7B1F0 VA: 0xC7B1F0
	private float <OffsetX>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC7B22C Offset: 0xC7B22C VA: 0xC7B22C
	[DebuggerBrowsableAttribute] // RVA: 0xC7B22C Offset: 0xC7B22C VA: 0xC7B22C
	private float <OffsetY>k__BackingField; // 0x24

	// Properties
	public Vector2 PanelUnitSize { get; set; }
	public int PanelUnitSizeX { get; }
	public int PanelUnitSizeY { get; }
	public int HorizontalPanelNum { get; set; }
	public int VerticalPanelNum { get; set; }
	public int TotalPanelNum { get; }
	public float OffsetX { get; set; }
	public float OffsetY { get; set; }
	public Vector3 LeftBottomEdgePos { get; }
	public Vector3 RightTopEdgePos { get; }

	// Methods

	// RVA: 0x117A9F8 Offset: 0x117A9F8 VA: 0x117A9F8
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD25E8 Offset: 0xCD25E8 VA: 0xCD25E8
	// RVA: 0x117AA00 Offset: 0x117AA00 VA: 0x117AA00
	public Vector2 get_PanelUnitSize() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD25F8 Offset: 0xCD25F8 VA: 0xCD25F8
	// RVA: 0x117AA08 Offset: 0x117AA08 VA: 0x117AA08
	public void set_PanelUnitSize(Vector2 value) { }

	// RVA: 0x117AA10 Offset: 0x117AA10 VA: 0x117AA10
	public int get_PanelUnitSizeX() { }

	// RVA: 0x117AA1C Offset: 0x117AA1C VA: 0x117AA1C
	public int get_PanelUnitSizeY() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2608 Offset: 0xCD2608 VA: 0xCD2608
	// RVA: 0x117AA28 Offset: 0x117AA28 VA: 0x117AA28
	public int get_HorizontalPanelNum() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2618 Offset: 0xCD2618 VA: 0xCD2618
	// RVA: 0x117AA30 Offset: 0x117AA30 VA: 0x117AA30
	public void set_HorizontalPanelNum(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2628 Offset: 0xCD2628 VA: 0xCD2628
	// RVA: 0x117AA38 Offset: 0x117AA38 VA: 0x117AA38
	public int get_VerticalPanelNum() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2638 Offset: 0xCD2638 VA: 0xCD2638
	// RVA: 0x117AA40 Offset: 0x117AA40 VA: 0x117AA40
	public void set_VerticalPanelNum(int value) { }

	// RVA: 0x117AA48 Offset: 0x117AA48 VA: 0x117AA48
	public int get_TotalPanelNum() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2648 Offset: 0xCD2648 VA: 0xCD2648
	// RVA: 0x117AA54 Offset: 0x117AA54 VA: 0x117AA54
	public float get_OffsetX() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2658 Offset: 0xCD2658 VA: 0xCD2658
	// RVA: 0x117AA5C Offset: 0x117AA5C VA: 0x117AA5C
	private void set_OffsetX(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2668 Offset: 0xCD2668 VA: 0xCD2668
	// RVA: 0x117AA64 Offset: 0x117AA64 VA: 0x117AA64
	public float get_OffsetY() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2678 Offset: 0xCD2678 VA: 0xCD2678
	// RVA: 0x117AA6C Offset: 0x117AA6C VA: 0x117AA6C
	private void set_OffsetY(float value) { }

	// RVA: 0x117AA74 Offset: 0x117AA74 VA: 0x117AA74
	public void LoadSettings(SubmarineSettingsManager settings) { }

	// RVA: 0x117AAF0 Offset: 0x117AAF0 VA: 0x117AAF0
	public Vector3 get_LeftBottomEdgePos() { }

	// RVA: 0x117AC04 Offset: 0x117AC04 VA: 0x117AC04
	public Vector3 get_RightTopEdgePos() { }

	// RVA: 0x117AB88 Offset: 0x117AB88 VA: 0x117AB88
	public Vector3 GetPositionByIndices(int hIndex, int vIndex) { }
}

// Namespace: 
public class SubmarineQuestSaveInfo // TypeDefIndex: 10951
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC7B268 Offset: 0xC7B268 VA: 0xC7B268
	[DebuggerBrowsableAttribute] // RVA: 0xC7B268 Offset: 0xC7B268 VA: 0xC7B268
	private int <QuestId>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC7B2A4 Offset: 0xC7B2A4 VA: 0xC7B2A4
	[DebuggerBrowsableAttribute] // RVA: 0xC7B2A4 Offset: 0xC7B2A4 VA: 0xC7B2A4
	private int <PhaseCnt>k__BackingField; // 0x14
	[CompilerGeneratedAttribute] // RVA: 0xC7B2E0 Offset: 0xC7B2E0 VA: 0xC7B2E0
	[DebuggerBrowsableAttribute] // RVA: 0xC7B2E0 Offset: 0xC7B2E0 VA: 0xC7B2E0
	private bool <IsQuestClear>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC7B31C Offset: 0xC7B31C VA: 0xC7B31C
	[DebuggerBrowsableAttribute] // RVA: 0xC7B31C Offset: 0xC7B31C VA: 0xC7B31C
	private bool <IsQuestPhaseClear>k__BackingField; // 0x19

	// Properties
	public int QuestId { get; set; }
	public int PhaseCnt { get; set; }
	public bool IsQuestClear { get; set; }
	public bool IsQuestPhaseClear { get; set; }
	public int BeforeClearQuestId { get; }

	// Methods

	// RVA: 0x117ACA0 Offset: 0x117ACA0 VA: 0x117ACA0
	public void .ctor(int questId, int phaseCnt, bool isQuestClear, bool isQuestPhaseClear) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2688 Offset: 0xCD2688 VA: 0xCD2688
	// RVA: 0x117AD20 Offset: 0x117AD20 VA: 0x117AD20
	public int get_QuestId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2698 Offset: 0xCD2698 VA: 0xCD2698
	// RVA: 0x117ACF8 Offset: 0x117ACF8 VA: 0x117ACF8
	private void set_QuestId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD26A8 Offset: 0xCD26A8 VA: 0xCD26A8
	// RVA: 0x117AD28 Offset: 0x117AD28 VA: 0x117AD28
	public int get_PhaseCnt() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD26B8 Offset: 0xCD26B8 VA: 0xCD26B8
	// RVA: 0x117AD00 Offset: 0x117AD00 VA: 0x117AD00
	private void set_PhaseCnt(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD26C8 Offset: 0xCD26C8 VA: 0xCD26C8
	// RVA: 0x117AD30 Offset: 0x117AD30 VA: 0x117AD30
	public bool get_IsQuestClear() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD26D8 Offset: 0xCD26D8 VA: 0xCD26D8
	// RVA: 0x117AD08 Offset: 0x117AD08 VA: 0x117AD08
	private void set_IsQuestClear(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD26E8 Offset: 0xCD26E8 VA: 0xCD26E8
	// RVA: 0x117AD38 Offset: 0x117AD38 VA: 0x117AD38
	public bool get_IsQuestPhaseClear() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD26F8 Offset: 0xCD26F8 VA: 0xCD26F8
	// RVA: 0x117AD14 Offset: 0x117AD14 VA: 0x117AD14
	private void set_IsQuestPhaseClear(bool value) { }

	// RVA: 0x1178BEC Offset: 0x1178BEC VA: 0x1178BEC
	public int get_BeforeClearQuestId() { }

	// RVA: 0x117AD40 Offset: 0x117AD40 VA: 0x117AD40
	public string GetSaveValue() { }

	// RVA: 0x117B0B4 Offset: 0x117B0B4 VA: 0x117B0B4
	private static SubmarineQuestSaveInfo CreateDefault() { }

	// RVA: 0x117B11C Offset: 0x117B11C VA: 0x117B11C
	public static SubmarineQuestSaveInfo CreateBySaveValue(string value) { }
}

// Namespace: 
public class SubmarineSaveParamsManager // TypeDefIndex: 10952
{
	// Fields
	private const string SAVEKEY_SubmarineMapBeforeQuestInfo = "SubmarineMapBeforeQuestInfo";
	private const string SAVEKEY_SubmarineUnreleasedScan = "SubmarineUnreleasedScan";

	// Methods

	// RVA: 0x117B738 Offset: 0x117B738 VA: 0x117B738
	public void .ctor() { }

	// RVA: 0x117B740 Offset: 0x117B740 VA: 0x117B740
	public static void SaveClearQuestInfo(int questId, int phaseCnt, bool isQuestClear, bool isQuestPhaseClear) { }

	// RVA: 0x117B800 Offset: 0x117B800 VA: 0x117B800
	public static SubmarineQuestSaveInfo LoadBeforeQuestInfo() { }

	// RVA: 0x117B850 Offset: 0x117B850 VA: 0x117B850
	public static void DeleteSavedQuestInfo() { }

	// RVA: 0x117B89C Offset: 0x117B89C VA: 0x117B89C
	public static void SaveUnreleasedScanInfo(int eventId, int[] scanIds) { }

	// RVA: 0x117BB44 Offset: 0x117BB44 VA: 0x117BB44
	public static SubmarineUnreleasedScanSaveInfo LoadUnreleasedScanInfo(int eventId) { }

	// RVA: 0x117BE54 Offset: 0x117BE54 VA: 0x117BE54
	public static void DeleteUnreleasedScanInfo() { }
}

// Namespace: 
public class SubmarineScanEvent // TypeDefIndex: 10953
{
	// Fields
	public static readonly int NO_DIRECTION; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC7B358 Offset: 0xC7B358 VA: 0xC7B358
	[DebuggerBrowsableAttribute] // RVA: 0xC7B358 Offset: 0xC7B358 VA: 0xC7B358
	private int <HIndex>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC7B394 Offset: 0xC7B394 VA: 0xC7B394
	[DebuggerBrowsableAttribute] // RVA: 0xC7B394 Offset: 0xC7B394 VA: 0xC7B394
	private int <VIndex>k__BackingField; // 0x14
	[CompilerGeneratedAttribute] // RVA: 0xC7B3D0 Offset: 0xC7B3D0 VA: 0xC7B3D0
	[DebuggerBrowsableAttribute] // RVA: 0xC7B3D0 Offset: 0xC7B3D0 VA: 0xC7B3D0
	private bool <IsAlreadyOpened>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC7B40C Offset: 0xC7B40C VA: 0xC7B40C
	[DebuggerBrowsableAttribute] // RVA: 0xC7B40C Offset: 0xC7B40C VA: 0xC7B40C
	private bool <HasEnemyParts>k__BackingField; // 0x19
	[CompilerGeneratedAttribute] // RVA: 0xC7B448 Offset: 0xC7B448 VA: 0xC7B448
	[DebuggerBrowsableAttribute] // RVA: 0xC7B448 Offset: 0xC7B448 VA: 0xC7B448
	private int <Chain>k__BackingField; // 0x1C
	[CompilerGeneratedAttribute] // RVA: 0xC7B484 Offset: 0xC7B484 VA: 0xC7B484
	[DebuggerBrowsableAttribute] // RVA: 0xC7B484 Offset: 0xC7B484 VA: 0xC7B484
	private int <Direction>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC7B4C0 Offset: 0xC7B4C0 VA: 0xC7B4C0
	[DebuggerBrowsableAttribute] // RVA: 0xC7B4C0 Offset: 0xC7B4C0 VA: 0xC7B4C0
	private bool <IsOpened>k__BackingField; // 0x24
	[CompilerGeneratedAttribute] // RVA: 0xC7B4FC Offset: 0xC7B4FC VA: 0xC7B4FC
	[DebuggerBrowsableAttribute] // RVA: 0xC7B4FC Offset: 0xC7B4FC VA: 0xC7B4FC
	private bool <IsHitObstacle>k__BackingField; // 0x25
	[CompilerGeneratedAttribute] // RVA: 0xC7B538 Offset: 0xC7B538 VA: 0xC7B538
	[DebuggerBrowsableAttribute] // RVA: 0xC7B538 Offset: 0xC7B538 VA: 0xC7B538
	private bool <IsStopped>k__BackingField; // 0x26

	// Properties
	public int HIndex { get; set; }
	public int VIndex { get; set; }
	public bool IsAlreadyOpened { get; set; }
	public bool HasEnemyParts { get; set; }
	public int Chain { get; set; }
	public int Direction { get; set; }
	public bool IsOpened { get; set; }
	public bool IsHitObstacle { get; set; }
	public bool IsStopped { get; set; }

	// Methods

	// RVA: 0x117CC14 Offset: 0x117CC14 VA: 0x117CC14
	public void .ctor(SubmarineMapPanelData panelData, int chain, int direction, bool isOpened, bool isHitObstacle, bool isStopped) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2708 Offset: 0xCD2708 VA: 0xCD2708
	// RVA: 0x117CD4C Offset: 0x117CD4C VA: 0x117CD4C
	public int get_HIndex() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2718 Offset: 0xCD2718 VA: 0xCD2718
	// RVA: 0x117CCF0 Offset: 0x117CCF0 VA: 0x117CCF0
	private void set_HIndex(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2728 Offset: 0xCD2728 VA: 0xCD2728
	// RVA: 0x117CD54 Offset: 0x117CD54 VA: 0x117CD54
	public int get_VIndex() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2738 Offset: 0xCD2738 VA: 0xCD2738
	// RVA: 0x117CCF8 Offset: 0x117CCF8 VA: 0x117CCF8
	private void set_VIndex(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2748 Offset: 0xCD2748 VA: 0xCD2748
	// RVA: 0x117CD5C Offset: 0x117CD5C VA: 0x117CD5C
	public bool get_IsAlreadyOpened() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2758 Offset: 0xCD2758 VA: 0xCD2758
	// RVA: 0x117CD00 Offset: 0x117CD00 VA: 0x117CD00
	private void set_IsAlreadyOpened(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2768 Offset: 0xCD2768 VA: 0xCD2768
	// RVA: 0x117CD64 Offset: 0x117CD64 VA: 0x117CD64
	public bool get_HasEnemyParts() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2778 Offset: 0xCD2778 VA: 0xCD2778
	// RVA: 0x117CD0C Offset: 0x117CD0C VA: 0x117CD0C
	private void set_HasEnemyParts(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2788 Offset: 0xCD2788 VA: 0xCD2788
	// RVA: 0x1178D94 Offset: 0x1178D94 VA: 0x1178D94
	public int get_Chain() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2798 Offset: 0xCD2798 VA: 0xCD2798
	// RVA: 0x117CD18 Offset: 0x117CD18 VA: 0x117CD18
	private void set_Chain(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD27A8 Offset: 0xCD27A8 VA: 0xCD27A8
	// RVA: 0x117CD6C Offset: 0x117CD6C VA: 0x117CD6C
	public int get_Direction() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD27B8 Offset: 0xCD27B8 VA: 0xCD27B8
	// RVA: 0x117CD20 Offset: 0x117CD20 VA: 0x117CD20
	private void set_Direction(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD27C8 Offset: 0xCD27C8 VA: 0xCD27C8
	// RVA: 0x117CD74 Offset: 0x117CD74 VA: 0x117CD74
	public bool get_IsOpened() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD27D8 Offset: 0xCD27D8 VA: 0xCD27D8
	// RVA: 0x117CD28 Offset: 0x117CD28 VA: 0x117CD28
	private void set_IsOpened(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD27E8 Offset: 0xCD27E8 VA: 0xCD27E8
	// RVA: 0x117CD7C Offset: 0x117CD7C VA: 0x117CD7C
	public bool get_IsHitObstacle() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD27F8 Offset: 0xCD27F8 VA: 0xCD27F8
	// RVA: 0x117CD34 Offset: 0x117CD34 VA: 0x117CD34
	private void set_IsHitObstacle(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2808 Offset: 0xCD2808 VA: 0xCD2808
	// RVA: 0x117CD84 Offset: 0x117CD84 VA: 0x117CD84
	public bool get_IsStopped() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2818 Offset: 0xCD2818 VA: 0xCD2818
	// RVA: 0x117CD40 Offset: 0x117CD40 VA: 0x117CD40
	private void set_IsStopped(bool value) { }

	// RVA: 0x117CD8C Offset: 0x117CD8C VA: 0x117CD8C
	private static void .cctor() { }
}

// Namespace: 
public class SubmarineSettings : ScriptableObject // TypeDefIndex: 10954
{
	// Fields
	public Vector2 PanelUnitSize; // 0x18
	public SubmarineSettings.BoardOffset[] BoardOffsets; // 0x20
	public int ScanOpenPanelIntervalDefault; // 0x28
	public SubmarineSettings.OpenPanelInterval[] ScanOpenPanelIntervals; // 0x30
	public float PanelSelectDelaySecond; // 0x38
	public SubmarineSettings.HomeSpot[] HomeSpots; // 0x40
	public float SecondOfOpenPanelToRevealSpot; // 0x48
	public float ViewScanRangeCameraDuration; // 0x4C
	public float ScanRangeToHomeSpotCameraDuration; // 0x50
	public float OpenPanelCameraDuration; // 0x54
	public bool RegardScanRangeAsSimpleSquare; // 0x58

	// Methods

	// RVA: 0x117F194 Offset: 0x117F194 VA: 0x117F194
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class SubmarineSettings.BoardOffset // TypeDefIndex: 10955
{
	// Fields
	public int MapId; // 0x10
	public Vector2 Offset; // 0x14

	// Methods

	// RVA: 0x117F19C Offset: 0x117F19C VA: 0x117F19C
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class SubmarineSettings.OpenPanelInterval // TypeDefIndex: 10956
{
	// Fields
	public int ScanId; // 0x10
	public float Interval; // 0x14

	// Methods

	// RVA: 0x117F1AC Offset: 0x117F1AC VA: 0x117F1AC
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class SubmarineSettings.HomeSpot // TypeDefIndex: 10957
{
	// Fields
	public int MapId; // 0x10
	public int SpotId; // 0x14

	// Methods

	// RVA: 0x117F1A4 Offset: 0x117F1A4 VA: 0x117F1A4
	public void .ctor() { }
}

// Namespace: 
public class SubmarineSettingsManager // TypeDefIndex: 10958
{
	// Fields
	private static readonly int DEFAULT_PANEL_WIDTH; // 0x0
	private static readonly int DEFAULT_PANEL_HEIGHT; // 0x4
	private static readonly float DEFAULT_PANEL_SELECT_DELAY_SECOND; // 0x8
	private static readonly float DEFAULT_SCAN_OPEN_PANEL_WAIT_TIME; // 0xC
	private static readonly float DEFAULT_SECOND_OF_OPEN_PANEL_TO_REVEAL_SPOT; // 0x10
	private static readonly float DEFAULT_VIEW_SCAN_RANGE_CAMERA_DURATION; // 0x14
	private static readonly float DEFAULT_SCAN_RANGE_TO_HOME_SPOT_CAMERA_DURATION; // 0x18
	private static readonly float DEFAULT_OPEN_PANEL_CAMERA_DURATION; // 0x1C
	private static readonly string KEY_VIEW_SCAN_RANGE_CAMERA_DURATION; // 0x20
	private static readonly string KEY_SCAN_RANGE_TO_HOME_SPOT_CAMERA_DURATION; // 0x28
	private static readonly string KEY_OPEN_PANEL_CAMERA_DURATION; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC7B574 Offset: 0xC7B574 VA: 0xC7B574
	[DebuggerBrowsableAttribute] // RVA: 0xC7B574 Offset: 0xC7B574 VA: 0xC7B574
	private float <ScanOpenPanelIntervalDefault>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC7B5B0 Offset: 0xC7B5B0 VA: 0xC7B5B0
	[DebuggerBrowsableAttribute] // RVA: 0xC7B5B0 Offset: 0xC7B5B0 VA: 0xC7B5B0
	private Dictionary<int, float> <ScanOpenPanelIntervals>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC7B5EC Offset: 0xC7B5EC VA: 0xC7B5EC
	[DebuggerBrowsableAttribute] // RVA: 0xC7B5EC Offset: 0xC7B5EC VA: 0xC7B5EC
	private float <PanelSelectDelaySecond>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC7B628 Offset: 0xC7B628 VA: 0xC7B628
	[DebuggerBrowsableAttribute] // RVA: 0xC7B628 Offset: 0xC7B628 VA: 0xC7B628
	private Vector2 <PanelUnitSize>k__BackingField; // 0x24
	[CompilerGeneratedAttribute] // RVA: 0xC7B664 Offset: 0xC7B664 VA: 0xC7B664
	[DebuggerBrowsableAttribute] // RVA: 0xC7B664 Offset: 0xC7B664 VA: 0xC7B664
	private Vector3 <BoardOffset>k__BackingField; // 0x2C
	[CompilerGeneratedAttribute] // RVA: 0xC7B6A0 Offset: 0xC7B6A0 VA: 0xC7B6A0
	[DebuggerBrowsableAttribute] // RVA: 0xC7B6A0 Offset: 0xC7B6A0 VA: 0xC7B6A0
	private int <HomeSpotId>k__BackingField; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC7B6DC Offset: 0xC7B6DC VA: 0xC7B6DC
	[DebuggerBrowsableAttribute] // RVA: 0xC7B6DC Offset: 0xC7B6DC VA: 0xC7B6DC
	private float <SecondOfOpenPanelToRevealSpot>k__BackingField; // 0x3C
	[CompilerGeneratedAttribute] // RVA: 0xC7B718 Offset: 0xC7B718 VA: 0xC7B718
	[DebuggerBrowsableAttribute] // RVA: 0xC7B718 Offset: 0xC7B718 VA: 0xC7B718
	private float <ViewScanRangeCameraDuration>k__BackingField; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC7B754 Offset: 0xC7B754 VA: 0xC7B754
	[DebuggerBrowsableAttribute] // RVA: 0xC7B754 Offset: 0xC7B754 VA: 0xC7B754
	private float <ScanRangeToHomeSpotCameraDuration>k__BackingField; // 0x44
	[CompilerGeneratedAttribute] // RVA: 0xC7B790 Offset: 0xC7B790 VA: 0xC7B790
	[DebuggerBrowsableAttribute] // RVA: 0xC7B790 Offset: 0xC7B790 VA: 0xC7B790
	private float <OpenPanelCameraDuration>k__BackingField; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC7B7CC Offset: 0xC7B7CC VA: 0xC7B7CC
	[DebuggerBrowsableAttribute] // RVA: 0xC7B7CC Offset: 0xC7B7CC VA: 0xC7B7CC
	private bool <RegardScanRangeAsSimpleSquare>k__BackingField; // 0x4C
	private int mapId; // 0x50
	private int eventId; // 0x54

	// Properties
	public float ScanOpenPanelIntervalDefault { get; set; }
	public Dictionary<int, float> ScanOpenPanelIntervals { get; set; }
	public float PanelSelectDelaySecond { get; set; }
	public Vector2 PanelUnitSize { get; set; }
	public Vector3 BoardOffset { get; set; }
	public int HomeSpotId { get; set; }
	public float SecondOfOpenPanelToRevealSpot { get; set; }
	public float ViewScanRangeCameraDuration { get; set; }
	public float ScanRangeToHomeSpotCameraDuration { get; set; }
	public float OpenPanelCameraDuration { get; set; }
	public bool RegardScanRangeAsSimpleSquare { get; set; }

	// Methods

	// RVA: 0x117F1B4 Offset: 0x117F1B4 VA: 0x117F1B4
	public void .ctor(int eventId, int mapId) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2828 Offset: 0xCD2828 VA: 0xCD2828
	// RVA: 0x117F364 Offset: 0x117F364 VA: 0x117F364
	public float get_ScanOpenPanelIntervalDefault() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2838 Offset: 0xCD2838 VA: 0xCD2838
	// RVA: 0x117F318 Offset: 0x117F318 VA: 0x117F318
	private void set_ScanOpenPanelIntervalDefault(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2848 Offset: 0xCD2848 VA: 0xCD2848
	// RVA: 0x117F36C Offset: 0x117F36C VA: 0x117F36C
	public Dictionary<int, float> get_ScanOpenPanelIntervals() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2858 Offset: 0xCD2858 VA: 0xCD2858
	// RVA: 0x117F310 Offset: 0x117F310 VA: 0x117F310
	private void set_ScanOpenPanelIntervals(Dictionary<int, float> value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2868 Offset: 0xCD2868 VA: 0xCD2868
	// RVA: 0x117F374 Offset: 0x117F374 VA: 0x117F374
	public float get_PanelSelectDelaySecond() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2878 Offset: 0xCD2878 VA: 0xCD2878
	// RVA: 0x117F320 Offset: 0x117F320 VA: 0x117F320
	private void set_PanelSelectDelaySecond(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2888 Offset: 0xCD2888 VA: 0xCD2888
	// RVA: 0x117AAE8 Offset: 0x117AAE8 VA: 0x117AAE8
	public Vector2 get_PanelUnitSize() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2898 Offset: 0xCD2898 VA: 0xCD2898
	// RVA: 0x117F328 Offset: 0x117F328 VA: 0x117F328
	private void set_PanelUnitSize(Vector2 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD28A8 Offset: 0xCD28A8 VA: 0xCD28A8
	// RVA: 0x117AADC Offset: 0x117AADC VA: 0x117AADC
	public Vector3 get_BoardOffset() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD28B8 Offset: 0xCD28B8 VA: 0xCD28B8
	// RVA: 0x117F330 Offset: 0x117F330 VA: 0x117F330
	private void set_BoardOffset(Vector3 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD28C8 Offset: 0xCD28C8 VA: 0xCD28C8
	// RVA: 0x117F37C Offset: 0x117F37C VA: 0x117F37C
	public int get_HomeSpotId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD28D8 Offset: 0xCD28D8 VA: 0xCD28D8
	// RVA: 0x117F33C Offset: 0x117F33C VA: 0x117F33C
	private void set_HomeSpotId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD28E8 Offset: 0xCD28E8 VA: 0xCD28E8
	// RVA: 0x117F384 Offset: 0x117F384 VA: 0x117F384
	public float get_SecondOfOpenPanelToRevealSpot() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD28F8 Offset: 0xCD28F8 VA: 0xCD28F8
	// RVA: 0x117F344 Offset: 0x117F344 VA: 0x117F344
	private void set_SecondOfOpenPanelToRevealSpot(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2908 Offset: 0xCD2908 VA: 0xCD2908
	// RVA: 0x117F38C Offset: 0x117F38C VA: 0x117F38C
	public float get_ViewScanRangeCameraDuration() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2918 Offset: 0xCD2918 VA: 0xCD2918
	// RVA: 0x117F34C Offset: 0x117F34C VA: 0x117F34C
	private void set_ViewScanRangeCameraDuration(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2928 Offset: 0xCD2928 VA: 0xCD2928
	// RVA: 0x117F394 Offset: 0x117F394 VA: 0x117F394
	public float get_ScanRangeToHomeSpotCameraDuration() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2938 Offset: 0xCD2938 VA: 0xCD2938
	// RVA: 0x117F354 Offset: 0x117F354 VA: 0x117F354
	private void set_ScanRangeToHomeSpotCameraDuration(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2948 Offset: 0xCD2948 VA: 0xCD2948
	// RVA: 0x117F39C Offset: 0x117F39C VA: 0x117F39C
	public float get_OpenPanelCameraDuration() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2958 Offset: 0xCD2958 VA: 0xCD2958
	// RVA: 0x117F35C Offset: 0x117F35C VA: 0x117F35C
	private void set_OpenPanelCameraDuration(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2968 Offset: 0xCD2968 VA: 0xCD2968
	// RVA: 0x117F3A4 Offset: 0x117F3A4 VA: 0x117F3A4
	public bool get_RegardScanRangeAsSimpleSquare() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2978 Offset: 0xCD2978 VA: 0xCD2978
	// RVA: 0x117F3AC Offset: 0x117F3AC VA: 0x117F3AC
	private void set_RegardScanRangeAsSimpleSquare(bool value) { }

	// RVA: 0x117F3B8 Offset: 0x117F3B8 VA: 0x117F3B8
	public void Load(SubmarineSettings overrwrites) { }

	// RVA: 0x117F688 Offset: 0x117F688 VA: 0x117F688
	public void UpdateSettingsFromMaster() { }

	// RVA: 0x117F778 Offset: 0x117F778 VA: 0x117F778
	public float GetScanOpenPanelInterval(int scanId) { }

	// RVA: 0x117F828 Offset: 0x117F828 VA: 0x117F828
	private static void .cctor() { }
}

// Namespace: 
public class SubmarineSilhouetteData // TypeDefIndex: 10959
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC7B808 Offset: 0xC7B808 VA: 0xC7B808
	[DebuggerBrowsableAttribute] // RVA: 0xC7B808 Offset: 0xC7B808 VA: 0xC7B808
	private int <SpotId>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC7B844 Offset: 0xC7B844 VA: 0xC7B844
	[DebuggerBrowsableAttribute] // RVA: 0xC7B844 Offset: 0xC7B844 VA: 0xC7B844
	private int <PanelId>k__BackingField; // 0x14
	[CompilerGeneratedAttribute] // RVA: 0xC7B880 Offset: 0xC7B880 VA: 0xC7B880
	[DebuggerBrowsableAttribute] // RVA: 0xC7B880 Offset: 0xC7B880 VA: 0xC7B880
	private int <ObjectId>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC7B8BC Offset: 0xC7B8BC VA: 0xC7B8BC
	[DebuggerBrowsableAttribute] // RVA: 0xC7B8BC Offset: 0xC7B8BC VA: 0xC7B8BC
	private int[] <ObjectQuestIds>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC7B8F8 Offset: 0xC7B8F8 VA: 0xC7B8F8
	[DebuggerBrowsableAttribute] // RVA: 0xC7B8F8 Offset: 0xC7B8F8 VA: 0xC7B8F8
	private int[][] <EnemySizeIdx>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC7B934 Offset: 0xC7B934 VA: 0xC7B934
	[DebuggerBrowsableAttribute] // RVA: 0xC7B934 Offset: 0xC7B934 VA: 0xC7B934
	private bool <Alive>k__BackingField; // 0x30

	// Properties
	public int SpotId { get; set; }
	public int PanelId { get; set; }
	public bool IsOnPanel { get; }
	public int ObjectId { get; set; }
	public int[] ObjectQuestIds { get; set; }
	public bool HasObjectQuestIds { get; }
	public int[][] EnemySizeIdx { get; set; }
	public bool HasEnemySize { get; }
	public bool Alive { get; set; }

	// Methods

	// RVA: 0x117F9A4 Offset: 0x117F9A4 VA: 0x117F9A4
	public void .ctor(SubmarineSpotInfo spotInfo) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2988 Offset: 0xCD2988 VA: 0xCD2988
	// RVA: 0x1178448 Offset: 0x1178448 VA: 0x1178448
	public int get_SpotId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2998 Offset: 0xCD2998 VA: 0xCD2998
	// RVA: 0x117FA50 Offset: 0x117FA50 VA: 0x117FA50
	public void set_SpotId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD29A8 Offset: 0xCD29A8 VA: 0xCD29A8
	// RVA: 0x117FA88 Offset: 0x117FA88 VA: 0x117FA88
	public int get_PanelId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD29B8 Offset: 0xCD29B8 VA: 0xCD29B8
	// RVA: 0x117FA60 Offset: 0x117FA60 VA: 0x117FA60
	public void set_PanelId(int value) { }

	// RVA: 0x117FA90 Offset: 0x117FA90 VA: 0x117FA90
	public bool get_IsOnPanel() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD29C8 Offset: 0xCD29C8 VA: 0xCD29C8
	// RVA: 0x117FAA0 Offset: 0x117FAA0 VA: 0x117FAA0
	public int get_ObjectId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD29D8 Offset: 0xCD29D8 VA: 0xCD29D8
	// RVA: 0x117FA70 Offset: 0x117FA70 VA: 0x117FA70
	public void set_ObjectId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD29E8 Offset: 0xCD29E8 VA: 0xCD29E8
	// RVA: 0x117FAA8 Offset: 0x117FAA8 VA: 0x117FAA8
	public int[] get_ObjectQuestIds() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD29F8 Offset: 0xCD29F8 VA: 0xCD29F8
	// RVA: 0x117FA78 Offset: 0x117FA78 VA: 0x117FA78
	public void set_ObjectQuestIds(int[] value) { }

	// RVA: 0x117FAB0 Offset: 0x117FAB0 VA: 0x117FAB0
	public bool get_HasObjectQuestIds() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2A08 Offset: 0xCD2A08 VA: 0xCD2A08
	// RVA: 0x117FAD0 Offset: 0x117FAD0 VA: 0x117FAD0
	public int[][] get_EnemySizeIdx() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2A18 Offset: 0xCD2A18 VA: 0xCD2A18
	// RVA: 0x117FA80 Offset: 0x117FA80 VA: 0x117FA80
	public void set_EnemySizeIdx(int[][] value) { }

	// RVA: 0x117FAD8 Offset: 0x117FAD8 VA: 0x117FAD8
	public bool get_HasEnemySize() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2A28 Offset: 0xCD2A28 VA: 0xCD2A28
	// RVA: 0x117FAF8 Offset: 0x117FAF8 VA: 0x117FAF8
	public bool get_Alive() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2A38 Offset: 0xCD2A38 VA: 0xCD2A38
	// RVA: 0x117FB00 Offset: 0x117FB00 VA: 0x117FB00
	public void set_Alive(bool value) { }

	// RVA: 0x117FB0C Offset: 0x117FB0C VA: 0x117FB0C
	public bool HasClearCondQuestId(int questId) { }
}

// Namespace: 
public class SubmarineSpotInfo // TypeDefIndex: 10960
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC7B970 Offset: 0xC7B970 VA: 0xC7B970
	[DebuggerBrowsableAttribute] // RVA: 0xC7B970 Offset: 0xC7B970 VA: 0xC7B970
	private SpotEntity <SpotEntity>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC7B9AC Offset: 0xC7B9AC VA: 0xC7B9AC
	[DebuggerBrowsableAttribute] // RVA: 0xC7B9AC Offset: 0xC7B9AC VA: 0xC7B9AC
	private EventPanelSpotEntity <EventPanelSpotEntity>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC7B9E8 Offset: 0xC7B9E8 VA: 0xC7B9E8
	[DebuggerBrowsableAttribute] // RVA: 0xC7B9E8 Offset: 0xC7B9E8 VA: 0xC7B9E8
	private int <PanelId>k__BackingField; // 0x20

	// Properties
	public SpotEntity SpotEntity { get; set; }
	public EventPanelSpotEntity EventPanelSpotEntity { get; set; }
	public int PanelId { get; set; }
	public bool IsOnPanel { get; }

	// Methods

	// RVA: 0x117FB90 Offset: 0x117FB90 VA: 0x117FB90
	public void .ctor(SpotEntity spot, EventPanelSpotEntity eventPanelSpotEntity, int panelId = 0) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2A48 Offset: 0xCD2A48 VA: 0xCD2A48
	// RVA: 0x117FA48 Offset: 0x117FA48 VA: 0x117FA48
	public SpotEntity get_SpotEntity() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2A58 Offset: 0xCD2A58 VA: 0xCD2A58
	// RVA: 0x117FBD0 Offset: 0x117FBD0 VA: 0x117FBD0
	private void set_SpotEntity(SpotEntity value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2A68 Offset: 0xCD2A68 VA: 0xCD2A68
	// RVA: 0x117FA68 Offset: 0x117FA68 VA: 0x117FA68
	public EventPanelSpotEntity get_EventPanelSpotEntity() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2A78 Offset: 0xCD2A78 VA: 0xCD2A78
	// RVA: 0x117FBD8 Offset: 0x117FBD8 VA: 0x117FBD8
	private void set_EventPanelSpotEntity(EventPanelSpotEntity value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2A88 Offset: 0xCD2A88 VA: 0xCD2A88
	// RVA: 0x117FA58 Offset: 0x117FA58 VA: 0x117FA58
	public int get_PanelId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2A98 Offset: 0xCD2A98 VA: 0xCD2A98
	// RVA: 0x117FBE0 Offset: 0x117FBE0 VA: 0x117FBE0
	private void set_PanelId(int value) { }

	// RVA: 0x117FBE8 Offset: 0x117FBE8 VA: 0x117FBE8
	public bool get_IsOnPanel() { }
}

// Namespace: 
public class SubmarineUnreleasedScanSaveInfo // TypeDefIndex: 10961
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC7BA24 Offset: 0xC7BA24 VA: 0xC7BA24
	[DebuggerBrowsableAttribute] // RVA: 0xC7BA24 Offset: 0xC7BA24 VA: 0xC7BA24
	private int <EventId>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC7BA60 Offset: 0xC7BA60 VA: 0xC7BA60
	[DebuggerBrowsableAttribute] // RVA: 0xC7BA60 Offset: 0xC7BA60 VA: 0xC7BA60
	private int[] <ScanIds>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC7BA9C Offset: 0xC7BA9C VA: 0xC7BA9C
	private static Func<int, string> <>f__am$cache0; // 0x0

	// Properties
	public int EventId { get; set; }
	public int[] ScanIds { get; set; }

	// Methods

	// RVA: 0x117B940 Offset: 0x117B940 VA: 0x117B940
	public void .ctor(int eventId, int[] scanIds) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2AA8 Offset: 0xCD2AA8 VA: 0xCD2AA8
	// RVA: 0x117BE4C Offset: 0x117BE4C VA: 0x117BE4C
	public int get_EventId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2AB8 Offset: 0xCD2AB8 VA: 0xCD2AB8
	// RVA: 0x117FBF8 Offset: 0x117FBF8 VA: 0x117FBF8
	private void set_EventId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2AC8 Offset: 0xCD2AC8 VA: 0xCD2AC8
	// RVA: 0x117FC08 Offset: 0x117FC08 VA: 0x117FC08
	public int[] get_ScanIds() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2AD8 Offset: 0xCD2AD8 VA: 0xCD2AD8
	// RVA: 0x117FC00 Offset: 0x117FC00 VA: 0x117FC00
	private void set_ScanIds(int[] value) { }

	// RVA: 0x117B97C Offset: 0x117B97C VA: 0x117B97C
	public string GetSaveValue() { }

	// RVA: 0x117BBAC Offset: 0x117BBAC VA: 0x117BBAC
	public static SubmarineUnreleasedScanSaveInfo CreateBySaveValue(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2AE8 Offset: 0xCD2AE8 VA: 0xCD2AE8
	// RVA: 0x117FC10 Offset: 0x117FC10 VA: 0x117FC10
	private static string <GetSaveValue>m__0(int x) { }
}

// Namespace: 
public class SubmarineNewScannerDialog : BaseDialog // TypeDefIndex: 10962
{
	// Fields
	[SerializeField] // RVA: 0xC7BAAC Offset: 0xC7BAAC VA: 0xC7BAAC
	private UISprite iconSprite; // 0x58
	[SerializeField] // RVA: 0xC7BABC Offset: 0xC7BABC VA: 0xC7BABC
	private UILabel upperMessageLabel; // 0x60
	[SerializeField] // RVA: 0xC7BACC Offset: 0xC7BACC VA: 0xC7BACC
	private UILabel lowerMessageLabel; // 0x68
	[SerializeField] // RVA: 0xC7BADC Offset: 0xC7BADC VA: 0xC7BADC
	private UILabel closeLabel; // 0x70
	[SerializeField] // RVA: 0xC7BAEC Offset: 0xC7BAEC VA: 0xC7BAEC
	private UICommonButton closeButton; // 0x78
	private Action closedAction; // 0x80

	// Properties
	protected override GameObject closeBtnObject { get; }

	// Methods

	// RVA: 0x117A390 Offset: 0x117A390 VA: 0x117A390
	public void .ctor() { }

	// RVA: 0x117A3F8 Offset: 0x117A3F8 VA: 0x117A3F8
	private void Init() { }

	// RVA: 0x117A528 Offset: 0x117A528 VA: 0x117A528
	public void Open(int scanId, Action closedAction) { }

	// RVA: 0x117A79C Offset: 0x117A79C VA: 0x117A79C
	public void OnClickCloseButton() { }

	// RVA: 0x117A824 Offset: 0x117A824 VA: 0x117A824 Slot: 4
	protected override GameObject get_closeBtnObject() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45794 Offset: 0xC45794 VA: 0xC45794
private sealed class SubmarineNewScannerDialog.<Open>c__AnonStorey0 // TypeDefIndex: 10963
{
	// Fields
	internal EventPanelScanEntity scanEntity; // 0x10
	internal SubmarineNewScannerDialog $this; // 0x18

	// Methods

	// RVA: 0x117A794 Offset: 0x117A794 VA: 0x117A794
	public void .ctor() { }

	// RVA: 0x117A8C4 Offset: 0x117A8C4 VA: 0x117A8C4
	internal void <>m__0() { }

	// RVA: 0x117A9C4 Offset: 0x117A9C4 VA: 0x117A9C4
	internal void <>m__1() { }
}

// Namespace: 
public class SubmarineScanConfirmDialog : BaseDialog // TypeDefIndex: 10964
{
	// Fields
	[SerializeField] // RVA: 0xC7BAFC Offset: 0xC7BAFC VA: 0xC7BAFC
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC7BB0C Offset: 0xC7BB0C VA: 0xC7BB0C
	private UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC7BB1C Offset: 0xC7BB1C VA: 0xC7BB1C
	private UILabel cancelLabel; // 0x68
	[SerializeField] // RVA: 0xC7BB2C Offset: 0xC7BB2C VA: 0xC7BB2C
	private UILabel executeLabel; // 0x70
	[SerializeField] // RVA: 0xC7BB3C Offset: 0xC7BB3C VA: 0xC7BB3C
	private UICommonButton cancelButton; // 0x78
	[SerializeField] // RVA: 0xC7BB4C Offset: 0xC7BB4C VA: 0xC7BB4C
	private UICommonButton executeButton; // 0x80
	[SerializeField] // RVA: 0xC7BB5C Offset: 0xC7BB5C VA: 0xC7BB5C
	private GameObject consumeItem; // 0x88
	[SerializeField] // RVA: 0xC7BB6C Offset: 0xC7BB6C VA: 0xC7BB6C
	private UIGrid consumeItemGrid; // 0x90
	[SerializeField] // RVA: 0xC7BB7C Offset: 0xC7BB7C VA: 0xC7BB7C
	protected UISprite[] itemIcon; // 0x98
	[SerializeField] // RVA: 0xC7BB8C Offset: 0xC7BB8C VA: 0xC7BB8C
	protected UILabel[] itemNumLabel; // 0xA0
	[SerializeField] // RVA: 0xC7BB9C Offset: 0xC7BB9C VA: 0xC7BB9C
	private Vector3 dialogPositionLowerSide; // 0xA8
	[SerializeField] // RVA: 0xC7BBAC Offset: 0xC7BBAC VA: 0xC7BBAC
	private Vector3 dialogPositionUpperSide; // 0xB4
	private int scanId; // 0xC0
	private Action<bool> closeAction; // 0xC8
