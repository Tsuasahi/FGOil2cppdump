	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB4D0 Offset: 0xCDB4D0 VA: 0xCDB4D0
	// RVA: 0x17D5D5C Offset: 0x17D5D5C VA: 0x17D5D5C
	public void .ctor() { }

	// RVA: 0x17D5D64 Offset: 0x17D5D64 VA: 0x17D5D64 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB4E0 Offset: 0xCDB4E0 VA: 0xCDB4E0
	// RVA: 0x17D6098 Offset: 0x17D6098 VA: 0x17D6098 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB4F0 Offset: 0xCDB4F0 VA: 0xCDB4F0
	// RVA: 0x17D60A0 Offset: 0x17D60A0 VA: 0x17D60A0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB500 Offset: 0xCDB500 VA: 0xCDB500
	// RVA: 0x17D60A8 Offset: 0x17D60A8 VA: 0x17D60A8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB510 Offset: 0xCDB510 VA: 0xCDB510
	// RVA: 0x17D60BC Offset: 0x17D60BC VA: 0x17D60BC Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44144 Offset: 0xC44144 VA: 0xC44144
private sealed class BattleLogic.<coroutineLoadQuest>c__IteratorC : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9094
{
	// Fields
	internal BattleLogic $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB520 Offset: 0xCDB520 VA: 0xCDB520
	// RVA: 0x17D63E4 Offset: 0x17D63E4 VA: 0x17D63E4
	public void .ctor() { }

	// RVA: 0x17D63EC Offset: 0x17D63EC VA: 0x17D63EC Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB530 Offset: 0xCDB530 VA: 0xCDB530
	// RVA: 0x17D6610 Offset: 0x17D6610 VA: 0x17D6610 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB540 Offset: 0xCDB540 VA: 0xCDB540
	// RVA: 0x17D6618 Offset: 0x17D6618 VA: 0x17D6618 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB550 Offset: 0xCDB550 VA: 0xCDB550
	// RVA: 0x17D6620 Offset: 0x17D6620 VA: 0x17D6620 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB560 Offset: 0xCDB560 VA: 0xCDB560
	// RVA: 0x17D6634 Offset: 0x17D6634 VA: 0x17D6634 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44154 Offset: 0xC44154 VA: 0xC44154
private sealed class BattleLogic.<coroutineLoadNstage>c__IteratorD : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9095
{
	// Fields
	internal string endproc; // 0x10
	internal BattleLogic $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB570 Offset: 0xCDB570 VA: 0xCDB570
	// RVA: 0x17D6124 Offset: 0x17D6124 VA: 0x17D6124
	public void .ctor() { }

	// RVA: 0x17D612C Offset: 0x17D612C VA: 0x17D612C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB580 Offset: 0xCDB580 VA: 0xCDB580
	// RVA: 0x17D6358 Offset: 0x17D6358 VA: 0x17D6358 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB590 Offset: 0xCDB590 VA: 0xCDB590
	// RVA: 0x17D6360 Offset: 0x17D6360 VA: 0x17D6360 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB5A0 Offset: 0xCDB5A0 VA: 0xCDB5A0
	// RVA: 0x17D6368 Offset: 0x17D6368 VA: 0x17D6368 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB5B0 Offset: 0xCDB5B0 VA: 0xCDB5B0
	// RVA: 0x17D637C Offset: 0x17D637C VA: 0x17D637C Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44164 Offset: 0xC44164 VA: 0xC44164
private sealed class BattleLogic.<coroutineLoadSaveWave>c__IteratorE : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9096
{
	// Fields
	internal BattleServantData[] <svtlist>__0; // 0x10
	internal BattleServantData[] $locvar4; // 0x18
	internal int $locvar5; // 0x20
	internal BattleLogic $this; // 0x28
	internal object $current; // 0x30
	internal bool $disposing; // 0x38
	internal int $PC; // 0x3C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB5C0 Offset: 0xCDB5C0 VA: 0xCDB5C0
	// RVA: 0x17D669C Offset: 0x17D669C VA: 0x17D669C
	public void .ctor() { }

	// RVA: 0x17D66A4 Offset: 0x17D66A4 VA: 0x17D66A4 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB5D0 Offset: 0xCDB5D0 VA: 0xCDB5D0
	// RVA: 0x17D6B34 Offset: 0x17D6B34 VA: 0x17D6B34 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB5E0 Offset: 0xCDB5E0 VA: 0xCDB5E0
	// RVA: 0x17D6B3C Offset: 0x17D6B3C VA: 0x17D6B3C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB5F0 Offset: 0xCDB5F0 VA: 0xCDB5F0
	// RVA: 0x17D6B44 Offset: 0x17D6B44 VA: 0x17D6B44 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB600 Offset: 0xCDB600 VA: 0xCDB600
	// RVA: 0x17D6B58 Offset: 0x17D6B58 VA: 0x17D6B58 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44174 Offset: 0xC44174 VA: 0xC44174
private sealed class BattleLogic.<updateFieldBuff>c__AnonStorey19 // TypeDefIndex: 9097
{
	// Fields
	internal int[] fieldSvtIds; // 0x10
	internal FieldAliveServantData aliveSvtData; // 0x18
	internal BattleLogic $this; // 0x20

	// Methods

	// RVA: 0x17D817C Offset: 0x17D817C VA: 0x17D817C
	public void .ctor() { }

	// RVA: 0x17D8184 Offset: 0x17D8184 VA: 0x17D8184
	internal void <>m__0(AiNpcBattleServantData npc) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44184 Offset: 0xC44184 VA: 0xC44184
private sealed class BattleLogic.<CorCallServant>c__IteratorF : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9098
{
	// Fields
	internal BattleActionData actionData; // 0x10
	internal BattleActorControl <actor>__0; // 0x18
	internal BattleActionData.SummonServant[] <list>__0; // 0x20
	internal List<BattleLogic.SummonInfo> <infoList>__0; // 0x28
	internal List.Enumerator<BattleLogic.SummonInfo> $locvar0; // 0x30
	internal BattleLogic $this; // 0x48
	internal object $current; // 0x50
	internal bool $disposing; // 0x58
	internal int $PC; // 0x5C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB610 Offset: 0xCDB610 VA: 0xCDB610
	// RVA: 0x122DE30 Offset: 0x122DE30 VA: 0x122DE30
	public void .ctor() { }

	// RVA: 0x122EA2C Offset: 0x122EA2C VA: 0x122EA2C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB620 Offset: 0xCDB620 VA: 0xCDB620
	// RVA: 0x122EEAC Offset: 0x122EEAC VA: 0x122EEAC Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB630 Offset: 0xCDB630 VA: 0xCDB630
	// RVA: 0x122EEB4 Offset: 0x122EEB4 VA: 0x122EEB4 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB640 Offset: 0xCDB640 VA: 0xCDB640
	// RVA: 0x122EEBC Offset: 0x122EEBC VA: 0x122EEBC Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB650 Offset: 0xCDB650 VA: 0xCDB650
	// RVA: 0x122EED0 Offset: 0x122EED0 VA: 0x122EED0 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44194 Offset: 0xC44194 VA: 0xC44194
private sealed class BattleLogic.<CorFieldCallServant>c__Iterator10 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9099
{
	// Fields
	internal BattleActionData actionData; // 0x10
	internal BattleActionData.SummonServant[] <summonArray>__0; // 0x18
	internal List<BattleLogic.SummonInfo> <summonInfoList>__0; // 0x20
	internal List<BattleActorControl> <summonActorList>__0; // 0x28
	internal List.Enumerator<BattleLogic.SummonInfo> $locvar0; // 0x30
	internal int <summonEndCount>__0; // 0x48
	internal List.Enumerator<BattleActorControl> $locvar1; // 0x50
	internal BattleLogic $this; // 0x68
	internal object $current; // 0x70
	internal bool $disposing; // 0x78
	internal int $PC; // 0x7C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB660 Offset: 0xCDB660 VA: 0xCDB660
	// RVA: 0x122E140 Offset: 0x122E140 VA: 0x122E140
	public void .ctor() { }

	// RVA: 0x122EF38 Offset: 0x122EF38 VA: 0x122EF38 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB670 Offset: 0xCDB670 VA: 0xCDB670
	// RVA: 0x122F4DC Offset: 0x122F4DC VA: 0x122F4DC Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB680 Offset: 0xCDB680 VA: 0xCDB680
	// RVA: 0x122F4E4 Offset: 0x122F4E4 VA: 0x122F4E4 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB690 Offset: 0xCDB690 VA: 0xCDB690
	// RVA: 0x122F4EC Offset: 0x122F4EC VA: 0x122F4EC Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB6A0 Offset: 0xCDB6A0 VA: 0xCDB6A0
	// RVA: 0x122F500 Offset: 0x122F500 VA: 0x122F500 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC441A4 Offset: 0xC441A4 VA: 0xC441A4
private sealed class BattleLogic.<CoroutineCheckAssistSkill>c__Iterator11 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9100
{
	// Fields
	internal List<BattleLogicTask> <logicTaskList>__1; // 0x10
	internal BattleLogic $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDB6B0 Offset: 0xCDB6B0 VA: 0xCDB6B0
	// RVA: 0x122E4EC Offset: 0x122E4EC VA: 0x122E4EC
	public void .ctor() { }

	// RVA: 0x122F568 Offset: 0x122F568 VA: 0x122F568 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB6C0 Offset: 0xCDB6C0 VA: 0xCDB6C0
	// RVA: 0x122FCC4 Offset: 0x122FCC4 VA: 0x122FCC4 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB6D0 Offset: 0xCDB6D0 VA: 0xCDB6D0
	// RVA: 0x122FCCC Offset: 0x122FCCC VA: 0x122FCCC Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB6E0 Offset: 0xCDB6E0 VA: 0xCDB6E0
	// RVA: 0x122FCD4 Offset: 0x122FCD4 VA: 0x122FCD4 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDB6F0 Offset: 0xCDB6F0 VA: 0xCDB6F0
	// RVA: 0x122FCE8 Offset: 0x122FCE8 VA: 0x122FCE8 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class BattleLogicBuff // TypeDefIndex: 9101
{
	// Methods

	// RVA: 0x17D9394 Offset: 0x17D9394 VA: 0x17D9394
	public void .ctor() { }
}

// Namespace: 
public class BattleLogicBuff.BaseProcess // TypeDefIndex: 9102
{
	// Methods

	// RVA: 0x17D939C Offset: 0x17D939C VA: 0x17D939C
	public void .ctor() { }

	// RVA: 0x17D93A4 Offset: 0x17D93A4 VA: 0x17D93A4 Slot: 4
	public virtual void PrevAddCalcBuffParam(BattleBuffData.BuffData damageBuff, int totalParam, int plusMinus, ref int curParam) { }

	// RVA: 0x17D93A8 Offset: 0x17D93A8 VA: 0x17D93A8 Slot: 5
	public virtual void AfterAllAddCalcBuffParam(ref int totalParam) { }
}

// Namespace: 
public class BattleLogicBuff.ReduceHpProcess : BattleLogicBuff.BaseProcess // TypeDefIndex: 9103
{
	// Fields
	private List<BattleLogicBuff.ReduceHpProcess.BuffInfo> buffList; // 0x10
	private BattleLogicBuff.PreventDeathDamageProcess preventDeathProc; // 0x18

	// Methods

	// RVA: 0x17D9780 Offset: 0x17D9780 VA: 0x17D9780
	public void .ctor(BattleServantData svtData) { }

	// RVA: 0x17D9824 Offset: 0x17D9824 VA: 0x17D9824 Slot: 4
	public override void PrevAddCalcBuffParam(BattleBuffData.BuffData damageBuff, int totalParam, int plusMinus, ref int curParam) { }

	// RVA: 0x17D9914 Offset: 0x17D9914 VA: 0x17D9914 Slot: 5
	public override void AfterAllAddCalcBuffParam(ref int totalParam) { }
}

// Namespace: 
public class BattleLogicBuff.ReduceHpProcess.BuffInfo // TypeDefIndex: 9104
{
	// Fields
	public BattleBuffData.BuffData buff; // 0x10
	public int damage; // 0x18

	// Methods

	// RVA: 0x17D990C Offset: 0x17D990C VA: 0x17D990C
	public void .ctor() { }
}

// Namespace: 
public class BattleLogicBuff.PreventDeathDamageProcess // TypeDefIndex: 9105
{
	// Fields
	private BattleServantData selfSvt; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC6504C Offset: 0xC6504C VA: 0xC6504C
	private static Action<BattleBuffData.BuffData> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x17D93AC Offset: 0x17D93AC VA: 0x17D93AC
	public void .ctor(BattleServantData svtData) { }

	// RVA: 0x17D93D8 Offset: 0x17D93D8 VA: 0x17D93D8
	private bool IsApplyEffect(int curHp, List<BattleLogicBuff.ReduceHpProcess.BuffInfo> reduceHpBuffList) { }

	// RVA: 0x17D96D8 Offset: 0x17D96D8 VA: 0x17D96D8
	public int GetDamageAffectedEffect(int damage, List<BattleLogicBuff.ReduceHpProcess.BuffInfo> reduceHpBuffList) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD850 Offset: 0xCCD850 VA: 0xCCD850
	// RVA: 0x17D9754 Offset: 0x17D9754 VA: 0x17D9754
	private static void <IsApplyEffect>m__0(BattleBuffData.BuffData buff) { }
}

// Namespace: 
public class BattleLogicClassRelation // TypeDefIndex: 9106
{
	// Fields
	private BattleLogicClassRelation.Process[] _procArray; // 0x10
	private ClassRelationOverwriteMaster _overwriteMst; // 0x18

	// Properties
	public ClassRelationOverwriteMaster OverwriteMst { get; }

	// Methods

	// RVA: 0x17D9968 Offset: 0x17D9968 VA: 0x17D9968
	public void .ctor() { }

	// RVA: 0x17D9B98 Offset: 0x17D9B98 VA: 0x17D9B98
	public ClassRelationOverwriteMaster get_OverwriteMst() { }

	// RVA: 0x17D9C18 Offset: 0x17D9C18 VA: 0x17D9C18
	public BattleLogicClassRelation.ResultData proc(BattleLogicClassRelation.Argument arg) { }
}

// Namespace: 
public class BattleLogicClassRelation.Argument // TypeDefIndex: 9107
{
	// Fields
	public BattleCommandData command; // 0x10
	public BattleServantData atkSvt; // 0x18
	public BattleServantData defSvt; // 0x20
	public bool isAction; // 0x28
	public int atkClassId; // 0x2C
	public int defClassId; // 0x30
	public int atkRelationId; // 0x34
	public int defRelationId; // 0x38

	// Methods

	// RVA: 0x17D9CFC Offset: 0x17D9CFC VA: 0x17D9CFC
	public void .ctor(BattleCommandData command, BattleServantData attackSvt, BattleServantData defenseSvt, bool isAct) { }

	// RVA: 0x17D9E50 Offset: 0x17D9E50 VA: 0x17D9E50 Slot: 4
	public virtual BattleLogicClassRelation.ResultData initResultData() { }
}

// Namespace: 
public class BattleLogicClassRelation.DamageRateData // TypeDefIndex: 9108
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC6505C Offset: 0xC6505C VA: 0xC6505C
	[DebuggerBrowsableAttribute] // RVA: 0xC6505C Offset: 0xC6505C VA: 0xC6505C
	private BattleLogicClassRelation.ResultData <Result>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC65098 Offset: 0xC65098 VA: 0xC65098
	[DebuggerBrowsableAttribute] // RVA: 0xC65098 Offset: 0xC65098 VA: 0xC65098
	private int <Priority>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC650D4 Offset: 0xC650D4 VA: 0xC650D4
	[DebuggerBrowsableAttribute] // RVA: 0xC650D4 Offset: 0xC650D4 VA: 0xC650D4
	private float <Value>k__BackingField; // 0x1C
	[CompilerGeneratedAttribute] // RVA: 0xC65110 Offset: 0xC65110 VA: 0xC65110
	[DebuggerBrowsableAttribute] // RVA: 0xC65110 Offset: 0xC65110 VA: 0xC65110
	private int <GeneralType>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC6514C Offset: 0xC6514C VA: 0xC6514C
	[DebuggerBrowsableAttribute] // RVA: 0xC6514C Offset: 0xC6514C VA: 0xC6514C
	private bool <IsInvoked>k__BackingField; // 0x24
	private BattleLogicClassRelation.Process _proc; // 0x28

	// Properties
	public BattleLogicClassRelation.ResultData Result { get; set; }
	public int Priority { get; set; }
	public float Value { get; set; }
	public int GeneralType { get; set; }
	public bool IsInvoked { get; set; }
	public bool IsAction { get; }

	// Methods

	// RVA: 0x17DA348 Offset: 0x17DA348 VA: 0x17DA348
	public void .ctor(BattleLogicClassRelation.ResultData result) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD860 Offset: 0xCCD860 VA: 0xCCD860
	// RVA: 0x17DA380 Offset: 0x17DA380 VA: 0x17DA380
	private void set_Result(BattleLogicClassRelation.ResultData value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD870 Offset: 0xCCD870 VA: 0xCCD870
	// RVA: 0x17DA3AC Offset: 0x17DA3AC VA: 0x17DA3AC
	public BattleLogicClassRelation.ResultData get_Result() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD880 Offset: 0xCCD880 VA: 0xCCD880
	// RVA: 0x17DA388 Offset: 0x17DA388 VA: 0x17DA388
	private void set_Priority(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD890 Offset: 0xCCD890 VA: 0xCCD890
	// RVA: 0x17DA3B4 Offset: 0x17DA3B4 VA: 0x17DA3B4
	public int get_Priority() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD8A0 Offset: 0xCCD8A0 VA: 0xCCD8A0
	// RVA: 0x17DA390 Offset: 0x17DA390 VA: 0x17DA390
	private void set_Value(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD8B0 Offset: 0xCCD8B0 VA: 0xCCD8B0
	// RVA: 0x17DA3BC Offset: 0x17DA3BC VA: 0x17DA3BC
	public float get_Value() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD8C0 Offset: 0xCCD8C0 VA: 0xCCD8C0
	// RVA: 0x17DA398 Offset: 0x17DA398 VA: 0x17DA398
	private void set_GeneralType(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD8D0 Offset: 0xCCD8D0 VA: 0xCCD8D0
	// RVA: 0x17DA3C4 Offset: 0x17DA3C4 VA: 0x17DA3C4
	public int get_GeneralType() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD8E0 Offset: 0xCCD8E0 VA: 0xCCD8E0
	// RVA: 0x17DA3CC Offset: 0x17DA3CC VA: 0x17DA3CC
	public bool get_IsInvoked() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD8F0 Offset: 0xCCD8F0 VA: 0xCCD8F0
	// RVA: 0x17DA3A0 Offset: 0x17DA3A0 VA: 0x17DA3A0
	protected void set_IsInvoked(bool value) { }

	// RVA: 0x17DA3D4 Offset: 0x17DA3D4 VA: 0x17DA3D4
	public bool get_IsAction() { }

	// RVA: 0x17DA3E4 Offset: 0x17DA3E4 VA: 0x17DA3E4
	public bool updateValue(int priority, float value, int type, BattleLogicClassRelation.Process proc) { }

	// RVA: 0x17DA410 Offset: 0x17DA410 VA: 0x17DA410
	public float getFixRate(float rate) { }
}

// Namespace: 
public class BattleLogicClassRelation.ResultData // TypeDefIndex: 9109
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC65188 Offset: 0xC65188 VA: 0xC65188
	[DebuggerBrowsableAttribute] // RVA: 0xC65188 Offset: 0xC65188 VA: 0xC65188
	private float <BaseRate>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC651C4 Offset: 0xC651C4 VA: 0xC651C4
	[DebuggerBrowsableAttribute] // RVA: 0xC651C4 Offset: 0xC651C4 VA: 0xC651C4
	private BattleLogicClassRelation.DamageRateData <AtkRateData>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC65200 Offset: 0xC65200 VA: 0xC65200
	[DebuggerBrowsableAttribute] // RVA: 0xC65200 Offset: 0xC65200 VA: 0xC65200
	private BattleLogicClassRelation.DamageRateData <DefRateData>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC6523C Offset: 0xC6523C VA: 0xC6523C
	[DebuggerBrowsableAttribute] // RVA: 0xC6523C Offset: 0xC6523C VA: 0xC6523C
	private float <FixRate>k__BackingField; // 0x28

	// Properties
	public float BaseRate { get; set; }
	public BattleLogicClassRelation.DamageRateData AtkRateData { get; set; }
	public BattleLogicClassRelation.DamageRateData DefRateData { get; set; }
	public float FixRate { get; set; }
	public bool IsPriorAttack { get; }

	// Methods

	// RVA: 0x17D9EB0 Offset: 0x17D9EB0 VA: 0x17D9EB0
	public void .ctor(BattleLogicClassRelation.Argument arg) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD900 Offset: 0xCCD900 VA: 0xCCD900
	// RVA: 0x17DA944 Offset: 0x17DA944 VA: 0x17DA944
	private void set_BaseRate(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD910 Offset: 0xCCD910 VA: 0xCCD910
	// RVA: 0x17DA964 Offset: 0x17DA964 VA: 0x17DA964
	public float get_BaseRate() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD920 Offset: 0xCCD920 VA: 0xCCD920
	// RVA: 0x17DA94C Offset: 0x17DA94C VA: 0x17DA94C
	private void set_AtkRateData(BattleLogicClassRelation.DamageRateData value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD930 Offset: 0xCCD930 VA: 0xCCD930
	// RVA: 0x17DA080 Offset: 0x17DA080 VA: 0x17DA080
	public BattleLogicClassRelation.DamageRateData get_AtkRateData() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD940 Offset: 0xCCD940 VA: 0xCCD940
	// RVA: 0x17DA954 Offset: 0x17DA954 VA: 0x17DA954
	private void set_DefRateData(BattleLogicClassRelation.DamageRateData value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD950 Offset: 0xCCD950 VA: 0xCCD950
	// RVA: 0x17DA52C Offset: 0x17DA52C VA: 0x17DA52C
	public BattleLogicClassRelation.DamageRateData get_DefRateData() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD960 Offset: 0xCCD960 VA: 0xCCD960
	// RVA: 0x17DA95C Offset: 0x17DA95C VA: 0x17DA95C
	private void set_FixRate(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD970 Offset: 0xCCD970 VA: 0xCCD970
	// RVA: 0x17DA96C Offset: 0x17DA96C VA: 0x17DA96C
	public float get_FixRate() { }

	// RVA: 0x17DA974 Offset: 0x17DA974 VA: 0x17DA974
	public bool get_IsPriorAttack() { }

	// RVA: 0x17DA9C8 Offset: 0x17DA9C8 VA: 0x17DA9C8 Slot: 4
	public virtual void fixResult() { }

	// RVA: 0x17DAB4C Offset: 0x17DAB4C VA: 0x17DAB4C
	protected float getFixRatePriorityAsc(BattleLogicClassRelation.DamageRateData[] damageRateArray) { }

	// RVA: 0x17DAC08 Offset: 0x17DAC08 VA: 0x17DAC08
	public void getBuffShowState(BattleLogicClassRelation.DamageRateData damageRate, BattleLogicClassRelation.DamageRateData opponentDamageRate, bool isAtkSide, out BattleLogic.ClassRelationBuffShowState state) { }
}

// Namespace: 
public abstract class BattleLogicClassRelation.Process // TypeDefIndex: 9110
{
	// Methods

	// RVA: 0x17DA534 Offset: 0x17DA534 VA: 0x17DA534
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void exec(BattleLogicClassRelation logic, BattleLogicClassRelation.Argument arg, BattleLogicClassRelation.ResultData result);

	// RVA: 0x17DA8C0 Offset: 0x17DA8C0 VA: 0x17DA8C0 Slot: 5
	public virtual float getFixRate(BattleLogicClassRelation.DamageRateData self, float compRate) { }
}

// Namespace: 
public abstract class BattleLogicClassRelation.OverwriteProcess : BattleLogicClassRelation.Process // TypeDefIndex: 9111
{
	// Properties
	protected abstract bool IsAtkSide { get; }

	// Methods

	// RVA: 0x17D9FB0 Offset: 0x17D9FB0 VA: 0x17D9FB0
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 6
	protected abstract bool get_IsAtkSide();

	// RVA: -1 Offset: -1 Slot: 7
	protected abstract void execLocal(BattleLogicClassRelation logic, BattleLogicClassRelation.Argument arg, BattleLogicClassRelation.ResultData result);

	// RVA: 0x17DA7C4 Offset: 0x17DA7C4 VA: 0x17DA7C4 Slot: 4
	public override void exec(BattleLogicClassRelation logic, BattleLogicClassRelation.Argument arg, BattleLogicClassRelation.ResultData result) { }

	// RVA: 0x17DA088 Offset: 0x17DA088 VA: 0x17DA088
	protected void overwriteDamageRate(BattleLogicClassRelation logic, BattleLogicClassRelation.Argument arg, BattleLogicClassRelation.DamageRateData damageRate, BattleBuffData.BuffData[] buffArray) { }

	// RVA: 0x17DA7D0 Offset: 0x17DA7D0 VA: 0x17DA7D0 Slot: 5
	public override float getFixRate(BattleLogicClassRelation.DamageRateData self, float compRate) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD980 Offset: 0xCCD980 VA: 0xCCD980
	// RVA: 0x17DA8EC Offset: 0x17DA8EC VA: 0x17DA8EC
	private int <overwriteDamageRate>m__0(BattleBuffData.BuffData b1, BattleBuffData.BuffData b2) { }
}

// Namespace: 
public class BattleLogicClassRelation.AttackOverwriteProcess : BattleLogicClassRelation.OverwriteProcess // TypeDefIndex: 9112
{
	// Properties
	protected override bool IsAtkSide { get; }

	// Methods

	// RVA: 0x17D9B88 Offset: 0x17D9B88 VA: 0x17D9B88
	public void .ctor() { }

	// RVA: 0x17D9FB8 Offset: 0x17D9FB8 VA: 0x17D9FB8 Slot: 6
	protected override bool get_IsAtkSide() { }

	// RVA: 0x17D9FC0 Offset: 0x17D9FC0 VA: 0x17D9FC0 Slot: 7
	protected override void execLocal(BattleLogicClassRelation logic, BattleLogicClassRelation.Argument arg, BattleLogicClassRelation.ResultData result) { }
}

// Namespace: 
public class BattleLogicClassRelation.DefenseOverwriteProcess : BattleLogicClassRelation.OverwriteProcess // TypeDefIndex: 9113
{
	// Properties
	protected override bool IsAtkSide { get; }

	// Methods

	// RVA: 0x17D9B90 Offset: 0x17D9B90 VA: 0x17D9B90
	public void .ctor() { }

	// RVA: 0x17DA460 Offset: 0x17DA460 VA: 0x17DA460 Slot: 6
	protected override bool get_IsAtkSide() { }

	// RVA: 0x17DA468 Offset: 0x17DA468 VA: 0x17DA468 Slot: 7
	protected override void execLocal(BattleLogicClassRelation logic, BattleLogicClassRelation.Argument arg, BattleLogicClassRelation.ResultData result) { }
}

// Namespace: 
public class BattleLogicClassRelation.OldAttackOverwriteProcess : BattleLogicClassRelation.Process // TypeDefIndex: 9114
{
	// Methods

	// RVA: 0x17D9B78 Offset: 0x17D9B78 VA: 0x17D9B78
	public void .ctor() { }

	// RVA: 0x17DA53C Offset: 0x17DA53C VA: 0x17DA53C Slot: 4
	public override void exec(BattleLogicClassRelation logic, BattleLogicClassRelation.Argument arg, BattleLogicClassRelation.ResultData result) { }
}

// Namespace: 
public class BattleLogicClassRelation.OldDefenseOverwriteProcess : BattleLogicClassRelation.Process // TypeDefIndex: 9115
{
	// Methods

	// RVA: 0x17D9B80 Offset: 0x17D9B80 VA: 0x17D9B80
	public void .ctor() { }

	// RVA: 0x17DA680 Offset: 0x17DA680 VA: 0x17DA680 Slot: 4
	public override void exec(BattleLogicClassRelation logic, BattleLogicClassRelation.Argument arg, BattleLogicClassRelation.ResultData result) { }
}

// Namespace: 
public class BattleLogicDebug : SingletonMonoBehaviour<BattleLogicDebug> // TypeDefIndex: 9116
{
	// Methods

	// RVA: 0x17DACD8 Offset: 0x17DACD8 VA: 0x17DACD8
	public void .ctor() { }

	// RVA: 0x17DAD28 Offset: 0x17DAD28 VA: 0x17DAD28
	public void OutputDebugLog() { }
}

// Namespace: 
public class BattleLogicDebugKeyAssign : MonoBehaviour // TypeDefIndex: 9117
{
	// Methods

	// RVA: 0x17DAD2C Offset: 0x17DAD2C VA: 0x17DAD2C
	public void .ctor() { }
}

// Namespace: 
public class BattleLogicEnemyAi // TypeDefIndex: 9118
{
	// Fields
	public BattleData data; // 0x10
	public BattleLogic logic; // 0x18
	public BattleLogicTarget logictarget; // 0x20
	public BattleLogicNomal logicNomal; // 0x28
	public AiLogic aiLogic; // 0x30
	private AiActMaster aiActMst; // 0x38
	private AiEntity noThinkAiEnt; // 0x40
	public List<BattleServantData> actlist; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC65278 Offset: 0xC65278 VA: 0xC65278
	private static Func<BattleServantData, bool> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC65288 Offset: 0xC65288 VA: 0xC65288
	private static Func<BattleServantData, int> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC65298 Offset: 0xC65298 VA: 0xC65298
	private static Func<BattleServantData, int> <>f__am$cache2; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC652A8 Offset: 0xC652A8 VA: 0xC652A8
	private static Func<BattleServantData, int> <>f__am$cache3; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC652B8 Offset: 0xC652B8 VA: 0xC652B8
	private static Predicate<BattleServantData> <>f__am$cache4; // 0x20

	// Properties
	public BaseBattleEvent BattleEvent { get; }

	// Methods

	// RVA: 0x17DAD34 Offset: 0x17DAD34 VA: 0x17DAD34
	public void .ctor() { }

	// RVA: 0x17DADA4 Offset: 0x17DADA4 VA: 0x17DADA4
	public BaseBattleEvent get_BattleEvent() { }

	[ConditionalAttribute] // RVA: 0xCCD990 Offset: 0xCCD990 VA: 0xCCD990
	// RVA: 0x17DADD0 Offset: 0x17DADD0 VA: 0x17DADD0
	protected void DebugLog(string str) { }

	[ConditionalAttribute] // RVA: 0xCCD9C8 Offset: 0xCCD9C8 VA: 0xCCD9C8
	// RVA: 0x17DADD4 Offset: 0x17DADD4 VA: 0x17DADD4
	protected void InitDebugLog(BattleServantData svtData) { }

	[ConditionalAttribute] // RVA: 0xCCDA00 Offset: 0xCCDA00 VA: 0xCCDA00
	// RVA: 0x17DADD8 Offset: 0x17DADD8 VA: 0x17DADD8
	protected void OutputDebugLog() { }

	// RVA: 0x17DADDC Offset: 0x17DADDC VA: 0x17DADDC
	public void Initialize(BattleData data) { }

	// RVA: 0x17DAEAC Offset: 0x17DAEAC VA: 0x17DAEAC
	public BattleLogicTask[] taskAIAttack(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x17DCEFC Offset: 0x17DCEFC VA: 0x17DCEFC
	public void resetAct() { }

	// RVA: 0x17DD004 Offset: 0x17DD004 VA: 0x17DD004
	public BattleLogicTask[] resetEnemyActList(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x17DB6FC Offset: 0x17DB6FC VA: 0x17DB6FC
	public void updateActPriorityList() { }

	// RVA: 0x17DD01C Offset: 0x17DD01C VA: 0x17DD01C
	public void addEnemyActPriorityList(BattleServantData inSvtData) { }

	// RVA: 0x17DBBE4 Offset: 0x17DBBE4 VA: 0x17DBBE4
	public BattleLogicTask[] procAiAct(BattleServantData svtData, AiEntity aiEnt, int countAct, AiLogic.PROC_STATE procState = 0) { }

	// RVA: 0x17DD18C Offset: 0x17DD18C VA: 0x17DD18C
	public BattleLogicTask[] taskAIDead(int actUniqueId) { }

	// RVA: 0x17DD340 Offset: 0x17DD340 VA: 0x17DD340
	public BattleLogicTask[] taskAIPlayerActionEnd(int actUniqueId) { }

	// RVA: 0x17DD4F4 Offset: 0x17DD4F4 VA: 0x17DD4F4
	public BattleLogicTask[] taskAIEnemyStartTurn(int actUniqueId) { }

	// RVA: 0x17DD6A8 Offset: 0x17DD6A8 VA: 0x17DD6A8
	public BattleLogicTask[] taskAIEnemyEndTurn(int actUniqueId) { }

	// RVA: 0x17DD85C Offset: 0x17DD85C VA: 0x17DD85C
	public BattleLogicTask[] taskAIEnemyWaveStart(int actUniqueId) { }

	// RVA: 0x17DDA10 Offset: 0x17DDA10 VA: 0x17DDA10
	public bool checkWaveStartLogicList(int actUniqueId) { }

	// RVA: 0x17DBA30 Offset: 0x17DBA30 VA: 0x17DBA30
	public BattleLogicTask[] taskAIEnemyMaxNp(int actUniqueId) { }

	// RVA: 0x17DDA98 Offset: 0x17DDA98 VA: 0x17DDA98
	public bool checkShiftAfterLogicList(int actUniqueId) { }

	// RVA: 0x17DDB20 Offset: 0x17DDB20 VA: 0x17DDB20
	public BattleLogicTask[] taskAIEnemyShiftAfter(int actUniqueId) { }

	// RVA: 0x17DDCB4 Offset: 0x17DDCB4 VA: 0x17DDCB4
	public bool checkDeadLogicList(int actUniqueId) { }

	// RVA: 0x17DDD20 Offset: 0x17DDD20 VA: 0x17DDD20
	public BattleLogicTask createCommandRandomTask(BattleServantData svtData, int targetId, int countAct) { }

	// RVA: 0x17DD090 Offset: 0x17DD090 VA: 0x17DD090
	private int[] GetCommandArray(BattleServantData servantData) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDA38 Offset: 0xCCDA38 VA: 0xCCDA38
	// RVA: 0x17DE024 Offset: 0x17DE024 VA: 0x17DE024
	private static bool <updateActPriorityList>m__0(BattleServantData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDA48 Offset: 0xCCDA48 VA: 0xCCDA48
	// RVA: 0x17DE07C Offset: 0x17DE07C VA: 0x17DE07C
	private static int <updateActPriorityList>m__1(BattleServantData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDA58 Offset: 0xCCDA58 VA: 0xCCDA58
	// RVA: 0x17DE0A8 Offset: 0x17DE0A8 VA: 0x17DE0A8
	private static int <updateActPriorityList>m__2(BattleServantData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDA68 Offset: 0xCCDA68 VA: 0xCCDA68
	// RVA: 0x17DE0D0 Offset: 0x17DE0D0 VA: 0x17DE0D0
	private static int <updateActPriorityList>m__3(BattleServantData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDA78 Offset: 0xCCDA78 VA: 0xCCDA78
	// RVA: 0x17DE0FC Offset: 0x17DE0FC VA: 0x17DE0FC
	private static bool <updateActPriorityList>m__4(BattleServantData x) { }
}

// Namespace: 
public class BattleLogicFieldAi // TypeDefIndex: 9119
{
	// Fields
	public BattleData data; // 0x10
	public BattleLogic logic; // 0x18
	public BattleLogicTarget logictarget; // 0x20
	public BattleLogicNomal logicNomal; // 0x28
	public AiLogic aiLogic; // 0x30
	private BattleLogicTask[] zeroTask; // 0x38
	private Dictionary<BattleLogic.LOGICTYPE, BattleLogicTask.ACTIONTYPE> taskDictionary; // 0x40
	private Dictionary<BattleLogicTask.ACTIONTYPE, AiLogic.PROC_STATE> stateDicitionary; // 0x48

	// Methods

	// RVA: 0x17DE134 Offset: 0x17DE134 VA: 0x17DE134
	public void .ctor() { }

	// RVA: 0x17DE4D4 Offset: 0x17DE4D4 VA: 0x17DE4D4
	public void setReactionFunction(Dictionary<BattleLogicTask.ACTIONTYPE, BattleLogic.reactionFunction> list) { }

	// RVA: 0x17DE71C Offset: 0x17DE71C VA: 0x17DE71C
	public BattleLogicTask[] createBase(BattleLogicTask.ACTIONTYPE actionType, int index) { }

	// RVA: 0x17DE82C Offset: 0x17DE82C VA: 0x17DE82C
	public BattleLogicTask[] checkFieldAiTask(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x17DE8E8 Offset: 0x17DE8E8 VA: 0x17DE8E8
	public BattleLogicTask[] createBaseActionTask(BattleLogicTask task) { }

	// RVA: 0x17DF6D4 Offset: 0x17DF6D4 VA: 0x17DF6D4
	public BattleLogicTask[] createDeadActionTask() { }

	// RVA: 0x17DEB60 Offset: 0x17DEB60 VA: 0x17DEB60
	public BattleLogicTask[] procAiAct(BattleFieldData fieldData, AiFieldEntity aiEnt, int countAct) { }

	// RVA: 0x17DFB54 Offset: 0x17DFB54 VA: 0x17DFB54
	public BattleLogicTask[] checkFieldAiStartWave() { }

	// RVA: 0x17DFC20 Offset: 0x17DFC20 VA: 0x17DFC20
	public BattleLogicTask[] checkFieldAiStartTurn() { }

	// RVA: 0x17DFCEC Offset: 0x17DFCEC VA: 0x17DFCEC
	public BattleLogicTask[] checkFieldAiEntry() { }

	// RVA: 0x17DF778 Offset: 0x17DF778 VA: 0x17DF778
	public void AddAiFieldScriptTask(AiFieldEntity ent, List<BattleLogicTask> retlist, bool isForcedSpeedOne) { }

	// RVA: 0x17DFDB8 Offset: 0x17DFDB8 VA: 0x17DFDB8
	private BattleLogicTask[] makeResurrectionTask(int[] targetIds, BattleSkillInfoData skillInfo, string motionMessage, bool isForcedSpeedOne) { }

	// RVA: 0x17DFA94 Offset: 0x17DFA94 VA: 0x17DFA94
	private void DefenceTargetInitialize(AiFieldEntity aiFieldEntity) { }
}

// Namespace: 
public class BattleLogicFunction // TypeDefIndex: 9120
{
	// Fields
	public BattleData data; // 0x10
	public BattleLogic logic; // 0x18
	public BattleLogicTarget logictarget; // 0x20
	public FunctionMaster master; // 0x28
	private readonly int[] tamamocatTreasureDeviceIds; // 0x30
	public const int temporaryIgnoreSleepModeForNoblePhantasmSvtId = 600900;
	private List<int> buffProgressTurnSelfList; // 0x38
	private List<int> buffProgressTurnOpponentList; // 0x40
	private Dictionary<FuncList.TYPE, BattleLogicFunctionProcess.BaseFunctionTypeProcess> dicFuncProcess; // 0x48
	private string wkStr; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xC652C8 Offset: 0xC652C8 VA: 0xC652C8
	private static Func<BattleLogicFunctionProcess.FunctionUnitCheck, bool> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC652D8 Offset: 0xC652D8 VA: 0xC652D8
	private static Func<BattleLogicFunctionProcess.FunctionTargetCheck, bool> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC652E8 Offset: 0xC652E8 VA: 0xC652E8
	private static Func<BattleLogicFunctionProcess.FunctionTargetCheck, int> <>f__am$cache2; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC652F8 Offset: 0xC652F8 VA: 0xC652F8
	private static Func<BattleServantData, bool> <>f__am$cache3; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC65308 Offset: 0xC65308 VA: 0xC65308
	private static Action<BattleServantData> <>f__am$cache4; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC65318 Offset: 0xC65318 VA: 0xC65318
	private static Comparison<BattleServantData> <>f__am$cache5; // 0x28

	// Methods

	// RVA: 0x17DFF80 Offset: 0x17DFF80 VA: 0x17DFF80
	public void .ctor() { }

	// RVA: 0x17E0210 Offset: 0x17E0210 VA: 0x17E0210
	public FunctionEntity getFunctionEntity(int id) { }

	// RVA: 0x17E02B8 Offset: 0x17E02B8 VA: 0x17E02B8
	public FunctionMaster getFuncMaster() { }

	// RVA: 0x17E0338 Offset: 0x17E0338 VA: 0x17E0338
	protected void DebugLog(string str) { }

	// RVA: 0x17E033C Offset: 0x17E033C VA: 0x17E033C
	public void UpdateBuffProgressTurn(int buffType, ref bool isSelfTurn) { }

	// RVA: 0x17E03D4 Offset: 0x17E03D4 VA: 0x17E03D4
	private bool IsUpdateBuffProgressTurn(int buffType, string keyName, ref List<int> typeList) { }

	// RVA: 0x17E04F4 Offset: 0x17E04F4 VA: 0x17E04F4
	public BattleLogicFunctionProcess.BaseFunctionTypeProcess getFunctionTypeProcess(FuncList.TYPE functType) { }

	// RVA: 0x17E05DC Offset: 0x17E05DC VA: 0x17E05DC
	public bool isSelectTarget(int uniqueId, int[] funclist) { }

	// RVA: 0x17E0678 Offset: 0x17E0678 VA: 0x17E0678
	public bool isDisabledBuff(bool passive, DataVals baseVals) { }

	// RVA: 0x17E0738 Offset: 0x17E0738 VA: 0x17E0738
	public bool isFailDependentLastResult(BattleLogicFunction.ProcListInArgs args, int targetId, DataVals baseVals) { }

	// RVA: 0x17E07F0 Offset: 0x17E07F0 VA: 0x17E07F0
	public BattleActionData procList(BattleActionData action, int[] functionlist, DataVals[] baseValslist, bool passive = False, bool isReduceReset = True, bool isCommandSideEffect = False, bool isShift = False, bool isTreasureDvc = False, bool isBuffUpdate = True, bool isCreateSideEffect = True, BattleLogicFunction.FunctionArgument argument, int skillId = 0) { }

	// RVA: 0x17E38A4 Offset: 0x17E38A4 VA: 0x17E38A4
	private void SetTargetFuncList(int targetId, BattleActionData action, DataVals baseVals) { }

	// RVA: 0x17EC6A0 Offset: 0x17EC6A0 VA: 0x17EC6A0
	private bool IsSafeWin(int targetId) { }

	// RVA: 0x17E5D94 Offset: 0x17E5D94 VA: 0x17E5D94
	private bool isSafeDamage(DataVals baseVals, int targetId) { }

	// RVA: 0x17E346C Offset: 0x17E346C VA: 0x17E346C
	private bool isTreasureCommand(bool isTreasureDvc, int funcType) { }

	// RVA: 0x17EC73C Offset: 0x17EC73C VA: 0x17EC73C
	private int GetInstantDeathRate(float funcVals, BattleServantData targetSvtData, BattleServantData actionSvtData) { }

	// RVA: 0x17EC820 Offset: 0x17EC820 VA: 0x17EC820
	public bool checkFuncAction(BattleLogicFunction.ProcListInArgs args, int actorId, int targetId, BuffEntity buffEnt, FunctionEntity funcEnt, DataVals baseVals, bool isTreasureDevice, ref bool isDisplayLastFuncInvalid) { }

	// RVA: 0x17ECE70 Offset: 0x17ECE70 VA: 0x17ECE70
	public bool checkNoActionCondition(int targetId, FunctionEntity funcEnt) { }

	// RVA: 0x17E34A0 Offset: 0x17E34A0 VA: 0x17E34A0
	private void setAttackSideEffect(BattleActionData mainAction, BattleServantData actionSvtData, bool isTreasureDvc, BattleLogicFunction.SideEffectMakeArgument attackArg) { }

	// RVA: 0x17ECF14 Offset: 0x17ECF14 VA: 0x17ECF14
	public void setAttackSideEffectBuff(SkillLvMaster skillLvMst, BattleActionData actData, BattleBuffData.BuffData buff, BattleLogicFunction.AttackSideEffectFunctionArgument arg, bool isCommandSideEffect = True) { }

	// RVA: 0x17EC570 Offset: 0x17EC570 VA: 0x17EC570
	private int[] getTargetids(BattleActionData mainAction, int targetType) { }

	// RVA: 0x17EAA44 Offset: 0x17EAA44 VA: 0x17EAA44
	private int getHpPerValue(DataVals baseVals, BattleServantData targetSvtData) { }

	// RVA: 0x17ED034 Offset: 0x17ED034 VA: 0x17ED034
	private void AfterAddedBuffProcess(BattleServantData targetSvtData, BuffEntity buffEnt) { }

	// RVA: 0x17ED18C Offset: 0x17ED18C VA: 0x17ED18C
	private BattleActionData.BuffData MakeAddActionBuffData(BattleActionData.BuffData actBuffData, BattleBuffData.BuffData buffData, FunctionEntity funcEnt, bool isCommandSideEffect) { }

	// RVA: 0x17ED28C Offset: 0x17ED28C VA: 0x17ED28C
	private bool IsAddStateFieldFlag(BattleBuffData.BuffData buffData) { }

	// RVA: 0x17E3A4C Offset: 0x17E3A4C VA: 0x17E3A4C
	public BattleActionData functionAddState(BattleLogicFunctionProcess.FunctionTargetCheck funcTarget, BattleLogicFunction.ProcListInArgs args, int actorId, int targetId, BuffEntity buffEnt, FunctionEntity funcEnt, DataVals baseVals, int funcIndex, bool passive, bool shortbuff, bool isShift, long userCCId, bool isCommandSideEffect, int treasureDvcId, int skillId) { }

	// RVA: 0x17ED35C Offset: 0x17ED35C VA: 0x17ED35C
	private bool IsSvtBuffTurnExtend(int targetId, BuffEntity buffEnt) { }

	// RVA: 0x17ED470 Offset: 0x17ED470 VA: 0x17ED470
