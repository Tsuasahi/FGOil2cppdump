
	// RVA: 0x15D4FAC Offset: 0x15D4FAC VA: 0x15D4FAC Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x15D5068 Offset: 0x15D5068 VA: 0x15D5068
	public bool SetMode(QuestBoardListViewManager.InitMode mode, Action end_act, bool isFade = False, bool isNotInit = False) { }

	// RVA: 0x15D562C Offset: 0x15D562C VA: 0x15D562C
	public void SetupDisp() { }

	// RVA: 0x15D56F8 Offset: 0x15D56F8 VA: 0x15D56F8
	public void InitListObject(QuestBoardListViewObject.InitMode mode) { }

	// RVA: 0x15D519C Offset: 0x15D519C VA: 0x15D519C
	protected void RequestListObject(QuestBoardListViewObject.InitMode mode, Action end_act, bool isWhiteFade = False, bool isNotInit = False) { }

	// RVA: 0x15D5AD0 Offset: 0x15D5AD0 VA: 0x15D5AD0
	private void SetSlideOut(float time, Action end_act) { }

	// RVA: 0x15D5C20 Offset: 0x15D5C20 VA: 0x15D5C20
	private void EndSlideIn(Action end_act, bool isNotInit = False) { }

	// RVA: 0x15D5C88 Offset: 0x15D5C88 VA: 0x15D5C88
	private void EndSlideOut(Action end_act) { }

	// RVA: 0x15D5DBC Offset: 0x15D5DBC VA: 0x15D5DBC
	public bool IsFadedForFolderBG() { }

	// RVA: 0x15D5DC4 Offset: 0x15D5DC4 VA: 0x15D5DC4
	public void ClearFadeIn() { }

	// RVA: 0x15D5DCC Offset: 0x15D5DCC VA: 0x15D5DCC
	public void SetOutPosition() { }

	// RVA: 0x15D5EA4 Offset: 0x15D5EA4 VA: 0x15D5EA4
	public void SetFocusItem(int item_index, bool isAnimation = True) { }

	// RVA: 0x15D5EB0 Offset: 0x15D5EB0 VA: 0x15D5EB0
	public void SetCenterItem(int item_index, bool isAnimation = True, float forceShiftY = 0) { }

	// RVA: 0x15D5F70 Offset: 0x15D5F70 VA: 0x15D5F70
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x15D3574 Offset: 0x15D3574 VA: 0x15D3574
	private void UpdateAlphaAnim() { }

	// RVA: 0x15D68C8 Offset: 0x15D68C8 VA: 0x15D68C8
	private void ResetAlphaAnimTime() { }

	// RVA: 0x15C84C0 Offset: 0x15C84C0 VA: 0x15C84C0
	public int GetAlphaAnimCnt(int length) { }

	// RVA: 0x15D67F8 Offset: 0x15D67F8 VA: 0x15D67F8
	private void OnChangeAlphaAnim() { }

	// RVA: 0x15D6728 Offset: 0x15D6728 VA: 0x15D6728
	public void SetShowingInfoAllOff() { }

	// RVA: 0x15D69C4 Offset: 0x15D69C4 VA: 0x15D69C4
	public void SetShowingInfo(int idx, bool onOff) { }

	// RVA: 0x15D6BA8 Offset: 0x15D6BA8 VA: 0x15D6BA8
	public void RequestConsumeColorReset() { }

	// RVA: 0x15CFEE4 Offset: 0x15CFEE4 VA: 0x15CFEE4
	public bool IsConsumeColorReset() { }

	// RVA: 0x15D6BB4 Offset: 0x15D6BB4 VA: 0x15D6BB4
	public bool IsSliding() { }

	// RVA: 0x15D6BBC Offset: 0x15D6BBC VA: 0x15D6BBC
	public void RequestChangeBG(int req) { }

	// RVA: 0x15D6BC4 Offset: 0x15D6BC4 VA: 0x15D6BC4
	public bool isBgActive() { }

	// RVA: 0x15D582C Offset: 0x15D582C VA: 0x15D582C
	public void changeBG(Action callback) { }

	// RVA: 0x15D5D4C Offset: 0x15D5D4C VA: 0x15D5D4C
	public void ResetBG() { }

	// RVA: 0x15D59C4 Offset: 0x15D59C4 VA: 0x15D59C4
	private void bgAlphaFade(QuestBoardListViewManager.InitMode inOut, float time) { }

	// RVA: 0x15D6CD8 Offset: 0x15D6CD8 VA: 0x15D6CD8
	public void BGChangeEffect(int bgID, int effectType, float time) { }

	// RVA: 0x15D6C0C Offset: 0x15D6C0C VA: 0x15D6C0C
	public void RemoveTempBG() { }

	// RVA: 0x15D70C4 Offset: 0x15D70C4 VA: 0x15D70C4
	public void SetScrollViewPanelDepth(int depth, bool isDefault = False) { }

	// RVA: 0x15D71CC Offset: 0x15D71CC VA: 0x15D71CC
	public void LoadAsset(Action onCompleteLoad) { }

	// RVA: 0x15D7304 Offset: 0x15D7304 VA: 0x15D7304
	private void OnCompleteAssetData(AssetData loadedAssetData, Action onCompleteLoad) { }

	// RVA: 0x15D7344 Offset: 0x15D7344 VA: 0x15D7344
	private void SetupBlackMark() { }

	// RVA: 0x15D780C Offset: 0x15D780C VA: 0x15D780C
	private void SetupWhiteMark() { }

	// RVA: 0x15D7554 Offset: 0x15D7554 VA: 0x15D7554
	private void SetupBoardAppearAndDisappearEffect() { }

	// RVA: 0x15D79D8 Offset: 0x15D79D8 VA: 0x15D79D8
	public void SetUpBoardAppearEffect(int warId) { }

	// RVA: 0x15D7CF8 Offset: 0x15D7CF8 VA: 0x15D7CF8
	public void SetUpBoardAppearFadeEffect() { }

	// RVA: 0x15D7FC0 Offset: 0x15D7FC0 VA: 0x15D7FC0
	public void PlayBoardAppearEffect(Action playingCallback1, Action endAct) { }

	// RVA: 0x15D827C Offset: 0x15D827C VA: 0x15D827C
	public void PlayBoardAppearFadeEffect(Action playingCallback1, Action endAct) { }

	// RVA: 0x15D8334 Offset: 0x15D8334 VA: 0x15D8334
	public void SetUpBoardDisappearEffect(int warId) { }

	// RVA: 0x15D8674 Offset: 0x15D8674 VA: 0x15D8674
	public void SetUpBoardDisppear2Effect(int warId) { }

	// RVA: 0x15D8A10 Offset: 0x15D8A10 VA: 0x15D8A10
	public void SetUpBoardDisppearFadeEffect() { }

	// RVA: 0x15D8CD8 Offset: 0x15D8CD8 VA: 0x15D8CD8
	public void PlayBoardDisappearFadeEffect(Action playingCallback1, Action endAct) { }

	// RVA: 0x15D8D90 Offset: 0x15D8D90 VA: 0x15D8D90
	public void PlayBoardDisappearEffect(Action playingCallback1, Action endAct) { }

	// RVA: 0x15D8E48 Offset: 0x15D8E48 VA: 0x15D8E48
	public void PlayBoardDisappear2Effect(Action playingCallback1, Action endAct) { }

	// RVA: 0x15D8078 Offset: 0x15D8078 VA: 0x15D8078
	private void PlayBoardEffect(QuestBoardListEffectComponent effectComponent, Action playingCallback1, Action endAct) { }

	// RVA: 0x15D9018 Offset: 0x15D9018 VA: 0x15D9018
	public void ReleaseAsset() { }

	// RVA: 0x15D4804 Offset: 0x15D4804 VA: 0x15D4804
	public void MoveBoard(GameObject obj, float moveY, float time, Easing.TYPE easeType, bool is_force = False) { }

	// RVA: 0x15D90B0 Offset: 0x15D90B0 VA: 0x15D90B0
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3B90 Offset: 0xCD3B90 VA: 0xCD3B90
	// RVA: 0x15D9174 Offset: 0x15D9174 VA: 0x15D9174
	private void <BGChangeEffect>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3BA0 Offset: 0xCD3BA0 VA: 0xCD3BA0
	// RVA: 0x15D922C Offset: 0x15D922C VA: 0x15D922C
	private void <BGChangeEffect>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3BB0 Offset: 0xCD3BB0 VA: 0xCD3BB0
	// RVA: 0x15D92F0 Offset: 0x15D92F0 VA: 0x15D92F0
	private static bool <SetupBlackMark>m__2(WarEntity entity) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3BC0 Offset: 0xCD3BC0 VA: 0xCD3BC0
	// RVA: 0x15D939C Offset: 0x15D939C VA: 0x15D939C
	private static bool <SetupWhiteMark>m__3(WarEntity entity) { }
}

// Namespace: 
public enum QuestBoardListViewManager.InitMode // TypeDefIndex: 11158
{
	// Fields
	public int value__; // 0x0
	public const QuestBoardListViewManager.InitMode NONE = 0;
	public const QuestBoardListViewManager.InitMode VALID = 1;
	public const QuestBoardListViewManager.InitMode INPUT = 2;
	public const QuestBoardListViewManager.InitMode INTO = 3;
	public const QuestBoardListViewManager.InitMode EXIT = 4;
	public const QuestBoardListViewManager.InitMode FADE_IN = 5;
	public const QuestBoardListViewManager.InitMode FADE_OUT = 6;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45BB4 Offset: 0xC45BB4 VA: 0xC45BB4
private sealed class QuestBoardListViewManager.<WaitFinish>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 11159
{
	// Fields
	internal Action endAct; // 0x10
	internal QuestBoardListViewManager $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDCE40 Offset: 0xCDCE40 VA: 0xCDCE40
	// RVA: 0x11F8960 Offset: 0x11F8960 VA: 0x11F8960
	public void .ctor() { }

	// RVA: 0x11F8968 Offset: 0x11F8968 VA: 0x11F8968 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCE50 Offset: 0xCDCE50 VA: 0xCDCE50
	// RVA: 0x11F8A20 Offset: 0x11F8A20 VA: 0x11F8A20 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCE60 Offset: 0xCDCE60 VA: 0xCDCE60
	// RVA: 0x11F8A28 Offset: 0x11F8A28 VA: 0x11F8A28 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCE70 Offset: 0xCDCE70 VA: 0xCDCE70
	// RVA: 0x11F8A30 Offset: 0x11F8A30 VA: 0x11F8A30 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCE80 Offset: 0xCDCE80 VA: 0xCDCE80
	// RVA: 0x11F8A44 Offset: 0x11F8A44 VA: 0x11F8A44 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45BC4 Offset: 0xC45BC4 VA: 0xC45BC4
private sealed class QuestBoardListViewManager.<RequestListObject>c__AnonStorey1 // TypeDefIndex: 11160
{
	// Fields
	internal bool isFadeOnTop; // 0x10
	internal Action end_act; // 0x18
	internal bool isNotInit; // 0x20
	internal QuestBoardListViewManager $this; // 0x28

	// Methods

	// RVA: 0x11F813C Offset: 0x11F813C VA: 0x11F813C
	public void .ctor() { }

	// RVA: 0x11F8144 Offset: 0x11F8144 VA: 0x11F8144
	internal void <>m__0() { }

	// RVA: 0x11F8308 Offset: 0x11F8308 VA: 0x11F8308
	internal void <>m__1() { }

	// RVA: 0x11F850C Offset: 0x11F850C VA: 0x11F850C
	internal void <>m__2() { }

	// RVA: 0x11F85A8 Offset: 0x11F85A8 VA: 0x11F85A8
	internal void <>m__3() { }

	// RVA: 0x11F85B4 Offset: 0x11F85B4 VA: 0x11F85B4
	internal void <>m__4() { }

	// RVA: 0x11F8650 Offset: 0x11F8650 VA: 0x11F8650
	internal void <>m__5() { }

	// RVA: 0x11F865C Offset: 0x11F865C VA: 0x11F865C
	internal void <>m__6() { }

	// RVA: 0x11F8668 Offset: 0x11F8668 VA: 0x11F8668
	internal void <>m__7() { }
}

// Namespace: 
private sealed class QuestBoardListViewManager.<RequestListObject>c__AnonStorey1.<RequestListObject>c__AnonStorey2 // TypeDefIndex: 11161
{
	// Fields
	internal SlideFadeObject sfo; // 0x10
	internal QuestBoardListViewManager.<RequestListObject>c__AnonStorey1 <>f__ref$1; // 0x18

	// Methods

	// RVA: 0x11F8300 Offset: 0x11F8300 VA: 0x11F8300
	public void .ctor() { }

	// RVA: 0x11F8674 Offset: 0x11F8674 VA: 0x11F8674
	internal void <>m__0() { }

	// RVA: 0x11F8818 Offset: 0x11F8818 VA: 0x11F8818
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45BD4 Offset: 0xC45BD4 VA: 0xC45BD4
private sealed class QuestBoardListViewManager.<RequestListObject>c__AnonStorey3 // TypeDefIndex: 11162
{
	// Fields
	internal float time; // 0x10
	internal QuestBoardListViewManager.<RequestListObject>c__AnonStorey1 <>f__ref$1; // 0x18

	// Methods

	// RVA: 0x11F88AC Offset: 0x11F88AC VA: 0x11F88AC
	public void .ctor() { }

	// RVA: 0x11F88B4 Offset: 0x11F88B4 VA: 0x11F88B4
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45BE4 Offset: 0xC45BE4 VA: 0xC45BE4
private sealed class QuestBoardListViewManager.<SetSlideOut>c__AnonStorey4 // TypeDefIndex: 11163
{
	// Fields
	internal Action end_act; // 0x10
	internal QuestBoardListViewManager $this; // 0x18

	// Methods

	// RVA: 0x11F8924 Offset: 0x11F8924 VA: 0x11F8924
	public void .ctor() { }

	// RVA: 0x11F892C Offset: 0x11F892C VA: 0x11F892C
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45BF4 Offset: 0xC45BF4 VA: 0xC45BF4
private sealed class QuestBoardListViewManager.<EndSlideOut>c__AnonStorey5 // TypeDefIndex: 11164
{
	// Fields
	internal Action end_act; // 0x10

	// Methods

	// RVA: 0x11F7F6C Offset: 0x11F7F6C VA: 0x11F7F6C
	public void .ctor() { }

	// RVA: 0x11F7F74 Offset: 0x11F7F74 VA: 0x11F7F74
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45C04 Offset: 0xC45C04 VA: 0xC45C04
private sealed class QuestBoardListViewManager.<LoadAsset>c__AnonStorey6 // TypeDefIndex: 11165
{
	// Fields
	internal Action onCompleteLoad; // 0x10
	internal QuestBoardListViewManager $this; // 0x18

	// Methods

	// RVA: 0x11F7F80 Offset: 0x11F7F80 VA: 0x11F7F80
	public void .ctor() { }

	// RVA: 0x11F7F88 Offset: 0x11F7F88 VA: 0x11F7F88
	internal void <>m__0(AssetData data) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45C14 Offset: 0xC45C14 VA: 0xC45C14
private sealed class QuestBoardListViewManager.<PlayBoardEffect>c__AnonStorey7 // TypeDefIndex: 11166
{
	// Fields
	internal Action playingCallback1; // 0x10
	internal QuestBoardListEffectComponent effectComponent; // 0x18
	internal Action endAct; // 0x20

	// Methods

	// RVA: 0x11F8074 Offset: 0x11F8074 VA: 0x11F8074
	public void .ctor() { }

	// RVA: 0x11F807C Offset: 0x11F807C VA: 0x11F807C
	internal void <>m__0() { }

	// RVA: 0x11F8090 Offset: 0x11F8090 VA: 0x11F8090
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45C24 Offset: 0xC45C24 VA: 0xC45C24
private sealed class QuestBoardListViewManager.<MoveBoard>c__AnonStorey8 // TypeDefIndex: 11167
{
	// Fields
	internal GameObject tgtObj; // 0x10
	internal MoveObject mo; // 0x18
	internal float tgtY; // 0x20
	internal QuestBoardListViewManager $this; // 0x28

	// Methods

	// RVA: 0x11F7FCC Offset: 0x11F7FCC VA: 0x11F7FCC
	public void .ctor() { }

	// RVA: 0x11F7FD4 Offset: 0x11F7FD4 VA: 0x11F7FD4
	internal void <>m__0() { }

	// RVA: 0x11F8014 Offset: 0x11F8014 VA: 0x11F8014
	internal void <>m__1() { }
}

// Namespace: 
public class QuestBoardListViewMultiLimitedFormation : TweenAlpha // TypeDefIndex: 11168
{
	// Fields
	private static float InitTime; // 0x0
	private UILabel Label; // 0xA0
	private UISprite Sprite; // 0xA8
	private QuestPhaseDetailEntity.BoardInfo[] InfoList; // 0xB0
	private int CurrentIndex; // 0xB8
	private bool Forward; // 0xBC
	private bool OldForward; // 0xBD
	[CompilerGeneratedAttribute] // RVA: 0xC7D5A4 Offset: 0xC7D5A4 VA: 0xC7D5A4
	private static Func<QuestPhaseDetailEntity.BoardInfo, int> <>f__am$cache0; // 0x8

	// Methods

	// RVA: 0x11F8AAC Offset: 0x11F8AAC VA: 0x11F8AAC
	public void .ctor() { }

	// RVA: 0x11F8AB4 Offset: 0x11F8AB4 VA: 0x11F8AB4
	private void Update() { }

	// RVA: 0x11F8D58 Offset: 0x11F8D58 VA: 0x11F8D58
	public void Init(UILabel label, UISprite sprite, QuestPhaseDetailEntity.BoardInfo[] list) { }

	// RVA: 0x11F8C1C Offset: 0x11F8C1C VA: 0x11F8C1C
	private void SetNext() { }

	// RVA: 0x11F968C Offset: 0x11F968C VA: 0x11F968C
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3BD0 Offset: 0xCD3BD0 VA: 0xCD3BD0
	// RVA: 0x11F9690 Offset: 0x11F9690 VA: 0x11F9690
	private static int <Init>m__0(QuestPhaseDetailEntity.BoardInfo info) { }
}

// Namespace: 
public class QuestBoardListViewObject : ListViewObject // TypeDefIndex: 11169
{
	// Fields
	protected QuestBoardListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC7D5B4 Offset: 0xC7D5B4 VA: 0xC7D5B4
	[DebuggerBrowsableAttribute] // RVA: 0xC7D5B4 Offset: 0xC7D5B4 VA: 0xC7D5B4
	private Action callbackFunc; // 0x70
	protected QuestBoardListViewItemDraw itemDraw; // 0x78
	protected QuestBoardListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x11F96B8 Offset: 0x11F96B8 VA: 0x11F96B8
	public void .ctor() { }

	// RVA: 0x11F9720 Offset: 0x11F9720 VA: 0x11F9720
	public bool IsStateInput() { }

	// RVA: 0x11F9730 Offset: 0x11F9730 VA: 0x11F9730
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x11F981C Offset: 0x11F981C VA: 0x11F981C
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x11F9908 Offset: 0x11F9908 VA: 0x11F9908
	protected void Awake() { }

	// RVA: 0x11F9994 Offset: 0x11F9994 VA: 0x11F9994
	private void Start() { }

	// RVA: 0x11F99B4 Offset: 0x11F99B4 VA: 0x11F99B4
	private void OnDestroy() { }

	// RVA: 0x11F9A60 Offset: 0x11F9A60 VA: 0x11F9A60
	public QuestBoardListViewItem GetItem() { }

	// RVA: 0x11F9AE4 Offset: 0x11F9AE4 VA: 0x11F9AE4 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x11F9B14 Offset: 0x11F9B14 VA: 0x11F9B14 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x11F9B0C Offset: 0x11F9B0C VA: 0x11F9B0C
	protected void InitItem() { }

	// RVA: 0x11F9B3C Offset: 0x11F9B3C VA: 0x11F9B3C Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x11F99AC Offset: 0x11F99AC VA: 0x11F99AC
	public void Init(QuestBoardListViewObject.InitMode initMode) { }

	// RVA: 0x11F9C44 Offset: 0x11F9C44 VA: 0x11F9C44
	public void Init(QuestBoardListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x11F9CC8 Offset: 0x11F9CC8 VA: 0x11F9CC8
	public void Init(QuestBoardListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x11F9E8C Offset: 0x11F9E8C VA: 0x11F9E8C
	public void SetupDisp() { }

	// RVA: 0x11F9FA0 Offset: 0x11F9FA0 VA: 0x11F9FA0
	public void SetupDispAreaForTerminalTopEffect(bool isBoardDisp, bool isBadgeDisp, bool isBlackMarkOnly, bool isSpecialClosedBanner) { }

	// RVA: 0x11FA0E4 Offset: 0x11FA0E4 VA: 0x11FA0E4
	public void OnChangeAlphaAnim() { }

	// RVA: 0x11FA1E8 Offset: 0x11FA1E8 VA: 0x11FA1E8
	private void Update() { }

	// RVA: 0x11FA2EC Offset: 0x11FA2EC VA: 0x11FA2EC
	private void LateUpdate() { }

	// RVA: 0x11FA3F0 Offset: 0x11FA3F0 VA: 0x11FA3F0
	private void OnPress(bool is_press) { }

	// RVA: 0x11FA540 Offset: 0x11FA540 VA: 0x11FA540
	private void OnDragStart() { }

	// RVA: 0x11FA650 Offset: 0x11FA650 VA: 0x11FA650
	public void SetInfoShowing(bool onOff) { }

	// RVA: 0x11FA688 Offset: 0x11FA688 VA: 0x11FA688
	public void OnClickInfoBtn(bool isOpened = False) { }
}

// Namespace: 
public enum QuestBoardListViewObject.InitMode // TypeDefIndex: 11170
{
	// Fields
	public int value__; // 0x0
	public const QuestBoardListViewObject.InitMode INVISIBLE = 0;
	public const QuestBoardListViewObject.InitMode INVALID = 1;
	public const QuestBoardListViewObject.InitMode VALID = 2;
	public const QuestBoardListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum QuestBoardListViewObject.State // TypeDefIndex: 11171
{
	// Fields
	public int value__; // 0x0
	public const QuestBoardListViewObject.State INIT = 0;
	public const QuestBoardListViewObject.State IDLE = 1;
	public const QuestBoardListViewObject.State INPUT = 2;
}

// Namespace: 
public class QuestDialogIconImageComponent : MonoBehaviour // TypeDefIndex: 11172
{
	// Fields
	protected static readonly Vector3 ITEM_ICON_SIZE; // 0x0
	protected static readonly int INTERVAL_OF_MESSAGE_AND_ITEM_ICON; // 0xC
	[SerializeField] // RVA: 0xC7D5F0 Offset: 0xC7D5F0 VA: 0xC7D5F0
	protected ItemIconWithConsumptionNumberComponent eventItemIcon; // 0x18
	[SerializeField] // RVA: 0xC7D600 Offset: 0xC7D600 VA: 0xC7D600
	private UIGrid itemGrid; // 0x20
	private readonly List<GameObject> mEventItemIconList; // 0x28

	// Methods

	// RVA: 0x11FB6D0 Offset: 0x11FB6D0 VA: 0x11FB6D0
	public void .ctor() { }

	// RVA: 0x11FB740 Offset: 0x11FB740 VA: 0x11FB740
	public void SetIconData(QuestConsumeItemEntity itemConsumeEnt) { }

	// RVA: 0x11FBDC8 Offset: 0x11FBDC8 VA: 0x11FBDC8
	public void DestroyIcon() { }

	// RVA: 0x11FBEC8 Offset: 0x11FBEC8 VA: 0x11FBEC8
	private static void .cctor() { }
}

// Namespace: 
public class QuestInformationComponent : MonoBehaviour // TypeDefIndex: 11173
{
	// Fields
	private static readonly string[][] TabSpriteNames; // 0x0
	private static readonly int BASE_X; // 0x8
	private static readonly int FRAME_OUT_POS_X; // 0xC
	private static readonly int BAR_BASE_OFFSET; // 0x10
	private static readonly float FRAME_IN_OUT_MV_SPD_TIME; // 0x14
	[SerializeField] // RVA: 0xC7D610 Offset: 0xC7D610 VA: 0xC7D610
	private QuestInformationListViewManager listManager; // 0x18
	[SerializeField] // RVA: 0xC7D620 Offset: 0xC7D620 VA: 0xC7D620
	private GameObject window; // 0x20
	[SerializeField] // RVA: 0xC7D630 Offset: 0xC7D630 VA: 0xC7D630
	private GameObject titleBarInfo; // 0x28
	[SerializeField] // RVA: 0xC7D640 Offset: 0xC7D640 VA: 0xC7D640
	private GameObject maskObj; // 0x30
	[SerializeField] // RVA: 0xC7D650 Offset: 0xC7D650 VA: 0xC7D650
	private UILabel tabInfoLabel; // 0x38
	[SerializeField] // RVA: 0xC7D660 Offset: 0xC7D660 VA: 0xC7D660
	private UILabel titleBarInfoLabel; // 0x40
	[SerializeField] // RVA: 0xC7D670 Offset: 0xC7D670 VA: 0xC7D670
	private UISprite baseListTabSp; // 0x48
	[SerializeField] // RVA: 0xC7D680 Offset: 0xC7D680 VA: 0xC7D680
	private UISprite tabLsprite; // 0x50
	[SerializeField] // RVA: 0xC7D690 Offset: 0xC7D690 VA: 0xC7D690
	private UISprite tabRsprite; // 0x58
	private int settedQuestId; // 0x60
	private bool mIsLetAutoOpen; // 0x64
	private bool mSetUpOnUpdate; // 0x65
	private QuestInformationComponent.TabStatus TabOpened; // 0x68
	private QuestInformationComponent.DisplayScene displayScene; // 0x6C
	private QuestInformationComponent.DispAnimState dispAnimState; // 0x70
	private Action customOpen; // 0x78
	private Action customClose; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC7D6A0 Offset: 0xC7D6A0 VA: 0xC7D6A0
	private static Func<ViewEnemyEntity, int> <>f__am$cache0; // 0x18

	// Methods

	// RVA: 0x1200920 Offset: 0x1200920 VA: 0x1200920
	public void .ctor() { }

	// RVA: 0x120094C Offset: 0x120094C VA: 0x120094C
	private void Awake() { }

	// RVA: 0x1200B78 Offset: 0x1200B78 VA: 0x1200B78
	public void OnDisable() { }

	// RVA: 0x1200D10 Offset: 0x1200D10 VA: 0x1200D10
	public void LateUpdate() { }

	// RVA: 0x1201500 Offset: 0x1201500 VA: 0x1201500
	public bool AutoOpen(int questId, QuestInformationComponent.DisplayScene displayScene, Action customOpen, Action customClose) { }

	// RVA: 0x1200D2C Offset: 0x1200D2C VA: 0x1200D2C
	public bool Setup(int questId, QuestInformationComponent.DisplayScene displayScene, Action customOpen, Action customClose) { }

	// RVA: 0x1201F7C Offset: 0x1201F7C VA: 0x1201F7C
	public void OnClickTabL() { }

	// RVA: 0x1202054 Offset: 0x1202054 VA: 0x1202054
	public void OnClickTabR() { }

	// RVA: 0x1202118 Offset: 0x1202118 VA: 0x1202118
	public void OnClickClose() { }

	// RVA: 0x1202120 Offset: 0x1202120 VA: 0x1202120
	public void CloseWindow(bool isPlaySe) { }

	// RVA: 0x1201594 Offset: 0x1201594 VA: 0x1201594
	public void Open() { }

	// RVA: 0x1202220 Offset: 0x1202220 VA: 0x1202220
	public void Close() { }

	// RVA: 0x12022A0 Offset: 0x12022A0 VA: 0x12022A0
	public int Showing() { }

	// RVA: 0x12022A8 Offset: 0x12022A8 VA: 0x12022A8
	public bool isMoving() { }

	// RVA: 0x12022B8 Offset: 0x12022B8 VA: 0x12022B8
	public bool isListBuilding() { }

	// RVA: 0x12022E4 Offset: 0x12022E4 VA: 0x12022E4
	public void SetResetReady() { }

	// RVA: 0x1202258 Offset: 0x1202258 VA: 0x1202258
	public bool FrameIn(bool is_force = False) { }

	// RVA: 0x120227C Offset: 0x120227C VA: 0x120227C
	public bool FrameOut(bool is_force = False) { }

	// RVA: 0x1202314 Offset: 0x1202314 VA: 0x1202314
	private bool FrameInOut(bool is_framein, bool is_force = False) { }

	// RVA: 0x1202674 Offset: 0x1202674 VA: 0x1202674
	public static bool IsDisplayQuestInformation(int targetQuestId) { }

	// RVA: 0x12027A0 Offset: 0x12027A0 VA: 0x12027A0
	public static bool IsDisplayQuestInformation(QuestEntity questEntity) { }

	// RVA: 0x1202800 Offset: 0x1202800 VA: 0x1202800
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3BE0 Offset: 0xCD3BE0 VA: 0xCD3BE0
	// RVA: 0x1202ABC Offset: 0x1202ABC VA: 0x1202ABC
	private static int <Setup>m__0(ViewEnemyEntity value) { }
}

// Namespace: 
private enum QuestInformationComponent.TabStatus // TypeDefIndex: 11174
{
	// Fields
	public int value__; // 0x0
	public const QuestInformationComponent.TabStatus REWARD = 0;
	public const QuestInformationComponent.TabStatus ENEMY = 1;
}

// Namespace: 
public enum QuestInformationComponent.DisplayScene // TypeDefIndex: 11175
{
	// Fields
	public int value__; // 0x0
	public const QuestInformationComponent.DisplayScene NONE = 0;
	public const QuestInformationComponent.DisplayScene TERMINAL = 1;
	public const QuestInformationComponent.DisplayScene PARTY_CHECK = 2;
}

// Namespace: 
private enum QuestInformationComponent.DispAnimState // TypeDefIndex: 11176
{
	// Fields
	public int value__; // 0x0
	public const QuestInformationComponent.DispAnimState IDLE = 0;
	public const QuestInformationComponent.DispAnimState FRAME_IN = 1;
	public const QuestInformationComponent.DispAnimState FRAME_OUT = 2;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45C34 Offset: 0xC45C34 VA: 0xC45C34
private sealed class QuestInformationComponent.<FrameInOut>c__AnonStorey0 // TypeDefIndex: 11177
{
	// Fields
	internal GameObject tgt_obj; // 0x10
	internal MoveObject mo; // 0x18
	internal GameObject tgtTitleBarObj; // 0x20
	internal int offsetX; // 0x28
	internal int tgt_x; // 0x2C
	internal QuestInformationComponent $this; // 0x30

	// Methods

	// RVA: 0x120266C Offset: 0x120266C VA: 0x120266C
	public void .ctor() { }

	// RVA: 0x1202AE4 Offset: 0x1202AE4 VA: 0x1202AE4
	internal void <>m__0() { }

	// RVA: 0x1202BC4 Offset: 0x1202BC4 VA: 0x1202BC4
	internal void <>m__1() { }
}

// Namespace: 
public class QuestInformationListViewItem : ListViewItem // TypeDefIndex: 11178
{
	// Fields
	public QuestInformationListViewItem.InfoType infoType; // 0x70
	protected QuestInformationListViewItem.rewardType mRewardType; // 0x74
	protected QuestInformationListViewItem.EnemyType mEnemyType; // 0x78
	protected int targetId; // 0x7C
	protected int targetCnt; // 0x80
	protected int iconId; // 0x84
	protected int classId; // 0x88
	protected int dispType; // 0x8C
	protected string nameText; // 0x90
	protected bool weeklyMissionTarget; // 0x98
	protected bool limitMissionTarget; // 0x99
	protected bool eventMissionTarget; // 0x9A
	protected bool completeMissionTarget; // 0x9B

	// Properties
	public int TargetId { get; }
	public int TargetCnt { get; }
	public int IconId { get; }
	public int ClassId { get; }
	public int DisplayType { get; }
	public string NameString { get; }
	public bool IsWeeklyMissionTarget { get; }
	public bool IsLimitMissionTarget { get; }
	public bool IsEventMissionTarget { get; }
	public bool IsCompleteMissionTarget { get; }

	// Methods

	// RVA: 0x1202D0C Offset: 0x1202D0C VA: 0x1202D0C
	public void .ctor(int index, QuestInformationListViewItem.rewardType type, int target) { }

	// RVA: 0x1202D50 Offset: 0x1202D50 VA: 0x1202D50
	public void .ctor(int index, ViewEnemyEntity viewEnemyEnt, bool isUnknown = False) { }

	// RVA: 0x1202E60 Offset: 0x1202E60 VA: 0x1202E60 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1202E68 Offset: 0x1202E68 VA: 0x1202E68
	public bool isRewardUndrop() { }

	// RVA: 0x1202E78 Offset: 0x1202E78 VA: 0x1202E78
	public bool isRewardServant() { }

	// RVA: 0x1202E88 Offset: 0x1202E88 VA: 0x1202E88
	public bool isRewardItem() { }

	// RVA: 0x1202E98 Offset: 0x1202E98 VA: 0x1202E98
	public bool isEnemyUnknown() { }

	// RVA: 0x1202EA8 Offset: 0x1202EA8 VA: 0x1202EA8
	public bool isEnemyServant() { }

	// RVA: 0x1202EB8 Offset: 0x1202EB8 VA: 0x1202EB8
	public bool isEnemyNotServant() { }

	// RVA: 0x1202EC8 Offset: 0x1202EC8 VA: 0x1202EC8
	public Gift.Type GetGiftType() { }

	// RVA: 0x1202EDC Offset: 0x1202EDC VA: 0x1202EDC
	public int get_TargetId() { }

	// RVA: 0x1202EE4 Offset: 0x1202EE4 VA: 0x1202EE4
	public int get_TargetCnt() { }

	// RVA: 0x1202EEC Offset: 0x1202EEC VA: 0x1202EEC
	public int get_IconId() { }

	// RVA: 0x1202EF4 Offset: 0x1202EF4 VA: 0x1202EF4
	public int get_ClassId() { }

	// RVA: 0x1202EFC Offset: 0x1202EFC VA: 0x1202EFC
	public int get_DisplayType() { }

	// RVA: 0x1202F04 Offset: 0x1202F04 VA: 0x1202F04
	public string get_NameString() { }

	// RVA: 0x1202F0C Offset: 0x1202F0C VA: 0x1202F0C
	public bool get_IsWeeklyMissionTarget() { }

	// RVA: 0x1202F14 Offset: 0x1202F14 VA: 0x1202F14
	public bool get_IsLimitMissionTarget() { }

	// RVA: 0x1202F1C Offset: 0x1202F1C VA: 0x1202F1C
	public bool get_IsEventMissionTarget() { }

	// RVA: 0x1202F24 Offset: 0x1202F24 VA: 0x1202F24
	public bool get_IsCompleteMissionTarget() { }
}

// Namespace: 
public enum QuestInformationListViewItem.InfoType // TypeDefIndex: 11179
{
	// Fields
	public int value__; // 0x0
	public const QuestInformationListViewItem.InfoType REWARD = 0;
	public const QuestInformationListViewItem.InfoType ENEMY = 1;
}

// Namespace: 
public enum QuestInformationListViewItem.rewardType // TypeDefIndex: 11180
{
	// Fields
	public int value__; // 0x0
	public const QuestInformationListViewItem.rewardType UNDROP = 0;
	public const QuestInformationListViewItem.rewardType SERVANT = 1;
	public const QuestInformationListViewItem.rewardType ITEM = 2;
}

// Namespace: 
public enum QuestInformationListViewItem.EnemyType // TypeDefIndex: 11181
{
	// Fields
	public int value__; // 0x0
	public const QuestInformationListViewItem.EnemyType UNKNOWN = 0;
	public const QuestInformationListViewItem.EnemyType SERVANT = 1;
	public const QuestInformationListViewItem.EnemyType ENEMY = 2;
}

// Namespace: 
public struct QuestInformationListViewItem.MissionTargetState // TypeDefIndex: 11182
{
	// Fields
	public bool IsEventMission; // 0x0
	public bool IsWeeklyMission; // 0x1
	public bool IsLimitMission; // 0x2
	public bool IsCompleteMission; // 0x3
}

// Namespace: 
public class QuestInformationListViewItemDraw : BaseMonoBehaviour // TypeDefIndex: 11183
{
	// Fields
	public static readonly string ENEMY_UNKNOWN_SP; // 0x0
	private static readonly string ENEMY_UNKNOWN_NAME; // 0x8
	private static readonly string ENEMY_ICON_TEXTURE_PATH; // 0x10
	private static readonly string ENEMY_ICON_TEXTURE_PREFIX; // 0x18
	private static readonly int ENEMY_UNKNOWN_CLASSID; // 0x20
	private static readonly int DEF_FONT_SIZE; // 0x24
	protected static readonly Color SHADOW_COLOR; // 0x28
	protected static readonly string DEFAULT_SHADER; // 0x38
	private static readonly float[] TARGET_POSITION; // 0x40
	public GameObject blankImg; // 0x18
	public ItemIconComponent itemIcon; // 0x20
	public UILabel holdNumTitleLb; // 0x28
	public UILabel holdNumCntLb; // 0x30
	public UITexture SvtImg; // 0x38
	public UISpriteAltMat enemySp; // 0x40
	public UILabel textLb; // 0x48
	public ServantClassIconComponent classComp; // 0x50
	[SerializeField] // RVA: 0xC7D6B0 Offset: 0xC7D6B0 VA: 0xC7D6B0
	private UISprite weeklyMissionTarget; // 0x58
	[SerializeField] // RVA: 0xC7D6C0 Offset: 0xC7D6C0 VA: 0xC7D6C0
	private UISprite limitMissionTarget; // 0x60
	[SerializeField] // RVA: 0xC7D6D0 Offset: 0xC7D6D0 VA: 0xC7D6D0
	private UISprite eventMissionTarget; // 0x68
	[SerializeField] // RVA: 0xC7D6E0 Offset: 0xC7D6E0 VA: 0xC7D6E0
	private CompleteMissionSprite completeMissionTarget; // 0x70
	private AssetData enemyIconAssetData; // 0x78
	private string enemyIconName; // 0x80
	[SerializeField] // RVA: 0xC7D6F0 Offset: 0xC7D6F0 VA: 0xC7D6F0
	protected UITexture enemyTexture; // 0x88

	// Methods

	// RVA: 0x1202F2C Offset: 0x1202F2C VA: 0x1202F2C
	public void .ctor() { }

	// RVA: 0x1202F34 Offset: 0x1202F34 VA: 0x1202F34
	private void OnDestroy() { }

	// RVA: 0x1203044 Offset: 0x1203044 VA: 0x1203044
	public void SetItem(QuestInformationListViewItem item, QuestInformationListViewItemDraw.DispMode mode) { }

	// RVA: 0x12046D8 Offset: 0x12046D8 VA: 0x12046D8
	private void UpdateTargetPosition() { }

	// RVA: 0x1204110 Offset: 0x1204110 VA: 0x1204110
	protected void SetDispType(DisplayType.Type dispTp, UISpriteAltMat sp, QuestInformationListViewManager lManager) { }

	// RVA: 0x12042F0 Offset: 0x12042F0 VA: 0x12042F0
	protected void SetDispType(DisplayType.Type dispTp, UITexture texture, QuestInformationListViewManager lManager) { }

	// RVA: 0x1204F30 Offset: 0x1204F30 VA: 0x1204F30
	protected void SetDispTypeEnemyTex(DisplayType.Type dispTp, UITexture texture) { }

	// RVA: 0x1204A5C Offset: 0x1204A5C VA: 0x1204A5C
	protected void LoadEnemyTexture(QuestInformationListViewItem item, Action callback) { }

	// RVA: 0x1202F38 Offset: 0x1202F38 VA: 0x1202F38
	private void ReleaseEnemyTexture() { }

	// RVA: 0x1205038 Offset: 0x1205038 VA: 0x1205038
	private static void .cctor() { }
}

// Namespace: 
public enum QuestInformationListViewItemDraw.DispMode // TypeDefIndex: 11184
{
	// Fields
	public int value__; // 0x0
	public const QuestInformationListViewItemDraw.DispMode INVISIBLE = 0;
	public const QuestInformationListViewItemDraw.DispMode INVALID = 1;
	public const QuestInformationListViewItemDraw.DispMode VALID = 2;
	public const QuestInformationListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45C44 Offset: 0xC45C44 VA: 0xC45C44
private sealed class QuestInformationListViewItemDraw.<SetItem>c__AnonStorey0 // TypeDefIndex: 11185
{
	// Fields
	internal QuestInformationListViewItem item; // 0x10
	internal QuestInformationListViewItemDraw $this; // 0x18

	// Methods

	// RVA: 0x1204108 Offset: 0x1204108 VA: 0x1204108
	public void .ctor() { }

	// RVA: 0x12053AC Offset: 0x12053AC VA: 0x12053AC
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45C54 Offset: 0xC45C54 VA: 0xC45C54
private sealed class QuestInformationListViewItemDraw.<LoadEnemyTexture>c__AnonStorey1 // TypeDefIndex: 11186
{
	// Fields
	internal Action callback; // 0x10
	internal QuestInformationListViewItemDraw $this; // 0x18

	// Methods

	// RVA: 0x1205030 Offset: 0x1205030 VA: 0x1205030
	public void .ctor() { }

	// RVA: 0x1205184 Offset: 0x1205184 VA: 0x1205184
	internal void <>m__0(AssetData assetData) { }
}

// Namespace: 
public class QuestInformationListViewManager : ListViewManager // TypeDefIndex: 11187
{
	// Fields
	private static readonly string CHOCO_SHADER_TX; // 0x0
	private static readonly string CHOCO_SHADER_SP; // 0x8
	protected QuestInformationListViewManager.InitMode initMode; // 0x138
	[SerializeField] // RVA: 0xC7D700 Offset: 0xC7D700 VA: 0xC7D700
	private ListViewItemSeed rewardSeed; // 0x140
	[SerializeField] // RVA: 0xC7D710 Offset: 0xC7D710 VA: 0xC7D710
	private ListViewItemSeed enemySeed; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xC7D720 Offset: 0xC7D720 VA: 0xC7D720
	[DebuggerBrowsableAttribute] // RVA: 0xC7D720 Offset: 0xC7D720 VA: 0xC7D720
	private QuestInformationListViewManager.CallbackFunc callbackFunc; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xC7D75C Offset: 0xC7D75C VA: 0xC7D75C
	[DebuggerBrowsableAttribute] // RVA: 0xC7D75C Offset: 0xC7D75C VA: 0xC7D75C
	private Action callbackFunc2; // 0x158
	protected int callbackCount; // 0x160
	private string[] loadedAssets; // 0x168
	private bool loading; // 0x170
	private bool mIsBuildingList; // 0x171
	private bool mIsResetReady; // 0x172
	private Texture2D mChocoTex; // 0x178
	private Material mChocoMaterialTx; // 0x180
	private Material mChocoMaterialSp; // 0x188
	[CompilerGeneratedAttribute] // RVA: 0xC7D798 Offset: 0xC7D798 VA: 0xC7D798
	private static ItemDetailInfoComponent.CallbackFunc <>f__am$cache0; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC7D7A8 Offset: 0xC7D7A8 VA: 0xC7D7A8
	private static ServantStatusDialog.EndDelegate <>f__am$cache1; // 0x18
