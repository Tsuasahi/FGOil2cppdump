
	// RVA: 0x215EF48 Offset: 0x215EF48 VA: 0x215EF48
	public Vector2 get_effectDistance() { }

	// RVA: 0x215EF54 Offset: 0x215EF54 VA: 0x215EF54
	public void set_effectDistance(Vector2 value) { }

	// RVA: 0x215F004 Offset: 0x215F004 VA: 0x215F004
	public bool get_shrinkToFit() { }

	// RVA: 0x215F014 Offset: 0x215F014 VA: 0x215F014
	public void set_shrinkToFit(bool value) { }

	// RVA: 0x215F034 Offset: 0x215F034 VA: 0x215F034
	public string get_processedText() { }

	// RVA: 0x21527D8 Offset: 0x21527D8 VA: 0x21527D8
	public Vector2 get_printedSize() { }

	// RVA: 0x215F0A4 Offset: 0x215F0A4 VA: 0x215F0A4 Slot: 22
	public override Vector2 get_localSize() { }

	// RVA: 0x215F0E0 Offset: 0x215F0E0 VA: 0x215F0E0
	private bool get_isValid() { }

	// RVA: 0x215F19C Offset: 0x215F19C VA: 0x215F19C Slot: 15
	protected override void OnInit() { }

	// RVA: 0x215F2C8 Offset: 0x215F2C8 VA: 0x215F2C8 Slot: 16
	protected override void OnDisable() { }

	// RVA: 0x215E168 Offset: 0x215E168 VA: 0x215E168
	protected void SetActiveFont(Font fnt) { }

	// RVA: 0x215F36C Offset: 0x215F36C VA: 0x215F36C
	private static void OnFontChanged(Font font) { }

	// RVA: 0x215F750 Offset: 0x215F750 VA: 0x215F750 Slot: 13
	public override Vector3[] GetSides(Transform relativeTo) { }

	// RVA: 0x215F794 Offset: 0x215F794 VA: 0x215F794 Slot: 32
	protected override void UpgradeFrom265() { }

	// RVA: 0x216041C Offset: 0x216041C VA: 0x216041C Slot: 17
	protected override void OnAnchor() { }

	// RVA: 0x215E400 Offset: 0x215E400 VA: 0x215E400
	private void ProcessAndRequest() { }

	// RVA: 0x2160520 Offset: 0x2160520 VA: 0x2160520 Slot: 14
	protected override void OnEnable() { }

	// RVA: 0x2160654 Offset: 0x2160654 VA: 0x2160654 Slot: 20
	protected override void OnStart() { }

	// RVA: 0x2160830 Offset: 0x2160830 VA: 0x2160830 Slot: 30
	public override void MarkAsChanged() { }

	// RVA: 0x215ED38 Offset: 0x215ED38 VA: 0x215ED38
	public void ProcessText() { }

	// RVA: 0x215F954 Offset: 0x215F954 VA: 0x215F954
	private void ProcessText(bool legacyMode, bool full) { }

	// RVA: 0x2161050 Offset: 0x2161050 VA: 0x2161050 Slot: 33
	public override void MakePixelPerfect() { }

	// RVA: 0x2161368 Offset: 0x2161368 VA: 0x2161368
	public void AssumeNaturalSize() { }

	[ObsoleteAttribute] // RVA: 0xD44D14 Offset: 0xD44D14 VA: 0xD44D14
	// RVA: 0x2161494 Offset: 0x2161494 VA: 0x2161494
	public int GetCharacterIndex(Vector3 worldPos) { }

	[ObsoleteAttribute] // RVA: 0xD44D4C Offset: 0xD44D4C VA: 0xD44D4C
	// RVA: 0x216149C Offset: 0x216149C VA: 0x216149C
	public int GetCharacterIndex(Vector2 localPos) { }

	// RVA: 0x215ABB0 Offset: 0x215ABB0 VA: 0x215ABB0
	public int GetCharacterIndexAtPosition(Vector3 worldPos, bool precise) { }

	// RVA: 0x21614A4 Offset: 0x21614A4 VA: 0x21614A4
	public int GetCharacterIndexAtPosition(Vector2 localPos, bool precise) { }

	// RVA: 0x2161AD4 Offset: 0x2161AD4 VA: 0x2161AD4
	public string GetWordAtPosition(Vector3 worldPos) { }

	// RVA: 0x2161CFC Offset: 0x2161CFC VA: 0x2161CFC
	public string GetWordAtPosition(Vector2 localPos) { }

	// RVA: 0x2161B00 Offset: 0x2161B00 VA: 0x2161B00
	public string GetWordAtCharacterIndex(int characterIndex) { }

	// RVA: 0x2161D28 Offset: 0x2161D28 VA: 0x2161D28
	public string GetUrlAtPosition(Vector3 worldPos) { }

	// RVA: 0x2161F9C Offset: 0x2161F9C VA: 0x2161F9C
	public string GetUrlAtPosition(Vector2 localPos) { }

	// RVA: 0x2161D54 Offset: 0x2161D54 VA: 0x2161D54
	public string GetUrlAtCharacterIndex(int characterIndex) { }

	// RVA: 0x2161FC8 Offset: 0x2161FC8 VA: 0x2161FC8
	public int GetCharacterIndex(int currentIndex, KeyCode key) { }

	// RVA: 0x215B16C Offset: 0x215B16C VA: 0x215B16C
	public void PrintOverlay(int start, int end, UIGeometry caret, UIGeometry highlight, Color caretColor, Color highlightColor) { }

	// RVA: 0x21624F0 Offset: 0x21624F0 VA: 0x21624F0 Slot: 38
	public override void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }

	// RVA: 0x216182C Offset: 0x216182C VA: 0x216182C
	public Vector2 ApplyOffset(BetterList<Vector3> verts, int start) { }

	// RVA: 0x2162948 Offset: 0x2162948 VA: 0x2162948
	public void ApplyShadow(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols, int start, int end, float x, float y) { }

	// RVA: 0x215B018 Offset: 0x215B018 VA: 0x215B018
	public int CalculateOffsetToFit(string text) { }

	// RVA: 0x2162E34 Offset: 0x2162E34 VA: 0x2162E34
	public void SetCurrentProgress() { }

	// RVA: 0x2162F14 Offset: 0x2162F14 VA: 0x2162F14
	public void SetCurrentPercent() { }

	// RVA: 0x2163078 Offset: 0x2163078 VA: 0x2163078
	public void SetCurrentSelection() { }

	// RVA: 0x21631C4 Offset: 0x21631C4 VA: 0x21631C4
	public bool Wrap(string text, out string final) { }

	// RVA: 0x21631D0 Offset: 0x21631D0 VA: 0x21631D0
	public bool Wrap(string text, out string final, int height) { }

	// RVA: 0x2160844 Offset: 0x2160844 VA: 0x2160844
	public void UpdateNGUIText() { }

	// RVA: 0x2163294 Offset: 0x2163294 VA: 0x2163294 Slot: 31
	protected override void Awake() { }

	// RVA: 0x21634E4 Offset: 0x21634E4 VA: 0x21634E4
	public void SetDefaultFont() { }

	// RVA: 0x2163728 Offset: 0x2163728 VA: 0x2163728
	public void SetCondensedScale(int maxWidth) { }

	// RVA: 0x2163730 Offset: 0x2163730 VA: 0x2163730
	public void SetCondensedScale(float maxWidth) { }

	// RVA: 0x2163870 Offset: 0x2163870 VA: 0x2163870
	public void SetCurrentPercentFloat() { }

	// RVA: 0x21639E8 Offset: 0x21639E8 VA: 0x21639E8
	private static void .cctor() { }
}

// Namespace: 
public enum UILabel.Effect // TypeDefIndex: 12178
{
	// Fields
	public int value__; // 0x0
	public const UILabel.Effect None = 0;
	public const UILabel.Effect Shadow = 1;
	public const UILabel.Effect Outline = 2;
	public const UILabel.Effect Outline8 = 3;
}

// Namespace: 
public enum UILabel.Overflow // TypeDefIndex: 12179
{
	// Fields
	public int value__; // 0x0
	public const UILabel.Overflow ShrinkContent = 0;
	public const UILabel.Overflow ClampContent = 1;
	public const UILabel.Overflow ResizeFreely = 2;
	public const UILabel.Overflow ResizeHeight = 3;
}

// Namespace: 
public enum UILabel.Crispness // TypeDefIndex: 12180
{
	// Fields
	public int value__; // 0x0
	public const UILabel.Crispness Never = 0;
	public const UILabel.Crispness OnDesktop = 1;
	public const UILabel.Crispness Always = 2;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC991D8 Offset: 0xC991D8 VA: 0xC991D8
[RequireComponent] // RVA: 0xC991D8 Offset: 0xC991D8 VA: 0xC991D8
[AddComponentMenu] // RVA: 0xC991D8 Offset: 0xC991D8 VA: 0xC991D8
public class UILocalize : MonoBehaviour // TypeDefIndex: 12181
{
	// Fields
	public string key; // 0x18
	private bool mStarted; // 0x20

	// Properties
	public string value { set; }

	// Methods

	// RVA: 0x2163D98 Offset: 0x2163D98 VA: 0x2163D98
	public void .ctor() { }

	// RVA: 0x2163DA0 Offset: 0x2163DA0 VA: 0x2163DA0
	public void set_value(string value) { }

	// RVA: 0x2164178 Offset: 0x2164178 VA: 0x2164178
	private void OnEnable() { }

	// RVA: 0x21642DC Offset: 0x21642DC VA: 0x21642DC
	private void Start() { }

	// RVA: 0x2164188 Offset: 0x2164188 VA: 0x2164188
	private void OnLocalize() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC99270 Offset: 0xC99270 VA: 0xC99270
[RequireComponent] // RVA: 0xC99270 Offset: 0xC99270 VA: 0xC99270
[AddComponentMenu] // RVA: 0xC99270 Offset: 0xC99270 VA: 0xC99270
public class UIOrthoCamera : MonoBehaviour // TypeDefIndex: 12182
{
	// Fields
	private Camera mCam; // 0x18
	private Transform mTrans; // 0x20

	// Methods

	// RVA: 0x21AEAF4 Offset: 0x21AEAF4 VA: 0x21AEAF4
	public void .ctor() { }

	// RVA: 0x21AEAFC Offset: 0x21AEAFC VA: 0x21AEAFC
	private void Start() { }

	// RVA: 0x21AEB80 Offset: 0x21AEB80 VA: 0x21AEB80
	private void Update() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC99308 Offset: 0xC99308 VA: 0xC99308
[AddComponentMenu] // RVA: 0xC99308 Offset: 0xC99308 VA: 0xC99308
public class UIRoot : MonoBehaviour // TypeDefIndex: 12183
{
	// Fields
	public static List<UIRoot> list; // 0x0
	public UIRoot.Scaling scalingStyle; // 0x18
	public int manualWidth; // 0x1C
	public int manualHeight; // 0x20
	public int minimumHeight; // 0x24
	public int maximumHeight; // 0x28
	public bool fitWidth; // 0x2C
	public bool fitHeight; // 0x2D
	public bool adjustByDPI; // 0x2E
	public bool shrinkPortraitUI; // 0x2F
	private Transform mTrans; // 0x30

	// Properties
	public UIRoot.Constraint constraint { get; }
	public UIRoot.Scaling activeScaling { get; }
	public int activeHeight { get; }
	public float pixelSizeAdjustment { get; }

	// Methods

	// RVA: 0x21C32E0 Offset: 0x21C32E0 VA: 0x21C32E0
	public void .ctor() { }

	// RVA: 0x21C32FC Offset: 0x21C32FC VA: 0x21C32FC
	public UIRoot.Constraint get_constraint() { }

	// RVA: 0x21C3324 Offset: 0x21C3324 VA: 0x21C3324
	public UIRoot.Scaling get_activeScaling() { }

	// RVA: 0x21C3334 Offset: 0x21C3334 VA: 0x21C3334
	public int get_activeHeight() { }

	// RVA: 0x21B0148 Offset: 0x21B0148 VA: 0x21B0148
	public float get_pixelSizeAdjustment() { }

	// RVA: 0x21C3510 Offset: 0x21C3510 VA: 0x21C3510
	public static float GetPixelSizeAdjustment(GameObject go) { }

	// RVA: 0x21B8008 Offset: 0x21B8008 VA: 0x21B8008
	public float GetPixelSizeAdjustment(int height) { }

	// RVA: 0x21C35E0 Offset: 0x21C35E0 VA: 0x21C35E0 Slot: 4
	protected virtual void Awake() { }

	// RVA: 0x21C3608 Offset: 0x21C3608 VA: 0x21C3608 Slot: 5
	protected virtual void OnEnable() { }

	// RVA: 0x21C3694 Offset: 0x21C3694 VA: 0x21C3694 Slot: 6
	protected virtual void OnDisable() { }

	// RVA: 0x21C3720 Offset: 0x21C3720 VA: 0x21C3720 Slot: 7
	protected virtual void Start() { }

	// RVA: 0x21C3878 Offset: 0x21C3878 VA: 0x21C3878
	private void Update() { }

	// RVA: 0x21C3A20 Offset: 0x21C3A20 VA: 0x21C3A20
	public static void Broadcast(string funcName) { }

	// RVA: 0x21C3B84 Offset: 0x21C3B84 VA: 0x21C3B84
	public static void Broadcast(string funcName, object param) { }

	// RVA: 0x21C3CF4 Offset: 0x21C3CF4 VA: 0x21C3CF4
	private static void .cctor() { }
}

// Namespace: 
public enum UIRoot.Scaling // TypeDefIndex: 12184
{
	// Fields
	public int value__; // 0x0
	public const UIRoot.Scaling Flexible = 0;
	public const UIRoot.Scaling Constrained = 1;
	public const UIRoot.Scaling ConstrainedOnMobiles = 2;
}

// Namespace: 
public enum UIRoot.Constraint // TypeDefIndex: 12185
{
	// Fields
	public int value__; // 0x0
	public const UIRoot.Constraint Fit = 0;
	public const UIRoot.Constraint Fill = 1;
	public const UIRoot.Constraint FitWidth = 2;
	public const UIRoot.Constraint FitHeight = 3;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC99354 Offset: 0xC99354 VA: 0xC99354
[AddComponentMenu] // RVA: 0xC99354 Offset: 0xC99354 VA: 0xC99354
public class UISprite : UIBasicSprite // TypeDefIndex: 12186
{
	// Fields
	[HideInInspector] // RVA: 0xCF2960 Offset: 0xCF2960 VA: 0xCF2960
	[SerializeField] // RVA: 0xCF2960 Offset: 0xCF2960 VA: 0xCF2960
	private UIAtlas mAtlas; // 0x1C8
	[HideInInspector] // RVA: 0xCF2998 Offset: 0xCF2998 VA: 0xCF2998
	[SerializeField] // RVA: 0xCF2998 Offset: 0xCF2998 VA: 0xCF2998
	private string mSpriteName; // 0x1D0
	[HideInInspector] // RVA: 0xCF29D0 Offset: 0xCF29D0 VA: 0xCF29D0
	[SerializeField] // RVA: 0xCF29D0 Offset: 0xCF29D0 VA: 0xCF29D0
	private bool mFillCenter; // 0x1D8
	protected UISpriteData mSprite; // 0x1E0
	private bool mSpriteSet; // 0x1E8

	// Properties
	public override Material material { get; }
	public UIAtlas atlas { get; set; }
	public string spriteName { get; set; }
	public bool isValid { get; }
	[ObsoleteAttribute] // RVA: 0xD4C3AC Offset: 0xD4C3AC VA: 0xD4C3AC
	public bool fillCenter { get; set; }
	public override Vector4 border { get; }
	public override float pixelSize { get; }
	public override int minWidth { get; }
	public override int minHeight { get; }
	public override Vector4 drawingDimensions { get; }
	public override bool premultipliedAlpha { get; }

	// Methods

	// RVA: 0x1D800C0 Offset: 0x1D800C0 VA: 0x1D800C0
	public void .ctor() { }

	// RVA: 0x1D832BC Offset: 0x1D832BC VA: 0x1D832BC Slot: 24
	public override Material get_material() { }

	// RVA: 0x1D8335C Offset: 0x1D8335C VA: 0x1D8335C
	public UIAtlas get_atlas() { }

	// RVA: 0x1D802D0 Offset: 0x1D802D0 VA: 0x1D802D0
	public void set_atlas(UIAtlas value) { }

	// RVA: 0x1D83410 Offset: 0x1D83410 VA: 0x1D83410
	public string get_spriteName() { }

	// RVA: 0x1D804FC Offset: 0x1D804FC VA: 0x1D804FC
	public void set_spriteName(string value) { }

	// RVA: 0x1D83418 Offset: 0x1D83418 VA: 0x1D83418
	public bool get_isValid() { }

	// RVA: 0x1D835F4 Offset: 0x1D835F4 VA: 0x1D835F4
	public bool get_fillCenter() { }

	// RVA: 0x1D83604 Offset: 0x1D83604 VA: 0x1D83604
	public void set_fillCenter(bool value) { }

	// RVA: 0x1D83634 Offset: 0x1D83634 VA: 0x1D83634 Slot: 36
	public override Vector4 get_border() { }

	// RVA: 0x1D836A8 Offset: 0x1D836A8 VA: 0x1D836A8 Slot: 42
	public override float get_pixelSize() { }

	// RVA: 0x1D83748 Offset: 0x1D83748 VA: 0x1D83748 Slot: 34
	public override int get_minWidth() { }

	// RVA: 0x1D83908 Offset: 0x1D83908 VA: 0x1D83908 Slot: 35
	public override int get_minHeight() { }

	// RVA: 0x1D83AC8 Offset: 0x1D83AC8 VA: 0x1D83AC8 Slot: 23
	public override Vector4 get_drawingDimensions() { }

	// RVA: 0x1D83EB4 Offset: 0x1D83EB4 VA: 0x1D83EB4 Slot: 41
	public override bool get_premultipliedAlpha() { }

	// RVA: 0x1D83434 Offset: 0x1D83434 VA: 0x1D83434
	public UISpriteData GetAtlasSprite() { }

	// RVA: 0x1D83364 Offset: 0x1D83364 VA: 0x1D83364
	protected void SetAtlasSprite(UISpriteData sp) { }

	// RVA: 0x1D83F54 Offset: 0x1D83F54 VA: 0x1D83F54 Slot: 33
	public override void MakePixelPerfect() { }

	// RVA: 0x1D84174 Offset: 0x1D84174 VA: 0x1D84174 Slot: 15
	protected override void OnInit() { }

	// RVA: 0x1D84190 Offset: 0x1D84190 VA: 0x1D84190 Slot: 21
	protected override void OnUpdate() { }

	// RVA: 0x1D841D4 Offset: 0x1D841D4 VA: 0x1D841D4 Slot: 38
	public override void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }

	// RVA: 0x1D845F0 Offset: 0x1D845F0 VA: 0x1D845F0
	private void OnDestroy() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC993A0 Offset: 0xC993A0 VA: 0xC993A0
[RequireComponent] // RVA: 0xC993A0 Offset: 0xC993A0 VA: 0xC993A0
[AddComponentMenu] // RVA: 0xC993A0 Offset: 0xC993A0 VA: 0xC993A0
public class UISpriteAnimation : MonoBehaviour // TypeDefIndex: 12187
{
	// Fields
	[HideInInspector] // RVA: 0xCF2A08 Offset: 0xCF2A08 VA: 0xCF2A08
	[SerializeField] // RVA: 0xCF2A08 Offset: 0xCF2A08 VA: 0xCF2A08
	protected int mFPS; // 0x18
	[HideInInspector] // RVA: 0xCF2A40 Offset: 0xCF2A40 VA: 0xCF2A40
	[SerializeField] // RVA: 0xCF2A40 Offset: 0xCF2A40 VA: 0xCF2A40
	protected string mPrefix; // 0x20
	[HideInInspector] // RVA: 0xCF2A78 Offset: 0xCF2A78 VA: 0xCF2A78
	[SerializeField] // RVA: 0xCF2A78 Offset: 0xCF2A78 VA: 0xCF2A78
	protected bool mLoop; // 0x28
	[HideInInspector] // RVA: 0xCF2AB0 Offset: 0xCF2AB0 VA: 0xCF2AB0
	[SerializeField] // RVA: 0xCF2AB0 Offset: 0xCF2AB0 VA: 0xCF2AB0
	protected bool mSnap; // 0x29
	protected UISprite mSprite; // 0x30
	protected float mDelta; // 0x38
	protected int mIndex; // 0x3C
	protected bool mActive; // 0x40
	protected List<string> mSpriteNames; // 0x48

	// Properties
	public int frames { get; }
	public int framesPerSecond { get; set; }
	public string namePrefix { get; set; }
	public bool loop { get; set; }
	public bool isPlaying { get; }

	// Methods

	// RVA: 0x1D84820 Offset: 0x1D84820 VA: 0x1D84820
	public void .ctor() { }

	// RVA: 0x1D848D8 Offset: 0x1D848D8 VA: 0x1D848D8
	public int get_frames() { }

	// RVA: 0x1D84938 Offset: 0x1D84938 VA: 0x1D84938
	public int get_framesPerSecond() { }

	// RVA: 0x1D84940 Offset: 0x1D84940 VA: 0x1D84940
	public void set_framesPerSecond(int value) { }

	// RVA: 0x1D84948 Offset: 0x1D84948 VA: 0x1D84948
	public string get_namePrefix() { }

	// RVA: 0x1D84950 Offset: 0x1D84950 VA: 0x1D84950
	public void set_namePrefix(string value) { }

	// RVA: 0x1D84CA8 Offset: 0x1D84CA8 VA: 0x1D84CA8
	public bool get_loop() { }

	// RVA: 0x1D84CB0 Offset: 0x1D84CB0 VA: 0x1D84CB0
	public void set_loop(bool value) { }

	// RVA: 0x1D84CBC Offset: 0x1D84CBC VA: 0x1D84CBC
	public bool get_isPlaying() { }

	// RVA: 0x1D84CC4 Offset: 0x1D84CC4 VA: 0x1D84CC4 Slot: 4
	protected virtual void Start() { }

	// RVA: 0x1D84CC8 Offset: 0x1D84CC8 VA: 0x1D84CC8 Slot: 5
	protected virtual void Update() { }

	// RVA: 0x1D849EC Offset: 0x1D849EC VA: 0x1D849EC
	public void RebuildSpriteList() { }

	// RVA: 0x1D84E78 Offset: 0x1D84E78 VA: 0x1D84E78
	public void Play() { }

	// RVA: 0x1D84E84 Offset: 0x1D84E84 VA: 0x1D84E84
	public void Pause() { }

	// RVA: 0x1D84E8C Offset: 0x1D84E8C VA: 0x1D84E8C
	public void ResetToBeginning() { }
}

// Namespace: 
[Serializable]
public class UISpriteData // TypeDefIndex: 12188
{
	// Fields
	public string name; // 0x10
	public int x; // 0x18
	public int y; // 0x1C
	public int width; // 0x20
	public int height; // 0x24
	public int borderLeft; // 0x28
	public int borderRight; // 0x2C
	public int borderTop; // 0x30
	public int borderBottom; // 0x34
	public int paddingLeft; // 0x38
	public int paddingRight; // 0x3C
	public int paddingTop; // 0x40
	public int paddingBottom; // 0x44

	// Properties
	public bool hasBorder { get; }
	public bool hasPadding { get; }

	// Methods

	// RVA: 0x1D84FC8 Offset: 0x1D84FC8 VA: 0x1D84FC8
	public void .ctor() { }

	// RVA: 0x1D84154 Offset: 0x1D84154 VA: 0x1D84154
	public bool get_hasBorder() { }

	// RVA: 0x1D85020 Offset: 0x1D85020 VA: 0x1D85020
	public bool get_hasPadding() { }

	// RVA: 0x1D85040 Offset: 0x1D85040 VA: 0x1D85040
	public void SetRect(int x, int y, int width, int height) { }

	// RVA: 0x1D8504C Offset: 0x1D8504C VA: 0x1D8504C
	public void SetPadding(int left, int bottom, int right, int top) { }

	// RVA: 0x1D85058 Offset: 0x1D85058 VA: 0x1D85058
	public void SetBorder(int left, int bottom, int right, int top) { }

	// RVA: 0x1D85064 Offset: 0x1D85064 VA: 0x1D85064
	public void CopyFrom(UISpriteData sd) { }

	// RVA: 0x1D851EC Offset: 0x1D851EC VA: 0x1D851EC
	public void CopyBorderFrom(UISpriteData sd) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC99438 Offset: 0xC99438 VA: 0xC99438
[AddComponentMenu] // RVA: 0xC99438 Offset: 0xC99438 VA: 0xC99438
public class UIStretch : MonoBehaviour // TypeDefIndex: 12189
{
	// Fields
	public Camera uiCamera; // 0x18
	public GameObject container; // 0x20
	public UIStretch.Style style; // 0x28
	public bool runOnlyOnce; // 0x2C
	public Vector2 relativeSize; // 0x30
	public Vector2 initialSize; // 0x38
	public Vector2 borderPadding; // 0x40
	[HideInInspector] // RVA: 0xCF2AE8 Offset: 0xCF2AE8 VA: 0xCF2AE8
	[SerializeField] // RVA: 0xCF2AE8 Offset: 0xCF2AE8 VA: 0xCF2AE8
	private UIWidget widgetContainer; // 0x48
	private Transform mTrans; // 0x50
	private UIWidget mWidget; // 0x58
	private UISprite mSprite; // 0x60
	private UIPanel mPanel; // 0x68
	private UIRoot mRoot; // 0x70
	private Animation mAnim; // 0x78
	private Rect mRect; // 0x80
	private bool mStarted; // 0x90

	// Methods

	// RVA: 0x2020E84 Offset: 0x2020E84 VA: 0x2020E84
	public void .ctor() { }

	// RVA: 0x2020F18 Offset: 0x2020F18 VA: 0x2020F18
	private void Awake() { }

	// RVA: 0x20210AC Offset: 0x20210AC VA: 0x20210AC
	private void OnDestroy() { }

	// RVA: 0x20211CC Offset: 0x20211CC VA: 0x20211CC
	private void ScreenSizeChanged() { }

	// RVA: 0x2021DE8 Offset: 0x2021DE8 VA: 0x2021DE8
	private void Start() { }

	// RVA: 0x20211E4 Offset: 0x20211E4 VA: 0x20211E4
	private void Update() { }
}

// Namespace: 
public enum UIStretch.Style // TypeDefIndex: 12190
{
	// Fields
	public int value__; // 0x0
	public const UIStretch.Style None = 0;
	public const UIStretch.Style Horizontal = 1;
	public const UIStretch.Style Vertical = 2;
	public const UIStretch.Style Both = 3;
	public const UIStretch.Style BasedOnHeight = 4;
	public const UIStretch.Style FillKeepingRatio = 5;
	public const UIStretch.Style FitInternalKeepingRatio = 6;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC99484 Offset: 0xC99484 VA: 0xC99484
public class UITextList : MonoBehaviour // TypeDefIndex: 12191
{
	// Fields
	public UILabel textLabel; // 0x18
	public UIProgressBar scrollBar; // 0x20
	public UITextList.Style style; // 0x28
	public int paragraphHistory; // 0x2C
	protected char[] mSeparator; // 0x30
	protected BetterList<UITextList.Paragraph> mParagraphs; // 0x38
	protected float mScroll; // 0x40
	protected int mTotalLines; // 0x44
	protected int mLastWidth; // 0x48
	protected int mLastHeight; // 0x4C

	// Properties
	public bool isValid { get; }
	public float scrollValue { get; set; }
	protected float lineHeight { get; }
	protected int scrollHeight { get; }

	// Methods

	// RVA: 0x2023C20 Offset: 0x2023C20 VA: 0x2023C20
	public void .ctor() { }

	// RVA: 0x2023CDC Offset: 0x2023CDC VA: 0x2023CDC
	public bool get_isValid() { }

	// RVA: 0x2023DB8 Offset: 0x2023DB8 VA: 0x2023DB8
	public float get_scrollValue() { }

	// RVA: 0x2023DC0 Offset: 0x2023DC0 VA: 0x2023DC0
	public void set_scrollValue(float value) { }

	// RVA: 0x2024204 Offset: 0x2024204 VA: 0x2024204
	protected float get_lineHeight() { }

	// RVA: 0x20242C8 Offset: 0x20242C8 VA: 0x20242C8
	protected int get_scrollHeight() { }

	// RVA: 0x2024390 Offset: 0x2024390 VA: 0x2024390
	public void Clear() { }

	// RVA: 0x20243F8 Offset: 0x20243F8 VA: 0x20243F8
	private void Start() { }

	// RVA: 0x2024894 Offset: 0x2024894 VA: 0x2024894
	private void Update() { }

	// RVA: 0x2024CD4 Offset: 0x2024CD4 VA: 0x2024CD4
	public void OnScroll(float val) { }

	// RVA: 0x2024D38 Offset: 0x2024D38 VA: 0x2024D38
	public void OnDrag(Vector2 delta) { }

	// RVA: 0x2024D9C Offset: 0x2024D9C VA: 0x2024D9C
	private void OnScrollBar() { }

	// RVA: 0x2024E10 Offset: 0x2024E10 VA: 0x2024E10
	public void Add(string text) { }

	// RVA: 0x2024E18 Offset: 0x2024E18 VA: 0x2024E18
	protected void Add(string text, bool updateVisible) { }

	// RVA: 0x2024948 Offset: 0x2024948 VA: 0x2024948
	protected void Rebuild() { }

	// RVA: 0x2023ED0 Offset: 0x2023ED0 VA: 0x2023ED0
	protected void UpdateVisibleText() { }
}

// Namespace: 
public enum UITextList.Style // TypeDefIndex: 12192
{
	// Fields
	public int value__; // 0x0
	public const UITextList.Style Text = 0;
	public const UITextList.Style Chat = 1;
}

// Namespace: 
protected class UITextList.Paragraph // TypeDefIndex: 12193
{
	// Fields
	public string text; // 0x10
	public string[] lines; // 0x18

	// Methods

	// RVA: 0x2024F38 Offset: 0x2024F38 VA: 0x2024F38
	public void .ctor() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC994BC Offset: 0xC994BC VA: 0xC994BC
[AddComponentMenu] // RVA: 0xC994BC Offset: 0xC994BC VA: 0xC994BC
public class UITexture : UIBasicSprite // TypeDefIndex: 12194
{
	// Fields
	[HideInInspector] // RVA: 0xCF2B20 Offset: 0xCF2B20 VA: 0xCF2B20
	[SerializeField] // RVA: 0xCF2B20 Offset: 0xCF2B20 VA: 0xCF2B20
	private Rect mRect; // 0x1C8
	[HideInInspector] // RVA: 0xCF2B58 Offset: 0xCF2B58 VA: 0xCF2B58
	[SerializeField] // RVA: 0xCF2B58 Offset: 0xCF2B58 VA: 0xCF2B58
	private Texture mTexture; // 0x1D8
	[HideInInspector] // RVA: 0xCF2B90 Offset: 0xCF2B90 VA: 0xCF2B90
	[SerializeField] // RVA: 0xCF2B90 Offset: 0xCF2B90 VA: 0xCF2B90
	private Material mMat; // 0x1E0
	[HideInInspector] // RVA: 0xCF2BC8 Offset: 0xCF2BC8 VA: 0xCF2BC8
	[SerializeField] // RVA: 0xCF2BC8 Offset: 0xCF2BC8 VA: 0xCF2BC8
	private Shader mShader; // 0x1E8
	[HideInInspector] // RVA: 0xCF2C00 Offset: 0xCF2C00 VA: 0xCF2C00
	[SerializeField] // RVA: 0xCF2C00 Offset: 0xCF2C00 VA: 0xCF2C00
	private Vector4 mBorder; // 0x1F0
	[HideInInspector] // RVA: 0xCF2C38 Offset: 0xCF2C38 VA: 0xCF2C38
	[SerializeField] // RVA: 0xCF2C38 Offset: 0xCF2C38 VA: 0xCF2C38
	private bool mFixedAspect; // 0x200
	private int mPMA; // 0x204

	// Properties
	public override Texture mainTexture { get; set; }
	public override Material material { get; set; }
	public override Shader shader { get; set; }
	public override bool premultipliedAlpha { get; }
	public override Vector4 border { get; set; }
	public Rect uvRect { get; set; }
	public override Vector4 drawingDimensions { get; }
	public bool fixedAspect { get; set; }

	// Methods

	// RVA: 0x2024F40 Offset: 0x2024F40 VA: 0x2024F40
	public void .ctor() { }

	// RVA: 0x2025030 Offset: 0x2025030 VA: 0x2025030 Slot: 26
	public override Texture get_mainTexture() { }

	// RVA: 0x2025118 Offset: 0x2025118 VA: 0x2025118 Slot: 27
	public override void set_mainTexture(Texture value) { }

	// RVA: 0x202531C Offset: 0x202531C VA: 0x202531C Slot: 24
	public override Material get_material() { }

	// RVA: 0x2025324 Offset: 0x2025324 VA: 0x2025324 Slot: 25
	public override void set_material(Material value) { }

	// RVA: 0x20253DC Offset: 0x20253DC VA: 0x20253DC Slot: 28
	public override Shader get_shader() { }

	// RVA: 0x20254D4 Offset: 0x20254D4 VA: 0x20254D4 Slot: 29
	public override void set_shader(Shader value) { }

	// RVA: 0x2025638 Offset: 0x2025638 VA: 0x2025638 Slot: 41
	public override bool get_premultipliedAlpha() { }

	// RVA: 0x2025798 Offset: 0x2025798 VA: 0x2025798 Slot: 36
	public override Vector4 get_border() { }

	// RVA: 0x20257AC Offset: 0x20257AC VA: 0x20257AC Slot: 37
	public override void set_border(Vector4 value) { }

	// RVA: 0x20258B4 Offset: 0x20258B4 VA: 0x20258B4
	public Rect get_uvRect() { }

	// RVA: 0x20258C8 Offset: 0x20258C8 VA: 0x20258C8
	public void set_uvRect(Rect value) { }

	// RVA: 0x2025968 Offset: 0x2025968 VA: 0x2025968 Slot: 23
	public override Vector4 get_drawingDimensions() { }

	// RVA: 0x2025C28 Offset: 0x2025C28 VA: 0x2025C28
	public bool get_fixedAspect() { }

	// RVA: 0x2025C30 Offset: 0x2025C30 VA: 0x2025C30
	public void set_fixedAspect(bool value) { }

	// RVA: 0x2025CBC Offset: 0x2025CBC VA: 0x2025CBC Slot: 33
	public override void MakePixelPerfect() { }

	// RVA: 0x20260EC Offset: 0x20260EC VA: 0x20260EC Slot: 21
	protected override void OnUpdate() { }

	// RVA: 0x2026408 Offset: 0x2026408 VA: 0x2026408 Slot: 38
	public override void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC99508 Offset: 0xC99508 VA: 0xC99508
public class UITooltip : MonoBehaviour // TypeDefIndex: 12195
{
	// Fields
	protected static UITooltip mInstance; // 0x0
	public Camera uiCamera; // 0x18
	public UILabel text; // 0x20
	public UISprite background; // 0x28
	public float appearSpeed; // 0x30
	public bool scalingTransitions; // 0x34
	protected GameObject mHover; // 0x38
	protected Transform mTrans; // 0x40
	protected float mTarget; // 0x48
	protected float mCurrent; // 0x4C
	protected Vector3 mPos; // 0x50
	protected Vector3 mSize; // 0x5C
	protected UIWidget[] mWidgets; // 0x68

	// Properties
	public static bool isVisible { get; }

	// Methods

	// RVA: 0x2028334 Offset: 0x2028334 VA: 0x2028334
	public void .ctor() { }

	// RVA: 0x20283BC Offset: 0x20283BC VA: 0x20283BC
	public static bool get_isVisible() { }

	// RVA: 0x2028470 Offset: 0x2028470 VA: 0x2028470
	private void Awake() { }

	// RVA: 0x20284C4 Offset: 0x20284C4 VA: 0x20284C4
	private void OnDestroy() { }

	// RVA: 0x2028514 Offset: 0x2028514 VA: 0x2028514 Slot: 4
	protected virtual void Start() { }

	// RVA: 0x2028644 Offset: 0x2028644 VA: 0x2028644 Slot: 5
	protected virtual void Update() { }

	// RVA: 0x20288D4 Offset: 0x20288D4 VA: 0x20288D4 Slot: 6
	protected virtual void SetAlpha(float val) { }

	// RVA: 0x2028A48 Offset: 0x2028A48 VA: 0x2028A48 Slot: 7
	protected virtual void SetText(string tooltipText) { }

	[ObsoleteAttribute] // RVA: 0xD44D84 Offset: 0xD44D84 VA: 0xD44D84
	// RVA: 0x2029128 Offset: 0x2029128 VA: 0x2029128
	public static void ShowText(string text) { }

	// RVA: 0x20291F0 Offset: 0x20291F0 VA: 0x20291F0
	public static void Show(string text) { }

	// RVA: 0x20292B8 Offset: 0x20292B8 VA: 0x20292B8
	public static void Hide() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC99540 Offset: 0xC99540 VA: 0xC99540
[RequireComponent] // RVA: 0xC99540 Offset: 0xC99540 VA: 0xC99540
[AddComponentMenu] // RVA: 0xC99540 Offset: 0xC99540 VA: 0xC99540
public class UIViewport : MonoBehaviour // TypeDefIndex: 12196
{
	// Fields
	public Camera sourceCamera; // 0x18
	public Transform topLeft; // 0x20
	public Transform bottomRight; // 0x28
	public float fullSize; // 0x30
	private Camera mCam; // 0x38

	// Methods

	// RVA: 0x20307F8 Offset: 0x20307F8 VA: 0x20307F8
	public void .ctor() { }

	// RVA: 0x2030808 Offset: 0x2030808 VA: 0x2030808
	private void Start() { }

	// RVA: 0x20308A4 Offset: 0x20308A4 VA: 0x20308A4
	private void LateUpdate() { }
}

// Namespace: 
public class UIUnityRenderer : UIWidget // TypeDefIndex: 12197
{
	// Fields
	public bool allowSharedMaterial; // 0x180
	[HideInInspector] // RVA: 0xCF2C70 Offset: 0xCF2C70 VA: 0xCF2C70
	[SerializeField] // RVA: 0xCF2C70 Offset: 0xCF2C70 VA: 0xCF2C70
	private Renderer mRenderer; // 0x188
	[HideInInspector] // RVA: 0xCF2CA8 Offset: 0xCF2CA8 VA: 0xCF2CA8
	[SerializeField] // RVA: 0xCF2CA8 Offset: 0xCF2CA8 VA: 0xCF2CA8
	private int renderQueue; // 0x190
	[HideInInspector] // RVA: 0xCF2CE0 Offset: 0xCF2CE0 VA: 0xCF2CE0
	[SerializeField] // RVA: 0xCF2CE0 Offset: 0xCF2CE0 VA: 0xCF2CE0
	private Material[] mMats; // 0x198
	private bool createMat; // 0x1A0

	// Properties
	public Renderer cachedRenderer { get; }
	public override Material material { get; set; }
	public override Shader shader { get; set; }

	// Methods

	// RVA: 0x202AC50 Offset: 0x202AC50 VA: 0x202AC50
	public void .ctor() { }

	// RVA: 0x202AC5C Offset: 0x202AC5C VA: 0x202AC5C
	public Renderer get_cachedRenderer() { }

	// RVA: 0x202ACF4 Offset: 0x202ACF4 VA: 0x202ACF4 Slot: 24
	public override Material get_material() { }

	// RVA: 0x202B378 Offset: 0x202B378 VA: 0x202B378 Slot: 25
	public override void set_material(Material value) { }

	// RVA: 0x202B24C Offset: 0x202B24C VA: 0x202B24C
	public bool isEqualMaterials(Material[] a, Material[] b) { }

	// RVA: 0x202B43C Offset: 0x202B43C VA: 0x202B43C Slot: 28
	public override Shader get_shader() { }

	// RVA: 0x202B4F4 Offset: 0x202B4F4 VA: 0x202B4F4 Slot: 29
	public override void set_shader(Shader value) { }

	// RVA: 0x202B0C0 Offset: 0x202B0C0 VA: 0x202B0C0
	private bool ExistSharedMaterial0() { }

	// RVA: 0x202B17C Offset: 0x202B17C VA: 0x202B17C
	private bool CheckMaterial(Material[] mats) { }

	// RVA: 0x202B5B8 Offset: 0x202B5B8 VA: 0x202B5B8
	private void OnDestroy() { }

	// RVA: 0x202B6E0 Offset: 0x202B6E0 VA: 0x202B6E0
	private void OnWillRenderObject() { }

	// RVA: 0x202B9B4 Offset: 0x202B9B4 VA: 0x202B9B4 Slot: 38
	public override void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC995D8 Offset: 0xC995D8 VA: 0xC995D8
[TooltipAttribute] // RVA: 0xC995D8 Offset: 0xC995D8 VA: 0xC995D8
public class NguiPlayTween : FsmStateAction // TypeDefIndex: 12198
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCF2D18 Offset: 0xCF2D18 VA: 0xCF2D18
	[CheckForComponentAttribute] // RVA: 0xCF2D18 Offset: 0xCF2D18 VA: 0xCF2D18
	[TooltipAttribute] // RVA: 0xCF2D18 Offset: 0xCF2D18 VA: 0xCF2D18
	public FsmOwnerDefault tweenTarget; // 0x50
	[TooltipAttribute] // RVA: 0xCF2DB0 Offset: 0xCF2DB0 VA: 0xCF2DB0
	public FsmInt tweenGroup; // 0x58
	[TooltipAttribute] // RVA: 0xCF2DE8 Offset: 0xCF2DE8 VA: 0xCF2DE8
	public Direction playDirection; // 0x60
	[TooltipAttribute] // RVA: 0xCF2E20 Offset: 0xCF2E20 VA: 0xCF2E20
	public FsmBool resetOnPlay; // 0x68
	[TooltipAttribute] // RVA: 0xCF2E58 Offset: 0xCF2E58 VA: 0xCF2E58
	public FsmBool resetIfDisabled; // 0x70
	[TooltipAttribute] // RVA: 0xCF2E90 Offset: 0xCF2E90 VA: 0xCF2E90
	public EnableCondition ifDisabledOnPlay; // 0x78
	[TooltipAttribute] // RVA: 0xCF2EC8 Offset: 0xCF2EC8 VA: 0xCF2EC8
	public DisableCondition disableWhenFinished; // 0x7C
	[TooltipAttribute] // RVA: 0xCF2F00 Offset: 0xCF2F00 VA: 0xCF2F00
	public FsmBool includeChildren; // 0x80
	[TooltipAttribute] // RVA: 0xCF2F38 Offset: 0xCF2F38 VA: 0xCF2F38
	public FsmEvent tweeningFinishedEvent; // 0x88
	private UITweener[] mTweens; // 0x90
	private GameObject _tweenTarget; // 0x98
	private int mActive; // 0xA0

	// Methods

	// RVA: 0x20F7F08 Offset: 0x20F7F08 VA: 0x20F7F08
	public void .ctor() { }

	// RVA: 0x20F7F10 Offset: 0x20F7F10 VA: 0x20F7F10 Slot: 28
	public override void Reset() { }

	// RVA: 0x20F7F60 Offset: 0x20F7F60 VA: 0x20F7F60 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20F842C Offset: 0x20F842C VA: 0x20F842C Slot: 34
