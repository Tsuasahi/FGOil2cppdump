	public float value { get; set; }

	// Methods

	// RVA: 0x189B034 Offset: 0x189B034 VA: 0x189B034
	public void .ctor() { }

	// RVA: 0x189B044 Offset: 0x189B044 VA: 0x189B044
	public float get_alpha() { }

	// RVA: 0x189B1AC Offset: 0x189B1AC VA: 0x189B1AC
	public void set_alpha(float value) { }

	// RVA: 0x189B3BC Offset: 0x189B3BC VA: 0x189B3BC
	private void Cache() { }

	// RVA: 0x189B048 Offset: 0x189B048 VA: 0x189B048
	public float get_value() { }

	// RVA: 0x189B1B0 Offset: 0x189B1B0 VA: 0x189B1B0
	public void set_value(float value) { }

	// RVA: 0x189B558 Offset: 0x189B558 VA: 0x189B558 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x18931C4 Offset: 0x18931C4 VA: 0x18931C4
	public static TweenAlpha Begin(GameObject go, float duration, float alpha) { }

	// RVA: 0x189B5E8 Offset: 0x189B5E8 VA: 0x189B5E8 Slot: 6
	public override void SetStartToCurrentValue() { }

	// RVA: 0x189B60C Offset: 0x189B60C VA: 0x189B60C Slot: 7
	public override void SetEndToCurrentValue() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2CB78 Offset: 0xC2CB78 VA: 0xC2CB78
public class TweenColor : UITweener // TypeDefIndex: 12187
{
	// Fields
	public Color from; // 0x78
	public Color to; // 0x88
	private bool mCached; // 0x98
	private UIWidget mWidget; // 0xA0
	private Material mMat; // 0xA8
	private Light mLight; // 0xB0
	private SpriteRenderer mSr; // 0xB8

	// Properties
	[ObsoleteAttribute] // RVA: 0xCDEDA0 Offset: 0xCDEDA0 VA: 0xCDEDA0
	public Color color { get; set; }
	public Color value { get; set; }

	// Methods

	// RVA: 0x189B630 Offset: 0x189B630 VA: 0x189B630
	public void .ctor() { }

	// RVA: 0x189B674 Offset: 0x189B674 VA: 0x189B674
	private void Cache() { }

	// RVA: 0x189B824 Offset: 0x189B824 VA: 0x189B824
	public Color get_color() { }

	// RVA: 0x189B9EC Offset: 0x189B9EC VA: 0x189B9EC
	public void set_color(Color value) { }

	// RVA: 0x189B828 Offset: 0x189B828 VA: 0x189B828
	public Color get_value() { }

	// RVA: 0x189B9F0 Offset: 0x189B9F0 VA: 0x189B9F0
	public void set_value(Color value) { }

	// RVA: 0x189BC64 Offset: 0x189BC64 VA: 0x189BC64 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x189BCAC Offset: 0x189BCAC VA: 0x189BCAC
	public static TweenColor Begin(GameObject go, float duration, Color color) { }

	[ContextMenu] // RVA: 0xCD7348 Offset: 0xCD7348 VA: 0xCD7348
	// RVA: 0x189BDDC Offset: 0x189BDDC VA: 0x189BDDC Slot: 6
	public override void SetStartToCurrentValue() { }

	[ContextMenu] // RVA: 0xCD7380 Offset: 0xCD7380 VA: 0xCD7380
	// RVA: 0x189BE04 Offset: 0x189BE04 VA: 0x189BE04 Slot: 7
	public override void SetEndToCurrentValue() { }

	[ContextMenu] // RVA: 0xCD73B8 Offset: 0xCD73B8 VA: 0xCD73B8
	// RVA: 0x189BE2C Offset: 0x189BE2C VA: 0x189BE2C
	private void SetCurrentValueToStart() { }

	[ContextMenu] // RVA: 0xCD73F0 Offset: 0xCD73F0 VA: 0xCD73F0
	// RVA: 0x189BE38 Offset: 0x189BE38 VA: 0x189BE38
	private void SetCurrentValueToEnd() { }
}

// Namespace: 
[RequireComponent] // RVA: 0xC2CBB0 Offset: 0xC2CBB0 VA: 0xC2CBB0
[AddComponentMenu] // RVA: 0xC2CBB0 Offset: 0xC2CBB0 VA: 0xC2CBB0
public class TweenFOV : UITweener // TypeDefIndex: 12188
{
	// Fields
	public float from; // 0x78
	public float to; // 0x7C
	private Camera mCam; // 0x80

	// Properties
	public Camera cachedCamera { get; }
	[ObsoleteAttribute] // RVA: 0xCDEDD8 Offset: 0xCDEDD8 VA: 0xCDEDD8
	public float fov { get; set; }
	public float value { get; set; }

	// Methods

	// RVA: 0x189BE44 Offset: 0x189BE44 VA: 0x189BE44
	public void .ctor() { }

	// RVA: 0x189BE58 Offset: 0x189BE58 VA: 0x189BE58
	public Camera get_cachedCamera() { }

	// RVA: 0x189BEF0 Offset: 0x189BEF0 VA: 0x189BEF0
	public float get_fov() { }

	// RVA: 0x189BF24 Offset: 0x189BF24 VA: 0x189BF24
	public void set_fov(float value) { }

	// RVA: 0x189BEF4 Offset: 0x189BEF4 VA: 0x189BEF4
	public float get_value() { }

	// RVA: 0x189BF28 Offset: 0x189BF28 VA: 0x189BF28
	public void set_value(float value) { }

	// RVA: 0x189BF68 Offset: 0x189BF68 VA: 0x189BF68 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x189BF84 Offset: 0x189BF84 VA: 0x189BF84
	public static TweenFOV Begin(GameObject go, float duration, float to) { }

	[ContextMenu] // RVA: 0xCD7428 Offset: 0xCD7428 VA: 0xCD7428
	// RVA: 0x189C068 Offset: 0x189C068 VA: 0x189C068 Slot: 6
	public override void SetStartToCurrentValue() { }

	[ContextMenu] // RVA: 0xCD7460 Offset: 0xCD7460 VA: 0xCD7460
	// RVA: 0x189C08C Offset: 0x189C08C VA: 0x189C08C Slot: 7
	public override void SetEndToCurrentValue() { }

	[ContextMenu] // RVA: 0xCD7498 Offset: 0xCD7498 VA: 0xCD7498
	// RVA: 0x189C0B0 Offset: 0x189C0B0 VA: 0x189C0B0
	private void SetCurrentValueToStart() { }

	[ContextMenu] // RVA: 0xCD74D0 Offset: 0xCD74D0 VA: 0xCD74D0
	// RVA: 0x189C0B8 Offset: 0x189C0B8 VA: 0x189C0B8
	private void SetCurrentValueToEnd() { }
}

// Namespace: 
[RequireComponent] // RVA: 0xC2CC38 Offset: 0xC2CC38 VA: 0xC2CC38
[AddComponentMenu] // RVA: 0xC2CC38 Offset: 0xC2CC38 VA: 0xC2CC38
public class TweenHeight : UITweener // TypeDefIndex: 12189
{
	// Fields
	public int from; // 0x78
	public int to; // 0x7C
	public bool updateTable; // 0x80
	private UIWidget mWidget; // 0x88
	private UITable mTable; // 0x90

	// Properties
	public UIWidget cachedWidget { get; }
	[ObsoleteAttribute] // RVA: 0xCDEE10 Offset: 0xCDEE10 VA: 0xCDEE10
	public int height { get; set; }
	public int value { get; set; }

	// Methods

	// RVA: 0x189C0C0 Offset: 0x189C0C0 VA: 0x189C0C0
	public void .ctor() { }

	// RVA: 0x189C0D4 Offset: 0x189C0D4 VA: 0x189C0D4
	public UIWidget get_cachedWidget() { }

	// RVA: 0x189C16C Offset: 0x189C16C VA: 0x189C16C
	public int get_height() { }

	// RVA: 0x189C1A0 Offset: 0x189C1A0 VA: 0x189C1A0
	public void set_height(int value) { }

	// RVA: 0x189C170 Offset: 0x189C170 VA: 0x189C170
	public int get_value() { }

	// RVA: 0x189C1A4 Offset: 0x189C1A4 VA: 0x189C1A4
	public void set_value(int value) { }

	// RVA: 0x189C1DC Offset: 0x189C1DC VA: 0x189C1DC Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x18930C8 Offset: 0x18930C8 VA: 0x18930C8
	public static TweenHeight Begin(UIWidget widget, float duration, int height) { }

	[ContextMenu] // RVA: 0xCD7508 Offset: 0xCD7508 VA: 0xCD7508
	// RVA: 0x189C374 Offset: 0x189C374 VA: 0x189C374 Slot: 6
	public override void SetStartToCurrentValue() { }

	[ContextMenu] // RVA: 0xCD7540 Offset: 0xCD7540 VA: 0xCD7540
	// RVA: 0x189C398 Offset: 0x189C398 VA: 0x189C398 Slot: 7
	public override void SetEndToCurrentValue() { }

	[ContextMenu] // RVA: 0xCD7578 Offset: 0xCD7578 VA: 0xCD7578
	// RVA: 0x189C3BC Offset: 0x189C3BC VA: 0x189C3BC
	private void SetCurrentValueToStart() { }

	[ContextMenu] // RVA: 0xCD75B0 Offset: 0xCD75B0 VA: 0xCD75B0
	// RVA: 0x189C3C4 Offset: 0x189C3C4 VA: 0x189C3C4
	private void SetCurrentValueToEnd() { }
}

// Namespace: 
[RequireComponent] // RVA: 0xC2CCC0 Offset: 0xC2CCC0 VA: 0xC2CCC0
[AddComponentMenu] // RVA: 0xC2CCC0 Offset: 0xC2CCC0 VA: 0xC2CCC0
public class TweenOrthoSize : UITweener // TypeDefIndex: 12190
{
	// Fields
	public float from; // 0x78
	public float to; // 0x7C
	private Camera mCam; // 0x80

	// Properties
	public Camera cachedCamera { get; }
	[ObsoleteAttribute] // RVA: 0xCDEE48 Offset: 0xCDEE48 VA: 0xCDEE48
	public float orthoSize { get; set; }
	public float value { get; set; }

	// Methods

	// RVA: 0x189C3CC Offset: 0x189C3CC VA: 0x189C3CC
	public void .ctor() { }

	// RVA: 0x189C3DC Offset: 0x189C3DC VA: 0x189C3DC
	public Camera get_cachedCamera() { }

	// RVA: 0x189C474 Offset: 0x189C474 VA: 0x189C474
	public float get_orthoSize() { }

	// RVA: 0x189C4A8 Offset: 0x189C4A8 VA: 0x189C4A8
	public void set_orthoSize(float value) { }

	// RVA: 0x189C478 Offset: 0x189C478 VA: 0x189C478
	public float get_value() { }

	// RVA: 0x189C4AC Offset: 0x189C4AC VA: 0x189C4AC
	public void set_value(float value) { }

	// RVA: 0x189C4EC Offset: 0x189C4EC VA: 0x189C4EC Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x189C508 Offset: 0x189C508 VA: 0x189C508
	public static TweenOrthoSize Begin(GameObject go, float duration, float to) { }

	// RVA: 0x189C5EC Offset: 0x189C5EC VA: 0x189C5EC Slot: 6
	public override void SetStartToCurrentValue() { }

	// RVA: 0x189C610 Offset: 0x189C610 VA: 0x189C610 Slot: 7
	public override void SetEndToCurrentValue() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2CD48 Offset: 0xC2CD48 VA: 0xC2CD48
public class TweenPosition : UITweener // TypeDefIndex: 12191
{
	// Fields
	public Vector3 from; // 0x78
	public Vector3 to; // 0x84
	[HideInInspector] // RVA: 0xC85630 Offset: 0xC85630 VA: 0xC85630
	public bool worldSpace; // 0x90
	private Transform mTrans; // 0x98
	private UIRect mRect; // 0xA0

	// Properties
	public Transform cachedTransform { get; }
	[ObsoleteAttribute] // RVA: 0xCDEE80 Offset: 0xCDEE80 VA: 0xCDEE80
	public Vector3 position { get; set; }
	public Vector3 value { get; set; }

	// Methods

	// RVA: 0x189C634 Offset: 0x189C634 VA: 0x189C634
	public void .ctor() { }

	// RVA: 0x189C63C Offset: 0x189C63C VA: 0x189C63C
	public Transform get_cachedTransform() { }

	// RVA: 0x189C6CC Offset: 0x189C6CC VA: 0x189C6CC
	public Vector3 get_position() { }

	// RVA: 0x189C720 Offset: 0x189C720 VA: 0x189C720
	public void set_position(Vector3 value) { }

	// RVA: 0x189C6D0 Offset: 0x189C6D0 VA: 0x189C6D0
	public Vector3 get_value() { }

	// RVA: 0x189C724 Offset: 0x189C724 VA: 0x189C724
	public void set_value(Vector3 value) { }

	// RVA: 0x189C8D4 Offset: 0x189C8D4 VA: 0x189C8D4
	private void Awake() { }

	// RVA: 0x189C92C Offset: 0x189C92C VA: 0x189C92C Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x189CA0C Offset: 0x189CA0C VA: 0x189CA0C
	public static TweenPosition Begin(GameObject go, float duration, Vector3 pos) { }

	// RVA: 0x189CB20 Offset: 0x189CB20 VA: 0x189CB20
	public static TweenPosition Begin(GameObject go, float duration, Vector3 pos, bool worldSpace) { }

	[ContextMenu] // RVA: 0xCD75E8 Offset: 0xCD75E8 VA: 0xCD75E8
	// RVA: 0x189CC60 Offset: 0x189CC60 VA: 0x189CC60 Slot: 6
	public override void SetStartToCurrentValue() { }

	[ContextMenu] // RVA: 0xCD7620 Offset: 0xCD7620 VA: 0xCD7620
	// RVA: 0x189CC88 Offset: 0x189CC88 VA: 0x189CC88 Slot: 7
	public override void SetEndToCurrentValue() { }

	[ContextMenu] // RVA: 0xCD7658 Offset: 0xCD7658 VA: 0xCD7658
	// RVA: 0x189CCB0 Offset: 0x189CCB0 VA: 0x189CCB0
	private void SetCurrentValueToStart() { }

	[ContextMenu] // RVA: 0xCD7690 Offset: 0xCD7690 VA: 0xCD7690
	// RVA: 0x189CCBC Offset: 0x189CCBC VA: 0x189CCBC
	private void SetCurrentValueToEnd() { }
}

// Namespace: 
public class TweenPositionSync : TweenPosition // TypeDefIndex: 12192
{
	// Fields
	private bool forward; // 0xA8

	// Methods

	// RVA: 0x189CCC8 Offset: 0x189CCC8 VA: 0x189CCC8
	public void .ctor() { }

	// RVA: 0x189CCD8 Offset: 0x189CCD8 VA: 0x189CCD8
	private void LateUpdate() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2CD80 Offset: 0xC2CD80 VA: 0xC2CD80
public class TweenRotation : UITweener // TypeDefIndex: 12193
{
	// Fields
	public Vector3 from; // 0x78
	public Vector3 to; // 0x84
	public bool quaternionLerp; // 0x90
	private Transform mTrans; // 0x98

	// Properties
	public Transform cachedTransform { get; }
	[ObsoleteAttribute] // RVA: 0xCDEEB8 Offset: 0xCDEEB8 VA: 0xCDEEB8
	public Quaternion rotation { get; set; }
	public Quaternion value { get; set; }

	// Methods

	// RVA: 0x189D520 Offset: 0x189D520 VA: 0x189D520
	public void .ctor() { }

	// RVA: 0x189D528 Offset: 0x189D528 VA: 0x189D528
	public Transform get_cachedTransform() { }

	// RVA: 0x189D5B8 Offset: 0x189D5B8 VA: 0x189D5B8
	public Quaternion get_rotation() { }

	// RVA: 0x189D5EC Offset: 0x189D5EC VA: 0x189D5EC
	public void set_rotation(Quaternion value) { }

	// RVA: 0x189D5BC Offset: 0x189D5BC VA: 0x189D5BC
	public Quaternion get_value() { }

	// RVA: 0x189D5F0 Offset: 0x189D5F0 VA: 0x189D5F0
	public void set_value(Quaternion value) { }

	// RVA: 0x189D650 Offset: 0x189D650 VA: 0x189D650 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x189D810 Offset: 0x189D810 VA: 0x189D810
	public static TweenRotation Begin(GameObject go, float duration, Quaternion rot) { }

	[ContextMenu] // RVA: 0xCD76C8 Offset: 0xCD76C8 VA: 0xCD76C8
	// RVA: 0x189D934 Offset: 0x189D934 VA: 0x189D934 Slot: 6
	public override void SetStartToCurrentValue() { }

	[ContextMenu] // RVA: 0xCD7700 Offset: 0xCD7700 VA: 0xCD7700
	// RVA: 0x189D978 Offset: 0x189D978 VA: 0x189D978 Slot: 7
	public override void SetEndToCurrentValue() { }

	[ContextMenu] // RVA: 0xCD7738 Offset: 0xCD7738 VA: 0xCD7738
	// RVA: 0x189D9BC Offset: 0x189D9BC VA: 0x189D9BC
	private void SetCurrentValueToStart() { }

	[ContextMenu] // RVA: 0xCD7770 Offset: 0xCD7770 VA: 0xCD7770
	// RVA: 0x189DA4C Offset: 0x189DA4C VA: 0x189DA4C
	private void SetCurrentValueToEnd() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2CDB8 Offset: 0xC2CDB8 VA: 0xC2CDB8
public class TweenScale : UITweener // TypeDefIndex: 12194
{
	// Fields
	public Vector3 from; // 0x78
	public Vector3 to; // 0x84
	public bool updateTable; // 0x90
	private Transform mTrans; // 0x98
	private UITable mTable; // 0xA0

	// Properties
	public Transform cachedTransform { get; }
	public Vector3 value { get; set; }
	[ObsoleteAttribute] // RVA: 0xCDEEF0 Offset: 0xCDEEF0 VA: 0xCDEEF0
	public Vector3 scale { get; set; }

	// Methods

	// RVA: 0x189DADC Offset: 0x189DADC VA: 0x189DADC
	public void .ctor() { }

	// RVA: 0x189DB64 Offset: 0x189DB64 VA: 0x189DB64
	public Transform get_cachedTransform() { }

	// RVA: 0x189DBF4 Offset: 0x189DBF4 VA: 0x189DBF4
	public Vector3 get_value() { }

	// RVA: 0x189DC24 Offset: 0x189DC24 VA: 0x189DC24
	public void set_value(Vector3 value) { }

	// RVA: 0x189DC7C Offset: 0x189DC7C VA: 0x189DC7C
	public Vector3 get_scale() { }

	// RVA: 0x189DC80 Offset: 0x189DC80 VA: 0x189DC80
	public void set_scale(Vector3 value) { }

	// RVA: 0x189DC84 Offset: 0x189DC84 VA: 0x189DC84 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x189DE64 Offset: 0x189DE64 VA: 0x189DE64
	public static TweenScale Begin(GameObject go, float duration, Vector3 scale) { }

	[ContextMenu] // RVA: 0xCD77A8 Offset: 0xCD77A8 VA: 0xCD77A8
	// RVA: 0x189DF78 Offset: 0x189DF78 VA: 0x189DF78 Slot: 6
	public override void SetStartToCurrentValue() { }

	[ContextMenu] // RVA: 0xCD77E0 Offset: 0xCD77E0 VA: 0xCD77E0
	// RVA: 0x189DFA0 Offset: 0x189DFA0 VA: 0x189DFA0 Slot: 7
	public override void SetEndToCurrentValue() { }

	[ContextMenu] // RVA: 0xCD7818 Offset: 0xCD7818 VA: 0xCD7818
	// RVA: 0x189DFC8 Offset: 0x189DFC8 VA: 0x189DFC8
	private void SetCurrentValueToStart() { }

	[ContextMenu] // RVA: 0xCD7850 Offset: 0xCD7850 VA: 0xCD7850
	// RVA: 0x189DFD4 Offset: 0x189DFD4 VA: 0x189DFD4
	private void SetCurrentValueToEnd() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2CDF0 Offset: 0xC2CDF0 VA: 0xC2CDF0
public class TweenTransform : UITweener // TypeDefIndex: 12195
{
	// Fields
	public Transform from; // 0x78
	public Transform to; // 0x80
	public bool parentWhenFinished; // 0x88
	private Transform mTrans; // 0x90
	private Vector3 mPos; // 0x98
	private Quaternion mRot; // 0xA4
	private Vector3 mScale; // 0xB4

	// Methods

	// RVA: 0x2127218 Offset: 0x2127218 VA: 0x2127218
	public void .ctor() { }

	// RVA: 0x2127220 Offset: 0x2127220 VA: 0x2127220 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x2127854 Offset: 0x2127854 VA: 0x2127854
	public static TweenTransform Begin(GameObject go, float duration, Transform to) { }

	// RVA: 0x2127864 Offset: 0x2127864 VA: 0x2127864
	public static TweenTransform Begin(GameObject go, float duration, Transform from, Transform to) { }
}

// Namespace: 
[RequireComponent] // RVA: 0xC2CE28 Offset: 0xC2CE28 VA: 0xC2CE28
[AddComponentMenu] // RVA: 0xC2CE28 Offset: 0xC2CE28 VA: 0xC2CE28
public class TweenVolume : UITweener // TypeDefIndex: 12196
{
	// Fields
	[RangeAttribute] // RVA: 0xC85640 Offset: 0xC85640 VA: 0xC85640
	public float from; // 0x78
	[RangeAttribute] // RVA: 0xC85658 Offset: 0xC85658 VA: 0xC85658
	public float to; // 0x7C
	private AudioSource mSource; // 0x80

	// Properties
	public AudioSource audioSource { get; }
	[ObsoleteAttribute] // RVA: 0xCDEF28 Offset: 0xCDEF28 VA: 0xCDEF28
	public float volume { get; set; }
	public float value { get; set; }

	// Methods

	// RVA: 0x2127930 Offset: 0x2127930 VA: 0x2127930
	public void .ctor() { }

	// RVA: 0x2127940 Offset: 0x2127940 VA: 0x2127940
	public AudioSource get_audioSource() { }

	// RVA: 0x2127A5C Offset: 0x2127A5C VA: 0x2127A5C
	public float get_volume() { }

	// RVA: 0x2127B0C Offset: 0x2127B0C VA: 0x2127B0C
	public void set_volume(float value) { }

	// RVA: 0x2127A60 Offset: 0x2127A60 VA: 0x2127A60
	public float get_value() { }

	// RVA: 0x2127B10 Offset: 0x2127B10 VA: 0x2127B10
	public void set_value(float value) { }

	// RVA: 0x2127BCC Offset: 0x2127BCC VA: 0x2127BCC Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x2127C60 Offset: 0x2127C60 VA: 0x2127C60
	public static TweenVolume Begin(GameObject go, float duration, float targetVolume) { }

	// RVA: 0x2127D10 Offset: 0x2127D10 VA: 0x2127D10 Slot: 6
	public override void SetStartToCurrentValue() { }

	// RVA: 0x2127D34 Offset: 0x2127D34 VA: 0x2127D34 Slot: 7
	public override void SetEndToCurrentValue() { }
}

// Namespace: 
[RequireComponent] // RVA: 0xC2CEB0 Offset: 0xC2CEB0 VA: 0xC2CEB0
[AddComponentMenu] // RVA: 0xC2CEB0 Offset: 0xC2CEB0 VA: 0xC2CEB0
public class TweenWidth : UITweener // TypeDefIndex: 12197
{
	// Fields
	public int from; // 0x78
	public int to; // 0x7C
	public bool updateTable; // 0x80
	private UIWidget mWidget; // 0x88
	private UITable mTable; // 0x90

	// Properties
	public UIWidget cachedWidget { get; }
	[ObsoleteAttribute] // RVA: 0xCDEF60 Offset: 0xCDEF60 VA: 0xCDEF60
	public int width { get; set; }
	public int value { get; set; }

	// Methods

	// RVA: 0x2127D58 Offset: 0x2127D58 VA: 0x2127D58
	public void .ctor() { }

	// RVA: 0x2127D6C Offset: 0x2127D6C VA: 0x2127D6C
	public UIWidget get_cachedWidget() { }

	// RVA: 0x2127E04 Offset: 0x2127E04 VA: 0x2127E04
	public int get_width() { }

	// RVA: 0x2127E38 Offset: 0x2127E38 VA: 0x2127E38
	public void set_width(int value) { }

	// RVA: 0x2127E08 Offset: 0x2127E08 VA: 0x2127E08
	public int get_value() { }

	// RVA: 0x2127E3C Offset: 0x2127E3C VA: 0x2127E3C
	public void set_value(int value) { }

	// RVA: 0x2127E74 Offset: 0x2127E74 VA: 0x2127E74 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x212800C Offset: 0x212800C VA: 0x212800C
	public static TweenWidth Begin(UIWidget widget, float duration, int width) { }

	[ContextMenu] // RVA: 0xCD7888 Offset: 0xCD7888 VA: 0xCD7888
	// RVA: 0x2128108 Offset: 0x2128108 VA: 0x2128108 Slot: 6
	public override void SetStartToCurrentValue() { }

	[ContextMenu] // RVA: 0xCD78C0 Offset: 0xCD78C0 VA: 0xCD78C0
	// RVA: 0x212812C Offset: 0x212812C VA: 0x212812C Slot: 7
	public override void SetEndToCurrentValue() { }

	[ContextMenu] // RVA: 0xCD78F8 Offset: 0xCD78F8 VA: 0xCD78F8
	// RVA: 0x2128150 Offset: 0x2128150 VA: 0x2128150
	private void SetCurrentValueToStart() { }

	[ContextMenu] // RVA: 0xCD7930 Offset: 0xCD7930 VA: 0xCD7930
	// RVA: 0x2128158 Offset: 0x2128158 VA: 0x2128158
	private void SetCurrentValueToEnd() { }
}

// Namespace: 
public abstract class UITweener : MonoBehaviour // TypeDefIndex: 12198
{
	// Fields
	public static UITweener current; // 0x0
	[HideInInspector] // RVA: 0xC85670 Offset: 0xC85670 VA: 0xC85670
	public UITweener.Method method; // 0x18
	[HideInInspector] // RVA: 0xC85680 Offset: 0xC85680 VA: 0xC85680
	public UITweener.Style style; // 0x1C
	[HideInInspector] // RVA: 0xC85690 Offset: 0xC85690 VA: 0xC85690
	public AnimationCurve animationCurve; // 0x20
	[HideInInspector] // RVA: 0xC856A0 Offset: 0xC856A0 VA: 0xC856A0
	public bool ignoreTimeScale; // 0x28
	[HideInInspector] // RVA: 0xC856B0 Offset: 0xC856B0 VA: 0xC856B0
	public float delay; // 0x2C
	[HideInInspector] // RVA: 0xC856C0 Offset: 0xC856C0 VA: 0xC856C0
	public float duration; // 0x30
	[HideInInspector] // RVA: 0xC856D0 Offset: 0xC856D0 VA: 0xC856D0
	public bool steeperCurves; // 0x34
	[HideInInspector] // RVA: 0xC856E0 Offset: 0xC856E0 VA: 0xC856E0
	public int tweenGroup; // 0x38
	[HideInInspector] // RVA: 0xC856F0 Offset: 0xC856F0 VA: 0xC856F0
	public List<EventDelegate> onFinished; // 0x40
	[HideInInspector] // RVA: 0xC85700 Offset: 0xC85700 VA: 0xC85700
	public GameObject eventReceiver; // 0x48
	[HideInInspector] // RVA: 0xC85710 Offset: 0xC85710 VA: 0xC85710
	public string callWhenFinished; // 0x50
	private bool mStarted; // 0x58
	private float mStartTime; // 0x5C
	private float mDuration; // 0x60
	private float mAmountPerDelta; // 0x64
	private float mFactor; // 0x68
	private List<EventDelegate> mTemp; // 0x70

	// Properties
	public float amountPerDelta { get; }
	public float tweenFactor { get; set; }
	public Direction direction { get; }

	// Methods

	// RVA: 0x1AEE680 Offset: 0x1AEE680 VA: 0x1AEE680
	protected void .ctor() { }

	// RVA: 0x1AEE804 Offset: 0x1AEE804 VA: 0x1AEE804
	public float get_amountPerDelta() { }

	// RVA: 0x1AEE8B8 Offset: 0x1AEE8B8 VA: 0x1AEE8B8
	public float get_tweenFactor() { }

	// RVA: 0x1AEE8C0 Offset: 0x1AEE8C0 VA: 0x1AEE8C0
	public void set_tweenFactor(float value) { }

	// RVA: 0x1AEE93C Offset: 0x1AEE93C VA: 0x1AEE93C
	public Direction get_direction() { }

	// RVA: 0x1AEE95C Offset: 0x1AEE95C VA: 0x1AEE95C
	private void Reset() { }

	// RVA: 0x1AEE9A8 Offset: 0x1AEE9A8 VA: 0x1AEE9A8 Slot: 4
	protected virtual void Start() { }

	// RVA: 0x1AEE9AC Offset: 0x1AEE9AC VA: 0x1AEE9AC
	private void Update() { }

	// RVA: 0x1AEF09C Offset: 0x1AEF09C VA: 0x1AEF09C
	public void SetOnFinished(EventDelegate.Callback del) { }

	// RVA: 0x1AEF118 Offset: 0x1AEF118 VA: 0x1AEF118
	public void SetOnFinished(EventDelegate del) { }

	// RVA: 0x1AEF194 Offset: 0x1AEF194 VA: 0x1AEF194
	public void AddOnFinished(EventDelegate.Callback del) { }

	// RVA: 0x1AEF210 Offset: 0x1AEF210 VA: 0x1AEF210
	public void AddOnFinished(EventDelegate del) { }

	// RVA: 0x1AEF28C Offset: 0x1AEF28C VA: 0x1AEF28C
	public void RemoveOnFinished(EventDelegate del) { }

	// RVA: 0x1AEF31C Offset: 0x1AEF31C VA: 0x1AEF31C
	private void OnDisable() { }

	// RVA: 0x1AEEE68 Offset: 0x1AEEE68 VA: 0x1AEEE68
	public void Sample(float factor, bool isFinished) { }

	// RVA: 0x1AEF324 Offset: 0x1AEF324 VA: 0x1AEF324
	private float BounceLogic(float val) { }

	[ObsoleteAttribute] // RVA: 0xCD7968 Offset: 0xCD7968 VA: 0xCD7968
	// RVA: 0x1AEF3E4 Offset: 0x1AEF3E4 VA: 0x1AEF3E4
	public void Play() { }

	// RVA: 0x1AEF494 Offset: 0x1AEF494 VA: 0x1AEF494
	public void PlayForward() { }

	// RVA: 0x1AEF49C Offset: 0x1AEF49C VA: 0x1AEF49C
	public void PlayReverse() { }

	// RVA: 0x1AEF3EC Offset: 0x1AEF3EC VA: 0x1AEF3EC
	public void Play(bool forward) { }

	// RVA: 0x1AEF4A4 Offset: 0x1AEF4A4 VA: 0x1AEF4A4
	public void ResetToBeginning() { }

	// RVA: 0x1AEF4FC Offset: 0x1AEF4FC VA: 0x1AEF4FC
	public void Toggle() { }

	// RVA: -1 Offset: -1 Slot: 5
	protected abstract void OnUpdate(float factor, bool isFinished);

	// RVA: -1 Offset: -1
	public static T Begin<T>(GameObject go, float duration) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C300D4 Offset: 0x1C300D4 VA: 0x1C300D4
	|-UITweener.Begin<object>
	|-UITweener.Begin<TweenAlpha>
	|-UITweener.Begin<TweenColor>
	|-UITweener.Begin<TweenFOV>
	|-UITweener.Begin<TweenHeight>
	|-UITweener.Begin<TweenOrthoSize>
	|-UITweener.Begin<TweenPosition>
	|-UITweener.Begin<TweenRenderVolume>
	|-UITweener.Begin<TweenRendererColor>
	|-UITweener.Begin<TweenRotation>
	|-UITweener.Begin<TweenScale>
	|-UITweener.Begin<TweenTransform>
	|-UITweener.Begin<TweenVolume>
	|-UITweener.Begin<TweenWidth>
	*/

	// RVA: 0x1AEF598 Offset: 0x1AEF598 VA: 0x1AEF598 Slot: 6
	public virtual void SetStartToCurrentValue() { }

	// RVA: 0x1AEF59C Offset: 0x1AEF59C VA: 0x1AEF59C Slot: 7
	public virtual void SetEndToCurrentValue() { }

	// RVA: 0x1AEF5A0 Offset: 0x1AEF5A0 VA: 0x1AEF5A0 Slot: 8
	public virtual bool SynchronizeTween(UITweener tween) { }
}

// Namespace: 
public enum UITweener.Method // TypeDefIndex: 12199
{
	// Fields
	public int value__; // 0x0
	public const UITweener.Method Linear = 0;
	public const UITweener.Method EaseIn = 1;
	public const UITweener.Method EaseOut = 2;
	public const UITweener.Method EaseInOut = 3;
	public const UITweener.Method BounceIn = 4;
	public const UITweener.Method BounceOut = 5;
	public const UITweener.Method EaseOutQuad = 6;
}

// Namespace: 
public enum UITweener.Style // TypeDefIndex: 12200
{
	// Fields
	public int value__; // 0x0
	public const UITweener.Style Once = 0;
	public const UITweener.Style Loop = 1;
	public const UITweener.Style PingPong = 2;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2CF38 Offset: 0xC2CF38 VA: 0xC2CF38
[AddComponentMenu] // RVA: 0xC2CF38 Offset: 0xC2CF38 VA: 0xC2CF38
public class UI2DSprite : UIBasicSprite // TypeDefIndex: 12201
{
	// Fields
	[HideInInspector] // RVA: 0xC85720 Offset: 0xC85720 VA: 0xC85720
	[SerializeField] // RVA: 0xC85720 Offset: 0xC85720 VA: 0xC85720
	private Sprite mSprite; // 0x1C8
	[HideInInspector] // RVA: 0xC85758 Offset: 0xC85758 VA: 0xC85758
	[SerializeField] // RVA: 0xC85758 Offset: 0xC85758 VA: 0xC85758
	private Material mMat; // 0x1D0
	[HideInInspector] // RVA: 0xC85790 Offset: 0xC85790 VA: 0xC85790
	[SerializeField] // RVA: 0xC85790 Offset: 0xC85790 VA: 0xC85790
	private Shader mShader; // 0x1D8
	[HideInInspector] // RVA: 0xC857C8 Offset: 0xC857C8 VA: 0xC857C8
	[SerializeField] // RVA: 0xC857C8 Offset: 0xC857C8 VA: 0xC857C8
	private Vector4 mBorder; // 0x1E0
	[HideInInspector] // RVA: 0xC85800 Offset: 0xC85800 VA: 0xC85800
	[SerializeField] // RVA: 0xC85800 Offset: 0xC85800 VA: 0xC85800
	private bool mFixedAspect; // 0x1F0
	[HideInInspector] // RVA: 0xC85838 Offset: 0xC85838 VA: 0xC85838
	[SerializeField] // RVA: 0xC85838 Offset: 0xC85838 VA: 0xC85838
	private float mPixelSize; // 0x1F4
	public Sprite nextSprite; // 0x1F8
	private int mPMA; // 0x200

	// Properties
	public Sprite sprite2D { get; set; }
	public override Material material { get; set; }
	public override Shader shader { get; set; }
	public override Texture mainTexture { get; }
	public override bool premultipliedAlpha { get; }
	public override float pixelSize { get; }
	public override Vector4 drawingDimensions { get; }
	public override Vector4 border { get; set; }

	// Methods

	// RVA: 0x2128E3C Offset: 0x2128E3C VA: 0x2128E3C
	public void .ctor() { }

	// RVA: 0x2128F64 Offset: 0x2128F64 VA: 0x2128F64
	public Sprite get_sprite2D() { }

	// RVA: 0x2128F6C Offset: 0x2128F6C VA: 0x2128F6C
	public void set_sprite2D(Sprite value) { }

	// RVA: 0x212901C Offset: 0x212901C VA: 0x212901C Slot: 24
	public override Material get_material() { }

	// RVA: 0x2129024 Offset: 0x2129024 VA: 0x2129024 Slot: 25
	public override void set_material(Material value) { }

	// RVA: 0x21290E0 Offset: 0x21290E0 VA: 0x21290E0 Slot: 28
	public override Shader get_shader() { }

	// RVA: 0x21291D8 Offset: 0x21291D8 VA: 0x21291D8 Slot: 29
	public override void set_shader(Shader value) { }

	// RVA: 0x21292C4 Offset: 0x21292C4 VA: 0x21292C4 Slot: 26
	public override Texture get_mainTexture() { }

	// RVA: 0x21293C4 Offset: 0x21293C4 VA: 0x21293C4 Slot: 41
	public override bool get_premultipliedAlpha() { }

	// RVA: 0x21294B8 Offset: 0x21294B8 VA: 0x21294B8 Slot: 42
	public override float get_pixelSize() { }

	// RVA: 0x21294C0 Offset: 0x21294C0 VA: 0x21294C0 Slot: 23
	public override Vector4 get_drawingDimensions() { }

	// RVA: 0x2129A0C Offset: 0x2129A0C VA: 0x2129A0C Slot: 36
	public override Vector4 get_border() { }

	// RVA: 0x2129A20 Offset: 0x2129A20 VA: 0x2129A20 Slot: 37
	public override void set_border(Vector4 value) { }

	// RVA: 0x2129B28 Offset: 0x2129B28 VA: 0x2129B28 Slot: 21
	protected override void OnUpdate() { }

	// RVA: 0x2129F48 Offset: 0x2129F48 VA: 0x2129F48 Slot: 33
	public override void MakePixelPerfect() { }

	// RVA: 0x212A16C Offset: 0x212A16C VA: 0x212A16C Slot: 38
	public override void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }
}

// Namespace: 
public class UI2DSpriteAnimation : MonoBehaviour // TypeDefIndex: 12202
{
	// Fields
	[SerializeField] // RVA: 0xC85870 Offset: 0xC85870 VA: 0xC85870
	protected int framerate; // 0x18
	public bool ignoreTimeScale; // 0x1C
	public bool loop; // 0x1D
	public Sprite[] frames; // 0x20
	private SpriteRenderer mUnitySprite; // 0x28
	private UI2DSprite mNguiSprite; // 0x30
	private int mIndex; // 0x38
	private float mUpdate; // 0x3C

	// Properties
	public bool isPlaying { get; }
	public int framesPerSecond { get; set; }

	// Methods

	// RVA: 0x212A638 Offset: 0x212A638 VA: 0x212A638
	public void .ctor() { }

	// RVA: 0x212A650 Offset: 0x212A650 VA: 0x212A650
	public bool get_isPlaying() { }

	// RVA: 0x212A658 Offset: 0x212A658 VA: 0x212A658
	public int get_framesPerSecond() { }

	// RVA: 0x212A660 Offset: 0x212A660 VA: 0x212A660
	public void set_framesPerSecond(int value) { }

	// RVA: 0x212A668 Offset: 0x212A668 VA: 0x212A668
	public void Play() { }

	// RVA: 0x212AA18 Offset: 0x212AA18 VA: 0x212AA18
	public void Pause() { }

	// RVA: 0x212AA24 Offset: 0x212AA24 VA: 0x212AA24
	public void ResetToBeginning() { }

	// RVA: 0x212AA70 Offset: 0x212AA70 VA: 0x212AA70
	private void Start() { }

	// RVA: 0x212AA74 Offset: 0x212AA74 VA: 0x212AA74
	private void Update() { }

	// RVA: 0x212A740 Offset: 0x212A740 VA: 0x212A740
	private void UpdateSprite() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2CF84 Offset: 0xC2CF84 VA: 0xC2CF84
[AddComponentMenu] // RVA: 0xC2CF84 Offset: 0xC2CF84 VA: 0xC2CF84
public class UIAnchor : MonoBehaviour // TypeDefIndex: 12203
{
	// Fields
	public Camera uiCamera; // 0x18
	public GameObject container; // 0x20
	public UIAnchor.Side side; // 0x28
	public bool runOnlyOnce; // 0x2C
	public Vector2 relativeOffset; // 0x30
	public Vector2 pixelOffset; // 0x38
	[HideInInspector] // RVA: 0xC85880 Offset: 0xC85880 VA: 0xC85880
	[SerializeField] // RVA: 0xC85880 Offset: 0xC85880 VA: 0xC85880
	private UIWidget widgetContainer; // 0x40
	private Transform mTrans; // 0x48
	private Animation mAnim; // 0x50
	private Rect mRect; // 0x58
	private UIRoot mRoot; // 0x68
	private bool mStarted; // 0x70

	// Methods

	// RVA: 0x212B3AC Offset: 0x212B3AC VA: 0x212B3AC
	public void .ctor() { }

	// RVA: 0x212B440 Offset: 0x212B440 VA: 0x212B440
	private void Awake() { }

	// RVA: 0x212B588 Offset: 0x212B588 VA: 0x212B588
	private void OnDestroy() { }

	// RVA: 0x212B6A8 Offset: 0x212B6A8 VA: 0x212B6A8
	private void ScreenSizeChanged() { }

	// RVA: 0x212C340 Offset: 0x212C340 VA: 0x212C340
	private void Start() { }

	// RVA: 0x212B6C0 Offset: 0x212B6C0 VA: 0x212B6C0
	private void Update() { }
}

// Namespace: 
public enum UIAnchor.Side // TypeDefIndex: 12204
{
	// Fields
	public int value__; // 0x0
	public const UIAnchor.Side BottomLeft = 0;
	public const UIAnchor.Side Left = 1;
	public const UIAnchor.Side TopLeft = 2;
	public const UIAnchor.Side Top = 3;
	public const UIAnchor.Side TopRight = 4;
	public const UIAnchor.Side Right = 5;
	public const UIAnchor.Side BottomRight = 6;
	public const UIAnchor.Side Bottom = 7;
	public const UIAnchor.Side Center = 8;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2CFD0 Offset: 0xC2CFD0 VA: 0xC2CFD0
public class UIAtlas : MonoBehaviour // TypeDefIndex: 12205
{
	// Fields
	[HideInInspector] // RVA: 0xC858B8 Offset: 0xC858B8 VA: 0xC858B8
	[SerializeField] // RVA: 0xC858B8 Offset: 0xC858B8 VA: 0xC858B8
	private Material material; // 0x18
	[HideInInspector] // RVA: 0xC858F0 Offset: 0xC858F0 VA: 0xC858F0
	[SerializeField] // RVA: 0xC858F0 Offset: 0xC858F0 VA: 0xC858F0
	private List<UISpriteData> mSprites; // 0x20
	[HideInInspector] // RVA: 0xC85928 Offset: 0xC85928 VA: 0xC85928
	[SerializeField] // RVA: 0xC85928 Offset: 0xC85928 VA: 0xC85928
	private float mPixelSize; // 0x28
	[HideInInspector] // RVA: 0xC85960 Offset: 0xC85960 VA: 0xC85960
	[SerializeField] // RVA: 0xC85960 Offset: 0xC85960 VA: 0xC85960
	private UIAtlas mReplacement; // 0x30
	[HideInInspector] // RVA: 0xC85998 Offset: 0xC85998 VA: 0xC85998
	[SerializeField] // RVA: 0xC85998 Offset: 0xC85998 VA: 0xC85998
	private UIAtlas.Coordinates mCoordinates; // 0x38
	[HideInInspector] // RVA: 0xC859D0 Offset: 0xC859D0 VA: 0xC859D0
	[SerializeField] // RVA: 0xC859D0 Offset: 0xC859D0 VA: 0xC859D0
	private List<UIAtlas.Sprite> sprites; // 0x40
	private int mPMA; // 0x48
	private Dictionary<string, int> mSpriteIndices; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xC85A08 Offset: 0xC85A08 VA: 0xC85A08
	private static Comparison<UISpriteData> <>f__am$cache0; // 0x0

	// Properties
	public Material spriteMaterial { get; set; }
	public bool premultipliedAlpha { get; }
