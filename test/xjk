	public void SetRandomPositionList(Vector3[] positionList) { }

	// RVA: 0x11F4B2C Offset: 0x11F4B2C VA: 0x11F4B2C
	public void Set3dRegion(CriAtomEx3dRegion region3d) { }

	// RVA: 0x11F4C38 Offset: 0x11F4C38 VA: 0x11F4C38
	public void SetListenerBasedElevationAngleAisacControlId(ushort aisacControlId) { }

	// RVA: 0x11F4CEC Offset: 0x11F4CEC VA: 0x11F4CEC
	public void SetSourceBasedElevationAngleAisacControlId(ushort aisacControlId) { }

	// RVA: 0x11F4DA0 Offset: 0x11F4DA0 VA: 0x11F4DA0 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x11F3A2C Offset: 0x11F3A2C VA: 0x11F3A2C
	private static extern IntPtr criAtomEx3dSource_Create(ref CriAtomEx3dSource.Config config, IntPtr work, int work_size) { }

	// RVA: 0x11F3BC4 Offset: 0x11F3BC4 VA: 0x11F3BC4
	private static extern void criAtomEx3dSource_Destroy(IntPtr ex_3d_source) { }

	// RVA: 0x11F3C70 Offset: 0x11F3C70 VA: 0x11F3C70
	private static extern void criAtomEx3dSource_Update(IntPtr ex_3d_source) { }

	// RVA: 0x11F3D14 Offset: 0x11F3D14 VA: 0x11F3D14
	private static extern void criAtomEx3dSource_ResetParameters(IntPtr ex_3d_source) { }

	// RVA: 0x11F3DDC Offset: 0x11F3DDC VA: 0x11F3DDC
	private static extern void criAtomEx3dSource_SetPosition(IntPtr ex_3d_source, ref CriAtomEx.NativeVector position) { }

	// RVA: 0x11F3EB4 Offset: 0x11F3EB4 VA: 0x11F3EB4
	private static extern void criAtomEx3dSource_SetVelocity(IntPtr ex_3d_source, ref CriAtomEx.NativeVector velocity) { }

	// RVA: 0x11F3F98 Offset: 0x11F3F98 VA: 0x11F3F98
	private static extern void criAtomEx3dSource_SetOrientation(IntPtr ex_3d_source, ref CriAtomEx.NativeVector front, ref CriAtomEx.NativeVector top) { }

	// RVA: 0x11F4078 Offset: 0x11F4078 VA: 0x11F4078
	private static extern void criAtomEx3dSource_SetConeOrientation(IntPtr ex_3d_source, ref CriAtomEx.NativeVector cone_orient) { }

	// RVA: 0x11F412C Offset: 0x11F412C VA: 0x11F412C
	private static extern void criAtomEx3dSource_SetConeParameter(IntPtr ex_3d_source, float inside_angle, float outside_angle, float outside_volume) { }

	// RVA: 0x11F41F8 Offset: 0x11F41F8 VA: 0x11F41F8
	private static extern void criAtomEx3dSource_SetMinMaxAttenuationDistance(IntPtr ex_3d_source, float min_distance, float max_distance) { }

	// RVA: 0x11F42B4 Offset: 0x11F42B4 VA: 0x11F42B4
	private static extern void criAtomEx3dSource_SetInteriorPanField(IntPtr ex_3d_source, float source_radius, float interior_distance) { }

	// RVA: 0x11F4370 Offset: 0x11F4370 VA: 0x11F4370
	private static extern void criAtomEx3dSource_SetDopplerFactor(IntPtr ex_3d_source, float doppler_factor) { }

	// RVA: 0x11F4424 Offset: 0x11F4424 VA: 0x11F4424
	private static extern void criAtomEx3dSource_SetVolume(IntPtr ex_3d_source, float volume) { }

	// RVA: 0x11F44D8 Offset: 0x11F44D8 VA: 0x11F44D8
	private static extern void criAtomEx3dSource_SetMaxAngleAisacDelta(IntPtr ex_3d_source, float max_delta) { }

	// RVA: 0x11F4590 Offset: 0x11F4590 VA: 0x11F4590
	private static extern void criAtomEx3dSource_SetAttenuationDistanceSetting(IntPtr ex_3d_source, bool flag) { }

	// RVA: 0x11F4644 Offset: 0x11F4644 VA: 0x11F4644
	private static extern bool criAtomEx3dSource_GetAttenuationDistanceSetting(IntPtr ex_3d_source) { }

	// RVA: 0x11F4850 Offset: 0x11F4850 VA: 0x11F4850
	private static extern void criAtomEx3dSource_SetRandomPositionConfig(IntPtr ex_3d_source, ref CriAtomEx.Randomize3dConfig config) { }

	// RVA: 0x11F47A4 Offset: 0x11F47A4 VA: 0x11F47A4
	private static extern void criAtomEx3dSource_SetRandomPositionConfig(IntPtr ex_3d_source, IntPtr config) { }

	// RVA: 0x11F4A70 Offset: 0x11F4A70 VA: 0x11F4A70
	private static extern void criAtomEx3dSource_SetRandomPositionList(IntPtr ex_3d_source, CriAtomEx.NativeVector[] position_list, uint length) { }

	// RVA: 0x11F4B8C Offset: 0x11F4B8C VA: 0x11F4B8C
	private static extern void criAtomEx3dSource_Set3dRegionHn(IntPtr ex_3d_source, IntPtr ex_3d_region) { }

	// RVA: 0x11F4C40 Offset: 0x11F4C40 VA: 0x11F4C40
	private static extern void criAtomEx3dSource_SetListenerBasedElevationAngleAisacControlId(IntPtr ex_3d_source, ushort aisac_control_id) { }

	// RVA: 0x11F4CF4 Offset: 0x11F4CF4 VA: 0x11F4CF4
	private static extern void criAtomEx3dSource_SetSourceBasedElevationAngleAisacControlId(IntPtr ex_3d_source, ushort aisac_control_id) { }
}

// Namespace: 
public struct CriAtomEx3dSource.Config // TypeDefIndex: 3911
{
	// Fields
	public bool enableVoicePriorityDecay; // 0x0
	public uint randomPositionListMaxLength; // 0x4

	// Methods

	// RVA: 0xBBE59C Offset: 0xBBE59C VA: 0xBBE59C
	public void .ctor(bool enableVoicePriorityDecay, uint randomPositionListMaxLength) { }
}

// Namespace: 
public class CriAtomEx3dTransceiver : CriDisposable // TypeDefIndex: 3912
{
	// Fields
	private IntPtr handle; // 0x20

	// Properties
	public IntPtr nativeHandle { get; }

	// Methods

	// RVA: 0x11F4E18 Offset: 0x11F4E18 VA: 0x11F4E18
	public void .ctor() { }

	// RVA: 0x11F4F6C Offset: 0x11F4F6C VA: 0x11F4F6C Slot: 5
	public override void Dispose() { }

	// RVA: 0x11F4F74 Offset: 0x11F4F74 VA: 0x11F4F74
	private void Dispose(bool disposing) { }

	// RVA: 0x11F50C8 Offset: 0x11F50C8 VA: 0x11F50C8
	public IntPtr get_nativeHandle() { }

	// RVA: 0x11F50D0 Offset: 0x11F50D0 VA: 0x11F50D0
	public void Update() { }

	// RVA: 0x11F5174 Offset: 0x11F5174 VA: 0x11F5174
	public void SetInputPosition(Vector3 position) { }

	// RVA: 0x11F524C Offset: 0x11F524C VA: 0x11F524C
	public void SetOutputPosition(Vector3 position) { }

	// RVA: 0x11F5324 Offset: 0x11F5324 VA: 0x11F5324
	public void SetInputOrientation(Vector3 front, Vector3 top) { }

	// RVA: 0x11F5410 Offset: 0x11F5410 VA: 0x11F5410
	public void SetOutputOrientation(Vector3 front, Vector3 top) { }

	// RVA: 0x11F54FC Offset: 0x11F54FC VA: 0x11F54FC
	public void SetOutputConeParameter(float insideAngle, float outsideAngle, float outsideVolume) { }

	// RVA: 0x11F55C8 Offset: 0x11F55C8 VA: 0x11F55C8
	public void SetOutputMinMaxDistance(float minDistance, float maxDistance) { }

	// RVA: 0x11F5684 Offset: 0x11F5684 VA: 0x11F5684
	public void SetOutputInteriorPanField(float radius, float interiorDistance) { }

	// RVA: 0x11F5740 Offset: 0x11F5740 VA: 0x11F5740
	public void SetInputCrossFadeField(float directAudioRadius, float crossfadeDistance) { }

	// RVA: 0x11F57FC Offset: 0x11F57FC VA: 0x11F57FC
	public void SetOutputVolume(float volume) { }

	// RVA: 0x11F58B0 Offset: 0x11F58B0 VA: 0x11F58B0
	public void AttachAisac(string globalAisacName) { }

	// RVA: 0x11F5978 Offset: 0x11F5978 VA: 0x11F5978
	public void DetachAisac(string globalAisacName) { }

	// RVA: 0x11F5A40 Offset: 0x11F5A40 VA: 0x11F5A40
	public void SetMaxAngleAisacDelta(float maxDelta) { }

	// RVA: 0x11F5AF4 Offset: 0x11F5AF4 VA: 0x11F5AF4
	public void SetDistanceAisacControlId(ushort aisacControlId) { }

	// RVA: 0x11F5BA8 Offset: 0x11F5BA8 VA: 0x11F5BA8
	public void SetListenerBasedAzimuthAngleAisacControlId(ushort aisacControlId) { }

	// RVA: 0x11F5C5C Offset: 0x11F5C5C VA: 0x11F5C5C
	public void SetListenerBasedElevationAngleAisacControlId(ushort aisacControlId) { }

	// RVA: 0x11F5D10 Offset: 0x11F5D10 VA: 0x11F5D10
	public void SetTransceiverOutputBasedAzimuthAngleAisacControlId(ushort aisacControlId) { }

	// RVA: 0x11F5DC4 Offset: 0x11F5DC4 VA: 0x11F5DC4
	public void SetTransceiverOutputBasedElevationAngleAisacControlId(ushort aisacControlId) { }

	// RVA: 0x11F5E78 Offset: 0x11F5E78 VA: 0x11F5E78
	public void Set3dRegion(CriAtomEx3dRegion region3d) { }

	// RVA: 0x11F5F84 Offset: 0x11F5F84 VA: 0x11F5F84 Slot: 1
	protected override void Finalize() { }
}

// Namespace: 
public struct CriAtomEx3dTransceiver.Config // TypeDefIndex: 3913
{
	// Fields
	public int reserved; // 0x0
}

// Namespace: 
private static class CriAtomEx3dTransceiver.UnsafeNativeMethods // TypeDefIndex: 3914
{
	// Methods

	// RVA: 0x11F4EB8 Offset: 0x11F4EB8 VA: 0x11F4EB8
	internal static extern IntPtr criAtomEx3dTransceiver_Create(ref CriAtomEx3dTransceiver.Config config, IntPtr work, int work_size) { }

	// RVA: 0x11F502C Offset: 0x11F502C VA: 0x11F502C
	internal static extern void criAtomEx3dTransceiver_Destroy(IntPtr ex_3d_transceiver) { }

	// RVA: 0x11F50D8 Offset: 0x11F50D8 VA: 0x11F50D8
	internal static extern void criAtomEx3dTransceiver_Update(IntPtr ex_3d_transceiver) { }

	// RVA: 0x11F51A0 Offset: 0x11F51A0 VA: 0x11F51A0
	internal static extern void criAtomEx3dTransceiver_SetInputPosition(IntPtr ex_3d_transceiver, ref CriAtomEx.NativeVector position) { }

	// RVA: 0x11F5278 Offset: 0x11F5278 VA: 0x11F5278
	internal static extern void criAtomEx3dTransceiver_SetOutputPosition(IntPtr ex_3d_transceiver, ref CriAtomEx.NativeVector position) { }

	// RVA: 0x11F535C Offset: 0x11F535C VA: 0x11F535C
	internal static extern void criAtomEx3dTransceiver_SetInputOrientation(IntPtr ex_3d_transceiver, ref CriAtomEx.NativeVector front, ref CriAtomEx.NativeVector top) { }

	// RVA: 0x11F5448 Offset: 0x11F5448 VA: 0x11F5448
	internal static extern void criAtomEx3dTransceiver_SetOutputOrientation(IntPtr ex_3d_transceiver, ref CriAtomEx.NativeVector front, ref CriAtomEx.NativeVector top) { }

	// RVA: 0x11F5504 Offset: 0x11F5504 VA: 0x11F5504
	internal static extern void criAtomEx3dTransceiver_SetOutputConeParameter(IntPtr ex_3d_transceiver, float inside_angle, float outside_angle, float outside_volume) { }

	// RVA: 0x11F55D0 Offset: 0x11F55D0 VA: 0x11F55D0
	internal static extern void criAtomEx3dTransceiver_SetOutputMinMaxAttenuationDistance(IntPtr ex_3d_transceiver, float min_attenuation_distance, float max_attenuation_distance) { }

	// RVA: 0x11F568C Offset: 0x11F568C VA: 0x11F568C
	internal static extern void criAtomEx3dTransceiver_SetOutputInteriorPanField(IntPtr ex_3d_transceiver, float transceiver_radius, float interior_distance) { }

	// RVA: 0x11F5748 Offset: 0x11F5748 VA: 0x11F5748
	internal static extern void criAtomEx3dTransceiver_SetInputCrossFadeField(IntPtr ex_3d_transceiver, float direct_audio_radius, float crossfade_distance) { }

	// RVA: 0x11F5804 Offset: 0x11F5804 VA: 0x11F5804
	internal static extern void criAtomEx3dTransceiver_SetOutputVolume(IntPtr ex_3d_transceiver, float volume) { }

	// RVA: 0x11F58B8 Offset: 0x11F58B8 VA: 0x11F58B8
	internal static extern void criAtomEx3dTransceiver_AttachAisac(IntPtr ex_3d_transceiver, string global_aisac_name) { }

	// RVA: 0x11F5980 Offset: 0x11F5980 VA: 0x11F5980
	internal static extern void criAtomEx3dTransceiver_DetachAisac(IntPtr ex_3d_transceiver, string global_aisac_name) { }

	// RVA: 0x11F5A48 Offset: 0x11F5A48 VA: 0x11F5A48
	internal static extern void criAtomEx3dTransceiver_SetMaxAngleAisacDelta(IntPtr ex_3d_transceiver, float max_delta) { }

	// RVA: 0x11F5AFC Offset: 0x11F5AFC VA: 0x11F5AFC
	internal static extern void criAtomEx3dTransceiver_SetDistanceAisacControlId(IntPtr ex_3d_transceiver, ushort aisac_control_id) { }

	// RVA: 0x11F5BB0 Offset: 0x11F5BB0 VA: 0x11F5BB0
	internal static extern void criAtomEx3dTransceiver_SetListenerBasedAzimuthAngleAisacControlId(IntPtr ex_3d_transceiver, ushort aisac_control_id) { }

	// RVA: 0x11F5C64 Offset: 0x11F5C64 VA: 0x11F5C64
	internal static extern void criAtomEx3dTransceiver_SetListenerBasedElevationAngleAisacControlId(IntPtr ex_3d_transceiver, ushort aisac_control_id) { }

	// RVA: 0x11F5D18 Offset: 0x11F5D18 VA: 0x11F5D18
	internal static extern void criAtomEx3dTransceiver_SetTransceiverOutputBasedAzimuthAngleAisacControlId(IntPtr ex_3d_transceiver, ushort aisac_control_id) { }

	// RVA: 0x11F5DCC Offset: 0x11F5DCC VA: 0x11F5DCC
	internal static extern void criAtomEx3dTransceiver_SetTransceiverOutputBasedElevationAngleAisacControlId(IntPtr ex_3d_transceiver, ushort aisac_control_id) { }

	// RVA: 0x11F5ED8 Offset: 0x11F5ED8 VA: 0x11F5ED8
	internal static extern void criAtomEx3dTransceiver_Set3dRegionHn(IntPtr ex_3d_transceiver, IntPtr ex_3d_region) { }
}

// Namespace: 
public class CriAtomEx3dRegion : CriDisposable // TypeDefIndex: 3915
{
	// Fields
	private IntPtr handle; // 0x20

	// Properties
	public IntPtr nativeHandle { get; }

	// Methods

	// RVA: 0x11F3634 Offset: 0x11F3634 VA: 0x11F3634
	public void .ctor() { }

	// RVA: 0x11F3788 Offset: 0x11F3788 VA: 0x11F3788 Slot: 5
	public override void Dispose() { }

	// RVA: 0x11F3790 Offset: 0x11F3790 VA: 0x11F3790
	private void Dispose(bool disposing) { }

	// RVA: 0x11F38E4 Offset: 0x11F38E4 VA: 0x11F38E4 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x11F345C Offset: 0x11F345C VA: 0x11F345C
	public IntPtr get_nativeHandle() { }
}

// Namespace: 
public struct CriAtomEx3dRegion.Config // TypeDefIndex: 3916
{
	// Fields
	public int reserved; // 0x0
}

// Namespace: 
private static class CriAtomEx3dRegion.UnsafeNativeMethods // TypeDefIndex: 3917
{
	// Methods

	// RVA: 0x11F36D4 Offset: 0x11F36D4 VA: 0x11F36D4
	internal static extern IntPtr criAtomEx3dRegion_Create(ref CriAtomEx3dRegion.Config config, IntPtr work, int work_size) { }

	// RVA: 0x11F3848 Offset: 0x11F3848 VA: 0x11F3848
	internal static extern void criAtomEx3dRegion_Destroy(IntPtr ex_3d_region) { }
}

// Namespace: 
public class CriAtomExAcb : CriDisposable // TypeDefIndex: 3918
{
	// Fields
	private IntPtr handle; // 0x20
	private GCHandle dataHandle; // 0x28

	// Properties
	public IntPtr nativeHandle { get; }
	public bool isAvailable { get; }

	// Methods

	// RVA: 0x11F5FFC Offset: 0x11F5FFC VA: 0x11F5FFC
	internal void .ctor(IntPtr handle, Nullable<GCHandle> dataHandle) { }

	// RVA: 0x11F60C0 Offset: 0x11F60C0 VA: 0x11F60C0
	public IntPtr get_nativeHandle() { }

	// RVA: 0x11F60C8 Offset: 0x11F60C8 VA: 0x11F60C8
	public bool get_isAvailable() { }

	// RVA: 0x11ECC7C Offset: 0x11ECC7C VA: 0x11ECC7C
	public static CriAtomExAcb LoadAcbFile(CriFsBinder binder, string acbPath, string awbPath) { }

	// RVA: 0x11ECD68 Offset: 0x11ECD68 VA: 0x11ECD68
	public static CriAtomExAcb LoadAcbData(byte[] acbData, CriFsBinder awbBinder, string awbPath) { }

	// RVA: 0x11F6318 Offset: 0x11F6318 VA: 0x11F6318 Slot: 5
	public override void Dispose() { }

	// RVA: 0x11F6344 Offset: 0x11F6344 VA: 0x11F6344
	private void Dispose(bool disposing) { }

	// RVA: 0x11F64A8 Offset: 0x11F64A8 VA: 0x11F64A8
	public bool Exists(string cueName) { }

	// RVA: 0x11F657C Offset: 0x11F657C VA: 0x11F657C
	public bool Exists(int cueId) { }

	// RVA: 0x11F6638 Offset: 0x11F6638 VA: 0x11F6638
	public bool GetCueInfo(string cueName, out CriAtomEx.CueInfo info) { }

	// RVA: 0x11F68B0 Offset: 0x11F68B0 VA: 0x11F68B0
	public bool GetCueInfo(int cueId, out CriAtomEx.CueInfo info) { }

	// RVA: 0x11F6B10 Offset: 0x11F6B10 VA: 0x11F6B10
	public bool GetCueInfoByIndex(int index, out CriAtomEx.CueInfo info) { }

	// RVA: 0x11F6D70 Offset: 0x11F6D70 VA: 0x11F6D70
	public CriAtomEx.CueInfo[] GetCueInfoList() { }

	// RVA: 0x11F6EE4 Offset: 0x11F6EE4 VA: 0x11F6EE4
	public bool GetWaveFormInfo(string cueName, out CriAtomEx.WaveformInfo info) { }

	// RVA: 0x11F715C Offset: 0x11F715C VA: 0x11F715C
	public bool GetWaveFormInfo(int cueId, out CriAtomEx.WaveformInfo info) { }

	// RVA: 0x11F73BC Offset: 0x11F73BC VA: 0x11F73BC
	public int GetNumCuePlaying(string name) { }

	// RVA: 0x11F748C Offset: 0x11F748C VA: 0x11F748C
	public int GetNumCuePlaying(int id) { }

	// RVA: 0x11F7540 Offset: 0x11F7540 VA: 0x11F7540
	public int GetBlockIndex(string cueName, string blockName) { }

	// RVA: 0x11F762C Offset: 0x11F762C VA: 0x11F762C
	public int GetBlockIndex(int cueId, string blockName) { }

	// RVA: 0x11F7704 Offset: 0x11F7704 VA: 0x11F7704
	public int GetNumUsableAisacControls(string cueName) { }

	// RVA: 0x11F77D4 Offset: 0x11F77D4 VA: 0x11F77D4
	public int GetNumUsableAisacControls(int cueId) { }

	// RVA: 0x11F7888 Offset: 0x11F7888 VA: 0x11F7888
	public bool GetUsableAisacControl(string cueName, int index, out CriAtomEx.AisacControlInfo info) { }

	// RVA: 0x11F7B20 Offset: 0x11F7B20 VA: 0x11F7B20
	public bool GetUsableAisacControl(int cueId, int index, out CriAtomEx.AisacControlInfo info) { }

	// RVA: 0x11F7DA0 Offset: 0x11F7DA0 VA: 0x11F7DA0
	public CriAtomEx.AisacControlInfo[] GetUsableAisacControlList(string cueName) { }

	// RVA: 0x11F7E84 Offset: 0x11F7E84 VA: 0x11F7E84
	public CriAtomEx.AisacControlInfo[] GetUsableAisacControlList(int cueId) { }

	// RVA: 0x11F7F68 Offset: 0x11F7F68 VA: 0x11F7F68
	public void ResetCueTypeState(string cueName) { }

	// RVA: 0x11F8030 Offset: 0x11F8030 VA: 0x11F8030
	public void ResetCueTypeState(int cueId) { }

	// RVA: 0x11F80E4 Offset: 0x11F80E4 VA: 0x11F80E4
	public void AttachAwbFile(CriFsBinder awb_binder, string awb_path, string awb_name) { }

	// RVA: 0x11F8294 Offset: 0x11F8294 VA: 0x11F8294
	public void DetachAwbFile(string awb_name) { }

	// RVA: 0x11F8390 Offset: 0x11F8390 VA: 0x11F8390
	public bool IsReadyToRelease() { }

	// RVA: 0x11F846C Offset: 0x11F846C VA: 0x11F846C
	public float GetLoadProgress() { }

	// RVA: 0x11F8474 Offset: 0x11F8474 VA: 0x11F8474
	public void Decrypt(ulong key, ulong nonce) { }

	// RVA: 0x11F8514 Offset: 0x11F8514 VA: 0x11F8514 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x11F6114 Offset: 0x11F6114 VA: 0x11F6114
	private static extern IntPtr criAtomExAcb_LoadAcbFile(IntPtr acb_binder, string acb_path, IntPtr awb_binder, string awb_path, IntPtr work, int work_size) { }

	// RVA: 0x11F6220 Offset: 0x11F6220 VA: 0x11F6220
	private static extern IntPtr criAtomExAcb_LoadAcbData(IntPtr acb_data, int acb_data_size, IntPtr awb_binder, string awb_path, IntPtr work, int work_size) { }

	// RVA: 0x11F640C Offset: 0x11F640C VA: 0x11F640C
	private static extern void criAtomExAcb_Release(IntPtr acb_hn) { }

	// RVA: 0x11F6E48 Offset: 0x11F6E48 VA: 0x11F6E48
	private static extern int criAtomExAcb_GetNumCues(IntPtr acb_hn) { }

	// RVA: 0x11F6584 Offset: 0x11F6584 VA: 0x11F6584
	private static extern bool criAtomExAcb_ExistsId(IntPtr acb_hn, int id) { }

	// RVA: 0x11F64B0 Offset: 0x11F64B0 VA: 0x11F64B0
	private static extern bool criAtomExAcb_ExistsName(IntPtr acb_hn, string name) { }

	// RVA: 0x11F77DC Offset: 0x11F77DC VA: 0x11F77DC
	private static extern int criAtomExAcb_GetNumUsableAisacControlsById(IntPtr acb_hn, int id) { }

	// RVA: 0x11F770C Offset: 0x11F770C VA: 0x11F770C
	private static extern int criAtomExAcb_GetNumUsableAisacControlsByName(IntPtr acb_hn, string name) { }

	// RVA: 0x11F7CD4 Offset: 0x11F7CD4 VA: 0x11F7CD4
	private static extern bool criAtomExAcb_GetUsableAisacControlById(IntPtr acb_hn, int id, ushort index, IntPtr info) { }

	// RVA: 0x11F7A3C Offset: 0x11F7A3C VA: 0x11F7A3C
	private static extern bool criAtomExAcb_GetUsableAisacControlByName(IntPtr acb_hn, string name, ushort index, IntPtr info) { }

	// RVA: 0x11F7300 Offset: 0x11F7300 VA: 0x11F7300
	private static extern bool criAtomExAcb_GetWaveformInfoById(IntPtr acb_hn, int id, IntPtr waveform_info) { }

	// RVA: 0x11F7088 Offset: 0x11F7088 VA: 0x11F7088
	private static extern bool criAtomExAcb_GetWaveformInfoByName(IntPtr acb_hn, string name, IntPtr waveform_info) { }

	// RVA: 0x11F67DC Offset: 0x11F67DC VA: 0x11F67DC
	private static extern bool criAtomExAcb_GetCueInfoByName(IntPtr acb_hn, string name, IntPtr info) { }

	// RVA: 0x11F6A54 Offset: 0x11F6A54 VA: 0x11F6A54
	private static extern bool criAtomExAcb_GetCueInfoById(IntPtr acb_hn, int id, IntPtr info) { }

	// RVA: 0x11F6CB4 Offset: 0x11F6CB4 VA: 0x11F6CB4
	private static extern bool criAtomExAcb_GetCueInfoByIndex(IntPtr acb_hn, int index, IntPtr info) { }

	// RVA: 0x11F73C4 Offset: 0x11F73C4 VA: 0x11F73C4
	private static extern int criAtomExAcb_GetNumCuePlayingCountByName(IntPtr acb_hn, string name) { }

	// RVA: 0x11F7494 Offset: 0x11F7494 VA: 0x11F7494
	private static extern int criAtomExAcb_GetNumCuePlayingCountById(IntPtr acb_hn, int id) { }

	// RVA: 0x11F7634 Offset: 0x11F7634 VA: 0x11F7634
	private static extern int criAtomExAcb_GetBlockIndexById(IntPtr acb_hn, int id, string block_name) { }

	// RVA: 0x11F7548 Offset: 0x11F7548 VA: 0x11F7548
	private static extern int criAtomExAcb_GetBlockIndexByName(IntPtr acb_hn, string name, string block_name) { }

	// RVA: 0x11F7F70 Offset: 0x11F7F70 VA: 0x11F7F70
	private static extern void criAtomExAcb_ResetCueTypeStateByName(IntPtr acb_hn, string name) { }

	// RVA: 0x11F8038 Offset: 0x11F8038 VA: 0x11F8038
	private static extern void criAtomExAcb_ResetCueTypeStateById(IntPtr acb_hn, int id) { }

	// RVA: 0x11F8190 Offset: 0x11F8190 VA: 0x11F8190
	private static extern void criAtomExAcb_AttachAwbFile(IntPtr acb_hn, IntPtr awb_binder, string awb_path, string awb_name, IntPtr work, int work_size) { }

	// RVA: 0x11F82D0 Offset: 0x11F82D0 VA: 0x11F82D0
	private static extern void criAtomExAcb_DetachAwbFile(IntPtr acb_hn, string awb_name) { }

	// RVA: 0x11F83C8 Offset: 0x11F83C8 VA: 0x11F83C8
	private static extern bool criAtomExAcb_IsReadyToRelease(IntPtr acb_hn) { }
}

// Namespace: 
public class CriAtomExAcbLoader : CriDisposable // TypeDefIndex: 3919
{
	// Fields
	private IntPtr handle; // 0x20
	private Nullable<GCHandle> gch; // 0x28

	// Methods

	// RVA: 0x11F8714 Offset: 0x11F8714 VA: 0x11F8714
	private void .ctor(IntPtr handle, Nullable<GCHandle> dataHandle) { }

	// RVA: 0x11EDE78 Offset: 0x11EDE78 VA: 0x11EDE78
	public static CriAtomExAcbLoader LoadAcbFileAsync(CriFsBinder binder, string acbPath, string awbPath, bool loadAwbOnMemory = False) { }

	// RVA: 0x11ED7C4 Offset: 0x11ED7C4 VA: 0x11ED7C4
	public static CriAtomExAcbLoader LoadAcbDataAsync(byte[] acbData, CriFsBinder awbBinder, string awbPath, bool loadAwbOnMemory = False) { }

	// RVA: 0x11ED930 Offset: 0x11ED930 VA: 0x11ED930
	public CriAtomExAcbLoader.Status GetStatus() { }

	// RVA: 0x11ED938 Offset: 0x11ED938 VA: 0x11ED938
	public CriAtomExAcb MoveAcb() { }

	// RVA: 0x11F8BC4 Offset: 0x11F8BC4 VA: 0x11F8BC4 Slot: 5
	public override void Dispose() { }

	// RVA: 0x11F8BF0 Offset: 0x11F8BF0 VA: 0x11F8BF0
	private void Dispose(bool disposing) { }

	// RVA: 0x11F8D98 Offset: 0x11F8D98 VA: 0x11F8D98 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x11F87FC Offset: 0x11F87FC VA: 0x11F87FC
	private static extern IntPtr criAtomExAcbLoader_Create(in CriAtomExAcbLoader.LoaderConfig config) { }

	// RVA: 0x11F8CFC Offset: 0x11F8CFC VA: 0x11F8CFC
	private static extern void criAtomExAcbLoader_Destroy(IntPtr acb_loader) { }

	// RVA: 0x11F88A0 Offset: 0x11F88A0 VA: 0x11F88A0
	private static extern bool criAtomExAcbLoader_LoadAcbFileAsync(IntPtr acb_loader, IntPtr acb_binder, string acb_path, IntPtr awb_binder, string awb_path) { }

	// RVA: 0x11F89A0 Offset: 0x11F89A0 VA: 0x11F89A0
	private static extern bool criAtomExAcbLoader_LoadAcbDataAsync(IntPtr acb_loader, IntPtr acb_data, int acb_size, IntPtr awb_binder, string awb_path) { }

	// RVA: 0x11F8A8C Offset: 0x11F8A8C VA: 0x11F8A8C
	private static extern CriAtomExAcbLoader.Status criAtomExAcbLoader_GetStatus(IntPtr acb_loader) { }

	// RVA: 0x11F8E10 Offset: 0x11F8E10 VA: 0x11F8E10
	private static extern bool criAtomExAcbLoader_WaitForCompletion(IntPtr acb_loader) { }

	// RVA: 0x11F8B28 Offset: 0x11F8B28 VA: 0x11F8B28
	private static extern IntPtr criAtomExAcbLoader_MoveAcbHandle(IntPtr acb_loader) { }
}

// Namespace: 
public enum CriAtomExAcbLoader.Status // TypeDefIndex: 3920
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExAcbLoader.Status Stop = 0;
	public const CriAtomExAcbLoader.Status Loading = 1;
	public const CriAtomExAcbLoader.Status Complete = 2;
	public const CriAtomExAcbLoader.Status Error = 3;
}

// Namespace: 
private struct CriAtomExAcbLoader.LoaderConfig // TypeDefIndex: 3921
{
	// Fields
	public bool shouldLoadAwbOnMemory; // 0x0
}

// Namespace: 
public class CriAtomExAcf // TypeDefIndex: 3922
{
	// Methods

	// RVA: 0x11F8EB4 Offset: 0x11F8EB4 VA: 0x11F8EB4
	public void .ctor() { }

	// RVA: 0x11F8EBC Offset: 0x11F8EBC VA: 0x11F8EBC
	public static int GetNumAisacControls() { }

	// RVA: 0x11F8F4C Offset: 0x11F8F4C VA: 0x11F8F4C
	public static bool GetAisacControlInfo(ushort index, out CriAtomEx.AisacControlInfo info) { }

	// RVA: 0x11F9198 Offset: 0x11F9198 VA: 0x11F9198
	public static int GetNumDspSettings() { }

	// RVA: 0x11F9228 Offset: 0x11F9228 VA: 0x11F9228
	public static bool GetDspSettingInformation(string name, out CriAtomExAcf.AcfDspSettingInfo info) { }

	// RVA: 0x11F99C8 Offset: 0x11F99C8 VA: 0x11F99C8
	public static bool GetDspSettingSnapshotInformation(ushort index, out CriAtomExAcf.AcfDspSettingSnapshotInfo info) { }

	// RVA: 0x11FA1C0 Offset: 0x11FA1C0 VA: 0x11FA1C0
	public static bool GetDspBusInformation(ushort index, out CriAtomExAcf.AcfDspBusInfo info) { }

	// RVA: 0x11FA980 Offset: 0x11FA980 VA: 0x11FA980
	public static bool GetDspBusLinkInformation(ushort index, out CriAtomExAcf.AcfDspBusLinkInfo info) { }

	// RVA: 0x11FAD20 Offset: 0x11FAD20 VA: 0x11FAD20
	public static int GetNumCategories() { }

	// RVA: 0x11FADB0 Offset: 0x11FADB0 VA: 0x11FADB0
	public static int GetNumCategoriesPerPlayback() { }

	// RVA: 0x11FAE40 Offset: 0x11FAE40 VA: 0x11FAE40
	public static bool GetCategoryInfoByIndex(ushort index, out CriAtomExAcf.CategoryInfo info) { }

	// RVA: 0x11FB280 Offset: 0x11FB280 VA: 0x11FB280
	public static bool GetCategoryInfoByName(string name, out CriAtomExAcf.CategoryInfo info) { }

	// RVA: 0x11FB4E0 Offset: 0x11FB4E0 VA: 0x11FB4E0
	public static bool GetCategoryInfoById(uint id, out CriAtomExAcf.CategoryInfo info) { }

	// RVA: 0x11FB72C Offset: 0x11FB72C VA: 0x11FB72C
	public static int GetNumGlobalAisacs() { }

	// RVA: 0x11FB7BC Offset: 0x11FB7BC VA: 0x11FB7BC
	public static bool GetGlobalAisacInfoByIndex(ushort index, out CriAtomExAcf.GlobalAisacInfo info) { }

	// RVA: 0x11FBD44 Offset: 0x11FBD44 VA: 0x11FBD44
	public static bool GetGlobalAisacInfoByName(string name, out CriAtomExAcf.GlobalAisacInfo info) { }

	// RVA: 0x11FBFA4 Offset: 0x11FBFA4 VA: 0x11FBFA4
	public static bool GetGlobalAisacGraphInfo(CriAtomExAcf.GlobalAisacInfo aisacInfo, ushort graphIndex, out CriAtomExAcf.AisacGraphInfo graphInfo) { }

	// RVA: 0x11FC3F0 Offset: 0x11FC3F0 VA: 0x11FC3F0
	public static bool GetGlobalAisacValue(CriAtomExAcf.GlobalAisacInfo aisacInfo, float control, CriAtomExAcf.AisacGraphType type, out float value) { }

	// RVA: 0x11FC5F4 Offset: 0x11FC5F4 VA: 0x11FC5F4
	public static bool GetAcfInfo(out CriAtomExAcf.AcfInfo acfInfo) { }

	// RVA: 0x11FCC78 Offset: 0x11FCC78 VA: 0x11FCC78
	public static int GetNumSelectors() { }

	// RVA: 0x11FCD08 Offset: 0x11FCD08 VA: 0x11FCD08
	public static bool GetSelectorInfoByIndex(ushort index, out CriAtomExAcf.SelectorInfo info) { }

	// RVA: 0x11FCF58 Offset: 0x11FCF58 VA: 0x11FCF58
	public static bool GetSelectorInfoByName(string name, out CriAtomExAcf.SelectorInfo info) { }

	// RVA: 0x11FD1BC Offset: 0x11FD1BC VA: 0x11FD1BC
	public static bool GetSelectorLabelInfo(CriAtomExAcf.SelectorInfo selectorInfo, ushort labelIndex, out CriAtomExAcf.SelectorLabelInfo info) { }

	// RVA: 0x11FD4F4 Offset: 0x11FD4F4 VA: 0x11FD4F4
	public static int GetNumBuses() { }

	// RVA: 0x11FD584 Offset: 0x11FD584 VA: 0x11FD584
	public static int GetMaxBusesOfDspBusSettings() { }

	// RVA: 0x11FD614 Offset: 0x11FD614 VA: 0x11FD614
	public static string FindBusName(string busName) { }

	// RVA: 0x11F8EC0 Offset: 0x11F8EC0 VA: 0x11F8EC0
	private static extern int criAtomExAcf_GetNumAisacControls() { }

	// RVA: 0x11F90E4 Offset: 0x11F90E4 VA: 0x11F90E4
	private static extern bool criAtomExAcf_GetAisacControlInfo(ushort index, IntPtr info) { }

	// RVA: 0x11FD6E4 Offset: 0x11FD6E4 VA: 0x11FD6E4
	private static extern uint criAtomExAcf_GetAisacControlIdByName(string name) { }

	// RVA: 0x11FD798 Offset: 0x11FD798 VA: 0x11FD798
	private static extern string criAtomExAcf_GetAisacControlNameById(uint id) { }

	// RVA: 0x11F919C Offset: 0x11F919C VA: 0x11F919C
	private static extern int criAtomExAcf_GetNumDspSettings() { }

	// RVA: 0x11FD84C Offset: 0x11FD84C VA: 0x11FD84C
	private static extern int criAtomExAcf_GetNumDspSettingsFromAcfData(IntPtr acf_data, int acf_data_size) { }

	// RVA: 0x11FD8F8 Offset: 0x11FD8F8 VA: 0x11FD8F8
	private static extern string criAtomExAcf_GetDspSettingNameByIndex(ushort index) { }

	// RVA: 0x11FD9AC Offset: 0x11FD9AC VA: 0x11FD9AC
	private static extern string criAtomExAcf_GetDspSettingNameByIndexFromAcfData(IntPtr acf_data, int acf_data_size, ushort index) { }

	// RVA: 0x11F93C0 Offset: 0x11F93C0 VA: 0x11F93C0
	private static extern bool criAtomExAcf_GetDspSettingInformation(string name, IntPtr info) { }

	// RVA: 0x11F9B60 Offset: 0x11F9B60 VA: 0x11F9B60
	private static extern bool criAtomExAcf_GetDspSettingSnapshotInformation(ushort index, IntPtr info) { }

	// RVA: 0x11FA358 Offset: 0x11FA358 VA: 0x11FA358
	private static extern bool criAtomExAcf_GetDspBusInformation(ushort index, IntPtr info) { }

	// RVA: 0x11FDA78 Offset: 0x11FDA78 VA: 0x11FDA78
	private static extern int criAtomExAcf_GetDspFxType(ushort index) { }

	// RVA: 0x11FDB14 Offset: 0x11FDB14 VA: 0x11FDB14
	private static extern string criAtomExAcf_GetDspFxName(ushort index) { }

	// RVA: 0x11FDBC8 Offset: 0x11FDBC8 VA: 0x11FDBC8
	private static extern bool criAtomExAcf_GetDspFxParameters(ushort index, IntPtr parameters, int size) { }

	// RVA: 0x11FAB18 Offset: 0x11FAB18 VA: 0x11FAB18
	private static extern bool criAtomExAcf_GetDspBusLinkInformation(ushort index, IntPtr info) { }

	// RVA: 0x11FDC84 Offset: 0x11FDC84 VA: 0x11FDC84
	private static extern int criAtomExAcf_GetNumCategoriesFromAcfData(IntPtr acf_data, int acf_data_size) { }

	// RVA: 0x11FAD24 Offset: 0x11FAD24 VA: 0x11FAD24
	private static extern int criAtomExAcf_GetNumCategories() { }

	// RVA: 0x11FDD30 Offset: 0x11FDD30 VA: 0x11FDD30
	private static extern int criAtomExAcf_GetNumCategoriesPerPlaybackFromAcfData(IntPtr acf_data, int acf_data_size) { }

	// RVA: 0x11FADB4 Offset: 0x11FADB4 VA: 0x11FADB4
	private static extern int criAtomExAcf_GetNumCategoriesPerPlayback() { }

	// RVA: 0x11FAFD8 Offset: 0x11FAFD8 VA: 0x11FAFD8
	private static extern bool criAtomExAcf_GetCategoryInfo(ushort index, IntPtr info) { }

	// RVA: 0x11FB418 Offset: 0x11FB418 VA: 0x11FB418
	private static extern bool criAtomExAcf_GetCategoryInfoByName(string name, IntPtr info) { }

	// RVA: 0x11FB678 Offset: 0x11FB678 VA: 0x11FB678
	private static extern bool criAtomExAcf_GetCategoryInfoById(uint id, IntPtr info) { }

	// RVA: 0x11FB730 Offset: 0x11FB730 VA: 0x11FB730
	private static extern int criAtomExAcf_GetNumGlobalAisacs() { }

	// RVA: 0x11FB954 Offset: 0x11FB954 VA: 0x11FB954
	private static extern bool criAtomExAcf_GetGlobalAisacInfo(ushort index, IntPtr info) { }

	// RVA: 0x11FBEDC Offset: 0x11FBEDC VA: 0x11FBEDC
	private static extern bool criAtomExAcf_GetGlobalAisacInfoByName(string name, IntPtr info) { }

	// RVA: 0x11FC224 Offset: 0x11FC224 VA: 0x11FC224
	private static extern bool criAtomExAcf_GetGlobalAisacGraphInfo(IntPtr aisac_info, ushort graph_index, IntPtr graph_info) { }

	// RVA: 0x11FC528 Offset: 0x11FC528 VA: 0x11FC528
	private static extern bool criAtomExAcf_GetGlobalAisacValue(IntPtr aisac_info, float control, CriAtomExAcf.AisacGraphType type, out float value) { }

	// RVA: 0x11FC780 Offset: 0x11FC780 VA: 0x11FC780
	private static extern bool criAtomExAcf_GetAcfInfo(IntPtr acf_info) { }

	// RVA: 0x11FDDDC Offset: 0x11FDDDC VA: 0x11FDDDC
	private static extern bool criAtomExAcf_GetAcfInfoFromAcfData(IntPtr acf_data, int acf_data_size, IntPtr acf_info) { }

	// RVA: 0x11FCC7C Offset: 0x11FCC7C VA: 0x11FCC7C
	private static extern int criAtomExAcf_GetNumSelectors() { }

	// RVA: 0x11FCEA4 Offset: 0x11FCEA4 VA: 0x11FCEA4
	private static extern bool criAtomExAcf_GetSelectorInfoByIndex(ushort index, IntPtr info) { }

	// RVA: 0x11FD0F4 Offset: 0x11FD0F4 VA: 0x11FD0F4
	private static extern bool criAtomExAcf_GetSelectorInfoByName(string name, IntPtr info) { }

	// RVA: 0x11FD438 Offset: 0x11FD438 VA: 0x11FD438
	private static extern bool criAtomExAcf_GetSelectorLabelInfo(IntPtr selector_info, ushort label_index, IntPtr info) { }

	// RVA: 0x11FDE98 Offset: 0x11FDE98 VA: 0x11FDE98
	private static extern int criAtomExAcf_GetNumBusesFromAcfData(IntPtr acf_data, int acf_data_size) { }

	// RVA: 0x11FD4F8 Offset: 0x11FD4F8 VA: 0x11FD4F8
	private static extern int criAtomExAcf_GetNumBuses() { }

	// RVA: 0x11FDF44 Offset: 0x11FDF44 VA: 0x11FDF44
	private static extern int criAtomExAcf_GetMaxBusesOfDspBusSettingsFromAcfData(IntPtr acf_data, int acf_data_size) { }

	// RVA: 0x11FD588 Offset: 0x11FD588 VA: 0x11FD588
	private static extern int criAtomExAcf_GetMaxBusesOfDspBusSettings() { }

	// RVA: 0x11FD618 Offset: 0x11FD618 VA: 0x11FD618
	private static extern string criAtomExAcf_FindBusName(string bus_name) { }
}

// Namespace: 
public struct CriAtomExAcf.AcfDspSettingInfo // TypeDefIndex: 3923
{
	// Fields
	public string name; // 0x0
	public ushort[] busIndexes; // 0x8
	public ushort[] extendBusIndexes; // 0x10
	public ushort snapshotStartIndex; // 0x18
	public byte numBuses; // 0x1A
	public byte numExtendBuses; // 0x1B
	public ushort numSnapshots; // 0x1C
	public ushort snapshotWorkSize; // 0x1E
	public ushort numMixerAisacs; // 0x20
	public ushort mixerAisacStartIndex; // 0x22

	// Methods

	// RVA: 0xBBEB94 Offset: 0xBBEB94 VA: 0xBBEB94
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public struct CriAtomExAcf.AcfDspSettingSnapshotInfo // TypeDefIndex: 3924
{
	// Fields
	public string name; // 0x0
	public byte numBuses; // 0x8
	public byte numExtendBuses; // 0x9
	public byte[] reserved; // 0x10
	public ushort[] busIndexes; // 0x18
	public ushort[] extendBusIndexes; // 0x20

	// Methods

	// RVA: 0xBBEE10 Offset: 0xBBEE10 VA: 0xBBEE10
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public struct CriAtomExAcf.AcfDspBusInfo // TypeDefIndex: 3925
{
	// Fields
	public string name; // 0x0
	public float volume; // 0x8
	public float pan3dVolume; // 0xC
	public float pan3dAngle; // 0x10
	public float pan3dDistance; // 0x14
	public float pan3dSpread; // 0x18
	public ushort[] fxIndexes; // 0x20
	public ushort[] busLinkIndexes; // 0x28
	public ushort busNo; // 0x30
	public byte numFxes; // 0x32
	public byte numBusLinks; // 0x33

	// Methods

	// RVA: 0xBBE944 Offset: 0xBBE944 VA: 0xBBE944
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public enum CriAtomExAcf.AcfDspBusLinkType // TypeDefIndex: 3926
{
	// Fields
	public uint value__; // 0x0
	public const CriAtomExAcf.AcfDspBusLinkType preVolume = 0;
	public const CriAtomExAcf.AcfDspBusLinkType postVolume = 1;
	public const CriAtomExAcf.AcfDspBusLinkType postPan = 2;
}

// Namespace: 
public struct CriAtomExAcf.AcfDspBusLinkInfo // TypeDefIndex: 3927
{
	// Fields
	public CriAtomExAcf.AcfDspBusLinkType type; // 0x0
	public float sendLevel; // 0x4
	public ushort busNo; // 0x8
	public ushort busId; // 0xA

	// Methods

	// RVA: 0xBBE94C Offset: 0xBBE94C VA: 0xBBE94C
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public struct CriAtomExAcf.CategoryInfo // TypeDefIndex: 3928
{
	// Fields
	public uint groupNo; // 0x0
	public uint id; // 0x4
	public string name; // 0x8
	public uint numCueLimits; // 0x10
	public float volume; // 0x14

	// Methods

	// RVA: 0xBBF038 Offset: 0xBBF038 VA: 0xBBF038
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public enum CriAtomExAcf.AcfAisacType // TypeDefIndex: 3929
{
	// Fields
	public uint value__; // 0x0
	public const CriAtomExAcf.AcfAisacType normal = 0;
	public const CriAtomExAcf.AcfAisacType autoModulation = 1;
}

// Namespace: 
public struct CriAtomExAcf.GlobalAisacInfo // TypeDefIndex: 3930
{
	// Fields
	public string name; // 0x0
	public ushort index; // 0x8
	public ushort numGraphs; // 0xA
	public CriAtomExAcf.AcfAisacType type; // 0xC
	public float randomRange; // 0x10
	public ushort controlId; // 0x14
	public ushort dummy; // 0x16

	// Methods

	// RVA: 0xBBF120 Offset: 0xBBF120 VA: 0xBBF120
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public enum CriAtomExAcf.AisacGraphType // TypeDefIndex: 3931
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExAcf.AisacGraphType none = 0;
	public const CriAtomExAcf.AisacGraphType volume = 1;
	public const CriAtomExAcf.AisacGraphType pitch = 2;
	public const CriAtomExAcf.AisacGraphType bandpassHigh = 3;
	public const CriAtomExAcf.AisacGraphType bandpassLow = 4;
	public const CriAtomExAcf.AisacGraphType biquadFreq = 5;
	public const CriAtomExAcf.AisacGraphType biquadQ = 6;
	public const CriAtomExAcf.AisacGraphType busSend0 = 7;
	public const CriAtomExAcf.AisacGraphType busSend1 = 8;
	public const CriAtomExAcf.AisacGraphType busSend2 = 9;
	public const CriAtomExAcf.AisacGraphType busSend3 = 10;
	public const CriAtomExAcf.AisacGraphType busSend4 = 11;
	public const CriAtomExAcf.AisacGraphType busSend5 = 12;
	public const CriAtomExAcf.AisacGraphType busSend6 = 13;
	public const CriAtomExAcf.AisacGraphType busSend7 = 14;
	public const CriAtomExAcf.AisacGraphType pan3dAngel = 15;
	public const CriAtomExAcf.AisacGraphType pan3dVolume = 16;
	public const CriAtomExAcf.AisacGraphType pan3dInteriorDistance = 17;
	public const CriAtomExAcf.AisacGraphType pan3dCenter = 18;
	public const CriAtomExAcf.AisacGraphType pan3dLfe = 19;
	public const CriAtomExAcf.AisacGraphType aisac0 = 20;
	public const CriAtomExAcf.AisacGraphType aisac1 = 21;
	public const CriAtomExAcf.AisacGraphType aisac2 = 22;
	public const CriAtomExAcf.AisacGraphType aisac3 = 23;
	public const CriAtomExAcf.AisacGraphType aisac4 = 24;
	public const CriAtomExAcf.AisacGraphType aisac5 = 25;
	public const CriAtomExAcf.AisacGraphType aisac6 = 26;
	public const CriAtomExAcf.AisacGraphType aisac7 = 27;
	public const CriAtomExAcf.AisacGraphType aisac8 = 28;
	public const CriAtomExAcf.AisacGraphType aisac9 = 29;
	public const CriAtomExAcf.AisacGraphType aisac10 = 30;
	public const CriAtomExAcf.AisacGraphType aisac11 = 31;
	public const CriAtomExAcf.AisacGraphType aisac12 = 32;
	public const CriAtomExAcf.AisacGraphType aisac13 = 33;
	public const CriAtomExAcf.AisacGraphType aisac14 = 34;
	public const CriAtomExAcf.AisacGraphType aisac15 = 35;
	public const CriAtomExAcf.AisacGraphType priority = 36;
	public const CriAtomExAcf.AisacGraphType preDelayTime = 37;
	public const CriAtomExAcf.AisacGraphType biquadGain = 38;
	public const CriAtomExAcf.AisacGraphType pan3dMixdownCenter = 39;
	public const CriAtomExAcf.AisacGraphType pan3dMixdownLfe = 40;
	public const CriAtomExAcf.AisacGraphType egAttack = 41;
	public const CriAtomExAcf.AisacGraphType egRelease = 42;
	public const CriAtomExAcf.AisacGraphType playbackRatio = 43;
	public const CriAtomExAcf.AisacGraphType drySendL = 44;
	public const CriAtomExAcf.AisacGraphType drySendR = 45;
	public const CriAtomExAcf.AisacGraphType drySendCenter = 46;
	public const CriAtomExAcf.AisacGraphType drySendLfe = 47;
	public const CriAtomExAcf.AisacGraphType drySendSl = 48;
	public const CriAtomExAcf.AisacGraphType drySendSr = 49;
	public const CriAtomExAcf.AisacGraphType drySendEx1 = 50;
	public const CriAtomExAcf.AisacGraphType drySendEx2 = 51;
	public const CriAtomExAcf.AisacGraphType panSpread = 52;
}

// Namespace: 
public struct CriAtomExAcf.AisacGraphInfo // TypeDefIndex: 3932
{
	// Fields
	public CriAtomExAcf.AisacGraphType type; // 0x0

	// Methods

	// RVA: 0xBBEF70 Offset: 0xBBEF70 VA: 0xBBEF70
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public enum CriAtomExAcf.CharacterEncoding // TypeDefIndex: 3933
{
	// Fields
	public uint value__; // 0x0
	public const CriAtomExAcf.CharacterEncoding utf8 = 0;
	public const CriAtomExAcf.CharacterEncoding sjis = 1;
}

// Namespace: 
public struct CriAtomExAcf.AcfInfo // TypeDefIndex: 3934
{
	// Fields
	public string name; // 0x0
	public uint size; // 0x8
	public uint version; // 0xC
	public CriAtomExAcf.CharacterEncoding characterEncoding; // 0x10
	public int numDspSettings; // 0x14
	public int numCategories; // 0x18
	public int numCategoriesPerPlayback; // 0x1C
	public int numReacts; // 0x20
	public int numAisacControls; // 0x24
	public int numGlobalAisacs; // 0x28
	public int numGameVariables; // 0x2C
	public int maxBusesOfDspBusSettings; // 0x30
	public int numBuses; // 0x34
	public int numVoiceLimitGroups; // 0x38

	// Methods

	// RVA: 0xBBEF68 Offset: 0xBBEF68 VA: 0xBBEF68
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public struct CriAtomExAcf.SelectorInfo // TypeDefIndex: 3935
{
	// Fields
	public string name; // 0x0
	public ushort index; // 0x8
	public ushort numLabels; // 0xA
	public ushort globalLabelIndex; // 0xC

	// Methods
