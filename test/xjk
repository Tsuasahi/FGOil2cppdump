
	// RVA: 0x246DCF0 Offset: 0x246DCF0 VA: 0x246DCF0 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x246CDEC Offset: 0x246CDEC VA: 0x246CDEC
	private static extern IntPtr criAtomEx3dListener_Create(ref CriAtomEx3dListener.Config config, IntPtr work, int work_size) { }

	// RVA: 0x246CF60 Offset: 0x246CF60 VA: 0x246CF60
	private static extern void criAtomEx3dListener_Destroy(IntPtr ex_3d_listener) { }

	// RVA: 0x246D068 Offset: 0x246D068 VA: 0x246D068
	private static extern void criAtomEx3dListener_Update(IntPtr ex_3d_listener) { }

	// RVA: 0x246D168 Offset: 0x246D168 VA: 0x246D168
	private static extern void criAtomEx3dListener_ResetParameters(IntPtr ex_3d_listener) { }

	// RVA: 0x246D298 Offset: 0x246D298 VA: 0x246D298
	private static extern void criAtomEx3dListener_SetPosition(IntPtr ex_3d_listener, ref CriAtomEx.NativeVector position) { }

	// RVA: 0x246D3D8 Offset: 0x246D3D8 VA: 0x246D3D8
	private static extern void criAtomEx3dListener_SetVelocity(IntPtr ex_3d_listener, ref CriAtomEx.NativeVector velocity) { }

	// RVA: 0x246D540 Offset: 0x246D540 VA: 0x246D540
	private static extern void criAtomEx3dListener_SetOrientation(IntPtr ex_3d_listener, ref CriAtomEx.NativeVector front, ref CriAtomEx.NativeVector top) { }

	// RVA: 0x246DD68 Offset: 0x246DD68 VA: 0x246DD68
	private static extern void criAtomEx3dListener_SetDistanceFactor(IntPtr ex_3d_listener, float distance_factor) { }

	// RVA: 0x246D6C4 Offset: 0x246D6C4 VA: 0x246D6C4
	private static extern void criAtomEx3dListener_SetDopplerMultiplier(IntPtr ex_3d_listener, float doppler_multiplier) { }

	// RVA: 0x246D8C4 Offset: 0x246D8C4 VA: 0x246D8C4
	private static extern void criAtomEx3dListener_SetFocusPoint(IntPtr ex_3d_listener, ref CriAtomEx.NativeVector focus_point) { }

	// RVA: 0x246D9E8 Offset: 0x246D9E8 VA: 0x246D9E8
	private static extern void criAtomEx3dListener_SetDistanceFocusLevel(IntPtr ex_3d_listener, float distance_focus_level) { }

	// RVA: 0x246DB0C Offset: 0x246DB0C VA: 0x246DB0C
	private static extern void criAtomEx3dListener_SetDirectionFocusLevel(IntPtr ex_3d_listener, float direction_focus_level) { }

	// RVA: 0x246DC44 Offset: 0x246DC44 VA: 0x246DC44
	private static extern void criAtomEx3dListener_Set3dRegionHn(IntPtr ex_3d_listener, IntPtr ex_3d_region) { }
}

// Namespace: 
public struct CriAtomEx3dListener.Config // TypeDefIndex: 3909
{
	// Fields
	public int reserved; // 0x0
}

// Namespace: 
public class CriAtomEx3dSource : CriDisposable // TypeDefIndex: 3910
{
	// Fields
	private uint currentRandomPositionListMaxLength; // 0x20
	private IntPtr handle; // 0x28

	// Properties
	public IntPtr nativeHandle { get; }

	// Methods

	// RVA: 0x246E13C Offset: 0x246E13C VA: 0x246E13C
	public void .ctor(bool enableVoicePriorityDecay = False, uint randomPositionListMaxLength = 0) { }

	// RVA: 0x246E2E4 Offset: 0x246E2E4 VA: 0x246E2E4 Slot: 5
	public override void Dispose() { }

	// RVA: 0x246E2EC Offset: 0x246E2EC VA: 0x246E2EC
	private void Dispose(bool disposing) { }

	// RVA: 0x246E440 Offset: 0x246E440 VA: 0x246E440
	public IntPtr get_nativeHandle() { }

	// RVA: 0x246E448 Offset: 0x246E448 VA: 0x246E448
	public void Update() { }

	// RVA: 0x246E4EC Offset: 0x246E4EC VA: 0x246E4EC
	public void ResetParameters() { }

	// RVA: 0x246E590 Offset: 0x246E590 VA: 0x246E590
	public void SetPosition(float x, float y, float z) { }

	// RVA: 0x246E668 Offset: 0x246E668 VA: 0x246E668
	public void SetVelocity(float x, float y, float z) { }

	// RVA: 0x246E740 Offset: 0x246E740 VA: 0x246E740
	public void SetOrientation(Vector3 front, Vector3 top) { }

	[ObsoleteAttribute] // RVA: 0xC23728 Offset: 0xC23728 VA: 0xC23728
	// RVA: 0x246E82C Offset: 0x246E82C VA: 0x246E82C
	public void SetConeOrientation(float x, float y, float z) { }

	// RVA: 0x246E904 Offset: 0x246E904 VA: 0x246E904
	public void SetConeParameter(float insideAngle, float outsideAngle, float outsideVolume) { }

	// RVA: 0x246E9D0 Offset: 0x246E9D0 VA: 0x246E9D0
	public void SetMinMaxDistance(float minDistance, float maxDistance) { }

	// RVA: 0x246EA8C Offset: 0x246EA8C VA: 0x246EA8C
	public void SetInteriorPanField(float sourceRadius, float interiorDistance) { }

	// RVA: 0x246EB48 Offset: 0x246EB48 VA: 0x246EB48
	public void SetDopplerFactor(float dopplerFactor) { }

	// RVA: 0x246EBFC Offset: 0x246EBFC VA: 0x246EBFC
	public void SetVolume(float volume) { }

	// RVA: 0x246ECB0 Offset: 0x246ECB0 VA: 0x246ECB0
	public void SetMaxAngleAisacDelta(float maxDelta) { }

	// RVA: 0x246ED64 Offset: 0x246ED64 VA: 0x246ED64
	public void SetAttenuationDistanceSetting(bool flag) { }

	// RVA: 0x246EE1C Offset: 0x246EE1C VA: 0x246EE1C
	public bool GetAttenuationDistanceSetting() { }

	// RVA: 0x246EEC8 Offset: 0x246EEC8 VA: 0x246EEC8
	public void SetRandomPositionConfig(Nullable<CriAtomEx.Randomize3dConfig> config) { }

	// RVA: 0x246F108 Offset: 0x246F108 VA: 0x246F108
	public void SetRandomPositionList(Vector3[] positionList) { }

	// RVA: 0x246F30C Offset: 0x246F30C VA: 0x246F30C
	public void Set3dRegion(CriAtomEx3dRegion region3d) { }

	// RVA: 0x246F418 Offset: 0x246F418 VA: 0x246F418
	public void SetListenerBasedElevationAngleAisacControlId(ushort aisacControlId) { }

	// RVA: 0x246F4CC Offset: 0x246F4CC VA: 0x246F4CC
	public void SetSourceBasedElevationAngleAisacControlId(ushort aisacControlId) { }

	// RVA: 0x246F580 Offset: 0x246F580 VA: 0x246F580 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x246E20C Offset: 0x246E20C VA: 0x246E20C
	private static extern IntPtr criAtomEx3dSource_Create(ref CriAtomEx3dSource.Config config, IntPtr work, int work_size) { }

	// RVA: 0x246E3A4 Offset: 0x246E3A4 VA: 0x246E3A4
	private static extern void criAtomEx3dSource_Destroy(IntPtr ex_3d_source) { }

	// RVA: 0x246E450 Offset: 0x246E450 VA: 0x246E450
	private static extern void criAtomEx3dSource_Update(IntPtr ex_3d_source) { }

	// RVA: 0x246E4F4 Offset: 0x246E4F4 VA: 0x246E4F4
	private static extern void criAtomEx3dSource_ResetParameters(IntPtr ex_3d_source) { }

	// RVA: 0x246E5BC Offset: 0x246E5BC VA: 0x246E5BC
	private static extern void criAtomEx3dSource_SetPosition(IntPtr ex_3d_source, ref CriAtomEx.NativeVector position) { }

	// RVA: 0x246E694 Offset: 0x246E694 VA: 0x246E694
	private static extern void criAtomEx3dSource_SetVelocity(IntPtr ex_3d_source, ref CriAtomEx.NativeVector velocity) { }

	// RVA: 0x246E778 Offset: 0x246E778 VA: 0x246E778
	private static extern void criAtomEx3dSource_SetOrientation(IntPtr ex_3d_source, ref CriAtomEx.NativeVector front, ref CriAtomEx.NativeVector top) { }

	// RVA: 0x246E858 Offset: 0x246E858 VA: 0x246E858
	private static extern void criAtomEx3dSource_SetConeOrientation(IntPtr ex_3d_source, ref CriAtomEx.NativeVector cone_orient) { }

	// RVA: 0x246E90C Offset: 0x246E90C VA: 0x246E90C
	private static extern void criAtomEx3dSource_SetConeParameter(IntPtr ex_3d_source, float inside_angle, float outside_angle, float outside_volume) { }

	// RVA: 0x246E9D8 Offset: 0x246E9D8 VA: 0x246E9D8
	private static extern void criAtomEx3dSource_SetMinMaxAttenuationDistance(IntPtr ex_3d_source, float min_distance, float max_distance) { }

	// RVA: 0x246EA94 Offset: 0x246EA94 VA: 0x246EA94
	private static extern void criAtomEx3dSource_SetInteriorPanField(IntPtr ex_3d_source, float source_radius, float interior_distance) { }

	// RVA: 0x246EB50 Offset: 0x246EB50 VA: 0x246EB50
	private static extern void criAtomEx3dSource_SetDopplerFactor(IntPtr ex_3d_source, float doppler_factor) { }

	// RVA: 0x246EC04 Offset: 0x246EC04 VA: 0x246EC04
	private static extern void criAtomEx3dSource_SetVolume(IntPtr ex_3d_source, float volume) { }

	// RVA: 0x246ECB8 Offset: 0x246ECB8 VA: 0x246ECB8
	private static extern void criAtomEx3dSource_SetMaxAngleAisacDelta(IntPtr ex_3d_source, float max_delta) { }

	// RVA: 0x246ED70 Offset: 0x246ED70 VA: 0x246ED70
	private static extern void criAtomEx3dSource_SetAttenuationDistanceSetting(IntPtr ex_3d_source, bool flag) { }

	// RVA: 0x246EE24 Offset: 0x246EE24 VA: 0x246EE24
	private static extern bool criAtomEx3dSource_GetAttenuationDistanceSetting(IntPtr ex_3d_source) { }

	// RVA: 0x246F030 Offset: 0x246F030 VA: 0x246F030
	private static extern void criAtomEx3dSource_SetRandomPositionConfig(IntPtr ex_3d_source, ref CriAtomEx.Randomize3dConfig config) { }

	// RVA: 0x246EF84 Offset: 0x246EF84 VA: 0x246EF84
	private static extern void criAtomEx3dSource_SetRandomPositionConfig(IntPtr ex_3d_source, IntPtr config) { }

	// RVA: 0x246F250 Offset: 0x246F250 VA: 0x246F250
	private static extern void criAtomEx3dSource_SetRandomPositionList(IntPtr ex_3d_source, CriAtomEx.NativeVector[] position_list, uint length) { }

	// RVA: 0x246F36C Offset: 0x246F36C VA: 0x246F36C
	private static extern void criAtomEx3dSource_Set3dRegionHn(IntPtr ex_3d_source, IntPtr ex_3d_region) { }

	// RVA: 0x246F420 Offset: 0x246F420 VA: 0x246F420
	private static extern void criAtomEx3dSource_SetListenerBasedElevationAngleAisacControlId(IntPtr ex_3d_source, ushort aisac_control_id) { }

	// RVA: 0x246F4D4 Offset: 0x246F4D4 VA: 0x246F4D4
	private static extern void criAtomEx3dSource_SetSourceBasedElevationAngleAisacControlId(IntPtr ex_3d_source, ushort aisac_control_id) { }
}

// Namespace: 
public struct CriAtomEx3dSource.Config // TypeDefIndex: 3911
{
	// Fields
	public bool enableVoicePriorityDecay; // 0x0
	public uint randomPositionListMaxLength; // 0x4

	// Methods

	// RVA: 0xD6BDB8 Offset: 0xD6BDB8 VA: 0xD6BDB8
	public void .ctor(bool enableVoicePriorityDecay, uint randomPositionListMaxLength) { }
}

// Namespace: 
public class CriAtomEx3dTransceiver : CriDisposable // TypeDefIndex: 3912
{
	// Fields
	private IntPtr handle; // 0x20

	// Properties
	public IntPtr nativeHandle { get; }

	// Methods

	// RVA: 0x246F5F8 Offset: 0x246F5F8 VA: 0x246F5F8
	public void .ctor() { }

	// RVA: 0x246F74C Offset: 0x246F74C VA: 0x246F74C Slot: 5
	public override void Dispose() { }

	// RVA: 0x246F754 Offset: 0x246F754 VA: 0x246F754
	private void Dispose(bool disposing) { }

	// RVA: 0x246F8A8 Offset: 0x246F8A8 VA: 0x246F8A8
	public IntPtr get_nativeHandle() { }

	// RVA: 0x246F8B0 Offset: 0x246F8B0 VA: 0x246F8B0
	public void Update() { }

	// RVA: 0x246F954 Offset: 0x246F954 VA: 0x246F954
	public void SetInputPosition(Vector3 position) { }

	// RVA: 0x246FA2C Offset: 0x246FA2C VA: 0x246FA2C
	public void SetOutputPosition(Vector3 position) { }

	// RVA: 0x246FB04 Offset: 0x246FB04 VA: 0x246FB04
	public void SetInputOrientation(Vector3 front, Vector3 top) { }

	// RVA: 0x246FBF0 Offset: 0x246FBF0 VA: 0x246FBF0
	public void SetOutputOrientation(Vector3 front, Vector3 top) { }

	// RVA: 0x246FCDC Offset: 0x246FCDC VA: 0x246FCDC
	public void SetOutputConeParameter(float insideAngle, float outsideAngle, float outsideVolume) { }

	// RVA: 0x246FDA8 Offset: 0x246FDA8 VA: 0x246FDA8
	public void SetOutputMinMaxDistance(float minDistance, float maxDistance) { }

	// RVA: 0x246FE64 Offset: 0x246FE64 VA: 0x246FE64
	public void SetOutputInteriorPanField(float radius, float interiorDistance) { }

	// RVA: 0x246FF20 Offset: 0x246FF20 VA: 0x246FF20
	public void SetInputCrossFadeField(float directAudioRadius, float crossfadeDistance) { }

	// RVA: 0x246FFDC Offset: 0x246FFDC VA: 0x246FFDC
	public void SetOutputVolume(float volume) { }

	// RVA: 0x2470090 Offset: 0x2470090 VA: 0x2470090
	public void AttachAisac(string globalAisacName) { }

	// RVA: 0x2470158 Offset: 0x2470158 VA: 0x2470158
	public void DetachAisac(string globalAisacName) { }

	// RVA: 0x2470220 Offset: 0x2470220 VA: 0x2470220
	public void SetMaxAngleAisacDelta(float maxDelta) { }

	// RVA: 0x24702D4 Offset: 0x24702D4 VA: 0x24702D4
	public void SetDistanceAisacControlId(ushort aisacControlId) { }

	// RVA: 0x2470388 Offset: 0x2470388 VA: 0x2470388
	public void SetListenerBasedAzimuthAngleAisacControlId(ushort aisacControlId) { }

	// RVA: 0x247043C Offset: 0x247043C VA: 0x247043C
	public void SetListenerBasedElevationAngleAisacControlId(ushort aisacControlId) { }

	// RVA: 0x24704F0 Offset: 0x24704F0 VA: 0x24704F0
	public void SetTransceiverOutputBasedAzimuthAngleAisacControlId(ushort aisacControlId) { }

	// RVA: 0x24705A4 Offset: 0x24705A4 VA: 0x24705A4
	public void SetTransceiverOutputBasedElevationAngleAisacControlId(ushort aisacControlId) { }

	// RVA: 0x2470658 Offset: 0x2470658 VA: 0x2470658
	public void Set3dRegion(CriAtomEx3dRegion region3d) { }

	// RVA: 0x2470764 Offset: 0x2470764 VA: 0x2470764 Slot: 1
	protected override void Finalize() { }
}

// Namespace: 
public struct CriAtomEx3dTransceiver.Config // TypeDefIndex: 3913
{
	// Fields
	public int reserved; // 0x0
}

// Namespace: 
private static class CriAtomEx3dTransceiver.UnsafeNativeMethods // TypeDefIndex: 3914
{
	// Methods

	// RVA: 0x246F698 Offset: 0x246F698 VA: 0x246F698
	internal static extern IntPtr criAtomEx3dTransceiver_Create(ref CriAtomEx3dTransceiver.Config config, IntPtr work, int work_size) { }

	// RVA: 0x246F80C Offset: 0x246F80C VA: 0x246F80C
	internal static extern void criAtomEx3dTransceiver_Destroy(IntPtr ex_3d_transceiver) { }

	// RVA: 0x246F8B8 Offset: 0x246F8B8 VA: 0x246F8B8
	internal static extern void criAtomEx3dTransceiver_Update(IntPtr ex_3d_transceiver) { }

	// RVA: 0x246F980 Offset: 0x246F980 VA: 0x246F980
	internal static extern void criAtomEx3dTransceiver_SetInputPosition(IntPtr ex_3d_transceiver, ref CriAtomEx.NativeVector position) { }

	// RVA: 0x246FA58 Offset: 0x246FA58 VA: 0x246FA58
	internal static extern void criAtomEx3dTransceiver_SetOutputPosition(IntPtr ex_3d_transceiver, ref CriAtomEx.NativeVector position) { }

	// RVA: 0x246FB3C Offset: 0x246FB3C VA: 0x246FB3C
	internal static extern void criAtomEx3dTransceiver_SetInputOrientation(IntPtr ex_3d_transceiver, ref CriAtomEx.NativeVector front, ref CriAtomEx.NativeVector top) { }

	// RVA: 0x246FC28 Offset: 0x246FC28 VA: 0x246FC28
	internal static extern void criAtomEx3dTransceiver_SetOutputOrientation(IntPtr ex_3d_transceiver, ref CriAtomEx.NativeVector front, ref CriAtomEx.NativeVector top) { }

	// RVA: 0x246FCE4 Offset: 0x246FCE4 VA: 0x246FCE4
	internal static extern void criAtomEx3dTransceiver_SetOutputConeParameter(IntPtr ex_3d_transceiver, float inside_angle, float outside_angle, float outside_volume) { }

	// RVA: 0x246FDB0 Offset: 0x246FDB0 VA: 0x246FDB0
	internal static extern void criAtomEx3dTransceiver_SetOutputMinMaxAttenuationDistance(IntPtr ex_3d_transceiver, float min_attenuation_distance, float max_attenuation_distance) { }

	// RVA: 0x246FE6C Offset: 0x246FE6C VA: 0x246FE6C
	internal static extern void criAtomEx3dTransceiver_SetOutputInteriorPanField(IntPtr ex_3d_transceiver, float transceiver_radius, float interior_distance) { }

	// RVA: 0x246FF28 Offset: 0x246FF28 VA: 0x246FF28
	internal static extern void criAtomEx3dTransceiver_SetInputCrossFadeField(IntPtr ex_3d_transceiver, float direct_audio_radius, float crossfade_distance) { }

	// RVA: 0x246FFE4 Offset: 0x246FFE4 VA: 0x246FFE4
	internal static extern void criAtomEx3dTransceiver_SetOutputVolume(IntPtr ex_3d_transceiver, float volume) { }

	// RVA: 0x2470098 Offset: 0x2470098 VA: 0x2470098
	internal static extern void criAtomEx3dTransceiver_AttachAisac(IntPtr ex_3d_transceiver, string global_aisac_name) { }

	// RVA: 0x2470160 Offset: 0x2470160 VA: 0x2470160
	internal static extern void criAtomEx3dTransceiver_DetachAisac(IntPtr ex_3d_transceiver, string global_aisac_name) { }

	// RVA: 0x2470228 Offset: 0x2470228 VA: 0x2470228
	internal static extern void criAtomEx3dTransceiver_SetMaxAngleAisacDelta(IntPtr ex_3d_transceiver, float max_delta) { }

	// RVA: 0x24702DC Offset: 0x24702DC VA: 0x24702DC
	internal static extern void criAtomEx3dTransceiver_SetDistanceAisacControlId(IntPtr ex_3d_transceiver, ushort aisac_control_id) { }

	// RVA: 0x2470390 Offset: 0x2470390 VA: 0x2470390
	internal static extern void criAtomEx3dTransceiver_SetListenerBasedAzimuthAngleAisacControlId(IntPtr ex_3d_transceiver, ushort aisac_control_id) { }

	// RVA: 0x2470444 Offset: 0x2470444 VA: 0x2470444
	internal static extern void criAtomEx3dTransceiver_SetListenerBasedElevationAngleAisacControlId(IntPtr ex_3d_transceiver, ushort aisac_control_id) { }

	// RVA: 0x24704F8 Offset: 0x24704F8 VA: 0x24704F8
	internal static extern void criAtomEx3dTransceiver_SetTransceiverOutputBasedAzimuthAngleAisacControlId(IntPtr ex_3d_transceiver, ushort aisac_control_id) { }

	// RVA: 0x24705AC Offset: 0x24705AC VA: 0x24705AC
	internal static extern void criAtomEx3dTransceiver_SetTransceiverOutputBasedElevationAngleAisacControlId(IntPtr ex_3d_transceiver, ushort aisac_control_id) { }

	// RVA: 0x24706B8 Offset: 0x24706B8 VA: 0x24706B8
	internal static extern void criAtomEx3dTransceiver_Set3dRegionHn(IntPtr ex_3d_transceiver, IntPtr ex_3d_region) { }
}

// Namespace: 
public class CriAtomEx3dRegion : CriDisposable // TypeDefIndex: 3915
{
	// Fields
	private IntPtr handle; // 0x20

	// Properties
	public IntPtr nativeHandle { get; }

	// Methods

	// RVA: 0x246DE14 Offset: 0x246DE14 VA: 0x246DE14
	public void .ctor() { }

	// RVA: 0x246DF68 Offset: 0x246DF68 VA: 0x246DF68 Slot: 5
	public override void Dispose() { }

	// RVA: 0x246DF70 Offset: 0x246DF70 VA: 0x246DF70
	private void Dispose(bool disposing) { }

	// RVA: 0x246E0C4 Offset: 0x246E0C4 VA: 0x246E0C4 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x246DC3C Offset: 0x246DC3C VA: 0x246DC3C
	public IntPtr get_nativeHandle() { }
}

// Namespace: 
public struct CriAtomEx3dRegion.Config // TypeDefIndex: 3916
{
	// Fields
	public int reserved; // 0x0
}

// Namespace: 
private static class CriAtomEx3dRegion.UnsafeNativeMethods // TypeDefIndex: 3917
{
	// Methods

	// RVA: 0x246DEB4 Offset: 0x246DEB4 VA: 0x246DEB4
	internal static extern IntPtr criAtomEx3dRegion_Create(ref CriAtomEx3dRegion.Config config, IntPtr work, int work_size) { }

	// RVA: 0x246E028 Offset: 0x246E028 VA: 0x246E028
	internal static extern void criAtomEx3dRegion_Destroy(IntPtr ex_3d_region) { }
}

// Namespace: 
public class CriAtomExAcb : CriDisposable // TypeDefIndex: 3918
{
	// Fields
	private IntPtr handle; // 0x20
	private GCHandle dataHandle; // 0x28

	// Properties
	public IntPtr nativeHandle { get; }
	public bool isAvailable { get; }

	// Methods

	// RVA: 0x24707DC Offset: 0x24707DC VA: 0x24707DC
	internal void .ctor(IntPtr handle, Nullable<GCHandle> dataHandle) { }

	// RVA: 0x24708A0 Offset: 0x24708A0 VA: 0x24708A0
	public IntPtr get_nativeHandle() { }

	// RVA: 0x24708A8 Offset: 0x24708A8 VA: 0x24708A8
	public bool get_isAvailable() { }

	// RVA: 0x246745C Offset: 0x246745C VA: 0x246745C
	public static CriAtomExAcb LoadAcbFile(CriFsBinder binder, string acbPath, string awbPath) { }

	// RVA: 0x2467548 Offset: 0x2467548 VA: 0x2467548
	public static CriAtomExAcb LoadAcbData(byte[] acbData, CriFsBinder awbBinder, string awbPath) { }

	// RVA: 0x2470AF8 Offset: 0x2470AF8 VA: 0x2470AF8 Slot: 5
	public override void Dispose() { }

	// RVA: 0x2470B24 Offset: 0x2470B24 VA: 0x2470B24
	private void Dispose(bool disposing) { }

	// RVA: 0x2470C88 Offset: 0x2470C88 VA: 0x2470C88
	public bool Exists(string cueName) { }

	// RVA: 0x2470D5C Offset: 0x2470D5C VA: 0x2470D5C
	public bool Exists(int cueId) { }

	// RVA: 0x2470E18 Offset: 0x2470E18 VA: 0x2470E18
	public bool GetCueInfo(string cueName, out CriAtomEx.CueInfo info) { }

	// RVA: 0x2471090 Offset: 0x2471090 VA: 0x2471090
	public bool GetCueInfo(int cueId, out CriAtomEx.CueInfo info) { }

	// RVA: 0x24712F0 Offset: 0x24712F0 VA: 0x24712F0
	public bool GetCueInfoByIndex(int index, out CriAtomEx.CueInfo info) { }

	// RVA: 0x2471550 Offset: 0x2471550 VA: 0x2471550
	public CriAtomEx.CueInfo[] GetCueInfoList() { }

	// RVA: 0x24716C4 Offset: 0x24716C4 VA: 0x24716C4
	public bool GetWaveFormInfo(string cueName, out CriAtomEx.WaveformInfo info) { }

	// RVA: 0x247193C Offset: 0x247193C VA: 0x247193C
	public bool GetWaveFormInfo(int cueId, out CriAtomEx.WaveformInfo info) { }

	// RVA: 0x2471B9C Offset: 0x2471B9C VA: 0x2471B9C
	public int GetNumCuePlaying(string name) { }

	// RVA: 0x2471C6C Offset: 0x2471C6C VA: 0x2471C6C
	public int GetNumCuePlaying(int id) { }

	// RVA: 0x2471D20 Offset: 0x2471D20 VA: 0x2471D20
	public int GetBlockIndex(string cueName, string blockName) { }

	// RVA: 0x2471E0C Offset: 0x2471E0C VA: 0x2471E0C
	public int GetBlockIndex(int cueId, string blockName) { }

	// RVA: 0x2471EE4 Offset: 0x2471EE4 VA: 0x2471EE4
	public int GetNumUsableAisacControls(string cueName) { }

	// RVA: 0x2471FB4 Offset: 0x2471FB4 VA: 0x2471FB4
	public int GetNumUsableAisacControls(int cueId) { }

	// RVA: 0x2472068 Offset: 0x2472068 VA: 0x2472068
	public bool GetUsableAisacControl(string cueName, int index, out CriAtomEx.AisacControlInfo info) { }

	// RVA: 0x2472300 Offset: 0x2472300 VA: 0x2472300
	public bool GetUsableAisacControl(int cueId, int index, out CriAtomEx.AisacControlInfo info) { }

	// RVA: 0x2472580 Offset: 0x2472580 VA: 0x2472580
	public CriAtomEx.AisacControlInfo[] GetUsableAisacControlList(string cueName) { }

	// RVA: 0x2472664 Offset: 0x2472664 VA: 0x2472664
	public CriAtomEx.AisacControlInfo[] GetUsableAisacControlList(int cueId) { }

	// RVA: 0x2472748 Offset: 0x2472748 VA: 0x2472748
	public void ResetCueTypeState(string cueName) { }

	// RVA: 0x2472810 Offset: 0x2472810 VA: 0x2472810
	public void ResetCueTypeState(int cueId) { }

	// RVA: 0x24728C4 Offset: 0x24728C4 VA: 0x24728C4
	public void AttachAwbFile(CriFsBinder awb_binder, string awb_path, string awb_name) { }

	// RVA: 0x2472A74 Offset: 0x2472A74 VA: 0x2472A74
	public void DetachAwbFile(string awb_name) { }

	// RVA: 0x2472B70 Offset: 0x2472B70 VA: 0x2472B70
	public bool IsReadyToRelease() { }

	// RVA: 0x2472C4C Offset: 0x2472C4C VA: 0x2472C4C
	public float GetLoadProgress() { }

	// RVA: 0x2472C54 Offset: 0x2472C54 VA: 0x2472C54
	public void Decrypt(ulong key, ulong nonce) { }

	// RVA: 0x2472CF4 Offset: 0x2472CF4 VA: 0x2472CF4 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x24708F4 Offset: 0x24708F4 VA: 0x24708F4
	private static extern IntPtr criAtomExAcb_LoadAcbFile(IntPtr acb_binder, string acb_path, IntPtr awb_binder, string awb_path, IntPtr work, int work_size) { }

	// RVA: 0x2470A00 Offset: 0x2470A00 VA: 0x2470A00
	private static extern IntPtr criAtomExAcb_LoadAcbData(IntPtr acb_data, int acb_data_size, IntPtr awb_binder, string awb_path, IntPtr work, int work_size) { }

	// RVA: 0x2470BEC Offset: 0x2470BEC VA: 0x2470BEC
	private static extern void criAtomExAcb_Release(IntPtr acb_hn) { }

	// RVA: 0x2471628 Offset: 0x2471628 VA: 0x2471628
	private static extern int criAtomExAcb_GetNumCues(IntPtr acb_hn) { }

	// RVA: 0x2470D64 Offset: 0x2470D64 VA: 0x2470D64
	private static extern bool criAtomExAcb_ExistsId(IntPtr acb_hn, int id) { }

	// RVA: 0x2470C90 Offset: 0x2470C90 VA: 0x2470C90
	private static extern bool criAtomExAcb_ExistsName(IntPtr acb_hn, string name) { }

	// RVA: 0x2471FBC Offset: 0x2471FBC VA: 0x2471FBC
	private static extern int criAtomExAcb_GetNumUsableAisacControlsById(IntPtr acb_hn, int id) { }

	// RVA: 0x2471EEC Offset: 0x2471EEC VA: 0x2471EEC
	private static extern int criAtomExAcb_GetNumUsableAisacControlsByName(IntPtr acb_hn, string name) { }

	// RVA: 0x24724B4 Offset: 0x24724B4 VA: 0x24724B4
	private static extern bool criAtomExAcb_GetUsableAisacControlById(IntPtr acb_hn, int id, ushort index, IntPtr info) { }

	// RVA: 0x247221C Offset: 0x247221C VA: 0x247221C
	private static extern bool criAtomExAcb_GetUsableAisacControlByName(IntPtr acb_hn, string name, ushort index, IntPtr info) { }

	// RVA: 0x2471AE0 Offset: 0x2471AE0 VA: 0x2471AE0
	private static extern bool criAtomExAcb_GetWaveformInfoById(IntPtr acb_hn, int id, IntPtr waveform_info) { }

	// RVA: 0x2471868 Offset: 0x2471868 VA: 0x2471868
	private static extern bool criAtomExAcb_GetWaveformInfoByName(IntPtr acb_hn, string name, IntPtr waveform_info) { }

	// RVA: 0x2470FBC Offset: 0x2470FBC VA: 0x2470FBC
	private static extern bool criAtomExAcb_GetCueInfoByName(IntPtr acb_hn, string name, IntPtr info) { }

	// RVA: 0x2471234 Offset: 0x2471234 VA: 0x2471234
	private static extern bool criAtomExAcb_GetCueInfoById(IntPtr acb_hn, int id, IntPtr info) { }

	// RVA: 0x2471494 Offset: 0x2471494 VA: 0x2471494
	private static extern bool criAtomExAcb_GetCueInfoByIndex(IntPtr acb_hn, int index, IntPtr info) { }

	// RVA: 0x2471BA4 Offset: 0x2471BA4 VA: 0x2471BA4
	private static extern int criAtomExAcb_GetNumCuePlayingCountByName(IntPtr acb_hn, string name) { }

	// RVA: 0x2471C74 Offset: 0x2471C74 VA: 0x2471C74
	private static extern int criAtomExAcb_GetNumCuePlayingCountById(IntPtr acb_hn, int id) { }

	// RVA: 0x2471E14 Offset: 0x2471E14 VA: 0x2471E14
	private static extern int criAtomExAcb_GetBlockIndexById(IntPtr acb_hn, int id, string block_name) { }

	// RVA: 0x2471D28 Offset: 0x2471D28 VA: 0x2471D28
	private static extern int criAtomExAcb_GetBlockIndexByName(IntPtr acb_hn, string name, string block_name) { }

	// RVA: 0x2472750 Offset: 0x2472750 VA: 0x2472750
	private static extern void criAtomExAcb_ResetCueTypeStateByName(IntPtr acb_hn, string name) { }

	// RVA: 0x2472818 Offset: 0x2472818 VA: 0x2472818
	private static extern void criAtomExAcb_ResetCueTypeStateById(IntPtr acb_hn, int id) { }

	// RVA: 0x2472970 Offset: 0x2472970 VA: 0x2472970
	private static extern void criAtomExAcb_AttachAwbFile(IntPtr acb_hn, IntPtr awb_binder, string awb_path, string awb_name, IntPtr work, int work_size) { }

	// RVA: 0x2472AB0 Offset: 0x2472AB0 VA: 0x2472AB0
	private static extern void criAtomExAcb_DetachAwbFile(IntPtr acb_hn, string awb_name) { }

	// RVA: 0x2472BA8 Offset: 0x2472BA8 VA: 0x2472BA8
	private static extern bool criAtomExAcb_IsReadyToRelease(IntPtr acb_hn) { }
}

// Namespace: 
public class CriAtomExAcbLoader : CriDisposable // TypeDefIndex: 3919
{
	// Fields
	private IntPtr handle; // 0x20
	private Nullable<GCHandle> gch; // 0x28

	// Methods

	// RVA: 0x2472EF4 Offset: 0x2472EF4 VA: 0x2472EF4
	private void .ctor(IntPtr handle, Nullable<GCHandle> dataHandle) { }

	// RVA: 0x2468658 Offset: 0x2468658 VA: 0x2468658
	public static CriAtomExAcbLoader LoadAcbFileAsync(CriFsBinder binder, string acbPath, string awbPath, bool loadAwbOnMemory = False) { }

	// RVA: 0x2467FA4 Offset: 0x2467FA4 VA: 0x2467FA4
	public static CriAtomExAcbLoader LoadAcbDataAsync(byte[] acbData, CriFsBinder awbBinder, string awbPath, bool loadAwbOnMemory = False) { }

	// RVA: 0x2468110 Offset: 0x2468110 VA: 0x2468110
	public CriAtomExAcbLoader.Status GetStatus() { }

	// RVA: 0x2468118 Offset: 0x2468118 VA: 0x2468118
	public CriAtomExAcb MoveAcb() { }

	// RVA: 0x24733A4 Offset: 0x24733A4 VA: 0x24733A4 Slot: 5
	public override void Dispose() { }

	// RVA: 0x24733D0 Offset: 0x24733D0 VA: 0x24733D0
	private void Dispose(bool disposing) { }

	// RVA: 0x2473578 Offset: 0x2473578 VA: 0x2473578 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x2472FDC Offset: 0x2472FDC VA: 0x2472FDC
	private static extern IntPtr criAtomExAcbLoader_Create(in CriAtomExAcbLoader.LoaderConfig config) { }

	// RVA: 0x24734DC Offset: 0x24734DC VA: 0x24734DC
	private static extern void criAtomExAcbLoader_Destroy(IntPtr acb_loader) { }

	// RVA: 0x2473080 Offset: 0x2473080 VA: 0x2473080
	private static extern bool criAtomExAcbLoader_LoadAcbFileAsync(IntPtr acb_loader, IntPtr acb_binder, string acb_path, IntPtr awb_binder, string awb_path) { }

	// RVA: 0x2473180 Offset: 0x2473180 VA: 0x2473180
	private static extern bool criAtomExAcbLoader_LoadAcbDataAsync(IntPtr acb_loader, IntPtr acb_data, int acb_size, IntPtr awb_binder, string awb_path) { }

	// RVA: 0x247326C Offset: 0x247326C VA: 0x247326C
	private static extern CriAtomExAcbLoader.Status criAtomExAcbLoader_GetStatus(IntPtr acb_loader) { }

	// RVA: 0x24735F0 Offset: 0x24735F0 VA: 0x24735F0
	private static extern bool criAtomExAcbLoader_WaitForCompletion(IntPtr acb_loader) { }

	// RVA: 0x2473308 Offset: 0x2473308 VA: 0x2473308
	private static extern IntPtr criAtomExAcbLoader_MoveAcbHandle(IntPtr acb_loader) { }
}

// Namespace: 
public enum CriAtomExAcbLoader.Status // TypeDefIndex: 3920
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExAcbLoader.Status Stop = 0;
	public const CriAtomExAcbLoader.Status Loading = 1;
	public const CriAtomExAcbLoader.Status Complete = 2;
	public const CriAtomExAcbLoader.Status Error = 3;
}

// Namespace: 
private struct CriAtomExAcbLoader.LoaderConfig // TypeDefIndex: 3921
{
	// Fields
	public bool shouldLoadAwbOnMemory; // 0x0
}

// Namespace: 
public class CriAtomExAcf // TypeDefIndex: 3922
{
	// Methods

	// RVA: 0x2473694 Offset: 0x2473694 VA: 0x2473694
	public void .ctor() { }

	// RVA: 0x247369C Offset: 0x247369C VA: 0x247369C
	public static int GetNumAisacControls() { }

	// RVA: 0x247372C Offset: 0x247372C VA: 0x247372C
	public static bool GetAisacControlInfo(ushort index, out CriAtomEx.AisacControlInfo info) { }

	// RVA: 0x2473978 Offset: 0x2473978 VA: 0x2473978
	public static int GetNumDspSettings() { }

	// RVA: 0x2473A08 Offset: 0x2473A08 VA: 0x2473A08
	public static bool GetDspSettingInformation(string name, out CriAtomExAcf.AcfDspSettingInfo info) { }

	// RVA: 0x24741A8 Offset: 0x24741A8 VA: 0x24741A8
	public static bool GetDspSettingSnapshotInformation(ushort index, out CriAtomExAcf.AcfDspSettingSnapshotInfo info) { }

	// RVA: 0x24749A0 Offset: 0x24749A0 VA: 0x24749A0
	public static bool GetDspBusInformation(ushort index, out CriAtomExAcf.AcfDspBusInfo info) { }

	// RVA: 0x2475160 Offset: 0x2475160 VA: 0x2475160
	public static bool GetDspBusLinkInformation(ushort index, out CriAtomExAcf.AcfDspBusLinkInfo info) { }

	// RVA: 0x2475500 Offset: 0x2475500 VA: 0x2475500
	public static int GetNumCategories() { }

	// RVA: 0x2475590 Offset: 0x2475590 VA: 0x2475590
	public static int GetNumCategoriesPerPlayback() { }

	// RVA: 0x2475620 Offset: 0x2475620 VA: 0x2475620
	public static bool GetCategoryInfoByIndex(ushort index, out CriAtomExAcf.CategoryInfo info) { }

	// RVA: 0x2475A60 Offset: 0x2475A60 VA: 0x2475A60
	public static bool GetCategoryInfoByName(string name, out CriAtomExAcf.CategoryInfo info) { }

	// RVA: 0x2475CC0 Offset: 0x2475CC0 VA: 0x2475CC0
	public static bool GetCategoryInfoById(uint id, out CriAtomExAcf.CategoryInfo info) { }

	// RVA: 0x2475F0C Offset: 0x2475F0C VA: 0x2475F0C
	public static int GetNumGlobalAisacs() { }

	// RVA: 0x2475F9C Offset: 0x2475F9C VA: 0x2475F9C
	public static bool GetGlobalAisacInfoByIndex(ushort index, out CriAtomExAcf.GlobalAisacInfo info) { }

	// RVA: 0x2476524 Offset: 0x2476524 VA: 0x2476524
	public static bool GetGlobalAisacInfoByName(string name, out CriAtomExAcf.GlobalAisacInfo info) { }

	// RVA: 0x2476784 Offset: 0x2476784 VA: 0x2476784
	public static bool GetGlobalAisacGraphInfo(CriAtomExAcf.GlobalAisacInfo aisacInfo, ushort graphIndex, out CriAtomExAcf.AisacGraphInfo graphInfo) { }

	// RVA: 0x2476BD0 Offset: 0x2476BD0 VA: 0x2476BD0
	public static bool GetGlobalAisacValue(CriAtomExAcf.GlobalAisacInfo aisacInfo, float control, CriAtomExAcf.AisacGraphType type, out float value) { }

	// RVA: 0x2476DD4 Offset: 0x2476DD4 VA: 0x2476DD4
	public static bool GetAcfInfo(out CriAtomExAcf.AcfInfo acfInfo) { }

	// RVA: 0x2477458 Offset: 0x2477458 VA: 0x2477458
	public static int GetNumSelectors() { }

	// RVA: 0x24774E8 Offset: 0x24774E8 VA: 0x24774E8
	public static bool GetSelectorInfoByIndex(ushort index, out CriAtomExAcf.SelectorInfo info) { }

	// RVA: 0x2477738 Offset: 0x2477738 VA: 0x2477738
	public static bool GetSelectorInfoByName(string name, out CriAtomExAcf.SelectorInfo info) { }

	// RVA: 0x247799C Offset: 0x247799C VA: 0x247799C
	public static bool GetSelectorLabelInfo(CriAtomExAcf.SelectorInfo selectorInfo, ushort labelIndex, out CriAtomExAcf.SelectorLabelInfo info) { }

	// RVA: 0x2477CD4 Offset: 0x2477CD4 VA: 0x2477CD4
	public static int GetNumBuses() { }

	// RVA: 0x2477D64 Offset: 0x2477D64 VA: 0x2477D64
	public static int GetMaxBusesOfDspBusSettings() { }

	// RVA: 0x2477DF4 Offset: 0x2477DF4 VA: 0x2477DF4
	public static string FindBusName(string busName) { }

	// RVA: 0x24736A0 Offset: 0x24736A0 VA: 0x24736A0
	private static extern int criAtomExAcf_GetNumAisacControls() { }

	// RVA: 0x24738C4 Offset: 0x24738C4 VA: 0x24738C4
	private static extern bool criAtomExAcf_GetAisacControlInfo(ushort index, IntPtr info) { }

	// RVA: 0x2477EC4 Offset: 0x2477EC4 VA: 0x2477EC4
	private static extern uint criAtomExAcf_GetAisacControlIdByName(string name) { }

	// RVA: 0x2477F78 Offset: 0x2477F78 VA: 0x2477F78
	private static extern string criAtomExAcf_GetAisacControlNameById(uint id) { }

	// RVA: 0x247397C Offset: 0x247397C VA: 0x247397C
	private static extern int criAtomExAcf_GetNumDspSettings() { }

	// RVA: 0x247802C Offset: 0x247802C VA: 0x247802C
	private static extern int criAtomExAcf_GetNumDspSettingsFromAcfData(IntPtr acf_data, int acf_data_size) { }

	// RVA: 0x24780D8 Offset: 0x24780D8 VA: 0x24780D8
	private static extern string criAtomExAcf_GetDspSettingNameByIndex(ushort index) { }

	// RVA: 0x247818C Offset: 0x247818C VA: 0x247818C
	private static extern string criAtomExAcf_GetDspSettingNameByIndexFromAcfData(IntPtr acf_data, int acf_data_size, ushort index) { }

	// RVA: 0x2473BA0 Offset: 0x2473BA0 VA: 0x2473BA0
	private static extern bool criAtomExAcf_GetDspSettingInformation(string name, IntPtr info) { }

	// RVA: 0x2474340 Offset: 0x2474340 VA: 0x2474340
	private static extern bool criAtomExAcf_GetDspSettingSnapshotInformation(ushort index, IntPtr info) { }

	// RVA: 0x2474B38 Offset: 0x2474B38 VA: 0x2474B38
	private static extern bool criAtomExAcf_GetDspBusInformation(ushort index, IntPtr info) { }

	// RVA: 0x2478258 Offset: 0x2478258 VA: 0x2478258
	private static extern int criAtomExAcf_GetDspFxType(ushort index) { }

	// RVA: 0x24782F4 Offset: 0x24782F4 VA: 0x24782F4
	private static extern string criAtomExAcf_GetDspFxName(ushort index) { }

	// RVA: 0x24783A8 Offset: 0x24783A8 VA: 0x24783A8
	private static extern bool criAtomExAcf_GetDspFxParameters(ushort index, IntPtr parameters, int size) { }

	// RVA: 0x24752F8 Offset: 0x24752F8 VA: 0x24752F8
	private static extern bool criAtomExAcf_GetDspBusLinkInformation(ushort index, IntPtr info) { }

	// RVA: 0x2478464 Offset: 0x2478464 VA: 0x2478464
	private static extern int criAtomExAcf_GetNumCategoriesFromAcfData(IntPtr acf_data, int acf_data_size) { }

	// RVA: 0x2475504 Offset: 0x2475504 VA: 0x2475504
	private static extern int criAtomExAcf_GetNumCategories() { }

	// RVA: 0x2478510 Offset: 0x2478510 VA: 0x2478510
	private static extern int criAtomExAcf_GetNumCategoriesPerPlaybackFromAcfData(IntPtr acf_data, int acf_data_size) { }

	// RVA: 0x2475594 Offset: 0x2475594 VA: 0x2475594
	private static extern int criAtomExAcf_GetNumCategoriesPerPlayback() { }

	// RVA: 0x24757B8 Offset: 0x24757B8 VA: 0x24757B8
	private static extern bool criAtomExAcf_GetCategoryInfo(ushort index, IntPtr info) { }

	// RVA: 0x2475BF8 Offset: 0x2475BF8 VA: 0x2475BF8
	private static extern bool criAtomExAcf_GetCategoryInfoByName(string name, IntPtr info) { }

	// RVA: 0x2475E58 Offset: 0x2475E58 VA: 0x2475E58
	private static extern bool criAtomExAcf_GetCategoryInfoById(uint id, IntPtr info) { }

	// RVA: 0x2475F10 Offset: 0x2475F10 VA: 0x2475F10
	private static extern int criAtomExAcf_GetNumGlobalAisacs() { }

	// RVA: 0x2476134 Offset: 0x2476134 VA: 0x2476134
	private static extern bool criAtomExAcf_GetGlobalAisacInfo(ushort index, IntPtr info) { }

	// RVA: 0x24766BC Offset: 0x24766BC VA: 0x24766BC
	private static extern bool criAtomExAcf_GetGlobalAisacInfoByName(string name, IntPtr info) { }

	// RVA: 0x2476A04 Offset: 0x2476A04 VA: 0x2476A04
	private static extern bool criAtomExAcf_GetGlobalAisacGraphInfo(IntPtr aisac_info, ushort graph_index, IntPtr graph_info) { }

	// RVA: 0x2476D08 Offset: 0x2476D08 VA: 0x2476D08
	private static extern bool criAtomExAcf_GetGlobalAisacValue(IntPtr aisac_info, float control, CriAtomExAcf.AisacGraphType type, out float value) { }

	// RVA: 0x2476F60 Offset: 0x2476F60 VA: 0x2476F60
	private static extern bool criAtomExAcf_GetAcfInfo(IntPtr acf_info) { }

	// RVA: 0x24785BC Offset: 0x24785BC VA: 0x24785BC
	private static extern bool criAtomExAcf_GetAcfInfoFromAcfData(IntPtr acf_data, int acf_data_size, IntPtr acf_info) { }

	// RVA: 0x247745C Offset: 0x247745C VA: 0x247745C
	private static extern int criAtomExAcf_GetNumSelectors() { }

	// RVA: 0x2477684 Offset: 0x2477684 VA: 0x2477684
	private static extern bool criAtomExAcf_GetSelectorInfoByIndex(ushort index, IntPtr info) { }

	// RVA: 0x24778D4 Offset: 0x24778D4 VA: 0x24778D4
	private static extern bool criAtomExAcf_GetSelectorInfoByName(string name, IntPtr info) { }

	// RVA: 0x2477C18 Offset: 0x2477C18 VA: 0x2477C18
	private static extern bool criAtomExAcf_GetSelectorLabelInfo(IntPtr selector_info, ushort label_index, IntPtr info) { }

	// RVA: 0x2478678 Offset: 0x2478678 VA: 0x2478678
	private static extern int criAtomExAcf_GetNumBusesFromAcfData(IntPtr acf_data, int acf_data_size) { }

	// RVA: 0x2477CD8 Offset: 0x2477CD8 VA: 0x2477CD8
	private static extern int criAtomExAcf_GetNumBuses() { }

	// RVA: 0x2478724 Offset: 0x2478724 VA: 0x2478724
	private static extern int criAtomExAcf_GetMaxBusesOfDspBusSettingsFromAcfData(IntPtr acf_data, int acf_data_size) { }

	// RVA: 0x2477D68 Offset: 0x2477D68 VA: 0x2477D68
	private static extern int criAtomExAcf_GetMaxBusesOfDspBusSettings() { }

	// RVA: 0x2477DF8 Offset: 0x2477DF8 VA: 0x2477DF8
	private static extern string criAtomExAcf_FindBusName(string bus_name) { }
}

// Namespace: 
public struct CriAtomExAcf.AcfDspSettingInfo // TypeDefIndex: 3923
{
	// Fields
	public string name; // 0x0
	public ushort[] busIndexes; // 0x8
	public ushort[] extendBusIndexes; // 0x10
	public ushort snapshotStartIndex; // 0x18
	public byte numBuses; // 0x1A
	public byte numExtendBuses; // 0x1B
	public ushort numSnapshots; // 0x1C
	public ushort snapshotWorkSize; // 0x1E
	public ushort numMixerAisacs; // 0x20
	public ushort mixerAisacStartIndex; // 0x22

	// Methods

	// RVA: 0xD6C3B0 Offset: 0xD6C3B0 VA: 0xD6C3B0
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public struct CriAtomExAcf.AcfDspSettingSnapshotInfo // TypeDefIndex: 3924
{
	// Fields
	public string name; // 0x0
	public byte numBuses; // 0x8
	public byte numExtendBuses; // 0x9
	public byte[] reserved; // 0x10
	public ushort[] busIndexes; // 0x18
	public ushort[] extendBusIndexes; // 0x20

	// Methods

	// RVA: 0xD6C62C Offset: 0xD6C62C VA: 0xD6C62C
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public struct CriAtomExAcf.AcfDspBusInfo // TypeDefIndex: 3925
{
	// Fields
	public string name; // 0x0
	public float volume; // 0x8
	public float pan3dVolume; // 0xC
	public float pan3dAngle; // 0x10
	public float pan3dDistance; // 0x14
	public float pan3dSpread; // 0x18
	public ushort[] fxIndexes; // 0x20
	public ushort[] busLinkIndexes; // 0x28
	public ushort busNo; // 0x30
	public byte numFxes; // 0x32
	public byte numBusLinks; // 0x33

	// Methods

	// RVA: 0xD6C160 Offset: 0xD6C160 VA: 0xD6C160
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public enum CriAtomExAcf.AcfDspBusLinkType // TypeDefIndex: 3926
{
	// Fields
	public uint value__; // 0x0
	public const CriAtomExAcf.AcfDspBusLinkType preVolume = 0;
	public const CriAtomExAcf.AcfDspBusLinkType postVolume = 1;
	public const CriAtomExAcf.AcfDspBusLinkType postPan = 2;
}

// Namespace: 
public struct CriAtomExAcf.AcfDspBusLinkInfo // TypeDefIndex: 3927
{
	// Fields
	public CriAtomExAcf.AcfDspBusLinkType type; // 0x0
	public float sendLevel; // 0x4
	public ushort busNo; // 0x8
	public ushort busId; // 0xA

	// Methods

	// RVA: 0xD6C168 Offset: 0xD6C168 VA: 0xD6C168
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public struct CriAtomExAcf.CategoryInfo // TypeDefIndex: 3928
{
	// Fields
	public uint groupNo; // 0x0
	public uint id; // 0x4
	public string name; // 0x8
	public uint numCueLimits; // 0x10
	public float volume; // 0x14

	// Methods

	// RVA: 0xD6C854 Offset: 0xD6C854 VA: 0xD6C854
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public enum CriAtomExAcf.AcfAisacType // TypeDefIndex: 3929
{
	// Fields
	public uint value__; // 0x0
	public const CriAtomExAcf.AcfAisacType normal = 0;
	public const CriAtomExAcf.AcfAisacType autoModulation = 1;
}

// Namespace: 
public struct CriAtomExAcf.GlobalAisacInfo // TypeDefIndex: 3930
{
	// Fields
	public string name; // 0x0
	public ushort index; // 0x8
	public ushort numGraphs; // 0xA
	public CriAtomExAcf.AcfAisacType type; // 0xC
	public float randomRange; // 0x10
	public ushort controlId; // 0x14
	public ushort dummy; // 0x16

