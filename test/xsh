	public void SetMode(ServantCostumeListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1A05FC0 Offset: 0x1A05FC0 VA: 0x1A05FC0
	public void SetMode(ServantCostumeListViewManager.InitMode mode) { }

	// RVA: 0x1A06104 Offset: 0x1A06104 VA: 0x1A06104
	private void RequestListObject(ServantCostumeListViewObject.InitMode mode, float delay = 0) { }

	// RVA: 0x1A0633C Offset: 0x1A0633C VA: 0x1A0633C
	private void OnMoveEnd() { }

	// RVA: 0x1A06424 Offset: 0x1A06424 VA: 0x1A06424
	private void OnClickListView(ListViewObject obj) { }

	// RVA: 0x1A06428 Offset: 0x1A06428 VA: 0x1A06428
	private void OnClickSelectBase(ListViewObject obj) { }

	// RVA: 0x1A06644 Offset: 0x1A06644 VA: 0x1A06644
	private void OnLongPushListView(ListViewObject obj) { }

	// RVA: 0x1A06794 Offset: 0x1A06794 VA: 0x1A06794
	public void SetSelectBaseSvtData(UserServantEntity baseSvtData) { }

	// RVA: 0x1A0679C Offset: 0x1A0679C VA: 0x1A0679C
	public UserServantEntity GetSelectUserSvtEntity() { }

	// RVA: 0x1A067A4 Offset: 0x1A067A4 VA: 0x1A067A4
	public UserServantEntity GetSelectBaseSvtData() { }

	// RVA: 0x1A067AC Offset: 0x1A067AC VA: 0x1A067AC
	public void ResetListViewInfo() { }

	// RVA: 0x1A067B4 Offset: 0x1A067B4 VA: 0x1A067B4
	public long GetAmountSortValue(int svtId) { }

	// RVA: 0x1A068D8 Offset: 0x1A068D8 VA: 0x1A068D8
	public void OnClickFilterKind() { }

	// RVA: 0x1A069CC Offset: 0x1A069CC VA: 0x1A069CC
	public void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x1A047AC Offset: 0x1A047AC VA: 0x1A047AC
	private void SetFilterButtonImage() { }

	// RVA: 0x1A06A64 Offset: 0x1A06A64 VA: 0x1A06A64
	public void OnClickSortButton() { }

	// RVA: 0x1A06B5C Offset: 0x1A06B5C VA: 0x1A06B5C
	public void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x1A06BEC Offset: 0x1A06BEC VA: 0x1A06BEC
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x1A06CDC Offset: 0x1A06CDC VA: 0x1A06CDC Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x1A06F5C Offset: 0x1A06F5C VA: 0x1A06F5C
	public void ChangeIconScale() { }

	// RVA: 0x1A070B4 Offset: 0x1A070B4 VA: 0x1A070B4
	private static void .cctor() { }
}

// Namespace: 
public enum ServantCostumeListViewManager.InitMode // TypeDefIndex: 9685
{
	// Fields
	public int value__; // 0x0
	public const ServantCostumeListViewManager.InitMode NONE = 0;
	public const ServantCostumeListViewManager.InitMode VALID = 1;
	public const ServantCostumeListViewManager.InitMode INPUT = 2;
}

// Namespace: 
public enum ServantCostumeListViewManager.ResultKind // TypeDefIndex: 9686
{
	// Fields
	public int value__; // 0x0
	public const ServantCostumeListViewManager.ResultKind NONE = 0;
	public const ServantCostumeListViewManager.ResultKind SERVANT_STATUS = 1;
}

// Namespace: 
public sealed class ServantCostumeListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 9687
{
	// Methods

	// RVA: 0x1A07158 Offset: 0x1A07158 VA: 0x1A07158
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1A07168 Offset: 0x1A07168 VA: 0x1A07168 Slot: 11
	public virtual void Invoke(ServantCostumeListViewManager.ResultKind kind, int index) { }

	// RVA: 0x1A073AC Offset: 0x1A073AC VA: 0x1A073AC Slot: 12
	public virtual IAsyncResult BeginInvoke(ServantCostumeListViewManager.ResultKind kind, int index, AsyncCallback callback, object object) { }

	// RVA: 0x1A07454 Offset: 0x1A07454 VA: 0x1A07454 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantCostumeListViewObject : ListViewObject // TypeDefIndex: 9688
{
	// Fields
	protected ServantCostumeListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC6C4F0 Offset: 0xC6C4F0 VA: 0xC6C4F0
	[DebuggerBrowsableAttribute] // RVA: 0xC6C4F0 Offset: 0xC6C4F0 VA: 0xC6C4F0
	private Action callbackFunc; // 0x70
	protected ServantCostumeListViewItemDraw itemDraw; // 0x78
	protected ServantCostumeListViewItemDraw.DispMode dispMode; // 0x80

	// Methods

	// RVA: 0x1A07460 Offset: 0x1A07460 VA: 0x1A07460
	public void .ctor() { }

	// RVA: 0x1A074C8 Offset: 0x1A074C8 VA: 0x1A074C8
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1A075B4 Offset: 0x1A075B4 VA: 0x1A075B4
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1A076A0 Offset: 0x1A076A0 VA: 0x1A076A0
	protected void Awake() { }

	// RVA: 0x1A07714 Offset: 0x1A07714 VA: 0x1A07714
	private void Start() { }

	// RVA: 0x1A04030 Offset: 0x1A04030 VA: 0x1A04030
	public ServantCostumeListViewItem GetItem() { }

	// RVA: 0x1A07728 Offset: 0x1A07728 VA: 0x1A07728 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1A07758 Offset: 0x1A07758 VA: 0x1A07758 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x1A07750 Offset: 0x1A07750 VA: 0x1A07750
	protected void InitItem() { }

	// RVA: 0x1A07780 Offset: 0x1A07780 VA: 0x1A07780 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x1A07880 Offset: 0x1A07880 VA: 0x1A07880
	public void Init(ServantCostumeListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1A07B74 Offset: 0x1A07B74 VA: 0x1A07B74
	public void Init(ServantCostumeListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x1A062B8 Offset: 0x1A062B8 VA: 0x1A062B8
	public void Init(ServantCostumeListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x1A05F38 Offset: 0x1A05F38 VA: 0x1A05F38
	public void Init(ServantCostumeListViewObject.InitMode initMode) { }

	// RVA: 0x1A07A64 Offset: 0x1A07A64 VA: 0x1A07A64
	protected void SetupDisp() { }

	// RVA: 0x1A07BF8 Offset: 0x1A07BF8 VA: 0x1A07BF8 Slot: 3
	public override string ToString() { }

	// RVA: 0x1A07CC8 Offset: 0x1A07CC8 VA: 0x1A07CC8
	public void OnClickSelect() { }

	// RVA: 0x1A07DE0 Offset: 0x1A07DE0 VA: 0x1A07DE0
	public void OnLongPush() { }
}

// Namespace: 
public enum ServantCostumeListViewObject.InitMode // TypeDefIndex: 9689
{
	// Fields
	public int value__; // 0x0
	public const ServantCostumeListViewObject.InitMode INVISIBLE = 0;
	public const ServantCostumeListViewObject.InitMode INVALID = 1;
	public const ServantCostumeListViewObject.InitMode VALID = 2;
	public const ServantCostumeListViewObject.InitMode INPUT = 3;
	public const ServantCostumeListViewObject.InitMode MODIFY = 4;
}

// Namespace: 
public enum ServantCostumeListViewObject.State // TypeDefIndex: 9690
{
	// Fields
	public int value__; // 0x0
	public const ServantCostumeListViewObject.State INIT = 0;
	public const ServantCostumeListViewObject.State IDLE = 1;
	public const ServantCostumeListViewObject.State MOVE = 2;
	public const ServantCostumeListViewObject.State INPUT = 3;
}

// Namespace: 
public class SetNoticeNumControl : BaseMonoBehaviour // TypeDefIndex: 9691
{
	// Fields
	public GameObject noticeNumberPrefab; // 0x18
	private GameObject noticeNumObj; // 0x20

	// Methods

	// RVA: 0x132A3BC Offset: 0x132A3BC VA: 0x132A3BC
	public void .ctor() { }

	// RVA: 0x132A3C4 Offset: 0x132A3C4 VA: 0x132A3C4
	public void setNoticeNum(int resNum) { }

	// RVA: 0x132A55C Offset: 0x132A55C VA: 0x132A55C
	private void clear() { }
}

// Namespace: 
public class MoveLabelTextControl : MonoBehaviour // TypeDefIndex: 9692
{
	// Fields
	private UILabel targetLb; // 0x18
	private Vector2 parentSize; // 0x20
	private Hashtable table; // 0x28
	private Vector3 lbStartPosition; // 0x30

	// Methods

	// RVA: 0x1197944 Offset: 0x1197944 VA: 0x1197944
	public void .ctor() { }

	// RVA: 0x11979AC Offset: 0x11979AC VA: 0x11979AC
	public void setMoveTextOver(UIPanel parent, UILabel targetLb) { }

	// RVA: 0x1197EEC Offset: 0x1197EEC VA: 0x1197EEC
	private void onMoveComplete() { }
}

// Namespace: 
public class ServantNpInfoIconComponent : BaseMonoBehaviour // TypeDefIndex: 9693
{
	// Fields
	[SerializeField] // RVA: 0xC6C52C Offset: 0xC6C52C VA: 0xC6C52C
	protected UISprite backSprite; // 0x18
	[SerializeField] // RVA: 0xC6C53C Offset: 0xC6C53C VA: 0xC6C53C
	protected UISprite skillIconSprite; // 0x20
	[SerializeField] // RVA: 0xC6C54C Offset: 0xC6C54C VA: 0xC6C54C
	protected UISprite frameSprite; // 0x28
	[SerializeField] // RVA: 0xC6C55C Offset: 0xC6C55C VA: 0xC6C55C
	protected UIIconLabel iconLabel; // 0x30
	[SerializeField] // RVA: 0xC6C56C Offset: 0xC6C56C VA: 0xC6C56C
	protected UILabel levelLabel; // 0x38
	[SerializeField] // RVA: 0xC6C57C Offset: 0xC6C57C VA: 0xC6C57C
	protected UILabel tdNameRubyLabel; // 0x40
	[SerializeField] // RVA: 0xC6C58C Offset: 0xC6C58C VA: 0xC6C58C
	protected UILabel tdNameLabel; // 0x48
	[SerializeField] // RVA: 0xC6C59C Offset: 0xC6C59C VA: 0xC6C59C
	protected UILabel tdDetailLabel; // 0x50
	[SerializeField] // RVA: 0xC6C5AC Offset: 0xC6C5AC VA: 0xC6C5AC
	protected UISprite noSelectMskImg; // 0x58
	[SerializeField] // RVA: 0xC6C5BC Offset: 0xC6C5BC VA: 0xC6C5BC
	protected GameObject commandCardPrefab; // 0x60
	[SerializeField] // RVA: 0xC6C5CC Offset: 0xC6C5CC VA: 0xC6C5CC
	protected GameObject commandCardBase; // 0x68
	protected BattleCommandComponent commandCard; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC6C5DC Offset: 0xC6C5DC VA: 0xC6C5DC
	[DebuggerBrowsableAttribute] // RVA: 0xC6C5DC Offset: 0xC6C5DC VA: 0xC6C5DC
	private int <infoIndex>k__BackingField; // 0x78

	// Properties
	public int infoIndex { get; set; }

	// Methods

	// RVA: 0x19C3680 Offset: 0x19C3680 VA: 0x19C3680
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCFC20 Offset: 0xCCFC20 VA: 0xCCFC20
	// RVA: 0x19C3688 Offset: 0x19C3688 VA: 0x19C3688
	public int get_infoIndex() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCFC30 Offset: 0xCCFC30 VA: 0xCCFC30
	// RVA: 0x19C3690 Offset: 0x19C3690 VA: 0x19C3690
	private void set_infoIndex(int value) { }

	// RVA: 0x19C3698 Offset: 0x19C3698 VA: 0x19C3698
	public void SetNpInfo(UserServantEntity baseData, int idx, SvtUseNpData npData) { }

	// RVA: 0x19C38D8 Offset: 0x19C38D8 VA: 0x19C38D8
	private void setNpIconImg(UserServantEntity baseUsrSvtData, SvtUseNpData npData) { }

	// RVA: 0x19C37A0 Offset: 0x19C37A0 VA: 0x19C37A0
	private void setNpLv(int lv) { }

	// RVA: 0x19C3D6C Offset: 0x19C3D6C VA: 0x19C3D6C
	public void getNpInfo() { }

	// RVA: 0x19C3D70 Offset: 0x19C3D70 VA: 0x19C3D70
	public void setDispSelectMskImg(bool isShow) { }
}

// Namespace: 
public sealed class ServantNpInfoIconComponent.ClickDelegate : MulticastDelegate // TypeDefIndex: 9694
{
	// Methods

	// RVA: 0x19C3D74 Offset: 0x19C3D74 VA: 0x19C3D74
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x19C3D84 Offset: 0x19C3D84 VA: 0x19C3D84 Slot: 11
	public virtual void Invoke(bool isDecide) { }

	// RVA: 0x19C3FB0 Offset: 0x19C3FB0 VA: 0x19C3FB0 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isDecide, AsyncCallback callback, object object) { }

	// RVA: 0x19C4040 Offset: 0x19C4040 VA: 0x19C4040 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantSkillInfoIconComponent : BaseMonoBehaviour // TypeDefIndex: 9695
{
	// Fields
	[SerializeField] // RVA: 0xC6C618 Offset: 0xC6C618 VA: 0xC6C618
	protected SkillIconComponent skillIconComp; // 0x18
	[SerializeField] // RVA: 0xC6C628 Offset: 0xC6C628 VA: 0xC6C628
	protected GameObject defLvLabel; // 0x20
	[SerializeField] // RVA: 0xC6C638 Offset: 0xC6C638 VA: 0xC6C638
	protected UISprite backSprite; // 0x28
	[SerializeField] // RVA: 0xC6C648 Offset: 0xC6C648 VA: 0xC6C648
	protected UISprite skillIconSprite; // 0x30
	[SerializeField] // RVA: 0xC6C658 Offset: 0xC6C658 VA: 0xC6C658
	protected UISprite frameSprite; // 0x38
	[SerializeField] // RVA: 0xC6C668 Offset: 0xC6C668 VA: 0xC6C668
	protected GameObject levelInfo; // 0x40
	[SerializeField] // RVA: 0xC6C678 Offset: 0xC6C678 VA: 0xC6C678
	protected UILabel levelLabel; // 0x48
	[SerializeField] // RVA: 0xC6C688 Offset: 0xC6C688 VA: 0xC6C688
	protected UILabel skillNameLabel; // 0x50
	[SerializeField] // RVA: 0xC6C698 Offset: 0xC6C698 VA: 0xC6C698
	protected UISprite noSelectMskImg; // 0x58
	[SerializeField] // RVA: 0xC6C6A8 Offset: 0xC6C6A8 VA: 0xC6C6A8
	protected GameObject chargeInfoObj; // 0x60
	[SerializeField] // RVA: 0xC6C6B8 Offset: 0xC6C6B8 VA: 0xC6C6B8
	protected UILabel chargeTitleLb; // 0x68
	[SerializeField] // RVA: 0xC6C6C8 Offset: 0xC6C6C8 VA: 0xC6C6C8
	protected UILabel chargeTimeLb; // 0x70
	[SerializeField] // RVA: 0xC6C6D8 Offset: 0xC6C6D8 VA: 0xC6C6D8
	private UILabel statusLb; // 0x78
	[SerializeField] // RVA: 0xC6C6E8 Offset: 0xC6C6E8 VA: 0xC6C6E8
	private UISprite lockImg; // 0x80
	[SerializeField] // RVA: 0xC6C6F8 Offset: 0xC6C6F8 VA: 0xC6C6F8
	private UISprite lineImg; // 0x88
	private int index; // 0x90
	private bool isSetSkillId; // 0x94
	protected ServantSkillInfoIconComponent.ClickDelegate callbackFunc; // 0x98
	private int currentSkillId; // 0xA0
	private int currentSkillLv; // 0xA4
	private ServantSkillStrengthStatus skillStrengthStatus; // 0xA8

	// Methods

	// RVA: 0x1A8398C Offset: 0x1A8398C VA: 0x1A8398C
	public void .ctor() { }

	// RVA: 0x1A83994 Offset: 0x1A83994 VA: 0x1A83994
	public void SetSkillInfo(int idx, int skillId, int skillLv, int skillMaxLv, string skillName, int skillIconId, int statusKind, int skillRecord, int baseSvtId, ServantSkillInfoIconComponent.ClickDelegate callback) { }

	// RVA: 0x1A83DD4 Offset: 0x1A83DD4 VA: 0x1A83DD4
	private void SetSkillIconInfo(int idx, int skillId, int skillLv, ServantSkillInfoIconComponent.ClickDelegate callback) { }

	// RVA: 0x1A84818 Offset: 0x1A84818 VA: 0x1A84818
	public void SetSkillInfo(int idx, string skillName, int skillId, int skillLv, int skillMaxLv, ServantSkillInfoIconComponent.ClickDelegate callback) { }

	// RVA: 0x1A849C4 Offset: 0x1A849C4 VA: 0x1A849C4
	public void SetSkillIconStatusDisp(int skillLv, bool isEnableCombine) { }

	// RVA: 0x1A84BE0 Offset: 0x1A84BE0 VA: 0x1A84BE0
	public int getSkillInfo() { }

	// RVA: 0x1A84BE8 Offset: 0x1A84BE8 VA: 0x1A84BE8
	public void setDispSelectMskImg(bool isShow) { }

	// RVA: 0x1A84C38 Offset: 0x1A84C38 VA: 0x1A84C38
	public void OnClickSkill() { }

	// RVA: 0x1A84F14 Offset: 0x1A84F14 VA: 0x1A84F14
	public void OnClickSkillDetail() { }

	// RVA: 0x1A84430 Offset: 0x1A84430 VA: 0x1A84430
	public void checkEnableCombine(int id) { }

	// RVA: 0x1A85244 Offset: 0x1A85244 VA: 0x1A85244
	public void Clear() { }

	// RVA: 0x1A85434 Offset: 0x1A85434 VA: 0x1A85434
	public void ClearAppendSkillInfo() { }
}

// Namespace: 
public sealed class ServantSkillInfoIconComponent.ClickDelegate : MulticastDelegate // TypeDefIndex: 9696
{
	// Methods

	// RVA: 0x1A8567C Offset: 0x1A8567C VA: 0x1A8567C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1A84CD0 Offset: 0x1A84CD0 VA: 0x1A84CD0 Slot: 11
	public virtual void Invoke(bool isDecide, int idx) { }

	// RVA: 0x1A8568C Offset: 0x1A8568C VA: 0x1A8568C Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isDecide, int idx, AsyncCallback callback, object object) { }

	// RVA: 0x1A8573C Offset: 0x1A8573C VA: 0x1A8573C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SkillCombineControl : CombineMenuControl // TypeDefIndex: 9697
{
	// Fields
	[SerializeField] // RVA: 0xC6C708 Offset: 0xC6C708 VA: 0xC6C708
	private UISprite eventNoticeImg; // 0x68
	[SerializeField] // RVA: 0xC6C718 Offset: 0xC6C718 VA: 0xC6C718
	private UILabel preSelectBaseLb; // 0x70
	[SerializeField] // RVA: 0xC6C728 Offset: 0xC6C728 VA: 0xC6C728
	private GameObject baseSelectInfoLb; // 0x78
	[SerializeField] // RVA: 0xC6C738 Offset: 0xC6C738 VA: 0xC6C738
	private GameObject selectSkillInfo; // 0x80
	[SerializeField] // RVA: 0xC6C748 Offset: 0xC6C748 VA: 0xC6C748
	private GameObject skillCombineInfo; // 0x88
	[SerializeField] // RVA: 0xC6C758 Offset: 0xC6C758 VA: 0xC6C758
	private UILabel haveQpLb; // 0x90
	[SerializeField] // RVA: 0xC6C768 Offset: 0xC6C768 VA: 0xC6C768
	private UILabel needQpLb; // 0x98
	[SerializeField] // RVA: 0xC6C778 Offset: 0xC6C778 VA: 0xC6C778
	private UILabel qpLb; // 0xA0
	[SerializeField] // RVA: 0xC6C788 Offset: 0xC6C788 VA: 0xC6C788
	private UILabel detailInfoLb; // 0xA8
	[SerializeField] // RVA: 0xC6C798 Offset: 0xC6C798 VA: 0xC6C798
	private UILabel combineBtnTxt; // 0xB0
	[SerializeField] // RVA: 0xC6C7A8 Offset: 0xC6C7A8 VA: 0xC6C7A8
	private UISprite combineBtnBg; // 0xB8
	[SerializeField] // RVA: 0xC6C7B8 Offset: 0xC6C7B8 VA: 0xC6C7B8
	private UISprite combineTxtImg; // 0xC0
	[SerializeField] // RVA: 0xC6C7C8 Offset: 0xC6C7C8 VA: 0xC6C7C8
	private UILabel selectSkillHelpLb; // 0xC8
	[SerializeField] // RVA: 0xC6C7D8 Offset: 0xC6C7D8 VA: 0xC6C7D8
	private List<LimitCntUpItemComponent> itemInfoList; // 0xD0
	[SerializeField] // RVA: 0xC6C7E8 Offset: 0xC6C7E8 VA: 0xC6C7E8
	private List<ServantSkillInfoIconComponent> skillInfoList; // 0xD8
	private int haveQpVal; // 0xE0
	private int spendQpVal; // 0xE4
	private long userId; // 0xE8
	private int userQP; // 0xF0
	private SvtUseSkillData skillData; // 0xF8
	private SetLevelUpData lvUpData; // 0x100
	private List<ServantSkillInfoIconComponent> targetList; // 0x108
	private UICharaGraphTexture charaGraph; // 0x110
	private List<EventInfoData> combineEventList; // 0x118
	private int[] useSkillIdList; // 0x120
	private int currentIdx; // 0x128

	// Methods

	// RVA: 0x1521A5C Offset: 0x1521A5C VA: 0x1521A5C
	public void .ctor() { }

	// RVA: 0x1521A64 Offset: 0x1521A64 VA: 0x1521A64 Slot: 6
	protected override EventTutorialMaster.OpenType GetTutorialOpenType() { }

	// RVA: 0x1521A6C Offset: 0x1521A6C VA: 0x1521A6C
	public void InitSvtSkillCombine() { }

	// RVA: 0x1521D9C Offset: 0x1521D9C VA: 0x1521D9C
	private void InitDispCombineInfo() { }

	// RVA: 0x15222E8 Offset: 0x15222E8 VA: 0x15222E8
	private void SetHaveQpInfo() { }

	// RVA: 0x152237C Offset: 0x152237C VA: 0x152237C
	public void SetBaseSvtSkillInfo(UserServantEntity usrSvtEn, int idx = 0) { }

	// RVA: 0x1522948 Offset: 0x1522948 VA: 0x1522948
	public void SetBaseSvtCardImg(UserServantEntity usrSvtData) { }

	// RVA: 0x15224DC Offset: 0x15224DC VA: 0x15224DC
	private SvtUseSkillData GetSvtSkillData(UserServantEntity usrSvtData) { }

	// RVA: 0x15225B4 Offset: 0x15225B4 VA: 0x15225B4
	private void SetCombineSkillList(SvtUseSkillData skillData, GameObject targetGo, int svtId) { }

	// RVA: 0x1522D3C Offset: 0x1522D3C VA: 0x1522D3C
	public void OnClickInfo(bool isdecide, int idx) { }

	// RVA: 0x1522B78 Offset: 0x1522B78 VA: 0x1522B78
	private void SetNeedItemInfo(int idx) { }

	// RVA: 0x1522D44 Offset: 0x1522D44 VA: 0x1522D44
	private void SetSvtSkillCombineData(int idx) { }

	// RVA: 0x15220BC Offset: 0x15220BC VA: 0x15220BC
	private void SetExeBtnState() { }

	// RVA: 0x15238A8 Offset: 0x15238A8 VA: 0x15238A8
	public SetLevelUpData GetTargetData() { }

	// RVA: 0x15238B0 Offset: 0x15238B0 VA: 0x15238B0
	public void OnClickExeCombine() { }

	// RVA: 0x1523954 Offset: 0x1523954 VA: 0x1523954
	public void SetStateInfoMsg(CombineRootComponent.StateType state) { }

	// RVA: 0x1523AA4 Offset: 0x1523AA4 VA: 0x1523AA4
	public bool CheckIsMaxLvSkills(UserServantEntity resData) { }
}

// Namespace: 
public class SvtEqCombineListViewItem : ListViewItem // TypeDefIndex: 9698
{
	// Fields
	protected SvtEqCombineListViewItem.Type type; // 0x70
	protected UserServantEntity userSvtEntity; // 0x78
	protected ServantEntity servantEntity; // 0x80
	protected EventUpValSetupInfo setupInfo; // 0x88
	protected EventUpValSetupInfo finishSetupInfo; // 0x90
	protected int svtId; // 0x98
	protected int rarity; // 0x9C
	protected bool isLock; // 0xA0
	protected bool isLimitCntTarget; // 0xA1
	protected bool isLvMax; // 0xA2
	protected bool isLimitCntMax; // 0xA3
	protected bool isFavorite; // 0xA4
	protected bool isChoice; // 0xA5
	private bool isNotSelection; // 0xA6
	private bool isFriendShipSvtEq; // 0xA7
	private bool isChocolateSvtEquip; // 0xA8
	protected bool isBaseSvt; // 0xA9
	protected bool isMaterialSvt; // 0xAA
	public bool isLastSelectMaterial; // 0xAB
	protected int materialExp; // 0xAC
	protected int partyIndex; // 0xB0
	protected bool isMaxSelect; // 0xB4
	protected string sortInfoText; // 0xB8
	protected int classId; // 0xC0
	protected int friendship; // 0xC4
	protected int friendshipMax; // 0xC8
	protected bool isEquiped; // 0xCC
	protected IconLabelInfo iconLabelInfo1; // 0xD0
	protected IconLabelInfo iconLabelInfo2; // 0xD8
	protected long amountSortValue; // 0xE0
	protected int maxLimitCnt; // 0xE8
	protected int currentLimitCnt; // 0xEC
	protected bool isSvtEqMaterial; // 0xF0
	protected bool isBaseLvMax; // 0xF1
	protected bool isMaxNextLv; // 0xF2
	protected bool isSameSvt; // 0xF3
	protected bool isUseSupportEquip; // 0xF4
	protected bool isSwapLock; // 0xF5
	protected bool isSwapChoice; // 0xF6
	protected int dragSelectNum; // 0xF8
	protected bool isCanNotLock; // 0xFC
	protected ListViewSort.BonusFilterKind bonusKind; // 0x100
	protected int bonusKindId; // 0x104
	protected bool isEventUpVal; // 0x108
	protected int[] categoryIdList; // 0x110

	// Properties
	public SvtEqCombineListViewItem.Type ListType { get; }
	public UserServantEntity UserSvtEntity { get; }
	public long UserSvtId { get; }
	public int SvtId { get; }
	public int SvtRariry { get; }
	public bool IsCanNotBaseSelect { get; }
	public bool IsCanNotSelect { get; }
	public bool IsLimitTarget { get; }
	public bool IsLock { get; }
	public bool IsChoice { get; }
	public int GetMaterialExp { get; }
	public bool IsBaseSvt { get; }
	public bool IsMtSelect { get; set; }
	public bool IsSelectMax { get; set; }
	public IconLabelInfo IconInfo1 { get; }
	public IconLabelInfo IconInfo2 { get; }
	public bool IsLimitCntMax { get; }
	public bool IsLvMax { get; }
	public bool IsEquip { get; }
	public int GetMaxLimitCnt { get; }
	public int GetCurrentLimitCnt { get; }
	public bool IsSvtEqMaterial { get; }
	public bool IsMaxNextLv { get; set; }
	public bool IsBaseLvMax { get; }
	public bool IsUseSupportEquip { get; }
	public int GetAddTotalExp { get; }
	public bool IsSwapLock { get; }
	public bool IsDispLock { get; }
	public bool IsSwapChoice { get; }
	public bool IsDispChoice { get; }
	public bool IsDragSelect { get; set; }
	public int DragSelectNum { get; set; }
	public bool IsCanNotLock { get; set; }
	public int CombineQp { get; }
	public int PartyIndex { get; }
	public bool IsNotSelection { get; }
	public bool IsFriendShipSvtEq { get; }
	public bool IsChocolateSvtEquip { get; }

	// Methods

	// RVA: 0x14FCF78 Offset: 0x14FCF78 VA: 0x14FCF78
	public void .ctor(SvtEqCombineListViewItem.Type type, int index, UserServantEntity userSvtEntity, bool isFavorite, UserServantEntity baseUsrSvtData, bool isMtSvt, EventUpValSetupInfo setupInfo, EventUpValSetupInfo finishSetupInfo) { }

	// RVA: 0x14FDE14 Offset: 0x14FDE14 VA: 0x14FDE14 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x14FDE1C Offset: 0x14FDE1C VA: 0x14FDE1C
	public void ModifyItem(bool isFavorite) { }

	// RVA: 0x14FDE48 Offset: 0x14FDE48 VA: 0x14FDE48
	public void ModifyLockItem() { }

	// RVA: 0x14FDE8C Offset: 0x14FDE8C VA: 0x14FDE8C
	public void ModifyChoiceItem() { }

	// RVA: 0x14FDED0 Offset: 0x14FDED0 VA: 0x14FDED0 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x14FEA98 Offset: 0x14FEA98 VA: 0x14FEA98 Slot: 5
	public override bool IsMatchFilter(ListViewSort sort) { }

	// RVA: 0x14FEC54 Offset: 0x14FEC54 VA: 0x14FEC54
	public SvtEqCombineListViewItem.Type get_ListType() { }

	// RVA: 0x14FEC5C Offset: 0x14FEC5C VA: 0x14FEC5C
	public void setUserServantEntity(UserServantEntity entity) { }

	// RVA: 0x14FEC64 Offset: 0x14FEC64 VA: 0x14FEC64
	public UserServantEntity get_UserSvtEntity() { }

	// RVA: 0x14FEC6C Offset: 0x14FEC6C VA: 0x14FEC6C
	public long get_UserSvtId() { }

	// RVA: 0x14FED08 Offset: 0x14FED08 VA: 0x14FED08
	public int get_SvtId() { }

	// RVA: 0x14FED10 Offset: 0x14FED10 VA: 0x14FED10
	public int get_SvtRariry() { }

	// RVA: 0x14FED18 Offset: 0x14FED18 VA: 0x14FED18
	public bool get_IsCanNotBaseSelect() { }

	// RVA: 0x14FED50 Offset: 0x14FED50 VA: 0x14FED50
	public bool get_IsCanNotSelect() { }

	// RVA: 0x14FED98 Offset: 0x14FED98 VA: 0x14FED98
	public bool get_IsLimitTarget() { }

	// RVA: 0x14FEDA0 Offset: 0x14FEDA0 VA: 0x14FEDA0
	public bool get_IsLock() { }

	// RVA: 0x14FEDA8 Offset: 0x14FEDA8 VA: 0x14FEDA8
	public bool get_IsChoice() { }

	// RVA: 0x14FEDB0 Offset: 0x14FEDB0 VA: 0x14FEDB0
	public int get_GetMaterialExp() { }

	// RVA: 0x14FE904 Offset: 0x14FE904 VA: 0x14FE904
	public bool get_IsBaseSvt() { }

	// RVA: 0x14FEDB8 Offset: 0x14FEDB8 VA: 0x14FEDB8
	public bool get_IsMtSelect() { }

	// RVA: 0x14FEDC0 Offset: 0x14FEDC0 VA: 0x14FEDC0
	public void set_IsMtSelect(bool value) { }

	// RVA: 0x14FEDCC Offset: 0x14FEDCC VA: 0x14FEDCC
	public bool get_IsSelectMax() { }

	// RVA: 0x14FEDD4 Offset: 0x14FEDD4 VA: 0x14FEDD4
	public void set_IsSelectMax(bool value) { }

	// RVA: 0x14FEDE0 Offset: 0x14FEDE0 VA: 0x14FEDE0
	public IconLabelInfo get_IconInfo1() { }

	// RVA: 0x14FEDE8 Offset: 0x14FEDE8 VA: 0x14FEDE8
	public IconLabelInfo get_IconInfo2() { }

	// RVA: 0x14FEDF0 Offset: 0x14FEDF0 VA: 0x14FEDF0
	public bool get_IsLimitCntMax() { }

	// RVA: 0x14FEDF8 Offset: 0x14FEDF8 VA: 0x14FEDF8
	public bool get_IsLvMax() { }

	// RVA: 0x14FEE00 Offset: 0x14FEE00 VA: 0x14FEE00
	public bool get_IsEquip() { }

	// RVA: 0x14FEE08 Offset: 0x14FEE08 VA: 0x14FEE08
	public int get_GetMaxLimitCnt() { }

	// RVA: 0x14FEE10 Offset: 0x14FEE10 VA: 0x14FEE10
	public int get_GetCurrentLimitCnt() { }

	// RVA: 0x14FEE18 Offset: 0x14FEE18 VA: 0x14FEE18
	public bool get_IsSvtEqMaterial() { }

	// RVA: 0x14FEE20 Offset: 0x14FEE20 VA: 0x14FEE20
	public bool get_IsMaxNextLv() { }

	// RVA: 0x14FEE28 Offset: 0x14FEE28 VA: 0x14FEE28
	public void set_IsMaxNextLv(bool value) { }

	// RVA: 0x14FEE34 Offset: 0x14FEE34 VA: 0x14FEE34
	public bool get_IsBaseLvMax() { }

	// RVA: 0x14FEE3C Offset: 0x14FEE3C VA: 0x14FEE3C
	public bool get_IsUseSupportEquip() { }

	// RVA: 0x14FEE44 Offset: 0x14FEE44 VA: 0x14FEE44
	public int get_GetAddTotalExp() { }

	// RVA: 0x14FEE88 Offset: 0x14FEE88 VA: 0x14FEE88
	public bool SwapLock() { }

	// RVA: 0x14FEEA4 Offset: 0x14FEEA4 VA: 0x14FEEA4
	public bool get_IsSwapLock() { }

	// RVA: 0x14FE90C Offset: 0x14FE90C VA: 0x14FE90C
	public bool get_IsDispLock() { }

	// RVA: 0x14FEEAC Offset: 0x14FEEAC VA: 0x14FEEAC
	public bool SwapChoice() { }

	// RVA: 0x14FEEC8 Offset: 0x14FEEC8 VA: 0x14FEEC8
	public bool get_IsSwapChoice() { }

	// RVA: 0x14FE8E4 Offset: 0x14FE8E4 VA: 0x14FE8E4
	public bool get_IsDispChoice() { }

	// RVA: 0x14FEED0 Offset: 0x14FEED0 VA: 0x14FEED0
	public bool get_IsDragSelect() { }

	// RVA: 0x14FEEE0 Offset: 0x14FEEE0 VA: 0x14FEEE0
	public void set_IsDragSelect(bool value) { }

	// RVA: 0x14FEF10 Offset: 0x14FEF10 VA: 0x14FEF10
	public int get_DragSelectNum() { }

	// RVA: 0x14FEF18 Offset: 0x14FEF18 VA: 0x14FEF18
	public void set_DragSelectNum(int value) { }

	// RVA: 0x14FEF20 Offset: 0x14FEF20 VA: 0x14FEF20
	public bool get_IsCanNotLock() { }

	// RVA: 0x14FEF28 Offset: 0x14FEF28 VA: 0x14FEF28
	public void set_IsCanNotLock(bool value) { }

	// RVA: 0x14FEF34 Offset: 0x14FEF34 VA: 0x14FEF34
	public int get_CombineQp() { }

	// RVA: 0x14FEF64 Offset: 0x14FEF64 VA: 0x14FEF64
	public int get_PartyIndex() { }

	// RVA: 0x14FEF6C Offset: 0x14FEF6C VA: 0x14FEF6C
	public bool get_IsNotSelection() { }

	// RVA: 0x14FEF74 Offset: 0x14FEF74 VA: 0x14FEF74
	public bool get_IsFriendShipSvtEq() { }

	// RVA: 0x14FEF7C Offset: 0x14FEF7C VA: 0x14FEF7C
	public bool get_IsChocolateSvtEquip() { }
}

// Namespace: 
public enum SvtEqCombineListViewItem.Type // TypeDefIndex: 9699
{
	// Fields
	public int value__; // 0x0
	public const SvtEqCombineListViewItem.Type SVTEQ_BASE = 0;
	public const SvtEqCombineListViewItem.Type SVTEQ_MATERIAL = 1;
	public const SvtEqCombineListViewItem.Type SUM = 2;
}

// Namespace: 
public class SvtEqCombineListViewItemDraw : BaseMonoBehaviour // TypeDefIndex: 9700
{
	// Fields
	[SerializeField] // RVA: 0xC6C7F8 Offset: 0xC6C7F8 VA: 0xC6C7F8
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xC6C808 Offset: 0xC6C808 VA: 0xC6C808
	private ServantFaceIconComponent servantface; // 0x20
	[SerializeField] // RVA: 0xC6C818 Offset: 0xC6C818 VA: 0xC6C818
	protected DragSelectComponent dragSelect; // 0x28
	[SerializeField] // RVA: 0xC6C828 Offset: 0xC6C828 VA: 0xC6C828
	protected UILabel statusTextLabel; // 0x30
	[SerializeField] // RVA: 0xC6C838 Offset: 0xC6C838 VA: 0xC6C838
	protected UISprite faceImg; // 0x38
	[SerializeField] // RVA: 0xC6C848 Offset: 0xC6C848 VA: 0xC6C848
	protected UISprite frameImg; // 0x40
	[SerializeField] // RVA: 0xC6C858 Offset: 0xC6C858 VA: 0xC6C858
	protected UISprite partyImg; // 0x48
	[SerializeField] // RVA: 0xC6C868 Offset: 0xC6C868 VA: 0xC6C868
	protected FlashingIconComponent partyIcon; // 0x50
	[SerializeField] // RVA: 0xC6C878 Offset: 0xC6C878 VA: 0xC6C878
	protected UISprite removeImg; // 0x58
	[SerializeField] // RVA: 0xC6C888 Offset: 0xC6C888 VA: 0xC6C888
	protected UISprite lockImg; // 0x60
	[SerializeField] // RVA: 0xC6C898 Offset: 0xC6C898 VA: 0xC6C898
	protected UISprite choiceImg; // 0x68
	[SerializeField] // RVA: 0xC6C8A8 Offset: 0xC6C8A8 VA: 0xC6C8A8
	protected UISprite equipSprite; // 0x70
	[SerializeField] // RVA: 0xC6C8B8 Offset: 0xC6C8B8 VA: 0xC6C8B8
	protected UISprite maskSprite; // 0x78
	[SerializeField] // RVA: 0xC6C8C8 Offset: 0xC6C8C8 VA: 0xC6C8C8
	protected UILabel maskLabel; // 0x80
	[SerializeField] // RVA: 0xC6C8D8 Offset: 0xC6C8D8 VA: 0xC6C8D8
	private UISprite friendShipImg; // 0x88
	[SerializeField] // RVA: 0xC6C8E8 Offset: 0xC6C8E8 VA: 0xC6C8E8
	private UISprite chocolateSprite; // 0x90
	public LimitCountIconComponent limitCountIcon; // 0x98
	public UIIconLabel subIconLabel; // 0xA0

	// Methods

	// RVA: 0x14FEF84 Offset: 0x14FEF84 VA: 0x14FEF84
	public void .ctor() { }

	// RVA: 0x14FEF8C Offset: 0x14FEF8C VA: 0x14FEF8C
	public void SetItem(SvtEqCombineListViewItem item, SvtEqCombineListViewItemDraw.DispMode mode, SvtEqCombineListViewManager.ModeKind modeKind) { }

	// RVA: 0x1500124 Offset: 0x1500124 VA: 0x1500124
	public void SetInput(SvtEqCombineListViewItem item, bool isInput) { }

	// RVA: 0x150003C Offset: 0x150003C VA: 0x150003C
	protected void SetSelectDisp(SvtEqCombineListViewItem item) { }
}

// Namespace: 
public enum SvtEqCombineListViewItemDraw.DispMode // TypeDefIndex: 9701
{
	// Fields
	public int value__; // 0x0
	public const SvtEqCombineListViewItemDraw.DispMode INVISIBLE = 0;
	public const SvtEqCombineListViewItemDraw.DispMode INVALID = 1;
	public const SvtEqCombineListViewItemDraw.DispMode VALID = 2;
	public const SvtEqCombineListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class SvtEqCombineListViewManager : ListViewManager // TypeDefIndex: 9702
{
	// Fields
	protected static readonly float COLOR_VAL; // 0x0
	protected static readonly int FILTER2_MAX_KIND_NUM; // 0x4
	public static readonly string SORT_SAVE_KEY; // 0x8
	[SerializeField] // RVA: 0xC6C8F8 Offset: 0xC6C8F8 VA: 0xC6C8F8
	private CombineRootComponent combineRootComponent; // 0x138
	[SerializeField] // RVA: 0xC6C908 Offset: 0xC6C908 VA: 0xC6C908
	private UILabel emptyListNoticeLabel; // 0x140
	[SerializeField] // RVA: 0xC6C918 Offset: 0xC6C918 VA: 0xC6C918
	private UILabel servantInfoLabel; // 0x148
	[SerializeField] // RVA: 0xC6C928 Offset: 0xC6C928 VA: 0xC6C928
	private UILabel selectInfoLabel; // 0x150
	[SerializeField] // RVA: 0xC6C938 Offset: 0xC6C938 VA: 0xC6C938
	private UILabel spendQpInfoLabel; // 0x158
	[SerializeField] // RVA: 0xC6C948 Offset: 0xC6C948 VA: 0xC6C948
	private UILabel spendQpLabel; // 0x160
	[SerializeField] // RVA: 0xC6C958 Offset: 0xC6C958 VA: 0xC6C958
	private UISprite spendQpBg; // 0x168
	[SerializeField] // RVA: 0xC6C968 Offset: 0xC6C968 VA: 0xC6C968
	private UISprite spendQpInfoImg; // 0x170
	[SerializeField] // RVA: 0xC6C978 Offset: 0xC6C978 VA: 0xC6C978
	private GameObject getExpInfo; // 0x178
	[SerializeField] // RVA: 0xC6C988 Offset: 0xC6C988 VA: 0xC6C988
	private UILabel getExpInfoLabel; // 0x180
	[SerializeField] // RVA: 0xC6C998 Offset: 0xC6C998 VA: 0xC6C998
	private UILabel getExpLabel; // 0x188
	[SerializeField] // RVA: 0xC6C9A8 Offset: 0xC6C9A8 VA: 0xC6C9A8
	private UISprite getExpBg; // 0x190
	[SerializeField] // RVA: 0xC6C9B8 Offset: 0xC6C9B8 VA: 0xC6C9B8
	private UISprite getExpBgImg; // 0x198
	[SerializeField] // RVA: 0xC6C9C8 Offset: 0xC6C9C8 VA: 0xC6C9C8
	private UILabel getBasicExpLabel; // 0x1A0
	[SerializeField] // RVA: 0xC6C9D8 Offset: 0xC6C9D8 VA: 0xC6C9D8
	private UILabel getAccExpLabel; // 0x1A8
	[SerializeField] // RVA: 0xC6C9E8 Offset: 0xC6C9E8 VA: 0xC6C9E8
	private UILabel haveQpLabel; // 0x1B0
	[SerializeField] // RVA: 0xC6C9F8 Offset: 0xC6C9F8 VA: 0xC6C9F8
	private UISprite haveQpInfoImg; // 0x1B8
	[SerializeField] // RVA: 0xC6CA08 Offset: 0xC6CA08 VA: 0xC6CA08
	private UISprite haveQpBg; // 0x1C0
	[SerializeField] // RVA: 0xC6CA18 Offset: 0xC6CA18 VA: 0xC6CA18
	private UILabel nextExpLabel; // 0x1C8
	[SerializeField] // RVA: 0xC6CA28 Offset: 0xC6CA28 VA: 0xC6CA28
	private UISprite nextExpInfoImg; // 0x1D0
	[SerializeField] // RVA: 0xC6CA38 Offset: 0xC6CA38 VA: 0xC6CA38
	private UISprite nextExpBg; // 0x1D8
	[SerializeField] // RVA: 0xC6CA48 Offset: 0xC6CA48 VA: 0xC6CA48
	private UICommonButton allReleaseButton; // 0x1E0
	[SerializeField] // RVA: 0xC6CA58 Offset: 0xC6CA58 VA: 0xC6CA58
	private UIButton decideButton; // 0x1E8
	[SerializeField] // RVA: 0xC6CA68 Offset: 0xC6CA68 VA: 0xC6CA68
	private UISprite decideBtnBg; // 0x1F0
	private bool isDecideFlg; // 0x1F8
	[SerializeField] // RVA: 0xC6CA78 Offset: 0xC6CA78 VA: 0xC6CA78
	private int selectMax; // 0x1FC
	[SerializeField] // RVA: 0xC6CA88 Offset: 0xC6CA88 VA: 0xC6CA88
	private UISprite levelUpInfoImg; // 0x200
	[SerializeField] // RVA: 0xC6CA98 Offset: 0xC6CA98 VA: 0xC6CA98
	private UILabel combineInfoMsgLb; // 0x208
	[SerializeField] // RVA: 0xC6CAA8 Offset: 0xC6CAA8 VA: 0xC6CAA8
	private UISprite sortExplanationSprite; // 0x210
	[SerializeField] // RVA: 0xC6CAB8 Offset: 0xC6CAB8 VA: 0xC6CAB8
	private UISprite statusTabSprite; // 0x218
	[SerializeField] // RVA: 0xC6CAC8 Offset: 0xC6CAC8 VA: 0xC6CAC8
	private UISprite lockTabSprite; // 0x220
	[SerializeField] // RVA: 0xC6CAD8 Offset: 0xC6CAD8 VA: 0xC6CAD8
	private UISprite choiceTabSprite; // 0x228
	[SerializeField] // RVA: 0xC6CAE8 Offset: 0xC6CAE8 VA: 0xC6CAE8
	private UICommonButton statusTabButton; // 0x230
	[SerializeField] // RVA: 0xC6CAF8 Offset: 0xC6CAF8 VA: 0xC6CAF8
	private UICommonButton lockTabButton; // 0x238
	[SerializeField] // RVA: 0xC6CB08 Offset: 0xC6CB08 VA: 0xC6CB08
	private UICommonButton choiceTabButton; // 0x240
	[SerializeField] // RVA: 0xC6CB18 Offset: 0xC6CB18 VA: 0xC6CB18
	private UISprite filterSprite; // 0x248
	[SerializeField] // RVA: 0xC6CB28 Offset: 0xC6CB28 VA: 0xC6CB28
	private UICommonButton bonusFilterKindButton; // 0x250
	[SerializeField] // RVA: 0xC6CB38 Offset: 0xC6CB38 VA: 0xC6CB38
	private UILabel bonusFilterKindLabel; // 0x258
	[SerializeField] // RVA: 0xC6CB48 Offset: 0xC6CB48 VA: 0xC6CB48
	private ListViewItemSeed normalSizeSeed; // 0x260
	[SerializeField] // RVA: 0xC6CB58 Offset: 0xC6CB58 VA: 0xC6CB58
	private ListViewItemSeed smallSizeSeed; // 0x268
	[SerializeField] // RVA: 0xC6CB68 Offset: 0xC6CB68 VA: 0xC6CB68
	private ListViewItemSeed extremelySmallSizeSeed; // 0x270
	[SerializeField] // RVA: 0xC6CB78 Offset: 0xC6CB78 VA: 0xC6CB78
	private UICommonButton scaleChangeButton; // 0x278
	[SerializeField] // RVA: 0xC6CB88 Offset: 0xC6CB88 VA: 0xC6CB88
	private UISprite scaleChangeButtonSprite; // 0x280
	[SerializeField] // RVA: 0xC6CB98 Offset: 0xC6CB98 VA: 0xC6CB98
	private UISprite bgTxtSprite; // 0x288
	[SerializeField] // RVA: 0xC6CBA8 Offset: 0xC6CBA8 VA: 0xC6CBA8
	private ServantCheckEquipDialog servantEquipCheckDialog; // 0x290
	[SerializeField] // RVA: 0xC6CBB8 Offset: 0xC6CBB8 VA: 0xC6CBB8
	private MenuListControl menuListCtr; // 0x298
	private static bool isInitSystem; // 0x10
	private static ListViewSort[] sortStatusList; // 0x18
	private List<SvtEqCombineListViewItem> tempMtSvtList; // 0x2A0
	[CompilerGeneratedAttribute] // RVA: 0xC6CBC8 Offset: 0xC6CBC8 VA: 0xC6CBC8
	[DebuggerBrowsableAttribute] // RVA: 0xC6CBC8 Offset: 0xC6CBC8 VA: 0xC6CBC8
	private List<SvtEqCombineListViewItem> <selectedMtSvtList>k__BackingField; // 0x2A8
	private SetCombineData combineData; // 0x2B0
	private UserServantEntity selectUsrSvtEntity; // 0x2B8
	private SvtEqCombineListViewItem.Type itemType; // 0x2C0
	private SvtEqCombineListViewManager.InitMode initMode; // 0x2C4
	private SvtEqCombineListViewManager.ModeKind modeKind; // 0x2C8
	private ListViewSort.ScaleType scaleType; // 0x2CC
	[CompilerGeneratedAttribute] // RVA: 0xC6CC04 Offset: 0xC6CC04 VA: 0xC6CC04
	[DebuggerBrowsableAttribute] // RVA: 0xC6CC04 Offset: 0xC6CC04 VA: 0xC6CC04
	private SvtEqCombineListViewManager.CallbackFunc callbackFunc; // 0x2D0
	[CompilerGeneratedAttribute] // RVA: 0xC6CC40 Offset: 0xC6CC40 VA: 0xC6CC40
	[DebuggerBrowsableAttribute] // RVA: 0xC6CC40 Offset: 0xC6CC40 VA: 0xC6CC40
	private Action callbackFunc2; // 0x2D8
	private int callbackCount; // 0x2E0
	private SvtEqCombineListViewManager.RequestCallbackFunc requestCallback; // 0x2E8
	private UserServantMaster userServantMaster; // 0x2F0
	private int userQP; // 0x2F8
	private int selectSum; // 0x2FC
	private int selectQp; // 0x300
	private int selectExp; // 0x304
	private int addTotalExp; // 0x308
	private UserServantEntity baseUsrSvtData; // 0x310
	private long[] highRarityList; // 0x318
	private int expType; // 0x320
	private int totalExp; // 0x324
	private int increLv; // 0x328
	private int checkLv; // 0x32C
	private int getHpUpVal; // 0x330
	private int getAtkUpVal; // 0x334
	private bool isAllUpMax; // 0x338
	private bool isSelectMaterial; // 0x339
	[CompilerGeneratedAttribute] // RVA: 0xC6CC7C Offset: 0xC6CC7C VA: 0xC6CC7C
	[DebuggerBrowsableAttribute] // RVA: 0xC6CC7C Offset: 0xC6CC7C VA: 0xC6CC7C
	private bool <isOpenCheckEquipDialog>k__BackingField; // 0x33A
	private int[] bonusEventIdList; // 0x340
	private int[] bonusFinishEventIdList; // 0x348
	private SvtEqCombineListViewItem.Type currentType; // 0x350
	protected int dragSelectSum; // 0x354
	protected int dragStartIndex; // 0x358
	protected int dragEndIndex; // 0x35C
	protected bool isDragSelect; // 0x360
	[CompilerGeneratedAttribute] // RVA: 0xC6CCB8 Offset: 0xC6CCB8 VA: 0xC6CCB8
	private static Comparison<SvtEqCombineListViewItem> <>f__am$cache0; // 0x20

	// Properties
	public List<SvtEqCombineListViewItem> selectedMtSvtList { get; set; }
	public bool isOpenCheckEquipDialog { get; set; }
	public List<SvtEqCombineListViewObject> ObjectList { get; }
	public List<SvtEqCombineListViewObject> ClippingObjectList { get; }
	public SvtEqCombineListViewManager.ModeKind getModeKind { get; }

	// Methods

	// RVA: 0x1500638 Offset: 0x1500638 VA: 0x1500638
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCFC40 Offset: 0xCCFC40 VA: 0xCCFC40
