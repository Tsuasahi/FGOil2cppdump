	[EditorBrowsableAttribute] // RVA: 0xBD1510 Offset: 0xBD1510 VA: 0xBD1510
	// RVA: 0x2195918 Offset: 0x2195918 VA: 0x2195918
	public static object GetAssociation(Type type, object primary) { }

	[EditorBrowsableAttribute] // RVA: 0xBD1560 Offset: 0xBD1560 VA: 0xBD1560
	[MonoNotSupportedAttribute] // RVA: 0xBD1560 Offset: 0xBD1560 VA: 0xBD1560
	// RVA: 0x2195980 Offset: 0x2195980 VA: 0x2195980
	public static void RemoveAssociation(object primary, object secondary) { }

	[EditorBrowsableAttribute] // RVA: 0xBD15B0 Offset: 0xBD15B0 VA: 0xBD15B0
	[MonoNotSupportedAttribute] // RVA: 0xBD15B0 Offset: 0xBD15B0 VA: 0xBD15B0
	// RVA: 0x21959E8 Offset: 0x21959E8 VA: 0x21959E8
	public static void RemoveAssociations(object primary) { }

	[EditorBrowsableAttribute] // RVA: 0xBD1600 Offset: 0xBD1600 VA: 0xBD1600
	// RVA: 0x2195A50 Offset: 0x2195A50 VA: 0x2195A50
	public static void RemoveProvider(TypeDescriptionProvider provider, object instance) { }

	[EditorBrowsableAttribute] // RVA: 0xBD1614 Offset: 0xBD1614 VA: 0xBD1614
	// RVA: 0x2195E14 Offset: 0x2195E14 VA: 0x2195E14
	public static void RemoveProvider(TypeDescriptionProvider provider, Type type) { }

	// RVA: 0x2195CC0 Offset: 0x2195CC0 VA: 0x2195CC0
	private static void RemoveProvider(TypeDescriptionProvider provider, LinkedList<TypeDescriptionProvider> plist) { }

	// RVA: 0x2196058 Offset: 0x2196058 VA: 0x2196058
	public static void SortDescriptorArray(IList infos) { }

	// RVA: 0x2196604 Offset: 0x2196604 VA: 0x2196604
	public static IComNativeDescriptorHandler get_ComNativeDescriptorHandler() { }

	// RVA: 0x219666C Offset: 0x219666C VA: 0x219666C
	public static void set_ComNativeDescriptorHandler(IComNativeDescriptorHandler value) { }

	// RVA: 0x21966D8 Offset: 0x21966D8 VA: 0x21966D8
	public static void Refresh(Assembly assembly) { }

	// RVA: 0x21967B0 Offset: 0x21967B0 VA: 0x21967B0
	public static void Refresh(Module module) { }

	// RVA: 0x218F978 Offset: 0x218F978 VA: 0x218F978
	public static void Refresh(object component) { }

	// RVA: 0x218FB18 Offset: 0x218FB18 VA: 0x218FB18
	public static void Refresh(Type type) { }

	// RVA: 0x2196888 Offset: 0x2196888 VA: 0x2196888
	private static void OnComponentDisposed(object sender, EventArgs args) { }

	// RVA: 0x2190DA0 Offset: 0x2190DA0 VA: 0x2190DA0
	internal static ComponentInfo GetComponentInfo(IComponent com) { }

	// RVA: 0x2190894 Offset: 0x2190894 VA: 0x2190894
	internal static TypeInfo GetTypeInfo(Type type) { }

	// RVA: 0x2190388 Offset: 0x2190388 VA: 0x2190388
	private static Type GetTypeFromName(IComponent component, string typeName) { }
}

// Namespace: 
private sealed class TypeDescriptor.AttributeProvider : TypeDescriptionProvider // TypeDefIndex: 1298
{
	// Fields
	private Attribute[] attributes; // 0x20

	// Methods

	// RVA: 0x218F008 Offset: 0x218F008 VA: 0x218F008
	public void .ctor(Attribute[] attributes, TypeDescriptionProvider parent) { }

	// RVA: 0x21969B8 Offset: 0x21969B8 VA: 0x21969B8 Slot: 9
	public override ICustomTypeDescriptor GetTypeDescriptor(Type type, object instance) { }
}

// Namespace: 
private sealed class TypeDescriptor.AttributeProvider.AttributeTypeDescriptor : CustomTypeDescriptor // TypeDefIndex: 1299
{
	// Fields
	private Attribute[] attributes; // 0x18

	// Methods

	// RVA: 0x2196A4C Offset: 0x2196A4C VA: 0x2196A4C
	public void .ctor(ICustomTypeDescriptor parent, Attribute[] attributes) { }

	// RVA: 0x2196A78 Offset: 0x2196A78 VA: 0x2196A78 Slot: 16
	public override AttributeCollection GetAttributes() { }
}

// Namespace: 
private sealed class TypeDescriptor.WrappedTypeDescriptionProvider : TypeDescriptionProvider // TypeDefIndex: 1300
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xBD0DEC Offset: 0xBD0DEC VA: 0xBD0DEC
	private TypeDescriptionProvider <Wrapped>k__BackingField; // 0x20

	// Properties
	public TypeDescriptionProvider Wrapped { get; set; }

	// Methods

	// RVA: 0x2195768 Offset: 0x2195768 VA: 0x2195768
	public void .ctor(TypeDescriptionProvider wrapped) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1628 Offset: 0xBD1628 VA: 0xBD1628
	// RVA: 0x2196E18 Offset: 0x2196E18 VA: 0x2196E18
	public TypeDescriptionProvider get_Wrapped() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1638 Offset: 0xBD1638 VA: 0xBD1638
	// RVA: 0x21972BC Offset: 0x21972BC VA: 0x21972BC
	private void set_Wrapped(TypeDescriptionProvider value) { }

	// RVA: 0x21972C4 Offset: 0x21972C4 VA: 0x21972C4 Slot: 4
	public override object CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, object[] args) { }

	// RVA: 0x21972E4 Offset: 0x21972E4 VA: 0x21972E4 Slot: 5
	public override IDictionary GetCache(object instance) { }

	// RVA: 0x2197308 Offset: 0x2197308 VA: 0x2197308 Slot: 6
	public override ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance) { }

	// RVA: 0x219737C Offset: 0x219737C VA: 0x219737C Slot: 7
	public override string GetFullComponentName(object component) { }

	// RVA: 0x219739C Offset: 0x219739C VA: 0x219739C Slot: 8
	public override Type GetReflectionType(Type type, object instance) { }

	// RVA: 0x21973C4 Offset: 0x21973C4 VA: 0x21973C4 Slot: 9
	public override ICustomTypeDescriptor GetTypeDescriptor(Type objectType, object instance) { }
}

// Namespace: 
private sealed class TypeDescriptor.DefaultTypeDescriptor : CustomTypeDescriptor // TypeDefIndex: 1301
{
	// Fields
	private TypeDescriptionProvider owner; // 0x18
	private Type objectType; // 0x20
	private object instance; // 0x28

	// Methods

	// RVA: 0x2196BB8 Offset: 0x2196BB8 VA: 0x2196BB8
	public void .ctor(TypeDescriptionProvider owner, Type objectType, object instance) { }

	// RVA: 0x2196C70 Offset: 0x2196C70 VA: 0x2196C70 Slot: 16
	public override AttributeCollection GetAttributes() { }

	// RVA: 0x2196E20 Offset: 0x2196E20 VA: 0x2196E20 Slot: 17
	public override string GetClassName() { }

	// RVA: 0x2196F44 Offset: 0x2196F44 VA: 0x2196F44 Slot: 21
	public override PropertyDescriptor GetDefaultProperty() { }

	// RVA: 0x21970FC Offset: 0x21970FC VA: 0x21970FC Slot: 25
	public override PropertyDescriptorCollection GetProperties() { }
}

// Namespace: 
private sealed class TypeDescriptor.DefaultTypeDescriptionProvider : TypeDescriptionProvider // TypeDefIndex: 1302
{
	// Methods

	// RVA: 0x2195760 Offset: 0x2195760 VA: 0x2195760
	public void .ctor() { }

	// RVA: 0x2196B44 Offset: 0x2196B44 VA: 0x2196B44 Slot: 6
	public override ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance) { }

	// RVA: 0x2196BF8 Offset: 0x2196BF8 VA: 0x2196BF8 Slot: 9
	public override ICustomTypeDescriptor GetTypeDescriptor(Type objectType, object instance) { }
}

// Namespace: System.ComponentModel
internal abstract class Info // TypeDefIndex: 1303
{
	// Fields
	private Type _infoType; // 0x10
	private EventDescriptor _defaultEvent; // 0x18
	private bool _gotDefaultEvent; // 0x20
	private PropertyDescriptor _defaultProperty; // 0x28
	private bool _gotDefaultProperty; // 0x30
	private AttributeCollection _attributes; // 0x38

	// Properties
	public Type InfoType { get; }

	// Methods

	// RVA: 0x2246408 Offset: 0x2246408 VA: 0x2246408
	public void .ctor(Type infoType) { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract AttributeCollection GetAttributes();

	// RVA: -1 Offset: -1 Slot: 5
	public abstract EventDescriptorCollection GetEvents();

	// RVA: -1 Offset: -1 Slot: 6
	public abstract PropertyDescriptorCollection GetProperties();

	// RVA: 0x2252054 Offset: 0x2252054 VA: 0x2252054
	public Type get_InfoType() { }

	// RVA: 0x225205C Offset: 0x225205C VA: 0x225205C
	public EventDescriptorCollection GetEvents(Attribute[] attributes) { }

	// RVA: 0x22520B4 Offset: 0x22520B4 VA: 0x22520B4
	public PropertyDescriptorCollection GetProperties(Attribute[] attributes) { }

	// RVA: 0x2252110 Offset: 0x2252110 VA: 0x2252110
	public EventDescriptor GetDefaultEvent() { }

	// RVA: 0x2252294 Offset: 0x2252294 VA: 0x2252294
	public PropertyDescriptor GetDefaultProperty() { }

	// RVA: 0x224643C Offset: 0x224643C VA: 0x224643C
	protected AttributeCollection GetAttributes(IComponent comp) { }
}

// Namespace: System.ComponentModel
internal class ComponentInfo : Info // TypeDefIndex: 1304
{
	// Fields
	private IComponent _component; // 0x40
	private EventDescriptorCollection _events; // 0x48
	private PropertyDescriptorCollection _properties; // 0x50

	// Methods

	// RVA: 0x22463B0 Offset: 0x22463B0 VA: 0x22463B0
	public void .ctor(IComponent component) { }

	// RVA: 0x2246434 Offset: 0x2246434 VA: 0x2246434 Slot: 4
	public override AttributeCollection GetAttributes() { }

	// RVA: 0x2246FCC Offset: 0x2246FCC VA: 0x2246FCC Slot: 5
	public override EventDescriptorCollection GetEvents() { }

	// RVA: 0x22474F0 Offset: 0x22474F0 VA: 0x22474F0 Slot: 6
	public override PropertyDescriptorCollection GetProperties() { }
}

// Namespace: System.ComponentModel
internal class TypeInfo : Info // TypeDefIndex: 1305
{
	// Fields
	private EventDescriptorCollection _events; // 0x40
	private PropertyDescriptorCollection _properties; // 0x48

	// Methods

	// RVA: 0x21969B0 Offset: 0x21969B0 VA: 0x21969B0
	public void .ctor(Type t) { }

	// RVA: 0x2197464 Offset: 0x2197464 VA: 0x2197464 Slot: 4
	public override AttributeCollection GetAttributes() { }

	// RVA: 0x2197470 Offset: 0x2197470 VA: 0x2197470 Slot: 5
	public override EventDescriptorCollection GetEvents() { }

	// RVA: 0x2197608 Offset: 0x2197608 VA: 0x2197608 Slot: 6
	public override PropertyDescriptorCollection GetProperties() { }
}

// Namespace: System.ComponentModel
public abstract class TypeListConverter : TypeConverter // TypeDefIndex: 1306
{
	// Fields
	private Type[] types; // 0x10

	// Methods

	// RVA: 0x2197988 Offset: 0x2197988 VA: 0x2197988
	protected void .ctor(Type[] types) { }

	// RVA: 0x21979B4 Offset: 0x21979B4 VA: 0x21979B4 Slot: 4
	public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) { }

	// RVA: 0x2197A48 Offset: 0x2197A48 VA: 0x2197A48 Slot: 5
	public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) { }

	// RVA: 0x2197ADC Offset: 0x2197ADC VA: 0x2197ADC Slot: 6
	public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) { }

	// RVA: 0x2197AE0 Offset: 0x2197AE0 VA: 0x2197AE0 Slot: 7
	public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) { }

	// RVA: 0x2197D00 Offset: 0x2197D00 VA: 0x2197D00 Slot: 12
	public override TypeConverter.StandardValuesCollection GetStandardValues(ITypeDescriptorContext context) { }

	// RVA: 0x2197D68 Offset: 0x2197D68 VA: 0x2197D68 Slot: 13
	public override bool GetStandardValuesExclusive(ITypeDescriptorContext context) { }

	// RVA: 0x2197D70 Offset: 0x2197D70 VA: 0x2197D70 Slot: 14
	public override bool GetStandardValuesSupported(ITypeDescriptorContext context) { }
}

// Namespace: System.ComponentModel
public class UInt16Converter : BaseNumberConverter // TypeDefIndex: 1307
{
	// Properties
	internal override bool SupportHex { get; }

	// Methods

	// RVA: 0x2197D78 Offset: 0x2197D78 VA: 0x2197D78
	public void .ctor() { }

	// RVA: 0x2197E00 Offset: 0x2197E00 VA: 0x2197E00 Slot: 16
	internal override bool get_SupportHex() { }

	// RVA: 0x2197E08 Offset: 0x2197E08 VA: 0x2197E08 Slot: 17
	internal override string ConvertToString(object value, NumberFormatInfo format) { }

	// RVA: 0x2197E90 Offset: 0x2197E90 VA: 0x2197E90 Slot: 18
	internal override object ConvertFromString(string value, NumberFormatInfo format) { }

	// RVA: 0x2197F0C Offset: 0x2197F0C VA: 0x2197F0C Slot: 19
	internal override object ConvertFromString(string value, int fromBase) { }
}

// Namespace: System.ComponentModel
public class UInt32Converter : BaseNumberConverter // TypeDefIndex: 1308
{
	// Properties
	internal override bool SupportHex { get; }

	// Methods

	// RVA: 0x2197FA4 Offset: 0x2197FA4 VA: 0x2197FA4
	public void .ctor() { }

	// RVA: 0x219802C Offset: 0x219802C VA: 0x219802C Slot: 16
	internal override bool get_SupportHex() { }

	// RVA: 0x2198034 Offset: 0x2198034 VA: 0x2198034 Slot: 17
	internal override string ConvertToString(object value, NumberFormatInfo format) { }

	// RVA: 0x21980BC Offset: 0x21980BC VA: 0x21980BC Slot: 18
	internal override object ConvertFromString(string value, NumberFormatInfo format) { }

	// RVA: 0x2198138 Offset: 0x2198138 VA: 0x2198138 Slot: 19
	internal override object ConvertFromString(string value, int fromBase) { }
}

// Namespace: System.ComponentModel
public class UInt64Converter : BaseNumberConverter // TypeDefIndex: 1309
{
	// Properties
	internal override bool SupportHex { get; }

	// Methods

	// RVA: 0x21981D0 Offset: 0x21981D0 VA: 0x21981D0
	public void .ctor() { }

	// RVA: 0x2198258 Offset: 0x2198258 VA: 0x2198258 Slot: 16
	internal override bool get_SupportHex() { }

	// RVA: 0x2198260 Offset: 0x2198260 VA: 0x2198260 Slot: 17
	internal override string ConvertToString(object value, NumberFormatInfo format) { }

	// RVA: 0x21982E8 Offset: 0x21982E8 VA: 0x21982E8 Slot: 18
	internal override object ConvertFromString(string value, NumberFormatInfo format) { }

	// RVA: 0x2198364 Offset: 0x2198364 VA: 0x2198364 Slot: 19
	internal override object ConvertFromString(string value, int fromBase) { }
}

// Namespace: System.ComponentModel
internal sealed class WeakObjectWrapper // TypeDefIndex: 1310
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xBD0DFC Offset: 0xBD0DFC VA: 0xBD0DFC
	private int <TargetHashCode>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xBD0E0C Offset: 0xBD0E0C VA: 0xBD0E0C
	private WeakReference <Weak>k__BackingField; // 0x18

	// Properties
	public int TargetHashCode { get; set; }
	public WeakReference Weak { get; set; }

	// Methods

	// RVA: 0x218F8DC Offset: 0x218F8DC VA: 0x218F8DC
	public void .ctor(object target) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1648 Offset: 0xBD1648 VA: 0xBD1648
	// RVA: 0x219840C Offset: 0x219840C VA: 0x219840C
	public int get_TargetHashCode() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1658 Offset: 0xBD1658 VA: 0xBD1658
	// RVA: 0x21983FC Offset: 0x21983FC VA: 0x21983FC
	private void set_TargetHashCode(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1668 Offset: 0xBD1668 VA: 0xBD1668
	// RVA: 0x2198414 Offset: 0x2198414 VA: 0x2198414
	public WeakReference get_Weak() { }

	[CompilerGeneratedAttribute] // RVA: 0xBD1678 Offset: 0xBD1678 VA: 0xBD1678
	// RVA: 0x2198404 Offset: 0x2198404 VA: 0x2198404
	private void set_Weak(WeakReference value) { }
}

// Namespace: System.ComponentModel
internal sealed class WeakObjectWrapperComparer : EqualityComparer<WeakObjectWrapper> // TypeDefIndex: 1311
{
	// Methods

	// RVA: 0x218E990 Offset: 0x218E990 VA: 0x218E990
	public void .ctor() { }

	// RVA: 0x219841C Offset: 0x219841C VA: 0x219841C Slot: 9
	public override bool Equals(WeakObjectWrapper x, WeakObjectWrapper y) { }

	// RVA: 0x21984C8 Offset: 0x21984C8 VA: 0x21984C8 Slot: 8
	public override int GetHashCode(WeakObjectWrapper obj) { }
}

// Namespace: System.ComponentModel
[Serializable]
public class Win32Exception : ExternalException // TypeDefIndex: 1312
{
	// Fields
	private int native_error_code; // 0x60

	// Properties
	public int NativeErrorCode { get; }

	// Methods

	// RVA: 0x21984DC Offset: 0x21984DC VA: 0x21984DC
	public void .ctor() { }

	// RVA: 0x2198568 Offset: 0x2198568 VA: 0x2198568
	public void .ctor(int error) { }

	// RVA: 0x21985A4 Offset: 0x21985A4 VA: 0x21985A4
	public void .ctor(int error, string message) { }

	// RVA: 0x21985D4 Offset: 0x21985D4 VA: 0x21985D4
	public void .ctor(string message) { }

	// RVA: 0x219865C Offset: 0x219865C VA: 0x219865C
	public void .ctor(string message, Exception innerException) { }

	// RVA: 0x21986EC Offset: 0x21986EC VA: 0x21986EC
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x2198788 Offset: 0x2198788 VA: 0x2198788
	public int get_NativeErrorCode() { }

	// RVA: 0x2198790 Offset: 0x2198790 VA: 0x2198790 Slot: 10
	public override void GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x2198564 Offset: 0x2198564 VA: 0x2198564
	internal static string W32ErrorMessage(int error_code) { }
}

// Namespace: System.Diagnostics
public class DataReceivedEventArgs : EventArgs // TypeDefIndex: 1313
{}

// Namespace: System.Diagnostics
[AttributeUsageAttribute] // RVA: 0xBD0458 Offset: 0xBD0458 VA: 0xBD0458
public class MonitoringDescriptionAttribute : DescriptionAttribute // TypeDefIndex: 1314
{
	// Properties
	public override string Description { get; }

	// Methods

	// RVA: 0x2198D54 Offset: 0x2198D54 VA: 0x2198D54
	public void .ctor(string description) { }

	// RVA: 0x2198DCC Offset: 0x2198DCC VA: 0x2198DCC Slot: 7
	public override string get_Description() { }
}

// Namespace: System.Diagnostics
[DesignerAttribute] // RVA: 0xBD046C Offset: 0xBD046C VA: 0xBD046C
[DefaultEventAttribute] // RVA: 0xBD046C Offset: 0xBD046C VA: 0xBD046C
[DefaultPropertyAttribute] // RVA: 0xBD046C Offset: 0xBD046C VA: 0xBD046C
[MonitoringDescriptionAttribute] // RVA: 0xBD046C Offset: 0xBD046C VA: 0xBD046C
public class Process : Component // TypeDefIndex: 1315
{
	// Fields
	private IntPtr process_handle; // 0x30
	private int pid; // 0x38
	private bool enableRaisingEvents; // 0x3C
	private bool already_waiting; // 0x3D
	private ISynchronizeInvoke synchronizingObject; // 0x40
	private EventHandler exited_event; // 0x48
	private IntPtr stdout_rd; // 0x50
	private IntPtr stderr_rd; // 0x58
	private ProcessModuleCollection module_collection; // 0x60
	private string process_name; // 0x68
	private StreamReader error_stream; // 0x70
	private StreamWriter input_stream; // 0x78
	private StreamReader output_stream; // 0x80
	private ProcessStartInfo start_info; // 0x88
	private Process.AsyncModes async_mode; // 0x90
	private bool output_canceled; // 0x94
	private bool error_canceled; // 0x95
	private Process.ProcessAsyncReader async_output; // 0x98
	private Process.ProcessAsyncReader async_error; // 0xA0
	private bool disposed; // 0xA8
	private DataReceivedEventHandler OutputDataReceived; // 0xB0
	private DataReceivedEventHandler ErrorDataReceived; // 0xB8

	// Properties
	[BrowsableAttribute] // RVA: 0xBD2B58 Offset: 0xBD2B58 VA: 0xBD2B58
	[DesignerSerializationVisibilityAttribute] // RVA: 0xBD2B58 Offset: 0xBD2B58 VA: 0xBD2B58
	[MonitoringDescriptionAttribute] // RVA: 0xBD2B58 Offset: 0xBD2B58 VA: 0xBD2B58
	public int ExitCode { get; }
	[MonitoringDescriptionAttribute] // RVA: 0xBD2BBC Offset: 0xBD2BBC VA: 0xBD2BBC
	[DesignerSerializationVisibilityAttribute] // RVA: 0xBD2BBC Offset: 0xBD2BBC VA: 0xBD2BBC
	[BrowsableAttribute] // RVA: 0xBD2BBC Offset: 0xBD2BBC VA: 0xBD2BBC
	public IntPtr Handle { get; }
	[BrowsableAttribute] // RVA: 0xBD2C20 Offset: 0xBD2C20 VA: 0xBD2C20
	[DesignerSerializationVisibilityAttribute] // RVA: 0xBD2C20 Offset: 0xBD2C20 VA: 0xBD2C20
	[MonitoringDescriptionAttribute] // RVA: 0xBD2C20 Offset: 0xBD2C20 VA: 0xBD2C20
	public bool HasExited { get; }
	[MonitoringDescriptionAttribute] // RVA: 0xBD2C84 Offset: 0xBD2C84 VA: 0xBD2C84
	[DesignerSerializationVisibilityAttribute] // RVA: 0xBD2C84 Offset: 0xBD2C84 VA: 0xBD2C84
	public int Id { get; }
	[MonitoringDescriptionAttribute] // RVA: 0xBD2CD4 Offset: 0xBD2CD4 VA: 0xBD2CD4
	[DesignerSerializationVisibilityAttribute] // RVA: 0xBD2CD4 Offset: 0xBD2CD4 VA: 0xBD2CD4
	public string ProcessName { get; }
	[DesignerSerializationVisibilityAttribute] // RVA: 0xBD2D24 Offset: 0xBD2D24 VA: 0xBD2D24
	[BrowsableAttribute] // RVA: 0xBD2D24 Offset: 0xBD2D24 VA: 0xBD2D24
	[MonitoringDescriptionAttribute] // RVA: 0xBD2D24 Offset: 0xBD2D24 VA: 0xBD2D24
	public ProcessStartInfo StartInfo { get; }
	private static bool IsWindows { get; }

	// Methods

	// RVA: 0x2198DD4 Offset: 0x2198DD4 VA: 0x2198DD4
	private void .ctor(IntPtr handle, int id) { }

	// RVA: 0x2198E10 Offset: 0x2198E10 VA: 0x2198E10
	public void .ctor() { }

	// RVA: 0x2198E18 Offset: 0x2198E18 VA: 0x2198E18
	private void StartExitCallbackIfNeeded() { }

	// RVA: 0x2198E1C Offset: 0x2198E1C VA: 0x2198E1C
	private static int ExitCode_internal(IntPtr handle) { }

	// RVA: 0x2198E20 Offset: 0x2198E20 VA: 0x2198E20
	public int get_ExitCode() { }

	// RVA: 0x2198EE4 Offset: 0x2198EE4 VA: 0x2198EE4
	public IntPtr get_Handle() { }

	// RVA: 0x2198EEC Offset: 0x2198EEC VA: 0x2198EEC
	public bool get_HasExited() { }

	// RVA: 0x2198F94 Offset: 0x2198F94 VA: 0x2198F94
	public int get_Id() { }

	// RVA: 0x2199020 Offset: 0x2199020 VA: 0x2199020
	private static string ProcessName_internal(IntPtr handle) { }

	// RVA: 0x2199024 Offset: 0x2199024 VA: 0x2199024
	public string get_ProcessName() { }

	// RVA: 0x21991C4 Offset: 0x21991C4 VA: 0x21991C4
	public ProcessStartInfo get_StartInfo() { }

	// RVA: 0x21992E4 Offset: 0x21992E4 VA: 0x21992E4
	private static bool Kill_internal(IntPtr handle, int signo) { }

	// RVA: 0x21992E8 Offset: 0x21992E8 VA: 0x21992E8
	private bool Close(int signo) { }

	// RVA: 0x21993D0 Offset: 0x21993D0 VA: 0x21993D0
	private static IntPtr GetProcess_internal(int pid) { }

	// RVA: 0x21993D4 Offset: 0x21993D4 VA: 0x21993D4
	private static int GetPid_internal() { }

	// RVA: 0x21993D8 Offset: 0x21993D8 VA: 0x21993D8
	public static Process GetCurrentProcess() { }

	// RVA: 0x21994A8 Offset: 0x21994A8 VA: 0x21994A8
	public void Kill() { }

	// RVA: 0x21994B0 Offset: 0x21994B0 VA: 0x21994B0
	private static bool ShellExecuteEx_internal(ProcessStartInfo startInfo, ref Process.ProcInfo proc_info) { }

	// RVA: 0x21994B4 Offset: 0x21994B4 VA: 0x21994B4
	private static bool CreateProcess_internal(ProcessStartInfo startInfo, IntPtr stdin, IntPtr stdout, IntPtr stderr, ref Process.ProcInfo proc_info) { }

	// RVA: 0x21994B8 Offset: 0x21994B8 VA: 0x21994B8
	private static bool Start_shell(ProcessStartInfo startInfo, Process process) { }

	// RVA: 0x21997A8 Offset: 0x21997A8 VA: 0x21997A8
	private static bool Start_noshell(ProcessStartInfo startInfo, Process process) { }

	// RVA: 0x21996F4 Offset: 0x21996F4 VA: 0x21996F4
	private static void FillUserInfo(ProcessStartInfo startInfo, ref Process.ProcInfo proc_info) { }

	// RVA: 0x219A8A8 Offset: 0x219A8A8 VA: 0x219A8A8
	private static bool Start_common(ProcessStartInfo startInfo, Process process) { }

	// RVA: 0x219AA30 Offset: 0x219AA30 VA: 0x219AA30
	public bool Start() { }

	// RVA: 0x219AAA0 Offset: 0x219AAA0 VA: 0x219AAA0 Slot: 3
	public override string ToString() { }

	// RVA: 0x219AB44 Offset: 0x219AB44 VA: 0x219AB44
	private bool WaitForExit_internal(IntPtr handle, int ms) { }

	// RVA: 0x219AB48 Offset: 0x219AB48 VA: 0x219AB48
	public bool WaitForExit(int milliseconds) { }

	// RVA: 0x219AA9C Offset: 0x219AA9C VA: 0x219AA9C
	private void Process_free_internal(IntPtr handle) { }

	// RVA: 0x219AE38 Offset: 0x219AE38 VA: 0x219AE38 Slot: 14
	protected override void Dispose(bool disposing) { }

	// RVA: 0x219B04C Offset: 0x219B04C VA: 0x219B04C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x219A814 Offset: 0x219A814 VA: 0x219A814
	private static bool get_IsWindows() { }
}

// Namespace: 
private struct Process.ProcInfo // TypeDefIndex: 1316
{
	// Fields
	public IntPtr process_handle; // 0x0
	public IntPtr thread_handle; // 0x8
	public int pid; // 0x10
	public int tid; // 0x14
	public string[] envKeys; // 0x18
	public string[] envValues; // 0x20
	public string UserName; // 0x28
	public string Domain; // 0x30
	public IntPtr Password; // 0x38
	public bool LoadUserProfile; // 0x40
}

// Namespace: 
[FlagsAttribute] // RVA: 0xBD0514 Offset: 0xBD0514 VA: 0xBD0514
private enum Process.AsyncModes // TypeDefIndex: 1317
{
	// Fields
	public int value__; // 0x0
	public const Process.AsyncModes NoneYet = 0;
	public const Process.AsyncModes SyncOutput = 1;
	public const Process.AsyncModes SyncError = 2;
	public const Process.AsyncModes AsyncOutput = 4;
	public const Process.AsyncModes AsyncError = 8;
}

// Namespace: 
private sealed class Process.ProcessAsyncReader // TypeDefIndex: 1318
{
	// Fields
	public object Sock; // 0x10
	public IntPtr handle; // 0x18
	public object state; // 0x20
	public AsyncCallback callback; // 0x28
	public ManualResetEvent wait_handle; // 0x30
	public Exception delayedException; // 0x38
	public object EndPoint; // 0x40
	private byte[] buffer; // 0x48
	public int Offset; // 0x50
	public int Size; // 0x54
	public int SockFlags; // 0x58
	public object AcceptSocket; // 0x60
	public object[] Addresses; // 0x68
	public int port; // 0x70
	public object Buffers; // 0x78
	public bool ReuseSocket; // 0x80
	public object acc_socket; // 0x88
	public int total; // 0x90
	public bool completed_sync; // 0x94
	private bool completed; // 0x95
	private bool err_out; // 0x96
	internal int error; // 0x98
	public int operation; // 0x9C
	public object ares; // 0xA0
	public int EndCalled; // 0xA8
	private Process process; // 0xB0
	private Stream stream; // 0xB8
	private StringBuilder sb; // 0xC0
	private Encoding outputEncoding; // 0xC8
	public Process.AsyncReadHandler ReadHandler; // 0xD0

	// Properties
	public bool IsCompleted { get; }
	public WaitHandle WaitHandle { get; }

	// Methods

	// RVA: 0x219AD50 Offset: 0x219AD50 VA: 0x219AD50
	public bool get_IsCompleted() { }

	// RVA: 0x219AD58 Offset: 0x219AD58 VA: 0x219AD58
	public WaitHandle get_WaitHandle() { }

	// RVA: 0x219B018 Offset: 0x219B018 VA: 0x219B018
	public void Close() { }
}

// Namespace: 
private sealed class Process.AsyncReadHandler : MulticastDelegate // TypeDefIndex: 1319
{
	// Methods

	// RVA: 0x219B0D0 Offset: 0x219B0D0 VA: 0x219B0D0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x219B0E0 Offset: 0x219B0E0 VA: 0x219B0E0 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x219B2E0 Offset: 0x219B2E0 VA: 0x219B2E0 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x219B314 Offset: 0x219B314 VA: 0x219B314 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.Diagnostics
[DefaultMemberAttribute] // RVA: 0xBD0524 Offset: 0xBD0524 VA: 0xBD0524
public class ProcessModuleCollection : ReadOnlyCollectionBase // TypeDefIndex: 1320
{}

// Namespace: System.Diagnostics
[TypeConverterAttribute] // RVA: 0xBD055C Offset: 0xBD055C VA: 0xBD055C
public sealed class ProcessStartInfo // TypeDefIndex: 1321
{
	// Fields
	private string arguments; // 0x10
	private IntPtr error_dialog_parent_handle; // 0x18
	private string filename; // 0x20
	private string verb; // 0x28
	private string working_directory; // 0x30
	private ProcessStringDictionary envVars; // 0x38
	private bool create_no_window; // 0x40
	private bool error_dialog; // 0x41
	private bool redirect_standard_error; // 0x42
	private bool redirect_standard_input; // 0x43
	private bool redirect_standard_output; // 0x44
	private bool use_shell_execute; // 0x45
	private ProcessWindowStyle window_style; // 0x48
	private Encoding encoding_stderr; // 0x50
	private Encoding encoding_stdout; // 0x58
	private string username; // 0x60
	private string domain; // 0x68
	private SecureString password; // 0x70
	private bool load_user_profile; // 0x78
	private static readonly string[] empty; // 0x0

	// Properties
	[MonitoringDescriptionAttribute] // RVA: 0xBD2D88 Offset: 0xBD2D88 VA: 0xBD2D88
	[NotifyParentPropertyAttribute] // RVA: 0xBD2D88 Offset: 0xBD2D88 VA: 0xBD2D88
	[DefaultValueAttribute] // RVA: 0xBD2D88 Offset: 0xBD2D88 VA: 0xBD2D88
	[RecommendedAsConfigurableAttribute] // RVA: 0xBD2D88 Offset: 0xBD2D88 VA: 0xBD2D88
	[TypeConverterAttribute] // RVA: 0xBD2D88 Offset: 0xBD2D88 VA: 0xBD2D88
	public string Arguments { get; set; }
	[DefaultValueAttribute] // RVA: 0xBD2E34 Offset: 0xBD2E34 VA: 0xBD2E34
	[MonitoringDescriptionAttribute] // RVA: 0xBD2E34 Offset: 0xBD2E34 VA: 0xBD2E34
	[NotifyParentPropertyAttribute] // RVA: 0xBD2E34 Offset: 0xBD2E34 VA: 0xBD2E34
	public bool CreateNoWindow { set; }
	[DesignerSerializationVisibilityAttribute] // RVA: 0xBD2E98 Offset: 0xBD2E98 VA: 0xBD2E98
	[DefaultValueAttribute] // RVA: 0xBD2E98 Offset: 0xBD2E98 VA: 0xBD2E98
	[EditorAttribute] // RVA: 0xBD2E98 Offset: 0xBD2E98 VA: 0xBD2E98
	[MonitoringDescriptionAttribute] // RVA: 0xBD2E98 Offset: 0xBD2E98 VA: 0xBD2E98
	[NotifyParentPropertyAttribute] // RVA: 0xBD2E98 Offset: 0xBD2E98 VA: 0xBD2E98
	public StringDictionary EnvironmentVariables { get; }
	internal bool HaveEnvVars { get; }
	[RecommendedAsConfigurableAttribute] // RVA: 0xBD2F50 Offset: 0xBD2F50 VA: 0xBD2F50
	[NotifyParentPropertyAttribute] // RVA: 0xBD2F50 Offset: 0xBD2F50 VA: 0xBD2F50
	[MonitoringDescriptionAttribute] // RVA: 0xBD2F50 Offset: 0xBD2F50 VA: 0xBD2F50
	[TypeConverterAttribute] // RVA: 0xBD2F50 Offset: 0xBD2F50 VA: 0xBD2F50
	[EditorAttribute] // RVA: 0xBD2F50 Offset: 0xBD2F50 VA: 0xBD2F50
	[DefaultValueAttribute] // RVA: 0xBD2F50 Offset: 0xBD2F50 VA: 0xBD2F50
	public string FileName { get; set; }
	[NotifyParentPropertyAttribute] // RVA: 0xBD303C Offset: 0xBD303C VA: 0xBD303C
	[DefaultValueAttribute] // RVA: 0xBD303C Offset: 0xBD303C VA: 0xBD303C
	[MonitoringDescriptionAttribute] // RVA: 0xBD303C Offset: 0xBD303C VA: 0xBD303C
	public bool RedirectStandardError { get; set; }
	[MonitoringDescriptionAttribute] // RVA: 0xBD30A0 Offset: 0xBD30A0 VA: 0xBD30A0
	[DefaultValueAttribute] // RVA: 0xBD30A0 Offset: 0xBD30A0 VA: 0xBD30A0
	[NotifyParentPropertyAttribute] // RVA: 0xBD30A0 Offset: 0xBD30A0 VA: 0xBD30A0
	public bool RedirectStandardInput { get; }
	[DefaultValueAttribute] // RVA: 0xBD3104 Offset: 0xBD3104 VA: 0xBD3104
	[NotifyParentPropertyAttribute] // RVA: 0xBD3104 Offset: 0xBD3104 VA: 0xBD3104
	[MonitoringDescriptionAttribute] // RVA: 0xBD3104 Offset: 0xBD3104 VA: 0xBD3104
	public bool RedirectStandardOutput { get; set; }
	public Encoding StandardErrorEncoding { get; }
	public Encoding StandardOutputEncoding { get; }
	[MonitoringDescriptionAttribute] // RVA: 0xBD3168 Offset: 0xBD3168 VA: 0xBD3168
	[NotifyParentPropertyAttribute] // RVA: 0xBD3168 Offset: 0xBD3168 VA: 0xBD3168
	[DefaultValueAttribute] // RVA: 0xBD3168 Offset: 0xBD3168 VA: 0xBD3168
	public bool UseShellExecute { get; set; }
	[MonitoringDescriptionAttribute] // RVA: 0xBD31CC Offset: 0xBD31CC VA: 0xBD31CC
	[RecommendedAsConfigurableAttribute] // RVA: 0xBD31CC Offset: 0xBD31CC VA: 0xBD31CC
	[TypeConverterAttribute] // RVA: 0xBD31CC Offset: 0xBD31CC VA: 0xBD31CC
	[EditorAttribute] // RVA: 0xBD31CC Offset: 0xBD31CC VA: 0xBD31CC
	[NotifyParentPropertyAttribute] // RVA: 0xBD31CC Offset: 0xBD31CC VA: 0xBD31CC
	[DefaultValueAttribute] // RVA: 0xBD31CC Offset: 0xBD31CC VA: 0xBD31CC
	public string WorkingDirectory { get; }
	[NotifyParentPropertyAttribute] // RVA: 0xBD32B8 Offset: 0xBD32B8 VA: 0xBD32B8
	public bool LoadUserProfile { get; }
	[NotifyParentPropertyAttribute] // RVA: 0xBD32CC Offset: 0xBD32CC VA: 0xBD32CC
	public string UserName { get; }
	[NotifyParentPropertyAttribute] // RVA: 0xBD32E0 Offset: 0xBD32E0 VA: 0xBD32E0
	public string Domain { get; }
	public SecureString Password { get; }

	// Methods

	// RVA: 0x219922C Offset: 0x219922C VA: 0x219922C
	public void .ctor() { }

	// RVA: 0x219B320 Offset: 0x219B320 VA: 0x219B320
	private static void .cctor() { }

	// RVA: 0x219A868 Offset: 0x219A868 VA: 0x219A868
	public string get_Arguments() { }

	// RVA: 0x219B384 Offset: 0x219B384 VA: 0x219B384
	public void set_Arguments(string value) { }

	// RVA: 0x219B38C Offset: 0x219B38C VA: 0x219B38C
	public void set_CreateNoWindow(bool value) { }

	// RVA: 0x219A414 Offset: 0x219A414 VA: 0x219A414
	public StringDictionary get_EnvironmentVariables() { }

	// RVA: 0x21996E4 Offset: 0x21996E4 VA: 0x21996E4
	internal bool get_HaveEnvVars() { }

	// RVA: 0x219A860 Offset: 0x219A860 VA: 0x219A860
	public string get_FileName() { }

	// RVA: 0x219B398 Offset: 0x219B398 VA: 0x219B398
	public void set_FileName(string value) { }

	// RVA: 0x21996DC Offset: 0x21996DC VA: 0x21996DC
	public bool get_RedirectStandardError() { }

	// RVA: 0x219B3A0 Offset: 0x219B3A0 VA: 0x219B3A0
	public void set_RedirectStandardError(bool value) { }

	// RVA: 0x21996CC Offset: 0x21996CC VA: 0x21996CC
	public bool get_RedirectStandardInput() { }

	// RVA: 0x21996D4 Offset: 0x21996D4 VA: 0x21996D4
	public bool get_RedirectStandardOutput() { }

	// RVA: 0x219B3AC Offset: 0x219B3AC VA: 0x219B3AC
	public void set_RedirectStandardOutput(bool value) { }

	// RVA: 0x219A880 Offset: 0x219A880 VA: 0x219A880
	public Encoding get_StandardErrorEncoding() { }

	// RVA: 0x219A878 Offset: 0x219A878 VA: 0x219A878
	public Encoding get_StandardOutputEncoding() { }

	// RVA: 0x219AA28 Offset: 0x219AA28 VA: 0x219AA28
	public bool get_UseShellExecute() { }

	// RVA: 0x219B3B8 Offset: 0x219B3B8 VA: 0x219B3B8
	public void set_UseShellExecute(bool value) { }

	// RVA: 0x219A870 Offset: 0x219A870 VA: 0x219A870
	public string get_WorkingDirectory() { }

	// RVA: 0x219A8A0 Offset: 0x219A8A0 VA: 0x219A8A0
	public bool get_LoadUserProfile() { }

	// RVA: 0x219A888 Offset: 0x219A888 VA: 0x219A888
	public string get_UserName() { }

	// RVA: 0x219A890 Offset: 0x219A890 VA: 0x219A890
	public string get_Domain() { }

	// RVA: 0x219A898 Offset: 0x219A898 VA: 0x219A898
	public SecureString get_Password() { }
}

// Namespace: System.Diagnostics
public enum ProcessWindowStyle // TypeDefIndex: 1322
{
	// Fields
	public int value__; // 0x0
	public const ProcessWindowStyle Hidden = 1;
	public const ProcessWindowStyle Maximized = 3;
	public const ProcessWindowStyle Minimized = 2;
	public const ProcessWindowStyle Normal = 0;
}

// Namespace: System.Diagnostics
public class Stopwatch // TypeDefIndex: 1323
{
	// Fields
	public static readonly long Frequency; // 0x0
	public static readonly bool IsHighResolution; // 0x8
	private long elapsed; // 0x10
	private long started; // 0x18
	private bool is_running; // 0x20

	// Properties
	public TimeSpan Elapsed { get; }
	public long ElapsedMilliseconds { get; }
	public long ElapsedTicks { get; }
	public bool IsRunning { get; }

	// Methods

	// RVA: 0x219B3C4 Offset: 0x219B3C4 VA: 0x219B3C4
	public void .ctor() { }

	// RVA: 0x219B3CC Offset: 0x219B3CC VA: 0x219B3CC
	private static void .cctor() { }

	// RVA: 0x219B434 Offset: 0x219B434 VA: 0x219B434
	public static long GetTimestamp() { }

	// RVA: 0x219B438 Offset: 0x219B438 VA: 0x219B438
	public TimeSpan get_Elapsed() { }

	// RVA: 0x219B5D4 Offset: 0x219B5D4 VA: 0x219B5D4
	public long get_ElapsedMilliseconds() { }

	// RVA: 0x219B554 Offset: 0x219B554 VA: 0x219B554
	public long get_ElapsedTicks() { }

	// RVA: 0x219B6E8 Offset: 0x219B6E8 VA: 0x219B6E8
	public bool get_IsRunning() { }

	// RVA: 0x219B6F0 Offset: 0x219B6F0 VA: 0x219B6F0
	public void Reset() { }

	// RVA: 0x219B6FC Offset: 0x219B6FC VA: 0x219B6FC
	public void Start() { }

	// RVA: 0x219B774 Offset: 0x219B774 VA: 0x219B774
	public void Stop() { }
}

// Namespace: System.IO.Compression
public enum CompressionMode // TypeDefIndex: 1324
{
	// Fields
	public int value__; // 0x0
	public const CompressionMode Decompress = 0;
	public const CompressionMode Compress = 1;
}

// Namespace: System.IO.Compression
public class DeflateStream : Stream // TypeDefIndex: 1325
{
	// Fields
	private Stream base_stream; // 0x10
	private CompressionMode mode; // 0x18
	private bool leaveOpen; // 0x1C
	private bool disposed; // 0x1D
	private DeflateStream.UnmanagedReadOrWrite feeder; // 0x20
	private IntPtr z_stream; // 0x28
	private byte[] io_buffer; // 0x30
	private GCHandle data; // 0x38

	// Properties
	public override bool CanRead { get; }
	public override bool CanSeek { get; }
	public override bool CanWrite { get; }
	public override long Length { get; }
	public override long Position { get; set; }

	// Methods

	// RVA: 0x219BB40 Offset: 0x219BB40 VA: 0x219BB40
	public void .ctor(Stream compressedStream, CompressionMode mode) { }

	// RVA: 0x219BB4C Offset: 0x219BB4C VA: 0x219BB4C
	internal void .ctor(Stream compressedStream, CompressionMode mode, bool leaveOpen, bool gzip) { }

	// RVA: 0x219BD74 Offset: 0x219BD74 VA: 0x219BD74 Slot: 12
	protected override void Dispose(bool disposing) { }

	// RVA: 0x219B998 Offset: 0x219B998 VA: 0x219B998
	private static int UnmanagedRead(IntPtr buffer, int length, IntPtr data) { }

	// RVA: 0x219BF68 Offset: 0x219BF68 VA: 0x219BF68
	private int UnmanagedRead(IntPtr buffer, int length) { }

	// RVA: 0x219BA6C Offset: 0x219BA6C VA: 0x219BA6C
	private static int UnmanagedWrite(IntPtr buffer, int length, IntPtr data) { }

	// RVA: 0x219C0D0 Offset: 0x219C0D0 VA: 0x219C0D0
