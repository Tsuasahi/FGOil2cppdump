
	// RVA: 0x136E574 Offset: 0x136E574 VA: 0x136E574
	public void CopyTo(int index, Variant[] array, int arrayIndex, int count) { }

	// RVA: 0x136E8C8 Offset: 0x136E8C8 VA: 0x136E8C8 Slot: 6
	private IEnumerator<Variant> System.Collections.Generic.IEnumerable<Firebase.Variant>.GetEnumerator() { }

	// RVA: 0x136E978 Offset: 0x136E978 VA: 0x136E978 Slot: 5
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x136CCDC Offset: 0x136CCDC VA: 0x136CCDC
	public VariantList.VariantListEnumerator GetEnumerator() { }

	// RVA: 0x136E9D8 Offset: 0x136E9D8 VA: 0x136E9D8
	public void Clear() { }

	// RVA: 0x136DA50 Offset: 0x136DA50 VA: 0x136DA50
	public void Add(Variant x) { }

	// RVA: 0x136E364 Offset: 0x136E364 VA: 0x136E364
	private uint size() { }

	// RVA: 0x136E1D4 Offset: 0x136E1D4 VA: 0x136E1D4
	private uint capacity() { }

	// RVA: 0x136E448 Offset: 0x136E448 VA: 0x136E448
	private void reserve(uint n) { }

	// RVA: 0x136E7B0 Offset: 0x136E7B0 VA: 0x136E7B0
	private Variant getitemcopy(int index) { }

	// RVA: 0x136DFA4 Offset: 0x136DFA4 VA: 0x136DFA4
	private Variant getitem(int index) { }

	// RVA: 0x136E0C0 Offset: 0x136E0C0 VA: 0x136E0C0
	private void setitem(int index, Variant val) { }

	// RVA: 0x136EAB0 Offset: 0x136EAB0 VA: 0x136EAB0
	public void AddRange(VariantList values) { }

	// RVA: 0x136EBAC Offset: 0x136EBAC VA: 0x136EBAC
	public VariantList GetRange(int index, int count) { }

	// RVA: 0x136ECD8 Offset: 0x136ECD8 VA: 0x136ECD8
	public void Insert(int index, Variant x) { }

	// RVA: 0x136EDE8 Offset: 0x136EDE8 VA: 0x136EDE8
	public void InsertRange(int index, VariantList values) { }

	// RVA: 0x136EEF4 Offset: 0x136EEF4 VA: 0x136EEF4
	public void RemoveAt(int index) { }

	// RVA: 0x136EFDC Offset: 0x136EFDC VA: 0x136EFDC
	public void RemoveRange(int index, int count) { }

	// RVA: 0x136F0CC Offset: 0x136F0CC VA: 0x136F0CC
	public static VariantList Repeat(Variant value, int count) { }

	// RVA: 0x136F200 Offset: 0x136F200 VA: 0x136F200
	public void Reverse() { }

	// RVA: 0x136F2D8 Offset: 0x136F2D8 VA: 0x136F2D8
	public void Reverse(int index, int count) { }

	// RVA: 0x136F3C8 Offset: 0x136F3C8 VA: 0x136F3C8
	public void SetRange(int index, VariantList values) { }
}

// Namespace: 
public sealed class VariantList.VariantListEnumerator : IEnumerator, IEnumerator<Variant>, IDisposable // TypeDefIndex: 3201
{
	// Fields
	private VariantList collectionRef; // 0x10
	private int currentIndex; // 0x18
	private object currentObject; // 0x20
	private int currentSize; // 0x28

	// Properties
	private object System.Collections.IEnumerator.Current { get; }
	public Variant Current { get; }

	// Methods

	// RVA: 0x136E928 Offset: 0x136E928 VA: 0x136E928
	public void .ctor(VariantList collection) { }

	// RVA: 0x136CD3C Offset: 0x136CD3C VA: 0x136CD3C Slot: 7
	public Variant get_Current() { }

	// RVA: 0x136F4D4 Offset: 0x136F4D4 VA: 0x136F4D4 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	// RVA: 0x136CEA0 Offset: 0x136CEA0 VA: 0x136CEA0 Slot: 5
	public bool MoveNext() { }

	// RVA: 0x136F4D8 Offset: 0x136F4D8 VA: 0x136F4D8 Slot: 6
	public void Reset() { }

	// RVA: 0x136F58C Offset: 0x136F58C VA: 0x136F58C Slot: 8
	public void Dispose() { }
}

// Namespace: Firebase
[DefaultMemberAttribute] // RVA: 0xC82738 Offset: 0xC82738 VA: 0xC82738
internal class VariantVariantMap : IDisposable, IDictionary<Variant, Variant>, ICollection<KeyValuePair<Variant, Variant>>, IEnumerable<KeyValuePair<Variant, Variant>>, IEnumerable // TypeDefIndex: 3202
{
	// Fields
	private HandleRef swigCPtr; // 0x10
	protected bool swigCMemOwn; // 0x20

	// Properties
	public Variant Item { get; set; }
	public int Count { get; }
	public bool IsReadOnly { get; }
	public ICollection<Variant> Keys { get; }
	public ICollection<Variant> Values { get; }

	// Methods

	// RVA: 0x136F59C Offset: 0x136F59C VA: 0x136F59C
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x136F600 Offset: 0x136F600 VA: 0x136F600
	public void .ctor() { }

	// RVA: 0x136F6DC Offset: 0x136F6DC VA: 0x136F6DC
	public void .ctor(VariantVariantMap other) { }

	// RVA: 0x136F7DC Offset: 0x136F7DC VA: 0x136F7DC
	internal static HandleRef getCPtr(VariantVariantMap obj) { }

	// RVA: 0x136F84C Offset: 0x136F84C VA: 0x136F84C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x136F8CC Offset: 0x136F8CC VA: 0x136F8CC Slot: 21
	public virtual void Dispose() { }

	// RVA: 0x136FA34 Offset: 0x136FA34 VA: 0x136FA34 Slot: 8
	public Variant get_Item(Variant key) { }

	// RVA: 0x136FB68 Offset: 0x136FB68 VA: 0x136FB68 Slot: 9
	public void set_Item(Variant key, Variant value) { }

	// RVA: 0x136FC94 Offset: 0x136FC94 VA: 0x136FC94 Slot: 7
	public bool TryGetValue(Variant key, out Variant value) { }

	// RVA: 0x136FDF8 Offset: 0x136FDF8 VA: 0x136FDF8 Slot: 13
	public int get_Count() { }

	// RVA: 0x136FEE0 Offset: 0x136FEE0 VA: 0x136FEE0 Slot: 14
	public bool get_IsReadOnly() { }

	// RVA: 0x136FEE8 Offset: 0x136FEE8 VA: 0x136FEE8 Slot: 10
	public ICollection<Variant> get_Keys() { }

	// RVA: 0x1370314 Offset: 0x1370314 VA: 0x1370314 Slot: 11
	public ICollection<Variant> get_Values() { }

	// RVA: 0x1370530 Offset: 0x1370530 VA: 0x1370530 Slot: 15
	public void Add(KeyValuePair<Variant, Variant> item) { }

	// RVA: 0x13706E0 Offset: 0x13706E0 VA: 0x13706E0 Slot: 19
	public bool Remove(KeyValuePair<Variant, Variant> item) { }

	// RVA: 0x137077C Offset: 0x137077C VA: 0x137077C Slot: 17
	public bool Contains(KeyValuePair<Variant, Variant> item) { }

	// RVA: 0x1370914 Offset: 0x1370914 VA: 0x1370914
	public void CopyTo(KeyValuePair<Variant, Variant>[] array) { }

	// RVA: 0x137091C Offset: 0x137091C VA: 0x137091C Slot: 18
	public void CopyTo(KeyValuePair<Variant, Variant>[] array, int arrayIndex) { }

	// RVA: 0x1370C3C Offset: 0x1370C3C VA: 0x1370C3C Slot: 20
	private IEnumerator<KeyValuePair<Variant, Variant>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Firebase.Variant,Firebase.Variant>>.GetEnumerator() { }

	// RVA: 0x1370D68 Offset: 0x1370D68 VA: 0x1370D68 Slot: 12
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x136D274 Offset: 0x136D274 VA: 0x136D274
	public VariantVariantMap.VariantVariantMapEnumerator GetEnumerator() { }

	// RVA: 0x136FDFC Offset: 0x136FDFC VA: 0x136FDFC
	private uint size() { }

	// RVA: 0x1370DC8 Offset: 0x1370DC8 VA: 0x1370DC8
	public bool empty() { }

	// RVA: 0x1370EAC Offset: 0x1370EAC VA: 0x1370EAC Slot: 16
	public void Clear() { }

	// RVA: 0x136FA38 Offset: 0x136FA38 VA: 0x136FA38
	private Variant getitem(Variant key) { }

	// RVA: 0x136FB6C Offset: 0x136FB6C VA: 0x136FB6C
	private void setitem(Variant key, Variant x) { }

	// RVA: 0x136FCEC Offset: 0x136FCEC VA: 0x136FCEC Slot: 5
	public bool ContainsKey(Variant key) { }

	// RVA: 0x13705B8 Offset: 0x13705B8 VA: 0x13705B8 Slot: 22
	public void Add(Variant key, Variant val) { }

	// RVA: 0x1370808 Offset: 0x1370808 VA: 0x1370808 Slot: 6
	public bool Remove(Variant key) { }

	// RVA: 0x1370030 Offset: 0x1370030 VA: 0x1370030
	private IntPtr create_iterator_begin() { }

	// RVA: 0x1370114 Offset: 0x1370114 VA: 0x1370114
	private Variant get_next_key(IntPtr swigiterator) { }

	// RVA: 0x137022C Offset: 0x137022C VA: 0x137022C
	private void destroy_iterator(IntPtr swigiterator) { }
}

// Namespace: 
public sealed class VariantVariantMap.VariantVariantMapEnumerator : IEnumerator, IEnumerator<KeyValuePair<Variant, Variant>>, IDisposable // TypeDefIndex: 3203
{
	// Fields
	private VariantVariantMap collectionRef; // 0x10
	private IList<Variant> keyCollection; // 0x18
	private int currentIndex; // 0x20
	private object currentObject; // 0x28
	private int currentSize; // 0x30

	// Properties
	private object System.Collections.IEnumerator.Current { get; }
	public KeyValuePair<Variant, Variant> Current { get; }

	// Methods

	// RVA: 0x1370C9C Offset: 0x1370C9C VA: 0x1370C9C
	public void .ctor(VariantVariantMap collection) { }

	// RVA: 0x136D2D4 Offset: 0x136D2D4 VA: 0x136D2D4 Slot: 7
	public KeyValuePair<Variant, Variant> get_Current() { }

	// RVA: 0x1370F84 Offset: 0x1370F84 VA: 0x1370F84 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	// RVA: 0x136D42C Offset: 0x136D42C VA: 0x136D42C Slot: 5
	public bool MoveNext() { }

	// RVA: 0x1370FF0 Offset: 0x1370FF0 VA: 0x1370FF0 Slot: 6
	public void Reset() { }

	// RVA: 0x13710A4 Offset: 0x13710A4 VA: 0x13710A4 Slot: 8
	public void Dispose() { }
}

// Namespace: Firebase
internal enum GooglePlayServicesAvailability // TypeDefIndex: 3204
{
	// Fields
	public int value__; // 0x0
	public const GooglePlayServicesAvailability AvailabilityAvailable = 0;
	public const GooglePlayServicesAvailability AvailabilityUnavailableDisabled = 1;
	public const GooglePlayServicesAvailability AvailabilityUnavailableInvalid = 2;
	public const GooglePlayServicesAvailability AvailabilityUnavailableMissing = 3;
	public const GooglePlayServicesAvailability AvailabilityUnavailablePermissions = 4;
	public const GooglePlayServicesAvailability AvailabilityUnavailableUpdateRequired = 5;
	public const GooglePlayServicesAvailability AvailabilityUnavailableUpdating = 6;
	public const GooglePlayServicesAvailability AvailabilityUnavailableOther = 7;
}

// Namespace: Firebase
public enum LogLevel // TypeDefIndex: 3205
{
	// Fields
	public int value__; // 0x0
	public const LogLevel Verbose = 0;
	public const LogLevel Debug = 1;
	public const LogLevel Info = 2;
	public const LogLevel Warning = 3;
	public const LogLevel Error = 4;
	public const LogLevel Assert = 5;
}

// Namespace: Firebase
public sealed class FirebaseApp : IDisposable // TypeDefIndex: 3206
{
	// Fields
	private HandleRef swigCPtr; // 0x10
	private bool swigCMemOwn; // 0x20
	internal static readonly object disposeLock; // 0x0
	private string name; // 0x28
	private EventHandler AppDisposed; // 0x30
	private static Dictionary<string, FirebaseApp> nameToProxy; // 0x8
	private static Dictionary<IntPtr, FirebaseApp> cPtrToProxy; // 0x10
	private static bool AppUtilCallbacksInitialized; // 0x18
	private static object AppUtilCallbacksLock; // 0x20
	private static bool PreventOnAllAppsDestroyed; // 0x28
	private static bool crashlyticsInitializationAttempted; // 0x29
	private const int CheckDependenciesNoThread = -1;
	private const int CheckDependenciesPendingThread = -2;
	private static int CheckDependenciesThread; // 0x2C
	private static object CheckDependenciesThreadLock; // 0x30
	private FirebaseAppPlatform appPlatform; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC828BC Offset: 0xC828BC VA: 0xC828BC
	private static FirebaseApp.CreateDelegate <>f__am$cache0; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC828CC Offset: 0xC828CC VA: 0xC828CC
	private static Func<bool> <>f__am$cache1; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC828DC Offset: 0xC828DC VA: 0xC828DC
	private static Func<DependencyStatus> <>f__am$cache2; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC828EC Offset: 0xC828EC VA: 0xC828EC
	private static Func<Task<DependencyStatus>, Task<DependencyStatus>> <>f__am$cache3; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xC828FC Offset: 0xC828FC VA: 0xC828FC
	private static Func<Task, Task<DependencyStatus>> <>f__am$cache4; // 0x58

	// Properties
	public static FirebaseApp DefaultInstance { get; }
	public string Name { get; }
	public static LogLevel LogLevel { get; set; }
	private bool IsDataCollectionDefaultEnabled { get; set; }
	public AppOptions Options { get; }
	internal static SynchronizationContext ThreadSynchronizationContext { get; }
	internal FirebaseAppPlatform AppPlatform { get; }
	internal string NameInternal { get; }
	public static string DefaultName { get; }

	// Methods

	// RVA: 0x120DC58 Offset: 0x120DC58 VA: 0x120DC58
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x120DCBC Offset: 0x120DCBC VA: 0x120DCBC
	private static void .cctor() { }

	// RVA: 0x120DEE4 Offset: 0x120DEE4 VA: 0x120DEE4
	internal static HandleRef getCPtr(FirebaseApp obj) { }

	// RVA: 0x120DF54 Offset: 0x120DF54 VA: 0x120DF54 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x120DFC8 Offset: 0x120DFC8 VA: 0x120DFC8 Slot: 4
	public void Dispose() { }

	// RVA: 0x120E3D4 Offset: 0x120E3D4 VA: 0x120E3D4
	internal static void TranslateDllNotFoundException(Action closureToExecute) { }

	// RVA: 0x120E59C Offset: 0x120E59C VA: 0x120E59C
	public static FirebaseApp get_DefaultInstance() { }

	// RVA: 0x120E6F0 Offset: 0x120E6F0 VA: 0x120E6F0
	public static FirebaseApp GetInstance(string name) { }

	// RVA: 0x120E888 Offset: 0x120E888 VA: 0x120E888
	public static FirebaseApp Create() { }

	// RVA: 0x120F4E4 Offset: 0x120F4E4 VA: 0x120F4E4
	public static FirebaseApp Create(AppOptions options) { }

	// RVA: 0x120F5B4 Offset: 0x120F5B4 VA: 0x120F5B4
	public static FirebaseApp Create(AppOptions options, string name) { }

	// RVA: 0x120F6B8 Offset: 0x120F6B8 VA: 0x120F6B8
	public string get_Name() { }

	// RVA: 0x120F790 Offset: 0x120F790 VA: 0x120F790
	public static LogLevel get_LogLevel() { }

	// RVA: 0x120F7EC Offset: 0x120F7EC VA: 0x120F7EC
	public static void set_LogLevel(LogLevel value) { }

	// RVA: 0x120F850 Offset: 0x120F850 VA: 0x120F850
	internal void add_AppDisposed(EventHandler value) { }

	// RVA: 0x120F93C Offset: 0x120F93C VA: 0x120F93C
	internal void remove_AppDisposed(EventHandler value) { }

	// RVA: 0x120FA28 Offset: 0x120FA28 VA: 0x120FA28
	private bool get_IsDataCollectionDefaultEnabled() { }

	// RVA: 0x120FB04 Offset: 0x120FB04 VA: 0x120FB04
	private void set_IsDataCollectionDefaultEnabled(bool value) { }

	// RVA: 0x120FBE8 Offset: 0x120FBE8 VA: 0x120FBE8
	internal static void DisposeAllApps() { }

	// RVA: 0x120FF54 Offset: 0x120FF54 VA: 0x120FF54
	private void AddReference() { }

	// RVA: 0x120E148 Offset: 0x120E148 VA: 0x120E148
	private void RemoveReference() { }

	// RVA: 0x120F6F0 Offset: 0x120F6F0 VA: 0x120F6F0
	private void ThrowIfNull() { }

	// RVA: 0x1210388 Offset: 0x1210388 VA: 0x1210388
	private static void InitializeAppUtilCallbacks() { }

	// RVA: 0x12101F0 Offset: 0x12101F0 VA: 0x12101F0
	private static void OnAllAppsDestroyed() { }

	// RVA: 0x1200804 Offset: 0x1200804 VA: 0x1200804
	internal static Uri UrlStringToUri(string urlString) { }

	// RVA: 0x1200918 Offset: 0x1200918 VA: 0x1200918
	internal static string UriToUrlString(Uri uri) { }

	// RVA: 0x1211060 Offset: 0x1211060 VA: 0x1211060
	internal static object WeakReferenceGetTarget(WeakReference weakReference) { }

	// RVA: 0x1211128 Offset: 0x1211128 VA: 0x1211128
	private static bool InitializeCrashlyticsIfPresent() { }

	// RVA: 0x120EB48 Offset: 0x120EB48 VA: 0x120EB48
	private static FirebaseApp CreateAndTrack(FirebaseApp.CreateDelegate createDelegate, FirebaseApp existingProxy) { }

	// RVA: 0x121189C Offset: 0x121189C VA: 0x121189C
	private static void SetCheckDependenciesThread(int threadId) { }

	// RVA: 0x120E974 Offset: 0x120E974 VA: 0x120E974
	private static void ThrowIfCheckDependenciesRunning() { }

	// RVA: 0x12117AC Offset: 0x12117AC VA: 0x12117AC
	private static bool IsCheckDependenciesRunning() { }

	// RVA: 0x1211AC4 Offset: 0x1211AC4 VA: 0x1211AC4
	public static Task<DependencyStatus> CheckDependenciesAsync() { }

	// RVA: 0x1211C40 Offset: 0x1211C40 VA: 0x1211C40
	public static Task<DependencyStatus> CheckAndFixDependenciesAsync() { }

	// RVA: 0x1211D6C Offset: 0x1211D6C VA: 0x1211D6C
	private static DependencyStatus CheckDependencies() { }

	// RVA: 0x1211E34 Offset: 0x1211E34 VA: 0x1211E34
	private static DependencyStatus CheckDependenciesInternal() { }

	// RVA: 0x1211FF0 Offset: 0x1211FF0 VA: 0x1211FF0
	public static Task FixDependenciesAsync() { }

	// RVA: 0x12120B8 Offset: 0x12120B8 VA: 0x12120B8
	private static void ResetDefaultAppCPtr() { }

	// RVA: 0x1212268 Offset: 0x1212268 VA: 0x1212268
	public AppOptions get_Options() { }

	// RVA: 0x12123D8 Offset: 0x12123D8 VA: 0x12123D8
	internal static SynchronizationContext get_ThreadSynchronizationContext() { }

	// RVA: 0x1212490 Offset: 0x1212490 VA: 0x1212490
	internal FirebaseAppPlatform get_AppPlatform() { }

	// RVA: 0x12122E0 Offset: 0x12122E0 VA: 0x12122E0
	internal AppOptionsInternal options() { }

	// RVA: 0x120FB0C Offset: 0x120FB0C VA: 0x120FB0C
	internal void SetDataCollectionDefaultEnabledInternal(bool enabled) { }

	// RVA: 0x120FA2C Offset: 0x120FA2C VA: 0x120FA2C
	internal bool IsDataCollectionDefaultEnabledInternal() { }

	// RVA: 0x120E070 Offset: 0x120E070 VA: 0x120E070
	internal string get_NameInternal() { }

	// RVA: 0x121261C Offset: 0x121261C VA: 0x121261C
	internal static FirebaseApp CreateInternal() { }

	// RVA: 0x1212714 Offset: 0x1212714 VA: 0x1212714
	internal static FirebaseApp CreateInternal(AppOptionsInternal options) { }

	// RVA: 0x1212828 Offset: 0x1212828 VA: 0x1212828
	internal static FirebaseApp CreateInternal(AppOptionsInternal options, string name) { }

	// RVA: 0x12100F8 Offset: 0x12100F8 VA: 0x12100F8
	internal static void ReleaseReferenceInternal(FirebaseApp app) { }

	// RVA: 0x121294C Offset: 0x121294C VA: 0x121294C
	internal static void SetLogLevelInternal(LogLevel level) { }

	// RVA: 0x1212A10 Offset: 0x1212A10 VA: 0x1212A10
	internal static LogLevel GetLogLevelInternal() { }

	// RVA: 0x12116D8 Offset: 0x12116D8 VA: 0x12116D8
	internal static void RegisterLibraryInternal(string library, string version) { }

	// RVA: 0x1211410 Offset: 0x1211410 VA: 0x1211410
	internal static void AppSetDefaultConfigPath(string path) { }

	// RVA: 0x120E628 Offset: 0x120E628 VA: 0x120E628
	public static string get_DefaultName() { }

	[CompilerGeneratedAttribute] // RVA: 0xC83204 Offset: 0xC83204 VA: 0xC83204
	// RVA: 0x1212AD8 Offset: 0x1212AD8 VA: 0x1212AD8
	private static FirebaseApp <Create>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xC83214 Offset: 0xC83214 VA: 0xC83214
	// RVA: 0x1212B34 Offset: 0x1212B34 VA: 0x1212B34
	private static bool <CreateAndTrack>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xC83224 Offset: 0xC83224 VA: 0xC83224
	// RVA: 0x1212B90 Offset: 0x1212B90 VA: 0x1212B90
	private static DependencyStatus <CheckDependenciesAsync>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xC83234 Offset: 0xC83234 VA: 0xC83234
	// RVA: 0x1212C50 Offset: 0x1212C50 VA: 0x1212C50
	private static Task<DependencyStatus> <CheckAndFixDependenciesAsync>m__3(Task<DependencyStatus> checkTask) { }

	[CompilerGeneratedAttribute] // RVA: 0xC83244 Offset: 0xC83244 VA: 0xC83244
	// RVA: 0x1212DB8 Offset: 0x1212DB8 VA: 0x1212DB8
	private static Task<DependencyStatus> <CheckAndFixDependenciesAsync>m__4(Task t) { }
}

// Namespace: 
public class FirebaseApp.EnableModuleParams // TypeDefIndex: 3207
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC8290C Offset: 0xC8290C VA: 0xC8290C
	[DebuggerBrowsableAttribute] // RVA: 0xC8290C Offset: 0xC8290C VA: 0xC8290C
	private string <CppModuleName>k__BackingField; // 0x10
	[DebuggerBrowsableAttribute] // RVA: 0xC82948 Offset: 0xC82948 VA: 0xC82948
	[CompilerGeneratedAttribute] // RVA: 0xC82948 Offset: 0xC82948 VA: 0xC82948
	private string <CSharpClassName>k__BackingField; // 0x18
	[DebuggerBrowsableAttribute] // RVA: 0xC82984 Offset: 0xC82984 VA: 0xC82984
	[CompilerGeneratedAttribute] // RVA: 0xC82984 Offset: 0xC82984 VA: 0xC82984
	private bool <AlwaysEnable>k__BackingField; // 0x20

	// Properties
	public string CppModuleName { get; set; }
	public string CSharpClassName { get; set; }
	public bool AlwaysEnable { get; set; }

	// Methods

	// RVA: 0x1210F64 Offset: 0x1210F64 VA: 0x1210F64
	public void .ctor(string csharp, string cpp, bool always = False) { }

	[CompilerGeneratedAttribute] // RVA: 0xC83254 Offset: 0xC83254 VA: 0xC83254
	// RVA: 0x1210FB0 Offset: 0x1210FB0 VA: 0x1210FB0
	public string get_CppModuleName() { }

	[CompilerGeneratedAttribute] // RVA: 0xC83264 Offset: 0xC83264 VA: 0xC83264
	// RVA: 0x121316C Offset: 0x121316C VA: 0x121316C
	public void set_CppModuleName(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC83274 Offset: 0xC83274 VA: 0xC83274
	// RVA: 0x1210FA8 Offset: 0x1210FA8 VA: 0x1210FA8
	public string get_CSharpClassName() { }

	[CompilerGeneratedAttribute] // RVA: 0xC83284 Offset: 0xC83284 VA: 0xC83284
	// RVA: 0x1213164 Offset: 0x1213164 VA: 0x1213164
	public void set_CSharpClassName(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC83294 Offset: 0xC83294 VA: 0xC83294
	// RVA: 0x1210FB8 Offset: 0x1210FB8 VA: 0x1210FB8
	public bool get_AlwaysEnable() { }

	[CompilerGeneratedAttribute] // RVA: 0xC832A4 Offset: 0xC832A4 VA: 0xC832A4
	// RVA: 0x1213174 Offset: 0x1213174 VA: 0x1213174
	public void set_AlwaysEnable(bool value) { }
}

// Namespace: 
private sealed class FirebaseApp.CreateDelegate : MulticastDelegate // TypeDefIndex: 3208
{
	// Methods

	// RVA: 0x120EB38 Offset: 0x120EB38 VA: 0x120EB38
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x12114D4 Offset: 0x12114D4 VA: 0x12114D4 Slot: 11
	public virtual FirebaseApp Invoke() { }

	// RVA: 0x1213124 Offset: 0x1213124 VA: 0x1213124 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1213158 Offset: 0x1213158 VA: 0x1213158 Slot: 13
	public virtual FirebaseApp EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC82770 Offset: 0xC82770 VA: 0xC82770
private sealed class FirebaseApp.<Create>c__AnonStorey0 // TypeDefIndex: 3209
{
	// Fields
	internal AppOptions options; // 0x10

	// Methods

	// RVA: 0x120F5AC Offset: 0x120F5AC VA: 0x120F5AC
	public void .ctor() { }

	// RVA: 0x1212E7C Offset: 0x1212E7C VA: 0x1212E7C
	internal FirebaseApp <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC82780 Offset: 0xC82780 VA: 0xC82780
private sealed class FirebaseApp.<Create>c__AnonStorey1 // TypeDefIndex: 3210
{
	// Fields
	internal AppOptions options; // 0x10
	internal string name; // 0x18

	// Methods

	// RVA: 0x120F6B0 Offset: 0x120F6B0 VA: 0x120F6B0
	public void .ctor() { }

	// RVA: 0x1212F00 Offset: 0x1212F00 VA: 0x1212F00
	internal FirebaseApp <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC82790 Offset: 0xC82790 VA: 0xC82790
private sealed class FirebaseApp.<CheckDependencies>c__AnonStorey2 // TypeDefIndex: 3211
{
	// Fields
	internal DependencyStatus status; // 0x10

	// Methods

	// RVA: 0x1211E2C Offset: 0x1211E2C VA: 0x1211E2C
	public void .ctor() { }

	// RVA: 0x1212E14 Offset: 0x1212E14 VA: 0x1212E14
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC827A0 Offset: 0xC827A0 VA: 0xC827A0
private sealed class FirebaseApp.<FixDependenciesAsync>c__AnonStorey3 // TypeDefIndex: 3212
{
	// Fields
	internal Task task; // 0x10
	private static Action<Task> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x12120B0 Offset: 0x12120B0 VA: 0x12120B0
	public void .ctor() { }

	// RVA: 0x1212F8C Offset: 0x1212F8C VA: 0x1212F8C
	internal void <>m__0() { }

	// RVA: 0x1213078 Offset: 0x1213078 VA: 0x1213078
	private static void <>m__1(Task t) { }
}

// Namespace: Firebase
internal sealed class AppOptionsInternal : IDisposable // TypeDefIndex: 3213
{
	// Fields
	private HandleRef swigCPtr; // 0x10
	private bool swigCMemOwn; // 0x20

	// Properties
	public Uri DatabaseUrl { get; set; }
	public string AppId { get; set; }
	public string ApiKey { get; set; }
	public string MessageSenderId { get; set; }
	public string StorageBucket { get; set; }
	public string ProjectId { get; set; }
	public string PackageName { get; set; }

	// Methods

	// RVA: 0x1200118 Offset: 0x1200118 VA: 0x1200118
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x11FFAA4 Offset: 0x11FFAA4 VA: 0x11FFAA4
	internal void .ctor() { }

	// RVA: 0x1200448 Offset: 0x1200448 VA: 0x1200448
	internal static HandleRef getCPtr(AppOptionsInternal obj) { }

	// RVA: 0x12004B8 Offset: 0x12004B8 VA: 0x12004B8 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x120052C Offset: 0x120052C VA: 0x120052C Slot: 4
	public void Dispose() { }

	// RVA: 0x11FF0FC Offset: 0x11FF0FC VA: 0x11FF0FC
	public Uri get_DatabaseUrl() { }

	// RVA: 0x11FFB74 Offset: 0x11FFB74 VA: 0x11FFB74
	public void set_DatabaseUrl(Uri value) { }

	// RVA: 0x12009D8 Offset: 0x12009D8 VA: 0x12009D8
	internal void SetDatabaseUrlInternal(string url) { }

	// RVA: 0x120072C Offset: 0x120072C VA: 0x120072C
	internal string GetDatabaseUrlInternal() { }

	// RVA: 0x1200C28 Offset: 0x1200C28 VA: 0x1200C28
	internal static AppOptionsInternal LoadFromJsonConfig(string config, AppOptionsInternal options) { }

	// RVA: 0x1200E10 Offset: 0x1200E10 VA: 0x1200E10
	internal static AppOptionsInternal LoadFromJsonConfig(string config) { }

	// RVA: 0x11FFBF0 Offset: 0x11FFBF0 VA: 0x11FFBF0
	public void set_AppId(string value) { }

	// RVA: 0x11FF178 Offset: 0x11FF178 VA: 0x11FF178
	public string get_AppId() { }

	// RVA: 0x11FFCCC Offset: 0x11FFCCC VA: 0x11FFCCC
	public void set_ApiKey(string value) { }

	// RVA: 0x11FF258 Offset: 0x11FF258 VA: 0x11FF258
	public string get_ApiKey() { }

	// RVA: 0x11FFDA8 Offset: 0x11FFDA8 VA: 0x11FFDA8
	public void set_MessageSenderId(string value) { }

	// RVA: 0x11FF338 Offset: 0x11FF338 VA: 0x11FF338
	public string get_MessageSenderId() { }

	// RVA: 0x11FFE84 Offset: 0x11FFE84 VA: 0x11FFE84
	public void set_StorageBucket(string value) { }

	// RVA: 0x11FF418 Offset: 0x11FF418 VA: 0x11FF418
	public string get_StorageBucket() { }

	// RVA: 0x11FFF60 Offset: 0x11FFF60 VA: 0x11FFF60
	public void set_ProjectId(string value) { }

	// RVA: 0x11FF4F8 Offset: 0x11FF4F8 VA: 0x11FF4F8
	public string get_ProjectId() { }

	// RVA: 0x120003C Offset: 0x120003C VA: 0x120003C
	public void set_PackageName(string value) { }

	// RVA: 0x11FF5D8 Offset: 0x11FF5D8 VA: 0x11FF5D8
	public string get_PackageName() { }
}

// Namespace: Firebase
public enum InitResult // TypeDefIndex: 3214
{
	// Fields
	public int value__; // 0x0
	public const InitResult Success = 0;
	public const InitResult FailedMissingDependency = 1;
}

// Namespace: Firebase
internal class FutureBool : FutureBase // TypeDefIndex: 3215
{
	// Fields
	private HandleRef swigCPtr; // 0x28
	private static Dictionary<int, FutureBool.Action> Callbacks; // 0x0
	private static int CallbackIndex; // 0x8
	private static object CallbackLock; // 0x10
	private IntPtr callbackData; // 0x38
	private FutureBool.SWIG_CompletionDelegate SWIG_CompletionCB; // 0x40

	// Methods

	// RVA: 0x1213BB8 Offset: 0x1213BB8 VA: 0x1213BB8
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x1213C6C Offset: 0x1213C6C VA: 0x1213C6C
	public void .ctor() { }

	// RVA: 0x1213D3C Offset: 0x1213D3C VA: 0x1213D3C
	internal static HandleRef getCPtr(FutureBool obj) { }

	// RVA: 0x1213DAC Offset: 0x1213DAC VA: 0x1213DAC Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1213E20 Offset: 0x1213E20 VA: 0x1213E20 Slot: 5
	public override void Dispose() { }

	// RVA: 0x1213FD8 Offset: 0x1213FD8 VA: 0x1213FD8
	public static Task<bool> GetTask(FutureBool fu) { }

	// RVA: 0x12143A8 Offset: 0x12143A8 VA: 0x12143A8
	private void ThrowIfDisposed() { }

	// RVA: 0x121418C Offset: 0x121418C VA: 0x121418C
	public void SetOnCompletionCallback(FutureBool.Action userCompletionCallback) { }

	// RVA: 0x1213FA4 Offset: 0x1213FA4 VA: 0x1213FA4
	private void SetCompletionData(IntPtr data) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC832B4 Offset: 0xC832B4 VA: 0xC832B4
	// RVA: 0x1213A14 Offset: 0x1213A14 VA: 0x1213A14
	private static void SWIG_CompletionDispatcher(int key) { }

	// RVA: 0x1214458 Offset: 0x1214458 VA: 0x1214458
	internal IntPtr SWIG_OnCompletion(FutureBool.SWIG_CompletionDelegate cs_callback, int cs_key) { }

	// RVA: 0x1214548 Offset: 0x1214548 VA: 0x1214548
	public void SWIG_FreeCompletionData(IntPtr data) { }

	// RVA: 0x1214824 Offset: 0x1214824 VA: 0x1214824
	public bool GetResult() { }

	// RVA: 0x12148FC Offset: 0x12148FC VA: 0x12148FC
	private static void .cctor() { }
}

// Namespace: 
public sealed class FutureBool.Action : MulticastDelegate // TypeDefIndex: 3216
{
	// Methods

	// RVA: 0x121417C Offset: 0x121417C VA: 0x121417C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1214624 Offset: 0x1214624 VA: 0x1214624 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1214BE8 Offset: 0x1214BE8 VA: 0x1214BE8 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1214C1C Offset: 0x1214C1C VA: 0x1214C1C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
internal sealed class FutureBool.SWIG_CompletionDelegate : MulticastDelegate // TypeDefIndex: 3217
{
	// Methods

	// RVA: 0x1214448 Offset: 0x1214448 VA: 0x1214448
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1214C28 Offset: 0x1214C28 VA: 0x1214C28 Slot: 11
	public virtual void Invoke(int index) { }

	// RVA: 0x1214E54 Offset: 0x1214E54 VA: 0x1214E54 Slot: 12
	public virtual IAsyncResult BeginInvoke(int index, AsyncCallback callback, object object) { }

	// RVA: 0x1214EE0 Offset: 0x1214EE0 VA: 0x1214EE0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC827B0 Offset: 0xC827B0 VA: 0xC827B0
private sealed class FutureBool.<GetTask>c__AnonStorey0 // TypeDefIndex: 3218
{
	// Fields
	internal FutureBool fu; // 0x10
	internal TaskCompletionSource<bool> tcs; // 0x18

	// Methods

	// RVA: 0x1214174 Offset: 0x1214174 VA: 0x1214174
	public void .ctor() { }

	// RVA: 0x1214974 Offset: 0x1214974 VA: 0x1214974
	internal void <>m__0() { }
}

// Namespace: Firebase
internal class FutureVoid : FutureBase // TypeDefIndex: 3219
{
	// Fields
	private HandleRef swigCPtr; // 0x28
	private static Dictionary<int, FutureVoid.Action> Callbacks; // 0x0
	private static int CallbackIndex; // 0x8
	private static object CallbackLock; // 0x10
	private IntPtr callbackData; // 0x38
	private FutureVoid.SWIG_CompletionDelegate SWIG_CompletionCB; // 0x40

	// Methods

	// RVA: 0x1202850 Offset: 0x1202850 VA: 0x1202850
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x1216568 Offset: 0x1216568 VA: 0x1216568
	public void .ctor() { }

	// RVA: 0x1216638 Offset: 0x1216638 VA: 0x1216638
	internal static HandleRef getCPtr(FutureVoid obj) { }

	// RVA: 0x12166A8 Offset: 0x12166A8 VA: 0x12166A8 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x121671C Offset: 0x121671C VA: 0x121671C Slot: 5
	public override void Dispose() { }

	// RVA: 0x1202904 Offset: 0x1202904 VA: 0x1202904
	public static Task GetTask(FutureVoid fu) { }

	// RVA: 0x1216B08 Offset: 0x1216B08 VA: 0x1216B08
	private void ThrowIfDisposed() { }

	// RVA: 0x12168EC Offset: 0x12168EC VA: 0x12168EC
	public void SetOnCompletionCallback(FutureVoid.Action userCompletionCallback) { }

	// RVA: 0x12168A0 Offset: 0x12168A0 VA: 0x12168A0
	private void SetCompletionData(IntPtr data) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC83318 Offset: 0xC83318 VA: 0xC83318
	// RVA: 0x12163C4 Offset: 0x12163C4 VA: 0x12163C4
	private static void SWIG_CompletionDispatcher(int key) { }

	// RVA: 0x1216BB8 Offset: 0x1216BB8 VA: 0x1216BB8
	internal IntPtr SWIG_OnCompletion(FutureVoid.SWIG_CompletionDelegate cs_callback, int cs_key) { }

	// RVA: 0x1216CA8 Offset: 0x1216CA8 VA: 0x1216CA8
	public void SWIG_FreeCompletionData(IntPtr data) { }

	// RVA: 0x1216F84 Offset: 0x1216F84 VA: 0x1216F84
	private static void .cctor() { }
}

// Namespace: 
public sealed class FutureVoid.Action : MulticastDelegate // TypeDefIndex: 3220
{
	// Methods

	// RVA: 0x12168DC Offset: 0x12168DC VA: 0x12168DC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1216D84 Offset: 0x1216D84 VA: 0x1216D84 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1217258 Offset: 0x1217258 VA: 0x1217258 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x121728C Offset: 0x121728C VA: 0x121728C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
internal sealed class FutureVoid.SWIG_CompletionDelegate : MulticastDelegate // TypeDefIndex: 3221
{
	// Methods

	// RVA: 0x1216BA8 Offset: 0x1216BA8 VA: 0x1216BA8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1217298 Offset: 0x1217298 VA: 0x1217298 Slot: 11
	public virtual void Invoke(int index) { }

	// RVA: 0x12174C4 Offset: 0x12174C4 VA: 0x12174C4 Slot: 12
	public virtual IAsyncResult BeginInvoke(int index, AsyncCallback callback, object object) { }

	// RVA: 0x1217550 Offset: 0x1217550 VA: 0x1217550 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC827C0 Offset: 0xC827C0 VA: 0xC827C0
private sealed class FutureVoid.<GetTask>c__AnonStorey0 // TypeDefIndex: 3222
{
	// Fields
	internal FutureVoid fu; // 0x10
	internal TaskCompletionSource<int> tcs; // 0x18

	// Methods

	// RVA: 0x12168D4 Offset: 0x12168D4 VA: 0x12168D4
	public void .ctor() { }

	// RVA: 0x1216FFC Offset: 0x1216FFC VA: 0x1216FFC
	internal void <>m__0() { }
}

// Namespace: Firebase
internal class FutureString : FutureBase // TypeDefIndex: 3223
{
	// Fields
	private HandleRef swigCPtr; // 0x28
	private static Dictionary<int, FutureString.Action> Callbacks; // 0x0
	private static int CallbackIndex; // 0x8
	private static object CallbackLock; // 0x10
	private IntPtr callbackData; // 0x38
	private FutureString.SWIG_CompletionDelegate SWIG_CompletionCB; // 0x40

	// Methods

	// RVA: 0x1215090 Offset: 0x1215090 VA: 0x1215090
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x1215144 Offset: 0x1215144 VA: 0x1215144
	public void .ctor() { }

	// RVA: 0x1215214 Offset: 0x1215214 VA: 0x1215214
	internal static HandleRef getCPtr(FutureString obj) { }

	// RVA: 0x1215284 Offset: 0x1215284 VA: 0x1215284 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x12152F8 Offset: 0x12152F8 VA: 0x12152F8 Slot: 5
	public override void Dispose() { }

	// RVA: 0x12154B0 Offset: 0x12154B0 VA: 0x12154B0
	public static Task<string> GetTask(FutureString fu) { }

	// RVA: 0x1215880 Offset: 0x1215880 VA: 0x1215880
	private void ThrowIfDisposed() { }

	// RVA: 0x1215664 Offset: 0x1215664 VA: 0x1215664
	public void SetOnCompletionCallback(FutureString.Action userCompletionCallback) { }

	// RVA: 0x121547C Offset: 0x121547C VA: 0x121547C
	private void SetCompletionData(IntPtr data) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC8337C Offset: 0xC8337C VA: 0xC8337C
	// RVA: 0x1214EEC Offset: 0x1214EEC VA: 0x1214EEC
	private static void SWIG_CompletionDispatcher(int key) { }

