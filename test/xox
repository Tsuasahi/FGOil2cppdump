	public const WarBoardTacticalTrendEntity.Type ATTACK = 1;
	public const WarBoardTacticalTrendEntity.Type WARSITUATION = 2;
	public const WarBoardTacticalTrendEntity.Type BENEFIT = 3;
	public const WarBoardTacticalTrendEntity.Type MASTER_ATTACK = 4;
	public const WarBoardTacticalTrendEntity.Type MASTER_DEFENSE = 5;
}

// Namespace: 
public class WarBoardTacticalTrendMaster : DataMasterBase<WarBoardTacticalTrendMaster, WarBoardTacticalTrendEntity, int> // TypeDefIndex: 7592
{
	// Methods

	// RVA: 0x1A8C7F0 Offset: 0x1A8C7F0 VA: 0x1A8C7F0
	public void .ctor() { }
}

// Namespace: 
public class WarBoardTreasureEntity : DataEntityBase<int> // TypeDefIndex: 7593
{
	// Fields
	public int id; // 0x10
	public string name; // 0x18
	public int frequencyType; // 0x20
	public int iconId; // 0x24
	public int giftId; // 0x28
	public int rarity; // 0x2C

	// Methods

	// RVA: 0x1A8E9EC Offset: 0x1A8E9EC VA: 0x1A8E9EC
	public void .ctor() { }

	// RVA: 0x1A8EA3C Offset: 0x1A8EA3C VA: 0x1A8EA3C Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class WarBoardTreasureMaster : DataMasterBase<WarBoardTreasureMaster, WarBoardTreasureEntity, int> // TypeDefIndex: 7594
{
	// Methods

	// RVA: 0x1A8F678 Offset: 0x1A8F678 VA: 0x1A8F678
	public void .ctor() { }
}

// Namespace: 
public class WarEntity : DataEntityBase<int> // TypeDefIndex: 7595
{
	// Fields
	public int id; // 0x10
	public string age; // 0x18
	public string name; // 0x20
	public string longName; // 0x28
	public int bannerId; // 0x30
	public int priority; // 0x34
	public int parentWarId; // 0x38
	public int materialParentWarId; // 0x3C
	public int flag; // 0x40
	public string emptyMessage; // 0x48
	public int startType; // 0x50
	public long targetId; // 0x58
	public int eventId; // 0x60
	public int lastQuestId; // 0x64
	public float[] coordinate; // 0x68
	public float[][] coordinates; // 0x70
	public int assetId; // 0x78

	// Methods

	// RVA: 0x1A91214 Offset: 0x1A91214 VA: 0x1A91214
	public void .ctor() { }

	// RVA: 0x1A91264 Offset: 0x1A91264 VA: 0x1A91264
	public void .ctor(WarEntity cSrc) { }

	// RVA: 0x1A91480 Offset: 0x1A91480 VA: 0x1A91480 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1A91488 Offset: 0x1A91488 VA: 0x1A91488
	public int getWarId() { }

	// RVA: 0x1A91490 Offset: 0x1A91490 VA: 0x1A91490
	public bool IsEvent() { }

	// RVA: 0x1A9154C Offset: 0x1A9154C VA: 0x1A9154C
	public bool UseEvent() { }

	// RVA: 0x1A9155C Offset: 0x1A9155C VA: 0x1A9155C
	public bool IsFolder() { }

	// RVA: 0x1A9157C Offset: 0x1A9157C VA: 0x1A9157C
	public bool ClearedReturnToTilte() { }

	// RVA: 0x1A91584 Offset: 0x1A91584 VA: 0x1A91584
	public bool IsMainScenarioFolder() { }

	// RVA: 0x1A915C8 Offset: 0x1A915C8 VA: 0x1A915C8
	public bool IsShop() { }

	// RVA: 0x1A915D0 Offset: 0x1A915D0 VA: 0x1A915D0
	public bool IsBlackMarkWithClear() { }

	// RVA: 0x1A915D8 Offset: 0x1A915D8 VA: 0x1A915D8
	public bool IsWhiteMarkWithClear() { }

	// RVA: 0x1A915E0 Offset: 0x1A915E0 VA: 0x1A915E0
	public bool IsDispWhiteMarkUnderBoard() { }

	// RVA: 0x1A915E8 Offset: 0x1A915E8 VA: 0x1A915E8
	public bool IsMainInterlude() { }

	// RVA: 0x1A91498 Offset: 0x1A91498 VA: 0x1A91498
	public bool HasFlag(WarEntity.Flag flag) { }

	// RVA: 0x1A91660 Offset: 0x1A91660 VA: 0x1A91660
	public int GetPrioredBannerId() { }

	// RVA: 0x1A91704 Offset: 0x1A91704 VA: 0x1A91704
	public int GetPrioredParentId() { }

	// RVA: 0x1A917A8 Offset: 0x1A917A8 VA: 0x1A917A8
	public int GetQuestBoardSectionId() { }

	// RVA: 0x1A91840 Offset: 0x1A91840 VA: 0x1A91840
	public string GetPrioredName() { }

	// RVA: 0x1A918E4 Offset: 0x1A918E4 VA: 0x1A918E4
	public string GetPrioredLongName() { }

	// RVA: 0x1A91988 Offset: 0x1A91988 VA: 0x1A91988
	public int GetPrioredMaterialParentWarId() { }

	// RVA: 0x1A91A2C Offset: 0x1A91A2C VA: 0x1A91A2C
	public float[][] GetPrioredCoordinates() { }

	// RVA: 0x1A91B1C Offset: 0x1A91B1C VA: 0x1A91B1C
	public int GetBaseMap() { }

	// RVA: 0x1A91BB4 Offset: 0x1A91BB4 VA: 0x1A91BB4
	public WarEntity.StartType GetStartType() { }

	// RVA: 0x1A91C64 Offset: 0x1A91C64 VA: 0x1A91C64
	public string GetNoticeText() { }

	// RVA: 0x1A91D34 Offset: 0x1A91D34 VA: 0x1A91D34
	public bool IsStartTypeQuest() { }

	// RVA: 0x1A91D50 Offset: 0x1A91D50 VA: 0x1A91D50
	public int GetAssetId() { }

	// RVA: 0x1A91D6C Offset: 0x1A91D6C VA: 0x1A91D6C
	public bool IsPurchasedByRarePrism() { }

	// RVA: 0x1A91EDC Offset: 0x1A91EDC VA: 0x1A91EDC
	public bool IsContainPrioredEntity(WarAddEntity.WarOverwriteType type) { }

	// RVA: 0x1A91F84 Offset: 0x1A91F84 VA: 0x1A91F84
	public bool IsPlayEffectChangeBlackMark() { }
}

// Namespace: 
public enum WarEntity.Flag // TypeDefIndex: 7596
{
	// Fields
	public int value__; // 0x0
	public const WarEntity.Flag WITH_MAP = 2;
	public const WarEntity.Flag SHOW_ON_MATERIAL = 4;
	public const WarEntity.Flag FOLDER_SORT_PRIOR = 8;
	public const WarEntity.Flag STORY_SHORTCUT = 16;
	public const WarEntity.Flag IS_EVENT = 32;
	public const WarEntity.Flag CLOSE_AFTER_CLEAR = 64;
	public const WarEntity.Flag MAIN_SCENARIO = 128;
	public const WarEntity.Flag IS_WAR_ICON_LEFT = 256;
	public const WarEntity.Flag CLEARED_RETURN_TO_TITLE = 512;
	public const WarEntity.Flag NO_CLEAR_MARK_WITH_CLEAR = 1024;
	public const WarEntity.Flag NO_CLEAR_MARK_WITH_COMPLETE = 2048;
	public const WarEntity.Flag NOT_ENTRY_BANNER_ACTIVE = 4096;
	public const WarEntity.Flag SHOP = 8192;
	public const WarEntity.Flag BLACK_MARK_WITH_CLEAR = 16384;
	public const WarEntity.Flag DISP_FIRST_QUEST = 32768;
	public const WarEntity.Flag EFFECT_DISAPPEAR_BANNER = 65536;
	public const WarEntity.Flag WHITE_MARK_WITH_CLEAR = 131072;
	public const WarEntity.Flag WHITE_MARK_UNDER_BOARD = 262144;
}

// Namespace: 
public enum WarEntity.StartType // TypeDefIndex: 7597
{
	// Fields
	public int value__; // 0x0
	public const WarEntity.StartType NONE = 0;
	public const WarEntity.StartType SCRIPT = 1;
	public const WarEntity.StartType QUEST = 2;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEFF0 Offset: 0xCAEFF0 VA: 0xCAEFF0
private sealed class WarEntity.<IsPurchasedByRarePrism>c__AnonStorey0 // TypeDefIndex: 7598
{
	// Fields
	internal UserQuestMaster userQuestMst; // 0x10
	internal WarEntity $this; // 0x18

	// Methods

	// RVA: 0x1A91ED4 Offset: 0x1A91ED4 VA: 0x1A91ED4
	public void .ctor() { }

	// RVA: 0x1A91F8C Offset: 0x1A91F8C VA: 0x1A91F8C
	internal bool <>m__0(MapControl.QuestInfo quest) { }
}

// Namespace: 
public class WarGroupEntity : DataEntityBase<string> // TypeDefIndex: 7599
{
	// Fields
	public int id; // 0x10
	public int warId; // 0x14
	public int questAfterClear; // 0x18
	public int questType; // 0x1C

	// Methods

	// RVA: 0x1A920B4 Offset: 0x1A920B4 VA: 0x1A920B4
	public void .ctor() { }

	// RVA: 0x1A92104 Offset: 0x1A92104 VA: 0x1A92104 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1A92118 Offset: 0x1A92118 VA: 0x1A92118
	public static string CreatePK(int id, int warId, int questAfterClear, int questType) { }
}

// Namespace: 
public class WarGroupMaster : DataMasterBase<WarGroupMaster, WarGroupEntity, string> // TypeDefIndex: 7600
{
	// Methods

	// RVA: 0x1A92130 Offset: 0x1A92130 VA: 0x1A92130
	public void .ctor() { }

	// RVA: 0x1A92184 Offset: 0x1A92184 VA: 0x1A92184
	public WarGroupEntity GetEntity(int id, int warId, int questAfterClear, int questType) { }

	// RVA: 0x1A92210 Offset: 0x1A92210 VA: 0x1A92210
	public bool TryGetEntity(out WarGroupEntity entity, int id, int warId, int questAfterClear, int questType) { }

	// RVA: 0x1A922AC Offset: 0x1A922AC VA: 0x1A922AC
	public bool CanUseContinueItem(int warId, int questAfterClear, int questType, int[] targetIds) { }

	// RVA: 0x1A92448 Offset: 0x1A92448 VA: 0x1A92448
	public bool HasEntity(int warId, int questAfterClear, int questType, int[] targetIds) { }
}

// Namespace: 
public class WarMaster : DataMasterBase<WarMaster, WarEntity, int> // TypeDefIndex: 7601
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1F84 Offset: 0xCC1F84 VA: 0xCC1F84
	private static Func<DataEntityBase, WarEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC1F94 Offset: 0xCC1F94 VA: 0xCC1F94
	private static Comparison<WarEntity> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x1A92504 Offset: 0x1A92504 VA: 0x1A92504
	public void .ctor() { }

	// RVA: 0x1A92558 Offset: 0x1A92558 VA: 0x1A92558
	public List<WarEntity> GetEntityList() { }

	// RVA: 0x1A92628 Offset: 0x1A92628 VA: 0x1A92628
	public WarEntity getByLastQuestId(int last_quest_id) { }

	// RVA: 0x1A92734 Offset: 0x1A92734 VA: 0x1A92734
	public WarEntity getByEventId(int event_id) { }

	// RVA: 0x1A92840 Offset: 0x1A92840 VA: 0x1A92840
	public static int getEventID(int warId) { }

	// RVA: 0x1A928E8 Offset: 0x1A928E8 VA: 0x1A928E8
	public WarEntity[] getPrioredWarEntsWithIds(List<int> ids) { }

	// RVA: 0x1A92B44 Offset: 0x1A92B44 VA: 0x1A92B44
	public int[] getClearWarIdList() { }

	// RVA: 0x1A92D38 Offset: 0x1A92D38 VA: 0x1A92D38
	public static bool IsLastQuest(int warId, int questId) { }

	// RVA: 0x1A92E0C Offset: 0x1A92E0C VA: 0x1A92E0C
	public bool IsClearAllMainScenario() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3817C Offset: 0xD3817C VA: 0xD3817C
	// RVA: 0x1A92F90 Offset: 0x1A92F90 VA: 0x1A92F90
	private static WarEntity <GetEntityList>m__0(DataEntityBase data) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3818C Offset: 0xD3818C VA: 0xD3818C
	// RVA: 0x1A93010 Offset: 0x1A93010 VA: 0x1A93010
	private static int <getPrioredWarEntsWithIds>m__1(WarEntity a, WarEntity b) { }
}

// Namespace: 
public class MaterialBranchRouteManager // TypeDefIndex: 7602
{
	// Fields
	private static readonly string SAVE_DATA_VERSION; // 0x0
	private static bool isModfiy; // 0x8
	private static bool isContinueDevice; // 0x9
	private static List<MaterialBranchRouteManager.MaterialBranchInfo> infoList; // 0x10

	// Methods

	// RVA: 0x1BA32E4 Offset: 0x1BA32E4 VA: 0x1BA32E4
	public void .ctor() { }

	// RVA: 0x1BA32EC Offset: 0x1BA32EC VA: 0x1BA32EC
	private static string GetFilePath() { }

	// RVA: 0x1BA33C4 Offset: 0x1BA33C4 VA: 0x1BA33C4
	public static void DeleteSaveData() { }

	// RVA: 0x1BA3448 Offset: 0x1BA3448 VA: 0x1BA3448
	public static void Initialize() { }

	// RVA: 0x1BA394C Offset: 0x1BA394C VA: 0x1BA394C
	private static void ClearSaveData() { }

	// RVA: 0x1BA3A3C Offset: 0x1BA3A3C VA: 0x1BA3A3C
	public static bool IsMaterialSelectedRouteId(int questId, int routeId) { }

	// RVA: 0x1BA3B48 Offset: 0x1BA3B48 VA: 0x1BA3B48
	public static bool IsMaterialSelectedRouteIds(IList<int> questIds, IList<int> routeIds, int count, CondType.CheckType checkType) { }

	// RVA: 0x1BA41B8 Offset: 0x1BA41B8 VA: 0x1BA41B8
	public static void SetRouteId(int questId, int phase, int index, ScriptManager.MenuRouteInfo[] routeInfos) { }

	// RVA: 0x1BA34A4 Offset: 0x1BA34A4 VA: 0x1BA34A4
	public static bool ReadData() { }

	// RVA: 0x1BA456C Offset: 0x1BA456C VA: 0x1BA456C
	public static bool WriteData() { }

	// RVA: 0x1BA497C Offset: 0x1BA497C VA: 0x1BA497C
	private static void .cctor() { }
}

// Namespace: 
private class MaterialBranchRouteManager.MaterialBranchInfo // TypeDefIndex: 7603
{
	// Fields
	public int questId; // 0x10
	public int phase; // 0x14
	public int routeId; // 0x18

	// Methods

	// RVA: 0x1BA4564 Offset: 0x1BA4564 VA: 0x1BA4564
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF000 Offset: 0xCAF000 VA: 0xCAF000
private sealed class MaterialBranchRouteManager.<IsMaterialSelectedRouteId>c__AnonStorey0 // TypeDefIndex: 7604
{
	// Fields
	internal int questId; // 0x10
	internal int routeId; // 0x14

	// Methods

	// RVA: 0x1BA3B40 Offset: 0x1BA3B40 VA: 0x1BA3B40
	public void .ctor() { }

	// RVA: 0x1BA4A1C Offset: 0x1BA4A1C VA: 0x1BA4A1C
	internal bool <>m__0(MaterialBranchRouteManager.MaterialBranchInfo x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF010 Offset: 0xCAF010 VA: 0xCAF010
private sealed class MaterialBranchRouteManager.<SetRouteId>c__AnonStorey1 // TypeDefIndex: 7605
{
	// Fields
	internal int questId; // 0x10
	internal int phase; // 0x14

	// Methods

	// RVA: 0x1BA455C Offset: 0x1BA455C VA: 0x1BA455C
	public void .ctor() { }

	// RVA: 0x1BA4A70 Offset: 0x1BA4A70 VA: 0x1BA4A70
	internal bool <>m__0(MaterialBranchRouteManager.MaterialBranchInfo x) { }
}

// Namespace: 
public class MaterialServantLimitCountManager // TypeDefIndex: 7606
{
	// Fields
	protected static readonly string SAVE_DATA_VERSION; // 0x0
	protected static bool isModfiy; // 0x8
	protected static bool isContinueDevice; // 0x9
	protected static List<MaterialServantLimitCountManager.ServantLimitCountInfo> limitCountList; // 0x10

	// Methods

	// RVA: 0x1BB9490 Offset: 0x1BB9490 VA: 0x1BB9490
	public void .ctor() { }

	// RVA: 0x1BB9498 Offset: 0x1BB9498 VA: 0x1BB9498
	protected static string GetSaveFileName() { }

	// RVA: 0x1BB9570 Offset: 0x1BB9570 VA: 0x1BB9570
	public static void DeleteSaveData() { }

	// RVA: 0x1BB95F4 Offset: 0x1BB95F4 VA: 0x1BB95F4
	public static void Initialize() { }

	// RVA: 0x1BB9AF8 Offset: 0x1BB9AF8 VA: 0x1BB9AF8
	protected static void ClearSaveDataList() { }

	// RVA: 0x1BB9BFC Offset: 0x1BB9BFC VA: 0x1BB9BFC
	public static void SetLimitCount(int servantId, int limitCount) { }

	// RVA: 0x1BB9DF0 Offset: 0x1BB9DF0 VA: 0x1BB9DF0
	public static int GetLimitCount(int servantId) { }

	// RVA: 0x1BB9650 Offset: 0x1BB9650 VA: 0x1BB9650
	public static bool ReadData() { }

	// RVA: 0x1BB9F14 Offset: 0x1BB9F14 VA: 0x1BB9F14
	public static bool WriteData() { }

	// RVA: 0x1BBA310 Offset: 0x1BBA310 VA: 0x1BBA310
	private static void .cctor() { }
}

// Namespace: 
protected class MaterialServantLimitCountManager.ServantLimitCountInfo // TypeDefIndex: 7607
{
	// Fields
	public int servantId; // 0x10
	public int limitCount; // 0x14

	// Methods

	// RVA: 0x1BB9DE8 Offset: 0x1BB9DE8 VA: 0x1BB9DE8
	public void .ctor() { }
}

// Namespace: 
public class OtherUserNewManager // TypeDefIndex: 7608
{
	// Fields
	protected static readonly string SAVE_DATA_VERSION; // 0x0
	protected static bool isModfiy; // 0x8
	protected static bool isContinueDevice; // 0x9
	protected static List<long> oldList; // 0x10

	// Methods

	// RVA: 0x179A6B0 Offset: 0x179A6B0 VA: 0x179A6B0
	public void .ctor() { }

	// RVA: 0x179A6B8 Offset: 0x179A6B8 VA: 0x179A6B8
	protected static string getSaveFileName() { }

	// RVA: 0x179A790 Offset: 0x179A790 VA: 0x179A790
	public static void DeleteSaveData() { }

	// RVA: 0x179A814 Offset: 0x179A814 VA: 0x179A814
	public static void CreateContinueDeviceSaveData() { }

	// RVA: 0x179AD60 Offset: 0x179AD60 VA: 0x179AD60
	public static void Initialize() { }

	// RVA: 0x179A890 Offset: 0x179A890 VA: 0x179A890
	protected static void ClearSaveDataList() { }

	// RVA: 0x179B1F4 Offset: 0x179B1F4 VA: 0x179B1F4
	public static void LoginProcess() { }

	// RVA: 0x179B2E4 Offset: 0x179B2E4 VA: 0x179B2E4
	public static bool IsNew(long userId) { }

	// RVA: 0x179B3F8 Offset: 0x179B3F8 VA: 0x179B3F8
	public static void SetOld(long userId) { }

	// RVA: 0x179A470 Offset: 0x179A470 VA: 0x179A470
	public static void SetOld(long[] userList) { }

	// RVA: 0x179ADBC Offset: 0x179ADBC VA: 0x179ADBC
	public static bool ReadData() { }

	// RVA: 0x179A994 Offset: 0x179A994 VA: 0x179A994
	public static bool WriteData() { }

	// RVA: 0x179B568 Offset: 0x179B568 VA: 0x179B568
	private static void .cctor() { }
}

// Namespace: 
public class QuestHintDialogOpenManager // TypeDefIndex: 7609
{
	// Fields
	protected static readonly string SAVE_DATA_VERSION; // 0x0
	protected static List<int> questHintDialogOpenList; // 0x8
	protected static int temporarilyId; // 0x10

	// Methods

	// RVA: 0x173B750 Offset: 0x173B750 VA: 0x173B750
	public void .ctor() { }

	// RVA: 0x173B758 Offset: 0x173B758 VA: 0x173B758
	protected static string GetSaveFileName() { }

	// RVA: 0x173B830 Offset: 0x173B830 VA: 0x173B830
	public static void DeleteSaveData() { }

	// RVA: 0x173B8B4 Offset: 0x173B8B4 VA: 0x173B8B4
	public static void Initialize() { }

	// RVA: 0x173BD0C Offset: 0x173BD0C VA: 0x173BD0C
	public static void ClearSaveDataList() { }

	// RVA: 0x173B910 Offset: 0x173B910 VA: 0x173B910
	public static bool ReadData() { }

	// RVA: 0x173BD90 Offset: 0x173BD90 VA: 0x173BD90
	public static bool WriteData() { }

	// RVA: 0x173C0F4 Offset: 0x173C0F4 VA: 0x173C0F4
	public static bool IsQuestHintOpen(int questId) { }

	// RVA: 0x173C264 Offset: 0x173C264 VA: 0x173C264
	public static void SetQuestId(int questId) { }

	// RVA: 0x173C430 Offset: 0x173C430 VA: 0x173C430
	public static void SetTemporarilyId(int id) { }

	// RVA: 0x173C49C Offset: 0x173C49C VA: 0x173C49C
	public static int GetTemporarilyId() { }

	// RVA: 0x173C504 Offset: 0x173C504 VA: 0x173C504
	public static void ResetTemporarilyId() { }

	// RVA: 0x173C56C Offset: 0x173C56C VA: 0x173C56C
	public static bool IsSettingTemporarilyId(int id) { }

	// RVA: 0x173C5E0 Offset: 0x173C5E0 VA: 0x173C5E0
	private static void .cctor() { }
}

// Namespace: 
public class QuestRestrictionInfo // TypeDefIndex: 7610
{
	// Fields
	public int eventId; // 0x10
	public int questId; // 0x14
	public int questPhase; // 0x18
	public QuestRestrictionEntity[] questRestrictionEntityList; // 0x20
	public RestrictionEntity[] restrictionEntityList; // 0x28
	public RestrictionEntity totalCostRestrictionEntity; // 0x30
	public RestrictionEntity supportOnlyRestrictionEntity; // 0x38
	public RestrictionEntity uniqueSvtRestrictionEntity; // 0x40
	public int[] deckSvtIdList; // 0x48
	public RestrictionEntity fixedSupportPositionRestrictionEntity; // 0x50
	public bool[] supportPositionList; // 0x58
	public RestrictionEntity fixedMyServantPositionRestrictionEntity; // 0x60
	public RestrictionEntity fixedMyServantSingleRestrictionEntity; // 0x68
	public RestrictionEntity servantNumRestrictionEntity; // 0x70
	public int servantNumMax; // 0x78
	public RestrictionEntity myServantNumRestrictionEntity; // 0x80
	public int myServantNumMax; // 0x88
	public List<RestrictionEntity> myServantOrNpcRestrictionEntityList; // 0x90
	public List<int> specifiedPositionList; // 0x98
	protected bool isSupportOnlyForceBattle; // 0xA0
	protected bool isNoSupportBattle; // 0xA1
	protected int[] svtIdForceBattleList; // 0xA8
	protected bool isFatigure; // 0xB0
	protected int eventDeckNum; // 0xB4
	private bool isNpcMultipleBattle; // 0xB8
	private bool isNpcOnlyBattle; // 0xB9
	private bool isNpcEditablePos; // 0xBA
	private bool isNotTransitionSupportList; // 0xBB
	private int supportInitIndex; // 0xBC
	protected bool isRestriction; // 0xC0
	protected string restrictionMessage; // 0xC8
	protected string confirmRestrictionMessage; // 0xD0
	protected int correctionIconId; // 0xD8
	protected int[] overwriteLimitCountSvtIds; // 0xE0
	protected int[] overwriteLimitCounts; // 0xE8
	protected int[] overwriteLimitCountIconIds; // 0xF0

	// Methods

	// RVA: 0x174C9EC Offset: 0x174C9EC VA: 0x174C9EC
	public void .ctor(int questId) { }

	// RVA: 0x174CA18 Offset: 0x174CA18 VA: 0x174CA18
	public void .ctor(int eventId, int questId, int questPhase) { }

	// RVA: 0x174D62C Offset: 0x174D62C VA: 0x174D62C
	public void .ctor(int eventId, int questId, int questPhase, RestrictionEntity overwriteRestiction) { }

	// RVA: 0x174CAF4 Offset: 0x174CAF4 VA: 0x174CAF4
	public void Setup(int eventId, int questId, int questPhase) { }

	// RVA: 0x174D73C Offset: 0x174D73C VA: 0x174D73C
	public void SetDeckInfo(UserDeckEntity userDeckEntity) { }

	// RVA: 0x174D8C4 Offset: 0x174D8C4 VA: 0x174D8C4
	public void SetDeckInfo(PartyListViewItem partyItem, int num) { }

	// RVA: 0x174DA60 Offset: 0x174DA60 VA: 0x174DA60
	public bool IsEmpry() { }

	// RVA: 0x174DA94 Offset: 0x174DA94 VA: 0x174DA94
	public RestrictionEntity[] GetList() { }

	// RVA: 0x174DA9C Offset: 0x174DA9C VA: 0x174DA9C
	public bool IsRestriction() { }

	// RVA: 0x174DAA4 Offset: 0x174DAA4 VA: 0x174DAA4
	public bool IsRestriction(int svtId, int limitCount, int dispLimitCount, int lv) { }

	// RVA: 0x174DCA0 Offset: 0x174DCA0 VA: 0x174DCA0
	public string GetConfirmRestrictionMessage() { }

	// RVA: 0x174DCA8 Offset: 0x174DCA8 VA: 0x174DCA8
	public string GetRestrictionMessage() { }

	// RVA: 0x174DCB0 Offset: 0x174DCB0 VA: 0x174DCB0
	public bool IsSupportOnly() { }

	// RVA: 0x174DCC0 Offset: 0x174DCC0 VA: 0x174DCC0
	public string GetSupportOnlyRestrictionMessage() { }

	// RVA: 0x174DD2C Offset: 0x174DD2C VA: 0x174DD2C
	public bool IsUniqueServant() { }

	// RVA: 0x174DD3C Offset: 0x174DD3C VA: 0x174DD3C
	public bool IsUniqueServant(int svtId) { }

	// RVA: 0x174DE34 Offset: 0x174DE34 VA: 0x174DE34
	public bool IsUniqueServant(int svtId, PartyListViewItem partyItem, int num, int partyIndex = -1) { }

	// RVA: 0x174DF90 Offset: 0x174DF90 VA: 0x174DF90
	public string GetConfirmUniqueServantRestrictionMessage() { }

	// RVA: 0x174E00C Offset: 0x174E00C VA: 0x174E00C
	public string GetUniqueServantRestrictionMessage() { }

	// RVA: 0x174E078 Offset: 0x174E078 VA: 0x174E078
	public bool IsFixedSupportPosition() { }

	// RVA: 0x174E088 Offset: 0x174E088 VA: 0x174E088
	public bool IsFixedSupportPosition(int num) { }

	// RVA: 0x174E0F4 Offset: 0x174E0F4 VA: 0x174E0F4
	public string GetConfirmFixedSupportPositionRestrictionMessage() { }

	// RVA: 0x174E170 Offset: 0x174E170 VA: 0x174E170
	public string GetFixedSupportPositionRestrictionMessage() { }

	// RVA: 0x174E1DC Offset: 0x174E1DC VA: 0x174E1DC
	public bool IsFixedMyServantPosition() { }

	// RVA: 0x174E1EC Offset: 0x174E1EC VA: 0x174E1EC
	public int[] GetFixedMyServantPositionSvtIdList() { }

	// RVA: 0x174E204 Offset: 0x174E204 VA: 0x174E204
	public int GetFixedMyServantPositionCount() { }

	// RVA: 0x174E224 Offset: 0x174E224 VA: 0x174E224
	public bool IsFixedMyServantPosition(out bool isFixedMyServantPositionRestriction, out bool isFixedMyServantPositionAgreement, int svtId, int num) { }

	// RVA: 0x174E370 Offset: 0x174E370 VA: 0x174E370
	public string GetConfirmFixedMyServantPositionRestrictionMessage() { }

	// RVA: 0x174E3EC Offset: 0x174E3EC VA: 0x174E3EC
	public string GetFixedMyServantPositionRestrictionMessage() { }

	// RVA: 0x174E458 Offset: 0x174E458 VA: 0x174E458
	public bool IsFixedMyServantSingleRestriction() { }

	// RVA: 0x174E468 Offset: 0x174E468 VA: 0x174E468
	public int[] GetFixedMyServantSingleSvtIdList() { }

	// RVA: 0x174E480 Offset: 0x174E480 VA: 0x174E480
	public bool GetFixedMyServantSingleRestriction(int svtId, int num) { }

	// RVA: 0x174E4F4 Offset: 0x174E4F4 VA: 0x174E4F4
	public string GetFixedMyServantSingleRestrictionMessage() { }

	// RVA: 0x174E560 Offset: 0x174E560 VA: 0x174E560
	public int GetUserEventDeckNum() { }

	// RVA: 0x174E568 Offset: 0x174E568 VA: 0x174E568
	public bool IsUseEventDeck() { }

	// RVA: 0x174E578 Offset: 0x174E578 VA: 0x174E578
	public int[] GetSvtIdBattleList() { }

	// RVA: 0x174E580 Offset: 0x174E580 VA: 0x174E580
	public int GetTotalCostRestriction() { }

	// RVA: 0x174E594 Offset: 0x174E594 VA: 0x174E594
	public string GetTotalCostRestrictionMessage() { }

	// RVA: 0x174E644 Offset: 0x174E644 VA: 0x174E644
	public int[] GetDialogList() { }

	// RVA: 0x174E8E4 Offset: 0x174E8E4 VA: 0x174E8E4
	public string GetDialogMessage(int n) { }

	// RVA: 0x174E948 Offset: 0x174E948 VA: 0x174E948
	public string GetDialogTargetName(int n) { }

	// RVA: 0x174E9AC Offset: 0x174E9AC VA: 0x174E9AC
	public Restriction.Type GetDialogType(int n) { }

	// RVA: 0x174EA10 Offset: 0x174EA10 VA: 0x174EA10
	public bool GetExplanationMessage(out string message) { }

	// RVA: 0x174EB28 Offset: 0x174EB28 VA: 0x174EB28
	public bool IsSupportOnlyForceBattle() { }

	// RVA: 0x174EB30 Offset: 0x174EB30 VA: 0x174EB30
	public bool IsNoSupportBattle() { }

	// RVA: 0x174EB38 Offset: 0x174EB38 VA: 0x174EB38
	public bool IsFatigure() { }

	// RVA: 0x174EB40 Offset: 0x174EB40 VA: 0x174EB40
	public bool IsNpcMulitpleBattle() { }

	// RVA: 0x174EB48 Offset: 0x174EB48 VA: 0x174EB48
	public bool IsNpcOnlyBattle() { }

	// RVA: 0x174EB50 Offset: 0x174EB50 VA: 0x174EB50
	public bool IsNpcMulitipleOrOnly() { }

	// RVA: 0x174EB70 Offset: 0x174EB70 VA: 0x174EB70
	public bool IsNpcEditablePos() { }

	// RVA: 0x174EB78 Offset: 0x174EB78 VA: 0x174EB78
	public bool IsNotTransitionSupportList() { }

	// RVA: 0x174EB80 Offset: 0x174EB80 VA: 0x174EB80
	public int GetSupportInitIndex() { }

	// RVA: 0x174EB88 Offset: 0x174EB88 VA: 0x174EB88
	public int GetCorrectionIconId(int svtId, bool isFollower) { }

	// RVA: 0x174EC6C Offset: 0x174EC6C VA: 0x174EC6C
	public bool IsConvertOverwriteImage(int svtId) { }

	// RVA: 0x174ED18 Offset: 0x174ED18 VA: 0x174ED18
	public int ConvertOverwriteImageLimitCount(int svtId) { }

	// RVA: 0x174EDF4 Offset: 0x174EDF4 VA: 0x174EDF4
	public int[] ConvertOverwriteImageLimitCounts(int svtId) { }

	// RVA: 0x174EF5C Offset: 0x174EF5C VA: 0x174EF5C
	public int ConvertOverwriteImageLimitCount(UserServantEntity userServantEntity) { }

	// RVA: 0x174F0AC Offset: 0x174F0AC VA: 0x174F0AC
	public string[] GetPartyOrganizationServantSwapExplanationFixedMyServantText() { }

	// RVA: 0x174F404 Offset: 0x174F404 VA: 0x174F404
	public bool IsServantNum() { }

	// RVA: 0x174F414 Offset: 0x174F414 VA: 0x174F414
	public int GetServantNumRestriction() { }

	// RVA: 0x174F41C Offset: 0x174F41C VA: 0x174F41C
	public bool IsServantNumCheckEqual() { }

	// RVA: 0x174F43C Offset: 0x174F43C VA: 0x174F43C
	public string GetServantNumRestrictionMessage() { }

	// RVA: 0x174F588 Offset: 0x174F588 VA: 0x174F588
	public bool IsFirstServantNum() { }

	// RVA: 0x174F654 Offset: 0x174F654 VA: 0x174F654
	public string GetServantNumRestrictionDialogMessage() { }

	// RVA: 0x174F704 Offset: 0x174F704 VA: 0x174F704
	public bool IsServantNumAndFixedMyServantPositionRestriction(int svtId, int num) { }

	// RVA: 0x174F8D8 Offset: 0x174F8D8 VA: 0x174F8D8
	public bool IsMyServantNum() { }

	// RVA: 0x174F8E8 Offset: 0x174F8E8 VA: 0x174F8E8
	public int GetMyServantNumRestriction() { }

	// RVA: 0x174F8F0 Offset: 0x174F8F0 VA: 0x174F8F0
	public string GetMyServantNumRestrictionDialogMessage() { }

	// RVA: 0x174F9A0 Offset: 0x174F9A0 VA: 0x174F9A0
	public string GetFixNpcOnlyRestrictionMessage() { }

	// RVA: 0x174FA0C Offset: 0x174FA0C VA: 0x174FA0C
	public string GetFixNpcMessage() { }

	// RVA: 0x174FA78 Offset: 0x174FA78 VA: 0x174FA78
	public bool CheckMyServantNumRestriction(int myServantNum) { }

	// RVA: 0x174FAA8 Offset: 0x174FAA8 VA: 0x174FAA8
	public bool IsMyServantOrNpcRestriction() { }

	// RVA: 0x174F7E8 Offset: 0x174F7E8 VA: 0x174F7E8
	public bool IsMyServantOrNpcRestriction(int pos) { }

	// RVA: 0x174FB08 Offset: 0x174FB08 VA: 0x174FB08
	public bool IsRestrictionServantIndividuality(int svtId, int limitCount, int dispLimitCount, int pos) { }

	// RVA: 0x174FCA4 Offset: 0x174FCA4 VA: 0x174FCA4
	public string GetRestrictedName(int pos) { }

	// RVA: 0x174FE6C Offset: 0x174FE6C VA: 0x174FE6C
	public string GetMyServantOrNpcRestrictionMessage(int pos, bool haveIndividualityServant) { }

	// RVA: 0x174FF5C Offset: 0x174FF5C VA: 0x174FF5C
	public int[] GetMyServantOrNpcSvtIdList(int index) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF020 Offset: 0xCAF020 VA: 0xCAF020
private sealed class QuestRestrictionInfo.<IsMyServantOrNpcRestriction>c__AnonStorey0 // TypeDefIndex: 7611
{
	// Fields
	internal int pos; // 0x10

	// Methods

	// RVA: 0x1806294 Offset: 0x1806294 VA: 0x1806294
	public void .ctor() { }

	// RVA: 0x180629C Offset: 0x180629C VA: 0x180629C
	internal bool <>m__0(RestrictionEntity x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF030 Offset: 0xCAF030 VA: 0xCAF030
private sealed class QuestRestrictionInfo.<IsRestrictionServantIndividuality>c__AnonStorey1 // TypeDefIndex: 7612
{
	// Fields
	internal int pos; // 0x10

	// Methods

	// RVA: 0x18062E0 Offset: 0x18062E0 VA: 0x18062E0
	public void .ctor() { }

	// RVA: 0x18062E8 Offset: 0x18062E8 VA: 0x18062E8
	internal bool <>m__0(RestrictionEntity x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF040 Offset: 0xCAF040 VA: 0xCAF040
private sealed class QuestRestrictionInfo.<GetRestrictedName>c__AnonStorey2 // TypeDefIndex: 7613
{
	// Fields
	internal QuestRestrictionEntity questRestrictionEntity; // 0x10

	// Methods

	// RVA: 0x1806240 Offset: 0x1806240 VA: 0x1806240
	public void .ctor() { }

	// RVA: 0x1806248 Offset: 0x1806248 VA: 0x1806248
	internal bool <>m__0(RestrictionEntity x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF050 Offset: 0xCAF050 VA: 0xCAF050
private sealed class QuestRestrictionInfo.<GetMyServantOrNpcSvtIdList>c__AnonStorey3 // TypeDefIndex: 7614
{
	// Fields
	internal int index; // 0x10
	internal QuestRestrictionInfo $this; // 0x18

	// Methods

	// RVA: 0x18061A0 Offset: 0x18061A0 VA: 0x18061A0
	public void .ctor() { }

	// RVA: 0x18061A8 Offset: 0x18061A8 VA: 0x18061A8
	internal bool <>m__0(RestrictionEntity x) { }
}

// Namespace: 
public static class RarityRestrictedSkillUtil // TypeDefIndex: 7615
{
	// Methods

	// RVA: 0x181E6CC Offset: 0x181E6CC VA: 0x181E6CC
	public static bool IsDisabled(SkillLvEntity skillLvEntity, ServantEntity servantEntity, int servantRarity) { }

	// RVA: 0x181E798 Offset: 0x181E798 VA: 0x181E798
	private static int GetOverwrittenRarity(ServantEntity servantEntity, int defaultRarity) { }
}

// Namespace: 
public class ServantCharaGraphEXOpenManager // TypeDefIndex: 7616
{
	// Fields
	protected static readonly string SAVE_DATA_VERSION; // 0x0
	protected static Dictionary<int, List<int>> svtCharaGraphEXOpenDict; // 0x8

	// Methods

	// RVA: 0x198A54C Offset: 0x198A54C VA: 0x198A54C
	public void .ctor() { }

	// RVA: 0x198A554 Offset: 0x198A554 VA: 0x198A554
	protected static string GetSaveFileName() { }

	// RVA: 0x198A62C Offset: 0x198A62C VA: 0x198A62C
	public static void DeleteSaveData() { }

	// RVA: 0x198A6B0 Offset: 0x198A6B0 VA: 0x198A6B0
	public static void Initialize() { }

	// RVA: 0x198AC08 Offset: 0x198AC08 VA: 0x198AC08
	public static void ClearSaveDataList() { }

	// RVA: 0x198A70C Offset: 0x198A70C VA: 0x198A70C
	public static bool ReadData() { }

	// RVA: 0x198AC8C Offset: 0x198AC8C VA: 0x198AC8C
	public static bool WriteData() { }

	// RVA: 0x198B18C Offset: 0x198B18C VA: 0x198B18C
	public static bool IsCharaGraphEXOpen(int svtId, int limitCount) { }

	// RVA: 0x198B2D4 Offset: 0x198B2D4 VA: 0x198B2D4
	public static void SetCharaGraphEXOpen(int svtId, int limitCount) { }

	// RVA: 0x198B4D4 Offset: 0x198B4D4 VA: 0x198B4D4
	private static void .cctor() { }
}

// Namespace: 
public class ServantCommentManager // TypeDefIndex: 7617
{
	// Fields
	protected static readonly string SAVE_DATA_OLD_VERSION; // 0x0
	protected static readonly string SAVE_DATA_VERSION; // 0x8
	protected static readonly string SAVE_KEY; // 0x10
	public static readonly string UI_CHANGE_TYPE_KEY; // 0x18
	public static readonly string OVERWIRTE_UI_VERSION_KEY; // 0x20
	protected static readonly string FORCE_READ_NEW_COMMENTS_KEY; // 0x28
	protected static bool isModfiy; // 0x30
	protected static bool isContinueDevice; // 0x31
	protected static List<ServantCommentManager.UserServantCommentOpenInfo> openList; // 0x38

	// Methods

	// RVA: 0x199EDCC Offset: 0x199EDCC VA: 0x199EDCC
	public void .ctor() { }

	// RVA: 0x199EDD4 Offset: 0x199EDD4 VA: 0x199EDD4
	protected static string getSaveFileName() { }

	// RVA: 0x199EEAC Offset: 0x199EEAC VA: 0x199EEAC
	public static void DeleteContinueData() { }

	// RVA: 0x199EF2C Offset: 0x199EF2C VA: 0x199EF2C
	public static void DeleteSaveData() { }

	// RVA: 0x199EFB0 Offset: 0x199EFB0 VA: 0x199EFB0
	public static void CreateContinueDeviceSaveData() { }

	// RVA: 0x199F80C Offset: 0x199F80C VA: 0x199F80C
	public static void Initialize() { }

	// RVA: 0x199F030 Offset: 0x199F030 VA: 0x199F030
	protected static void ClearSaveDataList() { }

	// RVA: 0x19A0104 Offset: 0x19A0104 VA: 0x19A0104
	public static void LoginProcess() { }

	// RVA: 0x19A0544 Offset: 0x19A0544 VA: 0x19A0544
	public static int[] GetClearWarIdList() { }

	// RVA: 0x199F624 Offset: 0x199F624 VA: 0x199F624
	public static void UpdateChapter() { }

	// RVA: 0x199E2A4 Offset: 0x199E2A4 VA: 0x199E2A4
	public static bool IsOpen(int svtId, int svtCommentId, int svtCommentPriority) { }

	// RVA: 0x19A08E4 Offset: 0x19A08E4 VA: 0x19A08E4
	public static void SetOpen(int svtId, int svtCommentId, int svtCommentPriority) { }

	// RVA: 0x19A0C50 Offset: 0x19A0C50 VA: 0x19A0C50
	public static void SetOpen(int svtId, int[] svtCommentIdList, int[] svtCommentPriorityList) { }

