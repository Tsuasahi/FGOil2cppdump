
	// RVA: 0x2B8B4C8 Offset: 0x2B8B4C8 VA: 0x2B8B4C8
	public void EnableRectClipping(Rect rect) { }

	// RVA: 0x2B8B564 Offset: 0x2B8B564 VA: 0x2B8B564
	public void DisableRectClipping() { }

	// RVA: 0x2B8B5D0 Offset: 0x2B8B5D0 VA: 0x2B8B5D0
	public void SetMaterial(Material material, int index) { }

	// RVA: 0x2B8B654 Offset: 0x2B8B654 VA: 0x2B8B654
	public void SetPopMaterial(Material material, int index) { }

	// RVA: 0x2B8B6D8 Offset: 0x2B8B6D8 VA: 0x2B8B6D8
	public void SetTexture(Texture texture) { }

	// RVA: 0x2B8B74C Offset: 0x2B8B74C VA: 0x2B8B74C
	public void SetAlphaTexture(Texture texture) { }

	// RVA: 0x2B8B7C0 Offset: 0x2B8B7C0 VA: 0x2B8B7C0
	public void SetMesh(Mesh mesh) { }

	// RVA: 0x2B8B834 Offset: 0x2B8B834 VA: 0x2B8B834
	public void Clear() { }

	// RVA: 0x2B8B8A0 Offset: 0x2B8B8A0 VA: 0x2B8B8A0
	public void SetMaterial(Material material, Texture texture) { }

	// RVA: 0x2B8B904 Offset: 0x2B8B904 VA: 0x2B8B904
	public static void SplitUIVertexStreams(List<UIVertex> verts, List<Vector3> positions, List<Color32> colors, List<Vector2> uv0S, List<Vector2> uv1S, List<Vector2> uv2S, List<Vector2> uv3S, List<Vector3> normals, List<Vector4> tangents, List<int> indices) { }

	// RVA: 0x2B8BA7C Offset: 0x2B8BA7C VA: 0x2B8BA7C
	public static void CreateUIVertexStream(List<UIVertex> verts, List<Vector3> positions, List<Color32> colors, List<Vector2> uv0S, List<Vector2> uv1S, List<Vector2> uv2S, List<Vector2> uv3S, List<Vector3> normals, List<Vector4> tangents, List<int> indices) { }

	// RVA: 0x2B8BB58 Offset: 0x2B8BB58 VA: 0x2B8BB58
	public static void AddUIVertexStream(List<UIVertex> verts, List<Vector3> positions, List<Color32> colors, List<Vector2> uv0S, List<Vector2> uv1S, List<Vector2> uv2S, List<Vector2> uv3S, List<Vector3> normals, List<Vector4> tangents) { }

	[StaticAccessorAttribute] // RVA: 0xC06DA8 Offset: 0xC06DA8 VA: 0xC06DA8
	// RVA: 0x2B8BA08 Offset: 0x2B8BA08 VA: 0x2B8BA08
	private static void SplitIndicesStreamsInternal(object verts, object indices) { }

	[StaticAccessorAttribute] // RVA: 0xC06DE4 Offset: 0xC06DE4 VA: 0xC06DE4
	// RVA: 0x2B8B93C Offset: 0x2B8B93C VA: 0x2B8B93C
	private static void SplitUIVertexStreamsInternal(object verts, object positions, object colors, object uv0S, object uv1S, object uv2S, object uv3S, object normals, object tangents) { }

	[StaticAccessorAttribute] // RVA: 0xC06E20 Offset: 0xC06E20 VA: 0xC06E20
	// RVA: 0x2B8BA88 Offset: 0x2B8BA88 VA: 0x2B8BA88
	private static void CreateUIVertexStreamInternal(object verts, object positions, object colors, object uv0S, object uv1S, object uv2S, object uv3S, object normals, object tangents, object indices) { }

	// RVA: 0x2B8B3B4 Offset: 0x2B8B3B4 VA: 0x2B8B3B4
	private void SetColor_Injected(ref Color color) { }

	// RVA: 0x2B8B454 Offset: 0x2B8B454 VA: 0x2B8B454
	private void GetColor_Injected(out Color ret) { }

	// RVA: 0x2B8B4F0 Offset: 0x2B8B4F0 VA: 0x2B8B4F0
	private void EnableRectClipping_Injected(ref Rect rect) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC06BE0 Offset: 0xC06BE0 VA: 0xC06BE0
[NativeHeaderAttribute] // RVA: 0xC06BE0 Offset: 0xC06BE0 VA: 0xC06BE0
[NativeHeaderAttribute] // RVA: 0xC06BE0 Offset: 0xC06BE0 VA: 0xC06BE0
[NativeHeaderAttribute] // RVA: 0xC06BE0 Offset: 0xC06BE0 VA: 0xC06BE0
[StaticAccessorAttribute] // RVA: 0xC06BE0 Offset: 0xC06BE0 VA: 0xC06BE0
public sealed class RectTransformUtility // TypeDefIndex: 2823
{
	// Fields
	private static readonly Vector3[] s_Corners; // 0x0

	// Methods

	// RVA: 0x2B8BB64 Offset: 0x2B8BB64 VA: 0x2B8BB64
	public static bool RectangleContainsScreenPoint(RectTransform rect, Vector2 screenPoint, Camera cam) { }

	// RVA: 0x2B8BC74 Offset: 0x2B8BC74 VA: 0x2B8BC74
	public static bool ScreenPointToWorldPointInRectangle(RectTransform rect, Vector2 screenPoint, Camera cam, out Vector3 worldPoint) { }

	// RVA: 0x2B8C060 Offset: 0x2B8C060 VA: 0x2B8C060
	public static bool ScreenPointToLocalPointInRectangle(RectTransform rect, Vector2 screenPoint, Camera cam, out Vector2 localPoint) { }

	// RVA: 0x2B8BEA4 Offset: 0x2B8BEA4 VA: 0x2B8BEA4
	public static Ray ScreenPointToRay(Camera cam, Vector2 screenPos) { }

	// RVA: 0x2B8C1B4 Offset: 0x2B8C1B4 VA: 0x2B8C1B4
	public static Vector2 WorldToScreenPoint(Camera cam, Vector3 worldPoint) { }

	// RVA: 0x2B8C2C8 Offset: 0x2B8C2C8 VA: 0x2B8C2C8
	public static void FlipLayoutOnAxis(RectTransform rect, int axis, bool keepPositioning, bool recursive) { }

	// RVA: 0x2B8C604 Offset: 0x2B8C604 VA: 0x2B8C604
	public static void FlipLayoutAxes(RectTransform rect, bool keepPositioning, bool recursive) { }

	// RVA: 0x2B8C9A4 Offset: 0x2B8C9A4 VA: 0x2B8C9A4
	private static Vector2 GetTransposed(Vector2 input) { }

	// RVA: 0x2B8C9DC Offset: 0x2B8C9DC VA: 0x2B8C9DC
	public static Vector2 PixelAdjustPoint(Vector2 point, Transform elementTransform, Canvas canvas) { }

	// RVA: 0x2B8CAFC Offset: 0x2B8CAFC VA: 0x2B8CAFC
	public static Rect PixelAdjustRect(RectTransform rectTransform, Canvas canvas) { }

	// RVA: 0x2B8BBF0 Offset: 0x2B8BBF0 VA: 0x2B8BBF0
	private static bool PointInRectangle(Vector2 screenPoint, RectTransform rect, Camera cam) { }

	// RVA: 0x2B8CC94 Offset: 0x2B8CC94 VA: 0x2B8CC94
	private static void .cctor() { }

	// RVA: 0x2B8CA70 Offset: 0x2B8CA70 VA: 0x2B8CA70
	private static void PixelAdjustPoint_Injected(ref Vector2 point, Transform elementTransform, Canvas canvas, out Vector2 ret) { }

	// RVA: 0x2B8CB8C Offset: 0x2B8CB8C VA: 0x2B8CB8C
	private static void PixelAdjustRect_Injected(RectTransform rectTransform, Canvas canvas, out Rect ret) { }

	// RVA: 0x2B8CC10 Offset: 0x2B8CC10 VA: 0x2B8CC10
	private static bool PointInRectangle_Injected(ref Vector2 screenPoint, RectTransform rect, Camera cam) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2824
{}

// Namespace: UnityEngine.Analytics
[NativeHeaderAttribute] // RVA: 0xC080DC Offset: 0xC080DC VA: 0xC080DC
[NativeHeaderAttribute] // RVA: 0xC080DC Offset: 0xC080DC VA: 0xC080DC
[RequiredByNativeCodeAttribute] // RVA: 0xC080DC Offset: 0xC080DC VA: 0xC080DC
internal class ContinuousEvent // TypeDefIndex: 2825
{}

// Namespace: UnityEngine.Analytics
[RequiredByNativeCodeAttribute] // RVA: 0xC0814C Offset: 0xC0814C VA: 0xC0814C
public enum AnalyticsSessionState // TypeDefIndex: 2826
{
	// Fields
	public int value__; // 0x0
	public const AnalyticsSessionState kSessionStopped = 0;
	public const AnalyticsSessionState kSessionStarted = 1;
	public const AnalyticsSessionState kSessionPaused = 2;
	public const AnalyticsSessionState kSessionResumed = 3;
}

// Namespace: UnityEngine.Analytics
[NativeHeaderAttribute] // RVA: 0xC0815C Offset: 0xC0815C VA: 0xC0815C
[NativeHeaderAttribute] // RVA: 0xC0815C Offset: 0xC0815C VA: 0xC0815C
[RequiredByNativeCodeAttribute] // RVA: 0xC0815C Offset: 0xC0815C VA: 0xC0815C
public static class AnalyticsSessionInfo // TypeDefIndex: 2827
{
	// Fields
	[DebuggerBrowsableAttribute] // RVA: 0xC08334 Offset: 0xC08334 VA: 0xC08334
	[CompilerGeneratedAttribute] // RVA: 0xC08334 Offset: 0xC08334 VA: 0xC08334
	private static AnalyticsSessionInfo.SessionStateChanged sessionStateChanged; // 0x0

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC08460 Offset: 0xC08460 VA: 0xC08460
	// RVA: 0x2B91F30 Offset: 0x2B91F30 VA: 0x2B91F30
	internal static void CallSessionStateChanged(AnalyticsSessionState sessionState, long sessionId, long sessionElapsedTime, bool sessionChanged) { }
}

// Namespace: 
public sealed class AnalyticsSessionInfo.SessionStateChanged : MulticastDelegate // TypeDefIndex: 2828
{
	// Methods

	// RVA: 0x2B92250 Offset: 0x2B92250 VA: 0x2B92250
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2B91FCC Offset: 0x2B91FCC VA: 0x2B91FCC Slot: 11
	public virtual void Invoke(AnalyticsSessionState sessionState, long sessionId, long sessionElapsedTime, bool sessionChanged) { }

	// RVA: 0x2B92260 Offset: 0x2B92260 VA: 0x2B92260 Slot: 12
	public virtual IAsyncResult BeginInvoke(AnalyticsSessionState sessionState, long sessionId, long sessionElapsedTime, bool sessionChanged, AsyncCallback callback, object object) { }

	// RVA: 0x2B92348 Offset: 0x2B92348 VA: 0x2B92348 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine.Analytics
[NativeHeaderAttribute] // RVA: 0xC081CC Offset: 0xC081CC VA: 0xC081CC
[NativeHeaderAttribute] // RVA: 0xC081CC Offset: 0xC081CC VA: 0xC081CC
public static class Analytics // TypeDefIndex: 2829
{
	// Properties
	public static bool initializeOnStartup { set; }
	[StaticAccessorAttribute] // RVA: 0xC08674 Offset: 0xC08674 VA: 0xC08674
	private static bool initializeOnStartupInternal { set; }
	[StaticAccessorAttribute] // RVA: 0xC086B0 Offset: 0xC086B0 VA: 0xC086B0
	private static bool enabledInternal { set; }
	[StaticAccessorAttribute] // RVA: 0xC086EC Offset: 0xC086EC VA: 0xC086EC
	private static bool limitUserTrackingInternal { set; }
	[StaticAccessorAttribute] // RVA: 0xC08728 Offset: 0xC08728 VA: 0xC08728
	private static bool deviceStatsEnabledInternal { set; }
	public static bool limitUserTracking { set; }
	public static bool deviceStatsEnabled { set; }
	public static bool enabled { set; }

	// Methods

	// RVA: 0x2B90B90 Offset: 0x2B90B90 VA: 0x2B90B90
	public static void set_initializeOnStartup(bool value) { }

	[NativeMethodAttribute] // RVA: 0xC08470 Offset: 0xC08470 VA: 0xC08470
	// RVA: 0x2B90C1C Offset: 0x2B90C1C VA: 0x2B90C1C
	private static void set_initializeOnStartupInternal(bool value) { }

	[ThreadSafeAttribute] // RVA: 0xC084A8 Offset: 0xC084A8 VA: 0xC084A8
	// RVA: 0x2B90BC4 Offset: 0x2B90BC4 VA: 0x2B90BC4
	private static bool IsInitialized() { }

	[NativeMethodAttribute] // RVA: 0xC084B8 Offset: 0xC084B8 VA: 0xC084B8
	// RVA: 0x2B90C88 Offset: 0x2B90C88 VA: 0x2B90C88
	private static void set_enabledInternal(bool value) { }

	[NativeMethodAttribute] // RVA: 0xC084F0 Offset: 0xC084F0 VA: 0xC084F0
	// RVA: 0x2B90CF4 Offset: 0x2B90CF4 VA: 0x2B90CF4
	private static void set_limitUserTrackingInternal(bool value) { }

	[NativeMethodAttribute] // RVA: 0xC08528 Offset: 0xC08528 VA: 0xC08528
	// RVA: 0x2B90D60 Offset: 0x2B90D60 VA: 0x2B90D60
	private static void set_deviceStatsEnabledInternal(bool value) { }

	[StaticAccessorAttribute] // RVA: 0xC08560 Offset: 0xC08560 VA: 0xC08560
	// RVA: 0x2B90DCC Offset: 0x2B90DCC VA: 0x2B90DCC
	private static AnalyticsResult Transaction(string productId, double amount, string currency, string receiptPurchaseData, string signature, bool usingIAPService) { }

	[StaticAccessorAttribute] // RVA: 0xC0859C Offset: 0xC0859C VA: 0xC0859C
	// RVA: 0x2B90E70 Offset: 0x2B90E70 VA: 0x2B90E70
	private static AnalyticsResult SendCustomEventName(string customEventName) { }

	[StaticAccessorAttribute] // RVA: 0xC085D8 Offset: 0xC085D8 VA: 0xC085D8
	// RVA: 0x2B90EDC Offset: 0x2B90EDC VA: 0x2B90EDC
	private static AnalyticsResult SendCustomEvent(CustomEventData eventData) { }

	// RVA: 0x2B90F48 Offset: 0x2B90F48 VA: 0x2B90F48
	public static void set_limitUserTracking(bool value) { }

	// RVA: 0x2B90F7C Offset: 0x2B90F7C VA: 0x2B90F7C
	public static void set_deviceStatsEnabled(bool value) { }

	// RVA: 0x2B90FB0 Offset: 0x2B90FB0 VA: 0x2B90FB0
	public static void set_enabled(bool value) { }

	// RVA: 0x2B90FE4 Offset: 0x2B90FE4 VA: 0x2B90FE4
	public static AnalyticsResult Transaction(string productId, Decimal amount, string currency, string receiptPurchaseData, string signature, bool usingIAPService) { }

	// RVA: 0x2B911CC Offset: 0x2B911CC VA: 0x2B911CC
	public static AnalyticsResult CustomEvent(string customEventName, IDictionary<string, object> eventData) { }
}

// Namespace: UnityEngine.Analytics
public enum AnalyticsResult // TypeDefIndex: 2830
{
	// Fields
	public int value__; // 0x0
	public const AnalyticsResult Ok = 0;
	public const AnalyticsResult NotInitialized = 1;
	public const AnalyticsResult AnalyticsDisabled = 2;
	public const AnalyticsResult TooManyItems = 3;
	public const AnalyticsResult SizeLimitReached = 4;
	public const AnalyticsResult TooManyRequests = 5;
	public const AnalyticsResult InvalidData = 6;
	public const AnalyticsResult UnsupportedPlatform = 7;
}

// Namespace: UnityEngine.Analytics
[NativeHeaderAttribute] // RVA: 0xC0822C Offset: 0xC0822C VA: 0xC0822C
internal class CustomEventData : IDisposable // TypeDefIndex: 2831
{
	// Fields
	internal IntPtr m_Ptr; // 0x10

	// Methods

	// RVA: 0x2B91328 Offset: 0x2B91328 VA: 0x2B91328
	public void .ctor(string name) { }

	// RVA: 0x2B923C8 Offset: 0x2B923C8 VA: 0x2B923C8 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x2B9243C Offset: 0x2B9243C VA: 0x2B9243C
	private void Destroy() { }

	// RVA: 0x2B91F08 Offset: 0x2B91F08 VA: 0x2B91F08 Slot: 4
	public void Dispose() { }

	// RVA: 0x2B92354 Offset: 0x2B92354 VA: 0x2B92354
	internal static IntPtr Internal_Create(CustomEventData ced, string name) { }

	[ThreadSafeAttribute] // RVA: 0xC08614 Offset: 0xC08614 VA: 0xC08614
	// RVA: 0x2B9249C Offset: 0x2B9249C VA: 0x2B9249C
	internal static void Internal_Destroy(IntPtr ptr) { }

	// RVA: 0x2B92508 Offset: 0x2B92508 VA: 0x2B92508
	public bool AddString(string key, string value) { }

	// RVA: 0x2B9258C Offset: 0x2B9258C VA: 0x2B9258C
	public bool AddInt32(string key, int value) { }

	// RVA: 0x2B92610 Offset: 0x2B92610 VA: 0x2B92610
	public bool AddUInt32(string key, uint value) { }

	// RVA: 0x2B92694 Offset: 0x2B92694 VA: 0x2B92694
	public bool AddInt64(string key, long value) { }

	// RVA: 0x2B92718 Offset: 0x2B92718 VA: 0x2B92718
	public bool AddUInt64(string key, ulong value) { }

	// RVA: 0x2B9279C Offset: 0x2B9279C VA: 0x2B9279C
	public bool AddBool(string key, bool value) { }

	// RVA: 0x2B92820 Offset: 0x2B92820 VA: 0x2B92820
	public bool AddDouble(string key, double value) { }

	// RVA: 0x2B91360 Offset: 0x2B91360 VA: 0x2B91360
	public bool AddDictionary(IDictionary<string, object> eventData) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC08264 Offset: 0xC08264 VA: 0xC08264
[NativeHeaderAttribute] // RVA: 0xC08264 Offset: 0xC08264 VA: 0xC08264
public static class RemoteSettings // TypeDefIndex: 2832
{
	// Fields
	[DebuggerBrowsableAttribute] // RVA: 0xC08370 Offset: 0xC08370 VA: 0xC08370
	[CompilerGeneratedAttribute] // RVA: 0xC08370 Offset: 0xC08370 VA: 0xC08370
	private static RemoteSettings.UpdatedEventHandler Updated; // 0x0
	[DebuggerBrowsableAttribute] // RVA: 0xC083AC Offset: 0xC083AC VA: 0xC083AC
	[CompilerGeneratedAttribute] // RVA: 0xC083AC Offset: 0xC083AC VA: 0xC083AC
	private static Action BeforeFetchFromServer; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC083E8 Offset: 0xC083E8 VA: 0xC083E8
	[DebuggerBrowsableAttribute] // RVA: 0xC083E8 Offset: 0xC083E8 VA: 0xC083E8
	private static Action<bool, bool, int> Completed; // 0x10

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC08624 Offset: 0xC08624 VA: 0xC08624
	// RVA: 0x2B92A94 Offset: 0x2B92A94 VA: 0x2B92A94
	internal static void RemoteSettingsUpdated(bool wasLastUpdatedFromServer) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC08634 Offset: 0xC08634 VA: 0xC08634
	// RVA: 0x2B92CF8 Offset: 0x2B92CF8 VA: 0x2B92CF8
	internal static void RemoteSettingsBeforeFetchFromServer() { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC08644 Offset: 0xC08644 VA: 0xC08644
	// RVA: 0x2B92D5C Offset: 0x2B92D5C VA: 0x2B92D5C
	internal static void RemoteSettingsUpdateCompleted(bool wasLastUpdatedFromServer, bool settingsChanged, int response) { }
}

// Namespace: 
public sealed class RemoteSettings.UpdatedEventHandler : MulticastDelegate // TypeDefIndex: 2833
{
	// Methods

	// RVA: 0x2B92DEC Offset: 0x2B92DEC VA: 0x2B92DEC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2B92AF8 Offset: 0x2B92AF8 VA: 0x2B92AF8 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x2B92DFC Offset: 0x2B92DFC VA: 0x2B92DFC Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x2B92E30 Offset: 0x2B92E30 VA: 0x2B92E30 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC082C4 Offset: 0xC082C4 VA: 0xC082C4
[ExcludeFromDocsAttribute] // RVA: 0xC082C4 Offset: 0xC082C4 VA: 0xC082C4
[NativeHeaderAttribute] // RVA: 0xC082C4 Offset: 0xC082C4 VA: 0xC082C4
public class RemoteConfigSettings : IDisposable // TypeDefIndex: 2834
{
	// Fields
	internal IntPtr m_Ptr; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC08424 Offset: 0xC08424 VA: 0xC08424
	[DebuggerBrowsableAttribute] // RVA: 0xC08424 Offset: 0xC08424 VA: 0xC08424
	private Action<bool> Updated; // 0x18

	// Methods

	// RVA: 0x2B928AC Offset: 0x2B928AC VA: 0x2B928AC Slot: 1
	protected override void Finalize() { }

	// RVA: 0x2B92920 Offset: 0x2B92920 VA: 0x2B92920
	private void Destroy() { }

	// RVA: 0x2B929EC Offset: 0x2B929EC VA: 0x2B929EC Slot: 4
	public void Dispose() { }

	[ThreadSafeAttribute] // RVA: 0xC08654 Offset: 0xC08654 VA: 0xC08654
	// RVA: 0x2B92980 Offset: 0x2B92980 VA: 0x2B92980
	internal static void Internal_Destroy(IntPtr ptr) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC08664 Offset: 0xC08664 VA: 0xC08664
	// RVA: 0x2B92A14 Offset: 0x2B92A14 VA: 0x2B92A14
	internal static void RemoteConfigSettingsUpdated(RemoteConfigSettings rcs, bool wasLastUpdatedFromServer) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2835
{}

// Namespace: UnityEngine.Networking
public static class UnityWebRequestMultimedia // TypeDefIndex: 2836
{
	// Methods

	// RVA: 0x2B998A8 Offset: 0x2B998A8 VA: 0x2B998A8
	public static UnityWebRequest GetAudioClip(string uri, AudioType audioType) { }
}

// Namespace: UnityEngine.Networking
[NativeHeaderAttribute] // RVA: 0xC09864 Offset: 0xC09864 VA: 0xC09864
public sealed class DownloadHandlerAudioClip : DownloadHandler // TypeDefIndex: 2837
{
	// Properties
	[NativeThrowsAttribute] // RVA: 0xC0989C Offset: 0xC0989C VA: 0xC0989C
	public AudioClip audioClip { get; }

	// Methods

	// RVA: 0x2B996D0 Offset: 0x2B996D0 VA: 0x2B996D0
	public void .ctor(string url, AudioType audioType) { }

	// RVA: 0x2B9973C Offset: 0x2B9973C VA: 0x2B9973C
	private static IntPtr Create(DownloadHandlerAudioClip obj, string url, AudioType audioType) { }

	// RVA: 0x2B99718 Offset: 0x2B99718 VA: 0x2B99718
	private void InternalCreateAudioClip(string url, AudioType audioType) { }

	// RVA: 0x2B997C0 Offset: 0x2B997C0 VA: 0x2B997C0 Slot: 5
	protected override byte[] GetData() { }

	// RVA: 0x2B997C8 Offset: 0x2B997C8 VA: 0x2B997C8 Slot: 6
	protected override string GetText() { }

	// RVA: 0x2B9983C Offset: 0x2B9983C VA: 0x2B9983C
	public AudioClip get_audioClip() { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2838
{}

// Namespace: UnityEngine.Networking
public static class UnityWebRequestTexture // TypeDefIndex: 2839
{
	// Methods

	// RVA: 0x2B99BC0 Offset: 0x2B99BC0 VA: 0x2B99BC0
	public static UnityWebRequest GetTexture(string uri) { }

	// RVA: 0x2B99BC8 Offset: 0x2B99BC8 VA: 0x2B99BC8
	public static UnityWebRequest GetTexture(string uri, bool nonReadable) { }
}

// Namespace: UnityEngine.Networking
[NativeHeaderAttribute] // RVA: 0xC0A9AC Offset: 0xC0A9AC VA: 0xC0A9AC
public sealed class DownloadHandlerTexture : DownloadHandler // TypeDefIndex: 2840
{
	// Fields
	private Texture2D mTexture; // 0x18
	private bool mHasTexture; // 0x20
	private bool mNonReadable; // 0x21

	// Properties
	public Texture2D texture { get; }

	// Methods

	// RVA: 0x2B9995C Offset: 0x2B9995C VA: 0x2B9995C
	public void .ctor(bool readable) { }

	// RVA: 0x2B999C8 Offset: 0x2B999C8 VA: 0x2B999C8
	private static IntPtr Create(DownloadHandlerTexture obj, bool readable) { }

	// RVA: 0x2B999A0 Offset: 0x2B999A0 VA: 0x2B999A0
	private void InternalCreateTexture(bool readable) { }

	// RVA: 0x2B99A3C Offset: 0x2B99A3C VA: 0x2B99A3C Slot: 5
	protected override byte[] GetData() { }

	// RVA: 0x2B99A44 Offset: 0x2B99A44 VA: 0x2B99A44
	public Texture2D get_texture() { }

	// RVA: 0x2B99A48 Offset: 0x2B99A48 VA: 0x2B99A48
	private Texture2D InternalGetTexture() { }

	[NativeThrowsAttribute] // RVA: 0xC0A9E4 Offset: 0xC0A9E4 VA: 0xC0A9E4
	// RVA: 0x2B99B54 Offset: 0x2B99B54 VA: 0x2B99B54
	private Texture2D InternalGetTextureNative() { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2841
{}

// Namespace: UnityEngine
[ObsoleteAttribute] // RVA: 0xC0BAF4 Offset: 0xC0BAF4 VA: 0xC0BAF4
public class WWW : CustomYieldInstruction, IDisposable // TypeDefIndex: 2842
{
	// Fields
	private UnityWebRequest _uwr; // 0x10

	// Properties
	public string error { get; }
	public bool isDone { get; }
	public string text { get; }
	public string url { get; }
	public override bool keepWaiting { get; }

	// Methods

	// RVA: 0x2B98B84 Offset: 0x2B98B84 VA: 0x2B98B84
	public void .ctor(string url) { }

	// RVA: 0x2B98BD0 Offset: 0x2B98BD0 VA: 0x2B98BD0
	public void .ctor(string url, byte[] postData) { }

	// RVA: 0x2B98D30 Offset: 0x2B98D30 VA: 0x2B98D30
	public static string UnEscapeURL(string s) { }

	// RVA: 0x2B98DA4 Offset: 0x2B98DA4 VA: 0x2B98DA4
	public static string UnEscapeURL(string s, Encoding e) { }

	// RVA: 0x2B98DAC Offset: 0x2B98DAC VA: 0x2B98DAC
	public string get_error() { }

	// RVA: 0x2B98F28 Offset: 0x2B98F28 VA: 0x2B98F28
	public bool get_isDone() { }

	// RVA: 0x2B98F58 Offset: 0x2B98F58 VA: 0x2B98F58
	public string get_text() { }

	// RVA: 0x2B990F4 Offset: 0x2B990F4 VA: 0x2B990F4
	public string get_url() { }

	// RVA: 0x2B99124 Offset: 0x2B99124 VA: 0x2B99124 Slot: 7
	public override bool get_keepWaiting() { }

	// RVA: 0x2B99154 Offset: 0x2B99154 VA: 0x2B99154 Slot: 8
	public void Dispose() { }

	// RVA: 0x2B99000 Offset: 0x2B99000 VA: 0x2B99000
	private bool WaitUntilDoneIfPossible() { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2843
{}

// Namespace: UnityEngine.Video
[RequiredByNativeCodeAttribute] // RVA: 0xC0CC3C Offset: 0xC0CC3C VA: 0xC0CC3C
[NativeHeaderAttribute] // RVA: 0xC0CC3C Offset: 0xC0CC3C VA: 0xC0CC3C
public sealed class VideoClip : Object // TypeDefIndex: 2844
{}

// Namespace: UnityEngine.Experimental.Video
[NativeHeaderAttribute] // RVA: 0xC0CC88 Offset: 0xC0CC88 VA: 0xC0CC88
[RequiredByNativeCodeAttribute] // RVA: 0xC0CC88 Offset: 0xC0CC88 VA: 0xC0CC88
[StaticAccessorAttribute] // RVA: 0xC0CC88 Offset: 0xC0CC88 VA: 0xC0CC88
[NativeHeaderAttribute] // RVA: 0xC0CC88 Offset: 0xC0CC88 VA: 0xC0CC88
[NativeHeaderAttribute] // RVA: 0xC0CC88 Offset: 0xC0CC88 VA: 0xC0CC88
[NativeHeaderAttribute] // RVA: 0xC0CC88 Offset: 0xC0CC88 VA: 0xC0CC88
public struct VideoClipPlayable : IPlayable, IEquatable<VideoClipPlayable> // TypeDefIndex: 2845
{
	// Fields
	private PlayableHandle m_Handle; // 0x0

	// Methods

	// RVA: 0xD7BB98 Offset: 0xD7BB98 VA: 0xD7BB98 Slot: 4
	public PlayableHandle GetHandle() { }

	// RVA: 0xD7BBA4 Offset: 0xD7BBA4 VA: 0xD7BBA4 Slot: 5
	public bool Equals(VideoClipPlayable other) { }
}

// Namespace: UnityEngine.Video
[RequiredByNativeCodeAttribute] // RVA: 0xC0CD68 Offset: 0xC0CD68 VA: 0xC0CD68
public enum VideoRenderMode // TypeDefIndex: 2846
{
	// Fields
	public int value__; // 0x0
	public const VideoRenderMode CameraFarPlane = 0;
	public const VideoRenderMode CameraNearPlane = 1;
	public const VideoRenderMode RenderTexture = 2;
	public const VideoRenderMode MaterialOverride = 3;
	public const VideoRenderMode APIOnly = 4;
}

// Namespace: UnityEngine.Video
[RequiredByNativeCodeAttribute] // RVA: 0xC0CD78 Offset: 0xC0CD78 VA: 0xC0CD78
public enum Video3DLayout // TypeDefIndex: 2847
{
	// Fields
	public int value__; // 0x0
	public const Video3DLayout No3D = 0;
	public const Video3DLayout SideBySide3D = 1;
	public const Video3DLayout OverUnder3D = 2;
}

// Namespace: UnityEngine.Video
[RequiredByNativeCodeAttribute] // RVA: 0xC0CD88 Offset: 0xC0CD88 VA: 0xC0CD88
public enum VideoAspectRatio // TypeDefIndex: 2848
{
	// Fields
	public int value__; // 0x0
	public const VideoAspectRatio NoScaling = 0;
	public const VideoAspectRatio FitVertically = 1;
	public const VideoAspectRatio FitHorizontally = 2;
	public const VideoAspectRatio FitInside = 3;
	public const VideoAspectRatio FitOutside = 4;
	public const VideoAspectRatio Stretch = 5;
}

// Namespace: UnityEngine.Video
[RequiredByNativeCodeAttribute] // RVA: 0xC0CD98 Offset: 0xC0CD98 VA: 0xC0CD98
public enum VideoTimeSource // TypeDefIndex: 2849
{
	// Fields
	public int value__; // 0x0
	public const VideoTimeSource AudioDSPTimeSource = 0;
	public const VideoTimeSource GameTimeSource = 1;
}

// Namespace: UnityEngine.Video
[RequiredByNativeCodeAttribute] // RVA: 0xC0CDA8 Offset: 0xC0CDA8 VA: 0xC0CDA8
public enum VideoTimeReference // TypeDefIndex: 2850
{
	// Fields
	public int value__; // 0x0
	public const VideoTimeReference Freerun = 0;
	public const VideoTimeReference InternalTime = 1;
	public const VideoTimeReference ExternalTime = 2;
}

// Namespace: UnityEngine.Video
[RequiredByNativeCodeAttribute] // RVA: 0xC0CDB8 Offset: 0xC0CDB8 VA: 0xC0CDB8
public enum VideoSource // TypeDefIndex: 2851
{
	// Fields
	public int value__; // 0x0
	public const VideoSource VideoClip = 0;
	public const VideoSource Url = 1;
}

// Namespace: UnityEngine.Video
[RequiredByNativeCodeAttribute] // RVA: 0xC0CDC8 Offset: 0xC0CDC8 VA: 0xC0CDC8
public enum VideoAudioOutputMode // TypeDefIndex: 2852
{
	// Fields
	public int value__; // 0x0
	public const VideoAudioOutputMode None = 0;
	public const VideoAudioOutputMode AudioSource = 1;
	public const VideoAudioOutputMode Direct = 2;
	public const VideoAudioOutputMode APIOnly = 3;
}

// Namespace: UnityEngine.Video
[NativeHeaderAttribute] // RVA: 0xC0CDD8 Offset: 0xC0CDD8 VA: 0xC0CDD8
[RequireComponent] // RVA: 0xC0CDD8 Offset: 0xC0CDD8 VA: 0xC0CDD8
[RequiredByNativeCodeAttribute] // RVA: 0xC0CDD8 Offset: 0xC0CDD8 VA: 0xC0CDD8
public sealed class VideoPlayer : Behaviour // TypeDefIndex: 2853
{
	// Fields
	[DebuggerBrowsableAttribute] // RVA: 0xC0CE70 Offset: 0xC0CE70 VA: 0xC0CE70
	[CompilerGeneratedAttribute] // RVA: 0xC0CE70 Offset: 0xC0CE70 VA: 0xC0CE70
	private VideoPlayer.EventHandler prepareCompleted; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC0CEAC Offset: 0xC0CEAC VA: 0xC0CEAC
	[DebuggerBrowsableAttribute] // RVA: 0xC0CEAC Offset: 0xC0CEAC VA: 0xC0CEAC
	private VideoPlayer.EventHandler loopPointReached; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC0CEE8 Offset: 0xC0CEE8 VA: 0xC0CEE8
	[DebuggerBrowsableAttribute] // RVA: 0xC0CEE8 Offset: 0xC0CEE8 VA: 0xC0CEE8
	private VideoPlayer.EventHandler started; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC0CF24 Offset: 0xC0CF24 VA: 0xC0CF24
	[DebuggerBrowsableAttribute] // RVA: 0xC0CF24 Offset: 0xC0CF24 VA: 0xC0CF24
	private VideoPlayer.EventHandler frameDropped; // 0x30
	[DebuggerBrowsableAttribute] // RVA: 0xC0CF60 Offset: 0xC0CF60 VA: 0xC0CF60
	[CompilerGeneratedAttribute] // RVA: 0xC0CF60 Offset: 0xC0CF60 VA: 0xC0CF60
	private VideoPlayer.ErrorEventHandler errorReceived; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC0CF9C Offset: 0xC0CF9C VA: 0xC0CF9C
	[DebuggerBrowsableAttribute] // RVA: 0xC0CF9C Offset: 0xC0CF9C VA: 0xC0CF9C
	private VideoPlayer.EventHandler seekCompleted; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC0CFD8 Offset: 0xC0CFD8 VA: 0xC0CFD8
	[DebuggerBrowsableAttribute] // RVA: 0xC0CFD8 Offset: 0xC0CFD8 VA: 0xC0CFD8
	private VideoPlayer.TimeEventHandler clockResyncOccurred; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC0D014 Offset: 0xC0D014 VA: 0xC0D014
	[DebuggerBrowsableAttribute] // RVA: 0xC0D014 Offset: 0xC0D014 VA: 0xC0D014
	private VideoPlayer.FrameReadyEventHandler frameReady; // 0x50

	// Properties
	public VideoSource source { set; }
	[NativeNameAttribute] // RVA: 0xC0D140 Offset: 0xC0D140 VA: 0xC0D140
	public string url { get; set; }
	public VideoRenderMode renderMode { set; }
	[NativeHeaderAttribute] // RVA: 0xC0D178 Offset: 0xC0D178 VA: 0xC0D178
	public Camera targetCamera { set; }
	public VideoAspectRatio aspectRatio { set; }
	public bool isPrepared { get; }
	public bool playOnAwake { set; }
	public bool isPlaying { get; }
	public VideoAudioOutputMode audioOutputMode { set; }

	// Methods

	// RVA: 0x2B95E38 Offset: 0x2B95E38 VA: 0x2B95E38
	public void set_source(VideoSource value) { }

	// RVA: 0x2B95EAC Offset: 0x2B95EAC VA: 0x2B95EAC
	public string get_url() { }

	// RVA: 0x2B95F18 Offset: 0x2B95F18 VA: 0x2B95F18
	public void set_url(string value) { }

	// RVA: 0x2B95F8C Offset: 0x2B95F8C VA: 0x2B95F8C
	public void set_renderMode(VideoRenderMode value) { }

	// RVA: 0x2B96000 Offset: 0x2B96000 VA: 0x2B96000
	public void set_targetCamera(Camera value) { }

	// RVA: 0x2B96074 Offset: 0x2B96074 VA: 0x2B96074
	public void set_aspectRatio(VideoAspectRatio value) { }

	// RVA: 0x2B960E8 Offset: 0x2B960E8 VA: 0x2B960E8
	public void Prepare() { }

	[NativeNameAttribute] // RVA: 0xC0D050 Offset: 0xC0D050 VA: 0xC0D050
	// RVA: 0x2B96154 Offset: 0x2B96154 VA: 0x2B96154
	public bool get_isPrepared() { }

	// RVA: 0x2B961C0 Offset: 0x2B961C0 VA: 0x2B961C0
	public void set_playOnAwake(bool value) { }

	// RVA: 0x2B96234 Offset: 0x2B96234 VA: 0x2B96234
	public void Play() { }

	// RVA: 0x2B962A0 Offset: 0x2B962A0 VA: 0x2B962A0
	public void Stop() { }

	[NativeNameAttribute] // RVA: 0xC0D088 Offset: 0xC0D088 VA: 0xC0D088
	// RVA: 0x2B9630C Offset: 0x2B9630C VA: 0x2B9630C
	public bool get_isPlaying() { }

	// RVA: 0x2B96378 Offset: 0x2B96378 VA: 0x2B96378
	public void set_audioOutputMode(VideoAudioOutputMode value) { }

	// RVA: 0x2B963EC Offset: 0x2B963EC VA: 0x2B963EC
	public void SetDirectAudioVolume(ushort trackIndex, float volume) { }

	// RVA: 0x2B96478 Offset: 0x2B96478 VA: 0x2B96478
	public void add_errorReceived(VideoPlayer.ErrorEventHandler value) { }

	// RVA: 0x2B96564 Offset: 0x2B96564 VA: 0x2B96564
	public void remove_errorReceived(VideoPlayer.ErrorEventHandler value) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC0D0C0 Offset: 0xC0D0C0 VA: 0xC0D0C0
	// RVA: 0x2B96650 Offset: 0x2B96650 VA: 0x2B96650
	private static void InvokePrepareCompletedCallback_Internal(VideoPlayer source) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC0D0D0 Offset: 0xC0D0D0 VA: 0xC0D0D0
	// RVA: 0x2B96A30 Offset: 0x2B96A30 VA: 0x2B96A30
	private static void InvokeFrameReadyCallback_Internal(VideoPlayer source, long frameIdx) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC0D0E0 Offset: 0xC0D0E0 VA: 0xC0D0E0
	// RVA: 0x2B96E38 Offset: 0x2B96E38 VA: 0x2B96E38
	private static void InvokeLoopPointReachedCallback_Internal(VideoPlayer source) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC0D0F0 Offset: 0xC0D0F0 VA: 0xC0D0F0
	// RVA: 0x2B96E78 Offset: 0x2B96E78 VA: 0x2B96E78
	private static void InvokeStartedCallback_Internal(VideoPlayer source) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC0D100 Offset: 0xC0D100 VA: 0xC0D100
	// RVA: 0x2B96EB8 Offset: 0x2B96EB8 VA: 0x2B96EB8
	private static void InvokeFrameDroppedCallback_Internal(VideoPlayer source) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC0D110 Offset: 0xC0D110 VA: 0xC0D110
	// RVA: 0x2B96EF8 Offset: 0x2B96EF8 VA: 0x2B96EF8
	private static void InvokeErrorReceivedCallback_Internal(VideoPlayer source, string errorStr) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC0D120 Offset: 0xC0D120 VA: 0xC0D120
	// RVA: 0x2B97300 Offset: 0x2B97300 VA: 0x2B97300
	private static void InvokeSeekCompletedCallback_Internal(VideoPlayer source) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC0D130 Offset: 0xC0D130 VA: 0xC0D130
	// RVA: 0x2B97340 Offset: 0x2B97340 VA: 0x2B97340
	private static void InvokeClockResyncOccurredCallback_Internal(VideoPlayer source, double seconds) { }
}

// Namespace: 
public sealed class VideoPlayer.EventHandler : MulticastDelegate // TypeDefIndex: 2854
{
	// Methods

	// RVA: 0x2B977A0 Offset: 0x2B977A0 VA: 0x2B977A0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2B96690 Offset: 0x2B96690 VA: 0x2B96690 Slot: 11
	public virtual void Invoke(VideoPlayer source) { }

	// RVA: 0x2B977B0 Offset: 0x2B977B0 VA: 0x2B977B0 Slot: 12
	public virtual IAsyncResult BeginInvoke(VideoPlayer source, AsyncCallback callback, object object) { }

	// RVA: 0x2B977D4 Offset: 0x2B977D4 VA: 0x2B977D4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class VideoPlayer.ErrorEventHandler : MulticastDelegate // TypeDefIndex: 2855
{
	// Methods

	// RVA: 0x2B97754 Offset: 0x2B97754 VA: 0x2B97754
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2B96F40 Offset: 0x2B96F40 VA: 0x2B96F40 Slot: 11
	public virtual void Invoke(VideoPlayer source, string message) { }

	// RVA: 0x2B97764 Offset: 0x2B97764 VA: 0x2B97764 Slot: 12
	public virtual IAsyncResult BeginInvoke(VideoPlayer source, string message, AsyncCallback callback, object object) { }

	// RVA: 0x2B97794 Offset: 0x2B97794 VA: 0x2B97794 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class VideoPlayer.FrameReadyEventHandler : MulticastDelegate // TypeDefIndex: 2856
{
	// Methods

	// RVA: 0x2B977E0 Offset: 0x2B977E0 VA: 0x2B977E0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2B96A78 Offset: 0x2B96A78 VA: 0x2B96A78 Slot: 11
	public virtual void Invoke(VideoPlayer source, long frameIdx) { }

	// RVA: 0x2B977F0 Offset: 0x2B977F0 VA: 0x2B977F0 Slot: 12
	public virtual IAsyncResult BeginInvoke(VideoPlayer source, long frameIdx, AsyncCallback callback, object object) { }

	// RVA: 0x2B97888 Offset: 0x2B97888 VA: 0x2B97888 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class VideoPlayer.TimeEventHandler : MulticastDelegate // TypeDefIndex: 2857
{
	// Methods

	// RVA: 0x2B97894 Offset: 0x2B97894 VA: 0x2B97894
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2B97394 Offset: 0x2B97394 VA: 0x2B97394 Slot: 11
	public virtual void Invoke(VideoPlayer source, double seconds) { }

	// RVA: 0x2B978A4 Offset: 0x2B978A4 VA: 0x2B978A4 Slot: 12
	public virtual IAsyncResult BeginInvoke(VideoPlayer source, double seconds, AsyncCallback callback, object object) { }

	// RVA: 0x2B97940 Offset: 0x2B97940 VA: 0x2B97940 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2858
{}

// Namespace: UnityEngine
public enum WindZoneMode // TypeDefIndex: 2859
{
	// Fields
	public int value__; // 0x0
	public const WindZoneMode Directional = 0;
	public const WindZoneMode Spherical = 1;
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC0E308 Offset: 0xC0E308 VA: 0xC0E308
public class WindZone : Component // TypeDefIndex: 2860
{
	// Properties
	public WindZoneMode mode { get; set; }
	public float radius { get; set; }
	public float windMain { get; set; }
	public float windTurbulence { get; set; }
	public float windPulseMagnitude { get; set; }
	public float windPulseFrequency { get; set; }

	// Methods

	// RVA: 0x2B9CC68 Offset: 0x2B9CC68 VA: 0x2B9CC68
	public void .ctor() { }

	// RVA: 0x2B9CC70 Offset: 0x2B9CC70 VA: 0x2B9CC70
	public WindZoneMode get_mode() { }

	// RVA: 0x2B9CCDC Offset: 0x2B9CCDC VA: 0x2B9CCDC
	public void set_mode(WindZoneMode value) { }

	// RVA: 0x2B9CD50 Offset: 0x2B9CD50 VA: 0x2B9CD50
	public float get_radius() { }

	// RVA: 0x2B9CDBC Offset: 0x2B9CDBC VA: 0x2B9CDBC
	public void set_radius(float value) { }

	// RVA: 0x2B9CE30 Offset: 0x2B9CE30 VA: 0x2B9CE30
	public float get_windMain() { }

	// RVA: 0x2B9CE9C Offset: 0x2B9CE9C VA: 0x2B9CE9C
	public void set_windMain(float value) { }

	// RVA: 0x2B9CF10 Offset: 0x2B9CF10 VA: 0x2B9CF10
	public float get_windTurbulence() { }

	// RVA: 0x2B9CF7C Offset: 0x2B9CF7C VA: 0x2B9CF7C
	public void set_windTurbulence(float value) { }

	// RVA: 0x2B9CFF0 Offset: 0x2B9CFF0 VA: 0x2B9CFF0
	public float get_windPulseMagnitude() { }

	// RVA: 0x2B9D05C Offset: 0x2B9D05C VA: 0x2B9D05C
	public void set_windPulseMagnitude(float value) { }

	// RVA: 0x2B9D0D0 Offset: 0x2B9D0D0 VA: 0x2B9D0D0
	public float get_windPulseFrequency() { }

	// RVA: 0x2B9D13C Offset: 0x2B9D13C VA: 0x2B9D13C
	public void set_windPulseFrequency(float value) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2861
{}

// Namespace: UnityEngine.Purchasing
internal interface INativeAppleStore : INativeStore // TypeDefIndex: 2862
{
	// Properties
	public abstract string appReceipt { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void SetUnityPurchasingCallback(UnityPurchasingCallback AsyncCallback);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void RestoreTransactions();

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void AddTransactionObserver();

	// RVA: -1 Offset: -1 Slot: 3
	public abstract string get_appReceipt();

	// RVA: -1 Offset: -1 Slot: 4
	public abstract string GetTransactionReceiptForProductId(string productId);

	// RVA: -1 Offset: -1 Slot: 5
	public abstract void InterceptPromotionalPurchases();
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2863
{}

// Namespace: System.Threading.Tasks
public class TaskScheduler // TypeDefIndex: 2864
{
	// Fields
	private static SynchronizationContext defaultContext; // 0x0
	private SynchronizationContext context; // 0x10

	// Methods

	// RVA: 0x2B90A4C Offset: 0x2B90A4C VA: 0x2B90A4C
	public void .ctor(SynchronizationContext context) { }

	// RVA: 0x2B908D4 Offset: 0x2B908D4 VA: 0x2B908D4
	public void Post(Action action) { }

	// RVA: 0x2B90AF4 Offset: 0x2B90AF4 VA: 0x2B90AF4
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC0F57C Offset: 0xC0F57C VA: 0xC0F57C
private sealed class TaskScheduler.<Post>c__AnonStorey0 // TypeDefIndex: 2865
{
	// Fields
	internal Action action; // 0x10

	// Methods

	// RVA: 0x2B90AEC Offset: 0x2B90AEC VA: 0x2B90AEC
	public void .ctor() { }

	// RVA: 0x2B90B60 Offset: 0x2B90B60 VA: 0x2B90B60
	internal void <>m__0(object o) { }
}

// Namespace: System.Threading.Tasks
public class TaskFactory // TypeDefIndex: 2866
