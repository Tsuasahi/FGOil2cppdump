
	// RVA: 0x1B3A0E0 Offset: 0x1B3A0E0 VA: 0x1B3A0E0
	protected void OnClickListView(ListViewObject obj) { }
}

// Namespace: 
public enum ScriptSelectListViewManager.InitMode // TypeDefIndex: 8523
{
	// Fields
	public int value__; // 0x0
	public const ScriptSelectListViewManager.InitMode NONE = 0;
	public const ScriptSelectListViewManager.InitMode INTO = 1;
	public const ScriptSelectListViewManager.InitMode INPUT = 2;
	public const ScriptSelectListViewManager.InitMode SELECT = 3;
}

// Namespace: 
public sealed class ScriptSelectListViewManager.ClickDelegate : MulticastDelegate // TypeDefIndex: 8524
{
	// Methods

	// RVA: 0x1B38494 Offset: 0x1B38494 VA: 0x1B38494
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B3A134 Offset: 0x1B3A134 VA: 0x1B3A134 Slot: 11
	public virtual void Invoke(int select) { }

	// RVA: 0x1B3A360 Offset: 0x1B3A360 VA: 0x1B3A360 Slot: 12
	public virtual IAsyncResult BeginInvoke(int select, AsyncCallback callback, object object) { }

	// RVA: 0x1B3A3EC Offset: 0x1B3A3EC VA: 0x1B3A3EC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2A79C Offset: 0xC2A79C VA: 0xC2A79C
public class ScriptSelectListViewObject : ListViewObject // TypeDefIndex: 8525
{
	// Fields
	protected ScriptSelectListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC5EF2C Offset: 0xC5EF2C VA: 0xC5EF2C
	[DebuggerBrowsableAttribute] // RVA: 0xC5EF2C Offset: 0xC5EF2C VA: 0xC5EF2C
	private Action callbackFunc; // 0x70
	protected ScriptSelectListViewItemDraw itemDraw; // 0x78
	protected UIMessageButton messageButton; // 0x80
	protected ScriptSelectListViewItemDraw.DispMode dispMode; // 0x88
	protected GameObject dragObject; // 0x90

	// Methods

	// RVA: 0x1B3A3F8 Offset: 0x1B3A3F8 VA: 0x1B3A3F8
	public void .ctor() { }

	// RVA: 0x1B3A460 Offset: 0x1B3A460 VA: 0x1B3A460
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1B3A54C Offset: 0x1B3A54C VA: 0x1B3A54C
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1B3A638 Offset: 0x1B3A638 VA: 0x1B3A638
	protected void Awake() { }

	// RVA: 0x1B3A6DC Offset: 0x1B3A6DC VA: 0x1B3A6DC
	private void Start() { }

	// RVA: 0x1B3A6F0 Offset: 0x1B3A6F0 VA: 0x1B3A6F0
	private void OnDestroy() { }

	// RVA: 0x1B39D04 Offset: 0x1B39D04 VA: 0x1B39D04
	public ScriptSelectListViewItem GetItem() { }

	// RVA: 0x1B3A79C Offset: 0x1B3A79C VA: 0x1B3A79C Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1B3A7A8 Offset: 0x1B3A7A8 VA: 0x1B3A7A8 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x1B3A7EC Offset: 0x1B3A7EC VA: 0x1B3A7EC Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1B3A874 Offset: 0x1B3A874 VA: 0x1B3A874
	public void Init(ScriptSelectListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1B39A8C Offset: 0x1B39A8C VA: 0x1B39A8C
	public void Init(ScriptSelectListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x1B39F90 Offset: 0x1B39F90 VA: 0x1B39F90
	public void Init(ScriptSelectListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x1B39A0C Offset: 0x1B39A0C VA: 0x1B39A0C
	public void Init(ScriptSelectListViewObject.InitMode initMode) { }

	// RVA: 0x1B3ABB0 Offset: 0x1B3ABB0 VA: 0x1B3ABB0
	protected void SetupDisp() { }

	// RVA: 0x1B3AAE8 Offset: 0x1B3AAE8 VA: 0x1B3AAE8
	private void NoSelectStart() { }

	// RVA: 0x1B3ACC0 Offset: 0x1B3ACC0 VA: 0x1B3ACC0
	private void NoSelectMove() { }

	// RVA: 0x1B3AD98 Offset: 0x1B3AD98 VA: 0x1B3AD98
	private void NoSelectMove2() { }

	// RVA: 0x1B3AB4C Offset: 0x1B3AB4C VA: 0x1B3AB4C
	private void SelectStart() { }

	// RVA: 0x1B3ADF4 Offset: 0x1B3ADF4 VA: 0x1B3ADF4
	private void SelectMove() { }

	// RVA: 0x1B3AECC Offset: 0x1B3AECC VA: 0x1B3AECC
	private void SelectMove2() { }

	// RVA: 0x1B3AAC0 Offset: 0x1B3AAC0 VA: 0x1B3AAC0
	protected void EventMoveEnd() { }

	// RVA: 0x1B3AF28 Offset: 0x1B3AF28 VA: 0x1B3AF28 Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum ScriptSelectListViewObject.InitMode // TypeDefIndex: 8526
{
	// Fields
	public int value__; // 0x0
	public const ScriptSelectListViewObject.InitMode INVISIBLE = 0;
	public const ScriptSelectListViewObject.InitMode INVALID = 1;
	public const ScriptSelectListViewObject.InitMode VALID = 2;
	public const ScriptSelectListViewObject.InitMode INTO = 3;
	public const ScriptSelectListViewObject.InitMode INPUT = 4;
	public const ScriptSelectListViewObject.InitMode NO_SELECT = 5;
	public const ScriptSelectListViewObject.InitMode SELECT = 6;
}

// Namespace: 
protected enum ScriptSelectListViewObject.State // TypeDefIndex: 8527
{
	// Fields
	public int value__; // 0x0
	public const ScriptSelectListViewObject.State INIT = 0;
	public const ScriptSelectListViewObject.State IDLE = 1;
	public const ScriptSelectListViewObject.State MOVE = 2;
	public const ScriptSelectListViewObject.State INPUT = 3;
}

// Namespace: 
public class ScriptSkipDialog : BaseDialog // TypeDefIndex: 8528
{
	// Fields
	[SerializeField] // RVA: 0xC5EF68 Offset: 0xC5EF68 VA: 0xC5EF68
	protected UILabel messageLabel; // 0x58
	[SerializeField] // RVA: 0xC5EF78 Offset: 0xC5EF78 VA: 0xC5EF78
	protected UILabel message2Label; // 0x60
	[SerializeField] // RVA: 0xC5EF88 Offset: 0xC5EF88 VA: 0xC5EF88
	protected GameObject normalBase; // 0x68
	[SerializeField] // RVA: 0xC5EF98 Offset: 0xC5EF98 VA: 0xC5EF98
	protected GameObject exitBase; // 0x70
	[SerializeField] // RVA: 0xC5EFA8 Offset: 0xC5EFA8 VA: 0xC5EFA8
	protected UILabel buttonDecideLabel; // 0x78
	[SerializeField] // RVA: 0xC5EFB8 Offset: 0xC5EFB8 VA: 0xC5EFB8
	protected UILabel buttonDecide2Label; // 0x80
	[SerializeField] // RVA: 0xC5EFC8 Offset: 0xC5EFC8 VA: 0xC5EFC8
	protected UILabel buttonCancelLabel; // 0x88
	[SerializeField] // RVA: 0xC5EFD8 Offset: 0xC5EFD8 VA: 0xC5EFD8
	protected UILabel buttonCancel2Label; // 0x90
	[SerializeField] // RVA: 0xC5EFE8 Offset: 0xC5EFE8 VA: 0xC5EFE8
	protected UILabel buttonExitLabel; // 0x98
	protected ScriptSkipDialog.ClickDelegate clickFunc; // 0xA0
	protected Action closeCallbackFunc; // 0xA8
	protected bool isButtonEnable; // 0xB0

	// Methods

	// RVA: 0x1B3AFF8 Offset: 0x1B3AFF8 VA: 0x1B3AFF8
	public void .ctor() { }

	// RVA: 0x1B3B060 Offset: 0x1B3B060 VA: 0x1B3B060
	public void Init() { }

	// RVA: 0x1B3B230 Offset: 0x1B3B230 VA: 0x1B3B230
	public void Open(bool isUseExit, ScriptSkipDialog.ClickDelegate func) { }

	// RVA: 0x1B3B4A4 Offset: 0x1B3B4A4 VA: 0x1B3B4A4
	protected void EndOpen() { }

	// RVA: 0x1B3B4B0 Offset: 0x1B3B4B0 VA: 0x1B3B4B0
	public void Close() { }

	// RVA: 0x1B3B4B8 Offset: 0x1B3B4B8 VA: 0x1B3B4B8
	public void Close(Action callback) { }

	// RVA: 0x1B3B544 Offset: 0x1B3B544 VA: 0x1B3B544
	protected void EndClose() { }

	// RVA: 0x1B3B5A8 Offset: 0x1B3B5A8 VA: 0x1B3B5A8
	public void OnClickDecide() { }

	// RVA: 0x1B3B868 Offset: 0x1B3B868 VA: 0x1B3B868
	public void OnClickCancel() { }

	// RVA: 0x1B3B8FC Offset: 0x1B3B8FC VA: 0x1B3B8FC
	public void OnClickExit() { }

	// RVA: 0x1B3B990 Offset: 0x1B3B990 VA: 0x1B3B990
	private void OnEnable() { }
}

// Namespace: 
public enum ScriptSkipDialog.ResultKind // TypeDefIndex: 8529
{
	// Fields
	public int value__; // 0x0
	public const ScriptSkipDialog.ResultKind CANCEL = 0;
	public const ScriptSkipDialog.ResultKind SKIP = 1;
	public const ScriptSkipDialog.ResultKind EXIT = 2;
}

// Namespace: 
public sealed class ScriptSkipDialog.ClickDelegate : MulticastDelegate // TypeDefIndex: 8530
{
	// Methods

	// RVA: 0x1B3BA38 Offset: 0x1B3BA38 VA: 0x1B3BA38
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B3B63C Offset: 0x1B3B63C VA: 0x1B3B63C Slot: 11
	public virtual void Invoke(ScriptSkipDialog.ResultKind result) { }

	// RVA: 0x1B3BA48 Offset: 0x1B3BA48 VA: 0x1B3BA48 Slot: 12
	public virtual IAsyncResult BeginInvoke(ScriptSkipDialog.ResultKind result, AsyncCallback callback, object object) { }

	// RVA: 0x1B3BAD4 Offset: 0x1B3BAD4 VA: 0x1B3BAD4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ScriptStoryOpenDialog : BaseDialog // TypeDefIndex: 8531
{
	// Fields
	[SerializeField] // RVA: 0xC5EFF8 Offset: 0xC5EFF8 VA: 0xC5EFF8
	private UILabel messageLabel; // 0x58
	[SerializeField] // RVA: 0xC5F008 Offset: 0xC5F008 VA: 0xC5F008
	private UILabel titleLabel; // 0x60
	[SerializeField] // RVA: 0xC5F018 Offset: 0xC5F018 VA: 0xC5F018
	private UILabel closeLabel; // 0x68
	[SerializeField] // RVA: 0xC5F028 Offset: 0xC5F028 VA: 0xC5F028
	private UICommonButton closeButton; // 0x70
	[SerializeField] // RVA: 0xC5F038 Offset: 0xC5F038 VA: 0xC5F038
	private UILabel infoLabel; // 0x78
	protected ScriptStoryOpenDialog.State state; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC5F048 Offset: 0xC5F048 VA: 0xC5F048
	[DebuggerBrowsableAttribute] // RVA: 0xC5F048 Offset: 0xC5F048 VA: 0xC5F048
	private ScriptStoryOpenDialog.CallbackFunc callbackFunc; // 0x88
	protected Action closeCallbackFunc; // 0x90

	// Methods

	// RVA: 0x1B3BAE0 Offset: 0x1B3BAE0 VA: 0x1B3BAE0
	public void .ctor() { }

	// RVA: 0x1B3BB48 Offset: 0x1B3BB48 VA: 0x1B3BB48
	protected void add_callbackFunc(ScriptStoryOpenDialog.CallbackFunc value) { }

	// RVA: 0x1B3BC34 Offset: 0x1B3BC34 VA: 0x1B3BC34
	protected void remove_callbackFunc(ScriptStoryOpenDialog.CallbackFunc value) { }

	// RVA: 0x1B3BD20 Offset: 0x1B3BD20 VA: 0x1B3BD20
	public void Init() { }

	// RVA: 0x1B3BE44 Offset: 0x1B3BE44 VA: 0x1B3BE44
	public void Open(string title, string message, ScriptStoryOpenDialog.CallbackFunc callback, bool canMaskTouchClose = False) { }

	// RVA: 0x1B3C044 Offset: 0x1B3C044 VA: 0x1B3C044
	protected void EndOpen() { }

	// RVA: 0x1B3C050 Offset: 0x1B3C050 VA: 0x1B3C050
	public void Close() { }

	// RVA: 0x1B3C058 Offset: 0x1B3C058 VA: 0x1B3C058
	public void Close(Action callback) { }

	// RVA: 0x1B3C0E8 Offset: 0x1B3C0E8 VA: 0x1B3C0E8
	protected void EndClose() { }

	// RVA: 0x1B3C124 Offset: 0x1B3C124 VA: 0x1B3C124
	protected void Callback() { }

	// RVA: 0x1B3C340 Offset: 0x1B3C340 VA: 0x1B3C340
	public void OnClickClose() { }
}

// Namespace: 
protected enum ScriptStoryOpenDialog.State // TypeDefIndex: 8532
{
	// Fields
	public int value__; // 0x0
	public const ScriptStoryOpenDialog.State INIT = 0;
	public const ScriptStoryOpenDialog.State OPEN = 1;
	public const ScriptStoryOpenDialog.State INPUT = 2;
	public const ScriptStoryOpenDialog.State SELECTED = 3;
	public const ScriptStoryOpenDialog.State CLOSE = 4;
}

// Namespace: 
public sealed class ScriptStoryOpenDialog.CallbackFunc : MulticastDelegate // TypeDefIndex: 8533
{
	// Methods

	// RVA: 0x1B3C370 Offset: 0x1B3C370 VA: 0x1B3C370
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B3C140 Offset: 0x1B3C140 VA: 0x1B3C140 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1B3C380 Offset: 0x1B3C380 VA: 0x1B3C380 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1B3C3B4 Offset: 0x1B3C3B4 VA: 0x1B3C3B4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class UIScriptChara : MonoBehaviour // TypeDefIndex: 8534
{
	// Fields
	protected static readonly float UNIT_SPEED; // 0x0
	[SerializeField] // RVA: 0xC5F084 Offset: 0xC5F084 VA: 0xC5F084
	protected Transform baseDepth; // 0x18
	[SerializeField] // RVA: 0xC5F094 Offset: 0xC5F094 VA: 0xC5F094
	protected Transform baseScale; // 0x20
	[SerializeField] // RVA: 0xC5F0A4 Offset: 0xC5F0A4 VA: 0xC5F0A4
	protected Transform baseRoll1; // 0x28
	[SerializeField] // RVA: 0xC5F0B4 Offset: 0xC5F0B4 VA: 0xC5F0B4
	protected Transform baseRoll2; // 0x30
	[SerializeField] // RVA: 0xC5F0C4 Offset: 0xC5F0C4 VA: 0xC5F0C4
	protected Transform baseShake; // 0x38
	[SerializeField] // RVA: 0xC5F0D4 Offset: 0xC5F0D4 VA: 0xC5F0D4
	protected GameObject baseCutEffect; // 0x40
	[SerializeField] // RVA: 0xC5F0E4 Offset: 0xC5F0E4 VA: 0xC5F0E4
	protected GameObject baseSpecialEffect; // 0x48
	[SerializeField] // RVA: 0xC5F0F4 Offset: 0xC5F0F4 VA: 0xC5F0F4
	protected GameObject baseEffect; // 0x50
	[SerializeField] // RVA: 0xC5F104 Offset: 0xC5F104 VA: 0xC5F104
	protected GameObject baseEffectBack; // 0x58
	[SerializeField] // RVA: 0xC5F114 Offset: 0xC5F114 VA: 0xC5F114
	protected GameObject baseShadowEffect; // 0x60
	protected bool isDisp; // 0x68
	protected bool isShadow; // 0x69
	protected bool isShadowEffect; // 0x6A
	protected Vector3 basePosition; // 0x6C
	protected Vector3 baseScaleSize; // 0x78
	protected string filterName; // 0x88
	protected Color filterColor; // 0x90
	protected UIScriptChara.ChangeKind changeKind; // 0xA0
	protected float changeSpeed; // 0xA4
	protected int changeCount; // 0xA8
	protected float changeRange; // 0xAC
	protected float changeTotal; // 0xB0
	protected float changeStep; // 0xB4
	protected Action setCallback; // 0xB8
	protected Action changeCallback; // 0xC0
	protected int mainIndex; // 0xC8
	protected int backIndex; // 0xCC
	protected bool isMove; // 0xD0
	protected bool isRoll; // 0xD1
	protected float returnDuration; // 0xD4
	protected float shakeTime; // 0xD8
	protected float shakeCycle; // 0xDC
	protected float shakeX; // 0xE0
	protected float shakeY; // 0xE4
	[CompilerGeneratedAttribute] // RVA: 0xC5F124 Offset: 0xC5F124 VA: 0xC5F124
	private static Dictionary<string, int> <>f__switch$map14; // 0x8

	// Methods

	// RVA: 0x180E2C0 Offset: 0x180E2C0 VA: 0x180E2C0
	public void .ctor() { }

	// RVA: 0x180E2D0 Offset: 0x180E2D0 VA: 0x180E2D0
	public bool IsChange() { }

	// RVA: 0x180E2E0 Offset: 0x180E2E0 VA: 0x180E2E0
	public void ChangeCharacter(string kind, float speed, string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x180E42C Offset: 0x180E42C VA: 0x180E42C Slot: 4
	public virtual void ChangeCharacter(UIScriptChara.ChangeKind kind, float speed, string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x180E4B0 Offset: 0x180E4B0 VA: 0x180E4B0 Slot: 5
	public virtual void SetCharacter(string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x180E4B8 Offset: 0x180E4B8 VA: 0x180E4B8 Slot: 6
	protected virtual void EndSet() { }

	// RVA: 0x180E7B4 Offset: 0x180E7B4 VA: 0x180E7B4 Slot: 7
	public virtual void SetFace(Face.Type faceType, float fadeTime = 0) { }

	// RVA: 0x180E7B8 Offset: 0x180E7B8 VA: 0x180E7B8 Slot: 8
	public virtual void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x180E7C8 Offset: 0x180E7C8 VA: 0x180E7C8 Slot: 9
	public virtual void SetShadow(bool isShadow, bool isSkip) { }

	// RVA: 0x180E7F0 Offset: 0x180E7F0 VA: 0x180E7F0
	public void RecoverShadowEffect(bool isSkip = False) { }

	// RVA: 0x180E804 Offset: 0x180E804 VA: 0x180E804
	public void StartShadowEffect() { }

	// RVA: 0x180E8B4 Offset: 0x180E8B4 VA: 0x180E8B4
	public void StopShadowEffect(bool isSkip) { }

	// RVA: 0x180E938 Offset: 0x180E938 VA: 0x180E938 Slot: 10
	public virtual void SetTalkMask(bool isMask) { }

	// RVA: 0x180E93C Offset: 0x180E93C VA: 0x180E93C Slot: 11
	public virtual void SetAlpha(float a) { }

	// RVA: 0x180E950 Offset: 0x180E950 VA: 0x180E950 Slot: 12
	public virtual void SetDepth(int d) { }

	// RVA: 0x180E9E0 Offset: 0x180E9E0 VA: 0x180E9E0
	public float GetDepth() { }

	// RVA: 0x180EA18 Offset: 0x180EA18 VA: 0x180EA18 Slot: 13
	public virtual bool IsBusyMoveAlpha() { }

	// RVA: 0x180EA20 Offset: 0x180EA20 VA: 0x180EA20 Slot: 14
	public virtual void MoveAlpha(float duration, float a) { }

	// RVA: 0x180EA34 Offset: 0x180EA34 VA: 0x180EA34 Slot: 15
	public virtual void MoveAlphaSpeed(float speed, float a) { }

	// RVA: 0x180EA48 Offset: 0x180EA48 VA: 0x180EA48
	public Vector3 GetBasePosition() { }

	// RVA: 0x180EA54 Offset: 0x180EA54 VA: 0x180EA54
	public void SetBasePosition(Vector3 v) { }

	// RVA: 0x180EABC Offset: 0x180EABC VA: 0x180EABC
	public void SetPosition(Vector3 v) { }

	// RVA: 0x180EB18 Offset: 0x180EB18 VA: 0x180EB18
	public void SetScale(float v) { }

	// RVA: 0x180EB78 Offset: 0x180EB78 VA: 0x180EB78 Slot: 16
	public virtual void SetFullScreenScaleType(int type) { }

	// RVA: 0x180EB7C Offset: 0x180EB7C VA: 0x180EB7C
	public bool IsMove() { }

	// RVA: 0x180EB84 Offset: 0x180EB84 VA: 0x180EB84
	public void MovePosition(float duration, Vector3 v) { }

	// RVA: 0x180ECE8 Offset: 0x180ECE8 VA: 0x180ECE8
	protected void EndMove() { }

	// RVA: 0x180ECF0 Offset: 0x180ECF0 VA: 0x180ECF0
	public void MoveReturnPosition(float duration) { }

	// RVA: 0x180EE4C Offset: 0x180EE4C VA: 0x180EE4C
	protected void EndMoveReturn() { }

	// RVA: 0x180EE54 Offset: 0x180EE54 VA: 0x180EE54
	public void MoveReturnPosition(float duration, Vector3 v) { }

	// RVA: 0x180F004 Offset: 0x180F004 VA: 0x180F004
	protected void EndMoveReturnHalf() { }

	// RVA: 0x180F00C Offset: 0x180F00C VA: 0x180F00C
	public void MoveScale(float duration, float s) { }

	// RVA: 0x180F160 Offset: 0x180F160 VA: 0x180F160
	protected void EndMoveScale() { }

	// RVA: 0x180F1C0 Offset: 0x180F1C0 VA: 0x180F1C0
	public void MoveAttack(string kind, float duration, Vector3 v) { }

	// RVA: 0x180F394 Offset: 0x180F394 VA: 0x180F394
	protected void EndMoveAttack() { }

	// RVA: 0x180F39C Offset: 0x180F39C VA: 0x180F39C
	public bool IsRoll() { }

	// RVA: 0x180F3A4 Offset: 0x180F3A4 VA: 0x180F3A4
	public void InitRoll() { }

	// RVA: 0x180F42C Offset: 0x180F42C VA: 0x180F42C
	public bool SetRoll(float rollZ, Vector3 centerOffset) { }

	// RVA: 0x180F624 Offset: 0x180F624 VA: 0x180F624
	public bool StartRoll(float duration, float rollZ) { }

	// RVA: 0x180F854 Offset: 0x180F854 VA: 0x180F854
	public bool StartRollEx(float duration, float rollZ, Vector3 centerOffset) { }

	// RVA: 0x180FBA0 Offset: 0x180FBA0 VA: 0x180FBA0
	protected void EndExecuteCameraRoll() { }

	// RVA: 0x180FBA8 Offset: 0x180FBA8 VA: 0x180FBA8
	public bool IsShake() { }

	// RVA: 0x180FBB8 Offset: 0x180FBB8 VA: 0x180FBB8
	public void Shake(float duration, float cycle, float x, float y) { }

	// RVA: 0x180FC2C Offset: 0x180FC2C VA: 0x180FC2C
	protected void OnShake() { }

	// RVA: 0x180FDB0 Offset: 0x180FDB0 VA: 0x180FDB0
	public bool IsCut() { }

	// RVA: 0x180FEF4 Offset: 0x180FEF4 VA: 0x180FEF4
	public bool IsCutStart() { }

	// RVA: 0x1810038 Offset: 0x1810038 VA: 0x1810038 Slot: 17
	public virtual void SetCutin(string n, float time, float mgd, bool isSkip, bool isPause) { }

	// RVA: 0x181003C Offset: 0x181003C VA: 0x181003C Slot: 18
	public virtual void ResumeCutin(bool isSkip) { }

	// RVA: 0x1810040 Offset: 0x1810040 VA: 0x1810040 Slot: 19
	public virtual void SetCutout(float time, bool isSkip) { }

	// RVA: 0x1810044 Offset: 0x1810044 VA: 0x1810044 Slot: 20
	public virtual void StopCut() { }

	// RVA: 0x1810048 Offset: 0x1810048 VA: 0x1810048
	public bool IsSpecialEffect() { }

	// RVA: 0x1810054 Offset: 0x1810054 VA: 0x1810054
	public bool IsSpecialEffect(string n) { }

	// RVA: 0x1810060 Offset: 0x1810060 VA: 0x1810060
	public bool IsSpecialEffectStart() { }

	// RVA: 0x181006C Offset: 0x181006C VA: 0x181006C
	public bool IsSpecialEffectStart(string n) { }

	// RVA: 0x1810078 Offset: 0x1810078 VA: 0x1810078 Slot: 21
	public virtual void SetSpecialEffect(string n, Vector3 pos, float time, Color color, float range, bool isSkip, bool isPause) { }

	// RVA: 0x18104D8 Offset: 0x18104D8 VA: 0x18104D8
	public void ResumeSpecialEffect(bool isSkip) { }

	// RVA: 0x18104E8 Offset: 0x18104E8 VA: 0x18104E8
	public void ResumeSpecialEffect(string n, bool isSkip) { }

	// RVA: 0x18104F8 Offset: 0x18104F8 VA: 0x18104F8
	public void StopSpecialEffect() { }

	// RVA: 0x1810504 Offset: 0x1810504 VA: 0x1810504
	public void StopSpecialEffect(string n) { }

	// RVA: 0x1810510 Offset: 0x1810510 VA: 0x1810510
	public bool IsEffect() { }

	// RVA: 0x181057C Offset: 0x181057C VA: 0x181057C
	public bool IsEffect(string n) { }

	// RVA: 0x18105F8 Offset: 0x18105F8 VA: 0x18105F8
	public bool IsEffectStart() { }

	// RVA: 0x1810664 Offset: 0x1810664 VA: 0x1810664
	public bool IsEffectStart(string n) { }

	// RVA: 0x18106E0 Offset: 0x18106E0 VA: 0x18106E0
	public void SetEffect(string n, bool isSkip, bool isPause, CommonEffectManager.FlipKind flip) { }

	// RVA: 0x181077C Offset: 0x181077C VA: 0x181077C
	public void SetEffect(string n, Vector3 p, bool isSkip, bool isPause, CommonEffectManager.FlipKind flip) { }

	// RVA: 0x1810840 Offset: 0x1810840 VA: 0x1810840
	public void ResumeEffect(bool isSkip) { }

	// RVA: 0x18108BC Offset: 0x18108BC VA: 0x18108BC
	public void ResumeEffect(string n, bool isSkip) { }

	// RVA: 0x1810940 Offset: 0x1810940 VA: 0x1810940
	public bool StopEffect(bool isSkip) { }

	// RVA: 0x18109C0 Offset: 0x18109C0 VA: 0x18109C0
	public bool StopEffect(string n, bool isSkip) { }

	// RVA: 0x1810A48 Offset: 0x1810A48 VA: 0x1810A48
	public bool IsBackEffect() { }

	// RVA: 0x1810AB4 Offset: 0x1810AB4 VA: 0x1810AB4
	public bool IsBackEffect(string n) { }

	// RVA: 0x1810B30 Offset: 0x1810B30 VA: 0x1810B30
	public bool IsBackEffectStart() { }

	// RVA: 0x1810B9C Offset: 0x1810B9C VA: 0x1810B9C
	public bool IsBackEffectStart(string n) { }

	// RVA: 0x1810C18 Offset: 0x1810C18 VA: 0x1810C18
	public void SetBackEffect(string n, bool isSkip, bool isPause, CommonEffectManager.FlipKind flip) { }

	// RVA: 0x1810CB4 Offset: 0x1810CB4 VA: 0x1810CB4
	public void SetBackEffect(string n, Vector3 p, bool isSkip, bool isPause, CommonEffectManager.FlipKind flip) { }

	// RVA: 0x1810D78 Offset: 0x1810D78 VA: 0x1810D78
	public void ResumeBackEffect(bool isSkip) { }

	// RVA: 0x1810DF4 Offset: 0x1810DF4 VA: 0x1810DF4
	public void ResumeBackEffect(string n, bool isSkip) { }

	// RVA: 0x1810E78 Offset: 0x1810E78 VA: 0x1810E78
	public bool StopBackEffect(bool isSkip) { }

	// RVA: 0x1810EF8 Offset: 0x1810EF8 VA: 0x1810EF8
	public bool StopBackEffect(string n, bool isSkip) { }

	// RVA: 0x1810F80 Offset: 0x1810F80 VA: 0x1810F80 Slot: 22
	public virtual void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x1810F84 Offset: 0x1810F84 VA: 0x1810F84 Slot: 23
	public virtual void SetSortingOrder(int order) { }

	// RVA: 0x1810F88 Offset: 0x1810F88 VA: 0x1810F88
	private static void .cctor() { }
}

// Namespace: 
public enum UIScriptChara.ChangeKind // TypeDefIndex: 8535
{
	// Fields
	public int value__; // 0x0
	public const UIScriptChara.ChangeKind NONE = 0;
	public const UIScriptChara.ChangeKind NORMAL = 1;
	public const UIScriptChara.ChangeKind FADE = 2;
	public const UIScriptChara.ChangeKind BLINK = 3;
	public const UIScriptChara.ChangeKind CROSS_FADE = 4;
	public const UIScriptChara.ChangeKind MAX = 5;
}

// Namespace: 
public class UIScriptEquip : UIScriptChara // TypeDefIndex: 8536
{
	// Fields
	[SerializeField] // RVA: 0xC5F134 Offset: 0xC5F134 VA: 0xC5F134
	protected UIEquipGraphM[] equipGraphList; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xC5F144 Offset: 0xC5F144 VA: 0xC5F144
	private static Dictionary<string, int> <>f__switch$map15; // 0x0

	// Methods

	// RVA: 0x1810FE0 Offset: 0x1810FE0 VA: 0x1810FE0
	public void .ctor() { }

	// RVA: 0x1811068 Offset: 0x1811068 VA: 0x1811068 Slot: 4
	public override void ChangeCharacter(UIScriptChara.ChangeKind kind, float speed, string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1811264 Offset: 0x1811264 VA: 0x1811264
	protected void UpdateChange() { }

	// RVA: 0x1811714 Offset: 0x1811714 VA: 0x1811714
	protected void ContinueChangeFade() { }

	// RVA: 0x181163C Offset: 0x181163C VA: 0x181163C
	protected void SetOverlap(float a) { }

	// RVA: 0x1811524 Offset: 0x1811524 VA: 0x1811524
	protected void EndChange() { }

	// RVA: 0x1811778 Offset: 0x1811778 VA: 0x1811778 Slot: 5
	public override void SetCharacter(string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x18118A0 Offset: 0x18118A0 VA: 0x18118A0 Slot: 6
	protected override void EndSet() { }

	// RVA: 0x1811BCC Offset: 0x1811BCC VA: 0x1811BCC Slot: 8
	public override void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x1811C78 Offset: 0x1811C78 VA: 0x1811C78 Slot: 9
	public override void SetShadow(bool isShadow, bool isSkip) { }

	// RVA: 0x1811D90 Offset: 0x1811D90 VA: 0x1811D90 Slot: 11
	public override void SetAlpha(float a) { }

	// RVA: 0x1811E28 Offset: 0x1811E28 VA: 0x1811E28 Slot: 12
	public override void SetDepth(int d) { }

	// RVA: 0x1811F10 Offset: 0x1811F10 VA: 0x1811F10 Slot: 13
	public override bool IsBusyMoveAlpha() { }

	// RVA: 0x1811F74 Offset: 0x1811F74 VA: 0x1811F74 Slot: 14
	public override void MoveAlpha(float duration, float a) { }

	// RVA: 0x181201C Offset: 0x181201C VA: 0x181201C Slot: 15
	public override void MoveAlphaSpeed(float speed, float a) { }

	// RVA: 0x18120C4 Offset: 0x18120C4 VA: 0x18120C4 Slot: 21
	public override void SetSpecialEffect(string n, Vector3 pos, float time, Color color, float range, bool isSkip, bool isPause) { }

	// RVA: 0x181250C Offset: 0x181250C VA: 0x181250C Slot: 22
	public override void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x1812598 Offset: 0x1812598 VA: 0x1812598 Slot: 23
	public override void SetSortingOrder(int order) { }
}

// Namespace: 
public class UIScriptFigure : UIScriptChara // TypeDefIndex: 8537
{
	// Fields
	[SerializeField] // RVA: 0xC5F154 Offset: 0xC5F154 VA: 0xC5F154
	protected UIStandFigureM[] standFigureList; // 0xE8
	[SerializeField] // RVA: 0xC5F164 Offset: 0xC5F164 VA: 0xC5F164
	protected UIStandFigureM crossFadeStandFigure; // 0xF0
	[CompilerGeneratedAttribute] // RVA: 0xC5F174 Offset: 0xC5F174 VA: 0xC5F174
	private static Dictionary<string, int> <>f__switch$map16; // 0x0

	// Methods

	// RVA: 0x1812624 Offset: 0x1812624 VA: 0x1812624
	public void .ctor() { }

	// RVA: 0x18126AC Offset: 0x18126AC VA: 0x18126AC Slot: 4
	public override void ChangeCharacter(UIScriptChara.ChangeKind kind, float speed, string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1813220 Offset: 0x1813220 VA: 0x1813220
	protected void UpdateChange() { }

	// RVA: 0x181561C Offset: 0x181561C VA: 0x181561C
	protected void ContinueChangeFade() { }

	// RVA: 0x1813AC0 Offset: 0x1813AC0 VA: 0x1813AC0
	protected void SetOverlap(float a) { }

	// RVA: 0x1813758 Offset: 0x1813758 VA: 0x1813758
	protected void EndChange() { }

	// RVA: 0x1815738 Offset: 0x1815738 VA: 0x1815738 Slot: 5
	public override void SetCharacter(string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1815944 Offset: 0x1815944 VA: 0x1815944 Slot: 6
	protected override void EndSet() { }

	// RVA: 0x1815CF4 Offset: 0x1815CF4 VA: 0x1815CF4 Slot: 7
	public override void SetFace(Face.Type faceType, float fadeTime) { }

	// RVA: 0x18170E4 Offset: 0x18170E4 VA: 0x18170E4 Slot: 8
	public override void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x1817194 Offset: 0x1817194 VA: 0x1817194 Slot: 9
	public override void SetShadow(bool isShadow, bool isSkip) { }

	// RVA: 0x18172A0 Offset: 0x18172A0 VA: 0x18172A0 Slot: 10
	public override void SetTalkMask(bool isMask) { }

	// RVA: 0x1817320 Offset: 0x1817320 VA: 0x1817320 Slot: 11
	public override void SetAlpha(float a) { }

	// RVA: 0x18173CC Offset: 0x18173CC VA: 0x18173CC Slot: 12
	public override void SetDepth(int d) { }

	// RVA: 0x18174B0 Offset: 0x18174B0 VA: 0x18174B0 Slot: 13
	public override bool IsBusyMoveAlpha() { }

	// RVA: 0x1817518 Offset: 0x1817518 VA: 0x1817518 Slot: 14
	public override void MoveAlpha(float duration, float a) { }

	// RVA: 0x18175BC Offset: 0x18175BC VA: 0x18175BC Slot: 15
	public override void MoveAlphaSpeed(float speed, float a) { }

	// RVA: 0x181787C Offset: 0x181787C VA: 0x181787C Slot: 21
	public override void SetSpecialEffect(string n, Vector3 pos, float time, Color color, float range, bool isSkip, bool isPause) { }

	// RVA: 0x1817F2C Offset: 0x1817F2C VA: 0x1817F2C Slot: 22
	public override void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x1818090 Offset: 0x1818090 VA: 0x1818090 Slot: 23
	public override void SetSortingOrder(int order) { }
}

// Namespace: 
public class UIScriptHorizontalImage : UIScriptChara // TypeDefIndex: 8538
{
	// Fields
	[SerializeField] // RVA: 0xC5F184 Offset: 0xC5F184 VA: 0xC5F184
	protected UIHorizontalImageM[] imageList; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xC5F194 Offset: 0xC5F194 VA: 0xC5F194
	private static Dictionary<string, int> <>f__switch$map17; // 0x0

	// Methods

	// RVA: 0x181817C Offset: 0x181817C VA: 0x181817C
	public void .ctor() { }

	// RVA: 0x1818204 Offset: 0x1818204 VA: 0x1818204 Slot: 4
	public override void ChangeCharacter(UIScriptChara.ChangeKind kind, float speed, string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1818400 Offset: 0x1818400 VA: 0x1818400
	protected void UpdateChange() { }

	// RVA: 0x18188B0 Offset: 0x18188B0 VA: 0x18188B0
	protected void ContinueChangeFade() { }

	// RVA: 0x18187D8 Offset: 0x18187D8 VA: 0x18187D8
	protected void SetOverlap(float a) { }

	// RVA: 0x18186C0 Offset: 0x18186C0 VA: 0x18186C0
	protected void EndChange() { }

	// RVA: 0x1818914 Offset: 0x1818914 VA: 0x1818914 Slot: 5
	public override void SetCharacter(string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1818A3C Offset: 0x1818A3C VA: 0x1818A3C Slot: 6
	protected override void EndSet() { }

	// RVA: 0x1818D68 Offset: 0x1818D68 VA: 0x1818D68 Slot: 8
	public override void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x1818E14 Offset: 0x1818E14 VA: 0x1818E14 Slot: 9
	public override void SetShadow(bool isShadow, bool isSkip) { }

	// RVA: 0x1818F2C Offset: 0x1818F2C VA: 0x1818F2C Slot: 11
	public override void SetAlpha(float a) { }

	// RVA: 0x1818FC4 Offset: 0x1818FC4 VA: 0x1818FC4 Slot: 12
	public override void SetDepth(int d) { }

	// RVA: 0x18190AC Offset: 0x18190AC VA: 0x18190AC Slot: 13
	public override bool IsBusyMoveAlpha() { }

	// RVA: 0x1819110 Offset: 0x1819110 VA: 0x1819110 Slot: 14
	public override void MoveAlpha(float duration, float a) { }

	// RVA: 0x18191B8 Offset: 0x18191B8 VA: 0x18191B8 Slot: 15
	public override void MoveAlphaSpeed(float speed, float a) { }

	// RVA: 0x1819260 Offset: 0x1819260 VA: 0x1819260 Slot: 21
	public override void SetSpecialEffect(string n, Vector3 pos, float time, Color color, float range, bool isSkip, bool isPause) { }

	// RVA: 0x18196A8 Offset: 0x18196A8 VA: 0x18196A8 Slot: 22
	public override void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x1819734 Offset: 0x1819734 VA: 0x1819734 Slot: 23
	public override void SetSortingOrder(int order) { }
}

// Namespace: 
public class UIScriptImage : UIScriptChara // TypeDefIndex: 8539
{
	// Fields
	[SerializeField] // RVA: 0xC5F1A4 Offset: 0xC5F1A4 VA: 0xC5F1A4
	protected UIImageM[] imageList; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xC5F1B4 Offset: 0xC5F1B4 VA: 0xC5F1B4
	private static Dictionary<string, int> <>f__switch$map18; // 0x0

	// Methods

	// RVA: 0x18197C0 Offset: 0x18197C0 VA: 0x18197C0
	public void .ctor() { }

	// RVA: 0x1819848 Offset: 0x1819848 VA: 0x1819848 Slot: 4
	public override void ChangeCharacter(UIScriptChara.ChangeKind kind, float speed, string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1819F4C Offset: 0x1819F4C VA: 0x1819F4C
	protected void UpdateChange() { }

	// RVA: 0x181A3FC Offset: 0x181A3FC VA: 0x181A3FC
	protected void ContinueChangeFade() { }

	// RVA: 0x181A324 Offset: 0x181A324 VA: 0x181A324
	protected void SetOverlap(float a) { }

	// RVA: 0x181A20C Offset: 0x181A20C VA: 0x181A20C
	protected void EndChange() { }

	// RVA: 0x1819A50 Offset: 0x1819A50 VA: 0x1819A50
	protected void SetFullScreenImage(string imageName, UIImageM baseFigure) { }

	// RVA: 0x181A460 Offset: 0x181A460 VA: 0x181A460 Slot: 5
	public override void SetCharacter(string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x181A594 Offset: 0x181A594 VA: 0x181A594 Slot: 16
	public override void SetFullScreenScaleType(int type) { }

	// RVA: 0x181A65C Offset: 0x181A65C VA: 0x181A65C Slot: 6
	protected override void EndSet() { }

	// RVA: 0x181A988 Offset: 0x181A988 VA: 0x181A988 Slot: 8
	public override void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x181AA34 Offset: 0x181AA34 VA: 0x181AA34 Slot: 9
	public override void SetShadow(bool isShadow, bool isSkip) { }

	// RVA: 0x181AB4C Offset: 0x181AB4C VA: 0x181AB4C Slot: 11
	public override void SetAlpha(float a) { }

	// RVA: 0x181ABE4 Offset: 0x181ABE4 VA: 0x181ABE4 Slot: 12
	public override void SetDepth(int d) { }

	// RVA: 0x181ACCC Offset: 0x181ACCC VA: 0x181ACCC Slot: 13
	public override bool IsBusyMoveAlpha() { }

	// RVA: 0x181AD30 Offset: 0x181AD30 VA: 0x181AD30 Slot: 14
	public override void MoveAlpha(float duration, float a) { }

	// RVA: 0x181ADD8 Offset: 0x181ADD8 VA: 0x181ADD8 Slot: 15
	public override void MoveAlphaSpeed(float speed, float a) { }

	// RVA: 0x181AE80 Offset: 0x181AE80 VA: 0x181AE80 Slot: 17
	public override void SetCutin(string n, float time, float mgd, bool isSkip, bool isPause) { }

	// RVA: 0x181B064 Offset: 0x181B064 VA: 0x181B064 Slot: 18
	public override void ResumeCutin(bool isSkip) { }

	// RVA: 0x181B1B4 Offset: 0x181B1B4 VA: 0x181B1B4 Slot: 19
	public override void SetCutout(float time, bool isSkip) { }

	// RVA: 0x181B310 Offset: 0x181B310 VA: 0x181B310 Slot: 20
	public override void StopCut() { }

	// RVA: 0x181B360 Offset: 0x181B360 VA: 0x181B360 Slot: 21
	public override void SetSpecialEffect(string n, Vector3 pos, float time, Color color, float range, bool isSkip, bool isPause) { }

	// RVA: 0x181B7A8 Offset: 0x181B7A8 VA: 0x181B7A8 Slot: 22
	public override void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x181B834 Offset: 0x181B834 VA: 0x181B834 Slot: 23
	public override void SetSortingOrder(int order) { }
}

// Namespace: 
private enum UIScriptImage.FULLSCREEN_SCALE_TYPE // TypeDefIndex: 8540
{
	// Fields
	public int value__; // 0x0
	public const UIScriptImage.FULLSCREEN_SCALE_TYPE WIDTH_1345 = 1;
}

// Namespace: 
public class UIScriptVerticalImage : UIScriptChara // TypeDefIndex: 8541
{
	// Fields
	[SerializeField] // RVA: 0xC5F1C4 Offset: 0xC5F1C4 VA: 0xC5F1C4
	protected UIVerticalImageM[] imageList; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xC5F1D4 Offset: 0xC5F1D4 VA: 0xC5F1D4
	private static Dictionary<string, int> <>f__switch$map19; // 0x0

	// Methods

	// RVA: 0x181B8C0 Offset: 0x181B8C0 VA: 0x181B8C0
	public void .ctor() { }

	// RVA: 0x181B948 Offset: 0x181B948 VA: 0x181B948 Slot: 4
	public override void ChangeCharacter(UIScriptChara.ChangeKind kind, float speed, string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x181BB44 Offset: 0x181BB44 VA: 0x181BB44
	protected void UpdateChange() { }

	// RVA: 0x181BFF4 Offset: 0x181BFF4 VA: 0x181BFF4
	protected void ContinueChangeFade() { }

	// RVA: 0x181BF1C Offset: 0x181BF1C VA: 0x181BF1C
	protected void SetOverlap(float a) { }

	// RVA: 0x181BE04 Offset: 0x181BE04 VA: 0x181BE04
	protected void EndChange() { }

	// RVA: 0x181C058 Offset: 0x181C058 VA: 0x181C058 Slot: 5
	public override void SetCharacter(string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x181C180 Offset: 0x181C180 VA: 0x181C180 Slot: 6
	protected override void EndSet() { }

	// RVA: 0x181C4AC Offset: 0x181C4AC VA: 0x181C4AC Slot: 8
	public override void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x181C558 Offset: 0x181C558 VA: 0x181C558 Slot: 9
	public override void SetShadow(bool isShadow, bool isSkip) { }

	// RVA: 0x181C670 Offset: 0x181C670 VA: 0x181C670 Slot: 11
	public override void SetAlpha(float a) { }

	// RVA: 0x181C708 Offset: 0x181C708 VA: 0x181C708 Slot: 12
	public override void SetDepth(int d) { }

	// RVA: 0x181C7F0 Offset: 0x181C7F0 VA: 0x181C7F0 Slot: 13
	public override bool IsBusyMoveAlpha() { }

	// RVA: 0x181C854 Offset: 0x181C854 VA: 0x181C854 Slot: 14
	public override void MoveAlpha(float duration, float a) { }

	// RVA: 0x181C8FC Offset: 0x181C8FC VA: 0x181C8FC Slot: 15
	public override void MoveAlphaSpeed(float speed, float a) { }

	// RVA: 0x181C9A4 Offset: 0x181C9A4 VA: 0x181C9A4 Slot: 21
	public override void SetSpecialEffect(string n, Vector3 pos, float time, Color color, float range, bool isSkip, bool isPause) { }

	// RVA: 0x181CDEC Offset: 0x181CDEC VA: 0x181CDEC Slot: 22
	public override void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x181CE78 Offset: 0x181CE78 VA: 0x181CE78 Slot: 23
	public override void SetSortingOrder(int order) { }
}

// Namespace: 
