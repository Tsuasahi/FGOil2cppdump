
	// RVA: 0x2186A4C Offset: 0x2186A4C VA: 0x2186A4C
	private static void .cctor() { }

	// RVA: 0x2186AFC Offset: 0x2186AFC VA: 0x2186AFC
	public bool get_IsReadOnly() { }

	// RVA: 0x2186B04 Offset: 0x2186B04 VA: 0x2186B04 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x2186B10 Offset: 0x2186B10 VA: 0x2186B10 Slot: 0
	public override bool Equals(object o) { }

	// RVA: 0x2186BA0 Offset: 0x2186BA0 VA: 0x2186BA0 Slot: 5
	public override bool IsDefaultAttribute() { }
}

// Namespace: System.ComponentModel
[AttributeUsageAttribute] // RVA: 0xBD0308 Offset: 0xBD0308 VA: 0xBD0308
[ObsoleteAttribute] // RVA: 0xBD0308 Offset: 0xBD0308 VA: 0xBD0308
public class RecommendedAsConfigurableAttribute : Attribute // TypeDefIndex: 1276
{
	// Fields
	private bool recommendedAsConfigurable; // 0x10
	public static readonly RecommendedAsConfigurableAttribute Default; // 0x0
	public static readonly RecommendedAsConfigurableAttribute No; // 0x8
	public static readonly RecommendedAsConfigurableAttribute Yes; // 0x10

	// Properties
	public bool RecommendedAsConfigurable { get; }

	// Methods

	// RVA: 0x2186C10 Offset: 0x2186C10 VA: 0x2186C10
	public void .ctor(bool recommendedAsConfigurable) { }

	// RVA: 0x2186C40 Offset: 0x2186C40 VA: 0x2186C40
	private static void .cctor() { }

	// RVA: 0x2186CF0 Offset: 0x2186CF0 VA: 0x2186CF0
	public bool get_RecommendedAsConfigurable() { }

	// RVA: 0x2186CF8 Offset: 0x2186CF8 VA: 0x2186CF8 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0x2186DA4 Offset: 0x2186DA4 VA: 0x2186DA4 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x2186DB0 Offset: 0x2186DB0 VA: 0x2186DB0 Slot: 5
	public override bool IsDefaultAttribute() { }
}

// Namespace: System.ComponentModel
public class ReferenceConverter : TypeConverter // TypeDefIndex: 1277
{
	// Fields
	private Type reference_type; // 0x10

	// Methods

	// RVA: 0x2186E48 Offset: 0x2186E48 VA: 0x2186E48
	public void .ctor(Type type) { }

	// RVA: 0x2186E74 Offset: 0x2186E74 VA: 0x2186E74 Slot: 4
	public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) { }

	// RVA: 0x2186F1C Offset: 0x2186F1C VA: 0x2186F1C Slot: 6
	public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) { }

	// RVA: 0x21873D4 Offset: 0x21873D4 VA: 0x21873D4 Slot: 7
	public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) { }

	// RVA: 0x21878E4 Offset: 0x21878E4 VA: 0x21878E4 Slot: 12
	public override TypeConverter.StandardValuesCollection GetStandardValues(ITypeDescriptorContext context) { }

	// RVA: 0x2187FD0 Offset: 0x2187FD0 VA: 0x2187FD0 Slot: 13
	public override bool GetStandardValuesExclusive(ITypeDescriptorContext context) { }

	// RVA: 0x2187FD8 Offset: 0x2187FD8 VA: 0x2187FD8 Slot: 14
	public override bool GetStandardValuesSupported(ITypeDescriptorContext context) { }

	// RVA: 0x2187FE0 Offset: 0x2187FE0 VA: 0x2187FE0 Slot: 16
	protected virtual bool IsValueAllowed(ITypeDescriptorContext context, object value) { }
}

// Namespace: System.ComponentModel
internal class ReflectionEventDescriptor : EventDescriptor // TypeDefIndex: 1278
{
	// Fields
	private Type _eventType; // 0x28
	private Type _componentType; // 0x30
	private EventInfo _eventInfo; // 0x38
	private MethodInfo add_method; // 0x40
	private MethodInfo remove_method; // 0x48

	// Properties
	public override Type ComponentType { get; }
	public override Type EventType { get; }
	public override bool IsMulticast { get; }

	// Methods

	// RVA: 0x2187FE8 Offset: 0x2187FE8 VA: 0x2187FE8
	public void .ctor(EventInfo eventInfo) { }

	// RVA: 0x218814C Offset: 0x218814C VA: 0x218814C
	public void .ctor(Type componentType, EventDescriptor oldEventDescriptor, Attribute[] attrs) { }

	// RVA: 0x2188234 Offset: 0x2188234 VA: 0x2188234
	public void .ctor(Type componentType, string name, Type type, Attribute[] attrs) { }

	// RVA: 0x21882DC Offset: 0x21882DC VA: 0x21882DC
	private EventInfo GetEventInfo() { }

	// RVA: 0x2188408 Offset: 0x2188408 VA: 0x2188408 Slot: 17
	public override void AddEventHandler(object component, Delegate value) { }

	// RVA: 0x21884E4 Offset: 0x21884E4 VA: 0x21884E4 Slot: 18
	public override void RemoveEventHandler(object component, Delegate value) { }

	// RVA: 0x21885C0 Offset: 0x21885C0 VA: 0x21885C0 Slot: 19
	public override Type get_ComponentType() { }

	// RVA: 0x21885C8 Offset: 0x21885C8 VA: 0x21885C8 Slot: 20
	public override Type get_EventType() { }

	// RVA: 0x21885D0 Offset: 0x21885D0 VA: 0x21885D0 Slot: 21
	public override bool get_IsMulticast() { }
}

// Namespace: System.ComponentModel
internal class ReflectionPropertyDescriptor : PropertyDescriptor // TypeDefIndex: 1279
{
	// Fields
	private PropertyInfo _member; // 0x38
	private Type _componentType; // 0x40
	private Type _propertyType; // 0x48
	private PropertyInfo getter; // 0x50
	private PropertyInfo setter; // 0x58
	private bool accessors_inited; // 0x60

	// Properties
	public override Type ComponentType { get; }
	public override bool IsReadOnly { get; }
	public override Type PropertyType { get; }

	// Methods

	// RVA: 0x2188600 Offset: 0x2188600 VA: 0x2188600
	public void .ctor(Type componentType, PropertyDescriptor oldPropertyDescriptor, Attribute[] attributes) { }

	// RVA: 0x2188660 Offset: 0x2188660 VA: 0x2188660
	public void .ctor(Type componentType, string name, Type type, Attribute[] attributes) { }

	// RVA: 0x21886AC Offset: 0x21886AC VA: 0x21886AC
	public void .ctor(PropertyInfo info) { }

	// RVA: 0x2188760 Offset: 0x2188760 VA: 0x2188760
	private PropertyInfo GetPropertyInfo() { }

	// RVA: 0x21888F8 Offset: 0x21888F8 VA: 0x21888F8 Slot: 17
	public override Type get_ComponentType() { }

	// RVA: 0x2188900 Offset: 0x2188900 VA: 0x2188900 Slot: 20
	public override bool get_IsReadOnly() { }

	// RVA: 0x2188A70 Offset: 0x2188A70 VA: 0x2188A70 Slot: 21
	public override Type get_PropertyType() { }

	// RVA: 0x2188A78 Offset: 0x2188A78 VA: 0x2188A78 Slot: 6
	protected override void FillAttributes(IList attributeList) { }

	// RVA: 0x21892D4 Offset: 0x21892D4 VA: 0x21892D4 Slot: 26
	public override object GetValue(object component) { }

	// RVA: 0x2189584 Offset: 0x2189584 VA: 0x2189584
	private DesignerTransaction CreateTransaction(object obj, string description) { }

	// RVA: 0x2189A70 Offset: 0x2189A70 VA: 0x2189A70
	private void EndTransaction(object obj, DesignerTransaction tran, object oldValue, object newValue, bool commit) { }

	// RVA: 0x218932C Offset: 0x218932C VA: 0x218932C
	private void InitAccessors() { }

	// RVA: 0x2189E0C Offset: 0x2189E0C VA: 0x2189E0C Slot: 27
	public override void SetValue(object component, object value) { }

	// RVA: 0x218A00C Offset: 0x218A00C VA: 0x218A00C
	private MethodInfo FindPropertyMethod(object o, string method_name) { }

	// RVA: 0x218A1B8 Offset: 0x218A1B8 VA: 0x218A1B8 Slot: 28
	public override void ResetValue(object component) { }

	// RVA: 0x218A4EC Offset: 0x218A4EC VA: 0x218A4EC Slot: 29
	public override bool CanResetValue(object component) { }

	// RVA: 0x218A7CC Offset: 0x218A7CC VA: 0x218A7CC Slot: 30
	public override bool ShouldSerializeValue(object component) { }
}

// Namespace: System.ComponentModel
public class RefreshEventArgs : EventArgs // TypeDefIndex: 1280
{
	// Fields
	private object component; // 0x10
	private Type type; // 0x18

	// Properties
	public object ComponentChanged { get; }
	public Type TypeChanged { get; }

	// Methods

	// RVA: 0x218AA98 Offset: 0x218AA98 VA: 0x218AA98
	public void .ctor(object componentChanged) { }

	// RVA: 0x218AB6C Offset: 0x218AB6C VA: 0x218AB6C
	public void .ctor(Type typeChanged) { }

	// RVA: 0x218ABE8 Offset: 0x218ABE8 VA: 0x218ABE8
	public object get_ComponentChanged() { }

	// RVA: 0x218ABF0 Offset: 0x218ABF0 VA: 0x218ABF0
	public Type get_TypeChanged() { }
}

// Namespace: System.ComponentModel
public enum RefreshProperties // TypeDefIndex: 1281
{
	// Fields
	public int value__; // 0x0
	public const RefreshProperties All = 1;
	public const RefreshProperties None = 0;
	public const RefreshProperties Repaint = 2;
}

// Namespace: System.ComponentModel
[AttributeUsageAttribute] // RVA: 0xBD0358 Offset: 0xBD0358 VA: 0xBD0358
public sealed class RefreshPropertiesAttribute : Attribute // TypeDefIndex: 1282
{
	// Fields
	private RefreshProperties refresh; // 0x10
	public static readonly RefreshPropertiesAttribute All; // 0x0
	public static readonly RefreshPropertiesAttribute Default; // 0x8
	public static readonly RefreshPropertiesAttribute Repaint; // 0x10

	// Properties
	public RefreshProperties RefreshProperties { get; }

	// Methods

	// RVA: 0x218AFD8 Offset: 0x218AFD8 VA: 0x218AFD8
	public void .ctor(RefreshProperties refresh) { }

	// RVA: 0x218B004 Offset: 0x218B004 VA: 0x218B004
	private static void .cctor() { }

	// RVA: 0x218B0B8 Offset: 0x218B0B8 VA: 0x218B0B8
	public RefreshProperties get_RefreshProperties() { }

	// RVA: 0x218B0C0 Offset: 0x218B0C0 VA: 0x218B0C0 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0x218B150 Offset: 0x218B150 VA: 0x218B150 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x218B1C4 Offset: 0x218B1C4 VA: 0x218B1C4 Slot: 5
	public override bool IsDefaultAttribute() { }
}

// Namespace: System.ComponentModel
public class RunWorkerCompletedEventArgs : AsyncCompletedEventArgs // TypeDefIndex: 1283
{
	// Fields
	private object result; // 0x28

	// Properties
	public object Result { get; }
	public object UserState { get; }

	// Methods

	// RVA: 0x218B238 Offset: 0x218B238 VA: 0x218B238
	public void .ctor(object result, Exception error, bool cancelled) { }

	// RVA: 0x218B274 Offset: 0x218B274 VA: 0x218B274
	public object get_Result() { }

	// RVA: 0x218B29C Offset: 0x218B29C VA: 0x218B29C
	public object get_UserState() { }
}

// Namespace: System.ComponentModel
public class SByteConverter : BaseNumberConverter // TypeDefIndex: 1284
{
	// Properties
	internal override bool SupportHex { get; }

	// Methods

	// RVA: 0x218B6B0 Offset: 0x218B6B0 VA: 0x218B6B0
	public void .ctor() { }

	// RVA: 0x218B738 Offset: 0x218B738 VA: 0x218B738 Slot: 16
	internal override bool get_SupportHex() { }

	// RVA: 0x218B740 Offset: 0x218B740 VA: 0x218B740 Slot: 17
	internal override string ConvertToString(object value, NumberFormatInfo format) { }

	// RVA: 0x218B7C8 Offset: 0x218B7C8 VA: 0x218B7C8 Slot: 18
	internal override object ConvertFromString(string value, NumberFormatInfo format) { }

	// RVA: 0x218B844 Offset: 0x218B844 VA: 0x218B844 Slot: 19
	internal override object ConvertFromString(string value, int fromBase) { }
}

// Namespace: System.ComponentModel
public class SingleConverter : BaseNumberConverter // TypeDefIndex: 1285
{
	// Properties
	internal override bool SupportHex { get; }

	// Methods

	// RVA: 0x218B8DC Offset: 0x218B8DC VA: 0x218B8DC
	public void .ctor() { }

	// RVA: 0x218B964 Offset: 0x218B964 VA: 0x218B964 Slot: 16
	internal override bool get_SupportHex() { }

	// RVA: 0x218B96C Offset: 0x218B96C VA: 0x218B96C Slot: 17
	internal override string ConvertToString(object value, NumberFormatInfo format) { }

	// RVA: 0x218B9F4 Offset: 0x218B9F4 VA: 0x218B9F4 Slot: 18
	internal override object ConvertFromString(string value, NumberFormatInfo format) { }
}

// Namespace: System.ComponentModel
public class StringConverter : TypeConverter // TypeDefIndex: 1286
{
	// Methods

	// RVA: 0x218BA6C Offset: 0x218BA6C VA: 0x218BA6C
	public void .ctor() { }

	// RVA: 0x218BA74 Offset: 0x218BA74 VA: 0x218BA74 Slot: 4
	public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) { }

	// RVA: 0x218BB08 Offset: 0x218BB08 VA: 0x218BB08 Slot: 6
	public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) { }
}

// Namespace: System.ComponentModel
public class TimeSpanConverter : TypeConverter // TypeDefIndex: 1287
{
	// Methods

	// RVA: 0x218BBAC Offset: 0x218BBAC VA: 0x218BBAC
	public void .ctor() { }

	// RVA: 0x218BBB4 Offset: 0x218BBB4 VA: 0x218BBB4 Slot: 4
	public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) { }

	// RVA: 0x218BC48 Offset: 0x218BC48 VA: 0x218BC48 Slot: 5
	public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) { }

	// RVA: 0x218BDA0 Offset: 0x218BDA0 VA: 0x218BDA0 Slot: 6
	public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) { }

	// RVA: 0x218BFF4 Offset: 0x218BFF4 VA: 0x218BFF4 Slot: 7
	public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) { }
}

// Namespace: System.ComponentModel
[AttributeUsageAttribute] // RVA: 0xBD036C Offset: 0xBD036C VA: 0xBD036C
public class ToolboxItemAttribute : Attribute // TypeDefIndex: 1288
{
	// Fields
	private const string defaultItemType = "System.Drawing.Design.ToolboxItem, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a";
	public static readonly ToolboxItemAttribute Default; // 0x0
	public static readonly ToolboxItemAttribute None; // 0x8
	private Type itemType; // 0x10
	private string itemTypeName; // 0x18

	// Properties
	public Type ToolboxItemType { get; }
	public string ToolboxItemTypeName { get; }

	// Methods

	// RVA: 0x218C2C0 Offset: 0x218C2C0 VA: 0x218C2C0
	public void .ctor(bool defaultType) { }

	// RVA: 0x218C32C Offset: 0x218C32C VA: 0x218C32C
	public void .ctor(string toolboxItemName) { }

	// RVA: 0x218C358 Offset: 0x218C358 VA: 0x218C358
	public void .ctor(Type toolboxItemType) { }

	// RVA: 0x218C384 Offset: 0x218C384 VA: 0x218C384
	private static void .cctor() { }

	// RVA: 0x218C420 Offset: 0x218C420 VA: 0x218C420
	public Type get_ToolboxItemType() { }

	// RVA: 0x218C5C4 Offset: 0x218C5C4 VA: 0x218C5C4
	public string get_ToolboxItemTypeName() { }

	// RVA: 0x218C658 Offset: 0x218C658 VA: 0x218C658 Slot: 0
	public override bool Equals(object o) { }

	// RVA: 0x218C748 Offset: 0x218C748 VA: 0x218C748 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x218C768 Offset: 0x218C768 VA: 0x218C768 Slot: 5
	public override bool IsDefaultAttribute() { }
}

// Namespace: System.ComponentModel
[AttributeUsageAttribute] // RVA: 0xBD0380 Offset: 0xBD0380 VA: 0xBD0380
[Serializable]
public sealed class ToolboxItemFilterAttribute : Attribute // TypeDefIndex: 1289
{
	// Fields
	private string Filter; // 0x10
	private ToolboxItemFilterType ItemFilterType; // 0x18

	// Properties
	public string FilterString { get; }
	public ToolboxItemFilterType FilterType { get; }
	public override object TypeId { get; }

	// Methods

	// RVA: 0x218C7E0 Offset: 0x218C7E0 VA: 0x218C7E0
	public void .ctor(string filterString) { }

	// RVA: 0x218C810 Offset: 0x218C810 VA: 0x218C810
	public void .ctor(string filterString, ToolboxItemFilterType filterType) { }

	// RVA: 0x218C84C Offset: 0x218C84C VA: 0x218C84C
	public string get_FilterString() { }

	// RVA: 0x218C854 Offset: 0x218C854 VA: 0x218C854
	public ToolboxItemFilterType get_FilterType() { }

	// RVA: 0x218C85C Offset: 0x218C85C VA: 0x218C85C Slot: 4
	public override object get_TypeId() { }

	// RVA: 0x218C8E0 Offset: 0x218C8E0 VA: 0x218C8E0 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0x218CA60 Offset: 0x218CA60 VA: 0x218CA60 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x218CB3C Offset: 0x218CB3C VA: 0x218CB3C Slot: 6
	public override bool Match(object obj) { }

	// RVA: 0x218CA90 Offset: 0x218CA90 VA: 0x218CA90 Slot: 3
	public override string ToString() { }
}

// Namespace: System.ComponentModel
public enum ToolboxItemFilterType // TypeDefIndex: 1290
{
	// Fields
	public int value__; // 0x0
	public const ToolboxItemFilterType Allow = 0;
	public const ToolboxItemFilterType Custom = 1;
	public const ToolboxItemFilterType Prevent = 2;
	public const ToolboxItemFilterType Require = 3;
}

// Namespace: System.ComponentModel
[ComVisibleAttribute] // RVA: 0xBD03CC Offset: 0xBD03CC VA: 0xBD03CC
public class TypeConverter // TypeDefIndex: 1291
{
	// Methods

	// RVA: 0x2181318 Offset: 0x2181318 VA: 0x2181318
	public void .ctor() { }

	// RVA: 0x218CBE8 Offset: 0x218CBE8 VA: 0x218CBE8
	public bool CanConvertFrom(Type sourceType) { }

	// RVA: 0x2181B54 Offset: 0x2181B54 VA: 0x2181B54 Slot: 4
	public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) { }

	// RVA: 0x218CC00 Offset: 0x218CC00 VA: 0x218CC00
	public bool CanConvertTo(Type destinationType) { }

	// RVA: 0x218BD20 Offset: 0x218BD20 VA: 0x218BD20 Slot: 5
	public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) { }

	// RVA: 0x218CC18 Offset: 0x218CC18 VA: 0x218CC18
	public object ConvertFrom(object o) { }

	// RVA: 0x2181D60 Offset: 0x2181D60 VA: 0x2181D60 Slot: 6
	public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) { }

	// RVA: 0x218CEB0 Offset: 0x218CEB0 VA: 0x218CEB0
	public object ConvertFromInvariantString(string text) { }

	// RVA: 0x218CEC0 Offset: 0x218CEC0 VA: 0x218CEC0
	public object ConvertFromInvariantString(ITypeDescriptorContext context, string text) { }

	// RVA: 0x218CF5C Offset: 0x218CF5C VA: 0x218CF5C
	public object ConvertFromString(string text) { }

	// RVA: 0x218CF60 Offset: 0x218CF60 VA: 0x218CF60
	public object ConvertFromString(ITypeDescriptorContext context, string text) { }

	// RVA: 0x218CF50 Offset: 0x218CF50 VA: 0x218CF50
	public object ConvertFromString(ITypeDescriptorContext context, CultureInfo culture, string text) { }

	// RVA: 0x218CFF0 Offset: 0x218CFF0 VA: 0x218CFF0
	public object ConvertTo(object value, Type destinationType) { }

	// RVA: 0x2181F14 Offset: 0x2181F14 VA: 0x2181F14 Slot: 7
	public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) { }

	// RVA: 0x218D294 Offset: 0x218D294 VA: 0x218D294
	public string ConvertToInvariantString(object value) { }

	// RVA: 0x218D2A4 Offset: 0x218D2A4 VA: 0x218D2A4
	public string ConvertToInvariantString(ITypeDescriptorContext context, object value) { }

	// RVA: 0x218D3E8 Offset: 0x218D3E8 VA: 0x218D3E8
	public string ConvertToString(object value) { }

	// RVA: 0x218D528 Offset: 0x218D528 VA: 0x218D528
	public string ConvertToString(ITypeDescriptorContext context, object value) { }

	// RVA: 0x218D66C Offset: 0x218D66C VA: 0x218D66C
	public string ConvertToString(ITypeDescriptorContext context, CultureInfo culture, object value) { }

	// RVA: 0x218CCA4 Offset: 0x218CCA4 VA: 0x218CCA4
	protected Exception GetConvertFromException(object value) { }

	// RVA: 0x218D014 Offset: 0x218D014 VA: 0x218D014
	protected Exception GetConvertToException(object value, Type destinationType) { }

	// RVA: 0x218D784 Offset: 0x218D784 VA: 0x218D784
	public object CreateInstance(IDictionary propertyValues) { }

	// RVA: 0x2182060 Offset: 0x2182060 VA: 0x2182060 Slot: 8
	public virtual object CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues) { }

	// RVA: 0x218D79C Offset: 0x218D79C VA: 0x218D79C
	public bool GetCreateInstanceSupported() { }

	// RVA: 0x2182080 Offset: 0x2182080 VA: 0x2182080 Slot: 9
	public virtual bool GetCreateInstanceSupported(ITypeDescriptorContext context) { }

	// RVA: 0x218D7AC Offset: 0x218D7AC VA: 0x218D7AC
	public PropertyDescriptorCollection GetProperties(object value) { }

	// RVA: 0x218D7BC Offset: 0x218D7BC VA: 0x218D7BC
	public PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object value) { }

	// RVA: 0x21820A0 Offset: 0x21820A0 VA: 0x21820A0 Slot: 10
	public virtual PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object value, Attribute[] attributes) { }

	// RVA: 0x218D8CC Offset: 0x218D8CC VA: 0x218D8CC
	public bool GetPropertiesSupported() { }

	// RVA: 0x218D8DC Offset: 0x218D8DC VA: 0x218D8DC Slot: 11
	public virtual bool GetPropertiesSupported(ITypeDescriptorContext context) { }

	// RVA: 0x218D8E4 Offset: 0x218D8E4 VA: 0x218D8E4
	public ICollection GetStandardValues() { }

	// RVA: 0x21821F4 Offset: 0x21821F4 VA: 0x21821F4 Slot: 12
	public virtual TypeConverter.StandardValuesCollection GetStandardValues(ITypeDescriptorContext context) { }

	// RVA: 0x218D8F4 Offset: 0x218D8F4 VA: 0x218D8F4
	public bool GetStandardValuesExclusive() { }

	// RVA: 0x2182214 Offset: 0x2182214 VA: 0x2182214 Slot: 13
	public virtual bool GetStandardValuesExclusive(ITypeDescriptorContext context) { }

	// RVA: 0x218D904 Offset: 0x218D904 VA: 0x218D904
	public bool GetStandardValuesSupported() { }

	// RVA: 0x2182238 Offset: 0x2182238 VA: 0x2182238 Slot: 14
	public virtual bool GetStandardValuesSupported(ITypeDescriptorContext context) { }

	// RVA: 0x218D918 Offset: 0x218D918 VA: 0x218D918
	public bool IsValid(object value) { }

	// RVA: 0x2182260 Offset: 0x2182260 VA: 0x2182260 Slot: 15
	public virtual bool IsValid(ITypeDescriptorContext context, object value) { }

	// RVA: 0x218D934 Offset: 0x218D934 VA: 0x218D934
	protected PropertyDescriptorCollection SortProperties(PropertyDescriptorCollection props, string[] names) { }
}

// Namespace: 
[DefaultMemberAttribute] // RVA: 0xBD03E0 Offset: 0xBD03E0 VA: 0xBD03E0
public class TypeConverter.StandardValuesCollection : ICollection, IEnumerable // TypeDefIndex: 1292
{
	// Fields
	private ICollection values; // 0x10

	// Properties
	private bool System.Collections.ICollection.IsSynchronized { get; }
	private object System.Collections.ICollection.SyncRoot { get; }
	private int System.Collections.ICollection.Count { get; }
	public int Count { get; }
	public object Item { get; }

	// Methods

	// RVA: 0x21821C8 Offset: 0x21821C8 VA: 0x21821C8
	public void .ctor(ICollection values) { }

	// RVA: 0x218DDAC Offset: 0x218DDAC VA: 0x218DDAC Slot: 7
	private void System.Collections.ICollection.CopyTo(Array array, int index) { }

	// RVA: 0x218DE80 Offset: 0x218DE80 VA: 0x218DE80 Slot: 8
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x218DF38 Offset: 0x218DF38 VA: 0x218DF38 Slot: 5
	private bool System.Collections.ICollection.get_IsSynchronized() { }

	// RVA: 0x218DF40 Offset: 0x218DF40 VA: 0x218DF40 Slot: 6
	private object System.Collections.ICollection.get_SyncRoot() { }

	// RVA: 0x218DF48 Offset: 0x218DF48 VA: 0x218DF48 Slot: 4
	private int System.Collections.ICollection.get_Count() { }

	// RVA: 0x218DDB0 Offset: 0x218DDB0 VA: 0x218DDB0 Slot: 9
	public void CopyTo(Array array, int index) { }

	// RVA: 0x218DE84 Offset: 0x218DE84 VA: 0x218DE84 Slot: 10
	public IEnumerator GetEnumerator() { }

	// RVA: 0x218DF4C Offset: 0x218DF4C VA: 0x218DF4C Slot: 11
	public int get_Count() { }

	// RVA: 0x218E000 Offset: 0x218E000 VA: 0x218E000
	public object get_Item(int index) { }
}

// Namespace: 
protected abstract class TypeConverter.SimplePropertyDescriptor : PropertyDescriptor // TypeDefIndex: 1293
{
	// Fields
	private Type componentType; // 0x38
	private Type propertyType; // 0x40

	// Properties
	public override Type ComponentType { get; }
	public override Type PropertyType { get; }
	public override bool IsReadOnly { get; }

	// Methods

	// RVA: 0x218D97C Offset: 0x218D97C VA: 0x218D97C
	public void .ctor(Type componentType, string name, Type propertyType) { }

	// RVA: 0x218D9BC Offset: 0x218D9BC VA: 0x218D9BC
	public void .ctor(Type componentType, string name, Type propertyType, Attribute[] attributes) { }

	// RVA: 0x218DA08 Offset: 0x218DA08 VA: 0x218DA08 Slot: 17
	public override Type get_ComponentType() { }

	// RVA: 0x218DA10 Offset: 0x218DA10 VA: 0x218DA10 Slot: 21
	public override Type get_PropertyType() { }

	// RVA: 0x218DA18 Offset: 0x218DA18 VA: 0x218DA18 Slot: 20
	public override bool get_IsReadOnly() { }

	// RVA: 0x218DAB4 Offset: 0x218DAB4 VA: 0x218DAB4 Slot: 30
	public override bool ShouldSerializeValue(object component) { }

	// RVA: 0x218DABC Offset: 0x218DABC VA: 0x218DABC Slot: 29
	public override bool CanResetValue(object component) { }

	// RVA: 0x218DC34 Offset: 0x218DC34 VA: 0x218DC34 Slot: 28
	public override void ResetValue(object component) { }
}

// Namespace: System.ComponentModel
[AttributeUsageAttribute] // RVA: 0xBD0418 Offset: 0xBD0418 VA: 0xBD0418
[ComVisibleAttribute] // RVA: 0xBD0418 Offset: 0xBD0418 VA: 0xBD0418
public sealed class TypeConverterAttribute : Attribute // TypeDefIndex: 1294
{
	// Fields
	public static readonly TypeConverterAttribute Default; // 0x0
	private string converter_type; // 0x10

	// Properties
	public string ConverterTypeName { get; }

	// Methods

	// RVA: 0x218E194 Offset: 0x218E194 VA: 0x218E194
	public void .ctor() { }

	// RVA: 0x218E210 Offset: 0x218E210 VA: 0x218E210
	public void .ctor(string typeName) { }

	// RVA: 0x218E23C Offset: 0x218E23C VA: 0x218E23C
	public void .ctor(Type type) { }

	// RVA: 0x218E288 Offset: 0x218E288 VA: 0x218E288
	private static void .cctor() { }

	// RVA: 0x218E2E8 Offset: 0x218E2E8 VA: 0x218E2E8 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0x218E394 Offset: 0x218E394 VA: 0x218E394 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x21830F4 Offset: 0x21830F4 VA: 0x21830F4
	public string get_ConverterTypeName() { }
}

// Namespace: System.ComponentModel
public abstract class TypeDescriptionProvider // TypeDefIndex: 1295
{
	// Fields
	private TypeDescriptionProvider.EmptyCustomTypeDescriptor _emptyCustomTypeDescriptor; // 0x10
	private TypeDescriptionProvider _parent; // 0x18

	// Methods

	// RVA: 0x218E3C4 Offset: 0x218E3C4 VA: 0x218E3C4
	protected void .ctor() { }

	// RVA: 0x218E3CC Offset: 0x218E3CC VA: 0x218E3CC
	protected void .ctor(TypeDescriptionProvider parent) { }

	// RVA: 0x218E3F8 Offset: 0x218E3F8 VA: 0x218E3F8 Slot: 4
	public virtual object CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, object[] args) { }

	// RVA: 0x218E41C Offset: 0x218E41C VA: 0x218E41C Slot: 5
	public virtual IDictionary GetCache(object instance) { }

	// RVA: 0x218E434 Offset: 0x218E434 VA: 0x218E434 Slot: 6
	public virtual ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance) { }

	// RVA: 0x218E4D8 Offset: 0x218E4D8 VA: 0x218E4D8 Slot: 7
	public virtual string GetFullComponentName(object component) { }

	// RVA: 0x218E67C Offset: 0x218E67C VA: 0x218E67C
	public Type GetReflectionType(object instance) { }

	// RVA: 0x218E730 Offset: 0x218E730 VA: 0x218E730
	public Type GetReflectionType(Type objectType) { }

	// RVA: 0x218E740 Offset: 0x218E740 VA: 0x218E740 Slot: 8
	public virtual Type GetReflectionType(Type objectType, object instance) { }

	// RVA: 0x218E5C8 Offset: 0x218E5C8 VA: 0x218E5C8
	public ICustomTypeDescriptor GetTypeDescriptor(object instance) { }

	// RVA: 0x218E75C Offset: 0x218E75C VA: 0x218E75C
	public ICustomTypeDescriptor GetTypeDescriptor(Type objectType) { }

	// RVA: 0x218E76C Offset: 0x218E76C VA: 0x218E76C Slot: 9
	public virtual ICustomTypeDescriptor GetTypeDescriptor(Type objectType, object instance) { }
}

// Namespace: 
private sealed class TypeDescriptionProvider.EmptyCustomTypeDescriptor : CustomTypeDescriptor // TypeDefIndex: 1296
{
	// Methods

	// RVA: 0x218E4D0 Offset: 0x218E4D0 VA: 0x218E4D0
	public void .ctor() { }
}

// Namespace: System.ComponentModel
public sealed class TypeDescriptor // TypeDefIndex: 1297
{
	// Fields
	private static readonly object creatingDefaultConverters; // 0x0
	private static ArrayList defaultConverters; // 0x8
	private static IComNativeDescriptorHandler descriptorHandler; // 0x10
	private static Hashtable componentTable; // 0x18
	private static Hashtable typeTable; // 0x20
	private static Hashtable editors; // 0x28
	private static object typeDescriptionProvidersLock; // 0x30
	private static Dictionary<Type, LinkedList<TypeDescriptionProvider>> typeDescriptionProviders; // 0x38
	private static object componentDescriptionProvidersLock; // 0x40
	private static Dictionary<WeakObjectWrapper, LinkedList<TypeDescriptionProvider>> componentDescriptionProviders; // 0x48
	private static EventHandler onDispose; // 0x50
	private static RefreshEventHandler Refreshed; // 0x58

	// Properties
	[MonoNotSupportedAttribute] // RVA: 0xBD2AD0 Offset: 0xBD2AD0 VA: 0xBD2AD0
	[EditorBrowsableAttribute] // RVA: 0xBD2AD0 Offset: 0xBD2AD0 VA: 0xBD2AD0
	public static Type ComObjectType { get; }
	private static ArrayList DefaultConverters { get; }
	[ObsoleteAttribute] // RVA: 0xBD2B20 Offset: 0xBD2B20 VA: 0xBD2B20
	public static IComNativeDescriptorHandler ComNativeDescriptorHandler { get; set; }

	// Methods

	// RVA: 0x218E810 Offset: 0x218E810 VA: 0x218E810
	private void .ctor() { }

	// RVA: 0x218E818 Offset: 0x218E818 VA: 0x218E818
	private static void .cctor() { }

	// RVA: 0x218EA00 Offset: 0x218EA00 VA: 0x218EA00
	public static void add_Refreshed(RefreshEventHandler value) { }

	// RVA: 0x218EAF0 Offset: 0x218EAF0 VA: 0x218EAF0
	public static void remove_Refreshed(RefreshEventHandler value) { }

	// RVA: 0x218EBE0 Offset: 0x218EBE0 VA: 0x218EBE0
	public static Type get_ComObjectType() { }

	[EditorBrowsableAttribute] // RVA: 0xBD12C4 Offset: 0xBD12C4 VA: 0xBD12C4
	// RVA: 0x218EC48 Offset: 0x218EC48 VA: 0x218EC48
	public static TypeDescriptionProvider AddAttributes(object instance, Attribute[] attributes) { }

	[EditorBrowsableAttribute] // RVA: 0xBD12D8 Offset: 0xBD12D8 VA: 0xBD12D8
	// RVA: 0x218F2F8 Offset: 0x218F2F8 VA: 0x218F2F8
	public static TypeDescriptionProvider AddAttributes(Type type, Attribute[] attributes) { }

	[EditorBrowsableAttribute] // RVA: 0xBD12EC Offset: 0xBD12EC VA: 0xBD12EC
	// RVA: 0x218F040 Offset: 0x218F040 VA: 0x218F040
	public static void AddProvider(TypeDescriptionProvider provider, object instance) { }

	[EditorBrowsableAttribute] // RVA: 0xBD1300 Offset: 0xBD1300 VA: 0xBD1300
	// RVA: 0x218F66C Offset: 0x218F66C VA: 0x218F66C
	public static void AddProvider(TypeDescriptionProvider provider, Type type) { }

	[MonoTODOAttribute] // RVA: 0xBD1314 Offset: 0xBD1314 VA: 0xBD1314
	// RVA: 0x2183D18 Offset: 0x2183D18 VA: 0x2183D18
	public static object CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, object[] args) { }

	[EditorBrowsableAttribute] // RVA: 0xBD1324 Offset: 0xBD1324 VA: 0xBD1324
	// RVA: 0x218FCB8 Offset: 0x218FCB8 VA: 0x218FCB8
	internal static void AddEditorTable(Type editorBaseType, Hashtable table) { }

	// RVA: 0x218FE5C Offset: 0x218FE5C VA: 0x218FE5C
	public static IDesigner CreateDesigner(IComponent component, Type designerBaseType) { }

	// RVA: 0x2190698 Offset: 0x2190698 VA: 0x2190698
	public static EventDescriptor CreateEvent(Type componentType, string name, Type type, Attribute[] attributes) { }

	// RVA: 0x2190720 Offset: 0x2190720 VA: 0x2190720
	public static EventDescriptor CreateEvent(Type componentType, EventDescriptor oldEventDescriptor, Attribute[] attributes) { }

	// RVA: 0x2190798 Offset: 0x2190798 VA: 0x2190798
	public static PropertyDescriptor CreateProperty(Type componentType, string name, Type type, Attribute[] attributes) { }

	// RVA: 0x219081C Offset: 0x219081C VA: 0x219081C
	public static PropertyDescriptor CreateProperty(Type componentType, PropertyDescriptor oldPropertyDescriptor, Attribute[] attributes) { }

	// RVA: 0x2189218 Offset: 0x2189218 VA: 0x2189218
	public static AttributeCollection GetAttributes(Type componentType) { }

	// RVA: 0x2190320 Offset: 0x2190320 VA: 0x2190320
	public static AttributeCollection GetAttributes(object component) { }

	[EditorBrowsableAttribute] // RVA: 0xBD1338 Offset: 0xBD1338 VA: 0xBD1338
	// RVA: 0x2190AC4 Offset: 0x2190AC4 VA: 0x2190AC4
	public static AttributeCollection GetAttributes(object component, bool noCustomTypeDesc) { }

	// RVA: 0x21910D0 Offset: 0x21910D0 VA: 0x21910D0
	public static string GetClassName(object component) { }

	[EditorBrowsableAttribute] // RVA: 0xBD134C Offset: 0xBD134C VA: 0xBD134C
	// RVA: 0x2191138 Offset: 0x2191138 VA: 0x2191138
	public static string GetClassName(object component, bool noCustomTypeDesc) { }

	// RVA: 0x2191488 Offset: 0x2191488 VA: 0x2191488
	public static string GetComponentName(object component) { }

	[EditorBrowsableAttribute] // RVA: 0xBD1360 Offset: 0xBD1360 VA: 0xBD1360
	// RVA: 0x21914F0 Offset: 0x21914F0 VA: 0x21914F0
	public static string GetComponentName(object component, bool noCustomTypeDesc) { }

	[MonoNotSupportedAttribute] // RVA: 0xBD1374 Offset: 0xBD1374 VA: 0xBD1374
	// RVA: 0x2191848 Offset: 0x2191848 VA: 0x2191848
	public static string GetFullComponentName(object component) { }

	[MonoNotSupportedAttribute] // RVA: 0xBD13AC Offset: 0xBD13AC VA: 0xBD13AC
	// RVA: 0x21918B0 Offset: 0x21918B0 VA: 0x21918B0
	public static string GetClassName(Type componentType) { }

	// RVA: 0x2191918 Offset: 0x2191918 VA: 0x2191918
	public static TypeConverter GetConverter(object component) { }

	[EditorBrowsableAttribute] // RVA: 0xBD13E4 Offset: 0xBD13E4 VA: 0xBD13E4
	// RVA: 0x2191980 Offset: 0x2191980 VA: 0x2191980
	public static TypeConverter GetConverter(object component, bool noCustomTypeDesc) { }

	// RVA: 0x219281C Offset: 0x219281C VA: 0x219281C
	private static ArrayList get_DefaultConverters() { }

	// RVA: 0x2181768 Offset: 0x2181768 VA: 0x2181768
	public static TypeConverter GetConverter(Type type) { }

	// RVA: 0x2191F48 Offset: 0x2191F48 VA: 0x2191F48
	private static Type FindDefaultConverterType(Type type) { }

	// RVA: 0x21937A0 Offset: 0x21937A0 VA: 0x21937A0
	public static EventDescriptor GetDefaultEvent(Type componentType) { }

	// RVA: 0x219381C Offset: 0x219381C VA: 0x219381C
	public static EventDescriptor GetDefaultEvent(object component) { }

	[EditorBrowsableAttribute] // RVA: 0xBD13F8 Offset: 0xBD13F8 VA: 0xBD13F8
	// RVA: 0x2193884 Offset: 0x2193884 VA: 0x2193884
	public static EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc) { }

	// RVA: 0x2193B4C Offset: 0x2193B4C VA: 0x2193B4C
	public static PropertyDescriptor GetDefaultProperty(Type componentType) { }

	// RVA: 0x2193BC8 Offset: 0x2193BC8 VA: 0x2193BC8
	public static PropertyDescriptor GetDefaultProperty(object component) { }

	[EditorBrowsableAttribute] // RVA: 0xBD140C Offset: 0xBD140C VA: 0xBD140C
	// RVA: 0x2193C30 Offset: 0x2193C30 VA: 0x2193C30
	public static PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc) { }

	// RVA: 0x2193EF8 Offset: 0x2193EF8 VA: 0x2193EF8
	internal static object CreateEditor(Type t, Type componentType) { }

	// RVA: 0x21940BC Offset: 0x21940BC VA: 0x21940BC
	private static object FindEditorInTable(Type componentType, Type editorBaseType, Hashtable table) { }

	// RVA: 0x218426C Offset: 0x218426C VA: 0x218426C
	public static object GetEditor(Type componentType, Type editorBaseType) { }

	// RVA: 0x21943FC Offset: 0x21943FC VA: 0x21943FC
	public static object GetEditor(object component, Type editorBaseType) { }

	[EditorBrowsableAttribute] // RVA: 0xBD1420 Offset: 0xBD1420 VA: 0xBD1420
	// RVA: 0x2194474 Offset: 0x2194474 VA: 0x2194474
	public static object GetEditor(object component, Type editorBaseType, bool noCustomTypeDesc) { }

	// RVA: 0x21948B0 Offset: 0x21948B0 VA: 0x21948B0
	public static EventDescriptorCollection GetEvents(object component) { }

	// RVA: 0x2194BE4 Offset: 0x2194BE4 VA: 0x2194BE4
	public static EventDescriptorCollection GetEvents(Type componentType) { }

	// RVA: 0x2194CD8 Offset: 0x2194CD8 VA: 0x2194CD8
	public static EventDescriptorCollection GetEvents(object component, Attribute[] attributes) { }

	[EditorBrowsableAttribute] // RVA: 0xBD1434 Offset: 0xBD1434 VA: 0xBD1434
	// RVA: 0x2194918 Offset: 0x2194918 VA: 0x2194918
	public static EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc) { }

	// RVA: 0x2194C4C Offset: 0x2194C4C VA: 0x2194C4C
	public static EventDescriptorCollection GetEvents(Type componentType, Attribute[] attributes) { }

	[EditorBrowsableAttribute] // RVA: 0xBD1448 Offset: 0xBD1448 VA: 0xBD1448
	// RVA: 0x2194D50 Offset: 0x2194D50 VA: 0x2194D50
	public static EventDescriptorCollection GetEvents(object component, Attribute[] attributes, bool noCustomTypeDesc) { }

	// RVA: 0x2195030 Offset: 0x2195030 VA: 0x2195030
	public static PropertyDescriptorCollection GetProperties(object component) { }

	// RVA: 0x2195378 Offset: 0x2195378 VA: 0x2195378
	public static PropertyDescriptorCollection GetProperties(Type componentType) { }

	// RVA: 0x2184080 Offset: 0x2184080 VA: 0x2184080
	public static PropertyDescriptorCollection GetProperties(object component, Attribute[] attributes) { }

	// RVA: 0x219546C Offset: 0x219546C VA: 0x219546C
	public static PropertyDescriptorCollection GetProperties(object component, Attribute[] attributes, bool noCustomTypeDesc) { }

	[EditorBrowsableAttribute] // RVA: 0xBD145C Offset: 0xBD145C VA: 0xBD145C
	// RVA: 0x2195098 Offset: 0x2195098 VA: 0x2195098
	public static PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc) { }

	// RVA: 0x21953E0 Offset: 0x21953E0 VA: 0x21953E0
	public static PropertyDescriptorCollection GetProperties(Type componentType, Attribute[] attributes) { }

	[EditorBrowsableAttribute] // RVA: 0xBD1470 Offset: 0xBD1470 VA: 0xBD1470
	// RVA: 0x218ED5C Offset: 0x218ED5C VA: 0x218ED5C
	public static TypeDescriptionProvider GetProvider(object instance) { }

	[EditorBrowsableAttribute] // RVA: 0xBD1484 Offset: 0xBD1484 VA: 0xBD1484
	// RVA: 0x218F40C Offset: 0x218F40C VA: 0x218F40C
	public static TypeDescriptionProvider GetProvider(Type type) { }

	[EditorBrowsableAttribute] // RVA: 0xBD1498 Offset: 0xBD1498 VA: 0xBD1498
	// RVA: 0x2195794 Offset: 0x2195794 VA: 0x2195794
	public static Type GetReflectionType(object instance) { }

	[EditorBrowsableAttribute] // RVA: 0xBD14AC Offset: 0xBD14AC VA: 0xBD14AC
	// RVA: 0x2195824 Offset: 0x2195824 VA: 0x2195824
	public static Type GetReflectionType(Type type) { }

	[EditorBrowsableAttribute] // RVA: 0xBD14C0 Offset: 0xBD14C0 VA: 0xBD14C0
	[MonoNotSupportedAttribute] // RVA: 0xBD14C0 Offset: 0xBD14C0 VA: 0xBD14C0
	// RVA: 0x21958B0 Offset: 0x21958B0 VA: 0x21958B0
	public static void CreateAssociation(object primary, object secondary) { }

	[MonoNotSupportedAttribute] // RVA: 0xBD1510 Offset: 0xBD1510 VA: 0xBD1510
