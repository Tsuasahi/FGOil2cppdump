	public bool RecommendedAsConfigurable { get; }

	// Methods

	// RVA: 0x1053838 Offset: 0x1053838 VA: 0x1053838
	public void .ctor(bool recommendedAsConfigurable) { }

	// RVA: 0x1053868 Offset: 0x1053868 VA: 0x1053868
	private static void .cctor() { }

	// RVA: 0x1053918 Offset: 0x1053918 VA: 0x1053918
	public bool get_RecommendedAsConfigurable() { }

	// RVA: 0x1053920 Offset: 0x1053920 VA: 0x1053920 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0x10539CC Offset: 0x10539CC VA: 0x10539CC Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x10539D8 Offset: 0x10539D8 VA: 0x10539D8 Slot: 5
	public override bool IsDefaultAttribute() { }
}

// Namespace: System.ComponentModel
public class ReferenceConverter : TypeConverter // TypeDefIndex: 1277
{
	// Fields
	private Type reference_type; // 0x10

	// Methods

	// RVA: 0x1053A70 Offset: 0x1053A70 VA: 0x1053A70
	public void .ctor(Type type) { }

	// RVA: 0x1053A9C Offset: 0x1053A9C VA: 0x1053A9C Slot: 4
	public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) { }

	// RVA: 0x1053B44 Offset: 0x1053B44 VA: 0x1053B44 Slot: 6
	public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) { }

	// RVA: 0x1053FFC Offset: 0x1053FFC VA: 0x1053FFC Slot: 7
	public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) { }

	// RVA: 0x105450C Offset: 0x105450C VA: 0x105450C Slot: 12
	public override TypeConverter.StandardValuesCollection GetStandardValues(ITypeDescriptorContext context) { }

	// RVA: 0x1054BF8 Offset: 0x1054BF8 VA: 0x1054BF8 Slot: 13
	public override bool GetStandardValuesExclusive(ITypeDescriptorContext context) { }

	// RVA: 0x1054C00 Offset: 0x1054C00 VA: 0x1054C00 Slot: 14
	public override bool GetStandardValuesSupported(ITypeDescriptorContext context) { }

	// RVA: 0x1054C08 Offset: 0x1054C08 VA: 0x1054C08 Slot: 16
	protected virtual bool IsValueAllowed(ITypeDescriptorContext context, object value) { }
}

// Namespace: System.ComponentModel
internal class ReflectionEventDescriptor : EventDescriptor // TypeDefIndex: 1278
{
	// Fields
	private Type _eventType; // 0x28
	private Type _componentType; // 0x30
	private EventInfo _eventInfo; // 0x38
	private MethodInfo add_method; // 0x40
	private MethodInfo remove_method; // 0x48

	// Properties
	public override Type ComponentType { get; }
	public override Type EventType { get; }
	public override bool IsMulticast { get; }

	// Methods

	// RVA: 0x1054C10 Offset: 0x1054C10 VA: 0x1054C10
	public void .ctor(EventInfo eventInfo) { }

	// RVA: 0x1054D74 Offset: 0x1054D74 VA: 0x1054D74
	public void .ctor(Type componentType, EventDescriptor oldEventDescriptor, Attribute[] attrs) { }

	// RVA: 0x1054E5C Offset: 0x1054E5C VA: 0x1054E5C
	public void .ctor(Type componentType, string name, Type type, Attribute[] attrs) { }

	// RVA: 0x1054F04 Offset: 0x1054F04 VA: 0x1054F04
	private EventInfo GetEventInfo() { }

	// RVA: 0x1055030 Offset: 0x1055030 VA: 0x1055030 Slot: 17
	public override void AddEventHandler(object component, Delegate value) { }

	// RVA: 0x105510C Offset: 0x105510C VA: 0x105510C Slot: 18
	public override void RemoveEventHandler(object component, Delegate value) { }

	// RVA: 0x10551E8 Offset: 0x10551E8 VA: 0x10551E8 Slot: 19
	public override Type get_ComponentType() { }

	// RVA: 0x10551F0 Offset: 0x10551F0 VA: 0x10551F0 Slot: 20
	public override Type get_EventType() { }

	// RVA: 0x10551F8 Offset: 0x10551F8 VA: 0x10551F8 Slot: 21
	public override bool get_IsMulticast() { }
}

// Namespace: System.ComponentModel
internal class ReflectionPropertyDescriptor : PropertyDescriptor // TypeDefIndex: 1279
{
	// Fields
	private PropertyInfo _member; // 0x38
	private Type _componentType; // 0x40
	private Type _propertyType; // 0x48
	private PropertyInfo getter; // 0x50
	private PropertyInfo setter; // 0x58
	private bool accessors_inited; // 0x60

	// Properties
	public override Type ComponentType { get; }
	public override bool IsReadOnly { get; }
	public override Type PropertyType { get; }

	// Methods

	// RVA: 0x1055228 Offset: 0x1055228 VA: 0x1055228
	public void .ctor(Type componentType, PropertyDescriptor oldPropertyDescriptor, Attribute[] attributes) { }

	// RVA: 0x1055288 Offset: 0x1055288 VA: 0x1055288
	public void .ctor(Type componentType, string name, Type type, Attribute[] attributes) { }

	// RVA: 0x10552D4 Offset: 0x10552D4 VA: 0x10552D4
	public void .ctor(PropertyInfo info) { }

	// RVA: 0x1055388 Offset: 0x1055388 VA: 0x1055388
	private PropertyInfo GetPropertyInfo() { }

	// RVA: 0x1055520 Offset: 0x1055520 VA: 0x1055520 Slot: 17
	public override Type get_ComponentType() { }

	// RVA: 0x1055528 Offset: 0x1055528 VA: 0x1055528 Slot: 20
	public override bool get_IsReadOnly() { }

	// RVA: 0x1055698 Offset: 0x1055698 VA: 0x1055698 Slot: 21
	public override Type get_PropertyType() { }

	// RVA: 0x10556A0 Offset: 0x10556A0 VA: 0x10556A0 Slot: 6
	protected override void FillAttributes(IList attributeList) { }

	// RVA: 0x1055EFC Offset: 0x1055EFC VA: 0x1055EFC Slot: 26
	public override object GetValue(object component) { }

	// RVA: 0x10561AC Offset: 0x10561AC VA: 0x10561AC
	private DesignerTransaction CreateTransaction(object obj, string description) { }

	// RVA: 0x1056698 Offset: 0x1056698 VA: 0x1056698
	private void EndTransaction(object obj, DesignerTransaction tran, object oldValue, object newValue, bool commit) { }

	// RVA: 0x1055F54 Offset: 0x1055F54 VA: 0x1055F54
	private void InitAccessors() { }

	// RVA: 0x1056A34 Offset: 0x1056A34 VA: 0x1056A34 Slot: 27
	public override void SetValue(object component, object value) { }

	// RVA: 0x1056C34 Offset: 0x1056C34 VA: 0x1056C34
	private MethodInfo FindPropertyMethod(object o, string method_name) { }

	// RVA: 0x1056DE0 Offset: 0x1056DE0 VA: 0x1056DE0 Slot: 28
	public override void ResetValue(object component) { }

	// RVA: 0x1057114 Offset: 0x1057114 VA: 0x1057114 Slot: 29
	public override bool CanResetValue(object component) { }

	// RVA: 0x10573F4 Offset: 0x10573F4 VA: 0x10573F4 Slot: 30
	public override bool ShouldSerializeValue(object component) { }
}

// Namespace: System.ComponentModel
public class RefreshEventArgs : EventArgs // TypeDefIndex: 1280
{
	// Fields
	private object component; // 0x10
	private Type type; // 0x18

	// Properties
	public object ComponentChanged { get; }
	public Type TypeChanged { get; }

	// Methods

	// RVA: 0x10576C0 Offset: 0x10576C0 VA: 0x10576C0
	public void .ctor(object componentChanged) { }

	// RVA: 0x1057794 Offset: 0x1057794 VA: 0x1057794
	public void .ctor(Type typeChanged) { }

	// RVA: 0x1057810 Offset: 0x1057810 VA: 0x1057810
	public object get_ComponentChanged() { }

	// RVA: 0x1057818 Offset: 0x1057818 VA: 0x1057818
	public Type get_TypeChanged() { }
}

// Namespace: System.ComponentModel
public enum RefreshProperties // TypeDefIndex: 1281
{
	// Fields
	public int value__; // 0x0
	public const RefreshProperties All = 1;
	public const RefreshProperties None = 0;
	public const RefreshProperties Repaint = 2;
}

// Namespace: System.ComponentModel
[AttributeUsageAttribute] // RVA: 0xC3C480 Offset: 0xC3C480 VA: 0xC3C480
public sealed class RefreshPropertiesAttribute : Attribute // TypeDefIndex: 1282
{
	// Fields
	private RefreshProperties refresh; // 0x10
	public static readonly RefreshPropertiesAttribute All; // 0x0
	public static readonly RefreshPropertiesAttribute Default; // 0x8
	public static readonly RefreshPropertiesAttribute Repaint; // 0x10

	// Properties
	public RefreshProperties RefreshProperties { get; }

	// Methods

	// RVA: 0x1057C00 Offset: 0x1057C00 VA: 0x1057C00
	public void .ctor(RefreshProperties refresh) { }

	// RVA: 0x1057C2C Offset: 0x1057C2C VA: 0x1057C2C
	private static void .cctor() { }

	// RVA: 0x1057CE0 Offset: 0x1057CE0 VA: 0x1057CE0
	public RefreshProperties get_RefreshProperties() { }

	// RVA: 0x1057CE8 Offset: 0x1057CE8 VA: 0x1057CE8 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0x1057D78 Offset: 0x1057D78 VA: 0x1057D78 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x1057DEC Offset: 0x1057DEC VA: 0x1057DEC Slot: 5
	public override bool IsDefaultAttribute() { }
}

// Namespace: System.ComponentModel
public class RunWorkerCompletedEventArgs : AsyncCompletedEventArgs // TypeDefIndex: 1283
{
	// Fields
	private object result; // 0x28

	// Properties
	public object Result { get; }
	public object UserState { get; }

	// Methods

	// RVA: 0x1057E60 Offset: 0x1057E60 VA: 0x1057E60
	public void .ctor(object result, Exception error, bool cancelled) { }

	// RVA: 0x1057E9C Offset: 0x1057E9C VA: 0x1057E9C
	public object get_Result() { }

	// RVA: 0x1057EC4 Offset: 0x1057EC4 VA: 0x1057EC4
	public object get_UserState() { }
}

// Namespace: System.ComponentModel
public class SByteConverter : BaseNumberConverter // TypeDefIndex: 1284
{
	// Properties
	internal override bool SupportHex { get; }

	// Methods

	// RVA: 0x10582D8 Offset: 0x10582D8 VA: 0x10582D8
	public void .ctor() { }

	// RVA: 0x1058360 Offset: 0x1058360 VA: 0x1058360 Slot: 16
	internal override bool get_SupportHex() { }

	// RVA: 0x1058368 Offset: 0x1058368 VA: 0x1058368 Slot: 17
	internal override string ConvertToString(object value, NumberFormatInfo format) { }

	// RVA: 0x10583F0 Offset: 0x10583F0 VA: 0x10583F0 Slot: 18
	internal override object ConvertFromString(string value, NumberFormatInfo format) { }

	// RVA: 0x105846C Offset: 0x105846C VA: 0x105846C Slot: 19
	internal override object ConvertFromString(string value, int fromBase) { }
}

// Namespace: System.ComponentModel
public class SingleConverter : BaseNumberConverter // TypeDefIndex: 1285
{
	// Properties
	internal override bool SupportHex { get; }

	// Methods

	// RVA: 0x1058504 Offset: 0x1058504 VA: 0x1058504
	public void .ctor() { }

	// RVA: 0x105858C Offset: 0x105858C VA: 0x105858C Slot: 16
	internal override bool get_SupportHex() { }

	// RVA: 0x1058594 Offset: 0x1058594 VA: 0x1058594 Slot: 17
	internal override string ConvertToString(object value, NumberFormatInfo format) { }

	// RVA: 0x105861C Offset: 0x105861C VA: 0x105861C Slot: 18
	internal override object ConvertFromString(string value, NumberFormatInfo format) { }
}

// Namespace: System.ComponentModel
public class StringConverter : TypeConverter // TypeDefIndex: 1286
{
	// Methods

	// RVA: 0x1058694 Offset: 0x1058694 VA: 0x1058694
	public void .ctor() { }

	// RVA: 0x105869C Offset: 0x105869C VA: 0x105869C Slot: 4
	public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) { }

	// RVA: 0x1058730 Offset: 0x1058730 VA: 0x1058730 Slot: 6
	public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) { }
}

// Namespace: System.ComponentModel
public class TimeSpanConverter : TypeConverter // TypeDefIndex: 1287
{
	// Methods

	// RVA: 0x10587D4 Offset: 0x10587D4 VA: 0x10587D4
	public void .ctor() { }

	// RVA: 0x10587DC Offset: 0x10587DC VA: 0x10587DC Slot: 4
	public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) { }

	// RVA: 0x1058870 Offset: 0x1058870 VA: 0x1058870 Slot: 5
	public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) { }

	// RVA: 0x10589C8 Offset: 0x10589C8 VA: 0x10589C8 Slot: 6
	public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) { }

	// RVA: 0x1058C1C Offset: 0x1058C1C VA: 0x1058C1C Slot: 7
	public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) { }
}

// Namespace: System.ComponentModel
[AttributeUsageAttribute] // RVA: 0xC3C494 Offset: 0xC3C494 VA: 0xC3C494
public class ToolboxItemAttribute : Attribute // TypeDefIndex: 1288
{
	// Fields
	private const string defaultItemType = "System.Drawing.Design.ToolboxItem, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a";
	public static readonly ToolboxItemAttribute Default; // 0x0
	public static readonly ToolboxItemAttribute None; // 0x8
	private Type itemType; // 0x10
	private string itemTypeName; // 0x18

	// Properties
	public Type ToolboxItemType { get; }
	public string ToolboxItemTypeName { get; }

	// Methods

	// RVA: 0x1058EE8 Offset: 0x1058EE8 VA: 0x1058EE8
	public void .ctor(bool defaultType) { }

	// RVA: 0x1058F54 Offset: 0x1058F54 VA: 0x1058F54
	public void .ctor(string toolboxItemName) { }

	// RVA: 0x1058F80 Offset: 0x1058F80 VA: 0x1058F80
	public void .ctor(Type toolboxItemType) { }

	// RVA: 0x1058FAC Offset: 0x1058FAC VA: 0x1058FAC
	private static void .cctor() { }

	// RVA: 0x1059048 Offset: 0x1059048 VA: 0x1059048
	public Type get_ToolboxItemType() { }

	// RVA: 0x10591EC Offset: 0x10591EC VA: 0x10591EC
	public string get_ToolboxItemTypeName() { }

	// RVA: 0x1059280 Offset: 0x1059280 VA: 0x1059280 Slot: 0
	public override bool Equals(object o) { }

	// RVA: 0x1059370 Offset: 0x1059370 VA: 0x1059370 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x1059390 Offset: 0x1059390 VA: 0x1059390 Slot: 5
	public override bool IsDefaultAttribute() { }
}

// Namespace: System.ComponentModel
[AttributeUsageAttribute] // RVA: 0xC3C4A8 Offset: 0xC3C4A8 VA: 0xC3C4A8
[Serializable]
public sealed class ToolboxItemFilterAttribute : Attribute // TypeDefIndex: 1289
{
	// Fields
	private string Filter; // 0x10
	private ToolboxItemFilterType ItemFilterType; // 0x18

	// Properties
	public string FilterString { get; }
	public ToolboxItemFilterType FilterType { get; }
	public override object TypeId { get; }

	// Methods

	// RVA: 0x1059408 Offset: 0x1059408 VA: 0x1059408
	public void .ctor(string filterString) { }

	// RVA: 0x1059438 Offset: 0x1059438 VA: 0x1059438
	public void .ctor(string filterString, ToolboxItemFilterType filterType) { }

	// RVA: 0x1059474 Offset: 0x1059474 VA: 0x1059474
	public string get_FilterString() { }

	// RVA: 0x105947C Offset: 0x105947C VA: 0x105947C
	public ToolboxItemFilterType get_FilterType() { }

	// RVA: 0x1059484 Offset: 0x1059484 VA: 0x1059484 Slot: 4
	public override object get_TypeId() { }

	// RVA: 0x1059508 Offset: 0x1059508 VA: 0x1059508 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0x1059688 Offset: 0x1059688 VA: 0x1059688 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x1059764 Offset: 0x1059764 VA: 0x1059764 Slot: 6
	public override bool Match(object obj) { }

	// RVA: 0x10596B8 Offset: 0x10596B8 VA: 0x10596B8 Slot: 3
	public override string ToString() { }
}

// Namespace: System.ComponentModel
public enum ToolboxItemFilterType // TypeDefIndex: 1290
{
	// Fields
	public int value__; // 0x0
	public const ToolboxItemFilterType Allow = 0;
	public const ToolboxItemFilterType Custom = 1;
	public const ToolboxItemFilterType Prevent = 2;
	public const ToolboxItemFilterType Require = 3;
}

// Namespace: System.ComponentModel
[ComVisibleAttribute] // RVA: 0xC3C4F4 Offset: 0xC3C4F4 VA: 0xC3C4F4
public class TypeConverter // TypeDefIndex: 1291
{
	// Methods

	// RVA: 0x104DF40 Offset: 0x104DF40 VA: 0x104DF40
	public void .ctor() { }

	// RVA: 0x1059810 Offset: 0x1059810 VA: 0x1059810
	public bool CanConvertFrom(Type sourceType) { }

	// RVA: 0x104E77C Offset: 0x104E77C VA: 0x104E77C Slot: 4
	public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) { }

	// RVA: 0x1059828 Offset: 0x1059828 VA: 0x1059828
	public bool CanConvertTo(Type destinationType) { }

	// RVA: 0x1058948 Offset: 0x1058948 VA: 0x1058948 Slot: 5
	public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) { }

	// RVA: 0x1059840 Offset: 0x1059840 VA: 0x1059840
	public object ConvertFrom(object o) { }

	// RVA: 0x104E988 Offset: 0x104E988 VA: 0x104E988 Slot: 6
	public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) { }

	// RVA: 0x1059AD8 Offset: 0x1059AD8 VA: 0x1059AD8
	public object ConvertFromInvariantString(string text) { }

	// RVA: 0x1059AE8 Offset: 0x1059AE8 VA: 0x1059AE8
	public object ConvertFromInvariantString(ITypeDescriptorContext context, string text) { }

	// RVA: 0x1059B84 Offset: 0x1059B84 VA: 0x1059B84
	public object ConvertFromString(string text) { }

	// RVA: 0x1059B88 Offset: 0x1059B88 VA: 0x1059B88
	public object ConvertFromString(ITypeDescriptorContext context, string text) { }

	// RVA: 0x1059B78 Offset: 0x1059B78 VA: 0x1059B78
	public object ConvertFromString(ITypeDescriptorContext context, CultureInfo culture, string text) { }

	// RVA: 0x1059C18 Offset: 0x1059C18 VA: 0x1059C18
	public object ConvertTo(object value, Type destinationType) { }

	// RVA: 0x104EB3C Offset: 0x104EB3C VA: 0x104EB3C Slot: 7
	public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) { }

	// RVA: 0x1059EBC Offset: 0x1059EBC VA: 0x1059EBC
	public string ConvertToInvariantString(object value) { }

	// RVA: 0x1059ECC Offset: 0x1059ECC VA: 0x1059ECC
	public string ConvertToInvariantString(ITypeDescriptorContext context, object value) { }

	// RVA: 0x105A010 Offset: 0x105A010 VA: 0x105A010
	public string ConvertToString(object value) { }

	// RVA: 0x105A150 Offset: 0x105A150 VA: 0x105A150
	public string ConvertToString(ITypeDescriptorContext context, object value) { }

	// RVA: 0x105A294 Offset: 0x105A294 VA: 0x105A294
	public string ConvertToString(ITypeDescriptorContext context, CultureInfo culture, object value) { }

	// RVA: 0x10598CC Offset: 0x10598CC VA: 0x10598CC
	protected Exception GetConvertFromException(object value) { }

	// RVA: 0x1059C3C Offset: 0x1059C3C VA: 0x1059C3C
	protected Exception GetConvertToException(object value, Type destinationType) { }

	// RVA: 0x105A3AC Offset: 0x105A3AC VA: 0x105A3AC
	public object CreateInstance(IDictionary propertyValues) { }

	// RVA: 0x104EC88 Offset: 0x104EC88 VA: 0x104EC88 Slot: 8
	public virtual object CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues) { }

	// RVA: 0x105A3C4 Offset: 0x105A3C4 VA: 0x105A3C4
	public bool GetCreateInstanceSupported() { }

	// RVA: 0x104ECA8 Offset: 0x104ECA8 VA: 0x104ECA8 Slot: 9
	public virtual bool GetCreateInstanceSupported(ITypeDescriptorContext context) { }

	// RVA: 0x105A3D4 Offset: 0x105A3D4 VA: 0x105A3D4
	public PropertyDescriptorCollection GetProperties(object value) { }

	// RVA: 0x105A3E4 Offset: 0x105A3E4 VA: 0x105A3E4
	public PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object value) { }

	// RVA: 0x104ECC8 Offset: 0x104ECC8 VA: 0x104ECC8 Slot: 10
	public virtual PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object value, Attribute[] attributes) { }

	// RVA: 0x105A4F4 Offset: 0x105A4F4 VA: 0x105A4F4
	public bool GetPropertiesSupported() { }

	// RVA: 0x105A504 Offset: 0x105A504 VA: 0x105A504 Slot: 11
	public virtual bool GetPropertiesSupported(ITypeDescriptorContext context) { }

	// RVA: 0x105A50C Offset: 0x105A50C VA: 0x105A50C
	public ICollection GetStandardValues() { }

	// RVA: 0x104EE1C Offset: 0x104EE1C VA: 0x104EE1C Slot: 12
	public virtual TypeConverter.StandardValuesCollection GetStandardValues(ITypeDescriptorContext context) { }

	// RVA: 0x105A51C Offset: 0x105A51C VA: 0x105A51C
	public bool GetStandardValuesExclusive() { }

	// RVA: 0x104EE3C Offset: 0x104EE3C VA: 0x104EE3C Slot: 13
	public virtual bool GetStandardValuesExclusive(ITypeDescriptorContext context) { }

	// RVA: 0x105A52C Offset: 0x105A52C VA: 0x105A52C
	public bool GetStandardValuesSupported() { }

	// RVA: 0x104EE60 Offset: 0x104EE60 VA: 0x104EE60 Slot: 14
	public virtual bool GetStandardValuesSupported(ITypeDescriptorContext context) { }

	// RVA: 0x105A540 Offset: 0x105A540 VA: 0x105A540
	public bool IsValid(object value) { }

	// RVA: 0x104EE88 Offset: 0x104EE88 VA: 0x104EE88 Slot: 15
	public virtual bool IsValid(ITypeDescriptorContext context, object value) { }

	// RVA: 0x105A55C Offset: 0x105A55C VA: 0x105A55C
	protected PropertyDescriptorCollection SortProperties(PropertyDescriptorCollection props, string[] names) { }
}

// Namespace: 
[DefaultMemberAttribute] // RVA: 0xC3C508 Offset: 0xC3C508 VA: 0xC3C508
public class TypeConverter.StandardValuesCollection : ICollection, IEnumerable // TypeDefIndex: 1292
{
	// Fields
	private ICollection values; // 0x10

	// Properties
	private bool System.Collections.ICollection.IsSynchronized { get; }
	private object System.Collections.ICollection.SyncRoot { get; }
	private int System.Collections.ICollection.Count { get; }
	public int Count { get; }
	public object Item { get; }

	// Methods

	// RVA: 0x104EDF0 Offset: 0x104EDF0 VA: 0x104EDF0
	public void .ctor(ICollection values) { }

	// RVA: 0x105A9D4 Offset: 0x105A9D4 VA: 0x105A9D4 Slot: 7
	private void System.Collections.ICollection.CopyTo(Array array, int index) { }

	// RVA: 0x105AAA8 Offset: 0x105AAA8 VA: 0x105AAA8 Slot: 8
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x105AB60 Offset: 0x105AB60 VA: 0x105AB60 Slot: 5
	private bool System.Collections.ICollection.get_IsSynchronized() { }

	// RVA: 0x105AB68 Offset: 0x105AB68 VA: 0x105AB68 Slot: 6
	private object System.Collections.ICollection.get_SyncRoot() { }

	// RVA: 0x105AB70 Offset: 0x105AB70 VA: 0x105AB70 Slot: 4
	private int System.Collections.ICollection.get_Count() { }

	// RVA: 0x105A9D8 Offset: 0x105A9D8 VA: 0x105A9D8 Slot: 9
	public void CopyTo(Array array, int index) { }

	// RVA: 0x105AAAC Offset: 0x105AAAC VA: 0x105AAAC Slot: 10
	public IEnumerator GetEnumerator() { }

	// RVA: 0x105AB74 Offset: 0x105AB74 VA: 0x105AB74 Slot: 11
	public int get_Count() { }

	// RVA: 0x105AC28 Offset: 0x105AC28 VA: 0x105AC28
	public object get_Item(int index) { }
}

// Namespace: 
protected abstract class TypeConverter.SimplePropertyDescriptor : PropertyDescriptor // TypeDefIndex: 1293
{
	// Fields
	private Type componentType; // 0x38
	private Type propertyType; // 0x40

	// Properties
	public override Type ComponentType { get; }
	public override Type PropertyType { get; }
	public override bool IsReadOnly { get; }

	// Methods

	// RVA: 0x105A5A4 Offset: 0x105A5A4 VA: 0x105A5A4
	public void .ctor(Type componentType, string name, Type propertyType) { }

	// RVA: 0x105A5E4 Offset: 0x105A5E4 VA: 0x105A5E4
	public void .ctor(Type componentType, string name, Type propertyType, Attribute[] attributes) { }

	// RVA: 0x105A630 Offset: 0x105A630 VA: 0x105A630 Slot: 17
	public override Type get_ComponentType() { }

	// RVA: 0x105A638 Offset: 0x105A638 VA: 0x105A638 Slot: 21
	public override Type get_PropertyType() { }

	// RVA: 0x105A640 Offset: 0x105A640 VA: 0x105A640 Slot: 20
	public override bool get_IsReadOnly() { }

	// RVA: 0x105A6DC Offset: 0x105A6DC VA: 0x105A6DC Slot: 30
	public override bool ShouldSerializeValue(object component) { }

	// RVA: 0x105A6E4 Offset: 0x105A6E4 VA: 0x105A6E4 Slot: 29
	public override bool CanResetValue(object component) { }

	// RVA: 0x105A85C Offset: 0x105A85C VA: 0x105A85C Slot: 28
	public override void ResetValue(object component) { }
}

// Namespace: System.ComponentModel
[AttributeUsageAttribute] // RVA: 0xC3C540 Offset: 0xC3C540 VA: 0xC3C540
[ComVisibleAttribute] // RVA: 0xC3C540 Offset: 0xC3C540 VA: 0xC3C540
public sealed class TypeConverterAttribute : Attribute // TypeDefIndex: 1294
{
	// Fields
	public static readonly TypeConverterAttribute Default; // 0x0
	private string converter_type; // 0x10

	// Properties
	public string ConverterTypeName { get; }

	// Methods

	// RVA: 0x105ADBC Offset: 0x105ADBC VA: 0x105ADBC
	public void .ctor() { }

	// RVA: 0x105AE38 Offset: 0x105AE38 VA: 0x105AE38
	public void .ctor(string typeName) { }

	// RVA: 0x105AE64 Offset: 0x105AE64 VA: 0x105AE64
	public void .ctor(Type type) { }

	// RVA: 0x105AEB0 Offset: 0x105AEB0 VA: 0x105AEB0
	private static void .cctor() { }

	// RVA: 0x105AF10 Offset: 0x105AF10 VA: 0x105AF10 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0x105AFBC Offset: 0x105AFBC VA: 0x105AFBC Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x104FD1C Offset: 0x104FD1C VA: 0x104FD1C
	public string get_ConverterTypeName() { }
}

// Namespace: System.ComponentModel
public abstract class TypeDescriptionProvider // TypeDefIndex: 1295
{
	// Fields
	private TypeDescriptionProvider.EmptyCustomTypeDescriptor _emptyCustomTypeDescriptor; // 0x10
	private TypeDescriptionProvider _parent; // 0x18

	// Methods

	// RVA: 0x105AFEC Offset: 0x105AFEC VA: 0x105AFEC
	protected void .ctor() { }

	// RVA: 0x105AFF4 Offset: 0x105AFF4 VA: 0x105AFF4
	protected void .ctor(TypeDescriptionProvider parent) { }

	// RVA: 0x105B020 Offset: 0x105B020 VA: 0x105B020 Slot: 4
	public virtual object CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, object[] args) { }

	// RVA: 0x105B044 Offset: 0x105B044 VA: 0x105B044 Slot: 5
	public virtual IDictionary GetCache(object instance) { }

	// RVA: 0x105B05C Offset: 0x105B05C VA: 0x105B05C Slot: 6
	public virtual ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance) { }

	// RVA: 0x105B100 Offset: 0x105B100 VA: 0x105B100 Slot: 7
	public virtual string GetFullComponentName(object component) { }

	// RVA: 0x105B2A4 Offset: 0x105B2A4 VA: 0x105B2A4
	public Type GetReflectionType(object instance) { }

	// RVA: 0x105B358 Offset: 0x105B358 VA: 0x105B358
	public Type GetReflectionType(Type objectType) { }

	// RVA: 0x105B368 Offset: 0x105B368 VA: 0x105B368 Slot: 8
	public virtual Type GetReflectionType(Type objectType, object instance) { }

	// RVA: 0x105B1F0 Offset: 0x105B1F0 VA: 0x105B1F0
	public ICustomTypeDescriptor GetTypeDescriptor(object instance) { }

	// RVA: 0x105B384 Offset: 0x105B384 VA: 0x105B384
	public ICustomTypeDescriptor GetTypeDescriptor(Type objectType) { }

	// RVA: 0x105B394 Offset: 0x105B394 VA: 0x105B394 Slot: 9
	public virtual ICustomTypeDescriptor GetTypeDescriptor(Type objectType, object instance) { }
}

// Namespace: 
private sealed class TypeDescriptionProvider.EmptyCustomTypeDescriptor : CustomTypeDescriptor // TypeDefIndex: 1296
{
	// Methods

	// RVA: 0x105B0F8 Offset: 0x105B0F8 VA: 0x105B0F8
	public void .ctor() { }
}

// Namespace: System.ComponentModel
public sealed class TypeDescriptor // TypeDefIndex: 1297
{
	// Fields
	private static readonly object creatingDefaultConverters; // 0x0
	private static ArrayList defaultConverters; // 0x8
	private static IComNativeDescriptorHandler descriptorHandler; // 0x10
	private static Hashtable componentTable; // 0x18
	private static Hashtable typeTable; // 0x20
	private static Hashtable editors; // 0x28
	private static object typeDescriptionProvidersLock; // 0x30
	private static Dictionary<Type, LinkedList<TypeDescriptionProvider>> typeDescriptionProviders; // 0x38
	private static object componentDescriptionProvidersLock; // 0x40
	private static Dictionary<WeakObjectWrapper, LinkedList<TypeDescriptionProvider>> componentDescriptionProviders; // 0x48
	private static EventHandler onDispose; // 0x50
	private static RefreshEventHandler Refreshed; // 0x58

	// Properties
	[MonoNotSupportedAttribute] // RVA: 0xC3EBF8 Offset: 0xC3EBF8 VA: 0xC3EBF8
	[EditorBrowsableAttribute] // RVA: 0xC3EBF8 Offset: 0xC3EBF8 VA: 0xC3EBF8
	public static Type ComObjectType { get; }
	private static ArrayList DefaultConverters { get; }
	[ObsoleteAttribute] // RVA: 0xC3EC48 Offset: 0xC3EC48 VA: 0xC3EC48
	public static IComNativeDescriptorHandler ComNativeDescriptorHandler { get; set; }

	// Methods

	// RVA: 0x105B438 Offset: 0x105B438 VA: 0x105B438
	private void .ctor() { }

	// RVA: 0x105B440 Offset: 0x105B440 VA: 0x105B440
	private static void .cctor() { }

	// RVA: 0x105B628 Offset: 0x105B628 VA: 0x105B628
	public static void add_Refreshed(RefreshEventHandler value) { }

	// RVA: 0x105B718 Offset: 0x105B718 VA: 0x105B718
	public static void remove_Refreshed(RefreshEventHandler value) { }

	// RVA: 0x105B808 Offset: 0x105B808 VA: 0x105B808
	public static Type get_ComObjectType() { }

	[EditorBrowsableAttribute] // RVA: 0xC3D3EC Offset: 0xC3D3EC VA: 0xC3D3EC
	// RVA: 0x105B870 Offset: 0x105B870 VA: 0x105B870
	public static TypeDescriptionProvider AddAttributes(object instance, Attribute[] attributes) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D400 Offset: 0xC3D400 VA: 0xC3D400
	// RVA: 0x105BF20 Offset: 0x105BF20 VA: 0x105BF20
	public static TypeDescriptionProvider AddAttributes(Type type, Attribute[] attributes) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D414 Offset: 0xC3D414 VA: 0xC3D414
	// RVA: 0x105BC68 Offset: 0x105BC68 VA: 0x105BC68
	public static void AddProvider(TypeDescriptionProvider provider, object instance) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D428 Offset: 0xC3D428 VA: 0xC3D428
	// RVA: 0x105C294 Offset: 0x105C294 VA: 0x105C294
	public static void AddProvider(TypeDescriptionProvider provider, Type type) { }

	[MonoTODOAttribute] // RVA: 0xC3D43C Offset: 0xC3D43C VA: 0xC3D43C
	// RVA: 0x1050940 Offset: 0x1050940 VA: 0x1050940
	public static object CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, object[] args) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D44C Offset: 0xC3D44C VA: 0xC3D44C
	// RVA: 0x105C8E0 Offset: 0x105C8E0 VA: 0x105C8E0
	internal static void AddEditorTable(Type editorBaseType, Hashtable table) { }

	// RVA: 0x105CA84 Offset: 0x105CA84 VA: 0x105CA84
	public static IDesigner CreateDesigner(IComponent component, Type designerBaseType) { }

	// RVA: 0x105D2C0 Offset: 0x105D2C0 VA: 0x105D2C0
	public static EventDescriptor CreateEvent(Type componentType, string name, Type type, Attribute[] attributes) { }

	// RVA: 0x105D348 Offset: 0x105D348 VA: 0x105D348
	public static EventDescriptor CreateEvent(Type componentType, EventDescriptor oldEventDescriptor, Attribute[] attributes) { }

	// RVA: 0x105D3C0 Offset: 0x105D3C0 VA: 0x105D3C0
	public static PropertyDescriptor CreateProperty(Type componentType, string name, Type type, Attribute[] attributes) { }

	// RVA: 0x105D444 Offset: 0x105D444 VA: 0x105D444
	public static PropertyDescriptor CreateProperty(Type componentType, PropertyDescriptor oldPropertyDescriptor, Attribute[] attributes) { }

	// RVA: 0x1055E40 Offset: 0x1055E40 VA: 0x1055E40
	public static AttributeCollection GetAttributes(Type componentType) { }

	// RVA: 0x105CF48 Offset: 0x105CF48 VA: 0x105CF48
	public static AttributeCollection GetAttributes(object component) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D460 Offset: 0xC3D460 VA: 0xC3D460
	// RVA: 0x105D6EC Offset: 0x105D6EC VA: 0x105D6EC
	public static AttributeCollection GetAttributes(object component, bool noCustomTypeDesc) { }

	// RVA: 0x105DCF8 Offset: 0x105DCF8 VA: 0x105DCF8
	public static string GetClassName(object component) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D474 Offset: 0xC3D474 VA: 0xC3D474
	// RVA: 0x105DD60 Offset: 0x105DD60 VA: 0x105DD60
	public static string GetClassName(object component, bool noCustomTypeDesc) { }

	// RVA: 0x105E0B0 Offset: 0x105E0B0 VA: 0x105E0B0
	public static string GetComponentName(object component) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D488 Offset: 0xC3D488 VA: 0xC3D488
	// RVA: 0x105E118 Offset: 0x105E118 VA: 0x105E118
	public static string GetComponentName(object component, bool noCustomTypeDesc) { }

	[MonoNotSupportedAttribute] // RVA: 0xC3D49C Offset: 0xC3D49C VA: 0xC3D49C
	// RVA: 0x105E470 Offset: 0x105E470 VA: 0x105E470
	public static string GetFullComponentName(object component) { }

	[MonoNotSupportedAttribute] // RVA: 0xC3D4D4 Offset: 0xC3D4D4 VA: 0xC3D4D4
	// RVA: 0x105E4D8 Offset: 0x105E4D8 VA: 0x105E4D8
	public static string GetClassName(Type componentType) { }

	// RVA: 0x105E540 Offset: 0x105E540 VA: 0x105E540
	public static TypeConverter GetConverter(object component) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D50C Offset: 0xC3D50C VA: 0xC3D50C
	// RVA: 0x105E5A8 Offset: 0x105E5A8 VA: 0x105E5A8
	public static TypeConverter GetConverter(object component, bool noCustomTypeDesc) { }

	// RVA: 0x105F444 Offset: 0x105F444 VA: 0x105F444
	private static ArrayList get_DefaultConverters() { }

	// RVA: 0x104E390 Offset: 0x104E390 VA: 0x104E390
	public static TypeConverter GetConverter(Type type) { }

	// RVA: 0x105EB70 Offset: 0x105EB70 VA: 0x105EB70
	private static Type FindDefaultConverterType(Type type) { }

	// RVA: 0x10603C8 Offset: 0x10603C8 VA: 0x10603C8
	public static EventDescriptor GetDefaultEvent(Type componentType) { }

	// RVA: 0x1060444 Offset: 0x1060444 VA: 0x1060444
	public static EventDescriptor GetDefaultEvent(object component) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D520 Offset: 0xC3D520 VA: 0xC3D520
	// RVA: 0x10604AC Offset: 0x10604AC VA: 0x10604AC
	public static EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc) { }

	// RVA: 0x1060774 Offset: 0x1060774 VA: 0x1060774
	public static PropertyDescriptor GetDefaultProperty(Type componentType) { }

	// RVA: 0x10607F0 Offset: 0x10607F0 VA: 0x10607F0
	public static PropertyDescriptor GetDefaultProperty(object component) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D534 Offset: 0xC3D534 VA: 0xC3D534
	// RVA: 0x1060858 Offset: 0x1060858 VA: 0x1060858
	public static PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc) { }

	// RVA: 0x1060B20 Offset: 0x1060B20 VA: 0x1060B20
	internal static object CreateEditor(Type t, Type componentType) { }

	// RVA: 0x1060CE4 Offset: 0x1060CE4 VA: 0x1060CE4
	private static object FindEditorInTable(Type componentType, Type editorBaseType, Hashtable table) { }

	// RVA: 0x1050E94 Offset: 0x1050E94 VA: 0x1050E94
	public static object GetEditor(Type componentType, Type editorBaseType) { }

	// RVA: 0x1061024 Offset: 0x1061024 VA: 0x1061024
	public static object GetEditor(object component, Type editorBaseType) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D548 Offset: 0xC3D548 VA: 0xC3D548
	// RVA: 0x106109C Offset: 0x106109C VA: 0x106109C
	public static object GetEditor(object component, Type editorBaseType, bool noCustomTypeDesc) { }

	// RVA: 0x10614D8 Offset: 0x10614D8 VA: 0x10614D8
	public static EventDescriptorCollection GetEvents(object component) { }

	// RVA: 0x106180C Offset: 0x106180C VA: 0x106180C
	public static EventDescriptorCollection GetEvents(Type componentType) { }

	// RVA: 0x1061900 Offset: 0x1061900 VA: 0x1061900
	public static EventDescriptorCollection GetEvents(object component, Attribute[] attributes) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D55C Offset: 0xC3D55C VA: 0xC3D55C
	// RVA: 0x1061540 Offset: 0x1061540 VA: 0x1061540
	public static EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc) { }

	// RVA: 0x1061874 Offset: 0x1061874 VA: 0x1061874
	public static EventDescriptorCollection GetEvents(Type componentType, Attribute[] attributes) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D570 Offset: 0xC3D570 VA: 0xC3D570
	// RVA: 0x1061978 Offset: 0x1061978 VA: 0x1061978
	public static EventDescriptorCollection GetEvents(object component, Attribute[] attributes, bool noCustomTypeDesc) { }

	// RVA: 0x1061C58 Offset: 0x1061C58 VA: 0x1061C58
	public static PropertyDescriptorCollection GetProperties(object component) { }

	// RVA: 0x1061FA0 Offset: 0x1061FA0 VA: 0x1061FA0
	public static PropertyDescriptorCollection GetProperties(Type componentType) { }

	// RVA: 0x1050CA8 Offset: 0x1050CA8 VA: 0x1050CA8
	public static PropertyDescriptorCollection GetProperties(object component, Attribute[] attributes) { }

	// RVA: 0x1062094 Offset: 0x1062094 VA: 0x1062094
	public static PropertyDescriptorCollection GetProperties(object component, Attribute[] attributes, bool noCustomTypeDesc) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D584 Offset: 0xC3D584 VA: 0xC3D584
	// RVA: 0x1061CC0 Offset: 0x1061CC0 VA: 0x1061CC0
	public static PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc) { }

	// RVA: 0x1062008 Offset: 0x1062008 VA: 0x1062008
	public static PropertyDescriptorCollection GetProperties(Type componentType, Attribute[] attributes) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D598 Offset: 0xC3D598 VA: 0xC3D598
	// RVA: 0x105B984 Offset: 0x105B984 VA: 0x105B984
	public static TypeDescriptionProvider GetProvider(object instance) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D5AC Offset: 0xC3D5AC VA: 0xC3D5AC
	// RVA: 0x105C034 Offset: 0x105C034 VA: 0x105C034
	public static TypeDescriptionProvider GetProvider(Type type) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D5C0 Offset: 0xC3D5C0 VA: 0xC3D5C0
	// RVA: 0x10623BC Offset: 0x10623BC VA: 0x10623BC
	public static Type GetReflectionType(object instance) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D5D4 Offset: 0xC3D5D4 VA: 0xC3D5D4
	// RVA: 0x106244C Offset: 0x106244C VA: 0x106244C
	public static Type GetReflectionType(Type type) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D5E8 Offset: 0xC3D5E8 VA: 0xC3D5E8
	[MonoNotSupportedAttribute] // RVA: 0xC3D5E8 Offset: 0xC3D5E8 VA: 0xC3D5E8
	// RVA: 0x10624D8 Offset: 0x10624D8 VA: 0x10624D8
	public static void CreateAssociation(object primary, object secondary) { }

	[MonoNotSupportedAttribute] // RVA: 0xC3D638 Offset: 0xC3D638 VA: 0xC3D638
	[EditorBrowsableAttribute] // RVA: 0xC3D638 Offset: 0xC3D638 VA: 0xC3D638
	// RVA: 0x1062540 Offset: 0x1062540 VA: 0x1062540
	public static object GetAssociation(Type type, object primary) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D688 Offset: 0xC3D688 VA: 0xC3D688
	[MonoNotSupportedAttribute] // RVA: 0xC3D688 Offset: 0xC3D688 VA: 0xC3D688
	// RVA: 0x10625A8 Offset: 0x10625A8 VA: 0x10625A8
	public static void RemoveAssociation(object primary, object secondary) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D6D8 Offset: 0xC3D6D8 VA: 0xC3D6D8
	[MonoNotSupportedAttribute] // RVA: 0xC3D6D8 Offset: 0xC3D6D8 VA: 0xC3D6D8
	// RVA: 0x1062610 Offset: 0x1062610 VA: 0x1062610
	public static void RemoveAssociations(object primary) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D728 Offset: 0xC3D728 VA: 0xC3D728
	// RVA: 0x1062678 Offset: 0x1062678 VA: 0x1062678
	public static void RemoveProvider(TypeDescriptionProvider provider, object instance) { }

	[EditorBrowsableAttribute] // RVA: 0xC3D73C Offset: 0xC3D73C VA: 0xC3D73C
	// RVA: 0x1062A3C Offset: 0x1062A3C VA: 0x1062A3C
	public static void RemoveProvider(TypeDescriptionProvider provider, Type type) { }

	// RVA: 0x10628E8 Offset: 0x10628E8 VA: 0x10628E8
	private static void RemoveProvider(TypeDescriptionProvider provider, LinkedList<TypeDescriptionProvider> plist) { }

	// RVA: 0x1062C80 Offset: 0x1062C80 VA: 0x1062C80
	public static void SortDescriptorArray(IList infos) { }

	// RVA: 0x106322C Offset: 0x106322C VA: 0x106322C
