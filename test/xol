	public int materialFolderId; // 0x24

	// Methods

	// RVA: 0x1279FAC Offset: 0x1279FAC VA: 0x1279FAC
	public void .ctor() { }

	// RVA: 0x1279FFC Offset: 0x1279FFC VA: 0x1279FFC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x127A010 Offset: 0x127A010 VA: 0x127A010
	public static string CreatePK(int id, int folderType) { }

	// RVA: 0x127A020 Offset: 0x127A020 VA: 0x127A020
	public int getQuestId() { }

	// RVA: 0x127A028 Offset: 0x127A028 VA: 0x127A028
	public string getQuestName() { }

	// RVA: 0x127A030 Offset: 0x127A030 VA: 0x127A030
	public int GetFolderId() { }

	// RVA: 0x127A04C Offset: 0x127A04C VA: 0x127A04C
	public bool isMateiralRegistWithEventId(int eventId) { }
}

// Namespace: 
public enum QuestScriptEntity.FolderType // TypeDefIndex: 7175
{
	// Fields
	public int value__; // 0x0
	public const QuestScriptEntity.FolderType NONE = 0;
	public const QuestScriptEntity.FolderType MATERIAL_FOLDER = 1;
	public const QuestScriptEntity.FolderType EVENT = 2;
	public const QuestScriptEntity.FolderType SVT = 3;
}

// Namespace: 
public class QuestScriptMaster : DataMasterBase<QuestScriptMaster, QuestScriptEntity, string> // TypeDefIndex: 7176
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55C60 Offset: 0xC55C60 VA: 0xC55C60
	private static Comparison<QuestScriptEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x127A070 Offset: 0x127A070 VA: 0x127A070
	public void .ctor() { }

	// RVA: 0x127A0C4 Offset: 0x127A0C4 VA: 0x127A0C4
	public QuestScriptEntity GetEntity(int id, int folderType) { }

	// RVA: 0x127A138 Offset: 0x127A138 VA: 0x127A138
	public bool TryGetEntity(out QuestScriptEntity entity, int id, int folderType) { }

	// RVA: 0x127A1BC Offset: 0x127A1BC VA: 0x127A1BC
	public QuestScriptEntity GetEntityFromQuestId(int questId) { }

	// RVA: 0x127A268 Offset: 0x127A268 VA: 0x127A268
	public List<QuestScriptEntity> GetEntityListFromQuestId(int questId) { }

	// RVA: 0x127A518 Offset: 0x127A518 VA: 0x127A518
	public QuestScriptEntity[] GetEntityListFromFolderType(int folderType) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA658 Offset: 0xCCA658 VA: 0xCCA658
	// RVA: 0x127A694 Offset: 0x127A694 VA: 0x127A694
	private static int <GetEntityListFromQuestId>m__0(QuestScriptEntity a, QuestScriptEntity b) { }
}

// Namespace: 
public class QuestScriptReleaseEntity : DataEntityBase<string> // TypeDefIndex: 7177
{
	// Fields
	public int scriptId; // 0x10
	public int phase; // 0x14
	public int id; // 0x18
	public int flag; // 0x1C
	public int condType; // 0x20
	public int[] targetIds; // 0x28
	public int targetNum; // 0x30

	// Methods

	// RVA: 0x127A6D4 Offset: 0x127A6D4 VA: 0x127A6D4
	public void .ctor() { }

	// RVA: 0x127A724 Offset: 0x127A724 VA: 0x127A724 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x127A738 Offset: 0x127A738 VA: 0x127A738
	public static string CreatePK(int scriptId, int phase, int id) { }

	// RVA: 0x127A74C Offset: 0x127A74C VA: 0x127A74C
	public bool HasFlag(ScriptSceneType.Kind kind) { }

	// RVA: 0x127A768 Offset: 0x127A768 VA: 0x127A768
	public bool IsOpen() { }
}

// Namespace: 
public class QuestScriptReleaseMaster : DataMasterBase<QuestScriptReleaseMaster, QuestScriptReleaseEntity, string> // TypeDefIndex: 7178
{
	// Methods

	// RVA: 0x127A7EC Offset: 0x127A7EC VA: 0x127A7EC
	public void .ctor() { }

	// RVA: 0x127A840 Offset: 0x127A840 VA: 0x127A840
	public QuestScriptReleaseEntity GetEntity(int scriptId, int phase, int id) { }

	// RVA: 0x127A8C4 Offset: 0x127A8C4 VA: 0x127A8C4
	public bool TryGetEntity(out QuestScriptReleaseEntity entity, int scriptId, int phase, int id) { }

	// RVA: 0x127A950 Offset: 0x127A950 VA: 0x127A950
	public bool IsMaterialCondTypeQuestClearOnly(int scriptQuestId, int scriptPhase, bool isMainInterlude, out List<QuestScriptReleaseEntity> questScriptReleaseEnt, out int checkCnt) { }

	// RVA: 0x127AD48 Offset: 0x127AD48 VA: 0x127AD48
	private bool IsOpenPhase(out bool isOpen, int scriptQuestId, int scriptPhase, ScriptSceneType.Kind kind, bool isMainInterlude = False) { }

	// RVA: 0x127B248 Offset: 0x127B248 VA: 0x127B248
	private bool IsOpenPhaseForSuperBoss(out bool isOpen, int scriptQuestId, int scriptPhase, ScriptSceneType.Kind kind) { }

	// RVA: 0x127B5B0 Offset: 0x127B5B0 VA: 0x127B5B0
	public int GetScriptQuestId(int questId, int phaseCnt, ScriptSceneType.Kind kind) { }

	// RVA: 0x127B6CC Offset: 0x127B6CC VA: 0x127B6CC
	public bool IsOpenMaterial(out bool isOpen, int scriptQuestId, bool isMainInterlude) { }
}

// Namespace: 
public class QuestSpotReleaseEntity : DataEntityBase<string> // TypeDefIndex: 7179
{
	// Fields
	public int questId; // 0x10
	public int spotId; // 0x14
	public int priority; // 0x18
	public int condType; // 0x1C
	public int condId; // 0x20
	public int condNum; // 0x24

	// Properties
	public CondType.Kind CondType { get; }

	// Methods

	// RVA: 0x127B6DC Offset: 0x127B6DC VA: 0x127B6DC
	public void .ctor() { }

	// RVA: 0x127B72C Offset: 0x127B72C VA: 0x127B72C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x127B740 Offset: 0x127B740 VA: 0x127B740
	public static string CreatePK(int questId, int spotId, int priority) { }

	// RVA: 0x127B754 Offset: 0x127B754 VA: 0x127B754
	public CondType.Kind get_CondType() { }
}

// Namespace: 
public class QuestSpotReleaseMaster : DataMasterBase<QuestSpotReleaseMaster, QuestSpotReleaseEntity, string> // TypeDefIndex: 7180
{
	// Methods

	// RVA: 0x127B75C Offset: 0x127B75C VA: 0x127B75C
	public void .ctor() { }

	// RVA: 0x127B7B0 Offset: 0x127B7B0 VA: 0x127B7B0
	public QuestSpotReleaseEntity GetEntity(int questId, int spotId, int priority) { }

	// RVA: 0x127B834 Offset: 0x127B834 VA: 0x127B834
	public bool TryGetEntity(out QuestSpotReleaseEntity entity, int questId, int spotId, int priority) { }

	// RVA: 0x127B8C0 Offset: 0x127B8C0 VA: 0x127B8C0
	public int GetSpotId(int questId) { }
}

// Namespace: 
public class RecoverEntity : DataEntityBase<int> // TypeDefIndex: 7181
{
	// Fields
	public int id; // 0x10
	public int target; // 0x14
	public int priority; // 0x18
	public int recoverType; // 0x1C
	public int targetId; // 0x20
	public int num; // 0x24

	// Methods

	// RVA: 0x1584018 Offset: 0x1584018 VA: 0x1584018
	public void .ctor() { }

	// RVA: 0x1584068 Offset: 0x1584068 VA: 0x1584068 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1584070 Offset: 0x1584070 VA: 0x1584070
	public ItemEntity getRecvItemData() { }

	// RVA: 0x1584108 Offset: 0x1584108 VA: 0x1584108
	public CommandSpellEntity getRecvCmdSpellData() { }
}

// Namespace: 
public enum RecoverEntity.RecoverTarget // TypeDefIndex: 7182
{
	// Fields
	public int value__; // 0x0
	public const RecoverEntity.RecoverTarget AP = 1;
	public const RecoverEntity.RecoverTarget RP = 2;
}

// Namespace: 
public class RecoverMaster : DataMasterBase<RecoverMaster, RecoverEntity, int> // TypeDefIndex: 7183
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55C70 Offset: 0xC55C70 VA: 0xC55C70
	private static Comparison<RecoverEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1585C2C Offset: 0x1585C2C VA: 0x1585C2C
	public void .ctor() { }

	// RVA: 0x15811C0 Offset: 0x15811C0 VA: 0x15811C0
	public List<RecoverEntity> getRecvEntityList(RecoverEntity.RecoverTarget RecoverTarget) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA668 Offset: 0xCCA668 VA: 0xCCA668
	// RVA: 0x1585C80 Offset: 0x1585C80 VA: 0x1585C80
	private static int <getRecvEntityList>m__0(RecoverEntity a, RecoverEntity b) { }
}

// Namespace: 
public class ReprintStageEntity : DataEntityBase<string> // TypeDefIndex: 7184
{
	// Fields
	public int questId; // 0x10
	public int questPhase; // 0x14
	public int wave; // 0x18
	public int remapQuestId; // 0x1C
	public int remapPhase; // 0x20
	public int remapWave; // 0x24

	// Methods

	// RVA: 0x1585FA4 Offset: 0x1585FA4 VA: 0x1585FA4
	public void .ctor() { }

	// RVA: 0x1585FF4 Offset: 0x1585FF4 VA: 0x1585FF4
	public void .ctor(ReprintStageEntity cSrc) { }

	// RVA: 0x15860F8 Offset: 0x15860F8 VA: 0x15860F8
	public int getQuestId() { }

	// RVA: 0x1586100 Offset: 0x1586100 VA: 0x1586100
	public int getPhase() { }

	// RVA: 0x1586108 Offset: 0x1586108 VA: 0x1586108
	public int getWave() { }

	// RVA: 0x1586110 Offset: 0x1586110 VA: 0x1586110 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1586124 Offset: 0x1586124 VA: 0x1586124
	public static string CreatePK(int questId, int questPhase, int wave) { }
}

// Namespace: 
public class ReprintStageMaster : DataMasterBase<ReprintStageMaster, ReprintStageEntity, string> // TypeDefIndex: 7185
{
	// Methods

	// RVA: 0x1586138 Offset: 0x1586138 VA: 0x1586138
	public void .ctor() { }

	// RVA: 0x158618C Offset: 0x158618C VA: 0x158618C
	public ReprintStageEntity GetEntity(int questId, int questPhase, int wave) { }

	// RVA: 0x1586210 Offset: 0x1586210 VA: 0x1586210
	public bool TryGetEntity(out ReprintStageEntity entity, int questId, int questPhase, int wave) { }
}

// Namespace: 
public class RestrictionEntity : DataEntityBase<int> // TypeDefIndex: 7186
{
	// Fields
	public int id; // 0x10
	public string name; // 0x18
	public int type; // 0x20
	public int[] targetVals; // 0x28
	public int[] targetVals2; // 0x30
	public int rangeType; // 0x38

	// Methods

	// RVA: 0x158CC00 Offset: 0x158CC00 VA: 0x158CC00
	public void .ctor() { }

	// RVA: 0x158CC50 Offset: 0x158CC50 VA: 0x158CC50 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x158CC58 Offset: 0x158CC58 VA: 0x158CC58
	public bool IsSearchVals(int v) { }

	// RVA: 0x158CCDC Offset: 0x158CCDC VA: 0x158CCDC
	public bool IsSearchVals(int[] vList) { }

	// RVA: 0x158CDC0 Offset: 0x158CDC0 VA: 0x158CDC0
	public bool IsRestriction(int v) { }

	// RVA: 0x158CE54 Offset: 0x158CE54 VA: 0x158CE54
	public bool IsRestriction(int[] vList) { }

	// RVA: 0x158CF10 Offset: 0x158CF10 VA: 0x158CF10
	public int getTotalCost() { }

	// RVA: 0x158CF40 Offset: 0x158CF40 VA: 0x158CF40
	public string getTitle() { }

	// RVA: 0x158D1EC Offset: 0x158D1EC VA: 0x158D1EC
	public bool[] getDeckPositionList() { }

	// RVA: 0x158D608 Offset: 0x158D608 VA: 0x158D608
	public int GetSpecifiedPosition() { }
}

// Namespace: 
public class RestrictionMaster : DataMasterBase<RestrictionMaster, RestrictionEntity, int> // TypeDefIndex: 7187
{
	// Methods

	// RVA: 0x158D638 Offset: 0x158D638 VA: 0x158D638
	public void .ctor() { }
}

// Namespace: 
public class ServantAddEntity : DataEntityBase<int> // TypeDefIndex: 7188
{
	// Fields
	public ObscuredInt svtId; // 0x10
	public Dictionary<string, object> script; // 0x20

	// Methods

	// RVA: 0x17377D8 Offset: 0x17377D8 VA: 0x17377D8
	public void .ctor() { }

	// RVA: 0x1737828 Offset: 0x1737828 VA: 0x1737828 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1737898 Offset: 0x1737898 VA: 0x1737898
	public int GetScript(string key, int defaultValue = 0) { }

	// RVA: 0x173799C Offset: 0x173799C VA: 0x173799C
	public int GetPresentDialogMessageId() { }

	// RVA: 0x1737A10 Offset: 0x1737A10 VA: 0x1737A10
	public string GetOverwriteServantShortName() { }
}

// Namespace: 
public class ServantAddMaster : DataMasterBase<ServantAddMaster, ServantAddEntity, int> // TypeDefIndex: 7189
{
	// Fields
	public static readonly string PRESENT_DIALOG_MESSAGE_ID; // 0x0

	// Methods

	// RVA: 0x1737AF0 Offset: 0x1737AF0 VA: 0x1737AF0
	public void .ctor() { }

	// RVA: 0x1737B44 Offset: 0x1737B44 VA: 0x1737B44
	private static void .cctor() { }
}

// Namespace: 
public class ServantAnimationOverwriteEntity : DataEntityBase<string> // TypeDefIndex: 7190
{
	// Fields
	public int svtId; // 0x10
	public int svtLimitCount; // 0x14
	public int idx; // 0x18
	public int type; // 0x1C
	public int applyTarget; // 0x20
	public string targetName; // 0x28
	public string overwriteName; // 0x30

	// Methods

	// RVA: 0x1737BA0 Offset: 0x1737BA0 VA: 0x1737BA0
	public void .ctor() { }

	// RVA: 0x1737BF0 Offset: 0x1737BF0 VA: 0x1737BF0 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1737C04 Offset: 0x1737C04 VA: 0x1737C04
	public static string CreatePK(int svtId, int svtLimitCount, int idx) { }

	// RVA: 0x1737C18 Offset: 0x1737C18 VA: 0x1737C18
	public bool IsLimitCountMatch(int limit) { }

	// RVA: 0x1737C34 Offset: 0x1737C34 VA: 0x1737C34
	public bool IsApplyTargetMatch(int target) { }
}

// Namespace: 
public enum ServantAnimationOverwriteEntity.PhaseType // TypeDefIndex: 7191
{
	// Fields
	public int value__; // 0x0
	public const ServantAnimationOverwriteEntity.PhaseType NONE = 0;
	public const ServantAnimationOverwriteEntity.PhaseType TACTICAL = 1;
	public const ServantAnimationOverwriteEntity.PhaseType COMMAND = 2;
	public const ServantAnimationOverwriteEntity.PhaseType BATTLE = 3;
}

// Namespace: 
public enum ServantAnimationOverwriteEntity.ApplyType // TypeDefIndex: 7192
{
	// Fields
	public int value__; // 0x0
	public const ServantAnimationOverwriteEntity.ApplyType NONE = 0;
	public const ServantAnimationOverwriteEntity.ApplyType PLAYER = 1;
	public const ServantAnimationOverwriteEntity.ApplyType ENEMY = 2;
	public const ServantAnimationOverwriteEntity.ApplyType ALL = 3;
}

// Namespace: 
public class ServantAnimationOverwriteMaster : DataMasterBase<ServantAnimationOverwriteMaster, ServantAnimationOverwriteEntity, string> // TypeDefIndex: 7193
{
	// Properties
	public static ServantAnimationOverwriteMaster Master { get; }

	// Methods

	// RVA: 0x1737C50 Offset: 0x1737C50 VA: 0x1737C50
	public void .ctor() { }

	// RVA: 0x1737CA4 Offset: 0x1737CA4 VA: 0x1737CA4
	public ServantAnimationOverwriteEntity GetEntity(int svtId, int svtLimitCount, int idx) { }

	// RVA: 0x1737D28 Offset: 0x1737D28 VA: 0x1737D28
	public bool TryGetEntity(out ServantAnimationOverwriteEntity entity, int svtId, int svtLimitCount, int idx) { }

	// RVA: 0x1737DB4 Offset: 0x1737DB4 VA: 0x1737DB4
	public static ServantAnimationOverwriteMaster get_Master() { }

	// RVA: 0x1737E20 Offset: 0x1737E20 VA: 0x1737E20
	public ServantAnimationOverwriteEntity[] GetList(int svtId, int limitCount, bool isEnemy) { }

	// RVA: 0x1737F68 Offset: 0x1737F68 VA: 0x1737F68
	private bool IsSvtMatch(DataEntityBase baseEnt, int svtId, int limit, int target) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42DB4 Offset: 0xC42DB4 VA: 0xC42DB4
private sealed class ServantAnimationOverwriteMaster.<GetList>c__AnonStorey0 // TypeDefIndex: 7194
{
	// Fields
	internal int svtId; // 0x10
	internal int limitCount; // 0x14
	internal int applyTarget; // 0x18
	internal ServantAnimationOverwriteMaster $this; // 0x20

	// Methods

	// RVA: 0x1737F60 Offset: 0x1737F60 VA: 0x1737F60
	public void .ctor() { }

	// RVA: 0x173804C Offset: 0x173804C VA: 0x173804C
	internal bool <>m__0(DataEntityBase x) { }
}

// Namespace: 
public class ServantAppendPassiveSkillEntity : DataEntityBase<string> // TypeDefIndex: 7195
{
	// Fields
	public int svtId; // 0x10
	public int num; // 0x14
	public int priority; // 0x18
	public int skillId; // 0x1C

	// Methods

	// RVA: 0x1738098 Offset: 0x1738098 VA: 0x1738098
	public void .ctor() { }

	// RVA: 0x17380E8 Offset: 0x17380E8 VA: 0x17380E8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x17380FC Offset: 0x17380FC VA: 0x17380FC
	public static string CreatePK(int svtId, int num, int priority) { }

	// RVA: 0x1738110 Offset: 0x1738110 VA: 0x1738110
	public void GetEffectExplanation(out string title, out string explanation, int skillLv) { }
}

// Namespace: 
public class ServantAppendPassiveSkillMaster : DataMasterBase<ServantAppendPassiveSkillMaster, ServantAppendPassiveSkillEntity, string> // TypeDefIndex: 7196
{
	// Fields
	protected Dictionary<string, ServantAppendPassiveSkillEntity[]> listCache; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC55C80 Offset: 0xC55C80 VA: 0xC55C80
	private static Comparison<ServantAppendPassiveSkillEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1738250 Offset: 0x1738250 VA: 0x1738250
	public void .ctor() { }

	// RVA: 0x17382CC Offset: 0x17382CC VA: 0x17382CC
	public ServantAppendPassiveSkillEntity GetEntity(int svtId, int num, int priority) { }

	// RVA: 0x1738350 Offset: 0x1738350 VA: 0x1738350
	public bool TryGetEntity(out ServantAppendPassiveSkillEntity entity, int svtId, int num, int priority) { }

	// RVA: 0x17383DC Offset: 0x17383DC VA: 0x17383DC
	private string CreateTempKey(int svtId, int num) { }

	// RVA: 0x1738484 Offset: 0x1738484 VA: 0x1738484 Slot: 6
	public override bool preProcess() { }

	// RVA: 0x17389E0 Offset: 0x17389E0 VA: 0x17389E0
	public ServantAppendPassiveSkillEntity[] GetEntityListFromSvtId(int svtId) { }

	// RVA: 0x1738BB0 Offset: 0x1738BB0 VA: 0x1738BB0
	public ServantAppendPassiveSkillEntity GetEntityFromIdNum(int svtId, int num) { }

	// RVA: 0x1738C80 Offset: 0x1738C80 VA: 0x1738C80
	public void GetAppendPassiveSkillInfo(out int[] idList, out string[] titleList, out string[] explanationList, out bool[] releaseStateList, out int[] lvList, int svtId, long userId, long userSvtId = 0) { }

	// RVA: 0x17394CC Offset: 0x17394CC VA: 0x17394CC
	public SvtUseSkillData GetSkillData(int svtId) { }

	// RVA: 0x17396F4 Offset: 0x17396F4 VA: 0x17396F4
	public void GetAppendPassiveSkillInfo(out int[] idList, out string[] titleList, out string[] explanationList, out bool[] releaseStateList, out int[] lvList, int svtId, int[] releaseSkillIds, int[] releaseSkillLvs) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA678 Offset: 0xCCA678 VA: 0xCCA678
	// RVA: 0x1739DCC Offset: 0x1739DCC VA: 0x1739DCC
	private static int <preProcess>m__0(ServantAppendPassiveSkillEntity a, ServantAppendPassiveSkillEntity b) { }
}

// Namespace: 
public class ServantCardEntity : DataEntityBase<string> // TypeDefIndex: 7197
{
	// Fields
	public int svtId; // 0x10
	public int cardId; // 0x14
	public int motion; // 0x18
	public int[] normalDamage; // 0x20
	public int[] singleDamage; // 0x28
	public int[] trinityDamage; // 0x30
	public int[] unisonDamage; // 0x38
	public int[] grandDamage; // 0x40
	public int attackType; // 0x48
	public int[] attackIndividuality; // 0x50

	// Methods

	// RVA: 0x13B43AC Offset: 0x13B43AC VA: 0x13B43AC
	public void .ctor() { }

	// RVA: 0x13B43FC Offset: 0x13B43FC VA: 0x13B43FC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x13B440C Offset: 0x13B440C VA: 0x13B440C
	public static string CreatePK(int svtId, int cardId) { }
}

// Namespace: 
public class ServantCardMaster : DataMasterBase<ServantCardMaster, ServantCardEntity, string> // TypeDefIndex: 7198
{
	// Methods

	// RVA: 0x13B441C Offset: 0x13B441C VA: 0x13B441C
	public void .ctor() { }

	// RVA: 0x13B4470 Offset: 0x13B4470 VA: 0x13B4470
	public ServantCardEntity GetEntity(int svtId, int cardId) { }

	// RVA: 0x13B44E4 Offset: 0x13B44E4 VA: 0x13B44E4
	public bool TryGetEntity(out ServantCardEntity entity, int svtId, int cardId) { }
}

// Namespace: 
public class ServantChangeEntity : DataEntityBase<string> // TypeDefIndex: 7199
{
	// Fields
	public int svtId; // 0x10
	public int condType; // 0x14
	public int condTargetId; // 0x18
	public int condValue; // 0x1C
	public int priority; // 0x20
	public string name; // 0x28
	public string ruby; // 0x30
	public string battleName; // 0x38
	public int svtVoiceId; // 0x40
	public int limitCount; // 0x44
	public int[] beforeTreasureDeviceIds; // 0x48
	public int[] afterTreasureDeviceIds; // 0x50
	public int flag; // 0x58
	public int battleSvtId; // 0x5C

	// Methods

	// RVA: 0x13B4568 Offset: 0x13B4568 VA: 0x13B4568
	public void .ctor() { }

	// RVA: 0x13B45B8 Offset: 0x13B45B8 VA: 0x13B45B8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x13B45CC Offset: 0x13B45CC VA: 0x13B45CC
	public static string CreatePK(int svtId, int priority) { }

	// RVA: 0x13B45DC Offset: 0x13B45DC VA: 0x13B45DC
	public bool IsEnable() { }

	// RVA: 0x13B465C Offset: 0x13B465C VA: 0x13B465C
	public bool HasFlag(ServantChangeEntity.FlagType type) { }

	// RVA: 0x13B466C Offset: 0x13B466C VA: 0x13B466C
	public int GetAfterTreasureDeviceId(int treasureDeviceId) { }

	// RVA: 0x13B4760 Offset: 0x13B4760 VA: 0x13B4760
	public int GetBeforeTreasureDeviceId(int treasureDeviceId) { }
}

// Namespace: 
public enum ServantChangeEntity.FlagType // TypeDefIndex: 7200
{
	// Fields
	public int value__; // 0x0
	public const ServantChangeEntity.FlagType NONE = 1;
	public const ServantChangeEntity.FlagType NONE_EFFECT = 2;
	public const ServantChangeEntity.FlagType NONE_MATERIAL_SPLIT = 4;
	public const ServantChangeEntity.FlagType TRUE_NAME_IS_KNOWN = 8;
	public const ServantChangeEntity.FlagType NONE_BATTLE_VOICE_SELECT = 16;
}

// Namespace: 
public class ServantChangeMaster : DataMasterBase<ServantChangeMaster, ServantChangeEntity, string> // TypeDefIndex: 7201
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55C90 Offset: 0xC55C90 VA: 0xC55C90
	private static Comparison<ServantChangeEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x13B4854 Offset: 0x13B4854 VA: 0x13B4854
	public void .ctor() { }

	// RVA: 0x13B48A8 Offset: 0x13B48A8 VA: 0x13B48A8
	public ServantChangeEntity GetEntity(int svtId, int priority) { }

	// RVA: 0x13B491C Offset: 0x13B491C VA: 0x13B491C
	public bool TryGetEntity(out ServantChangeEntity entity, int svtId, int priority) { }

	// RVA: 0x13B49A0 Offset: 0x13B49A0 VA: 0x13B49A0
	public ServantChangeEntity[] GetEntityList(int svtId) { }

	// RVA: 0x13B4BC4 Offset: 0x13B4BC4 VA: 0x13B4BC4
	public ServantChangeEntity GetHiddenEntity(int svtId) { }

	// RVA: 0x13B4C04 Offset: 0x13B4C04 VA: 0x13B4C04
	public ServantChangeEntity GetEnableEntity(int svtId) { }

	// RVA: 0x13B4CAC Offset: 0x13B4CAC VA: 0x13B4CAC
	public ServantChangeEntity TrueNameEntity(int svtId) { }

	// RVA: 0x13B4DB8 Offset: 0x13B4DB8 VA: 0x13B4DB8
	public bool IsNameTrue(int svtId) { }

	// RVA: 0x13B4DE0 Offset: 0x13B4DE0 VA: 0x13B4DE0
	public ServantChangeEntity[][] GetNameChangeByQuestClear(int questId, int questPhase, bool isQuestClear) { }

	// RVA: 0x13B53AC Offset: 0x13B53AC VA: 0x13B53AC
	public ServantChangeEntity[] GetAllChanged(int svtId) { }

	// RVA: 0x13B551C Offset: 0x13B551C VA: 0x13B551C
	private int SortWithSvtIdAndPriority(ServantChangeEntity a, ServantChangeEntity b) { }

	// RVA: 0x13B51BC Offset: 0x13B51BC VA: 0x13B51BC
	private List<ServantChangeEntity> getSortedEntityList() { }

	// RVA: 0x13B5578 Offset: 0x13B5578 VA: 0x13B5578
	public int[] GetEnableSvtVoiceList(int svtId) { }

	// RVA: 0x13B5984 Offset: 0x13B5984 VA: 0x13B5984
	public void MargeServantVoiceId(Dictionary<int, bool> isVoiceList) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA688 Offset: 0xCCA688 VA: 0xCCA688
	// RVA: 0x13B5AEC Offset: 0x13B5AEC VA: 0x13B5AEC
	private static int <GetEntityList>m__0(ServantChangeEntity a, ServantChangeEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA698 Offset: 0xCCA698 VA: 0xCCA698
	// RVA: 0x13B5B30 Offset: 0x13B5B30 VA: 0x13B5B30
	private int <getSortedEntityList>m__1(ServantChangeEntity a, ServantChangeEntity b) { }
}

// Namespace: 
public class ServantClassEntity : DataEntityBase<int> // TypeDefIndex: 7202
{
	// Fields
	public int id; // 0x10
	public int attri; // 0x14
	public string name; // 0x18
	public int attackRate; // 0x20
	public int imageId; // 0x24
	public int iconImageId; // 0x28
	public int priority; // 0x2C
	public int groupType; // 0x30
	public int frameId; // 0x34
	public int relationId; // 0x38
	public int supportGroup; // 0x3C
	public int autoSelSupportType; // 0x40

	// Methods

	// RVA: 0x13BC128 Offset: 0x13BC128 VA: 0x13BC128
	public void .ctor() { }

	// RVA: 0x13BC178 Offset: 0x13BC178 VA: 0x13BC178 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x13BC180 Offset: 0x13BC180 VA: 0x13BC180
	public float getAttackRate() { }

	// RVA: 0x13BC198 Offset: 0x13BC198 VA: 0x13BC198
	public static bool IsValidClassOnSellectSupport(int classId) { }
}

// Namespace: 
public enum ServantClassEntity.SupportGroupType // TypeDefIndex: 7203
{
	// Fields
	public int value__; // 0x0
	public const ServantClassEntity.SupportGroupType ALL = 0;
	public const ServantClassEntity.SupportGroupType SABER = 1;
	public const ServantClassEntity.SupportGroupType ARCHER = 2;
	public const ServantClassEntity.SupportGroupType LANCER = 3;
	public const ServantClassEntity.SupportGroupType RIDER = 4;
	public const ServantClassEntity.SupportGroupType CASTER = 5;
	public const ServantClassEntity.SupportGroupType ASSASSIN = 6;
	public const ServantClassEntity.SupportGroupType BERSERKER = 7;
	public const ServantClassEntity.SupportGroupType EXTRA = 8;
	public const ServantClassEntity.SupportGroupType MIX = 9;
	public const ServantClassEntity.SupportGroupType NOT_SUPPORT = 999;
}

// Namespace: 
public class ServantClassMaster : DataMasterBase<ServantClassMaster, ServantClassEntity, int> // TypeDefIndex: 7204
{
	// Methods

	// RVA: 0x13BC9AC Offset: 0x13BC9AC VA: 0x13BC9AC
	public void .ctor() { }

	// RVA: 0x13BCA00 Offset: 0x13BCA00 VA: 0x13BCA00
	public static float getClassAtk(int classId) { }

	// RVA: 0x13BCAB0 Offset: 0x13BCAB0 VA: 0x13BCAB0
	public int getRelationId(int classId) { }

	// RVA: 0x13BCB24 Offset: 0x13BCB24 VA: 0x13BCB24 Slot: 6
	public override bool preProcess() { }

	// RVA: 0x13BCD8C Offset: 0x13BCD8C VA: 0x13BCD8C
	public ServantClassEntity.SupportGroupType getSupportGroupType(int classId) { }

	// RVA: 0x13BCE58 Offset: 0x13BCE58 VA: 0x13BCE58
	public List<int> getExtraClassIdList() { }
}

// Namespace: 
public class ServantCollectionEntity : DataEntityBase<string> // TypeDefIndex: 7205
{
	// Fields
	public int collectionNo; // 0x10
	public int priority; // 0x14
	public int type; // 0x18
	public int commonReleaseId; // 0x1C

	// Methods

	// RVA: 0x13BDE38 Offset: 0x13BDE38 VA: 0x13BDE38
	public void .ctor() { }

	// RVA: 0x13BDE88 Offset: 0x13BDE88 VA: 0x13BDE88 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x13BDE98 Offset: 0x13BDE98 VA: 0x13BDE98
	public static string CreatePK(int collectionNo, int priority) { }

	// RVA: 0x13BDEA8 Offset: 0x13BDEA8 VA: 0x13BDEA8
	public bool IsOpenCondition() { }

	// RVA: 0x13BDF3C Offset: 0x13BDF3C VA: 0x13BDF3C
	public ServantCollectionEntity.CollectionEffectType GetCollectionEffectType() { }
}

// Namespace: 
public enum ServantCollectionEntity.CollectionEffectType // TypeDefIndex: 7206
{
	// Fields
	public int value__; // 0x0
	public const ServantCollectionEntity.CollectionEffectType INVALID = -1;
	public const ServantCollectionEntity.CollectionEffectType NONE = 0;
	public const ServantCollectionEntity.CollectionEffectType DATA_LOST = 1;
	public const ServantCollectionEntity.CollectionEffectType HIDE = 2;
}

// Namespace: 
public class ServantCollectionMaster : DataMasterBase<ServantCollectionMaster, ServantCollectionEntity, string> // TypeDefIndex: 7207
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55CA0 Offset: 0xC55CA0 VA: 0xC55CA0
	private static Comparison<ServantCollectionEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x13BDF44 Offset: 0x13BDF44 VA: 0x13BDF44
	public void .ctor() { }

	// RVA: 0x13BDF98 Offset: 0x13BDF98 VA: 0x13BDF98
	public ServantCollectionEntity GetEntity(int collectionNo, int priority) { }

	// RVA: 0x13BE00C Offset: 0x13BE00C VA: 0x13BE00C
	public bool TryGetEntity(out ServantCollectionEntity entity, int collectionNo, int priority) { }

	// RVA: 0x13BE090 Offset: 0x13BE090 VA: 0x13BE090
	public bool IsNeedOverrideDisplayType(UserServantCollectionEntity entity) { }

	// RVA: 0x13BE1FC Offset: 0x13BE1FC VA: 0x13BE1FC
	public bool IsNeedOverrideDisplayType(int collectionNo) { }

	// RVA: 0x13BE3C0 Offset: 0x13BE3C0 VA: 0x13BE3C0
	public ServantCollectionEntity.CollectionEffectType GetOverrideDisplayType(UserServantCollectionEntity entity) { }

	// RVA: 0x13BE528 Offset: 0x13BE528 VA: 0x13BE528
	public ServantCollectionEntity.CollectionEffectType GetOverrideDisplayType(int collectionNo) { }

	// RVA: 0x13BE5CC Offset: 0x13BE5CC VA: 0x13BE5CC
	private ServantCollectionEntity[] GetSortedEntities(int collectionNo) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA6A8 Offset: 0xCCA6A8 VA: 0xCCA6A8
	// RVA: 0x13BE8B8 Offset: 0x13BE8B8 VA: 0x13BE8B8
	private static int <GetSortedEntities>m__0(ServantCollectionEntity a, ServantCollectionEntity b) { }
}

// Namespace: 
public class ServantCommandCodeUnlockEntity : DataEntityBase<string> // TypeDefIndex: 7208
{
	// Fields
	public int svtId; // 0x10
	public int cardIdx; // 0x14
	public int qp; // 0x18
	public int[] itemNums; // 0x20
	public int[] itemIds; // 0x28

	// Methods

	// RVA: 0x13C822C Offset: 0x13C822C VA: 0x13C822C
	public void .ctor() { }

	// RVA: 0x13C827C Offset: 0x13C827C VA: 0x13C827C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x13C828C Offset: 0x13C828C VA: 0x13C828C
	public static string CreatePK(int svtId, int cardIdx) { }
}

// Namespace: 
public class ServantCommandCodeUnlockMaster : DataMasterBase<ServantCommandCodeUnlockMaster, ServantCommandCodeUnlockEntity, string> // TypeDefIndex: 7209
{
	// Methods

	// RVA: 0x13C829C Offset: 0x13C829C VA: 0x13C829C
	public void .ctor() { }

	// RVA: 0x13C82F0 Offset: 0x13C82F0 VA: 0x13C82F0
	public ServantCommandCodeUnlockEntity GetEntity(int svtId, int cardIdx) { }

	// RVA: 0x13C8364 Offset: 0x13C8364 VA: 0x13C8364
	public bool TryGetEntity(out ServantCommandCodeUnlockEntity entity, int svtId, int cardIdx) { }
}

// Namespace: 
public class ServantCommentAddEntity : DataEntityBase<string> // TypeDefIndex: 7210
{
	// Fields
	public int svtId; // 0x10
	public int id; // 0x14
	public int priority; // 0x18
	public int idx; // 0x1C
	public int condType; // 0x20
	public int condValue; // 0x24
	public int[] condValues; // 0x28
	public int condValue2; // 0x30

	// Methods

	// RVA: 0x13C83E8 Offset: 0x13C83E8 VA: 0x13C83E8
	public void .ctor() { }

	// RVA: 0x13C8438 Offset: 0x13C8438 VA: 0x13C8438 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x13C844C Offset: 0x13C844C VA: 0x13C844C
	public static string CreatePK(int svtId, int id, int priority, int idx) { }

	// RVA: 0x13C8464 Offset: 0x13C8464 VA: 0x13C8464
	public bool IsOpen(int oldFriendShipRank = -1) { }

	// RVA: 0x13C8768 Offset: 0x13C8768 VA: 0x13C8768
	public bool IsOnlyOpenQuestCond(int questId, int questPhase) { }
}

// Namespace: 
public class ServantCommentAddMaster : DataMasterBase<ServantCommentAddMaster, ServantCommentAddEntity, string> // TypeDefIndex: 7211
{
	// Methods

	// RVA: 0x13C892C Offset: 0x13C892C VA: 0x13C892C
	public void .ctor() { }

	// RVA: 0x13C8980 Offset: 0x13C8980 VA: 0x13C8980
	public ServantCommentAddEntity GetEntity(int svtId, int id, int priority, int idx) { }

	// RVA: 0x13C8A0C Offset: 0x13C8A0C VA: 0x13C8A0C
	public bool TryGetEntity(out ServantCommentAddEntity entity, int svtId, int id, int priority, int idx) { }

	// RVA: 0x13C8AA8 Offset: 0x13C8AA8 VA: 0x13C8AA8
	public ServantCommentAddEntity[] GetEntitiyList(int svtId, int id, int priority) { }

	// RVA: 0x13C8C44 Offset: 0x13C8C44 VA: 0x13C8C44
	public bool IsEntityListCondContain(int svtId, int id, int priority, CondType.Kind condType) { }

	// RVA: 0x13C8D90 Offset: 0x13C8D90 VA: 0x13C8D90
	public bool IsOpen(int svtId, int id, int priority, int oldFriendShipRank = -1) { }

	// RVA: 0x13C8E28 Offset: 0x13C8E28 VA: 0x13C8E28
	public bool IsOnlyOpenQuestCond(int svtId, int id, int priority, int kind, int questId, int questPhase) { }

	// RVA: 0x13C8EE4 Offset: 0x13C8EE4 VA: 0x13C8EE4
	public string GetConditionString(string textType, string textType2, int svtId, int id, int priority, int oldFriendShipRank = -1) { }
}

// Namespace: 
public class ServantCommentEntity : DataEntityBase<string> // TypeDefIndex: 7212
{
	// Fields
	private static readonly string SCRIPT_IMAGE_LIMIT; // 0x0
	private static readonly string SCRIPT_COND_TITLE; // 0x8
	public int svtId; // 0x10
	public int id; // 0x14
	public int priority; // 0x18
	public string comment; // 0x20
	public string condMessage; // 0x28
	public int condType; // 0x30
	public int condValue; // 0x34
	public int[] condValues; // 0x38
	public int condValue2; // 0x40
	public Dictionary<string, object> script; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC55CB0 Offset: 0xC55CB0 VA: 0xC55CB0
	private static Func<string, int> <>f__mg$cache0; // 0x10

	// Methods

	// RVA: 0x13C92C4 Offset: 0x13C92C4 VA: 0x13C92C4
	public void .ctor() { }

	// RVA: 0x13C9314 Offset: 0x13C9314 VA: 0x13C9314 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x13C9394 Offset: 0x13C9394 VA: 0x13C9394
	public static string CreatePK(int svtId, int id, int priority) { }

	// RVA: 0x13C93A8 Offset: 0x13C93A8 VA: 0x13C93A8
	public bool IsConst() { }

	// RVA: 0x13C9414 Offset: 0x13C9414 VA: 0x13C9414
	public bool IsOpen(int oldFriendShipRank = -1, bool addCheck = True) { }

	// RVA: 0x13C9794 Offset: 0x13C9794 VA: 0x13C9794
	public bool IsOnlyOpenQuestCond(int questId, int questPhase) { }

	// RVA: 0x13C9958 Offset: 0x13C9958 VA: 0x13C9958
	public void SetOpen() { }

	// RVA: 0x13C9C04 Offset: 0x13C9C04 VA: 0x13C9C04
	public bool IsNew() { }

	// RVA: 0x13C9CB4 Offset: 0x13C9CB4 VA: 0x13C9CB4
	public string GetConditiontext(string textType = "") { }

	// RVA: 0x13C91E0 Offset: 0x13C91E0 VA: 0x13C91E0
	public static string GetConditionText(string textType, CondType.Kind condType, int condValue, int[] condValues, int condValue2) { }

	// RVA: 0x13C9D94 Offset: 0x13C9D94 VA: 0x13C9D94
	public string GetComment() { }

