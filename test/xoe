	// RVA: 0x1C9251C Offset: 0x1C9251C VA: 0x1C9251C
	public void .ctor() { }

	// RVA: 0x1C92570 Offset: 0x1C92570 VA: 0x1C92570
	public EventRaceEntity GetEntity(int eventId, int termId) { }

	// RVA: 0x1C925E4 Offset: 0x1C925E4 VA: 0x1C925E4
	public bool TryGetEntity(out EventRaceEntity entity, int eventId, int termId) { }

	// RVA: 0x1C92668 Offset: 0x1C92668 VA: 0x1C92668
	public EventRaceEntity[] GetRaceEntityList(int eventId) { }

	// RVA: 0x1C927F0 Offset: 0x1C927F0 VA: 0x1C927F0
	public bool IsEveryTeamGoaled(int eventId, int termId) { }

	// RVA: 0x1C92A80 Offset: 0x1C92A80 VA: 0x1C92A80
	public int GetGoaledTeamCount(int eventId, int termId, long nowTime) { }

	// RVA: 0x1C92CF0 Offset: 0x1C92CF0 VA: 0x1C92CF0
	public bool IsReachedPointRateInTerm(int eventId, int termId, int rate) { }

	// RVA: 0x1C92F34 Offset: 0x1C92F34 VA: 0x1C92F34
	public float GetGoalRate(int eventId, int termId, int groupId) { }

	// RVA: 0x1C930FC Offset: 0x1C930FC VA: 0x1C930FC
	public int GetGroupIndex(int eventId, int termId, int groupId) { }

	// RVA: 0x1C9328C Offset: 0x1C9328C VA: 0x1C9328C
	public List<EventRaceMaster.GroupRankData> getGroupIdData(int eventId, int termId) { }

	// RVA: 0x1C93860 Offset: 0x1C93860 VA: 0x1C93860
	public int GetTermIndex(int eventId, int termId) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37A2C Offset: 0xD37A2C VA: 0xD37A2C
	// RVA: 0x1C93AEC Offset: 0x1C93AEC VA: 0x1C93AEC
	private static int <getGroupIdData>m__0(EventRaceMaster.GroupRankData a, EventRaceMaster.GroupRankData b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37A3C Offset: 0xD37A3C VA: 0xD37A3C
	// RVA: 0x1C93AFC Offset: 0x1C93AFC VA: 0x1C93AFC
	private static int <getGroupIdData>m__1(EventRaceMaster.GroupRankData a, EventRaceMaster.GroupRankData b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37A4C Offset: 0xD37A4C VA: 0xD37A4C
	// RVA: 0x1C93B0C Offset: 0x1C93B0C VA: 0x1C93B0C
	private static int <GetTermIndex>m__2(EventRaceEntity a, EventRaceEntity b) { }
}

// Namespace: 
public struct EventRaceMaster.GroupRankData // TypeDefIndex: 6931
{
	// Fields
	public int groupId; // 0x0
	public float rate; // 0x4
	public bool isGoal; // 0x8
	public long goalTime; // 0x10

	// Methods

	// RVA: 0xDC4B60 Offset: 0xDC4B60 VA: 0xDC4B60
	public void .ctor(int groupId, float rate, long goalTime) { }
}

// Namespace: 
public class EventRaceResultEntity : DataEntityBase<string> // TypeDefIndex: 6932
{
	// Fields
	public int eventId; // 0x10
	public int termId; // 0x14
	public int groupId; // 0x18
	public long startedAt; // 0x20
	public long endedAt; // 0x28

	// Methods

	// RVA: 0x1C9506C Offset: 0x1C9506C VA: 0x1C9506C
	public void .ctor() { }

	// RVA: 0x1C950BC Offset: 0x1C950BC VA: 0x1C950BC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C950D0 Offset: 0x1C950D0 VA: 0x1C950D0
	public static string CreatePK(int eventId, int termId, int groupId) { }

	// RVA: 0x1C950E4 Offset: 0x1C950E4 VA: 0x1C950E4
	public long GetRaceTime(long timeNow) { }
}

// Namespace: 
public class EventRaceResultMaster : DataMasterBase<EventRaceResultMaster, EventRaceResultEntity, string> // TypeDefIndex: 6933
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC186C Offset: 0xCC186C VA: 0xCC186C
	private static Comparison<DataEntityBase> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1C95104 Offset: 0x1C95104 VA: 0x1C95104
	public void .ctor() { }

	// RVA: 0x1C95158 Offset: 0x1C95158 VA: 0x1C95158
	public EventRaceResultEntity GetEntity(int eventId, int termId, int groupId) { }

	// RVA: 0x1C951DC Offset: 0x1C951DC VA: 0x1C951DC
	public bool TryGetEntity(out EventRaceResultEntity entity, int eventId, int termId, int groupId) { }

	// RVA: 0x1C95268 Offset: 0x1C95268 VA: 0x1C95268
	public int GetNowTerm(int eventId) { }

	// RVA: 0x1C95580 Offset: 0x1C95580 VA: 0x1C95580
	public long GetTargetGoalTime(int eventId, int term, int groupId) { }

	// RVA: 0x1C956F8 Offset: 0x1C956F8 VA: 0x1C956F8
	public long getRaceStartedAt(int eventId, int termId) { }

	// RVA: 0x1C95838 Offset: 0x1C95838 VA: 0x1C95838
	public int GetRankedGroupId(int eventId, int termId, int rank, out long goalTime) { }

	// RVA: 0x1C95910 Offset: 0x1C95910 VA: 0x1C95910
	public int[] GetRankDatas(int eventId, int termId, out long[] goalTime) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37A5C Offset: 0xD37A5C VA: 0xD37A5C
	// RVA: 0x1C95C50 Offset: 0x1C95C50 VA: 0x1C95C50
	private static int <GetNowTerm>m__0(DataEntityBase a, DataEntityBase b) { }
}

// Namespace: 
public class EventRaidEntity : DataEntityBase<string> // TypeDefIndex: 6934
{
	// Fields
	public static readonly int SUB_GROUP_INDEX_START; // 0x0
	public int eventId; // 0x10
	public int day; // 0x14
	public int groupIndex; // 0x18
	public int subGroupIndex; // 0x1C
	public string name; // 0x20
	public long maxHp; // 0x28
	public int iconId; // 0x30
	public int bossColor; // 0x34
	public int giftId; // 0x38
	public int presentMessageId; // 0x3C
	public int loginMessageId; // 0x40
	public long defeatNormaAt; // 0x48
	public long startedAt; // 0x50
	public long endedAt; // 0x58
	public long timeLimitAt; // 0x60
	public string[] splitAiMode; // 0x68
	public long[] splitHp; // 0x70

	// Methods

	// RVA: 0x1C964C8 Offset: 0x1C964C8 VA: 0x1C964C8
	public void .ctor() { }

	// RVA: 0x1C96518 Offset: 0x1C96518 VA: 0x1C96518 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C96588 Offset: 0x1C96588 VA: 0x1C96588
	public static string CreatePK(int eventId, int day) { }

	// RVA: 0x1C96598 Offset: 0x1C96598 VA: 0x1C96598
	public Color GetBossColor() { }

	// RVA: 0x1C965F8 Offset: 0x1C965F8 VA: 0x1C965F8
	public TotalEventRaidEntity getTotalEventRaidEntity() { }

	// RVA: 0x1C96718 Offset: 0x1C96718 VA: 0x1C96718
	public bool isCleard() { }

	// RVA: 0x1C96754 Offset: 0x1C96754 VA: 0x1C96754
	public bool IsValidDefeatedTime() { }

	// RVA: 0x1C9682C Offset: 0x1C9682C VA: 0x1C9682C
	public bool IsJustDefeated() { }

	// RVA: 0x1C96904 Offset: 0x1C96904 VA: 0x1C96904
	public bool IsJumbleSingleRaid() { }

	// RVA: 0x1C96ABC Offset: 0x1C96ABC VA: 0x1C96ABC
	public bool IsGroupDeadQuestClear() { }

	// RVA: 0x1C96C60 Offset: 0x1C96C60 VA: 0x1C96C60
	private static void .cctor() { }
}

// Namespace: 
public class EventRaidMaster : DataMasterBase<EventRaidMaster, EventRaidEntity, string> // TypeDefIndex: 6935
{
	// Fields
	public static readonly int OLD_RAID_DAY_COUNT; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC187C Offset: 0xCC187C VA: 0xCC187C
	private static Comparison<QuestReleaseEntity> <>f__am$cache0; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCC188C Offset: 0xCC188C VA: 0xCC188C
	private static Comparison<EventRaidEntity> <>f__am$cache1; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCC189C Offset: 0xCC189C VA: 0xCC189C
	private static Comparison<EventRaidEntity> <>f__am$cache2; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCC18AC Offset: 0xCC18AC VA: 0xCC18AC
	private static Comparison<EventRaidEntity> <>f__am$cache3; // 0x20

	// Methods

	// RVA: 0x1C96CB4 Offset: 0x1C96CB4 VA: 0x1C96CB4
	public void .ctor() { }

	// RVA: 0x1C96D08 Offset: 0x1C96D08 VA: 0x1C96D08
	public EventRaidEntity GetEntity(int eventId, int day) { }

	// RVA: 0x1C96D9C Offset: 0x1C96D9C VA: 0x1C96D9C
	public bool TryGetEntity(out EventRaidEntity entity, int eventId, int day) { }

	// RVA: 0x1C96E40 Offset: 0x1C96E40 VA: 0x1C96E40
	private QuestReleaseEntity[] GetRaidDeadQuestReleaseEntityList(int eventId, int day = 0) { }

	// RVA: 0x1C96EB8 Offset: 0x1C96EB8 VA: 0x1C96EB8
	private List<QuestReleaseEntity> GetQuestReleaseEntityList(int eventId, CondType.Kind condType, int day = 0) { }

	// RVA: 0x1C97224 Offset: 0x1C97224 VA: 0x1C97224
	public int[] GetRaidAliveQuestIds(int eventId, int day) { }

	// RVA: 0x1C97434 Offset: 0x1C97434 VA: 0x1C97434
	public int GetRaidDeadQuestId(int eventId, int day) { }

	// RVA: 0x1C96BA8 Offset: 0x1C96BA8 VA: 0x1C96BA8
	public int GetRaidGroupDeadQuestId(int eventId, int groupIndex) { }

	// RVA: 0x1C9729C Offset: 0x1C9729C VA: 0x1C9729C
	private List<int> GetQuestIdList(int eventId, CondType.Kind condType, int day) { }

	// RVA: 0x1C974EC Offset: 0x1C974EC VA: 0x1C974EC
	public int GetCurrentDay(int eventId) { }

	// RVA: 0x1C9777C Offset: 0x1C9777C VA: 0x1C9777C
	public int GetCurrentDayOld(int eventId) { }

	// RVA: 0x1C979A0 Offset: 0x1C979A0 VA: 0x1C979A0
	public EventRaidEntity[] GetCurrentGroupListByEventId(int eventId) { }

	// RVA: 0x1C97A1C Offset: 0x1C97A1C VA: 0x1C97A1C
	public EventRaidEntity[] GetCurrentGroupListByEntity(EventRaidEntity currentEventRaidEntity) { }

	// RVA: 0x1C97D64 Offset: 0x1C97D64 VA: 0x1C97D64
	public EventRaidEntity[] GetEventRaidEntityArrayFromEventId(int eventId) { }

	// RVA: 0x1C97E48 Offset: 0x1C97E48 VA: 0x1C97E48
	public bool IsEventRaidAliveAny(int eventId) { }

	// RVA: 0x1C97F44 Offset: 0x1C97F44 VA: 0x1C97F44
	public long GetEventRaidTimeLimitAt(int eventId) { }

	// RVA: 0x1C97FE0 Offset: 0x1C97FE0 VA: 0x1C97FE0
	public int GetRaidGorupMax(int eventId) { }

	// RVA: 0x1C981C8 Offset: 0x1C981C8 VA: 0x1C981C8
	public int GetSubGroupNow(EventRaidEntity eventRaidEntityBase) { }

	// RVA: 0x1C98380 Offset: 0x1C98380 VA: 0x1C98380
	public int GetSubGroupMax(EventRaidEntity EventRaidEntityBase) { }

	// RVA: 0x1C98588 Offset: 0x1C98588 VA: 0x1C98588
	public int GetNowGroupIndex(int eventId, int raidCountMax = -1) { }

	// RVA: 0x1C969C4 Offset: 0x1C969C4 VA: 0x1C969C4
	public EventRaidEntity[] GetEventRaidEntityArray(int eventId, int groupIndex) { }

	// RVA: 0x1C98940 Offset: 0x1C98940 VA: 0x1C98940
	public EventRaidEntity GetNextSubGroupEntity(EventRaidEntity nowEventRaidEntity) { }

	// RVA: 0x1C98BCC Offset: 0x1C98BCC VA: 0x1C98BCC
	public int GetStartRaidGroupIndex(int eventId) { }

	// RVA: 0x1C98D6C Offset: 0x1C98D6C VA: 0x1C98D6C
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD37A6C Offset: 0xD37A6C VA: 0xD37A6C
	// RVA: 0x1C98DC0 Offset: 0x1C98DC0 VA: 0x1C98DC0
	private static int <GetQuestReleaseEntityList>m__0(QuestReleaseEntity a, QuestReleaseEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37A7C Offset: 0xD37A7C VA: 0xD37A7C
	// RVA: 0x1C98E14 Offset: 0x1C98E14 VA: 0x1C98E14
	private static int <GetCurrentGroupListByEntity>m__1(EventRaidEntity a, EventRaidEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37A8C Offset: 0xD37A8C VA: 0xD37A8C
	// RVA: 0x1C98E54 Offset: 0x1C98E54 VA: 0x1C98E54
	private static int <GetSubGroupNow>m__2(EventRaidEntity a, EventRaidEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37A9C Offset: 0xD37A9C VA: 0xD37A9C
	// RVA: 0x1C98E94 Offset: 0x1C98E94 VA: 0x1C98E94
	private static int <GetNextSubGroupEntity>m__3(EventRaidEntity a, EventRaidEntity b) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEDD0 Offset: 0xCAEDD0 VA: 0xCAEDD0
private sealed class EventRaidMaster.<GetEventRaidEntityArrayFromEventId>c__AnonStorey0 // TypeDefIndex: 6936
{
	// Fields
	internal int eventId; // 0x10

	// Methods

	// RVA: 0x1C97E40 Offset: 0x1C97E40 VA: 0x1C97E40
	public void .ctor() { }

	// RVA: 0x1C98F5C Offset: 0x1C98F5C VA: 0x1C98F5C
	internal bool <>m__0(EventRaidEntity a) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEDE0 Offset: 0xCAEDE0 VA: 0xCAEDE0
private sealed class EventRaidMaster.<GetEventRaidEntityArray>c__AnonStorey1 // TypeDefIndex: 6937
{
	// Fields
	internal int eventId; // 0x10
	internal int groupIndex; // 0x14

	// Methods

	// RVA: 0x1C98938 Offset: 0x1C98938 VA: 0x1C98938
	public void .ctor() { }

	// RVA: 0x1C98F08 Offset: 0x1C98F08 VA: 0x1C98F08
	internal bool <>m__0(EventRaidEntity a) { }
}

// Namespace: 
public class EventRandomMissionEntity : DataEntityBase<string> // TypeDefIndex: 6938
{
	// Fields
	public int missionId; // 0x10
	public int eventId; // 0x14
	public int missionRank; // 0x18
	public int condType; // 0x1C
	public int condId; // 0x20
	public int condNum; // 0x24

	// Methods

	// RVA: 0x1C99FA8 Offset: 0x1C99FA8 VA: 0x1C99FA8
	public void .ctor() { }

	// RVA: 0x1C99FF8 Offset: 0x1C99FF8 VA: 0x1C99FF8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C9A000 Offset: 0x1C9A000 VA: 0x1C9A000
	public static string CreatePK(int missionId) { }
}

// Namespace: 
public class EventRandomMissionMaster : DataMasterBase<EventRandomMissionMaster, EventRandomMissionEntity, string> // TypeDefIndex: 6939
{
	// Methods

	// RVA: 0x1C9F848 Offset: 0x1C9F848 VA: 0x1C9F848
	public void .ctor() { }

	// RVA: 0x1C9F89C Offset: 0x1C9F89C VA: 0x1C9F89C
	public EventRandomMissionEntity GetEntity(int missionId) { }

	// RVA: 0x1C9B118 Offset: 0x1C9B118 VA: 0x1C9B118
	public bool TryGetEntity(out EventRandomMissionEntity entity, int missionId) { }
}

// Namespace: 
public class EventRewardBgEntity : DataEntityBase<string> // TypeDefIndex: 6940
{
	// Fields
	public int eventId; // 0x10
	public int slot; // 0x14
	public int priority; // 0x18
	public int commonReleaseId; // 0x1C
	public int bgId; // 0x20

	// Methods

	// RVA: 0x1CA74F4 Offset: 0x1CA74F4 VA: 0x1CA74F4
	public void .ctor() { }

	// RVA: 0x1CA7544 Offset: 0x1CA7544 VA: 0x1CA7544 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1CA7558 Offset: 0x1CA7558 VA: 0x1CA7558
	public static string CreatePK(int eventId, int slot, int priority) { }
}

// Namespace: 
public class EventRewardBgMaster : DataMasterBase<EventRewardBgMaster, EventRewardBgEntity, string> // TypeDefIndex: 6941
{
	// Methods

	// RVA: 0x1635368 Offset: 0x1635368 VA: 0x1635368
	public void .ctor() { }

	// RVA: 0x16353BC Offset: 0x16353BC VA: 0x16353BC
	public EventRewardBgEntity GetEntity(int eventId, int slot, int priority) { }

	// RVA: 0x1635440 Offset: 0x1635440 VA: 0x1635440
	public bool TryGetEntity(out EventRewardBgEntity entity, int eventId, int slot, int priority) { }

	// RVA: 0x16354CC Offset: 0x16354CC VA: 0x16354CC
	public int GetEventRewardBgId(int eventId, int slot) { }
}

// Namespace: 
public class EventRewardEntity : DataEntityBase<string> // TypeDefIndex: 6942
{
	// Fields
	public int eventId; // 0x10
	public int slot; // 0x14
	public int groupId; // 0x18
	public long point; // 0x20
	public int type; // 0x28
	public int giftId; // 0x2C
	public int presentMessageId; // 0x30
	public int bgImageId; // 0x34

	// Methods

	// RVA: 0x16379A4 Offset: 0x16379A4 VA: 0x16379A4
	public void .ctor() { }

	// RVA: 0x16379F4 Offset: 0x16379F4 VA: 0x16379F4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1637A0C Offset: 0x1637A0C VA: 0x1637A0C
	public static string CreatePK(int eventId, int slot, int groupId, long point) { }

	// RVA: 0x1637A20 Offset: 0x1637A20 VA: 0x1637A20
	public GiftEntity getGiftData() { }

	// RVA: 0x1637AB0 Offset: 0x1637AB0 VA: 0x1637AB0
	public EventRewardExtraEntity getSetRewardData() { }

	// RVA: 0x1637BAC Offset: 0x1637BAC VA: 0x1637BAC
	public EventRewardSetEntity getRewardSetData() { }

	// RVA: 0x1637C50 Offset: 0x1637C50 VA: 0x1637C50
	public void GetInfo(out string nameText, out string countText) { }

	// RVA: 0x1637D54 Offset: 0x1637D54 VA: 0x1637D54
	public bool isQp() { }
}

// Namespace: 
public class EventRewardExtraEntity : DataEntityBase<string> // TypeDefIndex: 6943
{
	// Fields
	public int eventId; // 0x10
	public long point; // 0x18
	public int iconId; // 0x20
	public string name; // 0x28
	public string detail; // 0x30

	// Methods

	// RVA: 0x1637D84 Offset: 0x1637D84 VA: 0x1637D84
	public void .ctor() { }

	// RVA: 0x1637DD4 Offset: 0x1637DD4 VA: 0x1637DD4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1637DE4 Offset: 0x1637DE4 VA: 0x1637DE4
	public static string CreatePK(int eventId, long point) { }
}

// Namespace: 
public class EventRewardExtraMaster : DataMasterBase<EventRewardExtraMaster, EventRewardExtraEntity, string> // TypeDefIndex: 6944
{
	// Methods

	// RVA: 0x1637DF0 Offset: 0x1637DF0 VA: 0x1637DF0
	public void .ctor() { }

	// RVA: 0x1637E44 Offset: 0x1637E44 VA: 0x1637E44
	public EventRewardExtraEntity GetEntity(int eventId, long point) { }

	// RVA: 0x1637EB8 Offset: 0x1637EB8 VA: 0x1637EB8
	public bool TryGetEntity(out EventRewardExtraEntity entity, int eventId, long point) { }
}

// Namespace: 
public class EventRewardGuideReleaseEntity : DataEntityBase<string> // TypeDefIndex: 6945
{
	// Fields
	public int eventId; // 0x10
	public int slot; // 0x14
	public int condType; // 0x18
	public int condTargetId; // 0x1C
	public int condValue; // 0x20
	public int[] guideImageIds; // 0x28
	public int condGroup; // 0x30

	// Methods

	// RVA: 0x1637F3C Offset: 0x1637F3C VA: 0x1637F3C
	public void .ctor() { }

	// RVA: 0x1637F8C Offset: 0x1637F8C VA: 0x1637F8C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1637FA0 Offset: 0x1637FA0 VA: 0x1637FA0
	public static string CreatePK(int eventId, int slot, int condType, int condTargetId) { }

	// RVA: 0x1637FB8 Offset: 0x1637FB8 VA: 0x1637FB8
	public bool GetIsReleased() { }

	// RVA: 0x1638038 Offset: 0x1638038 VA: 0x1638038
	public int[] GetGuideImageIds() { }
}

// Namespace: 
public class EventRewardGuideReleaseMaster : DataMasterBase<EventRewardGuideReleaseMaster, EventRewardGuideReleaseEntity, string> // TypeDefIndex: 6946
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC18BC Offset: 0xCC18BC VA: 0xCC18BC
	private static Comparison<EventRewardGuideReleaseEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1638040 Offset: 0x1638040 VA: 0x1638040
	public void .ctor() { }

	// RVA: 0x1638094 Offset: 0x1638094 VA: 0x1638094
	public EventRewardGuideReleaseEntity GetEntity(int eventId, int slot, int condType, int condTargetId) { }

	// RVA: 0x1638120 Offset: 0x1638120 VA: 0x1638120
	public bool TryGetEntity(out EventRewardGuideReleaseEntity entity, int eventId, int slot, int condType, int condTargetId) { }

	// RVA: 0x16381BC Offset: 0x16381BC VA: 0x16381BC
	public EventRewardGuideReleaseEntity[] GetEntities(int eventId) { }

	// RVA: 0x16383CC Offset: 0x16383CC VA: 0x16383CC
	public EventRewardGuideReleaseEntity[] GetEntities(int eventId, int slot) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37AAC Offset: 0xD37AAC VA: 0xD37AAC
	// RVA: 0x16384FC Offset: 0x16384FC VA: 0x16384FC
	private static int <GetEntities>m__0(EventRewardGuideReleaseEntity a, EventRewardGuideReleaseEntity b) { }
}

// Namespace: 
public class EventRewardMaster : DataMasterBase<EventRewardMaster, EventRewardEntity, string> // TypeDefIndex: 6947
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC18CC Offset: 0xCC18CC VA: 0xCC18CC
	private static Comparison<EventRewardEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC18DC Offset: 0xCC18DC VA: 0xCC18DC
	private static Comparison<EventRewardEntity> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCC18EC Offset: 0xCC18EC VA: 0xCC18EC
	private static Comparison<EventRewardEntity> <>f__am$cache2; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCC18FC Offset: 0xCC18FC VA: 0xCC18FC
	private static Comparison<EventRewardEntity> <>f__am$cache3; // 0x18

	// Methods

	// RVA: 0x163853C Offset: 0x163853C VA: 0x163853C
	public void .ctor() { }

	// RVA: 0x1638590 Offset: 0x1638590 VA: 0x1638590
	public EventRewardEntity GetEntity(int eventId, int slot, int groupId, long point) { }

	// RVA: 0x163861C Offset: 0x163861C VA: 0x163861C
	public bool TryGetEntity(out EventRewardEntity entity, int eventId, int slot, int groupId, long point) { }

	// RVA: 0x16386B8 Offset: 0x16386B8 VA: 0x16386B8
	public EventRewardEntity[] GetEventRewardEntitiyList(int eventId) { }

	// RVA: 0x16388D0 Offset: 0x16388D0 VA: 0x16388D0
	public EventRewardEntity[] GetEventRewardEntitiyList(int eventId, int groupId) { }

	// RVA: 0x1638AF4 Offset: 0x1638AF4 VA: 0x1638AF4
	public EventRewardEntity GetNextEventRewardEntity(int eventId, long eventPoint) { }

	// RVA: 0x1638C30 Offset: 0x1638C30 VA: 0x1638C30
	public EventRewardEntity GetNextEventRewardEntity(int eventId, int groupId, long eventPoint) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37ABC Offset: 0xD37ABC VA: 0xD37ABC
	// RVA: 0x1638D9C Offset: 0x1638D9C VA: 0x1638D9C
	private static int <GetEventRewardEntitiyList>m__0(EventRewardEntity a, EventRewardEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37ACC Offset: 0xD37ACC VA: 0xD37ACC
	// RVA: 0x1638DDC Offset: 0x1638DDC VA: 0x1638DDC
	private static int <GetEventRewardEntitiyList>m__1(EventRewardEntity a, EventRewardEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37ADC Offset: 0xD37ADC VA: 0xD37ADC
	// RVA: 0x1638E1C Offset: 0x1638E1C VA: 0x1638E1C
	private static int <GetNextEventRewardEntity>m__2(EventRewardEntity x, EventRewardEntity y) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37AEC Offset: 0xD37AEC VA: 0xD37AEC
	// RVA: 0x1638E5C Offset: 0x1638E5C VA: 0x1638E5C
	private static int <GetNextEventRewardEntity>m__3(EventRewardEntity x, EventRewardEntity y) { }
}

// Namespace: 
public class EventRewardSceneEntity : DataEntityBase<string> // TypeDefIndex: 6948
{
	// Fields
	public int eventId; // 0x10
	public int slot; // 0x14
	public int groupId; // 0x18
	public int type; // 0x1C
	public int tabImageId; // 0x20
	public int imageId; // 0x24
	public int bgId; // 0x28
	public int bgmId; // 0x2C
	public int afterBgmId; // 0x30
	public int[] guideImageIds; // 0x38
	public int[] guideLimitCounts; // 0x40
	public int[] guideFaceIds; // 0x48
	public string[] guideDisplayNames; // 0x50
	public int[] guideWeights; // 0x58
	public int[] guideUnselectedMax; // 0x60
	public long flag; // 0x68

	// Methods

	// RVA: 0x1C335AC Offset: 0x1C335AC VA: 0x1C335AC
	public void .ctor() { }

	// RVA: 0x1C335FC Offset: 0x1C335FC VA: 0x1C335FC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C3360C Offset: 0x1C3360C VA: 0x1C3360C
	public static string CreatePK(int eventId, int slot) { }

	// RVA: 0x1C3361C Offset: 0x1C3361C VA: 0x1C3361C
	public int GetBgmId() { }

	// RVA: 0x1C33700 Offset: 0x1C33700 VA: 0x1C33700
	public bool IsEventShop() { }

	// RVA: 0x1C33710 Offset: 0x1C33710 VA: 0x1C33710
	public bool IsBoxGacha() { }

	// RVA: 0x1C33720 Offset: 0x1C33720 VA: 0x1C33720
	public bool IsTreasureBox() { }

	// RVA: 0x1C33730 Offset: 0x1C33730 VA: 0x1C33730
	public bool IsEventPoint() { }

	// RVA: 0x1C33740 Offset: 0x1C33740 VA: 0x1C33740
	public bool IsEventMission() { }

	// RVA: 0x1C33750 Offset: 0x1C33750 VA: 0x1C33750
	public bool IsDamagePoint() { }

	// RVA: 0x1C33760 Offset: 0x1C33760 VA: 0x1C33760
	public bool IsRanking() { }

	// RVA: 0x1C33770 Offset: 0x1C33770 VA: 0x1C33770
	public bool IsTower() { }

	// RVA: 0x1C33780 Offset: 0x1C33780 VA: 0x1C33780
	public bool IsFatigueRecovery() { }

	// RVA: 0x1C33790 Offset: 0x1C33790 VA: 0x1C33790
	public bool IsBoardGameToken() { }

	// RVA: 0x1C337A0 Offset: 0x1C337A0 VA: 0x1C337A0
	public bool IsRandomMission() { }

	// RVA: 0x1C337B0 Offset: 0x1C337B0 VA: 0x1C337B0
	public bool IsNpc() { }

	// RVA: 0x1C337BC Offset: 0x1C337BC VA: 0x1C337BC
	public bool HasFlag(EventRewardSceneEntity.Flag typeFlag) { }
}

// Namespace: 
public enum EventRewardSceneEntity.eventType // TypeDefIndex: 6949
{
	// Fields
	public int value__; // 0x0
	public const EventRewardSceneEntity.eventType EVENT_ITEM = 1;
	public const EventRewardSceneEntity.eventType BOX_GACHA = 2;
	public const EventRewardSceneEntity.eventType EVENT_POINT = 3;
	public const EventRewardSceneEntity.eventType EVENT_MISSION = 4;
	public const EventRewardSceneEntity.eventType DAMAGE_POINT = 5;
	public const EventRewardSceneEntity.eventType RACE_RANKING = 6;
	public const EventRewardSceneEntity.eventType EVENT_TOWER = 7;
	public const EventRewardSceneEntity.eventType FATIGUE_RECOVERY = 8;
	public const EventRewardSceneEntity.eventType EVENT_BOARD_GAME_TOKEN = 9;
	public const EventRewardSceneEntity.eventType TREASURE_BOX = 10;
	public const EventRewardSceneEntity.eventType RANDOM_MISSION = 11;
}

// Namespace: 
public enum EventRewardSceneEntity.RewardSceneFlag // TypeDefIndex: 6950
{
	// Fields
	public int value__; // 0x0
	public const EventRewardSceneEntity.RewardSceneFlag IS_NPC_GUIDE = 1;
	public const EventRewardSceneEntity.RewardSceneFlag IS_CHANGE_SVT_BY_CHANGED_TAB = 2;
	public const EventRewardSceneEntity.RewardSceneFlag IS_HIDE_TAB = 3;
}

// Namespace: 
public enum EventRewardSceneEntity.Flag // TypeDefIndex: 6951
{
	// Fields
	public int value__; // 0x0
	public const EventRewardSceneEntity.Flag NPC_GUIDE = 2;
	public const EventRewardSceneEntity.Flag IS_CHANGE_SVT_BY_CHANGED_TAB = 4;
	public const EventRewardSceneEntity.Flag IS_HIDE_TAB = 8;
}

// Namespace: 
public class EventRewardSceneMaster : DataMasterBase<EventRewardSceneMaster, EventRewardSceneEntity, string> // TypeDefIndex: 6952
{
	// Methods

	// RVA: 0x1C337D0 Offset: 0x1C337D0 VA: 0x1C337D0
	public void .ctor() { }

	// RVA: 0x1C33824 Offset: 0x1C33824 VA: 0x1C33824
	public EventRewardSceneEntity GetEntity(int eventId, int slot) { }

	// RVA: 0x1C33898 Offset: 0x1C33898 VA: 0x1C33898
	public bool TryGetEntity(out EventRewardSceneEntity entity, int eventId, int slot) { }

	// RVA: 0x1C3391C Offset: 0x1C3391C VA: 0x1C3391C
	public EventRewardSceneEntity getEntityFromId(int eventId, int slot) { }

	// RVA: 0x1C33A70 Offset: 0x1C33A70 VA: 0x1C33A70
	public EventRewardSceneEntity[] getEntityFromId(int eventId) { }

	// RVA: 0x1C33C28 Offset: 0x1C33C28 VA: 0x1C33C28
	public EventRewardSceneEntity[] getEntityFromIdAndEventType(int eventId, EventRewardSceneEntity.eventType eventType) { }
}

// Namespace: 
public class EventRewardSceneReleaseEntity : DataEntityBase<string> // TypeDefIndex: 6953
{
	// Fields
	public int eventId; // 0x10
	public int slot; // 0x14
	public int condType; // 0x18
	public int condTargetId; // 0x1C
	public int condNum; // 0x20
	public int tabImageId; // 0x24
	public string closedMessage; // 0x28

	// Methods

	// RVA: 0x1C33E00 Offset: 0x1C33E00 VA: 0x1C33E00
	public void .ctor() { }

	// RVA: 0x1C33E50 Offset: 0x1C33E50 VA: 0x1C33E50 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C33E64 Offset: 0x1C33E64 VA: 0x1C33E64
	public static string CreatePK(int eventId, int slot, int condType) { }
}

// Namespace: 
public class EventRewardSceneReleaseMaster : DataMasterBase<EventRewardSceneReleaseMaster, EventRewardSceneReleaseEntity, string> // TypeDefIndex: 6954
{
	// Methods

	// RVA: 0x1C33E78 Offset: 0x1C33E78 VA: 0x1C33E78
	public void .ctor() { }

	// RVA: 0x1C33ECC Offset: 0x1C33ECC VA: 0x1C33ECC
	public EventRewardSceneReleaseEntity GetEntity(int eventId, int slot, int condType) { }

	// RVA: 0x1C33F50 Offset: 0x1C33F50 VA: 0x1C33F50
	public bool TryGetEntity(out EventRewardSceneReleaseEntity entity, int eventId, int slot, int condType) { }

	// RVA: 0x1C33FDC Offset: 0x1C33FDC VA: 0x1C33FDC
	public EventRewardSceneReleaseEntity getEnableEntity(int eventId, int slot) { }

	// RVA: 0x1C34100 Offset: 0x1C34100 VA: 0x1C34100
	public int getReleaseTabImageId(int eventId, int slot) { }
}

// Namespace: 
public class EventRewardSetEntity : DataEntityBase<string> // TypeDefIndex: 6955
{
	// Fields
	public int rewardSetType; // 0x10
	public int eventId; // 0x14
	public int id; // 0x18
	public int iconId; // 0x1C
	public string name; // 0x20
	public string detail; // 0x28
	public int bgImageId; // 0x30

	// Methods

	// RVA: 0x1C3422C Offset: 0x1C3422C VA: 0x1C3422C
	public void .ctor() { }

	// RVA: 0x1C3427C Offset: 0x1C3427C VA: 0x1C3427C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C34290 Offset: 0x1C34290 VA: 0x1C34290
	public static string CreatePK(int rewardSetType, int eventId, int id) { }
}

// Namespace: 
public enum EventRewardSetEntity.RewardSetType // TypeDefIndex: 6956
{
	// Fields
	public int value__; // 0x0
	public const EventRewardSetEntity.RewardSetType BOX_GACHA = 1;
	public const EventRewardSetEntity.RewardSetType EVENT_POINT = 2;
	public const EventRewardSetEntity.RewardSetType EVENT_MISSION = 3;
}

// Namespace: 
public class EventRewardSetMaster : DataMasterBase<EventRewardSetMaster, EventRewardSetEntity, string> // TypeDefIndex: 6957
{
	// Methods

	// RVA: 0x1C342A4 Offset: 0x1C342A4 VA: 0x1C342A4
	public void .ctor() { }

	// RVA: 0x1C342F8 Offset: 0x1C342F8 VA: 0x1C342F8
	public EventRewardSetEntity GetEntity(int rewardSetType, int eventId, int id) { }

	// RVA: 0x1C3437C Offset: 0x1C3437C VA: 0x1C3437C
	public bool TryGetEntity(out EventRewardSetEntity entity, int rewardSetType, int eventId, int id) { }
}

// Namespace: 
public class EventScriptEntity : DataEntityBase<string> // TypeDefIndex: 6958
{
	// Fields
	public int eventId; // 0x10
	public int flagId; // 0x14
	public int priority; // 0x18
	public int playType; // 0x1C
	public long[] scriptIds; // 0x20
	public int targetId; // 0x28
	public int args; // 0x2C

	// Methods

	// RVA: 0x1C351A0 Offset: 0x1C351A0 VA: 0x1C351A0
	public void .ctor() { }

	// RVA: 0x1C351F0 Offset: 0x1C351F0 VA: 0x1C351F0 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C35200 Offset: 0x1C35200 VA: 0x1C35200
	public static string CreatePK(int eventId, int flagId) { }

	// RVA: 0x1C35210 Offset: 0x1C35210 VA: 0x1C35210
	public EventScriptEntity.PlayType getType() { }
}

// Namespace: 
public enum EventScriptEntity.PlayType // TypeDefIndex: 6959
{
	// Fields
	public int value__; // 0x0
	public const EventScriptEntity.PlayType RACE_WIN = 1;
	public const EventScriptEntity.PlayType RACE_RESULT = 2;
	public const EventScriptEntity.PlayType RACE_TOTAL_RESULT = 3;
}

// Namespace: 
public class EventScriptMaster : DataMasterBase<EventScriptMaster, EventScriptEntity, string> // TypeDefIndex: 6960
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC190C Offset: 0xCC190C VA: 0xCC190C
	private static Comparison<EventScriptEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC191C Offset: 0xCC191C VA: 0xCC191C
	private static Comparison<EventScriptEntity> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x1C35438 Offset: 0x1C35438 VA: 0x1C35438
	public void .ctor() { }

	// RVA: 0x1C3548C Offset: 0x1C3548C VA: 0x1C3548C
	public EventScriptEntity GetEntity(int eventId, int flagId) { }

	// RVA: 0x1C35500 Offset: 0x1C35500 VA: 0x1C35500
	public bool TryGetEntity(out EventScriptEntity entity, int eventId, int flagId) { }

	// RVA: 0x1C35584 Offset: 0x1C35584 VA: 0x1C35584
	public EventScriptEntity getRaceResultEntity(EventScriptEntity.PlayType playType, int eventId, int termId, int rank = 0) { }

	// RVA: 0x1C356E4 Offset: 0x1C356E4 VA: 0x1C356E4
	public EventScriptEntity getRaceResultEntity(long scriptId) { }

	// RVA: 0x1C35868 Offset: 0x1C35868 VA: 0x1C35868
	public EventScriptEntity getRaceResultEntity(EventScriptEntity.PlayType playType, long scriptId) { }

	// RVA: 0x1C35A0C Offset: 0x1C35A0C VA: 0x1C35A0C
	public int getRaceTermIdEntity(int eventId) { }

	// RVA: 0x1C35DE0 Offset: 0x1C35DE0 VA: 0x1C35DE0
	public EventScriptEntity[] GetAvailable(int eventId) { }

	// RVA: 0x1C3628C Offset: 0x1C3628C VA: 0x1C3628C
	public bool IsRaceResultFlagged(int eventId, int termId) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37AFC Offset: 0xD37AFC VA: 0xD37AFC
	// RVA: 0x1C3650C Offset: 0x1C3650C VA: 0x1C3650C
	private static int <getRaceTermIdEntity>m__0(EventScriptEntity a, EventScriptEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37B0C Offset: 0xD37B0C VA: 0xD37B0C
	// RVA: 0x1C36550 Offset: 0x1C36550 VA: 0x1C36550
	private static int <GetAvailable>m__1(EventScriptEntity a, EventScriptEntity b) { }
}

// Namespace: 
public class EventScriptReleaseEntity : DataEntityBase<string> // TypeDefIndex: 6961
{
	// Fields
	public int eventId; // 0x10
	public int flagId; // 0x14
	public int type; // 0x18
	public int targetId; // 0x1C
	public int value; // 0x20

	// Methods

	// RVA: 0x1C36594 Offset: 0x1C36594 VA: 0x1C36594
	public void .ctor() { }

	// RVA: 0x1C365E4 Offset: 0x1C365E4 VA: 0x1C365E4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C365F8 Offset: 0x1C365F8 VA: 0x1C365F8
	public static string CreatePK(int eventId, int flagId, int type, int targetId) { }

	// RVA: 0x1C36610 Offset: 0x1C36610 VA: 0x1C36610
	public bool isAvailable() { }

	// RVA: 0x1C36690 Offset: 0x1C36690 VA: 0x1C36690
	public CondType.Kind GetCondType() { }
}

// Namespace: 
public class EventScriptReleaseMaster : DataMasterBase<EventScriptReleaseMaster, EventScriptReleaseEntity, string> // TypeDefIndex: 6962
{
	// Methods

	// RVA: 0x1C36698 Offset: 0x1C36698 VA: 0x1C36698
	public void .ctor() { }

	// RVA: 0x1C366EC Offset: 0x1C366EC VA: 0x1C366EC
	public EventScriptReleaseEntity GetEntity(int eventId, int flagId, int type, int targetId) { }

	// RVA: 0x1C36778 Offset: 0x1C36778 VA: 0x1C36778
	public bool TryGetEntity(out EventScriptReleaseEntity entity, int eventId, int flagId, int type, int targetId) { }

	// RVA: 0x1C36148 Offset: 0x1C36148 VA: 0x1C36148
	public bool isAvailable(int eventId, int flag) { }
}

// Namespace: 
public class EventServantEntity : DataEntityBase<string> // TypeDefIndex: 6963
{
	// Fields
	public int eventId; // 0x10
	public int svtId; // 0x14
	public int type; // 0x18
	public string joinMessage; // 0x20
	public string getMessage; // 0x28
	public string leaveMessage; // 0x30
	public string name; // 0x38
	public string battleName; // 0x40
	public Dictionary<string, object> script; // 0x48
	public long startedAt; // 0x50
	public long endedAt; // 0x58
	public int common_release_id; // 0x60
	public static readonly string NAME_RELEASE_COND; // 0x0

	// Methods

	// RVA: 0x1C36814 Offset: 0x1C36814 VA: 0x1C36814
	public void .ctor() { }

	// RVA: 0x1C36864 Offset: 0x1C36864 VA: 0x1C36864 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1C368D4 Offset: 0x1C368D4 VA: 0x1C368D4
	public static string CreatePK(int eventId, int svtId) { }

	// RVA: 0x1C368E4 Offset: 0x1C368E4 VA: 0x1C368E4
	public int getEventId() { }

	// RVA: 0x1C368EC Offset: 0x1C368EC VA: 0x1C368EC
	public int getServantId() { }

	// RVA: 0x1C368F4 Offset: 0x1C368F4 VA: 0x1C368F4
	public bool TryGetName(out string name) { }

	// RVA: 0x1C36B44 Offset: 0x1C36B44 VA: 0x1C36B44
	public bool TryGetBattleName(out string battleName) { }

	// RVA: 0x1C369EC Offset: 0x1C369EC VA: 0x1C369EC
	public bool GetIsCondClear(string key) { }

	// RVA: 0x1C36C3C Offset: 0x1C36C3C VA: 0x1C36C3C
	public bool IsProtectedDuringEvent() { }

	// RVA: 0x1C36CF4 Offset: 0x1C36CF4 VA: 0x1C36CF4
	public DateTime getEndTime() { }

	// RVA: 0x1C36D60 Offset: 0x1C36D60 VA: 0x1C36D60
