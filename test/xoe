	// Methods

	// RVA: 0x197E764 Offset: 0x197E764 VA: 0x197E764
	public void .ctor() { }

	// RVA: 0x197E90C Offset: 0x197E90C VA: 0x197E90C
	internal bool <>m__0(EventPointBuffEntity x) { }

	// RVA: 0x197E9D4 Offset: 0x197E9D4 VA: 0x197E9D4
	internal bool <>m__1(int y) { }
}

// Namespace: 
public class EventPointEntity : DataEntityBase<string> // TypeDefIndex: 6916
{
	// Fields
	public int id; // 0x10
	public int eventId; // 0x14
	public string name; // 0x18
	public int[] group1; // 0x20
	public int[] group2; // 0x28
	public string addGroup1Name; // 0x30
	public string addGroup2Name; // 0x38
	public int flag; // 0x40
	public long normaTotalPoint; // 0x48
	public int giftId; // 0x50
	public int presentMessageId; // 0x54
	public long startedAt; // 0x58
	public long endedAt; // 0x60

	// Methods

	// RVA: 0x197EB98 Offset: 0x197EB98 VA: 0x197EB98
	public void .ctor() { }

	// RVA: 0x197EBE8 Offset: 0x197EBE8 VA: 0x197EBE8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x197EBF8 Offset: 0x197EBF8 VA: 0x197EBF8
	public static string CreatePK(int id, int eventId) { }

	// RVA: 0x197EC08 Offset: 0x197EC08 VA: 0x197EC08
	public bool HasFlag(EventPointEntity.Flag typeFlag) { }

	// RVA: 0x197EC18 Offset: 0x197EC18 VA: 0x197EC18
	public bool isBossBattle() { }

	// RVA: 0x197EC24 Offset: 0x197EC24 VA: 0x197EC24
	public string GetWinGroupName(bool g1Win) { }

	// RVA: 0x197ED08 Offset: 0x197ED08 VA: 0x197ED08
	private string getNameStr(int[] group) { }

	// RVA: 0x197EEE0 Offset: 0x197EEE0 VA: 0x197EEE0
	public bool IsGroupOnGroup1(int groupId) { }
}

// Namespace: 
public enum EventPointEntity.Flag // TypeDefIndex: 6917
{
	// Fields
	public int value__; // 0x0
	public const EventPointEntity.Flag NONE = 1;
	public const EventPointEntity.Flag BOSS_BATTLE = 2;
}

// Namespace: 
public class EventPointGroupAddEntity : DataEntityBase<string> // TypeDefIndex: 6918
{
	// Fields
	public int eventId; // 0x10
	public int termId; // 0x14
	public int groupId; // 0x18
	public int priority; // 0x1C
	public int overwriteType; // 0x20
	public int overwriteId; // 0x24
	public int condType; // 0x28
	public int condTargetId; // 0x2C
	public int condNum; // 0x30

	// Methods

	// RVA: 0x197F2B8 Offset: 0x197F2B8 VA: 0x197F2B8
	public void .ctor() { }

	// RVA: 0x197F308 Offset: 0x197F308 VA: 0x197F308 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x197F31C Offset: 0x197F31C VA: 0x197F31C
	public static string CreatePK(int eventId, int termId, int groupId, int priority) { }

	// RVA: 0x197F334 Offset: 0x197F334 VA: 0x197F334
	public bool IsAvailable() { }
}

// Namespace: 
public enum EventPointGroupAddEntity.OverwriteType // TypeDefIndex: 6919
{
	// Fields
	public int value__; // 0x0
	public const EventPointGroupAddEntity.OverwriteType ICON = 1;
}

// Namespace: 
public class EventPointGroupAddMaster : DataMasterBase<EventPointGroupAddMaster, EventPointGroupAddEntity, string> // TypeDefIndex: 6920
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55944 Offset: 0xC55944 VA: 0xC55944
	private static Comparison<EventPointGroupAddEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x197F3B4 Offset: 0x197F3B4 VA: 0x197F3B4
	public void .ctor() { }

	// RVA: 0x197F408 Offset: 0x197F408 VA: 0x197F408
	public EventPointGroupAddEntity GetEntity(int eventId, int termId, int groupId, int priority) { }

	// RVA: 0x197F494 Offset: 0x197F494 VA: 0x197F494
	public bool TryGetEntity(out EventPointGroupAddEntity entity, int eventId, int termId, int groupId, int priority) { }

	// RVA: 0x197F530 Offset: 0x197F530 VA: 0x197F530
	public bool IsClearCondChangeImage(int eventId, int termId, int groupId, out int imageId) { }

	// RVA: 0x197F840 Offset: 0x197F840 VA: 0x197F840
	public int[] GetTermedIconIds(int eventId, int termId, int[] groupIds, int[] defaultImageIds) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA358 Offset: 0xCCA358 VA: 0xCCA358
	// RVA: 0x197FBFC Offset: 0x197FBFC VA: 0x197FBFC
	private static int <IsClearCondChangeImage>m__0(EventPointGroupAddEntity a, EventPointGroupAddEntity b) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42CC4 Offset: 0xC42CC4 VA: 0xC42CC4
private sealed class EventPointGroupAddMaster.<GetTermedIconIds>c__AnonStorey0 // TypeDefIndex: 6921
{
	// Fields
	internal EventPointGroupAddEntity tempEnt; // 0x10

	// Methods

	// RVA: 0x197FBF4 Offset: 0x197FBF4 VA: 0x197FBF4
	public void .ctor() { }

	// RVA: 0x197FC40 Offset: 0x197FC40 VA: 0x197FC40
	internal bool <>m__0(int x) { }
}

// Namespace: 
public class EventPointGroupEntity : DataEntityBase<string> // TypeDefIndex: 6922
{
	// Fields
	public int eventId; // 0x10
	public int groupId; // 0x14
	public string name; // 0x18
	public int iconId; // 0x20

	// Methods

	// RVA: 0x197FC78 Offset: 0x197FC78 VA: 0x197FC78
	public void .ctor() { }

	// RVA: 0x197FCC8 Offset: 0x197FCC8 VA: 0x197FCC8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x197FCD8 Offset: 0x197FCD8 VA: 0x197FCD8
	public static string CreatePK(int eventId, int groupId) { }
}

// Namespace: 
public class EventPointGroupMaster : DataMasterBase<EventPointGroupMaster, EventPointGroupEntity, string> // TypeDefIndex: 6923
{
	// Methods

	// RVA: 0x197FCE8 Offset: 0x197FCE8 VA: 0x197FCE8
	public void .ctor() { }

	// RVA: 0x197FD3C Offset: 0x197FD3C VA: 0x197FD3C
	public EventPointGroupEntity GetEntity(int eventId, int groupId) { }

	// RVA: 0x197FDB0 Offset: 0x197FDB0 VA: 0x197FDB0
	public bool TryGetEntity(out EventPointGroupEntity entity, int eventId, int groupId) { }

	// RVA: 0x197FE34 Offset: 0x197FE34 VA: 0x197FE34
	public EventPointGroupEntity getEntity(int event_id, int group_id) { }

	// RVA: 0x197FF14 Offset: 0x197FF14 VA: 0x197FF14
	public EventPointGroupEntity[] getEntityList(int eventId) { }

	// RVA: 0x1980098 Offset: 0x1980098 VA: 0x1980098
	public int getEventJoinGroupNum(int eventId) { }

	// RVA: 0x19800C4 Offset: 0x19800C4 VA: 0x19800C4
	public int[] GetTermedIconIds(int eventId, int termId, int[] groupIds) { }
}

// Namespace: 
public class EventPointMaster : DataMasterBase<EventPointMaster, EventPointEntity, string> // TypeDefIndex: 6924
{
	// Methods

	// RVA: 0x1985260 Offset: 0x1985260 VA: 0x1985260
	public void .ctor() { }

	// RVA: 0x19852B4 Offset: 0x19852B4 VA: 0x19852B4
	public EventPointEntity GetEntity(int id, int eventId) { }

	// RVA: 0x1985328 Offset: 0x1985328 VA: 0x1985328
	public bool TryGetEntity(out EventPointEntity entity, int id, int eventId) { }
}

// Namespace: 
public class EventPointUpperEntity : DataEntityBase<string> // TypeDefIndex: 6925
{
	// Fields
	public int version; // 0x10
	public int id; // 0x14
	public int priority; // 0x18
	public int groupId; // 0x1C
	public int eventId; // 0x20
	public int value; // 0x24

	// Methods

	// RVA: 0x1986860 Offset: 0x1986860 VA: 0x1986860
	public void .ctor() { }

	// RVA: 0x19868B0 Offset: 0x19868B0 VA: 0x19868B0 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x19868C4 Offset: 0x19868C4 VA: 0x19868C4
	public static string CreatePK(int version, int id, int priority) { }
}

// Namespace: 
public class EventPointUpperMaster : DataMasterBase<EventPointUpperMaster, EventPointUpperEntity, string> // TypeDefIndex: 6926
{
	// Methods

	// RVA: 0x19868D8 Offset: 0x19868D8 VA: 0x19868D8
	public void .ctor() { }

	// RVA: 0x198692C Offset: 0x198692C VA: 0x198692C
	public EventPointUpperEntity GetEntity(int version, int id, int priority) { }

	// RVA: 0x19869B0 Offset: 0x19869B0 VA: 0x19869B0
	public bool TryGetEntity(out EventPointUpperEntity entity, int version, int id, int priority) { }

	// RVA: 0x1986A3C Offset: 0x1986A3C VA: 0x1986A3C
	public EventPointUpperEntity[] GetEntitiesFromEventId(int eventId) { }

	// RVA: 0x1986BB8 Offset: 0x1986BB8 VA: 0x1986BB8
	public EventPointUpperEntity[] getList(int eventId, int groupId) { }

	// RVA: 0x1986D38 Offset: 0x1986D38 VA: 0x1986D38
	public int getPointUpper(int eventId, int groupId) { }
}

// Namespace: 
public class EventPointUpperReleaseEntity : DataEntityBase<string> // TypeDefIndex: 6927
{
	// Fields
	public int version; // 0x10
	public int eventPointUpperId; // 0x14
	public int priority; // 0x18
	public int idx; // 0x1C
	public int condGroup; // 0x20
	public int condType; // 0x24
	public int condTargetId; // 0x28
	public int condNum; // 0x2C

	// Properties
	public CondType.Kind CondType { get; }

	// Methods

	// RVA: 0x198728C Offset: 0x198728C VA: 0x198728C
	public void .ctor() { }

	// RVA: 0x19872DC Offset: 0x19872DC VA: 0x19872DC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x19872F0 Offset: 0x19872F0 VA: 0x19872F0
	public static string CreatePK(int version, int eventPointUpperId, int priority, int idx) { }

	// RVA: 0x1987308 Offset: 0x1987308 VA: 0x1987308
	public CondType.Kind get_CondType() { }
}

// Namespace: 
public class EventPointUpperReleaseMaster : DataMasterBase<EventPointUpperReleaseMaster, EventPointUpperReleaseEntity, string> // TypeDefIndex: 6928
{
	// Methods

	// RVA: 0x1987310 Offset: 0x1987310 VA: 0x1987310
	public void .ctor() { }

	// RVA: 0x1987364 Offset: 0x1987364 VA: 0x1987364
	public EventPointUpperReleaseEntity GetEntity(int version, int eventPointUpperId, int priority, int idx) { }

	// RVA: 0x19873F0 Offset: 0x19873F0 VA: 0x19873F0
	public bool TryGetEntity(out EventPointUpperReleaseEntity entity, int version, int eventPointUpperId, int priority, int idx) { }

	// RVA: 0x198748C Offset: 0x198748C VA: 0x198748C
	public EventPointUpperReleaseEntity[] GetEntitiesFromEventPointUpperId(int eventPointUpperId) { }

	// RVA: 0x1986EBC Offset: 0x1986EBC VA: 0x1986EBC
	public bool IsOpen(EventPointUpperEntity eventPointUpperEntity) { }
}

// Namespace: 
public class EventProgressValueEntity : DataEntityBase<string> // TypeDefIndex: 6929
{
	// Fields
	public int eventId; // 0x10
	public int priority; // 0x14
	public int condType; // 0x18
	public int condId; // 0x1C
	public int condNum; // 0x20
	public string condMessage; // 0x28
	public int progressValue; // 0x30

	// Methods

	// RVA: 0x169D204 Offset: 0x169D204 VA: 0x169D204
	public void .ctor() { }

	// RVA: 0x169D254 Offset: 0x169D254 VA: 0x169D254 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x169D264 Offset: 0x169D264 VA: 0x169D264
	public static string CreatePK(int eventId, int priority) { }
}

// Namespace: 
public class EventProgressValueMaster : DataMasterBase<EventProgressValueMaster, EventProgressValueEntity, string> // TypeDefIndex: 6930
{
	// Methods

	// RVA: 0x169D274 Offset: 0x169D274 VA: 0x169D274
	public void .ctor() { }

	// RVA: 0x169D2C8 Offset: 0x169D2C8 VA: 0x169D2C8
	public EventProgressValueEntity GetEntity(int eventId, int priority) { }

	// RVA: 0x169D33C Offset: 0x169D33C VA: 0x169D33C
	public bool TryGetEntity(out EventProgressValueEntity entity, int eventId, int priority) { }

	// RVA: 0x169D3C0 Offset: 0x169D3C0 VA: 0x169D3C0
	public List<EventProgressValueEntity> GetEntityListByEventId(int eventId) { }

	// RVA: 0x169D520 Offset: 0x169D520 VA: 0x169D520
	public EventProgressValueEntity GetCurrentEventProgressValueEntity(int eventId) { }
}

// Namespace: 
public class EventQuestCooltimeEntity : DataEntityBase<string> // TypeDefIndex: 6931
{
	// Fields
	public int eventId; // 0x10
	public int questId; // 0x14
	public int phase; // 0x18
	public int cooltime; // 0x1C
	public bool isEnabledInitial; // 0x20

	// Methods

	// RVA: 0x169E224 Offset: 0x169E224 VA: 0x169E224
	public void .ctor() { }

	// RVA: 0x169E274 Offset: 0x169E274 VA: 0x169E274 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x169E288 Offset: 0x169E288 VA: 0x169E288
	public static string CreatePK(int eventId, int questId, int phase) { }
}

// Namespace: 
public class EventQuestCooltimeMaster : DataMasterBase<EventQuestCooltimeMaster, EventQuestCooltimeEntity, string> // TypeDefIndex: 6932
{
	// Methods

	// RVA: 0x169E29C Offset: 0x169E29C VA: 0x169E29C
	public void .ctor() { }

	// RVA: 0x169E020 Offset: 0x169E020 VA: 0x169E020
	public EventQuestCooltimeEntity GetEntity(int eventId, int questId, int phase) { }

	// RVA: 0x169E2F0 Offset: 0x169E2F0 VA: 0x169E2F0
	public bool TryGetEntity(out EventQuestCooltimeEntity entity, int eventId, int questId, int phase) { }
}

// Namespace: 
public class EventQuestEntity : DataEntityBase<string> // TypeDefIndex: 6933
{
	// Fields
	public int eventId; // 0x10
	public int questId; // 0x14
	public int phase; // 0x18

	// Methods

	// RVA: 0x169E37C Offset: 0x169E37C VA: 0x169E37C
	public void .ctor() { }

	// RVA: 0x169E3CC Offset: 0x169E3CC VA: 0x169E3CC
	public int getEventId() { }

	// RVA: 0x169E3D4 Offset: 0x169E3D4 VA: 0x169E3D4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x169E3E8 Offset: 0x169E3E8 VA: 0x169E3E8
	public static string CreatePK(int eventId, int questId, int phase) { }
}

// Namespace: 
public class EventQuestMaster : DataMasterBase<EventQuestMaster, EventQuestEntity, string> // TypeDefIndex: 6934
{
	// Methods

	// RVA: 0x169E3FC Offset: 0x169E3FC VA: 0x169E3FC
	public void .ctor() { }

	// RVA: 0x169E450 Offset: 0x169E450 VA: 0x169E450
	public EventQuestEntity GetEntity(int eventId, int questId, int phase) { }

	// RVA: 0x169E4D4 Offset: 0x169E4D4 VA: 0x169E4D4
	public bool TryGetEntity(out EventQuestEntity entity, int eventId, int questId, int phase) { }

	// RVA: 0x169E560 Offset: 0x169E560 VA: 0x169E560
	public EventQuestEntity GetFirstEntityFromQuestId(int questId) { }

	// RVA: 0x169E678 Offset: 0x169E678 VA: 0x169E678
	public EventEntity[] GetEnabledEventCampaignForQuest(int questId, int phase, long checkTime = 0) { }
}

// Namespace: 
public class EventRaceEntity : DataEntityBase<string> // TypeDefIndex: 6935
{
	// Fields
	public int eventId; // 0x10
	public int termId; // 0x14
	public string name; // 0x18
	public int[] groupIds; // 0x20
	public long[] goalPoints; // 0x28
	public long[] autoGoalsAts; // 0x30
	public int[] giftIds; // 0x38
	public int[] presentMessageIds; // 0x40
	public int bonusGiftId; // 0x48
	public int bonusMessageId; // 0x4C

	// Methods

	// RVA: 0x169F8D8 Offset: 0x169F8D8 VA: 0x169F8D8
	public void .ctor() { }

	// RVA: 0x169F928 Offset: 0x169F928 VA: 0x169F928 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x169F938 Offset: 0x169F938 VA: 0x169F938
	public static string CreatePK(int eventId, int termId) { }

	// RVA: 0x169F948 Offset: 0x169F948 VA: 0x169F948
	public int GetGroupIdx(int groupId) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42CD4 Offset: 0xC42CD4 VA: 0xC42CD4
private sealed class EventRaceEntity.<GetGroupIdx>c__AnonStorey0 // TypeDefIndex: 6936
{
	// Fields
	internal int groupId; // 0x10

	// Methods

	// RVA: 0x169FA0C Offset: 0x169FA0C VA: 0x169FA0C
	public void .ctor() { }

	// RVA: 0x169FA14 Offset: 0x169FA14 VA: 0x169FA14
	internal bool <>m__0(int obj) { }
}

// Namespace: 
public class EventRaceMaster : DataMasterBase<EventRaceMaster, EventRaceEntity, string> // TypeDefIndex: 6937
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55954 Offset: 0xC55954 VA: 0xC55954
	private static Comparison<EventRaceMaster.GroupRankData> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC55964 Offset: 0xC55964 VA: 0xC55964
	private static Comparison<EventRaceMaster.GroupRankData> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC55974 Offset: 0xC55974 VA: 0xC55974
	private static Comparison<EventRaceEntity> <>f__am$cache2; // 0x10

	// Methods

	// RVA: 0x169FA24 Offset: 0x169FA24 VA: 0x169FA24
	public void .ctor() { }

	// RVA: 0x169FA78 Offset: 0x169FA78 VA: 0x169FA78
	public EventRaceEntity GetEntity(int eventId, int termId) { }

	// RVA: 0x169FAEC Offset: 0x169FAEC VA: 0x169FAEC
	public bool TryGetEntity(out EventRaceEntity entity, int eventId, int termId) { }

	// RVA: 0x169FB70 Offset: 0x169FB70 VA: 0x169FB70
	public EventRaceEntity[] GetRaceEntityList(int eventId) { }

	// RVA: 0x169FCF8 Offset: 0x169FCF8 VA: 0x169FCF8
	public bool IsEveryTeamGoaled(int eventId, int termId) { }

	// RVA: 0x169FF88 Offset: 0x169FF88 VA: 0x169FF88
	public int GetGoaledTeamCount(int eventId, int termId, long nowTime) { }

	// RVA: 0x16A01F8 Offset: 0x16A01F8 VA: 0x16A01F8
	public bool IsReachedPointRateInTerm(int eventId, int termId, int rate) { }

	// RVA: 0x16A043C Offset: 0x16A043C VA: 0x16A043C
	public float GetGoalRate(int eventId, int termId, int groupId) { }

	// RVA: 0x16A0604 Offset: 0x16A0604 VA: 0x16A0604
	public int GetGroupIndex(int eventId, int termId, int groupId) { }

	// RVA: 0x16A0794 Offset: 0x16A0794 VA: 0x16A0794
	public List<EventRaceMaster.GroupRankData> getGroupIdData(int eventId, int termId) { }

	// RVA: 0x16A0D68 Offset: 0x16A0D68 VA: 0x16A0D68
	public int GetTermIndex(int eventId, int termId) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA368 Offset: 0xCCA368 VA: 0xCCA368
	// RVA: 0x16A0FF4 Offset: 0x16A0FF4 VA: 0x16A0FF4
	private static int <getGroupIdData>m__0(EventRaceMaster.GroupRankData a, EventRaceMaster.GroupRankData b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA378 Offset: 0xCCA378 VA: 0xCCA378
	// RVA: 0x16A1004 Offset: 0x16A1004 VA: 0x16A1004
	private static int <getGroupIdData>m__1(EventRaceMaster.GroupRankData a, EventRaceMaster.GroupRankData b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA388 Offset: 0xCCA388 VA: 0xCCA388
	// RVA: 0x16A1014 Offset: 0x16A1014 VA: 0x16A1014
	private static int <GetTermIndex>m__2(EventRaceEntity a, EventRaceEntity b) { }
}

// Namespace: 
public struct EventRaceMaster.GroupRankData // TypeDefIndex: 6938
{
	// Fields
	public int groupId; // 0x0
	public float rate; // 0x4
	public bool isGoal; // 0x8
	public long goalTime; // 0x10

	// Methods

	// RVA: 0xD57BFC Offset: 0xD57BFC VA: 0xD57BFC
	public void .ctor(int groupId, float rate, long goalTime) { }
}

// Namespace: 
public class EventRaceResultEntity : DataEntityBase<string> // TypeDefIndex: 6939
{
	// Fields
	public int eventId; // 0x10
	public int termId; // 0x14
	public int groupId; // 0x18
	public long startedAt; // 0x20
	public long endedAt; // 0x28

	// Methods

	// RVA: 0x16A2574 Offset: 0x16A2574 VA: 0x16A2574
	public void .ctor() { }

	// RVA: 0x16A25C4 Offset: 0x16A25C4 VA: 0x16A25C4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x16A25D8 Offset: 0x16A25D8 VA: 0x16A25D8
	public static string CreatePK(int eventId, int termId, int groupId) { }

	// RVA: 0x16A25EC Offset: 0x16A25EC VA: 0x16A25EC
	public long GetRaceTime(long timeNow) { }
}

// Namespace: 
public class EventRaceResultMaster : DataMasterBase<EventRaceResultMaster, EventRaceResultEntity, string> // TypeDefIndex: 6940
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55984 Offset: 0xC55984 VA: 0xC55984
	private static Comparison<DataEntityBase> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x16A260C Offset: 0x16A260C VA: 0x16A260C
	public void .ctor() { }

	// RVA: 0x16A2660 Offset: 0x16A2660 VA: 0x16A2660
	public EventRaceResultEntity GetEntity(int eventId, int termId, int groupId) { }

	// RVA: 0x16A26E4 Offset: 0x16A26E4 VA: 0x16A26E4
	public bool TryGetEntity(out EventRaceResultEntity entity, int eventId, int termId, int groupId) { }

	// RVA: 0x16A2770 Offset: 0x16A2770 VA: 0x16A2770
	public int GetNowTerm(int eventId) { }

	// RVA: 0x16A2A88 Offset: 0x16A2A88 VA: 0x16A2A88
	public long GetTargetGoalTime(int eventId, int term, int groupId) { }

	// RVA: 0x16A2C00 Offset: 0x16A2C00 VA: 0x16A2C00
	public long getRaceStartedAt(int eventId, int termId) { }

	// RVA: 0x16A2D40 Offset: 0x16A2D40 VA: 0x16A2D40
	public int GetRankedGroupId(int eventId, int termId, int rank, out long goalTime) { }

	// RVA: 0x16A2E18 Offset: 0x16A2E18 VA: 0x16A2E18
	public int[] GetRankDatas(int eventId, int termId, out long[] goalTime) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA398 Offset: 0xCCA398 VA: 0xCCA398
	// RVA: 0x16A3158 Offset: 0x16A3158 VA: 0x16A3158
	private static int <GetNowTerm>m__0(DataEntityBase a, DataEntityBase b) { }
}

// Namespace: 
public class EventRaidEntity : DataEntityBase<string> // TypeDefIndex: 6941
{
	// Fields
	public static readonly int SUB_GROUP_INDEX_START; // 0x0
	public int eventId; // 0x10
	public int day; // 0x14
	public int groupIndex; // 0x18
	public int subGroupIndex; // 0x1C
	public string name; // 0x20
	public long maxHp; // 0x28
	public int iconId; // 0x30
	public int bossColor; // 0x34
	public int giftId; // 0x38
	public int presentMessageId; // 0x3C
	public int loginMessageId; // 0x40
	public long defeatNormaAt; // 0x48
	public long startedAt; // 0x50
	public long endedAt; // 0x58
	public long timeLimitAt; // 0x60
	public string[] splitAiMode; // 0x68
	public long[] splitHp; // 0x70

	// Methods

	// RVA: 0x16A39CC Offset: 0x16A39CC VA: 0x16A39CC
	public void .ctor() { }

	// RVA: 0x16A3A1C Offset: 0x16A3A1C VA: 0x16A3A1C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x16A3A8C Offset: 0x16A3A8C VA: 0x16A3A8C
	public static string CreatePK(int eventId, int day) { }

	// RVA: 0x16A3A9C Offset: 0x16A3A9C VA: 0x16A3A9C
	public Color GetBossColor() { }

	// RVA: 0x16A3AFC Offset: 0x16A3AFC VA: 0x16A3AFC
	public TotalEventRaidEntity getTotalEventRaidEntity() { }

	// RVA: 0x16A3C1C Offset: 0x16A3C1C VA: 0x16A3C1C
	public bool isCleard() { }

	// RVA: 0x16A3C58 Offset: 0x16A3C58 VA: 0x16A3C58
	public bool IsValidDefeatedTime() { }

	// RVA: 0x16A3D30 Offset: 0x16A3D30 VA: 0x16A3D30
	public bool IsJustDefeated() { }

	// RVA: 0x16A3E08 Offset: 0x16A3E08 VA: 0x16A3E08
	public bool IsJumbleSingleRaid() { }

	// RVA: 0x16A3FC0 Offset: 0x16A3FC0 VA: 0x16A3FC0
	public bool IsGroupDeadQuestClear() { }

	// RVA: 0x16A4164 Offset: 0x16A4164 VA: 0x16A4164
	private static void .cctor() { }
}

// Namespace: 
public class EventRaidMaster : DataMasterBase<EventRaidMaster, EventRaidEntity, string> // TypeDefIndex: 6942
{
	// Fields
	public static readonly int OLD_RAID_DAY_COUNT; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC55994 Offset: 0xC55994 VA: 0xC55994
	private static Comparison<QuestReleaseEntity> <>f__am$cache0; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC559A4 Offset: 0xC559A4 VA: 0xC559A4
	private static Comparison<EventRaidEntity> <>f__am$cache1; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC559B4 Offset: 0xC559B4 VA: 0xC559B4
	private static Comparison<EventRaidEntity> <>f__am$cache2; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC559C4 Offset: 0xC559C4 VA: 0xC559C4
	private static Comparison<EventRaidEntity> <>f__am$cache3; // 0x20

	// Methods

	// RVA: 0x16A41B8 Offset: 0x16A41B8 VA: 0x16A41B8
	public void .ctor() { }

	// RVA: 0x16A420C Offset: 0x16A420C VA: 0x16A420C
	public EventRaidEntity GetEntity(int eventId, int day) { }

	// RVA: 0x16A42A0 Offset: 0x16A42A0 VA: 0x16A42A0
	public bool TryGetEntity(out EventRaidEntity entity, int eventId, int day) { }

	// RVA: 0x16A4344 Offset: 0x16A4344 VA: 0x16A4344
	private QuestReleaseEntity[] GetRaidDeadQuestReleaseEntityList(int eventId, int day = 0) { }

	// RVA: 0x16A43BC Offset: 0x16A43BC VA: 0x16A43BC
	private List<QuestReleaseEntity> GetQuestReleaseEntityList(int eventId, CondType.Kind condType, int day = 0) { }

	// RVA: 0x16A4728 Offset: 0x16A4728 VA: 0x16A4728
	public int[] GetRaidAliveQuestIds(int eventId, int day) { }

	// RVA: 0x16A4938 Offset: 0x16A4938 VA: 0x16A4938
	public int GetRaidDeadQuestId(int eventId, int day) { }

	// RVA: 0x16A40AC Offset: 0x16A40AC VA: 0x16A40AC
	public int GetRaidGroupDeadQuestId(int eventId, int groupIndex) { }

	// RVA: 0x16A47A0 Offset: 0x16A47A0 VA: 0x16A47A0
	private List<int> GetQuestIdList(int eventId, CondType.Kind condType, int day) { }

	// RVA: 0x16A49F0 Offset: 0x16A49F0 VA: 0x16A49F0
	public int GetCurrentDay(int eventId) { }

	// RVA: 0x16A4C80 Offset: 0x16A4C80 VA: 0x16A4C80
	public int GetCurrentDayOld(int eventId) { }

	// RVA: 0x16A4EA4 Offset: 0x16A4EA4 VA: 0x16A4EA4
	public EventRaidEntity[] GetCurrentGroupListByEventId(int eventId) { }

	// RVA: 0x16A4F20 Offset: 0x16A4F20 VA: 0x16A4F20
	public EventRaidEntity[] GetCurrentGroupListByEntity(EventRaidEntity currentEventRaidEntity) { }

	// RVA: 0x16A5268 Offset: 0x16A5268 VA: 0x16A5268
	public EventRaidEntity[] GetEventRaidEntityArrayFromEventId(int eventId) { }

	// RVA: 0x16A534C Offset: 0x16A534C VA: 0x16A534C
	public bool IsEventRaidAliveAny(int eventId) { }

	// RVA: 0x16A5448 Offset: 0x16A5448 VA: 0x16A5448
	public long GetEventRaidTimeLimitAt(int eventId) { }

	// RVA: 0x16A54E4 Offset: 0x16A54E4 VA: 0x16A54E4
	public int GetRaidGorupMax(int eventId) { }

	// RVA: 0x16A56CC Offset: 0x16A56CC VA: 0x16A56CC
	public int GetSubGroupNow(EventRaidEntity eventRaidEntityBase) { }

	// RVA: 0x16A5884 Offset: 0x16A5884 VA: 0x16A5884
	public int GetSubGroupMax(EventRaidEntity EventRaidEntityBase) { }

	// RVA: 0x16A5A8C Offset: 0x16A5A8C VA: 0x16A5A8C
	public int GetNowGroupIndex(int eventId, int raidCountMax = -1) { }

	// RVA: 0x16A3EC8 Offset: 0x16A3EC8 VA: 0x16A3EC8
	public EventRaidEntity[] GetEventRaidEntityArray(int eventId, int groupIndex) { }

	// RVA: 0x16A5E44 Offset: 0x16A5E44 VA: 0x16A5E44
	public EventRaidEntity GetNextSubGroupEntity(EventRaidEntity nowEventRaidEntity) { }

	// RVA: 0x16A60D0 Offset: 0x16A60D0 VA: 0x16A60D0
	public int GetStartRaidGroupIndex(int eventId) { }

	// RVA: 0x16A6270 Offset: 0x16A6270 VA: 0x16A6270
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA3A8 Offset: 0xCCA3A8 VA: 0xCCA3A8
	// RVA: 0x16A62C4 Offset: 0x16A62C4 VA: 0x16A62C4
	private static int <GetQuestReleaseEntityList>m__0(QuestReleaseEntity a, QuestReleaseEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA3B8 Offset: 0xCCA3B8 VA: 0xCCA3B8
	// RVA: 0x16A6318 Offset: 0x16A6318 VA: 0x16A6318
	private static int <GetCurrentGroupListByEntity>m__1(EventRaidEntity a, EventRaidEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA3C8 Offset: 0xCCA3C8 VA: 0xCCA3C8
	// RVA: 0x16A6358 Offset: 0x16A6358 VA: 0x16A6358
	private static int <GetSubGroupNow>m__2(EventRaidEntity a, EventRaidEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA3D8 Offset: 0xCCA3D8 VA: 0xCCA3D8
	// RVA: 0x16A6398 Offset: 0x16A6398 VA: 0x16A6398
	private static int <GetNextSubGroupEntity>m__3(EventRaidEntity a, EventRaidEntity b) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42CE4 Offset: 0xC42CE4 VA: 0xC42CE4
private sealed class EventRaidMaster.<GetEventRaidEntityArrayFromEventId>c__AnonStorey0 // TypeDefIndex: 6943
{
	// Fields
	internal int eventId; // 0x10

	// Methods

	// RVA: 0x16A5344 Offset: 0x16A5344 VA: 0x16A5344
	public void .ctor() { }

	// RVA: 0x16A6460 Offset: 0x16A6460 VA: 0x16A6460
	internal bool <>m__0(EventRaidEntity a) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42CF4 Offset: 0xC42CF4 VA: 0xC42CF4
private sealed class EventRaidMaster.<GetEventRaidEntityArray>c__AnonStorey1 // TypeDefIndex: 6944
{
	// Fields
	internal int eventId; // 0x10
	internal int groupIndex; // 0x14

	// Methods

	// RVA: 0x16A5E3C Offset: 0x16A5E3C VA: 0x16A5E3C
	public void .ctor() { }

	// RVA: 0x16A640C Offset: 0x16A640C VA: 0x16A640C
	internal bool <>m__0(EventRaidEntity a) { }
}

// Namespace: 
public class EventRandomMissionEntity : DataEntityBase<string> // TypeDefIndex: 6945
{
	// Fields
	public int missionId; // 0x10
	public int eventId; // 0x14
	public int missionRank; // 0x18
	public int condType; // 0x1C
	public int condId; // 0x20
	public int condNum; // 0x24

	// Methods

	// RVA: 0x16A74AC Offset: 0x16A74AC VA: 0x16A74AC
	public void .ctor() { }

	// RVA: 0x16A74FC Offset: 0x16A74FC VA: 0x16A74FC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x16A7504 Offset: 0x16A7504 VA: 0x16A7504
	public static string CreatePK(int missionId) { }
}

// Namespace: 
public class EventRandomMissionMaster : DataMasterBase<EventRandomMissionMaster, EventRandomMissionEntity, string> // TypeDefIndex: 6946
{
	// Methods

	// RVA: 0x16AB510 Offset: 0x16AB510 VA: 0x16AB510
	public void .ctor() { }

	// RVA: 0x16AB564 Offset: 0x16AB564 VA: 0x16AB564
	public EventRandomMissionEntity GetEntity(int missionId) { }

	// RVA: 0x16A861C Offset: 0x16A861C VA: 0x16A861C
	public bool TryGetEntity(out EventRandomMissionEntity entity, int missionId) { }
}

// Namespace: 
public class EventRewardBgEntity : DataEntityBase<string> // TypeDefIndex: 6947
{
	// Fields
	public int eventId; // 0x10
	public int slot; // 0x14
	public int priority; // 0x18
	public int commonReleaseId; // 0x1C
	public int bgId; // 0x20

	// Methods

	// RVA: 0x16B31BC Offset: 0x16B31BC VA: 0x16B31BC
	public void .ctor() { }

	// RVA: 0x16B320C Offset: 0x16B320C VA: 0x16B320C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x16B3220 Offset: 0x16B3220 VA: 0x16B3220
	public static string CreatePK(int eventId, int slot, int priority) { }
}

// Namespace: 
public class EventRewardBgMaster : DataMasterBase<EventRewardBgMaster, EventRewardBgEntity, string> // TypeDefIndex: 6948
{
	// Methods

	// RVA: 0x16B3234 Offset: 0x16B3234 VA: 0x16B3234
	public void .ctor() { }

	// RVA: 0x16B3288 Offset: 0x16B3288 VA: 0x16B3288
	public EventRewardBgEntity GetEntity(int eventId, int slot, int priority) { }

	// RVA: 0x16B330C Offset: 0x16B330C VA: 0x16B330C
	public bool TryGetEntity(out EventRewardBgEntity entity, int eventId, int slot, int priority) { }

	// RVA: 0x16B3398 Offset: 0x16B3398 VA: 0x16B3398
	public int GetEventRewardBgId(int eventId, int slot) { }
}

// Namespace: 
public class EventRewardEntity : DataEntityBase<string> // TypeDefIndex: 6949
{
	// Fields
	public int eventId; // 0x10
	public int slot; // 0x14
	public int groupId; // 0x18
	public long point; // 0x20
	public int type; // 0x28
	public int giftId; // 0x2C
	public int presentMessageId; // 0x30
	public int bgImageId; // 0x34

	// Methods

	// RVA: 0x16B5658 Offset: 0x16B5658 VA: 0x16B5658
	public void .ctor() { }

	// RVA: 0x16B56A8 Offset: 0x16B56A8 VA: 0x16B56A8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x16B56C0 Offset: 0x16B56C0 VA: 0x16B56C0
	public static string CreatePK(int eventId, int slot, int groupId, long point) { }

	// RVA: 0x16B56D4 Offset: 0x16B56D4 VA: 0x16B56D4
	public GiftEntity getGiftData() { }

	// RVA: 0x16B5764 Offset: 0x16B5764 VA: 0x16B5764
	public EventRewardExtraEntity getSetRewardData() { }

	// RVA: 0x16B5860 Offset: 0x16B5860 VA: 0x16B5860
	public EventRewardSetEntity getRewardSetData() { }

	// RVA: 0x16B5904 Offset: 0x16B5904 VA: 0x16B5904
	public void GetInfo(out string nameText, out string countText) { }

	// RVA: 0x16B5A08 Offset: 0x16B5A08 VA: 0x16B5A08
	public bool isQp() { }
}

// Namespace: 
public class EventRewardExtraEntity : DataEntityBase<string> // TypeDefIndex: 6950
{
	// Fields
	public int eventId; // 0x10
	public long point; // 0x18
	public int iconId; // 0x20
	public string name; // 0x28
	public string detail; // 0x30

	// Methods

	// RVA: 0x16B5A38 Offset: 0x16B5A38 VA: 0x16B5A38
	public void .ctor() { }

	// RVA: 0x16B5A88 Offset: 0x16B5A88 VA: 0x16B5A88 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x16B5A98 Offset: 0x16B5A98 VA: 0x16B5A98
	public static string CreatePK(int eventId, long point) { }
}

// Namespace: 
public class EventRewardExtraMaster : DataMasterBase<EventRewardExtraMaster, EventRewardExtraEntity, string> // TypeDefIndex: 6951
{
	// Methods

	// RVA: 0x16B5AA4 Offset: 0x16B5AA4 VA: 0x16B5AA4
	public void .ctor() { }

	// RVA: 0x16B5AF8 Offset: 0x16B5AF8 VA: 0x16B5AF8
	public EventRewardExtraEntity GetEntity(int eventId, long point) { }

	// RVA: 0x16B5B6C Offset: 0x16B5B6C VA: 0x16B5B6C
	public bool TryGetEntity(out EventRewardExtraEntity entity, int eventId, long point) { }
}

// Namespace: 
public class EventRewardGuideReleaseEntity : DataEntityBase<string> // TypeDefIndex: 6952
{
	// Fields
	public int eventId; // 0x10
	public int slot; // 0x14
	public int condType; // 0x18
	public int condTargetId; // 0x1C
	public int condValue; // 0x20
	public int[] guideImageIds; // 0x28
	public int condGroup; // 0x30

	// Methods

	// RVA: 0x16B5BF0 Offset: 0x16B5BF0 VA: 0x16B5BF0
	public void .ctor() { }

	// RVA: 0x16B5C40 Offset: 0x16B5C40 VA: 0x16B5C40 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x16B5C54 Offset: 0x16B5C54 VA: 0x16B5C54
	public static string CreatePK(int eventId, int slot, int condType, int condTargetId) { }

	// RVA: 0x16B5C6C Offset: 0x16B5C6C VA: 0x16B5C6C
	public bool GetIsReleased() { }

	// RVA: 0x16B5CEC Offset: 0x16B5CEC VA: 0x16B5CEC
	public int[] GetGuideImageIds() { }
}
