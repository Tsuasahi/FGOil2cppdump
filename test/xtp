	public bool IsSwapChoice { get; }
	public bool IsDispChoice { get; }
	public bool IsQuestRestriction { get; }
	public bool IsUniqueSvtRestriction { get; }
	public long FatigureTime { get; }
	public bool IsFatigureRecover { get; }
	public IconLabelInfo IconInfo1 { get; }
	public IconLabelInfo IconInfo2 { get; }
	public IconLabelInfo IconInfo3 { get; }
	public bool IsEquip { get; }
	public QuestRestrictionInfo QuestRestriction { get; }
	public bool IsRestricted { get; }
	public bool IsPushMode { get; set; }
	public bool IsPush { get; set; }
	public bool IsEnabled { get; set; }
	public bool IsInvalidRarity { get; }

	// Methods

	// RVA: 0x176BAD0 Offset: 0x176BAD0 VA: 0x176BAD0
	public void .ctor(int index, UserServantEntity userServantEntity, PartyListViewItem partyItem, int num, PartyServantSelectMenu.TutorialMode tutorialMode, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo) { }

	// RVA: 0x176D170 Offset: 0x176D170 VA: 0x176D170
	public void .ctor(int index, UserServantEntity userServantEntity, WarBoardPartyListViewItem partyItem, int num, PartyServantSelectMenu.TutorialMode tutorialMode, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0FF0 Offset: 0xCD0FF0 VA: 0xCD0FF0
	// RVA: 0x176DBBC Offset: 0x176DBBC VA: 0x176DBBC
	public PartyListViewItem.MenuKind get_PartyListViewItemMenuKind() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1000 Offset: 0xCD1000 VA: 0xCD1000
	// RVA: 0x176CAD0 Offset: 0x176CAD0 VA: 0x176CAD0
	private void set_PartyListViewItemMenuKind(PartyListViewItem.MenuKind value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1010 Offset: 0xCD1010 VA: 0xCD1010
	// RVA: 0x176DBC4 Offset: 0x176DBC4 VA: 0x176DBC4
	public bool get_IsDispSvtPoint() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1020 Offset: 0xCD1020 VA: 0xCD1020
	// RVA: 0x176CFEC Offset: 0x176CFEC VA: 0x176CFEC
	private void set_IsDispSvtPoint(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1030 Offset: 0xCD1030 VA: 0xCD1030
	// RVA: 0x176D008 Offset: 0x176D008 VA: 0x176D008
	public int get_SvtPoint() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1040 Offset: 0xCD1040 VA: 0xCD1040
	// RVA: 0x176CFF8 Offset: 0x176CFF8 VA: 0x176CFF8
	private void set_SvtPoint(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1050 Offset: 0xCD1050 VA: 0xCD1050
	// RVA: 0x176DBCC Offset: 0x176DBCC VA: 0x176DBCC
	public int get_SvtPointRank() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1060 Offset: 0xCD1060 VA: 0xCD1060
	// RVA: 0x176D000 Offset: 0x176D000 VA: 0x176D000
	private void set_SvtPointRank(int value) { }

	// RVA: 0x176CDA0 Offset: 0x176CDA0 VA: 0x176CDA0
	private bool ChkQuestRestriction() { }

	// RVA: 0x176DBD4 Offset: 0x176DBD4 VA: 0x176DBD4
	public void Modify(UserServantEntity userServantEntity) { }

	// RVA: 0x176DC00 Offset: 0x176DC00 VA: 0x176DC00
	public void ModifyItem(UserServantEntity userServantEntity) { }

	// RVA: 0x176DC5C Offset: 0x176DC5C VA: 0x176DC5C
	public void ModifyLockItem() { }

	// RVA: 0x176DCA0 Offset: 0x176DCA0 VA: 0x176DCA0
	public void ModifyChoiceItem() { }

	// RVA: 0x176DCE4 Offset: 0x176DCE4 VA: 0x176DCE4 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x176CAD8 Offset: 0x176CAD8 VA: 0x176CAD8
	protected void SetEquipStatus(long[] equipIdList) { }

	// RVA: 0x176DCEC Offset: 0x176DCEC VA: 0x176DCEC Slot: 5
	public override bool IsMatchFilter(ListViewSort sort) { }

	// RVA: 0x176DFB0 Offset: 0x176DFB0 VA: 0x176DFB0 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x176EF48 Offset: 0x176EF48 VA: 0x176EF48
	public bool SwapLock() { }

	// RVA: 0x176EF64 Offset: 0x176EF64 VA: 0x176EF64
	public bool SwapChoice() { }

	// RVA: 0x176EF80 Offset: 0x176EF80 VA: 0x176EF80
	public long[] GetEquipList() { }

	// RVA: 0x176EF88 Offset: 0x176EF88 VA: 0x176EF88
	public string GetRestrictionMessage() { }

	// RVA: 0x176F008 Offset: 0x176F008 VA: 0x176F008
	public bool get_IsSelectLeader() { }

	// RVA: 0x176F010 Offset: 0x176F010 VA: 0x176F010
	public bool get_IsSelectEmpty() { }

	// RVA: 0x176DF88 Offset: 0x176DF88 VA: 0x176DF88
	public UserServantEntity get_UserServant() { }

	// RVA: 0x176F018 Offset: 0x176F018 VA: 0x176F018
	public ServantEntity get_Servant() { }

	// RVA: 0x176F020 Offset: 0x176F020 VA: 0x176F020
	public int get_SvtId() { }

	// RVA: 0x176F090 Offset: 0x176F090 VA: 0x176F090
	public int get_ClassId() { }

	// RVA: 0x176F098 Offset: 0x176F098 VA: 0x176F098
	public int get_RarityId() { }

	// RVA: 0x176F0A0 Offset: 0x176F0A0 VA: 0x176F0A0
	public int get_FrameType() { }

	// RVA: 0x176F0A8 Offset: 0x176F0A8 VA: 0x176F0A8
	public string get_NameText() { }

	// RVA: 0x176F164 Offset: 0x176F164 VA: 0x176F164
	public bool get_IsBase() { }

	// RVA: 0x176CFDC Offset: 0x176CFDC VA: 0x176CFDC
	public bool get_IsParty() { }

	// RVA: 0x176F16C Offset: 0x176F16C VA: 0x176F16C
	public int get_PartyIndex() { }

	// RVA: 0x176EDE0 Offset: 0x176EDE0 VA: 0x176EDE0
	public int get_Cost() { }

	// RVA: 0x176EE0C Offset: 0x176EE0C VA: 0x176EE0C
	public int get_EquipCost() { }

	// RVA: 0x176F174 Offset: 0x176F174 VA: 0x176F174
	public bool get_IsCostOver() { }

	// RVA: 0x176F17C Offset: 0x176F17C VA: 0x176F17C
	public bool get_IsSame() { }

	// RVA: 0x176F184 Offset: 0x176F184 VA: 0x176F184
	public bool get_IsEventJoin() { }

	// RVA: 0x176F18C Offset: 0x176F18C VA: 0x176F18C
	public bool get_IsLeave() { }

	// RVA: 0x176F194 Offset: 0x176F194 VA: 0x176F194
	public bool get_IsLock() { }

	// RVA: 0x176F19C Offset: 0x176F19C VA: 0x176F19C
	public bool get_IsSwapLock() { }

	// RVA: 0x176F1A4 Offset: 0x176F1A4 VA: 0x176F1A4
	public bool get_IsDispLock() { }

	// RVA: 0x176F1C4 Offset: 0x176F1C4 VA: 0x176F1C4
	public bool get_IsChoice() { }

	// RVA: 0x176F1CC Offset: 0x176F1CC VA: 0x176F1CC
	public bool get_IsSwapChoice() { }

	// RVA: 0x176DF90 Offset: 0x176DF90 VA: 0x176DF90
	public bool get_IsDispChoice() { }

	// RVA: 0x176F1D4 Offset: 0x176F1D4 VA: 0x176F1D4
	public bool get_IsQuestRestriction() { }

	// RVA: 0x176F1DC Offset: 0x176F1DC VA: 0x176F1DC
	public bool get_IsUniqueSvtRestriction() { }

	// RVA: 0x176F1E4 Offset: 0x176F1E4 VA: 0x176F1E4
	public long get_FatigureTime() { }

	// RVA: 0x176F1EC Offset: 0x176F1EC VA: 0x176F1EC
	public bool get_IsFatigureRecover() { }

	// RVA: 0x176F1F4 Offset: 0x176F1F4 VA: 0x176F1F4
	public void ClearFatigure() { }

	// RVA: 0x176F200 Offset: 0x176F200 VA: 0x176F200
	public IconLabelInfo get_IconInfo1() { }

	// RVA: 0x176F208 Offset: 0x176F208 VA: 0x176F208
	public IconLabelInfo get_IconInfo2() { }

	// RVA: 0x176F210 Offset: 0x176F210 VA: 0x176F210
	public IconLabelInfo get_IconInfo3() { }

	// RVA: 0x176F218 Offset: 0x176F218 VA: 0x176F218
	public bool get_IsEquip() { }

	// RVA: 0x176F228 Offset: 0x176F228 VA: 0x176F228
	public bool GetNpInfo(out TreasureDvcInfo tdInfo) { }

	// RVA: 0x176F2C0 Offset: 0x176F2C0 VA: 0x176F2C0
	public QuestRestrictionInfo get_QuestRestriction() { }

	// RVA: 0x176F2C8 Offset: 0x176F2C8 VA: 0x176F2C8
	public bool get_IsRestricted() { }

	// RVA: 0x176D010 Offset: 0x176D010 VA: 0x176D010
	private void InitAfterSecondSort() { }

	// RVA: 0x176F2D8 Offset: 0x176F2D8 VA: 0x176F2D8
	public void set_IsPushMode(bool value) { }

	// RVA: 0x176F2E4 Offset: 0x176F2E4 VA: 0x176F2E4
	public bool get_IsPushMode() { }

	// RVA: 0x176F2EC Offset: 0x176F2EC VA: 0x176F2EC
	public void set_IsPush(bool value) { }

	// RVA: 0x176F2F8 Offset: 0x176F2F8 VA: 0x176F2F8
	public bool get_IsPush() { }

	// RVA: 0x176F300 Offset: 0x176F300 VA: 0x176F300
	public void set_IsEnabled(bool value) { }

	// RVA: 0x176F30C Offset: 0x176F30C VA: 0x176F30C
	public bool get_IsEnabled() { }

	// RVA: 0x176F314 Offset: 0x176F314 VA: 0x176F314
	public bool get_IsInvalidRarity() { }

	// RVA: 0x176F31C Offset: 0x176F31C VA: 0x176F31C
	private static void .cctor() { }
}

// Namespace: 
public class PartyServantListViewItemDraw : MonoBehaviour // TypeDefIndex: 10509
{
	// Fields
	private static int BUDDY_INFO_WIDTH_DEFAULT; // 0x0
	private static int BUDDY_INFO_WIDTH_MAX; // 0x4
	private static Vector3 BUDDY_INFO_BASE_POS; // 0x8
	[SerializeField] // RVA: 0xC74EF8 Offset: 0xC74EF8 VA: 0xC74EF8
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xC74F08 Offset: 0xC74F08 VA: 0xC74F08
	protected ServantFaceIconComponent servantFaceIcon; // 0x20
	[SerializeField] // RVA: 0xC74F18 Offset: 0xC74F18 VA: 0xC74F18
	protected UIIconLabel info2IconLabel; // 0x28
	[SerializeField] // RVA: 0xC74F28 Offset: 0xC74F28 VA: 0xC74F28
	protected FlashingIconComponent partyIcon; // 0x30
	[SerializeField] // RVA: 0xC74F38 Offset: 0xC74F38 VA: 0xC74F38
	protected UISprite lockSprite; // 0x38
	[SerializeField] // RVA: 0xC74F48 Offset: 0xC74F48 VA: 0xC74F48
	protected UISprite choiceSprite; // 0x40
	[SerializeField] // RVA: 0xC74F58 Offset: 0xC74F58 VA: 0xC74F58
	protected UISprite maskSprite; // 0x48
	[SerializeField] // RVA: 0xC74F68 Offset: 0xC74F68 VA: 0xC74F68
	protected UILabel maskMessageLabel; // 0x50
	[SerializeField] // RVA: 0xC74F78 Offset: 0xC74F78 VA: 0xC74F78
	protected UIWidget maskFatigueBase; // 0x58
	[SerializeField] // RVA: 0xC74F88 Offset: 0xC74F88 VA: 0xC74F88
	protected UILabel maskFatigureMessageLabel; // 0x60
	[SerializeField] // RVA: 0xC74F98 Offset: 0xC74F98 VA: 0xC74F98
	protected UILabel maskFatigureMessageLabelTime; // 0x68
	[SerializeField] // RVA: 0xC74FA8 Offset: 0xC74FA8 VA: 0xC74FA8
	protected GameObject warningBase; // 0x70
	[SerializeField] // RVA: 0xC74FB8 Offset: 0xC74FB8 VA: 0xC74FB8
	protected FlashingIconComponent warningIcon; // 0x78
	[SerializeField] // RVA: 0xC74FC8 Offset: 0xC74FC8 VA: 0xC74FC8
	protected UILabel warningMessageLabel; // 0x80
	[SerializeField] // RVA: 0xC74FD8 Offset: 0xC74FD8 VA: 0xC74FD8
	protected GameObject selectObject; // 0x88
	[SerializeField] // RVA: 0xC74FE8 Offset: 0xC74FE8 VA: 0xC74FE8
	protected ServantClassCompatibilityIconComponent classCompatibilityIcon; // 0x90
	[SerializeField] // RVA: 0xC74FF8 Offset: 0xC74FF8 VA: 0xC74FF8
	protected UISprite pushSprite; // 0x98
	[SerializeField] // RVA: 0xC75008 Offset: 0xC75008 VA: 0xC75008
	protected UILabel skillInvalidLabel; // 0xA0
	[SerializeField] // RVA: 0xC75018 Offset: 0xC75018 VA: 0xC75018
	protected SwitchUIWidgetComponent messageLabel; // 0xA8
	[SerializeField] // RVA: 0xC75028 Offset: 0xC75028 VA: 0xC75028
	private SwitchUIWidgetComponent switchInfoComp; // 0xB0
	[SerializeField] // RVA: 0xC75038 Offset: 0xC75038 VA: 0xC75038
	private UIWidget costComp; // 0xB8
	[SerializeField] // RVA: 0xC75048 Offset: 0xC75048 VA: 0xC75048
	private UIWidget svtPointComp; // 0xC0
	[SerializeField] // RVA: 0xC75058 Offset: 0xC75058 VA: 0xC75058
	private GameObject svtPointBaseObj; // 0xC8
	[SerializeField] // RVA: 0xC75068 Offset: 0xC75068 VA: 0xC75068
	private UISprite svtPointIconSprite; // 0xD0
	[SerializeField] // RVA: 0xC75078 Offset: 0xC75078 VA: 0xC75078
	private UILabel svtPointInfoLabel; // 0xD8
	private List<UIWidget> messageLabelList; // 0xE0
	private List<UIWidget> switchInfoList; // 0xE8
	protected int maskMessageWidth; // 0xF0
	protected int warningMessageWidth; // 0xF4

	// Methods

	// RVA: 0x176F388 Offset: 0x176F388 VA: 0x176F388
	public void .ctor() { }

	// RVA: 0x176F390 Offset: 0x176F390 VA: 0x176F390
	protected void Awake() { }

	// RVA: 0x176F498 Offset: 0x176F498 VA: 0x176F498
	public void SetItem(PartyServantListViewItem item, PartyServantListViewItemDraw.DispMode mode) { }

	// RVA: 0x176FC44 Offset: 0x176FC44 VA: 0x176FC44
	private bool SetMessageLabel(PartyServantListViewItem item) { }

	// RVA: 0x1770B90 Offset: 0x1770B90 VA: 0x1770B90
	private bool SetRestrictionMask(PartyServantListViewItem item) { }

	// RVA: 0x176FFBC Offset: 0x176FFBC VA: 0x176FFBC
	private void SetClassCompatibilityIcon(PartyServantListViewItem item, bool isClear) { }

	// RVA: 0x17709EC Offset: 0x17709EC VA: 0x17709EC
	protected void ClearMessage() { }

	// RVA: 0x1770244 Offset: 0x1770244 VA: 0x1770244
	protected void SetMaskMessage(string message, bool isScale = False, string maskName) { }

	// RVA: 0x1770D9C Offset: 0x1770D9C VA: 0x1770D9C
	protected void SetWarningMessage(string message, bool isScale = False) { }

	// RVA: 0x1771084 Offset: 0x1771084 VA: 0x1771084
	public void SetInput(PartyServantListViewItem item, bool isInput) { }

	// RVA: 0x17713E0 Offset: 0x17713E0 VA: 0x17713E0
	public void UpdateDisp(PartyServantListViewItem item) { }

	// RVA: 0x17705DC Offset: 0x17705DC VA: 0x17705DC
	protected void SetFatigueMask(PartyServantListViewItem item) { }

	// RVA: 0x1771430 Offset: 0x1771430 VA: 0x1771430
	private static void .cctor() { }
}

// Namespace: 
public enum PartyServantListViewItemDraw.DispMode // TypeDefIndex: 10510
{
	// Fields
	public int value__; // 0x0
	public const PartyServantListViewItemDraw.DispMode INVISIBLE = 0;
	public const PartyServantListViewItemDraw.DispMode INVALID = 1;
	public const PartyServantListViewItemDraw.DispMode VALID = 2;
	public const PartyServantListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class PartyServantListViewManager : ListViewManager // TypeDefIndex: 10511
{
	// Fields
	[SerializeField] // RVA: 0xC75088 Offset: 0xC75088 VA: 0xC75088
	protected PartyServantSelectMenu partyServantSelectMenu; // 0x138
	[SerializeField] // RVA: 0xC75098 Offset: 0xC75098 VA: 0xC75098
	protected UILabel maxCostLabel; // 0x140
	[SerializeField] // RVA: 0xC750A8 Offset: 0xC750A8 VA: 0xC750A8
	protected UILabel splitCostLabel; // 0x148
	[SerializeField] // RVA: 0xC750B8 Offset: 0xC750B8 VA: 0xC750B8
	protected UILabel selectCostLabel; // 0x150
	[SerializeField] // RVA: 0xC750C8 Offset: 0xC750C8 VA: 0xC750C8
	protected UISprite sortExplanationSprite; // 0x158
	[SerializeField] // RVA: 0xC750D8 Offset: 0xC750D8 VA: 0xC750D8
	protected UISprite filterSprite; // 0x160
	[SerializeField] // RVA: 0xC750E8 Offset: 0xC750E8 VA: 0xC750E8
	protected UICommonButton bonusFilterKindButton; // 0x168
	[SerializeField] // RVA: 0xC750F8 Offset: 0xC750F8 VA: 0xC750F8
	protected UILabel bonusFilterKindLabel; // 0x170
	[SerializeField] // RVA: 0xC75108 Offset: 0xC75108 VA: 0xC75108
	protected ListViewItemSeed normalSizeSeed; // 0x178
	[SerializeField] // RVA: 0xC75118 Offset: 0xC75118 VA: 0xC75118
	protected ListViewItemSeed smallSizeSeed; // 0x180
	[SerializeField] // RVA: 0xC75128 Offset: 0xC75128 VA: 0xC75128
	protected ListViewItemSeed extremelySmallSizeSeed; // 0x188
	public static readonly string SORT_SAVE_KEY; // 0x0
	public static readonly string WAR_SORT_SAVE_KEY; // 0x8
	protected static ListViewSort servantSortInfo; // 0x10
	protected static ListViewSort warServantSortInfo; // 0x18
	protected PartyServantListViewManager.InitMode initMode; // 0x190
	protected ListViewSort.ScaleType scaleType; // 0x194
	[CompilerGeneratedAttribute] // RVA: 0xC75138 Offset: 0xC75138 VA: 0xC75138
	[DebuggerBrowsableAttribute] // RVA: 0xC75138 Offset: 0xC75138 VA: 0xC75138
	private PartyServantListViewManager.CallbackFunc callbackFunc; // 0x198
	[CompilerGeneratedAttribute] // RVA: 0xC75174 Offset: 0xC75174 VA: 0xC75174
	[DebuggerBrowsableAttribute] // RVA: 0xC75174 Offset: 0xC75174 VA: 0xC75174
	private Action callbackFunc2; // 0x1A0
	protected int callbackCount; // 0x1A8
	protected bool isFatigue; // 0x1AC
	protected bool isQuestStart; // 0x1AD
	protected int[] bonusEventIdList; // 0x1B0
	protected int[] servantFilterIdList; // 0x1B8
	private bool isBuddyPoint; // 0x1C0
	protected long updateTime; // 0x1C8

	// Properties
	public List<PartyServantListViewObject> ObjectList { get; }
	public List<PartyServantListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x17714D8 Offset: 0x17714D8 VA: 0x17714D8
	public void .ctor() { }

	// RVA: 0x17714E8 Offset: 0x17714E8 VA: 0x17714E8
	protected void add_callbackFunc(PartyServantListViewManager.CallbackFunc value) { }

	// RVA: 0x17715D8 Offset: 0x17715D8 VA: 0x17715D8
	protected void remove_callbackFunc(PartyServantListViewManager.CallbackFunc value) { }

	// RVA: 0x17716C8 Offset: 0x17716C8 VA: 0x17716C8
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x17717B8 Offset: 0x17717B8 VA: 0x17717B8
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x17718A8 Offset: 0x17718A8 VA: 0x17718A8
	public PartyServantSelectMenu.ModeKind GetModeKind() { }

	// RVA: 0x17718DC Offset: 0x17718DC VA: 0x17718DC
	public static void DeleteContinueData() { }

	// RVA: 0x177197C Offset: 0x177197C VA: 0x177197C
	public static void InitLoad() { }

	// RVA: 0x1771A1C Offset: 0x1771A1C VA: 0x1771A1C
	public List<PartyServantListViewObject> get_ObjectList() { }

	// RVA: 0x1771BE8 Offset: 0x1771BE8 VA: 0x1771BE8
	public List<PartyServantListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1771EC8 Offset: 0x1771EC8 VA: 0x1771EC8
	public void SortItem(int selectIndex = -1, bool isAllDisp = False, int addEmptyTarminal = -1) { }

	// RVA: 0x1771F68 Offset: 0x1771F68 VA: 0x1771F68
	public void CreateList(PartyListViewItem partyItem, int num, PartyServantSelectMenu.TutorialMode tutorialMode, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo) { }

	// RVA: 0x1772814 Offset: 0x1772814 VA: 0x1772814
	public void CreateList(WarBoardPartyListViewItem partyItem, int num, PartyServantSelectMenu.TutorialMode tutorialMode, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo) { }

	// RVA: 0x1772F44 Offset: 0x1772F44 VA: 0x1772F44
	public void ModifyList(bool isIconSizeChange = False) { }

	// RVA: 0x1773304 Offset: 0x1773304 VA: 0x1773304
	public void DestroyList() { }

	// RVA: 0x1773350 Offset: 0x1773350 VA: 0x1773350
	public PartyServantListViewItem GetItem(int index) { }

	// RVA: 0x17733F8 Offset: 0x17733F8 VA: 0x17733F8
	public bool GetSwapLockList(out long[] lockList, out long[] unlockList) { }

	// RVA: 0x17736D0 Offset: 0x17736D0 VA: 0x17736D0
	public bool GetSwapChoiceList(out long[] choiceList, out long[] unchoiceList) { }

	// RVA: 0x17739A4 Offset: 0x17739A4 VA: 0x17739A4 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1773ADC Offset: 0x1773ADC VA: 0x1773ADC
	public void SetMode(PartyServantListViewManager.InitMode mode, PartyServantListViewManager.CallbackFunc callback) { }

	// RVA: 0x1773EC0 Offset: 0x1773EC0 VA: 0x1773EC0
	public void SetMode(PartyServantListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1773AE4 Offset: 0x1773AE4 VA: 0x1773AE4
	public void SetMode(PartyServantListViewManager.InitMode mode) { }

	// RVA: 0x1774140 Offset: 0x1774140 VA: 0x1774140
	protected void RequestListObject(PartyServantListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1773EC8 Offset: 0x1773EC8 VA: 0x1773EC8
	protected void RequestListObject(PartyServantListViewObject.InitMode mode) { }

	// RVA: 0x17743CC Offset: 0x17743CC VA: 0x17743CC
	protected void OnMoveEnd() { }

	// RVA: 0x1774498 Offset: 0x1774498 VA: 0x1774498
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x177449C Offset: 0x177449C VA: 0x177449C
	protected void OnClickSelectListView(ListViewObject obj) { }

	// RVA: 0x177473C Offset: 0x177473C VA: 0x177473C
	protected void OnLongPushListView(ListViewObject obj) { }

	// RVA: 0x17747E0 Offset: 0x17747E0 VA: 0x17747E0
	public void OnClickBonusFilterKind() { }

	// RVA: 0x17748E8 Offset: 0x17748E8 VA: 0x17748E8
	public void OnClickFilterKind() { }

	// RVA: 0x17749DC Offset: 0x17749DC VA: 0x17749DC
	public void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x1774AA4 Offset: 0x1774AA4 VA: 0x1774AA4
	protected void EndCloseSelectFilterKind() { }

	// RVA: 0x1772780 Offset: 0x1772780 VA: 0x1772780
	private void SetFilterButtonImage() { }

	// RVA: 0x1774AA8 Offset: 0x1774AA8 VA: 0x1774AA8
	public void OnClickSortKind() { }

	// RVA: 0x1774BE4 Offset: 0x1774BE4 VA: 0x1774BE4
	protected void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x1774CA4 Offset: 0x1774CA4 VA: 0x1774CA4
	protected void EndCloseSelectSortKind() { }

	// RVA: 0x1774CA8 Offset: 0x1774CA8 VA: 0x1774CA8
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x1774D94 Offset: 0x1774D94 VA: 0x1774D94 Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x176EE24 Offset: 0x176EE24 VA: 0x176EE24
	public long GetAmountSortValue(int svtId) { }

	// RVA: 0x1775114 Offset: 0x1775114 VA: 0x1775114
	protected void Update() { }

	// RVA: 0x17751F0 Offset: 0x17751F0 VA: 0x17751F0
	protected void UpdateDisp() { }

	// RVA: 0x177542C Offset: 0x177542C VA: 0x177542C
	public void ChangeIconScale() { }

	// RVA: 0x1775500 Offset: 0x1775500 VA: 0x1775500
	public string GetScaleButtonSpriteName() { }

	// RVA: 0x1775538 Offset: 0x1775538 VA: 0x1775538
	public void UpdateItemState(bool isPushMode) { }

	// RVA: 0x1775838 Offset: 0x1775838 VA: 0x1775838
	private static void .cctor() { }
}

// Namespace: 
public enum PartyServantListViewManager.InitMode // TypeDefIndex: 10512
{
	// Fields
	public int value__; // 0x0
	public const PartyServantListViewManager.InitMode NONE = 0;
	public const PartyServantListViewManager.InitMode VALID = 1;
	public const PartyServantListViewManager.InitMode INPUT = 2;
	public const PartyServantListViewManager.InitMode MODIFY = 3;
	public const PartyServantListViewManager.InitMode SORT = 4;
	public const PartyServantListViewManager.InitMode ORGANIZATION_GUIDE_FIRST_SELECT = 5;
}

// Namespace: 
public enum PartyServantListViewManager.ResultKind // TypeDefIndex: 10513
{
	// Fields
	public int value__; // 0x0
	public const PartyServantListViewManager.ResultKind NONE = 0;
	public const PartyServantListViewManager.ResultKind CANCEL = 1;
	public const PartyServantListViewManager.ResultKind DECIDE = 2;
	public const PartyServantListViewManager.ResultKind SHOW_STATUS = 3;
}

// Namespace: 
public sealed class PartyServantListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 10514
{
	// Methods

	// RVA: 0x1775924 Offset: 0x1775924 VA: 0x1775924
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x17744F8 Offset: 0x17744F8 VA: 0x17744F8 Slot: 11
	public virtual void Invoke(PartyServantListViewManager.ResultKind kind, int result) { }

	// RVA: 0x1775934 Offset: 0x1775934 VA: 0x1775934 Slot: 12
	public virtual IAsyncResult BeginInvoke(PartyServantListViewManager.ResultKind kind, int result, AsyncCallback callback, object object) { }

	// RVA: 0x17759DC Offset: 0x17759DC VA: 0x17759DC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class PartyServantListViewObject : ListViewObject // TypeDefIndex: 10515
{
	// Fields
	protected PartyServantListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC751B0 Offset: 0xC751B0 VA: 0xC751B0
	[DebuggerBrowsableAttribute] // RVA: 0xC751B0 Offset: 0xC751B0 VA: 0xC751B0
	private Action callbackFunc; // 0x70
	protected PartyServantListViewItemDraw itemDraw; // 0x78
	protected PartyServantListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x17759E8 Offset: 0x17759E8 VA: 0x17759E8
	public void .ctor() { }

	// RVA: 0x1775A50 Offset: 0x1775A50 VA: 0x1775A50
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1775B3C Offset: 0x1775B3C VA: 0x1775B3C
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1775C28 Offset: 0x1775C28 VA: 0x1775C28
	protected void Awake() { }

	// RVA: 0x1775C9C Offset: 0x1775C9C VA: 0x1775C9C
	private void OnDestroy() { }

	// RVA: 0x1771E44 Offset: 0x1771E44 VA: 0x1771E44
	public PartyServantListViewItem GetItem() { }

	// RVA: 0x1775D48 Offset: 0x1775D48 VA: 0x1775D48 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1775D78 Offset: 0x1775D78 VA: 0x1775D78 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x1775D70 Offset: 0x1775D70 VA: 0x1775D70
	protected void InitItem() { }

	// RVA: 0x1775DA0 Offset: 0x1775DA0 VA: 0x1775DA0 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x1775EA4 Offset: 0x1775EA4 VA: 0x1775EA4 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1775F2C Offset: 0x1775F2C VA: 0x1775F2C
	public void Init(PartyServantListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1774348 Offset: 0x1774348 VA: 0x1774348
	public void Init(PartyServantListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x17740BC Offset: 0x17740BC VA: 0x17740BC
	public void Init(PartyServantListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x1773A5C Offset: 0x1773A5C VA: 0x1773A5C
	public void Init(PartyServantListViewObject.InitMode initMode) { }

	// RVA: 0x1775340 Offset: 0x1775340 VA: 0x1775340
	public void UpdateDisp() { }

	// RVA: 0x1776134 Offset: 0x1776134 VA: 0x1776134
	protected void SetupDisp() { }

	// RVA: 0x1776244 Offset: 0x1776244 VA: 0x1776244
	protected void EventMoveEnd() { }

	// RVA: 0x177626C Offset: 0x177626C VA: 0x177626C
	public void OnClickSelect() { }

	// RVA: 0x1776308 Offset: 0x1776308 VA: 0x1776308
	public void OnLongPush() { }
}

// Namespace: 
public enum PartyServantListViewObject.InitMode // TypeDefIndex: 10516
{
	// Fields
	public int value__; // 0x0
	public const PartyServantListViewObject.InitMode INVISIBLE = 0;
	public const PartyServantListViewObject.InitMode INVALID = 1;
	public const PartyServantListViewObject.InitMode VALID = 2;
	public const PartyServantListViewObject.InitMode INPUT = 3;
	public const PartyServantListViewObject.InitMode MODIFY = 4;
	public const PartyServantListViewObject.InitMode TUTORIAL_INPUT = 5;
}

// Namespace: 
protected enum PartyServantListViewObject.State // TypeDefIndex: 10517
{
	// Fields
	public int value__; // 0x0
	public const PartyServantListViewObject.State INIT = 0;
	public const PartyServantListViewObject.State IDLE = 1;
	public const PartyServantListViewObject.State MOVE = 2;
	public const PartyServantListViewObject.State INPUT = 3;
	public const PartyServantListViewObject.State TUTORIAL_INPUT = 4;
}

// Namespace: 
public class PartyServantSelectMenu : BaseMenu // TypeDefIndex: 10518
{
	// Fields
	[SerializeField] // RVA: 0xC751EC Offset: 0xC751EC VA: 0xC751EC
	protected PartyServantListViewManager partyServantListViewManager; // 0x58
	[SerializeField] // RVA: 0xC751FC Offset: 0xC751FC VA: 0xC751FC
	protected GameObject tutorialMaskBase; // 0x60
	[SerializeField] // RVA: 0xC7520C Offset: 0xC7520C VA: 0xC7520C
	protected TitleInfoControl titleInfo; // 0x68
	[SerializeField] // RVA: 0xC7521C Offset: 0xC7521C VA: 0xC7521C
	protected FollowerQuestInfomationDraw questInfomationDraw; // 0x70
	[SerializeField] // RVA: 0xC7522C Offset: 0xC7522C VA: 0xC7522C
	protected UISprite statusTabSprite; // 0x78
	[SerializeField] // RVA: 0xC7523C Offset: 0xC7523C VA: 0xC7523C
	protected UISprite lockTabSprite; // 0x80
	[SerializeField] // RVA: 0xC7524C Offset: 0xC7524C VA: 0xC7524C
	protected UISprite choiceTabSprite; // 0x88
	[SerializeField] // RVA: 0xC7525C Offset: 0xC7525C VA: 0xC7525C
	protected UISprite pushTabSprite; // 0x90
	[SerializeField] // RVA: 0xC7526C Offset: 0xC7526C VA: 0xC7526C
	protected UISprite scaleChangeTabSprite; // 0x98
	[SerializeField] // RVA: 0xC7527C Offset: 0xC7527C VA: 0xC7527C
	protected UICommonButton statusTabButton; // 0xA0
	[SerializeField] // RVA: 0xC7528C Offset: 0xC7528C VA: 0xC7528C
	protected UICommonButton lockTabButton; // 0xA8
	[SerializeField] // RVA: 0xC7529C Offset: 0xC7529C VA: 0xC7529C
	protected UICommonButton choiceTabButton; // 0xB0
	[SerializeField] // RVA: 0xC752AC Offset: 0xC752AC VA: 0xC752AC
	protected UICommonButton pushTabButton; // 0xB8
	[SerializeField] // RVA: 0xC752BC Offset: 0xC752BC VA: 0xC752BC
	protected UICommonButton scaleChangeTabButton; // 0xC0
	[SerializeField] // RVA: 0xC752CC Offset: 0xC752CC VA: 0xC752CC
	protected UILabel explanationLabel; // 0xC8
	[SerializeField] // RVA: 0xC752DC Offset: 0xC752DC VA: 0xC752DC
	protected UISprite bgTxtSprite; // 0xD0
	protected PartyServantSelectMenu.TutorialMode tutorialMode; // 0xD8
	protected PartyServantSelectMenu.ModeKind modeKind; // 0xDC
	protected bool isInitTab; // 0xE0
	protected PartyServantSelectMenu.State state; // 0xE4
	[CompilerGeneratedAttribute] // RVA: 0xC752EC Offset: 0xC752EC VA: 0xC752EC
	[DebuggerBrowsableAttribute] // RVA: 0xC752EC Offset: 0xC752EC VA: 0xC752EC
	private PartyServantSelectMenu.CallbackFunc callbackFunc; // 0xE8
	protected Action openCallbackFunc; // 0xF0
	protected Action closeCallbackFunc; // 0xF8
	protected int tutorialSelect; // 0x100
	protected PartyServantSelectMenu.RequestCallbackFunc requedstCallback; // 0x108
	protected long selectUserSvtId; // 0x110
	public bool isSelectedSvt; // 0x118

	// Methods

	// RVA: 0x1776390 Offset: 0x1776390 VA: 0x1776390
	public void .ctor() { }

	// RVA: 0x17763F8 Offset: 0x17763F8 VA: 0x17763F8
	protected void add_callbackFunc(PartyServantSelectMenu.CallbackFunc value) { }

	// RVA: 0x17764E4 Offset: 0x17764E4 VA: 0x17764E4
	protected void remove_callbackFunc(PartyServantSelectMenu.CallbackFunc value) { }

	// RVA: 0x17718D4 Offset: 0x17718D4 VA: 0x17718D4
	public PartyServantSelectMenu.ModeKind GetModeKind() { }

	// RVA: 0x17765D0 Offset: 0x17765D0 VA: 0x17765D0
	public void Init() { }

	// RVA: 0x1766E4C Offset: 0x1766E4C VA: 0x1766E4C
	public void Open(PartyListViewItem partyItem, int num, PartyServantSelectMenu.TutorialMode tutorialMode, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, PartyServantSelectMenu.CallbackFunc callback, Action openCallback) { }

	// RVA: 0x1776EC8 Offset: 0x1776EC8 VA: 0x1776EC8
	public void Open(WarBoardPartyListViewItem partyItem, int num, PartyServantSelectMenu.TutorialMode tutorialMode, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, PartyServantSelectMenu.CallbackFunc callback, Action openCallback) { }

	// RVA: 0x1776C50 Offset: 0x1776C50 VA: 0x1776C50
	protected void EndOpen() { }

	// RVA: 0x177717C Offset: 0x177717C VA: 0x177717C
	protected void EndOpenTutorialArrow() { }

	// RVA: 0x1777364 Offset: 0x1777364 VA: 0x1777364
	public void Close() { }

	// RVA: 0x177736C Offset: 0x177736C VA: 0x177736C
	public void Close(Action callback) { }

	// RVA: 0x1777428 Offset: 0x1777428 VA: 0x1777428
	protected void EndClose() { }

	// RVA: 0x1776618 Offset: 0x1776618 VA: 0x1776618
	protected void SetTabKind(PartyServantSelectMenu.ModeKind modeKind, bool isInit = False) { }

	// RVA: 0x1777464 Offset: 0x1777464 VA: 0x1777464
	protected void Callback(PartyServantSelectMenu.ResultKind result, int n = -1) { }

	// RVA: 0x1777724 Offset: 0x1777724 VA: 0x1777724
	public void OnClickDecide() { }

	// RVA: 0x17779F0 Offset: 0x17779F0 VA: 0x17779F0
	protected void EndClickDecide(bool isRequest) { }

	// RVA: 0x1777A6C Offset: 0x1777A6C VA: 0x1777A6C
	public void OnClickCancel() { }

	// RVA: 0x1777B50 Offset: 0x1777B50 VA: 0x1777B50
	protected void EndClickCancel(bool isRequest) { }

	// RVA: 0x1777BCC Offset: 0x1777BCC VA: 0x1777BCC
	public void OnClickTabStatus() { }

	// RVA: 0x1777C84 Offset: 0x1777C84 VA: 0x1777C84
	protected void EndClickTabStatus(bool isRequest) { }

	// RVA: 0x1777CE8 Offset: 0x1777CE8 VA: 0x1777CE8
	public void OnClickTabLock() { }

	// RVA: 0x1777E00 Offset: 0x1777E00 VA: 0x1777E00
	protected void EndClickTabLock(bool isRequest) { }

	// RVA: 0x1777E64 Offset: 0x1777E64 VA: 0x1777E64
	public void OnClickTabChoice() { }

	// RVA: 0x1777F7C Offset: 0x1777F7C VA: 0x1777F7C
	protected void EndClickTabChoice(bool isRequest) { }

	// RVA: 0x1777FE0 Offset: 0x1777FE0 VA: 0x1777FE0
	public void OnClickTabPush() { }

	// RVA: 0x17780BC Offset: 0x17780BC VA: 0x17780BC
	protected void EndClickTabPush(bool isRequest) { }

	// RVA: 0x17777F4 Offset: 0x17777F4 VA: 0x17777F4
	public void StatusRequest(PartyServantSelectMenu.RequestCallbackFunc callback) { }

	// RVA: 0x177834C Offset: 0x177834C VA: 0x177834C
	protected void EndStatusSync(string result) { }

	// RVA: 0x177836C Offset: 0x177836C VA: 0x177836C
	protected void OnSelectItem(PartyServantListViewManager.ResultKind kind, int n) { }

	// RVA: 0x1779550 Offset: 0x1779550 VA: 0x1779550
	protected void EndShowServant(bool isDecide, bool isIndividualityChanged) { }

	// RVA: 0x17796AC Offset: 0x17796AC VA: 0x17796AC
	protected void EndShowServantWithQuest(bool isDecide, bool isIndividualityChanged, int questId) { }

	// RVA: 0x177977C Offset: 0x177977C VA: 0x177977C
	protected void EndCloseShowServant() { }

	// RVA: 0x1779838 Offset: 0x1779838 VA: 0x1779838
	protected void EndCloseShowServantQuestJump() { }

	// RVA: 0x17798A4 Offset: 0x17798A4 VA: 0x17798A4
	protected void EndCloseTutorialArrow() { }

	// RVA: 0x17798F4 Offset: 0x17798F4 VA: 0x17798F4
	public void OnClickScaleChange() { }

	// RVA: 0x17791A8 Offset: 0x17791A8 VA: 0x17791A8
	private void PushRequest(PartyServantListViewItem selectItem) { }

	// RVA: 0x17799C8 Offset: 0x17799C8 VA: 0x17799C8
	private void EndCardFavoriteRequest(string result) { }

	// RVA: 0x1779A7C Offset: 0x1779A7C VA: 0x1779A7C
	public void ClearScrollValue() { }
}

// Namespace: 
public enum PartyServantSelectMenu.TutorialMode // TypeDefIndex: 10519
{
	// Fields
	public int value__; // 0x0
	public const PartyServantSelectMenu.TutorialMode NONE = 0;
	public const PartyServantSelectMenu.TutorialMode ORGANIZATION_GUIDE_FIRST_DIALOG = 1;
	public const PartyServantSelectMenu.TutorialMode ORGANIZATION_GUIDE_FIRST_SELECT = 2;
}

// Namespace: 
public enum PartyServantSelectMenu.ModeKind // TypeDefIndex: 10520
{
	// Fields
	public int value__; // 0x0
	public const PartyServantSelectMenu.ModeKind STATUS = 0;
	public const PartyServantSelectMenu.ModeKind LOCK = 1;
	public const PartyServantSelectMenu.ModeKind CHOICE = 2;
	public const PartyServantSelectMenu.ModeKind PUSH = 3;
	public const PartyServantSelectMenu.ModeKind SUM = 4;
}

// Namespace: 
public enum PartyServantSelectMenu.ResultKind // TypeDefIndex: 10521
{
	// Fields
	public int value__; // 0x0
	public const PartyServantSelectMenu.ResultKind CANCEL = 0;
	public const PartyServantSelectMenu.ResultKind DECIDE = 1;
	public const PartyServantSelectMenu.ResultKind DETAIL = 2;
}

// Namespace: 
protected enum PartyServantSelectMenu.State // TypeDefIndex: 10522
{
	// Fields
	public int value__; // 0x0
	public const PartyServantSelectMenu.State INIT = 0;
	public const PartyServantSelectMenu.State OPEN = 1;
	public const PartyServantSelectMenu.State INPUT = 2;
	public const PartyServantSelectMenu.State SELECTED = 3;
	public const PartyServantSelectMenu.State CLOSE = 4;
	public const PartyServantSelectMenu.State SHOW_STATUS = 5;
	public const PartyServantSelectMenu.State TUTORIAL_OPEN = 6;
	public const PartyServantSelectMenu.State TUTORIAL = 7;
	public const PartyServantSelectMenu.State TUTORIAL_CLOSE = 8;
}

// Namespace: 
public sealed class PartyServantSelectMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10523
{
	// Methods

	// RVA: 0x1766E3C Offset: 0x1766E3C VA: 0x1766E3C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x17774E0 Offset: 0x17774E0 VA: 0x17774E0 Slot: 11
	public virtual void Invoke(PartyServantSelectMenu.ResultKind result, PartyServantListViewItem item) { }

	// RVA: 0x1779C28 Offset: 0x1779C28 VA: 0x1779C28 Slot: 12
	public virtual IAsyncResult BeginInvoke(PartyServantSelectMenu.ResultKind result, PartyServantListViewItem item, AsyncCallback callback, object object) { }

	// RVA: 0x1779CC0 Offset: 0x1779CC0 VA: 0x1779CC0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class PartyServantSelectMenu.RequestCallbackFunc : MulticastDelegate // TypeDefIndex: 10524
{
	// Methods

	// RVA: 0x17777E4 Offset: 0x17777E4 VA: 0x17777E4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1778120 Offset: 0x1778120 VA: 0x1778120 Slot: 11
	public virtual void Invoke(bool isRequest) { }

	// RVA: 0x1779CCC Offset: 0x1779CCC VA: 0x1779CCC Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isRequest, AsyncCallback callback, object object) { }

	// RVA: 0x1779D5C Offset: 0x1779D5C VA: 0x1779D5C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45394 Offset: 0xC45394 VA: 0xC45394
private sealed class PartyServantSelectMenu.<OnSelectItem>c__AnonStorey0 // TypeDefIndex: 10525
{
	// Fields
	internal PartyServantListViewItem item; // 0x10
	internal PartyServantSelectMenu $this; // 0x18

	// Methods

	// RVA: 0x17791A0 Offset: 0x17791A0 VA: 0x17791A0
	public void .ctor() { }

	// RVA: 0x1779AB0 Offset: 0x1779AB0 VA: 0x1779AB0
	internal void <>m__0(bool isDecide) { }

	// RVA: 0x1779BF8 Offset: 0x1779BF8 VA: 0x1779BF8
	internal void <>m__1() { }
}

// Namespace: 
public class SelectMyServantOrNpcDialog : BaseDialog // TypeDefIndex: 10526
{
	// Fields
	[SerializeField] // RVA: 0xC75328 Offset: 0xC75328 VA: 0xC75328
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC75338 Offset: 0xC75338 VA: 0xC75338
	protected UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC75348 Offset: 0xC75348 VA: 0xC75348
	protected UILabel myServantBtnLabel; // 0x68
	[SerializeField] // RVA: 0xC75358 Offset: 0xC75358 VA: 0xC75358
	protected UILabel npcBtnLabel; // 0x70
	[SerializeField] // RVA: 0xC75368 Offset: 0xC75368 VA: 0xC75368
	protected UILabel closeBtnLabel; // 0x78
	[SerializeField] // RVA: 0xC75378 Offset: 0xC75378 VA: 0xC75378
	protected GameObject closeBtn; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC75388 Offset: 0xC75388 VA: 0xC75388
	[DebuggerBrowsableAttribute] // RVA: 0xC75388 Offset: 0xC75388 VA: 0xC75388
	private SelectMyServantOrNpcDialog.CallbackFunc callbackFunc; // 0x88
	protected Action closeCallbackFunc; // 0x90
	protected SelectMyServantOrNpcDialog.State state; // 0x98

	// Methods

	// RVA: 0x1735CB8 Offset: 0x1735CB8 VA: 0x1735CB8
	public void .ctor() { }

	// RVA: 0x1735D20 Offset: 0x1735D20 VA: 0x1735D20
	protected void add_callbackFunc(SelectMyServantOrNpcDialog.CallbackFunc value) { }

	// RVA: 0x1735E0C Offset: 0x1735E0C VA: 0x1735E0C
	protected void remove_callbackFunc(SelectMyServantOrNpcDialog.CallbackFunc value) { }

	// RVA: 0x1735EF8 Offset: 0x1735EF8 VA: 0x1735EF8
	public void Init() { }

	// RVA: 0x1735FEC Offset: 0x1735FEC VA: 0x1735FEC
	public void Open(string name, SelectMyServantOrNpcDialog.CallbackFunc callback, bool canMaskTouchClose = False) { }

	// RVA: 0x17363E0 Offset: 0x17363E0 VA: 0x17363E0
	protected void EndOpen() { }

	// RVA: 0x17363EC Offset: 0x17363EC VA: 0x17363EC
	public void Close() { }

	// RVA: 0x17363F4 Offset: 0x17363F4 VA: 0x17363F4
	public void Close(Action callback) { }

	// RVA: 0x1736484 Offset: 0x1736484 VA: 0x1736484
	protected void EndClose() { }

	// RVA: 0x17364C0 Offset: 0x17364C0 VA: 0x17364C0
