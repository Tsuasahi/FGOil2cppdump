	public void OnClickTabStatus() { }

	// RVA: 0x1F13FBC Offset: 0x1F13FBC VA: 0x1F13FBC
	protected void EndClickTabStatus(bool isRequest) { }

	// RVA: 0x1F1402C Offset: 0x1F1402C VA: 0x1F1402C
	public void OnClickTabLock() { }

	// RVA: 0x1F14148 Offset: 0x1F14148 VA: 0x1F14148
	protected void EndClickTabLock(bool isRequest) { }

	// RVA: 0x1F141B8 Offset: 0x1F141B8 VA: 0x1F141B8
	public void OnClickTabChoice() { }

	// RVA: 0x1F142D4 Offset: 0x1F142D4 VA: 0x1F142D4
	protected void EndClickTabChoice(bool isRequest) { }

	// RVA: 0x1F14344 Offset: 0x1F14344 VA: 0x1F14344
	public void OnClickTabPush() { }

	// RVA: 0x1F14420 Offset: 0x1F14420 VA: 0x1F14420
	protected void EndClickTabPush(bool isRequest) { }

	// RVA: 0x1F13A18 Offset: 0x1F13A18 VA: 0x1F13A18
	public void StatusRequest(CharaGraphListMenu.RequestCallbackFunc callback) { }

	// RVA: 0x1F146BC Offset: 0x1F146BC VA: 0x1F146BC
	protected void EndStatusSync(string result) { }

	// RVA: 0x1F146DC Offset: 0x1F146DC VA: 0x1F146DC
	protected void OnSelectServant(ServantListViewManager.ResultKind kind, int n) { }

	// RVA: 0x1F1559C Offset: 0x1F1559C VA: 0x1F1559C
	protected void EndShowServant(bool isDecide, bool isIndividualityChanged, int questId) { }

	// RVA: 0x1F156DC Offset: 0x1F156DC VA: 0x1F156DC
	protected void EndShowServantEquip(bool isDecide) { }

	// RVA: 0x1F157C8 Offset: 0x1F157C8 VA: 0x1F157C8
	protected void EndCloseShowServant() { }

	// RVA: 0x1F1588C Offset: 0x1F1588C VA: 0x1F1588C
	protected void EndCloseShowServantQuestJump() { }

	// RVA: 0x1F158B4 Offset: 0x1F158B4 VA: 0x1F158B4
	public void OnClickScaleChange() { }

	// RVA: 0x1F135A0 Offset: 0x1F135A0 VA: 0x1F135A0
	private CharaGraphListMenu.ModeKind HidePushButton(CharaGraphListMenu.ModeKind modeKind, bool isInit) { }

	// RVA: 0x1F151E4 Offset: 0x1F151E4 VA: 0x1F151E4
	private void PushRequest(ServantListViewItem selectItem) { }

	// RVA: 0x1F15990 Offset: 0x1F15990 VA: 0x1F15990
	private void EndCardFavoriteRequest(string result) { }
}

// Namespace: 
public enum CharaGraphListMenu.Kind // TypeDefIndex: 10513
{
	// Fields
	public int value__; // 0x0
	public const CharaGraphListMenu.Kind EQUIP = 0;
}

// Namespace: 
public enum CharaGraphListMenu.TabKind // TypeDefIndex: 10514
{
	// Fields
	public int value__; // 0x0
	public const CharaGraphListMenu.TabKind SERVANT = 0;
	public const CharaGraphListMenu.TabKind SERVANT_EQUIP = 1;
	public const CharaGraphListMenu.TabKind COMMAND_CODE = 2;
	public const CharaGraphListMenu.TabKind SUM = 3;
}

// Namespace: 
public enum CharaGraphListMenu.ModeKind // TypeDefIndex: 10515
{
	// Fields
	public int value__; // 0x0
	public const CharaGraphListMenu.ModeKind STATUS = 0;
	public const CharaGraphListMenu.ModeKind LOCK = 1;
	public const CharaGraphListMenu.ModeKind CHOICE = 2;
	public const CharaGraphListMenu.ModeKind PUSH = 3;
	public const CharaGraphListMenu.ModeKind SUM = 4;
}

// Namespace: 
public enum CharaGraphListMenu.ResultKind // TypeDefIndex: 10516
{
	// Fields
	public int value__; // 0x0
	public const CharaGraphListMenu.ResultKind CANCEL = 0;
	public const CharaGraphListMenu.ResultKind DECIDE = 1;
	public const CharaGraphListMenu.ResultKind SERVANT_QUEST = 2;
}

// Namespace: 
protected enum CharaGraphListMenu.State // TypeDefIndex: 10517
{
	// Fields
	public int value__; // 0x0
	public const CharaGraphListMenu.State INIT = 0;
	public const CharaGraphListMenu.State OPEN = 1;
	public const CharaGraphListMenu.State INPUT = 2;
	public const CharaGraphListMenu.State SELECTED = 3;
	public const CharaGraphListMenu.State CLOSE = 4;
	public const CharaGraphListMenu.State EQUIP_SELECT = 5;
	public const CharaGraphListMenu.State SHOW_STATUS = 6;
}

// Namespace: 
public sealed class CharaGraphListMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10518
{
	// Methods

	// RVA: 0x1F15BC8 Offset: 0x1F15BC8 VA: 0x1F15BC8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1F13694 Offset: 0x1F13694 VA: 0x1F13694 Slot: 11
	public virtual void Invoke(CharaGraphListMenu.ResultKind result) { }

	// RVA: 0x1F15BD8 Offset: 0x1F15BD8 VA: 0x1F15BD8 Slot: 12
	public virtual IAsyncResult BeginInvoke(CharaGraphListMenu.ResultKind result, AsyncCallback callback, object object) { }

	// RVA: 0x1F15C64 Offset: 0x1F15C64 VA: 0x1F15C64 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class CharaGraphListMenu.RequestCallbackFunc : MulticastDelegate // TypeDefIndex: 10519
{
	// Methods

	// RVA: 0x1F13A08 Offset: 0x1F13A08 VA: 0x1F13A08
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1F14490 Offset: 0x1F14490 VA: 0x1F14490 Slot: 11
	public virtual void Invoke(bool isRequest) { }

	// RVA: 0x1F15C70 Offset: 0x1F15C70 VA: 0x1F15C70 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isRequest, AsyncCallback callback, object object) { }

	// RVA: 0x1F15D00 Offset: 0x1F15D00 VA: 0x1F15D00 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1450 Offset: 0xCB1450 VA: 0xCB1450
private sealed class CharaGraphListMenu.<OnSelectServant>c__AnonStorey0 // TypeDefIndex: 10520
{
	// Fields
	internal ServantListViewItem item; // 0x10
	internal CharaGraphListMenu $this; // 0x18

	// Methods

	// RVA: 0x1F151DC Offset: 0x1F151DC VA: 0x1F151DC
	public void .ctor() { }

	// RVA: 0x1F15A4C Offset: 0x1F15A4C VA: 0x1F15A4C
	internal void <>m__0(bool isDecide) { }

	// RVA: 0x1F15B98 Offset: 0x1F15B98 VA: 0x1F15B98
	internal void <>m__1() { }
}

// Namespace: 
public class ServantListRootComponent : SceneRootComponent // TypeDefIndex: 10521
{
	// Fields
	[SerializeField] // RVA: 0xCE1EC8 Offset: 0xCE1EC8 VA: 0xCE1EC8
	protected UISkinSprite backSkinSprite; // 0x38
	[SerializeField] // RVA: 0xCE1ED8 Offset: 0xCE1ED8 VA: 0xCE1ED8
	protected CharaGraphListMenu charaGraphListMenu; // 0x40
	[SerializeField] // RVA: 0xCE1EE8 Offset: 0xCE1EE8 VA: 0xCE1EE8
	protected TitleInfoControl titleInfo; // 0x48
	[SerializeField] // RVA: 0xCE1EF8 Offset: 0xCE1EF8 VA: 0xCE1EF8
	protected UISprite bgTxtSprite; // 0x50
	protected ServantListRootComponent.State state; // 0x58

	// Methods

	// RVA: 0x1C22BF0 Offset: 0x1C22BF0 VA: 0x1C22BF0
	public void .ctor() { }

	// RVA: 0x1C22BF8 Offset: 0x1C22BF8 VA: 0x1C22BF8 Slot: 4
	public override void beginInitialize() { }

	// RVA: 0x1C22C6C Offset: 0x1C22C6C VA: 0x1C22C6C Slot: 6
	public override void beginStartUp() { }

	// RVA: 0x1C22E68 Offset: 0x1C22E68 VA: 0x1C22E68
	protected void EndLoadCommonBg() { }

	// RVA: 0x1C22F34 Offset: 0x1C22F34 VA: 0x1C22F34
	protected void EndLoadOutGameIconAtlas() { }

	// RVA: 0x1C22F3C Offset: 0x1C22F3C VA: 0x1C22F3C Slot: 7
	public override void beginFinish() { }

	// RVA: 0x1C23000 Offset: 0x1C23000 VA: 0x1C23000
	public void Init() { }

	// RVA: 0x1C230B4 Offset: 0x1C230B4 VA: 0x1C230B4
	public void Quit() { }

	// RVA: 0x1C230E8 Offset: 0x1C230E8 VA: 0x1C230E8
	public void SelectServantList(CharaGraphListMenu.ResultKind result) { }

	// RVA: 0x1C231B0 Offset: 0x1C231B0 VA: 0x1C231B0
	public void ExitList() { }

	// RVA: 0x1C23240 Offset: 0x1C23240 VA: 0x1C23240
	protected void EndExitList(bool isRrquest) { }

	// RVA: 0x1C23244 Offset: 0x1C23244 VA: 0x1C23244
	public void OnClickBack() { }

	// RVA: 0x1C23300 Offset: 0x1C23300 VA: 0x1C23300
	protected void EndClickBackRequest(bool isRrquest) { }

	// RVA: 0x1C233B8 Offset: 0x1C233B8 VA: 0x1C233B8
	protected void EndServantQuestRequest(bool isRrquest) { }
}

// Namespace: 
protected enum ServantListRootComponent.State // TypeDefIndex: 10522
{
	// Fields
	public int value__; // 0x0
	public const ServantListRootComponent.State INIT = 0;
	public const ServantListRootComponent.State INIT_TOP = 1;
}

// Namespace: 
public class ServantListViewItem : ListViewItem // TypeDefIndex: 10523
{
	// Fields
	protected UserServantEntity userSvtEntity; // 0x70
	protected ServantEntity servantEntity; // 0x78
	protected ObscuredInt svtId; // 0x80
	protected UserCommandCodeEntity userCommandCodeEntity; // 0x90
	protected CommandCodeEntity commandCodeEntity; // 0x98
	protected ObscuredInt commandCodeId; // 0xA0
	private EventUpValSetupInfo setupInfo; // 0xB0
	private ListViewSort.BonusFilterKind bonusKind; // 0xB8
	private int bonusKindId; // 0xBC
	protected int classId; // 0xC0
	protected int rarity; // 0xC4
	protected ObscuredInt friendship; // 0xC8
	protected int friendshipMax; // 0xD8
	protected int partyIndex; // 0xDC
	protected bool isPartyEquip; // 0xE0
	protected bool isUse; // 0xE1
	protected bool isLock; // 0xE2
	protected bool isChoice; // 0xE3
	protected bool isLeave; // 0xE4
	protected bool isEventJoin; // 0xE5
	protected bool isPush; // 0xE6
	protected bool isEnabled; // 0xE7
	private bool isFriendShipSvtEq; // 0xE8
	private bool isChocolateSvtEquip; // 0xE9
	private bool isMaterialTdSvt; // 0xEA
	protected int priority; // 0xEC
	protected IconLabelInfo iconLabelInfo1; // 0xF0
	protected IconLabelInfo iconLabelInfo2; // 0xF8
	protected long amountSortValue; // 0x100
	protected bool isSwapLock; // 0x108
	protected bool isSwapChoice; // 0x109
	private int hpReinforceValue; // 0x10C
	private int atkReinforceValue; // 0x110
	private int nowMaxHpReinforceValue; // 0x114
	private int nowMaxAtkReinforceValue; // 0x118
	protected int[] equipCategoryIdList; // 0x120
	protected int[] commandCodeCategoryIdList; // 0x128
	private bool isNeedAdjustIconLabelScale; // 0x130

	// Properties
	public UserServantEntity UserServant { get; }
	public ServantEntity Servant { get; }
	public int SvtId { get; }
	public UserCommandCodeEntity UserCommandCode { get; }
	public CommandCodeEntity CommandCode { get; }
	public int CommandCodeId { get; }
	public string NameText { get; }
	public bool IsParty { get; }
	public bool IsUse { get; }
	public bool IsPartyEquip { get; }
	public bool IsLock { get; }
	public bool IsSwapLock { get; }
	public bool IsDispLock { get; }
	public bool IsChoice { get; }
	public bool IsSwapChoice { get; }
	public bool IsDispChoice { get; }
	public bool IsLeave { get; }
	public bool IsCanNotSelect { get; }
	public IconLabelInfo IconInfo1 { get; }
	public IconLabelInfo IconInfo2 { get; }
	public bool IsFriendShipSvtEq { get; }
	public bool IsChocolateSvtEquip { get; }
	public bool IsMaterialTdSvt { get; }
	public bool IsEventJoin { get; }
	public bool IsPush { get; set; }
	public bool IsEnabled { get; set; }
	public bool IsNeedAdjustIconLabelScale { get; }

	// Methods

	// RVA: 0x1C23428 Offset: 0x1C23428 VA: 0x1C23428
	public void .ctor(int index, UserServantEntity userSvtEntity, long[] partyUserServantList, long[] partyUserEquipList, EventUpValSetupInfo setupInfo) { }

	// RVA: 0x1C23BD4 Offset: 0x1C23BD4 VA: 0x1C23BD4
	public void .ctor(int index, UserCommandCodeEntity userCommandCodeEntity, long[] attachUserCommandCodeList) { }

	// RVA: 0x1C23F68 Offset: 0x1C23F68 VA: 0x1C23F68
	public void Modify(UserServantEntity userSvtEntity) { }

	// RVA: 0x1C24030 Offset: 0x1C24030 VA: 0x1C24030
	public void Modify(UserCommandCodeEntity userCommandCodeEntity) { }

	// RVA: 0x1C23F90 Offset: 0x1C23F90 VA: 0x1C23F90
	public void ModifyUserServantEntity(UserServantEntity userServantEntity) { }

	// RVA: 0x1C24058 Offset: 0x1C24058 VA: 0x1C24058
	public void ModifyUserCommandCodeEntity(UserCommandCodeEntity userCommandCodeEntity) { }

	// RVA: 0x1C23F98 Offset: 0x1C23F98 VA: 0x1C23F98
	public void ModifyLockItem() { }

	// RVA: 0x1C23FE4 Offset: 0x1C23FE4 VA: 0x1C23FE4
	public void ModifyChoiceItem() { }

	// RVA: 0x1C24060 Offset: 0x1C24060 VA: 0x1C24060 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1C24068 Offset: 0x1C24068 VA: 0x1C24068 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x1C24EE8 Offset: 0x1C24EE8 VA: 0x1C24EE8
	private bool IsMatchServantFilter(ListViewSort sort) { }

	// RVA: 0x1C25208 Offset: 0x1C25208 VA: 0x1C25208
	private bool IsMatchServantEquipFilter(ListViewSort sort) { }

	// RVA: 0x1C253C4 Offset: 0x1C253C4 VA: 0x1C253C4
	private bool IsMatchCommandCodeFilter(ListViewSort sort) { }

	// RVA: 0x1C25580 Offset: 0x1C25580 VA: 0x1C25580 Slot: 5
	public override bool IsMatchFilter(ListViewSort sort) { }

	// RVA: 0x1C24A88 Offset: 0x1C24A88 VA: 0x1C24A88
	private bool GetIsEventUpValShow(ListViewSort sort) { }

	// RVA: 0x1C25610 Offset: 0x1C25610 VA: 0x1C25610
	public bool SwapLock() { }

	// RVA: 0x1C2562C Offset: 0x1C2562C VA: 0x1C2562C
	public bool SwapChoice() { }

	// RVA: 0x1C23BCC Offset: 0x1C23BCC VA: 0x1C23BCC
	public UserServantEntity get_UserServant() { }

	// RVA: 0x1C25648 Offset: 0x1C25648 VA: 0x1C25648
	public ServantEntity get_Servant() { }

	// RVA: 0x1C25650 Offset: 0x1C25650 VA: 0x1C25650
	public int get_SvtId() { }

	// RVA: 0x1C256C0 Offset: 0x1C256C0 VA: 0x1C256C0
	public UserCommandCodeEntity get_UserCommandCode() { }

	// RVA: 0x1C24DBC Offset: 0x1C24DBC VA: 0x1C24DBC
	public CommandCodeEntity get_CommandCode() { }

	// RVA: 0x1C256C8 Offset: 0x1C256C8 VA: 0x1C256C8
	public int get_CommandCodeId() { }

	// RVA: 0x1C25738 Offset: 0x1C25738 VA: 0x1C25738
	public string get_NameText() { }

	// RVA: 0x1C257F4 Offset: 0x1C257F4 VA: 0x1C257F4
	public bool get_IsParty() { }

	// RVA: 0x1C25804 Offset: 0x1C25804 VA: 0x1C25804
	public bool get_IsUse() { }

	// RVA: 0x1C2580C Offset: 0x1C2580C VA: 0x1C2580C
	public bool get_IsPartyEquip() { }

	// RVA: 0x1C25814 Offset: 0x1C25814 VA: 0x1C25814
	public bool get_IsLock() { }

	// RVA: 0x1C2581C Offset: 0x1C2581C VA: 0x1C2581C
	public bool get_IsSwapLock() { }

	// RVA: 0x1C25824 Offset: 0x1C25824 VA: 0x1C25824
	public bool get_IsDispLock() { }

	// RVA: 0x1C25844 Offset: 0x1C25844 VA: 0x1C25844
	public bool get_IsChoice() { }

	// RVA: 0x1C2584C Offset: 0x1C2584C VA: 0x1C2584C
	public bool get_IsSwapChoice() { }

	// RVA: 0x1C24C78 Offset: 0x1C24C78 VA: 0x1C24C78
	public bool get_IsDispChoice() { }

	// RVA: 0x1C25854 Offset: 0x1C25854 VA: 0x1C25854
	public bool get_IsLeave() { }

	// RVA: 0x1C2585C Offset: 0x1C2585C VA: 0x1C2585C
	public bool get_IsCanNotSelect() { }

	// RVA: 0x1C25864 Offset: 0x1C25864 VA: 0x1C25864
	public IconLabelInfo get_IconInfo1() { }

	// RVA: 0x1C2586C Offset: 0x1C2586C VA: 0x1C2586C
	public IconLabelInfo get_IconInfo2() { }

	// RVA: 0x1C25874 Offset: 0x1C25874 VA: 0x1C25874
	public bool GetNpInfo(out TreasureDvcInfo tdInfo) { }

	// RVA: 0x1C2590C Offset: 0x1C2590C VA: 0x1C2590C
	public bool get_IsFriendShipSvtEq() { }

	// RVA: 0x1C25914 Offset: 0x1C25914 VA: 0x1C25914
	public bool get_IsChocolateSvtEquip() { }

	// RVA: 0x1C2591C Offset: 0x1C2591C VA: 0x1C2591C
	public bool get_IsMaterialTdSvt() { }

	// RVA: 0x1C25924 Offset: 0x1C25924 VA: 0x1C25924
	public bool get_IsEventJoin() { }

	// RVA: 0x1C2592C Offset: 0x1C2592C VA: 0x1C2592C
	public void set_IsPush(bool value) { }

	// RVA: 0x1C25938 Offset: 0x1C25938 VA: 0x1C25938
	public bool get_IsPush() { }

	// RVA: 0x1C25940 Offset: 0x1C25940 VA: 0x1C25940
	public void set_IsEnabled(bool value) { }

	// RVA: 0x1C2594C Offset: 0x1C2594C VA: 0x1C2594C
	public bool get_IsEnabled() { }

	// RVA: 0x1C25954 Offset: 0x1C25954 VA: 0x1C25954
	public bool get_IsNeedAdjustIconLabelScale() { }
}

// Namespace: 
public class ServantListViewItemDraw : MonoBehaviour // TypeDefIndex: 10524
{
	// Fields
	[SerializeField] // RVA: 0xCE1F08 Offset: 0xCE1F08 VA: 0xCE1F08
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xCE1F18 Offset: 0xCE1F18 VA: 0xCE1F18
	protected ServantFaceIconComponent servantFaceIcon; // 0x20
	[SerializeField] // RVA: 0xCE1F28 Offset: 0xCE1F28 VA: 0xCE1F28
	protected FlashingIconComponent partyIcon; // 0x28
	[SerializeField] // RVA: 0xCE1F38 Offset: 0xCE1F38 VA: 0xCE1F38
	protected UISprite useSprite; // 0x30
	[SerializeField] // RVA: 0xCE1F48 Offset: 0xCE1F48 VA: 0xCE1F48
	protected UISprite lockSprite; // 0x38
	[SerializeField] // RVA: 0xCE1F58 Offset: 0xCE1F58 VA: 0xCE1F58
	protected UISprite choiceSprite; // 0x40
	[SerializeField] // RVA: 0xCE1F68 Offset: 0xCE1F68 VA: 0xCE1F68
	protected UISprite maskSprite; // 0x48
	[SerializeField] // RVA: 0xCE1F78 Offset: 0xCE1F78 VA: 0xCE1F78
	protected UILabel warningLabel; // 0x50
	[SerializeField] // RVA: 0xCE1F88 Offset: 0xCE1F88 VA: 0xCE1F88
	private UISprite friendShipSprite; // 0x58
	[SerializeField] // RVA: 0xCE1F98 Offset: 0xCE1F98 VA: 0xCE1F98
	private UISprite chocolateSprite; // 0x60
	[SerializeField] // RVA: 0xCE1FA8 Offset: 0xCE1FA8 VA: 0xCE1FA8
	protected UISprite pushSprite; // 0x68
	[SerializeField] // RVA: 0xCE1FB8 Offset: 0xCE1FB8 VA: 0xCE1FB8
	private UISprite materialTdSprite; // 0x70

	// Methods

	// RVA: 0x1C2595C Offset: 0x1C2595C VA: 0x1C2595C
	public void .ctor() { }

	// RVA: 0x1C25964 Offset: 0x1C25964 VA: 0x1C25964
	public void SetItem(ServantListViewItem item, ServantListViewItemDraw.DispMode mode) { }

	// RVA: 0x1C26070 Offset: 0x1C26070 VA: 0x1C26070
	public void SetInput(ServantListViewItem item, bool isInput) { }
}

// Namespace: 
public enum ServantListViewItemDraw.DispMode // TypeDefIndex: 10525
{
	// Fields
	public int value__; // 0x0
	public const ServantListViewItemDraw.DispMode INVISIBLE = 0;
	public const ServantListViewItemDraw.DispMode INVALID = 1;
	public const ServantListViewItemDraw.DispMode VALID = 2;
	public const ServantListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class ServantListViewManager : ListViewManager // TypeDefIndex: 10526
{
	// Fields
	[SerializeField] // RVA: 0xCE1FC8 Offset: 0xCE1FC8 VA: 0xCE1FC8
	protected UILabel infoTitleLabel; // 0x138
	[SerializeField] // RVA: 0xCE1FD8 Offset: 0xCE1FD8 VA: 0xCE1FD8
	protected UILabel infoDataLabel; // 0x140
	[SerializeField] // RVA: 0xCE1FE8 Offset: 0xCE1FE8 VA: 0xCE1FE8
	protected UICommonButton filterButton; // 0x148
	[SerializeField] // RVA: 0xCE1FF8 Offset: 0xCE1FF8 VA: 0xCE1FF8
	protected UISprite filterSprite; // 0x150
	[SerializeField] // RVA: 0xCE2008 Offset: 0xCE2008 VA: 0xCE2008
	private UICommonButton bonusFilterKindButton; // 0x158
	[SerializeField] // RVA: 0xCE2018 Offset: 0xCE2018 VA: 0xCE2018
	private UILabel bonusFilterKindLabel; // 0x160
	[SerializeField] // RVA: 0xCE2028 Offset: 0xCE2028 VA: 0xCE2028
	protected UISprite sortExplanationSprite; // 0x168
	[SerializeField] // RVA: 0xCE2038 Offset: 0xCE2038 VA: 0xCE2038
	protected ListViewItemSeed normalSizeSeed; // 0x170
	[SerializeField] // RVA: 0xCE2048 Offset: 0xCE2048 VA: 0xCE2048
	protected ListViewItemSeed smallSizeSeed; // 0x178
	[SerializeField] // RVA: 0xCE2058 Offset: 0xCE2058 VA: 0xCE2058
	protected ListViewItemSeed extremelySmallSizeSeed; // 0x180
	protected const string SORT_SAVE_KEY = "Servant";
	protected static ListViewSort servantSortInfo; // 0x0
	protected static ListViewSort servantEquipSortInfo; // 0x8
	protected static ListViewSort commandCodeSortInfo; // 0x10
	private int[] bonusEventIds; // 0x188
	private int[] servantFilterIds; // 0x190
	protected ServantListViewManager.Kind kind; // 0x198
	protected ListViewSort.ScaleType scaleType; // 0x19C
	protected ServantListViewManager.InitMode initMode; // 0x1A0
	[CompilerGeneratedAttribute] // RVA: 0xCE2068 Offset: 0xCE2068 VA: 0xCE2068
	[DebuggerBrowsableAttribute] // RVA: 0xCE2068 Offset: 0xCE2068 VA: 0xCE2068
	private ServantListViewManager.CallbackFunc callbackFunc; // 0x1A8
	[CompilerGeneratedAttribute] // RVA: 0xCE20A4 Offset: 0xCE20A4 VA: 0xCE20A4
	[DebuggerBrowsableAttribute] // RVA: 0xCE20A4 Offset: 0xCE20A4 VA: 0xCE20A4
	private Action callbackFunc2; // 0x1B0
	protected int callbackCount; // 0x1B8

	// Properties
	public List<ServantListViewObject> ObjectList { get; }
	public List<ServantListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x1C26678 Offset: 0x1C26678 VA: 0x1C26678
	public void .ctor() { }

	// RVA: 0x1C26680 Offset: 0x1C26680 VA: 0x1C26680
	protected void add_callbackFunc(ServantListViewManager.CallbackFunc value) { }

	// RVA: 0x1C26770 Offset: 0x1C26770 VA: 0x1C26770
	protected void remove_callbackFunc(ServantListViewManager.CallbackFunc value) { }

	// RVA: 0x1C26860 Offset: 0x1C26860 VA: 0x1C26860
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x1C26950 Offset: 0x1C26950 VA: 0x1C26950
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x1C26A40 Offset: 0x1C26A40 VA: 0x1C26A40
	public static void DeleteContinueData() { }

	// RVA: 0x1C26B04 Offset: 0x1C26B04 VA: 0x1C26B04
	public static void InitLoad() { }

	// RVA: 0x1C26BC8 Offset: 0x1C26BC8 VA: 0x1C26BC8
	public List<ServantListViewObject> get_ObjectList() { }

	// RVA: 0x1C26D94 Offset: 0x1C26D94 VA: 0x1C26D94
	public List<ServantListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1C26FF4 Offset: 0x1C26FF4 VA: 0x1C26FF4
	public void CreateList(ServantListViewManager.Kind kind, EventUpValSetupInfo setupInfo) { }

	// RVA: 0x1C27C60 Offset: 0x1C27C60 VA: 0x1C27C60
	public void ModifyList(bool isIconSizeChange = False) { }

	// RVA: 0x1C282EC Offset: 0x1C282EC VA: 0x1C282EC
	public void DestroyList() { }

	// RVA: 0x1C28474 Offset: 0x1C28474 VA: 0x1C28474
	public ServantListViewItem GetItem(int index) { }

	// RVA: 0x1C2851C Offset: 0x1C2851C VA: 0x1C2851C
	public bool GetSwapLockList(out long[] lockList, out long[] unlockList) { }

	// RVA: 0x1C288CC Offset: 0x1C288CC VA: 0x1C288CC
	public bool GetSwapChoiceList(out long[] choiceList, out long[] unchoiceList) { }

	// RVA: 0x1C28C7C Offset: 0x1C28C7C VA: 0x1C28C7C Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1C28D38 Offset: 0x1C28D38 VA: 0x1C28D38
	public void SetMode(ServantListViewManager.InitMode mode, ServantListViewManager.CallbackFunc callback) { }

	// RVA: 0x1C28DC0 Offset: 0x1C28DC0 VA: 0x1C28DC0
	public void SetMode(ServantListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1C28D40 Offset: 0x1C28D40 VA: 0x1C28D40
	public void SetMode(ServantListViewManager.InitMode mode) { }

	// RVA: 0x1C28FC0 Offset: 0x1C28FC0 VA: 0x1C28FC0
	protected void RequestListObject(ServantListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1C28DC8 Offset: 0x1C28DC8 VA: 0x1C28DC8
	protected void RequestListObject(ServantListViewObject.InitMode mode) { }

	// RVA: 0x1C291CC Offset: 0x1C291CC VA: 0x1C291CC
	protected void OnMoveEnd() { }

	// RVA: 0x1C292D8 Offset: 0x1C292D8 VA: 0x1C292D8
	public void JumpItemUserId(long userSvtId) { }

	// RVA: 0x1C29460 Offset: 0x1C29460 VA: 0x1C29460
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x1C29464 Offset: 0x1C29464 VA: 0x1C29464
	protected void OnClickSelectListView(ListViewObject obj) { }

	// RVA: 0x1C294C0 Offset: 0x1C294C0 VA: 0x1C294C0
	protected void OnLongPushListView(ListViewObject obj) { }

	// RVA: 0x1C2951C Offset: 0x1C2951C VA: 0x1C2951C
	public void OnClickFilterKind() { }

	// RVA: 0x1C296B4 Offset: 0x1C296B4 VA: 0x1C296B4
	public void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x1C29790 Offset: 0x1C29790 VA: 0x1C29790
	protected void EndCloseSelectFilterKind() { }

	// RVA: 0x1C29794 Offset: 0x1C29794 VA: 0x1C29794
	public void OnClickSortKind() { }

	// RVA: 0x1C298B8 Offset: 0x1C298B8 VA: 0x1C298B8
	protected void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x1C2997C Offset: 0x1C2997C VA: 0x1C2997C
	protected void EndCloseSelectSortKind() { }

	// RVA: 0x1C29980 Offset: 0x1C29980 VA: 0x1C29980
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x1C29A70 Offset: 0x1C29A70 VA: 0x1C29A70 Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x1C29D9C Offset: 0x1C29D9C VA: 0x1C29D9C
	public void OnClickBonusFilterKind() { }

	// RVA: 0x1C27948 Offset: 0x1C27948 VA: 0x1C27948
	private void SetBonusFilterIds(EventUpValSetupInfo setupInfo) { }

	// RVA: 0x1C27A44 Offset: 0x1C27A44 VA: 0x1C27A44
	private void SetBonusFilterKind() { }

	// RVA: 0x1C27ACC Offset: 0x1C27ACC VA: 0x1C27ACC
	private void SetBonusFilterButton() { }

	// RVA: 0x1C24DC4 Offset: 0x1C24DC4 VA: 0x1C24DC4
	public long GetAmountSortValue(int svtId) { }

	// RVA: 0x1C24C98 Offset: 0x1C24C98 VA: 0x1C24C98
	public long GetCommandCodeAmountSortValue(int commandCodeId) { }

	// RVA: 0x1C29E88 Offset: 0x1C29E88 VA: 0x1C29E88
	public void filterButtonState(UICommonButtonColor.State state, bool animation) { }

	// RVA: 0x1C27BCC Offset: 0x1C27BCC VA: 0x1C27BCC
	private void SetFilterButtonImage() { }

	// RVA: 0x1C29ED8 Offset: 0x1C29ED8 VA: 0x1C29ED8
	public void ChangeIconScale() { }

	// RVA: 0x1C29FE8 Offset: 0x1C29FE8 VA: 0x1C29FE8
	public string GetScaleButtonSpriteName() { }

	// RVA: 0x1C2A020 Offset: 0x1C2A020 VA: 0x1C2A020
	public void UpdateItemDisplayState(bool isPushMode) { }

	// RVA: 0x1C2A37C Offset: 0x1C2A37C VA: 0x1C2A37C
	private static void .cctor() { }
}

// Namespace: 
public enum ServantListViewManager.Kind // TypeDefIndex: 10527
{
	// Fields
	public int value__; // 0x0
	public const ServantListViewManager.Kind SERVANT = 0;
	public const ServantListViewManager.Kind SERVANT_EQUIP = 1;
	public const ServantListViewManager.Kind SERVANT_COSTUME = 2;
	public const ServantListViewManager.Kind COMMAND_CODE = 3;
}

// Namespace: 
public enum ServantListViewManager.InitMode // TypeDefIndex: 10528
{
	// Fields
	public int value__; // 0x0
	public const ServantListViewManager.InitMode NONE = 0;
	public const ServantListViewManager.InitMode VALID = 1;
	public const ServantListViewManager.InitMode INPUT = 2;
	public const ServantListViewManager.InitMode MODIFY = 3;
}

// Namespace: 
public enum ServantListViewManager.ResultKind // TypeDefIndex: 10529
{
	// Fields
	public int value__; // 0x0
	public const ServantListViewManager.ResultKind CANCEL = 0;
	public const ServantListViewManager.ResultKind DECIDE = 1;
	public const ServantListViewManager.ResultKind SHOW_STATUS = 2;
}

// Namespace: 
public sealed class ServantListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 10530
{
	// Methods

	// RVA: 0x1ECB0E8 Offset: 0x1ECB0E8 VA: 0x1ECB0E8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1ECB0F8 Offset: 0x1ECB0F8 VA: 0x1ECB0F8 Slot: 11
	public virtual void Invoke(ServantListViewManager.ResultKind kind, int result) { }

	// RVA: 0x1ECB33C Offset: 0x1ECB33C VA: 0x1ECB33C Slot: 12
	public virtual IAsyncResult BeginInvoke(ServantListViewManager.ResultKind kind, int result, AsyncCallback callback, object object) { }

	// RVA: 0x1ECB3E4 Offset: 0x1ECB3E4 VA: 0x1ECB3E4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantListViewObject : ListViewObject // TypeDefIndex: 10531
{
	// Fields
	protected ServantListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCE20E0 Offset: 0xCE20E0 VA: 0xCE20E0
	[DebuggerBrowsableAttribute] // RVA: 0xCE20E0 Offset: 0xCE20E0 VA: 0xCE20E0
	private Action callbackFunc; // 0x70
	protected ServantListViewItemDraw itemDraw; // 0x78
	protected ServantListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x1ECB3F0 Offset: 0x1ECB3F0 VA: 0x1ECB3F0
	public void .ctor() { }

	// RVA: 0x1ECB458 Offset: 0x1ECB458 VA: 0x1ECB458
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1ECB544 Offset: 0x1ECB544 VA: 0x1ECB544
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1ECB630 Offset: 0x1ECB630 VA: 0x1ECB630
	protected void Awake() { }

	// RVA: 0x1ECB6A4 Offset: 0x1ECB6A4 VA: 0x1ECB6A4
	private void OnDestroy() { }

	// RVA: 0x1ECB750 Offset: 0x1ECB750 VA: 0x1ECB750
	public ServantListViewItem GetItem() { }

	// RVA: 0x1ECB7D4 Offset: 0x1ECB7D4 VA: 0x1ECB7D4 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1ECB804 Offset: 0x1ECB804 VA: 0x1ECB804 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x1ECB7FC Offset: 0x1ECB7FC VA: 0x1ECB7FC
	protected void InitItem() { }

	// RVA: 0x1ECB82C Offset: 0x1ECB82C VA: 0x1ECB82C Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x1ECB934 Offset: 0x1ECB934 VA: 0x1ECB934 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1ECBA3C Offset: 0x1ECBA3C VA: 0x1ECBA3C
	public void Init(ServantListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1ECBD44 Offset: 0x1ECBD44 VA: 0x1ECBD44
	public void Init(ServantListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x1ECBDC8 Offset: 0x1ECBDC8 VA: 0x1ECBDC8
	public void Init(ServantListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x1ECB9BC Offset: 0x1ECB9BC VA: 0x1ECB9BC
	public void Init(ServantListViewObject.InitMode initMode) { }

	// RVA: 0x1ECBC30 Offset: 0x1ECBC30 VA: 0x1ECBC30
	protected void SetupDisp() { }

	// RVA: 0x1ECBE4C Offset: 0x1ECBE4C VA: 0x1ECBE4C
	public void OnClickSelect() { }

	// RVA: 0x1ECBF48 Offset: 0x1ECBF48 VA: 0x1ECBF48
	public void OnLongPush() { }
}

// Namespace: 
public enum ServantListViewObject.InitMode // TypeDefIndex: 10532
{
	// Fields
	public int value__; // 0x0
	public const ServantListViewObject.InitMode INVISIBLE = 0;
	public const ServantListViewObject.InitMode INVALID = 1;
	public const ServantListViewObject.InitMode VALID = 2;
	public const ServantListViewObject.InitMode INPUT = 3;
	public const ServantListViewObject.InitMode MODIFY = 4;
}

// Namespace: 
protected enum ServantListViewObject.State // TypeDefIndex: 10533
{
	// Fields
	public int value__; // 0x0
	public const ServantListViewObject.State INIT = 0;
	public const ServantListViewObject.State IDLE = 1;
	public const ServantListViewObject.State MOVE = 2;
	public const ServantListViewObject.State INPUT = 3;
}

// Namespace: 
public class BuyStorageConfirmDialogComponent : BaseDialog // TypeDefIndex: 10534
{
	// Fields
	[SerializeField] // RVA: 0xCE211C Offset: 0xCE211C VA: 0xCE211C
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xCE212C Offset: 0xCE212C VA: 0xCE212C
	private UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xCE213C Offset: 0xCE213C VA: 0xCE213C
	private UILabel nowNumTextLabel; // 0x68
	[SerializeField] // RVA: 0xCE214C Offset: 0xCE214C VA: 0xCE214C
	private UILabel afterNumTextLabel; // 0x70
	[SerializeField] // RVA: 0xCE215C Offset: 0xCE215C VA: 0xCE215C
	private UILabel nowNumLabel; // 0x78
	[SerializeField] // RVA: 0xCE216C Offset: 0xCE216C VA: 0xCE216C
	private UILabel afterNumLabel; // 0x80
	[SerializeField] // RVA: 0xCE217C Offset: 0xCE217C VA: 0xCE217C
	private UILabel resultAfterNumLabel; // 0x88
	[SerializeField] // RVA: 0xCE218C Offset: 0xCE218C VA: 0xCE218C
	private UILabel resultAfterNumTextLabel; // 0x90
	[SerializeField] // RVA: 0xCE219C Offset: 0xCE219C VA: 0xCE219C
	private UILabel decideBtnLabel; // 0x98
	[SerializeField] // RVA: 0xCE21AC Offset: 0xCE21AC VA: 0xCE21AC
	private UILabel cancelBtnLabel; // 0xA0
	[SerializeField] // RVA: 0xCE21BC Offset: 0xCE21BC VA: 0xCE21BC
	private UILabel closeBtnLabel; // 0xA8
	[SerializeField] // RVA: 0xCE21CC Offset: 0xCE21CC VA: 0xCE21CC
	private UISprite itemImage; // 0xB0
	[SerializeField] // RVA: 0xCE21DC Offset: 0xCE21DC VA: 0xCE21DC
	private UILabel itemNum; // 0xB8
	[SerializeField] // RVA: 0xCE21EC Offset: 0xCE21EC VA: 0xCE21EC
	private UILabel notificationMessage; // 0xC0
	[SerializeField] // RVA: 0xCE21FC Offset: 0xCE21FC VA: 0xCE21FC
	private GameObject confirmInfo; // 0xC8
	[SerializeField] // RVA: 0xCE220C Offset: 0xCE220C VA: 0xCE220C
	private GameObject resultInfo; // 0xD0
	[SerializeField] // RVA: 0xCE221C Offset: 0xCE221C VA: 0xCE221C
	private GameObject notification; // 0xD8
	private BuyStorageConfirmDialogComponent.State state; // 0xE0
	private Action<int> onMenuSelect; // 0xE8
	private Action onClose; // 0xF0
	private const int BUY_CANCEL = 0;
	private BuyStorageConfirmDialogComponent.Kind kind; // 0xF8
	private int buyCount; // 0xFC
	private SeManager.SystemSeKind decideSe; // 0x100

	// Methods

	// RVA: 0x191E8A4 Offset: 0x191E8A4 VA: 0x191E8A4
	public void .ctor() { }

	// RVA: 0x191E90C Offset: 0x191E90C VA: 0x191E90C
	public void Init() { }

	// RVA: 0x191EC24 Offset: 0x191EC24 VA: 0x191EC24
	public void Open(BuyStorageConfirmDialogComponent.Kind kind, ShopBuyItemListViewItem item, int buyCount, Action<int> onMenuSelect) { }

	// RVA: 0x191EE00 Offset: 0x191EE00 VA: 0x191EE00
	public void ResultOpenDialog(BuyStorageConfirmDialogComponent.Kind kind, ShopBuyItemListViewItem item, Action<int> onMenuSelect) { }

	// RVA: 0x191EE78 Offset: 0x191EE78 VA: 0x191EE78
	public void NotificationDialogOpen(BuyStorageConfirmDialogComponent.Kind kind, BuyStorageConfirmDialogComponent.NotificationType notificationType, ShopBuyItemListViewItem item, Action<int> onMenuSelect) { }

	// RVA: 0x191ECA0 Offset: 0x191ECA0 VA: 0x191ECA0
	private void Open(BuyStorageConfirmDialogComponent.Kind kind, BuyStorageConfirmDialogComponent.Type type, BuyStorageConfirmDialogComponent.NotificationType notificationType, ShopEntity shopEntity, Action<int> onMenuSelect) { }

	// RVA: 0x191EF00 Offset: 0x191EF00 VA: 0x191EF00
	private void SetObjectsOnInit(BuyStorageConfirmDialogComponent.Kind kind, BuyStorageConfirmDialogComponent.Type type, Action<int> onMenuSelect) { }

	// RVA: 0x191FA20 Offset: 0x191FA20 VA: 0x191FA20
	private string GetCurrencyItemName(ShopEntity shopEntity) { }

	// RVA: 0x191F048 Offset: 0x191F048 VA: 0x191F048
	private int GetCurrencyImageId(ShopEntity shopEntity) { }

	// RVA: 0x191F180 Offset: 0x191F180 VA: 0x191F180
	private string GetItemNumText(ShopEntity shopEntity, UserGameEntity userGameEntity) { }

	// RVA: 0x191F37C Offset: 0x191F37C VA: 0x191F37C
	private void SetMessageLabels(BuyStorageConfirmDialogComponent.Kind kind, BuyStorageConfirmDialogComponent.Type type, BuyStorageConfirmDialogComponent.NotificationType notificationType, ShopEntity shopEntity, UserGameEntity userGameEntity) { }

	// RVA: 0x191FC24 Offset: 0x191FC24 VA: 0x191FC24
	private void SetStorageNum(BuyStorageConfirmDialogComponent.Kind kind, ShopEntity shopEntity, UserGameEntity userGameEntity, out int now, out int max) { }

	// RVA: 0x191FD70 Offset: 0x191FD70 VA: 0x191FD70
	private void EndOpen() { }

	// RVA: 0x191FD7C Offset: 0x191FD7C VA: 0x191FD7C
	public void Close() { }

	// RVA: 0x191FD84 Offset: 0x191FD84 VA: 0x191FD84
	public void Close(Action callback) { }

	// RVA: 0x191FE14 Offset: 0x191FE14 VA: 0x191FE14
	private void EndClose() { }

	// RVA: 0x191FE6C Offset: 0x191FE6C VA: 0x191FE6C
	public void OnClickDecide() { }

	// RVA: 0x191FF7C Offset: 0x191FF7C VA: 0x191FF7C
	public void OnClickCancel() { }

	// RVA: 0x191FF04 Offset: 0x191FF04 VA: 0x191FF04
	private void CallOnMenuSelect(int buyCount) { }

	// RVA: 0x191FE50 Offset: 0x191FE50 VA: 0x191FE50
	private void CallOnClose() { }

	// RVA: 0x1920010 Offset: 0x1920010 VA: 0x1920010
	public static BuyStorageConfirmDialogComponent.Kind GetKindByShopState(ShopRootConstants.State state) { }

	// RVA: 0x192002C Offset: 0x192002C VA: 0x192002C
	public void OnEnable() { }
}

// Namespace: 
public enum BuyStorageConfirmDialogComponent.Kind // TypeDefIndex: 10535
{
	// Fields
	public int value__; // 0x0
	public const BuyStorageConfirmDialogComponent.Kind SERVANT = 0;
	public const BuyStorageConfirmDialogComponent.Kind SERVANT_EQUIP = 1;
}

// Namespace: 
private enum BuyStorageConfirmDialogComponent.State // TypeDefIndex: 10536
{
	// Fields
	public int value__; // 0x0
	public const BuyStorageConfirmDialogComponent.State INIT = 0;
	public const BuyStorageConfirmDialogComponent.State OPEN = 1;
	public const BuyStorageConfirmDialogComponent.State INPUT = 2;
	public const BuyStorageConfirmDialogComponent.State SELECTED = 3;
	public const BuyStorageConfirmDialogComponent.State CLOSE = 4;
}

// Namespace: 
private enum BuyStorageConfirmDialogComponent.Type // TypeDefIndex: 10537
{
	// Fields
	public int value__; // 0x0
	public const BuyStorageConfirmDialogComponent.Type CONFIRM = 0;
	public const BuyStorageConfirmDialogComponent.Type RESULT = 1;
	public const BuyStorageConfirmDialogComponent.Type NOTIFICATION = 2;
}

// Namespace: 
public enum BuyStorageConfirmDialogComponent.NotificationType // TypeDefIndex: 10538
{
	// Fields
	public int value__; // 0x0
	public const BuyStorageConfirmDialogComponent.NotificationType NONE = 0;
	public const BuyStorageConfirmDialogComponent.NotificationType SOLD_OUT = 1;
	public const BuyStorageConfirmDialogComponent.NotificationType NOT_ENOUGH = 2;
}

// Namespace: 
public static class EventItemWindowMaker // TypeDefIndex: 10539
{
	// Fields
	private static readonly int LIMIT_OVER_WINDOW_BASE_HEIGHT; // 0x0
	private static readonly int NORMAL_WINDOW_BASE_HEIGHT_SHOP; // 0x4
	private static readonly int NORMAL_WINDOW_BASE_HEIGHT_EVENT; // 0x8
	private static readonly int MIZUGI_WINDOW_ADD_HEIGHT; // 0xC
	private static readonly int LIMIT_OVER_WINDOW_ADD_HEIGHT; // 0x10
	private static readonly int LIMIT_OVER_WINDOW_REDUCE_HEIGHT; // 0x14
	private static readonly int X_EVENT_ITEM_PANEL_POSITION; // 0x18
	private static readonly int Y_EVENT_ITEM_PANEL_POSITION; // 0x1C
