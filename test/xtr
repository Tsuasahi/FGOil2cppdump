
	// RVA: 0x16CDE1C Offset: 0x16CDE1C VA: 0x16CDE1C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x16CDE24 Offset: 0x16CDE24 VA: 0x16CDE24 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x16CECA4 Offset: 0x16CECA4 VA: 0x16CECA4
	private bool IsMatchServantFilter(ListViewSort sort) { }

	// RVA: 0x16CEFC4 Offset: 0x16CEFC4 VA: 0x16CEFC4
	private bool IsMatchServantEquipFilter(ListViewSort sort) { }

	// RVA: 0x16CF180 Offset: 0x16CF180 VA: 0x16CF180
	private bool IsMatchCommandCodeFilter(ListViewSort sort) { }

	// RVA: 0x16CF33C Offset: 0x16CF33C VA: 0x16CF33C Slot: 5
	public override bool IsMatchFilter(ListViewSort sort) { }

	// RVA: 0x16CE844 Offset: 0x16CE844 VA: 0x16CE844
	private bool GetIsEventUpValShow(ListViewSort sort) { }

	// RVA: 0x16CF3CC Offset: 0x16CF3CC VA: 0x16CF3CC
	public bool SwapLock() { }

	// RVA: 0x16CF3E8 Offset: 0x16CF3E8 VA: 0x16CF3E8
	public bool SwapChoice() { }

	// RVA: 0x16CD988 Offset: 0x16CD988 VA: 0x16CD988
	public UserServantEntity get_UserServant() { }

	// RVA: 0x16CF404 Offset: 0x16CF404 VA: 0x16CF404
	public ServantEntity get_Servant() { }

	// RVA: 0x16CF40C Offset: 0x16CF40C VA: 0x16CF40C
	public int get_SvtId() { }

	// RVA: 0x16CF47C Offset: 0x16CF47C VA: 0x16CF47C
	public UserCommandCodeEntity get_UserCommandCode() { }

	// RVA: 0x16CEB78 Offset: 0x16CEB78 VA: 0x16CEB78
	public CommandCodeEntity get_CommandCode() { }

	// RVA: 0x16CF484 Offset: 0x16CF484 VA: 0x16CF484
	public int get_CommandCodeId() { }

	// RVA: 0x16CF4F4 Offset: 0x16CF4F4 VA: 0x16CF4F4
	public string get_NameText() { }

	// RVA: 0x16CF5B0 Offset: 0x16CF5B0 VA: 0x16CF5B0
	public bool get_IsParty() { }

	// RVA: 0x16CF5C0 Offset: 0x16CF5C0 VA: 0x16CF5C0
	public bool get_IsUse() { }

	// RVA: 0x16CF5C8 Offset: 0x16CF5C8 VA: 0x16CF5C8
	public bool get_IsPartyEquip() { }

	// RVA: 0x16CF5D0 Offset: 0x16CF5D0 VA: 0x16CF5D0
	public bool get_IsLock() { }

	// RVA: 0x16CF5D8 Offset: 0x16CF5D8 VA: 0x16CF5D8
	public bool get_IsSwapLock() { }

	// RVA: 0x16CF5E0 Offset: 0x16CF5E0 VA: 0x16CF5E0
	public bool get_IsDispLock() { }

	// RVA: 0x16CF600 Offset: 0x16CF600 VA: 0x16CF600
	public bool get_IsChoice() { }

	// RVA: 0x16CF608 Offset: 0x16CF608 VA: 0x16CF608
	public bool get_IsSwapChoice() { }

	// RVA: 0x16CEA34 Offset: 0x16CEA34 VA: 0x16CEA34
	public bool get_IsDispChoice() { }

	// RVA: 0x16CF610 Offset: 0x16CF610 VA: 0x16CF610
	public bool get_IsLeave() { }

	// RVA: 0x16CF618 Offset: 0x16CF618 VA: 0x16CF618
	public bool get_IsCanNotSelect() { }

	// RVA: 0x16CF620 Offset: 0x16CF620 VA: 0x16CF620
	public IconLabelInfo get_IconInfo1() { }

	// RVA: 0x16CF628 Offset: 0x16CF628 VA: 0x16CF628
	public IconLabelInfo get_IconInfo2() { }

	// RVA: 0x16CF630 Offset: 0x16CF630 VA: 0x16CF630
	public bool GetNpInfo(out TreasureDvcInfo tdInfo) { }

	// RVA: 0x16CF6C8 Offset: 0x16CF6C8 VA: 0x16CF6C8
	public bool get_IsFriendShipSvtEq() { }

	// RVA: 0x16CF6D0 Offset: 0x16CF6D0 VA: 0x16CF6D0
	public bool get_IsChocolateSvtEquip() { }

	// RVA: 0x16CF6D8 Offset: 0x16CF6D8 VA: 0x16CF6D8
	public bool get_IsMaterialTdSvt() { }

	// RVA: 0x16CF6E0 Offset: 0x16CF6E0 VA: 0x16CF6E0
	public bool get_IsEventJoin() { }

	// RVA: 0x16CF6E8 Offset: 0x16CF6E8 VA: 0x16CF6E8
	public void set_IsPush(bool value) { }

	// RVA: 0x16CF6F4 Offset: 0x16CF6F4 VA: 0x16CF6F4
	public bool get_IsPush() { }

	// RVA: 0x16CF6FC Offset: 0x16CF6FC VA: 0x16CF6FC
	public void set_IsEnabled(bool value) { }

	// RVA: 0x16CF708 Offset: 0x16CF708 VA: 0x16CF708
	public bool get_IsEnabled() { }

	// RVA: 0x16CF710 Offset: 0x16CF710 VA: 0x16CF710
	public bool get_IsNeedAdjustIconLabelScale() { }
}

// Namespace: 
public class ServantListViewItemDraw : MonoBehaviour // TypeDefIndex: 10557
{
	// Fields
	[SerializeField] // RVA: 0xC757B8 Offset: 0xC757B8 VA: 0xC757B8
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xC757C8 Offset: 0xC757C8 VA: 0xC757C8
	protected ServantFaceIconComponent servantFaceIcon; // 0x20
	[SerializeField] // RVA: 0xC757D8 Offset: 0xC757D8 VA: 0xC757D8
	protected FlashingIconComponent partyIcon; // 0x28
	[SerializeField] // RVA: 0xC757E8 Offset: 0xC757E8 VA: 0xC757E8
	protected UISprite useSprite; // 0x30
	[SerializeField] // RVA: 0xC757F8 Offset: 0xC757F8 VA: 0xC757F8
	protected UISprite lockSprite; // 0x38
	[SerializeField] // RVA: 0xC75808 Offset: 0xC75808 VA: 0xC75808
	protected UISprite choiceSprite; // 0x40
	[SerializeField] // RVA: 0xC75818 Offset: 0xC75818 VA: 0xC75818
	protected UISprite maskSprite; // 0x48
	[SerializeField] // RVA: 0xC75828 Offset: 0xC75828 VA: 0xC75828
	protected UILabel warningLabel; // 0x50
	[SerializeField] // RVA: 0xC75838 Offset: 0xC75838 VA: 0xC75838
	private UISprite friendShipSprite; // 0x58
	[SerializeField] // RVA: 0xC75848 Offset: 0xC75848 VA: 0xC75848
	private UISprite chocolateSprite; // 0x60
	[SerializeField] // RVA: 0xC75858 Offset: 0xC75858 VA: 0xC75858
	protected UISprite pushSprite; // 0x68
	[SerializeField] // RVA: 0xC75868 Offset: 0xC75868 VA: 0xC75868
	private UISprite materialTdSprite; // 0x70

	// Methods

	// RVA: 0x16CF718 Offset: 0x16CF718 VA: 0x16CF718
	public void .ctor() { }

	// RVA: 0x16CF720 Offset: 0x16CF720 VA: 0x16CF720
	public void SetItem(ServantListViewItem item, ServantListViewItemDraw.DispMode mode) { }

	// RVA: 0x16CFE2C Offset: 0x16CFE2C VA: 0x16CFE2C
	public void SetInput(ServantListViewItem item, bool isInput) { }
}

// Namespace: 
public enum ServantListViewItemDraw.DispMode // TypeDefIndex: 10558
{
	// Fields
	public int value__; // 0x0
	public const ServantListViewItemDraw.DispMode INVISIBLE = 0;
	public const ServantListViewItemDraw.DispMode INVALID = 1;
	public const ServantListViewItemDraw.DispMode VALID = 2;
	public const ServantListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class ServantListViewManager : ListViewManager // TypeDefIndex: 10559
{
	// Fields
	[SerializeField] // RVA: 0xC75878 Offset: 0xC75878 VA: 0xC75878
	protected UILabel infoTitleLabel; // 0x138
	[SerializeField] // RVA: 0xC75888 Offset: 0xC75888 VA: 0xC75888
	protected UILabel infoDataLabel; // 0x140
	[SerializeField] // RVA: 0xC75898 Offset: 0xC75898 VA: 0xC75898
	protected UICommonButton filterButton; // 0x148
	[SerializeField] // RVA: 0xC758A8 Offset: 0xC758A8 VA: 0xC758A8
	protected UISprite filterSprite; // 0x150
	[SerializeField] // RVA: 0xC758B8 Offset: 0xC758B8 VA: 0xC758B8
	private UICommonButton bonusFilterKindButton; // 0x158
	[SerializeField] // RVA: 0xC758C8 Offset: 0xC758C8 VA: 0xC758C8
	private UILabel bonusFilterKindLabel; // 0x160
	[SerializeField] // RVA: 0xC758D8 Offset: 0xC758D8 VA: 0xC758D8
	protected UISprite sortExplanationSprite; // 0x168
	[SerializeField] // RVA: 0xC758E8 Offset: 0xC758E8 VA: 0xC758E8
	protected ListViewItemSeed normalSizeSeed; // 0x170
	[SerializeField] // RVA: 0xC758F8 Offset: 0xC758F8 VA: 0xC758F8
	protected ListViewItemSeed smallSizeSeed; // 0x178
	[SerializeField] // RVA: 0xC75908 Offset: 0xC75908 VA: 0xC75908
	protected ListViewItemSeed extremelySmallSizeSeed; // 0x180
	protected const string SORT_SAVE_KEY = "Servant";
	protected static ListViewSort servantSortInfo; // 0x0
	protected static ListViewSort servantEquipSortInfo; // 0x8
	protected static ListViewSort commandCodeSortInfo; // 0x10
	private int[] bonusEventIds; // 0x188
	private int[] servantFilterIds; // 0x190
	protected ServantListViewManager.Kind kind; // 0x198
	protected ListViewSort.ScaleType scaleType; // 0x19C
	protected ServantListViewManager.InitMode initMode; // 0x1A0
	[CompilerGeneratedAttribute] // RVA: 0xC75918 Offset: 0xC75918 VA: 0xC75918
	[DebuggerBrowsableAttribute] // RVA: 0xC75918 Offset: 0xC75918 VA: 0xC75918
	private ServantListViewManager.CallbackFunc callbackFunc; // 0x1A8
	[CompilerGeneratedAttribute] // RVA: 0xC75954 Offset: 0xC75954 VA: 0xC75954
	[DebuggerBrowsableAttribute] // RVA: 0xC75954 Offset: 0xC75954 VA: 0xC75954
	private Action callbackFunc2; // 0x1B0
	protected int callbackCount; // 0x1B8

	// Properties
	public List<ServantListViewObject> ObjectList { get; }
	public List<ServantListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x16D0434 Offset: 0x16D0434 VA: 0x16D0434
	public void .ctor() { }

	// RVA: 0x16D043C Offset: 0x16D043C VA: 0x16D043C
	protected void add_callbackFunc(ServantListViewManager.CallbackFunc value) { }

	// RVA: 0x16D052C Offset: 0x16D052C VA: 0x16D052C
	protected void remove_callbackFunc(ServantListViewManager.CallbackFunc value) { }

	// RVA: 0x16D061C Offset: 0x16D061C VA: 0x16D061C
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x16D070C Offset: 0x16D070C VA: 0x16D070C
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x16D07FC Offset: 0x16D07FC VA: 0x16D07FC
	public static void DeleteContinueData() { }

	// RVA: 0x16D08C0 Offset: 0x16D08C0 VA: 0x16D08C0
	public static void InitLoad() { }

	// RVA: 0x16D0984 Offset: 0x16D0984 VA: 0x16D0984
	public List<ServantListViewObject> get_ObjectList() { }

	// RVA: 0x16D0B50 Offset: 0x16D0B50 VA: 0x16D0B50
	public List<ServantListViewObject> get_ClippingObjectList() { }

	// RVA: 0x16D0DB0 Offset: 0x16D0DB0 VA: 0x16D0DB0
	public void CreateList(ServantListViewManager.Kind kind, EventUpValSetupInfo setupInfo) { }

	// RVA: 0x16D1A1C Offset: 0x16D1A1C VA: 0x16D1A1C
	public void ModifyList(bool isIconSizeChange = False) { }

	// RVA: 0x16D20A8 Offset: 0x16D20A8 VA: 0x16D20A8
	public void DestroyList() { }

	// RVA: 0x16D2230 Offset: 0x16D2230 VA: 0x16D2230
	public ServantListViewItem GetItem(int index) { }

	// RVA: 0x16D22D8 Offset: 0x16D22D8 VA: 0x16D22D8
	public bool GetSwapLockList(out long[] lockList, out long[] unlockList) { }

	// RVA: 0x16D2688 Offset: 0x16D2688 VA: 0x16D2688
	public bool GetSwapChoiceList(out long[] choiceList, out long[] unchoiceList) { }

	// RVA: 0x16D2A38 Offset: 0x16D2A38 VA: 0x16D2A38 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x16D2AF4 Offset: 0x16D2AF4 VA: 0x16D2AF4
	public void SetMode(ServantListViewManager.InitMode mode, ServantListViewManager.CallbackFunc callback) { }

	// RVA: 0x16D2B7C Offset: 0x16D2B7C VA: 0x16D2B7C
	public void SetMode(ServantListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x16D2AFC Offset: 0x16D2AFC VA: 0x16D2AFC
	public void SetMode(ServantListViewManager.InitMode mode) { }

	// RVA: 0x16D2D7C Offset: 0x16D2D7C VA: 0x16D2D7C
	protected void RequestListObject(ServantListViewObject.InitMode mode, float delay) { }

	// RVA: 0x16D2B84 Offset: 0x16D2B84 VA: 0x16D2B84
	protected void RequestListObject(ServantListViewObject.InitMode mode) { }

	// RVA: 0x16D2F88 Offset: 0x16D2F88 VA: 0x16D2F88
	protected void OnMoveEnd() { }

	// RVA: 0x16D3094 Offset: 0x16D3094 VA: 0x16D3094
	public void JumpItemUserId(long userSvtId) { }

	// RVA: 0x16D321C Offset: 0x16D321C VA: 0x16D321C
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x16D3220 Offset: 0x16D3220 VA: 0x16D3220
	protected void OnClickSelectListView(ListViewObject obj) { }

	// RVA: 0x16D327C Offset: 0x16D327C VA: 0x16D327C
	protected void OnLongPushListView(ListViewObject obj) { }

	// RVA: 0x16D32D8 Offset: 0x16D32D8 VA: 0x16D32D8
	public void OnClickFilterKind() { }

	// RVA: 0x16D3470 Offset: 0x16D3470 VA: 0x16D3470
	public void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x16D354C Offset: 0x16D354C VA: 0x16D354C
	protected void EndCloseSelectFilterKind() { }

	// RVA: 0x16D3550 Offset: 0x16D3550 VA: 0x16D3550
	public void OnClickSortKind() { }

	// RVA: 0x16D3674 Offset: 0x16D3674 VA: 0x16D3674
	protected void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x16D3738 Offset: 0x16D3738 VA: 0x16D3738
	protected void EndCloseSelectSortKind() { }

	// RVA: 0x16D373C Offset: 0x16D373C VA: 0x16D373C
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x16D382C Offset: 0x16D382C VA: 0x16D382C Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x16D3B58 Offset: 0x16D3B58 VA: 0x16D3B58
	public void OnClickBonusFilterKind() { }

	// RVA: 0x16D1704 Offset: 0x16D1704 VA: 0x16D1704
	private void SetBonusFilterIds(EventUpValSetupInfo setupInfo) { }

	// RVA: 0x16D1800 Offset: 0x16D1800 VA: 0x16D1800
	private void SetBonusFilterKind() { }

	// RVA: 0x16D1888 Offset: 0x16D1888 VA: 0x16D1888
	private void SetBonusFilterButton() { }

	// RVA: 0x16CEB80 Offset: 0x16CEB80 VA: 0x16CEB80
	public long GetAmountSortValue(int svtId) { }

	// RVA: 0x16CEA54 Offset: 0x16CEA54 VA: 0x16CEA54
	public long GetCommandCodeAmountSortValue(int commandCodeId) { }

	// RVA: 0x16D3C44 Offset: 0x16D3C44 VA: 0x16D3C44
	public void filterButtonState(UICommonButtonColor.State state, bool animation) { }

	// RVA: 0x16D1988 Offset: 0x16D1988 VA: 0x16D1988
	private void SetFilterButtonImage() { }

	// RVA: 0x16D3C94 Offset: 0x16D3C94 VA: 0x16D3C94
	public void ChangeIconScale() { }

	// RVA: 0x16D3DA4 Offset: 0x16D3DA4 VA: 0x16D3DA4
	public string GetScaleButtonSpriteName() { }

	// RVA: 0x16D3DDC Offset: 0x16D3DDC VA: 0x16D3DDC
	public void UpdateItemDisplayState(bool isPushMode) { }

	// RVA: 0x16D4138 Offset: 0x16D4138 VA: 0x16D4138
	private static void .cctor() { }
}

// Namespace: 
public enum ServantListViewManager.Kind // TypeDefIndex: 10560
{
	// Fields
	public int value__; // 0x0
	public const ServantListViewManager.Kind SERVANT = 0;
	public const ServantListViewManager.Kind SERVANT_EQUIP = 1;
	public const ServantListViewManager.Kind SERVANT_COSTUME = 2;
	public const ServantListViewManager.Kind COMMAND_CODE = 3;
}

// Namespace: 
public enum ServantListViewManager.InitMode // TypeDefIndex: 10561
{
	// Fields
	public int value__; // 0x0
	public const ServantListViewManager.InitMode NONE = 0;
	public const ServantListViewManager.InitMode VALID = 1;
	public const ServantListViewManager.InitMode INPUT = 2;
	public const ServantListViewManager.InitMode MODIFY = 3;
}

// Namespace: 
public enum ServantListViewManager.ResultKind // TypeDefIndex: 10562
{
	// Fields
	public int value__; // 0x0
	public const ServantListViewManager.ResultKind CANCEL = 0;
	public const ServantListViewManager.ResultKind DECIDE = 1;
	public const ServantListViewManager.ResultKind SHOW_STATUS = 2;
}

// Namespace: 
public sealed class ServantListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 10563
{
	// Methods

	// RVA: 0x19C0F60 Offset: 0x19C0F60 VA: 0x19C0F60
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x19C0F70 Offset: 0x19C0F70 VA: 0x19C0F70 Slot: 11
	public virtual void Invoke(ServantListViewManager.ResultKind kind, int result) { }

	// RVA: 0x19C11B4 Offset: 0x19C11B4 VA: 0x19C11B4 Slot: 12
	public virtual IAsyncResult BeginInvoke(ServantListViewManager.ResultKind kind, int result, AsyncCallback callback, object object) { }

	// RVA: 0x19C125C Offset: 0x19C125C VA: 0x19C125C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantListViewObject : ListViewObject // TypeDefIndex: 10564
{
	// Fields
	protected ServantListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC75990 Offset: 0xC75990 VA: 0xC75990
	[DebuggerBrowsableAttribute] // RVA: 0xC75990 Offset: 0xC75990 VA: 0xC75990
	private Action callbackFunc; // 0x70
	protected ServantListViewItemDraw itemDraw; // 0x78
	protected ServantListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x19C1268 Offset: 0x19C1268 VA: 0x19C1268
	public void .ctor() { }

	// RVA: 0x19C12D0 Offset: 0x19C12D0 VA: 0x19C12D0
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x19C13BC Offset: 0x19C13BC VA: 0x19C13BC
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x19C14A8 Offset: 0x19C14A8 VA: 0x19C14A8
	protected void Awake() { }

	// RVA: 0x19C151C Offset: 0x19C151C VA: 0x19C151C
	private void OnDestroy() { }

	// RVA: 0x19C15C8 Offset: 0x19C15C8 VA: 0x19C15C8
	public ServantListViewItem GetItem() { }

	// RVA: 0x19C164C Offset: 0x19C164C VA: 0x19C164C Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x19C167C Offset: 0x19C167C VA: 0x19C167C Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x19C1674 Offset: 0x19C1674 VA: 0x19C1674
	protected void InitItem() { }

	// RVA: 0x19C16A4 Offset: 0x19C16A4 VA: 0x19C16A4 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x19C17AC Offset: 0x19C17AC VA: 0x19C17AC Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x19C18B4 Offset: 0x19C18B4 VA: 0x19C18B4
	public void Init(ServantListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x19C1BBC Offset: 0x19C1BBC VA: 0x19C1BBC
	public void Init(ServantListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x19C1C40 Offset: 0x19C1C40 VA: 0x19C1C40
	public void Init(ServantListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x19C1834 Offset: 0x19C1834 VA: 0x19C1834
	public void Init(ServantListViewObject.InitMode initMode) { }

	// RVA: 0x19C1AA8 Offset: 0x19C1AA8 VA: 0x19C1AA8
	protected void SetupDisp() { }

	// RVA: 0x19C1CC4 Offset: 0x19C1CC4 VA: 0x19C1CC4
	public void OnClickSelect() { }

	// RVA: 0x19C1DC0 Offset: 0x19C1DC0 VA: 0x19C1DC0
	public void OnLongPush() { }
}

// Namespace: 
public enum ServantListViewObject.InitMode // TypeDefIndex: 10565
{
	// Fields
	public int value__; // 0x0
	public const ServantListViewObject.InitMode INVISIBLE = 0;
	public const ServantListViewObject.InitMode INVALID = 1;
	public const ServantListViewObject.InitMode VALID = 2;
	public const ServantListViewObject.InitMode INPUT = 3;
	public const ServantListViewObject.InitMode MODIFY = 4;
}

// Namespace: 
protected enum ServantListViewObject.State // TypeDefIndex: 10566
{
	// Fields
	public int value__; // 0x0
	public const ServantListViewObject.State INIT = 0;
	public const ServantListViewObject.State IDLE = 1;
	public const ServantListViewObject.State MOVE = 2;
	public const ServantListViewObject.State INPUT = 3;
}

// Namespace: 
public class BuyStorageConfirmDialogComponent : BaseDialog // TypeDefIndex: 10567
{
	// Fields
	[SerializeField] // RVA: 0xC759CC Offset: 0xC759CC VA: 0xC759CC
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC759DC Offset: 0xC759DC VA: 0xC759DC
	private UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC759EC Offset: 0xC759EC VA: 0xC759EC
	private UILabel nowNumTextLabel; // 0x68
	[SerializeField] // RVA: 0xC759FC Offset: 0xC759FC VA: 0xC759FC
	private UILabel afterNumTextLabel; // 0x70
	[SerializeField] // RVA: 0xC75A0C Offset: 0xC75A0C VA: 0xC75A0C
	private UILabel nowNumLabel; // 0x78
	[SerializeField] // RVA: 0xC75A1C Offset: 0xC75A1C VA: 0xC75A1C
	private UILabel afterNumLabel; // 0x80
	[SerializeField] // RVA: 0xC75A2C Offset: 0xC75A2C VA: 0xC75A2C
	private UILabel resultAfterNumLabel; // 0x88
	[SerializeField] // RVA: 0xC75A3C Offset: 0xC75A3C VA: 0xC75A3C
	private UILabel resultAfterNumTextLabel; // 0x90
	[SerializeField] // RVA: 0xC75A4C Offset: 0xC75A4C VA: 0xC75A4C
	private UILabel decideBtnLabel; // 0x98
	[SerializeField] // RVA: 0xC75A5C Offset: 0xC75A5C VA: 0xC75A5C
	private UILabel cancelBtnLabel; // 0xA0
	[SerializeField] // RVA: 0xC75A6C Offset: 0xC75A6C VA: 0xC75A6C
	private UILabel closeBtnLabel; // 0xA8
	[SerializeField] // RVA: 0xC75A7C Offset: 0xC75A7C VA: 0xC75A7C
	private UISprite itemImage; // 0xB0
	[SerializeField] // RVA: 0xC75A8C Offset: 0xC75A8C VA: 0xC75A8C
	private UILabel itemNum; // 0xB8
	[SerializeField] // RVA: 0xC75A9C Offset: 0xC75A9C VA: 0xC75A9C
	private UILabel notificationMessage; // 0xC0
	[SerializeField] // RVA: 0xC75AAC Offset: 0xC75AAC VA: 0xC75AAC
	private GameObject confirmInfo; // 0xC8
	[SerializeField] // RVA: 0xC75ABC Offset: 0xC75ABC VA: 0xC75ABC
	private GameObject resultInfo; // 0xD0
	[SerializeField] // RVA: 0xC75ACC Offset: 0xC75ACC VA: 0xC75ACC
	private GameObject notification; // 0xD8
	private BuyStorageConfirmDialogComponent.State state; // 0xE0
	private Action<int> onMenuSelect; // 0xE8
	private Action onClose; // 0xF0
	private const int BUY_CANCEL = 0;
	private BuyStorageConfirmDialogComponent.Kind kind; // 0xF8
	private int buyCount; // 0xFC
	private SeManager.SystemSeKind decideSe; // 0x100

	// Methods

	// RVA: 0x14DB484 Offset: 0x14DB484 VA: 0x14DB484
	public void .ctor() { }

	// RVA: 0x14DB4EC Offset: 0x14DB4EC VA: 0x14DB4EC
	public void Init() { }

	// RVA: 0x14DB804 Offset: 0x14DB804 VA: 0x14DB804
	public void Open(BuyStorageConfirmDialogComponent.Kind kind, ShopBuyItemListViewItem item, int buyCount, Action<int> onMenuSelect) { }

	// RVA: 0x14DB9E0 Offset: 0x14DB9E0 VA: 0x14DB9E0
	public void ResultOpenDialog(BuyStorageConfirmDialogComponent.Kind kind, ShopBuyItemListViewItem item, Action<int> onMenuSelect) { }

	// RVA: 0x14DBA58 Offset: 0x14DBA58 VA: 0x14DBA58
	public void NotificationDialogOpen(BuyStorageConfirmDialogComponent.Kind kind, BuyStorageConfirmDialogComponent.NotificationType notificationType, ShopBuyItemListViewItem item, Action<int> onMenuSelect) { }

	// RVA: 0x14DB880 Offset: 0x14DB880 VA: 0x14DB880
	private void Open(BuyStorageConfirmDialogComponent.Kind kind, BuyStorageConfirmDialogComponent.Type type, BuyStorageConfirmDialogComponent.NotificationType notificationType, ShopEntity shopEntity, Action<int> onMenuSelect) { }

	// RVA: 0x14DBAE0 Offset: 0x14DBAE0 VA: 0x14DBAE0
	private void SetObjectsOnInit(BuyStorageConfirmDialogComponent.Kind kind, BuyStorageConfirmDialogComponent.Type type, Action<int> onMenuSelect) { }

	// RVA: 0x14DC600 Offset: 0x14DC600 VA: 0x14DC600
	private string GetCurrencyItemName(ShopEntity shopEntity) { }

	// RVA: 0x14DBC28 Offset: 0x14DBC28 VA: 0x14DBC28
	private int GetCurrencyImageId(ShopEntity shopEntity) { }

	// RVA: 0x14DBD60 Offset: 0x14DBD60 VA: 0x14DBD60
	private string GetItemNumText(ShopEntity shopEntity, UserGameEntity userGameEntity) { }

	// RVA: 0x14DBF5C Offset: 0x14DBF5C VA: 0x14DBF5C
	private void SetMessageLabels(BuyStorageConfirmDialogComponent.Kind kind, BuyStorageConfirmDialogComponent.Type type, BuyStorageConfirmDialogComponent.NotificationType notificationType, ShopEntity shopEntity, UserGameEntity userGameEntity) { }

	// RVA: 0x14DC804 Offset: 0x14DC804 VA: 0x14DC804
	private void SetStorageNum(BuyStorageConfirmDialogComponent.Kind kind, ShopEntity shopEntity, UserGameEntity userGameEntity, out int now, out int max) { }

	// RVA: 0x14DC950 Offset: 0x14DC950 VA: 0x14DC950
	private void EndOpen() { }

	// RVA: 0x14DC95C Offset: 0x14DC95C VA: 0x14DC95C
	public void Close() { }

	// RVA: 0x14DC964 Offset: 0x14DC964 VA: 0x14DC964
	public void Close(Action callback) { }

	// RVA: 0x14DC9F4 Offset: 0x14DC9F4 VA: 0x14DC9F4
	private void EndClose() { }

	// RVA: 0x14DCA4C Offset: 0x14DCA4C VA: 0x14DCA4C
	public void OnClickDecide() { }

	// RVA: 0x14DCB5C Offset: 0x14DCB5C VA: 0x14DCB5C
	public void OnClickCancel() { }

	// RVA: 0x14DCAE4 Offset: 0x14DCAE4 VA: 0x14DCAE4
	private void CallOnMenuSelect(int buyCount) { }

	// RVA: 0x14DCA30 Offset: 0x14DCA30 VA: 0x14DCA30
	private void CallOnClose() { }

	// RVA: 0x14DCBF0 Offset: 0x14DCBF0 VA: 0x14DCBF0
	public static BuyStorageConfirmDialogComponent.Kind GetKindByShopState(ShopRootConstants.State state) { }

	// RVA: 0x14DCC0C Offset: 0x14DCC0C VA: 0x14DCC0C
	public void OnEnable() { }
}

// Namespace: 
public enum BuyStorageConfirmDialogComponent.Kind // TypeDefIndex: 10568
{
	// Fields
	public int value__; // 0x0
	public const BuyStorageConfirmDialogComponent.Kind SERVANT = 0;
	public const BuyStorageConfirmDialogComponent.Kind SERVANT_EQUIP = 1;
}

// Namespace: 
private enum BuyStorageConfirmDialogComponent.State // TypeDefIndex: 10569
{
	// Fields
	public int value__; // 0x0
	public const BuyStorageConfirmDialogComponent.State INIT = 0;
	public const BuyStorageConfirmDialogComponent.State OPEN = 1;
	public const BuyStorageConfirmDialogComponent.State INPUT = 2;
	public const BuyStorageConfirmDialogComponent.State SELECTED = 3;
	public const BuyStorageConfirmDialogComponent.State CLOSE = 4;
}

// Namespace: 
private enum BuyStorageConfirmDialogComponent.Type // TypeDefIndex: 10570
{
	// Fields
	public int value__; // 0x0
	public const BuyStorageConfirmDialogComponent.Type CONFIRM = 0;
	public const BuyStorageConfirmDialogComponent.Type RESULT = 1;
	public const BuyStorageConfirmDialogComponent.Type NOTIFICATION = 2;
}

// Namespace: 
public enum BuyStorageConfirmDialogComponent.NotificationType // TypeDefIndex: 10571
{
	// Fields
	public int value__; // 0x0
	public const BuyStorageConfirmDialogComponent.NotificationType NONE = 0;
	public const BuyStorageConfirmDialogComponent.NotificationType SOLD_OUT = 1;
	public const BuyStorageConfirmDialogComponent.NotificationType NOT_ENOUGH = 2;
}

// Namespace: 
public static class EventItemWindowMaker // TypeDefIndex: 10572
{
	// Fields
	private static readonly int LIMIT_OVER_WINDOW_BASE_HEIGHT; // 0x0
	private static readonly int NORMAL_WINDOW_BASE_HEIGHT_SHOP; // 0x4
	private static readonly int NORMAL_WINDOW_BASE_HEIGHT_EVENT; // 0x8
	private static readonly int MIZUGI_WINDOW_ADD_HEIGHT; // 0xC
	private static readonly int LIMIT_OVER_WINDOW_ADD_HEIGHT; // 0x10
	private static readonly int LIMIT_OVER_WINDOW_REDUCE_HEIGHT; // 0x14
	private static readonly int X_EVENT_ITEM_PANEL_POSITION; // 0x18
	private static readonly int Y_EVENT_ITEM_PANEL_POSITION; // 0x1C
	private static readonly int NORMAL_DEFAULT_COUNT; // 0x20
	private static readonly int LIMIT_OVER_DEFAULT_COUNT; // 0x24
	private static readonly int NORMAL_MAX_COUNT; // 0x28
	private static readonly int MAX_COLUMNS_NORMAL; // 0x2C
	private static readonly int MAX_ROWS_NORMAL; // 0x30
	private static readonly int MAX_COLUMNS_LIMIT_OVER; // 0x34
	private static readonly int MAX_ROWS_LIMIT_OVER; // 0x38
	private static readonly float[] X_NORMAL_POSITIONS; // 0x40
	private static readonly float[] Y_NORMAL_POSITIONS; // 0x48
	private static readonly float X_NORMAL_ONE_POSITION; // 0x50
	private static readonly float Y_NORMAL_ONE_POSITION_EVENT; // 0x54
	private static readonly float Y_NORMAL_ONE_POSITION_SHOP; // 0x58
	private static readonly float[] X_LIMIT_OVER_POSITIONS; // 0x60
	private static readonly float[] Y_LIMIT_OVER_POSITIONS; // 0x68
	private static readonly float X_LIMITOVER_ONE_POSITION; // 0x70
	private static readonly float[] X_LIMIT_OVER_TWO_POSITIONS; // 0x78
	private static readonly float Y_LIMIT_OVER_ONE; // 0x80
	private static readonly int[] NORMAL_ITEM_BASE_WINDOW_HEIGHT; // 0x88
	private static readonly int[] LIMIT_OVER_ITEM_BASE_WINDOW_HEIGHT; // 0x90
	private static readonly int SCOPE_ITEM_INFO_ADD_HEIGHT; // 0x98
	private static readonly int SCOPE_ITEM_INFO_ADD_WIDTH; // 0x9C
	private static readonly int X_ITEM_BASE_WINDOW_POSITION; // 0xA0

	// Methods

	// RVA: 0x1607B60 Offset: 0x1607B60 VA: 0x1607B60
	public static Vector3 GetPanelPosition(Vector3 position) { }

	// RVA: 0x1607CD8 Offset: 0x1607CD8 VA: 0x1607CD8
	public static int GetEventItemWindowHeight(bool isEventShop, int count, bool isForcedAdjustment) { }

	// RVA: 0x1608024 Offset: 0x1608024 VA: 0x1608024
	public static float GetItemBaseWindowX() { }

	// RVA: 0x16080CC Offset: 0x16080CC VA: 0x16080CC
	public static int GetItemBaseWindowHeight(int count, bool isForcedAdjustment) { }

	// RVA: 0x1607F5C Offset: 0x1607F5C VA: 0x1607F5C
	private static int GetWindowAddHeight(bool isEventShop, int count, bool isForcedAdjustment) { }

	// RVA: 0x1607E70 Offset: 0x1607E70 VA: 0x1607E70
	private static int GetWindowBaseHeight(bool isEventShop, int count, bool isForcedAdjustment) { }

	// RVA: 0x16083E8 Offset: 0x16083E8 VA: 0x16083E8
	public static Vector3 GetEventItemPosition(bool isEventShop, int index, int count, bool isForcedAdjustment) { }

	// RVA: 0x1608250 Offset: 0x1608250 VA: 0x1608250
	public static bool GetIsLimitOverWindow(int count, bool isForcedAdjustment) { }

	// RVA: 0x16082D8 Offset: 0x16082D8 VA: 0x16082D8
	private static int GetMaxColumns(bool isLimitOverWindow) { }

	// RVA: 0x160880C Offset: 0x160880C VA: 0x160880C
	private static int GetMaxRows(bool isLimitOverWindow) { }

	// RVA: 0x160836C Offset: 0x160836C VA: 0x160836C
	private static int GetRowCount(int count, int maxColumns) { }

	// RVA: 0x16088A0 Offset: 0x16088A0 VA: 0x16088A0
	private static void .cctor() { }
}

// Namespace: 
public class NoTitleDialog : BaseDialog // TypeDefIndex: 10573
{
	// Fields
	[SerializeField] // RVA: 0xC75ADC Offset: 0xC75ADC VA: 0xC75ADC
	private UILabel messageLabel; // 0x58
	[SerializeField] // RVA: 0xC75AEC Offset: 0xC75AEC VA: 0xC75AEC
	private UILabel buttonDecideLabel; // 0x60
	[SerializeField] // RVA: 0xC75AFC Offset: 0xC75AFC VA: 0xC75AFC
	private UILabel buttonCancelLabel; // 0x68
	[SerializeField] // RVA: 0xC75B0C Offset: 0xC75B0C VA: 0xC75B0C
	protected UICommonButton closeBtn; // 0x70
	private Action<bool> onClick; // 0x78
	private Action onClose; // 0x80
	private bool isButtonEnable; // 0x88

	// Properties
	protected override GameObject closeBtnObject { get; }

	// Methods

	// RVA: 0x1389A08 Offset: 0x1389A08 VA: 0x1389A08
	public void .ctor() { }

	// RVA: 0x1389A70 Offset: 0x1389A70 VA: 0x1389A70
	public void Init() { }

	// RVA: 0x1389BF4 Offset: 0x1389BF4 VA: 0x1389BF4
	public void Open(string message, string decideTxt, string cancleTxt, Action<bool> onClick) { }

	// RVA: 0x1389B4C Offset: 0x1389B4C VA: 0x1389B4C
	private void SetLabelText(UILabel label, string text) { }

	// RVA: 0x1389D68 Offset: 0x1389D68 VA: 0x1389D68
	private void EndOpen() { }

	// RVA: 0x1389D74 Offset: 0x1389D74 VA: 0x1389D74
	public void Close() { }

	// RVA: 0x1389D7C Offset: 0x1389D7C VA: 0x1389D7C
	public void Close(Action callback) { }

	// RVA: 0x1389E08 Offset: 0x1389E08 VA: 0x1389E08
	private void EndClose() { }

	// RVA: 0x1389E6C Offset: 0x1389E6C VA: 0x1389E6C Slot: 4
	protected override GameObject get_closeBtnObject() { }

	// RVA: 0x1389F0C Offset: 0x1389F0C VA: 0x1389F0C
	public void OnClickDecide() { }

	// RVA: 0x138A010 Offset: 0x138A010 VA: 0x138A010
	public void OnClickDecide2() { }

	// RVA: 0x138A09C Offset: 0x138A09C VA: 0x138A09C
	public void OnClickCancel() { }

	// RVA: 0x138A128 Offset: 0x138A128 VA: 0x138A128
	public void OnClickClose() { }

	// RVA: 0x1389F98 Offset: 0x1389F98 VA: 0x1389F98
	private void CallOnClick(bool result) { }
}

// Namespace: 
public class RequestResultDialog : BaseDialog // TypeDefIndex: 10574
{
	// Fields
	private const int NORMAL_FONT_SIZE = 30;
	[SerializeField] // RVA: 0xC75B1C Offset: 0xC75B1C VA: 0xC75B1C
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC75B2C Offset: 0xC75B2C VA: 0xC75B2C
	private UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC75B3C Offset: 0xC75B3C VA: 0xC75B3C
	private UILabel okBtnLabel; // 0x68
	[SerializeField] // RVA: 0xC75B4C Offset: 0xC75B4C VA: 0xC75B4C
	private UILabel itemMessageLabel; // 0x70
	[SerializeField] // RVA: 0xC75B5C Offset: 0xC75B5C VA: 0xC75B5C
	private UILabel numMessageLabel; // 0x78
	[SerializeField] // RVA: 0xC75B6C Offset: 0xC75B6C VA: 0xC75B6C
	private UILabel userItemNumLabel; // 0x80
	[SerializeField] // RVA: 0xC75B7C Offset: 0xC75B7C VA: 0xC75B7C
	private UILabel title2Label; // 0x88
	[SerializeField] // RVA: 0xC75B8C Offset: 0xC75B8C VA: 0xC75B8C
	private UILabel message2Label; // 0x90
	[SerializeField] // RVA: 0xC75B9C Offset: 0xC75B9C VA: 0xC75B9C
	private UILabel addMessageLabel; // 0x98
	[SerializeField] // RVA: 0xC75BAC Offset: 0xC75BAC VA: 0xC75BAC
	private UILabel itemMessage2Label; // 0xA0
	[SerializeField] // RVA: 0xC75BBC Offset: 0xC75BBC VA: 0xC75BBC
	private UILabel numMessage2Label; // 0xA8
	[SerializeField] // RVA: 0xC75BCC Offset: 0xC75BCC VA: 0xC75BCC
	private UILabel userItemNum2Label; // 0xB0
	[SerializeField] // RVA: 0xC75BDC Offset: 0xC75BDC VA: 0xC75BDC
	private UILabel addMessage2Label; // 0xB8
	[SerializeField] // RVA: 0xC75BEC Offset: 0xC75BEC VA: 0xC75BEC
	private UILabel cancelButtonLabel; // 0xC0
	[SerializeField] // RVA: 0xC75BFC Offset: 0xC75BFC VA: 0xC75BFC
	private UILabel decideButtonLabel; // 0xC8
	[SerializeField] // RVA: 0xC75C0C Offset: 0xC75C0C VA: 0xC75C0C
	private GameObject normalBuyWindowObj; // 0xD0
	[SerializeField] // RVA: 0xC75C1C Offset: 0xC75C1C VA: 0xC75C1C
	private GameObject itemBuyWindowObj; // 0xD8
	[SerializeField] // RVA: 0xC75C2C Offset: 0xC75C2C VA: 0xC75C2C
	private GameObject normalBuyAddMsgWindowObj; // 0xE0
	[SerializeField] // RVA: 0xC75C3C Offset: 0xC75C3C VA: 0xC75C3C
	private GameObject itemBuyAddMsgWindowObj; // 0xE8
	[SerializeField] // RVA: 0xC75C4C Offset: 0xC75C4C VA: 0xC75C4C
	private GameObject okBtnObj; // 0xF0
	[SerializeField] // RVA: 0xC75C5C Offset: 0xC75C5C VA: 0xC75C5C
	private GameObject cancelButtonObj; // 0xF8
	[SerializeField] // RVA: 0xC75C6C Offset: 0xC75C6C VA: 0xC75C6C
	private GameObject decideButtonObj; // 0x100
	private Action<bool> onDecide; // 0x108
	private Action onClose; // 0x110
	private bool isButtonEnable; // 0x118
	private bool isInitPanelDepth; // 0x119
	private int keepPanelDepth; // 0x11C

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1587B4C Offset: 0x1587B4C VA: 0x1587B4C
	public void .ctor() { }

	// RVA: 0x1587BB4 Offset: 0x1587BB4 VA: 0x1587BB4
	public void Init() { }

	// RVA: 0x1587D84 Offset: 0x1587D84 VA: 0x1587D84
	public void Open(string message, string numMessage, string userItemNumMessage, Action<bool> onDecide) { }

	// RVA: 0x1587E24 Offset: 0x1587E24 VA: 0x1587E24
	public void OpenAddMsg(string message, string numMessage, string userItemNumMessage, string addMessage, Action<bool> onDecide) { }

	// RVA: 0x158831C Offset: 0x158831C VA: 0x158831C
	public void Open(string title, string message, Action<bool> onDecide, int panelDepth = -1) { }

	// RVA: 0x15883DC Offset: 0x15883DC VA: 0x15883DC
	public void OpenAddMsg(string title, string message, string addMessage, Action<bool> onDecide, int panelDepth = -1, int fontSize = 30, int message2Y = 45, int addMessageY = -45, string cancelMessage, string decideMessage) { }

	// RVA: 0x1588108 Offset: 0x1588108 VA: 0x1588108
	private int GetKeepPanelDepth() { }

	// RVA: 0x15888A4 Offset: 0x15888A4 VA: 0x15888A4
	private void EndOpen() { }

	// RVA: 0x15888B0 Offset: 0x15888B0 VA: 0x15888B0
	public void Close() { }

	// RVA: 0x15888B8 Offset: 0x15888B8 VA: 0x15888B8
	public void Close(Action callback) { }

	// RVA: 0x1588944 Offset: 0x1588944 VA: 0x1588944
	private void EndClose() { }

	// RVA: 0x158899C Offset: 0x158899C VA: 0x158899C
	public void OnClickOk() { }

	// RVA: 0x1588A9C Offset: 0x1588A9C VA: 0x1588A9C
	public void OnClickDecide() { }

	// RVA: 0x1588B24 Offset: 0x1588B24 VA: 0x1588B24
	public void OnClickCancel() { }

	// RVA: 0x1588A24 Offset: 0x1588A24 VA: 0x1588A24
	private void CallOnDecide(bool isOk) { }

	// RVA: 0x1588980 Offset: 0x1588980 VA: 0x1588980
	private void CallOnClose() { }

	// RVA: 0x1587CDC Offset: 0x1587CDC VA: 0x1587CDC
	private void SetLabelText(UILabel label, string text) { }

	// RVA: 0x15881D0 Offset: 0x15881D0 VA: 0x15881D0
	private void SetLabelFontSizeAdjust(UILabel label, string text, int size) { }

	// RVA: 0x1588274 Offset: 0x1588274 VA: 0x1588274
	private void SetPanelDepth(UIPanel panel, int depth) { }

	// RVA: 0x15887F4 Offset: 0x15887F4 VA: 0x15887F4
	private void SetLabelLacalPositionY(UILabel label, float y) { }

	// RVA: 0x1588BAC Offset: 0x1588BAC VA: 0x1588BAC Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
public class ServantOperationListViewItem : ListViewItem // TypeDefIndex: 10575
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC75C7C Offset: 0xC75C7C VA: 0xC75C7C
	[DebuggerBrowsableAttribute] // RVA: 0xC75C7C Offset: 0xC75C7C VA: 0xC75C7C
	private UserServantEntity <UserServantEntity>k__BackingField; // 0x70
	private ServantEntity servantEntity; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xC75CB8 Offset: 0xC75CB8 VA: 0xC75CB8
	[DebuggerBrowsableAttribute] // RVA: 0xC75CB8 Offset: 0xC75CB8 VA: 0xC75CB8
	private int <SvtId>k__BackingField; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC75CF4 Offset: 0xC75CF4 VA: 0xC75CF4
	[DebuggerBrowsableAttribute] // RVA: 0xC75CF4 Offset: 0xC75CF4 VA: 0xC75CF4
	private UserCommandCodeEntity <UserCommandCodeEntity>k__BackingField; // 0x88
	private CommandCodeEntity commandCodeEntity; // 0x90
	[CompilerGeneratedAttribute] // RVA: 0xC75D30 Offset: 0xC75D30 VA: 0xC75D30
	[DebuggerBrowsableAttribute] // RVA: 0xC75D30 Offset: 0xC75D30 VA: 0xC75D30
	private int <CommandCodeId>k__BackingField; // 0x98
	private int classId; // 0x9C
	private int rarity; // 0xA0
	private ObscuredInt friendship; // 0xA4
	private int friendshipMax; // 0xB4
	private int partyIndex; // 0xB8
	[CompilerGeneratedAttribute] // RVA: 0xC75D6C Offset: 0xC75D6C VA: 0xC75D6C
	[DebuggerBrowsableAttribute] // RVA: 0xC75D6C Offset: 0xC75D6C VA: 0xC75D6C
	private bool <IsPartyEquip>k__BackingField; // 0xBC
	[CompilerGeneratedAttribute] // RVA: 0xC75DA8 Offset: 0xC75DA8 VA: 0xC75DA8
	[DebuggerBrowsableAttribute] // RVA: 0xC75DA8 Offset: 0xC75DA8 VA: 0xC75DA8
	private bool <IsUseSupportServant>k__BackingField; // 0xBD
	[CompilerGeneratedAttribute] // RVA: 0xC75DE4 Offset: 0xC75DE4 VA: 0xC75DE4
	[DebuggerBrowsableAttribute] // RVA: 0xC75DE4 Offset: 0xC75DE4 VA: 0xC75DE4
	private bool <IsUseSupportEquip>k__BackingField; // 0xBE
	[CompilerGeneratedAttribute] // RVA: 0xC75E20 Offset: 0xC75E20 VA: 0xC75E20
	[DebuggerBrowsableAttribute] // RVA: 0xC75E20 Offset: 0xC75E20 VA: 0xC75E20
	private bool <IsUse>k__BackingField; // 0xBF
	[CompilerGeneratedAttribute] // RVA: 0xC75E5C Offset: 0xC75E5C VA: 0xC75E5C
	[DebuggerBrowsableAttribute] // RVA: 0xC75E5C Offset: 0xC75E5C VA: 0xC75E5C
	private bool <IsLock>k__BackingField; // 0xC0
	[CompilerGeneratedAttribute] // RVA: 0xC75E98 Offset: 0xC75E98 VA: 0xC75E98
	[DebuggerBrowsableAttribute] // RVA: 0xC75E98 Offset: 0xC75E98 VA: 0xC75E98
	private bool <IsChoice>k__BackingField; // 0xC1
	[CompilerGeneratedAttribute] // RVA: 0xC75ED4 Offset: 0xC75ED4 VA: 0xC75ED4
	[DebuggerBrowsableAttribute] // RVA: 0xC75ED4 Offset: 0xC75ED4 VA: 0xC75ED4
	private bool <IsParty>k__BackingField; // 0xC2
	[CompilerGeneratedAttribute] // RVA: 0xC75F10 Offset: 0xC75F10 VA: 0xC75F10
	[DebuggerBrowsableAttribute] // RVA: 0xC75F10 Offset: 0xC75F10 VA: 0xC75F10
	private bool <IsEquippedCommandCodeServant>k__BackingField; // 0xC3
	[CompilerGeneratedAttribute] // RVA: 0xC75F4C Offset: 0xC75F4C VA: 0xC75F4C
	[DebuggerBrowsableAttribute] // RVA: 0xC75F4C Offset: 0xC75F4C VA: 0xC75F4C
	private bool <IsCommandCardOpenServant>k__BackingField; // 0xC4
	[CompilerGeneratedAttribute] // RVA: 0xC75F88 Offset: 0xC75F88 VA: 0xC75F88
	[DebuggerBrowsableAttribute] // RVA: 0xC75F88 Offset: 0xC75F88 VA: 0xC75F88
	private bool <IsFriendShipSvtEq>k__BackingField; // 0xC5
	[CompilerGeneratedAttribute] // RVA: 0xC75FC4 Offset: 0xC75FC4 VA: 0xC75FC4
	[DebuggerBrowsableAttribute] // RVA: 0xC75FC4 Offset: 0xC75FC4 VA: 0xC75FC4
	private bool <IsChocolateSvtEquip>k__BackingField; // 0xC6
	[CompilerGeneratedAttribute] // RVA: 0xC76000 Offset: 0xC76000 VA: 0xC76000
	[DebuggerBrowsableAttribute] // RVA: 0xC76000 Offset: 0xC76000 VA: 0xC76000
	private bool <IsMaterialTdSvt>k__BackingField; // 0xC7
	[CompilerGeneratedAttribute] // RVA: 0xC7603C Offset: 0xC7603C VA: 0xC7603C
	[DebuggerBrowsableAttribute] // RVA: 0xC7603C Offset: 0xC7603C VA: 0xC7603C
	private bool <IsNotSelection>k__BackingField; // 0xC8
	[CompilerGeneratedAttribute] // RVA: 0xC76078 Offset: 0xC76078 VA: 0xC76078
	[DebuggerBrowsableAttribute] // RVA: 0xC76078 Offset: 0xC76078 VA: 0xC76078
	private bool <IsPush>k__BackingField; // 0xC9
	private ServantOperationListViewItem.ServantAttributeKind attribute; // 0xCC
	[CompilerGeneratedAttribute] // RVA: 0xC760B4 Offset: 0xC760B4 VA: 0xC760B4
	[DebuggerBrowsableAttribute] // RVA: 0xC760B4 Offset: 0xC760B4 VA: 0xC760B4
	private bool <IsFavorite>k__BackingField; // 0xD0
	[CompilerGeneratedAttribute] // RVA: 0xC760F0 Offset: 0xC760F0 VA: 0xC760F0
	[DebuggerBrowsableAttribute] // RVA: 0xC760F0 Offset: 0xC760F0 VA: 0xC760F0
	private bool <IsCommandCodeEquiped>k__BackingField; // 0xD1
	private IconLabelInfo iconLabelInfo1; // 0xD8
	private IconLabelInfo iconLabelInfo2; // 0xE0
	private int priority; // 0xE8
	private long amountSortValue; // 0xF0
	[CompilerGeneratedAttribute] // RVA: 0xC7612C Offset: 0xC7612C VA: 0xC7612C
	[DebuggerBrowsableAttribute] // RVA: 0xC7612C Offset: 0xC7612C VA: 0xC7612C
	private bool <IsSwapLock>k__BackingField; // 0xF8
	[CompilerGeneratedAttribute] // RVA: 0xC76168 Offset: 0xC76168 VA: 0xC76168
	[DebuggerBrowsableAttribute] // RVA: 0xC76168 Offset: 0xC76168 VA: 0xC76168
	private bool <IsSwapChoice>k__BackingField; // 0xF9
	[CompilerGeneratedAttribute] // RVA: 0xC761A4 Offset: 0xC761A4 VA: 0xC761A4
