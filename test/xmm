
	// RVA: 0x1A64954 Offset: 0x1A64954 VA: 0x1A64954
	public void SetUp(List<string> boardMessages) { }

	// RVA: 0x1A6A7FC Offset: 0x1A6A7FC VA: 0x1A6A7FC
	private void resetLabelList() { }

	// RVA: 0x1A6A5B0 Offset: 0x1A6A5B0 VA: 0x1A6A5B0
	private void AddRandomLabel(float setPos) { }

	// RVA: 0x1A6AA88 Offset: 0x1A6AA88 VA: 0x1A6AA88
	private int GetNextRandomIdx() { }

	// RVA: 0x1A6A9C4 Offset: 0x1A6A9C4 VA: 0x1A6A9C4
	private void ResetRandomQueue() { }

	// RVA: -1 Offset: -1
	private static List<T> ListShuffle<T>(List<T> list, bool withoutFirst = False) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1FA5440 Offset: 0x1FA5440 VA: 0x1FA5440
	|-TitleInfoEventBulletinBoardComponent.ListShuffle<int>
	|
	|-RVA: 0x1FA558C Offset: 0x1FA558C VA: 0x1FA558C
	|-TitleInfoEventBulletinBoardComponent.ListShuffle<object>
	*/
}

// Namespace: 
public enum TitleInfoEventBulletinBoardComponent.DispType // TypeDefIndex: 5824
{
	// Fields
	public int value__; // 0x0
	public const TitleInfoEventBulletinBoardComponent.DispType TERMINAL = 0;
	public const TitleInfoEventBulletinBoardComponent.DispType EVENT = 1;
}

// Namespace: 
public class TitleInfoEventDailyPoint : BaseMonoBehaviour // TypeDefIndex: 5825
{
	// Fields
	[SerializeField] // RVA: 0xCBCF7C Offset: 0xCBCF7C VA: 0xCBCF7C
	private ItemIconComponent itemIcon; // 0x18
	[SerializeField] // RVA: 0xCBCF8C Offset: 0xCBCF8C VA: 0xCBCF8C
	private GameObject pointRoot; // 0x20
	[SerializeField] // RVA: 0xCBCF9C Offset: 0xCBCF9C VA: 0xCBCF9C
	private UILabel pointLabel; // 0x28
	[SerializeField] // RVA: 0xCBCFAC Offset: 0xCBCFAC VA: 0xCBCFAC
	private UILabel satisfyLabel; // 0x30
	[SerializeField] // RVA: 0xCBCFBC Offset: 0xCBCFBC VA: 0xCBCFBC
	private GameObject pointLabelRight; // 0x38
	[SerializeField] // RVA: 0xCBCFCC Offset: 0xCBCFCC VA: 0xCBCFCC
	private GameObject pointLabelLeft; // 0x40
	[SerializeField] // RVA: 0xCBCFDC Offset: 0xCBCFDC VA: 0xCBCFDC
	private SimpleAnimation simpleAnimation; // 0x48
	[SerializeField] // RVA: 0xCBCFEC Offset: 0xCBCFEC VA: 0xCBCFEC
	private Animation animation; // 0x50
	[SerializeField] // RVA: 0xCBCFFC Offset: 0xCBCFFC VA: 0xCBCFFC
	private float voiceStartTime; // 0x58
	private TitleInfoEventDailyPoint.STATE state; // 0x5C
	private Action endCallback; // 0x60
	private EventDailyPoint eventDailyPoint; // 0x68
	private EventPointBehavior eventPointBehavior; // 0x70
	private List<ServantVoiceData[]> voiceList; // 0x78
	private string voiceAssetName; // 0x80
	private string voiceName; // 0x88
	private SePlayer voicePlayer; // 0x90
	private int selectVoiceIndex; // 0x98
	private int maxPlayCnt; // 0x9C
	private int playCnt; // 0xA0
	private bool initPosFlag; // 0xA4
	private float pointLabelRightInitPosX; // 0xA8
	private float pointRootInitPosX; // 0xAC
	private ScreenTouchInformationComponent screenTouchInfo; // 0xB0

	// Methods

	// RVA: 0x1A6AC24 Offset: 0x1A6AC24 VA: 0x1A6AC24
	public void .ctor() { }

	// RVA: 0x1A623B4 Offset: 0x1A623B4 VA: 0x1A623B4
	public void Open(Action callback) { }

	// RVA: 0x1A6AC2C Offset: 0x1A6AC2C VA: 0x1A6AC2C
	private void OnLoadSvtVoice() { }

	// RVA: 0x1A6B048 Offset: 0x1A6B048 VA: 0x1A6B048
	private void StartVoice() { }

	// RVA: 0x1A6B16C Offset: 0x1A6B16C VA: 0x1A6B16C
	private void PlayVoice() { }

	// RVA: 0x1A6B31C Offset: 0x1A6B31C VA: 0x1A6B31C
	private void EndPlayVoice() { }

	// RVA: 0x1A6B444 Offset: 0x1A6B444 VA: 0x1A6B444
	private void Update() { }

	// RVA: 0x1A6B4CC Offset: 0x1A6B4CC VA: 0x1A6B4CC
	public void OnTouchDisp() { }

	// RVA: 0x1A6B618 Offset: 0x1A6B618 VA: 0x1A6B618
	public void Close() { }

	[CompilerGeneratedAttribute] // RVA: 0xD359C8 Offset: 0xD359C8 VA: 0xD359C8
	// RVA: 0x1A6B74C Offset: 0x1A6B74C VA: 0x1A6B74C
	private void <OnLoadSvtVoice>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD359D8 Offset: 0xD359D8 VA: 0xD359D8
	// RVA: 0x1A6BAD8 Offset: 0x1A6BAD8 VA: 0x1A6BAD8
	private void <OnTouchDisp>m__1() { }
}

// Namespace: 
private enum TitleInfoEventDailyPoint.STATE // TypeDefIndex: 5826
{
	// Fields
	public int value__; // 0x0
	public const TitleInfoEventDailyPoint.STATE NONE = 0;
	public const TitleInfoEventDailyPoint.STATE PLAY = 1;
	public const TitleInfoEventDailyPoint.STATE TOUCH_WAIT = 2;
}

// Namespace: 
public class TitleInfoEventDailyPointItemComponent : TitleInfoEventInfoComponent // TypeDefIndex: 5827
{
	// Fields
	private const int DailyPointItemIndex = 0;
	private const int SatisfactionPointItemIndex = 1;
	[SerializeField] // RVA: 0xCBD00C Offset: 0xCBD00C VA: 0xCBD00C
	private SideItemComponent prefab; // 0x20
	[SerializeField] // RVA: 0xCBD01C Offset: 0xCBD01C VA: 0xCBD01C
	private TitleInfoEventDailyPointItemComponent.ItemInfo[] dailyPointItemInfoList; // 0x28
	[SerializeField] // RVA: 0xCBD02C Offset: 0xCBD02C VA: 0xCBD02C
	private UILabel subLabel; // 0x30
	[SerializeField] // RVA: 0xCBD03C Offset: 0xCBD03C VA: 0xCBD03C
	private Vector3 subLabelPosition; // 0x38
	[SerializeField] // RVA: 0xCBD04C Offset: 0xCBD04C VA: 0xCBD04C
	private int subLabelFontSize; // 0x44
	[SerializeField] // RVA: 0xCBD05C Offset: 0xCBD05C VA: 0xCBD05C
	private UILabel.Effect subLabelEffectStyle; // 0x48
	[SerializeField] // RVA: 0xCBD06C Offset: 0xCBD06C VA: 0xCBD06C
	private Color subLabelEffectColor; // 0x4C
	[SerializeField] // RVA: 0xCBD07C Offset: 0xCBD07C VA: 0xCBD07C
	private Color subLabelGradientColorTop; // 0x5C
	[SerializeField] // RVA: 0xCBD08C Offset: 0xCBD08C VA: 0xCBD08C
	private Color subLabelGradientColorBottom; // 0x6C
	[SerializeField] // RVA: 0xCBD09C Offset: 0xCBD09C VA: 0xCBD09C
	private float recievePointFadeDuration; // 0x7C
	[SerializeField] // RVA: 0xCBD0AC Offset: 0xCBD0AC VA: 0xCBD0AC
	private Vector3 firstEffectPosition; // 0x80
	[SerializeField] // RVA: 0xCBD0BC Offset: 0xCBD0BC VA: 0xCBD0BC
	private Vector3 firstEffectPositionDiff; // 0x8C
	[SerializeField] // RVA: 0xCBD0CC Offset: 0xCBD0CC VA: 0xCBD0CC
	private Vector3 lastEffectPosition; // 0x98
	[SerializeField] // RVA: 0xCBD0DC Offset: 0xCBD0DC VA: 0xCBD0DC
	private float pointTextInterval; // 0xA4
	[SerializeField] // RVA: 0xCBD0EC Offset: 0xCBD0EC VA: 0xCBD0EC
	private float countAnimDuration; // 0xA8
	private List<SideItemComponent> itemList; // 0xB0
	private AssetData effectAssetData; // 0xB8
	private int eventId; // 0xC0
	private int recievePoint; // 0xC4

	// Methods

	// RVA: 0x1A6BADC Offset: 0x1A6BADC VA: 0x1A6BADC
	public void .ctor() { }

	// RVA: 0x1A6BB5C Offset: 0x1A6BB5C VA: 0x1A6BB5C Slot: 4
	public override bool IsDispPossible() { }

	// RVA: 0x1A6BB64 Offset: 0x1A6BB64 VA: 0x1A6BB64 Slot: 5
	public override void UpdateDisp() { }

	// RVA: 0x1A6BB68 Offset: 0x1A6BB68 VA: 0x1A6BB68 Slot: 6
	public override bool IsEventRaidBoss() { }

	// RVA: 0x1A6BB70 Offset: 0x1A6BB70 VA: 0x1A6BB70
	public void Setup(int eventId) { }

	// RVA: 0x1A6BB78 Offset: 0x1A6BB78 VA: 0x1A6BB78
	private void UpdateDailyPointUI() { }

	// RVA: 0x1A6C3A8 Offset: 0x1A6C3A8 VA: 0x1A6C3A8
	public void PrepareUpdateUIWithEffect(int recievePoint, AssetData assetData) { }

	// RVA: 0x1A6C7CC Offset: 0x1A6C7CC VA: 0x1A6C7CC
	public void UpdateUIWithEffect(Action finishEffectEvent) { }

	[DebuggerHiddenAttribute] // RVA: 0xD359E8 Offset: 0xD359E8 VA: 0xD359E8
	// RVA: 0x1A6C7FC Offset: 0x1A6C7FC VA: 0x1A6C7FC
	private IEnumerator UpdateDailyPointUIWithEffect_IE(int recievePoint, Action finishEffectEvent) { }

	[DebuggerHiddenAttribute] // RVA: 0xD359F8 Offset: 0xD359F8 VA: 0xD359F8
	// RVA: 0x1A6C898 Offset: 0x1A6C898 VA: 0x1A6C898
	private IEnumerator PlayEffect_IE(string effectName, Vector3 position) { }

	[DebuggerHiddenAttribute] // RVA: 0xD35A08 Offset: 0xD35A08 VA: 0xD35A08
	// RVA: 0x1A6C964 Offset: 0x1A6C964 VA: 0x1A6C964
	private IEnumerator PlayCountAnimation_IE(UILabel label, int from, int to, float duration) { }

	[DebuggerHiddenAttribute] // RVA: 0xD35A18 Offset: 0xD35A18 VA: 0xD35A18
	// RVA: 0x1A6CA34 Offset: 0x1A6CA34 VA: 0x1A6CA34
	private IEnumerator PlaySubLabelFadeAnimation_IE(float fromAlpha, float toAlpha, float duration) { }

	// RVA: 0x1A6BD90 Offset: 0x1A6BD90 VA: 0x1A6BD90
	private void DeactivateSubLabel() { }

	// RVA: 0x1A6CAFC Offset: 0x1A6CAFC VA: 0x1A6CAFC
	private TitleInfoEventDailyPointItemComponent.ItemInfo GetItemInfo(int index) { }

	// RVA: 0x1A6C088 Offset: 0x1A6C088 VA: 0x1A6C088
	private SideItemComponent GetItem(int index) { }

	// RVA: 0x1A6CB80 Offset: 0x1A6CB80 VA: 0x1A6CB80
	private SideItemComponent CreateItem() { }

	// RVA: 0x1A6BE20 Offset: 0x1A6BE20 VA: 0x1A6BE20
	private int GetTotalDailyEventQuestPoint() { }

	// RVA: 0x1A6BE04 Offset: 0x1A6BE04 VA: 0x1A6BE04
	private int GetTotalDailyEventPoint() { }

	// RVA: 0x1A6C79C Offset: 0x1A6C79C VA: 0x1A6C79C
	private int GetLastDailyEventPoint() { }
}

// Namespace: 
[Serializable]
private class TitleInfoEventDailyPointItemComponent.ItemInfo // TypeDefIndex: 5828
{
	// Fields
	public Vector3 itemPosition; // 0x10
	public string frameSpriteName; // 0x20
	public Vector3 frameSpritePosition; // 0x28
	public Vector3 pointTextPosition; // 0x34
	public int pointTextFontSize; // 0x40
	public UILabel.Effect pointTextEffectStyle; // 0x44
	public Color pointTextEffectColor; // 0x48
	public Color pointTextGradientColorTop; // 0x58
	public Color pointTextGradientColorBottom; // 0x68

	// Methods

	// RVA: 0x1A6DD2C Offset: 0x1A6DD2C VA: 0x1A6DD2C
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE140 Offset: 0xCAE140 VA: 0xCAE140
private sealed class TitleInfoEventDailyPointItemComponent.<UpdateDailyPointUIWithEffect_IE>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 5829
{
	// Fields
	internal int <totalDailyPoint>__1; // 0x10
	internal int <lastDailyPoint>__1; // 0x14
	internal SideItemComponent <dailyPointItem>__1; // 0x18
	internal int <digitCount>__2; // 0x20
	internal Vector3 <position>__2; // 0x24
	internal Action finishEffectEvent; // 0x30
	internal TitleInfoEventDailyPointItemComponent $this; // 0x38
	internal object $current; // 0x40
	internal bool $disposing; // 0x48
	internal int $PC; // 0x4C
	private static Action <>f__am$cache0; // 0x0

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD45454 Offset: 0xD45454 VA: 0xD45454
	// RVA: 0x1A6C890 Offset: 0x1A6C890 VA: 0x1A6C890
	public void .ctor() { }

	// RVA: 0x1A6D56C Offset: 0x1A6D56C VA: 0x1A6D56C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45464 Offset: 0xD45464 VA: 0xD45464
	// RVA: 0x1A6DC20 Offset: 0x1A6DC20 VA: 0x1A6DC20 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45474 Offset: 0xD45474 VA: 0xD45474
	// RVA: 0x1A6DC28 Offset: 0x1A6DC28 VA: 0x1A6DC28 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45484 Offset: 0xD45484 VA: 0xD45484
	// RVA: 0x1A6DC30 Offset: 0x1A6DC30 VA: 0x1A6DC30 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45494 Offset: 0xD45494 VA: 0xD45494
	// RVA: 0x1A6DC44 Offset: 0x1A6DC44 VA: 0x1A6DC44 Slot: 6
	public void Reset() { }

	// RVA: 0x1A6DCAC Offset: 0x1A6DCAC VA: 0x1A6DCAC
	private static void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE150 Offset: 0xCAE150 VA: 0xCAE150
private sealed class TitleInfoEventDailyPointItemComponent.<PlayEffect_IE>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 5830
{
	// Fields
	internal string effectName; // 0x10
	internal GameObject <gobj>__0; // 0x18
	internal GameObject <prefab>__0; // 0x20
	internal Vector3 position; // 0x28
	internal TabOpenEffectComponent <effectComponent>__0; // 0x38
	internal TitleInfoEventDailyPointItemComponent $this; // 0x40
	internal object $current; // 0x48
	internal bool $disposing; // 0x50
	internal int $PC; // 0x54
	private TitleInfoEventDailyPointItemComponent.<PlayEffect_IE>c__Iterator1.<PlayEffect_IE>c__AnonStorey4 $locvar0; // 0x58

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD454A4 Offset: 0xD454A4 VA: 0xD454A4
	// RVA: 0x1A6C95C Offset: 0x1A6C95C VA: 0x1A6C95C
	public void .ctor() { }

	// RVA: 0x1A6CF88 Offset: 0x1A6CF88 VA: 0x1A6CF88 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD454B4 Offset: 0xD454B4 VA: 0xD454B4
	// RVA: 0x1A6D27C Offset: 0x1A6D27C VA: 0x1A6D27C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD454C4 Offset: 0xD454C4 VA: 0xD454C4
	// RVA: 0x1A6D284 Offset: 0x1A6D284 VA: 0x1A6D284 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD454D4 Offset: 0xD454D4 VA: 0xD454D4
	// RVA: 0x1A6D28C Offset: 0x1A6D28C VA: 0x1A6D28C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD454E4 Offset: 0xD454E4 VA: 0xD454E4
	// RVA: 0x1A6D2A0 Offset: 0x1A6D2A0 VA: 0x1A6D2A0 Slot: 6
	public void Reset() { }
}

// Namespace: 
private sealed class TitleInfoEventDailyPointItemComponent.<PlayEffect_IE>c__Iterator1.<PlayEffect_IE>c__AnonStorey4 // TypeDefIndex: 5831
{
	// Fields
	internal bool isFinished; // 0x10

	// Methods

	// RVA: 0x1A6D274 Offset: 0x1A6D274 VA: 0x1A6D274
	public void .ctor() { }

	// RVA: 0x1A6D308 Offset: 0x1A6D308 VA: 0x1A6D308
	internal void <>m__0() { }

	// RVA: 0x1A6D314 Offset: 0x1A6D314 VA: 0x1A6D314
	internal bool <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE160 Offset: 0xCAE160 VA: 0xCAE160
private sealed class TitleInfoEventDailyPointItemComponent.<PlayCountAnimation_IE>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 5832
{
	// Fields
	internal UILabel label; // 0x10
	internal float duration; // 0x18
	internal int to; // 0x1C
	internal float <timer>__1; // 0x20
	internal int from; // 0x24
	internal int <current>__2; // 0x28
	internal object $current; // 0x30
	internal bool $disposing; // 0x38
	internal int $PC; // 0x3C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD454F4 Offset: 0xD454F4 VA: 0xD454F4
	// RVA: 0x1A6CA2C Offset: 0x1A6CA2C VA: 0x1A6CA2C
	public void .ctor() { }

	// RVA: 0x1A6CC64 Offset: 0x1A6CC64 VA: 0x1A6CC64 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45504 Offset: 0xD45504 VA: 0xD45504
	// RVA: 0x1A6CEFC Offset: 0x1A6CEFC VA: 0x1A6CEFC Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45514 Offset: 0xD45514 VA: 0xD45514
	// RVA: 0x1A6CF04 Offset: 0x1A6CF04 VA: 0x1A6CF04 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45524 Offset: 0xD45524 VA: 0xD45524
	// RVA: 0x1A6CF0C Offset: 0x1A6CF0C VA: 0x1A6CF0C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45534 Offset: 0xD45534 VA: 0xD45534
	// RVA: 0x1A6CF20 Offset: 0x1A6CF20 VA: 0x1A6CF20 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE170 Offset: 0xCAE170 VA: 0xCAE170
private sealed class TitleInfoEventDailyPointItemComponent.<PlaySubLabelFadeAnimation_IE>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 5833
{
	// Fields
	internal float <timer>__1; // 0x10
	internal float duration; // 0x14
	internal float fromAlpha; // 0x18
	internal float toAlpha; // 0x1C
	internal TitleInfoEventDailyPointItemComponent $this; // 0x20
	internal object $current; // 0x28
	internal bool $disposing; // 0x30
	internal int $PC; // 0x34

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD45544 Offset: 0xD45544 VA: 0xD45544
	// RVA: 0x1A6CAF4 Offset: 0x1A6CAF4 VA: 0x1A6CAF4
	public void .ctor() { }

	// RVA: 0x1A6D324 Offset: 0x1A6D324 VA: 0x1A6D324 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45554 Offset: 0xD45554 VA: 0xD45554
	// RVA: 0x1A6D4E0 Offset: 0x1A6D4E0 VA: 0x1A6D4E0 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45564 Offset: 0xD45564 VA: 0xD45564
	// RVA: 0x1A6D4E8 Offset: 0x1A6D4E8 VA: 0x1A6D4E8 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45574 Offset: 0xD45574 VA: 0xD45574
	// RVA: 0x1A6D4F0 Offset: 0x1A6D4F0 VA: 0x1A6D4F0 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45584 Offset: 0xD45584 VA: 0xD45584
	// RVA: 0x1A6D504 Offset: 0x1A6D504 VA: 0x1A6D504 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class TitleInfoEventFactory : BaseMonoBehaviour // TypeDefIndex: 5834
{
	// Fields
	private static readonly string SPRITE_NAME_TITLE; // 0x0
	private static readonly string SPRITE_NAME_POSSIBLE; // 0x8
	private static readonly string SPRITE_NAME_LINE; // 0x10
	private static readonly string SPRITE_NAME_BG_RATE; // 0x18
	private static readonly string OBJECT_NAME_EFFECT_1; // 0x20
	private static readonly string OBJECT_NAME_EFFECT_2; // 0x28
	private static readonly string EFFECT_ANIMATION_START_1; // 0x30
	private static readonly string EFFECT_ANIMATION_START_2; // 0x38
	[SerializeField] // RVA: 0xCBD0FC Offset: 0xCBD0FC VA: 0xCBD0FC
	private UISprite titleSprite; // 0x18
	[SerializeField] // RVA: 0xCBD10C Offset: 0xCBD10C VA: 0xCBD10C
	private UIGrid grid; // 0x20
	[SerializeField] // RVA: 0xCBD11C Offset: 0xCBD11C VA: 0xCBD11C
	private UISprite createSprite; // 0x28
	[SerializeField] // RVA: 0xCBD12C Offset: 0xCBD12C VA: 0xCBD12C
	private UISprite lineSprite; // 0x30
	[SerializeField] // RVA: 0xCBD13C Offset: 0xCBD13C VA: 0xCBD13C
	private Transform RateBase; // 0x38
	[SerializeField] // RVA: 0xCBD14C Offset: 0xCBD14C VA: 0xCBD14C
	private UISprite bgRateSprite; // 0x40
	[SerializeField] // RVA: 0xCBD15C Offset: 0xCBD15C VA: 0xCBD15C
	private UILabel rateLabel; // 0x48
	[SerializeField] // RVA: 0xCBD16C Offset: 0xCBD16C VA: 0xCBD16C
	private GameObject titleInfoEventFactoryUnitPrefab; // 0x50
	[SerializeField] // RVA: 0xCBD17C Offset: 0xCBD17C VA: 0xCBD17C
	private Vector3 lvUpAnimetionOffset; // 0x58
	[SerializeField] // RVA: 0xCBD18C Offset: 0xCBD18C VA: 0xCBD18C
	private float lvUpIconCreateTime; // 0x64
	[SerializeField] // RVA: 0xCBD19C Offset: 0xCBD19C VA: 0xCBD19C
	private float rateChangeTime; // 0x68
	private EventDetailEntity eventDetailEntity; // 0x70
	private Dictionary<int, TitleInfoEventFactoryUnit> unitDictionary; // 0x78
	private AssetData effectAsset; // 0x80
	private SimpleAnimation simpleAnimationData; // 0x88
	private Animation animationData; // 0x90
	private Action animationEndCallback; // 0x98
	private TitleInfoEventFactory.EffectId effectIndex; // 0xA0
	private int lvUpIndex; // 0xA4
	private int lvUpCount; // 0xA8

	// Methods

	// RVA: 0x1A6DDC4 Offset: 0x1A6DDC4 VA: 0x1A6DDC4
	public void .ctor() { }

	// RVA: 0x1A66124 Offset: 0x1A66124 VA: 0x1A66124
	public void Setup(EventDetailEntity eventDetailEntity) { }

	// RVA: 0x1A6DDCC Offset: 0x1A6DDCC VA: 0x1A6DDCC
	public void Open() { }

	// RVA: 0x1A6E5DC Offset: 0x1A6E5DC VA: 0x1A6E5DC
	public void Close() { }

	// RVA: 0x1A6E758 Offset: 0x1A6E758 VA: 0x1A6E758
	private void Update() { }

	// RVA: 0x1A6EF24 Offset: 0x1A6EF24 VA: 0x1A6EF24
	public void StartLvUpEffect(ShopEntity shopEntity, int buyCount, Action callback, AssetData effectAsset) { }

	// RVA: 0x1A6F550 Offset: 0x1A6F550 VA: 0x1A6F550
	private void LvUpIconCreate() { }

	// RVA: 0x1A6EB60 Offset: 0x1A6EB60 VA: 0x1A6EB60
	private void StartRateEffect() { }

	// RVA: 0x1A6F614 Offset: 0x1A6F614 VA: 0x1A6F614
	private void RateChange() { }

	// RVA: 0x1A6F8DC Offset: 0x1A6F8DC VA: 0x1A6F8DC
	private static void .cctor() { }
}

// Namespace: 
private enum TitleInfoEventFactory.EffectId // TypeDefIndex: 5835
{
	// Fields
	public int value__; // 0x0
	public const TitleInfoEventFactory.EffectId NONE = 0;
	public const TitleInfoEventFactory.EffectId FACTORY = 1;
	public const TitleInfoEventFactory.EffectId RATE = 2;
}

// Namespace: 
public class TitleInfoEventFactoryUnit : BaseMonoBehaviour // TypeDefIndex: 5836
{
	// Fields
	private static readonly string SPRITE_NAME_ICON; // 0x0
	[SerializeField] // RVA: 0xCBD1AC Offset: 0xCBD1AC VA: 0xCBD1AC
	private UIGrid grid; // 0x18
	[SerializeField] // RVA: 0xCBD1BC Offset: 0xCBD1BC VA: 0xCBD1BC
	private UISprite iconSprite; // 0x20
	[SerializeField] // RVA: 0xCBD1CC Offset: 0xCBD1CC VA: 0xCBD1CC
	private Transform lvBase; // 0x28
	[SerializeField] // RVA: 0xCBD1DC Offset: 0xCBD1DC VA: 0xCBD1DC
	private UILabel lvLabel; // 0x30
	[SerializeField] // RVA: 0xCBD1EC Offset: 0xCBD1EC VA: 0xCBD1EC
	private UILabel lvLeftLabel; // 0x38
	[SerializeField] // RVA: 0xCBD1FC Offset: 0xCBD1FC VA: 0xCBD1FC
	private float lvUpAnimetionTime; // 0x40
	private int lv; // 0x44

	// Methods

	// RVA: 0x1A6F9C8 Offset: 0x1A6F9C8 VA: 0x1A6F9C8
	public void .ctor() { }

	// RVA: 0x1A6E478 Offset: 0x1A6E478 VA: 0x1A6E478
	public void Open(int eventId, int factoryId, int lv) { }

	// RVA: 0x1A6F5FC Offset: 0x1A6F5FC VA: 0x1A6F5FC
	public void LvUp(int count) { }

	// RVA: 0x1A6F9D0 Offset: 0x1A6F9D0 VA: 0x1A6F9D0
	private void CreateIcon(int count, bool isAnimation) { }

	// RVA: 0x1A6F4B8 Offset: 0x1A6F4B8 VA: 0x1A6F4B8
	public Vector3 GetLvUpEffectOffset() { }

	// RVA: 0x1A6FEE4 Offset: 0x1A6FEE4 VA: 0x1A6FEE4
	private static void .cctor() { }
}

// Namespace: 
public abstract class TitleInfoEventInfoComponent : MonoBehaviour // TypeDefIndex: 5837
{
	// Fields
	[HideInInspector] // RVA: 0xCBD20C Offset: 0xCBD20C VA: 0xCBD20C
	public bool isMovedPos; // 0x18

	// Methods

	// RVA: 0x1A6BB54 Offset: 0x1A6BB54 VA: 0x1A6BB54
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract bool IsDispPossible();

	// RVA: -1 Offset: -1 Slot: 5
	public abstract void UpdateDisp();

	// RVA: -1 Offset: -1 Slot: 6
	public abstract bool IsEventRaidBoss();
}

// Namespace: 
public class TitleInfoEventItemComponent : TitleInfoEventInfoComponent // TypeDefIndex: 5838
{
	// Fields
	private static readonly float EVENT_ITEM_SCALE_DEFAULT; // 0x0
	private static readonly float EVENT_ITEM_SCALE_VS; // 0x4
	private static readonly string TITLE_SP_ITEM_NAME_PREFIX; // 0x8
	private static readonly string EVENT_ITEM_VS_BASE_SP_NAME; // 0x10
	private static readonly string EVENT_GPOINT_VS_BASE_SP_NAME; // 0x18
	[SerializeField] // RVA: 0xCBD21C Offset: 0xCBD21C VA: 0xCBD21C
	private GameObject mEventItemPrefab; // 0x20
	[SerializeField] // RVA: 0xCBD22C Offset: 0xCBD22C VA: 0xCBD22C
	private UISprite mStrSp; // 0x28
	[SerializeField] // RVA: 0xCBD23C Offset: 0xCBD23C VA: 0xCBD23C
	private UIGrid itemGrid; // 0x30
	[SerializeField] // RVA: 0xCBD24C Offset: 0xCBD24C VA: 0xCBD24C
	private GameObject[] mItemObjParents; // 0x38
	private EventItemComponent[] mEventItemComponents; // 0x40

	// Methods

	// RVA: 0x1A6FF40 Offset: 0x1A6FF40 VA: 0x1A6FF40
	public void .ctor() { }

	// RVA: 0x1A6FF48 Offset: 0x1A6FF48 VA: 0x1A6FF48
	public void Setup(int[] item_ids, TitleInfoEventItemComponent.DispType[] disp_types, int eventId, int titleImageId = 0) { }

	// RVA: 0x1A70B08 Offset: 0x1A70B08 VA: 0x1A70B08
	public void OnDestroy() { }

	// RVA: 0x1A70970 Offset: 0x1A70970 VA: 0x1A70970
	private void Destroy() { }

	// RVA: 0x1A70B0C Offset: 0x1A70B0C VA: 0x1A70B0C Slot: 4
	public override bool IsDispPossible() { }

	// RVA: 0x1A70B2C Offset: 0x1A70B2C VA: 0x1A70B2C Slot: 5
	public override void UpdateDisp() { }

	// RVA: 0x1A70C0C Offset: 0x1A70C0C VA: 0x1A70C0C Slot: 6
	public override bool IsEventRaidBoss() { }

	// RVA: 0x1A70C14 Offset: 0x1A70C14 VA: 0x1A70C14
	private static void .cctor() { }
}

// Namespace: 
public enum TitleInfoEventItemComponent.DispType // TypeDefIndex: 5839
{
	// Fields
	public int value__; // 0x0
	public const TitleInfoEventItemComponent.DispType ITEM = 0;
	public const TitleInfoEventItemComponent.DispType POINT = 1;
	public const TitleInfoEventItemComponent.DispType MISSION = 2;
	public const TitleInfoEventItemComponent.DispType RAID_DAMAGE_POINT = 3;
	public const TitleInfoEventItemComponent.DispType EVENT_GROUP_POINT = 4;
	public const TitleInfoEventItemComponent.DispType DAILY_MISSION = 5;
}

// Namespace: 
public class TitleInfoEventLeagueVsComponent : TitleInfoEventInfoComponent // TypeDefIndex: 5840
{
	// Fields
	private static readonly Vector3 RAIDBOSS_ANIM_ROOT_POS; // 0x0
	private static readonly float ANIM_DURATION_FRAME_IN; // 0xC
	[SerializeField] // RVA: 0xCBD25C Offset: 0xCBD25C VA: 0xCBD25C
	private UISprite[] hpBar; // 0x20
	[SerializeField] // RVA: 0xCBD26C Offset: 0xCBD26C VA: 0xCBD26C
	private UISlider[] hpBarSlider; // 0x28
	[SerializeField] // RVA: 0xCBD27C Offset: 0xCBD27C VA: 0xCBD27C
	private UILabel restTimeLabel; // 0x30
	[SerializeField] // RVA: 0xCBD28C Offset: 0xCBD28C VA: 0xCBD28C
	private UISprite[] groupIcon; // 0x38
	[SerializeField] // RVA: 0xCBD29C Offset: 0xCBD29C VA: 0xCBD29C
	private UISprite modeName; // 0x40
	[SerializeField] // RVA: 0xCBD2AC Offset: 0xCBD2AC VA: 0xCBD2AC
	private UISprite baseWindow; // 0x48
	[SerializeField] // RVA: 0xCBD2BC Offset: 0xCBD2BC VA: 0xCBD2BC
	private GameObject resultPanel; // 0x50
	[SerializeField] // RVA: 0xCBD2CC Offset: 0xCBD2CC VA: 0xCBD2CC
	private MaskFade maskFade; // 0x58
	[SerializeField] // RVA: 0xCBD2DC Offset: 0xCBD2DC VA: 0xCBD2DC
	private UISprite[] splitIcon; // 0x60
	[SerializeField] // RVA: 0xCBD2EC Offset: 0xCBD2EC VA: 0xCBD2EC
	private UISprite hpFrame; // 0x68
	[SerializeField] // RVA: 0xCBD2FC Offset: 0xCBD2FC VA: 0xCBD2FC
	private UISprite hpBack; // 0x70
	[SerializeField] // RVA: 0xCBD30C Offset: 0xCBD30C VA: 0xCBD30C
	private GameObject gaugeEffectPanel; // 0x78
	[SerializeField] // RVA: 0xCBD31C Offset: 0xCBD31C VA: 0xCBD31C
	private UISprite maskSp; // 0x80
	[SerializeField] // RVA: 0xCBD32C Offset: 0xCBD32C VA: 0xCBD32C
	private UISprite colliderSp; // 0x88
	private Vector3 originPos; // 0x90
	private long endTime; // 0xA0
	private Action frameInCallBack; // 0xA8
	private EventPointEntity evPointEnt; // 0xB0
	private bool isDispRestTime; // 0xB8

	// Methods

	// RVA: 0x1A71A00 Offset: 0x1A71A00 VA: 0x1A71A00
	public void .ctor() { }

	// RVA: 0x1A71A08 Offset: 0x1A71A08 VA: 0x1A71A08 Slot: 4
	public override bool IsDispPossible() { }

	// RVA: 0x1A71A10 Offset: 0x1A71A10 VA: 0x1A71A10
	public void OnDestroy() { }

	// RVA: 0x1A71A14 Offset: 0x1A71A14 VA: 0x1A71A14
	private void Destroy() { }

	// RVA: 0x1A71A18 Offset: 0x1A71A18 VA: 0x1A71A18 Slot: 5
	public override void UpdateDisp() { }

	// RVA: 0x1A71A1C Offset: 0x1A71A1C VA: 0x1A71A1C Slot: 6
	public override bool IsEventRaidBoss() { }

	// RVA: 0x1A71A24 Offset: 0x1A71A24 VA: 0x1A71A24
	private void Update() { }

	// RVA: 0x1A71B9C Offset: 0x1A71B9C VA: 0x1A71B9C
	public EventPointEntity getEventPointEntity() { }

	// RVA: 0x1A71BA4 Offset: 0x1A71BA4 VA: 0x1A71BA4
	public void Setup(EventPointEntity eventPointEntity, int eventId, AssetData effectAssetData, bool isDispRestTime) { }

	// RVA: 0x1A72A60 Offset: 0x1A72A60 VA: 0x1A72A60
	private double ConvertPointToRate(long point, long maxPoint) { }

	// RVA: 0x1A71A28 Offset: 0x1A71A28 VA: 0x1A71A28
	private void restTimeUpdate() { }

	// RVA: 0x1A73228 Offset: 0x1A73228 VA: 0x1A73228
	public void FrameIn(Action callback) { }

	// RVA: 0x1A73404 Offset: 0x1A73404 VA: 0x1A73404
	private void FrameInFinish() { }

	// RVA: 0x1A73420 Offset: 0x1A73420 VA: 0x1A73420
	public void FrameOut() { }

	// RVA: 0x1A73580 Offset: 0x1A73580 VA: 0x1A73580
	private void FrameOutFinish() { }

	// RVA: 0x1A73584 Offset: 0x1A73584 VA: 0x1A73584
	public void gaugeEvent(int groupId, int eventId, AssetData effectAssetData, Action callback) { }

	// RVA: 0x1A73B3C Offset: 0x1A73B3C VA: 0x1A73B3C
	public void ResultEffect(EventPointVsResultAction.GROUP_WIN winType, AssetData effectAssetData, Action callback) { }

	// RVA: 0x1A60E94 Offset: 0x1A60E94 VA: 0x1A60E94
	public void OpenResultPointDialog(EventPointEntity evPointEnt, EventPointWinReward rewardInfo, Action callback) { }

	// RVA: 0x1A73E04 Offset: 0x1A73E04 VA: 0x1A73E04
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE180 Offset: 0xCAE180 VA: 0xCAE180
private sealed class TitleInfoEventLeagueVsComponent.<ResultEffect>c__AnonStorey0 // TypeDefIndex: 5841
{
	// Fields
	internal EventPointVsResultAction effect; // 0x10
	internal BoxCollider coll; // 0x18
	internal Action callback; // 0x20
	internal TitleInfoEventLeagueVsComponent $this; // 0x28

	// Methods

	// RVA: 0x1A73DFC Offset: 0x1A73DFC VA: 0x1A73DFC
	public void .ctor() { }

	// RVA: 0x1A73EA0 Offset: 0x1A73EA0 VA: 0x1A73EA0
	internal void <>m__0() { }

	// RVA: 0x1A73F4C Offset: 0x1A73F4C VA: 0x1A73F4C
	internal void <>m__1() { }
}

// Namespace: 
public class TitleInfoEventLeagueVsGaugeEffect : MonoBehaviour // TypeDefIndex: 5842
{
	// Fields
	[SerializeField] // RVA: 0xCBD33C Offset: 0xCBD33C VA: 0xCBD33C
	private ParticleSystem[] gaugeParticle; // 0x18
	[SerializeField] // RVA: 0xCBD34C Offset: 0xCBD34C VA: 0xCBD34C
	private SimpleAnimation gaugeSimpleAnim; // 0x20
	[SerializeField] // RVA: 0xCBD35C Offset: 0xCBD35C VA: 0xCBD35C
	private Animation gaugeAnim; // 0x28
	private readonly float GAUGE_SIZE_DEF; // 0x30
	private readonly float GAUGE_SIZE_FACTOR; // 0x34

	// Methods

	// RVA: 0x1A7406C Offset: 0x1A7406C VA: 0x1A7406C
	public void .ctor() { }

	// RVA: 0x1A72A70 Offset: 0x1A72A70 VA: 0x1A72A70
	public void setup(long point1, long point2, bool isBoss) { }

	// RVA: 0x1A74088 Offset: 0x1A74088 VA: 0x1A74088
	private double ConvertPointToRate(long point, long maxPoint) { }
}

// Namespace: 
public enum TitleInfoEventLeagueVsGaugeEffect.GaugeType // TypeDefIndex: 5843
{
	// Fields
	public int value__; // 0x0
	public const TitleInfoEventLeagueVsGaugeEffect.GaugeType BLUE = 0;
	public const TitleInfoEventLeagueVsGaugeEffect.GaugeType RED = 1;
	public const TitleInfoEventLeagueVsGaugeEffect.GaugeType GOLD = 2;
	public const TitleInfoEventLeagueVsGaugeEffect.GaugeType SILVER = 3;
}

// Namespace: 
public class TitleInfoEventLeagueVsGaugeFlashEffect : MonoBehaviour // TypeDefIndex: 5844
{
	// Fields
	[SerializeField] // RVA: 0xCBD36C Offset: 0xCBD36C VA: 0xCBD36C
	private UIProgressBar[] gaugeBar; // 0x18
	[SerializeField] // RVA: 0xCBD37C Offset: 0xCBD37C VA: 0xCBD37C
	private SimpleAnimation gaugeSimpleAnim; // 0x20
	[SerializeField] // RVA: 0xCBD38C Offset: 0xCBD38C VA: 0xCBD38C
	private Animation gaugeAnim; // 0x28
	private Action endCallBack; // 0x30

	// Methods

	// RVA: 0x1A74098 Offset: 0x1A74098 VA: 0x1A74098
	public void .ctor() { }

	// RVA: 0x1A73868 Offset: 0x1A73868 VA: 0x1A73868
	public void setup(int joinGroupId, long point1, long point2, Action callback) { }

	// RVA: 0x1A740B0 Offset: 0x1A740B0 VA: 0x1A740B0
	public void endAnim() { }

	// RVA: 0x1A740A0 Offset: 0x1A740A0 VA: 0x1A740A0
	private double ConvertPointToRate(long point, long maxPoint) { }
}

// Namespace: 
public enum TitleInfoEventLeagueVsGaugeFlashEffect.GaugeType // TypeDefIndex: 5845
{
	// Fields
	public int value__; // 0x0
	public const TitleInfoEventLeagueVsGaugeFlashEffect.GaugeType BLUE = 0;
	public const TitleInfoEventLeagueVsGaugeFlashEffect.GaugeType RED = 1;
}

// Namespace: 
public class TitleInfoEventLeagueVsStatusComponent : TitleInfoEventInfoComponent // TypeDefIndex: 5846
{
	// Fields
	private static readonly Vector3 FRAME_ANIM_OUT_POS_DELTA; // 0x0
	private static readonly float FRAME_ANIM_DURATION; // 0xC
	private static readonly float ENTRY_ANIM_DELAY; // 0x10
	[SerializeField] // RVA: 0xCBD39C Offset: 0xCBD39C VA: 0xCBD39C
	private UIWidget Root; // 0x20
	[SerializeField] // RVA: 0xCBD3AC Offset: 0xCBD3AC VA: 0xCBD3AC
	private UISprite title; // 0x28
	[SerializeField] // RVA: 0xCBD3BC Offset: 0xCBD3BC VA: 0xCBD3BC
	private UISprite backGround; // 0x30
	[SerializeField] // RVA: 0xCBD3CC Offset: 0xCBD3CC VA: 0xCBD3CC
	private UISprite statusName; // 0x38
	private Vector3 inPos; // 0x40
	private Vector3 outPos; // 0x4C
	private Action clearAnimCallBack; // 0x58

	// Methods

	// RVA: 0x1A740CC Offset: 0x1A740CC VA: 0x1A740CC
	public void .ctor() { }

	// RVA: 0x1A740D4 Offset: 0x1A740D4 VA: 0x1A740D4 Slot: 4
	public override bool IsDispPossible() { }

	// RVA: 0x1A740DC Offset: 0x1A740DC VA: 0x1A740DC
	public void OnDestroy() { }

	// RVA: 0x1A740E0 Offset: 0x1A740E0 VA: 0x1A740E0
	private void Destroy() { }

	// RVA: 0x1A740E4 Offset: 0x1A740E4 VA: 0x1A740E4 Slot: 5
	public override void UpdateDisp() { }

	// RVA: 0x1A740E8 Offset: 0x1A740E8 VA: 0x1A740E8 Slot: 6
	public override bool IsEventRaidBoss() { }

	// RVA: 0x1A740F0 Offset: 0x1A740F0 VA: 0x1A740F0
	public void setup(EventPointEntity eventPointEntity, int eventId) { }

	// RVA: 0x1A74B18 Offset: 0x1A74B18 VA: 0x1A74B18
	private double ConvertPointToRate(long point, long maxPoint) { }

	// RVA: 0x1A74B28 Offset: 0x1A74B28 VA: 0x1A74B28
	public void SetEntryAnim() { }

	// RVA: 0x1A74CF0 Offset: 0x1A74CF0 VA: 0x1A74CF0
	private void EntryAnim() { }

	// RVA: 0x1A74EC0 Offset: 0x1A74EC0 VA: 0x1A74EC0
	public void SetClearAnim() { }

	// RVA: 0x1A74EF8 Offset: 0x1A74EF8 VA: 0x1A74EF8
	public void StartClearAnim(Action cb) { }

	// RVA: 0x1A75210 Offset: 0x1A75210 VA: 0x1A75210
	private void AnimFrameOutEnd() { }

	// RVA: 0x1A7526C Offset: 0x1A7526C VA: 0x1A7526C
	private void clearAnimFinised() { }

	// RVA: 0x1A74CF8 Offset: 0x1A74CF8 VA: 0x1A74CF8
	public void FrameIn(string callFinished) { }

	// RVA: 0x1A75048 Offset: 0x1A75048 VA: 0x1A75048
	public void FrameOut(string callFinished) { }

	// RVA: 0x1A75280 Offset: 0x1A75280 VA: 0x1A75280
	public void FadeOut() { }

	// RVA: 0x1A75364 Offset: 0x1A75364 VA: 0x1A75364
	private static void .cctor() { }
}

// Namespace: 
public class TitleInfoEventOpenHeaderEffect : CommonEffectComponent // TypeDefIndex: 5847
{
	// Fields
	private Action changeUiCallback; // 0xA8
	private Action animEndCallback; // 0xB0

	// Methods

	// RVA: 0x1A75408 Offset: 0x1A75408 VA: 0x1A75408
	public void .ctor() { }

	// RVA: 0x1A75410 Offset: 0x1A75410 VA: 0x1A75410
	public void setup(int eventId, Action changeUiCallback, Action endCallback) { }

	// RVA: 0x1A754D8 Offset: 0x1A754D8 VA: 0x1A754D8
	public void changeUIFunc() { }

	// RVA: 0x1A754EC Offset: 0x1A754EC VA: 0x1A754EC
	public void animEndFunc() { }
}

// Namespace: 
public class TitleInfoEventRaceRankComponent : TitleInfoEventInfoComponent // TypeDefIndex: 5848
{
	// Fields
	private static readonly Vector3 RAIDBOSS_ANIM_ROOT_POS; // 0x0
	private static readonly float ANIM_DURATION_FRAME_IN; // 0xC
	private static readonly long DISP_RACE_SEC_TIME; // 0x10
	[SerializeField] // RVA: 0xCBD3DC Offset: 0xCBD3DC VA: 0xCBD3DC
	private UISprite[] rankSpr; // 0x20
	[SerializeField] // RVA: 0xCBD3EC Offset: 0xCBD3EC VA: 0xCBD3EC
	private UISprite[] carIcon; // 0x28
	[SerializeField] // RVA: 0xCBD3FC Offset: 0xCBD3FC VA: 0xCBD3FC
	private UISprite[] carBackSpr; // 0x30
	[SerializeField] // RVA: 0xCBD40C Offset: 0xCBD40C VA: 0xCBD40C
	private UISprite[] goalIcon; // 0x38
	[SerializeField] // RVA: 0xCBD41C Offset: 0xCBD41C VA: 0xCBD41C
	private Vector3 startPos; // 0x40
	[SerializeField] // RVA: 0xCBD42C Offset: 0xCBD42C VA: 0xCBD42C
	private Vector3 goalPos; // 0x4C
	private Vector3 originPos; // 0x58
	private long endTime; // 0x68
	private Action frameInCallBack; // 0x70

	// Methods

	// RVA: 0x1A75500 Offset: 0x1A75500 VA: 0x1A75500
	public void .ctor() { }

	// RVA: 0x1A75508 Offset: 0x1A75508 VA: 0x1A75508 Slot: 4
	public override bool IsDispPossible() { }

	// RVA: 0x1A75510 Offset: 0x1A75510 VA: 0x1A75510
	public void OnDestroy() { }

	// RVA: 0x1A75514 Offset: 0x1A75514 VA: 0x1A75514
	private void Destroy() { }

	// RVA: 0x1A75518 Offset: 0x1A75518 VA: 0x1A75518 Slot: 5
	public override void UpdateDisp() { }

	// RVA: 0x1A7551C Offset: 0x1A7551C VA: 0x1A7551C Slot: 6
	public override bool IsEventRaidBoss() { }

	// RVA: 0x1A75524 Offset: 0x1A75524 VA: 0x1A75524
	public void Setup(int eventId, int termId) { }

	// RVA: 0x1A76334 Offset: 0x1A76334 VA: 0x1A76334
	public void FrameIn(Action callback) { }
