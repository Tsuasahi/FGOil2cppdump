	public FsmGameObject performanceObject; // 0x50
	public FsmEvent PlayerEvent; // 0x58
	public FsmEvent EnemyEvent; // 0x60
	public FsmEvent AllEvent; // 0x68

	// Methods

	// RVA: 0x12F21B0 Offset: 0x12F21B0 VA: 0x12F21B0
	public void .ctor() { }

	// RVA: 0x12F21B8 Offset: 0x12F21B8 VA: 0x12F21B8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12F2250 Offset: 0x12F2250 VA: 0x12F2250
	private Target.PlayerTypeFlag GetTargetType(int funcIndex = -1) { }

	// RVA: 0x12F228C Offset: 0x12F228C VA: 0x12F228C
	private BattleActionData GetActionData() { }
}

// Namespace: 
public class FGOActionUtil // TypeDefIndex: 7902
{
	// Methods

	// RVA: 0x10B4264 Offset: 0x10B4264 VA: 0x10B4264
	public void .ctor() { }

	// RVA: 0x10B426C Offset: 0x10B426C VA: 0x10B426C
	public static GameObject getEffectObject(ResourceFolder folder, string name, GameObject actorObject) { }
}

// Namespace: HutongGames.PlayMaker.Actions
public class FGOActorActiveSwitch : FsmStateAction // TypeDefIndex: 7903
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58748 Offset: 0xC58748 VA: 0xC58748
	[CheckForComponentAttribute] // RVA: 0xC58748 Offset: 0xC58748 VA: 0xC58748
	public FsmGameObject performance; // 0x50
	public FsmGameObject exculusionActorObj; // 0x58
	[TooltipAttribute] // RVA: 0xC587BC Offset: 0xC587BC VA: 0xC587BC
	public FsmBool isEnemySearch; // 0x60
	public FsmBool setValue; // 0x68

	// Methods

	// RVA: 0x12F239C Offset: 0x12F239C VA: 0x12F239C
	public void .ctor() { }

	// RVA: 0x12F23A4 Offset: 0x12F23A4 VA: 0x12F23A4 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26480 Offset: 0xC26480 VA: 0xC26480
public class FGOActorAnimation : FsmStateAction // TypeDefIndex: 7904
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC587F4 Offset: 0xC587F4 VA: 0xC587F4
	[CheckForComponentAttribute] // RVA: 0xC587F4 Offset: 0xC587F4 VA: 0xC587F4
	public FsmGameObject actorObject; // 0x50
	public FGOActorAnimation.ANIMATIONNAME animationname; // 0x58
	public FsmString starttag; // 0x60
	public FsmEvent sendEvent; // 0x68
	public FsmBool endAnimationCall; // 0x70

	// Methods

	// RVA: 0x12F261C Offset: 0x12F261C VA: 0x12F261C
	public void .ctor() { }

	// RVA: 0x12F26B0 Offset: 0x12F26B0 VA: 0x12F26B0 Slot: 28
	public override void Reset() { }

	// RVA: 0x12F26B8 Offset: 0x12F26B8 VA: 0x12F26B8 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOActorAnimation.ANIMATIONNAME // TypeDefIndex: 7905
{
	// Fields
	public int value__; // 0x0
	public const FGOActorAnimation.ANIMATIONNAME NONE = 0;
	public const FGOActorAnimation.ANIMATIONNAME attack_a = 1;
	public const FGOActorAnimation.ANIMATIONNAME attack_b = 2;
	public const FGOActorAnimation.ANIMATIONNAME attack_q = 3;
	public const FGOActorAnimation.ANIMATIONNAME attack_gen = 4;
	public const FGOActorAnimation.ANIMATIONNAME spell = 5;
	public const FGOActorAnimation.ANIMATIONNAME damage_01 = 6;
	public const FGOActorAnimation.ANIMATIONNAME step_front = 7;
	public const FGOActorAnimation.ANIMATIONNAME step_back = 8;
	public const FGOActorAnimation.ANIMATIONNAME wait = 9;
	public const FGOActorAnimation.ANIMATIONNAME treasure_arms = 10;
	public const FGOActorAnimation.ANIMATIONNAME death_01 = 11;
	public const FGOActorAnimation.ANIMATIONNAME attack_ex = 12;
	public const FGOActorAnimation.ANIMATIONNAME attack_a02 = 13;
	public const FGOActorAnimation.ANIMATIONNAME attack_b02 = 14;
	public const FGOActorAnimation.ANIMATIONNAME attack_q02 = 15;
	public const FGOActorAnimation.ANIMATIONNAME attack_gen02 = 16;
	public const FGOActorAnimation.ANIMATIONNAME attack_ex02 = 17;
	public const FGOActorAnimation.ANIMATIONNAME attack_a03 = 18;
	public const FGOActorAnimation.ANIMATIONNAME attack_b03 = 19;
	public const FGOActorAnimation.ANIMATIONNAME attack_q03 = 20;
	public const FGOActorAnimation.ANIMATIONNAME attack_gen03 = 21;
	public const FGOActorAnimation.ANIMATIONNAME attack_ex03 = 22;
	public const FGOActorAnimation.ANIMATIONNAME spell02 = 23;
	public const FGOActorAnimation.ANIMATIONNAME spell03 = 24;
	public const FGOActorAnimation.ANIMATIONNAME step_back02 = 25;
	public const FGOActorAnimation.ANIMATIONNAME step_front02 = 26;
	public const FGOActorAnimation.ANIMATIONNAME attack_a04 = 27;
	public const FGOActorAnimation.ANIMATIONNAME attack_b04 = 28;
	public const FGOActorAnimation.ANIMATIONNAME attack_q04 = 29;
	public const FGOActorAnimation.ANIMATIONNAME attack_gen04 = 30;
	public const FGOActorAnimation.ANIMATIONNAME attack_ex04 = 31;
	public const FGOActorAnimation.ANIMATIONNAME damage_02 = 32;
	public const FGOActorAnimation.ANIMATIONNAME spell_loop = 33;
	public const FGOActorAnimation.ANIMATIONNAME treasureArms1_a = 34;
	public const FGOActorAnimation.ANIMATIONNAME treasureArms2_a = 35;
	public const FGOActorAnimation.ANIMATIONNAME treasureArms3_a = 36;
	public const FGOActorAnimation.ANIMATIONNAME treasureArms4_a = 37;
	public const FGOActorAnimation.ANIMATIONNAME treasureArms5_a = 38;
	public const FGOActorAnimation.ANIMATIONNAME wait02 = 39;
	public const FGOActorAnimation.ANIMATIONNAME wait03 = 40;
	public const FGOActorAnimation.ANIMATIONNAME attack_a05 = 41;
	public const FGOActorAnimation.ANIMATIONNAME attack_b05 = 42;
	public const FGOActorAnimation.ANIMATIONNAME attack_q05 = 43;
	public const FGOActorAnimation.ANIMATIONNAME attack_gen05 = 44;
	public const FGOActorAnimation.ANIMATIONNAME attack_ex05 = 45;
	public const FGOActorAnimation.ANIMATIONNAME sleep_wait01 = 46;
	public const FGOActorAnimation.ANIMATIONNAME spell04 = 47;
	public const FGOActorAnimation.ANIMATIONNAME spell05 = 48;
	public const FGOActorAnimation.ANIMATIONNAME counter_wait01 = 49;
	public const FGOActorAnimation.ANIMATIONNAME counter_attack01 = 50;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC264B8 Offset: 0xC264B8 VA: 0xC264B8
public class FGOActorBulr : FsmStateAction // TypeDefIndex: 7906
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58868 Offset: 0xC58868 VA: 0xC58868
	[CheckForComponentAttribute] // RVA: 0xC58868 Offset: 0xC58868 VA: 0xC58868
	public FsmGameObject actorObject; // 0x50
	public FGOActorBulr.MODE actionMode; // 0x58
	public FsmBool inputValidValue; // 0x60
	public FsmInt inputLagValue; // 0x68

	// Methods

	// RVA: 0x12F2970 Offset: 0x12F2970 VA: 0x12F2970
	public void .ctor() { }

	// RVA: 0x12F2978 Offset: 0x12F2978 VA: 0x12F2978 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOActorBulr.MODE // TypeDefIndex: 7907
{
	// Fields
	public int value__; // 0x0
	public const FGOActorBulr.MODE BULR_VALID = 0;
	public const FGOActorBulr.MODE BULR_LAG = 1;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC264F0 Offset: 0xC264F0 VA: 0xC264F0
public class FGOActorChangeColor : FsmStateAction // TypeDefIndex: 7908
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC588DC Offset: 0xC588DC VA: 0xC588DC
	[CheckForComponentAttribute] // RVA: 0xC588DC Offset: 0xC588DC VA: 0xC588DC
	public FsmGameObject actorObject; // 0x50
	public FsmColor mulColor; // 0x58
	public FsmColor addColor; // 0x60
	public FsmFloat time; // 0x68
	public iTween.EaseType easeType; // 0x70
	public FsmEvent ChangedEvent; // 0x78
	public bool realTime; // 0x80
	private float startTime; // 0x84
	private float timer; // 0x88

	// Methods

	// RVA: 0x12F2BA8 Offset: 0x12F2BA8 VA: 0x12F2BA8
	public void .ctor() { }

	// RVA: 0x12F2BB0 Offset: 0x12F2BB0 VA: 0x12F2BB0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12F35A0 Offset: 0x12F35A0 VA: 0x12F35A0 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26528 Offset: 0xC26528 VA: 0xC26528
public class FGOActorChangeDisp : FsmStateAction // TypeDefIndex: 7909
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58950 Offset: 0xC58950 VA: 0xC58950
	[CheckForComponentAttribute] // RVA: 0xC58950 Offset: 0xC58950 VA: 0xC58950
	public FsmGameObject actorObject; // 0x50
	[TooltipAttribute] // RVA: 0xC589C4 Offset: 0xC589C4 VA: 0xC589C4
	public FsmBool isDisp; // 0x58

	// Methods

	// RVA: 0x12F3670 Offset: 0x12F3670 VA: 0x12F3670
	public void .ctor() { }

	// RVA: 0x12F3678 Offset: 0x12F3678 VA: 0x12F3678 Slot: 28
	public override void Reset() { }

	// RVA: 0x12F36A8 Offset: 0x12F36A8 VA: 0x12F36A8 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26560 Offset: 0xC26560 VA: 0xC26560
public class FGOActorChangeLimitCount : FsmStateAction // TypeDefIndex: 7910
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC589FC Offset: 0xC589FC VA: 0xC589FC
	[CheckForComponentAttribute] // RVA: 0xC589FC Offset: 0xC589FC VA: 0xC589FC
	public FsmGameObject actorObject; // 0x50
	public FGOActorChangeLimitCount.ACTION act; // 0x58
	public int limit0; // 0x5C
	public int limit1; // 0x60
	public int limit2; // 0x64
	public int limit3; // 0x68
	public int limit4; // 0x6C

	// Methods

	// RVA: 0x12F37B4 Offset: 0x12F37B4 VA: 0x12F37B4
	public void .ctor() { }

	// RVA: 0x12F37BC Offset: 0x12F37BC VA: 0x12F37BC Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOActorChangeLimitCount.ACTION // TypeDefIndex: 7911
{
	// Fields
	public int value__; // 0x0
	public const FGOActorChangeLimitCount.ACTION CHANGE = 0;
	public const FGOActorChangeLimitCount.ACTION CHANGE_BASE = 1;
	public const FGOActorChangeLimitCount.ACTION RESET = 2;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26598 Offset: 0xC26598 VA: 0xC26598
public class FGOActorChangeShadowColor : FsmStateAction // TypeDefIndex: 7912
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58A70 Offset: 0xC58A70 VA: 0xC58A70
	[CheckForComponentAttribute] // RVA: 0xC58A70 Offset: 0xC58A70 VA: 0xC58A70
	public FsmGameObject actorObject; // 0x50
	public FsmColor targetColor; // 0x58

	// Methods

	// RVA: 0x12F3A9C Offset: 0x12F3A9C VA: 0x12F3A9C
	public void .ctor() { }

	// RVA: 0x12F3AA4 Offset: 0x12F3AA4 VA: 0x12F3AA4 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC265D0 Offset: 0xC265D0 VA: 0xC265D0
public class FGOActorCheck : FsmStateAction // TypeDefIndex: 7913
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58AE4 Offset: 0xC58AE4 VA: 0xC58AE4
	[CheckForComponentAttribute] // RVA: 0xC58AE4 Offset: 0xC58AE4 VA: 0xC58AE4
	public FsmGameObject actorObject; // 0x50
	public FGOActorCheck.CHECK check; // 0x58
	public FsmEvent TrueEvent; // 0x60
	public FsmEvent FalseEvent; // 0x68

	// Methods

	// RVA: 0x12F3C0C Offset: 0x12F3C0C VA: 0x12F3C0C
	public void .ctor() { }

	// RVA: 0x12F3C14 Offset: 0x12F3C14 VA: 0x12F3C14 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOActorCheck.CHECK // TypeDefIndex: 7914
{
	// Fields
	public int value__; // 0x0
	public const FGOActorCheck.CHECK NONE = 0;
	public const FGOActorCheck.CHECK PREVATTACK_ME = 1;
	public const FGOActorCheck.CHECK NEXTATTACK_ME = 2;
	public const FGOActorCheck.CHECK ISPLAYER = 3;
	public const FGOActorCheck.CHECK ISENEMY = 4;
	public const FGOActorCheck.CHECK STEP_IN = 5;
	public const FGOActorCheck.CHECK ISSHADOW = 6;
	public const FGOActorCheck.CHECK ISMONSTER = 7;
	public const FGOActorCheck.CHECK ISDEAD = 8;
	public const FGOActorCheck.CHECK IS_SUCCEEDED_MOVING_TO_SUBMEMBER = 9;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26608 Offset: 0xC26608 VA: 0xC26608
public class FGOActorCheckCombo : FsmStateAction // TypeDefIndex: 7915
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58B58 Offset: 0xC58B58 VA: 0xC58B58
	[CheckForComponentAttribute] // RVA: 0xC58B58 Offset: 0xC58B58 VA: 0xC58B58
	public FsmGameObject actorObject; // 0x50
	public FsmEvent NOCOMBO; // 0x58
	public FsmEvent THREE; // 0x60
	public FsmEvent FLASH; // 0x68
	public FsmEvent PAIR_FLASH; // 0x70
	public FsmEvent THREE_FLASH; // 0x78

	// Methods

	// RVA: 0x12F3E80 Offset: 0x12F3E80 VA: 0x12F3E80
	public void .ctor() { }

	// RVA: 0x12F3E88 Offset: 0x12F3E88 VA: 0x12F3E88 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26640 Offset: 0xC26640 VA: 0xC26640
public class FGOActorCheckLimitCount : FsmStateAction // TypeDefIndex: 7916
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58BCC Offset: 0xC58BCC VA: 0xC58BCC
	[CheckForComponentAttribute] // RVA: 0xC58BCC Offset: 0xC58BCC VA: 0xC58BCC
	public FsmGameObject actorObject; // 0x50
	public FsmInt originLimitCnt; // 0x58
	public FsmInt dispLimitCnt; // 0x60

	// Methods

	// RVA: 0x12F4008 Offset: 0x12F4008 VA: 0x12F4008
	public void .ctor() { }

	// RVA: 0x12F4010 Offset: 0x12F4010 VA: 0x12F4010 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26678 Offset: 0xC26678 VA: 0xC26678
public class FGOActorCheckNameTrue : FsmStateAction // TypeDefIndex: 7917
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58C40 Offset: 0xC58C40 VA: 0xC58C40
	[CheckForComponentAttribute] // RVA: 0xC58C40 Offset: 0xC58C40 VA: 0xC58C40
	public FsmGameObject actorObject; // 0x50
	public FsmEvent NameTrueEvent; // 0x58

	// Methods

	// RVA: 0x12F41C4 Offset: 0x12F41C4 VA: 0x12F41C4
	public void .ctor() { }

	// RVA: 0x12F41CC Offset: 0x12F41CC VA: 0x12F41CC Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC266B0 Offset: 0xC266B0 VA: 0xC266B0
public class FGOActorCheckScript : FsmStateAction // TypeDefIndex: 7918
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58CB4 Offset: 0xC58CB4 VA: 0xC58CB4
	[CheckForComponentAttribute] // RVA: 0xC58CB4 Offset: 0xC58CB4 VA: 0xC58CB4
	public FsmGameObject actorObject; // 0x50
	public FsmString scriptKey; // 0x58
	public FsmInt scriptValue; // 0x60
	public FsmEvent TrueEvent; // 0x68
	public FsmEvent FalseEvent; // 0x70

	// Methods

	// RVA: 0x12F42F4 Offset: 0x12F42F4 VA: 0x12F42F4
	public void .ctor() { }

	// RVA: 0x12F42FC Offset: 0x12F42FC VA: 0x12F42FC Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC266E8 Offset: 0xC266E8 VA: 0xC266E8
public class FGOActorCheckStepFlg : FsmStateAction // TypeDefIndex: 7919
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58D28 Offset: 0xC58D28 VA: 0xC58D28
	public FsmGameObject actObject; // 0x50
	public FsmEvent TrueEvent; // 0x58
	public FsmEvent FalseEvent; // 0x60

	// Methods

	// RVA: 0x12F44A4 Offset: 0x12F44A4 VA: 0x12F44A4
	public void .ctor() { }

	// RVA: 0x12F44AC Offset: 0x12F44AC VA: 0x12F44AC Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26720 Offset: 0xC26720 VA: 0xC26720
public class FGOActorCheckStepInBattleFlg : FsmStateAction // TypeDefIndex: 7920
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58D38 Offset: 0xC58D38 VA: 0xC58D38
	public FsmGameObject targetObject; // 0x50
	public FsmEvent TrueEvent; // 0x58
	public FsmEvent FalseEvent; // 0x60

	// Methods

	// RVA: 0x12F4614 Offset: 0x12F4614 VA: 0x12F4614
	public void .ctor() { }

	// RVA: 0x12F461C Offset: 0x12F461C VA: 0x12F461C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26758 Offset: 0xC26758 VA: 0xC26758
public class FGOActorCutIn : FsmStateAction // TypeDefIndex: 7921
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58D48 Offset: 0xC58D48 VA: 0xC58D48
	[CheckForComponentAttribute] // RVA: 0xC58D48 Offset: 0xC58D48 VA: 0xC58D48
	public FsmGameObject actorObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC58DBC Offset: 0xC58DBC VA: 0xC58DBC
	[CheckForComponentAttribute] // RVA: 0xC58DBC Offset: 0xC58DBC VA: 0xC58DBC
	public FsmGameObject performanceObject; // 0x58
	public FGOActorCutIn.TYPE type; // 0x60
	public FsmString filename; // 0x68
	public FsmVector3 poppos; // 0x70

	// Methods

	// RVA: 0x12F4710 Offset: 0x12F4710 VA: 0x12F4710
	public void .ctor() { }

	// RVA: 0x12F4720 Offset: 0x12F4720 VA: 0x12F4720 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOActorCutIn.TYPE // TypeDefIndex: 7922
{
	// Fields
	public int value__; // 0x0
	public const FGOActorCutIn.TYPE RTLD = 1;
	public const FGOActorCutIn.TYPE LTRD = 2;
	public const FGOActorCutIn.TYPE CENTER = 3;
	public const FGOActorCutIn.TYPE INPUT_NAME = 4;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26790 Offset: 0xC26790 VA: 0xC26790
public class FGOActorDeadEffect : FsmStateAction // TypeDefIndex: 7923
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58E30 Offset: 0xC58E30 VA: 0xC58E30
	public FsmGameObject targetObject; // 0x50

	// Methods

	// RVA: 0x12F4960 Offset: 0x12F4960 VA: 0x12F4960
	public void .ctor() { }

	// RVA: 0x12F4968 Offset: 0x12F4968 VA: 0x12F4968 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC267C8 Offset: 0xC267C8 VA: 0xC267C8
public class FGOActorDelete : FsmStateAction // TypeDefIndex: 7924
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58E40 Offset: 0xC58E40 VA: 0xC58E40
	[CheckForComponentAttribute] // RVA: 0xC58E40 Offset: 0xC58E40 VA: 0xC58E40
	public FsmGameObject actorObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC58EB4 Offset: 0xC58EB4 VA: 0xC58EB4
	[CheckForComponentAttribute] // RVA: 0xC58EB4 Offset: 0xC58EB4 VA: 0xC58EB4
	public FsmGameObject performanceObject; // 0x58

	// Methods

	// RVA: 0x12F4A40 Offset: 0x12F4A40 VA: 0x12F4A40
	public void .ctor() { }

	// RVA: 0x12F4A48 Offset: 0x12F4A48 VA: 0x12F4A48 Slot: 28
	public override void Reset() { }

	// RVA: 0x12F4A50 Offset: 0x12F4A50 VA: 0x12F4A50 Slot: 32
	public override void OnEnter() { }

	// RVA: -1 Offset: -1
	protected T GetTargetComponent<T>(GameObject obj, T defValue) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1F90C Offset: 0x1C1F90C VA: 0x1C1F90C
	|-FGOActorDelete.GetTargetComponent<BattleActorControl>
	|-FGOActorDelete.GetTargetComponent<BattlePerformance>
	|-FGOActorDelete.GetTargetComponent<object>
	*/

	// RVA: 0x12F4B8C Offset: 0x12F4B8C VA: 0x12F4B8C
	protected void DeleteTarget(BattleActorControl actor, BattlePerformance perf) { }

	// RVA: 0x12F4D9C Offset: 0x12F4D9C VA: 0x12F4D9C
	protected void DeleteServant(BattleActorControl actor, BattlePerformance perf, int index) { }

	// RVA: 0x12F4E54 Offset: 0x12F4E54 VA: 0x12F4E54
	protected void DeleteStatus(BattlePerformance perf, int index, bool isEnemy) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26800 Offset: 0xC26800 VA: 0xC26800
public class FGOActorEffect : FsmStateAction // TypeDefIndex: 7925
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58F28 Offset: 0xC58F28 VA: 0xC58F28
	[CheckForComponentAttribute] // RVA: 0xC58F28 Offset: 0xC58F28 VA: 0xC58F28
	public FsmGameObject actorObject; // 0x50
	public FGOActorEffect.PROC proctype; // 0x58
	public FsmString effectname; // 0x60
	public FsmVector3 localpos; // 0x68
	public FsmBool sideflip; // 0x70
	public FsmString actorside; // 0x78
	public FsmGameObject storeObject; // 0x80

	// Methods

	// RVA: 0x12F4ECC Offset: 0x12F4ECC VA: 0x12F4ECC
	public void .ctor() { }

	// RVA: 0x12F4ED4 Offset: 0x12F4ED4 VA: 0x12F4ED4 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOActorEffect.PROC // TypeDefIndex: 7926
{
	// Fields
	public int value__; // 0x0
	public const FGOActorEffect.PROC NAME_INPUT = 0;
	public const FGOActorEffect.PROC DAMAGE_1 = 1;
	public const FGOActorEffect.PROC DAMAGE_2 = 2;
	public const FGOActorEffect.PROC DAMAGE_3 = 3;
	public const FGOActorEffect.PROC DAMAGE_4 = 4;
	public const FGOActorEffect.PROC DAMAGE_5 = 5;
	public const FGOActorEffect.PROC DAMAGE_6 = 6;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26838 Offset: 0xC26838 VA: 0xC26838
public class FGOActorEffectSwitch : FsmStateAction // TypeDefIndex: 7927
{
	// Fields
	public FGOActorEffectSwitch.Data[] targets; // 0x50
	public bool isTargetAll; // 0x58
	public bool isActiveAll; // 0x59
	[RequiredFieldAttribute] // RVA: 0xC58F9C Offset: 0xC58F9C VA: 0xC58F9C
	[CheckForComponentAttribute] // RVA: 0xC58F9C Offset: 0xC58F9C VA: 0xC58F9C
	public FsmGameObject actorObject; // 0x60

	// Methods

	// RVA: 0x12F5100 Offset: 0x12F5100 VA: 0x12F5100
	public void .ctor() { }

	// RVA: 0x12F5108 Offset: 0x12F5108 VA: 0x12F5108 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
[Serializable]
public class FGOActorEffectSwitch.Data // TypeDefIndex: 7928
{
	// Fields
	public string name; // 0x10
	public bool isActive; // 0x18
	public bool isPerfectMatchingMode; // 0x19

	// Methods

	// RVA: 0x12F5318 Offset: 0x12F5318 VA: 0x12F5318
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26870 Offset: 0xC26870 VA: 0xC26870
public class FGOActorGetScript : FsmStateAction // TypeDefIndex: 7929
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC59010 Offset: 0xC59010 VA: 0xC59010
	[CheckForComponentAttribute] // RVA: 0xC59010 Offset: 0xC59010 VA: 0xC59010
	public FsmGameObject actorObject; // 0x50
	public FsmString scriptKey; // 0x58
	public FsmInt storeInt; // 0x60

	// Methods

	// RVA: 0x12F5320 Offset: 0x12F5320 VA: 0x12F5320
	public void .ctor() { }

	// RVA: 0x12F5328 Offset: 0x12F5328 VA: 0x12F5328 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC268A8 Offset: 0xC268A8 VA: 0xC268A8
public class FGOActorHideChr : FsmStateAction // TypeDefIndex: 7930
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC59084 Offset: 0xC59084 VA: 0xC59084
	[CheckForComponentAttribute] // RVA: 0xC59084 Offset: 0xC59084 VA: 0xC59084
	public FsmGameObject actorObject; // 0x50
	public bool hideFlg; // 0x58

	// Methods

	// RVA: 0x12F5484 Offset: 0x12F5484 VA: 0x12F5484
	public void .ctor() { }

	// RVA: 0x12F5494 Offset: 0x12F5494 VA: 0x12F5494 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC268E0 Offset: 0xC268E0 VA: 0xC268E0
public class FGOActorHitDamageEffect : FsmStateAction // TypeDefIndex: 7931
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC590F8 Offset: 0xC590F8 VA: 0xC590F8
	[TooltipAttribute] // RVA: 0xC590F8 Offset: 0xC590F8 VA: 0xC590F8
	[CheckForComponentAttribute] // RVA: 0xC590F8 Offset: 0xC590F8 VA: 0xC590F8
	public FsmGameObject actorObject; // 0x50
	[TooltipAttribute] // RVA: 0xC59190 Offset: 0xC59190 VA: 0xC59190
	public ResourceFolder resourceFolder; // 0x58
	[TooltipAttribute] // RVA: 0xC591C8 Offset: 0xC591C8 VA: 0xC591C8
	public FileName.HIT_EFFECT effecttype; // 0x5C
	[CheckForComponentAttribute] // RVA: 0xC59200 Offset: 0xC59200 VA: 0xC59200
	public FsmGameObject targetObject; // 0x60
	public FsmString nodename; // 0x68
	public FsmVector3 position; // 0x70
	public FsmBool isParent; // 0x78
	public FsmGameObject storeObject; // 0x80
	public FsmInt startValue; // 0x88
	public FsmInt countValue; // 0x90

	// Methods

	// RVA: 0x12F55B4 Offset: 0x12F55B4 VA: 0x12F55B4
	public void .ctor() { }

	// RVA: 0x12F55BC Offset: 0x12F55BC VA: 0x12F55BC Slot: 28
	public override void Reset() { }

	// RVA: 0x12F55C8 Offset: 0x12F55C8 VA: 0x12F55C8 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26918 Offset: 0xC26918 VA: 0xC26918
public class FGOActorLogic : FsmStateAction // TypeDefIndex: 7932
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC59264 Offset: 0xC59264 VA: 0xC59264
	[CheckForComponentAttribute] // RVA: 0xC59264 Offset: 0xC59264 VA: 0xC59264
	public FsmGameObject actorObject; // 0x50
	public FGOActorLogic.LOGIC logic; // 0x58

	// Methods

	// RVA: 0x12F55CC Offset: 0x12F55CC VA: 0x12F55CC
	public void .ctor() { }

	// RVA: 0x12F55D4 Offset: 0x12F55D4 VA: 0x12F55D4 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOActorLogic.LOGIC // TypeDefIndex: 7933
{
	// Fields
	public int value__; // 0x0
	public const FGOActorLogic.LOGIC NONE = 0;
	public const FGOActorLogic.LOGIC END_FINISH = 1;
	public const FGOActorLogic.LOGIC ON_SKIP_VOICE = 2;
	public const FGOActorLogic.LOGIC OFF_SKIP_VOICE = 3;
	public const FGOActorLogic.LOGIC DROP_ITEM = 4;
	public const FGOActorLogic.LOGIC ON_DRESS = 5;
	public const FGOActorLogic.LOGIC OFF_DRESS = 6;
	public const FGOActorLogic.LOGIC LOAD_CALL = 7;
	public const FGOActorLogic.LOGIC STOP_VOICE = 8;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26950 Offset: 0xC26950 VA: 0xC26950
public class FGOActorMotion : FsmStateAction // TypeDefIndex: 7934
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC592D8 Offset: 0xC592D8 VA: 0xC592D8
	[CheckForComponentAttribute] // RVA: 0xC592D8 Offset: 0xC592D8 VA: 0xC592D8
	public FsmGameObject actorObject; // 0x50
	public FsmGameObject targetObject; // 0x58
	public BattleActorControl.POS position; // 0x60
	public float moveTime; // 0x64
	public FGOActorMotion.MOTION motion; // 0x68
	public FsmEvent sendEvent; // 0x70
	public FsmGameObject sendEventCallObject; // 0x78
	public FsmString sendEventCallMethod; // 0x80

	// Methods

	// RVA: 0x12F57D0 Offset: 0x12F57D0 VA: 0x12F57D0
	public void .ctor() { }

	// RVA: 0x12F57E4 Offset: 0x12F57E4 VA: 0x12F57E4 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public enum FGOActorMotion.MOTION // TypeDefIndex: 7935
{
	// Fields
	public int value__; // 0x0
	public const FGOActorMotion.MOTION NONE = 0;
	public const FGOActorMotion.MOTION JUMP = 1;
	public const FGOActorMotion.MOTION STEP = 2;
	public const FGOActorMotion.MOTION BACKSTEP = 3;
	public const FGOActorMotion.MOTION DASHATTACK = 4;
	public const FGOActorMotion.MOTION STEP_WAIT = 5;
	public const FGOActorMotion.MOTION TREASURE_ARMS = 6;
	public const FGOActorMotion.MOTION CANCEL = 7;
	public const FGOActorMotion.MOTION STEP_USE_PARAM = 8;
	public const FGOActorMotion.MOTION BACKSTEP_USE_PARAM = 9;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26988 Offset: 0xC26988 VA: 0xC26988
public class FGOActorNoblePhantasmc : FsmStateAction // TypeDefIndex: 7936
{
	// Fields
	[CheckForComponentAttribute] // RVA: 0xC5934C Offset: 0xC5934C VA: 0xC5934C
	public FsmGameObject actorObject; // 0x50
	public FsmGameObject battlePerformance; // 0x58
	public FsmInt tagValue; // 0x60
	public bool whiteInFlg; // 0x68

	// Methods

	// RVA: 0x12F5D54 Offset: 0x12F5D54 VA: 0x12F5D54
	public void .ctor() { }

	// RVA: 0x12F5D64 Offset: 0x12F5D64 VA: 0x12F5D64 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12F5FA0 Offset: 0x12F5FA0 VA: 0x12F5FA0
	private void onEndNoblePhantasm() { }
}

// Namespace: HutongGames.PlayMaker.Actions
public class FGOActorNodeEffect : FsmStateAction // TypeDefIndex: 7937
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC593B0 Offset: 0xC593B0 VA: 0xC593B0
	public FsmGameObject popObject; // 0x50
	public FsmGameObject targetObject; // 0x58
	public FsmString nodename; // 0x60

	// Methods

	// RVA: 0x12F5FA8 Offset: 0x12F5FA8 VA: 0x12F5FA8
	public void .ctor() { }

	// RVA: 0x12F5FB0 Offset: 0x12F5FB0 VA: 0x12F5FB0 Slot: 28
	public override void Reset() { }

	// RVA: 0x12F5FBC Offset: 0x12F5FBC VA: 0x12F5FBC Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC269C0 Offset: 0xC269C0 VA: 0xC269C0
public class FGOActorNodeEffectEx : FsmStateAction // TypeDefIndex: 7938
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC593C0 Offset: 0xC593C0 VA: 0xC593C0
	[TooltipAttribute] // RVA: 0xC593C0 Offset: 0xC593C0 VA: 0xC593C0
	public ResourceFolder resourceFolder; // 0x4C
	[TooltipAttribute] // RVA: 0xC5940C Offset: 0xC5940C VA: 0xC5940C
	[CheckForComponentAttribute] // RVA: 0xC5940C Offset: 0xC5940C VA: 0xC5940C
	public FsmString gameObjectName; // 0x50
	public FsmGameObject targetObject; // 0x58
	public FsmString nodename; // 0x60
	public FsmVector3 position; // 0x68
	public FsmGameObject storeObject; // 0x70

	// Methods

	// RVA: 0x12F62E8 Offset: 0x12F62E8 VA: 0x12F62E8
	public void .ctor() { }

	// RVA: 0x12F62F0 Offset: 0x12F62F0 VA: 0x12F62F0 Slot: 28
	public override void Reset() { }

	// RVA: 0x12F6370 Offset: 0x12F6370 VA: 0x12F6370
	private GameObject getGameObject() { }

	// RVA: 0x12F64DC Offset: 0x12F64DC VA: 0x12F64DC Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC269F8 Offset: 0xC269F8 VA: 0xC269F8
public class FGOActorParticleEffectSwitch : FsmStateAction // TypeDefIndex: 7939
{
	// Fields
	public FsmGameObject actorObject; // 0x50
	[TooltipAttribute] // RVA: 0xC59494 Offset: 0xC59494 VA: 0xC59494
	public string particleEffectName; // 0x58
	[TooltipAttribute] // RVA: 0xC594CC Offset: 0xC594CC VA: 0xC594CC
	public string particleRootNodeName; // 0x60
	[TooltipAttribute] // RVA: 0xC59504 Offset: 0xC59504 VA: 0xC59504
	public FGOActorParticleEffectSwitch.PARTICLE_SWITCH_TYPE switchType; // 0x68
	[TooltipAttribute] // RVA: 0xC5953C Offset: 0xC5953C VA: 0xC5953C
	public FsmGameObject storeParticleEffect; // 0x70

	// Methods

	// RVA: 0x12F68F4 Offset: 0x12F68F4 VA: 0x12F68F4
	public void .ctor() { }

	// RVA: 0x12F68FC Offset: 0x12F68FC VA: 0x12F68FC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12F6954 Offset: 0x12F6954 VA: 0x12F6954 Slot: 62
	protected virtual void FindParticleEffectRootObject() { }

	// RVA: 0x12F6B58 Offset: 0x12F6B58 VA: 0x12F6B58
	protected void FindParticleEffect(GameObject rootObject) { }

	// RVA: 0x12F6938 Offset: 0x12F6938 VA: 0x12F6938
	protected void ParticleSwitch() { }

	// RVA: 0x12F6D9C Offset: 0x12F6D9C VA: 0x12F6D9C
	protected void ParticleStop() { }

	// RVA: 0x12F6F64 Offset: 0x12F6F64 VA: 0x12F6F64
	protected void ParticlePlay() { }
}

// Namespace: 
public enum FGOActorParticleEffectSwitch.PARTICLE_SWITCH_TYPE // TypeDefIndex: 7940
{
	// Fields
	public int value__; // 0x0
	public const FGOActorParticleEffectSwitch.PARTICLE_SWITCH_TYPE STOP = 0;
	public const FGOActorParticleEffectSwitch.PARTICLE_SWITCH_TYPE PLAY = 1;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26A30 Offset: 0xC26A30 VA: 0xC26A30
public class FGOActorParticleEffectSwitchMultiTarget : FGOActorParticleEffectSwitch // TypeDefIndex: 7941
{
	// Fields
	[TooltipAttribute] // RVA: 0xC59574 Offset: 0xC59574 VA: 0xC59574
	public BattleData.MULTI_TARGET_POS mainTargetPos; // 0x78
	[TooltipAttribute] // RVA: 0xC595AC Offset: 0xC595AC VA: 0xC595AC
	public FsmGameObject mainActorObject; // 0x80

	// Methods

	// RVA: 0x12F7160 Offset: 0x12F7160 VA: 0x12F7160
	public void .ctor() { }

	// RVA: 0x12F7170 Offset: 0x12F7170 VA: 0x12F7170 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12F71AC Offset: 0x12F71AC VA: 0x12F71AC Slot: 62
	protected override void FindParticleEffectRootObject() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26A68 Offset: 0xC26A68 VA: 0xC26A68
public class FGOActorResetMotionCompleteCount : FsmStateAction // TypeDefIndex: 7942
{
	// Methods

	// RVA: 0x12F75D0 Offset: 0x12F75D0 VA: 0x12F75D0
	public void .ctor() { }

	// RVA: 0x12F75D8 Offset: 0x12F75D8 VA: 0x12F75D8 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26AA0 Offset: 0xC26AA0 VA: 0xC26AA0
public class FGOActorRevertAttackTarget : FsmStateAction // TypeDefIndex: 7943
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC595E4 Offset: 0xC595E4 VA: 0xC595E4
	[CheckForComponentAttribute] // RVA: 0xC595E4 Offset: 0xC595E4 VA: 0xC595E4
	public FsmGameObject performanceObject; // 0x50
	public FsmGameObject targetObject; // 0x58

	// Methods

	// RVA: 0x12F76B8 Offset: 0x12F76B8 VA: 0x12F76B8
	public void .ctor() { }

	// RVA: 0x12F76C0 Offset: 0x12F76C0 VA: 0x12F76C0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12F77E8 Offset: 0x12F77E8 VA: 0x12F77E8
	protected bool CheckAbleCondtion(BattlePerformance perf) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26AD8 Offset: 0xC26AD8 VA: 0xC26AD8
public class FGOActorSendEvent : FsmStateAction // TypeDefIndex: 7944
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC59658 Offset: 0xC59658 VA: 0xC59658
	[CheckForComponentAttribute] // RVA: 0xC59658 Offset: 0xC59658 VA: 0xC59658
	public FsmGameObject actorObject; // 0x50
	public FsmString sendEvent; // 0x58

	// Methods

	// RVA: 0x12F78E4 Offset: 0x12F78E4 VA: 0x12F78E4
	public void .ctor() { }

	// RVA: 0x12F78EC Offset: 0x12F78EC VA: 0x12F78EC Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26B10 Offset: 0xC26B10 VA: 0xC26B10
public class FGOActorSetAttackTarget : FsmStateAction // TypeDefIndex: 7945
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC596CC Offset: 0xC596CC VA: 0xC596CC
	[CheckForComponentAttribute] // RVA: 0xC596CC Offset: 0xC596CC VA: 0xC596CC
	public FsmGameObject performanceObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC59740 Offset: 0xC59740 VA: 0xC59740
	[CheckForComponentAttribute] // RVA: 0xC59740 Offset: 0xC59740 VA: 0xC59740
	public FsmGameObject actorObject; // 0x58
	public FsmGameObject targetObject; // 0x60
	public bool isSelfSide; // 0x68
	public FGOActorSetAttackTarget.TARGET_POS targetPos; // 0x6C

	// Methods

	// RVA: 0x12F7A28 Offset: 0x12F7A28 VA: 0x12F7A28
	public void .ctor() { }

	// RVA: 0x12F7A38 Offset: 0x12F7A38 VA: 0x12F7A38 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12F7C6C Offset: 0x12F7C6C VA: 0x12F7C6C
	protected bool IsTargetEnemySide(bool isActorEnemy) { }

	// RVA: 0x12F7C84 Offset: 0x12F7C84 VA: 0x12F7C84
	protected int GetTargetPosIndex(bool isTargetEnemy, int pos) { }

	// RVA: 0x12F7D44 Offset: 0x12F7D44 VA: 0x12F7D44
	protected bool CheckAbleCondition(BattlePerformance perf, bool isEnemy, int targetPosIndex) { }

	// RVA: 0x12F7E10 Offset: 0x12F7E10 VA: 0x12F7E10
	protected GameObject GetTargetPosObject(BattlePerformance perf, int index, bool isEnemy) { }

	// RVA: -1 Offset: -1
	protected T GetTargetComponent<T>(GameObject obj, T defValue) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1F9C0 Offset: 0x1C1F9C0 VA: 0x1C1F9C0
	|-FGOActorSetAttackTarget.GetTargetComponent<BattleActorControl>
	|-FGOActorSetAttackTarget.GetTargetComponent<BattlePerformance>
	|-FGOActorSetAttackTarget.GetTargetComponent<object>
	*/
}

// Namespace: 
public enum FGOActorSetAttackTarget.TARGET_POS // TypeDefIndex: 7946
{
	// Fields
	public int value__; // 0x0
