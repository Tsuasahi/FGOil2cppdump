	public int GetDisplayedFrameNo() { }

	// RVA: 0x2418204 Offset: 0x2418204 VA: 0x2418204
	public bool HasRenderedNewFrame() { }

	// RVA: 0x2418220 Offset: 0x2418220 VA: 0x2418220
	public void SetAsrRackId(int asrRackId) { }

	// RVA: 0x2418344 Offset: 0x2418344 VA: 0x2418344
	public void UpdateWithUserTime(ulong timeCount, ulong timeUnit) { }

	// RVA: 0x2418908 Offset: 0x2418908 VA: 0x2418908
	public void SetManualTimerUnit(ulong timeUnitN, ulong timeUnitD) { }

	// RVA: 0x2418A3C Offset: 0x2418A3C VA: 0x2418A3C
	public void UpdateWithManualTimeAdvanced() { }

	// RVA: 0x2418B48 Offset: 0x2418B48 VA: 0x2418B48
	public void Update() { }

	// RVA: 0x2418B60 Offset: 0x2418B60 VA: 0x2418B60
	public void OnWillRenderObject(CriManaMovieMaterial sender) { }

	// RVA: 0x2418C64 Offset: 0x2418C64 VA: 0x2418C64
	public bool UpdateMaterial(Material material) { }

	// RVA: 0x2418CB4 Offset: 0x2418CB4 VA: 0x2418CB4
	public bool get_isAlive() { }

	// RVA: 0x2418BB4 Offset: 0x2418BB4 VA: 0x2418BB4
	public void IssuePluginEvent(Player.CriManaUnityPlayer_RenderEventAction renderEventAction) { }

	// RVA: 0x241451C Offset: 0x241451C VA: 0x241451C
	private void Dispose(bool disposing) { }

	// RVA: 0x2418480 Offset: 0x2418480 VA: 0x2418480
	private void InternalUpdate() { }

	[DebuggerHiddenAttribute] // RVA: 0xC23DAC Offset: 0xC23DAC VA: 0xC23DAC
	// RVA: 0x2418DEC Offset: 0x2418DEC VA: 0x2418DEC
	private IEnumerator IssuePluginUpdatesForFrames(int frameCount, MonoBehaviour playerHolder, bool destroy, int playerId) { }

	// RVA: 0x241538C Offset: 0x241538C VA: 0x241538C
	private void DisableInfos(bool keepFrameInfo = False) { }

	// RVA: 0x2414D90 Offset: 0x2414D90 VA: 0x2414D90
	private void PrepareNativePlayer() { }

	// RVA: 0x2414EB4 Offset: 0x2414EB4 VA: 0x2414EB4
	private void UpdateNativePlayer() { }

	// RVA: 0x2413F78 Offset: 0x2413F78 VA: 0x2413F78
	private void InvokePlayerStatusCheck() { }

	// RVA: 0x2417D6C Offset: 0x2417D6C VA: 0x2417D6C
	private void AllocateSubtitleBuffer(int size) { }

	// RVA: 0x2417E90 Offset: 0x2417E90 VA: 0x2417E90
	private void DeallocateSubtitleBuffer() { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC23DBC Offset: 0xC23DBC VA: 0xC23DBC
	// RVA: 0x2413898 Offset: 0x2413898 VA: 0x2413898
	private static void CuePointCallbackFromNative(IntPtr ptr1, IntPtr ptr2, in EventPoint eventPoint) { }

	// RVA: 0x2413ADC Offset: 0x2413ADC VA: 0x2413ADC
	private static extern int CRIWAREFE61074E() { }

	// RVA: 0x2419C18 Offset: 0x2419C18 VA: 0x2419C18
	private static extern int CRIWARE85A7273A() { }

	// RVA: 0x2413E00 Offset: 0x2413E00 VA: 0x2413E00
	private static extern int CRIWAREF0D772AE(bool useAtomExPlayer, uint maxPathLength) { }

	// RVA: 0x2418D50 Offset: 0x2418D50 VA: 0x2418D50
	private static extern void CRIWARE067A408D(int player_id) { }

	// RVA: 0x24157D0 Offset: 0x24157D0 VA: 0x24157D0
	private static extern void CRIWARE8778888A(int player_id, IntPtr binder, string path) { }

	// RVA: 0x2415F40 Offset: 0x2415F40 VA: 0x2415F40
	private static extern void CRIWARE3B5AF1A8(int player_id, IntPtr binder, int content_id) { }

	// RVA: 0x241619C Offset: 0x241619C VA: 0x241619C
	private static extern void CRIWARE7053B66F(int player_id, string path, ulong offset, long range) { }

	// RVA: 0x2415A4C Offset: 0x2415A4C VA: 0x2415A4C
	private static extern void CRIWAREA4F9EEC0(int player_id, IntPtr data, long datasize) { }

	// RVA: 0x2415C9C Offset: 0x2415C9C VA: 0x2415C9C
	private static extern void CRIWAREA4F9EEC0(int player_id, byte[] data, long datasize) { }

	// RVA: 0x2415898 Offset: 0x2415898 VA: 0x2415898
	private static extern bool CRIWAREE7861E0D(int player_id, IntPtr binder, string path, bool repeat) { }

	// RVA: 0x2415FF4 Offset: 0x2415FF4 VA: 0x2415FF4
	private static extern bool CRIWARE0BBD64E4(int player_id, IntPtr binder, int content_id, bool repeat) { }

	// RVA: 0x2416274 Offset: 0x2416274 VA: 0x2416274
	private static extern bool CRIWAREE6B04B32(int player_id, string path, ulong offset, long range, bool repeat) { }

	// RVA: 0x2415B00 Offset: 0x2415B00 VA: 0x2415B00
	private static extern bool CRIWARE8D5436CA(int player_id, IntPtr data, long datasize, bool repeat) { }

	// RVA: 0x2415D58 Offset: 0x2415D58 VA: 0x2415D58
	private static extern bool CRIWARE8D5436CA(int player_id, byte[] data, long datasize, bool repeat) { }

	// RVA: 0x2419CA4 Offset: 0x2419CA4 VA: 0x2419CA4
	private static extern void CRIWAREBA8FF2E5(int player_id) { }

	// RVA: 0x24143C0 Offset: 0x24143C0 VA: 0x24143C0
	private static extern int CRIWARE5AF5271B(int player_id) { }

	// RVA: 0x2419108 Offset: 0x2419108 VA: 0x2419108
	private static extern void CRIWARE32DB0631(int player_id, Player.CuePointCallbackFromNativeDelegate cbfunc) { }

	// RVA: 0x2418F6C Offset: 0x2418F6C VA: 0x2418F6C
	private static extern void CRIWAREDE02D75D(int player_id, [Out] MovieInfo movie_info) { }

	// RVA: 0x2419258 Offset: 0x2419258 VA: 0x2419258
	private static extern int CRIWAREF2CC4831(int player_id, IntPtr subtitle_buffer, ref uint subtitle_size) { }

	// RVA: 0x24191BC Offset: 0x24191BC VA: 0x24191BC
	private static extern void CRIWARE01F2648C(int player_id) { }

	// RVA: 0x2419054 Offset: 0x2419054 VA: 0x2419054
	private static extern void CRIWAREC42FA68D(int player_id) { }

	// RVA: 0x24152F0 Offset: 0x24152F0 VA: 0x24152F0
	private static extern void CRIWARED55BA533(int player_id) { }

	// RVA: 0x2416628 Offset: 0x2416628 VA: 0x2416628
	private static extern void CRIWARE45EE30B3(int player_id, int seek_frame_no) { }

	// RVA: 0x241674C Offset: 0x241674C VA: 0x241674C
	private static extern void CRIWAREB629A2C7(int player_id, Player.MovieEventSyncMode mode) { }

	// RVA: 0x24154A8 Offset: 0x24154A8 VA: 0x24154A8
	private static extern void CRIWARE33A53C69(int player_id, int sw) { }

	// RVA: 0x24155BC Offset: 0x24155BC VA: 0x24155BC
	private static extern bool CRIWARE3BDF7513(int player_id) { }

	// RVA: 0x24163DC Offset: 0x24163DC VA: 0x24163DC
	private static extern void CRIWARE0F80B173(int player_id, int sw) { }

	// RVA: 0x2418064 Offset: 0x2418064 VA: 0x2418064
	private static extern long CRIWARE84980B4C(int player_id) { }

	// RVA: 0x2419D40 Offset: 0x2419D40 VA: 0x2419D40
	private static extern int CRIWAREB386D1EA(int player_id) { }

	// RVA: 0x2413EAC Offset: 0x2413EAC VA: 0x2413EAC
	private static extern IntPtr CRIWARE6E987F60(int player_id) { }

	// RVA: 0x2418168 Offset: 0x2418168 VA: 0x2418168
	private static extern int CRIWARE4BAECCB3(int player_id) { }

	// RVA: 0x2416D00 Offset: 0x2416D00 VA: 0x2416D00
	private static extern void CRIWAREEE18394B(int player_id, int track) { }

	// RVA: 0x24172AC Offset: 0x24172AC VA: 0x24172AC
	private static extern void CRIWARE2EAFBE76(int player_id, float vol) { }

	// RVA: 0x24173C0 Offset: 0x24173C0 VA: 0x24173C0
	private static extern float CRIWARE24AE99F9(int player_id) { }

	// RVA: 0x2416EE4 Offset: 0x2416EE4 VA: 0x2416EE4
	private static extern void CRIWAREF0909257(int player_id, int track) { }

	// RVA: 0x24174D4 Offset: 0x24174D4 VA: 0x24174D4
	private static extern void CRIWAREDF6D3F6F(int player_id, float vol) { }

	// RVA: 0x24175E8 Offset: 0x24175E8 VA: 0x24175E8
	private static extern float CRIWARE8C6276FA(int player_id) { }

	// RVA: 0x24170C8 Offset: 0x24170C8 VA: 0x24170C8
	private static extern void CRIWAREDC5357DE(int player_id, int track) { }

	// RVA: 0x24176FC Offset: 0x24176FC VA: 0x24176FC
	private static extern void CRIWAREA8256429(int player_id, float vol) { }

	// RVA: 0x2417810 Offset: 0x2417810 VA: 0x2417810
	private static extern float CRIWARE1E05A005(int player_id) { }

	// RVA: 0x2417934 Offset: 0x2417934 VA: 0x2417934
	private static extern void CRIWARE814FD099(int player_id, string bus_name, float level) { }

	// RVA: 0x2417A8C Offset: 0x2417A8C VA: 0x2417A8C
	private static extern void CRIWAREC7E48AC9(int player_id, string bus_name, float level) { }

	// RVA: 0x2417BE4 Offset: 0x2417BE4 VA: 0x2417BE4
	private static extern void CRIWARE4463BA30(int player_id, string bus_name, float level) { }

	// RVA: 0x2417F48 Offset: 0x2417F48 VA: 0x2417F48
	private static extern void CRIWARE77553F31(int player_id, int channel) { }

	// RVA: 0x2416870 Offset: 0x2416870 VA: 0x2416870
	private static extern void CRIWARE6B30835D(int player_id, float speed) { }

	// RVA: 0x2416994 Offset: 0x2416994 VA: 0x2416994
	private static extern void CRIWAREF44415DE(int player_id, uint max_data_size) { }

	// RVA: 0x2416AB8 Offset: 0x2416AB8 VA: 0x2416AB8
	public static extern void CRIWAREECA91BEC(int player_id, float sec) { }

	// RVA: 0x2416BDC Offset: 0x2416BDC VA: 0x2416BDC
	public static extern void CRIWARE6B5D4711(int player_id, int min_buffer_size) { }

	// RVA: 0x2418298 Offset: 0x2418298 VA: 0x2418298
	public static extern void CRIWARECA4A7F24(int player_id, int asr_rack_id) { }

	// RVA: 0x2418ED0 Offset: 0x2418ED0 VA: 0x2418ED0
	private static extern void CRIWARE42E7D35E(int player_id) { }

	// RVA: 0x2416504 Offset: 0x2416504 VA: 0x2416504
	private static extern void CRIWARE0C5F396A(int player_id, Player.TimerType timer_type) { }

	// RVA: 0x24183CC Offset: 0x24183CC VA: 0x24183CC
	private static extern void CRIWARE9C427510(int player_id, ulong user_count, ulong user_unit) { }

	// RVA: 0x2418988 Offset: 0x2418988 VA: 0x2418988
	private static extern void CRIWARE0E06B410(int player_id, ulong timer_unit_n, ulong timer_unit_d) { }

	// RVA: 0x2418AAC Offset: 0x2418AAC VA: 0x2418AAC
	private static extern void CRIWAREB7A46093(int player_id) { }

	// RVA: 0x2419950 Offset: 0x2419950 VA: 0x2419950
	private static extern void CRIWARE42C58B64(int player_id) { }

	// RVA: 0x24198A4 Offset: 0x24198A4 VA: 0x24198A4
	private static extern IntPtr CRIWARECDA09CD9(int player_id, int bufferSize) { }

	// RVA: 0x241930C Offset: 0x241930C VA: 0x241930C
	private static extern bool CRIWAREF63D1749(int player_id) { }

	// RVA: 0x24195DC Offset: 0x24195DC VA: 0x24195DC
	private static extern void CRIWARE620951E5(int player_id) { }

	// RVA: 0x2418CC4 Offset: 0x2418CC4 VA: 0x2418CC4
	private static extern IntPtr criWareUnity_GetRenderEventFunc() { }

	// RVA: 0x2419DDC Offset: 0x2419DDC VA: 0x2419DDC
	private static void .cctor() { }
}

// Namespace: 
public enum Player.Status // TypeDefIndex: 4051
{
	// Fields
	public int value__; // 0x0
	public const Player.Status Stop = 0;
	public const Player.Status Dechead = 1;
	public const Player.Status WaitPrep = 2;
	public const Player.Status Prep = 3;
	public const Player.Status Ready = 4;
	public const Player.Status Playing = 5;
	public const Player.Status PlayEnd = 6;
	public const Player.Status Error = 7;
	public const Player.Status StopProcessing = 8;
	public const Player.Status ReadyForRendering = 9;
}

// Namespace: 
public enum Player.SetMode // TypeDefIndex: 4052
{
	// Fields
	public int value__; // 0x0
	public const Player.SetMode New = 0;
	public const Player.SetMode Append = 1;
	public const Player.SetMode AppendRepeatedly = 2;
}

// Namespace: 
public enum Player.MovieEventSyncMode // TypeDefIndex: 4053
{
	// Fields
	public int value__; // 0x0
	public const Player.MovieEventSyncMode FrameTime = 0;
	public const Player.MovieEventSyncMode PlayBackTime = 1;
}

// Namespace: 
public enum Player.AudioTrack // TypeDefIndex: 4054
{
	// Fields
	public int value__; // 0x0
	public const Player.AudioTrack Off = 0;
	public const Player.AudioTrack Auto = 1;
}

// Namespace: 
public enum Player.TimerType // TypeDefIndex: 4055
{
	// Fields
	public int value__; // 0x0
	public const Player.TimerType None = 0;
	public const Player.TimerType System = 1;
	public const Player.TimerType Audio = 2;
	public const Player.TimerType User = 3;
	public const Player.TimerType Manual = 4;
}

// Namespace: 
public sealed class Player.CuePointCallback : MulticastDelegate // TypeDefIndex: 4056
{
	// Methods

	// RVA: 0x2419FA4 Offset: 0x2419FA4 VA: 0x2419FA4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x24199EC Offset: 0x24199EC VA: 0x24199EC Slot: 11
	public virtual void Invoke(ref EventPoint eventPoint) { }

	// RVA: 0x2419FB4 Offset: 0x2419FB4 VA: 0x2419FB4 Slot: 12
	public virtual IAsyncResult BeginInvoke(ref EventPoint eventPoint, AsyncCallback callback, object object) { }

	// RVA: 0x241A048 Offset: 0x241A048 VA: 0x241A048 Slot: 13
	public virtual void EndInvoke(ref EventPoint eventPoint, IAsyncResult result) { }
}

// Namespace: 
public sealed class Player.StatusChangeCallback : MulticastDelegate // TypeDefIndex: 4057
{
	// Methods

	// RVA: 0x241A488 Offset: 0x241A488 VA: 0x241A488
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2419678 Offset: 0x2419678 VA: 0x2419678 Slot: 11
	public virtual void Invoke(Player.Status status) { }

	// RVA: 0x241A498 Offset: 0x241A498 VA: 0x241A498 Slot: 12
	public virtual IAsyncResult BeginInvoke(Player.Status status, AsyncCallback callback, object object) { }

	// RVA: 0x241A524 Offset: 0x241A524 VA: 0x241A524 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class Player.SubtitleChangeCallback : MulticastDelegate // TypeDefIndex: 4058
{
	// Methods

	// RVA: 0x241A530 Offset: 0x241A530 VA: 0x241A530
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x24193B0 Offset: 0x24193B0 VA: 0x24193B0 Slot: 11
	public virtual void Invoke(IntPtr subtitleBuffer) { }

	// RVA: 0x241A540 Offset: 0x241A540 VA: 0x241A540 Slot: 12
	public virtual IAsyncResult BeginInvoke(IntPtr subtitleBuffer, AsyncCallback callback, object object) { }

	// RVA: 0x241A5CC Offset: 0x241A5CC VA: 0x241A5CC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class Player.ShaderDispatchCallback : MulticastDelegate // TypeDefIndex: 4059
{
	// Methods

	// RVA: 0x241A3CC Offset: 0x241A3CC VA: 0x241A3CC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2414948 Offset: 0x2414948 VA: 0x2414948 Slot: 11
	public virtual Shader Invoke(MovieInfo movieInfo, bool additiveMode) { }

	// RVA: 0x241A3DC Offset: 0x241A3DC VA: 0x241A3DC Slot: 12
	public virtual IAsyncResult BeginInvoke(MovieInfo movieInfo, bool additiveMode, AsyncCallback callback, object object) { }

	// RVA: 0x241A47C Offset: 0x241A47C VA: 0x241A47C Slot: 13
	public virtual Shader EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[UnmanagedFunctionPointerAttribute] // RVA: 0xC1F080 Offset: 0xC1F080 VA: 0xC1F080
private sealed class Player.CuePointCallbackFromNativeDelegate : MulticastDelegate // TypeDefIndex: 4060
{
	// Methods

	// RVA: 0x24190F8 Offset: 0x24190F8 VA: 0x24190F8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x241A070 Offset: 0x241A070 VA: 0x241A070 Slot: 11
	public virtual void Invoke(IntPtr ptr1, IntPtr ptr2, in EventPoint eventPoint) { }

	// RVA: 0x241A2DC Offset: 0x241A2DC VA: 0x241A2DC Slot: 12
	public virtual IAsyncResult BeginInvoke(IntPtr ptr1, IntPtr ptr2, in EventPoint eventPoint, AsyncCallback callback, object object) { }

	// RVA: 0x241A3A4 Offset: 0x241A3A4 VA: 0x241A3A4 Slot: 13
	public virtual void EndInvoke(in EventPoint eventPoint, IAsyncResult result) { }
}

// Namespace: 
public enum Player.CriManaUnityPlayer_RenderEventAction // TypeDefIndex: 4061
{
	// Fields
	public int value__; // 0x0
	public const Player.CriManaUnityPlayer_RenderEventAction UPDATE = 0;
	public const Player.CriManaUnityPlayer_RenderEventAction INITIALIZE = 256;
	public const Player.CriManaUnityPlayer_RenderEventAction RENDER = 512;
	public const Player.CriManaUnityPlayer_RenderEventAction DESTROY = 768;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC20508 Offset: 0xC20508 VA: 0xC20508
private sealed class Player.<IssuePluginUpdatesForFrames>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 4062
{
	// Fields
	internal int frameCount; // 0x10
	internal int playerId; // 0x14
	internal bool destroy; // 0x18
	internal MonoBehaviour playerHolder; // 0x20
	internal Player $this; // 0x28
	internal object $current; // 0x30
	internal bool $disposing; // 0x38
	internal int $PC; // 0x3C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xC248D0 Offset: 0xC248D0 VA: 0xC248D0
	// RVA: 0x24190F0 Offset: 0x24190F0 VA: 0x24190F0
	public void .ctor() { }

	// RVA: 0x2419DE0 Offset: 0x2419DE0 VA: 0x2419DE0 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xC248E0 Offset: 0xC248E0 VA: 0xC248E0
	// RVA: 0x2419F18 Offset: 0x2419F18 VA: 0x2419F18 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC248F0 Offset: 0xC248F0 VA: 0xC248F0
	// RVA: 0x2419F20 Offset: 0x2419F20 VA: 0x2419F20 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC24900 Offset: 0xC24900 VA: 0xC24900
	// RVA: 0x2419F28 Offset: 0x2419F28 VA: 0x2419F28 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xC24910 Offset: 0xC24910 VA: 0xC24910
	// RVA: 0x2419F3C Offset: 0x2419F3C VA: 0x2419F3C Slot: 6
	public void Reset() { }
}

// Namespace: CriWare
public class Common // TypeDefIndex: 4063
{
	// Fields
	private const string scriptVersionString = "2.38.28";
	private const int scriptVersionNumber = 37234688;
	public const bool supportsCriFsInstaller = True;
	public const bool supportsCriFsWebInstaller = True;
	public const string pluginName = "cri_ware_unity";
	public const CallingConvention pluginCallingConvention = 1;
	private static GameObject _managerObject; // 0x0

	// Properties
	public static string streamingAssetsPath { get; }
	public static string installTargetPath { get; }
	public static GameObject managerObject { get; }

	// Methods

	// RVA: 0x1DE858C Offset: 0x1DE858C VA: 0x1DE858C
	public void .ctor() { }

	// RVA: 0x1DE8594 Offset: 0x1DE8594 VA: 0x1DE8594
	public static string get_streamingAssetsPath() { }

	// RVA: 0x1DE861C Offset: 0x1DE861C VA: 0x1DE861C
	public static string get_installTargetPath() { }

	// RVA: 0x1DE864C Offset: 0x1DE864C VA: 0x1DE864C
	public static bool IsStreamingAssetsPath(string path) { }

	// RVA: 0x1DE7D54 Offset: 0x1DE7D54 VA: 0x1DE7D54
	public static GameObject get_managerObject() { }

	// RVA: 0x1DE86E4 Offset: 0x1DE86E4 VA: 0x1DE86E4
	public static string GetScriptVersionString() { }

	// RVA: 0x1DE872C Offset: 0x1DE872C VA: 0x1DE872C
	public static int GetScriptVersionNumber() { }

	// RVA: 0x1DE8738 Offset: 0x1DE8738 VA: 0x1DE8738
	public static int GetBinaryVersionNumber() { }

	// RVA: 0x1DE8820 Offset: 0x1DE8820 VA: 0x1DE8820
	public static int GetRequiredBinaryVersionNumber() { }

	// RVA: 0x1DE882C Offset: 0x1DE882C VA: 0x1DE882C
	public static bool CheckBinaryVersionCompatibility() { }

	// RVA: 0x1DE889C Offset: 0x1DE889C VA: 0x1DE889C
	public static uint GetFsMemoryUsage() { }

	// RVA: 0x1DE88FC Offset: 0x1DE88FC VA: 0x1DE88FC
	public static uint GetAtomMemoryUsage() { }

	// RVA: 0x1DE895C Offset: 0x1DE895C VA: 0x1DE895C
	public static uint GetManaMemoryUsage() { }

	// RVA: 0x1DE89B8 Offset: 0x1DE89B8 VA: 0x1DE89B8
	public static Common.CpuUsage GetAtomCpuUsage() { }

	// RVA: 0x1DE8794 Offset: 0x1DE8794 VA: 0x1DE8794
	public static extern int CRIWARE0F286CE1() { }

	// RVA: 0x1DE6424 Offset: 0x1DE6424 VA: 0x1DE6424
	public static extern void criWareUnity_SetRenderingEventOffsetForMana(int offset) { }

	// RVA: 0x1DE8A18 Offset: 0x1DE8A18 VA: 0x1DE8A18
	private static void .cctor() { }
}

// Namespace: 
public struct Common.CpuUsage // TypeDefIndex: 4064
{
	// Fields
	public float last; // 0x0
	public float average; // 0x4
	public float peak; // 0x8
}

// Namespace: 
public static class CriWareDecrypter // TypeDefIndex: 4065
{
	// Fields
	private static ulong temporalStorage; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC21618 Offset: 0xC21618 VA: 0xC21618
	private static CriWareDecrypter.CallbackFromNativeDelegate <>f__mg$cache0; // 0x8

	// Methods

	// RVA: 0x1DE8A84 Offset: 0x1DE8A84 VA: 0x1DE8A84
	public static bool Initialize(CriWareDecrypterConfig config) { }

	// RVA: 0x1DE8B50 Offset: 0x1DE8B50 VA: 0x1DE8B50
	public static bool Initialize(string key, string authenticationFile, bool enableAtomDecryption, bool enableManaDecryption) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC23E20 Offset: 0xC23E20 VA: 0xC23E20
	// RVA: 0x1DE8A1C Offset: 0x1DE8A1C VA: 0x1DE8A1C
	private static ulong CallbackFromNative(IntPtr ptr1) { }

	// RVA: 0x1DE8DB8 Offset: 0x1DE8DB8 VA: 0x1DE8DB8
	public static extern int CRIWARE3D9A5BE6(bool enable_atom_decryption, bool enable_mana_decryption, CriWareDecrypter.CallbackFromNativeDelegate func, IntPtr obj) { }

	// RVA: 0x1DE8E84 Offset: 0x1DE8E84 VA: 0x1DE8E84
	private static void .cctor() { }
}

// Namespace: 
[UnmanagedFunctionPointerAttribute] // RVA: 0xC1F094 Offset: 0xC1F094 VA: 0xC1F094
public sealed class CriWareDecrypter.CallbackFromNativeDelegate : MulticastDelegate // TypeDefIndex: 4066
{
	// Methods

	// RVA: 0x1DE8DA8 Offset: 0x1DE8DA8 VA: 0x1DE8DA8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1DE8E88 Offset: 0x1DE8E88 VA: 0x1DE8E88 Slot: 11
	public virtual ulong Invoke(IntPtr ptr1) { }

	// RVA: 0x1DE90B8 Offset: 0x1DE90B8 VA: 0x1DE90B8 Slot: 12
	public virtual IAsyncResult BeginInvoke(IntPtr ptr1, AsyncCallback callback, object object) { }

	// RVA: 0x1DE9144 Offset: 0x1DE9144 VA: 0x1DE9144 Slot: 13
	public virtual ulong EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC1F0A8 Offset: 0xC1F0A8 VA: 0xC1F0A8
public class CriWareErrorHandler : CriMonoBehaviour // TypeDefIndex: 4067
{
	// Fields
	public bool enableDebugPrintOnTerminal; // 0x28
	public bool enableForceCrashOnError; // 0x29
	public bool dontDestroyOnLoad; // 0x2A
	[CompilerGeneratedAttribute] // RVA: 0xC21628 Offset: 0xC21628 VA: 0xC21628
	[DebuggerBrowsableAttribute] // RVA: 0xC21628 Offset: 0xC21628 VA: 0xC21628
	private static string <errorMessage>k__BackingField; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC21664 Offset: 0xC21664 VA: 0xC21664
	[DebuggerBrowsableAttribute] // RVA: 0xC21664 Offset: 0xC21664 VA: 0xC21664
	private static CriWareErrorHandler.Callback OnCallback; // 0x8
	[ObsoleteAttribute] // RVA: 0xC216A0 Offset: 0xC216A0 VA: 0xC216A0
	public static CriWareErrorHandler.Callback callback; // 0x10
	public uint messageBufferCounts; // 0x2C
	private static int initializationCount; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC216DC Offset: 0xC216DC VA: 0xC216DC
	private static CriWareErrorHandler.ErrorCallbackFunc <>f__mg$cache0; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC216EC Offset: 0xC216EC VA: 0xC216EC
	private static CriWareErrorHandler.ErrorCallbackFunc <>f__mg$cache1; // 0x28

	// Properties
	public static string errorMessage { get; set; }

	// Methods

	// RVA: 0x1DE9270 Offset: 0x1DE9270 VA: 0x1DE9270
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23E84 Offset: 0xC23E84 VA: 0xC23E84
	// RVA: 0x1DE9284 Offset: 0x1DE9284 VA: 0x1DE9284
	public static string get_errorMessage() { }

	[CompilerGeneratedAttribute] // RVA: 0xC23E94 Offset: 0xC23E94 VA: 0xC23E94
	// RVA: 0x1DE92EC Offset: 0x1DE92EC VA: 0x1DE92EC
	public static void set_errorMessage(string value) { }

	// RVA: 0x1DE9358 Offset: 0x1DE9358 VA: 0x1DE9358
	public static void add_OnCallback(CriWareErrorHandler.Callback value) { }

	// RVA: 0x1DE9498 Offset: 0x1DE9498 VA: 0x1DE9498
	public static void remove_OnCallback(CriWareErrorHandler.Callback value) { }

	// RVA: 0x1DE95D8 Offset: 0x1DE95D8 VA: 0x1DE95D8
	private void Awake() { }

	// RVA: 0x1DE9ACC Offset: 0x1DE9ACC VA: 0x1DE9ACC Slot: 4
	protected override void OnEnable() { }

	// RVA: 0x1DE9BB4 Offset: 0x1DE9BB4 VA: 0x1DE9BB4 Slot: 5
	protected override void OnDisable() { }

	// RVA: 0x1DE9C20 Offset: 0x1DE9C20 VA: 0x1DE9C20
	private void Start() { }

	// RVA: 0x1DE9C24 Offset: 0x1DE9C24 VA: 0x1DE9C24 Slot: 6
	public override void CriInternalUpdate() { }

	// RVA: 0x1DE9ECC Offset: 0x1DE9ECC VA: 0x1DE9ECC Slot: 7
	public override void CriInternalLateUpdate() { }

	// RVA: 0x1DE9ED0 Offset: 0x1DE9ED0 VA: 0x1DE9ED0
	private void OnDestroy() { }

	// RVA: 0x1DE9C34 Offset: 0x1DE9C34 VA: 0x1DE9C34
	private void DequeueErrorMessages() { }

	// RVA: 0x1DEA11C Offset: 0x1DEA11C VA: 0x1DEA11C
	private static void HandleMessage(string errmsg) { }

	// RVA: 0x1DEA2AC Offset: 0x1DEA2AC VA: 0x1DEA2AC
	private static void OutputDefaultLog(string errmsg) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC23EA4 Offset: 0xC23EA4 VA: 0xC23EA4
	// RVA: 0x1DE920C Offset: 0x1DE920C VA: 0x1DE920C
	private static void ErrorCallbackFromNative(string errmsg) { }

	// RVA: 0x1DE98E4 Offset: 0x1DE98E4 VA: 0x1DE98E4
	private static extern void CRIWARE063A11A2(uint length) { }

	// RVA: 0x1DE97BC Offset: 0x1DE97BC VA: 0x1DE97BC
	private static extern void CRIWAREA2E6711B() { }

	// RVA: 0x1DEA004 Offset: 0x1DEA004 VA: 0x1DEA004
	private static extern void CRIWARE3BCC893C() { }

	// RVA: 0x1DE9980 Offset: 0x1DE9980 VA: 0x1DE9980
	private static extern void CRIWAREDBC6F415(bool sw) { }

	// RVA: 0x1DE9F78 Offset: 0x1DE9F78 VA: 0x1DE9F78
	private static extern void CRIWARE4A393AE0() { }

	// RVA: 0x1DEA090 Offset: 0x1DEA090 VA: 0x1DEA090
	private static extern IntPtr CRIWARE841C0338() { }

	// RVA: 0x1DE9848 Offset: 0x1DE9848 VA: 0x1DE9848
	private static extern void CRIWARE527DA518(bool sw) { }

	// RVA: 0x1DE9A2C Offset: 0x1DE9A2C VA: 0x1DE9A2C
	private static extern void CRIWARED1107B8D(CriWareErrorHandler.ErrorCallbackFunc callback) { }

	// RVA: 0x1DEA6E0 Offset: 0x1DEA6E0 VA: 0x1DEA6E0
	private static void .cctor() { }
}

// Namespace: 
public sealed class CriWareErrorHandler.Callback : MulticastDelegate // TypeDefIndex: 4068
{
	// Methods

	// RVA: 0x1DEA6E4 Offset: 0x1DEA6E4 VA: 0x1DEA6E4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1DEA340 Offset: 0x1DEA340 VA: 0x1DEA340 Slot: 11
	public virtual void Invoke(string message) { }

	// RVA: 0x1DEA6F4 Offset: 0x1DEA6F4 VA: 0x1DEA6F4 Slot: 12
	public virtual IAsyncResult BeginInvoke(string message, AsyncCallback callback, object object) { }

	// RVA: 0x1DEA718 Offset: 0x1DEA718 VA: 0x1DEA718 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[UnmanagedFunctionPointerAttribute] // RVA: 0xC1F0E0 Offset: 0xC1F0E0 VA: 0xC1F0E0
public sealed class CriWareErrorHandler.ErrorCallbackFunc : MulticastDelegate // TypeDefIndex: 4069
{
	// Methods

	// RVA: 0x1DE9A1C Offset: 0x1DE9A1C VA: 0x1DE9A1C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1DEA724 Offset: 0x1DEA724 VA: 0x1DEA724 Slot: 11
	public virtual void Invoke(string errmsg) { }

	// RVA: 0x1DEAAC4 Offset: 0x1DEAAC4 VA: 0x1DEAAC4 Slot: 12
	public virtual IAsyncResult BeginInvoke(string errmsg, AsyncCallback callback, object object) { }

	// RVA: 0x1DEAAE8 Offset: 0x1DEAAE8 VA: 0x1DEAAE8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[Serializable]
public class CriFsConfig // TypeDefIndex: 4070
{
	// Fields
	public const int defaultAndroidDeviceReadBitrate = 50000000;
	public int numberOfLoaders; // 0x10
	public int numberOfBinders; // 0x14
	public int numberOfInstallers; // 0x18
	public int installBufferSize; // 0x1C
	public int maxPath; // 0x20
	public string userAgentString; // 0x28
	public bool minimizeFileDescriptorUsage; // 0x30
	public bool enableCrcCheck; // 0x31
	public int androidDeviceReadBitrate; // 0x34

	// Methods

	// RVA: 0x2406240 Offset: 0x2406240 VA: 0x2406240
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig // TypeDefIndex: 4071
{
	// Fields
	public string acfFileName; // 0x10
	public int maxVirtualVoices; // 0x18
	public int maxVoiceLimitGroups; // 0x1C
	public int maxCategories; // 0x20
	public int maxSequenceEventsPerFrame; // 0x24
	public int maxBeatSyncCallbacksPerFrame; // 0x28
	public int maxCueLinkCallbacksPerFrame; // 0x2C
	public CriAtomConfig.StandardVoicePoolConfig standardVoicePoolConfig; // 0x30
	public CriAtomConfig.HcaMxVoicePoolConfig hcaMxVoicePoolConfig; // 0x38
	public int outputSamplingRate; // 0x40
	public bool usesInGamePreview; // 0x44
	public CriAtomConfig.InGamePreviewSwitchMode inGamePreviewMode; // 0x48
	public bool switchInitializeSocket; // 0x4C
	public CriAtomConfig.InGamePreviewConfig inGamePreviewConfig; // 0x50
	public float serverFrequency; // 0x58
	public int asrOutputChannels; // 0x5C
	public bool useRandomSeedWithTime; // 0x60
	public int categoriesPerPlayback; // 0x64
	public int maxBuses; // 0x68
	public int maxParameterBlocks; // 0x6C
	public bool vrMode; // 0x70
	public bool keepPlayingSoundOnPause; // 0x71
	public int pcBufferingTime; // 0x74
	public CriAtomConfig.LinuxOutput linuxOutput; // 0x78
	public int linuxPulseLatencyUsec; // 0x7C
	public bool iosEnableSonicSync; // 0x80
	public int iosBufferingTime; // 0x84
	public bool iosOverrideIPodMusic; // 0x88
	public bool androidEnableSonicSync; // 0x89
	public int androidBufferingTime; // 0x8C
	public int androidStartBufferingTime; // 0x90
	public CriAtomConfig.AndroidLowLatencyStandardVoicePoolConfig androidLowLatencyStandardVoicePoolConfig; // 0x98
	public bool androidUsesAndroidFastMixer; // 0xA0
	public bool androidForceToUseAsrForDefaultPlayback; // 0xA1
	public bool androidUsesAAudio; // 0xA2
	public CriAtomConfig.VitaManaVoicePoolConfig vitaManaVoicePoolConfig; // 0xA8
	public CriAtomConfig.VitaAtrac9VoicePoolConfig vitaAtrac9VoicePoolConfig; // 0xB0
	public CriAtomConfig.Ps4Atrac9VoicePoolConfig ps4Atrac9VoicePoolConfig; // 0xB8
	public CriAtomConfig.SwitchOpusVoicePoolConfig switchOpusVoicePoolConfig; // 0xC0
	public CriAtomConfig.Ps4Audio3dConfig ps4Audio3dConfig; // 0xC8
	public CriAtomConfig.WebGLWebAudioVoicePoolConfig webglWebAudioVoicePoolConfig; // 0xD0

	// Methods

	// RVA: 0x2468EBC Offset: 0x2468EBC VA: 0x2468EBC
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.StandardVoicePoolConfig // TypeDefIndex: 4072
{
	// Fields
	public int memoryVoices; // 0x10
	public int streamingVoices; // 0x14

	// Methods

	// RVA: 0x2469110 Offset: 0x2469110 VA: 0x2469110
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.HcaMxVoicePoolConfig // TypeDefIndex: 4073
{
	// Fields
	public int memoryVoices; // 0x10
	public int streamingVoices; // 0x14

	// Methods

	// RVA: 0x2469124 Offset: 0x2469124 VA: 0x2469124
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public enum CriAtomConfig.InGamePreviewSwitchMode // TypeDefIndex: 4074
{
	// Fields
	public int value__; // 0x0
	public const CriAtomConfig.InGamePreviewSwitchMode Disable = 0;
	public const CriAtomConfig.InGamePreviewSwitchMode Enable = 1;
	public const CriAtomConfig.InGamePreviewSwitchMode FollowBuildSetting = 2;
	public const CriAtomConfig.InGamePreviewSwitchMode Default = 3;
}

// Namespace: 
[Serializable]
public class CriAtomConfig.InGamePreviewConfig // TypeDefIndex: 4075
{
	// Fields
	public int maxPreviewObjects; // 0x10
	public int communicationBufferSize; // 0x14
	public int playbackPositionUpdateInterval; // 0x18

	// Methods

	// RVA: 0x246912C Offset: 0x246912C VA: 0x246912C
	public void .ctor() { }
}

// Namespace: 
public enum CriAtomConfig.LinuxOutput // TypeDefIndex: 4076
{
	// Fields
	public int value__; // 0x0
	public const CriAtomConfig.LinuxOutput Default = 0;
	public const CriAtomConfig.LinuxOutput PulseAudio = 1;
	public const CriAtomConfig.LinuxOutput ALSA = 2;
}

// Namespace: 
[Serializable]
public class CriAtomConfig.AndroidLowLatencyStandardVoicePoolConfig // TypeDefIndex: 4077
{
	// Fields
	public int memoryVoices; // 0x10
	public int streamingVoices; // 0x14

	// Methods

	// RVA: 0x2469148 Offset: 0x2469148 VA: 0x2469148
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.VitaManaVoicePoolConfig // TypeDefIndex: 4078
{
	// Fields
	public int numberOfManaDecoders; // 0x10

	// Methods

	// RVA: 0x2469150 Offset: 0x2469150 VA: 0x2469150
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.VitaAtrac9VoicePoolConfig // TypeDefIndex: 4079
{
	// Fields
	public int memoryVoices; // 0x10
	public int streamingVoices; // 0x14

	// Methods

	// RVA: 0x2469160 Offset: 0x2469160 VA: 0x2469160
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.Ps4Atrac9VoicePoolConfig // TypeDefIndex: 4080
{
	// Fields
	public int memoryVoices; // 0x10
	public int streamingVoices; // 0x14

	// Methods

	// RVA: 0x2469168 Offset: 0x2469168 VA: 0x2469168
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.SwitchOpusVoicePoolConfig // TypeDefIndex: 4081
{
	// Fields
	public int memoryVoices; // 0x10
	public int streamingVoices; // 0x14

	// Methods

	// RVA: 0x2469170 Offset: 0x2469170 VA: 0x2469170
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.Ps4Audio3dConfig // TypeDefIndex: 4082
{
	// Fields
	public bool useAudio3D; // 0x10
	public CriAtomConfig.Ps4Audio3dConfig.VoicePoolConfig voicePoolConfig; // 0x18

	// Methods

	// RVA: 0x2469178 Offset: 0x2469178 VA: 0x2469178
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.Ps4Audio3dConfig.VoicePoolConfig // TypeDefIndex: 4083
{
	// Fields
	public int memoryVoices; // 0x10
	public int streamingVoices; // 0x14

	// Methods

	// RVA: 0x24691F0 Offset: 0x24691F0 VA: 0x24691F0
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.WebGLWebAudioVoicePoolConfig // TypeDefIndex: 4084
{
	// Fields
	public int voices; // 0x10

	// Methods

	// RVA: 0x24691E0 Offset: 0x24691E0 VA: 0x24691E0
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriManaConfig // TypeDefIndex: 4085
{
	// Fields
	public int numberOfDecoders; // 0x10
	public int numberOfMaxEntries; // 0x14
	public readonly bool graphicsMultiThreaded; // 0x18
	public CriManaConfig.PCH264PlaybackConfig pcH264PlaybackConfig; // 0x20
	public CriManaConfig.VitaH264PlaybackConfig vitaH264PlaybackConfig; // 0x28
	public CriManaConfig.WebGLConfig webglConfig; // 0x30

	// Methods

	// RVA: 0x241AF14 Offset: 0x241AF14 VA: 0x241AF14
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriManaConfig.PCH264PlaybackConfig // TypeDefIndex: 4086
{
	// Fields
	public bool useH264Playback; // 0x10

	// Methods

	// RVA: 0x241AFE4 Offset: 0x241AFE4 VA: 0x241AFE4
	public void .ctor() { }
}

// Namespace: 
