	private static extern void CRIWARE01F2648C(int player_id) { }

	// RVA: 0x11C1FD0 Offset: 0x11C1FD0 VA: 0x11C1FD0
	private static extern void CRIWAREC42FA68D(int player_id) { }

	// RVA: 0x11BE26C Offset: 0x11BE26C VA: 0x11BE26C
	private static extern void CRIWARED55BA533(int player_id) { }

	// RVA: 0x11BF5A4 Offset: 0x11BF5A4 VA: 0x11BF5A4
	private static extern void CRIWARE45EE30B3(int player_id, int seek_frame_no) { }

	// RVA: 0x11BF6C8 Offset: 0x11BF6C8 VA: 0x11BF6C8
	private static extern void CRIWAREB629A2C7(int player_id, Player.MovieEventSyncMode mode) { }

	// RVA: 0x11BE424 Offset: 0x11BE424 VA: 0x11BE424
	private static extern void CRIWARE33A53C69(int player_id, int sw) { }

	// RVA: 0x11BE538 Offset: 0x11BE538 VA: 0x11BE538
	private static extern bool CRIWARE3BDF7513(int player_id) { }

	// RVA: 0x11BF358 Offset: 0x11BF358 VA: 0x11BF358
	private static extern void CRIWARE0F80B173(int player_id, int sw) { }

	// RVA: 0x11C0FE0 Offset: 0x11C0FE0 VA: 0x11C0FE0
	private static extern long CRIWARE84980B4C(int player_id) { }

	// RVA: 0x11C2CBC Offset: 0x11C2CBC VA: 0x11C2CBC
	private static extern int CRIWAREB386D1EA(int player_id) { }

	// RVA: 0x11BCE28 Offset: 0x11BCE28 VA: 0x11BCE28
	private static extern IntPtr CRIWARE6E987F60(int player_id) { }

	// RVA: 0x11C10E4 Offset: 0x11C10E4 VA: 0x11C10E4
	private static extern int CRIWARE4BAECCB3(int player_id) { }

	// RVA: 0x11BFC7C Offset: 0x11BFC7C VA: 0x11BFC7C
	private static extern void CRIWAREEE18394B(int player_id, int track) { }

	// RVA: 0x11C0228 Offset: 0x11C0228 VA: 0x11C0228
	private static extern void CRIWARE2EAFBE76(int player_id, float vol) { }

	// RVA: 0x11C033C Offset: 0x11C033C VA: 0x11C033C
	private static extern float CRIWARE24AE99F9(int player_id) { }

	// RVA: 0x11BFE60 Offset: 0x11BFE60 VA: 0x11BFE60
	private static extern void CRIWAREF0909257(int player_id, int track) { }

	// RVA: 0x11C0450 Offset: 0x11C0450 VA: 0x11C0450
	private static extern void CRIWAREDF6D3F6F(int player_id, float vol) { }

	// RVA: 0x11C0564 Offset: 0x11C0564 VA: 0x11C0564
	private static extern float CRIWARE8C6276FA(int player_id) { }

	// RVA: 0x11C0044 Offset: 0x11C0044 VA: 0x11C0044
	private static extern void CRIWAREDC5357DE(int player_id, int track) { }

	// RVA: 0x11C0678 Offset: 0x11C0678 VA: 0x11C0678
	private static extern void CRIWAREA8256429(int player_id, float vol) { }

	// RVA: 0x11C078C Offset: 0x11C078C VA: 0x11C078C
	private static extern float CRIWARE1E05A005(int player_id) { }

	// RVA: 0x11C08B0 Offset: 0x11C08B0 VA: 0x11C08B0
	private static extern void CRIWARE814FD099(int player_id, string bus_name, float level) { }

	// RVA: 0x11C0A08 Offset: 0x11C0A08 VA: 0x11C0A08
	private static extern void CRIWAREC7E48AC9(int player_id, string bus_name, float level) { }

	// RVA: 0x11C0B60 Offset: 0x11C0B60 VA: 0x11C0B60
	private static extern void CRIWARE4463BA30(int player_id, string bus_name, float level) { }

	// RVA: 0x11C0EC4 Offset: 0x11C0EC4 VA: 0x11C0EC4
	private static extern void CRIWARE77553F31(int player_id, int channel) { }

	// RVA: 0x11BF7EC Offset: 0x11BF7EC VA: 0x11BF7EC
	private static extern void CRIWARE6B30835D(int player_id, float speed) { }

	// RVA: 0x11BF910 Offset: 0x11BF910 VA: 0x11BF910
	private static extern void CRIWAREF44415DE(int player_id, uint max_data_size) { }

	// RVA: 0x11BFA34 Offset: 0x11BFA34 VA: 0x11BFA34
	public static extern void CRIWAREECA91BEC(int player_id, float sec) { }

	// RVA: 0x11BFB58 Offset: 0x11BFB58 VA: 0x11BFB58
	public static extern void CRIWARE6B5D4711(int player_id, int min_buffer_size) { }

	// RVA: 0x11C1214 Offset: 0x11C1214 VA: 0x11C1214
	public static extern void CRIWARECA4A7F24(int player_id, int asr_rack_id) { }

	// RVA: 0x11C1E4C Offset: 0x11C1E4C VA: 0x11C1E4C
	private static extern void CRIWARE42E7D35E(int player_id) { }

	// RVA: 0x11BF480 Offset: 0x11BF480 VA: 0x11BF480
	private static extern void CRIWARE0C5F396A(int player_id, Player.TimerType timer_type) { }

	// RVA: 0x11C1348 Offset: 0x11C1348 VA: 0x11C1348
	private static extern void CRIWARE9C427510(int player_id, ulong user_count, ulong user_unit) { }

	// RVA: 0x11C1904 Offset: 0x11C1904 VA: 0x11C1904
	private static extern void CRIWARE0E06B410(int player_id, ulong timer_unit_n, ulong timer_unit_d) { }

	// RVA: 0x11C1A28 Offset: 0x11C1A28 VA: 0x11C1A28
	private static extern void CRIWAREB7A46093(int player_id) { }

	// RVA: 0x11C28CC Offset: 0x11C28CC VA: 0x11C28CC
	private static extern void CRIWARE42C58B64(int player_id) { }

	// RVA: 0x11C2820 Offset: 0x11C2820 VA: 0x11C2820
	private static extern IntPtr CRIWARECDA09CD9(int player_id, int bufferSize) { }

	// RVA: 0x11C2288 Offset: 0x11C2288 VA: 0x11C2288
	private static extern bool CRIWAREF63D1749(int player_id) { }

	// RVA: 0x11C2558 Offset: 0x11C2558 VA: 0x11C2558
	private static extern void CRIWARE620951E5(int player_id) { }

	// RVA: 0x11C1C40 Offset: 0x11C1C40 VA: 0x11C1C40
	private static extern IntPtr criWareUnity_GetRenderEventFunc() { }

	// RVA: 0x11C2D58 Offset: 0x11C2D58 VA: 0x11C2D58
	private static void .cctor() { }
}

// Namespace: 
public enum Player.Status // TypeDefIndex: 4051
{
	// Fields
	public int value__; // 0x0
	public const Player.Status Stop = 0;
	public const Player.Status Dechead = 1;
	public const Player.Status WaitPrep = 2;
	public const Player.Status Prep = 3;
	public const Player.Status Ready = 4;
	public const Player.Status Playing = 5;
	public const Player.Status PlayEnd = 6;
	public const Player.Status Error = 7;
	public const Player.Status StopProcessing = 8;
	public const Player.Status ReadyForRendering = 9;
}

// Namespace: 
public enum Player.SetMode // TypeDefIndex: 4052
{
	// Fields
	public int value__; // 0x0
	public const Player.SetMode New = 0;
	public const Player.SetMode Append = 1;
	public const Player.SetMode AppendRepeatedly = 2;
}

// Namespace: 
public enum Player.MovieEventSyncMode // TypeDefIndex: 4053
{
	// Fields
	public int value__; // 0x0
	public const Player.MovieEventSyncMode FrameTime = 0;
	public const Player.MovieEventSyncMode PlayBackTime = 1;
}

// Namespace: 
public enum Player.AudioTrack // TypeDefIndex: 4054
{
	// Fields
	public int value__; // 0x0
	public const Player.AudioTrack Off = 0;
	public const Player.AudioTrack Auto = 1;
}

// Namespace: 
public enum Player.TimerType // TypeDefIndex: 4055
{
	// Fields
	public int value__; // 0x0
	public const Player.TimerType None = 0;
	public const Player.TimerType System = 1;
	public const Player.TimerType Audio = 2;
	public const Player.TimerType User = 3;
	public const Player.TimerType Manual = 4;
}

// Namespace: 
public sealed class Player.CuePointCallback : MulticastDelegate // TypeDefIndex: 4056
{
	// Methods

	// RVA: 0x11C2F20 Offset: 0x11C2F20 VA: 0x11C2F20
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x11C2968 Offset: 0x11C2968 VA: 0x11C2968 Slot: 11
	public virtual void Invoke(ref EventPoint eventPoint) { }

	// RVA: 0x11C2F30 Offset: 0x11C2F30 VA: 0x11C2F30 Slot: 12
	public virtual IAsyncResult BeginInvoke(ref EventPoint eventPoint, AsyncCallback callback, object object) { }

	// RVA: 0x11C2FC4 Offset: 0x11C2FC4 VA: 0x11C2FC4 Slot: 13
	public virtual void EndInvoke(ref EventPoint eventPoint, IAsyncResult result) { }
}

// Namespace: 
public sealed class Player.StatusChangeCallback : MulticastDelegate // TypeDefIndex: 4057
{
	// Methods

	// RVA: 0x11C3404 Offset: 0x11C3404 VA: 0x11C3404
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x11C25F4 Offset: 0x11C25F4 VA: 0x11C25F4 Slot: 11
	public virtual void Invoke(Player.Status status) { }

	// RVA: 0x11C3414 Offset: 0x11C3414 VA: 0x11C3414 Slot: 12
	public virtual IAsyncResult BeginInvoke(Player.Status status, AsyncCallback callback, object object) { }

	// RVA: 0x11C34A0 Offset: 0x11C34A0 VA: 0x11C34A0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class Player.SubtitleChangeCallback : MulticastDelegate // TypeDefIndex: 4058
{
	// Methods

	// RVA: 0x11C34AC Offset: 0x11C34AC VA: 0x11C34AC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x11C232C Offset: 0x11C232C VA: 0x11C232C Slot: 11
	public virtual void Invoke(IntPtr subtitleBuffer) { }

	// RVA: 0x11C34BC Offset: 0x11C34BC VA: 0x11C34BC Slot: 12
	public virtual IAsyncResult BeginInvoke(IntPtr subtitleBuffer, AsyncCallback callback, object object) { }

	// RVA: 0x11C3548 Offset: 0x11C3548 VA: 0x11C3548 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class Player.ShaderDispatchCallback : MulticastDelegate // TypeDefIndex: 4059
{
	// Methods

	// RVA: 0x11C3348 Offset: 0x11C3348 VA: 0x11C3348
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x11BD8C4 Offset: 0x11BD8C4 VA: 0x11BD8C4 Slot: 11
	public virtual Shader Invoke(MovieInfo movieInfo, bool additiveMode) { }

	// RVA: 0x11C3358 Offset: 0x11C3358 VA: 0x11C3358 Slot: 12
	public virtual IAsyncResult BeginInvoke(MovieInfo movieInfo, bool additiveMode, AsyncCallback callback, object object) { }

	// RVA: 0x11C33F8 Offset: 0x11C33F8 VA: 0x11C33F8 Slot: 13
	public virtual Shader EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[UnmanagedFunctionPointerAttribute] // RVA: 0xC8B1A8 Offset: 0xC8B1A8 VA: 0xC8B1A8
private sealed class Player.CuePointCallbackFromNativeDelegate : MulticastDelegate // TypeDefIndex: 4060
{
	// Methods

	// RVA: 0x11C2074 Offset: 0x11C2074 VA: 0x11C2074
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x11C2FEC Offset: 0x11C2FEC VA: 0x11C2FEC Slot: 11
	public virtual void Invoke(IntPtr ptr1, IntPtr ptr2, in EventPoint eventPoint) { }

	// RVA: 0x11C3258 Offset: 0x11C3258 VA: 0x11C3258 Slot: 12
	public virtual IAsyncResult BeginInvoke(IntPtr ptr1, IntPtr ptr2, in EventPoint eventPoint, AsyncCallback callback, object object) { }

	// RVA: 0x11C3320 Offset: 0x11C3320 VA: 0x11C3320 Slot: 13
	public virtual void EndInvoke(in EventPoint eventPoint, IAsyncResult result) { }
}

// Namespace: 
public enum Player.CriManaUnityPlayer_RenderEventAction // TypeDefIndex: 4061
{
	// Fields
	public int value__; // 0x0
	public const Player.CriManaUnityPlayer_RenderEventAction UPDATE = 0;
	public const Player.CriManaUnityPlayer_RenderEventAction INITIALIZE = 256;
	public const Player.CriManaUnityPlayer_RenderEventAction RENDER = 512;
	public const Player.CriManaUnityPlayer_RenderEventAction DESTROY = 768;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC8C630 Offset: 0xC8C630 VA: 0xC8C630
private sealed class Player.<IssuePluginUpdatesForFrames>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 4062
{
	// Fields
	internal int frameCount; // 0x10
	internal int playerId; // 0x14
	internal bool destroy; // 0x18
	internal MonoBehaviour playerHolder; // 0x20
	internal Player $this; // 0x28
	internal object $current; // 0x30
	internal bool $disposing; // 0x38
	internal int $PC; // 0x3C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xC909F8 Offset: 0xC909F8 VA: 0xC909F8
	// RVA: 0x11C206C Offset: 0x11C206C VA: 0x11C206C
	public void .ctor() { }

	// RVA: 0x11C2D5C Offset: 0x11C2D5C VA: 0x11C2D5C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xC90A08 Offset: 0xC90A08 VA: 0xC90A08
	// RVA: 0x11C2E94 Offset: 0x11C2E94 VA: 0x11C2E94 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC90A18 Offset: 0xC90A18 VA: 0xC90A18
	// RVA: 0x11C2E9C Offset: 0x11C2E9C VA: 0x11C2E9C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC90A28 Offset: 0xC90A28 VA: 0xC90A28
	// RVA: 0x11C2EA4 Offset: 0x11C2EA4 VA: 0x11C2EA4 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xC90A38 Offset: 0xC90A38 VA: 0xC90A38
	// RVA: 0x11C2EB8 Offset: 0x11C2EB8 VA: 0x11C2EB8 Slot: 6
	public void Reset() { }
}

// Namespace: CriWare
public class Common // TypeDefIndex: 4063
{
	// Fields
	private const string scriptVersionString = "2.38.28";
	private const int scriptVersionNumber = 37234688;
	public const bool supportsCriFsInstaller = True;
	public const bool supportsCriFsWebInstaller = True;
	public const string pluginName = "cri_ware_unity";
	public const CallingConvention pluginCallingConvention = 1;
	private static GameObject _managerObject; // 0x0

	// Properties
	public static string streamingAssetsPath { get; }
	public static string installTargetPath { get; }
	public static GameObject managerObject { get; }

	// Methods

	// RVA: 0xE7E188 Offset: 0xE7E188 VA: 0xE7E188
	public void .ctor() { }

	// RVA: 0xE7E190 Offset: 0xE7E190 VA: 0xE7E190
	public static string get_streamingAssetsPath() { }

	// RVA: 0xE7E218 Offset: 0xE7E218 VA: 0xE7E218
	public static string get_installTargetPath() { }

	// RVA: 0xE7E248 Offset: 0xE7E248 VA: 0xE7E248
	public static bool IsStreamingAssetsPath(string path) { }

	// RVA: 0xE7D950 Offset: 0xE7D950 VA: 0xE7D950
	public static GameObject get_managerObject() { }

	// RVA: 0xE7E2E0 Offset: 0xE7E2E0 VA: 0xE7E2E0
	public static string GetScriptVersionString() { }

	// RVA: 0xE7E328 Offset: 0xE7E328 VA: 0xE7E328
	public static int GetScriptVersionNumber() { }

	// RVA: 0xE7E334 Offset: 0xE7E334 VA: 0xE7E334
	public static int GetBinaryVersionNumber() { }

	// RVA: 0xE7E41C Offset: 0xE7E41C VA: 0xE7E41C
	public static int GetRequiredBinaryVersionNumber() { }

	// RVA: 0xE7E428 Offset: 0xE7E428 VA: 0xE7E428
	public static bool CheckBinaryVersionCompatibility() { }

	// RVA: 0xE7E498 Offset: 0xE7E498 VA: 0xE7E498
	public static uint GetFsMemoryUsage() { }

	// RVA: 0xE7E4F8 Offset: 0xE7E4F8 VA: 0xE7E4F8
	public static uint GetAtomMemoryUsage() { }

	// RVA: 0xE7E558 Offset: 0xE7E558 VA: 0xE7E558
	public static uint GetManaMemoryUsage() { }

	// RVA: 0xE7E5B4 Offset: 0xE7E5B4 VA: 0xE7E5B4
	public static Common.CpuUsage GetAtomCpuUsage() { }

	// RVA: 0xE7E390 Offset: 0xE7E390 VA: 0xE7E390
	public static extern int CRIWARE0F286CE1() { }

	// RVA: 0xE7C020 Offset: 0xE7C020 VA: 0xE7C020
	public static extern void criWareUnity_SetRenderingEventOffsetForMana(int offset) { }

	// RVA: 0xE7E614 Offset: 0xE7E614 VA: 0xE7E614
	private static void .cctor() { }
}

// Namespace: 
public struct Common.CpuUsage // TypeDefIndex: 4064
{
	// Fields
	public float last; // 0x0
	public float average; // 0x4
	public float peak; // 0x8
}

// Namespace: 
public static class CriWareDecrypter // TypeDefIndex: 4065
{
	// Fields
	private static ulong temporalStorage; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC8D740 Offset: 0xC8D740 VA: 0xC8D740
	private static CriWareDecrypter.CallbackFromNativeDelegate <>f__mg$cache0; // 0x8

	// Methods

	// RVA: 0xE7E680 Offset: 0xE7E680 VA: 0xE7E680
	public static bool Initialize(CriWareDecrypterConfig config) { }

	// RVA: 0xE7E74C Offset: 0xE7E74C VA: 0xE7E74C
	public static bool Initialize(string key, string authenticationFile, bool enableAtomDecryption, bool enableManaDecryption) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC8FF48 Offset: 0xC8FF48 VA: 0xC8FF48
	// RVA: 0xE7E618 Offset: 0xE7E618 VA: 0xE7E618
	private static ulong CallbackFromNative(IntPtr ptr1) { }

	// RVA: 0xE7E9B4 Offset: 0xE7E9B4 VA: 0xE7E9B4
	public static extern int CRIWARE3D9A5BE6(bool enable_atom_decryption, bool enable_mana_decryption, CriWareDecrypter.CallbackFromNativeDelegate func, IntPtr obj) { }

	// RVA: 0xE7EA80 Offset: 0xE7EA80 VA: 0xE7EA80
	private static void .cctor() { }
}

// Namespace: 
[UnmanagedFunctionPointerAttribute] // RVA: 0xC8B1BC Offset: 0xC8B1BC VA: 0xC8B1BC
public sealed class CriWareDecrypter.CallbackFromNativeDelegate : MulticastDelegate // TypeDefIndex: 4066
{
	// Methods

	// RVA: 0xE7E9A4 Offset: 0xE7E9A4 VA: 0xE7E9A4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xE7EA84 Offset: 0xE7EA84 VA: 0xE7EA84 Slot: 11
	public virtual ulong Invoke(IntPtr ptr1) { }

	// RVA: 0xE7ECB4 Offset: 0xE7ECB4 VA: 0xE7ECB4 Slot: 12
	public virtual IAsyncResult BeginInvoke(IntPtr ptr1, AsyncCallback callback, object object) { }

	// RVA: 0xE7ED40 Offset: 0xE7ED40 VA: 0xE7ED40 Slot: 13
	public virtual ulong EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC8B1D0 Offset: 0xC8B1D0 VA: 0xC8B1D0
public class CriWareErrorHandler : CriMonoBehaviour // TypeDefIndex: 4067
{
	// Fields
	public bool enableDebugPrintOnTerminal; // 0x28
	public bool enableForceCrashOnError; // 0x29
	public bool dontDestroyOnLoad; // 0x2A
	[CompilerGeneratedAttribute] // RVA: 0xC8D750 Offset: 0xC8D750 VA: 0xC8D750
	[DebuggerBrowsableAttribute] // RVA: 0xC8D750 Offset: 0xC8D750 VA: 0xC8D750
	private static string <errorMessage>k__BackingField; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC8D78C Offset: 0xC8D78C VA: 0xC8D78C
	[DebuggerBrowsableAttribute] // RVA: 0xC8D78C Offset: 0xC8D78C VA: 0xC8D78C
	private static CriWareErrorHandler.Callback OnCallback; // 0x8
	[ObsoleteAttribute] // RVA: 0xC8D7C8 Offset: 0xC8D7C8 VA: 0xC8D7C8
	public static CriWareErrorHandler.Callback callback; // 0x10
	public uint messageBufferCounts; // 0x2C
	private static int initializationCount; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC8D804 Offset: 0xC8D804 VA: 0xC8D804
	private static CriWareErrorHandler.ErrorCallbackFunc <>f__mg$cache0; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC8D814 Offset: 0xC8D814 VA: 0xC8D814
	private static CriWareErrorHandler.ErrorCallbackFunc <>f__mg$cache1; // 0x28

	// Properties
	public static string errorMessage { get; set; }

	// Methods

	// RVA: 0xE7EE6C Offset: 0xE7EE6C VA: 0xE7EE6C
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC8FFAC Offset: 0xC8FFAC VA: 0xC8FFAC
	// RVA: 0xE7EE80 Offset: 0xE7EE80 VA: 0xE7EE80
	public static string get_errorMessage() { }

	[CompilerGeneratedAttribute] // RVA: 0xC8FFBC Offset: 0xC8FFBC VA: 0xC8FFBC
	// RVA: 0xE7EEE8 Offset: 0xE7EEE8 VA: 0xE7EEE8
	public static void set_errorMessage(string value) { }

	// RVA: 0xE7EF54 Offset: 0xE7EF54 VA: 0xE7EF54
	public static void add_OnCallback(CriWareErrorHandler.Callback value) { }

	// RVA: 0xE7F094 Offset: 0xE7F094 VA: 0xE7F094
	public static void remove_OnCallback(CriWareErrorHandler.Callback value) { }

	// RVA: 0xE7F1D4 Offset: 0xE7F1D4 VA: 0xE7F1D4
	private void Awake() { }

	// RVA: 0xE7F6C8 Offset: 0xE7F6C8 VA: 0xE7F6C8 Slot: 4
	protected override void OnEnable() { }

	// RVA: 0xE7F7B0 Offset: 0xE7F7B0 VA: 0xE7F7B0 Slot: 5
	protected override void OnDisable() { }

	// RVA: 0xE7F81C Offset: 0xE7F81C VA: 0xE7F81C
	private void Start() { }

	// RVA: 0xE7F820 Offset: 0xE7F820 VA: 0xE7F820 Slot: 6
	public override void CriInternalUpdate() { }

	// RVA: 0xE7FAC8 Offset: 0xE7FAC8 VA: 0xE7FAC8 Slot: 7
	public override void CriInternalLateUpdate() { }

	// RVA: 0xE7FACC Offset: 0xE7FACC VA: 0xE7FACC
	private void OnDestroy() { }

	// RVA: 0xE7F830 Offset: 0xE7F830 VA: 0xE7F830
	private void DequeueErrorMessages() { }

	// RVA: 0xE7FD18 Offset: 0xE7FD18 VA: 0xE7FD18
	private static void HandleMessage(string errmsg) { }

	// RVA: 0xE7FEA8 Offset: 0xE7FEA8 VA: 0xE7FEA8
	private static void OutputDefaultLog(string errmsg) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC8FFCC Offset: 0xC8FFCC VA: 0xC8FFCC
	// RVA: 0xE7EE08 Offset: 0xE7EE08 VA: 0xE7EE08
	private static void ErrorCallbackFromNative(string errmsg) { }

	// RVA: 0xE7F4E0 Offset: 0xE7F4E0 VA: 0xE7F4E0
	private static extern void CRIWARE063A11A2(uint length) { }

	// RVA: 0xE7F3B8 Offset: 0xE7F3B8 VA: 0xE7F3B8
	private static extern void CRIWAREA2E6711B() { }

	// RVA: 0xE7FC00 Offset: 0xE7FC00 VA: 0xE7FC00
	private static extern void CRIWARE3BCC893C() { }

	// RVA: 0xE7F57C Offset: 0xE7F57C VA: 0xE7F57C
	private static extern void CRIWAREDBC6F415(bool sw) { }

	// RVA: 0xE7FB74 Offset: 0xE7FB74 VA: 0xE7FB74
	private static extern void CRIWARE4A393AE0() { }

	// RVA: 0xE7FC8C Offset: 0xE7FC8C VA: 0xE7FC8C
	private static extern IntPtr CRIWARE841C0338() { }

	// RVA: 0xE7F444 Offset: 0xE7F444 VA: 0xE7F444
	private static extern void CRIWARE527DA518(bool sw) { }

	// RVA: 0xE7F628 Offset: 0xE7F628 VA: 0xE7F628
	private static extern void CRIWARED1107B8D(CriWareErrorHandler.ErrorCallbackFunc callback) { }

	// RVA: 0xE802DC Offset: 0xE802DC VA: 0xE802DC
	private static void .cctor() { }
}

// Namespace: 
public sealed class CriWareErrorHandler.Callback : MulticastDelegate // TypeDefIndex: 4068
{
	// Methods

	// RVA: 0xE802E0 Offset: 0xE802E0 VA: 0xE802E0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xE7FF3C Offset: 0xE7FF3C VA: 0xE7FF3C Slot: 11
	public virtual void Invoke(string message) { }

	// RVA: 0xE802F0 Offset: 0xE802F0 VA: 0xE802F0 Slot: 12
	public virtual IAsyncResult BeginInvoke(string message, AsyncCallback callback, object object) { }

	// RVA: 0xE80314 Offset: 0xE80314 VA: 0xE80314 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[UnmanagedFunctionPointerAttribute] // RVA: 0xC8B208 Offset: 0xC8B208 VA: 0xC8B208
public sealed class CriWareErrorHandler.ErrorCallbackFunc : MulticastDelegate // TypeDefIndex: 4069
{
	// Methods

	// RVA: 0xE7F618 Offset: 0xE7F618 VA: 0xE7F618
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xE80320 Offset: 0xE80320 VA: 0xE80320 Slot: 11
	public virtual void Invoke(string errmsg) { }

	// RVA: 0xE806C0 Offset: 0xE806C0 VA: 0xE806C0 Slot: 12
	public virtual IAsyncResult BeginInvoke(string errmsg, AsyncCallback callback, object object) { }

	// RVA: 0xE806E4 Offset: 0xE806E4 VA: 0xE806E4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[Serializable]
public class CriFsConfig // TypeDefIndex: 4070
{
	// Fields
	public const int defaultAndroidDeviceReadBitrate = 50000000;
	public int numberOfLoaders; // 0x10
	public int numberOfBinders; // 0x14
	public int numberOfInstallers; // 0x18
	public int installBufferSize; // 0x1C
	public int maxPath; // 0x20
	public string userAgentString; // 0x28
	public bool minimizeFileDescriptorUsage; // 0x30
	public bool enableCrcCheck; // 0x31
	public int androidDeviceReadBitrate; // 0x34

	// Methods

	// RVA: 0x11AF1BC Offset: 0x11AF1BC VA: 0x11AF1BC
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig // TypeDefIndex: 4071
{
	// Fields
	public string acfFileName; // 0x10
	public int maxVirtualVoices; // 0x18
	public int maxVoiceLimitGroups; // 0x1C
	public int maxCategories; // 0x20
	public int maxSequenceEventsPerFrame; // 0x24
	public int maxBeatSyncCallbacksPerFrame; // 0x28
	public int maxCueLinkCallbacksPerFrame; // 0x2C
	public CriAtomConfig.StandardVoicePoolConfig standardVoicePoolConfig; // 0x30
	public CriAtomConfig.HcaMxVoicePoolConfig hcaMxVoicePoolConfig; // 0x38
	public int outputSamplingRate; // 0x40
	public bool usesInGamePreview; // 0x44
	public CriAtomConfig.InGamePreviewSwitchMode inGamePreviewMode; // 0x48
	public bool switchInitializeSocket; // 0x4C
	public CriAtomConfig.InGamePreviewConfig inGamePreviewConfig; // 0x50
	public float serverFrequency; // 0x58
	public int asrOutputChannels; // 0x5C
	public bool useRandomSeedWithTime; // 0x60
	public int categoriesPerPlayback; // 0x64
	public int maxBuses; // 0x68
	public int maxParameterBlocks; // 0x6C
	public bool vrMode; // 0x70
	public bool keepPlayingSoundOnPause; // 0x71
	public int pcBufferingTime; // 0x74
	public CriAtomConfig.LinuxOutput linuxOutput; // 0x78
	public int linuxPulseLatencyUsec; // 0x7C
	public bool iosEnableSonicSync; // 0x80
	public int iosBufferingTime; // 0x84
	public bool iosOverrideIPodMusic; // 0x88
	public bool androidEnableSonicSync; // 0x89
	public int androidBufferingTime; // 0x8C
	public int androidStartBufferingTime; // 0x90
	public CriAtomConfig.AndroidLowLatencyStandardVoicePoolConfig androidLowLatencyStandardVoicePoolConfig; // 0x98
	public bool androidUsesAndroidFastMixer; // 0xA0
	public bool androidForceToUseAsrForDefaultPlayback; // 0xA1
	public bool androidUsesAAudio; // 0xA2
	public CriAtomConfig.VitaManaVoicePoolConfig vitaManaVoicePoolConfig; // 0xA8
	public CriAtomConfig.VitaAtrac9VoicePoolConfig vitaAtrac9VoicePoolConfig; // 0xB0
	public CriAtomConfig.Ps4Atrac9VoicePoolConfig ps4Atrac9VoicePoolConfig; // 0xB8
	public CriAtomConfig.SwitchOpusVoicePoolConfig switchOpusVoicePoolConfig; // 0xC0
	public CriAtomConfig.Ps4Audio3dConfig ps4Audio3dConfig; // 0xC8
	public CriAtomConfig.WebGLWebAudioVoicePoolConfig webglWebAudioVoicePoolConfig; // 0xD0

	// Methods

	// RVA: 0x11EE6DC Offset: 0x11EE6DC VA: 0x11EE6DC
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.StandardVoicePoolConfig // TypeDefIndex: 4072
{
	// Fields
	public int memoryVoices; // 0x10
	public int streamingVoices; // 0x14

	// Methods

	// RVA: 0x11EE930 Offset: 0x11EE930 VA: 0x11EE930
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.HcaMxVoicePoolConfig // TypeDefIndex: 4073
{
	// Fields
	public int memoryVoices; // 0x10
	public int streamingVoices; // 0x14

	// Methods

	// RVA: 0x11EE944 Offset: 0x11EE944 VA: 0x11EE944
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public enum CriAtomConfig.InGamePreviewSwitchMode // TypeDefIndex: 4074
{
	// Fields
	public int value__; // 0x0
	public const CriAtomConfig.InGamePreviewSwitchMode Disable = 0;
	public const CriAtomConfig.InGamePreviewSwitchMode Enable = 1;
	public const CriAtomConfig.InGamePreviewSwitchMode FollowBuildSetting = 2;
	public const CriAtomConfig.InGamePreviewSwitchMode Default = 3;
}

// Namespace: 
[Serializable]
public class CriAtomConfig.InGamePreviewConfig // TypeDefIndex: 4075
{
	// Fields
	public int maxPreviewObjects; // 0x10
	public int communicationBufferSize; // 0x14
	public int playbackPositionUpdateInterval; // 0x18

	// Methods

	// RVA: 0x11EE94C Offset: 0x11EE94C VA: 0x11EE94C
	public void .ctor() { }
}

// Namespace: 
public enum CriAtomConfig.LinuxOutput // TypeDefIndex: 4076
{
	// Fields
	public int value__; // 0x0
	public const CriAtomConfig.LinuxOutput Default = 0;
	public const CriAtomConfig.LinuxOutput PulseAudio = 1;
	public const CriAtomConfig.LinuxOutput ALSA = 2;
}

// Namespace: 
[Serializable]
public class CriAtomConfig.AndroidLowLatencyStandardVoicePoolConfig // TypeDefIndex: 4077
{
	// Fields
	public int memoryVoices; // 0x10
	public int streamingVoices; // 0x14

	// Methods

	// RVA: 0x11EE968 Offset: 0x11EE968 VA: 0x11EE968
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.VitaManaVoicePoolConfig // TypeDefIndex: 4078
{
	// Fields
	public int numberOfManaDecoders; // 0x10

	// Methods

	// RVA: 0x11EE970 Offset: 0x11EE970 VA: 0x11EE970
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.VitaAtrac9VoicePoolConfig // TypeDefIndex: 4079
{
	// Fields
	public int memoryVoices; // 0x10
	public int streamingVoices; // 0x14

	// Methods

	// RVA: 0x11EE980 Offset: 0x11EE980 VA: 0x11EE980
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.Ps4Atrac9VoicePoolConfig // TypeDefIndex: 4080
{
	// Fields
	public int memoryVoices; // 0x10
	public int streamingVoices; // 0x14

	// Methods

	// RVA: 0x11EE988 Offset: 0x11EE988 VA: 0x11EE988
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.SwitchOpusVoicePoolConfig // TypeDefIndex: 4081
{
	// Fields
	public int memoryVoices; // 0x10
	public int streamingVoices; // 0x14

	// Methods

	// RVA: 0x11EE990 Offset: 0x11EE990 VA: 0x11EE990
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.Ps4Audio3dConfig // TypeDefIndex: 4082
{
	// Fields
	public bool useAudio3D; // 0x10
	public CriAtomConfig.Ps4Audio3dConfig.VoicePoolConfig voicePoolConfig; // 0x18

	// Methods

	// RVA: 0x11EE998 Offset: 0x11EE998 VA: 0x11EE998
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.Ps4Audio3dConfig.VoicePoolConfig // TypeDefIndex: 4083
{
	// Fields
	public int memoryVoices; // 0x10
	public int streamingVoices; // 0x14

	// Methods

	// RVA: 0x11EEA10 Offset: 0x11EEA10 VA: 0x11EEA10
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriAtomConfig.WebGLWebAudioVoicePoolConfig // TypeDefIndex: 4084
{
	// Fields
	public int voices; // 0x10

	// Methods

	// RVA: 0x11EEA00 Offset: 0x11EEA00 VA: 0x11EEA00
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriManaConfig // TypeDefIndex: 4085
{
	// Fields
	public int numberOfDecoders; // 0x10
	public int numberOfMaxEntries; // 0x14
	public readonly bool graphicsMultiThreaded; // 0x18
	public CriManaConfig.PCH264PlaybackConfig pcH264PlaybackConfig; // 0x20
	public CriManaConfig.VitaH264PlaybackConfig vitaH264PlaybackConfig; // 0x28
	public CriManaConfig.WebGLConfig webglConfig; // 0x30

	// Methods

	// RVA: 0x11C3E90 Offset: 0x11C3E90 VA: 0x11C3E90
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriManaConfig.PCH264PlaybackConfig // TypeDefIndex: 4086
{
	// Fields
	public bool useH264Playback; // 0x10

	// Methods

	// RVA: 0x11C3F60 Offset: 0x11C3F60 VA: 0x11C3F60
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriManaConfig.VitaH264PlaybackConfig // TypeDefIndex: 4087
{
	// Fields
	public bool useH264Playback; // 0x10
	public int maxWidth; // 0x14
	public int maxHeight; // 0x18
	public bool getMemoryFromTexture; // 0x1C

	// Methods

	// RVA: 0x11C3F70 Offset: 0x11C3F70 VA: 0x11C3F70
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriManaConfig.WebGLConfig // TypeDefIndex: 4088
{
	// Fields
	public string webworkerPath; // 0x10
	public int heapSize; // 0x18

	// Methods

	// RVA: 0x11C3F84 Offset: 0x11C3F84 VA: 0x11C3F84
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class CriWareDecrypterConfig // TypeDefIndex: 4089
{
	// Fields
	public string key; // 0x10
	public string authenticationFile; // 0x18
	public bool enableAtomDecryption; // 0x20
	public bool enableManaDecryption; // 0x21

	// Methods

	// RVA: 0xE7ED7C Offset: 0xE7ED7C VA: 0xE7ED7C
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC8B21C Offset: 0xC8B21C VA: 0xC8B21C
public class CriWareInitializer : CriMonoBehaviour // TypeDefIndex: 4090
{
	// Fields
	public bool initializesFileSystem; // 0x28
	public CriFsConfig fileSystemConfig; // 0x30
	public bool initializesAtom; // 0x38
	public CriAtomConfig atomConfig; // 0x40
	public bool initializesMana; // 0x48
	public CriManaConfig manaConfig; // 0x50
	public bool useDecrypter; // 0x58
	public CriWareDecrypterConfig decrypterConfig; // 0x60
	public bool dontInitializeOnAwake; // 0x68
	public bool dontDestroyOnLoad; // 0x69
	private static int initializationCount; // 0x0

	// Methods

	// RVA: 0xE806F0 Offset: 0xE806F0 VA: 0xE806F0
	public void .ctor() { }

	// RVA: 0xE807C8 Offset: 0xE807C8 VA: 0xE807C8
	private void Awake() { }

	// RVA: 0xE80D40 Offset: 0xE80D40 VA: 0xE80D40 Slot: 4
	protected override void OnEnable() { }

	// RVA: 0xE80D44 Offset: 0xE80D44 VA: 0xE80D44
	private void Start() { }

	// RVA: 0xE80D48 Offset: 0xE80D48 VA: 0xE80D48
	private void OnDestroy() { }

	// RVA: 0xE80EF8 Offset: 0xE80EF8 VA: 0xE80EF8 Slot: 6
	public override void CriInternalUpdate() { }

	// RVA: 0xE80EFC Offset: 0xE80EFC VA: 0xE80EFC Slot: 7
	public override void CriInternalLateUpdate() { }

	// RVA: 0xE80844 Offset: 0xE80844 VA: 0xE80844
	public void Initialize() { }

	// RVA: 0xE80D4C Offset: 0xE80D4C VA: 0xE80D4C
	public void Shutdown() { }

	// RVA: 0xE8180C Offset: 0xE8180C VA: 0xE8180C
	public static bool IsInitialized() { }

	// RVA: 0xE818AC Offset: 0xE818AC VA: 0xE818AC
	public static void AddAudioEffectInterface(IntPtr effect_interface) { }

	// RVA: 0xE80F00 Offset: 0xE80F00 VA: 0xE80F00
	public static bool InitializeFileSystem(CriFsConfig config) { }

	// RVA: 0xE810CC Offset: 0xE810CC VA: 0xE810CC
	public static bool InitializeAtom(CriAtomConfig config) { }

	// RVA: 0xE816E8 Offset: 0xE816E8 VA: 0xE816E8
	public static bool InitializeMana(CriManaConfig config) { }

	[ObsoleteAttribute] // RVA: 0xC90030 Offset: 0xC90030 VA: 0xC90030
	// RVA: 0xE81950 Offset: 0xE81950 VA: 0xE81950
	public static bool InitializeDecrypter(CriWareDecrypterConfig config) { }

	// RVA: 0xE819B4 Offset: 0xE819B4 VA: 0xE819B4
	private static void .cctor() { }
}

// Namespace: 
public static class CriAtomExDebug // TypeDefIndex: 4091
{
	// Methods

	// RVA: 0x11943FC Offset: 0x11943FC VA: 0x11943FC
	public static void GetResourcesInfo(out CriAtomExDebug.ResourcesInfo resourcesInfo) { }

