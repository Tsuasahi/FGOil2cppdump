public class EventBoostItemUsedEntity : DataEntityBase<long> // TypeDefIndex: 6824
{
	// Fields
	public UsedCount[] usedCount; // 0x10
	public long eventId; // 0x18

	// Methods

	// RVA: 0x1D2217C Offset: 0x1D2217C VA: 0x1D2217C
	public void .ctor() { }

	// RVA: 0x1D221CC Offset: 0x1D221CC VA: 0x1D221CC Slot: 5
	protected sealed override long CreatePrimaryKey() { }

	// RVA: 0x1D221D4 Offset: 0x1D221D4 VA: 0x1D221D4
	public UsedCount GetUsedCount(long userId) { }
}

// Namespace: 
public class EventBoostItemUsedMaster : DataMasterBase<EventBoostItemUsedMaster, EventBoostItemUsedEntity, long> // TypeDefIndex: 6825
{
	// Methods

	// RVA: 0x1D22264 Offset: 0x1D22264 VA: 0x1D22264
	public void .ctor() { }

	// RVA: 0x1D222B8 Offset: 0x1D222B8 VA: 0x1D222B8
	public UsedCount GetUsedCount(int eventId, long userId) { }
}

// Namespace: 
public class EventBossStatusUiEntity : DataEntityBase<string> // TypeDefIndex: 6826
{
	// Fields
	public int eventId; // 0x10
	public int idx; // 0x14
	public Dictionary<string, object> script; // 0x18

	// Methods

	// RVA: 0x1D22398 Offset: 0x1D22398 VA: 0x1D22398
	public void .ctor() { }

	// RVA: 0x1D223E8 Offset: 0x1D223E8 VA: 0x1D223E8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1D223F8 Offset: 0x1D223F8 VA: 0x1D223F8
	public static string CreatePK(int eventId, int idx) { }

	// RVA: 0x1D22408 Offset: 0x1D22408 VA: 0x1D22408
	public int GetEventId() { }

	// RVA: 0x1D22410 Offset: 0x1D22410 VA: 0x1D22410
	public int GetIndex() { }

	// RVA: 0x1D22418 Offset: 0x1D22418 VA: 0x1D22418
	public int GetScriptIntParam(string key, int defVal = -1) { }

	// RVA: 0x1D22510 Offset: 0x1D22510 VA: 0x1D22510
	public int GetScriptStringParam(string key, int defVal = -1) { }

	// RVA: 0x1D225C4 Offset: 0x1D225C4 VA: 0x1D225C4
	public string GetScriptString(string key, string defStr = "") { }

	// RVA: 0x1D22490 Offset: 0x1D22490 VA: 0x1D22490
	public object GetScriptObj(string key) { }

	// RVA: 0x1D22600 Offset: 0x1D22600 VA: 0x1D22600
	private Color ConvertColorFromInt(int value) { }

	// RVA: 0x1D2265C Offset: 0x1D2265C VA: 0x1D2265C
	private Color ConvertColorFromStr(string value) { }

	// RVA: 0x1D226D0 Offset: 0x1D226D0 VA: 0x1D226D0
	public Color GetTextEffectColor(Color defaultColor) { }

	// RVA: 0x1D2277C Offset: 0x1D2277C VA: 0x1D2277C
	public Color GetStatusBattleColor(Color defaultColor) { }

	// RVA: 0x1D22828 Offset: 0x1D22828 VA: 0x1D22828
	public Color GetStatusLastColor(Color defaultColor) { }

	// RVA: 0x1D228D4 Offset: 0x1D228D4 VA: 0x1D228D4
	public Color GetStatusWinColor(Color defaultColor) { }

	// RVA: 0x1D22980 Offset: 0x1D22980 VA: 0x1D22980
	public int GetGaugeId() { }

	// RVA: 0x1D229D4 Offset: 0x1D229D4 VA: 0x1D229D4
	public string GetCountFormat() { }

	// RVA: 0x1D22A70 Offset: 0x1D22A70 VA: 0x1D22A70
	public int GetStatusHeight() { }

	// RVA: 0x1D22AC4 Offset: 0x1D22AC4 VA: 0x1D22AC4
	public int GetLastBattleIconId() { }
}

// Namespace: 
public class EventBossStatusUiMaster : DataMasterBase<EventBossStatusUiMaster, EventBossStatusUiEntity, string> // TypeDefIndex: 6827
{
	// Methods

	// RVA: 0x1D22B18 Offset: 0x1D22B18 VA: 0x1D22B18
	public void .ctor() { }

	// RVA: 0x1D22B6C Offset: 0x1D22B6C VA: 0x1D22B6C
	public EventBossStatusUiEntity GetEntity(int eventId, int idx) { }

	// RVA: 0x1D22BE0 Offset: 0x1D22BE0 VA: 0x1D22BE0
	public bool TryGetEntity(out EventBossStatusUiEntity entity, int eventId, int idx) { }

	// RVA: 0x1D22C64 Offset: 0x1D22C64 VA: 0x1D22C64
	public EventBossStatusUiEntity GetEntityFromEventIdAndIndex(int eventId, int index) { }

	// RVA: 0x1D22D44 Offset: 0x1D22D44 VA: 0x1D22D44
	public List<EventBossStatusUiEntity> GetEntityListFromEventId(int eventId) { }
}

// Namespace: 
public class EventBulletinBoardEntity : DataEntityBase<int> // TypeDefIndex: 6828
{
	// Fields
	public int id; // 0x10
	public int eventId; // 0x14
	public string message; // 0x18

	// Methods

	// RVA: 0x1D22F6C Offset: 0x1D22F6C VA: 0x1D22F6C
	public void .ctor() { }

	// RVA: 0x1D22FBC Offset: 0x1D22FBC VA: 0x1D22FBC Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class EventBulletinBoardMaster : DataMasterBase<EventBulletinBoardMaster, EventBulletinBoardEntity, int> // TypeDefIndex: 6829
{
	// Methods

	// RVA: 0x1D22FC4 Offset: 0x1D22FC4 VA: 0x1D22FC4
	public void .ctor() { }

	// RVA: 0x1D23018 Offset: 0x1D23018 VA: 0x1D23018
	public List<string> GetAvailableMessages(int eventId) { }
}

// Namespace: 
public class EventBulletinBoardReleaseEntity : DataEntityBase<string> // TypeDefIndex: 6830
{
	// Fields
	public int bulletinBoardId; // 0x10
	public int condType; // 0x14
	public int condTargetId; // 0x18
	public int condNum; // 0x1C
	public int condGroup; // 0x20

	// Methods

	// RVA: 0x1D2356C Offset: 0x1D2356C VA: 0x1D2356C
	public void .ctor() { }

	// RVA: 0x1D235BC Offset: 0x1D235BC VA: 0x1D235BC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1D235D0 Offset: 0x1D235D0 VA: 0x1D235D0
	public static string CreatePK(int bulletinBoardId, int condType, int condTargetId) { }
}

// Namespace: 
public class EventBulletinBoardReleaseMaster : DataMasterBase<EventBulletinBoardReleaseMaster, EventBulletinBoardReleaseEntity, string> // TypeDefIndex: 6831
{
	// Methods

	// RVA: 0x1D235E4 Offset: 0x1D235E4 VA: 0x1D235E4
	public void .ctor() { }

	// RVA: 0x1D23638 Offset: 0x1D23638 VA: 0x1D23638
	public EventBulletinBoardReleaseEntity GetEntity(int bulletinBoardId, int condType, int condTargetId) { }

	// RVA: 0x1D236BC Offset: 0x1D236BC VA: 0x1D236BC
	public bool TryGetEntity(out EventBulletinBoardReleaseEntity entity, int bulletinBoardId, int condType, int condTargetId) { }

	// RVA: 0x1D231F0 Offset: 0x1D231F0 VA: 0x1D231F0
	public bool IsOpen(int messageId) { }
}

// Namespace: 
public class EventCampaignEntity : DataEntityBase<string> // TypeDefIndex: 6832
{
	// Fields
	public int eventId; // 0x10
	public int target; // 0x14
	public int idx; // 0x18
	public int[] targetIds; // 0x20
	public int value; // 0x28
	public int calcType; // 0x2C
	public int[] warIds; // 0x30
	public string entryCondMessage; // 0x38

	// Methods

	// RVA: 0x1D23748 Offset: 0x1D23748 VA: 0x1D23748
	public void .ctor() { }

	// RVA: 0x1D23798 Offset: 0x1D23798 VA: 0x1D23798
	public EventCampaignEntity Clone() { }

	// RVA: 0x1D238D0 Offset: 0x1D238D0 VA: 0x1D238D0
	public int getEventId() { }

	// RVA: 0x1D238D8 Offset: 0x1D238D8 VA: 0x1D238D8
	public int getTarget() { }

	// RVA: 0x1D238E0 Offset: 0x1D238E0 VA: 0x1D238E0
	public int getValue() { }

	// RVA: 0x1D238E8 Offset: 0x1D238E8 VA: 0x1D238E8
	public int getCalcType() { }

	// RVA: 0x1D238F0 Offset: 0x1D238F0 VA: 0x1D238F0
	public bool isDispWarId(int warId) { }

	// RVA: 0x1D23990 Offset: 0x1D23990 VA: 0x1D23990 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1D239A4 Offset: 0x1D239A4 VA: 0x1D239A4
	public static string CreatePK(int eventId, int target, int idx) { }
}

// Namespace: 
public class EventCampaignMaster : DataMasterBase<EventCampaignMaster, EventCampaignEntity, string> // TypeDefIndex: 6833
{
	// Methods

	// RVA: 0x1D239B8 Offset: 0x1D239B8 VA: 0x1D239B8
	public void .ctor() { }

	// RVA: 0x1D23A0C Offset: 0x1D23A0C VA: 0x1D23A0C
	public EventCampaignEntity GetEntity(int eventId, int target, int idx) { }

	// RVA: 0x1D23A90 Offset: 0x1D23A90 VA: 0x1D23A90
	public bool TryGetEntity(out EventCampaignEntity entity, int eventId, int target, int idx) { }

	// RVA: 0x1D23B1C Offset: 0x1D23B1C VA: 0x1D23B1C
	public EventCampaignEntity GetTargetEntitiyList(CombineAdjustTarget.TYPE targetType) { }

	// RVA: 0x1D23C30 Offset: 0x1D23C30 VA: 0x1D23C30
	public EventCampaignEntity[] GetTargetEntitiyAllList(CombineAdjustTarget.TYPE targetType) { }

	// RVA: 0x1D23DA8 Offset: 0x1D23DA8 VA: 0x1D23DA8
	public EventCampaignEntity getData(int event_id) { }

	// RVA: 0x1D23F10 Offset: 0x1D23F10 VA: 0x1D23F10
	public EventCampaignEntity[] getData(CombineAdjustTarget.TYPE targetType, int eventId) { }

	// RVA: 0x1D240D4 Offset: 0x1D240D4 VA: 0x1D240D4
	public EventCampaignEntity[] getData(CombineAdjustTarget.TYPE targetType, EventEntity[] eventEntityList) { }

	// RVA: 0x1D2430C Offset: 0x1D2430C VA: 0x1D2430C
	public List<EventCampaignEntity> GetCombineEventCampaigns() { }

	// RVA: 0x1D2460C Offset: 0x1D2460C VA: 0x1D2460C
	public EventCampaignEntity[] GetFriendPointCampaigns(EventCampaignMaster.FriendPointGetType type = 0) { }

	// RVA: 0x1D24974 Offset: 0x1D24974 VA: 0x1D24974
	public List<List<EventCampaignEntity>> GetCombineEventCampaigns(List<EventCampaignEntity> eventCampaignEntities) { }

	// RVA: 0x1D24F74 Offset: 0x1D24F74 VA: 0x1D24F74
	public List<EventCampaignEntity> GetFriendPointSummonMultipleFreeCampaign(int gachaId) { }

	// RVA: 0x1D25288 Offset: 0x1D25288 VA: 0x1D25288
	public List<EventCampaignEntity> GetAvailableFriendshipUpItemEventCampaigns() { }
}

// Namespace: 
public enum EventCampaignMaster.FriendPointGetType // TypeDefIndex: 6834
{
	// Fields
	public int value__; // 0x0
	public const EventCampaignMaster.FriendPointGetType NORMAL = 0;
	public const EventCampaignMaster.FriendPointGetType FUTURE = 1;
	public const EventCampaignMaster.FriendPointGetType INCLUDE_MATCH = 2;
}

// Namespace: 
public class EventCampaignReleaseEntity : DataEntityBase<string> // TypeDefIndex: 6835
{
	// Fields
	public int eventId; // 0x10
	public int target; // 0x14
	public int idx; // 0x18
	public int condType; // 0x1C
	public int condTargetId; // 0x20
	public int condNum; // 0x24
	public int condGroup; // 0x28

	// Methods

	// RVA: 0x1D25450 Offset: 0x1D25450 VA: 0x1D25450
	public void .ctor() { }

	// RVA: 0x1D254A0 Offset: 0x1D254A0 VA: 0x1D254A0
	public static string getCreatePrimarykey(int eventId, int target, int idx) { }

	// RVA: 0x1D256F4 Offset: 0x1D256F4 VA: 0x1D256F4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1D25708 Offset: 0x1D25708 VA: 0x1D25708
	public static string CreatePK(int eventId, int target, int idx) { }
}

// Namespace: 
public class EventCampaignReleaseMaster : DataMasterBase<EventCampaignReleaseMaster, EventCampaignReleaseEntity, string> // TypeDefIndex: 6836
{
	// Methods

	// RVA: 0x1D2571C Offset: 0x1D2571C VA: 0x1D2571C
	public void .ctor() { }

	// RVA: 0x1D25770 Offset: 0x1D25770 VA: 0x1D25770
	public EventCampaignReleaseEntity GetEntity(int eventId, int target, int idx) { }

	// RVA: 0x1D257F4 Offset: 0x1D257F4 VA: 0x1D257F4
	public bool TryGetEntity(out EventCampaignReleaseEntity entity, int eventId, int target, int idx) { }

	// RVA: 0x1D25880 Offset: 0x1D25880 VA: 0x1D25880
	public bool isRelease(int eventId, int target) { }
}

// Namespace: 
public class EventCombineCostumeEntity : DataEntityBase<string> // TypeDefIndex: 6837
{
	// Fields
	public int svtId; // 0x10
	public int costumeId; // 0x14
	public int eventId; // 0x18
	public int qp; // 0x1C
	public int[] itemNums; // 0x20
	public int[] itemIds; // 0x28

	// Methods

	// RVA: 0x1D25A54 Offset: 0x1D25A54 VA: 0x1D25A54
	public void .ctor() { }

	// RVA: 0x1D25AA4 Offset: 0x1D25AA4 VA: 0x1D25AA4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1D25AB8 Offset: 0x1D25AB8 VA: 0x1D25AB8
	public static string CreatePK(int svtId, int costumeId, int eventId) { }

	// RVA: 0x1D25ACC Offset: 0x1D25ACC VA: 0x1D25ACC
	public bool IsShortEventItem() { }
}

// Namespace: 
public class EventCombineCostumeMaster : DataMasterBase<EventCombineCostumeMaster, EventCombineCostumeEntity, string> // TypeDefIndex: 6838
{
	// Methods

	// RVA: 0x1D25C8C Offset: 0x1D25C8C VA: 0x1D25C8C
	public void .ctor() { }

	// RVA: 0x1D25CE0 Offset: 0x1D25CE0 VA: 0x1D25CE0
	public EventCombineCostumeEntity GetEntity(int svtId, int costumeId, int eventId) { }

	// RVA: 0x1D25D64 Offset: 0x1D25D64 VA: 0x1D25D64
	public bool TryGetEntity(out EventCombineCostumeEntity entity, int svtId, int costumeId, int eventId) { }

	// RVA: 0x1D25DF0 Offset: 0x1D25DF0 VA: 0x1D25DF0
	public EventCombineCostumeEntity GetListBySvtIdAndCostumeId(int svtId, int costumeId) { }

	// RVA: 0x1D2611C Offset: 0x1D2611C VA: 0x1D2611C
	public bool IsEventCombineCostume(int svtId, int costumeId) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAED80 Offset: 0xCAED80 VA: 0xCAED80
private sealed class EventCombineCostumeMaster.<GetListBySvtIdAndCostumeId>c__AnonStorey0 // TypeDefIndex: 6839
{
	// Fields
	internal EventCombineCostumeEntity ent; // 0x10

	// Methods

	// RVA: 0x1D26114 Offset: 0x1D26114 VA: 0x1D26114
	public void .ctor() { }

	// RVA: 0x1D26138 Offset: 0x1D26138 VA: 0x1D26138
	internal bool <>m__0(EventEntity x) { }
}

// Namespace: 
public class EventCombineEntity : DataEntityBase<string> // TypeDefIndex: 6840
{
	// Fields
	public int id; // 0x10
	public int target; // 0x14
	public int value; // 0x18
	public int calcType; // 0x1C

	// Methods

	// RVA: 0x1D26184 Offset: 0x1D26184 VA: 0x1D26184
	public void .ctor() { }

	// RVA: 0x1D261D4 Offset: 0x1D261D4 VA: 0x1D261D4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1D261E4 Offset: 0x1D261E4 VA: 0x1D261E4
	public static string CreatePK(int id, int target) { }
}

// Namespace: 
public enum EventCombineEntity.CalcType // TypeDefIndex: 6841
{
	// Fields
	public int value__; // 0x0
	public const EventCombineEntity.CalcType ADDITION = 1;
	public const EventCombineEntity.CalcType MULTIPLICATION = 2;
	public const EventCombineEntity.CalcType FIXED_VALUE = 3;
}

// Namespace: 
public class EventCombineMaster : DataMasterBase<EventCombineMaster, EventCombineEntity, string> // TypeDefIndex: 6842
{
	// Methods

	// RVA: 0x1D261F4 Offset: 0x1D261F4 VA: 0x1D261F4
	public void .ctor() { }

	// RVA: 0x1D26248 Offset: 0x1D26248 VA: 0x1D26248
	public EventCombineEntity GetEntity(int id, int target) { }

	// RVA: 0x1D262BC Offset: 0x1D262BC VA: 0x1D262BC
	public bool TryGetEntity(out EventCombineEntity entity, int id, int target) { }

	// RVA: 0x1D26340 Offset: 0x1D26340 VA: 0x1D26340
	public EventCombineEntity GetTargetEntitiyList(CombineAdjustTarget.TYPE targetType) { }
}

// Namespace: 
public class EventConquestRewardEntity : DataEntityBase<string> // TypeDefIndex: 6843
{
	// Fields
	public int eventId; // 0x10
	public int questId; // 0x14
	public int objectType; // 0x18
	public int objectId; // 0x1C
	public int objectNum; // 0x20

	// Methods

	// RVA: 0x1D27894 Offset: 0x1D27894 VA: 0x1D27894
	public void .ctor() { }

	// RVA: 0x1D278F8 Offset: 0x1D278F8 VA: 0x1D278F8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1D2790C Offset: 0x1D2790C VA: 0x1D2790C
	public static string CreatePK(int eventId, int questId, int objectType, int objectId) { }

	// RVA: 0x1D27924 Offset: 0x1D27924 VA: 0x1D27924
	public int GetEventId() { }
}

// Namespace: 
public enum EventConquestRewardEntity.GiftType // TypeDefIndex: 6844
{
	// Fields
	public int value__; // 0x0
	public const EventConquestRewardEntity.GiftType NONE = 1;
	public const EventConquestRewardEntity.GiftType ITEM = 2;
}

// Namespace: 
public class EventConquestRewardMaster : DataMasterBase<EventConquestRewardMaster, EventConquestRewardEntity, string> // TypeDefIndex: 6845
{
	// Methods

	// RVA: 0x1D2792C Offset: 0x1D2792C VA: 0x1D2792C
	public void .ctor() { }

	// RVA: 0x1D27980 Offset: 0x1D27980 VA: 0x1D27980
	public EventConquestRewardEntity GetEntity(int eventId, int questId, int objectType, int objectId) { }

	// RVA: 0x1D27A0C Offset: 0x1D27A0C VA: 0x1D27A0C
	public bool TryGetEntity(out EventConquestRewardEntity entity, int eventId, int questId, int objectType, int objectId) { }

	// RVA: 0x1D27AA8 Offset: 0x1D27AA8 VA: 0x1D27AA8
	public EventConquestRewardEntity[] getList(int eventId) { }
}

// Namespace: 
public class EventDetailEntity : DataEntityBase<int> // TypeDefIndex: 6846
{
	// Fields
	protected static readonly string DATA_ROOT_FOLDER; // 0x0
	protected static readonly int DATA_DEFAULT_ID; // 0x8
	public int eventId; // 0x10
	public long flag; // 0x18
	public int rewardPageBgId; // 0x20
	public int bgmId; // 0x24
	public int afterBgmId; // 0x28
	public int pointImageId; // 0x2C
	public int rewardButtonImageId; // 0x30
	public int[] guideImageIds; // 0x38
	public int[] guideLimitCounts; // 0x40
	public int terminalDisplayType; // 0x48
	public int condQuestId; // 0x4C
	public int condQuestPhase; // 0x50
	public string condMessage; // 0x58
	public string[] tutorialImageIds; // 0x60
	public int shopCondQuestId; // 0x68
	public int shopCondQuestPhase; // 0x6C
	public string shopCondMessage; // 0x70
	public int[] shopGuideImageIds; // 0x78
	public int[] shopGuideLimitCounts; // 0x80
	public int shopPageBgId; // 0x88
	public int shopBgmId; // 0x8C
	public int shopAfterBgmId; // 0x90
	public int eventGaugeType; // 0x94
	public string entryCondMessage; // 0x98
	public Dictionary<string, object> script; // 0xA0

	// Methods

	// RVA: 0x1D2AC20 Offset: 0x1D2AC20 VA: 0x1D2AC20
	public void .ctor() { }

	// RVA: 0x1D2AC70 Offset: 0x1D2AC70 VA: 0x1D2AC70 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1D2AC78 Offset: 0x1D2AC78 VA: 0x1D2AC78
	public bool IsReward() { }

	// RVA: 0x1D2ACEC Offset: 0x1D2ACEC VA: 0x1D2ACEC
	public int getBgmId() { }

	// RVA: 0x1D2ADD0 Offset: 0x1D2ADD0 VA: 0x1D2ADD0
	public int getShopBgmId() { }

	// RVA: 0x1D2AEB4 Offset: 0x1D2AEB4 VA: 0x1D2AEB4
	public bool HasFlag(EventDetailEntity.Flag typeFlag) { }

	// RVA: 0x1D2AC9C Offset: 0x1D2AC9C VA: 0x1D2AC9C
	public bool IsEventPoint() { }

	// RVA: 0x1D2AEC4 Offset: 0x1D2AEC4 VA: 0x1D2AEC4
	public bool IsGroupPoint() { }

	// RVA: 0x1D2AED0 Offset: 0x1D2AED0 VA: 0x1D2AED0
	public bool IsExchangeShop() { }

	// RVA: 0x1D2AC90 Offset: 0x1D2AC90 VA: 0x1D2AC90
	public bool IsBoxGacha() { }

	// RVA: 0x1D2AEDC Offset: 0x1D2AEDC VA: 0x1D2AEDC
	public bool IsRanking() { }

	// RVA: 0x1D2AEE8 Offset: 0x1D2AEE8 VA: 0x1D2AEE8
	public bool IsBonusSkill() { }

	// RVA: 0x1D2ACB0 Offset: 0x1D2ACB0 VA: 0x1D2ACB0
	public bool IsMission() { }

	// RVA: 0x1D2ACBC Offset: 0x1D2ACBC VA: 0x1D2ACBC
	public bool IsRaid() { }

	// RVA: 0x1D2AEF4 Offset: 0x1D2AEF4 VA: 0x1D2AEF4
	public bool IsEventShop() { }

	// RVA: 0x1D2ACC8 Offset: 0x1D2ACC8 VA: 0x1D2ACC8
	public bool IsSuperBoss() { }

	// RVA: 0x1D2ACD4 Offset: 0x1D2ACD4 VA: 0x1D2ACD4
	public bool IsGroupRanking() { }

	// RVA: 0x1D2AF00 Offset: 0x1D2AF00 VA: 0x1D2AF00
	public bool isRaidDefeatCount() { }

	// RVA: 0x1D2AF0C Offset: 0x1D2AF0C VA: 0x1D2AF0C
	public bool isBP() { }

	// RVA: 0x1D2AF18 Offset: 0x1D2AF18 VA: 0x1D2AF18
	public bool isNoMaterialBanner() { }

	// RVA: 0x1D2AF24 Offset: 0x1D2AF24 VA: 0x1D2AF24
	public bool isEventVoicePlay() { }

	// RVA: 0x1D2AF30 Offset: 0x1D2AF30 VA: 0x1D2AF30
	public bool isDailyMission() { }

	// RVA: 0x1D2AF3C Offset: 0x1D2AF3C VA: 0x1D2AF3C
	public bool isOldRaid() { }

	// RVA: 0x1D2AF4C Offset: 0x1D2AF4C VA: 0x1D2AF4C
	public bool isGroupRanking() { }

	// RVA: 0x1D2ACE0 Offset: 0x1D2ACE0 VA: 0x1D2ACE0
	public bool isTower() { }

	// RVA: 0x1D2AF58 Offset: 0x1D2AF58 VA: 0x1D2AF58
	public bool IsFatigue() { }

	// RVA: 0x1D2AF64 Offset: 0x1D2AF64 VA: 0x1D2AF64
	public bool IsNoDispArrow() { }

	// RVA: 0x1D2AF70 Offset: 0x1D2AF70 VA: 0x1D2AF70
	public bool IsForcedAdjustmentDialog() { }

	// RVA: 0x1D2AF7C Offset: 0x1D2AF7C VA: 0x1D2AF7C
	public bool IsShiftHelpInfo() { }

	// RVA: 0x1D2AF88 Offset: 0x1D2AF88 VA: 0x1D2AF88
	public bool IsClosePurchaseShop() { }

	// RVA: 0x1D2AF94 Offset: 0x1D2AF94 VA: 0x1D2AF94
	public bool IsTimeStatusRecord() { }

	// RVA: 0x1D2AFA0 Offset: 0x1D2AFA0 VA: 0x1D2AFA0
	public bool IsNeedUseEventSupport() { }

	// RVA: 0x1D2AFAC Offset: 0x1D2AFAC VA: 0x1D2AFAC
	public bool IsRevivalEvent() { }

	// RVA: 0x1D2AFB8 Offset: 0x1D2AFB8 VA: 0x1D2AFB8
	public bool IsEventConquest() { }

	// RVA: 0x1D2AFC4 Offset: 0x1D2AFC4 VA: 0x1D2AFC4
	public bool IsEventDailyPoint() { }

	// RVA: 0x1D2AFD0 Offset: 0x1D2AFD0 VA: 0x1D2AFD0
	public bool IsMapSwitchButtonTop() { }

	// RVA: 0x1D2AFDC Offset: 0x1D2AFDC VA: 0x1D2AFDC
	public EventDetailEntity.EventGaugeType GetGaugeType() { }

	// RVA: 0x1D2AFE4 Offset: 0x1D2AFE4 VA: 0x1D2AFE4
	public bool IsTimeProgressEvent() { }

	// RVA: 0x1D2AFF4 Offset: 0x1D2AFF4 VA: 0x1D2AFF4
	public bool IsEventOnlyEquip() { }

	// RVA: 0x1D2B000 Offset: 0x1D2B000 VA: 0x1D2B000
	public bool IsEventActivityPoint() { }

	// RVA: 0x1D2B00C Offset: 0x1D2B00C VA: 0x1D2B00C
	public bool IsEventPointByQp() { }

	// RVA: 0x1D2B018 Offset: 0x1D2B018 VA: 0x1D2B018
	public bool IsEventBoardGame() { }

	// RVA: 0x1D2B024 Offset: 0x1D2B024 VA: 0x1D2B024
	public bool IsQuestCooltime() { }

	// RVA: 0x1D2B030 Offset: 0x1D2B030 VA: 0x1D2B030
	public bool IsEventPanel() { }

	// RVA: 0x1D2B03C Offset: 0x1D2B03C VA: 0x1D2B03C
	public string GetFloorRewardPrefabName() { }

	// RVA: 0x1D2B11C Offset: 0x1D2B11C VA: 0x1D2B11C
	private int GetIntFromScript(string key) { }

	// RVA: 0x1D2B1C8 Offset: 0x1D2B1C8 VA: 0x1D2B1C8
	public int GetUseDiceSpotId() { }

	// RVA: 0x1D2B218 Offset: 0x1D2B218 VA: 0x1D2B218
	public static string GetServantFatigueFolder(EventDetailEntity entity) { }

	// RVA: 0x1D2B328 Offset: 0x1D2B328 VA: 0x1D2B328
	private int GetServantFatigueId() { }

	// RVA: 0x1D2B378 Offset: 0x1D2B378 VA: 0x1D2B378
	public EventDetailEntity.ChangeLoadAnimationInfo[] GetLoadAnimationIds() { }

	// RVA: 0x1D2B6B0 Offset: 0x1D2B6B0 VA: 0x1D2B6B0
	public int GetRandomMissionMaxNum() { }

	// RVA: 0x1D2B700 Offset: 0x1D2B700 VA: 0x1D2B700
	private static void .cctor() { }
}

// Namespace: 
public enum EventDetailEntity.EventGaugeType // TypeDefIndex: 6847
{
	// Fields
	public int value__; // 0x0
	public const EventDetailEntity.EventGaugeType NONE = 1;
	public const EventDetailEntity.EventGaugeType NORMAL_RAID = 2;
	public const EventDetailEntity.EventGaugeType LAST_WAR_RAID = 3;
	public const EventDetailEntity.EventGaugeType EVENT_GROUP_POINT = 4;
	public const EventDetailEntity.EventGaugeType RASHOMON_RAID = 5;
	public const EventDetailEntity.EventGaugeType EVENT_RACE = 6;
}

// Namespace: 
public enum EventDetailEntity.FlagKind // TypeDefIndex: 6848
{
	// Fields
	public int value__; // 0x0
	public const EventDetailEntity.FlagKind TYPE_POINT = 0;
	public const EventDetailEntity.FlagKind TYPE_EXCHANGE_SHOP = 1;
	public const EventDetailEntity.FlagKind TYPE_BOX_GACHA = 2;
	public const EventDetailEntity.FlagKind TYPE_RANKING = 3;
	public const EventDetailEntity.FlagKind TYPE_BONUS_SKILL = 4;
	public const EventDetailEntity.FlagKind TYPE_MISSION = 5;
	public const EventDetailEntity.FlagKind TYPE_RAID = 6;
	public const EventDetailEntity.FlagKind TYPE_EVENT_SHOP = 7;
	public const EventDetailEntity.FlagKind MATERIAL_ADD_QUEST_GROUP = 8;
	public const EventDetailEntity.FlagKind MATERIAL_ADD_EVENT_END = 9;
	public const EventDetailEntity.FlagKind SUPER_BOSS = 10;
	public const EventDetailEntity.FlagKind RAID_DEFEAT_COUNT = 11;
	public const EventDetailEntity.FlagKind BP = 12;
	public const EventDetailEntity.FlagKind NO_MATERIAL_BANNER = 13;
	public const EventDetailEntity.FlagKind EVENT_POINT = 14;
	public const EventDetailEntity.FlagKind EVENT_GROUP_POINT = 15;
	public const EventDetailEntity.FlagKind EVENT_VOICE_PLAY = 16;
	public const EventDetailEntity.FlagKind DAILY_MISSION = 17;
	public const EventDetailEntity.FlagKind EVENT_GROUP_RANKING = 18;
	public const EventDetailEntity.FlagKind EVENT_TOWER = 19;
	public const EventDetailEntity.FlagKind EVENT_FATIGUE = 20;
	public const EventDetailEntity.FlagKind NO_DISP_ARROW = 21;
	public const EventDetailEntity.FlagKind FORCED_ADJUSTMENT_DIALOG = 22;
	public const EventDetailEntity.FlagKind SHIFT_HELP_INFO = 23;
	public const EventDetailEntity.FlagKind CLOSE_PURCHASE_SHOP = 24;
	public const EventDetailEntity.FlagKind TIME_STATUS_RECORD = 25;
	public const EventDetailEntity.FlagKind USE_EVENT_SUPPORT_DECK = 26;
	public const EventDetailEntity.FlagKind EVENT_DAIRY_POINT = 27;
	public const EventDetailEntity.FlagKind EVENT_ACTIVITY_POINT = 28;
	public const EventDetailEntity.FlagKind EVENT_ONLY_EQUIP = 29;
	public const EventDetailEntity.FlagKind MAP_SWITCH_BUTTON_TOP = 30;
	public const EventDetailEntity.FlagKind EVENT_REVIVAL = 31;
	public const EventDetailEntity.FlagKind EVENT_CONQUEST = 32;
	public const EventDetailEntity.FlagKind EVENT_POINT_BY_QP = 33;
	public const EventDetailEntity.FlagKind ALL_USERS_BOX_GACHA_COUNT = 34;
	public const EventDetailEntity.FlagKind NOT_DISPLAY_BONUS_ON_SUPPORT_SET = 35;
	public const EventDetailEntity.FlagKind FRIEND_POINT_BOOST_ITEM = 36;
	public const EventDetailEntity.FlagKind EVENT_BOARD_GAME = 37;
	public const EventDetailEntity.FlagKind NOT_DISPLAY_DA_VINCI = 38;
	public const EventDetailEntity.FlagKind IS_MAIN_INTERLUDE = 39;
	public const EventDetailEntity.FlagKind QUEST_COOLTIME = 41;
	public const EventDetailEntity.FlagKind EVENT_PANEL = 42;
	public const EventDetailEntity.FlagKind EVENT_ASSIST = 43;
	public const EventDetailEntity.FlagKind TREASURE_BOX = 44;
	public const EventDetailEntity.FlagKind HIDE_AFTER_PURCHASE = 45;
}

// Namespace: 
public enum EventDetailEntity.Flag // TypeDefIndex: 6849
{
	// Fields
	public long value__; // 0x0
	public const EventDetailEntity.Flag TYPE_POINT = 1;
	public const EventDetailEntity.Flag TYPE_EXCHANGE_SHOP = 2;
	public const EventDetailEntity.Flag TYPE_BOX_GACHA = 4;
	public const EventDetailEntity.Flag TYPE_RANKING = 8;
	public const EventDetailEntity.Flag TYPE_BONUS_SKILL = 16;
	public const EventDetailEntity.Flag TYPE_MISSION = 32;
	public const EventDetailEntity.Flag TYPE_RAID = 64;
	public const EventDetailEntity.Flag TYPE_EVENT_SHOP = 128;
	public const EventDetailEntity.Flag MATERIAL_ADD_QUEST_GROUP = 256;
	public const EventDetailEntity.Flag MATERIAL_ADD_EVENT_END = 512;
	public const EventDetailEntity.Flag SUPER_BOSS = 1024;
	public const EventDetailEntity.Flag RAID_DEFEAT_COUNT = 2048;
	public const EventDetailEntity.Flag BP = 4096;
	public const EventDetailEntity.Flag NO_MATERIAL_BANNER = 8192;
	public const EventDetailEntity.Flag EVENT_POINT = 16384;
	public const EventDetailEntity.Flag EVENT_GROUP_POINT = 32768;
	public const EventDetailEntity.Flag EVENT_VOICE_PLAY = 65536;
	public const EventDetailEntity.Flag DAILY_MISSION = 131072;
	public const EventDetailEntity.Flag EVENT_GROUP_RANKING = 262144;
	public const EventDetailEntity.Flag EVENT_TOWER = 524288;
	public const EventDetailEntity.Flag EVENT_FATIGUE = 1048576;
	public const EventDetailEntity.Flag NO_DISP_ARROW = 2097152;
	public const EventDetailEntity.Flag FORCED_ADJUSTMENT_DIALOG = 4194304;
	public const EventDetailEntity.Flag SHIFT_HELP_INFO = 8388608;
	public const EventDetailEntity.Flag CLOSE_PURCHASE_SHOP = 16777216;
	public const EventDetailEntity.Flag TIME_STATUS_RECORD = 33554432;
	public const EventDetailEntity.Flag USE_EVENT_SUPPORT_DECK = 67108864;
	public const EventDetailEntity.Flag EVENT_DAIRY_POINT = 134217728;
	public const EventDetailEntity.Flag EVENT_ACTIVITY_POINT = 268435456;
	public const EventDetailEntity.Flag EVENT_ONLY_EQUIP = 536870912;
	public const EventDetailEntity.Flag MAP_SWITCH_BUTTON_TOP = 1073741824;
	public const EventDetailEntity.Flag EVENT_REVIVAL = 2147483648;
	public const EventDetailEntity.Flag EVENT_CONQUEST = 4294967296;
	public const EventDetailEntity.Flag EVENT_POINT_BY_QP = 8589934592;
	public const EventDetailEntity.Flag ALL_USERS_BOX_GACHA_COUNT = 17179869184;
	public const EventDetailEntity.Flag NOT_DISPLAY_BONUS_ON_SUPPORT_SET = 34359738368;
	public const EventDetailEntity.Flag FRIEND_POINT_BOOST_ITEM = 68719476736;
	public const EventDetailEntity.Flag EVENT_BOARD_GAME = 137438953472;
	public const EventDetailEntity.Flag NOT_DISPLAY_DA_VINCI = 274877906944;
	public const EventDetailEntity.Flag IS_MAIN_INTERLUDE = 549755813888;
	public const EventDetailEntity.Flag QUEST_COOLTIME = 2199023255552;
	public const EventDetailEntity.Flag EVENT_PANEL = 4398046511104;
	public const EventDetailEntity.Flag EVENT_ASSIST = 8796093022208;
	public const EventDetailEntity.Flag TREASURE_BOX = 17592186044416;
	public const EventDetailEntity.Flag HIDE_AFTER_PURCHASE = 35184372088832;
}

// Namespace: 
public class EventDetailEntity.ChangeLoadAnimationInfo // TypeDefIndex: 6850
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1614 Offset: 0xCC1614 VA: 0xCC1614
	[DebuggerBrowsableAttribute] // RVA: 0xCC1614 Offset: 0xCC1614 VA: 0xCC1614
	private int <commonReleaseId>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCC1650 Offset: 0xCC1650 VA: 0xCC1650
	[DebuggerBrowsableAttribute] // RVA: 0xCC1650 Offset: 0xCC1650 VA: 0xCC1650
	private int <animationId>k__BackingField; // 0x14

	// Properties
	public int commonReleaseId { get; set; }
	public int animationId { get; set; }

	// Methods

	// RVA: 0x1D2B678 Offset: 0x1D2B678 VA: 0x1D2B678
	public void .ctor(int a, int b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3781C Offset: 0xD3781C VA: 0xD3781C
	// RVA: 0x1D2B77C Offset: 0x1D2B77C VA: 0x1D2B77C
	public int get_commonReleaseId() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3782C Offset: 0xD3782C VA: 0xD3782C
	// RVA: 0x1D2B76C Offset: 0x1D2B76C VA: 0x1D2B76C
	private void set_commonReleaseId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3783C Offset: 0xD3783C VA: 0xD3783C
	// RVA: 0x1D2B784 Offset: 0x1D2B784 VA: 0x1D2B784
	public int get_animationId() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3784C Offset: 0xD3784C VA: 0xD3784C
	// RVA: 0x1D2B774 Offset: 0x1D2B774 VA: 0x1D2B774
	private void set_animationId(int value) { }
}

// Namespace: 
public class EventDetailMaster : DataMasterBase<EventDetailMaster, EventDetailEntity, int> // TypeDefIndex: 6851
{
	// Methods

	// RVA: 0x1D2B78C Offset: 0x1D2B78C VA: 0x1D2B78C
	public void .ctor() { }

	// RVA: 0x1D1E148 Offset: 0x1D1E148 VA: 0x1D1E148
	public EventDetailEntity getEntityFromId(int eventId) { }
}

// Namespace: 
public class EventEntity : DataEntityBase<int> // TypeDefIndex: 6852
{
	// Fields
	public int id; // 0x10
	public int baseEventId; // 0x14
	public int type; // 0x18
	public int openType; // 0x1C
	public string name; // 0x20
	public string shortName; // 0x28
	public string detail; // 0x30
	public int noticeBannerId; // 0x38
	public int bannerId; // 0x3C
	public int iconId; // 0x40
	public int bannerPriority; // 0x44
	public int openHours; // 0x48
	public int intervalHours; // 0x4C
	public long noticeAt; // 0x50
	public long startedAt; // 0x58
	public long endedAt; // 0x60
	public long finishedAt; // 0x68
	public long materialOpenedAt; // 0x70
	public EventEntity.ScriptData[] script; // 0x78
	public string linkBody; // 0x80
	public int myroomBgId; // 0x88
	public int myroomBgmId; // 0x8C

	// Methods

	// RVA: 0x1D2BF1C Offset: 0x1D2BF1C VA: 0x1D2BF1C
	public void .ctor() { }

	// RVA: 0x1D2BF6C Offset: 0x1D2BF6C VA: 0x1D2BF6C Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1D2BF74 Offset: 0x1D2BF74 VA: 0x1D2BF74
	public int getEventId() { }

	// RVA: 0x1D2BF7C Offset: 0x1D2BF7C VA: 0x1D2BF7C
	public int getEventType() { }

	// RVA: 0x1D2BF84 Offset: 0x1D2BF84 VA: 0x1D2BF84
	public string getEventName() { }

	// RVA: 0x1D2C034 Offset: 0x1D2C034 VA: 0x1D2C034
	public string getEventDetail() { }

	// RVA: 0x1D2C03C Offset: 0x1D2C03C VA: 0x1D2C03C
	public int getEventBannerID() { }

	// RVA: 0x1D2C044 Offset: 0x1D2C044 VA: 0x1D2C044
	public int getBannerID_OfTime() { }

	// RVA: 0x1D2C0F4 Offset: 0x1D2C0F4 VA: 0x1D2C0F4
	public int getEventIconID() { }

	// RVA: 0x1D2C0FC Offset: 0x1D2C0FC VA: 0x1D2C0FC
	public int getEventBannerPriority() { }

	// RVA: 0x1D2C104 Offset: 0x1D2C104 VA: 0x1D2C104
	public int getEventOpenHours() { }

	// RVA: 0x1D2C10C Offset: 0x1D2C10C VA: 0x1D2C10C
	public int getEventIntervalHours() { }

	// RVA: 0x1D2C0E4 Offset: 0x1D2C0E4 VA: 0x1D2C0E4
	public long getEventNoticeAt() { }

	// RVA: 0x1D2C0EC Offset: 0x1D2C0EC VA: 0x1D2C0EC
	public long getEventStartedAt() { }

	// RVA: 0x1D2C114 Offset: 0x1D2C114 VA: 0x1D2C114
	public long getEventEndedAt() { }

	// RVA: 0x1D1E4A4 Offset: 0x1D1E4A4 VA: 0x1D1E4A4
	public long getEventFinishedAt() { }

	// RVA: 0x1D2C11C Offset: 0x1D2C11C VA: 0x1D2C11C
	public string getEventLinkBody() { }

	// RVA: 0x1D2C124 Offset: 0x1D2C124 VA: 0x1D2C124
	public EventEntity.ScriptData[] GetScriptData() { }

	// RVA: 0x1D2C12C Offset: 0x1D2C12C VA: 0x1D2C12C
	public bool IsOpen(bool isFinishedAt = True) { }

	// RVA: 0x1D2C214 Offset: 0x1D2C214 VA: 0x1D2C214
	public bool IsOpen(long checkTime, bool isFinishedAt = True) { }

	// RVA: 0x1D2C2B8 Offset: 0x1D2C2B8 VA: 0x1D2C2B8
	public long GetEndTime(bool isFinishedAt = True) { }

	// RVA: 0x1D2C170 Offset: 0x1D2C170 VA: 0x1D2C170
	private long GetRestTime(bool isFinishedAt = True) { }

	// RVA: 0x1D2C268 Offset: 0x1D2C268 VA: 0x1D2C268
	private long GetRestTime(long checkTime, bool isFinishedAt = True) { }

	// RVA: 0x1D2C35C Offset: 0x1D2C35C VA: 0x1D2C35C
	private long GetRestTime(long checkTime, long endTime) { }

	// RVA: 0x1D2C3D8 Offset: 0x1D2C3D8 VA: 0x1D2C3D8
	public long cmpShopClosedAt(EventEntity entity) { }

	// RVA: 0x1D2C44C Offset: 0x1D2C44C VA: 0x1D2C44C
	public bool isCheckEventDetail() { }

	// RVA: 0x1D2C45C Offset: 0x1D2C45C VA: 0x1D2C45C
	public static bool IsReward(int event_id) { }

	// RVA: 0x1D2C500 Offset: 0x1D2C500 VA: 0x1D2C500
	public bool IsReward() { }

	// RVA: 0x1D2C508 Offset: 0x1D2C508 VA: 0x1D2C508
	public long GetEndTime_ShopOrReward() { }

	// RVA: 0x1D2C70C Offset: 0x1D2C70C VA: 0x1D2C70C
	public bool IsEventPeriod(long nowTime = 0) { }

	// RVA: 0x1D2C7A8 Offset: 0x1D2C7A8 VA: 0x1D2C7A8
	public bool IsExchangePeriod(long nowTime = 0) { }

	// RVA: 0x1D2C5F8 Offset: 0x1D2C5F8 VA: 0x1D2C5F8
	public long GetShopEndTime() { }

	// RVA: 0x1D1E248 Offset: 0x1D1E248 VA: 0x1D1E248
	public bool isPurchaseEventOpen() { }

	// RVA: 0x1D2C844 Offset: 0x1D2C844 VA: 0x1D2C844
	public string getPurchaseShopBannerName(string bannerName) { }

	// RVA: 0x1D2C8E4 Offset: 0x1D2C8E4 VA: 0x1D2C8E4
	public bool IsClosePurchaseShop() { }

	// RVA: 0x1D2CACC Offset: 0x1D2CACC VA: 0x1D2CACC
	public EventEntity.ScriptData GetScriptDataCondCheck(long nowTime) { }

	// RVA: 0x1D2CBB4 Offset: 0x1D2CBB4 VA: 0x1D2CBB4
	public string FinishTimeString(bool isFinishedAt = True) { }
}

// Namespace: 
public enum EventEntity.EventOpenType // TypeDefIndex: 6853
{
	// Fields
	public int value__; // 0x0
	public const EventEntity.EventOpenType ONCE = 1;
	public const EventEntity.EventOpenType REPEAT = 2;
