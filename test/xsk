	public Gift.Type GiftType { get; }
	public GiftEntity GiftEntity { get; }
	public int TargetObjectId { get; }
	public int TargetImgId { get; }
	public bool IsRare { get; }
	public string NameTxt { get; }
	public int CurrentNum { get; }
	public int MaxNum { get; }
	public string DetailTxt { get; }
	public string ExtraDetailTXt { get; }
	public ServantEntity SvtEntity { get; }
	public ItemEntity ItemEntity { get; }
	public CommandCodeEntity CommandCodeEntity { get; }
	public int GetEventId { get; }
	public BoxGachaBaseEntity GetBaseData { get; }
	public bool IsDraw { get; }
	public int GetIconId { get; }
	public int GetRewardNum { get; }
	public int GetBoxGachaId { get; }
	public int GetBannerId { get; }

	// Methods

	// RVA: 0x19BF8F0 Offset: 0x19BF8F0 VA: 0x19BF8F0
	public void .ctor(BoxGachaBaseEntity data, int eventId, int boxGachaId, bool isDraw) { }

	// RVA: 0x19BFBA4 Offset: 0x19BFBA4 VA: 0x19BFBA4
	private void setGiftData() { }

	// RVA: 0x19BFDD0 Offset: 0x19BFDD0 VA: 0x19BFDD0 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x19BFDD8 Offset: 0x19BFDD8 VA: 0x19BFDD8 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x19BFE44 Offset: 0x19BFE44 VA: 0x19BFE44
	public RewardType.Type get_GachaBaseType() { }

	// RVA: 0x19BFE70 Offset: 0x19BFE70 VA: 0x19BFE70
	public Gift.Type get_GiftType() { }

	// RVA: 0x19BFE88 Offset: 0x19BFE88 VA: 0x19BFE88
	public GiftEntity get_GiftEntity() { }

	// RVA: 0x19BFE90 Offset: 0x19BFE90 VA: 0x19BFE90
	public int get_TargetObjectId() { }

	// RVA: 0x19BFE98 Offset: 0x19BFE98 VA: 0x19BFE98
	public int get_TargetImgId() { }

	// RVA: 0x19BFEA0 Offset: 0x19BFEA0 VA: 0x19BFEA0
	public bool get_IsRare() { }

	// RVA: 0x19BFEA8 Offset: 0x19BFEA8 VA: 0x19BFEA8
	public string get_NameTxt() { }

	// RVA: 0x19BFE3C Offset: 0x19BFE3C VA: 0x19BFE3C
	public int get_CurrentNum() { }

	// RVA: 0x19BFEB0 Offset: 0x19BFEB0 VA: 0x19BFEB0
	public int get_MaxNum() { }

	// RVA: 0x19BFEB8 Offset: 0x19BFEB8 VA: 0x19BFEB8
	public string get_DetailTxt() { }

	// RVA: 0x19BFEC0 Offset: 0x19BFEC0 VA: 0x19BFEC0
	public string get_ExtraDetailTXt() { }

	// RVA: 0x19BFEC8 Offset: 0x19BFEC8 VA: 0x19BFEC8
	public ServantEntity get_SvtEntity() { }

	// RVA: 0x19BFED0 Offset: 0x19BFED0 VA: 0x19BFED0
	public ItemEntity get_ItemEntity() { }

	// RVA: 0x19BFED8 Offset: 0x19BFED8 VA: 0x19BFED8
	public CommandCodeEntity get_CommandCodeEntity() { }

	// RVA: 0x19BFEE0 Offset: 0x19BFEE0 VA: 0x19BFEE0
	public int get_GetEventId() { }

	// RVA: 0x19BFEE8 Offset: 0x19BFEE8 VA: 0x19BFEE8
	public BoxGachaBaseEntity get_GetBaseData() { }

	// RVA: 0x19BFEF0 Offset: 0x19BFEF0 VA: 0x19BFEF0
	public bool get_IsDraw() { }

	// RVA: 0x19BFEF8 Offset: 0x19BFEF8 VA: 0x19BFEF8
	public int get_GetIconId() { }

	// RVA: 0x19BFF24 Offset: 0x19BFF24 VA: 0x19BFF24
	public int get_GetRewardNum() { }

	// RVA: 0x19BFF2C Offset: 0x19BFF2C VA: 0x19BFF2C
	public int get_GetBoxGachaId() { }

	// RVA: 0x19BFF34 Offset: 0x19BFF34 VA: 0x19BFF34
	public int get_GetBannerId() { }
}

// Namespace: 
public class BoxGachaItemListViewItemDraw : MonoBehaviour // TypeDefIndex: 9752
{
	// Fields
	[SerializeField] // RVA: 0xC6D190 Offset: 0xC6D190 VA: 0xC6D190
	protected UISprite baseSprite; // 0x18
	[SerializeField] // RVA: 0xC6D1A0 Offset: 0xC6D1A0 VA: 0xC6D1A0
	protected UISprite maskSprite; // 0x20
	[SerializeField] // RVA: 0xC6D1B0 Offset: 0xC6D1B0 VA: 0xC6D1B0
	protected UICommonButton baseButton; // 0x28
	[SerializeField] // RVA: 0xC6D1C0 Offset: 0xC6D1C0 VA: 0xC6D1C0
	protected ItemIconComponent itemIcon; // 0x30
	[SerializeField] // RVA: 0xC6D1D0 Offset: 0xC6D1D0 VA: 0xC6D1D0
	protected GameObject rareDispImgObj; // 0x38
	[SerializeField] // RVA: 0xC6D1E0 Offset: 0xC6D1E0 VA: 0xC6D1E0
	protected UISprite rareDispSprite; // 0x40
	[SerializeField] // RVA: 0xC6D1F0 Offset: 0xC6D1F0 VA: 0xC6D1F0
	protected UICrossNarrowLabel nameTextLabel; // 0x48
	[SerializeField] // RVA: 0xC6D200 Offset: 0xC6D200 VA: 0xC6D200
	protected UILabel msgTextLabel; // 0x50
	[SerializeField] // RVA: 0xC6D210 Offset: 0xC6D210 VA: 0xC6D210
	protected UILabel currentNumLabel; // 0x58
	[SerializeField] // RVA: 0xC6D220 Offset: 0xC6D220 VA: 0xC6D220
	protected UILabel maxNumLabel; // 0x60
	[SerializeField] // RVA: 0xC6D230 Offset: 0xC6D230 VA: 0xC6D230
	protected UILabel rewardNumLabel; // 0x68
	[SerializeField] // RVA: 0xC6D240 Offset: 0xC6D240 VA: 0xC6D240
	protected ItemNumDispControl numDispctr; // 0x70
	[SerializeField] // RVA: 0xC6D250 Offset: 0xC6D250 VA: 0xC6D250
	protected GameObject rarityInfo; // 0x78
	[SerializeField] // RVA: 0xC6D260 Offset: 0xC6D260 VA: 0xC6D260
	protected GameObject countLbInfo; // 0x80
	[SerializeField] // RVA: 0xC6D270 Offset: 0xC6D270 VA: 0xC6D270
	protected UISprite bonusSprite; // 0x88
	protected UIAtlas baseAtlas; // 0x90
	protected string baseSpriteName; // 0x98

	// Methods

	// RVA: 0x14CBCA0 Offset: 0x14CBCA0 VA: 0x14CBCA0
	public void .ctor() { }

	// RVA: 0x14CBCA8 Offset: 0x14CBCA8 VA: 0x14CBCA8
	protected void Awake() { }

	// RVA: 0x14CBD60 Offset: 0x14CBD60 VA: 0x14CBD60
	public void SetItem(BoxGachaItemListViewItem item, BoxGachaItemListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public enum BoxGachaItemListViewItemDraw.DispMode // TypeDefIndex: 9753
{
	// Fields
	public int value__; // 0x0
	public const BoxGachaItemListViewItemDraw.DispMode INVISIBLE = 0;
	public const BoxGachaItemListViewItemDraw.DispMode INVALID = 1;
	public const BoxGachaItemListViewItemDraw.DispMode VALID = 2;
	public const BoxGachaItemListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class BoxGachaItemListViewManager : ListViewManager // TypeDefIndex: 9754
{
	// Fields
	[SerializeField] // RVA: 0xC6D280 Offset: 0xC6D280 VA: 0xC6D280
	protected PlayMakerFSM targetFSM; // 0x138
	[SerializeField] // RVA: 0xC6D290 Offset: 0xC6D290 VA: 0xC6D290
	protected GameObject resetInfoObj; // 0x140
	[SerializeField] // RVA: 0xC6D2A0 Offset: 0xC6D2A0 VA: 0xC6D2A0
	protected BoxCollider resetInfoCol; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xC6D2B0 Offset: 0xC6D2B0 VA: 0xC6D2B0
	[DebuggerBrowsableAttribute] // RVA: 0xC6D2B0 Offset: 0xC6D2B0 VA: 0xC6D2B0
	private BoxGachaItemListViewManager.CallbackFunc callbackFunc; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xC6D2EC Offset: 0xC6D2EC VA: 0xC6D2EC
	[DebuggerBrowsableAttribute] // RVA: 0xC6D2EC Offset: 0xC6D2EC VA: 0xC6D2EC
	private Action callbackFunc2; // 0x158
	protected int callbackCount; // 0x160
	protected BoxGachaItemListViewManager.InitMode initMode; // 0x164
	private int allMaxNum; // 0x168
	private int allCurrentNum; // 0x16C
	private bool isReset; // 0x170
	private int currentBoxGachaId; // 0x174
	private int currentBaseId; // 0x178
	private int currentResetNum; // 0x17C
	private bool isResetTarget; // 0x180
	private float listInDelay; // 0x184

	// Properties
	public List<BoxGachaItemListViewObject> ObjectList { get; }
	public List<BoxGachaItemListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x14CC6BC Offset: 0x14CC6BC VA: 0x14CC6BC
	public void .ctor() { }

	// RVA: 0x14CC6C4 Offset: 0x14CC6C4 VA: 0x14CC6C4
	protected void add_callbackFunc(BoxGachaItemListViewManager.CallbackFunc value) { }

	// RVA: 0x14CC7B4 Offset: 0x14CC7B4 VA: 0x14CC7B4
	protected void remove_callbackFunc(BoxGachaItemListViewManager.CallbackFunc value) { }

	// RVA: 0x14CC8A4 Offset: 0x14CC8A4 VA: 0x14CC8A4
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x14CC994 Offset: 0x14CC994 VA: 0x14CC994
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x14CCA84 Offset: 0x14CCA84 VA: 0x14CCA84
	public List<BoxGachaItemListViewObject> get_ObjectList() { }

	// RVA: 0x14CCC50 Offset: 0x14CCC50 VA: 0x14CCC50
	public List<BoxGachaItemListViewObject> get_ClippingObjectList() { }

	// RVA: 0x14CCF30 Offset: 0x14CCF30 VA: 0x14CCF30
	public void CreateList(BoxGachaBaseEntity[] baseData, int eventId, int boxGachaId, int baseId, int[] resIds, bool isReset = False) { }

	// RVA: 0x14CD138 Offset: 0x14CD138 VA: 0x14CD138
	public void RefrashListDisp() { }

	// RVA: 0x14CD318 Offset: 0x14CD318 VA: 0x14CD318
	public int GetGachaItemMaxNum() { }

	// RVA: 0x14CD320 Offset: 0x14CD320 VA: 0x14CD320
	public int GetGachaItemCurrentNum() { }

	// RVA: 0x14CD328 Offset: 0x14CD328 VA: 0x14CD328
	public void DestroyList() { }

	// RVA: 0x14CD330 Offset: 0x14CD330 VA: 0x14CD330
	public BoxGachaItemListViewItem GetItem(int index) { }

	// RVA: 0x14CD3D8 Offset: 0x14CD3D8 VA: 0x14CD3D8 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x14CD514 Offset: 0x14CD514 VA: 0x14CD514
	public void SetMode(BoxGachaItemListViewManager.InitMode mode, BoxGachaItemListViewManager.CallbackFunc callback) { }

	// RVA: 0x14CD63C Offset: 0x14CD63C VA: 0x14CD63C
	public void SetMode(BoxGachaItemListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x14CD644 Offset: 0x14CD644 VA: 0x14CD644
	public void SetMode(BoxGachaItemListViewManager.InitMode mode, float delay, Action callback) { }

	// RVA: 0x14CD51C Offset: 0x14CD51C VA: 0x14CD51C
	public void SetMode(BoxGachaItemListViewManager.InitMode mode) { }

	// RVA: 0x14CD650 Offset: 0x14CD650 VA: 0x14CD650
	protected void RequestListObject(BoxGachaItemListViewObject.InitMode mode, float delay) { }

	// RVA: 0x14CD8EC Offset: 0x14CD8EC VA: 0x14CD8EC
	protected void RequestListObject(BoxGachaItemListViewObject.InitMode mode) { }

	// RVA: 0x14CDB68 Offset: 0x14CDB68 VA: 0x14CDB68
	protected void RequestInto() { }

	// RVA: 0x14CDD38 Offset: 0x14CDD38 VA: 0x14CDD38
	protected void OnMoveEnd() { }

	// RVA: 0x14CDE04 Offset: 0x14CDE04 VA: 0x14CDE04
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x14CE410 Offset: 0x14CE410 VA: 0x14CE410
	public void closeItemDetail(bool isDecide) { }

	// RVA: 0x14CE49C Offset: 0x14CE49C VA: 0x14CE49C
	private void closeSvtDetail(bool isDecide) { }

	// RVA: 0x14CE520 Offset: 0x14CE520 VA: 0x14CE520
	private void CloseCommandCodeDetail(bool isDecide) { }

	// RVA: 0x14CE5A4 Offset: 0x14CE5A4 VA: 0x14CE5A4
	public void ClickResetGachaBtn() { }

	// RVA: 0x14CEA50 Offset: 0x14CEA50 VA: 0x14CEA50
	public bool getIsRareTarget() { }

	// RVA: 0x14CEA58 Offset: 0x14CEA58 VA: 0x14CEA58
	private void closeEventSvtConfirmDlg(bool isDecide) { }

	// RVA: 0x14CEB24 Offset: 0x14CEB24 VA: 0x14CEB24
	public void itemColliderCtr(bool isDisp) { }

	// RVA: 0x14CED5C Offset: 0x14CED5C VA: 0x14CED5C
	public void ResetBtnColliderCtr(bool isGachaReset) { }

	// RVA: 0x14CEDD0 Offset: 0x14CEDD0 VA: 0x14CEDD0
	public void SetScrollInfo() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCFD30 Offset: 0xCCFD30 VA: 0xCCFD30
	// RVA: 0x14CEF10 Offset: 0x14CEF10 VA: 0x14CEF10
	private void <closeEventSvtConfirmDlg>m__0() { }
}

// Namespace: 
public enum BoxGachaItemListViewManager.InitMode // TypeDefIndex: 9755
{
	// Fields
	public int value__; // 0x0
	public const BoxGachaItemListViewManager.InitMode NONE = 0;
	public const BoxGachaItemListViewManager.InitMode INTO = 1;
	public const BoxGachaItemListViewManager.InitMode INPUT = 2;
	public const BoxGachaItemListViewManager.InitMode ENTER = 3;
	public const BoxGachaItemListViewManager.InitMode EXIT = 4;
	public const BoxGachaItemListViewManager.InitMode MODIFY = 5;
}

// Namespace: 
public sealed class BoxGachaItemListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 9756
{
	// Methods

	// RVA: 0x14CEF74 Offset: 0x14CEF74 VA: 0x14CEF74
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x14CEF84 Offset: 0x14CEF84 VA: 0x14CEF84 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x14CF184 Offset: 0x14CF184 VA: 0x14CF184 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x14CF1B8 Offset: 0x14CF1B8 VA: 0x14CF1B8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class BoxGachaItemListViewObject : ListViewObject // TypeDefIndex: 9757
{
	// Fields
	protected BoxGachaItemListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC6D328 Offset: 0xC6D328 VA: 0xC6D328
	[DebuggerBrowsableAttribute] // RVA: 0xC6D328 Offset: 0xC6D328 VA: 0xC6D328
	private Action callbackFunc; // 0x70
	protected BoxGachaItemListViewItemDraw itemDraw; // 0x78
	protected BoxGachaItemListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x14CF1C4 Offset: 0x14CF1C4 VA: 0x14CF1C4
	public void .ctor() { }

	// RVA: 0x14CF22C Offset: 0x14CF22C VA: 0x14CF22C
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x14CF318 Offset: 0x14CF318 VA: 0x14CF318
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x14CF404 Offset: 0x14CF404 VA: 0x14CF404
	protected void Awake() { }

	// RVA: 0x14CF478 Offset: 0x14CF478 VA: 0x14CF478
	private void OnDestroy() { }

	// RVA: 0x14CCEAC Offset: 0x14CCEAC VA: 0x14CCEAC
	public BoxGachaItemListViewItem GetItem() { }

	// RVA: 0x14CF544 Offset: 0x14CF544 VA: 0x14CF544 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x14CF550 Offset: 0x14CF550 VA: 0x14CF550 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x14CF5D8 Offset: 0x14CF5D8 VA: 0x14CF5D8
	public void Init(BoxGachaItemListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x14CD858 Offset: 0x14CD858 VA: 0x14CD858
	public void Init(BoxGachaItemListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x14CDAE0 Offset: 0x14CDAE0 VA: 0x14CDAE0
	public void Init(BoxGachaItemListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x14CD490 Offset: 0x14CD490 VA: 0x14CD490
	public void Init(BoxGachaItemListViewObject.InitMode initMode) { }

	// RVA: 0x14CFAE0 Offset: 0x14CFAE0 VA: 0x14CFAE0
	protected void SetupDisp() { }

	// RVA: 0x14CF82C Offset: 0x14CF82C VA: 0x14CF82C
	private void EventIntoStart(float delay) { }

	// RVA: 0x14CFBF0 Offset: 0x14CFBF0 VA: 0x14CFBF0
	private void EventIntoMove() { }

	// RVA: 0x14CFD90 Offset: 0x14CFD90 VA: 0x14CFD90
	private void EventIntoMove2() { }

	// RVA: 0x14CF994 Offset: 0x14CF994 VA: 0x14CF994
	private void EventExitStart(float delay) { }

	// RVA: 0x14CFE80 Offset: 0x14CFE80 VA: 0x14CFE80
	private void EventExitMove() { }

	// RVA: 0x14D0104 Offset: 0x14D0104 VA: 0x14D0104
	private void EventExitMove2() { }

	// RVA: 0x14CFE58 Offset: 0x14CFE58 VA: 0x14CFE58
	protected void EventMoveEnd() { }

	// RVA: 0x14D01A0 Offset: 0x14D01A0 VA: 0x14D01A0 Slot: 3
	public override string ToString() { }

	// RVA: 0x14D0270 Offset: 0x14D0270 VA: 0x14D0270
	public void OnClickSelect() { }
}

// Namespace: 
public enum BoxGachaItemListViewObject.InitMode // TypeDefIndex: 9758
{
	// Fields
	public int value__; // 0x0
	public const BoxGachaItemListViewObject.InitMode INVISIBLE = 0;
	public const BoxGachaItemListViewObject.InitMode INVALID = 1;
	public const BoxGachaItemListViewObject.InitMode VALID = 2;
	public const BoxGachaItemListViewObject.InitMode INPUT = 3;
	public const BoxGachaItemListViewObject.InitMode INTO = 4;
	public const BoxGachaItemListViewObject.InitMode ENTER = 5;
	public const BoxGachaItemListViewObject.InitMode EXIT = 6;
	public const BoxGachaItemListViewObject.InitMode MODIFY = 7;
}

// Namespace: 
protected enum BoxGachaItemListViewObject.State // TypeDefIndex: 9759
{
	// Fields
	public int value__; // 0x0
	public const BoxGachaItemListViewObject.State INIT = 0;
	public const BoxGachaItemListViewObject.State IDLE = 1;
	public const BoxGachaItemListViewObject.State MOVE = 2;
	public const BoxGachaItemListViewObject.State INPUT = 3;
}

// Namespace: 
public class BoxGachaTalkInfo // TypeDefIndex: 9760
{
	// Fields
	public List<string> beforeVoiceIdList; // 0x10
	public List<string> beforeTalkMessageList; // 0x18
	public List<string> afterVoiceIdList; // 0x20
	public List<string> afterTalkMessageList; // 0x28

	// Methods

	// RVA: 0x14D3354 Offset: 0x14D3354 VA: 0x14D3354
	public void .ctor() { }

	// RVA: 0x14D3418 Offset: 0x14D3418 VA: 0x14D3418
	public void SetBeforeGachaTalkInfo(string voiceId, string text) { }

	// RVA: 0x14D34B4 Offset: 0x14D34B4 VA: 0x14D34B4
	public void SetAfterGachaTalkInfo(string voiceId, string text) { }

	// RVA: 0x14D1FD4 Offset: 0x14D1FD4 VA: 0x14D1FD4
	public string getBeforeVoiceId(int idx) { }

	// RVA: 0x14D1134 Offset: 0x14D1134 VA: 0x14D1134
	public string getBeforeTalkMessage(int idx) { }

	// RVA: 0x14D30DC Offset: 0x14D30DC VA: 0x14D30DC
	public string getAfterVoiceId(int idx) { }

	// RVA: 0x14D11A4 Offset: 0x14D11A4 VA: 0x14D11A4
	public string getAfterTalkMessage(int idx) { }
}

// Namespace: 
public class MultiSvtInfoComponent : BaseMonoBehaviour // TypeDefIndex: 9761
{
	// Fields
	[SerializeField] // RVA: 0xC6D364 Offset: 0xC6D364 VA: 0xC6D364
	protected GameObject svtFigurePanel; // 0x18
	private List<StandFigureCollect> standFigureCollectList; // 0x20
	private int currentIdx; // 0x28
	private int currentMoveIdx; // 0x2C
	private int currentSvtId; // 0x30
	private int currentSvtLimitCnt; // 0x34
	private int currentSvtFace; // 0x38

	// Methods

	// RVA: 0x11A3A3C Offset: 0x11A3A3C VA: 0x11A3A3C
	public void .ctor() { }

	// RVA: 0x11A3A44 Offset: 0x11A3A44 VA: 0x11A3A44
	public void setCurrentRewardInfo(int svtId, int svtLimitCnt, int face, int idx, int moveIdx, bool isEventShop, bool isNpc, Action callbackFunc) { }

	// RVA: 0x11A3DB4 Offset: 0x11A3DB4 VA: 0x11A3DB4
	public UIStandFigureR GetSvtStandFigure(int index = 0) { }

	// RVA: 0x11A3E3C Offset: 0x11A3E3C VA: 0x11A3E3C
	public List<StandFigureCollect> GetSvtStandFigureCollect() { }

	// RVA: 0x11A3E44 Offset: 0x11A3E44 VA: 0x11A3E44
	public int getBannerIdx() { }

	// RVA: 0x11A3E4C Offset: 0x11A3E4C VA: 0x11A3E4C
	public int getMoveBannerIdx() { }

	// RVA: 0x11A3E54 Offset: 0x11A3E54 VA: 0x11A3E54
	public void setEnabledCollider(bool isEnable) { }

	// RVA: 0x11A3ECC Offset: 0x11A3ECC VA: 0x11A3ECC
	public int getGuideSvtInfo() { }

	// RVA: 0x11A3ED4 Offset: 0x11A3ED4 VA: 0x11A3ED4
	public int getGuideSvtFace() { }

	// RVA: 0x11A3EDC Offset: 0x11A3EDC VA: 0x11A3EDC
	public void SetGuideSvtInfo(int id) { }

	// RVA: 0x11A3EE4 Offset: 0x11A3EE4 VA: 0x11A3EE4
	public void SetGuideSvtFace(int face) { }
}

// Namespace: 
public static class BoxGachaUtility // TypeDefIndex: 9762
{
	// Fields
	public const int MAX_DRAW_COUNT = 10;
	public const int CHANGE_MAX_DRAW_COUNT = 100;
	public const int ITEM_UNIT_COUNT = 10;
	public const int OVER_VIEW_COUNT = 51;
	public const int OVER_VIEW_EFFECT_COUNT = 30;
	public const int START_SCROLL_COUNT = 50;
	public const int ITEM_HEIGHT = 60;
	public const int SCROLL_VIEW_ADJUST_HEIGHT = 5;
	public static readonly Vector3 NORMAL_ITEM_SIZE; // 0x0
	public static readonly Vector3 CHANGE_MAX_ITEM_SIZE; // 0xC
	public static readonly Vector3 CHANGE_MAX_DRAW_EFFECT_SCALE; // 0x18
	public const string GACHA_NUM_IMG = "img_gachatxt_{0:D2}";

	// Methods

	// RVA: 0x14D1694 Offset: 0x14D1694 VA: 0x14D1694
	public static void SetMultiGachaButtonDigitNum(int gachaTime, UISprite oneDigit, UISprite twoDigit, UISprite threeDigit) { }

	// RVA: 0x14D3834 Offset: 0x14D3834 VA: 0x14D3834
	public static void SetBoxGachaNumSprite(UISprite sprite, int num) { }

	// RVA: 0x14D3928 Offset: 0x14D3928 VA: 0x14D3928
	private static void .cctor() { }
}

// Namespace: 
public class BoxGahcaHistory // TypeDefIndex: 9763
{
	// Fields
	public int boxGachaId; // 0x10
	public int[] numbers; // 0x18

	// Methods

	// RVA: 0x14D3A2C Offset: 0x14D3A2C VA: 0x14D3A2C
	public void .ctor() { }
}

// Namespace: 
public class EventMissionItemListViewItem : MissionListViewItem // TypeDefIndex: 9764
{
	// Fields
	private int rewardRarityId; // 0x120
	private int rewardNum; // 0x124
	private bool isHideReward; // 0x128
	private bool isDailyMission; // 0x129

	// Properties
	public override bool IsShowRewardInfo { get; }
	public int GetRewardNum { get; }
	public bool IsHideReward { get; }
	public bool IsDailyMission { get; }
	public int RewardRarityId { get; }

	// Methods

	// RVA: 0x196F890 Offset: 0x196F890 VA: 0x196F890
	public void .ctor(EventMissionEntity missionData, bool isDaily) { }

	// RVA: 0x196FA10 Offset: 0x196FA10 VA: 0x196FA10 Slot: 7
	protected override void SetGiftData() { }

	// RVA: 0x196FADC Offset: 0x196FADC VA: 0x196FADC Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x196FBBC Offset: 0x196FBBC VA: 0x196FBBC
	public string GetGiftName() { }

	// RVA: 0x196FD64 Offset: 0x196FD64 VA: 0x196FD64 Slot: 8
	public override bool get_IsShowRewardInfo() { }

	// RVA: 0x196FDA0 Offset: 0x196FDA0 VA: 0x196FDA0
	public int get_GetRewardNum() { }

	// RVA: 0x196FDA8 Offset: 0x196FDA8 VA: 0x196FDA8
	public bool get_IsHideReward() { }

	// RVA: 0x196FDE8 Offset: 0x196FDE8 VA: 0x196FDE8
	public bool get_IsDailyMission() { }

	// RVA: 0x196FDF0 Offset: 0x196FDF0 VA: 0x196FDF0
	public int get_RewardRarityId() { }

	// RVA: 0x196FDF8 Offset: 0x196FDF8 VA: 0x196FDF8
	public bool ExistClearConditionEntity() { }
}

// Namespace: 
public class EventMissionItemListViewItemDraw : MissionListViewItemDraw // TypeDefIndex: 9765
{
	// Fields
	public static readonly int TIME_UPDATE_ITVL_SEC; // 0x0
	[SerializeField] // RVA: 0xC6D374 Offset: 0xC6D374 VA: 0xC6D374
	protected ShiningIconComponent newIcon; // 0xF8
	[SerializeField] // RVA: 0xC6D384 Offset: 0xC6D384 VA: 0xC6D384
	protected ItemNumDispControl numDispctr; // 0x100
	[SerializeField] // RVA: 0xC6D394 Offset: 0xC6D394 VA: 0xC6D394
	protected GameObject rarityInfo; // 0x108
	[SerializeField] // RVA: 0xC6D3A4 Offset: 0xC6D3A4 VA: 0xC6D3A4
	protected GameObject countLbInfo; // 0x110
	[SerializeField] // RVA: 0xC6D3B4 Offset: 0xC6D3B4 VA: 0xC6D3B4
	protected UISprite rewardBackSprite; // 0x118
	[SerializeField] // RVA: 0xC6D3C4 Offset: 0xC6D3C4 VA: 0xC6D3C4
	private UILabel debugLabel; // 0x120
	private bool isAchiveTime; // 0x128

	// Methods

	// RVA: 0x196FF04 Offset: 0x196FF04 VA: 0x196FF04
	public void .ctor() { }

	// RVA: 0x196FF6C Offset: 0x196FF6C VA: 0x196FF6C Slot: 4
	public override bool SetItem(MissionListViewItem missionListViewItem, MissionListViewItemDraw.DispMode mode, ListViewManager listViewManager) { }

	// RVA: 0x19707B4 Offset: 0x19707B4 VA: 0x19707B4 Slot: 5
	protected override void InitDispResTime(MissionListViewItem missionListviewItem) { }

	// RVA: 0x1970CE4 Offset: 0x1970CE4 VA: 0x1970CE4 Slot: 6
	protected override void SetLockMissionBoard(MissionListViewItem missionListViewItem) { }

	// RVA: 0x19701E0 Offset: 0x19701E0 VA: 0x19701E0
	private void SetRewardItemIcon(EventMissionItemListViewItem item, EventMissionItemListViewManager manager) { }

	// RVA: 0x1970D18 Offset: 0x1970D18 VA: 0x1970D18 Slot: 8
	protected override void SetRewardStatusImg(MissionInfoMaker.ProgStatus status) { }

	// RVA: 0x1970B68 Offset: 0x1970B68 VA: 0x1970B68
	private static string GetRestTimeText(long endTime) { }

	// RVA: 0x1970C20 Offset: 0x1970C20 VA: 0x1970C20
	private static string GetAchiveTimeText(long closeTime) { }

	// RVA: 0x1970E20 Offset: 0x1970E20 VA: 0x1970E20
	public void UpdateItem(EventMissionItemListViewItem item, MissionListViewItemDraw.DispMode mode) { }

	// RVA: 0x1971104 Offset: 0x1971104 VA: 0x1971104
	public void OnChangeAlphaAnim(EventMissionItemListViewItem item, MissionListViewItemDraw.DispMode mode, EventMissionItemListViewManager manager) { }

	// RVA: 0x197110C Offset: 0x197110C VA: 0x197110C
	private void ChangeNextRewardIcon(EventMissionItemListViewManager manager) { }

	// RVA: 0x1971294 Offset: 0x1971294 VA: 0x1971294 Slot: 10
	public override void SetInput(MissionListViewItem missionListViewItem) { }

	// RVA: 0x19706BC Offset: 0x19706BC VA: 0x19706BC
	public void UpdateNewIcon(EventMissionItemListViewItem item) { }

	// RVA: 0x1971394 Offset: 0x1971394 VA: 0x1971394
	public void ModifyBoardImage(int bannerGroupId) { }

	// RVA: 0x1971468 Offset: 0x1971468 VA: 0x1971468
	private static void .cctor() { }
}

// Namespace: 
public class EventMissionItemListViewManager : MissionListViewManager // TypeDefIndex: 9766
{
	// Fields
	[SerializeField] // RVA: 0xC6D3D4 Offset: 0xC6D3D4 VA: 0xC6D3D4
	protected PlayMakerFSM targetFSM; // 0x1A0
	protected Action actionCallback; // 0x1A8
	protected static AssetData effectAssetData; // 0x0
	protected EventMissionItemListViewItem openTargetItem; // 0x1B0
	protected int targetMissionId; // 0x1B8
	protected EventMissionItemListViewManager.FilterStatus filterStatus; // 0x1BC
	private EventMissionItemListViewManager.FilterStatus tempFilterStatus; // 0x1C0
	private int tempSelectDispNo; // 0x1C4
	[SerializeField] // RVA: 0xC6D3E4 Offset: 0xC6D3E4 VA: 0xC6D3E4
	protected UICommonButton filterBtn; // 0x1C8
	[SerializeField] // RVA: 0xC6D3F4 Offset: 0xC6D3F4 VA: 0xC6D3F4
	protected UISprite filterBtnTxt; // 0x1D0
	protected ListViewSort baseSortInfo; // 0x1D8
	protected ListViewSort operationSortInfo; // 0x1E0
	protected bool isEndEvent; // 0x1E8
	protected int currentEventId; // 0x1EC
	private bool isGetCostumeReleaseItem; // 0x1F0
	private int costumeReleaseItemObjectId; // 0x1F4
	private bool isClickListViewEnabled; // 0x1F8
	[CompilerGeneratedAttribute] // RVA: 0xC6D404 Offset: 0xC6D404 VA: 0xC6D404
	private static Action <>f__am$cache0; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC6D414 Offset: 0xC6D414 VA: 0xC6D414
	private static Action <>f__am$cache1; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC6D424 Offset: 0xC6D424 VA: 0xC6D424
	private static Action <>f__am$cache2; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC6D434 Offset: 0xC6D434 VA: 0xC6D434
	private static Action <>f__am$cache3; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC6D444 Offset: 0xC6D444 VA: 0xC6D444
	private static Comparison<EventMissionActionInfo> <>f__am$cache4; // 0x28

	// Properties
	public List<EventMissionItemListViewObject> ObjectList { get; }
	public List<EventMissionItemListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x19714BC Offset: 0x19714BC VA: 0x19714BC
	public void .ctor() { }

	// RVA: 0x1971524 Offset: 0x1971524 VA: 0x1971524
	public List<EventMissionItemListViewObject> get_ObjectList() { }

	// RVA: 0x1971574 Offset: 0x1971574 VA: 0x1971574
	public List<EventMissionItemListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1971854 Offset: 0x1971854 VA: 0x1971854
	public void CreateList(EventMissionEntity[] missionList, int eventId, bool isDailyMission) { }

	// RVA: 0x1971860 Offset: 0x1971860 VA: 0x1971860
	public void CreateList(EventMissionEntity[] missionList, int eventId, bool isDailyMission, bool isTouchListEnabled) { }

	// RVA: 0x1971B40 Offset: 0x1971B40 VA: 0x1971B40
	public void setNextMissionInfo(EventMissionActionInfo currentMissionActionInfo, EventMissionActionInfo eventMissionActionInfo, int missionID, Action callback) { }

	// RVA: 0x1971DFC Offset: 0x1971DFC VA: 0x1971DFC
	public void MoveEaseScroll(int index, Action onFinish, EventMissionActionInfo eventMissionActionInfo) { }

	[DebuggerHiddenAttribute] // RVA: 0xCCFD40 Offset: 0xCCFD40 VA: 0xCCFD40
	// RVA: 0x19720E4 Offset: 0x19720E4 VA: 0x19720E4
	private IEnumerator SetPreviousFilter(int index, Action onFinished) { }

	[DebuggerHiddenAttribute] // RVA: 0xCCFD50 Offset: 0xCCFD50 VA: 0xCCFD50
	// RVA: 0x1972190 Offset: 0x1972190 VA: 0x1972190
	private IEnumerator MoveEaseScroll_IE(int index, Action onFinished) { }

	// RVA: 0x1972248 Offset: 0x1972248 VA: 0x1972248
	private float DoMoveEaseOut(float currentTime, float duration, float startValue, float changeValue) { }

	// RVA: 0x1972338 Offset: 0x1972338 VA: 0x1972338
	public void setMissionListIdx(bool isRaid) { }

	// RVA: 0x19724FC Offset: 0x19724FC VA: 0x19724FC
	public void DestroyList() { }

	// RVA: 0x197203C Offset: 0x197203C VA: 0x197203C
	public EventMissionItemListViewItem GetItem(int index) { }

	// RVA: 0x1972504 Offset: 0x1972504 VA: 0x1972504
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x1972990 Offset: 0x1972990 VA: 0x1972990
	private string GetReplaceDialogMessage(GiftEntity beforeGiftEntity, GiftEntity AfterGiftEntity) { }

	// RVA: 0x197291C Offset: 0x197291C VA: 0x197291C
	private void recieveReward(EventMissionEntity missionEntity) { }

	// RVA: 0x1972C68 Offset: 0x1972C68 VA: 0x1972C68
	public void checkAcceptable() { }

	// RVA: 0x197301C Offset: 0x197301C VA: 0x197301C
	public void unAcceptableDlg() { }

	// RVA: 0x197309C Offset: 0x197309C VA: 0x197309C
	public void requestMissionReward() { }

	// RVA: 0x19731B4 Offset: 0x19731B4 VA: 0x19731B4
	private void missionRewardCallback(string result) { }

	// RVA: 0x19733A0 Offset: 0x19733A0 VA: 0x19733A0
	private void SaveTerminalTransitionInfo() { }

	// RVA: 0x1973424 Offset: 0x1973424 VA: 0x1973424
	private TerminalTransitionInfo CreateTerminalTransitionInfo(int missionId) { }

	// RVA: 0x19735D0 Offset: 0x19735D0 VA: 0x19735D0
	private string GetVoiceAssetName(string[] afterActionVals) { }

	// RVA: 0x19737D4 Offset: 0x19737D4 VA: 0x19737D4
	public void AcceptReward() { }

	// RVA: 0x19745DC Offset: 0x19745DC VA: 0x19745DC
	private void afterReward() { }

	// RVA: 0x197466C Offset: 0x197466C VA: 0x197466C
	public void setAfterAction() { }

	// RVA: 0x197470C Offset: 0x197470C VA: 0x197470C
	private void loadOpenMissionEffect() { }

	// RVA: 0x19747BC Offset: 0x19747BC VA: 0x19747BC
	private void endloadEffect(AssetData data) { }

	// RVA: 0x1974EEC Offset: 0x1974EEC VA: 0x1974EEC
	public static GameObject getEffect(string name, Transform parentTr) { }

	// RVA: 0x19750C0 Offset: 0x19750C0 VA: 0x19750C0
	public void ModifyItem() { }

	// RVA: 0x1975484 Offset: 0x1975484 VA: 0x1975484
	public void SetOpenItem() { }

	// RVA: 0x197569C Offset: 0x197569C VA: 0x197569C
	private void modifyOpenItem() { }

	// RVA: 0x1975B24 Offset: 0x1975B24 VA: 0x1975B24
	private void actionAfterCallback() { }

	// RVA: 0x1975B40 Offset: 0x1975B40 VA: 0x1975B40 Slot: 12
	protected override void OnChangeAlphaAnim() { }

	// RVA: 0x19748C0 Offset: 0x19748C0 VA: 0x19748C0
	protected void RefrashListDisp() { }

	// RVA: 0x1975CD0 Offset: 0x1975CD0 VA: 0x1975CD0
	protected void RefrashListDisp(int missionId) { }

	// RVA: 0x1975F8C Offset: 0x1975F8C VA: 0x1975F8C
	public void OnClickFilterList() { }

	// RVA: 0x1971B38 Offset: 0x1971B38 VA: 0x1971B38
	private void setFilterId(int id) { }

	// RVA: 0x1974B1C Offset: 0x1974B1C VA: 0x1974B1C
	private void setList() { }

	// RVA: 0x1976018 Offset: 0x1976018 VA: 0x1976018
	private void setFilterName(string targetFile) { }

	// RVA: 0x19760EC Offset: 0x19760EC VA: 0x19760EC
	public bool GetIsCostumeReleaseItem() { }

	// RVA: 0x19760F4 Offset: 0x19760F4 VA: 0x19760F4
	public int GetCostumeReleaseItemObjectId() { }

	// RVA: 0x19760FC Offset: 0x19760FC VA: 0x19760FC
	public void SetScrollEnable(bool enable) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCFD60 Offset: 0xCCFD60 VA: 0xCCFD60
	// RVA: 0x1976164 Offset: 0x1976164 VA: 0x1976164
	private void <setNextMissionInfo>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCFD70 Offset: 0xCCFD70 VA: 0xCCFD70
	// RVA: 0x1976168 Offset: 0x1976168 VA: 0x1976168
	private void <setNextMissionInfo>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCFD80 Offset: 0xCCFD80 VA: 0xCCFD80
	// RVA: 0x197616C Offset: 0x197616C VA: 0x197616C
	private static void <checkAcceptable>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCFD90 Offset: 0xCCFD90 VA: 0xCCFD90
	// RVA: 0x19762E4 Offset: 0x19762E4 VA: 0x19762E4
	private static void <checkAcceptable>m__3() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCFDA0 Offset: 0xCCFDA0 VA: 0xCCFDA0
	// RVA: 0x197645C Offset: 0x197645C VA: 0x197645C
	private void <modifyOpenItem>m__4() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCFDB0 Offset: 0xCCFDB0 VA: 0xCCFDB0
	// RVA: 0x197696C Offset: 0x197696C VA: 0x197696C
	private static void <checkAcceptable>m__5() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCFDC0 Offset: 0xCCFDC0 VA: 0xCCFDC0
	// RVA: 0x19769CC Offset: 0x19769CC VA: 0x19769CC
	private static void <checkAcceptable>m__6() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCFDD0 Offset: 0xCCFDD0 VA: 0xCCFDD0
	// RVA: 0x1976A2C Offset: 0x1976A2C VA: 0x1976A2C
	private static int <modifyOpenItem>m__7(EventMissionActionInfo a, EventMissionActionInfo b) { }
}

// Namespace: 
public enum EventMissionItemListViewManager.FilterStatus // TypeDefIndex: 9767
{
	// Fields
	public int value__; // 0x0
	public const EventMissionItemListViewManager.FilterStatus INIT = 0;
	public const EventMissionItemListViewManager.FilterStatus CLEAR = 1;
	public const EventMissionItemListViewManager.FilterStatus PROGRESS = 2;
	public const EventMissionItemListViewManager.FilterStatus NOTOPEN = 3;
	public const EventMissionItemListViewManager.FilterStatus ACHIVE = 4;
}

// Namespace: 
private class EventMissionItemListViewManager.resData // TypeDefIndex: 9768
{
	// Fields
	public GetSvts[] getSvts; // 0x10
	public GetCommandCodes[] getCommandCodes; // 0x18

	// Methods

	// RVA: 0x1977DE0 Offset: 0x1977DE0 VA: 0x1977DE0
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44904 Offset: 0xC44904 VA: 0xC44904
private sealed class EventMissionItemListViewManager.<SetPreviousFilter>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9769
{
	// Fields
	internal int index; // 0x10
	internal Action onFinished; // 0x18
	internal int <sum>__0; // 0x20
	internal List<int> <tempList>__0; // 0x28
	internal int <closest>__0; // 0x30
	internal int <order>__0; // 0x34
	internal EventMissionItemListViewManager $this; // 0x38
	internal object $current; // 0x40
	internal bool $disposing; // 0x48
	internal int $PC; // 0x4C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDC300 Offset: 0xCDC300 VA: 0xCDC300
	// RVA: 0x1972238 Offset: 0x1972238 VA: 0x1972238
	public void .ctor() { }

	// RVA: 0x197784C Offset: 0x197784C VA: 0x197784C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC310 Offset: 0xCDC310 VA: 0xCDC310
	// RVA: 0x1977CDC Offset: 0x1977CDC VA: 0x1977CDC Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC320 Offset: 0xCDC320 VA: 0xCDC320
	// RVA: 0x1977CE4 Offset: 0x1977CE4 VA: 0x1977CE4 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC330 Offset: 0xCDC330 VA: 0xCDC330
	// RVA: 0x1977CEC Offset: 0x1977CEC VA: 0x1977CEC Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC340 Offset: 0xCDC340 VA: 0xCDC340
	// RVA: 0x1977D00 Offset: 0x1977D00 VA: 0x1977D00 Slot: 6
	public void Reset() { }

	// RVA: 0x1977D68 Offset: 0x1977D68 VA: 0x1977D68
	internal int <>m__0(int x, int y) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44914 Offset: 0xC44914 VA: 0xC44914
private sealed class EventMissionItemListViewManager.<MoveEaseScroll_IE>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9770
{
	// Fields
	internal float <start>__0; // 0x10
	internal Vector3 <initPosion>__0; // 0x14
	internal float <scrollContentSize>__0; // 0x20
	internal int index; // 0x24
	internal float <end>__0; // 0x28
	internal float <movePer>__0; // 0x2C
	internal float <moveValue>__0; // 0x30
	internal float <duration>__0; // 0x34
	internal float <timer>__0; // 0x38
	internal float <val>__1; // 0x3C
	internal Action onFinished; // 0x40
	internal EventMissionItemListViewManager $this; // 0x48
	internal object $current; // 0x50
	internal bool $disposing; // 0x58
	internal int $PC; // 0x5C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDC350 Offset: 0xCDC350 VA: 0xCDC350
	// RVA: 0x1972240 Offset: 0x1972240 VA: 0x1972240
	public void .ctor() { }

	// RVA: 0x19773C4 Offset: 0x19773C4 VA: 0x19773C4 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC360 Offset: 0xCDC360 VA: 0xCDC360
	// RVA: 0x1977774 Offset: 0x1977774 VA: 0x1977774 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC370 Offset: 0xCDC370 VA: 0xCDC370
	// RVA: 0x197777C Offset: 0x197777C VA: 0x197777C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC380 Offset: 0xCDC380 VA: 0xCDC380
	// RVA: 0x1977784 Offset: 0x1977784 VA: 0x1977784 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC390 Offset: 0xCDC390 VA: 0xCDC390
	// RVA: 0x1977798 Offset: 0x1977798 VA: 0x1977798 Slot: 6
	public void Reset() { }
}
