	public void OnClickDecide() { }

	// RVA: 0x16B2E58 Offset: 0x16B2E58 VA: 0x16B2E58
	public void OnClickCancel() { }

	// RVA: 0x16B2F04 Offset: 0x16B2F04 VA: 0x16B2F04 Slot: 6
	protected override string get_closeBtnPath() { }

	// RVA: 0x16B2F4C Offset: 0x16B2F4C VA: 0x16B2F4C
	private static void .cctor() { }
}

// Namespace: 
private enum EventRewardAssistConfirmDialog.State // TypeDefIndex: 9838
{
	// Fields
	public int value__; // 0x0
	public const EventRewardAssistConfirmDialog.State INIT = 0;
	public const EventRewardAssistConfirmDialog.State INPUT = 1;
	public const EventRewardAssistConfirmDialog.State OPEN = 2;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44A04 Offset: 0xC44A04 VA: 0xC44A04
private sealed class EventRewardAssistConfirmDialog.<Open>c__AnonStorey0 // TypeDefIndex: 9839
{
	// Fields
	internal ShopEntity shopEnt; // 0x10
	internal AssistEntity beforeAssistEnt; // 0x18
	internal AssistEntity afterAssistEnt; // 0x20
	internal EventRewardAssistConfirmDialog $this; // 0x28

	// Methods

	// RVA: 0x16B2D8C Offset: 0x16B2D8C VA: 0x16B2D8C
	public void .ctor() { }

	// RVA: 0x16B2FC4 Offset: 0x16B2FC4 VA: 0x16B2FC4
	internal void <>m__0() { }
}

// Namespace: 
public class EventRewardButtonChangeManager : MonoBehaviour // TypeDefIndex: 9840
{
	// Fields
	protected static readonly string BTN_NAME_TYPE3_ON; // 0x0
	protected static readonly string BTN_NAME_TYPE3_OFF; // 0x8
	protected static readonly string BTN_NAME_TYPE2_ON; // 0x10
	protected static readonly string BTN_NAME_TYPE2_OFF; // 0x18
	protected static readonly string BTN_NAME_TYPE4_ON; // 0x20
	protected static readonly string BTN_NAME_TYPE4_OFF; // 0x28
	protected static readonly string RELEASE_EFFECT_4TAB_NAME; // 0x30
	protected static readonly string RELEASE_EFFECT_3TAB_NAME; // 0x38
	protected static readonly string RELEASE_EFFECT_2TAB_NAME; // 0x40
	protected static readonly string DISABLE_BTN_TXT; // 0x48
	[SerializeField] // RVA: 0xC6E254 Offset: 0xC6E254 VA: 0xC6E254
	protected UICommonButton[] eventBtns; // 0x18
	[SerializeField] // RVA: 0xC6E264 Offset: 0xC6E264 VA: 0xC6E264
	protected UISprite[] eventBtnImages; // 0x20
	[SerializeField] // RVA: 0xC6E274 Offset: 0xC6E274 VA: 0xC6E274
	protected GameObject[] backImgObjs; // 0x28
	[SerializeField] // RVA: 0xC6E284 Offset: 0xC6E284 VA: 0xC6E284
	protected GameObject[] activeImgObjs; // 0x30
	[SerializeField] // RVA: 0xC6E294 Offset: 0xC6E294 VA: 0xC6E294
	protected UISprite[] btnTxtSprites; // 0x38
	[SerializeField] // RVA: 0xC6E2A4 Offset: 0xC6E2A4 VA: 0xC6E2A4
	protected GameObject[] tabColliders; // 0x40
	private int[] tabImageIds; // 0x48
	private EventRewardSceneReleaseEntity[] releaseEntityArray; // 0x50
	private AssetData efffectData; // 0x58
	private GameObject[] effectObject; // 0x60
	private int eventCount; // 0x68
	private int closedTabImageId; // 0x6C
	private int eventId; // 0x70
	private int releaseSlot; // 0x74
	private Action RequestEndCallBack; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xC6E2B4 Offset: 0xC6E2B4 VA: 0xC6E2B4
	private static Action <>f__am$cache0; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xC6E2C4 Offset: 0xC6E2C4 VA: 0xC6E2C4
	private static Action <>f__am$cache1; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xC6E2D4 Offset: 0xC6E2D4 VA: 0xC6E2D4
	private static Action <>f__am$cache2; // 0x60
	[CompilerGeneratedAttribute] // RVA: 0xC6E2E4 Offset: 0xC6E2E4 VA: 0xC6E2E4
	private static Action <>f__am$cache3; // 0x68

	// Methods

	// RVA: 0x16B3560 Offset: 0x16B3560 VA: 0x16B3560
	public void .ctor() { }

	// RVA: 0x16B3568 Offset: 0x16B3568 VA: 0x16B3568
	public void TabInitialize(int eventId) { }

	// RVA: 0x16B36CC Offset: 0x16B36CC VA: 0x16B36CC
	public void SetReleaseBtnState(EventRewardSceneReleaseEntity[] entitys, int closedImageId, Action effectEndCallBack) { }

	// RVA: 0x16B36DC Offset: 0x16B36DC VA: 0x16B36DC
	public void SetReleaseEffectData(AssetData data) { }

	// RVA: 0x16B36E8 Offset: 0x16B36E8 VA: 0x16B36E8
	public void ChangeTabInfo(int priorityId, int currentEventId, EventRewardSceneEntity[] eventRewardSceneEnt, int openSlot, bool openedTab) { }

	// RVA: 0x16B40C0 Offset: 0x16B40C0 VA: 0x16B40C0
	public void SetBtnCollider(bool isDisp, int currentEventSlotIndex) { }

	// RVA: 0x16B4278 Offset: 0x16B4278 VA: 0x16B4278
	public void SetReleaseEffect(int eventId, int eventCount, int slot, Action changeCallback, Action endCallback) { }

	// RVA: 0x16B4AA8 Offset: 0x16B4AA8 VA: 0x16B4AA8
	private string GetReleaseBtnSpriteName(int eventId, int releaseTabPriority) { }

	// RVA: 0x16B4710 Offset: 0x16B4710 VA: 0x16B4710
	private void SetReleaseBeforeTabInfo(int eventId, int tabPriority, int eventCount) { }

	// RVA: 0x16B4BC4 Offset: 0x16B4BC4 VA: 0x16B4BC4
	public void OnClickDisableLeftButton() { }

	// RVA: 0x16B4DB0 Offset: 0x16B4DB0 VA: 0x16B4DB0
	public void OnClickDisableCenterButton() { }

	// RVA: 0x16B4FA0 Offset: 0x16B4FA0 VA: 0x16B4FA0
	public void OnClickDisableRightButton() { }

	// RVA: 0x16B52D0 Offset: 0x16B52D0 VA: 0x16B52D0
	public void StartTutorialRequest() { }

	// RVA: 0x16B53A8 Offset: 0x16B53A8 VA: 0x16B53A8
	public void EndTutorialRequest(string result) { }

	// RVA: 0x16B53C4 Offset: 0x16B53C4 VA: 0x16B53C4
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD00C0 Offset: 0xCD00C0 VA: 0xCD00C0
	// RVA: 0x16B54D8 Offset: 0x16B54D8 VA: 0x16B54D8
	private static void <OnClickDisableLeftButton>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD00D0 Offset: 0xCD00D0 VA: 0xCD00D0
	// RVA: 0x16B5538 Offset: 0x16B5538 VA: 0x16B5538
	private static void <OnClickDisableCenterButton>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD00E0 Offset: 0xCD00E0 VA: 0xCD00E0
	// RVA: 0x16B5598 Offset: 0x16B5598 VA: 0x16B5598
	private static void <OnClickDisableRightButton>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD00F0 Offset: 0xCD00F0 VA: 0xCD00F0
	// RVA: 0x16B55F8 Offset: 0x16B55F8 VA: 0x16B55F8
	private static void <OnClickDisableRightButton>m__3() { }
}

// Namespace: 
public enum EventRewardButtonChangeManager.SlotIndex // TypeDefIndex: 9841
{
	// Fields
	public int value__; // 0x0
	public const EventRewardButtonChangeManager.SlotIndex Slot1 = 0;
	public const EventRewardButtonChangeManager.SlotIndex Slot2 = 1;
	public const EventRewardButtonChangeManager.SlotIndex Slot3 = 2;
	public const EventRewardButtonChangeManager.SlotIndex Slot4 = 3;
}

// Namespace: 
public class EventRewardRootComponent : SceneRootComponent // TypeDefIndex: 9842
{
	// Fields
	protected static readonly int DEFAULT_EVENT_ID; // 0x0
	protected static readonly int DEFAULT_BG_ID; // 0x4
	protected static readonly int DEFAULT_SVT_ID; // 0x8
	protected static readonly string DEFAULT_BGM_NAME; // 0x10
	protected static readonly string BG_ROOT; // 0x18
	protected static readonly Rect DISP_RECT; // 0x20
	protected static readonly int DEFAULT_INFOPANEL_HEIGHT; // 0x30
	protected static readonly int DEFAULT_SLIDERPANEL_HEIGHT; // 0x34
	protected static readonly string LOGO_BG_SPRITENAME_ROOT; // 0x38
	protected static readonly string LOGO_SPRITENAME_ROOT; // 0x40
	protected static readonly string REWARD_RARITY_SPRITE_NAME; // 0x48
	protected static readonly int SCOPE_INFOPANEL_ADD_HEIGHT; // 0x50
	protected static readonly int SCOPE_ITEM_INFO_ADD_WIDTH; // 0x54
	protected static readonly float OPEN_TIME; // 0x58
	protected static readonly float CLOSE_TIME; // 0x5C
	protected static readonly int FIGURE_ID; // 0x60
	protected static readonly int DEFAULT_EVENT_SHOP_ID; // 0x64
	protected static readonly int DEFAULT_BG_SHOP_ID; // 0x68
	protected static readonly int DEFAULT_SVT_SHOP_ID; // 0x6C
	protected static readonly int LISTUP_HEIGHT; // 0x70
	protected static readonly int DEFAULT_INFO_OBJECT_HEIGHT; // 0x74
	protected static readonly int SHIFT_LOGO; // 0x78
	protected static readonly float CHANGE_TIME; // 0x7C
	protected static readonly float[] ENABLE_TIME_SHOP_STRING_POS; // 0x80
	protected static readonly float[] ENABLE_TIME_GACHA_STRING_POS; // 0x88
	protected static readonly float[] ENABLE_TIME_GACHA_OBJECT_POS; // 0x90
	protected static readonly float END_EVENT_STRING_POS; // 0x98
	protected static readonly float BOX_GACHA_RESOURCE_POS; // 0x9C
	protected static readonly float DEFAULT_POS; // 0xA0
	protected static readonly float BOX_GACHA_POS; // 0xA4
	protected static readonly float DEFAULT_POSX; // 0xA8
	private const float NOTICE_WINDOW_POSITION_Y = 14.7;
	private const float NOTICE_WINDOW_BUTTON_Y = -162.5;
	private const int NOTICE_WINDOW_DEPTH = 210;
	protected static readonly string LOAD_EFFECT_NAME; // 0xB0
	private string recoveryFatiguePath; // 0x38
	protected static readonly string RECOVERY_FATIGUE_PREFAB; // 0xB8
	private static readonly string ITEM_GET_ASSET_NAME; // 0xC0
	private static readonly string ITEM_GET_EFFECT_NAME; // 0xC8
	private static Dictionary<int, int> checkList; // 0xD0
	private static bool isFirst; // 0xD8
	private static Dictionary<int, int> lotteryShopServantIsGetList; // 0xE0
	private static List<EventRewardRootComponent.unselectedSvtData> unselectedSvtDataList; // 0xE8
	protected static readonly Vector3 BOX_COUNT_EXISTS_LABEL_POSITION; // 0xF0
	[SerializeField] // RVA: 0xC6E2F4 Offset: 0xC6E2F4 VA: 0xC6E2F4
	protected TitleInfoControl titleInfo; // 0x40
	[SerializeField] // RVA: 0xC6E304 Offset: 0xC6E304 VA: 0xC6E304
	protected ExUITexture[] backgroundTextures; // 0x48
	[SerializeField] // RVA: 0xC6E314 Offset: 0xC6E314 VA: 0xC6E314
	protected UISprite eventLogoSprite; // 0x50
	[SerializeField] // RVA: 0xC6E324 Offset: 0xC6E324 VA: 0xC6E324
	protected UISprite eventLogoBgSprite; // 0x58
	[SerializeField] // RVA: 0xC6E334 Offset: 0xC6E334 VA: 0xC6E334
	protected GameObject bgImgObj; // 0x60
	[SerializeField] // RVA: 0xC6E344 Offset: 0xC6E344 VA: 0xC6E344
	protected GameObject boxGachaInfoObj; // 0x68
	[SerializeField] // RVA: 0xC6E354 Offset: 0xC6E354 VA: 0xC6E354
	protected GameObject eventPointInfoObj; // 0x70
	[SerializeField] // RVA: 0xC6E364 Offset: 0xC6E364 VA: 0xC6E364
	protected GameObject eventMissionInfoObj; // 0x78
	[SerializeField] // RVA: 0xC6E374 Offset: 0xC6E374 VA: 0xC6E374
	protected GameObject eventShopInfoObj; // 0x80
	[SerializeField] // RVA: 0xC6E384 Offset: 0xC6E384 VA: 0xC6E384
	protected GameObject eventRankingInfoObj; // 0x88
	[SerializeField] // RVA: 0xC6E394 Offset: 0xC6E394 VA: 0xC6E394
	protected GameObject eventTowerInfoObj; // 0x90
	[SerializeField] // RVA: 0xC6E3A4 Offset: 0xC6E3A4 VA: 0xC6E3A4
	protected GameObject eventServantRecoveryInfoObj; // 0x98
	[SerializeField] // RVA: 0xC6E3B4 Offset: 0xC6E3B4 VA: 0xC6E3B4
	protected GameObject eventBoardGameTokenInfoObj; // 0xA0
	[SerializeField] // RVA: 0xC6E3C4 Offset: 0xC6E3C4 VA: 0xC6E3C4
	protected GameObject eventTreasureInfoObj; // 0xA8
	[SerializeField] // RVA: 0xC6E3D4 Offset: 0xC6E3D4 VA: 0xC6E3D4
	protected GameObject eventRandomMissionInfoObj; // 0xB0
	[SerializeField] // RVA: 0xC6E3E4 Offset: 0xC6E3E4 VA: 0xC6E3E4
	protected UIPanel infoPanel; // 0xB8
	[SerializeField] // RVA: 0xC6E3F4 Offset: 0xC6E3F4 VA: 0xC6E3F4
	protected GameObject outSideSvtPanelPos; // 0xC0
	[SerializeField] // RVA: 0xC6E404 Offset: 0xC6E404 VA: 0xC6E404
	protected GameObject multiSvtScrollObj; // 0xC8
	[SerializeField] // RVA: 0xC6E414 Offset: 0xC6E414 VA: 0xC6E414
	protected BoxGachaItemListViewManager boxGachaListViewManager; // 0xD0
	[SerializeField] // RVA: 0xC6E424 Offset: 0xC6E424 VA: 0xC6E424
	protected BoxGachaResultEffectComponent boxGachaResultComp; // 0xD8
	[SerializeField] // RVA: 0xC6E434 Offset: 0xC6E434 VA: 0xC6E434
	protected SetBoxGachaResourceControl setGachaResourceCtr; // 0xE0
	[SerializeField] // RVA: 0xC6E444 Offset: 0xC6E444 VA: 0xC6E444
	protected UISprite singleGachaTimeSprite; // 0xE8
	[SerializeField] // RVA: 0xC6E454 Offset: 0xC6E454 VA: 0xC6E454
	protected UISprite singleInfoTxtSprite; // 0xF0
	[SerializeField] // RVA: 0xC6E464 Offset: 0xC6E464 VA: 0xC6E464
	protected UISprite oneGachaTimeSprite; // 0xF8
	[SerializeField] // RVA: 0xC6E474 Offset: 0xC6E474 VA: 0xC6E474
	protected UISprite oneInfoTxtSprite; // 0x100
	[SerializeField] // RVA: 0xC6E484 Offset: 0xC6E484 VA: 0xC6E484
	protected UISprite multiGachaTimeSprite; // 0x108
	[SerializeField] // RVA: 0xC6E494 Offset: 0xC6E494 VA: 0xC6E494
	protected UISprite multiInfoTxtSprite; // 0x110
	[SerializeField] // RVA: 0xC6E4A4 Offset: 0xC6E4A4 VA: 0xC6E4A4
	protected GameObject normalBoxGachaInfo; // 0x118
	[SerializeField] // RVA: 0xC6E4B4 Offset: 0xC6E4B4 VA: 0xC6E4B4
	protected UISprite normalLineupInfoSprite; // 0x120
	[SerializeField] // RVA: 0xC6E4C4 Offset: 0xC6E4C4 VA: 0xC6E4C4
	protected UILabel normalGachaNumLb; // 0x128
	[SerializeField] // RVA: 0xC6E4D4 Offset: 0xC6E4D4 VA: 0xC6E4D4
	protected UILabel eventGachaAllNumLb; // 0x130
	[SerializeField] // RVA: 0xC6E4E4 Offset: 0xC6E4E4 VA: 0xC6E4E4
	protected UILabel boxGachaEndTimeLabel; // 0x138
	[SerializeField] // RVA: 0xC6E4F4 Offset: 0xC6E4F4 VA: 0xC6E4F4
	protected UILabel boxGachaStringLb; // 0x140
	[SerializeField] // RVA: 0xC6E504 Offset: 0xC6E504 VA: 0xC6E504
	protected GameObject limitBoxGachaInfo; // 0x148
	[SerializeField] // RVA: 0xC6E514 Offset: 0xC6E514 VA: 0xC6E514
	protected UISprite LimitLineupInfoSprite; // 0x150
	[SerializeField] // RVA: 0xC6E524 Offset: 0xC6E524 VA: 0xC6E524
	protected UILabel limitGachaNumLb; // 0x158
	[SerializeField] // RVA: 0xC6E534 Offset: 0xC6E534 VA: 0xC6E534
	protected GameObject limitInfo; // 0x160
	[SerializeField] // RVA: 0xC6E544 Offset: 0xC6E544 VA: 0xC6E544
	protected UILabel limitInfoLb; // 0x168
	[SerializeField] // RVA: 0xC6E554 Offset: 0xC6E554 VA: 0xC6E554
	protected UISprite limitInfoBgImg; // 0x170
	[SerializeField] // RVA: 0xC6E564 Offset: 0xC6E564 VA: 0xC6E564
	protected UILabel limitResetNumLb; // 0x178
	[SerializeField] // RVA: 0xC6E574 Offset: 0xC6E574 VA: 0xC6E574
	protected UISprite allNumTitleSprite; // 0x180
	[SerializeField] // RVA: 0xC6E584 Offset: 0xC6E584 VA: 0xC6E584
	protected GameObject allNumObject; // 0x188
	[SerializeField] // RVA: 0xC6E594 Offset: 0xC6E594 VA: 0xC6E594
	protected UISprite resetTxtSprite; // 0x190
	[SerializeField] // RVA: 0xC6E5A4 Offset: 0xC6E5A4 VA: 0xC6E5A4
	protected UIButton resetBtn; // 0x198
	[SerializeField] // RVA: 0xC6E5B4 Offset: 0xC6E5B4 VA: 0xC6E5B4
	protected GameObject boxGachaInfo; // 0x1A0
	[SerializeField] // RVA: 0xC6E5C4 Offset: 0xC6E5C4 VA: 0xC6E5C4
	protected EventPointItemListViewManager eventPointListViewManager; // 0x1A8
	[SerializeField] // RVA: 0xC6E5D4 Offset: 0xC6E5D4 VA: 0xC6E5D4
	protected UISprite pointTitleTxtSprite; // 0x1B0
	[SerializeField] // RVA: 0xC6E5E4 Offset: 0xC6E5E4 VA: 0xC6E5E4
	protected UISprite pointTxtSprite; // 0x1B8
	[SerializeField] // RVA: 0xC6E5F4 Offset: 0xC6E5F4 VA: 0xC6E5F4
	protected UILabel eventPointTxt; // 0x1C0
	[SerializeField] // RVA: 0xC6E604 Offset: 0xC6E604 VA: 0xC6E604
	protected GameObject eventPointInfo; // 0x1C8
	[SerializeField] // RVA: 0xC6E614 Offset: 0xC6E614 VA: 0xC6E614
	protected EventMissionItemListViewManager eventMissionListViewManager; // 0x1D0
	[SerializeField] // RVA: 0xC6E624 Offset: 0xC6E624 VA: 0xC6E624
	protected UISprite missionTitleTxtSprite; // 0x1D8
	[SerializeField] // RVA: 0xC6E634 Offset: 0xC6E634 VA: 0xC6E634
	protected UISprite missionTxtSprite; // 0x1E0
	[SerializeField] // RVA: 0xC6E644 Offset: 0xC6E644 VA: 0xC6E644
	protected UILabel eventMissionTxt; // 0x1E8
	[SerializeField] // RVA: 0xC6E654 Offset: 0xC6E654 VA: 0xC6E654
	protected GameObject eventMissionInfo; // 0x1F0
	[SerializeField] // RVA: 0xC6E664 Offset: 0xC6E664 VA: 0xC6E664
	protected ShopBuyItemListViewManager buyItemListViewManager; // 0x1F8
	[SerializeField] // RVA: 0xC6E674 Offset: 0xC6E674 VA: 0xC6E674
	protected UISprite shopTitleTxtSprite; // 0x200
	[SerializeField] // RVA: 0xC6E684 Offset: 0xC6E684 VA: 0xC6E684
	protected UIPanel shopEventItemDrawBase; // 0x208
	[SerializeField] // RVA: 0xC6E694 Offset: 0xC6E694 VA: 0xC6E694
	protected ShopBuyItemConfirmMenu buyItemConfirmMenu; // 0x210
	[SerializeField] // RVA: 0xC6E6A4 Offset: 0xC6E6A4 VA: 0xC6E6A4
	protected ShopBuyBulkItemConfirmMenu buyBulkItemConfirmMenu; // 0x218
	[SerializeField] // RVA: 0xC6E6B4 Offset: 0xC6E6B4 VA: 0xC6E6B4
	private GameObject lotteryShopBuyItemConfirmMenuPrefab; // 0x220
	private LotteryShopBuyItemConfirmMenu lotteryShopBuyItemConfirmMenu; // 0x228
	[SerializeField] // RVA: 0xC6E6C4 Offset: 0xC6E6C4 VA: 0xC6E6C4
	private GameObject LotteryShopBulkResultDialogPrefab; // 0x230
	private LotteryShopBulkResultDialog LotteryShopBulkResultDialog; // 0x238
	[SerializeField] // RVA: 0xC6E6D4 Offset: 0xC6E6D4 VA: 0xC6E6D4
	protected RequestResultDialog requestResultDialog; // 0x240
	[SerializeField] // RVA: 0xC6E6E4 Offset: 0xC6E6E4 VA: 0xC6E6E4
	protected GameObject mActionPanel; // 0x248
	[SerializeField] // RVA: 0xC6E6F4 Offset: 0xC6E6F4 VA: 0xC6E6F4
	protected GameObject eventShopInfo; // 0x250
	[SerializeField] // RVA: 0xC6E704 Offset: 0xC6E704 VA: 0xC6E704
	protected UILabel normalWindowEventEnableTimeLb; // 0x258
	[SerializeField] // RVA: 0xC6E714 Offset: 0xC6E714 VA: 0xC6E714
	protected UILabel normalWindowStringLb; // 0x260
	[SerializeField] // RVA: 0xC6E724 Offset: 0xC6E724 VA: 0xC6E724
	protected UILabel notNormalWindowEventEnableTimeLb; // 0x268
	[SerializeField] // RVA: 0xC6E734 Offset: 0xC6E734 VA: 0xC6E734
	protected UILabel notNormalWindowStringLb; // 0x270
	[SerializeField] // RVA: 0xC6E744 Offset: 0xC6E744 VA: 0xC6E744
	protected EventRankingListViewManager eventRankingListViewManager; // 0x278
	[SerializeField] // RVA: 0xC6E754 Offset: 0xC6E754 VA: 0xC6E754
	protected UILabel rankingTitleTxtLabel; // 0x280
	[SerializeField] // RVA: 0xC6E764 Offset: 0xC6E764 VA: 0xC6E764
	protected UILabel raceSupportLabel; // 0x288
	[SerializeField] // RVA: 0xC6E774 Offset: 0xC6E774 VA: 0xC6E774
	protected EventRankingRoundInfo[] raceRoundInfos; // 0x290
	[SerializeField] // RVA: 0xC6E784 Offset: 0xC6E784 VA: 0xC6E784
	protected GameObject eventRankingInfo; // 0x298
	[SerializeField] // RVA: 0xC6E794 Offset: 0xC6E794 VA: 0xC6E794
	protected UISprite rankingRewardTxtSprite; // 0x2A0
	[SerializeField] // RVA: 0xC6E7A4 Offset: 0xC6E7A4 VA: 0xC6E7A4
	protected EventTowerListViewManager eventTowerListViewManager; // 0x2A8
	[SerializeField] // RVA: 0xC6E7B4 Offset: 0xC6E7B4 VA: 0xC6E7B4
	protected UISprite towerTitleTxtSprite; // 0x2B0
	[SerializeField] // RVA: 0xC6E7C4 Offset: 0xC6E7C4 VA: 0xC6E7C4
	protected GameObject recoveryFatigueParentObj; // 0x2B8
	[SerializeField] // RVA: 0xC6E7D4 Offset: 0xC6E7D4 VA: 0xC6E7D4
	protected UISprite servantRecoveryTitleTxtSprite; // 0x2C0
	[SerializeField] // RVA: 0xC6E7E4 Offset: 0xC6E7E4 VA: 0xC6E7E4
	protected EventServantFatigueListViewManager servantFatigueListViewManager; // 0x2C8
	[SerializeField] // RVA: 0xC6E7F4 Offset: 0xC6E7F4 VA: 0xC6E7F4
	protected EventBoardGameTokenManager eventBoardGameTokenManager; // 0x2D0
	[SerializeField] // RVA: 0xC6E804 Offset: 0xC6E804 VA: 0xC6E804
	protected UISprite eventBoardGameTokenTxtSprite; // 0x2D8
	[SerializeField] // RVA: 0xC6E814 Offset: 0xC6E814 VA: 0xC6E814
	protected EventTreasureBoxManager eventTreasureBoxManager; // 0x2E0
	[SerializeField] // RVA: 0xC6E824 Offset: 0xC6E824 VA: 0xC6E824
	protected UISprite treasureBoxTitleTxtSprite; // 0x2E8
	[SerializeField] // RVA: 0xC6E834 Offset: 0xC6E834 VA: 0xC6E834
	protected UISprite treasureBoxInfoTxtSprite; // 0x2F0
	[SerializeField] // RVA: 0xC6E844 Offset: 0xC6E844 VA: 0xC6E844
	protected EventRandomMissionListViewManager eventRandomMissionListViewManager; // 0x2F8
	[SerializeField] // RVA: 0xC6E854 Offset: 0xC6E854 VA: 0xC6E854
	protected UISprite randomMissionTitleTxtSprite; // 0x300
	[SerializeField] // RVA: 0xC6E864 Offset: 0xC6E864 VA: 0xC6E864
	protected UISprite randomMissionTxtSprite; // 0x308
	[SerializeField] // RVA: 0xC6E874 Offset: 0xC6E874 VA: 0xC6E874
	protected UILabel eventRandomMissionTxt; // 0x310
	[SerializeField] // RVA: 0xC6E884 Offset: 0xC6E884 VA: 0xC6E884
	protected GameObject eventRandomMissionInfo; // 0x318
	[SerializeField] // RVA: 0xC6E894 Offset: 0xC6E894 VA: 0xC6E894
	protected UILabel eventRandomMissionWarningText; // 0x320
	[SerializeField] // RVA: 0xC6E8A4 Offset: 0xC6E8A4 VA: 0xC6E8A4
	protected EventSvtControl svtVoiceCtr; // 0x328
	[SerializeField] // RVA: 0xC6E8B4 Offset: 0xC6E8B4 VA: 0xC6E8B4
	protected GameObject standFigureObj; // 0x330
	[SerializeField] // RVA: 0xC6E8C4 Offset: 0xC6E8C4 VA: 0xC6E8C4
	protected StandFigureBack standFigureBack; // 0x338
	[SerializeField] // RVA: 0xC6E8D4 Offset: 0xC6E8D4 VA: 0xC6E8D4
	protected GameObject playBntObj; // 0x340
	[SerializeField] // RVA: 0xC6E8E4 Offset: 0xC6E8E4 VA: 0xC6E8E4
	protected UISprite playBtnImg; // 0x348
	[SerializeField] // RVA: 0xC6E8F4 Offset: 0xC6E8F4 VA: 0xC6E8F4
	protected GameObject voicePlayEffect; // 0x350
	[SerializeField] // RVA: 0xC6E904 Offset: 0xC6E904 VA: 0xC6E904
	protected GameObject helpObj; // 0x358
	[SerializeField] // RVA: 0xC6E914 Offset: 0xC6E914 VA: 0xC6E914
	protected EventRewardButtonChangeManager doubleChangeBtnInfoObj; // 0x360
	[SerializeField] // RVA: 0xC6E924 Offset: 0xC6E924 VA: 0xC6E924
	protected EventRewardButtonChangeManager tripleChangeBtnInfoObj; // 0x368
	[SerializeField] // RVA: 0xC6E934 Offset: 0xC6E934 VA: 0xC6E934
	protected EventRewardButtonChangeManager fourthChangeBtnInfoObj; // 0x370
	[SerializeField] // RVA: 0xC6E944 Offset: 0xC6E944 VA: 0xC6E944
	protected GameObject multiSvtObj; // 0x378
	[SerializeField] // RVA: 0xC6E954 Offset: 0xC6E954 VA: 0xC6E954
	protected UIScrollView mScroll; // 0x380
	[SerializeField] // RVA: 0xC6E964 Offset: 0xC6E964 VA: 0xC6E964
	protected UIWrapContent loopCtr; // 0x388
	[SerializeField] // RVA: 0xC6E974 Offset: 0xC6E974 VA: 0xC6E974
	protected ExUICenterChild centerChild; // 0x390
	[SerializeField] // RVA: 0xC6E984 Offset: 0xC6E984 VA: 0xC6E984
	protected GameObject sliderInfo; // 0x398
	[SerializeField] // RVA: 0xC6E994 Offset: 0xC6E994 VA: 0xC6E994
	protected GameObject slideIndexPrefab; // 0x3A0
	[SerializeField] // RVA: 0xC6E9A4 Offset: 0xC6E9A4 VA: 0xC6E9A4
	protected UIGrid sliderGrid; // 0x3A8
	[SerializeField] // RVA: 0xC6E9B4 Offset: 0xC6E9B4 VA: 0xC6E9B4
	protected UIPanel indexPanel; // 0x3B0
	[SerializeField] // RVA: 0xC6E9C4 Offset: 0xC6E9C4 VA: 0xC6E9C4
	protected GameObject arrowInfo; // 0x3B8
	[SerializeField] // RVA: 0xC6E9D4 Offset: 0xC6E9D4 VA: 0xC6E9D4
	protected UIButton leftArrowBtn; // 0x3C0
	[SerializeField] // RVA: 0xC6E9E4 Offset: 0xC6E9E4 VA: 0xC6E9E4
	protected UIButton rightArrowBtn; // 0x3C8
	[SerializeField] // RVA: 0xC6E9F4 Offset: 0xC6E9F4 VA: 0xC6E9F4
	protected GameObject multiSvtFigurePanel; // 0x3D0
	[SerializeField] // RVA: 0xC6EA04 Offset: 0xC6EA04 VA: 0xC6EA04
	protected UISprite tabTypeImage; // 0x3D8
	[SerializeField] // RVA: 0xC6EA14 Offset: 0xC6EA14 VA: 0xC6EA14
	protected GameObject maskPanel; // 0x3E0
	[SerializeField] // RVA: 0xC6EA24 Offset: 0xC6EA24 VA: 0xC6EA24
	protected PresentBoxOverDialog presentBoxOverDialog; // 0x3E8
	[SerializeField] // RVA: 0xC6EA34 Offset: 0xC6EA34 VA: 0xC6EA34
	protected PresentBoxInfoComponent presentBoxInfo; // 0x3F0
	[SerializeField] // RVA: 0xC6EA44 Offset: 0xC6EA44 VA: 0xC6EA44
	protected EventRewardAssistConfirmDialog eventRewardAssistConfirmDialog; // 0x3F8
	[SerializeField] // RVA: 0xC6EA54 Offset: 0xC6EA54 VA: 0xC6EA54
	protected EventRewardAnotherPayConfirmDialog eventRewardAnotherPayConfirmDialog; // 0x400
	[SerializeField] // RVA: 0xC6EA64 Offset: 0xC6EA64 VA: 0xC6EA64
	private EventBuddyPointResultManager buddyPointResultManager; // 0x408
	private List<StandFigureCollect> standFigureCollectList; // 0x410
	private List<int> eventBgmIdList; // 0x418
	private int[] imageIdArray; // 0x420
	private string bgmName; // 0x428
	private List<EventRewardRootComponent.VoiceData> allEventVoiceDataList; // 0x430
	private List<EventRewardRootComponent.VoiceData> individualPurchaseVoiceList; // 0x438
	private List<EventRewardRootComponent.SlotAllSvtData> slotAllSvtDataList; // 0x440
	private Dictionary<int, int> slotSvtCnt; // 0x448
	protected SceneJumpInfo jumpInfo; // 0x450
	private EventDetailEntity eventDetailEnt; // 0x458
	private int currentEventId; // 0x460
	[CompilerGeneratedAttribute] // RVA: 0xC6EA74 Offset: 0xC6EA74 VA: 0xC6EA74
	[DebuggerBrowsableAttribute] // RVA: 0xC6EA74 Offset: 0xC6EA74 VA: 0xC6EA74
	private int <currentEventSvtId>k__BackingField; // 0x464
	private int currentEventSvtLimitCnt; // 0x468
	private int currentEventSvtFace; // 0x46C
	private int currentEventShopSvtId; // 0x470
	private int currentEventShopSvtLimitCnt; // 0x474
	private List<int> eventServantIdList; // 0x478
	private List<int> eventServantLimitCntList; // 0x480
	private List<int> eventServantFaceIdList; // 0x488
	private List<string> eventServantDisplayNameList; // 0x490
	private bool isEventReward; // 0x498
	private bool isEventGacha; // 0x499
	private bool isMission; // 0x49A
	private bool isRaid; // 0x49B
	private bool isEventShop; // 0x49C
	private EventRewardSceneEntity[] eventRewardSceneEntArray; // 0x4A0
	private List<EventRewardSceneEntity> specificEventRewardSceneEntityList; // 0x4A8
	private bool existNotOpenTab; // 0x4B0
	private bool isLoadOpenEffect; // 0x4B1
	private List<EventRewardSceneReleaseEntity> eventRewardSceneReleaseList; // 0x4B8
	private EventServantRecoveryFatigueManager eventServantRecoveryFatigueManager; // 0x4C0
	private BoxGachaEntity[] eventBoxGachaEntList; // 0x4C8
	private BoxGachaEntity currentBoxGachaEnt; // 0x4D0
	private UserBoxGachaEntity usrBoxGachaEnt; // 0x4D8
	private int currentBoxGachaId; // 0x4E0
	private int drawGachaTime; // 0x4E4
	private int currentBoxGachaBaseId; // 0x4E8
	private int[] resultIdList; // 0x4F0
	private int resultBoxGachaId; // 0x4F8
	private int[] resultNumbers; // 0x500
	private int[] resNoList; // 0x508
	private int[] messageIdList; // 0x510
	private int[] resultRareIdxs; // 0x518
	private int beforeBoxGachaId; // 0x520
	private int[] beforeResultNumbers; // 0x528
	private bool isLimitReset; // 0x530
	private bool isLimitBox; // 0x531
	private int currentResetNum; // 0x534
	private List<MultiSvtInfoComponent> multiSvtInfoList; // 0x538
	private MultiSvtInfoComponent currentSvtInfoComp; // 0x540
	private int currentEventSlotIndex; // 0x548
	private int currentMoveIdx; // 0x54C
	private Vector3 center; // 0x550
	private int beforeMoveIdx; // 0x55C
	private List<int> eventBgIdList; // 0x560
	private int downLoadCnt; // 0x568
	private int bgDownloadCnt; // 0x56C
	private Transform loopCtrlChildrenTrans; // 0x570
	private static string REWARDIMG_ATLAS_PATH; // 0x100
	private static AssetData rewardImgData; // 0x108
	private string lastAssetName; // 0x578
	private bool isVoicePlaying; // 0x580
	private bool isBulkBuy; // 0x581
	protected EventRewardRootComponent.State state; // 0x584
	protected int selectItemNum; // 0x588
	protected int selectEventNum; // 0x58C
	protected long[] selectServantIdList; // 0x590
	public static QuestRewardInfo mQuestRewardInfos; // 0x110
	private ServantRewardAction servantRewardAction; // 0x598
	private int buyCount; // 0x5A0
	private bool isServantGet; // 0x5A4
	private int eventCount; // 0x5A8
	private int eventShopCount; // 0x5AC
	private string shopRequestOkMessage; // 0x5B0
	private bool isOpenEffect; // 0x5B8
	private bool waitOpenEffect; // 0x5B9
	private int openSlot; // 0x5BC
	private int closedTabImage; // 0x5C0
	private long eventEndTime; // 0x5C8
	private EventRewardRootComponent.StateType stateType; // 0x5D0
	private List<EventRewardRootComponent.StateType> eventPriority; // 0x5D8
	private bool isDischargeCostume; // 0x5E0
	private int costumeObjectId; // 0x5E4
	private bool isDispArrow; // 0x5E8
	private int selectRecoveryIndex; // 0x5EC
	private string[] assetNameList; // 0x5F0
	private bool isDraged; // 0x5F8
	private List<EventVoicePlayEntity> targetEventVoicePlayEntityList; // 0x600
	private ShopEntity afterLotteryShopEntity; // 0x608
	private bool isAfterLotteryShopAlreadyPossession; // 0x610
	private static bool isDestroy; // 0x118
	private bool isRequestLoadMissionFilterData; // 0x611
	private string commitAfterScriptPurchaseToken; // 0x618
	private int svtLoadCount; // 0x620
	private int svtLoadCompleteCount; // 0x624
	private Vector3 initInfopanelPos; // 0x628
	[CompilerGeneratedAttribute] // RVA: 0xC6EAB0 Offset: 0xC6EAB0 VA: 0xC6EAB0
	[DebuggerBrowsableAttribute] // RVA: 0xC6EAB0 Offset: 0xC6EAB0 VA: 0xC6EAB0
	private static bool <IsAnotherPayFlag>k__BackingField; // 0x119
	[CompilerGeneratedAttribute] // RVA: 0xC6EAEC Offset: 0xC6EAEC VA: 0xC6EAEC
	[DebuggerBrowsableAttribute] // RVA: 0xC6EAEC Offset: 0xC6EAEC VA: 0xC6EAEC
	private static bool <IsCommitAfterScriptSoldOut>k__BackingField; // 0x11A
	private List<EventRewardRootComponent.resLotteryShopData> bulkLotteryShopList; // 0x638
	private List<EventRewardRootComponent.resLotteryShopData> bulkLotteryScriptsPlayList; // 0x640
	[CompilerGeneratedAttribute] // RVA: 0xC6EB28 Offset: 0xC6EB28 VA: 0xC6EB28
	private static Comparison<EventRewardSceneEntity> <>f__am$cache0; // 0x120
	[CompilerGeneratedAttribute] // RVA: 0xC6EB38 Offset: 0xC6EB38 VA: 0xC6EB38
	private static Comparison<EventVoicePlayEntity> <>f__am$cache1; // 0x128
	[CompilerGeneratedAttribute] // RVA: 0xC6EB48 Offset: 0xC6EB48 VA: 0xC6EB48
	private static Action <>f__am$cache2; // 0x130
	[CompilerGeneratedAttribute] // RVA: 0xC6EB58 Offset: 0xC6EB58 VA: 0xC6EB58
	private static Predicate<BoxGachaTalkEntity> <>f__am$cache3; // 0x138
	[CompilerGeneratedAttribute] // RVA: 0xC6EB68 Offset: 0xC6EB68 VA: 0xC6EB68
	private static Predicate<BoxGachaTalkEntity> <>f__am$cache4; // 0x140
	[CompilerGeneratedAttribute] // RVA: 0xC6EB78 Offset: 0xC6EB78 VA: 0xC6EB78
	private static Predicate<ShopActionEntity> <>f__am$cache5; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xC6EB88 Offset: 0xC6EB88 VA: 0xC6EB88
	private static Predicate<EventRewardRootComponent.resLotteryShopData> <>f__am$cache6; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xC6EB98 Offset: 0xC6EB98 VA: 0xC6EB98
	private static ScrollMessageDialog.ClickDelegate <>f__am$cache7; // 0x158
	[CompilerGeneratedAttribute] // RVA: 0xC6EBA8 Offset: 0xC6EBA8 VA: 0xC6EBA8
	private static Func<EventRewardRootComponent.resLotteryShopData, bool> <>f__am$cache8; // 0x160
	[CompilerGeneratedAttribute] // RVA: 0xC6EBB8 Offset: 0xC6EBB8 VA: 0xC6EBB8
	private static Func<EventRewardRootComponent.resLotteryShopData, bool> <>f__am$cache9; // 0x168
	[CompilerGeneratedAttribute] // RVA: 0xC6EBC8 Offset: 0xC6EBC8 VA: 0xC6EBC8
	private static Func<EventRewardRootComponent.resLotteryShopData, string> <>f__am$cacheA; // 0x170
	[CompilerGeneratedAttribute] // RVA: 0xC6EBD8 Offset: 0xC6EBD8 VA: 0xC6EBD8
	private static Action <>f__am$cacheB; // 0x178

	// Properties
	public int currentEventSvtId { get; set; }
	public string settedAssetname { get; }
	public static bool IsAnotherPayFlag { get; set; }
	public static bool IsCommitAfterScriptSoldOut { get; set; }
	public EventVoicePlayEntity NowEventVoicePlayEntity { get; }
	public EventMissionItemListViewManager missionItemListViewManager { get; }

	// Methods

	// RVA: 0x10D71E0 Offset: 0x10D71E0 VA: 0x10D71E0
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0100 Offset: 0xCD0100 VA: 0xCD0100
	// RVA: 0x10D72F0 Offset: 0x10D72F0 VA: 0x10D72F0
	public int get_currentEventSvtId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0110 Offset: 0xCD0110 VA: 0xCD0110
	// RVA: 0x10D72F8 Offset: 0x10D72F8 VA: 0x10D72F8
	private void set_currentEventSvtId(int value) { }

	// RVA: 0x10D7300 Offset: 0x10D7300 VA: 0x10D7300
	public string get_settedAssetname() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0120 Offset: 0xCD0120 VA: 0xCD0120
	// RVA: 0x10D7308 Offset: 0x10D7308 VA: 0x10D7308
	public static bool get_IsAnotherPayFlag() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0130 Offset: 0xCD0130 VA: 0xCD0130
	// RVA: 0x10D7370 Offset: 0x10D7370 VA: 0x10D7370
	private static void set_IsAnotherPayFlag(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0140 Offset: 0xCD0140 VA: 0xCD0140
	// RVA: 0x10D73E0 Offset: 0x10D73E0 VA: 0x10D73E0
	public static bool get_IsCommitAfterScriptSoldOut() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0150 Offset: 0xCD0150 VA: 0xCD0150
	// RVA: 0x10D7448 Offset: 0x10D7448 VA: 0x10D7448
	private static void set_IsCommitAfterScriptSoldOut(bool value) { }

	// RVA: 0x10D74B8 Offset: 0x10D74B8 VA: 0x10D74B8
	public void OnDestroy() { }

	// RVA: 0x10D76EC Offset: 0x10D76EC VA: 0x10D76EC
	public static void setRewardInfoImg(UISprite sprite, string imgName) { }

	// RVA: 0x10D7914 Offset: 0x10D7914 VA: 0x10D7914
	public static void SetRewardRaritySprite(UISprite sprite, Gift.Type giftType, int objectId, int rarityId) { }

	// RVA: 0x10D7CF4 Offset: 0x10D7CF4 VA: 0x10D7CF4
	public EventVoicePlayEntity get_NowEventVoicePlayEntity() { }

	// RVA: 0x10D7F78 Offset: 0x10D7F78 VA: 0x10D7F78
	public void Start() { }

	// RVA: 0x10D7F80 Offset: 0x10D7F80 VA: 0x10D7F80 Slot: 4
	public override void beginInitialize() { }

	// RVA: 0x10D8508 Offset: 0x10D8508 VA: 0x10D8508 Slot: 6
	public override void beginStartUp() { }

	// RVA: 0x10D8510 Offset: 0x10D8510 VA: 0x10D8510 Slot: 5
	public override void beginStartUp(object data) { }

	// RVA: 0x10D8734 Offset: 0x10D8734 VA: 0x10D8734
	private void beginStartUpNext(string result) { }

	// RVA: 0x10D885C Offset: 0x10D885C VA: 0x10D885C
	private void SetLoadRewardImgData() { }

	// RVA: 0x10D8CB4 Offset: 0x10D8CB4 VA: 0x10D8CB4
	private void removeHideTab(EventRewardSceneEntity[] rewardSceneEnt) { }

	// RVA: 0x10D89C8 Offset: 0x10D89C8 VA: 0x10D89C8
	private void EndLoadRewardImg(AssetData data) { }

	// RVA: 0x10D8F18 Offset: 0x10D8F18 VA: 0x10D8F18
	private void checkEventExist() { }

	// RVA: 0x10DAAD8 Offset: 0x10DAAD8 VA: 0x10DAAD8
	private void SetEventSceneInfo(EventRewardSceneEntity targetEntity, int eventNum) { }

	// RVA: 0x10DC328 Offset: 0x10DC328 VA: 0x10DC328
	private bool GetIsAndCondGroup(EventRewardGuideReleaseEntity[] entities) { }

	// RVA: 0x10DC034 Offset: 0x10DC034 VA: 0x10DC034
	private Dictionary<string, List<EventRewardGuideReleaseEntity>> GetEventRewardGuideReleases(int eventId, int slot) { }

	// RVA: 0x10DBFAC Offset: 0x10DBFAC VA: 0x10DBFAC
	private int CheckLastViewSlot() { }

	// RVA: 0x10DC55C Offset: 0x10DC55C VA: 0x10DC55C
	private void SetEventLogo() { }

	// RVA: 0x10D98B0 Offset: 0x10D98B0 VA: 0x10D98B0
	private void setBgm() { }

	// RVA: 0x10DC6FC Offset: 0x10DC6FC VA: 0x10DC6FC
	private string getBgmName(int id) { }

	// RVA: 0x10D9974 Offset: 0x10D9974 VA: 0x10D9974
	private void setGuideSvtVoice() { }

	// RVA: 0x10DCF00 Offset: 0x10DCF00 VA: 0x10DCF00
	private bool IsPlayInitBgm() { }

	// RVA: 0x10DC7C8 Offset: 0x10DC7C8 VA: 0x10DC7C8
	private void GetSlotAllVoiceData(ServantVoiceMaster svtVoiceMst, EventVoicePlayMaster eventVoiceMst, EventRewardSceneEntity eventEnt) { }

	// RVA: 0x10DCF44 Offset: 0x10DCF44 VA: 0x10DCF44
	private void EndBgLoad() { }

	// RVA: 0x10DD504 Offset: 0x10DD504 VA: 0x10DD504
	private void SetReleaseEffectData(int eventCount) { }

	// RVA: 0x10DD038 Offset: 0x10DD038 VA: 0x10DD038
	private void SetReleaseButtonState(int eventCount) { }

	// RVA: 0x10DCE14 Offset: 0x10DCE14 VA: 0x10DCE14
	private string getBgImgName(int eventBgImgId) { }

	// RVA: 0x10DD15C Offset: 0x10DD15C VA: 0x10DD15C
	private void EndSetBackImg() { }

	// RVA: 0x10DD708 Offset: 0x10DD708 VA: 0x10DD708
	private void EndLoadVoiceData() { }

	// RVA: 0x10DD658 Offset: 0x10DD658 VA: 0x10DD658
	private void EndLoadAllEventVoiceDataList() { }

	// RVA: 0x10DD724 Offset: 0x10DD724 VA: 0x10DD724
	public void init() { }

	// RVA: 0x10DDC74 Offset: 0x10DDC74 VA: 0x10DDC74
	private void BeforeLoadInitServant() { }

	// RVA: 0x10DDE20 Offset: 0x10DDE20 VA: 0x10DDE20
	private void LoadInitServant() { }

	// RVA: 0x10DEA74 Offset: 0x10DEA74 VA: 0x10DEA74
	private void AfterInitialize() { }

	// RVA: 0x10DD61C Offset: 0x10DD61C VA: 0x10DD61C
	private EventRewardButtonChangeManager GetEventRewardButtonChangeManager(int eventCount) { }

	// RVA: 0x10DF390 Offset: 0x10DF390 VA: 0x10DF390
	private void SetEventRewardInfo(int eventId, EventDetailEntity eventDetailEntity, float logoSizeX, Action callback) { }

	// RVA: 0x10DEBDC Offset: 0x10DEBDC VA: 0x10DEBDC
	private bool CheckTabReleaseEffect() { }

	// RVA: 0x10DF448 Offset: 0x10DF448 VA: 0x10DF448
	public void AnimationEndCallback() { }

	// RVA: 0x10DF4AC Offset: 0x10DF4AC VA: 0x10DF4AC
	public void ChangeUICallback() { }

	// RVA: 0x10DF55C Offset: 0x10DF55C VA: 0x10DF55C
	public void EndTutorialRequestCallback() { }

	// RVA: 0x10DF59C Offset: 0x10DF59C VA: 0x10DF59C
	private void VoiceBtnTween() { }

	// RVA: 0x10DF7E8 Offset: 0x10DF7E8 VA: 0x10DF7E8
	private void playSvtVoice() { }

	// RVA: 0x10DFC30 Offset: 0x10DFC30 VA: 0x10DFC30
	private void playWelocmeSvtVoice() { }

	// RVA: 0x10DFEB8 Offset: 0x10DFEB8 VA: 0x10DFEB8
	private void PlayShopPurchaseVoice() { }

	// RVA: 0x10DFF60 Offset: 0x10DFF60 VA: 0x10DFF60
	public void playEventMissionSvtVoice(string[] voiceIDs, Action Callback) { }

	// RVA: 0x10E0050 Offset: 0x10E0050 VA: 0x10E0050
	public void playEventMissionSvtVoice(string[] voiceIDs, Action voiceEnd, Action nextAction) { }

	// RVA: 0x10DEC68 Offset: 0x10DEC68 VA: 0x10DEC68
	private void SetCurrentSvtVoice() { }

	// RVA: 0x10E0154 Offset: 0x10E0154 VA: 0x10E0154
	public EventMissionItemListViewManager get_missionItemListViewManager() { }

	// RVA: 0x10DF9B8 Offset: 0x10DF9B8 VA: 0x10DF9B8
	public void setNormalFace() { }

	// RVA: 0x10E019C Offset: 0x10E019C VA: 0x10E019C
	private Face.Type GetNormalFaceId() { }

	// RVA: 0x10E0258 Offset: 0x10E0258 VA: 0x10E0258
	private void AdjustmentShiftInfo() { }

	// RVA: 0x10E05E4 Offset: 0x10E05E4 VA: 0x10E05E4
	public void stopSvtVoice() { }

	// RVA: 0x10E0620 Offset: 0x10E0620 VA: 0x10E0620
	public void playBGM() { }

	// RVA: 0x10E068C Offset: 0x10E068C VA: 0x10E068C Slot: 10
	public override void beginResume() { }

	// RVA: 0x10E0694 Offset: 0x10E0694 VA: 0x10E0694 Slot: 7
	public override void beginFinish() { }

	// RVA: 0x10D7548 Offset: 0x10D7548 VA: 0x10D7548
	private void ReleaseSvtVoiceData() { }

	// RVA: 0x10E0A70 Offset: 0x10E0A70 VA: 0x10E0A70
	private void destroySvtFigure() { }

	// RVA: 0x10E0698 Offset: 0x10E0698 VA: 0x10E0698
	public void quit() { }

	// RVA: 0x10DDBA4 Offset: 0x10DDBA4 VA: 0x10DDBA4
	private void setDispBtnInfo() { }

	// RVA: 0x10DD9F8 Offset: 0x10DD9F8 VA: 0x10DD9F8
	private void SetActiveEventRewardButtonChangeManager(int eventCount, bool isDisp = True) { }

	// RVA: 0x10E1228 Offset: 0x10E1228 VA: 0x10E1228
	private void TabInitialize(int eventCount, int currentEventId) { }

	// RVA: 0x10E1580 Offset: 0x10E1580 VA: 0x10E1580
	private void setEventDisp(EventRewardRootComponent.StateType type) { }

	// RVA: 0x10E1E34 Offset: 0x10E1E34 VA: 0x10E1E34
	private void SetAllInfoObjDisable() { }

	// RVA: 0x10DF53C Offset: 0x10DF53C VA: 0x10DF53C
	private void setTabInfo(EventRewardRootComponent.StateType type) { }

	// RVA: 0x10E40EC Offset: 0x10E40EC VA: 0x10E40EC
	private void ChangeTabInfo(int currentEventSlotIndex, int currentEventId, EventRewardSceneEntity[] eventRewardSceneEnt, int openSlot, bool isOpenEffect) { }

	// RVA: 0x10DDEB4 Offset: 0x10DDEB4 VA: 0x10DDEB4
	private int SetSvtFigure(Action onCreatedSvtFigure) { }

	// RVA: 0x10E41A0 Offset: 0x10E41A0 VA: 0x10E41A0
	private void SetupSlider() { }

	// RVA: 0x10E4560 Offset: 0x10E4560 VA: 0x10E4560
	private void setCenter() { }

	// RVA: 0x10DD94C Offset: 0x10DD94C VA: 0x10DD94C
	private void SvtPanelInit() { }

	// RVA: 0x10E4758 Offset: 0x10E4758 VA: 0x10E4758
	private void FadeInSvtPanel() { }

	// RVA: 0x10E48D0 Offset: 0x10E48D0 VA: 0x10E48D0
	private void FinishedSvtSlideIn() { }

	// RVA: 0x10E49B8 Offset: 0x10E49B8 VA: 0x10E49B8
	private void SetReleaseEffect(int currentEventId, int eventCount, int openSlot, Action ChangeUICallback, Action AnimationEndCallback) { }

	// RVA: 0x10E4A68 Offset: 0x10E4A68 VA: 0x10E4A68
	private void SetSliderIcon(int idx) { }

	// RVA: 0x10E12A0 Offset: 0x10E12A0 VA: 0x10E12A0
	private void InitBackground(int slot) { }

	// RVA: 0x10E4BA4 Offset: 0x10E4BA4 VA: 0x10E4BA4
	private void ChangeBackground(int before, int after) { }

	// RVA: 0x10E4F9C Offset: 0x10E4F9C VA: 0x10E4F9C
	private void CheckTabTypeImage() { }

	// RVA: 0x10E13E8 Offset: 0x10E13E8 VA: 0x10E13E8
	private void ChangeBgm() { }

	// RVA: 0x10E5434 Offset: 0x10E5434 VA: 0x10E5434
	private bool CheckEventSameSvtId() { }

	// RVA: 0x10E5598 Offset: 0x10E5598 VA: 0x10E5598
	private void OnDragStarted() { }

	// RVA: 0x10E5BE8 Offset: 0x10E5BE8 VA: 0x10E5BE8
	private void OnCenterOnChildFinished() { }

	// RVA: 0x10E6CEC Offset: 0x10E6CEC VA: 0x10E6CEC
	private void ChangeTabAfter(int beforeEventType, int afterEventType) { }

	// RVA: 0x10E6E18 Offset: 0x10E6E18 VA: 0x10E6E18
	public void SetOnFinishedCurrentEvent() { }

	// RVA: 0x10E6EB4 Offset: 0x10E6EB4 VA: 0x10E6EB4
	public void SetPlaySvtVoice() { }

	// RVA: 0x10E6F2C Offset: 0x10E6F2C VA: 0x10E6F2C
	public void onClickRightArrow() { }

	// RVA: 0x10E7060 Offset: 0x10E7060 VA: 0x10E7060
	public void onClickLeftArrow() { }

	// RVA: 0x10E5628 Offset: 0x10E5628 VA: 0x10E5628
	private void SetCtrSlideOn(bool isDisp) { }

	// RVA: 0x10E7198 Offset: 0x10E7198 VA: 0x10E7198
	private void SetButtonCollider(int eventCount, bool isDisp, int currentEventSlotIndex) { }

	// RVA: 0x10E5E98 Offset: 0x10E5E98 VA: 0x10E5E98
	public void OnMoveSvt(bool isDisp) { }

	// RVA: 0x10E587C Offset: 0x10E587C VA: 0x10E587C
	private void SetSvtCollider(bool isDisp) { }

	// RVA: 0x10E4490 Offset: 0x10E4490 VA: 0x10E4490
	public void SetDispRePosition(int idx) { }

	// RVA: 0x10E7218 Offset: 0x10E7218 VA: 0x10E7218
	private void SetMultiSvtBannerEnable(bool isBoxGacha) { }

	// RVA: 0x10E73BC Offset: 0x10E73BC VA: 0x10E73BC
	public void OnClickSlot1() { }

	// RVA: 0x10E7484 Offset: 0x10E7484 VA: 0x10E7484
	public void OnClickSlot2() { }

	// RVA: 0x10E75E0 Offset: 0x10E75E0 VA: 0x10E75E0
	public void OnClickSlot3() { }

	// RVA: 0x10E7700 Offset: 0x10E7700 VA: 0x10E7700
	public void OnClickSlot4() { }

	// RVA: 0x10D7DD4 Offset: 0x10D7DD4 VA: 0x10D7DD4
	private int GetRealSlotId() { }

	// RVA: 0x10E5338 Offset: 0x10E5338 VA: 0x10E5338
	private int GetRealIndex() { }

	// RVA: 0x10E77C8 Offset: 0x10E77C8 VA: 0x10E77C8
	public void OnClickSvt() { }

	// RVA: 0x10E7830 Offset: 0x10E7830 VA: 0x10E7830
	private void setTutorialInfo() { }

	// RVA: 0x10E7A70 Offset: 0x10E7A70 VA: 0x10E7A70
	private bool IsBlockTutorialInfo() { }

	// RVA: 0x10E7AA8 Offset: 0x10E7AA8 VA: 0x10E7AA8
	public void OnClickHelp() { }

	// RVA: 0x10E7C28 Offset: 0x10E7C28 VA: 0x10E7C28
	public void OnClickHelpClose() { }

	// RVA: 0x10E7C5C Offset: 0x10E7C5C VA: 0x10E7C5C
	public void OnClickPresentBox() { }

	// RVA: 0x10E22F8 Offset: 0x10E22F8 VA: 0x10E22F8
	private void setEventBoxGachaList() { }

	// RVA: 0x10E7DD8 Offset: 0x10E7DD8 VA: 0x10E7DD8
	public void setCurrentBoxGachaInfo() { }

	// RVA: 0x10E88DC Offset: 0x10E88DC VA: 0x10E88DC
	private void SetBoxGachaInfoImg() { }

	// RVA: 0x10E8408 Offset: 0x10E8408 VA: 0x10E8408
	private void setGachaBase(int baseId, bool isReset) { }

	// RVA: 0x10E8F7C Offset: 0x10E8F7C VA: 0x10E8F7C
	private void setGachaExeInfo() { }

	// RVA: 0x10E95A0 Offset: 0x10E95A0 VA: 0x10E95A0
	public void SetGachaResouces() { }

	// RVA: 0x10E9AD4 Offset: 0x10E9AD4 VA: 0x10E9AD4
	public void exeBoxGacha(int gachaTime) { }

	// RVA: 0x10E9B4C Offset: 0x10E9B4C VA: 0x10E9B4C
	public void checkPresentNum() { }

	// RVA: 0x10E9CC0 Offset: 0x10E9CC0 VA: 0x10E9CC0
	public void showNoticeMsg() { }

	// RVA: 0x10E9E30 Offset: 0x10E9E30 VA: 0x10E9E30
	private void callBackNoticeDlg(bool isOpenPresentBox) { }

	// RVA: 0x10E7CD4 Offset: 0x10E7CD4 VA: 0x10E7CD4
	public void OpenPresentBox() { }

	// RVA: 0x10E9F10 Offset: 0x10E9F10 VA: 0x10E9F10
	private void ClosePresentBox(bool flag) { }

	// RVA: 0x10EA0FC Offset: 0x10EA0FC VA: 0x10EA0FC
	public void OnClickDetail() { }

	// RVA: 0x10EA2A8 Offset: 0x10EA2A8 VA: 0x10EA2A8
	public void requestBoxGachaDraw() { }

	// RVA: 0x10EA3BC Offset: 0x10EA3BC VA: 0x10EA3BC
	private void callbackBoxGachaDraw(string result) { }

	// RVA: 0x10EA73C Offset: 0x10EA73C VA: 0x10EA73C
	public void showBoxGachaResult() { }

	// RVA: 0x10EA81C Offset: 0x10EA81C VA: 0x10EA81C
	public void setBoxGachaResultList() { }

	// RVA: 0x10EAF64 Offset: 0x10EAF64 VA: 0x10EAF64
	private void setTotalBoxGachaCount(bool isReset = False) { }

	// RVA: 0x10EABEC Offset: 0x10EABEC VA: 0x10EABEC
	public void setResultList(bool isShortCut = False) { }

	// RVA: 0x10EB25C Offset: 0x10EB25C VA: 0x10EB25C
	private BoxGachaTalkEntity GetBoxGachaTalk(int talkId, int[] rareIndex, int svtId) { }

	// RVA: 0x10EA858 Offset: 0x10EA858 VA: 0x10EA858
	private void CheckDischargeCostume() { }

	// RVA: 0x10EA9E0 Offset: 0x10EA9E0 VA: 0x10EA9E0
	private void setDisp(bool isDisp) { }

	// RVA: 0x10EB568 Offset: 0x10EB568 VA: 0x10EB568
	public void CheckCostumeReleaseEffect() { }

	// RVA: 0x10EB688 Offset: 0x10EB688 VA: 0x10EB688
