	[TooltipAttribute] // RVA: 0xD0E3F8 Offset: 0xD0E3F8 VA: 0xD0E3F8
	public iTween.LoopType loopType; // 0xB8
	public Space space; // 0xBC

	// Methods

	// RVA: 0x2498E88 Offset: 0x2498E88 VA: 0x2498E88
	public void .ctor() { }

	// RVA: 0x2498E8C Offset: 0x2498E8C VA: 0x2498E8C Slot: 28
	public override void Reset() { }

	// RVA: 0x2498F74 Offset: 0x2498F74 VA: 0x2498F74 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2499A4C Offset: 0x2499A4C VA: 0x2499A4C Slot: 37
	public override void OnExit() { }

	// RVA: 0x2498FB0 Offset: 0x2498FB0 VA: 0x2498FB0
	private void DoiTween() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA1F08 Offset: 0xCA1F08 VA: 0xCA1F08
[TooltipAttribute] // RVA: 0xCA1F08 Offset: 0xCA1F08 VA: 0xCA1F08
public class iTweenShakeScale : iTweenFsmAction // TypeDefIndex: 12621
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0E430 Offset: 0xD0E430 VA: 0xD0E430
	public FsmOwnerDefault gameObject; // 0x90
	[TooltipAttribute] // RVA: 0xD0E440 Offset: 0xD0E440 VA: 0xD0E440
	public FsmString id; // 0x98
	[RequiredFieldAttribute] // RVA: 0xD0E478 Offset: 0xD0E478 VA: 0xD0E478
	[TooltipAttribute] // RVA: 0xD0E478 Offset: 0xD0E478 VA: 0xD0E478
	public FsmVector3 vector; // 0xA0
	[TooltipAttribute] // RVA: 0xD0E4C4 Offset: 0xD0E4C4 VA: 0xD0E4C4
	public FsmFloat time; // 0xA8
	[TooltipAttribute] // RVA: 0xD0E4FC Offset: 0xD0E4FC VA: 0xD0E4FC
	public FsmFloat delay; // 0xB0
	[TooltipAttribute] // RVA: 0xD0E534 Offset: 0xD0E534 VA: 0xD0E534
	public iTween.LoopType loopType; // 0xB8

	// Methods

	// RVA: 0x2499A54 Offset: 0x2499A54 VA: 0x2499A54
	public void .ctor() { }

	// RVA: 0x2499A58 Offset: 0x2499A58 VA: 0x2499A58 Slot: 28
	public override void Reset() { }

	// RVA: 0x2499B3C Offset: 0x2499B3C VA: 0x2499B3C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x249A558 Offset: 0x249A558 VA: 0x249A558 Slot: 37
	public override void OnExit() { }

	// RVA: 0x2499B78 Offset: 0x2499B78 VA: 0x2499B78
	private void DoiTween() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA1F68 Offset: 0xCA1F68 VA: 0xCA1F68
[TooltipAttribute] // RVA: 0xCA1F68 Offset: 0xCA1F68 VA: 0xCA1F68
public class iTweenStop : FsmStateAction // TypeDefIndex: 12622
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0E56C Offset: 0xD0E56C VA: 0xD0E56C
	public FsmOwnerDefault gameObject; // 0x50
	public FsmString id; // 0x58
	public iTweenFSMType iTweenType; // 0x60
	public bool includeChildren; // 0x64
	public bool inScene; // 0x65

	// Methods

	// RVA: 0x249A560 Offset: 0x249A560 VA: 0x249A560
	public void .ctor() { }

	// RVA: 0x249A568 Offset: 0x249A568 VA: 0x249A568 Slot: 28
	public override void Reset() { }

	// RVA: 0x249A5EC Offset: 0x249A5EC VA: 0x249A5EC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x249A620 Offset: 0x249A620 VA: 0x249A620
	private void DoiTween() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA1FC8 Offset: 0xCA1FC8 VA: 0xCA1FC8
[NoteAttribute] // RVA: 0xCA1FC8 Offset: 0xCA1FC8 VA: 0xCA1FC8
[TooltipAttribute] // RVA: 0xCA1FC8 Offset: 0xCA1FC8 VA: 0xCA1FC8
public class KillDelayedEvents : FsmStateAction // TypeDefIndex: 12623
{
	// Methods

	// RVA: 0x20EEE44 Offset: 0x20EEE44 VA: 0x20EEE44
	public void .ctor() { }

	// RVA: 0x20EEE4C Offset: 0x20EEE4C VA: 0x20EEE4C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA203C Offset: 0xCA203C VA: 0xCA203C
[TooltipAttribute] // RVA: 0xCA203C Offset: 0xCA203C VA: 0xCA203C
public class LoadLevel : FsmStateAction // TypeDefIndex: 12624
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0E57C Offset: 0xD0E57C VA: 0xD0E57C
	[TooltipAttribute] // RVA: 0xD0E57C Offset: 0xD0E57C VA: 0xD0E57C
	public FsmString levelName; // 0x50
	[TooltipAttribute] // RVA: 0xD0E5C8 Offset: 0xD0E5C8 VA: 0xD0E5C8
	public bool additive; // 0x58
	[TooltipAttribute] // RVA: 0xD0E600 Offset: 0xD0E600 VA: 0xD0E600
	public bool async; // 0x59
	[TooltipAttribute] // RVA: 0xD0E638 Offset: 0xD0E638 VA: 0xD0E638
	public FsmEvent loadedEvent; // 0x60
	[TooltipAttribute] // RVA: 0xD0E670 Offset: 0xD0E670 VA: 0xD0E670
	public FsmBool dontDestroyOnLoad; // 0x68
	[TooltipAttribute] // RVA: 0xD0E6A8 Offset: 0xD0E6A8 VA: 0xD0E6A8
	public FsmEvent failedEvent; // 0x70
	private AsyncOperation asyncOperation; // 0x78

	// Methods

	// RVA: 0x20EF7C4 Offset: 0x20EF7C4 VA: 0x20EF7C4
	public void .ctor() { }

	// RVA: 0x20EF7CC Offset: 0x20EF7CC VA: 0x20EF7CC Slot: 28
	public override void Reset() { }

	// RVA: 0x20EF85C Offset: 0x20EF85C VA: 0x20EF85C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20EFA40 Offset: 0x20EFA40 VA: 0x20EFA40 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA208C Offset: 0xCA208C VA: 0xCA208C
[TooltipAttribute] // RVA: 0xCA208C Offset: 0xCA208C VA: 0xCA208C
public class LoadLevelNum : FsmStateAction // TypeDefIndex: 12625
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0E6E0 Offset: 0xD0E6E0 VA: 0xD0E6E0
	[TooltipAttribute] // RVA: 0xD0E6E0 Offset: 0xD0E6E0 VA: 0xD0E6E0
	public FsmInt levelIndex; // 0x50
	[TooltipAttribute] // RVA: 0xD0E72C Offset: 0xD0E72C VA: 0xD0E72C
	public bool additive; // 0x58
	[TooltipAttribute] // RVA: 0xD0E764 Offset: 0xD0E764 VA: 0xD0E764
	public FsmEvent loadedEvent; // 0x60
	[TooltipAttribute] // RVA: 0xD0E79C Offset: 0xD0E79C VA: 0xD0E79C
	public FsmBool dontDestroyOnLoad; // 0x68
	[TooltipAttribute] // RVA: 0xD0E7D4 Offset: 0xD0E7D4 VA: 0xD0E7D4
	public FsmEvent failedEvent; // 0x70

	// Methods

	// RVA: 0x20EFAC8 Offset: 0x20EFAC8 VA: 0x20EFAC8
	public void .ctor() { }

	// RVA: 0x20EFAD0 Offset: 0x20EFAD0 VA: 0x20EFAD0 Slot: 28
	public override void Reset() { }

	// RVA: 0x20EFB08 Offset: 0x20EFB08 VA: 0x20EFB08 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA20DC Offset: 0xCA20DC VA: 0xCA20DC
[TooltipAttribute] // RVA: 0xCA20DC Offset: 0xCA20DC VA: 0xCA20DC
public class ColorCompare : FsmStateAction // TypeDefIndex: 12626
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0E80C Offset: 0xD0E80C VA: 0xD0E80C
	[TooltipAttribute] // RVA: 0xD0E80C Offset: 0xD0E80C VA: 0xD0E80C
	public FsmColor color1; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD0E858 Offset: 0xD0E858 VA: 0xD0E858
	[TooltipAttribute] // RVA: 0xD0E858 Offset: 0xD0E858 VA: 0xD0E858
	public FsmColor color2; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD0E8A4 Offset: 0xD0E8A4 VA: 0xD0E8A4
	[TooltipAttribute] // RVA: 0xD0E8A4 Offset: 0xD0E8A4 VA: 0xD0E8A4
	public FsmFloat tolerance; // 0x60
	[TooltipAttribute] // RVA: 0xD0E8F0 Offset: 0xD0E8F0 VA: 0xD0E8F0
	public FsmEvent equal; // 0x68
	[TooltipAttribute] // RVA: 0xD0E928 Offset: 0xD0E928 VA: 0xD0E928
	public FsmEvent notEqual; // 0x70
	[TooltipAttribute] // RVA: 0xD0E960 Offset: 0xD0E960 VA: 0xD0E960
	public bool everyFrame; // 0x78

	// Methods

	// RVA: 0x23244D8 Offset: 0x23244D8 VA: 0x23244D8
	public void .ctor() { }

	// RVA: 0x23244E0 Offset: 0x23244E0 VA: 0x23244E0 Slot: 28
	public override void Reset() { }

	// RVA: 0x232453C Offset: 0x232453C VA: 0x232453C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x232481C Offset: 0x232481C VA: 0x232481C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2324578 Offset: 0x2324578 VA: 0x2324578
	private void DoCompare() { }

	// RVA: 0x2324820 Offset: 0x2324820 VA: 0x2324820 Slot: 61
	public override string ErrorCheck() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA212C Offset: 0xCA212C VA: 0xCA212C
[TooltipAttribute] // RVA: 0xCA212C Offset: 0xCA212C VA: 0xCA212C
public class EnumCompare : FsmStateAction // TypeDefIndex: 12627
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0E998 Offset: 0xD0E998 VA: 0xD0E998
	[UIHintAttribute] // RVA: 0xD0E998 Offset: 0xD0E998 VA: 0xD0E998
	public FsmEnum enumVariable; // 0x50
	[MatchFieldTypeAttribute] // RVA: 0xD0E9D4 Offset: 0xD0E9D4 VA: 0xD0E9D4
	public FsmEnum compareTo; // 0x58
	public FsmEvent equalEvent; // 0x60
	public FsmEvent notEqualEvent; // 0x68
	[UIHintAttribute] // RVA: 0xD0EA0C Offset: 0xD0EA0C VA: 0xD0EA0C
	[TooltipAttribute] // RVA: 0xD0EA0C Offset: 0xD0EA0C VA: 0xD0EA0C
	public FsmBool storeResult; // 0x70
	[TooltipAttribute] // RVA: 0xD0EA5C Offset: 0xD0EA5C VA: 0xD0EA5C
	public bool everyFrame; // 0x78

	// Methods

	// RVA: 0x186A3B4 Offset: 0x186A3B4 VA: 0x186A3B4
	public void .ctor() { }

	// RVA: 0x186A3BC Offset: 0x186A3BC VA: 0x186A3BC Slot: 28
	public override void Reset() { }

	// RVA: 0x186A3D0 Offset: 0x186A3D0 VA: 0x186A3D0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x186A4F4 Offset: 0x186A4F4 VA: 0x186A4F4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x186A40C Offset: 0x186A40C VA: 0x186A40C
	private void DoEnumCompare() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA217C Offset: 0xCA217C VA: 0xCA217C
[TooltipAttribute] // RVA: 0xCA217C Offset: 0xCA217C VA: 0xCA217C
public class EnumSwitch : FsmStateAction // TypeDefIndex: 12628
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0EA94 Offset: 0xD0EA94 VA: 0xD0EA94
	[UIHintAttribute] // RVA: 0xD0EA94 Offset: 0xD0EA94 VA: 0xD0EA94
	public FsmEnum enumVariable; // 0x50
	[CompoundArrayAttribute] // RVA: 0xD0EAD0 Offset: 0xD0EAD0 VA: 0xD0EAD0
	[MatchFieldTypeAttribute] // RVA: 0xD0EAD0 Offset: 0xD0EAD0 VA: 0xD0EAD0
	public FsmEnum[] compareTo; // 0x58
	public FsmEvent[] sendEvent; // 0x60
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x186A4F8 Offset: 0x186A4F8 VA: 0x186A4F8
	public void .ctor() { }

	// RVA: 0x186A500 Offset: 0x186A500 VA: 0x186A500 Slot: 28
	public override void Reset() { }

	// RVA: 0x186A578 Offset: 0x186A578 VA: 0x186A578 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x186A71C Offset: 0x186A71C VA: 0x186A71C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x186A5B4 Offset: 0x186A5B4 VA: 0x186A5B4
	private void DoEnumSwitch() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA21CC Offset: 0xCA21CC VA: 0xCA21CC
[TooltipAttribute] // RVA: 0xCA21CC Offset: 0xCA21CC VA: 0xCA21CC
public class LookAt : FsmStateAction // TypeDefIndex: 12629
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0EB60 Offset: 0xD0EB60 VA: 0xD0EB60
	[TooltipAttribute] // RVA: 0xD0EB60 Offset: 0xD0EB60 VA: 0xD0EB60
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xD0EBAC Offset: 0xD0EBAC VA: 0xD0EBAC
	public FsmGameObject targetObject; // 0x58
	[TooltipAttribute] // RVA: 0xD0EBE4 Offset: 0xD0EBE4 VA: 0xD0EBE4
	public FsmVector3 targetPosition; // 0x60
	[TooltipAttribute] // RVA: 0xD0EC1C Offset: 0xD0EC1C VA: 0xD0EC1C
	public FsmVector3 upVector; // 0x68
	[TooltipAttribute] // RVA: 0xD0EC54 Offset: 0xD0EC54 VA: 0xD0EC54
	public FsmBool keepVertical; // 0x70
	[TitleAttribute] // RVA: 0xD0EC8C Offset: 0xD0EC8C VA: 0xD0EC8C
	[TooltipAttribute] // RVA: 0xD0EC8C Offset: 0xD0EC8C VA: 0xD0EC8C
	public FsmBool debug; // 0x78
	[TooltipAttribute] // RVA: 0xD0ECEC Offset: 0xD0ECEC VA: 0xD0ECEC
	public FsmColor debugLineColor; // 0x80
	[TooltipAttribute] // RVA: 0xD0ED24 Offset: 0xD0ED24 VA: 0xD0ED24
	public bool everyFrame; // 0x88
	private GameObject go; // 0x90
	private GameObject goTarget; // 0x98
	private Vector3 lookAtPos; // 0xA0
	private Vector3 lookAtPosWithVertical; // 0xAC

	// Methods

	// RVA: 0x20F0784 Offset: 0x20F0784 VA: 0x20F0784
	public void .ctor() { }

	// RVA: 0x20F0794 Offset: 0x20F0794 VA: 0x20F0794 Slot: 28
	public override void Reset() { }

	// RVA: 0x20F088C Offset: 0x20F088C VA: 0x20F088C Slot: 29
	public override void OnPreprocess() { }

	// RVA: 0x20F08C4 Offset: 0x20F08C4 VA: 0x20F08C4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20F0A6C Offset: 0x20F0A6C VA: 0x20F0A6C Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x20F0900 Offset: 0x20F0900 VA: 0x20F0900
	private void DoLookAt() { }

	// RVA: 0x20F0A70 Offset: 0x20F0A70 VA: 0x20F0A70
	public bool UpdateLookAtPosition() { }

	// RVA: 0x20F0D14 Offset: 0x20F0D14 VA: 0x20F0D14
	public Vector3 GetLookAtPosition() { }

	// RVA: 0x20F0D20 Offset: 0x20F0D20 VA: 0x20F0D20
	public Vector3 GetLookAtPositionWithVertical() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA221C Offset: 0xCA221C VA: 0xCA221C
[TooltipAttribute] // RVA: 0xCA221C Offset: 0xCA221C VA: 0xCA221C
public class LookAtAbs316 : FsmStateAction // TypeDefIndex: 12630
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0ED5C Offset: 0xD0ED5C VA: 0xD0ED5C
	[TooltipAttribute] // RVA: 0xD0ED5C Offset: 0xD0ED5C VA: 0xD0ED5C
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xD0EDA8 Offset: 0xD0EDA8 VA: 0xD0EDA8
	public FsmGameObject EnemyObject; // 0x58
	public FsmGameObject targetObject; // 0x60
	[TooltipAttribute] // RVA: 0xD0EDE0 Offset: 0xD0EDE0 VA: 0xD0EDE0
	public FsmVector3 targetPosition; // 0x68
	[TooltipAttribute] // RVA: 0xD0EE18 Offset: 0xD0EE18 VA: 0xD0EE18
	public FsmBool enemySide; // 0x70
	[TooltipAttribute] // RVA: 0xD0EE50 Offset: 0xD0EE50 VA: 0xD0EE50
	public FsmVector3 upVector; // 0x78
	[TooltipAttribute] // RVA: 0xD0EE88 Offset: 0xD0EE88 VA: 0xD0EE88
	public FsmBool keepVertical; // 0x80
	[TitleAttribute] // RVA: 0xD0EEC0 Offset: 0xD0EEC0 VA: 0xD0EEC0
	[TooltipAttribute] // RVA: 0xD0EEC0 Offset: 0xD0EEC0 VA: 0xD0EEC0
	public FsmBool debug; // 0x88
	[TooltipAttribute] // RVA: 0xD0EF20 Offset: 0xD0EF20 VA: 0xD0EF20
	public FsmColor debugLineColor; // 0x90
	[TooltipAttribute] // RVA: 0xD0EF58 Offset: 0xD0EF58 VA: 0xD0EF58
	public bool everyFrame; // 0x98
	private GameObject go; // 0xA0
	private Vector3 lookAtPos; // 0xA8
	private Vector3 EnemyPos; // 0xB4
	private Vector3[] abspotision; // 0xC0
	private Vector3[] abspotisionEnenmy; // 0xC8
	private int abspCount; // 0xD0
	private int ActorUniID; // 0xD4
	private int EnemyUniID; // 0xD8
	private Vector3 lookAtPosWithVertical; // 0xDC

	// Methods

	// RVA: 0x20F1510 Offset: 0x20F1510 VA: 0x20F1510
	public void .ctor() { }

	// RVA: 0x20F39BC Offset: 0x20F39BC VA: 0x20F39BC Slot: 28
	public override void Reset() { }

	// RVA: 0x20F3AA4 Offset: 0x20F3AA4 VA: 0x20F3AA4 Slot: 29
	public override void OnPreprocess() { }

	// RVA: 0x20F3ADC Offset: 0x20F3ADC VA: 0x20F3ADC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20F3E78 Offset: 0x20F3E78 VA: 0x20F3E78 Slot: 36
	public override void OnLateUpdate() { }

	// RVA: 0x20F3D28 Offset: 0x20F3D28 VA: 0x20F3D28
	private void DoLookAt() { }

	// RVA: 0x20F3E7C Offset: 0x20F3E7C VA: 0x20F3E7C
	public bool UpdateLookAtPosition() { }

	// RVA: 0x20F40A8 Offset: 0x20F40A8 VA: 0x20F40A8
	public Vector3 GetLookAtPosition() { }

	// RVA: 0x20F40B4 Offset: 0x20F40B4 VA: 0x20F40B4
	public Vector3 GetLookAtPositionWithVertical() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA226C Offset: 0xCA226C VA: 0xCA226C
[TooltipAttribute] // RVA: 0xCA226C Offset: 0xCA226C VA: 0xCA226C
public class MouseLook : FsmStateAction // TypeDefIndex: 12631
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0EF90 Offset: 0xD0EF90 VA: 0xD0EF90
	[TooltipAttribute] // RVA: 0xD0EF90 Offset: 0xD0EF90 VA: 0xD0EF90
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xD0EFDC Offset: 0xD0EFDC VA: 0xD0EFDC
	public MouseLook.RotationAxes axes; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD0F014 Offset: 0xD0F014 VA: 0xD0F014
	[TooltipAttribute] // RVA: 0xD0F014 Offset: 0xD0F014 VA: 0xD0F014
	public FsmFloat sensitivityX; // 0x60
	[RequiredFieldAttribute] // RVA: 0xD0F060 Offset: 0xD0F060 VA: 0xD0F060
	[TooltipAttribute] // RVA: 0xD0F060 Offset: 0xD0F060 VA: 0xD0F060
	public FsmFloat sensitivityY; // 0x68
	[HasFloatSliderAttribute] // RVA: 0xD0F0AC Offset: 0xD0F0AC VA: 0xD0F0AC
	[TooltipAttribute] // RVA: 0xD0F0AC Offset: 0xD0F0AC VA: 0xD0F0AC
	public FsmFloat minimumX; // 0x70
	[HasFloatSliderAttribute] // RVA: 0xD0F108 Offset: 0xD0F108 VA: 0xD0F108
	[TooltipAttribute] // RVA: 0xD0F108 Offset: 0xD0F108 VA: 0xD0F108
	public FsmFloat maximumX; // 0x78
	[HasFloatSliderAttribute] // RVA: 0xD0F164 Offset: 0xD0F164 VA: 0xD0F164
	[TooltipAttribute] // RVA: 0xD0F164 Offset: 0xD0F164 VA: 0xD0F164
	public FsmFloat minimumY; // 0x80
	[HasFloatSliderAttribute] // RVA: 0xD0F1C0 Offset: 0xD0F1C0 VA: 0xD0F1C0
	[TooltipAttribute] // RVA: 0xD0F1C0 Offset: 0xD0F1C0 VA: 0xD0F1C0
	public FsmFloat maximumY; // 0x88
	[TooltipAttribute] // RVA: 0xD0F21C Offset: 0xD0F21C VA: 0xD0F21C
	public bool everyFrame; // 0x90
	private float rotationX; // 0x94
	private float rotationY; // 0x98

	// Methods

	// RVA: 0x20F4810 Offset: 0x20F4810 VA: 0x20F4810
	public void .ctor() { }

	// RVA: 0x20F4818 Offset: 0x20F4818 VA: 0x20F4818 Slot: 28
	public override void Reset() { }

	// RVA: 0x20F4934 Offset: 0x20F4934 VA: 0x20F4934 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20F4CB0 Offset: 0x20F4CB0 VA: 0x20F4CB0 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x20F4B10 Offset: 0x20F4B10 VA: 0x20F4B10
	private void DoMouseLook() { }

	// RVA: 0x20F4D4C Offset: 0x20F4D4C VA: 0x20F4D4C
	private float GetXRotation() { }

	// RVA: 0x20F4CB4 Offset: 0x20F4CB4 VA: 0x20F4CB4
	private float GetYRotation() { }

	// RVA: 0x20F4DE4 Offset: 0x20F4DE4 VA: 0x20F4DE4
	private static float ClampAngle(float angle, FsmFloat min, FsmFloat max) { }
}

// Namespace: 
public enum MouseLook.RotationAxes // TypeDefIndex: 12632
{
	// Fields
	public int value__; // 0x0
	public const MouseLook.RotationAxes MouseXAndY = 0;
	public const MouseLook.RotationAxes MouseX = 1;
	public const MouseLook.RotationAxes MouseY = 2;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA22BC Offset: 0xCA22BC VA: 0xCA22BC
[TooltipAttribute] // RVA: 0xCA22BC Offset: 0xCA22BC VA: 0xCA22BC
public class MouseLook2 : ComponentAction<Rigidbody> // TypeDefIndex: 12633
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0F254 Offset: 0xD0F254 VA: 0xD0F254
	[TooltipAttribute] // RVA: 0xD0F254 Offset: 0xD0F254 VA: 0xD0F254
	public FsmOwnerDefault gameObject; // 0x60
	[TooltipAttribute] // RVA: 0xD0F2A0 Offset: 0xD0F2A0 VA: 0xD0F2A0
	public MouseLook2.RotationAxes axes; // 0x68
	[RequiredFieldAttribute] // RVA: 0xD0F2D8 Offset: 0xD0F2D8 VA: 0xD0F2D8
	public FsmFloat sensitivityX; // 0x70
	[RequiredFieldAttribute] // RVA: 0xD0F2E8 Offset: 0xD0F2E8 VA: 0xD0F2E8
	public FsmFloat sensitivityY; // 0x78
	[RequiredFieldAttribute] // RVA: 0xD0F2F8 Offset: 0xD0F2F8 VA: 0xD0F2F8
	[HasFloatSliderAttribute] // RVA: 0xD0F2F8 Offset: 0xD0F2F8 VA: 0xD0F2F8
	public FsmFloat minimumX; // 0x80
	[RequiredFieldAttribute] // RVA: 0xD0F340 Offset: 0xD0F340 VA: 0xD0F340
	[HasFloatSliderAttribute] // RVA: 0xD0F340 Offset: 0xD0F340 VA: 0xD0F340
	public FsmFloat maximumX; // 0x88
	[RequiredFieldAttribute] // RVA: 0xD0F388 Offset: 0xD0F388 VA: 0xD0F388
	[HasFloatSliderAttribute] // RVA: 0xD0F388 Offset: 0xD0F388 VA: 0xD0F388
	public FsmFloat minimumY; // 0x90
	[RequiredFieldAttribute] // RVA: 0xD0F3D0 Offset: 0xD0F3D0 VA: 0xD0F3D0
	[HasFloatSliderAttribute] // RVA: 0xD0F3D0 Offset: 0xD0F3D0 VA: 0xD0F3D0
	public FsmFloat maximumY; // 0x98
	[TooltipAttribute] // RVA: 0xD0F418 Offset: 0xD0F418 VA: 0xD0F418
	public bool everyFrame; // 0xA0
	private float rotationX; // 0xA4
	private float rotationY; // 0xA8

	// Methods

	// RVA: 0x20F4EC8 Offset: 0x20F4EC8 VA: 0x20F4EC8
	public void .ctor() { }

	// RVA: 0x20F4F18 Offset: 0x20F4F18 VA: 0x20F4F18 Slot: 28
	public override void Reset() { }

	// RVA: 0x20F4FC0 Offset: 0x20F4FC0 VA: 0x20F4FC0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20F52C0 Offset: 0x20F52C0 VA: 0x20F52C0 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x20F5120 Offset: 0x20F5120 VA: 0x20F5120
	private void DoMouseLook() { }

	// RVA: 0x20F535C Offset: 0x20F535C VA: 0x20F535C
	private float GetXRotation() { }

	// RVA: 0x20F52C4 Offset: 0x20F52C4 VA: 0x20F52C4
	private float GetYRotation() { }

	// RVA: 0x20F53F4 Offset: 0x20F53F4 VA: 0x20F53F4
	private static float ClampAngle(float angle, FsmFloat min, FsmFloat max) { }
}

// Namespace: 
public enum MouseLook2.RotationAxes // TypeDefIndex: 12634
{
	// Fields
	public int value__; // 0x0
	public const MouseLook2.RotationAxes MouseXAndY = 0;
	public const MouseLook2.RotationAxes MouseX = 1;
	public const MouseLook2.RotationAxes MouseY = 2;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA230C Offset: 0xCA230C VA: 0xCA230C
[TooltipAttribute] // RVA: 0xCA230C Offset: 0xCA230C VA: 0xCA230C
public class MousePick : FsmStateAction // TypeDefIndex: 12635
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0F450 Offset: 0xD0F450 VA: 0xD0F450
	[TooltipAttribute] // RVA: 0xD0F450 Offset: 0xD0F450 VA: 0xD0F450
	public FsmFloat rayDistance; // 0x50
	[UIHintAttribute] // RVA: 0xD0F49C Offset: 0xD0F49C VA: 0xD0F49C
	[TooltipAttribute] // RVA: 0xD0F49C Offset: 0xD0F49C VA: 0xD0F49C
	public FsmBool storeDidPickObject; // 0x58
	[UIHintAttribute] // RVA: 0xD0F4EC Offset: 0xD0F4EC VA: 0xD0F4EC
	[TooltipAttribute] // RVA: 0xD0F4EC Offset: 0xD0F4EC VA: 0xD0F4EC
	public FsmGameObject storeGameObject; // 0x60
	[UIHintAttribute] // RVA: 0xD0F53C Offset: 0xD0F53C VA: 0xD0F53C
	[TooltipAttribute] // RVA: 0xD0F53C Offset: 0xD0F53C VA: 0xD0F53C
	public FsmVector3 storePoint; // 0x68
	[UIHintAttribute] // RVA: 0xD0F58C Offset: 0xD0F58C VA: 0xD0F58C
	[TooltipAttribute] // RVA: 0xD0F58C Offset: 0xD0F58C VA: 0xD0F58C
	public FsmVector3 storeNormal; // 0x70
	[UIHintAttribute] // RVA: 0xD0F5DC Offset: 0xD0F5DC VA: 0xD0F5DC
	[TooltipAttribute] // RVA: 0xD0F5DC Offset: 0xD0F5DC VA: 0xD0F5DC
	public FsmFloat storeDistance; // 0x78
	[UIHintAttribute] // RVA: 0xD0F62C Offset: 0xD0F62C VA: 0xD0F62C
	[TooltipAttribute] // RVA: 0xD0F62C Offset: 0xD0F62C VA: 0xD0F62C
	public FsmInt[] layerMask; // 0x80
	[TooltipAttribute] // RVA: 0xD0F67C Offset: 0xD0F67C VA: 0xD0F67C
	public FsmBool invertMask; // 0x88
	[TooltipAttribute] // RVA: 0xD0F6B4 Offset: 0xD0F6B4 VA: 0xD0F6B4
	public bool everyFrame; // 0x90

	// Methods

	// RVA: 0x20F54D8 Offset: 0x20F54D8 VA: 0x20F54D8
	public void .ctor() { }

	// RVA: 0x20F5510 Offset: 0x20F5510 VA: 0x20F5510 Slot: 28
	public override void Reset() { }

	// RVA: 0x20F55A0 Offset: 0x20F55A0 VA: 0x20F55A0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20F58C8 Offset: 0x20F58C8 VA: 0x20F58C8 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x20F55DC Offset: 0x20F55DC VA: 0x20F55DC
	private void DoMousePick() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA235C Offset: 0xCA235C VA: 0xCA235C
[ActionTarget] // RVA: 0xCA235C Offset: 0xCA235C VA: 0xCA235C
[TooltipAttribute] // RVA: 0xCA235C Offset: 0xCA235C VA: 0xCA235C
public class MousePickEvent : FsmStateAction // TypeDefIndex: 12636
{
	// Fields
	[CheckForComponentAttribute] // RVA: 0xD0F6EC Offset: 0xD0F6EC VA: 0xD0F6EC
	public FsmOwnerDefault GameObject; // 0x50
	[TooltipAttribute] // RVA: 0xD0F750 Offset: 0xD0F750 VA: 0xD0F750
	public FsmFloat rayDistance; // 0x58
	[TooltipAttribute] // RVA: 0xD0F788 Offset: 0xD0F788 VA: 0xD0F788
	public FsmEvent mouseOver; // 0x60
	[TooltipAttribute] // RVA: 0xD0F7C0 Offset: 0xD0F7C0 VA: 0xD0F7C0
	public FsmEvent mouseDown; // 0x68
	[TooltipAttribute] // RVA: 0xD0F7F8 Offset: 0xD0F7F8 VA: 0xD0F7F8
	public FsmEvent mouseUp; // 0x70
	[TooltipAttribute] // RVA: 0xD0F830 Offset: 0xD0F830 VA: 0xD0F830
	public FsmEvent mouseOff; // 0x78
	[TooltipAttribute] // RVA: 0xD0F868 Offset: 0xD0F868 VA: 0xD0F868
	[UIHintAttribute] // RVA: 0xD0F868 Offset: 0xD0F868 VA: 0xD0F868
	public FsmInt[] layerMask; // 0x80
	[TooltipAttribute] // RVA: 0xD0F8B8 Offset: 0xD0F8B8 VA: 0xD0F8B8
	public FsmBool invertMask; // 0x88
	[TooltipAttribute] // RVA: 0xD0F8F0 Offset: 0xD0F8F0 VA: 0xD0F8F0
	public bool everyFrame; // 0x90

	// Methods

	// RVA: 0x20F60DC Offset: 0x20F60DC VA: 0x20F60DC
	public void .ctor() { }

	// RVA: 0x20F6114 Offset: 0x20F6114 VA: 0x20F6114 Slot: 28
	public override void Reset() { }

	// RVA: 0x20F61A4 Offset: 0x20F61A4 VA: 0x20F61A4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20F6378 Offset: 0x20F6378 VA: 0x20F6378 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x20F61E0 Offset: 0x20F61E0 VA: 0x20F61E0
	private void DoMousePickEvent() { }

	// RVA: 0x20F637C Offset: 0x20F637C VA: 0x20F637C
	private bool DoRaycast() { }

	// RVA: 0x20F646C Offset: 0x20F646C VA: 0x20F646C Slot: 61
	public override string ErrorCheck() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA2418 Offset: 0xCA2418 VA: 0xCA2418
[TooltipAttribute] // RVA: 0xCA2418 Offset: 0xCA2418 VA: 0xCA2418
public class MoveTowards : FsmStateAction // TypeDefIndex: 12637
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0F928 Offset: 0xD0F928 VA: 0xD0F928
	[TooltipAttribute] // RVA: 0xD0F928 Offset: 0xD0F928 VA: 0xD0F928
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xD0F974 Offset: 0xD0F974 VA: 0xD0F974
	public FsmGameObject targetObject; // 0x58
	[TooltipAttribute] // RVA: 0xD0F9AC Offset: 0xD0F9AC VA: 0xD0F9AC
	public FsmVector3 targetPosition; // 0x60
	[TooltipAttribute] // RVA: 0xD0F9E4 Offset: 0xD0F9E4 VA: 0xD0F9E4
	public FsmBool ignoreVertical; // 0x68
	[HasFloatSliderAttribute] // RVA: 0xD0FA1C Offset: 0xD0FA1C VA: 0xD0FA1C
	[TooltipAttribute] // RVA: 0xD0FA1C Offset: 0xD0FA1C VA: 0xD0FA1C
	public FsmFloat maxSpeed; // 0x70
	[HasFloatSliderAttribute] // RVA: 0xD0FA70 Offset: 0xD0FA70 VA: 0xD0FA70
	[TooltipAttribute] // RVA: 0xD0FA70 Offset: 0xD0FA70 VA: 0xD0FA70
	public FsmFloat finishDistance; // 0x78
	[TooltipAttribute] // RVA: 0xD0FAC4 Offset: 0xD0FAC4 VA: 0xD0FAC4
	public FsmEvent finishEvent; // 0x80
	private GameObject go; // 0x88
	private GameObject goTarget; // 0x90
	private Vector3 targetPos; // 0x98
	private Vector3 targetPosWithVertical; // 0xA4

	// Methods

	// RVA: 0x20F7058 Offset: 0x20F7058 VA: 0x20F7058
	public void .ctor() { }

	// RVA: 0x20F7060 Offset: 0x20F7060 VA: 0x20F7060 Slot: 28
	public override void Reset() { }

	// RVA: 0x20F70A0 Offset: 0x20F70A0 VA: 0x20F70A0 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x20F70A4 Offset: 0x20F70A4 VA: 0x20F70A4
	private void DoMoveTowards() { }

	// RVA: 0x20F72E8 Offset: 0x20F72E8 VA: 0x20F72E8
	public bool UpdateTargetPos() { }

	// RVA: 0x20F757C Offset: 0x20F757C VA: 0x20F757C
	public Vector3 GetTargetPos() { }

	// RVA: 0x20F7588 Offset: 0x20F7588 VA: 0x20F7588
	public Vector3 GetTargetPosWithVertical() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA2468 Offset: 0xCA2468 VA: 0xCA2468
[TooltipAttribute] // RVA: 0xCA2468 Offset: 0xCA2468 VA: 0xCA2468
public class NextFrameEvent : FsmStateAction // TypeDefIndex: 12638
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0FAFC Offset: 0xD0FAFC VA: 0xD0FAFC
	public FsmEvent sendEvent; // 0x50

	// Methods

	// RVA: 0x20F7898 Offset: 0x20F7898 VA: 0x20F7898
	public void .ctor() { }

	// RVA: 0x20F78A0 Offset: 0x20F78A0 VA: 0x20F78A0 Slot: 28
	public override void Reset() { }

	// RVA: 0x20F78A8 Offset: 0x20F78A8 VA: 0x20F78A8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20F78AC Offset: 0x20F78AC VA: 0x20F78AC Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA24B8 Offset: 0xCA24B8 VA: 0xCA24B8
[TooltipAttribute] // RVA: 0xCA24B8 Offset: 0xCA24B8 VA: 0xCA24B8
public class ObjectCompare : FsmStateAction // TypeDefIndex: 12639
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0FB0C Offset: 0xD0FB0C VA: 0xD0FB0C
	[UIHintAttribute] // RVA: 0xD0FB0C Offset: 0xD0FB0C VA: 0xD0FB0C
	[ReadonlyAttribute] // RVA: 0xD0FB0C Offset: 0xD0FB0C VA: 0xD0FB0C
	public FsmObject objectVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD0FB58 Offset: 0xD0FB58 VA: 0xD0FB58
	public FsmObject compareTo; // 0x58
	[TooltipAttribute] // RVA: 0xD0FB68 Offset: 0xD0FB68 VA: 0xD0FB68
	public FsmEvent equalEvent; // 0x60
	[TooltipAttribute] // RVA: 0xD0FBA0 Offset: 0xD0FBA0 VA: 0xD0FBA0
	public FsmEvent notEqualEvent; // 0x68
	[UIHintAttribute] // RVA: 0xD0FBD8 Offset: 0xD0FBD8 VA: 0xD0FBD8
	[TooltipAttribute] // RVA: 0xD0FBD8 Offset: 0xD0FBD8 VA: 0xD0FBD8
	public FsmBool storeResult; // 0x70
	[TooltipAttribute] // RVA: 0xD0FC28 Offset: 0xD0FC28 VA: 0xD0FC28
	public bool everyFrame; // 0x78

	// Methods

	// RVA: 0x21E0118 Offset: 0x21E0118 VA: 0x21E0118
	public void .ctor() { }

	// RVA: 0x21E0120 Offset: 0x21E0120 VA: 0x21E0120 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E0134 Offset: 0x21E0134 VA: 0x21E0134 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E0288 Offset: 0x21E0288 VA: 0x21E0288 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21E0170 Offset: 0x21E0170 VA: 0x21E0170
	private void DoObjectCompare() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA2508 Offset: 0xCA2508 VA: 0xCA2508
[TooltipAttribute] // RVA: 0xCA2508 Offset: 0xCA2508 VA: 0xCA2508
public class PerSecond : FsmStateAction // TypeDefIndex: 12640
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0FC60 Offset: 0xD0FC60 VA: 0xD0FC60
	public FsmFloat floatValue; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD0FC70 Offset: 0xD0FC70 VA: 0xD0FC70
	[UIHintAttribute] // RVA: 0xD0FC70 Offset: 0xD0FC70 VA: 0xD0FC70
	public FsmFloat storeResult; // 0x58
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x21E0308 Offset: 0x21E0308 VA: 0x21E0308
	public void .ctor() { }

	// RVA: 0x21E0310 Offset: 0x21E0310 VA: 0x21E0310 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E031C Offset: 0x21E031C VA: 0x21E031C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E03C4 Offset: 0x21E03C4 VA: 0x21E03C4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21E0358 Offset: 0x21E0358 VA: 0x21E0358
	private void DoPerSecond() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA2558 Offset: 0xCA2558 VA: 0xCA2558
[TooltipAttribute] // RVA: 0xCA2558 Offset: 0xCA2558 VA: 0xCA2558
public class GetJointBreakInfo : FsmStateAction // TypeDefIndex: 12641
{
	// Fields
	[UIHintAttribute] // RVA: 0xD0FCAC Offset: 0xD0FCAC VA: 0xD0FCAC
	[TooltipAttribute] // RVA: 0xD0FCAC Offset: 0xD0FCAC VA: 0xD0FCAC
	public FsmFloat breakForce; // 0x50

	// Methods

	// RVA: 0x20E138C Offset: 0x20E138C VA: 0x20E138C
	public void .ctor() { }

	// RVA: 0x20E1394 Offset: 0x20E1394 VA: 0x20E1394 Slot: 28
	public override void Reset() { }

	// RVA: 0x20E139C Offset: 0x20E139C VA: 0x20E139C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA25A8 Offset: 0xCA25A8 VA: 0xCA25A8
[TooltipAttribute] // RVA: 0xCA25A8 Offset: 0xCA25A8 VA: 0xCA25A8
public class GetParticleCollisionInfo : FsmStateAction // TypeDefIndex: 12642
{
	// Fields
	[UIHintAttribute] // RVA: 0xD0FCFC Offset: 0xD0FCFC VA: 0xD0FCFC
	[TooltipAttribute] // RVA: 0xD0FCFC Offset: 0xD0FCFC VA: 0xD0FCFC
	public FsmGameObject gameObjectHit; // 0x50

	// Methods

	// RVA: 0x20E5AD0 Offset: 0x20E5AD0 VA: 0x20E5AD0
	public void .ctor() { }

	// RVA: 0x20E5AD8 Offset: 0x20E5AD8 VA: 0x20E5AD8 Slot: 28
	public override void Reset() { }

	// RVA: 0x20E5AE0 Offset: 0x20E5AE0 VA: 0x20E5AE0
	private void StoreCollisionInfo() { }

	// RVA: 0x20E5B38 Offset: 0x20E5B38 VA: 0x20E5B38 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA25F8 Offset: 0xCA25F8 VA: 0xCA25F8
[TooltipAttribute] // RVA: 0xCA25F8 Offset: 0xCA25F8 VA: 0xCA25F8
public class GetRaycastAllInfo : FsmStateAction // TypeDefIndex: 12643
{
	// Fields
	[TooltipAttribute] // RVA: 0xD0FD4C Offset: 0xD0FD4C VA: 0xD0FD4C
	[UIHintAttribute] // RVA: 0xD0FD4C Offset: 0xD0FD4C VA: 0xD0FD4C
	[ArrayEditorAttribute] // RVA: 0xD0FD4C Offset: 0xD0FD4C VA: 0xD0FD4C
	public FsmArray storeHitObjects; // 0x50
	[TooltipAttribute] // RVA: 0xD0FDD0 Offset: 0xD0FDD0 VA: 0xD0FDD0
	[UIHintAttribute] // RVA: 0xD0FDD0 Offset: 0xD0FDD0 VA: 0xD0FDD0
	[ArrayEditorAttribute] // RVA: 0xD0FDD0 Offset: 0xD0FDD0 VA: 0xD0FDD0
	public FsmArray points; // 0x58
	[TooltipAttribute] // RVA: 0xD0FE54 Offset: 0xD0FE54 VA: 0xD0FE54
	[UIHintAttribute] // RVA: 0xD0FE54 Offset: 0xD0FE54 VA: 0xD0FE54
	[ArrayEditorAttribute] // RVA: 0xD0FE54 Offset: 0xD0FE54 VA: 0xD0FE54
	public FsmArray normals; // 0x60
	[TooltipAttribute] // RVA: 0xD0FED8 Offset: 0xD0FED8 VA: 0xD0FED8
	[UIHintAttribute] // RVA: 0xD0FED8 Offset: 0xD0FED8 VA: 0xD0FED8
	[ArrayEditorAttribute] // RVA: 0xD0FED8 Offset: 0xD0FED8 VA: 0xD0FED8
	public FsmArray distances; // 0x68
	[TooltipAttribute] // RVA: 0xD0FF5C Offset: 0xD0FF5C VA: 0xD0FF5C
	public bool everyFrame; // 0x70

	// Methods

	// RVA: 0x20E6CE0 Offset: 0x20E6CE0 VA: 0x20E6CE0
	public void .ctor() { }

	// RVA: 0x20E6CE8 Offset: 0x20E6CE8 VA: 0x20E6CE8 Slot: 28
	public override void Reset() { }

	// RVA: 0x20E6CF8 Offset: 0x20E6CF8 VA: 0x20E6CF8
	private void StoreRaycastAllInfo() { }

	// RVA: 0x20E7210 Offset: 0x20E7210 VA: 0x20E7210 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20E724C Offset: 0x20E724C VA: 0x20E724C Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA2648 Offset: 0xCA2648 VA: 0xCA2648
[TooltipAttribute] // RVA: 0xCA2648 Offset: 0xCA2648 VA: 0xCA2648
public class RaycastAll : FsmStateAction // TypeDefIndex: 12644
{
	// Fields
	public static RaycastHit[] RaycastAllHitInfo; // 0x0
	[TooltipAttribute] // RVA: 0xD0FF94 Offset: 0xD0FF94 VA: 0xD0FF94
	public FsmOwnerDefault fromGameObject; // 0x50
	[TooltipAttribute] // RVA: 0xD0FFCC Offset: 0xD0FFCC VA: 0xD0FFCC
	public FsmVector3 fromPosition; // 0x58
	[TooltipAttribute] // RVA: 0xD10004 Offset: 0xD10004 VA: 0xD10004
	public FsmVector3 direction; // 0x60
	[TooltipAttribute] // RVA: 0xD1003C Offset: 0xD1003C VA: 0xD1003C
	public Space space; // 0x68
	[TooltipAttribute] // RVA: 0xD10074 Offset: 0xD10074 VA: 0xD10074
	public FsmFloat distance; // 0x70
	[ActionSection] // RVA: 0xD100AC Offset: 0xD100AC VA: 0xD100AC
	[TooltipAttribute] // RVA: 0xD100AC Offset: 0xD100AC VA: 0xD100AC
	[UIHintAttribute] // RVA: 0xD100AC Offset: 0xD100AC VA: 0xD100AC
	public FsmEvent hitEvent; // 0x78
	[TooltipAttribute] // RVA: 0xD10120 Offset: 0xD10120 VA: 0xD10120
	[UIHintAttribute] // RVA: 0xD10120 Offset: 0xD10120 VA: 0xD10120
	public FsmBool storeDidHit; // 0x80
	[TooltipAttribute] // RVA: 0xD10170 Offset: 0xD10170 VA: 0xD10170
	[UIHintAttribute] // RVA: 0xD10170 Offset: 0xD10170 VA: 0xD10170
	[ArrayEditorAttribute] // RVA: 0xD10170 Offset: 0xD10170 VA: 0xD10170
	public FsmArray storeHitObjects; // 0x88
	[UIHintAttribute] // RVA: 0xD101F4 Offset: 0xD101F4 VA: 0xD101F4
	[TooltipAttribute] // RVA: 0xD101F4 Offset: 0xD101F4 VA: 0xD101F4
	public FsmVector3 storeHitPoint; // 0x90
	[UIHintAttribute] // RVA: 0xD10244 Offset: 0xD10244 VA: 0xD10244
	[TooltipAttribute] // RVA: 0xD10244 Offset: 0xD10244 VA: 0xD10244
	public FsmVector3 storeHitNormal; // 0x98
	[UIHintAttribute] // RVA: 0xD10294 Offset: 0xD10294 VA: 0xD10294
	[TooltipAttribute] // RVA: 0xD10294 Offset: 0xD10294 VA: 0xD10294
	public FsmFloat storeHitDistance; // 0xA0
	[ActionSection] // RVA: 0xD102E4 Offset: 0xD102E4 VA: 0xD102E4
	[TooltipAttribute] // RVA: 0xD102E4 Offset: 0xD102E4 VA: 0xD102E4
	public FsmInt repeatInterval; // 0xA8
	[UIHintAttribute] // RVA: 0xD10344 Offset: 0xD10344 VA: 0xD10344
	[TooltipAttribute] // RVA: 0xD10344 Offset: 0xD10344 VA: 0xD10344
	public FsmInt[] layerMask; // 0xB0
	[TooltipAttribute] // RVA: 0xD10394 Offset: 0xD10394 VA: 0xD10394
	public FsmBool invertMask; // 0xB8
	[ActionSection] // RVA: 0xD103CC Offset: 0xD103CC VA: 0xD103CC
	[TooltipAttribute] // RVA: 0xD103CC Offset: 0xD103CC VA: 0xD103CC
	public FsmColor debugColor; // 0xC0
	[TooltipAttribute] // RVA: 0xD1042C Offset: 0xD1042C VA: 0xD1042C
	public FsmBool debug; // 0xC8
	private int repeat; // 0xD0

	// Methods

	// RVA: 0x21E7918 Offset: 0x21E7918 VA: 0x21E7918
	public void .ctor() { }

	// RVA: 0x21E7920 Offset: 0x21E7920 VA: 0x21E7920 Slot: 28
	public override void Reset() { }

	// RVA: 0x21E7A64 Offset: 0x21E7A64 VA: 0x21E7A64 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x21E8188 Offset: 0x21E8188 VA: 0x21E8188 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21E7AB8 Offset: 0x21E7AB8 VA: 0x21E7AB8
	private void DoRaycast() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xCA2698 Offset: 0xCA2698 VA: 0xCA2698
[TooltipAttribute] // RVA: 0xCA2698 Offset: 0xCA2698 VA: 0xCA2698
public class AddForce2d : ComponentAction<Rigidbody2D> // TypeDefIndex: 12645
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD10464 Offset: 0xD10464 VA: 0xD10464
	[CheckForComponentAttribute] // RVA: 0xD10464 Offset: 0xD10464 VA: 0xD10464
	[TooltipAttribute] // RVA: 0xD10464 Offset: 0xD10464 VA: 0xD10464
	public FsmOwnerDefault gameObject; // 0x60
	[TooltipAttribute] // RVA: 0xD104FC Offset: 0xD104FC VA: 0xD104FC
	public ForceMode2D forceMode; // 0x68
	[UIHintAttribute] // RVA: 0xD10534 Offset: 0xD10534 VA: 0xD10534
	[TooltipAttribute] // RVA: 0xD10534 Offset: 0xD10534 VA: 0xD10534
	public FsmVector2 atPosition; // 0x70
	[UIHintAttribute] // RVA: 0xD10584 Offset: 0xD10584 VA: 0xD10584
	[TooltipAttribute] // RVA: 0xD10584 Offset: 0xD10584 VA: 0xD10584
	public FsmVector2 vector; // 0x78
	[TooltipAttribute] // RVA: 0xD105D4 Offset: 0xD105D4 VA: 0xD105D4
	public FsmFloat x; // 0x80
	[TooltipAttribute] // RVA: 0xD1060C Offset: 0xD1060C VA: 0xD1060C
	public FsmFloat y; // 0x88
	[TooltipAttribute] // RVA: 0xD10644 Offset: 0xD10644 VA: 0xD10644
	public FsmVector3 vector3; // 0x90
	[TooltipAttribute] // RVA: 0xD1067C Offset: 0xD1067C VA: 0xD1067C
	public bool everyFrame; // 0x98

	// Methods

	// RVA: 0x231255C Offset: 0x231255C VA: 0x231255C
	public void .ctor() { }

	// RVA: 0x23125AC Offset: 0x23125AC VA: 0x23125AC Slot: 28
	public override void Reset() { }

	// RVA: 0x23126E8 Offset: 0x23126E8 VA: 0x23126E8 Slot: 29
	public override void OnPreprocess() { }

	// RVA: 0x2312720 Offset: 0x2312720 VA: 0x2312720 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2312A38 Offset: 0x2312A38 VA: 0x2312A38 Slot: 33
	public override void OnFixedUpdate() { }

