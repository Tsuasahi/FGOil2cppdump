	// RVA: 0x199F868 Offset: 0x199F868 VA: 0x199F868
	public static bool ReadData() { }

	// RVA: 0x199F134 Offset: 0x199F134 VA: 0x199F134
	public static bool WriteData() { }

	// RVA: 0x19A04CC Offset: 0x19A04CC VA: 0x19A04CC
	public static void SetForceReadNewComments(bool flag) { }

	// RVA: 0x19A0240 Offset: 0x19A0240 VA: 0x19A0240
	private static bool IsForceReadNewComments() { }

	// RVA: 0x19A02BC Offset: 0x19A02BC VA: 0x19A02BC
	public static void ForceReadNewComments() { }

	// RVA: 0x19A16FC Offset: 0x19A16FC VA: 0x19A16FC
	public static List<ServantCommentEntity> GetOpenServantCommentEntityByServantFriendShip(int svt_id, int oldFriendShipRank, int limitCount) { }

	// RVA: 0x19A1FE0 Offset: 0x19A1FE0 VA: 0x19A1FE0
	public static bool IsOpenByServantFriendShip(int svt_id, int oldFriendShipRank = -1) { }

	// RVA: 0x19A2058 Offset: 0x19A2058 VA: 0x19A2058
	public static bool IsOpenByServantFriendShip(int svt_id, int oldFriendShipRank = -1, int limitCount = -1) { }

	// RVA: 0x19A2208 Offset: 0x19A2208 VA: 0x19A2208
	public static List<ServantCommentEntity> GetOpenServantCommentEntityByServantFriendShipAndImageLimit(int svtId, int imageLimit, int oldFriendShipRank = -1) { }

	// RVA: 0x19A2B78 Offset: 0x19A2B78 VA: 0x19A2B78
	public static bool IsOpenByServantFriendShipAndImageLimit(int svt_id, int imageLimit, int oldFriendShipRank = -1) { }

	// RVA: 0x19A073C Offset: 0x19A073C VA: 0x19A073C
	public static void checkUIChange(bool isSave) { }

	// RVA: 0x19A2C20 Offset: 0x19A2C20 VA: 0x19A2C20
	public static int GetUiFlag() { }

	// RVA: 0x19A2C90 Offset: 0x19A2C90 VA: 0x19A2C90
	public static AtlasManager.UIChangeType GetUiChangeType() { }

	// RVA: 0x19A2CEC Offset: 0x19A2CEC VA: 0x19A2CEC
	public static int GetOverwriteUiVersion() { }

	// RVA: 0x19A2D5C Offset: 0x19A2D5C VA: 0x19A2D5C
	private static void .cctor() { }
}

// Namespace: 
protected class ServantCommentManager.UserServantCommentOpenInfo // TypeDefIndex: 7618
{
	// Fields
	public int svtId; // 0x10
	public List<int> svtCommentIdList; // 0x18
	public List<int> svtCommentPriorityList; // 0x20

	// Methods

	// RVA: 0x19A0C48 Offset: 0x19A0C48 VA: 0x19A0C48
	public void .ctor() { }
}

// Namespace: 
protected class ServantCommentManager.ClearWarInfo // TypeDefIndex: 7619
{
	// Fields
	public int[] warIdList; // 0x10

	// Methods

	// RVA: 0x19A2E60 Offset: 0x19A2E60 VA: 0x19A2E60
	public void .ctor() { }

	// RVA: 0x19A06B0 Offset: 0x19A06B0 VA: 0x19A06B0
	public void .ctor(int[] warIdList) { }
}

// Namespace: 
public class ServantLeaderInfo // TypeDefIndex: 7620
{
	// Fields
	private static readonly int LIMIT_COUNT_THIRD_STAGE; // 0x0
	public int supportDeckId; // 0x10
	public long userId; // 0x18
	public int classId; // 0x20
	public long userSvtId; // 0x28
	public ObscuredInt svtId; // 0x30
	public int limitCount; // 0x40
	public int lv; // 0x44
	public int exp; // 0x48
	public int hp; // 0x4C
	public int atk; // 0x50
	public int adjustAtk; // 0x54
	public int adjustHp; // 0x58
	public int skillId1; // 0x5C
	public int skillId2; // 0x60
	public int skillId3; // 0x64
	public int skillLv1; // 0x68
	public int skillLv2; // 0x6C
	public int skillLv3; // 0x70
	public int[] classPassive; // 0x78
	public int treasureDeviceId; // 0x80
	public int treasureDeviceLv; // 0x84
	public int exceedCount; // 0x88
	public EquipTargetInfo equipTarget1; // 0x90
	public long updatedAt; // 0x98
	public int imageLimitCount; // 0xA0
	public int dispLimitCount; // 0xA4
	public int commandCardLimitCount; // 0xA8
	public int iconLimitCount; // 0xAC
	public int portraitLimitCount; // 0xB0
	public int[] randomLimitCountTargets; // 0xB8
	public int npcFlag; // 0xC0
	public CommandCodeStatus[] commandCode; // 0xC8
	public int[] commandCardParam; // 0xD0
	public AppendPassiveSkillInfo[] appendPassiveSkill; // 0xD8
	private Dictionary<int, int> limitChangeDic; // 0xE0
	private string overwriteServantName; // 0xE8

	// Properties
	public bool IsRandomChoice { get; }
	public bool IsEquip { get; }

	// Methods

	// RVA: 0x1C18BE8 Offset: 0x1C18BE8 VA: 0x1C18BE8
	public void .ctor() { }

	// RVA: 0x1C18BF8 Offset: 0x1C18BF8 VA: 0x1C18BF8
	public void .ctor(int svtId, int limitCnt = 0, int level = 1) { }

	// RVA: 0x1C190C4 Offset: 0x1C190C4 VA: 0x1C190C4
	public bool get_IsRandomChoice() { }

	// RVA: 0x1C1916C Offset: 0x1C1916C VA: 0x1C1916C
	private int GetLimitCountWithRandom(ServantLeaderInfo.RandomLimitCountKind kind) { }

	// RVA: 0x1C1929C Offset: 0x1C1929C VA: 0x1C1929C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1C192A8 Offset: 0x1C192A8 VA: 0x1C192A8
	public int getServantLevel() { }

	// RVA: 0x1C192B0 Offset: 0x1C192B0 VA: 0x1C192B0
	public int getLevelMax() { }

	// RVA: 0x1C1945C Offset: 0x1C1945C VA: 0x1C1945C
	public int getRarity() { }

	// RVA: 0x1C19554 Offset: 0x1C19554 VA: 0x1C19554
	public bool GetAdjustMax(out int maxAjustHp, out int maxAjustAtk, out int secondMaxAdjustHp, out int secondMaxAdjustAtk) { }

	// RVA: 0x1C19718 Offset: 0x1C19718 VA: 0x1C19718
	public int[] getSkillIdList() { }

	// RVA: 0x1C19814 Offset: 0x1C19814 VA: 0x1C19814
	public int[] getSkillLevelList() { }

	// RVA: 0x1C19910 Offset: 0x1C19910 VA: 0x1C19910
	public int[] getPassiveSkillIdList() { }

	// RVA: 0x1C19A08 Offset: 0x1C19A08 VA: 0x1C19A08
	public bool get_IsEquip() { }

	// RVA: 0x1C19A94 Offset: 0x1C19A94 VA: 0x1C19A94
	public void getSkillInfo(out SkillInfo[] skillInfoList) { }

	// RVA: 0x1C19F88 Offset: 0x1C19F88 VA: 0x1C19F88
	public void getEquipSkillInfo(out SkillInfo[] skillInfoList) { }

	// RVA: 0x1C1A084 Offset: 0x1C1A084 VA: 0x1C1A084
	public void getPassiveSkillInfo(out int[] idList, out string[] titleList, out string[] explanationList) { }

	// RVA: 0x1C1A410 Offset: 0x1C1A410 VA: 0x1C1A410
	public int getFriendPointUpVal() { }

	// RVA: 0x1C1A6B0 Offset: 0x1C1A6B0 VA: 0x1C1A6B0
	public FuncList.TYPE getFriendPointUpType() { }

	// RVA: 0x1C1A4C8 Offset: 0x1C1A4C8 VA: 0x1C1A4C8
	protected int getBaseFriendPointUpVal() { }

	// RVA: 0x1C1A788 Offset: 0x1C1A788 VA: 0x1C1A788
	public bool getEventUpVal(EventUpValSetupInfo setupInfo) { }

	// RVA: 0x1C1AD70 Offset: 0x1C1AD70 VA: 0x1C1AD70
	public bool getServantEventUpVal(EventUpValSetupInfo setupInfo) { }

	// RVA: 0x1C1AE18 Offset: 0x1C1AE18 VA: 0x1C1AE18
	public bool getEquipEventUpVal(EventUpValSetupInfo setupInfo) { }

	// RVA: 0x1C1A89C Offset: 0x1C1A89C VA: 0x1C1A89C
	protected bool getBaseEventUpVal(EventUpValSetupInfo setupInfo) { }

	// RVA: 0x1C1AF1C Offset: 0x1C1AF1C VA: 0x1C1AF1C
	public bool getEventUpVal(out EventUpValInfo eventUpVallInfo, EventUpValSetupInfo setupInfo) { }

	// RVA: 0x1C1B3C4 Offset: 0x1C1B3C4 VA: 0x1C1B3C4
	public bool getEventUpVal(out EventUpValInfo eventUpVallInfo, out bool isServantEventUpVal, out bool isEquipEventUpVal, EventUpValSetupInfo setupInfo) { }

	// RVA: 0x1C1B0BC Offset: 0x1C1B0BC VA: 0x1C1B0BC
	protected bool getBaseEventUpVal(ref EventUpValInfo eventUpVallInfo) { }

	// RVA: 0x1C1B598 Offset: 0x1C1B598 VA: 0x1C1B598
	public bool getQuestRestriction(QuestRestrictionInfo questRestrictionInfo) { }

	// RVA: 0x1C1B658 Offset: 0x1C1B658 VA: 0x1C1B658
	public bool getUniqueSvtRestriction(QuestRestrictionInfo questRestrictionInfo) { }

	// RVA: 0x1C1B6FC Offset: 0x1C1B6FC VA: 0x1C1B6FC
	public bool getUniqueSvtRestriction(QuestRestrictionInfo questRestrictionInfo, PartyListViewItem partyItem, int num) { }

	// RVA: 0x1C1B7C0 Offset: 0x1C1B7C0 VA: 0x1C1B7C0
	public bool getTreasureDeviceInfo(out TreasureDvcInfo tdInfo) { }

	// RVA: 0x1C1BA08 Offset: 0x1C1BA08 VA: 0x1C1BA08
	public bool getTreasureDeviceInfo(out int tdLv, out int tdMaxLv) { }

	// RVA: 0x1C1BAE4 Offset: 0x1C1BAE4 VA: 0x1C1BAE4
	public int getTreasureDeviceLevelIcon() { }

	// RVA: 0x1C1BBBC Offset: 0x1C1BBBC VA: 0x1C1BBBC
	public bool getExpInfo(out int exp, out int lateExp, out float barExp) { }

	// RVA: 0x1C1BE18 Offset: 0x1C1BE18 VA: 0x1C1BE18
	public bool getEquipExpInfo(out int exp, out int lateExp, out float barExp) { }

	// RVA: 0x1C1BF00 Offset: 0x1C1BF00 VA: 0x1C1BF00
	public int getFrameType() { }

	// RVA: 0x1C1C058 Offset: 0x1C1C058 VA: 0x1C1C058
	public bool IsHideSupport() { }

	// RVA: 0x1C1C064 Offset: 0x1C1C064 VA: 0x1C1C064
	public bool IsHideEquip() { }

	// RVA: 0x1C1C070 Offset: 0x1C1C070 VA: 0x1C1C070
	public bool IsNotUsedTreasureDeice() { }

	// RVA: 0x1C19160 Offset: 0x1C19160 VA: 0x1C19160
	public bool IsNpc() { }

	// RVA: 0x1C1C07C Offset: 0x1C1C07C VA: 0x1C1C07C
	public int GetFriendIconDispLimitCount() { }

	// RVA: 0x1C1AC60 Offset: 0x1C1AC60 VA: 0x1C1AC60
	public int getDispLimitCount() { }

	// RVA: 0x1C19010 Offset: 0x1C19010 VA: 0x1C19010
	public int getMaxDispLimitCount() { }

	// RVA: 0x1C1C0B8 Offset: 0x1C1C0B8 VA: 0x1C1C0B8
	public int getDispSelectLimitCount() { }

	// RVA: 0x1C1C1E8 Offset: 0x1C1C1E8 VA: 0x1C1C1E8
	public int getCommandCardLimitCount() { }

	// RVA: 0x1C1C2A8 Offset: 0x1C1C2A8 VA: 0x1C1C2A8
	public int getMaxCommandCardLimitCount() { }

	// RVA: 0x1C1C35C Offset: 0x1C1C35C VA: 0x1C1C35C
	public int getCardImageLimitCount() { }

	// RVA: 0x1C1C4F4 Offset: 0x1C1C4F4 VA: 0x1C1C4F4
	public int getMaxCardImageLimitCount(bool isNpc = False) { }

	// RVA: 0x1C1C5B4 Offset: 0x1C1C5B4 VA: 0x1C1C5B4
	public int getIconLimitCount() { }

	// RVA: 0x1C1C74C Offset: 0x1C1C74C VA: 0x1C1C74C
	public int getMaxIconLimitCount(bool isNpc = False) { }

	// RVA: 0x1C1C80C Offset: 0x1C1C80C VA: 0x1C1C80C
	public int getPortraitLimitCount() { }

	// RVA: 0x1C1C8CC Offset: 0x1C1C8CC VA: 0x1C1C8CC
	public int getMaxPortraitLimitCount() { }

	// RVA: 0x1C1C980 Offset: 0x1C1C980 VA: 0x1C1C980
	public int[] getCommandCodeIdList() { }

	// RVA: 0x1C1CB20 Offset: 0x1C1CB20 VA: 0x1C1CB20
	public CommandCodeEntity getCommandCodeEntity(int index) { }

	// RVA: 0x1C1CC70 Offset: 0x1C1CC70 VA: 0x1C1CC70
	public void ChangeLimitCountBySpoilerProtection() { }

	// RVA: 0x1C1CDC8 Offset: 0x1C1CDC8 VA: 0x1C1CDC8
	private int GetLimitChangeDic(int limit) { }

	// RVA: 0x1C1CF8C Offset: 0x1C1CF8C VA: 0x1C1CF8C
	private void SetServantNameBySpoilerProtection() { }

	// RVA: 0x1C1CEE0 Offset: 0x1C1CEE0 VA: 0x1C1CEE0
	private int GetAdjustLimitCount(int orgLimitCount) { }

	// RVA: 0x1C1D238 Offset: 0x1C1D238 VA: 0x1C1D238
	public string GetOverWriteServantName() { }

	// RVA: 0x1C1D240 Offset: 0x1C1D240 VA: 0x1C1D240
	public void GetAppendPassiveSkillInfo(out int[] idList, out string[] titleList, out string[] explanationList, out bool[] releaseStateList, out int[] lvList) { }

	// RVA: 0x1C1DB4C Offset: 0x1C1DB4C VA: 0x1C1DB4C
	public void GetAppendPassiveSkillInfoForNpc(out int[] idList, out string[] titleList, out string[] explanationList, out bool[] releaseStateList, out int[] lvList) { }

	// RVA: 0x1C1E404 Offset: 0x1C1E404 VA: 0x1C1E404
	public void GetAppendPassiveSkillInfo(out SkillInfo[] skillInfoList, bool isNpc = False) { }

	// RVA: 0x1C1E65C Offset: 0x1C1E65C VA: 0x1C1E65C
	private static void .cctor() { }
}

// Namespace: 
private enum ServantLeaderInfo.RandomLimitCountKind // TypeDefIndex: 7621
{
	// Fields
	public int value__; // 0x0
	public const ServantLeaderInfo.RandomLimitCountKind IMAGE_LIMIT_COUNT = 0;
	public const ServantLeaderInfo.RandomLimitCountKind DISP_LIMIT_COUNT = 1;
	public const ServantLeaderInfo.RandomLimitCountKind COMMANDCARD_LIMIT_COUNT = 2;
	public const ServantLeaderInfo.RandomLimitCountKind ICON_LIMIT_COUNT = 3;
	public const ServantLeaderInfo.RandomLimitCountKind PORTRAIT_LIMIT_COUNT = 4;
}

// Namespace: 
public class ServantProfileEventJoinManager // TypeDefIndex: 7622
{
	// Fields
	private static readonly string SAVE_DATA_VERSION; // 0x0
	private static bool isModified; // 0x8
	private static bool isContinueDevice; // 0x9
	private static List<ServantProfileEventJoinManager.ServantEventJoinInfo> infoList; // 0x10

	// Methods

	// RVA: 0x1EE182C Offset: 0x1EE182C VA: 0x1EE182C
	public void .ctor() { }

	// RVA: 0x1EE1834 Offset: 0x1EE1834 VA: 0x1EE1834
	private static string GetSaveFileName() { }

	// RVA: 0x1EE190C Offset: 0x1EE190C VA: 0x1EE190C
	public static void DeleteSaveData() { }

	// RVA: 0x1EE1990 Offset: 0x1EE1990 VA: 0x1EE1990
	protected static void ClearSaveDataList() { }

	// RVA: 0x1EE1A94 Offset: 0x1EE1A94 VA: 0x1EE1A94
	public static void Initialize() { }

	// RVA: 0x1EE1F4C Offset: 0x1EE1F4C VA: 0x1EE1F4C
	public static void UpdateProfileServantEventJoin() { }

	// RVA: 0x1EE2C70 Offset: 0x1EE2C70 VA: 0x1EE2C70
	public static bool GetIsNeedToCheckEventJoinName(ServantEntity servantEntity) { }

	// RVA: 0x1EE260C Offset: 0x1EE260C VA: 0x1EE260C
	private static void SetIsNeedToCheckEventJoinNameExist(int servantId, bool isNeedToChecEventJoinNameExist) { }

	// RVA: 0x1EE1AF0 Offset: 0x1EE1AF0 VA: 0x1EE1AF0
	private static bool ReadData() { }

	// RVA: 0x1EE27CC Offset: 0x1EE27CC VA: 0x1EE27CC
	private static bool WriteData() { }

	// RVA: 0x1EE2EF0 Offset: 0x1EE2EF0 VA: 0x1EE2EF0
	private static void .cctor() { }
}

// Namespace: 
private class ServantProfileEventJoinManager.ServantEventJoinInfo // TypeDefIndex: 7623
{
	// Fields
	public int servantId; // 0x10
	public bool isNeedToCheckEventJoinNameExist; // 0x14

	// Methods

	// RVA: 0x1EE2EE8 Offset: 0x1EE2EE8 VA: 0x1EE2EE8
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF060 Offset: 0xCAF060 VA: 0xCAF060
private sealed class ServantProfileEventJoinManager.<GetIsNeedToCheckEventJoinName>c__AnonStorey0 // TypeDefIndex: 7624
{
	// Fields
	internal ServantEntity servantEntity; // 0x10

	// Methods

	// RVA: 0x1EE2ED8 Offset: 0x1EE2ED8 VA: 0x1EE2ED8
	public void .ctor() { }

	// RVA: 0x1EE2F90 Offset: 0x1EE2F90 VA: 0x1EE2F90
	internal bool <>m__0(ServantProfileEventJoinManager.ServantEventJoinInfo i) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF070 Offset: 0xCAF070 VA: 0xCAF070
private sealed class ServantProfileEventJoinManager.<SetIsNeedToCheckEventJoinNameExist>c__AnonStorey1 // TypeDefIndex: 7625
{
	// Fields
	internal int servantId; // 0x10

	// Methods

	// RVA: 0x1EE2EE0 Offset: 0x1EE2EE0 VA: 0x1EE2EE0
	public void .ctor() { }

	// RVA: 0x1EE3038 Offset: 0x1EE3038 VA: 0x1EE3038
	internal bool <>m__0(ServantProfileEventJoinManager.ServantEventJoinInfo i) { }
}

// Namespace: 
public class ServantProfileLimitCountManager // TypeDefIndex: 7626
{
	// Fields
	protected static readonly string SAVE_DATA_VERSION; // 0x0
	protected static bool isModfiy; // 0x8
	protected static bool isContinueDevice; // 0x9
	protected static List<ServantProfileLimitCountManager.ServantLimitCountInfo> limitCountList; // 0x10

	// Methods

	// RVA: 0x1EE3074 Offset: 0x1EE3074 VA: 0x1EE3074
	public void .ctor() { }

	// RVA: 0x1EE307C Offset: 0x1EE307C VA: 0x1EE307C
	protected static string GetSaveFileName() { }

	// RVA: 0x1EE3154 Offset: 0x1EE3154 VA: 0x1EE3154
	public static void DeleteSaveData() { }

	// RVA: 0x1EE31D8 Offset: 0x1EE31D8 VA: 0x1EE31D8
	public static void Initialize() { }

	// RVA: 0x1EE37FC Offset: 0x1EE37FC VA: 0x1EE37FC
	protected static void ClearSaveDataList() { }

	// RVA: 0x1EE3900 Offset: 0x1EE3900 VA: 0x1EE3900
	public static void SetLimitCount(int servantId, int limitCount) { }

	// RVA: 0x1EE3AE4 Offset: 0x1EE3AE4 VA: 0x1EE3AE4
	public static int GetLimitCount(int servantId) { }

	// RVA: 0x1EE3234 Offset: 0x1EE3234 VA: 0x1EE3234
	public static bool ReadData() { }

	// RVA: 0x1EE3BEC Offset: 0x1EE3BEC VA: 0x1EE3BEC
	public static bool WriteData() { }

	// RVA: 0x1EE40F4 Offset: 0x1EE40F4 VA: 0x1EE40F4
	public static void UpdateProfileServantLimitCount() { }

	// RVA: 0x1EE4408 Offset: 0x1EE4408 VA: 0x1EE4408
	public static void SetLimitCountExistProfile(int servantId, int limitCount) { }

	// RVA: 0x1EE45A8 Offset: 0x1EE45A8 VA: 0x1EE45A8
	private static void .cctor() { }
}

// Namespace: 
protected class ServantProfileLimitCountManager.ServantLimitCountInfo // TypeDefIndex: 7627
{
	// Fields
	public int servantId; // 0x10
	public int limitCount; // 0x14

	// Methods

	// RVA: 0x1EE3ADC Offset: 0x1EE3ADC VA: 0x1EE3ADC
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF080 Offset: 0xCAF080 VA: 0xCAF080
private sealed class ServantProfileLimitCountManager.<SetLimitCount>c__AnonStorey0 // TypeDefIndex: 7628
{
	// Fields
	internal int servantId; // 0x10

	// Methods

	// RVA: 0x1EE3AD4 Offset: 0x1EE3AD4 VA: 0x1EE3AD4
	public void .ctor() { }

	// RVA: 0x1EE4684 Offset: 0x1EE4684 VA: 0x1EE4684
	internal bool <>m__0(ServantProfileLimitCountManager.ServantLimitCountInfo x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF090 Offset: 0xCAF090 VA: 0xCAF090
private sealed class ServantProfileLimitCountManager.<GetLimitCount>c__AnonStorey1 // TypeDefIndex: 7629
{
	// Fields
	internal int servantId; // 0x10

	// Methods

	// RVA: 0x1EE3BE4 Offset: 0x1EE3BE4 VA: 0x1EE3BE4
	public void .ctor() { }

	// RVA: 0x1EE4648 Offset: 0x1EE4648 VA: 0x1EE4648
	internal bool <>m__0(ServantProfileLimitCountManager.ServantLimitCountInfo x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF0A0 Offset: 0xCAF0A0 VA: 0xCAF0A0
private sealed class ServantProfileLimitCountManager.<UpdateProfileServantLimitCount>c__AnonStorey2 // TypeDefIndex: 7630
{
	// Fields
	internal UserServantEntity ent; // 0x10

	// Methods

	// RVA: 0x1EE4400 Offset: 0x1EE4400 VA: 0x1EE4400
	public void .ctor() { }

	// RVA: 0x1EE46FC Offset: 0x1EE46FC VA: 0x1EE46FC
	internal bool <>m__0(ServantProfileEntity x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF0B0 Offset: 0xCAF0B0 VA: 0xCAF0B0
private sealed class ServantProfileLimitCountManager.<SetLimitCountExistProfile>c__AnonStorey3 // TypeDefIndex: 7631
{
	// Fields
	internal int servantId; // 0x10

	// Methods

	// RVA: 0x1EE45A0 Offset: 0x1EE45A0 VA: 0x1EE45A0
	public void .ctor() { }

	// RVA: 0x1EE46C0 Offset: 0x1EE46C0 VA: 0x1EE46C0
	internal bool <>m__0(ServantProfileEntity x) { }
}

// Namespace: 
public class ServantVoiceCond // TypeDefIndex: 7632
{
	// Fields
	public int condType; // 0x10
	public int value; // 0x14

	// Methods

	// RVA: 0x185CE84 Offset: 0x185CE84 VA: 0x185CE84
	public void .ctor() { }
}

// Namespace: 
public class ServantVoiceData // TypeDefIndex: 7633
{
	// Fields
	public string id; // 0x10
	public float delay; // 0x18
	public int face; // 0x1C
	public int[] multiFace; // 0x20
	public int[] multiForm; // 0x28
	public string text; // 0x30
	public int form; // 0x38
	public int changeEffect; // 0x3C

	// Methods

	// RVA: 0x185CE8C Offset: 0x185CE8C VA: 0x185CE8C
	public void .ctor() { }
}

// Namespace: 
public class SetNoticeInfo // TypeDefIndex: 7634
{
	// Fields
	private static bool isApRecover; // 0x0
	private static bool isGameNotice; // 0x1

	// Methods

	// RVA: 0x1887110 Offset: 0x1887110 VA: 0x1887110
	public void .ctor() { }

	// RVA: 0x1887118 Offset: 0x1887118 VA: 0x1887118
	public static void SetisApRecover(bool isNotice) { }

	// RVA: 0x1887188 Offset: 0x1887188 VA: 0x1887188
	public static bool GetisApRecover() { }

	// RVA: 0x18871F0 Offset: 0x18871F0 VA: 0x18871F0
	public static void SetisGameNotice(bool isNotice) { }

	// RVA: 0x1887260 Offset: 0x1887260 VA: 0x1887260
	public static bool GetisGameNotice() { }

	// RVA: 0x18872C8 Offset: 0x18872C8 VA: 0x18872C8
	private static void .cctor() { }
}

// Namespace: 
public class SkillInfo // TypeDefIndex: 7635
{
	// Fields
	public int id; // 0x10
	public int lv; // 0x14
	public int charge; // 0x18
	public string title; // 0x20
	public string explanation; // 0x28
	public int strengthStatus; // 0x30
	public int skillRecord; // 0x34
	public bool isUse; // 0x38

	// Methods

	// RVA: 0x1CE12A8 Offset: 0x1CE12A8 VA: 0x1CE12A8
	public void .ctor() { }

	// RVA: 0x1CE133C Offset: 0x1CE133C VA: 0x1CE133C
	public static string GetMargeExplanation(SkillInfo[] skillInfoList) { }

	// RVA: 0x1CE14E0 Offset: 0x1CE14E0 VA: 0x1CE14E0
	public static string GetMargeExplanation(string[] explanationList) { }

	// RVA: 0x1CE168C Offset: 0x1CE168C VA: 0x1CE168C
	public bool Equals(SkillInfo info) { }

	// RVA: 0x1CE16C4 Offset: 0x1CE16C4 VA: 0x1CE16C4
	public string GetName() { }

	// RVA: 0x1CE17D8 Offset: 0x1CE17D8 VA: 0x1CE17D8
	public void OverwriteNextSkill(long userId, int svtId) { }
}

// Namespace: 
public class SvtEquipInfo // TypeDefIndex: 7636
{
	// Fields
	public long userSvtId; // 0x10
	public long equipTargetId1; // 0x18

	// Methods

	// RVA: 0x15E52E4 Offset: 0x15E52E4 VA: 0x15E52E4
	public void .ctor() { }
}

// Namespace: 
public class SvtVoiceInfo // TypeDefIndex: 7637
{
	// Fields
	public bool isInvalidVoiceList; // 0x10
	public string summonScript; // 0x18
	public string overwriteName; // 0x20
	public string overwriteNameDefault; // 0x28
	public string materialOverwriteName; // 0x30
	public int overwritePriority; // 0x38
	public ServantVoiceData[] infos; // 0x40
	public ServantVoiceCond[] conds; // 0x48
	public int condAddItem; // 0x50

	// Methods

	// RVA: 0x15E5B18 Offset: 0x15E5B18 VA: 0x15E5B18
	public void .ctor() { }
}

// Namespace: 
public class TreasureDvcInfo // TypeDefIndex: 7638
{
	// Fields
	public int id; // 0x10
	public int lv; // 0x14
	public int maxLv; // 0x18
	public string name; // 0x20
	public string explanation; // 0x28
	public int guageCount; // 0x30
	public int cardId; // 0x34
	public int strengthStatus; // 0x38
	public bool isUse; // 0x3C

	// Methods

	// RVA: 0x1E103A4 Offset: 0x1E103A4 VA: 0x1E103A4
	public void .ctor() { }

	// RVA: 0x1E10438 Offset: 0x1E10438 VA: 0x1E10438
	public bool Equals(TreasureDvcInfo info) { }

	// RVA: 0x1E10470 Offset: 0x1E10470 VA: 0x1E10470
	public string GetName() { }
}

// Namespace: 
public class UsedCount // TypeDefIndex: 7639
{
	// Fields
	public long userId; // 0x10
	public int count; // 0x18

	// Methods

	// RVA: 0x2038488 Offset: 0x2038488 VA: 0x2038488
	public void .ctor() { }
}

// Namespace: 
public class UserCommandCodeCollectionManager // TypeDefIndex: 7640
{
	// Fields
	protected static readonly string SAVE_DATA_VERSION; // 0x0
	protected static bool isModfiy; // 0x8
	protected static bool isContinueDevice; // 0x9
	protected static List<int> oldList; // 0x10

	// Methods

	// RVA: 0x203987C Offset: 0x203987C VA: 0x203987C
	public void .ctor() { }

	// RVA: 0x2039884 Offset: 0x2039884 VA: 0x2039884
	protected static string getSaveFileName() { }

	// RVA: 0x203995C Offset: 0x203995C VA: 0x203995C
	public static void DeleteSaveData() { }

	// RVA: 0x20399E0 Offset: 0x20399E0 VA: 0x20399E0
	public static void CreateContinueDeviceSaveData() { }

	// RVA: 0x2039F2C Offset: 0x2039F2C VA: 0x2039F2C
	public static void Initialize() { }

	// RVA: 0x2039A5C Offset: 0x2039A5C VA: 0x2039A5C
	protected static void ClearSaveDataList() { }

	// RVA: 0x203A3D4 Offset: 0x203A3D4 VA: 0x203A3D4
	public static void LoginProcess() { }

	// RVA: 0x20393FC Offset: 0x20393FC VA: 0x20393FC
	public static bool IsNew(int svtId) { }

	// RVA: 0x20395F8 Offset: 0x20395F8 VA: 0x20395F8
	public static void SetOld(int svtId) { }

	// RVA: 0x203A6A0 Offset: 0x203A6A0 VA: 0x203A6A0
	public static void SetOld(int[] svtIdList) { }

	// RVA: 0x2039F88 Offset: 0x2039F88 VA: 0x2039F88
	public static bool ReadData() { }

	// RVA: 0x2039B60 Offset: 0x2039B60 VA: 0x2039B60
	public static bool WriteData() { }

	// RVA: 0x203A8E0 Offset: 0x203A8E0 VA: 0x203A8E0
	private static void .cctor() { }
}

// Namespace: 
public class UserCommandCodeNewManager // TypeDefIndex: 7641
{
	// Fields
	protected static readonly string SAVE_DATA_VERSION; // 0x0
	protected static bool isModfiy; // 0x8
	protected static bool isContinueDevice; // 0x9
	protected static List<long> oldList; // 0x10

	// Methods

	// RVA: 0x1BD8658 Offset: 0x1BD8658 VA: 0x1BD8658
	public void .ctor() { }

	// RVA: 0x1BD8660 Offset: 0x1BD8660 VA: 0x1BD8660
	protected static string getSaveFileName() { }

	// RVA: 0x1BD8738 Offset: 0x1BD8738 VA: 0x1BD8738
	public static void DeleteSaveData() { }

	// RVA: 0x1BD87BC Offset: 0x1BD87BC VA: 0x1BD87BC
	public static void CreateContinueDeviceSaveData() { }

	// RVA: 0x1BD8D08 Offset: 0x1BD8D08 VA: 0x1BD8D08
	public static void Initialize() { }

	// RVA: 0x1BD8838 Offset: 0x1BD8838 VA: 0x1BD8838
	protected static void ClearSaveDataList() { }

	// RVA: 0x1BD91B0 Offset: 0x1BD91B0 VA: 0x1BD91B0
	public static void LoginProcess() { }

	// RVA: 0x1BD92A4 Offset: 0x1BD92A4 VA: 0x1BD92A4
	public static bool IsNew(long userCmdCodeId) { }

	// RVA: 0x1BD93B8 Offset: 0x1BD93B8 VA: 0x1BD93B8
	public static void SetOld(long userCmdCodeId) { }

	// RVA: 0x1BD8D64 Offset: 0x1BD8D64 VA: 0x1BD8D64
	public static bool ReadData() { }

	// RVA: 0x1BD893C Offset: 0x1BD893C VA: 0x1BD893C
	public static bool WriteData() { }

	// RVA: 0x1BD9528 Offset: 0x1BD9528 VA: 0x1BD9528
	private static void .cctor() { }
}

// Namespace: 
public class UserEquipNewManager // TypeDefIndex: 7642
{
	// Fields
	protected static readonly string SAVE_DATA_VERSION; // 0x0
	protected static bool isModfiy; // 0x8
	protected static bool isContinueDevice; // 0x9
	protected static List<UserEquipNewManager.UserEquipLvInfo> openList; // 0x10

	// Methods

	// RVA: 0x1BDC390 Offset: 0x1BDC390 VA: 0x1BDC390
	public void .ctor() { }

	// RVA: 0x1BDC398 Offset: 0x1BDC398 VA: 0x1BDC398
	protected static string getSaveFileName() { }

	// RVA: 0x1BDC470 Offset: 0x1BDC470 VA: 0x1BDC470
	public static void DeleteSaveData() { }

	// RVA: 0x1BDC4F4 Offset: 0x1BDC4F4 VA: 0x1BDC4F4
	public static void CreateContinueDeviceSaveData() { }

	// RVA: 0x1BDCA70 Offset: 0x1BDCA70 VA: 0x1BDCA70
	public static void Initialize() { }

	// RVA: 0x1BDC570 Offset: 0x1BDC570 VA: 0x1BDC570
	protected static void ClearSaveDataList() { }

	// RVA: 0x1BDCF74 Offset: 0x1BDCF74 VA: 0x1BDCF74
	public static void LoginProcess() { }

	// RVA: 0x1BDBC78 Offset: 0x1BDBC78 VA: 0x1BDBC78
	public static bool IsNew(int equipId, int lv) { }

	// RVA: 0x1BDBE64 Offset: 0x1BDBE64 VA: 0x1BDBE64
	public static void SetOld(int equipId, int lv) { }

	// RVA: 0x1BDCACC Offset: 0x1BDCACC VA: 0x1BDCACC
	public static bool ReadData() { }

	// RVA: 0x1BDC674 Offset: 0x1BDC674 VA: 0x1BDC674
	public static bool WriteData() { }

	// RVA: 0x1BDD06C Offset: 0x1BDD06C VA: 0x1BDD06C
	private static void .cctor() { }
}

// Namespace: 
protected class UserEquipNewManager.UserEquipLvInfo // TypeDefIndex: 7643
{
	// Fields
	public int equipId; // 0x10
	public int equipLv; // 0x14

	// Methods

	// RVA: 0x1BDD064 Offset: 0x1BDD064 VA: 0x1BDD064
	public void .ctor() { }
}

// Namespace: 
public class UserFormationData // TypeDefIndex: 7644
{
	// Fields
	public long userId; // 0x10
	public long userEquipId; // 0x18
	public int[] item; // 0x20

	// Methods

	// RVA: 0x1BE5720 Offset: 0x1BE5720 VA: 0x1BE5720
	public void .ctor() { }
}

// Namespace: 
public class UserMissionNewManager // TypeDefIndex: 7645
{
	// Fields
	protected static readonly string SAVE_DATA_VERSION; // 0x0
	protected static bool isModfiy; // 0x8
	protected static bool isContinueDevice; // 0x9
	protected static bool isNew; // 0xA
	protected static int currentEventId; // 0xC
	protected static List<UserMissionNewManager.UserMissionNewInfo> missionNewInfoList; // 0x10
	protected static List<UserMissionNewManager.UserMissionNewInfo> oldNewInfoList; // 0x18
	protected static string saveName; // 0x20

	// Methods

	// RVA: 0x1BEEC7C Offset: 0x1BEEC7C VA: 0x1BEEC7C
	public void .ctor() { }

	// RVA: 0x1BEEC84 Offset: 0x1BEEC84 VA: 0x1BEEC84
	public static void setSaveFileName(int eventId) { }

	// RVA: 0x1BEED7C Offset: 0x1BEED7C VA: 0x1BEED7C
	public static string getSaveFileNameByEvent(int eventId) { }

	// RVA: 0x1BEEE60 Offset: 0x1BEEE60 VA: 0x1BEEE60
	public static string getSaveFileName() { }

	// RVA: 0x1BEEF24 Offset: 0x1BEEF24 VA: 0x1BEEF24
	public static void DeleteSaveData() { }

	// RVA: 0x1BEEFA8 Offset: 0x1BEEFA8 VA: 0x1BEEFA8
	public static void CreateContinueDeviceSaveData() { }

	// RVA: 0x1BEF53C Offset: 0x1BEF53C VA: 0x1BEF53C
	public static void Initialize() { }

	// RVA: 0x1BEF024 Offset: 0x1BEF024 VA: 0x1BEF024
	protected static void ClearSaveDataList() { }

	// RVA: 0x1BEFB20 Offset: 0x1BEFB20 VA: 0x1BEFB20
	public static bool ReadData() { }

	// RVA: 0x1BEF128 Offset: 0x1BEF128 VA: 0x1BEF128
	public static bool WriteData() { }

	// RVA: 0x1BEFFE4 Offset: 0x1BEFFE4 VA: 0x1BEFFE4
	public static bool SetIsNewMissionInfo(int targetMissionId) { }

	// RVA: 0x1BF0260 Offset: 0x1BF0260 VA: 0x1BF0260
	public static void SetClearNewFlg() { }

	// RVA: 0x1BF03E0 Offset: 0x1BF03E0 VA: 0x1BF03E0
	private static void .cctor() { }
}

// Namespace: 
protected class UserMissionNewManager.UserMissionNewInfo // TypeDefIndex: 7646
{
	// Fields
	public int eventId; // 0x10
	public int missionId; // 0x14
	public bool isNew; // 0x18

	// Methods

	// RVA: 0x1BEFFDC Offset: 0x1BEFFDC VA: 0x1BEFFDC
	public void .ctor() { }
}

// Namespace: 
public class UserMissionProgressInfo // TypeDefIndex: 7647
{
	// Fields
	public int eventId; // 0x10
	public int missionId; // 0x14
	public int currentProgressType; // 0x18
	public int currentProgStatus; // 0x1C
	public long progNum; // 0x20
	public long targetNum; // 0x28
	public int condMsgType; // 0x30

	// Methods

	// RVA: 0x1BF04B0 Offset: 0x1BF04B0 VA: 0x1BF04B0
	public void .ctor() { }

	// RVA: 0x1BF04B8 Offset: 0x1BF04B8 VA: 0x1BF04B8
	public void .ctor(int eventId, int missionId) { }

	// RVA: 0x1BF0638 Offset: 0x1BF0638 VA: 0x1BF0638 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1BF04F4 Offset: 0x1BF04F4 VA: 0x1BF04F4
	public void checkMissionCond() { }

	// RVA: 0x1BF0640 Offset: 0x1BF0640 VA: 0x1BF0640
	private void setMissionCondInfo() { }
}

// Namespace: 
public enum UserMissionProgressInfo.ProgStatus // TypeDefIndex: 7648
{
	// Fields
	public int value__; // 0x0
	public const UserMissionProgressInfo.ProgStatus LOCK = 0;
	public const UserMissionProgressInfo.ProgStatus NOSTART = 1;
	public const UserMissionProgressInfo.ProgStatus PROGRESS = 2;
	public const UserMissionProgressInfo.ProgStatus CLEAR = 3;
	public const UserMissionProgressInfo.ProgStatus ACHIVE = 4;
	public const UserMissionProgressInfo.ProgStatus END = 5;
}

// Namespace: 
public class UserMissionProgressManager // TypeDefIndex: 7649
{
	// Fields
	protected static readonly string SAVE_DATA_VERSION; // 0x0
	protected static bool isModfiy; // 0x8
	protected static bool isContinueDevice; // 0x9
	protected static List<UserMissionProgressInfo> missionProgList; // 0x10
	protected static string saveName; // 0x18

	// Methods
