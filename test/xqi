
// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF7D0 Offset: 0xCAF7D0 VA: 0xCAF7D0
private sealed class BattlePerformance.<coroutineEffectWinBattle>c__Iterator23 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8593
{
	// Fields
	internal Action callback; // 0x10
	internal BattlePerformance $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD47894 Offset: 0xD47894 VA: 0xD47894
	// RVA: 0x167DA74 Offset: 0x167DA74 VA: 0x167DA74
	public void .ctor() { }

	// RVA: 0x167DA7C Offset: 0x167DA7C VA: 0x167DA7C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD478A4 Offset: 0xD478A4 VA: 0xD478A4
	// RVA: 0x167DB58 Offset: 0x167DB58 VA: 0x167DB58 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD478B4 Offset: 0xD478B4 VA: 0xD478B4
	// RVA: 0x167DB60 Offset: 0x167DB60 VA: 0x167DB60 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD478C4 Offset: 0xD478C4 VA: 0xD478C4
	// RVA: 0x167DB68 Offset: 0x167DB68 VA: 0x167DB68 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD478D4 Offset: 0xD478D4 VA: 0xD478D4
	// RVA: 0x167DB7C Offset: 0x167DB7C VA: 0x167DB7C Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF7E0 Offset: 0xCAF7E0 VA: 0xCAF7E0
private sealed class BattlePerformance.<effectFadeInCoroutine>c__Iterator24 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8594
{
	// Fields
	internal BattlePerformance $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD478E4 Offset: 0xD478E4 VA: 0xD478E4
	// RVA: 0x168033C Offset: 0x168033C VA: 0x168033C
	public void .ctor() { }

	// RVA: 0x1680344 Offset: 0x1680344 VA: 0x1680344 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD478F4 Offset: 0xD478F4 VA: 0xD478F4
	// RVA: 0x168044C Offset: 0x168044C VA: 0x168044C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47904 Offset: 0xD47904 VA: 0xD47904
	// RVA: 0x1680454 Offset: 0x1680454 VA: 0x1680454 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47914 Offset: 0xD47914 VA: 0xD47914
	// RVA: 0x168045C Offset: 0x168045C VA: 0x168045C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47924 Offset: 0xD47924 VA: 0xD47924
	// RVA: 0x1680470 Offset: 0x1680470 VA: 0x1680470 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF7F0 Offset: 0xCAF7F0 VA: 0xCAF7F0
private sealed class BattlePerformance.<showBattleResultWait>c__Iterator25 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8595
{
	// Fields
	internal WaitForEndOfFrame <waitEndOfFrame>__1; // 0x10
	internal BattlePerformance $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C
	private BattlePerformance.<showBattleResultWait>c__Iterator25.<showBattleResultWait>c__AnonStorey41 $locvar0; // 0x30

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD47934 Offset: 0xD47934 VA: 0xD47934
	// RVA: 0x1681710 Offset: 0x1681710 VA: 0x1681710
	public void .ctor() { }

	// RVA: 0x1681718 Offset: 0x1681718 VA: 0x1681718 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47944 Offset: 0xD47944 VA: 0xD47944
	// RVA: 0x1682080 Offset: 0x1682080 VA: 0x1682080 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47954 Offset: 0xD47954 VA: 0xD47954
	// RVA: 0x1682088 Offset: 0x1682088 VA: 0x1682088 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47964 Offset: 0xD47964 VA: 0xD47964
	// RVA: 0x1682090 Offset: 0x1682090 VA: 0x1682090 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47974 Offset: 0xD47974 VA: 0xD47974
	// RVA: 0x16820A4 Offset: 0x16820A4 VA: 0x16820A4 Slot: 6
	public void Reset() { }
}

// Namespace: 
private sealed class BattlePerformance.<showBattleResultWait>c__Iterator25.<showBattleResultWait>c__AnonStorey41 // TypeDefIndex: 8596
{
	// Fields
	internal bool isCharaGraphOptionAtlasLoad; // 0x10
	internal bool isBg1Load; // 0x11
	internal bool isBg2Load; // 0x12
	internal bool isEffectLoad; // 0x13
	internal BattlePerformance.<showBattleResultWait>c__Iterator25 <>f__ref$37; // 0x18

	// Methods

	// RVA: 0x1682078 Offset: 0x1682078 VA: 0x1682078
	public void .ctor() { }

	// RVA: 0x168210C Offset: 0x168210C VA: 0x168210C
	internal void <>m__0() { }

	// RVA: 0x1682118 Offset: 0x1682118 VA: 0x1682118
	internal void <>m__1() { }

	// RVA: 0x1682124 Offset: 0x1682124 VA: 0x1682124
	internal void <>m__2() { }

	// RVA: 0x1682130 Offset: 0x1682130 VA: 0x1682130
	internal void <>m__3() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF800 Offset: 0xCAF800 VA: 0xCAF800
private sealed class BattlePerformance.<PlayAnySkillVoice>c__AnonStorey42 // TypeDefIndex: 8597
{
	// Fields
	internal Action _callback; // 0x10

	// Methods

	// RVA: 0x167BD9C Offset: 0x167BD9C VA: 0x167BD9C
	public void .ctor() { }

	// RVA: 0x167BDA4 Offset: 0x167BDA4 VA: 0x167BDA4
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF810 Offset: 0xCAF810 VA: 0xCAF810
private sealed class BattlePerformance.<corLoadPt>c__Iterator26 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8598
{
	// Fields
	internal Action callback; // 0x10
	internal BattlePerformance $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD47984 Offset: 0xD47984 VA: 0xD47984
	// RVA: 0x167D184 Offset: 0x167D184 VA: 0x167D184
	public void .ctor() { }

	// RVA: 0x167D18C Offset: 0x167D18C VA: 0x167D18C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47994 Offset: 0xD47994 VA: 0xD47994
	// RVA: 0x167D878 Offset: 0x167D878 VA: 0x167D878 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD479A4 Offset: 0xD479A4 VA: 0xD479A4
	// RVA: 0x167D880 Offset: 0x167D880 VA: 0x167D880 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD479B4 Offset: 0xD479B4 VA: 0xD479B4
	// RVA: 0x167D888 Offset: 0x167D888 VA: 0x167D888 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD479C4 Offset: 0xD479C4 VA: 0xD479C4
	// RVA: 0x167D89C Offset: 0x167D89C VA: 0x167D89C Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF820 Offset: 0xCAF820 VA: 0xCAF820
private sealed class BattlePerformance.<PlayShiftGaugeChange>c__AnonStorey43 // TypeDefIndex: 8599
{
	// Fields
	internal string eventName; // 0x10
	internal BattlePerformance $this; // 0x18

	// Methods

	// RVA: 0x167BE2C Offset: 0x167BE2C VA: 0x167BE2C
	public void .ctor() { }

	// RVA: 0x167BE34 Offset: 0x167BE34 VA: 0x167BE34
	internal void <>m__0(int targetId) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF830 Offset: 0xCAF830 VA: 0xCAF830
private sealed class BattlePerformance.<ColShiftGaugeChangeServant>c__Iterator27 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8600
{
	// Fields
	internal BattleActionData.BaseShiftGaugeData <shiftGauge>__0; // 0x10
	internal BattleActionData.ShiftServant shiftSvt; // 0x18
	internal BattleActorControl <actor>__0; // 0x20
	internal string eventName; // 0x28
	internal BattlePerformance $this; // 0x30
	internal object $current; // 0x38
	internal bool $disposing; // 0x40
	internal int $PC; // 0x44

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD479D4 Offset: 0xD479D4 VA: 0xD479D4
	// RVA: 0x1679ED0 Offset: 0x1679ED0 VA: 0x1679ED0
	public void .ctor() { }

	// RVA: 0x1679ED8 Offset: 0x1679ED8 VA: 0x1679ED8 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD479E4 Offset: 0xD479E4 VA: 0xD479E4
	// RVA: 0x167A118 Offset: 0x167A118 VA: 0x167A118 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD479F4 Offset: 0xD479F4 VA: 0xD479F4
	// RVA: 0x167A120 Offset: 0x167A120 VA: 0x167A120 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47A04 Offset: 0xD47A04 VA: 0xD47A04
	// RVA: 0x167A128 Offset: 0x167A128 VA: 0x167A128 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47A14 Offset: 0xD47A14 VA: 0xD47A14
	// RVA: 0x167A13C Offset: 0x167A13C VA: 0x167A13C Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF840 Offset: 0xCAF840 VA: 0xCAF840
private sealed class BattlePerformance.<startChangeAppearance>c__Iterator28 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8601
{
	// Fields
	internal int <i>__1; // 0x10
	internal int[] tagetUniqueId; // 0x18
	internal GameObject <obj>__2; // 0x20
	internal BattleActorControl <actor>__2; // 0x28
	internal Action callback; // 0x30
	internal BattlePerformance $this; // 0x38
	internal object $current; // 0x40
	internal bool $disposing; // 0x48
	internal int $PC; // 0x4C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD47A24 Offset: 0xD47A24 VA: 0xD47A24
	// RVA: 0x168230C Offset: 0x168230C VA: 0x168230C
	public void .ctor() { }

	// RVA: 0x1682314 Offset: 0x1682314 VA: 0x1682314 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47A34 Offset: 0xD47A34 VA: 0xD47A34
	// RVA: 0x1682514 Offset: 0x1682514 VA: 0x1682514 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47A44 Offset: 0xD47A44 VA: 0xD47A44
	// RVA: 0x168251C Offset: 0x168251C VA: 0x168251C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47A54 Offset: 0xD47A54 VA: 0xD47A54
	// RVA: 0x1682524 Offset: 0x1682524 VA: 0x1682524 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47A64 Offset: 0xD47A64 VA: 0xD47A64
	// RVA: 0x1682538 Offset: 0x1682538 VA: 0x1682538 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF850 Offset: 0xCAF850 VA: 0xCAF850
private sealed class BattlePerformance.<CheckQuestStartSkill>c__Iterator29 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8602
{
	// Fields
	internal BattlePerformance $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD47A74 Offset: 0xD47A74 VA: 0xD47A74
	// RVA: 0x1678BCC Offset: 0x1678BCC VA: 0x1678BCC
	public void .ctor() { }

	// RVA: 0x1678BD4 Offset: 0x1678BD4 VA: 0x1678BD4 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47A84 Offset: 0xD47A84 VA: 0xD47A84
	// RVA: 0x1678D24 Offset: 0x1678D24 VA: 0x1678D24 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47A94 Offset: 0xD47A94 VA: 0xD47A94
	// RVA: 0x1678D2C Offset: 0x1678D2C VA: 0x1678D2C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47AA4 Offset: 0xD47AA4 VA: 0xD47AA4
	// RVA: 0x1678D34 Offset: 0x1678D34 VA: 0x1678D34 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47AB4 Offset: 0xD47AB4 VA: 0xD47AB4
	// RVA: 0x1678D48 Offset: 0x1678D48 VA: 0x1678D48 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF860 Offset: 0xCAF860 VA: 0xCAF860
private sealed class BattlePerformance.<CoEndLoadLossCommandSpellEffect>c__Iterator2A : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8603
{
	// Fields
	internal BattleActionData <actionData>__0; // 0x10
	internal UserGameEntity <userGame>__0; // 0x18
	internal int <imageType>__0; // 0x20
	internal int <remain>__0; // 0x24
	internal string <assetObjName>__0; // 0x28
	internal AssetData assetData; // 0x30
	internal GameObject <prefab>__0; // 0x38
	internal GameObject <effect>__0; // 0x40
	internal BattlePerformance $this; // 0x48
	internal object $current; // 0x50
	internal bool $disposing; // 0x58
	internal int $PC; // 0x5C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD47AC4 Offset: 0xD47AC4 VA: 0xD47AC4
	// RVA: 0x1678DB0 Offset: 0x1678DB0 VA: 0x1678DB0
	public void .ctor() { }

	// RVA: 0x1678DB8 Offset: 0x1678DB8 VA: 0x1678DB8 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47AD4 Offset: 0xD47AD4 VA: 0xD47AD4
	// RVA: 0x167913C Offset: 0x167913C VA: 0x167913C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47AE4 Offset: 0xD47AE4 VA: 0xD47AE4
	// RVA: 0x1679144 Offset: 0x1679144 VA: 0x1679144 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47AF4 Offset: 0xD47AF4 VA: 0xD47AF4
	// RVA: 0x167914C Offset: 0x167914C VA: 0x167914C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47B04 Offset: 0xD47B04 VA: 0xD47B04
	// RVA: 0x1679160 Offset: 0x1679160 VA: 0x1679160 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF870 Offset: 0xCAF870 VA: 0xCAF870
private sealed class BattlePerformance.<CoFieldCallEffect>c__Iterator2B : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8604
{
	// Fields
	internal int effectId; // 0x10
	internal string sendEvent; // 0x18
	internal GameObject <effectObject>__0; // 0x20
	internal GameObject <effect>__0; // 0x28
	internal BattlePerformance $this; // 0x30
	internal object $current; // 0x38
	internal bool $disposing; // 0x40
	internal int $PC; // 0x44

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD47B14 Offset: 0xD47B14 VA: 0xD47B14
	// RVA: 0x16791C8 Offset: 0x16791C8 VA: 0x16791C8
	public void .ctor() { }

	// RVA: 0x16791D0 Offset: 0x16791D0 VA: 0x16791D0 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47B24 Offset: 0xD47B24 VA: 0xD47B24
	// RVA: 0x16793AC Offset: 0x16793AC VA: 0x16793AC Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47B34 Offset: 0xD47B34 VA: 0xD47B34
	// RVA: 0x16793B4 Offset: 0x16793B4 VA: 0x16793B4 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47B44 Offset: 0xD47B44 VA: 0xD47B44
	// RVA: 0x16793BC Offset: 0x16793BC VA: 0x16793BC Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47B54 Offset: 0xD47B54 VA: 0xD47B54
	// RVA: 0x16793D0 Offset: 0x16793D0 VA: 0x16793D0 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF880 Offset: 0xCAF880 VA: 0xCAF880
private sealed class BattlePerformance.<CoShowDefenceTargetAddBuffEffect>c__Iterator2C : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8605
{
	// Fields
	internal float <time>__0; // 0x10
	internal float waitTime; // 0x14
	internal FunctionEntity funcEntity; // 0x18
	internal Action callback; // 0x20
	internal string <popupLabel>__0; // 0x28
	internal int <popupColor>__0; // 0x30
	internal int <popupBuffId>__0; // 0x34
	internal int effectId; // 0x38
	internal GameObject procObject; // 0x40
	internal GameObject <effectObject>__0; // 0x48
	internal GameObject <effect>__0; // 0x50
	internal BattleBuffData.BuffData <buffData>__0; // 0x58
	internal int[] specialInvincibleBuff; // 0x60
	internal BattleBuffData.ShowBuffData <showBuffData>__0; // 0x68
	internal EffectMaster <effectMaster>__0; // 0x70
	internal EffectEntity <effectEntity>__0; // 0x78
	internal string <path>__0; // 0x80
	internal string <name>__0; // 0x88
	internal AssetData <assetData>__0; // 0x90
	internal BattlePerformance $this; // 0x98
	internal object $current; // 0xA0
	internal bool $disposing; // 0xA8
	internal int $PC; // 0xAC

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD47B64 Offset: 0xD47B64 VA: 0xD47B64
	// RVA: 0x1679438 Offset: 0x1679438 VA: 0x1679438
	public void .ctor() { }

	// RVA: 0x1679440 Offset: 0x1679440 VA: 0x1679440 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47B74 Offset: 0xD47B74 VA: 0xD47B74
	// RVA: 0x1679BF0 Offset: 0x1679BF0 VA: 0x1679BF0 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47B84 Offset: 0xD47B84 VA: 0xD47B84
	// RVA: 0x1679BF8 Offset: 0x1679BF8 VA: 0x1679BF8 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47B94 Offset: 0xD47B94 VA: 0xD47B94
	// RVA: 0x1679C00 Offset: 0x1679C00 VA: 0x1679C00 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47BA4 Offset: 0xD47BA4 VA: 0xD47BA4
	// RVA: 0x1679C14 Offset: 0x1679C14 VA: 0x1679C14 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF890 Offset: 0xCAF890 VA: 0xCAF890
private sealed class BattlePerformance.<CoWaitGuardEffect>c__Iterator2D : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8606
{
	// Fields
	internal GameObject guardEffect; // 0x10
	internal BattleBuffData.BuffData buffData; // 0x18
	internal BattleBuffData.ShowBuffData[] <showBuffArray>__0; // 0x20
	internal BattlePerformance $this; // 0x28
	internal object $current; // 0x30
	internal bool $disposing; // 0x38
	internal int $PC; // 0x3C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD47BB4 Offset: 0xD47BB4 VA: 0xD47BB4
	// RVA: 0x1679C7C Offset: 0x1679C7C VA: 0x1679C7C
	public void .ctor() { }

	// RVA: 0x1679C84 Offset: 0x1679C84 VA: 0x1679C84 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47BC4 Offset: 0xD47BC4 VA: 0xD47BC4
	// RVA: 0x1679E44 Offset: 0x1679E44 VA: 0x1679E44 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47BD4 Offset: 0xD47BD4 VA: 0xD47BD4
	// RVA: 0x1679E4C Offset: 0x1679E4C VA: 0x1679E4C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47BE4 Offset: 0xD47BE4 VA: 0xD47BE4
	// RVA: 0x1679E54 Offset: 0x1679E54 VA: 0x1679E54 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD47BF4 Offset: 0xD47BF4 VA: 0xD47BF4
	// RVA: 0x1679E68 Offset: 0x1679E68 VA: 0x1679E68 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class BattlePerformanceCommandCard : BaseMonoBehaviour // TypeDefIndex: 8607
{
	// Fields
	private readonly float[] COMMAND_STAMP_POS_X; // 0x18
	private readonly float COMMAND_STAMP_POS_Y; // 0x20
	private readonly float COMMAND_STAMP_POS_Z; // 0x24
	private readonly float CARD_ROOT_BASE_X; // 0x28
	private readonly float CARD_ROOT_BASE_Y; // 0x2C
	public PlayMakerFSM commandfsm; // 0x30
	public GameObject commandprefab; // 0x38
	public GameObject selectCommandPrefab; // 0x40
	public Transform commandrootTransform; // 0x48
	public UISprite selectinfo_sprite; // 0x50
	public GameObject firstbonus_q; // 0x58
	public GameObject firstbonus_a; // 0x60
	public GameObject firstbonus_b; // 0x68
	public GameObject firstaura_q; // 0x70
	public GameObject firstaura_a; // 0x78
	public GameObject firstaura_b; // 0x80
	public GameObject[] p_commandlist; // 0x88
	public Transform cardRoot; // 0x90
	public Transform[] cardTr; // 0x98
	public Transform[] npcardTr; // 0xA0
	public Transform[] excardTr; // 0xA8
	public GameObject chainBonus; // 0xB0
	public UISprite maskSprite; // 0xB8
	public Transform extraPos; // 0xC0
	public Transform[] miniPos; // 0xC8
	public Transform npTargetTr; // 0xD0
	public Transform[] npgaugeTr; // 0xD8
	public GameObject cutin_single; // 0xE0
	public GameObject cutin_trinity_a; // 0xE8
	public GameObject cutin_trinity_b; // 0xF0
	public GameObject cutin_trinity_q; // 0xF8
	public GameObject cutin_grand_a; // 0x100
	public GameObject cutin_grand_b; // 0x108
	public GameObject cutin_grand_q; // 0x110
	public GameObject cutin_ordererror; // 0x118
	public GameObject effect_takecri; // 0x120
	public Transform criticalpointTr; // 0x128
	public GameObject highSpeedButton; // 0x130
	public GameObject highSpeedArrowOn; // 0x138
	public GameObject highSpeedArrowOff; // 0x140
	public UIButton backTacticalButton; // 0x148
	public BattleSealedCommandWindowComponent sealedWindow; // 0x150
	public BattleTDConfWIndowComponent tdConfWindow; // 0x158
	private BattleLogic logic; // 0x160
	private int[] selectcommand; // 0x168
	private int drawcount; // 0x170
	private int maxdrawcount; // 0x174
	private BattleCommandData[] commandlist; // 0x178
	private BattlePerformance perf; // 0x180
	private BattleData Bdata; // 0x188
	private List<BattleCommandData> baseCommandList; // 0x190
	private BattleCommandComponent[] selectedcomponents; // 0x198
	private BattleServantParamComponent[] servantStatusObjArray; // 0x1A0
	public static int cardsize_w; // 0x0
	protected bool directCommandCardTouchEnable; // 0x1A8
	private Coroutine openNpCoroutine; // 0x1B0
	private BattleCommandComponent[] commandCompArray; // 0x1B8
	private Transform[] commandTransformArray; // 0x1C0
	private bool isPrevStar; // 0x1C8
	private Spawner spawner; // 0x1D0
	private int firstBonusAnimationWaitTime; // 0x1D8
	private readonly int firstBonusAnimationMaxTime; // 0x1DC
	private bool isTouchBegan; // 0x1E0
	private bool isTouchEnded; // 0x1E1
	private bool isTouchCanceled; // 0x1E2
	[CompilerGeneratedAttribute] // RVA: 0xCCC2A4 Offset: 0xCCC2A4 VA: 0xCCC2A4
	[DebuggerBrowsableAttribute] // RVA: 0xCCC2A4 Offset: 0xCCC2A4 VA: 0xCCC2A4
	private bool <IsPlayingBackStar>k__BackingField; // 0x1E3
	[SerializeField] // RVA: 0xCCC2E0 Offset: 0xCCC2E0 VA: 0xCCC2E0
	private iTween.EaseType npGaugeEaseType; // 0x1E4
	[SerializeField] // RVA: 0xCCC2F0 Offset: 0xCCC2F0 VA: 0xCCC2F0
	private float npGaugeEffectMoveDelayTime; // 0x1E8
	[SerializeField] // RVA: 0xCCC300 Offset: 0xCCC300 VA: 0xCCC300
	private float npGaugeEffectMoveTime; // 0x1EC
	[SerializeField] // RVA: 0xCCC310 Offset: 0xCCC310 VA: 0xCCC310
	private float npCardEffectDelayTime; // 0x1F0
	[SerializeField] // RVA: 0xCCC320 Offset: 0xCCC320 VA: 0xCCC320
	private float npCardDispDelayTime; // 0x1F4
	[SerializeField] // RVA: 0xCCC330 Offset: 0xCCC330 VA: 0xCCC330
	private Transform npGaugeLightTargetRoot; // 0x1F8
	[SerializeField] // RVA: 0xCCC340 Offset: 0xCCC340 VA: 0xCCC340
	private Transform[] npGaugeLightTarget; // 0x200
	private bool isPlayingMoveCard; // 0x208
	private GameObject firstBonusObject; // 0x210
	private int firstAuraType; // 0x218
	private SimpleAnimation firstBonusSimpleAnimation; // 0x220
	private Animation firstBonusAnimation; // 0x228
	private GameObject chainBonusObject; // 0x230
	private Vector3 miniScale; // 0x238
	private List<GameObject> aubelist; // 0x248
	private const float MAX_STAR_TWEEN_TIME = 0.5;
	private const float MIN_STAR_TWEEN_TIME = 0.3;
	public const int DRAW_COMMAND_MAX = 5;
	private bool isPressAtkBtn; // 0x250
	private Vector2[] TutorialArrow01; // 0x258
	private Rect[] TutorialSquare01; // 0x260
	private Vector2[] TutorialArrow05; // 0x268
	private Rect[] TutorialSquare05; // 0x270
	private Vector2 TutorialArrow22; // 0x278
	private Rect TutorialSquare22; // 0x280
	private Vector2[] TutorialArrow31; // 0x290
	private Rect[] TutorialSquare32; // 0x298
	private bool isTouchNgInTutorial; // 0x2A0
	private BattleLogic.TutorialStringData[] TSD; // 0x2A8

	// Properties
	public bool IsPlayingBackStar { get; set; }
	private Vector2[] FSTutorialArrow01 { get; }
	private Rect[] FSTutorialSquare01 { get; }
	private Vector2[] FSTutorialArrow05 { get; }
	private Rect[] FSTutorialSquare05 { get; }
	private Vector2[] FSTutorialArrow31 { get; }
	private Rect[] FSTutorialSquare32 { get; }
	private Vector2 FSTutorialArrow22 { get; }
	private Rect FSTutorialSquare22 { get; }

	// Methods

	// RVA: 0x1687E68 Offset: 0x1687E68 VA: 0x1687E68
	public void .ctor() { }

	// RVA: 0x1688868 Offset: 0x1688868 VA: 0x1688868
	private void SetBackTacticalButton(bool active) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3934C Offset: 0xD3934C VA: 0xD3934C
	// RVA: 0x1688930 Offset: 0x1688930 VA: 0x1688930
	public bool get_IsPlayingBackStar() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3935C Offset: 0xD3935C VA: 0xD3935C
	// RVA: 0x1688938 Offset: 0x1688938 VA: 0x1688938
	private void set_IsPlayingBackStar(bool value) { }

	// RVA: 0x1688944 Offset: 0x1688944 VA: 0x1688944
	public void Initialize(BattlePerformance inperf, BattleData data, BattleLogic inlogic) { }

	// RVA: 0x1688BE0 Offset: 0x1688BE0 VA: 0x1688BE0
	public void initQuest() { }

	// RVA: 0x1688C60 Offset: 0x1688C60 VA: 0x1688C60
	public void OpenInitiarize() { }

	// RVA: 0x1688CD4 Offset: 0x1688CD4 VA: 0x1688CD4
	public void createCommandCard() { }

	// RVA: 0x16896D8 Offset: 0x16896D8 VA: 0x16896D8
	public void initOpen() { }

	// RVA: 0x168973C Offset: 0x168973C VA: 0x168973C
	public void closeWindow() { }

	// RVA: 0x1689740 Offset: 0x1689740 VA: 0x1689740
	public void InitResult() { }

	// RVA: 0x16897F8 Offset: 0x16897F8 VA: 0x16897F8
	public void playAnimation(string name) { }

	// RVA: 0x1689B98 Offset: 0x1689B98 VA: 0x1689B98
	public void registCommandCard(BattleCommandData[] list) { }

	// RVA: 0x168A1F4 Offset: 0x168A1F4 VA: 0x168A1F4
	public void hideCommandCard(bool flg, BaseMotionSkip motionSkip) { }

	// RVA: 0x168A32C Offset: 0x168A32C VA: 0x168A32C
	public void updateCard() { }

	// RVA: 0x168A5AC Offset: 0x168A5AC VA: 0x168A5AC
	public void fadeOutAllCard() { }

	// RVA: 0x168A648 Offset: 0x168A648 VA: 0x168A648
	public void resetCommandCard() { }

	// RVA: 0x168A7AC Offset: 0x168A7AC VA: 0x168A7AC
	public void StartCountupCommandStar(bool isZeroStart = True) { }

	// RVA: 0x167C6AC Offset: 0x167C6AC VA: 0x167C6AC
	public void ResetCardCriticalLabel() { }

	[DebuggerHiddenAttribute] // RVA: 0xD3936C Offset: 0xD3936C VA: 0xD3936C
	// RVA: 0x168A8A8 Offset: 0x168A8A8 VA: 0x168A8A8
	private IEnumerator waitFallStar() { }

	// RVA: 0x167C748 Offset: 0x167C748 VA: 0x167C748
	public void openCommandCard(bool isStatTac = False) { }

	// RVA: 0x168AA08 Offset: 0x168AA08 VA: 0x168AA08
	public void endOpenCommandCard() { }

	// RVA: 0x168AB08 Offset: 0x168AB08 VA: 0x168AB08
	public void SetBaseCommandCard(List<BattleCommandData> baselist) { }

	// RVA: 0x168AB10 Offset: 0x168AB10 VA: 0x168AB10
	public BattleCommandData[] GetBaseCommandCard() { }

	// RVA: 0x168ABCC Offset: 0x168ABCC VA: 0x168ABCC
	public void setCommandCard(BattleCommandData[] list, int maxdrawcount) { }

	// RVA: 0x168B58C Offset: 0x168B58C VA: 0x168B58C
	public void giveoutCard() { }

	// RVA: 0x168B724 Offset: 0x168B724 VA: 0x168B724
	public void endMoveCard() { }

	// RVA: 0x168BA0C Offset: 0x168BA0C VA: 0x168BA0C
	public void giveoutNobleCard() { }

	// RVA: 0x168BC74 Offset: 0x168BC74 VA: 0x168BC74
	public void updateCardFix() { }

	// RVA: 0x168B96C Offset: 0x168B96C VA: 0x168B96C
	public void updateTDTypeChange() { }

	// RVA: 0x168A918 Offset: 0x168A918 VA: 0x168A918
	public void updateCardMag() { }

	// RVA: 0x168BDEC Offset: 0x168BDEC VA: 0x168BDEC
	public void touchCommandCard(int markindex) { }

	// RVA: 0x168C9F8 Offset: 0x168C9F8 VA: 0x168C9F8
	public void LongPress(int markindex) { }

	// RVA: 0x168CBAC Offset: 0x168CBAC VA: 0x168CBAC
	private void unselectCommandCard(BattleCommandComponent bc, int markindex) { }

	// RVA: 0x168C098 Offset: 0x168C098 VA: 0x168C098
	public void selectOK(int markindex) { }

	// RVA: 0x168D5D0 Offset: 0x168D5D0 VA: 0x168D5D0
	private void SetSelectStamp(int targetindex, Vector3 pos, BattleCommandComponent bc) { }

	// RVA: 0x168D834 Offset: 0x168D834 VA: 0x168D834
	public void startFirstBonus(int type) { }

	[DebuggerHiddenAttribute] // RVA: 0xD3937C Offset: 0xD3937C VA: 0xD3937C
	// RVA: 0x168D860 Offset: 0x168D860 VA: 0x168D860
	private IEnumerator coStartFirstBonus(int type) { }

	// RVA: 0x168D8F4 Offset: 0x168D8F4 VA: 0x168D8F4
	private void ActivateFirstBonusObject() { }

	[DebuggerHiddenAttribute] // RVA: 0xD3938C Offset: 0xD3938C VA: 0xD3938C
	// RVA: 0x168DB64 Offset: 0x168DB64 VA: 0x168DB64
	private IEnumerator DelayFirstBonusAnimationPlay() { }

	// RVA: 0x168DBD4 Offset: 0x168DBD4 VA: 0x168DBD4
	public void stopFirstBonus() { }

	// RVA: 0x168D0C8 Offset: 0x168D0C8 VA: 0x168D0C8
	public void cancelFirstBonus() { }

	// RVA: 0x168D1F0 Offset: 0x168D1F0 VA: 0x168D1F0
	public void setFirstAura(BattleCommandComponent comp, int type) { }

	// RVA: 0x168D290 Offset: 0x168D290 VA: 0x168D290
	public void checkChainBonus(int targetIndex) { }

	// RVA: 0x168D468 Offset: 0x168D468 VA: 0x168D468
	public void checkMaskEnemy() { }

	// RVA: 0x168DC7C Offset: 0x168DC7C VA: 0x168DC7C
	public void checkDrawCount() { }

	// RVA: 0x168DCFC Offset: 0x168DCFC VA: 0x168DCFC
	public void changeNoSelectCards() { }

	// RVA: 0x168DE98 Offset: 0x168DE98 VA: 0x168DE98
	public void comboExecute() { }

	// RVA: 0x168E6BC Offset: 0x168E6BC VA: 0x168E6BC
	public void startComboEffect() { }

	[DebuggerHiddenAttribute] // RVA: 0xD3939C Offset: 0xD3939C VA: 0xD3939C
	// RVA: 0x168E740 Offset: 0x168E740 VA: 0x168E740
	private IEnumerator showComboEffect(BattleComboData combo, string endproc) { }

	[DebuggerHiddenAttribute] // RVA: 0xD393AC Offset: 0xD393AC VA: 0xD393AC
	// RVA: 0x168E7E8 Offset: 0x168E7E8 VA: 0x168E7E8
	private IEnumerator showComboEffectShort(BattleComboData combo) { }

	[DebuggerHiddenAttribute] // RVA: 0xD393BC Offset: 0xD393BC VA: 0xD393BC
	// RVA: 0x168E87C Offset: 0x168E87C VA: 0x168E87C
	private IEnumerator showComboEffectNormal(BattleComboData combo) { }

	// RVA: 0x168E910 Offset: 0x168E910 VA: 0x168E910
	private void setComboEffectPrefab(BattleComboData combo, out GameObject prefab, out int seName) { }

	// RVA: 0x168EA70 Offset: 0x168EA70 VA: 0x168EA70
	private void playComboEffect(GameObject prefab, int seName) { }

	// RVA: 0x168EB28 Offset: 0x168EB28 VA: 0x168EB28
	private void PlayFlash(BattleComboData combo) { }

	// RVA: 0x168EC38 Offset: 0x168EC38 VA: 0x168EC38
	private void PlayFlashComboSvt(BattleComboData combo) { }

	// RVA: 0x168ED48 Offset: 0x168ED48 VA: 0x168ED48
	private void MoveSelectedCard(float moveTime) { }

	// RVA: 0x168F160 Offset: 0x168F160 VA: 0x168F160
	private void AddExtraCard() { }

	// RVA: 0x168F690 Offset: 0x168F690 VA: 0x168F690
	private void MoveExtraCard(float moveTime) { }

	// RVA: 0x168FAF8 Offset: 0x168FAF8 VA: 0x168FAF8
	private void PlayFlashExtra() { }

	// RVA: 0x168FB8C Offset: 0x168FB8C VA: 0x168FB8C
	public void endComboEffect() { }

	// RVA: 0x168FBF0 Offset: 0x168FBF0 VA: 0x168FBF0
	public string getComboCutIn() { }

	// RVA: 0x168FD18 Offset: 0x168FD18 VA: 0x168FD18
	public void playCommandEffect(int index, bool flg) { }

	// RVA: 0x168FDCC Offset: 0x168FDCC VA: 0x168FDCC
	public void playNobleCardEffect(int index) { }

	// RVA: 0x1690138 Offset: 0x1690138 VA: 0x1690138
	public void playTypeEffect(bool flg) { }

	// RVA: 0x168D084 Offset: 0x168D084 VA: 0x168D084
	public void selectCommandCard(int atcount) { }

	// RVA: 0x16901E4 Offset: 0x16901E4 VA: 0x16901E4
	public void setCountRemaining(int count) { }

	// RVA: 0x16902E4 Offset: 0x16902E4 VA: 0x16902E4
	public void startMiniCard() { }

	// RVA: 0x1690A38 Offset: 0x1690A38 VA: 0x1690A38
	public GameObject getBattleCommandCardObject(int actionIndex) { }

	// RVA: 0x1690AE8 Offset: 0x1690AE8 VA: 0x1690AE8
	public Transform getCollectCriticalTransform() { }

	// RVA: 0x1690AF0 Offset: 0x1690AF0 VA: 0x1690AF0
	public bool checkPrevStars() { }

	// RVA: 0x1690AF8 Offset: 0x1690AF8 VA: 0x1690AF8
	public void setPrevStarsFlg(bool flg) { }

	// RVA: 0x1690B04 Offset: 0x1690B04 VA: 0x1690B04
	public void moveupStars() { }

	// RVA: 0x16912C4 Offset: 0x16912C4 VA: 0x16912C4
	private void UpdateCommandCardServantFace(BattleServantData svtData, IEnumerable<BattleCommandComponent> commandCompEnumerable) { }

	// RVA: 0x16915DC Offset: 0x16915DC VA: 0x16915DC
	public void UpdateSelectedCommandCardServantFace(BattleServantData svtData) { }

	// RVA: 0x16915E4 Offset: 0x16915E4 VA: 0x16915E4
	public void UpdateDrawnCommandCardServantFace(BattleServantData svtData) { }

	// RVA: 0x16915EC Offset: 0x16915EC VA: 0x16915EC
	private void MoveNotTween(Transform target, Action<GameObject> callback) { }

	// RVA: 0x16918D8 Offset: 0x16918D8 VA: 0x16918D8
	private void MoveNotTween2back(Transform from, Action<GameObject> callback) { }

	// RVA: 0x1691B2C Offset: 0x1691B2C VA: 0x1691B2C
	public bool fallStar() { }

	// RVA: 0x1691F14 Offset: 0x1691F14 VA: 0x1691F14
	public void ResetCommandCardPassData() { }

	// RVA: 0x1691F94 Offset: 0x1691F94 VA: 0x1691F94
	public void PlayFallStar() { }

	[DebuggerHiddenAttribute] // RVA: 0xD393CC Offset: 0xD393CC VA: 0xD393CC
	// RVA: 0x1692274 Offset: 0x1692274 VA: 0x1692274
	private IEnumerator waitFunc(float waittime, Action callback) { }

	// RVA: 0x1692324 Offset: 0x1692324 VA: 0x1692324
	public void UpdateCommandCriticalCount() { }

	// RVA: 0x16923E0 Offset: 0x16923E0 VA: 0x16923E0
	public void setAtkButtonFlg(bool flg) { }

	// RVA: 0x16923EC Offset: 0x16923EC VA: 0x16923EC
	public void PlayBackStar(Action callback) { }

	// RVA: 0x1691DFC Offset: 0x1691DFC VA: 0x1691DFC
	public void updateBuffIcon() { }

	// RVA: 0x1692718 Offset: 0x1692718 VA: 0x1692718
	public void countupStarPoint() { }

	// RVA: 0x169271C Offset: 0x169271C VA: 0x169271C
	public void startOpenNpCard() { }

	// RVA: 0x16927C0 Offset: 0x16927C0 VA: 0x16927C0
	public void SetStatusObjArray(BattleServantParamComponent[] statusObjArray) { }

	// RVA: 0x16927C8 Offset: 0x16927C8 VA: 0x16927C8
	private BattleServantParamComponent GetStatusUiObj(BattleCommandData commandData) { }

	// RVA: 0x168B4C4 Offset: 0x168B4C4 VA: 0x168B4C4
	private int GetServantNumber(BattleCommandData commandData) { }

	[DebuggerHiddenAttribute] // RVA: 0xD393DC Offset: 0xD393DC VA: 0xD393DC
	// RVA: 0x1692750 Offset: 0x1692750 VA: 0x1692750
	private IEnumerator colOpenNpCard() { }

	// RVA: 0x169298C Offset: 0x169298C VA: 0x169298C
	public void OpenSealedWindow(int markIndex) { }

	// RVA: 0x1692C10 Offset: 0x1692C10 VA: 0x1692C10
	private string GetSealedWindowMessageLocalizationKey(BattleCommandSealStatus.Status status) { }

	// RVA: 0x1692C78 Offset: 0x1692C78 VA: 0x1692C78
	public void OnCloseSealedWindow() { }

	// RVA: 0x1692D38 Offset: 0x1692D38 VA: 0x1692D38
	public void endCloseSealedWindow() { }

	// RVA: 0x1692D9C Offset: 0x1692D9C VA: 0x1692D9C
	public void OpenTdConfWindow(int markIndex) { }

	// RVA: 0x1693038 Offset: 0x1693038 VA: 0x1693038
	public void endOpenTdConf() { }

	// RVA: 0x169303C Offset: 0x169303C VA: 0x169303C
	public void OnCloseTdConfWindow() { }

	// RVA: 0x169312C Offset: 0x169312C VA: 0x169312C
	public void endCloseTdConfWindow() { }

	// RVA: 0x1693190 Offset: 0x1693190 VA: 0x1693190
	public void checkAutoBattle() { }

	// RVA: 0x16931F4 Offset: 0x16931F4 VA: 0x16931F4
	public void selectAutoCard() { }

	// RVA: 0x1693398 Offset: 0x1693398 VA: 0x1693398
	public void clickBackButton() { }

	// RVA: 0x1693438 Offset: 0x1693438 VA: 0x1693438
	public void back2Tactical() { }

	// RVA: 0x1689B24 Offset: 0x1689B24 VA: 0x1689B24
	private float FSCardRootOffsetY() { }

	// RVA: 0x169364C Offset: 0x169364C VA: 0x169364C
	private Vector2[] FSTutorialArrowCard(Vector2[] arrow) { }

	// RVA: 0x1693768 Offset: 0x1693768 VA: 0x1693768
