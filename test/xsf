	private UILabel limitUpConfirmHaveQpTxtLb; // 0x1A0
	[SerializeField] // RVA: 0xCD8B20 Offset: 0xCD8B20 VA: 0xCD8B20
	private UILabel limitUpConfirmSpendQpLb; // 0x1A8
	[SerializeField] // RVA: 0xCD8B30 Offset: 0xCD8B30 VA: 0xCD8B30
	private UILabel limitUpConfirmHaveQpLb; // 0x1B0
	[SerializeField] // RVA: 0xCD8B40 Offset: 0xCD8B40 VA: 0xCD8B40
	private UILabel limitUpConfirmMsgLb; // 0x1B8
	[SerializeField] // RVA: 0xCD8B50 Offset: 0xCD8B50 VA: 0xCD8B50
	private GameObject skillUpConfirmInfo; // 0x1C0
	[SerializeField] // RVA: 0xCD8B60 Offset: 0xCD8B60 VA: 0xCD8B60
	private UILabel upTitleLb; // 0x1C8
	[SerializeField] // RVA: 0xCD8B70 Offset: 0xCD8B70 VA: 0xCD8B70
	private UILabel upTargetRubyLb; // 0x1D0
	[SerializeField] // RVA: 0xCD8B80 Offset: 0xCD8B80 VA: 0xCD8B80
	private UILabel upTargetNameLb; // 0x1D8
	[SerializeField] // RVA: 0xCD8B90 Offset: 0xCD8B90 VA: 0xCD8B90
	private UIExtrusionLabel currentLvLb; // 0x1E0
	[SerializeField] // RVA: 0xCD8BA0 Offset: 0xCD8BA0 VA: 0xCD8BA0
	private UIExtrusionLabel resLvLb; // 0x1E8
	[SerializeField] // RVA: 0xCD8BB0 Offset: 0xCD8BB0 VA: 0xCD8BB0
	private UILabel upSpendQpTxtLb; // 0x1F0
	[SerializeField] // RVA: 0xCD8BC0 Offset: 0xCD8BC0 VA: 0xCD8BC0
	private UILabel upHaveQpTxtLb; // 0x1F8
	[SerializeField] // RVA: 0xCD8BD0 Offset: 0xCD8BD0 VA: 0xCD8BD0
	private UILabel upSpendQpLb; // 0x200
	[SerializeField] // RVA: 0xCD8BE0 Offset: 0xCD8BE0 VA: 0xCD8BE0
	private UILabel upHaveQpLb; // 0x208
	[SerializeField] // RVA: 0xCD8BF0 Offset: 0xCD8BF0 VA: 0xCD8BF0
	private UILabel upConfirmMsgLb; // 0x210
	[SerializeField] // RVA: 0xCD8C00 Offset: 0xCD8C00 VA: 0xCD8C00
	private GameObject npUpConfirmInfo; // 0x218
	[SerializeField] // RVA: 0xCD8C10 Offset: 0xCD8C10 VA: 0xCD8C10
	private UILabel npUpTitleLb; // 0x220
	[SerializeField] // RVA: 0xCD8C20 Offset: 0xCD8C20 VA: 0xCD8C20
	private NpUpConfirmComponent npUpInfoComp; // 0x228
	private UserServantEntity npBaseData; // 0x230
	private List<long> npSelectMtUsrSvtIdList; // 0x238
	private SetLevelUpData npLvUpData; // 0x240
	private bool npIsExceedMaxLv; // 0x248
	private bool npIsCombineSvt; // 0x249
	private bool npIsExceededMaterial; // 0x24A
	private bool reConfirmation; // 0x24B
	[SerializeField] // RVA: 0xCD8C30 Offset: 0xCD8C30 VA: 0xCD8C30
	private GameObject lvExceedConfirmSimpleInfo; // 0x250
	[SerializeField] // RVA: 0xCD8C40 Offset: 0xCD8C40 VA: 0xCD8C40
	private UILabel lvExceedTitleLb; // 0x258
	[SerializeField] // RVA: 0xCD8C50 Offset: 0xCD8C50 VA: 0xCD8C50
	private GameObject lvExceedQpInfo; // 0x260
	[SerializeField] // RVA: 0xCD8C60 Offset: 0xCD8C60 VA: 0xCD8C60
	private UILabel lvExceedSpendQpTxtLb; // 0x268
	[SerializeField] // RVA: 0xCD8C70 Offset: 0xCD8C70 VA: 0xCD8C70
	private UILabel lvExceedHaveQpTxtLb; // 0x270
	[SerializeField] // RVA: 0xCD8C80 Offset: 0xCD8C80 VA: 0xCD8C80
	private UILabel lvExceedSpendQpLb; // 0x278
	[SerializeField] // RVA: 0xCD8C90 Offset: 0xCD8C90 VA: 0xCD8C90
	private UILabel lvExceedHaveQpLb; // 0x280
	[SerializeField] // RVA: 0xCD8CA0 Offset: 0xCD8CA0 VA: 0xCD8CA0
	private UILabel lvExceedInfoLb; // 0x288
	[SerializeField] // RVA: 0xCD8CB0 Offset: 0xCD8CB0 VA: 0xCD8CB0
	private GameObject lvExceedConfirmInfo; // 0x290
	[SerializeField] // RVA: 0xCD8CC0 Offset: 0xCD8CC0 VA: 0xCD8CC0
	private UILabel lvExceedTitleLabel; // 0x298
	[SerializeField] // RVA: 0xCD8CD0 Offset: 0xCD8CD0 VA: 0xCD8CD0
	private UILabel lvExceedSpendItemLabel; // 0x2A0
	[SerializeField] // RVA: 0xCD8CE0 Offset: 0xCD8CE0 VA: 0xCD8CE0
	private UIGrid lvExceedConsumeItemGrid; // 0x2A8
	[SerializeField] // RVA: 0xCD8CF0 Offset: 0xCD8CF0 VA: 0xCD8CF0
	private UILabel lvExceedSpendQpTxtLabel; // 0x2B0
	[SerializeField] // RVA: 0xCD8D00 Offset: 0xCD8D00 VA: 0xCD8D00
	private UILabel lvExceedHaveQpTxtLabel; // 0x2B8
	[SerializeField] // RVA: 0xCD8D10 Offset: 0xCD8D10 VA: 0xCD8D10
	private UILabel lvExceedSpendQpLabel; // 0x2C0
	[SerializeField] // RVA: 0xCD8D20 Offset: 0xCD8D20 VA: 0xCD8D20
	private UILabel lvExceedHaveQpLabel; // 0x2C8
	[SerializeField] // RVA: 0xCD8D30 Offset: 0xCD8D30 VA: 0xCD8D30
	private UILabel lvExceedConfirmLabel; // 0x2D0
	[SerializeField] // RVA: 0xCD8D40 Offset: 0xCD8D40 VA: 0xCD8D40
	private GameObject friendshipExceedConfirmInfo; // 0x2D8
	[SerializeField] // RVA: 0xCD8D50 Offset: 0xCD8D50 VA: 0xCD8D50
	private UILabel friendshipExceedTitleLb; // 0x2E0
	[SerializeField] // RVA: 0xCD8D60 Offset: 0xCD8D60 VA: 0xCD8D60
	private UILabel friendshipExceedSpendQpTxtLb; // 0x2E8
	[SerializeField] // RVA: 0xCD8D70 Offset: 0xCD8D70 VA: 0xCD8D70
	private UILabel friendshipExceedHaveQpTxtLb; // 0x2F0
	[SerializeField] // RVA: 0xCD8D80 Offset: 0xCD8D80 VA: 0xCD8D80
	private UILabel friendshipExceedSpendQpLb; // 0x2F8
	[SerializeField] // RVA: 0xCD8D90 Offset: 0xCD8D90 VA: 0xCD8D90
	private UILabel friendshipExceedHaveQpLb; // 0x300
	[SerializeField] // RVA: 0xCD8DA0 Offset: 0xCD8DA0 VA: 0xCD8DA0
	private UILabel friendshipExceedMsgLb; // 0x308
	[SerializeField] // RVA: 0xCD8DB0 Offset: 0xCD8DB0 VA: 0xCD8DB0
	private GameObject appendSkillConfirmInfo; // 0x310
	[SerializeField] // RVA: 0xCD8DC0 Offset: 0xCD8DC0 VA: 0xCD8DC0
	private GameObject appendSkillIconInfo; // 0x318
	[SerializeField] // RVA: 0xCD8DD0 Offset: 0xCD8DD0 VA: 0xCD8DD0
	private GameObject appendSkillLvUpInfo; // 0x320
	[SerializeField] // RVA: 0xCD8DE0 Offset: 0xCD8DE0 VA: 0xCD8DE0
	private SkillIconComponent appendSkillIconComp; // 0x328
	[SerializeField] // RVA: 0xCD8DF0 Offset: 0xCD8DF0 VA: 0xCD8DF0
	private UILabel appendSkillIconTitleLabel; // 0x330
	[SerializeField] // RVA: 0xCD8E00 Offset: 0xCD8E00 VA: 0xCD8E00
	private UILabel appendSkillIconMessageLabel; // 0x338
	[SerializeField] // RVA: 0xCD8E10 Offset: 0xCD8E10 VA: 0xCD8E10
	private UILabel appendSkillTitleLabel; // 0x340
	[SerializeField] // RVA: 0xCD8E20 Offset: 0xCD8E20 VA: 0xCD8E20
	private UILabel appendSkillTargetRubyLabel; // 0x348
	[SerializeField] // RVA: 0xCD8E30 Offset: 0xCD8E30 VA: 0xCD8E30
	private UILabel appendSkillTargetNameLabel; // 0x350
	[SerializeField] // RVA: 0xCD8E40 Offset: 0xCD8E40 VA: 0xCD8E40
	private UIExtrusionLabel appendSkillCurrentLvLabel; // 0x358
	[SerializeField] // RVA: 0xCD8E50 Offset: 0xCD8E50 VA: 0xCD8E50
	private UIExtrusionLabel appendSkillResultLvLabel; // 0x360
	[SerializeField] // RVA: 0xCD8E60 Offset: 0xCD8E60 VA: 0xCD8E60
	private UILabel appendSkillSpendTxtLabel; // 0x368
	[SerializeField] // RVA: 0xCD8E70 Offset: 0xCD8E70 VA: 0xCD8E70
	private UILabel appendSkillHaveTxtLabel; // 0x370
	[SerializeField] // RVA: 0xCD8E80 Offset: 0xCD8E80 VA: 0xCD8E80
	private UILabel appendSkillSpendLabel; // 0x378
	[SerializeField] // RVA: 0xCD8E90 Offset: 0xCD8E90 VA: 0xCD8E90
	private UILabel appendSkillHaveLabel; // 0x380
	[SerializeField] // RVA: 0xCD8EA0 Offset: 0xCD8EA0 VA: 0xCD8EA0
	private UILabel appendSkillConfirmLabel; // 0x388
	[SerializeField] // RVA: 0xCD8EB0 Offset: 0xCD8EB0 VA: 0xCD8EB0
	private GameObject costumeEventItemConfirmInfo; // 0x390
	[SerializeField] // RVA: 0xCD8EC0 Offset: 0xCD8EC0 VA: 0xCD8EC0
	private GameObject costumeEventItemOrNeedItemConfirmInfo; // 0x398
	[SerializeField] // RVA: 0xCD8ED0 Offset: 0xCD8ED0 VA: 0xCD8ED0
	private GameObject costumeConfirmInfo; // 0x3A0
	[SerializeField] // RVA: 0xCD8EE0 Offset: 0xCD8EE0 VA: 0xCD8EE0
	private UILabel costumeTitleLb; // 0x3A8
	[SerializeField] // RVA: 0xCD8EF0 Offset: 0xCD8EF0 VA: 0xCD8EF0
	private UILabel costumeNameLb; // 0x3B0
	[SerializeField] // RVA: 0xCD8F00 Offset: 0xCD8F00 VA: 0xCD8F00
	private UILabel needQpCostumeTextLb; // 0x3B8
	[SerializeField] // RVA: 0xCD8F10 Offset: 0xCD8F10 VA: 0xCD8F10
	private UILabel needQpCostumeLb; // 0x3C0
	[SerializeField] // RVA: 0xCD8F20 Offset: 0xCD8F20 VA: 0xCD8F20
	private UILabel haveQpCostumeTextLb; // 0x3C8
	[SerializeField] // RVA: 0xCD8F30 Offset: 0xCD8F30 VA: 0xCD8F30
	private UILabel haveQpCostumeLb; // 0x3D0
	[SerializeField] // RVA: 0xCD8F40 Offset: 0xCD8F40 VA: 0xCD8F40
	private UILabel costumeInfoLb; // 0x3D8
	[SerializeField] // RVA: 0xCD8F50 Offset: 0xCD8F50 VA: 0xCD8F50
	private GameObject specialAscensionConfirmInfo; // 0x3E0
	private bool specialAscensionConfirm; // 0x3E8
	private bool specialAscensionWarning1; // 0x3E9
	private bool specialAscensionWarning2; // 0x3EA
	private Vector3 center; // 0x3EC
	private bool isStatusUp; // 0x3F8
	private bool isExceed; // 0x3F9
	private bool isButtonEnable; // 0x3FA
	private SeManager.SystemSeKind onClickDlgOkSeKind; // 0x3FC
	private Action onClickDlgOkCallBack; // 0x400
	private Action onClickDlgCancelCallBack; // 0x408
	private Action onClickDlgCloseCallBack; // 0x410
	[CompilerGeneratedAttribute] // RVA: 0xCD8F60 Offset: 0xCD8F60 VA: 0xCD8F60
	private static Predicate<UserServantEntity> <>f__mg$cache0; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCD8F70 Offset: 0xCD8F70 VA: 0xCD8F70
	private static Action <>f__am$cache0; // 0x18

	// Methods

	// RVA: 0x1887F40 Offset: 0x1887F40 VA: 0x1887F40
	public void .ctor() { }

	// RVA: 0x1887F48 Offset: 0x1887F48 VA: 0x1887F48
	public void SetConfirmInfo(UserServantEntity baseData, long[] list, string msg, int spendQp, int haveQp, bool isStatusUp, long[] selectedList, bool isExceededMaterial = False) { }

	// RVA: 0x1888EC0 Offset: 0x1888EC0 VA: 0x1888EC0
	public void SetConfirmRarityInfo(UserServantEntity baseData, long[] list, string msg, int spendQp, int haveQp, bool isExceededMaterial = False) { }

	// RVA: 0x1889D30 Offset: 0x1889D30 VA: 0x1889D30
	public void SetExceedMaterialInfo(UserServantEntity baseData, long[] list, string msg, int spendQp, int haveQp) { }

	// RVA: 0x188A344 Offset: 0x188A344 VA: 0x188A344
	public void SetConfirmCombine(UserServantEntity baseData, string msg, int spendQp, int haveQp, bool isStatusUp, long[] selectedList) { }

	// RVA: 0x188A9E4 Offset: 0x188A9E4 VA: 0x188A9E4
	public void SetConfirmSvtEqCombine(UserServantEntity baseData, string msg, int spendQp, int haveQp, bool isStatusUp, Dictionary<long, bool> selectedList) { }

	// RVA: 0x188872C Offset: 0x188872C VA: 0x188872C
	public void SetAllDispConfirmCombine(UserServantEntity baseData, long[] list, int spendQp, int haveQp, long[] selectedList, string statusLimitMessage, bool isExceededMaterial = False) { }

	// RVA: 0x18883A0 Offset: 0x18883A0 VA: 0x18883A0
	private bool CheckStatusUpInfo(UserServantEntity baseData, long[] selectUsrSvtIdList, out string labelMsg) { }

	// RVA: 0x188B144 Offset: 0x188B144 VA: 0x188B144
	public void SetLimitUpInfo(UserServantEntity baseData, CombineLimitUpWarningDialog combineLimitUpWarningDialog, string msg, int spendQp, int haveQp) { }

	// RVA: 0x188B544 Offset: 0x188B544 VA: 0x188B544
	public void SetSkillNpCombineInfo(SetLevelUpData updata, string titleMsg) { }

	// RVA: 0x188B958 Offset: 0x188B958 VA: 0x188B958
	public void SetAppendSkillCombineInfo(SetLevelUpData updata, string titleMsg, bool isOpen) { }

	// RVA: 0x188C314 Offset: 0x188C314 VA: 0x188C314
	public void SetNpCombineInfo(UserServantEntity baseData, List<long> selectUsrSvtIdList, SetLevelUpData updata, bool isExceedMaxLv, bool isCombineSvt, bool isExceededMaterial, bool reConfirmation) { }

	// RVA: 0x188C698 Offset: 0x188C698 VA: 0x188C698
	public void SetConfirmLvExceed(UserServantEntity baseData, string msg, int spendQp, int haveQp, bool isCheck) { }

	// RVA: 0x188CB00 Offset: 0x188CB00 VA: 0x188CB00
	public void SetConfirmLvExceed(List<GameObject> itemObjList, int[] itemList, int spendQp, int haveQp) { }

	// RVA: 0x188D034 Offset: 0x188D034 VA: 0x188D034
	public void SetSvtEqLimitUpConfirmCombine(UserServantEntity baseData, Dictionary<long, bool> selectedList, string title, int spendQp, int haveQp, bool isRare, string limitWarningMsg) { }

	// RVA: 0x188D9C8 Offset: 0x188D9C8 VA: 0x188D9C8
	public void SetConfirmCombineCostumeEventItemOrNeedItem(CombineCostumeEntity combineCostumeEnt, EventCombineCostumeEntity eventCombineCostumeEnt, bool isShortNeedItemOrQp, bool isShortEvemtItem, Action<bool> callBack, Action cancelCallBack) { }

	// RVA: 0x188DC5C Offset: 0x188DC5C VA: 0x188DC5C
	public void SetConfirmCombineCostumeEventItem(EventCombineCostumeEntity eventCombineCostumeEnt, Action callBack, Action cancelCallBack) { }

	// RVA: 0x188DD84 Offset: 0x188DD84 VA: 0x188DD84
	public void SetConfirmCombineCostume(string cosName, int needQp, int haveQp, Action callBack, Action cancelCallBack) { }

	// RVA: 0x188E0F4 Offset: 0x188E0F4 VA: 0x188E0F4
	public void SetFriendshipExceedInfo(string msg, int spendQp, int haveQp) { }

	// RVA: 0x188E488 Offset: 0x188E488 VA: 0x188E488
	public void SetSpecialAscension(UserServantEntity baseData, bool confirm, bool warning1, bool warning2) { }

	// RVA: 0x1889B24 Offset: 0x1889B24 VA: 0x1889B24
	private void SetCenter() { }

	// RVA: 0x188E840 Offset: 0x188E840 VA: 0x188E840
	public void Close() { }

	// RVA: 0x188EB98 Offset: 0x188EB98 VA: 0x188EB98
	private void EndCloseDlg() { }

	// RVA: 0x1889D1C Offset: 0x1889D1C VA: 0x1889D1C
	private void SetClickDlgOkSeAndCallBack(SeManager.SystemSeKind seKind, Action callBack, Action cancelCallBack, Action closeCallBack) { }

	// RVA: 0x1889728 Offset: 0x1889728 VA: 0x1889728
	private void MoveAlpha() { }

	// RVA: 0x188EBB4 Offset: 0x188EBB4 VA: 0x188EBB4
	private void EndOpen() { }

	// RVA: 0x188EC44 Offset: 0x188EC44 VA: 0x188EC44
	public void OnClickDlgOk() { }

	// RVA: 0x188F024 Offset: 0x188F024 VA: 0x188F024
	public void OnClickCancel() { }

	// RVA: 0x1888284 Offset: 0x1888284 VA: 0x1888284
	private void CheckExceedSvt(long[] selectedList) { }

	// RVA: 0x1889A00 Offset: 0x1889A00 VA: 0x1889A00
	private void DefaultBgSize() { }

	// RVA: 0x1889530 Offset: 0x1889530 VA: 0x1889530
	private void DisableConfirmInfo() { }

	// RVA: 0x188F0C4 Offset: 0x188F0C4 VA: 0x188F0C4
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D0B4 Offset: 0xD3D0B4 VA: 0xD3D0B4
	// RVA: 0x188F14C Offset: 0x188F14C VA: 0x188F14C
	private void <SetConfirmRarityInfo>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D0C4 Offset: 0xD3D0C4 VA: 0xD3D0C4
	// RVA: 0x188F17C Offset: 0x188F17C VA: 0x188F17C
	private void <SetExceedMaterialInfo>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D0D4 Offset: 0xD3D0D4 VA: 0xD3D0D4
	// RVA: 0x188F1BC Offset: 0x188F1BC VA: 0x188F1BC
	private void <SetConfirmCombine>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D0E4 Offset: 0xD3D0E4 VA: 0xD3D0E4
	// RVA: 0x188F1EC Offset: 0x188F1EC VA: 0x188F1EC
	private void <SetConfirmSvtEqCombine>m__3() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D0F4 Offset: 0xD3D0F4 VA: 0xD3D0F4
	// RVA: 0x188F21C Offset: 0x188F21C VA: 0x188F21C
	private void <SetAllDispConfirmCombine>m__4() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D104 Offset: 0xD3D104 VA: 0xD3D104
	// RVA: 0x188F24C Offset: 0x188F24C VA: 0x188F24C
	private void <SetSkillNpCombineInfo>m__5() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D114 Offset: 0xD3D114 VA: 0xD3D114
	// RVA: 0x188F27C Offset: 0x188F27C VA: 0x188F27C
	private void <SetAppendSkillCombineInfo>m__6() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D124 Offset: 0xD3D124 VA: 0xD3D124
	// RVA: 0x188F2AC Offset: 0x188F2AC VA: 0x188F2AC
	private void <SetNpCombineInfo>m__7() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D134 Offset: 0xD3D134 VA: 0xD3D134
	// RVA: 0x188F2E4 Offset: 0x188F2E4 VA: 0x188F2E4
	private void <SetNpCombineInfo>m__8() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D144 Offset: 0xD3D144 VA: 0xD3D144
	// RVA: 0x188F314 Offset: 0x188F314 VA: 0x188F314
	private void <SetConfirmLvExceed>m__9() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D154 Offset: 0xD3D154 VA: 0xD3D154
	// RVA: 0x188F344 Offset: 0x188F344 VA: 0x188F344
	private void <SetConfirmLvExceed>m__A() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D164 Offset: 0xD3D164 VA: 0xD3D164
	// RVA: 0x188F384 Offset: 0x188F384 VA: 0x188F384
	private void <SetConfirmLvExceed>m__B() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D174 Offset: 0xD3D174 VA: 0xD3D174
	// RVA: 0x188F3B4 Offset: 0x188F3B4 VA: 0x188F3B4
	private void <SetSvtEqLimitUpConfirmCombine>m__C() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D184 Offset: 0xD3D184 VA: 0xD3D184
	// RVA: 0x188F3E4 Offset: 0x188F3E4 VA: 0x188F3E4
	private void <SetFriendshipExceedInfo>m__D() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D194 Offset: 0xD3D194 VA: 0xD3D194
	// RVA: 0x188F414 Offset: 0x188F414 VA: 0x188F414
	private void <SetSpecialAscension>m__E() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D1A4 Offset: 0xD3D1A4 VA: 0xD3D1A4
	// RVA: 0x188F47C Offset: 0x188F47C VA: 0x188F47C
	private void <SetSpecialAscension>m__F() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D1B4 Offset: 0xD3D1B4 VA: 0xD3D1B4
	// RVA: 0x188F624 Offset: 0x188F624 VA: 0x188F624
	private void <SetSpecialAscension>m__10() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D1C4 Offset: 0xD3D1C4 VA: 0xD3D1C4
	// RVA: 0x188F7C4 Offset: 0x188F7C4 VA: 0x188F7C4
	private static void <OnClickDlgOk>m__11() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D1D4 Offset: 0xD3D1D4 VA: 0xD3D1D4
	// RVA: 0x188F7C8 Offset: 0x188F7C8 VA: 0x188F7C8
	private void <SetSpecialAscension>m__12() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D1E4 Offset: 0xD3D1E4 VA: 0xD3D1E4
	// RVA: 0x188F81C Offset: 0x188F81C VA: 0x188F81C
	private void <SetSpecialAscension>m__13() { }
}

// Namespace: 
public enum SetRarityDialogControl.DispType // TypeDefIndex: 9649
{
	// Fields
	public int value__; // 0x0
	public const SetRarityDialogControl.DispType IS_RARE = 0;
	public const SetRarityDialogControl.DispType EXE_COMBINE = 1;
	public const SetRarityDialogControl.DispType SHOW_CONFIRM = 2;
	public const SetRarityDialogControl.DispType SHORT_QP = 3;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB08F0 Offset: 0xCB08F0 VA: 0xCB08F0
private sealed class SetRarityDialogControl.<SetLimitUpInfo>c__AnonStorey0 // TypeDefIndex: 9650
{
	// Fields
	internal UserServantEntity baseData; // 0x10
	internal CombineLimitUpWarningDialog combineLimitUpWarningDialog; // 0x18
	internal SetRarityDialogControl $this; // 0x20

	// Methods

	// RVA: 0x188B53C Offset: 0x188B53C VA: 0x188B53C
	public void .ctor() { }

	// RVA: 0x188F870 Offset: 0x188F870 VA: 0x188F870
	internal void <>m__0() { }

	// RVA: 0x188FC58 Offset: 0x188FC58 VA: 0x188FC58
	internal void <>m__1(bool isDecide) { }
}

// Namespace: 
public class SpecialAscensionConfirmInfo : BaseMonoBehaviour // TypeDefIndex: 9651
{
	// Fields
	[SerializeField] // RVA: 0xCD8F80 Offset: 0xCD8F80 VA: 0xCD8F80
	private UILabel title; // 0x18
	[SerializeField] // RVA: 0xCD8F90 Offset: 0xCD8F90 VA: 0xCD8F90
	private UILabel subTitle; // 0x20
	[SerializeField] // RVA: 0xCD8FA0 Offset: 0xCD8FA0 VA: 0xCD8FA0
	private UILabel msg; // 0x28

	// Methods

	// RVA: 0x19598F8 Offset: 0x19598F8 VA: 0x19598F8
	public void .ctor() { }

	// RVA: 0x1959900 Offset: 0x1959900 VA: 0x1959900
	public void SetSpecialAscensionConfirmInfo(string text, int fontSize) { }
}

// Namespace: 
public class ServantCostumeItemInfo // TypeDefIndex: 9652
{
	// Fields
	protected UserServantEntity userServantEntity; // 0x10
	protected ServantLeaderInfo notHaveServantEntity; // 0x18
	public bool isCanRelease; // 0x20
	public bool isEventItemOpenCond; // 0x21
	public bool isReleaseItemHaving; // 0x22
	public bool isCostumeGet; // 0x23
	public bool isHavingAllReleasedCostume; // 0x24
	public bool isNotHavingAllCostumeReleaseItem; // 0x25
	public bool isHide; // 0x26
	public int allCostumeNum; // 0x28
	public int releaseCostumeNum; // 0x2C
	public int notHavingCostumeNum; // 0x30
	public int notHavingReleaseItemNum; // 0x34

	// Properties
	public UserServantEntity UserServantEntity { get; }
	public ServantLeaderInfo NotHaveSvtData { get; }
	public int SvtId { get; }
	public int ClassId { get; }
	public int Rarity { get; }
	public int Level { get; }
	public long UserSvtId { get; }
	public int ExceedCount { get; }
	public int MaxLevel { get; }
	public long CreatedAt { get; }
	public int Hp { get; }
	public int Atk { get; }
	public int AdjustHp { get; }
	public int AdjustAtk { get; }
	public int TreasureDeviceLv { get; }
	public int NowLimitCount { get; }
	public int MaxLimitCount { get; }

	// Methods

	// RVA: 0x2008D34 Offset: 0x2008D34 VA: 0x2008D34
	public void .ctor() { }

	// RVA: 0x2008D3C Offset: 0x2008D3C VA: 0x2008D3C
	public void SetUserSvtData(UserServantEntity userSvtEntity) { }

	// RVA: 0x2008E34 Offset: 0x2008E34 VA: 0x2008E34
	public void SetNotHaveSevantData(ServantLeaderInfo svtData) { }

	// RVA: 0x2008E48 Offset: 0x2008E48 VA: 0x2008E48
	public void ModifyUserSvtData(UserServantEntity userSvtEntity) { }

	// RVA: 0x2008E50 Offset: 0x2008E50 VA: 0x2008E50
	public UserServantEntity get_UserServantEntity() { }

	// RVA: 0x2008E58 Offset: 0x2008E58 VA: 0x2008E58
	public ServantLeaderInfo get_NotHaveSvtData() { }

	// RVA: 0x2008E60 Offset: 0x2008E60 VA: 0x2008E60
	public int get_SvtId() { }

	// RVA: 0x2008F04 Offset: 0x2008F04 VA: 0x2008F04
	public int get_ClassId() { }

	// RVA: 0x2009014 Offset: 0x2009014 VA: 0x2009014
	public int get_Rarity() { }

	// RVA: 0x2009058 Offset: 0x2009058 VA: 0x2009058
	public int get_Level() { }

	// RVA: 0x2009098 Offset: 0x2009098 VA: 0x2009098
	public long get_UserSvtId() { }

	// RVA: 0x2009134 Offset: 0x2009134 VA: 0x2009134
	public int get_ExceedCount() { }

	// RVA: 0x2009174 Offset: 0x2009174 VA: 0x2009174
	public int get_MaxLevel() { }

	// RVA: 0x20091B8 Offset: 0x20091B8 VA: 0x20091B8
	public long get_CreatedAt() { }

	// RVA: 0x20091D0 Offset: 0x20091D0 VA: 0x20091D0
	public int get_Hp() { }

	// RVA: 0x2009210 Offset: 0x2009210 VA: 0x2009210
	public int get_Atk() { }

	// RVA: 0x2009250 Offset: 0x2009250 VA: 0x2009250
	public int get_AdjustHp() { }

	// RVA: 0x2009290 Offset: 0x2009290 VA: 0x2009290
	public int get_AdjustAtk() { }

	// RVA: 0x20092D0 Offset: 0x20092D0 VA: 0x20092D0
	public int get_TreasureDeviceLv() { }

	// RVA: 0x2009310 Offset: 0x2009310 VA: 0x2009310
	public void GetTreasureDeviceInfo(out int tdLv, out int tdMaxLv) { }

	// RVA: 0x2009380 Offset: 0x2009380 VA: 0x2009380
	public int get_NowLimitCount() { }

	// RVA: 0x2009418 Offset: 0x2009418 VA: 0x2009418
	public int get_MaxLimitCount() { }
}

// Namespace: 
public class ServantCostumeListViewItem : ListViewItem // TypeDefIndex: 9653
{
	// Fields
	protected ServantEntity servantEntity; // 0x70
	protected ServantCostumeItemInfo servantData; // 0x78
	protected int classId; // 0x80
	protected int rarity; // 0x84
	protected bool isBaseSvt; // 0x88
	protected bool isParty; // 0x89
	protected bool isLock; // 0x8A
	protected bool isChoice; // 0x8B
	protected bool isClearAllCond; // 0x8C
	protected bool isOpenEventCostume; // 0x8D
	protected bool isReleaseItemHaving; // 0x8E
	protected bool isNotClearCond; // 0x8F
	protected bool isAlreadyGet; // 0x90
	protected bool isHeroineSvt; // 0x91
	protected bool isHavingAllReleasedCostume; // 0x92
	protected bool isNotHavingAllCostumeReleaseItem; // 0x93
	protected bool isLetgo; // 0x94
	protected int priority; // 0x98
	protected long amountSortValue; // 0xA0
	protected IconLabelInfo iconLabelInfo1; // 0xA8
	protected IconLabelInfo iconLabelInfo2; // 0xB0

	// Properties
	public int SvtId { get; }
	public UserServantEntity UserSvtEntity { get; }
	public ServantLeaderInfo NotHaveSvtData { get; }
	public IconLabelInfo IconInfo1 { get; }
	public IconLabelInfo IconInfo2 { get; }
	public bool IsBaseSvt { get; }
	public bool IsParty { get; }
	public bool IsLock { get; }
	public bool IsChoice { get; }
	public bool IsCanNotSelect { get; }
	public bool IsReleaseItemHaving { get; }
	public bool IsCanRelease { get; }
	public bool IsOpenEventCostume { get; }
	public bool IsHeroineLeave { get; }
	public bool IsHavingAllReleasedCostume { get; }
	public bool IsLetgo { get; }

	// Methods

	// RVA: 0x2009530 Offset: 0x2009530 VA: 0x2009530
	public void .ctor(ServantCostumeItemInfo info, UserServantEntity baseSvtEntity) { }

	// RVA: 0x2009C34 Offset: 0x2009C34 VA: 0x2009C34
	public void ModifyItem(UserServantEntity userSvtEntity) { }

	// RVA: 0x2009CC4 Offset: 0x2009CC4 VA: 0x2009CC4 Slot: 5
	public override bool IsMatchFilter(ListViewSort sort) { }

	// RVA: 0x2009EA8 Offset: 0x2009EA8 VA: 0x2009EA8 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x200A2F4 Offset: 0x200A2F4 VA: 0x200A2F4
	private bool checkClassFilter(ListViewSort sort) { }

	// RVA: 0x200A494 Offset: 0x200A494 VA: 0x200A494
	public void SetUpdateUserSvtEntity(UserServantEntity userSvtEntity) { }

	// RVA: 0x200A4C4 Offset: 0x200A4C4 VA: 0x200A4C4
	public int get_SvtId() { }

	// RVA: 0x200A2C0 Offset: 0x200A2C0 VA: 0x200A2C0
	public UserServantEntity get_UserSvtEntity() { }

	// RVA: 0x200A4F0 Offset: 0x200A4F0 VA: 0x200A4F0
	public ServantLeaderInfo get_NotHaveSvtData() { }

	// RVA: 0x200A51C Offset: 0x200A51C VA: 0x200A51C
	public IconLabelInfo get_IconInfo1() { }

	// RVA: 0x200A524 Offset: 0x200A524 VA: 0x200A524
	public IconLabelInfo get_IconInfo2() { }

	// RVA: 0x200A52C Offset: 0x200A52C VA: 0x200A52C
	public bool get_IsBaseSvt() { }

	// RVA: 0x200A534 Offset: 0x200A534 VA: 0x200A534
	public bool get_IsParty() { }

	// RVA: 0x200A53C Offset: 0x200A53C VA: 0x200A53C
	public bool get_IsLock() { }

	// RVA: 0x200A544 Offset: 0x200A544 VA: 0x200A544
	public bool get_IsChoice() { }

	// RVA: 0x200A54C Offset: 0x200A54C VA: 0x200A54C
	public bool get_IsCanNotSelect() { }

	// RVA: 0x200A624 Offset: 0x200A624 VA: 0x200A624
	public bool get_IsReleaseItemHaving() { }

	// RVA: 0x200A2EC Offset: 0x200A2EC VA: 0x200A2EC
	public bool get_IsCanRelease() { }

	// RVA: 0x200A62C Offset: 0x200A62C VA: 0x200A62C
	public bool get_IsOpenEventCostume() { }

	// RVA: 0x200A5A4 Offset: 0x200A5A4 VA: 0x200A5A4
	public bool get_IsHeroineLeave() { }

	// RVA: 0x200A634 Offset: 0x200A634 VA: 0x200A634
	public bool get_IsHavingAllReleasedCostume() { }

	// RVA: 0x200A63C Offset: 0x200A63C VA: 0x200A63C
	public bool get_IsLetgo() { }
}

// Namespace: 
public class ServantCostumeListViewItemDraw : BaseMonoBehaviour // TypeDefIndex: 9654
{
	// Fields
	[SerializeField] // RVA: 0xCD8FB0 Offset: 0xCD8FB0 VA: 0xCD8FB0
	private UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xCD8FC0 Offset: 0xCD8FC0 VA: 0xCD8FC0
	private UITouchPress touchPress; // 0x20
	[SerializeField] // RVA: 0xCD8FD0 Offset: 0xCD8FD0 VA: 0xCD8FD0
	private ServantFaceIconComponent servantFaceIcon; // 0x28
	[SerializeField] // RVA: 0xCD8FE0 Offset: 0xCD8FE0 VA: 0xCD8FE0
	private UIIconLabel info2IconLabel; // 0x30
	[SerializeField] // RVA: 0xCD8FF0 Offset: 0xCD8FF0 VA: 0xCD8FF0
	private UISprite removeImg; // 0x38
	[SerializeField] // RVA: 0xCD9000 Offset: 0xCD9000 VA: 0xCD9000
	private FlashingIconComponent partyIcon; // 0x40
	[SerializeField] // RVA: 0xCD9010 Offset: 0xCD9010 VA: 0xCD9010
	private UISprite lockImg; // 0x48
	[SerializeField] // RVA: 0xCD9020 Offset: 0xCD9020 VA: 0xCD9020
	private UISprite choiceImg; // 0x50
	[SerializeField] // RVA: 0xCD9030 Offset: 0xCD9030 VA: 0xCD9030
	private UILabel statusTxtLabel; // 0x58
	[SerializeField] // RVA: 0xCD9040 Offset: 0xCD9040 VA: 0xCD9040
	private UISprite maskSprite; // 0x60
	[SerializeField] // RVA: 0xCD9050 Offset: 0xCD9050 VA: 0xCD9050
	private UILabel maskLabel; // 0x68
	[SerializeField] // RVA: 0xCD9060 Offset: 0xCD9060 VA: 0xCD9060
	private UILabel nonColorStatusLabel; // 0x70

	// Methods

	// RVA: 0x200A644 Offset: 0x200A644 VA: 0x200A644
	public void .ctor() { }

	// RVA: 0x200A64C Offset: 0x200A64C VA: 0x200A64C
	public void SetItem(ServantCostumeListViewItem item, ServantCostumeListViewItemDraw.DispMode mode) { }

	// RVA: 0x200B648 Offset: 0x200B648 VA: 0x200B648
	public void SetInput(ServantCostumeListViewItem item) { }

	// RVA: 0x200AE54 Offset: 0x200AE54 VA: 0x200AE54
	private void SetButtonState(bool isEnabled) { }

	// RVA: 0x200A7E8 Offset: 0x200A7E8 VA: 0x200A7E8
	private void SetSpriteActive(UISprite sprite, bool isActive) { }

	// RVA: 0x200AF58 Offset: 0x200AF58 VA: 0x200AF58
	private void SetPartyIcon(bool isShow) { }

	// RVA: 0x200AFA8 Offset: 0x200AFA8 VA: 0x200AFA8
	private void SetMaskLabelText(ServantCostumeListViewItem item) { }

	// RVA: 0x200B198 Offset: 0x200B198 VA: 0x200B198
	private void SetStatusLabel(ServantCostumeListViewItem item) { }

	// RVA: 0x200B4BC Offset: 0x200B4BC VA: 0x200B4BC
	private void SetNonColorStatusLabel(ServantCostumeListViewItem item) { }
}

// Namespace: 
public enum ServantCostumeListViewItemDraw.DispMode // TypeDefIndex: 9655
{
	// Fields
	public int value__; // 0x0
	public const ServantCostumeListViewItemDraw.DispMode INVISIBLE = 0;
	public const ServantCostumeListViewItemDraw.DispMode INVALID = 1;
	public const ServantCostumeListViewItemDraw.DispMode VALID = 2;
	public const ServantCostumeListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class ServantCostumeListViewManager : ListViewManager // TypeDefIndex: 9656
{
	// Fields
	public static readonly string SORT_SAVE_KEY; // 0x0
	[SerializeField] // RVA: 0xCD9070 Offset: 0xCD9070 VA: 0xCD9070
	private CombineRootComponent combineRootComponent; // 0x138
	[SerializeField] // RVA: 0xCD9080 Offset: 0xCD9080 VA: 0xCD9080
	private UISprite sortExplanationSprite; // 0x140
	[SerializeField] // RVA: 0xCD9090 Offset: 0xCD9090 VA: 0xCD9090
	private UISprite filterSprite; // 0x148
	[SerializeField] // RVA: 0xCD90A0 Offset: 0xCD90A0 VA: 0xCD90A0
	private UILabel combineInfoMsgLabel; // 0x150
	[SerializeField] // RVA: 0xCD90B0 Offset: 0xCD90B0 VA: 0xCD90B0
	private UISprite bgTxtSprite; // 0x158
	private ListViewSort.ScaleType scaleType; // 0x160
	[SerializeField] // RVA: 0xCD90C0 Offset: 0xCD90C0 VA: 0xCD90C0
	private UISprite scaleChangeTabSprite; // 0x168
	[SerializeField] // RVA: 0xCD90D0 Offset: 0xCD90D0 VA: 0xCD90D0
	private ListViewItemSeed normalSizeSeed; // 0x170
	[SerializeField] // RVA: 0xCD90E0 Offset: 0xCD90E0 VA: 0xCD90E0
	private ListViewItemSeed smallSizeSeed; // 0x178
	[SerializeField] // RVA: 0xCD90F0 Offset: 0xCD90F0 VA: 0xCD90F0
	private ListViewItemSeed extremelySmallSizeSeed; // 0x180
	private static ListViewSort servantSortStatus; // 0x8
	private UserServantEntity baseUserSvtData; // 0x188
	private UserServantEntity selectUserSvtEntity; // 0x190
	private ServantCostumeListViewManager.InitMode initMode; // 0x198
	[CompilerGeneratedAttribute] // RVA: 0xCD9100 Offset: 0xCD9100 VA: 0xCD9100
	[DebuggerBrowsableAttribute] // RVA: 0xCD9100 Offset: 0xCD9100 VA: 0xCD9100
	private ServantCostumeListViewManager.CallbackFunc callbackFunc; // 0x1A0
	[CompilerGeneratedAttribute] // RVA: 0xCD913C Offset: 0xCD913C VA: 0xCD913C
	[DebuggerBrowsableAttribute] // RVA: 0xCD913C Offset: 0xCD913C VA: 0xCD913C
	private Action callbackFunc2; // 0x1A8
	private int callbackCount; // 0x1B0

	// Properties
	public List<ServantCostumeListViewObject> ObjectList { get; }
	public List<ServantCostumeListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x200B698 Offset: 0x200B698 VA: 0x200B698
	public void .ctor() { }

	// RVA: 0x200B6A0 Offset: 0x200B6A0 VA: 0x200B6A0
	private void add_callbackFunc(ServantCostumeListViewManager.CallbackFunc value) { }

	// RVA: 0x200B790 Offset: 0x200B790 VA: 0x200B790
	private void remove_callbackFunc(ServantCostumeListViewManager.CallbackFunc value) { }

	// RVA: 0x200B880 Offset: 0x200B880 VA: 0x200B880
	private void add_callbackFunc2(Action value) { }

	// RVA: 0x200B970 Offset: 0x200B970 VA: 0x200B970
	private void remove_callbackFunc2(Action value) { }

	// RVA: 0x200BA60 Offset: 0x200BA60 VA: 0x200BA60
	public List<ServantCostumeListViewObject> get_ObjectList() { }

	// RVA: 0x200BBD4 Offset: 0x200BBD4 VA: 0x200BBD4
	public List<ServantCostumeListViewObject> get_ClippingObjectList() { }

	// RVA: 0x200BDD0 Offset: 0x200BDD0 VA: 0x200BDD0
	public void CreateList() { }

	// RVA: 0x200C094 Offset: 0x200C094 VA: 0x200C094
	private ServantCostumeItemInfo[] GetServantCostumeItemInfoList(out UserServantEntity currentBase) { }

	// RVA: 0x200C6E4 Offset: 0x200C6E4 VA: 0x200C6E4
	private ServantCostumeItemInfo CreateServantCostumeItemInfo(int svtId, UserServantMaster userServantMaster, ServantCostumeMaster servantCostumeMaster, ServantCostumeReleaseMaster servantCostumeReleaseMaster) { }

	// RVA: 0x200C88C Offset: 0x200C88C VA: 0x200C88C
	private void SetServantCostumeItemInfoData(ServantCostumeItemInfo info, ServantCostumeMaster servantCostumeMaster, UserServantCollectionMaster userServantCollectionMaster, ServantCostumeReleaseMaster servantCostumeReleaseMaster) { }

	// RVA: 0x200D600 Offset: 0x200D600 VA: 0x200D600
	public void DestroyList() { }

	// RVA: 0x200D63C Offset: 0x200D63C VA: 0x200D63C
	public void ModifyItem(long userSvtId) { }

	// RVA: 0x200DB9C Offset: 0x200DB9C VA: 0x200DB9C Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x200DCD4 Offset: 0x200DCD4 VA: 0x200DCD4
	public void SetMode(ServantCostumeListViewManager.InitMode mode, ServantCostumeListViewManager.CallbackFunc callback) { }

	// RVA: 0x200DE18 Offset: 0x200DE18 VA: 0x200DE18
	public void SetMode(ServantCostumeListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x200DCDC Offset: 0x200DCDC VA: 0x200DCDC
	public void SetMode(ServantCostumeListViewManager.InitMode mode) { }

	// RVA: 0x200DE20 Offset: 0x200DE20 VA: 0x200DE20
	private void RequestListObject(ServantCostumeListViewObject.InitMode mode, float delay = 0) { }

	// RVA: 0x200E058 Offset: 0x200E058 VA: 0x200E058
	private void OnMoveEnd() { }

	// RVA: 0x200E140 Offset: 0x200E140 VA: 0x200E140
	private void OnClickListView(ListViewObject obj) { }

	// RVA: 0x200E144 Offset: 0x200E144 VA: 0x200E144
	private void OnClickSelectBase(ListViewObject obj) { }

	// RVA: 0x200E360 Offset: 0x200E360 VA: 0x200E360
	private void OnLongPushListView(ListViewObject obj) { }

	// RVA: 0x200E4B0 Offset: 0x200E4B0 VA: 0x200E4B0
	public void SetSelectBaseSvtData(UserServantEntity baseSvtData) { }

	// RVA: 0x200E4B8 Offset: 0x200E4B8 VA: 0x200E4B8
	public UserServantEntity GetSelectUserSvtEntity() { }

	// RVA: 0x200E4C0 Offset: 0x200E4C0 VA: 0x200E4C0
	public UserServantEntity GetSelectBaseSvtData() { }

	// RVA: 0x200E4C8 Offset: 0x200E4C8 VA: 0x200E4C8
	public void ResetListViewInfo() { }

	// RVA: 0x200E4D0 Offset: 0x200E4D0 VA: 0x200E4D0
	public long GetAmountSortValue(int svtId) { }

	// RVA: 0x200E5F4 Offset: 0x200E5F4 VA: 0x200E5F4
	public void OnClickFilterKind() { }

	// RVA: 0x200E6E8 Offset: 0x200E6E8 VA: 0x200E6E8
	public void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x200C4C8 Offset: 0x200C4C8 VA: 0x200C4C8
	private void SetFilterButtonImage() { }

	// RVA: 0x200E780 Offset: 0x200E780 VA: 0x200E780
	public void OnClickSortButton() { }

	// RVA: 0x200E878 Offset: 0x200E878 VA: 0x200E878
	public void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x200E908 Offset: 0x200E908 VA: 0x200E908
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x200E9F8 Offset: 0x200E9F8 VA: 0x200E9F8 Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x200EC78 Offset: 0x200EC78 VA: 0x200EC78
	public void ChangeIconScale() { }

	// RVA: 0x200EDD0 Offset: 0x200EDD0 VA: 0x200EDD0
	private static void .cctor() { }
}

// Namespace: 
public enum ServantCostumeListViewManager.InitMode // TypeDefIndex: 9657
{
	// Fields
	public int value__; // 0x0
	public const ServantCostumeListViewManager.InitMode NONE = 0;
	public const ServantCostumeListViewManager.InitMode VALID = 1;
	public const ServantCostumeListViewManager.InitMode INPUT = 2;
}

// Namespace: 
public enum ServantCostumeListViewManager.ResultKind // TypeDefIndex: 9658
{
	// Fields
	public int value__; // 0x0
	public const ServantCostumeListViewManager.ResultKind NONE = 0;
	public const ServantCostumeListViewManager.ResultKind SERVANT_STATUS = 1;
}

// Namespace: 
public sealed class ServantCostumeListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 9659
{
	// Methods

	// RVA: 0x200EE74 Offset: 0x200EE74 VA: 0x200EE74
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x200EE84 Offset: 0x200EE84 VA: 0x200EE84 Slot: 11
	public virtual void Invoke(ServantCostumeListViewManager.ResultKind kind, int index) { }

	// RVA: 0x200F0C8 Offset: 0x200F0C8 VA: 0x200F0C8 Slot: 12
	public virtual IAsyncResult BeginInvoke(ServantCostumeListViewManager.ResultKind kind, int index, AsyncCallback callback, object object) { }

	// RVA: 0x200F170 Offset: 0x200F170 VA: 0x200F170 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantCostumeListViewObject : ListViewObject // TypeDefIndex: 9660
{
	// Fields
	protected ServantCostumeListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCD9178 Offset: 0xCD9178 VA: 0xCD9178
	[DebuggerBrowsableAttribute] // RVA: 0xCD9178 Offset: 0xCD9178 VA: 0xCD9178
	private Action callbackFunc; // 0x70
	protected ServantCostumeListViewItemDraw itemDraw; // 0x78
	protected ServantCostumeListViewItemDraw.DispMode dispMode; // 0x80

	// Methods

	// RVA: 0x200F17C Offset: 0x200F17C VA: 0x200F17C
	public void .ctor() { }

	// RVA: 0x200F1E4 Offset: 0x200F1E4 VA: 0x200F1E4
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x200F2D0 Offset: 0x200F2D0 VA: 0x200F2D0
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x200F3BC Offset: 0x200F3BC VA: 0x200F3BC
	protected void Awake() { }

	// RVA: 0x200F430 Offset: 0x200F430 VA: 0x200F430
	private void Start() { }

	// RVA: 0x200BD4C Offset: 0x200BD4C VA: 0x200BD4C
	public ServantCostumeListViewItem GetItem() { }

	// RVA: 0x200F444 Offset: 0x200F444 VA: 0x200F444 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x200F474 Offset: 0x200F474 VA: 0x200F474 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x200F46C Offset: 0x200F46C VA: 0x200F46C
	protected void InitItem() { }

	// RVA: 0x200F49C Offset: 0x200F49C VA: 0x200F49C Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x200F59C Offset: 0x200F59C VA: 0x200F59C
	public void Init(ServantCostumeListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x200F890 Offset: 0x200F890 VA: 0x200F890
	public void Init(ServantCostumeListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x200DFD4 Offset: 0x200DFD4 VA: 0x200DFD4
	public void Init(ServantCostumeListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x200DC54 Offset: 0x200DC54 VA: 0x200DC54
	public void Init(ServantCostumeListViewObject.InitMode initMode) { }

	// RVA: 0x200F780 Offset: 0x200F780 VA: 0x200F780
	protected void SetupDisp() { }

	// RVA: 0x200F914 Offset: 0x200F914 VA: 0x200F914 Slot: 3
	public override string ToString() { }

	// RVA: 0x200F9E4 Offset: 0x200F9E4 VA: 0x200F9E4
	public void OnClickSelect() { }

	// RVA: 0x200FAFC Offset: 0x200FAFC VA: 0x200FAFC
	public void OnLongPush() { }
}

// Namespace: 
public enum ServantCostumeListViewObject.InitMode // TypeDefIndex: 9661
{
	// Fields
	public int value__; // 0x0
	public const ServantCostumeListViewObject.InitMode INVISIBLE = 0;
	public const ServantCostumeListViewObject.InitMode INVALID = 1;
	public const ServantCostumeListViewObject.InitMode VALID = 2;
	public const ServantCostumeListViewObject.InitMode INPUT = 3;
	public const ServantCostumeListViewObject.InitMode MODIFY = 4;
}

// Namespace: 
public enum ServantCostumeListViewObject.State // TypeDefIndex: 9662
{
	// Fields
	public int value__; // 0x0
	public const ServantCostumeListViewObject.State INIT = 0;
	public const ServantCostumeListViewObject.State IDLE = 1;
	public const ServantCostumeListViewObject.State MOVE = 2;
	public const ServantCostumeListViewObject.State INPUT = 3;
}

// Namespace: 
public class SetNoticeNumControl : BaseMonoBehaviour // TypeDefIndex: 9663
{
	// Fields
	public GameObject noticeNumberPrefab; // 0x18
	private GameObject noticeNumObj; // 0x20

	// Methods

	// RVA: 0x1887328 Offset: 0x1887328 VA: 0x1887328
	public void .ctor() { }

	// RVA: 0x1887330 Offset: 0x1887330 VA: 0x1887330
	public void setNoticeNum(int resNum) { }

	// RVA: 0x18874C8 Offset: 0x18874C8 VA: 0x18874C8
	private void clear() { }
}

// Namespace: 
public class MoveLabelTextControl : MonoBehaviour // TypeDefIndex: 9664
{
	// Fields
	private UILabel targetLb; // 0x18
	private Vector2 parentSize; // 0x20
	private Hashtable table; // 0x28
	private Vector3 lbStartPosition; // 0x30

	// Methods

	// RVA: 0x16F0000 Offset: 0x16F0000 VA: 0x16F0000
	public void .ctor() { }

	// RVA: 0x16F0068 Offset: 0x16F0068 VA: 0x16F0068
	public void setMoveTextOver(UIPanel parent, UILabel targetLb) { }

	// RVA: 0x16F05A8 Offset: 0x16F05A8 VA: 0x16F05A8
	private void onMoveComplete() { }
}

// Namespace: 
