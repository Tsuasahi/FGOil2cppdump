	private EventMaster EventMaster { get; }

	// Methods

	// RVA: 0x1993314 Offset: 0x1993314 VA: 0x1993314
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CE84 Offset: 0xD3CE84 VA: 0xD3CE84
	// RVA: 0x199331C Offset: 0x199331C VA: 0x199331C
	public int get_spendQpVal() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CE94 Offset: 0xD3CE94 VA: 0xD3CE94
	// RVA: 0x1993324 Offset: 0x1993324 VA: 0x1993324
	private void set_spendQpVal(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CEA4 Offset: 0xD3CEA4 VA: 0xD3CEA4
	// RVA: 0x199332C Offset: 0x199332C VA: 0x199332C
	public int get_getExpVal() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CEB4 Offset: 0xD3CEB4 VA: 0xD3CEB4
	// RVA: 0x1993334 Offset: 0x1993334 VA: 0x1993334
	private void set_getExpVal(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CEC4 Offset: 0xD3CEC4 VA: 0xD3CEC4
	// RVA: 0x199333C Offset: 0x199333C VA: 0x199333C
	public bool get_isExchangeSvtInList() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CED4 Offset: 0xD3CED4 VA: 0xD3CED4
	// RVA: 0x1993344 Offset: 0x1993344 VA: 0x1993344
	private void set_isExchangeSvtInList(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CEE4 Offset: 0xD3CEE4 VA: 0xD3CEE4
	// RVA: 0x1993350 Offset: 0x1993350 VA: 0x1993350
	public long[] get_selectMaterialUsrSvtIdList() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CEF4 Offset: 0xD3CEF4 VA: 0xD3CEF4
	// RVA: 0x1993358 Offset: 0x1993358 VA: 0x1993358
	private void set_selectMaterialUsrSvtIdList(long[] value) { }

	// RVA: 0x1993360 Offset: 0x1993360 VA: 0x1993360
	private EventMaster get_EventMaster() { }

	// RVA: 0x19933E0 Offset: 0x19933E0 VA: 0x19933E0 Slot: 6
	protected override EventTutorialMaster.OpenType GetTutorialOpenType() { }

	// RVA: 0x19933E8 Offset: 0x19933E8 VA: 0x19933E8
	private void Update() { }

	// RVA: 0x1993CC8 Offset: 0x1993CC8 VA: 0x1993CC8
	public void InitSvtCombine() { }

	// RVA: 0x19943FC Offset: 0x19943FC VA: 0x19943FC
	private void InitMaterialSvtInfo() { }

	// RVA: 0x1994A98 Offset: 0x1994A98 VA: 0x1994A98
	private void ResetCampaign() { }

	// RVA: 0x19946FC Offset: 0x19946FC VA: 0x19946FC
	private void InitInfo() { }

	// RVA: 0x1994BE8 Offset: 0x1994BE8 VA: 0x1994BE8
	private void SetHaveQpInfo() { }

	// RVA: 0x1994F98 Offset: 0x1994F98 VA: 0x1994F98
	public void CheckIsSelectBaseSvt(UserServantEntity selectBase) { }

	// RVA: 0x1995098 Offset: 0x1995098 VA: 0x1995098
	public void SetSelectMaterialEnable() { }

	// RVA: 0x1995148 Offset: 0x1995148 VA: 0x1995148
	public void SetBaseSvtCardImg(UserServantEntity usrSvtData) { }

	// RVA: 0x1993A18 Offset: 0x1993A18 VA: 0x1993A18
	private void SetupCampaign(EventCampaignEntity eventInfoData) { }

	// RVA: 0x1996154 Offset: 0x1996154 VA: 0x1996154
	private void CheckConductionWire() { }

	// RVA: 0x1995FA0 Offset: 0x1995FA0 VA: 0x1995FA0
	public void SetDispCardImg(UserServantEntity usrSvtData) { }

	// RVA: 0x19964E8 Offset: 0x19964E8 VA: 0x19964E8
	public void SetCombineNullData() { }

	// RVA: 0x1996550 Offset: 0x1996550 VA: 0x1996550
	public void SetCombineData(SetCombineData data) { }

	// RVA: 0x19975F4 Offset: 0x19975F4 VA: 0x19975F4
	private bool CheckIncrementLv(int lv) { }

	// RVA: 0x199774C Offset: 0x199774C VA: 0x199774C
	public void CheckRareSvt() { }

	// RVA: 0x1997794 Offset: 0x1997794 VA: 0x1997794
	private void ShowRareSvtDlg() { }

	// RVA: 0x1997B18 Offset: 0x1997B18 VA: 0x1997B18
	public void CheckExceededSvt() { }

	// RVA: 0x1997B60 Offset: 0x1997B60 VA: 0x1997B60
	private void ShowExceededSvtDlg() { }

	// RVA: 0x1997960 Offset: 0x1997960 VA: 0x1997960
	private void OnClickExeCombine() { }

	// RVA: 0x1997C38 Offset: 0x1997C38 VA: 0x1997C38
	private void OnClickCombineConductionWire() { }

	// RVA: 0x1994C7C Offset: 0x1994C7C VA: 0x1994C7C
	private void DestroyGrid() { }

	// RVA: 0x19944D0 Offset: 0x19944D0 VA: 0x19944D0
	private void SetExeBtnState() { }

	// RVA: 0x1997D00 Offset: 0x1997D00 VA: 0x1997D00
	public void SetStateInfoMsg(CombineRootComponent.StateType state) { }

	// RVA: 0x1994B80 Offset: 0x1994B80 VA: 0x1994B80
	public void SetIsRecommendedButtonEnabled(bool isEnabled) { }

	// RVA: 0x1997F40 Offset: 0x1997F40 VA: 0x1997F40
	public void OnClickMaterialSelectList() { }

	// RVA: 0x1997FC4 Offset: 0x1997FC4 VA: 0x1997FC4
	public void OnClickRecommendedButton() { }

	// RVA: 0x19980D0 Offset: 0x19980D0 VA: 0x19980D0
	private void SetRecommendedMaterial() { }

	// RVA: 0x1998A2C Offset: 0x1998A2C VA: 0x1998A2C
	private void SetMaterialToCombineData(SetCombineData recommendedCombineData) { }

	// RVA: 0x199855C Offset: 0x199855C VA: 0x199855C
	private SetCombineData GetRecommendedCombineData() { }

	// RVA: 0x1999784 Offset: 0x1999784 VA: 0x1999784
	private bool IsLevelMax(int totalExp, int expType) { }

	// RVA: 0x1998F60 Offset: 0x1998F60 VA: 0x1998F60
	private SetCombineData SetCombineData(List<UserServantEntity> targetMaterialList) { }

	// RVA: 0x199999C Offset: 0x199999C VA: 0x199999C
	private int ClassRaritySort(UserServantEntity e1, UserServantEntity e2) { }

	// RVA: 0x1998A70 Offset: 0x1998A70 VA: 0x1998A70
	private List<UserServantEntity> MixMaterialSort(SvtClassAttri.TYPE baseServantClass, List<Rarity.TYPE> checkRarityTypeList, List<UserServantEntity> materialList) { }

	// RVA: 0x1999A54 Offset: 0x1999A54 VA: 0x1999A54
	public void UnBlockTutorial() { }

	// RVA: 0x199A05C Offset: 0x199A05C VA: 0x199A05C
	public void TutorialBlock(CombineRootComponent.CombineTutorialProgress progress) { }

	// RVA: 0x199A610 Offset: 0x199A610 VA: 0x199A610
	public bool IsBaseSelect() { }

	// RVA: 0x199A618 Offset: 0x199A618 VA: 0x199A618
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CF04 Offset: 0xD3CF04 VA: 0xD3CF04
	// RVA: 0x199A67C Offset: 0x199A67C VA: 0x199A67C
	private static void <InitSvtCombine>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CF14 Offset: 0xD3CF14 VA: 0xD3CF14
	// RVA: 0x199A7F4 Offset: 0x199A7F4 VA: 0x199A7F4
	private int <SetBaseSvtCardImg>m__1(EventCampaignEntity a, EventCampaignEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CF24 Offset: 0xD3CF24 VA: 0xD3CF24
	// RVA: 0x199A934 Offset: 0x199A934 VA: 0x199A934
	private static int <SetBaseSvtCardImg>m__2(List<EventCampaignEntity> a, List<EventCampaignEntity> b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CF34 Offset: 0xD3CF34 VA: 0xD3CF34
	// RVA: 0x199A9E4 Offset: 0x199A9E4 VA: 0x199A9E4
	private void <OnClickRecommendedButton>m__3(bool isDecide) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CF44 Offset: 0xD3CF44 VA: 0xD3CF44
	// RVA: 0x199AA1C Offset: 0x199AA1C VA: 0x199AA1C
	private static void <SetRecommendedMaterial>m__4() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CF54 Offset: 0xD3CF54 VA: 0xD3CF54
	// RVA: 0x199AA7C Offset: 0x199AA7C VA: 0x199AA7C
	private static int <MixMaterialSort>m__5(UserServantEntity a, UserServantEntity b) { }
}

// Namespace: 
private enum ServantCombineControl.ConductionType // TypeDefIndex: 9597
{
	// Fields
	public int value__; // 0x0
	public const ServantCombineControl.ConductionType NONE = 0;
	public const ServantCombineControl.ConductionType LIMIT_UP = 1;
	public const ServantCombineControl.ConductionType LVEXCEED = 2;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB0880 Offset: 0xCB0880 VA: 0xCB0880
private sealed class ServantCombineControl.<SetRecommendedMaterial>c__AnonStorey0 // TypeDefIndex: 9598
{
	// Fields
	internal SetCombineData recommendedCombineData; // 0x10
	internal ServantCombineControl $this; // 0x18

	// Methods

	// RVA: 0x1998554 Offset: 0x1998554 VA: 0x1998554
	public void .ctor() { }

	// RVA: 0x199AAD0 Offset: 0x199AAD0 VA: 0x199AAD0
	internal void <>m__0(bool isDecide) { }

	// RVA: 0x199ABA0 Offset: 0x199ABA0 VA: 0x199ABA0
	internal void <>m__1() { }
}

// Namespace: 
public class ServantCombineResultInfoComponent : BaseDialog // TypeDefIndex: 9599
{
	// Fields
	[SerializeField] // RVA: 0xCD7BB8 Offset: 0xCD7BB8 VA: 0xCD7BB8
	protected UIGrid resultInfoGrid; // 0x58
	[SerializeField] // RVA: 0xCD7BC8 Offset: 0xCD7BC8 VA: 0xCD7BC8
	protected GameObject levleUpInfo; // 0x60
	[SerializeField] // RVA: 0xCD7BD8 Offset: 0xCD7BD8 VA: 0xCD7BD8
	protected UILabel levelUpTitleLb; // 0x68
	[SerializeField] // RVA: 0xCD7BE8 Offset: 0xCD7BE8 VA: 0xCD7BE8
	protected UILabel befLevelLb; // 0x70
	[SerializeField] // RVA: 0xCD7BF8 Offset: 0xCD7BF8 VA: 0xCD7BF8
	protected UILabel currentLevelLb; // 0x78
	[SerializeField] // RVA: 0xCD7C08 Offset: 0xCD7C08 VA: 0xCD7C08
	protected UILabel currentHpLb; // 0x80
	[SerializeField] // RVA: 0xCD7C18 Offset: 0xCD7C18 VA: 0xCD7C18
	protected UILabel increHpLb; // 0x88
	[SerializeField] // RVA: 0xCD7C28 Offset: 0xCD7C28 VA: 0xCD7C28
	protected UILabel currentAtkLb; // 0x90
	[SerializeField] // RVA: 0xCD7C38 Offset: 0xCD7C38 VA: 0xCD7C38
	protected UILabel increAtkLb; // 0x98
	protected List<GameObject> resInfoList; // 0xA0
	protected Vector3 center; // 0xA8
	protected Action openCallBack; // 0xB8
	protected ServantCombineResultInfoComponent.State state; // 0xC0

	// Methods

	// RVA: 0x199AF10 Offset: 0x199AF10 VA: 0x199AF10
	public void .ctor() { }

	// RVA: 0x199AF78 Offset: 0x199AF78 VA: 0x199AF78
	public void Init() { }

	// RVA: 0x199B25C Offset: 0x199B25C VA: 0x199B25C
	public void OpenResultInfo(List<GameObject> resInfo, Action callback) { }

	// RVA: 0x199B780 Offset: 0x199B780 VA: 0x199B780
	public void OpenLevelUpInfo(LevelUpInfoData infoData, Action callback) { }

	// RVA: 0x199B53C Offset: 0x199B53C VA: 0x199B53C
	protected void setCenter() { }

	// RVA: 0x199B144 Offset: 0x199B144 VA: 0x199B144
	protected void clearInfoGrid() { }

	// RVA: 0x199BB74 Offset: 0x199BB74 VA: 0x199BB74
	protected void EndOpen() { }

	// RVA: 0x199BB90 Offset: 0x199BB90 VA: 0x199BB90
	public void Close() { }

	// RVA: 0x199BBFC Offset: 0x199BBFC VA: 0x199BBFC
	public void Close(Action callback) { }

	// RVA: 0x199BC74 Offset: 0x199BC74 VA: 0x199BC74
	protected void EndClose() { }
}

// Namespace: 
protected enum ServantCombineResultInfoComponent.State // TypeDefIndex: 9600
{
	// Fields
	public int value__; // 0x0
	public const ServantCombineResultInfoComponent.State INIT = 0;
}

// Namespace: 
public class SetSelectSvtInfoComponent : MonoBehaviour // TypeDefIndex: 9601
{
	// Fields
	public ServantFaceIconComponent svtFaceInfo; // 0x18

	// Methods

	// RVA: 0x1890BD0 Offset: 0x1890BD0 VA: 0x1890BD0
	public void .ctor() { }

	// RVA: 0x1890BD8 Offset: 0x1890BD8 VA: 0x1890BD8
	public void setSvtInfo(long usrSvtId) { }
}

// Namespace: 
public class CostumeEventItemConfirmInfo : BaseMonoBehaviour // TypeDefIndex: 9602
{
	// Fields
	[SerializeField] // RVA: 0xCD7C48 Offset: 0xCD7C48 VA: 0xCD7C48
	private UILabel title; // 0x18
	[SerializeField] // RVA: 0xCD7C58 Offset: 0xCD7C58 VA: 0xCD7C58
	private UILabel subTitle; // 0x20
	[SerializeField] // RVA: 0xCD7C68 Offset: 0xCD7C68 VA: 0xCD7C68
	private UILabel reqItemLabel; // 0x28
	[SerializeField] // RVA: 0xCD7C78 Offset: 0xCD7C78 VA: 0xCD7C78
	private UILabel reqItemCountLabel; // 0x30
	[SerializeField] // RVA: 0xCD7C88 Offset: 0xCD7C88 VA: 0xCD7C88
	private UILabel haveItemLabel; // 0x38
	[SerializeField] // RVA: 0xCD7C98 Offset: 0xCD7C98 VA: 0xCD7C98
	private UILabel haveItemCountLabel; // 0x40
	[SerializeField] // RVA: 0xCD7CA8 Offset: 0xCD7CA8 VA: 0xCD7CA8
	private UILabel msg; // 0x48
	[SerializeField] // RVA: 0xCD7CB8 Offset: 0xCD7CB8 VA: 0xCD7CB8
	private LimitCntUpItemComponent itemIcon; // 0x50

	// Methods

	// RVA: 0x1977148 Offset: 0x1977148 VA: 0x1977148
	public void .ctor() { }

	// RVA: 0x1977150 Offset: 0x1977150 VA: 0x1977150
	public void Set(EventCombineCostumeEntity ent) { }
}

// Namespace: 
public class CostumeEventItemOrNeedItemConfirmInfo : BaseMonoBehaviour // TypeDefIndex: 9603
{
	// Fields
	[SerializeField] // RVA: 0xCD7CC8 Offset: 0xCD7CC8 VA: 0xCD7CC8
	private UILabel title; // 0x18
	[SerializeField] // RVA: 0xCD7CD8 Offset: 0xCD7CD8 VA: 0xCD7CD8
	private UILabel subTitle; // 0x20
	[SerializeField] // RVA: 0xCD7CE8 Offset: 0xCD7CE8 VA: 0xCD7CE8
	private UICommonButton useNeedItemButton; // 0x28
	[SerializeField] // RVA: 0xCD7CF8 Offset: 0xCD7CF8 VA: 0xCD7CF8
	private UILabel needItemLabel; // 0x30
	[SerializeField] // RVA: 0xCD7D08 Offset: 0xCD7D08 VA: 0xCD7D08
	private GameObject combineItemInfoPrefab; // 0x38
	[SerializeField] // RVA: 0xCD7D18 Offset: 0xCD7D18 VA: 0xCD7D18
	private UIGrid itemInfoGrid; // 0x40
	[SerializeField] // RVA: 0xCD7D28 Offset: 0xCD7D28 VA: 0xCD7D28
	private LimitCntUpItemComponent[] limitItemList; // 0x48
	[SerializeField] // RVA: 0xCD7D38 Offset: 0xCD7D38 VA: 0xCD7D38
	private UICommonButton useEventItemButton; // 0x50
	[SerializeField] // RVA: 0xCD7D48 Offset: 0xCD7D48 VA: 0xCD7D48
	private UILabel eventItemLabel; // 0x58
	[SerializeField] // RVA: 0xCD7D58 Offset: 0xCD7D58 VA: 0xCD7D58
	private LimitCntUpItemComponent eventItemIcon; // 0x60
	private EventEntity eventEnt; // 0x68

	// Methods

	// RVA: 0x19776B0 Offset: 0x19776B0 VA: 0x19776B0
	public void .ctor() { }

	// RVA: 0x19776B8 Offset: 0x19776B8 VA: 0x19776B8
	public void Set(CombineCostumeEntity combineCostumeEnt, EventCombineCostumeEntity eventCombineCostumeEnt, bool isShortNeedItemOrQp, bool isShortEvemtItem, Action<bool> callBack) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB0890 Offset: 0xCB0890 VA: 0xCB0890
private sealed class CostumeEventItemOrNeedItemConfirmInfo.<Set>c__AnonStorey0 // TypeDefIndex: 9604
{
	// Fields
	internal Action<bool> callBack; // 0x10

	// Methods

	// RVA: 0x1977D6C Offset: 0x1977D6C VA: 0x1977D6C
	public void .ctor() { }

	// RVA: 0x1977D74 Offset: 0x1977D74 VA: 0x1977D74
	internal void <>m__0() { }

	// RVA: 0x1977DD8 Offset: 0x1977DD8 VA: 0x1977DD8
	internal void <>m__1() { }
}

// Namespace: 
public class CostumeListViewItem : ListViewItem // TypeDefIndex: 9605
{
	// Fields
	protected ServantCostumeEntity costumeEntity; // 0x70
	protected UserServantEntity baseSvt; // 0x78
	protected CostumeListViewItem.Type releaseType; // 0x80
	protected bool isNotClearCond; // 0x84
	protected bool isNotClearCostumeRelease; // 0x85
	protected bool isNotOpenEventCostume; // 0x86
	protected bool isNotHaveReleaseItem; // 0x87
	protected bool isAlreadyGet; // 0x88
	protected bool isHide; // 0x89
	protected string closedMessage; // 0x90

	// Properties
	public bool IsCanNotRelease { get; }
	public bool IsNotClearCostumeRelease { get; }
	public bool IsNotOpenEventCostume { get; }
	public ServantCostumeEntity CostumeEntity { get; }
	public bool IsNotHaveReleaseItem { get; }
	public CostumeListViewItem.Type ReleaseType { get; }
	public string getCostumeName { get; }
	public string getCostumeDetail { get; }
	public string getClosedMessage { get; }
	public UserServantEntity BaseSvt { get; }
	public bool IsAlreadyGet { get; }

	// Methods

	// RVA: 0x1977E44 Offset: 0x1977E44 VA: 0x1977E44
	public void .ctor(ServantCostumeEntity data, UserServantEntity baseSvt) { }

	// RVA: 0x19783A4 Offset: 0x19783A4 VA: 0x19783A4 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x197839C Offset: 0x197839C VA: 0x197839C
	public bool get_IsCanNotRelease() { }

	// RVA: 0x1978404 Offset: 0x1978404 VA: 0x1978404
	public bool get_IsNotClearCostumeRelease() { }

	// RVA: 0x1978394 Offset: 0x1978394 VA: 0x1978394
	public bool get_IsNotOpenEventCostume() { }

	// RVA: 0x197840C Offset: 0x197840C VA: 0x197840C
	public ServantCostumeEntity get_CostumeEntity() { }

	// RVA: 0x1978414 Offset: 0x1978414 VA: 0x1978414
	public bool get_IsNotHaveReleaseItem() { }

	// RVA: 0x197841C Offset: 0x197841C VA: 0x197841C
	public CostumeListViewItem.Type get_ReleaseType() { }

	// RVA: 0x1978424 Offset: 0x1978424 VA: 0x1978424
	public string get_getCostumeName() { }

	// RVA: 0x1978450 Offset: 0x1978450 VA: 0x1978450
	public string get_getCostumeDetail() { }

	// RVA: 0x197847C Offset: 0x197847C VA: 0x197847C
	public string get_getClosedMessage() { }

	// RVA: 0x1978484 Offset: 0x1978484 VA: 0x1978484
	public UserServantEntity get_BaseSvt() { }

	// RVA: 0x197848C Offset: 0x197848C VA: 0x197848C
	public bool get_IsAlreadyGet() { }
}

// Namespace: 
public enum CostumeListViewItem.Type // TypeDefIndex: 9606
{
	// Fields
	public int value__; // 0x0
	public const CostumeListViewItem.Type CLEAR_CONDITION = 0;
	public const CostumeListViewItem.Type NOT_CLEAR_CONDITION = 1;
	public const CostumeListViewItem.Type NOT_HAVING_RELEASE_ITEM = 2;
	public const CostumeListViewItem.Type ALREADY_GET = 3;
	public const CostumeListViewItem.Type EVENT_COSTUME_CLEAR_CONDITION = 4;
	public const CostumeListViewItem.Type EVENT_COSTUME_NOT_CLEAR_CONDITION = 5;
}

// Namespace: 
public class CostumeListViewItemDraw : BaseMonoBehaviour // TypeDefIndex: 9607
{
	// Fields
	public static readonly string RELEASE_OK_MARK; // 0x0
	public static readonly string RELEASE_NG_MARK; // 0x8
	public static readonly string RELEASE_ALREADY_GET_MARK; // 0x10
	[SerializeField] // RVA: 0xCD7D68 Offset: 0xCD7D68 VA: 0xCD7D68
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xCD7D78 Offset: 0xCD7D78 VA: 0xCD7D78
	protected UISprite faceIconFrame; // 0x20
	[SerializeField] // RVA: 0xCD7D88 Offset: 0xCD7D88 VA: 0xCD7D88
	protected UISprite faceIcon; // 0x28
	[SerializeField] // RVA: 0xCD7D98 Offset: 0xCD7D98 VA: 0xCD7D98
	protected UISprite costomIcon; // 0x30
	[SerializeField] // RVA: 0xCD7DA8 Offset: 0xCD7DA8 VA: 0xCD7DA8
	protected UILabel canReleaseMark; // 0x38
	[SerializeField] // RVA: 0xCD7DB8 Offset: 0xCD7DB8 VA: 0xCD7DB8
	protected UISprite releaseStatusInfo; // 0x40
	[SerializeField] // RVA: 0xCD7DC8 Offset: 0xCD7DC8 VA: 0xCD7DC8
	protected UILabel costumeNameLb; // 0x48
	[SerializeField] // RVA: 0xCD7DD8 Offset: 0xCD7DD8 VA: 0xCD7DD8
	protected UILabel costumeDetailLb; // 0x50
	[SerializeField] // RVA: 0xCD7DE8 Offset: 0xCD7DE8 VA: 0xCD7DE8
	protected UISprite maskSprite; // 0x58
	[SerializeField] // RVA: 0xCD7DF8 Offset: 0xCD7DF8 VA: 0xCD7DF8
	protected UILabel maskOnText; // 0x60

	// Methods

	// RVA: 0x1978494 Offset: 0x1978494 VA: 0x1978494
	public void .ctor() { }

	// RVA: 0x197849C Offset: 0x197849C VA: 0x197849C
	public void SetItem(CostumeListViewItem item, CostumeListViewItemDraw.DispMode mode) { }

	// RVA: 0x19791C0 Offset: 0x19791C0 VA: 0x19791C0
	public void SetInput(CostumeListViewItem item) { }

	// RVA: 0x1978EC4 Offset: 0x1978EC4 VA: 0x1978EC4
	public void SetCostumeIcon(ServantCostumeEntity svtCostumeEntity) { }

	// RVA: 0x1979398 Offset: 0x1979398 VA: 0x1979398
	private static void .cctor() { }
}

// Namespace: 
public enum CostumeListViewItemDraw.DispMode // TypeDefIndex: 9608
{
	// Fields
	public int value__; // 0x0
	public const CostumeListViewItemDraw.DispMode INVISIBLE = 0;
	public const CostumeListViewItemDraw.DispMode INVALID = 1;
	public const CostumeListViewItemDraw.DispMode VALID = 2;
	public const CostumeListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class CostumeListViewManager : ListViewManager // TypeDefIndex: 9609
{
	// Fields
	private static readonly float LIST_BASE_POS_Y; // 0x0
	private static readonly float LIST_ITEM_HEIGHT; // 0x4
	[SerializeField] // RVA: 0xCD7E08 Offset: 0xCD7E08 VA: 0xCD7E08
	private CombineRootComponent combineRootComponent; // 0x138
	protected CostumeListViewManager.InitMode initMode; // 0x140
	[CompilerGeneratedAttribute] // RVA: 0xCD7E18 Offset: 0xCD7E18 VA: 0xCD7E18
	[DebuggerBrowsableAttribute] // RVA: 0xCD7E18 Offset: 0xCD7E18 VA: 0xCD7E18
	private Action callbackFunc2; // 0x148
	protected int callbackCount; // 0x150
	private ServantCostumeEntity baseSvtCostume; // 0x158

	// Properties
	public List<CostumeListViewObject> ObjectList { get; }
	public List<CostumeListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x1979420 Offset: 0x1979420 VA: 0x1979420
	public void .ctor() { }

	// RVA: 0x1979428 Offset: 0x1979428 VA: 0x1979428
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x1979518 Offset: 0x1979518 VA: 0x1979518
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x1979608 Offset: 0x1979608 VA: 0x1979608
	public List<CostumeListViewObject> get_ObjectList() { }

	// RVA: 0x197977C Offset: 0x197977C VA: 0x197977C
	public List<CostumeListViewObject> get_ClippingObjectList() { }

	// RVA: 0x19799B4 Offset: 0x19799B4 VA: 0x19799B4
	public void CreateList(UserServantEntity baseSvtData) { }

	// RVA: 0x1979C78 Offset: 0x1979C78 VA: 0x1979C78
	public CostumeListViewItem GetItem(int index) { }

	// RVA: 0x1979D20 Offset: 0x1979D20 VA: 0x1979D20 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1979E58 Offset: 0x1979E58 VA: 0x1979E58
	public void SetMode(CostumeListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1979E60 Offset: 0x1979E60 VA: 0x1979E60
	public void SetMode(CostumeListViewManager.InitMode mode) { }

	// RVA: 0x1979ED4 Offset: 0x1979ED4 VA: 0x1979ED4
	protected void RequestListObject(CostumeListViewObject.InitMode mode, float delay = 0) { }

	// RVA: 0x197A10C Offset: 0x197A10C VA: 0x197A10C
	protected void OnMoveEnd() { }

	// RVA: 0x197A1D8 Offset: 0x197A1D8 VA: 0x197A1D8
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x197A1DC Offset: 0x197A1DC VA: 0x197A1DC
	protected void OnClickSelectListView(ListViewObject obj) { }

	// RVA: 0x197A2D4 Offset: 0x197A2D4 VA: 0x197A2D4
	public ServantCostumeEntity GetSelctedCostumeEntity() { }

	// RVA: 0x197A2DC Offset: 0x197A2DC VA: 0x197A2DC
	private static void .cctor() { }
}

// Namespace: 
public enum CostumeListViewManager.InitMode // TypeDefIndex: 9610
{
	// Fields
	public int value__; // 0x0
	public const CostumeListViewManager.InitMode NONE = 0;
	public const CostumeListViewManager.InitMode VALID = 1;
	public const CostumeListViewManager.InitMode INPUT = 2;
}

// Namespace: 
public class CostumeListViewObject : ListViewObject // TypeDefIndex: 9611
{
	// Fields
	protected CostumeListViewObject.State state; // 0x6C
	protected CostumeListViewItemDraw.DispMode dispMode; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xCD7E54 Offset: 0xCD7E54 VA: 0xCD7E54
	[DebuggerBrowsableAttribute] // RVA: 0xCD7E54 Offset: 0xCD7E54 VA: 0xCD7E54
	private Action callbackFunc; // 0x78
	protected CostumeListViewItemDraw itemDraw; // 0x80

	// Methods

	// RVA: 0x197A340 Offset: 0x197A340 VA: 0x197A340
	public void .ctor() { }

	// RVA: 0x197A3A8 Offset: 0x197A3A8 VA: 0x197A3A8
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x197A494 Offset: 0x197A494 VA: 0x197A494
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x197A580 Offset: 0x197A580 VA: 0x197A580
	protected void Awake() { }

	// RVA: 0x1979930 Offset: 0x1979930 VA: 0x1979930
	public CostumeListViewItem GetItem() { }

	// RVA: 0x197A5F4 Offset: 0x197A5F4 VA: 0x197A5F4 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x197A624 Offset: 0x197A624 VA: 0x197A624 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x197A61C Offset: 0x197A61C VA: 0x197A61C
	protected void InitItem() { }

	// RVA: 0x197A64C Offset: 0x197A64C VA: 0x197A64C Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x197A74C Offset: 0x197A74C VA: 0x197A74C
	public void Init(CostumeListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x197AA18 Offset: 0x197AA18 VA: 0x197AA18
	public void Init(CostumeListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x197A088 Offset: 0x197A088 VA: 0x197A088
	public void Init(CostumeListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x1979DD8 Offset: 0x1979DD8 VA: 0x1979DD8
	public void Init(CostumeListViewObject.InitMode initMode) { }

	// RVA: 0x197A908 Offset: 0x197A908 VA: 0x197A908
	protected void SetupDisp() { }

	// RVA: 0x197AA9C Offset: 0x197AA9C VA: 0x197AA9C Slot: 3
	public override string ToString() { }

	// RVA: 0x197AB6C Offset: 0x197AB6C VA: 0x197AB6C
	public void OnClickSelect() { }
}

// Namespace: 
public enum CostumeListViewObject.InitMode // TypeDefIndex: 9612
{
	// Fields
	public int value__; // 0x0
	public const CostumeListViewObject.InitMode INVISIBLE = 0;
	public const CostumeListViewObject.InitMode INVALID = 1;
	public const CostumeListViewObject.InitMode VALID = 2;
	public const CostumeListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum CostumeListViewObject.State // TypeDefIndex: 9613
{
	// Fields
	public int value__; // 0x0
	public const CostumeListViewObject.State INIT = 0;
	public const CostumeListViewObject.State IDLE = 1;
	public const CostumeListViewObject.State INPUT = 2;
}

// Namespace: 
public class ServantCostumeControl : CombineMenuControl // TypeDefIndex: 9614
{
	// Fields
	private static readonly Color defaultDetailColor; // 0x0
	[SerializeField] // RVA: 0xCD7E90 Offset: 0xCD7E90 VA: 0xCD7E90
	private UILabel detailInfoLb; // 0x68
	public CostumeListViewManager costumeListInfo; // 0x70
	[SerializeField] // RVA: 0xCD7EA0 Offset: 0xCD7EA0 VA: 0xCD7EA0
	private GameObject costumeReleaseInfo; // 0x78
	[SerializeField] // RVA: 0xCD7EB0 Offset: 0xCD7EB0 VA: 0xCD7EB0
	private UILabel spendQpLb; // 0x80
	[SerializeField] // RVA: 0xCD7EC0 Offset: 0xCD7EC0 VA: 0xCD7EC0
	private UILabel haveQpLb; // 0x88
	[SerializeField] // RVA: 0xCD7ED0 Offset: 0xCD7ED0 VA: 0xCD7ED0
	private LimitCntUpItemComponent[] itemInfos; // 0x90
	[SerializeField] // RVA: 0xCD7EE0 Offset: 0xCD7EE0 VA: 0xCD7EE0
	private UISprite costumeFaceIconFrame; // 0x98
	[SerializeField] // RVA: 0xCD7EF0 Offset: 0xCD7EF0 VA: 0xCD7EF0
	private UISprite costumeFaceIcon; // 0xA0
	[SerializeField] // RVA: 0xCD7F00 Offset: 0xCD7F00 VA: 0xCD7F00
	private UILabel costumeNameLb; // 0xA8
	[SerializeField] // RVA: 0xCD7F10 Offset: 0xCD7F10 VA: 0xCD7F10
	private UILabel conditionLb; // 0xB0
	[SerializeField] // RVA: 0xCD7F20 Offset: 0xCD7F20 VA: 0xCD7F20
	private GameObject alreadyGetInfo; // 0xB8
	[SerializeField] // RVA: 0xCD7F30 Offset: 0xCD7F30 VA: 0xCD7F30
	private UILabel alreadyGetLabel; // 0xC0
	[SerializeField] // RVA: 0xCD7F40 Offset: 0xCD7F40 VA: 0xCD7F40
	private Transform[] alreadyGetLabelBgList; // 0xC8
	[SerializeField] // RVA: 0xCD7F50 Offset: 0xCD7F50 VA: 0xCD7F50
	private UICommonButton executeButton; // 0xD0
	private bool isBaseSelect; // 0xD8
	private UserServantEntity baseSvt; // 0xE0
	private ServantCostumeEntity baseSvtCostume; // 0xE8
	private UICharaGraphTexture charaGraph; // 0xF0
	[CompilerGeneratedAttribute] // RVA: 0xCD7F60 Offset: 0xCD7F60 VA: 0xCD7F60
	[DebuggerBrowsableAttribute] // RVA: 0xCD7F60 Offset: 0xCD7F60 VA: 0xCD7F60
	private bool <isBaseSvtFromStorage>k__BackingField; // 0xF8
	private int haveQpVal; // 0xFC
	private int spendQpVal; // 0x100
	private bool isCanCombine; // 0x104
	private bool isNotClearReleaseCond; // 0x105
	private bool isShortQp; // 0x106
	private bool isShortNeedItem; // 0x107
	private List<LimitCntUpItemComponent> itemInfoList; // 0x108
	private EventCombineCostumeEntity eventCombineCostumeEnt; // 0x110
	[SerializeField] // RVA: 0xCD7F9C Offset: 0xCD7F9C VA: 0xCD7F9C
	private UIWidget eventCombineCostumeBalloon; // 0x118
	public AssetData eventCombineCostumeBalloonData; // 0x120
	private bool isShortEventItem; // 0x128
	[SerializeField] // RVA: 0xCD7FAC Offset: 0xCD7FAC VA: 0xCD7FAC
	private LimitCntUpItemComponent eventItemIcon; // 0x130
	private const int CONFIRM_COSTUME_COMBINE_COND_JOIN_SERVANT_HEIGHT = 290;
	private const float CONFIRM_COSTUME_COMBINE_COND_JOIN_SERVANT_Y = 14.7;

	// Properties
	public bool isBaseSvtFromStorage { get; set; }

	// Methods

	// RVA: 0x2004D0C Offset: 0x2004D0C VA: 0x2004D0C
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CF64 Offset: 0xD3CF64 VA: 0xD3CF64
	// RVA: 0x2004D14 Offset: 0x2004D14 VA: 0x2004D14
	public bool get_isBaseSvtFromStorage() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CF74 Offset: 0xD3CF74 VA: 0xD3CF74
	// RVA: 0x2004D1C Offset: 0x2004D1C VA: 0x2004D1C
	private void set_isBaseSvtFromStorage(bool value) { }

	// RVA: 0x2004D28 Offset: 0x2004D28 VA: 0x2004D28 Slot: 6
	protected override EventTutorialMaster.OpenType GetTutorialOpenType() { }

	// RVA: 0x2004D30 Offset: 0x2004D30 VA: 0x2004D30
	public void InitCombineCostume() { }

	// RVA: 0x2004F18 Offset: 0x2004F18 VA: 0x2004F18
	private void InitDispInfo() { }

	// RVA: 0x2005524 Offset: 0x2005524 VA: 0x2005524
	public void InitCombineCostumeInfo() { }

	// RVA: 0x2005798 Offset: 0x2005798 VA: 0x2005798
	public void CheckIsSelectBaseSvt(UserServantEntity selectBase) { }

	// RVA: 0x20058AC Offset: 0x20058AC VA: 0x20058AC
	public void SetBaseSvtCardImg(UserServantEntity userSvtData) { }

	// RVA: 0x2005A64 Offset: 0x2005A64 VA: 0x2005A64
	public void ShowCostumeList() { }

	// RVA: 0x2005B00 Offset: 0x2005B00 VA: 0x2005B00
	public void ShowCostumeCombineInfo() { }

	// RVA: 0x2005084 Offset: 0x2005084 VA: 0x2005084
	private void SetHaveQpInfo() { }

	// RVA: 0x2005D88 Offset: 0x2005D88 VA: 0x2005D88
	private void SetSvtCostumeCombineData() { }

	// RVA: 0x20076DC Offset: 0x20076DC VA: 0x20076DC
	public void DestroyCostumeList() { }

	// RVA: 0x2005518 Offset: 0x2005518 VA: 0x2005518
	public void ResetInit() { }

	// RVA: 0x20058A0 Offset: 0x20058A0 VA: 0x20058A0
	public void InitBaseCostume() { }

	// RVA: 0x2004FE4 Offset: 0x2004FE4 VA: 0x2004FE4
	private void ClearItemList() { }

	// RVA: 0x200770C Offset: 0x200770C VA: 0x200770C
	public UserServantEntity getBaseSelectedSvt() { }

	// RVA: 0x2007900 Offset: 0x2007900 VA: 0x2007900
	public ServantCostumeEntity getBaseSvtCostume() { }

	// RVA: 0x2007908 Offset: 0x2007908 VA: 0x2007908
	public bool getExeBtnState() { }

	// RVA: 0x200542C Offset: 0x200542C VA: 0x200542C
	private void SetExeBtnState() { }

	// RVA: 0x2007910 Offset: 0x2007910 VA: 0x2007910
	public void SetStateInfoMsg(CombineRootComponent.StateType state) { }

	// RVA: 0x2007BBC Offset: 0x2007BBC VA: 0x2007BBC
	public void OnClickExeCostumeCombine() { }

	// RVA: 0x2005118 Offset: 0x2005118 VA: 0x2005118
	private void RefreshAlreadyGetInfo() { }

	// RVA: 0x200681C Offset: 0x200681C VA: 0x200681C
	public void RefreshEventCostumeInfo() { }

	// RVA: 0x2008254 Offset: 0x2008254 VA: 0x2008254
	public void ResetEventCombineCostume() { }

	// RVA: 0x2008260 Offset: 0x2008260 VA: 0x2008260 Slot: 4
	public override void OnClickBase() { }

	// RVA: 0x20082E4 Offset: 0x20082E4 VA: 0x20082E4
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CF84 Offset: 0xD3CF84 VA: 0xD3CF84
	// RVA: 0x2008364 Offset: 0x2008364 VA: 0x2008364
	private void <OnClickExeCostumeCombine>m__0(bool decide) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CF94 Offset: 0xD3CF94 VA: 0xD3CF94
	// RVA: 0x2008454 Offset: 0x2008454 VA: 0x2008454
	private void <OnClickExeCostumeCombine>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CFA4 Offset: 0xD3CFA4 VA: 0xD3CFA4
	// RVA: 0x2008554 Offset: 0x2008554 VA: 0x2008554
	private void <OnClickExeCostumeCombine>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CFB4 Offset: 0xD3CFB4 VA: 0xD3CFB4
	// RVA: 0x2008590 Offset: 0x2008590 VA: 0x2008590
	private void <OnClickExeCostumeCombine>m__3() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CFC4 Offset: 0xD3CFC4 VA: 0xD3CFC4
	// RVA: 0x20085CC Offset: 0x20085CC VA: 0x20085CC
	private void <OnClickExeCostumeCombine>m__4() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB08A0 Offset: 0xCB08A0 VA: 0xCB08A0
private sealed class ServantCostumeControl.<OnClickExeCostumeCombine>c__AnonStorey0 // TypeDefIndex: 9615
{
	// Fields
	internal CombineCostumeEntity combineCostumeEntity; // 0x10
	internal ServantCostumeControl $this; // 0x18

	// Methods

	// RVA: 0x20081D0 Offset: 0x20081D0 VA: 0x20081D0
	public void .ctor() { }

	// RVA: 0x2008694 Offset: 0x2008694 VA: 0x2008694
	internal void <>m__0(bool useEventItem) { }
}

// Namespace: 
private sealed class ServantCostumeControl.<OnClickExeCostumeCombine>c__AnonStorey0.<OnClickExeCostumeCombine>c__AnonStorey1 // TypeDefIndex: 9616
{
	// Fields
	internal bool useEventItem; // 0x10
	internal ServantCostumeControl.<OnClickExeCostumeCombine>c__AnonStorey0 <>f__ref$0; // 0x18

	// Methods

	// RVA: 0x2008864 Offset: 0x2008864 VA: 0x2008864
	public void .ctor() { }

	// RVA: 0x200886C Offset: 0x200886C VA: 0x200886C
	internal void <>m__0() { }
}

// Namespace: 
public class ServantCostumeEventBalloon : MonoBehaviour // TypeDefIndex: 9617
{
	// Fields
	[SerializeField] // RVA: 0xCD7FBC Offset: 0xCD7FBC VA: 0xCD7FBC
	private UISprite itemSprite; // 0x18

	// Methods

	// RVA: 0x2008D2C Offset: 0x2008D2C VA: 0x2008D2C
	public void .ctor() { }

	// RVA: 0x20081D8 Offset: 0x20081D8 VA: 0x20081D8
	public void Set(int itemId) { }
}

// Namespace: 
public class CombineExpUpClassInfo : MonoBehaviour // TypeDefIndex: 9618
{
	// Fields
	private static readonly int NUM4_CELL_WIDTH; // 0x0
	private static readonly int NUM5_CELL_WIDTH; // 0x4
	private static readonly float NUM4_SCALE; // 0x8
	private static readonly float NUM5_SCALE; // 0xC
	private static readonly float NUM4_GRID_POS_X; // 0x10
	private static readonly float NUM5_GRID_POS_X; // 0x14
	[SerializeField] // RVA: 0xCD7FCC Offset: 0xCD7FCC VA: 0xCD7FCC
	private ServantFaceIconComponent[] expUpIconList; // 0x18
	[SerializeField] // RVA: 0xCD7FDC Offset: 0xCD7FDC VA: 0xCD7FDC
	private UILabel[] numLabelList; // 0x20
	[SerializeField] // RVA: 0xCD7FEC Offset: 0xCD7FEC VA: 0xCD7FEC
	private UISprite[] maskSpriteList; // 0x28
	[SerializeField] // RVA: 0xCD7FFC Offset: 0xCD7FFC VA: 0xCD7FFC
	private ServantClassIconComponent classIconInfo; // 0x30
	[SerializeField] // RVA: 0xCD800C Offset: 0xCD800C VA: 0xCD800C
	private UIGrid faceIconList; // 0x38
	[SerializeField] // RVA: 0xCD801C Offset: 0xCD801C VA: 0xCD801C
	private UISprite dmyFrame; // 0x40
	private int dispMinRarity; // 0x48
	private int dispMax; // 0x4C

	// Methods

	// RVA: 0x157C4BC Offset: 0x157C4BC VA: 0x157C4BC
	public void .ctor() { }

	// RVA: 0x157C4C4 Offset: 0x157C4C4 VA: 0x157C4C4
	public void Set(int classId, int[] svtIdList, int[] numList, int minRarity, int max) { }

	// RVA: 0x157CD5C Offset: 0x157CD5C VA: 0x157CD5C
	public void Set(int[] numList) { }

	// RVA: 0x157CECC Offset: 0x157CECC VA: 0x157CECC
	private static void .cctor() { }
}

// Namespace: 
public class CombineExpUpInfo : MonoBehaviour // TypeDefIndex: 9619
{
	// Fields
	private static readonly int TYPE_BUTTON_ON_WIDTH; // 0x0
	private static readonly int TYPE_BUTTON_ON_HEIGHT; // 0x4
	private static readonly int TYPE_BUTTON_OFF_WIDTH; // 0x8
	private static readonly int TYPE_BUTTON_OFF_HEIGHT; // 0xC
	[SerializeField] // RVA: 0xCD802C Offset: 0xCD802C VA: 0xCD802C
	private GameObject[] btnObjList; // 0x18
	[SerializeField] // RVA: 0xCD803C Offset: 0xCD803C VA: 0xCD803C
	private UISprite[] btnSpriteList; // 0x20
	[SerializeField] // RVA: 0xCD804C Offset: 0xCD804C VA: 0xCD804C
	private UISprite[] btnTxtSpriteList; // 0x28
	[SerializeField] // RVA: 0xCD805C Offset: 0xCD805C VA: 0xCD805C
	private CombineExpUpClassInfo[] expUpClassInfoList; // 0x30
	[SerializeField] // RVA: 0xCD806C Offset: 0xCD806C VA: 0xCD806C
	private UISprite btnChangeSprite; // 0x38
	private Action<ListViewSort.ExpUpDispKind, ListViewSort.ExpUpDispType> changeAction; // 0x40
	private string[] btnSpriteNameList; // 0x48
	private ListViewSort.ExpUpDispKind nowKind; // 0x50
	private ListViewSort.ExpUpDispType nowType; // 0x54
	private List<SvtClassAttri.TYPE> SortClassOrder; // 0x58

	// Methods

	// RVA: 0x157CF74 Offset: 0x157CF74 VA: 0x157CF74
	public void .ctor() { }

	// RVA: 0x157D258 Offset: 0x157D258 VA: 0x157D258
	public bool ExpUpInfoSet(ListViewSort.ExpUpDispKind kind, ListViewSort.ExpUpDispType type, bool isFirst, Action<ListViewSort.ExpUpDispKind, ListViewSort.ExpUpDispType> afterAction) { }

	// RVA: 0x157D8C0 Offset: 0x157D8C0 VA: 0x157D8C0
	private CombineExpUpInfo.MaterialData[] GetTargetClassMaterialInfo(UserServantEntity[] svtList, int classId) { }

	// RVA: 0x157DC94 Offset: 0x157DC94 VA: 0x157DC94
	private CombineExpUpInfo.MaterialData[] GetTargetClassStatusUpInfo(UserServantEntity[] svtList, int classId, ListViewSort.ExpUpDispType type) { }

	// RVA: 0x157E144 Offset: 0x157E144 VA: 0x157E144
	private void SetBtnState(ListViewSort.ExpUpDispKind kind, ListViewSort.ExpUpDispType type) { }

	// RVA: 0x157E5C4 Offset: 0x157E5C4 VA: 0x157E5C4
	public void OnClickLeft() { }

	// RVA: 0x157E658 Offset: 0x157E658 VA: 0x157E658
	public void OnClickCenter() { }

	// RVA: 0x157E6F0 Offset: 0x157E6F0 VA: 0x157E6F0
	public void OnClickRight() { }

	// RVA: 0x157E788 Offset: 0x157E788 VA: 0x157E788
	public void OnClickChangeButton() { }

	// RVA: 0x157E818 Offset: 0x157E818 VA: 0x157E818
	private static void .cctor() { }
}

// Namespace: 
private class CombineExpUpInfo.MaterialData // TypeDefIndex: 9620
