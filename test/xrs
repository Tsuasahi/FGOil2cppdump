	[SerializeField] // RVA: 0xC66C80 Offset: 0xC66C80 VA: 0xC66C80
	private UILabel confirmLabel; // 0x58
	[SerializeField] // RVA: 0xC66C90 Offset: 0xC66C90 VA: 0xC66C90
	private GameObject reqSingleParent; // 0x60
	[SerializeField] // RVA: 0xC66CA0 Offset: 0xC66CA0 VA: 0xC66CA0
	private GameObject reqDoubleParent; // 0x68
	[SerializeField] // RVA: 0xC66CB0 Offset: 0xC66CB0 VA: 0xC66CB0
	private GameObject reqTripleParent; // 0x70
	[SerializeField] // RVA: 0xC66CC0 Offset: 0xC66CC0 VA: 0xC66CC0
	private RetryConfirmItem singleAp; // 0x78
	[SerializeField] // RVA: 0xC66CD0 Offset: 0xC66CD0 VA: 0xC66CD0
	private RetryConfirmItem singleItem; // 0x80
	[SerializeField] // RVA: 0xC66CE0 Offset: 0xC66CE0 VA: 0xC66CE0
	private RetryConfirmItem doubleAp; // 0x88
	[SerializeField] // RVA: 0xC66CF0 Offset: 0xC66CF0 VA: 0xC66CF0
	private RetryConfirmItem[] doubleItems; // 0x90
	[SerializeField] // RVA: 0xC66D00 Offset: 0xC66D00 VA: 0xC66D00
	private RetryConfirmItem tripleAp; // 0x98
	[SerializeField] // RVA: 0xC66D10 Offset: 0xC66D10 VA: 0xC66D10
	private RetryConfirmItem[] tripleItems; // 0xA0
	[SerializeField] // RVA: 0xC66D20 Offset: 0xC66D20 VA: 0xC66D20
	private FriendshipUpItemUseItem friendshipUpItemUseButton; // 0xA8
	[SerializeField] // RVA: 0xC66D30 Offset: 0xC66D30 VA: 0xC66D30
	private GameObject reqSingleParentWithUseItemButton; // 0xB0
	[SerializeField] // RVA: 0xC66D40 Offset: 0xC66D40 VA: 0xC66D40
	private GameObject reqDoubleParentWithUseItemButton; // 0xB8
	[SerializeField] // RVA: 0xC66D50 Offset: 0xC66D50 VA: 0xC66D50
	private GameObject reqTripleParentWithUseItemButton; // 0xC0
	[SerializeField] // RVA: 0xC66D60 Offset: 0xC66D60 VA: 0xC66D60
	private RetryConfirmItem singleApWithUseItemButton; // 0xC8
	[SerializeField] // RVA: 0xC66D70 Offset: 0xC66D70 VA: 0xC66D70
	private RetryConfirmItem singleItemWithUseItemButton; // 0xD0
	[SerializeField] // RVA: 0xC66D80 Offset: 0xC66D80 VA: 0xC66D80
	private RetryConfirmItem doubleApWithUseItemButton; // 0xD8
	[SerializeField] // RVA: 0xC66D90 Offset: 0xC66D90 VA: 0xC66D90
	private RetryConfirmItem[] doubleItemsWithUseItemButton; // 0xE0
	[SerializeField] // RVA: 0xC66DA0 Offset: 0xC66DA0 VA: 0xC66DA0
	private RetryConfirmItem tripleApWithUseItemButton; // 0xE8
	[SerializeField] // RVA: 0xC66DB0 Offset: 0xC66DB0 VA: 0xC66DB0
	private RetryConfirmItem[] tripleItemsWithUseItemButton; // 0xF0
	private static readonly int MAIN_TEXT_DEFAULT_FONT_SIZE; // 0x0
	private static readonly int MAIN_TEXT_FONT_SIZE_FOR_THREE_ITEM; // 0x4
	private static readonly int MAIN_TEXT_FONT_SIZE_FOR_DOUBLE_ITEM_AND_BUTTON; // 0x8
	private static readonly int MAIN_TEXT_FONT_SIZE_FOR_THREE_ITEM_AND_BUTTON; // 0xC
	private bool isInitialized; // 0xF8
	private UserGameEntity userGameEntity; // 0x100
	[SerializeField] // RVA: 0xC66DC0 Offset: 0xC66DC0 VA: 0xC66DC0
	private GameObject bgObj; // 0x108
	private List<UIButton> buttons; // 0x110
	[SerializeField] // RVA: 0xC66DD0 Offset: 0xC66DD0 VA: 0xC66DD0
	private UILabel boostSupportRequestLabel; // 0x118
	[CompilerGeneratedAttribute] // RVA: 0xC66DE0 Offset: 0xC66DE0 VA: 0xC66DE0
	private static Action <>f__am$cache0; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC66DF0 Offset: 0xC66DF0 VA: 0xC66DF0
	private static Action <>f__am$cache1; // 0x18

	// Methods

	// RVA: 0x1173D38 Offset: 0x1173D38 VA: 0x1173D38
	public void .ctor() { }

	// RVA: 0x11611C0 Offset: 0x11611C0 VA: 0x11611C0
	public bool SetValues() { }

	// RVA: 0x11749F8 Offset: 0x11749F8 VA: 0x11749F8
	public void OnClickCancel() { }

	// RVA: 0x1174B70 Offset: 0x1174B70 VA: 0x1174B70
	public void OnClickConfirm() { }

	// RVA: 0x1174CE8 Offset: 0x1174CE8 VA: 0x1174CE8
	private void SetRetryConfirmItemTextWithStr(BattleRetryConfirmComponent.RetryConfirmItemStr value, ref RetryConfirmItem item) { }

	// RVA: 0x1174DDC Offset: 0x1174DDC VA: 0x1174DDC
	private void SetCostValueTextSingle(BattleRetryConfirmComponent.RetryConfirmItemStr costPoint, BattleRetryConfirmComponent.RetryConfirmItemStr item) { }

	// RVA: 0x1174FB8 Offset: 0x1174FB8 VA: 0x1174FB8
	private void SetCostValueTextDouble(BattleRetryConfirmComponent.RetryConfirmItemStr costPoint, BattleRetryConfirmComponent.RetryConfirmItemStr[] items) { }

	// RVA: 0x117528C Offset: 0x117528C VA: 0x117528C
	private void SetCostValueTextTriple(BattleRetryConfirmComponent.RetryConfirmItemStr costPoint, BattleRetryConfirmComponent.RetryConfirmItemStr[] items) { }

	// RVA: 0x1173DE0 Offset: 0x1173DE0 VA: 0x1173DE0
	public void SetCostValueText(BattleRetryConfirmComponent.RetryConfirmItemStr costPoint, BattleRetryConfirmComponent.RetryConfirmItemStr[] items) { }

	// RVA: 0x115BAC0 Offset: 0x115BAC0 VA: 0x115BAC0
	public void Init() { }

	// RVA: 0x1162754 Offset: 0x1162754 VA: 0x1162754
	public void Open() { }

	// RVA: 0x1160FBC Offset: 0x1160FBC VA: 0x1160FBC
	public void Close() { }

	// RVA: 0x1175694 Offset: 0x1175694 VA: 0x1175694
	public void OnClickBoostSupportRequest() { }

	// RVA: 0x117589C Offset: 0x117589C VA: 0x117589C
	private void BoostSupportRequestDialogCallback(BoostFunctionUtility.BoostResultKind result, int boostId) { }

	// RVA: 0x1173F64 Offset: 0x1173F64 VA: 0x1173F64
	private void SetBoostSupportRequestButton() { }

	// RVA: 0x1175560 Offset: 0x1175560 VA: 0x1175560
	private void CostPointLabelCentering() { }

	// RVA: 0x11743D4 Offset: 0x11743D4 VA: 0x11743D4
	private void SetFriendshipUpItemUseButton() { }

	// RVA: 0x1175A54 Offset: 0x1175A54 VA: 0x1175A54
	public void OnClickFriendshipUpItemUseButton() { }

	// RVA: 0x1175BB8 Offset: 0x1175BB8 VA: 0x1175BB8
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE7A8 Offset: 0xCCE7A8 VA: 0xCCE7A8
	// RVA: 0x1175C38 Offset: 0x1175C38 VA: 0x1175C38
	private static void <SetValues>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE7B8 Offset: 0xCCE7B8 VA: 0xCCE7B8
	// RVA: 0x1175CA8 Offset: 0x1175CA8 VA: 0x1175CA8
	private static void <SetValues>m__1() { }
}

// Namespace: 
public struct BattleRetryConfirmComponent.RetryConfirmItemStr // TypeDefIndex: 9399
{
	// Fields
	public string useName; // 0x0
	public string useAmount; // 0x8
	public string possessionName; // 0x10
	public string possessionAmount; // 0x18
}

// Namespace: 
public class FriendshipGauge : MonoBehaviour, IFriendshipGauge // TypeDefIndex: 9400
{
	// Fields
	public UISprite[] gaugeIcons; // 0x18
	private FriendshipGauge.GaugeData nowGauge; // 0x20
	private FriendshipGauge.GaugeData nextGauge; // 0x28
	private int friendshipId; // 0x30
	private int maxFriendShipRank; // 0x34
	private FriendshipEntity tmp_friendshipEnt; // 0x38
	private int prevRank; // 0x40
	private int prevPoint; // 0x44

	// Methods

	// RVA: 0x192BE10 Offset: 0x192BE10 VA: 0x192BE10
	public void .ctor() { }

	// RVA: 0x192BE20 Offset: 0x192BE20 VA: 0x192BE20 Slot: 4
	public void SetGaugeData(int friendshipId, int friendship, int friendshipRank, int inMaxFriendShipRank, int exceedCount = 0) { }

	// RVA: 0x192C2A8 Offset: 0x192C2A8 VA: 0x192C2A8 Slot: 5
	public void SetNextGaugeData(int friendship, int friendshipRank) { }

	// RVA: 0x192C33C Offset: 0x192C33C VA: 0x192C33C Slot: 6
	public bool IsChange() { }

	// RVA: 0x192BF2C Offset: 0x192BF2C VA: 0x192BF2C Slot: 7
	public void ChangeGaugeData(int friendshipId, int friendship, int friendshipRank) { }

	// RVA: 0x192C368 Offset: 0x192C368 VA: 0x192C368 Slot: 8
	public int ChangeGauge(float val, out bool max, out bool isLevelUp, out bool isChange) { }

	// RVA: 0x192C5C4 Offset: 0x192C5C4 VA: 0x192C5C4 Slot: 9
	public void Hide() { }

	// RVA: 0x192C5FC Offset: 0x192C5FC VA: 0x192C5FC Slot: 10
	public void Show() { }
}

// Namespace: 
private class FriendshipGauge.GaugeData // TypeDefIndex: 9401
{
	// Fields
	public int friendship; // 0x10
	public int friendshipRank; // 0x14

	// Methods

	// RVA: 0x192BF24 Offset: 0x192BF24 VA: 0x192BF24
	public void .ctor() { }
}

// Namespace: 
public class FriendshipGaugeEx : MonoBehaviour, IFriendshipGauge // TypeDefIndex: 9402
{
	// Fields
	[SerializeField] // RVA: 0xC66E00 Offset: 0xC66E00 VA: 0xC66E00
	private UISprite bigIcon; // 0x18
	[SerializeField] // RVA: 0xC66E10 Offset: 0xC66E10 VA: 0xC66E10
	private UISprite[] icons; // 0x20
	[SerializeField] // RVA: 0xC66E20 Offset: 0xC66E20 VA: 0xC66E20
	private GameObject[] iconRoots; // 0x28
	private int nowFriendship; // 0x30
	private int nextFriendship; // 0x34
	private int nowFriendshipRank; // 0x38
	private int nextFriendshipRank; // 0x3C
	private int friendshipId; // 0x40
	private int maxFriendshipRank; // 0x44
	private int exceedCount; // 0x48
	private int exceedMaxFriendshipRank; // 0x4C
	private int prevRank; // 0x50
	private int prevPoint; // 0x54
	private static readonly string AtlasPath; // 0x0
	private static readonly string ObjectName; // 0x8
	private static readonly string SpriteName; // 0x10

	// Methods

	// RVA: 0x192C634 Offset: 0x192C634 VA: 0x192C634
	public void .ctor() { }

	// RVA: 0x192C644 Offset: 0x192C644 VA: 0x192C644
	private void Start() { }

	// RVA: 0x192C740 Offset: 0x192C740 VA: 0x192C740 Slot: 4
	public void SetGaugeData(int friendshipId, int friendship, int friendshipRank, int inMaxFriendShipRank, int exceedCount) { }

	// RVA: 0x192CA20 Offset: 0x192CA20 VA: 0x192CA20 Slot: 5
	public void SetNextGaugeData(int friendship, int friendshipRank) { }

	// RVA: 0x192CA2C Offset: 0x192CA2C VA: 0x192CA2C Slot: 8
	public int ChangeGauge(float val, out bool max, out bool isLevelUp, out bool isChange) { }

	// RVA: 0x192C75C Offset: 0x192C75C VA: 0x192C75C Slot: 7
	public void ChangeGaugeData(int friendshipId, int friendship, int friendshipRank) { }

	// RVA: 0x192CB88 Offset: 0x192CB88 VA: 0x192CB88 Slot: 6
	public bool IsChange() { }

	// RVA: 0x192CB98 Offset: 0x192CB98 VA: 0x192CB98 Slot: 9
	public void Hide() { }

	// RVA: 0x192CBD0 Offset: 0x192CBD0 VA: 0x192CBD0 Slot: 10
	public void Show() { }

	// RVA: 0x192CC08 Offset: 0x192CC08 VA: 0x192CC08
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE7C8 Offset: 0xCCE7C8 VA: 0xCCE7C8
	// RVA: 0x192CC90 Offset: 0x192CC90 VA: 0x192CC90
	private void <Start>m__0(AssetData asset) { }
}

// Namespace: 
public class FriendshipGaugeSelector : MonoBehaviour // TypeDefIndex: 9403
{
	// Fields
	[SerializeField] // RVA: 0xC66E30 Offset: 0xC66E30 VA: 0xC66E30
	private FriendshipGauge friendshipGauge; // 0x18
	[SerializeField] // RVA: 0xC66E40 Offset: 0xC66E40 VA: 0xC66E40
	private FriendshipGaugeEx friendshipGaugeEx; // 0x20

	// Methods

	// RVA: 0x192CD9C Offset: 0x192CD9C VA: 0x192CD9C
	public void .ctor() { }

	// RVA: 0x192CDA4 Offset: 0x192CDA4 VA: 0x192CDA4
	public IFriendshipGauge GetGauge(int maxFriendShipRank, int friendshipExceedCount = 0) { }
}

// Namespace: 
public interface IFriendshipGauge // TypeDefIndex: 9404
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void SetGaugeData(int friendshipId, int friendship, int friendshipRank, int inMaxFriendShipRank, int exceedCount);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void SetNextGaugeData(int friendship, int friendshipRank);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract bool IsChange();

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void ChangeGaugeData(int friendshipId, int friendship, int friendshipRank);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract int ChangeGauge(float val, out bool max, out bool isLevelUp, out bool isChange);

	// RVA: -1 Offset: -1 Slot: 5
	public abstract void Hide();

	// RVA: -1 Offset: -1 Slot: 6
	public abstract void Show();
}

// Namespace: 
public class RetryConfirmItem : BaseMonoBehaviour // TypeDefIndex: 9405
{
	// Fields
	public UILabel useName; // 0x18
	public UILabel useAmount; // 0x20
	public UILabel possessionName; // 0x28
	public UILabel possessionAmount; // 0x30

	// Methods

	// RVA: 0x1590844 Offset: 0x1590844 VA: 0x1590844
	public void .ctor() { }

	// RVA: 0x159084C Offset: 0x159084C VA: 0x159084C
	public void CenteringAmountLabel() { }

	// RVA: 0x1590A20 Offset: 0x1590A20 VA: 0x1590A20
	private void CenteringWholeLabelHorizontal() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2A934 Offset: 0xC2A934 VA: 0xC2A934
[AddComponentMenu] // RVA: 0xC2A934 Offset: 0xC2A934 VA: 0xC2A934
public class SaturationImageEffect : ImageEffectBase // TypeDefIndex: 9406
{
	// Fields
	public Texture texture; // 0x28
	public float saturation; // 0x30

	// Methods

	// RVA: 0x159AA30 Offset: 0x159AA30 VA: 0x159AA30
	public void .ctor() { }

	// RVA: 0x159AA38 Offset: 0x159AA38 VA: 0x159AA38
	private void OnRenderImage(RenderTexture source, RenderTexture destination) { }
}

// Namespace: 
public class SetTargetObjectMatrix : MonoBehaviour // TypeDefIndex: 9407
{
	// Fields
	[SerializeField] // RVA: 0xC66E50 Offset: 0xC66E50 VA: 0xC66E50
	private Transform targetObj; // 0x18
	[SerializeField] // RVA: 0xC66E60 Offset: 0xC66E60 VA: 0xC66E60
	private SetTargetObjectMatrix.RendererType rendererType; // 0x20
	[SerializeField] // RVA: 0xC66E70 Offset: 0xC66E70 VA: 0xC66E70
	private SetTargetObjectMatrix.MaterialType materialType; // 0x24
	private Renderer targetRenderer; // 0x28

	// Methods

	// RVA: 0x1334328 Offset: 0x1334328 VA: 0x1334328
	public void .ctor() { }

	// RVA: 0x1334330 Offset: 0x1334330 VA: 0x1334330
	private void Start() { }

	// RVA: -1 Offset: -1
	private T GetRenderer<T>() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C21770 Offset: 0x1C21770 VA: 0x1C21770
	|-SetTargetObjectMatrix.GetRenderer<object>
	|-SetTargetObjectMatrix.GetRenderer<MeshRenderer>
	|-SetTargetObjectMatrix.GetRenderer<SkinnedMeshRenderer>
	|-SetTargetObjectMatrix.GetRenderer<SpriteRenderer>
	*/

	// RVA: 0x133463C Offset: 0x133463C VA: 0x133463C
	public void Update() { }

	// RVA: 0x1334450 Offset: 0x1334450 VA: 0x1334450
	private void updateMatrix() { }
}

// Namespace: 
public enum SetTargetObjectMatrix.RendererType // TypeDefIndex: 9408
{
	// Fields
	public int value__; // 0x0
	public const SetTargetObjectMatrix.RendererType SkinnedMesh = 0;
	public const SetTargetObjectMatrix.RendererType Mesh = 1;
	public const SetTargetObjectMatrix.RendererType Sprite = 2;
	public const SetTargetObjectMatrix.RendererType Particle = 3;
}

// Namespace: 
public enum SetTargetObjectMatrix.MaterialType // TypeDefIndex: 9409
{
	// Fields
	public int value__; // 0x0
	public const SetTargetObjectMatrix.MaterialType ShareMaterial = 0;
	public const SetTargetObjectMatrix.MaterialType NormalMaterial = 1;
}

// Namespace: 
public class SlotEffectComponent : MonoBehaviour, IGimmickEffect // TypeDefIndex: 9410
{
	// Fields
	[SerializeField] // RVA: 0xC66E80 Offset: 0xC66E80 VA: 0xC66E80
	[TooltipAttribute] // RVA: 0xC66E80 Offset: 0xC66E80 VA: 0xC66E80
	private List<MeshRenderer> leftReelList; // 0x18
	[SerializeField] // RVA: 0xC66ECC Offset: 0xC66ECC VA: 0xC66ECC
	[TooltipAttribute] // RVA: 0xC66ECC Offset: 0xC66ECC VA: 0xC66ECC
	private List<MeshRenderer> centerReelList; // 0x20
	[SerializeField] // RVA: 0xC66F18 Offset: 0xC66F18 VA: 0xC66F18
	[TooltipAttribute] // RVA: 0xC66F18 Offset: 0xC66F18 VA: 0xC66F18
	private List<MeshRenderer> rightReelList; // 0x28
	[SerializeField] // RVA: 0xC66F64 Offset: 0xC66F64 VA: 0xC66F64
	[TooltipAttribute] // RVA: 0xC66F64 Offset: 0xC66F64 VA: 0xC66F64
	private string animationName; // 0x30
	[SerializeField] // RVA: 0xC66FB0 Offset: 0xC66FB0 VA: 0xC66FB0
	[TooltipAttribute] // RVA: 0xC66FB0 Offset: 0xC66FB0 VA: 0xC66FB0
	private string voiceTypeName; // 0x38
	private Action endCallback; // 0x40
	private string reelUvIdKey; // 0x48
	private string reelBlurKey; // 0x50
	private string voiceDataStr; // 0x58
	private string[] voiceIdArray; // 0x60
	private int animationType; // 0x68

	// Methods

	// RVA: 0x17516CC Offset: 0x17516CC VA: 0x17516CC
	public void .ctor() { }

	// RVA: 0x175178C Offset: 0x175178C VA: 0x175178C Slot: 4
	public void SetGimmick(int svtId, BattleActionData.GimmickData data, Action endCb) { }

	// RVA: 0x1751CE0 Offset: 0x1751CE0 VA: 0x1751CE0
	public void SetReelVal(int[] leftReel, int[] centerReel, int[] rightReel) { }

	// RVA: 0x1751D3C Offset: 0x1751D3C VA: 0x1751D3C
	private void CommonReelFunc(List<MeshRenderer> list, int[] ids) { }

	// RVA: 0x1751E4C Offset: 0x1751E4C VA: 0x1751E4C
	private void CommonBlurFunc(List<MeshRenderer> list, bool flg) { }

	// RVA: 0x1751F58 Offset: 0x1751F58 VA: 0x1751F58 Slot: 6
	public void StartGimmick(Action animCallback) { }

	// RVA: 0x17520E8 Offset: 0x17520E8 VA: 0x17520E8 Slot: 5
	public void EndGimmick() { }

	// RVA: 0x17520FC Offset: 0x17520FC VA: 0x17520FC
	public void ReleaseGimmickData() { }

	// RVA: 0x1752268 Offset: 0x1752268 VA: 0x1752268
	public void SetLeftReelBlur(int isOn) { }

	// RVA: 0x175227C Offset: 0x175227C VA: 0x175227C
	public void SetCenterReelBlur(int isOn) { }

	// RVA: 0x1752290 Offset: 0x1752290 VA: 0x1752290
	public void SetRightReelBlur(int isOn) { }

	// RVA: 0x17522A4 Offset: 0x17522A4 VA: 0x17522A4 Slot: 7
	public void PlaySe(string seName) { }

	// RVA: 0x1752528 Offset: 0x1752528 VA: 0x1752528 Slot: 8
	public void PlayVoice(int index) { }
}

// Namespace: 
public class SpawnerEventHandler : MonoBehaviour // TypeDefIndex: 9411
{
	// Fields
	[SerializeField] // RVA: 0xC66FFC Offset: 0xC66FFC VA: 0xC66FFC
	[TooltipAttribute] // RVA: 0xC66FFC Offset: 0xC66FFC VA: 0xC66FFC
	private bool isReset; // 0x18
	private ParticleSystem[] particleArray; // 0x20
	private bool isInitilized; // 0x28

	// Methods

	// RVA: 0x13DD340 Offset: 0x13DD340 VA: 0x13DD340
	public void .ctor() { }

	// RVA: 0x13DD350 Offset: 0x13DD350 VA: 0x13DD350
	private void Init() { }

	// RVA: 0x13DD3B0 Offset: 0x13DD3B0 VA: 0x13DD3B0
	public void OnSpawn() { }

	// RVA: 0x13DD3C0 Offset: 0x13DD3C0 VA: 0x13DD3C0
	public void OnDespawn() { }
}

// Namespace: 
public class TweenSynchronize : MonoBehaviour // TypeDefIndex: 9412
{
	// Fields
	protected static List<UITweener> tweenerList; // 0x0
	protected UITweener tweener; // 0x18

	// Methods

	// RVA: 0x189DFE0 Offset: 0x189DFE0 VA: 0x189DFE0
	public void .ctor() { }

	// RVA: 0x189DFE8 Offset: 0x189DFE8 VA: 0x189DFE8
	private void Awake() { }

	// RVA: 0x189E0FC Offset: 0x189E0FC VA: 0x189E0FC
	private void OnDestroy() { }

	// RVA: 0x189E18C Offset: 0x189E18C VA: 0x189E18C
	public void synchronize() { }

	// RVA: 0x189E3B4 Offset: 0x189E3B4 VA: 0x189E3B4
	private void OnEnable() { }

	// RVA: 0x189E3B8 Offset: 0x189E3B8 VA: 0x189E3B8
	private static void .cctor() { }
}

// Namespace: 
public class BattleDemoRootComponent : SceneRootComponent // TypeDefIndex: 9413
{
	// Fields
	private static readonly float BGM_FADEOUT_TIME; // 0x0
	[SerializeField] // RVA: 0xC67048 Offset: 0xC67048 VA: 0xC67048
	protected string[] PlayerList; // 0x38
	[SerializeField] // RVA: 0xC67058 Offset: 0xC67058 VA: 0xC67058
	protected string[] EnemyList; // 0x40
	[SerializeField] // RVA: 0xC67068 Offset: 0xC67068 VA: 0xC67068
	protected int BgId; // 0x48
	protected int BgType; // 0x4C
	[SerializeField] // RVA: 0xC67078 Offset: 0xC67078 VA: 0xC67078
	protected string BgmName; // 0x50
	[SerializeField] // RVA: 0xC67088 Offset: 0xC67088 VA: 0xC67088
	protected int DemoSequenceServantId; // 0x58
	[SerializeField] // RVA: 0xC67098 Offset: 0xC67098 VA: 0xC67098
	protected int DemoSequenceNumber; // 0x5C
	[SerializeField] // RVA: 0xC670A8 Offset: 0xC670A8 VA: 0xC670A8
	protected List<string> CueSheetList; // 0x60
	[SerializeField] // RVA: 0xC670B8 Offset: 0xC670B8 VA: 0xC670B8
	protected BattlePerformance performance; // 0x68
	private GameObject cameraObject; // 0x70
	[SerializeField] // RVA: 0xC670C8 Offset: 0xC670C8 VA: 0xC670C8
	protected Camera actorCamera; // 0x78
	[SerializeField] // RVA: 0xC670D8 Offset: 0xC670D8 VA: 0xC670D8
	protected BattlePerformanceBg perfBg; // 0x80
	[SerializeField] // RVA: 0xC670E8 Offset: 0xC670E8 VA: 0xC670E8
	protected GameObject Field; // 0x88
	[SerializeField] // RVA: 0xC670F8 Offset: 0xC670F8 VA: 0xC670F8
	protected GameObject actorPrefab; // 0x90
	[SerializeField] // RVA: 0xC67108 Offset: 0xC67108 VA: 0xC67108
	protected PlayMakerFSM FieldMotion; // 0x98
	[SerializeField] // RVA: 0xC67118 Offset: 0xC67118 VA: 0xC67118
	protected PlayMakerFSM CameraFsm; // 0xA0
	[SerializeField] // RVA: 0xC67128 Offset: 0xC67128 VA: 0xC67128
	protected GameObject CommonMotionPrefab; // 0xA8
	[SerializeField] // RVA: 0xC67138 Offset: 0xC67138 VA: 0xC67138
	protected GameObject GroundObject; // 0xB0
	protected GameObject[] PlayerActorList; // 0xB8
	protected GameObject[] EnemyActorList; // 0xC0
	protected List<ServantAssetArgs> loadedAssetArgsList; // 0xC8
	protected Action InitializeCallback; // 0xD0
	protected BattleSetupInfo battleSetupInfo; // 0xD8
	protected int CueSheetCount; // 0xE0
	protected Action BattleDemoCallback; // 0xE8
	protected float backupFov; // 0xF0
	[CompilerGeneratedAttribute] // RVA: 0xC67148 Offset: 0xC67148 VA: 0xC67148
	private static Action<ServantAssetArgs> <>f__am$cache0; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC67158 Offset: 0xC67158 VA: 0xC67158
	private static Action <>f__am$cache1; // 0x10

	// Methods

	// RVA: 0x111B864 Offset: 0x111B864 VA: 0x111B864
	public void .ctor() { }

	// RVA: 0x111B86C Offset: 0x111B86C VA: 0x111B86C
	public void InitializeBattleDemo(string demoInfo, Action callback) { }

	// RVA: 0x111C060 Offset: 0x111C060 VA: 0x111C060
	protected int GetServantIdByInfo(string info) { }

	// RVA: 0x111C128 Offset: 0x111C128 VA: 0x111C128
	protected int GetLimitCountByInfo(string info) { }

	// RVA: 0x111C1F4 Offset: 0x111C1F4 VA: 0x111C1F4
	protected void LoadCueSheet() { }

	// RVA: 0x111C38C Offset: 0x111C38C VA: 0x111C38C
	protected void ReleaseCueSheet() { }

	[DebuggerHiddenAttribute] // RVA: 0xCCE7D8 Offset: 0xCCE7D8 VA: 0xCCE7D8
	// RVA: 0x111BFF0 Offset: 0x111BFF0 VA: 0x111BFF0
	protected IEnumerator SetupBattleDemo() { }

	// RVA: 0x111C4D8 Offset: 0x111C4D8 VA: 0x111C4D8
	protected void CreateActors() { }

	// RVA: 0x111CA34 Offset: 0x111CA34 VA: 0x111CA34
	protected void CreateActorObject(int uniqueIdStart, string[] chrInfos, GameObject[] actors, bool isPlayer) { }

	// RVA: 0x111D248 Offset: 0x111D248 VA: 0x111D248
	protected void LoadBattleChrs(string[] chrlist) { }

	// RVA: 0x111BFEC Offset: 0x111BFEC VA: 0x111BFEC
	protected void ReleaseBattleDemo() { }

	// RVA: 0x111D3F8 Offset: 0x111D3F8 VA: 0x111D3F8 Slot: 4
	public override void beginInitialize() { }

	// RVA: 0x111D494 Offset: 0x111D494 VA: 0x111D494 Slot: 5
	public override void beginStartUp(object data) { }

	// RVA: 0x111D564 Offset: 0x111D564 VA: 0x111D564 Slot: 7
	public override void beginFinish() { }

	// RVA: 0x111D568 Offset: 0x111D568 VA: 0x111D568
	public void StartDemo(Action callback) { }

	// RVA: 0x111D7EC Offset: 0x111D7EC VA: 0x111D7EC
	public void OnBattleDemoLoadComplete(GameObject obj) { }

	[DebuggerHiddenAttribute] // RVA: 0xCCE7E8 Offset: 0xCCE7E8 VA: 0xCCE7E8
	// RVA: 0x111D8A8 Offset: 0x111D8A8 VA: 0x111D8A8
	private IEnumerator WaitToNoblePhantasmPlay() { }

	// RVA: 0x111D920 Offset: 0x111D920 VA: 0x111D920
	private void OnNoblePhantasmPlayComplete(USSequencer seq) { }

	// RVA: 0x111DE4C Offset: 0x111DE4C VA: 0x111DE4C
	public bool GoToBattleStartTalk() { }

	// RVA: 0x111DF28 Offset: 0x111DF28 VA: 0x111DF28
	protected void OnBattleStartScript(bool isExit) { }

	// RVA: 0x111DF8C Offset: 0x111DF8C VA: 0x111DF8C
	public bool GoToBattleEndTalk() { }

	// RVA: 0x111E070 Offset: 0x111E070 VA: 0x111E070
	protected void OnBattleEndScript(bool isExit) { }

	// RVA: 0x111E150 Offset: 0x111E150 VA: 0x111E150
	public bool GoToTerminal() { }

	// RVA: 0x111E21C Offset: 0x111E21C VA: 0x111E21C
	public bool RequestBattleSetup() { }

	// RVA: 0x111E240 Offset: 0x111E240 VA: 0x111E240
	protected void EndRequestBattleSetup(string result) { }

	// RVA: 0x111E3D8 Offset: 0x111E3D8 VA: 0x111E3D8
	public bool StartBattle() { }

	// RVA: 0x111E450 Offset: 0x111E450 VA: 0x111E450
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE7F8 Offset: 0xCCE7F8 VA: 0xCCE7F8
	// RVA: 0x111E4A4 Offset: 0x111E4A4 VA: 0x111E4A4
	private void <LoadCueSheet>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE808 Offset: 0xCCE808 VA: 0xCCE808
	// RVA: 0x111E4B4 Offset: 0x111E4B4 VA: 0x111E4B4
	private void <beginStartUp>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE818 Offset: 0xCCE818 VA: 0xCCE818
	// RVA: 0x111E5E8 Offset: 0x111E5E8 VA: 0x111E5E8
	private static void <OnNoblePhantasmPlayComplete>m__2(ServantAssetArgs args) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE828 Offset: 0xCCE828 VA: 0xCCE828
	// RVA: 0x111E650 Offset: 0x111E650 VA: 0x111E650
	private void <OnBattleEndScript>m__3(string demoInfo) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE838 Offset: 0xCCE838 VA: 0xCCE838
	// RVA: 0x111E724 Offset: 0x111E724 VA: 0x111E724
	private static void <beginStartUp>m__4() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44594 Offset: 0xC44594 VA: 0xC44594
private sealed class BattleDemoRootComponent.<SetupBattleDemo>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9414
{
	// Fields
	internal BattleDemoRootComponent $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDBE50 Offset: 0xCDBE50 VA: 0xCDBE50
	// RVA: 0x111C4D0 Offset: 0x111C4D0 VA: 0x111C4D0
	public void .ctor() { }

	// RVA: 0x111E728 Offset: 0x111E728 VA: 0x111E728 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBE60 Offset: 0xCDBE60 VA: 0xCDBE60
	// RVA: 0x111EBA0 Offset: 0x111EBA0 VA: 0x111EBA0 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBE70 Offset: 0xCDBE70 VA: 0xCDBE70
	// RVA: 0x111EBA8 Offset: 0x111EBA8 VA: 0x111EBA8 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBE80 Offset: 0xCDBE80 VA: 0xCDBE80
	// RVA: 0x111EBB0 Offset: 0x111EBB0 VA: 0x111EBB0 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBE90 Offset: 0xCDBE90 VA: 0xCDBE90
	// RVA: 0x111EBC4 Offset: 0x111EBC4 VA: 0x111EBC4 Slot: 6
	public void Reset() { }

	// RVA: 0x111EC2C Offset: 0x111EC2C VA: 0x111EC2C
	internal void <>m__0(AssetData aData) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC445A4 Offset: 0xC445A4 VA: 0xC445A4
private sealed class BattleDemoRootComponent.<WaitToNoblePhantasmPlay>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9415
{
	// Fields
	internal BattleDemoRootComponent $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDBEA0 Offset: 0xCDBEA0 VA: 0xCDBEA0
	// RVA: 0x111D918 Offset: 0x111D918 VA: 0x111D918
	public void .ctor() { }

	// RVA: 0x111F198 Offset: 0x111F198 VA: 0x111F198 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBEB0 Offset: 0xCDBEB0 VA: 0xCDBEB0
	// RVA: 0x111F460 Offset: 0x111F460 VA: 0x111F460 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBEC0 Offset: 0xCDBEC0 VA: 0xCDBEC0
	// RVA: 0x111F468 Offset: 0x111F468 VA: 0x111F468 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBED0 Offset: 0xCDBED0 VA: 0xCDBED0
	// RVA: 0x111F470 Offset: 0x111F470 VA: 0x111F470 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDBEE0 Offset: 0xCDBEE0 VA: 0xCDBEE0
	// RVA: 0x111F484 Offset: 0x111F484 VA: 0x111F484 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class BattleScriptRootComponent : SceneRootComponent // TypeDefIndex: 9416
{
	// Fields
	protected BattleScriptRootComponent.TalkScriptInfo talkInfo; // 0x38
	protected bool setEndRoll; // 0x40
	public Transform cam; // 0x48
	private const string FREE_SHOP_ID_KEY = "freeShopIds";
	private const string RETURN_RARE_PRI_SHOP_ID_KEY = "returnRarePriShopIds";
	[CompilerGeneratedAttribute] // RVA: 0xC67168 Offset: 0xC67168 VA: 0xC67168
	private static NetworkManager.ResultCallbackFunc <>f__mg$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC67178 Offset: 0xC67178 VA: 0xC67178
	private static Converter<int, string> <>f__am$cache0; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC67188 Offset: 0xC67188 VA: 0xC67188
	private static Converter<int, string> <>f__am$cache1; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC67198 Offset: 0xC67198 VA: 0xC67198
	private static Action <>f__am$cache2; // 0x18

	// Methods

	// RVA: 0xF0DB70 Offset: 0xF0DB70 VA: 0xF0DB70
	public void .ctor() { }

	// RVA: 0xF0DB78 Offset: 0xF0DB78 VA: 0xF0DB78
	private void OnDestroy() { }

	// RVA: 0xF0DBD8 Offset: 0xF0DBD8 VA: 0xF0DBD8 Slot: 4
	public override void beginInitialize() { }

	// RVA: 0xF0DC78 Offset: 0xF0DC78 VA: 0xF0DC78 Slot: 5
	public override void beginStartUp(object data) { }

	// RVA: 0xF0DEA8 Offset: 0xF0DEA8 VA: 0xF0DEA8 Slot: 9
	public override void beginResume(object data) { }

	// RVA: 0xF0DFA8 Offset: 0xF0DFA8 VA: 0xF0DFA8
	public void StartScript() { }

	[DebuggerHiddenAttribute] // RVA: 0xCCE848 Offset: 0xCCE848 VA: 0xCCE848
	// RVA: 0xF0E224 Offset: 0xF0E224 VA: 0xF0E224
	private IEnumerator StartMovie(Action callback) { }

	// RVA: 0xF0E2B8 Offset: 0xF0E2B8 VA: 0xF0E2B8
	private void ProcessBattleScripts(BattleScriptRootComponent.QuestTalkPhase phaseType) { }

	// RVA: 0xF0F600 Offset: 0xF0F600 VA: 0xF0F600
	private void ChkCondHavingBranchQuest() { }

	// RVA: 0xF0FAA8 Offset: 0xF0FAA8 VA: 0xF0FAA8
	private void LoadPlayScenarioWithMap(Action callback) { }

	// RVA: 0xF0FF00 Offset: 0xF0FF00 VA: 0xF0FF00
	private void ProceedToNextTalkPhase(bool isExit) { }

	// RVA: 0xF0ED70 Offset: 0xF0ED70 VA: 0xF0ED70
	private void ProceedToNextTalkPhase() { }

	// RVA: 0xF0FF4C Offset: 0xF0FF4C VA: 0xF0FF4C
	private void StartScriptFinishBattle() { }

	// RVA: 0xF103C8 Offset: 0xF103C8 VA: 0xF103C8
	private void StartScriptFinishBattleEnd2(bool isExit) { }

	// RVA: 0xF0FCF0 Offset: 0xF0FCF0 VA: 0xF0FCF0
	private void StartDemoFinishBattle() { }

	// RVA: 0xF1057C Offset: 0xF1057C VA: 0xF1057C
	private void StartScriptFinishBattleAfterDemo() { }

	// RVA: 0xF10880 Offset: 0xF10880 VA: 0xF10880
	private void ScriptFinishBattleAfterDemoEnd(bool isExit) { }

	// RVA: 0xF0FE20 Offset: 0xF0FE20 VA: 0xF0FE20
	private void StartSecondDemoFinishBattle() { }

	// RVA: 0xF0ED78 Offset: 0xF0ED78 VA: 0xF0ED78
	private void StartBattleQuestStart() { }

	// RVA: 0xF0EE3C Offset: 0xF0EE3C VA: 0xF0EE3C
	private void StartScriptBefeoreBattleDemo() { }

	// RVA: 0xF0F074 Offset: 0xF0F074 VA: 0xF0F074
	private void StartDemoBeforeBattle() { }

	// RVA: 0xF0F154 Offset: 0xF0F154 VA: 0xF0F154
	private void StartScriptBeforeBattleAfterDemo() { }

	// RVA: 0xF0F280 Offset: 0xF0F280 VA: 0xF0F280
	private void EndBeforeBattleScript() { }

	// RVA: 0xF10A34 Offset: 0xF10A34 VA: 0xF10A34
	private void SavePlayedNotMeetsScript(int questId, int phase) { }

	// RVA: 0xF10E94 Offset: 0xF10E94 VA: 0xF10E94
	protected static void EndRequestBattleSetup(string result) { }

	// RVA: 0xF11034 Offset: 0xF11034 VA: 0xF11034
	private static bool StartBattle() { }

	// RVA: 0xF10DC4 Offset: 0xF10DC4 VA: 0xF10DC4
	public static void GoForBattle(BattleSetupInfo battleSetupInfo) { }

	// RVA: 0xF11158 Offset: 0xF11158 VA: 0xF11158
	private static void RequestBattleSetup(BattleSetupInfo battleSetupInfo, NetworkManager.ResultCallbackFunc callbackFunc) { }

	// RVA: 0xF10B88 Offset: 0xF10B88 VA: 0xF10B88
	private void RequestBattleSecnarioForNoneBattleQuest(bool isExit) { }

	// RVA: 0xF11444 Offset: 0xF11444 VA: 0xF11444
	private void EndRequestBattleScenario(string jsonstr) { }

	// RVA: 0xF0F8DC Offset: 0xF0F8DC VA: 0xF0F8DC
	private void StartScriptNoBattleAfter() { }

	// RVA: 0xF0E618 Offset: 0xF0E618 VA: 0xF0E618
	private void ChapterStart() { }

	// RVA: 0xF0E7A8 Offset: 0xF0E7A8 VA: 0xF0E7A8
	private void ChapterStartQuest() { }

	// RVA: 0xF0E6F0 Offset: 0xF0E6F0 VA: 0xF0E6F0
	private void ChapterStartEffect() { }

	// RVA: 0xF0E89C Offset: 0xF0E89C VA: 0xF0E89C
	private void ChapterStartEffectQuest() { }

	// RVA: 0xF119A0 Offset: 0xF119A0 VA: 0xF119A0
	private void EndChapterStart() { }

	// RVA: 0xF11AB8 Offset: 0xF11AB8 VA: 0xF11AB8
	private void StartMashuPowerUpAction(Action end_act) { }

	// RVA: 0xF0E95C Offset: 0xF0E95C VA: 0xF0E95C
	private void TransitionTerminal() { }

	// RVA: 0xF11C2C Offset: 0xF11C2C VA: 0xF11C2C
	private void TransitionTerminalSub() { }

	// RVA: 0xF11E00 Offset: 0xF11E00 VA: 0xF11E00
	private void TransitionWarBoard() { }

	// RVA: 0xF120D4 Offset: 0xF120D4 VA: 0xF120D4
	private void PlayStaffRoll(Action callback) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE858 Offset: 0xCCE858 VA: 0xCCE858
	// RVA: 0xF121FC Offset: 0xF121FC VA: 0xF121FC
	private void <StartScript>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE868 Offset: 0xCCE868 VA: 0xCCE868
	// RVA: 0xF12230 Offset: 0xF12230 VA: 0xF12230
	private void <ProcessBattleScripts>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE878 Offset: 0xCCE878 VA: 0xCCE878
	// RVA: 0xF12234 Offset: 0xF12234 VA: 0xF12234
	private void <StartDemoFinishBattle>m__2(string demoInfo) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE888 Offset: 0xCCE888 VA: 0xCCE888
	// RVA: 0xF12374 Offset: 0xF12374 VA: 0xF12374
	private void <StartSecondDemoFinishBattle>m__3(string demoInfo) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE898 Offset: 0xCCE898 VA: 0xCCE898
	// RVA: 0xF124FC Offset: 0xF124FC VA: 0xF124FC
	private void <StartScriptBefeoreBattleDemo>m__4() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE8A8 Offset: 0xCCE8A8 VA: 0xCCE8A8
	// RVA: 0xF12638 Offset: 0xF12638 VA: 0xF12638
	private void <StartDemoBeforeBattle>m__5(string demoInfo) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE8B8 Offset: 0xCCE8B8 VA: 0xCCE8B8
	// RVA: 0xF12778 Offset: 0xF12778 VA: 0xF12778
	private static string <EndRequestBattleScenario>m__6(int x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE8C8 Offset: 0xCCE8C8 VA: 0xCCE8C8
	// RVA: 0xF127A0 Offset: 0xF127A0 VA: 0xF127A0
	private static string <EndRequestBattleScenario>m__7(int x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE8D8 Offset: 0xCCE8D8 VA: 0xCCE8D8
	// RVA: 0xF127C8 Offset: 0xF127C8 VA: 0xF127C8
	private void <EndRequestBattleScenario>m__8() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE8E8 Offset: 0xCCE8E8 VA: 0xCCE8E8
	// RVA: 0xF127FC Offset: 0xF127FC VA: 0xF127FC
	private void <StartScriptNoBattleAfter>m__9(bool isExit) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE8F8 Offset: 0xCCE8F8 VA: 0xCCE8F8
	// RVA: 0xF12870 Offset: 0xF12870 VA: 0xF12870
	private void <StartScriptNoBattleAfter>m__A(bool isExit) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE908 Offset: 0xCCE908 VA: 0xCCE908
	// RVA: 0xF12874 Offset: 0xF12874 VA: 0xF12874
	private void <ChapterStart>m__B() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE918 Offset: 0xCCE918 VA: 0xCCE918
	// RVA: 0xF12920 Offset: 0xF12920 VA: 0xF12920
	private void <ChapterStartQuest>m__C() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE928 Offset: 0xCCE928 VA: 0xCCE928
	// RVA: 0xF12A70 Offset: 0xF12A70 VA: 0xF12A70
	private void <ChapterStartEffect>m__D(bool isExit) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE938 Offset: 0xCCE938 VA: 0xCCE938
	// RVA: 0xF12AE0 Offset: 0xF12AE0 VA: 0xF12AE0
	private void <ChapterStartEffectQuest>m__E(bool isExit) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE948 Offset: 0xCCE948 VA: 0xCCE948
	// RVA: 0xF12AE4 Offset: 0xF12AE4 VA: 0xF12AE4
	private static void <TransitionWarBoard>m__F() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE958 Offset: 0xCCE958 VA: 0xCCE958
	// RVA: 0xF12B54 Offset: 0xF12B54 VA: 0xF12B54
	private void <StartSecondDemoFinishBattle>m__10() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCE968 Offset: 0xCCE968 VA: 0xCCE968
	// RVA: 0xF12B5C Offset: 0xF12B5C VA: 0xF12B5C
	private void <ChapterStartEffect>m__11() { }
}

// Namespace: 
public enum BattleScriptRootComponent.TalkType // TypeDefIndex: 9417
{
	// Fields
	public int value__; // 0x0
	public const BattleScriptRootComponent.TalkType NONE = 0;
	public const BattleScriptRootComponent.TalkType WAR_PROLOGUE = 1;
	public const BattleScriptRootComponent.TalkType WAR_EPILOGUE = 2;
	public const BattleScriptRootComponent.TalkType BATTLE_BEFORE = 3;
	public const BattleScriptRootComponent.TalkType BATTLE_AFTER = 4;
	public const BattleScriptRootComponent.TalkType NOBATTLE_QUEST = 5;
	public const BattleScriptRootComponent.TalkType NOTMEETS_COND = 6;
	public const BattleScriptRootComponent.TalkType BATTLE_BEFORE_WITH_MAP = 7;
	public const BattleScriptRootComponent.TalkType NOBATTLE_QUEST_WITH_MAP = 8;
}

// Namespace: 
public enum BattleScriptRootComponent.QuestTalkPhase // TypeDefIndex: 9418
{
	// Fields
	public int value__; // 0x0
	public const BattleScriptRootComponent.QuestTalkPhase NONE = 0;
	public const BattleScriptRootComponent.QuestTalkPhase BEFORE_BATTLE_QUEST_START = 1;
	public const BattleScriptRootComponent.QuestTalkPhase BEFORE_BATTLE_BEFORE_DEMO = 2;
	public const BattleScriptRootComponent.QuestTalkPhase BEFORE_BATTLE_BATTLE_DEMO = 3;
	public const BattleScriptRootComponent.QuestTalkPhase BEFORE_BATTLE_AFTER_DEMO = 4;
	public const BattleScriptRootComponent.QuestTalkPhase GO_TO_BATTLE = 5;
	public const BattleScriptRootComponent.QuestTalkPhase AFTER_BATTLE_BEFORE_DEMO = 6;
	public const BattleScriptRootComponent.QuestTalkPhase AFTER_BATTLE_BATTLE_DEMO = 7;
	public const BattleScriptRootComponent.QuestTalkPhase AFTER_BATTLE_AFTER_DEMO = 8;
	public const BattleScriptRootComponent.QuestTalkPhase AFTER_BATTLE_BATTLE_DEMO2 = 9;
