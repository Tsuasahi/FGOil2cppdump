	// RVA: 0x1D181E0 Offset: 0x1D181E0 VA: 0x1D181E0
	public OcspResponseStatus get_ResponseStatus() { }

	// RVA: 0x1D181E8 Offset: 0x1D181E8 VA: 0x1D181E8
	public ResponseBytes get_ResponseBytes() { }

	// RVA: 0x1D181F0 Offset: 0x1D181F0 VA: 0x1D181F0 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.Ocsp
public class OcspResponseStatus : DerEnumerated // TypeDefIndex: 4490
{
	// Fields
	public const int Successful = 0;
	public const int MalformedRequest = 1;
	public const int InternalError = 2;
	public const int TryLater = 3;
	public const int SignatureRequired = 5;
	public const int Unauthorized = 6;

	// Methods

	// RVA: 0x1D18394 Offset: 0x1D18394 VA: 0x1D18394
	public void .ctor(int value) { }

	// RVA: 0x1D17F08 Offset: 0x1D17F08 VA: 0x1D17F08
	public void .ctor(DerEnumerated value) { }
}

// Namespace: Org.BouncyCastle.Asn1.Ocsp
public class ResponderID : Asn1Encodable, IAsn1Choice // TypeDefIndex: 4491
{
	// Fields
	private readonly Asn1Encodable id; // 0x10

	// Properties
	public virtual X509Name Name { get; }

	// Methods

	// RVA: 0x1D1840C Offset: 0x1D1840C VA: 0x1D1840C
	public void .ctor(Asn1OctetString id) { }

	// RVA: 0x1D184B0 Offset: 0x1D184B0 VA: 0x1D184B0
	public void .ctor(X509Name id) { }

	// RVA: 0x1D18554 Offset: 0x1D18554 VA: 0x1D18554
	public static ResponderID GetInstance(object obj) { }

	// RVA: 0x1D18780 Offset: 0x1D18780 VA: 0x1D18780
	public static ResponderID GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x1D187B0 Offset: 0x1D187B0 VA: 0x1D187B0 Slot: 6
	public virtual byte[] GetKeyHash() { }

	// RVA: 0x1D1883C Offset: 0x1D1883C VA: 0x1D1883C Slot: 7
	public virtual X509Name get_Name() { }

	// RVA: 0x1D188F0 Offset: 0x1D188F0 VA: 0x1D188F0 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.Ocsp
public class ResponseBytes : Asn1Encodable // TypeDefIndex: 4492
{
	// Fields
	private readonly DerObjectIdentifier responseType; // 0x10
	private readonly Asn1OctetString response; // 0x18

	// Properties
	public DerObjectIdentifier ResponseType { get; }
	public Asn1OctetString Response { get; }

	// Methods

	// RVA: 0x1D189C8 Offset: 0x1D189C8 VA: 0x1D189C8
	public void .ctor(DerObjectIdentifier responseType, Asn1OctetString response) { }

	// RVA: 0x1D18A90 Offset: 0x1D18A90 VA: 0x1D18A90
	private void .ctor(Asn1Sequence seq) { }

	// RVA: 0x1D17FB0 Offset: 0x1D17FB0 VA: 0x1D17FB0
	public static ResponseBytes GetInstance(Asn1TaggedObject obj, bool explicitly) { }

	// RVA: 0x1D18BC4 Offset: 0x1D18BC4 VA: 0x1D18BC4
	public static ResponseBytes GetInstance(object obj) { }

	// RVA: 0x1D18DBC Offset: 0x1D18DBC VA: 0x1D18DBC
	public DerObjectIdentifier get_ResponseType() { }

	// RVA: 0x1D18DC4 Offset: 0x1D18DC4 VA: 0x1D18DC4
	public Asn1OctetString get_Response() { }

	// RVA: 0x1D18DCC Offset: 0x1D18DCC VA: 0x1D18DCC Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class OidTokenizer // TypeDefIndex: 4493
{
	// Fields
	private string oid; // 0x10
	private int index; // 0x18

	// Properties
	public bool HasMoreTokens { get; }

	// Methods

	// RVA: 0x1D0FB9C Offset: 0x1D0FB9C VA: 0x1D0FB9C
	public void .ctor(string oid) { }

	// RVA: 0x1D0FC84 Offset: 0x1D0FC84 VA: 0x1D0FC84
	public bool get_HasMoreTokens() { }

	// RVA: 0x1D0FBC8 Offset: 0x1D0FBC8 VA: 0x1D0FBC8
	public string NextToken() { }
}

// Namespace: Org.BouncyCastle.Asn1.Oiw
public class ElGamalParameter : Asn1Encodable // TypeDefIndex: 4494
{
	// Fields
	internal DerInteger p; // 0x10
	internal DerInteger g; // 0x18

	// Properties
	public BigInteger P { get; }
	public BigInteger G { get; }

	// Methods

	// RVA: 0x1D18EF0 Offset: 0x1D18EF0 VA: 0x1D18EF0
	public void .ctor(BigInteger p, BigInteger g) { }

	// RVA: 0x1D18F8C Offset: 0x1D18F8C VA: 0x1D18F8C
	public void .ctor(Asn1Sequence seq) { }

	// RVA: 0x1D19090 Offset: 0x1D19090 VA: 0x1D19090
	public BigInteger get_P() { }

	// RVA: 0x1D190BC Offset: 0x1D190BC VA: 0x1D190BC
	public BigInteger get_G() { }

	// RVA: 0x1D190E8 Offset: 0x1D190E8 VA: 0x1D190E8 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.Oiw
public abstract class OiwObjectIdentifiers // TypeDefIndex: 4495
{
	// Fields
	public static readonly DerObjectIdentifier MD4WithRsa; // 0x0
	public static readonly DerObjectIdentifier MD5WithRsa; // 0x8
	public static readonly DerObjectIdentifier MD4WithRsaEncryption; // 0x10
	public static readonly DerObjectIdentifier DesEcb; // 0x18
	public static readonly DerObjectIdentifier DesCbc; // 0x20
	public static readonly DerObjectIdentifier DesOfb; // 0x28
	public static readonly DerObjectIdentifier DesCfb; // 0x30
	public static readonly DerObjectIdentifier DesEde; // 0x38
	public static readonly DerObjectIdentifier IdSha1; // 0x40
	public static readonly DerObjectIdentifier DsaWithSha1; // 0x48
	public static readonly DerObjectIdentifier Sha1WithRsa; // 0x50
	public static readonly DerObjectIdentifier ElGamalAlgorithm; // 0x58

	// Methods

	// RVA: 0x1D1920C Offset: 0x1D1920C VA: 0x1D1920C
	protected void .ctor() { }

	// RVA: 0x1D19214 Offset: 0x1D19214 VA: 0x1D19214
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1.Pkcs
public class ContentInfo : Asn1Encodable // TypeDefIndex: 4496
{
	// Fields
	private readonly DerObjectIdentifier contentType; // 0x10
	private readonly Asn1Encodable content; // 0x18

	// Properties
	public DerObjectIdentifier ContentType { get; }
	public Asn1Encodable Content { get; }

	// Methods

	// RVA: 0x1D19448 Offset: 0x1D19448 VA: 0x1D19448
	private void .ctor(Asn1Sequence seq) { }

	// RVA: 0x1D1967C Offset: 0x1D1967C VA: 0x1D1967C
	public void .ctor(DerObjectIdentifier contentType, Asn1Encodable content) { }

	// RVA: 0x1D196B4 Offset: 0x1D196B4 VA: 0x1D196B4
	public static ContentInfo GetInstance(object obj) { }

	// RVA: 0x1D19758 Offset: 0x1D19758 VA: 0x1D19758
	public DerObjectIdentifier get_ContentType() { }

	// RVA: 0x1D19760 Offset: 0x1D19760 VA: 0x1D19760
	public Asn1Encodable get_Content() { }

	// RVA: 0x1D19768 Offset: 0x1D19768 VA: 0x1D19768 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.Pkcs
public class DHParameter : Asn1Encodable // TypeDefIndex: 4497
{
	// Fields
	internal DerInteger p; // 0x10
	internal DerInteger g; // 0x18
	internal DerInteger l; // 0x20

	// Properties
	public BigInteger P { get; }
	public BigInteger G { get; }
	public BigInteger L { get; }

	// Methods

	// RVA: 0x1D1990C Offset: 0x1D1990C VA: 0x1D1990C
	public void .ctor(BigInteger p, BigInteger g, int l) { }

	// RVA: 0x1D199C8 Offset: 0x1D199C8 VA: 0x1D199C8
	public void .ctor(Asn1Sequence seq) { }

	// RVA: 0x1D19E58 Offset: 0x1D19E58 VA: 0x1D19E58
	public BigInteger get_P() { }

	// RVA: 0x1D19E84 Offset: 0x1D19E84 VA: 0x1D19E84
	public BigInteger get_G() { }

	// RVA: 0x1D19EB0 Offset: 0x1D19EB0 VA: 0x1D19EB0
	public BigInteger get_L() { }

	// RVA: 0x1D19EC0 Offset: 0x1D19EC0 VA: 0x1D19EC0 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.Pkcs
public abstract class PkcsObjectIdentifiers // TypeDefIndex: 4498
{
	// Fields
	public const string Pkcs1 = "1.2.840.113549.1.1";
	public static readonly DerObjectIdentifier RsaEncryption; // 0x0
	public static readonly DerObjectIdentifier MD2WithRsaEncryption; // 0x8
	public static readonly DerObjectIdentifier MD4WithRsaEncryption; // 0x10
	public static readonly DerObjectIdentifier MD5WithRsaEncryption; // 0x18
	public static readonly DerObjectIdentifier Sha1WithRsaEncryption; // 0x20
	public static readonly DerObjectIdentifier SrsaOaepEncryptionSet; // 0x28
	public static readonly DerObjectIdentifier IdRsaesOaep; // 0x30
	public static readonly DerObjectIdentifier IdMgf1; // 0x38
	public static readonly DerObjectIdentifier IdPSpecified; // 0x40
	public static readonly DerObjectIdentifier IdRsassaPss; // 0x48
	public static readonly DerObjectIdentifier Sha256WithRsaEncryption; // 0x50
	public static readonly DerObjectIdentifier Sha384WithRsaEncryption; // 0x58
	public static readonly DerObjectIdentifier Sha512WithRsaEncryption; // 0x60
	public static readonly DerObjectIdentifier Sha224WithRsaEncryption; // 0x68
	public const string Pkcs3 = "1.2.840.113549.1.3";
	public static readonly DerObjectIdentifier DhKeyAgreement; // 0x70
	public const string Pkcs5 = "1.2.840.113549.1.5";
	public static readonly DerObjectIdentifier PbeWithMD2AndDesCbc; // 0x78
	public static readonly DerObjectIdentifier PbeWithMD2AndRC2Cbc; // 0x80
	public static readonly DerObjectIdentifier PbeWithMD5AndDesCbc; // 0x88
	public static readonly DerObjectIdentifier PbeWithMD5AndRC2Cbc; // 0x90
	public static readonly DerObjectIdentifier PbeWithSha1AndDesCbc; // 0x98
	public static readonly DerObjectIdentifier PbeWithSha1AndRC2Cbc; // 0xA0
	public static readonly DerObjectIdentifier IdPbeS2; // 0xA8
	public static readonly DerObjectIdentifier IdPbkdf2; // 0xB0
	public const string EncryptionAlgorithm = "1.2.840.113549.3";
	public static readonly DerObjectIdentifier DesEde3Cbc; // 0xB8
	public static readonly DerObjectIdentifier RC2Cbc; // 0xC0
	public const string DigestAlgorithm = "1.2.840.113549.2";
	public static readonly DerObjectIdentifier MD2; // 0xC8
	public static readonly DerObjectIdentifier MD4; // 0xD0
	public static readonly DerObjectIdentifier MD5; // 0xD8
	public static readonly DerObjectIdentifier IdHmacWithSha1; // 0xE0
	public static readonly DerObjectIdentifier IdHmacWithSha224; // 0xE8
	public static readonly DerObjectIdentifier IdHmacWithSha256; // 0xF0
	public static readonly DerObjectIdentifier IdHmacWithSha384; // 0xF8
	public static readonly DerObjectIdentifier IdHmacWithSha512; // 0x100
	public const string Pkcs7 = "1.2.840.113549.1.7";
	public static readonly DerObjectIdentifier Data; // 0x108
	public static readonly DerObjectIdentifier SignedData; // 0x110
	public static readonly DerObjectIdentifier EnvelopedData; // 0x118
	public static readonly DerObjectIdentifier SignedAndEnvelopedData; // 0x120
	public static readonly DerObjectIdentifier DigestedData; // 0x128
	public static readonly DerObjectIdentifier EncryptedData; // 0x130
	public const string Pkcs9 = "1.2.840.113549.1.9";
	public static readonly DerObjectIdentifier Pkcs9AtEmailAddress; // 0x138
	public static readonly DerObjectIdentifier Pkcs9AtUnstructuredName; // 0x140
	public static readonly DerObjectIdentifier Pkcs9AtContentType; // 0x148
	public static readonly DerObjectIdentifier Pkcs9AtMessageDigest; // 0x150
	public static readonly DerObjectIdentifier Pkcs9AtSigningTime; // 0x158
	public static readonly DerObjectIdentifier Pkcs9AtCounterSignature; // 0x160
	public static readonly DerObjectIdentifier Pkcs9AtChallengePassword; // 0x168
	public static readonly DerObjectIdentifier Pkcs9AtUnstructuredAddress; // 0x170
	public static readonly DerObjectIdentifier Pkcs9AtExtendedCertificateAttributes; // 0x178
	public static readonly DerObjectIdentifier Pkcs9AtSigningDescription; // 0x180
	public static readonly DerObjectIdentifier Pkcs9AtExtensionRequest; // 0x188
	public static readonly DerObjectIdentifier Pkcs9AtSmimeCapabilities; // 0x190
	public static readonly DerObjectIdentifier IdSmime; // 0x198
	public static readonly DerObjectIdentifier Pkcs9AtFriendlyName; // 0x1A0
	public static readonly DerObjectIdentifier Pkcs9AtLocalKeyID; // 0x1A8
	[ObsoleteAttribute] // RVA: 0xC49E54 Offset: 0xC49E54 VA: 0xC49E54
	public static readonly DerObjectIdentifier X509CertType; // 0x1B0
	public const string CertTypes = "1.2.840.113549.1.9.22";
	public static readonly DerObjectIdentifier X509Certificate; // 0x1B8
	public static readonly DerObjectIdentifier SdsiCertificate; // 0x1C0
	public const string CrlTypes = "1.2.840.113549.1.9.23";
	public static readonly DerObjectIdentifier X509Crl; // 0x1C8
	public static readonly DerObjectIdentifier IdAlg; // 0x1D0
	public static readonly DerObjectIdentifier IdAlgEsdh; // 0x1D8
	public static readonly DerObjectIdentifier IdAlgCms3DesWrap; // 0x1E0
	public static readonly DerObjectIdentifier IdAlgCmsRC2Wrap; // 0x1E8
	public static readonly DerObjectIdentifier IdAlgPwriKek; // 0x1F0
	public static readonly DerObjectIdentifier IdAlgSsdh; // 0x1F8
	public static readonly DerObjectIdentifier IdRsaKem; // 0x200
	public static readonly DerObjectIdentifier PreferSignedData; // 0x208
	public static readonly DerObjectIdentifier CannotDecryptAny; // 0x210
	public static readonly DerObjectIdentifier SmimeCapabilitiesVersions; // 0x218
	public static readonly DerObjectIdentifier IdAAReceiptRequest; // 0x220
	public const string IdCT = "1.2.840.113549.1.9.16.1";
	public static readonly DerObjectIdentifier IdCTAuthData; // 0x228
	public static readonly DerObjectIdentifier IdCTTstInfo; // 0x230
	public static readonly DerObjectIdentifier IdCTCompressedData; // 0x238
	public static readonly DerObjectIdentifier IdCTAuthEnvelopedData; // 0x240
	public static readonly DerObjectIdentifier IdCTTimestampedData; // 0x248
	public const string IdCti = "1.2.840.113549.1.9.16.6";
	public static readonly DerObjectIdentifier IdCtiEtsProofOfOrigin; // 0x250
	public static readonly DerObjectIdentifier IdCtiEtsProofOfReceipt; // 0x258
	public static readonly DerObjectIdentifier IdCtiEtsProofOfDelivery; // 0x260
	public static readonly DerObjectIdentifier IdCtiEtsProofOfSender; // 0x268
	public static readonly DerObjectIdentifier IdCtiEtsProofOfApproval; // 0x270
	public static readonly DerObjectIdentifier IdCtiEtsProofOfCreation; // 0x278
	public const string IdAA = "1.2.840.113549.1.9.16.2";
	public static readonly DerObjectIdentifier IdAAContentHint; // 0x280
	public static readonly DerObjectIdentifier IdAAMsgSigDigest; // 0x288
	public static readonly DerObjectIdentifier IdAAContentReference; // 0x290
	public static readonly DerObjectIdentifier IdAAEncrypKeyPref; // 0x298
	public static readonly DerObjectIdentifier IdAASigningCertificate; // 0x2A0
	public static readonly DerObjectIdentifier IdAASigningCertificateV2; // 0x2A8
	public static readonly DerObjectIdentifier IdAAContentIdentifier; // 0x2B0
	public static readonly DerObjectIdentifier IdAASignatureTimeStampToken; // 0x2B8
	public static readonly DerObjectIdentifier IdAAEtsSigPolicyID; // 0x2C0
	public static readonly DerObjectIdentifier IdAAEtsCommitmentType; // 0x2C8
	public static readonly DerObjectIdentifier IdAAEtsSignerLocation; // 0x2D0
	public static readonly DerObjectIdentifier IdAAEtsSignerAttr; // 0x2D8
	public static readonly DerObjectIdentifier IdAAEtsOtherSigCert; // 0x2E0
	public static readonly DerObjectIdentifier IdAAEtsContentTimestamp; // 0x2E8
	public static readonly DerObjectIdentifier IdAAEtsCertificateRefs; // 0x2F0
	public static readonly DerObjectIdentifier IdAAEtsRevocationRefs; // 0x2F8
	public static readonly DerObjectIdentifier IdAAEtsCertValues; // 0x300
	public static readonly DerObjectIdentifier IdAAEtsRevocationValues; // 0x308
	public static readonly DerObjectIdentifier IdAAEtsEscTimeStamp; // 0x310
	public static readonly DerObjectIdentifier IdAAEtsCertCrlTimestamp; // 0x318
	public static readonly DerObjectIdentifier IdAAEtsArchiveTimestamp; // 0x320
	[ObsoleteAttribute] // RVA: 0xC49E8C Offset: 0xC49E8C VA: 0xC49E8C
	public static readonly DerObjectIdentifier IdAASigPolicyID; // 0x328
	[ObsoleteAttribute] // RVA: 0xC49EC4 Offset: 0xC49EC4 VA: 0xC49EC4
	public static readonly DerObjectIdentifier IdAACommitmentType; // 0x330
	[ObsoleteAttribute] // RVA: 0xC49EFC Offset: 0xC49EFC VA: 0xC49EFC
	public static readonly DerObjectIdentifier IdAASignerLocation; // 0x338
	[ObsoleteAttribute] // RVA: 0xC49F34 Offset: 0xC49F34 VA: 0xC49F34
	public static readonly DerObjectIdentifier IdAAOtherSigCert; // 0x340
	public const string IdSpq = "1.2.840.113549.1.9.16.5";
	public static readonly DerObjectIdentifier IdSpqEtsUri; // 0x348
	public static readonly DerObjectIdentifier IdSpqEtsUNotice; // 0x350
	public const string Pkcs12 = "1.2.840.113549.1.12";
	public const string BagTypes = "1.2.840.113549.1.12.10.1";
	public static readonly DerObjectIdentifier KeyBag; // 0x358
	public static readonly DerObjectIdentifier Pkcs8ShroudedKeyBag; // 0x360
	public static readonly DerObjectIdentifier CertBag; // 0x368
	public static readonly DerObjectIdentifier CrlBag; // 0x370
	public static readonly DerObjectIdentifier SecretBag; // 0x378
	public static readonly DerObjectIdentifier SafeContentsBag; // 0x380
	public const string Pkcs12PbeIds = "1.2.840.113549.1.12.1";
	public static readonly DerObjectIdentifier PbeWithShaAnd128BitRC4; // 0x388
	public static readonly DerObjectIdentifier PbeWithShaAnd40BitRC4; // 0x390
	public static readonly DerObjectIdentifier PbeWithShaAnd3KeyTripleDesCbc; // 0x398
	public static readonly DerObjectIdentifier PbeWithShaAnd2KeyTripleDesCbc; // 0x3A0
	public static readonly DerObjectIdentifier PbeWithShaAnd128BitRC2Cbc; // 0x3A8
	public static readonly DerObjectIdentifier PbewithShaAnd40BitRC2Cbc; // 0x3B0

	// Methods

	// RVA: 0x1D1A080 Offset: 0x1D1A080 VA: 0x1D1A080
	protected void .ctor() { }

	// RVA: 0x1D1A088 Offset: 0x1D1A088 VA: 0x1D1A088
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1.Pkcs
public class RsassaPssParameters : Asn1Encodable // TypeDefIndex: 4499
{
	// Fields
	private AlgorithmIdentifier hashAlgorithm; // 0x10
	private AlgorithmIdentifier maskGenAlgorithm; // 0x18
	private DerInteger saltLength; // 0x20
	private DerInteger trailerField; // 0x28
	public static readonly AlgorithmIdentifier DefaultHashAlgorithm; // 0x0
	public static readonly AlgorithmIdentifier DefaultMaskGenFunction; // 0x8
	public static readonly DerInteger DefaultSaltLength; // 0x10
	public static readonly DerInteger DefaultTrailerField; // 0x18

	// Properties
	public AlgorithmIdentifier HashAlgorithm { get; }
	public AlgorithmIdentifier MaskGenAlgorithm { get; }
	public DerInteger SaltLength { get; }
	public DerInteger TrailerField { get; }

	// Methods

	// RVA: 0x1D1B3D0 Offset: 0x1D1B3D0 VA: 0x1D1B3D0
	public void .ctor() { }

	// RVA: 0x1D1B470 Offset: 0x1D1B470 VA: 0x1D1B470
	public void .ctor(AlgorithmIdentifier hashAlgorithm, AlgorithmIdentifier maskGenAlgorithm, DerInteger saltLength, DerInteger trailerField) { }

	// RVA: 0x1D1B4BC Offset: 0x1D1B4BC VA: 0x1D1B4BC
	public void .ctor(Asn1Sequence seq) { }

	// RVA: 0x1D1B70C Offset: 0x1D1B70C VA: 0x1D1B70C
	public static RsassaPssParameters GetInstance(object obj) { }

	// RVA: 0x1D1B904 Offset: 0x1D1B904 VA: 0x1D1B904
	public AlgorithmIdentifier get_HashAlgorithm() { }

	// RVA: 0x1D1B90C Offset: 0x1D1B90C VA: 0x1D1B90C
	public AlgorithmIdentifier get_MaskGenAlgorithm() { }

	// RVA: 0x1D1B914 Offset: 0x1D1B914 VA: 0x1D1B914
	public DerInteger get_SaltLength() { }

	// RVA: 0x1D1B91C Offset: 0x1D1B91C VA: 0x1D1B91C
	public DerInteger get_TrailerField() { }

	// RVA: 0x1D1B924 Offset: 0x1D1B924 VA: 0x1D1B924 Slot: 5
	public override Asn1Object ToAsn1Object() { }

	// RVA: 0x1D1BDC0 Offset: 0x1D1BDC0 VA: 0x1D1BDC0
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1.Pkcs
public class SignedData : Asn1Encodable // TypeDefIndex: 4500
{
	// Fields
	private readonly DerInteger version; // 0x10
	private readonly Asn1Set digestAlgorithms; // 0x18
	private readonly ContentInfo contentInfo; // 0x20
	private readonly Asn1Set certificates; // 0x28
	private readonly Asn1Set crls; // 0x30
	private readonly Asn1Set signerInfos; // 0x38

	// Properties
	public DerInteger Version { get; }
	public Asn1Set DigestAlgorithms { get; }
	public ContentInfo ContentInfo { get; }
	public Asn1Set Certificates { get; }
	public Asn1Set Crls { get; }
	public Asn1Set SignerInfos { get; }

	// Methods

	// RVA: 0x1D1BF48 Offset: 0x1D1BF48 VA: 0x1D1BF48
	public void .ctor(DerInteger _version, Asn1Set _digestAlgorithms, ContentInfo _contentInfo, Asn1Set _certificates, Asn1Set _crls, Asn1Set _signerInfos) { }

	// RVA: 0x1D1BFA8 Offset: 0x1D1BFA8 VA: 0x1D1BFA8
	private void .ctor(Asn1Sequence seq) { }

	// RVA: 0x1D1C6B4 Offset: 0x1D1C6B4 VA: 0x1D1C6B4
	public static SignedData GetInstance(object obj) { }

	// RVA: 0x1D1C758 Offset: 0x1D1C758 VA: 0x1D1C758
	public DerInteger get_Version() { }

	// RVA: 0x1D1C760 Offset: 0x1D1C760 VA: 0x1D1C760
	public Asn1Set get_DigestAlgorithms() { }

	// RVA: 0x1D1C768 Offset: 0x1D1C768 VA: 0x1D1C768
	public ContentInfo get_ContentInfo() { }

	// RVA: 0x1D1C770 Offset: 0x1D1C770 VA: 0x1D1C770
	public Asn1Set get_Certificates() { }

	// RVA: 0x1D1C778 Offset: 0x1D1C778 VA: 0x1D1C778
	public Asn1Set get_Crls() { }

	// RVA: 0x1D1C780 Offset: 0x1D1C780 VA: 0x1D1C780
	public Asn1Set get_SignerInfos() { }

	// RVA: 0x1D1C788 Offset: 0x1D1C788 VA: 0x1D1C788 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.Sec
public sealed class SecNamedCurves // TypeDefIndex: 4501
{
	// Fields
	private static readonly IDictionary objIds; // 0x0
	private static readonly IDictionary curves; // 0x8
	private static readonly IDictionary names; // 0x10

	// Properties
	public static IEnumerable Names { get; }

	// Methods

	// RVA: 0x1D1CB00 Offset: 0x1D1CB00 VA: 0x1D1CB00
	private void .ctor() { }

	// RVA: 0x1D1CB08 Offset: 0x1D1CB08 VA: 0x1D1CB08
	private static void .cctor() { }

	// RVA: 0x1D1D7E0 Offset: 0x1D1D7E0 VA: 0x1D1D7E0
	private static ECCurve ConfigureCurve(ECCurve curve) { }

	// RVA: 0x1D1D7E4 Offset: 0x1D1D7E4 VA: 0x1D1D7E4
	private static ECCurve ConfigureCurveGlv(ECCurve c, GlvTypeBParameters p) { }

	// RVA: 0x1D1D8A8 Offset: 0x1D1D8A8 VA: 0x1D1D8A8
	private static BigInteger FromHex(string hex) { }

	// RVA: 0x1D1D59C Offset: 0x1D1D59C VA: 0x1D1D59C
	private static void DefineCurve(string name, DerObjectIdentifier oid, X9ECParametersHolder holder) { }

	// RVA: 0x1D1D944 Offset: 0x1D1D944 VA: 0x1D1D944
	public static X9ECParameters GetByName(string name) { }

	// RVA: 0x1D16E24 Offset: 0x1D16E24 VA: 0x1D16E24
	public static X9ECParameters GetByOid(DerObjectIdentifier oid) { }

	// RVA: 0x1D1D9DC Offset: 0x1D1D9DC VA: 0x1D1D9DC
	public static DerObjectIdentifier GetOid(string name) { }

	// RVA: 0x1D1DB80 Offset: 0x1D1DB80 VA: 0x1D1DB80
	public static string GetName(DerObjectIdentifier oid) { }

	// RVA: 0x1D1DCD4 Offset: 0x1D1DCD4 VA: 0x1D1DCD4
	public static IEnumerable get_Names() { }
}

// Namespace: 
internal class SecNamedCurves.Secp112r1Holder : X9ECParametersHolder // TypeDefIndex: 4502
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1D1DDE0 Offset: 0x1D1DDE0 VA: 0x1D1DDE0
	private void .ctor() { }

	// RVA: 0x1D1DDE8 Offset: 0x1D1DDE8 VA: 0x1D1DDE8 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D1DFC8 Offset: 0x1D1DFC8 VA: 0x1D1DFC8
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Secp112r2Holder : X9ECParametersHolder // TypeDefIndex: 4503
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1D1E02C Offset: 0x1D1E02C VA: 0x1D1E02C
	private void .ctor() { }

	// RVA: 0x1D1E034 Offset: 0x1D1E034 VA: 0x1D1E034 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D1E21C Offset: 0x1D1E21C VA: 0x1D1E21C
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Secp128r1Holder : X9ECParametersHolder // TypeDefIndex: 4504
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1D1E280 Offset: 0x1D1E280 VA: 0x1D1E280
	private void .ctor() { }

	// RVA: 0x1D1E288 Offset: 0x1D1E288 VA: 0x1D1E288 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D1E468 Offset: 0x1D1E468 VA: 0x1D1E468
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Secp128r2Holder : X9ECParametersHolder // TypeDefIndex: 4505
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1D1E4CC Offset: 0x1D1E4CC VA: 0x1D1E4CC
	private void .ctor() { }

	// RVA: 0x1D1E4D4 Offset: 0x1D1E4D4 VA: 0x1D1E4D4 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D1E6BC Offset: 0x1D1E6BC VA: 0x1D1E6BC
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Secp160k1Holder : X9ECParametersHolder // TypeDefIndex: 4506
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1D1E720 Offset: 0x1D1E720 VA: 0x1D1E720
	private void .ctor() { }

	// RVA: 0x1D1E728 Offset: 0x1D1E728 VA: 0x1D1E728 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D1EBBC Offset: 0x1D1EBBC VA: 0x1D1EBBC
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Secp160r1Holder : X9ECParametersHolder // TypeDefIndex: 4507
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1D1EC20 Offset: 0x1D1EC20 VA: 0x1D1EC20
	private void .ctor() { }

	// RVA: 0x1D1EC28 Offset: 0x1D1EC28 VA: 0x1D1EC28 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D1EE08 Offset: 0x1D1EE08 VA: 0x1D1EE08
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Secp160r2Holder : X9ECParametersHolder // TypeDefIndex: 4508
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1D1EE6C Offset: 0x1D1EE6C VA: 0x1D1EE6C
	private void .ctor() { }

	// RVA: 0x1D1EE74 Offset: 0x1D1EE74 VA: 0x1D1EE74 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D1F054 Offset: 0x1D1F054 VA: 0x1D1F054
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Secp192k1Holder : X9ECParametersHolder // TypeDefIndex: 4509
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1D1F0B8 Offset: 0x1D1F0B8 VA: 0x1D1F0B8
	private void .ctor() { }

	// RVA: 0x1D1F0C0 Offset: 0x1D1F0C0 VA: 0x1D1F0C0 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D1F554 Offset: 0x1D1F554 VA: 0x1D1F554
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Secp192r1Holder : X9ECParametersHolder // TypeDefIndex: 4510
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1D1F5B8 Offset: 0x1D1F5B8 VA: 0x1D1F5B8
	private void .ctor() { }

	// RVA: 0x1D1F5C0 Offset: 0x1D1F5C0 VA: 0x1D1F5C0 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D1F7A0 Offset: 0x1D1F7A0 VA: 0x1D1F7A0
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Secp224k1Holder : X9ECParametersHolder // TypeDefIndex: 4511
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1D1F804 Offset: 0x1D1F804 VA: 0x1D1F804
	private void .ctor() { }

	// RVA: 0x1D1F80C Offset: 0x1D1F80C VA: 0x1D1F80C Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D1FCA0 Offset: 0x1D1FCA0 VA: 0x1D1FCA0
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Secp224r1Holder : X9ECParametersHolder // TypeDefIndex: 4512
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1D1FD04 Offset: 0x1D1FD04 VA: 0x1D1FD04
	private void .ctor() { }

	// RVA: 0x1D1FD0C Offset: 0x1D1FD0C VA: 0x1D1FD0C Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D1FEEC Offset: 0x1D1FEEC VA: 0x1D1FEEC
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Secp256k1Holder : X9ECParametersHolder // TypeDefIndex: 4513
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1D1FF50 Offset: 0x1D1FF50 VA: 0x1D1FF50
	private void .ctor() { }

	// RVA: 0x1D1FF58 Offset: 0x1D1FF58 VA: 0x1D1FF58 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D203EC Offset: 0x1D203EC VA: 0x1D203EC
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Secp256r1Holder : X9ECParametersHolder // TypeDefIndex: 4514
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1D20450 Offset: 0x1D20450 VA: 0x1D20450
	private void .ctor() { }

	// RVA: 0x1D20458 Offset: 0x1D20458 VA: 0x1D20458 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D20638 Offset: 0x1D20638 VA: 0x1D20638
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Secp384r1Holder : X9ECParametersHolder // TypeDefIndex: 4515
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1D2069C Offset: 0x1D2069C VA: 0x1D2069C
	private void .ctor() { }

	// RVA: 0x1D206A4 Offset: 0x1D206A4 VA: 0x1D206A4 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D20884 Offset: 0x1D20884 VA: 0x1D20884
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Secp521r1Holder : X9ECParametersHolder // TypeDefIndex: 4516
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x1D208E8 Offset: 0x1D208E8 VA: 0x1D208E8
	private void .ctor() { }

	// RVA: 0x1D208F0 Offset: 0x1D208F0 VA: 0x1D208F0 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D20AD0 Offset: 0x1D20AD0 VA: 0x1D20AD0
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Sect113r1Holder : X9ECParametersHolder // TypeDefIndex: 4517
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0
	private const int m = 113;
	private const int k = 9;

	// Methods

	// RVA: 0x1D20B34 Offset: 0x1D20B34 VA: 0x1D20B34
	private void .ctor() { }

	// RVA: 0x1D20B3C Offset: 0x1D20B3C VA: 0x1D20B3C Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D20D08 Offset: 0x1D20D08 VA: 0x1D20D08
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Sect113r2Holder : X9ECParametersHolder // TypeDefIndex: 4518
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0
	private const int m = 113;
	private const int k = 9;

	// Methods

	// RVA: 0x1D20D6C Offset: 0x1D20D6C VA: 0x1D20D6C
	private void .ctor() { }

	// RVA: 0x1D20D74 Offset: 0x1D20D74 VA: 0x1D20D74 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D20F40 Offset: 0x1D20F40 VA: 0x1D20F40
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Sect131r1Holder : X9ECParametersHolder // TypeDefIndex: 4519
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0
	private const int m = 131;
	private const int k1 = 2;
	private const int k2 = 3;
	private const int k3 = 8;

	// Methods

	// RVA: 0x1D20FA4 Offset: 0x1D20FA4 VA: 0x1D20FA4
	private void .ctor() { }

	// RVA: 0x1D20FAC Offset: 0x1D20FAC VA: 0x1D20FAC Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D21184 Offset: 0x1D21184 VA: 0x1D21184
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Sect131r2Holder : X9ECParametersHolder // TypeDefIndex: 4520
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0
	private const int m = 131;
	private const int k1 = 2;
	private const int k2 = 3;
	private const int k3 = 8;

	// Methods

	// RVA: 0x1D211E8 Offset: 0x1D211E8 VA: 0x1D211E8
	private void .ctor() { }

	// RVA: 0x1D211F0 Offset: 0x1D211F0 VA: 0x1D211F0 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D213C8 Offset: 0x1D213C8 VA: 0x1D213C8
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Sect163k1Holder : X9ECParametersHolder // TypeDefIndex: 4521
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0
	private const int m = 163;
	private const int k1 = 3;
	private const int k2 = 6;
	private const int k3 = 7;

	// Methods

	// RVA: 0x1D2142C Offset: 0x1D2142C VA: 0x1D2142C
	private void .ctor() { }

	// RVA: 0x1D21434 Offset: 0x1D21434 VA: 0x1D21434 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D215CC Offset: 0x1D215CC VA: 0x1D215CC
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Sect163r1Holder : X9ECParametersHolder // TypeDefIndex: 4522
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0
	private const int m = 163;
	private const int k1 = 3;
	private const int k2 = 6;
	private const int k3 = 7;

	// Methods

	// RVA: 0x1D21630 Offset: 0x1D21630 VA: 0x1D21630
	private void .ctor() { }

	// RVA: 0x1D21638 Offset: 0x1D21638 VA: 0x1D21638 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D21810 Offset: 0x1D21810 VA: 0x1D21810
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Sect163r2Holder : X9ECParametersHolder // TypeDefIndex: 4523
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0
	private const int m = 163;
	private const int k1 = 3;
	private const int k2 = 6;
	private const int k3 = 7;

	// Methods

	// RVA: 0x1D21874 Offset: 0x1D21874 VA: 0x1D21874
	private void .ctor() { }

	// RVA: 0x1D2187C Offset: 0x1D2187C VA: 0x1D2187C Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D21A48 Offset: 0x1D21A48 VA: 0x1D21A48
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Sect193r1Holder : X9ECParametersHolder // TypeDefIndex: 4524
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0
	private const int m = 193;
	private const int k = 15;

	// Methods

	// RVA: 0x1D21AAC Offset: 0x1D21AAC VA: 0x1D21AAC
	private void .ctor() { }

	// RVA: 0x1D21AB4 Offset: 0x1D21AB4 VA: 0x1D21AB4 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x1D21C80 Offset: 0x1D21C80 VA: 0x1D21C80
	private static void .cctor() { }
}

// Namespace: 
internal class SecNamedCurves.Sect193r2Holder : X9ECParametersHolder // TypeDefIndex: 4525
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0
	private const int m = 193;
	private const int k = 15;

	// Methods

	// RVA: 0x1D21CE4 Offset: 0x1D21CE4 VA: 0x1D21CE4
	private void .ctor() { }

	// RVA: 0x1D21CEC Offset: 0x1D21CEC VA: 0x1D21CEC Slot: 4
