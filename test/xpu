	public void .ctor() { }

	// RVA: 0x10B6D5C Offset: 0x10B6D5C VA: 0x10B6D5C
	private void Awake() { }

	// RVA: 0x10B6E08 Offset: 0x10B6E08 VA: 0x10B6E08
	private void OnEnable() { }

	// RVA: 0x10B6F24 Offset: 0x10B6F24 VA: 0x10B6F24
	public void SetOffset() { }

	// RVA: 0x10B7090 Offset: 0x10B7090 VA: 0x10B7090
	public void AddOffsetX() { }

	// RVA: 0x10B7304 Offset: 0x10B7304 VA: 0x10B7304
	private void AddOffsetX(float ratio) { }

	// RVA: 0x10B7170 Offset: 0x10B7170 VA: 0x10B7170
	public void AddBottomY() { }

	// RVA: 0x10B6D60 Offset: 0x10B6D60 VA: 0x10B6D60
	public void UpdateOffset() { }
}

// Namespace: 
public enum FSOffset.AddDirectionX // TypeDefIndex: 8226
{
	// Fields
	public int value__; // 0x0
	public const FSOffset.AddDirectionX Left = 0;
	public const FSOffset.AddDirectionX Right = 1;
}

// Namespace: 
public class FSUtility : SingletonMonoBehaviour<FSUtility> // TypeDefIndex: 8227
{
	// Fields
	[SerializeField] // RVA: 0xC5DD60 Offset: 0xC5DD60 VA: 0xC5DD60
	protected FSUtilityList FSUtilityList; // 0x18
	protected static bool isBusySetAssetData; // 0x0
	public static readonly float RATIO_VISTA; // 0x4
	public static readonly float RATIO_SCOPE; // 0x8
	public static readonly string FS_UTILITY_LIST_PATH; // 0x10
	private const float SUB_MARGIN_X = 68;
	public static int[] legacyBacks; // 0x18
	public static string[] fullScreenImages; // 0x20
	public static Dictionary<int, float> trimBackRatioY; // 0x28
	public static string[] legacyMovies; // 0x30
	public static int[] fullScreenNpChrs; // 0x38
	public static int[] fullScreenNpSeqIds; // 0x40

	// Methods

	// RVA: 0x10B74F8 Offset: 0x10B74F8 VA: 0x10B74F8
	public void .ctor() { }

	// RVA: 0x10B7548 Offset: 0x10B7548 VA: 0x10B7548
	public static bool IsBusySetAssetData() { }

	// RVA: 0x10B75B0 Offset: 0x10B75B0 VA: 0x10B75B0
	public static void Initialize() { }

	// RVA: 0x10B7654 Offset: 0x10B7654 VA: 0x10B7654
	protected void InitializeLocal() { }

	// RVA: 0x10B7898 Offset: 0x10B7898 VA: 0x10B7898
	public static void LoadAssetData() { }

	// RVA: 0x10B76DC Offset: 0x10B76DC VA: 0x10B76DC
	protected void ReadFSUtilityList(FSUtilityList fsUtilityList) { }

	// RVA: 0x10B7A14 Offset: 0x10B7A14 VA: 0x10B7A14
	public static void SetUpBackTextureSize(ExUITexture backTexture, string bgName) { }

	// RVA: 0x10B7ADC Offset: 0x10B7ADC VA: 0x10B7ADC
	public static bool IsFullScreenImage(string imageName) { }

	// RVA: 0x10B20AC Offset: 0x10B20AC VA: 0x10B20AC
	public static bool IsFullScreenBack(string fileName) { }

	// RVA: 0x10B7C10 Offset: 0x10B7C10 VA: 0x10B7C10
	public static bool IsFullScreenBack(int id) { }

	// RVA: 0x10B2198 Offset: 0x10B2198 VA: 0x10B2198
	public static float GetBackFSOffsetY(string fileName) { }

	// RVA: 0x10B7D18 Offset: 0x10B7D18 VA: 0x10B7D18
	public static bool IsFullScreenNP(int chrId, int seqId) { }

	// RVA: 0x10B8074 Offset: 0x10B8074 VA: 0x10B8074
	public static bool IsFullScreenMovie(string fileName) { }

	// RVA: 0x10B7264 Offset: 0x10B7264 VA: 0x10B7264
	public static bool IsUnderVista() { }

	// RVA: 0x10B273C Offset: 0x10B273C VA: 0x10B273C
	public static bool IsTablet() { }

	// RVA: 0x10B831C Offset: 0x10B831C VA: 0x10B831C
	public static bool IsOverScope() { }

	// RVA: 0x10B7470 Offset: 0x10B7470 VA: 0x10B7470
	public static float GetNotchSubMarginX(float subMarginX = 68) { }

	// RVA: 0x10B84C0 Offset: 0x10B84C0 VA: 0x10B84C0
	public static float GetOffsetX(float subMarginX = 68, bool calcNotch = True) { }

	// RVA: 0x10B85E4 Offset: 0x10B85E4 VA: 0x10B85E4
	public static Vector2 GetAddOffset(FSOffset refOffset, bool calcNotch = True) { }

	// RVA: 0x10B83BC Offset: 0x10B83BC VA: 0x10B83BC
	private static float CalculateNotchWidth() { }

	// RVA: 0x10B8734 Offset: 0x10B8734 VA: 0x10B8734
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC43174 Offset: 0xC43174 VA: 0xC43174
private sealed class FSUtility.<LoadAssetData>c__AnonStorey0 // TypeDefIndex: 8228
{
	// Fields
	internal FSUtility ins; // 0x10

	// Methods

	// RVA: 0x135BAF8 Offset: 0x135BAF8 VA: 0x135BAF8
	public void .ctor() { }

	// RVA: 0x135BB00 Offset: 0x135BB00 VA: 0x135BB00
	internal void <>m__0(AssetData assetData) { }
}

// Namespace: 
[CreateAssetMenuAttribute] // RVA: 0xC2A510 Offset: 0xC2A510 VA: 0xC2A510
public class FSUtilityList : ScriptableObject // TypeDefIndex: 8229
{
	// Fields
	[HeaderAttribute] // RVA: 0xC5DD70 Offset: 0xC5DD70 VA: 0xC5DD70
	[HeaderAttribute] // RVA: 0xC5DD70 Offset: 0xC5DD70 VA: 0xC5DD70
	[HeaderAttribute] // RVA: 0xC5DD70 Offset: 0xC5DD70 VA: 0xC5DD70
	public int[] legacyBacks; // 0x18
	[HeaderAttribute] // RVA: 0xC5DDF4 Offset: 0xC5DDF4 VA: 0xC5DDF4
	[HeaderAttribute] // RVA: 0xC5DDF4 Offset: 0xC5DDF4 VA: 0xC5DDF4
	[HeaderAttribute] // RVA: 0xC5DDF4 Offset: 0xC5DDF4 VA: 0xC5DDF4
	public string[] fullScreenImages; // 0x20
	[HeaderAttribute] // RVA: 0xC5DE78 Offset: 0xC5DE78 VA: 0xC5DE78
	[HeaderAttribute] // RVA: 0xC5DE78 Offset: 0xC5DE78 VA: 0xC5DE78
	public FSUtilityList.trimBackRatioYChild[] trimBackRatioY; // 0x28
	[HeaderAttribute] // RVA: 0xC5DED8 Offset: 0xC5DED8 VA: 0xC5DED8
	[HeaderAttribute] // RVA: 0xC5DED8 Offset: 0xC5DED8 VA: 0xC5DED8
	public string[] legacyMovies; // 0x30
	[HeaderAttribute] // RVA: 0xC5DF38 Offset: 0xC5DF38 VA: 0xC5DF38
	[HeaderAttribute] // RVA: 0xC5DF38 Offset: 0xC5DF38 VA: 0xC5DF38
	public int[] fullScreenNpChrs; // 0x38
	[HeaderAttribute] // RVA: 0xC5DF98 Offset: 0xC5DF98 VA: 0xC5DF98
	[HeaderAttribute] // RVA: 0xC5DF98 Offset: 0xC5DF98 VA: 0xC5DF98
	public int[] fullScreenNpSeqIds; // 0x40

	// Methods

	// RVA: 0x135BBBC Offset: 0x135BBBC VA: 0x135BBBC
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class FSUtilityList.trimBackRatioYChild // TypeDefIndex: 8230
{
	// Fields
	public int id; // 0x10
	public float offsetY; // 0x14

	// Methods

	// RVA: 0x135BBC4 Offset: 0x135BBC4 VA: 0x135BBC4
	public void .ctor() { }
}

// Namespace: 
public class FSWidgetSize : MonoBehaviour // TypeDefIndex: 8231
{
	// Fields
	public Vector2Int size_16_9; // 0x18
	public Vector2Int size_21_9; // 0x20
	public bool fixWidth; // 0x28
	public bool fixHeight; // 0x29

	// Methods

	// RVA: 0x135BBCC Offset: 0x135BBCC VA: 0x135BBCC
	public void .ctor() { }

	// RVA: 0x135BC3C Offset: 0x135BC3C VA: 0x135BC3C
	private void Awake() { }

	// RVA: 0x135BC74 Offset: 0x135BC74 VA: 0x135BC74
	public void SetSize() { }

	// RVA: 0x135BDC4 Offset: 0x135BDC4 VA: 0x135BDC4
	private int GetSize(int size_16_9, int size_21_9, bool fix) { }
}

// Namespace: 
public static class FSWindowUtil // TypeDefIndex: 8232
{
	// Fields
	private const float windowAspectMin = 1.7777778;
	private const float windowAspectMax = 2.3333333;

	// Methods

	// RVA: 0x135BEE8 Offset: 0x135BEE8 VA: 0x135BEE8
	public static Vector2 GetSize() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2A554 Offset: 0xC2A554 VA: 0xC2A554
public class iTweenMoveUpdateFS : iTweenMoveUpdate // TypeDefIndex: 8233
{
	// Fields
	public FsmVector3 pos_21_9; // 0xB0

	// Methods

	// RVA: 0x20A242C Offset: 0x20A242C VA: 0x20A242C
	public void .ctor() { }

	// RVA: 0x20A2434 Offset: 0x20A2434 VA: 0x20A2434 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2A58C Offset: 0xC2A58C VA: 0xC2A58C
public class ShowBattleEffectAFS : FsmStateAction // TypeDefIndex: 8234
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5DFF8 Offset: 0xC5DFF8 VA: 0xC5DFF8
	public FsmGameObject actObject; // 0x50
	public FsmGameObject targetObject; // 0x58
	public FsmInt effectId; // 0x60
	public FsmString attachNodename; // 0x68
	public FsmVector3 position; // 0x70
	public FsmBool sideflip; // 0x78
	public FsmBool isXFlip; // 0x80
	public FsmBool isZFlip2018; // 0x88
	public FsmBool isParent; // 0x90
	public FsmBool isAbsScale; // 0x98
	public FsmGameObject storeObject; // 0xA0
	public bool isEffectServant; // 0xA8
	[RequiredFieldAttribute] // RVA: 0xC5E008 Offset: 0xC5E008 VA: 0xC5E008
	public FsmString[] targetNodeNames; // 0xB0
	public FsmBool multiX; // 0xB8
	public FsmBool multiY; // 0xC0
	public FsmBool multiZ; // 0xC8

	// Methods

	// RVA: 0x1B98910 Offset: 0x1B98910 VA: 0x1B98910
	public void .ctor() { }

	// RVA: 0x1B98974 Offset: 0x1B98974 VA: 0x1B98974 Slot: 32
	public override void OnEnter() { }
}

// Namespace: 
public static class BackupHelper // TypeDefIndex: 8235
{
	// Methods

	[ConditionalAttribute] // RVA: 0xCCB118 Offset: 0xCCB118 VA: 0xCCB118
	// RVA: 0xF608AC Offset: 0xF608AC VA: 0xF608AC
	public static void SetNoBackupFlag(string[] pathArray) { }

	[ConditionalAttribute] // RVA: 0xCCB150 Offset: 0xCCB150 VA: 0xCCB150
	// RVA: 0xF608B0 Offset: 0xF608B0 VA: 0xF608B0
	public static void SetNoBackupFlag(string path) { }

	[ConditionalAttribute] // RVA: 0xCCB188 Offset: 0xCCB188 VA: 0xCCB188
	// RVA: 0xF608B4 Offset: 0xF608B4 VA: 0xF608B4
	public static void SetNoBackupFlag(string path, string[] excludeFileList) { }

	[ConditionalAttribute] // RVA: 0xCCB1C0 Offset: 0xCCB1C0 VA: 0xCCB1C0
	// RVA: 0xF608B8 Offset: 0xF608B8 VA: 0xF608B8
	public static void ResetNoBackupFlag(string path) { }
}

// Namespace: 
[ExtensionAttribute] // RVA: 0xC2A5C4 Offset: 0xC2A5C4 VA: 0xC2A5C4
public static class BasicHelper // TypeDefIndex: 8236
{
	// Methods

	[ExtensionAttribute] // RVA: 0xCCB1F8 Offset: 0xCCB1F8 VA: 0xCCB1F8
	// RVA: 0xF68138 Offset: 0xF68138 VA: 0xF68138
	public static int DecryptValue(int self) { }

	[ExtensionAttribute] // RVA: 0xCCB208 Offset: 0xCCB208 VA: 0xCCB208
	// RVA: 0xF681A0 Offset: 0xF681A0 VA: 0xF681A0
	public static int DecryptValue(ObscuredInt self) { }

	[ExtensionAttribute] // RVA: 0xCCB218 Offset: 0xCCB218 VA: 0xCCB218
	// RVA: 0xF68218 Offset: 0xF68218 VA: 0xF68218
	public static string EncryptDecryptValue(string self) { }

	[ExtensionAttribute] // RVA: 0xCCB228 Offset: 0xCCB228 VA: 0xCCB228
	// RVA: 0xF68280 Offset: 0xF68280 VA: 0xF68280
	public static string DecryptValue(ObscuredString self) { }

	[ExtensionAttribute] // RVA: 0xCCB238 Offset: 0xCCB238 VA: 0xCCB238
	// RVA: 0xF682E8 Offset: 0xF682E8 VA: 0xF682E8
	public static long DecryptValue(long self) { }

	[ExtensionAttribute] // RVA: 0xCCB248 Offset: 0xCCB248 VA: 0xCCB248
	// RVA: 0xF68350 Offset: 0xF68350 VA: 0xF68350
	public static long DecryptValue(ObscuredLong self) { }

	[ExtensionAttribute] // RVA: 0xCCB258 Offset: 0xCCB258 VA: 0xCCB258
	// RVA: -1 Offset: -1
	public static T Find<T>(T[] array, Func<T, bool> func) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1D8C8 Offset: 0x1C1D8C8 VA: 0x1C1D8C8
	|-BasicHelper.Find<BattleBuddyPointInfo>
	|-BasicHelper.Find<BattleServantData.SaveData>
	|-BasicHelper.Find<BgmPlayArgs>
	|-BasicHelper.Find<SubBgmPlayer>
	|-BasicHelper.Find<object>
	|-BasicHelper.Find<string>
	|-BasicHelper.Find<GameObject>
	|-BasicHelper.Find<USFGOActorBattleActionEventConditional.OverwriteParamCondition>
	*/

	[ExtensionAttribute] // RVA: 0xCCB268 Offset: 0xCCB268 VA: 0xCCB268
	// RVA: -1 Offset: -1
	public static T FindComponent<T>(GameObject[] array, Func<T, bool> func) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1D9A8 Offset: 0x1C1D9A8 VA: 0x1C1D9A8
	|-BasicHelper.FindComponent<BattleActorControl>
	|-BasicHelper.FindComponent<object>
	*/

	[ExtensionAttribute] // RVA: 0xCCB278 Offset: 0xCCB278 VA: 0xCCB278
	// RVA: -1 Offset: -1
	public static bool Any<T>(List<T> list, Func<T, bool> func) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x255AF50 Offset: 0x255AF50 VA: 0x255AF50
	|-BasicHelper.Any<BattleActionData.DamageData>
	|-BasicHelper.Any<BattleServantData>
	|-BasicHelper.Any<DataEntityBase>
	|-BasicHelper.Any<EventInfoUIBase.Data>
	|-BasicHelper.Any<EventMissionConditionEntity>
	|-BasicHelper.Any<EventSpotMoveManager.SpotMoveData>
	|-BasicHelper.Any<EventUiEntity>
	|-BasicHelper.Any<ItemDroppedSkillShiftInfo.ServantInfo>
	|-BasicHelper.Any<MapControl.QuestInfo>
	|-BasicHelper.Any<MaterialBranchRouteManager.MaterialBranchInfo>
	|-BasicHelper.Any<QuestReleaseEntity>
	|-BasicHelper.Any<ServantSkillReleaseEntity>
	|-BasicHelper.Any<object>
	|-BasicHelper.Any<string>
	|-BasicHelper.Any<UISpriteData>
	|-BasicHelper.Any<UserEventMissionEntity>
	|-BasicHelper.Any<UserQuestRouteEntity>
	|-BasicHelper.Any<UserServantEntity>
	|-BasicHelper.Any<WarBoardAIRoute.RouteData>
	|-BasicHelper.Any<WarBoardData.SquareRangeSearch>
	|
	|-RVA: 0x255AAFC Offset: 0x255AAFC VA: 0x255AAFC
	|-BasicHelper.Any<BattleResultEventItemComponent.EventDropItemInfo>
	|
	|-RVA: 0x255AD30 Offset: 0x255AD30 VA: 0x255AD30
	|-BasicHelper.Any<int>
	*/

	[ExtensionAttribute] // RVA: 0xCCB288 Offset: 0xCCB288 VA: 0xCCB288
	// RVA: -1 Offset: -1
	public static bool Any<T>(T[] array, Func<T, bool> func) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x255AA50 Offset: 0x255AA50 VA: 0x255AA50
	|-BasicHelper.Any<BattleLogic.LOGICTYPE>
	|
	|-RVA: 0x255B018 Offset: 0x255B018 VA: 0x255B018
	|-BasicHelper.Any<BattleLogicFunctionProcess.FunctionTargetCheck>
	|-BasicHelper.Any<BattleLogicFunctionProcess.FunctionUnitCheck>
	|-BasicHelper.Any<BattleResultBondsIconComponent>
	|-BasicHelper.Any<BattleServantData>
	|-BasicHelper.Any<BattleSkillInfoData>
	|-BasicHelper.Any<FsmEvent>
	|-BasicHelper.Any<FsmTransition>
	|-BasicHelper.Any<QuestReleaseEntity>
	|-BasicHelper.Any<RestrictionEntity>
	|-BasicHelper.Any<object>
	|-BasicHelper.Any<string>
	|-BasicHelper.Any<GameObject>
	|-BasicHelper.Any<AppleInAppPurchaseReceipt>
	|-BasicHelper.Any<UserEventBoardGameTokenEntity>
	|-BasicHelper.Any<UserServantEntity>
	|-BasicHelper.Any<WarBoardPieceData>
	|-BasicHelper.Any<WarEntity>
	|-BasicHelper.Any<USFGOPlayBgmEventConditional.CondBGM>
	|
	|-RVA: 0x255ABD8 Offset: 0x255ABD8 VA: 0x255ABD8
	|-BasicHelper.Any<BuffList.ACTION>
	|
	|-RVA: 0x255AC84 Offset: 0x255AC84 VA: 0x255AC84
	|-BasicHelper.Any<ListViewSort.FilterCategoryKind>
	|
	|-RVA: 0x255ADF8 Offset: 0x255ADF8 VA: 0x255ADF8
	|-BasicHelper.Any<int>
	|
	|-RVA: 0x255AEA4 Offset: 0x255AEA4 VA: 0x255AEA4
	|-BasicHelper.Any<long>
	*/

	[ExtensionAttribute] // RVA: 0xCCB298 Offset: 0xCCB298 VA: 0xCCB298
	// RVA: -1 Offset: -1
	public static List<T> Shuffle<T>(List<T> list) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1A2BF4C Offset: 0x1A2BF4C VA: 0x1A2BF4C
	|-BasicHelper.Shuffle<int>
	|
	|-RVA: 0x1A2C0A4 Offset: 0x1A2C0A4 VA: 0x1A2C0A4
	|-BasicHelper.Shuffle<object>
	|-BasicHelper.Shuffle<string>
	*/

	[ExtensionAttribute] // RVA: 0xCCB2A8 Offset: 0xCCB2A8 VA: 0xCCB2A8
	// RVA: -1 Offset: -1
	public static List<T> StableSort<T>(List<T> list, Func<T, int> priorityFunc, bool isDescending = False) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1A2C1FC Offset: 0x1A2C1FC VA: 0x1A2C1FC
	|-BasicHelper.StableSort<BattleSkillInfoData>
	|-BasicHelper.StableSort<NpcFollowerEntity>
	|-BasicHelper.StableSort<object>
	*/

	[ExtensionAttribute] // RVA: 0xCCB2B8 Offset: 0xCCB2B8 VA: 0xCCB2B8
	// RVA: 0xF683DC Offset: 0xF683DC VA: 0xF683DC
	public static bool SynchronizeAnimation(Animation self, string selfAnimStr, string tgAnimStr, Animation targetAnim) { }

	[ExtensionAttribute] // RVA: 0xCCB2C8 Offset: 0xCCB2C8 VA: 0xCCB2C8
	// RVA: 0xF685C0 Offset: 0xF685C0 VA: 0xF685C0
	public static bool SynchronizeAnimation(SimpleAnimation self, string selfAnimStr, string tgAnimStr, SimpleAnimation targetAnim) { }

	// RVA: 0xF689EC Offset: 0xF689EC VA: 0xF689EC
	public static int Clamp(int value, int min, int max) { }

	[ExtensionAttribute] // RVA: 0xCCB2D8 Offset: 0xCCB2D8 VA: 0xCCB2D8
	// RVA: 0xF6296C Offset: 0xF6296C VA: 0xF6296C
	public static int[] Convert2IntArray(string self, char separator) { }

	[ExtensionAttribute] // RVA: 0xCCB2E8 Offset: 0xCCB2E8 VA: 0xCCB2E8
	// RVA: -1 Offset: -1
	public static T IndexValue<T>(T[] array, int index, T def) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1DF3C Offset: 0x1C1DF3C VA: 0x1C1DF3C
	|-BasicHelper.IndexValue<AiState.SaveData>
	|-BasicHelper.IndexValue<BattleBuffData.BuffData>
	|-BasicHelper.IndexValue<BattleCommandComponent>
	|-BasicHelper.IndexValue<BattleFieldMotionComponent>
	|-BasicHelper.IndexValue<BattleServantData.Adjustment>
	|-BasicHelper.IndexValue<BattleServantData>
	|-BasicHelper.IndexValue<BattleServantParamComponent>
	|-BasicHelper.IndexValue<FsmGameObject>
	|-BasicHelper.IndexValue<NpcAiState>
	|-BasicHelper.IndexValue<object>
	|-BasicHelper.IndexValue<GameObject>
	|-BasicHelper.IndexValue<Transform>
	|-BasicHelper.IndexValue<USFGOPlayStandardCutInLimitCount.OverwriteStandFigure>
	|
	|-RVA: 0x1C1DD34 Offset: 0x1C1DD34 VA: 0x1C1DD34
	|-BasicHelper.IndexValue<BattleLogic.LOGICTYPE>
	|
	|-RVA: 0x1C1DD8C Offset: 0x1C1DD8C VA: 0x1C1DD8C
	|-BasicHelper.IndexValue<bool>
	|
	|-RVA: 0x1C1DE68 Offset: 0x1C1DE68 VA: 0x1C1DE68
	|-BasicHelper.IndexValue<int>
	*/

	[ExtensionAttribute] // RVA: 0xCCB2F8 Offset: 0xCCB2F8 VA: 0xCCB2F8
	// RVA: -1 Offset: -1
	public static T IndexValue<T>(List<T> list, int index, T def) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1DEC0 Offset: 0x1C1DEC0 VA: 0x1C1DEC0
	|-BasicHelper.IndexValue<AiNpcBattleServantData>
	|-BasicHelper.IndexValue<ShiftHpData.HpDetail>
	|-BasicHelper.IndexValue<ShiftHpData>
	|-BasicHelper.IndexValue<BattleAttack>
	|-BasicHelper.IndexValue<BattleSkillInfoData>
	|-BasicHelper.IndexValue<object>
	|
	|-RVA: 0x1C1DDEC Offset: 0x1C1DDEC VA: 0x1C1DDEC
	|-BasicHelper.IndexValue<int>
	*/

	[ExtensionAttribute] // RVA: 0xCCB308 Offset: 0xCCB308 VA: 0xCCB308
	// RVA: -1 Offset: -1
	public static T GetValue<T>(Dictionary<string, object> dic, string key, T def) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1DC18 Offset: 0x1C1DC18 VA: 0x1C1DC18
	|-BasicHelper.GetValue<Dictionary<string, object>>
	|-BasicHelper.GetValue<List<object>>
	|-BasicHelper.GetValue<object>
	|-BasicHelper.GetValue<string>
	|
	|-RVA: 0x1C1DB54 Offset: 0x1C1DB54 VA: 0x1C1DB54
	|-BasicHelper.GetValue<long>
	*/

	[ExtensionAttribute] // RVA: 0xCCB318 Offset: 0xCCB318 VA: 0xCCB318
	// RVA: -1 Offset: -1
	public static V GetValue<K, V>(Dictionary<K, V> dic, K key, V def) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B28438 Offset: 0x2B28438 VA: 0x2B28438
	|-BasicHelper.GetValue<AiAct.TYPE, BattleLogicNpcAi.BaseAiActProc>
	|-BasicHelper.GetValue<AiAct.TYPE, object>
	|
	|-RVA: 0x2B284B0 Offset: 0x2B284B0 VA: 0x2B284B0
	|-BasicHelper.GetValue<BattleLogic.LOGICTYPE, BattleLogicTask.ACTIONTYPE>
	|
	|-RVA: 0x2B28528 Offset: 0x2B28528 VA: 0x2B28528
	|-BasicHelper.GetValue<BattleLogicTask.ACTIONTYPE, AiLogic.PROC_STATE>
	|
	|-RVA: 0x2B28618 Offset: 0x2B28618 VA: 0x2B28618
	|-BasicHelper.GetValue<int, FollowerInfo>
	|-BasicHelper.GetValue<int, int[]>
	|-BasicHelper.GetValue<int, object>
	|
	|-RVA: 0x2B285A0 Offset: 0x2B285A0 VA: 0x2B285A0
	|-BasicHelper.GetValue<int, long>
	|
	|-RVA: 0x2B28690 Offset: 0x2B28690 VA: 0x2B28690
	|-BasicHelper.GetValue<long, int>
	|
	|-RVA: 0x2B28708 Offset: 0x2B28708 VA: 0x2B28708
	|-BasicHelper.GetValue<object, object>
	*/

	[ExtensionAttribute] // RVA: 0xCCB328 Offset: 0xCCB328 VA: 0xCCB328
	// RVA: -1 Offset: -1
	public static void Remove<K, V>(Dictionary<K, V> dic, Func<KeyValuePair<K, V>, bool> cond) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C5ED7C Offset: 0x1C5ED7C VA: 0x1C5ED7C
	|-BasicHelper.Remove<int, object>
	|-BasicHelper.Remove<int, GameObject>
	|
	|-RVA: 0x1C5EE8C Offset: 0x1C5EE8C VA: 0x1C5EE8C
	|-BasicHelper.Remove<object, object>
	*/

	[ExtensionAttribute] // RVA: 0xCCB338 Offset: 0xCCB338 VA: 0xCCB338
	// RVA: -1 Offset: -1
	public static void ForEach<T>(IEnumerable<T> sequence, Action<T> action) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C5E7C0 Offset: 0x1C5E7C0 VA: 0x1C5E7C0
	|-BasicHelper.ForEach<BattleActionData.BuffData>
	|-BasicHelper.ForEach<BattleActionData.DamageData>
	|-BasicHelper.ForEach<BattleActionData.HealData>
	|-BasicHelper.ForEach<BattleBuffData.BuffData>
	|-BasicHelper.ForEach<BattleServantData>
	|-BasicHelper.ForEach<BgmPlayArgs>
	|-BasicHelper.ForEach<GeneralBgmPlayer>
	|-BasicHelper.ForEach<MapControl.MapGimmickInfo>
	|-BasicHelper.ForEach<NpcAiState>
	|-BasicHelper.ForEach<RestockServantLogic>
	|-BasicHelper.ForEach<RestrictionEntity>
	|-BasicHelper.ForEach<ScriptActionAdvPrefabActorController>
	|-BasicHelper.ForEach<SubBgmPlayer>
	|-BasicHelper.ForEach<int[]>
	|-BasicHelper.ForEach<object>
	|-BasicHelper.ForEach<string>
	|-BasicHelper.ForEach<UIWidget>
	|-BasicHelper.ForEach<WarBoardPieceData>
	|-BasicHelper.ForEach<WarBoardSquareData>
	|
	|-RVA: 0x1C5DC5C Offset: 0x1C5DC5C VA: 0x1C5DC5C
	|-BasicHelper.ForEach<KeyValuePair<int, int>>
	|
	|-RVA: 0x1C5DF2C Offset: 0x1C5DF2C VA: 0x1C5DF2C
	|-BasicHelper.ForEach<KeyValuePair<object, object>>
	|-BasicHelper.ForEach<KeyValuePair<string, object>>
	|
	|-RVA: 0x1C5E204 Offset: 0x1C5E204 VA: 0x1C5E204
	|-BasicHelper.ForEach<int>
	*/

	[ExtensionAttribute] // RVA: 0xCCB348 Offset: 0xCCB348 VA: 0xCCB348
	// RVA: -1 Offset: -1
	public static void ForEach<T>(IEnumerable<T> sequence, Action<int, T> action) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C5E4D4 Offset: 0x1C5E4D4 VA: 0x1C5E4D4
	|-BasicHelper.ForEach<int>
	|
	|-RVA: 0x1C5EA90 Offset: 0x1C5EA90 VA: 0x1C5EA90
	|-BasicHelper.ForEach<object>
	*/

	[ExtensionAttribute] // RVA: 0xCCB358 Offset: 0xCCB358 VA: 0xCCB358
	// RVA: 0xF68A14 Offset: 0xF68A14 VA: 0xF68A14
	public static void SetStopEffectCallBack(GameObject obj, bool isDestroy, Action action) { }

	[ExtensionAttribute] // RVA: 0xCCB368 Offset: 0xCCB368 VA: 0xCCB368
	// RVA: 0xF68B30 Offset: 0xF68B30 VA: 0xF68B30
	public static bool EqualExceptNullOrEmpty(string self, string target) { }

	[ExtensionAttribute] // RVA: 0xCCB378 Offset: 0xCCB378 VA: 0xCCB378
	// RVA: -1 Offset: -1
	public static T TakeIf<T>(T self, Predicate<T> match) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1DF94 Offset: 0x1C1DF94 VA: 0x1C1DF94
	|-BasicHelper.TakeIf<BattleServantData>
	|-BasicHelper.TakeIf<object>
	*/

	[ExtensionAttribute] // RVA: 0xCCB388 Offset: 0xCCB388 VA: 0xCCB388
	[DebuggerHiddenAttribute] // RVA: 0xCCB388 Offset: 0xCCB388 VA: 0xCCB388
	// RVA: -1 Offset: -1
	public static IEnumerable<T> ToIterator<T>(int loopCount, Func<int, T> func) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1A21DF0 Offset: 0x1A21DF0 VA: 0x1A21DF0
	|-BasicHelper.ToIterator<RestockServantLogic>
	|-BasicHelper.ToIterator<object>
	*/

	[ExtensionAttribute] // RVA: 0xCCB3C0 Offset: 0xCCB3C0 VA: 0xCCB3C0
	// RVA: 0xF68C00 Offset: 0xF68C00 VA: 0xF68C00
	public static void Loop(int loopCount, Action<int> action) { }

	[DebuggerHiddenAttribute] // RVA: 0xCCB3D0 Offset: 0xCCB3D0 VA: 0xCCB3D0
	// RVA: 0xF68C80 Offset: 0xF68C80 VA: 0xF68C80
	public static IEnumerator DelayCall(float delay, Action action) { }

	[DebuggerHiddenAttribute] // RVA: 0xCCB3E0 Offset: 0xCCB3E0 VA: 0xCCB3E0
	// RVA: -1 Offset: -1
	public static IEnumerator DelayCall<T>(float delay, Action<T> action, T arg) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1A2E588 Offset: 0x1A2E588 VA: 0x1A2E588
	|-BasicHelper.DelayCall<ShowAllEx.DamageFuncArgument>
	|
	|-RVA: 0x1A2E670 Offset: 0x1A2E670 VA: 0x1A2E670
	|-BasicHelper.DelayCall<object>
	*/

	[ExtensionAttribute] // RVA: 0xCCB3F0 Offset: 0xCCB3F0 VA: 0xCCB3F0
	// RVA: -1 Offset: -1
	public static T AddNotExistComponent<T>(Transform self) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1D7C0 Offset: 0x1C1D7C0 VA: 0x1C1D7C0
	|-BasicHelper.AddNotExistComponent<BattleSyncTransformComponent>
	|-BasicHelper.AddNotExistComponent<object>
	*/

	[CompilerGeneratedAttribute] // RVA: 0xCCB400 Offset: 0xCCB400 VA: 0xCCB400
	// RVA: -1 Offset: -1
	private static K <Remove`2>m__0<K, V>(KeyValuePair<K, V> pair) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x254C0B8 Offset: 0x254C0B8 VA: 0x254C0B8
	|-BasicHelper.<Remove`2>m__0<int, object>
	|
	|-RVA: 0x254C0E4 Offset: 0x254C0E4 VA: 0x254C0E4
	|-BasicHelper.<Remove`2>m__0<object, object>
	*/
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC43184 Offset: 0xC43184 VA: 0xC43184
private sealed class BasicHelper.<ToIterator>c__Iterator0<T> : IEnumerable, IEnumerable<T>, IEnumerator, IDisposable, IEnumerator<T> // TypeDefIndex: 8237
{
	// Fields
	internal Func<int, T> func; // 0x0
	internal int <i>__1; // 0x0
	internal int loopCount; // 0x0
	internal T $current; // 0x0
	internal bool $disposing; // 0x0
	internal int $PC; // 0x0

	// Properties
	private T System.Collections.Generic.IEnumerator<T>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD95C0 Offset: 0xCD95C0 VA: 0xCD95C0
	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2256E0C Offset: 0x2256E0C VA: 0x2256E0C
	|-BasicHelper.<ToIterator>c__Iterator0<object>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 7
	public bool MoveNext() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2256E38 Offset: 0x2256E38 VA: 0x2256E38
	|-BasicHelper.<ToIterator>c__Iterator0<object>.MoveNext
	*/

	[DebuggerHiddenAttribute] // RVA: 0xCD95D0 Offset: 0xCD95D0 VA: 0xCD95D0
	// RVA: -1 Offset: -1 Slot: 10
	private T System.Collections.Generic.IEnumerator<T>.get_Current() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2256F18 Offset: 0x2256F18 VA: 0x2256F18
	|-BasicHelper.<ToIterator>c__Iterator0<object>.System.Collections.Generic.IEnumerator<T>.get_Current
	*/

	[DebuggerHiddenAttribute] // RVA: 0xCD95E0 Offset: 0xCD95E0 VA: 0xCD95E0
	// RVA: -1 Offset: -1 Slot: 6
	private object System.Collections.IEnumerator.get_Current() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2256F20 Offset: 0x2256F20 VA: 0x2256F20
	|-BasicHelper.<ToIterator>c__Iterator0<object>.System.Collections.IEnumerator.get_Current
	*/

	[DebuggerHiddenAttribute] // RVA: 0xCD95F0 Offset: 0xCD95F0 VA: 0xCD95F0
	// RVA: -1 Offset: -1 Slot: 9
	public void Dispose() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2256F28 Offset: 0x2256F28 VA: 0x2256F28
	|-BasicHelper.<ToIterator>c__Iterator0<object>.Dispose
	*/

	[DebuggerHiddenAttribute] // RVA: 0xCD9600 Offset: 0xCD9600 VA: 0xCD9600
	// RVA: -1 Offset: -1 Slot: 8
	public void Reset() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2256F3C Offset: 0x2256F3C VA: 0x2256F3C
	|-BasicHelper.<ToIterator>c__Iterator0<object>.Reset
	*/

	[DebuggerHiddenAttribute] // RVA: 0xCD9610 Offset: 0xCD9610 VA: 0xCD9610
	// RVA: -1 Offset: -1 Slot: 4
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2256FA4 Offset: 0x2256FA4 VA: 0x2256FA4
	|-BasicHelper.<ToIterator>c__Iterator0<object>.System.Collections.IEnumerable.GetEnumerator
	*/

	[DebuggerHiddenAttribute] // RVA: 0xCD9620 Offset: 0xCD9620 VA: 0xCD9620
	// RVA: -1 Offset: -1 Slot: 5
	private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2256FE0 Offset: 0x2256FE0 VA: 0x2256FE0
	|-BasicHelper.<ToIterator>c__Iterator0<object>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	*/
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC43194 Offset: 0xC43194 VA: 0xC43194
private sealed class BasicHelper.<DelayCall>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8238
{
	// Fields
	internal float delay; // 0x10
	internal Action action; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD9630 Offset: 0xCD9630 VA: 0xCD9630
	// RVA: 0xF68D14 Offset: 0xF68D14 VA: 0xF68D14
	public void .ctor() { }

	// RVA: 0xF68D1C Offset: 0xF68D1C VA: 0xF68D1C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD9640 Offset: 0xCD9640 VA: 0xCD9640
	// RVA: 0xF68DF0 Offset: 0xF68DF0 VA: 0xF68DF0 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD9650 Offset: 0xCD9650 VA: 0xCD9650
	// RVA: 0xF68DF8 Offset: 0xF68DF8 VA: 0xF68DF8 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD9660 Offset: 0xCD9660 VA: 0xCD9660
	// RVA: 0xF68E00 Offset: 0xF68E00 VA: 0xF68E00 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD9670 Offset: 0xCD9670 VA: 0xCD9670
	// RVA: 0xF68E14 Offset: 0xF68E14 VA: 0xF68E14 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC431A4 Offset: 0xC431A4 VA: 0xC431A4
private sealed class BasicHelper.<DelayCall>c__Iterator2<T> : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8239
{
	// Fields
	internal float delay; // 0x0
	internal Action<T> action; // 0x0
	internal T arg; // 0x0
	internal object $current; // 0x0
	internal bool $disposing; // 0x0
	internal int $PC; // 0x0

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD9680 Offset: 0xCD9680 VA: 0xCD9680
	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2256A9C Offset: 0x2256A9C VA: 0x2256A9C
	|-BasicHelper.<DelayCall>c__Iterator2<ShowAllEx.DamageFuncArgument>..ctor
	|
	|-RVA: 0x2256C68 Offset: 0x2256C68 VA: 0x2256C68
	|-BasicHelper.<DelayCall>c__Iterator2<object>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 5
	public bool MoveNext() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2256AC8 Offset: 0x2256AC8 VA: 0x2256AC8
	|-BasicHelper.<DelayCall>c__Iterator2<ShowAllEx.DamageFuncArgument>.MoveNext
	|
	|-RVA: 0x2256C94 Offset: 0x2256C94 VA: 0x2256C94
	|-BasicHelper.<DelayCall>c__Iterator2<object>.MoveNext
	*/

	[DebuggerHiddenAttribute] // RVA: 0xCD9690 Offset: 0xCD9690 VA: 0xCD9690
	// RVA: -1 Offset: -1 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2256BDC Offset: 0x2256BDC VA: 0x2256BDC
	|-BasicHelper.<DelayCall>c__Iterator2<ShowAllEx.DamageFuncArgument>.System.Collections.Generic.IEnumerator<object>.get_Current
	|
	|-RVA: 0x2256D80 Offset: 0x2256D80 VA: 0x2256D80
	|-BasicHelper.<DelayCall>c__Iterator2<object>.System.Collections.Generic.IEnumerator<object>.get_Current
	*/

	[DebuggerHiddenAttribute] // RVA: 0xCD96A0 Offset: 0xCD96A0 VA: 0xCD96A0
	// RVA: -1 Offset: -1 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2256BE4 Offset: 0x2256BE4 VA: 0x2256BE4
	|-BasicHelper.<DelayCall>c__Iterator2<ShowAllEx.DamageFuncArgument>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x2256D88 Offset: 0x2256D88 VA: 0x2256D88
	|-BasicHelper.<DelayCall>c__Iterator2<object>.System.Collections.IEnumerator.get_Current
	*/

	[DebuggerHiddenAttribute] // RVA: 0xCD96B0 Offset: 0xCD96B0 VA: 0xCD96B0
	// RVA: -1 Offset: -1 Slot: 7
	public void Dispose() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2256BEC Offset: 0x2256BEC VA: 0x2256BEC
	|-BasicHelper.<DelayCall>c__Iterator2<ShowAllEx.DamageFuncArgument>.Dispose
	|
	|-RVA: 0x2256D90 Offset: 0x2256D90 VA: 0x2256D90
	|-BasicHelper.<DelayCall>c__Iterator2<object>.Dispose
	*/

	[DebuggerHiddenAttribute] // RVA: 0xCD96C0 Offset: 0xCD96C0 VA: 0xCD96C0
	// RVA: -1 Offset: -1 Slot: 6
	public void Reset() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2256C00 Offset: 0x2256C00 VA: 0x2256C00
	|-BasicHelper.<DelayCall>c__Iterator2<ShowAllEx.DamageFuncArgument>.Reset
	|
	|-RVA: 0x2256DA4 Offset: 0x2256DA4 VA: 0x2256DA4
	|-BasicHelper.<DelayCall>c__Iterator2<object>.Reset
	*/
}

// Namespace: 
[ExtensionAttribute] // RVA: 0xC2A5D4 Offset: 0xC2A5D4 VA: 0xC2A5D4
internal static class GameObjectHelper // TypeDefIndex: 8240
{
	// Methods

	[ExtensionAttribute] // RVA: 0xCCB410 Offset: 0xCCB410 VA: 0xCCB410
	// RVA: 0x1BA2E44 Offset: 0x1BA2E44 VA: 0x1BA2E44
	public static void addNguiDepth(GameObject self, int depth, bool flg = False) { }
}

// Namespace: 
[ExtensionAttribute] // RVA: 0xC2A5E4 Offset: 0xC2A5E4 VA: 0xC2A5E4
internal static class PlayMakerFSMHelper // TypeDefIndex: 8241
{
	// Methods

	[ExtensionAttribute] // RVA: 0xCCB420 Offset: 0xCCB420 VA: 0xCCB420
	// RVA: 0x177E414 Offset: 0x177E414 VA: 0x177E414
	public static bool checkFsmGlobalTransitions(PlayMakerFSM self, string eventName) { }

	[ExtensionAttribute] // RVA: 0xCCB430 Offset: 0xCCB430 VA: 0xCCB430
	// RVA: -1 Offset: -1
	public static T GetComponent<T>(FsmGameObject self) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C21370 Offset: 0x1C21370 VA: 0x1C21370
	|-PlayMakerFSMHelper.GetComponent<BattleActorControl>
	|-PlayMakerFSMHelper.GetComponent<BattlePerformance>
	|-PlayMakerFSMHelper.GetComponent<object>
	*/
}

// Namespace: 
[ExtensionAttribute] // RVA: 0xC2A5F4 Offset: 0xC2A5F4 VA: 0xC2A5F4
internal static class TransformHelper // TypeDefIndex: 8242
{
	// Methods

	[ExtensionAttribute] // RVA: 0xCCB440 Offset: 0xCCB440 VA: 0xCCB440
	// RVA: 0x1886AEC Offset: 0x1886AEC VA: 0x1886AEC
	public static int ChangeChildsLayer(Transform self, int layer) { }

	[ExtensionAttribute] // RVA: 0xCCB450 Offset: 0xCCB450 VA: 0xCCB450
	// RVA: 0x1886DE0 Offset: 0x1886DE0 VA: 0x1886DE0
	public static void DestroyChildren(Transform self) { }

	[ExtensionAttribute] // RVA: 0xCCB460 Offset: 0xCCB460 VA: 0xCCB460
	// RVA: 0x18870EC Offset: 0x18870EC VA: 0x18870EC
	public static bool ExistNodeFromLvName(Transform self, string nodename, int level = -1, bool useNewRule = False) { }

	[ExtensionAttribute] // RVA: 0xCCB470 Offset: 0xCCB470 VA: 0xCCB470
	// RVA: 0x1887AD0 Offset: 0x1887AD0 VA: 0x1887AD0
	public static Transform getNodeFromLvName(Transform self, string nodename, int level = -1, bool useNewRule = False) { }

	[ExtensionAttribute] // RVA: 0xCCB480 Offset: 0xCCB480 VA: 0xCCB480
	// RVA: 0x18871E0 Offset: 0x18871E0 VA: 0x18871E0
	private static Transform executeGetNodeFromLvName(Transform self, string nodename, int level = -1, bool includeInactive = False, bool useNewRule = False, bool isIgnore = True) { }

	// RVA: 0x1887BBC Offset: 0x1887BBC VA: 0x1887BBC
	private static Transform[] GetIgnoreNodeList(Transform parentTransform, string nodename, bool includeInactive = False, bool useNewRule = False, bool isIgnore = False) { }

	[ExtensionAttribute] // RVA: 0xCCB490 Offset: 0xCCB490 VA: 0xCCB490
	// RVA: 0x1888258 Offset: 0x1888258 VA: 0x1888258
	public static Transform getNodeFromName(Transform self, string nodename, bool includeInactive = False) { }

	// RVA: 0x18885B4 Offset: 0x18885B4 VA: 0x18885B4
	private static int CalcPriority(string objName) { }

	// RVA: 0x1887E34 Offset: 0x1887E34 VA: 0x1887E34
	private static Transform SelectNodeWithRule(List<Transform> tNode, bool useNewRule) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC431B4 Offset: 0xC431B4 VA: 0xC431B4
private sealed class TransformHelper.<executeGetNodeFromLvName>c__AnonStorey0 // TypeDefIndex: 8243
{
	// Fields
	internal string nodename; // 0x10

	// Methods

	// RVA: 0x1887BB4 Offset: 0x1887BB4 VA: 0x1887BB4
	public void .ctor() { }

	// RVA: 0x188867C Offset: 0x188867C VA: 0x188867C
	internal bool <>m__0(Transform p) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC431C4 Offset: 0xC431C4 VA: 0xC431C4
private sealed class TransformHelper.<getNodeFromName>c__AnonStorey1 // TypeDefIndex: 8244
{
	// Fields
	internal string nodename; // 0x10

