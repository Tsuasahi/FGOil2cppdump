	// Properties
	public DateTime DateTime { get; }
	public DateTime LocalDateTime { get; }
	public TimeSpan Offset { get; }
	public DateTime UtcDateTime { get; }

	// Methods

	// RVA: 0xBC01A8 Offset: 0xBC01A8 VA: 0xBC01A8
	public void .ctor(DateTime dateTime) { }

	// RVA: 0xBC01B0 Offset: 0xBC01B0 VA: 0xBC01B0
	public void .ctor(DateTime dateTime, TimeSpan offset) { }

	// RVA: 0xBC01B8 Offset: 0xBC01B8 VA: 0xBC01B8
	public void .ctor(long ticks, TimeSpan offset) { }

	// RVA: 0xBC01C0 Offset: 0xBC01C0 VA: 0xBC01C0
	private void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x123C5A4 Offset: 0x123C5A4 VA: 0x123C5A4
	private static void .cctor() { }

	// RVA: 0xBC01C8 Offset: 0xBC01C8 VA: 0xBC01C8 Slot: 5
	private int System.IComparable.CompareTo(object obj) { }

	// RVA: 0xBC01D0 Offset: 0xBC01D0 VA: 0xBC01D0 Slot: 6
	private void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) { }

	[MonoTODOAttribute] // RVA: 0xC3ADC8 Offset: 0xC3ADC8 VA: 0xC3ADC8
	// RVA: 0xBC01D8 Offset: 0xBC01D8 VA: 0xBC01D8 Slot: 9
	private void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) { }

	// RVA: 0xBC01DC Offset: 0xBC01DC VA: 0xBC01DC Slot: 7
	public int CompareTo(DateTimeOffset other) { }

	// RVA: 0xBC0210 Offset: 0xBC0210 VA: 0xBC0210 Slot: 8
	public bool Equals(DateTimeOffset other) { }

	// RVA: 0xBC0248 Offset: 0xBC0248 VA: 0xBC0248 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0xBC0250 Offset: 0xBC0250 VA: 0xBC0250 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0xBC028C Offset: 0xBC028C VA: 0xBC028C Slot: 3
	public override string ToString() { }

	// RVA: 0xBC029C Offset: 0xBC029C VA: 0xBC029C Slot: 4
	public string ToString(string format, IFormatProvider formatProvider) { }

	// RVA: 0xBC02A4 Offset: 0xBC02A4 VA: 0xBC02A4
	public DateTime get_DateTime() { }

	// RVA: 0xBC02AC Offset: 0xBC02AC VA: 0xBC02AC
	public DateTime get_LocalDateTime() { }

	// RVA: 0xBC02D8 Offset: 0xBC02D8 VA: 0xBC02D8
	public TimeSpan get_Offset() { }

	// RVA: 0xBC02E0 Offset: 0xBC02E0 VA: 0xBC02E0
	public DateTime get_UtcDateTime() { }
}

// Namespace: System
internal static class DateTimeUtils // TypeDefIndex: 978
{
	// Methods

	// RVA: 0x123E0BC Offset: 0x123E0BC VA: 0x123E0BC
	public static int CountRepeat(string fmt, int p, char c) { }

	// RVA: 0x123E14C Offset: 0x123E14C VA: 0x123E14C
	public static void ZeroPad(StringBuilder output, int digits, int len) { }

	// RVA: 0x123E25C Offset: 0x123E25C VA: 0x123E25C
	public static int ParseQuotedString(string fmt, int pos, StringBuilder output) { }

	// RVA: 0x123AF1C Offset: 0x123AF1C VA: 0x123AF1C
	public static string GetStandardPattern(char format, DateTimeFormatInfo dfi, out bool useutc, out bool use_invariant) { }

	// RVA: 0x123CE48 Offset: 0x123CE48 VA: 0x123CE48
	public static string GetStandardPattern(char format, DateTimeFormatInfo dfi, out bool useutc, out bool use_invariant, bool date_time_offset) { }

	// RVA: 0x1236578 Offset: 0x1236578 VA: 0x1236578
	public static string ToString(DateTime dt, string format, DateTimeFormatInfo dfi) { }

	// RVA: 0x123D1D4 Offset: 0x123D1D4 VA: 0x123D1D4
	public static string ToString(DateTime dt, Nullable<TimeSpan> utc_offset, string format, DateTimeFormatInfo dfi) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36D68 Offset: 0xC36D68 VA: 0xC36D68
[Serializable]
public enum DayOfWeek // TypeDefIndex: 979
{
	// Fields
	public int value__; // 0x0
	public const DayOfWeek Sunday = 0;
	public const DayOfWeek Monday = 1;
	public const DayOfWeek Tuesday = 2;
	public const DayOfWeek Wednesday = 3;
	public const DayOfWeek Thursday = 4;
	public const DayOfWeek Friday = 5;
	public const DayOfWeek Saturday = 6;
}

// Namespace: System
internal class DelegateData // TypeDefIndex: 980
{
	// Fields
	public Type target_type; // 0x10
	public string method_name; // 0x18
}

// Namespace: System
[Serializable]
internal class DelegateSerializationHolder : ISerializable, IObjectReference // TypeDefIndex: 981
{
	// Fields
	private Delegate _delegate; // 0x10

	// Methods

	// RVA: 0x11761A8 Offset: 0x11761A8 VA: 0x11761A8
	private void .ctor(SerializationInfo info, StreamingContext ctx) { }

	// RVA: 0x1175C10 Offset: 0x1175C10 VA: 0x1175C10
	public static void GetDelegateData(Delegate instance, SerializationInfo info, StreamingContext ctx) { }

	// RVA: 0x1176818 Offset: 0x1176818 VA: 0x1176818 Slot: 4
	public void GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x1176880 Offset: 0x1176880 VA: 0x1176880 Slot: 5
	public object GetRealObject(StreamingContext context) { }
}

// Namespace: 
[Serializable]
private class DelegateSerializationHolder.DelegateEntry // TypeDefIndex: 982
{
	// Fields
	private string type; // 0x10
	private string assembly; // 0x18
	public object target; // 0x20
	private string targetTypeAssembly; // 0x28
	private string targetTypeName; // 0x30
	private string methodName; // 0x38
	public DelegateSerializationHolder.DelegateEntry delegateEntry; // 0x40

	// Methods

	// RVA: 0x1176658 Offset: 0x1176658 VA: 0x1176658
	public void .ctor(Delegate del, string targetLabel) { }

	// RVA: 0x1176404 Offset: 0x1176404 VA: 0x1176404
	public Delegate DeserializeDelegate(SerializationInfo info) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36D7C Offset: 0xC36D7C VA: 0xC36D7C
[Serializable]
public class DivideByZeroException : ArithmeticException // TypeDefIndex: 983
{
	// Fields
	private const int Result = -2147352558;

	// Methods

	// RVA: 0x1172314 Offset: 0x1172314 VA: 0x1172314
	public void .ctor() { }

	// RVA: 0x1177CF0 Offset: 0x1177CF0 VA: 0x1177CF0
	public void .ctor(string message, Exception innerException) { }

	// RVA: 0x1177D20 Offset: 0x1177D20 VA: 0x1177D20
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36D90 Offset: 0xC36D90 VA: 0xC36D90
[Serializable]
public class DllNotFoundException : TypeLoadException // TypeDefIndex: 984
{
	// Fields
	private const int Result = -2146233052;

	// Methods

	// RVA: 0x1177D28 Offset: 0x1177D28 VA: 0x1177D28
	public void .ctor() { }

	// RVA: 0x1177D98 Offset: 0x1177D98 VA: 0x1177D98
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36DA4 Offset: 0xC36DA4 VA: 0xC36DA4
[Serializable]
public class EntryPointNotFoundException : TypeLoadException // TypeDefIndex: 985
{
	// Fields
	private const int Result = -2146233053;

	// Methods

	// RVA: 0x1179B18 Offset: 0x1179B18 VA: 0x1179B18
	public void .ctor() { }

	// RVA: 0x1179B88 Offset: 0x1179B88 VA: 0x1179B88
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
internal struct MonoEnumInfo // TypeDefIndex: 986
{
	// Fields
	internal Type utype; // 0x0
	internal Array values; // 0x8
	internal string[] names; // 0x10
	internal Hashtable name_hash; // 0x18
	[ThreadStaticAttribute] // RVA: 0xC378D4 Offset: 0xC378D4 VA: 0xC378D4
	private static Hashtable cache; // 0x80000000
	private static Hashtable global_cache; // 0x0
	private static object global_cache_monitor; // 0x8
	internal static MonoEnumInfo.SByteComparer sbyte_comparer; // 0x10
	internal static MonoEnumInfo.ShortComparer short_comparer; // 0x18
	internal static MonoEnumInfo.IntComparer int_comparer; // 0x20
	internal static MonoEnumInfo.LongComparer long_comparer; // 0x28

	// Properties
	private static Hashtable Cache { get; }

	// Methods

	// RVA: 0xBBA980 Offset: 0xBBA980 VA: 0xBBA980
	private void .ctor(MonoEnumInfo other) { }

	// RVA: 0x10709C4 Offset: 0x10709C4 VA: 0x10709C4
	private static void .cctor() { }

	// RVA: 0x1070ACC Offset: 0x1070ACC VA: 0x1070ACC
	private static void get_enum_info(Type enumType, out MonoEnumInfo info) { }

	// RVA: 0x1070AD0 Offset: 0x1070AD0 VA: 0x1070AD0
	private static Hashtable get_Cache() { }

	// RVA: 0x1070BAC Offset: 0x1070BAC VA: 0x1070BAC
	internal static void GetInfo(Type enumType, out MonoEnumInfo info) { }
}

// Namespace: 
internal class MonoEnumInfo.SByteComparer : IComparer<sbyte>, IComparer // TypeDefIndex: 987
{
	// Methods

	// RVA: 0x1070ABC Offset: 0x1070ABC VA: 0x1070ABC
	public void .ctor() { }

	// RVA: 0x1071374 Offset: 0x1071374 VA: 0x1071374 Slot: 5
	public int Compare(object x, object y) { }

	// RVA: 0x10713EC Offset: 0x10713EC VA: 0x10713EC Slot: 4
	public int Compare(sbyte ix, sbyte iy) { }
}

// Namespace: 
internal class MonoEnumInfo.ShortComparer : IComparer<short>, IComparer // TypeDefIndex: 988
{
	// Methods

	// RVA: 0x1070AC0 Offset: 0x1070AC0 VA: 0x1070AC0
	public void .ctor() { }

	// RVA: 0x10713F8 Offset: 0x10713F8 VA: 0x10713F8 Slot: 5
	public int Compare(object x, object y) { }

	// RVA: 0x1071470 Offset: 0x1071470 VA: 0x1071470 Slot: 4
	public int Compare(short ix, short iy) { }
}

// Namespace: 
internal class MonoEnumInfo.IntComparer : IComparer<int>, IComparer // TypeDefIndex: 989
{
	// Methods

	// RVA: 0x1070AC4 Offset: 0x1070AC4 VA: 0x1070AC4
	public void .ctor() { }

	// RVA: 0x1071224 Offset: 0x1071224 VA: 0x1071224 Slot: 5
	public int Compare(object x, object y) { }

	// RVA: 0x10712B0 Offset: 0x10712B0 VA: 0x10712B0 Slot: 4
	public int Compare(int ix, int iy) { }
}

// Namespace: 
internal class MonoEnumInfo.LongComparer : IComparer<long>, IComparer // TypeDefIndex: 990
{
	// Methods

	// RVA: 0x1070AC8 Offset: 0x1070AC8 VA: 0x1070AC8
	public void .ctor() { }

	// RVA: 0x10712CC Offset: 0x10712CC VA: 0x10712CC Slot: 5
	public int Compare(object x, object y) { }

	// RVA: 0x1071358 Offset: 0x1071358 VA: 0x1071358 Slot: 4
	public int Compare(long ix, long iy) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36DB8 Offset: 0xC36DB8 VA: 0xC36DB8
public static class Environment // TypeDefIndex: 991
{
	// Fields
	private const int mono_corlib_version = 82;
	private static OperatingSystem os; // 0x0

	// Properties
	public static bool SocketSecurityEnabled { get; }
	public static bool UnityWebSecurityEnabled { get; }
	public static string NewLine { get; }
	internal static PlatformID Platform { get; }
	public static OperatingSystem OSVersion { get; }
	public static int TickCount { get; }
	internal static bool IsRunningOnWindows { get; }

	// Methods

	// RVA: 0x117DC2C Offset: 0x117DC2C VA: 0x117DC2C
	public static bool get_SocketSecurityEnabled() { }

	// RVA: 0x117DC30 Offset: 0x117DC30 VA: 0x117DC30
	public static bool get_UnityWebSecurityEnabled() { }

	// RVA: 0x1177CE4 Offset: 0x1177CE4 VA: 0x1177CE4
	public static string get_NewLine() { }

	// RVA: 0x117DC34 Offset: 0x117DC34 VA: 0x117DC34
	internal static PlatformID get_Platform() { }

	// RVA: 0x117DC38 Offset: 0x117DC38 VA: 0x117DC38
	internal static string GetOSVersionString() { }

	// RVA: 0x117DC3C Offset: 0x117DC3C VA: 0x117DC3C
	public static OperatingSystem get_OSVersion() { }

	// RVA: 0x117DCF0 Offset: 0x117DCF0 VA: 0x117DCF0
	public static int get_TickCount() { }

	// RVA: 0x117DCF4 Offset: 0x117DCF4 VA: 0x117DCF4
	internal static string internalGetEnvironmentVariable(string variable) { }

	// RVA: 0x117DCF8 Offset: 0x117DCF8 VA: 0x117DCF8
	public static string GetEnvironmentVariable(string variable) { }

	// RVA: 0x117DCFC Offset: 0x117DCFC VA: 0x117DCFC
	public static IDictionary GetEnvironmentVariables() { }

	// RVA: 0x117DDF0 Offset: 0x117DDF0 VA: 0x117DDF0
	private static string GetWindowsFolderPath(int folder) { }

	// RVA: 0x117DDF4 Offset: 0x117DDF4 VA: 0x117DDF4
	public static string GetFolderPath(Environment.SpecialFolder folder) { }

	// RVA: 0x117E0E8 Offset: 0x117E0E8 VA: 0x117E0E8
	private static string ReadXdgUserDir(string config_dir, string home_dir, string key, string fallback) { }

	// RVA: 0x117DE4C Offset: 0x117DE4C VA: 0x117DE4C
	internal static string InternalGetFolderPath(Environment.SpecialFolder folder) { }

	// RVA: 0x117DE30 Offset: 0x117DE30 VA: 0x117DE30
	internal static bool get_IsRunningOnWindows() { }

	// RVA: 0x117DDEC Offset: 0x117DDEC VA: 0x117DDEC
	private static string[] GetEnvironmentVariableNames() { }

	// RVA: 0x117E5C0 Offset: 0x117E5C0 VA: 0x117E5C0
	internal static string GetMachineConfigPath() { }

	// RVA: 0x117E5BC Offset: 0x117E5BC VA: 0x117E5BC
	internal static string internalGetHome() { }
}

// Namespace: 
[ComVisibleAttribute] // RVA: 0xC36DCC Offset: 0xC36DCC VA: 0xC36DCC
public enum Environment.SpecialFolder // TypeDefIndex: 992
{
	// Fields
	public int value__; // 0x0
	public const Environment.SpecialFolder MyDocuments = 5;
	public const Environment.SpecialFolder Desktop = 0;
	public const Environment.SpecialFolder MyComputer = 17;
	public const Environment.SpecialFolder Programs = 2;
	public const Environment.SpecialFolder Personal = 5;
	public const Environment.SpecialFolder Favorites = 6;
	public const Environment.SpecialFolder Startup = 7;
	public const Environment.SpecialFolder Recent = 8;
	public const Environment.SpecialFolder SendTo = 9;
	public const Environment.SpecialFolder StartMenu = 11;
	public const Environment.SpecialFolder MyMusic = 13;
	public const Environment.SpecialFolder DesktopDirectory = 16;
	public const Environment.SpecialFolder Templates = 21;
	public const Environment.SpecialFolder ApplicationData = 26;
	public const Environment.SpecialFolder LocalApplicationData = 28;
	public const Environment.SpecialFolder InternetCache = 32;
	public const Environment.SpecialFolder Cookies = 33;
	public const Environment.SpecialFolder History = 34;
	public const Environment.SpecialFolder CommonApplicationData = 35;
	public const Environment.SpecialFolder System = 37;
	public const Environment.SpecialFolder ProgramFiles = 38;
	public const Environment.SpecialFolder MyPictures = 39;
	public const Environment.SpecialFolder CommonProgramFiles = 43;
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36DE0 Offset: 0xC36DE0 VA: 0xC36DE0
[Serializable]
public class EventArgs // TypeDefIndex: 993
{
	// Fields
	public static readonly EventArgs Empty; // 0x0

	// Methods

	// RVA: 0x117E5C4 Offset: 0x117E5C4 VA: 0x117E5C4
	public void .ctor() { }

	// RVA: 0x117E5CC Offset: 0x117E5CC VA: 0x117E5CC
	private static void .cctor() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36DF4 Offset: 0xC36DF4 VA: 0xC36DF4
[Serializable]
public sealed class ExecutionEngineException : SystemException // TypeDefIndex: 994
{
	// Methods

	// RVA: 0x117FE44 Offset: 0x117FE44 VA: 0x117FE44
	public void .ctor() { }

	// RVA: 0x117FEA4 Offset: 0x117FEA4 VA: 0x117FEA4
	public void .ctor(string message) { }

	// RVA: 0x117FEAC Offset: 0x117FEAC VA: 0x117FEAC
	internal void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36E08 Offset: 0xC36E08 VA: 0xC36E08
[Serializable]
public class FieldAccessException : MemberAccessException // TypeDefIndex: 995
{
	// Methods

	// RVA: 0x117FEB4 Offset: 0x117FEB4 VA: 0x117FEB4
	public void .ctor() { }

	// RVA: 0x117FF24 Offset: 0x117FF24 VA: 0x117FF24
	public void .ctor(string message) { }

	// RVA: 0x117FF54 Offset: 0x117FF54 VA: 0x117FF54
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36E1C Offset: 0xC36E1C VA: 0xC36E1C
[AttributeUsageAttribute] // RVA: 0xC36E1C Offset: 0xC36E1C VA: 0xC36E1C
[Serializable]
public class FlagsAttribute : Attribute // TypeDefIndex: 996
{
	// Methods

	// RVA: 0x117FF5C Offset: 0x117FF5C VA: 0x117FF5C
	public void .ctor() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36E70 Offset: 0xC36E70 VA: 0xC36E70
[Serializable]
public class FormatException : SystemException // TypeDefIndex: 997
{
	// Fields
	private const int Result = -2146233033;

	// Methods

	// RVA: 0x11797EC Offset: 0x11797EC VA: 0x11797EC
	public void .ctor() { }

	// RVA: 0x11726F4 Offset: 0x11726F4 VA: 0x11726F4
	public void .ctor(string message) { }

	// RVA: 0x117FF64 Offset: 0x117FF64 VA: 0x117FF64
	public void .ctor(string message, Exception innerException) { }

	// RVA: 0x117FF94 Offset: 0x117FF94 VA: 0x117FF94
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
public static class GC // TypeDefIndex: 998
{
	// Properties
	public static int MaxGeneration { get; }

	// Methods

	// RVA: 0x117FF9C Offset: 0x117FF9C VA: 0x117FF9C
	public static int get_MaxGeneration() { }

	// RVA: 0x117FFA0 Offset: 0x117FFA0 VA: 0x117FFA0
	private static void InternalCollect(int generation) { }

	// RVA: 0x117FFA4 Offset: 0x117FFA4 VA: 0x117FFA4
	public static void Collect() { }

	// RVA: 0x117FFB8 Offset: 0x117FFB8 VA: 0x117FFB8
	public static long GetTotalMemory(bool forceFullCollection) { }

	[ReliabilityContractAttribute] // RVA: 0xC3ADD8 Offset: 0xC3ADD8 VA: 0xC3ADD8
	// RVA: 0x117FFC0 Offset: 0x117FFC0 VA: 0x117FFC0
	public static void KeepAlive(object obj) { }

	[ReliabilityContractAttribute] // RVA: 0xC3ADF0 Offset: 0xC3ADF0 VA: 0xC3ADF0
	// RVA: 0x117FFC4 Offset: 0x117FFC4 VA: 0x117FFC4
	public static void SuppressFinalize(object obj) { }

	// RVA: 0x117FFC8 Offset: 0x117FFC8 VA: 0x117FFC8
	public static void WaitForPendingFinalizers() { }

	[ReliabilityContractAttribute] // RVA: 0xC3AE08 Offset: 0xC3AE08 VA: 0xC3AE08
	// RVA: 0x117FFCC Offset: 0x117FFCC VA: 0x117FFCC
	public static int CollectionCount(int generation) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36E84 Offset: 0xC36E84 VA: 0xC36E84
[Serializable]
public struct Guid : IFormattable, IComparable, IComparable<Guid>, IEquatable<Guid> // TypeDefIndex: 999
{
	// Fields
	private int _a; // 0x0
	private short _b; // 0x4
	private short _c; // 0x6
	private byte _d; // 0x8
	private byte _e; // 0x9
	private byte _f; // 0xA
	private byte _g; // 0xB
	private byte _h; // 0xC
	private byte _i; // 0xD
	private byte _j; // 0xE
	private byte _k; // 0xF
	public static readonly Guid Empty; // 0x0
	private static object _rngAccess; // 0x10
	private static RandomNumberGenerator _rng; // 0x18
	private static RandomNumberGenerator _fastRng; // 0x20

	// Methods

	// RVA: 0xBBBCD8 Offset: 0xBBBCD8 VA: 0xBBBCD8
	public void .ctor(byte[] b) { }

	// RVA: 0xBBBCE0 Offset: 0xBBBCE0 VA: 0xBBBCE0
	public void .ctor(string g) { }

	// RVA: 0xBBBCE8 Offset: 0xBBBCE8 VA: 0xBBBCE8
	public void .ctor(int a, short b, short c, byte[] d) { }

	// RVA: 0xBBBCF0 Offset: 0xBBBCF0 VA: 0xBBBCF0
	public void .ctor(int a, short b, short c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k) { }

	[CLSCompliantAttribute] // RVA: 0xC3AE20 Offset: 0xC3AE20 VA: 0xC3AE20
	// RVA: 0xBBBD30 Offset: 0xBBBD30 VA: 0xBBBD30
	public void .ctor(uint a, ushort b, ushort c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k) { }

	// RVA: 0x118A518 Offset: 0x118A518 VA: 0x118A518
	private static void .cctor() { }

	// RVA: 0x118A134 Offset: 0x118A134 VA: 0x118A134
	private static void CheckNull(object o) { }

	// RVA: 0x118A608 Offset: 0x118A608 VA: 0x118A608
	private static void CheckLength(byte[] o, int l) { }

	// RVA: 0x1189FE4 Offset: 0x1189FE4 VA: 0x1189FE4
	private static void CheckArray(byte[] o, int l) { }

	// RVA: 0x118A718 Offset: 0x118A718 VA: 0x118A718
	private static int Compare(int x, int y) { }

	// RVA: 0xBBBD70 Offset: 0xBBBD70 VA: 0xBBBD70 Slot: 5
	public int CompareTo(object value) { }

	// RVA: 0xBBBD78 Offset: 0xBBBD78 VA: 0xBBBD78 Slot: 0
	public override bool Equals(object o) { }

	// RVA: 0xBBBD80 Offset: 0xBBBD80 VA: 0xBBBD80 Slot: 6
	public int CompareTo(Guid value) { }

	// RVA: 0xBBBD88 Offset: 0xBBBD88 VA: 0xBBBD88 Slot: 7
	public bool Equals(Guid g) { }

	// RVA: 0xBBBDA8 Offset: 0xBBBDA8 VA: 0xBBBDA8 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x118ABF0 Offset: 0x118ABF0 VA: 0x118ABF0
	private static char ToHex(int b) { }

	// RVA: 0x118AC08 Offset: 0x118AC08 VA: 0x118AC08
	public static Guid NewGuid() { }

	// RVA: 0x118ADC4 Offset: 0x118ADC4 VA: 0x118ADC4
	internal static byte[] FastNewGuidArray() { }

	// RVA: 0x118B044 Offset: 0x118B044 VA: 0x118B044
	private static void AppendInt(StringBuilder builder, int value) { }

	// RVA: 0x118B234 Offset: 0x118B234 VA: 0x118B234
	private static void AppendShort(StringBuilder builder, short value) { }

	// RVA: 0x118B368 Offset: 0x118B368 VA: 0x118B368
	private static void AppendByte(StringBuilder builder, byte value) { }

	// RVA: 0xBBBDB0 Offset: 0xBBBDB0 VA: 0xBBBDB0
	private string BaseToString(bool h, bool p, bool b) { }

	// RVA: 0xBBBDC4 Offset: 0xBBBDC4 VA: 0xBBBDC4 Slot: 3
	public override string ToString() { }

	// RVA: 0xBBBDD8 Offset: 0xBBBDD8 VA: 0xBBBDD8
	public string ToString(string format) { }

	// RVA: 0xBBBDE0 Offset: 0xBBBDE0 VA: 0xBBBDE0 Slot: 4
	public string ToString(string format, IFormatProvider provider) { }

	// RVA: 0x118B8E8 Offset: 0x118B8E8 VA: 0x118B8E8
	public static bool op_Equality(Guid a, Guid b) { }
}

// Namespace: 
internal class Guid.GuidParser // TypeDefIndex: 1000
{
	// Fields
	private string _src; // 0x10
	private int _length; // 0x18
	private int _cur; // 0x1C

	// Methods

	// RVA: 0x118A1D0 Offset: 0x118A1D0 VA: 0x118A1D0
	public void .ctor(string src) { }

	// RVA: 0x118B91C Offset: 0x118B91C VA: 0x118B91C
	private void Reset() { }

	// RVA: 0x118B95C Offset: 0x118B95C VA: 0x118B95C
	private bool AtEnd() { }

	// RVA: 0x118B96C Offset: 0x118B96C VA: 0x118B96C
	private void ThrowFormatException() { }

	// RVA: 0x118B9F0 Offset: 0x118B9F0 VA: 0x118B9F0
	private ulong ParseHex(int length, bool strictLength) { }

	// RVA: 0x118BB28 Offset: 0x118BB28 VA: 0x118BB28
	private bool ParseOptChar(char c) { }

	// RVA: 0x118BBA0 Offset: 0x118BBA0 VA: 0x118BBA0
	private void ParseChar(char c) { }

	// RVA: 0x118BBBC Offset: 0x118BBBC VA: 0x118BBBC
	private Guid ParseGuid1() { }

	// RVA: 0x118BE08 Offset: 0x118BE08 VA: 0x118BE08
	private void ParseHexPrefix() { }

	// RVA: 0x118BE44 Offset: 0x118BE44 VA: 0x118BE44
	private Guid ParseGuid2() { }

	// RVA: 0x118A200 Offset: 0x118A200 VA: 0x118A200
	public Guid Parse() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36E98 Offset: 0xC36E98 VA: 0xC36E98
public interface ICustomFormatter // TypeDefIndex: 1001
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract string Format(string format, object arg, IFormatProvider formatProvider);
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36EAC Offset: 0xC36EAC VA: 0xC36EAC
public interface IFormatProvider // TypeDefIndex: 1002
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract object GetFormat(Type formatType);
}

// Namespace: System
public interface IServiceProvider // TypeDefIndex: 1003
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract object GetService(Type serviceType);
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36EC0 Offset: 0xC36EC0 VA: 0xC36EC0
[Serializable]
public sealed class IndexOutOfRangeException : SystemException // TypeDefIndex: 1004
{
	// Methods

	// RVA: 0x273A8AC Offset: 0x273A8AC VA: 0x273A8AC
	public void .ctor() { }

	// RVA: 0x273A90C Offset: 0x273A90C VA: 0x273A90C
	public void .ctor(string message) { }

	// RVA: 0x273A914 Offset: 0x273A914 VA: 0x273A914
	public void .ctor(string message, Exception innerException) { }

	// RVA: 0x273A91C Offset: 0x273A91C VA: 0x273A91C
	internal void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36ED4 Offset: 0xC36ED4 VA: 0xC36ED4
[Serializable]
public class InvalidCastException : SystemException // TypeDefIndex: 1005
{
	// Fields
	private const int Result = -2147467262;

	// Methods

	// RVA: 0x106D158 Offset: 0x106D158 VA: 0x106D158
	public void .ctor() { }

	// RVA: 0x106D1CC Offset: 0x106D1CC VA: 0x106D1CC
	public void .ctor(string message) { }

	// RVA: 0x106D200 Offset: 0x106D200 VA: 0x106D200
	public void .ctor(string message, Exception innerException) { }

	// RVA: 0x106D234 Offset: 0x106D234 VA: 0x106D234
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36EE8 Offset: 0xC36EE8 VA: 0xC36EE8
[Serializable]
public class InvalidOperationException : SystemException // TypeDefIndex: 1006
{
	// Fields
	private const int Result = -2146233079;

	// Methods

	// RVA: 0x106D23C Offset: 0x106D23C VA: 0x106D23C
	public void .ctor() { }

	// RVA: 0x106D2B0 Offset: 0x106D2B0 VA: 0x106D2B0
	public void .ctor(string message) { }

	// RVA: 0x106D2E4 Offset: 0x106D2E4 VA: 0x106D2E4
	public void .ctor(string message, Exception innerException) { }

	// RVA: 0x106D318 Offset: 0x106D318 VA: 0x106D318
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36EFC Offset: 0xC36EFC VA: 0xC36EFC
[Serializable]
public enum LoaderOptimization // TypeDefIndex: 1007
{
	// Fields
	public int value__; // 0x0
	public const LoaderOptimization NotSpecified = 0;
	public const LoaderOptimization SingleDomain = 1;
	public const LoaderOptimization MultiDomain = 2;
	public const LoaderOptimization MultiDomainHost = 3;
	[ObsoleteAttribute] // RVA: 0xC378E4 Offset: 0xC378E4 VA: 0xC378E4
	public const LoaderOptimization DomainMask = 3;
	[ObsoleteAttribute] // RVA: 0xC378F4 Offset: 0xC378F4 VA: 0xC378F4
	public const LoaderOptimization DisallowBindings = 4;
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36F10 Offset: 0xC36F10 VA: 0xC36F10
public sealed class LocalDataStoreSlot // TypeDefIndex: 1008
{
	// Fields
	internal int slot; // 0x10
	internal bool thread_local; // 0x14
	private static object lock_obj; // 0x0
	private static bool[] slot_bitmap_thread; // 0x8
	private static bool[] slot_bitmap_context; // 0x10

	// Methods

	// RVA: 0x106D320 Offset: 0x106D320 VA: 0x106D320
	internal void .ctor(bool in_thread) { }

	// RVA: 0x106D5EC Offset: 0x106D5EC VA: 0x106D5EC
	private static void .cctor() { }

	// RVA: 0x106D64C Offset: 0x106D64C VA: 0x106D64C Slot: 1
	protected override void Finalize() { }
}

// Namespace: System
public static class Math // TypeDefIndex: 1009
{
	// Methods

	// RVA: 0x106DA08 Offset: 0x106DA08 VA: 0x106DA08
	public static double Abs(double value) { }

	// RVA: 0x106DA18 Offset: 0x106DA18 VA: 0x106DA18
	public static float Abs(float value) { }

	// RVA: 0x106DA28 Offset: 0x106DA28 VA: 0x106DA28
	public static int Abs(int value) { }

	// RVA: 0x106DAD0 Offset: 0x106DAD0 VA: 0x106DAD0
	public static long Abs(long value) { }

	// RVA: 0x106DB78 Offset: 0x106DB78 VA: 0x106DB78
	public static double Ceiling(double a) { }

	// RVA: 0x106DB90 Offset: 0x106DB90 VA: 0x106DB90
	public static double Floor(double d) { }

	// RVA: 0x106DB98 Offset: 0x106DB98 VA: 0x106DB98
	public static double Log(double a, double newBase) { }

	[ReliabilityContractAttribute] // RVA: 0xC3AE34 Offset: 0xC3AE34 VA: 0xC3AE34
	// RVA: 0x106DBD4 Offset: 0x106DBD4 VA: 0x106DBD4
	public static byte Max(byte val1, byte val2) { }

	[ReliabilityContractAttribute] // RVA: 0xC3AE4C Offset: 0xC3AE4C VA: 0xC3AE4C
	// RVA: 0x106DBE4 Offset: 0x106DBE4 VA: 0x106DBE4
	public static float Max(float val1, float val2) { }

	[ReliabilityContractAttribute] // RVA: 0xC3AE64 Offset: 0xC3AE64 VA: 0xC3AE64
	// RVA: 0x106DC34 Offset: 0x106DC34 VA: 0x106DC34
	public static int Max(int val1, int val2) { }

	[ReliabilityContractAttribute] // RVA: 0xC3AE7C Offset: 0xC3AE7C VA: 0xC3AE7C
	// RVA: 0x106DC40 Offset: 0x106DC40 VA: 0x106DC40
	public static long Max(long val1, long val2) { }

	[ReliabilityContractAttribute] // RVA: 0xC3AE94 Offset: 0xC3AE94 VA: 0xC3AE94
	// RVA: 0x106DC4C Offset: 0x106DC4C VA: 0x106DC4C
	public static float Min(float val1, float val2) { }

	[ReliabilityContractAttribute] // RVA: 0xC3AEAC Offset: 0xC3AEAC VA: 0xC3AEAC
	// RVA: 0x106DC9C Offset: 0x106DC9C VA: 0x106DC9C
	public static int Min(int val1, int val2) { }

	[ReliabilityContractAttribute] // RVA: 0xC3AEC4 Offset: 0xC3AEC4 VA: 0xC3AEC4
	// RVA: 0x106DCA8 Offset: 0x106DCA8 VA: 0x106DCA8
	public static long Min(long val1, long val2) { }

	// RVA: 0x106DCB4 Offset: 0x106DCB4 VA: 0x106DCB4
	public static Decimal Round(Decimal d) { }

	// RVA: 0x106DF58 Offset: 0x106DF58 VA: 0x106DF58
	public static double Round(double a) { }

	// RVA: 0x106DFD8 Offset: 0x106DFD8 VA: 0x106DFD8
	public static double Round(double value, MidpointRounding mode) { }

	// RVA: 0x106E178 Offset: 0x106E178 VA: 0x106E178
	public static double Truncate(double d) { }

	// RVA: 0x106E194 Offset: 0x106E194 VA: 0x106E194
	public static Decimal Floor(Decimal d) { }

	// RVA: 0x106E20C Offset: 0x106E20C VA: 0x106E20C
	public static double Sin(double a) { }

	// RVA: 0x106E210 Offset: 0x106E210 VA: 0x106E210
	public static double Cos(double d) { }

	// RVA: 0x106E214 Offset: 0x106E214 VA: 0x106E214
	public static double Tan(double a) { }

	// RVA: 0x106E218 Offset: 0x106E218 VA: 0x106E218
	public static double Acos(double d) { }

	// RVA: 0x106E21C Offset: 0x106E21C VA: 0x106E21C
	public static double Asin(double d) { }

	// RVA: 0x106E220 Offset: 0x106E220 VA: 0x106E220
	public static double Atan(double d) { }

	// RVA: 0x106E224 Offset: 0x106E224 VA: 0x106E224
	public static double Atan2(double y, double x) { }

	// RVA: 0x106E228 Offset: 0x106E228 VA: 0x106E228
	public static double Exp(double d) { }

	// RVA: 0x106E22C Offset: 0x106E22C VA: 0x106E22C
	public static double Log(double d) { }

	// RVA: 0x106E230 Offset: 0x106E230 VA: 0x106E230
	public static double Log10(double d) { }

	// RVA: 0x106E234 Offset: 0x106E234 VA: 0x106E234
	public static double Pow(double x, double y) { }

	[ReliabilityContractAttribute] // RVA: 0xC3AEDC Offset: 0xC3AEDC VA: 0xC3AEDC
	// RVA: 0x106E238 Offset: 0x106E238 VA: 0x106E238
	public static double Sqrt(double d) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36F24 Offset: 0xC36F24 VA: 0xC36F24
[Serializable]
public class MemberAccessException : SystemException // TypeDefIndex: 1010
{
	// Methods

	// RVA: 0x106E250 Offset: 0x106E250 VA: 0x106E250
	public void .ctor() { }

	// RVA: 0x106E2C4 Offset: 0x106E2C4 VA: 0x106E2C4
	public void .ctor(string message) { }

	// RVA: 0x106E2F8 Offset: 0x106E2F8 VA: 0x106E2F8
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36F38 Offset: 0xC36F38 VA: 0xC36F38
[Serializable]
public class MethodAccessException : MemberAccessException // TypeDefIndex: 1011
{
	// Fields
	private const int Result = -2146233072;

	// Methods

	// RVA: 0x106E300 Offset: 0x106E300 VA: 0x106E300
	public void .ctor() { }

	// RVA: 0x106E38C Offset: 0x106E38C VA: 0x106E38C
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36F4C Offset: 0xC36F4C VA: 0xC36F4C
public enum MidpointRounding // TypeDefIndex: 1012
{
	// Fields
	public int value__; // 0x0
	public const MidpointRounding ToEven = 0;
	public const MidpointRounding AwayFromZero = 1;
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36F60 Offset: 0xC36F60 VA: 0xC36F60
[Serializable]
public class MissingFieldException : MissingMemberException // TypeDefIndex: 1013
{
	// Properties
	public override string Message { get; }

	// Methods

	// RVA: 0x106E394 Offset: 0x106E394 VA: 0x106E394
	public void .ctor() { }

	// RVA: 0x106E450 Offset: 0x106E450 VA: 0x106E450
	public void .ctor(string message) { }

	// RVA: 0x106E480 Offset: 0x106E480 VA: 0x106E480
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x106E640 Offset: 0x106E640 VA: 0x106E640 Slot: 6
	public override string get_Message() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xC36F74 Offset: 0xC36F74 VA: 0xC36F74
[Serializable]
public class MissingMemberException : MemberAccessException // TypeDefIndex: 1014
{
