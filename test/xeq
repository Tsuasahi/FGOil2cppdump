	public const DateTime.Which DayYear = 1;
	public const DateTime.Which Month = 2;
	public const DateTime.Which Year = 3;
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAC2C Offset: 0xBCAC2C VA: 0xBCAC2C
[Serializable]
public enum DateTimeKind // TypeDefIndex: 976
{
	// Fields
	public int value__; // 0x0
	public const DateTimeKind Unspecified = 0;
	public const DateTimeKind Utc = 1;
	public const DateTimeKind Local = 2;
}

// Namespace: System
[Serializable]
public struct DateTimeOffset : IFormattable, IComparable, ISerializable, IComparable<DateTimeOffset>, IEquatable<DateTimeOffset>, IDeserializationCallback // TypeDefIndex: 977
{
	// Fields
	public static readonly DateTimeOffset MaxValue; // 0x0
	public static readonly DateTimeOffset MinValue; // 0x18
	private DateTime dt; // 0x0
	private TimeSpan utc_offset; // 0x10

	// Properties
	public DateTime DateTime { get; }
	public DateTime LocalDateTime { get; }
	public TimeSpan Offset { get; }
	public DateTime UtcDateTime { get; }

	// Methods

	// RVA: 0xD6E488 Offset: 0xD6E488 VA: 0xD6E488
	public void .ctor(DateTime dateTime) { }

	// RVA: 0xD6E490 Offset: 0xD6E490 VA: 0xD6E490
	public void .ctor(DateTime dateTime, TimeSpan offset) { }

	// RVA: 0xD6E498 Offset: 0xD6E498 VA: 0xD6E498
	public void .ctor(long ticks, TimeSpan offset) { }

	// RVA: 0xD6E4A0 Offset: 0xD6E4A0 VA: 0xD6E4A0
	private void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x2541DCC Offset: 0x2541DCC VA: 0x2541DCC
	private static void .cctor() { }

	// RVA: 0xD6E4A8 Offset: 0xD6E4A8 VA: 0xD6E4A8 Slot: 5
	private int System.IComparable.CompareTo(object obj) { }

	// RVA: 0xD6E4B0 Offset: 0xD6E4B0 VA: 0xD6E4B0 Slot: 6
	private void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) { }

	[MonoTODOAttribute] // RVA: 0xBCECA0 Offset: 0xBCECA0 VA: 0xBCECA0
	// RVA: 0xD6E4B8 Offset: 0xD6E4B8 VA: 0xD6E4B8 Slot: 9
	private void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) { }

	// RVA: 0xD6E4BC Offset: 0xD6E4BC VA: 0xD6E4BC Slot: 7
	public int CompareTo(DateTimeOffset other) { }

	// RVA: 0xD6E4F0 Offset: 0xD6E4F0 VA: 0xD6E4F0 Slot: 8
	public bool Equals(DateTimeOffset other) { }

	// RVA: 0xD6E528 Offset: 0xD6E528 VA: 0xD6E528 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0xD6E530 Offset: 0xD6E530 VA: 0xD6E530 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0xD6E56C Offset: 0xD6E56C VA: 0xD6E56C Slot: 3
	public override string ToString() { }

	// RVA: 0xD6E57C Offset: 0xD6E57C VA: 0xD6E57C Slot: 4
	public string ToString(string format, IFormatProvider formatProvider) { }

	// RVA: 0xD6E584 Offset: 0xD6E584 VA: 0xD6E584
	public DateTime get_DateTime() { }

	// RVA: 0xD6E58C Offset: 0xD6E58C VA: 0xD6E58C
	public DateTime get_LocalDateTime() { }

	// RVA: 0xD6E5B8 Offset: 0xD6E5B8 VA: 0xD6E5B8
	public TimeSpan get_Offset() { }

	// RVA: 0xD6E5C0 Offset: 0xD6E5C0 VA: 0xD6E5C0
	public DateTime get_UtcDateTime() { }
}

// Namespace: System
internal static class DateTimeUtils // TypeDefIndex: 978
{
	// Methods

	// RVA: 0x25438E4 Offset: 0x25438E4 VA: 0x25438E4
	public static int CountRepeat(string fmt, int p, char c) { }

	// RVA: 0x2543974 Offset: 0x2543974 VA: 0x2543974
	public static void ZeroPad(StringBuilder output, int digits, int len) { }

	// RVA: 0x2543A84 Offset: 0x2543A84 VA: 0x2543A84
	public static int ParseQuotedString(string fmt, int pos, StringBuilder output) { }

	// RVA: 0x2540744 Offset: 0x2540744 VA: 0x2540744
	public static string GetStandardPattern(char format, DateTimeFormatInfo dfi, out bool useutc, out bool use_invariant) { }

	// RVA: 0x2542670 Offset: 0x2542670 VA: 0x2542670
	public static string GetStandardPattern(char format, DateTimeFormatInfo dfi, out bool useutc, out bool use_invariant, bool date_time_offset) { }

	// RVA: 0x253BDA0 Offset: 0x253BDA0 VA: 0x253BDA0
	public static string ToString(DateTime dt, string format, DateTimeFormatInfo dfi) { }

	// RVA: 0x25429FC Offset: 0x25429FC VA: 0x25429FC
	public static string ToString(DateTime dt, Nullable<TimeSpan> utc_offset, string format, DateTimeFormatInfo dfi) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAC40 Offset: 0xBCAC40 VA: 0xBCAC40
[Serializable]
public enum DayOfWeek // TypeDefIndex: 979
{
	// Fields
	public int value__; // 0x0
	public const DayOfWeek Sunday = 0;
	public const DayOfWeek Monday = 1;
	public const DayOfWeek Tuesday = 2;
	public const DayOfWeek Wednesday = 3;
	public const DayOfWeek Thursday = 4;
	public const DayOfWeek Friday = 5;
	public const DayOfWeek Saturday = 6;
}

// Namespace: System
internal class DelegateData // TypeDefIndex: 980
{
	// Fields
	public Type target_type; // 0x10
	public string method_name; // 0x18
}

// Namespace: System
[Serializable]
internal class DelegateSerializationHolder : ISerializable, IObjectReference // TypeDefIndex: 981
{
	// Fields
	private Delegate _delegate; // 0x10

	// Methods

	// RVA: 0x23AB500 Offset: 0x23AB500 VA: 0x23AB500
	private void .ctor(SerializationInfo info, StreamingContext ctx) { }

	// RVA: 0x23AAF68 Offset: 0x23AAF68 VA: 0x23AAF68
	public static void GetDelegateData(Delegate instance, SerializationInfo info, StreamingContext ctx) { }

	// RVA: 0x23ABB70 Offset: 0x23ABB70 VA: 0x23ABB70 Slot: 4
	public void GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x23ABBD8 Offset: 0x23ABBD8 VA: 0x23ABBD8 Slot: 5
	public object GetRealObject(StreamingContext context) { }
}

// Namespace: 
[Serializable]
private class DelegateSerializationHolder.DelegateEntry // TypeDefIndex: 982
{
	// Fields
	private string type; // 0x10
	private string assembly; // 0x18
	public object target; // 0x20
	private string targetTypeAssembly; // 0x28
	private string targetTypeName; // 0x30
	private string methodName; // 0x38
	public DelegateSerializationHolder.DelegateEntry delegateEntry; // 0x40

	// Methods

	// RVA: 0x23AB9B0 Offset: 0x23AB9B0 VA: 0x23AB9B0
	public void .ctor(Delegate del, string targetLabel) { }

	// RVA: 0x23AB75C Offset: 0x23AB75C VA: 0x23AB75C
	public Delegate DeserializeDelegate(SerializationInfo info) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAC54 Offset: 0xBCAC54 VA: 0xBCAC54
[Serializable]
public class DivideByZeroException : ArithmeticException // TypeDefIndex: 983
{
	// Fields
	private const int Result = -2147352558;

	// Methods

	// RVA: 0x23A766C Offset: 0x23A766C VA: 0x23A766C
	public void .ctor() { }

	// RVA: 0x23AD048 Offset: 0x23AD048 VA: 0x23AD048
	public void .ctor(string message, Exception innerException) { }

	// RVA: 0x23AD078 Offset: 0x23AD078 VA: 0x23AD078
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAC68 Offset: 0xBCAC68 VA: 0xBCAC68
[Serializable]
public class DllNotFoundException : TypeLoadException // TypeDefIndex: 984
{
	// Fields
	private const int Result = -2146233052;

	// Methods

	// RVA: 0x23AD080 Offset: 0x23AD080 VA: 0x23AD080
	public void .ctor() { }

	// RVA: 0x23AD0F0 Offset: 0x23AD0F0 VA: 0x23AD0F0
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAC7C Offset: 0xBCAC7C VA: 0xBCAC7C
[Serializable]
public class EntryPointNotFoundException : TypeLoadException // TypeDefIndex: 985
{
	// Fields
	private const int Result = -2146233053;

	// Methods

	// RVA: 0x23AEE70 Offset: 0x23AEE70 VA: 0x23AEE70
	public void .ctor() { }

	// RVA: 0x23AEEE0 Offset: 0x23AEEE0 VA: 0x23AEEE0
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
internal struct MonoEnumInfo // TypeDefIndex: 986
{
	// Fields
	internal Type utype; // 0x0
	internal Array values; // 0x8
	internal string[] names; // 0x10
	internal Hashtable name_hash; // 0x18
	[ThreadStaticAttribute] // RVA: 0xBCB7AC Offset: 0xBCB7AC VA: 0xBCB7AC
	private static Hashtable cache; // 0x80000000
	private static Hashtable global_cache; // 0x0
	private static object global_cache_monitor; // 0x8
	internal static MonoEnumInfo.SByteComparer sbyte_comparer; // 0x10
	internal static MonoEnumInfo.ShortComparer short_comparer; // 0x18
	internal static MonoEnumInfo.IntComparer int_comparer; // 0x20
	internal static MonoEnumInfo.LongComparer long_comparer; // 0x28

	// Properties
	private static Hashtable Cache { get; }

	// Methods

	// RVA: 0xD679F8 Offset: 0xD679F8 VA: 0xD679F8
	private void .ctor(MonoEnumInfo other) { }

	// RVA: 0x21E575C Offset: 0x21E575C VA: 0x21E575C
	private static void .cctor() { }

	// RVA: 0x21E5864 Offset: 0x21E5864 VA: 0x21E5864
	private static void get_enum_info(Type enumType, out MonoEnumInfo info) { }

	// RVA: 0x21E5868 Offset: 0x21E5868 VA: 0x21E5868
	private static Hashtable get_Cache() { }

	// RVA: 0x21E5944 Offset: 0x21E5944 VA: 0x21E5944
	internal static void GetInfo(Type enumType, out MonoEnumInfo info) { }
}

// Namespace: 
internal class MonoEnumInfo.SByteComparer : IComparer<sbyte>, IComparer // TypeDefIndex: 987
{
	// Methods

	// RVA: 0x21E5854 Offset: 0x21E5854 VA: 0x21E5854
	public void .ctor() { }

	// RVA: 0x21E610C Offset: 0x21E610C VA: 0x21E610C Slot: 5
	public int Compare(object x, object y) { }

	// RVA: 0x21E6184 Offset: 0x21E6184 VA: 0x21E6184 Slot: 4
	public int Compare(sbyte ix, sbyte iy) { }
}

// Namespace: 
internal class MonoEnumInfo.ShortComparer : IComparer<short>, IComparer // TypeDefIndex: 988
{
	// Methods

	// RVA: 0x21E5858 Offset: 0x21E5858 VA: 0x21E5858
	public void .ctor() { }

	// RVA: 0x21E6190 Offset: 0x21E6190 VA: 0x21E6190 Slot: 5
	public int Compare(object x, object y) { }

	// RVA: 0x21E6208 Offset: 0x21E6208 VA: 0x21E6208 Slot: 4
	public int Compare(short ix, short iy) { }
}

// Namespace: 
internal class MonoEnumInfo.IntComparer : IComparer<int>, IComparer // TypeDefIndex: 989
{
	// Methods

	// RVA: 0x21E585C Offset: 0x21E585C VA: 0x21E585C
	public void .ctor() { }

	// RVA: 0x21E5FBC Offset: 0x21E5FBC VA: 0x21E5FBC Slot: 5
	public int Compare(object x, object y) { }

	// RVA: 0x21E6048 Offset: 0x21E6048 VA: 0x21E6048 Slot: 4
	public int Compare(int ix, int iy) { }
}

// Namespace: 
internal class MonoEnumInfo.LongComparer : IComparer<long>, IComparer // TypeDefIndex: 990
{
	// Methods

	// RVA: 0x21E5860 Offset: 0x21E5860 VA: 0x21E5860
	public void .ctor() { }

	// RVA: 0x21E6064 Offset: 0x21E6064 VA: 0x21E6064 Slot: 5
	public int Compare(object x, object y) { }

	// RVA: 0x21E60F0 Offset: 0x21E60F0 VA: 0x21E60F0 Slot: 4
	public int Compare(long ix, long iy) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAC90 Offset: 0xBCAC90 VA: 0xBCAC90
public static class Environment // TypeDefIndex: 991
{
	// Fields
	private const int mono_corlib_version = 82;
	private static OperatingSystem os; // 0x0

	// Properties
	public static bool SocketSecurityEnabled { get; }
	public static bool UnityWebSecurityEnabled { get; }
	public static string NewLine { get; }
	internal static PlatformID Platform { get; }
	public static OperatingSystem OSVersion { get; }
	public static int TickCount { get; }
	internal static bool IsRunningOnWindows { get; }

	// Methods

	// RVA: 0x23B2F84 Offset: 0x23B2F84 VA: 0x23B2F84
	public static bool get_SocketSecurityEnabled() { }

	// RVA: 0x23B2F88 Offset: 0x23B2F88 VA: 0x23B2F88
	public static bool get_UnityWebSecurityEnabled() { }

	// RVA: 0x23AD03C Offset: 0x23AD03C VA: 0x23AD03C
	public static string get_NewLine() { }

	// RVA: 0x23B2F8C Offset: 0x23B2F8C VA: 0x23B2F8C
	internal static PlatformID get_Platform() { }

	// RVA: 0x23B2F90 Offset: 0x23B2F90 VA: 0x23B2F90
	internal static string GetOSVersionString() { }

	// RVA: 0x23B2F94 Offset: 0x23B2F94 VA: 0x23B2F94
	public static OperatingSystem get_OSVersion() { }

	// RVA: 0x23B3048 Offset: 0x23B3048 VA: 0x23B3048
	public static int get_TickCount() { }

	// RVA: 0x23B304C Offset: 0x23B304C VA: 0x23B304C
	internal static string internalGetEnvironmentVariable(string variable) { }

	// RVA: 0x23B3050 Offset: 0x23B3050 VA: 0x23B3050
	public static string GetEnvironmentVariable(string variable) { }

	// RVA: 0x23B3054 Offset: 0x23B3054 VA: 0x23B3054
	public static IDictionary GetEnvironmentVariables() { }

	// RVA: 0x23B3148 Offset: 0x23B3148 VA: 0x23B3148
	private static string GetWindowsFolderPath(int folder) { }

	// RVA: 0x23B314C Offset: 0x23B314C VA: 0x23B314C
	public static string GetFolderPath(Environment.SpecialFolder folder) { }

	// RVA: 0x23B3440 Offset: 0x23B3440 VA: 0x23B3440
	private static string ReadXdgUserDir(string config_dir, string home_dir, string key, string fallback) { }

	// RVA: 0x23B31A4 Offset: 0x23B31A4 VA: 0x23B31A4
	internal static string InternalGetFolderPath(Environment.SpecialFolder folder) { }

	// RVA: 0x23B3188 Offset: 0x23B3188 VA: 0x23B3188
	internal static bool get_IsRunningOnWindows() { }

	// RVA: 0x23B3144 Offset: 0x23B3144 VA: 0x23B3144
	private static string[] GetEnvironmentVariableNames() { }

	// RVA: 0x23B3918 Offset: 0x23B3918 VA: 0x23B3918
	internal static string GetMachineConfigPath() { }

	// RVA: 0x23B3914 Offset: 0x23B3914 VA: 0x23B3914
	internal static string internalGetHome() { }
}

// Namespace: 
[ComVisibleAttribute] // RVA: 0xBCACA4 Offset: 0xBCACA4 VA: 0xBCACA4
public enum Environment.SpecialFolder // TypeDefIndex: 992
{
	// Fields
	public int value__; // 0x0
	public const Environment.SpecialFolder MyDocuments = 5;
	public const Environment.SpecialFolder Desktop = 0;
	public const Environment.SpecialFolder MyComputer = 17;
	public const Environment.SpecialFolder Programs = 2;
	public const Environment.SpecialFolder Personal = 5;
	public const Environment.SpecialFolder Favorites = 6;
	public const Environment.SpecialFolder Startup = 7;
	public const Environment.SpecialFolder Recent = 8;
	public const Environment.SpecialFolder SendTo = 9;
	public const Environment.SpecialFolder StartMenu = 11;
	public const Environment.SpecialFolder MyMusic = 13;
	public const Environment.SpecialFolder DesktopDirectory = 16;
	public const Environment.SpecialFolder Templates = 21;
	public const Environment.SpecialFolder ApplicationData = 26;
	public const Environment.SpecialFolder LocalApplicationData = 28;
	public const Environment.SpecialFolder InternetCache = 32;
	public const Environment.SpecialFolder Cookies = 33;
	public const Environment.SpecialFolder History = 34;
	public const Environment.SpecialFolder CommonApplicationData = 35;
	public const Environment.SpecialFolder System = 37;
	public const Environment.SpecialFolder ProgramFiles = 38;
	public const Environment.SpecialFolder MyPictures = 39;
	public const Environment.SpecialFolder CommonProgramFiles = 43;
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCACB8 Offset: 0xBCACB8 VA: 0xBCACB8
[Serializable]
public class EventArgs // TypeDefIndex: 993
{
	// Fields
	public static readonly EventArgs Empty; // 0x0

	// Methods

	// RVA: 0x23B391C Offset: 0x23B391C VA: 0x23B391C
	public void .ctor() { }

	// RVA: 0x23B3924 Offset: 0x23B3924 VA: 0x23B3924
	private static void .cctor() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCACCC Offset: 0xBCACCC VA: 0xBCACCC
[Serializable]
public sealed class ExecutionEngineException : SystemException // TypeDefIndex: 994
{
	// Methods

	// RVA: 0x23B519C Offset: 0x23B519C VA: 0x23B519C
	public void .ctor() { }

	// RVA: 0x23B51FC Offset: 0x23B51FC VA: 0x23B51FC
	public void .ctor(string message) { }

	// RVA: 0x23B5204 Offset: 0x23B5204 VA: 0x23B5204
	internal void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCACE0 Offset: 0xBCACE0 VA: 0xBCACE0
[Serializable]
public class FieldAccessException : MemberAccessException // TypeDefIndex: 995
{
	// Methods

	// RVA: 0x23B520C Offset: 0x23B520C VA: 0x23B520C
	public void .ctor() { }

	// RVA: 0x23B527C Offset: 0x23B527C VA: 0x23B527C
	public void .ctor(string message) { }

	// RVA: 0x23B52AC Offset: 0x23B52AC VA: 0x23B52AC
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCACF4 Offset: 0xBCACF4 VA: 0xBCACF4
[AttributeUsageAttribute] // RVA: 0xBCACF4 Offset: 0xBCACF4 VA: 0xBCACF4
[Serializable]
public class FlagsAttribute : Attribute // TypeDefIndex: 996
{
	// Methods

	// RVA: 0x23B52B4 Offset: 0x23B52B4 VA: 0x23B52B4
	public void .ctor() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAD48 Offset: 0xBCAD48 VA: 0xBCAD48
[Serializable]
public class FormatException : SystemException // TypeDefIndex: 997
{
	// Fields
	private const int Result = -2146233033;

	// Methods

	// RVA: 0x23AEB44 Offset: 0x23AEB44 VA: 0x23AEB44
	public void .ctor() { }

	// RVA: 0x23A7A4C Offset: 0x23A7A4C VA: 0x23A7A4C
	public void .ctor(string message) { }

	// RVA: 0x23B52BC Offset: 0x23B52BC VA: 0x23B52BC
	public void .ctor(string message, Exception innerException) { }

	// RVA: 0x23B52EC Offset: 0x23B52EC VA: 0x23B52EC
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
public static class GC // TypeDefIndex: 998
{
	// Properties
	public static int MaxGeneration { get; }

	// Methods

	// RVA: 0x23B52F4 Offset: 0x23B52F4 VA: 0x23B52F4
	public static int get_MaxGeneration() { }

	// RVA: 0x23B52F8 Offset: 0x23B52F8 VA: 0x23B52F8
	private static void InternalCollect(int generation) { }

	// RVA: 0x23B52FC Offset: 0x23B52FC VA: 0x23B52FC
	public static void Collect() { }

	// RVA: 0x23B5310 Offset: 0x23B5310 VA: 0x23B5310
	public static long GetTotalMemory(bool forceFullCollection) { }

	[ReliabilityContractAttribute] // RVA: 0xBCECB0 Offset: 0xBCECB0 VA: 0xBCECB0
	// RVA: 0x23B5318 Offset: 0x23B5318 VA: 0x23B5318
	public static void KeepAlive(object obj) { }

	[ReliabilityContractAttribute] // RVA: 0xBCECC8 Offset: 0xBCECC8 VA: 0xBCECC8
	// RVA: 0x23B531C Offset: 0x23B531C VA: 0x23B531C
	public static void SuppressFinalize(object obj) { }

	// RVA: 0x23B5320 Offset: 0x23B5320 VA: 0x23B5320
	public static void WaitForPendingFinalizers() { }

	[ReliabilityContractAttribute] // RVA: 0xBCECE0 Offset: 0xBCECE0 VA: 0xBCECE0
	// RVA: 0x23B5324 Offset: 0x23B5324 VA: 0x23B5324
	public static int CollectionCount(int generation) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAD5C Offset: 0xBCAD5C VA: 0xBCAD5C
[Serializable]
public struct Guid : IFormattable, IComparable, IComparable<Guid>, IEquatable<Guid> // TypeDefIndex: 999
{
	// Fields
	private int _a; // 0x0
	private short _b; // 0x4
	private short _c; // 0x6
	private byte _d; // 0x8
	private byte _e; // 0x9
	private byte _f; // 0xA
	private byte _g; // 0xB
	private byte _h; // 0xC
	private byte _i; // 0xD
	private byte _j; // 0xE
	private byte _k; // 0xF
	public static readonly Guid Empty; // 0x0
	private static object _rngAccess; // 0x10
	private static RandomNumberGenerator _rng; // 0x18
	private static RandomNumberGenerator _fastRng; // 0x20

	// Methods

	// RVA: 0xD694F4 Offset: 0xD694F4 VA: 0xD694F4
	public void .ctor(byte[] b) { }

	// RVA: 0xD694FC Offset: 0xD694FC VA: 0xD694FC
	public void .ctor(string g) { }

	// RVA: 0xD69504 Offset: 0xD69504 VA: 0xD69504
	public void .ctor(int a, short b, short c, byte[] d) { }

	// RVA: 0xD6950C Offset: 0xD6950C VA: 0xD6950C
	public void .ctor(int a, short b, short c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k) { }

	[CLSCompliantAttribute] // RVA: 0xBCECF8 Offset: 0xBCECF8 VA: 0xBCECF8
	// RVA: 0xD6954C Offset: 0xD6954C VA: 0xD6954C
	public void .ctor(uint a, ushort b, ushort c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k) { }

	// RVA: 0x23BF870 Offset: 0x23BF870 VA: 0x23BF870
	private static void .cctor() { }

	// RVA: 0x23BF48C Offset: 0x23BF48C VA: 0x23BF48C
	private static void CheckNull(object o) { }

	// RVA: 0x23BF960 Offset: 0x23BF960 VA: 0x23BF960
	private static void CheckLength(byte[] o, int l) { }

	// RVA: 0x23BF33C Offset: 0x23BF33C VA: 0x23BF33C
	private static void CheckArray(byte[] o, int l) { }

	// RVA: 0x23BFA70 Offset: 0x23BFA70 VA: 0x23BFA70
	private static int Compare(int x, int y) { }

	// RVA: 0xD6958C Offset: 0xD6958C VA: 0xD6958C Slot: 5
	public int CompareTo(object value) { }

	// RVA: 0xD69594 Offset: 0xD69594 VA: 0xD69594 Slot: 0
	public override bool Equals(object o) { }

	// RVA: 0xD6959C Offset: 0xD6959C VA: 0xD6959C Slot: 6
	public int CompareTo(Guid value) { }

	// RVA: 0xD695A4 Offset: 0xD695A4 VA: 0xD695A4 Slot: 7
	public bool Equals(Guid g) { }

	// RVA: 0xD695C4 Offset: 0xD695C4 VA: 0xD695C4 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x23BFF48 Offset: 0x23BFF48 VA: 0x23BFF48
	private static char ToHex(int b) { }

	// RVA: 0x23BFF60 Offset: 0x23BFF60 VA: 0x23BFF60
	public static Guid NewGuid() { }

	// RVA: 0x23C011C Offset: 0x23C011C VA: 0x23C011C
	internal static byte[] FastNewGuidArray() { }

	// RVA: 0x23C039C Offset: 0x23C039C VA: 0x23C039C
	private static void AppendInt(StringBuilder builder, int value) { }

	// RVA: 0x23C058C Offset: 0x23C058C VA: 0x23C058C
	private static void AppendShort(StringBuilder builder, short value) { }

	// RVA: 0x23C06C0 Offset: 0x23C06C0 VA: 0x23C06C0
	private static void AppendByte(StringBuilder builder, byte value) { }

	// RVA: 0xD695CC Offset: 0xD695CC VA: 0xD695CC
	private string BaseToString(bool h, bool p, bool b) { }

	// RVA: 0xD695E0 Offset: 0xD695E0 VA: 0xD695E0 Slot: 3
	public override string ToString() { }

	// RVA: 0xD695F4 Offset: 0xD695F4 VA: 0xD695F4
	public string ToString(string format) { }

	// RVA: 0xD695FC Offset: 0xD695FC VA: 0xD695FC Slot: 4
	public string ToString(string format, IFormatProvider provider) { }

	// RVA: 0x23C0C40 Offset: 0x23C0C40 VA: 0x23C0C40
	public static bool op_Equality(Guid a, Guid b) { }
}

// Namespace: 
internal class Guid.GuidParser // TypeDefIndex: 1000
{
	// Fields
	private string _src; // 0x10
	private int _length; // 0x18
	private int _cur; // 0x1C

	// Methods

	// RVA: 0x23BF528 Offset: 0x23BF528 VA: 0x23BF528
	public void .ctor(string src) { }

	// RVA: 0x23C0C74 Offset: 0x23C0C74 VA: 0x23C0C74
	private void Reset() { }

	// RVA: 0x23C0CB4 Offset: 0x23C0CB4 VA: 0x23C0CB4
	private bool AtEnd() { }

	// RVA: 0x23C0CC4 Offset: 0x23C0CC4 VA: 0x23C0CC4
	private void ThrowFormatException() { }

	// RVA: 0x23C0D48 Offset: 0x23C0D48 VA: 0x23C0D48
	private ulong ParseHex(int length, bool strictLength) { }

	// RVA: 0x23C0E80 Offset: 0x23C0E80 VA: 0x23C0E80
	private bool ParseOptChar(char c) { }

	// RVA: 0x23C0EF8 Offset: 0x23C0EF8 VA: 0x23C0EF8
	private void ParseChar(char c) { }

	// RVA: 0x23C0F14 Offset: 0x23C0F14 VA: 0x23C0F14
	private Guid ParseGuid1() { }

	// RVA: 0x23C1160 Offset: 0x23C1160 VA: 0x23C1160
	private void ParseHexPrefix() { }

	// RVA: 0x23C119C Offset: 0x23C119C VA: 0x23C119C
	private Guid ParseGuid2() { }

	// RVA: 0x23BF558 Offset: 0x23BF558 VA: 0x23BF558
	public Guid Parse() { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAD70 Offset: 0xBCAD70 VA: 0xBCAD70
public interface ICustomFormatter // TypeDefIndex: 1001
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract string Format(string format, object arg, IFormatProvider formatProvider);
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAD84 Offset: 0xBCAD84 VA: 0xBCAD84
public interface IFormatProvider // TypeDefIndex: 1002
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract object GetFormat(Type formatType);
}

// Namespace: System
public interface IServiceProvider // TypeDefIndex: 1003
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract object GetService(Type serviceType);
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAD98 Offset: 0xBCAD98 VA: 0xBCAD98
[Serializable]
public sealed class IndexOutOfRangeException : SystemException // TypeDefIndex: 1004
{
	// Methods

	// RVA: 0x264F0F0 Offset: 0x264F0F0 VA: 0x264F0F0
	public void .ctor() { }

	// RVA: 0x264F150 Offset: 0x264F150 VA: 0x264F150
	public void .ctor(string message) { }

	// RVA: 0x264F158 Offset: 0x264F158 VA: 0x264F158
	public void .ctor(string message, Exception innerException) { }

	// RVA: 0x264F160 Offset: 0x264F160 VA: 0x264F160
	internal void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCADAC Offset: 0xBCADAC VA: 0xBCADAC
[Serializable]
public class InvalidCastException : SystemException // TypeDefIndex: 1005
{
	// Fields
	private const int Result = -2147467262;

	// Methods

	// RVA: 0x21E1EF0 Offset: 0x21E1EF0 VA: 0x21E1EF0
	public void .ctor() { }

	// RVA: 0x21E1F64 Offset: 0x21E1F64 VA: 0x21E1F64
	public void .ctor(string message) { }

	// RVA: 0x21E1F98 Offset: 0x21E1F98 VA: 0x21E1F98
	public void .ctor(string message, Exception innerException) { }

	// RVA: 0x21E1FCC Offset: 0x21E1FCC VA: 0x21E1FCC
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCADC0 Offset: 0xBCADC0 VA: 0xBCADC0
[Serializable]
public class InvalidOperationException : SystemException // TypeDefIndex: 1006
{
	// Fields
	private const int Result = -2146233079;

	// Methods

	// RVA: 0x21E1FD4 Offset: 0x21E1FD4 VA: 0x21E1FD4
	public void .ctor() { }

	// RVA: 0x21E2048 Offset: 0x21E2048 VA: 0x21E2048
	public void .ctor(string message) { }

	// RVA: 0x21E207C Offset: 0x21E207C VA: 0x21E207C
	public void .ctor(string message, Exception innerException) { }

	// RVA: 0x21E20B0 Offset: 0x21E20B0 VA: 0x21E20B0
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCADD4 Offset: 0xBCADD4 VA: 0xBCADD4
[Serializable]
public enum LoaderOptimization // TypeDefIndex: 1007
{
	// Fields
	public int value__; // 0x0
	public const LoaderOptimization NotSpecified = 0;
	public const LoaderOptimization SingleDomain = 1;
	public const LoaderOptimization MultiDomain = 2;
	public const LoaderOptimization MultiDomainHost = 3;
	[ObsoleteAttribute] // RVA: 0xBCB7BC Offset: 0xBCB7BC VA: 0xBCB7BC
	public const LoaderOptimization DomainMask = 3;
	[ObsoleteAttribute] // RVA: 0xBCB7CC Offset: 0xBCB7CC VA: 0xBCB7CC
	public const LoaderOptimization DisallowBindings = 4;
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCADE8 Offset: 0xBCADE8 VA: 0xBCADE8
public sealed class LocalDataStoreSlot // TypeDefIndex: 1008
{
	// Fields
	internal int slot; // 0x10
	internal bool thread_local; // 0x14
	private static object lock_obj; // 0x0
	private static bool[] slot_bitmap_thread; // 0x8
	private static bool[] slot_bitmap_context; // 0x10

	// Methods

	// RVA: 0x21E20B8 Offset: 0x21E20B8 VA: 0x21E20B8
	internal void .ctor(bool in_thread) { }

	// RVA: 0x21E2384 Offset: 0x21E2384 VA: 0x21E2384
	private static void .cctor() { }

	// RVA: 0x21E23E4 Offset: 0x21E23E4 VA: 0x21E23E4 Slot: 1
	protected override void Finalize() { }
}

// Namespace: System
public static class Math // TypeDefIndex: 1009
{
	// Methods

	// RVA: 0x21E27A0 Offset: 0x21E27A0 VA: 0x21E27A0
	public static double Abs(double value) { }

	// RVA: 0x21E27B0 Offset: 0x21E27B0 VA: 0x21E27B0
	public static float Abs(float value) { }

	// RVA: 0x21E27C0 Offset: 0x21E27C0 VA: 0x21E27C0
	public static int Abs(int value) { }

	// RVA: 0x21E2868 Offset: 0x21E2868 VA: 0x21E2868
	public static long Abs(long value) { }

	// RVA: 0x21E2910 Offset: 0x21E2910 VA: 0x21E2910
	public static double Ceiling(double a) { }

	// RVA: 0x21E2928 Offset: 0x21E2928 VA: 0x21E2928
	public static double Floor(double d) { }

	// RVA: 0x21E2930 Offset: 0x21E2930 VA: 0x21E2930
	public static double Log(double a, double newBase) { }

	[ReliabilityContractAttribute] // RVA: 0xBCED0C Offset: 0xBCED0C VA: 0xBCED0C
	// RVA: 0x21E296C Offset: 0x21E296C VA: 0x21E296C
	public static byte Max(byte val1, byte val2) { }

	[ReliabilityContractAttribute] // RVA: 0xBCED24 Offset: 0xBCED24 VA: 0xBCED24
	// RVA: 0x21E297C Offset: 0x21E297C VA: 0x21E297C
	public static float Max(float val1, float val2) { }

	[ReliabilityContractAttribute] // RVA: 0xBCED3C Offset: 0xBCED3C VA: 0xBCED3C
	// RVA: 0x21E29CC Offset: 0x21E29CC VA: 0x21E29CC
	public static int Max(int val1, int val2) { }

	[ReliabilityContractAttribute] // RVA: 0xBCED54 Offset: 0xBCED54 VA: 0xBCED54
	// RVA: 0x21E29D8 Offset: 0x21E29D8 VA: 0x21E29D8
	public static long Max(long val1, long val2) { }

	[ReliabilityContractAttribute] // RVA: 0xBCED6C Offset: 0xBCED6C VA: 0xBCED6C
	// RVA: 0x21E29E4 Offset: 0x21E29E4 VA: 0x21E29E4
	public static float Min(float val1, float val2) { }

	[ReliabilityContractAttribute] // RVA: 0xBCED84 Offset: 0xBCED84 VA: 0xBCED84
	// RVA: 0x21E2A34 Offset: 0x21E2A34 VA: 0x21E2A34
	public static int Min(int val1, int val2) { }

	[ReliabilityContractAttribute] // RVA: 0xBCED9C Offset: 0xBCED9C VA: 0xBCED9C
	// RVA: 0x21E2A40 Offset: 0x21E2A40 VA: 0x21E2A40
	public static long Min(long val1, long val2) { }

	// RVA: 0x21E2A4C Offset: 0x21E2A4C VA: 0x21E2A4C
	public static Decimal Round(Decimal d) { }

	// RVA: 0x21E2CF0 Offset: 0x21E2CF0 VA: 0x21E2CF0
	public static double Round(double a) { }

	// RVA: 0x21E2D70 Offset: 0x21E2D70 VA: 0x21E2D70
	public static double Round(double value, MidpointRounding mode) { }

	// RVA: 0x21E2F10 Offset: 0x21E2F10 VA: 0x21E2F10
	public static double Truncate(double d) { }

	// RVA: 0x21E2F2C Offset: 0x21E2F2C VA: 0x21E2F2C
	public static Decimal Floor(Decimal d) { }

	// RVA: 0x21E2FA4 Offset: 0x21E2FA4 VA: 0x21E2FA4
	public static double Sin(double a) { }

	// RVA: 0x21E2FA8 Offset: 0x21E2FA8 VA: 0x21E2FA8
	public static double Cos(double d) { }

	// RVA: 0x21E2FAC Offset: 0x21E2FAC VA: 0x21E2FAC
	public static double Tan(double a) { }

	// RVA: 0x21E2FB0 Offset: 0x21E2FB0 VA: 0x21E2FB0
	public static double Acos(double d) { }

	// RVA: 0x21E2FB4 Offset: 0x21E2FB4 VA: 0x21E2FB4
	public static double Asin(double d) { }

	// RVA: 0x21E2FB8 Offset: 0x21E2FB8 VA: 0x21E2FB8
	public static double Atan(double d) { }

	// RVA: 0x21E2FBC Offset: 0x21E2FBC VA: 0x21E2FBC
	public static double Atan2(double y, double x) { }

	// RVA: 0x21E2FC0 Offset: 0x21E2FC0 VA: 0x21E2FC0
	public static double Exp(double d) { }

	// RVA: 0x21E2FC4 Offset: 0x21E2FC4 VA: 0x21E2FC4
	public static double Log(double d) { }

	// RVA: 0x21E2FC8 Offset: 0x21E2FC8 VA: 0x21E2FC8
	public static double Log10(double d) { }

	// RVA: 0x21E2FCC Offset: 0x21E2FCC VA: 0x21E2FCC
	public static double Pow(double x, double y) { }

	[ReliabilityContractAttribute] // RVA: 0xBCEDB4 Offset: 0xBCEDB4 VA: 0xBCEDB4
	// RVA: 0x21E2FD0 Offset: 0x21E2FD0 VA: 0x21E2FD0
	public static double Sqrt(double d) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCADFC Offset: 0xBCADFC VA: 0xBCADFC
[Serializable]
public class MemberAccessException : SystemException // TypeDefIndex: 1010
{
	// Methods

	// RVA: 0x21E2FE8 Offset: 0x21E2FE8 VA: 0x21E2FE8
	public void .ctor() { }

	// RVA: 0x21E305C Offset: 0x21E305C VA: 0x21E305C
	public void .ctor(string message) { }

	// RVA: 0x21E3090 Offset: 0x21E3090 VA: 0x21E3090
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAE10 Offset: 0xBCAE10 VA: 0xBCAE10
[Serializable]
public class MethodAccessException : MemberAccessException // TypeDefIndex: 1011
{
	// Fields
	private const int Result = -2146233072;

	// Methods

	// RVA: 0x21E3098 Offset: 0x21E3098 VA: 0x21E3098
	public void .ctor() { }

	// RVA: 0x21E3124 Offset: 0x21E3124 VA: 0x21E3124
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System
[ComVisibleAttribute] // RVA: 0xBCAE24 Offset: 0xBCAE24 VA: 0xBCAE24
public enum MidpointRounding // TypeDefIndex: 1012
{
	// Fields
	public int value__; // 0x0
	public const MidpointRounding ToEven = 0;
	public const MidpointRounding AwayFromZero = 1;
}

// Namespace: System
