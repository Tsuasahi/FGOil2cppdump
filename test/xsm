	// RVA: 0x1C9EFB0 Offset: 0x1C9EFB0 VA: 0x1C9EFB0
	private void requestRandomMissionCancel(int missionId) { }

	// RVA: 0x1C9F074 Offset: 0x1C9F074 VA: 0x1C9F074
	private void randomMissionCancelCallback(string result) { }

	// RVA: 0x1C9F190 Offset: 0x1C9F190 VA: 0x1C9F190
	private void CheckItemListNum() { }

	// RVA: 0x1C9F36C Offset: 0x1C9F36C VA: 0x1C9F36C
	private static void .cctor() { }
}

// Namespace: 
public enum EventRandomMissionListViewManager.InitMode // TypeDefIndex: 9788
{
	// Fields
	public int value__; // 0x0
	public const EventRandomMissionListViewManager.InitMode NONE = 0;
	public const EventRandomMissionListViewManager.InitMode INTO = 1;
	public const EventRandomMissionListViewManager.InitMode VALID = 2;
	public const EventRandomMissionListViewManager.InitMode INPUT = 3;
	public const EventRandomMissionListViewManager.InitMode ENTER = 4;
	public const EventRandomMissionListViewManager.InitMode EXIT = 5;
	public const EventRandomMissionListViewManager.InitMode MODIFY = 6;
}

// Namespace: 
public enum EventRandomMissionListViewManager.FilterStatus // TypeDefIndex: 9789
{
	// Fields
	public int value__; // 0x0
	public const EventRandomMissionListViewManager.FilterStatus INIT = 0;
	public const EventRandomMissionListViewManager.FilterStatus CLEAR = 1;
	public const EventRandomMissionListViewManager.FilterStatus PROGRESS = 2;
	public const EventRandomMissionListViewManager.FilterStatus NOTOPEN = 3;
	public const EventRandomMissionListViewManager.FilterStatus ACHIVE = 4;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB0A90 Offset: 0xCB0A90 VA: 0xCB0A90
private sealed class EventRandomMissionListViewManager.<ShowRejectDialog>c__AnonStorey0 // TypeDefIndex: 9790
{
	// Fields
	internal EventRandomMissionListViewItem item; // 0x10
	internal EventRandomMissionListViewManager $this; // 0x18

	// Methods

	// RVA: 0x1C9EFA8 Offset: 0x1C9EFA8 VA: 0x1C9EFA8
	public void .ctor() { }

	// RVA: 0x1C9F3E4 Offset: 0x1C9F3E4 VA: 0x1C9F3E4
	internal void <>m__0(bool isDecide) { }
}

// Namespace: 
public class EventRandomMissionListViewObject : MissionListViewObject // TypeDefIndex: 9791
{
	// Properties
	private EventRandomMissionListViewItemDraw EventRandomMissionItemDraw { get; }

	// Methods

	// RVA: 0x1C9F4B4 Offset: 0x1C9F4B4 VA: 0x1C9F4B4
	public void .ctor() { }

	// RVA: 0x1C9F4BC Offset: 0x1C9F4BC VA: 0x1C9F4BC
	private EventRandomMissionListViewItemDraw get_EventRandomMissionItemDraw() { }

	// RVA: 0x1C9F540 Offset: 0x1C9F540 VA: 0x1C9F540
	private void Update() { }

	// RVA: 0x1C9CCDC Offset: 0x1C9CCDC VA: 0x1C9CCDC
	public EventRandomMissionListViewItem GetItem() { }

	// RVA: 0x1C9F664 Offset: 0x1C9F664 VA: 0x1C9F664
	public void ModifyBoardImage() { }

	// RVA: 0x1C9E7A4 Offset: 0x1C9E7A4 VA: 0x1C9E7A4
	public void OnChangeAlphaAnim() { }

	// RVA: 0x1C9F6C0 Offset: 0x1C9F6C0 VA: 0x1C9F6C0
	public void OnClickRewardIcon() { }

	// RVA: 0x1C9F784 Offset: 0x1C9F784 VA: 0x1C9F784
	public void OnClickRejectButton() { }
}

// Namespace: 
public class EventRankingListViewItem : ListViewItem // TypeDefIndex: 9792
{
	// Fields
	protected EventRankingRoundItemInfo itemInfo; // 0x70
	private bool isGoal; // 0x78
	private bool isMostSupport; // 0x79
	private bool isGetReward; // 0x7A
	private bool isDispGetStamp; // 0x7B
	private int ranking; // 0x7C
	private bool isJoinTerm; // 0x80
	private int groupImageId; // 0x84
	private bool isPlayedGoal; // 0x88
	private GiftEntity[] giftEntityList; // 0x90

	// Properties
	public bool IsGoal { get; }
	public bool IsGetReward { get; }
	public bool IsMostSupport { get; }
	public int RewardItemId { get; }
	public string GroupName { get; }
	public int GroupId { get; }
	public int GroupImageId { get; }
	public long SupportPoint { get; }
	public bool IsDispRewardGet { get; }
	public int EventId { get; }
	public int Ranking { get; }
	public GiftEntity[] GiftList { get; }
	public bool IsJoinTerm { get; }
	public bool IsGoalScriptPlayed { get; }

	// Methods

	// RVA: 0x1C9F904 Offset: 0x1C9F904 VA: 0x1C9F904
	public void .ctor(EventRankingRoundItemInfo info, int ranking, bool isJoinTerm, bool isGetReward, int nowTerm) { }

	// RVA: 0x1C9FB78 Offset: 0x1C9FB78 VA: 0x1C9FB78 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x1C9FB90 Offset: 0x1C9FB90 VA: 0x1C9FB90
	public bool get_IsGoal() { }

	// RVA: 0x1C9FB98 Offset: 0x1C9FB98 VA: 0x1C9FB98
	public bool get_IsGetReward() { }

	// RVA: 0x1C9FBA0 Offset: 0x1C9FBA0 VA: 0x1C9FBA0
	public bool get_IsMostSupport() { }

	// RVA: 0x1C9FBA8 Offset: 0x1C9FBA8 VA: 0x1C9FBA8
	public int get_RewardItemId() { }

	// RVA: 0x1C9FBD4 Offset: 0x1C9FBD4 VA: 0x1C9FBD4
	public string get_GroupName() { }

	// RVA: 0x1C9FC00 Offset: 0x1C9FC00 VA: 0x1C9FC00
	public int get_GroupId() { }

	// RVA: 0x1C9FC2C Offset: 0x1C9FC2C VA: 0x1C9FC2C
	public int get_GroupImageId() { }

	// RVA: 0x1C9FC34 Offset: 0x1C9FC34 VA: 0x1C9FC34
	public long get_SupportPoint() { }

	// RVA: 0x1C9FC60 Offset: 0x1C9FC60 VA: 0x1C9FC60
	public bool get_IsDispRewardGet() { }

	// RVA: 0x1C9FC68 Offset: 0x1C9FC68 VA: 0x1C9FC68
	public int get_EventId() { }

	// RVA: 0x1C9FC94 Offset: 0x1C9FC94 VA: 0x1C9FC94
	public int get_Ranking() { }

	// RVA: 0x1C9FC9C Offset: 0x1C9FC9C VA: 0x1C9FC9C
	public GiftEntity[] get_GiftList() { }

	// RVA: 0x1C9FCA4 Offset: 0x1C9FCA4 VA: 0x1C9FCA4
	public bool get_IsJoinTerm() { }

	// RVA: 0x1C9FCAC Offset: 0x1C9FCAC VA: 0x1C9FCAC
	public bool get_IsGoalScriptPlayed() { }
}

// Namespace: 
public class EventRankingListViewItemDraw : BaseMonoBehaviour // TypeDefIndex: 9793
{
	// Fields
	public static readonly string GROUP_IMAGE_NAME; // 0x0
	public static readonly string GROUP_NAME_IMAGE_NAME; // 0x8
	public static readonly string BOARD_IMAGE_NAME; // 0x10
	public static readonly string REWARD_GET_IMAGE_NAME; // 0x18
	public static readonly string RANKING_IMAGE_NAME; // 0x20
	public static readonly string GOAL_IMAGE_NAME; // 0x28
	public static readonly string HIGHER_REWARD_IMAGE_NAME; // 0x30
	public static readonly string SUPPORT_TXT_IMAGE_NAME; // 0x38
	[SerializeField] // RVA: 0xCDAA9C Offset: 0xCDAA9C VA: 0xCDAA9C
	protected UISprite baseSprite; // 0x18
	[SerializeField] // RVA: 0xCDAAAC Offset: 0xCDAAAC VA: 0xCDAAAC
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xCDAABC Offset: 0xCDAABC VA: 0xCDAABC
	protected UISprite teamNameSprite; // 0x28
	[SerializeField] // RVA: 0xCDAACC Offset: 0xCDAACC VA: 0xCDAACC
	protected UISprite rankingSprite; // 0x30
	[SerializeField] // RVA: 0xCDAADC Offset: 0xCDAADC VA: 0xCDAADC
	protected ItemIconComponent itemIcon; // 0x38
	[SerializeField] // RVA: 0xCDAAEC Offset: 0xCDAAEC VA: 0xCDAAEC
	protected UILabel supportInfoLabel; // 0x40
	[SerializeField] // RVA: 0xCDAAFC Offset: 0xCDAAFC VA: 0xCDAAFC
	protected UISprite teamSprite; // 0x48
	[SerializeField] // RVA: 0xCDAB0C Offset: 0xCDAB0C VA: 0xCDAB0C
	protected GameObject rewardGetObj; // 0x50
	[SerializeField] // RVA: 0xCDAB1C Offset: 0xCDAB1C VA: 0xCDAB1C
	protected UISprite rewardGetSprite; // 0x58
	[SerializeField] // RVA: 0xCDAB2C Offset: 0xCDAB2C VA: 0xCDAB2C
	protected UISprite goalSprite; // 0x60
	[SerializeField] // RVA: 0xCDAB3C Offset: 0xCDAB3C VA: 0xCDAB3C
	protected UISprite supportTxtSprite; // 0x68
	[SerializeField] // RVA: 0xCDAB4C Offset: 0xCDAB4C VA: 0xCDAB4C
	protected UISprite higherRewardSprite; // 0x70
	private GiftEntity[] giftEntityList; // 0x78
	private EventRankingListViewObject listViewObject; // 0x80
	private bool isMultipleReward; // 0x88

	// Methods

	// RVA: 0x1C9FCB4 Offset: 0x1C9FCB4 VA: 0x1C9FCB4
	public void .ctor() { }

	// RVA: 0x1C9FCBC Offset: 0x1C9FCBC VA: 0x1C9FCBC
	public void SetListViewObject(EventRankingListViewObject listViewObject) { }

	// RVA: 0x1C9FCC4 Offset: 0x1C9FCC4 VA: 0x1C9FCC4
	public void SetItem(EventRankingListViewItem item, EventRankingListViewItemDraw.DispMode mode) { }

	// RVA: 0x1CA0C64 Offset: 0x1CA0C64 VA: 0x1CA0C64
	public void SetInput(EventRankingListViewItem item) { }

	// RVA: 0x1CA0C68 Offset: 0x1CA0C68 VA: 0x1CA0C68
	public void OnChangeAlphaAnim(EventRankingListViewItem item, EventRankingListViewItemDraw.DispMode mode, EventRankingListViewManager manager) { }

	// RVA: 0x1CA0D80 Offset: 0x1CA0D80 VA: 0x1CA0D80
	public void UpdateItem(EventRankingListViewItem item, EventRankingListViewItemDraw.DispMode mode, EventRankingListViewManager manager) { }

	// RVA: 0x1CA0DD0 Offset: 0x1CA0DD0 VA: 0x1CA0DD0
	private void SetRewardIconAlpha(float alpha) { }

	// RVA: 0x1CA0C70 Offset: 0x1CA0C70 VA: 0x1CA0C70
	private void ChangeNextRewardIcon(EventRankingListViewManager manager) { }

	// RVA: 0x1CA0E28 Offset: 0x1CA0E28 VA: 0x1CA0E28
	private static void .cctor() { }
}

// Namespace: 
public enum EventRankingListViewItemDraw.DispMode // TypeDefIndex: 9794
{
	// Fields
	public int value__; // 0x0
	public const EventRankingListViewItemDraw.DispMode INVISIBLE = 0;
	public const EventRankingListViewItemDraw.DispMode INVALID = 1;
	public const EventRankingListViewItemDraw.DispMode VALID = 2;
	public const EventRankingListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class EventRankingListViewManager : ListViewManager // TypeDefIndex: 9795
{
	// Fields
	private static readonly float ALPHA_ANIMATION_SPD; // 0x0
	private static readonly float ALPHA_ANIMATION_INTERVAL; // 0x4
	private static readonly int ALPHA_ANIM_COUNT_RESET_VAL; // 0x8
	private float alphaAnimNow; // 0x138
	private float alphaAnimTgt; // 0x13C
	private float alphaAnimTimeOld; // 0x140
	private int alphaAnimCnt; // 0x144
	protected EventRankingListViewManager.InitMode initMode; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xCDAB5C Offset: 0xCDAB5C VA: 0xCDAB5C
	[DebuggerBrowsableAttribute] // RVA: 0xCDAB5C Offset: 0xCDAB5C VA: 0xCDAB5C
	private Action callbackFunc2; // 0x150
	protected int callbackCount; // 0x158
	protected float listInDelay; // 0x15C
	[CompilerGeneratedAttribute] // RVA: 0xCDAB98 Offset: 0xCDAB98 VA: 0xCDAB98
	private static Comparison<EventRankingRoundItemInfo> <>f__am$cache0; // 0x10

	// Properties
	public List<EventRankingListViewObject> ObjectList { get; }
	public List<EventRankingListViewObject> ClippingObjectList { get; }
	public float AlphaAnimNow { get; }

	// Methods

	// RVA: 0x1CA0F14 Offset: 0x1CA0F14 VA: 0x1CA0F14
	public void .ctor() { }

	// RVA: 0x1CA0F1C Offset: 0x1CA0F1C VA: 0x1CA0F1C
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x1CA100C Offset: 0x1CA100C VA: 0x1CA100C
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x1CA10FC Offset: 0x1CA10FC VA: 0x1CA10FC
	private void Update() { }

	// RVA: 0x1CA129C Offset: 0x1CA129C VA: 0x1CA129C
	public List<EventRankingListViewObject> get_ObjectList() { }

	// RVA: 0x1CA1410 Offset: 0x1CA1410 VA: 0x1CA1410
	public List<EventRankingListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1CA1648 Offset: 0x1CA1648 VA: 0x1CA1648
	public void CreateList(int eventId, int round, int mostSupportGroupId, long[] userSupportPoints) { }

	// RVA: 0x1CA1E30 Offset: 0x1CA1E30 VA: 0x1CA1E30
	private int GoalTimeSort(EventRankingRoundItemInfo x, EventRankingRoundItemInfo y) { }

	// RVA: 0x1CA1EA8 Offset: 0x1CA1EA8 VA: 0x1CA1EA8
	public EventRankingListViewItem GetItem(int index) { }

	// RVA: 0x1CA1F50 Offset: 0x1CA1F50 VA: 0x1CA1F50 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1CA208C Offset: 0x1CA208C VA: 0x1CA208C
	public void SetMode(EventRankingListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1CA21E8 Offset: 0x1CA21E8 VA: 0x1CA21E8
	public void SetMode(EventRankingListViewManager.InitMode mode, float delay, Action callback) { }

	// RVA: 0x1CA2094 Offset: 0x1CA2094 VA: 0x1CA2094
	public void SetMode(EventRankingListViewManager.InitMode mode) { }

	// RVA: 0x1CA21F4 Offset: 0x1CA21F4 VA: 0x1CA21F4
	protected void RequestListObject(EventRankingListViewObject.InitMode mode, float delay = 0) { }

	// RVA: 0x1CA2430 Offset: 0x1CA2430 VA: 0x1CA2430
	protected void RequestInto() { }

	// RVA: 0x1CA2684 Offset: 0x1CA2684 VA: 0x1CA2684
	protected void OnMoveEnd() { }

	// RVA: 0x1CA27D0 Offset: 0x1CA27D0 VA: 0x1CA27D0
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x1CA2AE0 Offset: 0x1CA2AE0 VA: 0x1CA2AE0
	public void CloseItemDetail(bool isDecide) { }

	// RVA: 0x1CA2B6C Offset: 0x1CA2B6C VA: 0x1CA2B6C
	private void CloseSvtDetail(bool isDecide) { }

	// RVA: 0x1CA1124 Offset: 0x1CA1124 VA: 0x1CA1124
	private void UpdateAnim() { }

	// RVA: 0x1CA2CA4 Offset: 0x1CA2CA4 VA: 0x1CA2CA4
	private void ResetAlphaAnimTime() { }

	// RVA: 0x1CA0C54 Offset: 0x1CA0C54 VA: 0x1CA0C54
	public int GetAlphaAnimCnt(int length) { }

	// RVA: 0x1CA2BD0 Offset: 0x1CA2BD0 VA: 0x1CA2BD0
	private void OnChangeAlphaAnim() { }

	// RVA: 0x1CA0DC8 Offset: 0x1CA0DC8 VA: 0x1CA0DC8
	public float get_AlphaAnimNow() { }

	// RVA: 0x1CA2D84 Offset: 0x1CA2D84 VA: 0x1CA2D84
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D674 Offset: 0xD3D674 VA: 0xD3D674
	// RVA: 0x1CA2DFC Offset: 0x1CA2DFC VA: 0x1CA2DFC
	private static int <CreateList>m__0(EventRankingRoundItemInfo a, EventRankingRoundItemInfo b) { }
}

// Namespace: 
public enum EventRankingListViewManager.InitMode // TypeDefIndex: 9796
{
	// Fields
	public int value__; // 0x0
	public const EventRankingListViewManager.InitMode NONE = 0;
	public const EventRankingListViewManager.InitMode INTO = 1;
	public const EventRankingListViewManager.InitMode VALID = 2;
	public const EventRankingListViewManager.InitMode INPUT = 3;
	public const EventRankingListViewManager.InitMode ENTER = 4;
	public const EventRankingListViewManager.InitMode EXIT = 5;
	public const EventRankingListViewManager.InitMode MODIFY = 6;
}

// Namespace: 
public class EventRankingListViewObject : ListViewObject // TypeDefIndex: 9797
{
	// Fields
	protected EventRankingListViewObject.State state; // 0x6C
	protected EventRankingListViewItemDraw.DispMode dispMode; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xCDABA8 Offset: 0xCDABA8 VA: 0xCDABA8
	[DebuggerBrowsableAttribute] // RVA: 0xCDABA8 Offset: 0xCDABA8 VA: 0xCDABA8
	private Action callbackFunc; // 0x78
	protected EventRankingListViewItemDraw itemDraw; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x1CA2E44 Offset: 0x1CA2E44 VA: 0x1CA2E44
	public void .ctor() { }

	// RVA: 0x1CA2EAC Offset: 0x1CA2EAC VA: 0x1CA2EAC
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1CA2F98 Offset: 0x1CA2F98 VA: 0x1CA2F98
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1CA3084 Offset: 0x1CA3084 VA: 0x1CA3084
	protected void Awake() { }

	// RVA: 0x1CA3108 Offset: 0x1CA3108 VA: 0x1CA3108
	private void Update() { }

	// RVA: 0x1CA15C4 Offset: 0x1CA15C4 VA: 0x1CA15C4
	public EventRankingListViewItem GetItem() { }

	// RVA: 0x1CA324C Offset: 0x1CA324C VA: 0x1CA324C Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1CA327C Offset: 0x1CA327C VA: 0x1CA327C Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x1CA3274 Offset: 0x1CA3274 VA: 0x1CA3274
	protected void InitItem() { }

	// RVA: 0x1CA32A4 Offset: 0x1CA32A4 VA: 0x1CA32A4 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x1CA3354 Offset: 0x1CA3354 VA: 0x1CA3354
	public void Init(EventRankingListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1CA25F0 Offset: 0x1CA25F0 VA: 0x1CA25F0
	public void Init(EventRankingListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x1CA23A8 Offset: 0x1CA23A8 VA: 0x1CA23A8
	public void Init(EventRankingListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x1CA2008 Offset: 0x1CA2008 VA: 0x1CA2008
	public void Init(EventRankingListViewObject.InitMode initMode) { }

	// RVA: 0x1CA36C4 Offset: 0x1CA36C4 VA: 0x1CA36C4
	protected void SetupDisp() { }

	// RVA: 0x1CA355C Offset: 0x1CA355C VA: 0x1CA355C
	private void EventIntoStart(float delay) { }

	// RVA: 0x1CA3824 Offset: 0x1CA3824 VA: 0x1CA3824
	private void EventIntoMove() { }

	// RVA: 0x1CA39C4 Offset: 0x1CA39C4 VA: 0x1CA39C4
	private void EventIntoMove2() { }

	// RVA: 0x1CA3AB4 Offset: 0x1CA3AB4 VA: 0x1CA3AB4
	private void EventExitStart(float delay) { }

	// RVA: 0x1CA3C00 Offset: 0x1CA3C00 VA: 0x1CA3C00
	private void EventExitMove() { }

	// RVA: 0x1CA3E84 Offset: 0x1CA3E84 VA: 0x1CA3E84
	private void EventExitMove2() { }

	// RVA: 0x1CA3A8C Offset: 0x1CA3A8C VA: 0x1CA3A8C
	protected void EventMoveEnd() { }

	// RVA: 0x1CA2CD4 Offset: 0x1CA2CD4 VA: 0x1CA2CD4
	public void OnChangeAlphaAnim() { }

	// RVA: 0x1CA3F20 Offset: 0x1CA3F20 VA: 0x1CA3F20 Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum EventRankingListViewObject.InitMode // TypeDefIndex: 9798
{
	// Fields
	public int value__; // 0x0
	public const EventRankingListViewObject.InitMode INVISIBLE = 0;
	public const EventRankingListViewObject.InitMode INVALID = 1;
	public const EventRankingListViewObject.InitMode VALID = 2;
	public const EventRankingListViewObject.InitMode INPUT = 3;
	public const EventRankingListViewObject.InitMode INTO = 4;
}

// Namespace: 
protected enum EventRankingListViewObject.State // TypeDefIndex: 9799
{
	// Fields
	public int value__; // 0x0
	public const EventRankingListViewObject.State INIT = 0;
	public const EventRankingListViewObject.State IDLE = 1;
	public const EventRankingListViewObject.State MOVE = 2;
	public const EventRankingListViewObject.State INPUT = 3;
}

// Namespace: 
public class EventRankingRoundInfo : MonoBehaviour // TypeDefIndex: 9800
{
	// Fields
	private static readonly string SELECTED_SPRITE_NAME; // 0x0
	private static readonly string NON_SELECT_SPRITE_NAME; // 0x8
	[SerializeField] // RVA: 0xCDABE4 Offset: 0xCDABE4 VA: 0xCDABE4
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xCDABF4 Offset: 0xCDABF4 VA: 0xCDABF4
	protected UILabel roundLabel; // 0x20
	[SerializeField] // RVA: 0xCDAC04 Offset: 0xCDAC04 VA: 0xCDAC04
	protected UISprite roundSprite; // 0x28
	[SerializeField] // RVA: 0xCDAC14 Offset: 0xCDAC14 VA: 0xCDAC14
	protected GameObject maskObject; // 0x30
	private int roundNum; // 0x38
	private bool isSelect; // 0x3C
	public EventRankingRoundInfo.ClickFunc onClickFunc; // 0x40

	// Methods

	// RVA: 0x1CA3FF0 Offset: 0x1CA3FF0 VA: 0x1CA3FF0
	public void .ctor() { }

	// RVA: 0x1CA3FF8 Offset: 0x1CA3FF8 VA: 0x1CA3FF8
	public void SetRoundInfo(bool isOpen, int roundIndex, string roundName, EventRankingRoundInfo.ClickFunc callback) { }

	// RVA: 0x1CA40C4 Offset: 0x1CA40C4 VA: 0x1CA40C4
	public void SetSelectInfo(bool isSelect, Color color) { }

	// RVA: 0x1CA4210 Offset: 0x1CA4210 VA: 0x1CA4210
	public void OnClikcButton() { }

	// RVA: 0x1CA44D8 Offset: 0x1CA44D8 VA: 0x1CA44D8
	private static void .cctor() { }
}

// Namespace: 
public sealed class EventRankingRoundInfo.ClickFunc : MulticastDelegate // TypeDefIndex: 9801
{
	// Methods

	// RVA: 0x1CA454C Offset: 0x1CA454C VA: 0x1CA454C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1CA42AC Offset: 0x1CA42AC VA: 0x1CA42AC Slot: 11
	public virtual void Invoke(int num) { }

	// RVA: 0x1CA455C Offset: 0x1CA455C VA: 0x1CA455C Slot: 12
	public virtual IAsyncResult BeginInvoke(int num, AsyncCallback callback, object object) { }

	// RVA: 0x1CA45E8 Offset: 0x1CA45E8 VA: 0x1CA45E8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class EventRankingRoundItemInfo // TypeDefIndex: 9802
{
	// Fields
	public int eventId; // 0x10
	public int rewardItemId; // 0x14
	public string teamName; // 0x18
	public int groupId; // 0x20
	public int groupIconImageId; // 0x24
	public long supportPoint; // 0x28
	public long goalPoint; // 0x30
	public long nowPoint; // 0x38
	public long goalTime; // 0x40
	public int mostSupportGroupId; // 0x48
	public float goalRate; // 0x4C

	// Properties
	public bool IsGoal { get; }
	public bool IsMostSupport { get; }

	// Methods

	// RVA: 0x1CA1E28 Offset: 0x1CA1E28 VA: 0x1CA1E28
	public void .ctor() { }

	// RVA: 0x1C9FB54 Offset: 0x1C9FB54 VA: 0x1C9FB54
	public bool get_IsGoal() { }

	// RVA: 0x1C9FB64 Offset: 0x1C9FB64 VA: 0x1C9FB64
	public bool get_IsMostSupport() { }
}

// Namespace: 
public class EventPointReplaseRewardDialog : BaseDialog // TypeDefIndex: 9803
{
	// Fields
	protected static readonly int BANNER_RETRY_MAX; // 0x0
	protected static readonly Vector3 TITLE_BASE_POS; // 0x4
	protected static readonly Vector3 MESSAGE_BASE_POS; // 0x10
	protected static readonly int MESSAGE_BASE_SIZE_X; // 0x1C
	protected static readonly int MESSAGE_BASE_SIZE_Y; // 0x20
	protected static readonly Vector3 BUTTON_BASE_POS; // 0x24
	protected readonly int MESSAGE_FONT_SIZE; // 0x58
	[SerializeField] // RVA: 0xCDAC24 Offset: 0xCDAC24 VA: 0xCDAC24
	protected UILabel titleLabel; // 0x60
	[SerializeField] // RVA: 0xCDAC34 Offset: 0xCDAC34 VA: 0xCDAC34
	protected UILabel messageLabel; // 0x68
	[SerializeField] // RVA: 0xCDAC44 Offset: 0xCDAC44 VA: 0xCDAC44
	protected UILabel okBtnLabel; // 0x70
	protected EventPointReplaseRewardDialog.ClickDelegate clickFunc; // 0x78
	protected Action closeEndFunc; // 0x80
	protected bool isButtonEnable; // 0x88
	protected bool isInitPanelDepth; // 0x89
	protected int keepPanelDepth; // 0x8C

	// Methods

	// RVA: 0x1EC9B70 Offset: 0x1EC9B70 VA: 0x1EC9B70
	public void .ctor() { }

	// RVA: 0x1EC9BE8 Offset: 0x1EC9BE8 VA: 0x1EC9BE8
	public void Init() { }

	// RVA: 0x1EC6F64 Offset: 0x1EC6F64 VA: 0x1EC6F64
	public void Open(string title, string message, EventPointReplaseRewardDialog.ClickDelegate func, int panelDepth = -1, int maxLine = 0, int titleSize = 0, bool isLineDraw = False, bool canMaskTouchClose = False, int messageFontSize = 0) { }

	// RVA: 0x1EC9E60 Offset: 0x1EC9E60 VA: 0x1EC9E60
	protected void EndOpen() { }

	// RVA: 0x1EC75D0 Offset: 0x1EC75D0 VA: 0x1EC75D0
	public void Close() { }

	// RVA: 0x1EC9E6C Offset: 0x1EC9E6C VA: 0x1EC9E6C
	public void Close(Action callback) { }

	// RVA: 0x1EC9EF8 Offset: 0x1EC9EF8 VA: 0x1EC9EF8
	protected void EndClose() { }

	// RVA: 0x1EC9F34 Offset: 0x1EC9F34 VA: 0x1EC9F34
	public void OnClickOk() { }

	// RVA: 0x1EC9FC4 Offset: 0x1EC9FC4 VA: 0x1EC9FC4
	private static void .cctor() { }
}

// Namespace: 
public sealed class EventPointReplaseRewardDialog.ClickDelegate : MulticastDelegate // TypeDefIndex: 9804
{
	// Methods

	// RVA: 0x1C8C63C Offset: 0x1C8C63C VA: 0x1C8C63C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1C8C64C Offset: 0x1C8C64C VA: 0x1C8C64C Slot: 11
	public virtual void Invoke(bool isOk) { }

	// RVA: 0x1C8C878 Offset: 0x1C8C878 VA: 0x1C8C878 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isOk, AsyncCallback callback, object object) { }

	// RVA: 0x1C8C908 Offset: 0x1C8C908 VA: 0x1C8C908 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class EventPointRewardDialog : BaseDialog // TypeDefIndex: 9805
{
	// Fields
	[SerializeField] // RVA: 0xCDAC54 Offset: 0xCDAC54 VA: 0xCDAC54
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xCDAC64 Offset: 0xCDAC64 VA: 0xCDAC64
	private UILabel totalTitleLabel; // 0x60
	[SerializeField] // RVA: 0xCDAC74 Offset: 0xCDAC74 VA: 0xCDAC74
	private UILabel totalNumLabel; // 0x68
	[SerializeField] // RVA: 0xCDAC84 Offset: 0xCDAC84 VA: 0xCDAC84
	private UILabel nextTitleLabel; // 0x70
	[SerializeField] // RVA: 0xCDAC94 Offset: 0xCDAC94 VA: 0xCDAC94
	private UILabel nextNumLabel; // 0x78
	[SerializeField] // RVA: 0xCDACA4 Offset: 0xCDACA4 VA: 0xCDACA4
	private UILabel closeLabel; // 0x80
	[SerializeField] // RVA: 0xCDACB4 Offset: 0xCDACB4 VA: 0xCDACB4
	private UICommonButton closeButton; // 0x88
	[SerializeField] // RVA: 0xCDACC4 Offset: 0xCDACC4 VA: 0xCDACC4
	private BattleViewItemlistComponent itemWindow; // 0x90
	private EventPointRewardDialog.State state; // 0x98
	private Action callback; // 0xA0

	// Methods

	// RVA: 0x1C8C914 Offset: 0x1C8C914 VA: 0x1C8C914
	public void .ctor() { }

	// RVA: 0x1C8C97C Offset: 0x1C8C97C VA: 0x1C8C97C
	public void Init() { }

	// RVA: 0x1C8CAF8 Offset: 0x1C8CAF8 VA: 0x1C8CAF8
	public void SetData(BattleDropItem[] itemArray, string itemName, long totalCount, int addCount, long nextCount) { }

	// RVA: 0x1C8CE10 Offset: 0x1C8CE10 VA: 0x1C8CE10
	public void Open(Action callback) { }

	// RVA: 0x1C8CF74 Offset: 0x1C8CF74 VA: 0x1C8CF74
	private void EndOpen() { }

	// RVA: 0x1C8CF80 Offset: 0x1C8CF80 VA: 0x1C8CF80
	public void OnClickClose() { }

	// RVA: 0x1C8D010 Offset: 0x1C8D010 VA: 0x1C8D010
	private void OnItemClick(BattleDropItem dropItem) { }
}

// Namespace: 
private enum EventPointRewardDialog.State // TypeDefIndex: 9806
{
	// Fields
	public int value__; // 0x0
	public const EventPointRewardDialog.State INIT = 0;
	public const EventPointRewardDialog.State INPUT = 1;
	public const EventPointRewardDialog.State OPEN = 2;
}

// Namespace: 
public class EventPointRewardDialogControl : MonoBehaviour // TypeDefIndex: 9807
{
	// Fields
	[SerializeField] // RVA: 0xCDACD4 Offset: 0xCDACD4 VA: 0xCDACD4
	private string seName; // 0x18
	[SerializeField] // RVA: 0xCDACE4 Offset: 0xCDACE4 VA: 0xCDACE4
	private UISprite backSprite; // 0x20
	[SerializeField] // RVA: 0xCDACF4 Offset: 0xCDACF4 VA: 0xCDACF4
	private EventPointRewardDialog dialog; // 0x28

	// Methods

	// RVA: 0x1C8D014 Offset: 0x1C8D014 VA: 0x1C8D014
	public void .ctor() { }

	// RVA: 0x1C8D01C Offset: 0x1C8D01C VA: 0x1C8D01C
	public void Open(BattleDropItem[] itemArray, string itemName, long totalCount, int addCount, long nextCount, Action onFinishedDialog, bool enableBackground) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB0AA0 Offset: 0xCB0AA0 VA: 0xCB0AA0
private sealed class EventPointRewardDialogControl.<Open>c__AnonStorey0 // TypeDefIndex: 9808
{
	// Fields
	internal Action onFinishedDialog; // 0x10
	internal EventPointRewardDialogControl $this; // 0x18

	// Methods

	// RVA: 0x1C8D26C Offset: 0x1C8D26C VA: 0x1C8D26C
	public void .ctor() { }

	// RVA: 0x1C8D274 Offset: 0x1C8D274 VA: 0x1C8D274
	internal void <>m__0() { }

	// RVA: 0x1C8D350 Offset: 0x1C8D350 VA: 0x1C8D350
	internal void <>m__1() { }

	// RVA: 0x1C8D39C Offset: 0x1C8D39C VA: 0x1C8D39C
	internal void <>m__2() { }

	// RVA: 0x1C8D43C Offset: 0x1C8D43C VA: 0x1C8D43C
	internal void <>m__3() { }

	// RVA: 0x1C8D51C Offset: 0x1C8D51C VA: 0x1C8D51C
	internal void <>m__4() { }
}

// Namespace: 
public class EventRewardAnotherPayConfirmDialog : BaseDialog // TypeDefIndex: 9809
{
	// Fields
	private static readonly Vector3 CANCEL_BUTTON_BASE_POS; // 0x0
	private static readonly Vector3 CANCEL_BUTTON_CHOICES_POS; // 0xC
	private static readonly Vector3 CANCEL_BUTTON_PURCHASED_POS; // 0x18
	private static readonly Vector3 CANCEL_BUTTON_RESULT_POS; // 0x24
	private static readonly Vector3 DECIDE_BUTTON_BASE_POS; // 0x30
	private static readonly Vector3 DECIDE_BUTTON_PURCHASED_POS; // 0x3C
	private static readonly Vector2 CONFIRM_WINDOW_SIZE; // 0x48
	private static readonly Vector2 RESULT_WINDOW_SIZE; // 0x50
	private static readonly float SKILL_BASE_POS_Y; // 0x58
	private static readonly float SKILL_CHOICES_POS_Y; // 0x5C
	private static readonly float SKILL_PURCHASED_POS_Y; // 0x60
	private static readonly float SKILL_RESULT_POS_Y; // 0x64
	private static readonly float SKILL_RESULT_END_POS_Y; // 0x68
	private static readonly float ICON_BASE_POS_Y; // 0x6C
	private static readonly float ICON_CHOICES_POS_Y; // 0x70
	private static readonly float ICON_PURCHASED_POS_Y; // 0x74
	private static readonly float UPPER_LABEL_POS_Y; // 0x78
	private static readonly float UPPER_LABEL_CHOICES_POS_Y; // 0x7C
	private static readonly float WARN_LABEL_BASE_POS_Y; // 0x80
	private static readonly float WARN_LABEL_CHOICES_POS_Y; // 0x84
	private static readonly float WARN_LABEL_PURCHASED_POS_Y; // 0x88
	private static readonly float DOWNER_LABEL_POS_Y; // 0x8C
	private static readonly float DOWNER_LABEL_CHOICES_POS_Y; // 0x90
	private static readonly float DOWNER_LABEL_RESULT_POS_Y; // 0x94
	private static readonly float RESULT_LABEL_POS_Y; // 0x98
	private static readonly float RESULT_LABEL_PERIOD_POS_Y; // 0x9C
	private static readonly int DOWNER_LABEL_FONT_SIZE; // 0xA0
	private static readonly int DOWNER_LABEL_RESULT_FONT_SIZE; // 0xA4
	[SerializeField] // RVA: 0xCDAD04 Offset: 0xCDAD04 VA: 0xCDAD04
	private ItemIconComponent itemIcon; // 0x58
	[SerializeField] // RVA: 0xCDAD14 Offset: 0xCDAD14 VA: 0xCDAD14
	private UILabel titleLabel; // 0x60
	[SerializeField] // RVA: 0xCDAD24 Offset: 0xCDAD24 VA: 0xCDAD24
	private UILabel upperLabel; // 0x68
	[SerializeField] // RVA: 0xCDAD34 Offset: 0xCDAD34 VA: 0xCDAD34
	private UILabel downerLabel; // 0x70
	[SerializeField] // RVA: 0xCDAD44 Offset: 0xCDAD44 VA: 0xCDAD44
	private UILabel warnLabel; // 0x78
	[SerializeField] // RVA: 0xCDAD54 Offset: 0xCDAD54 VA: 0xCDAD54
	private UILabel resultLabel; // 0x80
	[SerializeField] // RVA: 0xCDAD64 Offset: 0xCDAD64 VA: 0xCDAD64
	private GameObject skill; // 0x88
	[SerializeField] // RVA: 0xCDAD74 Offset: 0xCDAD74 VA: 0xCDAD74
	private SkillIconComponent skillIcon; // 0x90
	[SerializeField] // RVA: 0xCDAD84 Offset: 0xCDAD84 VA: 0xCDAD84
	private UILabel skillNameLabel; // 0x98
	[SerializeField] // RVA: 0xCDAD94 Offset: 0xCDAD94 VA: 0xCDAD94
	private UILabel skillDetailLabel; // 0xA0
	[SerializeField] // RVA: 0xCDADA4 Offset: 0xCDADA4 VA: 0xCDADA4
	private UILabel cancelLabel; // 0xA8
	[SerializeField] // RVA: 0xCDADB4 Offset: 0xCDADB4 VA: 0xCDADB4
	private UILabel decideLabel; // 0xB0
	[SerializeField] // RVA: 0xCDADC4 Offset: 0xCDADC4 VA: 0xCDADC4
	private UILabel normalBuyLabel; // 0xB8
	[SerializeField] // RVA: 0xCDADD4 Offset: 0xCDADD4 VA: 0xCDADD4
	private UILabel anotherBuyLabel; // 0xC0
	[SerializeField] // RVA: 0xCDADE4 Offset: 0xCDADE4 VA: 0xCDADE4
	private GameObject cancelButton; // 0xC8
	[SerializeField] // RVA: 0xCDADF4 Offset: 0xCDADF4 VA: 0xCDADF4
	private GameObject decideButton; // 0xD0
	[SerializeField] // RVA: 0xCDAE04 Offset: 0xCDAE04 VA: 0xCDAE04
	private GameObject normalBuyButton; // 0xD8
	[SerializeField] // RVA: 0xCDAE14 Offset: 0xCDAE14 VA: 0xCDAE14
	private GameObject anotherBuyButton; // 0xE0
	[SerializeField] // RVA: 0xCDAE24 Offset: 0xCDAE24 VA: 0xCDAE24
	private UIWidget window; // 0xE8
	private EventRewardAnotherPayConfirmDialog.State state; // 0xF0
	private Action<EventRewardAnotherPayConfirmDialog.BuyState> onDecide; // 0xF8

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1CA45F4 Offset: 0x1CA45F4 VA: 0x1CA45F4
	public void .ctor() { }

	// RVA: 0x1CA465C Offset: 0x1CA465C VA: 0x1CA465C
	public void Init() { }

	// RVA: 0x1CA46E8 Offset: 0x1CA46E8 VA: 0x1CA46E8
	public void Open(ShopEntity entity, bool isChoices, Action<EventRewardAnotherPayConfirmDialog.BuyState> onDecide, bool isReconfirm = False) { }

	// RVA: 0x1CA5B68 Offset: 0x1CA5B68 VA: 0x1CA5B68
	public void OpenResult(ShopEntity entity, bool isAnotherItemOnly, Action<EventRewardAnotherPayConfirmDialog.BuyState> onDecide) { }

	// RVA: 0x1CA4EEC Offset: 0x1CA4EEC VA: 0x1CA4EEC
	private void SetSvtPassiveSkillInfo(int eventId, int svtId) { }

	// RVA: 0x1CA515C Offset: 0x1CA515C VA: 0x1CA515C
	public void SetUIPositon(bool isEventPeriod = True) { }

	// RVA: 0x1CA55E4 Offset: 0x1CA55E4 VA: 0x1CA55E4
	private void SetWindowSize(Vector2 size) { }

	// RVA: 0x1CA564C Offset: 0x1CA564C VA: 0x1CA564C
	private void SetButtonDisp(bool isChoices) { }

	// RVA: 0x1CA601C Offset: 0x1CA601C VA: 0x1CA601C
	protected void EndOpen() { }

	// RVA: 0x1CA6028 Offset: 0x1CA6028 VA: 0x1CA6028
	public void Close() { }

	// RVA: 0x1CA6034 Offset: 0x1CA6034 VA: 0x1CA6034
	public void OnClickCancel() { }

	// RVA: 0x1CA60E0 Offset: 0x1CA60E0 VA: 0x1CA60E0
	public void OnClickDecide() { }

	// RVA: 0x1CA618C Offset: 0x1CA618C VA: 0x1CA618C
	public void OnClickNormalBuy() { }

	// RVA: 0x1CA6238 Offset: 0x1CA6238 VA: 0x1CA6238
	public void OnClickAnotherBuy() { }

	// RVA: 0x1CA62E4 Offset: 0x1CA62E4 VA: 0x1CA62E4 Slot: 6
	protected override string get_closeBtnPath() { }

	// RVA: 0x1CA632C Offset: 0x1CA632C VA: 0x1CA632C
	private static void .cctor() { }
}

// Namespace: 
private enum EventRewardAnotherPayConfirmDialog.State // TypeDefIndex: 9810
{
	// Fields
	public int value__; // 0x0
	public const EventRewardAnotherPayConfirmDialog.State INIT = 0;
	public const EventRewardAnotherPayConfirmDialog.State INPUT = 1;
	public const EventRewardAnotherPayConfirmDialog.State OPEN_BASE = 2;
	public const EventRewardAnotherPayConfirmDialog.State OPEN_CHOICES = 3;
	public const EventRewardAnotherPayConfirmDialog.State OPEN_PURCHASED = 4;
	public const EventRewardAnotherPayConfirmDialog.State OPEN_RESULT = 5;
}

// Namespace: 
public enum EventRewardAnotherPayConfirmDialog.BuyState // TypeDefIndex: 9811
{
	// Fields
	public int value__; // 0x0
	public const EventRewardAnotherPayConfirmDialog.BuyState Cancel = 0;
	public const EventRewardAnotherPayConfirmDialog.BuyState Decide = 1;
	public const EventRewardAnotherPayConfirmDialog.BuyState Normal = 2;
	public const EventRewardAnotherPayConfirmDialog.BuyState Another = 3;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB0AB0 Offset: 0xCB0AB0 VA: 0xCB0AB0
private sealed class EventRewardAnotherPayConfirmDialog.<SetSvtPassiveSkillInfo>c__AnonStorey0 // TypeDefIndex: 9812
{
	// Fields
	internal int eventId; // 0x10

	// Methods

	// RVA: 0x1CA6014 Offset: 0x1CA6014 VA: 0x1CA6014
	public void .ctor() { }

	// RVA: 0x1CA6640 Offset: 0x1CA6640 VA: 0x1CA6640
	internal bool <>m__0(ServantPassiveSkillEntity ent) { }
}

// Namespace: 
public class EventRewardAssistConfirmDialog : BaseDialog // TypeDefIndex: 9813
{
	// Fields
	public static readonly string ASSIST_SKILL_ICON; // 0x0
	private static readonly int SKILL_NAME_LABEL_MAX_WIDTH; // 0x8
	private static readonly int TITLE_NAME_LABEL_MAX_WIDTH; // 0xC
	[SerializeField] // RVA: 0xCDAE34 Offset: 0xCDAE34 VA: 0xCDAE34
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xCDAE44 Offset: 0xCDAE44 VA: 0xCDAE44
	private UILabel detailMsgLabel; // 0x60
	[SerializeField] // RVA: 0xCDAE54 Offset: 0xCDAE54 VA: 0xCDAE54
	private UILabel confirmMsgLabel; // 0x68
	[SerializeField] // RVA: 0xCDAE64 Offset: 0xCDAE64 VA: 0xCDAE64
	private UILabel decideLabel; // 0x70
	[SerializeField] // RVA: 0xCDAE74 Offset: 0xCDAE74 VA: 0xCDAE74
	private UILabel cancelLabel; // 0x78
	[SerializeField] // RVA: 0xCDAE84 Offset: 0xCDAE84 VA: 0xCDAE84
	private UISprite skillIcon; // 0x80
	[SerializeField] // RVA: 0xCDAE94 Offset: 0xCDAE94 VA: 0xCDAE94
	private UICrossNarrowLabel skillNameLabel; // 0x88
	[SerializeField] // RVA: 0xCDAEA4 Offset: 0xCDAEA4 VA: 0xCDAEA4
	private UILabel skillLvLabel; // 0x90
	[SerializeField] // RVA: 0xCDAEB4 Offset: 0xCDAEB4 VA: 0xCDAEB4
	private UILabel skillInfoLabel; // 0x98
	[SerializeField] // RVA: 0xCDAEC4 Offset: 0xCDAEC4 VA: 0xCDAEC4
	private UISprite combineSkillIcon; // 0xA0
	[SerializeField] // RVA: 0xCDAED4 Offset: 0xCDAED4 VA: 0xCDAED4
	private UICrossNarrowLabel combineSkillNameLabel; // 0xA8
	[SerializeField] // RVA: 0xCDAEE4 Offset: 0xCDAEE4 VA: 0xCDAEE4
	private UILabel combineSkillLvLabel; // 0xB0
	[SerializeField] // RVA: 0xCDAEF4 Offset: 0xCDAEF4 VA: 0xCDAEF4
	private UILabel combineSkillInfoLabel; // 0xB8
	private EventRewardAssistConfirmDialog.State state; // 0xC0
	private Action<int> onDecide; // 0xC8
	private const int BuyDecide = 1;
	private const int BuyCancel = 0;

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1CA6690 Offset: 0x1CA6690 VA: 0x1CA6690
	public void .ctor() { }

	// RVA: 0x1CA66F8 Offset: 0x1CA66F8 VA: 0x1CA66F8
	public void Init() { }

	// RVA: 0x1CA6748 Offset: 0x1CA6748 VA: 0x1CA6748
	public void Open(ShopEntity shopEnt, Action<int> onDecide) { }

	// RVA: 0x1CA70CC Offset: 0x1CA70CC VA: 0x1CA70CC
	protected void EndOpen() { }

	// RVA: 0x1CA70D8 Offset: 0x1CA70D8 VA: 0x1CA70D8
	public void Close() { }

	// RVA: 0x1CA70E4 Offset: 0x1CA70E4 VA: 0x1CA70E4
	public void OnClickDecide() { }

	// RVA: 0x1CA7190 Offset: 0x1CA7190 VA: 0x1CA7190
	public void OnClickCancel() { }

	// RVA: 0x1CA723C Offset: 0x1CA723C VA: 0x1CA723C Slot: 6
	protected override string get_closeBtnPath() { }

	// RVA: 0x1CA7284 Offset: 0x1CA7284 VA: 0x1CA7284
	private static void .cctor() { }
}

// Namespace: 
private enum EventRewardAssistConfirmDialog.State // TypeDefIndex: 9814
{
	// Fields
	public int value__; // 0x0
	public const EventRewardAssistConfirmDialog.State INIT = 0;
	public const EventRewardAssistConfirmDialog.State INPUT = 1;
	public const EventRewardAssistConfirmDialog.State OPEN = 2;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB0AC0 Offset: 0xCB0AC0 VA: 0xCB0AC0
private sealed class EventRewardAssistConfirmDialog.<Open>c__AnonStorey0 // TypeDefIndex: 9815
{
	// Fields
	internal ShopEntity shopEnt; // 0x10
