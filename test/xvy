	// RVA: 0x1FB1EA8 Offset: 0x1FB1EA8 VA: 0x1FB1EA8
	public static void ScaleAdd(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x1FB20DC Offset: 0x1FB20DC VA: 0x1FB20DC
	public static void ScaleAdd(GameObject target, Hashtable args) { }

	// RVA: 0x1FB21C8 Offset: 0x1FB21C8 VA: 0x1FB21C8
	public static void ScaleBy(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x1FB23FC Offset: 0x1FB23FC VA: 0x1FB23FC
	public static void ScaleBy(GameObject target, Hashtable args) { }

	// RVA: 0x1FB24E8 Offset: 0x1FB24E8 VA: 0x1FB24E8
	public static void RotateTo(GameObject target, Vector3 rotation, float time) { }

	// RVA: 0x1FB271C Offset: 0x1FB271C VA: 0x1FB271C
	public static void RotateTo(GameObject target, Hashtable args) { }

	// RVA: 0x1FB2BCC Offset: 0x1FB2BCC VA: 0x1FB2BCC
	public static void RotateFrom(GameObject target, Vector3 rotation, float time) { }

	// RVA: 0x1FB2E00 Offset: 0x1FB2E00 VA: 0x1FB2E00
	public static void RotateFrom(GameObject target, Hashtable args) { }

	// RVA: 0x1FB3384 Offset: 0x1FB3384 VA: 0x1FB3384
	public static void RotateAdd(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x1FB35B8 Offset: 0x1FB35B8 VA: 0x1FB35B8
	public static void RotateAdd(GameObject target, Hashtable args) { }

	// RVA: 0x1FB36A4 Offset: 0x1FB36A4 VA: 0x1FB36A4
	public static void RotateBy(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x1FB38D8 Offset: 0x1FB38D8 VA: 0x1FB38D8
	public static void RotateBy(GameObject target, Hashtable args) { }

	// RVA: 0x1FB39C4 Offset: 0x1FB39C4 VA: 0x1FB39C4
	public static void ShakePosition(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x1FB3BF8 Offset: 0x1FB3BF8 VA: 0x1FB3BF8
	public static void ShakePosition(GameObject target, Hashtable args) { }

	// RVA: 0x1FB3CE4 Offset: 0x1FB3CE4 VA: 0x1FB3CE4
	public static void ShakeScale(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x1FB3F18 Offset: 0x1FB3F18 VA: 0x1FB3F18
	public static void ShakeScale(GameObject target, Hashtable args) { }

	// RVA: 0x1FB4004 Offset: 0x1FB4004 VA: 0x1FB4004
	public static void ShakeRotation(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x1FB4238 Offset: 0x1FB4238 VA: 0x1FB4238
	public static void ShakeRotation(GameObject target, Hashtable args) { }

	// RVA: 0x1FB4324 Offset: 0x1FB4324 VA: 0x1FB4324
	public static void PunchPosition(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x1FB4558 Offset: 0x1FB4558 VA: 0x1FB4558
	public static void PunchPosition(GameObject target, Hashtable args) { }

	// RVA: 0x1FB4698 Offset: 0x1FB4698 VA: 0x1FB4698
	public static void PunchRotation(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x1FB48CC Offset: 0x1FB48CC VA: 0x1FB48CC
	public static void PunchRotation(GameObject target, Hashtable args) { }

	// RVA: 0x1FB4A0C Offset: 0x1FB4A0C VA: 0x1FB4A0C
	public static void PunchScale(GameObject target, Vector3 amount, float time) { }

	// RVA: 0x1FB4C40 Offset: 0x1FB4C40 VA: 0x1FB4C40
	public static void PunchScale(GameObject target, Hashtable args) { }

	// RVA: 0x1FB4D80 Offset: 0x1FB4D80 VA: 0x1FB4D80
	private void GenerateTargets() { }

	// RVA: 0x1FB6304 Offset: 0x1FB6304 VA: 0x1FB6304
	private void GenerateRectTargets() { }

	// RVA: 0x1FB6168 Offset: 0x1FB6168 VA: 0x1FB6168
	private void GenerateColorTargets() { }

	// RVA: 0x1FB5EE0 Offset: 0x1FB5EE0 VA: 0x1FB5EE0
	private void GenerateVector3Targets() { }

	// RVA: 0x1FB5BC4 Offset: 0x1FB5BC4 VA: 0x1FB5BC4
	private void GenerateVector2Targets() { }

	// RVA: 0x1FB5994 Offset: 0x1FB5994 VA: 0x1FB5994
	private void GenerateFloatTargets() { }

	// RVA: 0x1FB6444 Offset: 0x1FB6444 VA: 0x1FB6444
	private void GenerateColorToTargets() { }

	// RVA: 0x1FB736C Offset: 0x1FB736C VA: 0x1FB736C
	private void GenerateAudioToTargets() { }

	// RVA: 0x1FBDBDC Offset: 0x1FBDBDC VA: 0x1FBDBDC
	private void GenerateStabTargets() { }

	// RVA: 0x1FBCEA4 Offset: 0x1FBCEA4 VA: 0x1FBCEA4
	private void GenerateLookToTargets() { }

	// RVA: 0x1FB7744 Offset: 0x1FB7744 VA: 0x1FB7744
	private void GenerateMoveToPathTargets() { }

	// RVA: 0x1FB81F8 Offset: 0x1FB81F8 VA: 0x1FB81F8
	private void GenerateMoveToTargets() { }

	// RVA: 0x1FB89E8 Offset: 0x1FB89E8 VA: 0x1FB89E8
	private void GenerateMoveByTargets() { }

	// RVA: 0x1FB9298 Offset: 0x1FB9298 VA: 0x1FB9298
	private void GenerateScaleToTargets() { }

	// RVA: 0x1FB9970 Offset: 0x1FB9970 VA: 0x1FB9970
	private void GenerateScaleByTargets() { }

	// RVA: 0x1FB9ECC Offset: 0x1FB9ECC VA: 0x1FB9ECC
	private void GenerateScaleAddTargets() { }

	// RVA: 0x1FBA3E4 Offset: 0x1FBA3E4 VA: 0x1FBA3E4
	private void GenerateRotateToTargets() { }

	// RVA: 0x1FBAC78 Offset: 0x1FBAC78 VA: 0x1FBAC78
	private void GenerateRotateAddTargets() { }

	// RVA: 0x1FBB1D0 Offset: 0x1FBB1D0 VA: 0x1FBB1D0
	private void GenerateRotateByTargets() { }

	// RVA: 0x1FBB794 Offset: 0x1FBB794 VA: 0x1FBB794
	private void GenerateShakePositionTargets() { }

	// RVA: 0x1FBBB6C Offset: 0x1FBBB6C VA: 0x1FBBB6C
	private void GenerateShakeScaleTargets() { }

	// RVA: 0x1FBBEE0 Offset: 0x1FBBEE0 VA: 0x1FBBEE0
	private void GenerateShakeRotationTargets() { }

	// RVA: 0x1FBC254 Offset: 0x1FBC254 VA: 0x1FBC254
	private void GeneratePunchPositionTargets() { }

	// RVA: 0x1FBC6C4 Offset: 0x1FBC6C4 VA: 0x1FBC6C4
	private void GeneratePunchRotationTargets() { }

	// RVA: 0x1FBCAD0 Offset: 0x1FBCAD0 VA: 0x1FBCAD0
	private void GeneratePunchScaleTargets() { }

	// RVA: 0x1FBE56C Offset: 0x1FBE56C VA: 0x1FBE56C
	private void ApplyRectTargets() { }

	// RVA: 0x1FBEA4C Offset: 0x1FBEA4C VA: 0x1FBEA4C
	private void ApplyColorTargets() { }

	// RVA: 0x1FBF054 Offset: 0x1FBF054 VA: 0x1FBF054
	private void ApplyVector3Targets() { }

	// RVA: 0x1FBF3FC Offset: 0x1FBF3FC VA: 0x1FBF3FC
	private void ApplyVector2Targets() { }

	// RVA: 0x1FBF6DC Offset: 0x1FBF6DC VA: 0x1FBF6DC
	private void ApplyFloatTargets() { }

	// RVA: 0x1FBF8F0 Offset: 0x1FBF8F0 VA: 0x1FBF8F0
	private void ApplyColorToTargets() { }

	// RVA: 0x1FC087C Offset: 0x1FC087C VA: 0x1FC087C
	private void ApplyAudioToTargets() { }

	// RVA: 0x1FC0B98 Offset: 0x1FC0B98 VA: 0x1FC0B98
	private void ApplyStabTargets() { }

	// RVA: 0x1FC0B9C Offset: 0x1FC0B9C VA: 0x1FC0B9C
	private void ApplyMoveToPathTargets() { }

	// RVA: 0x1FC1028 Offset: 0x1FC1028 VA: 0x1FC1028
	private void ApplyMoveToTargets() { }

	// RVA: 0x1FC14D8 Offset: 0x1FC14D8 VA: 0x1FC14D8
	private void ApplyMoveByTargets() { }

	// RVA: 0x1FC1B38 Offset: 0x1FC1B38 VA: 0x1FC1B38
	private void ApplyScaleToTargets() { }

	// RVA: 0x1FC1E9C Offset: 0x1FC1E9C VA: 0x1FC1E9C
	private void ApplyLookToTargets() { }

	// RVA: 0x1FC2254 Offset: 0x1FC2254 VA: 0x1FC2254
	private void ApplyRotateToTargets() { }

	// RVA: 0x1FC2854 Offset: 0x1FC2854 VA: 0x1FC2854
	private void ApplyRotateAddTargets() { }

	// RVA: 0x1FC2DA8 Offset: 0x1FC2DA8 VA: 0x1FC2DA8
	private void ApplyShakePositionTargets() { }

	// RVA: 0x1FC3388 Offset: 0x1FC3388 VA: 0x1FC3388
	private void ApplyShakeScaleTargets() { }

	// RVA: 0x1FC3798 Offset: 0x1FC3798 VA: 0x1FC3798
	private void ApplyShakeRotationTargets() { }

	// RVA: 0x1FC3C88 Offset: 0x1FC3C88 VA: 0x1FC3C88
	private void ApplyPunchPositionTargets() { }

	// RVA: 0x1FC4588 Offset: 0x1FC4588 VA: 0x1FC4588
	private void ApplyPunchRotationTargets() { }

	// RVA: 0x1FC4CBC Offset: 0x1FC4CBC VA: 0x1FC4CBC
	private void ApplyPunchScaleTargets() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD65F0 Offset: 0xCD65F0 VA: 0xCD65F0
	// RVA: 0x1FC5218 Offset: 0x1FC5218 VA: 0x1FC5218
	private IEnumerator TweenDelay() { }

	// RVA: 0x1FC5288 Offset: 0x1FC5288 VA: 0x1FC5288
	private void TweenStart() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD6600 Offset: 0xCD6600 VA: 0xCD6600
	// RVA: 0x1FC6220 Offset: 0x1FC6220 VA: 0x1FC6220
	private IEnumerator TweenRestart() { }

	// RVA: 0x1FC6290 Offset: 0x1FC6290 VA: 0x1FC6290
	private void TweenUpdate() { }

	// RVA: 0x1FC637C Offset: 0x1FC637C VA: 0x1FC637C
	private void TweenComplete() { }

	// RVA: 0x1FC6478 Offset: 0x1FC6478 VA: 0x1FC6478
	private void TweenLoop() { }

	// RVA: 0x1FC6524 Offset: 0x1FC6524 VA: 0x1FC6524
	public static Rect RectUpdate(Rect currentValue, Rect targetValue, float speed) { }

	// RVA: 0x1FC66EC Offset: 0x1FC66EC VA: 0x1FC66EC
	public static Vector3 Vector3Update(Vector3 currentValue, Vector3 targetValue, float speed) { }

	// RVA: 0x1FC67F8 Offset: 0x1FC67F8 VA: 0x1FC67F8
	public static Vector2 Vector2Update(Vector2 currentValue, Vector2 targetValue, float speed) { }

	// RVA: 0x1FC66AC Offset: 0x1FC66AC VA: 0x1FC66AC
	public static float FloatUpdate(float currentValue, float targetValue, float speed) { }

	// RVA: 0x1FC68DC Offset: 0x1FC68DC VA: 0x1FC68DC
	public static void FadeUpdate(GameObject target, Hashtable args) { }

	// RVA: 0x1FC79DC Offset: 0x1FC79DC VA: 0x1FC79DC
	public static void FadeUpdate(GameObject target, float alpha, float time) { }

	// RVA: 0x1FC69B0 Offset: 0x1FC69B0 VA: 0x1FC69B0
	public static void ColorUpdate(GameObject target, Hashtable args) { }

	// RVA: 0x1FC7BF4 Offset: 0x1FC7BF4 VA: 0x1FC7BF4
	public static void ColorUpdate(GameObject target, Color color, float time) { }

	// RVA: 0x1FC7E38 Offset: 0x1FC7E38 VA: 0x1FC7E38
	public static void AudioUpdate(GameObject target, Hashtable args) { }

	// RVA: 0x1FC8458 Offset: 0x1FC8458 VA: 0x1FC8458
	public static void AudioUpdate(GameObject target, float volume, float pitch, float time) { }

	// RVA: 0x1FC872C Offset: 0x1FC872C VA: 0x1FC872C
	public static void RotateUpdate(GameObject target, Hashtable args) { }

	// RVA: 0x1FC8FEC Offset: 0x1FC8FEC VA: 0x1FC8FEC
	public static void RotateUpdate(GameObject target, Vector3 rotation, float time) { }

	// RVA: 0x1FC9220 Offset: 0x1FC9220 VA: 0x1FC9220
	public static void ScaleUpdate(GameObject target, Hashtable args) { }

	// RVA: 0x1FC9A14 Offset: 0x1FC9A14 VA: 0x1FC9A14
	public static void ScaleUpdate(GameObject target, Vector3 scale, float time) { }

	// RVA: 0x1FC9C48 Offset: 0x1FC9C48 VA: 0x1FC9C48
	public static void MoveUpdate(GameObject target, Hashtable args) { }

	// RVA: 0x1FCB580 Offset: 0x1FCB580 VA: 0x1FCB580
	public static void MoveUpdate(GameObject target, Vector3 position, float time) { }

	// RVA: 0x1FCA768 Offset: 0x1FCA768 VA: 0x1FCA768
	public static void LookUpdate(GameObject target, Hashtable args) { }

	// RVA: 0x1FCB7B4 Offset: 0x1FCB7B4 VA: 0x1FCB7B4
	public static void LookUpdate(GameObject target, Vector3 looktarget, float time) { }

	// RVA: 0x1FCB9E8 Offset: 0x1FCB9E8 VA: 0x1FCB9E8
	public static float PathLength(Transform[] path) { }

	// RVA: 0x1FBE3F0 Offset: 0x1FBE3F0 VA: 0x1FBE3F0
	public static float PathLength(Vector3[] path) { }

	// RVA: 0x1FCC534 Offset: 0x1FCC534 VA: 0x1FCC534
	public static Texture2D CameraTexture(Color color) { }

	// RVA: 0x1FCC6A4 Offset: 0x1FCC6A4 VA: 0x1FCC6A4
	public static void PutOnPath(GameObject target, Vector3[] path, float percent) { }

	// RVA: 0x1FCC780 Offset: 0x1FCC780 VA: 0x1FCC780
	public static void PutOnPath(Transform target, Vector3[] path, float percent) { }

	// RVA: 0x1FCC83C Offset: 0x1FCC83C VA: 0x1FCC83C
	public static void PutOnPath(GameObject target, Transform[] path, float percent) { }

	// RVA: 0x1FCC9F0 Offset: 0x1FCC9F0 VA: 0x1FCC9F0
	public static void PutOnPath(Transform target, Transform[] path, float percent) { }

	// RVA: 0x1FCCB84 Offset: 0x1FCCB84 VA: 0x1FCCB84
	public static Vector3 PointOnPath(Transform[] path, float percent) { }

	// RVA: 0x1FCCCDC Offset: 0x1FCCCDC VA: 0x1FCCCDC
	public static void DrawLine(Vector3[] line) { }

	// RVA: 0x1FCCF6C Offset: 0x1FCCF6C VA: 0x1FCCF6C
	public static void DrawLine(Vector3[] line, Color color) { }

	// RVA: 0x1FCD038 Offset: 0x1FCD038 VA: 0x1FCD038
	public static void DrawLine(Transform[] line) { }

	// RVA: 0x1FCD1F8 Offset: 0x1FCD1F8 VA: 0x1FCD1F8
	public static void DrawLine(Transform[] line, Color color) { }

	// RVA: 0x1FCD3B0 Offset: 0x1FCD3B0 VA: 0x1FCD3B0
	public static void DrawLineGizmos(Vector3[] line) { }

	// RVA: 0x1FCD49C Offset: 0x1FCD49C VA: 0x1FCD49C
	public static void DrawLineGizmos(Vector3[] line, Color color) { }

	// RVA: 0x1FCD568 Offset: 0x1FCD568 VA: 0x1FCD568
	public static void DrawLineGizmos(Transform[] line) { }

	// RVA: 0x1FCD728 Offset: 0x1FCD728 VA: 0x1FCD728
	public static void DrawLineGizmos(Transform[] line, Color color) { }

	// RVA: 0x1FCD8E0 Offset: 0x1FCD8E0 VA: 0x1FCD8E0
	public static void DrawLineHandles(Vector3[] line) { }

	// RVA: 0x1FCD9CC Offset: 0x1FCD9CC VA: 0x1FCD9CC
	public static void DrawLineHandles(Vector3[] line, Color color) { }

	// RVA: 0x1FCDA98 Offset: 0x1FCDA98 VA: 0x1FCDA98
	public static void DrawLineHandles(Transform[] line) { }

	// RVA: 0x1FCDC58 Offset: 0x1FCDC58 VA: 0x1FCDC58
	public static void DrawLineHandles(Transform[] line, Color color) { }

	// RVA: 0x1FCDE10 Offset: 0x1FCDE10 VA: 0x1FCDE10
	public static Vector3 PointOnPath(Vector3[] path, float percent) { }

	// RVA: 0x1FCDE88 Offset: 0x1FCDE88 VA: 0x1FCDE88
	public static void DrawPath(Vector3[] path) { }

	// RVA: 0x1FCE164 Offset: 0x1FCE164 VA: 0x1FCE164
	public static void DrawPath(Vector3[] path, Color color) { }

	// RVA: 0x1FCE230 Offset: 0x1FCE230 VA: 0x1FCE230
	public static void DrawPath(Transform[] path) { }

	// RVA: 0x1FCE3F0 Offset: 0x1FCE3F0 VA: 0x1FCE3F0
	public static void DrawPath(Transform[] path, Color color) { }

	// RVA: 0x1FCE5A8 Offset: 0x1FCE5A8 VA: 0x1FCE5A8
	public static void DrawPathGizmos(Vector3[] path) { }

	// RVA: 0x1FCE694 Offset: 0x1FCE694 VA: 0x1FCE694
	public static void DrawPathGizmos(Vector3[] path, Color color) { }

	// RVA: 0x1FCE760 Offset: 0x1FCE760 VA: 0x1FCE760
	public static void DrawPathGizmos(Transform[] path) { }

	// RVA: 0x1FCE920 Offset: 0x1FCE920 VA: 0x1FCE920
	public static void DrawPathGizmos(Transform[] path, Color color) { }

	// RVA: 0x1FCEAD8 Offset: 0x1FCEAD8 VA: 0x1FCEAD8
	public static void DrawPathHandles(Vector3[] path) { }

	// RVA: 0x1FCEBC4 Offset: 0x1FCEBC4 VA: 0x1FCEBC4
	public static void DrawPathHandles(Vector3[] path, Color color) { }

	// RVA: 0x1FCEC90 Offset: 0x1FCEC90 VA: 0x1FCEC90
	public static void DrawPathHandles(Transform[] path) { }

	// RVA: 0x1FCEE50 Offset: 0x1FCEE50 VA: 0x1FCEE50
	public static void DrawPathHandles(Transform[] path, Color color) { }

	// RVA: 0x1FCF008 Offset: 0x1FCF008 VA: 0x1FCF008
	public static void CameraFadeDepth(int depth) { }

	// RVA: 0x1FCF1B8 Offset: 0x1FCF1B8 VA: 0x1FCF1B8
	public static void CameraFadeDestroy() { }

	// RVA: 0x1FCF2B4 Offset: 0x1FCF2B4 VA: 0x1FCF2B4
	public static void CameraFadeSwap(Texture2D texture) { }

	// RVA: 0x1FCF3C8 Offset: 0x1FCF3C8 VA: 0x1FCF3C8
	public static GameObject CameraFadeAdd(Texture2D texture, int depth) { }

	// RVA: 0x1FCF61C Offset: 0x1FCF61C VA: 0x1FCF61C
	public static GameObject CameraFadeAdd(Texture2D texture) { }

	// RVA: 0x1FCF89C Offset: 0x1FCF89C VA: 0x1FCF89C
	public static GameObject CameraFadeAdd() { }

	// RVA: 0x1FCFB2C Offset: 0x1FCFB2C VA: 0x1FCFB2C
	public static void Resume(GameObject target) { }

	// RVA: 0x1FCFEB4 Offset: 0x1FCFEB4 VA: 0x1FCFEB4
	public static void Resume(GameObject target, bool includechildren) { }

	// RVA: 0x1FD01E8 Offset: 0x1FD01E8 VA: 0x1FD01E8
	public static void Resume(GameObject target, string type) { }

	// RVA: 0x1FD0690 Offset: 0x1FD0690 VA: 0x1FD0690
	public static void Resume(GameObject target, string type, bool includechildren) { }

	// RVA: 0x1FD0E4C Offset: 0x1FD0E4C VA: 0x1FD0E4C
	public static void Resume() { }

	// RVA: 0x1FD104C Offset: 0x1FD104C VA: 0x1FD104C
	public static void Resume(string type) { }

	// RVA: 0x1FD139C Offset: 0x1FD139C VA: 0x1FD139C
	public static void Pause(GameObject target) { }

	// RVA: 0x1FD178C Offset: 0x1FD178C VA: 0x1FD178C
	public static void Pause(GameObject target, bool includechildren) { }

	// RVA: 0x1FD1AC0 Offset: 0x1FD1AC0 VA: 0x1FD1AC0
	public static void Pause(GameObject target, string type) { }

	// RVA: 0x1FD1FC0 Offset: 0x1FD1FC0 VA: 0x1FD1FC0
	public static void Pause(GameObject target, string type, bool includechildren) { }

	// RVA: 0x1FD27D0 Offset: 0x1FD27D0 VA: 0x1FD27D0
	public static void Pause() { }

	// RVA: 0x1FD29D0 Offset: 0x1FD29D0 VA: 0x1FD29D0
	public static void Pause(string type) { }

	// RVA: 0x1FD2D20 Offset: 0x1FD2D20 VA: 0x1FD2D20
	public static int Count() { }

	// RVA: 0x1FD2DA4 Offset: 0x1FD2DA4 VA: 0x1FD2DA4
	public static int Count(string type) { }

	// RVA: 0x1FD312C Offset: 0x1FD312C VA: 0x1FD312C
	public static int Count(GameObject target) { }

	// RVA: 0x1FD325C Offset: 0x1FD325C VA: 0x1FD325C
	public static int Count(GameObject target, string type) { }

	// RVA: 0x1FD36E4 Offset: 0x1FD36E4 VA: 0x1FD36E4
	public static void Stop() { }

	// RVA: 0x1FD3CA8 Offset: 0x1FD3CA8 VA: 0x1FD3CA8
	public static void Stop(string type) { }

	// RVA: 0x1FD4498 Offset: 0x1FD4498 VA: 0x1FD4498
	public static void StopByName(string name) { }

	// RVA: 0x1FD3928 Offset: 0x1FD3928 VA: 0x1FD3928
	public static void Stop(GameObject target) { }

	// RVA: 0x1FD4BC4 Offset: 0x1FD4BC4 VA: 0x1FD4BC4
	public static void Stop(GameObject target, bool includechildren) { }

	// RVA: 0x1FD3FF8 Offset: 0x1FD3FF8 VA: 0x1FD3FF8
	public static void Stop(GameObject target, string type) { }

	// RVA: 0x1FD47E8 Offset: 0x1FD47E8 VA: 0x1FD47E8
	public static void StopByName(GameObject target, string name) { }

	// RVA: 0x1FD4EF8 Offset: 0x1FD4EF8 VA: 0x1FD4EF8
	public static void Stop(GameObject target, string type, bool includechildren) { }

	// RVA: 0x1FD56AC Offset: 0x1FD56AC VA: 0x1FD56AC
	public static void StopByName(GameObject target, string name, bool includechildren) { }

	// RVA: 0x1FAA5D8 Offset: 0x1FAA5D8 VA: 0x1FAA5D8
	public static Hashtable Hash(object[] args) { }

	// RVA: 0x1FD5D90 Offset: 0x1FD5D90 VA: 0x1FD5D90
	private void Awake() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD6610 Offset: 0xCD6610 VA: 0xCD6610
	// RVA: 0x1FD7170 Offset: 0x1FD7170 VA: 0x1FD7170
	private IEnumerator Start() { }

	// RVA: 0x1FD71E0 Offset: 0x1FD71E0 VA: 0x1FD71E0
	private void Update() { }

	// RVA: 0x1FD7220 Offset: 0x1FD7220 VA: 0x1FD7220
	private void FixedUpdate() { }

	// RVA: 0x1FD7260 Offset: 0x1FD7260 VA: 0x1FD7260
	private void LateUpdate() { }

	// RVA: 0x1FD73E4 Offset: 0x1FD73E4 VA: 0x1FD73E4
	private void OnEnable() { }

	// RVA: 0x1FD74B4 Offset: 0x1FD74B4 VA: 0x1FD74B4
	private void OnDisable() { }

	// RVA: 0x1FCCDC8 Offset: 0x1FCCDC8 VA: 0x1FCCDC8
	private static void DrawLineHelper(Vector3[] line, Color color, string method) { }

	// RVA: 0x1FCDF74 Offset: 0x1FCDF74 VA: 0x1FCDF74
	private static void DrawPathHelper(Vector3[] path, Color color, string method) { }

	// RVA: 0x1FCBC20 Offset: 0x1FCBC20 VA: 0x1FCBC20
	private static Vector3[] PathControlPointGenerator(Vector3[] path) { }

	// RVA: 0x1FCC0BC Offset: 0x1FCC0BC VA: 0x1FCC0BC
	private static Vector3 Interp(Vector3[] pts, float t) { }

	// RVA: 0x1FACD34 Offset: 0x1FACD34 VA: 0x1FACD34
	private static void Launch(GameObject target, Hashtable args) { }

	// RVA: 0x1FAC304 Offset: 0x1FAC304 VA: 0x1FAC304
	private static Hashtable CleanArgs(Hashtable args) { }

	// RVA: 0x1FD74B8 Offset: 0x1FD74B8 VA: 0x1FD74B8
	private static string GenerateID() { }

	// RVA: 0x1FD5DD8 Offset: 0x1FD5DD8 VA: 0x1FD5DD8
	private void RetrieveArgs() { }

	// RVA: 0x1FD7644 Offset: 0x1FD7644 VA: 0x1FD7644
	private void GetEasingFunction() { }

	// RVA: 0x1FC6304 Offset: 0x1FC6304 VA: 0x1FC6304
	private void UpdatePercentage() { }

	// RVA: 0x1FC5514 Offset: 0x1FC5514 VA: 0x1FC5514
	private void CallBack(string callbackType) { }

	// RVA: 0x1FBE084 Offset: 0x1FBE084 VA: 0x1FBE084
	private void Dispose() { }

	// RVA: 0x1FC58CC Offset: 0x1FC58CC VA: 0x1FC58CC
	private void ConflictCheck() { }

	// RVA: 0x1FC621C Offset: 0x1FC621C VA: 0x1FC621C
	private void EnableKinematic() { }

	// RVA: 0x1FC6520 Offset: 0x1FC6520 VA: 0x1FC6520
	private void DisableKinematic() { }

	// RVA: 0x1FD7460 Offset: 0x1FD7460 VA: 0x1FD7460
	private void ResumeDelay() { }

	// RVA: 0x1FD7A38 Offset: 0x1FD7A38 VA: 0x1FD7A38
	private float linear(float start, float end, float value) { }

	// RVA: 0x1FBE324 Offset: 0x1FBE324 VA: 0x1FBE324
	private float clerp(float start, float end, float value) { }

	// RVA: 0x1FD7AC0 Offset: 0x1FD7AC0 VA: 0x1FD7AC0
	private float spring(float start, float end, float value) { }

	// RVA: 0x1FD7BC4 Offset: 0x1FD7BC4 VA: 0x1FD7BC4
	private float easeInQuad(float start, float end, float value) { }

	// RVA: 0x1FD7BD8 Offset: 0x1FD7BD8 VA: 0x1FD7BD8
	private float easeOutQuad(float start, float end, float value) { }

	// RVA: 0x1FD7BF4 Offset: 0x1FD7BF4 VA: 0x1FD7BF4
	private float easeInOutQuad(float start, float end, float value) { }

	// RVA: 0x1FD7C48 Offset: 0x1FD7C48 VA: 0x1FD7C48
	private float easeInCubic(float start, float end, float value) { }

	// RVA: 0x1FD7C60 Offset: 0x1FD7C60 VA: 0x1FD7C60
	private float easeOutCubic(float start, float end, float value) { }

	// RVA: 0x1FD7C88 Offset: 0x1FD7C88 VA: 0x1FD7C88
	private float easeInOutCubic(float start, float end, float value) { }

	// RVA: 0x1FD7CE0 Offset: 0x1FD7CE0 VA: 0x1FD7CE0
	private float easeInQuart(float start, float end, float value) { }

	// RVA: 0x1FD7CFC Offset: 0x1FD7CFC VA: 0x1FD7CFC
	private float easeOutQuart(float start, float end, float value) { }

	// RVA: 0x1FD7D24 Offset: 0x1FD7D24 VA: 0x1FD7D24
	private float easeInOutQuart(float start, float end, float value) { }

	// RVA: 0x1FD7D80 Offset: 0x1FD7D80 VA: 0x1FD7D80
	private float easeInQuint(float start, float end, float value) { }

	// RVA: 0x1FD7DA0 Offset: 0x1FD7DA0 VA: 0x1FD7DA0
	private float easeOutQuint(float start, float end, float value) { }

	// RVA: 0x1FD7DD0 Offset: 0x1FD7DD0 VA: 0x1FD7DD0
	private float easeInOutQuint(float start, float end, float value) { }

	// RVA: 0x1FD7E38 Offset: 0x1FD7E38 VA: 0x1FD7E38
	private float easeInSine(float start, float end, float value) { }

	// RVA: 0x1FD7ED0 Offset: 0x1FD7ED0 VA: 0x1FD7ED0
	private float easeOutSine(float start, float end, float value) { }

	// RVA: 0x1FD7F64 Offset: 0x1FD7F64 VA: 0x1FD7F64
	private float easeInOutSine(float start, float end, float value) { }

	// RVA: 0x1FD8008 Offset: 0x1FD8008 VA: 0x1FD8008
	private float easeInExpo(float start, float end, float value) { }

	// RVA: 0x1FD80A0 Offset: 0x1FD80A0 VA: 0x1FD80A0
	private float easeOutExpo(float start, float end, float value) { }

	// RVA: 0x1FD8138 Offset: 0x1FD8138 VA: 0x1FD8138
	private float easeInOutExpo(float start, float end, float value) { }

	// RVA: 0x1FD8228 Offset: 0x1FD8228 VA: 0x1FD8228
	private float easeInCirc(float start, float end, float value) { }

	// RVA: 0x1FD82D4 Offset: 0x1FD82D4 VA: 0x1FD82D4
	private float easeOutCirc(float start, float end, float value) { }

	// RVA: 0x1FD8380 Offset: 0x1FD8380 VA: 0x1FD8380
	private float easeInOutCirc(float start, float end, float value) { }

	// RVA: 0x1FD8478 Offset: 0x1FD8478 VA: 0x1FD8478
	private float easeInBounce(float start, float end, float value) { }

	// RVA: 0x1FD84B4 Offset: 0x1FD84B4 VA: 0x1FD84B4
	private float easeOutBounce(float start, float end, float value) { }

	// RVA: 0x1FD8584 Offset: 0x1FD8584 VA: 0x1FD8584
	private float easeInOutBounce(float start, float end, float value) { }

	// RVA: 0x1FD8608 Offset: 0x1FD8608 VA: 0x1FD8608
	private float easeInBack(float start, float end, float value) { }

	// RVA: 0x1FD8638 Offset: 0x1FD8638 VA: 0x1FD8638
	private float easeOutBack(float start, float end, float value) { }

	// RVA: 0x1FD8678 Offset: 0x1FD8678 VA: 0x1FD8678
	private float easeInOutBack(float start, float end, float value) { }

	// RVA: 0x1FC44C8 Offset: 0x1FC44C8 VA: 0x1FC44C8
	private float punch(float amplitude, float value) { }

	// RVA: 0x1FD86FC Offset: 0x1FD86FC VA: 0x1FD86FC
	private float easeInElastic(float start, float end, float value) { }

	// RVA: 0x1FD87E4 Offset: 0x1FD87E4 VA: 0x1FD87E4
	private float easeOutElastic(float start, float end, float value) { }

	// RVA: 0x1FD88C8 Offset: 0x1FD88C8 VA: 0x1FD88C8
	private float easeInOutElastic(float start, float end, float value) { }

	// RVA: 0x1FD8A2C Offset: 0x1FD8A2C VA: 0x1FD8A2C
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD6620 Offset: 0xCD6620 VA: 0xCD6620
	// RVA: 0x1FD8A98 Offset: 0x1FD8A98 VA: 0x1FD8A98
	private static bool <AddOrRecycleTweenComponent>m__0(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD6630 Offset: 0xCD6630 VA: 0xCD6630
	// RVA: 0x1FD8AC0 Offset: 0x1FD8AC0 VA: 0x1FD8AC0
	private static bool <Resume>m__1(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD6640 Offset: 0xCD6640 VA: 0xCD6640
	// RVA: 0x1FD8AF0 Offset: 0x1FD8AF0 VA: 0x1FD8AF0
	private static bool <Resume>m__2(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD6650 Offset: 0xCD6650 VA: 0xCD6650
	// RVA: 0x1FD8B20 Offset: 0x1FD8B20 VA: 0x1FD8B20
	private static bool <Resume>m__3(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD6660 Offset: 0xCD6660 VA: 0xCD6660
	// RVA: 0x1FD8B50 Offset: 0x1FD8B50 VA: 0x1FD8B50
	private static bool <Pause>m__4(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD6670 Offset: 0xCD6670 VA: 0xCD6670
	// RVA: 0x1FD8B80 Offset: 0x1FD8B80 VA: 0x1FD8B80
	private static bool <Pause>m__5(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD6680 Offset: 0xCD6680 VA: 0xCD6680
	// RVA: 0x1FD8BB0 Offset: 0x1FD8BB0 VA: 0x1FD8BB0
	private static bool <Pause>m__6(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD6690 Offset: 0xCD6690 VA: 0xCD6690
	// RVA: 0x1FD8BE0 Offset: 0x1FD8BE0 VA: 0x1FD8BE0
	private static bool <Count>m__7(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD66A0 Offset: 0xCD66A0 VA: 0xCD66A0
	// RVA: 0x1FD8C10 Offset: 0x1FD8C10 VA: 0x1FD8C10
	private static bool <Count>m__8(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD66B0 Offset: 0xCD66B0 VA: 0xCD66B0
	// RVA: 0x1FD8C40 Offset: 0x1FD8C40 VA: 0x1FD8C40
	private static bool <Stop>m__9(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD66C0 Offset: 0xCD66C0 VA: 0xCD66C0
	// RVA: 0x1FD8C70 Offset: 0x1FD8C70 VA: 0x1FD8C70
	private static bool <Stop>m__A(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD66D0 Offset: 0xCD66D0 VA: 0xCD66D0
	// RVA: 0x1FD8CA0 Offset: 0x1FD8CA0 VA: 0x1FD8CA0
	private static bool <StopByName>m__B(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD66E0 Offset: 0xCD66E0 VA: 0xCD66E0
	// RVA: 0x1FD8CD0 Offset: 0x1FD8CD0 VA: 0x1FD8CD0
	private static bool <Stop>m__C(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD66F0 Offset: 0xCD66F0 VA: 0xCD66F0
	// RVA: 0x1FD8D00 Offset: 0x1FD8D00 VA: 0x1FD8D00
	private static bool <StopByName>m__D(iTween x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD6700 Offset: 0xCD6700 VA: 0xCD6700
	// RVA: 0x1FD8D30 Offset: 0x1FD8D30 VA: 0x1FD8D30
	private static bool <ConflictCheck>m__E(iTween x) { }
}

// Namespace: 
private sealed class iTween.EasingFunction : MulticastDelegate // TypeDefIndex: 12038
{
	// Methods

	// RVA: 0x2B18104 Offset: 0x2B18104 VA: 0x2B18104
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2B18114 Offset: 0x2B18114 VA: 0x2B18114 Slot: 11
	public virtual float Invoke(float start, float end, float value) { }

	// RVA: 0x2B18394 Offset: 0x2B18394 VA: 0x2B18394 Slot: 12
	public virtual IAsyncResult BeginInvoke(float start, float end, float value, AsyncCallback callback, object object) { }

	// RVA: 0x2B1844C Offset: 0x2B1844C VA: 0x2B1844C Slot: 13
	public virtual float EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private sealed class iTween.ApplyTween : MulticastDelegate // TypeDefIndex: 12039
{
	// Methods

	// RVA: 0x2B17810 Offset: 0x2B17810 VA: 0x2B17810
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2B17820 Offset: 0x2B17820 VA: 0x2B17820 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x2B17A20 Offset: 0x2B17A20 VA: 0x2B17A20 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x2B17A54 Offset: 0x2B17A54 VA: 0x2B17A54 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public enum iTween.EaseType // TypeDefIndex: 12040
{
	// Fields
	public int value__; // 0x0
	public const iTween.EaseType easeInQuad = 0;
	public const iTween.EaseType easeOutQuad = 1;
	public const iTween.EaseType easeInOutQuad = 2;
	public const iTween.EaseType easeInCubic = 3;
	public const iTween.EaseType easeOutCubic = 4;
	public const iTween.EaseType easeInOutCubic = 5;
	public const iTween.EaseType easeInQuart = 6;
	public const iTween.EaseType easeOutQuart = 7;
	public const iTween.EaseType easeInOutQuart = 8;
	public const iTween.EaseType easeInQuint = 9;
	public const iTween.EaseType easeOutQuint = 10;
	public const iTween.EaseType easeInOutQuint = 11;
	public const iTween.EaseType easeInSine = 12;
	public const iTween.EaseType easeOutSine = 13;
	public const iTween.EaseType easeInOutSine = 14;
	public const iTween.EaseType easeInExpo = 15;
	public const iTween.EaseType easeOutExpo = 16;
	public const iTween.EaseType easeInOutExpo = 17;
	public const iTween.EaseType easeInCirc = 18;
	public const iTween.EaseType easeOutCirc = 19;
	public const iTween.EaseType easeInOutCirc = 20;
	public const iTween.EaseType linear = 21;
	public const iTween.EaseType spring = 22;
	public const iTween.EaseType easeInBounce = 23;
	public const iTween.EaseType easeOutBounce = 24;
	public const iTween.EaseType easeInOutBounce = 25;
	public const iTween.EaseType easeInBack = 26;
	public const iTween.EaseType easeOutBack = 27;
	public const iTween.EaseType easeInOutBack = 28;
	public const iTween.EaseType easeInElastic = 29;
	public const iTween.EaseType easeOutElastic = 30;
	public const iTween.EaseType easeInOutElastic = 31;
	public const iTween.EaseType punch = 32;
}

// Namespace: 
public enum iTween.LoopType // TypeDefIndex: 12041
{
	// Fields
	public int value__; // 0x0
	public const iTween.LoopType none = 0;
	public const iTween.LoopType loop = 1;
	public const iTween.LoopType pingPong = 2;
}

// Namespace: 
public enum iTween.NamedValueColor // TypeDefIndex: 12042
{
	// Fields
	public int value__; // 0x0
	public const iTween.NamedValueColor _Color = 0;
	public const iTween.NamedValueColor _SpecColor = 1;
	public const iTween.NamedValueColor _Emission = 2;
	public const iTween.NamedValueColor _ReflectColor = 3;
}

// Namespace: 
public static class iTween.Defaults // TypeDefIndex: 12043
{
	// Fields
	public static float time; // 0x0
	public static float delay; // 0x4
	public static iTween.NamedValueColor namedColorValue; // 0x8
	public static iTween.LoopType loopType; // 0xC
	public static iTween.EaseType easeType; // 0x10
	public static float lookSpeed; // 0x14
	public static bool isLocal; // 0x18
	public static Space space; // 0x1C
	public static bool orientToPath; // 0x20
	public static Color color; // 0x24
	public static float updateTimePercentage; // 0x34
	public static float updateTime; // 0x38
	public static int cameraFadeDepth; // 0x3C
	public static float lookAhead; // 0x40
	public static bool useRealTime; // 0x44
	public static Vector3 up; // 0x48

	// Methods

	// RVA: 0x2B17FD0 Offset: 0x2B17FD0 VA: 0x2B17FD0
	private static void .cctor() { }
}

// Namespace: 
private class iTween.CRSpline // TypeDefIndex: 12044
{
	// Fields
	public Vector3[] pts; // 0x10

	// Methods

	// RVA: 0x2B17A60 Offset: 0x2B17A60 VA: 0x2B17A60
	public void .ctor(Vector3[] pts) { }

	// RVA: 0x2B17AFC Offset: 0x2B17AFC VA: 0x2B17AFC
	public Vector3 Interp(float t) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46E24 Offset: 0xC46E24 VA: 0xC46E24
private sealed class iTween.<TweenDelay>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 12045
{
	// Fields
	internal iTween $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDDF90 Offset: 0xCDDF90 VA: 0xCDDF90
	// RVA: 0x2B17444 Offset: 0x2B17444 VA: 0x2B17444
	public void .ctor() { }

	// RVA: 0x2B1744C Offset: 0x2B1744C VA: 0x2B1744C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDDFA0 Offset: 0xCDDFA0 VA: 0xCDDFA0
	// RVA: 0x2B17590 Offset: 0x2B17590 VA: 0x2B17590 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDDFB0 Offset: 0xCDDFB0 VA: 0xCDDFB0
	// RVA: 0x2B17598 Offset: 0x2B17598 VA: 0x2B17598 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDDFC0 Offset: 0xCDDFC0 VA: 0xCDDFC0
	// RVA: 0x2B175A0 Offset: 0x2B175A0 VA: 0x2B175A0 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDDFD0 Offset: 0xCDDFD0 VA: 0xCDDFD0
	// RVA: 0x2B175B4 Offset: 0x2B175B4 VA: 0x2B175B4 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46E34 Offset: 0xC46E34 VA: 0xC46E34
private sealed class iTween.<TweenRestart>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 12046
{
	// Fields
	internal iTween $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDDFE0 Offset: 0xCDDFE0 VA: 0xCDDFE0
	// RVA: 0x2B1761C Offset: 0x2B1761C VA: 0x2B1761C
	public void .ctor() { }

	// RVA: 0x2B17624 Offset: 0x2B17624 VA: 0x2B17624 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDDFF0 Offset: 0xCDDFF0 VA: 0xCDDFF0
	// RVA: 0x2B17784 Offset: 0x2B17784 VA: 0x2B17784 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDE000 Offset: 0xCDE000 VA: 0xCDE000
	// RVA: 0x2B1778C Offset: 0x2B1778C VA: 0x2B1778C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDE010 Offset: 0xCDE010 VA: 0xCDE010
	// RVA: 0x2B17794 Offset: 0x2B17794 VA: 0x2B17794 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDE020 Offset: 0xCDE020 VA: 0xCDE020
	// RVA: 0x2B177A8 Offset: 0x2B177A8 VA: 0x2B177A8 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46E44 Offset: 0xC46E44 VA: 0xC46E44
private sealed class iTween.<Start>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 12047
{
	// Fields
	internal iTween $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDE030 Offset: 0xCDE030 VA: 0xCDE030
	// RVA: 0x2B17270 Offset: 0x2B17270 VA: 0x2B17270
	public void .ctor() { }

	// RVA: 0x2B17278 Offset: 0x2B17278 VA: 0x2B17278 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDE040 Offset: 0xCDE040 VA: 0xCDE040
	// RVA: 0x2B173B8 Offset: 0x2B173B8 VA: 0x2B173B8 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDE050 Offset: 0xCDE050 VA: 0xCDE050
	// RVA: 0x2B173C0 Offset: 0x2B173C0 VA: 0x2B173C0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDE060 Offset: 0xCDE060 VA: 0xCDE060
	// RVA: 0x2B173C8 Offset: 0x2B173C8 VA: 0x2B173C8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDE070 Offset: 0xCDE070 VA: 0xCDE070
	// RVA: 0x2B173DC Offset: 0x2B173DC VA: 0x2B173DC Slot: 6
	public void Reset() { }
}

// Namespace: 
[RequireComponent] // RVA: 0xC2BBB0 Offset: 0xC2BBB0 VA: 0xC2BBB0
[AddComponentMenu] // RVA: 0xC2BBB0 Offset: 0xC2BBB0 VA: 0xC2BBB0
public class LanguageSelection : MonoBehaviour // TypeDefIndex: 12048
{
	// Fields
	private UIPopupList mList; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC84614 Offset: 0xC84614 VA: 0xC84614
	private static EventDelegate.Callback <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x11C99A8 Offset: 0x11C99A8 VA: 0x11C99A8
	public void .ctor() { }

	// RVA: 0x11C99B0 Offset: 0x11C99B0 VA: 0x11C99B0
	private void Awake() { }

	// RVA: 0x11C9C28 Offset: 0x11C9C28 VA: 0x11C9C28
	private void Start() { }

	// RVA: 0x11C9A0C Offset: 0x11C9A0C VA: 0x11C9A0C
	public void Refresh() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD6710 Offset: 0xCD6710 VA: 0xCD6710
	// RVA: 0x11C9D0C Offset: 0x11C9D0C VA: 0x11C9D0C
