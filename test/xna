	public const TutorialFlag.EventId TUTORIAL_LABEL_QUEST = 2;
	public const TutorialFlag.EventId TUTORIAL_LABEL_RESET_QUEST = 3;
	public const TutorialFlag.EventId TUTORIAL_LABEL_REWARD_HELP = 4;
	public const TutorialFlag.EventId TUTORIAL_LABEL_SHOP_HELP = 5;
	public const TutorialFlag.EventId TUTORIAL_LABEL_MISSION_SPOT_OPEN = 6;
	public const TutorialFlag.EventId TUTORIAL_LABEL_MISSION_OPEN_ANOTHER = 7;
	public const TutorialFlag.EventId TUTORIAL_LABEL_BATTLE_START = 8;
	public const TutorialFlag.EventId TUTORIAL_LABEL_BATTLE_TURN = 9;
	public const TutorialFlag.EventId TUTORIAL_LABEL_BATTLE_RESULT = 10;
	public const TutorialFlag.EventId TUTORIAL_LABEL_BATTLE_RESULT_WIN = 11;
	public const TutorialFlag.EventId TUTORIAL_LABEL_BATTLE_RESULT_LOSE = 12;
	public const TutorialFlag.EventId TUTORIAL_LABEL_QUEST2 = 13;
	public const TutorialFlag.EventId TUTORIAL_LABEL_SVTGET = 14;
	public const TutorialFlag.EventId TUTORIAL_LABEL_SHOP = 15;
	public const TutorialFlag.EventId TUTORIAL_LABEL_SUPPORT_SELECT = 16;
	public const TutorialFlag.EventId TUTORIAL_LABEL_EVENT_TAB1_EFFECT = 25;
	public const TutorialFlag.EventId TUTORIAL_LABEL_EVENT_TAB2_EFFECT = 26;
	public const TutorialFlag.EventId TUTORIAL_LABEL_EVENT_TAB3_EFFECT = 27;
	public const TutorialFlag.EventId TUTORIAL_LABEL_BATTLE_WAVE = 28;
	public const TutorialFlag.EventId TUTORIAL_LABEL_COSTUME = 29;
	public const TutorialFlag.EventId TUTORIAL_LABEL_OPEN_SORT_WINDOW = 30;
	public const TutorialFlag.EventId TUTORIAL_LABEL_GACHA = 32;
	public const TutorialFlag.EventId TUTORIAL_LABEL_SVT_COMBINE = 33;
	public const TutorialFlag.EventId TUTORIAL_LABEL_SVT_LIMIT_UP = 34;
	public const TutorialFlag.EventId TUTORIAL_LABEL_SVT_SKILL = 35;
	public const TutorialFlag.EventId TUTORIAL_LABEL_SVT_EQUIP = 36;
	public const TutorialFlag.EventId TUTORIAL_LABEL_SVT_NP = 37;
	public const TutorialFlag.EventId TUTORIAL_LABEL_SVT_LVEXCEED = 38;
	public const TutorialFlag.EventId TUTORIAL_LABEL_OPEN_CHOICE_WINDOW = 39;
	public const TutorialFlag.EventId TUTORIAL_LABEL_OPEN_SMART_CHOICE_WINDOW = 40;
	public const TutorialFlag.EventId TUTORIAL_LABEL_EVENT_TAB4 = 41;
	public const TutorialFlag.EventId TUTORIAL_LABEL_EVENT_TAB4_HELP = 42;
	public const TutorialFlag.EventId TUTORIAL_LABEL_OPEN_QUEST_START = 43;
	public const TutorialFlag.EventId TUTORIAL_LABEL_OPEN_SUPPORT_SETTING = 45;
	public const TutorialFlag.EventId TUTORIAL_LABEL_SVT_EQUIP_FRIENDSHIP_SELECT = 52;
	public const TutorialFlag.EventId SVT_COMBINE_LIMIT_SPECIAL = 53;
	public const TutorialFlag.EventId WAR_BOARD_MAP = 59;
	public const TutorialFlag.EventId WAR_BOARD_SETUP = 60;
	public const TutorialFlag.EventId WAR_BOARD_START = 61;
	public const TutorialFlag.EventId WAR_BOARD_MAP_SETUP = 62;
	public const TutorialFlag.EventId LOGIN_BONUS = 63;
	public const TutorialFlag.EventId OPEN_SPECIFIC_QUEST = 64;
	public const TutorialFlag.EventId QUEST4 = 65;
}

// Namespace: 
public enum TutorialFlag.ImageId // TypeDefIndex: 6219
{
	// Fields
	public int value__; // 0x0
	public const TutorialFlag.ImageId NULL = 0;
	public const TutorialFlag.ImageId SUMMON_TOP = 1;
	public const TutorialFlag.ImageId FIRST_EQUIP = 2;
	public const TutorialFlag.ImageId FORMATION_TOP = 3;
	public const TutorialFlag.ImageId EQUIP_INFO_1 = 4;
	public const TutorialFlag.ImageId EQUIP_INFO_2 = 5;
	public const TutorialFlag.ImageId SHOP_TOP = 6;
	public const TutorialFlag.ImageId COMBINE_TOP = 7;
	public const TutorialFlag.ImageId BATTLE_STATUS = 8;
	public const TutorialFlag.ImageId BATTLE_COMMANDSPELL = 9;
	public const TutorialFlag.ImageId BATTLE_MENU = 10;
	public const TutorialFlag.ImageId EVENT_GACHA = 11;
	public const TutorialFlag.ImageId EVENT_REWARD = 12;
	public const TutorialFlag.ImageId EVENT_MISSION = 13;
	public const TutorialFlag.ImageId EVENT_RAID = 14;
	public const TutorialFlag.ImageId TERMINAL_RAID_1 = 15;
	public const TutorialFlag.ImageId TERMINAL_RAID_2 = 16;
	public const TutorialFlag.ImageId TERMINAL_RAID_3 = 17;
	public const TutorialFlag.ImageId BOOST_ITEM = 18;
	public const TutorialFlag.ImageId ANONYMOUS_HELP = 19;
	public const TutorialFlag.ImageId RARE_PRI_HELP = 20;
	public const TutorialFlag.ImageId CALDEA_FOLDER_GATE = 21;
	public const TutorialFlag.ImageId CALDEA_FOLDER_WEEKLY = 22;
	public const TutorialFlag.ImageId SUPPORT_FORMATION = 23;
	public const TutorialFlag.ImageId CALDEA_FOLDER_FRIEND_STORY = 33;
	public const TutorialFlag.ImageId DECK_1 = 37;
	public const TutorialFlag.ImageId DECK_2 = 38;
	public const TutorialFlag.ImageId PRESENT_BOX_1 = 39;
	public const TutorialFlag.ImageId PRESENT_BOX_2 = 40;
	public const TutorialFlag.ImageId PRESENT_BOX_3 = 41;
	public const TutorialFlag.ImageId MASTER_MISSION = 42;
	public const TutorialFlag.ImageId SELECT_SORT_HELP = 43;
	public const TutorialFlag.ImageId SVT_SKILL_COMBINE_HELP = 44;
	public const TutorialFlag.ImageId GOLEM_SKILL_HELP = 45;
	public const TutorialFlag.ImageId OVERWRITE_LIMIT_HELP = 46;
	public const TutorialFlag.ImageId SPECIAL_ITEM_HELP = 47;
	public const TutorialFlag.ImageId COIN_ROOM = 57;
	public const TutorialFlag.ImageId DECK2_1 = 644;
}

// Namespace: 
public class UserShopFlag // TypeDefIndex: 6220
{
	// Methods

	// RVA: 0x1477490 Offset: 0x1477490 VA: 0x1477490
	public void .ctor() { }
}

// Namespace: 
public enum UserShopFlag.FlagKind // TypeDefIndex: 6221
{
	// Fields
	public int value__; // 0x0
	public const UserShopFlag.FlagKind RECEIVED_SHOP_ITEM = 1;
	public const UserShopFlag.FlagKind USED_ADD_BUFF_ITEM = 2;
	public const UserShopFlag.FlagKind RETURN_EXCHANGE_ITEM = 3;
	public const UserShopFlag.FlagKind RETURN_RARE_PRI_SHOP = 4;
}

// Namespace: 
public enum UserShopFlag.Flag // TypeDefIndex: 6222
{
	// Fields
	public int value__; // 0x0
	public const UserShopFlag.Flag RECEIVED_SHOP_ITEM = 2;
	public const UserShopFlag.Flag USED_ADD_BUFF_ITEM = 4;
	public const UserShopFlag.Flag RETURN_EXCHANGE_ITEM = 8;
	public const UserShopFlag.Flag RETURN_RARE_PRI_SHOP = 16;
}

// Namespace: 
public class UserStatusFlag // TypeDefIndex: 6223
{
	// Methods

	// RVA: 0x14779EC Offset: 0x14779EC VA: 0x14779EC
	public void .ctor() { }

	// RVA: 0x14779F4 Offset: 0x14779F4 VA: 0x14779F4
	public static int GetAutoSaleBitFlag(int flag) { }
}

// Namespace: 
public enum UserStatusFlag.Kind // TypeDefIndex: 6224
{
	// Fields
	public int value__; // 0x0
	public const UserStatusFlag.Kind COMBINE_MATERIAL_C = 0;
	public const UserStatusFlag.Kind COMBINE_MATERIAL_UC = 1;
	public const UserStatusFlag.Kind COMBINE_MATERIAL_R = 2;
	public const UserStatusFlag.Kind STATUS_UP_C = 3;
	public const UserStatusFlag.Kind STATUS_UP_UC = 4;
	public const UserStatusFlag.Kind STATUS_UP_R = 5;
	public const UserStatusFlag.Kind SVT_EQUIP_C = 6;
	public const UserStatusFlag.Kind SVT_EQUIP_UC = 7;
	public const UserStatusFlag.Kind SVT_EQUIP_R = 8;
	public const UserStatusFlag.Kind COSTUME_DISPLAY_SETTING = 9;
	public const UserStatusFlag.Kind FIRST_NP_SPEED = 10;
	public const UserStatusFlag.Kind FIX_MAIN_SUPPORT_DECK = 11;
	public const UserStatusFlag.Kind FIX_EVENT_SUPPORT_DECK = 12;
	public const UserStatusFlag.Kind QUEST_DROP_AUTOSEL_COMBINE_MATERIAL_C = 13;
	public const UserStatusFlag.Kind QUEST_DROP_AUTOSEL_COMBINE_MATERIAL_UC = 14;
	public const UserStatusFlag.Kind QUEST_DROP_AUTOSEL_COMBINE_MATERIAL_R = 15;
	public const UserStatusFlag.Kind QUEST_DROP_AUTOSEL_COMBINE_MATERIAL_SR = 16;
	public const UserStatusFlag.Kind RANDOM_LIMIT_COUNT = 17;
	public const UserStatusFlag.Kind RANDOM_LIMIT_COUNT_SUPPORT = 18;
	public const UserStatusFlag.Kind SVT_LIMIT_SPOILER_PROTECTION = 19;
	public const UserStatusFlag.Kind SVT_LIMIT_DISPLAY_SETTING = 20;
	public const UserStatusFlag.Kind BIRTHDAY_SETTING = 21;
	public const UserStatusFlag.Kind ISSUED_DELETE_PASSWORD = 22;
	public const UserStatusFlag.Kind DELETED = 23;
}

// Namespace: 
public enum UserStatusFlag.Mask // TypeDefIndex: 6225
{
	// Fields
	public int value__; // 0x0
	public const UserStatusFlag.Mask COMBINE_MATERIAL_C = 1;
	public const UserStatusFlag.Mask COMBINE_MATERIAL_UC = 2;
	public const UserStatusFlag.Mask COMBINE_MATERIAL_R = 4;
	public const UserStatusFlag.Mask STATUS_UP_C = 8;
	public const UserStatusFlag.Mask STATUS_UP_UC = 16;
	public const UserStatusFlag.Mask STATUS_UP_R = 32;
	public const UserStatusFlag.Mask SVT_EQUIP_C = 64;
	public const UserStatusFlag.Mask SVT_EQUIP_UC = 128;
	public const UserStatusFlag.Mask SVT_EQUIP_R = 256;
	public const UserStatusFlag.Mask COSTUME_DISPLAY_SETTING = 512;
	public const UserStatusFlag.Mask FIRST_NP_SPEED = 1024;
	public const UserStatusFlag.Mask FIX_MAIN_SUPPORT_DECK = 2048;
	public const UserStatusFlag.Mask FIX_EVENT_SUPPORT_DECK = 4096;
	public const UserStatusFlag.Mask QUEST_DROP_AUTOSEL_COMBINE_MATERIAL_C = 8192;
	public const UserStatusFlag.Mask QUEST_DROP_AUTOSEL_COMBINE_MATERIAL_UC = 16384;
	public const UserStatusFlag.Mask QUEST_DROP_AUTOSEL_COMBINE_MATERIAL_R = 32768;
	public const UserStatusFlag.Mask QUEST_DROP_AUTOSEL_COMBINE_MATERIAL_SR = 65536;
	public const UserStatusFlag.Mask RANDOM_LIMIT_COUNT = 131072;
	public const UserStatusFlag.Mask RANDOM_LIMIT_COUNT_SUPPORT = 262144;
	public const UserStatusFlag.Mask SVT_LIMIT_SPOILER_PROTECTION = 524288;
	public const UserStatusFlag.Mask SVT_LIMIT_DISPLAY_SETTING = 1048576;
	public const UserStatusFlag.Mask BIRTHDAY_SETTING = 2097152;
	public const UserStatusFlag.Mask ISSUED_DELETE_PASSWORD = 4194304;
	public const UserStatusFlag.Mask DELETED = 8388608;
}

// Namespace: 
public class Voice // TypeDefIndex: 6226
{
	// Fields
	protected static Dictionary<Voice.BATTLE, string> filelist; // 0x0

	// Methods

	// RVA: 0x1479DDC Offset: 0x1479DDC VA: 0x1479DDC
	public void .ctor() { }

	// RVA: 0x1479DE4 Offset: 0x1479DE4 VA: 0x1479DE4
	public static string getFileName(Voice.BATTLE type) { }

	// RVA: 0x1479ED0 Offset: 0x1479ED0 VA: 0x1479ED0
	private static void .cctor() { }
}

// Namespace: 
public enum Voice.BATTLE // TypeDefIndex: 6227
{
	// Fields
	public int value__; // 0x0
	public const Voice.BATTLE NONE = 0;
	public const Voice.BATTLE ATTACK1 = 10;
	public const Voice.BATTLE ATTACK2 = 11;
	public const Voice.BATTLE ATTACK3 = 12;
	public const Voice.BATTLE EX1 = 20;
	public const Voice.BATTLE EX2 = 21;
	public const Voice.BATTLE EX3 = 22;
	public const Voice.BATTLE HOUGU1_1 = 111;
	public const Voice.BATTLE HOUGU1_2 = 112;
	public const Voice.BATTLE HOUGU1_3 = 113;
	public const Voice.BATTLE HOUGU1_4 = 114;
	public const Voice.BATTLE HOUGU1_5 = 115;
	public const Voice.BATTLE HOUGU2_1 = 121;
	public const Voice.BATTLE HOUGU2_2 = 122;
	public const Voice.BATTLE HOUGU2_3 = 123;
	public const Voice.BATTLE HOUGU2_4 = 124;
	public const Voice.BATTLE HOUGU2_5 = 125;
	public const Voice.BATTLE HOUGU3_1 = 131;
	public const Voice.BATTLE HOUGU3_2 = 132;
	public const Voice.BATTLE HOUGU3_3 = 133;
	public const Voice.BATTLE HOUGU3_4 = 134;
	public const Voice.BATTLE HOUGU3_5 = 135;
	public const Voice.BATTLE SKILL1 = 31;
	public const Voice.BATTLE SKILL2 = 32;
	public const Voice.BATTLE START1 = 41;
	public const Voice.BATTLE START2 = 42;
	public const Voice.BATTLE WIN1 = 51;
	public const Voice.BATTLE WIN2 = 52;
	public const Voice.BATTLE DAMAGE1 = 61;
	public const Voice.BATTLE HDAMAGE1 = 71;
	public const Voice.BATTLE DEAD1 = 81;
	public const Voice.BATTLE DEAD2 = 82;
	public const Voice.BATTLE CARD1 = 201;
	public const Voice.BATTLE CARD2 = 202;
	public const Voice.BATTLE CARD3 = 203;
	public const Voice.BATTLE HCARD1 = 211;
	public const Voice.BATTLE HCARD2 = 212;
	public const Voice.BATTLE HCARD3 = 213;
	public const Voice.BATTLE EENTRY1 = 214;
	public const Voice.BATTLE EENTRY2 = 215;
	public const Voice.BATTLE HCARD4 = 216;
	public const Voice.BATTLE ATTACK4 = 217;
	public const Voice.BATTLE ATTACK5 = 218;
	public const Voice.BATTLE ATTACK6 = 219;
	public const Voice.BATTLE EX4 = 220;
	public const Voice.BATTLE EX5 = 221;
	public const Voice.BATTLE EX6 = 222;
	public const Voice.BATTLE SKILL3 = 223;
	public const Voice.BATTLE SKILL4 = 224;
	public const Voice.BATTLE START3 = 225;
	public const Voice.BATTLE START4 = 226;
	public const Voice.BATTLE WIN3 = 227;
	public const Voice.BATTLE WIN4 = 228;
	public const Voice.BATTLE DAMAGE2 = 229;
	public const Voice.BATTLE DEAD3 = 230;
	public const Voice.BATTLE DEAD4 = 231;
	public const Voice.BATTLE EENTRY_310 = 232;
	public const Voice.BATTLE EENTRY_320 = 233;
	public const Voice.BATTLE EENTRY_330 = 234;
	public const Voice.BATTLE EENTRY_331 = 235;
	public const Voice.BATTLE EENTRY_340 = 236;
	public const Voice.BATTLE EENTRY_341 = 237;
	public const Voice.BATTLE EENTRY_342 = 238;
	public const Voice.BATTLE HDAMAGE2 = 239;
	public const Voice.BATTLE ATTACK7 = 240;
	public const Voice.BATTLE ATTACK8 = 241;
	public const Voice.BATTLE ATTACK9 = 242;
	public const Voice.BATTLE SKILL5 = 243;
	public const Voice.BATTLE SKILL6 = 244;
	public const Voice.BATTLE CARD4 = 245;
	public const Voice.BATTLE CARD5 = 246;
	public const Voice.BATTLE CARD6 = 247;
	public const Voice.BATTLE EX7 = 248;
	public const Voice.BATTLE EX8 = 249;
	public const Voice.BATTLE EX9 = 250;
	public const Voice.BATTLE HCARD5 = 251;
	public const Voice.BATTLE HEROINECHANGE_HCARD = 252;
	public const Voice.BATTLE HCARD6 = 253;
	public const Voice.BATTLE SKILL7 = 254;
	public const Voice.BATTLE SKILL8 = 255;
	public const Voice.BATTLE SKILL9 = 256;
	public const Voice.BATTLE EX10 = 257;
	public const Voice.BATTLE EX11 = 258;
	public const Voice.BATTLE EX12 = 259;
	public const Voice.BATTLE EX13 = 260;
	public const Voice.BATTLE EX14 = 261;
	public const Voice.BATTLE EX15 = 262;
	public const Voice.BATTLE EX16 = 263;
	public const Voice.BATTLE EX17 = 264;
	public const Voice.BATTLE EX18 = 265;
	public const Voice.BATTLE ATTACK10 = 266;
	public const Voice.BATTLE ATTACK11 = 267;
	public const Voice.BATTLE ATTACK12 = 268;
	public const Voice.BATTLE ATTACK13 = 269;
	public const Voice.BATTLE ATTACK14 = 270;
	public const Voice.BATTLE ATTACK15 = 271;
	public const Voice.BATTLE ATTACK16 = 272;
	public const Voice.BATTLE ATTACK17 = 273;
	public const Voice.BATTLE ATTACK18 = 274;
	public const Voice.BATTLE START5 = 275;
	public const Voice.BATTLE START6 = 276;
	public const Voice.BATTLE START7 = 277;
	public const Voice.BATTLE START8 = 278;
	public const Voice.BATTLE ATTACK19 = 279;
	public const Voice.BATTLE ATTACK20 = 280;
	public const Voice.BATTLE ATTACK21 = 281;
	public const Voice.BATTLE ATTACK22 = 282;
	public const Voice.BATTLE ATTACK23 = 283;
	public const Voice.BATTLE ATTACK24 = 284;
	public const Voice.BATTLE DEAD5 = 285;
	public const Voice.BATTLE DEAD6 = 286;
	public const Voice.BATTLE DEAD7 = 287;
	public const Voice.BATTLE DEAD8 = 288;
	public const Voice.BATTLE WIN5 = 289;
	public const Voice.BATTLE WIN6 = 290;
	public const Voice.BATTLE WIN7 = 291;
	public const Voice.BATTLE WIN8 = 292;
	public const Voice.BATTLE DAMAGE3 = 293;
	public const Voice.BATTLE DAMAGE4 = 294;
	public const Voice.BATTLE HDAMAGE3 = 295;
	public const Voice.BATTLE HDAMAGE4 = 296;
	public const Voice.BATTLE COUNTER1 = 297;
	public const Voice.BATTLE COUNTER2 = 298;
	public const Voice.BATTLE COUNTER3 = 299;
}

// Namespace: 
public class VoiceClosedType // TypeDefIndex: 6228
{
	// Methods

	// RVA: 0x147BAE0 Offset: 0x147BAE0 VA: 0x147BAE0
	public void .ctor() { }
}

// Namespace: 
public enum VoiceClosedType.Type // TypeDefIndex: 6229
{
	// Fields
	public int value__; // 0x0
	public const VoiceClosedType.Type GRAY = 1;
	public const VoiceClosedType.Type HIDE = 2;
}

// Namespace: 
public class VoiceCondType // TypeDefIndex: 6230
{
	// Methods

	// RVA: 0x147C558 Offset: 0x147C558 VA: 0x147C558
	public void .ctor() { }
}

// Namespace: 
public enum VoiceCondType.Type // TypeDefIndex: 6231
{
	// Fields
	public int value__; // 0x0
	public const VoiceCondType.Type BIRTH_DAY = 1;
	public const VoiceCondType.Type EVENT = 2;
	public const VoiceCondType.Type FRIENDSHIP = 3;
	public const VoiceCondType.Type SVT_GET = 4;
	public const VoiceCondType.Type SVT_GROUP = 5;
	public const VoiceCondType.Type QUEST_CLEAR = 6;
	public const VoiceCondType.Type NOT_QUEST_CLEAR = 7;
	public const VoiceCondType.Type LEVEL_UP = 8;
	public const VoiceCondType.Type LIMIT_COUNT = 9;
	public const VoiceCondType.Type LIMIT_COUNT_COMMON = 10;
	public const VoiceCondType.Type COUNT_STOP = 11;
	public const VoiceCondType.Type ISNEW_WAR = 12;
	public const VoiceCondType.Type EVENT_END = 13;
	public const VoiceCondType.Type EVENT_NOEND = 14;
	public const VoiceCondType.Type EVENT_MISSION_ACTION = 15;
	public const VoiceCondType.Type MASTER_MISSION = 16;
	public const VoiceCondType.Type LIMIT_COUNT_ABOVE = 17;
	public const VoiceCondType.Type EVENT_SHOP_PURCHASE = 18;
	public const VoiceCondType.Type EVENT_PERIOD = 19;
	public const VoiceCondType.Type FRIENDSHIP_ABOVE = 20;
	public const VoiceCondType.Type SPACIFIC_SHOP_PURCHASE = 21;
	public const VoiceCondType.Type FRIENDSHIP_BELOW = 22;
	public const VoiceCondType.Type COSTUME = 23;
	public const VoiceCondType.Type LEVEL_UP_LIMIT_COUNT = 24;
	public const VoiceCondType.Type LEVEL_UP_LIMIT_COUNT_ABOVE = 25;
	public const VoiceCondType.Type LEVEL_UP_LIMIT_COUNT_BELOW = 26;
}

// Namespace: 
public static class FileMergeAndSplit // TypeDefIndex: 6232
{
	// Fields
	public const int SplitSize = 1048576;
	private const int ReadSize = 104857;
	public const char Separator = '\x2e';
	public static readonly string PathCRCFileName; // 0x0
	private const long breakTime = 300;

	// Methods

	// RVA: 0x136A130 Offset: 0x136A130 VA: 0x136A130
	public static void Split(string targetFilePath, string outputPath) { }

	// RVA: 0x136A8C0 Offset: 0x136A8C0 VA: 0x136A8C0
	private static void .cctor() { }
}

// Namespace: 
public class FileMergeAndSplit.Merge // TypeDefIndex: 6233
{
	// Fields
	private List<string> splitFileList; // 0x10
	private string outputFilePath; // 0x18
	private float progress; // 0x20
	private bool isMerge; // 0x24
	private bool isError; // 0x25

	// Methods

	// RVA: 0x136B1EC Offset: 0x136B1EC VA: 0x136B1EC
	public void .ctor(List<string> splitFileList, string outputFilePath) { }

	// RVA: 0x136B22C Offset: 0x136B22C VA: 0x136B22C
	public float GetProgress() { }

	// RVA: 0x136B234 Offset: 0x136B234 VA: 0x136B234
	public bool IsError() { }

	// RVA: 0x136B23C Offset: 0x136B23C VA: 0x136B23C
	public bool IsMerge() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8B14 Offset: 0xCC8B14 VA: 0xCC8B14
	// RVA: 0x136B244 Offset: 0x136B244 VA: 0x136B244
	public IEnumerator Run(Action<Exception> errorCallBack) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42614 Offset: 0xC42614 VA: 0xC42614
private sealed class FileMergeAndSplit.Merge.<Run>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6234
{
	// Fields
	internal DirectoryInfo <info>__0; // 0x10
	internal long <freeSize>__0; // 0x18
	internal Action<Exception> errorCallBack; // 0x20
	internal FileStream <mergeFileStream>__1; // 0x28
	internal int <readByte>__2; // 0x30
	internal long <leftByte>__2; // 0x38
	internal byte[] <readBuf>__2; // 0x40
	internal int <count>__2; // 0x48
	internal Stopwatch <sw>__2; // 0x50
	internal List.Enumerator<string> $locvar0; // 0x58
	internal string <splitFile>__3; // 0x70
	internal FileMergeAndSplit.Merge $this; // 0x78
	internal object $current; // 0x80
	internal bool $disposing; // 0x88
	internal int $PC; // 0x8C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8410 Offset: 0xCD8410 VA: 0xCD8410
	// RVA: 0x136B2D8 Offset: 0x136B2D8 VA: 0x136B2D8
	public void .ctor() { }

	// RVA: 0x136B2E0 Offset: 0x136B2E0 VA: 0x136B2E0 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8420 Offset: 0xCD8420 VA: 0xCD8420
	// RVA: 0x136BE18 Offset: 0x136BE18 VA: 0x136BE18 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8430 Offset: 0xCD8430 VA: 0xCD8430
	// RVA: 0x136BE20 Offset: 0x136BE20 VA: 0x136BE20 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8440 Offset: 0xCD8440 VA: 0xCD8440
	// RVA: 0x136BE28 Offset: 0x136BE28 VA: 0x136BE28 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8450 Offset: 0xCD8450 VA: 0xCD8450
	// RVA: 0x136BEE4 Offset: 0x136BEE4 VA: 0x136BEE4 Slot: 6
	public void Reset() { }

	// RVA: 0x136BD60 Offset: 0x136BD60 VA: 0x136BD60
	private void <>__Finally0() { }
}

// Namespace: 
public class FileMergeAndSplit.CRCChecker // TypeDefIndex: 6235
{
	// Fields
	private string outputFilePath; // 0x10
	private List<uint> crcList; // 0x18
	private bool isCRCMatch; // 0x20
	private bool isCRCCheckEnd; // 0x21

	// Methods

	// RVA: 0x136A91C Offset: 0x136A91C VA: 0x136A91C
	public void .ctor(string outputFilePath, List<uint> crcList) { }

	// RVA: 0x136A958 Offset: 0x136A958 VA: 0x136A958
	public bool IsCRCCheck() { }

	// RVA: 0x136A960 Offset: 0x136A960 VA: 0x136A960
	public bool IsCRCMatch() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8B24 Offset: 0xCC8B24 VA: 0xCC8B24
	// RVA: 0x136A968 Offset: 0x136A968 VA: 0x136A968
	public IEnumerator Run() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42624 Offset: 0xC42624 VA: 0xC42624
private sealed class FileMergeAndSplit.CRCChecker.<Run>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6236
{
	// Fields
	internal int <readCheckByte>__0; // 0x10
	internal FileStream <mergeFileStream>__1; // 0x18
	internal long <leftByte>__2; // 0x20
	internal byte[] <readBuf>__2; // 0x28
	internal Stopwatch <sw>__2; // 0x30
	internal List.Enumerator<uint> $locvar0; // 0x38
	internal uint <crc>__3; // 0x50
	internal int <readByte>__4; // 0x54
	internal int <restReadByte>__4; // 0x58
	internal FileMergeAndSplit.CRCChecker $this; // 0x60
	internal object $current; // 0x68
	internal bool $disposing; // 0x70
	internal int $PC; // 0x74

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8460 Offset: 0xCD8460 VA: 0xCD8460
	// RVA: 0x136A9D8 Offset: 0x136A9D8 VA: 0x136A9D8
	public void .ctor() { }

	// RVA: 0x136A9E0 Offset: 0x136A9E0 VA: 0x136A9E0 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8470 Offset: 0xCD8470 VA: 0xCD8470
	// RVA: 0x136B0B8 Offset: 0x136B0B8 VA: 0x136B0B8 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8480 Offset: 0xCD8480 VA: 0xCD8480
	// RVA: 0x136B0C0 Offset: 0x136B0C0 VA: 0x136B0C0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8490 Offset: 0xCD8490 VA: 0xCD8490
	// RVA: 0x136B0C8 Offset: 0x136B0C8 VA: 0x136B0C8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD84A0 Offset: 0xCD84A0 VA: 0xCD84A0
	// RVA: 0x136B184 Offset: 0x136B184 VA: 0x136B184 Slot: 6
	public void Reset() { }

	// RVA: 0x136B000 Offset: 0x136B000 VA: 0x136B000
	private void <>__Finally0() { }
}

// Namespace: 
public class MovieFileMerge : MonoBehaviour // TypeDefIndex: 6237
{
	// Fields
	private string assetFolderURL; // 0x18
	private string assetFolder; // 0x20
	private string outputSplitFileFolder; // 0x28
	private string outputMergeFile; // 0x30
	private string outputMergeFileCRC; // 0x38
	private bool isDownloadCancel; // 0x40
	private bool isErrorDialog; // 0x41
	private UnityWebRequest loader; // 0x48
	private string downloadingURL; // 0x50
	private uint downloadingCRC; // 0x58
	private Dictionary<string, uint> AllDownLoadFilePathCRCDictionary; // 0x60
	private Dictionary<string, uint> RequireDownLoadFilePathCRCDictionary; // 0x68
	private int downloadProgress; // 0x70
	private float mergeProgress; // 0x74
	private bool isDownloading; // 0x78
	private FileMergeAndSplit.Merge mergeClass; // 0x80
	private FileMergeAndSplit.CRCChecker crcCheckerClass; // 0x88

	// Methods

	// RVA: 0x1199428 Offset: 0x1199428 VA: 0x1199428
	public void .ctor() { }

	// RVA: 0x11994B8 Offset: 0x11994B8 VA: 0x11994B8
	public bool ExistCRCCheckedMovieFile(string assetFolderURL) { }

	// RVA: 0x1199700 Offset: 0x1199700 VA: 0x1199700
	public bool IsCRCMatch() { }

	// RVA: 0x1199680 Offset: 0x1199680 VA: 0x1199680
	public static string GetLocalDataPath() { }

	// RVA: 0x1199714 Offset: 0x1199714 VA: 0x1199714
	public double GetTotalRequireSize() { }

	// RVA: 0x11997AC Offset: 0x11997AC VA: 0x11997AC
	public double GetDownloadSize() { }

	// RVA: 0x1199818 Offset: 0x1199818 VA: 0x1199818
	public float GetDownloadProgress() { }

	// RVA: 0x11998B8 Offset: 0x11998B8 VA: 0x11998B8
	public bool IsDownload() { }

	// RVA: 0x11998C0 Offset: 0x11998C0 VA: 0x11998C0
	public bool IsDownloadCancel() { }

	// RVA: 0x11998C8 Offset: 0x11998C8 VA: 0x11998C8
	public float GetMergeProgress() { }

	// RVA: 0x11998E0 Offset: 0x11998E0 VA: 0x11998E0
	public bool IsMerge() { }

	// RVA: 0x11998F4 Offset: 0x11998F4 VA: 0x11998F4
	public bool IsMergeError() { }

	// RVA: 0x1199908 Offset: 0x1199908 VA: 0x1199908
	public bool IsCRCCheckEnd() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8B34 Offset: 0xCC8B34 VA: 0xCC8B34
	// RVA: 0x119991C Offset: 0x119991C VA: 0x119991C
	public IEnumerator PlayMP4() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8B44 Offset: 0xCC8B44 VA: 0xCC8B44
	// RVA: 0x1199994 Offset: 0x1199994 VA: 0x1199994
	public IEnumerator PlayMP4(string filePath, FullScreenMovieControlMode mode) { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8B54 Offset: 0xCC8B54 VA: 0xCC8B54
	// RVA: 0x1199A30 Offset: 0x1199A30 VA: 0x1199A30
	private IEnumerator PlayCRIMovie(string filePath) { }

	// RVA: 0x1199AA8 Offset: 0x1199AA8 VA: 0x1199AA8
	public void Initialize(string assetFolderURL) { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8B64 Offset: 0xCC8B64 VA: 0xCC8B64
	// RVA: 0x1199D9C Offset: 0x1199D9C VA: 0x1199D9C
	public IEnumerator CRCDownloadAndCheck() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8B74 Offset: 0xCC8B74 VA: 0xCC8B74
	// RVA: 0x1199E14 Offset: 0x1199E14 VA: 0x1199E14
	public IEnumerator DownloadMovie() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8B84 Offset: 0xCC8B84 VA: 0xCC8B84
	// RVA: 0x1199E8C Offset: 0x1199E8C VA: 0x1199E8C
	public IEnumerator Merge() { }

	// RVA: 0x1199F04 Offset: 0x1199F04 VA: 0x1199F04
	public void DownloadCancel() { }

	// RVA: 0x1199F10 Offset: 0x1199F10 VA: 0x1199F10
	public static void Delete(string folder) { }

	// RVA: 0x119A078 Offset: 0x119A078 VA: 0x119A078
	public static void Delete() { }

	// RVA: 0x1199D14 Offset: 0x1199D14 VA: 0x1199D14
	private string GetLocalFolderPath() { }

	// RVA: 0x119A0AC Offset: 0x119A0AC VA: 0x119A0AC
	private Dictionary<string, uint> GetNeedDownloadDictionary() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8B94 Offset: 0xCC8B94 VA: 0xCC8B94
	// RVA: 0x119A3DC Offset: 0x119A3DC VA: 0x119A3DC
	private IEnumerator Download(string fileName, uint crc = 0) { }

	// RVA: 0x119A490 Offset: 0x119A490 VA: 0x119A490
	private Dictionary<string, uint> CreateDic(string dataPath) { }

	// RVA: 0x119A660 Offset: 0x119A660 VA: 0x119A660
	public List<string> GetSplitFileList() { }

	// RVA: 0x119A86C Offset: 0x119A86C VA: 0x119A86C
	private void AssetLoadLogError(string errorCode) { }

	// RVA: 0x119ACC0 Offset: 0x119ACC0 VA: 0x119ACC0
	protected void EndMergeRetryDialog(bool isDecide) { }

	// RVA: 0x119AD88 Offset: 0x119AD88 VA: 0x119AD88
	protected void EndRetryDialog(bool isDecide) { }

	// RVA: 0x119AD98 Offset: 0x119AD98 VA: 0x119AD98
	protected void EndWarningDialog(bool isDecide) { }

	// RVA: 0x119ADA0 Offset: 0x119ADA0 VA: 0x119ADA0
	protected void EndRebootDialog(bool isDecide) { }

	// RVA: 0x119ACD0 Offset: 0x119ACD0 VA: 0x119ACD0
	private void Reboot() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42634 Offset: 0xC42634 VA: 0xC42634
private sealed class MovieFileMerge.<PlayMP4>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6238
{
	// Fields
	internal MovieFileMerge $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD84B0 Offset: 0xCD84B0 VA: 0xCD84B0
	// RVA: 0x119998C Offset: 0x119998C VA: 0x119998C
	public void .ctor() { }

	// RVA: 0x119D6D8 Offset: 0x119D6D8 VA: 0x119D6D8 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD84C0 Offset: 0xCD84C0 VA: 0xCD84C0
	// RVA: 0x119D78C Offset: 0x119D78C VA: 0x119D78C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD84D0 Offset: 0xCD84D0 VA: 0xCD84D0
	// RVA: 0x119D794 Offset: 0x119D794 VA: 0x119D794 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD84E0 Offset: 0xCD84E0 VA: 0xCD84E0
	// RVA: 0x119D79C Offset: 0x119D79C VA: 0x119D79C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD84F0 Offset: 0xCD84F0 VA: 0xCD84F0
	// RVA: 0x119D7B0 Offset: 0x119D7B0 VA: 0x119D7B0 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42644 Offset: 0xC42644 VA: 0xC42644
private sealed class MovieFileMerge.<PlayMP4>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6239
{
	// Fields
	internal string filePath; // 0x10
	internal MovieFileMerge $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8500 Offset: 0xCD8500 VA: 0xCD8500
	// RVA: 0x1199A28 Offset: 0x1199A28 VA: 0x1199A28
	public void .ctor() { }

	// RVA: 0x119D818 Offset: 0x119D818 VA: 0x119D818 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8510 Offset: 0xCD8510 VA: 0xCD8510
	// RVA: 0x119D960 Offset: 0x119D960 VA: 0x119D960 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8520 Offset: 0xCD8520 VA: 0xCD8520
	// RVA: 0x119D968 Offset: 0x119D968 VA: 0x119D968 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8530 Offset: 0xCD8530 VA: 0xCD8530
	// RVA: 0x119D970 Offset: 0x119D970 VA: 0x119D970 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8540 Offset: 0xCD8540 VA: 0xCD8540
	// RVA: 0x119D984 Offset: 0x119D984 VA: 0x119D984 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42654 Offset: 0xC42654 VA: 0xC42654
private sealed class MovieFileMerge.<PlayCRIMovie>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6240
{
	// Fields
	internal GameObject <prefab>__0; // 0x10
	internal GameObject <obj>__0; // 0x18
	internal string filePath; // 0x20
	internal object $current; // 0x28
	internal bool $disposing; // 0x30
	internal int $PC; // 0x34
	private MovieFileMerge.<PlayCRIMovie>c__Iterator2.<PlayCRIMovie>c__AnonStorey7 $locvar0; // 0x38

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8550 Offset: 0xCD8550 VA: 0xCD8550
	// RVA: 0x1199AA0 Offset: 0x1199AA0 VA: 0x1199AA0
	public void .ctor() { }

	// RVA: 0x119D36C Offset: 0x119D36C VA: 0x119D36C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8560 Offset: 0xCD8560 VA: 0xCD8560
	// RVA: 0x119D610 Offset: 0x119D610 VA: 0x119D610 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8570 Offset: 0xCD8570 VA: 0xCD8570
	// RVA: 0x119D618 Offset: 0x119D618 VA: 0x119D618 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8580 Offset: 0xCD8580 VA: 0xCD8580
	// RVA: 0x119D620 Offset: 0x119D620 VA: 0x119D620 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8590 Offset: 0xCD8590 VA: 0xCD8590
	// RVA: 0x119D634 Offset: 0x119D634 VA: 0x119D634 Slot: 6
	public void Reset() { }
}

// Namespace: 
private sealed class MovieFileMerge.<PlayCRIMovie>c__Iterator2.<PlayCRIMovie>c__AnonStorey7 // TypeDefIndex: 6241
{
	// Fields
	internal CRIMoviePlayer player; // 0x10
	internal bool wait; // 0x18

	// Methods

	// RVA: 0x119D608 Offset: 0x119D608 VA: 0x119D608
	public void .ctor() { }

	// RVA: 0x119D69C Offset: 0x119D69C VA: 0x119D69C
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42664 Offset: 0xC42664 VA: 0xC42664
private sealed class MovieFileMerge.<CRCDownloadAndCheck>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6242
{
	// Fields
	internal MovieFileMerge $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD85A0 Offset: 0xCD85A0 VA: 0xCD85A0
	// RVA: 0x1199E0C Offset: 0x1199E0C VA: 0x1199E0C
	public void .ctor() { }

	// RVA: 0x119ADA4 Offset: 0x119ADA4 VA: 0x119ADA4 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD85B0 Offset: 0xCD85B0 VA: 0xCD85B0
	// RVA: 0x119B090 Offset: 0x119B090 VA: 0x119B090 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD85C0 Offset: 0xCD85C0 VA: 0xCD85C0
	// RVA: 0x119B098 Offset: 0x119B098 VA: 0x119B098 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD85D0 Offset: 0xCD85D0 VA: 0xCD85D0
	// RVA: 0x119B0A0 Offset: 0x119B0A0 VA: 0x119B0A0 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD85E0 Offset: 0xCD85E0 VA: 0xCD85E0
	// RVA: 0x119B0B4 Offset: 0x119B0B4 VA: 0x119B0B4 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42674 Offset: 0xC42674 VA: 0xC42674
private sealed class MovieFileMerge.<DownloadMovie>c__Iterator4 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6243
{
	// Fields
	internal Dictionary.Enumerator<string, uint> $locvar0; // 0x10
	internal KeyValuePair<string, uint> <dic>__1; // 0x30
	internal MovieFileMerge $this; // 0x40
	internal object $current; // 0x48
	internal bool $disposing; // 0x50
	internal int $PC; // 0x54

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD85F0 Offset: 0xCD85F0 VA: 0xCD85F0
	// RVA: 0x1199E84 Offset: 0x1199E84 VA: 0x1199E84
	public void .ctor() { }

	// RVA: 0x119CA8C Offset: 0x119CA8C VA: 0x119CA8C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8600 Offset: 0xCD8600 VA: 0xCD8600
	// RVA: 0x119CD10 Offset: 0x119CD10 VA: 0x119CD10 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8610 Offset: 0xCD8610 VA: 0xCD8610
	// RVA: 0x119CD18 Offset: 0x119CD18 VA: 0x119CD18 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8620 Offset: 0xCD8620 VA: 0xCD8620
	// RVA: 0x119CD20 Offset: 0x119CD20 VA: 0x119CD20 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8630 Offset: 0xCD8630 VA: 0xCD8630
	// RVA: 0x119CD98 Offset: 0x119CD98 VA: 0x119CD98 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42684 Offset: 0xC42684 VA: 0xC42684
private sealed class MovieFileMerge.<Merge>c__Iterator5 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6244
{
	// Fields
	internal List<string> <splitFileList>__0; // 0x10
	internal MovieFileMerge $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8640 Offset: 0xCD8640 VA: 0xCD8640
	// RVA: 0x1199EFC Offset: 0x1199EFC VA: 0x1199EFC
	public void .ctor() { }

	// RVA: 0x119CE00 Offset: 0x119CE00 VA: 0x119CE00 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8650 Offset: 0xCD8650 VA: 0xCD8650
	// RVA: 0x119D120 Offset: 0x119D120 VA: 0x119D120 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8660 Offset: 0xCD8660 VA: 0xCD8660
	// RVA: 0x119D128 Offset: 0x119D128 VA: 0x119D128 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8670 Offset: 0xCD8670 VA: 0xCD8670
	// RVA: 0x119D130 Offset: 0x119D130 VA: 0x119D130 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8680 Offset: 0xCD8680 VA: 0xCD8680
	// RVA: 0x119D144 Offset: 0x119D144 VA: 0x119D144 Slot: 6
	public void Reset() { }

	// RVA: 0x119D1AC Offset: 0x119D1AC VA: 0x119D1AC
	internal void <>m__0(Exception e) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42694 Offset: 0xC42694 VA: 0xC42694
private sealed class MovieFileMerge.<Download>c__Iterator6 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6245
{
	// Fields
	internal string fileName; // 0x10
	internal uint crc; // 0x18
	internal string <dlFilePath>__0; // 0x20
	internal int <autoRetryCount>__0; // 0x28
	internal bool <isDownload>__0; // 0x2C
	internal byte[] <readData>__1; // 0x30
	internal float <requestTime>__2; // 0x38
	internal int <oldProgress>__2; // 0x3C
	internal float <loadProgress>__2; // 0x40
	internal WaitForEndOfFrame <wait>__2; // 0x48
	internal bool <isAutoRetry>__2; // 0x50
	internal bool <isCrcError>__2; // 0x51
