	public virtual void Invoke(bool isDecide) { }

	// RVA: 0x172D508 Offset: 0x172D508 VA: 0x172D508 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isDecide, AsyncCallback callback, object object) { }

	// RVA: 0x172D598 Offset: 0x172D598 VA: 0x172D598 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ScrPlayerBP : MonoBehaviour // TypeDefIndex: 11259
{
	// Fields
	private static readonly string RP_OVER_TXT_COLOR_STR; // 0x0
	private static readonly int RP_COUNT_STOP; // 0x8
	private static readonly string[] RP_FRAME_SP; // 0x10
	private static readonly int[] RP_GRID_WIDTH; // 0x18
	private static readonly int[] RP_FRAME_DEPTH; // 0x20
	[SerializeField] // RVA: 0xC7DCB0 Offset: 0xC7DCB0 VA: 0xC7DCB0
	private UISprite mRpRecoverBtnSp; // 0x18
	private bool mIsEnableRpRecoverBtn; // 0x20
	[SerializeField] // RVA: 0xC7DCC0 Offset: 0xC7DCC0 VA: 0xC7DCC0
	private UIGrid rpGrid; // 0x28
	[SerializeField] // RVA: 0xC7DCD0 Offset: 0xC7DCD0 VA: 0xC7DCD0
	private UISprite rpFrameL; // 0x30
	[SerializeField] // RVA: 0xC7DCE0 Offset: 0xC7DCE0 VA: 0xC7DCE0
	private UISprite rpFrameR; // 0x38
	[SerializeField] // RVA: 0xC7DCF0 Offset: 0xC7DCF0 VA: 0xC7DCF0
	private UILabel mcRpStrP; // 0x40
	[SerializeField] // RVA: 0xC7DD00 Offset: 0xC7DD00 VA: 0xC7DD00
	private UILabel mcRpTimeP; // 0x48
	[SerializeField] // RVA: 0xC7DD10 Offset: 0xC7DD10 VA: 0xC7DD10
	private PlayerStatusRaidPointComponent raidPointPrefab; // 0x50
	private List<PlayerStatusRaidPointComponent> raidPointComponents; // 0x58
	private float initPosRpFrameR; // 0x60
	private int oldRp; // 0x64
	private bool isBPEvent; // 0x68
	private UserGameEntity userGameEntity; // 0x70
	private Action mRecoverAct; // 0x78

	// Methods

	// RVA: 0xED9F74 Offset: 0xED9F74 VA: 0xED9F74
	public void .ctor() { }

	// RVA: 0xED9FE4 Offset: 0xED9FE4 VA: 0xED9FE4
	public void SetRecoverAct(Action act) { }

	// RVA: 0xED9FEC Offset: 0xED9FEC VA: 0xED9FEC
	private void Awake() { }

	// RVA: 0xEDA0B4 Offset: 0xEDA0B4 VA: 0xEDA0B4
	public void SetupDispRaidPoint(UserGameEntity userGame) { }

	// RVA: 0xEDA5AC Offset: 0xEDA5AC VA: 0xEDA5AC
	public void UpdateRpStatus() { }

	// RVA: 0xEDA918 Offset: 0xEDA918 VA: 0xEDA918
	public void UpdateRpTimeStr() { }

	// RVA: 0xEDA954 Offset: 0xEDA954 VA: 0xEDA954
	private string mfGetRpRecoverTimeStr() { }

	// RVA: 0xEDAA1C Offset: 0xEDAA1C VA: 0xEDAA1C
	private string GetTimeStr(long time) { }

	// RVA: 0xEDA038 Offset: 0xEDA038 VA: 0xEDA038
	public void SetRpRecoverBtnEnable(bool is_enable) { }

	// RVA: 0xEDAAF8 Offset: 0xEDAAF8 VA: 0xEDAAF8
	private static void .cctor() { }
}

// Namespace: 
public class ScrPlayerStatus : MonoBehaviour // TypeDefIndex: 11260
{
	// Fields
	private static readonly float MV_SPD_TIME; // 0x0
	private static readonly float FRAME_OUT_POS_X; // 0x4
	private static readonly string AP_OVER_TXT_COLOR_STR; // 0x8
	private static readonly string RP_OVER_TXT_COLOR_STR; // 0x10
	private static readonly float MAX_LEVEL_BASE_POS_X; // 0x18
	private static readonly float MAX_LEVEL_BASE_POS_Y; // 0x1C
	private static readonly int RP_COUNT_STOP; // 0x20
	private static readonly string LOCATION_TOS_AGREED_KEY; // 0x28
	private static readonly int NOTICE_NUMBER_BADGE_DEPTH; // 0x30
	private static readonly int NOTICE_NUMBER_BADGE_WIDTH; // 0x34
	private static readonly int NOTICE_NUMBER_BADGE_HEIGHT; // 0x38
	private static readonly int NOTICE_NUMBER_BADGE_FONT_SIZE; // 0x3C
	private static readonly int NOTICE_NUMBER_LABEL_WIDTH; // 0x40
	private static readonly string MASTER_MISSION_ICON_LIMITED_PREFIX; // 0x48
	private static readonly int CMD_SPELL_SCROLLVIEW_DEPTH; // 0x50
	private static readonly float SPELL_WINDOW_ALPHA_TIME; // 0x54
	private static readonly int STONE_COUNT_MAX_WIDTH; // 0x58
	private static readonly int MISSION_ALERT_FADE_FRAME_NUM; // 0x5C
	private static readonly int AP_RECOVER_STR_FADE_FRAME_NUM; // 0x60
	private PlayMakerFSM mTargetFsm; // 0x18
	public GameObject mcFaceObjP; // 0x20
	public UILabel mcLevelStrP; // 0x28
	public UILabel mcLevelMaxP; // 0x30
	public UISlider mcExpSldP; // 0x38
	public UILabel mcApStrP; // 0x40
	public UILabel mcApTimeP; // 0x48
	public UISlider mcApSldP; // 0x50
	public UISlider mcApSldP2; // 0x58
	public CommandSpellIconComponent commandSpellComp; // 0x60
	public BoxCollider commandSpellButtonCollider; // 0x68
	public GiftButtonCtrl mcGiftButtonP; // 0x70
	[SerializeField] // RVA: 0xC7DD20 Offset: 0xC7DD20 VA: 0xC7DD20
	private GameObject mNoticeNumberPrefab; // 0x78
	[SerializeField] // RVA: 0xC7DD30 Offset: 0xC7DD30 VA: 0xC7DD30
	private GameObject cNoticeNumberPrefab; // 0x80
	private NoticeNumberComponent mGiftNoticeNumber; // 0x88
	private NoticeNumberComponent mMasterMissionNoticeNumber; // 0x90
	private NoticeNumberComponent mCompleteMissionNoticeNumber; // 0x98
	[SerializeField] // RVA: 0xC7DD40 Offset: 0xC7DD40 VA: 0xC7DD40
	private UISprite mApRecoverBtnSp; // 0xA0
	private bool mIsEnableApRecoverBtn; // 0xA8
	[SerializeField] // RVA: 0xC7DD50 Offset: 0xC7DD50 VA: 0xC7DD50
	private UISprite mRpRecoverBtnSp; // 0xB0
	private bool mIsEnableRpRecoverBtn; // 0xB8
	[SerializeField] // RVA: 0xC7DD60 Offset: 0xC7DD60 VA: 0xC7DD60
	private ScrPlayerBP rpRoot; // 0xC0
	[SerializeField] // RVA: 0xC7DD70 Offset: 0xC7DD70 VA: 0xC7DD70
	private BaseDialog nextExpDialog; // 0xC8
	[SerializeField] // RVA: 0xC7DD80 Offset: 0xC7DD80 VA: 0xC7DD80
	private UILabel nextExpValLabel; // 0xD0
	[SerializeField] // RVA: 0xC7DD90 Offset: 0xC7DD90 VA: 0xC7DD90
	private GameObject nextExpOpenBtnObj; // 0xD8
	private long nextExpVal; // 0xE0
	private bool isDisableCloseNextExpBtn; // 0xE8
	[SerializeField] // RVA: 0xC7DDA0 Offset: 0xC7DDA0 VA: 0xC7DDA0
	private GameObject masterFaceBtnObj; // 0xF0
	[SerializeField] // RVA: 0xC7DDB0 Offset: 0xC7DDB0 VA: 0xC7DDB0
	private GameObject commandSpellWindowRoot; // 0xF8
	[SerializeField] // RVA: 0xC7DDC0 Offset: 0xC7DDC0 VA: 0xC7DDC0
	private GameObject commandSpellWindowPrefab; // 0x100
	[SerializeField] // RVA: 0xC7DDD0 Offset: 0xC7DDD0 VA: 0xC7DDD0
	private BoxCollider masterMissionBtnColl; // 0x108
	[SerializeField] // RVA: 0xC7DDE0 Offset: 0xC7DDE0 VA: 0xC7DDE0
	private TweenPosition masterMissionTween; // 0x110
	[SerializeField] // RVA: 0xC7DDF0 Offset: 0xC7DDF0 VA: 0xC7DDF0
	private GameObject masterMissionNoticeRoot; // 0x118
	[SerializeField] // RVA: 0xC7DE00 Offset: 0xC7DE00 VA: 0xC7DE00
	private UIWidget masterMissionAlertPanel; // 0x120
	[SerializeField] // RVA: 0xC7DE10 Offset: 0xC7DE10 VA: 0xC7DE10
	private GameObject masterMissionAlertRoot; // 0x128
	[SerializeField] // RVA: 0xC7DE20 Offset: 0xC7DE20 VA: 0xC7DE20
	private GameObject masterMissionAlertTexts; // 0x130
	[SerializeField] // RVA: 0xC7DE30 Offset: 0xC7DE30 VA: 0xC7DE30
	private UILabel masterMissionAlertNumLb; // 0x138
	[SerializeField] // RVA: 0xC7DE40 Offset: 0xC7DE40 VA: 0xC7DE40
	private UILabel masterMissionAlertUnitLb; // 0x140
	[SerializeField] // RVA: 0xC7DE50 Offset: 0xC7DE50 VA: 0xC7DE50
	private GameObject masterMissionAlertTitleLb; // 0x148
	[SerializeField] // RVA: 0xC7DE60 Offset: 0xC7DE60 VA: 0xC7DE60
	private UILabel masterMissionAlertMsgLb; // 0x150
	[SerializeField] // RVA: 0xC7DE70 Offset: 0xC7DE70 VA: 0xC7DE70
	private GameObject masterMissionCountRoot; // 0x158
	[SerializeField] // RVA: 0xC7DE80 Offset: 0xC7DE80 VA: 0xC7DE80
	private UILabel masterMissionCountNumLb; // 0x160
	[SerializeField] // RVA: 0xC7DE90 Offset: 0xC7DE90 VA: 0xC7DE90
	private UILabel masterMissionCountNumLb2; // 0x168
	[SerializeField] // RVA: 0xC7DEA0 Offset: 0xC7DEA0 VA: 0xC7DEA0
	private GameObject masterMissionDailyBgObj; // 0x170
	[SerializeField] // RVA: 0xC7DEB0 Offset: 0xC7DEB0 VA: 0xC7DEB0
	private BoxCollider masterMissionDailyBgColl; // 0x178
	[SerializeField] // RVA: 0xC7DEC0 Offset: 0xC7DEC0 VA: 0xC7DEC0
	private GameObject masterMissionWeeklyBgObj; // 0x180
	[SerializeField] // RVA: 0xC7DED0 Offset: 0xC7DED0 VA: 0xC7DED0
	private BoxCollider masterMissionWeeklyBgColl; // 0x188
	[SerializeField] // RVA: 0xC7DEE0 Offset: 0xC7DEE0 VA: 0xC7DEE0
	private GameObject masterMissionLimitedBgObj; // 0x190
	[SerializeField] // RVA: 0xC7DEF0 Offset: 0xC7DEF0 VA: 0xC7DEF0
	private BoxCollider masterMissionLimitedBgColl; // 0x198
	[SerializeField] // RVA: 0xC7DF00 Offset: 0xC7DF00 VA: 0xC7DF00
	private UISprite masterMissionLimitedBgSp; // 0x1A0
	[SerializeField] // RVA: 0xC7DF10 Offset: 0xC7DF10 VA: 0xC7DF10
	private GameObject completeMissionIcon; // 0x1A8
	[SerializeField] // RVA: 0xC7DF20 Offset: 0xC7DF20 VA: 0xC7DF20
	private CompleteMissionSprite completeMissionIconSprite; // 0x1B0
	[SerializeField] // RVA: 0xC7DF30 Offset: 0xC7DF30 VA: 0xC7DF30
	private BoxCollider completeMissionBtnColl; // 0x1B8
	[SerializeField] // RVA: 0xC7DF40 Offset: 0xC7DF40 VA: 0xC7DF40
	private GameObject completeMissionNoticeRoot; // 0x1C0
	[SerializeField] // RVA: 0xC7DF50 Offset: 0xC7DF50 VA: 0xC7DF50
	private GameObject completeMissionAlertRoot; // 0x1C8
	[SerializeField] // RVA: 0xC7DF60 Offset: 0xC7DF60 VA: 0xC7DF60
	private GameObject completeMissionAlertTexts; // 0x1D0
	[SerializeField] // RVA: 0xC7DF70 Offset: 0xC7DF70 VA: 0xC7DF70
	private UILabel completeMissionAlertNumLb; // 0x1D8
	[SerializeField] // RVA: 0xC7DF80 Offset: 0xC7DF80 VA: 0xC7DF80
	private UILabel completeMissionAlertUnitLb; // 0x1E0
	[SerializeField] // RVA: 0xC7DF90 Offset: 0xC7DF90 VA: 0xC7DF90
	private UILabel completeMissionAlertTitleLb; // 0x1E8
	[SerializeField] // RVA: 0xC7DFA0 Offset: 0xC7DFA0 VA: 0xC7DFA0
	private UILabel completeMissionAlertMsgLb; // 0x1F0
	[SerializeField] // RVA: 0xC7DFB0 Offset: 0xC7DFB0 VA: 0xC7DFB0
	private GameObject completeMissionCountRoot; // 0x1F8
	[SerializeField] // RVA: 0xC7DFC0 Offset: 0xC7DFC0 VA: 0xC7DFC0
	private UILabel completeMissionCountNumLb; // 0x200
	[SerializeField] // RVA: 0xC7DFD0 Offset: 0xC7DFD0 VA: 0xC7DFD0
	private UILabel completeMissionCountNumLb2; // 0x208
	[SerializeField] // RVA: 0xC7DFE0 Offset: 0xC7DFE0 VA: 0xC7DFE0
	private UILabel completeMissionCountMsgLb; // 0x210
	[SerializeField] // RVA: 0xC7DFF0 Offset: 0xC7DFF0 VA: 0xC7DFF0
	private GameObject mLocationBtnRoot; // 0x218
	[SerializeField] // RVA: 0xC7E000 Offset: 0xC7E000 VA: 0xC7E000
	private UISprite masterIconBG; // 0x220
	[SerializeField] // RVA: 0xC7E010 Offset: 0xC7E010 VA: 0xC7E010
	private UserGradeComponent masterIconGrade; // 0x228
	[SerializeField] // RVA: 0xC7E020 Offset: 0xC7E020 VA: 0xC7E020
	private UILabel stoneCountNumLb; // 0x230
	[SerializeField] // RVA: 0xC7E030 Offset: 0xC7E030 VA: 0xC7E030
	private UILabel stoneFragmentCountNumLb; // 0x238
	private bool mtIsUpdate; // 0x240
	private bool isUpdateFaceTexture; // 0x241
	private long miMasterUserEquipID; // 0x248
	private Gender.Type meMasterGender; // 0x250
	private UIMasterFaceTexture mcMasterCurTexP; // 0x258
	private int miLevel; // 0x260
	private float mfExpPar; // 0x264
	private int miApNow; // 0x268
	private int miApMax; // 0x26C
	private float mfApPar; // 0x270
	private float mfApParOld; // 0x274
	private float ApRecoverStrUpdateTimer; // 0x278
	private AlphaTransitionCalculator apRecoverStrAlphaCalculator; // 0x280
	private bool isDispMax; // 0x288
	private int oldRp; // 0x28C
	private bool isBPEvent; // 0x290
	private int miSpellNow; // 0x294
	private int miSpellMax; // 0x298
	private CommandSpellWindowComponent commandSpellWindow; // 0x2A0
	private int miGiftCount; // 0x2A8
	private long mstMissionStartsAt; // 0x2B0
	private bool isMstMissionRotation; // 0x2B8
	private string mstMissionTimeNumStr; // 0x2C0
	private string completeMissionTimeNumStr; // 0x2C8
	private string mstMissionTimeCntStr; // 0x2D0
	private string completeMissionTimeCntStr; // 0x2D8
	private float mstMissionIconUpdateTimer; // 0x2E0
	private AlphaTransitionCalculator missionAlertAlphaCalculator; // 0x2E8
	private int currentMissionIndex; // 0x2F0
	private List<ScrPlayerStatus.MasterMissionInfoItem> currentMissionList; // 0x2F8
	private List<ScrPlayerStatus.MasterMissionInfoItem> currentCompleteMissionList; // 0x300
	private long[] mNextLocationEventTerm; // 0x308
	private bool mIsAcceptedLocationEvent; // 0x310
	private UserGameEntity userGameEntity; // 0x318
	private int CommandSpellRest; // 0x320
	private float mFrameInPosX; // 0x324
	private bool isLocationBusy; // 0x328
	private bool doRequestQTreeReset; // 0x329
	private Action mRecoverAct; // 0x330
	private Action mAfterCloseMasterMission; // 0x338
	private Action mAfterCloseCompleteMission; // 0x340
	[CompilerGeneratedAttribute] // RVA: 0xC7E040 Offset: 0xC7E040 VA: 0xC7E040
	private static Action <>f__am$cache0; // 0x68
	[CompilerGeneratedAttribute] // RVA: 0xC7E050 Offset: 0xC7E050 VA: 0xC7E050
	private static Action <>f__am$cache1; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC7E060 Offset: 0xC7E060 VA: 0xC7E060
	private static Action <>f__am$cache2; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xC7E070 Offset: 0xC7E070 VA: 0xC7E070
	private static Comparison<ScrPlayerStatus.MasterMissionInfoItem> <>f__am$cache3; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC7E080 Offset: 0xC7E080 VA: 0xC7E080
	private static Comparison<ScrPlayerStatus.MasterMissionInfoItem> <>f__am$cache4; // 0x88
	[CompilerGeneratedAttribute] // RVA: 0xC7E090 Offset: 0xC7E090 VA: 0xC7E090
	private static Action <>f__am$cache5; // 0x90

	// Methods

	// RVA: 0xEDACF4 Offset: 0xEDACF4 VA: 0xEDACF4
	public void .ctor() { }

	// RVA: 0xEDAD28 Offset: 0xEDAD28 VA: 0xEDAD28
	public void SetCloseGiftAct(Func<bool, bool> act) { }

	// RVA: 0xEDAD60 Offset: 0xEDAD60 VA: 0xEDAD60
	public void SetRecoverAct(Action act) { }

	// RVA: 0xEDAD68 Offset: 0xEDAD68 VA: 0xEDAD68
	private void Awake() { }

	// RVA: 0xEDAF80 Offset: 0xEDAF80 VA: 0xEDAF80
	private void Start() { }

	// RVA: 0xEDB010 Offset: 0xEDB010 VA: 0xEDB010
	public void SetAllParam(UserGameEntity entity) { }

	// RVA: 0xEDB7A4 Offset: 0xEDB7A4 VA: 0xEDB7A4
	private void Update() { }

	// RVA: 0xEDC394 Offset: 0xEDC394 VA: 0xEDC394
	private void OnDestroy() { }

	// RVA: 0xEDC470 Offset: 0xEDC470 VA: 0xEDC470
	public void cbfSlide_In() { }

	// RVA: 0xEDC5D8 Offset: 0xEDC5D8 VA: 0xEDC5D8
	public void cbfSlide_Out() { }

	// RVA: 0xEDC628 Offset: 0xEDC628 VA: 0xEDC628
	public void cbfGift_Push() { }

	// RVA: 0xEDC7A8 Offset: 0xEDC7A8 VA: 0xEDC7A8
	public void OpenMasterMission(Action callback, MasterMissionComponent.Type typeIndex = -1) { }

	// RVA: 0xEDC904 Offset: 0xEDC904 VA: 0xEDC904
	public void OnClickMasterMissionBtn() { }

	// RVA: 0xEDCA84 Offset: 0xEDCA84 VA: 0xEDCA84
	public void OpenCompleteMission(Action callback, CompleteMissionComponent.Type typeIndex = 0) { }

	// RVA: 0xEDCBE0 Offset: 0xEDCBE0 VA: 0xEDCBE0
	public void OnClickCompleteMissionBtn() { }

	// RVA: 0xEDCF54 Offset: 0xEDCF54 VA: 0xEDCF54
	public void OnClickDailyMissionInfoBtn() { }

	// RVA: 0xEDD0D4 Offset: 0xEDD0D4 VA: 0xEDD0D4
	public void OnClickWeeklyMissionInfoBtn() { }

	// RVA: 0xEDD254 Offset: 0xEDD254 VA: 0xEDD254
	public void OnClickLimitedMissionInfoBtn() { }

	// RVA: 0xEDD3D4 Offset: 0xEDD3D4 VA: 0xEDD3D4
	public void OnClickApRecoverBtn() { }

	// RVA: 0xEDD4CC Offset: 0xEDD4CC VA: 0xEDD4CC
	public void OnClickRpRecoverBtn() { }

	// RVA: 0xEDD5C4 Offset: 0xEDD5C4 VA: 0xEDD5C4
	public void OnClickMasterFaceBtn() { }

	// RVA: 0xEDD744 Offset: 0xEDD744 VA: 0xEDD744
	public void OnClickSpellBtn() { }

	// RVA: 0xEDD7F4 Offset: 0xEDD7F4 VA: 0xEDD7F4
	public void OnCloseSpellWindow() { }

	// RVA: 0xEDD8C4 Offset: 0xEDD8C4 VA: 0xEDD8C4
	public bool IsCommandSpellActive() { }

	// RVA: 0xEDC710 Offset: 0xEDC710 VA: 0xEDC710
	public bool IsTouchable() { }

	// RVA: 0xEDD924 Offset: 0xEDD924 VA: 0xEDD924
	public void OpenMasterProfile() { }

	// RVA: 0xEDDB3C Offset: 0xEDDB3C VA: 0xEDDB3C
	public void ExitMasterProfile() { }

	// RVA: 0xEDDC1C Offset: 0xEDDC1C VA: 0xEDDC1C
	public void OnClickOpenNextExp() { }

	// RVA: 0xEDDD20 Offset: 0xEDDD20 VA: 0xEDDD20
	public void OnClickCloseNextExp() { }

	// RVA: 0xEDDE70 Offset: 0xEDDE70 VA: 0xEDDE70
	public void OnClickLocation() { }

	// RVA: 0xEDDF04 Offset: 0xEDDF04 VA: 0xEDDF04
	private void ShowEnabledRuntimePermissionDialog() { }

	// RVA: 0xEDE068 Offset: 0xEDE068 VA: 0xEDE068
	private void ShowDisabledRuntimePermissionDialog() { }

	// RVA: 0xEDE6F0 Offset: 0xEDE6F0 VA: 0xEDE6F0
	private void OnPermissionResult(string message) { }

	// RVA: 0xEDE16C Offset: 0xEDE16C VA: 0xEDE16C
	private void SetLocationCheck() { }

	// RVA: 0xEDE798 Offset: 0xEDE798 VA: 0xEDE798
	private void locationRequest(EventEntity eventEnt) { }

	// RVA: 0xEDE888 Offset: 0xEDE888 VA: 0xEDE888
	private void EndLocationRequest(string result) { }

	// RVA: 0xEDEBB0 Offset: 0xEDEBB0 VA: 0xEDEBB0
	public bool IsLocationBusy() { }

	// RVA: 0xEDC4C0 Offset: 0xEDC4C0 VA: 0xEDC4C0
	private void mfCallFsmEvent(string sEventStr) { }

	// RVA: 0xEDEBB8 Offset: 0xEDEBB8 VA: 0xEDEBB8
	private void mfSetFsmValueInt(string sValueStr, int iValueInt) { }

	// RVA: 0xEDED14 Offset: 0xEDED14 VA: 0xEDED14
	private int mfGetFsmValueInt(string sValueStr) { }

	// RVA: 0xEDEE60 Offset: 0xEDEE60 VA: 0xEDEE60
	public void cbfStatus_Init(GameObject oFsmObject) { }

	// RVA: 0xEDEF18 Offset: 0xEDEF18 VA: 0xEDEF18
	private void SetupGradeIcon() { }

	// RVA: 0xEDF03C Offset: 0xEDF03C VA: 0xEDF03C
	public void SetupDispRaidPoint() { }

	// RVA: 0xEDF14C Offset: 0xEDF14C VA: 0xEDF14C
	protected void ExitMasterMission(bool isDecide) { }

	// RVA: 0xEDF22C Offset: 0xEDF22C VA: 0xEDF22C
	protected void ExitCompleteMission(bool isDecide) { }

	// RVA: 0xEDEEC0 Offset: 0xEDEEC0 VA: 0xEDEEC0
	public void mfInitUserData() { }

	// RVA: 0xEDF318 Offset: 0xEDF318 VA: 0xEDF318
	public void mfFaceMngCallback() { }

	// RVA: 0xEDBC64 Offset: 0xEDBC64 VA: 0xEDBC64
	private void UpdateAp() { }

	// RVA: 0xEDF53C Offset: 0xEDF53C VA: 0xEDF53C
	private void UpdateApStatus() { }

	// RVA: 0xEDF8E4 Offset: 0xEDF8E4 VA: 0xEDF8E4
	public void InitApRecoverLb() { }

	// RVA: 0xEDB920 Offset: 0xEDB920 VA: 0xEDB920
	public void mfUpdatePrams() { }

	// RVA: 0xEDFA04 Offset: 0xEDFA04 VA: 0xEDFA04
	private void ResetMasterFaceTexture() { }

	// RVA: 0xEDF7FC Offset: 0xEDF7FC VA: 0xEDF7FC
	private string mfGetApRecoverTimeStr(bool isGetMax = False) { }

	// RVA: 0xEE08EC Offset: 0xEE08EC VA: 0xEE08EC
	private string GetTimeApRecoverStr(long time, bool isGetMax) { }

	// RVA: 0xEE0B2C Offset: 0xEE0B2C VA: 0xEE0B2C
	private string GetTimeCommandSpellRecoverStr(long time) { }

	// RVA: 0xEE0C08 Offset: 0xEE0C08 VA: 0xEE0C08
	private string mfGetCommandSpellRecoverTimeStr() { }

	// RVA: 0xEDFBDC Offset: 0xEDFBDC VA: 0xEDFBDC
	private void mfCheckMasterMission() { }

	// RVA: 0xEE03D4 Offset: 0xEE03D4 VA: 0xEE03D4
	private void mfCheckCompleteMission() { }

	// RVA: 0xEE1968 Offset: 0xEE1968 VA: 0xEE1968
	public void UpdateCompleteMissionIconUI() { }

	// RVA: 0xEE0D20 Offset: 0xEE0D20 VA: 0xEE0D20
	private ScrPlayerStatus.MasterMissionInfoItem GetDailyMissionInfoItem(MstMissionEntity mstMissionEntity) { }

	// RVA: 0xEE10A4 Offset: 0xEE10A4 VA: 0xEE10A4
	private void SortLimitedMstMissionViewList(ref List<ScrPlayerStatus.MasterMissionInfoItem> list) { }

	// RVA: 0xEE0EA4 Offset: 0xEE0EA4 VA: 0xEE0EA4
	private int GetMissionClearCount(EventMissionEntity[] eventMissionList, MasterMissionComponent.Type type) { }

	// RVA: 0xEE16F4 Offset: 0xEE16F4 VA: 0xEE16F4
	private int GetMissionClearCount(EventMissionEntity[] eventMissionList, CompleteMissionComponent.Type type) { }

	// RVA: 0xEE1974 Offset: 0xEE1974 VA: 0xEE1974
	private void HideMstMissionIconLb() { }

	// RVA: 0xEE1A2C Offset: 0xEE1A2C VA: 0xEE1A2C
	private void ShowCompleteMissionContents(bool value) { }

	// RVA: 0xEE14EC Offset: 0xEE14EC VA: 0xEE14EC
	public void InitMstMissionLb() { }

	// RVA: 0xEE18A4 Offset: 0xEE18A4 VA: 0xEE18A4
	public void InitCompleteMissionLb() { }

	// RVA: 0xEDBEE8 Offset: 0xEDBEE8 VA: 0xEDBEE8
	private void UpdateMstMissionLb() { }

	// RVA: 0xEE1F74 Offset: 0xEE1F74 VA: 0xEE1F74
	private void ChangeViewMstMissionLb(ScrPlayerStatus.MasterMissionInfoItem mstMissionInfo) { }

	// RVA: 0xEE262C Offset: 0xEE262C VA: 0xEE262C
	private void ChangeViewCompleteMissionLb(ScrPlayerStatus.MasterMissionInfoItem mstMissionInfo) { }

	// RVA: 0xEE1CFC Offset: 0xEE1CFC VA: 0xEE1CFC
	private void UpdateDailyMissionInfoItem(int index = -1) { }

	// RVA: 0xEE2BA4 Offset: 0xEE2BA4 VA: 0xEE2BA4
	private int GetNextMstMissionIndex(int startIndex) { }

	// RVA: 0xEE1BC4 Offset: 0xEE1BC4 VA: 0xEE1BC4
	private int GetFirstMstMissionIndex(MissionType.Type targetType) { }

	// RVA: 0xEE1AB4 Offset: 0xEE1AB4 VA: 0xEE1AB4
	private int GetEnabledMstMissionCount() { }

	// RVA: 0xEE2CC4 Offset: 0xEE2CC4 VA: 0xEE2CC4
	private bool IsEnabledMstMission(ScrPlayerStatus.MasterMissionInfoItem missionInfo, long nowTime) { }

	// RVA: 0xEE2D94 Offset: 0xEE2D94 VA: 0xEE2D94
	public long GetMstMissionStarts() { }

	// RVA: 0xEDF30C Offset: 0xEDF30C VA: 0xEDF30C
	public void mfSetIsUpdate(bool isUpdate) { }

	// RVA: 0xEDB280 Offset: 0xEDB280 VA: 0xEDB280
	public void mfSetFaceID(long equipID, Gender.Type genderType) { }

	// RVA: 0xEDB278 Offset: 0xEDB278 VA: 0xEDB278
	public void mfSetLevel(int iLevel) { }

	// RVA: 0xEDB2AC Offset: 0xEDB2AC VA: 0xEDB2AC
	public void mfSetAp(int iApNow, int iApMax) { }

	// RVA: 0xEDB2D8 Offset: 0xEDB2D8 VA: 0xEDB2D8
	public void mfSetSpell(int iSpellNow, int iSpellMax) { }

	// RVA: 0xEE2DC8 Offset: 0xEE2DC8 VA: 0xEE2DC8
	public void mfSetGiftCount(int iGiftCount) { }

	// RVA: 0xEDB51C Offset: 0xEDB51C VA: 0xEDB51C
	public void mfSetStoneAndFragment() { }

	// RVA: 0xEE2E50 Offset: 0xEE2E50 VA: 0xEE2E50
	private void mfSetLocationEventTime(long now) { }

	// RVA: 0xEDC14C Offset: 0xEDC14C VA: 0xEDC14C
	private void checkLocationEventBtnShows(long now) { }

	// RVA: 0xEE3240 Offset: 0xEE3240 VA: 0xEE3240
	private void SetLocationEventBtnShow(bool onOff) { }

	// RVA: 0xEDAE88 Offset: 0xEDAE88 VA: 0xEDAE88
	public void SetApRecoverBtnEnable(bool is_enable) { }

	// RVA: 0xEDAF04 Offset: 0xEDAF04 VA: 0xEDAF04
	public void SetRpRecoverBtnEnable(bool is_enable) { }

	// RVA: 0xEE3278 Offset: 0xEE3278 VA: 0xEE3278
	public void DisableAllBtn() { }

	// RVA: 0xEE3464 Offset: 0xEE3464 VA: 0xEE3464
	public void EnableAllBtn() { }

	// RVA: 0xEE3650 Offset: 0xEE3650 VA: 0xEE3650
	private void UpdatePanel() { }

	// RVA: 0xEE3708 Offset: 0xEE3708 VA: 0xEE3708
	public void FrameIn(bool is_force = False) { }

	// RVA: 0xEDAE7C Offset: 0xEDAE7C VA: 0xEDAE7C
	public void FrameOut(bool is_force = False) { }

	// RVA: 0xEE3740 Offset: 0xEE3740 VA: 0xEE3740
	private void FrameInOut(bool is_framein, bool is_force = False) { }

	// RVA: 0xEE3A1C Offset: 0xEE3A1C VA: 0xEE3A1C
	private void FrameInOutEnd() { }

	// RVA: 0xEE3A74 Offset: 0xEE3A74 VA: 0xEE3A74
	public bool IsBPActive() { }

	// RVA: 0xEE2A94 Offset: 0xEE2A94 VA: 0xEE2A94
	private void UpdateCompleteMissionIconVisibility() { }

	// RVA: 0xEE3ABC Offset: 0xEE3ABC VA: 0xEE3ABC
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3CC0 Offset: 0xCD3CC0 VA: 0xCD3CC0
	// RVA: 0xEE3C34 Offset: 0xEE3C34 VA: 0xEE3C34
	private void <OpenMasterMission>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3CD0 Offset: 0xCD3CD0 VA: 0xCD3CD0
	// RVA: 0xEE3C40 Offset: 0xEE3C40 VA: 0xEE3C40
	private void <OnClickMasterMissionBtn>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3CE0 Offset: 0xCD3CE0 VA: 0xCD3CE0
	// RVA: 0xEE3C4C Offset: 0xEE3C4C VA: 0xEE3C4C
	private void <OpenCompleteMission>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3CF0 Offset: 0xCD3CF0 VA: 0xCD3CF0
	// RVA: 0xEE3C58 Offset: 0xEE3C58 VA: 0xEE3C58
	private static void <OnClickCompleteMissionBtn>m__3() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3D00 Offset: 0xCD3D00 VA: 0xCD3D00
	// RVA: 0xEE3C5C Offset: 0xEE3C5C VA: 0xEE3C5C
	private void <OnClickCompleteMissionBtn>m__4() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3D10 Offset: 0xCD3D10 VA: 0xCD3D10
	// RVA: 0xEE3C68 Offset: 0xEE3C68 VA: 0xEE3C68
	private void <OnClickDailyMissionInfoBtn>m__5() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3D20 Offset: 0xCD3D20 VA: 0xCD3D20
	// RVA: 0xEE3C74 Offset: 0xEE3C74 VA: 0xEE3C74
	private void <OnClickWeeklyMissionInfoBtn>m__6() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3D30 Offset: 0xCD3D30 VA: 0xCD3D30
	// RVA: 0xEE3C80 Offset: 0xEE3C80 VA: 0xEE3C80
	private void <OnClickLimitedMissionInfoBtn>m__7() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3D40 Offset: 0xCD3D40 VA: 0xCD3D40
	// RVA: 0xEE3C8C Offset: 0xEE3C8C VA: 0xEE3C8C
	private void <OnClickApRecoverBtn>m__8(RecoverDlgComponent.Result result) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3D50 Offset: 0xCD3D50 VA: 0xCD3D50
	// RVA: 0xEE3D10 Offset: 0xEE3D10 VA: 0xEE3D10
	private void <OnClickRpRecoverBtn>m__9(RecoverDlgComponent.Result result) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3D60 Offset: 0xCD3D60 VA: 0xCD3D60
	// RVA: 0xEE3D94 Offset: 0xEE3D94 VA: 0xEE3D94
	private void <OnClickMasterFaceBtn>m__A() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3D70 Offset: 0xCD3D70 VA: 0xCD3D70
	// RVA: 0xEE3D98 Offset: 0xEE3D98 VA: 0xEE3D98
	private static void <OpenMasterProfile>m__B() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3D80 Offset: 0xCD3D80 VA: 0xCD3D80
	// RVA: 0xEE3D9C Offset: 0xEE3D9C VA: 0xEE3D9C
	private void <ExitMasterProfile>m__C() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3D90 Offset: 0xCD3D90 VA: 0xCD3D90
	// RVA: 0xEE3F58 Offset: 0xEE3F58 VA: 0xEE3F58
	private void <OnClickOpenNextExp>m__D() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3DA0 Offset: 0xCD3DA0 VA: 0xCD3DA0
	// RVA: 0xEE3F60 Offset: 0xEE3F60 VA: 0xEE3F60
	private static void <OnClickCloseNextExp>m__E() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3DB0 Offset: 0xCD3DB0 VA: 0xCD3DB0
	// RVA: 0xEE3F64 Offset: 0xEE3F64 VA: 0xEE3F64
	private void <ShowDisabledRuntimePermissionDialog>m__F(bool result) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3DC0 Offset: 0xCD3DC0 VA: 0xCD3DC0
	// RVA: 0xEE402C Offset: 0xEE402C VA: 0xEE402C
	private void <EndLocationRequest>m__10() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3DD0 Offset: 0xCD3DD0 VA: 0xCD3DD0
	// RVA: 0xEE4034 Offset: 0xEE4034 VA: 0xEE4034
	private void <EndLocationRequest>m__11(bool isDecide) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3DE0 Offset: 0xCD3DE0 VA: 0xCD3DE0
	// RVA: 0xEE4128 Offset: 0xEE4128 VA: 0xEE4128
	private void <ExitMasterMission>m__12() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3DF0 Offset: 0xCD3DF0 VA: 0xCD3DF0
	// RVA: 0xEE4268 Offset: 0xEE4268 VA: 0xEE4268
	private void <ExitCompleteMission>m__13() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3E00 Offset: 0xCD3E00 VA: 0xCD3E00
	// RVA: 0xEE43E4 Offset: 0xEE43E4 VA: 0xEE43E4
	private static int <SortLimitedMstMissionViewList>m__14(ScrPlayerStatus.MasterMissionInfoItem a, ScrPlayerStatus.MasterMissionInfoItem b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3E10 Offset: 0xCD3E10 VA: 0xCD3E10
	// RVA: 0xEE4444 Offset: 0xEE4444 VA: 0xEE4444
	private static int <SortLimitedMstMissionViewList>m__15(ScrPlayerStatus.MasterMissionInfoItem a, ScrPlayerStatus.MasterMissionInfoItem b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3E20 Offset: 0xCD3E20 VA: 0xCD3E20
	// RVA: 0xEE44A4 Offset: 0xEE44A4 VA: 0xEE44A4
	private static void <ExitMasterProfile>m__16() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3E30 Offset: 0xCD3E30 VA: 0xCD3E30
	// RVA: 0xEE44A8 Offset: 0xEE44A8 VA: 0xEE44A8
	private void <ExitMasterMission>m__17() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3E40 Offset: 0xCD3E40 VA: 0xCD3E40
	// RVA: 0xEE44B4 Offset: 0xEE44B4 VA: 0xEE44B4
	private void <ExitCompleteMission>m__18() { }
}

// Namespace: 
public enum ScrPlayerStatus.enSpell // TypeDefIndex: 11261
{
	// Fields
	public int value__; // 0x0
	public const ScrPlayerStatus.enSpell Zero = 0;
	public const ScrPlayerStatus.enSpell One = 1;
	public const ScrPlayerStatus.enSpell Two = 2;
	public const ScrPlayerStatus.enSpell Tree = 3;
	public const ScrPlayerStatus.enSpell enMAX = 4;
}

// Namespace: 
private enum ScrPlayerStatus.MstMissionState // TypeDefIndex: 11262
{
	// Fields
	public int value__; // 0x0
	public const ScrPlayerStatus.MstMissionState Weekly = 0;
	public const ScrPlayerStatus.MstMissionState Limited = 1;
}

// Namespace: 
public class ScrPlayerStatus.MasterMissionInfoItem // TypeDefIndex: 11263
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC7E0A0 Offset: 0xC7E0A0 VA: 0xC7E0A0
	[DebuggerBrowsableAttribute] // RVA: 0xC7E0A0 Offset: 0xC7E0A0 VA: 0xC7E0A0
	private MstMissionEntity <MstMissionEntity>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC7E0DC Offset: 0xC7E0DC VA: 0xC7E0DC
	[DebuggerBrowsableAttribute] // RVA: 0xC7E0DC Offset: 0xC7E0DC VA: 0xC7E0DC
	private int <MissionCount>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC7E118 Offset: 0xC7E118 VA: 0xC7E118
	[DebuggerBrowsableAttribute] // RVA: 0xC7E118 Offset: 0xC7E118 VA: 0xC7E118
	private int <MissionClearCount>k__BackingField; // 0x1C
	[CompilerGeneratedAttribute] // RVA: 0xC7E154 Offset: 0xC7E154 VA: 0xC7E154
	[DebuggerBrowsableAttribute] // RVA: 0xC7E154 Offset: 0xC7E154 VA: 0xC7E154
	private int <MissionAchiveCount>k__BackingField; // 0x20

	// Properties
	public MstMissionEntity MstMissionEntity { get; set; }
	public int MissionCount { get; set; }
	public int MissionClearCount { get; set; }
	public int MissionAchiveCount { get; set; }

	// Methods

	// RVA: 0xEE1054 Offset: 0xEE1054 VA: 0xEE1054
	public void .ctor(MstMissionEntity mstMission, int missionCnt, int clearCnt, int achiveCnt) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3E50 Offset: 0xCD3E50 VA: 0xCD3E50
	// RVA: 0xEE196C Offset: 0xEE196C VA: 0xEE196C
	public MstMissionEntity get_MstMissionEntity() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3E60 Offset: 0xCD3E60 VA: 0xCD3E60
	// RVA: 0xEE4D1C Offset: 0xEE4D1C VA: 0xEE4D1C
	private void set_MstMissionEntity(MstMissionEntity value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3E70 Offset: 0xCD3E70 VA: 0xCD3E70
	// RVA: 0xEE2CBC Offset: 0xEE2CBC VA: 0xEE2CBC
	public int get_MissionCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3E80 Offset: 0xCD3E80 VA: 0xCD3E80
	// RVA: 0xEE4D24 Offset: 0xEE4D24 VA: 0xEE4D24
	private void set_MissionCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3E90 Offset: 0xCD3E90 VA: 0xCD3E90
	// RVA: 0xEE0E9C Offset: 0xEE0E9C VA: 0xEE0E9C
	public int get_MissionClearCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3EA0 Offset: 0xCD3EA0 VA: 0xCD3EA0
	// RVA: 0xEE4D2C Offset: 0xEE4D2C VA: 0xEE4D2C
	private void set_MissionClearCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3EB0 Offset: 0xCD3EB0 VA: 0xCD3EB0
	// RVA: 0xEE2CB4 Offset: 0xEE2CB4 VA: 0xEE2CB4
	public int get_MissionAchiveCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD3EC0 Offset: 0xCD3EC0 VA: 0xCD3EC0
	// RVA: 0xEE4D34 Offset: 0xEE4D34 VA: 0xEE4D34
	private void set_MissionAchiveCount(int value) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45DB4 Offset: 0xC45DB4 VA: 0xC45DB4
private sealed class ScrPlayerStatus.<ShowEnabledRuntimePermissionDialog>c__AnonStorey0 // TypeDefIndex: 11264
{
	// Fields
	internal string permissionName; // 0x10
	internal ScrPlayerStatus $this; // 0x18

	// Methods

	// RVA: 0xEDE164 Offset: 0xEDE164 VA: 0xEDE164
	public void .ctor() { }

	// RVA: 0xEE45F4 Offset: 0xEE45F4 VA: 0xEE45F4
	internal void <>m__0(bool result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45DC4 Offset: 0xC45DC4 VA: 0xC45DC4
private sealed class ScrPlayerStatus.<SetLocationCheck>c__AnonStorey1 // TypeDefIndex: 11265
{
	// Fields
	internal EventEntity[] list; // 0x10
	internal ScrPlayerStatus $this; // 0x18

	// Methods

	// RVA: 0xEDE790 Offset: 0xEDE790 VA: 0xEDE790
	public void .ctor() { }

	// RVA: 0xEE44C0 Offset: 0xEE44C0 VA: 0xEE44C0
	internal void <>m__0() { }

	// RVA: 0xEE44EC Offset: 0xEE44EC VA: 0xEE44EC
	internal void <>m__1(bool isDecide) { }

	// RVA: 0xEE45C8 Offset: 0xEE45C8 VA: 0xEE45C8
	internal void <>m__2() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45DD4 Offset: 0xC45DD4 VA: 0xC45DD4
private sealed class ScrPlayerStatus.<locationRequest>c__AnonStorey2 // TypeDefIndex: 11266
{
	// Fields
	internal EventEntity eventEnt; // 0x10
	internal ScrPlayerStatus $this; // 0x18

	// Methods

	// RVA: 0xEDE880 Offset: 0xEDE880 VA: 0xEDE880
	public void .ctor() { }

	// RVA: 0xEE46DC Offset: 0xEE46DC VA: 0xEE46DC
	internal void <>m__0(GeoLocation.ResultState result, LocationInfo locInfo) { }

	// RVA: 0xEE4B88 Offset: 0xEE4B88 VA: 0xEE4B88
	internal void <>m__1(bool isDecide) { }

	// RVA: 0xEE4C3C Offset: 0xEE4C3C VA: 0xEE4C3C
	internal void <>m__2(bool isDecide) { }

	// RVA: 0xEE4CF0 Offset: 0xEE4CF0 VA: 0xEE4CF0
	internal void <>m__3() { }
}

// Namespace: 
public class ScrTerminalListTop : MonoBehaviour // TypeDefIndex: 11267
{
	// Fields
	public const int EVENT_BANNER_MAX = 1;
	public const bool SVT_TREASURE_DVC_BASE_RESULT = True;
	private static readonly int WAR_CLEAR_TITLE_SIZE; // 0x0
	private static readonly int VOTE_QUEST_CONFIRM_MESSAGE_WIDTH; // 0x4
	private static readonly string TERMINAL_DIALOG_MESSAGES_KEY; // 0x8
	private static readonly string FSM_VAR_MOVIE_FILE_NAME; // 0x10
	private static readonly string FSM_VAR_MOVIE_FILE_NAME_SUFFIX; // 0x18
	private static readonly string ITEM_GET_ASSET_NAME; // 0x20
	private static readonly string ITEM_GET_EFFECT_NAME; // 0x28
	private static readonly string TOKEN_GET_ASSET_NAME; // 0x30
	private static readonly string TOKEN_GET_EFFECT_NAME; // 0x38
	private static readonly string WAR_BOARD_ITEM_GET_ASSET_NAME; // 0x40
	private static readonly string WAR_BOARD_ITEM_GET_EFFECT_NAME; // 0x48
	private static readonly string HARVEST_GET_ASSET_NAME; // 0x50
	private static readonly string HARVEST_GET_EFFECT_NAME; // 0x58
	private static readonly string PROLOGUE_MOVIE_MASTER_NAME; // 0x60
	private static readonly string PROLOGUE_MOVIE_AFTER_QUEST_CLEAR_MASTER_NAME; // 0x68
	private static readonly string TREASURE_GET_NORMAL; // 0x70
	private static readonly string BEFORE_TERMINAL_MESSAGE_KEY; // 0x78
	private static readonly string QUEST_CLEAR_BEFORE_TERMINAL_MESSAGE_PREFIX; // 0x80
	public static readonly string NOTICE_LAST_MODIFIED_KEY; // 0x88
	public static readonly int TAREINAL_LIST_DEFAULT_DEPTH; // 0x90
	private PlayMakerFSM mTargetFsm; // 0x18
	private List<MapControl.QuestInfo> areaQuestInfoList; // 0x20
	private List<MapControl.QuestInfo> mapQuestInfoList; // 0x28
	private List<MapControl.QuestInfo> storyQuestInfoList; // 0x30
	private List<ScrTerminalListTop.CaldeaFolderInfo> caldeaFolderInfoList; // 0x38
	private int questStoryPlayableCount; // 0x40
	[SerializeField] // RVA: 0xC7E190 Offset: 0xC7E190 VA: 0xC7E190
	private MapCamera mapCamera; // 0x48
	private List<ScrTerminalListTop.AdditionalDlgMessage> qcChangeMessages; // 0x50
	public ScrPlayerStatus mPlayerStatus; // 0x58
	public TitleInfoControl mTitleInfo; // 0x60
	public GameObject mActionPanel; // 0x68
	public BoxCollider mActionBgColl; // 0x70
	private AssetData treasureGetAssetData; // 0x78
	private Dictionary<int, AssetData> itemGetAssetDatas; // 0x80
	private GameObject treasureGetInstance; // 0x88
	private List<GameObject> itemGetEffectInstances; // 0x90
	private QuestRewardItemAction friendPointBoostItemAction; // 0x98
	private QuestRewardTokenAction boardGameTokenAction; // 0xA0
	private int boardGameTokenEffectId; // 0xA8
	private QuestRewardHarvestAction harvestAction; // 0xB0
	private int harvestEffectId; // 0xB8
	public StandFigureSlideComponent mTerminalServant; // 0xC0
	[SerializeField] // RVA: 0xC7E1A0 Offset: 0xC7E1A0 VA: 0xC7E1A0
	private TerminalSceneComponent mTerminalScene; // 0xC8
	[SerializeField] // RVA: 0xC7E1B0 Offset: 0xC7E1B0 VA: 0xC7E1B0
	private ScrTerminalMap mTerminalMap; // 0xD0
	[SerializeField] // RVA: 0xC7E1C0 Offset: 0xC7E1C0 VA: 0xC7E1C0
	private QuestAfterActionDialog questAfterDialog; // 0xD8
	[SerializeField] // RVA: 0xC7E1D0 Offset: 0xC7E1D0 VA: 0xC7E1D0
	private ScrollConfirmDialog scrollConfirmDialog; // 0xE0
	[SerializeField] // RVA: 0xC7E1E0 Offset: 0xC7E1E0 VA: 0xC7E1E0
	private CostumeOpenConfirmDialog costumeOpenConfirmDialog; // 0xE8
	[SerializeField] // RVA: 0xC7E1F0 Offset: 0xC7E1F0 VA: 0xC7E1F0
	private ScrollConfirmDialog questOpenConfirmDialog; // 0xF0
	[SerializeField] // RVA: 0xC7E200 Offset: 0xC7E200 VA: 0xC7E200
	private UIButton helpButton; // 0xF8
	[SerializeField] // RVA: 0xC7E210 Offset: 0xC7E210 VA: 0xC7E210
	private QuestBoardListViewManager mQuestBoardListViewManager; // 0x100
	private Action mQuestClickAct; // 0x108
	private bool mIsFadedBuffer; // 0x110
	private bool mIsRecreatedQuestBoard; // 0x111
	private int topLastIdx; // 0x114
	private List<int> eventSvtIdGotList; // 0x118
	private WarAddEntity mFolderBgchanges; // 0x120
	private bool ClearCheckForBGChanges; // 0x128
	private ScrTerminalListTop.CaldeaFolderInfo showingFolderWar; // 0x130
	private Action mCallBeforeFadein; // 0x138
	private BattleSetupInfo mBattleSetupinfo; // 0x140
	private int[] mSelectableQuests; // 0x148
	private int mSelectableRouteQuestId; // 0x150
	private int originQuestId; // 0x154
	private bool isTreasureEffect; // 0x158
	private string useTreasureGetEffectName; // 0x160
	private int useItemIconId; // 0x168
	private bool isPlayedScript; // 0x16C
	private ActionChain occurenceChain; // 0x170
	private Dictionary<int, int> lastSelectedQuestDic; // 0x178
	public static readonly int AREA_BOARD_FORCE_DISP_START_COND_WAR_ID; // 0x94
	public static readonly int AREA_BOARD_FORCE_DISP_END_COND_WAR_ID; // 0x98
	private static readonly int AREA_BOARD_FORCE_DISP_TARGET_WAR_ID; // 0x9C
	private int oldFriendShipRank; // 0x180
	private QuestRewardBoxAction questRewardBoxAction; // 0x188
	private QuestRewardItemAction questRewardItemAction; // 0x190
	private ServantRewardAction questRewardServantAction; // 0x198
	private static readonly int TERMINAL_EFFECT_APPEAR_COND_WAR_ID; // 0xA0
	private static readonly int TERMINAL_EFFECT_APPEAR_TARGET_WAR_ID; // 0xA4
	public readonly int TERMINAL_EFFECT_APPEAR_EFFECT_ID; // 0x1A0
	private static readonly int TERMINAL_EFFECT_APPEAR_PLAYING_LIST_DEPTH; // 0xA8
	private static readonly int TERMINAL_EFFECT_BOARD_DISAPPEAR_TARGET_WAR_ID; // 0xAC
	private static readonly int TERMINAL_EFFECT_BOARD_TRUE_APPEAR_TARGET_WAR_ID; // 0xB0
	public readonly int TERMINAL_EFFECT_BOARD_DISAPPEAR_EFFECT_ID; // 0x1A4
	private static readonly int TERMINAL_EFFECT_DISAPPEAR_DIALOG_MESSAGE_FONT_SIZE; // 0xB4
	private static readonly int TERMINAL_EFFECT_DISAPPEAR_DIALOG_MESSAGE_POS_Y; // 0xB8
	private static readonly int TERMINAL_EFFECT_DISAPPEAR_DIALOG_BUTTON_POS_Y; // 0xBC
	public int playTerminalTopEffectWarId; // 0x1A8
	[CompilerGeneratedAttribute] // RVA: 0xC7E220 Offset: 0xC7E220 VA: 0xC7E220
	private static Action <>f__am$cache0; // 0xC0
	[CompilerGeneratedAttribute] // RVA: 0xC7E230 Offset: 0xC7E230 VA: 0xC7E230
	private static Action <>f__am$cache1; // 0xC8
	[CompilerGeneratedAttribute] // RVA: 0xC7E240 Offset: 0xC7E240 VA: 0xC7E240
	private static Action <>f__am$cache2; // 0xD0
	[CompilerGeneratedAttribute] // RVA: 0xC7E250 Offset: 0xC7E250 VA: 0xC7E250
	private static Predicate<ScrTerminalListTop.CaldeaFolderInfo> <>f__am$cache3; // 0xD8
	[CompilerGeneratedAttribute] // RVA: 0xC7E260 Offset: 0xC7E260 VA: 0xC7E260
	private static Action<Action> <>f__am$cache4; // 0xE0
	[CompilerGeneratedAttribute] // RVA: 0xC7E270 Offset: 0xC7E270 VA: 0xC7E270
	private static Action<Action> <>f__am$cache5; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xC7E280 Offset: 0xC7E280 VA: 0xC7E280
	private static Action <>f__am$cache6; // 0xF0
	[CompilerGeneratedAttribute] // RVA: 0xC7E290 Offset: 0xC7E290 VA: 0xC7E290
	private static Action <>f__am$cache7; // 0xF8
	[CompilerGeneratedAttribute] // RVA: 0xC7E2A0 Offset: 0xC7E2A0 VA: 0xC7E2A0
	private static Action <>f__am$cache8; // 0x100
	[CompilerGeneratedAttribute] // RVA: 0xC7E2B0 Offset: 0xC7E2B0 VA: 0xC7E2B0
	private static Action <>f__am$cache9; // 0x108
	[CompilerGeneratedAttribute] // RVA: 0xC7E2C0 Offset: 0xC7E2C0 VA: 0xC7E2C0
	private static Action <>f__am$cacheA; // 0x110
	[CompilerGeneratedAttribute] // RVA: 0xC7E2D0 Offset: 0xC7E2D0 VA: 0xC7E2D0
	private static LinkConfirmDialog.ClickDelegate <>f__am$cacheB; // 0x118
	[CompilerGeneratedAttribute] // RVA: 0xC7E2E0 Offset: 0xC7E2E0 VA: 0xC7E2E0
	private static Action <>f__am$cacheC; // 0x120
	[CompilerGeneratedAttribute] // RVA: 0xC7E2F0 Offset: 0xC7E2F0 VA: 0xC7E2F0
	private static Action <>f__am$cacheD; // 0x128
	[CompilerGeneratedAttribute] // RVA: 0xC7E300 Offset: 0xC7E300 VA: 0xC7E300
	private static Action <>f__am$cacheE; // 0x130
	[CompilerGeneratedAttribute] // RVA: 0xC7E310 Offset: 0xC7E310 VA: 0xC7E310
	private static Action <>f__am$cacheF; // 0x138
	[CompilerGeneratedAttribute] // RVA: 0xC7E320 Offset: 0xC7E320 VA: 0xC7E320
	private static Action <>f__am$cache10; // 0x140
	[CompilerGeneratedAttribute] // RVA: 0xC7E330 Offset: 0xC7E330 VA: 0xC7E330
	private static Action <>f__am$cache11; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xC7E340 Offset: 0xC7E340 VA: 0xC7E340
	private static Action <>f__am$cache12; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xC7E350 Offset: 0xC7E350 VA: 0xC7E350
	private static Action <>f__am$cache13; // 0x158
	[CompilerGeneratedAttribute] // RVA: 0xC7E360 Offset: 0xC7E360 VA: 0xC7E360
	private static Action <>f__am$cache14; // 0x160
	[CompilerGeneratedAttribute] // RVA: 0xC7E370 Offset: 0xC7E370 VA: 0xC7E370
	private static Func<QuestMessageEntity, int> <>f__am$cache15; // 0x168

	// Methods

	// RVA: 0xEE4D3C Offset: 0xEE4D3C VA: 0xEE4D3C
	public void .ctor() { }

	// RVA: 0xEE4E98 Offset: 0xEE4E98 VA: 0xEE4E98
	public static void DeleteContinueData() { }

	// RVA: 0xEE4F04 Offset: 0xEE4F04 VA: 0xEE4F04
	public bool ContainsMapQuest(int[][] targets) { }

	// RVA: 0xEE51D8 Offset: 0xEE51D8 VA: 0xEE51D8
	public bool isShowingFolder() { }

	// RVA: 0xEE51E8 Offset: 0xEE51E8 VA: 0xEE51E8
	public string GetShowingFolderBGM() { }

	// RVA: 0xEE52E4 Offset: 0xEE52E4 VA: 0xEE52E4
	public void SetQuestClickAct(Action act) { }

	// RVA: 0xEE52EC Offset: 0xEE52EC VA: 0xEE52EC
	public QuestBoardListViewObject GetFocusQuest() { }

	// RVA: 0xEDA910 Offset: 0xEDA910 VA: 0xEDA910
	public QuestBoardListViewManager GetQuestBoardListViewManager() { }

	// RVA: 0xEE539C Offset: 0xEE539C VA: 0xEE539C
	private void AddGotEventSvtId(int svtId) { }

	// RVA: 0xEE5438 Offset: 0xEE5438 VA: 0xEE5438
	public int[] PopEventSvtGets() { }

	// RVA: 0xEE54C4 Offset: 0xEE54C4 VA: 0xEE54C4
	public void cbfTitleInfoBtnBack_Click(bool menuFrameOut = True) { }

	// RVA: 0xEE64B8 Offset: 0xEE64B8 VA: 0xEE64B8
	public void cbfTitleInfoBtnBackStory_Click() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD3ED0 Offset: 0xCD3ED0 VA: 0xCD3ED0
