
	// RVA: 0x18FA220 Offset: 0x18FA220 VA: 0x18FA220
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC446C4 Offset: 0xC446C4 VA: 0xC446C4
private sealed class CombineRootComponent.<DispSummonEffect>c__AnonStorey3 // TypeDefIndex: 9499
{
	// Fields
	internal long playUserSvtId; // 0x10

	// Methods

	// RVA: 0x18FA068 Offset: 0x18FA068 VA: 0x18FA068
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC446D4 Offset: 0xC446D4 VA: 0xC446D4
private sealed class CombineRootComponent.<DispSummonEffect>c__AnonStorey4 // TypeDefIndex: 9500
{
	// Fields
	internal UserServantEntity resUsrSvtData; // 0x10
	internal CombineRootComponent.<DispSummonEffect>c__AnonStorey5 <>f__ref$5; // 0x18
	internal CombineRootComponent.<DispSummonEffect>c__AnonStorey3 <>f__ref$3; // 0x20

	// Methods

	// RVA: 0x18FA070 Offset: 0x18FA070 VA: 0x18FA070
	public void .ctor() { }

	// RVA: 0x18FA078 Offset: 0x18FA078 VA: 0x18FA078
	internal void <>m__0() { }

	// RVA: 0x18FA1B4 Offset: 0x18FA1B4 VA: 0x18FA1B4
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC446E4 Offset: 0xC446E4 VA: 0xC446E4
private sealed class CombineRootComponent.<PlaySummonEffect>c__AnonStorey6 // TypeDefIndex: 9501
{
	// Fields
	internal int servantId; // 0x10
	internal long userSvtId; // 0x18
	internal int limitCount; // 0x20
	internal Action endAction; // 0x28
	internal CombineRootComponent $this; // 0x30

	// Methods

	// RVA: 0x18FA3AC Offset: 0x18FA3AC VA: 0x18FA3AC
	public void .ctor() { }

	// RVA: 0x18FA3B4 Offset: 0x18FA3B4 VA: 0x18FA3B4
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC446F4 Offset: 0xC446F4 VA: 0xC446F4
private sealed class CombineRootComponent.<ShowSelectLvExceedBaseSvt>c__AnonStorey7 // TypeDefIndex: 9502
{
	// Fields
	internal UserServantEntity selectBaseData; // 0x10
	internal CombineRootComponent $this; // 0x18

	// Methods

	// RVA: 0x18FAD54 Offset: 0x18FAD54 VA: 0x18FAD54
	public void .ctor() { }

	// RVA: 0x18FAD5C Offset: 0x18FAD5C VA: 0x18FAD5C
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44704 Offset: 0xC44704 VA: 0xC44704
private sealed class CombineRootComponent.<ShowSelectFriendshipExceedBaseSvt>c__AnonStorey8 // TypeDefIndex: 9503
{
	// Fields
	internal UserServantEntity selectBaseData; // 0x10
	internal CombineRootComponent $this; // 0x18

	// Methods

	// RVA: 0x18FA8C4 Offset: 0x18FA8C4 VA: 0x18FA8C4
	public void .ctor() { }

	// RVA: 0x18FA8CC Offset: 0x18FA8CC VA: 0x18FA8CC
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44714 Offset: 0xC44714 VA: 0xC44714
private sealed class CombineRootComponent.<ShowSelectCostumeBaseSvt>c__AnonStorey9 // TypeDefIndex: 9504
{
	// Fields
	internal UserServantEntity selectBaseData; // 0x10
	internal CombineRootComponent $this; // 0x18

	// Methods

	// RVA: 0x18FA620 Offset: 0x18FA620 VA: 0x18FA620
	public void .ctor() { }

	// RVA: 0x18FA628 Offset: 0x18FA628 VA: 0x18FA628
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44724 Offset: 0xC44724 VA: 0xC44724
private sealed class CombineRootComponent.<LoadVoice>c__AnonStoreyB // TypeDefIndex: 9505
{
	// Fields
	internal string requestVoiceData; // 0x10
	internal bool playVoiceAfterLoad; // 0x18
	internal CombineRootComponent $this; // 0x20

	// Methods

	// RVA: 0x18FA25C Offset: 0x18FA25C VA: 0x18FA25C
	public void .ctor() { }

	// RVA: 0x18FA264 Offset: 0x18FA264 VA: 0x18FA264
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44734 Offset: 0xC44734 VA: 0xC44734
private sealed class CombineRootComponent.<ShowExchangeSvtNoticeDlg>c__AnonStoreyA // TypeDefIndex: 9506
{
	// Fields
	internal bool flag; // 0x10
	internal CombineRootComponent $this; // 0x18

	// Methods

	// RVA: 0x18FA574 Offset: 0x18FA574 VA: 0x18FA574
	public void .ctor() { }

	// RVA: 0x18FA57C Offset: 0x18FA57C VA: 0x18FA57C
	internal void <>m__0() { }
}

// Namespace: 
public static class CombineUtility // TypeDefIndex: 9507
{
	// Fields
	public const int COMMAND_CODE_ITEM_NAME_ADJUST_LENGTH = 7;
	public const int COMMAND_CODE_ITEM_NAME_ADJUST_SPACING = -2;
	public const float COMMAND_CODE_ITEM_LABEL_WIDTH = 110;

	// Methods

	// RVA: 0x164FEA0 Offset: 0x164FEA0 VA: 0x164FEA0
	public static bool CheckCombineNeedItemsEnough(UserServantEntity userSvtEntity, int[] needItemIds, int[] needItemNums, int haveQp, int needQp = 0) { }

	// RVA: 0x165029C Offset: 0x165029C VA: 0x165029C
	public static void SetCommandCodeEquippedInfoLabel(UILabel equipLabel, UILabel nameLabel, int attachSvtId, bool dispName) { }
}

// Namespace: 
public class CombineCommandCardComponent : BattleCommandComponent // TypeDefIndex: 9508
{
	// Fields
	[SerializeField] // RVA: 0xC682B8 Offset: 0xC682B8 VA: 0xC682B8
	protected UISprite selectedSprite; // 0x220
	[SerializeField] // RVA: 0xC682C8 Offset: 0xC682C8 VA: 0xC682C8
	protected UISprite defaultSprite; // 0x228
	[SerializeField] // RVA: 0xC682D8 Offset: 0xC682D8 VA: 0xC682D8
	protected GameObject lockInfoObj; // 0x230
	[SerializeField] // RVA: 0xC682E8 Offset: 0xC682E8 VA: 0xC682E8
	private UILabel exceedableLabel; // 0x238
	[CompilerGeneratedAttribute] // RVA: 0xC682F8 Offset: 0xC682F8 VA: 0xC682F8
	[DebuggerBrowsableAttribute] // RVA: 0xC682F8 Offset: 0xC682F8 VA: 0xC682F8
	private CombineCommandCardComponent.Kind <NowKind>k__BackingField; // 0x240

	// Properties
	public CombineCommandCardComponent.Kind NowKind { get; set; }

	// Methods

	// RVA: 0x130A7C0 Offset: 0x130A7C0 VA: 0x130A7C0
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF2B0 Offset: 0xCCF2B0 VA: 0xCCF2B0
	// RVA: 0x130A828 Offset: 0x130A828 VA: 0x130A828
	public CombineCommandCardComponent.Kind get_NowKind() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF2C0 Offset: 0xCCF2C0 VA: 0xCCF2C0
	// RVA: 0x130A830 Offset: 0x130A830 VA: 0x130A830
	private void set_NowKind(CombineCommandCardComponent.Kind value) { }

	// RVA: 0x130A838 Offset: 0x130A838 VA: 0x130A838
	public void SetSelectedSprite(bool isActive) { }

	// RVA: 0x130A908 Offset: 0x130A908 VA: 0x130A908
	public void SetCommandCardEnable(bool isEnable) { }

	// RVA: 0x130AD8C Offset: 0x130AD8C VA: 0x130AD8C
	public void DispCommandCard(BattleCommandData data, long userCommandCodeId, int commandCardParam, bool isShowValue = False, bool isShowExceedable = False) { }

	// RVA: 0x130AEC8 Offset: 0x130AEC8 VA: 0x130AEC8
	public void ModifyCommandCard(BattleCommandData data, long userCommandCodeId) { }

	// RVA: 0x130AEA4 Offset: 0x130AEA4 VA: 0x130AEA4
	private void SetKind(long userCommandCodeId) { }

	// RVA: 0x130AF54 Offset: 0x130AF54 VA: 0x130AF54
	private void SetColor(Color color) { }

	// RVA: 0x130B03C Offset: 0x130B03C VA: 0x130B03C
	public void HideUnlockInfo() { }

	// RVA: 0x130B070 Offset: 0x130B070 VA: 0x130B070
	public void HideCommandCodeSprite() { }

	// RVA: 0x130A9A4 Offset: 0x130A9A4 VA: 0x130A9A4
	private void SetObjectActive(GameObject target, bool isActive) { }

	// RVA: 0x130A848 Offset: 0x130A848 VA: 0x130A848
	private void SetSpriteActive(UISprite target, bool isActive) { }

	// RVA: 0x130ABBC Offset: 0x130ABBC VA: 0x130ABBC
	public void SetPowerUpCardValue(int commandCardParam, bool isShowValue) { }

	// RVA: 0x130AA4C Offset: 0x130AA4C VA: 0x130AA4C
	private void SetExceedableLabel(int commandCardParam, bool isShowExceedable) { }
}

// Namespace: 
public enum CombineCommandCardComponent.Kind // TypeDefIndex: 9509
{
	// Fields
	public int value__; // 0x0
	public const CombineCommandCardComponent.Kind LOCK = 0;
	public const CombineCommandCardComponent.Kind UNLOCK_NOT_EQUIP = 1;
	public const CombineCommandCardComponent.Kind EQUIPED = 2;
}

// Namespace: 
public class CombineCommandCardEquipmentComponent : MonoBehaviour // TypeDefIndex: 9510
{
	// Fields
	[SerializeField] // RVA: 0xC68334 Offset: 0xC68334 VA: 0xC68334
	protected ServantFaceIconComponent icon; // 0x18
	[SerializeField] // RVA: 0xC68344 Offset: 0xC68344 VA: 0xC68344
	protected UISprite raritySprite; // 0x20
	[SerializeField] // RVA: 0xC68354 Offset: 0xC68354 VA: 0xC68354
	protected GameObject statusInfoObj; // 0x28
	[SerializeField] // RVA: 0xC68364 Offset: 0xC68364 VA: 0xC68364
	protected UILabel statusInfoLabel; // 0x30
	[SerializeField] // RVA: 0xC68374 Offset: 0xC68374 VA: 0xC68374
	private GameObject equippedInfo; // 0x38
	[SerializeField] // RVA: 0xC68384 Offset: 0xC68384 VA: 0xC68384
	private UILabel equippedLabel; // 0x40
	[SerializeField] // RVA: 0xC68394 Offset: 0xC68394 VA: 0xC68394
	private UILabel nameLabel; // 0x48
	private UserCommandCodeEntity userCommandCodeEntity; // 0x50

	// Methods

	// RVA: 0x130B0A4 Offset: 0x130B0A4 VA: 0x130B0A4
	public void .ctor() { }

	// RVA: 0x130B0AC Offset: 0x130B0AC VA: 0x130B0AC
	public void SetIcon(UserCommandCodeEntity userCommandCode, bool isEquipedCommandCode, bool DispEquippedInfo = False, int equippedSvtId = -1) { }

	// RVA: 0x130B300 Offset: 0x130B300 VA: 0x130B300
	public void SetEquippedInfo(bool DispInfo = False, int equippedSvtId = -1) { }

	// RVA: 0x130B384 Offset: 0x130B384 VA: 0x130B384
	public void SetIconNoDispStatus(UserCommandCodeEntity userCommandCode) { }

	// RVA: 0x130B500 Offset: 0x130B500 VA: 0x130B500
	public void HideStatusInfo() { }
}

// Namespace: 
public class CombineCommandCodeListViewItem : ListViewItem // TypeDefIndex: 9511
{
	// Fields
	private bool isEquiped; // 0x70
	private bool isLock; // 0x71
	private bool isChoice; // 0x72
	private bool isSelect; // 0x73
	private bool isMaxEquiped; // 0x74
	private bool isSwapLock; // 0x75
	private bool isSwapChoice; // 0x76
	private bool isReplaceSource; // 0x77
	[CompilerGeneratedAttribute] // RVA: 0xC683A4 Offset: 0xC683A4 VA: 0xC683A4
	[DebuggerBrowsableAttribute] // RVA: 0xC683A4 Offset: 0xC683A4 VA: 0xC683A4
	private int <EquipedSvtId>k__BackingField; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xC683E0 Offset: 0xC683E0 VA: 0xC683E0
	[DebuggerBrowsableAttribute] // RVA: 0xC683E0 Offset: 0xC683E0 VA: 0xC683E0
	private int <BaseSvtId>k__BackingField; // 0x7C
	private UserCommandCodeEntity userCommandCode; // 0x80
	protected CommandCodeEntity commandCodeEntity; // 0x88
	protected ObscuredInt commandCodeId; // 0x90
	protected int rarity; // 0xA0
	protected long amountSortValue; // 0xA8
	protected IconLabelInfo iconLabelInfo1; // 0xB0
	protected IconLabelInfo iconLabelInfo2; // 0xB8
	protected int[] commandCodeCategoryIdList; // 0xC0

	// Properties
	public int EquipedSvtId { get; set; }
	public int BaseSvtId { get; set; }
	public bool IsSelected { get; set; }
	public bool CanNotSelect { get; }
	public bool IsEquiped { get; }
	public bool IsMaxEquiped { get; }
	public bool IsLock { get; }
	public bool IsChoice { get; }
	public UserCommandCodeEntity UserCommandCode { get; }
	public int CommandCodeId { get; }
	public bool IsSwapLock { get; }
	public bool IsDispLock { get; }
	public bool IsSwapChoice { get; }
	public bool IsDispChoice { get; }
	public IconLabelInfo IconInfo1 { get; }
	public IconLabelInfo IconInfo2 { get; }

	// Methods

	// RVA: 0x130B534 Offset: 0x130B534 VA: 0x130B534
	public void .ctor(UserCommandCodeEntity userCommandCodeEntity, bool isReplaceSource, bool isEquiped, int equipedSvtId, int baseSvtId, bool isMax) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF2D0 Offset: 0xCCF2D0 VA: 0xCCF2D0
	// RVA: 0x130B7BC Offset: 0x130B7BC VA: 0x130B7BC
	public int get_EquipedSvtId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF2E0 Offset: 0xCCF2E0 VA: 0xCCF2E0
	// RVA: 0x130B7AC Offset: 0x130B7AC VA: 0x130B7AC
	public void set_EquipedSvtId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF2F0 Offset: 0xCCF2F0 VA: 0xCCF2F0
	// RVA: 0x130B7C4 Offset: 0x130B7C4 VA: 0x130B7C4
	public int get_BaseSvtId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF300 Offset: 0xCCF300 VA: 0xCCF300
	// RVA: 0x130B7B4 Offset: 0x130B7B4 VA: 0x130B7B4
	public void set_BaseSvtId(int value) { }

	// RVA: 0x130B7CC Offset: 0x130B7CC VA: 0x130B7CC
	public void Modify(UserCommandCodeEntity userCommandCodeEntity) { }

	// RVA: 0x130B7F4 Offset: 0x130B7F4 VA: 0x130B7F4
	public void ModifyUserCommandCodeEntity(UserCommandCodeEntity userCommandCodeEntity) { }

	// RVA: 0x130B7FC Offset: 0x130B7FC VA: 0x130B7FC
	public void ModifyLockItem() { }

	// RVA: 0x130B840 Offset: 0x130B840 VA: 0x130B840
	public void ModifyChoiceItem() { }

	// RVA: 0x130B884 Offset: 0x130B884 VA: 0x130B884 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x130BCB8 Offset: 0x130BCB8 VA: 0x130BCB8 Slot: 5
	public override bool IsMatchFilter(ListViewSort sort) { }

	// RVA: 0x130BB6C Offset: 0x130BB6C VA: 0x130BB6C
	public bool get_IsSelected() { }

	// RVA: 0x130BE74 Offset: 0x130BE74 VA: 0x130BE74
	public void set_IsSelected(bool value) { }

	// RVA: 0x130BE80 Offset: 0x130BE80 VA: 0x130BE80
	public bool get_CanNotSelect() { }

	// RVA: 0x130BEA0 Offset: 0x130BEA0 VA: 0x130BEA0
	public bool get_IsEquiped() { }

	// RVA: 0x130BEA8 Offset: 0x130BEA8 VA: 0x130BEA8
	public bool get_IsMaxEquiped() { }

	// RVA: 0x130BEB0 Offset: 0x130BEB0 VA: 0x130BEB0
	public bool get_IsLock() { }

	// RVA: 0x130BEB8 Offset: 0x130BEB8 VA: 0x130BEB8
	public bool get_IsChoice() { }

	// RVA: 0x130BEC0 Offset: 0x130BEC0 VA: 0x130BEC0
	public UserCommandCodeEntity get_UserCommandCode() { }

	// RVA: 0x130BEC8 Offset: 0x130BEC8 VA: 0x130BEC8
	public int get_CommandCodeId() { }

	// RVA: 0x130BF38 Offset: 0x130BF38 VA: 0x130BF38
	public bool SwapLock() { }

	// RVA: 0x130BF54 Offset: 0x130BF54 VA: 0x130BF54
	public bool get_IsSwapLock() { }

	// RVA: 0x130BF5C Offset: 0x130BF5C VA: 0x130BF5C
	public bool get_IsDispLock() { }

	// RVA: 0x130BF7C Offset: 0x130BF7C VA: 0x130BF7C
	public bool SwapChoice() { }

	// RVA: 0x130BF98 Offset: 0x130BF98 VA: 0x130BF98
	public bool get_IsSwapChoice() { }

	// RVA: 0x130BB74 Offset: 0x130BB74 VA: 0x130BB74
	public bool get_IsDispChoice() { }

	// RVA: 0x130BFA0 Offset: 0x130BFA0 VA: 0x130BFA0
	public IconLabelInfo get_IconInfo1() { }

	// RVA: 0x130BFA8 Offset: 0x130BFA8 VA: 0x130BFA8
	public IconLabelInfo get_IconInfo2() { }
}

// Namespace: 
public class CombineCommandCodeListViewItemDraw : MonoBehaviour // TypeDefIndex: 9512
{
	// Fields
	private const string DISP_NUM = "1";
	[SerializeField] // RVA: 0xC6841C Offset: 0xC6841C VA: 0xC6841C
	private ServantFaceIconComponent icon; // 0x18
	[SerializeField] // RVA: 0xC6842C Offset: 0xC6842C VA: 0xC6842C
	private UISprite lockSprite; // 0x20
	[SerializeField] // RVA: 0xC6843C Offset: 0xC6843C VA: 0xC6843C
	private UISprite choiceSprite; // 0x28
	[SerializeField] // RVA: 0xC6844C Offset: 0xC6844C VA: 0xC6844C
	private UISprite maskSprite; // 0x30
	[SerializeField] // RVA: 0xC6845C Offset: 0xC6845C VA: 0xC6845C
	private UILabel maskLabel; // 0x38
	[SerializeField] // RVA: 0xC6846C Offset: 0xC6846C VA: 0xC6846C
	private GameObject equippedInfo; // 0x40
	[SerializeField] // RVA: 0xC6847C Offset: 0xC6847C VA: 0xC6847C
	private UILabel equippedLabel; // 0x48
	[SerializeField] // RVA: 0xC6848C Offset: 0xC6848C VA: 0xC6848C
	private UILabel nameLabel; // 0x50
	[SerializeField] // RVA: 0xC6849C Offset: 0xC6849C VA: 0xC6849C
	private UILabel selectNumLabel; // 0x58
	[SerializeField] // RVA: 0xC684AC Offset: 0xC684AC VA: 0xC684AC
	private GameObject selectImgObj; // 0x60

	// Methods

	// RVA: 0x130BFB0 Offset: 0x130BFB0 VA: 0x130BFB0
	public void .ctor() { }

	// RVA: 0x130BFB8 Offset: 0x130BFB8 VA: 0x130BFB8
	public void SetItem(CombineCommandCodeListViewItem item, CombineCommandCodeListViewItemDraw.DispMode mode) { }

	// RVA: 0x130C2FC Offset: 0x130C2FC VA: 0x130C2FC
	public void SetInput(CombineCommandCodeListViewItem item) { }
}

// Namespace: 
public enum CombineCommandCodeListViewItemDraw.DispMode // TypeDefIndex: 9513
{
	// Fields
	public int value__; // 0x0
	public const CombineCommandCodeListViewItemDraw.DispMode INVISIBLE = 0;
	public const CombineCommandCodeListViewItemDraw.DispMode INVALID = 1;
	public const CombineCommandCodeListViewItemDraw.DispMode VALID = 2;
	public const CombineCommandCodeListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class CombineCommandCodeListViewManager : ListViewManager // TypeDefIndex: 9514
{
	// Fields
	private const string TYPE_ARTS = "img_bg_arts";
	private const string TYPE_BUSTER = "img_bg_buster";
	private const string TYPE_QUICK = "img_bg_quick";
	private const string SORT_SAVE_KEY = "CombineCommandCode";
	[SerializeField] // RVA: 0xC684BC Offset: 0xC684BC VA: 0xC684BC
	private CombineRootComponent combineRootComponent; // 0x138
	[SerializeField] // RVA: 0xC684CC Offset: 0xC684CC VA: 0xC684CC
	private UILabel combineInfoMsgLb; // 0x140
	[SerializeField] // RVA: 0xC684DC Offset: 0xC684DC VA: 0xC684DC
	private UISprite sortExplanationSprite; // 0x148
	[SerializeField] // RVA: 0xC684EC Offset: 0xC684EC VA: 0xC684EC
	private UILabel commandCodeInfoLabel; // 0x150
	[SerializeField] // RVA: 0xC684FC Offset: 0xC684FC VA: 0xC684FC
	private UICommonButton statusTabButton; // 0x158
	[SerializeField] // RVA: 0xC6850C Offset: 0xC6850C VA: 0xC6850C
	private UISprite statusTabSprite; // 0x160
	[SerializeField] // RVA: 0xC6851C Offset: 0xC6851C VA: 0xC6851C
	private UICommonButton lockTabButton; // 0x168
	[SerializeField] // RVA: 0xC6852C Offset: 0xC6852C VA: 0xC6852C
	private UISprite lockTabSprite; // 0x170
	[SerializeField] // RVA: 0xC6853C Offset: 0xC6853C VA: 0xC6853C
	private UICommonButton choiceTabButton; // 0x178
	[SerializeField] // RVA: 0xC6854C Offset: 0xC6854C VA: 0xC6854C
	private UISprite choiceTabSprite; // 0x180
	[SerializeField] // RVA: 0xC6855C Offset: 0xC6855C VA: 0xC6855C
	private UISprite filterSprite; // 0x188
	[SerializeField] // RVA: 0xC6856C Offset: 0xC6856C VA: 0xC6856C
	private ListViewItemSeed normalSizeSeed; // 0x190
	[SerializeField] // RVA: 0xC6857C Offset: 0xC6857C VA: 0xC6857C
	private ListViewItemSeed smallSizeSeed; // 0x198
	[SerializeField] // RVA: 0xC6858C Offset: 0xC6858C VA: 0xC6858C
	private ListViewItemSeed extremelySmallSizeSeed; // 0x1A0
	[SerializeField] // RVA: 0xC6859C Offset: 0xC6859C VA: 0xC6859C
	private UICommonButton scaleChangeButton; // 0x1A8
	[SerializeField] // RVA: 0xC685AC Offset: 0xC685AC VA: 0xC685AC
	private UISprite scaleChangeButtonSprite; // 0x1B0
	[SerializeField] // RVA: 0xC685BC Offset: 0xC685BC VA: 0xC685BC
	private UISprite commandCardTypeSprite; // 0x1B8
	[SerializeField] // RVA: 0xC685CC Offset: 0xC685CC VA: 0xC685CC
	private UISprite bgTxtSprite; // 0x1C0
	[SerializeField] // RVA: 0xC685DC Offset: 0xC685DC VA: 0xC685DC
	private ServantFaceIconComponent selectedCommandCode; // 0x1C8
	[SerializeField] // RVA: 0xC685EC Offset: 0xC685EC VA: 0xC685EC
	private UILabel skillName; // 0x1D0
	[SerializeField] // RVA: 0xC685FC Offset: 0xC685FC VA: 0xC685FC
	private UILabel skillMessage; // 0x1D8
	[SerializeField] // RVA: 0xC6860C Offset: 0xC6860C VA: 0xC6860C
	private UICommonButton decideButton; // 0x1E0
	[SerializeField] // RVA: 0xC6861C Offset: 0xC6861C VA: 0xC6861C
	private CommandCardDialog warningDialog; // 0x1E8
	[SerializeField] // RVA: 0xC6862C Offset: 0xC6862C VA: 0xC6862C
	private GameObject equippedInfo; // 0x1F0
	[SerializeField] // RVA: 0xC6863C Offset: 0xC6863C VA: 0xC6863C
	private UILabel equippedLabel; // 0x1F8
	[SerializeField] // RVA: 0xC6864C Offset: 0xC6864C VA: 0xC6864C
	private UILabel nameLabel; // 0x200
	private static ListViewSort commandCodeSortInfo; // 0x0
	private ListViewSort.ScaleType scaleType; // 0x208
	private CombineCommandCodeListViewManager.InitMode initMode; // 0x20C
	private CombineCommandCodeListViewManager.ModeKind modeKind; // 0x210
	[CompilerGeneratedAttribute] // RVA: 0xC6865C Offset: 0xC6865C VA: 0xC6865C
	[DebuggerBrowsableAttribute] // RVA: 0xC6865C Offset: 0xC6865C VA: 0xC6865C
	private Action callbackFunc2; // 0x218
	private int callbackCount; // 0x220
	private CombineCommandCodeListViewManager.RequestCallbackFunc requestCallback; // 0x228
	private CombineCommandCodeListViewItem selectItem; // 0x230
	private UserCommandCodeEntity selectShowStatusUserCmdCode; // 0x238
	private long nowEquipedUserCommandCodeId; // 0x240

	// Properties
	public List<CombineCommandCodeListViewObject> ObjectList { get; }
	public List<CombineCommandCodeListViewObject> ClippingObjectList { get; }
	public CombineCommandCodeListViewManager.ModeKind GetModeKind { get; }

	// Methods

	// RVA: 0x130C3C8 Offset: 0x130C3C8 VA: 0x130C3C8
	public void .ctor() { }

	// RVA: 0x130C3D0 Offset: 0x130C3D0 VA: 0x130C3D0
	private void add_callbackFunc2(Action value) { }

	// RVA: 0x130C4C0 Offset: 0x130C4C0 VA: 0x130C4C0
	private void remove_callbackFunc2(Action value) { }

	// RVA: 0x130C5B0 Offset: 0x130C5B0 VA: 0x130C5B0
	public List<CombineCommandCodeListViewObject> get_ObjectList() { }

	// RVA: 0x130C724 Offset: 0x130C724 VA: 0x130C724
	public List<CombineCommandCodeListViewObject> get_ClippingObjectList() { }

	// RVA: 0x130C95C Offset: 0x130C95C VA: 0x130C95C
	public void CreateList(int baseSvtId, long beforeSelectedUserCommandCodeId, long nowEquipedUserCommandCodeId, CombineCommandCodeListViewManager.ModeKind modeKind, BattleCommand.TYPE commandCardType) { }

	// RVA: 0x130D580 Offset: 0x130D580 VA: 0x130D580
	private void SetStatusKind(CombineCommandCodeListViewManager.ModeKind modeKind) { }

	// RVA: 0x130D268 Offset: 0x130D268 VA: 0x130D268
	private void SetSelectedCommandCodeData(CombineCommandCodeListViewItem item) { }

	// RVA: 0x130DA74 Offset: 0x130DA74 VA: 0x130DA74
	public void ModifyList(bool isIconSizeChange = False) { }

	// RVA: 0x130DEA0 Offset: 0x130DEA0 VA: 0x130DEA0
	public void ModifyItem(long userCommandCodeId) { }

	// RVA: 0x130D9F4 Offset: 0x130D9F4 VA: 0x130D9F4
	private void SetDecideButtonStatus(bool isEnable) { }

	// RVA: 0x130E1A4 Offset: 0x130E1A4 VA: 0x130E1A4
	public void OnClickDecide() { }

	// RVA: 0x130E330 Offset: 0x130E330 VA: 0x130E330
	public void DestroyList() { }

	// RVA: 0x130E370 Offset: 0x130E370 VA: 0x130E370
	public CombineCommandCodeListViewItem GetItem(int index) { }

	// RVA: 0x130E418 Offset: 0x130E418 VA: 0x130E418 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x130E550 Offset: 0x130E550 VA: 0x130E550
	public void SetMode(CombineCommandCodeListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x130E558 Offset: 0x130E558 VA: 0x130E558
	public void SetMode(CombineCommandCodeListViewManager.InitMode mode) { }

	// RVA: 0x130E694 Offset: 0x130E694 VA: 0x130E694
	private void RequestListObject(CombineCommandCodeListViewObject.InitMode mode, float delay = 0) { }

	// RVA: 0x130E8CC Offset: 0x130E8CC VA: 0x130E8CC
	private void OnMoveEnd() { }

	// RVA: 0x130E9B4 Offset: 0x130E9B4 VA: 0x130E9B4
	public void OnClickScaleChange() { }

	// RVA: 0x130EB08 Offset: 0x130EB08 VA: 0x130EB08
	public bool GetSwapLockList(out long[] lockList, out long[] unlockList) { }

	// RVA: 0x130EDDC Offset: 0x130EDDC VA: 0x130EDDC
	public bool GetSwapChoiceList(out long[] choiceList, out long[] unchoiceList) { }

	// RVA: 0x130F0B0 Offset: 0x130F0B0 VA: 0x130F0B0
	public void InitBackListView() { }

	// RVA: 0x130F2B0 Offset: 0x130F2B0 VA: 0x130F2B0
	public void OnClickNormalStatus() { }

	// RVA: 0x130F374 Offset: 0x130F374 VA: 0x130F374
	public void OnClickCollectLock() { }

	// RVA: 0x130F460 Offset: 0x130F460 VA: 0x130F460
	public void OnClickChoiceTab() { }

	// RVA: 0x130F0DC Offset: 0x130F0DC VA: 0x130F0DC
	private void StatusRequest(CombineCommandCodeListViewManager.RequestCallbackFunc callback) { }

	// RVA: 0x130F778 Offset: 0x130F778 VA: 0x130F778
	private void EndClickTabStatus(bool isRequest) { }

	// RVA: 0x130F7B0 Offset: 0x130F7B0 VA: 0x130F7B0
	private void EndClickTabLock(bool isRequest) { }

	// RVA: 0x130F7E8 Offset: 0x130F7E8 VA: 0x130F7E8
	private void EndClickTabChoice(bool isRequest) { }

	// RVA: 0x130F820 Offset: 0x130F820 VA: 0x130F820
	private void EndStatusSync(string result) { }

	// RVA: 0x130F840 Offset: 0x130F840 VA: 0x130F840
	public void OnClickListView(ListViewObject listviewObject) { }

	// RVA: 0x130F844 Offset: 0x130F844 VA: 0x130F844
	public void OnClickListView(ListViewItem item) { }

	// RVA: 0x130FBC8 Offset: 0x130FBC8 VA: 0x130FBC8
	public void OnLongPushListView(ListViewItem item) { }

	// RVA: 0x130FD20 Offset: 0x130FD20 VA: 0x130FD20
	public CombineCommandCodeListViewItem GetSelectItem() { }

	// RVA: 0x130FD28 Offset: 0x130FD28 VA: 0x130FD28
	public UserCommandCodeEntity GetSelectMaterialUserCmdCode() { }

	// RVA: 0x130FD30 Offset: 0x130FD30 VA: 0x130FD30
	public void OnClickFilterKind() { }

	// RVA: 0x130FE28 Offset: 0x130FE28 VA: 0x130FE28
	public void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x130FEF4 Offset: 0x130FEF4 VA: 0x130FEF4
	private void EndCloseSelectFilterKind() { }

	// RVA: 0x130D960 Offset: 0x130D960 VA: 0x130D960
	private void SetFilterButtonImage() { }

	// RVA: 0x130FEF8 Offset: 0x130FEF8 VA: 0x130FEF8
	public void OnClickSortKind() { }

	// RVA: 0x130FFF0 Offset: 0x130FFF0 VA: 0x130FFF0
	private void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x1310080 Offset: 0x1310080 VA: 0x1310080
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x1310170 Offset: 0x1310170 VA: 0x1310170 Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x13103F0 Offset: 0x13103F0 VA: 0x13103F0
	public CombineCommandCodeListViewManager.ModeKind get_GetModeKind() { }

	// RVA: 0x130BB94 Offset: 0x130BB94 VA: 0x130BB94
	public long GetCommandCodeAmountSortValue(int commandCodeId) { }

	// RVA: 0x13103F8 Offset: 0x13103F8 VA: 0x13103F8
	private static void .cctor() { }
}

// Namespace: 
public enum CombineCommandCodeListViewManager.ModeKind // TypeDefIndex: 9515
{
	// Fields
	public int value__; // 0x0
	public const CombineCommandCodeListViewManager.ModeKind NORMAL = 0;
	public const CombineCommandCodeListViewManager.ModeKind LOCK = 1;
	public const CombineCommandCodeListViewManager.ModeKind CHOICE = 2;
}

// Namespace: 
public enum CombineCommandCodeListViewManager.InitMode // TypeDefIndex: 9516
{
	// Fields
	public int value__; // 0x0
	public const CombineCommandCodeListViewManager.InitMode NONE = 0;
	public const CombineCommandCodeListViewManager.InitMode INTO = 1;
	public const CombineCommandCodeListViewManager.InitMode VALID = 2;
	public const CombineCommandCodeListViewManager.InitMode INPUT = 3;
	public const CombineCommandCodeListViewManager.InitMode ENTER = 4;
	public const CombineCommandCodeListViewManager.InitMode EXIT = 5;
	public const CombineCommandCodeListViewManager.InitMode MODIFY = 6;
}

// Namespace: 
public sealed class CombineCommandCodeListViewManager.RequestCallbackFunc : MulticastDelegate // TypeDefIndex: 9517
{
	// Methods

	// RVA: 0x130F364 Offset: 0x130F364 VA: 0x130F364
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x130F54C Offset: 0x130F54C VA: 0x130F54C Slot: 11
	public virtual void Invoke(bool isRequest) { }

	// RVA: 0x13104DC Offset: 0x13104DC VA: 0x13104DC Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isRequest, AsyncCallback callback, object object) { }

	// RVA: 0x131056C Offset: 0x131056C VA: 0x131056C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class CombineCommandCodeListViewObject : ListViewObject // TypeDefIndex: 9518
{
	// Fields
	protected CombineCommandCodeListViewObject.State state; // 0x6C
	protected CombineCommandCodeListViewItemDraw.DispMode dispMode; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC68698 Offset: 0xC68698 VA: 0xC68698
	[DebuggerBrowsableAttribute] // RVA: 0xC68698 Offset: 0xC68698 VA: 0xC68698
	private Action callbackFunc; // 0x78
	protected CombineCommandCodeListViewItemDraw itemDraw; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x1310578 Offset: 0x1310578 VA: 0x1310578
	public void .ctor() { }

	// RVA: 0x13105E0 Offset: 0x13105E0 VA: 0x13105E0
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x13106CC Offset: 0x13106CC VA: 0x13106CC
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x13107B8 Offset: 0x13107B8 VA: 0x13107B8
	protected void Awake() { }

	// RVA: 0x130C8D8 Offset: 0x130C8D8 VA: 0x130C8D8
	public CombineCommandCodeListViewItem GetItem() { }

	// RVA: 0x131082C Offset: 0x131082C VA: 0x131082C Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x131085C Offset: 0x131085C VA: 0x131085C Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x1310854 Offset: 0x1310854 VA: 0x1310854
	protected void InitItem() { }

	// RVA: 0x1310884 Offset: 0x1310884 VA: 0x1310884 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x1310984 Offset: 0x1310984 VA: 0x1310984
	public void Init(CombineCommandCodeListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1310C50 Offset: 0x1310C50 VA: 0x1310C50
	public void Init(CombineCommandCodeListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x130E848 Offset: 0x130E848 VA: 0x130E848
	public void Init(CombineCommandCodeListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x130E4D0 Offset: 0x130E4D0 VA: 0x130E4D0
	public void Init(CombineCommandCodeListViewObject.InitMode initMode) { }

	// RVA: 0x1310B40 Offset: 0x1310B40 VA: 0x1310B40
	protected void SetupDisp() { }

	// RVA: 0x1310CD4 Offset: 0x1310CD4 VA: 0x1310CD4
	public void OnClickSelect() { }

	// RVA: 0x1310F68 Offset: 0x1310F68 VA: 0x1310F68
	public void OnLongPush() { }

	// RVA: 0x1311060 Offset: 0x1311060 VA: 0x1311060 Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum CombineCommandCodeListViewObject.InitMode // TypeDefIndex: 9519
{
	// Fields
	public int value__; // 0x0
	public const CombineCommandCodeListViewObject.InitMode INVISIBLE = 0;
	public const CombineCommandCodeListViewObject.InitMode INVALID = 1;
	public const CombineCommandCodeListViewObject.InitMode VALID = 2;
	public const CombineCommandCodeListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum CombineCommandCodeListViewObject.State // TypeDefIndex: 9520
{
	// Fields
	public int value__; // 0x0
	public const CombineCommandCodeListViewObject.State INIT = 0;
	public const CombineCommandCodeListViewObject.State IDLE = 1;
	public const CombineCommandCodeListViewObject.State INPUT = 2;
}

// Namespace: 
public class CommandCardDialog : BaseDialog // TypeDefIndex: 9521
{
	// Fields
	private static readonly int DETACH_NEED_ITEM_NUM; // 0x0
	private static readonly Vector3 UNLOCK_ITEM_SCALE; // 0x4
	private static readonly Vector3 REMOVE_ITEM_SCALE; // 0x10
	[SerializeField] // RVA: 0xC686D4 Offset: 0xC686D4 VA: 0xC686D4
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC686E4 Offset: 0xC686E4 VA: 0xC686E4
	protected UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC686F4 Offset: 0xC686F4 VA: 0xC686F4
	protected GameObject unlockInfoObj; // 0x68
	[SerializeField] // RVA: 0xC68704 Offset: 0xC68704 VA: 0xC68704
	protected UIGrid unlockItemGrid; // 0x70
	[SerializeField] // RVA: 0xC68714 Offset: 0xC68714 VA: 0xC68714
	protected UILabel spendQpTxtLabel; // 0x78
	[SerializeField] // RVA: 0xC68724 Offset: 0xC68724 VA: 0xC68724
	protected UILabel spendQpLabel; // 0x80
	[SerializeField] // RVA: 0xC68734 Offset: 0xC68734 VA: 0xC68734
	protected UILabel haveQpTxtLabel; // 0x88
	[SerializeField] // RVA: 0xC68744 Offset: 0xC68744 VA: 0xC68744
	protected UILabel haveQpLabel; // 0x90
	[SerializeField] // RVA: 0xC68754 Offset: 0xC68754 VA: 0xC68754
	protected UILabel itemInfoLabel; // 0x98
	[SerializeField] // RVA: 0xC68764 Offset: 0xC68764 VA: 0xC68764
	protected UILabel answerBackLabel; // 0xA0
	[SerializeField] // RVA: 0xC68774 Offset: 0xC68774 VA: 0xC68774
	protected GameObject lockResultInfoObj; // 0xA8
	[SerializeField] // RVA: 0xC68784 Offset: 0xC68784 VA: 0xC68784
	protected UIGrid returnItemGrid; // 0xB0
	[SerializeField] // RVA: 0xC68794 Offset: 0xC68794 VA: 0xC68794
	protected UILabel lockResultLabel; // 0xB8
	[SerializeField] // RVA: 0xC687A4 Offset: 0xC687A4 VA: 0xC687A4
	protected UILabel itemNumLabel; // 0xC0
	[SerializeField] // RVA: 0xC687B4 Offset: 0xC687B4 VA: 0xC687B4
	protected GameObject equipmentCommandCardObj; // 0xC8
	[SerializeField] // RVA: 0xC687C4 Offset: 0xC687C4 VA: 0xC687C4
	protected CombineCommandCardComponent targetCommandCard; // 0xD0
	[SerializeField] // RVA: 0xC687D4 Offset: 0xC687D4 VA: 0xC687D4
	protected CombineCommandCardEquipmentComponent commandCardEquipmentIcon; // 0xD8
	[SerializeField] // RVA: 0xC687E4 Offset: 0xC687E4 VA: 0xC687E4
	protected UILabel equipmentWarningLabel; // 0xE0
	[SerializeField] // RVA: 0xC687F4 Offset: 0xC687F4 VA: 0xC687F4
	private GameObject removeCommandCodeConfirmObj; // 0xE8
	[SerializeField] // RVA: 0xC68804 Offset: 0xC68804 VA: 0xC68804
	private CombineCommandCardEquipmentComponent equippedCommandCardIcon; // 0xF0
	[SerializeField] // RVA: 0xC68814 Offset: 0xC68814 VA: 0xC68814
	private UILabel removeDetailLabel; // 0xF8
	[SerializeField] // RVA: 0xC68824 Offset: 0xC68824 VA: 0xC68824
	protected GameObject removeCommandCardSlotObj; // 0x100
	[SerializeField] // RVA: 0xC68834 Offset: 0xC68834 VA: 0xC68834
	protected UIGrid removeItemGrid; // 0x108
	[SerializeField] // RVA: 0xC68844 Offset: 0xC68844 VA: 0xC68844
	protected UILabel haveItemTxtLabel; // 0x110
	[SerializeField] // RVA: 0xC68854 Offset: 0xC68854 VA: 0xC68854
	protected UILabel haveItemNumLabel; // 0x118
	[SerializeField] // RVA: 0xC68864 Offset: 0xC68864 VA: 0xC68864
	protected UILabel spendItemTxtLabel; // 0x120
	[SerializeField] // RVA: 0xC68874 Offset: 0xC68874 VA: 0xC68874
	protected UILabel spendItemNumLabel; // 0x128
	[SerializeField] // RVA: 0xC68884 Offset: 0xC68884 VA: 0xC68884
	protected UILabel removeWarningLabel; // 0x130
	[SerializeField] // RVA: 0xC68894 Offset: 0xC68894 VA: 0xC68894
	protected GameObject warningCommandCodeObj; // 0x138
	[SerializeField] // RVA: 0xC688A4 Offset: 0xC688A4 VA: 0xC688A4
	protected CombineCommandCardEquipmentComponent nowEquipedCommandCodeIcon; // 0x140
	[SerializeField] // RVA: 0xC688B4 Offset: 0xC688B4 VA: 0xC688B4
	protected UILabel warningLabel; // 0x148
	[SerializeField] // RVA: 0xC688C4 Offset: 0xC688C4 VA: 0xC688C4
	protected GameObject overwriteCommandCodeObj; // 0x150
	[SerializeField] // RVA: 0xC688D4 Offset: 0xC688D4 VA: 0xC688D4
	protected CombineCommandCardEquipmentComponent equipedCommandCodeIcon; // 0x158
	[SerializeField] // RVA: 0xC688E4 Offset: 0xC688E4 VA: 0xC688E4
	protected SkillIconComponent equipedCommandCodeSkillIcon; // 0x160
	[SerializeField] // RVA: 0xC688F4 Offset: 0xC688F4 VA: 0xC688F4
	protected UILabel equipedCommandCodeSkillName; // 0x168
	[SerializeField] // RVA: 0xC68904 Offset: 0xC68904 VA: 0xC68904
	protected UILabel equipedCommandCodeSkillDetail; // 0x170
	[SerializeField] // RVA: 0xC68914 Offset: 0xC68914 VA: 0xC68914
	protected CombineCommandCardEquipmentComponent overwriteCommandCodeIcon; // 0x178
	[SerializeField] // RVA: 0xC68924 Offset: 0xC68924 VA: 0xC68924
	protected SkillIconComponent overwriteCommandCodeSkillIcon; // 0x180
	[SerializeField] // RVA: 0xC68934 Offset: 0xC68934 VA: 0xC68934
	protected UILabel overwriteCommandCodeSkillName; // 0x188
	[SerializeField] // RVA: 0xC68944 Offset: 0xC68944 VA: 0xC68944
	protected UILabel overwriteCommandCodeSkillDetail; // 0x190
	[SerializeField] // RVA: 0xC68954 Offset: 0xC68954 VA: 0xC68954
	protected UILabel overwriteCommandCodeWarningLabel; // 0x198
	[SerializeField] // RVA: 0xC68964 Offset: 0xC68964 VA: 0xC68964
	protected UILabel decideButtonLabel; // 0x1A0
	[SerializeField] // RVA: 0xC68974 Offset: 0xC68974 VA: 0xC68974
	protected UILabel cancelButtonLabel; // 0x1A8
	[SerializeField] // RVA: 0xC68984 Offset: 0xC68984 VA: 0xC68984
	protected UILabel closeButtonLabel; // 0x1B0
	[SerializeField] // RVA: 0xC68994 Offset: 0xC68994 VA: 0xC68994
	protected GameObject canExecuteButtonsObj; // 0x1B8
	[SerializeField] // RVA: 0xC689A4 Offset: 0xC689A4 VA: 0xC689A4
	protected GameObject canNotExecuteButtonObj; // 0x1C0
	[SerializeField] // RVA: 0xC689B4 Offset: 0xC689B4 VA: 0xC689B4
	protected GameObject releaseItemObj; // 0x1C8
	protected CommandCardDialog.State state; // 0x1D0
	protected CommandCardDialog.ClickDelegate closeFunc; // 0x1D8
	protected Action closeCallbackFunc; // 0x1E0

	// Properties
	protected override GameObject closeBtnObject { get; }

	// Methods

	// RVA: 0x1650874 Offset: 0x1650874 VA: 0x1650874
	public void .ctor() { }

	// RVA: 0x16508DC Offset: 0x16508DC VA: 0x16508DC
	public void Init() { }

	// RVA: 0x165113C Offset: 0x165113C VA: 0x165113C
	public void OpenUnlockCommandCardEquipment(UserServantEntity baseUserServantEntity, int cardIdx, CommandCardDialog.ClickDelegate closeCallback) { }

	// RVA: 0x16519C4 Offset: 0x16519C4 VA: 0x16519C4
	public void OpenLockCommandCardResult(UserServantEntity baseUserServantEntity, int cardIdx, CommandCardDialog.ClickDelegate closeCallback) { }

	// RVA: 0x16522FC Offset: 0x16522FC VA: 0x16522FC
	public void OpenLockEquipSlot(bool equipped, CommandCardDialog.ClickDelegate closeCallback) { }

	// RVA: 0x1652DF4 Offset: 0x1652DF4 VA: 0x1652DF4
	public void OpenRemoveEquip(UserCommandCodeEntity userCommandCode, CommandCardDialog.ClickDelegate closeCallback) { }

	// RVA: 0x165313C Offset: 0x165313C VA: 0x165313C
	private void GetSkillInfo(UserCommandCodeEntity userCommandCode, out int skillId, out string skillName, out string skillDetail) { }

	// RVA: 0x1653280 Offset: 0x1653280 VA: 0x1653280
	protected void EndOpen() { }

	// RVA: 0x165328C Offset: 0x165328C VA: 0x165328C
	public void Close() { }

	// RVA: 0x1653294 Offset: 0x1653294 VA: 0x1653294
	public void Close(Action callback) { }

	// RVA: 0x1653324 Offset: 0x1653324 VA: 0x1653324
	protected void EndClose() { }

	// RVA: 0x1653360 Offset: 0x1653360 VA: 0x1653360
	public void touchCommandCard(int index) { }

	// RVA: 0x1653364 Offset: 0x1653364 VA: 0x1653364
	public void OnClickDecide() { }

	// RVA: 0x16536A0 Offset: 0x16536A0 VA: 0x16536A0
	public void OnClickCancel() { }

	// RVA: 0x16537B0 Offset: 0x16537B0 VA: 0x16537B0 Slot: 4
	protected override GameObject get_closeBtnObject() { }

	// RVA: 0x165390C Offset: 0x165390C VA: 0x165390C
	private static void .cctor() { }
}

// Namespace: 
protected enum CommandCardDialog.State // TypeDefIndex: 9522
{
	// Fields
	public int value__; // 0x0
	public const CommandCardDialog.State INIT = 0;
	public const CommandCardDialog.State OPEN = 1;
	public const CommandCardDialog.State INPUT = 2;
	public const CommandCardDialog.State CLOSE = 3;
}

// Namespace: 
public sealed class CommandCardDialog.ClickDelegate : MulticastDelegate // TypeDefIndex: 9523
{
	// Methods

	// RVA: 0x16539E0 Offset: 0x16539E0 VA: 0x16539E0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1653474 Offset: 0x1653474 VA: 0x1653474 Slot: 11
	public virtual void Invoke(bool isDecide) { }

	// RVA: 0x16539F0 Offset: 0x16539F0 VA: 0x16539F0 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isDecide, AsyncCallback callback, object object) { }

	// RVA: 0x1653A80 Offset: 0x1653A80 VA: 0x1653A80 Slot: 13
