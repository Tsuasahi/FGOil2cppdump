	[SerializeField] // RVA: 0xC6F0E8 Offset: 0xC6F0E8 VA: 0xC6F0E8
	private UICommonButton bonusFilterKindButton; // 0x1C0
	[SerializeField] // RVA: 0xC6F0F8 Offset: 0xC6F0F8 VA: 0xC6F0F8
	private UILabel bonusFilterKindLabel; // 0x1C8
	private int[] bonusEventIdList; // 0x1D0
	[SerializeField] // RVA: 0xC6F108 Offset: 0xC6F108 VA: 0xC6F108
	private GameObject fatigueRecoveryConfirmationDialogPrefab; // 0x1D8
	private FatigueRecoveryConfirmationDialog fatigueRecoveryConfirmationDialog; // 0x1E0
	public static readonly string SORT_SAVE_KEY; // 0x0
	private UserServantEntity targetInUserServantEntity; // 0x1E8
	private UserServantEntity targetOutUserServantEntity; // 0x1F0
	private long statusShowUserSvtId; // 0x1F8
	private int eventId; // 0x200
	public EventServantRecoveryFatigueItem targetRecoveryFatigueItem; // 0x208
	private long updateTime; // 0x210
	protected EventServantFatigueListViewManager.InitMode initMode; // 0x218
	protected EventServantFatigueListViewManager.ModeKind modeKind; // 0x21C
	protected ListViewSort.ScaleType scaleType; // 0x220
	[CompilerGeneratedAttribute] // RVA: 0xC6F118 Offset: 0xC6F118 VA: 0xC6F118
	[DebuggerBrowsableAttribute] // RVA: 0xC6F118 Offset: 0xC6F118 VA: 0xC6F118
	private EventServantFatigueListViewManager.CallbackFunc Callback; // 0x228
	[CompilerGeneratedAttribute] // RVA: 0xC6F154 Offset: 0xC6F154 VA: 0xC6F154
	[DebuggerBrowsableAttribute] // RVA: 0xC6F154 Offset: 0xC6F154 VA: 0xC6F154
	private Action CallbackFunc2; // 0x230
	protected int callbackCount; // 0x238
	protected EventServantFatigueListViewManager.RequestCallbackFunc requestCallback; // 0x240
	private Action<bool, UserServantEntity> selectAfterCallback; // 0x248
	protected static ListViewSort servantSortStatus; // 0x8

	// Properties
	public List<EventServantFatigueListViewObject> ObjectList { get; }
	public List<EventServantFatigueListViewObject> ClippingObjectList { get; }
	public EventServantFatigueListViewManager.ModeKind ListModeKind { get; }

	// Methods

	// RVA: 0x16E24F4 Offset: 0x16E24F4 VA: 0x16E24F4
	public void .ctor() { }

	// RVA: 0x16E2504 Offset: 0x16E2504 VA: 0x16E2504
	protected void add_Callback(EventServantFatigueListViewManager.CallbackFunc value) { }

	// RVA: 0x16E25F4 Offset: 0x16E25F4 VA: 0x16E25F4
	protected void remove_Callback(EventServantFatigueListViewManager.CallbackFunc value) { }

	// RVA: 0x16E26E4 Offset: 0x16E26E4 VA: 0x16E26E4
	protected void add_CallbackFunc2(Action value) { }

	// RVA: 0x16E27D4 Offset: 0x16E27D4 VA: 0x16E27D4
	protected void remove_CallbackFunc2(Action value) { }

	// RVA: 0x16E28C4 Offset: 0x16E28C4 VA: 0x16E28C4
	public static void DeleteContinueData() { }

	// RVA: 0x16E2940 Offset: 0x16E2940 VA: 0x16E2940
	public static void InitLoad() { }

	// RVA: 0x16E29BC Offset: 0x16E29BC VA: 0x16E29BC
	public List<EventServantFatigueListViewObject> get_ObjectList() { }

	// RVA: 0x16E2B30 Offset: 0x16E2B30 VA: 0x16E2B30
	public List<EventServantFatigueListViewObject> get_ClippingObjectList() { }

	// RVA: 0x16E2D2C Offset: 0x16E2D2C VA: 0x16E2D2C
	private void Update() { }

	// RVA: 0x16E2E08 Offset: 0x16E2E08 VA: 0x16E2E08
	private void UpdateDisp() { }

	// RVA: 0x16D48B0 Offset: 0x16D48B0 VA: 0x16D48B0
	public void CreateList(int eventId, EventServantRecoveryFatigueItem targetItem, Action<bool, UserServantEntity> afterCallback) { }

	// RVA: 0x16E35BC Offset: 0x16E35BC VA: 0x16E35BC
	protected void RefreshListDisp() { }

	// RVA: 0x16E3224 Offset: 0x16E3224 VA: 0x16E3224
	private void SetStatusKind(EventServantFatigueListViewManager.ModeKind modeKind) { }

	// RVA: 0x16E36F0 Offset: 0x16E36F0 VA: 0x16E36F0
	private void SetHeaderMsg() { }

	// RVA: 0x16E3840 Offset: 0x16E3840 VA: 0x16E3840
	public void ModifyItem(long usrSvtId) { }

	// RVA: 0x16E3B80 Offset: 0x16E3B80 VA: 0x16E3B80
	public void ModifyLockItem(long usrSvtId, bool isInit, bool isIconSizeChange = False) { }

	// RVA: 0x16E3F58 Offset: 0x16E3F58 VA: 0x16E3F58
	public void ModifyList(bool isIconSizeChange = False) { }

	// RVA: 0x16D5330 Offset: 0x16D5330 VA: 0x16D5330
	public void DestroyList() { }

	// RVA: 0x16E424C Offset: 0x16E424C VA: 0x16E424C
	public EventServantFatigueListViewItem GetItem(int index) { }

	// RVA: 0x16E42F4 Offset: 0x16E42F4 VA: 0x16E42F4 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x16E442C Offset: 0x16E442C VA: 0x16E442C
	public void SetMode(EventServantFatigueListViewManager.InitMode mode, EventServantFatigueListViewManager.CallbackFunc callback) { }

	// RVA: 0x16D5034 Offset: 0x16D5034 VA: 0x16D5034
	public void SetMode(EventServantFatigueListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x16E4434 Offset: 0x16E4434 VA: 0x16E4434
	public void SetMode(EventServantFatigueListViewManager.InitMode mode) { }

	// RVA: 0x16E44A8 Offset: 0x16E44A8 VA: 0x16E44A8
	protected void RequestListObject(EventServantFatigueListViewObject.InitMode mode, float delay = 0) { }

	// RVA: 0x16E46E0 Offset: 0x16E46E0 VA: 0x16E46E0
	protected void OnMoveEnd() { }

	// RVA: 0x16E47AC Offset: 0x16E47AC VA: 0x16E47AC
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x16E47B0 Offset: 0x16E47B0 VA: 0x16E47B0
	protected void OnClickSelectObject(ListViewObject obj) { }

	// RVA: 0x16E55D0 Offset: 0x16E55D0 VA: 0x16E55D0
	private bool IsMatchIndividuality() { }

	// RVA: 0x16E5830 Offset: 0x16E5830 VA: 0x16E5830
	private string GetIndividualityName(string[] array) { }

	// RVA: 0x16E50B8 Offset: 0x16E50B8 VA: 0x16E50B8
	private void GetInRecoveryTime(long recoveryFatigueTime, out string beforeTime, out string afterTime, bool isMatch) { }

	// RVA: 0x16E5318 Offset: 0x16E5318 VA: 0x16E5318
	private void GetOutRecoveryTime(long recoveryFatigueTime, out string beforeTime, out string afterTime, bool isMatch) { }

	// RVA: 0x16E59AC Offset: 0x16E59AC VA: 0x16E59AC
	private void CloseRecovertFatigueDialog(bool isDecide) { }

	// RVA: 0x16E5CD8 Offset: 0x16E5CD8 VA: 0x16E5CD8
	private void CallbackRecoverySyncRequest(string result) { }

	// RVA: 0x16E5D9C Offset: 0x16E5D9C VA: 0x16E5D9C
	protected void OnLongPushListView(ListViewObject obj) { }

	// RVA: 0x16E5F48 Offset: 0x16E5F48 VA: 0x16E5F48
	protected void EndShowServant(bool isDecide) { }

	// RVA: 0x16E13F0 Offset: 0x16E13F0 VA: 0x16E13F0
	public long GetAmountSortValue(int svtId) { }

	// RVA: 0x16E5FD0 Offset: 0x16E5FD0 VA: 0x16E5FD0
	public void OnClickFilterKind() { }

	// RVA: 0x16E60C4 Offset: 0x16E60C4 VA: 0x16E60C4
	public void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x16E3044 Offset: 0x16E3044 VA: 0x16E3044
	private void SetUpBonusFilterButton(EventUpValSetupInfo setupInfo) { }

	// RVA: 0x16E615C Offset: 0x16E615C VA: 0x16E615C
	public void OnClickBonusFilterKind() { }

	// RVA: 0x16E3528 Offset: 0x16E3528 VA: 0x16E3528
	private void SetFilterButtonImage() { }

	// RVA: 0x16E6230 Offset: 0x16E6230 VA: 0x16E6230
	public void OnClickSortButton() { }

	// RVA: 0x16E6328 Offset: 0x16E6328 VA: 0x16E6328
	public void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x16E63B8 Offset: 0x16E63B8 VA: 0x16E63B8
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x16E64A8 Offset: 0x16E64A8 VA: 0x16E64A8 Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x16E67F4 Offset: 0x16E67F4 VA: 0x16E67F4
	private bool GetSwapLockList(out long[] lockList, out long[] unlockList) { }

	// RVA: 0x16E6ADC Offset: 0x16E6ADC VA: 0x16E6ADC
	private bool GetSwapChoiceList(out long[] choiceList, out long[] unchoiceList) { }

	// RVA: 0x16E6DB0 Offset: 0x16E6DB0 VA: 0x16E6DB0
	public void OnClickNormalStatus() { }

	// RVA: 0x16E7050 Offset: 0x16E7050 VA: 0x16E7050
	public void OnClickCollectLock() { }

	// RVA: 0x16E7144 Offset: 0x16E7144 VA: 0x16E7144
	public void OnClickChoiceTab() { }

	// RVA: 0x16E7238 Offset: 0x16E7238 VA: 0x16E7238
	public void OnClickPushTab() { }

	// RVA: 0x16E6E74 Offset: 0x16E6E74 VA: 0x16E6E74
	private void StatusRequest(EventServantFatigueListViewManager.RequestCallbackFunc callback) { }

	// RVA: 0x16E757C Offset: 0x16E757C VA: 0x16E757C
	private void EndClickTabStatus(bool isRequest) { }

	// RVA: 0x16E75B4 Offset: 0x16E75B4 VA: 0x16E75B4
	private void EndClickTabLock(bool isRequest) { }

	// RVA: 0x16E75F4 Offset: 0x16E75F4 VA: 0x16E75F4
	private void EndClickTabChoice(bool isRequest) { }

	// RVA: 0x16E7634 Offset: 0x16E7634 VA: 0x16E7634
	private void EndClickTabPush(bool isRequest) { }

	// RVA: 0x16E7674 Offset: 0x16E7674 VA: 0x16E7674
	private void EndStatusSync(string result) { }

	// RVA: 0x16D5304 Offset: 0x16D5304 VA: 0x16D5304
	public void InitBackListView() { }

	// RVA: 0x16E7694 Offset: 0x16E7694 VA: 0x16E7694
	public EventServantFatigueListViewManager.ModeKind get_ListModeKind() { }

	// RVA: 0x16E769C Offset: 0x16E769C VA: 0x16E769C
	public void OnClickBack() { }

	// RVA: 0x16E7734 Offset: 0x16E7734 VA: 0x16E7734
	public void OnClickScaleChange() { }

	// RVA: 0x16E7888 Offset: 0x16E7888 VA: 0x16E7888
	private void OnClickSelectPush(ListViewObject obj) { }

	// RVA: 0x16E8048 Offset: 0x16E8048 VA: 0x16E8048
	private void PushRequest(EventServantFatigueListViewItem selectItem) { }

	// RVA: 0x16E83F0 Offset: 0x16E83F0 VA: 0x16E83F0
	private void EndPushRequest(string result) { }

	// RVA: 0x16E841C Offset: 0x16E841C VA: 0x16E841C
	private static void .cctor() { }
}

// Namespace: 
public enum EventServantFatigueListViewManager.InitMode // TypeDefIndex: 9897
{
	// Fields
	public int value__; // 0x0
	public const EventServantFatigueListViewManager.InitMode NONE = 0;
	public const EventServantFatigueListViewManager.InitMode VALID = 1;
	public const EventServantFatigueListViewManager.InitMode INPUT = 2;
	public const EventServantFatigueListViewManager.InitMode MODIFY = 3;
}

// Namespace: 
public enum EventServantFatigueListViewManager.ResultKind // TypeDefIndex: 9898
{
	// Fields
	public int value__; // 0x0
	public const EventServantFatigueListViewManager.ResultKind NONE = 0;
	public const EventServantFatigueListViewManager.ResultKind SERVANT_STATUS = 1;
}

// Namespace: 
public enum EventServantFatigueListViewManager.ModeKind // TypeDefIndex: 9899
{
	// Fields
	public int value__; // 0x0
	public const EventServantFatigueListViewManager.ModeKind NORMAL = 0;
	public const EventServantFatigueListViewManager.ModeKind LOCK = 1;
	public const EventServantFatigueListViewManager.ModeKind CHOICE = 2;
	public const EventServantFatigueListViewManager.ModeKind PUSH = 3;
}

// Namespace: 
public sealed class EventServantFatigueListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 9900
{
	// Methods

	// RVA: 0x16E85BC Offset: 0x16E85BC VA: 0x16E85BC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x16E85CC Offset: 0x16E85CC VA: 0x16E85CC Slot: 11
	public virtual void Invoke(EventServantFatigueListViewManager.ResultKind kind, int index) { }

	// RVA: 0x16E8810 Offset: 0x16E8810 VA: 0x16E8810 Slot: 12
	public virtual IAsyncResult BeginInvoke(EventServantFatigueListViewManager.ResultKind kind, int index, AsyncCallback callback, object object) { }

	// RVA: 0x16E88B8 Offset: 0x16E88B8 VA: 0x16E88B8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class EventServantFatigueListViewManager.RequestCallbackFunc : MulticastDelegate // TypeDefIndex: 9901
{
	// Methods

	// RVA: 0x16E6E64 Offset: 0x16E6E64 VA: 0x16E6E64
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x16E7350 Offset: 0x16E7350 VA: 0x16E7350 Slot: 11
	public virtual void Invoke(bool isRequest) { }

	// RVA: 0x16E88C4 Offset: 0x16E88C4 VA: 0x16E88C4 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isRequest, AsyncCallback callback, object object) { }

	// RVA: 0x16E8954 Offset: 0x16E8954 VA: 0x16E8954 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44BC4 Offset: 0xC44BC4 VA: 0xC44BC4
private sealed class EventServantFatigueListViewManager.<OnClickSelectPush>c__AnonStorey0 // TypeDefIndex: 9902
{
	// Fields
	internal EventServantFatigueListViewItem selectItem; // 0x10
	internal EventServantFatigueListViewManager $this; // 0x18

	// Methods

	// RVA: 0x16E8040 Offset: 0x16E8040 VA: 0x16E8040
	public void .ctor() { }

	// RVA: 0x16E84C0 Offset: 0x16E84C0 VA: 0x16E84C0
	internal void <>m__0(bool isDecide) { }

	// RVA: 0x16E858C Offset: 0x16E858C VA: 0x16E858C
	internal void <>m__1() { }
}

// Namespace: 
public class EventServantFatigueListViewObject : ListViewObject // TypeDefIndex: 9903
{
	// Fields
	protected EventServantFatigueListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC6F190 Offset: 0xC6F190 VA: 0xC6F190
	[DebuggerBrowsableAttribute] // RVA: 0xC6F190 Offset: 0xC6F190 VA: 0xC6F190
	private Action CallbackFunc; // 0x70
	protected EventServantFatigueListViewItemDraw itemDraw; // 0x78
	protected EventServantFatigueListViewItemDraw.DispMode dispMode; // 0x80

	// Methods

	// RVA: 0x16E8960 Offset: 0x16E8960 VA: 0x16E8960
	public void .ctor() { }

	// RVA: 0x16E89C8 Offset: 0x16E89C8 VA: 0x16E89C8
	protected void add_CallbackFunc(Action value) { }

	// RVA: 0x16E8AB4 Offset: 0x16E8AB4 VA: 0x16E8AB4
	protected void remove_CallbackFunc(Action value) { }

	// RVA: 0x16E8BA0 Offset: 0x16E8BA0 VA: 0x16E8BA0
	protected void Awake() { }

	// RVA: 0x16E8C14 Offset: 0x16E8C14 VA: 0x16E8C14
	private void Start() { }

	// RVA: 0x16E2CA8 Offset: 0x16E2CA8 VA: 0x16E2CA8
	public EventServantFatigueListViewItem GetItem() { }

	// RVA: 0x16E8C28 Offset: 0x16E8C28 VA: 0x16E8C28 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x16E8C58 Offset: 0x16E8C58 VA: 0x16E8C58 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x16E8C50 Offset: 0x16E8C50 VA: 0x16E8C50
	protected void InitItem() { }

	// RVA: 0x16E8C80 Offset: 0x16E8C80 VA: 0x16E8C80
	public void Init(EventServantFatigueListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x16E8F74 Offset: 0x16E8F74 VA: 0x16E8F74
	public void Init(EventServantFatigueListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x16E465C Offset: 0x16E465C VA: 0x16E465C
	public void Init(EventServantFatigueListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x16E43AC Offset: 0x16E43AC VA: 0x16E43AC
	public void Init(EventServantFatigueListViewObject.InitMode initMode) { }

	// RVA: 0x16E8E64 Offset: 0x16E8E64 VA: 0x16E8E64
	protected void SetupDisp() { }

	// RVA: 0x16E2F58 Offset: 0x16E2F58 VA: 0x16E2F58
	public void UpdateDisp() { }

	// RVA: 0x16E8FF8 Offset: 0x16E8FF8 VA: 0x16E8FF8 Slot: 3
	public override string ToString() { }

	// RVA: 0x16E90C8 Offset: 0x16E90C8 VA: 0x16E90C8
	public void OnClickSelect() { }

	// RVA: 0x16E9314 Offset: 0x16E9314 VA: 0x16E9314
	public void OnLongPush() { }
}

// Namespace: 
public enum EventServantFatigueListViewObject.InitMode // TypeDefIndex: 9904
{
	// Fields
	public int value__; // 0x0
	public const EventServantFatigueListViewObject.InitMode INVISIBLE = 0;
	public const EventServantFatigueListViewObject.InitMode INVALID = 1;
	public const EventServantFatigueListViewObject.InitMode VALID = 2;
	public const EventServantFatigueListViewObject.InitMode INPUT = 3;
	public const EventServantFatigueListViewObject.InitMode MODIFY = 4;
}

// Namespace: 
public enum EventServantFatigueListViewObject.State // TypeDefIndex: 9905
{
	// Fields
	public int value__; // 0x0
	public const EventServantFatigueListViewObject.State INIT = 0;
	public const EventServantFatigueListViewObject.State IDLE = 1;
	public const EventServantFatigueListViewObject.State MOVE = 2;
	public const EventServantFatigueListViewObject.State INPUT = 3;
}

// Namespace: 
public class EventServantRecoveryFatigueItem : MonoBehaviour // TypeDefIndex: 9906
{
	// Fields
	protected static readonly string EMPTY_BG_NAME; // 0x0
	private static readonly string OPEN_CLIP_NAME; // 0x8
	[SerializeField] // RVA: 0xC6F1CC Offset: 0xC6F1CC VA: 0xC6F1CC
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xC6F1DC Offset: 0xC6F1DC VA: 0xC6F1DC
	protected ServantFaceIconComponent servantFaceIcon; // 0x20
	[SerializeField] // RVA: 0xC6F1EC Offset: 0xC6F1EC VA: 0xC6F1EC
	protected UISprite emptySprite; // 0x28
	[SerializeField] // RVA: 0xC6F1FC Offset: 0xC6F1FC VA: 0xC6F1FC
	protected UILabel fatigueRecoveryTimeLabel; // 0x30
	[SerializeField] // RVA: 0xC6F20C Offset: 0xC6F20C VA: 0xC6F20C
	private GameObject nameSprite; // 0x38
	[SerializeField] // RVA: 0xC6F21C Offset: 0xC6F21C VA: 0xC6F21C
	private GameObject frameSprite; // 0x40
	[SerializeField] // RVA: 0xC6F22C Offset: 0xC6F22C VA: 0xC6F22C
	private SimpleAnimation simpleAnimation; // 0x48
	[SerializeField] // RVA: 0xC6F23C Offset: 0xC6F23C VA: 0xC6F23C
	private Animation animation; // 0x50
	private UserServantEntity userServantEntity; // 0x58
	private int index; // 0x60
	private long fatigueTime; // 0x68
	private bool isFatigueRecover; // 0x70
	private Action<int> clickCallback; // 0x78
	private long updateTime; // 0x80
	private EventFatigueRecoveryEntity eventFatigueRecoveryEnt; // 0x88

	// Properties
	public UserServantEntity UserServantEntity { get; }
	public int Index { get; }
	public long FatigueTime { get; }
	public string Name { get; }
	public int[] Individuality { get; }
	public string[] IndividualityName { get; }
	public int Idx { get; }
	public int RecoveryRate { get; }
	public int IndividualityRate { get; }

	// Methods

	// RVA: 0x16EA524 Offset: 0x16EA524 VA: 0x16EA524
	public void .ctor() { }

	// RVA: 0x16EA534 Offset: 0x16EA534 VA: 0x16EA534
	private void Update() { }

	// RVA: 0x16EA748 Offset: 0x16EA748 VA: 0x16EA748
	public void Init() { }

	// RVA: 0x16EA998 Offset: 0x16EA998 VA: 0x16EA998
	public void SetServantInfo(UserServantEntity userServantEntity, int eventId, int index, Action<int> callback) { }

	// RVA: 0x16EA5CC Offset: 0x16EA5CC VA: 0x16EA5CC
	private void UpdateDisp() { }

	// RVA: 0x16EAFE0 Offset: 0x16EAFE0 VA: 0x16EAFE0
	public void OnClickItem() { }

	// RVA: 0x16E321C Offset: 0x16E321C VA: 0x16E321C
	public UserServantEntity get_UserServantEntity() { }

	// RVA: 0x16EB088 Offset: 0x16EB088 VA: 0x16EB088
	public int get_Index() { }

	// RVA: 0x16EB090 Offset: 0x16EB090 VA: 0x16EB090
	public long get_FatigueTime() { }

	// RVA: 0x16E52EC Offset: 0x16E52EC VA: 0x16E52EC
	public string get_Name() { }

	// RVA: 0x16E1844 Offset: 0x16E1844 VA: 0x16E1844
	public int[] get_Individuality() { }

	// RVA: 0x16EB098 Offset: 0x16EB098 VA: 0x16EB098
	public string[] get_IndividualityName() { }

	// RVA: 0x16E5CAC Offset: 0x16E5CAC VA: 0x16E5CAC
	public int get_Idx() { }

	// RVA: 0x16E5994 Offset: 0x16E5994 VA: 0x16E5994
	public int get_RecoveryRate() { }

	// RVA: 0x16E597C Offset: 0x16E597C VA: 0x16E597C
	public int get_IndividualityRate() { }

	// RVA: 0x16EB0C4 Offset: 0x16EB0C4 VA: 0x16EB0C4
	public bool IsAnimation() { }

	// RVA: 0x16EB180 Offset: 0x16EB180 VA: 0x16EB180
	public void SetAnimationPlay(int no) { }

	// RVA: 0x16EB518 Offset: 0x16EB518 VA: 0x16EB518
	private static void .cctor() { }
}

// Namespace: 
public class EventServantRecoveryFatigueManager : MonoBehaviour // TypeDefIndex: 9907
{
	// Fields
	protected const string BTN_ON = "btn_on";
	protected const string BTN_OFF = "btn_off";
	protected static readonly string BG_FILE; // 0x0
	private static readonly int defaultEventId; // 0x8
	protected static readonly EventServantRecoveryFatigueManager.EffectSet[] effectSet; // 0x10
	[SerializeField] // RVA: 0xC6F24C Offset: 0xC6F24C VA: 0xC6F24C
	protected ExUITexture bgTexture; // 0x18
	[SerializeField] // RVA: 0xC6F25C Offset: 0xC6F25C VA: 0xC6F25C
	protected List<EventServantRecoveryFatigueItem> servantItemList; // 0x20
	[SerializeField] // RVA: 0xC6F26C Offset: 0xC6F26C VA: 0xC6F26C
	[HeaderAttribute] // RVA: 0xC6F26C Offset: 0xC6F26C VA: 0xC6F26C
	private string settingSe; // 0x28
	public GameObject fatigueNotice; // 0x30
	public UIButton fatigueNoticeBtn; // 0x38
	private bool isFatigueNotice; // 0x40
	protected static AssetData assetData; // 0x18
	[SerializeField] // RVA: 0xC6F2B8 Offset: 0xC6F2B8 VA: 0xC6F2B8
	[HeaderAttribute] // RVA: 0xC6F2B8 Offset: 0xC6F2B8 VA: 0xC6F2B8
	private float openEffectTime; // 0x44
	[SerializeField] // RVA: 0xC6F304 Offset: 0xC6F304 VA: 0xC6F304
	[HeaderAttribute] // RVA: 0xC6F304 Offset: 0xC6F304 VA: 0xC6F304
	private float endEffectTime; // 0x48
	private GameObject maskPanel; // 0x50
	private int maskCount; // 0x58
	private Action endOpenEffectCallback; // 0x60
	[CompilerGeneratedAttribute] // RVA: 0xC6F350 Offset: 0xC6F350 VA: 0xC6F350
	private static AssetLoader.LoadEndDataHandler <>f__am$cache0; // 0x20

	// Methods

	// RVA: 0x16EB58C Offset: 0x16EB58C VA: 0x16EB58C
	public void .ctor() { }

	// RVA: 0x16D7238 Offset: 0x16D7238 VA: 0x16D7238
	public string GetSettingSe() { }

	// RVA: 0x16EB5F0 Offset: 0x16EB5F0 VA: 0x16EB5F0
	public void Init() { }

	// RVA: 0x16D5374 Offset: 0x16D5374 VA: 0x16D5374
	public void SetServantRecoveryFatigue(int eventId, Action<int> onClick, Action endCallback) { }

	// RVA: 0x16EBB18 Offset: 0x16EBB18 VA: 0x16EBB18
	public void SetMaskPanel(GameObject maskPanel) { }

	// RVA: 0x16EBB20 Offset: 0x16EBB20 VA: 0x16EBB20
	public EventServantRecoveryFatigueItem GetItem(int index) { }

	// RVA: 0x16EBBFC Offset: 0x16EBBFC VA: 0x16EBBFC
	public void ModifyItem(UserServantEntity userServantEntity, int eventId, int index) { }

	// RVA: 0x16EB6BC Offset: 0x16EB6BC VA: 0x16EB6BC
	public void SetRecoveryBg(int eventId) { }

	// RVA: 0x16EB8BC Offset: 0x16EB8BC VA: 0x16EB8BC
	public void SetPreRecoveryBg(int eventId) { }

	// RVA: 0x16EB840 Offset: 0x16EB840 VA: 0x16EB840
	private void setNoticeValue() { }

	// RVA: 0x16EBF30 Offset: 0x16EBF30 VA: 0x16EBF30
	public void OnNoticeChangeBtn() { }

	// RVA: 0x16EBD0C Offset: 0x16EBD0C VA: 0x16EBD0C
	private void loadAssetData(int eventId) { }

	// RVA: 0x16EC020 Offset: 0x16EC020 VA: 0x16EC020
	public bool IsMask() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD04D0 Offset: 0xCD04D0 VA: 0xCD04D0
	// RVA: 0x16EBA3C Offset: 0x16EBA3C VA: 0x16EBA3C
	public IEnumerator SetOpenEffect(EventServantRecoveryFatigueItem item, int eventId, int num, Action<int> onClick) { }

	// RVA: 0x16EC038 Offset: 0x16EC038 VA: 0x16EC038
	private bool IsFade() { }

	// RVA: 0x16EC0CC Offset: 0x16EC0CC VA: 0x16EC0CC
	public static GameObject getEffect(int eventId, int num, Transform parentTr) { }

	// RVA: 0x16EC344 Offset: 0x16EC344 VA: 0x16EC344
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD04E0 Offset: 0xCD04E0 VA: 0xCD04E0
	// RVA: 0x16EC7BC Offset: 0x16EC7BC VA: 0x16EC7BC
	private static void <loadAssetData>m__0(AssetData data) { }
}

// Namespace: 
protected struct EventServantRecoveryFatigueManager.EffectSet // TypeDefIndex: 9908
{
	// Fields
	public int eventId; // 0x0
	public int num; // 0x4
	public Vector3 pos; // 0x8
	public string fileName; // 0x18
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44BD4 Offset: 0xC44BD4 VA: 0xC44BD4
private sealed class EventServantRecoveryFatigueManager.<SetOpenEffect>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9909
{
	// Fields
	internal EventServantRecoveryFatigueItem item; // 0x10
	internal int num; // 0x18
	internal int eventId; // 0x1C
	internal Action<int> onClick; // 0x20
	internal EventServantRecoveryFatigueManager $this; // 0x28
	internal object $current; // 0x30
	internal bool $disposing; // 0x38
	internal int $PC; // 0x3C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDC530 Offset: 0xCDC530 VA: 0xCDC530
	// RVA: 0x16EC030 Offset: 0x16EC030 VA: 0x16EC030
	public void .ctor() { }

	// RVA: 0x16EC82C Offset: 0x16EC82C VA: 0x16EC82C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC540 Offset: 0xCDC540 VA: 0xCDC540
	// RVA: 0x16ECC50 Offset: 0x16ECC50 VA: 0x16ECC50 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC550 Offset: 0xCDC550 VA: 0xCDC550
	// RVA: 0x16ECC58 Offset: 0x16ECC58 VA: 0x16ECC58 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC560 Offset: 0xCDC560 VA: 0xCDC560
	// RVA: 0x16ECC60 Offset: 0x16ECC60 VA: 0x16ECC60 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC570 Offset: 0xCDC570 VA: 0xCDC570
	// RVA: 0x16ECC74 Offset: 0x16ECC74 VA: 0x16ECC74 Slot: 6
	public void Reset() { }

	// RVA: 0x16ECCDC Offset: 0x16ECCDC VA: 0x16ECCDC
	internal bool <>m__0() { }
}

// Namespace: 
public class EventTowerListViewItem : ListViewItem // TypeDefIndex: 9910
{
	// Fields
	private bool isClearFloor; // 0x70
	private bool isOpenFloor; // 0x71
	private string rewardName; // 0x78
	private string rewardNum; // 0x80
	private EventTowerRewardEntity itemInfo; // 0x88
	private GiftEntity clearReward; // 0x90
	private ItemEntity itemEntity; // 0x98
	private ServantEntity servantEntity; // 0xA0
	private ServantCostumeEntity servantCostumeEntity; // 0xA8

	// Properties
	public bool IsFloorClear { get; }
	public int BannerId { get; }
	public string BoardMessage { get; }
	public int IconId { get; }
	public ItemEntity ItemEntity { get; }
	public ServantEntity ServantEntity { get; }
	public ServantCostumeEntity ServantCostumeEntity { get; }
	public Gift.Type GiftType { get; }
	public int RewardNum { get; }
	public int RewardObjectId { get; }
	public int EventId { get; }
	public string RewardName { get; }
	public string RewardDispNum { get; }
	public bool IsOpenFloor { get; }

	// Methods

	// RVA: 0x109FAF8 Offset: 0x109FAF8 VA: 0x109FAF8
	public void .ctor(EventTowerRewardEntity targetEntity, bool isClearFloor, bool isOpenFloor) { }

	// RVA: 0x109FE94 Offset: 0x109FE94 VA: 0x109FE94 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x109FEFC Offset: 0x109FEFC VA: 0x109FEFC
	public bool get_IsFloorClear() { }

	// RVA: 0x109FF04 Offset: 0x109FF04 VA: 0x109FF04
	public int get_BannerId() { }

	// RVA: 0x109FF30 Offset: 0x109FF30 VA: 0x109FF30
	public string get_BoardMessage() { }

	// RVA: 0x10A0038 Offset: 0x10A0038 VA: 0x10A0038
	public int get_IconId() { }

	// RVA: 0x10A0064 Offset: 0x10A0064 VA: 0x10A0064
	public ItemEntity get_ItemEntity() { }

	// RVA: 0x10A006C Offset: 0x10A006C VA: 0x10A006C
	public ServantEntity get_ServantEntity() { }

	// RVA: 0x10A0074 Offset: 0x10A0074 VA: 0x10A0074
	public ServantCostumeEntity get_ServantCostumeEntity() { }

	// RVA: 0x10A007C Offset: 0x10A007C VA: 0x10A007C
	public Gift.Type get_GiftType() { }

	// RVA: 0x10A00A8 Offset: 0x10A00A8 VA: 0x10A00A8
	public int get_RewardNum() { }

	// RVA: 0x10A00FC Offset: 0x10A00FC VA: 0x10A00FC
	public int get_RewardObjectId() { }

	// RVA: 0x10A0128 Offset: 0x10A0128 VA: 0x10A0128
	public int get_EventId() { }

	// RVA: 0x10A0154 Offset: 0x10A0154 VA: 0x10A0154
	public string get_RewardName() { }

	// RVA: 0x10A015C Offset: 0x10A015C VA: 0x10A015C
	public string get_RewardDispNum() { }

	// RVA: 0x10A0164 Offset: 0x10A0164 VA: 0x10A0164
	public bool get_IsOpenFloor() { }
}

// Namespace: 
public class EventTowerListViewItemDraw : MonoBehaviour // TypeDefIndex: 9911
{
	// Fields
	protected static readonly string BANNER_NAME; // 0x0
	protected static readonly string REWARD_GET_NAME; // 0x8
	[SerializeField] // RVA: 0xC6F360 Offset: 0xC6F360 VA: 0xC6F360
	protected UISprite baseSprite; // 0x18
	[SerializeField] // RVA: 0xC6F370 Offset: 0xC6F370 VA: 0xC6F370
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xC6F380 Offset: 0xC6F380 VA: 0xC6F380
	protected ItemIconComponent itemIcon; // 0x28
	[SerializeField] // RVA: 0xC6F390 Offset: 0xC6F390 VA: 0xC6F390
	protected UILabel rewardName; // 0x30
	[SerializeField] // RVA: 0xC6F3A0 Offset: 0xC6F3A0 VA: 0xC6F3A0
	protected UILabel rewardNum; // 0x38
	[SerializeField] // RVA: 0xC6F3B0 Offset: 0xC6F3B0 VA: 0xC6F3B0
	protected UILabel rewardCondMessage; // 0x40
	[SerializeField] // RVA: 0xC6F3C0 Offset: 0xC6F3C0 VA: 0xC6F3C0
	protected GameObject rewardGetInfo; // 0x48
	[SerializeField] // RVA: 0xC6F3D0 Offset: 0xC6F3D0 VA: 0xC6F3D0
	protected UISprite rewardGetSprite; // 0x50
	[SerializeField] // RVA: 0xC6F3E0 Offset: 0xC6F3E0 VA: 0xC6F3E0
	protected UISprite maskSprite; // 0x58

	// Methods

	// RVA: 0x10A016C Offset: 0x10A016C VA: 0x10A016C
	public void .ctor() { }

	// RVA: 0x10A0174 Offset: 0x10A0174 VA: 0x10A0174
	public void SetItem(EventTowerListViewItem item, EventTowerListViewItemDraw.DispMode mode) { }

	// RVA: 0x10A06E0 Offset: 0x10A06E0 VA: 0x10A06E0
	public void SetInput(EventTowerListViewItem item) { }

	// RVA: 0x10A06E4 Offset: 0x10A06E4 VA: 0x10A06E4
	private static void .cctor() { }
}

// Namespace: 
public enum EventTowerListViewItemDraw.DispMode // TypeDefIndex: 9912
{
	// Fields
	public int value__; // 0x0
	public const EventTowerListViewItemDraw.DispMode INVISIBLE = 0;
	public const EventTowerListViewItemDraw.DispMode INVALID = 1;
	public const EventTowerListViewItemDraw.DispMode VALID = 2;
	public const EventTowerListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class EventTowerListViewManager : ListViewManager // TypeDefIndex: 9913
{
	// Fields
	protected EventTowerListViewManager.InitMode initMode; // 0x138
	[CompilerGeneratedAttribute] // RVA: 0xC6F3F0 Offset: 0xC6F3F0 VA: 0xC6F3F0
	[DebuggerBrowsableAttribute] // RVA: 0xC6F3F0 Offset: 0xC6F3F0 VA: 0xC6F3F0
	private Action CallbackFunc; // 0x140
	protected int callbackCount; // 0x148
	protected float listInDelay; // 0x14C

	// Properties
	public List<EventTowerListViewObject> ObjectList { get; }
	public List<EventTowerListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x10A0758 Offset: 0x10A0758 VA: 0x10A0758
	public void .ctor() { }

	// RVA: 0x10A0760 Offset: 0x10A0760 VA: 0x10A0760
	protected void add_CallbackFunc(Action value) { }

	// RVA: 0x10A0850 Offset: 0x10A0850 VA: 0x10A0850
	protected void remove_CallbackFunc(Action value) { }

	// RVA: 0x10A0940 Offset: 0x10A0940 VA: 0x10A0940
	private void Update() { }

	// RVA: 0x10A0948 Offset: 0x10A0948 VA: 0x10A0948
	public List<EventTowerListViewObject> get_ObjectList() { }

	// RVA: 0x10A0ABC Offset: 0x10A0ABC VA: 0x10A0ABC
	public List<EventTowerListViewObject> get_ClippingObjectList() { }

	// RVA: 0x10A0CF4 Offset: 0x10A0CF4 VA: 0x10A0CF4
	public void CreateList(int eventId, int nowTowerId, long nowFloor, bool isNextOpen, EventTowerRewardEntity[] towerRewardList) { }

	// RVA: 0x10A0E88 Offset: 0x10A0E88 VA: 0x10A0E88
	public void CreateList(int eventId, int firstTowerId) { }

	// RVA: 0x10A123C Offset: 0x10A123C VA: 0x10A123C
	public void SetNextFloorInfo() { }

	// RVA: 0x10A1358 Offset: 0x10A1358 VA: 0x10A1358
	public EventTowerListViewItem GetItem(int index) { }

	// RVA: 0x10A1400 Offset: 0x10A1400 VA: 0x10A1400 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x10A153C Offset: 0x10A153C VA: 0x10A153C
	public void SetMode(EventTowerListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x10A1698 Offset: 0x10A1698 VA: 0x10A1698
	public void SetMode(EventTowerListViewManager.InitMode mode, float delay, Action callback) { }

	// RVA: 0x10A1544 Offset: 0x10A1544 VA: 0x10A1544
	public void SetMode(EventTowerListViewManager.InitMode mode) { }

	// RVA: 0x10A16A4 Offset: 0x10A16A4 VA: 0x10A16A4
	protected void RequestListObject(EventTowerListViewObject.InitMode mode, float delay = 0) { }

	// RVA: 0x10A18E0 Offset: 0x10A18E0 VA: 0x10A18E0
	protected void RequestInto() { }

	// RVA: 0x10A1B34 Offset: 0x10A1B34 VA: 0x10A1B34
	protected void OnMoveEnd() { }

	// RVA: 0x10A1C80 Offset: 0x10A1C80 VA: 0x10A1C80
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x10A1FB0 Offset: 0x10A1FB0 VA: 0x10A1FB0
	public void closeItemDetail(bool isDecide) { }

	// RVA: 0x10A203C Offset: 0x10A203C VA: 0x10A203C
	private void closeSvtDetail(bool isDecide) { }
}

// Namespace: 
public enum EventTowerListViewManager.InitMode // TypeDefIndex: 9914
{
	// Fields
	public int value__; // 0x0
	public const EventTowerListViewManager.InitMode NONE = 0;
	public const EventTowerListViewManager.InitMode INTO = 1;
	public const EventTowerListViewManager.InitMode VALID = 2;
	public const EventTowerListViewManager.InitMode INPUT = 3;
	public const EventTowerListViewManager.InitMode ENTER = 4;
	public const EventTowerListViewManager.InitMode EXIT = 5;
	public const EventTowerListViewManager.InitMode MODIFY = 6;
}

// Namespace: 
public class EventTowerListViewObject : ListViewObject // TypeDefIndex: 9915
{
	// Fields
	protected EventTowerListViewObject.State state; // 0x6C
	protected EventTowerListViewItemDraw.DispMode dispMode; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC6F42C Offset: 0xC6F42C VA: 0xC6F42C
	[DebuggerBrowsableAttribute] // RVA: 0xC6F42C Offset: 0xC6F42C VA: 0xC6F42C
	private Action CallbackFunc; // 0x78
	protected EventTowerListViewItemDraw itemDraw; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x10A20A0 Offset: 0x10A20A0 VA: 0x10A20A0
	public void .ctor() { }

	// RVA: 0x10A2108 Offset: 0x10A2108 VA: 0x10A2108
	protected void add_CallbackFunc(Action value) { }

	// RVA: 0x10A21F4 Offset: 0x10A21F4 VA: 0x10A21F4
	protected void remove_CallbackFunc(Action value) { }

	// RVA: 0x10A22E0 Offset: 0x10A22E0 VA: 0x10A22E0
	protected void Awake() { }

	// RVA: 0x10A2354 Offset: 0x10A2354 VA: 0x10A2354
	private void Update() { }

	// RVA: 0x10A0C70 Offset: 0x10A0C70 VA: 0x10A0C70
	public EventTowerListViewItem GetItem() { }

	// RVA: 0x10A23D8 Offset: 0x10A23D8 VA: 0x10A23D8 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x10A23EC Offset: 0x10A23EC VA: 0x10A23EC Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x10A23E4 Offset: 0x10A23E4 VA: 0x10A23E4
	protected void InitItem() { }

	// RVA: 0x10A23F8 Offset: 0x10A23F8 VA: 0x10A23F8 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x10A24A8 Offset: 0x10A24A8 VA: 0x10A24A8
	public void Init(EventTowerListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x10A1AA0 Offset: 0x10A1AA0 VA: 0x10A1AA0
	public void Init(EventTowerListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x10A1858 Offset: 0x10A1858 VA: 0x10A1858
	public void Init(EventTowerListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x10A14B8 Offset: 0x10A14B8 VA: 0x10A14B8
	public void Init(EventTowerListViewObject.InitMode initMode) { }

	// RVA: 0x10A2814 Offset: 0x10A2814 VA: 0x10A2814
	protected void SetupDisp() { }

	// RVA: 0x10A26AC Offset: 0x10A26AC VA: 0x10A26AC
	private void EventIntoStart(float delay) { }

	// RVA: 0x10A2974 Offset: 0x10A2974 VA: 0x10A2974
	private void EventIntoMove() { }

	// RVA: 0x10A2B14 Offset: 0x10A2B14 VA: 0x10A2B14
	private void EventIntoMove2() { }

	// RVA: 0x10A2C04 Offset: 0x10A2C04 VA: 0x10A2C04
	private void EventExitStart(float delay) { }

	// RVA: 0x10A2D50 Offset: 0x10A2D50 VA: 0x10A2D50
	private void EventExitMove() { }

	// RVA: 0x10A2FD4 Offset: 0x10A2FD4 VA: 0x10A2FD4
	private void EventExitMove2() { }

	// RVA: 0x10A2BDC Offset: 0x10A2BDC VA: 0x10A2BDC
	protected void EventMoveEnd() { }

	// RVA: 0x10A3070 Offset: 0x10A3070 VA: 0x10A3070
	public void OnClickSelect() { }
}

// Namespace: 
public enum EventTowerListViewObject.InitMode // TypeDefIndex: 9916
{
	// Fields
	public int value__; // 0x0
	public const EventTowerListViewObject.InitMode INVISIBLE = 0;
	public const EventTowerListViewObject.InitMode INVALID = 1;
	public const EventTowerListViewObject.InitMode VALID = 2;
	public const EventTowerListViewObject.InitMode INPUT = 3;
	public const EventTowerListViewObject.InitMode INTO = 4;
}

// Namespace: 
protected enum EventTowerListViewObject.State // TypeDefIndex: 9917
{
	// Fields
	public int value__; // 0x0
	public const EventTowerListViewObject.State INIT = 0;
	public const EventTowerListViewObject.State IDLE = 1;
	public const EventTowerListViewObject.State MOVE = 2;
	public const EventTowerListViewObject.State INPUT = 3;
}

// Namespace: 
public class EventTreasureBoxManager : MonoBehaviour // TypeDefIndex: 9918
{
	// Fields
	[SerializeField] // RVA: 0xC6F468 Offset: 0xC6F468 VA: 0xC6F468
	private ShopCurrencyInfoController currencyInfoController; // 0x18
	[SerializeField] // RVA: 0xC6F478 Offset: 0xC6F478 VA: 0xC6F478
	private EventTreasureBoxPanelComponent[] treasureBoxList; // 0x20
	private int eventId; // 0x28

