
	// RVA: 0x160B58C Offset: 0x160B58C VA: 0x160B58C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x160B5A0 Offset: 0x160B5A0 VA: 0x160B5A0
	public static string CreatePK(int eventUiId, int priority, int idx) { }
}

// Namespace: 
public class EventUiReleaseMaster : DataMasterBase<EventUiReleaseMaster, EventUiReleaseEntity, string> // TypeDefIndex: 7002
{
	// Methods

	// RVA: 0x160B5B4 Offset: 0x160B5B4 VA: 0x160B5B4
	public void .ctor() { }

	// RVA: 0x160B608 Offset: 0x160B608 VA: 0x160B608
	public EventUiReleaseEntity GetEntity(int eventUiId, int priority, int idx) { }

	// RVA: 0x160B68C Offset: 0x160B68C VA: 0x160B68C
	public bool TryGetEntity(out EventUiReleaseEntity entity, int eventUiId, int priority, int idx) { }

	// RVA: 0x160AFA8 Offset: 0x160AFA8 VA: 0x160AFA8
	public bool IsOpen(EventUiEntity eventUIEntity) { }
}

// Namespace: 
public class EventUiValueEntity : DataEntityBase<string> // TypeDefIndex: 7003
{
	// Fields
	public int id; // 0x10
	public int type; // 0x14
	public string value; // 0x18
	public int priority; // 0x20

	// Methods

	// RVA: 0x160B718 Offset: 0x160B718 VA: 0x160B718
	public void .ctor() { }

	// RVA: 0x160B7A4 Offset: 0x160B7A4 VA: 0x160B7A4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x160B7B8 Offset: 0x160B7B8 VA: 0x160B7B8
	public static string CreatePK(int id, int type, string value) { }
}

// Namespace: 
public enum EventUiValueEntity.ValueType // TypeDefIndex: 7004
{
	// Fields
	public int value__; // 0x0
	public const EventUiValueEntity.ValueType NONE = 0;
	public const EventUiValueEntity.ValueType ITEM = 1;
	public const EventUiValueEntity.ValueType EVENT_POINT = 2;
	public const EventUiValueEntity.ValueType EVENT_TOWER = 3;
	public const EventUiValueEntity.ValueType VALUE_LONG = 4;
	public const EventUiValueEntity.ValueType BATTLE_LINE = 5;
	public const EventUiValueEntity.ValueType ASSIST = 6;
}

// Namespace: 
public class EventUiValueMaster : DataMasterBase<EventUiValueMaster, EventUiValueEntity, string> // TypeDefIndex: 7005
{
	// Methods

	// RVA: 0x160B7C8 Offset: 0x160B7C8 VA: 0x160B7C8
	public void .ctor() { }

	// RVA: 0x160B81C Offset: 0x160B81C VA: 0x160B81C
	public EventUiValueEntity[] getList(int objectId) { }
}

// Namespace: 
public class EventVoicePlayEntity : DataEntityBase<string> // TypeDefIndex: 7006
{
	// Fields
	public int eventId; // 0x10
	public int slot; // 0x14
	public int idx; // 0x18
	public ObscuredInt guideImageId; // 0x1C
	public int condType; // 0x2C
	public int condValue; // 0x30
	public ObscuredString[] voiceIds; // 0x38
	public ObscuredString[] confirmVoiceIds; // 0x40
	public long startedAt; // 0x48
	public long endedAt; // 0x50

	// Methods

	// RVA: 0x160DF18 Offset: 0x160DF18 VA: 0x160DF18
	public void .ctor() { }

	// RVA: 0x160DF68 Offset: 0x160DF68 VA: 0x160DF68 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x160E00C Offset: 0x160E00C VA: 0x160E00C
	public static string CreatePK(int eventId, int slot, int idx, int guideImageId) { }

	// RVA: 0x160E024 Offset: 0x160E024 VA: 0x160E024
	public SvtVoiceInfo[] GetVoiceJson(int svtId, int limitCnt, SvtVoiceType.Type type) { }

	// RVA: 0x160E0F0 Offset: 0x160E0F0 VA: 0x160E0F0
	public List<ServantVoiceData[]> GetVoiceData(int svtId, int limitCnt, SvtVoiceType.Type type) { }

	// RVA: 0x160E200 Offset: 0x160E200 VA: 0x160E200
	public ServantVoiceData[] GetEventRewardVoiceList(int svtId, int limitCnt, SvtVoiceType.Type type) { }

	// RVA: 0x160E484 Offset: 0x160E484 VA: 0x160E484
	public List<ServantVoiceData[]> GetEventRewardVoiceRandList(int svtId, int limitCnt) { }

	// RVA: 0x160E6F0 Offset: 0x160E6F0 VA: 0x160E6F0
	public List<ServantVoiceData[]> GetEventShopWelcomeVoiceList(int svtId, int limitCnt) { }

	// RVA: 0x160E95C Offset: 0x160E95C VA: 0x160E95C
	public List<ServantVoiceData[]> GetConfirmVoiceData(int svtId, int limitCnt) { }
}

// Namespace: 
public class EventVoicePlayMaster : DataMasterBase<EventVoicePlayMaster, EventVoicePlayEntity, string> // TypeDefIndex: 7007
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC198C Offset: 0xCC198C VA: 0xCC198C
	private static Comparison<EventVoicePlayEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x160EB94 Offset: 0x160EB94 VA: 0x160EB94
	public void .ctor() { }

	// RVA: 0x160EBE8 Offset: 0x160EBE8 VA: 0x160EBE8
	public EventVoicePlayEntity GetEntity(int eventId, int slot, int idx, int guideImageId) { }

	// RVA: 0x160EC74 Offset: 0x160EC74 VA: 0x160EC74
	public bool TryGetEntity(out EventVoicePlayEntity entity, int eventId, int slot, int idx, int guideImageId) { }

	// RVA: 0x160ED10 Offset: 0x160ED10 VA: 0x160ED10
	public string GetVoiceAssetName(int svtId) { }

	// RVA: 0x160ED18 Offset: 0x160ED18 VA: 0x160ED18
	private static string getVoiceAssetName(int svtId) { }

	// RVA: 0x160EDB8 Offset: 0x160EDB8 VA: 0x160EDB8
	public EventVoicePlayEntity[] GetTargetEventIdEntityList(int eventId) { }

	// RVA: 0x160EF3C Offset: 0x160EF3C VA: 0x160EF3C
	public EventVoicePlayEntity GetValidEventVoicePlayEntity(int eventId, int slot, int svtId) { }

	// RVA: 0x160F2F0 Offset: 0x160F2F0 VA: 0x160F2F0
	public List<ServantVoiceData[]> GetEventRewardWelcomeVoiceData(out EventVoicePlayEntity eventVoicePlayEntity, int eventId, int slot, int svtId, int svtLimitCnt) { }

	// RVA: 0x160F350 Offset: 0x160F350 VA: 0x160F350
	public List<ServantVoiceData[]> GetShopWelcomeVoiceData(out EventVoicePlayEntity eventVoicePlayEntity, int eventId, int slot, int svtId, int svtLimitCnt) { }

	// RVA: 0x160F3B0 Offset: 0x160F3B0 VA: 0x160F3B0
	public List<ServantVoiceData[]> GetConfirmVoiceData(int eventId, int slot, int svtId, int svtLimitCnt) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37B7C Offset: 0xD37B7C VA: 0xD37B7C
	// RVA: 0x160F3EC Offset: 0x160F3EC VA: 0x160F3EC
	private static int <GetValidEventVoicePlayEntity>m__0(EventVoicePlayEntity a, EventVoicePlayEntity b) { }
}

// Namespace: 
public class FriendshipEntity : DataEntityBase<string> // TypeDefIndex: 7008
{
	// Fields
	public int id; // 0x10
	public int rank; // 0x14
	public int friendship; // 0x18
	public int qp; // 0x1C
	public int[] itemNums; // 0x20
	public int[] itemIds; // 0x28

	// Methods

	// RVA: 0x1E83568 Offset: 0x1E83568 VA: 0x1E83568
	public void .ctor() { }

	// RVA: 0x1E835B8 Offset: 0x1E835B8 VA: 0x1E835B8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1E835C8 Offset: 0x1E835C8 VA: 0x1E835C8
	public static string CreatePK(int id, int rank) { }
}

// Namespace: 
public class FriendshipMaster : DataMasterBase<FriendshipMaster, FriendshipEntity, string> // TypeDefIndex: 7009
{
	// Methods

	// RVA: 0x1E86F30 Offset: 0x1E86F30 VA: 0x1E86F30
	public void .ctor() { }

	// RVA: 0x1E86F84 Offset: 0x1E86F84 VA: 0x1E86F84
	public FriendshipEntity GetEntity(int id, int rank) { }

	// RVA: 0x1E86FF8 Offset: 0x1E86FF8 VA: 0x1E86FF8
	public bool TryGetEntity(out FriendshipEntity entity, int id, int rank) { }

	// RVA: 0x1E85800 Offset: 0x1E85800 VA: 0x1E85800
	public bool GetFriendshipRank(int friendshipId, int friendship, int maxRank, out int rank, out int max, out int late, out float fraction) { }

	// RVA: 0x1E8707C Offset: 0x1E8707C VA: 0x1E8707C
	public int getRankMax(int id) { }

	// RVA: 0x1E865A8 Offset: 0x1E865A8 VA: 0x1E865A8
	public int getFriendShipRank(int friendshipId, int friendship, int start_friendshipRank) { }
}

// Namespace: 
public class FriendshipQuestDialogInfoEntity : DataEntityBase<string> // TypeDefIndex: 7010
{
	// Fields
	public ObscuredInt svtId; // 0x10
	public int questId; // 0x20

	// Methods

	// RVA: 0x1E872F0 Offset: 0x1E872F0 VA: 0x1E872F0
	public void .ctor() { }

	// RVA: 0x1E87340 Offset: 0x1E87340 VA: 0x1E87340 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1E873C8 Offset: 0x1E873C8 VA: 0x1E873C8
	public static string CreatePK(int svtId, int questId) { }
}

// Namespace: 
public class FriendshipQuestDialogInfoMaster : DataMasterBase<FriendshipQuestDialogInfoMaster, FriendshipQuestDialogInfoEntity, string> // TypeDefIndex: 7011
{
	// Methods

	// RVA: 0x1E873D8 Offset: 0x1E873D8 VA: 0x1E873D8
	public void .ctor() { }

	// RVA: 0x1E8742C Offset: 0x1E8742C VA: 0x1E8742C
	public FriendshipQuestDialogInfoEntity GetEntity(int svtId, int questId) { }

	// RVA: 0x1E874A0 Offset: 0x1E874A0 VA: 0x1E874A0
	public bool TryGetEntity(out FriendshipQuestDialogInfoEntity entity, int svtId, int questId) { }

	// RVA: 0x1E87524 Offset: 0x1E87524 VA: 0x1E87524
	public bool GetLimitCountUnsealInfo(out int svtId, out int questId) { }
}

// Namespace: 
public class FunctionCategoryEntity : DataEntityBase<int> // TypeDefIndex: 7012
{
	// Fields
	public int id; // 0x10
	public int groupType; // 0x14
	public string name; // 0x18
	public int dispNo; // 0x20
	public int flag; // 0x24

	// Methods

	// RVA: 0x1E88B68 Offset: 0x1E88B68 VA: 0x1E88B68
	public void .ctor() { }

	// RVA: 0x1E88BB8 Offset: 0x1E88BB8 VA: 0x1E88BB8 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1E88BC0 Offset: 0x1E88BC0 VA: 0x1E88BC0
	public FunctionCategoryEntity.GroupType GetGroupType() { }

	// RVA: 0x1E88BC8 Offset: 0x1E88BC8 VA: 0x1E88BC8
	public bool HasFlag(FunctionCategoryEntity.Flag typeFlag) { }
}

// Namespace: 
public enum FunctionCategoryEntity.GroupType // TypeDefIndex: 7013
{
	// Fields
	public int value__; // 0x0
	public const FunctionCategoryEntity.GroupType NONE = 0;
	public const FunctionCategoryEntity.GroupType ATTACK = 1;
	public const FunctionCategoryEntity.GroupType DEFENCE = 2;
	public const FunctionCategoryEntity.GroupType STATUS_EFFECT = 3;
	public const FunctionCategoryEntity.GroupType OTHER = 4;
	public const FunctionCategoryEntity.GroupType ATTACK_DEBUFF = 5;
	public const FunctionCategoryEntity.GroupType DEFENCE_DEBUFF = 6;
	public const FunctionCategoryEntity.GroupType STATUS_EFFECT_DEBUFF = 7;
}

// Namespace: 
public enum FunctionCategoryEntity.FuncCategoryFlag // TypeDefIndex: 7014
{
	// Fields
	public int value__; // 0x0
	public const FunctionCategoryEntity.FuncCategoryFlag SVT_EQUIP_FILTER = 0;
	public const FunctionCategoryEntity.FuncCategoryFlag COMMAND_CODE_FILTER = 1;
}

// Namespace: 
public enum FunctionCategoryEntity.Flag // TypeDefIndex: 7015
{
	// Fields
	public int value__; // 0x0
	public const FunctionCategoryEntity.Flag SVT_EQUIP_FILTER = 1;
	public const FunctionCategoryEntity.Flag COMMAND_CODE_FILTER = 2;
}

// Namespace: 
public class FunctionCategoryMaster : DataMasterBase<FunctionCategoryMaster, FunctionCategoryEntity, int> // TypeDefIndex: 7016
{
	// Methods

	// RVA: 0x1E88BD8 Offset: 0x1E88BD8 VA: 0x1E88BD8
	public void .ctor() { }

	// RVA: 0x1E88C2C Offset: 0x1E88C2C VA: 0x1E88C2C
	public FunctionCategoryEntity[] GetEntitiesByGroupType(FunctionCategoryEntity.GroupType groupType, FunctionCategoryEntity.Flag flag) { }

	// RVA: 0x1E88DAC Offset: 0x1E88DAC VA: 0x1E88DAC
	public FunctionCategoryEntity[] GetEntitiesByFlag(FunctionCategoryEntity.Flag flag) { }
}

// Namespace: 
public class FunctionEntity : DataEntityBase<int> // TypeDefIndex: 7017
{
	// Fields
	public int id; // 0x10
	public int cond; // 0x14
	public int funcType; // 0x18
	public int targetType; // 0x1C
	public int[] vals; // 0x20
	public int[] tvals; // 0x28
	public int[] effectList; // 0x30
	public string popupText; // 0x38
	public int popupIconId; // 0x40
	public int popupTextColor; // 0x44
	public int applyTarget; // 0x48
	public int categoryId; // 0x4C
	public int[] questTvals; // 0x50

	// Methods

	// RVA: 0x1E88F1C Offset: 0x1E88F1C VA: 0x1E88F1C
	public void .ctor() { }

	// RVA: 0x1E88F6C Offset: 0x1E88F6C VA: 0x1E88F6C Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1E88F74 Offset: 0x1E88F74 VA: 0x1E88F74
	public bool isTargetPlayer() { }

	// RVA: 0x1E88F88 Offset: 0x1E88F88 VA: 0x1E88F88
	public bool isTargetEnemy() { }

	// RVA: 0x1E88F9C Offset: 0x1E88F9C VA: 0x1E88F9C
	public int[] getValues() { }

	// RVA: 0x1E88FA4 Offset: 0x1E88FA4 VA: 0x1E88FA4
	public int[] getTargetValues() { }

	// RVA: 0x1E88FAC Offset: 0x1E88FAC VA: 0x1E88FAC
	public int[] getEffectList() { }

	// RVA: 0x1E89008 Offset: 0x1E89008 VA: 0x1E89008
	public int[] getQuestTargetValues() { }
}

// Namespace: 
public class FunctionGroupEntity : DataEntityBase<string> // TypeDefIndex: 7018
{
	// Fields
	public int funcId; // 0x10
	public int eventId; // 0x14
	public int baseFuncId; // 0x18
	public string name; // 0x20
	public string nameTotal; // 0x28
	public int iconId; // 0x30
	public int priority; // 0x34
	public bool isDispValue; // 0x38

	// Methods

	// RVA: 0x1E89064 Offset: 0x1E89064 VA: 0x1E89064
	public void .ctor() { }

	// RVA: 0x1E890B4 Offset: 0x1E890B4 VA: 0x1E890B4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1E890C4 Offset: 0x1E890C4 VA: 0x1E890C4
	public static string CreatePK(int funcId, int eventId) { }
}

// Namespace: 
public class FunctionGroupMaster : DataMasterBase<FunctionGroupMaster, FunctionGroupEntity, string> // TypeDefIndex: 7019
{
	// Methods

	// RVA: 0x1E890D4 Offset: 0x1E890D4 VA: 0x1E890D4
	public void .ctor() { }

	// RVA: 0x1E89128 Offset: 0x1E89128 VA: 0x1E89128
	public FunctionGroupEntity GetEntity(int funcId, int eventId) { }

	// RVA: 0x1E8919C Offset: 0x1E8919C VA: 0x1E8919C
	public bool TryGetEntity(out FunctionGroupEntity entity, int funcId, int eventId) { }

	// RVA: 0x1E89220 Offset: 0x1E89220 VA: 0x1E89220
	public FunctionGroupEntity getEntityFromId(int funcId, int eventId) { }
}

// Namespace: 
public class FunctionMaster : DataMasterBase<FunctionMaster, FunctionEntity, int> // TypeDefIndex: 7020
{
	// Methods

	// RVA: 0x1E89374 Offset: 0x1E89374 VA: 0x1E89374
	public void .ctor() { }

	// RVA: 0x1E893C8 Offset: 0x1E893C8 VA: 0x1E893C8
	public List<FunctionEntity> GetFunctionEntitiesByIds(int[] funcIds) { }
}

// Namespace: 
public class GachaAppendEntity : DataEntityBase<string> // TypeDefIndex: 7021
{
	// Fields
	public int gachaId; // 0x10
	public int idx; // 0x14
	public int type; // 0x18
	public int shopId; // 0x1C
	public int gachaGroupId; // 0x20
	public int drawNum; // 0x24
	public int extraGroupId; // 0x28
	public int extraAddCount; // 0x2C
	public int maxDrawNum; // 0x30
	public int flag; // 0x34

	// Methods

	// RVA: 0x1E895FC Offset: 0x1E895FC VA: 0x1E895FC
	public void .ctor() { }

	// RVA: 0x1E8964C Offset: 0x1E8964C VA: 0x1E8964C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1E8965C Offset: 0x1E8965C VA: 0x1E8965C
	public static string CreatePK(int gachaId, int idx) { }
}

// Namespace: 
public class GachaAppendMaster : DataMasterBase<GachaAppendMaster, GachaAppendEntity, string> // TypeDefIndex: 7022
{
	// Fields
	private static readonly long ONEDAY_SECOND; // 0x0

	// Methods

	// RVA: 0x1E8966C Offset: 0x1E8966C VA: 0x1E8966C
	public void .ctor() { }

	// RVA: 0x1E896C0 Offset: 0x1E896C0 VA: 0x1E896C0
	public GachaAppendEntity GetEntity(int gachaId, int idx) { }

	// RVA: 0x1E89734 Offset: 0x1E89734 VA: 0x1E89734
	public bool TryGetEntity(out GachaAppendEntity entity, int gachaId, int idx) { }

	// RVA: 0x1E897B8 Offset: 0x1E897B8 VA: 0x1E897B8
	public List<GachaAppendEntity> GetGroupGachaList(int groupId) { }

	// RVA: 0x1E899E0 Offset: 0x1E899E0 VA: 0x1E899E0
	public GachaAppendMaster.STATE GetAppendSummonState(GachaEntity gachaEnt, out GachaAppendEntity appendEnt) { }

	// RVA: 0x1E89F20 Offset: 0x1E89F20 VA: 0x1E89F20
	private static void .cctor() { }
}

// Namespace: 
public enum GachaAppendMaster.STATE // TypeDefIndex: 7023
{
	// Fields
	public int value__; // 0x0
	public const GachaAppendMaster.STATE NONE = 0;
	public const GachaAppendMaster.STATE END = 1;
	public const GachaAppendMaster.STATE OK = 2;
}

// Namespace: 
public class GachaBehaviorEntity : DataEntityBase<string> // TypeDefIndex: 7024
{
	// Fields
	public int gachaId; // 0x10
	public int svtId; // 0x14
	public Dictionary<string, object> script; // 0x18

	// Methods

	// RVA: 0x1E8A5D4 Offset: 0x1E8A5D4 VA: 0x1E8A5D4
	public void .ctor() { }

	// RVA: 0x1E8A624 Offset: 0x1E8A624 VA: 0x1E8A624 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1E8A634 Offset: 0x1E8A634 VA: 0x1E8A634
	public static string CreatePK(int gachaId, int svtId) { }
}

// Namespace: 
public class GachaBehaviorMaster : DataMasterBase<GachaBehaviorMaster, GachaBehaviorEntity, string> // TypeDefIndex: 7025
{
	// Fields
	public static readonly string SCRIPT_KEY_RANKUP_ANIMATION; // 0x0
	public static readonly string SCRIPT_KEY_RANKUP_BEFORE_CLASS_IMAGE_ID; // 0x8
	public static readonly string SCRIPT_KEY_RANKUP_BEFORE_RARITY; // 0x10
	public static readonly string SCRIPT_KEY_RANKUP_AFTER_CLASS_IMAGE_ID; // 0x18
	public static readonly string SCRIPT_KEY_RANKUP_AFTER_RARITY; // 0x20

	// Methods

	// RVA: 0x1E8A644 Offset: 0x1E8A644 VA: 0x1E8A644
	public void .ctor() { }

	// RVA: 0x1E8A698 Offset: 0x1E8A698 VA: 0x1E8A698
	public GachaBehaviorEntity GetEntity(int gachaId, int svtId) { }

	// RVA: 0x1E8A70C Offset: 0x1E8A70C VA: 0x1E8A70C
	public bool TryGetEntity(out GachaBehaviorEntity entity, int gachaId, int svtId) { }

	// RVA: 0x1E8A790 Offset: 0x1E8A790 VA: 0x1E8A790
	public List<GachaBehaviorEntity> GetGachaBehaviors(int gachaId, int svtId) { }

	// RVA: 0x1E8A9DC Offset: 0x1E8A9DC VA: 0x1E8A9DC
	private static void .cctor() { }
}

// Namespace: 
public class GachaDetailEntity : DataEntityBase<int> // TypeDefIndex: 7026
{
	// Fields
	public int gachaId; // 0x10
	public string title; // 0x18
	public string message; // 0x20
	public Dictionary<string, object> script; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCC199C Offset: 0xCC199C VA: 0xCC199C
	private static Converter<object, int> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1E8AA94 Offset: 0x1E8AA94 VA: 0x1E8AA94
	public void .ctor() { }

	// RVA: 0x1E8AAE4 Offset: 0x1E8AAE4 VA: 0x1E8AAE4 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1E8AAEC Offset: 0x1E8AAEC VA: 0x1E8AAEC
	public object GetScriptObj(string key) { }

	// RVA: 0x1E8AB6C Offset: 0x1E8AB6C VA: 0x1E8AB6C
	public List<object> GetScriptObjList(string key) { }

	// RVA: 0x1E8AC44 Offset: 0x1E8AC44 VA: 0x1E8AC44
	public int GetScriptInt(string key, int defVal = -1) { }

	// RVA: 0x1E8AD1C Offset: 0x1E8AD1C VA: 0x1E8AD1C
	public int[] GetScriptIntArray(string key, int[] defVal) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37B8C Offset: 0xD37B8C VA: 0xD37B8C
	// RVA: 0x1E8AE28 Offset: 0x1E8AE28 VA: 0x1E8AE28
	private static int <GetScriptIntArray>m__0(object x) { }
}

// Namespace: 
public class GachaDetailMaster : DataMasterBase<GachaDetailMaster, GachaDetailEntity, int> // TypeDefIndex: 7027
{
	// Methods

	// RVA: 0x1E8AEA4 Offset: 0x1E8AEA4 VA: 0x1E8AEA4
	public void .ctor() { }

	// RVA: 0x1E8AEF8 Offset: 0x1E8AEF8 VA: 0x1E8AEF8
	public GachaDetailEntity GetGachaDetailEntity(int gachaID) { }
}

// Namespace: 
public class GachaEntity : DataEntityBase<int> // TypeDefIndex: 7028
{
	// Fields
	public int id; // 0x10
	public string name; // 0x18
	public int imageId; // 0x20
	public int priority; // 0x24
	public int warId; // 0x28
	public int gachaSlot; // 0x2C
	public int type; // 0x30
	public int shopId1; // 0x34
	public int shopId2; // 0x38
	public int ticketItemId; // 0x3C
	public int drawNum1; // 0x40
	public int drawNum2; // 0x44
	public int extraGroupId1; // 0x48
	public int extraGroupId2; // 0x4C
	public int extraAddCount1; // 0x50
	public int extraAddCount2; // 0x54
	public int freeDrawFlag; // 0x58
	public int maxDrawNum; // 0x5C
	public int beforeGachaId; // 0x60
	public int beforeDrawNum; // 0x64
	public long openedAt; // 0x68
	public long closedAt; // 0x70
	public int condQuestId; // 0x78
	public int condQuestPhase; // 0x7C
	public string detailUrl; // 0x80
	public int bannerQuestId; // 0x88
	public int bannerQuestPhase; // 0x8C
	public int gachaGroupId; // 0x90
	public int flag; // 0x94

	// Methods

	// RVA: 0x1E8B6E8 Offset: 0x1E8B6E8 VA: 0x1E8B6E8
	public void .ctor() { }

	// RVA: 0x1E8B738 Offset: 0x1E8B738 VA: 0x1E8B738 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1E8B740 Offset: 0x1E8B740 VA: 0x1E8B740
	public int getPrice() { }

	// RVA: 0x1E8B5A0 Offset: 0x1E8B5A0 VA: 0x1E8B5A0
	public int getPayOneTimePrice() { }

	// RVA: 0x1E8B644 Offset: 0x1E8B644 VA: 0x1E8B644
	public int getPayMultiTimePrice() { }

	// RVA: 0x1E8B81C Offset: 0x1E8B81C VA: 0x1E8B81C
	public bool HasFlag(GachaEntity.Flag check) { }
}

// Namespace: 
public enum GachaEntity.FlagKind // TypeDefIndex: 7029
{
	// Fields
	public int value__; // 0x0
	public const GachaEntity.FlagKind PC_MESSAGE = 1;
}

// Namespace: 
public enum GachaEntity.Flag // TypeDefIndex: 7030
{
	// Fields
	public int value__; // 0x0
	public const GachaEntity.Flag PC_MESSAGE = 2;
}

// Namespace: 
public class GachaGroupEntity : DataEntityBase<int> // TypeDefIndex: 7031
{
	// Fields
	public int id; // 0x10
	public int maxDrawNum; // 0x14
	public string name; // 0x18
	public string[] tutorialImageIds; // 0x20

	// Methods

	// RVA: 0x1E8B82C Offset: 0x1E8B82C VA: 0x1E8B82C
	public void .ctor() { }

	// RVA: 0x1E8B87C Offset: 0x1E8B87C VA: 0x1E8B87C Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class GachaGroupMaster : DataMasterBase<GachaGroupMaster, GachaGroupEntity, int> // TypeDefIndex: 7032
{
	// Methods

	// RVA: 0x1E8B884 Offset: 0x1E8B884 VA: 0x1E8B884
	public void .ctor() { }
}

// Namespace: 
public class GachaImageEntity : DataEntityBase<string> // TypeDefIndex: 7033
{
	// Fields
	public int gachaId; // 0x10
	public int areaId; // 0x14
	public int imageId; // 0x18
	public GachaData showSvt; // 0x20

	// Methods

	// RVA: 0x1E8BB34 Offset: 0x1E8BB34 VA: 0x1E8BB34
	public void .ctor() { }

	// RVA: 0x1E8BB84 Offset: 0x1E8BB84 VA: 0x1E8BB84 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1E8BB94 Offset: 0x1E8BB94 VA: 0x1E8BB94
	public static string CreatePK(int gachaId, int areaId) { }
}

// Namespace: 
public class GachaImageMaster : DataMasterBase<GachaImageMaster, GachaImageEntity, string> // TypeDefIndex: 7034
{
	// Methods

	// RVA: 0x1E8BBA4 Offset: 0x1E8BBA4 VA: 0x1E8BBA4
	public void .ctor() { }

	// RVA: 0x1E8BBF8 Offset: 0x1E8BBF8 VA: 0x1E8BBF8
	public GachaImageEntity GetEntity(int gachaId, int areaId) { }

	// RVA: 0x1E8BC6C Offset: 0x1E8BC6C VA: 0x1E8BC6C
	public bool TryGetEntity(out GachaImageEntity entity, int gachaId, int areaId) { }
}

// Namespace: 
public class GachaMaster : DataMasterBase<GachaMaster, GachaEntity, int> // TypeDefIndex: 7035
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC19AC Offset: 0xCC19AC VA: 0xCC19AC
	private static Comparison<GachaEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC19BC Offset: 0xCC19BC VA: 0xCC19BC
	private static Comparison<GachaEntity> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x1E8BCF8 Offset: 0x1E8BCF8 VA: 0x1E8BCF8
	public void .ctor() { }

	// RVA: 0x1E8BD4C Offset: 0x1E8BD4C VA: 0x1E8BD4C
	public GachaEntity[] getListByPayType(PayType.Type gachaType) { }

	// RVA: 0x1E8BF0C Offset: 0x1E8BF0C VA: 0x1E8BF0C
	public GachaEntity getFriendPointGachaEntity() { }

	// RVA: 0x1E8C050 Offset: 0x1E8C050 VA: 0x1E8C050
	public GachaEntity[] getListValidData() { }

	// RVA: 0x1E8C200 Offset: 0x1E8C200 VA: 0x1E8C200
	public int getVaildPayType() { }

	// RVA: 0x1E8C350 Offset: 0x1E8C350 VA: 0x1E8C350
	public GachaEntity[] getGachaDataInGroup(int groupId) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37B9C Offset: 0xD37B9C VA: 0xD37B9C
	// RVA: 0x1E8C494 Offset: 0x1E8C494 VA: 0x1E8C494
	private static int <getFriendPointGachaEntity>m__0(GachaEntity a, GachaEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37BAC Offset: 0xD37BAC VA: 0xD37BAC
	// RVA: 0x1E8C4D8 Offset: 0x1E8C4D8 VA: 0x1E8C4D8
	private static int <getVaildPayType>m__1(GachaEntity a, GachaEntity b) { }
}

// Namespace: 
public class GachaReleaseEntity : DataEntityBase<string> // TypeDefIndex: 7036
{
	// Fields
	public int gachaId; // 0x10
	public int type; // 0x14
	public int targetId; // 0x18
	public int value; // 0x1C

	// Methods

	// RVA: 0x1E8C524 Offset: 0x1E8C524 VA: 0x1E8C524
	public void .ctor() { }

	// RVA: 0x1E8C574 Offset: 0x1E8C574 VA: 0x1E8C574 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1E8C588 Offset: 0x1E8C588 VA: 0x1E8C588
	public static string CreatePK(int gachaId, int type, int targetId) { }

	// RVA: 0x1E8C59C Offset: 0x1E8C59C VA: 0x1E8C59C
	public bool IsEnable() { }
}

// Namespace: 
public class GachaReleaseMaster : DataMasterBase<GachaReleaseMaster, GachaReleaseEntity, string> // TypeDefIndex: 7037
{
	// Methods

	// RVA: 0x1E8C644 Offset: 0x1E8C644 VA: 0x1E8C644
	public void .ctor() { }

	// RVA: 0x1E8C698 Offset: 0x1E8C698 VA: 0x1E8C698
	public GachaReleaseEntity GetEntity(int gachaId, int type, int targetId) { }

	// RVA: 0x1E8C71C Offset: 0x1E8C71C VA: 0x1E8C71C
	public bool TryGetEntity(out GachaReleaseEntity entity, int gachaId, int type, int targetId) { }

	// RVA: 0x1E8C7A8 Offset: 0x1E8C7A8 VA: 0x1E8C7A8
	public bool IsEnableRelease(int gachaId) { }
}

// Namespace: 
public class GachaStoryAdjustEntity : DataEntityBase<string> // TypeDefIndex: 7038
{
	// Fields
	public int gachaId; // 0x10
	public int idx; // 0x14
	public int adjustId; // 0x18
	public int condType; // 0x1C
	public int targetId; // 0x20
	public int value; // 0x24
	public int imageId; // 0x28
	public string headerName; // 0x30

	// Methods

	// RVA: 0x1E8C8E0 Offset: 0x1E8C8E0 VA: 0x1E8C8E0
	public void .ctor() { }

	// RVA: 0x1E8C930 Offset: 0x1E8C930 VA: 0x1E8C930 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1E8C940 Offset: 0x1E8C940 VA: 0x1E8C940
	public static string CreatePK(int gachaId, int idx) { }
}

// Namespace: 
public class GachaStoryAdjustMaster : DataMasterBase<GachaStoryAdjustMaster, GachaStoryAdjustEntity, string> // TypeDefIndex: 7039
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC19CC Offset: 0xCC19CC VA: 0xCC19CC
	private static Comparison<GachaStoryAdjustEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1E8C950 Offset: 0x1E8C950 VA: 0x1E8C950
	public void .ctor() { }

	// RVA: 0x1E8C9A4 Offset: 0x1E8C9A4 VA: 0x1E8C9A4
	public GachaStoryAdjustEntity GetEntity(int gachaId, int idx) { }

	// RVA: 0x1E8CA18 Offset: 0x1E8CA18 VA: 0x1E8CA18
	public bool TryGetEntity(out GachaStoryAdjustEntity entity, int gachaId, int idx) { }

	// RVA: 0x1E8CA9C Offset: 0x1E8CA9C VA: 0x1E8CA9C
	public bool GetValidData(out StoryGachaAdjustData adjustData, int gachaId) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37BBC Offset: 0xD37BBC VA: 0xD37BBC
	// RVA: 0x1E8CEF0 Offset: 0x1E8CEF0 VA: 0x1E8CEF0
	private static int <GetValidData>m__0(GachaStoryAdjustEntity a, GachaStoryAdjustEntity b) { }
}

// Namespace: 
public class GachaSubEntity : DataEntityBase<string> // TypeDefIndex: 7040
{
	// Fields
	public int gachaId; // 0x10
	public int id; // 0x14
	public int priority; // 0x18
	public int imageId; // 0x1C
	public int adjustAddId; // 0x20
	public long openedAt; // 0x28
	public long closedAt; // 0x30
	public int commonReleaseId; // 0x38

	// Methods

	// RVA: 0x1E8CF30 Offset: 0x1E8CF30 VA: 0x1E8CF30
	public void .ctor() { }

	// RVA: 0x1E8CF80 Offset: 0x1E8CF80 VA: 0x1E8CF80 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1E8CF90 Offset: 0x1E8CF90 VA: 0x1E8CF90
	public static string CreatePK(int gachaId, int id) { }
}

// Namespace: 
public class GachaSubMaster : DataMasterBase<GachaSubMaster, GachaSubEntity, string> // TypeDefIndex: 7041
{
	// Methods

	// RVA: 0x1E8CFA0 Offset: 0x1E8CFA0 VA: 0x1E8CFA0
	public void .ctor() { }

	// RVA: 0x1E8CFF4 Offset: 0x1E8CFF4 VA: 0x1E8CFF4
	public GachaSubEntity GetEntity(int gachaId, int id) { }

	// RVA: 0x1E8D068 Offset: 0x1E8D068 VA: 0x1E8D068
	public bool TryGetEntity(out GachaSubEntity entity, int gachaId, int id) { }

	// RVA: 0x1E8D0EC Offset: 0x1E8D0EC VA: 0x1E8D0EC
	public GachaSubEntity GetFriendPointGachaImageInfo(int gachaId, long nowTime) { }

	// RVA: 0x1E8D2D4 Offset: 0x1E8D2D4 VA: 0x1E8D2D4
	public GachaSubEntity GetOpenEntity(int gachaId) { }

	// RVA: 0x1E8D0F0 Offset: 0x1E8D0F0 VA: 0x1E8D0F0
	public GachaSubEntity GetOpenEntity(int gachaId, long checkTime) { }
}

// Namespace: 
public class GachaTicketEntity : DataEntityBase<string> // TypeDefIndex: 7042
{
	// Fields
	public int gachaId; // 0x10
	public int ticketItemId; // 0x14
	public int gachaRarityId; // 0x18
	public int gachaProbabilityId; // 0x1C

	// Methods

	// RVA: 0x1E8D35C Offset: 0x1E8D35C VA: 0x1E8D35C
	public void .ctor() { }

	// RVA: 0x1E8D3AC Offset: 0x1E8D3AC VA: 0x1E8D3AC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1E8D3BC Offset: 0x1E8D3BC VA: 0x1E8D3BC
	public static string CreatePK(int gachaId, int ticketItemId) { }
}

// Namespace: 
public class GachaTicketMaster : DataMasterBase<GachaTicketMaster, GachaTicketEntity, string> // TypeDefIndex: 7043
{
	// Methods

	// RVA: 0x1E8D3CC Offset: 0x1E8D3CC VA: 0x1E8D3CC
	public void .ctor() { }

	// RVA: 0x1E8D420 Offset: 0x1E8D420 VA: 0x1E8D420
	public GachaTicketEntity GetEntity(int gachaId, int ticketItemId) { }

	// RVA: 0x1E8D494 Offset: 0x1E8D494 VA: 0x1E8D494
	public bool TryGetEntity(out GachaTicketEntity entity, int gachaId, int ticketItemId) { }
}

// Namespace: 
public class GiftAddEntity : DataEntityBase<string> // TypeDefIndex: 7044
{
	// Fields
	public int giftId; // 0x10
	public int priority; // 0x14
	public int condType; // 0x18
	public int targetId; // 0x1C
	public int targetNum; // 0x20
	public int[] priorGiftIconIds; // 0x28
	public int priorGiftId; // 0x30
	public Dictionary<string, object> script; // 0x38

	// Methods

	// RVA: 0x20F9D20 Offset: 0x20F9D20 VA: 0x20F9D20
	public void .ctor() { }

	// RVA: 0x20F9D70 Offset: 0x20F9D70 VA: 0x20F9D70 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x20F9D80 Offset: 0x20F9D80 VA: 0x20F9D80
	public static string CreatePK(int giftId, int priority) { }

	// RVA: 0x20F9D90 Offset: 0x20F9D90 VA: 0x20F9D90
	public bool CheckValid() { }

	// RVA: 0x20F9E10 Offset: 0x20F9E10 VA: 0x20F9E10
	private object GetScriptValue(string key) { }

	// RVA: 0x20F9E8C Offset: 0x20F9E8C VA: 0x20F9E8C
	public string GetOverwriteTreasureEffectId() { }

	// RVA: 0x20F9F4C Offset: 0x20F9F4C VA: 0x20F9F4C
	public string GetOverwriteDetailText() { }
}

// Namespace: 
public class GiftAddMaster : DataMasterBase<GiftAddMaster, GiftAddEntity, string> // TypeDefIndex: 7045
{
	// Methods

	// RVA: 0x20FA00C Offset: 0x20FA00C VA: 0x20FA00C
	public void .ctor() { }

	// RVA: 0x20FA060 Offset: 0x20FA060 VA: 0x20FA060
	public GiftAddEntity GetEntity(int giftId, int priority) { }

	// RVA: 0x20FA0D4 Offset: 0x20FA0D4 VA: 0x20FA0D4
	public bool TryGetEntity(out GiftAddEntity entity, int giftId, int priority) { }

	// RVA: 0x20FA158 Offset: 0x20FA158 VA: 0x20FA158
	public GiftAddEntity GetValidPriorDataById(int giftId) { }
}

// Namespace: 
public class GiftEntity : DataEntityBase<string> // TypeDefIndex: 7046
{
	// Fields
	public int id; // 0x10
	public int type; // 0x14
	public int objectId; // 0x18
	public int num; // 0x1C
	public int limitCount; // 0x20
	public int lv; // 0x24
	public int priority; // 0x28
	private int prioredIconId; // 0x2C
	[CompilerGeneratedAttribute] // RVA: 0xCC19DC Offset: 0xCC19DC VA: 0xCC19DC
	[DebuggerBrowsableAttribute] // RVA: 0xCC19DC Offset: 0xCC19DC VA: 0xCC19DC
	private bool <IsReplacedData>k__BackingField; // 0x30

