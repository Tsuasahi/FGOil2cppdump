	public int num; // 0x18
	public int idx; // 0x1C
	public int condGroup; // 0x20
	public int condType; // 0x24
	public int[] condIds; // 0x28

	// Methods

	// RVA: 0x10A5AA8 Offset: 0x10A5AA8 VA: 0x10A5AA8
	public void .ctor() { }

	// RVA: 0x10A5AF8 Offset: 0x10A5AF8 VA: 0x10A5AF8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x10A5B0C Offset: 0x10A5B0C VA: 0x10A5B0C
	public static string CreatePK(int eventId, int flagType, int num, int idx) { }
}

// Namespace: 
public class EventTutorialCondMaster : DataMasterBase<EventTutorialCondMaster, EventTutorialCondEntity, string> // TypeDefIndex: 6993
{
	// Methods

	// RVA: 0x10A5B24 Offset: 0x10A5B24 VA: 0x10A5B24
	public void .ctor() { }

	// RVA: 0x10A5B78 Offset: 0x10A5B78 VA: 0x10A5B78
	public EventTutorialCondEntity GetEntity(int eventId, int flagType, int num, int idx) { }

	// RVA: 0x10A5C04 Offset: 0x10A5C04 VA: 0x10A5C04
	public bool TryGetEntity(out EventTutorialCondEntity entity, int eventId, int flagType, int num, int idx) { }

	// RVA: 0x10A5CA0 Offset: 0x10A5CA0 VA: 0x10A5CA0
	public bool isEnableExtCondition(int evId, int flgType, int number, EventTutorialEntity baseEntity) { }

	// RVA: 0x10A60C8 Offset: 0x10A60C8 VA: 0x10A60C8
	private bool isEnableCondition(int eventId, CondType.Kind condType, int[] condIds, int condValue) { }

	// RVA: 0x10A6510 Offset: 0x10A6510 VA: 0x10A6510
	private List<EventTutorialCondEntity> GetEventTutorialCondEntity(int evId, int flgType, int number) { }
}

// Namespace: 
public class EventTutorialEntity : DataEntityBase<string> // TypeDefIndex: 6994
{
	// Fields
	public int num; // 0x10
	public int eventId; // 0x14
	public int flagType; // 0x18
	public int openType; // 0x1C
	public string[] targetIds; // 0x20
	public int condType; // 0x28
	public int[] condIds; // 0x30
	public int condValue; // 0x38
	public int[] imageIds; // 0x40
	public EventTutorialEntity.TextTuto[] textJson; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC55A94 Offset: 0xC55A94 VA: 0xC55A94
	private static Converter<string, int> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x10A6754 Offset: 0x10A6754 VA: 0x10A6754
	public void .ctor() { }

	// RVA: 0x10A67A4 Offset: 0x10A67A4 VA: 0x10A67A4
	private int[][] getTargets() { }

	// RVA: 0x10A6A64 Offset: 0x10A6A64 VA: 0x10A6A64 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x10A6A78 Offset: 0x10A6A78 VA: 0x10A6A78
	public static string CreatePK(int eventId, int flagType, int num) { }

	// RVA: 0x10A6A8C Offset: 0x10A6A8C VA: 0x10A6A8C
	public EventTutorialMaster.OpenType GetOpenType() { }

	// RVA: 0x10A6A94 Offset: 0x10A6A94 VA: 0x10A6A94
	public bool isOpenCondition(int qId = 0, int ex1 = 0, int ex2 = 0, int ex3 = 0) { }

	// RVA: 0x10A6B64 Offset: 0x10A6B64 VA: 0x10A6B64
	public bool isEnableCondition(int qId = 0, int ex1 = 0, int ex2 = 0, int ex3 = 0) { }

	// RVA: 0x10A76C4 Offset: 0x10A76C4 VA: 0x10A76C4
	public void OpenTutorial(Action callback) { }

	// RVA: 0x10A85AC Offset: 0x10A85AC VA: 0x10A85AC
	public void OpenTutorialWithoutFlag(Action callback) { }

	// RVA: 0x10A78F0 Offset: 0x10A78F0 VA: 0x10A78F0
	private void TextTutorialChain(int idx, Action callback) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA4A8 Offset: 0xCCA4A8 VA: 0xCCA4A8
	// RVA: 0x10A87C0 Offset: 0x10A87C0 VA: 0x10A87C0
	private static int <getTargets>m__0(string input) { }
}

// Namespace: 
public class EventTutorialEntity.TextTuto // TypeDefIndex: 6995
{
	// Fields
	public EventTutorialEntity.RectData[] rects; // 0x10
	public int[] textPos; // 0x18
	public string text; // 0x20
	public string textAlign; // 0x28
	public int[] ptPos; // 0x30
	public int dlgFontSize; // 0x38
	public int dlgBgId; // 0x3C

	// Methods

	// RVA: 0x10A8BB0 Offset: 0x10A8BB0 VA: 0x10A8BB0
	public void .ctor() { }
}

// Namespace: 
public class EventTutorialEntity.RectData // TypeDefIndex: 6996
{
	// Fields
	public int x; // 0x10
	public int y; // 0x14
	public int w; // 0x18
	public int h; // 0x1C

	// Methods

	// RVA: 0x10A8BA8 Offset: 0x10A8BA8 VA: 0x10A8BA8
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42D14 Offset: 0xC42D14 VA: 0xC42D14
private sealed class EventTutorialEntity.<OpenTutorial>c__AnonStorey0 // TypeDefIndex: 6997
{
	// Fields
	internal Action callback; // 0x10
	internal EventTutorialEntity $this; // 0x18

	// Methods

	// RVA: 0x10A78E8 Offset: 0x10A78E8 VA: 0x10A78E8
	public void .ctor() { }

	// RVA: 0x10A87F4 Offset: 0x10A87F4 VA: 0x10A87F4
	internal void <>m__0() { }

	// RVA: 0x10A8884 Offset: 0x10A8884 VA: 0x10A8884
	internal void <>m__1() { }

	// RVA: 0x10A8978 Offset: 0x10A8978 VA: 0x10A8978
	internal void <>m__2(string result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42D24 Offset: 0xC42D24 VA: 0xC42D24
private sealed class EventTutorialEntity.<OpenTutorialWithoutFlag>c__AnonStorey1 // TypeDefIndex: 6998
{
	// Fields
	internal Action callback; // 0x10

	// Methods

	// RVA: 0x10A87B0 Offset: 0x10A87B0 VA: 0x10A87B0
	public void .ctor() { }

	// RVA: 0x10A8A08 Offset: 0x10A8A08 VA: 0x10A8A08
	internal void <>m__0() { }

	// RVA: 0x10A8A98 Offset: 0x10A8A98 VA: 0x10A8A98
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42D34 Offset: 0xC42D34 VA: 0xC42D34
private sealed class EventTutorialEntity.<TextTutorialChain>c__AnonStorey2 // TypeDefIndex: 6999
{
	// Fields
	internal int idx; // 0x10
	internal Action callback; // 0x18
	internal EventTutorialEntity $this; // 0x20

	// Methods

	// RVA: 0x10A87B8 Offset: 0x10A87B8 VA: 0x10A87B8
	public void .ctor() { }

	// RVA: 0x10A8B28 Offset: 0x10A8B28 VA: 0x10A8B28
	internal void <>m__0() { }

	// RVA: 0x10A8B68 Offset: 0x10A8B68 VA: 0x10A8B68
	internal void <>m__1() { }
}

// Namespace: 
public class EventTutorialMaster : DataMasterBase<EventTutorialMaster, EventTutorialEntity, string> // TypeDefIndex: 7000
{
	// Methods

	// RVA: 0x10A8BB8 Offset: 0x10A8BB8 VA: 0x10A8BB8
	public void .ctor() { }

	// RVA: 0x10A8C0C Offset: 0x10A8C0C VA: 0x10A8C0C
	public EventTutorialEntity GetEntity(int eventId, int flagType, int num) { }

	// RVA: 0x10A8C90 Offset: 0x10A8C90 VA: 0x10A8C90
	public bool TryGetEntity(out EventTutorialEntity entity, int eventId, int flagType, int num) { }

	// RVA: 0x10A8D1C Offset: 0x10A8D1C VA: 0x10A8D1C
	private void checkTutorial(int eventId, EventTutorialMaster.OpenType openKind, Action callbackAfter, int qId = 0, int bPhase = 0, int bWave = 0, int bTurn = 0) { }

	// RVA: 0x10A908C Offset: 0x10A908C VA: 0x10A908C
	private void checkTutorial(List<int> checkEventIds, EventTutorialMaster.OpenType openKind, Action callbackAfter, int qId = 0, int bPhase = 0, int bWave = 0, int bTurn = 0) { }

	// RVA: 0x10A9434 Offset: 0x10A9434 VA: 0x10A9434
	private bool isTutorialDataExists(int eventId, EventTutorialMaster.OpenType openKind, int qId = 0, int bPhase = 0, int bWave = 0, int bTurn = 0, bool isChkEventId = False) { }

	// RVA: 0x10A95A0 Offset: 0x10A95A0 VA: 0x10A95A0
	private bool isTutorialAvailable(int eventId, EventTutorialMaster.OpenType openKind, int qId = 0, int bPhase = 0, int bWave = 0, int bTurn = 0) { }

	// RVA: 0x10A96F8 Offset: 0x10A96F8 VA: 0x10A96F8
	public static void CheckTutorial(int eventId, EventTutorialMaster.OpenType openKind, Action callbackAfter, int qId = 0, int bPhase = 0, int bWave = 0, int bTurn = 0) { }

	// RVA: 0x10A9974 Offset: 0x10A9974 VA: 0x10A9974
	public static bool IsTutorialDataExists(int eventId, EventTutorialMaster.OpenType openKind, int qId = 0, int bPhase = 0, int bWave = 0, int bTurn = 0, bool isChkEventId = False) { }

	// RVA: 0x10A9A54 Offset: 0x10A9A54 VA: 0x10A9A54
	public static bool IsTutorialAvailable(int eventId, EventTutorialMaster.OpenType openKind, int qId = 0, int bPhase = 0, int bWave = 0, int bTurn = 0) { }

	// RVA: 0x10A9B1C Offset: 0x10A9B1C VA: 0x10A9B1C
	public static void ShowTutorialWithoutCheck(int eventId, EventTutorialMaster.OpenType openKind, Action callback) { }

	// RVA: 0x10A9BBC Offset: 0x10A9BBC VA: 0x10A9BBC
	private void showTutorialWithoutCheck(int eventId, EventTutorialMaster.OpenType openKind, Action callback) { }

	// RVA: 0x10A9F18 Offset: 0x10A9F18 VA: 0x10A9F18
	public static void ShowTutorialWithoutCheck(int eventId, EventTutorialMaster.OpenType openKind, Action callback, int qId, int bPhase = 0, int bWave = 0, int bTurn = 0) { }

	// RVA: 0x10A9FF4 Offset: 0x10A9FF4 VA: 0x10A9FF4
	private void showTutorialWithoutCheck(int eventId, EventTutorialMaster.OpenType openKind, Action callbackAfter, int qId, int bPhase, int bWave, int bTurn) { }

	// RVA: 0x10AA364 Offset: 0x10AA364 VA: 0x10AA364
	public static void TutorialChainWithoutCheckStart(List<EventTutorialEntity> tutoList, Action callback) { }

	// RVA: 0x10A9D40 Offset: 0x10A9D40 VA: 0x10A9D40
	private void tutorialChainWithoutCheck(List<EventTutorialEntity> tutoList, int index, Action callback) { }

	// RVA: 0x10A981C Offset: 0x10A981C VA: 0x10A981C
	private static List<int> GetOpenEventIds() { }

	// RVA: 0x10AA408 Offset: 0x10AA408 VA: 0x10AA408
	public static List<EventTutorialEntity> GetEventTutorialEntity(int eventId, EventTutorialMaster.OpenType openKind, string targetIds) { }

	// RVA: 0x10AA4A8 Offset: 0x10AA4A8 VA: 0x10AA4A8
	private List<EventTutorialEntity> getEventTutorialEntity(int eventId, EventTutorialMaster.OpenType openKind, string targetIds) { }

	// RVA: 0x10AA868 Offset: 0x10AA868 VA: 0x10AA868
	public static List<EventTutorialEntity> GetAvailableEventTutorialEntitys(int eventId, EventTutorialMaster.OpenType[] openKinds, int qId, int bPhase, int bWave, int bTurn) { }

	// RVA: 0x10AA930 Offset: 0x10AA930 VA: 0x10AA930
	private List<EventTutorialEntity> getAvailableEventTutorialEntitys(int eventId, EventTutorialMaster.OpenType[] openKinds, int qId, int bPhase, int bWave, int bTurn) { }
}

// Namespace: 
public enum EventTutorialMaster.OpenType // TypeDefIndex: 7001
{
	// Fields
	public int value__; // 0x0
	public const EventTutorialMaster.OpenType ON_MAP = 1;
	public const EventTutorialMaster.OpenType ON_TERMINAL = 2;
	public const EventTutorialMaster.OpenType ON_SPOT = 3;
	public const EventTutorialMaster.OpenType ON_EVENT_SCENE = 4;
	public const EventTutorialMaster.OpenType BATTLE_START = 5;
	public const EventTutorialMaster.OpenType BATTLE_TURN = 6;
	public const EventTutorialMaster.OpenType BATTLE_RESULT = 7;
	public const EventTutorialMaster.OpenType BATTLE_RESULT_WIN = 8;
	public const EventTutorialMaster.OpenType BATTLE_RESULT_LOSE = 9;
	public const EventTutorialMaster.OpenType ON_EVENT_SHOP_HELP = 10;
	public const EventTutorialMaster.OpenType SVT_GET = 11;
	public const EventTutorialMaster.OpenType ON_EVENT_SCENE_HELP = 12;
	public const EventTutorialMaster.OpenType ON_QUEST_SELECT = 13;
	public const EventTutorialMaster.OpenType ON_EVENT_SHOP = 14;
	public const EventTutorialMaster.OpenType ON_SUPPORT_SELECT = 15;
	public const EventTutorialMaster.OpenType QUEST_START = 16;
	public const EventTutorialMaster.OpenType SHOP_BUY_AFTER = 17;
	public const EventTutorialMaster.OpenType ON_CALDEA_GATE = 18;
	public const EventTutorialMaster.OpenType ON_EVENT_POINT = 19;
	public const EventTutorialMaster.OpenType EVENT_TAB1 = 20;
	public const EventTutorialMaster.OpenType EVENT_TAB2 = 21;
	public const EventTutorialMaster.OpenType EVENT_TAB3 = 22;
	public const EventTutorialMaster.OpenType EVENT_TAB1_HELP = 23;
	public const EventTutorialMaster.OpenType EVENT_TAB2_HELP = 24;
	public const EventTutorialMaster.OpenType EVENT_TAB3_HELP = 25;
	public const EventTutorialMaster.OpenType BATTLE_GIMMICK = 26;
	public const EventTutorialMaster.OpenType BATTLE_WAVE = 27;
	public const EventTutorialMaster.OpenType EVENT_TAB1_EFFECT = 28;
	public const EventTutorialMaster.OpenType EVENT_TAB2_EFFECT = 29;
	public const EventTutorialMaster.OpenType EVENT_TAB3_EFFECT = 30;
	public const EventTutorialMaster.OpenType COSTUME = 31;
	public const EventTutorialMaster.OpenType OPEN_SORT_WINDOW = 32;
	public const EventTutorialMaster.OpenType ON_EVENT_FOLDER_HELP = 33;
	public const EventTutorialMaster.OpenType GACHA = 34;
	public const EventTutorialMaster.OpenType SVT_COMBINE = 35;
	public const EventTutorialMaster.OpenType SVT_LIMIT_UP = 36;
	public const EventTutorialMaster.OpenType SVT_SKILL_COMBINE = 37;
	public const EventTutorialMaster.OpenType SVT_EQUIP_COMBINE = 38;
	public const EventTutorialMaster.OpenType SVT_NP_COMBINE = 39;
	public const EventTutorialMaster.OpenType SVT_LVEXCEED = 40;
	public const EventTutorialMaster.OpenType OPEN_CHOICE_WINDOW = 41;
	public const EventTutorialMaster.OpenType OPEN_SMART_CHOICE_WINDOW = 42;
	public const EventTutorialMaster.OpenType EVENT_TAB4 = 43;
	public const EventTutorialMaster.OpenType EVENT_TAB4_HELP = 44;
	public const EventTutorialMaster.OpenType OPEN_QUEST_START = 45;
	public const EventTutorialMaster.OpenType BATTLE_BREAK_GAUGE_CHARACTER = 46;
	public const EventTutorialMaster.OpenType COMMAND_CODE = 47;
	public const EventTutorialMaster.OpenType SUPPORT_SETTING = 48;
	public const EventTutorialMaster.OpenType ON_FOLLOW = 49;
	public const EventTutorialMaster.OpenType USER_SEARCH_SUCCESS = 50;
	public const EventTutorialMaster.OpenType ON_FRIENDSHIP = 51;
	public const EventTutorialMaster.OpenType ON_EVENT_POINT_EFFECT_VIEW = 52;
	public const EventTutorialMaster.OpenType NO_COST_AT_DEFEAT = 53;
	public const EventTutorialMaster.OpenType ON_SVT_LIST_EQUIP_SELECT = 54;
	public const EventTutorialMaster.OpenType ON_SVT_STORAGE_EQUIP_SELECT = 55;
	public const EventTutorialMaster.OpenType ON_SVT_SELL_EQUIP_SELECT = 56;
	public const EventTutorialMaster.OpenType ON_SVT_EQUIP_COMBINE_BASE_SELECT = 57;
	public const EventTutorialMaster.OpenType ON_SVT_COMBINE_LIMIT_SPECIAL = 58;
	public const EventTutorialMaster.OpenType COMMAND_CARD_EXCEED = 59;
	public const EventTutorialMaster.OpenType ON_TERMINAL_WITH_SVT_COMBINE_LIMIT_SPECIAL = 60;
	public const EventTutorialMaster.OpenType MY_ROOM_SERVANTS_RECORDS_EPISODES_LIST = 61;
	public const EventTutorialMaster.OpenType WAR_BOARD_MAP = 62;
	public const EventTutorialMaster.OpenType WAR_BOARD_SETUP = 63;
	public const EventTutorialMaster.OpenType WAR_BOARD_START = 64;
	public const EventTutorialMaster.OpenType WAR_BOARD_MAP_SETUP = 65;
	public const EventTutorialMaster.OpenType LOGIN_BONUS_CLOSED = 66;
	public const EventTutorialMaster.OpenType OPEN_SPECIFIC_QUEST = 67;
	public const EventTutorialMaster.OpenType ON_PUSH_SVT_SELECT = 68;
	public const EventTutorialMaster.OpenType ON_NP_COMBINE_SVT_SELECT = 69;
	public const EventTutorialMaster.OpenType ON_APPEND_PASSIVE_SKILL_COMBINE = 70;
	public const EventTutorialMaster.OpenType ON_PARTY_CONFIRM = 71;
	public const EventTutorialMaster.OpenType BOX_GACHA_RESET = 72;
	public const EventTutorialMaster.OpenType ON_COIN_ROOM = 73;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42D44 Offset: 0xC42D44 VA: 0xC42D44
private sealed class EventTutorialMaster.<checkTutorial>c__AnonStorey0 // TypeDefIndex: 7002
{
	// Fields
	internal int eventId; // 0x10
	internal EventTutorialMaster.OpenType openKind; // 0x14
	internal Action callbackAfter; // 0x18
	internal int qId; // 0x20
	internal int bPhase; // 0x24
	internal int bWave; // 0x28
	internal int bTurn; // 0x2C
	internal EventTutorialMaster $this; // 0x30

	// Methods

	// RVA: 0x10A9084 Offset: 0x10A9084 VA: 0x10A9084
	public void .ctor() { }

	// RVA: 0x10AABF0 Offset: 0x10AABF0 VA: 0x10AABF0
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42D54 Offset: 0xC42D54 VA: 0xC42D54
private sealed class EventTutorialMaster.<checkTutorial>c__AnonStorey1 // TypeDefIndex: 7003
{
	// Fields
	internal List<int> checkEventIds; // 0x10
	internal EventTutorialMaster.OpenType openKind; // 0x18
	internal Action callbackAfter; // 0x20
	internal int qId; // 0x28
	internal int bPhase; // 0x2C
	internal int bWave; // 0x30
	internal int bTurn; // 0x34
	internal EventTutorialMaster $this; // 0x38

	// Methods

	// RVA: 0x10A942C Offset: 0x10A942C VA: 0x10A942C
	public void .ctor() { }

	// RVA: 0x10AAC6C Offset: 0x10AAC6C VA: 0x10AAC6C
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42D64 Offset: 0xC42D64 VA: 0xC42D64
private sealed class EventTutorialMaster.<showTutorialWithoutCheck>c__AnonStorey2 // TypeDefIndex: 7004
{
	// Fields
	internal int eventId; // 0x10
	internal EventTutorialMaster.OpenType openKind; // 0x14
	internal Action callbackAfter; // 0x18
	internal int qId; // 0x20
	internal int bPhase; // 0x24
	internal int bWave; // 0x28
	internal int bTurn; // 0x2C
	internal EventTutorialMaster $this; // 0x30

	// Methods

	// RVA: 0x10AA35C Offset: 0x10AA35C VA: 0x10AA35C
	public void .ctor() { }

	// RVA: 0x10AACEC Offset: 0x10AACEC VA: 0x10AACEC
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42D74 Offset: 0xC42D74 VA: 0xC42D74
private sealed class EventTutorialMaster.<tutorialChainWithoutCheck>c__AnonStorey3 // TypeDefIndex: 7005
{
	// Fields
	internal List<EventTutorialEntity> tutoList; // 0x10
	internal int index; // 0x18
	internal Action callback; // 0x20
	internal EventTutorialMaster $this; // 0x28

	// Methods

	// RVA: 0x10AA400 Offset: 0x10AA400 VA: 0x10AA400
	public void .ctor() { }

	// RVA: 0x10AAD68 Offset: 0x10AAD68 VA: 0x10AAD68
	internal void <>m__0() { }
}

// Namespace: 
public class EventUiEntity : DataEntityBase<string> // TypeDefIndex: 7006
{
	// Fields
	public int id; // 0x10
	public int priority; // 0x14
	public int eventId; // 0x18
	public int warId; // 0x1C
	public int mapId; // 0x20
	public int[] spotIds; // 0x28
	public int objectType; // 0x30
	public int objectId; // 0x34
	public int eventUiValueId; // 0x38
	public int x; // 0x3C
	public int y; // 0x40
	public int dispAreaFlag; // 0x44
	public static readonly float EVNET_UI_POSITION_MAGNIFICATION; // 0x0

	// Methods

	// RVA: 0x10AADB0 Offset: 0x10AADB0 VA: 0x10AADB0
	public void .ctor() { }

	// RVA: 0x10AAE24 Offset: 0x10AAE24 VA: 0x10AAE24 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x10AAE94 Offset: 0x10AAE94 VA: 0x10AAE94
	public static string CreatePK(int id, int priority) { }

	// RVA: 0x10AAEA4 Offset: 0x10AAEA4 VA: 0x10AAEA4
	public EventUiEntity.ObjectType GetObjectType() { }

	// RVA: 0x10AAEAC Offset: 0x10AAEAC VA: 0x10AAEAC
	public int GetEventId() { }

	// RVA: 0x10AAEB4 Offset: 0x10AAEB4 VA: 0x10AAEB4
	public int GetWarId() { }

	// RVA: 0x10AAEBC Offset: 0x10AAEBC VA: 0x10AAEBC
	public int GetMapId() { }

	// RVA: 0x10AAEC4 Offset: 0x10AAEC4 VA: 0x10AAEC4
	public bool IsDispArea(EventUiEntity.DispAreaType type) { }

	// RVA: 0x10AAED4 Offset: 0x10AAED4 VA: 0x10AAED4
	public bool IsDispEventUIForSpot(int spotId) { }

	// RVA: 0x10AAF78 Offset: 0x10AAF78 VA: 0x10AAF78
	private static void .cctor() { }
}

// Namespace: 
public enum EventUiEntity.ObjectType // TypeDefIndex: 7007
{
	// Fields
	public int value__; // 0x0
	public const EventUiEntity.ObjectType NONE = 1;
	public const EventUiEntity.ObjectType IMAGE = 2;
	public const EventUiEntity.ObjectType GAMEOBJECT = 3;
}

// Namespace: 
public enum EventUiEntity.DispAreaType // TypeDefIndex: 7008
{
	// Fields
	public int value__; // 0x0
	public const EventUiEntity.DispAreaType MAP = 1;
	public const EventUiEntity.DispAreaType EVENT_REWARD = 2;
	public const EventUiEntity.DispAreaType CALDEA_GATE = 4;
	public const EventUiEntity.DispAreaType SPOT = 8;
}

// Namespace: 
public class EventUiMaster : DataMasterBase<EventUiMaster, EventUiEntity, string> // TypeDefIndex: 7009
{
	// Methods

	// RVA: 0x10AAFD0 Offset: 0x10AAFD0 VA: 0x10AAFD0
	public void .ctor() { }

	// RVA: 0x10AB024 Offset: 0x10AB024 VA: 0x10AB024
	public EventUiEntity GetEntity(int id, int priority) { }

	// RVA: 0x10AB0B8 Offset: 0x10AB0B8 VA: 0x10AB0B8
	public bool TryGetEntity(out EventUiEntity entity, int id, int priority) { }

	// RVA: 0x10AB15C Offset: 0x10AB15C VA: 0x10AB15C
	public EventUiEntity[] getList(int event_id, int war_id, int map_id) { }

	// RVA: 0x10AB2F8 Offset: 0x10AB2F8 VA: 0x10AB2F8
	public EventUiEntity[] getDispList(int event_id, int war_id, int map_id) { }

	// RVA: 0x10ABA78 Offset: 0x10ABA78 VA: 0x10ABA78
	public bool IsDispEventUIForSpot(int event_id, int war_id, int map_id, int spotId) { }

	// RVA: 0x10ABB18 Offset: 0x10ABB18 VA: 0x10ABB18
	public EventUiEntity getEntity(int eventId, int priority = 1) { }
}

// Namespace: 
public class EventUiReleaseEntity : DataEntityBase<string> // TypeDefIndex: 7010
{
	// Fields
	public int eventUiId; // 0x10
	public int priority; // 0x14
	public int idx; // 0x18
	public int condGroup; // 0x1C
	public int condType; // 0x20
	public int condTargetId; // 0x24
	public int condNum; // 0x28

	// Methods

	// RVA: 0x10ABC2C Offset: 0x10ABC2C VA: 0x10ABC2C
	public void .ctor() { }

	// RVA: 0x10ABC8C Offset: 0x10ABC8C VA: 0x10ABC8C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x10ABCA0 Offset: 0x10ABCA0 VA: 0x10ABCA0
	public static string CreatePK(int eventUiId, int priority, int idx) { }
}

// Namespace: 
public class EventUiReleaseMaster : DataMasterBase<EventUiReleaseMaster, EventUiReleaseEntity, string> // TypeDefIndex: 7011
{
	// Methods

	// RVA: 0x10ABCB4 Offset: 0x10ABCB4 VA: 0x10ABCB4
	public void .ctor() { }

	// RVA: 0x10ABD08 Offset: 0x10ABD08 VA: 0x10ABD08
	public EventUiReleaseEntity GetEntity(int eventUiId, int priority, int idx) { }

	// RVA: 0x10ABD8C Offset: 0x10ABD8C VA: 0x10ABD8C
	public bool TryGetEntity(out EventUiReleaseEntity entity, int eventUiId, int priority, int idx) { }

	// RVA: 0x10AB6A8 Offset: 0x10AB6A8 VA: 0x10AB6A8
	public bool IsOpen(EventUiEntity eventUIEntity) { }
}

// Namespace: 
public class EventUiValueEntity : DataEntityBase<string> // TypeDefIndex: 7012
{
	// Fields
	public int id; // 0x10
	public int type; // 0x14
	public string value; // 0x18
	public int priority; // 0x20

	// Methods

	// RVA: 0x10ABE18 Offset: 0x10ABE18 VA: 0x10ABE18
	public void .ctor() { }

	// RVA: 0x10ABEA4 Offset: 0x10ABEA4 VA: 0x10ABEA4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x10ABEB8 Offset: 0x10ABEB8 VA: 0x10ABEB8
	public static string CreatePK(int id, int type, string value) { }
}

// Namespace: 
public enum EventUiValueEntity.ValueType // TypeDefIndex: 7013
{
	// Fields
	public int value__; // 0x0
	public const EventUiValueEntity.ValueType NONE = 0;
	public const EventUiValueEntity.ValueType ITEM = 1;
	public const EventUiValueEntity.ValueType EVENT_POINT = 2;
	public const EventUiValueEntity.ValueType EVENT_TOWER = 3;
	public const EventUiValueEntity.ValueType VALUE_LONG = 4;
	public const EventUiValueEntity.ValueType BATTLE_LINE = 5;
	public const EventUiValueEntity.ValueType ASSIST = 6;
}

// Namespace: 
public class EventUiValueMaster : DataMasterBase<EventUiValueMaster, EventUiValueEntity, string> // TypeDefIndex: 7014
{
	// Methods

	// RVA: 0x10ABEC8 Offset: 0x10ABEC8 VA: 0x10ABEC8
	public void .ctor() { }

	// RVA: 0x10ABF1C Offset: 0x10ABF1C VA: 0x10ABF1C
	public EventUiValueEntity[] getList(int objectId) { }
}

// Namespace: 
public class EventVoicePlayEntity : DataEntityBase<string> // TypeDefIndex: 7015
{
	// Fields
	public int eventId; // 0x10
	public int slot; // 0x14
	public int idx; // 0x18
	public ObscuredInt guideImageId; // 0x1C
	public int condType; // 0x2C
	public int condValue; // 0x30
	public ObscuredString[] voiceIds; // 0x38
	public ObscuredString[] confirmVoiceIds; // 0x40
	public long startedAt; // 0x48
	public long endedAt; // 0x50

	// Methods

	// RVA: 0x10AE76C Offset: 0x10AE76C VA: 0x10AE76C
	public void .ctor() { }

	// RVA: 0x10AE7BC Offset: 0x10AE7BC VA: 0x10AE7BC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x10AE860 Offset: 0x10AE860 VA: 0x10AE860
	public static string CreatePK(int eventId, int slot, int idx, int guideImageId) { }

	// RVA: 0x10AE878 Offset: 0x10AE878 VA: 0x10AE878
	public SvtVoiceInfo[] GetVoiceJson(int svtId, int limitCnt, SvtVoiceType.Type type) { }

	// RVA: 0x10AE944 Offset: 0x10AE944 VA: 0x10AE944
	public List<ServantVoiceData[]> GetVoiceData(int svtId, int limitCnt, SvtVoiceType.Type type) { }

	// RVA: 0x10AEA54 Offset: 0x10AEA54 VA: 0x10AEA54
	public ServantVoiceData[] GetEventRewardVoiceList(int svtId, int limitCnt, SvtVoiceType.Type type) { }

	// RVA: 0x10AECD8 Offset: 0x10AECD8 VA: 0x10AECD8
	public List<ServantVoiceData[]> GetEventRewardVoiceRandList(int svtId, int limitCnt) { }

	// RVA: 0x10AEF44 Offset: 0x10AEF44 VA: 0x10AEF44
	public List<ServantVoiceData[]> GetEventShopWelcomeVoiceList(int svtId, int limitCnt) { }

	// RVA: 0x10AF1B0 Offset: 0x10AF1B0 VA: 0x10AF1B0
	public List<ServantVoiceData[]> GetConfirmVoiceData(int svtId, int limitCnt) { }
}

// Namespace: 
public class EventVoicePlayMaster : DataMasterBase<EventVoicePlayMaster, EventVoicePlayEntity, string> // TypeDefIndex: 7016
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55AA4 Offset: 0xC55AA4 VA: 0xC55AA4
	private static Comparison<EventVoicePlayEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x10AF3E8 Offset: 0x10AF3E8 VA: 0x10AF3E8
	public void .ctor() { }

	// RVA: 0x10AF43C Offset: 0x10AF43C VA: 0x10AF43C
	public EventVoicePlayEntity GetEntity(int eventId, int slot, int idx, int guideImageId) { }

	// RVA: 0x10AF4C8 Offset: 0x10AF4C8 VA: 0x10AF4C8
	public bool TryGetEntity(out EventVoicePlayEntity entity, int eventId, int slot, int idx, int guideImageId) { }

	// RVA: 0x10AF564 Offset: 0x10AF564 VA: 0x10AF564
	public string GetVoiceAssetName(int svtId) { }

	// RVA: 0x10AF56C Offset: 0x10AF56C VA: 0x10AF56C
	private static string getVoiceAssetName(int svtId) { }

	// RVA: 0x10AF60C Offset: 0x10AF60C VA: 0x10AF60C
	public EventVoicePlayEntity[] GetTargetEventIdEntityList(int eventId) { }

	// RVA: 0x10AF790 Offset: 0x10AF790 VA: 0x10AF790
	public EventVoicePlayEntity GetValidEventVoicePlayEntity(int eventId, int slot, int svtId) { }

	// RVA: 0x10AFB44 Offset: 0x10AFB44 VA: 0x10AFB44
	public List<ServantVoiceData[]> GetEventRewardWelcomeVoiceData(out EventVoicePlayEntity eventVoicePlayEntity, int eventId, int slot, int svtId, int svtLimitCnt) { }

	// RVA: 0x10AFBA4 Offset: 0x10AFBA4 VA: 0x10AFBA4
	public List<ServantVoiceData[]> GetShopWelcomeVoiceData(out EventVoicePlayEntity eventVoicePlayEntity, int eventId, int slot, int svtId, int svtLimitCnt) { }

	// RVA: 0x10AFC04 Offset: 0x10AFC04 VA: 0x10AFC04
	public List<ServantVoiceData[]> GetConfirmVoiceData(int eventId, int slot, int svtId, int svtLimitCnt) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA4B8 Offset: 0xCCA4B8 VA: 0xCCA4B8
	// RVA: 0x10AFC40 Offset: 0x10AFC40 VA: 0x10AFC40
	private static int <GetValidEventVoicePlayEntity>m__0(EventVoicePlayEntity a, EventVoicePlayEntity b) { }
}

// Namespace: 
public class FieldMotionEntity : DataEntityBase<int> // TypeDefIndex: 7017
{
	// Fields
	public int id; // 0x10
	public int flag; // 0x14

	// Methods

	// RVA: 0x1366424 Offset: 0x1366424 VA: 0x1366424
	public void .ctor() { }

	// RVA: 0x1366474 Offset: 0x1366474 VA: 0x1366474 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x136647C Offset: 0x136647C VA: 0x136647C
	private bool HasFlag(FieldMotionEntity.Flag targetFlag) { }

	// RVA: 0x136648C Offset: 0x136648C VA: 0x136648C
	public bool IsNotStartBattleSkip() { }
}

// Namespace: 
public enum FieldMotionEntity.Flag // TypeDefIndex: 7018
{
	// Fields
	public int value__; // 0x0
	public const FieldMotionEntity.Flag NOT_START_BATTLE_SKIP = 1;
}

// Namespace: 
public class FieldMotionMaster : DataMasterBase<FieldMotionMaster, FieldMotionEntity, int> // TypeDefIndex: 7019
{
	// Methods

	// RVA: 0x13679A8 Offset: 0x13679A8 VA: 0x13679A8
	public void .ctor() { }
}

// Namespace: 
public class FriendshipEntity : DataEntityBase<string> // TypeDefIndex: 7020
{
	// Fields
	public int id; // 0x10
	public int rank; // 0x14
	public int friendship; // 0x18
	public int qp; // 0x1C
	public int[] itemNums; // 0x20
	public int[] itemIds; // 0x28

	// Methods

	// RVA: 0x19294C8 Offset: 0x19294C8 VA: 0x19294C8
	public void .ctor() { }

	// RVA: 0x1929518 Offset: 0x1929518 VA: 0x1929518 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1929528 Offset: 0x1929528 VA: 0x1929528
	public static string CreatePK(int id, int rank) { }
}

// Namespace: 
public class FriendshipMaster : DataMasterBase<FriendshipMaster, FriendshipEntity, string> // TypeDefIndex: 7021
{
	// Methods

	// RVA: 0x192CE90 Offset: 0x192CE90 VA: 0x192CE90
	public void .ctor() { }

	// RVA: 0x192CEE4 Offset: 0x192CEE4 VA: 0x192CEE4
	public FriendshipEntity GetEntity(int id, int rank) { }

	// RVA: 0x192CF58 Offset: 0x192CF58 VA: 0x192CF58
	public bool TryGetEntity(out FriendshipEntity entity, int id, int rank) { }

	// RVA: 0x192B760 Offset: 0x192B760 VA: 0x192B760
	public bool GetFriendshipRank(int friendshipId, int friendship, int maxRank, out int rank, out int max, out int late, out float fraction) { }

	// RVA: 0x192CFDC Offset: 0x192CFDC VA: 0x192CFDC
	public int getRankMax(int id) { }

	// RVA: 0x192C508 Offset: 0x192C508 VA: 0x192C508
	public int getFriendShipRank(int friendshipId, int friendship, int start_friendshipRank) { }
}

// Namespace: 
public class FriendshipQuestDialogInfoEntity : DataEntityBase<string> // TypeDefIndex: 7022
{
	// Fields
	public ObscuredInt svtId; // 0x10
	public int questId; // 0x20

	// Methods

	// RVA: 0x192D250 Offset: 0x192D250 VA: 0x192D250
	public void .ctor() { }

	// RVA: 0x192D2A0 Offset: 0x192D2A0 VA: 0x192D2A0 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x192D328 Offset: 0x192D328 VA: 0x192D328
	public static string CreatePK(int svtId, int questId) { }
}

// Namespace: 
public class FriendshipQuestDialogInfoMaster : DataMasterBase<FriendshipQuestDialogInfoMaster, FriendshipQuestDialogInfoEntity, string> // TypeDefIndex: 7023
{
	// Methods

	// RVA: 0x192D338 Offset: 0x192D338 VA: 0x192D338
	public void .ctor() { }

	// RVA: 0x192D38C Offset: 0x192D38C VA: 0x192D38C
	public FriendshipQuestDialogInfoEntity GetEntity(int svtId, int questId) { }

	// RVA: 0x192D400 Offset: 0x192D400 VA: 0x192D400
	public bool TryGetEntity(out FriendshipQuestDialogInfoEntity entity, int svtId, int questId) { }

	// RVA: 0x192D484 Offset: 0x192D484 VA: 0x192D484
	public bool GetLimitCountUnsealInfo(out int svtId, out int questId) { }
}

// Namespace: 
public class FunctionCategoryEntity : DataEntityBase<int> // TypeDefIndex: 7024
{
	// Fields
	public int id; // 0x10
	public int groupType; // 0x14
	public string name; // 0x18
	public int dispNo; // 0x20
	public int flag; // 0x24

	// Methods

	// RVA: 0x192EAC8 Offset: 0x192EAC8 VA: 0x192EAC8
	public void .ctor() { }

	// RVA: 0x192EB18 Offset: 0x192EB18 VA: 0x192EB18 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x192EB20 Offset: 0x192EB20 VA: 0x192EB20
	public FunctionCategoryEntity.GroupType GetGroupType() { }

	// RVA: 0x192EB28 Offset: 0x192EB28 VA: 0x192EB28
	public bool HasFlag(FunctionCategoryEntity.Flag typeFlag) { }
}

// Namespace: 
public enum FunctionCategoryEntity.GroupType // TypeDefIndex: 7025
{
	// Fields
	public int value__; // 0x0
	public const FunctionCategoryEntity.GroupType NONE = 0;
	public const FunctionCategoryEntity.GroupType ATTACK = 1;
	public const FunctionCategoryEntity.GroupType DEFENCE = 2;
	public const FunctionCategoryEntity.GroupType STATUS_EFFECT = 3;
	public const FunctionCategoryEntity.GroupType OTHER = 4;
	public const FunctionCategoryEntity.GroupType ATTACK_DEBUFF = 5;
	public const FunctionCategoryEntity.GroupType DEFENCE_DEBUFF = 6;
	public const FunctionCategoryEntity.GroupType STATUS_EFFECT_DEBUFF = 7;
}

// Namespace: 
public enum FunctionCategoryEntity.FuncCategoryFlag // TypeDefIndex: 7026
{
	// Fields
	public int value__; // 0x0
	public const FunctionCategoryEntity.FuncCategoryFlag SVT_EQUIP_FILTER = 0;
	public const FunctionCategoryEntity.FuncCategoryFlag COMMAND_CODE_FILTER = 1;
}

// Namespace: 
public enum FunctionCategoryEntity.Flag // TypeDefIndex: 7027
{
	// Fields
	public int value__; // 0x0
	public const FunctionCategoryEntity.Flag SVT_EQUIP_FILTER = 1;
	public const FunctionCategoryEntity.Flag COMMAND_CODE_FILTER = 2;
}

// Namespace: 
public class FunctionCategoryMaster : DataMasterBase<FunctionCategoryMaster, FunctionCategoryEntity, int> // TypeDefIndex: 7028
{
	// Methods

	// RVA: 0x192EB38 Offset: 0x192EB38 VA: 0x192EB38
	public void .ctor() { }

	// RVA: 0x192EB8C Offset: 0x192EB8C VA: 0x192EB8C
	public FunctionCategoryEntity[] GetEntitiesByGroupType(FunctionCategoryEntity.GroupType groupType, FunctionCategoryEntity.Flag flag) { }

	// RVA: 0x192ED0C Offset: 0x192ED0C VA: 0x192ED0C
	public FunctionCategoryEntity[] GetEntitiesByFlag(FunctionCategoryEntity.Flag flag) { }
}

// Namespace: 
public class FunctionEntity : DataEntityBase<int> // TypeDefIndex: 7029
{
	// Fields
	public int id; // 0x10
	public int cond; // 0x14
	public int funcType; // 0x18
	public int targetType; // 0x1C
	public int[] vals; // 0x20
	public int[] tvals; // 0x28
	public int[] effectList; // 0x30
	public string popupText; // 0x38
	public int popupIconId; // 0x40
	public int popupTextColor; // 0x44
	public int applyTarget; // 0x48
	public int categoryId; // 0x4C
	public int[] questTvals; // 0x50

	// Methods

	// RVA: 0x192EE7C Offset: 0x192EE7C VA: 0x192EE7C
	public void .ctor() { }

	// RVA: 0x192EECC Offset: 0x192EECC VA: 0x192EECC Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x192EED4 Offset: 0x192EED4 VA: 0x192EED4
	public bool isTargetPlayer() { }

	// RVA: 0x192EEE8 Offset: 0x192EEE8 VA: 0x192EEE8
	public bool isTargetEnemy() { }

	// RVA: 0x192EEFC Offset: 0x192EEFC VA: 0x192EEFC
	public int[] getValues() { }

	// RVA: 0x192EF04 Offset: 0x192EF04 VA: 0x192EF04
	public int[] getTargetValues() { }

	// RVA: 0x192EF0C Offset: 0x192EF0C VA: 0x192EF0C
	public int[] getEffectList() { }

	// RVA: 0x192EF68 Offset: 0x192EF68 VA: 0x192EF68
	public int[] getQuestTargetValues() { }
}

// Namespace: 
public class FunctionGroupEntity : DataEntityBase<string> // TypeDefIndex: 7030
{
	// Fields
	public int funcId; // 0x10
	public int eventId; // 0x14
	public int baseFuncId; // 0x18
	public string name; // 0x20
	public string nameTotal; // 0x28
	public int iconId; // 0x30
	public int priority; // 0x34
	public bool isDispValue; // 0x38

	// Methods

	// RVA: 0x192EFC4 Offset: 0x192EFC4 VA: 0x192EFC4
	public void .ctor() { }

	// RVA: 0x192F014 Offset: 0x192F014 VA: 0x192F014 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x192F024 Offset: 0x192F024 VA: 0x192F024
	public static string CreatePK(int funcId, int eventId) { }
}

// Namespace: 
public class FunctionGroupMaster : DataMasterBase<FunctionGroupMaster, FunctionGroupEntity, string> // TypeDefIndex: 7031
{
	// Methods

	// RVA: 0x192F034 Offset: 0x192F034 VA: 0x192F034
	public void .ctor() { }

	// RVA: 0x192F088 Offset: 0x192F088 VA: 0x192F088
	public FunctionGroupEntity GetEntity(int funcId, int eventId) { }

	// RVA: 0x192F0FC Offset: 0x192F0FC VA: 0x192F0FC
	public bool TryGetEntity(out FunctionGroupEntity entity, int funcId, int eventId) { }

	// RVA: 0x192F180 Offset: 0x192F180 VA: 0x192F180
	public FunctionGroupEntity getEntityFromId(int funcId, int eventId) { }
}

// Namespace: 
public class FunctionMaster : DataMasterBase<FunctionMaster, FunctionEntity, int> // TypeDefIndex: 7032
{
	// Methods

	// RVA: 0x192F2D4 Offset: 0x192F2D4 VA: 0x192F2D4
	public void .ctor() { }

	// RVA: 0x192F328 Offset: 0x192F328 VA: 0x192F328
	public List<FunctionEntity> GetFunctionEntitiesByIds(int[] funcIds) { }
