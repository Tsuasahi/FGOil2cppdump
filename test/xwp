	// RVA: 0x210D604 Offset: 0x210D604 VA: 0x210D604
	public static float EaseOutElasticD(float start, float end, float value) { }

	// RVA: 0x210D708 Offset: 0x210D708 VA: 0x210D708
	public static float EaseInOutElasticD(float start, float end, float value) { }

	// RVA: 0x210D8A0 Offset: 0x210D8A0 VA: 0x210D8A0
	public static float SpringD(float start, float end, float value) { }

	// RVA: 0x210DA54 Offset: 0x210DA54 VA: 0x210DA54
	public static float CustomCurve(float start, float end, float value) { }

	// RVA: 0x210DB10 Offset: 0x210DB10 VA: 0x210DB10
	public static EasingFunction.Function GetEasingFunction(EasingFunction.Ease easingFunction) { }

	// RVA: 0x210E6E0 Offset: 0x210E6E0 VA: 0x210E6E0
	public static EasingFunction.Function GetEasingFunctionDerivative(EasingFunction.Ease easingFunction) { }
}

// Namespace: 
public enum EasingFunction.Ease // TypeDefIndex: 12411
{
	// Fields
	public int value__; // 0x0
	public const EasingFunction.Ease EaseInQuad = 0;
	public const EasingFunction.Ease EaseOutQuad = 1;
	public const EasingFunction.Ease EaseInOutQuad = 2;
	public const EasingFunction.Ease EaseInCubic = 3;
	public const EasingFunction.Ease EaseOutCubic = 4;
	public const EasingFunction.Ease EaseInOutCubic = 5;
	public const EasingFunction.Ease EaseInQuart = 6;
	public const EasingFunction.Ease EaseOutQuart = 7;
	public const EasingFunction.Ease EaseInOutQuart = 8;
	public const EasingFunction.Ease EaseInQuint = 9;
	public const EasingFunction.Ease EaseOutQuint = 10;
	public const EasingFunction.Ease EaseInOutQuint = 11;
	public const EasingFunction.Ease EaseInSine = 12;
	public const EasingFunction.Ease EaseOutSine = 13;
	public const EasingFunction.Ease EaseInOutSine = 14;
	public const EasingFunction.Ease EaseInExpo = 15;
	public const EasingFunction.Ease EaseOutExpo = 16;
	public const EasingFunction.Ease EaseInOutExpo = 17;
	public const EasingFunction.Ease EaseInCirc = 18;
	public const EasingFunction.Ease EaseOutCirc = 19;
	public const EasingFunction.Ease EaseInOutCirc = 20;
	public const EasingFunction.Ease Linear = 21;
	public const EasingFunction.Ease Spring = 22;
	public const EasingFunction.Ease EaseInBounce = 23;
	public const EasingFunction.Ease EaseOutBounce = 24;
	public const EasingFunction.Ease EaseInOutBounce = 25;
	public const EasingFunction.Ease EaseInBack = 26;
	public const EasingFunction.Ease EaseOutBack = 27;
	public const EasingFunction.Ease EaseInOutBack = 28;
	public const EasingFunction.Ease EaseInElastic = 29;
	public const EasingFunction.Ease EaseOutElastic = 30;
	public const EasingFunction.Ease EaseInOutElastic = 31;
	public const EasingFunction.Ease CustomCurve = 32;
}

// Namespace: 
public sealed class EasingFunction.Function : MulticastDelegate // TypeDefIndex: 12412
{
	// Methods

	// RVA: 0x210E6D0 Offset: 0x210E6D0 VA: 0x210E6D0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x210F248 Offset: 0x210F248 VA: 0x210F248 Slot: 11
	public virtual float Invoke(float s, float e, float v) { }

	// RVA: 0x210F4C8 Offset: 0x210F4C8 VA: 0x210F4C8 Slot: 12
	public virtual IAsyncResult BeginInvoke(float s, float e, float v, AsyncCallback callback, object object) { }

	// RVA: 0x210F580 Offset: 0x210F580 VA: 0x210F580 Slot: 13
	public virtual float EndInvoke(IAsyncResult result) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D4A0 Offset: 0xC9D4A0 VA: 0xC9D4A0
[TooltipAttribute] // RVA: 0xC9D4A0 Offset: 0xC9D4A0 VA: 0xC9D4A0
public class EnableAnimation : BaseAnimationAction // TypeDefIndex: 12413
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD02A50 Offset: 0xD02A50 VA: 0xD02A50
	[CheckForComponentAttribute] // RVA: 0xD02A50 Offset: 0xD02A50 VA: 0xD02A50
	[TooltipAttribute] // RVA: 0xD02A50 Offset: 0xD02A50 VA: 0xD02A50
	public FsmOwnerDefault gameObject; // 0x60
	[RequiredFieldAttribute] // RVA: 0xD02AE8 Offset: 0xD02AE8 VA: 0xD02AE8
	[UIHintAttribute] // RVA: 0xD02AE8 Offset: 0xD02AE8 VA: 0xD02AE8
	[TooltipAttribute] // RVA: 0xD02AE8 Offset: 0xD02AE8 VA: 0xD02AE8
	public FsmString animName; // 0x68
	[RequiredFieldAttribute] // RVA: 0xD02B48 Offset: 0xD02B48 VA: 0xD02B48
	[TooltipAttribute] // RVA: 0xD02B48 Offset: 0xD02B48 VA: 0xD02B48
	public FsmBool enable; // 0x70
	[TooltipAttribute] // RVA: 0xD02B94 Offset: 0xD02B94 VA: 0xD02B94
	public FsmBool resetOnExit; // 0x78
	private AnimationState anim; // 0x80

	// Methods

	// RVA: 0x1869454 Offset: 0x1869454 VA: 0x1869454
	public void .ctor() { }

	// RVA: 0x186945C Offset: 0x186945C VA: 0x186945C Slot: 28
	public override void Reset() { }

	// RVA: 0x186949C Offset: 0x186949C VA: 0x186949C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x18694FC Offset: 0x18694FC VA: 0x18694FC
	private void DoEnableAnimation(GameObject go) { }

	// RVA: 0x1869618 Offset: 0x1869618 VA: 0x1869618 Slot: 37
	public override void OnExit() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D4F0 Offset: 0xC9D4F0 VA: 0xC9D4F0
[TooltipAttribute] // RVA: 0xC9D4F0 Offset: 0xC9D4F0 VA: 0xC9D4F0
public class EnableBehaviour : FsmStateAction // TypeDefIndex: 12414
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD02BCC Offset: 0xD02BCC VA: 0xD02BCC
	[TooltipAttribute] // RVA: 0xD02BCC Offset: 0xD02BCC VA: 0xD02BCC
	public FsmOwnerDefault gameObject; // 0x50
	[UIHintAttribute] // RVA: 0xD02C18 Offset: 0xD02C18 VA: 0xD02C18
	[TooltipAttribute] // RVA: 0xD02C18 Offset: 0xD02C18 VA: 0xD02C18
	public FsmString behaviour; // 0x58
	[TooltipAttribute] // RVA: 0xD02C68 Offset: 0xD02C68 VA: 0xD02C68
	public Component component; // 0x60
	[RequiredFieldAttribute] // RVA: 0xD02CA0 Offset: 0xD02CA0 VA: 0xD02CA0
	[TooltipAttribute] // RVA: 0xD02CA0 Offset: 0xD02CA0 VA: 0xD02CA0
	public FsmBool enable; // 0x68
	public FsmBool resetOnExit; // 0x70
	private Behaviour componentTarget; // 0x78

	// Methods

	// RVA: 0x18696B4 Offset: 0x18696B4 VA: 0x18696B4
	public void .ctor() { }

	// RVA: 0x18696BC Offset: 0x18696BC VA: 0x18696BC Slot: 28
	public override void Reset() { }

	// RVA: 0x1869700 Offset: 0x1869700 VA: 0x1869700 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1869760 Offset: 0x1869760 VA: 0x1869760
	private void DoEnableBehaviour(GameObject go) { }

	// RVA: 0x1869A20 Offset: 0x1869A20 VA: 0x1869A20 Slot: 37
	public override void OnExit() { }

	// RVA: 0x1869B04 Offset: 0x1869B04 VA: 0x1869B04 Slot: 61
	public override string ErrorCheck() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D540 Offset: 0xC9D540 VA: 0xC9D540
[TooltipAttribute] // RVA: 0xC9D540 Offset: 0xC9D540 VA: 0xC9D540
public class EnableFog : FsmStateAction // TypeDefIndex: 12415
{
	// Fields
	[TooltipAttribute] // RVA: 0xD02CEC Offset: 0xD02CEC VA: 0xD02CEC
	public FsmBool enableFog; // 0x50
	[TooltipAttribute] // RVA: 0xD02D24 Offset: 0xD02D24 VA: 0xD02D24
	public bool everyFrame; // 0x58

	// Methods

	// RVA: 0x186A1F4 Offset: 0x186A1F4 VA: 0x186A1F4
	public void .ctor() { }

	// RVA: 0x186A1FC Offset: 0x186A1FC VA: 0x186A1FC Slot: 28
	public override void Reset() { }

	// RVA: 0x186A22C Offset: 0x186A22C VA: 0x186A22C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x186A28C Offset: 0x186A28C VA: 0x186A28C Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D590 Offset: 0xC9D590 VA: 0xC9D590
[ActionTarget] // RVA: 0xC9D590 Offset: 0xC9D590 VA: 0xC9D590
[TooltipAttribute] // RVA: 0xC9D590 Offset: 0xC9D590 VA: 0xC9D590
public class EnableFSM : FsmStateAction // TypeDefIndex: 12416
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD02D5C Offset: 0xD02D5C VA: 0xD02D5C
	[TooltipAttribute] // RVA: 0xD02D5C Offset: 0xD02D5C VA: 0xD02D5C
	public FsmOwnerDefault gameObject; // 0x50
	[UIHintAttribute] // RVA: 0xD02DA8 Offset: 0xD02DA8 VA: 0xD02DA8
	[TooltipAttribute] // RVA: 0xD02DA8 Offset: 0xD02DA8 VA: 0xD02DA8
	public FsmString fsmName; // 0x58
	[TooltipAttribute] // RVA: 0xD02DF8 Offset: 0xD02DF8 VA: 0xD02DF8
	public FsmBool enable; // 0x60
	[TooltipAttribute] // RVA: 0xD02E30 Offset: 0xD02E30 VA: 0xD02E30
	public FsmBool resetOnExit; // 0x68
	private PlayMakerFSM fsmComponent; // 0x70

	// Methods

	// RVA: 0x1869D4C Offset: 0x1869D4C VA: 0x1869D4C
	public void .ctor() { }

	// RVA: 0x1869D54 Offset: 0x1869D54 VA: 0x1869D54 Slot: 28
	public override void Reset() { }

	// RVA: 0x1869DF0 Offset: 0x1869DF0 VA: 0x1869DF0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1869E18 Offset: 0x1869E18 VA: 0x1869E18
	private void DoEnableFSM() { }

	// RVA: 0x186A110 Offset: 0x186A110 VA: 0x186A110 Slot: 37
	public override void OnExit() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D64C Offset: 0xC9D64C VA: 0xC9D64C
[TooltipAttribute] // RVA: 0xC9D64C Offset: 0xC9D64C VA: 0xC9D64C
public class EnableGUI : FsmStateAction // TypeDefIndex: 12417
{
	// Fields
	[TooltipAttribute] // RVA: 0xD02E68 Offset: 0xD02E68 VA: 0xD02E68
	public FsmBool enableGUI; // 0x50

	// Methods

	// RVA: 0x186A2C8 Offset: 0x186A2C8 VA: 0x186A2C8
	public void .ctor() { }

	// RVA: 0x186A2D0 Offset: 0x186A2D0 VA: 0x186A2D0 Slot: 28
	public override void Reset() { }

	// RVA: 0x186A2FC Offset: 0x186A2FC VA: 0x186A2FC Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D69C Offset: 0xC9D69C VA: 0xC9D69C
[TooltipAttribute] // RVA: 0xC9D69C Offset: 0xC9D69C VA: 0xC9D69C
public class SetEnumValue : FsmStateAction // TypeDefIndex: 12418
{
	// Fields
	[UIHintAttribute] // RVA: 0xD02EA0 Offset: 0xD02EA0 VA: 0xD02EA0
	[TooltipAttribute] // RVA: 0xD02EA0 Offset: 0xD02EA0 VA: 0xD02EA0
	public FsmEnum enumVariable; // 0x50
	[MatchFieldTypeAttribute] // RVA: 0xD02EF0 Offset: 0xD02EF0 VA: 0xD02EF0
	[TooltipAttribute] // RVA: 0xD02EF0 Offset: 0xD02EF0 VA: 0xD02EF0
	public FsmEnum enumValue; // 0x58
	[TooltipAttribute] // RVA: 0xD02F50 Offset: 0xD02F50 VA: 0xD02F50
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x211527C Offset: 0x211527C VA: 0x211527C
	public void .ctor() { }

	// RVA: 0x2115284 Offset: 0x2115284 VA: 0x2115284 Slot: 28
	public override void Reset() { }

	// RVA: 0x2115290 Offset: 0x2115290 VA: 0x2115290 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x211531C Offset: 0x211531C VA: 0x211531C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x21152CC Offset: 0x21152CC VA: 0x21152CC
	private void DoSetEnumValue() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D6EC Offset: 0xC9D6EC VA: 0xC9D6EC
[TooltipAttribute] // RVA: 0xC9D6EC Offset: 0xC9D6EC VA: 0xC9D6EC
public class Explosion : FsmStateAction // TypeDefIndex: 12419
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD02F88 Offset: 0xD02F88 VA: 0xD02F88
	[TooltipAttribute] // RVA: 0xD02F88 Offset: 0xD02F88 VA: 0xD02F88
	public FsmVector3 center; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD02FD4 Offset: 0xD02FD4 VA: 0xD02FD4
	[TooltipAttribute] // RVA: 0xD02FD4 Offset: 0xD02FD4 VA: 0xD02FD4
	public FsmFloat force; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD03020 Offset: 0xD03020 VA: 0xD03020
	[TooltipAttribute] // RVA: 0xD03020 Offset: 0xD03020 VA: 0xD03020
	public FsmFloat radius; // 0x60
	[TooltipAttribute] // RVA: 0xD0306C Offset: 0xD0306C VA: 0xD0306C
	public FsmFloat upwardsModifier; // 0x68
	[TooltipAttribute] // RVA: 0xD030A4 Offset: 0xD030A4 VA: 0xD030A4
	public ForceMode forceMode; // 0x70
	[UIHintAttribute] // RVA: 0xD030DC Offset: 0xD030DC VA: 0xD030DC
	public FsmInt layer; // 0x78
	[UIHintAttribute] // RVA: 0xD030F0 Offset: 0xD030F0 VA: 0xD030F0
	[TooltipAttribute] // RVA: 0xD030F0 Offset: 0xD030F0 VA: 0xD030F0
	public FsmInt[] layerMask; // 0x80
	[TooltipAttribute] // RVA: 0xD03140 Offset: 0xD03140 VA: 0xD03140
	public FsmBool invertMask; // 0x88
	[TooltipAttribute] // RVA: 0xD03178 Offset: 0xD03178 VA: 0xD03178
	public bool everyFrame; // 0x90

	// Methods

	// RVA: 0x186A9B4 Offset: 0x186A9B4 VA: 0x186A9B4
	public void .ctor() { }

	// RVA: 0x186A9BC Offset: 0x186A9BC VA: 0x186A9BC Slot: 28
	public override void Reset() { }

	// RVA: 0x186A9F4 Offset: 0x186A9F4 VA: 0x186A9F4 Slot: 29
	public override void OnPreprocess() { }

	// RVA: 0x186AA2C Offset: 0x186AA2C VA: 0x186AA2C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x186ACDC Offset: 0x186ACDC VA: 0x186ACDC Slot: 33
	public override void OnFixedUpdate() { }

	// RVA: 0x186AA68 Offset: 0x186AA68 VA: 0x186AA68
	private void DoExplosion() { }

	// RVA: 0x186ACE0 Offset: 0x186ACE0 VA: 0x186ACE0
	private bool ShouldApplyForce(GameObject go) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D73C Offset: 0xC9D73C VA: 0xC9D73C
[TooltipAttribute] // RVA: 0xC9D73C Offset: 0xC9D73C VA: 0xC9D73C
public class FindChild : FsmStateAction // TypeDefIndex: 12420
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD031B0 Offset: 0xD031B0 VA: 0xD031B0
	[TooltipAttribute] // RVA: 0xD031B0 Offset: 0xD031B0 VA: 0xD031B0
	public FsmOwnerDefault gameObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD031FC Offset: 0xD031FC VA: 0xD031FC
	[TooltipAttribute] // RVA: 0xD031FC Offset: 0xD031FC VA: 0xD031FC
	public FsmString childName; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD03248 Offset: 0xD03248 VA: 0xD03248
	[UIHintAttribute] // RVA: 0xD03248 Offset: 0xD03248 VA: 0xD03248
	[TooltipAttribute] // RVA: 0xD03248 Offset: 0xD03248 VA: 0xD03248
	public FsmGameObject storeResult; // 0x60

	// Methods

	// RVA: 0x1F78FB0 Offset: 0x1F78FB0 VA: 0x1F78FB0
	public void .ctor() { }

	// RVA: 0x1F78FB8 Offset: 0x1F78FB8 VA: 0x1F78FB8 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F79034 Offset: 0x1F79034 VA: 0x1F79034 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7905C Offset: 0x1F7905C VA: 0x1F7905C
	private void DoFindChild() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D78C Offset: 0xC9D78C VA: 0xC9D78C
[TooltipAttribute] // RVA: 0xC9D78C Offset: 0xC9D78C VA: 0xC9D78C
public class FindClosest : FsmStateAction // TypeDefIndex: 12421
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD032A8 Offset: 0xD032A8 VA: 0xD032A8
	[TooltipAttribute] // RVA: 0xD032A8 Offset: 0xD032A8 VA: 0xD032A8
	public FsmOwnerDefault gameObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD032F4 Offset: 0xD032F4 VA: 0xD032F4
	[UIHintAttribute] // RVA: 0xD032F4 Offset: 0xD032F4 VA: 0xD032F4
	[TooltipAttribute] // RVA: 0xD032F4 Offset: 0xD032F4 VA: 0xD032F4
	public FsmString withTag; // 0x58
	[TooltipAttribute] // RVA: 0xD03354 Offset: 0xD03354 VA: 0xD03354
	public FsmBool ignoreOwner; // 0x60
	[TooltipAttribute] // RVA: 0xD0338C Offset: 0xD0338C VA: 0xD0338C
	public FsmBool mustBeVisible; // 0x68
	[UIHintAttribute] // RVA: 0xD033C4 Offset: 0xD033C4 VA: 0xD033C4
	[TooltipAttribute] // RVA: 0xD033C4 Offset: 0xD033C4 VA: 0xD033C4
	public FsmGameObject storeObject; // 0x70
	[UIHintAttribute] // RVA: 0xD03414 Offset: 0xD03414 VA: 0xD03414
	[TooltipAttribute] // RVA: 0xD03414 Offset: 0xD03414 VA: 0xD03414
	public FsmFloat storeDistance; // 0x78
	[TooltipAttribute] // RVA: 0xD03464 Offset: 0xD03464 VA: 0xD03464
	public bool everyFrame; // 0x80

	// Methods

	// RVA: 0x1F791E4 Offset: 0x1F791E4 VA: 0x1F791E4
	public void .ctor() { }

	// RVA: 0x1F791EC Offset: 0x1F791EC VA: 0x1F791EC Slot: 28
	public override void Reset() { }

	// RVA: 0x1F79270 Offset: 0x1F79270 VA: 0x1F79270 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F797C8 Offset: 0x1F797C8 VA: 0x1F797C8 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1F792AC Offset: 0x1F792AC VA: 0x1F792AC
	private void DoFindClosest() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D7DC Offset: 0xC9D7DC VA: 0xC9D7DC
[TooltipAttribute] // RVA: 0xC9D7DC Offset: 0xC9D7DC VA: 0xC9D7DC
public class FindGameObject : FsmStateAction // TypeDefIndex: 12422
{
	// Fields
	[TooltipAttribute] // RVA: 0xD0349C Offset: 0xD0349C VA: 0xD0349C
	public FsmString objectName; // 0x50
	[UIHintAttribute] // RVA: 0xD034D4 Offset: 0xD034D4 VA: 0xD034D4
	[TooltipAttribute] // RVA: 0xD034D4 Offset: 0xD034D4 VA: 0xD034D4
	public FsmString withTag; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD03524 Offset: 0xD03524 VA: 0xD03524
	[UIHintAttribute] // RVA: 0xD03524 Offset: 0xD03524 VA: 0xD03524
	[TooltipAttribute] // RVA: 0xD03524 Offset: 0xD03524 VA: 0xD03524
	public FsmGameObject store; // 0x60

	// Methods

	// RVA: 0x1F797CC Offset: 0x1F797CC VA: 0x1F797CC
	public void .ctor() { }

	// RVA: 0x1F797D4 Offset: 0x1F797D4 VA: 0x1F797D4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F79864 Offset: 0x1F79864 VA: 0x1F79864 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7988C Offset: 0x1F7988C VA: 0x1F7988C
	private void Find() { }

	// RVA: 0x1F79B0C Offset: 0x1F79B0C VA: 0x1F79B0C Slot: 61
	public override string ErrorCheck() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D82C Offset: 0xC9D82C VA: 0xC9D82C
[NoteAttribute] // RVA: 0xC9D82C Offset: 0xC9D82C VA: 0xC9D82C
[TooltipAttribute] // RVA: 0xC9D82C Offset: 0xC9D82C VA: 0xC9D82C
public class FinishFSM : FsmStateAction // TypeDefIndex: 12423
{
	// Methods

	// RVA: 0x1F79C0C Offset: 0x1F79C0C VA: 0x1F79C0C
	public void .ctor() { }

	// RVA: 0x1F79C14 Offset: 0x1F79C14 VA: 0x1F79C14 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D8A8 Offset: 0xC9D8A8 VA: 0xC9D8A8
[TooltipAttribute] // RVA: 0xC9D8A8 Offset: 0xC9D8A8 VA: 0xC9D8A8
public class Flicker : ComponentAction<Renderer> // TypeDefIndex: 12424
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD03584 Offset: 0xD03584 VA: 0xD03584
	[TooltipAttribute] // RVA: 0xD03584 Offset: 0xD03584 VA: 0xD03584
	public FsmOwnerDefault gameObject; // 0x60
	[HasFloatSliderAttribute] // RVA: 0xD035D0 Offset: 0xD035D0 VA: 0xD035D0
	[TooltipAttribute] // RVA: 0xD035D0 Offset: 0xD035D0 VA: 0xD035D0
	public FsmFloat frequency; // 0x68
	[HasFloatSliderAttribute] // RVA: 0xD03624 Offset: 0xD03624 VA: 0xD03624
	[TooltipAttribute] // RVA: 0xD03624 Offset: 0xD03624 VA: 0xD03624
	public FsmFloat amountOn; // 0x70
	[TooltipAttribute] // RVA: 0xD03678 Offset: 0xD03678 VA: 0xD03678
	public bool rendererOnly; // 0x78
	[TooltipAttribute] // RVA: 0xD036B0 Offset: 0xD036B0 VA: 0xD036B0
	public bool realTime; // 0x79
	private float startTime; // 0x7C
	private float timer; // 0x80

	// Methods

	// RVA: 0x1F7A1B0 Offset: 0x1F7A1B0 VA: 0x1F7A1B0
	public void .ctor() { }

	// RVA: 0x1F7A200 Offset: 0x1F7A200 VA: 0x1F7A200 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F7A24C Offset: 0x1F7A24C VA: 0x1F7A24C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7A278 Offset: 0x1F7A278 VA: 0x1F7A278 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D8F8 Offset: 0xC9D8F8 VA: 0xC9D8F8
[TooltipAttribute] // RVA: 0xC9D8F8 Offset: 0xC9D8F8 VA: 0xC9D8F8
public class FloatAbs : FsmStateAction // TypeDefIndex: 12425
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD036E8 Offset: 0xD036E8 VA: 0xD036E8
	[UIHintAttribute] // RVA: 0xD036E8 Offset: 0xD036E8 VA: 0xD036E8
	[TooltipAttribute] // RVA: 0xD036E8 Offset: 0xD036E8 VA: 0xD036E8
	public FsmFloat floatVariable; // 0x50
	[TooltipAttribute] // RVA: 0xD03748 Offset: 0xD03748 VA: 0xD03748
	public bool everyFrame; // 0x58

	// Methods

	// RVA: 0x1F7A448 Offset: 0x1F7A448 VA: 0x1F7A448
	public void .ctor() { }

	// RVA: 0x1F7A450 Offset: 0x1F7A450 VA: 0x1F7A450 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F7A45C Offset: 0x1F7A45C VA: 0x1F7A45C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7A53C Offset: 0x1F7A53C VA: 0x1F7A53C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1F7A498 Offset: 0x1F7A498 VA: 0x1F7A498
	private void DoFloatAbs() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D948 Offset: 0xC9D948 VA: 0xC9D948
[TooltipAttribute] // RVA: 0xC9D948 Offset: 0xC9D948 VA: 0xC9D948
public class FloatAdd : FsmStateAction // TypeDefIndex: 12426
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD03780 Offset: 0xD03780 VA: 0xD03780
	[UIHintAttribute] // RVA: 0xD03780 Offset: 0xD03780 VA: 0xD03780
	[TooltipAttribute] // RVA: 0xD03780 Offset: 0xD03780 VA: 0xD03780
	public FsmFloat floatVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD037E0 Offset: 0xD037E0 VA: 0xD037E0
	[TooltipAttribute] // RVA: 0xD037E0 Offset: 0xD037E0 VA: 0xD037E0
	public FsmFloat add; // 0x58
	[TooltipAttribute] // RVA: 0xD0382C Offset: 0xD0382C VA: 0xD0382C
	public bool everyFrame; // 0x60
	[TooltipAttribute] // RVA: 0xD03864 Offset: 0xD03864 VA: 0xD03864
	public bool perSecond; // 0x61

	// Methods

	// RVA: 0x1F7A540 Offset: 0x1F7A540 VA: 0x1F7A540
	public void .ctor() { }

	// RVA: 0x1F7A548 Offset: 0x1F7A548 VA: 0x1F7A548 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F7A554 Offset: 0x1F7A554 VA: 0x1F7A554 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7A648 Offset: 0x1F7A648 VA: 0x1F7A648 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1F7A590 Offset: 0x1F7A590 VA: 0x1F7A590
	private void DoFloatAdd() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D998 Offset: 0xC9D998 VA: 0xC9D998
[TooltipAttribute] // RVA: 0xC9D998 Offset: 0xC9D998 VA: 0xC9D998
public class FloatAddMultiple : FsmStateAction // TypeDefIndex: 12427
{
	// Fields
	[UIHintAttribute] // RVA: 0xD0389C Offset: 0xD0389C VA: 0xD0389C
	[TooltipAttribute] // RVA: 0xD0389C Offset: 0xD0389C VA: 0xD0389C
	public FsmFloat[] floatVariables; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD038EC Offset: 0xD038EC VA: 0xD038EC
	[UIHintAttribute] // RVA: 0xD038EC Offset: 0xD038EC VA: 0xD038EC
	[TooltipAttribute] // RVA: 0xD038EC Offset: 0xD038EC VA: 0xD038EC
	public FsmFloat addTo; // 0x58
	[TooltipAttribute] // RVA: 0xD0394C Offset: 0xD0394C VA: 0xD0394C
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x1F7A64C Offset: 0x1F7A64C VA: 0x1F7A64C
	public void .ctor() { }

	// RVA: 0x1F7A654 Offset: 0x1F7A654 VA: 0x1F7A654 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F7A660 Offset: 0x1F7A660 VA: 0x1F7A660 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7A788 Offset: 0x1F7A788 VA: 0x1F7A788 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1F7A69C Offset: 0x1F7A69C VA: 0x1F7A69C
	private void DoFloatAdd() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9D9E8 Offset: 0xC9D9E8 VA: 0xC9D9E8
[TooltipAttribute] // RVA: 0xC9D9E8 Offset: 0xC9D9E8 VA: 0xC9D9E8
public class FloatChanged : FsmStateAction // TypeDefIndex: 12428
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD03984 Offset: 0xD03984 VA: 0xD03984
	[UIHintAttribute] // RVA: 0xD03984 Offset: 0xD03984 VA: 0xD03984
	[TooltipAttribute] // RVA: 0xD03984 Offset: 0xD03984 VA: 0xD03984
	public FsmFloat floatVariable; // 0x50
	[TooltipAttribute] // RVA: 0xD039E4 Offset: 0xD039E4 VA: 0xD039E4
	public FsmEvent changedEvent; // 0x58
	[UIHintAttribute] // RVA: 0xD03A1C Offset: 0xD03A1C VA: 0xD03A1C
	[TooltipAttribute] // RVA: 0xD03A1C Offset: 0xD03A1C VA: 0xD03A1C
	public FsmBool storeResult; // 0x60
	private float previousValue; // 0x68

	// Methods

	// RVA: 0x1F7A78C Offset: 0x1F7A78C VA: 0x1F7A78C
	public void .ctor() { }

	// RVA: 0x1F7A794 Offset: 0x1F7A794 VA: 0x1F7A794 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F7A7A0 Offset: 0x1F7A7A0 VA: 0x1F7A7A0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7A810 Offset: 0x1F7A810 VA: 0x1F7A810 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9DA38 Offset: 0xC9DA38 VA: 0xC9DA38
[TooltipAttribute] // RVA: 0xC9DA38 Offset: 0xC9DA38 VA: 0xC9DA38
public class FloatClamp : FsmStateAction // TypeDefIndex: 12429
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD03A6C Offset: 0xD03A6C VA: 0xD03A6C
	[UIHintAttribute] // RVA: 0xD03A6C Offset: 0xD03A6C VA: 0xD03A6C
	[TooltipAttribute] // RVA: 0xD03A6C Offset: 0xD03A6C VA: 0xD03A6C
	public FsmFloat floatVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD03ACC Offset: 0xD03ACC VA: 0xD03ACC
	[TooltipAttribute] // RVA: 0xD03ACC Offset: 0xD03ACC VA: 0xD03ACC
	public FsmFloat minValue; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD03B18 Offset: 0xD03B18 VA: 0xD03B18
	[TooltipAttribute] // RVA: 0xD03B18 Offset: 0xD03B18 VA: 0xD03B18
	public FsmFloat maxValue; // 0x60
	[TooltipAttribute] // RVA: 0xD03B64 Offset: 0xD03B64 VA: 0xD03B64
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x1F7A8E8 Offset: 0x1F7A8E8 VA: 0x1F7A8E8
	public void .ctor() { }

	// RVA: 0x1F7A8F0 Offset: 0x1F7A8F0 VA: 0x1F7A8F0 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F7A900 Offset: 0x1F7A900 VA: 0x1F7A900 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7AA44 Offset: 0x1F7AA44 VA: 0x1F7AA44 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1F7A93C Offset: 0x1F7A93C VA: 0x1F7A93C
	private void DoClamp() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9DA88 Offset: 0xC9DA88 VA: 0xC9DA88
[TooltipAttribute] // RVA: 0xC9DA88 Offset: 0xC9DA88 VA: 0xC9DA88
public class FloatCompare : FsmStateAction // TypeDefIndex: 12430
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD03B9C Offset: 0xD03B9C VA: 0xD03B9C
	[TooltipAttribute] // RVA: 0xD03B9C Offset: 0xD03B9C VA: 0xD03B9C
	public FsmFloat float1; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD03BE8 Offset: 0xD03BE8 VA: 0xD03BE8
	[TooltipAttribute] // RVA: 0xD03BE8 Offset: 0xD03BE8 VA: 0xD03BE8
	public FsmFloat float2; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD03C34 Offset: 0xD03C34 VA: 0xD03C34
	[TooltipAttribute] // RVA: 0xD03C34 Offset: 0xD03C34 VA: 0xD03C34
	public FsmFloat tolerance; // 0x60
	[TooltipAttribute] // RVA: 0xD03C80 Offset: 0xD03C80 VA: 0xD03C80
	public FsmEvent equal; // 0x68
	[TooltipAttribute] // RVA: 0xD03CB8 Offset: 0xD03CB8 VA: 0xD03CB8
	public FsmEvent lessThan; // 0x70
	[TooltipAttribute] // RVA: 0xD03CF0 Offset: 0xD03CF0 VA: 0xD03CF0
	public FsmEvent greaterThan; // 0x78
	[TooltipAttribute] // RVA: 0xD03D28 Offset: 0xD03D28 VA: 0xD03D28
	public bool everyFrame; // 0x80

	// Methods

	// RVA: 0x1F7AA48 Offset: 0x1F7AA48 VA: 0x1F7AA48
	public void .ctor() { }

	// RVA: 0x1F7AA50 Offset: 0x1F7AA50 VA: 0x1F7AA50 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F7AAA4 Offset: 0x1F7AAA4 VA: 0x1F7AAA4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7AC9C Offset: 0x1F7AC9C VA: 0x1F7AC9C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1F7AAE0 Offset: 0x1F7AAE0 VA: 0x1F7AAE0
	private void DoCompare() { }

	// RVA: 0x1F7ACA0 Offset: 0x1F7ACA0 VA: 0x1F7ACA0 Slot: 61
	public override string ErrorCheck() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9DAD8 Offset: 0xC9DAD8 VA: 0xC9DAD8
[TooltipAttribute] // RVA: 0xC9DAD8 Offset: 0xC9DAD8 VA: 0xC9DAD8
public class FloatDivide : FsmStateAction // TypeDefIndex: 12431
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD03D60 Offset: 0xD03D60 VA: 0xD03D60
	[UIHintAttribute] // RVA: 0xD03D60 Offset: 0xD03D60 VA: 0xD03D60
	[TooltipAttribute] // RVA: 0xD03D60 Offset: 0xD03D60 VA: 0xD03D60
	public FsmFloat floatVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD03DC0 Offset: 0xD03DC0 VA: 0xD03DC0
	[TooltipAttribute] // RVA: 0xD03DC0 Offset: 0xD03DC0 VA: 0xD03DC0
	public FsmFloat divideBy; // 0x58
	[TooltipAttribute] // RVA: 0xD03E0C Offset: 0xD03E0C VA: 0xD03E0C
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x1F7ADAC Offset: 0x1F7ADAC VA: 0x1F7ADAC
	public void .ctor() { }

	// RVA: 0x1F7ADB4 Offset: 0x1F7ADB4 VA: 0x1F7ADB4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F7ADC0 Offset: 0x1F7ADC0 VA: 0x1F7ADC0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7AE6C Offset: 0x1F7AE6C VA: 0x1F7AE6C Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9DB28 Offset: 0xC9DB28 VA: 0xC9DB28
[TooltipAttribute] // RVA: 0xC9DB28 Offset: 0xC9DB28 VA: 0xC9DB28
public class FloatInterpolate : FsmStateAction // TypeDefIndex: 12432
{
	// Fields
	[TooltipAttribute] // RVA: 0xD03E44 Offset: 0xD03E44 VA: 0xD03E44
	public InterpolationType mode; // 0x4C
	[RequiredFieldAttribute] // RVA: 0xD03E7C Offset: 0xD03E7C VA: 0xD03E7C
	[TooltipAttribute] // RVA: 0xD03E7C Offset: 0xD03E7C VA: 0xD03E7C
	public FsmFloat fromFloat; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD03EC8 Offset: 0xD03EC8 VA: 0xD03EC8
	[TooltipAttribute] // RVA: 0xD03EC8 Offset: 0xD03EC8 VA: 0xD03EC8
	public FsmFloat toFloat; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD03F14 Offset: 0xD03F14 VA: 0xD03F14
	[TooltipAttribute] // RVA: 0xD03F14 Offset: 0xD03F14 VA: 0xD03F14
	public FsmFloat time; // 0x60
	[RequiredFieldAttribute] // RVA: 0xD03F60 Offset: 0xD03F60 VA: 0xD03F60
	[UIHintAttribute] // RVA: 0xD03F60 Offset: 0xD03F60 VA: 0xD03F60
	[TooltipAttribute] // RVA: 0xD03F60 Offset: 0xD03F60 VA: 0xD03F60
	public FsmFloat storeResult; // 0x68
	[TooltipAttribute] // RVA: 0xD03FC0 Offset: 0xD03FC0 VA: 0xD03FC0
	public FsmEvent finishEvent; // 0x70
	[TooltipAttribute] // RVA: 0xD03FF8 Offset: 0xD03FF8 VA: 0xD03FF8
	public bool realTime; // 0x78
	private float startTime; // 0x7C
	private float currentTime; // 0x80

	// Methods

	// RVA: 0x1F7AEE8 Offset: 0x1F7AEE8 VA: 0x1F7AEE8
	public void .ctor() { }

	// RVA: 0x1F7AEF0 Offset: 0x1F7AEF0 VA: 0x1F7AEF0 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F7AF30 Offset: 0x1F7AF30 VA: 0x1F7AF30 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7AF9C Offset: 0x1F7AF9C VA: 0x1F7AF9C Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9DB78 Offset: 0xC9DB78 VA: 0xC9DB78
[TooltipAttribute] // RVA: 0xC9DB78 Offset: 0xC9DB78 VA: 0xC9DB78
public class FloatMultiply : FsmStateAction // TypeDefIndex: 12433
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD04030 Offset: 0xD04030 VA: 0xD04030
	[UIHintAttribute] // RVA: 0xD04030 Offset: 0xD04030 VA: 0xD04030
	[TooltipAttribute] // RVA: 0xD04030 Offset: 0xD04030 VA: 0xD04030
	public FsmFloat floatVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD04090 Offset: 0xD04090 VA: 0xD04090
	[TooltipAttribute] // RVA: 0xD04090 Offset: 0xD04090 VA: 0xD04090
	public FsmFloat multiplyBy; // 0x58
	[TooltipAttribute] // RVA: 0xD040DC Offset: 0xD040DC VA: 0xD040DC
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x1F7B1C8 Offset: 0x1F7B1C8 VA: 0x1F7B1C8
	public void .ctor() { }

	// RVA: 0x1F7B1D0 Offset: 0x1F7B1D0 VA: 0x1F7B1D0 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F7B1DC Offset: 0x1F7B1DC VA: 0x1F7B1DC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7B288 Offset: 0x1F7B288 VA: 0x1F7B288 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9DBC8 Offset: 0xC9DBC8 VA: 0xC9DBC8
[TooltipAttribute] // RVA: 0xC9DBC8 Offset: 0xC9DBC8 VA: 0xC9DBC8
public class FloatOperator : FsmStateAction // TypeDefIndex: 12434
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD04114 Offset: 0xD04114 VA: 0xD04114
	[TooltipAttribute] // RVA: 0xD04114 Offset: 0xD04114 VA: 0xD04114
	public FsmFloat float1; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD04160 Offset: 0xD04160 VA: 0xD04160
	[TooltipAttribute] // RVA: 0xD04160 Offset: 0xD04160 VA: 0xD04160
	public FsmFloat float2; // 0x58
	[TooltipAttribute] // RVA: 0xD041AC Offset: 0xD041AC VA: 0xD041AC
	public FloatOperator.Operation operation; // 0x60
	[RequiredFieldAttribute] // RVA: 0xD041E4 Offset: 0xD041E4 VA: 0xD041E4
	[UIHintAttribute] // RVA: 0xD041E4 Offset: 0xD041E4 VA: 0xD041E4
	[TooltipAttribute] // RVA: 0xD041E4 Offset: 0xD041E4 VA: 0xD041E4
	public FsmFloat storeResult; // 0x68
	[TooltipAttribute] // RVA: 0xD04244 Offset: 0xD04244 VA: 0xD04244
	public bool everyFrame; // 0x70

	// Methods

	// RVA: 0x1F7B304 Offset: 0x1F7B304 VA: 0x1F7B304
	public void .ctor() { }

	// RVA: 0x1F7B30C Offset: 0x1F7B30C VA: 0x1F7B30C Slot: 28
	public override void Reset() { }

	// RVA: 0x1F7B320 Offset: 0x1F7B320 VA: 0x1F7B320 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7B500 Offset: 0x1F7B500 VA: 0x1F7B500 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1F7B35C Offset: 0x1F7B35C VA: 0x1F7B35C
	private void DoFloatOperator() { }
}

// Namespace: 
public enum FloatOperator.Operation // TypeDefIndex: 12435
{
	// Fields
	public int value__; // 0x0
	public const FloatOperator.Operation Add = 0;
	public const FloatOperator.Operation Subtract = 1;
	public const FloatOperator.Operation Multiply = 2;
	public const FloatOperator.Operation Divide = 3;
	public const FloatOperator.Operation Min = 4;
	public const FloatOperator.Operation Max = 5;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9DC18 Offset: 0xC9DC18 VA: 0xC9DC18
[TooltipAttribute] // RVA: 0xC9DC18 Offset: 0xC9DC18 VA: 0xC9DC18
public class FloatSignTest : FsmStateAction // TypeDefIndex: 12436
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0427C Offset: 0xD0427C VA: 0xD0427C
	[UIHintAttribute] // RVA: 0xD0427C Offset: 0xD0427C VA: 0xD0427C
	[TooltipAttribute] // RVA: 0xD0427C Offset: 0xD0427C VA: 0xD0427C
	public FsmFloat floatValue; // 0x50
	[TooltipAttribute] // RVA: 0xD042DC Offset: 0xD042DC VA: 0xD042DC
	public FsmEvent isPositive; // 0x58
	[TooltipAttribute] // RVA: 0xD04314 Offset: 0xD04314 VA: 0xD04314
	public FsmEvent isNegative; // 0x60
	[TooltipAttribute] // RVA: 0xD0434C Offset: 0xD0434C VA: 0xD0434C
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x1F7B504 Offset: 0x1F7B504 VA: 0x1F7B504
	public void .ctor() { }

	// RVA: 0x1F7B50C Offset: 0x1F7B50C VA: 0x1F7B50C Slot: 28
	public override void Reset() { }

	// RVA: 0x1F7B540 Offset: 0x1F7B540 VA: 0x1F7B540 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7B610 Offset: 0x1F7B610 VA: 0x1F7B610 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1F7B57C Offset: 0x1F7B57C VA: 0x1F7B57C
	private void DoSignTest() { }

	// RVA: 0x1F7B614 Offset: 0x1F7B614 VA: 0x1F7B614 Slot: 61
	public override string ErrorCheck() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9DC68 Offset: 0xC9DC68 VA: 0xC9DC68
[TooltipAttribute] // RVA: 0xC9DC68 Offset: 0xC9DC68 VA: 0xC9DC68
public class FloatSubtract : FsmStateAction // TypeDefIndex: 12437
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD04384 Offset: 0xD04384 VA: 0xD04384
	[UIHintAttribute] // RVA: 0xD04384 Offset: 0xD04384 VA: 0xD04384
	[TooltipAttribute] // RVA: 0xD04384 Offset: 0xD04384 VA: 0xD04384
	public FsmFloat floatVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD043E4 Offset: 0xD043E4 VA: 0xD043E4
	[TooltipAttribute] // RVA: 0xD043E4 Offset: 0xD043E4 VA: 0xD043E4
	public FsmFloat subtract; // 0x58
	[TooltipAttribute] // RVA: 0xD04430 Offset: 0xD04430 VA: 0xD04430
	public bool everyFrame; // 0x60
	[TooltipAttribute] // RVA: 0xD04468 Offset: 0xD04468 VA: 0xD04468
	public bool perSecond; // 0x61

	// Methods

	// RVA: 0x1F7B6F4 Offset: 0x1F7B6F4 VA: 0x1F7B6F4
	public void .ctor() { }

	// RVA: 0x1F7B6FC Offset: 0x1F7B6FC VA: 0x1F7B6FC Slot: 28
	public override void Reset() { }

	// RVA: 0x1F7B708 Offset: 0x1F7B708 VA: 0x1F7B708 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7B7FC Offset: 0x1F7B7FC VA: 0x1F7B7FC Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1F7B744 Offset: 0x1F7B744 VA: 0x1F7B744
	private void DoFloatSubtract() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9DCB8 Offset: 0xC9DCB8 VA: 0xC9DCB8
[TooltipAttribute] // RVA: 0xC9DCB8 Offset: 0xC9DCB8 VA: 0xC9DCB8
public class FloatSwitch : FsmStateAction // TypeDefIndex: 12438
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD044A0 Offset: 0xD044A0 VA: 0xD044A0
	[UIHintAttribute] // RVA: 0xD044A0 Offset: 0xD044A0 VA: 0xD044A0
	[TooltipAttribute] // RVA: 0xD044A0 Offset: 0xD044A0 VA: 0xD044A0
	public FsmFloat floatVariable; // 0x50
	[CompoundArrayAttribute] // RVA: 0xD04500 Offset: 0xD04500 VA: 0xD04500
	public FsmFloat[] lessThan; // 0x58
	public FsmEvent[] sendEvent; // 0x60
	[TooltipAttribute] // RVA: 0xD04568 Offset: 0xD04568 VA: 0xD04568
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x1F7B800 Offset: 0x1F7B800 VA: 0x1F7B800
	public void .ctor() { }

	// RVA: 0x1F7B808 Offset: 0x1F7B808 VA: 0x1F7B808 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F7B880 Offset: 0x1F7B880 VA: 0x1F7B880 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7BA18 Offset: 0x1F7BA18 VA: 0x1F7BA18 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1F7B8BC Offset: 0x1F7B8BC VA: 0x1F7B8BC
	private void DoFloatSwitch() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9DD08 Offset: 0xC9DD08 VA: 0xC9DD08
[TooltipAttribute] // RVA: 0xC9DD08 Offset: 0xC9DD08 VA: 0xC9DD08
public class FormatString : FsmStateAction // TypeDefIndex: 12439
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD045A0 Offset: 0xD045A0 VA: 0xD045A0
	[TooltipAttribute] // RVA: 0xD045A0 Offset: 0xD045A0 VA: 0xD045A0
	public FsmString format; // 0x50
	[TooltipAttribute] // RVA: 0xD045EC Offset: 0xD045EC VA: 0xD045EC
	public FsmVar[] variables; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD04624 Offset: 0xD04624 VA: 0xD04624
	[UIHintAttribute] // RVA: 0xD04624 Offset: 0xD04624 VA: 0xD04624
	[TooltipAttribute] // RVA: 0xD04624 Offset: 0xD04624 VA: 0xD04624
	public FsmString storeResult; // 0x60
	[TooltipAttribute] // RVA: 0xD04684 Offset: 0xD04684 VA: 0xD04684
	public bool everyFrame; // 0x68
	private object[] objectArray; // 0x70

	// Methods

	// RVA: 0x1F7BA1C Offset: 0x1F7BA1C VA: 0x1F7BA1C
	public void .ctor() { }

	// RVA: 0x1F7BA24 Offset: 0x1F7BA24 VA: 0x1F7BA24 Slot: 28
	public override void Reset() { }

	// RVA: 0x1F7BA34 Offset: 0x1F7BA34 VA: 0x1F7BA34 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1F7BD70 Offset: 0x1F7BD70 VA: 0x1F7BD70 Slot: 34
