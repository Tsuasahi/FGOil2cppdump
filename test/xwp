	|-ComponentAction<Slider>..ctor
	|-ComponentAction<Text>..ctor
	|-ComponentAction<Toggle>..ctor
	*/

	// RVA: -1 Offset: -1
	protected Rigidbody get_rigidbody() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x227074C Offset: 0x227074C VA: 0x227074C
	|-ComponentAction<object>.get_rigidbody
	|-ComponentAction<Rigidbody>.get_rigidbody
	*/

	// RVA: -1 Offset: -1
	protected Rigidbody2D get_rigidbody2d() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x227079C Offset: 0x227079C VA: 0x227079C
	|-ComponentAction<object>.get_rigidbody2d
	|-ComponentAction<Rigidbody2D>.get_rigidbody2d
	*/

	// RVA: -1 Offset: -1
	protected Renderer get_renderer() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x22707EC Offset: 0x22707EC VA: 0x22707EC
	|-ComponentAction<object>.get_renderer
	|-ComponentAction<Renderer>.get_renderer
	*/

	// RVA: -1 Offset: -1
	protected Animation get_animation() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x227083C Offset: 0x227083C VA: 0x227083C
	|-ComponentAction<object>.get_animation
	|-ComponentAction<Animation>.get_animation
	*/

	// RVA: -1 Offset: -1
	protected AudioSource get_audio() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x227088C Offset: 0x227088C VA: 0x227088C
	|-ComponentAction<object>.get_audio
	|-ComponentAction<AudioSource>.get_audio
	*/

	// RVA: -1 Offset: -1
	protected Camera get_camera() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x22708DC Offset: 0x22708DC VA: 0x22708DC
	|-ComponentAction<object>.get_camera
	|-ComponentAction<Camera>.get_camera
	*/

	// RVA: -1 Offset: -1
	protected GUIText get_guiText() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x227092C Offset: 0x227092C VA: 0x227092C
	|-ComponentAction<object>.get_guiText
	|-ComponentAction<GUIText>.get_guiText
	*/

	// RVA: -1 Offset: -1
	protected GUITexture get_guiTexture() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x227097C Offset: 0x227097C VA: 0x227097C
	|-ComponentAction<object>.get_guiTexture
	|-ComponentAction<GUITexture>.get_guiTexture
	*/

	// RVA: -1 Offset: -1
	protected Light get_light() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x22709CC Offset: 0x22709CC VA: 0x22709CC
	|-ComponentAction<object>.get_light
	|-ComponentAction<Light>.get_light
	*/

	// RVA: -1 Offset: -1
	protected bool UpdateCache(GameObject go) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2270A1C Offset: 0x2270A1C VA: 0x2270A1C
	|-ComponentAction<object>.UpdateCache
	|-ComponentAction<Animation>.UpdateCache
	|-ComponentAction<AudioSource>.UpdateCache
	|-ComponentAction<Camera>.UpdateCache
	|-ComponentAction<CanvasGroup>.UpdateCache
	|-ComponentAction<GUIText>.UpdateCache
	|-ComponentAction<GUITexture>.UpdateCache
	|-ComponentAction<Light>.UpdateCache
	|-ComponentAction<Renderer>.UpdateCache
	|-ComponentAction<Rigidbody2D>.UpdateCache
	|-ComponentAction<Rigidbody>.UpdateCache
	|-ComponentAction<Button>.UpdateCache
	|-ComponentAction<CanvasScaler>.UpdateCache
	|-ComponentAction<Dropdown>.UpdateCache
	|-ComponentAction<Graphic>.UpdateCache
	|-ComponentAction<Image>.UpdateCache
	|-ComponentAction<InputField>.UpdateCache
	|-ComponentAction<LayoutElement>.UpdateCache
	|-ComponentAction<RawImage>.UpdateCache
	|-ComponentAction<ScrollRect>.UpdateCache
	|-ComponentAction<Scrollbar>.UpdateCache
	|-ComponentAction<Selectable>.UpdateCache
	|-ComponentAction<Slider>.UpdateCache
	|-ComponentAction<Text>.UpdateCache
	|-ComponentAction<Toggle>.UpdateCache
	*/

	// RVA: -1 Offset: -1
	protected bool UpdateCacheAddComponent(GameObject go) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2270C74 Offset: 0x2270C74 VA: 0x2270C74
	|-ComponentAction<PlayMakerCanvasRaycastFilterProxy>.UpdateCacheAddComponent
	|-ComponentAction<object>.UpdateCacheAddComponent
	|-ComponentAction<EventTrigger>.UpdateCacheAddComponent
	*/

	// RVA: -1 Offset: -1
	protected void SendEvent(FsmEventTarget eventTarget, FsmEvent fsmEvent) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2270E38 Offset: 0x2270E38 VA: 0x2270E38
	|-ComponentAction<object>.SendEvent
	|-ComponentAction<EventTrigger>.SendEvent
	|-ComponentAction<Button>.SendEvent
	|-ComponentAction<InputField>.SendEvent
	|-ComponentAction<Scrollbar>.SendEvent
	|-ComponentAction<Slider>.SendEvent
	|-ComponentAction<Toggle>.SendEvent
	*/
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC304C4 Offset: 0xC304C4 VA: 0xC304C4
[TooltipAttribute] // RVA: 0xC304C4 Offset: 0xC304C4 VA: 0xC304C4
public class ControllerIsGrounded : FsmStateAction // TypeDefIndex: 12398
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC925D8 Offset: 0xC925D8 VA: 0xC925D8
	[CheckForComponentAttribute] // RVA: 0xC925D8 Offset: 0xC925D8 VA: 0xC925D8
	[TooltipAttribute] // RVA: 0xC925D8 Offset: 0xC925D8 VA: 0xC925D8
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xC92670 Offset: 0xC92670 VA: 0xC92670
	public FsmEvent trueEvent; // 0x58
	[TooltipAttribute] // RVA: 0xC926A8 Offset: 0xC926A8 VA: 0xC926A8
	public FsmEvent falseEvent; // 0x60
	[TooltipAttribute] // RVA: 0xC926E0 Offset: 0xC926E0 VA: 0xC926E0
	[UIHintAttribute] // RVA: 0xC926E0 Offset: 0xC926E0 VA: 0xC926E0
	public FsmBool storeResult; // 0x68
	[TooltipAttribute] // RVA: 0xC92730 Offset: 0xC92730 VA: 0xC92730
	public bool everyFrame; // 0x70
	private GameObject previousGo; // 0x78
	private CharacterController controller; // 0x80

	// Methods

	// RVA: 0x1D3B14C Offset: 0x1D3B14C VA: 0x1D3B14C
	public void .ctor() { }

	// RVA: 0x1D3B154 Offset: 0x1D3B154 VA: 0x1D3B154 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3B164 Offset: 0x1D3B164 VA: 0x1D3B164 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3B37C Offset: 0x1D3B37C VA: 0x1D3B37C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D3B1A0 Offset: 0x1D3B1A0 VA: 0x1D3B1A0
	private void DoControllerIsGrounded() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30514 Offset: 0xC30514 VA: 0xC30514
[TooltipAttribute] // RVA: 0xC30514 Offset: 0xC30514 VA: 0xC30514
public class ControllerMove : FsmStateAction // TypeDefIndex: 12399
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC92768 Offset: 0xC92768 VA: 0xC92768
	[CheckForComponentAttribute] // RVA: 0xC92768 Offset: 0xC92768 VA: 0xC92768
	[TooltipAttribute] // RVA: 0xC92768 Offset: 0xC92768 VA: 0xC92768
	public FsmOwnerDefault gameObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC92800 Offset: 0xC92800 VA: 0xC92800
	[TooltipAttribute] // RVA: 0xC92800 Offset: 0xC92800 VA: 0xC92800
	public FsmVector3 moveVector; // 0x58
	[TooltipAttribute] // RVA: 0xC9284C Offset: 0xC9284C VA: 0xC9284C
	public Space space; // 0x60
	[TooltipAttribute] // RVA: 0xC92884 Offset: 0xC92884 VA: 0xC92884
	public FsmBool perSecond; // 0x68
	private GameObject previousGo; // 0x70
	private CharacterController controller; // 0x78

	// Methods

	// RVA: 0x1D3B380 Offset: 0x1D3B380 VA: 0x1D3B380
	public void .ctor() { }

	// RVA: 0x1D3B388 Offset: 0x1D3B388 VA: 0x1D3B388 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3B41C Offset: 0x1D3B41C VA: 0x1D3B41C Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30564 Offset: 0xC30564 VA: 0xC30564
[TooltipAttribute] // RVA: 0xC30564 Offset: 0xC30564 VA: 0xC30564
public class ControllerSettings : FsmStateAction // TypeDefIndex: 12400
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC928BC Offset: 0xC928BC VA: 0xC928BC
	[CheckForComponentAttribute] // RVA: 0xC928BC Offset: 0xC928BC VA: 0xC928BC
	[TooltipAttribute] // RVA: 0xC928BC Offset: 0xC928BC VA: 0xC928BC
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xC92954 Offset: 0xC92954 VA: 0xC92954
	public FsmFloat height; // 0x58
	[TooltipAttribute] // RVA: 0xC9298C Offset: 0xC9298C VA: 0xC9298C
	public FsmFloat radius; // 0x60
	[TooltipAttribute] // RVA: 0xC929C4 Offset: 0xC929C4 VA: 0xC929C4
	public FsmFloat slopeLimit; // 0x68
	[TooltipAttribute] // RVA: 0xC929FC Offset: 0xC929FC VA: 0xC929FC
	public FsmFloat stepOffset; // 0x70
	[TooltipAttribute] // RVA: 0xC92A34 Offset: 0xC92A34 VA: 0xC92A34
	public FsmVector3 center; // 0x78
	[TooltipAttribute] // RVA: 0xC92A6C Offset: 0xC92A6C VA: 0xC92A6C
	public FsmBool detectCollisions; // 0x80
	[TooltipAttribute] // RVA: 0xC92AA4 Offset: 0xC92AA4 VA: 0xC92AA4
	public bool everyFrame; // 0x88
	private GameObject previousGo; // 0x90
	private CharacterController controller; // 0x98

	// Methods

	// RVA: 0x1D3B6C8 Offset: 0x1D3B6C8 VA: 0x1D3B6C8
	public void .ctor() { }

	// RVA: 0x1D3B6D0 Offset: 0x1D3B6D0 VA: 0x1D3B6D0 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3B870 Offset: 0x1D3B870 VA: 0x1D3B870 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3BC5C Offset: 0x1D3BC5C VA: 0x1D3BC5C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D3B8AC Offset: 0x1D3B8AC VA: 0x1D3B8AC
	private void DoControllerSettings() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC305B4 Offset: 0xC305B4 VA: 0xC305B4
[TooltipAttribute] // RVA: 0xC305B4 Offset: 0xC305B4 VA: 0xC305B4
public class ControllerSimpleMove : FsmStateAction // TypeDefIndex: 12401
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC92ADC Offset: 0xC92ADC VA: 0xC92ADC
	[CheckForComponentAttribute] // RVA: 0xC92ADC Offset: 0xC92ADC VA: 0xC92ADC
	[TooltipAttribute] // RVA: 0xC92ADC Offset: 0xC92ADC VA: 0xC92ADC
	public FsmOwnerDefault gameObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC92B74 Offset: 0xC92B74 VA: 0xC92B74
	[TooltipAttribute] // RVA: 0xC92B74 Offset: 0xC92B74 VA: 0xC92B74
	public FsmVector3 moveVector; // 0x58
	[TooltipAttribute] // RVA: 0xC92BC0 Offset: 0xC92BC0 VA: 0xC92BC0
	public FsmFloat speed; // 0x60
	[TooltipAttribute] // RVA: 0xC92BF8 Offset: 0xC92BF8 VA: 0xC92BF8
	public Space space; // 0x68
	private GameObject previousGo; // 0x70
	private CharacterController controller; // 0x78

	// Methods

	// RVA: 0x1D3BC60 Offset: 0x1D3BC60 VA: 0x1D3BC60
	public void .ctor() { }

	// RVA: 0x1D3BC68 Offset: 0x1D3BC68 VA: 0x1D3BC68 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3BCFC Offset: 0x1D3BCFC VA: 0x1D3BCFC Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30604 Offset: 0xC30604 VA: 0xC30604
[TooltipAttribute] // RVA: 0xC30604 Offset: 0xC30604 VA: 0xC30604
public class ConvertEnumToString : FsmStateAction // TypeDefIndex: 12402
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC92C30 Offset: 0xC92C30 VA: 0xC92C30
	[UIHintAttribute] // RVA: 0xC92C30 Offset: 0xC92C30 VA: 0xC92C30
	[TooltipAttribute] // RVA: 0xC92C30 Offset: 0xC92C30 VA: 0xC92C30
	public FsmEnum enumVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC92C90 Offset: 0xC92C90 VA: 0xC92C90
	[UIHintAttribute] // RVA: 0xC92C90 Offset: 0xC92C90 VA: 0xC92C90
	[TooltipAttribute] // RVA: 0xC92C90 Offset: 0xC92C90 VA: 0xC92C90
	public FsmString stringVariable; // 0x58
	[TooltipAttribute] // RVA: 0xC92CF0 Offset: 0xC92CF0 VA: 0xC92CF0
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x1D3C430 Offset: 0x1D3C430 VA: 0x1D3C430
	public void .ctor() { }

	// RVA: 0x1D3C438 Offset: 0x1D3C438 VA: 0x1D3C438 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3C444 Offset: 0x1D3C444 VA: 0x1D3C444 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3C570 Offset: 0x1D3C570 VA: 0x1D3C570 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D3C480 Offset: 0x1D3C480 VA: 0x1D3C480
	private void DoConvertEnumToString() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30654 Offset: 0xC30654 VA: 0xC30654
[HelpUrlAttribute] // RVA: 0xC30654 Offset: 0xC30654 VA: 0xC30654
[TooltipAttribute] // RVA: 0xC30654 Offset: 0xC30654 VA: 0xC30654
public class ConvertSecondsToString : FsmStateAction // TypeDefIndex: 12403
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC92D28 Offset: 0xC92D28 VA: 0xC92D28
	[UIHintAttribute] // RVA: 0xC92D28 Offset: 0xC92D28 VA: 0xC92D28
	[TooltipAttribute] // RVA: 0xC92D28 Offset: 0xC92D28 VA: 0xC92D28
	public FsmFloat secondsVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC92D88 Offset: 0xC92D88 VA: 0xC92D88
	[UIHintAttribute] // RVA: 0xC92D88 Offset: 0xC92D88 VA: 0xC92D88
	[TooltipAttribute] // RVA: 0xC92D88 Offset: 0xC92D88 VA: 0xC92D88
	public FsmString stringVariable; // 0x58
	[RequiredFieldAttribute] // RVA: 0xC92DE8 Offset: 0xC92DE8 VA: 0xC92DE8
	[TooltipAttribute] // RVA: 0xC92DE8 Offset: 0xC92DE8 VA: 0xC92DE8
	public FsmString format; // 0x60
	[TooltipAttribute] // RVA: 0xC92E34 Offset: 0xC92E34 VA: 0xC92E34
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x1D3CC28 Offset: 0x1D3CC28 VA: 0x1D3CC28
	public void .ctor() { }

	// RVA: 0x1D3CC30 Offset: 0x1D3CC30 VA: 0x1D3CC30 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3CC90 Offset: 0x1D3CC90 VA: 0x1D3CC90 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3D308 Offset: 0x1D3D308 VA: 0x1D3D308 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D3CCCC Offset: 0x1D3CCCC VA: 0x1D3CCCC
	private void DoConvertSecondsToString() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC306C8 Offset: 0xC306C8 VA: 0xC306C8
[TooltipAttribute] // RVA: 0xC306C8 Offset: 0xC306C8 VA: 0xC306C8
public class ConvertBoolToColor : FsmStateAction // TypeDefIndex: 12404
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC92E6C Offset: 0xC92E6C VA: 0xC92E6C
	[UIHintAttribute] // RVA: 0xC92E6C Offset: 0xC92E6C VA: 0xC92E6C
	[TooltipAttribute] // RVA: 0xC92E6C Offset: 0xC92E6C VA: 0xC92E6C
	public FsmBool boolVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC92ECC Offset: 0xC92ECC VA: 0xC92ECC
	[UIHintAttribute] // RVA: 0xC92ECC Offset: 0xC92ECC VA: 0xC92ECC
	[TooltipAttribute] // RVA: 0xC92ECC Offset: 0xC92ECC VA: 0xC92ECC
	public FsmColor colorVariable; // 0x58
	[TooltipAttribute] // RVA: 0xC92F2C Offset: 0xC92F2C VA: 0xC92F2C
	public FsmColor falseColor; // 0x60
	[TooltipAttribute] // RVA: 0xC92F64 Offset: 0xC92F64 VA: 0xC92F64
	public FsmColor trueColor; // 0x68
	[TooltipAttribute] // RVA: 0xC92F9C Offset: 0xC92F9C VA: 0xC92F9C
	public bool everyFrame; // 0x70

	// Methods

	// RVA: 0x1D3BF84 Offset: 0x1D3BF84 VA: 0x1D3BF84
	public void .ctor() { }

	// RVA: 0x1D3BF8C Offset: 0x1D3BF8C VA: 0x1D3BF8C Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3BFD8 Offset: 0x1D3BFD8 VA: 0x1D3BFD8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3C0C0 Offset: 0x1D3C0C0 VA: 0x1D3C0C0 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D3C014 Offset: 0x1D3C014 VA: 0x1D3C014
	private void DoConvertBoolToColor() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30718 Offset: 0xC30718 VA: 0xC30718
[TooltipAttribute] // RVA: 0xC30718 Offset: 0xC30718 VA: 0xC30718
public class ConvertBoolToFloat : FsmStateAction // TypeDefIndex: 12405
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC92FD4 Offset: 0xC92FD4 VA: 0xC92FD4
	[UIHintAttribute] // RVA: 0xC92FD4 Offset: 0xC92FD4 VA: 0xC92FD4
	[TooltipAttribute] // RVA: 0xC92FD4 Offset: 0xC92FD4 VA: 0xC92FD4
	public FsmBool boolVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC93034 Offset: 0xC93034 VA: 0xC93034
	[UIHintAttribute] // RVA: 0xC93034 Offset: 0xC93034 VA: 0xC93034
	[TooltipAttribute] // RVA: 0xC93034 Offset: 0xC93034 VA: 0xC93034
	public FsmFloat floatVariable; // 0x58
	[TooltipAttribute] // RVA: 0xC93094 Offset: 0xC93094 VA: 0xC93094
	public FsmFloat falseValue; // 0x60
	[TooltipAttribute] // RVA: 0xC930CC Offset: 0xC930CC VA: 0xC930CC
	public FsmFloat trueValue; // 0x68
	[TooltipAttribute] // RVA: 0xC93104 Offset: 0xC93104 VA: 0xC93104
	public bool everyFrame; // 0x70

	// Methods

	// RVA: 0x1D3C0C4 Offset: 0x1D3C0C4 VA: 0x1D3C0C4
	public void .ctor() { }

	// RVA: 0x1D3C0CC Offset: 0x1D3C0CC VA: 0x1D3C0CC Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3C110 Offset: 0x1D3C110 VA: 0x1D3C110 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3C1D8 Offset: 0x1D3C1D8 VA: 0x1D3C1D8 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D3C14C Offset: 0x1D3C14C VA: 0x1D3C14C
	private void DoConvertBoolToFloat() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30768 Offset: 0xC30768 VA: 0xC30768
[TooltipAttribute] // RVA: 0xC30768 Offset: 0xC30768 VA: 0xC30768
public class ConvertBoolToInt : FsmStateAction // TypeDefIndex: 12406
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC9313C Offset: 0xC9313C VA: 0xC9313C
	[UIHintAttribute] // RVA: 0xC9313C Offset: 0xC9313C VA: 0xC9313C
	[TooltipAttribute] // RVA: 0xC9313C Offset: 0xC9313C VA: 0xC9313C
	public FsmBool boolVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC9319C Offset: 0xC9319C VA: 0xC9319C
	[UIHintAttribute] // RVA: 0xC9319C Offset: 0xC9319C VA: 0xC9319C
	[TooltipAttribute] // RVA: 0xC9319C Offset: 0xC9319C VA: 0xC9319C
	public FsmInt intVariable; // 0x58
	[TooltipAttribute] // RVA: 0xC931FC Offset: 0xC931FC VA: 0xC931FC
	public FsmInt falseValue; // 0x60
	[TooltipAttribute] // RVA: 0xC93234 Offset: 0xC93234 VA: 0xC93234
	public FsmInt trueValue; // 0x68
	[TooltipAttribute] // RVA: 0xC9326C Offset: 0xC9326C VA: 0xC9326C
	public bool everyFrame; // 0x70

	// Methods

	// RVA: 0x1D3C1DC Offset: 0x1D3C1DC VA: 0x1D3C1DC
	public void .ctor() { }

	// RVA: 0x1D3C1E4 Offset: 0x1D3C1E4 VA: 0x1D3C1E4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3C228 Offset: 0x1D3C228 VA: 0x1D3C228 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3C2E8 Offset: 0x1D3C2E8 VA: 0x1D3C2E8 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D3C264 Offset: 0x1D3C264 VA: 0x1D3C264
	private void DoConvertBoolToInt() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC307B8 Offset: 0xC307B8 VA: 0xC307B8
[TooltipAttribute] // RVA: 0xC307B8 Offset: 0xC307B8 VA: 0xC307B8
public class ConvertBoolToString : FsmStateAction // TypeDefIndex: 12407
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC932A4 Offset: 0xC932A4 VA: 0xC932A4
	[UIHintAttribute] // RVA: 0xC932A4 Offset: 0xC932A4 VA: 0xC932A4
	[TooltipAttribute] // RVA: 0xC932A4 Offset: 0xC932A4 VA: 0xC932A4
	public FsmBool boolVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC93304 Offset: 0xC93304 VA: 0xC93304
	[UIHintAttribute] // RVA: 0xC93304 Offset: 0xC93304 VA: 0xC93304
	[TooltipAttribute] // RVA: 0xC93304 Offset: 0xC93304 VA: 0xC93304
	public FsmString stringVariable; // 0x58
	[TooltipAttribute] // RVA: 0xC93364 Offset: 0xC93364 VA: 0xC93364
	public FsmString falseString; // 0x60
	[TooltipAttribute] // RVA: 0xC9339C Offset: 0xC9339C VA: 0xC9339C
	public FsmString trueString; // 0x68
	[TooltipAttribute] // RVA: 0xC933D4 Offset: 0xC933D4 VA: 0xC933D4
	public bool everyFrame; // 0x70

	// Methods

	// RVA: 0x1D3C2EC Offset: 0x1D3C2EC VA: 0x1D3C2EC
	public void .ctor() { }

	// RVA: 0x1D3C2F4 Offset: 0x1D3C2F4 VA: 0x1D3C2F4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3C36C Offset: 0x1D3C36C VA: 0x1D3C36C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3C42C Offset: 0x1D3C42C VA: 0x1D3C42C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D3C3A8 Offset: 0x1D3C3A8 VA: 0x1D3C3A8
	private void DoConvertBoolToString() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30808 Offset: 0xC30808 VA: 0xC30808
[TooltipAttribute] // RVA: 0xC30808 Offset: 0xC30808 VA: 0xC30808
public class ConvertFloatToInt : FsmStateAction // TypeDefIndex: 12408
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC9340C Offset: 0xC9340C VA: 0xC9340C
	[UIHintAttribute] // RVA: 0xC9340C Offset: 0xC9340C VA: 0xC9340C
	[TooltipAttribute] // RVA: 0xC9340C Offset: 0xC9340C VA: 0xC9340C
	public FsmFloat floatVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC9346C Offset: 0xC9346C VA: 0xC9346C
	[UIHintAttribute] // RVA: 0xC9346C Offset: 0xC9346C VA: 0xC9346C
	[TooltipAttribute] // RVA: 0xC9346C Offset: 0xC9346C VA: 0xC9346C
	public FsmInt intVariable; // 0x58
	public ConvertFloatToInt.FloatRounding rounding; // 0x60
	public bool everyFrame; // 0x64

	// Methods

	// RVA: 0x1D3C574 Offset: 0x1D3C574 VA: 0x1D3C574
	public void .ctor() { }

	// RVA: 0x1D3C57C Offset: 0x1D3C57C VA: 0x1D3C57C Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3C590 Offset: 0x1D3C590 VA: 0x1D3C590 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3C744 Offset: 0x1D3C744 VA: 0x1D3C744 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D3C5CC Offset: 0x1D3C5CC VA: 0x1D3C5CC
	private void DoConvertFloatToInt() { }
}

// Namespace: 
public enum ConvertFloatToInt.FloatRounding // TypeDefIndex: 12409
{
	// Fields
	public int value__; // 0x0
	public const ConvertFloatToInt.FloatRounding RoundDown = 0;
	public const ConvertFloatToInt.FloatRounding RoundUp = 1;
	public const ConvertFloatToInt.FloatRounding Nearest = 2;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30858 Offset: 0xC30858 VA: 0xC30858
[TooltipAttribute] // RVA: 0xC30858 Offset: 0xC30858 VA: 0xC30858
public class ConvertFloatToString : FsmStateAction // TypeDefIndex: 12410
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC934CC Offset: 0xC934CC VA: 0xC934CC
	[UIHintAttribute] // RVA: 0xC934CC Offset: 0xC934CC VA: 0xC934CC
	[TooltipAttribute] // RVA: 0xC934CC Offset: 0xC934CC VA: 0xC934CC
	public FsmFloat floatVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC9352C Offset: 0xC9352C VA: 0xC9352C
	[UIHintAttribute] // RVA: 0xC9352C Offset: 0xC9352C VA: 0xC9352C
	[TooltipAttribute] // RVA: 0xC9352C Offset: 0xC9352C VA: 0xC9352C
	public FsmString stringVariable; // 0x58
	[TooltipAttribute] // RVA: 0xC9358C Offset: 0xC9358C VA: 0xC9358C
	public FsmString format; // 0x60
	[TooltipAttribute] // RVA: 0xC935C4 Offset: 0xC935C4 VA: 0xC935C4
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x1D3C748 Offset: 0x1D3C748 VA: 0x1D3C748
	public void .ctor() { }

	// RVA: 0x1D3C750 Offset: 0x1D3C750 VA: 0x1D3C750 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3C760 Offset: 0x1D3C760 VA: 0x1D3C760 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3C910 Offset: 0x1D3C910 VA: 0x1D3C910 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D3C79C Offset: 0x1D3C79C VA: 0x1D3C79C
	private void DoConvertFloatToString() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC308A8 Offset: 0xC308A8 VA: 0xC308A8
[TooltipAttribute] // RVA: 0xC308A8 Offset: 0xC308A8 VA: 0xC308A8
public class ConvertIntToFloat : FsmStateAction // TypeDefIndex: 12411
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC935FC Offset: 0xC935FC VA: 0xC935FC
	[UIHintAttribute] // RVA: 0xC935FC Offset: 0xC935FC VA: 0xC935FC
	[TooltipAttribute] // RVA: 0xC935FC Offset: 0xC935FC VA: 0xC935FC
	public FsmInt intVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC9365C Offset: 0xC9365C VA: 0xC9365C
	[UIHintAttribute] // RVA: 0xC9365C Offset: 0xC9365C VA: 0xC9365C
	[TooltipAttribute] // RVA: 0xC9365C Offset: 0xC9365C VA: 0xC9365C
	public FsmFloat floatVariable; // 0x58
	[TooltipAttribute] // RVA: 0xC936BC Offset: 0xC936BC VA: 0xC936BC
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x1D3C914 Offset: 0x1D3C914 VA: 0x1D3C914
	public void .ctor() { }

	// RVA: 0x1D3C91C Offset: 0x1D3C91C VA: 0x1D3C91C Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3C928 Offset: 0x1D3C928 VA: 0x1D3C928 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3C9B4 Offset: 0x1D3C9B4 VA: 0x1D3C9B4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D3C964 Offset: 0x1D3C964 VA: 0x1D3C964
	private void DoConvertIntToFloat() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC308F8 Offset: 0xC308F8 VA: 0xC308F8
[TooltipAttribute] // RVA: 0xC308F8 Offset: 0xC308F8 VA: 0xC308F8
public class ConvertIntToString : FsmStateAction // TypeDefIndex: 12412
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC936F4 Offset: 0xC936F4 VA: 0xC936F4
	[UIHintAttribute] // RVA: 0xC936F4 Offset: 0xC936F4 VA: 0xC936F4
	[TooltipAttribute] // RVA: 0xC936F4 Offset: 0xC936F4 VA: 0xC936F4
	public FsmInt intVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC93754 Offset: 0xC93754 VA: 0xC93754
	[UIHintAttribute] // RVA: 0xC93754 Offset: 0xC93754 VA: 0xC93754
	[TooltipAttribute] // RVA: 0xC93754 Offset: 0xC93754 VA: 0xC93754
	public FsmString stringVariable; // 0x58
	[TooltipAttribute] // RVA: 0xC937B4 Offset: 0xC937B4 VA: 0xC937B4
	public FsmString format; // 0x60
	[TooltipAttribute] // RVA: 0xC937EC Offset: 0xC937EC VA: 0xC937EC
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x1D3C9B8 Offset: 0x1D3C9B8 VA: 0x1D3C9B8
	public void .ctor() { }

	// RVA: 0x1D3C9C0 Offset: 0x1D3C9C0 VA: 0x1D3C9C0 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3C9D0 Offset: 0x1D3C9D0 VA: 0x1D3C9D0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3CB80 Offset: 0x1D3CB80 VA: 0x1D3CB80 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D3CA0C Offset: 0x1D3CA0C VA: 0x1D3CA0C
	private void DoConvertIntToString() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30948 Offset: 0xC30948 VA: 0xC30948
[TooltipAttribute] // RVA: 0xC30948 Offset: 0xC30948 VA: 0xC30948
public class ConvertMaterialToObject : FsmStateAction // TypeDefIndex: 12413
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC93824 Offset: 0xC93824 VA: 0xC93824
	[UIHintAttribute] // RVA: 0xC93824 Offset: 0xC93824 VA: 0xC93824
	[TooltipAttribute] // RVA: 0xC93824 Offset: 0xC93824 VA: 0xC93824
	public FsmMaterial materialVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC93884 Offset: 0xC93884 VA: 0xC93884
	[UIHintAttribute] // RVA: 0xC93884 Offset: 0xC93884 VA: 0xC93884
	[TooltipAttribute] // RVA: 0xC93884 Offset: 0xC93884 VA: 0xC93884
	public FsmObject objectVariable; // 0x58
	[TooltipAttribute] // RVA: 0xC938E4 Offset: 0xC938E4 VA: 0xC938E4
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x1D3CB84 Offset: 0x1D3CB84 VA: 0x1D3CB84
	public void .ctor() { }

	// RVA: 0x1D3CB8C Offset: 0x1D3CB8C VA: 0x1D3CB8C Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3CB98 Offset: 0x1D3CB98 VA: 0x1D3CB98 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3CC24 Offset: 0x1D3CC24 VA: 0x1D3CC24 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D3CBD4 Offset: 0x1D3CBD4 VA: 0x1D3CBD4
	private void DoConvertMaterialToObject() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30998 Offset: 0xC30998 VA: 0xC30998
[TooltipAttribute] // RVA: 0xC30998 Offset: 0xC30998 VA: 0xC30998
public class ConvertStringToInt : FsmStateAction // TypeDefIndex: 12414
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC9391C Offset: 0xC9391C VA: 0xC9391C
	[UIHintAttribute] // RVA: 0xC9391C Offset: 0xC9391C VA: 0xC9391C
	[TooltipAttribute] // RVA: 0xC9391C Offset: 0xC9391C VA: 0xC9391C
	public FsmString stringVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC9397C Offset: 0xC9397C VA: 0xC9397C
	[UIHintAttribute] // RVA: 0xC9397C Offset: 0xC9397C VA: 0xC9397C
	[TooltipAttribute] // RVA: 0xC9397C Offset: 0xC9397C VA: 0xC9397C
	public FsmInt intVariable; // 0x58
	[TooltipAttribute] // RVA: 0xC939DC Offset: 0xC939DC VA: 0xC939DC
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x1D3D30C Offset: 0x1D3D30C VA: 0x1D3D30C
	public void .ctor() { }

	// RVA: 0x1D3D314 Offset: 0x1D3D314 VA: 0x1D3D314 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3D320 Offset: 0x1D3D320 VA: 0x1D3D320 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D3D3B4 Offset: 0x1D3D3B4 VA: 0x1D3D3B4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1D3D35C Offset: 0x1D3D35C VA: 0x1D3D35C
	private void DoConvertStringToInt() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC309E8 Offset: 0xC309E8 VA: 0xC309E8
[TooltipAttribute] // RVA: 0xC309E8 Offset: 0xC309E8 VA: 0xC309E8
public class CreateEmptyObject : FsmStateAction // TypeDefIndex: 12415
{
	// Fields
	[TooltipAttribute] // RVA: 0xC93A14 Offset: 0xC93A14 VA: 0xC93A14
	public FsmGameObject gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xC93A4C Offset: 0xC93A4C VA: 0xC93A4C
	public FsmGameObject spawnPoint; // 0x58
	[TooltipAttribute] // RVA: 0xC93A84 Offset: 0xC93A84 VA: 0xC93A84
	public FsmVector3 position; // 0x60
	[TooltipAttribute] // RVA: 0xC93ABC Offset: 0xC93ABC VA: 0xC93ABC
	public FsmVector3 rotation; // 0x68
	[UIHintAttribute] // RVA: 0xC93AF4 Offset: 0xC93AF4 VA: 0xC93AF4
	[TooltipAttribute] // RVA: 0xC93AF4 Offset: 0xC93AF4 VA: 0xC93AF4
	public FsmGameObject storeObject; // 0x70

	// Methods

	// RVA: 0x1D3D3B8 Offset: 0x1D3D3B8 VA: 0x1D3D3B8
	public void .ctor() { }

	// RVA: 0x1D3D3C0 Offset: 0x1D3D3C0 VA: 0x1D3D3C0 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3D47C Offset: 0x1D3D47C VA: 0x1D3D47C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30A38 Offset: 0xC30A38 VA: 0xC30A38
[ActionTarget] // RVA: 0xC30A38 Offset: 0xC30A38 VA: 0xC30A38
[TooltipAttribute] // RVA: 0xC30A38 Offset: 0xC30A38 VA: 0xC30A38
public class CreateObject : FsmStateAction // TypeDefIndex: 12416
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC93B44 Offset: 0xC93B44 VA: 0xC93B44
	[TooltipAttribute] // RVA: 0xC93B44 Offset: 0xC93B44 VA: 0xC93B44
	public FsmGameObject gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xC93B90 Offset: 0xC93B90 VA: 0xC93B90
	public FsmGameObject spawnPoint; // 0x58
	[TooltipAttribute] // RVA: 0xC93BC8 Offset: 0xC93BC8 VA: 0xC93BC8
	public FsmVector3 position; // 0x60
	[TooltipAttribute] // RVA: 0xC93C00 Offset: 0xC93C00 VA: 0xC93C00
	public FsmVector3 rotation; // 0x68
	[UIHintAttribute] // RVA: 0xC93C38 Offset: 0xC93C38 VA: 0xC93C38
	[TooltipAttribute] // RVA: 0xC93C38 Offset: 0xC93C38 VA: 0xC93C38
	public FsmGameObject storeObject; // 0x70

	// Methods

	// RVA: 0x1D3D904 Offset: 0x1D3D904 VA: 0x1D3D904
	public void .ctor() { }

	// RVA: 0x1D3D90C Offset: 0x1D3D90C VA: 0x1D3D90C Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3D9C8 Offset: 0x1D3D9C8 VA: 0x1D3D9C8 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30AF4 Offset: 0xC30AF4 VA: 0xC30AF4
[TooltipAttribute] // RVA: 0xC30AF4 Offset: 0xC30AF4 VA: 0xC30AF4
public class CutToCamera : FsmStateAction // TypeDefIndex: 12417
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC93C88 Offset: 0xC93C88 VA: 0xC93C88
	[TooltipAttribute] // RVA: 0xC93C88 Offset: 0xC93C88 VA: 0xC93C88
	public Camera camera; // 0x50
	[TooltipAttribute] // RVA: 0xC93CD4 Offset: 0xC93CD4 VA: 0xC93CD4
	public bool makeMainCamera; // 0x58
	[TooltipAttribute] // RVA: 0xC93D0C Offset: 0xC93D0C VA: 0xC93D0C
	public bool cutBackOnExit; // 0x59
	private Camera oldCamera; // 0x60

	// Methods

	// RVA: 0x12EA23C Offset: 0x12EA23C VA: 0x12EA23C
	public void .ctor() { }

	// RVA: 0x12EA244 Offset: 0x12EA244 VA: 0x12EA244 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EA254 Offset: 0x12EA254 VA: 0x12EA254 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12EA430 Offset: 0x12EA430 VA: 0x12EA430 Slot: 37
	public override void OnExit() { }

	// RVA: 0x12EA340 Offset: 0x12EA340 VA: 0x12EA340
	private static void SwitchCamera(Camera camera1, Camera camera2) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30B44 Offset: 0xC30B44 VA: 0xC30B44
[TooltipAttribute] // RVA: 0xC30B44 Offset: 0xC30B44 VA: 0xC30B44
public class Assert : FsmStateAction, IEvaluatorContext // TypeDefIndex: 12418
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC93D44 Offset: 0xC93D44 VA: 0xC93D44
	[DebuggerBrowsableAttribute] // RVA: 0xC93D44 Offset: 0xC93D44 VA: 0xC93D44
	private CompiledAst <Ast>k__BackingField; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xC93D80 Offset: 0xC93D80 VA: 0xC93D80
	[DebuggerBrowsableAttribute] // RVA: 0xC93D80 Offset: 0xC93D80 VA: 0xC93D80
	private string <LastErrorMessage>k__BackingField; // 0x58
	[UIHintAttribute] // RVA: 0xC93DBC Offset: 0xC93DBC VA: 0xC93DBC
	[TooltipAttribute] // RVA: 0xC93DBC Offset: 0xC93DBC VA: 0xC93DBC
	public FsmString expression; // 0x60
	[TooltipAttribute] // RVA: 0xC93E0C Offset: 0xC93E0C VA: 0xC93E0C
	public Assert.AssertType assert; // 0x68
	[TooltipAttribute] // RVA: 0xC93E44 Offset: 0xC93E44 VA: 0xC93E44
	public bool everyFrame; // 0x6C
	private string cachedExpression; // 0x70

	// Properties
	public CompiledAst Ast { get; set; }
	public string LastErrorMessage { get; set; }

	// Methods

	// RVA: 0x1D31C10 Offset: 0x1D31C10 VA: 0x1D31C10
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD7AA0 Offset: 0xCD7AA0 VA: 0xCD7AA0
	// RVA: 0x1D31C18 Offset: 0x1D31C18 VA: 0x1D31C18
	public CompiledAst get_Ast() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD7AB0 Offset: 0xCD7AB0 VA: 0xCD7AB0
	// RVA: 0x1D31C20 Offset: 0x1D31C20 VA: 0x1D31C20
	public void set_Ast(CompiledAst value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD7AC0 Offset: 0xCD7AC0 VA: 0xCD7AC0
	// RVA: 0x1D31C28 Offset: 0x1D31C28 VA: 0x1D31C28
	public string get_LastErrorMessage() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD7AD0 Offset: 0xCD7AD0 VA: 0xCD7AD0
	// RVA: 0x1D31C30 Offset: 0x1D31C30 VA: 0x1D31C30
	public void set_LastErrorMessage(string value) { }

	// RVA: 0x1D31C38 Offset: 0x1D31C38 VA: 0x1D31C38 Slot: 62
	private FsmVar PlayMaker.ConditionalExpression.IEvaluatorContext.GetVariable(string name) { }
}

// Namespace: 
public enum Assert.AssertType // TypeDefIndex: 12419
{
	// Fields
	public int value__; // 0x0
	public const Assert.AssertType IsTrue = 0;
	public const Assert.AssertType IsFalse = 1;
}

// Namespace: HutongGames.PlayMaker.Actions
public abstract class BaseLogAction : FsmStateAction // TypeDefIndex: 12420
{
	// Fields
	public bool sendToUnityLog; // 0x49

	// Methods

	// RVA: 0x1D33204 Offset: 0x1D33204 VA: 0x1D33204
	protected void .ctor() { }

	// RVA: 0x1D3320C Offset: 0x1D3320C VA: 0x1D3320C Slot: 28
	public override void Reset() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30B94 Offset: 0xC30B94 VA: 0xC30B94
[TooltipAttribute] // RVA: 0xC30B94 Offset: 0xC30B94 VA: 0xC30B94
public class DebugEnum : BaseLogAction // TypeDefIndex: 12421
{
	// Fields
	[TooltipAttribute] // RVA: 0xC93E7C Offset: 0xC93E7C VA: 0xC93E7C
	public LogLevel logLevel; // 0x4C
	[UIHintAttribute] // RVA: 0xC93EB4 Offset: 0xC93EB4 VA: 0xC93EB4
	[TooltipAttribute] // RVA: 0xC93EB4 Offset: 0xC93EB4 VA: 0xC93EB4
	public FsmEnum enumVariable; // 0x50

	// Methods

	// RVA: 0x12EA91C Offset: 0x12EA91C VA: 0x12EA91C
	public void .ctor() { }

	// RVA: 0x12EA924 Offset: 0x12EA924 VA: 0x12EA924 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EA934 Offset: 0x12EA934 VA: 0x12EA934 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30BE4 Offset: 0xC30BE4 VA: 0xC30BE4
[TooltipAttribute] // RVA: 0xC30BE4 Offset: 0xC30BE4 VA: 0xC30BE4
public class DebugBool : BaseLogAction // TypeDefIndex: 12422
{
	// Fields
	[TooltipAttribute] // RVA: 0xC93F04 Offset: 0xC93F04 VA: 0xC93F04
	public LogLevel logLevel; // 0x4C
	[UIHintAttribute] // RVA: 0xC93F3C Offset: 0xC93F3C VA: 0xC93F3C
	[TooltipAttribute] // RVA: 0xC93F3C Offset: 0xC93F3C VA: 0xC93F3C
	public FsmBool boolVariable; // 0x50

	// Methods

	// RVA: 0x12EA44C Offset: 0x12EA44C VA: 0x12EA44C
	public void .ctor() { }

	// RVA: 0x12EA454 Offset: 0x12EA454 VA: 0x12EA454 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EA464 Offset: 0x12EA464 VA: 0x12EA464 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC30C34 Offset: 0xC30C34 VA: 0xC30C34
[TooltipAttribute] // RVA: 0xC30C34 Offset: 0xC30C34 VA: 0xC30C34
public class DebugDrawShape : FsmStateAction // TypeDefIndex: 12423
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC93F8C Offset: 0xC93F8C VA: 0xC93F8C
	[TooltipAttribute] // RVA: 0xC93F8C Offset: 0xC93F8C VA: 0xC93F8C
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xC93FD8 Offset: 0xC93FD8 VA: 0xC93FD8
	public DebugDrawShape.ShapeType shape; // 0x58
	[TooltipAttribute] // RVA: 0xC94010 Offset: 0xC94010 VA: 0xC94010
	public FsmColor color; // 0x60
	[TooltipAttribute] // RVA: 0xC94048 Offset: 0xC94048 VA: 0xC94048
	public FsmFloat radius; // 0x68
	[TooltipAttribute] // RVA: 0xC94080 Offset: 0xC94080 VA: 0xC94080
	public FsmVector3 size; // 0x70

	// Methods

	// RVA: 0x12EA5A8 Offset: 0x12EA5A8 VA: 0x12EA5A8
	public void .ctor() { }

	// RVA: 0x12EA5B0 Offset: 0x12EA5B0 VA: 0x12EA5B0 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EA640 Offset: 0x12EA640 VA: 0x12EA640 Slot: 38
	public override void OnDrawActionGizmos() { }
}

// Namespace: 
public enum DebugDrawShape.ShapeType // TypeDefIndex: 12424
{
	// Fields
	public int value__; // 0x0
	public const DebugDrawShape.ShapeType Sphere = 0;
	public const DebugDrawShape.ShapeType Cube = 1;
