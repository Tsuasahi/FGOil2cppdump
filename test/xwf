
// Namespace: 
public sealed class UIDrawCall.OnRenderCallback : MulticastDelegate // TypeDefIndex: 12162
{
	// Methods

	// RVA: 0x1B19CD0 Offset: 0x1B19CD0 VA: 0x1B19CD0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B18544 Offset: 0x1B18544 VA: 0x1B18544 Slot: 11
	public virtual void Invoke(Material mat) { }

	// RVA: 0x1B19CE0 Offset: 0x1B19CE0 VA: 0x1B19CE0 Slot: 12
	public virtual IAsyncResult BeginInvoke(Material mat, AsyncCallback callback, object object) { }

	// RVA: 0x1B19D04 Offset: 0x1B19D04 VA: 0x1B19D04 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2C9A4 Offset: 0xC2C9A4 VA: 0xC2C9A4
public class UIEventListener : MonoBehaviour // TypeDefIndex: 12163
{
	// Fields
	public object parameter; // 0x18
	public UIEventListener.VoidDelegate onSubmit; // 0x20
	public UIEventListener.VoidDelegate onClick; // 0x28
	public UIEventListener.VoidDelegate onDoubleClick; // 0x30
	public UIEventListener.BoolDelegate onHover; // 0x38
	public UIEventListener.BoolDelegate onPress; // 0x40
	public UIEventListener.BoolDelegate onSelect; // 0x48
	public UIEventListener.FloatDelegate onScroll; // 0x50
	public UIEventListener.VoidDelegate onDragStart; // 0x58
	public UIEventListener.VectorDelegate onDrag; // 0x60
	public UIEventListener.VoidDelegate onDragOver; // 0x68
	public UIEventListener.VoidDelegate onDragOut; // 0x70
	public UIEventListener.VoidDelegate onDragEnd; // 0x78
	public UIEventListener.ObjectDelegate onDrop; // 0x80
	public UIEventListener.KeyCodeDelegate onKey; // 0x88
	public UIEventListener.BoolDelegate onTooltip; // 0x90

	// Methods

	// RVA: 0x1B1C858 Offset: 0x1B1C858 VA: 0x1B1C858
	public void .ctor() { }

	// RVA: 0x1B1C860 Offset: 0x1B1C860 VA: 0x1B1C860
	private void OnSubmit() { }

	// RVA: 0x1B1CC40 Offset: 0x1B1CC40 VA: 0x1B1CC40
	private void OnClick() { }

	// RVA: 0x1B1CC80 Offset: 0x1B1CC80 VA: 0x1B1CC80
	private void OnDoubleClick() { }

	// RVA: 0x1B1CCC0 Offset: 0x1B1CCC0 VA: 0x1B1CCC0
	private void OnHover(bool isOver) { }

	// RVA: 0x1B1D0C8 Offset: 0x1B1D0C8 VA: 0x1B1D0C8
	private void OnPress(bool isPressed) { }

	// RVA: 0x1B1D110 Offset: 0x1B1D110 VA: 0x1B1D110
	private void OnSelect(bool selected) { }

	// RVA: 0x1B1D158 Offset: 0x1B1D158 VA: 0x1B1D158
	private void OnScroll(float delta) { }

	// RVA: 0x1B1D56C Offset: 0x1B1D56C VA: 0x1B1D56C
	private void OnDragStart() { }

	// RVA: 0x1B1D5AC Offset: 0x1B1D5AC VA: 0x1B1D5AC
	private void OnDrag(Vector2 delta) { }

	// RVA: 0x1B1D9F8 Offset: 0x1B1D9F8 VA: 0x1B1D9F8
	private void OnDragOver() { }

	// RVA: 0x1B1DA38 Offset: 0x1B1DA38 VA: 0x1B1DA38
	private void OnDragOut() { }

	// RVA: 0x1B1DA78 Offset: 0x1B1DA78 VA: 0x1B1DA78
	private void OnDragEnd() { }

	// RVA: 0x1B1DAB8 Offset: 0x1B1DAB8 VA: 0x1B1DAB8
	private void OnDrop(GameObject go) { }

	// RVA: 0x1B1DEC0 Offset: 0x1B1DEC0 VA: 0x1B1DEC0
	private void OnKey(KeyCode key) { }

	// RVA: 0x1B1E2C8 Offset: 0x1B1E2C8 VA: 0x1B1E2C8
	private void OnTooltip(bool show) { }

	// RVA: 0x1B1E310 Offset: 0x1B1E310 VA: 0x1B1E310
	public static UIEventListener Get(GameObject go) { }
}

// Namespace: 
public sealed class UIEventListener.VoidDelegate : MulticastDelegate // TypeDefIndex: 12164
{
	// Methods

	// RVA: 0x1B1E708 Offset: 0x1B1E708 VA: 0x1B1E708
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B1C8A0 Offset: 0x1B1C8A0 VA: 0x1B1C8A0 Slot: 11
	public virtual void Invoke(GameObject go) { }

	// RVA: 0x1B1E718 Offset: 0x1B1E718 VA: 0x1B1E718 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, AsyncCallback callback, object object) { }

	// RVA: 0x1B1E73C Offset: 0x1B1E73C VA: 0x1B1E73C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UIEventListener.BoolDelegate : MulticastDelegate // TypeDefIndex: 12165
{
	// Methods

	// RVA: 0x1B1E3D8 Offset: 0x1B1E3D8 VA: 0x1B1E3D8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B1CD08 Offset: 0x1B1CD08 VA: 0x1B1CD08 Slot: 11
	public virtual void Invoke(GameObject go, bool state) { }

	// RVA: 0x1B1E3E8 Offset: 0x1B1E3E8 VA: 0x1B1E3E8 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, bool state, AsyncCallback callback, object object) { }

	// RVA: 0x1B1E488 Offset: 0x1B1E488 VA: 0x1B1E488 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UIEventListener.FloatDelegate : MulticastDelegate // TypeDefIndex: 12166
{
	// Methods

	// RVA: 0x1B1E494 Offset: 0x1B1E494 VA: 0x1B1E494
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B1D1AC Offset: 0x1B1D1AC VA: 0x1B1D1AC Slot: 11
	public virtual void Invoke(GameObject go, float delta) { }

	// RVA: 0x1B1E4A4 Offset: 0x1B1E4A4 VA: 0x1B1E4A4 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, float delta, AsyncCallback callback, object object) { }

	// RVA: 0x1B1E540 Offset: 0x1B1E540 VA: 0x1B1E540 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UIEventListener.VectorDelegate : MulticastDelegate // TypeDefIndex: 12167
{
	// Methods

	// RVA: 0x1B1E650 Offset: 0x1B1E650 VA: 0x1B1E650
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B1D608 Offset: 0x1B1D608 VA: 0x1B1D608 Slot: 11
	public virtual void Invoke(GameObject go, Vector2 delta) { }

	// RVA: 0x1B1E660 Offset: 0x1B1E660 VA: 0x1B1E660 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, Vector2 delta, AsyncCallback callback, object object) { }

	// RVA: 0x1B1E6FC Offset: 0x1B1E6FC VA: 0x1B1E6FC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UIEventListener.ObjectDelegate : MulticastDelegate // TypeDefIndex: 12168
{
	// Methods

	// RVA: 0x1B1E604 Offset: 0x1B1E604 VA: 0x1B1E604
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B1DB00 Offset: 0x1B1DB00 VA: 0x1B1DB00 Slot: 11
	public virtual void Invoke(GameObject go, GameObject obj) { }

	// RVA: 0x1B1E614 Offset: 0x1B1E614 VA: 0x1B1E614 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, GameObject obj, AsyncCallback callback, object object) { }

	// RVA: 0x1B1E644 Offset: 0x1B1E644 VA: 0x1B1E644 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UIEventListener.KeyCodeDelegate : MulticastDelegate // TypeDefIndex: 12169
{
	// Methods

	// RVA: 0x1B1E54C Offset: 0x1B1E54C VA: 0x1B1E54C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B1DF08 Offset: 0x1B1DF08 VA: 0x1B1DF08 Slot: 11
	public virtual void Invoke(GameObject go, KeyCode key) { }

	// RVA: 0x1B1E55C Offset: 0x1B1E55C VA: 0x1B1E55C Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject go, KeyCode key, AsyncCallback callback, object object) { }

	// RVA: 0x1B1E5F8 Offset: 0x1B1E5F8 VA: 0x1B1E5F8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class UIGeometry // TypeDefIndex: 12170
{
	// Fields
	public BetterList<Vector3> verts; // 0x10
	public BetterList<Vector2> uvs; // 0x18
	public BetterList<Color32> cols; // 0x20
	private BetterList<Vector3> mRtpVerts; // 0x28
	private Vector3 mRtpNormal; // 0x30
	private Vector4 mRtpTan; // 0x3C

	// Properties
	public bool hasVertices { get; }
	public bool hasTransformed { get; }

	// Methods

	// RVA: 0x1BBF5FC Offset: 0x1BBF5FC VA: 0x1BBF5FC
	public void .ctor() { }

	// RVA: 0x1BBF6DC Offset: 0x1BBF6DC VA: 0x1BBF6DC
	public bool get_hasVertices() { }

	// RVA: 0x1BBF710 Offset: 0x1BBF710 VA: 0x1BBF710
	public bool get_hasTransformed() { }

	// RVA: 0x1BBF760 Offset: 0x1BBF760 VA: 0x1BBF760
	public void Clear() { }

	// RVA: 0x1BBF82C Offset: 0x1BBF82C VA: 0x1BBF82C
	public void ApplyTransform(Matrix4x4 widgetToPanel) { }

	// RVA: 0x1BBFA30 Offset: 0x1BBFA30 VA: 0x1BBFA30
	public void WriteToBuffers(BetterList<Vector3> v, BetterList<Vector2> u, BetterList<Color32> c, BetterList<Vector3> n, BetterList<Vector4> t) { }
}

// Namespace: 
public abstract class UIRect : MonoBehaviour // TypeDefIndex: 12171
{
	// Fields
	public UIRect.AnchorPoint leftAnchor; // 0x18
	public UIRect.AnchorPoint rightAnchor; // 0x20
	public UIRect.AnchorPoint bottomAnchor; // 0x28
	public UIRect.AnchorPoint topAnchor; // 0x30
	public UIRect.AnchorUpdate updateAnchors; // 0x38
	protected GameObject mGo; // 0x40
	protected Transform mTrans; // 0x48
	protected BetterList<UIRect> mChildren; // 0x50
	protected bool mChanged; // 0x58
	protected bool mStarted; // 0x59
	protected bool mParentFound; // 0x5A
	private bool mUpdateAnchors; // 0x5B
	private int mUpdateFrame; // 0x5C
	private bool mAnchorsCached; // 0x60
	private UIRoot mRoot; // 0x68
	private UIRect mParent; // 0x70
	private bool mRootSet; // 0x78
	protected Camera mCam; // 0x80
	public float finalAlpha; // 0x88
	protected static Vector3[] mSides; // 0x0

	// Properties
	public GameObject cachedGameObject { get; }
	public Transform cachedTransform { get; }
	public Camera anchorCamera { get; }
	public bool isFullyAnchored { get; }
	public virtual bool isAnchoredHorizontally { get; }
	public virtual bool isAnchoredVertically { get; }
	public virtual bool canBeAnchored { get; }
	public bool started { get; }
	public UIRect parent { get; }
	public UIRoot root { get; }
	public bool isAnchored { get; }
	public abstract float alpha { get; set; }
	public abstract Vector3[] localCorners { get; }
	public abstract Vector3[] worldCorners { get; }
	protected float cameraRayDistance { get; }

	// Methods

	// RVA: 0x1C3F868 Offset: 0x1C3F868 VA: 0x1C3F868
	protected void .ctor() { }

	// RVA: 0x1C47468 Offset: 0x1C47468 VA: 0x1C47468
	public GameObject get_cachedGameObject() { }

	// RVA: 0x1C419D0 Offset: 0x1C419D0 VA: 0x1C419D0
	public Transform get_cachedTransform() { }

	// RVA: 0x1C40634 Offset: 0x1C40634 VA: 0x1C40634
	public Camera get_anchorCamera() { }

	// RVA: 0x1C52908 Offset: 0x1C52908 VA: 0x1C52908
	public bool get_isFullyAnchored() { }

	// RVA: 0x1C52A54 Offset: 0x1C52A54 VA: 0x1C52A54 Slot: 4
	public virtual bool get_isAnchoredHorizontally() { }

	// RVA: 0x1C52B28 Offset: 0x1C52B28 VA: 0x1C52B28 Slot: 5
	public virtual bool get_isAnchoredVertically() { }

	// RVA: 0x1C52BFC Offset: 0x1C52BFC VA: 0x1C52BFC Slot: 6
	public virtual bool get_canBeAnchored() { }

	// RVA: 0x1C52C04 Offset: 0x1C52C04 VA: 0x1C52C04
	public bool get_started() { }

	// RVA: 0x1C42F38 Offset: 0x1C42F38 VA: 0x1C42F38
	public UIRect get_parent() { }

	// RVA: 0x1C40968 Offset: 0x1C40968 VA: 0x1C40968
	public UIRoot get_root() { }

	// RVA: 0x1C432BC Offset: 0x1C432BC VA: 0x1C432BC
	public bool get_isAnchored() { }

	// RVA: -1 Offset: -1 Slot: 7
	public abstract float get_alpha();

	// RVA: -1 Offset: -1 Slot: 8
	public abstract void set_alpha(float value);

	// RVA: -1 Offset: -1 Slot: 9
	public abstract float CalculateFinalAlpha(int frameID);

	// RVA: -1 Offset: -1 Slot: 10
	public abstract Vector3[] get_localCorners();

	// RVA: -1 Offset: -1 Slot: 11
	public abstract Vector3[] get_worldCorners();

	// RVA: 0x1C4212C Offset: 0x1C4212C VA: 0x1C4212C
	protected float get_cameraRayDistance() { }

	// RVA: 0x1C42D90 Offset: 0x1C42D90 VA: 0x1C42D90 Slot: 12
	public virtual void Invalidate(bool includeChildren) { }

	// RVA: 0x1C42AA0 Offset: 0x1C42AA0 VA: 0x1C42AA0 Slot: 13
	public virtual Vector3[] GetSides(Transform relativeTo) { }

	// RVA: 0x1C459E4 Offset: 0x1C459E4 VA: 0x1C459E4
	protected Vector3 GetLocalPos(UIRect.AnchorPoint ac, Transform trans) { }

	// RVA: 0x1C44564 Offset: 0x1C44564 VA: 0x1C44564 Slot: 14
	protected virtual void OnEnable() { }

	// RVA: 0x1C449C8 Offset: 0x1C449C8 VA: 0x1C449C8 Slot: 15
	protected virtual void OnInit() { }

	// RVA: 0x1C44CC0 Offset: 0x1C44CC0 VA: 0x1C44CC0 Slot: 16
	protected virtual void OnDisable() { }

	// RVA: 0x1C52D04 Offset: 0x1C52D04 VA: 0x1C52D04
	protected void Start() { }

	// RVA: 0x1C52D48 Offset: 0x1C52D48 VA: 0x1C52D48
	public void UpdateMe() { }

	// RVA: 0x1C53178 Offset: 0x1C53178 VA: 0x1C53178
	public void UpdateAnchors() { }

	// RVA: -1 Offset: -1 Slot: 17
	protected abstract void OnAnchor();

	// RVA: 0x1C531C4 Offset: 0x1C531C4 VA: 0x1C531C4
	public void SetAnchor(Transform t) { }

	// RVA: 0x1C53248 Offset: 0x1C53248 VA: 0x1C53248
	public void SetAnchor(GameObject go) { }

	// RVA: 0x1C53344 Offset: 0x1C53344 VA: 0x1C53344
	public void SetAnchor(GameObject go, int left, int bottom, int right, int top) { }

	// RVA: 0x1C474F8 Offset: 0x1C474F8 VA: 0x1C474F8
	public void ResetAnchors() { }

	// RVA: 0x1C53640 Offset: 0x1C53640 VA: 0x1C53640
	public void ResetAndUpdateAnchors() { }

	// RVA: -1 Offset: -1 Slot: 18
	public abstract void SetRect(float x, float y, float width, float height);

	// RVA: 0x1C53508 Offset: 0x1C53508 VA: 0x1C53508
	private void FindCameraFor(UIRect.AnchorPoint ap) { }

	// RVA: 0x1C44310 Offset: 0x1C44310 VA: 0x1C44310 Slot: 19
	public virtual void ParentHasChanged() { }

	// RVA: -1 Offset: -1 Slot: 20
	protected abstract void OnStart();

	// RVA: 0x1C53664 Offset: 0x1C53664 VA: 0x1C53664 Slot: 21
	protected virtual void OnUpdate() { }

	// RVA: 0x1C53668 Offset: 0x1C53668 VA: 0x1C53668
	private static void .cctor() { }
}

// Namespace: 
[Serializable]
public class UIRect.AnchorPoint // TypeDefIndex: 12172
{
	// Fields
	public Transform target; // 0x10
	public float relative; // 0x18
	public int absolute; // 0x1C
	public UIRect rect; // 0x20
	public Camera targetCam; // 0x28

	// Methods

	// RVA: 0x1C528CC Offset: 0x1C528CC VA: 0x1C528CC
	public void .ctor() { }

	// RVA: 0x1C528D4 Offset: 0x1C528D4 VA: 0x1C528D4
	public void .ctor(float relative) { }

	// RVA: 0x1C536CC Offset: 0x1C536CC VA: 0x1C536CC
	public void Set(float relative, float absolute) { }

	// RVA: 0x1C53754 Offset: 0x1C53754 VA: 0x1C53754
	public void Set(Transform target, float relative, float absolute) { }

	// RVA: 0x1C537EC Offset: 0x1C537EC VA: 0x1C537EC
	public void SetToNearest(float abs0, float abs1, float abs2) { }

	// RVA: 0x1C53808 Offset: 0x1C53808 VA: 0x1C53808
	public void SetToNearest(float rel0, float rel1, float rel2, float abs0, float abs1, float abs2) { }

	// RVA: 0x1C4341C Offset: 0x1C4341C VA: 0x1C4341C
	public void SetHorizontal(Transform parent, float localPos) { }

	// RVA: 0x1C43610 Offset: 0x1C43610 VA: 0x1C43610
	public void SetVertical(Transform parent, float localPos) { }

	// RVA: 0x1C45834 Offset: 0x1C45834 VA: 0x1C45834
	public Vector3[] GetSides(Transform relativeTo) { }
}

// Namespace: 
public enum UIRect.AnchorUpdate // TypeDefIndex: 12173
{
	// Fields
	public int value__; // 0x0
	public const UIRect.AnchorUpdate OnEnable = 0;
	public const UIRect.AnchorUpdate OnUpdate = 1;
	public const UIRect.AnchorUpdate OnStart = 2;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2C9DC Offset: 0xC2C9DC VA: 0xC2C9DC
[AddComponentMenu] // RVA: 0xC2C9DC Offset: 0xC2C9DC VA: 0xC2C9DC
public class UISnapshotPoint : MonoBehaviour // TypeDefIndex: 12174
{
	// Fields
	public bool isOrthographic; // 0x18
	public float nearClip; // 0x1C
	public float farClip; // 0x20
	[RangeAttribute] // RVA: 0xC85444 Offset: 0xC85444 VA: 0xC85444
	public int fieldOfView; // 0x24
	public float orthoSize; // 0x28
	public Texture2D thumbnail; // 0x30

	// Methods

	// RVA: 0x18255E8 Offset: 0x18255E8 VA: 0x18255E8
	public void .ctor() { }

	// RVA: 0x1825610 Offset: 0x1825610 VA: 0x1825610
	private void Start() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2CA28 Offset: 0xC2CA28 VA: 0xC2CA28
[AddComponentMenu] // RVA: 0xC2CA28 Offset: 0xC2CA28 VA: 0xC2CA28
public class UIWidget : UIRect // TypeDefIndex: 12175
{
	// Fields
	[HideInInspector] // RVA: 0xC85460 Offset: 0xC85460 VA: 0xC85460
	[SerializeField] // RVA: 0xC85460 Offset: 0xC85460 VA: 0xC85460
	protected Color mColor; // 0x8C
	[HideInInspector] // RVA: 0xC85498 Offset: 0xC85498 VA: 0xC85498
	[SerializeField] // RVA: 0xC85498 Offset: 0xC85498 VA: 0xC85498
	protected UIWidget.Pivot mPivot; // 0x9C
	[HideInInspector] // RVA: 0xC854D0 Offset: 0xC854D0 VA: 0xC854D0
	[SerializeField] // RVA: 0xC854D0 Offset: 0xC854D0 VA: 0xC854D0
	protected int mWidth; // 0xA0
	[HideInInspector] // RVA: 0xC85508 Offset: 0xC85508 VA: 0xC85508
	[SerializeField] // RVA: 0xC85508 Offset: 0xC85508 VA: 0xC85508
	protected int mHeight; // 0xA4
	[HideInInspector] // RVA: 0xC85540 Offset: 0xC85540 VA: 0xC85540
	[SerializeField] // RVA: 0xC85540 Offset: 0xC85540 VA: 0xC85540
	protected int mDepth; // 0xA8
	public UIWidget.OnDimensionsChanged onChange; // 0xB0
	public UIWidget.OnPostFillCallback onPostFill; // 0xB8
	public UIDrawCall.OnRenderCallback mOnRender; // 0xC0
	public bool autoResizeBoxCollider; // 0xC8
	public bool hideIfOffScreen; // 0xC9
	public UIWidget.AspectRatioSource keepAspectRatio; // 0xCC
	public float aspectRatio; // 0xD0
	public UIWidget.HitCheck hitCheck; // 0xD8
	public UIPanel panel; // 0xE0
	public UIGeometry geometry; // 0xE8
	public bool fillGeometry; // 0xF0
	protected bool mPlayMode; // 0xF1
	protected Vector4 mDrawRegion; // 0xF4
	private Matrix4x4 mLocalToPanel; // 0x104
	private bool mIsVisibleByAlpha; // 0x144
	private bool mIsVisibleByPanel; // 0x145
	private bool mIsInFront; // 0x146
	private float mLastAlpha; // 0x148
	private bool mMoved; // 0x14C
	public UIDrawCall drawCall; // 0x150
	protected Vector3[] mCorners; // 0x158
	private int mAlphaFrameID; // 0x160
	private int mMatrixFrame; // 0x164
	private Vector3 mOldV0; // 0x168
	private Vector3 mOldV1; // 0x174

	// Properties
	public UIDrawCall.OnRenderCallback onRender { get; set; }
	public Vector4 drawRegion { get; set; }
	public Vector2 pivotOffset { get; }
	public int width { get; set; }
	public int height { get; set; }
	public Color color { get; set; }
	public override float alpha { get; set; }
	public bool isVisible { get; }
	public bool hasVertices { get; }
	public UIWidget.Pivot rawPivot { get; set; }
	public UIWidget.Pivot pivot { get; set; }
	public int depth { get; set; }
	public int raycastDepth { get; }
	public override Vector3[] localCorners { get; }
	public virtual Vector2 localSize { get; }
	public Vector3 localCenter { get; }
	public override Vector3[] worldCorners { get; }
	public Vector3 worldCenter { get; }
	public virtual Vector4 drawingDimensions { get; }
	public virtual Material material { get; set; }
	public virtual Texture mainTexture { get; set; }
	public virtual Shader shader { get; set; }
	[ObsoleteAttribute] // RVA: 0xCDED30 Offset: 0xCDED30 VA: 0xCDED30
	public Vector2 relativeSize { get; }
	public bool hasBoxCollider { get; }
	public virtual int minWidth { get; }
	public virtual int minHeight { get; }
	public virtual Vector4 border { get; set; }

	// Methods

	// RVA: 0x1AEE518 Offset: 0x1AEE518 VA: 0x1AEE518
	public void .ctor() { }

	// RVA: 0x1AF5528 Offset: 0x1AF5528 VA: 0x1AF5528
	public UIDrawCall.OnRenderCallback get_onRender() { }

	// RVA: 0x1AF5530 Offset: 0x1AF5530 VA: 0x1AF5530
	public void set_onRender(UIDrawCall.OnRenderCallback value) { }

	// RVA: 0x1AF5758 Offset: 0x1AF5758 VA: 0x1AF5758
	public Vector4 get_drawRegion() { }

	// RVA: 0x1AEACC4 Offset: 0x1AEACC4 VA: 0x1AEACC4
	public void set_drawRegion(Vector4 value) { }

	// RVA: 0x1AEA5E0 Offset: 0x1AEA5E0 VA: 0x1AEA5E0
	public Vector2 get_pivotOffset() { }

	// RVA: 0x1AE6C40 Offset: 0x1AE6C40 VA: 0x1AE6C40
	public int get_width() { }

	// RVA: 0x1AE6C50 Offset: 0x1AE6C50 VA: 0x1AE6C50
	public void set_width(int value) { }

	// RVA: 0x1AE6C48 Offset: 0x1AE6C48 VA: 0x1AE6C48
	public int get_height() { }

	// RVA: 0x1AE6E90 Offset: 0x1AE6E90 VA: 0x1AE6E90
	public void set_height(int value) { }

	// RVA: 0x1AE53E8 Offset: 0x1AE53E8 VA: 0x1AE53E8
	public Color get_color() { }

	// RVA: 0x1AED374 Offset: 0x1AED374 VA: 0x1AED374
	public void set_color(Color value) { }

	// RVA: 0x1AF596C Offset: 0x1AF596C VA: 0x1AF596C Slot: 7
	public override float get_alpha() { }

	// RVA: 0x1AF5974 Offset: 0x1AF5974 VA: 0x1AF5974 Slot: 8
	public override void set_alpha(float value) { }

	// RVA: 0x1AF5998 Offset: 0x1AF5998 VA: 0x1AF5998
	public bool get_isVisible() { }

	// RVA: 0x1AF5A3C Offset: 0x1AF5A3C VA: 0x1AF5A3C
	public bool get_hasVertices() { }

	// RVA: 0x1AF5A50 Offset: 0x1AF5A50 VA: 0x1AF5A50
	public UIWidget.Pivot get_rawPivot() { }

	// RVA: 0x1AF5A58 Offset: 0x1AF5A58 VA: 0x1AF5A58
	public void set_rawPivot(UIWidget.Pivot value) { }

	// RVA: 0x1AF5814 Offset: 0x1AF5814 VA: 0x1AF5814
	public UIWidget.Pivot get_pivot() { }

	// RVA: 0x1AE8F58 Offset: 0x1AE8F58 VA: 0x1AE8F58
	public void set_pivot(UIWidget.Pivot value) { }

	// RVA: 0x1AF5AB0 Offset: 0x1AF5AB0 VA: 0x1AF5AB0
	public int get_depth() { }

	// RVA: 0x1AF5AB8 Offset: 0x1AF5AB8 VA: 0x1AF5AB8
	public void set_depth(int value) { }

	// RVA: 0x1AF5C0C Offset: 0x1AF5C0C VA: 0x1AF5C0C
	public int get_raycastDepth() { }

	// RVA: 0x1AF5EB4 Offset: 0x1AF5EB4 VA: 0x1AF5EB4 Slot: 10
	public override Vector3[] get_localCorners() { }

	// RVA: 0x1AF6088 Offset: 0x1AF6088 VA: 0x1AF6088 Slot: 22
	public virtual Vector2 get_localSize() { }

	// RVA: 0x1AF61BC Offset: 0x1AF61BC VA: 0x1AF61BC
	public Vector3 get_localCenter() { }

	// RVA: 0x1AF62B4 Offset: 0x1AF62B4 VA: 0x1AF62B4 Slot: 11
	public override Vector3[] get_worldCorners() { }

	// RVA: 0x1AF64D8 Offset: 0x1AF64D8 VA: 0x1AF64D8
	public Vector3 get_worldCenter() { }

	// RVA: 0x1AF6544 Offset: 0x1AF6544 VA: 0x1AF6544 Slot: 23
	public virtual Vector4 get_drawingDimensions() { }

	// RVA: 0x1AF6724 Offset: 0x1AF6724 VA: 0x1AF6724 Slot: 24
	public virtual Material get_material() { }

	// RVA: 0x1AF672C Offset: 0x1AF672C VA: 0x1AF672C Slot: 25
	public virtual void set_material(Material value) { }

	// RVA: 0x1AF67F0 Offset: 0x1AF67F0 VA: 0x1AF67F0 Slot: 26
	public virtual Texture get_mainTexture() { }

	// RVA: 0x1AF68A4 Offset: 0x1AF68A4 VA: 0x1AF68A4 Slot: 27
	public virtual void set_mainTexture(Texture value) { }

	// RVA: 0x1AF6968 Offset: 0x1AF6968 VA: 0x1AF6968 Slot: 28
	public virtual Shader get_shader() { }

	// RVA: 0x1AF6A1C Offset: 0x1AF6A1C VA: 0x1AF6A1C Slot: 29
	public virtual void set_shader(Shader value) { }

	// RVA: 0x1AF6AE0 Offset: 0x1AF6AE0 VA: 0x1AF6AE0
	public Vector2 get_relativeSize() { }

	// RVA: 0x1AF6B40 Offset: 0x1AF6B40 VA: 0x1AF6B40
	public bool get_hasBoxCollider() { }

	// RVA: 0x1AF581C Offset: 0x1AF581C VA: 0x1AF581C
	public void SetDimensions(int w, int h) { }

	// RVA: 0x1AF6C64 Offset: 0x1AF6C64 VA: 0x1AF6C64 Slot: 13
	public override Vector3[] GetSides(Transform relativeTo) { }

	// RVA: 0x1AF6FCC Offset: 0x1AF6FCC VA: 0x1AF6FCC Slot: 9
	public override float CalculateFinalAlpha(int frameID) { }

	// RVA: 0x1AF7004 Offset: 0x1AF7004 VA: 0x1AF7004
	protected void UpdateFinalAlpha(int frameID) { }

	// RVA: 0x1AF70E0 Offset: 0x1AF70E0 VA: 0x1AF70E0 Slot: 12
	public override void Invalidate(bool includeChildren) { }

	// RVA: 0x1AF7264 Offset: 0x1AF7264 VA: 0x1AF7264
	public float CalculateCumulativeAlpha(int frameID) { }

	// RVA: 0x1AF7378 Offset: 0x1AF7378 VA: 0x1AF7378 Slot: 18
	public override void SetRect(float x, float y, float width, float height) { }

	// RVA: 0x1AF5764 Offset: 0x1AF5764 VA: 0x1AF5764
	public void ResizeCollider() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD72D8 Offset: 0xCD72D8 VA: 0xCD72D8
	[DebuggerStepThroughAttribute] // RVA: 0xCD72D8 Offset: 0xCD72D8 VA: 0xCD72D8
	// RVA: 0x1AF777C Offset: 0x1AF777C VA: 0x1AF777C
	public static int FullCompareFunc(UIWidget left, UIWidget right) { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7310 Offset: 0xCD7310 VA: 0xCD7310
	[DebuggerStepThroughAttribute] // RVA: 0xCD7310 Offset: 0xCD7310 VA: 0xCD7310
	// RVA: 0x1AF7834 Offset: 0x1AF7834 VA: 0x1AF7834
	public static int PanelCompareFunc(UIWidget left, UIWidget right) { }

	// RVA: 0x1AF79CC Offset: 0x1AF79CC VA: 0x1AF79CC
	public Bounds CalculateBounds() { }

	// RVA: 0x1AE6968 Offset: 0x1AE6968 VA: 0x1AE6968
	public Bounds CalculateBounds(Transform relativeParent) { }

	// RVA: 0x1AF79D4 Offset: 0x1AF79D4 VA: 0x1AF79D4
	public void SetDirty() { }

	// RVA: 0x1AE9C40 Offset: 0x1AE9C40 VA: 0x1AE9C40
	public void RemoveFromPanel() { }

	// RVA: 0x1AF7A98 Offset: 0x1AF7A98 VA: 0x1AF7A98 Slot: 30
	public virtual void MarkAsChanged() { }

	// RVA: 0x1AF5CF0 Offset: 0x1AF5CF0 VA: 0x1AF5CF0
	public UIPanel CreatePanel() { }

	// RVA: 0x1AF7BC0 Offset: 0x1AF7BC0 VA: 0x1AF7BC0
	public void CheckLayer() { }

	// RVA: 0x1AF7D14 Offset: 0x1AF7D14 VA: 0x1AF7D14 Slot: 19
	public override void ParentHasChanged() { }

	// RVA: 0x1AF7E64 Offset: 0x1AF7E64 VA: 0x1AF7E64 Slot: 31
	protected virtual void Awake() { }

	// RVA: 0x1AF7E9C Offset: 0x1AF7E9C VA: 0x1AF7E9C Slot: 15
	protected override void OnInit() { }

	// RVA: 0x1AF8000 Offset: 0x1AF8000 VA: 0x1AF8000 Slot: 32
	protected virtual void UpgradeFrom265() { }

	// RVA: 0x1AF8104 Offset: 0x1AF8104 VA: 0x1AF8104 Slot: 20
	protected override void OnStart() { }

	// RVA: 0x1AF8108 Offset: 0x1AF8108 VA: 0x1AF8108 Slot: 17
	protected override void OnAnchor() { }

	// RVA: 0x1AEAC3C Offset: 0x1AEAC3C VA: 0x1AEAC3C Slot: 21
	protected override void OnUpdate() { }

	// RVA: 0x1AF8D10 Offset: 0x1AF8D10 VA: 0x1AF8D10
	private void OnApplicationPause(bool paused) { }

	// RVA: 0x1AF8D28 Offset: 0x1AF8D28 VA: 0x1AF8D28 Slot: 16
	protected override void OnDisable() { }

	// RVA: 0x1AF8D50 Offset: 0x1AF8D50 VA: 0x1AF8D50
	private void OnDestroy() { }

	// RVA: 0x1AF7328 Offset: 0x1AF7328 VA: 0x1AF7328
	public bool UpdateVisibility(bool visibleByAlpha, bool visibleByPanel) { }

	// RVA: 0x1AF8D54 Offset: 0x1AF8D54 VA: 0x1AF8D54
	public bool UpdateTransform(int frame) { }

	// RVA: 0x1AF9320 Offset: 0x1AF9320 VA: 0x1AF9320
	public bool UpdateGeometry(int frame) { }

	// RVA: 0x1AF9814 Offset: 0x1AF9814 VA: 0x1AF9814
	public void WriteToBuffers(BetterList<Vector3> v, BetterList<Vector2> u, BetterList<Color32> c, BetterList<Vector3> n, BetterList<Vector4> t) { }

	// RVA: 0x1AEA7E4 Offset: 0x1AEA7E4 VA: 0x1AEA7E4 Slot: 33
	public virtual void MakePixelPerfect() { }

	// RVA: 0x1AF987C Offset: 0x1AF987C VA: 0x1AF987C Slot: 34
	public virtual int get_minWidth() { }

	// RVA: 0x1AF9884 Offset: 0x1AF9884 VA: 0x1AF9884 Slot: 35
	public virtual int get_minHeight() { }

	// RVA: 0x1AF988C Offset: 0x1AF988C VA: 0x1AF988C Slot: 36
	public virtual Vector4 get_border() { }

	// RVA: 0x1AF98EC Offset: 0x1AF98EC VA: 0x1AF98EC Slot: 37
	public virtual void set_border(Vector4 value) { }

	// RVA: 0x1AF98F0 Offset: 0x1AF98F0 VA: 0x1AF98F0 Slot: 38
	public virtual void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }
}

// Namespace: 
public enum UIWidget.Pivot // TypeDefIndex: 12176
{
	// Fields
	public int value__; // 0x0
	public const UIWidget.Pivot TopLeft = 0;
	public const UIWidget.Pivot Top = 1;
	public const UIWidget.Pivot TopRight = 2;
	public const UIWidget.Pivot Left = 3;
	public const UIWidget.Pivot Center = 4;
	public const UIWidget.Pivot Right = 5;
	public const UIWidget.Pivot BottomLeft = 6;
	public const UIWidget.Pivot Bottom = 7;
	public const UIWidget.Pivot BottomRight = 8;
}

// Namespace: 
public sealed class UIWidget.OnDimensionsChanged : MulticastDelegate // TypeDefIndex: 12177
{
	// Methods

	// RVA: 0x1AF9C50 Offset: 0x1AF9C50 VA: 0x1AF9C50
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1AF9120 Offset: 0x1AF9120 VA: 0x1AF9120 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1AF9C60 Offset: 0x1AF9C60 VA: 0x1AF9C60 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1AF9C94 Offset: 0x1AF9C94 VA: 0x1AF9C94 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class UIWidget.OnPostFillCallback : MulticastDelegate // TypeDefIndex: 12178
{
	// Methods

	// RVA: 0x1AF9CA0 Offset: 0x1AF9CA0 VA: 0x1AF9CA0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1AEB1BC Offset: 0x1AEB1BC VA: 0x1AEB1BC Slot: 11
	public virtual void Invoke(UIWidget widget, int bufferOffset, BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }

	// RVA: 0x1AF9CB0 Offset: 0x1AF9CB0 VA: 0x1AF9CB0 Slot: 12
	public virtual IAsyncResult BeginInvoke(UIWidget widget, int bufferOffset, BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols, AsyncCallback callback, object object) { }

	// RVA: 0x1AF9D64 Offset: 0x1AF9D64 VA: 0x1AF9D64 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public enum UIWidget.AspectRatioSource // TypeDefIndex: 12179
{
	// Fields
	public int value__; // 0x0
	public const UIWidget.AspectRatioSource Free = 0;
	public const UIWidget.AspectRatioSource BasedOnWidth = 1;
	public const UIWidget.AspectRatioSource BasedOnHeight = 2;
}

// Namespace: 
public sealed class UIWidget.HitCheck : MulticastDelegate // TypeDefIndex: 12180
{
	// Methods

	// RVA: 0x1AF98F4 Offset: 0x1AF98F4 VA: 0x1AF98F4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1AF9904 Offset: 0x1AF9904 VA: 0x1AF9904 Slot: 11
	public virtual bool Invoke(Vector3 worldPos) { }

	// RVA: 0x1AF9B84 Offset: 0x1AF9B84 VA: 0x1AF9B84 Slot: 12
	public virtual IAsyncResult BeginInvoke(Vector3 worldPos, AsyncCallback callback, object object) { }

	// RVA: 0x1AF9C14 Offset: 0x1AF9C14 VA: 0x1AF9C14 Slot: 13
	public virtual bool EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2CA74 Offset: 0xC2CA74 VA: 0xC2CA74
public class AnimatedAlpha : MonoBehaviour // TypeDefIndex: 12181
{
	// Fields
	[RangeAttribute] // RVA: 0xC85578 Offset: 0xC85578 VA: 0xC85578
	public float alpha; // 0x18
	private UIWidget mWidget; // 0x20
	private UIPanel mPanel; // 0x28

	// Methods

	// RVA: 0x107AD68 Offset: 0x107AD68 VA: 0x107AD68
	public void .ctor() { }

	// RVA: 0x107AD78 Offset: 0x107AD78 VA: 0x107AD78
	private void OnEnable() { }

	// RVA: 0x107ADEC Offset: 0x107ADEC VA: 0x107ADEC
	private void LateUpdate() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2CA84 Offset: 0xC2CA84 VA: 0xC2CA84
[RequireComponent] // RVA: 0xC2CA84 Offset: 0xC2CA84 VA: 0xC2CA84
public class AnimatedColor : MonoBehaviour // TypeDefIndex: 12182
{
	// Fields
	public Color color; // 0x18
	private UIWidget mWidget; // 0x28

	// Methods

	// RVA: 0x107AF04 Offset: 0x107AF04 VA: 0x107AF04
	public void .ctor() { }

	// RVA: 0x107AF38 Offset: 0x107AF38 VA: 0x107AF38
	private void OnEnable() { }

	// RVA: 0x107AF94 Offset: 0x107AF94 VA: 0x107AF94
	private void LateUpdate() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2CAF8 Offset: 0xC2CAF8 VA: 0xC2CAF8
public class AnimatedWidget : MonoBehaviour // TypeDefIndex: 12183
{
	// Fields
	public float width; // 0x18
	public float height; // 0x1C
	private UIWidget mWidget; // 0x20

	// Methods

	// RVA: 0x107AFEC Offset: 0x107AFEC VA: 0x107AFEC
	public void .ctor() { }

	// RVA: 0x107AFFC Offset: 0x107AFFC VA: 0x107AFFC
	private void OnEnable() { }

	// RVA: 0x107B058 Offset: 0x107B058 VA: 0x107B058
	private void LateUpdate() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2CB08 Offset: 0xC2CB08 VA: 0xC2CB08
public class SpringPosition : MonoBehaviour // TypeDefIndex: 12184
{
	// Fields
	public static SpringPosition current; // 0x0
	public Vector3 target; // 0x18
	public float strength; // 0x24
	public bool worldSpace; // 0x28
	public bool ignoreTimeScale; // 0x29
	public bool updateScrollView; // 0x2A
	public SpringPosition.OnFinished onFinished; // 0x30
	[SerializeField] // RVA: 0xC85590 Offset: 0xC85590 VA: 0xC85590
	[HideInInspector] // RVA: 0xC85590 Offset: 0xC85590 VA: 0xC85590
	private GameObject eventReceiver; // 0x38
	[SerializeField] // RVA: 0xC855C8 Offset: 0xC855C8 VA: 0xC855C8
	[HideInInspector] // RVA: 0xC855C8 Offset: 0xC855C8 VA: 0xC855C8
	public string callWhenFinished; // 0x40
	private Transform mTrans; // 0x48
	private float mThreshold; // 0x50
	private UIScrollView mSv; // 0x58

	// Methods

	// RVA: 0x13E4778 Offset: 0x13E4778 VA: 0x13E4778
	public void .ctor() { }

	// RVA: 0x13E47F8 Offset: 0x13E47F8 VA: 0x13E47F8
	private void Start() { }

	// RVA: 0x13E489C Offset: 0x13E489C VA: 0x13E489C
	private void Update() { }

	// RVA: 0x13E4D5C Offset: 0x13E4D5C VA: 0x13E4D5C
	private void NotifyListeners() { }

	// RVA: 0x13E5068 Offset: 0x13E5068 VA: 0x13E5068
	public static SpringPosition Begin(GameObject go, Vector3 pos, float strength) { }
}

// Namespace: 
public sealed class SpringPosition.OnFinished : MulticastDelegate // TypeDefIndex: 12185
{
	// Methods

	// RVA: 0x13E51E4 Offset: 0x13E51E4 VA: 0x13E51E4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x13E4E68 Offset: 0x13E4E68 VA: 0x13E4E68 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x13E51F4 Offset: 0x13E51F4 VA: 0x13E51F4 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x13E5228 Offset: 0x13E5228 VA: 0x13E5228 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2CB40 Offset: 0xC2CB40 VA: 0xC2CB40
public class TweenAlpha : UITweener // TypeDefIndex: 12186
{
	// Fields
	[RangeAttribute] // RVA: 0xC85600 Offset: 0xC85600 VA: 0xC85600
	public float from; // 0x78
	[RangeAttribute] // RVA: 0xC85618 Offset: 0xC85618 VA: 0xC85618
	public float to; // 0x7C
	private bool mCached; // 0x80
	private UIRect mRect; // 0x88
	private Material mMat; // 0x90
	private SpriteRenderer mSr; // 0x98

	// Properties
	[ObsoleteAttribute] // RVA: 0xCDED68 Offset: 0xCDED68 VA: 0xCDED68
	public float alpha { get; set; }
