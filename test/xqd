	protected string message; // 0x40
	protected Font font; // 0x48

	// Methods

	// RVA: 0x20AC758 Offset: 0x20AC758 VA: 0x20AC758
	public void .ctor() { }

	// RVA: 0x20AC760 Offset: 0x20AC760 VA: 0x20AC760
	public void SetItem(ScriptSelectListViewItem item, ScriptSelectListViewItemDraw.DispMode mode) { }

	// RVA: 0x20AC934 Offset: 0x20AC934 VA: 0x20AC934
	public void NoSelectDecide(Action callback) { }

	// RVA: 0x20ACA6C Offset: 0x20ACA6C VA: 0x20ACA6C
	public void SelectDecide(Action callback) { }

	// RVA: 0x20ACC4C Offset: 0x20ACC4C VA: 0x20ACC4C
	public void EndSelectDecideMove1() { }

	// RVA: 0x20ACCD0 Offset: 0x20ACCD0 VA: 0x20ACCD0
	public void EndSelectDecideMove2() { }

	// RVA: 0x20ACD98 Offset: 0x20ACD98 VA: 0x20ACD98
	protected void EndMove() { }
}

// Namespace: 
public enum ScriptSelectListViewItemDraw.DispMode // TypeDefIndex: 8499
{
	// Fields
	public int value__; // 0x0
	public const ScriptSelectListViewItemDraw.DispMode INVISIBLE = 0;
	public const ScriptSelectListViewItemDraw.DispMode INVALID = 1;
	public const ScriptSelectListViewItemDraw.DispMode VALID = 2;
	public const ScriptSelectListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC9688C Offset: 0xC9688C VA: 0xC9688C
public class ScriptSelectListViewManager : ListViewManager // TypeDefIndex: 8500
{
	// Fields
	protected ScriptSelectListViewManager.InitMode initMode; // 0x138
	[CompilerGeneratedAttribute] // RVA: 0xCCBD88 Offset: 0xCCBD88 VA: 0xCCBD88
	[DebuggerBrowsableAttribute] // RVA: 0xCCBD88 Offset: 0xCCBD88 VA: 0xCCBD88
	private Action callbackFunc; // 0x140
	protected int callbackCount; // 0x148
	protected ScriptSelectListViewManager.ClickDelegate clickFunc; // 0x150

	// Properties
	public List<ScriptSelectListViewObject> ObjectList { get; }

	// Methods

	// RVA: 0x20ACDB4 Offset: 0x20ACDB4 VA: 0x20ACDB4
	public void .ctor() { }

	// RVA: 0x20ACDBC Offset: 0x20ACDBC VA: 0x20ACDBC
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x20ACEAC Offset: 0x20ACEAC VA: 0x20ACEAC
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x20ACF9C Offset: 0x20ACF9C VA: 0x20ACF9C
	public List<ScriptSelectListViewObject> get_ObjectList() { }

	// RVA: 0x20ABD60 Offset: 0x20ABD60 VA: 0x20ABD60
	public void CreateList(string[] selectMessageList, Font fontType, ScriptSelectListViewManager.ClickDelegate callbackFunc) { }

	// RVA: 0x20AC57C Offset: 0x20AC57C VA: 0x20AC57C
	public void DestroyList() { }

	// RVA: 0x20AD168 Offset: 0x20AD168 VA: 0x20AD168
	public ScriptSelectListViewItem GetItem(int index) { }

	// RVA: 0x20AD210 Offset: 0x20AD210 VA: 0x20AD210 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x20ABE90 Offset: 0x20ABE90 VA: 0x20ABE90
	public void SetMode(ScriptSelectListViewManager.InitMode mode, int index = 0, Action callback) { }

	// RVA: 0x20AD644 Offset: 0x20AD644 VA: 0x20AD644
	protected void RequestListObject(ScriptSelectListViewObject.InitMode mode, float delay) { }

	// RVA: 0x20AD3CC Offset: 0x20AD3CC VA: 0x20AD3CC
	protected void RequestListObject(ScriptSelectListViewObject.InitMode mode) { }

	// RVA: 0x20AD8D0 Offset: 0x20AD8D0 VA: 0x20AD8D0
	protected void OnMoveEnd() { }

	// RVA: 0x20AD99C Offset: 0x20AD99C VA: 0x20AD99C
	protected void OnClickListView(ListViewObject obj) { }
}

// Namespace: 
public enum ScriptSelectListViewManager.InitMode // TypeDefIndex: 8501
{
	// Fields
	public int value__; // 0x0
	public const ScriptSelectListViewManager.InitMode NONE = 0;
	public const ScriptSelectListViewManager.InitMode INTO = 1;
	public const ScriptSelectListViewManager.InitMode INPUT = 2;
	public const ScriptSelectListViewManager.InitMode SELECT = 3;
}

// Namespace: 
public sealed class ScriptSelectListViewManager.ClickDelegate : MulticastDelegate // TypeDefIndex: 8502
{
	// Methods

	// RVA: 0x20ABD50 Offset: 0x20ABD50 VA: 0x20ABD50
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20AD9F0 Offset: 0x20AD9F0 VA: 0x20AD9F0 Slot: 11
	public virtual void Invoke(int select) { }

	// RVA: 0x20ADC1C Offset: 0x20ADC1C VA: 0x20ADC1C Slot: 12
	public virtual IAsyncResult BeginInvoke(int select, AsyncCallback callback, object object) { }

	// RVA: 0x20ADCA8 Offset: 0x20ADCA8 VA: 0x20ADCA8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC968C4 Offset: 0xC968C4 VA: 0xC968C4
public class ScriptSelectListViewObject : ListViewObject // TypeDefIndex: 8503
{
	// Fields
	protected ScriptSelectListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCCBDC4 Offset: 0xCCBDC4 VA: 0xCCBDC4
	[DebuggerBrowsableAttribute] // RVA: 0xCCBDC4 Offset: 0xCCBDC4 VA: 0xCCBDC4
	private Action callbackFunc; // 0x70
	protected ScriptSelectListViewItemDraw itemDraw; // 0x78
	protected UIMessageButton messageButton; // 0x80
	protected ScriptSelectListViewItemDraw.DispMode dispMode; // 0x88
	protected GameObject dragObject; // 0x90

	// Methods

	// RVA: 0x20ADCB4 Offset: 0x20ADCB4 VA: 0x20ADCB4
	public void .ctor() { }

	// RVA: 0x20ADD1C Offset: 0x20ADD1C VA: 0x20ADD1C
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x20ADE08 Offset: 0x20ADE08 VA: 0x20ADE08
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x20ADEF4 Offset: 0x20ADEF4 VA: 0x20ADEF4
	protected void Awake() { }

	// RVA: 0x20ADF98 Offset: 0x20ADF98 VA: 0x20ADF98
	private void Start() { }

	// RVA: 0x20ADFAC Offset: 0x20ADFAC VA: 0x20ADFAC
	private void OnDestroy() { }

	// RVA: 0x20AD5C0 Offset: 0x20AD5C0 VA: 0x20AD5C0
	public ScriptSelectListViewItem GetItem() { }

	// RVA: 0x20AE058 Offset: 0x20AE058 VA: 0x20AE058 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x20AE064 Offset: 0x20AE064 VA: 0x20AE064 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x20AE0A8 Offset: 0x20AE0A8 VA: 0x20AE0A8 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x20AE130 Offset: 0x20AE130 VA: 0x20AE130
	public void Init(ScriptSelectListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x20AD348 Offset: 0x20AD348 VA: 0x20AD348
	public void Init(ScriptSelectListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x20AD84C Offset: 0x20AD84C VA: 0x20AD84C
	public void Init(ScriptSelectListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x20AD2C8 Offset: 0x20AD2C8 VA: 0x20AD2C8
	public void Init(ScriptSelectListViewObject.InitMode initMode) { }

	// RVA: 0x20AE46C Offset: 0x20AE46C VA: 0x20AE46C
	protected void SetupDisp() { }

	// RVA: 0x20AE3A4 Offset: 0x20AE3A4 VA: 0x20AE3A4
	private void NoSelectStart() { }

	// RVA: 0x20AE57C Offset: 0x20AE57C VA: 0x20AE57C
	private void NoSelectMove() { }

	// RVA: 0x20AE654 Offset: 0x20AE654 VA: 0x20AE654
	private void NoSelectMove2() { }

	// RVA: 0x20AE408 Offset: 0x20AE408 VA: 0x20AE408
	private void SelectStart() { }

	// RVA: 0x20AE6B0 Offset: 0x20AE6B0 VA: 0x20AE6B0
	private void SelectMove() { }

	// RVA: 0x20AE788 Offset: 0x20AE788 VA: 0x20AE788
	private void SelectMove2() { }

	// RVA: 0x20AE37C Offset: 0x20AE37C VA: 0x20AE37C
	protected void EventMoveEnd() { }

	// RVA: 0x20AE7E4 Offset: 0x20AE7E4 VA: 0x20AE7E4 Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum ScriptSelectListViewObject.InitMode // TypeDefIndex: 8504
{
	// Fields
	public int value__; // 0x0
	public const ScriptSelectListViewObject.InitMode INVISIBLE = 0;
	public const ScriptSelectListViewObject.InitMode INVALID = 1;
	public const ScriptSelectListViewObject.InitMode VALID = 2;
	public const ScriptSelectListViewObject.InitMode INTO = 3;
	public const ScriptSelectListViewObject.InitMode INPUT = 4;
	public const ScriptSelectListViewObject.InitMode NO_SELECT = 5;
	public const ScriptSelectListViewObject.InitMode SELECT = 6;
}

// Namespace: 
protected enum ScriptSelectListViewObject.State // TypeDefIndex: 8505
{
	// Fields
	public int value__; // 0x0
	public const ScriptSelectListViewObject.State INIT = 0;
	public const ScriptSelectListViewObject.State IDLE = 1;
	public const ScriptSelectListViewObject.State MOVE = 2;
	public const ScriptSelectListViewObject.State INPUT = 3;
}

// Namespace: 
public class ScriptSkipDialog : BaseDialog // TypeDefIndex: 8506
{
	// Fields
	[SerializeField] // RVA: 0xCCBE00 Offset: 0xCCBE00 VA: 0xCCBE00
	protected UILabel messageLabel; // 0x58
	[SerializeField] // RVA: 0xCCBE10 Offset: 0xCCBE10 VA: 0xCCBE10
	protected UILabel message2Label; // 0x60
	[SerializeField] // RVA: 0xCCBE20 Offset: 0xCCBE20 VA: 0xCCBE20
	protected GameObject normalBase; // 0x68
	[SerializeField] // RVA: 0xCCBE30 Offset: 0xCCBE30 VA: 0xCCBE30
	protected GameObject exitBase; // 0x70
	[SerializeField] // RVA: 0xCCBE40 Offset: 0xCCBE40 VA: 0xCCBE40
	protected UILabel buttonDecideLabel; // 0x78
	[SerializeField] // RVA: 0xCCBE50 Offset: 0xCCBE50 VA: 0xCCBE50
	protected UILabel buttonDecide2Label; // 0x80
	[SerializeField] // RVA: 0xCCBE60 Offset: 0xCCBE60 VA: 0xCCBE60
	protected UILabel buttonCancelLabel; // 0x88
	[SerializeField] // RVA: 0xCCBE70 Offset: 0xCCBE70 VA: 0xCCBE70
	protected UILabel buttonCancel2Label; // 0x90
	[SerializeField] // RVA: 0xCCBE80 Offset: 0xCCBE80 VA: 0xCCBE80
	protected UILabel buttonExitLabel; // 0x98
	protected ScriptSkipDialog.ClickDelegate clickFunc; // 0xA0
	protected Action closeCallbackFunc; // 0xA8
	protected bool isButtonEnable; // 0xB0

	// Methods

	// RVA: 0x20AE8B4 Offset: 0x20AE8B4 VA: 0x20AE8B4
	public void .ctor() { }

	// RVA: 0x20AE91C Offset: 0x20AE91C VA: 0x20AE91C
	public void Init() { }

	// RVA: 0x20AEAEC Offset: 0x20AEAEC VA: 0x20AEAEC
	public void Open(bool isUseExit, ScriptSkipDialog.ClickDelegate func) { }

	// RVA: 0x20AED60 Offset: 0x20AED60 VA: 0x20AED60
	protected void EndOpen() { }

	// RVA: 0x20AED6C Offset: 0x20AED6C VA: 0x20AED6C
	public void Close() { }

	// RVA: 0x20AED74 Offset: 0x20AED74 VA: 0x20AED74
	public void Close(Action callback) { }

	// RVA: 0x20AEE00 Offset: 0x20AEE00 VA: 0x20AEE00
	protected void EndClose() { }

	// RVA: 0x20AEE64 Offset: 0x20AEE64 VA: 0x20AEE64
	public void OnClickDecide() { }

	// RVA: 0x20AF124 Offset: 0x20AF124 VA: 0x20AF124
	public void OnClickCancel() { }

	// RVA: 0x20AF1B8 Offset: 0x20AF1B8 VA: 0x20AF1B8
	public void OnClickExit() { }

	// RVA: 0x20AF24C Offset: 0x20AF24C VA: 0x20AF24C
	private void OnEnable() { }
}

// Namespace: 
public enum ScriptSkipDialog.ResultKind // TypeDefIndex: 8507
{
	// Fields
	public int value__; // 0x0
	public const ScriptSkipDialog.ResultKind CANCEL = 0;
	public const ScriptSkipDialog.ResultKind SKIP = 1;
	public const ScriptSkipDialog.ResultKind EXIT = 2;
}

// Namespace: 
public sealed class ScriptSkipDialog.ClickDelegate : MulticastDelegate // TypeDefIndex: 8508
{
	// Methods

	// RVA: 0x20AF2F4 Offset: 0x20AF2F4 VA: 0x20AF2F4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20AEEF8 Offset: 0x20AEEF8 VA: 0x20AEEF8 Slot: 11
	public virtual void Invoke(ScriptSkipDialog.ResultKind result) { }

	// RVA: 0x20AF304 Offset: 0x20AF304 VA: 0x20AF304 Slot: 12
	public virtual IAsyncResult BeginInvoke(ScriptSkipDialog.ResultKind result, AsyncCallback callback, object object) { }

	// RVA: 0x20AF390 Offset: 0x20AF390 VA: 0x20AF390 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ScriptStoryOpenDialog : BaseDialog // TypeDefIndex: 8509
{
	// Fields
	[SerializeField] // RVA: 0xCCBE90 Offset: 0xCCBE90 VA: 0xCCBE90
	private UILabel messageLabel; // 0x58
	[SerializeField] // RVA: 0xCCBEA0 Offset: 0xCCBEA0 VA: 0xCCBEA0
	private UILabel titleLabel; // 0x60
	[SerializeField] // RVA: 0xCCBEB0 Offset: 0xCCBEB0 VA: 0xCCBEB0
	private UILabel closeLabel; // 0x68
	[SerializeField] // RVA: 0xCCBEC0 Offset: 0xCCBEC0 VA: 0xCCBEC0
	private UICommonButton closeButton; // 0x70
	[SerializeField] // RVA: 0xCCBED0 Offset: 0xCCBED0 VA: 0xCCBED0
	private UILabel infoLabel; // 0x78
	protected ScriptStoryOpenDialog.State state; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xCCBEE0 Offset: 0xCCBEE0 VA: 0xCCBEE0
	[DebuggerBrowsableAttribute] // RVA: 0xCCBEE0 Offset: 0xCCBEE0 VA: 0xCCBEE0
	private ScriptStoryOpenDialog.CallbackFunc callbackFunc; // 0x88
	protected Action closeCallbackFunc; // 0x90

	// Methods

	// RVA: 0x20AF39C Offset: 0x20AF39C VA: 0x20AF39C
	public void .ctor() { }

	// RVA: 0x20AF404 Offset: 0x20AF404 VA: 0x20AF404
	protected void add_callbackFunc(ScriptStoryOpenDialog.CallbackFunc value) { }

	// RVA: 0x20AF4F0 Offset: 0x20AF4F0 VA: 0x20AF4F0
	protected void remove_callbackFunc(ScriptStoryOpenDialog.CallbackFunc value) { }

	// RVA: 0x20AF5DC Offset: 0x20AF5DC VA: 0x20AF5DC
	public void Init() { }

	// RVA: 0x20AF700 Offset: 0x20AF700 VA: 0x20AF700
	public void Open(string title, string message, ScriptStoryOpenDialog.CallbackFunc callback, bool canMaskTouchClose = False) { }

	// RVA: 0x20AF900 Offset: 0x20AF900 VA: 0x20AF900
	protected void EndOpen() { }

	// RVA: 0x20AF90C Offset: 0x20AF90C VA: 0x20AF90C
	public void Close() { }

	// RVA: 0x20AF914 Offset: 0x20AF914 VA: 0x20AF914
	public void Close(Action callback) { }

	// RVA: 0x20AF9A4 Offset: 0x20AF9A4 VA: 0x20AF9A4
	protected void EndClose() { }

	// RVA: 0x20AF9E0 Offset: 0x20AF9E0 VA: 0x20AF9E0
	protected void Callback() { }

	// RVA: 0x20AFBFC Offset: 0x20AFBFC VA: 0x20AFBFC
	public void OnClickClose() { }
}

// Namespace: 
protected enum ScriptStoryOpenDialog.State // TypeDefIndex: 8510
{
	// Fields
	public int value__; // 0x0
	public const ScriptStoryOpenDialog.State INIT = 0;
	public const ScriptStoryOpenDialog.State OPEN = 1;
	public const ScriptStoryOpenDialog.State INPUT = 2;
	public const ScriptStoryOpenDialog.State SELECTED = 3;
	public const ScriptStoryOpenDialog.State CLOSE = 4;
}

// Namespace: 
public sealed class ScriptStoryOpenDialog.CallbackFunc : MulticastDelegate // TypeDefIndex: 8511
{
	// Methods

	// RVA: 0x20AFC2C Offset: 0x20AFC2C VA: 0x20AFC2C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20AF9FC Offset: 0x20AF9FC VA: 0x20AF9FC Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x20AFC3C Offset: 0x20AFC3C VA: 0x20AFC3C Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x20AFC70 Offset: 0x20AFC70 VA: 0x20AFC70 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class UIScriptChara : MonoBehaviour // TypeDefIndex: 8512
{
	// Fields
	protected static readonly float UNIT_SPEED; // 0x0
	[SerializeField] // RVA: 0xCCBF1C Offset: 0xCCBF1C VA: 0xCCBF1C
	protected Transform baseDepth; // 0x18
	[SerializeField] // RVA: 0xCCBF2C Offset: 0xCCBF2C VA: 0xCCBF2C
	protected Transform baseScale; // 0x20
	[SerializeField] // RVA: 0xCCBF3C Offset: 0xCCBF3C VA: 0xCCBF3C
	protected Transform baseRoll1; // 0x28
	[SerializeField] // RVA: 0xCCBF4C Offset: 0xCCBF4C VA: 0xCCBF4C
	protected Transform baseRoll2; // 0x30
	[SerializeField] // RVA: 0xCCBF5C Offset: 0xCCBF5C VA: 0xCCBF5C
	protected Transform baseShake; // 0x38
	[SerializeField] // RVA: 0xCCBF6C Offset: 0xCCBF6C VA: 0xCCBF6C
	protected GameObject baseCutEffect; // 0x40
	[SerializeField] // RVA: 0xCCBF7C Offset: 0xCCBF7C VA: 0xCCBF7C
	protected GameObject baseSpecialEffect; // 0x48
	[SerializeField] // RVA: 0xCCBF8C Offset: 0xCCBF8C VA: 0xCCBF8C
	protected GameObject baseEffect; // 0x50
	[SerializeField] // RVA: 0xCCBF9C Offset: 0xCCBF9C VA: 0xCCBF9C
	protected GameObject baseEffectBack; // 0x58
	[SerializeField] // RVA: 0xCCBFAC Offset: 0xCCBFAC VA: 0xCCBFAC
	protected GameObject baseShadowEffect; // 0x60
	protected bool isDisp; // 0x68
	protected bool isShadow; // 0x69
	protected bool isShadowEffect; // 0x6A
	protected Vector3 basePosition; // 0x6C
	protected Vector3 baseScaleSize; // 0x78
	protected string filterName; // 0x88
	protected Color filterColor; // 0x90
	protected UIScriptChara.ChangeKind changeKind; // 0xA0
	protected float changeSpeed; // 0xA4
	protected int changeCount; // 0xA8
	protected float changeRange; // 0xAC
	protected float changeTotal; // 0xB0
	protected float changeStep; // 0xB4
	protected Action setCallback; // 0xB8
	protected Action changeCallback; // 0xC0
	protected int mainIndex; // 0xC8
	protected int backIndex; // 0xCC
	protected bool isMove; // 0xD0
	protected bool isRoll; // 0xD1
	protected float returnDuration; // 0xD4
	protected float shakeTime; // 0xD8
	protected float shakeCycle; // 0xDC
	protected float shakeX; // 0xE0
	protected float shakeY; // 0xE4
	[CompilerGeneratedAttribute] // RVA: 0xCCBFBC Offset: 0xCCBFBC VA: 0xCCBFBC
	private static Dictionary<string, int> <>f__switch$map14; // 0x8

	// Methods

	// RVA: 0x1D6BCF0 Offset: 0x1D6BCF0 VA: 0x1D6BCF0
	public void .ctor() { }

	// RVA: 0x1D6BD00 Offset: 0x1D6BD00 VA: 0x1D6BD00
	public bool IsChange() { }

	// RVA: 0x1D6BD10 Offset: 0x1D6BD10 VA: 0x1D6BD10
	public void ChangeCharacter(string kind, float speed, string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1D6BE5C Offset: 0x1D6BE5C VA: 0x1D6BE5C Slot: 4
	public virtual void ChangeCharacter(UIScriptChara.ChangeKind kind, float speed, string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1D6BEE0 Offset: 0x1D6BEE0 VA: 0x1D6BEE0 Slot: 5
	public virtual void SetCharacter(string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1D6BEE8 Offset: 0x1D6BEE8 VA: 0x1D6BEE8 Slot: 6
	protected virtual void EndSet() { }

	// RVA: 0x1D6C1E4 Offset: 0x1D6C1E4 VA: 0x1D6C1E4 Slot: 7
	public virtual void SetFace(Face.Type faceType, float fadeTime = 0) { }

	// RVA: 0x1D6C1E8 Offset: 0x1D6C1E8 VA: 0x1D6C1E8 Slot: 8
	public virtual void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x1D6C1F8 Offset: 0x1D6C1F8 VA: 0x1D6C1F8 Slot: 9
	public virtual void SetShadow(bool isShadow, bool isSkip) { }

	// RVA: 0x1D6C220 Offset: 0x1D6C220 VA: 0x1D6C220
	public void RecoverShadowEffect(bool isSkip = False) { }

	// RVA: 0x1D6C234 Offset: 0x1D6C234 VA: 0x1D6C234
	public void StartShadowEffect() { }

	// RVA: 0x1D6C2E4 Offset: 0x1D6C2E4 VA: 0x1D6C2E4
	public void StopShadowEffect(bool isSkip) { }

	// RVA: 0x1D6C368 Offset: 0x1D6C368 VA: 0x1D6C368 Slot: 10
	public virtual void SetTalkMask(bool isMask) { }

	// RVA: 0x1D6C36C Offset: 0x1D6C36C VA: 0x1D6C36C Slot: 11
	public virtual void SetAlpha(float a) { }

	// RVA: 0x1D6C380 Offset: 0x1D6C380 VA: 0x1D6C380 Slot: 12
	public virtual void SetDepth(int d) { }

	// RVA: 0x1D6C410 Offset: 0x1D6C410 VA: 0x1D6C410
	public float GetDepth() { }

	// RVA: 0x1D6C448 Offset: 0x1D6C448 VA: 0x1D6C448 Slot: 13
	public virtual bool IsBusyMoveAlpha() { }

	// RVA: 0x1D6C450 Offset: 0x1D6C450 VA: 0x1D6C450 Slot: 14
	public virtual void MoveAlpha(float duration, float a) { }

	// RVA: 0x1D6C464 Offset: 0x1D6C464 VA: 0x1D6C464 Slot: 15
	public virtual void MoveAlphaSpeed(float speed, float a) { }

	// RVA: 0x1D6C478 Offset: 0x1D6C478 VA: 0x1D6C478
	public Vector3 GetBasePosition() { }

	// RVA: 0x1D6C484 Offset: 0x1D6C484 VA: 0x1D6C484
	public void SetBasePosition(Vector3 v) { }

	// RVA: 0x1D6C4EC Offset: 0x1D6C4EC VA: 0x1D6C4EC
	public void SetPosition(Vector3 v) { }

	// RVA: 0x1D6C548 Offset: 0x1D6C548 VA: 0x1D6C548
	public void SetScale(float v) { }

	// RVA: 0x1D6C5A8 Offset: 0x1D6C5A8 VA: 0x1D6C5A8 Slot: 16
	public virtual void SetFullScreenScaleType(int type) { }

	// RVA: 0x1D6C5AC Offset: 0x1D6C5AC VA: 0x1D6C5AC
	public bool IsMove() { }

	// RVA: 0x1D6C5B4 Offset: 0x1D6C5B4 VA: 0x1D6C5B4
	public void MovePosition(float duration, Vector3 v) { }

	// RVA: 0x1D6C718 Offset: 0x1D6C718 VA: 0x1D6C718
	protected void EndMove() { }

	// RVA: 0x1D6C720 Offset: 0x1D6C720 VA: 0x1D6C720
	public void MoveReturnPosition(float duration) { }

	// RVA: 0x1D6C87C Offset: 0x1D6C87C VA: 0x1D6C87C
	protected void EndMoveReturn() { }

	// RVA: 0x1D6C884 Offset: 0x1D6C884 VA: 0x1D6C884
	public void MoveReturnPosition(float duration, Vector3 v) { }

	// RVA: 0x1D6CA34 Offset: 0x1D6CA34 VA: 0x1D6CA34
	protected void EndMoveReturnHalf() { }

	// RVA: 0x1D6CA3C Offset: 0x1D6CA3C VA: 0x1D6CA3C
	public void MoveScale(float duration, float s) { }

	// RVA: 0x1D6CB90 Offset: 0x1D6CB90 VA: 0x1D6CB90
	protected void EndMoveScale() { }

	// RVA: 0x1D6CBF0 Offset: 0x1D6CBF0 VA: 0x1D6CBF0
	public void MoveAttack(string kind, float duration, Vector3 v) { }

	// RVA: 0x1D6CDC4 Offset: 0x1D6CDC4 VA: 0x1D6CDC4
	protected void EndMoveAttack() { }

	// RVA: 0x1D6CDCC Offset: 0x1D6CDCC VA: 0x1D6CDCC
	public bool IsRoll() { }

	// RVA: 0x1D6CDD4 Offset: 0x1D6CDD4 VA: 0x1D6CDD4
	public void InitRoll() { }

	// RVA: 0x1D6CE5C Offset: 0x1D6CE5C VA: 0x1D6CE5C
	public bool SetRoll(float rollZ, Vector3 centerOffset) { }

	// RVA: 0x1D6D054 Offset: 0x1D6D054 VA: 0x1D6D054
	public bool StartRoll(float duration, float rollZ) { }

	// RVA: 0x1D6D284 Offset: 0x1D6D284 VA: 0x1D6D284
	public bool StartRollEx(float duration, float rollZ, Vector3 centerOffset) { }

	// RVA: 0x1D6D5D0 Offset: 0x1D6D5D0 VA: 0x1D6D5D0
	protected void EndExecuteCameraRoll() { }

	// RVA: 0x1D6D5D8 Offset: 0x1D6D5D8 VA: 0x1D6D5D8
	public bool IsShake() { }

	// RVA: 0x1D6D5E8 Offset: 0x1D6D5E8 VA: 0x1D6D5E8
	public void Shake(float duration, float cycle, float x, float y) { }

	// RVA: 0x1D6D65C Offset: 0x1D6D65C VA: 0x1D6D65C
	protected void OnShake() { }

	// RVA: 0x1D6D7E0 Offset: 0x1D6D7E0 VA: 0x1D6D7E0
	public bool IsCut() { }

	// RVA: 0x1D6D924 Offset: 0x1D6D924 VA: 0x1D6D924
	public bool IsCutStart() { }

	// RVA: 0x1D6DA68 Offset: 0x1D6DA68 VA: 0x1D6DA68 Slot: 17
	public virtual void SetCutin(string n, float time, float mgd, bool isSkip, bool isPause) { }

	// RVA: 0x1D6DA6C Offset: 0x1D6DA6C VA: 0x1D6DA6C Slot: 18
	public virtual void ResumeCutin(bool isSkip) { }

	// RVA: 0x1D6DA70 Offset: 0x1D6DA70 VA: 0x1D6DA70 Slot: 19
	public virtual void SetCutout(float time, bool isSkip) { }

	// RVA: 0x1D6DA74 Offset: 0x1D6DA74 VA: 0x1D6DA74 Slot: 20
	public virtual void StopCut() { }

	// RVA: 0x1D6DA78 Offset: 0x1D6DA78 VA: 0x1D6DA78
	public bool IsSpecialEffect() { }

	// RVA: 0x1D6DA84 Offset: 0x1D6DA84 VA: 0x1D6DA84
	public bool IsSpecialEffect(string n) { }

	// RVA: 0x1D6DA90 Offset: 0x1D6DA90 VA: 0x1D6DA90
	public bool IsSpecialEffectStart() { }

	// RVA: 0x1D6DA9C Offset: 0x1D6DA9C VA: 0x1D6DA9C
	public bool IsSpecialEffectStart(string n) { }

	// RVA: 0x1D6DAA8 Offset: 0x1D6DAA8 VA: 0x1D6DAA8 Slot: 21
	public virtual void SetSpecialEffect(string n, Vector3 pos, float time, Color color, float range, bool isSkip, bool isPause) { }

	// RVA: 0x1D6DF08 Offset: 0x1D6DF08 VA: 0x1D6DF08
	public void ResumeSpecialEffect(bool isSkip) { }

	// RVA: 0x1D6DF18 Offset: 0x1D6DF18 VA: 0x1D6DF18
	public void ResumeSpecialEffect(string n, bool isSkip) { }

	// RVA: 0x1D6DF28 Offset: 0x1D6DF28 VA: 0x1D6DF28
	public void StopSpecialEffect() { }

	// RVA: 0x1D6DF34 Offset: 0x1D6DF34 VA: 0x1D6DF34
	public void StopSpecialEffect(string n) { }

	// RVA: 0x1D6DF40 Offset: 0x1D6DF40 VA: 0x1D6DF40
	public bool IsEffect() { }

	// RVA: 0x1D6DFAC Offset: 0x1D6DFAC VA: 0x1D6DFAC
	public bool IsEffect(string n) { }

	// RVA: 0x1D6E028 Offset: 0x1D6E028 VA: 0x1D6E028
	public bool IsEffectStart() { }

	// RVA: 0x1D6E094 Offset: 0x1D6E094 VA: 0x1D6E094
	public bool IsEffectStart(string n) { }

	// RVA: 0x1D6E110 Offset: 0x1D6E110 VA: 0x1D6E110
	public void SetEffect(string n, bool isSkip, bool isPause, CommonEffectManager.FlipKind flip) { }

	// RVA: 0x1D6E1AC Offset: 0x1D6E1AC VA: 0x1D6E1AC
	public void SetEffect(string n, Vector3 p, bool isSkip, bool isPause, CommonEffectManager.FlipKind flip) { }

	// RVA: 0x1D6E270 Offset: 0x1D6E270 VA: 0x1D6E270
	public void ResumeEffect(bool isSkip) { }

	// RVA: 0x1D6E2EC Offset: 0x1D6E2EC VA: 0x1D6E2EC
	public void ResumeEffect(string n, bool isSkip) { }

	// RVA: 0x1D6E370 Offset: 0x1D6E370 VA: 0x1D6E370
	public bool StopEffect(bool isSkip) { }

	// RVA: 0x1D6E3F0 Offset: 0x1D6E3F0 VA: 0x1D6E3F0
	public bool StopEffect(string n, bool isSkip) { }

	// RVA: 0x1D6E478 Offset: 0x1D6E478 VA: 0x1D6E478
	public bool IsBackEffect() { }

	// RVA: 0x1D6E4E4 Offset: 0x1D6E4E4 VA: 0x1D6E4E4
	public bool IsBackEffect(string n) { }

	// RVA: 0x1D6E560 Offset: 0x1D6E560 VA: 0x1D6E560
	public bool IsBackEffectStart() { }

	// RVA: 0x1D6E5CC Offset: 0x1D6E5CC VA: 0x1D6E5CC
	public bool IsBackEffectStart(string n) { }

	// RVA: 0x1D6E648 Offset: 0x1D6E648 VA: 0x1D6E648
	public void SetBackEffect(string n, bool isSkip, bool isPause, CommonEffectManager.FlipKind flip) { }

	// RVA: 0x1D6E6E4 Offset: 0x1D6E6E4 VA: 0x1D6E6E4
	public void SetBackEffect(string n, Vector3 p, bool isSkip, bool isPause, CommonEffectManager.FlipKind flip) { }

	// RVA: 0x1D6E7A8 Offset: 0x1D6E7A8 VA: 0x1D6E7A8
	public void ResumeBackEffect(bool isSkip) { }

	// RVA: 0x1D6E824 Offset: 0x1D6E824 VA: 0x1D6E824
	public void ResumeBackEffect(string n, bool isSkip) { }

	// RVA: 0x1D6E8A8 Offset: 0x1D6E8A8 VA: 0x1D6E8A8
	public bool StopBackEffect(bool isSkip) { }

	// RVA: 0x1D6E928 Offset: 0x1D6E928 VA: 0x1D6E928
	public bool StopBackEffect(string n, bool isSkip) { }

	// RVA: 0x1D6E9B0 Offset: 0x1D6E9B0 VA: 0x1D6E9B0 Slot: 22
	public virtual void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x1D6E9B4 Offset: 0x1D6E9B4 VA: 0x1D6E9B4 Slot: 23
	public virtual void SetSortingOrder(int order) { }

	// RVA: 0x1D6E9B8 Offset: 0x1D6E9B8 VA: 0x1D6E9B8
	private static void .cctor() { }
}

// Namespace: 
public enum UIScriptChara.ChangeKind // TypeDefIndex: 8513
{
	// Fields
	public int value__; // 0x0
	public const UIScriptChara.ChangeKind NONE = 0;
	public const UIScriptChara.ChangeKind NORMAL = 1;
	public const UIScriptChara.ChangeKind FADE = 2;
	public const UIScriptChara.ChangeKind BLINK = 3;
	public const UIScriptChara.ChangeKind CROSS_FADE = 4;
	public const UIScriptChara.ChangeKind MAX = 5;
}

// Namespace: 
public class UIScriptEquip : UIScriptChara // TypeDefIndex: 8514
{
	// Fields
	[SerializeField] // RVA: 0xCCBFCC Offset: 0xCCBFCC VA: 0xCCBFCC
	protected UIEquipGraphM[] equipGraphList; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xCCBFDC Offset: 0xCCBFDC VA: 0xCCBFDC
	private static Dictionary<string, int> <>f__switch$map15; // 0x0

	// Methods

	// RVA: 0x1D6EA10 Offset: 0x1D6EA10 VA: 0x1D6EA10
	public void .ctor() { }

	// RVA: 0x1D6EA98 Offset: 0x1D6EA98 VA: 0x1D6EA98 Slot: 4
	public override void ChangeCharacter(UIScriptChara.ChangeKind kind, float speed, string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1D6EC94 Offset: 0x1D6EC94 VA: 0x1D6EC94
	protected void UpdateChange() { }

	// RVA: 0x1D6F144 Offset: 0x1D6F144 VA: 0x1D6F144
	protected void ContinueChangeFade() { }

	// RVA: 0x1D6F06C Offset: 0x1D6F06C VA: 0x1D6F06C
	protected void SetOverlap(float a) { }

	// RVA: 0x1D6EF54 Offset: 0x1D6EF54 VA: 0x1D6EF54
	protected void EndChange() { }

	// RVA: 0x1D6F1A8 Offset: 0x1D6F1A8 VA: 0x1D6F1A8 Slot: 5
	public override void SetCharacter(string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1D6F2D0 Offset: 0x1D6F2D0 VA: 0x1D6F2D0 Slot: 6
	protected override void EndSet() { }

	// RVA: 0x1D6F5FC Offset: 0x1D6F5FC VA: 0x1D6F5FC Slot: 8
	public override void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x1D6F6A8 Offset: 0x1D6F6A8 VA: 0x1D6F6A8 Slot: 9
	public override void SetShadow(bool isShadow, bool isSkip) { }

	// RVA: 0x1D6F7C0 Offset: 0x1D6F7C0 VA: 0x1D6F7C0 Slot: 11
	public override void SetAlpha(float a) { }

	// RVA: 0x1D6F858 Offset: 0x1D6F858 VA: 0x1D6F858 Slot: 12
	public override void SetDepth(int d) { }

	// RVA: 0x1D6F940 Offset: 0x1D6F940 VA: 0x1D6F940 Slot: 13
	public override bool IsBusyMoveAlpha() { }

	// RVA: 0x1D6F9A4 Offset: 0x1D6F9A4 VA: 0x1D6F9A4 Slot: 14
	public override void MoveAlpha(float duration, float a) { }

	// RVA: 0x1D6FA4C Offset: 0x1D6FA4C VA: 0x1D6FA4C Slot: 15
	public override void MoveAlphaSpeed(float speed, float a) { }

	// RVA: 0x1D6FAF4 Offset: 0x1D6FAF4 VA: 0x1D6FAF4 Slot: 21
	public override void SetSpecialEffect(string n, Vector3 pos, float time, Color color, float range, bool isSkip, bool isPause) { }

	// RVA: 0x1D6FF3C Offset: 0x1D6FF3C VA: 0x1D6FF3C Slot: 22
	public override void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x1D6FFC8 Offset: 0x1D6FFC8 VA: 0x1D6FFC8 Slot: 23
	public override void SetSortingOrder(int order) { }
}

// Namespace: 
public class UIScriptFigure : UIScriptChara // TypeDefIndex: 8515
{
	// Fields
	[SerializeField] // RVA: 0xCCBFEC Offset: 0xCCBFEC VA: 0xCCBFEC
	protected UIStandFigureM[] standFigureList; // 0xE8
	[SerializeField] // RVA: 0xCCBFFC Offset: 0xCCBFFC VA: 0xCCBFFC
	protected UIStandFigureM crossFadeStandFigure; // 0xF0
	[CompilerGeneratedAttribute] // RVA: 0xCCC00C Offset: 0xCCC00C VA: 0xCCC00C
	private static Dictionary<string, int> <>f__switch$map16; // 0x0

	// Methods

	// RVA: 0x1D70054 Offset: 0x1D70054 VA: 0x1D70054
	public void .ctor() { }

	// RVA: 0x1D700DC Offset: 0x1D700DC VA: 0x1D700DC Slot: 4
	public override void ChangeCharacter(UIScriptChara.ChangeKind kind, float speed, string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1D70C50 Offset: 0x1D70C50 VA: 0x1D70C50
	protected void UpdateChange() { }

	// RVA: 0x1D7304C Offset: 0x1D7304C VA: 0x1D7304C
	protected void ContinueChangeFade() { }

	// RVA: 0x1D714F0 Offset: 0x1D714F0 VA: 0x1D714F0
	protected void SetOverlap(float a) { }

	// RVA: 0x1D71188 Offset: 0x1D71188 VA: 0x1D71188
	protected void EndChange() { }

	// RVA: 0x1D73168 Offset: 0x1D73168 VA: 0x1D73168 Slot: 5
	public override void SetCharacter(string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1D73374 Offset: 0x1D73374 VA: 0x1D73374 Slot: 6
	protected override void EndSet() { }

	// RVA: 0x1D73724 Offset: 0x1D73724 VA: 0x1D73724 Slot: 7
	public override void SetFace(Face.Type faceType, float fadeTime) { }

	// RVA: 0x1D74B14 Offset: 0x1D74B14 VA: 0x1D74B14 Slot: 8
	public override void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x1D74BC4 Offset: 0x1D74BC4 VA: 0x1D74BC4 Slot: 9
	public override void SetShadow(bool isShadow, bool isSkip) { }

	// RVA: 0x1D74CD0 Offset: 0x1D74CD0 VA: 0x1D74CD0 Slot: 10
	public override void SetTalkMask(bool isMask) { }

	// RVA: 0x1D74D50 Offset: 0x1D74D50 VA: 0x1D74D50 Slot: 11
	public override void SetAlpha(float a) { }

	// RVA: 0x1D74DFC Offset: 0x1D74DFC VA: 0x1D74DFC Slot: 12
	public override void SetDepth(int d) { }

	// RVA: 0x1D74EE0 Offset: 0x1D74EE0 VA: 0x1D74EE0 Slot: 13
	public override bool IsBusyMoveAlpha() { }

	// RVA: 0x1D74F48 Offset: 0x1D74F48 VA: 0x1D74F48 Slot: 14
	public override void MoveAlpha(float duration, float a) { }

	// RVA: 0x1D74FEC Offset: 0x1D74FEC VA: 0x1D74FEC Slot: 15
	public override void MoveAlphaSpeed(float speed, float a) { }

	// RVA: 0x1D752AC Offset: 0x1D752AC VA: 0x1D752AC Slot: 21
	public override void SetSpecialEffect(string n, Vector3 pos, float time, Color color, float range, bool isSkip, bool isPause) { }

	// RVA: 0x1D7595C Offset: 0x1D7595C VA: 0x1D7595C Slot: 22
	public override void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x1D75AC0 Offset: 0x1D75AC0 VA: 0x1D75AC0 Slot: 23
	public override void SetSortingOrder(int order) { }
}

// Namespace: 
public class UIScriptHorizontalImage : UIScriptChara // TypeDefIndex: 8516
{
	// Fields
	[SerializeField] // RVA: 0xCCC01C Offset: 0xCCC01C VA: 0xCCC01C
	protected UIHorizontalImageM[] imageList; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xCCC02C Offset: 0xCCC02C VA: 0xCCC02C
	private static Dictionary<string, int> <>f__switch$map17; // 0x0

	// Methods

	// RVA: 0x1D75BAC Offset: 0x1D75BAC VA: 0x1D75BAC
	public void .ctor() { }

	// RVA: 0x1D75C34 Offset: 0x1D75C34 VA: 0x1D75C34 Slot: 4
	public override void ChangeCharacter(UIScriptChara.ChangeKind kind, float speed, string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1D75E30 Offset: 0x1D75E30 VA: 0x1D75E30
	protected void UpdateChange() { }

	// RVA: 0x1D762E0 Offset: 0x1D762E0 VA: 0x1D762E0
	protected void ContinueChangeFade() { }

	// RVA: 0x1D76208 Offset: 0x1D76208 VA: 0x1D76208
	protected void SetOverlap(float a) { }

	// RVA: 0x1D760F0 Offset: 0x1D760F0 VA: 0x1D760F0
	protected void EndChange() { }

	// RVA: 0x1D76344 Offset: 0x1D76344 VA: 0x1D76344 Slot: 5
	public override void SetCharacter(string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1D7646C Offset: 0x1D7646C VA: 0x1D7646C Slot: 6
	protected override void EndSet() { }

	// RVA: 0x1D76798 Offset: 0x1D76798 VA: 0x1D76798 Slot: 8
	public override void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x1D76844 Offset: 0x1D76844 VA: 0x1D76844 Slot: 9
	public override void SetShadow(bool isShadow, bool isSkip) { }

	// RVA: 0x1D7695C Offset: 0x1D7695C VA: 0x1D7695C Slot: 11
	public override void SetAlpha(float a) { }

	// RVA: 0x1D769F4 Offset: 0x1D769F4 VA: 0x1D769F4 Slot: 12
	public override void SetDepth(int d) { }

	// RVA: 0x1D76ADC Offset: 0x1D76ADC VA: 0x1D76ADC Slot: 13
	public override bool IsBusyMoveAlpha() { }

	// RVA: 0x1D76B40 Offset: 0x1D76B40 VA: 0x1D76B40 Slot: 14
	public override void MoveAlpha(float duration, float a) { }

	// RVA: 0x1D76BE8 Offset: 0x1D76BE8 VA: 0x1D76BE8 Slot: 15
	public override void MoveAlphaSpeed(float speed, float a) { }

	// RVA: 0x1D76C90 Offset: 0x1D76C90 VA: 0x1D76C90 Slot: 21
	public override void SetSpecialEffect(string n, Vector3 pos, float time, Color color, float range, bool isSkip, bool isPause) { }

	// RVA: 0x1D770D8 Offset: 0x1D770D8 VA: 0x1D770D8 Slot: 22
	public override void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x1D77164 Offset: 0x1D77164 VA: 0x1D77164 Slot: 23
	public override void SetSortingOrder(int order) { }
}

// Namespace: 
public class UIScriptImage : UIScriptChara // TypeDefIndex: 8517
{
	// Fields
	[SerializeField] // RVA: 0xCCC03C Offset: 0xCCC03C VA: 0xCCC03C
	protected UIImageM[] imageList; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xCCC04C Offset: 0xCCC04C VA: 0xCCC04C
	private static Dictionary<string, int> <>f__switch$map18; // 0x0

	// Methods

	// RVA: 0x1D771F0 Offset: 0x1D771F0 VA: 0x1D771F0
	public void .ctor() { }

	// RVA: 0x1D77278 Offset: 0x1D77278 VA: 0x1D77278 Slot: 4
	public override void ChangeCharacter(UIScriptChara.ChangeKind kind, float speed, string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1D7797C Offset: 0x1D7797C VA: 0x1D7797C
	protected void UpdateChange() { }

	// RVA: 0x1D77E2C Offset: 0x1D77E2C VA: 0x1D77E2C
	protected void ContinueChangeFade() { }

	// RVA: 0x1D77D54 Offset: 0x1D77D54 VA: 0x1D77D54
	protected void SetOverlap(float a) { }

	// RVA: 0x1D77C3C Offset: 0x1D77C3C VA: 0x1D77C3C
	protected void EndChange() { }

	// RVA: 0x1D77480 Offset: 0x1D77480 VA: 0x1D77480
	protected void SetFullScreenImage(string imageName, UIImageM baseFigure) { }

	// RVA: 0x1D77E90 Offset: 0x1D77E90 VA: 0x1D77E90 Slot: 5
	public override void SetCharacter(string imageName, Face.Type faceType, Action callback) { }

	// RVA: 0x1D77FC4 Offset: 0x1D77FC4 VA: 0x1D77FC4 Slot: 16
	public override void SetFullScreenScaleType(int type) { }

	// RVA: 0x1D7808C Offset: 0x1D7808C VA: 0x1D7808C Slot: 6
	protected override void EndSet() { }

	// RVA: 0x1D783B8 Offset: 0x1D783B8 VA: 0x1D783B8 Slot: 8
	public override void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x1D78464 Offset: 0x1D78464 VA: 0x1D78464 Slot: 9
	public override void SetShadow(bool isShadow, bool isSkip) { }

	// RVA: 0x1D7857C Offset: 0x1D7857C VA: 0x1D7857C Slot: 11
	public override void SetAlpha(float a) { }

	// RVA: 0x1D78614 Offset: 0x1D78614 VA: 0x1D78614 Slot: 12
	public override void SetDepth(int d) { }

	// RVA: 0x1D786FC Offset: 0x1D786FC VA: 0x1D786FC Slot: 13
	public override bool IsBusyMoveAlpha() { }

	// RVA: 0x1D78760 Offset: 0x1D78760 VA: 0x1D78760 Slot: 14
	public override void MoveAlpha(float duration, float a) { }

	// RVA: 0x1D78808 Offset: 0x1D78808 VA: 0x1D78808 Slot: 15
	public override void MoveAlphaSpeed(float speed, float a) { }

	// RVA: 0x1D788B0 Offset: 0x1D788B0 VA: 0x1D788B0 Slot: 17
	public override void SetCutin(string n, float time, float mgd, bool isSkip, bool isPause) { }

	// RVA: 0x1D78A94 Offset: 0x1D78A94 VA: 0x1D78A94 Slot: 18
	public override void ResumeCutin(bool isSkip) { }

	// RVA: 0x1D78BE4 Offset: 0x1D78BE4 VA: 0x1D78BE4 Slot: 19
