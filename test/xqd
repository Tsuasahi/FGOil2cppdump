	// Methods

	// RVA: 0x1B23DA4 Offset: 0x1B23DA4 VA: 0x1B23DA4
	public void .ctor() { }

	// RVA: 0x1B23E60 Offset: 0x1B23E60 VA: 0x1B23E60
	public static int GetFontSize(string sizeName, int defaultSize = 0) { }

	// RVA: 0x1B23FC0 Offset: 0x1B23FC0 VA: 0x1B23FC0
	public static string GetFontSizeString(int size) { }

	// RVA: 0x1B2415C Offset: 0x1B2415C VA: 0x1B2415C
	public static ScriptMessageLabel.VerticalAlign GetVerticalAlignFromString(string str) { }

	// RVA: 0x1B24280 Offset: 0x1B24280 VA: 0x1B24280
	private static float getVerticalAlignOffset(ScriptMessageLabel.VerticalAlign vAlign, int fontSize, int maxFontSize) { }

	// RVA: 0x1B243BC Offset: 0x1B243BC VA: 0x1B243BC
	public static int ConvertInteger(string s) { }

	// RVA: 0x1B244A4 Offset: 0x1B244A4 VA: 0x1B244A4
	public static int ConvertCharaIndex(string s) { }

	// RVA: 0x1B2453C Offset: 0x1B2453C VA: 0x1B2453C
	public static void GetTextByLen(string text, int len, out string dispText, out int length) { }

	// RVA: 0x1B24974 Offset: 0x1B24974 VA: 0x1B24974
	public static string SubstrByDisp(string text, int len) { }

	// RVA: 0x1B248EC Offset: 0x1B248EC VA: 0x1B248EC
	public static int StrlenByDisp(string text) { }

	// RVA: 0x1B24A04 Offset: 0x1B24A04 VA: 0x1B24A04
	public static bool EnforceColorTag(ref string colorTag, ref string text, string overrideColor) { }

	// RVA: 0x1B24C7C Offset: 0x1B24C7C VA: 0x1B24C7C
	public static string RemoveColorTag(string text) { }

	// RVA: 0x1B24C40 Offset: 0x1B24C40 VA: 0x1B24C40
	private static bool IsColorChar(char c) { }

	// RVA: 0x1B24F74 Offset: 0x1B24F74 VA: 0x1B24F74
	public static bool IsExistColorTag(string txt) { }

	// RVA: 0x1B250AC Offset: 0x1B250AC VA: 0x1B250AC
	private static bool IsColorBeginTag(string text) { }

	// RVA: 0x1B25210 Offset: 0x1B25210 VA: 0x1B25210
	public static string GetTagFairingString(string txt) { }

	// RVA: 0x1B255F0 Offset: 0x1B255F0 VA: 0x1B255F0
	public static int GetBraceIndex(string txt, int start) { }

	// RVA: 0x1B256AC Offset: 0x1B256AC VA: 0x1B256AC
	public static string GetCommandName(string txt, int start) { }

	// RVA: 0x1B257C8 Offset: 0x1B257C8 VA: 0x1B257C8
	public static string[] AnalysTagParam(string txt, int bindex = 0) { }

	// RVA: 0x1B25AA8 Offset: 0x1B25AA8 VA: 0x1B25AA8
	public static string GetTagSplitString(string txt, int bindex, int index) { }

	// RVA: 0x1B25D60 Offset: 0x1B25D60 VA: 0x1B25D60
	public static void GetTalkName(out string imageName, out string className, out string charaName, out int charaIndex, string talkName) { }

	// RVA: 0x1B261CC Offset: 0x1B261CC VA: 0x1B261CC
	public static string GetServantChangeName(string[] param) { }

	// RVA: 0x1B2631C Offset: 0x1B2631C VA: 0x1B2631C
	public void Destroy() { }

	// RVA: 0x1B266EC Offset: 0x1B266EC VA: 0x1B266EC
	public void Release() { }

	// RVA: 0x1B265E4 Offset: 0x1B265E4 VA: 0x1B265E4
	private void DestoryEffect() { }

	// RVA: 0x1B269BC Offset: 0x1B269BC VA: 0x1B269BC
	public ScriptMessageLabel GetLogLabel() { }

	// RVA: 0x1B26BC8 Offset: 0x1B26BC8 VA: 0x1B26BC8
	public float GetLogRangeY() { }

	// RVA: 0x1B26BDC Offset: 0x1B26BDC VA: 0x1B26BDC
	public void SetLogDraw(GameObject mainObject, GameObject rubyObject, GameObject imageObject, GameObject playVoiceObject, GameObject playVoiceEffect, Font font) { }

	// RVA: 0x1B273B4 Offset: 0x1B273B4 VA: 0x1B273B4
	public void ClearLogDraw(GameObject mainObject, GameObject rubyObject, GameObject imageObject, GameObject playVoiceObject, GameObject playVoiceEffect) { }

	// RVA: 0x1B27548 Offset: 0x1B27548 VA: 0x1B27548
	public void UpdateLabel(ref UILabel main, ref Vector2 pos, int fontSize, int maxFontSize, ScriptMessageLabel.VerticalAlign verticalAlign, string mainStr, Font font) { }

	// RVA: 0x1B27864 Offset: 0x1B27864 VA: 0x1B27864
	public void UpdateBouten(ref UILabel main, ref UILabel ruby, ref Vector2 pos, int fontSize, int maxFontSize, ScriptMessageLabel.VerticalAlign verticalAlign, string mainStr, Font font) { }

	// RVA: 0x1B27D50 Offset: 0x1B27D50 VA: 0x1B27D50
	public void UpdateRuby(ref UILabel main, ref UILabel ruby, ref Vector2 pos, int fontSize, int maxFontSize, ScriptMessageLabel.VerticalAlign verticalAlign, string mainStr, string rubyStr, Font font) { }

	// RVA: 0x1B27214 Offset: 0x1B27214 VA: 0x1B27214
	private static Color GetColor(string colorTag) { }

	// RVA: 0x1B281E8 Offset: 0x1B281E8 VA: 0x1B281E8
	public void UpdateLine(ref UISprite image, ref Vector2 pos, int fontSize, int length) { }

	// RVA: 0x1B284C4 Offset: 0x1B284C4 VA: 0x1B284C4
	public void UpdateImage(ref UISprite image, ref Vector2 pos, int fontSize, string imageStr, ScriptMessageLabel.HorizontalAlign horizontalAlign = 0) { }

	// RVA: 0x1B287A4 Offset: 0x1B287A4 VA: 0x1B287A4
	public void UpdateImage(ref UISprite image, ref Vector2 pos, int fontSize, float scale, string imageStr, ScriptMessageLabel.HorizontalAlign horizontalAlign = 0) { }

	// RVA: 0x1B28870 Offset: 0x1B28870 VA: 0x1B28870
	public void UpdateImage(ref UISprite image, ref Vector2 pos, int fontSize, float scale, string imageStr, Vector2 offset, ScriptMessageLabel.HorizontalAlign horizontalAlign = 0) { }

	// RVA: 0x1B28778 Offset: 0x1B28778 VA: 0x1B28778
	private float GetHorizontalAlignedPosition(float posX, float width, ScriptMessageLabel.HorizontalAlign horizontalAlign) { }

	// RVA: 0x1B28B60 Offset: 0x1B28B60 VA: 0x1B28B60
	public void UpdateEffect(ref GameObject effect, ref Vector2 pos, string effectName, float ewait, int dlength) { }

	// RVA: 0x1B28DB0 Offset: 0x1B28DB0 VA: 0x1B28DB0
	public void UpdateImageRuby(ref UISprite image, ref UILabel ruby, ref Vector2 pos, int fontSize, string imageStr, string rubyStr, Font font, ScriptMessageLabel.HorizontalAlign horizontalAlign = 0) { }

	// RVA: 0x1B291E8 Offset: 0x1B291E8 VA: 0x1B291E8
	public void UpdatePlayVoice(string assetName, string objectName, float volume, Action<string, string, bool> setReplayingVoice) { }

	// RVA: 0x1B292D8 Offset: 0x1B292D8 VA: 0x1B292D8
	public void CheckPlayingVoice() { }

	// RVA: 0x1B293C0 Offset: 0x1B293C0 VA: 0x1B293C0
	private void OnClickPlayVoice() { }

	// RVA: 0x1B29534 Offset: 0x1B29534 VA: 0x1B29534
	private void StartPlayVoiceAnimation() { }

	// RVA: 0x1B295D4 Offset: 0x1B295D4 VA: 0x1B295D4
	public void StopPlayVoiceAnimation() { }

	// RVA: 0x1B29678 Offset: 0x1B29678 VA: 0x1B29678
	private static void .cctor() { }
}

// Namespace: 
public enum ScriptMessageLabel.VerticalAlign // TypeDefIndex: 8503
{
	// Fields
	public int value__; // 0x0
	public const ScriptMessageLabel.VerticalAlign Top = 0;
	public const ScriptMessageLabel.VerticalAlign Center = 1;
	public const ScriptMessageLabel.VerticalAlign Bottom = 2;
	public const ScriptMessageLabel.VerticalAlign Default = 0;
}

// Namespace: 
public enum ScriptMessageLabel.HorizontalAlign // TypeDefIndex: 8504
{
	// Fields
	public int value__; // 0x0
	public const ScriptMessageLabel.HorizontalAlign Left = 0;
	public const ScriptMessageLabel.HorizontalAlign Center = 1;
	public const ScriptMessageLabel.HorizontalAlign Right = 2;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC433F4 Offset: 0xC433F4 VA: 0xC433F4
private sealed class ScriptMessageLabel.<SetLogDraw>c__AnonStorey0 // TypeDefIndex: 8505
{
	// Fields
	internal UILabel ruby; // 0x10
	internal ScriptMessageLabel $this; // 0x18

	// Methods

	// RVA: 0x1B2720C Offset: 0x1B2720C VA: 0x1B2720C
	public void .ctor() { }

	// RVA: 0x1B2997C Offset: 0x1B2997C VA: 0x1B2997C
	internal void <>m__0() { }
}

// Namespace: 
public class ScriptMessageManager : MonoBehaviour // TypeDefIndex: 8506
{
	// Fields
	private static readonly float ALIGN_CENTER_BASE; // 0x0
	private static readonly float ALIGN_RIGHT_BASE; // 0x4
	[SerializeField] // RVA: 0xC5EC14 Offset: 0xC5EC14 VA: 0xC5EC14
	protected GameObject mainPrefab; // 0x18
	[SerializeField] // RVA: 0xC5EC24 Offset: 0xC5EC24 VA: 0xC5EC24
	protected GameObject rubyPrefab; // 0x20
	[SerializeField] // RVA: 0xC5EC34 Offset: 0xC5EC34 VA: 0xC5EC34
	protected GameObject imagePrefab; // 0x28
	[SerializeField] // RVA: 0xC5EC44 Offset: 0xC5EC44 VA: 0xC5EC44
	protected GameObject rootObject; // 0x30
	protected UIPanel rootPanel; // 0x38
	[SerializeField] // RVA: 0xC5EC54 Offset: 0xC5EC54 VA: 0xC5EC54
	protected GameObject messageBase; // 0x40
	[SerializeField] // RVA: 0xC5EC64 Offset: 0xC5EC64 VA: 0xC5EC64
	protected Transform messageShake; // 0x48
	[SerializeField] // RVA: 0xC5EC74 Offset: 0xC5EC74 VA: 0xC5EC74
	protected UIWidget messageBackBase; // 0x50
	[SerializeField] // RVA: 0xC5EC84 Offset: 0xC5EC84 VA: 0xC5EC84
	protected UISprite messageWindowBack; // 0x58
	[SerializeField] // RVA: 0xC5EC94 Offset: 0xC5EC94 VA: 0xC5EC94
	protected Transform messageScroll; // 0x60
	[SerializeField] // RVA: 0xC5ECA4 Offset: 0xC5ECA4 VA: 0xC5ECA4
	protected GameObject frontCommonUICamera; // 0x68
	[SerializeField] // RVA: 0xC5ECB4 Offset: 0xC5ECB4 VA: 0xC5ECB4
	protected Transform frontCommonUIPanel; // 0x70
	[SerializeField] // RVA: 0xC5ECC4 Offset: 0xC5ECC4 VA: 0xC5ECC4
	protected GameObject talkNameRootObject; // 0x78
	[SerializeField] // RVA: 0xC5ECD4 Offset: 0xC5ECD4 VA: 0xC5ECD4
	protected ScriptLineMessage talkNameManager; // 0x80
	[SerializeField] // RVA: 0xC5ECE4 Offset: 0xC5ECE4 VA: 0xC5ECE4
	protected UISprite talkNameIcon; // 0x88
	[SerializeField] // RVA: 0xC5ECF4 Offset: 0xC5ECF4 VA: 0xC5ECF4
	protected UISprite talkNameBack; // 0x90
	[SerializeField] // RVA: 0xC5ED04 Offset: 0xC5ED04 VA: 0xC5ED04
	protected int talkNameBackBaseWidth; // 0x98
	[SerializeField] // RVA: 0xC5ED14 Offset: 0xC5ED14 VA: 0xC5ED14
	protected int talkNameBackDefaultWidth; // 0x9C
	[SerializeField] // RVA: 0xC5ED24 Offset: 0xC5ED24 VA: 0xC5ED24
	protected UITouchPress touchPress; // 0xA0
	[SerializeField] // RVA: 0xC5ED34 Offset: 0xC5ED34 VA: 0xC5ED34
	protected GameObject nextTouchRootObject; // 0xA8
	[SerializeField] // RVA: 0xC5ED44 Offset: 0xC5ED44 VA: 0xC5ED44
	protected float defaultScrollTime; // 0xB0
	[SerializeField] // RVA: 0xC5ED54 Offset: 0xC5ED54 VA: 0xC5ED54
	protected float fastScrollTime; // 0xB4
	[SerializeField] // RVA: 0xC5ED64 Offset: 0xC5ED64 VA: 0xC5ED64
	protected float defaultKeyDelayTime; // 0xB8
	protected float stepTime; // 0xBC
	private bool isMessageSpeedForcedNormal; // 0xC0
	[SerializeField] // RVA: 0xC5ED74 Offset: 0xC5ED74 VA: 0xC5ED74
	protected float defaultStepTime; // 0xC4
	protected float textOnlyLineHeight; // 0xC8
	protected float beforeTextOnlyLineHeight; // 0xCC
	protected float defaultTextOnlyLineHeight; // 0xD0
	protected float rubyLineHeight; // 0xD4
	[SerializeField] // RVA: 0xC5ED84 Offset: 0xC5ED84 VA: 0xC5ED84
	protected float defaultBetweenLineHeight; // 0xD8
	protected float betweenLineHeight; // 0xDC
	[SerializeField] // RVA: 0xC5ED94 Offset: 0xC5ED94 VA: 0xC5ED94
	protected Vector2 defaultAllDispSize; // 0xE0
	[SerializeField] // RVA: 0xC5EDA4 Offset: 0xC5EDA4 VA: 0xC5EDA4
	protected Vector2 defaultWindowDispSize; // 0xE8
	protected Vector2 dispSize; // 0xF0
	[SerializeField] // RVA: 0xC5EDB4 Offset: 0xC5EDB4 VA: 0xC5EDB4
	protected Vector2 defaultAllDispCenter; // 0xF8
	[SerializeField] // RVA: 0xC5EDC4 Offset: 0xC5EDC4 VA: 0xC5EDC4
	protected Vector2 defaultWindowDispCenter; // 0x100
	[SerializeField] // RVA: 0xC5EDD4 Offset: 0xC5EDD4 VA: 0xC5EDD4
	protected UIPanel dispPanel; // 0x108
	[SerializeField] // RVA: 0xC5EDE4 Offset: 0xC5EDE4 VA: 0xC5EDE4
	private AnimationCurve windowUpCurve; // 0x110
	[SerializeField] // RVA: 0xC5EDF4 Offset: 0xC5EDF4 VA: 0xC5EDF4
	private AnimationCurve windowDownCurve; // 0x118
	private float windowOpenTime; // 0x120
	private float windowCloseTime; // 0x124
	private float windowNormalPosY; // 0x128
	private float windowClosePosY; // 0x12C
	protected Font defaultFontType; // 0x130
	protected int defaultFontSize; // 0x138
	protected int rubyFontSize; // 0x13C
	protected Font fontType; // 0x140
	protected int fontSize; // 0x148
	private ScriptMessageLabel.VerticalAlign verticalAlign; // 0x14C
	protected float messageSpeed; // 0x150
	protected float scrollSpeed; // 0x154
	protected string defaultColorTag; // 0x158
	protected bool isWindowBack; // 0x160
	protected UIAtlas talkNameAtlas; // 0x168
	protected string talkNameSpriteName; // 0x170
	private string talkName; // 0x178
	private string talkNameOnly; // 0x180
	private int talkNameIndex; // 0x188
	private Vector2 startPosition; // 0x18C
	private Vector2 dispPosition; // 0x194
	private Vector3 scrollPosition; // 0x19C
	protected Stack<UILabel> mainStock; // 0x1A8
	protected Stack<UILabel> rubyStock; // 0x1B0
	protected Stack<UISprite> imageStock; // 0x1B8
	protected Stack<ScriptMessageLabel> labelStock; // 0x1C0
	private List<ScriptMessageLabel> dispLabelList; // 0x1C8
	protected bool isBusy; // 0x1D0
	protected float dispCountTimer; // 0x1D4
	protected int dispIndex; // 0x1D8
	protected bool isTapSkip; // 0x1DC
	protected bool isTapSkipRequest; // 0x1DD
	protected bool isWaitNextTouchRequest; // 0x1DE
	protected bool isWaitNextTouchDelay; // 0x1DF
	protected bool isFastMessageRequest; // 0x1E0
	protected bool isMessageOut; // 0x1E1
	protected bool isMessageOff; // 0x1E2
	protected bool isForcedDisableTurnPage; // 0x1E3
	protected bool isScroll; // 0x1E4
	protected float shakeTime; // 0x1E8
	protected float shakeCycle; // 0x1EC
	protected float shakeX; // 0x1F0
	protected float shakeY; // 0x1F4
	private int maxFontSize; // 0x1F8
	private ScriptMessageManager.HorizontalAlign horizontalAlign; // 0x1FC
	private bool isEffectMessage; // 0x200

	// Properties
	protected float textLineHeight { get; }
	public bool IsWindowMode { get; }
	public bool IsBusy { get; }

	// Methods

	// RVA: 0x1B29C18 Offset: 0x1B29C18 VA: 0x1B29C18
	public void .ctor() { }

	// RVA: 0x1B29E60 Offset: 0x1B29E60 VA: 0x1B29E60
	protected float get_textLineHeight() { }

	// RVA: 0x1B29E70 Offset: 0x1B29E70 VA: 0x1B29E70
	public bool get_IsWindowMode() { }

	// RVA: 0x1B29E78 Offset: 0x1B29E78 VA: 0x1B29E78
	public bool get_IsBusy() { }

	// RVA: 0x1B29E80 Offset: 0x1B29E80 VA: 0x1B29E80
	private void Start() { }

	// RVA: 0x1B2A3D8 Offset: 0x1B2A3D8 VA: 0x1B2A3D8
	public void DeleteLabels() { }

	// RVA: 0x1B2A658 Offset: 0x1B2A658 VA: 0x1B2A658
	public void ClearLabels() { }

	// RVA: 0x1B2AA18 Offset: 0x1B2AA18 VA: 0x1B2AA18
	private void PreProcLabel(ScriptMessageLabel label, bool hasRuby, bool hasImage, bool hasEffect) { }

	// RVA: 0x1B2B2E0 Offset: 0x1B2B2E0 VA: 0x1B2B2E0
	protected UILabel FetchMainLabel() { }

	// RVA: 0x1B2B564 Offset: 0x1B2B564 VA: 0x1B2B564
	protected UILabel FetchRubyLabel() { }

	// RVA: 0x1B2B808 Offset: 0x1B2B808 VA: 0x1B2B808
	protected UISprite FetchImageSprite() { }

	// RVA: 0x1B2BA8C Offset: 0x1B2BA8C VA: 0x1B2BA8C
	private ScriptMessageLabel FetchLabel() { }

	// RVA: 0x1B2A7A8 Offset: 0x1B2A7A8 VA: 0x1B2A7A8
	private void ReleaseLabel(ScriptMessageLabel label) { }

	// RVA: 0x1B2BB40 Offset: 0x1B2BB40 VA: 0x1B2BB40
	private void AddLabel(string text, float tm, string colorTag, bool isFoward) { }

	// RVA: 0x1B2C928 Offset: 0x1B2C928 VA: 0x1B2C928
	protected void UpdateLabels(string txt, bool isStretch, bool isFoward) { }

	// RVA: 0x1B2DC58 Offset: 0x1B2DC58 VA: 0x1B2DC58
	public int InitScreen() { }

	// RVA: 0x1B2E070 Offset: 0x1B2E070 VA: 0x1B2E070
	public void QuitScreen() { }

	// RVA: 0x1B2E170 Offset: 0x1B2E170 VA: 0x1B2E170
	public void SetTapSkip(bool flag) { }

	// RVA: 0x1B2E180 Offset: 0x1B2E180 VA: 0x1B2E180
	public void SetForcedDisableTurnPage(bool flag) { }

	// RVA: 0x1B2A130 Offset: 0x1B2A130 VA: 0x1B2A130
	public int SetScreen(int x, int y, int w, int h, bool isWindowBack) { }

	// RVA: 0x1B2E330 Offset: 0x1B2E330 VA: 0x1B2E330
	public void SetMessageOffMode(bool flag) { }

	// RVA: 0x1B2E398 Offset: 0x1B2E398 VA: 0x1B2E398
	public void OffScreen() { }

	// RVA: 0x1B2E3D4 Offset: 0x1B2E3D4 VA: 0x1B2E3D4
	public bool IsOpen() { }

	// RVA: 0x1B2E4F0 Offset: 0x1B2E4F0 VA: 0x1B2E4F0
	public bool IsWindowCloseDown() { }

	// RVA: 0x1B2DD6C Offset: 0x1B2DD6C VA: 0x1B2DD6C
	public void ForceOpen() { }

	// RVA: 0x1B2E638 Offset: 0x1B2E638 VA: 0x1B2E638
	public void OpenUp(bool isFast = False) { }

	// RVA: 0x1B2E8B0 Offset: 0x1B2E8B0 VA: 0x1B2E8B0
	public void CloseDown(bool isFast = False) { }

	// RVA: 0x1B2EAF0 Offset: 0x1B2EAF0 VA: 0x1B2EAF0
	public void OnEndUpDownAnime() { }

	// RVA: 0x1B2EC1C Offset: 0x1B2EC1C VA: 0x1B2EC1C
	protected void SetDefaultState() { }

	// RVA: 0x1B2ECAC Offset: 0x1B2ECAC VA: 0x1B2ECAC
	private void SetTextScrollSpeed() { }

	// RVA: 0x1B2DC28 Offset: 0x1B2DC28 VA: 0x1B2DC28
	public void ReturnText() { }

	// RVA: 0x1B2EE28 Offset: 0x1B2EE28 VA: 0x1B2EE28
	public Font GetFontType() { }

	// RVA: 0x1B2EE30 Offset: 0x1B2EE30 VA: 0x1B2EE30
	public void SetFontType(Font font) { }

	// RVA: 0x1B2EEC8 Offset: 0x1B2EEC8 VA: 0x1B2EEC8
	public void SetFontSize(string sizeName, string verticalAlignString) { }

	// RVA: 0x1B2EF70 Offset: 0x1B2EF70 VA: 0x1B2EF70
	public void SetBetweenLineHeight(float height) { }

	// RVA: 0x1B2EFB8 Offset: 0x1B2EFB8 VA: 0x1B2EFB8
	public void SetSpeed(float n) { }

	// RVA: 0x1B2E18C Offset: 0x1B2E18C VA: 0x1B2E18C
	public void ClearText() { }

	// RVA: 0x1B2EFE0 Offset: 0x1B2EFE0 VA: 0x1B2EFE0
	public void ClearCount() { }

	// RVA: 0x1B2EFEC Offset: 0x1B2EFEC VA: 0x1B2EFEC
	public void SetMaxFontSize(int fontSize) { }

	// RVA: 0x1B2EFF4 Offset: 0x1B2EFF4 VA: 0x1B2EFF4
	public void SetText(string text) { }

	// RVA: 0x1B2F028 Offset: 0x1B2F028 VA: 0x1B2F028
	public void AddText(string text, bool isLineHead = False, int lineLength = 0) { }

	// RVA: 0x1B2F064 Offset: 0x1B2F064 VA: 0x1B2F064
	private void SetAlignedDispPosition(bool isLineHead, int lineLength) { }

	// RVA: 0x1B2F178 Offset: 0x1B2F178 VA: 0x1B2F178
	public void AddTextStretch(string text) { }

	// RVA: 0x1B2F184 Offset: 0x1B2F184 VA: 0x1B2F184
	public void SetHorizontalAlign(ScriptMessageManager.HorizontalAlign horizontalAlign) { }

	// RVA: 0x1B2F18C Offset: 0x1B2F18C VA: 0x1B2F18C
	public void ClearTalkName() { }

	// RVA: 0x1B2F26C Offset: 0x1B2F26C VA: 0x1B2F26C
	public void SetTalkNameBack(string imageName) { }

	// RVA: 0x1B2F434 Offset: 0x1B2F434 VA: 0x1B2F434
	public bool SetTalkName(string imageName, string classname, string charaname, int index) { }

	// RVA: 0x1B2F718 Offset: 0x1B2F718 VA: 0x1B2F718 Slot: 4
	public virtual void OnPressWindow() { }

	// RVA: 0x1B2F7E0 Offset: 0x1B2F7E0 VA: 0x1B2F7E0 Slot: 5
	public virtual void OnClickWindow() { }

	// RVA: 0x1B2F8C8 Offset: 0x1B2F8C8 VA: 0x1B2F8C8
	public void OnLongPressWindow() { }

	// RVA: 0x1B2F978 Offset: 0x1B2F978 VA: 0x1B2F978
	protected void OnDelayWaitNextTouch() { }

	// RVA: 0x1B2F980 Offset: 0x1B2F980 VA: 0x1B2F980
	public int GetAllDispLength() { }

	// RVA: 0x1B2FADC Offset: 0x1B2FADC VA: 0x1B2FADC
	public bool MessageUpdate(bool isMessageDelta = True) { }

	// RVA: 0x1B3006C Offset: 0x1B3006C VA: 0x1B3006C
	public void RequestFastMessage() { }

	// RVA: 0x1B30078 Offset: 0x1B30078 VA: 0x1B30078
	public bool IsWaitTouch() { }

	// RVA: 0x1B30080 Offset: 0x1B30080 VA: 0x1B30080
	public bool IsWaitNextTouchDelay() { }

	// RVA: 0x1B30088 Offset: 0x1B30088 VA: 0x1B30088
	public void ClearRequestFastMessage() { }

	// RVA: 0x1B30090 Offset: 0x1B30090 VA: 0x1B30090
	public void WaitNextTouch(bool isShowNextTouchObject = True) { }

	// RVA: 0x1B30114 Offset: 0x1B30114 VA: 0x1B30114
	public void CancelNextTouch() { }

	// RVA: 0x1B3014C Offset: 0x1B3014C VA: 0x1B3014C
	public bool IsLongPress() { }

	// RVA: 0x1B30198 Offset: 0x1B30198 VA: 0x1B30198
	public void ResetLongPress() { }

	// RVA: 0x1B301D4 Offset: 0x1B301D4 VA: 0x1B301D4
	public bool IsFastMessageRequest() { }

	// RVA: 0x1B301DC Offset: 0x1B301DC VA: 0x1B301DC
	public bool IsTapSkip() { }

	// RVA: 0x1B301E4 Offset: 0x1B301E4 VA: 0x1B301E4
	public void CancelTapSkip() { }

	// RVA: 0x1B301EC Offset: 0x1B301EC VA: 0x1B301EC
	public bool IsScroll() { }

	// RVA: 0x1B301F4 Offset: 0x1B301F4 VA: 0x1B301F4
	public bool IsReturnScroll() { }

	// RVA: 0x1B30224 Offset: 0x1B30224 VA: 0x1B30224
	public bool ReturnScroll(bool isFast = False) { }

	// RVA: 0x1B3048C Offset: 0x1B3048C VA: 0x1B3048C
	public bool IsReturnScroll2() { }

	// RVA: 0x1B304C0 Offset: 0x1B304C0 VA: 0x1B304C0
	public bool ReturnScroll2(bool isFast = False) { }

	// RVA: 0x1B30520 Offset: 0x1B30520 VA: 0x1B30520
	public bool IsPageScroll() { }

	// RVA: 0x1B30564 Offset: 0x1B30564 VA: 0x1B30564
	public void PageScroll(bool isFast = False) { }

	// RVA: 0x1B30280 Offset: 0x1B30280 VA: 0x1B30280
	protected void StartScroll(bool isFast) { }

	// RVA: 0x1B3065C Offset: 0x1B3065C VA: 0x1B3065C
	private void EndScroll() { }

	// RVA: 0x1B30668 Offset: 0x1B30668 VA: 0x1B30668
	protected void ResetScroll() { }

	// RVA: 0x1B307B8 Offset: 0x1B307B8 VA: 0x1B307B8
	public bool IsShake() { }

	// RVA: 0x1B307C8 Offset: 0x1B307C8 VA: 0x1B307C8
	public void Shake(float duration, float cycle, float x, float y) { }

	// RVA: 0x1B30844 Offset: 0x1B30844 VA: 0x1B30844
	protected void OnShake() { }

	// RVA: 0x1B309C8 Offset: 0x1B309C8 VA: 0x1B309C8
	public void SetMessageSpeedForcedNormal(bool isForced) { }

	// RVA: 0x1B309D4 Offset: 0x1B309D4 VA: 0x1B309D4
	public bool IsForcedDisableTurnPage() { }

	// RVA: 0x1B309DC Offset: 0x1B309DC VA: 0x1B309DC
	public string GetTalkName() { }

	// RVA: 0x1B309E4 Offset: 0x1B309E4 VA: 0x1B309E4
	public string GetTalkNameOnly() { }

	// RVA: 0x1B309EC Offset: 0x1B309EC VA: 0x1B309EC
	public int GetTalkNameIndex() { }

	// RVA: 0x1B309F4 Offset: 0x1B309F4 VA: 0x1B309F4
	public bool MessageEffectStop(string effectName, bool isSkip) { }

	// RVA: 0x1B30B78 Offset: 0x1B30B78 VA: 0x1B30B78
	public bool MessageEffectIsBusy(string effectName) { }

	// RVA: 0x1B30CF0 Offset: 0x1B30CF0 VA: 0x1B30CF0
	public bool MessageEffectIsStart(string effectName) { }

	// RVA: 0x1B30E68 Offset: 0x1B30E68 VA: 0x1B30E68
	public bool MessageEffectExist() { }

	// RVA: 0x1B30FA4 Offset: 0x1B30FA4 VA: 0x1B30FA4
	public bool IsRootActive() { }

	// RVA: 0x1B31044 Offset: 0x1B31044 VA: 0x1B31044
	public void SetMessageWindowCollider(bool isEnable) { }

	// RVA: 0x1B31118 Offset: 0x1B31118 VA: 0x1B31118
	private static void .cctor() { }
}

// Namespace: 
public enum ScriptMessageManager.HorizontalAlign // TypeDefIndex: 8507
{
	// Fields
	public int value__; // 0x0
	public const ScriptMessageManager.HorizontalAlign Left = 0;
	public const ScriptMessageManager.HorizontalAlign Center = 1;
	public const ScriptMessageManager.HorizontalAlign Right = 2;
}

// Namespace: 
private sealed class ScriptMessageManager.ProcAddLabel : MulticastDelegate // TypeDefIndex: 8508
{
	// Methods

	// RVA: 0x1B2D574 Offset: 0x1B2D574 VA: 0x1B2D574
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B2D594 Offset: 0x1B2D594 VA: 0x1B2D594 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1B31338 Offset: 0x1B31338 VA: 0x1B31338 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1B3136C Offset: 0x1B3136C VA: 0x1B3136C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private sealed class ScriptMessageManager.ProcAddLabel2 : MulticastDelegate // TypeDefIndex: 8509
{
	// Methods

	// RVA: 0x1B2D584 Offset: 0x1B2D584 VA: 0x1B2D584
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B2D888 Offset: 0x1B2D888 VA: 0x1B2D888 Slot: 11
	public virtual void Invoke(string txt) { }

	// RVA: 0x1B31378 Offset: 0x1B31378 VA: 0x1B31378 Slot: 12
	public virtual IAsyncResult BeginInvoke(string txt, AsyncCallback callback, object object) { }

	// RVA: 0x1B3139C Offset: 0x1B3139C VA: 0x1B3139C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC43404 Offset: 0xC43404 VA: 0xC43404
private sealed class ScriptMessageManager.<UpdateLabels>c__AnonStorey0 // TypeDefIndex: 8510
{
	// Fields
	internal StringBuilder tmpTxt; // 0x10
	internal float stepTime; // 0x18
	internal bool isFoward; // 0x1C
	internal string tmpColorTag; // 0x20
	internal ScriptMessageManager $this; // 0x28

	// Methods

	// RVA: 0x1B2D56C Offset: 0x1B2D56C VA: 0x1B2D56C
	public void .ctor() { }

	// RVA: 0x1B3117C Offset: 0x1B3117C VA: 0x1B3117C
	internal void <>m__0() { }

	// RVA: 0x1B31278 Offset: 0x1B31278 VA: 0x1B31278
	internal void <>m__1(string text) { }
}

// Namespace: 
public class ScriptNotificationDialog : BaseDialog // TypeDefIndex: 8511
{
	// Fields
	[SerializeField] // RVA: 0xC5EE04 Offset: 0xC5EE04 VA: 0xC5EE04
	protected UILabel messageLabel; // 0x58
	[SerializeField] // RVA: 0xC5EE14 Offset: 0xC5EE14 VA: 0xC5EE14
	private UILabel titleLabel; // 0x60
	[SerializeField] // RVA: 0xC5EE24 Offset: 0xC5EE24 VA: 0xC5EE24
	private UILabel titledMessageLabel; // 0x68
	[SerializeField] // RVA: 0xC5EE34 Offset: 0xC5EE34 VA: 0xC5EE34
	protected UILabel closeLabel; // 0x70
	[SerializeField] // RVA: 0xC5EE44 Offset: 0xC5EE44 VA: 0xC5EE44
	protected UICommonButton closeButton; // 0x78
	protected ScriptNotificationDialog.State state; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC5EE54 Offset: 0xC5EE54 VA: 0xC5EE54
	[DebuggerBrowsableAttribute] // RVA: 0xC5EE54 Offset: 0xC5EE54 VA: 0xC5EE54
	private ScriptNotificationDialog.CallbackFunc callbackFunc; // 0x88
	protected Action closeCallbackFunc; // 0x90

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1B313A8 Offset: 0x1B313A8 VA: 0x1B313A8
	public void .ctor() { }

	// RVA: 0x1B31410 Offset: 0x1B31410 VA: 0x1B31410
	protected void add_callbackFunc(ScriptNotificationDialog.CallbackFunc value) { }

	// RVA: 0x1B314FC Offset: 0x1B314FC VA: 0x1B314FC
	protected void remove_callbackFunc(ScriptNotificationDialog.CallbackFunc value) { }

	// RVA: 0x1B315E8 Offset: 0x1B315E8 VA: 0x1B315E8
	public void Init() { }

	// RVA: 0x1B3170C Offset: 0x1B3170C VA: 0x1B3170C
	public void Open(string title, string message, ScriptNotificationDialog.CallbackFunc callback, bool canMaskTouchClose = False, int spacingY = 0) { }

	// RVA: 0x1B318A4 Offset: 0x1B318A4 VA: 0x1B318A4
	private void SetMessage(string title, string message) { }

	// RVA: 0x1B31A34 Offset: 0x1B31A34 VA: 0x1B31A34
	protected void EndOpen() { }

	// RVA: 0x1B31A40 Offset: 0x1B31A40 VA: 0x1B31A40
	public void Close() { }

	// RVA: 0x1B31A48 Offset: 0x1B31A48 VA: 0x1B31A48
	public void Close(Action callback) { }

	// RVA: 0x1B31AD8 Offset: 0x1B31AD8 VA: 0x1B31AD8
	protected void EndClose() { }

	// RVA: 0x1B31B14 Offset: 0x1B31B14 VA: 0x1B31B14
	protected void Callback() { }

	// RVA: 0x1B31D30 Offset: 0x1B31D30 VA: 0x1B31D30
	public void OnClickClose() { }

	// RVA: 0x1B31D60 Offset: 0x1B31D60 VA: 0x1B31D60 Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
protected enum ScriptNotificationDialog.State // TypeDefIndex: 8512
{
	// Fields
	public int value__; // 0x0
	public const ScriptNotificationDialog.State INIT = 0;
	public const ScriptNotificationDialog.State OPEN = 1;
	public const ScriptNotificationDialog.State INPUT = 2;
	public const ScriptNotificationDialog.State SELECTED = 3;
	public const ScriptNotificationDialog.State CLOSE = 4;
}

// Namespace: 
public sealed class ScriptNotificationDialog.CallbackFunc : MulticastDelegate // TypeDefIndex: 8513
{
	// Methods

	// RVA: 0x1B31DA8 Offset: 0x1B31DA8 VA: 0x1B31DA8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B31B30 Offset: 0x1B31B30 VA: 0x1B31B30 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1B31DB8 Offset: 0x1B31DB8 VA: 0x1B31DB8 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1B31DEC Offset: 0x1B31DEC VA: 0x1B31DEC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ScriptPosition // TypeDefIndex: 8514
{
	// Fields
	protected static Vector2[] positionList; // 0x0
	protected static Vector2[] charaOffsetList; // 0x8

	// Methods

	// RVA: 0x1B3797C Offset: 0x1B3797C VA: 0x1B3797C
	public void .ctor() { }

	// RVA: 0x1B37984 Offset: 0x1B37984 VA: 0x1B37984
	public static Vector3 GetPosition(int index) { }

	// RVA: 0x1B37A98 Offset: 0x1B37A98 VA: 0x1B37A98
	public static Vector3 GetPosition(float x, float y) { }

	// RVA: 0x1B37AD0 Offset: 0x1B37AD0 VA: 0x1B37AD0
	public static Vector3 GetCharaOffset(int index) { }

	// RVA: 0x1B37BE4 Offset: 0x1B37BE4 VA: 0x1B37BE4
	public static Vector3 GetCharaOffset(float x, float y) { }

	// RVA: 0x1B37C1C Offset: 0x1B37C1C VA: 0x1B37C1C
	private static void .cctor() { }
}

// Namespace: 
public class ScriptReplaceString // TypeDefIndex: 8515
{
	// Fields
	protected static List<string> replaceList; // 0x0
	protected static int playerGenderIndex; // 0x8

	// Methods

	// RVA: 0x1B37F28 Offset: 0x1B37F28 VA: 0x1B37F28
	public void .ctor() { }

	// RVA: 0x1B37F30 Offset: 0x1B37F30 VA: 0x1B37F30
	public static void Init() { }

	// RVA: 0x1B37FF0 Offset: 0x1B37FF0 VA: 0x1B37FF0
	public static void SetString(ScriptReplaceString.Index index, string str) { }

	// RVA: 0x1B38064 Offset: 0x1B38064 VA: 0x1B38064
	public static void SetString(int num, string str) { }

	// RVA: 0x1B2D794 Offset: 0x1B2D794 VA: 0x1B2D794
	public static string GetString(int num) { }

	// RVA: 0x1B3829C Offset: 0x1B3829C VA: 0x1B3829C
	public static void SetPlayerGenderIndex(int index) { }

	// RVA: 0x1B2D820 Offset: 0x1B2D820 VA: 0x1B2D820
	public static int GetPlayerGenderIndex() { }

	// RVA: 0x1B38308 Offset: 0x1B38308 VA: 0x1B38308
	private static void .cctor() { }
}

// Namespace: 
public enum ScriptReplaceString.Index // TypeDefIndex: 8516
{
	// Fields
	public int value__; // 0x0
	public const ScriptReplaceString.Index USER_NAME = 1;
}

// Namespace: 
public class ScriptSelectDialog : BaseMonoBehaviour // TypeDefIndex: 8517
{
	// Fields
	[SerializeField] // RVA: 0xC5EE90 Offset: 0xC5EE90 VA: 0xC5EE90
	protected GameObject rootObject; // 0x18
	[SerializeField] // RVA: 0xC5EEA0 Offset: 0xC5EEA0 VA: 0xC5EEA0
	protected ScriptSelectListViewManager listViewManager; // 0x20
	protected ScriptSelectDialog.ClickDelegate callbackFunc; // 0x28
	protected bool isOpen; // 0x30
	protected int index; // 0x34

	// Methods

	// RVA: 0x1B38394 Offset: 0x1B38394 VA: 0x1B38394
	public void .ctor() { }

	// RVA: 0x1B3839C Offset: 0x1B3839C VA: 0x1B3839C
	public void Open(string[] selectMessageList, Font fontType, ScriptSelectDialog.ClickDelegate callback) { }

	// RVA: 0x1B38968 Offset: 0x1B38968 VA: 0x1B38968
	public void SelectDecide(int index, ScriptSelectDialog.ClickDelegate callback) { }

	// RVA: 0x1B38A0C Offset: 0x1B38A0C VA: 0x1B38A0C
	protected void EndSelectDecide() { }

	// RVA: 0x1B38C54 Offset: 0x1B38C54 VA: 0x1B38C54
	public void Close() { }

	// RVA: 0x1B38CCC Offset: 0x1B38CCC VA: 0x1B38CCC
	public void OnClickSelect(int index) { }

	// RVA: 0x1B38CE0 Offset: 0x1B38CE0 VA: 0x1B38CE0
	public void SetActive(bool flag) { }
}

// Namespace: 
public sealed class ScriptSelectDialog.ClickDelegate : MulticastDelegate // TypeDefIndex: 8518
{
	// Methods

	// RVA: 0x1B38D2C Offset: 0x1B38D2C VA: 0x1B38D2C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1B38A28 Offset: 0x1B38A28 VA: 0x1B38A28 Slot: 11
	public virtual void Invoke(int index) { }

	// RVA: 0x1B38D3C Offset: 0x1B38D3C VA: 0x1B38D3C Slot: 12
	public virtual IAsyncResult BeginInvoke(int index, AsyncCallback callback, object object) { }

	// RVA: 0x1B38DC8 Offset: 0x1B38DC8 VA: 0x1B38DC8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2A6F4 Offset: 0xC2A6F4 VA: 0xC2A6F4
public class ScriptSelectListViewItem : ListViewItem // TypeDefIndex: 8519
{
	// Fields
	protected string message; // 0x70
	protected Font fontType; // 0x78

	// Properties
	public string MessageText { get; }
	public Font FontType { get; }

	// Methods

	// RVA: 0x1B38DD4 Offset: 0x1B38DD4 VA: 0x1B38DD4
	public void .ctor(int index, string message, Font fontType) { }

	// RVA: 0x1B38E0C Offset: 0x1B38E0C VA: 0x1B38E0C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1B38E14 Offset: 0x1B38E14 VA: 0x1B38E14
	public string get_MessageText() { }

	// RVA: 0x1B38E1C Offset: 0x1B38E1C VA: 0x1B38E1C
	public Font get_FontType() { }

	// RVA: 0x1B38E24 Offset: 0x1B38E24 VA: 0x1B38E24
	private string ToString() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2A72C Offset: 0xC2A72C VA: 0xC2A72C
public class ScriptSelectListViewItemDraw : MonoBehaviour // TypeDefIndex: 8520
{
	// Fields
	[SerializeField] // RVA: 0xC5EEB0 Offset: 0xC5EEB0 VA: 0xC5EEB0
	protected ScriptLineMessage messageManager; // 0x18
	[SerializeField] // RVA: 0xC5EEC0 Offset: 0xC5EEC0 VA: 0xC5EEC0
	protected ScriptLineMessage effectMessageManager; // 0x20
	[SerializeField] // RVA: 0xC5EED0 Offset: 0xC5EED0 VA: 0xC5EED0
	protected UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xC5EEE0 Offset: 0xC5EEE0 VA: 0xC5EEE0
	protected UIMessageButton baseButton; // 0x30
	protected Action callbackFunc; // 0x38
	protected string message; // 0x40
	protected Font font; // 0x48

	// Methods

	// RVA: 0x1B38E9C Offset: 0x1B38E9C VA: 0x1B38E9C
	public void .ctor() { }

	// RVA: 0x1B38EA4 Offset: 0x1B38EA4 VA: 0x1B38EA4
	public void SetItem(ScriptSelectListViewItem item, ScriptSelectListViewItemDraw.DispMode mode) { }

	// RVA: 0x1B39078 Offset: 0x1B39078 VA: 0x1B39078
	public void NoSelectDecide(Action callback) { }

	// RVA: 0x1B391B0 Offset: 0x1B391B0 VA: 0x1B391B0
	public void SelectDecide(Action callback) { }

	// RVA: 0x1B39390 Offset: 0x1B39390 VA: 0x1B39390
	public void EndSelectDecideMove1() { }

	// RVA: 0x1B39414 Offset: 0x1B39414 VA: 0x1B39414
	public void EndSelectDecideMove2() { }

	// RVA: 0x1B394DC Offset: 0x1B394DC VA: 0x1B394DC
	protected void EndMove() { }
}

// Namespace: 
public enum ScriptSelectListViewItemDraw.DispMode // TypeDefIndex: 8521
{
	// Fields
	public int value__; // 0x0
	public const ScriptSelectListViewItemDraw.DispMode INVISIBLE = 0;
	public const ScriptSelectListViewItemDraw.DispMode INVALID = 1;
	public const ScriptSelectListViewItemDraw.DispMode VALID = 2;
	public const ScriptSelectListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2A764 Offset: 0xC2A764 VA: 0xC2A764
public class ScriptSelectListViewManager : ListViewManager // TypeDefIndex: 8522
{
	// Fields
	protected ScriptSelectListViewManager.InitMode initMode; // 0x138
	[CompilerGeneratedAttribute] // RVA: 0xC5EEF0 Offset: 0xC5EEF0 VA: 0xC5EEF0
	[DebuggerBrowsableAttribute] // RVA: 0xC5EEF0 Offset: 0xC5EEF0 VA: 0xC5EEF0
	private Action callbackFunc; // 0x140
	protected int callbackCount; // 0x148
	protected ScriptSelectListViewManager.ClickDelegate clickFunc; // 0x150

	// Properties
	public List<ScriptSelectListViewObject> ObjectList { get; }

	// Methods

	// RVA: 0x1B394F8 Offset: 0x1B394F8 VA: 0x1B394F8
	public void .ctor() { }

	// RVA: 0x1B39500 Offset: 0x1B39500 VA: 0x1B39500
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1B395F0 Offset: 0x1B395F0 VA: 0x1B395F0
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1B396E0 Offset: 0x1B396E0 VA: 0x1B396E0
	public List<ScriptSelectListViewObject> get_ObjectList() { }

	// RVA: 0x1B384A4 Offset: 0x1B384A4 VA: 0x1B384A4
	public void CreateList(string[] selectMessageList, Font fontType, ScriptSelectListViewManager.ClickDelegate callbackFunc) { }

	// RVA: 0x1B38CC0 Offset: 0x1B38CC0 VA: 0x1B38CC0
	public void DestroyList() { }

	// RVA: 0x1B398AC Offset: 0x1B398AC VA: 0x1B398AC
	public ScriptSelectListViewItem GetItem(int index) { }

	// RVA: 0x1B39954 Offset: 0x1B39954 VA: 0x1B39954 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1B385D4 Offset: 0x1B385D4 VA: 0x1B385D4
	public void SetMode(ScriptSelectListViewManager.InitMode mode, int index = 0, Action callback) { }

	// RVA: 0x1B39D88 Offset: 0x1B39D88 VA: 0x1B39D88
	protected void RequestListObject(ScriptSelectListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1B39B10 Offset: 0x1B39B10 VA: 0x1B39B10
	protected void RequestListObject(ScriptSelectListViewObject.InitMode mode) { }

	// RVA: 0x1B3A014 Offset: 0x1B3A014 VA: 0x1B3A014
	protected void OnMoveEnd() { }
