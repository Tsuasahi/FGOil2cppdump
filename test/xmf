
	// Methods

	// RVA: 0x1C12710 Offset: 0x1C12710 VA: 0x1C12710
	public void .ctor() { }
}

// Namespace: 
public enum ServantFilterSelectMenu.Kind // TypeDefIndex: 5672
{
	// Fields
	public int value__; // 0x0
	public const ServantFilterSelectMenu.Kind SERVANT_KEEP = 0;
	public const ServantFilterSelectMenu.Kind SERVANT = 1;
	public const ServantFilterSelectMenu.Kind SERVANT_BASE = 2;
	public const ServantFilterSelectMenu.Kind SERVANT_MATERIAL = 3;
	public const ServantFilterSelectMenu.Kind SERVANT_COSTUME = 4;
	public const ServantFilterSelectMenu.Kind SERVANT_EQUIP = 5;
	public const ServantFilterSelectMenu.Kind COMMANDCODE = 6;
}

// Namespace: 
protected enum ServantFilterSelectMenu.State // TypeDefIndex: 5673
{
	// Fields
	public int value__; // 0x0
	public const ServantFilterSelectMenu.State INIT = 0;
	public const ServantFilterSelectMenu.State OPEN = 1;
	public const ServantFilterSelectMenu.State INPUT = 2;
	public const ServantFilterSelectMenu.State SELECTED = 3;
	public const ServantFilterSelectMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class ServantFilterSelectMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 5674
{
	// Methods

	// RVA: 0x1C12664 Offset: 0x1C12664 VA: 0x1C12664
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1C115E0 Offset: 0x1C115E0 VA: 0x1C115E0 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x1C12674 Offset: 0x1C12674 VA: 0x1C12674 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x1C12704 Offset: 0x1C12704 VA: 0x1C12704 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE0F0 Offset: 0xCAE0F0 VA: 0xCAE0F0
private sealed class ServantFilterSelectMenu.<InitCategoryContainer>c__AnonStorey0 // TypeDefIndex: 5675
{
	// Fields
	internal ServantFilterCategoryContainer container; // 0x10

	// Methods

	// RVA: 0x1C11DF8 Offset: 0x1C11DF8 VA: 0x1C11DF8
	public void .ctor() { }

	// RVA: 0x1C1262C Offset: 0x1C1262C VA: 0x1C1262C
	internal bool <>m__0(ListViewSort.FilterCategoryKind x) { }
}

// Namespace: 
public class ServantSortSelectMenu : BaseDialog // TypeDefIndex: 5676
{
	// Fields
	public UILabel titleLabel; // 0x58
	public UILabel explanationLabel; // 0x60
	public UILabel decideLabel; // 0x68
	public UILabel cancelLabel; // 0x70
	public UICommonButton decideButton; // 0x78
	public UICommonButton cancelButton; // 0x80
	public UICommonButton helpButton; // 0x88
	public UICommonButton[] normalSortButtons; // 0x90
	public UISprite[] normalSortSprites; // 0x98
	public UILabel[] normalSortBtnsLabel; // 0xA0
	public UICommonButton[] allDispSortButtons; // 0xA8
	public UISprite[] allDispSortSprites; // 0xB0
	public UILabel[] allDispSortBtnsLabel; // 0xB8
	public UICommonButton[] fatigueDispSortButtons; // 0xC0
	public UISprite[] fatigueDispSortSprites; // 0xC8
	public UILabel[] fatigueDispSortBtnsLabel; // 0xD0
	public UICommonButton[] shortDispSortButtons; // 0xD8
	public UISprite[] shortDispSortSprites; // 0xE0
	public UILabel[] shortDispSortBtnsLabel; // 0xE8
	private const int ShortDispSortButtonColumnCount = 4;
	private readonly Vector2 ShortDispSortButtonSpace; // 0xF0
	public UICommonButton[] costumeDispSortButtons; // 0xF8
	public UISprite[] costumeDispSprites; // 0x100
	public UILabel[] costumeDispSortBtnsLabel; // 0x108
	public UICommonButton[] commandCodeDispSortButtons; // 0x110
	public UISprite[] commandCodeDispSprites; // 0x118
	public UILabel[] commandCodeDispSortBtnsLabel; // 0x120
	public GameObject smartSortObject; // 0x128
	public UILabel smartSortLabel; // 0x130
	public UILabel smartSortDetail; // 0x138
	public UISprite smartSortBtnSprite; // 0x140
	public UILabel smartChoiceLabel; // 0x148
	public UILabel smartChoiceDetail; // 0x150
	public UISprite smartChoiceBtnSprite; // 0x158
	public GameObject costumeSmartSortObject; // 0x160
	public UILabel costumeSmartSortLabel; // 0x168
	public UILabel costumeSmartSortDetail; // 0x170
	public UISprite costumeSmartSortBtnSprite; // 0x178
	public GameObject choiceSortObject; // 0x180
	public UILabel choiceSortLabel; // 0x188
	public UILabel choiceSortDetail; // 0x190
	public UISprite choiceSortBtnSprite; // 0x198
	public GameObject choiceSort2Object; // 0x1A0
	public UILabel choiceSort2Label; // 0x1A8
	public UILabel choiceSort2Detail; // 0x1B0
	public UISprite choiceSort2BtnSprite; // 0x1B8
	public GameObject allDispObject; // 0x1C0
	public GameObject fatigueDispObject; // 0x1C8
	public GameObject normalDispObject; // 0x1D0
	public GameObject shortDispObject; // 0x1D8
	public GameObject costumeDispObject; // 0x1E0
	public GameObject commandCodeDispObject; // 0x1E8
	protected const string SORT_SAVE_KEY = "ServantSortSelect";
	protected static ListViewSort commonServantSortInfo; // 0x0
	protected static ListViewSort commonServantEquipSortInfo; // 0x8
	protected static ListViewSort commandCodeSortInfo; // 0x10
	protected ServantSortSelectMenu.Kind kind; // 0x1F0
	protected ServantSortSelectMenu.State state; // 0x1F4
	protected List<ListViewSort.SortKind> servantBaseSelectList; // 0x1F8
	protected List<ListViewSort.SortKind> fatigureSelectList; // 0x200
	protected List<ListViewSort.SortKind> servantSelectList; // 0x208
	protected List<ListViewSort.SortKind> servantEquipSelectList; // 0x210
	protected List<ListViewSort.SortKind> servantCostumeSelectList; // 0x218
	protected List<ListViewSort.SortKind> commandCodeSelectList; // 0x220
	protected ListViewSort.SortKind openedKind; // 0x228
	protected bool openedSmartSort; // 0x22C
	protected bool openedChoiceSort; // 0x22D
	[CompilerGeneratedAttribute] // RVA: 0xCBAE8C Offset: 0xCBAE8C VA: 0xCBAE8C
	[DebuggerBrowsableAttribute] // RVA: 0xCBAE8C Offset: 0xCBAE8C VA: 0xCBAE8C
	private ServantSortSelectMenu.CallbackFunc callbackFunc; // 0x230
	protected Action closeCallbackFunc; // 0x238
	protected ListViewSort baseSortInfo; // 0x240
	protected ListViewSort operationSortInfo; // 0x248

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1FC4354 Offset: 0x1FC4354 VA: 0x1FC4354
	public void .ctor() { }

	// RVA: 0x1FC4CE8 Offset: 0x1FC4CE8 VA: 0x1FC4CE8
	protected void add_callbackFunc(ServantSortSelectMenu.CallbackFunc value) { }

	// RVA: 0x1FC4DD8 Offset: 0x1FC4DD8 VA: 0x1FC4DD8
	protected void remove_callbackFunc(ServantSortSelectMenu.CallbackFunc value) { }

	// RVA: 0x1FC4EC8 Offset: 0x1FC4EC8 VA: 0x1FC4EC8
	public static void InitLoad() { }

	// RVA: 0x1FC4F44 Offset: 0x1FC4F44 VA: 0x1FC4F44
	public static ListViewSort GetServantSortInfo() { }

	// RVA: 0x1FC4FD0 Offset: 0x1FC4FD0 VA: 0x1FC4FD0
	public static ListViewSort GetServantEquipSortInfo() { }

	// RVA: 0x1FC505C Offset: 0x1FC505C VA: 0x1FC505C
	public void Init() { }

	// RVA: 0x1FC5068 Offset: 0x1FC5068 VA: 0x1FC5068
	public void Open(ServantSortSelectMenu.Kind kind, ListViewSort sort, bool isChoiceReverse, ServantSortSelectMenu.CallbackFunc callback) { }

	// RVA: 0x1FC68AC Offset: 0x1FC68AC VA: 0x1FC68AC
	protected void EndOpen() { }

	// RVA: 0x1FC68B8 Offset: 0x1FC68B8 VA: 0x1FC68B8
	public void Close() { }

	// RVA: 0x1FC68C0 Offset: 0x1FC68C0 VA: 0x1FC68C0
	public void Close(Action callback) { }

	// RVA: 0x1FC695C Offset: 0x1FC695C VA: 0x1FC695C
	protected void EndClose() { }

	// RVA: 0x1FC69A0 Offset: 0x1FC69A0 VA: 0x1FC69A0
	protected void Callback(bool result) { }

	// RVA: 0x1FC6BEC Offset: 0x1FC6BEC VA: 0x1FC6BEC
	protected void InitNormalDisp() { }

	// RVA: 0x1FC5AE0 Offset: 0x1FC5AE0 VA: 0x1FC5AE0
	protected void InitAllDisp() { }

	// RVA: 0x1FC6638 Offset: 0x1FC6638 VA: 0x1FC6638
	protected void InitFatigueDisp() { }

	// RVA: 0x1FC5ED4 Offset: 0x1FC5ED4 VA: 0x1FC5ED4
	protected void InitShortDisp() { }

	// RVA: 0x1FC6D28 Offset: 0x1FC6D28 VA: 0x1FC6D28
	protected void InitShortDispButtons() { }

	// RVA: 0x1FC6150 Offset: 0x1FC6150 VA: 0x1FC6150
	protected void InitCostumeDisp() { }

	// RVA: 0x1FC63C4 Offset: 0x1FC63C4 VA: 0x1FC63C4
	protected void InitCommandCodeDisp() { }

	// RVA: 0x1FC59DC Offset: 0x1FC59DC VA: 0x1FC59DC
	protected void SetEnableButtons(bool isEnable) { }

	// RVA: 0x1FC74CC Offset: 0x1FC74CC VA: 0x1FC74CC
	protected void SetNormalButtonEnable(bool isEnable) { }

	// RVA: 0x1FC7170 Offset: 0x1FC7170 VA: 0x1FC7170
	protected void SetAllButtonEnable(bool isEnable) { }

	// RVA: 0x1FC7420 Offset: 0x1FC7420 VA: 0x1FC7420
	protected void SetFatigueButtonEnable(bool isEnable) { }

	// RVA: 0x1FC721C Offset: 0x1FC721C VA: 0x1FC721C
	protected void SetShortButtonEnable(bool isEnable) { }

	// RVA: 0x1FC72C8 Offset: 0x1FC72C8 VA: 0x1FC72C8
	protected void SetCostumeButtonEnable(bool isEnable) { }

	// RVA: 0x1FC7374 Offset: 0x1FC7374 VA: 0x1FC7374
	protected void SetCommandCodeButtonEnable(bool isEnable) { }

	// RVA: 0x1FC7578 Offset: 0x1FC7578 VA: 0x1FC7578
	protected void SetNormalButtonSelect() { }

	// RVA: 0x1FC5C1C Offset: 0x1FC5C1C VA: 0x1FC5C1C
	protected void SetAllButtonSelect() { }

	// RVA: 0x1FC6774 Offset: 0x1FC6774 VA: 0x1FC6774
	protected void SetFatigueButtonSelect() { }

	// RVA: 0x1FC6018 Offset: 0x1FC6018 VA: 0x1FC6018
	protected void SetShortButtonSelect() { }

	// RVA: 0x1FC628C Offset: 0x1FC628C VA: 0x1FC628C
	protected void SetCostumeButtonSelect() { }

	// RVA: 0x1FC6500 Offset: 0x1FC6500 VA: 0x1FC6500
	protected void SetCommandCodeButtonSelect() { }

	// RVA: 0x1FC5D54 Offset: 0x1FC5D54 VA: 0x1FC5D54
	protected void SetSmartSortButtonSelect() { }

	// RVA: 0x1FC5E04 Offset: 0x1FC5E04 VA: 0x1FC5E04
	protected void SetChoiceSortButtonSelect() { }

	// RVA: 0x1FC76B0 Offset: 0x1FC76B0 VA: 0x1FC76B0
	public void OnClickDecide() { }

	// RVA: 0x1FC781C Offset: 0x1FC781C VA: 0x1FC781C
	public void OnClickCancel() { }

	// RVA: 0x1FC78BC Offset: 0x1FC78BC VA: 0x1FC78BC
	public void OnClickHelp() { }

	// RVA: 0x1FC7A3C Offset: 0x1FC7A3C VA: 0x1FC7A3C
	private void OnClickHelpClose() { }

	// RVA: 0x1FC7A88 Offset: 0x1FC7A88 VA: 0x1FC7A88
	private void ChangeButtonSelect() { }

	// RVA: 0x1FC7AC4 Offset: 0x1FC7AC4 VA: 0x1FC7AC4
	public void OnClickSortClass() { }

	// RVA: 0x1FC7B6C Offset: 0x1FC7B6C VA: 0x1FC7B6C
	public void OnClickSortCreate() { }

	// RVA: 0x1FC7C14 Offset: 0x1FC7C14 VA: 0x1FC7C14
	public void OnClickEventOrder() { }

	// RVA: 0x1FC7CBC Offset: 0x1FC7CBC VA: 0x1FC7CBC
	public void OnClickSortRarity() { }

	// RVA: 0x1FC7D64 Offset: 0x1FC7D64 VA: 0x1FC7D64
	public void OnClickSortLevel() { }

	// RVA: 0x1FC7E0C Offset: 0x1FC7E0C VA: 0x1FC7E0C
	public void OnClickSortNpLevel() { }

	// RVA: 0x1FC7EB4 Offset: 0x1FC7EB4 VA: 0x1FC7EB4
	public void OnClickSortHp() { }

	// RVA: 0x1FC7F5C Offset: 0x1FC7F5C VA: 0x1FC7F5C
	public void OnClickSortAttack() { }

	// RVA: 0x1FC8004 Offset: 0x1FC8004 VA: 0x1FC8004
	public void OnClickSortCost() { }

	// RVA: 0x1FC80AC Offset: 0x1FC80AC VA: 0x1FC80AC
	public void OnClickSortAmount() { }

	// RVA: 0x1FC8154 Offset: 0x1FC8154 VA: 0x1FC8154
	public void OnClickSortFriendShip() { }

	// RVA: 0x1FC81FC Offset: 0x1FC81FC VA: 0x1FC81FC
	public void OnClickSortAdjustHp() { }

	// RVA: 0x1FC82A4 Offset: 0x1FC82A4 VA: 0x1FC82A4
	public void OnClickSortAdjustAtk() { }

	// RVA: 0x1FC834C Offset: 0x1FC834C VA: 0x1FC834C
	public void OnClickSortCostume() { }

	// RVA: 0x1FC83F4 Offset: 0x1FC83F4 VA: 0x1FC83F4
	public void OnClickSortHavingCostume() { }

	// RVA: 0x1FC849C Offset: 0x1FC849C VA: 0x1FC849C
	public void OnClickSortNotHavingCostume() { }

	// RVA: 0x1FC8544 Offset: 0x1FC8544 VA: 0x1FC8544
	public void OnClickSortNotHavingItem() { }

	// RVA: 0x1FC85EC Offset: 0x1FC85EC VA: 0x1FC85EC
	public void OnClickSortLimitCount() { }

	// RVA: 0x1FC8694 Offset: 0x1FC8694 VA: 0x1FC8694
	public void OnClickSortRecoveryFatigue() { }

	// RVA: 0x1FC873C Offset: 0x1FC873C VA: 0x1FC873C
	public void OnClickSmartSort() { }

	// RVA: 0x1FC8820 Offset: 0x1FC8820 VA: 0x1FC8820
	public void OnClickChoiceSort() { }

	// RVA: 0x1FC8904 Offset: 0x1FC8904 VA: 0x1FC8904 Slot: 6
	protected override string get_closeBtnPath() { }

	// RVA: 0x1FC894C Offset: 0x1FC894C VA: 0x1FC894C
	private static void .cctor() { }
}

// Namespace: 
public enum ServantSortSelectMenu.Kind // TypeDefIndex: 5677
{
	// Fields
	public int value__; // 0x0
	public const ServantSortSelectMenu.Kind SERVANT_COMBINE_BASE_SELECT = 0;
	public const ServantSortSelectMenu.Kind SERVANT_COMBINE_SELECT = 1;
	public const ServantSortSelectMenu.Kind SERVANT_COMBINE_EQUIP_SELECT = 2;
	public const ServantSortSelectMenu.Kind SERVANT_NORMAL_SELECT = 3;
	public const ServantSortSelectMenu.Kind SERVANT_EQUIP_NORMAL_SELECT = 4;
	public const ServantSortSelectMenu.Kind SERVANT_COSTUME_BASE_SELECT = 5;
	public const ServantSortSelectMenu.Kind COMMAND_CODE_SELECT = 6;
	public const ServantSortSelectMenu.Kind SERVANT_RECOVERY_FATIGUE = 7;
}

// Namespace: 
protected enum ServantSortSelectMenu.State // TypeDefIndex: 5678
{
	// Fields
	public int value__; // 0x0
	public const ServantSortSelectMenu.State INIT = 0;
	public const ServantSortSelectMenu.State OPEN = 1;
	public const ServantSortSelectMenu.State INPUT = 2;
	public const ServantSortSelectMenu.State SELECTED = 3;
	public const ServantSortSelectMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class ServantSortSelectMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 5679
{
	// Methods

	// RVA: 0x1FC8A3C Offset: 0x1FC8A3C VA: 0x1FC8A3C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1FC69C0 Offset: 0x1FC69C0 VA: 0x1FC69C0 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x1FC8A4C Offset: 0x1FC8A4C VA: 0x1FC8A4C Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x1FC8ADC Offset: 0x1FC8ADC VA: 0x1FC8ADC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public static class RandomLimitCountManager // TypeDefIndex: 5680
{
	// Fields
	private static Dictionary<string, int> choiceRandomLimitCountDic; // 0x0
	private static bool enableRandomLimitCount; // 0x8

	// Properties
	public static bool EnableRandomLimitCount { get; set; }

	// Methods

	// RVA: 0x181C7A4 Offset: 0x181C7A4 VA: 0x181C7A4
	public static void set_EnableRandomLimitCount(bool value) { }

	// RVA: 0x181C868 Offset: 0x181C868 VA: 0x181C868
	public static bool get_EnableRandomLimitCount() { }

	// RVA: 0x181C8D0 Offset: 0x181C8D0 VA: 0x181C8D0
	private static string GenerateKey(long userId, long userSvtId, int groupIndex) { }

	// RVA: 0x181CB20 Offset: 0x181CB20 VA: 0x181CB20
	private static bool IsChose(string key) { }

	// RVA: 0x181CBAC Offset: 0x181CBAC VA: 0x181CBAC
	public static int GetChoiceLimitCount(UserServantEntity entity) { }

	// RVA: 0x181D39C Offset: 0x181D39C VA: 0x181D39C
	public static int GetChoiceLimitCount(ServantLeaderInfo info) { }

	// RVA: 0x181D76C Offset: 0x181D76C VA: 0x181D76C
	private static void .cctor() { }
}

// Namespace: 
public class ServantSkillStrengthStatus : BaseMonoBehaviour // TypeDefIndex: 5681
{
	// Fields
	public static readonly string PATH; // 0x0
	private static readonly string ICON_NAME_ON; // 0x8
	private static readonly string ICON_NAME_OFF; // 0x10
	public static readonly string ICON_SKILL_ON; // 0x18
	public static readonly string ICON_SKILL_OFF; // 0x20

	// Methods

	// RVA: 0x1FC3D88 Offset: 0x1FC3D88 VA: 0x1FC3D88
	public void .ctor() { }

	// RVA: 0x1FC05F4 Offset: 0x1FC05F4 VA: 0x1FC05F4
	public void Set(UILabel skillNameLabel, int strengthStatus, int skillRecord, int offset, int y, Vector2Int size) { }

	// RVA: 0x1FC3E1C Offset: 0x1FC3E1C VA: 0x1FC3E1C
	public void SetVertical(UISprite uISprite, int strengthStatus, int skillRecord) { }

	// RVA: 0x1FC3D90 Offset: 0x1FC3D90 VA: 0x1FC3D90
	public static int GetIconCnt(int skillRecord) { }

	// RVA: 0x1FC3D98 Offset: 0x1FC3D98 VA: 0x1FC3D98
	public static int GetStrengthenedCnt(int strengthStatus, int skillRecord) { }

	// RVA: 0x1FC4294 Offset: 0x1FC4294 VA: 0x1FC4294
	public static int GetRestStrengtdCnt(int strengthStatus) { }

	// RVA: 0x1FC42A4 Offset: 0x1FC42A4 VA: 0x1FC42A4
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusBattleConfirmDialog : BaseDialog // TypeDefIndex: 5682
{
	// Fields
	[SerializeField] // RVA: 0xCBAEC8 Offset: 0xCBAEC8 VA: 0xCBAEC8
	protected UILabel messageLabel; // 0x58
	[SerializeField] // RVA: 0xCBAED8 Offset: 0xCBAED8 VA: 0xCBAED8
	protected UILabel nowSkillTitleLabel; // 0x60
	[SerializeField] // RVA: 0xCBAEE8 Offset: 0xCBAEE8 VA: 0xCBAEE8
	protected UILabel nextSkillTitleLabel; // 0x68
	[SerializeField] // RVA: 0xCBAEF8 Offset: 0xCBAEF8 VA: 0xCBAEF8
	protected GameObject[] nowSkillBaseList; // 0x70
	[SerializeField] // RVA: 0xCBAF08 Offset: 0xCBAF08 VA: 0xCBAF08
	protected GameObject[] nextSkillBaseList; // 0x78
	[SerializeField] // RVA: 0xCBAF18 Offset: 0xCBAF18 VA: 0xCBAF18
	protected SkillIconComponent[] nowSkillIconList; // 0x80
	[SerializeField] // RVA: 0xCBAF28 Offset: 0xCBAF28 VA: 0xCBAF28
	protected SkillIconComponent[] nextSkillIconList; // 0x88
	[SerializeField] // RVA: 0xCBAF38 Offset: 0xCBAF38 VA: 0xCBAF38
	protected UIRangeLabel[] nowSkillNameList; // 0x90
	[SerializeField] // RVA: 0xCBAF48 Offset: 0xCBAF48 VA: 0xCBAF48
	protected UIRangeLabel[] nextSkillNameList; // 0x98
	[SerializeField] // RVA: 0xCBAF58 Offset: 0xCBAF58 VA: 0xCBAF58
	protected UILabel nowNpTitleLabel; // 0xA0
	[SerializeField] // RVA: 0xCBAF68 Offset: 0xCBAF68 VA: 0xCBAF68
	protected UILabel nextNpTitleLabel; // 0xA8
	[SerializeField] // RVA: 0xCBAF78 Offset: 0xCBAF78 VA: 0xCBAF78
	protected UILabel nowNpNameLabel; // 0xB0
	[SerializeField] // RVA: 0xCBAF88 Offset: 0xCBAF88 VA: 0xCBAF88
	protected UILabel nextNpNameLabel; // 0xB8
	[SerializeField] // RVA: 0xCBAF98 Offset: 0xCBAF98 VA: 0xCBAF98
	protected UILabel buttonDecideLabel; // 0xC0
	[SerializeField] // RVA: 0xCBAFA8 Offset: 0xCBAFA8 VA: 0xCBAFA8
	protected UILabel buttonCancelLabel; // 0xC8
	protected ServantStatusBattleConfirmDialog.ClickDelegate clickFunc; // 0xD0
	protected Action closeCallbackFunc; // 0xD8
	protected bool isButtonEnable; // 0xE0

	// Methods

	// RVA: 0x1FC8AE8 Offset: 0x1FC8AE8 VA: 0x1FC8AE8
	public void .ctor() { }

	// RVA: 0x1FC8C20 Offset: 0x1FC8C20 VA: 0x1FC8C20
	public void Init() { }

	// RVA: 0x1FC8DF0 Offset: 0x1FC8DF0 VA: 0x1FC8DF0
	public void Open(TreasureDvcInfo nowTdInfo, TreasureDvcInfo nextTdInfo, bool isTdModify, SkillInfo[] nowSkillInfoList, SkillInfo[] nextSkillInfoList, bool isSkillModify, ServantStatusBattleConfirmDialog.ClickDelegate func, int svtId, int nowLimitCount, int nextLimitCount) { }

	// RVA: 0x1FC9960 Offset: 0x1FC9960 VA: 0x1FC9960
	protected void EndOpen() { }

	// RVA: 0x1FC996C Offset: 0x1FC996C VA: 0x1FC996C
	public void Close() { }

	// RVA: 0x1FC9974 Offset: 0x1FC9974 VA: 0x1FC9974
	public void Close(Action callback) { }

	// RVA: 0x1FC9A00 Offset: 0x1FC9A00 VA: 0x1FC9A00
	protected void EndClose() { }

	// RVA: 0x1FC9A64 Offset: 0x1FC9A64 VA: 0x1FC9A64
	public void OnClickDecide() { }

	// RVA: 0x1FC9AF8 Offset: 0x1FC9AF8 VA: 0x1FC9AF8
	public void OnClickCancel() { }
}

// Namespace: 
public sealed class ServantStatusBattleConfirmDialog.ClickDelegate : MulticastDelegate // TypeDefIndex: 5683
{
	// Methods

	// RVA: 0x1DE51CC Offset: 0x1DE51CC VA: 0x1DE51CC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1DE51DC Offset: 0x1DE51DC VA: 0x1DE51DC Slot: 11
	public virtual void Invoke(bool isDecide) { }

	// RVA: 0x1DE5408 Offset: 0x1DE5408 VA: 0x1DE5408 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isDecide, AsyncCallback callback, object object) { }

	// RVA: 0x1DE5498 Offset: 0x1DE5498 VA: 0x1DE5498 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantStatusBattleListViewIndicator : ListViewIndicator // TypeDefIndex: 5684
{
	// Fields
	[SerializeField] // RVA: 0xCBAFB8 Offset: 0xCBAFB8 VA: 0xCBAFB8
	protected GameObject topObject; // 0x18
	[SerializeField] // RVA: 0xCBAFC8 Offset: 0xCBAFC8 VA: 0xCBAFC8
	protected GameObject bottomObject; // 0x20
	protected ListViewManager manager; // 0x28
	protected int pageMax; // 0x30
	protected int pageIndex; // 0x34

	// Methods

	// RVA: 0x1DE54A4 Offset: 0x1DE54A4 VA: 0x1DE54A4
	public void .ctor() { }

	// RVA: 0x1DE54AC Offset: 0x1DE54AC VA: 0x1DE54AC Slot: 4
	public override void SetIndexMax(int max) { }

	// RVA: 0x1DE5518 Offset: 0x1DE5518 VA: 0x1DE5518 Slot: 5
	public override void OnModifyCenterItem(ListViewManager manager, ListViewItem item, bool isTop, bool isBottom, bool isLeft, bool isRight) { }

	// RVA: 0x1DE55B8 Offset: 0x1DE55B8 VA: 0x1DE55B8 Slot: 6
	public override void OnModifyPosition(ListViewManager manager, ListViewItem item) { }

	// RVA: 0x1DE550C Offset: 0x1DE550C VA: 0x1DE550C
	public void SetPageMax(int max) { }

	// RVA: 0x1DE5670 Offset: 0x1DE5670 VA: 0x1DE5670
	public int GetPageIndex() { }

	// RVA: 0x1DE55B0 Offset: 0x1DE55B0 VA: 0x1DE55B0
	public void SetPageIndex(int index) { }

	// RVA: 0x1DE5678 Offset: 0x1DE5678 VA: 0x1DE5678
	public void OnClickTop() { }

	// RVA: 0x1DE57FC Offset: 0x1DE57FC VA: 0x1DE57FC
	public void OnClickBottom() { }
}

// Namespace: 
public class ServantStatusBattleListViewItem : ListViewItem // TypeDefIndex: 5685
{
	// Fields
	protected ObscuredInt svtId; // 0x70
	protected ObscuredInt dispLimitCount; // 0x80
	protected bool isEnabled; // 0x90
	protected bool isCanSelect; // 0x91
	protected string name; // 0x98
	protected bool isMine; // 0xA0

	// Properties
	public int SvtId { get; }
	public int DispLimitCount { get; }
	public bool IsEnabled { get; }
	public bool IsCanSelect { get; }
	public string Name { get; }
	public bool IsMine { get; }

	// Methods

	// RVA: 0x1DE5988 Offset: 0x1DE5988 VA: 0x1DE5988
	public void .ctor(int index, int svtId, int dispLimitCount, bool isEnabled, bool isCanSelect, bool isSelect, bool isMine) { }

	// RVA: 0x1DE5B14 Offset: 0x1DE5B14 VA: 0x1DE5B14 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1DE5B1C Offset: 0x1DE5B1C VA: 0x1DE5B1C
	public int get_SvtId() { }

	// RVA: 0x1DE5B8C Offset: 0x1DE5B8C VA: 0x1DE5B8C
	public int get_DispLimitCount() { }

	// RVA: 0x1DE5BFC Offset: 0x1DE5BFC VA: 0x1DE5BFC
	public bool get_IsEnabled() { }

	// RVA: 0x1DE5C04 Offset: 0x1DE5C04 VA: 0x1DE5C04
	public bool get_IsCanSelect() { }

	// RVA: 0x1DE5C0C Offset: 0x1DE5C0C VA: 0x1DE5C0C
	public string get_Name() { }

	// RVA: 0x1DE5C14 Offset: 0x1DE5C14 VA: 0x1DE5C14
	public bool get_IsMine() { }
}

// Namespace: 
public class ServantStatusBattleListViewItemDraw : MonoBehaviour // TypeDefIndex: 5686
{
	// Fields
	[SerializeField] // RVA: 0xCBAFD8 Offset: 0xCBAFD8 VA: 0xCBAFD8
	protected UISprite baseSpite; // 0x18
	[SerializeField] // RVA: 0xCBAFE8 Offset: 0xCBAFE8 VA: 0xCBAFE8
	protected UIRangeLabel nameRangeLabel; // 0x20
	[SerializeField] // RVA: 0xCBAFF8 Offset: 0xCBAFF8 VA: 0xCBAFF8
	protected UICommonButton baseButton; // 0x28
	[SerializeField] // RVA: 0xCBB008 Offset: 0xCBB008 VA: 0xCBB008
	private UILabel limitSealLabel; // 0x30
	[SerializeField] // RVA: 0xCBB018 Offset: 0xCBB018 VA: 0xCBB018
	private GameObject limitSealObject; // 0x38

	// Methods

	// RVA: 0x1DE5C1C Offset: 0x1DE5C1C VA: 0x1DE5C1C
	public void .ctor() { }

	// RVA: 0x1DE5C24 Offset: 0x1DE5C24 VA: 0x1DE5C24
	public void SetItem(ServantStatusBattleListViewItem item, ServantStatusBattleListViewItemDraw.DispMode mode) { }

	// RVA: 0x1DE6104 Offset: 0x1DE6104 VA: 0x1DE6104
	public void SetInput(ServantStatusBattleListViewItem item, bool isInput) { }
}

// Namespace: 
public enum ServantStatusBattleListViewItemDraw.DispMode // TypeDefIndex: 5687
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusBattleListViewItemDraw.DispMode INVISIBLE = 0;
	public const ServantStatusBattleListViewItemDraw.DispMode INVALID = 1;
	public const ServantStatusBattleListViewItemDraw.DispMode VALID = 2;
	public const ServantStatusBattleListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class ServantStatusBattleListViewManager : ListViewManager // TypeDefIndex: 5688
{
	// Fields
	protected const int LIST_VIEW_LENGTH = 5;
	[SerializeField] // RVA: 0xCBB028 Offset: 0xCBB028 VA: 0xCBB028
	protected UILabel explanationLabel; // 0x138
	protected ServantStatusBattleListViewManager.InitMode initMode; // 0x140
	[CompilerGeneratedAttribute] // RVA: 0xCBB038 Offset: 0xCBB038 VA: 0xCBB038
	[DebuggerBrowsableAttribute] // RVA: 0xCBB038 Offset: 0xCBB038 VA: 0xCBB038
	private ServantStatusBattleListViewManager.CallbackFunc callbackFunc; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xCBB074 Offset: 0xCBB074 VA: 0xCBB074
	[DebuggerBrowsableAttribute] // RVA: 0xCBB074 Offset: 0xCBB074 VA: 0xCBB074
	private Action callbackFunc2; // 0x150
	protected int callbackCount; // 0x158

	// Properties
	public List<ServantStatusBattleListViewObject> ObjectList { get; }
	public List<ServantStatusBattleListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x1DE61B4 Offset: 0x1DE61B4 VA: 0x1DE61B4
	public void .ctor() { }

	// RVA: 0x1DE61BC Offset: 0x1DE61BC VA: 0x1DE61BC
	protected void add_callbackFunc(ServantStatusBattleListViewManager.CallbackFunc value) { }

	// RVA: 0x1DE62AC Offset: 0x1DE62AC VA: 0x1DE62AC
	protected void remove_callbackFunc(ServantStatusBattleListViewManager.CallbackFunc value) { }

	// RVA: 0x1DE639C Offset: 0x1DE639C VA: 0x1DE639C
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x1DE648C Offset: 0x1DE648C VA: 0x1DE648C
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x1DE657C Offset: 0x1DE657C VA: 0x1DE657C
	public List<ServantStatusBattleListViewObject> get_ObjectList() { }

	// RVA: 0x1DE6748 Offset: 0x1DE6748 VA: 0x1DE6748
	public List<ServantStatusBattleListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1DE6A28 Offset: 0x1DE6A28 VA: 0x1DE6A28
	public void CreateList(ServantStatusListViewItem mainInfo) { }

	// RVA: 0x1DE6D98 Offset: 0x1DE6D98 VA: 0x1DE6D98
	public void DestroyList() { }

	// RVA: 0x1DE6DA0 Offset: 0x1DE6DA0 VA: 0x1DE6DA0
	public ServantStatusBattleListViewItem GetItem(int index) { }

	// RVA: 0x1DE6E48 Offset: 0x1DE6E48 VA: 0x1DE6E48 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1DE6F80 Offset: 0x1DE6F80 VA: 0x1DE6F80
	public void SetMode(ServantStatusBattleListViewManager.InitMode mode, ServantStatusBattleListViewManager.CallbackFunc callback) { }

	// RVA: 0x1DE7190 Offset: 0x1DE7190 VA: 0x1DE7190
	public void SetMode(ServantStatusBattleListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1DE6F88 Offset: 0x1DE6F88 VA: 0x1DE6F88
	public void SetMode(ServantStatusBattleListViewManager.InitMode mode, int select = -1) { }

	// RVA: 0x1DE7410 Offset: 0x1DE7410 VA: 0x1DE7410
	protected void RequestListObject(ServantStatusBattleListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1DE7198 Offset: 0x1DE7198 VA: 0x1DE7198
	protected void RequestListObject(ServantStatusBattleListViewObject.InitMode mode) { }

	// RVA: 0x1DE769C Offset: 0x1DE769C VA: 0x1DE769C
	protected void OnMoveEnd() { }

	// RVA: 0x1DE7768 Offset: 0x1DE7768 VA: 0x1DE7768
	protected void OnClickListView(ListViewObject selectObj) { }

	// RVA: 0x1DE776C Offset: 0x1DE776C VA: 0x1DE776C
	protected void OnClickListViewButton(ListViewObject selectObj) { }

	// RVA: 0x1DE7A8C Offset: 0x1DE7A8C VA: 0x1DE7A8C
	public void ChangeSelectIndex(int index) { }
}

// Namespace: 
public enum ServantStatusBattleListViewManager.InitMode // TypeDefIndex: 5689
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusBattleListViewManager.InitMode NONE = 0;
	public const ServantStatusBattleListViewManager.InitMode INPUT = 1;
	public const ServantStatusBattleListViewManager.InitMode MODIFY = 2;
}

// Namespace: 
public sealed class ServantStatusBattleListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 5690
{
	// Methods

	// RVA: 0x1DE7CAC Offset: 0x1DE7CAC VA: 0x1DE7CAC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1DE7860 Offset: 0x1DE7860 VA: 0x1DE7860 Slot: 11
	public virtual void Invoke(int result) { }

	// RVA: 0x1DE7CBC Offset: 0x1DE7CBC VA: 0x1DE7CBC Slot: 12
	public virtual IAsyncResult BeginInvoke(int result, AsyncCallback callback, object object) { }

	// RVA: 0x1DE7D48 Offset: 0x1DE7D48 VA: 0x1DE7D48 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantStatusBattleListViewObject : ListViewObject // TypeDefIndex: 5691
{
	// Fields
	protected ServantStatusBattleListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCBB0B0 Offset: 0xCBB0B0 VA: 0xCBB0B0
	[DebuggerBrowsableAttribute] // RVA: 0xCBB0B0 Offset: 0xCBB0B0 VA: 0xCBB0B0
	private Action callbackFunc; // 0x70
	protected ServantStatusBattleListViewItemDraw itemDraw; // 0x78
	protected ServantStatusBattleListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x1DE7D54 Offset: 0x1DE7D54 VA: 0x1DE7D54
	public void .ctor() { }

	// RVA: 0x1DE7DBC Offset: 0x1DE7DBC VA: 0x1DE7DBC
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1DE7EA8 Offset: 0x1DE7EA8 VA: 0x1DE7EA8
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1DE7F94 Offset: 0x1DE7F94 VA: 0x1DE7F94
	protected void Awake() { }

	// RVA: 0x1DE8008 Offset: 0x1DE8008 VA: 0x1DE8008
	private void OnDestroy() { }

	// RVA: 0x1DE69A4 Offset: 0x1DE69A4 VA: 0x1DE69A4
	public ServantStatusBattleListViewItem GetItem() { }

	// RVA: 0x1DE80B4 Offset: 0x1DE80B4 VA: 0x1DE80B4 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1DE80E4 Offset: 0x1DE80E4 VA: 0x1DE80E4 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x1DE80DC Offset: 0x1DE80DC VA: 0x1DE80DC
	protected void InitItem() { }

	// RVA: 0x1DE810C Offset: 0x1DE810C VA: 0x1DE810C Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x1DE8210 Offset: 0x1DE8210 VA: 0x1DE8210 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1DE8298 Offset: 0x1DE8298 VA: 0x1DE8298
	public void Init(ServantStatusBattleListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1DE738C Offset: 0x1DE738C VA: 0x1DE738C
	public void Init(ServantStatusBattleListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x1DE7618 Offset: 0x1DE7618 VA: 0x1DE7618
	public void Init(ServantStatusBattleListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x1DE6F00 Offset: 0x1DE6F00 VA: 0x1DE6F00
	public void Init(ServantStatusBattleListViewObject.InitMode initMode) { }

	// RVA: 0x1DE8484 Offset: 0x1DE8484 VA: 0x1DE8484
	protected void SetupDisp() { }

	// RVA: 0x1DE8594 Offset: 0x1DE8594 VA: 0x1DE8594
	protected void EventMoveEnd() { }

	// RVA: 0x1DE85BC Offset: 0x1DE85BC VA: 0x1DE85BC
	public void OnClickButton() { }
}

// Namespace: 
public enum ServantStatusBattleListViewObject.InitMode // TypeDefIndex: 5692
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusBattleListViewObject.InitMode INVISIBLE = 0;
	public const ServantStatusBattleListViewObject.InitMode INVALID = 1;
	public const ServantStatusBattleListViewObject.InitMode VALID = 2;
	public const ServantStatusBattleListViewObject.InitMode INPUT = 3;
	public const ServantStatusBattleListViewObject.InitMode MODIFY = 4;
}

// Namespace: 
protected enum ServantStatusBattleListViewObject.State // TypeDefIndex: 5693
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusBattleListViewObject.State INIT = 0;
	public const ServantStatusBattleListViewObject.State IDLE = 1;
	public const ServantStatusBattleListViewObject.State MOVE = 2;
	public const ServantStatusBattleListViewObject.State INPUT = 3;
}

// Namespace: 
public class ServantStatusCharaGraphListViewIndicator : ListViewIndicator // TypeDefIndex: 5694
{
	// Fields
	[SerializeField] // RVA: 0xCBB0EC Offset: 0xCBB0EC VA: 0xCBB0EC
	protected GameObject leftObject; // 0x18
	[SerializeField] // RVA: 0xCBB0FC Offset: 0xCBB0FC VA: 0xCBB0FC
	protected GameObject rightObject; // 0x20
	[SerializeField] // RVA: 0xCBB10C Offset: 0xCBB10C VA: 0xCBB10C
	protected GameObject pageBaseObject; // 0x28
	[SerializeField] // RVA: 0xCBB11C Offset: 0xCBB11C VA: 0xCBB11C
	protected UISprite[] pageSpriteList; // 0x30
	protected ListViewManager manager; // 0x38
	protected int pageMax; // 0x40
	protected int pageIndex; // 0x44
	protected bool isEnableArrowObj; // 0x48

	// Methods

	// RVA: 0x1DE8638 Offset: 0x1DE8638 VA: 0x1DE8638
	public void .ctor() { }

	// RVA: 0x1DE8698 Offset: 0x1DE8698 VA: 0x1DE8698 Slot: 4
	public override void SetIndexMax(int max) { }

	// RVA: 0x1DE88B0 Offset: 0x1DE88B0 VA: 0x1DE88B0 Slot: 5
	public override void OnModifyCenterItem(ListViewManager manager, ListViewItem item, bool isTop, bool isBottom, bool isLeft, bool isRight) { }

	// RVA: 0x1DE8A7C Offset: 0x1DE8A7C VA: 0x1DE8A7C Slot: 6
	public override void OnModifyPosition(ListViewManager manager, ListViewItem item) { }

	// RVA: 0x1DE8B88 Offset: 0x1DE8B88 VA: 0x1DE8B88
	public void SetActiveArrowObject(bool active) { }

	// RVA: 0x1DE86F4 Offset: 0x1DE86F4 VA: 0x1DE86F4
	public void SetPageMax(int max) { }

	// RVA: 0x1DE8C54 Offset: 0x1DE8C54 VA: 0x1DE8C54
	public int GetPageIndex() { }

	// RVA: 0x1DE898C Offset: 0x1DE898C VA: 0x1DE898C
	public void SetPageIndex(int index) { }

	// RVA: 0x1DE8C5C Offset: 0x1DE8C5C VA: 0x1DE8C5C
	public void OnClickLeft() { }

	// RVA: 0x1DE8DC4 Offset: 0x1DE8DC4 VA: 0x1DE8DC4
	public void OnClickRight() { }
}

// Namespace: 
public class ServantStatusCharaGraphListViewItem : ListViewItem // TypeDefIndex: 5695
{
	// Fields
	protected ServantStatusListViewItem mainInfo; // 0x70
	protected int imageLimitCount; // 0x78
	public ServantStatusCharaGraphListViewItem.ItemDataType itemDataType; // 0x7C

	// Properties
	public ServantStatusListViewItem MainInfo { get; }
	public int ImageLimitCount { get; }

	// Methods

	// RVA: 0x1DE8F4C Offset: 0x1DE8F4C VA: 0x1DE8F4C
	public void .ctor(int index, ServantStatusListViewItem mainInfo, int imageLimitCount) { }

	// RVA: 0x1DE8F88 Offset: 0x1DE8F88 VA: 0x1DE8F88 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1DE8F90 Offset: 0x1DE8F90 VA: 0x1DE8F90
	public ServantStatusListViewItem get_MainInfo() { }

	// RVA: 0x1DE8F98 Offset: 0x1DE8F98 VA: 0x1DE8F98
	public int get_ImageLimitCount() { }
}

// Namespace: 
public enum ServantStatusCharaGraphListViewItem.ItemDataType // TypeDefIndex: 5696
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusCharaGraphListViewItem.ItemDataType NORMAL = 0;
	public const ServantStatusCharaGraphListViewItem.ItemDataType EX = 1;
}

// Namespace: 
public class ServantStatusCharaGraphListViewItemDraw : MonoBehaviour // TypeDefIndex: 5697
{
	// Fields
	protected static readonly int DEFAULT_DEPTH; // 0x0
	[SerializeField] // RVA: 0xCBB12C Offset: 0xCBB12C VA: 0xCBB12C
	protected GameObject charaGraphBase; // 0x18
	[SerializeField] // RVA: 0xCBB13C Offset: 0xCBB13C VA: 0xCBB13C
	protected UICommonButton baseButton; // 0x20
	protected UICharaGraphTexture charaGraph; // 0x28

	// Methods

	// RVA: 0x1DE8FA0 Offset: 0x1DE8FA0 VA: 0x1DE8FA0
	public void .ctor() { }

	// RVA: 0x1DE8FA8 Offset: 0x1DE8FA8 VA: 0x1DE8FA8
	public UICharaGraphRender.Kind GetCharaGraphBaseKind() { }

	// RVA: 0x1DE9048 Offset: 0x1DE9048 VA: 0x1DE9048
	public void SetItem(ServantStatusCharaGraphListViewItem item, ServantStatusCharaGraphListViewItemDraw.DispMode mode) { }

	// RVA: 0x1DE9ABC Offset: 0x1DE9ABC VA: 0x1DE9ABC
	private int GetImageLimitSealAfter(int svtId, int limitCount) { }

	// RVA: 0x1DE9B58 Offset: 0x1DE9B58 VA: 0x1DE9B58
	public void ExecuteSpriteHide() { }

	// RVA: 0x1DE9BF4 Offset: 0x1DE9BF4 VA: 0x1DE9BF4
	public void ExecuteSpriteFadeout(float duration) { }

	// RVA: 0x1DE9CA4 Offset: 0x1DE9CA4 VA: 0x1DE9CA4
	public void ExecuteSpriteFadein(float duration) { }

	// RVA: 0x1DE9D54 Offset: 0x1DE9D54 VA: 0x1DE9D54
	public void SetExCharaGraph(ServantStatusCharaGraphListViewItem item) { }

	// RVA: 0x1DE9F50 Offset: 0x1DE9F50 VA: 0x1DE9F50
	private static void .cctor() { }
}

// Namespace: 
public enum ServantStatusCharaGraphListViewItemDraw.DispMode // TypeDefIndex: 5698
{
	// Fields
	public int value__; // 0x0
