	[CompilerGeneratedAttribute] // RVA: 0xC4EF74 Offset: 0xC4EF74 VA: 0xC4EF74
	private static Predicate<ServantFilterCategoryContainer> <>f__am$cache1; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC4EF84 Offset: 0xC4EF84 VA: 0xC4EF84
	private static Predicate<ServantFilterCategoryContainer> <>f__am$cache2; // 0x18

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x16B9384 Offset: 0x16B9384 VA: 0x16B9384
	public void .ctor() { }

	// RVA: 0x16B943C Offset: 0x16B943C VA: 0x16B943C
	protected void add_callbackFunc(ServantFilterSelectMenu.CallbackFunc value) { }

	// RVA: 0x16B952C Offset: 0x16B952C VA: 0x16B952C
	protected void remove_callbackFunc(ServantFilterSelectMenu.CallbackFunc value) { }

	// RVA: 0x16B961C Offset: 0x16B961C VA: 0x16B961C
	public static void InitLoad() { }

	// RVA: 0x16B9698 Offset: 0x16B9698 VA: 0x16B9698
	public static ListViewSort GetServantFilterInfo() { }

	// RVA: 0x16B9724 Offset: 0x16B9724 VA: 0x16B9724
	public void Init() { }

	// RVA: 0x16B9730 Offset: 0x16B9730 VA: 0x16B9730
	public void Open(ServantFilterSelectMenu.Kind kind, ListViewSort sort, ListViewManager listViewManager, ServantFilterSelectMenu.CallbackFunc callback) { }

	// RVA: 0x16BB288 Offset: 0x16BB288 VA: 0x16BB288
	protected void EndOpen() { }

	// RVA: 0x16BB294 Offset: 0x16BB294 VA: 0x16BB294
	public void Close() { }

	// RVA: 0x16BB29C Offset: 0x16BB29C VA: 0x16BB29C
	public void Close(Action callback) { }

	// RVA: 0x16BB338 Offset: 0x16BB338 VA: 0x16BB338
	protected void EndClose() { }

	// RVA: 0x16BB37C Offset: 0x16BB37C VA: 0x16BB37C
	protected void Callback(bool result) { }

	// RVA: 0x16BB5C8 Offset: 0x16BB5C8 VA: 0x16BB5C8
	private void SetActiveCurrentFilterContainer(bool isActive) { }

	// RVA: 0x16B9CDC Offset: 0x16B9CDC VA: 0x16B9CDC
	protected void InitServantNormalDisp() { }

	// RVA: 0x16B9E74 Offset: 0x16B9E74 VA: 0x16B9E74
	protected void InitServantListDisp() { }

	// RVA: 0x16BA038 Offset: 0x16BA038 VA: 0x16BA038
	protected void InitServantBaseDisp() { }

	// RVA: 0x16BA1FC Offset: 0x16BA1FC VA: 0x16BA1FC
	protected void InitMaterialDisp() { }

	// RVA: 0x16BA52C Offset: 0x16BA52C VA: 0x16BA52C
	protected void InitServantEquipDisp() { }

	// RVA: 0x16BA7F8 Offset: 0x16BA7F8 VA: 0x16BA7F8
	protected void InitCommandCodeDisp() { }

	// RVA: 0x16BAAC4 Offset: 0x16BAAC4 VA: 0x16BAAC4
	protected void InitCostumeDisp() { }

	// RVA: 0x16BB610 Offset: 0x16BB610 VA: 0x16BB610
	private void InitUseFilterButton() { }

	// RVA: 0x16BB868 Offset: 0x16BB868 VA: 0x16BB868
	private void InitCategoryContainer(ListViewSort.FilterCategoryKind[] categoryKindKist) { }

	// RVA: 0x16BAC40 Offset: 0x16BAC40 VA: 0x16BAC40
	private void RefreshFilterClippingPosition() { }

	// RVA: 0x16BAD50 Offset: 0x16BAD50 VA: 0x16BAD50
	protected void SetButtonSelect() { }

	// RVA: 0x16BAEC4 Offset: 0x16BAEC4 VA: 0x16BAEC4
	protected void SetButtonEnable(bool isEnable) { }

	// RVA: 0x16BBBBC Offset: 0x16BBBBC VA: 0x16BBBBC
	public void OnClickDecide() { }

	// RVA: 0x16BBE48 Offset: 0x16BBE48 VA: 0x16BBE48
	public void OnClickCancel() { }

	// RVA: 0x16BBEE8 Offset: 0x16BBEE8 VA: 0x16BBEE8
	public void OnClickClear() { }

	// RVA: 0x16BC01C Offset: 0x16BC01C VA: 0x16BC01C
	public void OnClickInitialize() { }

	// RVA: 0x16BC150 Offset: 0x16BC150 VA: 0x16BC150
	public void OnClickFilterButton(ListViewSort.FilterKind filterKind) { }

	// RVA: 0x16BB0D8 Offset: 0x16BB0D8 VA: 0x16BB0D8
	private void CheckMatchItemAndDisplayInfo() { }

	// RVA: 0x16B9B58 Offset: 0x16B9B58 VA: 0x16B9B58
	private bool[] SetKindStatus(ListViewSort sort) { }

	// RVA: 0x16BBD00 Offset: 0x16BBD00 VA: 0x16BBD00
	private bool IsChangedStatus() { }

	// RVA: 0x16BC210 Offset: 0x16BC210 VA: 0x16BC210 Slot: 6
	protected override string get_closeBtnPath() { }

	// RVA: 0x16BC258 Offset: 0x16BC258 VA: 0x16BC258
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC81D4 Offset: 0xCC81D4 VA: 0xCC81D4
	// RVA: 0x16BC2D8 Offset: 0x16BC2D8 VA: 0x16BC2D8
	private static bool <InitMaterialDisp>m__0(ServantFilterCategoryContainer x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC81E4 Offset: 0xCC81E4 VA: 0xCC81E4
	// RVA: 0x16BC308 Offset: 0x16BC308 VA: 0x16BC308
	private static bool <InitServantEquipDisp>m__1(ServantFilterCategoryContainer x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC81F4 Offset: 0xCC81F4 VA: 0xCC81F4
	// RVA: 0x16BC338 Offset: 0x16BC338 VA: 0x16BC338
	private static bool <InitCommandCodeDisp>m__2(ServantFilterCategoryContainer x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8204 Offset: 0xCC8204 VA: 0xCC8204
	// RVA: 0x16BC368 Offset: 0x16BC368 VA: 0x16BC368
	private bool <InitUseFilterButton>m__3(ServantFilterButtonControl x) { }
}

// Namespace: 
[Serializable]
private class ServantFilterSelectMenu.FilterContainer // TypeDefIndex: 5668
{
	// Fields
	public GameObject root; // 0x10
	public UIScrollView scrollView; // 0x18
	public List<ServantFilterCategoryContainer> categoryContainerList; // 0x20
	public List<ServantFilterButtonControl> filterButtonList; // 0x28

	// Methods

	// RVA: 0x16BC4CC Offset: 0x16BC4CC VA: 0x16BC4CC
	public void .ctor() { }
}

// Namespace: 
public enum ServantFilterSelectMenu.Kind // TypeDefIndex: 5669
{
	// Fields
	public int value__; // 0x0
	public const ServantFilterSelectMenu.Kind SERVANT_KEEP = 0;
	public const ServantFilterSelectMenu.Kind SERVANT = 1;
	public const ServantFilterSelectMenu.Kind SERVANT_BASE = 2;
	public const ServantFilterSelectMenu.Kind SERVANT_MATERIAL = 3;
	public const ServantFilterSelectMenu.Kind SERVANT_COSTUME = 4;
	public const ServantFilterSelectMenu.Kind SERVANT_EQUIP = 5;
	public const ServantFilterSelectMenu.Kind COMMANDCODE = 6;
}

// Namespace: 
protected enum ServantFilterSelectMenu.State // TypeDefIndex: 5670
{
	// Fields
	public int value__; // 0x0
	public const ServantFilterSelectMenu.State INIT = 0;
	public const ServantFilterSelectMenu.State OPEN = 1;
	public const ServantFilterSelectMenu.State INPUT = 2;
	public const ServantFilterSelectMenu.State SELECTED = 3;
	public const ServantFilterSelectMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class ServantFilterSelectMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 5671
{
	// Methods

	// RVA: 0x16BC420 Offset: 0x16BC420 VA: 0x16BC420
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x16BB39C Offset: 0x16BB39C VA: 0x16BB39C Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x16BC430 Offset: 0x16BC430 VA: 0x16BC430 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x16BC4C0 Offset: 0x16BC4C0 VA: 0x16BC4C0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42004 Offset: 0xC42004 VA: 0xC42004
private sealed class ServantFilterSelectMenu.<InitCategoryContainer>c__AnonStorey0 // TypeDefIndex: 5672
{
	// Fields
	internal ServantFilterCategoryContainer container; // 0x10

	// Methods

	// RVA: 0x16BBBB4 Offset: 0x16BBBB4 VA: 0x16BBBB4
	public void .ctor() { }

	// RVA: 0x16BC3E8 Offset: 0x16BC3E8 VA: 0x16BC3E8
	internal bool <>m__0(ListViewSort.FilterCategoryKind x) { }
}

// Namespace: 
public class ServantSortSelectMenu : BaseDialog // TypeDefIndex: 5673
{
	// Fields
	public UILabel titleLabel; // 0x58
	public UILabel explanationLabel; // 0x60
	public UILabel decideLabel; // 0x68
	public UILabel cancelLabel; // 0x70
	public UICommonButton decideButton; // 0x78
	public UICommonButton cancelButton; // 0x80
	public UICommonButton helpButton; // 0x88
	public UICommonButton[] normalSortButtons; // 0x90
	public UISprite[] normalSortSprites; // 0x98
	public UILabel[] normalSortBtnsLabel; // 0xA0
	public UICommonButton[] allDispSortButtons; // 0xA8
	public UISprite[] allDispSortSprites; // 0xB0
	public UILabel[] allDispSortBtnsLabel; // 0xB8
	public UICommonButton[] fatigueDispSortButtons; // 0xC0
	public UISprite[] fatigueDispSortSprites; // 0xC8
	public UILabel[] fatigueDispSortBtnsLabel; // 0xD0
	public UICommonButton[] buddyDispSortButtons; // 0xD8
	public UISprite[] buddyDispSortSprites; // 0xE0
	public UILabel[] buddyDispSortBtnsLabel; // 0xE8
	public UICommonButton[] shortDispSortButtons; // 0xF0
	public UISprite[] shortDispSortSprites; // 0xF8
	public UILabel[] shortDispSortBtnsLabel; // 0x100
	private const int ShortDispSortButtonColumnCount = 4;
	private readonly Vector2 ShortDispSortButtonSpace; // 0x108
	public UICommonButton[] costumeDispSortButtons; // 0x110
	public UISprite[] costumeDispSprites; // 0x118
	public UILabel[] costumeDispSortBtnsLabel; // 0x120
	public UICommonButton[] commandCodeDispSortButtons; // 0x128
	public UISprite[] commandCodeDispSprites; // 0x130
	public UILabel[] commandCodeDispSortBtnsLabel; // 0x138
	public GameObject smartSortObject; // 0x140
	public UILabel smartSortLabel; // 0x148
	public UILabel smartSortDetail; // 0x150
	public UISprite smartSortBtnSprite; // 0x158
	public UILabel smartChoiceLabel; // 0x160
	public UILabel smartChoiceDetail; // 0x168
	public UISprite smartChoiceBtnSprite; // 0x170
	public GameObject costumeSmartSortObject; // 0x178
	public UILabel costumeSmartSortLabel; // 0x180
	public UILabel costumeSmartSortDetail; // 0x188
	public UISprite costumeSmartSortBtnSprite; // 0x190
	public GameObject choiceSortObject; // 0x198
	public UILabel choiceSortLabel; // 0x1A0
	public UILabel choiceSortDetail; // 0x1A8
	public UISprite choiceSortBtnSprite; // 0x1B0
	public GameObject choiceSort2Object; // 0x1B8
	public UILabel choiceSort2Label; // 0x1C0
	public UILabel choiceSort2Detail; // 0x1C8
	public UISprite choiceSort2BtnSprite; // 0x1D0
	public GameObject allDispObject; // 0x1D8
	public GameObject fatigueDispObject; // 0x1E0
	public GameObject normalDispObject; // 0x1E8
	public GameObject shortDispObject; // 0x1F0
	public GameObject costumeDispObject; // 0x1F8
	public GameObject commandCodeDispObject; // 0x200
	public GameObject buddyDispObject; // 0x208
	protected const string SORT_SAVE_KEY = "ServantSortSelect";
	protected static ListViewSort commonServantSortInfo; // 0x0
	protected static ListViewSort commonServantEquipSortInfo; // 0x8
	protected static ListViewSort commandCodeSortInfo; // 0x10
	protected ServantSortSelectMenu.Kind kind; // 0x210
	protected ServantSortSelectMenu.State state; // 0x214
	protected List<ListViewSort.SortKind> servantBaseSelectList; // 0x218
	protected List<ListViewSort.SortKind> fatigureSelectList; // 0x220
	protected List<ListViewSort.SortKind> buddySelectList; // 0x228
	protected List<ListViewSort.SortKind> servantSelectList; // 0x230
	protected List<ListViewSort.SortKind> servantEquipSelectList; // 0x238
	protected List<ListViewSort.SortKind> servantCostumeSelectList; // 0x240
	protected List<ListViewSort.SortKind> commandCodeSelectList; // 0x248
	protected ListViewSort.SortKind openedKind; // 0x250
	protected bool openedSmartSort; // 0x254
	protected bool openedChoiceSort; // 0x255
	[CompilerGeneratedAttribute] // RVA: 0xC4EF94 Offset: 0xC4EF94 VA: 0xC4EF94
	[DebuggerBrowsableAttribute] // RVA: 0xC4EF94 Offset: 0xC4EF94 VA: 0xC4EF94
	private ServantSortSelectMenu.CallbackFunc callbackFunc; // 0x258
	protected Action closeCallbackFunc; // 0x260
	protected ListViewSort baseSortInfo; // 0x268
	protected ListViewSort operationSortInfo; // 0x270

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1A87CDC Offset: 0x1A87CDC VA: 0x1A87CDC
	public void .ctor() { }

	// RVA: 0x1A8888C Offset: 0x1A8888C VA: 0x1A8888C
	protected void add_callbackFunc(ServantSortSelectMenu.CallbackFunc value) { }

	// RVA: 0x1A8897C Offset: 0x1A8897C VA: 0x1A8897C
	protected void remove_callbackFunc(ServantSortSelectMenu.CallbackFunc value) { }

	// RVA: 0x1A88A6C Offset: 0x1A88A6C VA: 0x1A88A6C
	public static void InitLoad() { }

	// RVA: 0x1A88AE8 Offset: 0x1A88AE8 VA: 0x1A88AE8
	public static ListViewSort GetServantSortInfo() { }

	// RVA: 0x1A88B74 Offset: 0x1A88B74 VA: 0x1A88B74
	public static ListViewSort GetServantEquipSortInfo() { }

	// RVA: 0x1A88C00 Offset: 0x1A88C00 VA: 0x1A88C00
	public void Init() { }

	// RVA: 0x1A88C0C Offset: 0x1A88C0C VA: 0x1A88C0C
	public void Open(ServantSortSelectMenu.Kind kind, ListViewSort sort, bool isChoiceReverse, ServantSortSelectMenu.CallbackFunc callback) { }

	// RVA: 0x1A8A754 Offset: 0x1A8A754 VA: 0x1A8A754
	protected void EndOpen() { }

	// RVA: 0x1A8A760 Offset: 0x1A8A760 VA: 0x1A8A760
	public void Close() { }

	// RVA: 0x1A8A768 Offset: 0x1A8A768 VA: 0x1A8A768
	public void Close(Action callback) { }

	// RVA: 0x1A8A804 Offset: 0x1A8A804 VA: 0x1A8A804
	protected void EndClose() { }

	// RVA: 0x1A8A848 Offset: 0x1A8A848 VA: 0x1A8A848
	protected void Callback(bool result) { }

	// RVA: 0x1A8AA94 Offset: 0x1A8AA94 VA: 0x1A8AA94
	protected void InitNormalDisp() { }

	// RVA: 0x1A8970C Offset: 0x1A8970C VA: 0x1A8970C
	protected void InitAllDisp() { }

	// RVA: 0x1A8A26C Offset: 0x1A8A26C VA: 0x1A8A26C
	protected void InitFatigueDisp() { }

	// RVA: 0x1A8A4E0 Offset: 0x1A8A4E0 VA: 0x1A8A4E0
	protected void InitBuddyDisp() { }

	// RVA: 0x1A89B08 Offset: 0x1A89B08 VA: 0x1A89B08
	protected void InitShortDisp() { }

	// RVA: 0x1A8ABD0 Offset: 0x1A8ABD0 VA: 0x1A8ABD0
	protected void InitShortDispButtons() { }

	// RVA: 0x1A89D84 Offset: 0x1A89D84 VA: 0x1A89D84
	protected void InitCostumeDisp() { }

	// RVA: 0x1A89FF8 Offset: 0x1A89FF8 VA: 0x1A89FF8
	protected void InitCommandCodeDisp() { }

	// RVA: 0x1A895F0 Offset: 0x1A895F0 VA: 0x1A895F0
	protected void SetEnableButtons(bool isEnable) { }

	// RVA: 0x1A8B424 Offset: 0x1A8B424 VA: 0x1A8B424
	protected void SetNormalButtonEnable(bool isEnable) { }

	// RVA: 0x1A8B01C Offset: 0x1A8B01C VA: 0x1A8B01C
	protected void SetAllButtonEnable(bool isEnable) { }

	// RVA: 0x1A8B2CC Offset: 0x1A8B2CC VA: 0x1A8B2CC
	protected void SetFatigueButtonEnable(bool isEnable) { }

	// RVA: 0x1A8B378 Offset: 0x1A8B378 VA: 0x1A8B378
	protected void SetBuddyButtonEnable(bool isEnable) { }

	// RVA: 0x1A8B0C8 Offset: 0x1A8B0C8 VA: 0x1A8B0C8
	protected void SetShortButtonEnable(bool isEnable) { }

	// RVA: 0x1A8B174 Offset: 0x1A8B174 VA: 0x1A8B174
	protected void SetCostumeButtonEnable(bool isEnable) { }

	// RVA: 0x1A8B220 Offset: 0x1A8B220 VA: 0x1A8B220
	protected void SetCommandCodeButtonEnable(bool isEnable) { }

	// RVA: 0x1A8B4D0 Offset: 0x1A8B4D0 VA: 0x1A8B4D0
	protected void SetNormalButtonSelect() { }

	// RVA: 0x1A89848 Offset: 0x1A89848 VA: 0x1A89848
	protected void SetAllButtonSelect() { }

	// RVA: 0x1A8A3A8 Offset: 0x1A8A3A8 VA: 0x1A8A3A8
	protected void SetFatigueButtonSelect() { }

	// RVA: 0x1A8A61C Offset: 0x1A8A61C VA: 0x1A8A61C
	protected void SetBuddyButtonSelect() { }

	// RVA: 0x1A89C4C Offset: 0x1A89C4C VA: 0x1A89C4C
	protected void SetShortButtonSelect() { }

	// RVA: 0x1A89EC0 Offset: 0x1A89EC0 VA: 0x1A89EC0
	protected void SetCostumeButtonSelect() { }

	// RVA: 0x1A8A134 Offset: 0x1A8A134 VA: 0x1A8A134
	protected void SetCommandCodeButtonSelect() { }

	// RVA: 0x1A89980 Offset: 0x1A89980 VA: 0x1A89980
	protected void SetSmartSortButtonSelect() { }

	// RVA: 0x1A89A30 Offset: 0x1A89A30 VA: 0x1A89A30
	protected void SetChoiceSortButtonSelect() { }

	// RVA: 0x1A8B608 Offset: 0x1A8B608 VA: 0x1A8B608
	public void OnClickDecide() { }

	// RVA: 0x1A8B774 Offset: 0x1A8B774 VA: 0x1A8B774
	public void OnClickCancel() { }

	// RVA: 0x1A8B814 Offset: 0x1A8B814 VA: 0x1A8B814
	public void OnClickHelp() { }

	// RVA: 0x1A8B99C Offset: 0x1A8B99C VA: 0x1A8B99C
	private void OnClickHelpClose() { }

	// RVA: 0x1A8B9E8 Offset: 0x1A8B9E8 VA: 0x1A8B9E8
	private void ChangeButtonSelect() { }

	// RVA: 0x1A8BA28 Offset: 0x1A8BA28 VA: 0x1A8BA28
	public void OnClickSortClass() { }

	// RVA: 0x1A8BAD0 Offset: 0x1A8BAD0 VA: 0x1A8BAD0
	public void OnClickSortCreate() { }

	// RVA: 0x1A8BB78 Offset: 0x1A8BB78 VA: 0x1A8BB78
	public void OnClickEventOrder() { }

	// RVA: 0x1A8BC20 Offset: 0x1A8BC20 VA: 0x1A8BC20
	public void OnClickSortRarity() { }

	// RVA: 0x1A8BCC8 Offset: 0x1A8BCC8 VA: 0x1A8BCC8
	public void OnClickSortLevel() { }

	// RVA: 0x1A8BD70 Offset: 0x1A8BD70 VA: 0x1A8BD70
	public void OnClickSortNpLevel() { }

	// RVA: 0x1A8BE18 Offset: 0x1A8BE18 VA: 0x1A8BE18
	public void OnClickSortHp() { }

	// RVA: 0x1A8BEC0 Offset: 0x1A8BEC0 VA: 0x1A8BEC0
	public void OnClickSortAttack() { }

	// RVA: 0x1A8BF68 Offset: 0x1A8BF68 VA: 0x1A8BF68
	public void OnClickSortCost() { }

	// RVA: 0x1A8C010 Offset: 0x1A8C010 VA: 0x1A8C010
	public void OnClickSortAmount() { }

	// RVA: 0x1A8C0B8 Offset: 0x1A8C0B8 VA: 0x1A8C0B8
	public void OnClickSortFriendShip() { }

	// RVA: 0x1A8C160 Offset: 0x1A8C160 VA: 0x1A8C160
	public void OnClickSortAdjustHp() { }

	// RVA: 0x1A8C208 Offset: 0x1A8C208 VA: 0x1A8C208
	public void OnClickSortAdjustAtk() { }

	// RVA: 0x1A8C2B0 Offset: 0x1A8C2B0 VA: 0x1A8C2B0
	public void OnClickSortCostume() { }

	// RVA: 0x1A8C358 Offset: 0x1A8C358 VA: 0x1A8C358
	public void OnClickSortHavingCostume() { }

	// RVA: 0x1A8C400 Offset: 0x1A8C400 VA: 0x1A8C400
	public void OnClickSortNotHavingCostume() { }

	// RVA: 0x1A8C4A8 Offset: 0x1A8C4A8 VA: 0x1A8C4A8
	public void OnClickSortNotHavingItem() { }

	// RVA: 0x1A8C550 Offset: 0x1A8C550 VA: 0x1A8C550
	public void OnClickSortLimitCount() { }

	// RVA: 0x1A8C5F8 Offset: 0x1A8C5F8 VA: 0x1A8C5F8
	public void OnClickSortRecoveryFatigue() { }

	// RVA: 0x1A8C6A0 Offset: 0x1A8C6A0 VA: 0x1A8C6A0
	public void OnClickSortBuddy() { }

	// RVA: 0x1A8C748 Offset: 0x1A8C748 VA: 0x1A8C748
	public void OnClickSmartSort() { }

	// RVA: 0x1A8C82C Offset: 0x1A8C82C VA: 0x1A8C82C
	public void OnClickChoiceSort() { }

	// RVA: 0x1A8C910 Offset: 0x1A8C910 VA: 0x1A8C910 Slot: 6
	protected override string get_closeBtnPath() { }

	// RVA: 0x1A8C958 Offset: 0x1A8C958 VA: 0x1A8C958
	private static void .cctor() { }
}

// Namespace: 
public enum ServantSortSelectMenu.Kind // TypeDefIndex: 5674
{
	// Fields
	public int value__; // 0x0
	public const ServantSortSelectMenu.Kind SERVANT_COMBINE_BASE_SELECT = 0;
	public const ServantSortSelectMenu.Kind SERVANT_COMBINE_SELECT = 1;
	public const ServantSortSelectMenu.Kind SERVANT_COMBINE_EQUIP_SELECT = 2;
	public const ServantSortSelectMenu.Kind SERVANT_NORMAL_SELECT = 3;
	public const ServantSortSelectMenu.Kind SERVANT_EQUIP_NORMAL_SELECT = 4;
	public const ServantSortSelectMenu.Kind SERVANT_COSTUME_BASE_SELECT = 5;
	public const ServantSortSelectMenu.Kind COMMAND_CODE_SELECT = 6;
	public const ServantSortSelectMenu.Kind SERVANT_RECOVERY_FATIGUE = 7;
	public const ServantSortSelectMenu.Kind SERVANT_BUDDY_POINT_SELECT = 8;
}

// Namespace: 
protected enum ServantSortSelectMenu.State // TypeDefIndex: 5675
{
	// Fields
	public int value__; // 0x0
	public const ServantSortSelectMenu.State INIT = 0;
	public const ServantSortSelectMenu.State OPEN = 1;
	public const ServantSortSelectMenu.State INPUT = 2;
	public const ServantSortSelectMenu.State SELECTED = 3;
	public const ServantSortSelectMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class ServantSortSelectMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 5676
{
	// Methods

	// RVA: 0x1A8CA48 Offset: 0x1A8CA48 VA: 0x1A8CA48
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1A8A868 Offset: 0x1A8A868 VA: 0x1A8A868 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x1A8CA58 Offset: 0x1A8CA58 VA: 0x1A8CA58 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x1A8CAE8 Offset: 0x1A8CAE8 VA: 0x1A8CAE8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public static class RandomLimitCountManager // TypeDefIndex: 5677
{
	// Fields
	private static Dictionary<string, int> choiceRandomLimitCountDic; // 0x0
	private static bool enableRandomLimitCount; // 0x8

	// Properties
	public static bool EnableRandomLimitCount { get; set; }

	// Methods

	// RVA: 0x128640C Offset: 0x128640C VA: 0x128640C
	public static void set_EnableRandomLimitCount(bool value) { }

	// RVA: 0x12864D0 Offset: 0x12864D0 VA: 0x12864D0
	public static bool get_EnableRandomLimitCount() { }

	// RVA: 0x1286538 Offset: 0x1286538 VA: 0x1286538
	private static string GenerateKey(long userId, long userSvtId, int groupIndex) { }

	// RVA: 0x1286788 Offset: 0x1286788 VA: 0x1286788
	private static bool IsChose(string key) { }

	// RVA: 0x1286814 Offset: 0x1286814 VA: 0x1286814
	public static int GetChoiceLimitCount(UserServantEntity entity) { }

	// RVA: 0x1287004 Offset: 0x1287004 VA: 0x1287004
	public static int GetChoiceLimitCount(ServantLeaderInfo info) { }

	// RVA: 0x12873D4 Offset: 0x12873D4 VA: 0x12873D4
	private static void .cctor() { }
}

// Namespace: 
public class ServantSkillStrengthStatus : BaseMonoBehaviour // TypeDefIndex: 5678
{
	// Fields
	public static readonly string PATH; // 0x0
	private static readonly string ICON_NAME_ON; // 0x8
	private static readonly string ICON_NAME_OFF; // 0x10
	public static readonly string ICON_SKILL_ON; // 0x18
	public static readonly string ICON_SKILL_OFF; // 0x20

	// Methods

	// RVA: 0x1A87710 Offset: 0x1A87710 VA: 0x1A87710
	public void .ctor() { }

	// RVA: 0x1A83F7C Offset: 0x1A83F7C VA: 0x1A83F7C
	public void Set(UILabel skillNameLabel, int strengthStatus, int skillRecord, int offset, int y, Vector2Int size) { }

	// RVA: 0x1A877A4 Offset: 0x1A877A4 VA: 0x1A877A4
	public void SetVertical(UISprite uISprite, int strengthStatus, int skillRecord) { }

	// RVA: 0x1A87718 Offset: 0x1A87718 VA: 0x1A87718
	public static int GetIconCnt(int skillRecord) { }

	// RVA: 0x1A87720 Offset: 0x1A87720 VA: 0x1A87720
	public static int GetStrengthenedCnt(int strengthStatus, int skillRecord) { }

	// RVA: 0x1A87C1C Offset: 0x1A87C1C VA: 0x1A87C1C
	public static int GetRestStrengtdCnt(int strengthStatus) { }

	// RVA: 0x1A87C2C Offset: 0x1A87C2C VA: 0x1A87C2C
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusBattleConfirmDialog : BaseDialog // TypeDefIndex: 5679
{
	// Fields
	[SerializeField] // RVA: 0xC4EFD0 Offset: 0xC4EFD0 VA: 0xC4EFD0
	protected UILabel messageLabel; // 0x58
	[SerializeField] // RVA: 0xC4EFE0 Offset: 0xC4EFE0 VA: 0xC4EFE0
	protected UILabel nowSkillTitleLabel; // 0x60
	[SerializeField] // RVA: 0xC4EFF0 Offset: 0xC4EFF0 VA: 0xC4EFF0
	protected UILabel nextSkillTitleLabel; // 0x68
	[SerializeField] // RVA: 0xC4F000 Offset: 0xC4F000 VA: 0xC4F000
	protected GameObject[] nowSkillBaseList; // 0x70
	[SerializeField] // RVA: 0xC4F010 Offset: 0xC4F010 VA: 0xC4F010
	protected GameObject[] nextSkillBaseList; // 0x78
	[SerializeField] // RVA: 0xC4F020 Offset: 0xC4F020 VA: 0xC4F020
	protected SkillIconComponent[] nowSkillIconList; // 0x80
	[SerializeField] // RVA: 0xC4F030 Offset: 0xC4F030 VA: 0xC4F030
	protected SkillIconComponent[] nextSkillIconList; // 0x88
	[SerializeField] // RVA: 0xC4F040 Offset: 0xC4F040 VA: 0xC4F040
	protected UIRangeLabel[] nowSkillNameList; // 0x90
	[SerializeField] // RVA: 0xC4F050 Offset: 0xC4F050 VA: 0xC4F050
	protected UIRangeLabel[] nextSkillNameList; // 0x98
	[SerializeField] // RVA: 0xC4F060 Offset: 0xC4F060 VA: 0xC4F060
	protected UILabel nowNpTitleLabel; // 0xA0
	[SerializeField] // RVA: 0xC4F070 Offset: 0xC4F070 VA: 0xC4F070
	protected UILabel nextNpTitleLabel; // 0xA8
	[SerializeField] // RVA: 0xC4F080 Offset: 0xC4F080 VA: 0xC4F080
	protected UILabel nowNpNameLabel; // 0xB0
	[SerializeField] // RVA: 0xC4F090 Offset: 0xC4F090 VA: 0xC4F090
	protected UILabel nextNpNameLabel; // 0xB8
	[SerializeField] // RVA: 0xC4F0A0 Offset: 0xC4F0A0 VA: 0xC4F0A0
	protected UILabel buttonDecideLabel; // 0xC0
	[SerializeField] // RVA: 0xC4F0B0 Offset: 0xC4F0B0 VA: 0xC4F0B0
	protected UILabel buttonCancelLabel; // 0xC8
	protected ServantStatusBattleConfirmDialog.ClickDelegate clickFunc; // 0xD0
	protected Action closeCallbackFunc; // 0xD8
	protected bool isButtonEnable; // 0xE0

	// Methods

	// RVA: 0x1A8CAF4 Offset: 0x1A8CAF4 VA: 0x1A8CAF4
	public void .ctor() { }

	// RVA: 0x1A8CC2C Offset: 0x1A8CC2C VA: 0x1A8CC2C
	public void Init() { }

	// RVA: 0x1A8CDFC Offset: 0x1A8CDFC VA: 0x1A8CDFC
	public void Open(TreasureDvcInfo nowTdInfo, TreasureDvcInfo nextTdInfo, bool isTdModify, SkillInfo[] nowSkillInfoList, SkillInfo[] nextSkillInfoList, bool isSkillModify, ServantStatusBattleConfirmDialog.ClickDelegate func, int svtId, int nowLimitCount, int nextLimitCount) { }

	// RVA: 0x1A8D96C Offset: 0x1A8D96C VA: 0x1A8D96C
	protected void EndOpen() { }

	// RVA: 0x1A8D978 Offset: 0x1A8D978 VA: 0x1A8D978
	public void Close() { }

	// RVA: 0x1A8D980 Offset: 0x1A8D980 VA: 0x1A8D980
	public void Close(Action callback) { }

	// RVA: 0x1A8DA0C Offset: 0x1A8DA0C VA: 0x1A8DA0C
	protected void EndClose() { }

	// RVA: 0x1A8DA70 Offset: 0x1A8DA70 VA: 0x1A8DA70
	public void OnClickDecide() { }

	// RVA: 0x1A8DB04 Offset: 0x1A8DB04 VA: 0x1A8DB04
	public void OnClickCancel() { }
}

// Namespace: 
public sealed class ServantStatusBattleConfirmDialog.ClickDelegate : MulticastDelegate // TypeDefIndex: 5680
{
	// Methods

	// RVA: 0x189F42C Offset: 0x189F42C VA: 0x189F42C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x189F43C Offset: 0x189F43C VA: 0x189F43C Slot: 11
	public virtual void Invoke(bool isDecide) { }

	// RVA: 0x189F668 Offset: 0x189F668 VA: 0x189F668 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isDecide, AsyncCallback callback, object object) { }

	// RVA: 0x189F6F8 Offset: 0x189F6F8 VA: 0x189F6F8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantStatusBattleListViewIndicator : ListViewIndicator // TypeDefIndex: 5681
{
	// Fields
	[SerializeField] // RVA: 0xC4F0C0 Offset: 0xC4F0C0 VA: 0xC4F0C0
	protected GameObject topObject; // 0x18
	[SerializeField] // RVA: 0xC4F0D0 Offset: 0xC4F0D0 VA: 0xC4F0D0
	protected GameObject bottomObject; // 0x20
	protected ListViewManager manager; // 0x28
	protected int pageMax; // 0x30
	protected int pageIndex; // 0x34

	// Methods

	// RVA: 0x189F704 Offset: 0x189F704 VA: 0x189F704
	public void .ctor() { }

	// RVA: 0x189F70C Offset: 0x189F70C VA: 0x189F70C Slot: 4
	public override void SetIndexMax(int max) { }

	// RVA: 0x189F778 Offset: 0x189F778 VA: 0x189F778 Slot: 5
	public override void OnModifyCenterItem(ListViewManager manager, ListViewItem item, bool isTop, bool isBottom, bool isLeft, bool isRight) { }

	// RVA: 0x189F818 Offset: 0x189F818 VA: 0x189F818 Slot: 6
	public override void OnModifyPosition(ListViewManager manager, ListViewItem item) { }

	// RVA: 0x189F76C Offset: 0x189F76C VA: 0x189F76C
	public void SetPageMax(int max) { }

	// RVA: 0x189F8D0 Offset: 0x189F8D0 VA: 0x189F8D0
	public int GetPageIndex() { }

	// RVA: 0x189F810 Offset: 0x189F810 VA: 0x189F810
	public void SetPageIndex(int index) { }

	// RVA: 0x189F8D8 Offset: 0x189F8D8 VA: 0x189F8D8
	public void OnClickTop() { }

	// RVA: 0x189FA5C Offset: 0x189FA5C VA: 0x189FA5C
	public void OnClickBottom() { }
}

// Namespace: 
public class ServantStatusBattleListViewItem : ListViewItem // TypeDefIndex: 5682
{
	// Fields
	protected ObscuredInt svtId; // 0x70
	protected ObscuredInt dispLimitCount; // 0x80
	protected bool isEnabled; // 0x90
	protected bool isCanSelect; // 0x91
	protected string name; // 0x98
	protected bool isMine; // 0xA0

	// Properties
	public int SvtId { get; }
	public int DispLimitCount { get; }
	public bool IsEnabled { get; }
	public bool IsCanSelect { get; }
	public string Name { get; }
	public bool IsMine { get; }

	// Methods

	// RVA: 0x189FBE8 Offset: 0x189FBE8 VA: 0x189FBE8
	public void .ctor(int index, int svtId, int dispLimitCount, bool isEnabled, bool isCanSelect, bool isSelect, bool isMine) { }

	// RVA: 0x189FD74 Offset: 0x189FD74 VA: 0x189FD74 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x189FD7C Offset: 0x189FD7C VA: 0x189FD7C
	public int get_SvtId() { }

	// RVA: 0x189FDEC Offset: 0x189FDEC VA: 0x189FDEC
	public int get_DispLimitCount() { }

	// RVA: 0x189FE5C Offset: 0x189FE5C VA: 0x189FE5C
	public bool get_IsEnabled() { }

	// RVA: 0x189FE64 Offset: 0x189FE64 VA: 0x189FE64
	public bool get_IsCanSelect() { }

	// RVA: 0x189FE6C Offset: 0x189FE6C VA: 0x189FE6C
	public string get_Name() { }

	// RVA: 0x189FE74 Offset: 0x189FE74 VA: 0x189FE74
	public bool get_IsMine() { }
}

// Namespace: 
public class ServantStatusBattleListViewItemDraw : MonoBehaviour // TypeDefIndex: 5683
{
	// Fields
	[SerializeField] // RVA: 0xC4F0E0 Offset: 0xC4F0E0 VA: 0xC4F0E0
	protected UISprite baseSpite; // 0x18
	[SerializeField] // RVA: 0xC4F0F0 Offset: 0xC4F0F0 VA: 0xC4F0F0
	protected UIRangeLabel nameRangeLabel; // 0x20
	[SerializeField] // RVA: 0xC4F100 Offset: 0xC4F100 VA: 0xC4F100
	protected UICommonButton baseButton; // 0x28
	[SerializeField] // RVA: 0xC4F110 Offset: 0xC4F110 VA: 0xC4F110
	private UILabel limitSealLabel; // 0x30
	[SerializeField] // RVA: 0xC4F120 Offset: 0xC4F120 VA: 0xC4F120
	private GameObject limitSealObject; // 0x38

	// Methods

	// RVA: 0x189FE7C Offset: 0x189FE7C VA: 0x189FE7C
	public void .ctor() { }

	// RVA: 0x189FE84 Offset: 0x189FE84 VA: 0x189FE84
	public void SetItem(ServantStatusBattleListViewItem item, ServantStatusBattleListViewItemDraw.DispMode mode) { }

	// RVA: 0x18A0364 Offset: 0x18A0364 VA: 0x18A0364
	public void SetInput(ServantStatusBattleListViewItem item, bool isInput) { }
}

// Namespace: 
public enum ServantStatusBattleListViewItemDraw.DispMode // TypeDefIndex: 5684
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusBattleListViewItemDraw.DispMode INVISIBLE = 0;
	public const ServantStatusBattleListViewItemDraw.DispMode INVALID = 1;
	public const ServantStatusBattleListViewItemDraw.DispMode VALID = 2;
	public const ServantStatusBattleListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class ServantStatusBattleListViewManager : ListViewManager // TypeDefIndex: 5685
{
	// Fields
	protected const int LIST_VIEW_LENGTH = 5;
	[SerializeField] // RVA: 0xC4F130 Offset: 0xC4F130 VA: 0xC4F130
	protected UILabel explanationLabel; // 0x138
	protected ServantStatusBattleListViewManager.InitMode initMode; // 0x140
	[CompilerGeneratedAttribute] // RVA: 0xC4F140 Offset: 0xC4F140 VA: 0xC4F140
	[DebuggerBrowsableAttribute] // RVA: 0xC4F140 Offset: 0xC4F140 VA: 0xC4F140
	private ServantStatusBattleListViewManager.CallbackFunc callbackFunc; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xC4F17C Offset: 0xC4F17C VA: 0xC4F17C
	[DebuggerBrowsableAttribute] // RVA: 0xC4F17C Offset: 0xC4F17C VA: 0xC4F17C
	private Action callbackFunc2; // 0x150
	protected int callbackCount; // 0x158

	// Properties
	public List<ServantStatusBattleListViewObject> ObjectList { get; }
	public List<ServantStatusBattleListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x18A0414 Offset: 0x18A0414 VA: 0x18A0414
	public void .ctor() { }

	// RVA: 0x18A041C Offset: 0x18A041C VA: 0x18A041C
	protected void add_callbackFunc(ServantStatusBattleListViewManager.CallbackFunc value) { }

	// RVA: 0x18A050C Offset: 0x18A050C VA: 0x18A050C
	protected void remove_callbackFunc(ServantStatusBattleListViewManager.CallbackFunc value) { }

	// RVA: 0x18A05FC Offset: 0x18A05FC VA: 0x18A05FC
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x18A06EC Offset: 0x18A06EC VA: 0x18A06EC
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x18A07DC Offset: 0x18A07DC VA: 0x18A07DC
	public List<ServantStatusBattleListViewObject> get_ObjectList() { }

	// RVA: 0x18A09A8 Offset: 0x18A09A8 VA: 0x18A09A8
	public List<ServantStatusBattleListViewObject> get_ClippingObjectList() { }

	// RVA: 0x18A0C88 Offset: 0x18A0C88 VA: 0x18A0C88
	public void CreateList(ServantStatusListViewItem mainInfo) { }

	// RVA: 0x18A0FF8 Offset: 0x18A0FF8 VA: 0x18A0FF8
	public void DestroyList() { }

	// RVA: 0x18A1000 Offset: 0x18A1000 VA: 0x18A1000
	public ServantStatusBattleListViewItem GetItem(int index) { }

	// RVA: 0x18A10A8 Offset: 0x18A10A8 VA: 0x18A10A8 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x18A11E0 Offset: 0x18A11E0 VA: 0x18A11E0
	public void SetMode(ServantStatusBattleListViewManager.InitMode mode, ServantStatusBattleListViewManager.CallbackFunc callback) { }

	// RVA: 0x18A13F0 Offset: 0x18A13F0 VA: 0x18A13F0
	public void SetMode(ServantStatusBattleListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x18A11E8 Offset: 0x18A11E8 VA: 0x18A11E8
	public void SetMode(ServantStatusBattleListViewManager.InitMode mode, int select = -1) { }

	// RVA: 0x18A1670 Offset: 0x18A1670 VA: 0x18A1670
	protected void RequestListObject(ServantStatusBattleListViewObject.InitMode mode, float delay) { }

	// RVA: 0x18A13F8 Offset: 0x18A13F8 VA: 0x18A13F8
	protected void RequestListObject(ServantStatusBattleListViewObject.InitMode mode) { }

	// RVA: 0x18A18FC Offset: 0x18A18FC VA: 0x18A18FC
	protected void OnMoveEnd() { }

	// RVA: 0x18A19C8 Offset: 0x18A19C8 VA: 0x18A19C8
	protected void OnClickListView(ListViewObject selectObj) { }

	// RVA: 0x18A19CC Offset: 0x18A19CC VA: 0x18A19CC
	protected void OnClickListViewButton(ListViewObject selectObj) { }

	// RVA: 0x18A1CEC Offset: 0x18A1CEC VA: 0x18A1CEC
	public void ChangeSelectIndex(int index) { }
}

// Namespace: 
public enum ServantStatusBattleListViewManager.InitMode // TypeDefIndex: 5686
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusBattleListViewManager.InitMode NONE = 0;
	public const ServantStatusBattleListViewManager.InitMode INPUT = 1;
	public const ServantStatusBattleListViewManager.InitMode MODIFY = 2;
}

// Namespace: 
public sealed class ServantStatusBattleListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 5687
{
	// Methods

	// RVA: 0x18A1F0C Offset: 0x18A1F0C VA: 0x18A1F0C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x18A1AC0 Offset: 0x18A1AC0 VA: 0x18A1AC0 Slot: 11
	public virtual void Invoke(int result) { }

	// RVA: 0x18A1F1C Offset: 0x18A1F1C VA: 0x18A1F1C Slot: 12
	public virtual IAsyncResult BeginInvoke(int result, AsyncCallback callback, object object) { }

	// RVA: 0x18A1FA8 Offset: 0x18A1FA8 VA: 0x18A1FA8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantStatusBattleListViewObject : ListViewObject // TypeDefIndex: 5688
{
	// Fields
	protected ServantStatusBattleListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC4F1B8 Offset: 0xC4F1B8 VA: 0xC4F1B8
	[DebuggerBrowsableAttribute] // RVA: 0xC4F1B8 Offset: 0xC4F1B8 VA: 0xC4F1B8
	private Action callbackFunc; // 0x70
	protected ServantStatusBattleListViewItemDraw itemDraw; // 0x78
	protected ServantStatusBattleListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x18A1FB4 Offset: 0x18A1FB4 VA: 0x18A1FB4
	public void .ctor() { }

	// RVA: 0x18A201C Offset: 0x18A201C VA: 0x18A201C
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x18A2108 Offset: 0x18A2108 VA: 0x18A2108
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x18A21F4 Offset: 0x18A21F4 VA: 0x18A21F4
	protected void Awake() { }

	// RVA: 0x18A2268 Offset: 0x18A2268 VA: 0x18A2268
	private void OnDestroy() { }

	// RVA: 0x18A0C04 Offset: 0x18A0C04 VA: 0x18A0C04
	public ServantStatusBattleListViewItem GetItem() { }

	// RVA: 0x18A2314 Offset: 0x18A2314 VA: 0x18A2314 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x18A2344 Offset: 0x18A2344 VA: 0x18A2344 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x18A233C Offset: 0x18A233C VA: 0x18A233C
	protected void InitItem() { }

	// RVA: 0x18A236C Offset: 0x18A236C VA: 0x18A236C Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x18A2470 Offset: 0x18A2470 VA: 0x18A2470 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x18A24F8 Offset: 0x18A24F8 VA: 0x18A24F8
	public void Init(ServantStatusBattleListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x18A15EC Offset: 0x18A15EC VA: 0x18A15EC
	public void Init(ServantStatusBattleListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x18A1878 Offset: 0x18A1878 VA: 0x18A1878
	public void Init(ServantStatusBattleListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x18A1160 Offset: 0x18A1160 VA: 0x18A1160
	public void Init(ServantStatusBattleListViewObject.InitMode initMode) { }

	// RVA: 0x18A26E4 Offset: 0x18A26E4 VA: 0x18A26E4
	protected void SetupDisp() { }

	// RVA: 0x18A27F4 Offset: 0x18A27F4 VA: 0x18A27F4
	protected void EventMoveEnd() { }

