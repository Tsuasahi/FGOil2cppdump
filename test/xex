	public T get_Value() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27C27E4 Offset: 0x27C27E4 VA: 0x27C27E4
	|-LinkedListNode<BattleLogicTask>.get_Value
	|-LinkedListNode<TypeDescriptionProvider>.get_Value
	|-LinkedListNode<object>.get_Value
	|
	|-RVA: 0x27C2674 Offset: 0x27C2674 VA: 0x27C2674
	|-LinkedListNode<SimpleAnimationPlayable.QueuedState>.get_Value
	*/
}

// Namespace: System.Collections.Generic
[ComVisibleAttribute] // RVA: 0xC3BA20 Offset: 0xC3BA20 VA: 0xC3BA20
[Serializable]
public class Queue<T> : IEnumerable<T>, ICollection, IEnumerable // TypeDefIndex: 1122
{
	// Fields
	private T[] _array; // 0x0
	private int _head; // 0x0
	private int _tail; // 0x0
	private int _size; // 0x0
	private int _version; // 0x0

	// Properties
	private bool System.Collections.ICollection.IsSynchronized { get; }
	private object System.Collections.ICollection.SyncRoot { get; }
	public int Count { get; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B2404 Offset: 0x28B2404 VA: 0x28B2404
	|-Queue<AssetManager.LoadWaitStatus>..ctor
	|-Queue<BattleActionData.BuffData>..ctor
	|-Queue<BattleActionData.ReplaceMember>..ctor
	|-Queue<BattleActionData>..ctor
	|-Queue<BattleCallBackBase>..ctor
	|-Queue<RequestBase>..ctor
	|-Queue<StandFigureRenderWaitStatus>..ctor
	|-Queue<Action>..ctor
	|-Queue<Action<List<GooglePurchase>>>..ctor
	|-Queue<object>..ctor
	|-Queue<string>..ctor
	|-Queue<Tuple<SendOrPostCallback, object>>..ctor
	|-Queue<ProductDescriptionQuery>..ctor
	|-Queue<Transform>..ctor
	|
	|-RVA: 0x28B0FF0 Offset: 0x28B0FF0 VA: 0x28B0FF0
	|-Queue<TextureExtensions.Point>..ctor
	|
	|-RVA: 0x28B19F0 Offset: 0x28B19F0 VA: 0x28B19F0
	|-Queue<Spawner.RequestByPath>..ctor
	|
	|-RVA: 0x28B2E04 Offset: 0x28B2E04 VA: 0x28B2E04
	|-Queue<TaskScheduler.PerformanceQueue>..ctor
	|
	|-RVA: 0x28B3818 Offset: 0x28B3818 VA: 0x28B3818
	|-Queue<Vector3>..ctor
	|
	|-RVA: 0x28B4260 Offset: 0x28B4260 VA: 0x28B4260
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(int count) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B1050 Offset: 0x28B1050 VA: 0x28B1050
	|-Queue<TextureExtensions.Point>..ctor
	|
	|-RVA: 0x28B1A50 Offset: 0x28B1A50 VA: 0x28B1A50
	|-Queue<Spawner.RequestByPath>..ctor
	|
	|-RVA: 0x28B2464 Offset: 0x28B2464 VA: 0x28B2464
	|-Queue<object>..ctor
	|
	|-RVA: 0x28B2E64 Offset: 0x28B2E64 VA: 0x28B2E64
	|-Queue<TaskScheduler.PerformanceQueue>..ctor
	|
	|-RVA: 0x28B3878 Offset: 0x28B3878 VA: 0x28B3878
	|-Queue<Vector3>..ctor
	|
	|-RVA: 0x28B42C0 Offset: 0x28B42C0 VA: 0x28B42C0
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 9
	private void System.Collections.ICollection.CopyTo(Array array, int idx) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B112C Offset: 0x28B112C VA: 0x28B112C
	|-Queue<TextureExtensions.Point>.System.Collections.ICollection.CopyTo
	|
	|-RVA: 0x28B1B2C Offset: 0x28B1B2C VA: 0x28B1B2C
	|-Queue<Spawner.RequestByPath>.System.Collections.ICollection.CopyTo
	|
	|-RVA: 0x28B2540 Offset: 0x28B2540 VA: 0x28B2540
	|-Queue<object>.System.Collections.ICollection.CopyTo
	|
	|-RVA: 0x28B2F40 Offset: 0x28B2F40 VA: 0x28B2F40
	|-Queue<TaskScheduler.PerformanceQueue>.System.Collections.ICollection.CopyTo
	|
	|-RVA: 0x28B3954 Offset: 0x28B3954 VA: 0x28B3954
	|-Queue<Vector3>.System.Collections.ICollection.CopyTo
	|
	|-RVA: 0x28B439C Offset: 0x28B439C VA: 0x28B439C
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.System.Collections.ICollection.CopyTo
	*/

	// RVA: -1 Offset: -1 Slot: 7
	private bool System.Collections.ICollection.get_IsSynchronized() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B1324 Offset: 0x28B1324 VA: 0x28B1324
	|-Queue<TextureExtensions.Point>.System.Collections.ICollection.get_IsSynchronized
	|
	|-RVA: 0x28B1D24 Offset: 0x28B1D24 VA: 0x28B1D24
	|-Queue<Spawner.RequestByPath>.System.Collections.ICollection.get_IsSynchronized
	|
	|-RVA: 0x28B2738 Offset: 0x28B2738 VA: 0x28B2738
	|-Queue<object>.System.Collections.ICollection.get_IsSynchronized
	|
	|-RVA: 0x28B3138 Offset: 0x28B3138 VA: 0x28B3138
	|-Queue<TaskScheduler.PerformanceQueue>.System.Collections.ICollection.get_IsSynchronized
	|
	|-RVA: 0x28B3B4C Offset: 0x28B3B4C VA: 0x28B3B4C
	|-Queue<Vector3>.System.Collections.ICollection.get_IsSynchronized
	|
	|-RVA: 0x28B4594 Offset: 0x28B4594 VA: 0x28B4594
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.System.Collections.ICollection.get_IsSynchronized
	*/

	// RVA: -1 Offset: -1 Slot: 8
	private object System.Collections.ICollection.get_SyncRoot() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B132C Offset: 0x28B132C VA: 0x28B132C
	|-Queue<TextureExtensions.Point>.System.Collections.ICollection.get_SyncRoot
	|
	|-RVA: 0x28B1D2C Offset: 0x28B1D2C VA: 0x28B1D2C
	|-Queue<Spawner.RequestByPath>.System.Collections.ICollection.get_SyncRoot
	|
	|-RVA: 0x28B2740 Offset: 0x28B2740 VA: 0x28B2740
	|-Queue<object>.System.Collections.ICollection.get_SyncRoot
	|
	|-RVA: 0x28B3140 Offset: 0x28B3140 VA: 0x28B3140
	|-Queue<TaskScheduler.PerformanceQueue>.System.Collections.ICollection.get_SyncRoot
	|
	|-RVA: 0x28B3B54 Offset: 0x28B3B54 VA: 0x28B3B54
	|-Queue<Vector3>.System.Collections.ICollection.get_SyncRoot
	|
	|-RVA: 0x28B459C Offset: 0x28B459C VA: 0x28B459C
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.System.Collections.ICollection.get_SyncRoot
	*/

	// RVA: -1 Offset: -1 Slot: 4
	private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B1330 Offset: 0x28B1330 VA: 0x28B1330
	|-Queue<TextureExtensions.Point>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x28B1D30 Offset: 0x28B1D30 VA: 0x28B1D30
	|-Queue<Spawner.RequestByPath>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x28B2744 Offset: 0x28B2744 VA: 0x28B2744
	|-Queue<object>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x28B3144 Offset: 0x28B3144 VA: 0x28B3144
	|-Queue<TaskScheduler.PerformanceQueue>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x28B3B58 Offset: 0x28B3B58 VA: 0x28B3B58
	|-Queue<Vector3>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x28B45A0 Offset: 0x28B45A0 VA: 0x28B45A0
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 5
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B13A4 Offset: 0x28B13A4 VA: 0x28B13A4
	|-Queue<TextureExtensions.Point>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x28B1DA4 Offset: 0x28B1DA4 VA: 0x28B1DA4
	|-Queue<Spawner.RequestByPath>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x28B27B8 Offset: 0x28B27B8 VA: 0x28B27B8
	|-Queue<object>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x28B31B8 Offset: 0x28B31B8 VA: 0x28B31B8
	|-Queue<TaskScheduler.PerformanceQueue>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x28B3BCC Offset: 0x28B3BCC VA: 0x28B3BCC
	|-Queue<Vector3>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x28B4614 Offset: 0x28B4614 VA: 0x28B4614
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.System.Collections.IEnumerable.GetEnumerator
	*/

	// RVA: -1 Offset: -1
	public void Clear() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B282C Offset: 0x28B282C VA: 0x28B282C
	|-Queue<AssetManager.LoadWaitStatus>.Clear
	|-Queue<BattleCallBackBase>.Clear
	|-Queue<RequestBase>.Clear
	|-Queue<StandFigureRenderWaitStatus>.Clear
	|-Queue<object>.Clear
	|-Queue<string>.Clear
	|-Queue<Transform>.Clear
	|
	|-RVA: 0x28B1418 Offset: 0x28B1418 VA: 0x28B1418
	|-Queue<TextureExtensions.Point>.Clear
	|
	|-RVA: 0x28B1E18 Offset: 0x28B1E18 VA: 0x28B1E18
	|-Queue<Spawner.RequestByPath>.Clear
	|
	|-RVA: 0x28B322C Offset: 0x28B322C VA: 0x28B322C
	|-Queue<TaskScheduler.PerformanceQueue>.Clear
	|
	|-RVA: 0x28B3C40 Offset: 0x28B3C40 VA: 0x28B3C40
	|-Queue<Vector3>.Clear
	|
	|-RVA: 0x28B4688 Offset: 0x28B4688 VA: 0x28B4688
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.Clear
	*/

	// RVA: -1 Offset: -1
	public void CopyTo(T[] array, int idx) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B1468 Offset: 0x28B1468 VA: 0x28B1468
	|-Queue<TextureExtensions.Point>.CopyTo
	|
	|-RVA: 0x28B1E68 Offset: 0x28B1E68 VA: 0x28B1E68
	|-Queue<Spawner.RequestByPath>.CopyTo
	|
	|-RVA: 0x28B287C Offset: 0x28B287C VA: 0x28B287C
	|-Queue<object>.CopyTo
	|
	|-RVA: 0x28B327C Offset: 0x28B327C VA: 0x28B327C
	|-Queue<TaskScheduler.PerformanceQueue>.CopyTo
	|
	|-RVA: 0x28B3C90 Offset: 0x28B3C90 VA: 0x28B3C90
	|-Queue<Vector3>.CopyTo
	|
	|-RVA: 0x28B46D8 Offset: 0x28B46D8 VA: 0x28B46D8
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.CopyTo
	*/

	// RVA: -1 Offset: -1
	public T Dequeue() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B2984 Offset: 0x28B2984 VA: 0x28B2984
	|-Queue<AssetManager.LoadWaitStatus>.Dequeue
	|-Queue<BattleActionData.BuffData>.Dequeue
	|-Queue<BattleActionData.ReplaceMember>.Dequeue
	|-Queue<BattleActionData>.Dequeue
	|-Queue<BattleCallBackBase>.Dequeue
	|-Queue<RequestBase>.Dequeue
	|-Queue<StandFigureRenderWaitStatus>.Dequeue
	|-Queue<Action>.Dequeue
	|-Queue<Action<List<GooglePurchase>>>.Dequeue
	|-Queue<Tuple<SendOrPostCallback, object>>.Dequeue
	|-Queue<ProductDescriptionQuery>.Dequeue
	|-Queue<Transform>.Dequeue
	|-Queue<object>.Dequeue
	|
	|-RVA: 0x28B1570 Offset: 0x28B1570 VA: 0x28B1570
	|-Queue<TextureExtensions.Point>.Dequeue
	|
	|-RVA: 0x28B1F70 Offset: 0x28B1F70 VA: 0x28B1F70
	|-Queue<Spawner.RequestByPath>.Dequeue
	|
	|-RVA: 0x28B3384 Offset: 0x28B3384 VA: 0x28B3384
	|-Queue<TaskScheduler.PerformanceQueue>.Dequeue
	|
	|-RVA: 0x28B3D98 Offset: 0x28B3D98 VA: 0x28B3D98
	|-Queue<Vector3>.Dequeue
	|
	|-RVA: 0x28B47E0 Offset: 0x28B47E0 VA: 0x28B47E0
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.Dequeue
	*/

	// RVA: -1 Offset: -1
	public T Peek() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B1634 Offset: 0x28B1634 VA: 0x28B1634
	|-Queue<TextureExtensions.Point>.Peek
	|
	|-RVA: 0x28B2044 Offset: 0x28B2044 VA: 0x28B2044
	|-Queue<Spawner.RequestByPath>.Peek
	|
	|-RVA: 0x28B2A48 Offset: 0x28B2A48 VA: 0x28B2A48
	|-Queue<object>.Peek
	|
	|-RVA: 0x28B3458 Offset: 0x28B3458 VA: 0x28B3458
	|-Queue<TaskScheduler.PerformanceQueue>.Peek
	|
	|-RVA: 0x28B3E84 Offset: 0x28B3E84 VA: 0x28B3E84
	|-Queue<Vector3>.Peek
	|
	|-RVA: 0x28B48B4 Offset: 0x28B48B4 VA: 0x28B48B4
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.Peek
	*/

	// RVA: -1 Offset: -1
	public void Enqueue(T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B2B00 Offset: 0x28B2B00 VA: 0x28B2B00
	|-Queue<AssetManager.LoadWaitStatus>.Enqueue
	|-Queue<BattleActionData.BuffData>.Enqueue
	|-Queue<BattleActionData.ReplaceMember>.Enqueue
	|-Queue<BattleActionData>.Enqueue
	|-Queue<BattleCallBackBase>.Enqueue
	|-Queue<RequestBase>.Enqueue
	|-Queue<StandFigureRenderWaitStatus>.Enqueue
	|-Queue<Action>.Enqueue
	|-Queue<Action<List<GooglePurchase>>>.Enqueue
	|-Queue<object>.Enqueue
	|-Queue<Tuple<SendOrPostCallback, object>>.Enqueue
	|-Queue<ProductDescriptionQuery>.Enqueue
	|-Queue<Transform>.Enqueue
	|
	|-RVA: 0x28B16EC Offset: 0x28B16EC VA: 0x28B16EC
	|-Queue<TextureExtensions.Point>.Enqueue
	|
	|-RVA: 0x28B20FC Offset: 0x28B20FC VA: 0x28B20FC
	|-Queue<Spawner.RequestByPath>.Enqueue
	|
	|-RVA: 0x28B3510 Offset: 0x28B3510 VA: 0x28B3510
	|-Queue<TaskScheduler.PerformanceQueue>.Enqueue
	|
	|-RVA: 0x28B3F44 Offset: 0x28B3F44 VA: 0x28B3F44
	|-Queue<Vector3>.Enqueue
	|
	|-RVA: 0x28B496C Offset: 0x28B496C VA: 0x28B496C
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.Enqueue
	*/

	// RVA: -1 Offset: -1
	public T[] ToArray() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B2C20 Offset: 0x28B2C20 VA: 0x28B2C20
	|-Queue<string>.ToArray
	|-Queue<object>.ToArray
	|
	|-RVA: 0x28B180C Offset: 0x28B180C VA: 0x28B180C
	|-Queue<TextureExtensions.Point>.ToArray
	|
	|-RVA: 0x28B2220 Offset: 0x28B2220 VA: 0x28B2220
	|-Queue<Spawner.RequestByPath>.ToArray
	|
	|-RVA: 0x28B3634 Offset: 0x28B3634 VA: 0x28B3634
	|-Queue<TaskScheduler.PerformanceQueue>.ToArray
	|
	|-RVA: 0x28B407C Offset: 0x28B407C VA: 0x28B407C
	|-Queue<Vector3>.ToArray
	|
	|-RVA: 0x28B4A90 Offset: 0x28B4A90 VA: 0x28B4A90
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.ToArray
	*/

	// RVA: -1 Offset: -1
	private void SetCapacity(int new_size) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B1888 Offset: 0x28B1888 VA: 0x28B1888
	|-Queue<TextureExtensions.Point>.SetCapacity
	|
	|-RVA: 0x28B229C Offset: 0x28B229C VA: 0x28B229C
	|-Queue<Spawner.RequestByPath>.SetCapacity
	|
	|-RVA: 0x28B2C9C Offset: 0x28B2C9C VA: 0x28B2C9C
	|-Queue<object>.SetCapacity
	|
	|-RVA: 0x28B36B0 Offset: 0x28B36B0 VA: 0x28B36B0
	|-Queue<TaskScheduler.PerformanceQueue>.SetCapacity
	|
	|-RVA: 0x28B40F8 Offset: 0x28B40F8 VA: 0x28B40F8
	|-Queue<Vector3>.SetCapacity
	|
	|-RVA: 0x28B4B0C Offset: 0x28B4B0C VA: 0x28B4B0C
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.SetCapacity
	*/

	// RVA: -1 Offset: -1 Slot: 6
	public int get_Count() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B2DC8 Offset: 0x28B2DC8 VA: 0x28B2DC8
	|-Queue<AssetManager.LoadWaitStatus>.get_Count
	|-Queue<BattleActionData.BuffData>.get_Count
	|-Queue<BattleActionData>.get_Count
	|-Queue<BattleCallBackBase>.get_Count
	|-Queue<RequestBase>.get_Count
	|-Queue<StandFigureRenderWaitStatus>.get_Count
	|-Queue<Action>.get_Count
	|-Queue<Action<List<GooglePurchase>>>.get_Count
	|-Queue<object>.get_Count
	|-Queue<Tuple<SendOrPostCallback, object>>.get_Count
	|-Queue<ProductDescriptionQuery>.get_Count
	|-Queue<Transform>.get_Count
	|
	|-RVA: 0x28B19B4 Offset: 0x28B19B4 VA: 0x28B19B4
	|-Queue<TextureExtensions.Point>.get_Count
	|
	|-RVA: 0x28B23C8 Offset: 0x28B23C8 VA: 0x28B23C8
	|-Queue<Spawner.RequestByPath>.get_Count
	|
	|-RVA: 0x28B37DC Offset: 0x28B37DC VA: 0x28B37DC
	|-Queue<TaskScheduler.PerformanceQueue>.get_Count
	|
	|-RVA: 0x28B4224 Offset: 0x28B4224 VA: 0x28B4224
	|-Queue<Vector3>.get_Count
	|
	|-RVA: 0x28B4C38 Offset: 0x28B4C38 VA: 0x28B4C38
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.get_Count
	*/

	// RVA: -1 Offset: -1
	public Queue.Enumerator<T> GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B2DD0 Offset: 0x28B2DD0 VA: 0x28B2DD0
	|-Queue<AssetManager.LoadWaitStatus>.GetEnumerator
	|-Queue<RequestBase>.GetEnumerator
	|-Queue<ProductDescriptionQuery>.GetEnumerator
	|-Queue<object>.GetEnumerator
	|
	|-RVA: 0x28B19BC Offset: 0x28B19BC VA: 0x28B19BC
	|-Queue<TextureExtensions.Point>.GetEnumerator
	|
	|-RVA: 0x28B23D0 Offset: 0x28B23D0 VA: 0x28B23D0
	|-Queue<Spawner.RequestByPath>.GetEnumerator
	|
	|-RVA: 0x28B37E4 Offset: 0x28B37E4 VA: 0x28B37E4
	|-Queue<TaskScheduler.PerformanceQueue>.GetEnumerator
	|
	|-RVA: 0x28B422C Offset: 0x28B422C VA: 0x28B422C
	|-Queue<Vector3>.GetEnumerator
	|
	|-RVA: 0x28B4C40 Offset: 0x28B4C40 VA: 0x28B4C40
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.GetEnumerator
	*/
}

// Namespace: 
[Serializable]
public struct Queue.Enumerator<T> : IEnumerator, IDisposable, IEnumerator<T> // TypeDefIndex: 1123
{
	// Fields
	private Queue<T> q; // 0x0
	private int idx; // 0x0
	private int ver; // 0x0

	// Properties
	private object System.Collections.IEnumerator.Current { get; }
	public T Current { get; }

	// Methods

	// RVA: -1 Offset: -1
	internal void .ctor(Queue<T> q) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xDD67A8 Offset: 0xDD67A8 VA: 0xDD67A8
	|-Queue.Enumerator<TextureExtensions.Point>..ctor
	|
	|-RVA: 0xDD6828 Offset: 0xDD6828 VA: 0xDD6828
	|-Queue.Enumerator<Spawner.RequestByPath>..ctor
	|
	|-RVA: 0xDD6894 Offset: 0xDD6894 VA: 0xDD6894
	|-Queue.Enumerator<object>..ctor
	|
	|-RVA: 0xDD6900 Offset: 0xDD6900 VA: 0xDD6900
	|-Queue.Enumerator<TaskScheduler.PerformanceQueue>..ctor
	|
	|-RVA: 0xDD696C Offset: 0xDD696C VA: 0xDD696C
	|-Queue.Enumerator<Vector3>..ctor
	|
	|-RVA: 0xDD69D8 Offset: 0xDD69D8 VA: 0xDD69D8
	|-Queue.Enumerator<WarBoardManager.WarBoardPerformanceQueue>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 6
	private void System.Collections.IEnumerator.Reset() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xDD67E8 Offset: 0xDD67E8 VA: 0xDD67E8
	|-Queue.Enumerator<TextureExtensions.Point>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0xDD6868 Offset: 0xDD6868 VA: 0xDD6868
	|-Queue.Enumerator<Spawner.RequestByPath>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0xDD68D4 Offset: 0xDD68D4 VA: 0xDD68D4
	|-Queue.Enumerator<object>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0xDD6940 Offset: 0xDD6940 VA: 0xDD6940
	|-Queue.Enumerator<TaskScheduler.PerformanceQueue>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0xDD69AC Offset: 0xDD69AC VA: 0xDD69AC
	|-Queue.Enumerator<Vector3>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0xDD6A18 Offset: 0xDD6A18 VA: 0xDD6A18
	|-Queue.Enumerator<WarBoardManager.WarBoardPerformanceQueue>.System.Collections.IEnumerator.Reset
	*/

	// RVA: -1 Offset: -1 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xDD67F0 Offset: 0xDD67F0 VA: 0xDD67F0
	|-Queue.Enumerator<TextureExtensions.Point>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0xDD6870 Offset: 0xDD6870 VA: 0xDD6870
	|-Queue.Enumerator<Spawner.RequestByPath>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0xDD68DC Offset: 0xDD68DC VA: 0xDD68DC
	|-Queue.Enumerator<object>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0xDD6948 Offset: 0xDD6948 VA: 0xDD6948
	|-Queue.Enumerator<TaskScheduler.PerformanceQueue>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0xDD69B4 Offset: 0xDD69B4 VA: 0xDD69B4
	|-Queue.Enumerator<Vector3>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0xDD6A20 Offset: 0xDD6A20 VA: 0xDD6A20
	|-Queue.Enumerator<WarBoardManager.WarBoardPerformanceQueue>.System.Collections.IEnumerator.get_Current
	*/

	// RVA: -1 Offset: -1 Slot: 7
	public void Dispose() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xDD68E4 Offset: 0xDD68E4 VA: 0xDD68E4
	|-Queue.Enumerator<AssetManager.LoadWaitStatus>.Dispose
	|-Queue.Enumerator<RequestBase>.Dispose
	|-Queue.Enumerator<object>.Dispose
	|-Queue.Enumerator<ProductDescriptionQuery>.Dispose
	|
	|-RVA: 0xDD67F8 Offset: 0xDD67F8 VA: 0xDD67F8
	|-Queue.Enumerator<TextureExtensions.Point>.Dispose
	|
	|-RVA: 0xDD6878 Offset: 0xDD6878 VA: 0xDD6878
	|-Queue.Enumerator<Spawner.RequestByPath>.Dispose
	|
	|-RVA: 0xDD6950 Offset: 0xDD6950 VA: 0xDD6950
	|-Queue.Enumerator<TaskScheduler.PerformanceQueue>.Dispose
	|
	|-RVA: 0xDD69BC Offset: 0xDD69BC VA: 0xDD69BC
	|-Queue.Enumerator<Vector3>.Dispose
	|
	|-RVA: 0xDD6A28 Offset: 0xDD6A28 VA: 0xDD6A28
	|-Queue.Enumerator<WarBoardManager.WarBoardPerformanceQueue>.Dispose
	*/

	// RVA: -1 Offset: -1 Slot: 5
	public bool MoveNext() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xDD68F0 Offset: 0xDD68F0 VA: 0xDD68F0
	|-Queue.Enumerator<AssetManager.LoadWaitStatus>.MoveNext
	|-Queue.Enumerator<RequestBase>.MoveNext
	|-Queue.Enumerator<object>.MoveNext
	|-Queue.Enumerator<ProductDescriptionQuery>.MoveNext
	|
	|-RVA: 0xDD6804 Offset: 0xDD6804 VA: 0xDD6804
	|-Queue.Enumerator<TextureExtensions.Point>.MoveNext
	|
	|-RVA: 0xDD6884 Offset: 0xDD6884 VA: 0xDD6884
	|-Queue.Enumerator<Spawner.RequestByPath>.MoveNext
	|
	|-RVA: 0xDD695C Offset: 0xDD695C VA: 0xDD695C
	|-Queue.Enumerator<TaskScheduler.PerformanceQueue>.MoveNext
	|
	|-RVA: 0xDD69C8 Offset: 0xDD69C8 VA: 0xDD69C8
	|-Queue.Enumerator<Vector3>.MoveNext
	|
	|-RVA: 0xDD6A34 Offset: 0xDD6A34 VA: 0xDD6A34
	|-Queue.Enumerator<WarBoardManager.WarBoardPerformanceQueue>.MoveNext
	*/

	// RVA: -1 Offset: -1 Slot: 8
	public T get_Current() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xDD68F8 Offset: 0xDD68F8 VA: 0xDD68F8
	|-Queue.Enumerator<AssetManager.LoadWaitStatus>.get_Current
	|-Queue.Enumerator<RequestBase>.get_Current
	|-Queue.Enumerator<ProductDescriptionQuery>.get_Current
	|-Queue.Enumerator<object>.get_Current
	|
	|-RVA: 0xDD680C Offset: 0xDD680C VA: 0xDD680C
	|-Queue.Enumerator<TextureExtensions.Point>.get_Current
	|
	|-RVA: 0xDD688C Offset: 0xDD688C VA: 0xDD688C
	|-Queue.Enumerator<Spawner.RequestByPath>.get_Current
	|
	|-RVA: 0xDD6964 Offset: 0xDD6964 VA: 0xDD6964
	|-Queue.Enumerator<TaskScheduler.PerformanceQueue>.get_Current
	|
	|-RVA: 0xDD69D0 Offset: 0xDD69D0 VA: 0xDD69D0
	|-Queue.Enumerator<Vector3>.get_Current
	|
	|-RVA: 0xDD6A3C Offset: 0xDD6A3C VA: 0xDD6A3C
	|-Queue.Enumerator<WarBoardManager.WarBoardPerformanceQueue>.get_Current
	*/
}

// Namespace: System.Collections.Generic
[DefaultMemberAttribute] // RVA: 0xC3BA34 Offset: 0xC3BA34 VA: 0xC3BA34
internal class RBTree : IEnumerable, IEnumerable<RBTree.Node> // TypeDefIndex: 1124
{
	// Fields
	private RBTree.Node root; // 0x10
	private object hlp; // 0x18
	private uint version; // 0x20
	[ThreadStaticAttribute] // RVA: 0xC3CF04 Offset: 0xC3CF04 VA: 0xC3CF04
	private static List<RBTree.Node> cached_path; // 0x80000000

	// Properties
	public int Count { get; }

	// Methods

	// RVA: 0x10A75C4 Offset: 0x10A75C4 VA: 0x10A75C4
	public void .ctor(object hlp) { }

	// RVA: 0x10A75F0 Offset: 0x10A75F0 VA: 0x10A75F0 Slot: 5
	private IEnumerator<RBTree.Node> System.Collections.Generic.IEnumerable<System.Collections.Generic.RBTree.Node>.GetEnumerator() { }

	// RVA: 0x10A76A4 Offset: 0x10A76A4 VA: 0x10A76A4 Slot: 4
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x10A771C Offset: 0x10A771C VA: 0x10A771C
	private static List<RBTree.Node> alloc_path() { }

	// RVA: 0x10A77C0 Offset: 0x10A77C0 VA: 0x10A77C0
	private static void release_path(List<RBTree.Node> path) { }

	// RVA: 0x10A78A8 Offset: 0x10A78A8 VA: 0x10A78A8
	public void Clear() { }

	// RVA: -1 Offset: -1
	public RBTree.Node Intern<T>(T key, RBTree.Node new_node) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1FA6250 Offset: 0x1FA6250 VA: 0x1FA6250
	|-RBTree.Intern<object>
	*/

	// RVA: -1 Offset: -1
	public RBTree.Node Remove<T>(T key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1FA684C Offset: 0x1FA684C VA: 0x1FA684C
	|-RBTree.Remove<object>
	*/

	// RVA: -1 Offset: -1
	public RBTree.Node Lookup<T>(T key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1FA66D8 Offset: 0x1FA66D8 VA: 0x1FA66D8
	|-RBTree.Lookup<object>
	*/

	// RVA: 0x10A78BC Offset: 0x10A78BC VA: 0x10A78BC
	public int get_Count() { }

	// RVA: 0x10A7668 Offset: 0x10A7668 VA: 0x10A7668
	public RBTree.NodeEnumerator GetEnumerator() { }

	// RVA: -1 Offset: -1
	private int find_key<T>(T key, List<RBTree.Node> path) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21C7B30 Offset: 0x21C7B30 VA: 0x21C7B30
	|-RBTree.find_key<object>
	*/

	// RVA: 0x10A7920 Offset: 0x10A7920 VA: 0x10A7920
	private RBTree.Node do_insert(int in_tree_cmp, RBTree.Node current, List<RBTree.Node> path) { }

	// RVA: 0x10A7DCC Offset: 0x10A7DCC VA: 0x10A7DCC
	private RBTree.Node do_remove(List<RBTree.Node> path) { }

	// RVA: 0x10A7BAC Offset: 0x10A7BAC VA: 0x10A7BAC
	private void rebalance_insert(List<RBTree.Node> path) { }

	// RVA: 0x10A8440 Offset: 0x10A8440 VA: 0x10A8440
	private void rebalance_delete(List<RBTree.Node> path) { }

	// RVA: 0x10A85F4 Offset: 0x10A85F4 VA: 0x10A85F4
	private void rebalance_insert__rotate_final(int curpos, List<RBTree.Node> path) { }

	// RVA: 0x10A8CD8 Offset: 0x10A8CD8 VA: 0x10A8CD8
	private void rebalance_delete__rotate_final(int curpos, List<RBTree.Node> path) { }

	// RVA: 0x10A8920 Offset: 0x10A8920 VA: 0x10A8920
	private int ensure_sibling_black(int curpos, List<RBTree.Node> path) { }

	// RVA: 0x10A8314 Offset: 0x10A8314 VA: 0x10A8314
	private void node_reparent(RBTree.Node orig_parent, RBTree.Node orig, uint orig_size, RBTree.Node updated) { }

	// RVA: 0x10A823C Offset: 0x10A823C VA: 0x10A823C
	private static RBTree.Node right_most(RBTree.Node current, RBTree.Node sibling, List<RBTree.Node> path) { }
}

// Namespace: 
public interface RBTree.INodeHelper<T> // TypeDefIndex: 1125
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract int Compare(T key, RBTree.Node node);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-RBTree.INodeHelper<object>.Compare
	*/

	// RVA: -1 Offset: -1 Slot: 1
	public abstract RBTree.Node CreateNode(T key);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-RBTree.INodeHelper<object>.CreateNode
	*/
}

// Namespace: 
public abstract class RBTree.Node // TypeDefIndex: 1126
{
	// Fields
	public RBTree.Node left; // 0x10
	public RBTree.Node right; // 0x18
	private uint size_black; // 0x20

	// Properties
	public bool IsBlack { get; set; }
	public uint Size { get; set; }

	// Methods

	// RVA: 0x10A90D4 Offset: 0x10A90D4 VA: 0x10A90D4
	public void .ctor() { }

	// RVA: 0x10A7BA0 Offset: 0x10A7BA0 VA: 0x10A7BA0
	public bool get_IsBlack() { }

	// RVA: 0x10A88E4 Offset: 0x10A88E4 VA: 0x10A88E4
	public void set_IsBlack(bool value) { }

	// RVA: 0x10A78D8 Offset: 0x10A78D8 VA: 0x10A78D8
	public uint get_Size() { }

	// RVA: 0x10A7B90 Offset: 0x10A7B90 VA: 0x10A7B90
	public void set_Size(uint value) { }

	// RVA: 0x10A9084 Offset: 0x10A9084 VA: 0x10A9084
	public uint FixSize() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void SwapValue(RBTree.Node other);
}

// Namespace: 
public struct RBTree.NodeEnumerator : IEnumerator, IDisposable, IEnumerator<RBTree.Node> // TypeDefIndex: 1127
{
	// Fields
	private RBTree tree; // 0x0
	private uint version; // 0x8
	private Stack<RBTree.Node> pennants; // 0x10

	// Properties
	private object System.Collections.IEnumerator.Current { get; }
	public RBTree.Node Current { get; }

	// Methods

	// RVA: 0xBBAAC8 Offset: 0xBBAAC8 VA: 0xBBAAC8
	internal void .ctor(RBTree tree) { }

	// RVA: 0xBBAB04 Offset: 0xBBAB04 VA: 0xBBAB04 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	// RVA: 0xBBAB2C Offset: 0xBBAB2C VA: 0xBBAB2C Slot: 6
	public void Reset() { }

	// RVA: 0xBBAB54 Offset: 0xBBAB54 VA: 0xBBAB54 Slot: 8
	public RBTree.Node get_Current() { }

	// RVA: 0xBBAB5C Offset: 0xBBAB5C VA: 0xBBAB5C Slot: 5
	public bool MoveNext() { }

	// RVA: 0xBBAB64 Offset: 0xBBAB64 VA: 0xBBAB64 Slot: 7
	public void Dispose() { }

	// RVA: 0xBBAB70 Offset: 0xBBAB70 VA: 0xBBAB70
	private void check_version() { }

	// RVA: 0xBBAB78 Offset: 0xBBAB78 VA: 0xBBAB78
	internal void check_current() { }
}

// Namespace: System.Collections.Generic
[DefaultMemberAttribute] // RVA: 0xC3BA6C Offset: 0xC3BA6C VA: 0xC3BA6C
[Serializable]
public class SortedDictionary<TKey, TValue> : ICollection, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, IEnumerable, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>> // TypeDefIndex: 1128
{
	// Fields
	private RBTree tree; // 0x0
	private SortedDictionary.NodeHelper<TKey, TValue> hlp; // 0x0

	// Properties
	private ICollection<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys { get; }
	private ICollection<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values { get; }
	private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly { get; }
	private bool System.Collections.IDictionary.IsFixedSize { get; }
	private bool System.Collections.IDictionary.IsReadOnly { get; }
	private ICollection System.Collections.IDictionary.Keys { get; }
	private ICollection System.Collections.IDictionary.Values { get; }
	private object System.Collections.IDictionary.Item { get; set; }
	private bool System.Collections.ICollection.IsSynchronized { get; }
	private object System.Collections.ICollection.SyncRoot { get; }
	public int Count { get; }
	public TValue Item { get; set; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B70F0 Offset: 0x28B70F0 VA: 0x28B70F0
	|-SortedDictionary<object, object>..ctor
	|-SortedDictionary<string, string>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(IComparer<TKey> comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B7130 Offset: 0x28B7130 VA: 0x28B7130
	|-SortedDictionary<object, object>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 26
	private ICollection<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B7248 Offset: 0x28B7248 VA: 0x28B7248
	|-SortedDictionary<object, object>.System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys
	*/

	// RVA: -1 Offset: -1 Slot: 27
	private ICollection<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.get_Values() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B72B4 Offset: 0x28B72B4 VA: 0x28B72B4
	|-SortedDictionary<object, object>.System.Collections.Generic.IDictionary<TKey,TValue>.get_Values
	*/

	// RVA: -1 Offset: -1 Slot: 30
	private void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey, TValue> item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B7320 Offset: 0x28B7320 VA: 0x28B7320
	|-SortedDictionary<object, object>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
	*/

	// RVA: -1 Offset: -1 Slot: 32
	private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair<TKey, TValue> item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B73B0 Offset: 0x28B73B0 VA: 0x28B73B0
	|-SortedDictionary<object, object>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
	*/

	// RVA: -1 Offset: -1 Slot: 29
	private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B7500 Offset: 0x28B7500 VA: 0x28B7500
	|-SortedDictionary<object, object>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly
	*/

	// RVA: -1 Offset: -1 Slot: 34
	private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey, TValue> item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B7508 Offset: 0x28B7508 VA: 0x28B7508
	|-SortedDictionary<object, object>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
	*/

	// RVA: -1 Offset: -1 Slot: 16
	private void System.Collections.IDictionary.Add(object key, object value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B76A4 Offset: 0x28B76A4 VA: 0x28B76A4
	|-SortedDictionary<object, object>.System.Collections.IDictionary.Add
	*/

	// RVA: -1 Offset: -1 Slot: 18
	private bool System.Collections.IDictionary.Contains(object key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B7750 Offset: 0x28B7750 VA: 0x28B7750
	|-SortedDictionary<object, object>.System.Collections.IDictionary.Contains
	*/

	// RVA: -1 Offset: -1 Slot: 19
	private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B77C8 Offset: 0x28B77C8 VA: 0x28B77C8
	|-SortedDictionary<object, object>.System.Collections.IDictionary.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 10
	private bool System.Collections.IDictionary.get_IsFixedSize() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B7844 Offset: 0x28B7844 VA: 0x28B7844
	|-SortedDictionary<object, object>.System.Collections.IDictionary.get_IsFixedSize
	*/

	// RVA: -1 Offset: -1 Slot: 11
	private bool System.Collections.IDictionary.get_IsReadOnly() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B784C Offset: 0x28B784C VA: 0x28B784C
	|-SortedDictionary<object, object>.System.Collections.IDictionary.get_IsReadOnly
	*/

	// RVA: -1 Offset: -1 Slot: 14
	private ICollection System.Collections.IDictionary.get_Keys() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B7854 Offset: 0x28B7854 VA: 0x28B7854
	|-SortedDictionary<object, object>.System.Collections.IDictionary.get_Keys
	*/

	// RVA: -1 Offset: -1 Slot: 20
	private void System.Collections.IDictionary.Remove(object key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B78C0 Offset: 0x28B78C0 VA: 0x28B78C0
	|-SortedDictionary<object, object>.System.Collections.IDictionary.Remove
	*/

	// RVA: -1 Offset: -1 Slot: 15
	private ICollection System.Collections.IDictionary.get_Values() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B7938 Offset: 0x28B7938 VA: 0x28B7938
	|-SortedDictionary<object, object>.System.Collections.IDictionary.get_Values
	*/

	// RVA: -1 Offset: -1 Slot: 12
	private object System.Collections.IDictionary.get_Item(object key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B79A4 Offset: 0x28B79A4 VA: 0x28B79A4
	|-SortedDictionary<object, object>.System.Collections.IDictionary.get_Item
	*/

	// RVA: -1 Offset: -1 Slot: 13
	private void System.Collections.IDictionary.set_Item(object key, object value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B7A1C Offset: 0x28B7A1C VA: 0x28B7A1C
	|-SortedDictionary<object, object>.System.Collections.IDictionary.set_Item
	*/

	// RVA: -1 Offset: -1 Slot: 7
	private void System.Collections.ICollection.CopyTo(Array array, int index) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28B7AC8 Offset: 0x28B7AC8 VA: 0x28B7AC8
	|-SortedDictionary<object, object>.System.Collections.ICollection.CopyTo
	*/

	// RVA: -1 Offset: -1 Slot: 5
	private bool System.Collections.ICollection.get_IsSynchronized() { }
	/* GenericInstMethod :
