	|
	|-RVA: 0x26B69D4 Offset: 0x26B69D4 VA: 0x26B69D4
	|-LinkedListNode<object>.get_List
	*/

	// RVA: -1 Offset: -1
	public LinkedListNode<T> get_Next() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x26B686C Offset: 0x26B686C VA: 0x26B686C
	|-LinkedListNode<SimpleAnimationPlayable.QueuedState>.get_Next
	|
	|-RVA: 0x26B69DC Offset: 0x26B69DC VA: 0x26B69DC
	|-LinkedListNode<object>.get_Next
	*/

	// RVA: -1 Offset: -1
	public LinkedListNode<T> get_Previous() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x26B6890 Offset: 0x26B6890 VA: 0x26B6890
	|-LinkedListNode<SimpleAnimationPlayable.QueuedState>.get_Previous
	|
	|-RVA: 0x26B6A00 Offset: 0x26B6A00 VA: 0x26B6A00
	|-LinkedListNode<TypeDescriptionProvider>.get_Previous
	|-LinkedListNode<object>.get_Previous
	*/

	// RVA: -1 Offset: -1
	public T get_Value() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x26B6A24 Offset: 0x26B6A24 VA: 0x26B6A24
	|-LinkedListNode<BattleLogicTask>.get_Value
	|-LinkedListNode<TypeDescriptionProvider>.get_Value
	|-LinkedListNode<object>.get_Value
	|
	|-RVA: 0x26B68B4 Offset: 0x26B68B4 VA: 0x26B68B4
	|-LinkedListNode<SimpleAnimationPlayable.QueuedState>.get_Value
	*/
}

// Namespace: System.Collections.Generic
[ComVisibleAttribute] // RVA: 0xBCF8F8 Offset: 0xBCF8F8 VA: 0xBCF8F8
[Serializable]
public class Queue<T> : IEnumerable<T>, ICollection, IEnumerable // TypeDefIndex: 1122
{
	// Fields
	private T[] _array; // 0x0
	private int _head; // 0x0
	private int _tail; // 0x0
	private int _size; // 0x0
	private int _version; // 0x0

	// Properties
	private bool System.Collections.ICollection.IsSynchronized { get; }
	private object System.Collections.ICollection.SyncRoot { get; }
	public int Count { get; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FE8DC Offset: 0x27FE8DC VA: 0x27FE8DC
	|-Queue<AssetManager.LoadWaitStatus>..ctor
	|-Queue<BattleActionData.BuffData>..ctor
	|-Queue<BattleActionData.ReplaceMember>..ctor
	|-Queue<BattleActionData>..ctor
	|-Queue<BattleCallBackBase>..ctor
	|-Queue<RequestBase>..ctor
	|-Queue<StandFigureRenderWaitStatus>..ctor
	|-Queue<Action>..ctor
	|-Queue<Action<List<GooglePurchase>>>..ctor
	|-Queue<object>..ctor
	|-Queue<string>..ctor
	|-Queue<Tuple<SendOrPostCallback, object>>..ctor
	|-Queue<ProductDescriptionQuery>..ctor
	|-Queue<Transform>..ctor
	|
	|-RVA: 0x27FD4C8 Offset: 0x27FD4C8 VA: 0x27FD4C8
	|-Queue<TextureExtensions.Point>..ctor
	|
	|-RVA: 0x27FDEC8 Offset: 0x27FDEC8 VA: 0x27FDEC8
	|-Queue<Spawner.RequestByPath>..ctor
	|
	|-RVA: 0x27FF2DC Offset: 0x27FF2DC VA: 0x27FF2DC
	|-Queue<TaskScheduler.PerformanceQueue>..ctor
	|
	|-RVA: 0x27FFCF0 Offset: 0x27FFCF0 VA: 0x27FFCF0
	|-Queue<Vector3>..ctor
	|
	|-RVA: 0x2800738 Offset: 0x2800738 VA: 0x2800738
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(int count) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FD528 Offset: 0x27FD528 VA: 0x27FD528
	|-Queue<TextureExtensions.Point>..ctor
	|
	|-RVA: 0x27FDF28 Offset: 0x27FDF28 VA: 0x27FDF28
	|-Queue<Spawner.RequestByPath>..ctor
	|
	|-RVA: 0x27FE93C Offset: 0x27FE93C VA: 0x27FE93C
	|-Queue<object>..ctor
	|
	|-RVA: 0x27FF33C Offset: 0x27FF33C VA: 0x27FF33C
	|-Queue<TaskScheduler.PerformanceQueue>..ctor
	|
	|-RVA: 0x27FFD50 Offset: 0x27FFD50 VA: 0x27FFD50
	|-Queue<Vector3>..ctor
	|
	|-RVA: 0x2800798 Offset: 0x2800798 VA: 0x2800798
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 9
	private void System.Collections.ICollection.CopyTo(Array array, int idx) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FD604 Offset: 0x27FD604 VA: 0x27FD604
	|-Queue<TextureExtensions.Point>.System.Collections.ICollection.CopyTo
	|
	|-RVA: 0x27FE004 Offset: 0x27FE004 VA: 0x27FE004
	|-Queue<Spawner.RequestByPath>.System.Collections.ICollection.CopyTo
	|
	|-RVA: 0x27FEA18 Offset: 0x27FEA18 VA: 0x27FEA18
	|-Queue<object>.System.Collections.ICollection.CopyTo
	|
	|-RVA: 0x27FF418 Offset: 0x27FF418 VA: 0x27FF418
	|-Queue<TaskScheduler.PerformanceQueue>.System.Collections.ICollection.CopyTo
	|
	|-RVA: 0x27FFE2C Offset: 0x27FFE2C VA: 0x27FFE2C
	|-Queue<Vector3>.System.Collections.ICollection.CopyTo
	|
	|-RVA: 0x2800874 Offset: 0x2800874 VA: 0x2800874
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.System.Collections.ICollection.CopyTo
	*/

	// RVA: -1 Offset: -1 Slot: 7
	private bool System.Collections.ICollection.get_IsSynchronized() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FD7FC Offset: 0x27FD7FC VA: 0x27FD7FC
	|-Queue<TextureExtensions.Point>.System.Collections.ICollection.get_IsSynchronized
	|
	|-RVA: 0x27FE1FC Offset: 0x27FE1FC VA: 0x27FE1FC
	|-Queue<Spawner.RequestByPath>.System.Collections.ICollection.get_IsSynchronized
	|
	|-RVA: 0x27FEC10 Offset: 0x27FEC10 VA: 0x27FEC10
	|-Queue<object>.System.Collections.ICollection.get_IsSynchronized
	|
	|-RVA: 0x27FF610 Offset: 0x27FF610 VA: 0x27FF610
	|-Queue<TaskScheduler.PerformanceQueue>.System.Collections.ICollection.get_IsSynchronized
	|
	|-RVA: 0x2800024 Offset: 0x2800024 VA: 0x2800024
	|-Queue<Vector3>.System.Collections.ICollection.get_IsSynchronized
	|
	|-RVA: 0x2800A6C Offset: 0x2800A6C VA: 0x2800A6C
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.System.Collections.ICollection.get_IsSynchronized
	*/

	// RVA: -1 Offset: -1 Slot: 8
	private object System.Collections.ICollection.get_SyncRoot() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FD804 Offset: 0x27FD804 VA: 0x27FD804
	|-Queue<TextureExtensions.Point>.System.Collections.ICollection.get_SyncRoot
	|
	|-RVA: 0x27FE204 Offset: 0x27FE204 VA: 0x27FE204
	|-Queue<Spawner.RequestByPath>.System.Collections.ICollection.get_SyncRoot
	|
	|-RVA: 0x27FEC18 Offset: 0x27FEC18 VA: 0x27FEC18
	|-Queue<object>.System.Collections.ICollection.get_SyncRoot
	|
	|-RVA: 0x27FF618 Offset: 0x27FF618 VA: 0x27FF618
	|-Queue<TaskScheduler.PerformanceQueue>.System.Collections.ICollection.get_SyncRoot
	|
	|-RVA: 0x280002C Offset: 0x280002C VA: 0x280002C
	|-Queue<Vector3>.System.Collections.ICollection.get_SyncRoot
	|
	|-RVA: 0x2800A74 Offset: 0x2800A74 VA: 0x2800A74
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.System.Collections.ICollection.get_SyncRoot
	*/

	// RVA: -1 Offset: -1 Slot: 4
	private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FD808 Offset: 0x27FD808 VA: 0x27FD808
	|-Queue<TextureExtensions.Point>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x27FE208 Offset: 0x27FE208 VA: 0x27FE208
	|-Queue<Spawner.RequestByPath>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x27FEC1C Offset: 0x27FEC1C VA: 0x27FEC1C
	|-Queue<object>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x27FF61C Offset: 0x27FF61C VA: 0x27FF61C
	|-Queue<TaskScheduler.PerformanceQueue>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x2800030 Offset: 0x2800030 VA: 0x2800030
	|-Queue<Vector3>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	|
	|-RVA: 0x2800A78 Offset: 0x2800A78 VA: 0x2800A78
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 5
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FD87C Offset: 0x27FD87C VA: 0x27FD87C
	|-Queue<TextureExtensions.Point>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x27FE27C Offset: 0x27FE27C VA: 0x27FE27C
	|-Queue<Spawner.RequestByPath>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x27FEC90 Offset: 0x27FEC90 VA: 0x27FEC90
	|-Queue<object>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x27FF690 Offset: 0x27FF690 VA: 0x27FF690
	|-Queue<TaskScheduler.PerformanceQueue>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x28000A4 Offset: 0x28000A4 VA: 0x28000A4
	|-Queue<Vector3>.System.Collections.IEnumerable.GetEnumerator
	|
	|-RVA: 0x2800AEC Offset: 0x2800AEC VA: 0x2800AEC
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.System.Collections.IEnumerable.GetEnumerator
	*/

	// RVA: -1 Offset: -1
	public void Clear() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FED04 Offset: 0x27FED04 VA: 0x27FED04
	|-Queue<AssetManager.LoadWaitStatus>.Clear
	|-Queue<BattleCallBackBase>.Clear
	|-Queue<RequestBase>.Clear
	|-Queue<StandFigureRenderWaitStatus>.Clear
	|-Queue<object>.Clear
	|-Queue<string>.Clear
	|-Queue<Transform>.Clear
	|
	|-RVA: 0x27FD8F0 Offset: 0x27FD8F0 VA: 0x27FD8F0
	|-Queue<TextureExtensions.Point>.Clear
	|
	|-RVA: 0x27FE2F0 Offset: 0x27FE2F0 VA: 0x27FE2F0
	|-Queue<Spawner.RequestByPath>.Clear
	|
	|-RVA: 0x27FF704 Offset: 0x27FF704 VA: 0x27FF704
	|-Queue<TaskScheduler.PerformanceQueue>.Clear
	|
	|-RVA: 0x2800118 Offset: 0x2800118 VA: 0x2800118
	|-Queue<Vector3>.Clear
	|
	|-RVA: 0x2800B60 Offset: 0x2800B60 VA: 0x2800B60
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.Clear
	*/

	// RVA: -1 Offset: -1
	public void CopyTo(T[] array, int idx) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FD940 Offset: 0x27FD940 VA: 0x27FD940
	|-Queue<TextureExtensions.Point>.CopyTo
	|
	|-RVA: 0x27FE340 Offset: 0x27FE340 VA: 0x27FE340
	|-Queue<Spawner.RequestByPath>.CopyTo
	|
	|-RVA: 0x27FED54 Offset: 0x27FED54 VA: 0x27FED54
	|-Queue<object>.CopyTo
	|
	|-RVA: 0x27FF754 Offset: 0x27FF754 VA: 0x27FF754
	|-Queue<TaskScheduler.PerformanceQueue>.CopyTo
	|
	|-RVA: 0x2800168 Offset: 0x2800168 VA: 0x2800168
	|-Queue<Vector3>.CopyTo
	|
	|-RVA: 0x2800BB0 Offset: 0x2800BB0 VA: 0x2800BB0
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.CopyTo
	*/

	// RVA: -1 Offset: -1
	public T Dequeue() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FEE5C Offset: 0x27FEE5C VA: 0x27FEE5C
	|-Queue<AssetManager.LoadWaitStatus>.Dequeue
	|-Queue<BattleActionData.BuffData>.Dequeue
	|-Queue<BattleActionData.ReplaceMember>.Dequeue
	|-Queue<BattleActionData>.Dequeue
	|-Queue<BattleCallBackBase>.Dequeue
	|-Queue<RequestBase>.Dequeue
	|-Queue<StandFigureRenderWaitStatus>.Dequeue
	|-Queue<Action>.Dequeue
	|-Queue<Action<List<GooglePurchase>>>.Dequeue
	|-Queue<Tuple<SendOrPostCallback, object>>.Dequeue
	|-Queue<ProductDescriptionQuery>.Dequeue
	|-Queue<Transform>.Dequeue
	|-Queue<object>.Dequeue
	|
	|-RVA: 0x27FDA48 Offset: 0x27FDA48 VA: 0x27FDA48
	|-Queue<TextureExtensions.Point>.Dequeue
	|
	|-RVA: 0x27FE448 Offset: 0x27FE448 VA: 0x27FE448
	|-Queue<Spawner.RequestByPath>.Dequeue
	|
	|-RVA: 0x27FF85C Offset: 0x27FF85C VA: 0x27FF85C
	|-Queue<TaskScheduler.PerformanceQueue>.Dequeue
	|
	|-RVA: 0x2800270 Offset: 0x2800270 VA: 0x2800270
	|-Queue<Vector3>.Dequeue
	|
	|-RVA: 0x2800CB8 Offset: 0x2800CB8 VA: 0x2800CB8
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.Dequeue
	*/

	// RVA: -1 Offset: -1
	public T Peek() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FDB0C Offset: 0x27FDB0C VA: 0x27FDB0C
	|-Queue<TextureExtensions.Point>.Peek
	|
	|-RVA: 0x27FE51C Offset: 0x27FE51C VA: 0x27FE51C
	|-Queue<Spawner.RequestByPath>.Peek
	|
	|-RVA: 0x27FEF20 Offset: 0x27FEF20 VA: 0x27FEF20
	|-Queue<object>.Peek
	|
	|-RVA: 0x27FF930 Offset: 0x27FF930 VA: 0x27FF930
	|-Queue<TaskScheduler.PerformanceQueue>.Peek
	|
	|-RVA: 0x280035C Offset: 0x280035C VA: 0x280035C
	|-Queue<Vector3>.Peek
	|
	|-RVA: 0x2800D8C Offset: 0x2800D8C VA: 0x2800D8C
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.Peek
	*/

	// RVA: -1 Offset: -1
	public void Enqueue(T item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FEFD8 Offset: 0x27FEFD8 VA: 0x27FEFD8
	|-Queue<AssetManager.LoadWaitStatus>.Enqueue
	|-Queue<BattleActionData.BuffData>.Enqueue
	|-Queue<BattleActionData.ReplaceMember>.Enqueue
	|-Queue<BattleActionData>.Enqueue
	|-Queue<BattleCallBackBase>.Enqueue
	|-Queue<RequestBase>.Enqueue
	|-Queue<StandFigureRenderWaitStatus>.Enqueue
	|-Queue<Action>.Enqueue
	|-Queue<Action<List<GooglePurchase>>>.Enqueue
	|-Queue<object>.Enqueue
	|-Queue<Tuple<SendOrPostCallback, object>>.Enqueue
	|-Queue<ProductDescriptionQuery>.Enqueue
	|-Queue<Transform>.Enqueue
	|
	|-RVA: 0x27FDBC4 Offset: 0x27FDBC4 VA: 0x27FDBC4
	|-Queue<TextureExtensions.Point>.Enqueue
	|
	|-RVA: 0x27FE5D4 Offset: 0x27FE5D4 VA: 0x27FE5D4
	|-Queue<Spawner.RequestByPath>.Enqueue
	|
	|-RVA: 0x27FF9E8 Offset: 0x27FF9E8 VA: 0x27FF9E8
	|-Queue<TaskScheduler.PerformanceQueue>.Enqueue
	|
	|-RVA: 0x280041C Offset: 0x280041C VA: 0x280041C
	|-Queue<Vector3>.Enqueue
	|
	|-RVA: 0x2800E44 Offset: 0x2800E44 VA: 0x2800E44
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.Enqueue
	*/

	// RVA: -1 Offset: -1
	public T[] ToArray() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FF0F8 Offset: 0x27FF0F8 VA: 0x27FF0F8
	|-Queue<string>.ToArray
	|-Queue<object>.ToArray
	|
	|-RVA: 0x27FDCE4 Offset: 0x27FDCE4 VA: 0x27FDCE4
	|-Queue<TextureExtensions.Point>.ToArray
	|
	|-RVA: 0x27FE6F8 Offset: 0x27FE6F8 VA: 0x27FE6F8
	|-Queue<Spawner.RequestByPath>.ToArray
	|
	|-RVA: 0x27FFB0C Offset: 0x27FFB0C VA: 0x27FFB0C
	|-Queue<TaskScheduler.PerformanceQueue>.ToArray
	|
	|-RVA: 0x2800554 Offset: 0x2800554 VA: 0x2800554
	|-Queue<Vector3>.ToArray
	|
	|-RVA: 0x2800F68 Offset: 0x2800F68 VA: 0x2800F68
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.ToArray
	*/

	// RVA: -1 Offset: -1
	private void SetCapacity(int new_size) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FDD60 Offset: 0x27FDD60 VA: 0x27FDD60
	|-Queue<TextureExtensions.Point>.SetCapacity
	|
	|-RVA: 0x27FE774 Offset: 0x27FE774 VA: 0x27FE774
	|-Queue<Spawner.RequestByPath>.SetCapacity
	|
	|-RVA: 0x27FF174 Offset: 0x27FF174 VA: 0x27FF174
	|-Queue<object>.SetCapacity
	|
	|-RVA: 0x27FFB88 Offset: 0x27FFB88 VA: 0x27FFB88
	|-Queue<TaskScheduler.PerformanceQueue>.SetCapacity
	|
	|-RVA: 0x28005D0 Offset: 0x28005D0 VA: 0x28005D0
	|-Queue<Vector3>.SetCapacity
	|
	|-RVA: 0x2800FE4 Offset: 0x2800FE4 VA: 0x2800FE4
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.SetCapacity
	*/

	// RVA: -1 Offset: -1 Slot: 6
	public int get_Count() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FF2A0 Offset: 0x27FF2A0 VA: 0x27FF2A0
	|-Queue<AssetManager.LoadWaitStatus>.get_Count
	|-Queue<BattleActionData.BuffData>.get_Count
	|-Queue<BattleActionData>.get_Count
	|-Queue<BattleCallBackBase>.get_Count
	|-Queue<RequestBase>.get_Count
	|-Queue<StandFigureRenderWaitStatus>.get_Count
	|-Queue<Action>.get_Count
	|-Queue<Action<List<GooglePurchase>>>.get_Count
	|-Queue<object>.get_Count
	|-Queue<Tuple<SendOrPostCallback, object>>.get_Count
	|-Queue<ProductDescriptionQuery>.get_Count
	|-Queue<Transform>.get_Count
	|
	|-RVA: 0x27FDE8C Offset: 0x27FDE8C VA: 0x27FDE8C
	|-Queue<TextureExtensions.Point>.get_Count
	|
	|-RVA: 0x27FE8A0 Offset: 0x27FE8A0 VA: 0x27FE8A0
	|-Queue<Spawner.RequestByPath>.get_Count
	|
	|-RVA: 0x27FFCB4 Offset: 0x27FFCB4 VA: 0x27FFCB4
	|-Queue<TaskScheduler.PerformanceQueue>.get_Count
	|
	|-RVA: 0x28006FC Offset: 0x28006FC VA: 0x28006FC
	|-Queue<Vector3>.get_Count
	|
	|-RVA: 0x2801110 Offset: 0x2801110 VA: 0x2801110
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.get_Count
	*/

	// RVA: -1 Offset: -1
	public Queue.Enumerator<T> GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27FF2A8 Offset: 0x27FF2A8 VA: 0x27FF2A8
	|-Queue<AssetManager.LoadWaitStatus>.GetEnumerator
	|-Queue<RequestBase>.GetEnumerator
	|-Queue<ProductDescriptionQuery>.GetEnumerator
	|-Queue<object>.GetEnumerator
	|
	|-RVA: 0x27FDE94 Offset: 0x27FDE94 VA: 0x27FDE94
	|-Queue<TextureExtensions.Point>.GetEnumerator
	|
	|-RVA: 0x27FE8A8 Offset: 0x27FE8A8 VA: 0x27FE8A8
	|-Queue<Spawner.RequestByPath>.GetEnumerator
	|
	|-RVA: 0x27FFCBC Offset: 0x27FFCBC VA: 0x27FFCBC
	|-Queue<TaskScheduler.PerformanceQueue>.GetEnumerator
	|
	|-RVA: 0x2800704 Offset: 0x2800704 VA: 0x2800704
	|-Queue<Vector3>.GetEnumerator
	|
	|-RVA: 0x2801118 Offset: 0x2801118 VA: 0x2801118
	|-Queue<WarBoardManager.WarBoardPerformanceQueue>.GetEnumerator
	*/
}

// Namespace: 
[Serializable]
public struct Queue.Enumerator<T> : IEnumerator, IDisposable, IEnumerator<T> // TypeDefIndex: 1123
{
	// Fields
	private Queue<T> q; // 0x0
	private int idx; // 0x0
	private int ver; // 0x0

	// Properties
	private object System.Collections.IEnumerator.Current { get; }
	public T Current { get; }

	// Methods

	// RVA: -1 Offset: -1
	internal void .ctor(Queue<T> q) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xD72FD4 Offset: 0xD72FD4 VA: 0xD72FD4
	|-Queue.Enumerator<TextureExtensions.Point>..ctor
	|
	|-RVA: 0xD73054 Offset: 0xD73054 VA: 0xD73054
	|-Queue.Enumerator<Spawner.RequestByPath>..ctor
	|
	|-RVA: 0xD730C0 Offset: 0xD730C0 VA: 0xD730C0
	|-Queue.Enumerator<object>..ctor
	|
	|-RVA: 0xD7312C Offset: 0xD7312C VA: 0xD7312C
	|-Queue.Enumerator<TaskScheduler.PerformanceQueue>..ctor
	|
	|-RVA: 0xD73198 Offset: 0xD73198 VA: 0xD73198
	|-Queue.Enumerator<Vector3>..ctor
	|
	|-RVA: 0xD73204 Offset: 0xD73204 VA: 0xD73204
	|-Queue.Enumerator<WarBoardManager.WarBoardPerformanceQueue>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 6
	private void System.Collections.IEnumerator.Reset() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xD73014 Offset: 0xD73014 VA: 0xD73014
	|-Queue.Enumerator<TextureExtensions.Point>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0xD73094 Offset: 0xD73094 VA: 0xD73094
	|-Queue.Enumerator<Spawner.RequestByPath>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0xD73100 Offset: 0xD73100 VA: 0xD73100
	|-Queue.Enumerator<object>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0xD7316C Offset: 0xD7316C VA: 0xD7316C
	|-Queue.Enumerator<TaskScheduler.PerformanceQueue>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0xD731D8 Offset: 0xD731D8 VA: 0xD731D8
	|-Queue.Enumerator<Vector3>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0xD73244 Offset: 0xD73244 VA: 0xD73244
	|-Queue.Enumerator<WarBoardManager.WarBoardPerformanceQueue>.System.Collections.IEnumerator.Reset
	*/

	// RVA: -1 Offset: -1 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xD7301C Offset: 0xD7301C VA: 0xD7301C
	|-Queue.Enumerator<TextureExtensions.Point>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0xD7309C Offset: 0xD7309C VA: 0xD7309C
	|-Queue.Enumerator<Spawner.RequestByPath>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0xD73108 Offset: 0xD73108 VA: 0xD73108
	|-Queue.Enumerator<object>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0xD73174 Offset: 0xD73174 VA: 0xD73174
	|-Queue.Enumerator<TaskScheduler.PerformanceQueue>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0xD731E0 Offset: 0xD731E0 VA: 0xD731E0
	|-Queue.Enumerator<Vector3>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0xD7324C Offset: 0xD7324C VA: 0xD7324C
	|-Queue.Enumerator<WarBoardManager.WarBoardPerformanceQueue>.System.Collections.IEnumerator.get_Current
	*/

	// RVA: -1 Offset: -1 Slot: 7
	public void Dispose() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xD73110 Offset: 0xD73110 VA: 0xD73110
	|-Queue.Enumerator<AssetManager.LoadWaitStatus>.Dispose
	|-Queue.Enumerator<RequestBase>.Dispose
	|-Queue.Enumerator<object>.Dispose
	|-Queue.Enumerator<ProductDescriptionQuery>.Dispose
	|
	|-RVA: 0xD73024 Offset: 0xD73024 VA: 0xD73024
	|-Queue.Enumerator<TextureExtensions.Point>.Dispose
	|
	|-RVA: 0xD730A4 Offset: 0xD730A4 VA: 0xD730A4
	|-Queue.Enumerator<Spawner.RequestByPath>.Dispose
	|
	|-RVA: 0xD7317C Offset: 0xD7317C VA: 0xD7317C
	|-Queue.Enumerator<TaskScheduler.PerformanceQueue>.Dispose
	|
	|-RVA: 0xD731E8 Offset: 0xD731E8 VA: 0xD731E8
	|-Queue.Enumerator<Vector3>.Dispose
	|
	|-RVA: 0xD73254 Offset: 0xD73254 VA: 0xD73254
	|-Queue.Enumerator<WarBoardManager.WarBoardPerformanceQueue>.Dispose
	*/

	// RVA: -1 Offset: -1 Slot: 5
	public bool MoveNext() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xD7311C Offset: 0xD7311C VA: 0xD7311C
	|-Queue.Enumerator<AssetManager.LoadWaitStatus>.MoveNext
	|-Queue.Enumerator<RequestBase>.MoveNext
	|-Queue.Enumerator<object>.MoveNext
	|-Queue.Enumerator<ProductDescriptionQuery>.MoveNext
	|
	|-RVA: 0xD73030 Offset: 0xD73030 VA: 0xD73030
	|-Queue.Enumerator<TextureExtensions.Point>.MoveNext
	|
	|-RVA: 0xD730B0 Offset: 0xD730B0 VA: 0xD730B0
	|-Queue.Enumerator<Spawner.RequestByPath>.MoveNext
	|
	|-RVA: 0xD73188 Offset: 0xD73188 VA: 0xD73188
	|-Queue.Enumerator<TaskScheduler.PerformanceQueue>.MoveNext
	|
	|-RVA: 0xD731F4 Offset: 0xD731F4 VA: 0xD731F4
	|-Queue.Enumerator<Vector3>.MoveNext
	|
	|-RVA: 0xD73260 Offset: 0xD73260 VA: 0xD73260
	|-Queue.Enumerator<WarBoardManager.WarBoardPerformanceQueue>.MoveNext
	*/

	// RVA: -1 Offset: -1 Slot: 8
	public T get_Current() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xD73124 Offset: 0xD73124 VA: 0xD73124
	|-Queue.Enumerator<AssetManager.LoadWaitStatus>.get_Current
	|-Queue.Enumerator<RequestBase>.get_Current
	|-Queue.Enumerator<ProductDescriptionQuery>.get_Current
	|-Queue.Enumerator<object>.get_Current
	|
	|-RVA: 0xD73038 Offset: 0xD73038 VA: 0xD73038
	|-Queue.Enumerator<TextureExtensions.Point>.get_Current
	|
	|-RVA: 0xD730B8 Offset: 0xD730B8 VA: 0xD730B8
	|-Queue.Enumerator<Spawner.RequestByPath>.get_Current
	|
	|-RVA: 0xD73190 Offset: 0xD73190 VA: 0xD73190
	|-Queue.Enumerator<TaskScheduler.PerformanceQueue>.get_Current
	|
	|-RVA: 0xD731FC Offset: 0xD731FC VA: 0xD731FC
	|-Queue.Enumerator<Vector3>.get_Current
	|
	|-RVA: 0xD73268 Offset: 0xD73268 VA: 0xD73268
	|-Queue.Enumerator<WarBoardManager.WarBoardPerformanceQueue>.get_Current
	*/
}

// Namespace: System.Collections.Generic
[DefaultMemberAttribute] // RVA: 0xBCF90C Offset: 0xBCF90C VA: 0xBCF90C
internal class RBTree : IEnumerable, IEnumerable<RBTree.Node> // TypeDefIndex: 1124
{
	// Fields
	private RBTree.Node root; // 0x10
	private object hlp; // 0x18
	private uint version; // 0x20
	[ThreadStaticAttribute] // RVA: 0xBD0DDC Offset: 0xBD0DDC VA: 0xBD0DDC
	private static List<RBTree.Node> cached_path; // 0x80000000

	// Properties
	public int Count { get; }

	// Methods

	// RVA: 0x2236F30 Offset: 0x2236F30 VA: 0x2236F30
	public void .ctor(object hlp) { }

	// RVA: 0x2236F5C Offset: 0x2236F5C VA: 0x2236F5C Slot: 5
	private IEnumerator<RBTree.Node> System.Collections.Generic.IEnumerable<System.Collections.Generic.RBTree.Node>.GetEnumerator() { }

	// RVA: 0x2237010 Offset: 0x2237010 VA: 0x2237010 Slot: 4
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x2237088 Offset: 0x2237088 VA: 0x2237088
	private static List<RBTree.Node> alloc_path() { }

	// RVA: 0x223712C Offset: 0x223712C VA: 0x223712C
	private static void release_path(List<RBTree.Node> path) { }

	// RVA: 0x2237214 Offset: 0x2237214 VA: 0x2237214
	public void Clear() { }

	// RVA: -1 Offset: -1
	public RBTree.Node Intern<T>(T key, RBTree.Node new_node) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1A2DE8C Offset: 0x1A2DE8C VA: 0x1A2DE8C
	|-RBTree.Intern<object>
	*/

	// RVA: -1 Offset: -1
	public RBTree.Node Remove<T>(T key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1A2E488 Offset: 0x1A2E488 VA: 0x1A2E488
	|-RBTree.Remove<object>
	*/

	// RVA: -1 Offset: -1
	public RBTree.Node Lookup<T>(T key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1A2E314 Offset: 0x1A2E314 VA: 0x1A2E314
	|-RBTree.Lookup<object>
	*/

	// RVA: 0x2237228 Offset: 0x2237228 VA: 0x2237228
	public int get_Count() { }

	// RVA: 0x2236FD4 Offset: 0x2236FD4 VA: 0x2236FD4
	public RBTree.NodeEnumerator GetEnumerator() { }

	// RVA: -1 Offset: -1
	private int find_key<T>(T key, List<RBTree.Node> path) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C57918 Offset: 0x1C57918 VA: 0x1C57918
	|-RBTree.find_key<object>
	*/

	// RVA: 0x223728C Offset: 0x223728C VA: 0x223728C
	private RBTree.Node do_insert(int in_tree_cmp, RBTree.Node current, List<RBTree.Node> path) { }

	// RVA: 0x2237738 Offset: 0x2237738 VA: 0x2237738
	private RBTree.Node do_remove(List<RBTree.Node> path) { }

	// RVA: 0x2237518 Offset: 0x2237518 VA: 0x2237518
	private void rebalance_insert(List<RBTree.Node> path) { }

	// RVA: 0x2237DAC Offset: 0x2237DAC VA: 0x2237DAC
	private void rebalance_delete(List<RBTree.Node> path) { }

	// RVA: 0x2237F60 Offset: 0x2237F60 VA: 0x2237F60
	private void rebalance_insert__rotate_final(int curpos, List<RBTree.Node> path) { }

	// RVA: 0x2238644 Offset: 0x2238644 VA: 0x2238644
	private void rebalance_delete__rotate_final(int curpos, List<RBTree.Node> path) { }

	// RVA: 0x223828C Offset: 0x223828C VA: 0x223828C
	private int ensure_sibling_black(int curpos, List<RBTree.Node> path) { }

	// RVA: 0x2237C80 Offset: 0x2237C80 VA: 0x2237C80
	private void node_reparent(RBTree.Node orig_parent, RBTree.Node orig, uint orig_size, RBTree.Node updated) { }

	// RVA: 0x2237BA8 Offset: 0x2237BA8 VA: 0x2237BA8
	private static RBTree.Node right_most(RBTree.Node current, RBTree.Node sibling, List<RBTree.Node> path) { }
}

// Namespace: 
public interface RBTree.INodeHelper<T> // TypeDefIndex: 1125
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract int Compare(T key, RBTree.Node node);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-RBTree.INodeHelper<object>.Compare
	*/

	// RVA: -1 Offset: -1 Slot: 1
	public abstract RBTree.Node CreateNode(T key);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-RBTree.INodeHelper<object>.CreateNode
	*/
}

// Namespace: 
public abstract class RBTree.Node // TypeDefIndex: 1126
{
	// Fields
	public RBTree.Node left; // 0x10
	public RBTree.Node right; // 0x18
	private uint size_black; // 0x20

	// Properties
	public bool IsBlack { get; set; }
	public uint Size { get; set; }

	// Methods

	// RVA: 0x2238A40 Offset: 0x2238A40 VA: 0x2238A40
	public void .ctor() { }

	// RVA: 0x223750C Offset: 0x223750C VA: 0x223750C
	public bool get_IsBlack() { }

	// RVA: 0x2238250 Offset: 0x2238250 VA: 0x2238250
	public void set_IsBlack(bool value) { }

	// RVA: 0x2237244 Offset: 0x2237244 VA: 0x2237244
	public uint get_Size() { }

	// RVA: 0x22374FC Offset: 0x22374FC VA: 0x22374FC
	public void set_Size(uint value) { }

	// RVA: 0x22389F0 Offset: 0x22389F0 VA: 0x22389F0
	public uint FixSize() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void SwapValue(RBTree.Node other);
}

// Namespace: 
public struct RBTree.NodeEnumerator : IEnumerator, IDisposable, IEnumerator<RBTree.Node> // TypeDefIndex: 1127
{
	// Fields
	private RBTree tree; // 0x0
	private uint version; // 0x8
	private Stack<RBTree.Node> pennants; // 0x10

	// Properties
	private object System.Collections.IEnumerator.Current { get; }
	public RBTree.Node Current { get; }

	// Methods

	// RVA: 0xD67B40 Offset: 0xD67B40 VA: 0xD67B40
	internal void .ctor(RBTree tree) { }

	// RVA: 0xD67B7C Offset: 0xD67B7C VA: 0xD67B7C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	// RVA: 0xD67BA4 Offset: 0xD67BA4 VA: 0xD67BA4 Slot: 6
	public void Reset() { }

	// RVA: 0xD67BCC Offset: 0xD67BCC VA: 0xD67BCC Slot: 8
	public RBTree.Node get_Current() { }

	// RVA: 0xD67BD4 Offset: 0xD67BD4 VA: 0xD67BD4 Slot: 5
	public bool MoveNext() { }

	// RVA: 0xD67BDC Offset: 0xD67BDC VA: 0xD67BDC Slot: 7
	public void Dispose() { }

	// RVA: 0xD67BE8 Offset: 0xD67BE8 VA: 0xD67BE8
	private void check_version() { }

	// RVA: 0xD67BF0 Offset: 0xD67BF0 VA: 0xD67BF0
	internal void check_current() { }
}

// Namespace: System.Collections.Generic
[DefaultMemberAttribute] // RVA: 0xBCF944 Offset: 0xBCF944 VA: 0xBCF944
[Serializable]
public class SortedDictionary<TKey, TValue> : ICollection, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, IEnumerable, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>> // TypeDefIndex: 1128
{
	// Fields
	private RBTree tree; // 0x0
	private SortedDictionary.NodeHelper<TKey, TValue> hlp; // 0x0

	// Properties
	private ICollection<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys { get; }
	private ICollection<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values { get; }
	private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly { get; }
	private bool System.Collections.IDictionary.IsFixedSize { get; }
	private bool System.Collections.IDictionary.IsReadOnly { get; }
	private ICollection System.Collections.IDictionary.Keys { get; }
	private ICollection System.Collections.IDictionary.Values { get; }
	private object System.Collections.IDictionary.Item { get; set; }
	private bool System.Collections.ICollection.IsSynchronized { get; }
	private object System.Collections.ICollection.SyncRoot { get; }
	public int Count { get; }
	public TValue Item { get; set; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28035C8 Offset: 0x28035C8 VA: 0x28035C8
	|-SortedDictionary<object, object>..ctor
	|-SortedDictionary<string, string>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(IComparer<TKey> comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2803608 Offset: 0x2803608 VA: 0x2803608
	|-SortedDictionary<object, object>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 26
	private ICollection<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2803720 Offset: 0x2803720 VA: 0x2803720
	|-SortedDictionary<object, object>.System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys
	*/

	// RVA: -1 Offset: -1 Slot: 27
	private ICollection<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.get_Values() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x280378C Offset: 0x280378C VA: 0x280378C
	|-SortedDictionary<object, object>.System.Collections.Generic.IDictionary<TKey,TValue>.get_Values
	*/

	// RVA: -1 Offset: -1 Slot: 30
	private void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey, TValue> item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28037F8 Offset: 0x28037F8 VA: 0x28037F8
	|-SortedDictionary<object, object>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
	*/

	// RVA: -1 Offset: -1 Slot: 32
	private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair<TKey, TValue> item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2803888 Offset: 0x2803888 VA: 0x2803888
	|-SortedDictionary<object, object>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
	*/

	// RVA: -1 Offset: -1 Slot: 29
	private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28039D8 Offset: 0x28039D8 VA: 0x28039D8
	|-SortedDictionary<object, object>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly
	*/

	// RVA: -1 Offset: -1 Slot: 34
	private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey, TValue> item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x28039E0 Offset: 0x28039E0 VA: 0x28039E0
	|-SortedDictionary<object, object>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
	*/

	// RVA: -1 Offset: -1 Slot: 16
	private void System.Collections.IDictionary.Add(object key, object value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2803B7C Offset: 0x2803B7C VA: 0x2803B7C
	|-SortedDictionary<object, object>.System.Collections.IDictionary.Add
	*/

	// RVA: -1 Offset: -1 Slot: 18
	private bool System.Collections.IDictionary.Contains(object key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2803C28 Offset: 0x2803C28 VA: 0x2803C28
	|-SortedDictionary<object, object>.System.Collections.IDictionary.Contains
	*/

	// RVA: -1 Offset: -1 Slot: 19
	private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2803CA0 Offset: 0x2803CA0 VA: 0x2803CA0
	|-SortedDictionary<object, object>.System.Collections.IDictionary.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 10
	private bool System.Collections.IDictionary.get_IsFixedSize() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2803D1C Offset: 0x2803D1C VA: 0x2803D1C
	|-SortedDictionary<object, object>.System.Collections.IDictionary.get_IsFixedSize
	*/

	// RVA: -1 Offset: -1 Slot: 11
	private bool System.Collections.IDictionary.get_IsReadOnly() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2803D24 Offset: 0x2803D24 VA: 0x2803D24
	|-SortedDictionary<object, object>.System.Collections.IDictionary.get_IsReadOnly
	*/

	// RVA: -1 Offset: -1 Slot: 14
	private ICollection System.Collections.IDictionary.get_Keys() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2803D2C Offset: 0x2803D2C VA: 0x2803D2C
	|-SortedDictionary<object, object>.System.Collections.IDictionary.get_Keys
	*/

	// RVA: -1 Offset: -1 Slot: 20
	private void System.Collections.IDictionary.Remove(object key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2803D98 Offset: 0x2803D98 VA: 0x2803D98
	|-SortedDictionary<object, object>.System.Collections.IDictionary.Remove
	*/

	// RVA: -1 Offset: -1 Slot: 15
	private ICollection System.Collections.IDictionary.get_Values() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2803E10 Offset: 0x2803E10 VA: 0x2803E10
	|-SortedDictionary<object, object>.System.Collections.IDictionary.get_Values
