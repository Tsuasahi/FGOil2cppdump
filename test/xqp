// Namespace: 
public class BattleBuffData // TypeDefIndex: 8770
{
	// Fields
	private int resumptionHpFromLossMaxHp; // 0x10
	private List<BattleBuffData.BuffData> passiveList; // 0x18
	private List<BattleBuffData.BuffData> activeList; // 0x20
	private List<BattleBuffData.BuffData> conditionalAuraBuff; // 0x28
	private List<BattleBuffData.BuffData> auraBuffList; // 0x30
	private int[] ignoreAuraBuffIds; // 0x38
	private int addBuffOrder; // 0x40
	public List<int> unfixedBuffList; // 0x48
	public BattleBuffData.SkillRankChangeData skillChangeData; // 0x50
	private BuffMaster _tmpBuffMst; // 0x58
	private List<int> notUseCountWithNoDamageBuffTypes; // 0x60
	private BuffMaster buffMaster; // 0x68
	private int[] wkzero; // 0x70
	private bool wkflg; // 0x78
	private string wkStr; // 0x80
	private List<BattleBuffData.BuffData> wkBuffs; // 0x88
	private List<BattleBuffData.BuffData> wkAfterBuffs; // 0x90
	private bool isNoDamage; // 0x98
	[CompilerGeneratedAttribute] // RVA: 0xCCD344 Offset: 0xCCD344 VA: 0xCCD344
	private static Predicate<BattleBuffData.BuffData> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCCD354 Offset: 0xCCD354 VA: 0xCCD354
	private static Predicate<BattleBuffData.BuffData> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCCD364 Offset: 0xCCD364 VA: 0xCCD364
	private static Predicate<BattleBuffData.BuffData> <>f__am$cache2; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCCD374 Offset: 0xCCD374 VA: 0xCCD374
	private static Predicate<BattleBuffData.BuffData> <>f__am$cache3; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCCD384 Offset: 0xCCD384 VA: 0xCCD384
	private static Predicate<BattleBuffData.BuffData> <>f__am$cache4; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCCD394 Offset: 0xCCD394 VA: 0xCCD394
	private static Predicate<BattleBuffData.BuffData> <>f__am$cache5; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCCD3A4 Offset: 0xCCD3A4 VA: 0xCCD3A4
	private static Predicate<BattleBuffData.BuffData> <>f__am$cache6; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xCCD3B4 Offset: 0xCCD3B4 VA: 0xCCD3B4
	private static Action<BattleBuffData.BuffData> <>f__am$cache7; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xCCD3C4 Offset: 0xCCD3C4 VA: 0xCCD3C4
	private static Predicate<BattleBuffData.BuffData> <>f__am$cache8; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xCCD3D4 Offset: 0xCCD3D4 VA: 0xCCD3D4
	private static Predicate<BattleBuffData.BuffData> <>f__am$cache9; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xCCD3E4 Offset: 0xCCD3E4 VA: 0xCCD3E4
	private static Predicate<BattleBuffData.BuffData> <>f__am$cacheA; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xCCD3F4 Offset: 0xCCD3F4 VA: 0xCCD3F4
	private static Predicate<BattleBuffData.BuffData> <>f__am$cacheB; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xCCD404 Offset: 0xCCD404 VA: 0xCCD404
	private static Comparison<BattleBuffData.BuffData> <>f__am$cacheC; // 0x60
	[CompilerGeneratedAttribute] // RVA: 0xCCD414 Offset: 0xCCD414 VA: 0xCCD414
	private static Func<int, int, bool, bool> <>f__am$cacheD; // 0x68
	[CompilerGeneratedAttribute] // RVA: 0xCCD424 Offset: 0xCCD424 VA: 0xCCD424
	private static Func<BattleBuffData.BuffData, bool> <>f__am$cacheE; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xCCD434 Offset: 0xCCD434 VA: 0xCCD434
	private static Func<BattleBuffData.BuffData, bool> <>f__am$cacheF; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xCCD444 Offset: 0xCCD444 VA: 0xCCD444
	private static Func<string, int> <>f__mg$cache0; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xCCD454 Offset: 0xCCD454 VA: 0xCCD454
	private static Func<int[], int[], bool> <>f__mg$cache1; // 0x88
	[CompilerGeneratedAttribute] // RVA: 0xCCD464 Offset: 0xCCD464 VA: 0xCCD464
	private static Func<int[], int[], bool> <>f__mg$cache2; // 0x90
	[CompilerGeneratedAttribute] // RVA: 0xCCD474 Offset: 0xCCD474 VA: 0xCCD474
	private static Func<int[], int[], bool> <>f__mg$cache3; // 0x98
	[CompilerGeneratedAttribute] // RVA: 0xCCD484 Offset: 0xCCD484 VA: 0xCCD484
	private static Func<int[], int[], bool> <>f__mg$cache4; // 0xA0
	[CompilerGeneratedAttribute] // RVA: 0xCCD494 Offset: 0xCCD494 VA: 0xCCD494
	private static Predicate<BattleBuffData.BuffData> <>f__am$cache10; // 0xA8
	[CompilerGeneratedAttribute] // RVA: 0xCCD4A4 Offset: 0xCCD4A4 VA: 0xCCD4A4
	private static Func<BattleBuffData.BuffData, int> <>f__am$cache11; // 0xB0
	[CompilerGeneratedAttribute] // RVA: 0xCCD4B4 Offset: 0xCCD4B4 VA: 0xCCD4B4
	private static Comparison<BattleBuffData.BuffData> <>f__am$cache12; // 0xB8
	[CompilerGeneratedAttribute] // RVA: 0xCCD4C4 Offset: 0xCCD4C4 VA: 0xCCD4C4
	private static Comparison<BattleBuffData.BuffData> <>f__am$cache13; // 0xC0
	[CompilerGeneratedAttribute] // RVA: 0xCCD4D4 Offset: 0xCCD4D4 VA: 0xCCD4D4
	private static Comparison<BattleBuffData.BuffData> <>f__am$cache14; // 0xC8
	[CompilerGeneratedAttribute] // RVA: 0xCCD4E4 Offset: 0xCCD4E4 VA: 0xCCD4E4
	private static Func<BattleBuffData.BuffData, int> <>f__am$cache15; // 0xD0
	[CompilerGeneratedAttribute] // RVA: 0xCCD4F4 Offset: 0xCCD4F4 VA: 0xCCD4F4
	private static Func<BattleBuffData.BuffData, int> <>f__am$cache16; // 0xD8
	[CompilerGeneratedAttribute] // RVA: 0xCCD504 Offset: 0xCCD504 VA: 0xCCD504
	private static Func<BattleBuffData.BuffData, int> <>f__am$cache17; // 0xE0
	[CompilerGeneratedAttribute] // RVA: 0xCCD514 Offset: 0xCCD514 VA: 0xCCD514
	private static Func<BattleBuffData.BuffData, int> <>f__am$cache18; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xCCD524 Offset: 0xCCD524 VA: 0xCCD524
	private static Func<BattleBuffData.BuffData, int> <>f__am$cache19; // 0xF0
	[CompilerGeneratedAttribute] // RVA: 0xCCD534 Offset: 0xCCD534 VA: 0xCCD534
	private static Predicate<BattleBuffData.BuffData> <>f__am$cache1A; // 0xF8
	[CompilerGeneratedAttribute] // RVA: 0xCCD544 Offset: 0xCCD544 VA: 0xCCD544
	private static Predicate<BattleBuffData.BuffData> <>f__am$cache1B; // 0x100
	[CompilerGeneratedAttribute] // RVA: 0xCCD554 Offset: 0xCCD554 VA: 0xCCD554
	private static Comparison<BattleBuffData.BuffData> <>f__am$cache1C; // 0x108
	[CompilerGeneratedAttribute] // RVA: 0xCCD564 Offset: 0xCCD564 VA: 0xCCD564
	private static Action<BattleBuffData.BuffData> <>f__am$cache1D; // 0x110
	[CompilerGeneratedAttribute] // RVA: 0xCCD574 Offset: 0xCCD574 VA: 0xCCD574
	private static Predicate<BattleBuffData.BuffData> <>f__am$cache1E; // 0x118
	[CompilerGeneratedAttribute] // RVA: 0xCCD584 Offset: 0xCCD584 VA: 0xCCD584
	private static Predicate<BattleBuffData.BuffData> <>f__am$cache1F; // 0x120

	// Properties
	public BuffMaster buffMst { get; }
	public bool IsNoDamage { get; set; }

	// Methods

	// RVA: 0x1D56284 Offset: 0x1D56284 VA: 0x1D56284
	public void .ctor() { }

	// RVA: 0x1D563F0 Offset: 0x1D563F0 VA: 0x1D563F0
	private void AddResumptionHpFromLossMaxHp(int value) { }

	// RVA: 0x1D56400 Offset: 0x1D56400 VA: 0x1D56400
	public int getResumptionHpFromLossMaxHp(bool isUse) { }

	// RVA: 0x1D56414 Offset: 0x1D56414 VA: 0x1D56414
	public void checkAndAddResumptionHpFromLossMaxHp(List<BattleBuffData.BuffData> buffList) { }

	// RVA: 0x1D568B0 Offset: 0x1D568B0 VA: 0x1D568B0
	private void CheckAndUpdateFieldIndividualityBuff(List<BattleBuffData.BuffData> buffList, BattleLogic logic) { }

	// RVA: 0x1D56ACC Offset: 0x1D56ACC VA: 0x1D56ACC
	public void Initialize() { }

	// RVA: 0x1D56B6C Offset: 0x1D56B6C VA: 0x1D56B6C
	public BattleBuffData.BuffData[] getPassiveList() { }

	// RVA: 0x1D56C5C Offset: 0x1D56C5C VA: 0x1D56C5C
	public BattleBuffData.BuffData[] getActiveList() { }

	// RVA: 0x1D56D48 Offset: 0x1D56D48 VA: 0x1D56D48
	public BattleBuffData.BuffData[] getActiveArrayNoActAfterUsed() { }

	// RVA: 0x1D56F24 Offset: 0x1D56F24 VA: 0x1D56F24
	public BattleBuffData.BuffData[] getPassiveListDebug() { }

	// RVA: 0x1D56F84 Offset: 0x1D56F84 VA: 0x1D56F84
	public BattleBuffData.BuffData[] getActiveListDebug() { }

	// RVA: 0x1D56FE4 Offset: 0x1D56FE4 VA: 0x1D56FE4
	public List<BattleBuffData.BuffData> getAuraBuffList() { }

	// RVA: 0x1D570B0 Offset: 0x1D570B0 VA: 0x1D570B0
	public bool checkAuraBuff() { }

	// RVA: 0x1D571C8 Offset: 0x1D571C8 VA: 0x1D571C8
	public void updateAuraBuffList() { }

	// RVA: 0x1D57268 Offset: 0x1D57268 VA: 0x1D57268
	public BattleBuffData.ShowBuffData[] getShowServantParam() { }

	// RVA: 0x1D573C4 Offset: 0x1D573C4 VA: 0x1D573C4
	private void CheckDummyBuffData(List<BattleBuffData.ShowBuffData> reList) { }

	// RVA: 0x1D57584 Offset: 0x1D57584 VA: 0x1D57584
	private bool IsUnfix(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D5765C Offset: 0x1D5765C VA: 0x1D5765C
	public void RemoveBuff(List<BattleBuffData.BuffData> removeBuffList) { }

	// RVA: 0x1D577EC Offset: 0x1D577EC VA: 0x1D577EC
	public BattleBuffData.ShowBuffData[] DebugGetShowServantParamAll() { }

	// RVA: 0x1D57930 Offset: 0x1D57930 VA: 0x1D57930
	public BattleBuffData.ShowBuffData[] getShowServantConf() { }

	// RVA: 0x1D57934 Offset: 0x1D57934 VA: 0x1D57934
	public BattleBuffData.BuffData[] getShowCommandBuffListActive() { }

	// RVA: 0x1D57B28 Offset: 0x1D57B28 VA: 0x1D57B28
	public BattleBuffData.BuffData[] getShowCommandBuffListPassive() { }

	// RVA: 0x1D57D18 Offset: 0x1D57D18 VA: 0x1D57D18
	public bool checkBuffSpecialAttack(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D57DF4 Offset: 0x1D57DF4 VA: 0x1D57DF4
	public bool checkBuffTurnCount(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D57E3C Offset: 0x1D57E3C VA: 0x1D57E3C
	public bool checkBoostSkill(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D57E6C Offset: 0x1D57E6C VA: 0x1D57E6C
	public bool isShow(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D57A7C Offset: 0x1D57A7C VA: 0x1D57A7C
	public bool isHide(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D57ADC Offset: 0x1D57ADC VA: 0x1D57ADC
	public bool isInvalidHide(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D57F2C Offset: 0x1D57F2C VA: 0x1D57F2C
	public bool IsIgnoreIndividuality(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D57F5C Offset: 0x1D57F5C VA: 0x1D57F5C
	public bool isShowDeff(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D57CB8 Offset: 0x1D57CB8 VA: 0x1D57CB8
	public bool isHideOtherCommand(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D57AAC Offset: 0x1D57AAC VA: 0x1D57AAC
	public bool isShowStatusBuffOnly(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D57CE8 Offset: 0x1D57CE8 VA: 0x1D57CE8
	public bool isShowDamageAndCommandCardBuff(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D57F8C Offset: 0x1D57F8C VA: 0x1D57F8C
	public void clearActiveBuff() { }

	// RVA: 0x1D57FEC Offset: 0x1D57FEC VA: 0x1D57FEC
	public void clearAuraBuff() { }

	// RVA: 0x1D57E9C Offset: 0x1D57E9C VA: 0x1D57E9C
	public BuffMaster get_buffMst() { }

	// RVA: 0x1D5804C Offset: 0x1D5804C VA: 0x1D5804C
	public void ProgressBuffTurn(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D580AC Offset: 0x1D580AC VA: 0x1D580AC
	public BattleBuffData.BuffData[] turnProgressing(BattleLogic logic, bool isEndEnemyTurn, int svtUniqueId) { }

	// RVA: 0x1D58C64 Offset: 0x1D58C64 VA: 0x1D58C64
	public BattleBuffData.BuffData[] RemoveNoTurnBuff(BattleLogic logic) { }

	// RVA: 0x1D58F58 Offset: 0x1D58F58 VA: 0x1D58F58
	public void ResetNotTakeOverBuff() { }

	// RVA: 0x1D58690 Offset: 0x1D58690 VA: 0x1D58690
	private List<BattleBuffData.BuffData> removeLinkageBuff(List<BattleBuffData.BuffData> endBuffs, bool isCreateDummy = False) { }

	// RVA: 0x1D5937C Offset: 0x1D5937C VA: 0x1D5937C
	public void syncLinkageBuffChangeParam(BattleBuffData.BuffData[] linkedArray) { }

	// RVA: 0x1D595D4 Offset: 0x1D595D4 VA: 0x1D595D4
	private void syncLinkageBuffChangeParam(BattleBuffData.BuffData linkedBuff, BattleBuffData.BuffData[] checkArray, ref List<BattleBuffData.BuffData> reflectedBuffList) { }

	// RVA: 0x1D591E8 Offset: 0x1D591E8 VA: 0x1D591E8
	private bool checkSameElement(int elem, int[] elems) { }

	// RVA: 0x1D59730 Offset: 0x1D59730 VA: 0x1D59730
	public void turnProgressingIncrease() { }

	// RVA: 0x1D59800 Offset: 0x1D59800 VA: 0x1D59800
	public void turnProgressingIncreaseCalc(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D59860 Offset: 0x1D59860 VA: 0x1D59860
	public BattleBuffData.BuffData[] getReflectionEffectFunction() { }

	// RVA: 0x1D59BD4 Offset: 0x1D59BD4 VA: 0x1D59BD4
	public BattleBuffData.BuffData[] geCheckBuffSuccessful(BattleBuffData.BuffData[] bufflist) { }

	// RVA: 0x1D5A120 Offset: 0x1D5A120 VA: 0x1D5A120
	public void UsedProgressing(BattleBuffData.BuffData[] checkList) { }

	// RVA: 0x1D5A4F0 Offset: 0x1D5A4F0 VA: 0x1D5A4F0
	public void usedProgressing() { }

	// RVA: 0x1D5A76C Offset: 0x1D5A76C VA: 0x1D5A76C
	private bool checkBuffClear(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D5A844 Offset: 0x1D5A844 VA: 0x1D5A844
	public void usedProgressingGuts() { }

	// RVA: 0x1D5AA98 Offset: 0x1D5AA98 VA: 0x1D5AA98
	public BattleActionData UseProgressingDoNotAct(BattleServantData svtData, bool doTDamage = False) { }

	// RVA: 0x1D5AE1C Offset: 0x1D5AE1C VA: 0x1D5AE1C
	public BattleActionData.BuffData UseFieldProgressingDoNotAct(BattleServantData svtData, int funcIndex) { }

	// RVA: 0x1D5A258 Offset: 0x1D5A258 VA: 0x1D5A258
	private void RemoveProgressingBuffList(List<BattleBuffData.BuffData> linkedBuffList) { }

	// RVA: 0x1D5B100 Offset: 0x1D5B100 VA: 0x1D5B100
	public void addBuff(BattleBuffData.BuffData buff, bool fieldflg, bool unFix = False) { }

	// RVA: 0x1D5B4AC Offset: 0x1D5B4AC VA: 0x1D5B4AC
	public void AddForceBuff(BattleBuffData.BuffData[] buffArray) { }

	// RVA: 0x1D5B540 Offset: 0x1D5B540 VA: 0x1D5B540
	public void DelForceBuff(BattleBuffData.BuffData[] buffArray) { }

	// RVA: 0x1D5B5D4 Offset: 0x1D5B5D4 VA: 0x1D5B5D4
	private void UpdateForceBuff(BattleBuffData.BuffData buff, bool isAdd) { }

	// RVA: 0x1D5B744 Offset: 0x1D5B744 VA: 0x1D5B744
	public bool checkBuffGroup(int groupId, int attachTarget) { }

	// RVA: 0x1D5B7AC Offset: 0x1D5B7AC VA: 0x1D5B7AC
	private bool CheckBuffGroup(List<BattleBuffData.BuffData> buffList, int groupId, int attachTarget) { }

	// RVA: 0x1D5B9D4 Offset: 0x1D5B9D4 VA: 0x1D5B9D4
	public void checkFieldBuff(int[] idList, FieldAliveServantData aliveSvtData, out BattleBuffData.BuffData[] onList, out BattleBuffData.BuffData[] offList, BattleLogic logic) { }

	// RVA: 0x1D5BEF0 Offset: 0x1D5BEF0 VA: 0x1D5BEF0
	public void checkFieldAlive(FieldAliveServantData aliveSvtData, List<BattleBuffData.BuffData> checkList, BattleLogic logic) { }

	// RVA: 0x1D5C1E4 Offset: 0x1D5C1E4 VA: 0x1D5C1E4
	public static BattleServantData[] CheckIndivSvtDataList(List<BattleServantData> svtDataList, int[] tvals, bool isIncludeIgnoreIndiv = False) { }

	// RVA: 0x1D5C3B4 Offset: 0x1D5C3B4 VA: 0x1D5C3B4
	public bool checkBuffIndividualities(int[] individualities, bool isActiveOnly = False, bool IsIncludeIgnoreIndividuality = False, bool isIgnoreIndivUnreleaseable = False) { }

	// RVA: 0x1D5C504 Offset: 0x1D5C504 VA: 0x1D5C504
	public int[] getBuffIndividualities(bool isActiveOnly = False, bool isIncludeIgnoreIndiv = False, bool isIgnoreIndivUnreleaseable = False) { }

	// RVA: 0x1D5C6E0 Offset: 0x1D5C6E0 VA: 0x1D5C6E0
	public int getSameIndivualityBuffSum(int[] indv, bool isActiveOnly, bool IsIncludeIgnoreIndividuality = False, bool isIgnoreIndivUnreleaseable = False) { }

	// RVA: 0x1D5C844 Offset: 0x1D5C844 VA: 0x1D5C844
	public int getActiveIndividualitiesNum(int[] individualities) { }

	// RVA: 0x1D5C8F8 Offset: 0x1D5C8F8 VA: 0x1D5C8F8
	public int getActiveBuffNum(int[] ids) { }

	// RVA: 0x1D5C9E4 Offset: 0x1D5C9E4 VA: 0x1D5C9E4
	public bool checkBuffId(int[] idlist) { }

	// RVA: 0x1D5CB74 Offset: 0x1D5CB74 VA: 0x1D5CB74
	public int[] getBuffIDList() { }

	// RVA: 0x1D5CD0C Offset: 0x1D5CD0C VA: 0x1D5CD0C
	public int[] getBuffActiveIDList() { }

	// RVA: 0x1D5CE24 Offset: 0x1D5CE24 VA: 0x1D5CE24
	public long getMaxBuffCount(long[] individualities, bool isActiveOnly = False) { }

	// RVA: 0x1D5CF88 Offset: 0x1D5CF88 VA: 0x1D5CF88
	public bool subBuffFromIndividualites(int[] individualities, int fromHead, int fromTail, ref List<BattleBuffData.BuffData> endList, bool isCreateDummy = True, bool isForceSubState = False) { }

	// RVA: 0x1D5926C Offset: 0x1D5926C VA: 0x1D5926C
	public BattleBuffData.BuffData CreateDummyBuff(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D598FC Offset: 0x1D598FC VA: 0x1D598FC
	public BattleBuffData.BuffData[] getBuffList(BuffList.TYPE[] types, int[] targetIndividualities, BattleBuffData.BuffData[] checklist) { }

	// RVA: 0x1D5D358 Offset: 0x1D5D358 VA: 0x1D5D358
	public int[] GetGrantBuffTypeArray(bool isIncludePassive = True, bool isIncludeActive = True) { }

	// RVA: 0x1D59CE8 Offset: 0x1D59CE8 VA: 0x1D59CE8
	public bool checkBuffSuccessful(BattleBuffData.BuffData buff, bool isRec = True) { }

	// RVA: 0x1D5D5DC Offset: 0x1D5D5DC VA: 0x1D5D5DC
	public bool checkGutsBuffSuccessful(BattleBuffData.BuffData buff, bool isRec = True) { }

	// RVA: 0x1D5D6AC Offset: 0x1D5D6AC VA: 0x1D5D6AC
	public bool checkGutsBuffSuccessfulIndividual(BattleBuffData.BuffData[] bufflist, out BattleBuffData.BuffData buff) { }

	// RVA: 0x1D5D764 Offset: 0x1D5D764 VA: 0x1D5D764
	public BattleBuffData.BuffData getBuffSuccessfulIndividual(BattleBuffData.BuffData[] bufflist) { }

	// RVA: 0x1D5D814 Offset: 0x1D5D814 VA: 0x1D5D814
	public bool isGuts(out BattleBuffData.BuffData buff) { }

	// RVA: 0x1D5D8A8 Offset: 0x1D5D8A8 VA: 0x1D5D8A8
	public int useGuts(int maxhp, out string motionName) { }

	// RVA: 0x1D5DA30 Offset: 0x1D5DA30 VA: 0x1D5DA30
	public bool isTDTypeChange() { }

	// RVA: 0x1D5DA64 Offset: 0x1D5DA64 VA: 0x1D5DA64
	public BattleBuffData.BuffData getTDTypeChangeBuffData() { }

	// RVA: 0x1D5DBA0 Offset: 0x1D5DBA0 VA: 0x1D5DBA0
	public int checkAddParam(BattleBuffData.BuffData[] bufflist, bool isRec = False) { }

	// RVA: 0x1D5DC4C Offset: 0x1D5DC4C VA: 0x1D5DC4C
	public BattleBuffData.SaveData getSaveData() { }

	// RVA: 0x1D5DD1C Offset: 0x1D5DD1C VA: 0x1D5DD1C
	public void setSaveData(BattleBuffData.SaveData sv) { }

	// RVA: 0x1D5DE7C Offset: 0x1D5DE7C VA: 0x1D5DE7C
	public void startBattleRec() { }

	// RVA: 0x1D5D5AC Offset: 0x1D5D5AC VA: 0x1D5D5AC
	private void recBuff(BattleBuffData.BuffData buffData) { }

	// RVA: 0x1D5E064 Offset: 0x1D5E064 VA: 0x1D5E064
	public BattleBuffData.ShowBuffData[] getRectBuffList(bool isAtkSide, bool isShowOverwriteClassRelation = True, bool isShowDarkClassRelation = False) { }

	// RVA: 0x1D5E774 Offset: 0x1D5E774 VA: 0x1D5E774
	public bool isSphitBuff(out int effectId) { }

	// RVA: 0x1D5E9A0 Offset: 0x1D5E9A0 VA: 0x1D5E9A0
	private bool isConditionHp(BattleBuffData.BuffData buff, int now, int max) { }

	// RVA: 0x1D5B254 Offset: 0x1D5B254 VA: 0x1D5B254
	private bool checkConditions(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D5EB5C Offset: 0x1D5EB5C VA: 0x1D5EB5C
	private bool isContainConditionsHp(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D5EC14 Offset: 0x1D5EC14 VA: 0x1D5EC14
	private bool isContainConditionIndividuality(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D5ECCC Offset: 0x1D5ECCC VA: 0x1D5ECCC
	private bool isConditionIndividuality(BattleBuffData.BuffData buff, int[] servantIndv, int[] buffIndv, int[] fieldIndiv) { }

	// RVA: 0x1D5EF34 Offset: 0x1D5EF34 VA: 0x1D5EF34
	public void changeBuffStateIfNeeded(int now, int max, int[] servantIndv, int[] buffIndv, int[] fieldIndiv, BattleActorControl actor, BattleLogic logic) { }

	// RVA: 0x1D5F060 Offset: 0x1D5F060 VA: 0x1D5F060
	public bool ChangeBuffState(int now, int max, int[] servantIndv, int[] buffIndv, int[] fieldIndiv) { }

	// RVA: 0x1D5F1F0 Offset: 0x1D5F1F0 VA: 0x1D5F1F0
	public void UpdateForceAllBuffNoAct(int showState) { }

	// RVA: 0x1D5F2E8 Offset: 0x1D5F2E8 VA: 0x1D5F2E8
	public void UpdateSkillRelationBuff() { }

	// RVA: 0x1D5F3F0 Offset: 0x1D5F3F0 VA: 0x1D5F3F0
	public int getActValue(BuffList.ACTION act, int[] selfIndiv, out bool actflg, out string missText, BattleBuffData.CheckIndividualitiesData checkIndividualities, BattleLogicBuff.BaseProcess buffProc) { }

	// RVA: 0x1D5FD64 Offset: 0x1D5FD64 VA: 0x1D5FD64
	public int getActValue(BuffList.ACTION act, int[] selfIndiv, out bool actflg, BattleBuffData.CheckIndividualitiesData checkIndividualities) { }

	// RVA: 0x1D5FD78 Offset: 0x1D5FD78 VA: 0x1D5FD78
	public int getActValue(BuffList.ACTION act, int[] selfIndiv, int[] opIndiv, BattleBuffData.CheckIndividualitiesData checkIndividualities, BuffInterface selfIf) { }

	// RVA: 0x1D5FE4C Offset: 0x1D5FE4C VA: 0x1D5FE4C
	public int getActValue(BuffList.ACTION act, int[] selfIndiv, BattleBuffData.CheckIndividualitiesData checkIndividualities) { }

	// RVA: 0x1D5FD90 Offset: 0x1D5FD90 VA: 0x1D5FD90
	public int getActValue(BuffList.ACTION act, int[] selfIndiv, int[] opIndiv, out string text, BattleBuffData.CheckIndividualitiesData checkIndividualities, BuffInterface selfIf) { }

	// RVA: 0x1D5FE64 Offset: 0x1D5FE64 VA: 0x1D5FE64
	public int getActValue(BuffList.ActInfo actInfo, int[] selfIndiv, int[] opIndiv, out string text, BattleBuffData.CheckIndividualitiesData checkIndividualities, BuffInterface selfIf) { }

	// RVA: 0x1D5FF44 Offset: 0x1D5FF44 VA: 0x1D5FF44
	public int getAdjustValue(int value, BuffList.ACTION act, int[] selfIndiv, int[] opIndiv, BattleBuffData.CheckIndividualitiesData checkIndividualities) { }

	// RVA: 0x1D60084 Offset: 0x1D60084 VA: 0x1D60084
	public float getActMag(BuffList.ACTION act, int[] selfIndiv, BattleBuffData.CheckIndividualitiesData checkIndividualities) { }

	// RVA: 0x1D600BC Offset: 0x1D600BC VA: 0x1D600BC
	public float getActMag(BuffList.ACTION act, int[] selfIndiv, int[] opIndiv, BattleBuffData.CheckIndividualitiesData checkIndividualities, BuffInterface buffIf) { }

	// RVA: 0x1D600F4 Offset: 0x1D600F4 VA: 0x1D600F4
	public float getActMag(BuffList.ACTION act, int[] selfIndiv, int[] opIndiv, out string missText, BattleBuffData.CheckIndividualitiesData checkIndividualities, BuffInterface buffIf) { }

	// RVA: 0x1D60118 Offset: 0x1D60118 VA: 0x1D60118
	public float getActMag(BuffList.ActInfo actInfo, int[] selfIndiv, int[] opIndiv, BattleBuffData.CheckIndividualitiesData checkIndividualities, BuffInterface buffIf) { }

	// RVA: 0x1D5F550 Offset: 0x1D5F550 VA: 0x1D5F550
	public int getCalculationParam(BuffList.ActInfo actInfo, int[] selfIndv, BuffInterface selfIf, int[] opIndv, out int upperParam, out bool actflg, out string missText, out int lowerParam, BattleBuffData.CheckIndividualitiesData checkIndividualities, BattleLogicBuff.BaseProcess buffProc) { }

	// RVA: 0x1D603F0 Offset: 0x1D603F0 VA: 0x1D603F0
	public bool CheckBuffRateTypeOrIndiv(BattleBuffData.BuffData buffData, out int value, out int maxBuffRate, int upperParam) { }

	// RVA: 0x1D60C04 Offset: 0x1D60C04 VA: 0x1D60C04
	public bool checkActBuff(BuffList.ACTION act, int[] selfIndiv, int[] opIndiv) { }

	// RVA: 0x1D60F10 Offset: 0x1D60F10 VA: 0x1D60F10
	public bool getActBuff(BuffList.ACTION act, int[] selfIndiv, int[] opIndiv, out int value) { }

	// RVA: 0x1D60FB8 Offset: 0x1D60FB8 VA: 0x1D60FB8
	public bool getTestActBuff(BuffList.ACTION act, int[] selfIndiv, int[] opIndiv, out int value) { }

	// RVA: 0x1D60CB4 Offset: 0x1D60CB4 VA: 0x1D60CB4
	public bool confirmationBuff(BuffList.ActInfo actInfo, int[] selfIndv, int[] opIndv, bool isRect, out int value) { }

	// RVA: 0x1D61060 Offset: 0x1D61060 VA: 0x1D61060
	public bool isTurnBuff(BuffList.ACTION act, int[] selfIndiv, bool checkCnt = False) { }

	// RVA: 0x1D61368 Offset: 0x1D61368 VA: 0x1D61368
	public int getMaxTurnBuff(BuffList.ACTION act, int[] selfIndiv, int lowTurn = 0) { }

	// RVA: 0x1D610F8 Offset: 0x1D610F8 VA: 0x1D610F8
	public int getMaxTurnBuffBase(BuffList.ACTION act, int[] selfIndiv, int[] opIndiv, bool checkCount, out bool actFlg, int lowTurn = 0) { }

	// RVA: 0x1D613FC Offset: 0x1D613FC VA: 0x1D613FC
	public int[] getSkillSealSelectTurnList(int[] selfIndiv, int[] opIndiv) { }

	// RVA: 0x1D616FC Offset: 0x1D616FC VA: 0x1D616FC
	public bool[] getSkillSealSelectListFromValue(int value) { }

	// RVA: 0x1D61848 Offset: 0x1D61848 VA: 0x1D61848
	public int[] getBuffParamList(BuffList.ACTION act) { }

	// RVA: 0x1D61AD8 Offset: 0x1D61AD8 VA: 0x1D61AD8
	public BattleBuffData.BuffData[] getBuffList(BuffList.ACTION act, int[] selfIndiv) { }

	// RVA: 0x1D61AE4 Offset: 0x1D61AE4 VA: 0x1D61AE4
	public BattleBuffData.BuffData[] getBuffList(BuffList.ACTION act, int[] selfIndiv, int[] opIndiv, bool isRec = True) { }

	// RVA: 0x1D61D80 Offset: 0x1D61D80 VA: 0x1D61D80
	public BattleBuffData.BuffData[] GetFixBuffArray(BuffList.ACTION act, int[] selfIndiv, int[] opIndiv, bool isRec = False) { }

	// RVA: 0x1D61E58 Offset: 0x1D61E58 VA: 0x1D61E58
	public BattleBuffData.BuffData GetFirstMatchCondBuff(BuffList.ACTION act, int[] selfIndiv, int[] opIndiv, bool isRec = True) { }

	// RVA: 0x1D60838 Offset: 0x1D60838 VA: 0x1D60838
	private bool CheckBuffType(int[] types, BattleBuffData.BuffData buffData) { }

	// RVA: 0x1D60160 Offset: 0x1D60160 VA: 0x1D60160
	private bool checkIndiviuality(BuffList.ActInfo actInfo, BattleBuffData.BuffData buffData, int[] selfIndv, int[] opIndv, out int plusMinus) { }

	// RVA: 0x1D609A8 Offset: 0x1D609A8 VA: 0x1D609A8
	public bool checkBuffTypeIndiviuality(int[] self, int[] target, BuffEntity buffEnt) { }

	// RVA: 0x1D620C0 Offset: 0x1D620C0 VA: 0x1D620C0
	public bool checkTypePlusMinus(BuffList.ActInfo actInfo, int inType, out int plusMinus) { }

	// RVA: 0x1D62244 Offset: 0x1D62244 VA: 0x1D62244
	public void InitializeShift(int actorId, int[] buffindivs) { }

	// RVA: 0x1D623D8 Offset: 0x1D623D8 VA: 0x1D623D8
	public bool checkShiftClear(BattleBuffData.BuffData buff, int[] list) { }

	// RVA: 0x1D6249C Offset: 0x1D6249C VA: 0x1D6249C
	public void SetCommandCodeBuffActiveFlg(long selectUserCCId) { }

	// RVA: 0x1D624B0 Offset: 0x1D624B0 VA: 0x1D624B0
	public void SetCommandCodeBuffActiveFlg(long selectUserCCId, out List<BattleBuffData.BuffData> activeBuffs, out List<BattleBuffData.BuffData> afterActiveBuffs, bool isRecharge = False, bool isAttackFuntionOnly = True) { }

	// RVA: 0x1D627B4 Offset: 0x1D627B4 VA: 0x1D627B4
	public void RechargeCommandCodeBuff(BattleBuffData.BuffData buff) { }

	// RVA: 0x1D629EC Offset: 0x1D629EC VA: 0x1D629EC
	public void ResetCommandCodeBuffActiveFlg() { }

	// RVA: 0x1D62A78 Offset: 0x1D62A78 VA: 0x1D62A78
	public List<BattleBuffData.BuffData> GetAllCommandCodeBuff() { }

	// RVA: 0x1D62B44 Offset: 0x1D62B44 VA: 0x1D62B44
	public int[] GetIgnoreAuraBuffIds() { }

	// RVA: 0x1D5B31C Offset: 0x1D5B31C VA: 0x1D5B31C
	private bool OnStateWithAuraConditionCheck(BattleBuffData.BuffData buff, BattleBuffData.BuffData.STATEENUM state) { }

	// RVA: 0x1D5BD68 Offset: 0x1D5BD68 VA: 0x1D5BD68
	private bool OffStateWithAuraConditionCheck(BattleBuffData.BuffData buff, BattleBuffData.BuffData.STATEENUM state) { }

	// RVA: 0x1D62C24 Offset: 0x1D62C24 VA: 0x1D62C24
	private void ApplyBuffData(BattleBuffData.BuffData buff, ref List<BattleBuffData.BuffData> dataList) { }

	// RVA: 0x1D62BE8 Offset: 0x1D62BE8 VA: 0x1D62BE8
	private bool IsCheckActState(BattleBuffData.BuffData.STATEENUM state) { }

	// RVA: 0x1D62D9C Offset: 0x1D62D9C VA: 0x1D62D9C
	public void RemoveSkillTypePassiveBuff(int[] skillTypes) { }

	// RVA: 0x1D62DB0 Offset: 0x1D62DB0 VA: 0x1D62DB0
	private void RemoveSkillTypeBuff(List<BattleBuffData.BuffData> buffList, int[] skillTypes) { }

	// RVA: 0x1D63064 Offset: 0x1D63064 VA: 0x1D63064
	public List<BattleBuffData.BuffData> GetSkillTypePassiveBuff(int[] skillTypes) { }

	// RVA: 0x1D62F70 Offset: 0x1D62F70 VA: 0x1D62F70
	private List<BattleBuffData.BuffData> GetSkillTypeBuff(List<BattleBuffData.BuffData> buffList, int[] skillTypes) { }

	// RVA: 0x1D63080 Offset: 0x1D63080 VA: 0x1D63080
	public void AddGetSkillTypeBuff(List<BattleBuffData.BuffData> addBuffList) { }

	// RVA: 0x1D63464 Offset: 0x1D63464 VA: 0x1D63464
	private void UpdateBuffAddOrder(int addPassiveMaxOrder) { }

	// RVA: 0x1D637CC Offset: 0x1D637CC VA: 0x1D637CC
	public void UpdateBaseAddOrder() { }

	// RVA: 0x1D5D5A4 Offset: 0x1D5D5A4 VA: 0x1D5D5A4
	public bool get_IsNoDamage() { }

	// RVA: 0x1D63988 Offset: 0x1D63988 VA: 0x1D63988
	public void set_IsNoDamage(bool value) { }

	// RVA: 0x1D63994 Offset: 0x1D63994 VA: 0x1D63994
	public List<BattleBuffData.BuffData> GetEffectBuffList() { }

	// RVA: 0x1D63BD0 Offset: 0x1D63BD0 VA: 0x1D63BD0
	public BattleBuffData.BuffData[] CheckAndGetFixedBuffArray(BattleBuffData.BuffData[] checkBuffArray) { }

	// RVA: 0x1D63CE0 Offset: 0x1D63CE0 VA: 0x1D63CE0
	public BattleBuffData.BuffData[] GetFixedBuffArray(BuffList.ACTION buffAction, int[] selfIndiv) { }

	// RVA: 0x1D63D10 Offset: 0x1D63D10 VA: 0x1D63D10
	public BattleBuffData.BuffData[] GetFixedBuffArray(BuffList.TYPE[] types, int[] targetIndividualities, BattleBuffData.BuffData[] checklist) { }

	// RVA: 0x1D63D38 Offset: 0x1D63D38 VA: 0x1D63D38
	public BattleBuffData.BuffData GetCommandCardTypeChangeBuff() { }

	// RVA: 0x1D63DF4 Offset: 0x1D63DF4 VA: 0x1D63DF4
	public int GetMotionChange() { }

	// RVA: 0x1D63FAC Offset: 0x1D63FAC VA: 0x1D63FAC
	public void DeleteDummyBuff() { }

	// RVA: 0x1D64124 Offset: 0x1D64124 VA: 0x1D64124
	public void UpdateForceNoField() { }

	// RVA: 0x1D64210 Offset: 0x1D64210 VA: 0x1D64210
	public BattleBuffData.BuffData[] GetCommandCardBuffArray(BattleCommandData commandData, bool isBeforeAttackFunction) { }

	// RVA: 0x1D64588 Offset: 0x1D64588 VA: 0x1D64588
	public void SetCommandCardBuffActive(BattleCommandData commandData, bool isCheckBuffSuccess) { }

	// RVA: 0x1D644F4 Offset: 0x1D644F4 VA: 0x1D644F4
	private bool CheckCommandCardBuffActive(BattleCommandData commandData, BattleBuffData.BuffData buff, bool isCheckBuffSuccess = True) { }

	// RVA: 0x1D647B8 Offset: 0x1D647B8 VA: 0x1D647B8
	public BattleBuffData.BuffData[] GetAllConnectedCommandCardBuff() { }

	// RVA: 0x1D60318 Offset: 0x1D60318 VA: 0x1D60318
	private int GetTotalParamAddValue(BattleBuffData.BuffData buffData, BattleData battleData, BattleBuffData.CheckIndividualitiesData checkIndividualities) { }

	// RVA: 0x1D649A0 Offset: 0x1D649A0 VA: 0x1D649A0
	private int GetParamAddCount(int[] checkIndividuality, int[] paramAddIndividuality) { }

	// RVA: 0x1D64AA0 Offset: 0x1D64AA0 VA: 0x1D64AA0
	public bool IsPermanentSleep() { }

	// RVA: 0x1D64CD4 Offset: 0x1D64CD4 VA: 0x1D64CD4
	public void SetNoActBuffWithoutExecuteServant(BattleServantData[] servantArray) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39B9C Offset: 0xD39B9C VA: 0xD39B9C
	// RVA: 0x1D64EC0 Offset: 0x1D64EC0 VA: 0x1D64EC0
	private static bool <getPassiveList>m__0(BattleBuffData.BuffData s) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39BAC Offset: 0xD39BAC VA: 0xD39BAC
	// RVA: 0x1D64F04 Offset: 0x1D64F04 VA: 0x1D64F04
	private static bool <getActiveList>m__1(BattleBuffData.BuffData s) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39BBC Offset: 0xD39BBC VA: 0xD39BBC
	// RVA: 0x1D64F48 Offset: 0x1D64F48 VA: 0x1D64F48
	private static bool <getAuraBuffList>m__2(BattleBuffData.BuffData s) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39BCC Offset: 0xD39BCC VA: 0xD39BCC
	// RVA: 0x1D64F8C Offset: 0x1D64F8C VA: 0x1D64F8C
	private bool <updateAuraBuffList>m__3(BattleBuffData.BuffData aura) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39BDC Offset: 0xD39BDC VA: 0xD39BDC
	// RVA: 0x1D65058 Offset: 0x1D65058 VA: 0x1D65058
	private static bool <turnProgressing>m__4(BattleBuffData.BuffData s) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39BEC Offset: 0xD39BEC VA: 0xD39BEC
	// RVA: 0x1D65088 Offset: 0x1D65088 VA: 0x1D65088
	private static bool <turnProgressing>m__5(BattleBuffData.BuffData s) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39BFC Offset: 0xD39BFC VA: 0xD39BFC
	// RVA: 0x1D650B8 Offset: 0x1D650B8 VA: 0x1D650B8
	private static bool <RemoveNoTurnBuff>m__6(BattleBuffData.BuffData s) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39C0C Offset: 0xD39C0C VA: 0xD39C0C
	// RVA: 0x1D650E8 Offset: 0x1D650E8 VA: 0x1D650E8
	private static bool <RemoveNoTurnBuff>m__7(BattleBuffData.BuffData s) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39C1C Offset: 0xD39C1C VA: 0xD39C1C
	// RVA: 0x1D65118 Offset: 0x1D65118 VA: 0x1D65118
	private static void <ResetNotTakeOverBuff>m__8(BattleBuffData.BuffData buff) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39C2C Offset: 0xD39C2C VA: 0xD39C2C
	// RVA: 0x1D65148 Offset: 0x1D65148 VA: 0x1D65148
	private static bool <syncLinkageBuffChangeParam>m__9(BattleBuffData.BuffData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39C3C Offset: 0xD39C3C VA: 0xD39C3C
	// RVA: 0x1D65178 Offset: 0x1D65178 VA: 0x1D65178
	private static bool <syncLinkageBuffChangeParam>m__A(BattleBuffData.BuffData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39C4C Offset: 0xD39C4C VA: 0xD39C4C
	// RVA: 0x1D651A8 Offset: 0x1D651A8 VA: 0x1D651A8
	private static bool <RemoveProgressingBuffList>m__B(BattleBuffData.BuffData _) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39C5C Offset: 0xD39C5C VA: 0xD39C5C
	// RVA: 0x1D651D8 Offset: 0x1D651D8 VA: 0x1D651D8
	private static bool <RemoveProgressingBuffList>m__C(BattleBuffData.BuffData _) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39C6C Offset: 0xD39C6C VA: 0xD39C6C
	// RVA: 0x1D65208 Offset: 0x1D65208 VA: 0x1D65208
	private void <AddForceBuff>m__D(BattleBuffData.BuffData buff) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39C7C Offset: 0xD39C7C VA: 0xD39C7C
	// RVA: 0x1D65210 Offset: 0x1D65210 VA: 0x1D65210
	private void <DelForceBuff>m__E(BattleBuffData.BuffData buff) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39C8C Offset: 0xD39C8C VA: 0xD39C8C
	// RVA: 0x1D65218 Offset: 0x1D65218 VA: 0x1D65218
	private static int <UpdateForceBuff>m__F(BattleBuffData.BuffData a, BattleBuffData.BuffData b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39C9C Offset: 0xD39C9C VA: 0xD39C9C
	// RVA: 0x1D65258 Offset: 0x1D65258 VA: 0x1D65258
	private static bool <checkFieldAlive>m__10(int value, int cond, bool isOrMore) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39CAC Offset: 0xD39CAC VA: 0xD39CAC
	// RVA: 0x1D65274 Offset: 0x1D65274 VA: 0x1D65274
	private static bool <GetGrantBuffTypeArray>m__11(BattleBuffData.BuffData buff) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39CBC Offset: 0xD39CBC VA: 0xD39CBC
	// RVA: 0x1D652A4 Offset: 0x1D652A4 VA: 0x1D652A4
	private static bool <GetGrantBuffTypeArray>m__12(BattleBuffData.BuffData buff) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39CCC Offset: 0xD39CCC VA: 0xD39CCC
	// RVA: 0x1D652D4 Offset: 0x1D652D4 VA: 0x1D652D4
	private void <setSaveData>m__13(BattleBuffData.BuffData b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39CDC Offset: 0xD39CDC VA: 0xD39CDC
	// RVA: 0x1D65394 Offset: 0x1D65394 VA: 0x1D65394
	private void <setSaveData>m__14(BattleBuffData.BuffData b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39CEC Offset: 0xD39CEC VA: 0xD39CEC
	// RVA: 0x1D65454 Offset: 0x1D65454 VA: 0x1D65454
	private bool <GetFixBuffArray>m__15(BattleBuffData.BuffData buff) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39CFC Offset: 0xD39CFC VA: 0xD39CFC
	// RVA: 0x1D65470 Offset: 0x1D65470 VA: 0x1D65470
	private static bool <GetAllCommandCodeBuff>m__16(BattleBuffData.BuffData buff) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39D0C Offset: 0xD39D0C VA: 0xD39D0C
	// RVA: 0x1D654A0 Offset: 0x1D654A0 VA: 0x1D654A0
	private static int <AddGetSkillTypeBuff>m__17(BattleBuffData.BuffData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39D1C Offset: 0xD39D1C VA: 0xD39D1C
	// RVA: 0x1D654C8 Offset: 0x1D654C8 VA: 0x1D654C8
	private static int <AddGetSkillTypeBuff>m__18(BattleBuffData.BuffData a, BattleBuffData.BuffData b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39D2C Offset: 0xD39D2C VA: 0xD39D2C
	// RVA: 0x1D65508 Offset: 0x1D65508 VA: 0x1D65508
	private static int <AddGetSkillTypeBuff>m__19(BattleBuffData.BuffData a, BattleBuffData.BuffData b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39D3C Offset: 0xD39D3C VA: 0xD39D3C
	// RVA: 0x1D65548 Offset: 0x1D65548 VA: 0x1D65548
	private static int <AddGetSkillTypeBuff>m__1A(BattleBuffData.BuffData a, BattleBuffData.BuffData b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39D4C Offset: 0xD39D4C VA: 0xD39D4C
	// RVA: 0x1D65588 Offset: 0x1D65588 VA: 0x1D65588
	private static int <UpdateBuffAddOrder>m__1B(BattleBuffData.BuffData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39D5C Offset: 0xD39D5C VA: 0xD39D5C
	// RVA: 0x1D655B0 Offset: 0x1D655B0 VA: 0x1D655B0
	private static int <UpdateBuffAddOrder>m__1C(BattleBuffData.BuffData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39D6C Offset: 0xD39D6C VA: 0xD39D6C
	// RVA: 0x1D655D8 Offset: 0x1D655D8 VA: 0x1D655D8
	private static int <UpdateBuffAddOrder>m__1D(BattleBuffData.BuffData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39D7C Offset: 0xD39D7C VA: 0xD39D7C
	// RVA: 0x1D65600 Offset: 0x1D65600 VA: 0x1D65600
	private static int <UpdateBaseAddOrder>m__1E(BattleBuffData.BuffData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39D8C Offset: 0xD39D8C VA: 0xD39D8C
	// RVA: 0x1D65628 Offset: 0x1D65628 VA: 0x1D65628
	private static int <UpdateBaseAddOrder>m__1F(BattleBuffData.BuffData x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39D9C Offset: 0xD39D9C VA: 0xD39D9C
	// RVA: 0x1D65650 Offset: 0x1D65650 VA: 0x1D65650
	private static bool <GetEffectBuffList>m__20(BattleBuffData.BuffData buff) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39DAC Offset: 0xD39DAC VA: 0xD39DAC
	// RVA: 0x1D65734 Offset: 0x1D65734 VA: 0x1D65734
	private static bool <GetEffectBuffList>m__21(BattleBuffData.BuffData buff) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39DBC Offset: 0xD39DBC VA: 0xD39DBC
	// RVA: 0x1D6575C Offset: 0x1D6575C VA: 0x1D6575C
	private static int <GetEffectBuffList>m__22(BattleBuffData.BuffData a, BattleBuffData.BuffData b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39DCC Offset: 0xD39DCC VA: 0xD39DCC
	// RVA: 0x1D6579C Offset: 0x1D6579C VA: 0x1D6579C
	private static void <UpdateForceNoField>m__23(BattleBuffData.BuffData buff) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39DDC Offset: 0xD39DDC VA: 0xD39DDC
	// RVA: 0x1D657EC Offset: 0x1D657EC VA: 0x1D657EC
	private static bool <GetAllConnectedCommandCardBuff>m__24(BattleBuffData.BuffData buff) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39DEC Offset: 0xD39DEC VA: 0xD39DEC
	// RVA: 0x1D65814 Offset: 0x1D65814 VA: 0x1D65814
	private static bool <GetAllConnectedCommandCardBuff>m__25(BattleBuffData.BuffData buff) { }
}

// Namespace: 
public class BattleBuffData.ShowBuffData // TypeDefIndex: 8771
{
	// Fields
	public int buffId; // 0x10
	public bool isPassive; // 0x14
	public bool isReady; // 0x15
	public bool isBoost; // 0x16
	public int turn; // 0x18
	public int count; // 0x1C
	public bool isFrame; // 0x20
	public bool isHideParam; // 0x21
	public int addOrder; // 0x24
	public bool isRemove; // 0x28

	// Methods

	// RVA: 0x1D66704 Offset: 0x1D66704 VA: 0x1D66704
	public void .ctor() { }

	// RVA: 0x1D5E66C Offset: 0x1D5E66C VA: 0x1D5E66C
	public void .ctor(BattleBuffData.BuffData buff) { }
}

// Namespace: 
public class BattleBuffData.FieldAliveCondData // TypeDefIndex: 8772
{
	// Fields
	[PackKeyAttribute] // RVA: 0xCCD594 Offset: 0xCCD594 VA: 0xCCD594
	public bool isEnemySide; // 0x10
	[PackKeyAttribute] // RVA: 0xCCD5CC Offset: 0xCCD5CC VA: 0xCCD5CC
	public bool isOrMore; // 0x11
	[PackKeyAttribute] // RVA: 0xCCD604 Offset: 0xCCD604 VA: 0xCCD604
	public int criteriaValue; // 0x14
	[PackKeyAttribute] // RVA: 0xCCD63C Offset: 0xCCD63C VA: 0xCCD63C
	public int[] indiv; // 0x18
	[PackKeyAttribute] // RVA: 0xCCD674 Offset: 0xCCD674 VA: 0xCCD674
	public bool isIncludeIgnoreIndiv; // 0x20

	// Methods

	// RVA: 0x1D666F4 Offset: 0x1D666F4 VA: 0x1D666F4
	public void .ctor() { }
}

// Namespace: 
public class BattleBuffData.RelationOverwriteData // TypeDefIndex: 8773
{
	// Fields
	[PackKeyAttribute] // RVA: 0xCCD6AC Offset: 0xCCD6AC VA: 0xCCD6AC
	public int id; // 0x10
	[PackKeyAttribute] // RVA: 0xCCD6E4 Offset: 0xCCD6E4 VA: 0xCCD6E4
	public int atkPriority; // 0x14
	[PackKeyAttribute] // RVA: 0xCCD71C Offset: 0xCCD71C VA: 0xCCD71C
	public int defPriority; // 0x18

	// Methods

	// RVA: 0x1D666FC Offset: 0x1D666FC VA: 0x1D666FC
	public void .ctor() { }

	// RVA: 0x1D66180 Offset: 0x1D66180 VA: 0x1D66180
	public int getPriority(bool isAttack) { }
}

// Namespace: 
public class BattleBuffData.SkillRankChangeData // TypeDefIndex: 8774
{
	// Fields
	private BattleBuffData buffData; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCCD754 Offset: 0xCCD754 VA: 0xCCD754
	[DebuggerBrowsableAttribute] // RVA: 0xCCD754 Offset: 0xCCD754 VA: 0xCCD754
	private int <RankUpCount>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCCD790 Offset: 0xCCD790 VA: 0xCCD790
	[DebuggerBrowsableAttribute] // RVA: 0xCCD790 Offset: 0xCCD790 VA: 0xCCD790
	private bool <IsAddRightAfter>k__BackingField; // 0x1C
	[CompilerGeneratedAttribute] // RVA: 0xCCD7CC Offset: 0xCCD7CC VA: 0xCCD7CC
	private static Func<BattleBuffData.BuffData, int> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCCD7DC Offset: 0xCCD7DC VA: 0xCCD7DC
	private static Func<BattleBuffData.BuffData, int> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCCD7EC Offset: 0xCCD7EC VA: 0xCCD7EC
	private static Predicate<BattleBuffData.BuffData> <>f__am$cache2; // 0x10

	// Properties
	public int RankUpCount { get; set; }
	public bool IsAddRightAfter { get; set; }

	// Methods

	// RVA: 0x1D563BC Offset: 0x1D563BC VA: 0x1D563BC
	public void .ctor(BattleBuffData buffData) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39DFC Offset: 0xD39DFC VA: 0xD39DFC
	// RVA: 0x1D6670C Offset: 0x1D6670C VA: 0x1D6670C
	private void set_RankUpCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39E0C Offset: 0xD39E0C VA: 0xD39E0C
	// RVA: 0x1D66720 Offset: 0x1D66720 VA: 0x1D66720
	public int get_RankUpCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xD39E1C Offset: 0xD39E1C VA: 0xD39E1C
	// RVA: 0x1D66714 Offset: 0x1D66714 VA: 0x1D66714
	private void set_IsAddRightAfter(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39E2C Offset: 0xD39E2C VA: 0xD39E2C
	// RVA: 0x1D66728 Offset: 0x1D66728 VA: 0x1D66728
	public bool get_IsAddRightAfter() { }

	// RVA: 0x1D5F2F8 Offset: 0x1D5F2F8 VA: 0x1D5F2F8
	public void Update() { }

	// RVA: 0x1D667C4 Offset: 0x1D667C4 VA: 0x1D667C4
	public int GetLogicRankUpCount() { }

	// RVA: 0x1D66730 Offset: 0x1D66730 VA: 0x1D66730
	public void RevertUnusedBuff(BattleBuffData.BuffData[] buffArray) { }

	// RVA: 0x1D668B0 Offset: 0x1D668B0 VA: 0x1D668B0
	public void UseBuff() { }

	// RVA: 0x1D669F0 Offset: 0x1D669F0 VA: 0x1D669F0
	public void UpdateAddRightAfter(bool flg) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39E3C Offset: 0xD39E3C VA: 0xD39E3C
	// RVA: 0x1D669FC Offset: 0x1D669FC VA: 0x1D669FC
	private static int <Update>m__0(BattleBuffData.BuffData buff) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39E4C Offset: 0xD39E4C VA: 0xD39E4C
	// RVA: 0x1D66A24 Offset: 0x1D66A24 VA: 0x1D66A24
	private static int <GetLogicRankUpCount>m__1(BattleBuffData.BuffData buff) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39E5C Offset: 0xD39E5C VA: 0xD39E5C
	// RVA: 0x1D66A4C Offset: 0x1D66A4C VA: 0x1D66A4C
	private static bool <UseBuff>m__2(BattleBuffData.BuffData buff) { }
}

// Namespace: 
public class BattleBuffData.CheckIndividualitiesData // TypeDefIndex: 8775
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCCD7FC Offset: 0xCCD7FC VA: 0xCCD7FC
	[DebuggerBrowsableAttribute] // RVA: 0xCCD7FC Offset: 0xCCD7FC VA: 0xCCD7FC
	private int[] <selfIndividuality>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCCD838 Offset: 0xCCD838 VA: 0xCCD838
	[DebuggerBrowsableAttribute] // RVA: 0xCCD838 Offset: 0xCCD838 VA: 0xCCD838
	private int[] <opponentIndividuality>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCCD874 Offset: 0xCCD874 VA: 0xCCD874
	[DebuggerBrowsableAttribute] // RVA: 0xCCD874 Offset: 0xCCD874 VA: 0xCCD874
	private int[] <selfIndividualityCanRelease>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCCD8B0 Offset: 0xCCD8B0 VA: 0xCCD8B0
	[DebuggerBrowsableAttribute] // RVA: 0xCCD8B0 Offset: 0xCCD8B0 VA: 0xCCD8B0
	private int[] <opponentIndividualityCanRemove>k__BackingField; // 0x28

	// Properties
	public int[] selfIndividuality { get; set; }
	public int[] opponentIndividuality { get; set; }
	public int[] selfIndividualityCanRelease { get; set; }
	public int[] opponentIndividualityCanRemove { get; set; }

	// Methods

	// RVA: 0x1D662F8 Offset: 0x1D662F8 VA: 0x1D662F8
	public void .ctor(BattleServantData self, BattleServantData opponent) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39E6C Offset: 0xD39E6C VA: 0xD39E6C
	// RVA: 0x1D64A90 Offset: 0x1D64A90 VA: 0x1D64A90
	public int[] get_selfIndividuality() { }

	[CompilerGeneratedAttribute] // RVA: 0xD39E7C Offset: 0xD39E7C VA: 0xD39E7C
	// RVA: 0x1D66444 Offset: 0x1D66444 VA: 0x1D66444
	private void set_selfIndividuality(int[] value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39E8C Offset: 0xD39E8C VA: 0xD39E8C
	// RVA: 0x1D64A98 Offset: 0x1D64A98 VA: 0x1D64A98
	public int[] get_opponentIndividuality() { }

	[CompilerGeneratedAttribute] // RVA: 0xD39E9C Offset: 0xD39E9C VA: 0xD39E9C
	// RVA: 0x1D6644C Offset: 0x1D6644C VA: 0x1D6644C
	private void set_opponentIndividuality(int[] value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39EAC Offset: 0xD39EAC VA: 0xD39EAC
	// RVA: 0x1D60150 Offset: 0x1D60150 VA: 0x1D60150
	public int[] get_selfIndividualityCanRelease() { }

	[CompilerGeneratedAttribute] // RVA: 0xD39EBC Offset: 0xD39EBC VA: 0xD39EBC
	// RVA: 0x1D66454 Offset: 0x1D66454 VA: 0x1D66454
	private void set_selfIndividualityCanRelease(int[] value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39ECC Offset: 0xD39ECC VA: 0xD39ECC
	// RVA: 0x1D60158 Offset: 0x1D60158 VA: 0x1D60158
	public int[] get_opponentIndividualityCanRemove() { }

	[CompilerGeneratedAttribute] // RVA: 0xD39EDC Offset: 0xD39EDC VA: 0xD39EDC
	// RVA: 0x1D6645C Offset: 0x1D6645C VA: 0x1D6645C
	private void set_opponentIndividualityCanRemove(int[] value) { }
}

// Namespace: 
public class BattleBuffData.BuffData // TypeDefIndex: 8776
{
	// Fields
	[PackKeyAttribute] // RVA: 0xCCD8EC Offset: 0xCCD8EC VA: 0xCCD8EC
	public int buffId; // 0x10
	[PackKeyAttribute] // RVA: 0xCCD924 Offset: 0xCCD924 VA: 0xCCD924
	public int turn; // 0x14
	[PackKeyAttribute] // RVA: 0xCCD95C Offset: 0xCCD95C VA: 0xCCD95C
	public int count; // 0x18
	[PackKeyAttribute] // RVA: 0xCCD994 Offset: 0xCCD994 VA: 0xCCD994
	public int param; // 0x1C
	[PackKeyAttribute] // RVA: 0xCCD9CC Offset: 0xCCD9CC VA: 0xCCD9CC
	public bool isUse; // 0x20
	[PackKeyAttribute] // RVA: 0xCCDA04 Offset: 0xCCDA04 VA: 0xCCDA04
	public bool passive; // 0x21
	[PackKeyAttribute] // RVA: 0xCCDA3C Offset: 0xCCDA3C VA: 0xCCDA3C
	public bool isAct; // 0x22
	[PackKeyAttribute] // RVA: 0xCCDA74 Offset: 0xCCDA74 VA: 0xCCDA74
	public bool isDecide; // 0x23
	[PackKeyAttribute] // RVA: 0xCCDAAC Offset: 0xCCDAAC VA: 0xCCDAAC
	public int[] vals; // 0x28
	[PackKeyAttribute] // RVA: 0xCCDAE4 Offset: 0xCCDAE4 VA: 0xCCDAE4
	public int buffRate; // 0x30
	[PackKeyAttribute] // RVA: 0xCCDB1C Offset: 0xCCDB1C VA: 0xCCDB1C
	public int paramAdd; // 0x34
	[PackKeyAttribute] // RVA: 0xCCDB54 Offset: 0xCCDB54 VA: 0xCCDB54
	public int paramMax; // 0x38
	[PackKeyAttribute] // RVA: 0xCCDB8C Offset: 0xCCDB8C VA: 0xCCDB8C
	public int onfiledUniqueId; // 0x3C
	[PackKeyAttribute] // RVA: 0xCCDBC4 Offset: 0xCCDBC4 VA: 0xCCDBC4
	public int auraEffectId; // 0x40
	[PackKeyAttribute] // RVA: 0xCCDBFC Offset: 0xCCDBFC VA: 0xCCDBFC
	public int actorId; // 0x44
	[PackKeyAttribute] // RVA: 0xCCDC34 Offset: 0xCCDC34 VA: 0xCCDC34
	public int ratioHpHigh; // 0x48
	[PackKeyAttribute] // RVA: 0xCCDC6C Offset: 0xCCDC6C VA: 0xCCDC6C
	public int ratioHpLow; // 0x4C
	[PackKeyAttribute] // RVA: 0xCCDCA4 Offset: 0xCCDCA4 VA: 0xCCDCA4
	public int ratioRangeHigh; // 0x50
