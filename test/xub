	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xCE5BA8 Offset: 0xCE5BA8 VA: 0xCE5BA8
	protected UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xCE5BB8 Offset: 0xCE5BB8 VA: 0xCE5BB8
	protected UICommonButton closeButton; // 0x68
	[SerializeField] // RVA: 0xCE5BC8 Offset: 0xCE5BC8 VA: 0xCE5BC8
	protected UICommonButton cancelButton; // 0x70
	[SerializeField] // RVA: 0xCE5BD8 Offset: 0xCE5BD8 VA: 0xCE5BD8
	protected UICommonButton decideButton; // 0x78
	[SerializeField] // RVA: 0xCE5BE8 Offset: 0xCE5BE8 VA: 0xCE5BE8
	protected UILabel closeLabel; // 0x80
	[SerializeField] // RVA: 0xCE5BF8 Offset: 0xCE5BF8 VA: 0xCE5BF8
	protected UILabel cancelLabel; // 0x88
	[SerializeField] // RVA: 0xCE5C08 Offset: 0xCE5C08 VA: 0xCE5C08
	protected UILabel decideLabel; // 0x90
	protected SupportSelectConfirmMenu.State state; // 0x98
	[CompilerGeneratedAttribute] // RVA: 0xCE5C18 Offset: 0xCE5C18 VA: 0xCE5C18
	[DebuggerBrowsableAttribute] // RVA: 0xCE5C18 Offset: 0xCE5C18 VA: 0xCE5C18
	private SupportSelectConfirmMenu.CallbackFunc callbackFunc; // 0xA0
	protected Action closeCallbackFunc; // 0xA8

	// Methods

	// RVA: 0x1DBE9C0 Offset: 0x1DBE9C0 VA: 0x1DBE9C0
	public void .ctor() { }

	// RVA: 0x1DBEA28 Offset: 0x1DBEA28 VA: 0x1DBEA28
	protected void add_callbackFunc(SupportSelectConfirmMenu.CallbackFunc value) { }

	// RVA: 0x1DBEB14 Offset: 0x1DBEB14 VA: 0x1DBEB14
	protected void remove_callbackFunc(SupportSelectConfirmMenu.CallbackFunc value) { }

	// RVA: 0x1DBEC00 Offset: 0x1DBEC00 VA: 0x1DBEC00
	public void Init() { }

	// RVA: 0x1DBED50 Offset: 0x1DBED50 VA: 0x1DBED50
	public void Open(SupportSelectConfirmMenu.Kind kind, SupportSelectConfirmMenu.CallbackFunc callback) { }

	// RVA: 0x1DBEDDC Offset: 0x1DBEDDC VA: 0x1DBEDDC
	public void Open(SupportSelectConfirmMenu.Kind kind, SupportSelectConfirmMenu.CallbackFunc callback, string class1, string class2) { }

	// RVA: 0x1DBF4CC Offset: 0x1DBF4CC VA: 0x1DBF4CC
	protected void EndOpen() { }

	// RVA: 0x1DBF4D8 Offset: 0x1DBF4D8 VA: 0x1DBF4D8
	public void Close() { }

	// RVA: 0x1DBF4E0 Offset: 0x1DBF4E0 VA: 0x1DBF4E0
	public void Close(Action callback) { }

	// RVA: 0x1DBF570 Offset: 0x1DBF570 VA: 0x1DBF570
	protected void EndClose() { }

	// RVA: 0x1DBF5AC Offset: 0x1DBF5AC VA: 0x1DBF5AC
	protected void Callback(bool result) { }

	// RVA: 0x1DBF7F8 Offset: 0x1DBF7F8 VA: 0x1DBF7F8
	public void OnClickClose() { }

	// RVA: 0x1DBF898 Offset: 0x1DBF898 VA: 0x1DBF898
	public void OnCancelClose() { }

	// RVA: 0x1DBF938 Offset: 0x1DBF938 VA: 0x1DBF938
	public void OnDecideClose() { }
}

// Namespace: 
public enum SupportSelectConfirmMenu.Kind // TypeDefIndex: 10772
{
	// Fields
	public int value__; // 0x0
	public const SupportSelectConfirmMenu.Kind NONE = 0;
	public const SupportSelectConfirmMenu.Kind NO_SERVANT = 1;
	public const SupportSelectConfirmMenu.Kind SERVANT_CLEAR = 2;
	public const SupportSelectConfirmMenu.Kind EQUIP_CLEAR = 3;
	public const SupportSelectConfirmMenu.Kind ALL_CLEAR = 4;
	public const SupportSelectConfirmMenu.Kind EQUIP_CHANGE = 5;
}

// Namespace: 
protected enum SupportSelectConfirmMenu.State // TypeDefIndex: 10773
{
	// Fields
	public int value__; // 0x0
	public const SupportSelectConfirmMenu.State INIT = 0;
	public const SupportSelectConfirmMenu.State OPEN = 1;
	public const SupportSelectConfirmMenu.State INPUT = 2;
	public const SupportSelectConfirmMenu.State SELECTED = 3;
	public const SupportSelectConfirmMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class SupportSelectConfirmMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10774
{
	// Methods

	// RVA: 0x1DBF9D8 Offset: 0x1DBF9D8 VA: 0x1DBF9D8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1DBF5CC Offset: 0x1DBF5CC VA: 0x1DBF5CC Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x1DBF9E8 Offset: 0x1DBF9E8 VA: 0x1DBF9E8 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x1DBFA78 Offset: 0x1DBFA78 VA: 0x1DBFA78 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SupportSelectCopyDeckSelectMenu : BaseDialog // TypeDefIndex: 10775
{
	// Fields
	public const int INVALID_DECK_ID = -1;
	[SerializeField] // RVA: 0xCE5C54 Offset: 0xCE5C54 VA: 0xCE5C54
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xCE5C64 Offset: 0xCE5C64 VA: 0xCE5C64
	private UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xCE5C74 Offset: 0xCE5C74 VA: 0xCE5C74
	private UILabel cancelButtonLabel; // 0x68
	[SerializeField] // RVA: 0xCE5C84 Offset: 0xCE5C84 VA: 0xCE5C84
	private SupportSelectDeckListViewManager deckListViewManager; // 0x70
	private SupportSelectCopyDeckSelectMenu.State currentState; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xCE5C94 Offset: 0xCE5C94 VA: 0xCE5C94
	[DebuggerBrowsableAttribute] // RVA: 0xCE5C94 Offset: 0xCE5C94 VA: 0xCE5C94
	private SupportSelectCopyDeckSelectMenu.OnSelectEvent onSelected; // 0x80

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1DBFA84 Offset: 0x1DBFA84 VA: 0x1DBFA84
	public void .ctor() { }

	// RVA: 0x1DBFAF4 Offset: 0x1DBFAF4 VA: 0x1DBFAF4
	private void add_onSelected(SupportSelectCopyDeckSelectMenu.OnSelectEvent value) { }

	// RVA: 0x1DBFBE0 Offset: 0x1DBFBE0 VA: 0x1DBFBE0
	private void remove_onSelected(SupportSelectCopyDeckSelectMenu.OnSelectEvent value) { }

	// RVA: 0x1DBFCCC Offset: 0x1DBFCCC VA: 0x1DBFCCC
	public void Open(SupportServantData[] targetDeckList, int[] sameKindIdxList, int[] notCopyIdxList, SupportSelectCopyDeckSelectMenu.OnSelectEvent onSelected) { }

	// RVA: 0x1DC0050 Offset: 0x1DC0050 VA: 0x1DC0050
	private void OnFinishedOpen() { }

	// RVA: 0x1DC02A4 Offset: 0x1DC02A4 VA: 0x1DC02A4
	public void Close() { }

	// RVA: 0x1DC0324 Offset: 0x1DC0324 VA: 0x1DC0324
	private void OnFinishedClose() { }

	// RVA: 0x1DC0358 Offset: 0x1DC0358 VA: 0x1DC0358
	public void OnSelectedDeck(int deckId) { }

	// RVA: 0x1DC0628 Offset: 0x1DC0628 VA: 0x1DC0628
	public void OnClickCancel() { }

	// RVA: 0x1DC06BC Offset: 0x1DC06BC VA: 0x1DC06BC Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
private enum SupportSelectCopyDeckSelectMenu.State // TypeDefIndex: 10776
{
	// Fields
	public int value__; // 0x0
	public const SupportSelectCopyDeckSelectMenu.State OPEN = 0;
	public const SupportSelectCopyDeckSelectMenu.State INPUT = 1;
	public const SupportSelectCopyDeckSelectMenu.State CLOSE = 2;
}

// Namespace: 
public sealed class SupportSelectCopyDeckSelectMenu.OnSelectEvent : MulticastDelegate // TypeDefIndex: 10777
{
	// Methods

	// RVA: 0x1DC0704 Offset: 0x1DC0704 VA: 0x1DC0704
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1DC03FC Offset: 0x1DC03FC VA: 0x1DC03FC Slot: 11
	public virtual void Invoke(int selectDeckId) { }

	// RVA: 0x1DC0714 Offset: 0x1DC0714 VA: 0x1DC0714 Slot: 12
	public virtual IAsyncResult BeginInvoke(int selectDeckId, AsyncCallback callback, object object) { }

	// RVA: 0x1DC07A0 Offset: 0x1DC07A0 VA: 0x1DC07A0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SupportSelectDeckListViewItem : ListViewItem // TypeDefIndex: 10778
{
	// Fields
	private SupportServantData supportData; // 0x70
	private bool isSameKind; // 0x78
	private bool isPossibleSelect; // 0x79

	// Properties
	public bool IsSameKind { get; }
	public bool IsPossibleSelect { get; }

	// Methods

	// RVA: 0x1DC07AC Offset: 0x1DC07AC VA: 0x1DC07AC
	public void .ctor(SupportServantData data, int index, bool isSameKind, bool isPossibleCopy) { }

	// RVA: 0x1DC07FC Offset: 0x1DC07FC VA: 0x1DC07FC
	public SupportServantData GetSupportData() { }

	// RVA: 0x1DC0804 Offset: 0x1DC0804 VA: 0x1DC0804
	public bool get_IsSameKind() { }

	// RVA: 0x1DC080C Offset: 0x1DC080C VA: 0x1DC080C
	public bool get_IsPossibleSelect() { }
}

// Namespace: 
public class SupportSelectDeckListViewItemDraw : MonoBehaviour // TypeDefIndex: 10779
{
	// Fields
	[SerializeField] // RVA: 0xCE5CD0 Offset: 0xCE5CD0 VA: 0xCE5CD0
	private UISprite baseSprite; // 0x18
	[SerializeField] // RVA: 0xCE5CE0 Offset: 0xCE5CE0 VA: 0xCE5CE0
	private UISprite maskSprite; // 0x20
	[SerializeField] // RVA: 0xCE5CF0 Offset: 0xCE5CF0 VA: 0xCE5CF0
	private UILabel maskMessageLabel; // 0x28
	[SerializeField] // RVA: 0xCE5D00 Offset: 0xCE5D00 VA: 0xCE5D00
	private UILabel supportNumberLabel; // 0x30
	[SerializeField] // RVA: 0xCE5D10 Offset: 0xCE5D10 VA: 0xCE5D10
	private UILabel deckNameLabel; // 0x38
	[SerializeField] // RVA: 0xCE5D20 Offset: 0xCE5D20 VA: 0xCE5D20
	private SupportSelectDeckListViewItemDraw.ClassInfo[] memberObjectList; // 0x40

	// Methods

	// RVA: 0x1DC0814 Offset: 0x1DC0814 VA: 0x1DC0814
	public void .ctor() { }

	// RVA: 0x1DBD16C Offset: 0x1DBD16C VA: 0x1DBD16C
	public void SetSupportData(SupportServantData data, bool isSameKind = False, bool isPossibleSelect = True) { }
}

// Namespace: 
[Serializable]
private class SupportSelectDeckListViewItemDraw.ClassInfo // TypeDefIndex: 10780
{
	// Fields
	public UISprite classIconSprite; // 0x10
	public ServantFaceIconComponent servantFaceIcon; // 0x18
	public UISprite pushSprite; // 0x20

	// Methods

	// RVA: 0x1DC089C Offset: 0x1DC089C VA: 0x1DC089C
	public void .ctor() { }
}

// Namespace: 
public class SupportSelectDeckListViewManager : ListViewManager // TypeDefIndex: 10781
{
	// Fields
	private SupportSelectDeckListViewManager.InitMode currentMode; // 0x138
	private SupportSelectDeckListViewObject.OnSelectEvent onSelectDeck; // 0x140

	// Methods

	// RVA: 0x1DC08A4 Offset: 0x1DC08A4 VA: 0x1DC08A4
	public void .ctor() { }

	// RVA: 0x1DBFEC0 Offset: 0x1DBFEC0 VA: 0x1DBFEC0
	public void CreateList(SupportServantData[] deckDataList, int[] sameKindIdxList, int[] notCopyIdxList) { }

	// RVA: 0x1DC0048 Offset: 0x1DC0048 VA: 0x1DC0048
	public void SetMode(SupportSelectDeckListViewManager.InitMode mode) { }

	// RVA: 0x1DC00F8 Offset: 0x1DC00F8 VA: 0x1DC00F8
	public void SetMode(SupportSelectDeckListViewManager.InitMode mode, SupportSelectDeckListViewObject.OnSelectEvent onSelectDeck) { }

	// RVA: 0x1DC08AC Offset: 0x1DC08AC VA: 0x1DC08AC
	private List<SupportSelectDeckListViewObject> GetObjectList() { }

	// RVA: 0x1DC0A90 Offset: 0x1DC0A90 VA: 0x1DC0A90 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1DC0CE4 Offset: 0x1DC0CE4 VA: 0x1DC0CE4
	protected void OnClickListView(ListViewObject obj) { }
}

// Namespace: 
public enum SupportSelectDeckListViewManager.InitMode // TypeDefIndex: 10782
{
	// Fields
	public int value__; // 0x0
	public const SupportSelectDeckListViewManager.InitMode NONE = 0;
	public const SupportSelectDeckListViewManager.InitMode VALID = 1;
	public const SupportSelectDeckListViewManager.InitMode INPUT = 2;
}

// Namespace: 
public class SupportSelectDeckListViewObject : ListViewObject // TypeDefIndex: 10783
{
	// Fields
	private SupportSelectDeckListViewItemDraw itemDraw; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xCE5D30 Offset: 0xCE5D30 VA: 0xCE5D30
	[DebuggerBrowsableAttribute] // RVA: 0xCE5D30 Offset: 0xCE5D30 VA: 0xCE5D30
	private SupportSelectDeckListViewObject.OnSelectEvent onSelected; // 0x78

	// Methods

	// RVA: 0x1DC0CE8 Offset: 0x1DC0CE8 VA: 0x1DC0CE8
	public void .ctor() { }

	// RVA: 0x1DC0D50 Offset: 0x1DC0D50 VA: 0x1DC0D50
	private void add_onSelected(SupportSelectDeckListViewObject.OnSelectEvent value) { }

	// RVA: 0x1DC0E3C Offset: 0x1DC0E3C VA: 0x1DC0E3C
	private void remove_onSelected(SupportSelectDeckListViewObject.OnSelectEvent value) { }

	// RVA: 0x1DC0F28 Offset: 0x1DC0F28 VA: 0x1DC0F28
	protected void Awake() { }

	// RVA: 0x1DC0BB0 Offset: 0x1DC0BB0 VA: 0x1DC0BB0
	public void Init() { }

	// RVA: 0x1DC0F9C Offset: 0x1DC0F9C VA: 0x1DC0F9C
	public void SetMode(SupportSelectDeckListViewManager.InitMode mode) { }

	// RVA: 0x1DC0A78 Offset: 0x1DC0A78 VA: 0x1DC0A78
	public void SetMode(SupportSelectDeckListViewManager.InitMode mode, SupportSelectDeckListViewObject.OnSelectEvent onSelected) { }

	// RVA: 0x1DC0FB4 Offset: 0x1DC0FB4 VA: 0x1DC0FB4
	public void OnSelected() { }
}

// Namespace: 
public sealed class SupportSelectDeckListViewObject.OnSelectEvent : MulticastDelegate // TypeDefIndex: 10784
{
	// Methods

	// RVA: 0x1DC00E8 Offset: 0x1DC00E8 VA: 0x1DC00E8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1DC109C Offset: 0x1DC109C VA: 0x1DC109C Slot: 11
	public virtual void Invoke(int deckId) { }

	// RVA: 0x1DC12C8 Offset: 0x1DC12C8 VA: 0x1DC12C8 Slot: 12
	public virtual IAsyncResult BeginInvoke(int deckId, AsyncCallback callback, object object) { }

	// RVA: 0x1DC1354 Offset: 0x1DC1354 VA: 0x1DC1354 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SupportSelectEditMenu : BaseDialog // TypeDefIndex: 10785
{
	// Fields
	[SerializeField] // RVA: 0xCE5D6C Offset: 0xCE5D6C VA: 0xCE5D6C
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xCE5D7C Offset: 0xCE5D7C VA: 0xCE5D7C
	private UILabel supportNameLabel; // 0x60
	[SerializeField] // RVA: 0xCE5D8C Offset: 0xCE5D8C VA: 0xCE5D8C
	private UILabel messageLabel; // 0x68
	[SerializeField] // RVA: 0xCE5D9C Offset: 0xCE5D9C VA: 0xCE5D9C
	private UICommonButton copyButton; // 0x70
	[SerializeField] // RVA: 0xCE5DAC Offset: 0xCE5DAC VA: 0xCE5DAC
	private UICommonButton removeAllButton; // 0x78
	[SerializeField] // RVA: 0xCE5DBC Offset: 0xCE5DBC VA: 0xCE5DBC
	private UICommonButton initAllButton; // 0x80
	[SerializeField] // RVA: 0xCE5DCC Offset: 0xCE5DCC VA: 0xCE5DCC
	private UICommonButton removeEquipButton; // 0x88
	[SerializeField] // RVA: 0xCE5DDC Offset: 0xCE5DDC VA: 0xCE5DDC
	private UICommonButton changeNameButton; // 0x90
	[SerializeField] // RVA: 0xCE5DEC Offset: 0xCE5DEC VA: 0xCE5DEC
	private UICommonButton cancelButton; // 0x98
	private SupportSelectEditMenu.State currentState; // 0xA0
	private SupportSelectEditMenu.OnClickButtonEvent onClickButton; // 0xA8

	// Properties
	private bool IsEnableInput { get; }
	protected override GameObject closeBtnObject { get; }

	// Methods

	// RVA: 0x1DC1360 Offset: 0x1DC1360 VA: 0x1DC1360
	public void .ctor() { }

	// RVA: 0x1DC13D0 Offset: 0x1DC13D0 VA: 0x1DC13D0
	private bool get_IsEnableInput() { }

	// RVA: 0x1DC13E0 Offset: 0x1DC13E0 VA: 0x1DC13E0
	public void Open(SupportServantData deckData, bool isEditting, SupportSelectEditMenu.OnClickButtonEvent onClickButton) { }

	// RVA: 0x1DC18B0 Offset: 0x1DC18B0 VA: 0x1DC18B0
	private void OnFinishedOpen() { }

	// RVA: 0x1DC18BC Offset: 0x1DC18BC VA: 0x1DC18BC
	public void Close() { }

	// RVA: 0x1DC193C Offset: 0x1DC193C VA: 0x1DC193C
	private void OnFinishedClose() { }

	// RVA: 0x1DC17B0 Offset: 0x1DC17B0 VA: 0x1DC17B0
	private void SetButtonText(UICommonButton target, string localizationKey) { }

	// RVA: 0x1DC1944 Offset: 0x1DC1944 VA: 0x1DC1944
	public void OnClickCopy() { }

	// RVA: 0x1DC1C04 Offset: 0x1DC1C04 VA: 0x1DC1C04
	public void OnClickRemoveAll() { }

	// RVA: 0x1DC1C98 Offset: 0x1DC1C98 VA: 0x1DC1C98
	public void OnClickInitAll() { }

	// RVA: 0x1DC1D2C Offset: 0x1DC1D2C VA: 0x1DC1D2C
	public void OnClickRemoveEquip() { }

	// RVA: 0x1DC1DC0 Offset: 0x1DC1DC0 VA: 0x1DC1DC0
	public void OnClickChangeName() { }

	// RVA: 0x1DC1E54 Offset: 0x1DC1E54 VA: 0x1DC1E54
	public void OnClickCancel() { }

	// RVA: 0x1DC1EDC Offset: 0x1DC1EDC VA: 0x1DC1EDC Slot: 4
	protected override GameObject get_closeBtnObject() { }
}

// Namespace: 
public enum SupportSelectEditMenu.ResultKind // TypeDefIndex: 10786
{
	// Fields
	public int value__; // 0x0
	public const SupportSelectEditMenu.ResultKind COPY = 0;
	public const SupportSelectEditMenu.ResultKind REMOVE_ALL = 1;
	public const SupportSelectEditMenu.ResultKind INIT_ALL = 2;
	public const SupportSelectEditMenu.ResultKind REMOVE_EQUIP = 3;
	public const SupportSelectEditMenu.ResultKind CHANGE_NAME = 4;
}

// Namespace: 
private enum SupportSelectEditMenu.State // TypeDefIndex: 10787
{
	// Fields
	public int value__; // 0x0
	public const SupportSelectEditMenu.State OPEN = 0;
	public const SupportSelectEditMenu.State INPUT = 1;
	public const SupportSelectEditMenu.State CLOSE = 2;
}

// Namespace: 
public sealed class SupportSelectEditMenu.OnClickButtonEvent : MulticastDelegate // TypeDefIndex: 10788
{
	// Methods

	// RVA: 0x1DC1F7C Offset: 0x1DC1F7C VA: 0x1DC1F7C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1DC19D8 Offset: 0x1DC19D8 VA: 0x1DC19D8 Slot: 11
	public virtual void Invoke(SupportSelectEditMenu.ResultKind result) { }

	// RVA: 0x1DC1F8C Offset: 0x1DC1F8C VA: 0x1DC1F8C Slot: 12
	public virtual IAsyncResult BeginInvoke(SupportSelectEditMenu.ResultKind result, AsyncCallback callback, object object) { }

	// RVA: 0x1DC2018 Offset: 0x1DC2018 VA: 0x1DC2018 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SupportSelectItemDraw : MonoBehaviour // TypeDefIndex: 10789
{
	// Fields
	[SerializeField] // RVA: 0xCE5DFC Offset: 0xCE5DFC VA: 0xCE5DFC
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xCE5E0C Offset: 0xCE5E0C VA: 0xCE5E0C
	protected UISprite baseSprite; // 0x20
	[SerializeField] // RVA: 0xCE5E1C Offset: 0xCE5E1C VA: 0xCE5E1C
	protected UISprite base2Sprite; // 0x28
	[SerializeField] // RVA: 0xCE5E2C Offset: 0xCE5E2C VA: 0xCE5E2C
	protected UINarrowFigureTexture servantNarrowTexture; // 0x30
	[SerializeField] // RVA: 0xCE5E3C Offset: 0xCE5E3C VA: 0xCE5E3C
	protected ServantClassIconComponent servantClassIcon; // 0x38
	[SerializeField] // RVA: 0xCE5E4C Offset: 0xCE5E4C VA: 0xCE5E4C
	protected UILabel levelLabel; // 0x40
	[SerializeField] // RVA: 0xCE5E5C Offset: 0xCE5E5C VA: 0xCE5E5C
	protected UISprite raritySprite; // 0x48
	[SerializeField] // RVA: 0xCE5E6C Offset: 0xCE5E6C VA: 0xCE5E6C
	protected UILabel hpLabel; // 0x50
	[SerializeField] // RVA: 0xCE5E7C Offset: 0xCE5E7C VA: 0xCE5E7C
	protected UILabel attackLabel; // 0x58
	[SerializeField] // RVA: 0xCE5E8C Offset: 0xCE5E8C VA: 0xCE5E8C
	protected UILabel costLabel; // 0x60
	[SerializeField] // RVA: 0xCE5E9C Offset: 0xCE5E9C VA: 0xCE5E9C
	protected UISprite noneEquipSprite; // 0x68
	[SerializeField] // RVA: 0xCE5EAC Offset: 0xCE5EAC VA: 0xCE5EAC
	protected UIMeshSprite equipSprite; // 0x70
	[SerializeField] // RVA: 0xCE5EBC Offset: 0xCE5EBC VA: 0xCE5EBC
	protected UISprite backClassIcon; // 0x78
	[SerializeField] // RVA: 0xCE5ECC Offset: 0xCE5ECC VA: 0xCE5ECC
	protected UISprite equipLimitCountSprite; // 0x80
	[SerializeField] // RVA: 0xCE5EDC Offset: 0xCE5EDC VA: 0xCE5EDC
	protected ShiningIconComponent bounusIcon; // 0x88
	[SerializeField] // RVA: 0xCE5EEC Offset: 0xCE5EEC VA: 0xCE5EEC
	protected EventUpValIconComponent eventUpValIcon; // 0x90
	[SerializeField] // RVA: 0xCE5EFC Offset: 0xCE5EFC VA: 0xCE5EFC
	protected GameObject dragSwapGuideObj; // 0x98
	[SerializeField] // RVA: 0xCE5F0C Offset: 0xCE5F0C VA: 0xCE5F0C
	protected UIWidget equipRootObj; // 0xA0
	[SerializeField] // RVA: 0xCE5F1C Offset: 0xCE5F1C VA: 0xCE5F1C
	protected UISprite restrictionMaskSprite; // 0xA8
	[SerializeField] // RVA: 0xCE5F2C Offset: 0xCE5F2C VA: 0xCE5F2C
	protected UILabel restrictionMaskMessageText; // 0xB0
	[SerializeField] // RVA: 0xCE5F3C Offset: 0xCE5F3C VA: 0xCE5F3C
	protected GameObject restrictionWarningBase; // 0xB8
	[SerializeField] // RVA: 0xCE5F4C Offset: 0xCE5F4C VA: 0xCE5F4C
	protected FlashingIconComponent restrictionWarningIcon; // 0xC0
	[SerializeField] // RVA: 0xCE5F5C Offset: 0xCE5F5C VA: 0xCE5F5C
	protected UILabel restrictionWarningMessageLabel; // 0xC8
	[SerializeField] // RVA: 0xCE5F6C Offset: 0xCE5F6C VA: 0xCE5F6C
	protected UISprite sortieMaskSprite; // 0xD0
	[SerializeField] // RVA: 0xCE5F7C Offset: 0xCE5F7C VA: 0xCE5F7C
	protected SkillListTreasureDeviceComponent skillListTreasureDevice; // 0xD8
	[SerializeField] // RVA: 0xCE5F8C Offset: 0xCE5F8C VA: 0xCE5F8C
	protected ServantCommandCardListComponent svtCommandCardList; // 0xE0
	[SerializeField] // RVA: 0xCE5F9C Offset: 0xCE5F9C VA: 0xCE5F9C
	protected AppendSkillListComponent appendSkillList; // 0xE8
	[SerializeField] // RVA: 0xCE5FAC Offset: 0xCE5FAC VA: 0xCE5FAC
	protected SwitchUIWidgetComponent switchSkillInfo; // 0xF0
	[SerializeField] // RVA: 0xCE5FBC Offset: 0xCE5FBC VA: 0xCE5FBC
	protected UIWidget skillInfoUiWidget; // 0xF8
	[SerializeField] // RVA: 0xCE5FCC Offset: 0xCE5FCC VA: 0xCE5FCC
	protected UIWidget appendSkillInfoUiWidget; // 0x100
	[SerializeField] // RVA: 0xCE5FDC Offset: 0xCE5FDC VA: 0xCE5FDC
	protected UILabel friendPointBonus; // 0x108
	[SerializeField] // RVA: 0xCE5FEC Offset: 0xCE5FEC VA: 0xCE5FEC
	protected GameObject friendPointBonusBase; // 0x110
	[SerializeField] // RVA: 0xCE5FFC Offset: 0xCE5FFC VA: 0xCE5FFC
	protected UISprite friendPointBonusIcon; // 0x118
	[SerializeField] // RVA: 0xCE600C Offset: 0xCE600C VA: 0xCE600C
	protected UISprite pushSprite; // 0x120
	private static readonly string[] backClassIconFileList; // 0x0
	protected Vector3 baseRarityPosition; // 0x128
	protected int restrictionMaskMessageWidth; // 0x134
	protected int restrictionWarningMessageWidth; // 0x138
	protected Vector3 restrictionWarningCenter; // 0x13C
	protected UIAtlas baseDefaultUIAtlas; // 0x148
	protected UIAtlas base2DefaultUIAtlas; // 0x150
	private List<UIWidget> switchSkillUIList; // 0x158

	// Methods

	// RVA: 0x1DC2024 Offset: 0x1DC2024 VA: 0x1DC2024
	public void .ctor() { }

	// RVA: 0x1DC202C Offset: 0x1DC202C VA: 0x1DC202C
	protected void Awake() { }

	// RVA: 0x1DC2454 Offset: 0x1DC2454 VA: 0x1DC2454
	public void ClearItem() { }

	// RVA: 0x1DC27BC Offset: 0x1DC27BC VA: 0x1DC27BC
	public void SetItem(SupportServantData supportServantData, int classPos, EventCampaignEntity[] eventFriendPoints, SupportSelectItemDraw.DispMode mode) { }

	// RVA: 0x1DC25F4 Offset: 0x1DC25F4 VA: 0x1DC25F4
	protected void ClearMessage() { }

	// RVA: 0x1DC53F0 Offset: 0x1DC53F0 VA: 0x1DC53F0
	protected void SetMaskMessage(string message, bool isScale = False) { }

	// RVA: 0x1DC56BC Offset: 0x1DC56BC VA: 0x1DC56BC
	protected void SetWarningMessage(string message, bool isScale = False) { }

	// RVA: 0x1DC23A4 Offset: 0x1DC23A4 VA: 0x1DC23A4
	public void SetActiveDragSwapGuide(bool flag) { }

	// RVA: 0x1DC5A10 Offset: 0x1DC5A10 VA: 0x1DC5A10
	public void SetEquipAlpha(float alpha) { }

	// RVA: 0x1DC5AC4 Offset: 0x1DC5AC4 VA: 0x1DC5AC4
	public void ActivateEquipOnly() { }

	// RVA: 0x1DC5E58 Offset: 0x1DC5E58 VA: 0x1DC5E58
	private static void .cctor() { }
}

// Namespace: 
public enum SupportSelectItemDraw.DispMode // TypeDefIndex: 10790
{
	// Fields
	public int value__; // 0x0
	public const SupportSelectItemDraw.DispMode INVISIBLE = 0;
	public const SupportSelectItemDraw.DispMode INVALID = 1;
	public const SupportSelectItemDraw.DispMode VALID = 2;
	public const SupportSelectItemDraw.DispMode INPUT = 3;
	public const SupportSelectItemDraw.DispMode DRAG_INVISIBLE = 4;
}

// Namespace: 
public class SupportSelectItemDrawDrop : UIDragDropListViewItem // TypeDefIndex: 10791
{
	// Fields
	protected static readonly float ACTION_TIME; // 0x0
	[SerializeField] // RVA: 0xCE601C Offset: 0xCE601C VA: 0xCE601C
	protected ListViewObject listViewObject; // 0x78
	private SupportSelectListViewDropObject dropObject; // 0x80
	private bool isDrag; // 0x88
	private GameObject surface; // 0x90

	// Methods

	// RVA: 0x1DC61B8 Offset: 0x1DC61B8 VA: 0x1DC61B8
	public void .ctor() { }

	// RVA: 0x1DC61C0 Offset: 0x1DC61C0 VA: 0x1DC61C0 Slot: 5
	public override void SetBaseTransform() { }

	// RVA: 0x1DC62B8 Offset: 0x1DC62B8 VA: 0x1DC62B8
	private SupportSelectListViewDropObject GetListViewObj() { }

	// RVA: 0x1DC633C Offset: 0x1DC633C VA: 0x1DC633C
	private SupportSelectListViewManager GetListViewManager() { }

	// RVA: 0x1DC63DC Offset: 0x1DC63DC VA: 0x1DC63DC
	private void Update() { }

	// RVA: 0x1DC6474 Offset: 0x1DC6474 VA: 0x1DC6474 Slot: 6
	protected override void OnDragDropStart() { }

	// RVA: 0x1DC65B8 Offset: 0x1DC65B8 VA: 0x1DC65B8 Slot: 8
	protected override void OnDragDropRelease(GameObject surface) { }

	// RVA: 0x1DC670C Offset: 0x1DC670C VA: 0x1DC670C
	private bool IsSameObject(SupportSelectListViewDropObject obj) { }

	// RVA: 0x1DC6850 Offset: 0x1DC6850 VA: 0x1DC6850
	protected void DoSwapMove(SupportSelectListViewDropObject target) { }

	// RVA: 0x1DC6D60 Offset: 0x1DC6D60 VA: 0x1DC6D60
	protected void OnFinishedSwapMove() { }

	// RVA: 0x1DC6AD8 Offset: 0x1DC6AD8 VA: 0x1DC6AD8
	protected void DoReturnMove() { }

	// RVA: 0x1DC7CBC Offset: 0x1DC7CBC VA: 0x1DC7CBC
	protected void OnFinishedReturnMove() { }

	// RVA: 0x1DC7C5C Offset: 0x1DC7C5C VA: 0x1DC7C5C
	protected void OnFinishDragAndDrop() { }

	// RVA: 0x1DC7D20 Offset: 0x1DC7D20 VA: 0x1DC7D20
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F26C Offset: 0xD3F26C VA: 0xD3F26C
	[DebuggerHiddenAttribute] // RVA: 0xD3F26C Offset: 0xD3F26C VA: 0xD3F26C
	// RVA: 0x1DC7D78 Offset: 0x1DC7D78 VA: 0x1DC7D78
	private void <OnDragDropRelease>__BaseCallProxy0(GameObject surface) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB16E0 Offset: 0xCB16E0 VA: 0xCB16E0
private sealed class SupportSelectItemDrawDrop.<OnFinishedSwapMove>c__AnonStorey0 // TypeDefIndex: 10792
{
	// Fields
	internal SupportSelectListViewDropObject from; // 0x10
	internal SupportSelectListViewDropObject to; // 0x18
	internal SupportSelectItemDrawDrop $this; // 0x20

	// Methods

	// RVA: 0x1DC7B70 Offset: 0x1DC7B70 VA: 0x1DC7B70
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB16F0 Offset: 0xCB16F0 VA: 0xCB16F0
private sealed class SupportSelectItemDrawDrop.<OnFinishedSwapMove>c__AnonStorey1 // TypeDefIndex: 10793
{
	// Fields
	internal SupportSelectListViewManager manager; // 0x10
	internal SupportSelectObject fromMember; // 0x18
	internal SupportSelectObject toMember; // 0x20
	internal SupportSelectItemDrawDrop.<OnFinishedSwapMove>c__AnonStorey0 <>f__ref$0; // 0x28

	// Methods

	// RVA: 0x1DC7B78 Offset: 0x1DC7B78 VA: 0x1DC7B78
	public void .ctor() { }

	// RVA: 0x1DC7D80 Offset: 0x1DC7D80 VA: 0x1DC7D80
	internal void <>m__0(bool isDecide) { }
}

// Namespace: 
public class SupportSelectListViewDropObject : ListViewDropObject // TypeDefIndex: 10794
{
	// Fields
	[SerializeField] // RVA: 0xCE602C Offset: 0xCE602C VA: 0xCE602C
	private SupportSelectObject memberObject; // 0x70
	private GameObject dragObject; // 0x78
	private bool isEquipPress; // 0x80

	// Methods

	// RVA: 0x1DC7FA0 Offset: 0x1DC7FA0 VA: 0x1DC7FA0
	public void .ctor() { }

	// RVA: 0x1DC7FA8 Offset: 0x1DC7FA8 VA: 0x1DC7FA8
	private void OnDestroy() { }

	// RVA: 0x1DC6C80 Offset: 0x1DC6C80 VA: 0x1DC6C80
	public SupportSelectObject GetMemberObject() { }

	// RVA: 0x1DC8054 Offset: 0x1DC8054 VA: 0x1DC8054 Slot: 7
	public override bool IsCanDrag() { }

	// RVA: 0x1DC6C88 Offset: 0x1DC6C88 VA: 0x1DC6C88
	public void DoSwap(Vector3 targetPosition, float duration) { }

	// RVA: 0x1DC7BB0 Offset: 0x1DC7BB0 VA: 0x1DC7BB0
	public void DestroyDragObj() { }

	// RVA: 0x1DC82FC Offset: 0x1DC82FC VA: 0x1DC82FC Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1DC813C Offset: 0x1DC813C VA: 0x1DC813C
	public GameObject CreateDragObject(int addDepth) { }

	// RVA: 0x1DC8450 Offset: 0x1DC8450 VA: 0x1DC8450
	public void SetData(SupportServantData supportServantData, int deckNum, int classPos, EventCampaignEntity[] friendPointCampaigns) { }

	// RVA: 0x1DC6588 Offset: 0x1DC6588 VA: 0x1DC6588
	public void HideEquip() { }

	// RVA: 0x1DC7B80 Offset: 0x1DC7B80 VA: 0x1DC7B80
	public void ShowEquip() { }

	// RVA: 0x1DC8528 Offset: 0x1DC8528 VA: 0x1DC8528
	public void ActivateEquipOnly() { }

	// RVA: 0x1DC8558 Offset: 0x1DC8558 VA: 0x1DC8558
	public void OnPressItem() { }

	// RVA: 0x1DC8560 Offset: 0x1DC8560 VA: 0x1DC8560
	public void OnPressEquip() { }
}

// Namespace: 
public class SupportSelectListViewIndicator : ListViewIndicator // TypeDefIndex: 10795
{
	// Fields
	[SerializeField] // RVA: 0xCE603C Offset: 0xCE603C VA: 0xCE603C
	protected UISprite indexSprite; // 0x18
	[SerializeField] // RVA: 0xCE604C Offset: 0xCE604C VA: 0xCE604C
	protected UILabel selectNameLabel; // 0x20
	[SerializeField] // RVA: 0xCE605C Offset: 0xCE605C VA: 0xCE605C
	protected GameObject leftObject; // 0x28
	[SerializeField] // RVA: 0xCE606C Offset: 0xCE606C VA: 0xCE606C
	protected GameObject rightObject; // 0x30
	[SerializeField] // RVA: 0xCE607C Offset: 0xCE607C VA: 0xCE607C
	protected GameObject pageBaseObject; // 0x38
	[SerializeField] // RVA: 0xCE608C Offset: 0xCE608C VA: 0xCE608C
	protected UISprite[] pageSpriteList; // 0x40
	protected ListViewManager manager; // 0x48
	protected int pageMax; // 0x50
	protected int pageIndex; // 0x54
	protected Action modifyCenterItemCallBack; // 0x58

	// Methods

	// RVA: 0x1FC9B8C Offset: 0x1FC9B8C VA: 0x1FC9B8C
	public void .ctor() { }

	// RVA: 0x1FC9B94 Offset: 0x1FC9B94 VA: 0x1FC9B94
	private void Start() { }

	// RVA: 0x1FC9B9C Offset: 0x1FC9B9C VA: 0x1FC9B9C
	public void createSpriteList() { }

	// RVA: 0x1FC9C2C Offset: 0x1FC9C2C VA: 0x1FC9C2C
	public void setModifyCenterItemCallBack(Action callback) { }

	// RVA: 0x1FC9C34 Offset: 0x1FC9C34 VA: 0x1FC9C34
	public void SetActive(bool isEnable) { }

	// RVA: 0x1FC9CA0 Offset: 0x1FC9CA0 VA: 0x1FC9CA0 Slot: 4
	public override void SetIndexMax(int max) { }

	// RVA: 0x1FC9E60 Offset: 0x1FC9E60 VA: 0x1FC9E60
	public void setPageSprite(int num, UISprite sprite) { }

	// RVA: 0x1FC9EF0 Offset: 0x1FC9EF0 VA: 0x1FC9EF0 Slot: 5
	public override void OnModifyCenterItem(ListViewManager manager, ListViewItem item, bool isTop, bool isBottom, bool isLeft, bool isRight) { }

	// RVA: 0x1FC9CFC Offset: 0x1FC9CFC VA: 0x1FC9CFC
	public void SetPageMax(int max) { }

	// RVA: 0x1FCA04C Offset: 0x1FCA04C VA: 0x1FCA04C
	public void SetPageIndex(int index) { }

	// RVA: 0x1FCA338 Offset: 0x1FCA338 VA: 0x1FCA338
	public int getPageIndex() { }

	// RVA: 0x1FCA218 Offset: 0x1FCA218 VA: 0x1FCA218
	public void DrawPartyInfo(SupportSelectListViewItem partyItem) { }

	// RVA: 0x1FCA36C Offset: 0x1FCA36C VA: 0x1FCA36C
	public void OnClickLeft() { }

	// RVA: 0x1FCA4D4 Offset: 0x1FCA4D4 VA: 0x1FCA4D4
	public void OnClickRight() { }

	// RVA: 0x1FCA65C Offset: 0x1FCA65C VA: 0x1FCA65C
	public void SetPageActive(int index, bool active) { }
}

// Namespace: 
public class SupportSelectListViewItem : ListViewItem // TypeDefIndex: 10796
{
	// Fields
	protected SupportServantData supportServantData; // 0x70
	private EventCampaignEntity[] eventFriendPoints; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xCE609C Offset: 0xCE609C VA: 0xCE609C
	[DebuggerBrowsableAttribute] // RVA: 0xCE609C Offset: 0xCE609C VA: 0xCE609C
	private SupportSelectListViewObject <listObj>k__BackingField; // 0x80

	// Properties
	public SupportSelectListViewObject listObj { get; set; }
	public string DeckName { get; }

	// Methods

	// RVA: 0x1FCA6EC Offset: 0x1FCA6EC VA: 0x1FCA6EC
	public void .ctor(int index, SupportServantData supportServantData, EventCampaignEntity[] friendPointCampaigns) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F2A4 Offset: 0xD3F2A4 VA: 0xD3F2A4
	// RVA: 0x1FCA724 Offset: 0x1FCA724 VA: 0x1FCA724
	public SupportSelectListViewObject get_listObj() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F2B4 Offset: 0xD3F2B4 VA: 0xD3F2B4
	// RVA: 0x1FCA72C Offset: 0x1FCA72C VA: 0x1FCA72C
	public void set_listObj(SupportSelectListViewObject value) { }

	// RVA: 0x1FCA734 Offset: 0x1FCA734 VA: 0x1FCA734
	public void ResetEventCampaign(EventCampaignEntity[] friendPointCampaigns) { }

	// RVA: 0x1FCA73C Offset: 0x1FCA73C VA: 0x1FCA73C
	public void setuplistObj(SupportSelectListViewObject obj) { }

	// RVA: 0x1FCA340 Offset: 0x1FCA340 VA: 0x1FCA340
	public string get_DeckName() { }
}

// Namespace: 
public class SupportSelectListViewManager : ListViewManager // TypeDefIndex: 10797
{
	// Fields
	[SerializeField] // RVA: 0xCE60D8 Offset: 0xCE60D8 VA: 0xCE60D8
	protected GameObject explanationBase; // 0x138
	[SerializeField] // RVA: 0xCE60E8 Offset: 0xCE60E8 VA: 0xCE60E8
	protected UILabel explanationLabel; // 0x140
	[CompilerGeneratedAttribute] // RVA: 0xCE60F8 Offset: 0xCE60F8 VA: 0xCE60F8
	[DebuggerBrowsableAttribute] // RVA: 0xCE60F8 Offset: 0xCE60F8 VA: 0xCE60F8
	private SupportSelectMenu.CallbackFunc callbackFunc; // 0x148
	protected int callbackCount; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xCE6134 Offset: 0xCE6134 VA: 0xCE6134
	[DebuggerBrowsableAttribute] // RVA: 0xCE6134 Offset: 0xCE6134 VA: 0xCE6134
	private SupportSelectMenu.DragSwapCallbackFunc dragSwapCallbackFunc; // 0x158
	private TimeOverChecker timeOverChecker; // 0x160
	private EventCampaignEntity[] eventFriendPoints; // 0x168
	private TimeOverChecker eventStartChecker; // 0x170
	private bool ableToSwapDragObj; // 0x178

	// Properties
	public List<SupportSelectListViewObject> ObjectList { get; }
	public List<SupportSelectListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x1FCA9F4 Offset: 0x1FCA9F4 VA: 0x1FCA9F4
	public void .ctor() { }

	// RVA: 0x1FCA9FC Offset: 0x1FCA9FC VA: 0x1FCA9FC
	protected void add_callbackFunc(SupportSelectMenu.CallbackFunc value) { }

	// RVA: 0x1FCAAEC Offset: 0x1FCAAEC VA: 0x1FCAAEC
	protected void remove_callbackFunc(SupportSelectMenu.CallbackFunc value) { }

	// RVA: 0x1FCABDC Offset: 0x1FCABDC VA: 0x1FCABDC
	public void add_dragSwapCallbackFunc(SupportSelectMenu.DragSwapCallbackFunc value) { }

	// RVA: 0x1FCACCC Offset: 0x1FCACCC VA: 0x1FCACCC
	public void remove_dragSwapCallbackFunc(SupportSelectMenu.DragSwapCallbackFunc value) { }

	// RVA: 0x1FCADBC Offset: 0x1FCADBC VA: 0x1FCADBC
	public void SetLoopFlag(bool flag) { }

	// RVA: 0x1FCADC8 Offset: 0x1FCADC8 VA: 0x1FCADC8
	public List<SupportSelectListViewObject> get_ObjectList() { }

	// RVA: 0x1FCAF94 Offset: 0x1FCAF94 VA: 0x1FCAF94
	public List<SupportSelectListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1FCB274 Offset: 0x1FCB274 VA: 0x1FCB274
	public void setItem() { }

	// RVA: 0x1FCB518 Offset: 0x1FCB518 VA: 0x1FCB518
	public void clearItem() { }

	// RVA: 0x1FCB708 Offset: 0x1FCB708 VA: 0x1FCB708
	public void reDisp() { }

	// RVA: 0x1FCB894 Offset: 0x1FCB894 VA: 0x1FCB894
	public void CreateList(SupportServantData[] supportServantData, int mainDeckIdx, SupportSelectMenu.CallbackFunc callback, SupportSelectMenu.DragSwapCallbackFunc dragSwapCallbackFunc) { }

	// RVA: 0x1FCBD98 Offset: 0x1FCBD98 VA: 0x1FCBD98
	public void DestroyList() { }

	// RVA: 0x1FCBDA0 Offset: 0x1FCBDA0 VA: 0x1FCBDA0
	private void ResetEventCampaignListViewObjects() { }

	// RVA: 0x1FCC054 Offset: 0x1FCC054 VA: 0x1FCC054
	private void ResetEventCampaignListViewObjectsStart() { }

	// RVA: 0x1FCC248 Offset: 0x1FCC248 VA: 0x1FCC248
	public SupportSelectListViewItem GetItem(int index) { }

	// RVA: 0x1FCC328 Offset: 0x1FCC328 VA: 0x1FCC328 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1FCC4F4 Offset: 0x1FCC4F4 VA: 0x1FCC4F4
	public void callbackFuncObj(SupportSelectMenu.ResultKind result, int d, int n) { }

	// RVA: 0x1FCC774 Offset: 0x1FCC774 VA: 0x1FCC774
	public void MoveCenterItem(int index, bool isAnimation = True) { }

	// RVA: 0x1FCBBBC Offset: 0x1FCBBBC VA: 0x1FCBBBC
	private long GetEventFriendCampaignFinishedAt() { }

	// RVA: 0x1FCC8A4 Offset: 0x1FCC8A4 VA: 0x1FCC8A4
	public void SetSurface(SupportSelectListViewItem item) { }

	// RVA: 0x1FCCA48 Offset: 0x1FCCA48 VA: 0x1FCCA48
	public void OnSwapEquip(SupportSelectRootComponent.SwapKind kind, int classPos1, UserServantLeaderEntity leader1, int classPos2, UserServantLeaderEntity leader2) { }

	// RVA: 0x1FCCD08 Offset: 0x1FCCD08 VA: 0x1FCCD08
	public void SetAbleToSwapDrag(bool flag) { }

	// RVA: 0x1FCCEE8 Offset: 0x1FCCEE8 VA: 0x1FCCEE8
	public bool GetAbleToSwapDrag() { }

	// RVA: 0x1FCCD38 Offset: 0x1FCCD38 VA: 0x1FCCD38
	public void UpdateExplanationText(bool ableToSwapDragObj) { }

	// RVA: 0x1FCCE10 Offset: 0x1FCCE10 VA: 0x1FCCE10
	public void SetActiveDragSwapGuide(bool flag) { }
}

// Namespace: 
public class SupportSelectListViewObject : ListViewObject // TypeDefIndex: 10798
{
	// Fields
	[SerializeField] // RVA: 0xCE6170 Offset: 0xCE6170 VA: 0xCE6170
	protected SupportSelectObject[] supportSelectObject; // 0x70
	[SerializeField] // RVA: 0xCE6180 Offset: 0xCE6180 VA: 0xCE6180
	protected SupportSelectListViewDropObject[] dropObjectList; // 0x78
	[SerializeField] // RVA: 0xCE6190 Offset: 0xCE6190 VA: 0xCE6190
	private UISprite[] classIconSpriteList; // 0x80
	[SerializeField] // RVA: 0xCE61A0 Offset: 0xCE61A0 VA: 0xCE61A0
	private UILabel explanationLb; // 0x88
	private SupportServantData supportServantData; // 0x90
	private EventCampaignEntity[] eventFriendPoints; // 0x98
	[SerializeField] // RVA: 0xCE61B0 Offset: 0xCE61B0 VA: 0xCE61B0
	private bool useAlphaMask; // 0xA0
	[SerializeField] // RVA: 0xCE61C0 Offset: 0xCE61C0 VA: 0xCE61C0
	private UISprite maskSprite; // 0xA8
	[SerializeField] // RVA: 0xCE61D0 Offset: 0xCE61D0 VA: 0xCE61D0
	private float maxAlphaRate; // 0xB0
	private UIScrollView scrollView; // 0xB8
	private ListViewItemSeed itemSeed; // 0xC0
	private BoxCollider[] colliders; // 0xC8
	private static readonly string[] upperOffClassIconFileList; // 0x0
	private static readonly string[] upperOnClassIconFileList; // 0x8

	// Properties
	public SupportSelectListViewDropObject[] DropObjectList { get; }

	// Methods

	// RVA: 0x1FCD04C Offset: 0x1FCD04C VA: 0x1FCD04C
	public void .ctor() { }

	// RVA: 0x1FCD100 Offset: 0x1FCD100 VA: 0x1FCD100
	public static string GetClassIconSpriteName(int classPos, bool isUpperOn) { }

	// RVA: 0x1FCCA38 Offset: 0x1FCCA38 VA: 0x1FCCA38
	public SupportSelectListViewDropObject[] get_DropObjectList() { }

	// RVA: 0x1FCD280 Offset: 0x1FCD280 VA: 0x1FCD280
	private void Update() { }

