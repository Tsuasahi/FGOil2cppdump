	[SerializeField] // RVA: 0xC78A04 Offset: 0xC78A04 VA: 0xC78A04
	private UISprite ticketOnePayButtonImg; // 0x198
	[SerializeField] // RVA: 0xC78A14 Offset: 0xC78A14 VA: 0xC78A14
	private GameObject onePayBtnObject; // 0x1A0
	[SerializeField] // RVA: 0xC78A24 Offset: 0xC78A24 VA: 0xC78A24
	private GameObject multiPayBtnObject; // 0x1A8
	[SerializeField] // RVA: 0xC78A34 Offset: 0xC78A34 VA: 0xC78A34
	private GameObject ticketOnePayBtnObject; // 0x1B0
	[SerializeField] // RVA: 0xC78A44 Offset: 0xC78A44 VA: 0xC78A44
	private GameObject ticketMultiPayBtnObject; // 0x1B8
	[SerializeField] // RVA: 0xC78A54 Offset: 0xC78A54 VA: 0xC78A54
	private GameObject onePay2SummonInfo; // 0x1C0
	[SerializeField] // RVA: 0xC78A64 Offset: 0xC78A64 VA: 0xC78A64
	private GameObject onePay2BtnObject; // 0x1C8
	[SerializeField] // RVA: 0xC78A74 Offset: 0xC78A74 VA: 0xC78A74
	private UISprite onePay2ButtonImg; // 0x1D0
	[SerializeField] // RVA: 0xC78A84 Offset: 0xC78A84 VA: 0xC78A84
	private UISprite onePay2BonusCount; // 0x1D8
	[SerializeField] // RVA: 0xC78A94 Offset: 0xC78A94 VA: 0xC78A94
	private UISprite onePay2BonusInfo; // 0x1E0
	[SerializeField] // RVA: 0xC78AA4 Offset: 0xC78AA4 VA: 0xC78AA4
	private UISprite onePay2NumImg; // 0x1E8
	[SerializeField] // RVA: 0xC78AB4 Offset: 0xC78AB4 VA: 0xC78AB4
	private UISprite onePay2InfoSprite; // 0x1F0
	[SerializeField] // RVA: 0xC78AC4 Offset: 0xC78AC4 VA: 0xC78AC4
	private UILabel onePay2InfoLabel; // 0x1F8
	[SerializeField] // RVA: 0xC78AD4 Offset: 0xC78AD4 VA: 0xC78AD4
	private UIButton onePay2Button; // 0x200
	[SerializeField] // RVA: 0xC78AE4 Offset: 0xC78AE4 VA: 0xC78AE4
	private UILabel freeSummonCampaignLabel; // 0x208
	[SerializeField] // RVA: 0xC78AF4 Offset: 0xC78AF4 VA: 0xC78AF4
	private GameObject freeSummonCampaignNeedInfo; // 0x210
	[SerializeField] // RVA: 0xC78B04 Offset: 0xC78B04 VA: 0xC78B04
	private UILabel freeSummonCampaignNeedNum; // 0x218
	[SerializeField] // RVA: 0xC78B14 Offset: 0xC78B14 VA: 0xC78B14
	private SummonInfoControl.InfoButtonLayout infoButtonLayout; // 0x220
	[SerializeField] // RVA: 0xC78B24 Offset: 0xC78B24 VA: 0xC78B24
	private SummonInfoLayout summonInfoLayout; // 0x228
	private UIAtlas gachaAtlas; // 0x230
	private bool isPayExUsePossible; // 0x238
	private bool isDispPayExSummon; // 0x239
	private int price; // 0x23C
	private int gachaTime; // 0x240
	private bool isFree; // 0x244
	private int multiPayPrice; // 0x248
	private int multiPayGachaTime; // 0x24C
	private int shopIdIdx; // 0x250
	private int multiShopIdIdx; // 0x254
	private int payGachaPrice; // 0x258
	private bool isTicket; // 0x25C
	private int ticketNum; // 0x260
	private int haveStoneNum; // 0x264
	private int freeDrawNum; // 0x268
	[CompilerGeneratedAttribute] // RVA: 0xC78B34 Offset: 0xC78B34 VA: 0xC78B34
	[DebuggerBrowsableAttribute] // RVA: 0xC78B34 Offset: 0xC78B34 VA: 0xC78B34
	private int <HaveFreeStoneNum>k__BackingField; // 0x26C
	[CompilerGeneratedAttribute] // RVA: 0xC78B70 Offset: 0xC78B70 VA: 0xC78B70
	[DebuggerBrowsableAttribute] // RVA: 0xC78B70 Offset: 0xC78B70 VA: 0xC78B70
	private int <HaveChargeStoneNum>k__BackingField; // 0x270
	private SummonInfoControl.SummonState state; // 0x274
	private int summonType; // 0x278
	private UserGameEntity usrData; // 0x280
	private GameObject currentBtnInfo; // 0x288
	private VaildGachaInfo beforeSummonData; // 0x290
	protected SummonInfoControl.ClickDelegate clickCallbackFunc; // 0x298
	protected Action closeCallbackFunc; // 0x2A0
	public bool partialMaintenance; // 0x2A8
	public SummonMaintenance maintenanceMask; // 0x2B0
	public GameObject freeTxtInfoObj; // 0x2B8
	public GameObject freeTenInfoObj; // 0x2C0
	private Action animationCallback; // 0x2C8
	[CompilerGeneratedAttribute] // RVA: 0xC78BAC Offset: 0xC78BAC VA: 0xC78BAC
	private static Action<GameObject> <>f__am$cache0; // 0x20

	// Properties
	public int HaveFreeStoneNum { get; set; }
	public int HaveChargeStoneNum { get; set; }
	public bool Flag20220101 { get; }
	public SummonInfoLayout SummonInfoLayout { get; }

	// Methods

	// RVA: 0x17F2298 Offset: 0x17F2298 VA: 0x17F2298
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1E78 Offset: 0xCD1E78 VA: 0xCD1E78
	// RVA: 0x17F22A8 Offset: 0x17F22A8 VA: 0x17F22A8
	public int get_HaveFreeStoneNum() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1E88 Offset: 0xCD1E88 VA: 0xCD1E88
	// RVA: 0x17F22B0 Offset: 0x17F22B0 VA: 0x17F22B0
	internal void set_HaveFreeStoneNum(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1E98 Offset: 0xCD1E98 VA: 0xCD1E98
	// RVA: 0x17F22B8 Offset: 0x17F22B8 VA: 0x17F22B8
	public int get_HaveChargeStoneNum() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1EA8 Offset: 0xCD1EA8 VA: 0xCD1EA8
	// RVA: 0x17F22C0 Offset: 0x17F22C0 VA: 0x17F22C0
	internal void set_HaveChargeStoneNum(int value) { }

	// RVA: 0x17F22C8 Offset: 0x17F22C8 VA: 0x17F22C8
	public bool get_Flag20220101() { }

	// RVA: 0x17F2320 Offset: 0x17F2320 VA: 0x17F2320
	public SummonInfoLayout get_SummonInfoLayout() { }

	// RVA: 0x17F2328 Offset: 0x17F2328 VA: 0x17F2328
	public void initSummonInfo() { }

	// RVA: 0x17F2388 Offset: 0x17F2388 VA: 0x17F2388
	public void SetMaintenanceImg(GameObject imgAtlas, string sprtName) { }

	// RVA: 0x17F2544 Offset: 0x17F2544 VA: 0x17F2544
	public void setSummonInfo(VaildGachaInfo gachaData, SummonInfoControl.ClickDelegate callback) { }

	// RVA: 0x17F25C0 Offset: 0x17F25C0 VA: 0x17F25C0
	public void setSummonDispInfo() { }

	// RVA: 0x17F3E50 Offset: 0x17F3E50 VA: 0x17F3E50
	private void initSummonBtnDisp() { }

	// RVA: 0x17F4084 Offset: 0x17F4084 VA: 0x17F4084
	public void setHelpBtnDisp(bool isDisp) { }

	// RVA: 0x17F2A80 Offset: 0x17F2A80 VA: 0x17F2A80
	public void setFreeSummonInfo() { }

	// RVA: 0x17F40D4 Offset: 0x17F40D4 VA: 0x17F40D4
	public void setPointSummonInfo() { }

	// RVA: 0x17F2E7C Offset: 0x17F2E7C VA: 0x17F2E7C
	public void setPaySummonInfo() { }

	// RVA: 0x17F4898 Offset: 0x17F4898 VA: 0x17F4898
	private void SetElevenBonusInfo(GachaEntity ent, bool ticket, int oneCount, int multiCount, UISprite oneNumImg, UISprite multiNumImg, UIButton oneButton, UISprite oneButtonImg, UISprite oneBonusCount, UISprite oneBonusInfo, UISprite multiBonusInfo) { }

	// RVA: 0x17F46C8 Offset: 0x17F46C8 VA: 0x17F46C8
	private void SetElevenBonusInfoSingle(int multiCount, UISprite multiNumImg, UISprite multiBonusInfo) { }

	// RVA: 0x17F4D54 Offset: 0x17F4D54 VA: 0x17F4D54
	private void SetOneTimeExButton(GachaEntity gachaEnt, bool ticket) { }

	// RVA: 0x17F52D4 Offset: 0x17F52D4 VA: 0x17F52D4
	private void SetGachaSprite(UISprite sprite, string spriteName) { }

	// RVA: 0x17F3B9C Offset: 0x17F3B9C VA: 0x17F3B9C
	public void setChargeSummonInfo() { }

	// RVA: 0x17F5344 Offset: 0x17F5344 VA: 0x17F5344
	private void setCurrentSummonInfo(GameObject currentInfo) { }

	// RVA: 0x17F534C Offset: 0x17F534C VA: 0x17F534C
	public void SetEnableSummonBtn(bool isEnable) { }

	// RVA: 0x17F4848 Offset: 0x17F4848 VA: 0x17F4848
	private void checkPartialMaintenance() { }

	// RVA: 0x17F4460 Offset: 0x17F4460 VA: 0x17F4460
	private void setSummonButtonsCollider(bool OnOff) { }

	// RVA: 0x17F5708 Offset: 0x17F5708 VA: 0x17F5708
	public void setAlphaSummonBtn(Action callback) { }

	// RVA: 0x17F578C Offset: 0x17F578C VA: 0x17F578C
	private void MoveAlpha(GameObject target) { }

	// RVA: 0x17F5920 Offset: 0x17F5920 VA: 0x17F5920
	private void EndAnimation() { }

	// RVA: 0x17F5934 Offset: 0x17F5934 VA: 0x17F5934
	public void OnClickFreeSummon() { }

	// RVA: 0x17F5E74 Offset: 0x17F5E74 VA: 0x17F5E74
	public void OnClickGacha() { }

	// RVA: 0x17F607C Offset: 0x17F607C VA: 0x17F607C
	public void OnClickMutiGacha() { }

	// RVA: 0x17F6224 Offset: 0x17F6224 VA: 0x17F6224
	public void OnClickSinglePayGacha() { }

	// RVA: 0x17F63CC Offset: 0x17F63CC VA: 0x17F63CC
	public void OnClickSinglePayExGacha() { }

	// RVA: 0x17F65E0 Offset: 0x17F65E0 VA: 0x17F65E0
	public void OnClickMultiPayGacha() { }

	// RVA: 0x17F6788 Offset: 0x17F6788 VA: 0x17F6788
	public void OnClickChargeGacha() { }

	// RVA: 0x17F6930 Offset: 0x17F6930 VA: 0x17F6930
	public void OnClickDetail(Action callback) { }

	// RVA: 0x17F6A64 Offset: 0x17F6A64 VA: 0x17F6A64
	public int getUsrStoneNum() { }

	// RVA: 0x17F6A6C Offset: 0x17F6A6C VA: 0x17F6A6C
	public int getUsrTicketNum() { }

	// RVA: 0x17F6A74 Offset: 0x17F6A74 VA: 0x17F6A74
	public int getSummonPrice() { }

	// RVA: 0x17F6A7C Offset: 0x17F6A7C VA: 0x17F6A7C
	public bool getIsFree() { }

	// RVA: 0x17F6A84 Offset: 0x17F6A84 VA: 0x17F6A84
	public void setTutorialBtnEnable(bool isEnable) { }

	// RVA: 0x17F6B0C Offset: 0x17F6B0C VA: 0x17F6B0C
	public void setTutorialExeBtnEnable(bool isEnable) { }

	// RVA: 0x17F6B74 Offset: 0x17F6B74 VA: 0x17F6B74
	public int tutoSummonSinglePrice() { }

	// RVA: 0x17F6D68 Offset: 0x17F6D68 VA: 0x17F6D68
	public int getGroupGachaId() { }

	// RVA: 0x17F6D94 Offset: 0x17F6D94 VA: 0x17F6D94
	public void SetSummonHistorySprite(GameObject bannerAtlas, string imgName) { }

	// RVA: 0x17F6EA8 Offset: 0x17F6EA8 VA: 0x17F6EA8
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1EB8 Offset: 0xCD1EB8 VA: 0xCD1EB8
	// RVA: 0x17F6F48 Offset: 0x17F6F48 VA: 0x17F6F48
	private static void <setSummonDispInfo>m__0(GameObject obj) { }
}

// Namespace: 
[Serializable]
public class SummonInfoControl.InfoButtonLayout // TypeDefIndex: 10757
{
	// Fields
	public Vector3 Top; // 0x10
	public Vector3 Center; // 0x1C
	public Vector3 Buttom; // 0x28

	// Methods

	// RVA: 0x17F7044 Offset: 0x17F7044 VA: 0x17F7044
	public void .ctor() { }
}

// Namespace: 
public sealed class SummonInfoControl.ClickDelegate : MulticastDelegate // TypeDefIndex: 10758
{
	// Methods

	// RVA: 0x17F7004 Offset: 0x17F7004 VA: 0x17F7004
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x17F5AD4 Offset: 0x17F5AD4 VA: 0x17F5AD4 Slot: 11
	public virtual void Invoke(GachaRqParamData paramData) { }

	// RVA: 0x17F7014 Offset: 0x17F7014 VA: 0x17F7014 Slot: 12
	public virtual IAsyncResult BeginInvoke(GachaRqParamData paramData, AsyncCallback callback, object object) { }

	// RVA: 0x17F7038 Offset: 0x17F7038 VA: 0x17F7038 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public enum SummonInfoControl.SummonState // TypeDefIndex: 10759
{
	// Fields
	public int value__; // 0x0
	public const SummonInfoControl.SummonState FREE_SUMMON = 0;
	public const SummonInfoControl.SummonState SINGLE_POINT_SUMMON = 1;
	public const SummonInfoControl.SummonState MULTI_POINT_SUMMON = 2;
	public const SummonInfoControl.SummonState SINGLE_PAY_SUMMON = 3;
	public const SummonInfoControl.SummonState MULTI_PAY_SUMMON = 4;
	public const SummonInfoControl.SummonState TICKET_SUMMON = 5;
}

// Namespace: 
public class SummonInfoLayout : MonoBehaviour // TypeDefIndex: 10760
{
	// Fields
	[SerializeField] // RVA: 0xC78BBC Offset: 0xC78BBC VA: 0xC78BBC
	[HeaderAttribute] // RVA: 0xC78BBC Offset: 0xC78BBC VA: 0xC78BBC
	private SummonInfoLayout.InfoControlLayout infoControlLayoutPc; // 0x18
	private SummonInfoLayout.InfoControlLayout infoControlLayoutDefault; // 0x30
	private FSOffset fsOffset; // 0x48

	// Methods

	// RVA: 0x17F795C Offset: 0x17F795C VA: 0x17F795C
	public void .ctor() { }

	// RVA: 0x17F7964 Offset: 0x17F7964 VA: 0x17F7964
	public void UpdateDefault() { }

	// RVA: 0x17F7A9C Offset: 0x17F7A9C VA: 0x17F7A9C
	public void UpdatePc() { }

	// RVA: 0x17F7B38 Offset: 0x17F7B38 VA: 0x17F7B38
	private void Awake() { }

	// RVA: 0x17F7A00 Offset: 0x17F7A00 VA: 0x17F7A00
	private void UpdateOffset() { }
}

// Namespace: 
[Serializable]
public struct SummonInfoLayout.InfoControlLayout // TypeDefIndex: 10761
{
	// Fields
	public Vector3 Position; // 0x0
	public Vector3 Scale; // 0xC
}

// Namespace: 
public class SummonMaintenance : MonoBehaviour // TypeDefIndex: 10762
{
	// Fields
	protected static readonly float ANIM_TIME; // 0x0

	// Methods

	// RVA: 0x17F9B00 Offset: 0x17F9B00 VA: 0x17F9B00
	public void .ctor() { }

	// RVA: 0x17F245C Offset: 0x17F245C VA: 0x17F245C
	public void SetSprite(GameObject imgAtlas, string sprtName) { }

	// RVA: 0x17F5488 Offset: 0x17F5488 VA: 0x17F5488
	public void Open() { }

	// RVA: 0x17F3F88 Offset: 0x17F3F88 VA: 0x17F3F88
	public void Close() { }

	// RVA: 0x17F9B08 Offset: 0x17F9B08 VA: 0x17F9B08
	private void OnEnd() { }

	// RVA: 0x17F9B40 Offset: 0x17F9B40 VA: 0x17F9B40
	private static void .cctor() { }
}

// Namespace: 
public class SummonInfoDlgComponent : BaseDialog // TypeDefIndex: 10763
{
	// Fields
	[SerializeField] // RVA: 0xC78C08 Offset: 0xC78C08 VA: 0xC78C08
	protected GameObject cautionInfo; // 0x58
	[SerializeField] // RVA: 0xC78C18 Offset: 0xC78C18 VA: 0xC78C18
	protected UILabel titleLabel; // 0x60
	[SerializeField] // RVA: 0xC78C28 Offset: 0xC78C28 VA: 0xC78C28
	protected UILabel messageLabel; // 0x68
	[SerializeField] // RVA: 0xC78C38 Offset: 0xC78C38 VA: 0xC78C38
	protected UILabel confirmBtnLabel; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC78C48 Offset: 0xC78C48 VA: 0xC78C48
	[DebuggerBrowsableAttribute] // RVA: 0xC78C48 Offset: 0xC78C48 VA: 0xC78C48
	private SummonInfoDlgComponent.CallbackFunc callbackFunc; // 0x78
	protected Action closeCallbackFunc; // 0x80

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x17F7128 Offset: 0x17F7128 VA: 0x17F7128
	public void .ctor() { }

	// RVA: 0x17F7190 Offset: 0x17F7190 VA: 0x17F7190
	protected void add_callbackFunc(SummonInfoDlgComponent.CallbackFunc value) { }

	// RVA: 0x17F727C Offset: 0x17F727C VA: 0x17F727C
	protected void remove_callbackFunc(SummonInfoDlgComponent.CallbackFunc value) { }

	// RVA: 0x17F7368 Offset: 0x17F7368 VA: 0x17F7368
	public void Init() { }

	// RVA: 0x17F7478 Offset: 0x17F7478 VA: 0x17F7478
	public void OpenInfoMessageDlg(string title, string message, SummonInfoDlgComponent.CallbackFunc callback) { }

	// RVA: 0x17F75C8 Offset: 0x17F75C8 VA: 0x17F75C8
	public void Close(Action callback) { }

	// RVA: 0x17F7650 Offset: 0x17F7650 VA: 0x17F7650
	protected void EndClose() { }

	// RVA: 0x17F768C Offset: 0x17F768C VA: 0x17F768C
	protected void Callback() { }

	// RVA: 0x17F78A8 Offset: 0x17F78A8 VA: 0x17F78A8
	public void OnClickDecide() { }

	// RVA: 0x17F78C4 Offset: 0x17F78C4 VA: 0x17F78C4 Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
public sealed class SummonInfoDlgComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 10764
{
	// Methods

	// RVA: 0x17F790C Offset: 0x17F790C VA: 0x17F790C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x17F76A8 Offset: 0x17F76A8 VA: 0x17F76A8 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x17F791C Offset: 0x17F791C VA: 0x17F791C Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x17F7950 Offset: 0x17F7950 VA: 0x17F7950 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SummonLimitWarningDlgComponent : BaseDialog // TypeDefIndex: 10765
{
	// Fields
	[SerializeField] // RVA: 0xC78C84 Offset: 0xC78C84 VA: 0xC78C84
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC78C94 Offset: 0xC78C94 VA: 0xC78C94
	protected UILabel msgLabel; // 0x60
	[SerializeField] // RVA: 0xC78CA4 Offset: 0xC78CA4 VA: 0xC78CA4
	protected UILabel titleLabel2; // 0x68
	[SerializeField] // RVA: 0xC78CB4 Offset: 0xC78CB4 VA: 0xC78CB4
	protected UILabel warningLabel; // 0x70
	[SerializeField] // RVA: 0xC78CC4 Offset: 0xC78CC4 VA: 0xC78CC4
	protected UILabel confirmLabel; // 0x78
	[SerializeField] // RVA: 0xC78CD4 Offset: 0xC78CD4 VA: 0xC78CD4
	protected UILabel qpLabel; // 0x80
	[SerializeField] // RVA: 0xC78CE4 Offset: 0xC78CE4 VA: 0xC78CE4
	protected UIButton decideButton; // 0x88
	[SerializeField] // RVA: 0xC78CF4 Offset: 0xC78CF4 VA: 0xC78CF4
	protected UILabel decideLabel; // 0x90
	[SerializeField] // RVA: 0xC78D04 Offset: 0xC78D04 VA: 0xC78D04
	protected UIButton otherButton; // 0x98
	[SerializeField] // RVA: 0xC78D14 Offset: 0xC78D14 VA: 0xC78D14
	protected UILabel otherLabel; // 0xA0
	[SerializeField] // RVA: 0xC78D24 Offset: 0xC78D24 VA: 0xC78D24
	protected UIButton cancelButton; // 0xA8
	[SerializeField] // RVA: 0xC78D34 Offset: 0xC78D34 VA: 0xC78D34
	protected UILabel cancelLabel; // 0xB0
	[SerializeField] // RVA: 0xC78D44 Offset: 0xC78D44 VA: 0xC78D44
	protected UIButton otherButton2; // 0xB8
	[SerializeField] // RVA: 0xC78D54 Offset: 0xC78D54 VA: 0xC78D54
	protected UILabel otherLabel2; // 0xC0
	[SerializeField] // RVA: 0xC78D64 Offset: 0xC78D64 VA: 0xC78D64
	protected UIButton cancelButton2; // 0xC8
	[SerializeField] // RVA: 0xC78D74 Offset: 0xC78D74 VA: 0xC78D74
	protected UILabel cancelLabel2; // 0xD0
	[SerializeField] // RVA: 0xC78D84 Offset: 0xC78D84 VA: 0xC78D84
	protected UIButton settingButton; // 0xD8
	[SerializeField] // RVA: 0xC78D94 Offset: 0xC78D94 VA: 0xC78D94
	protected UILabel settingLabel; // 0xE0
	[SerializeField] // RVA: 0xC78DA4 Offset: 0xC78DA4 VA: 0xC78DA4
	protected AutomaticSaleDlgComponent autoSaleDlgInfo; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xC78DB4 Offset: 0xC78DB4 VA: 0xC78DB4
	[DebuggerBrowsableAttribute] // RVA: 0xC78DB4 Offset: 0xC78DB4 VA: 0xC78DB4
	private SummonLimitWarningDlgComponent.CallbackFunc callbackFunc; // 0xF0
	protected Action closeCallbackFunc; // 0xF8
	protected Action autoSaleDialogCloseCallbackFunc; // 0x100
	protected SummonLimitWarningDlgComponent.State state; // 0x108

	// Methods

	// RVA: 0x17F7BE8 Offset: 0x17F7BE8 VA: 0x17F7BE8
	public void .ctor() { }

	// RVA: 0x17F7C50 Offset: 0x17F7C50 VA: 0x17F7C50
	protected void add_callbackFunc(SummonLimitWarningDlgComponent.CallbackFunc value) { }

	// RVA: 0x17F7D3C Offset: 0x17F7D3C VA: 0x17F7D3C
	protected void remove_callbackFunc(SummonLimitWarningDlgComponent.CallbackFunc value) { }

	// RVA: 0x17F7E28 Offset: 0x17F7E28 VA: 0x17F7E28
	public void Init() { }

	// RVA: 0x17F80D4 Offset: 0x17F80D4 VA: 0x17F80D4
	public void OpenQpWarning(SummonLimitWarningDlgComponent.CallbackFunc callback, Action autoSaleDialogCloseCallback) { }

	// RVA: 0x17F87B0 Offset: 0x17F87B0 VA: 0x17F87B0
	public void OpenManaWarning(SummonLimitWarningDlgComponent.CallbackFunc callback, Action autoSaleDialogCloseCallback) { }

	// RVA: 0x17F8CEC Offset: 0x17F8CEC VA: 0x17F8CEC
	public void OpenQpWarning2(SummonLimitWarningDlgComponent.CallbackFunc callback, Action autoSaleDialogCloseCallback) { }

	// RVA: 0x17F9360 Offset: 0x17F9360 VA: 0x17F9360
	protected void EndOpen() { }

	// RVA: 0x17F936C Offset: 0x17F936C VA: 0x17F936C
	public void Close() { }

	// RVA: 0x17F9374 Offset: 0x17F9374 VA: 0x17F9374
	public void Close(Action callback) { }

	// RVA: 0x17F9404 Offset: 0x17F9404 VA: 0x17F9404
	protected void EndClose() { }

	// RVA: 0x17F9468 Offset: 0x17F9468 VA: 0x17F9468
	protected void callback(SummonLimitWarningDlgComponent.Result result) { }

	// RVA: 0x17F96B4 Offset: 0x17F96B4 VA: 0x17F96B4
	public void OnClickDecide() { }

	// RVA: 0x17F9764 Offset: 0x17F9764 VA: 0x17F9764
	public void OnClickOtherScene() { }

	// RVA: 0x17F9814 Offset: 0x17F9814 VA: 0x17F9814
	public void OnClickCancel() { }

	// RVA: 0x17F8748 Offset: 0x17F8748 VA: 0x17F8748
	protected void SetButtonEnable(bool isEnable) { }

	// RVA: 0x17F98C4 Offset: 0x17F98C4 VA: 0x17F98C4
	public void OnClickSetting() { }

	// RVA: 0x17F99A8 Offset: 0x17F99A8 VA: 0x17F99A8
	private void settingResult(bool res) { }
}

// Namespace: 
protected enum SummonLimitWarningDlgComponent.State // TypeDefIndex: 10766
{
	// Fields
	public int value__; // 0x0
	public const SummonLimitWarningDlgComponent.State INIT = 0;
	public const SummonLimitWarningDlgComponent.State OPEN = 1;
	public const SummonLimitWarningDlgComponent.State INPUT = 2;
	public const SummonLimitWarningDlgComponent.State SELECTED = 3;
	public const SummonLimitWarningDlgComponent.State CLOSE = 4;
}

// Namespace: 
public enum SummonLimitWarningDlgComponent.Result // TypeDefIndex: 10767
{
	// Fields
	public int value__; // 0x0
	public const SummonLimitWarningDlgComponent.Result CANCEL = 0;
	public const SummonLimitWarningDlgComponent.Result OTHER_SCENE = 1;
	public const SummonLimitWarningDlgComponent.Result DECIDE = 2;
}

// Namespace: 
public sealed class SummonLimitWarningDlgComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 10768
{
	// Methods

	// RVA: 0x17F9A58 Offset: 0x17F9A58 VA: 0x17F9A58
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x17F9488 Offset: 0x17F9488 VA: 0x17F9488 Slot: 11
	public virtual void Invoke(SummonLimitWarningDlgComponent.Result result) { }

	// RVA: 0x17F9A68 Offset: 0x17F9A68 VA: 0x17F9A68 Slot: 12
	public virtual IAsyncResult BeginInvoke(SummonLimitWarningDlgComponent.Result result, AsyncCallback callback, object object) { }

	// RVA: 0x17F9AF4 Offset: 0x17F9AF4 VA: 0x17F9AF4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SummonMiniBannerComponent : MonoBehaviour // TypeDefIndex: 10769
{
	// Fields
	private readonly float SCALING_SIZE; // 0x18
	private readonly float SCALING_POS; // 0x1C
	[SerializeField] // RVA: 0xC78DF0 Offset: 0xC78DF0 VA: 0xC78DF0
	private UISprite bannerImg; // 0x20
	[SerializeField] // RVA: 0xC78E00 Offset: 0xC78E00 VA: 0xC78E00
	private UIPanel clipPanel; // 0x28
	private VaildGachaInfo info; // 0x30
	private int bannerIdx; // 0x38
	private int moveBannerIdx; // 0x3C
	private UIPanel scrollPanel; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC78E10 Offset: 0xC78E10 VA: 0xC78E10
	[DebuggerBrowsableAttribute] // RVA: 0xC78E10 Offset: 0xC78E10 VA: 0xC78E10
	private SummonMiniBannerComponent.CallbackFunc callbackFunc; // 0x48

	// Methods

	// RVA: 0x17F9B98 Offset: 0x17F9B98 VA: 0x17F9B98
	public void .ctor() { }

	// RVA: 0x17F9BB0 Offset: 0x17F9BB0 VA: 0x17F9BB0
	private void add_callbackFunc(SummonMiniBannerComponent.CallbackFunc value) { }

	// RVA: 0x17F9C9C Offset: 0x17F9C9C VA: 0x17F9C9C
	private void remove_callbackFunc(SummonMiniBannerComponent.CallbackFunc value) { }

	// RVA: 0x17F9D88 Offset: 0x17F9D88 VA: 0x17F9D88
	public void SetBannerInfo(VaildGachaInfo info, int idx, int moveIdx, GameObject bannerAtlas, string imgName, SummonMiniBannerComponent.CallbackFunc callback, UIPanel parent) { }

	// RVA: 0x17F9EC0 Offset: 0x17F9EC0 VA: 0x17F9EC0
	public void Update() { }

	// RVA: 0x17F9FE8 Offset: 0x17F9FE8 VA: 0x17F9FE8
	public VaildGachaInfo GetBannerSummonInfo() { }

	// RVA: 0x17F9FF0 Offset: 0x17F9FF0 VA: 0x17F9FF0
	public int GetBannerIndex() { }

	// RVA: 0x17F9FF8 Offset: 0x17F9FF8 VA: 0x17F9FF8
	public int GetMoveBannerIndex() { }

	// RVA: 0x17FA000 Offset: 0x17FA000 VA: 0x17FA000
	public void SetEnableCollider(bool isEnable) { }

	// RVA: 0x17FA0C4 Offset: 0x17FA0C4 VA: 0x17FA0C4
	public void OnClickBanner() { }
}

// Namespace: 
public sealed class SummonMiniBannerComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 10770
{
	// Methods

	// RVA: 0x17FA30C Offset: 0x17FA30C VA: 0x17FA30C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x17FA0E0 Offset: 0x17FA0E0 VA: 0x17FA0E0 Slot: 11
	public virtual void Invoke(int moveIndex) { }

	// RVA: 0x17FA31C Offset: 0x17FA31C VA: 0x17FA31C Slot: 12
	public virtual IAsyncResult BeginInvoke(int moveIndex, AsyncCallback callback, object object) { }

	// RVA: 0x17FA3A8 Offset: 0x17FA3A8 VA: 0x17FA3A8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SummonResultComponent : BaseMonoBehaviour // TypeDefIndex: 10771
{
	// Fields
	public PlayMakerFSM fsm; // 0x18
	public GameObject backImg; // 0x20
	public UIWidget mWidget; // 0x28
	public GameObject targetGo; // 0x30
	public UIGrid fstGrid; // 0x38
	public UIGrid scdGrid; // 0x40
	public GameObject changeSceneBtnInfo; // 0x48
	public GameObject closeInfo; // 0x50
	[SerializeField] // RVA: 0xC78E4C Offset: 0xC78E4C VA: 0xC78E4C
	private UILabel formationBtnLabel; // 0x58
	[SerializeField] // RVA: 0xC78E5C Offset: 0xC78E5C VA: 0xC78E5C
	private UILabel combineBtnLabel; // 0x60
	[SerializeField] // RVA: 0xC78E6C Offset: 0xC78E6C VA: 0xC78E6C
	private UILabel summonBtnLabel; // 0x68
	[SerializeField] // RVA: 0xC78E7C Offset: 0xC78E7C VA: 0xC78E7C
	private UILabel sellBtnLabel; // 0x70
	[SerializeField] // RVA: 0xC78E8C Offset: 0xC78E8C VA: 0xC78E8C
	private UIButton summonBtn; // 0x78
	[SerializeField] // RVA: 0xC78E9C Offset: 0xC78E9C VA: 0xC78E9C
	private UISprite summonBtnSpr; // 0x80
	[SerializeField] // RVA: 0xC78EAC Offset: 0xC78EAC VA: 0xC78EAC
	private UIButton formationBtn; // 0x88
	[SerializeField] // RVA: 0xC78EBC Offset: 0xC78EBC VA: 0xC78EBC
	private UISprite formationBtnSpr; // 0x90
	[SerializeField] // RVA: 0xC78ECC Offset: 0xC78ECC VA: 0xC78ECC
	private UIButton combineBtn; // 0x98
	[SerializeField] // RVA: 0xC78EDC Offset: 0xC78EDC VA: 0xC78EDC
	private UISprite combineBtnSpr; // 0xA0
	[SerializeField] // RVA: 0xC78EEC Offset: 0xC78EEC VA: 0xC78EEC
	private UIButton sellBtn; // 0xA8
	[SerializeField] // RVA: 0xC78EFC Offset: 0xC78EFC VA: 0xC78EFC
	private UISprite sellBtnSpr; // 0xB0
	public UILabel svtTitleLb; // 0xB8
	public UILabel svtNumLb; // 0xC0
	public UILabel svtMaxLb; // 0xC8
	public UILabel svtEqTitleLb; // 0xD0
	public UILabel svtEqNumLb; // 0xD8
	public UILabel svtEqMaxLb; // 0xE0
	public UILabel CcNumLb; // 0xE8
	public UILabel CcMaxLb; // 0xF0
	public GameObject touchBlocker; // 0xF8
	private GameObject blocker; // 0x100
	private Vector3 center; // 0x108
	private List<int> befSvtList; // 0x118
	private int dispType; // 0x120
	public GameObject autoSaleMsg; // 0x128
	public UILabel autoSaleMsgLb; // 0x130
	public ItemIconComponent extraGiftMsgIconComp; // 0x138
	public UILabel extraGiftMsgLb; // 0x140
	public UISprite extraGiftMsgSpr; // 0x148
	private int summonBeforeQp; // 0x150
	private int summonBeforeMana; // 0x154
	[SerializeField] // RVA: 0xC78F0C Offset: 0xC78F0C VA: 0xC78F0C
	private SummonControl summonCtrl; // 0x158
	private bool isLimitOver; // 0x160
	private static readonly float TUTORIAL_BACK_ARROW_WAY; // 0x0
	private static readonly Rect TUTORIAL_BACK_ARROW_RECT; // 0x4
	private static readonly int SUMMON_BTN_LABEL_WIDTH_CONDENSE; // 0x14
	private static readonly int SUMMON_BTN_LABEL_WIDTH_CONDENSE2; // 0x18
	private static readonly int SUMMON_BTN_LABEL_WIDTH_NORMAL; // 0x1C

	// Methods

	// RVA: 0x17FA3B4 Offset: 0x17FA3B4 VA: 0x17FA3B4
	public void .ctor() { }

	// RVA: 0x17FA3C4 Offset: 0x17FA3C4 VA: 0x17FA3C4
	public void initGachaResultList(GachaInfos[] resultList, int type, int[] extraGiftIds) { }

	// RVA: 0x17FB9DC Offset: 0x17FB9DC VA: 0x17FB9DC
	public void setListByType(int type) { }

	// RVA: 0x17FD0B4 Offset: 0x17FD0B4 VA: 0x17FD0B4
	public void ClearTouchBlocker() { }

	// RVA: 0x17FB364 Offset: 0x17FB364 VA: 0x17FB364
	private bool checkOverlapSvt(int svtId) { }

	// RVA: 0x17FCDA0 Offset: 0x17FCDA0 VA: 0x17FCDA0
	private void setSvtNum() { }

	// RVA: 0x17FD160 Offset: 0x17FD160 VA: 0x17FD160
	private void showResSvtDetail(long usrSvtId) { }

	// RVA: 0x17FD290 Offset: 0x17FD290 VA: 0x17FD290
	private void showResCcDetail(long usrSvtId) { }

	// RVA: 0x17FD3C0 Offset: 0x17FD3C0 VA: 0x17FD3C0
	private void DialogCallBack(bool flg) { }

	// RVA: 0x17FD4A0 Offset: 0x17FD4A0 VA: 0x17FD4A0
	private void EndCloseDialogCallBack() { }

	// RVA: 0x17FB16C Offset: 0x17FB16C VA: 0x17FB16C
	private void setCenter() { }

	// RVA: 0x17FD4A4 Offset: 0x17FD4A4 VA: 0x17FD4A4
	public void clearResultList() { }

	// RVA: 0x17FD6EC Offset: 0x17FD6EC VA: 0x17FD6EC
	public void onClickNext() { }

	// RVA: 0x17FD768 Offset: 0x17FD768 VA: 0x17FD768
	public void setBeforeQpMana(int qp, int mana) { }

	// RVA: 0x17FD774 Offset: 0x17FD774 VA: 0x17FD774
	public void CheckLimitOver() { }

	// RVA: 0x17FD850 Offset: 0x17FD850 VA: 0x17FD850
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1EC8 Offset: 0xCD1EC8 VA: 0xCD1EC8
	// RVA: 0x17FD924 Offset: 0x17FD924 VA: 0x17FD924
	private void <DialogCallBack>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45614 Offset: 0xC45614 VA: 0xC45614
private sealed class SummonResultComponent.<showResSvtDetail>c__AnonStorey0 // TypeDefIndex: 10772
{
	// Fields
	internal long usrSvtId; // 0x10
	internal SummonResultComponent $this; // 0x18

	// Methods

	// RVA: 0x17FD288 Offset: 0x17FD288 VA: 0x17FD288
	public void .ctor() { }

	// RVA: 0x17FDBA8 Offset: 0x17FDBA8 VA: 0x17FDBA8
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45624 Offset: 0xC45624 VA: 0xC45624
private sealed class SummonResultComponent.<showResCcDetail>c__AnonStorey1 // TypeDefIndex: 10773
{
	// Fields
	internal long usrSvtId; // 0x10
	internal SummonResultComponent $this; // 0x18

	// Methods

	// RVA: 0x17FD3B8 Offset: 0x17FD3B8 VA: 0x17FD3B8
	public void .ctor() { }

	// RVA: 0x17FDA2C Offset: 0x17FDA2C VA: 0x17FDA2C
	internal void <>m__0() { }
}

// Namespace: 
public class SummonResultInfoComponent : MonoBehaviour // TypeDefIndex: 10774
{
	// Fields
	[SerializeField] // RVA: 0xC78F1C Offset: 0xC78F1C VA: 0xC78F1C
	protected ServantFaceIconComponent svtFaceInfo; // 0x18
	[SerializeField] // RVA: 0xC78F2C Offset: 0xC78F2C VA: 0xC78F2C
	protected UIButton iconBtn; // 0x20
	[SerializeField] // RVA: 0xC78F3C Offset: 0xC78F3C VA: 0xC78F3C
	protected AutoSellInfoComponent autoSaleInfo; // 0x28
	[SerializeField] // RVA: 0xC78F4C Offset: 0xC78F4C VA: 0xC78F4C
	protected GameObject addRoot; // 0x30
	[SerializeField] // RVA: 0xC78F5C Offset: 0xC78F5C VA: 0xC78F5C
	private ItemIconComponent addIcon; // 0x38
	[SerializeField] // RVA: 0xC78F6C Offset: 0xC78F6C VA: 0xC78F6C
	protected UILabel addNumLabel; // 0x40
	private GachaInfos resultData; // 0x48
	protected SummonResultInfoComponent.ClickDelegate clickCallbackFunc; // 0x50

	// Methods

	// RVA: 0x17FDCC8 Offset: 0x17FDCC8 VA: 0x17FDCC8
	public void .ctor() { }

	// RVA: 0x17FB444 Offset: 0x17FB444 VA: 0x17FB444
	public void setResultData(GachaInfos data, bool isOverlap, SummonResultInfoComponent.ClickDelegate callback, int befQp, int befMana) { }

	// RVA: 0x17FDCD0 Offset: 0x17FDCD0 VA: 0x17FDCD0
	public void OnClickSvt() { }
}

// Namespace: 
public sealed class SummonResultInfoComponent.ClickDelegate : MulticastDelegate // TypeDefIndex: 10775
{
	// Methods

	// RVA: 0x17FB434 Offset: 0x17FB434 VA: 0x17FB434
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x17FDD7C Offset: 0x17FDD7C VA: 0x17FDD7C Slot: 11
	public virtual void Invoke(long usrSvtId) { }

	// RVA: 0x17FDFA8 Offset: 0x17FDFA8 VA: 0x17FDFA8 Slot: 12
	public virtual IAsyncResult BeginInvoke(long usrSvtId, AsyncCallback callback, object object) { }

	// RVA: 0x17FE034 Offset: 0x17FE034 VA: 0x17FE034 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SummonRootComponent : SceneRootComponent // TypeDefIndex: 10776
{
	// Fields
	protected static int FIGURE_ID; // 0x0
	public SummonControl summonCtr; // 0x38
	public GameObject svtBase; // 0x40
	private UIStandFigureR standFigure; // 0x48
	public GameObject bgRoot; // 0x50
	private GameObject bgGo; // 0x58
	public GameObject Effroot; // 0x60
	private string path; // 0x68
	private AssetData summonAssets; // 0x70
	private GameObject summonEffPrefab; // 0x78
	private Action assetLoadCallback; // 0x80

	// Methods

	// RVA: 0x17FE040 Offset: 0x17FE040 VA: 0x17FE040
	public void .ctor() { }

	// RVA: 0x17FE048 Offset: 0x17FE048 VA: 0x17FE048 Slot: 4
	public override void beginInitialize() { }

	// RVA: 0x17FE0D0 Offset: 0x17FE0D0 VA: 0x17FE0D0 Slot: 6
	public override void beginStartUp() { }

	// RVA: 0x17FE224 Offset: 0x17FE224 VA: 0x17FE224 Slot: 10
	public override void beginResume() { }

	// RVA: 0x17FE22C Offset: 0x17FE22C VA: 0x17FE22C Slot: 7
	public override void beginFinish() { }

	// RVA: 0x17FE170 Offset: 0x17FE170 VA: 0x17FE170
	private void SetBg() { }

	// RVA: 0x17FE4C0 Offset: 0x17FE4C0 VA: 0x17FE4C0
	private void EndLoadBg(AssetData data) { }

	// RVA: 0x17FE34C Offset: 0x17FE34C VA: 0x17FE34C
	private void destroyBgInfo() { }

	// RVA: 0x17FE6CC Offset: 0x17FE6CC VA: 0x17FE6CC
	public void SetAssetStroageData(Action callback) { }

	// RVA: 0x17FE7D8 Offset: 0x17FE7D8 VA: 0x17FE7D8
	private void EndLoadAssetData(AssetData data) { }

	// RVA: 0x17FE86C Offset: 0x17FE86C VA: 0x17FE86C
	private void LoadAssetsToScene() { }

	// RVA: 0x17FEB80 Offset: 0x17FEB80 VA: 0x17FEB80
	private void ClearAssetsInScene() { }

	// RVA: 0x17FE428 Offset: 0x17FE428 VA: 0x17FE428
	private void destroyAssetData() { }

	// RVA: 0x17FEC34 Offset: 0x17FEC34 VA: 0x17FEC34
	private void createSvtStandFigure() { }

	// RVA: 0x17FEE5C Offset: 0x17FEE5C VA: 0x17FEE5C
	private void destroySvtStandFigure() { }

	// RVA: 0x17FEF28 Offset: 0x17FEF28 VA: 0x17FEF28
	public void SetBgActive(bool isDisp) { }

	// RVA: 0x17FEF60 Offset: 0x17FEF60 VA: 0x17FEF60
	public void GoToSellServant() { }

	// RVA: 0x17FEFF8 Offset: 0x17FEFF8 VA: 0x17FEFF8
	private static void .cctor() { }
}

// Namespace: 
public class VaildGachaInfo // TypeDefIndex: 10777
{
	// Fields
	public int id; // 0x10
	public string name; // 0x18
	public int beforeId; // 0x20
	public int priority; // 0x24
	public int imgId; // 0x28
	public int warId; // 0x2C
	public int slotId; // 0x30
	public int type; // 0x34
	public int price; // 0x38
	public int ticketItemId; // 0x3C
	public bool isOpen; // 0x40
	public int storyGachaIdx; // 0x44
	public int[] adjustStoryGachaIds; // 0x48
	public int gachaSubId; // 0x50
	public bool isPointSummon; // 0x54
	public string detailUrl; // 0x58
	public int groupId; // 0x60
	public bool isGroupSummon; // 0x64
	public int appendShopIdIndex; // 0x68
	public int appendDrawNum; // 0x6C
	public int appendPayType; // 0x70
	public long openedAt; // 0x78
	public long closedAt; // 0x80
	public int flag; // 0x88

	// Methods

	// RVA: 0x1478910 Offset: 0x1478910 VA: 0x1478910
	public void .ctor() { }

	// RVA: 0x1478918 Offset: 0x1478918 VA: 0x1478918
	public bool HasFlag(GachaEntity.Flag check) { }
}

// Namespace: 
public class CancelConfirmDeckIdDialog : BaseDialog // TypeDefIndex: 10778
{
	// Fields
	protected readonly int MESSAGE_FONT_SIZE; // 0x58
	[SerializeField] // RVA: 0xC78F7C Offset: 0xC78F7C VA: 0xC78F7C
	protected UILabel titleLabel; // 0x60
	[SerializeField] // RVA: 0xC78F8C Offset: 0xC78F8C VA: 0xC78F8C
	protected UILabel fixMessageLabel; // 0x68
	[SerializeField] // RVA: 0xC78F9C Offset: 0xC78F9C VA: 0xC78F9C
	protected UILabel messageLabel; // 0x70
	[SerializeField] // RVA: 0xC78FAC Offset: 0xC78FAC VA: 0xC78FAC
	protected BoxCollider messageCollider; // 0x78
	[SerializeField] // RVA: 0xC78FBC Offset: 0xC78FBC VA: 0xC78FBC
	protected UILabel decideLabel; // 0x80
	[SerializeField] // RVA: 0xC78FCC Offset: 0xC78FCC VA: 0xC78FCC
	protected UILabel cancelLabel; // 0x88
	[SerializeField] // RVA: 0xC78FDC Offset: 0xC78FDC VA: 0xC78FDC
	protected UICommonButton decideButton; // 0x90
	[SerializeField] // RVA: 0xC78FEC Offset: 0xC78FEC VA: 0xC78FEC
	protected UICommonButton cancelButton; // 0x98
	[SerializeField] // RVA: 0xC78FFC Offset: 0xC78FFC VA: 0xC78FFC
	protected UIScrollView scrollView; // 0xA0
	private CancelConfirmDeckIdDialog.State state; // 0xA8
	[CompilerGeneratedAttribute] // RVA: 0xC7900C Offset: 0xC7900C VA: 0xC7900C
	[DebuggerBrowsableAttribute] // RVA: 0xC7900C Offset: 0xC7900C VA: 0xC7900C
	private CancelConfirmDeckIdDialog.CallbackFunc callbackFunc; // 0xB0
	protected Action closeCallbackFunc; // 0xB8
	[CompilerGeneratedAttribute] // RVA: 0xC79048 Offset: 0xC79048 VA: 0xC79048
	private static Func<int, bool> <>f__am$cache0; // 0x0

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x14E67FC Offset: 0x14E67FC VA: 0x14E67FC
	public void .ctor() { }

	// RVA: 0x14E686C Offset: 0x14E686C VA: 0x14E686C
	protected void add_callbackFunc(CancelConfirmDeckIdDialog.CallbackFunc value) { }

	// RVA: 0x14E6958 Offset: 0x14E6958 VA: 0x14E6958
	protected void remove_callbackFunc(CancelConfirmDeckIdDialog.CallbackFunc value) { }

	// RVA: 0x14E6A44 Offset: 0x14E6A44 VA: 0x14E6A44
	public void Init() { }

	// RVA: 0x14E6B94 Offset: 0x14E6B94 VA: 0x14E6B94
	public void Open(int nowSupportDeckId, int orgSupportDeckId, int[] nowFixMainSupportDeckIds, int[] nowFixEventSupportDeckIds, int[] orgFixMainSupportDeckIds, int[] orgFixEventSupportDeckIds, CancelConfirmDeckIdDialog.CallbackFunc callback) { }

	// RVA: 0x14E7134 Offset: 0x14E7134 VA: 0x14E7134
	private void SetDeckInfo(StringBuilder sb, int currentDeckId, int[] fixDeckIds, bool isMain) { }

	// RVA: 0x14E73B4 Offset: 0x14E73B4 VA: 0x14E73B4
	private string CreateDeckIDString(int deckNo, int deckID, bool isFixed, bool isMainQuestSupportDeck) { }

	// RVA: 0x14E7570 Offset: 0x14E7570 VA: 0x14E7570
	protected void EndOpen() { }

	// RVA: 0x14E757C Offset: 0x14E757C VA: 0x14E757C
