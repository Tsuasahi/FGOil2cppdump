	[SerializeField] // RVA: 0xCE8F64 Offset: 0xCE8F64 VA: 0xCE8F64
	private GameObject mSpotRoot; // 0x48
	[SerializeField] // RVA: 0xCE8F74 Offset: 0xCE8F74 VA: 0xCE8F74
	private GameObject mRoadRoot; // 0x50
	[SerializeField] // RVA: 0xCE8F84 Offset: 0xCE8F84 VA: 0xCE8F84
	private GameObject mGimmickRoot; // 0x58
	[SerializeField] // RVA: 0xCE8F94 Offset: 0xCE8F94 VA: 0xCE8F94
	private MapCamera mMapCamera; // 0x60
	private BoxCollider screenCollider; // 0x68
	private bool isLoadedVoice; // 0x70
	private bool isSkippedNext; // 0x71
	private Action endAct; // 0x78
	private SrcSpotBasePrefab lastDispSpot; // 0x80
	private bool hasFadeCommand; // 0x88
	private bool isRequestedStopBgm; // 0x89
	public QuestAfterAction.COMMAND_TYPE ActionMapTargetType; // 0x8C
	public int ActionMapTargetId; // 0x90

	// Properties
	public bool HasFadeCommand { get; set; }
	public bool IsRequestedStopBgm { get; set; }

	// Methods

	// RVA: 0x19DEFA0 Offset: 0x19DEFA0 VA: 0x19DEFA0
	public void .ctor() { }

	// RVA: 0x19DF040 Offset: 0x19DF040 VA: 0x19DF040
	public static void DeleteContinueData() { }

	// RVA: 0x19DF08C Offset: 0x19DF08C VA: 0x19DF08C
	public bool IsActiveCommand() { }

	// RVA: 0x19DF09C Offset: 0x19DF09C VA: 0x19DF09C
	public bool IsPlaying() { }

	// RVA: 0x19DF118 Offset: 0x19DF118 VA: 0x19DF118
	public SrcSpotBasePrefab GetLastDispSpot() { }

	// RVA: 0x19DF120 Offset: 0x19DF120 VA: 0x19DF120
	public void Init() { }

	// RVA: 0x19DF408 Offset: 0x19DF408 VA: 0x19DF408
	public void CreateCommandBuf(bool isBeforeAction = False) { }

	// RVA: 0x19E1408 Offset: 0x19E1408 VA: 0x19E1408
	private int[] GetMapGimmickId(int spotId) { }

	// RVA: 0x19E158C Offset: 0x19E158C VA: 0x19E158C
	public int[] getMapGmkOffIdList() { }

	// RVA: 0x19E1098 Offset: 0x19E1098 VA: 0x19E1098
	private QuestAfterAction.COMMAND_TYPE GetCommandType(int commandId) { }

	// RVA: 0x19E10EC Offset: 0x19E10EC VA: 0x19E10EC
	private void SetActionMap(QuestAfterAction.Command com) { }

	// RVA: 0x19E15EC Offset: 0x19E15EC VA: 0x19E15EC
	public bool IsExistCommand(QuestAfterAction.COMMAND_TYPE commandType, int commandTypeId) { }

	// RVA: 0x19E16C4 Offset: 0x19E16C4 VA: 0x19E16C4
	public void LoadVoice(Action endAct) { }

	// RVA: 0x19E1798 Offset: 0x19E1798 VA: 0x19E1798
	private void LoadVoice(List<QuestAfterAction.VoiceInfo> svtVInfos, Action endAct) { }

	// RVA: 0x19E0720 Offset: 0x19E0720 VA: 0x19E0720
	public void releaseVoice() { }

	// RVA: 0x19E00F8 Offset: 0x19E00F8 VA: 0x19E00F8
	private void LoadTerminalTransitionInfo() { }

	// RVA: 0x19E1AA8 Offset: 0x19E1AA8 VA: 0x19E1AA8
	private void Update() { }

	// RVA: 0x19E1B08 Offset: 0x19E1B08 VA: 0x19E1B08
	public void Play(Action endAct) { }

	// RVA: 0x19E1C28 Offset: 0x19E1C28 VA: 0x19E1C28
	public void OnEnd() { }

	// RVA: 0x19DF0B8 Offset: 0x19DF0B8 VA: 0x19DF0B8
	public QuestAfterAction.STATE GetState() { }

	// RVA: 0x19DF398 Offset: 0x19DF398 VA: 0x19DF398
	public void SetState(QuestAfterAction.STATE state) { }

	// RVA: -1 Offset: -1
	private T GetMapComponent<T>(QuestAfterAction.COMMAND_TYPE comType, int id, QuestAfterAction.StateMain state) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21900B8 Offset: 0x21900B8 VA: 0x21900B8
	|-QuestAfterAction.GetMapComponent<MapGimmickComponent>
	|-QuestAfterAction.GetMapComponent<SrcSpotBasePrefab>
	|-QuestAfterAction.GetMapComponent<object>
	|-QuestAfterAction.GetMapComponent<srcLineSprite>
	*/

	// RVA: 0x19E1CC4 Offset: 0x19E1CC4 VA: 0x19E1CC4
	private void RequestMapChange(QuestAfterAction.COMMAND_TYPE cType, int cTarget) { }

	// RVA: 0x19E1DB0 Offset: 0x19E1DB0 VA: 0x19E1DB0
	private string MapObjName(QuestAfterAction.COMMAND_TYPE comType, int id) { }

	// RVA: 0x19E1EA4 Offset: 0x19E1EA4 VA: 0x19E1EA4
	private bool IsMapChangeable() { }

	// RVA: 0x19E1F34 Offset: 0x19E1F34 VA: 0x19E1F34
	public bool get_HasFadeCommand() { }

	// RVA: 0x19E1F3C Offset: 0x19E1F3C VA: 0x19E1F3C
	private void set_HasFadeCommand(bool value) { }

	// RVA: 0x19E1F48 Offset: 0x19E1F48 VA: 0x19E1F48
	public bool get_IsRequestedStopBgm() { }

	// RVA: 0x19E1F50 Offset: 0x19E1F50 VA: 0x19E1F50
	private void set_IsRequestedStopBgm(bool value) { }

	// RVA: 0x19E1F5C Offset: 0x19E1F5C VA: 0x19E1F5C
	public bool IsExistSpotReveal(int spotId) { }

	// RVA: 0x19E2034 Offset: 0x19E2034 VA: 0x19E2034
	public void SkipToNextAction() { }

	// RVA: 0x19E0924 Offset: 0x19E0924 VA: 0x19E0924
	public static string[] GetBeforeAction(int questId, int phase) { }

	// RVA: 0x19E2040 Offset: 0x19E2040 VA: 0x19E2040
	public static string[] GetAfterAction(int questId, int phase) { }
}

// Namespace: 
public enum QuestAfterAction.COMMAND // TypeDefIndex: 11071
{
	// Fields
	public int value__; // 0x0
	public const QuestAfterAction.COMMAND SPOT_HIDE = 100;
	public const QuestAfterAction.COMMAND SPOT_GRAY = 101;
	public const QuestAfterAction.COMMAND SPOT_DISP = 102;
	public const QuestAfterAction.COMMAND SPOT_CHANGE = 103;
	public const QuestAfterAction.COMMAND SPOT_HIDE_QUICK = 110;
	public const QuestAfterAction.COMMAND SPOT_GRAY_QUICK = 111;
	public const QuestAfterAction.COMMAND SPOT_DISP_QUICK = 112;
	public const QuestAfterAction.COMMAND SPOT_CHANGE_QUICK = 113;
	public const QuestAfterAction.COMMAND ROAD_HIDE = 200;
	public const QuestAfterAction.COMMAND ROAD_GRAY = 201;
	public const QuestAfterAction.COMMAND ROAD_DISP = 202;
	public const QuestAfterAction.COMMAND CAM_MV_SPOT = 300;
	public const QuestAfterAction.COMMAND CAM_MV_ROAD = 301;
	public const QuestAfterAction.COMMAND CAM_MV_GIMMICK = 302;
	public const QuestAfterAction.COMMAND CAM_MV_COORD = 303;
	public const QuestAfterAction.COMMAND CAM_ZOOM = 304;
	public const QuestAfterAction.COMMAND CAM_MV_ZOOM_SPOT = 305;
	public const QuestAfterAction.COMMAND CAM_MV_ZOOM_ROAD = 306;
	public const QuestAfterAction.COMMAND CAM_MV_ZOOM_GIMMICK = 307;
	public const QuestAfterAction.COMMAND CAM_MV_ZOOM_COORD = 308;
	public const QuestAfterAction.COMMAND GIMMICK_HIDE = 400;
	public const QuestAfterAction.COMMAND GIMMICK_DISP = 401;
	public const QuestAfterAction.COMMAND GIMMICK_HIDE_QUICK = 402;
	public const QuestAfterAction.COMMAND GIMMICK_DISP_QUICK = 403;
	public const QuestAfterAction.COMMAND GIMMICK_MV_COORD = 404;
	public const QuestAfterAction.COMMAND GIMMICK_DISP_WITH_FADE = 405;
	public const QuestAfterAction.COMMAND GIMMICK_TWEEN_COLOR = 406;
	public const QuestAfterAction.COMMAND GIMMICK_SET_COLOR = 407;
	public const QuestAfterAction.COMMAND GIMMICK_DISP_UPDATE = 408;
	public const QuestAfterAction.COMMAND GIMMICK_DISP_PILE_UP = 409;
	public const QuestAfterAction.COMMAND QUEST_FOCUS = 500;
	public const QuestAfterAction.COMMAND QUEST_UNFOCUS = 501;
	public const QuestAfterAction.COMMAND PLAYER_FOCUS = 510;
	public const QuestAfterAction.COMMAND AFTER_FADE_IN = 520;
	public const QuestAfterAction.COMMAND QUEST_START = 530;
	public const QuestAfterAction.COMMAND MAP_CHANGE = 540;
	public const QuestAfterAction.COMMAND START_MAP_CHANGE = 550;
	public const QuestAfterAction.COMMAND MESSAGE_WINDOW = 600;
	public const QuestAfterAction.COMMAND MESSAGE_WINDOW_MST = 601;
	public const QuestAfterAction.COMMAND MESSAGE_OTHER_WINDOW = 602;
	public const QuestAfterAction.COMMAND MESSAGE_OTHER_WINDOW_MST = 603;
	public const QuestAfterAction.COMMAND MESSAGE_OTHER_WINDOW_BOOST_SUPPORT = 604;
	public const QuestAfterAction.COMMAND EVENT_REWARD = 700;
	public const QuestAfterAction.COMMAND PLAY_VOICE = 800;
	public const QuestAfterAction.COMMAND PLAY_SE = 801;
	public const QuestAfterAction.COMMAND BGM_STOP = 850;
	public const QuestAfterAction.COMMAND BGM_PLAY = 851;
	public const QuestAfterAction.COMMAND WAIT = 900;
}

// Namespace: 
public enum QuestAfterAction.COMMAND_TYPE // TypeDefIndex: 11072
{
	// Fields
	public int value__; // 0x0
	public const QuestAfterAction.COMMAND_TYPE SPOT = 0;
	public const QuestAfterAction.COMMAND_TYPE SPOT_ROAD = 1;
	public const QuestAfterAction.COMMAND_TYPE MAP_GIMMICK = 2;
	public const QuestAfterAction.COMMAND_TYPE SELECT_MAP = 3;
	public const QuestAfterAction.COMMAND_TYPE SIZEOF = 4;
	public const QuestAfterAction.COMMAND_TYPE NONE = -1;
}

// Namespace: 
private class QuestAfterAction.Command // TypeDefIndex: 11073
{
	// Fields
	private const int VOICE_ID_SPLIT_COUNT = 2;
	private const int SVT_VOICE_ID_SPLIT_COUNT = 3;
	public int id; // 0x10
	public string param; // 0x18

	// Methods

	// RVA: 0x19E0B14 Offset: 0x19E0B14 VA: 0x19E0B14
	public void .ctor() { }

	// RVA: 0x19E0B1C Offset: 0x19E0B1C VA: 0x19E0B1C
	public string GetAvailableRandomVoice(out int svtId) { }

	// RVA: 0x19E2354 Offset: 0x19E2354 VA: 0x19E2354
	public int GetSvtId(string str) { }

	// RVA: 0x19E2450 Offset: 0x19E2450 VA: 0x19E2450
	public string GetVoiceId(string str) { }

	// RVA: 0x19E2578 Offset: 0x19E2578 VA: 0x19E2578
	public string GetBgmName() { }
}

// Namespace: 
private class QuestAfterAction.VoiceInfo // TypeDefIndex: 11074
{
	// Fields
	public int svtId; // 0x10
	public string voiceName; // 0x18

	// Methods

	// RVA: 0x1AF41C0 Offset: 0x1AF41C0 VA: 0x1AF41C0
	public void .ctor(int sId, string vName) { }
}

// Namespace: 
public enum QuestAfterAction.STATE // TypeDefIndex: 11075
{
	// Fields
	public int value__; // 0x0
	public const QuestAfterAction.STATE NONE = 0;
	public const QuestAfterAction.STATE MAIN = 1;
	public const QuestAfterAction.STATE SIZEOF = 2;
}

// Namespace: 
private class QuestAfterAction.StateNone : IState<QuestAfterAction> // TypeDefIndex: 11076
{
	// Methods

	// RVA: 0x1AF41AC Offset: 0x1AF41AC VA: 0x1AF41AC
	public void .ctor() { }

	// RVA: 0x1AF41B4 Offset: 0x1AF41B4 VA: 0x1AF41B4 Slot: 4
	public void begin(QuestAfterAction that) { }

	// RVA: 0x1AF41B8 Offset: 0x1AF41B8 VA: 0x1AF41B8 Slot: 5
	public void update(QuestAfterAction that) { }

	// RVA: 0x1AF41BC Offset: 0x1AF41BC VA: 0x1AF41BC Slot: 6
	public void end(QuestAfterAction that) { }
}

// Namespace: 
private class QuestAfterAction.StateMain : IState<QuestAfterAction> // TypeDefIndex: 11077
{
	// Fields
	private QuestAfterAction that; // 0x10
	public bool IsAnimDoing; // 0x18
	private float waitStartTime; // 0x1C
	private float waitTime; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCE8FA4 Offset: 0xCE8FA4 VA: 0xCE8FA4
	private static Action <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCE8FB4 Offset: 0xCE8FB4 VA: 0xCE8FB4
	private static Action <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCE8FC4 Offset: 0xCE8FC4 VA: 0xCE8FC4
	private static ScriptManager.CallbackFunc <>f__am$cache2; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCE8FD4 Offset: 0xCE8FD4 VA: 0xCE8FD4
	private static NetworkManager.ResultCallbackFunc <>f__am$cache3; // 0x18

	// Methods

	// RVA: 0x19DF390 Offset: 0x19DF390 VA: 0x19DF390
	public void .ctor() { }

	// RVA: 0x19E26C0 Offset: 0x19E26C0 VA: 0x19E26C0 Slot: 4
	public void begin(QuestAfterAction that) { }

	// RVA: 0x19E2708 Offset: 0x19E2708 VA: 0x19E2708 Slot: 5
	public void update(QuestAfterAction that) { }

	// RVA: 0x19E688C Offset: 0x19E688C VA: 0x19E688C Slot: 6
	public void end(QuestAfterAction that) { }

	// RVA: 0x19E272C Offset: 0x19E272C VA: 0x19E272C
	private void UpdateAnim(QuestAfterAction that) { }

	// RVA: 0x19E6838 Offset: 0x19E6838 VA: 0x19E6838
	private void Wait() { }

	// RVA: 0x19E6890 Offset: 0x19E6890 VA: 0x19E6890
	public void EndAnim() { }

	// RVA: 0x19E6944 Offset: 0x19E6944 VA: 0x19E6944
	private void ForceEndAnim(bool deleteKey) { }

	// RVA: 0x19E69A0 Offset: 0x19E69A0 VA: 0x19E69A0
	private void onEnd(bool deleteKey) { }

	// RVA: 0x19E6A60 Offset: 0x19E6A60 VA: 0x19E6A60
	private void StartMapGimmick() { }

	[CompilerGeneratedAttribute] // RVA: 0xD40DD4 Offset: 0xD40DD4 VA: 0xD40DD4
	// RVA: 0x19E6CA4 Offset: 0x19E6CA4 VA: 0x19E6CA4
	private static void <UpdateAnim>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD40DE4 Offset: 0xD40DE4 VA: 0xD40DE4
	// RVA: 0x19E6CA8 Offset: 0x19E6CA8 VA: 0x19E6CA8
	private static void <UpdateAnim>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xD40DF4 Offset: 0xD40DF4 VA: 0xD40DF4
	// RVA: 0x19E6DE4 Offset: 0x19E6DE4 VA: 0x19E6DE4
	private static void <UpdateAnim>m__2(bool isExit) { }

	[CompilerGeneratedAttribute] // RVA: 0xD40E04 Offset: 0xD40E04 VA: 0xD40E04
	// RVA: 0x19E6F44 Offset: 0x19E6F44 VA: 0x19E6F44
	private static void <UpdateAnim>m__3(string jsonstr) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1B10 Offset: 0xCB1B10 VA: 0xCB1B10
private sealed class QuestAfterAction.StateMain.<UpdateAnim>c__AnonStoreyC // TypeDefIndex: 11078
{
	// Fields
	internal QuestAfterAction that; // 0x10
	internal QuestAfterAction.StateMain $this; // 0x18

	// Methods

	// RVA: 0x1AF3E7C Offset: 0x1AF3E7C VA: 0x1AF3E7C
	public void .ctor() { }

	// RVA: 0x1AF3E84 Offset: 0x1AF3E84 VA: 0x1AF3E84
	internal void <>m__0() { }

	// RVA: 0x1AF3EB4 Offset: 0x1AF3EB4 VA: 0x1AF3EB4
	internal void <>m__1() { }

	// RVA: 0x1AF3EE4 Offset: 0x1AF3EE4 VA: 0x1AF3EE4
	internal void <>m__2() { }

	// RVA: 0x1AF3F14 Offset: 0x1AF3F14 VA: 0x1AF3F14
	internal void <>m__3() { }

	// RVA: 0x1AF3F44 Offset: 0x1AF3F44 VA: 0x1AF3F44
	internal void <>m__4() { }

	// RVA: 0x1AF3F74 Offset: 0x1AF3F74 VA: 0x1AF3F74
	internal void <>m__5() { }

	// RVA: 0x1AF3FA4 Offset: 0x1AF3FA4 VA: 0x1AF3FA4
	internal void <>m__6() { }

	// RVA: 0x1AF3FD4 Offset: 0x1AF3FD4 VA: 0x1AF3FD4
	internal void <>m__7() { }

	// RVA: 0x1AF4004 Offset: 0x1AF4004 VA: 0x1AF4004
	internal void <>m__8() { }

	// RVA: 0x1AF4034 Offset: 0x1AF4034 VA: 0x1AF4034
	internal void <>m__9() { }

	// RVA: 0x1AF4064 Offset: 0x1AF4064 VA: 0x1AF4064
	internal void <>m__A() { }

	// RVA: 0x1AF40BC Offset: 0x1AF40BC VA: 0x1AF40BC
	internal void <>m__B() { }

	// RVA: 0x1AF40EC Offset: 0x1AF40EC VA: 0x1AF40EC
	internal void <>m__C() { }

	// RVA: 0x1AF411C Offset: 0x1AF411C VA: 0x1AF411C
	internal void <>m__D() { }

	// RVA: 0x1AF414C Offset: 0x1AF414C VA: 0x1AF414C
	internal void <>m__E() { }

	// RVA: 0x1AF417C Offset: 0x1AF417C VA: 0x1AF417C
	internal void <>m__F() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1B20 Offset: 0xCB1B20 VA: 0xCB1B20
private sealed class QuestAfterAction.StateMain.<UpdateAnim>c__AnonStorey0 // TypeDefIndex: 11079
{
	// Fields
	internal SrcSpotBasePrefab spot; // 0x10
	internal QuestAfterAction.StateMain.<UpdateAnim>c__AnonStoreyC <>f__ref$12; // 0x18

	// Methods

	// RVA: 0x1AF34B0 Offset: 0x1AF34B0 VA: 0x1AF34B0
	public void .ctor() { }

	// RVA: 0x1AF34B8 Offset: 0x1AF34B8 VA: 0x1AF34B8
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1B30 Offset: 0xCB1B30 VA: 0xCB1B30
private sealed class QuestAfterAction.StateMain.<UpdateAnim>c__AnonStorey1 // TypeDefIndex: 11080
{
	// Fields
	internal SrcSpotBasePrefab spot; // 0x10
	internal QuestAfterAction.StateMain.<UpdateAnim>c__AnonStoreyC <>f__ref$12; // 0x18

	// Methods

	// RVA: 0x1AF3554 Offset: 0x1AF3554 VA: 0x1AF3554
	public void .ctor() { }

	// RVA: 0x1AF355C Offset: 0x1AF355C VA: 0x1AF355C
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1B40 Offset: 0xCB1B40 VA: 0xCB1B40
private sealed class QuestAfterAction.StateMain.<UpdateAnim>c__AnonStorey2 // TypeDefIndex: 11081
{
	// Fields
	internal SrcSpotBasePrefab spot; // 0x10
	internal QuestAfterAction.StateMain.<UpdateAnim>c__AnonStoreyC <>f__ref$12; // 0x18

	// Methods

	// RVA: 0x1AF35F8 Offset: 0x1AF35F8 VA: 0x1AF35F8
	public void .ctor() { }

	// RVA: 0x1AF3600 Offset: 0x1AF3600 VA: 0x1AF3600
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1B50 Offset: 0xCB1B50 VA: 0xCB1B50
private sealed class QuestAfterAction.StateMain.<UpdateAnim>c__AnonStorey3 // TypeDefIndex: 11082
{
	// Fields
	internal srcLineSprite roadSprite; // 0x10
	internal QuestAfterAction.StateMain.<UpdateAnim>c__AnonStoreyC <>f__ref$12; // 0x18

	// Methods

	// RVA: 0x1AF369C Offset: 0x1AF369C VA: 0x1AF369C
	public void .ctor() { }

	// RVA: 0x1AF36A4 Offset: 0x1AF36A4 VA: 0x1AF36A4
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1B60 Offset: 0xCB1B60 VA: 0xCB1B60
private sealed class QuestAfterAction.StateMain.<UpdateAnim>c__AnonStorey4 // TypeDefIndex: 11083
{
	// Fields
	internal srcLineSprite roadSprite; // 0x10
	internal QuestAfterAction.StateMain.<UpdateAnim>c__AnonStoreyC <>f__ref$12; // 0x18

	// Methods

	// RVA: 0x1AF3720 Offset: 0x1AF3720 VA: 0x1AF3720
	public void .ctor() { }

	// RVA: 0x1AF3728 Offset: 0x1AF3728 VA: 0x1AF3728
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1B70 Offset: 0xCB1B70 VA: 0xCB1B70
private sealed class QuestAfterAction.StateMain.<UpdateAnim>c__AnonStorey5 // TypeDefIndex: 11084
{
	// Fields
	internal srcLineSprite roadSprite; // 0x10
	internal QuestAfterAction.StateMain.<UpdateAnim>c__AnonStoreyC <>f__ref$12; // 0x18

	// Methods

	// RVA: 0x1AF37A4 Offset: 0x1AF37A4 VA: 0x1AF37A4
	public void .ctor() { }

	// RVA: 0x1AF37AC Offset: 0x1AF37AC VA: 0x1AF37AC
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1B80 Offset: 0xCB1B80 VA: 0xCB1B80
private sealed class QuestAfterAction.StateMain.<UpdateAnim>c__AnonStorey6 // TypeDefIndex: 11085
{
	// Fields
	internal MapGimmickComponent mapGimmick; // 0x10
	internal QuestAfterAction.StateMain.<UpdateAnim>c__AnonStoreyC <>f__ref$12; // 0x18

	// Methods

	// RVA: 0x1AF3828 Offset: 0x1AF3828 VA: 0x1AF3828
	public void .ctor() { }

	// RVA: 0x1AF3830 Offset: 0x1AF3830 VA: 0x1AF3830
	internal void <>m__0() { }

	// RVA: 0x1AF387C Offset: 0x1AF387C VA: 0x1AF387C
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1B90 Offset: 0xCB1B90 VA: 0xCB1B90
private sealed class QuestAfterAction.StateMain.<UpdateAnim>c__AnonStorey7 // TypeDefIndex: 11086
{
	// Fields
	internal MapGimmickComponent mapGimmick; // 0x10
	internal QuestAfterAction.StateMain.<UpdateAnim>c__AnonStoreyC <>f__ref$12; // 0x18

	// Methods

	// RVA: 0x1AF38F8 Offset: 0x1AF38F8 VA: 0x1AF38F8
	public void .ctor() { }

	// RVA: 0x1AF3900 Offset: 0x1AF3900 VA: 0x1AF3900
	internal void <>m__0() { }

	// RVA: 0x1AF394C Offset: 0x1AF394C VA: 0x1AF394C
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1BA0 Offset: 0xCB1BA0 VA: 0xCB1BA0
private sealed class QuestAfterAction.StateMain.<UpdateAnim>c__AnonStorey8 // TypeDefIndex: 11087
{
	// Fields
	internal MapGimmickComponent mapGimmick; // 0x10
	internal QuestAfterAction.StateMain.<UpdateAnim>c__AnonStoreyC <>f__ref$12; // 0x18

	// Methods

	// RVA: 0x1AF39C8 Offset: 0x1AF39C8 VA: 0x1AF39C8
	public void .ctor() { }

	// RVA: 0x1AF39D0 Offset: 0x1AF39D0 VA: 0x1AF39D0
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1BB0 Offset: 0xCB1BB0 VA: 0xCB1BB0
private sealed class QuestAfterAction.StateMain.<UpdateAnim>c__AnonStorey9 // TypeDefIndex: 11088
{
	// Fields
	internal MapGimmickComponent mapGimmick; // 0x10
	internal string[] paramsStr; // 0x18
	internal QuestAfterAction.StateMain.<UpdateAnim>c__AnonStoreyC <>f__ref$12; // 0x20

	// Methods

	// RVA: 0x1AF3A4C Offset: 0x1AF3A4C VA: 0x1AF3A4C
	public void .ctor() { }

	// RVA: 0x1AF3A54 Offset: 0x1AF3A54 VA: 0x1AF3A54
	internal void <>m__0() { }
}

// Namespace: 
private sealed class QuestAfterAction.StateMain.<UpdateAnim>c__AnonStorey9.<UpdateAnim>c__AnonStoreyA // TypeDefIndex: 11089
{
	// Fields
	internal TweenColor tween; // 0x10
	internal QuestAfterAction.StateMain.<UpdateAnim>c__AnonStoreyC <>f__ref$12; // 0x18
	internal QuestAfterAction.StateMain.<UpdateAnim>c__AnonStorey9 <>f__ref$9; // 0x20

	// Methods

	// RVA: 0x1AF3CDC Offset: 0x1AF3CDC VA: 0x1AF3CDC
	public void .ctor() { }

	// RVA: 0x1AF3CE4 Offset: 0x1AF3CE4 VA: 0x1AF3CE4
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1BC0 Offset: 0xCB1BC0 VA: 0xCB1BC0
private sealed class QuestAfterAction.StateMain.<UpdateAnim>c__AnonStoreyB // TypeDefIndex: 11090
{
	// Fields
	internal MapGimmickComponent mapGimmick; // 0x10
	internal QuestAfterAction.StateMain.<UpdateAnim>c__AnonStoreyC <>f__ref$12; // 0x18

	// Methods

	// RVA: 0x1AF3D7C Offset: 0x1AF3D7C VA: 0x1AF3D7C
	public void .ctor() { }

	// RVA: 0x1AF3D84 Offset: 0x1AF3D84 VA: 0x1AF3D84
	internal void <>m__0() { }

	// RVA: 0x1AF3E00 Offset: 0x1AF3E00 VA: 0x1AF3E00
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1AF0 Offset: 0xCB1AF0 VA: 0xCB1AF0
private sealed class QuestAfterAction.<LoadVoice>c__AnonStorey0 // TypeDefIndex: 11091
{
	// Fields
	internal List<QuestAfterAction.VoiceInfo> svtVInfos; // 0x10
	internal Action endAct; // 0x18
	internal QuestAfterAction $this; // 0x20

	// Methods

	// RVA: 0x19E1AA0 Offset: 0x19E1AA0 VA: 0x19E1AA0
	public void .ctor() { }

	// RVA: 0x19E2230 Offset: 0x19E2230 VA: 0x19E2230
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1B00 Offset: 0xCB1B00 VA: 0xCB1B00
private sealed class QuestAfterAction.<Play>c__AnonStorey1 // TypeDefIndex: 11092
{
	// Fields
	internal Action endAct; // 0x10

	// Methods

	// RVA: 0x19E1C20 Offset: 0x19E1C20 VA: 0x19E1C20
	public void .ctor() { }

	// RVA: 0x19E22C4 Offset: 0x19E22C4 VA: 0x19E22C4
	internal void <>m__0() { }
}

// Namespace: 
public class QuestAfterActionDialog : BaseDialog // TypeDefIndex: 11093
{
	// Fields
	[SerializeField] // RVA: 0xCE8FE4 Offset: 0xCE8FE4 VA: 0xCE8FE4
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xCE8FF4 Offset: 0xCE8FF4 VA: 0xCE8FF4
	private UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xCE9004 Offset: 0xCE9004 VA: 0xCE9004
	private UIScrollView scrollView; // 0x68
	[SerializeField] // RVA: 0xCE9014 Offset: 0xCE9014 VA: 0xCE9014
	private UILabel closeLabel; // 0x70
	private Action closeAction; // 0x78

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1AF41FC Offset: 0x1AF41FC VA: 0x1AF41FC
	public void .ctor() { }

	// RVA: 0x1AF4264 Offset: 0x1AF4264 VA: 0x1AF4264
	private void Init() { }

	// RVA: 0x1AF438C Offset: 0x1AF438C VA: 0x1AF438C
	private void ResetScrollPosition() { }

	// RVA: 0x1AF44BC Offset: 0x1AF44BC VA: 0x1AF44BC
	public void Open(string title, string message, Action closeAction) { }

	// RVA: 0x1AF4554 Offset: 0x1AF4554 VA: 0x1AF4554
	public void OnClickCloseButton() { }

	// RVA: 0x1AF45F8 Offset: 0x1AF45F8 VA: 0x1AF45F8 Slot: 6
	protected override string get_closeBtnPath() { }

	[CompilerGeneratedAttribute] // RVA: 0xD40E14 Offset: 0xD40E14 VA: 0xD40E14
	// RVA: 0x1AF4640 Offset: 0x1AF4640 VA: 0x1AF4640
	private void <OnClickCloseButton>m__0() { }
}

// Namespace: 
public class QuestBoardInformaionText // TypeDefIndex: 11094
{
	// Fields
	private static readonly string QUEST_BOARD_INFO_FRAME_NAME; // 0x0
	private static readonly Vector3 INFO_FRAME_OFFSET; // 0x8
	private static readonly int INFO_FRAME_SIDE_SIZE; // 0x14
	private static readonly int INFO_FONT_SIZE; // 0x18
	private static readonly int INFO_LABEL_BASE_WIDTH; // 0x1C
	private static readonly Color CAMPAIGN_TOP_COLOR; // 0x20
	private static readonly Color CAMPAIGN_BOTTOM_COLOR; // 0x30
	private static readonly Color NORMAL_TOP_COLOR; // 0x40
	private static readonly Color NORMAL_BOTTOM_COLOR; // 0x50
	private BoardMessageEntity boardMessageEnt; // 0x10
	private EventCampaignEntity eventCampaignEnt; // 0x18
	private EventEntity eventEntity; // 0x20
	private string dispText; // 0x28
	private long time; // 0x30
	private bool isCampaign; // 0x38
	private bool isColorSetting; // 0x39
	private Color color; // 0x3C
	private int boardId; // 0x4C
	private int sideSizeOffset; // 0x50
	private Vector3 boardOffset; // 0x54
	private bool isChangedText; // 0x60
	private bool isFrameBg; // 0x61
	private TerminalBoardOptionTextData dispTextExtend; // 0x68

	// Methods

	// RVA: 0x1AF5694 Offset: 0x1AF5694 VA: 0x1AF5694
	public void .ctor(string dispText, long time, bool isCampaign = False, bool isColorSetting = False, Color color, int boardId = -1, int sideSizeOffset = 0, Vector3 boardOffset, bool isFrameBg = True, EventCampaignEntity eventCampaignEnt, TerminalBoardOptionTextData dispTextExtend) { }

	// RVA: 0x1AF5840 Offset: 0x1AF5840 VA: 0x1AF5840
	public void .ctor(BoardMessageEntity boardMessageEntity, string dispText, long time, long checkTime, EventCampaignEntity eventCampaignEnt) { }

	// RVA: 0x1AF59D8 Offset: 0x1AF59D8 VA: 0x1AF59D8
	public void .ctor(EventEntity eventEntity, string dispText, long time, long checkTime, EventCampaignEntity eventCampaignEnt) { }

	// RVA: 0x1AF576C Offset: 0x1AF576C VA: 0x1AF576C
	public void SetParam(bool isColorSetting = False, Color color, int boardId = -1, int sideSizeOffset = 0, Vector3 boardOffset, bool isFrameBg = True) { }

	// RVA: 0x1AF58A4 Offset: 0x1AF58A4 VA: 0x1AF58A4
	public void SetParamFromScript(long checkTime) { }

	// RVA: 0x1AF5A64 Offset: 0x1AF5A64 VA: 0x1AF5A64
	public void SetTime(ref BoardOptionTextWithIconComponent component, ref UISprite frameSprite) { }

	// RVA: 0x1AF610C Offset: 0x1AF610C VA: 0x1AF610C
	public void Update(ref BoardOptionTextWithIconComponent component, ref UISprite frameSprite, long checkTime) { }

	// RVA: 0x1AF5C64 Offset: 0x1AF5C64 VA: 0x1AF5C64
	public bool ChangeText(ref BoardOptionTextWithIconComponent component) { }

	// RVA: 0x1AF6164 Offset: 0x1AF6164 VA: 0x1AF6164
	public void ChangeBehindText() { }

	// RVA: 0x1AF5794 Offset: 0x1AF5794 VA: 0x1AF5794
	private void CreateDispTextExtendIfNotExists() { }

	// RVA: 0x1AF658C Offset: 0x1AF658C VA: 0x1AF658C
	private int GetDaliyDropUpRestCount(int eventId) { }

	// RVA: 0x1AF6830 Offset: 0x1AF6830 VA: 0x1AF6830
	private string GetDaliyDropUpRestTimeStr() { }

	// RVA: 0x1AF5DC0 Offset: 0x1AF5DC0 VA: 0x1AF5DC0
	public void SetFrameSprite(ref BoardOptionTextWithIconComponent component, ref UISprite frameSprite, int boardId, Vector3 boardOffset, int sideSizeOffset) { }

	// RVA: 0x1AF5AB8 Offset: 0x1AF5AB8 VA: 0x1AF5AB8
	public void SetTextColor(ref BoardOptionTextWithIconComponent component) { }

	// RVA: 0x1AF6914 Offset: 0x1AF6914 VA: 0x1AF6914
	public bool IsQuestOpened() { }

	// RVA: 0x1AF5A3C Offset: 0x1AF5A3C VA: 0x1AF5A3C
	private BoardMessageEntity.TimeData GetBoardMessageScriptData(long checkTime) { }

	// RVA: 0x1AF5A50 Offset: 0x1AF5A50 VA: 0x1AF5A50
	private EventEntity.ScriptData GetEventScriptData(long checkTime) { }

	// RVA: 0x1AF69A8 Offset: 0x1AF69A8 VA: 0x1AF69A8
	private static void .cctor() { }
}

// Namespace: 
public class QuestBoardListEffectAppearComponent : QuestBoardListEffectComponent // TypeDefIndex: 11095
{
	// Fields
	[SerializeField] // RVA: 0xCE9024 Offset: 0xCE9024 VA: 0xCE9024
	[HeaderAttribute] // RVA: 0xCE9024 Offset: 0xCE9024 VA: 0xCE9024
	public float boardMovingStartTime; // 0x54
	[SerializeField] // RVA: 0xCE9070 Offset: 0xCE9070 VA: 0xCE9070
	[HeaderAttribute] // RVA: 0xCE9070 Offset: 0xCE9070 VA: 0xCE9070
	public float boardMovingTime; // 0x58
	[SerializeField] // RVA: 0xCE90BC Offset: 0xCE90BC VA: 0xCE90BC
	[HeaderAttribute] // RVA: 0xCE90BC Offset: 0xCE90BC VA: 0xCE90BC
	public Easing.TYPE boardMoveEasingType; // 0x5C
	[SerializeField] // RVA: 0xCE9108 Offset: 0xCE9108 VA: 0xCE9108
	[HeaderAttribute] // RVA: 0xCE9108 Offset: 0xCE9108 VA: 0xCE9108
	public float targetBoardForceShiftPosY; // 0x60
	[SerializeField] // RVA: 0xCE9154 Offset: 0xCE9154 VA: 0xCE9154
	[HeaderAttribute] // RVA: 0xCE9154 Offset: 0xCE9154 VA: 0xCE9154
	public float bgmStartTime; // 0x64
	[SerializeField] // RVA: 0xCE91A0 Offset: 0xCE91A0 VA: 0xCE91A0
	[HeaderAttribute] // RVA: 0xCE91A0 Offset: 0xCE91A0 VA: 0xCE91A0
	public float bgmfadeTime; // 0x68

	// Methods

	// RVA: 0x1AF6B54 Offset: 0x1AF6B54 VA: 0x1AF6B54
	public void .ctor() { }
}

// Namespace: 
public class QuestBoardListEffectComponent : MonoBehaviour // TypeDefIndex: 11096
{
	// Fields
	private CStateManager<QuestBoardListEffectComponent> FSM; // 0x18
	private QuestBoardListEffectComponent.STATE state; // 0x20
	private Action EndAct; // 0x28
	private Animation normalAnimation; // 0x30
	private SimpleAnimation simpleAnimation; // 0x38
	[SerializeField] // RVA: 0xCE91EC Offset: 0xCE91EC VA: 0xCE91EC
	public float playingActStartTime; // 0x40
	private Action OnPlayingAct; // 0x48
	private bool isPlayingAct; // 0x50

	// Methods

	// RVA: 0x1AF6BEC Offset: 0x1AF6BEC VA: 0x1AF6BEC
	public void .ctor() { }

	// RVA: 0x1AF6BF4 Offset: 0x1AF6BF4 VA: 0x1AF6BF4
	private void Awake() { }

	// RVA: 0x1AF6D90 Offset: 0x1AF6D90 VA: 0x1AF6D90
	private void Update() { }

	// RVA: 0x1AF6DF0 Offset: 0x1AF6DF0 VA: 0x1AF6DF0
	public void Init(bool isInitDisp = False) { }

	// RVA: 0x1AF7194 Offset: 0x1AF7194 VA: 0x1AF7194
	public void Play(Action OnPlayingAct, Action end_act) { }

	// RVA: 0x1AF71F8 Offset: 0x1AF71F8 VA: 0x1AF71F8
	public QuestBoardListEffectComponent.STATE GetState() { }

	// RVA: 0x1AF6D20 Offset: 0x1AF6D20 VA: 0x1AF6D20
	public void SetState(QuestBoardListEffectComponent.STATE state) { }
}

// Namespace: 
public enum QuestBoardListEffectComponent.STATE // TypeDefIndex: 11097
{
	// Fields
	public int value__; // 0x0
	public const QuestBoardListEffectComponent.STATE NONE = 0;
	public const QuestBoardListEffectComponent.STATE PLAY = 1;
	public const QuestBoardListEffectComponent.STATE SIZEOF = 2;
}

// Namespace: 
private class QuestBoardListEffectComponent.StateNone : IState<QuestBoardListEffectComponent> // TypeDefIndex: 11098
{
	// Methods

	// RVA: 0x1AF6D10 Offset: 0x1AF6D10 VA: 0x1AF6D10
	public void .ctor() { }

	// RVA: 0x1AF7258 Offset: 0x1AF7258 VA: 0x1AF7258 Slot: 4
	public void begin(QuestBoardListEffectComponent that) { }

	// RVA: 0x1AF725C Offset: 0x1AF725C VA: 0x1AF725C Slot: 5
	public void update(QuestBoardListEffectComponent that) { }

	// RVA: 0x1AF7260 Offset: 0x1AF7260 VA: 0x1AF7260 Slot: 6
	public void end(QuestBoardListEffectComponent that) { }
}

// Namespace: 
private class QuestBoardListEffectComponent.StatePlay : IState<QuestBoardListEffectComponent> // TypeDefIndex: 11099
{
	// Methods

	// RVA: 0x1AF6D18 Offset: 0x1AF6D18 VA: 0x1AF6D18
	public void .ctor() { }

	// RVA: 0x1AF7264 Offset: 0x1AF7264 VA: 0x1AF7264 Slot: 4
	public void begin(QuestBoardListEffectComponent that) { }

	// RVA: 0x1AF7730 Offset: 0x1AF7730 VA: 0x1AF7730 Slot: 5
	public void update(QuestBoardListEffectComponent that) { }

	// RVA: 0x1AF7A74 Offset: 0x1AF7A74 VA: 0x1AF7A74 Slot: 6
	public void end(QuestBoardListEffectComponent that) { }
}

// Namespace: 
public class QuestBoardListEffectDisappearComponent : QuestBoardListEffectComponent // TypeDefIndex: 11100
{
	// Fields
	[SerializeField] // RVA: 0xCE91FC Offset: 0xCE91FC VA: 0xCE91FC
	[HeaderAttribute] // RVA: 0xCE91FC Offset: 0xCE91FC VA: 0xCE91FC
	public float boardMovingStartTime; // 0x54
	[SerializeField] // RVA: 0xCE9248 Offset: 0xCE9248 VA: 0xCE9248
	[HeaderAttribute] // RVA: 0xCE9248 Offset: 0xCE9248 VA: 0xCE9248
	public float boardMovingTime; // 0x58
	[SerializeField] // RVA: 0xCE9294 Offset: 0xCE9294 VA: 0xCE9294
	[HeaderAttribute] // RVA: 0xCE9294 Offset: 0xCE9294 VA: 0xCE9294
	public Easing.TYPE boardMoveeasingType; // 0x5C
	[SerializeField] // RVA: 0xCE92E0 Offset: 0xCE92E0 VA: 0xCE92E0
	[HeaderAttribute] // RVA: 0xCE92E0 Offset: 0xCE92E0 VA: 0xCE92E0
	public float targetBoardForceShiftPosY; // 0x60
	[SerializeField] // RVA: 0xCE932C Offset: 0xCE932C VA: 0xCE932C
	[HeaderAttribute] // RVA: 0xCE932C Offset: 0xCE932C VA: 0xCE932C
	public float disappearEffectShiftPosY; // 0x64
	[SerializeField] // RVA: 0xCE9378 Offset: 0xCE9378 VA: 0xCE9378
	[HeaderAttribute] // RVA: 0xCE9378 Offset: 0xCE9378 VA: 0xCE9378
	public float disappearEffect2ShiftPosX; // 0x68
	[SerializeField] // RVA: 0xCE93C4 Offset: 0xCE93C4 VA: 0xCE93C4
	[HeaderAttribute] // RVA: 0xCE93C4 Offset: 0xCE93C4 VA: 0xCE93C4
	public float disappearEffect2ShiftPosY; // 0x6C
	[SerializeField] // RVA: 0xCE9410 Offset: 0xCE9410 VA: 0xCE9410
	[HeaderAttribute] // RVA: 0xCE9410 Offset: 0xCE9410 VA: 0xCE9410
	public float bgmFadeOutStartTime; // 0x70
	[SerializeField] // RVA: 0xCE945C Offset: 0xCE945C VA: 0xCE945C
	[HeaderAttribute] // RVA: 0xCE945C Offset: 0xCE945C VA: 0xCE945C
	public float bgmFadeOutTime; // 0x74
	[SerializeField] // RVA: 0xCE94A8 Offset: 0xCE94A8 VA: 0xCE94A8
	[HeaderAttribute] // RVA: 0xCE94A8 Offset: 0xCE94A8 VA: 0xCE94A8
	public float bgmFadeInStartTime; // 0x78
	[SerializeField] // RVA: 0xCE94F4 Offset: 0xCE94F4 VA: 0xCE94F4
	[HeaderAttribute] // RVA: 0xCE94F4 Offset: 0xCE94F4 VA: 0xCE94F4
	public float bgmFadeInTime; // 0x7C
	[SerializeField] // RVA: 0xCE9540 Offset: 0xCE9540 VA: 0xCE9540
	[HeaderAttribute] // RVA: 0xCE9540 Offset: 0xCE9540 VA: 0xCE9540
	public float bgmFadeVolume; // 0x80

	// Methods

	// RVA: 0x1AF7A78 Offset: 0x1AF7A78 VA: 0x1AF7A78
	public void .ctor() { }
}

// Namespace: 
public class QuestBoardListViewEarthLine : MonoBehaviour // TypeDefIndex: 11101
{
	// Fields
	public const float LINE_WIDTH = 0.01;
	public const int LINE_RENDER_QUEUE = 3100;
	public const float TGT_SPD_TIME = 0.5;
	public const float BLINK_TIME = 0.5;
	public const float SCREEN_TOP_LIMIT_OFS = 80;
	private CStateManager<QuestBoardListViewEarthLine> mFSM; // 0x18
	private LineRenderer mLineRenderer; // 0x20
	private Vector3 mLineStartPos; // 0x28
	private BaseEarthPoint mEarthPoint; // 0x38
	private BaseCore mEarthCore; // 0x40
	private StandFigureSlideComponent mTerminalServant; // 0x48
	private QuestBoardListViewObject mListViewObject; // 0x50

	// Methods

	// RVA: 0x1AF7B18 Offset: 0x1AF7B18 VA: 0x1AF7B18
	public void .ctor() { }

	// RVA: 0x1AF7B20 Offset: 0x1AF7B20 VA: 0x1AF7B20
	private void Awake() { }

	// RVA: 0x1AF7CC0 Offset: 0x1AF7CC0 VA: 0x1AF7CC0
	private void LateUpdate() { }

	// RVA: 0x1AF7D98 Offset: 0x1AF7D98 VA: 0x1AF7D98
	private void OnDisable() { }

	// RVA: 0x1AF7D9C Offset: 0x1AF7D9C VA: 0x1AF7D9C
	public void SetupFirst(LineRenderer lr) { }

	// RVA: 0x1AF7F34 Offset: 0x1AF7F34 VA: 0x1AF7F34
	public void SetupSecond(Vector3 st_pos, QuestBoardListViewObject lvo, int war_id) { }

	// RVA: 0x1AF7D24 Offset: 0x1AF7D24 VA: 0x1AF7D24
	private void Visible() { }

	// RVA: 0x1AF7D60 Offset: 0x1AF7D60 VA: 0x1AF7D60
	public void Hide() { }

	// RVA: 0x1AF7D1C Offset: 0x1AF7D1C VA: 0x1AF7D1C
	private bool IsVisiblePossible() { }

	// RVA: 0x1AF8070 Offset: 0x1AF8070 VA: 0x1AF8070
	private QuestBoardListViewEarthLine.STATE GetState() { }

	// RVA: 0x1AF7C4C Offset: 0x1AF7C4C VA: 0x1AF7C4C
	private void SetState(QuestBoardListViewEarthLine.STATE state) { }

	// RVA: 0x1AF80D0 Offset: 0x1AF80D0 VA: 0x1AF80D0
	private Vector3 GetThisScreenPosition() { }

	// RVA: 0x1AF8164 Offset: 0x1AF8164 VA: 0x1AF8164
	private Vector3 GetStartScreenPosition() { }

	// RVA: 0x1AF8214 Offset: 0x1AF8214 VA: 0x1AF8214
	private Vector3 GetEndScreenPosition() { }
}

// Namespace: 
public enum QuestBoardListViewEarthLine.STATE // TypeDefIndex: 11102
{
	// Fields
	public int value__; // 0x0
	public const QuestBoardListViewEarthLine.STATE NONE = 0;
	public const QuestBoardListViewEarthLine.STATE MAIN = 1;
