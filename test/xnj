	// RVA: 0x1CE2340 Offset: 0x1CE2340 VA: 0x1CE2340
	private static void .cctor() { }
}

// Namespace: 
public sealed class SoundLogger // TypeDefIndex: 6410
{
	// Fields
	protected static readonly string WORD_NG; // 0x0
	private static SoundLogger instance; // 0x8
	protected SoundLogger.Info bgmLog; // 0x10
	protected SoundLogger.Info voiceLog; // 0x18
	protected SoundLogger.Info seLog; // 0x20

	// Properties
	public static SoundLogger Instance { get; }

	// Methods

	// RVA: 0x1CF74B4 Offset: 0x1CF74B4 VA: 0x1CF74B4
	private void .ctor() { }

	// RVA: 0x1CF768C Offset: 0x1CF768C VA: 0x1CF768C
	public static SoundLogger get_Instance() { }

	// RVA: 0x1CF7748 Offset: 0x1CF7748 VA: 0x1CF7748
	private void addLog(SoundLogger.Info info, string cueSheet, string cueName, bool isValid) { }

	[ConditionalAttribute] // RVA: 0xD36670 Offset: 0xD36670 VA: 0xD36670
	// RVA: 0x1CF78FC Offset: 0x1CF78FC VA: 0x1CF78FC
	public static void addLogBgm(string cueSheet, string cueName, bool isValid = True) { }

	[ConditionalAttribute] // RVA: 0xD366A8 Offset: 0xD366A8 VA: 0xD366A8
	// RVA: 0x1CF79AC Offset: 0x1CF79AC VA: 0x1CF79AC
	public static void addLogVoice(string cueSheet, string cueName, bool isValid = True) { }

	[ConditionalAttribute] // RVA: 0xD366E0 Offset: 0xD366E0 VA: 0xD366E0
	// RVA: 0x1CF7A5C Offset: 0x1CF7A5C VA: 0x1CF7A5C
	public static void addLogSe(string cueSheet, string cueName, bool isValid = True) { }

	// RVA: 0x1CF7B0C Offset: 0x1CF7B0C VA: 0x1CF7B0C
	private bool isValidLatest(SoundLogger.Info info) { }

	// RVA: 0x1CF731C Offset: 0x1CF731C VA: 0x1CF731C
	public static string getLogBgm() { }

	// RVA: 0x1CF73A4 Offset: 0x1CF73A4 VA: 0x1CF73A4
	public static string getLogVoice() { }

	// RVA: 0x1CF742C Offset: 0x1CF742C VA: 0x1CF742C
	public static string getLogSe() { }

	// RVA: 0x1CF7C18 Offset: 0x1CF7C18 VA: 0x1CF7C18
	private static void .cctor() { }
}

// Namespace: 
public class SoundLogger.Info // TypeDefIndex: 6411
{
	// Fields
	private string[] buff; // 0x10
	private int currentIndex; // 0x18
	private int maxNum; // 0x1C
	private StringBuilder sb; // 0x20

	// Methods

	// RVA: 0x1CF7558 Offset: 0x1CF7558 VA: 0x1CF7558
	public void .ctor(int maxBuff) { }

	// RVA: 0x1CF785C Offset: 0x1CF785C VA: 0x1CF785C
	public void add(string name) { }

	// RVA: 0x1CF7C74 Offset: 0x1CF7C74 VA: 0x1CF7C74 Slot: 3
	public override string ToString() { }

	// RVA: 0x1CF7B38 Offset: 0x1CF7B38 VA: 0x1CF7B38
	public bool checkPlayLogLatest() { }
}

// Namespace: 
public class SoundInfo : MonoBehaviour // TypeDefIndex: 6412
{
	// Methods

	// RVA: 0x1CF7168 Offset: 0x1CF7168 VA: 0x1CF7168
	public void .ctor() { }

	[ConditionalAttribute] // RVA: 0xD36718 Offset: 0xD36718 VA: 0xD36718
	// RVA: 0x1CF7170 Offset: 0x1CF7170 VA: 0x1CF7170
	public void OnGUI() { }
}

// Namespace: 
public class StandFigureBack : BaseMonoBehaviour // TypeDefIndex: 6413
{
	// Fields
	public static readonly int COSTUME_IMAGE_CNT_START; // 0x0
	protected static readonly float OPEN_TIME; // 0x4
	protected static readonly float CLOSE_TIME; // 0x8
	[SerializeField] // RVA: 0xCC01C0 Offset: 0xCC01C0 VA: 0xCC01C0
	protected UIPanel basePanel; // 0x18
	[SerializeField] // RVA: 0xCC01D0 Offset: 0xCC01D0 VA: 0xCC01D0
	protected GameObject baseWindow; // 0x20
	[SerializeField] // RVA: 0xCC01E0 Offset: 0xCC01E0 VA: 0xCC01E0
	protected GameObject baseStandFigure; // 0x28
	[SerializeField] // RVA: 0xCC01F0 Offset: 0xCC01F0 VA: 0xCC01F0
	protected Transform closeTransform; // 0x30
	private bool isBasePosition; // 0x38
	protected Vector3 basePosition; // 0x3C
	protected bool isFirstLoading; // 0x48
	protected bool isDispRequest; // 0x49
	protected bool isDisp; // 0x4A
	protected Action baseCallbackFunc; // 0x50
	private List<StandFigureCollect> standFigureCollectList; // 0x58

	// Properties
	public bool IsBusy { get; }
	public bool IsDisp { get; }

	// Methods

	// RVA: 0x1965B34 Offset: 0x1965B34 VA: 0x1965B34
	public void .ctor() { }

	// RVA: 0x1965BA4 Offset: 0x1965BA4 VA: 0x1965BA4
	public bool get_IsBusy() { }

	// RVA: 0x1965BD8 Offset: 0x1965BD8 VA: 0x1965BD8
	public bool get_IsDisp() { }

	// RVA: 0x1965BE0 Offset: 0x1965BE0 VA: 0x1965BE0
	public UIStandFigureR GetSvtStandFigure(int index = 0) { }

	// RVA: 0x1965C68 Offset: 0x1965C68 VA: 0x1965C68
	public List<StandFigureCollect> GetSvtStandFigureCollect() { }

	// RVA: 0x1965C70 Offset: 0x1965C70 VA: 0x1965C70
	public UIStandFigureR RobSvtStandFigure(int index = 0) { }

	// RVA: 0x1965D24 Offset: 0x1965D24 VA: 0x1965D24
	public void Init() { }

	// RVA: 0x1965F18 Offset: 0x1965F18 VA: 0x1965F18
	public void DestroyFigure() { }

	// RVA: 0x1966124 Offset: 0x1966124 VA: 0x1966124
	private void InitStandFigure(Action callback) { }

	// RVA: 0x19662F0 Offset: 0x19662F0 VA: 0x19662F0
	private void CreatePrefab(int svtId, int limitCount) { }

	// RVA: 0x19665BC Offset: 0x19665BC VA: 0x19665BC
	public void SetFaceType(Face.Type faceType, int index = 0) { }

	// RVA: 0x19666B8 Offset: 0x19666B8 VA: 0x19666B8
	public void SetFaceTypeAndForm(Face.Type faceType, int formId) { }

	// RVA: 0x196681C Offset: 0x196681C VA: 0x196681C
	public void CreatedStandFigure(int svtId, int imageLimitCount, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, Action callback, int index = 0) { }

	// RVA: 0x1966944 Offset: 0x1966944 VA: 0x1966944
	public void SetEventRewardStandFigure(int svtId, int imageLimitCount, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, int depth, Action callback) { }

	// RVA: 0x1966D90 Offset: 0x1966D90 VA: 0x1966D90
	public void SetMyRoomStandFigure(int svtId, int imageLimitCount, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, int formId, int depth, Action callback) { }

	[DebuggerHiddenAttribute] // RVA: 0xD36750 Offset: 0xD36750 VA: 0xD36750
	// RVA: 0x1966CFC Offset: 0x1966CFC VA: 0x1966CFC
	public IEnumerator WaitForLoadAllAssetBundle(Action action) { }

	// RVA: 0x1967154 Offset: 0x1967154 VA: 0x1967154
	protected void EndLoad() { }

	// RVA: 0x1967174 Offset: 0x1967174 VA: 0x1967174
	public void Fadein(Action callback) { }

	// RVA: 0x19673D8 Offset: 0x19673D8 VA: 0x19673D8
	protected void EndFadein() { }

	// RVA: 0x19673F4 Offset: 0x19673F4 VA: 0x19673F4
	public void Fadeout(Action callback) { }

	// RVA: 0x1967728 Offset: 0x1967728 VA: 0x1967728
	protected void EndFadeout() { }

	// RVA: 0x19676CC Offset: 0x19676CC VA: 0x19676CC
	protected void EndClose() { }

	// RVA: 0x1967744 Offset: 0x1967744 VA: 0x1967744
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE8E0 Offset: 0xCAE8E0 VA: 0xCAE8E0
private sealed class StandFigureBack.<WaitForLoadAllAssetBundle>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6414
{
	// Fields
	internal List.Enumerator<StandFigureCollect> $locvar0; // 0x10
	internal IEnumerable<StandFigureCollect> <assetRendered>__0; // 0x28
	internal List.Enumerator<StandFigureCollect> $locvar1; // 0x30
	internal Action action; // 0x48
	internal StandFigureBack $this; // 0x50
	internal object $current; // 0x58
	internal bool $disposing; // 0x60
	internal int $PC; // 0x64
	private static Func<StandFigureCollect, bool> <>f__am$cache0; // 0x0

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD45DD4 Offset: 0xD45DD4 VA: 0xD45DD4
	// RVA: 0x1CFFB64 Offset: 0x1CFFB64 VA: 0x1CFFB64
	public void .ctor() { }

	// RVA: 0x1CFFB6C Offset: 0x1CFFB6C VA: 0x1CFFB6C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45DE4 Offset: 0xD45DE4 VA: 0xD45DE4
	// RVA: 0x1CFFF6C Offset: 0x1CFFF6C VA: 0x1CFFF6C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45DF4 Offset: 0xD45DF4 VA: 0xD45DF4
	// RVA: 0x1CFFF74 Offset: 0x1CFFF74 VA: 0x1CFFF74 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45E04 Offset: 0xD45E04 VA: 0xD45E04
	// RVA: 0x1CFFF7C Offset: 0x1CFFF7C VA: 0x1CFFF7C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45E14 Offset: 0xD45E14 VA: 0xD45E14
	// RVA: 0x1CFFF90 Offset: 0x1CFFF90 VA: 0x1CFFF90 Slot: 6
	public void Reset() { }

	// RVA: 0x1CFFFF8 Offset: 0x1CFFFF8 VA: 0x1CFFFF8
	private static bool <>m__0(StandFigureCollect x) { }
}

// Namespace: 
public class StandFigureCollect // TypeDefIndex: 6415
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC0200 Offset: 0xCC0200 VA: 0xCC0200
	[DebuggerBrowsableAttribute] // RVA: 0xCC0200 Offset: 0xCC0200 VA: 0xCC0200
	private SvtMultiPortraitEntity <entity>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCC023C Offset: 0xCC023C VA: 0xCC023C
	[DebuggerBrowsableAttribute] // RVA: 0xCC023C Offset: 0xCC023C VA: 0xCC023C
	private UIStandFigureR <standFigure>k__BackingField; // 0x18

	// Properties
	public SvtMultiPortraitEntity entity { get; set; }
	public UIStandFigureR standFigure { get; set; }

	// Methods

	// RVA: 0x1D0052C Offset: 0x1D0052C VA: 0x1D0052C
	public void .ctor(SvtMultiPortraitEntity entity, UIStandFigureR standFigure) { }

	[CompilerGeneratedAttribute] // RVA: 0xD36760 Offset: 0xD36760 VA: 0xD36760
	// RVA: 0x1D00574 Offset: 0x1D00574 VA: 0x1D00574
	public SvtMultiPortraitEntity get_entity() { }

	[CompilerGeneratedAttribute] // RVA: 0xD36770 Offset: 0xD36770 VA: 0xD36770
	// RVA: 0x1D00564 Offset: 0x1D00564 VA: 0x1D00564
	private void set_entity(SvtMultiPortraitEntity value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD36780 Offset: 0xD36780 VA: 0xD36780
	// RVA: 0x1CFFF64 Offset: 0x1CFFF64 VA: 0x1CFFF64
	public UIStandFigureR get_standFigure() { }

	[CompilerGeneratedAttribute] // RVA: 0xD36790 Offset: 0xD36790 VA: 0xD36790
	// RVA: 0x1D0056C Offset: 0x1D0056C VA: 0x1D0056C
	private void set_standFigure(UIStandFigureR value) { }
}

// Namespace: 
public class SwitchParameterDisplayComponent : BaseMonoBehaviour // TypeDefIndex: 6416
{
	// Methods

	// RVA: 0x15E5B28 Offset: 0x15E5B28 VA: 0x15E5B28
	public void .ctor() { }

	// RVA: 0x15E5B30 Offset: 0x15E5B30 VA: 0x15E5B30 Slot: 4
	public virtual bool ParameterChange(int count) { }

	// RVA: 0x15E5B38 Offset: 0x15E5B38 VA: 0x15E5B38 Slot: 5
	public virtual bool UpdateAlpha(float alpha) { }
}

// Namespace: 
public class SwitchUIWidgetComponent : SwitchParameterDisplayComponent // TypeDefIndex: 6417
{
	// Fields
	[SerializeField] // RVA: 0xCC0278 Offset: 0xCC0278 VA: 0xCC0278
	protected UIWidget component; // 0x18
	protected UIWidget[] componentList; // 0x20

	// Methods

	// RVA: 0x15E61A0 Offset: 0x15E61A0 VA: 0x15E61A0
	public void .ctor() { }

	// RVA: 0x15E61A8 Offset: 0x15E61A8 VA: 0x15E61A8
	protected void OnDestroy() { }

	// RVA: 0x15E61AC Offset: 0x15E61AC VA: 0x15E61AC
	public void Clear() { }

	// RVA: 0x15E61EC Offset: 0x15E61EC VA: 0x15E61EC
	public void Set(UIWidget[] componentList) { }

	// RVA: 0x15E629C Offset: 0x15E629C VA: 0x15E629C
	protected void Set(int count) { }

	// RVA: 0x15E61B4 Offset: 0x15E61B4 VA: 0x15E61B4
	protected void ClearParam() { }

	// RVA: 0x15E6450 Offset: 0x15E6450 VA: 0x15E6450
	protected void SetParam(int num) { }

	// RVA: 0x15E64DC Offset: 0x15E64DC VA: 0x15E64DC
	protected void SetAlpha(float alpha) { }

	// RVA: 0x15E6520 Offset: 0x15E6520 VA: 0x15E6520 Slot: 4
	public override bool ParameterChange(int count) { }

	// RVA: 0x15E6584 Offset: 0x15E6584 VA: 0x15E6584 Slot: 5
	public override bool UpdateAlpha(float alpha) { }
}

// Namespace: 
public class SyncTransformComponent : MonoBehaviour // TypeDefIndex: 6418
{
	// Fields
	private bool isEnable; // 0x18
	private Transform child; // 0x20

	// Methods

	// RVA: 0x15E66EC Offset: 0x15E66EC VA: 0x15E66EC
	public void .ctor() { }

	// RVA: 0x15E66F4 Offset: 0x15E66F4 VA: 0x15E66F4
	public void setChild(Transform trans) { }

	// RVA: 0x15E6954 Offset: 0x15E6954 VA: 0x15E6954
	private void LateUpdate() { }

	// RVA: 0x15E6704 Offset: 0x15E6704 VA: 0x15E6704
	private void sync() { }
}

// Namespace: 
public class TimeSyncAlphaSwitcher : MonoBehaviour // TypeDefIndex: 6419
{
	// Fields
	[SerializeField] // RVA: 0xCC0288 Offset: 0xCC0288 VA: 0xCC0288
	protected UIWidget widget; // 0x18
	[SerializeField] // RVA: 0xCC0298 Offset: 0xCC0298 VA: 0xCC0298
	protected AnimationCurve alphaCurve; // 0x20
	[SerializeField] // RVA: 0xCC02A8 Offset: 0xCC02A8 VA: 0xCC02A8
	protected int toggleNum; // 0x28
	[SerializeField] // RVA: 0xCC02B8 Offset: 0xCC02B8 VA: 0xCC02B8
	protected int toggleIndex; // 0x2C
	[SerializeField] // RVA: 0xCC02C8 Offset: 0xCC02C8 VA: 0xCC02C8
	protected float toggleFreqRate; // 0x30
	protected float delay; // 0x34
	[CompilerGeneratedAttribute] // RVA: 0xCC02D8 Offset: 0xCC02D8 VA: 0xCC02D8
	[DebuggerBrowsableAttribute] // RVA: 0xCC02D8 Offset: 0xCC02D8 VA: 0xCC02D8
	private int <firstFreqCount>k__BackingField; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xCC0314 Offset: 0xCC0314 VA: 0xCC0314
	[DebuggerBrowsableAttribute] // RVA: 0xCC0314 Offset: 0xCC0314 VA: 0xCC0314
	private float <SyncReferenceTime>k__BackingField; // 0x3C

	// Properties
	protected bool IsAlphaBlink { get; }
	protected float TimePerFreq { get; }
	protected int Remainder { get; }
	protected int firstFreqCount { get; set; }
	protected float SyncReferenceTime { get; set; }

	// Methods

	// RVA: 0x141E604 Offset: 0x141E604 VA: 0x141E604
	public void .ctor() { }

	// RVA: 0x141E61C Offset: 0x141E61C VA: 0x141E61C
	protected bool get_IsAlphaBlink() { }

	// RVA: 0x141E62C Offset: 0x141E62C VA: 0x141E62C
	protected float get_TimePerFreq() { }

	// RVA: 0x141E640 Offset: 0x141E640 VA: 0x141E640
	protected int get_Remainder() { }

	[CompilerGeneratedAttribute] // RVA: 0xD367A0 Offset: 0xD367A0 VA: 0xD367A0
	// RVA: 0x141E688 Offset: 0x141E688 VA: 0x141E688
	protected void set_firstFreqCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD367B0 Offset: 0xD367B0 VA: 0xD367B0
	// RVA: 0x141E690 Offset: 0x141E690 VA: 0x141E690
	protected int get_firstFreqCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xD367C0 Offset: 0xD367C0 VA: 0xD367C0
	// RVA: 0x141E698 Offset: 0x141E698 VA: 0x141E698
	protected void set_SyncReferenceTime(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD367D0 Offset: 0xD367D0 VA: 0xD367D0
	// RVA: 0x141E6A0 Offset: 0x141E6A0 VA: 0x141E6A0
	protected float get_SyncReferenceTime() { }

	// RVA: 0x141E6A8 Offset: 0x141E6A8 VA: 0x141E6A8
	protected void Update() { }

	// RVA: 0x141E800 Offset: 0x141E800 VA: 0x141E800
	public void SetAlphaBlink(int num, int index, float time) { }

	// RVA: 0x141E888 Offset: 0x141E888 VA: 0x141E888
	public void Clear() { }

	// RVA: 0x141E6AC Offset: 0x141E6AC VA: 0x141E6AC
	protected void UpdateAlpha() { }
}

// Namespace: 
public class UIButtonObjectComponent : MonoBehaviour // TypeDefIndex: 6420
{
	// Fields
	public Collider col; // 0x18
	public UISprite buttonsprite; // 0x20
	public UILabel textlabel; // 0x28

	// Methods

	// RVA: 0x24AD094 Offset: 0x24AD094 VA: 0x24AD094
	public void .ctor() { }

	// RVA: 0x24AD09C Offset: 0x24AD09C VA: 0x24AD09C
	public void setActive(bool flg) { }
}

// Namespace: 
public class UICounterLabel : MonoBehaviour // TypeDefIndex: 6421
{
	// Fields
	[SerializeField] // RVA: 0xCC0350 Offset: 0xCC0350 VA: 0xCC0350
	private UILabel countLabel; // 0x18
	[SerializeField] // RVA: 0xCC0360 Offset: 0xCC0360 VA: 0xCC0360
	private float animTime; // 0x20
	private string format; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCC0370 Offset: 0xCC0370 VA: 0xCC0370
	[DebuggerBrowsableAttribute] // RVA: 0xCC0370 Offset: 0xCC0370 VA: 0xCC0370
	private int <MainCount>k__BackingField; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xCC03AC Offset: 0xCC03AC VA: 0xCC03AC
	[DebuggerBrowsableAttribute] // RVA: 0xCC03AC Offset: 0xCC03AC VA: 0xCC03AC
	private int <AddCount>k__BackingField; // 0x34
	private bool isFixedWidth; // 0x38

	// Properties
	public int MainCount { get; set; }
	public int AddCount { get; set; }
	public bool IsAnimFinished { get; }

	// Methods

	// RVA: 0x2081E1C Offset: 0x2081E1C VA: 0x2081E1C
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD367E0 Offset: 0xD367E0 VA: 0xD367E0
	// RVA: 0x2081E24 Offset: 0x2081E24 VA: 0x2081E24
	public int get_MainCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xD367F0 Offset: 0xD367F0 VA: 0xD367F0
	// RVA: 0x2081E2C Offset: 0x2081E2C VA: 0x2081E2C
	public void set_MainCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD36800 Offset: 0xD36800 VA: 0xD36800
	// RVA: 0x2081E34 Offset: 0x2081E34 VA: 0x2081E34
	public int get_AddCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xD36810 Offset: 0xD36810 VA: 0xD36810
	// RVA: 0x2081E3C Offset: 0x2081E3C VA: 0x2081E3C
	public void set_AddCount(int value) { }

	// RVA: 0x2081E44 Offset: 0x2081E44 VA: 0x2081E44
	public bool get_IsAnimFinished() { }

	// RVA: 0x2081E54 Offset: 0x2081E54 VA: 0x2081E54
	public void Setup(int count, float animTime = 1, string format = "", bool isFixedWidth = False) { }

	// RVA: 0x2081E6C Offset: 0x2081E6C VA: 0x2081E6C
	public void PlayAnimation() { }

	[DebuggerHiddenAttribute] // RVA: 0xD36820 Offset: 0xD36820 VA: 0xD36820
	// RVA: 0x2081EB0 Offset: 0x2081EB0 VA: 0x2081EB0
	private IEnumerator ExecAnimation() { }

	// RVA: 0x2081F28 Offset: 0x2081F28 VA: 0x2081F28
	public void SetCountLabel(int count) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE8F0 Offset: 0xCAE8F0 VA: 0xCAE8F0
private sealed class UICounterLabel.<ExecAnimation>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6422
{
	// Fields
	internal float <add>__0; // 0x10
	internal int <i>__1; // 0x14
	internal int <resultCount>__2; // 0x18
	internal UICounterLabel $this; // 0x20
	internal object $current; // 0x28
	internal bool $disposing; // 0x30
	internal int $PC; // 0x34

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD45E24 Offset: 0xD45E24 VA: 0xD45E24
	// RVA: 0x2081F20 Offset: 0x2081F20 VA: 0x2081F20
	public void .ctor() { }

	// RVA: 0x2082088 Offset: 0x2082088 VA: 0x2082088 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45E34 Offset: 0xD45E34 VA: 0xD45E34
	// RVA: 0x20822B4 Offset: 0x20822B4 VA: 0x20822B4 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45E44 Offset: 0xD45E44 VA: 0xD45E44
	// RVA: 0x20822BC Offset: 0x20822BC VA: 0x20822BC Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45E54 Offset: 0xD45E54 VA: 0xD45E54
	// RVA: 0x20822C4 Offset: 0x20822C4 VA: 0x20822C4 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45E64 Offset: 0xD45E64 VA: 0xD45E64
	// RVA: 0x20822D8 Offset: 0x20822D8 VA: 0x20822D8 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class UIIconLabel : BaseMonoBehaviour // TypeDefIndex: 6423
{
	// Fields
	[SerializeField] // RVA: 0xCC03E8 Offset: 0xCC03E8 VA: 0xCC03E8
	protected UILabel textLabel; // 0x18
	[SerializeField] // RVA: 0xCC03F8 Offset: 0xCC03F8 VA: 0xCC03F8
	protected UILabel extentionTextLabel; // 0x20
	[SerializeField] // RVA: 0xCC0408 Offset: 0xCC0408 VA: 0xCC0408
	protected UISprite iconSprite; // 0x28
	[SerializeField] // RVA: 0xCC0418 Offset: 0xCC0418 VA: 0xCC0418
	protected int blankSize; // 0x30
	protected bool isCustmAtlas; // 0x34

	// Methods

	// RVA: 0x21509CC Offset: 0x21509CC VA: 0x21509CC
	public void .ctor() { }

	// RVA: 0x21509DC Offset: 0x21509DC VA: 0x21509DC
	public void Clear() { }

	// RVA: 0x2150CD0 Offset: 0x2150CD0 VA: 0x2150CD0
	public void Set(IconLabelInfo info) { }

	// RVA: 0x2152648 Offset: 0x2152648 VA: 0x2152648
	public void Set(IconLabelInfo info, bool isHide) { }

	// RVA: 0x2152750 Offset: 0x2152750 VA: 0x2152750
	public void SetPurchaseDecision(IconLabelInfo.IconKind iconKind, int price = 0, int holdCount = -1) { }

	// RVA: 0x2152780 Offset: 0x2152780 VA: 0x2152780
	public void SetEventQuestion() { }

	// RVA: 0x2150DE4 Offset: 0x2150DE4 VA: 0x2150DE4
	public void Set(IconLabelInfo.IconKind iconKind, int data = 0, int adjustData = 0, int equipData = 0, long time = 0, bool isHide = False, bool isMaxHide = False, int lv = 0) { }

	// RVA: 0x21527BC Offset: 0x21527BC VA: 0x21527BC
	protected Color GetPurchaseDecisionColor(int dispData, int compareData) { }

	// RVA: 0x2152824 Offset: 0x2152824 VA: 0x2152824
	public void SetCombineResTxt(int data, int adjustData, bool isLimit = False) { }

	// RVA: 0x215295C Offset: 0x215295C VA: 0x215295C
	public int GetFontSize() { }

	// RVA: 0x2152990 Offset: 0x2152990 VA: 0x2152990
	public Vector2 GetIconSize() { }

	// RVA: 0x2152A58 Offset: 0x2152A58 VA: 0x2152A58
	public void SetAlpha(float alpha) { }

	// RVA: 0x2152C2C Offset: 0x2152C2C VA: 0x2152C2C
	public Vector2Int GetTextLabelSize() { }

	// RVA: 0x2152CA8 Offset: 0x2152CA8 VA: 0x2152CA8
	public void SetTextLabelSize(Vector2Int size) { }

	// RVA: 0x2152D30 Offset: 0x2152D30 VA: 0x2152D30
	public void SetTextLabelPixelPerfect() { }

	// RVA: 0x2152D68 Offset: 0x2152D68 VA: 0x2152D68
	public void SetTextLabelStrikeout() { }
}

// Namespace: 
public class UIRangeLabel : BaseMonoBehaviour // TypeDefIndex: 6424
{
	// Fields
	[SerializeField] // RVA: 0xCC0428 Offset: 0xCC0428 VA: 0xCC0428
	protected Transform textBase; // 0x18
	[SerializeField] // RVA: 0xCC0438 Offset: 0xCC0438 VA: 0xCC0438
	protected UILabel textLabel; // 0x20
	[SerializeField] // RVA: 0xCC0448 Offset: 0xCC0448 VA: 0xCC0448
	protected UISprite iconSprite; // 0x28
	[SerializeField] // RVA: 0xCC0458 Offset: 0xCC0458 VA: 0xCC0458
	protected int blankSize; // 0x30
	protected int textWidth; // 0x34

	// Properties
	public Color color { get; set; }
	public Color effectColor { get; set; }

	// Methods

	// RVA: 0x21C1974 Offset: 0x21C1974 VA: 0x21C1974
	public void .ctor() { }

	// RVA: 0x21C1988 Offset: 0x21C1988 VA: 0x21C1988
	public Color get_color() { }

	// RVA: 0x21C19B8 Offset: 0x21C19B8 VA: 0x21C19B8
	public void set_color(Color value) { }

	// RVA: 0x21C1A18 Offset: 0x21C1A18 VA: 0x21C1A18
	public Color get_effectColor() { }

	// RVA: 0x21C1A48 Offset: 0x21C1A48 VA: 0x21C1A48
	public void set_effectColor(Color value) { }

	// RVA: 0x21C1AA8 Offset: 0x21C1AA8 VA: 0x21C1AA8
	protected void InitParam() { }

	// RVA: 0x21C1B14 Offset: 0x21C1B14 VA: 0x21C1B14
	public void Clear() { }

	// RVA: 0x21C1C14 Offset: 0x21C1C14 VA: 0x21C1C14
	public void Set(string text, string iconName, bool isIconPixelPerfect = True, bool critical = False) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC91558 Offset: 0xC91558 VA: 0xC91558
public class UIRootReScale : MonoBehaviour // TypeDefIndex: 6425
{
	// Fields
	public CommonUI commonUi; // 0x18
	private int preWidth; // 0x20
	private int preHeight; // 0x24

	// Methods

	// RVA: 0x21C3D68 Offset: 0x21C3D68 VA: 0x21C3D68
	public void .ctor() { }

	// RVA: 0x21C3D70 Offset: 0x21C3D70 VA: 0x21C3D70
	protected void Start() { }

	// RVA: 0x21C3E30 Offset: 0x21C3E30 VA: 0x21C3E30
	protected void OnApplicationPause(bool pauseStatus) { }

	// RVA: 0x21C3E3C Offset: 0x21C3E3C VA: 0x21C3E3C
	protected void LateUpdate() { }

	// RVA: 0x21C3D74 Offset: 0x21C3D74 VA: 0x21C3D74
	public void ReScale() { }
}

// Namespace: 
public class WeightRate<T> // TypeDefIndex: 6426
{
	// Fields
	private List<WeightRate.WeightSeed<T>> list; // 0x0
	private int totalweight; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC0468 Offset: 0xCC0468 VA: 0xCC0468
	private static Comparison<WeightRate.WeightSeed<T>> <>f__am$cache0; // 0x0

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B9293C Offset: 0x2B9293C VA: 0x2B9293C
	|-WeightRate<int>..ctor
	|
	|-RVA: 0x2B933F0 Offset: 0x2B933F0 VA: 0x2B933F0
	|-WeightRate<object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void setWeight(int weight, T t) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B92968 Offset: 0x2B92968 VA: 0x2B92968
	|-WeightRate<int>.setWeight
	|
	|-RVA: 0x2B9341C Offset: 0x2B9341C VA: 0x2B9341C
	|-WeightRate<object>.setWeight
	*/

	// RVA: -1 Offset: -1
	public void removeWeight(T t) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B92A6C Offset: 0x2B92A6C VA: 0x2B92A6C
	|-WeightRate<int>.removeWeight
	|
	|-RVA: 0x2B93520 Offset: 0x2B93520 VA: 0x2B93520
	|-WeightRate<object>.removeWeight
	*/

	// RVA: -1 Offset: -1
	public int getTotalWeight() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B92D14 Offset: 0x2B92D14 VA: 0x2B92D14
	|-WeightRate<int>.getTotalWeight
	|
	|-RVA: 0x2B937C8 Offset: 0x2B937C8 VA: 0x2B937C8
	|-WeightRate<object>.getTotalWeight
	*/

	// RVA: -1 Offset: -1
	public bool checkWeight() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B92D1C Offset: 0x2B92D1C VA: 0x2B92D1C
	|-WeightRate<int>.checkWeight
	|
	|-RVA: 0x2B937D0 Offset: 0x2B937D0 VA: 0x2B937D0
	|-WeightRate<object>.checkWeight
	*/

	// RVA: -1 Offset: -1
	public int getCount() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B92D2C Offset: 0x2B92D2C VA: 0x2B92D2C
	|-WeightRate<int>.getCount
	|
	|-RVA: 0x2B937E0 Offset: 0x2B937E0 VA: 0x2B937E0
	|-WeightRate<object>.getCount
	*/

	// RVA: -1 Offset: -1
	public void SetAdjust() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B92D4C Offset: 0x2B92D4C VA: 0x2B92D4C
	|-WeightRate<int>.SetAdjust
	|
	|-RVA: 0x2B93800 Offset: 0x2B93800 VA: 0x2B93800
	|-WeightRate<object>.SetAdjust
	*/

	// RVA: -1 Offset: -1
	public T getData(int keywieght) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B92E58 Offset: 0x2B92E58 VA: 0x2B92E58
	|-WeightRate<int>.getData
	|
	|-RVA: 0x2B9390C Offset: 0x2B9390C VA: 0x2B9390C
	|-WeightRate<object>.getData
	*/

	// RVA: -1 Offset: -1
	public void ReverseWeight() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B930B4 Offset: 0x2B930B4 VA: 0x2B930B4
	|-WeightRate<int>.ReverseWeight
	|
	|-RVA: 0x2B93B6C Offset: 0x2B93B6C VA: 0x2B93B6C
	|-WeightRate<object>.ReverseWeight
	*/

	[CompilerGeneratedAttribute] // RVA: 0xD36830 Offset: 0xD36830 VA: 0xD36830
	// RVA: -1 Offset: -1
	private static int <ReverseWeight>m__0(WeightRate.WeightSeed<T> a, WeightRate.WeightSeed<T> b) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B933AC Offset: 0x2B933AC VA: 0x2B933AC
	|-WeightRate<int>.<ReverseWeight>m__0
	|
	|-RVA: 0x2B93E64 Offset: 0x2B93E64 VA: 0x2B93E64
	|-WeightRate<object>.<ReverseWeight>m__0
	*/
}

// Namespace: 
private class WeightRate.WeightSeed<T> // TypeDefIndex: 6427
{
	// Fields
	public int weight; // 0x0
	public T value; // 0x0

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(int w, T t) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B928B0 Offset: 0x2B928B0 VA: 0x2B928B0
	|-WeightRate.WeightSeed<int>..ctor
	|
	|-RVA: 0x2B928F4 Offset: 0x2B928F4 VA: 0x2B928F4
	|-WeightRate.WeightSeed<object>..ctor
	*/
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE900 Offset: 0xCAE900 VA: 0xCAE900
private sealed class WeightRate.<removeWeight>c__AnonStorey0<T> // TypeDefIndex: 6428
{
	// Fields
	internal T t; // 0x0

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B9273C Offset: 0x2B9273C VA: 0x2B9273C
	|-WeightRate.<removeWeight>c__AnonStorey0<int>..ctor
	|
	|-RVA: 0x2B927AC Offset: 0x2B927AC VA: 0x2B927AC
	|-WeightRate.<removeWeight>c__AnonStorey0<object>..ctor
	*/

	// RVA: -1 Offset: -1
	internal bool <>m__0(WeightRate.WeightSeed<T> s) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B92768 Offset: 0x2B92768 VA: 0x2B92768
	|-WeightRate.<removeWeight>c__AnonStorey0<int>.<>m__0
	|
	|-RVA: 0x2B927D8 Offset: 0x2B927D8 VA: 0x2B927D8
	|-WeightRate.<removeWeight>c__AnonStorey0<object>.<>m__0
	*/
}

// Namespace: 
public class WrapControlText // TypeDefIndex: 6429
{
	// Fields
	private const int maxFontSize = 22;

	// Methods

	// RVA: 0x1DD8C00 Offset: 0x1DD8C00 VA: 0x1DD8C00
	public void .ctor() { }

	// RVA: 0x1DD8C08 Offset: 0x1DD8C08 VA: 0x1DD8C08
	public static int textAdjust(UILabel label, string text, int maxSize = 22, int minSize = 0, int maxHeight = 0) { }

	// RVA: 0x1DD9E3C Offset: 0x1DD9E3C VA: 0x1DD9E3C
	public static int textBBCodeAdjust(UILabel label, string text, int maxSize = 22, int minSize = 0, int maxHeight = 0) { }

	// RVA: 0x1DD9E40 Offset: 0x1DD9E40 VA: 0x1DD9E40
	public static void fontSizeAdjust(UILabel label, string text, int defaultSize) { }

	// RVA: 0x1DD9F38 Offset: 0x1DD9F38 VA: 0x1DD9F38
	public static float getFontWidth(UILabel label, string text, int maxSize = 22) { }

	[DebuggerHiddenAttribute] // RVA: 0xD36840 Offset: 0xD36840 VA: 0xD36840
	[DebuggerStepThroughAttribute] // RVA: 0xD36840 Offset: 0xD36840 VA: 0xD36840
	// RVA: 0x1DDA038 Offset: 0x1DDA038 VA: 0x1DDA038
	private static bool IsSpace(int ch) { }

	[DebuggerHiddenAttribute] // RVA: 0xD36878 Offset: 0xD36878 VA: 0xD36878
	[DebuggerStepThroughAttribute] // RVA: 0xD36878 Offset: 0xD36878 VA: 0xD36878
	// RVA: 0x1DDA064 Offset: 0x1DDA064 VA: 0x1DDA064
	public static void EndLine(ref StringBuilder s) { }

	[DebuggerHiddenAttribute] // RVA: 0xD368B0 Offset: 0xD368B0 VA: 0xD368B0
	[DebuggerStepThroughAttribute] // RVA: 0xD368B0 Offset: 0xD368B0 VA: 0xD368B0
	// RVA: 0x1DDA138 Offset: 0x1DDA138 VA: 0x1DDA138
	private static void ReplaceSpaceWithNewline(ref StringBuilder s) { }

	// RVA: 0x1DD8E0C Offset: 0x1DD8E0C VA: 0x1DD8E0C
	private static bool wrapText(UILabel label, string text, int fsize, bool fontSizeAdjust, bool keepCharCount, out float widthOut, out int lineOut, int minSize = 0, int maxHeight = 0) { }
}

// Namespace: DelightWorks.Network
public abstract class AbstractWWW : IEnumerator, IDisposable // TypeDefIndex: 6430
{
	// Fields
	protected HTTPRequest request; // 0x10
	protected int currentDownload; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCC0478 Offset: 0xCC0478 VA: 0xCC0478
	[DebuggerBrowsableAttribute] // RVA: 0xCC0478 Offset: 0xCC0478 VA: 0xCC0478
	private float <progress>k__BackingField; // 0x1C
	[CompilerGeneratedAttribute] // RVA: 0xCC04B4 Offset: 0xCC04B4 VA: 0xCC04B4
	[DebuggerBrowsableAttribute] // RVA: 0xCC04B4 Offset: 0xCC04B4 VA: 0xCC04B4
	private bool <isDone>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCC04F0 Offset: 0xCC04F0 VA: 0xCC04F0
	[DebuggerBrowsableAttribute] // RVA: 0xCC04F0 Offset: 0xCC04F0 VA: 0xCC04F0
	private string <error>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCC052C Offset: 0xCC052C VA: 0xCC052C
	[DebuggerBrowsableAttribute] // RVA: 0xCC052C Offset: 0xCC052C VA: 0xCC052C
	private Dictionary<string, string> <responseHeaders>k__BackingField; // 0x30

	// Properties
	public float progress { get; set; }
	public float uploadProgress { get; }
	public bool isDone { get; set; }
	public string error { get; set; }
	public abstract string text { get; }
	public abstract byte[] bytes { get; set; }
	public int bytesDownloaded { get; }
	public string url { get; }
	public Dictionary<string, string> responseHeaders { get; set; }
	public abstract uint crc32 { get; }
	public AssetBundle assetBundle { get; }
	public AudioClip audioClip { get; }
	public Texture texture { get; }
	public Texture2D textureNonReadable { get; }
	public ThreadPriority threadPriprity { get; set; }
	public object Current { get; }

	// Methods

	// RVA: 0x16290C4 Offset: 0x16290C4 VA: 0x16290C4
	protected void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD368E8 Offset: 0xD368E8 VA: 0xD368E8
	// RVA: 0x16290CC Offset: 0x16290CC VA: 0x16290CC
	public float get_progress() { }

	[CompilerGeneratedAttribute] // RVA: 0xD368F8 Offset: 0xD368F8 VA: 0xD368F8
	// RVA: 0x16290D4 Offset: 0x16290D4 VA: 0x16290D4
	private void set_progress(float value) { }

	// RVA: 0x16290DC Offset: 0x16290DC VA: 0x16290DC
	public float get_uploadProgress() { }

	[CompilerGeneratedAttribute] // RVA: 0xD36908 Offset: 0xD36908 VA: 0xD36908
	// RVA: 0x16290E4 Offset: 0x16290E4 VA: 0x16290E4
	public bool get_isDone() { }

	[CompilerGeneratedAttribute] // RVA: 0xD36918 Offset: 0xD36918 VA: 0xD36918
	// RVA: 0x16290EC Offset: 0x16290EC VA: 0x16290EC
	protected void set_isDone(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD36928 Offset: 0xD36928 VA: 0xD36928
	// RVA: 0x16290F8 Offset: 0x16290F8 VA: 0x16290F8
	public string get_error() { }

	[CompilerGeneratedAttribute] // RVA: 0xD36938 Offset: 0xD36938 VA: 0xD36938
	// RVA: 0x1629100 Offset: 0x1629100 VA: 0x1629100
	private void set_error(string value) { }

	// RVA: -1 Offset: -1 Slot: 8
	public abstract string get_text();

	// RVA: -1 Offset: -1 Slot: 9
	public abstract byte[] get_bytes();

	// RVA: -1 Offset: -1 Slot: 10
	protected abstract void set_bytes(byte[] value);

	// RVA: 0x1629108 Offset: 0x1629108 VA: 0x1629108
	public int get_bytesDownloaded() { }

	// RVA: 0x1629110 Offset: 0x1629110 VA: 0x1629110
	public string get_url() { }

	[CompilerGeneratedAttribute] // RVA: 0xD36948 Offset: 0xD36948 VA: 0xD36948
	// RVA: 0x1629158 Offset: 0x1629158 VA: 0x1629158
	public Dictionary<string, string> get_responseHeaders() { }

	[CompilerGeneratedAttribute] // RVA: 0xD36958 Offset: 0xD36958 VA: 0xD36958
	// RVA: 0x1629160 Offset: 0x1629160 VA: 0x1629160
	private void set_responseHeaders(Dictionary<string, string> value) { }

	// RVA: -1 Offset: -1 Slot: 11
	public abstract uint get_crc32();

	// RVA: 0x1629168 Offset: 0x1629168 VA: 0x1629168
	public AssetBundle get_assetBundle() { }
