	[SerializeField] // RVA: 0xC54138 Offset: 0xC54138 VA: 0xC54138
	protected UISprite typeSprite; // 0x30
	[SerializeField] // RVA: 0xC54148 Offset: 0xC54148 VA: 0xC54148
	protected UISprite classSprite; // 0x38
	[SerializeField] // RVA: 0xC54158 Offset: 0xC54158 VA: 0xC54158
	protected UISprite costumeIconSprite; // 0x40
	[SerializeField] // RVA: 0xC54168 Offset: 0xC54168 VA: 0xC54168
	protected UISprite limitCountSprite; // 0x48
	[SerializeField] // RVA: 0xC54178 Offset: 0xC54178 VA: 0xC54178
	protected LimitCountIconComponent limitCountIcon; // 0x50
	[SerializeField] // RVA: 0xC54188 Offset: 0xC54188 VA: 0xC54188
	protected UISprite raritySprite; // 0x58
	[SerializeField] // RVA: 0xC54198 Offset: 0xC54198 VA: 0xC54198
	protected UISprite rarity2Sprite; // 0x60
	[SerializeField] // RVA: 0xC541A8 Offset: 0xC541A8 VA: 0xC541A8
	protected UIIconLabel iconLabel; // 0x68
	[SerializeField] // RVA: 0xC541B8 Offset: 0xC541B8 VA: 0xC541B8
	protected ShiningIconComponent shiningIcon; // 0x70
	[SerializeField] // RVA: 0xC541C8 Offset: 0xC541C8 VA: 0xC541C8
	protected UISprite noneEquipSprite; // 0x78
	[SerializeField] // RVA: 0xC541D8 Offset: 0xC541D8 VA: 0xC541D8
	private UISprite hideEquipSprite; // 0x80
	[SerializeField] // RVA: 0xC541E8 Offset: 0xC541E8 VA: 0xC541E8
	protected UIMeshSprite equipSprite; // 0x88
	[SerializeField] // RVA: 0xC541F8 Offset: 0xC541F8 VA: 0xC541F8
	protected UISprite equipLimitCountSprite; // 0x90
	protected CollectionStatus.Kind collectionStatus; // 0x98
	protected IconLabelInfo info1; // 0xA0
	protected IconLabelInfo info2; // 0xA8
	private bool isAdjustIconLabelPos; // 0xB0
	private Vector3 iconLabelInitPos; // 0xB4
	private bool isAdjustIconLabelScale; // 0xC0
	private Vector3 iconLabelInitScale; // 0xC4
	private Vector2Int textLabelInitSize; // 0xD0

	// Methods

	// RVA: 0x1A12728 Offset: 0x1A12728 VA: 0x1A12728
	public void .ctor() { }

	// RVA: 0x1A12738 Offset: 0x1A12738 VA: 0x1A12738
	protected void Awake() { }

	// RVA: 0x1A12808 Offset: 0x1A12808 VA: 0x1A12808
	protected void OnDestroy() { }

	// RVA: 0x1A1280C Offset: 0x1A1280C VA: 0x1A1280C
	public void ClearFaceAtlas() { }

	// RVA: 0x1A12864 Offset: 0x1A12864 VA: 0x1A12864
	public void Clear() { }

	// RVA: 0x1A12DE0 Offset: 0x1A12DE0 VA: 0x1A12DE0
	public void Blank() { }

	// RVA: 0x1A12E4C Offset: 0x1A12E4C VA: 0x1A12E4C
	public void NoMount() { }

	// RVA: 0x1A12EB8 Offset: 0x1A12EB8 VA: 0x1A12EB8
	public void NoMount_Support() { }

	// RVA: 0x1A12F24 Offset: 0x1A12F24 VA: 0x1A12F24
	public void Set(UserServantEntity userSvtEntity, long[] equipIdList, QuestRestrictionInfo questRestrictionInfo, IconLabelInfo info1, IconLabelInfo info2) { }

	// RVA: 0x1A13EA0 Offset: 0x1A13EA0 VA: 0x1A13EA0
	public void Set(long userSvtId, IconLabelInfo info1, IconLabelInfo info2) { }

	// RVA: 0x1A02B8C Offset: 0x1A02B8C VA: 0x1A02B8C
	public void Set(UserServantEntity userSvtEntity, IconLabelInfo info1, IconLabelInfo info2) { }

	// RVA: 0x1A14018 Offset: 0x1A14018 VA: 0x1A14018
	public void NotHaveServantSet(ServantLeaderInfo servantData, IconLabelInfo info1, IconLabelInfo info2) { }

	// RVA: 0x1A1412C Offset: 0x1A1412C VA: 0x1A1412C
	public void Set(UserServantEntity userSvtEntity, long[] equipIdList, IconLabelInfo info1, IconLabelInfo info2) { }

	// RVA: 0x1A143F4 Offset: 0x1A143F4 VA: 0x1A143F4
	public void SetEquip(UserServantEntity userServantEntity) { }

	// RVA: 0x1A147E0 Offset: 0x1A147E0 VA: 0x1A147E0
	public void Set(UserServantCollectionEntity userSvtColEntity, IconLabelInfo info1, IconLabelInfo info2) { }

	// RVA: 0x1A14A3C Offset: 0x1A14A3C VA: 0x1A14A3C
	public void SetDataLost(UserServantCollectionEntity userSvtColEntity, IconLabelInfo info1, IconLabelInfo info2) { }

	// RVA: 0x1A14CA0 Offset: 0x1A14CA0 VA: 0x1A14CA0
	public void SetDataNotOpened(EquipTargetInfo equipTargetInfo, IconLabelInfo info1, IconLabelInfo info2) { }

	// RVA: 0x1A14DB8 Offset: 0x1A14DB8 VA: 0x1A14DB8
	public void Set(UserServantCollectionEntity userSvtColEntity, ServantCostumeEntity svtCostumeEntity, IconLabelInfo info1, IconLabelInfo info2, bool isSecret = False) { }

	// RVA: 0x1A02E2C Offset: 0x1A02E2C VA: 0x1A02E2C
	public void Set(ServantLeaderInfo servantLeaderInfo, IconLabelInfo info1, IconLabelInfo info2, bool isNewIconDisp = False, int imageSvtId = 0) { }

	// RVA: 0x1A151F8 Offset: 0x1A151F8 VA: 0x1A151F8
	public void Set(EquipTargetInfo equipTargetInfo, IconLabelInfo info1, IconLabelInfo info2) { }

	// RVA: 0x1A15720 Offset: 0x1A15720 VA: 0x1A15720
	public void Set(UserCommandCodeEntity userCommandCodeEntity, IconLabelInfo info1, IconLabelInfo info2) { }

	// RVA: 0x1A15DD0 Offset: 0x1A15DD0 VA: 0x1A15DD0
	public void Set(UserCommandCodeEntity userCommandCodeEntity, bool isNew, IconLabelInfo info1, IconLabelInfo info2) { }

	// RVA: 0x1A15EA0 Offset: 0x1A15EA0 VA: 0x1A15EA0
	public void Set(UserCommandCodeCollectionEntity userCommandCodeCollectionEntity, IconLabelInfo info1, IconLabelInfo info2) { }

	// RVA: 0x1A13324 Offset: 0x1A13324 VA: 0x1A13324
	public void Set(int svtId, int limitCount, int imageLimitCount = -1, int exceedCount = 0, IconLabelInfo info1, IconLabelInfo info2, CollectionStatus.Kind collectionStatus = 2, bool isNew = False, bool isTemporarySubscription = False, ServantCostumeEntity svtCostumeEntity, bool isCheckSeal = False, int lv = 0, int imageSvtId = 0) { }

	// RVA: 0x1A16A2C Offset: 0x1A16A2C VA: 0x1A16A2C
	public void SetEventBonus(int iconId, int rarity) { }

	// RVA: 0x1A158D8 Offset: 0x1A158D8 VA: 0x1A158D8
	public void SetCommandCode(int commandCodeId, IconLabelInfo info1, IconLabelInfo info2, CollectionStatus.Kind collectionStatus = 2, bool isNew = False) { }

	// RVA: 0x1A16208 Offset: 0x1A16208 VA: 0x1A16208
	private void SetClassSprite(bool isCommandCode, bool isServantEquip = False, int classId = 0, int frameType = 0) { }

	// RVA: 0x1A16354 Offset: 0x1A16354 VA: 0x1A16354
	private void SetLimitCountSprite(bool isCommandCode, int limitMax = 0, int limitCount = 0) { }

	// RVA: 0x1A164B4 Offset: 0x1A164B4 VA: 0x1A164B4
	private void SetLimitCountIcon(bool isCommandCode, int limitMax = 0, int limitCount = 0) { }

	// RVA: 0x1A165D8 Offset: 0x1A165D8 VA: 0x1A165D8
	private void SetRaritySprite(bool isCommandCode, int rarity, int exceedCount = 0, int lv = 0) { }

	// RVA: 0x1A16E80 Offset: 0x1A16E80 VA: 0x1A16E80
	public void SetEquipDangling(EquipTargetInfo info) { }

	// RVA: 0x1A12BDC Offset: 0x1A12BDC VA: 0x1A12BDC
	protected void ClearEquip() { }

	// RVA: 0x1A15300 Offset: 0x1A15300 VA: 0x1A15300
	protected void ClearEquip(int baseSvtId) { }

	// RVA: 0x1A13D20 Offset: 0x1A13D20 VA: 0x1A13D20
	protected void SetEquip(int baseSvtId, long userSvtId) { }

	// RVA: 0x1A15108 Offset: 0x1A15108 VA: 0x1A15108
	protected void SetEquip(int baseSvtId, EquipTargetInfo equipTarget) { }

	// RVA: 0x1A144B0 Offset: 0x1A144B0 VA: 0x1A144B0
	protected void SetEquip(int baseSvtId, int svtId, int limitCount) { }

	// RVA: 0x1A14F04 Offset: 0x1A14F04 VA: 0x1A14F04
	private void HideEquip() { }

	// RVA: 0x1A16F2C Offset: 0x1A16F2C VA: 0x1A16F2C
	public string GetFaceSpriteName() { }

	// RVA: 0x1A16F5C Offset: 0x1A16F5C VA: 0x1A16F5C
	public bool IsUseEquip() { }

	// RVA: 0x1A1706C Offset: 0x1A1706C VA: 0x1A1706C
	public void FaceSpriteDisp(bool flag) { }

	// RVA: 0x1A1714C Offset: 0x1A1714C VA: 0x1A1714C
	public void SetDispRaritySprite(bool flag) { }

	// RVA: 0x1A17184 Offset: 0x1A17184 VA: 0x1A17184
	public void SetDispLimitCountIcon(bool flag) { }

	// RVA: 0x1A168CC Offset: 0x1A168CC VA: 0x1A168CC
	protected void SetIconLabel(int count) { }

	// RVA: 0x1A171D4 Offset: 0x1A171D4 VA: 0x1A171D4 Slot: 4
	public override bool ParameterChange(int count) { }

	// RVA: 0x1A171EC Offset: 0x1A171EC VA: 0x1A171EC Slot: 5
	public override bool UpdateAlpha(float alpha) { }

	// RVA: 0x1A172A4 Offset: 0x1A172A4 VA: 0x1A172A4
	public void AdjustIconLabelPos(float offsetX, float offsetY) { }

	// RVA: 0x1A173DC Offset: 0x1A173DC VA: 0x1A173DC
	public void ResetIconLabelPos() { }

	// RVA: 0x1A174B8 Offset: 0x1A174B8 VA: 0x1A174B8
	public void AdjustIconLabelScale(Vector3 scale) { }

	// RVA: 0x1A17614 Offset: 0x1A17614 VA: 0x1A17614
	public void ResetIconLabelScale() { }

	// RVA: 0x1A1771C Offset: 0x1A1771C VA: 0x1A1771C
	public void ChangeClassIcon(int frameType, int classId) { }

	// RVA: 0x1A13F7C Offset: 0x1A13F7C VA: 0x1A13F7C
	private int GetIconLimitCountSealAfter(int svtId, int iconLimit) { }

	// RVA: 0x1A15F80 Offset: 0x1A15F80 VA: 0x1A15F80
	public void SetCostumeIcon(ServantCostumeEntity svtCostumeEntity) { }

	// RVA: 0x1A177A0 Offset: 0x1A177A0 VA: 0x1A177A0
	private static void .cctor() { }
}

// Namespace: 
public class ServantNpCommandCardComponent : BaseMonoBehaviour // TypeDefIndex: 6410
{
	// Fields
	[SerializeField] // RVA: 0xC54208 Offset: 0xC54208 VA: 0xC54208
	protected UISprite cardSprite; // 0x18

	// Methods

	// RVA: 0x19C3620 Offset: 0x19C3620 VA: 0x19C3620
	public void .ctor() { }

	// RVA: 0x19C3628 Offset: 0x19C3628 VA: 0x19C3628
	public void Clear() { }

	// RVA: 0x19C365C Offset: 0x19C365C VA: 0x19C365C
	public void Set(TreasureDvcInfo tdInfo) { }

	// RVA: 0x19C3670 Offset: 0x19C3670 VA: 0x19C3670
	public void SetHide() { }
}

// Namespace: 
public class ShiningIconComponent : BaseMonoBehaviour // TypeDefIndex: 6411
{
	// Fields
	[SerializeField] // RVA: 0xC54218 Offset: 0xC54218 VA: 0xC54218
	protected UIWidget widget; // 0x18

	// Methods

	// RVA: 0x133665C Offset: 0x133665C VA: 0x133665C
	public void .ctor() { }

	// RVA: 0x1336664 Offset: 0x1336664 VA: 0x1336664
	protected void Awake() { }

	// RVA: 0x1336698 Offset: 0x1336698 VA: 0x1336698
	protected void OnDestroy() { }

	// RVA: 0x133669C Offset: 0x133669C VA: 0x133669C
	public void Clear() { }

	// RVA: 0x1336700 Offset: 0x1336700 VA: 0x1336700
	public void Set() { }

	// RVA: 0x1336764 Offset: 0x1336764 VA: 0x1336764
	public void Set(bool isDisp) { }

	// RVA: 0x1336770 Offset: 0x1336770 VA: 0x1336770
	public void Set(string spriteName) { }
}

// Namespace: 
public class SkillIconComponent : BaseMonoBehaviour // TypeDefIndex: 6412
{
	// Fields
	[SerializeField] // RVA: 0xC54228 Offset: 0xC54228 VA: 0xC54228
	protected UISprite baseSprite; // 0x18
	[SerializeField] // RVA: 0xC54238 Offset: 0xC54238 VA: 0xC54238
	protected UISprite skillIconSprite; // 0x20
	[SerializeField] // RVA: 0xC54248 Offset: 0xC54248 VA: 0xC54248
	protected UISprite frameSprite; // 0x28
	[SerializeField] // RVA: 0xC54258 Offset: 0xC54258 VA: 0xC54258
	protected UIIconLabel iconLabel; // 0x30
	[SerializeField] // RVA: 0xC54268 Offset: 0xC54268 VA: 0xC54268
	protected UISprite strengthStatusSprite; // 0x38
	private ServantSkillStrengthStatus skillStrengthStatus; // 0x40
	[SerializeField] // RVA: 0xC54278 Offset: 0xC54278 VA: 0xC54278
	protected UISprite maskSprite; // 0x48

	// Methods

	// RVA: 0x1525384 Offset: 0x1525384 VA: 0x1525384
	public void .ctor() { }

	// RVA: 0x152538C Offset: 0x152538C VA: 0x152538C
	public void Clear() { }

	// RVA: 0x15255D4 Offset: 0x15255D4 VA: 0x15255D4
	public void Set(int skillId) { }

	// RVA: 0x15259B0 Offset: 0x15259B0 VA: 0x15259B0
	public void Set(int skillId, int skillLv) { }

	// RVA: 0x15255E4 Offset: 0x15255E4 VA: 0x15255E4
	public void Set(int skillId, int skillLv, int strengthStatus, int skillRecord) { }

	// RVA: 0x15259BC Offset: 0x15259BC VA: 0x15259BC
	public void Set(int skillId, int skillLv, IconLabelInfo info) { }

	// RVA: 0x15259D0 Offset: 0x15259D0 VA: 0x15259D0
	public void Set(int skillId, int skillLv, int strengthStatus, int skillRecord, IconLabelInfo info) { }

	// RVA: 0x1525DC8 Offset: 0x1525DC8 VA: 0x1525DC8
	public void SetStrengthStatus(int strengthStatus, int skillRecord) { }

	// RVA: 0x1525FDC Offset: 0x1525FDC VA: 0x1525FDC
	public void SetHide() { }

	// RVA: 0x15261BC Offset: 0x15261BC VA: 0x15261BC
	public void SetSpecifyIconId(int iconId) { }

	// RVA: 0x15263A4 Offset: 0x15263A4 VA: 0x15263A4
	public void SetInvalidColor(Color invalidColor) { }

	// RVA: 0x15264E0 Offset: 0x15264E0 VA: 0x15264E0
	public void SetMask(bool enabled) { }

	// RVA: 0x1526530 Offset: 0x1526530 VA: 0x1526530
	public void AdjustUI() { }
}

// Namespace: 
public class SkillListTreasureDeviceComponent : BaseMonoBehaviour // TypeDefIndex: 6413
{
	// Fields
	[SerializeField] // RVA: 0xC54288 Offset: 0xC54288 VA: 0xC54288
	protected UISprite skillIconSprite; // 0x18
	[SerializeField] // RVA: 0xC54298 Offset: 0xC54298 VA: 0xC54298
	protected UILabel skillLevelListLabel; // 0x20
	[SerializeField] // RVA: 0xC542A8 Offset: 0xC542A8 VA: 0xC542A8
	protected UIIconLabel treasureDeviceIconLabel; // 0x28
	[SerializeField] // RVA: 0xC542B8 Offset: 0xC542B8 VA: 0xC542B8
	protected int normalRange; // 0x30
	[SerializeField] // RVA: 0xC542C8 Offset: 0xC542C8 VA: 0xC542C8
	protected int treasureDeviceSpace; // 0x34
	private static readonly float ADJUST_X_POS; // 0x0

	// Methods

	// RVA: 0x17483C4 Offset: 0x17483C4 VA: 0x17483C4
	public void .ctor() { }

	// RVA: 0x17483D8 Offset: 0x17483D8 VA: 0x17483D8
	public void Clear() { }

	// RVA: 0x1748540 Offset: 0x1748540 VA: 0x1748540
	public void Set(string skillLevelListText, int tdLv, StrengthStatus.Kind tdStrengthStatus = 0) { }

	// RVA: 0x17488FC Offset: 0x17488FC VA: 0x17488FC
	private static void .cctor() { }
}

// Namespace: 
public sealed class SoundLogger // TypeDefIndex: 6414
{
	// Fields
	protected static readonly string WORD_NG; // 0x0
	private static SoundLogger instance; // 0x8
	protected SoundLogger.Info bgmLog; // 0x10
	protected SoundLogger.Info voiceLog; // 0x18
	protected SoundLogger.Info seLog; // 0x20

	// Properties
	public static SoundLogger Instance { get; }

	// Methods

	// RVA: 0x175DD70 Offset: 0x175DD70 VA: 0x175DD70
	private void .ctor() { }

	// RVA: 0x175DF48 Offset: 0x175DF48 VA: 0x175DF48
	public static SoundLogger get_Instance() { }

	// RVA: 0x175E004 Offset: 0x175E004 VA: 0x175E004
	private void addLog(SoundLogger.Info info, string cueSheet, string cueName, bool isValid) { }

	[ConditionalAttribute] // RVA: 0xCC8FAC Offset: 0xCC8FAC VA: 0xCC8FAC
	// RVA: 0x175E1B8 Offset: 0x175E1B8 VA: 0x175E1B8
	public static void addLogBgm(string cueSheet, string cueName, bool isValid = True) { }

	[ConditionalAttribute] // RVA: 0xCC8FE4 Offset: 0xCC8FE4 VA: 0xCC8FE4
	// RVA: 0x175E268 Offset: 0x175E268 VA: 0x175E268
	public static void addLogVoice(string cueSheet, string cueName, bool isValid = True) { }

	[ConditionalAttribute] // RVA: 0xCC901C Offset: 0xCC901C VA: 0xCC901C
	// RVA: 0x175E318 Offset: 0x175E318 VA: 0x175E318
	public static void addLogSe(string cueSheet, string cueName, bool isValid = True) { }

	// RVA: 0x175E3C8 Offset: 0x175E3C8 VA: 0x175E3C8
	private bool isValidLatest(SoundLogger.Info info) { }

	// RVA: 0x175DAD4 Offset: 0x175DAD4 VA: 0x175DAD4
	public static string getLogBgm() { }

	// RVA: 0x175DB5C Offset: 0x175DB5C VA: 0x175DB5C
	public static string getLogVoice() { }

	// RVA: 0x175DBE4 Offset: 0x175DBE4 VA: 0x175DBE4
	public static string getLogSe() { }

	// RVA: 0x175E4D4 Offset: 0x175E4D4 VA: 0x175E4D4
	private static void .cctor() { }
}

// Namespace: 
public class SoundLogger.Info // TypeDefIndex: 6415
{
	// Fields
	private string[] buff; // 0x10
	private int currentIndex; // 0x18
	private int maxNum; // 0x1C
	private StringBuilder sb; // 0x20

	// Methods

	// RVA: 0x175DE14 Offset: 0x175DE14 VA: 0x175DE14
	public void .ctor(int maxBuff) { }

	// RVA: 0x175E118 Offset: 0x175E118 VA: 0x175E118
	public void add(string name) { }

	// RVA: 0x175E530 Offset: 0x175E530 VA: 0x175E530 Slot: 3
	public override string ToString() { }

	// RVA: 0x175E3F4 Offset: 0x175E3F4 VA: 0x175E3F4
	public bool checkPlayLogLatest() { }
}

// Namespace: 
public class SoundInfo : MonoBehaviour // TypeDefIndex: 6416
{
	// Methods

	// RVA: 0x175D920 Offset: 0x175D920 VA: 0x175D920
	public void .ctor() { }

	[ConditionalAttribute] // RVA: 0xCC9054 Offset: 0xCC9054 VA: 0xCC9054
	// RVA: 0x175D928 Offset: 0x175D928 VA: 0x175D928
	public void OnGUI() { }
}

// Namespace: 
public class StandFigureBack : BaseMonoBehaviour // TypeDefIndex: 6417
{
	// Fields
	public static readonly int COSTUME_IMAGE_CNT_START; // 0x0
	protected static readonly float OPEN_TIME; // 0x4
	protected static readonly float CLOSE_TIME; // 0x8
	[SerializeField] // RVA: 0xC542D8 Offset: 0xC542D8 VA: 0xC542D8
	protected UIPanel basePanel; // 0x18
	[SerializeField] // RVA: 0xC542E8 Offset: 0xC542E8 VA: 0xC542E8
	protected GameObject baseWindow; // 0x20
	[SerializeField] // RVA: 0xC542F8 Offset: 0xC542F8 VA: 0xC542F8
	protected GameObject baseStandFigure; // 0x28
	[SerializeField] // RVA: 0xC54308 Offset: 0xC54308 VA: 0xC54308
	protected Transform closeTransform; // 0x30
	private bool isBasePosition; // 0x38
	protected Vector3 basePosition; // 0x3C
	protected bool isFirstLoading; // 0x48
	protected bool isDispRequest; // 0x49
	protected bool isDisp; // 0x4A
	protected Action baseCallbackFunc; // 0x50
	private List<StandFigureCollect> standFigureCollectList; // 0x58

	// Properties
	public bool IsBusy { get; }
	public bool IsDisp { get; }

	// Methods

	// RVA: 0x13E9808 Offset: 0x13E9808 VA: 0x13E9808
	public void .ctor() { }

	// RVA: 0x13E9878 Offset: 0x13E9878 VA: 0x13E9878
	public bool get_IsBusy() { }

	// RVA: 0x13E98AC Offset: 0x13E98AC VA: 0x13E98AC
	public bool get_IsDisp() { }

	// RVA: 0x13E98B4 Offset: 0x13E98B4 VA: 0x13E98B4
	public UIStandFigureR GetSvtStandFigure(int index = 0) { }

	// RVA: 0x13E993C Offset: 0x13E993C VA: 0x13E993C
	public List<StandFigureCollect> GetSvtStandFigureCollect() { }

	// RVA: 0x13E9944 Offset: 0x13E9944 VA: 0x13E9944
	public UIStandFigureR RobSvtStandFigure(int index = 0) { }

	// RVA: 0x13E99F8 Offset: 0x13E99F8 VA: 0x13E99F8
	public void Init() { }

	// RVA: 0x13E9BEC Offset: 0x13E9BEC VA: 0x13E9BEC
	public void DestroyFigure() { }

	// RVA: 0x13E9DF8 Offset: 0x13E9DF8 VA: 0x13E9DF8
	private void InitStandFigure(Action callback) { }

	// RVA: 0x13E9FC4 Offset: 0x13E9FC4 VA: 0x13E9FC4
	private void CreatePrefab(int svtId, int limitCount) { }

	// RVA: 0x13EA290 Offset: 0x13EA290 VA: 0x13EA290
	public void SetFaceType(Face.Type faceType, int index = 0) { }

	// RVA: 0x13EA38C Offset: 0x13EA38C VA: 0x13EA38C
	public void SetFaceTypeAndForm(Face.Type faceType, int formId) { }

	// RVA: 0x13EA4F0 Offset: 0x13EA4F0 VA: 0x13EA4F0
	public void CreatedStandFigure(int svtId, int imageLimitCount, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, Action callback, int index = 0) { }

	// RVA: 0x13EA618 Offset: 0x13EA618 VA: 0x13EA618
	public void SetEventRewardStandFigure(int svtId, int imageLimitCount, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, int depth, Action callback) { }

	// RVA: 0x13EAA64 Offset: 0x13EAA64 VA: 0x13EAA64
	public void SetMyRoomStandFigure(int svtId, int imageLimitCount, ServantScriptEntity.OffsetKind offsetKind, Face.Type faceType, int formId, int depth, Action callback) { }

	[DebuggerHiddenAttribute] // RVA: 0xCC908C Offset: 0xCC908C VA: 0xCC908C
	// RVA: 0x13EA9D0 Offset: 0x13EA9D0 VA: 0x13EA9D0
	public IEnumerator WaitForLoadAllAssetBundle(Action action) { }

	// RVA: 0x13EAE28 Offset: 0x13EAE28 VA: 0x13EAE28
	protected void EndLoad() { }

	// RVA: 0x13EAE48 Offset: 0x13EAE48 VA: 0x13EAE48
	public void Fadein(Action callback) { }

	// RVA: 0x13EB0AC Offset: 0x13EB0AC VA: 0x13EB0AC
	protected void EndFadein() { }

	// RVA: 0x13EB0C8 Offset: 0x13EB0C8 VA: 0x13EB0C8
	public void Fadeout(Action callback) { }

	// RVA: 0x13EB3FC Offset: 0x13EB3FC VA: 0x13EB3FC
	protected void EndFadeout() { }

	// RVA: 0x13EB3A0 Offset: 0x13EB3A0 VA: 0x13EB3A0
	protected void EndClose() { }

	// RVA: 0x13EB418 Offset: 0x13EB418 VA: 0x13EB418
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC427F4 Offset: 0xC427F4 VA: 0xC427F4
private sealed class StandFigureBack.<WaitForLoadAllAssetBundle>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6418
{
	// Fields
	internal List.Enumerator<StandFigureCollect> $locvar0; // 0x10
	internal IEnumerable<StandFigureCollect> <assetRendered>__0; // 0x28
	internal List.Enumerator<StandFigureCollect> $locvar1; // 0x30
	internal Action action; // 0x48
	internal StandFigureBack $this; // 0x50
	internal object $current; // 0x58
	internal bool $disposing; // 0x60
	internal int $PC; // 0x64
	private static Func<StandFigureCollect, bool> <>f__am$cache0; // 0x0

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8AC0 Offset: 0xCD8AC0 VA: 0xCD8AC0
	// RVA: 0x179AFC0 Offset: 0x179AFC0 VA: 0x179AFC0
	public void .ctor() { }

	// RVA: 0x179AFC8 Offset: 0x179AFC8 VA: 0x179AFC8 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8AD0 Offset: 0xCD8AD0 VA: 0xCD8AD0
	// RVA: 0x179B3C8 Offset: 0x179B3C8 VA: 0x179B3C8 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8AE0 Offset: 0xCD8AE0 VA: 0xCD8AE0
	// RVA: 0x179B3D0 Offset: 0x179B3D0 VA: 0x179B3D0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8AF0 Offset: 0xCD8AF0 VA: 0xCD8AF0
	// RVA: 0x179B3D8 Offset: 0x179B3D8 VA: 0x179B3D8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8B00 Offset: 0xCD8B00 VA: 0xCD8B00
	// RVA: 0x179B3EC Offset: 0x179B3EC VA: 0x179B3EC Slot: 6
	public void Reset() { }

	// RVA: 0x179B454 Offset: 0x179B454 VA: 0x179B454
	private static bool <>m__0(StandFigureCollect x) { }
}

// Namespace: 
public class StandFigureCollect // TypeDefIndex: 6419
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC54318 Offset: 0xC54318 VA: 0xC54318
	[DebuggerBrowsableAttribute] // RVA: 0xC54318 Offset: 0xC54318 VA: 0xC54318
	private SvtMultiPortraitEntity <entity>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC54354 Offset: 0xC54354 VA: 0xC54354
	[DebuggerBrowsableAttribute] // RVA: 0xC54354 Offset: 0xC54354 VA: 0xC54354
	private UIStandFigureR <standFigure>k__BackingField; // 0x18

	// Properties
	public SvtMultiPortraitEntity entity { get; set; }
	public UIStandFigureR standFigure { get; set; }

	// Methods

	// RVA: 0x179B988 Offset: 0x179B988 VA: 0x179B988
	public void .ctor(SvtMultiPortraitEntity entity, UIStandFigureR standFigure) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC909C Offset: 0xCC909C VA: 0xCC909C
	// RVA: 0x179B9D0 Offset: 0x179B9D0 VA: 0x179B9D0
	public SvtMultiPortraitEntity get_entity() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC90AC Offset: 0xCC90AC VA: 0xCC90AC
	// RVA: 0x179B9C0 Offset: 0x179B9C0 VA: 0x179B9C0
	private void set_entity(SvtMultiPortraitEntity value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC90BC Offset: 0xCC90BC VA: 0xCC90BC
	// RVA: 0x179B3C0 Offset: 0x179B3C0 VA: 0x179B3C0
	public UIStandFigureR get_standFigure() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC90CC Offset: 0xCC90CC VA: 0xCC90CC
	// RVA: 0x179B9C8 Offset: 0x179B9C8 VA: 0x179B9C8
	private void set_standFigure(UIStandFigureR value) { }
}

// Namespace: 
public class SwitchParameterDisplayComponent : BaseMonoBehaviour // TypeDefIndex: 6420
{
	// Methods

	// RVA: 0x1087228 Offset: 0x1087228 VA: 0x1087228
	public void .ctor() { }

	// RVA: 0x1087230 Offset: 0x1087230 VA: 0x1087230 Slot: 4
	public virtual bool ParameterChange(int count) { }

	// RVA: 0x1087238 Offset: 0x1087238 VA: 0x1087238 Slot: 5
	public virtual bool UpdateAlpha(float alpha) { }
}

// Namespace: 
public class SwitchUIWidgetComponent : SwitchParameterDisplayComponent // TypeDefIndex: 6421
{
	// Fields
	[SerializeField] // RVA: 0xC54390 Offset: 0xC54390 VA: 0xC54390
	protected UIWidget component; // 0x18
	protected UIWidget[] componentList; // 0x20

	// Methods

	// RVA: 0x10878A0 Offset: 0x10878A0 VA: 0x10878A0
	public void .ctor() { }

	// RVA: 0x10878A8 Offset: 0x10878A8 VA: 0x10878A8
	protected void OnDestroy() { }

	// RVA: 0x10878AC Offset: 0x10878AC VA: 0x10878AC
	public void Clear() { }

	// RVA: 0x10878EC Offset: 0x10878EC VA: 0x10878EC
	public void Set(UIWidget[] componentList) { }

	// RVA: 0x108799C Offset: 0x108799C VA: 0x108799C
	protected void Set(int count) { }

	// RVA: 0x10878B4 Offset: 0x10878B4 VA: 0x10878B4
	protected void ClearParam() { }

	// RVA: 0x1087B50 Offset: 0x1087B50 VA: 0x1087B50
	protected void SetParam(int num) { }

	// RVA: 0x1087BDC Offset: 0x1087BDC VA: 0x1087BDC
	protected void SetAlpha(float alpha) { }

	// RVA: 0x1087C20 Offset: 0x1087C20 VA: 0x1087C20 Slot: 4
	public override bool ParameterChange(int count) { }

	// RVA: 0x1087C84 Offset: 0x1087C84 VA: 0x1087C84 Slot: 5
	public override bool UpdateAlpha(float alpha) { }
}

// Namespace: 
public class SyncTransformComponent : MonoBehaviour // TypeDefIndex: 6422
{
	// Fields
	private bool isEnable; // 0x18
	private Transform child; // 0x20

	// Methods

	// RVA: 0x1087DEC Offset: 0x1087DEC VA: 0x1087DEC
	public void .ctor() { }

	// RVA: 0x1087DF4 Offset: 0x1087DF4 VA: 0x1087DF4
	public void setChild(Transform trans) { }

	// RVA: 0x1088054 Offset: 0x1088054 VA: 0x1088054
	private void LateUpdate() { }

	// RVA: 0x1087E04 Offset: 0x1087E04 VA: 0x1087E04
	private void sync() { }
}

// Namespace: 
public class TimeSyncAlphaSwitcher : MonoBehaviour // TypeDefIndex: 6423
{
	// Fields
	[SerializeField] // RVA: 0xC543A0 Offset: 0xC543A0 VA: 0xC543A0
	protected UIWidget widget; // 0x18
	[SerializeField] // RVA: 0xC543B0 Offset: 0xC543B0 VA: 0xC543B0
	protected AnimationCurve alphaCurve; // 0x20
	[SerializeField] // RVA: 0xC543C0 Offset: 0xC543C0 VA: 0xC543C0
	protected int toggleNum; // 0x28
	[SerializeField] // RVA: 0xC543D0 Offset: 0xC543D0 VA: 0xC543D0
	protected int toggleIndex; // 0x2C
	[SerializeField] // RVA: 0xC543E0 Offset: 0xC543E0 VA: 0xC543E0
	protected float toggleFreqRate; // 0x30
	protected float delay; // 0x34
	[CompilerGeneratedAttribute] // RVA: 0xC543F0 Offset: 0xC543F0 VA: 0xC543F0
	[DebuggerBrowsableAttribute] // RVA: 0xC543F0 Offset: 0xC543F0 VA: 0xC543F0
	private int <firstFreqCount>k__BackingField; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC5442C Offset: 0xC5442C VA: 0xC5442C
	[DebuggerBrowsableAttribute] // RVA: 0xC5442C Offset: 0xC5442C VA: 0xC5442C
	private float <SyncReferenceTime>k__BackingField; // 0x3C

	// Properties
	protected bool IsAlphaBlink { get; }
	protected float TimePerFreq { get; }
	protected int Remainder { get; }
	protected int firstFreqCount { get; set; }
	protected float SyncReferenceTime { get; set; }

	// Methods

	// RVA: 0xEB9890 Offset: 0xEB9890 VA: 0xEB9890
	public void .ctor() { }

	// RVA: 0xEB98A8 Offset: 0xEB98A8 VA: 0xEB98A8
	protected bool get_IsAlphaBlink() { }

	// RVA: 0xEB98B8 Offset: 0xEB98B8 VA: 0xEB98B8
	protected float get_TimePerFreq() { }

	// RVA: 0xEB98CC Offset: 0xEB98CC VA: 0xEB98CC
	protected int get_Remainder() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC90DC Offset: 0xCC90DC VA: 0xCC90DC
	// RVA: 0xEB9914 Offset: 0xEB9914 VA: 0xEB9914
	protected void set_firstFreqCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC90EC Offset: 0xCC90EC VA: 0xCC90EC
	// RVA: 0xEB991C Offset: 0xEB991C VA: 0xEB991C
	protected int get_firstFreqCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC90FC Offset: 0xCC90FC VA: 0xCC90FC
	// RVA: 0xEB9924 Offset: 0xEB9924 VA: 0xEB9924
	protected void set_SyncReferenceTime(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC910C Offset: 0xCC910C VA: 0xCC910C
	// RVA: 0xEB992C Offset: 0xEB992C VA: 0xEB992C
	protected float get_SyncReferenceTime() { }

	// RVA: 0xEB9934 Offset: 0xEB9934 VA: 0xEB9934
	protected void Update() { }

	// RVA: 0xEB9A8C Offset: 0xEB9A8C VA: 0xEB9A8C
	public void SetAlphaBlink(int num, int index, float time) { }

	// RVA: 0xEB9B14 Offset: 0xEB9B14 VA: 0xEB9B14
	public void Clear() { }

	// RVA: 0xEB9938 Offset: 0xEB9938 VA: 0xEB9938
	protected void UpdateAlpha() { }
}

// Namespace: 
public class UIButtonObjectComponent : MonoBehaviour // TypeDefIndex: 6424
{
	// Fields
	public Collider col; // 0x18
	public UISprite buttonsprite; // 0x20
	public UILabel textlabel; // 0x28

	// Methods

	// RVA: 0x21381FC Offset: 0x21381FC VA: 0x21381FC
	public void .ctor() { }

	// RVA: 0x2138204 Offset: 0x2138204 VA: 0x2138204
	public void setActive(bool flg) { }
}

// Namespace: 
public class UICounterLabel : MonoBehaviour // TypeDefIndex: 6425
{
	// Fields
	[SerializeField] // RVA: 0xC54468 Offset: 0xC54468 VA: 0xC54468
	private UILabel countLabel; // 0x18
	[SerializeField] // RVA: 0xC54478 Offset: 0xC54478 VA: 0xC54478
	private float animTime; // 0x20
	private string format; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC54488 Offset: 0xC54488 VA: 0xC54488
	[DebuggerBrowsableAttribute] // RVA: 0xC54488 Offset: 0xC54488 VA: 0xC54488
	private int <MainCount>k__BackingField; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC544C4 Offset: 0xC544C4 VA: 0xC544C4
	[DebuggerBrowsableAttribute] // RVA: 0xC544C4 Offset: 0xC544C4 VA: 0xC544C4
	private int <AddCount>k__BackingField; // 0x34
	private bool isFixedWidth; // 0x38

	// Properties
	public int MainCount { get; set; }
	public int AddCount { get; set; }
	public bool IsAnimFinished { get; }

	// Methods

	// RVA: 0x1B0E554 Offset: 0x1B0E554 VA: 0x1B0E554
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC911C Offset: 0xCC911C VA: 0xCC911C
	// RVA: 0x1B0E55C Offset: 0x1B0E55C VA: 0x1B0E55C
	public int get_MainCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC912C Offset: 0xCC912C VA: 0xCC912C
	// RVA: 0x1B0E564 Offset: 0x1B0E564 VA: 0x1B0E564
	public void set_MainCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC913C Offset: 0xCC913C VA: 0xCC913C
	// RVA: 0x1B0E56C Offset: 0x1B0E56C VA: 0x1B0E56C
	public int get_AddCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC914C Offset: 0xCC914C VA: 0xCC914C
	// RVA: 0x1B0E574 Offset: 0x1B0E574 VA: 0x1B0E574
	public void set_AddCount(int value) { }

	// RVA: 0x1B0E57C Offset: 0x1B0E57C VA: 0x1B0E57C
	public bool get_IsAnimFinished() { }

	// RVA: 0x1B0E58C Offset: 0x1B0E58C VA: 0x1B0E58C
	public void Setup(int count, float animTime = 1, string format = "", bool isFixedWidth = False) { }

	// RVA: 0x1B0E5A4 Offset: 0x1B0E5A4 VA: 0x1B0E5A4
	public void PlayAnimation() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC915C Offset: 0xCC915C VA: 0xCC915C
	// RVA: 0x1B0E5E8 Offset: 0x1B0E5E8 VA: 0x1B0E5E8
	private IEnumerator ExecAnimation() { }

	// RVA: 0x1B0E660 Offset: 0x1B0E660 VA: 0x1B0E660
	public void SetCountLabel(int count) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42804 Offset: 0xC42804 VA: 0xC42804
private sealed class UICounterLabel.<ExecAnimation>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6426
{
	// Fields
	internal float <add>__0; // 0x10
	internal int <i>__1; // 0x14
	internal int <resultCount>__2; // 0x18
	internal UICounterLabel $this; // 0x20
	internal object $current; // 0x28
	internal bool $disposing; // 0x30
	internal int $PC; // 0x34

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8B10 Offset: 0xCD8B10 VA: 0xCD8B10
	// RVA: 0x1B0E658 Offset: 0x1B0E658 VA: 0x1B0E658
	public void .ctor() { }

	// RVA: 0x1B0E7C0 Offset: 0x1B0E7C0 VA: 0x1B0E7C0 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8B20 Offset: 0xCD8B20 VA: 0xCD8B20
	// RVA: 0x1B0E9EC Offset: 0x1B0E9EC VA: 0x1B0E9EC Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8B30 Offset: 0xCD8B30 VA: 0xCD8B30
	// RVA: 0x1B0E9F4 Offset: 0x1B0E9F4 VA: 0x1B0E9F4 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8B40 Offset: 0xCD8B40 VA: 0xCD8B40
	// RVA: 0x1B0E9FC Offset: 0x1B0E9FC VA: 0x1B0E9FC Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8B50 Offset: 0xCD8B50 VA: 0xCD8B50
	// RVA: 0x1B0EA10 Offset: 0x1B0EA10 VA: 0x1B0EA10 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class UIIconLabel : BaseMonoBehaviour // TypeDefIndex: 6427
{
	// Fields
	[SerializeField] // RVA: 0xC54500 Offset: 0xC54500 VA: 0xC54500
	protected UILabel textLabel; // 0x18
	[SerializeField] // RVA: 0xC54510 Offset: 0xC54510 VA: 0xC54510
	protected UILabel extentionTextLabel; // 0x20
	[SerializeField] // RVA: 0xC54520 Offset: 0xC54520 VA: 0xC54520
	protected UISprite iconSprite; // 0x28
	[SerializeField] // RVA: 0xC54530 Offset: 0xC54530 VA: 0xC54530
	protected int blankSize; // 0x30
	protected bool isCustmAtlas; // 0x34

	// Methods

	// RVA: 0x1BC45E4 Offset: 0x1BC45E4 VA: 0x1BC45E4
	public void .ctor() { }

	// RVA: 0x1BC45F4 Offset: 0x1BC45F4 VA: 0x1BC45F4
	public void Clear() { }

	// RVA: 0x1BC48E8 Offset: 0x1BC48E8 VA: 0x1BC48E8
	public void Set(IconLabelInfo info) { }

	// RVA: 0x1BC6260 Offset: 0x1BC6260 VA: 0x1BC6260
	public void Set(IconLabelInfo info, bool isHide) { }

	// RVA: 0x1BC6368 Offset: 0x1BC6368 VA: 0x1BC6368
	public void SetPurchaseDecision(IconLabelInfo.IconKind iconKind, int price = 0, int holdCount = -1) { }

	// RVA: 0x1BC6398 Offset: 0x1BC6398 VA: 0x1BC6398
	public void SetEventQuestion() { }

	// RVA: 0x1BC49FC Offset: 0x1BC49FC VA: 0x1BC49FC
	public void Set(IconLabelInfo.IconKind iconKind, int data = 0, int adjustData = 0, int equipData = 0, long time = 0, bool isHide = False, bool isMaxHide = False, int lv = 0) { }

	// RVA: 0x1BC63D4 Offset: 0x1BC63D4 VA: 0x1BC63D4
	protected Color GetPurchaseDecisionColor(int dispData, int compareData) { }

	// RVA: 0x1BC643C Offset: 0x1BC643C VA: 0x1BC643C
	public void SetCombineResTxt(int data, int adjustData, bool isLimit = False) { }

	// RVA: 0x1BC6574 Offset: 0x1BC6574 VA: 0x1BC6574
	public int GetFontSize() { }

	// RVA: 0x1BC65A8 Offset: 0x1BC65A8 VA: 0x1BC65A8
	public Vector2 GetIconSize() { }

	// RVA: 0x1BC6670 Offset: 0x1BC6670 VA: 0x1BC6670
	public void SetAlpha(float alpha) { }

	// RVA: 0x1BC6844 Offset: 0x1BC6844 VA: 0x1BC6844
	public Vector2Int GetTextLabelSize() { }

	// RVA: 0x1BC68C0 Offset: 0x1BC68C0 VA: 0x1BC68C0
	public void SetTextLabelSize(Vector2Int size) { }

	// RVA: 0x1BC6948 Offset: 0x1BC6948 VA: 0x1BC6948
	public void SetTextLabelPixelPerfect() { }

	// RVA: 0x1BC6980 Offset: 0x1BC6980 VA: 0x1BC6980
	public void SetTextLabelStrikeout() { }
}

// Namespace: 
public class UIRangeLabel : BaseMonoBehaviour // TypeDefIndex: 6428
{
	// Fields
	[SerializeField] // RVA: 0xC54540 Offset: 0xC54540 VA: 0xC54540
	protected Transform textBase; // 0x18
	[SerializeField] // RVA: 0xC54550 Offset: 0xC54550 VA: 0xC54550
	protected UILabel textLabel; // 0x20
	[SerializeField] // RVA: 0xC54560 Offset: 0xC54560 VA: 0xC54560
	protected UISprite iconSprite; // 0x28
	[SerializeField] // RVA: 0xC54570 Offset: 0xC54570 VA: 0xC54570
	protected int blankSize; // 0x30
	protected int textWidth; // 0x34

	// Properties
	public Color color { get; set; }
	public Color effectColor { get; set; }

	// Methods

	// RVA: 0x1C522A0 Offset: 0x1C522A0 VA: 0x1C522A0
	public void .ctor() { }

	// RVA: 0x1C522B4 Offset: 0x1C522B4 VA: 0x1C522B4
	public Color get_color() { }

	// RVA: 0x1C522E4 Offset: 0x1C522E4 VA: 0x1C522E4
	public void set_color(Color value) { }

	// RVA: 0x1C52344 Offset: 0x1C52344 VA: 0x1C52344
	public Color get_effectColor() { }

	// RVA: 0x1C52374 Offset: 0x1C52374 VA: 0x1C52374
	public void set_effectColor(Color value) { }

	// RVA: 0x1C523D4 Offset: 0x1C523D4 VA: 0x1C523D4
	protected void InitParam() { }

	// RVA: 0x1C52440 Offset: 0x1C52440 VA: 0x1C52440
	public void Clear() { }

	// RVA: 0x1C52540 Offset: 0x1C52540 VA: 0x1C52540
	public void Set(string text, string iconName, bool isIconPixelPerfect = True, bool critical = False) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC25430 Offset: 0xC25430 VA: 0xC25430
public class UIRootReScale : MonoBehaviour // TypeDefIndex: 6429
{
	// Fields
