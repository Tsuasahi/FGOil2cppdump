	public const SeManager.SystemSeKind BTN_WARNING = 2;
	public const SeManager.SystemSeKind METER = 3;
	public const SeManager.SystemSeKind GET_ITEM = 4;
	public const SeManager.SystemSeKind LEVEL_UP = 5;
	public const SeManager.SystemSeKind STATUS_OPEN = 6;
	public const SeManager.SystemSeKind WINDOW_SLIDE = 7;
	public const SeManager.SystemSeKind BTN_DECIDE = 8;
	public const SeManager.SystemSeKind UNIOPEN = 9;
	public const SeManager.SystemSeKind UNICLOSE = 10;
	public const SeManager.SystemSeKind LOCK = 11;
}

// Namespace: 
public enum SeManager.CommonSeKind // TypeDefIndex: 6559
{
	// Fields
	public int value__; // 0x0
	public const SeManager.CommonSeKind BATTLE_NORMAL_WAVE_FADE_IN = 0;
	public const SeManager.CommonSeKind BATTLE_BOSS_WAVE_FADE_IN = 1;
	public const SeManager.CommonSeKind BATTLE_CHARGE_SKILL = 2;
	public const SeManager.CommonSeKind BATTLE_GAMEOVER = 3;
	public const SeManager.CommonSeKind BATTLE_SET_COMMAND_CARD = 4;
	public const SeManager.CommonSeKind BATTLE_OPEN_COMMAND_CARD = 5;
	public const SeManager.CommonSeKind BATTLE_DECIDE_COMMANDO_CARD = 6;
	public const SeManager.CommonSeKind BATTLE_CHANGE_CRITICAL = 7;
	public const SeManager.CommonSeKind BATTLE_CHARGE_NP = 8;
	public const SeManager.CommonSeKind BATTLE_BTN_COMMON = 9;
	public const SeManager.CommonSeKind BATTLE_BTN_CANCEL = 10;
	public const SeManager.CommonSeKind BATTLE_OPEN_STATUS = 11;
	public const SeManager.CommonSeKind BATTLE_CLOSE_STATUS = 12;
	public const SeManager.CommonSeKind BATTLE_ADD_EXTRA_CARD = 13;
	public const SeManager.CommonSeKind BATTLE_USE_NP = 14;
	public const SeManager.CommonSeKind BATTLE_INCREMENT_MERTER = 15;
	public const SeManager.CommonSeKind BATTLE_COUNT_UP_NUM = 16;
	public const SeManager.CommonSeKind AREA_OPEN_QUEST_SPOT = 17;
	public const SeManager.CommonSeKind AREA_BTN_DISE = 18;
	public const SeManager.CommonSeKind COMBINE = 19;
	public const SeManager.CommonSeKind MISSION_POP_BAR = 20;
	public const SeManager.CommonSeKind TEST_SE = 21;
	public const SeManager.CommonSeKind WORLD_MOVE_MAP_PT1 = 22;
	public const SeManager.CommonSeKind WORLD_MOVE_MAP_PT2 = 23;
	public const SeManager.CommonSeKind BATTLE_SKILL_SHIFT = 24;
	public const SeManager.CommonSeKind BATTLE_DECIDE_ORDER_1 = 25;
	public const SeManager.CommonSeKind BATTLE_DECIDE_ORDER_2 = 26;
	public const SeManager.CommonSeKind BATTLE_ERROR_ORDER = 27;
	public const SeManager.CommonSeKind AREA_DECIDE_TITLE_WAR_BOARD = 28;
	public const SeManager.CommonSeKind EVENT_CONQUEST_GET_SE = 29;
}

// Namespace: 
public class SePlayer // TypeDefIndex: 6560
{
	// Fields
	protected SePlayer.SeType seType; // 0x10
	protected int playNum; // 0x14
	protected string cueSheetName; // 0x18
	protected string objName; // 0x20
	protected bool isStop; // 0x28
	protected bool isLoop; // 0x29
	protected bool isLoading; // 0x2A
	protected bool isWaitSource; // 0x2B
	protected bool notOverwrite; // 0x2C
	protected float volume; // 0x30
	protected CriAtomSource source; // 0x38
	protected Action callbackFunc; // 0x40
	protected float fadeBaseVolume; // 0x48
	protected float fadeChangeVolume; // 0x4C
	protected float playTime; // 0x50
	protected float fadeinTime; // 0x54
	protected float fadeoutTime; // 0x58
	protected float pitchValue; // 0x5C
	protected bool changePitchRequest; // 0x60

	// Properties
	public SePlayer.SeType Type { get; }
	public int PlayNum { get; }
	public string AssetName { get; }
	public string DataName { get; }
	public bool IsBusy { get; }
	public bool IsLoop { get; }
	public bool IsPause { get; }
	public float Pitch { get; set; }

	// Methods

	// RVA: 0x17349EC Offset: 0x17349EC VA: 0x17349EC
	public void .ctor(int num, SePlayer.SeType type, AssetData.Type assetType, string pathName, string name, float volume, bool isLoop, float fadeinTime, Action callbackFunc, bool notOverwrite = False) { }

	// RVA: 0x17338FC Offset: 0x17338FC VA: 0x17338FC
	public SePlayer.SeType get_Type() { }

	// RVA: 0x1734350 Offset: 0x1734350 VA: 0x1734350
	public int get_PlayNum() { }

	// RVA: 0x173459C Offset: 0x173459C VA: 0x173459C
	public string get_AssetName() { }

	// RVA: 0x173445C Offset: 0x173445C VA: 0x173445C
	public string get_DataName() { }

	// RVA: 0x1734808 Offset: 0x1734808 VA: 0x1734808
	public bool get_IsBusy() { }

	// RVA: 0x1735A04 Offset: 0x1735A04 VA: 0x1735A04
	public bool get_IsLoop() { }

	// RVA: 0x1734F1C Offset: 0x1734F1C VA: 0x1734F1C
	public bool get_IsPause() { }

	// RVA: 0x1733904 Offset: 0x1733904 VA: 0x1733904
	public void SetPause(bool isPause) { }

	// RVA: 0x1735948 Offset: 0x1735948 VA: 0x1735948
	protected float GetBaseVolume() { }

	// RVA: 0x1735AA4 Offset: 0x1735AA4 VA: 0x1735AA4
	public void Destroy() { }

	// RVA: 0x1735B48 Offset: 0x1735B48 VA: 0x1735B48
	public void RemoveCallback(Action callbackFunc) { }

	// RVA: 0x17356D4 Offset: 0x17356D4 VA: 0x17356D4
	public void Callback() { }

	// RVA: 0x1733E70 Offset: 0x1733E70 VA: 0x1733E70
	public void StopSe(float fadeoutTime = 0) { }

	// RVA: 0x1734B78 Offset: 0x1734B78 VA: 0x1734B78
	public bool ChangeVolume(float volume, float fadeTime) { }

	// RVA: 0x1733A68 Offset: 0x1733A68 VA: 0x1733A68
	public void MuteSe() { }

	// RVA: 0x1734FBC Offset: 0x1734FBC VA: 0x1734FBC
	public bool Update(float delta) { }

	// RVA: 0x1734CE8 Offset: 0x1734CE8 VA: 0x1734CE8
	public void set_Pitch(float value) { }

	// RVA: 0x1734CF8 Offset: 0x1734CF8 VA: 0x1734CF8
	public float get_Pitch() { }
}

// Namespace: 
public enum SePlayer.SeType // TypeDefIndex: 6561
{
	// Fields
	public int value__; // 0x0
	public const SePlayer.SeType NORMAL = 0;
	public const SePlayer.SeType VOICE = 1;
}

// Namespace: 
public class SingletonMonoBehaviour<T> : MonoBehaviour // TypeDefIndex: 6562
{
	// Fields
	private static T instance; // 0x0

	// Properties
	public static T Instance { get; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21C1F10 Offset: 0x21C1F10 VA: 0x21C1F10
	|-SingletonMonoBehaviour<AccountingManager>..ctor
	|-SingletonMonoBehaviour<AdManager>..ctor
	|-SingletonMonoBehaviour<AndroidBackKeyManager>..ctor
	|-SingletonMonoBehaviour<AssetManager>..ctor
	|-SingletonMonoBehaviour<AtlasManager>..ctor
	|-SingletonMonoBehaviour<AutomatedAction>..ctor
	|-SingletonMonoBehaviour<AvalonNotificationManager>..ctor
	|-SingletonMonoBehaviour<AvalonSceneManager>..ctor
	|-SingletonMonoBehaviour<BattleChrManager>..ctor
	|-SingletonMonoBehaviour<BattleLogicDebug>..ctor
	|-SingletonMonoBehaviour<BattleRandom>..ctor
	|-SingletonMonoBehaviour<BattleSeManager>..ctor
	|-SingletonMonoBehaviour<BattleSequenceManager>..ctor
	|-SingletonMonoBehaviour<BgmManager>..ctor
	|-SingletonMonoBehaviour<BillBoardGroupManager>..ctor
	|-SingletonMonoBehaviour<CharaGraphManager>..ctor
	|-SingletonMonoBehaviour<CommandSpellIconManager>..ctor
	|-SingletonMonoBehaviour<CommonEffectManager>..ctor
	|-SingletonMonoBehaviour<CommonUI>..ctor
	|-SingletonMonoBehaviour<DataManager>..ctor
	|-SingletonMonoBehaviour<DesignCardManager>..ctor
	|-SingletonMonoBehaviour<DisplayPrint>..ctor
	|-SingletonMonoBehaviour<EndrolEffectManager>..ctor
	|-SingletonMonoBehaviour<FGOSequenceManager>..ctor
	|-SingletonMonoBehaviour<FSUtility>..ctor
	|-SingletonMonoBehaviour<FlashingIconManager>..ctor
	|-SingletonMonoBehaviour<LocalizationManager>..ctor
	|-SingletonMonoBehaviour<MainMenuBar>..ctor
	|-SingletonMonoBehaviour<ManagementManager>..ctor
	|-SingletonMonoBehaviour<MasterFaceManager>..ctor
	|-SingletonMonoBehaviour<MasterFigureManagerOld>..ctor
	|-SingletonMonoBehaviour<MasterFullFigureManager>..ctor
	|-SingletonMonoBehaviour<NetworkManager>..ctor
	|-SingletonMonoBehaviour<OptionManager>..ctor
	|-SingletonMonoBehaviour<OuterFrameController>..ctor
	|-SingletonMonoBehaviour<ProgramEffectManager>..ctor
	|-SingletonMonoBehaviour<QuestAfterAction>..ctor
	|-SingletonMonoBehaviour<SafetyNetManager>..ctor
	|-SingletonMonoBehaviour<ScriptManager>..ctor
	|-SingletonMonoBehaviour<SeManager>..ctor
	|-SingletonMonoBehaviour<ServantAssetLoadManager>..ctor
	|-SingletonMonoBehaviour<ShiningIconManager>..ctor
	|-SingletonMonoBehaviour<SoundManager>..ctor
	|-SingletonMonoBehaviour<Spawner>..ctor
	|-SingletonMonoBehaviour<StandFigureManager>..ctor
	|-SingletonMonoBehaviour<StateLog>..ctor
	|-SingletonMonoBehaviour<SummonAssetManager>..ctor
	|-SingletonMonoBehaviour<SwitchParameterDisplayManager>..ctor
	|-SingletonMonoBehaviour<object>..ctor
	|-SingletonMonoBehaviour<TestManager>..ctor
	|-SingletonMonoBehaviour<TouchEffectManager>..ctor
	|-SingletonMonoBehaviour<UIRectUpdater>..ctor
	|-SingletonMonoBehaviour<WarBoardManager>..ctor
	|-SingletonMonoBehaviour<WebViewManager>..ctor
	*/

	// RVA: -1 Offset: -1
	public static T get_Instance() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21C1F3C Offset: 0x21C1F3C VA: 0x21C1F3C
	|-SingletonMonoBehaviour<AccountingManager>.get_Instance
	|-SingletonMonoBehaviour<AdManager>.get_Instance
	|-SingletonMonoBehaviour<AndroidBackKeyManager>.get_Instance
	|-SingletonMonoBehaviour<AssetManager>.get_Instance
	|-SingletonMonoBehaviour<AtlasManager>.get_Instance
	|-SingletonMonoBehaviour<AutomatedAction>.get_Instance
	|-SingletonMonoBehaviour<AvalonNotificationManager>.get_Instance
	|-SingletonMonoBehaviour<AvalonSceneManager>.get_Instance
	|-SingletonMonoBehaviour<BattleChrManager>.get_Instance
	|-SingletonMonoBehaviour<BattleSeManager>.get_Instance
	|-SingletonMonoBehaviour<BattleSequenceManager>.get_Instance
	|-SingletonMonoBehaviour<BgmManager>.get_Instance
	|-SingletonMonoBehaviour<BillBoardGroupManager>.get_Instance
	|-SingletonMonoBehaviour<CharaGraphManager>.get_Instance
	|-SingletonMonoBehaviour<CommonEffectManager>.get_Instance
	|-SingletonMonoBehaviour<CommonUI>.get_Instance
	|-SingletonMonoBehaviour<DataManager>.get_Instance
	|-SingletonMonoBehaviour<DesignCardManager>.get_Instance
	|-SingletonMonoBehaviour<FGOSequenceManager>.get_Instance
	|-SingletonMonoBehaviour<FSUtility>.get_Instance
	|-SingletonMonoBehaviour<FlashingIconManager>.get_Instance
	|-SingletonMonoBehaviour<LocalizationManager>.get_Instance
	|-SingletonMonoBehaviour<MainMenuBar>.get_Instance
	|-SingletonMonoBehaviour<ManagementManager>.get_Instance
	|-SingletonMonoBehaviour<MasterFaceManager>.get_Instance
	|-SingletonMonoBehaviour<MasterFigureManagerOld>.get_Instance
	|-SingletonMonoBehaviour<MasterFullFigureManager>.get_Instance
	|-SingletonMonoBehaviour<NetworkManager>.get_Instance
	|-SingletonMonoBehaviour<ProgramEffectManager>.get_Instance
	|-SingletonMonoBehaviour<QuestAfterAction>.get_Instance
	|-SingletonMonoBehaviour<ScriptManager>.get_Instance
	|-SingletonMonoBehaviour<SeManager>.get_Instance
	|-SingletonMonoBehaviour<ServantAssetLoadManager>.get_Instance
	|-SingletonMonoBehaviour<SoundManager>.get_Instance
	|-SingletonMonoBehaviour<Spawner>.get_Instance
	|-SingletonMonoBehaviour<StandFigureManager>.get_Instance
	|-SingletonMonoBehaviour<SummonAssetManager>.get_Instance
	|-SingletonMonoBehaviour<SwitchParameterDisplayManager>.get_Instance
	|-SingletonMonoBehaviour<object>.get_Instance
	|-SingletonMonoBehaviour<TouchEffectManager>.get_Instance
	|-SingletonMonoBehaviour<WarBoardManager>.get_Instance
	|-SingletonMonoBehaviour<WebViewManager>.get_Instance
	*/

	// RVA: -1 Offset: -1
	protected void Awake() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21C21A4 Offset: 0x21C21A4 VA: 0x21C21A4
	|-SingletonMonoBehaviour<CommonUI>.Awake
	|-SingletonMonoBehaviour<FGOSequenceManager>.Awake
	|-SingletonMonoBehaviour<Spawner>.Awake
	|-SingletonMonoBehaviour<object>.Awake
	|-SingletonMonoBehaviour<TestManager>.Awake
	*/

	// RVA: -1 Offset: -1
	public static T getInstance() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21C21E0 Offset: 0x21C21E0 VA: 0x21C21E0
	|-SingletonMonoBehaviour<AssetManager>.getInstance
	|-SingletonMonoBehaviour<AtlasManager>.getInstance
	|-SingletonMonoBehaviour<AvalonSceneManager>.getInstance
	|-SingletonMonoBehaviour<BattleRandom>.getInstance
	|-SingletonMonoBehaviour<CommonUI>.getInstance
	|-SingletonMonoBehaviour<DataManager>.getInstance
	|-SingletonMonoBehaviour<ManagementManager>.getInstance
	|-SingletonMonoBehaviour<QuestAfterAction>.getInstance
	|-SingletonMonoBehaviour<Spawner>.getInstance
	|-SingletonMonoBehaviour<object>.getInstance
	|-SingletonMonoBehaviour<TouchEffectManager>.getInstance
	|-SingletonMonoBehaviour<UIRectUpdater>.getInstance
	|-SingletonMonoBehaviour<WarBoardManager>.getInstance
	*/

	// RVA: -1 Offset: -1
	protected bool CheckInstance() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21C222C Offset: 0x21C222C VA: 0x21C222C
	|-SingletonMonoBehaviour<ManagementManager>.CheckInstance
	|-SingletonMonoBehaviour<object>.CheckInstance
	|-SingletonMonoBehaviour<WarBoardManager>.CheckInstance
	*/
}

// Namespace: 
public class SoundManager : SingletonMonoBehaviour<SoundManager> // TypeDefIndex: 6563
{
	// Fields
	public static readonly float DEFAULT_VOLUME; // 0x0
	public static readonly string RESIDENT_RESOURCE_SOUND_NAME; // 0x8
	[SerializeField] // RVA: 0xC55294 Offset: 0xC55294 VA: 0xC55294
	protected CriAtom criware; // 0x18
	[SerializeField] // RVA: 0xC552A4 Offset: 0xC552A4 VA: 0xC552A4
	protected CriWareInitializer initializer; // 0x20
	protected Dictionary<string, SoundManager.CpkLoader> SoundCpkLoader; // 0x28
	protected Dictionary<string, CriFsBinder> SoundBinders; // 0x30
	protected Dictionary<string, int> assetNameCounter; // 0x38
	protected bool isBusy; // 0x40

	// Properties
	public CriAtom CriwareComp { get; }
	public CriWareInitializer Initializer { get; }
	public bool IsBusy { get; }

	// Methods

	// RVA: 0x175E6E4 Offset: 0x175E6E4 VA: 0x175E6E4
	public void .ctor() { }

	// RVA: 0x1758040 Offset: 0x1758040 VA: 0x1758040
	public CriAtom get_CriwareComp() { }

	// RVA: 0x175E764 Offset: 0x175E764 VA: 0x175E764
	public CriWareInitializer get_Initializer() { }

	// RVA: 0x175E76C Offset: 0x175E76C VA: 0x175E76C
	public string GetCueSheet(string cueName) { }

	// RVA: 0x175E878 Offset: 0x175E878 VA: 0x175E878
	public string[] GetCueList(string cueSheetName) { }

	// RVA: 0x175EA88 Offset: 0x175EA88 VA: 0x175EA88
	public CriAtomEx.CueInfo[] GetCueInfoList(string cueSheetName) { }

	// RVA: 0x175EBD8 Offset: 0x175EBD8 VA: 0x175EBD8
	public CriAtomEx.CueInfo GetCueInfo(string cueSheetName, string cueName) { }

	// RVA: 0x175ED1C Offset: 0x175ED1C VA: 0x175ED1C
	public bool get_IsBusy() { }

	// RVA: 0x175EDC0 Offset: 0x175EDC0 VA: 0x175EDC0
	public static void reboot() { }

	// RVA: 0x175F14C Offset: 0x175F14C VA: 0x175F14C
	public static void initialize() { }

	// RVA: 0x175F22C Offset: 0x175F22C VA: 0x175F22C
	protected void Setup() { }

	// RVA: 0x175F460 Offset: 0x175F460 VA: 0x175F460
	public static void initializeAssetStorage() { }

	// RVA: 0x175F4C0 Offset: 0x175F4C0 VA: 0x175F4C0
	public static void reset() { }

	// RVA: 0x175EE78 Offset: 0x175EE78 VA: 0x175EE78
	public static void stopAll() { }

	// RVA: 0x175F548 Offset: 0x175F548 VA: 0x175F548
	private void OnDestroy() { }

	// RVA: 0x175F6E4 Offset: 0x175F6E4 VA: 0x175F6E4
	public static void SetBgmMasterVolume(float volume) { }

	// RVA: 0x175F754 Offset: 0x175F754 VA: 0x175F754
	public static void SetSeMasterVolume(float volume) { }

	// RVA: 0x175F7C4 Offset: 0x175F7C4 VA: 0x175F7C4
	public static void SetVoiceMasterVolume(float volume) { }

	// RVA: 0x175F834 Offset: 0x175F834 VA: 0x175F834
	public static void loadSe(string name, Action callbackFunc) { }

	// RVA: 0x175F8AC Offset: 0x175F8AC VA: 0x175F8AC
	public static void releaseSe(string name) { }

	// RVA: 0x175F914 Offset: 0x175F914 VA: 0x175F914
	public static bool isPlayBgm(string name) { }

	// RVA: 0x175F97C Offset: 0x175F97C VA: 0x175F97C
	public static bool isLoadingBgm(string name) { }

	// RVA: 0x175F9E4 Offset: 0x175F9E4 VA: 0x175F9E4
	public static void playBgm(string name) { }

	// RVA: 0x175FA64 Offset: 0x175FA64 VA: 0x175FA64
	public static void playBgm(string name, float volume) { }

	// RVA: 0x175FAE8 Offset: 0x175FAE8 VA: 0x175FAE8
	public static void playBgm(string name, float volume, float fadeinTime) { }

	// RVA: 0x175FB70 Offset: 0x175FB70 VA: 0x175FB70
	public static void fadeoutBgm(float fadeoutTime) { }

	// RVA: 0x175FBE4 Offset: 0x175FBE4 VA: 0x175FBE4
	public static void fadeoutBgm(float fadeoutTime, Action callback) { }

	// RVA: 0x175FC5C Offset: 0x175FC5C VA: 0x175FC5C
	public static void stopBgm() { }

	// RVA: 0x175FCC8 Offset: 0x175FCC8 VA: 0x175FCC8
	public static string getBgmName() { }

	// RVA: 0x175FD28 Offset: 0x175FD28 VA: 0x175FD28
	public static bool isPlayJingle(string name) { }

	// RVA: 0x175FD90 Offset: 0x175FD90 VA: 0x175FD90
	public static void playJingle(string name) { }

	// RVA: 0x175FE04 Offset: 0x175FE04 VA: 0x175FE04
	public static void playJingle(string name, float volume) { }

	// RVA: 0x175FE7C Offset: 0x175FE7C VA: 0x175FE7C
	public static void playJingle(string name, Action callbackFunc) { }

	// RVA: 0x175FF00 Offset: 0x175FF00 VA: 0x175FF00
	public static void playJingle(string name, float volume, Action callbackFunc) { }

	// RVA: 0x175FF88 Offset: 0x175FF88 VA: 0x175FF88
	public static void stopJingle() { }

	// RVA: 0x175FFE8 Offset: 0x175FFE8 VA: 0x175FFE8
	public static void fadeoutJingle(float fadeoutTime) { }

	// RVA: 0x174E5E8 Offset: 0x174E5E8 VA: 0x174E5E8
	public static void playSystemSe(SeManager.SystemSeKind kind) { }

	// RVA: 0x1760058 Offset: 0x1760058 VA: 0x1760058
	public static bool isBusySe(string name) { }

	// RVA: 0x17600C0 Offset: 0x17600C0 VA: 0x17600C0
	public static bool isBusyVoice(string name) { }

	// RVA: 0x17524A8 Offset: 0x17524A8 VA: 0x17524A8
	public static SePlayer playSe(string name) { }

	// RVA: 0x17605F4 Offset: 0x17605F4 VA: 0x17605F4
	public static SePlayer playSeContinue(string name) { }

	// RVA: 0x1760674 Offset: 0x1760674 VA: 0x1760674
	public static SePlayer playSeContinue(string assetName, string objectName) { }

	// RVA: 0x1760704 Offset: 0x1760704 VA: 0x1760704
	public static SePlayer playSe(string name, float volume) { }

	// RVA: 0x1760788 Offset: 0x1760788 VA: 0x1760788
	public static SePlayer playSe(string name, float volume, float fadeinTime) { }

	// RVA: 0x1760810 Offset: 0x1760810 VA: 0x1760810
	public static SePlayer playSe(string name, Action callbackFunc) { }

	// RVA: 0x176089C Offset: 0x176089C VA: 0x176089C
	public static SePlayer playSe(string name, float volume, Action callbackFunc) { }

	// RVA: 0x176092C Offset: 0x176092C VA: 0x176092C
	public static SePlayer playSe(string name, float volume, float fadeinTime, Action callbackFunc) { }

	// RVA: 0x1752418 Offset: 0x1752418 VA: 0x1752418
	public static SePlayer playSe(string assetName, string objectName) { }

	// RVA: 0x17609C0 Offset: 0x17609C0 VA: 0x17609C0
	public static SePlayer playSe(string assetName, string objectName, float volume, float fadeinTime) { }

	// RVA: 0x1760A58 Offset: 0x1760A58 VA: 0x1760A58
	public static SePlayer playSe(string assetName, string objectName, float volume, Action callbackFunc) { }

	// RVA: 0x1760AF0 Offset: 0x1760AF0 VA: 0x1760AF0
	public static SePlayer playSe(string assetName, string objectName, float volume, float fadeinTime, Action callbackFunc) { }

	// RVA: 0x1760B8C Offset: 0x1760B8C VA: 0x1760B8C
	public static SePlayer playSeLoop(string name) { }

	// RVA: 0x1760C04 Offset: 0x1760C04 VA: 0x1760C04
	public static SePlayer playSeLoop(string name, float volume) { }

	// RVA: 0x1760C80 Offset: 0x1760C80 VA: 0x1760C80
	public static SePlayer playSeLoop(string name, float volume, float fadeinTime) { }

	// RVA: 0x1760D00 Offset: 0x1760D00 VA: 0x1760D00
	public static SePlayer playSeLoop(string assetName, string name) { }

	// RVA: 0x1760D88 Offset: 0x1760D88 VA: 0x1760D88
	public static SePlayer playSeLoop(string assetName, string name, float volume) { }

	// RVA: 0x1760E14 Offset: 0x1760E14 VA: 0x1760E14
	public static SePlayer playSeLoop(string assetName, string name, float volume, float fadeinTime) { }

	// RVA: 0x1760EA4 Offset: 0x1760EA4 VA: 0x1760EA4
	public static void stopSe(float fadeoutTime = 0) { }

	// RVA: 0x1760F14 Offset: 0x1760F14 VA: 0x1760F14
	public static void stopSe(string name, float fadeoutTime = 0) { }

	// RVA: 0x1760F8C Offset: 0x1760F8C VA: 0x1760F8C
	public static void changeVolumeSe(string name, float volume, float fadeTime) { }

	// RVA: 0x176100C Offset: 0x176100C VA: 0x176100C
	public static void setPitchSe(string name, float pitch) { }

	// RVA: 0x1761084 Offset: 0x1761084 VA: 0x1761084
	public static float getPitchSe(string name) { }

	// RVA: 0x17610EC Offset: 0x17610EC VA: 0x17610EC
	public static void stopSystemSe() { }

	// RVA: 0x176114C Offset: 0x176114C VA: 0x176114C
	public static SePlayer playVoice(string name) { }

	// RVA: 0x17611C4 Offset: 0x17611C4 VA: 0x17611C4
	public static SePlayer playVoice(string name, float volume) { }

	// RVA: 0x1761240 Offset: 0x1761240 VA: 0x1761240
	public static SePlayer playVoice(string name, Action callbackFunc) { }

	// RVA: 0x17612C4 Offset: 0x17612C4 VA: 0x17612C4
	public static SePlayer playVoice(string name, float volume, Action callbackFunc) { }

	// RVA: 0x1752644 Offset: 0x1752644 VA: 0x1752644
	public static SePlayer playVoice(string assetName, string objectName, float volume, Action callbackFunc) { }

	// RVA: 0x176134C Offset: 0x176134C VA: 0x176134C
	public static SePlayer playVoice(AssetData assetData, string objectName, float volume, Action callbackFunc) { }

	// RVA: 0x17613DC Offset: 0x17613DC VA: 0x17613DC
	public static void stopVoice(string assetName, string objectName, float fadeoutTime = 0) { }

	// RVA: 0x1761464 Offset: 0x1761464 VA: 0x1761464
	public static void stopVoice(string name, float fadeoutTime = 0) { }

	// RVA: 0x1761558 Offset: 0x1761558 VA: 0x1761558
	public static void stopVoiceAll(float fadeoutTime = 0) { }

	// RVA: 0x17615C8 Offset: 0x17615C8 VA: 0x17615C8
	public static void changeVolumeVoice(string name, float volume, float fadeTime) { }

	// RVA: 0x176169C Offset: 0x176169C VA: 0x176169C
	public static string[] getDownloadAssetNames(string cueName) { }

	// RVA: 0x176180C Offset: 0x176180C VA: 0x176180C
	public static string getAssetName(string name) { }

	// RVA: 0x1760198 Offset: 0x1760198 VA: 0x1760198
	public static string getCharaVoiceAssetName(string name) { }

	// RVA: 0x176052C Offset: 0x176052C VA: 0x176052C
	public static string getCharaVoiceFileName(string name) { }

	// RVA: 0x1761884 Offset: 0x1761884 VA: 0x1761884
	public static SePlayer playCharaVoice(string name) { }

	// RVA: 0x1761958 Offset: 0x1761958 VA: 0x1761958
	public static SePlayer playCharaVoice(string name, float volume) { }

	// RVA: 0x1761A28 Offset: 0x1761A28 VA: 0x1761A28
	protected void RebootAssetNameCounter() { }

	// RVA: 0x1761A88 Offset: 0x1761A88 VA: 0x1761A88
	protected void AddAssetNameCounter(string name) { }

	// RVA: 0x1761B5C Offset: 0x1761B5C VA: 0x1761B5C
	protected bool SubAssetNameCounter(string name) { }

	// RVA: 0x1761CA4 Offset: 0x1761CA4 VA: 0x1761CA4
	protected bool ExistsAssetNameCounter(string name) { }

	// RVA: 0x1751C64 Offset: 0x1751C64 VA: 0x1751C64
	public static void loadAudioAssetStorage(string name, Action callback, SoundManager.CueType tp = 1) { }

	// RVA: 0x1757194 Offset: 0x1757194 VA: 0x1757194
	public void LoadAudioAssetStorage(string name, Action callback, SoundManager.CueType tp = 1) { }

	// RVA: 0x1761E30 Offset: 0x1761E30 VA: 0x1761E30
	public static void downloadAudioAssetStorage(string name, Action callback, SoundManager.CueType tp = 1) { }

	// RVA: 0x1761E9C Offset: 0x1761E9C VA: 0x1761E9C
	public void DownloadAudioAssetStorage(string name, Action callback, SoundManager.CueType tp = 1) { }

	// RVA: 0x17620E4 Offset: 0x17620E4 VA: 0x17620E4
	public static void downloadAudioAssetStorage(string[] nameList, Action callback, SoundManager.CueType tp = 1) { }

	// RVA: 0x1762150 Offset: 0x1762150 VA: 0x1762150
	public void DownloadAudioAssetStorage(string[] nameList, Action callback, SoundManager.CueType tp = 1) { }

	// RVA: 0x1752164 Offset: 0x1752164 VA: 0x1752164
	public static void releaseAudioAssetStorage(string name) { }

	// RVA: 0x175756C Offset: 0x175756C VA: 0x175756C
	public void ReleaseAudioAssetStorage(string name) { }

	// RVA: 0x175EF08 Offset: 0x175EF08 VA: 0x175EF08
	public void ReleaseAllAudioAssetStorage() { }

	// RVA: 0x1758798 Offset: 0x1758798 VA: 0x1758798
	public bool IsExistsSound(string cueSheetName, string name) { }

	// RVA: 0x1762490 Offset: 0x1762490 VA: 0x1762490
	public static bool checkServantVoice(string path, string name, bool isCheck = False) { }

	// RVA: 0x1757698 Offset: 0x1757698 VA: 0x1757698
	public static string getCpkPath() { }

	// RVA: 0x1762530 Offset: 0x1762530 VA: 0x1762530
	private static void .cctor() { }
}

// Namespace: 
public enum SoundManager.CueType // TypeDefIndex: 6564
{
	// Fields
	public int value__; // 0x0
	public const SoundManager.CueType ACB_ONLY = 0;
	public const SoundManager.CueType ALL = 1;
}

// Namespace: 
protected class SoundManager.CpkLoader // TypeDefIndex: 6565
{
	// Fields
	public string name; // 0x10
	public Action callback; // 0x18
	public SoundManager manager; // 0x20
	protected SoundManager.CueType cueType; // 0x28
	public IEnumerator loadCR; // 0x30

	// Methods

	// RVA: 0x1761D54 Offset: 0x1761D54 VA: 0x1761D54
	public void .ctor(SoundManager manager, string name, Action callback, SoundManager.CueType cueType) { }

	// RVA: 0x1761DA4 Offset: 0x1761DA4 VA: 0x1761DA4
	public void Start() { }

	// RVA: 0x17625FC Offset: 0x17625FC VA: 0x17625FC
	private void downloadAssetStorage() { }

	// RVA: 0x1762834 Offset: 0x1762834 VA: 0x1762834
	protected void EndLoadCallback(AssetData data) { }

	// RVA: 0x1762918 Offset: 0x1762918 VA: 0x1762918
	private string[] setupCpkAssetPath() { }

	// RVA: 0x1762ED8 Offset: 0x1762ED8 VA: 0x1762ED8
	private bool tryGetAssetPath(ref string cpkAssetPath) { }

	[DebuggerHiddenAttribute] // RVA: 0xCC9DC8 Offset: 0xCC9DC8 VA: 0xCC9DC8
	// RVA: 0x1762884 Offset: 0x1762884 VA: 0x1762884
	protected IEnumerator SetupCpk(string name) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42AB4 Offset: 0xC42AB4 VA: 0xC42AB4
private sealed class SoundManager.CpkLoader.<SetupCpk>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6566
{
	// Fields
	internal string <cpkAssetPath>__0; // 0x10
	internal string name; // 0x18
	internal CriFsBinder <binder>__0; // 0x20
	internal CriFsBindRequest <bind_request>__0; // 0x28
	internal SoundManager.CpkLoader $this; // 0x30
	internal object $current; // 0x38
	internal bool $disposing; // 0x40
	internal int $PC; // 0x44

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8F70 Offset: 0xCD8F70 VA: 0xCD8F70
	// RVA: 0x1762F88 Offset: 0x1762F88 VA: 0x1762F88
	public void .ctor() { }

	// RVA: 0x1762F90 Offset: 0x1762F90 VA: 0x1762F90 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8F80 Offset: 0xCD8F80 VA: 0xCD8F80
	// RVA: 0x1763478 Offset: 0x1763478 VA: 0x1763478 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8F90 Offset: 0xCD8F90 VA: 0xCD8F90
	// RVA: 0x1763480 Offset: 0x1763480 VA: 0x1763480 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8FA0 Offset: 0xCD8FA0 VA: 0xCD8FA0
	// RVA: 0x1763488 Offset: 0x1763488 VA: 0x1763488 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8FB0 Offset: 0xCD8FB0 VA: 0xCD8FB0
	// RVA: 0x176349C Offset: 0x176349C VA: 0x176349C Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42AC4 Offset: 0xC42AC4 VA: 0xC42AC4
private sealed class SoundManager.<DownloadAudioAssetStorage>c__AnonStorey0 // TypeDefIndex: 6567
{
	// Fields
	internal Action callback; // 0x10

	// Methods

	// RVA: 0x17620DC Offset: 0x17620DC VA: 0x17620DC
	public void .ctor() { }

	// RVA: 0x176259C Offset: 0x176259C VA: 0x176259C
	internal void <>m__0(AssetData d) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42AD4 Offset: 0xC42AD4 VA: 0xC42AD4
private sealed class SoundManager.<DownloadAudioAssetStorage>c__AnonStorey1 // TypeDefIndex: 6568
{
	// Fields
	internal Action callback; // 0x10

	// Methods

	// RVA: 0x1762488 Offset: 0x1762488 VA: 0x1762488
	public void .ctor() { }

	// RVA: 0x17625CC Offset: 0x17625CC VA: 0x17625CC
	internal void <>m__0() { }
}

// Namespace: 
public class SupportInfoJump // TypeDefIndex: 6569
{
	// Fields
	protected string returnSceneName; // 0x10
	protected OtherUserGameEntity otherUserGameEntity; // 0x18
	protected FollowerInfo followerInfo; // 0x20
	protected FriendStatus.Kind kind; // 0x28
	protected bool isSelect; // 0x2C
	protected int selectClassId; // 0x30
	protected int selectDeckId; // 0x34
	protected EventUpValSetupInfo eventSetupInfo; // 0x38
	protected QuestRestrictionInfo questRestrictionInfo; // 0x40

	// Properties
	public FriendStatus.Kind Kind { get; }
	public bool IsSelect { get; }
	public int SelectClassId { get; }
	public EventUpValSetupInfo EventSetupInfo { get; }
	public QuestRestrictionInfo QuestRestriction { get; }
	public int SelectDeckId { get; set; }

	// Methods

	// RVA: 0x1801110 Offset: 0x1801110 VA: 0x1801110
	public void .ctor(OtherUserGameEntity entity, FriendStatus.Kind kind, bool isSelect = False) { }

	// RVA: 0x1801158 Offset: 0x1801158 VA: 0x1801158
	public void .ctor(FollowerInfo followerInfo, FriendStatus.Kind kind, bool isSelect = False) { }

	// RVA: 0x18011A0 Offset: 0x18011A0 VA: 0x18011A0
	public OtherUserGameEntity GetFriendInfo() { }

	// RVA: 0x18011A8 Offset: 0x18011A8 VA: 0x18011A8
	public FollowerInfo GetFollowerInfo() { }

	// RVA: 0x18011B0 Offset: 0x18011B0 VA: 0x18011B0
	public void SetReturnScene(SceneList.Type type) { }

	// RVA: 0x180122C Offset: 0x180122C VA: 0x180122C
	public void SetReturnNowScene() { }

	// RVA: 0x1801298 Offset: 0x1801298 VA: 0x1801298
	public bool IsEnableReturnScene() { }

	// RVA: 0x18012A8 Offset: 0x18012A8 VA: 0x18012A8
	public bool ReturnScene(AvalonSceneManager.FadeType fade = 1, object data) { }

	// RVA: 0x1801344 Offset: 0x1801344 VA: 0x1801344
	public FriendStatus.Kind get_Kind() { }

	// RVA: 0x180134C Offset: 0x180134C VA: 0x180134C
	public bool get_IsSelect() { }

	// RVA: 0x1801354 Offset: 0x1801354 VA: 0x1801354
	public void SetSelectClassId(int classId) { }

	// RVA: 0x180135C Offset: 0x180135C VA: 0x180135C
	public int get_SelectClassId() { }

	// RVA: 0x1801364 Offset: 0x1801364 VA: 0x1801364
	public void SetSetupInfo(EventUpValSetupInfo eventSetupInfo, QuestRestrictionInfo questRestrictionInfo) { }

	// RVA: 0x180136C Offset: 0x180136C VA: 0x180136C
	public EventUpValSetupInfo get_EventSetupInfo() { }

	// RVA: 0x1801374 Offset: 0x1801374 VA: 0x1801374
	public QuestRestrictionInfo get_QuestRestriction() { }

	// RVA: 0x180137C Offset: 0x180137C VA: 0x180137C
	public void set_SelectDeckId(int value) { }

	// RVA: 0x1801384 Offset: 0x1801384 VA: 0x1801384
	public int get_SelectDeckId() { }
}

// Namespace: 
public class TestManager : SingletonMonoBehaviour<TestManager> // TypeDefIndex: 6570
{
	// Fields
	private static AndroidJavaClass classPlugin; // 0x0
	private static AndroidJavaObject objPlugin; // 0x8

	// Methods

	// RVA: 0xEB81A8 Offset: 0xEB81A8 VA: 0xEB81A8
	public void .ctor() { }

	// RVA: 0xEB81F8 Offset: 0xEB81F8 VA: 0xEB81F8
	public void Awake() { }

	// RVA: 0xEB82F4 Offset: 0xEB82F4 VA: 0xEB82F4
	public static void CallFuncA(string str) { }

	// RVA: 0xEB8424 Offset: 0xEB8424 VA: 0xEB8424
	public static string CallFuncB(string str) { }

	// RVA: 0xEB8558 Offset: 0xEB8558 VA: 0xEB8558
	public static void CallFuncC(string str) { }

	// RVA: 0xEB86DC Offset: 0xEB86DC VA: 0xEB86DC
	private static void .cctor() { }
}

// Namespace: 
public class UIRectUpdater : SingletonMonoBehaviour<UIRectUpdater> // TypeDefIndex: 6571
{
	// Fields
	private HashSet<UIRect> rects; // 0x18
	private bool isRectsDirty; // 0x20
	private List<UIRect> indexableRects; // 0x28

	// Methods

	// RVA: 0x1C538F0 Offset: 0x1C538F0 VA: 0x1C538F0
	public void .ctor() { }

	// RVA: 0x1C52C0C Offset: 0x1C52C0C VA: 0x1C52C0C
	public void Register(UIRect rect) { }

	// RVA: 0x1C52C88 Offset: 0x1C52C88 VA: 0x1C52C88
	public void Unregister(UIRect rect) { }

	// RVA: 0x1C53990 Offset: 0x1C53990 VA: 0x1C53990
	private void Update() { }
}

// Namespace: 
public class UserSaveData // TypeDefIndex: 6572
{
	// Methods

	// RVA: 0x155B870 Offset: 0x155B870 VA: 0x155B870
	public void .ctor() { }

	// RVA: 0x155B878 Offset: 0x155B878 VA: 0x155B878
	public static void DeleteSaveData(bool clearAsset = True) { }

	// RVA: 0x155BEB8 Offset: 0x155BEB8 VA: 0x155BEB8
	public static void DeleteContinueData() { }

	// RVA: 0x155B908 Offset: 0x155B908 VA: 0x155B908
	protected static void InitContinueData(bool isEnforceClear) { }
}

// Namespace: 
public class WebViewManager : SingletonMonoBehaviour<WebViewManager> // TypeDefIndex: 6573
{
	// Fields
	protected static readonly float OPEN_TIME; // 0x0
	protected static readonly float CLOSE_TIME; // 0x4
	[SerializeField] // RVA: 0xC552B4 Offset: 0xC552B4 VA: 0xC552B4
	protected UIPanel basePanel; // 0x18
	[SerializeField] // RVA: 0xC552C4 Offset: 0xC552C4 VA: 0xC552C4
	protected UIWidget baseWindow; // 0x20
	[SerializeField] // RVA: 0xC552D4 Offset: 0xC552D4 VA: 0xC552D4
	protected UIWidget webViewBase; // 0x28
	[SerializeField] // RVA: 0xC552E4 Offset: 0xC552E4 VA: 0xC552E4
	protected UIWidget webViewScreen; // 0x30
	[SerializeField] // RVA: 0xC552F4 Offset: 0xC552F4 VA: 0xC552F4
	protected Camera commonCamera; // 0x38
	[SerializeField] // RVA: 0xC55304 Offset: 0xC55304 VA: 0xC55304
	protected UILabel titleLabel; // 0x40
	protected Action callbackFunc; // 0x48
	protected bool isButtonEnable; // 0x50
	protected WebViewObject webView; // 0x58
	protected string errorMessage; // 0x60

	// Properties
	public bool IsBusy { get; }
	protected bool IsWideThan16to9 { get; }
	protected float ScreenToUiRatio { get; }

	// Methods

	// RVA: 0x13FA640 Offset: 0x13FA640 VA: 0x13FA640
	public void .ctor() { }

	// RVA: 0x13FA690 Offset: 0x13FA690 VA: 0x13FA690
	public bool get_IsBusy() { }

	// RVA: 0x13FA748 Offset: 0x13FA748 VA: 0x13FA748
	protected bool get_IsWideThan16to9() { }

	// RVA: 0x13FA790 Offset: 0x13FA790 VA: 0x13FA790
	protected float get_ScreenToUiRatio() { }

	// RVA: 0x13FA868 Offset: 0x13FA868 VA: 0x13FA868
	public static bool OpenNews(string title, int id, Action callbackFunc) { }

	// RVA: 0x13FAA38 Offset: 0x13FAA38 VA: 0x13FAA38
	public static bool OpenViewDynamic(string title, string path, Action callbackFunc) { }

	// RVA: 0x13FA450 Offset: 0x13FA450 VA: 0x13FA450
	public static bool OpenView(string title, string path, Action callbackFunc) { }

	// RVA: 0x13FB188 Offset: 0x13FB188 VA: 0x13FB188
	public static bool OpenStringView(string title, string text, Action callbackFunc) { }

	// RVA: 0x13FA934 Offset: 0x13FA934 VA: 0x13FA934
	protected bool OpenNewsLocal(string title, int id, Action callbackFunc) { }

	// RVA: 0x13FAB80 Offset: 0x13FAB80 VA: 0x13FAB80
	protected bool OpenViewLocal(string title, string path, string data, Action callbackFunc) { }

	// RVA: 0x13FB3F4 Offset: 0x13FB3F4 VA: 0x13FB3F4
	protected void EndOpen() { }

	// RVA: 0x13FB400 Offset: 0x13FB400 VA: 0x13FB400
	protected void OnStarted(string message) { }

	// RVA: 0x13FB404 Offset: 0x13FB404 VA: 0x13FB404
	protected void OnLoadComplete(string message) { }

	// RVA: 0x13FB438 Offset: 0x13FB438 VA: 0x13FB438
	protected void OnError(string msg) { }

	// RVA: 0x13FB440 Offset: 0x13FB440 VA: 0x13FB440
	protected void OnReceivedMessage(string msg) { }

	// RVA: 0x13FC3F0 Offset: 0x13FC3F0 VA: 0x13FC3F0
	protected void OpenSupportMail(bool isInquiry) { }

	// RVA: 0x13FC7AC Offset: 0x13FC7AC VA: 0x13FC7AC
	protected void OnWebViewStore(string url) { }

	// RVA: 0x13FC848 Offset: 0x13FC848 VA: 0x13FC848
	public void OnClickBack() { }

	// RVA: 0x13FC244 Offset: 0x13FC244 VA: 0x13FC244
	public void OnClickClose() { }

	// RVA: 0x13FC910 Offset: 0x13FC910 VA: 0x13FC910
	protected void EndClose() { }

	// RVA: 0x13FCA18 Offset: 0x13FCA18 VA: 0x13FCA18
	public void PressBackKey() { }

	// RVA: 0x13FB254 Offset: 0x13FB254 VA: 0x13FB254
	protected void SetMargins() { }

	// RVA: 0x13FCB08 Offset: 0x13FCB08 VA: 0x13FCB08
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC9DD8 Offset: 0xCC9DD8 VA: 0xCC9DD8
	// RVA: 0x13FCB60 Offset: 0x13FCB60 VA: 0x13FCB60
	private void <OpenViewLocal>m__0(string msg) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC9DE8 Offset: 0xCC9DE8 VA: 0xCC9DE8
	// RVA: 0x13FCB64 Offset: 0x13FCB64 VA: 0x13FCB64
	private void <OpenViewLocal>m__1(string msg) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC9DF8 Offset: 0xCC9DF8 VA: 0xCC9DF8
