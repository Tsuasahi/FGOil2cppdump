	// RVA: 0x1425CF4 Offset: 0x1425CF4 VA: 0x1425CF4
	public static bool SetBondAtlasImage(UISprite sprite, string spriteName) { }

	// RVA: 0x1425E74 Offset: 0x1425E74 VA: 0x1425E74
	public static void LoadEnemyAtlas(Action callback) { }

	// RVA: 0x1426058 Offset: 0x1426058 VA: 0x1426058
	public static void ReleaseEnemyAtlas() { }

	// RVA: 0x142617C Offset: 0x142617C VA: 0x142617C
	public static bool SetEnemy(UISprite sprite, int enemyImageId) { }

	// RVA: 0x1426420 Offset: 0x1426420 VA: 0x1426420
	public static void SetCharaGraphaOption(UISprite sprite, string optionName) { }

	// RVA: 0x1426574 Offset: 0x1426574 VA: 0x1426574
	public static void SetClass(UISprite sprite, int classId, int frameType) { }

	// RVA: 0x1426730 Offset: 0x1426730 VA: 0x1426730
	public static bool SetClassChart(UISprite sprite) { }

	// RVA: 0x14267A0 Offset: 0x14267A0 VA: 0x14267A0
	public static void SetServantType(UISprite sprite, int type, int frameType, int classId = 0) { }

	// RVA: 0x1426BD8 Offset: 0x1426BD8 VA: 0x1426BD8
	public static void SetFaceFrameIcon(UISprite sprite) { }

	// RVA: 0x1426C38 Offset: 0x1426C38 VA: 0x1426C38
	public static void SetFaceBaseIcon(UISprite sprite, int frameType, int classId = 0) { }

	// RVA: 0x1426E80 Offset: 0x1426E80 VA: 0x1426E80
	public static void SetDataLostFaceBaseIcon(UISprite sprite) { }

	// RVA: 0x1426EE0 Offset: 0x1426EE0 VA: 0x1426EE0
	public static void SetCommandCodeBaseIcon(UISprite sprite, int rarity) { }

	// RVA: 0x1426FA4 Offset: 0x1426FA4 VA: 0x1426FA4
	public static void SetFormationBase(UISprite sprite, int frameType, UIAtlas atlas) { }

	// RVA: 0x142714C Offset: 0x142714C VA: 0x142714C
	public static void SetFormationFrame(UISprite sprite, int frameType, UIAtlas atlas) { }

	// RVA: 0x14272F4 Offset: 0x14272F4 VA: 0x14272F4
	public static void SetFormationFrameForSupportSelect(UISprite sprite, int frameType, UIAtlas atlas) { }

	// RVA: 0x142749C Offset: 0x142749C VA: 0x142749C
	public static void LoadBanner(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x14276B8 Offset: 0x14276B8 VA: 0x14276B8
	public static void ReleaseBanner() { }

	// RVA: 0x1427844 Offset: 0x1427844 VA: 0x1427844
	public static bool SetBanner(UISprite sprite, string bannerName) { }

	// RVA: 0x1427A48 Offset: 0x1427A48 VA: 0x1427A48
	public static bool SetBanner(UISprite sprite, EventEntity eventEntity) { }

	// RVA: 0x1427BF8 Offset: 0x1427BF8 VA: 0x1427BF8
	public static bool SetBannerIcon(UISprite sprite, EventEntity eventEntity) { }

	// RVA: 0x141F9FC Offset: 0x141F9FC VA: 0x141F9FC
	public static void LoadEventUI(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x1427E80 Offset: 0x1427E80 VA: 0x1427E80
	public static void ReleaseEventUI() { }

	// RVA: 0x141FBF4 Offset: 0x141FBF4 VA: 0x141FBF4
	public static bool SetEventUI(UISprite sprite, string spriteName) { }

	// RVA: 0x1428120 Offset: 0x1428120 VA: 0x1428120
	public static void LoadEventUI(int eventId, Action callback, int loadParallelMax = 1) { }

	// RVA: 0x14281E8 Offset: 0x14281E8 VA: 0x14281E8
	public static void ReleaseEventUI(int eventId) { }

	// RVA: 0x1428280 Offset: 0x1428280 VA: 0x1428280
	public static bool SetEventUI(int eventId, UISprite sprite, string spriteName) { }

	// RVA: 0x1428348 Offset: 0x1428348 VA: 0x1428348
	public static bool IsExistBanner(string imgName) { }

	// RVA: 0x14284C0 Offset: 0x14284C0 VA: 0x14284C0
	public static bool IsExistShopBanner(int bannerId) { }

	// RVA: 0x142871C Offset: 0x142871C VA: 0x142871C
	public static bool SetShopBanner(UISprite sprite, int bannerId) { }

	// RVA: 0x1428A94 Offset: 0x1428A94 VA: 0x1428A94
	public static bool SetShopBanner(UISprite sprite, string bannerName) { }

	// RVA: 0x1428B08 Offset: 0x1428B08 VA: 0x1428B08
	public static bool SetSBuffIcon(UISprite sprite, int buffId) { }

	// RVA: 0x1428C68 Offset: 0x1428C68 VA: 0x1428C68
	public static bool SetSBuffIconByIconId(UISprite sprite, int buffIconId) { }

	// RVA: 0x1426B64 Offset: 0x1426B64 VA: 0x1426B64
	public static bool SetEventSprite(UISprite sprite, string spriteName) { }

	// RVA: 0x1429020 Offset: 0x1429020 VA: 0x1429020
	public static void LoadEquipFace(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x1429224 Offset: 0x1429224 VA: 0x1429224
	public static void LoadCommandCode(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x1429428 Offset: 0x1429428 VA: 0x1429428
	public static void LoadCommandCodeMini(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142962C Offset: 0x142962C VA: 0x142962C
	public static void LoadFriendshipExceed(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x1429830 Offset: 0x1429830 VA: 0x1429830
	public static void ReleaseFriendshipExceed() { }

	// RVA: 0x1421854 Offset: 0x1421854 VA: 0x1421854
	protected void RebootLocal() { }

	// RVA: 0x1421CA8 Offset: 0x1421CA8 VA: 0x1421CA8
	public void LoadOutGameAtlasLocal(Action callback) { }

	// RVA: 0x1429954 Offset: 0x1429954 VA: 0x1429954
	public void EndLoadOutGameAtlasLocal() { }

	// RVA: 0x1422468 Offset: 0x1422468 VA: 0x1422468
	public void LoadOutGameIconAtlasLocal(Action callback) { }

	// RVA: 0x1429970 Offset: 0x1429970 VA: 0x1429970
	public void EndLoadOutGameIconAtlasLocal2() { }

	// RVA: 0x14299E8 Offset: 0x14299E8 VA: 0x14299E8
	public void EndLoadOutGameIconAtlasLocal3() { }

	// RVA: 0x1429A60 Offset: 0x1429A60 VA: 0x1429A60
	public void EndLoadOutGameIconAtlasLocal() { }

	// RVA: 0x1429A7C Offset: 0x1429A7C VA: 0x1429A7C
	public void ReleaseNoneResidentAtlas() { }

	// RVA: 0x14218FC Offset: 0x14218FC VA: 0x14218FC
	protected void InitializeLocal() { }

	// RVA: 0x1429CBC Offset: 0x1429CBC VA: 0x1429CBC
	private void createSkinData() { }

	// RVA: 0x1429EB8 Offset: 0x1429EB8 VA: 0x1429EB8
	public void setupBootSkin() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8C34 Offset: 0xCC8C34 VA: 0xCC8C34
	// RVA: 0x1429E48 Offset: 0x1429E48 VA: 0x1429E48
	private IEnumerator loadAsset() { }

	// RVA: 0x1429F64 Offset: 0x1429F64 VA: 0x1429F64
	public static void LoadUISkin(Action callback, AtlasManager.SkinType skinType, int loadParallelMax = 1) { }

	// RVA: 0x142A3B4 Offset: 0x142A3B4 VA: 0x142A3B4
	public static void LoadUISkinTex(Action callback, AtlasManager.SkinType skinType, List<string> texNameList) { }

	// RVA: 0x1429FE4 Offset: 0x1429FE4 VA: 0x1429FE4
	protected void LoadUISkinLocal(Action callback, AtlasManager.SkinType skinType, List<string> texNameList, int loadParallelMax = 1) { }

	// RVA: 0x142A4D4 Offset: 0x142A4D4 VA: 0x142A4D4
	private string GetUiSkinChangePath(AtlasManager.SkinType skinType, int skinNum) { }

	// RVA: 0x142A434 Offset: 0x142A434 VA: 0x142A434
	public AtlasManager.SkinData getSkinAtlasData(AtlasManager.SkinType skinType) { }

	// RVA: 0x142A738 Offset: 0x142A738 VA: 0x142A738
	public bool isLoadedSkinData(AtlasManager.SkinType skinType) { }

	// RVA: 0x142A75C Offset: 0x142A75C VA: 0x142A75C
	protected void LoadUISkinEnd(AssetData data, AtlasManager.SkinType skinType, string path, bool isTex) { }

	// RVA: 0x1429C58 Offset: 0x1429C58 VA: 0x1429C58
	private void ReleaseNoneResidentUISkin() { }

	// RVA: 0x142A990 Offset: 0x142A990 VA: 0x142A990
	public void ReleaseUISkinDialog() { }

	// RVA: 0x142A658 Offset: 0x142A658 VA: 0x142A658
	public void ReleaseUISkin(AtlasManager.SkinType skinType, bool isForce = False) { }

	// RVA: 0x142A99C Offset: 0x142A99C VA: 0x142A99C
	protected UIAtlas[] CreateUIAtlasListFromAssetData(AssetData assetData, string prefixName) { }

	// RVA: 0x142AB70 Offset: 0x142AB70 VA: 0x142AB70
	protected void LoadItemEnd(AssetData data) { }

	// RVA: 0x142AD34 Offset: 0x142AD34 VA: 0x142AD34
	protected void LoadCoinEnd(AssetData data) { }

	// RVA: 0x142ADA0 Offset: 0x142ADA0 VA: 0x142ADA0
	protected void LoadClassIconsEnd(AssetData data) { }

	// RVA: 0x142AE58 Offset: 0x142AE58 VA: 0x142AE58
	protected void LoadSkillIconEnd(AssetData data) { }

	// RVA: 0x142B01C Offset: 0x142B01C VA: 0x142B01C
	protected void LoadMarkEnd(AssetData data) { }

	// RVA: 0x142B0A4 Offset: 0x142B0A4 VA: 0x142B0A4
	protected void generateFaceAtlasSpriteMapping(UIAtlas atlas, int spriteNumber) { }

	// RVA: 0x142B1F0 Offset: 0x142B1F0 VA: 0x142B1F0
	protected void generateFaceBattleAtlasSpriteMapping(UIAtlas atlas, int spriteNumber) { }

	// RVA: 0x142B33C Offset: 0x142B33C VA: 0x142B33C
	public static int GetFaceAtlasSpriteNumber(string spriteName) { }

	// RVA: 0x142B3A0 Offset: 0x142B3A0 VA: 0x142B3A0
	public int getFaceAtlasSpriteNumberLocal(string spriteName) { }

	// RVA: 0x142B450 Offset: 0x142B450 VA: 0x142B450
	protected void LoadFaceEnd(AssetData data) { }

	// RVA: 0x142B65C Offset: 0x142B65C VA: 0x142B65C
	protected void EndLoadFaceBattle(AssetData data) { }

	// RVA: 0x142B86C Offset: 0x142B86C VA: 0x142B86C
	protected void LoadCharaGraphEnd(AssetData data) { }

	// RVA: 0x1422734 Offset: 0x1422734 VA: 0x1422734
	public void SetCommonLocal(UISprite sprite) { }

	// RVA: 0x142B928 Offset: 0x142B928 VA: 0x142B928
	public bool checkCommonAtlasSprite(string spName) { }

	// RVA: 0x142B96C Offset: 0x142B96C VA: 0x142B96C
	public bool SetSkinLocal(UISprite sprite, AtlasManager.SkinType skinType) { }

	// RVA: 0x142B9D4 Offset: 0x142B9D4 VA: 0x142B9D4
	public bool SetSkinLocal(ExUISkinTexture skinTex, AtlasManager.SkinType skinType) { }

	// RVA: 0x1422D28 Offset: 0x1422D28 VA: 0x1422D28
	protected bool SetEquipItemLocal(UISprite sprite, int equipItemImageId) { }

	// RVA: 0x1423110 Offset: 0x1423110 VA: 0x1423110
	protected bool SetClassIconLocal(UISprite sprite, string classIconName) { }

	// RVA: 0x14234CC Offset: 0x14234CC VA: 0x14234CC
	protected bool SetClassTextIconLocal(UISprite sprite, string classIconName) { }

	// RVA: 0x1423774 Offset: 0x1423774 VA: 0x1423774
	protected bool SetGradeIconLocal(UISprite sprite, string baseName, UIAtlas baseAtlas) { }

	// RVA: 0x1423A4C Offset: 0x1423A4C VA: 0x1423A4C
	protected bool SetGradeBaseLocal(UISprite sprite, string baseName, UIAtlas baseAtlas) { }

	// RVA: 0x14227E0 Offset: 0x14227E0 VA: 0x14227E0
	protected bool SetItemLocal(UISprite sprite, int itemImageId) { }

	// RVA: 0x1422A84 Offset: 0x1422A84 VA: 0x1422A84
	protected bool SetCoinLocal(UISprite sprite, int coinImageId) { }

	// RVA: 0x1423D08 Offset: 0x1423D08 VA: 0x1423D08
	protected bool SetSkillIconLocal(UISprite sprite, int skillImageId) { }

	// RVA: 0x14240D0 Offset: 0x14240D0 VA: 0x14240D0
	protected bool SetMarkLocal(UISprite sprite, string markName) { }

	// RVA: 0x14242CC Offset: 0x14242CC VA: 0x14242CC
	protected bool SetEquipFaceLocal(UISprite sprite, int svtId) { }

	// RVA: 0x142BA44 Offset: 0x142BA44 VA: 0x142BA44
	protected string GetFaceSpriteName(int svtId, int imageLimitCount) { }

	// RVA: 0x14249F0 Offset: 0x14249F0 VA: 0x14249F0
	protected bool SetFaceLocal(UISprite sprite, int svtId, int imageLimitCount) { }

	// RVA: 0x1424694 Offset: 0x1424694 VA: 0x1424694
	protected bool SetFaceBattleLocal(UISprite sprite, int svtId, int imageLimitCount) { }

	// RVA: 0x1424EFC Offset: 0x1424EFC VA: 0x1424EFC
	protected bool SetNoMountFaceLocal(UISprite sprite) { }

	// RVA: 0x142500C Offset: 0x142500C VA: 0x142500C
	protected bool SetHideFaceLocal(UISprite sprite) { }

	// RVA: 0x1425244 Offset: 0x1425244 VA: 0x1425244
	protected bool SetDatalostFaceLocal(UISprite sprite) { }

	// RVA: 0x142547C Offset: 0x142547C VA: 0x142547C
	protected bool SetNotOpenFaceLocal(UISprite sprite) { }

	// RVA: 0x142577C Offset: 0x142577C VA: 0x142577C
	protected bool SetCommandCodeLocal(UISprite sprite, int commandCodeId) { }

	// RVA: 0x1425AAC Offset: 0x1425AAC VA: 0x1425AAC
	protected bool SetCommandCodeMiniLocal(UISprite sprite, int commandCodeId) { }

	// RVA: 0x1425D68 Offset: 0x1425D68 VA: 0x1425D68
	protected bool SetBondAtlasLocal(UISprite sprite, string spriteName) { }

	// RVA: 0x1428F14 Offset: 0x1428F14 VA: 0x1428F14
	protected bool SetEventLocalSprite(UISprite sprite, string spriteName) { }

	// RVA: 0x1425ED8 Offset: 0x1425ED8 VA: 0x1425ED8
	protected void LoadEnemyAtlasLocal(Action callback) { }

	// RVA: 0x142BB3C Offset: 0x142BB3C VA: 0x142BB3C
	protected void LoadEnemyAtlasEndLocal(AssetData aData) { }

	// RVA: 0x14260B4 Offset: 0x14260B4 VA: 0x14260B4
	protected void ReleaseEnemyAtlasLocal() { }

	// RVA: 0x142BD38 Offset: 0x142BD38 VA: 0x142BD38
	protected bool IsExistEnemyAtlasLocal(string spriteName) { }

	// RVA: 0x14261F0 Offset: 0x14261F0 VA: 0x14261F0
	protected bool SetEnemyLocal(UISprite sprite, int enemyImageId) { }

	// RVA: 0x1426494 Offset: 0x1426494 VA: 0x1426494
	protected void SetCharaGraphaOptionLocal(UISprite sprite, string optionName) { }

	// RVA: 0x1427510 Offset: 0x1427510 VA: 0x1427510
	protected void LoadBannerLocal(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142BE4C Offset: 0x142BE4C VA: 0x142BE4C
	protected void LoadBannerEndLocal() { }

	// RVA: 0x1427714 Offset: 0x1427714 VA: 0x1427714
	protected void ReleaseBannerLocal() { }

	// RVA: 0x14283AC Offset: 0x14283AC VA: 0x14283AC
	protected bool IsExistBannerLocal(string bannerName) { }

	// RVA: 0x14278B8 Offset: 0x14278B8 VA: 0x14278B8
	protected bool SetBannerLocal(UISprite sprite, string bannerName) { }

	// RVA: 0x1428608 Offset: 0x1428608 VA: 0x1428608
	protected bool IsExistShopBannerLocal(string bannerName) { }

	// RVA: 0x14288D0 Offset: 0x14288D0 VA: 0x14288D0
	protected bool SetShopBannerLocal(UISprite sprite, string bannerName) { }

	// RVA: 0x1427CF0 Offset: 0x1427CF0 VA: 0x1427CF0
	protected void LoadEventUILocal(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142BF2C Offset: 0x142BF2C VA: 0x142BF2C
	protected void LoadEventUIEndLocal(AssetData assetData) { }

	// RVA: 0x1427EDC Offset: 0x1427EDC VA: 0x1427EDC
	protected void ReleaseEventUILocal() { }

	// RVA: 0x1427FA4 Offset: 0x1427FA4 VA: 0x1427FA4
	protected bool SetEventUILocal(UISprite sprite, string spriteName) { }

	// RVA: 0x1428194 Offset: 0x1428194 VA: 0x1428194
	protected void LoadEventUILocal(int eventId, Action finishCallback, int loadParallelMax = 1) { }

	// RVA: 0x1428244 Offset: 0x1428244 VA: 0x1428244
	protected void ReleaseEventUILocal(int eventId) { }

	// RVA: 0x14282F4 Offset: 0x14282F4 VA: 0x14282F4
	protected bool SetEventUILocal(int eventId, UISprite sprite, string spriteName) { }

	// RVA: 0x142BFC0 Offset: 0x142BFC0 VA: 0x142BFC0
	public void LoadBuffIconAtlas(Action callback) { }

	// RVA: 0x142C2D0 Offset: 0x142C2D0 VA: 0x142C2D0
	public void UnloadBuffIconAtlas() { }

	// RVA: 0x142C0F8 Offset: 0x142C0F8 VA: 0x142C0F8
	protected void LoadBuffIconEnd(AssetData data) { }

	// RVA: 0x142C344 Offset: 0x142C344 VA: 0x142C344
	public void LoadWarBoardAtlas(Action callback) { }

	// RVA: 0x142C47C Offset: 0x142C47C VA: 0x142C47C
	protected void LoadWarBoardEnd(AssetData data) { }

	// RVA: 0x142C56C Offset: 0x142C56C VA: 0x142C56C
	public void UnloadWarBoardAtlas() { }

	// RVA: 0x1428B7C Offset: 0x1428B7C VA: 0x1428B7C
	protected bool SetBuffIconLocal(UISprite sprite, int buffId) { }

	// RVA: 0x1428CDC Offset: 0x1428CDC VA: 0x1428CDC
	protected bool SetBuffIconByIconIdLocal(UISprite sprite, int buffIconId) { }

	// RVA: 0x1429094 Offset: 0x1429094 VA: 0x1429094
	protected void LoadEquipFaceLocal(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142C5E0 Offset: 0x142C5E0 VA: 0x142C5E0
	protected void LoadEquipFaceEndLocal(AssetData data) { }

	// RVA: 0x1429AC8 Offset: 0x1429AC8 VA: 0x1429AC8
	protected void ReleaseEquipFaceLocal() { }

	// RVA: 0x1429298 Offset: 0x1429298 VA: 0x1429298
	protected void LoadCommandCodeLocal(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142C7DC Offset: 0x142C7DC VA: 0x142C7DC
	protected void LoadCommandCodeEndLocal(AssetData data) { }

	// RVA: 0x1429B90 Offset: 0x1429B90 VA: 0x1429B90
	protected void ReleaseCommandCodeLocal() { }

	// RVA: 0x142949C Offset: 0x142949C VA: 0x142949C
	protected void LoadCommandCodeMiniLocal(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142C9FC Offset: 0x142C9FC VA: 0x142C9FC
	protected void LoadCommandCodeMiniEndLocal(AssetData data) { }

	// RVA: 0x142CC1C Offset: 0x142CC1C VA: 0x142CC1C
	protected void ReleaseCommandCodeMiniLocal() { }

	// RVA: 0x14296A0 Offset: 0x14296A0 VA: 0x14296A0
	protected void LoadFriendshipExceedLocal(Action callback, int localParallelMax = 1) { }

	// RVA: 0x142CCE4 Offset: 0x142CCE4 VA: 0x142CCE4
	protected void LoadFriendshipExceedEndLocal(AssetData data) { }

	// RVA: 0x142988C Offset: 0x142988C VA: 0x142988C
	protected void ReleaseFriendshipExceedLocal() { }

	// RVA: 0x142CE8C Offset: 0x142CE8C VA: 0x142CE8C
	public static void LoadNotification(Action callback) { }

	// RVA: 0x142D07C Offset: 0x142D07C VA: 0x142D07C
	public static void ReleaseNotification() { }

	// RVA: 0x142CEF0 Offset: 0x142CEF0 VA: 0x142CEF0
	protected void LoadNotificationLocal(Action callback) { }

	// RVA: 0x142D1B8 Offset: 0x142D1B8 VA: 0x142D1B8
	protected void LoadNotificationEndLocal(AssetData data) { }

	// RVA: 0x142D0D8 Offset: 0x142D0D8 VA: 0x142D0D8
	protected void ReleaseNotificationLocal() { }

	// RVA: 0x142D270 Offset: 0x142D270 VA: 0x142D270
	public static void SetMissionBoardSprite(UISprite sprite, UIAtlas baseAtlas, string baseSpriteName, int bannerGroup) { }

	// RVA: 0x142D2FC Offset: 0x142D2FC VA: 0x142D2FC
	protected void SetMissionBoardSpriteLocal(UISprite sprite, UIAtlas baseAtlas, string baseSpriteName, int bannerGroup) { }

	// RVA: 0x142D4D0 Offset: 0x142D4D0 VA: 0x142D4D0
	public static void SetMissionBoardNoticeSprite(UISprite sprite, UIAtlas baseAtlas, bool isMissionClear, int bannerGroup) { }

	// RVA: 0x142D55C Offset: 0x142D55C VA: 0x142D55C
	protected void SetMissionBoardNoticeSpriteLocal(UISprite sprite, UIAtlas baseAtlas, bool isMissionClear, int bannerGroup) { }

	// RVA: 0x142D804 Offset: 0x142D804 VA: 0x142D804
	public static void LoadFaceAtlas(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142D878 Offset: 0x142D878 VA: 0x142D878
	protected void LoadFaceAtlasLocal(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142DA08 Offset: 0x142DA08 VA: 0x142DA08
	public static void ReleaseFaceAtlas() { }

	// RVA: 0x142DA64 Offset: 0x142DA64 VA: 0x142DA64
	protected void ReleaseFaceAtlasLocal() { }

	// RVA: 0x142DB2C Offset: 0x142DB2C VA: 0x142DB2C
	public static void LoadFaceBattleAtlas(Action callback) { }

	// RVA: 0x142DB90 Offset: 0x142DB90 VA: 0x142DB90
	protected void LoadFaceBattleAtlasLocal(Action callback) { }

	// RVA: 0x142DD10 Offset: 0x142DD10 VA: 0x142DD10
	public static void ReleaseFaceBattleAtlas() { }

	// RVA: 0x142DD6C Offset: 0x142DD6C VA: 0x142DD6C
	protected void ReleaseFaceBattleAtlasLocal() { }

	// RVA: 0x142DE38 Offset: 0x142DE38 VA: 0x142DE38
	public static void LoadCharaGraphOptionAtlas(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142DEAC Offset: 0x142DEAC VA: 0x142DEAC
	protected void LoadCharaGraphOptionAtlasLocal(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142E03C Offset: 0x142E03C VA: 0x142E03C
	public static void ReleaseCharaGraphOptionAtlas() { }

	// RVA: 0x142E098 Offset: 0x142E098 VA: 0x142E098
	protected void ReleaseCharaGraphOptionAtlasLocal() { }

	// RVA: 0x142E160 Offset: 0x142E160 VA: 0x142E160
	public static void LoadEventAtlas(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142E1D4 Offset: 0x142E1D4 VA: 0x142E1D4
	protected void LoadEventAtlasLocal(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142E364 Offset: 0x142E364 VA: 0x142E364
	protected void EndLoadEventAtlas(AssetData data) { }

	// RVA: 0x142E3F4 Offset: 0x142E3F4 VA: 0x142E3F4
	public static void ReleaseEventAtlas() { }

	// RVA: 0x142E450 Offset: 0x142E450 VA: 0x142E450
	protected void ReleaseEventAtlasLocal() { }

	// RVA: 0x142E518 Offset: 0x142E518 VA: 0x142E518
	protected void LoadCommandCardParamLocal(Action callback, int maxParallelLoad = 1) { }

	// RVA: 0x142E6A8 Offset: 0x142E6A8 VA: 0x142E6A8
	protected void LoadCommandCardParamEndLocal(AssetData data) { }

	// RVA: 0x142E85C Offset: 0x142E85C VA: 0x142E85C
	public static bool SetCommandCardIconImage(UISprite sprite, int commandCardValue, AtlasManager.CARD_ICON_TYPE iconType = 0, bool IsBright = False) { }

	// RVA: 0x142E8E8 Offset: 0x142E8E8 VA: 0x142E8E8
	protected bool SetCommandCardParamLocal(UISprite sprite, int commandCardValue, AtlasManager.CARD_ICON_TYPE iconType = 0, bool IsBright = False) { }

	// RVA: 0x142ED68 Offset: 0x142ED68 VA: 0x142ED68
	public static bool SetCommandCardImage(UISprite sprite, string spriteName) { }

	// RVA: 0x142EBAC Offset: 0x142EBAC VA: 0x142EBAC
	protected bool SetCommandCardLocal(UISprite sprite, string spriteName) { }

	// RVA: 0x142EDDC Offset: 0x142EDDC VA: 0x142EDDC
	public static void LoadMyRoomSoundAtlas(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142EE50 Offset: 0x142EE50 VA: 0x142EE50
	protected void LoadMyRoomSoundLocal(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142EFE0 Offset: 0x142EFE0 VA: 0x142EFE0
	protected void EndLoadMyRoomSound(AssetData data) { }

	// RVA: 0x142F194 Offset: 0x142F194 VA: 0x142F194
	public static void ReleaseMyRoomSoundAtlas() { }

	// RVA: 0x142F1F0 Offset: 0x142F1F0 VA: 0x142F1F0
	protected void ReleaseMyRoomSoundAtlasLocal() { }

	// RVA: 0x142F2B8 Offset: 0x142F2B8 VA: 0x142F2B8
	public static bool SetMyRoomSoundImage(UISprite sprite, int logoId) { }

	// RVA: 0x142F32C Offset: 0x142F32C VA: 0x142F32C
	protected bool SetMyRoomSoundLocal(UISprite sprite, int logoId) { }

	// RVA: 0x142F50C Offset: 0x142F50C VA: 0x142F50C
	public static bool SetMyRoomSoundImage(UISprite sprite, string spriteName) { }

	// RVA: 0x142F40C Offset: 0x142F40C VA: 0x142F40C
	protected bool SetMyRoomSoundLocal(UISprite sprite, string spriteName) { }

	// RVA: 0x142F580 Offset: 0x142F580 VA: 0x142F580
	public static void LoadMyRoomAtlas(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142F5F4 Offset: 0x142F5F4 VA: 0x142F5F4
	protected void LoadMyRoomLocal(Action callback, int loadParallelMax = 1) { }

	// RVA: 0x142F784 Offset: 0x142F784 VA: 0x142F784
	protected void EndLoadMyRoom(AssetData data) { }

	// RVA: 0x142F938 Offset: 0x142F938 VA: 0x142F938
	public static void ReleaseMyRoomAtlas() { }

	// RVA: 0x142F994 Offset: 0x142F994 VA: 0x142F994
	protected void ReleaseMyRoomAtlasLocal() { }

	// RVA: 0x142FA5C Offset: 0x142FA5C VA: 0x142FA5C
	public static bool SetMyRoomImage(UISprite sprite, string spriteName) { }

	// RVA: 0x142FAD0 Offset: 0x142FAD0 VA: 0x142FAD0
	protected bool SetMyRoomLocal(UISprite sprite, string spriteName) { }

	// RVA: 0x142FBD0 Offset: 0x142FBD0 VA: 0x142FBD0
	public static bool SetWarBoardImage(UISprite sprite, string spriteName) { }

	// RVA: 0x142FC44 Offset: 0x142FC44 VA: 0x142FC44
	protected bool SetWarBoardLocal(UISprite sprite, string spriteName) { }

	// RVA: 0x142FD44 Offset: 0x142FD44 VA: 0x142FD44
	public static void SetBoostRequestIcon(UISprite sprite, string spriteName) { }

	// RVA: 0x142FDB8 Offset: 0x142FDB8 VA: 0x142FDB8
	protected void SetBoostRequestIconLocal(UISprite sprite, string spriteName) { }

	// RVA: 0x1426B44 Offset: 0x1426B44 VA: 0x1426B44
	private static bool IsEventAtlas(int frameType) { }

	// RVA: 0x14230F4 Offset: 0x14230F4 VA: 0x14230F4
	public static int GetAdjustFrameTypeForClass(int frameType) { }

	// RVA: 0x142FF20 Offset: 0x142FF20 VA: 0x142FF20
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8C44 Offset: 0xCC8C44 VA: 0xCC8C44
	// RVA: 0x1432218 Offset: 0x1432218 VA: 0x1432218
	private void <LoadOutGameAtlasLocal>m__0(Action action) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8C54 Offset: 0xCC8C54 VA: 0xCC8C54
	// RVA: 0x1432220 Offset: 0x1432220 VA: 0x1432220
	private void <LoadOutGameAtlasLocal>m__1(Action action) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8C64 Offset: 0xCC8C64 VA: 0xCC8C64
	// RVA: 0x1432228 Offset: 0x1432228 VA: 0x1432228
	private void <LoadOutGameAtlasLocal>m__2(Action action) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8C74 Offset: 0xCC8C74 VA: 0xCC8C74
	// RVA: 0x1432230 Offset: 0x1432230 VA: 0x1432230
	private void <LoadOutGameAtlasLocal>m__3(Action action) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8C84 Offset: 0xCC8C84 VA: 0xCC8C84
	// RVA: 0x1432238 Offset: 0x1432238 VA: 0x1432238
	private void <LoadOutGameAtlasLocal>m__4(Action action) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8C94 Offset: 0xCC8C94 VA: 0xCC8C94
	// RVA: 0x1432240 Offset: 0x1432240 VA: 0x1432240
	private void <LoadOutGameAtlasLocal>m__5(Action action) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8CA4 Offset: 0xCC8CA4 VA: 0xCC8CA4
	// RVA: 0x1432248 Offset: 0x1432248 VA: 0x1432248
	private void <LoadOutGameAtlasLocal>m__6(Action action) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8CB4 Offset: 0xCC8CB4 VA: 0xCC8CB4
	// RVA: 0x1432250 Offset: 0x1432250 VA: 0x1432250
	private void <LoadOutGameAtlasLocal>m__7(Action action) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8CC4 Offset: 0xCC8CC4 VA: 0xCC8CC4
	// RVA: 0x1432258 Offset: 0x1432258 VA: 0x1432258
	private void <LoadOutGameAtlasLocal>m__8(Action action) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8CD4 Offset: 0xCC8CD4 VA: 0xCC8CD4
	// RVA: 0x1432260 Offset: 0x1432260 VA: 0x1432260
	private void <LoadOutGameAtlasLocal>m__9(Action action) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8CE4 Offset: 0xCC8CE4 VA: 0xCC8CE4
	// RVA: 0x1432268 Offset: 0x1432268 VA: 0x1432268
	private void <LoadOutGameAtlasLocal>m__A(Action action) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8CF4 Offset: 0xCC8CF4 VA: 0xCC8CF4
	// RVA: 0x1432270 Offset: 0x1432270 VA: 0x1432270
	private void <LoadOutGameAtlasLocal>m__B(Action action) { }
}

// Namespace: 
public enum AtlasManager.CARD_ICON_TYPE // TypeDefIndex: 6278
{
	// Fields
	public int value__; // 0x0
	public const AtlasManager.CARD_ICON_TYPE S = 0;
	public const AtlasManager.CARD_ICON_TYPE M = 1;
	public const AtlasManager.CARD_ICON_TYPE L = 2;
	public const AtlasManager.CARD_ICON_TYPE THICK = 3;
}

// Namespace: 
public class AtlasManager.SkinData // TypeDefIndex: 6279
{
	// Fields
	public string path; // 0x10
	public int loadCnt; // 0x18
	public UIAtlas atlas; // 0x20
	public Texture2D tex2D; // 0x28

	// Methods

	// RVA: 0xF5445C Offset: 0xF5445C VA: 0xF5445C
	public void .ctor() { }

	// RVA: 0xF54464 Offset: 0xF54464 VA: 0xF54464
	public bool isCreatedAtlas() { }

	// RVA: 0xF54518 Offset: 0xF54518 VA: 0xF54518
	public bool isCreatedTex() { }
}

// Namespace: 
public enum AtlasManager.SkinType // TypeDefIndex: 6280
{
	// Fields
	public int value__; // 0x0
	public const AtlasManager.SkinType DIALOG = 0;
	public const AtlasManager.SkinType TERMINAL = 1;
	public const AtlasManager.SkinType COMMON_BG_01 = 2;
	public const AtlasManager.SkinType TEX_BACK_BG = 3;
	public const AtlasManager.SkinType COMMON_BG_02 = 4;
	public const AtlasManager.SkinType MINI_DIALOG = 5;
}

// Namespace: 
public enum AtlasManager.FrameType // TypeDefIndex: 6281
{
	// Fields
	public int value__; // 0x0
	public const AtlasManager.FrameType BLACK = 0;
	public const AtlasManager.FrameType BRONZE = 1;
	public const AtlasManager.FrameType SILVER = 2;
	public const AtlasManager.FrameType GOLD = 3;
	public const AtlasManager.FrameType FRAME_0801 = 4;
	public const AtlasManager.FrameType FRAME_0802 = 5;
	public const AtlasManager.FrameType FRAME_0803 = 6;
	public const AtlasManager.FrameType FRAME_0804 = 7;
	public const AtlasManager.FrameType HIDE = 8;
	public const AtlasManager.FrameType BLANK = 9;
	public const AtlasManager.FrameType SUPPORT = 10;
	public const AtlasManager.FrameType SUPPORT_ONLY = 11;
	public const AtlasManager.FrameType DEFAULT = 2;
}

// Namespace: 
public enum AtlasManager.UIChangeType // TypeDefIndex: 6282
{
	// Fields
	public int value__; // 0x0
	public const AtlasManager.UIChangeType Default = 0;
	public const AtlasManager.UIChangeType CosmosInTheLostbelt = 1;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42744 Offset: 0xC42744 VA: 0xC42744
private sealed class AtlasManager.<loadAsset>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6283
{
	// Fields
	internal AtlasManager $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8910 Offset: 0xCD8910 VA: 0xCD8910
	// RVA: 0xF54044 Offset: 0xF54044 VA: 0xF54044
	public void .ctor() { }

	// RVA: 0xF5404C Offset: 0xF5404C VA: 0xF5404C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8920 Offset: 0xCD8920 VA: 0xCD8920
	// RVA: 0xF543D0 Offset: 0xF543D0 VA: 0xF543D0 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8930 Offset: 0xCD8930 VA: 0xCD8930
	// RVA: 0xF543D8 Offset: 0xF543D8 VA: 0xF543D8 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8940 Offset: 0xCD8940 VA: 0xCD8940
	// RVA: 0xF543E0 Offset: 0xF543E0 VA: 0xF543E0 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8950 Offset: 0xCD8950 VA: 0xCD8950
	// RVA: 0xF543F4 Offset: 0xF543F4 VA: 0xF543F4 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42754 Offset: 0xC42754 VA: 0xC42754
private sealed class AtlasManager.<LoadUISkinLocal>c__AnonStorey1 // TypeDefIndex: 6284
{
	// Fields
	internal AtlasManager.SkinType skinType; // 0x10
	internal string skinChangePath; // 0x18
	internal bool isTex; // 0x20
	internal Action callback; // 0x28
	internal AtlasManager $this; // 0x30

	// Methods

	// RVA: 0xF53EC0 Offset: 0xF53EC0 VA: 0xF53EC0
	public void .ctor() { }

	// RVA: 0xF53EC8 Offset: 0xF53EC8 VA: 0xF53EC8
	internal void <>m__0(AssetData data) { }

	// RVA: 0xF53F3C Offset: 0xF53F3C VA: 0xF53F3C
	internal void <>m__1(AssetData data) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42764 Offset: 0xC42764 VA: 0xC42764
private sealed class AtlasManager.<SetMissionBoardNoticeSpriteLocal>c__AnonStorey2 // TypeDefIndex: 6285
{
	// Fields
	internal string spriteName; // 0x10

	// Methods

	// RVA: 0xF53FB0 Offset: 0xF53FB0 VA: 0xF53FB0
	public void .ctor() { }

	// RVA: 0xF53FB8 Offset: 0xF53FB8 VA: 0xF53FB8
	internal bool <>m__0(UISpriteData c) { }
}

// Namespace: 
public class AtlasManagerUnit // TypeDefIndex: 6286
{
	// Fields
	public bool IsLoading; // 0x10
	public Action LoadFinishCallback; // 0x18
	public AssetData assetData; // 0x20
	public string assetPath; // 0x28
	public UIAtlas[] atlasList; // 0x30

	// Methods

	// RVA: 0xF545CC Offset: 0xF545CC VA: 0xF545CC
	public void .ctor(string assetPath) { }

	// RVA: 0xF545FC Offset: 0xF545FC VA: 0xF545FC
	public void Load(Action finishCallback, int loadParallelMax = 1) { }

	// RVA: 0xF54784 Offset: 0xF54784 VA: 0xF54784
	private void LoadEnd(AssetData assetData) { }

	// RVA: 0xF54970 Offset: 0xF54970 VA: 0xF54970
	public void Release() { }

	// RVA: 0xF54A3C Offset: 0xF54A3C VA: 0xF54A3C
	public bool SetUI(UISprite sprite, string spriteName) { }

	// RVA: 0xF547D4 Offset: 0xF547D4 VA: 0xF547D4
	protected UIAtlas[] CreateUIAtlasListFromAssetData(AssetData assetData) { }
}

// Namespace: 
public class AtlasSubManagerEventUI // TypeDefIndex: 6287
{
	// Fields
	private Dictionary<string, AtlasManagerUnit> assetLoadDict; // 0x10
	private static AtlasSubManagerEventUI instance; // 0x0

	// Properties
	public static AtlasSubManagerEventUI Instance { get; }

	// Methods

	// RVA: 0xF54BB8 Offset: 0xF54BB8 VA: 0xF54BB8
	private void .ctor() { }

	// RVA: 0xF54C2C Offset: 0xF54C2C VA: 0xF54C2C
	public static AtlasSubManagerEventUI get_Instance() { }

	// RVA: 0xF54CA8 Offset: 0xF54CA8 VA: 0xF54CA8
	public void Load(int eventId, Action finishCallback, int loadParallelMax = 1) { }

	// RVA: 0xF54E88 Offset: 0xF54E88 VA: 0xF54E88
	public void Release(int eventId) { }

	// RVA: 0xF54F7C Offset: 0xF54F7C VA: 0xF54F7C
	public bool SetUI(int eventId, UISprite sprite, string spriteName) { }

	// RVA: 0xF54CFC Offset: 0xF54CFC VA: 0xF54CFC
	private string GetAssetPath(int eventId) { }

	// RVA: 0xF54D9C Offset: 0xF54D9C VA: 0xF54D9C
	private AtlasManagerUnit GetOrCreateAtlasManagerUnit(string assetPath) { }
}

// Namespace: 
[Serializable]
public class AudioData // TypeDefIndex: 6288
{
	// Fields
	[SerializeField] // RVA: 0xC53510 Offset: 0xC53510 VA: 0xC53510
	protected string name; // 0x10
	[SerializeField] // RVA: 0xC53520 Offset: 0xC53520 VA: 0xC53520
	protected AudioClip data; // 0x18

	// Properties
	public string Name { get; }
	public AudioClip Data { get; }

	// Methods

	// RVA: 0xF55560 Offset: 0xF55560 VA: 0xF55560
	public void .ctor(AudioClip clip) { }

	// RVA: 0xF555A4 Offset: 0xF555A4 VA: 0xF555A4
	public void .ctor(string name, AudioClip clip) { }

	// RVA: 0xF555DC Offset: 0xF555DC VA: 0xF555DC
	public void .ctor(string name, float[] buf) { }

	// RVA: 0xF55660 Offset: 0xF55660 VA: 0xF55660
	public string get_Name() { }

	// RVA: 0xF55668 Offset: 0xF55668 VA: 0xF55668
	public AudioClip get_Data() { }

	// RVA: 0xF55670 Offset: 0xF55670 VA: 0xF55670
	public bool IsSame(string name) { }
}

// Namespace: 
public class CharaGraphManager : SingletonMonoBehaviour<CharaGraphManager> // TypeDefIndex: 6289
{
	// Fields
	[SerializeField] // RVA: 0xC53530 Offset: 0xC53530 VA: 0xC53530
	protected GameObject charaGraphPrefab; // 0x18
	[SerializeField] // RVA: 0xC53540 Offset: 0xC53540 VA: 0xC53540
	protected GameObject charaEquipGraphPrefab; // 0x20
	[SerializeField] // RVA: 0xC53550 Offset: 0xC53550 VA: 0xC53550
	protected GameObject commandGraphPrefab; // 0x28

	// Methods

	// RVA: 0x1A4A9E8 Offset: 0x1A4A9E8 VA: 0x1A4A9E8
	public void .ctor() { }

	// RVA: 0x1A4AA38 Offset: 0x1A4AA38 VA: 0x1A4AA38
	public static string GetAssetName(int svtId, int imageLimitCount) { }

	// RVA: 0x1A4AAB0 Offset: 0x1A4AAB0 VA: 0x1A4AAB0
	public static string GetAssetName(int imageSvtId) { }

	// RVA: 0x1A4AB18 Offset: 0x1A4AB18 VA: 0x1A4AB18
	public static string GetCommandAssetName(int commandCodeId) { }

	// RVA: 0x1A4AB80 Offset: 0x1A4AB80 VA: 0x1A4AB80
	public static string GetExCharaGraphAssetName(int svtId) { }

	// RVA: 0x1A4ABE8 Offset: 0x1A4ABE8 VA: 0x1A4ABE8
	public static void DownloadAsset(int svtId, int imageLimitCount, AssetLoader.LoadEndDataHandler callback) { }

	// RVA: 0x1A4AC7C Offset: 0x1A4AC7C VA: 0x1A4AC7C
	public static void DownloadCommandAsset(int commandCodeId, AssetLoader.LoadEndDataHandler callback) { }

	// RVA: 0x1A4AD2C Offset: 0x1A4AD2C VA: 0x1A4AD2C
	public static void LoadAsset(int svtId, int imageLimitCount, AssetLoader.LoadEndDataHandler callback) { }

	// RVA: 0x1A4ADC0 Offset: 0x1A4ADC0 VA: 0x1A4ADC0
	public static void LoadCommandAsset(int commandCodeId, AssetLoader.LoadEndDataHandler callback) { }

	// RVA: 0x1A4AE70 Offset: 0x1A4AE70 VA: 0x1A4AE70
	public static void ReleaseAsset(int svtId, int imageLimitCount) { }

	// RVA: 0x1A4AEF8 Offset: 0x1A4AEF8 VA: 0x1A4AEF8
	public static void ReleaseCommandAsset(int commandCodeId, int imageLimitCount) { }

	// RVA: 0x1A4AF94 Offset: 0x1A4AF94 VA: 0x1A4AF94
	public static UICharaGraphTexture CreateTexturePrefab(GameObject parent, int svtId, int limitCount, int exceedCount, bool isOwn, int depth, Action callbackFunc, UICharaGraphRender.RealNameCheck isRealName = 0) { }

	// RVA: 0x1A4B358 Offset: 0x1A4B358 VA: 0x1A4B358
	public static UICharaGraphTexture CreateTexturePrefab(GameObject parent, long userSvtId, int depth, Action callbackFunc) { }

	// RVA: 0x1A4B5EC Offset: 0x1A4B5EC VA: 0x1A4B5EC
	public static UICharaGraphTexture CreateTexturePrefab(GameObject parent, UserServantEntity userSvtEntity, int depth, Action callbackFunc) { }

	// RVA: 0x1A4B678 Offset: 0x1A4B678 VA: 0x1A4B678
	public static UICharaGraphTexture CreateTexturePrefab(GameObject parent, UserServantEntity userSvtEntity, int imageLimitCount, int depth, Action callbackFunc, UICharaGraphRender.RealNameCheck isRealName = 0) { }

	// RVA: 0x1A4BA98 Offset: 0x1A4BA98 VA: 0x1A4BA98
	public static UICharaGraphTexture CreateTexturePrefab(GameObject parent, UserServantCollectionEntity userSvtCollectionEntity, int depth, Action callbackFunc) { }

	// RVA: 0x1A4BCD4 Offset: 0x1A4BCD4 VA: 0x1A4BCD4
	public static UICharaGraphTexture CreateTexturePrefab(GameObject parent, UserServantCollectionEntity userSvtCollectionEntity, int imageLimitCount, int depth, Action callbackFunc) { }

	// RVA: 0x1A4C0D8 Offset: 0x1A4C0D8 VA: 0x1A4C0D8
	public static UICharaGraphTexture CreateTexturePrefab(GameObject parent, ServantLeaderInfo servantLeaderInfo, int depth, Action callbackFunc) { }

	// RVA: 0x1A4C314 Offset: 0x1A4C314 VA: 0x1A4C314
	public static UICharaGraphTexture CreateTexturePrefab(GameObject parent, ServantLeaderInfo servantLeaderInfo, int imageLimitCount, int depth, Action callbackFunc) { }

	// RVA: 0x1A4C718 Offset: 0x1A4C718 VA: 0x1A4C718
	public static UICharaGraphTexture CreateTexturePrefab(GameObject parent, EquipTargetInfo equipTargetInfo, int depth, bool isNpcFollowerServantEquip, Action callbackFunc) { }

	// RVA: 0x1A4C970 Offset: 0x1A4C970 VA: 0x1A4C970
	public static UICharaGraphTexture CreateTexturePrefab(GameObject parent, EquipTargetInfo equipTargetInfo, int imageLimitCount, int depth, bool isNpcFollowerServantEquip, Action callbackFunc) { }

	// RVA: 0x1A4CD90 Offset: 0x1A4CD90 VA: 0x1A4CD90
	public static UICharaGraphTexture CreateTexturePrefab(GameObject parent, UserCommandCodeEntity userCommandCodeEntity, int depth, Action callbackFunc) { }

	// RVA: 0x1A4CFC8 Offset: 0x1A4CFC8 VA: 0x1A4CFC8
	public static UICharaGraphTexture CreateTexturePrefab(GameObject parent, UserCommandCodeCollectionEntity userCommandCodeCollectionEntity, int depth, Action callbackFunc) { }

	// RVA: 0x1A4D200 Offset: 0x1A4D200 VA: 0x1A4D200
	public static UICharaGraphTexture CreateTexturePrefab(GameObject parent, CommandCodeEntity commandCodeEntity, int depth, Action callbackFunc) { }

	// RVA: 0x1A4D438 Offset: 0x1A4D438 VA: 0x1A4D438
	public static UICharaGraphTexture CreateCommandTexturePrefab(GameObject parent, int commandCodeId, int depth, Action callbackFunc) { }

	// RVA: 0x1A4D62C Offset: 0x1A4D62C VA: 0x1A4D62C
	public UICharaGraphTexture CreateTextureLocal(GameObject parent, int svtId) { }

	// RVA: 0x1A4B05C Offset: 0x1A4B05C VA: 0x1A4B05C
	public UICharaGraphTexture CreateTextureLocal(GameObject parent, int svtId, int limitCount, int exceedCount, bool isOwn, int depth, Action callbackFunc, UICharaGraphRender.RealNameCheck isRealName = 0) { }

	// RVA: 0x1A4B43C Offset: 0x1A4B43C VA: 0x1A4B43C
	public UICharaGraphTexture CreateTextureLocal(GameObject parent, UserServantEntity userSvtEntity, int depth, Action callbackFunc) { }

	// RVA: 0x1A4B71C Offset: 0x1A4B71C VA: 0x1A4B71C
	public UICharaGraphTexture CreateTextureLocal(GameObject parent, UserServantEntity userSvtEntity, int imageLimitCount, int depth, Action callbackFunc, UICharaGraphRender.RealNameCheck isRealName = 0) { }

	// RVA: 0x1A4BB24 Offset: 0x1A4BB24 VA: 0x1A4BB24
	public UICharaGraphTexture CreateTextureLocal(GameObject parent, UserServantCollectionEntity userSvtCollectionEntity, int depth, Action callbackFunc) { }

	// RVA: 0x1A4BD68 Offset: 0x1A4BD68 VA: 0x1A4BD68
	public UICharaGraphTexture CreateTextureLocal(GameObject parent, UserServantCollectionEntity userSvtCollectionEntity, int imageLimitCount, int depth, Action callbackFunc) { }

	// RVA: 0x1A4C164 Offset: 0x1A4C164 VA: 0x1A4C164
	public UICharaGraphTexture CreateTextureLocal(GameObject parent, ServantLeaderInfo servantLeaderInfo, int depth, Action callbackFunc) { }

	// RVA: 0x1A4C3A8 Offset: 0x1A4C3A8 VA: 0x1A4C3A8
	public UICharaGraphTexture CreateTextureLocal(GameObject parent, ServantLeaderInfo servantLeaderInfo, int imageLimitCount, int depth, Action callbackFunc) { }

	// RVA: 0x1A4C7AC Offset: 0x1A4C7AC VA: 0x1A4C7AC
	public UICharaGraphTexture CreateTextureLocal(GameObject parent, EquipTargetInfo equipTargetInfo, int depth, bool isNpcFollowerServantEquip, Action callbackFunc) { }

	// RVA: 0x1A4CA14 Offset: 0x1A4CA14 VA: 0x1A4CA14
	public UICharaGraphTexture CreateTextureLocal(GameObject parent, EquipTargetInfo equipTargetInfo, int imageLimitCount, int depth, bool isNpcFollowerServantEquip, Action callbackFunc) { }

