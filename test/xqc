	// Fields
	internal string fileName; // 0x10
	internal ScriptManager.SCENE_MODE sceneMode; // 0x18
	internal ScriptManager $this; // 0x20

	// Methods

	// RVA: 0x2096E6C Offset: 0x2096E6C VA: 0x2096E6C
	public void .ctor() { }

	// RVA: 0x2096E74 Offset: 0x2096E74 VA: 0x2096E74
	internal void <>m__0() { }

	// RVA: 0x2096EBC Offset: 0x2096EBC VA: 0x2096EBC
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF490 Offset: 0xCAF490 VA: 0xCAF490
private sealed class ScriptManager.<PlayCRIMovie>c__AnonStoreyD // TypeDefIndex: 8478
{
	// Fields
	internal bool skipActive; // 0x10
	internal bool pictureFrameActive; // 0x11
	internal ScriptManager $this; // 0x18

	// Methods

	// RVA: 0x2096750 Offset: 0x2096750 VA: 0x2096750
	public void .ctor() { }

	// RVA: 0x2096758 Offset: 0x2096758 VA: 0x2096758
	internal void <>m__0() { }
}

// Namespace: 
public class ScriptMessageGestureReciver : MonoBehaviour // TypeDefIndex: 8479
{
	// Fields
	public MonoBehaviour swipCallback; // 0x18

	// Methods

	// RVA: 0x2097418 Offset: 0x2097418 VA: 0x2097418
	public void .ctor() { }

	// RVA: 0x2097420 Offset: 0x2097420 VA: 0x2097420
	private void Start() { }

	// RVA: 0x20974B4 Offset: 0x20974B4 VA: 0x20974B4
	protected void FingerGestures_OnGestureEvent(Gesture gesture) { }
}

// Namespace: 
public class ScriptMessageLabel // TypeDefIndex: 8480
{
	// Fields
	private static readonly float PLAY_VOICE_POSITION_X; // 0x0
	private static readonly string LINE_ORDER; // 0x8
	protected static string[] codeClassSplitStringList; // 0x10
	public UILabel main; // 0x10
	public UILabel ruby; // 0x18
	public UISprite image; // 0x20
	public UIButton playVoice; // 0x28
	public GameObject effect; // 0x30
	public GameObject frontEffect; // 0x38
	public GameObject playVoiceEffect; // 0x40
	public Vector2 mainPosition; // 0x48
	public Vector2 rubyPosition; // 0x50
	public Font fontType; // 0x58
	public int fontSize; // 0x60
	public int rubySize; // 0x64
	public float widthSize; // 0x68
	private float yOffset; // 0x6C
	public string colorTag; // 0x70
	public string mainText; // 0x78
	public string rubyText; // 0x80
	public string imageText; // 0x88
	public string playVoiceAssetName; // 0x90
	public string playVoiceObjectName; // 0x98
	public float playVoiceVolume; // 0xA0
	public float stepTime; // 0xA4
	public int dispLength; // 0xA8
	public float effectWait; // 0xAC
	private SePlayer sePlayer; // 0xB0
	private Action<string, string, bool> setReplayingVoice; // 0xB8
	private bool isPlayingVoice; // 0xC0
	private static Dictionary<string, int> fontSizes; // 0x18
	protected static Dictionary<int, int> fontSizeIndexTable; // 0x20

	// Methods

	// RVA: 0x209766C Offset: 0x209766C VA: 0x209766C
	public void .ctor() { }

	// RVA: 0x2097728 Offset: 0x2097728 VA: 0x2097728
	public static int GetFontSize(string sizeName, int defaultSize = 0) { }

	// RVA: 0x2097888 Offset: 0x2097888 VA: 0x2097888
	public static string GetFontSizeString(int size) { }

	// RVA: 0x2097A24 Offset: 0x2097A24 VA: 0x2097A24
	public static ScriptMessageLabel.VerticalAlign GetVerticalAlignFromString(string str) { }

	// RVA: 0x2097B48 Offset: 0x2097B48 VA: 0x2097B48
	private static float getVerticalAlignOffset(ScriptMessageLabel.VerticalAlign vAlign, int fontSize, int maxFontSize) { }

	// RVA: 0x2097C84 Offset: 0x2097C84 VA: 0x2097C84
	public static int ConvertInteger(string s) { }

	// RVA: 0x2097D6C Offset: 0x2097D6C VA: 0x2097D6C
	public static int ConvertCharaIndex(string s) { }

	// RVA: 0x2097E04 Offset: 0x2097E04 VA: 0x2097E04
	public static void GetTextByLen(string text, int len, out string dispText, out int length) { }

	// RVA: 0x209823C Offset: 0x209823C VA: 0x209823C
	public static string SubstrByDisp(string text, int len) { }

	// RVA: 0x20981B4 Offset: 0x20981B4 VA: 0x20981B4
	public static int StrlenByDisp(string text) { }

	// RVA: 0x20982CC Offset: 0x20982CC VA: 0x20982CC
	public static bool EnforceColorTag(ref string colorTag, ref string text, string overrideColor) { }

	// RVA: 0x2098544 Offset: 0x2098544 VA: 0x2098544
	public static string RemoveColorTag(string text) { }

	// RVA: 0x2098508 Offset: 0x2098508 VA: 0x2098508
	private static bool IsColorChar(char c) { }

	// RVA: 0x209883C Offset: 0x209883C VA: 0x209883C
	public static bool IsExistColorTag(string txt) { }

	// RVA: 0x2098974 Offset: 0x2098974 VA: 0x2098974
	private static bool IsColorBeginTag(string text) { }

	// RVA: 0x2098AD8 Offset: 0x2098AD8 VA: 0x2098AD8
	public static string GetTagFairingString(string txt) { }

	// RVA: 0x2098EB8 Offset: 0x2098EB8 VA: 0x2098EB8
	public static int GetBraceIndex(string txt, int start) { }

	// RVA: 0x2098F74 Offset: 0x2098F74 VA: 0x2098F74
	public static string GetCommandName(string txt, int start) { }

	// RVA: 0x2099090 Offset: 0x2099090 VA: 0x2099090
	public static string[] AnalysTagParam(string txt, int bindex = 0) { }

	// RVA: 0x2099370 Offset: 0x2099370 VA: 0x2099370
	public static string GetTagSplitString(string txt, int bindex, int index) { }

	// RVA: 0x2099628 Offset: 0x2099628 VA: 0x2099628
	public static void GetTalkName(out string imageName, out string className, out string charaName, out int charaIndex, string talkName) { }

	// RVA: 0x2099A94 Offset: 0x2099A94 VA: 0x2099A94
	public static string GetServantChangeName(string[] param) { }

	// RVA: 0x2099BE4 Offset: 0x2099BE4 VA: 0x2099BE4
	public void Destroy() { }

	// RVA: 0x2099FB4 Offset: 0x2099FB4 VA: 0x2099FB4
	public void Release() { }

	// RVA: 0x2099EAC Offset: 0x2099EAC VA: 0x2099EAC
	private void DestoryEffect() { }

	// RVA: 0x209A284 Offset: 0x209A284 VA: 0x209A284
	public ScriptMessageLabel GetLogLabel() { }

	// RVA: 0x209A490 Offset: 0x209A490 VA: 0x209A490
	public float GetLogRangeY() { }

	// RVA: 0x209A4A4 Offset: 0x209A4A4 VA: 0x209A4A4
	public void SetLogDraw(GameObject mainObject, GameObject rubyObject, GameObject imageObject, GameObject playVoiceObject, GameObject playVoiceEffect, Font font) { }

	// RVA: 0x209AC7C Offset: 0x209AC7C VA: 0x209AC7C
	public void ClearLogDraw(GameObject mainObject, GameObject rubyObject, GameObject imageObject, GameObject playVoiceObject, GameObject playVoiceEffect) { }

	// RVA: 0x209AE10 Offset: 0x209AE10 VA: 0x209AE10
	public void UpdateLabel(ref UILabel main, ref Vector2 pos, int fontSize, int maxFontSize, ScriptMessageLabel.VerticalAlign verticalAlign, string mainStr, Font font) { }

	// RVA: 0x209B12C Offset: 0x209B12C VA: 0x209B12C
	public void UpdateBouten(ref UILabel main, ref UILabel ruby, ref Vector2 pos, int fontSize, int maxFontSize, ScriptMessageLabel.VerticalAlign verticalAlign, string mainStr, Font font) { }

	// RVA: 0x209B618 Offset: 0x209B618 VA: 0x209B618
	public void UpdateRuby(ref UILabel main, ref UILabel ruby, ref Vector2 pos, int fontSize, int maxFontSize, ScriptMessageLabel.VerticalAlign verticalAlign, string mainStr, string rubyStr, Font font) { }

	// RVA: 0x209AADC Offset: 0x209AADC VA: 0x209AADC
	private static Color GetColor(string colorTag) { }

	// RVA: 0x209BAB0 Offset: 0x209BAB0 VA: 0x209BAB0
	public void UpdateLine(ref UISprite image, ref Vector2 pos, int fontSize, int length) { }

	// RVA: 0x209BD8C Offset: 0x209BD8C VA: 0x209BD8C
	public void UpdateImage(ref UISprite image, ref Vector2 pos, int fontSize, string imageStr, ScriptMessageLabel.HorizontalAlign horizontalAlign = 0) { }

	// RVA: 0x209C06C Offset: 0x209C06C VA: 0x209C06C
	public void UpdateImage(ref UISprite image, ref Vector2 pos, int fontSize, float scale, string imageStr, ScriptMessageLabel.HorizontalAlign horizontalAlign = 0) { }

	// RVA: 0x209C138 Offset: 0x209C138 VA: 0x209C138
	public void UpdateImage(ref UISprite image, ref Vector2 pos, int fontSize, float scale, string imageStr, Vector2 offset, ScriptMessageLabel.HorizontalAlign horizontalAlign = 0) { }

	// RVA: 0x209C040 Offset: 0x209C040 VA: 0x209C040
	private float GetHorizontalAlignedPosition(float posX, float width, ScriptMessageLabel.HorizontalAlign horizontalAlign) { }

	// RVA: 0x209C428 Offset: 0x209C428 VA: 0x209C428
	public void UpdateEffect(ref GameObject effect, ref Vector2 pos, string effectName, float ewait, int dlength) { }

	// RVA: 0x209C678 Offset: 0x209C678 VA: 0x209C678
	public void UpdateImageRuby(ref UISprite image, ref UILabel ruby, ref Vector2 pos, int fontSize, string imageStr, string rubyStr, Font font, ScriptMessageLabel.HorizontalAlign horizontalAlign = 0) { }

	// RVA: 0x209CAB0 Offset: 0x209CAB0 VA: 0x209CAB0
	public void UpdatePlayVoice(string assetName, string objectName, float volume, Action<string, string, bool> setReplayingVoice) { }

	// RVA: 0x209CBA0 Offset: 0x209CBA0 VA: 0x209CBA0
	public void CheckPlayingVoice() { }

	// RVA: 0x209CC88 Offset: 0x209CC88 VA: 0x209CC88
	private void OnClickPlayVoice() { }

	// RVA: 0x209CDFC Offset: 0x209CDFC VA: 0x209CDFC
	private void StartPlayVoiceAnimation() { }

	// RVA: 0x209CE9C Offset: 0x209CE9C VA: 0x209CE9C
	public void StopPlayVoiceAnimation() { }

	// RVA: 0x209CF40 Offset: 0x209CF40 VA: 0x209CF40
	private static void .cctor() { }
}

// Namespace: 
public enum ScriptMessageLabel.VerticalAlign // TypeDefIndex: 8481
{
	// Fields
	public int value__; // 0x0
	public const ScriptMessageLabel.VerticalAlign Top = 0;
	public const ScriptMessageLabel.VerticalAlign Center = 1;
	public const ScriptMessageLabel.VerticalAlign Bottom = 2;
	public const ScriptMessageLabel.VerticalAlign Default = 0;
}

// Namespace: 
public enum ScriptMessageLabel.HorizontalAlign // TypeDefIndex: 8482
{
	// Fields
	public int value__; // 0x0
	public const ScriptMessageLabel.HorizontalAlign Left = 0;
	public const ScriptMessageLabel.HorizontalAlign Center = 1;
	public const ScriptMessageLabel.HorizontalAlign Right = 2;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF4A0 Offset: 0xCAF4A0 VA: 0xCAF4A0
private sealed class ScriptMessageLabel.<SetLogDraw>c__AnonStorey0 // TypeDefIndex: 8483
{
	// Fields
	internal UILabel ruby; // 0x10
	internal ScriptMessageLabel $this; // 0x18

	// Methods

	// RVA: 0x209AAD4 Offset: 0x209AAD4 VA: 0x209AAD4
	public void .ctor() { }

	// RVA: 0x209D244 Offset: 0x209D244 VA: 0x209D244
	internal void <>m__0() { }
}

// Namespace: 
public class ScriptMessageManager : MonoBehaviour // TypeDefIndex: 8484
{
	// Fields
	private static readonly float ALIGN_CENTER_BASE; // 0x0
	private static readonly float ALIGN_RIGHT_BASE; // 0x4
	[SerializeField] // RVA: 0xCCBAAC Offset: 0xCCBAAC VA: 0xCCBAAC
	protected GameObject mainPrefab; // 0x18
	[SerializeField] // RVA: 0xCCBABC Offset: 0xCCBABC VA: 0xCCBABC
	protected GameObject rubyPrefab; // 0x20
	[SerializeField] // RVA: 0xCCBACC Offset: 0xCCBACC VA: 0xCCBACC
	protected GameObject imagePrefab; // 0x28
	[SerializeField] // RVA: 0xCCBADC Offset: 0xCCBADC VA: 0xCCBADC
	protected GameObject rootObject; // 0x30
	protected UIPanel rootPanel; // 0x38
	[SerializeField] // RVA: 0xCCBAEC Offset: 0xCCBAEC VA: 0xCCBAEC
	protected GameObject messageBase; // 0x40
	[SerializeField] // RVA: 0xCCBAFC Offset: 0xCCBAFC VA: 0xCCBAFC
	protected Transform messageShake; // 0x48
	[SerializeField] // RVA: 0xCCBB0C Offset: 0xCCBB0C VA: 0xCCBB0C
	protected UIWidget messageBackBase; // 0x50
	[SerializeField] // RVA: 0xCCBB1C Offset: 0xCCBB1C VA: 0xCCBB1C
	protected UISprite messageWindowBack; // 0x58
	[SerializeField] // RVA: 0xCCBB2C Offset: 0xCCBB2C VA: 0xCCBB2C
	protected Transform messageScroll; // 0x60
	[SerializeField] // RVA: 0xCCBB3C Offset: 0xCCBB3C VA: 0xCCBB3C
	protected GameObject frontCommonUICamera; // 0x68
	[SerializeField] // RVA: 0xCCBB4C Offset: 0xCCBB4C VA: 0xCCBB4C
	protected Transform frontCommonUIPanel; // 0x70
	[SerializeField] // RVA: 0xCCBB5C Offset: 0xCCBB5C VA: 0xCCBB5C
	protected GameObject talkNameRootObject; // 0x78
	[SerializeField] // RVA: 0xCCBB6C Offset: 0xCCBB6C VA: 0xCCBB6C
	protected ScriptLineMessage talkNameManager; // 0x80
	[SerializeField] // RVA: 0xCCBB7C Offset: 0xCCBB7C VA: 0xCCBB7C
	protected UISprite talkNameIcon; // 0x88
	[SerializeField] // RVA: 0xCCBB8C Offset: 0xCCBB8C VA: 0xCCBB8C
	protected UISprite talkNameBack; // 0x90
	[SerializeField] // RVA: 0xCCBB9C Offset: 0xCCBB9C VA: 0xCCBB9C
	protected int talkNameBackBaseWidth; // 0x98
	[SerializeField] // RVA: 0xCCBBAC Offset: 0xCCBBAC VA: 0xCCBBAC
	protected int talkNameBackDefaultWidth; // 0x9C
	[SerializeField] // RVA: 0xCCBBBC Offset: 0xCCBBBC VA: 0xCCBBBC
	protected UITouchPress touchPress; // 0xA0
	[SerializeField] // RVA: 0xCCBBCC Offset: 0xCCBBCC VA: 0xCCBBCC
	protected GameObject nextTouchRootObject; // 0xA8
	[SerializeField] // RVA: 0xCCBBDC Offset: 0xCCBBDC VA: 0xCCBBDC
	protected float defaultScrollTime; // 0xB0
	[SerializeField] // RVA: 0xCCBBEC Offset: 0xCCBBEC VA: 0xCCBBEC
	protected float fastScrollTime; // 0xB4
	[SerializeField] // RVA: 0xCCBBFC Offset: 0xCCBBFC VA: 0xCCBBFC
	protected float defaultKeyDelayTime; // 0xB8
	protected float stepTime; // 0xBC
	private bool isMessageSpeedForcedNormal; // 0xC0
	[SerializeField] // RVA: 0xCCBC0C Offset: 0xCCBC0C VA: 0xCCBC0C
	protected float defaultStepTime; // 0xC4
	protected float textOnlyLineHeight; // 0xC8
	protected float beforeTextOnlyLineHeight; // 0xCC
	protected float defaultTextOnlyLineHeight; // 0xD0
	protected float rubyLineHeight; // 0xD4
	[SerializeField] // RVA: 0xCCBC1C Offset: 0xCCBC1C VA: 0xCCBC1C
	protected float defaultBetweenLineHeight; // 0xD8
	protected float betweenLineHeight; // 0xDC
	[SerializeField] // RVA: 0xCCBC2C Offset: 0xCCBC2C VA: 0xCCBC2C
	protected Vector2 defaultAllDispSize; // 0xE0
	[SerializeField] // RVA: 0xCCBC3C Offset: 0xCCBC3C VA: 0xCCBC3C
	protected Vector2 defaultWindowDispSize; // 0xE8
	protected Vector2 dispSize; // 0xF0
	[SerializeField] // RVA: 0xCCBC4C Offset: 0xCCBC4C VA: 0xCCBC4C
	protected Vector2 defaultAllDispCenter; // 0xF8
	[SerializeField] // RVA: 0xCCBC5C Offset: 0xCCBC5C VA: 0xCCBC5C
	protected Vector2 defaultWindowDispCenter; // 0x100
	[SerializeField] // RVA: 0xCCBC6C Offset: 0xCCBC6C VA: 0xCCBC6C
	protected UIPanel dispPanel; // 0x108
	[SerializeField] // RVA: 0xCCBC7C Offset: 0xCCBC7C VA: 0xCCBC7C
	private AnimationCurve windowUpCurve; // 0x110
	[SerializeField] // RVA: 0xCCBC8C Offset: 0xCCBC8C VA: 0xCCBC8C
	private AnimationCurve windowDownCurve; // 0x118
	private float windowOpenTime; // 0x120
	private float windowCloseTime; // 0x124
	private float windowNormalPosY; // 0x128
	private float windowClosePosY; // 0x12C
	protected Font defaultFontType; // 0x130
	protected int defaultFontSize; // 0x138
	protected int rubyFontSize; // 0x13C
	protected Font fontType; // 0x140
	protected int fontSize; // 0x148
	private ScriptMessageLabel.VerticalAlign verticalAlign; // 0x14C
	protected float messageSpeed; // 0x150
	protected float scrollSpeed; // 0x154
	protected string defaultColorTag; // 0x158
	protected bool isWindowBack; // 0x160
	protected UIAtlas talkNameAtlas; // 0x168
	protected string talkNameSpriteName; // 0x170
	private string talkName; // 0x178
	private string talkNameOnly; // 0x180
	private int talkNameIndex; // 0x188
	private Vector2 startPosition; // 0x18C
	private Vector2 dispPosition; // 0x194
	private Vector3 scrollPosition; // 0x19C
	protected Stack<UILabel> mainStock; // 0x1A8
	protected Stack<UILabel> rubyStock; // 0x1B0
	protected Stack<UISprite> imageStock; // 0x1B8
	protected Stack<ScriptMessageLabel> labelStock; // 0x1C0
	private List<ScriptMessageLabel> dispLabelList; // 0x1C8
	protected bool isBusy; // 0x1D0
	protected float dispCountTimer; // 0x1D4
	protected int dispIndex; // 0x1D8
	protected bool isTapSkip; // 0x1DC
	protected bool isTapSkipRequest; // 0x1DD
	protected bool isWaitNextTouchRequest; // 0x1DE
	protected bool isWaitNextTouchDelay; // 0x1DF
	protected bool isFastMessageRequest; // 0x1E0
	protected bool isMessageOut; // 0x1E1
	protected bool isMessageOff; // 0x1E2
	protected bool isForcedDisableTurnPage; // 0x1E3
	protected bool isScroll; // 0x1E4
	protected float shakeTime; // 0x1E8
	protected float shakeCycle; // 0x1EC
	protected float shakeX; // 0x1F0
	protected float shakeY; // 0x1F4
	private int maxFontSize; // 0x1F8
	private ScriptMessageManager.HorizontalAlign horizontalAlign; // 0x1FC
	private bool isEffectMessage; // 0x200

	// Properties
	protected float textLineHeight { get; }
	public bool IsWindowMode { get; }
	public bool IsBusy { get; }

	// Methods

	// RVA: 0x209D4E0 Offset: 0x209D4E0 VA: 0x209D4E0
	public void .ctor() { }

	// RVA: 0x209D728 Offset: 0x209D728 VA: 0x209D728
	protected float get_textLineHeight() { }

	// RVA: 0x209D738 Offset: 0x209D738 VA: 0x209D738
	public bool get_IsWindowMode() { }

	// RVA: 0x209D740 Offset: 0x209D740 VA: 0x209D740
	public bool get_IsBusy() { }

	// RVA: 0x209D748 Offset: 0x209D748 VA: 0x209D748
	private void Start() { }

	// RVA: 0x209DCA0 Offset: 0x209DCA0 VA: 0x209DCA0
	public void DeleteLabels() { }

	// RVA: 0x209DF20 Offset: 0x209DF20 VA: 0x209DF20
	public void ClearLabels() { }

	// RVA: 0x209E2E0 Offset: 0x209E2E0 VA: 0x209E2E0
	private void PreProcLabel(ScriptMessageLabel label, bool hasRuby, bool hasImage, bool hasEffect) { }

	// RVA: 0x209EBA8 Offset: 0x209EBA8 VA: 0x209EBA8
	protected UILabel FetchMainLabel() { }

	// RVA: 0x209EE2C Offset: 0x209EE2C VA: 0x209EE2C
	protected UILabel FetchRubyLabel() { }

	// RVA: 0x209F0D0 Offset: 0x209F0D0 VA: 0x209F0D0
	protected UISprite FetchImageSprite() { }

	// RVA: 0x209F354 Offset: 0x209F354 VA: 0x209F354
	private ScriptMessageLabel FetchLabel() { }

	// RVA: 0x209E070 Offset: 0x209E070 VA: 0x209E070
	private void ReleaseLabel(ScriptMessageLabel label) { }

	// RVA: 0x209F408 Offset: 0x209F408 VA: 0x209F408
	private void AddLabel(string text, float tm, string colorTag, bool isFoward) { }

	// RVA: 0x20A01F0 Offset: 0x20A01F0 VA: 0x20A01F0
	protected void UpdateLabels(string txt, bool isStretch, bool isFoward) { }

	// RVA: 0x20A1520 Offset: 0x20A1520 VA: 0x20A1520
	public int InitScreen() { }

	// RVA: 0x20A1938 Offset: 0x20A1938 VA: 0x20A1938
	public void QuitScreen() { }

	// RVA: 0x20A1A38 Offset: 0x20A1A38 VA: 0x20A1A38
	public void SetTapSkip(bool flag) { }

	// RVA: 0x20A1A48 Offset: 0x20A1A48 VA: 0x20A1A48
	public void SetForcedDisableTurnPage(bool flag) { }

	// RVA: 0x209D9F8 Offset: 0x209D9F8 VA: 0x209D9F8
	public int SetScreen(int x, int y, int w, int h, bool isWindowBack) { }

	// RVA: 0x20A1BF8 Offset: 0x20A1BF8 VA: 0x20A1BF8
	public void SetMessageOffMode(bool flag) { }

	// RVA: 0x20A1C60 Offset: 0x20A1C60 VA: 0x20A1C60
	public void OffScreen() { }

	// RVA: 0x20A1C9C Offset: 0x20A1C9C VA: 0x20A1C9C
	public bool IsOpen() { }

	// RVA: 0x20A1DB8 Offset: 0x20A1DB8 VA: 0x20A1DB8
	public bool IsWindowCloseDown() { }

	// RVA: 0x20A1634 Offset: 0x20A1634 VA: 0x20A1634
	public void ForceOpen() { }

	// RVA: 0x20A1F00 Offset: 0x20A1F00 VA: 0x20A1F00
	public void OpenUp(bool isFast = False) { }

	// RVA: 0x20A2178 Offset: 0x20A2178 VA: 0x20A2178
	public void CloseDown(bool isFast = False) { }

	// RVA: 0x20A23B8 Offset: 0x20A23B8 VA: 0x20A23B8
	public void OnEndUpDownAnime() { }

	// RVA: 0x20A24E4 Offset: 0x20A24E4 VA: 0x20A24E4
	protected void SetDefaultState() { }

	// RVA: 0x20A2574 Offset: 0x20A2574 VA: 0x20A2574
	private void SetTextScrollSpeed() { }

	// RVA: 0x20A14F0 Offset: 0x20A14F0 VA: 0x20A14F0
	public void ReturnText() { }

	// RVA: 0x20A26F0 Offset: 0x20A26F0 VA: 0x20A26F0
	public Font GetFontType() { }

	// RVA: 0x20A26F8 Offset: 0x20A26F8 VA: 0x20A26F8
	public void SetFontType(Font font) { }

	// RVA: 0x20A2790 Offset: 0x20A2790 VA: 0x20A2790
	public void SetFontSize(string sizeName, string verticalAlignString) { }

	// RVA: 0x20A2838 Offset: 0x20A2838 VA: 0x20A2838
	public void SetBetweenLineHeight(float height) { }

	// RVA: 0x20A2880 Offset: 0x20A2880 VA: 0x20A2880
	public void SetSpeed(float n) { }

	// RVA: 0x20A1A54 Offset: 0x20A1A54 VA: 0x20A1A54
	public void ClearText() { }

	// RVA: 0x20A28A8 Offset: 0x20A28A8 VA: 0x20A28A8
	public void ClearCount() { }

	// RVA: 0x20A28B4 Offset: 0x20A28B4 VA: 0x20A28B4
	public void SetMaxFontSize(int fontSize) { }

	// RVA: 0x20A28BC Offset: 0x20A28BC VA: 0x20A28BC
	public void SetText(string text) { }

	// RVA: 0x20A28F0 Offset: 0x20A28F0 VA: 0x20A28F0
	public void AddText(string text, bool isLineHead = False, int lineLength = 0) { }

	// RVA: 0x20A292C Offset: 0x20A292C VA: 0x20A292C
	private void SetAlignedDispPosition(bool isLineHead, int lineLength) { }

	// RVA: 0x20A2A40 Offset: 0x20A2A40 VA: 0x20A2A40
	public void AddTextStretch(string text) { }

	// RVA: 0x20A2A4C Offset: 0x20A2A4C VA: 0x20A2A4C
	public void SetHorizontalAlign(ScriptMessageManager.HorizontalAlign horizontalAlign) { }

	// RVA: 0x20A2A54 Offset: 0x20A2A54 VA: 0x20A2A54
	public void ClearTalkName() { }

	// RVA: 0x20A2B34 Offset: 0x20A2B34 VA: 0x20A2B34
	public void SetTalkNameBack(string imageName) { }

	// RVA: 0x20A2CFC Offset: 0x20A2CFC VA: 0x20A2CFC
	public bool SetTalkName(string imageName, string classname, string charaname, int index) { }

	// RVA: 0x20A2FE0 Offset: 0x20A2FE0 VA: 0x20A2FE0 Slot: 4
	public virtual void OnPressWindow() { }

	// RVA: 0x20A30A8 Offset: 0x20A30A8 VA: 0x20A30A8 Slot: 5
	public virtual void OnClickWindow() { }

	// RVA: 0x20A3190 Offset: 0x20A3190 VA: 0x20A3190
	public void OnLongPressWindow() { }

	// RVA: 0x20A3240 Offset: 0x20A3240 VA: 0x20A3240
	protected void OnDelayWaitNextTouch() { }

	// RVA: 0x20A3248 Offset: 0x20A3248 VA: 0x20A3248
	public int GetAllDispLength() { }

	// RVA: 0x20A33A4 Offset: 0x20A33A4 VA: 0x20A33A4
	public bool MessageUpdate(bool isMessageDelta = True) { }

	// RVA: 0x20A3934 Offset: 0x20A3934 VA: 0x20A3934
	public void RequestFastMessage() { }

	// RVA: 0x20A3940 Offset: 0x20A3940 VA: 0x20A3940
	public bool IsWaitTouch() { }

	// RVA: 0x20A3948 Offset: 0x20A3948 VA: 0x20A3948
	public bool IsWaitNextTouchDelay() { }

	// RVA: 0x20A3950 Offset: 0x20A3950 VA: 0x20A3950
	public void ClearRequestFastMessage() { }

	// RVA: 0x20A3958 Offset: 0x20A3958 VA: 0x20A3958
	public void WaitNextTouch(bool isShowNextTouchObject = True) { }

	// RVA: 0x20A39DC Offset: 0x20A39DC VA: 0x20A39DC
	public void CancelNextTouch() { }

	// RVA: 0x20A3A14 Offset: 0x20A3A14 VA: 0x20A3A14
	public bool IsLongPress() { }

	// RVA: 0x20A3A60 Offset: 0x20A3A60 VA: 0x20A3A60
	public void ResetLongPress() { }

	// RVA: 0x20A3A9C Offset: 0x20A3A9C VA: 0x20A3A9C
	public bool IsFastMessageRequest() { }

	// RVA: 0x20A3AA4 Offset: 0x20A3AA4 VA: 0x20A3AA4
	public bool IsTapSkip() { }

	// RVA: 0x20A3AAC Offset: 0x20A3AAC VA: 0x20A3AAC
	public void CancelTapSkip() { }

	// RVA: 0x20A3AB4 Offset: 0x20A3AB4 VA: 0x20A3AB4
	public bool IsScroll() { }

	// RVA: 0x20A3ABC Offset: 0x20A3ABC VA: 0x20A3ABC
	public bool IsReturnScroll() { }

	// RVA: 0x20A3AEC Offset: 0x20A3AEC VA: 0x20A3AEC
	public bool ReturnScroll(bool isFast = False) { }

	// RVA: 0x20A3D54 Offset: 0x20A3D54 VA: 0x20A3D54
	public bool IsReturnScroll2() { }

	// RVA: 0x20A3D88 Offset: 0x20A3D88 VA: 0x20A3D88
	public bool ReturnScroll2(bool isFast = False) { }

	// RVA: 0x20A3DE8 Offset: 0x20A3DE8 VA: 0x20A3DE8
	public bool IsPageScroll() { }

	// RVA: 0x20A3E2C Offset: 0x20A3E2C VA: 0x20A3E2C
	public void PageScroll(bool isFast = False) { }

	// RVA: 0x20A3B48 Offset: 0x20A3B48 VA: 0x20A3B48
	protected void StartScroll(bool isFast) { }

	// RVA: 0x20A3F24 Offset: 0x20A3F24 VA: 0x20A3F24
	private void EndScroll() { }

	// RVA: 0x20A3F30 Offset: 0x20A3F30 VA: 0x20A3F30
	protected void ResetScroll() { }

	// RVA: 0x20A4080 Offset: 0x20A4080 VA: 0x20A4080
	public bool IsShake() { }

	// RVA: 0x20A4090 Offset: 0x20A4090 VA: 0x20A4090
	public void Shake(float duration, float cycle, float x, float y) { }

	// RVA: 0x20A410C Offset: 0x20A410C VA: 0x20A410C
	protected void OnShake() { }

	// RVA: 0x20A4290 Offset: 0x20A4290 VA: 0x20A4290
	public void SetMessageSpeedForcedNormal(bool isForced) { }

	// RVA: 0x20A429C Offset: 0x20A429C VA: 0x20A429C
	public bool IsForcedDisableTurnPage() { }

	// RVA: 0x20A42A4 Offset: 0x20A42A4 VA: 0x20A42A4
	public string GetTalkName() { }

	// RVA: 0x20A42AC Offset: 0x20A42AC VA: 0x20A42AC
	public string GetTalkNameOnly() { }

	// RVA: 0x20A42B4 Offset: 0x20A42B4 VA: 0x20A42B4
	public int GetTalkNameIndex() { }

	// RVA: 0x20A42BC Offset: 0x20A42BC VA: 0x20A42BC
	public bool MessageEffectStop(string effectName, bool isSkip) { }

	// RVA: 0x20A4440 Offset: 0x20A4440 VA: 0x20A4440
	public bool MessageEffectIsBusy(string effectName) { }

	// RVA: 0x20A45B8 Offset: 0x20A45B8 VA: 0x20A45B8
	public bool MessageEffectIsStart(string effectName) { }

	// RVA: 0x20A4730 Offset: 0x20A4730 VA: 0x20A4730
	public bool MessageEffectExist() { }

	// RVA: 0x20A486C Offset: 0x20A486C VA: 0x20A486C
	public bool IsRootActive() { }

	// RVA: 0x20A490C Offset: 0x20A490C VA: 0x20A490C
	public void SetMessageWindowCollider(bool isEnable) { }

	// RVA: 0x20A49E0 Offset: 0x20A49E0 VA: 0x20A49E0
	private static void .cctor() { }
}

// Namespace: 
public enum ScriptMessageManager.HorizontalAlign // TypeDefIndex: 8485
{
	// Fields
	public int value__; // 0x0
	public const ScriptMessageManager.HorizontalAlign Left = 0;
	public const ScriptMessageManager.HorizontalAlign Center = 1;
	public const ScriptMessageManager.HorizontalAlign Right = 2;
}

// Namespace: 
private sealed class ScriptMessageManager.ProcAddLabel : MulticastDelegate // TypeDefIndex: 8486
{
	// Methods

	// RVA: 0x20A0E3C Offset: 0x20A0E3C VA: 0x20A0E3C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20A0E5C Offset: 0x20A0E5C VA: 0x20A0E5C Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x20A4C00 Offset: 0x20A4C00 VA: 0x20A4C00 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x20A4C34 Offset: 0x20A4C34 VA: 0x20A4C34 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private sealed class ScriptMessageManager.ProcAddLabel2 : MulticastDelegate // TypeDefIndex: 8487
{
	// Methods

	// RVA: 0x20A0E4C Offset: 0x20A0E4C VA: 0x20A0E4C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20A1150 Offset: 0x20A1150 VA: 0x20A1150 Slot: 11
	public virtual void Invoke(string txt) { }

	// RVA: 0x20A4C40 Offset: 0x20A4C40 VA: 0x20A4C40 Slot: 12
	public virtual IAsyncResult BeginInvoke(string txt, AsyncCallback callback, object object) { }

	// RVA: 0x20A4C64 Offset: 0x20A4C64 VA: 0x20A4C64 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF4B0 Offset: 0xCAF4B0 VA: 0xCAF4B0
private sealed class ScriptMessageManager.<UpdateLabels>c__AnonStorey0 // TypeDefIndex: 8488
{
	// Fields
	internal StringBuilder tmpTxt; // 0x10
	internal float stepTime; // 0x18
	internal bool isFoward; // 0x1C
	internal string tmpColorTag; // 0x20
	internal ScriptMessageManager $this; // 0x28

	// Methods

	// RVA: 0x20A0E34 Offset: 0x20A0E34 VA: 0x20A0E34
	public void .ctor() { }

	// RVA: 0x20A4A44 Offset: 0x20A4A44 VA: 0x20A4A44
	internal void <>m__0() { }

	// RVA: 0x20A4B40 Offset: 0x20A4B40 VA: 0x20A4B40
	internal void <>m__1(string text) { }
}

// Namespace: 
public class ScriptNotificationDialog : BaseDialog // TypeDefIndex: 8489
{
	// Fields
	[SerializeField] // RVA: 0xCCBC9C Offset: 0xCCBC9C VA: 0xCCBC9C
	protected UILabel messageLabel; // 0x58
	[SerializeField] // RVA: 0xCCBCAC Offset: 0xCCBCAC VA: 0xCCBCAC
	private UILabel titleLabel; // 0x60
	[SerializeField] // RVA: 0xCCBCBC Offset: 0xCCBCBC VA: 0xCCBCBC
	private UILabel titledMessageLabel; // 0x68
	[SerializeField] // RVA: 0xCCBCCC Offset: 0xCCBCCC VA: 0xCCBCCC
	protected UILabel closeLabel; // 0x70
	[SerializeField] // RVA: 0xCCBCDC Offset: 0xCCBCDC VA: 0xCCBCDC
	protected UICommonButton closeButton; // 0x78
	protected ScriptNotificationDialog.State state; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xCCBCEC Offset: 0xCCBCEC VA: 0xCCBCEC
	[DebuggerBrowsableAttribute] // RVA: 0xCCBCEC Offset: 0xCCBCEC VA: 0xCCBCEC
	private ScriptNotificationDialog.CallbackFunc callbackFunc; // 0x88
	protected Action closeCallbackFunc; // 0x90

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x20A4C70 Offset: 0x20A4C70 VA: 0x20A4C70
	public void .ctor() { }

	// RVA: 0x20A4CD8 Offset: 0x20A4CD8 VA: 0x20A4CD8
	protected void add_callbackFunc(ScriptNotificationDialog.CallbackFunc value) { }

	// RVA: 0x20A4DC4 Offset: 0x20A4DC4 VA: 0x20A4DC4
	protected void remove_callbackFunc(ScriptNotificationDialog.CallbackFunc value) { }

	// RVA: 0x20A4EB0 Offset: 0x20A4EB0 VA: 0x20A4EB0
	public void Init() { }

	// RVA: 0x20A4FD4 Offset: 0x20A4FD4 VA: 0x20A4FD4
	public void Open(string title, string message, ScriptNotificationDialog.CallbackFunc callback, bool canMaskTouchClose = False, int spacingY = 0) { }

	// RVA: 0x20A516C Offset: 0x20A516C VA: 0x20A516C
	private void SetMessage(string title, string message) { }

	// RVA: 0x20A52FC Offset: 0x20A52FC VA: 0x20A52FC
	protected void EndOpen() { }

	// RVA: 0x20A5308 Offset: 0x20A5308 VA: 0x20A5308
	public void Close() { }

	// RVA: 0x20A5310 Offset: 0x20A5310 VA: 0x20A5310
	public void Close(Action callback) { }

	// RVA: 0x20A53A0 Offset: 0x20A53A0 VA: 0x20A53A0
	protected void EndClose() { }

	// RVA: 0x20A53DC Offset: 0x20A53DC VA: 0x20A53DC
	protected void Callback() { }

	// RVA: 0x20A55F8 Offset: 0x20A55F8 VA: 0x20A55F8
	public void OnClickClose() { }

	// RVA: 0x20A5628 Offset: 0x20A5628 VA: 0x20A5628 Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
protected enum ScriptNotificationDialog.State // TypeDefIndex: 8490
{
	// Fields
	public int value__; // 0x0
	public const ScriptNotificationDialog.State INIT = 0;
	public const ScriptNotificationDialog.State OPEN = 1;
	public const ScriptNotificationDialog.State INPUT = 2;
	public const ScriptNotificationDialog.State SELECTED = 3;
	public const ScriptNotificationDialog.State CLOSE = 4;
}

// Namespace: 
public sealed class ScriptNotificationDialog.CallbackFunc : MulticastDelegate // TypeDefIndex: 8491
{
	// Methods

	// RVA: 0x20A5670 Offset: 0x20A5670 VA: 0x20A5670
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20A53F8 Offset: 0x20A53F8 VA: 0x20A53F8 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x20A5680 Offset: 0x20A5680 VA: 0x20A5680 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x20A56B4 Offset: 0x20A56B4 VA: 0x20A56B4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ScriptPosition // TypeDefIndex: 8492
{
	// Fields
	protected static Vector2[] positionList; // 0x0
	protected static Vector2[] charaOffsetList; // 0x8

	// Methods

	// RVA: 0x20AB238 Offset: 0x20AB238 VA: 0x20AB238
	public void .ctor() { }

	// RVA: 0x20AB240 Offset: 0x20AB240 VA: 0x20AB240
	public static Vector3 GetPosition(int index) { }

	// RVA: 0x20AB354 Offset: 0x20AB354 VA: 0x20AB354
	public static Vector3 GetPosition(float x, float y) { }

	// RVA: 0x20AB38C Offset: 0x20AB38C VA: 0x20AB38C
	public static Vector3 GetCharaOffset(int index) { }

	// RVA: 0x20AB4A0 Offset: 0x20AB4A0 VA: 0x20AB4A0
	public static Vector3 GetCharaOffset(float x, float y) { }

	// RVA: 0x20AB4D8 Offset: 0x20AB4D8 VA: 0x20AB4D8
	private static void .cctor() { }
}

// Namespace: 
public class ScriptReplaceString // TypeDefIndex: 8493
{
	// Fields
	protected static List<string> replaceList; // 0x0
	protected static int playerGenderIndex; // 0x8

	// Methods

	// RVA: 0x20AB7E4 Offset: 0x20AB7E4 VA: 0x20AB7E4
	public void .ctor() { }

	// RVA: 0x20AB7EC Offset: 0x20AB7EC VA: 0x20AB7EC
	public static void Init() { }

	// RVA: 0x20AB8AC Offset: 0x20AB8AC VA: 0x20AB8AC
	public static void SetString(ScriptReplaceString.Index index, string str) { }

	// RVA: 0x20AB920 Offset: 0x20AB920 VA: 0x20AB920
	public static void SetString(int num, string str) { }

	// RVA: 0x20A105C Offset: 0x20A105C VA: 0x20A105C
	public static string GetString(int num) { }

	// RVA: 0x20ABB58 Offset: 0x20ABB58 VA: 0x20ABB58
	public static void SetPlayerGenderIndex(int index) { }

	// RVA: 0x20A10E8 Offset: 0x20A10E8 VA: 0x20A10E8
	public static int GetPlayerGenderIndex() { }

	// RVA: 0x20ABBC4 Offset: 0x20ABBC4 VA: 0x20ABBC4
	private static void .cctor() { }
}

// Namespace: 
public enum ScriptReplaceString.Index // TypeDefIndex: 8494
{
	// Fields
	public int value__; // 0x0
	public const ScriptReplaceString.Index USER_NAME = 1;
}

// Namespace: 
public class ScriptSelectDialog : BaseMonoBehaviour // TypeDefIndex: 8495
{
	// Fields
	[SerializeField] // RVA: 0xCCBD28 Offset: 0xCCBD28 VA: 0xCCBD28
	protected GameObject rootObject; // 0x18
	[SerializeField] // RVA: 0xCCBD38 Offset: 0xCCBD38 VA: 0xCCBD38
	protected ScriptSelectListViewManager listViewManager; // 0x20
	protected ScriptSelectDialog.ClickDelegate callbackFunc; // 0x28
	protected bool isOpen; // 0x30
	protected int index; // 0x34

	// Methods

	// RVA: 0x20ABC50 Offset: 0x20ABC50 VA: 0x20ABC50
	public void .ctor() { }

	// RVA: 0x20ABC58 Offset: 0x20ABC58 VA: 0x20ABC58
	public void Open(string[] selectMessageList, Font fontType, ScriptSelectDialog.ClickDelegate callback) { }

	// RVA: 0x20AC224 Offset: 0x20AC224 VA: 0x20AC224
	public void SelectDecide(int index, ScriptSelectDialog.ClickDelegate callback) { }

	// RVA: 0x20AC2C8 Offset: 0x20AC2C8 VA: 0x20AC2C8
	protected void EndSelectDecide() { }

	// RVA: 0x20AC510 Offset: 0x20AC510 VA: 0x20AC510
	public void Close() { }

	// RVA: 0x20AC588 Offset: 0x20AC588 VA: 0x20AC588
	public void OnClickSelect(int index) { }

	// RVA: 0x20AC59C Offset: 0x20AC59C VA: 0x20AC59C
	public void SetActive(bool flag) { }
}

// Namespace: 
public sealed class ScriptSelectDialog.ClickDelegate : MulticastDelegate // TypeDefIndex: 8496
{
	// Methods

	// RVA: 0x20AC5E8 Offset: 0x20AC5E8 VA: 0x20AC5E8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20AC2E4 Offset: 0x20AC2E4 VA: 0x20AC2E4 Slot: 11
	public virtual void Invoke(int index) { }

	// RVA: 0x20AC5F8 Offset: 0x20AC5F8 VA: 0x20AC5F8 Slot: 12
	public virtual IAsyncResult BeginInvoke(int index, AsyncCallback callback, object object) { }

	// RVA: 0x20AC684 Offset: 0x20AC684 VA: 0x20AC684 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC9681C Offset: 0xC9681C VA: 0xC9681C
public class ScriptSelectListViewItem : ListViewItem // TypeDefIndex: 8497
{
	// Fields
	protected string message; // 0x70
	protected Font fontType; // 0x78

	// Properties
	public string MessageText { get; }
	public Font FontType { get; }

	// Methods

	// RVA: 0x20AC690 Offset: 0x20AC690 VA: 0x20AC690
	public void .ctor(int index, string message, Font fontType) { }

	// RVA: 0x20AC6C8 Offset: 0x20AC6C8 VA: 0x20AC6C8 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x20AC6D0 Offset: 0x20AC6D0 VA: 0x20AC6D0
	public string get_MessageText() { }

	// RVA: 0x20AC6D8 Offset: 0x20AC6D8 VA: 0x20AC6D8
	public Font get_FontType() { }

	// RVA: 0x20AC6E0 Offset: 0x20AC6E0 VA: 0x20AC6E0
	private string ToString() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC96854 Offset: 0xC96854 VA: 0xC96854
public class ScriptSelectListViewItemDraw : MonoBehaviour // TypeDefIndex: 8498
{
	// Fields
	[SerializeField] // RVA: 0xCCBD48 Offset: 0xCCBD48 VA: 0xCCBD48
	protected ScriptLineMessage messageManager; // 0x18
	[SerializeField] // RVA: 0xCCBD58 Offset: 0xCCBD58 VA: 0xCCBD58
	protected ScriptLineMessage effectMessageManager; // 0x20
	[SerializeField] // RVA: 0xCCBD68 Offset: 0xCCBD68 VA: 0xCCBD68
	protected UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xCCBD78 Offset: 0xCCBD78 VA: 0xCCBD78
	protected UIMessageButton baseButton; // 0x30
	protected Action callbackFunc; // 0x38
