{
	// Methods

	// RVA: 0x10347AC Offset: 0x10347AC VA: 0x10347AC
	public void .ctor() { }

	// RVA: 0x1034888 Offset: 0x1034888 VA: 0x1034888
	public static ScriptableObject CreateInstance(Type type) { }

	// RVA: -1 Offset: -1
	public static T CreateInstance<T>() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21A0F88 Offset: 0x21A0F88 VA: 0x21A0F88
	|-ScriptableObject.CreateInstance<PlayMakerGlobals>
	|-ScriptableObject.CreateInstance<PlayMakerPrefs>
	|-ScriptableObject.CreateInstance<CatmullRomSplineSolver>
	|-ScriptableObject.CreateInstance<CubicBezierSplineSolver>
	|-ScriptableObject.CreateInstance<LinearSplineSolver>
	|-ScriptableObject.CreateInstance<QuadraticSplineSolver>
	|-ScriptableObject.CreateInstance<SplineKeyframe>
	|-ScriptableObject.CreateInstance<USInternalCurve>
	|-ScriptableObject.CreateInstance<USInternalKeyframe>
	|-ScriptableObject.CreateInstance<USTimelineAnimationEditorRunner>
	|-ScriptableObject.CreateInstance<USTimelineAnimationGameRunner>
	|-ScriptableObject.CreateInstance<object>
	|-ScriptableObject.CreateInstance<PlayerConnection>
	*/

	[NativeMethodAttribute] // RVA: 0xC4F660 Offset: 0xC4F660 VA: 0xC4F660
	// RVA: 0x103481C Offset: 0x103481C VA: 0x103481C
	private static void CreateScriptableObject(ScriptableObject self) { }

	[FreeFunctionAttribute] // RVA: 0xC4F698 Offset: 0xC4F698 VA: 0xC4F698
	// RVA: 0x103488C Offset: 0x103488C VA: 0x103488C
	private static ScriptableObject CreateScriptableObjectInstanceFromType(Type type) { }
}

// Namespace: UnityEngine.Experimental.Rendering
[NativeHeaderAttribute] // RVA: 0xC46664 Offset: 0xC46664 VA: 0xC46664
[NativeHeaderAttribute] // RVA: 0xC46664 Offset: 0xC46664 VA: 0xC46664
[NativeTypeAttribute] // RVA: 0xC46664 Offset: 0xC46664 VA: 0xC46664
[NativeHeaderAttribute] // RVA: 0xC46664 Offset: 0xC46664 VA: 0xC46664
public struct ScriptableRenderContext // TypeDefIndex: 2399
{
	// Fields
	private IntPtr m_Ptr; // 0x0

	// Methods

	// RVA: 0xDD25C8 Offset: 0xDD25C8 VA: 0xDD25C8
	internal void .ctor(IntPtr ptr) { }
}

// Namespace: UnityEngine
[AttributeUsageAttribute] // RVA: 0xC4670C Offset: 0xC4670C VA: 0xC4670C
public class SelectionBaseAttribute : Attribute // TypeDefIndex: 2400
{
	// Methods

	// RVA: 0x103497C Offset: 0x103497C VA: 0x103497C
	public void .ctor() { }
}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xC46758 Offset: 0xC46758 VA: 0xC46758
[ObsoleteAttribute] // RVA: 0xC46758 Offset: 0xC46758 VA: 0xC46758
public sealed class SerializePrivateVariables : Attribute // TypeDefIndex: 2401
{}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xC467A4 Offset: 0xC467A4 VA: 0xC467A4
public sealed class SerializeField : Attribute // TypeDefIndex: 2402
{
	// Methods

	// RVA: 0x1036264 Offset: 0x1036264 VA: 0x1036264
	public void .ctor() { }
}

// Namespace: UnityEngine
[AttributeUsageAttribute] // RVA: 0xC467B4 Offset: 0xC467B4 VA: 0xC467B4
[RequiredByNativeCodeAttribute] // RVA: 0xC467B4 Offset: 0xC467B4 VA: 0xC467B4
public sealed class PreferBinarySerialization : Attribute // TypeDefIndex: 2403
{}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xC467F0 Offset: 0xC467F0 VA: 0xC467F0
public interface ISerializationCallbackReceiver // TypeDefIndex: 2404
{
	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC4F6D0 Offset: 0xC4F6D0 VA: 0xC4F6D0
	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnBeforeSerialize();

	[RequiredByNativeCodeAttribute] // RVA: 0xC4F6E0 Offset: 0xC4F6E0 VA: 0xC4F6E0
	// RVA: -1 Offset: -1 Slot: 1
	public abstract void OnAfterDeserialize();
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC46800 Offset: 0xC46800 VA: 0xC46800
[UsedByNativeCodeAttribute] // RVA: 0xC46800 Offset: 0xC46800 VA: 0xC46800
public sealed class ComputeShader : Object // TypeDefIndex: 2405
{
	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC4F6F0 Offset: 0xC4F6F0 VA: 0xC4F6F0
	[NativeMethodAttribute] // RVA: 0xC4F6F0 Offset: 0xC4F6F0 VA: 0xC4F6F0
	// RVA: 0x264989C Offset: 0x264989C VA: 0x264989C
	public int FindKernel(string name) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC4684C Offset: 0xC4684C VA: 0xC4684C
public struct SortingLayer // TypeDefIndex: 2406
{
	// Fields
	private int m_Id; // 0x0

	// Methods

	[FreeFunctionAttribute] // RVA: 0xC4F778 Offset: 0xC4F778 VA: 0xC4F778
	// RVA: 0x1036B3C Offset: 0x1036B3C VA: 0x1036B3C
	public static int GetLayerValueFromID(int id) { }
}

// Namespace: UnityEngine
public static class StackTraceUtility // TypeDefIndex: 2407
{
	// Fields
	private static string projectFolder; // 0x0

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC4F7B0 Offset: 0xC4F7B0 VA: 0xC4F7B0
	// RVA: 0x103822C Offset: 0x103822C VA: 0x103822C
	internal static void SetProjectFolder(string folder) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC4F7C0 Offset: 0xC4F7C0 VA: 0xC4F7C0
	// RVA: 0x1038334 Offset: 0x1038334 VA: 0x1038334
	public static string ExtractStackTrace() { }

	// RVA: 0x1038D64 Offset: 0x1038D64 VA: 0x1038D64
	private static bool IsSystemStacktraceType(object name) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC4F7D0 Offset: 0xC4F7D0 VA: 0xC4F7D0
	// RVA: 0x1038EE8 Offset: 0x1038EE8 VA: 0x1038EE8
	internal static void ExtractStringFromExceptionInternal(object exceptiono, out string message, out string stackTrace) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC4F7E0 Offset: 0xC4F7E0 VA: 0xC4F7E0
	// RVA: 0x1039304 Offset: 0x1039304 VA: 0x1039304
	internal static string PostprocessStacktrace(string oldString, bool stripEngineInternalInformation) { }

	// RVA: 0x10383D4 Offset: 0x10383D4 VA: 0x10383D4
	internal static string ExtractFormattedStackTrace(StackTrace stackTrace) { }

	// RVA: 0x1039AE4 Offset: 0x1039AE4 VA: 0x1039AE4
	private static void .cctor() { }
}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xC46884 Offset: 0xC46884 VA: 0xC46884
[Serializable]
public class UnityException : Exception // TypeDefIndex: 2408
{
	// Methods

	// RVA: 0x104172C Offset: 0x104172C VA: 0x104172C
	public void .ctor() { }

	// RVA: 0x103AC3C Offset: 0x103AC3C VA: 0x103AC3C
	public void .ctor(string message) { }

	// RVA: 0x1041794 Offset: 0x1041794 VA: 0x1041794
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: UnityEngine
[Serializable]
public class MissingReferenceException : Exception // TypeDefIndex: 2409
{
	// Methods

	// RVA: 0x26B2CD8 Offset: 0x26B2CD8 VA: 0x26B2CD8
	public void .ctor() { }

	// RVA: 0x26B2D40 Offset: 0x26B2D40 VA: 0x26B2D40
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: UnityEngine
[VisibleToOtherModulesAttribute] // RVA: 0xC46894 Offset: 0xC46894 VA: 0xC46894
internal class SystemClock // TypeDefIndex: 2410
{
	// Fields
	private static readonly DateTime s_Epoch; // 0x0

	// Properties
	public static DateTime now { get; }

	// Methods

	// RVA: 0x1039B40 Offset: 0x1039B40 VA: 0x1039B40
	public static DateTime get_now() { }

	// RVA: 0x1039BA0 Offset: 0x1039BA0 VA: 0x1039BA0
	private static void .cctor() { }
}

// Namespace: UnityEngine
public enum OperatingSystemFamily // TypeDefIndex: 2411
{
	// Fields
	public int value__; // 0x0
	public const OperatingSystemFamily Other = 0;
	public const OperatingSystemFamily MacOSX = 1;
	public const OperatingSystemFamily Windows = 2;
	public const OperatingSystemFamily Linux = 3;
}

// Namespace: UnityEngine
public enum DeviceType // TypeDefIndex: 2412
{
	// Fields
	public int value__; // 0x0
	public const DeviceType Unknown = 0;
	public const DeviceType Handheld = 1;
	public const DeviceType Console = 2;
	public const DeviceType Desktop = 3;
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC468A4 Offset: 0xC468A4 VA: 0xC468A4
[NativeHeaderAttribute] // RVA: 0xC468A4 Offset: 0xC468A4 VA: 0xC468A4
[NativeHeaderAttribute] // RVA: 0xC468A4 Offset: 0xC468A4 VA: 0xC468A4
[NativeHeaderAttribute] // RVA: 0xC468A4 Offset: 0xC468A4 VA: 0xC468A4
[NativeHeaderAttribute] // RVA: 0xC468A4 Offset: 0xC468A4 VA: 0xC468A4
public sealed class SystemInfo // TypeDefIndex: 2413
{
	// Properties
	public static string operatingSystem { get; }
	public static OperatingSystemFamily operatingSystemFamily { get; }
	public static int systemMemorySize { get; }
	public static string deviceUniqueIdentifier { get; }
	public static string deviceName { get; }
	public static string deviceModel { get; }
	public static DeviceType deviceType { get; }
	public static GraphicsDeviceType graphicsDeviceType { get; }
	public static string graphicsDeviceVersion { get; }
	public static int graphicsShaderLevel { get; }
	[ObsoleteAttribute] // RVA: 0xC546DC Offset: 0xC546DC VA: 0xC546DC
	public static bool supportsRenderTextures { get; }
	public static bool supportsImageEffects { get; }
	public static bool supportsComputeShaders { get; }

	// Methods

	// RVA: 0x1039C28 Offset: 0x1039C28 VA: 0x1039C28
	public static string get_operatingSystem() { }

	// RVA: 0x1039C84 Offset: 0x1039C84 VA: 0x1039C84
	public static OperatingSystemFamily get_operatingSystemFamily() { }

	// RVA: 0x1039CE0 Offset: 0x1039CE0 VA: 0x1039CE0
	public static int get_systemMemorySize() { }

	// RVA: 0x1039D3C Offset: 0x1039D3C VA: 0x1039D3C
	public static string get_deviceUniqueIdentifier() { }

	// RVA: 0x1039D98 Offset: 0x1039D98 VA: 0x1039D98
	public static string get_deviceName() { }

	// RVA: 0x1039DF4 Offset: 0x1039DF4 VA: 0x1039DF4
	public static string get_deviceModel() { }

	// RVA: 0x1039E50 Offset: 0x1039E50 VA: 0x1039E50
	public static DeviceType get_deviceType() { }

	// RVA: 0x1039EAC Offset: 0x1039EAC VA: 0x1039EAC
	public static GraphicsDeviceType get_graphicsDeviceType() { }

	// RVA: 0x1039F08 Offset: 0x1039F08 VA: 0x1039F08
	public static string get_graphicsDeviceVersion() { }

	// RVA: 0x1039F64 Offset: 0x1039F64 VA: 0x1039F64
	public static int get_graphicsShaderLevel() { }

	// RVA: 0x1039FC0 Offset: 0x1039FC0 VA: 0x1039FC0
	public static bool get_supportsRenderTextures() { }

	// RVA: 0x1039FC8 Offset: 0x1039FC8 VA: 0x1039FC8
	public static bool get_supportsImageEffects() { }

	// RVA: 0x103A024 Offset: 0x103A024 VA: 0x103A024
	public static bool get_supportsComputeShaders() { }

	// RVA: 0x103A080 Offset: 0x103A080 VA: 0x103A080
	private static bool IsValidEnumValue(Enum value) { }

	// RVA: 0x103A10C Offset: 0x103A10C VA: 0x103A10C
	public static bool SupportsRenderTextureFormat(RenderTextureFormat format) { }

	// RVA: 0x103A230 Offset: 0x103A230 VA: 0x103A230
	public static bool SupportsTextureFormat(TextureFormat format) { }

	[FreeFunctionAttribute] // RVA: 0xC4F7F0 Offset: 0xC4F7F0 VA: 0xC4F7F0
	// RVA: 0x1039C2C Offset: 0x1039C2C VA: 0x1039C2C
	private static string GetOperatingSystem() { }

	[FreeFunctionAttribute] // RVA: 0xC4F828 Offset: 0xC4F828 VA: 0xC4F828
	// RVA: 0x1039C88 Offset: 0x1039C88 VA: 0x1039C88
	private static OperatingSystemFamily GetOperatingSystemFamily() { }

	[FreeFunctionAttribute] // RVA: 0xC4F860 Offset: 0xC4F860 VA: 0xC4F860
	// RVA: 0x1039CE4 Offset: 0x1039CE4 VA: 0x1039CE4
	private static int GetPhysicalMemoryMB() { }

	[FreeFunctionAttribute] // RVA: 0xC4F898 Offset: 0xC4F898 VA: 0xC4F898
	// RVA: 0x1039D40 Offset: 0x1039D40 VA: 0x1039D40
	private static string GetDeviceUniqueIdentifier() { }

	[FreeFunctionAttribute] // RVA: 0xC4F8D0 Offset: 0xC4F8D0 VA: 0xC4F8D0
	// RVA: 0x1039D9C Offset: 0x1039D9C VA: 0x1039D9C
	private static string GetDeviceName() { }

	[FreeFunctionAttribute] // RVA: 0xC4F908 Offset: 0xC4F908 VA: 0xC4F908
	// RVA: 0x1039DF8 Offset: 0x1039DF8 VA: 0x1039DF8
	private static string GetDeviceModel() { }

	[FreeFunctionAttribute] // RVA: 0xC4F940 Offset: 0xC4F940 VA: 0xC4F940
	// RVA: 0x1039E54 Offset: 0x1039E54 VA: 0x1039E54
	private static DeviceType GetDeviceType() { }

	[FreeFunctionAttribute] // RVA: 0xC4F978 Offset: 0xC4F978 VA: 0xC4F978
	// RVA: 0x1039EB0 Offset: 0x1039EB0 VA: 0x1039EB0
	private static GraphicsDeviceType GetGraphicsDeviceType() { }

	[FreeFunctionAttribute] // RVA: 0xC4F9B0 Offset: 0xC4F9B0 VA: 0xC4F9B0
	// RVA: 0x1039F0C Offset: 0x1039F0C VA: 0x1039F0C
	private static string GetGraphicsDeviceVersion() { }

	[FreeFunctionAttribute] // RVA: 0xC4F9E8 Offset: 0xC4F9E8 VA: 0xC4F9E8
	// RVA: 0x1039F68 Offset: 0x1039F68 VA: 0x1039F68
	private static int GetGraphicsShaderLevel() { }

	[FreeFunctionAttribute] // RVA: 0xC4FA20 Offset: 0xC4FA20 VA: 0xC4FA20
	// RVA: 0x1039FCC Offset: 0x1039FCC VA: 0x1039FCC
	private static bool SupportsImageEffects() { }

	[FreeFunctionAttribute] // RVA: 0xC4FA58 Offset: 0xC4FA58 VA: 0xC4FA58
	// RVA: 0x103A028 Offset: 0x103A028 VA: 0x103A028
	private static bool SupportsComputeShaders() { }

	[FreeFunctionAttribute] // RVA: 0xC4FA90 Offset: 0xC4FA90 VA: 0xC4FA90
	// RVA: 0x103A1C4 Offset: 0x103A1C4 VA: 0x103A1C4
	private static bool HasRenderTextureNative(RenderTextureFormat format) { }

	[FreeFunctionAttribute] // RVA: 0xC4FAC8 Offset: 0xC4FAC8 VA: 0xC4FAC8
	// RVA: 0x103A2E8 Offset: 0x103A2E8 VA: 0x103A2E8
	private static bool SupportsTextureFormatNative(TextureFormat format) { }

	[FreeFunctionAttribute] // RVA: 0xC4FB00 Offset: 0xC4FB00 VA: 0xC4FB00
	// RVA: 0x103A354 Offset: 0x103A354 VA: 0x103A354
	public static bool IsFormatSupported(GraphicsFormat format, FormatUsage usage) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC46970 Offset: 0xC46970 VA: 0xC46970
public class TextAsset : Object // TypeDefIndex: 2414
{
	// Properties
	public string text { get; }
	public byte[] bytes { get; }

	// Methods

	// RVA: 0x103A400 Offset: 0x103A400 VA: 0x103A400
	public string get_text() { }

	// RVA: 0x103A46C Offset: 0x103A46C VA: 0x103A46C
	public byte[] get_bytes() { }

	// RVA: 0x103A4D8 Offset: 0x103A4D8 VA: 0x103A4D8 Slot: 3
	public override string ToString() { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC469A8 Offset: 0xC469A8 VA: 0xC469A8
[NativeHeaderAttribute] // RVA: 0xC469A8 Offset: 0xC469A8 VA: 0xC469A8
[NativeHeaderAttribute] // RVA: 0xC469A8 Offset: 0xC469A8 VA: 0xC469A8
public class Texture : Object // TypeDefIndex: 2415
{
	// Properties
	public virtual int width { get; set; }
	public virtual int height { get; set; }
	public virtual TextureDimension dimension { set; }
	public virtual bool isReadable { get; }
	public TextureWrapMode wrapMode { get; set; }
	public FilterMode filterMode { set; }
	public Vector2 texelSize { get; }

	// Methods

	// RVA: 0x102F55C Offset: 0x102F55C VA: 0x102F55C
	protected void .ctor() { }

	// RVA: 0x103A4DC Offset: 0x103A4DC VA: 0x103A4DC
	private int GetDataWidth() { }

	// RVA: 0x103A548 Offset: 0x103A548 VA: 0x103A548
	private int GetDataHeight() { }

	// RVA: 0x103A5B4 Offset: 0x103A5B4 VA: 0x103A5B4 Slot: 4
	public virtual int get_width() { }

	// RVA: 0x103A5B8 Offset: 0x103A5B8 VA: 0x103A5B8 Slot: 5
	public virtual void set_width(int value) { }

	// RVA: 0x103A620 Offset: 0x103A620 VA: 0x103A620 Slot: 6
	public virtual int get_height() { }

	// RVA: 0x103A624 Offset: 0x103A624 VA: 0x103A624 Slot: 7
	public virtual void set_height(int value) { }

	// RVA: 0x103A68C Offset: 0x103A68C VA: 0x103A68C Slot: 8
	public virtual void set_dimension(TextureDimension value) { }

	// RVA: 0x103A6F4 Offset: 0x103A6F4 VA: 0x103A6F4 Slot: 9
	public virtual bool get_isReadable() { }

	[NativeNameAttribute] // RVA: 0xC4FB38 Offset: 0xC4FB38 VA: 0xC4FB38
	// RVA: 0x103A760 Offset: 0x103A760 VA: 0x103A760
	public TextureWrapMode get_wrapMode() { }

	// RVA: 0x103A7CC Offset: 0x103A7CC VA: 0x103A7CC
	public void set_wrapMode(TextureWrapMode value) { }

	// RVA: 0x103A840 Offset: 0x103A840 VA: 0x103A840
	public void set_filterMode(FilterMode value) { }

	[NativeNameAttribute] // RVA: 0xC4FB70 Offset: 0xC4FB70 VA: 0xC4FB70
	// RVA: 0x103A8B4 Offset: 0x103A8B4 VA: 0x103A8B4
	public Vector2 get_texelSize() { }

	// RVA: 0x103A950 Offset: 0x103A950 VA: 0x103A950
	public IntPtr GetNativeTexturePtr() { }

	// RVA: 0x102FEDC Offset: 0x102FEDC VA: 0x102FEDC
	internal bool ValidateFormat(RenderTextureFormat format) { }

	// RVA: 0x103A9BC Offset: 0x103A9BC VA: 0x103A9BC
	internal bool ValidateFormat(TextureFormat format) { }

	// RVA: 0x102FB10 Offset: 0x102FB10 VA: 0x102FB10
	internal bool ValidateFormat(GraphicsFormat format, FormatUsage usage) { }

	// RVA: 0x103AB64 Offset: 0x103AB64 VA: 0x103AB64
	internal UnityException CreateNonReadableException(Texture t) { }

	// RVA: 0x103A8DC Offset: 0x103A8DC VA: 0x103A8DC
	private void get_texelSize_Injected(out Vector2 ret) { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC46A18 Offset: 0xC46A18 VA: 0xC46A18
[NativeHeaderAttribute] // RVA: 0xC46A18 Offset: 0xC46A18 VA: 0xC46A18
[NativeHeaderAttribute] // RVA: 0xC46A18 Offset: 0xC46A18 VA: 0xC46A18
public sealed class Texture2D : Texture // TypeDefIndex: 2416
{
	// Properties
	public TextureFormat format { get; }
	[StaticAccessorAttribute] // RVA: 0xC54714 Offset: 0xC54714 VA: 0xC54714
	public static Texture2D whiteTexture { get; }
	public override bool isReadable { get; }

	// Methods

	// RVA: 0x103AC70 Offset: 0x103AC70 VA: 0x103AC70
	internal void .ctor(int width, int height, TextureFormat textureFormat, bool mipChain, bool linear, IntPtr nativeTex) { }

	// RVA: 0x103AE00 Offset: 0x103AE00 VA: 0x103AE00
	public void .ctor(int width, int height, TextureFormat textureFormat, bool mipChain, bool linear) { }

	// RVA: 0x103AE88 Offset: 0x103AE88 VA: 0x103AE88
	public void .ctor(int width, int height, TextureFormat textureFormat, bool mipChain) { }

	// RVA: 0x103AF04 Offset: 0x103AF04 VA: 0x103AF04
	public void .ctor(int width, int height) { }

	[NativeNameAttribute] // RVA: 0xC4FBA8 Offset: 0xC4FBA8 VA: 0xC4FBA8
	// RVA: 0x103AF70 Offset: 0x103AF70 VA: 0x103AF70
	public TextureFormat get_format() { }

	// RVA: 0x103AFDC Offset: 0x103AFDC VA: 0x103AFDC
	public static Texture2D get_whiteTexture() { }

	[FreeFunctionAttribute] // RVA: 0xC4FBE0 Offset: 0xC4FBE0 VA: 0xC4FBE0
	// RVA: 0x103B034 Offset: 0x103B034 VA: 0x103B034
	private static bool Internal_CreateImpl(Texture2D mono, int w, int h, GraphicsFormat format, TextureCreationFlags flags, IntPtr nativeTex) { }

	// RVA: 0x103AD34 Offset: 0x103AD34 VA: 0x103AD34
	private static void Internal_Create(Texture2D mono, int w, int h, GraphicsFormat format, TextureCreationFlags flags, IntPtr nativeTex) { }

	// RVA: 0x103B0D8 Offset: 0x103B0D8 VA: 0x103B0D8 Slot: 9
	public override bool get_isReadable() { }

	[NativeNameAttribute] // RVA: 0xC4FC18 Offset: 0xC4FC18 VA: 0xC4FC18
	// RVA: 0x103B144 Offset: 0x103B144 VA: 0x103B144
	private void ApplyImpl(bool updateMipmaps, bool makeNoLongerReadable) { }

	[NativeNameAttribute] // RVA: 0xC4FC50 Offset: 0xC4FC50 VA: 0xC4FC50
	// RVA: 0x103B1C8 Offset: 0x103B1C8 VA: 0x103B1C8
	private void SetPixelImpl(int image, int x, int y, Color color) { }

	[NativeNameAttribute] // RVA: 0xC4FC88 Offset: 0xC4FC88 VA: 0xC4FC88
	// RVA: 0x103B28C Offset: 0x103B28C VA: 0x103B28C
	private Color GetPixelImpl(int image, int x, int y) { }

	[NativeNameAttribute] // RVA: 0xC4FCC0 Offset: 0xC4FCC0 VA: 0xC4FCC0
	// RVA: 0x103B354 Offset: 0x103B354 VA: 0x103B354
	private Color GetPixelBilinearImpl(int image, float x, float y) { }

	[FreeFunctionAttribute] // RVA: 0xC4FCF8 Offset: 0xC4FCF8 VA: 0xC4FCF8
	// RVA: 0x103B41C Offset: 0x103B41C VA: 0x103B41C
	private void ReadPixelsImpl(Rect source, int destX, int destY, bool recalculateMipMaps) { }

	[FreeFunctionAttribute] // RVA: 0xC4FD4C Offset: 0xC4FD4C VA: 0xC4FD4C
	// RVA: 0x103B4F4 Offset: 0x103B4F4 VA: 0x103B4F4
	private void SetPixelsImpl(int x, int y, int w, int h, Color[] pixel, int miplevel, int frame) { }

	[FreeFunctionAttribute] // RVA: 0xC4FDA0 Offset: 0xC4FDA0 VA: 0xC4FDA0
	// RVA: 0x103B5B0 Offset: 0x103B5B0 VA: 0x103B5B0
	private bool LoadRawTextureDataImpl(IntPtr data, int size) { }

	[FreeFunctionAttribute] // RVA: 0xC4FDF4 Offset: 0xC4FDF4 VA: 0xC4FDF4
	// RVA: 0x103B634 Offset: 0x103B634 VA: 0x103B634
	public void UpdateExternalTexture(IntPtr nativeTex) { }

	[FreeFunctionAttribute] // RVA: 0xC4FE3C Offset: 0xC4FE3C VA: 0xC4FE3C
	// RVA: 0x103B6A8 Offset: 0x103B6A8 VA: 0x103B6A8
	private void SetAllPixels32(Color32[] colors, int miplevel) { }

	[FreeFunctionAttribute] // RVA: 0xC4FE94 Offset: 0xC4FE94 VA: 0xC4FE94
	// RVA: 0x103B72C Offset: 0x103B72C VA: 0x103B72C
	public byte[] GetRawTextureData() { }

	[FreeFunctionAttribute] // RVA: 0xC4FEDC Offset: 0xC4FEDC VA: 0xC4FEDC
	// RVA: 0x103B798 Offset: 0x103B798 VA: 0x103B798
	public Color[] GetPixels(int x, int y, int blockWidth, int blockHeight, int miplevel) { }

	// RVA: 0x103B83C Offset: 0x103B83C VA: 0x103B83C
	public Color[] GetPixels(int x, int y, int blockWidth, int blockHeight) { }

	[FreeFunctionAttribute] // RVA: 0xC4FF34 Offset: 0xC4FF34 VA: 0xC4FF34
	// RVA: 0x103B844 Offset: 0x103B844 VA: 0x103B844
	public Color32[] GetPixels32(int miplevel) { }

	// RVA: 0x103B8B8 Offset: 0x103B8B8 VA: 0x103B8B8
	public Color32[] GetPixels32() { }

	// RVA: 0x103B8C0 Offset: 0x103B8C0 VA: 0x103B8C0
	public static Texture2D CreateExternalTexture(int width, int height, TextureFormat format, bool mipChain, bool linear, IntPtr nativeTex) { }

	// RVA: 0x103B9B8 Offset: 0x103B9B8 VA: 0x103B9B8
	public void SetPixel(int x, int y, Color color) { }

	// RVA: 0x103BA84 Offset: 0x103BA84 VA: 0x103BA84
	public void SetPixels(int x, int y, int blockWidth, int blockHeight, Color[] colors, int miplevel) { }

	// RVA: 0x103BB54 Offset: 0x103BB54 VA: 0x103BB54
	public void SetPixels(Color[] colors, int miplevel) { }

	// RVA: 0x103BBDC Offset: 0x103BBDC VA: 0x103BBDC
	public void SetPixels(Color[] colors) { }

	// RVA: 0x103BC44 Offset: 0x103BC44 VA: 0x103BC44
	public Color GetPixel(int x, int y) { }

	// RVA: 0x103BCF4 Offset: 0x103BCF4 VA: 0x103BCF4
	public Color GetPixelBilinear(float x, float y) { }

	// RVA: 0x103BDA4 Offset: 0x103BDA4 VA: 0x103BDA4
	public void LoadRawTextureData(IntPtr data, int size) { }

	// RVA: 0x103BECC Offset: 0x103BECC VA: 0x103BECC
	public void Apply(bool updateMipmaps, bool makeNoLongerReadable) { }

	// RVA: 0x103BF5C Offset: 0x103BF5C VA: 0x103BF5C
	public void Apply() { }

	// RVA: 0x103BF68 Offset: 0x103BF68 VA: 0x103BF68
	public void ReadPixels(Rect source, int destX, int destY, bool recalculateMipMaps) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC4FF8C Offset: 0xC4FF8C VA: 0xC4FF8C
	// RVA: 0x103C040 Offset: 0x103C040 VA: 0x103C040
	public void ReadPixels(Rect source, int destX, int destY) { }

	// RVA: 0x103C048 Offset: 0x103C048 VA: 0x103C048
	public void SetPixels32(Color32[] colors, int miplevel) { }

	// RVA: 0x103C04C Offset: 0x103C04C VA: 0x103C04C
	public void SetPixels32(Color32[] colors) { }

	// RVA: 0x103C054 Offset: 0x103C054 VA: 0x103C054
	public Color[] GetPixels(int miplevel) { }

	// RVA: 0x103C0CC Offset: 0x103C0CC VA: 0x103C0CC
	public Color[] GetPixels() { }

	// RVA: 0x103B1F0 Offset: 0x103B1F0 VA: 0x103B1F0
	private void SetPixelImpl_Injected(int image, int x, int y, ref Color color) { }

	// RVA: 0x103B2B8 Offset: 0x103B2B8 VA: 0x103B2B8
	private void GetPixelImpl_Injected(int image, int x, int y, out Color ret) { }

	// RVA: 0x103B380 Offset: 0x103B380 VA: 0x103B380
	private void GetPixelBilinearImpl_Injected(int image, float x, float y, out Color ret) { }

	// RVA: 0x103B458 Offset: 0x103B458 VA: 0x103B458
	private void ReadPixelsImpl_Injected(ref Rect source, int destX, int destY, bool recalculateMipMaps) { }
}

// Namespace: UnityEngine
[ExcludeFromPresetAttribute] // RVA: 0xC46A88 Offset: 0xC46A88 VA: 0xC46A88
[NativeHeaderAttribute] // RVA: 0xC46A88 Offset: 0xC46A88 VA: 0xC46A88
public sealed class Cubemap : Texture // TypeDefIndex: 2417
{
	// Properties
	public override bool isReadable { get; }

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC4FF9C Offset: 0xC4FF9C VA: 0xC4FF9C
	// RVA: 0x2649AE4 Offset: 0x2649AE4 VA: 0x2649AE4
	public void .ctor(int width, GraphicsFormat format, TextureCreationFlags flags) { }

	// RVA: 0x2649C4C Offset: 0x2649C4C VA: 0x2649C4C
	internal void .ctor(int width, TextureFormat textureFormat, bool mipChain, IntPtr nativeTex) { }

	// RVA: 0x2649D34 Offset: 0x2649D34 VA: 0x2649D34
	public void .ctor(int width, TextureFormat textureFormat, bool mipChain) { }

	[FreeFunctionAttribute] // RVA: 0xC4FFAC Offset: 0xC4FFAC VA: 0xC4FFAC
	// RVA: 0x2649DA4 Offset: 0x2649DA4 VA: 0x2649DA4
	private static bool Internal_CreateImpl(Cubemap mono, int ext, GraphicsFormat format, TextureCreationFlags flags, IntPtr nativeTex) { }

	// RVA: 0x2649B8C Offset: 0x2649B8C VA: 0x2649B8C
	private static void Internal_Create(Cubemap mono, int ext, GraphicsFormat format, TextureCreationFlags flags, IntPtr nativeTex) { }

	// RVA: 0x2649E40 Offset: 0x2649E40 VA: 0x2649E40 Slot: 9
	public override bool get_isReadable() { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC46AD4 Offset: 0xC46AD4 VA: 0xC46AD4
[ExcludeFromPresetAttribute] // RVA: 0xC46AD4 Offset: 0xC46AD4 VA: 0xC46AD4
public sealed class Texture3D : Texture // TypeDefIndex: 2418
{
	// Properties
	public override bool isReadable { get; }

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC4FFE4 Offset: 0xC4FFE4 VA: 0xC4FFE4
	// RVA: 0x103C404 Offset: 0x103C404 VA: 0x103C404
	public void .ctor(int width, int height, int depth, GraphicsFormat format, TextureCreationFlags flags) { }

	// RVA: 0x103C554 Offset: 0x103C554 VA: 0x103C554
	public void .ctor(int width, int height, int depth, TextureFormat textureFormat, bool mipChain) { }

	// RVA: 0x103C610 Offset: 0x103C610 VA: 0x103C610 Slot: 9
	public override bool get_isReadable() { }

	[FreeFunctionAttribute] // RVA: 0xC4FFF4 Offset: 0xC4FFF4 VA: 0xC4FFF4
	// RVA: 0x103C67C Offset: 0x103C67C VA: 0x103C67C
	private static bool Internal_CreateImpl(Texture3D mono, int w, int h, int d, GraphicsFormat format, TextureCreationFlags flags) { }

	// RVA: 0x103C488 Offset: 0x103C488 VA: 0x103C488
	private static void Internal_Create(Texture3D mono, int w, int h, int d, GraphicsFormat format, TextureCreationFlags flags) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC46B20 Offset: 0xC46B20 VA: 0xC46B20
public sealed class Texture2DArray : Texture // TypeDefIndex: 2419
{
	// Properties
	public override bool isReadable { get; }

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC5002C Offset: 0xC5002C VA: 0xC5002C
	// RVA: 0x103C0D4 Offset: 0x103C0D4 VA: 0x103C0D4
	public void .ctor(int width, int height, int depth, GraphicsFormat format, TextureCreationFlags flags) { }

	// RVA: 0x103C224 Offset: 0x103C224 VA: 0x103C224
	public void .ctor(int width, int height, int depth, TextureFormat textureFormat, bool mipChain, bool linear) { }

	// RVA: 0x103C2E8 Offset: 0x103C2E8 VA: 0x103C2E8
	public void .ctor(int width, int height, int depth, TextureFormat textureFormat, bool mipChain) { }

	// RVA: 0x103C2F4 Offset: 0x103C2F4 VA: 0x103C2F4 Slot: 9
	public override bool get_isReadable() { }

	[FreeFunctionAttribute] // RVA: 0xC5003C Offset: 0xC5003C VA: 0xC5003C
	// RVA: 0x103C360 Offset: 0x103C360 VA: 0x103C360
	private static bool Internal_CreateImpl(Texture2DArray mono, int w, int h, int d, GraphicsFormat format, TextureCreationFlags flags) { }

	// RVA: 0x103C158 Offset: 0x103C158 VA: 0x103C158
	private static void Internal_Create(Texture2DArray mono, int w, int h, int d, GraphicsFormat format, TextureCreationFlags flags) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC46B58 Offset: 0xC46B58 VA: 0xC46B58
public sealed class CubemapArray : Texture // TypeDefIndex: 2420
{
	// Properties
	public override bool isReadable { get; }

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC50074 Offset: 0xC50074 VA: 0xC50074
	// RVA: 0x2649EAC Offset: 0x2649EAC VA: 0x2649EAC
	public void .ctor(int width, int cubemapCount, GraphicsFormat format, TextureCreationFlags flags) { }

	// RVA: 0x2649FF0 Offset: 0x2649FF0 VA: 0x2649FF0
	public void .ctor(int width, int cubemapCount, TextureFormat textureFormat, bool mipChain, bool linear) { }

	// RVA: 0x264A0AC Offset: 0x264A0AC VA: 0x264A0AC
	public void .ctor(int width, int cubemapCount, TextureFormat textureFormat, bool mipChain) { }

	// RVA: 0x264A0B8 Offset: 0x264A0B8 VA: 0x264A0B8 Slot: 9
	public override bool get_isReadable() { }

	[FreeFunctionAttribute] // RVA: 0xC50084 Offset: 0xC50084 VA: 0xC50084
	// RVA: 0x264A124 Offset: 0x264A124 VA: 0x264A124
	private static bool Internal_CreateImpl(CubemapArray mono, int ext, int count, GraphicsFormat format, TextureCreationFlags flags) { }

	// RVA: 0x2649F30 Offset: 0x2649F30 VA: 0x2649F30
	private static void Internal_Create(CubemapArray mono, int ext, int count, GraphicsFormat format, TextureCreationFlags flags) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC46B90 Offset: 0xC46B90 VA: 0xC46B90
[NativeHeaderAttribute] // RVA: 0xC46B90 Offset: 0xC46B90 VA: 0xC46B90
[NativeHeaderAttribute] // RVA: 0xC46B90 Offset: 0xC46B90 VA: 0xC46B90
[UsedByNativeCodeAttribute] // RVA: 0xC46B90 Offset: 0xC46B90 VA: 0xC46B90
[NativeHeaderAttribute] // RVA: 0xC46B90 Offset: 0xC46B90 VA: 0xC46B90
public class RenderTexture : Texture // TypeDefIndex: 2421
{
	// Properties
	public override int width { get; set; }
	public override int height { get; set; }
	public override TextureDimension dimension { set; }
	[NativePropertyAttribute] // RVA: 0xC54750 Offset: 0xC54750 VA: 0xC54750
	public RenderTextureFormat format { get; set; }
	public bool autoGenerateMips { set; }
	public static RenderTexture active { get; set; }
	public RenderBuffer colorBuffer { get; }
	public RenderBuffer depthBuffer { get; }
	public int depth { get; set; }
	public RenderTextureDescriptor descriptor { get; }

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC500BC Offset: 0xC500BC VA: 0xC500BC
	// RVA: 0x102F558 Offset: 0x102F558 VA: 0x102F558
	protected internal void .ctor() { }

	// RVA: 0x102F5C4 Offset: 0x102F5C4 VA: 0x102F5C4
	public void .ctor(RenderTextureDescriptor desc) { }

	// RVA: 0x102F83C Offset: 0x102F83C VA: 0x102F83C
	public void .ctor(RenderTexture textureToCopy) { }

	// RVA: 0x102FA40 Offset: 0x102FA40 VA: 0x102FA40
	public void .ctor(int width, int height, int depth, GraphicsFormat format) { }

	// RVA: 0x102FDF8 Offset: 0x102FDF8 VA: 0x102FDF8
	public void .ctor(int width, int height, int depth, RenderTextureFormat format, RenderTextureReadWrite readWrite) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC500CC Offset: 0xC500CC VA: 0xC500CC
	// RVA: 0x1030004 Offset: 0x1030004 VA: 0x1030004
	public void .ctor(int width, int height, int depth, RenderTextureFormat format) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC500DC Offset: 0xC500DC VA: 0xC500DC
	// RVA: 0x103000C Offset: 0x103000C VA: 0x103000C
	public void .ctor(int width, int height, int depth) { }

	// RVA: 0x1030018 Offset: 0x1030018 VA: 0x1030018 Slot: 4
	public override int get_width() { }

	// RVA: 0x1030084 Offset: 0x1030084 VA: 0x1030084 Slot: 5
	public override void set_width(int value) { }

	// RVA: 0x10300F8 Offset: 0x10300F8 VA: 0x10300F8 Slot: 6
	public override int get_height() { }

	// RVA: 0x1030164 Offset: 0x1030164 VA: 0x1030164 Slot: 7
	public override void set_height(int value) { }

	// RVA: 0x10301D8 Offset: 0x10301D8 VA: 0x10301D8 Slot: 8
	public override void set_dimension(TextureDimension value) { }

	// RVA: 0x103024C Offset: 0x103024C VA: 0x103024C
	public RenderTextureFormat get_format() { }

	// RVA: 0x102FD10 Offset: 0x102FD10 VA: 0x102FD10
	public void set_format(RenderTextureFormat value) { }

	// RVA: 0x10302B8 Offset: 0x10302B8 VA: 0x10302B8
	public void set_autoGenerateMips(bool value) { }

	[FreeFunctionAttribute] // RVA: 0xC500EC Offset: 0xC500EC VA: 0xC500EC
	// RVA: 0x103032C Offset: 0x103032C VA: 0x103032C
	private static RenderTexture GetActive() { }

	[FreeFunctionAttribute] // RVA: 0xC50124 Offset: 0xC50124 VA: 0xC50124
	// RVA: 0x1030384 Offset: 0x1030384 VA: 0x1030384
	private static void SetActive(RenderTexture rt) { }

	// RVA: 0x10303F0 Offset: 0x10303F0 VA: 0x10303F0
	public static RenderTexture get_active() { }

	// RVA: 0x10303F4 Offset: 0x10303F4 VA: 0x10303F4
	public static void set_active(RenderTexture value) { }

	[FreeFunctionAttribute] // RVA: 0xC5015C Offset: 0xC5015C VA: 0xC5015C
	// RVA: 0x10303F8 Offset: 0x10303F8 VA: 0x10303F8
	private RenderBuffer GetColorBuffer() { }

	[FreeFunctionAttribute] // RVA: 0xC501B0 Offset: 0xC501B0 VA: 0xC501B0
	// RVA: 0x1030494 Offset: 0x1030494 VA: 0x1030494
	private RenderBuffer GetDepthBuffer() { }

	// RVA: 0x1030530 Offset: 0x1030530 VA: 0x1030530
	public RenderBuffer get_colorBuffer() { }

	// RVA: 0x1030558 Offset: 0x1030558 VA: 0x1030558
	public RenderBuffer get_depthBuffer() { }

	// RVA: 0x1030580 Offset: 0x1030580 VA: 0x1030580
	public void DiscardContents(bool discardColor, bool discardDepth) { }

	// RVA: 0x1030604 Offset: 0x1030604 VA: 0x1030604
	public void MarkRestoreExpected() { }

	// RVA: 0x1030670 Offset: 0x1030670 VA: 0x1030670
	public void DiscardContents() { }

	// RVA: 0x103067C Offset: 0x103067C VA: 0x103067C
	public bool Create() { }

	// RVA: 0x10306E8 Offset: 0x10306E8 VA: 0x10306E8
	public void Release() { }

	// RVA: 0x1030754 Offset: 0x1030754 VA: 0x1030754
	public bool IsCreated() { }

	// RVA: 0x102FD84 Offset: 0x102FD84 VA: 0x102FD84
	internal void SetSRGBReadWrite(bool srgb) { }

	[FreeFunctionAttribute] // RVA: 0xC50204 Offset: 0xC50204 VA: 0xC50204
	// RVA: 0x102F7CC Offset: 0x102F7CC VA: 0x102F7CC
	private static void Internal_Create(RenderTexture rt) { }

	[NativeNameAttribute] // RVA: 0xC5023C Offset: 0xC5023C VA: 0xC5023C
	// RVA: 0x102F838 Offset: 0x102F838 VA: 0x102F838
	private void SetRenderTextureDescriptor(RenderTextureDescriptor desc) { }

	[NativeNameAttribute] // RVA: 0xC50274 Offset: 0xC50274 VA: 0xC50274
	// RVA: 0x1030834 Offset: 0x1030834 VA: 0x1030834
	private RenderTextureDescriptor GetDescriptor() { }

	[FreeFunctionAttribute] // RVA: 0xC502AC Offset: 0xC502AC VA: 0xC502AC
	// RVA: 0x10308F4 Offset: 0x10308F4 VA: 0x10308F4
	private static RenderTexture GetTemporary_Internal(RenderTextureDescriptor desc) { }

	[FreeFunctionAttribute] // RVA: 0xC502E4 Offset: 0xC502E4 VA: 0xC502E4
	// RVA: 0x1030964 Offset: 0x1030964 VA: 0x1030964
	public static void ReleaseTemporary(RenderTexture temp) { }

	[FreeFunctionAttribute] // RVA: 0xC5031C Offset: 0xC5031C VA: 0xC5031C
	// RVA: 0x10309D0 Offset: 0x10309D0 VA: 0x10309D0
	public int get_depth() { }

	[FreeFunctionAttribute] // RVA: 0xC50364 Offset: 0xC50364 VA: 0xC50364
	// RVA: 0x102FC9C Offset: 0x102FC9C VA: 0x102FC9C
	public void set_depth(int value) { }

	// RVA: 0x102F9D8 Offset: 0x102F9D8 VA: 0x102F9D8
	public RenderTextureDescriptor get_descriptor() { }

	// RVA: 0x102F63C Offset: 0x102F63C VA: 0x102F63C
	private static void ValidateRenderTextureDesc(RenderTextureDescriptor desc) { }

	// RVA: 0x1030AFC Offset: 0x1030AFC VA: 0x1030AFC
	public static RenderTexture GetTemporary(RenderTextureDescriptor desc) { }

	// RVA: 0x1030B88 Offset: 0x1030B88 VA: 0x1030B88
	private static RenderTexture GetTemporaryImpl(int width, int height, int depthBuffer = 0, RenderTextureFormat format = 7, RenderTextureReadWrite readWrite = 0, int antiAliasing = 1, RenderTextureMemoryless memorylessMode = 0, VRTextureUsage vrUsage = 0, bool useDynamicScale = False) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC503AC Offset: 0xC503AC VA: 0xC503AC
	// RVA: 0x1030CE4 Offset: 0x1030CE4 VA: 0x1030CE4
	public static RenderTexture GetTemporary(int width, int height, int depthBuffer, RenderTextureFormat format, RenderTextureReadWrite readWrite) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC503BC Offset: 0xC503BC VA: 0xC503BC
	// RVA: 0x1030D10 Offset: 0x1030D10 VA: 0x1030D10
	public static RenderTexture GetTemporary(int width, int height, int depthBuffer, RenderTextureFormat format) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC503CC Offset: 0xC503CC VA: 0xC503CC
	// RVA: 0x1030D40 Offset: 0x1030D40 VA: 0x1030D40
	public static RenderTexture GetTemporary(int width, int height, int depthBuffer) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC503DC Offset: 0xC503DC VA: 0xC503DC
	// RVA: 0x1030D74 Offset: 0x1030D74 VA: 0x1030D74
	public static RenderTexture GetTemporary(int width, int height) { }

	// RVA: 0x1030420 Offset: 0x1030420 VA: 0x1030420
	private void GetColorBuffer_Injected(out RenderBuffer ret) { }

	// RVA: 0x10304BC Offset: 0x10304BC VA: 0x10304BC
	private void GetDepthBuffer_Injected(out RenderBuffer ret) { }

	// RVA: 0x10307C0 Offset: 0x10307C0 VA: 0x10307C0
	private void SetRenderTextureDescriptor_Injected(ref RenderTextureDescriptor desc) { }

	// RVA: 0x1030880 Offset: 0x1030880 VA: 0x1030880
	private void GetDescriptor_Injected(out RenderTextureDescriptor ret) { }

	// RVA: 0x10308F8 Offset: 0x10308F8 VA: 0x10308F8
	private static RenderTexture GetTemporary_Internal_Injected(ref RenderTextureDescriptor desc) { }
}

// Namespace: UnityEngine
public struct RenderTextureDescriptor // TypeDefIndex: 2422
{
	// Fields
	[DebuggerBrowsableAttribute] // RVA: 0xC49214 Offset: 0xC49214 VA: 0xC49214
	[CompilerGeneratedAttribute] // RVA: 0xC49214 Offset: 0xC49214 VA: 0xC49214
	private int <width>k__BackingField; // 0x0
	[DebuggerBrowsableAttribute] // RVA: 0xC49250 Offset: 0xC49250 VA: 0xC49250
	[CompilerGeneratedAttribute] // RVA: 0xC49250 Offset: 0xC49250 VA: 0xC49250
	private int <height>k__BackingField; // 0x4
	[DebuggerBrowsableAttribute] // RVA: 0xC4928C Offset: 0xC4928C VA: 0xC4928C
	[CompilerGeneratedAttribute] // RVA: 0xC4928C Offset: 0xC4928C VA: 0xC4928C
	private int <msaaSamples>k__BackingField; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC492C8 Offset: 0xC492C8 VA: 0xC492C8
	[DebuggerBrowsableAttribute] // RVA: 0xC492C8 Offset: 0xC492C8 VA: 0xC492C8
	private int <volumeDepth>k__BackingField; // 0xC
	[CompilerGeneratedAttribute] // RVA: 0xC49304 Offset: 0xC49304 VA: 0xC49304
	[DebuggerBrowsableAttribute] // RVA: 0xC49304 Offset: 0xC49304 VA: 0xC49304
	private RenderTextureFormat <colorFormat>k__BackingField; // 0x10
	private int _depthBufferBits; // 0x14
	private static int[] depthFormatBits; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC49340 Offset: 0xC49340 VA: 0xC49340
	[DebuggerBrowsableAttribute] // RVA: 0xC49340 Offset: 0xC49340 VA: 0xC49340
	private TextureDimension <dimension>k__BackingField; // 0x18
	[DebuggerBrowsableAttribute] // RVA: 0xC4937C Offset: 0xC4937C VA: 0xC4937C
	[CompilerGeneratedAttribute] // RVA: 0xC4937C Offset: 0xC4937C VA: 0xC4937C
	private ShadowSamplingMode <shadowSamplingMode>k__BackingField; // 0x1C
	[CompilerGeneratedAttribute] // RVA: 0xC493B8 Offset: 0xC493B8 VA: 0xC493B8
	[DebuggerBrowsableAttribute] // RVA: 0xC493B8 Offset: 0xC493B8 VA: 0xC493B8
	private VRTextureUsage <vrUsage>k__BackingField; // 0x20
	private RenderTextureCreationFlags _flags; // 0x24
	[CompilerGeneratedAttribute] // RVA: 0xC493F4 Offset: 0xC493F4 VA: 0xC493F4
	[DebuggerBrowsableAttribute] // RVA: 0xC493F4 Offset: 0xC493F4 VA: 0xC493F4
	private RenderTextureMemoryless <memoryless>k__BackingField; // 0x28

	// Properties
	public int width { get; set; }
	public int height { get; set; }
	public int msaaSamples { get; set; }
	public int volumeDepth { get; set; }
	public RenderTextureFormat colorFormat { set; }
	public int depthBufferBits { get; set; }
	public TextureDimension dimension { set; }
	public ShadowSamplingMode shadowSamplingMode { set; }
	public VRTextureUsage vrUsage { set; }
	public RenderTextureMemoryless memoryless { set; }
	public bool sRGB { set; }
	internal bool createdFromScript { set; }
	internal bool useDynamicScale { set; }

	// Methods

	// RVA: 0xBB9F80 Offset: 0xBB9F80 VA: 0xBB9F80
	public void .ctor(int width, int height, RenderTextureFormat colorFormat, int depthBufferBits) { }

	[CompilerGeneratedAttribute] // RVA: 0xC503EC Offset: 0xC503EC VA: 0xC503EC
	// RVA: 0xBB9FB8 Offset: 0xBB9FB8 VA: 0xBB9FB8
	public int get_width() { }

	[CompilerGeneratedAttribute] // RVA: 0xC503FC Offset: 0xC503FC VA: 0xC503FC
	// RVA: 0xBB9FC0 Offset: 0xBB9FC0 VA: 0xBB9FC0
	public void set_width(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC5040C Offset: 0xC5040C VA: 0xC5040C
	// RVA: 0xBB9FC8 Offset: 0xBB9FC8 VA: 0xBB9FC8
