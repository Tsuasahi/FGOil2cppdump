	internal float startRotY; // 0x38
	internal float endRotY; // 0x3C
	internal Vector3 startRot; // 0x40
	internal Vector3 endRot; // 0x4C
	internal CylinderCore.StateZoomIn $this; // 0x58

	// Methods

	// RVA: 0x1982D6C Offset: 0x1982D6C VA: 0x1982D6C
	public void .ctor() { }

	// RVA: 0x1982F38 Offset: 0x1982F38 VA: 0x1982F38
	internal void <>m__0() { }

	// RVA: 0x198316C Offset: 0x198316C VA: 0x198316C
	internal void <>m__1() { }
}

// Namespace: 
private class CylinderCore.StateZoomOut : IState<CylinderCore> // TypeDefIndex: 10878
{
	// Fields
	private CylinderCore mCore; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCE7214 Offset: 0xCE7214 VA: 0xCE7214
	private static Action <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1981A90 Offset: 0x1981A90 VA: 0x1981A90
	public void .ctor() { }

	// RVA: 0x19832E8 Offset: 0x19832E8 VA: 0x19832E8 Slot: 4
	public void begin(CylinderCore that) { }

	// RVA: 0x19838C4 Offset: 0x19838C4 VA: 0x19838C4 Slot: 5
	public void update(CylinderCore that) { }

	// RVA: 0x19838C8 Offset: 0x19838C8 VA: 0x19838C8 Slot: 6
	public void end(CylinderCore that) { }

	// RVA: 0x19837FC Offset: 0x19837FC VA: 0x19837FC
	private void GoNext() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F66C Offset: 0xD3F66C VA: 0xD3F66C
	// RVA: 0x19838CC Offset: 0x19838CC VA: 0x19838CC
	private static void <begin>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB17D0 Offset: 0xCB17D0 VA: 0xCB17D0
private sealed class CylinderCore.StateZoomOut.<begin>c__AnonStorey0 // TypeDefIndex: 10879
{
	// Fields
	internal EasingObject eo; // 0x10
	internal Vector3 startPos; // 0x18
	internal Vector3 endPos; // 0x24
	internal CylinderCore that; // 0x30
	internal Vector3 endRot; // 0x38
	internal Vector3 startRot; // 0x44
	internal CylinderCore.StateZoomOut $this; // 0x50

	// Methods

	// RVA: 0x19837F4 Offset: 0x19837F4 VA: 0x19837F4
	public void .ctor() { }

	// RVA: 0x19838D0 Offset: 0x19838D0 VA: 0x19838D0
	internal void <>m__0() { }

	// RVA: 0x1983B04 Offset: 0x1983B04 VA: 0x1983B04
	internal void <>m__1() { }
}

// Namespace: 
public class CylinderPoint : BaseEarthPoint // TypeDefIndex: 10880
{
	// Fields
	private const string EFFECT_NAME = "ef_difference21";
	private static readonly Vector3 FORWARD_VEC; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCE7224 Offset: 0xCE7224 VA: 0xCE7224
	[DebuggerBrowsableAttribute] // RVA: 0xCE7224 Offset: 0xCE7224 VA: 0xCE7224
	private float <Deg>k__BackingField; // 0x6C

	// Properties
	public float Deg { get; set; }

	// Methods

	// RVA: 0x1983BF4 Offset: 0x1983BF4 VA: 0x1983BF4
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F67C Offset: 0xD3F67C VA: 0xD3F67C
	// RVA: 0x1982E3C Offset: 0x1982E3C VA: 0x1982E3C
	public float get_Deg() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F68C Offset: 0xD3F68C VA: 0xD3F68C
	// RVA: 0x19822D0 Offset: 0x19822D0 VA: 0x19822D0
	public void set_Deg(float value) { }

	// RVA: 0x1983C5C Offset: 0x1983C5C VA: 0x1983C5C Slot: 4
	protected override void LateUpdate() { }

	// RVA: 0x1983F2C Offset: 0x1983F2C VA: 0x1983F2C Slot: 5
	protected override string GetEffectName() { }

	// RVA: 0x1983F74 Offset: 0x1983F74 VA: 0x1983F74
	private static void .cctor() { }
}

// Namespace: 
public class EarthCore : BaseCore // TypeDefIndex: 10881
{
	// Fields
	public const float CORE_SCL = 350;
	public const float ZOOM_IN_SPD_TIME = 1;
	public const float ZOOM_IN_SCL = 6;
	public const float ZOOM_OUT_SPD_TIME = 1;
	public const float EARTH_RADIUS = 0.5;
	public const float GREENWICH_OFFSET = 9.5;
	public const float FOCUS_SPD_RATE = 0.35;
	public static readonly Vector3 FOCUS_IN_POS; // 0x0
	public const float FOCUS_IN_SCL = 1;
	public static readonly Vector3 FOCUS_OUT_POS; // 0xC
	public const float FOCUS_OUT_SCL = 0.95;
	private CStateManager<EarthCore> mFSM; // 0x98
	private EarthCore.StateMain mStateMain; // 0xA0

	// Methods

	// RVA: 0x1634344 Offset: 0x1634344 VA: 0x1634344
	public void .ctor() { }

	// RVA: 0x16343B4 Offset: 0x16343B4 VA: 0x16343B4
	public EarthCore.StateMain GetStateMain() { }

	// RVA: 0x16343BC Offset: 0x16343BC VA: 0x16343BC Slot: 4
	public override void FocusInOut(bool isFocusIn, bool isForce = False) { }

	// RVA: 0x16344D4 Offset: 0x16344D4 VA: 0x16344D4 Slot: 5
	public override void Awake() { }

	// RVA: 0x163478C Offset: 0x163478C VA: 0x163478C Slot: 6
	public override void Update() { }

	// RVA: 0x1634880 Offset: 0x1634880 VA: 0x1634880 Slot: 7
	public override void OnPress() { }

	// RVA: 0x16348E4 Offset: 0x16348E4 VA: 0x16348E4 Slot: 14
	public override float GetStateMainInertialSpdOld() { }

	// RVA: 0x1634918 Offset: 0x1634918 VA: 0x1634918 Slot: 8
	public override void Setup(List<MapControl.WarInfo> warInfoList, bool isFocusIn) { }

	// RVA: 0x1634E78 Offset: 0x1634E78 VA: 0x1634E78 Slot: 9
	public override void mcbfStartMain() { }

	// RVA: 0x1634E80 Offset: 0x1634E80 VA: 0x1634E80 Slot: 10
	public override void mcbfStartZoomOut() { }

	// RVA: 0x1634E88 Offset: 0x1634E88 VA: 0x1634E88 Slot: 11
	public override void mcbfStartZoomIn() { }

	// RVA: 0x1634E94 Offset: 0x1634E94 VA: 0x1634E94 Slot: 12
	public override void SetDisp(bool is_disp) { }

	// RVA: 0x1634820 Offset: 0x1634820 VA: 0x1634820
	public BaseCore.STATE GetState() { }

	// RVA: 0x163471C Offset: 0x163471C VA: 0x163471C
	public void SetState(BaseCore.STATE state) { }

	// RVA: 0x1634EFC Offset: 0x1634EFC VA: 0x1634EFC
	private static void .cctor() { }
}

// Namespace: 
private class EarthCore.StateNone : IState<EarthCore> // TypeDefIndex: 10882
{
	// Methods

	// RVA: 0x1CC4598 Offset: 0x1CC4598 VA: 0x1CC4598
	public void .ctor() { }

	// RVA: 0x1CC45A0 Offset: 0x1CC45A0 VA: 0x1CC45A0 Slot: 4
	public void begin(EarthCore that) { }

	// RVA: 0x1CC45A4 Offset: 0x1CC45A4 VA: 0x1CC45A4 Slot: 5
	public void update(EarthCore that) { }

	// RVA: 0x1CC45A8 Offset: 0x1CC45A8 VA: 0x1CC45A8 Slot: 6
	public void end(EarthCore that) { }
}

// Namespace: 
public class EarthCore.StateMain : IState<EarthCore> // TypeDefIndex: 10883
{
	// Fields
	private float mInertialSpd; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCE7260 Offset: 0xCE7260 VA: 0xCE7260
	[DebuggerBrowsableAttribute] // RVA: 0xCE7260 Offset: 0xCE7260 VA: 0xCE7260
	private float <InertialSpdOld>k__BackingField; // 0x14

	// Properties
	public float InertialSpd { get; }
	public float InertialSpdOld { get; set; }

	// Methods

	// RVA: 0x16343AC Offset: 0x16343AC VA: 0x16343AC
	public void .ctor() { }

	// RVA: 0x16348D4 Offset: 0x16348D4 VA: 0x16348D4
	public float get_InertialSpd() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F69C Offset: 0xD3F69C VA: 0xD3F69C
	// RVA: 0x1634910 Offset: 0x1634910 VA: 0x1634910
	public float get_InertialSpdOld() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F6AC Offset: 0xD3F6AC VA: 0xD3F6AC
	// RVA: 0x16348DC Offset: 0x16348DC VA: 0x16348DC
	public void set_InertialSpdOld(float value) { }

	// RVA: 0x1634FD0 Offset: 0x1634FD0 VA: 0x1634FD0 Slot: 4
	public void begin(EarthCore that) { }

	// RVA: 0x1634FD8 Offset: 0x1634FD8 VA: 0x1634FD8 Slot: 5
	public void update(EarthCore that) { }

	// RVA: 0x1635364 Offset: 0x1635364 VA: 0x1635364 Slot: 6
	public void end(EarthCore that) { }
}

// Namespace: 
private class EarthCore.StateZoomIn : IState<EarthCore> // TypeDefIndex: 10884
{
	// Fields
	private EarthCore mThat; // 0x10
	private float mStartTime; // 0x18
	private float mSpdTime; // 0x1C

	// Methods

	// RVA: 0x1CC45AC Offset: 0x1CC45AC VA: 0x1CC45AC
	public void .ctor() { }

	// RVA: 0x1CC45B4 Offset: 0x1CC45B4 VA: 0x1CC45B4 Slot: 4
	public void begin(EarthCore that) { }

	// RVA: 0x1CC4D10 Offset: 0x1CC4D10 VA: 0x1CC4D10 Slot: 5
	public void update(EarthCore that) { }

	// RVA: 0x1CC4DFC Offset: 0x1CC4DFC VA: 0x1CC4DFC Slot: 6
	public void end(EarthCore that) { }

	// RVA: 0x1CC4BC0 Offset: 0x1CC4BC0 VA: 0x1CC4BC0
	private void GoNext() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB17E0 Offset: 0xCB17E0 VA: 0xCB17E0
private sealed class EarthCore.StateZoomIn.<begin>c__AnonStorey0 // TypeDefIndex: 10885
{
	// Fields
	internal EasingObject eo; // 0x10
	internal Quaternion qua_from; // 0x18
	internal Quaternion qua_to; // 0x28
	internal EarthCore that; // 0x38
	internal Quaternion root_qua_from; // 0x40
	internal Quaternion root_qua_to; // 0x50
	internal Vector3 root_pos_from; // 0x60
	internal Vector3 root_pos_to; // 0x6C
	internal Vector3 root_scl_from; // 0x78
	internal Vector3 root_scl_to; // 0x84
	internal EarthCore.StateZoomIn $this; // 0x90

	// Methods

	// RVA: 0x1CC4BB8 Offset: 0x1CC4BB8 VA: 0x1CC4BB8
	public void .ctor() { }

	// RVA: 0x1CC4E00 Offset: 0x1CC4E00 VA: 0x1CC4E00
	internal void <>m__0() { }

	// RVA: 0x1CC5148 Offset: 0x1CC5148 VA: 0x1CC5148
	internal void <>m__1() { }
}

// Namespace: 
private class EarthCore.StateZoomOut : IState<EarthCore> // TypeDefIndex: 10886
{
	// Fields
	private EarthCore mThat; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCE729C Offset: 0xCE729C VA: 0xCE729C
	private static Action <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1CC535C Offset: 0x1CC535C VA: 0x1CC535C
	public void .ctor() { }

	// RVA: 0x1CC5364 Offset: 0x1CC5364 VA: 0x1CC5364 Slot: 4
	public void begin(EarthCore that) { }

	// RVA: 0x1CC5AE0 Offset: 0x1CC5AE0 VA: 0x1CC5AE0 Slot: 5
	public void update(EarthCore that) { }

	// RVA: 0x1CC5AE4 Offset: 0x1CC5AE4 VA: 0x1CC5AE4 Slot: 6
	public void end(EarthCore that) { }

	// RVA: 0x1CC598C Offset: 0x1CC598C VA: 0x1CC598C
	private void GoNext() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F6BC Offset: 0xD3F6BC VA: 0xD3F6BC
	// RVA: 0x1CC5AE8 Offset: 0x1CC5AE8 VA: 0x1CC5AE8
	private static void <begin>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB17F0 Offset: 0xCB17F0 VA: 0xCB17F0
private sealed class EarthCore.StateZoomOut.<begin>c__AnonStorey0 // TypeDefIndex: 10887
{
	// Fields
	internal EasingObject eo; // 0x10
	internal Quaternion qua_to; // 0x18
	internal Quaternion qua_from; // 0x28
	internal EarthCore that; // 0x38
	internal Quaternion root_qua_to; // 0x40
	internal Quaternion root_qua_from; // 0x50
	internal Vector3 root_pos_to; // 0x60
	internal Vector3 root_pos_from; // 0x6C
	internal Vector3 root_scl_to; // 0x78
	internal Vector3 root_scl_from; // 0x84
	internal EarthCore.StateZoomOut $this; // 0x90

	// Methods

	// RVA: 0x1CC5984 Offset: 0x1CC5984 VA: 0x1CC5984
	public void .ctor() { }

	// RVA: 0x1CC5AEC Offset: 0x1CC5AEC VA: 0x1CC5AEC
	internal void <>m__0() { }

	// RVA: 0x1CC5E2C Offset: 0x1CC5E2C VA: 0x1CC5E2C
	internal void <>m__1() { }
}

// Namespace: 
public class EarthPoint : BaseEarthPoint // TypeDefIndex: 10888
{
	// Fields
	private const string EFFECT_NAME = "ef_difference11";
	private static readonly Vector3 FORWARD_VEC; // 0x0

	// Methods

	// RVA: 0x1CC5FDC Offset: 0x1CC5FDC VA: 0x1CC5FDC
	public void .ctor() { }

	// RVA: 0x1CC6044 Offset: 0x1CC6044 VA: 0x1CC6044 Slot: 4
	protected override void LateUpdate() { }

	// RVA: 0x1CC649C Offset: 0x1CC649C VA: 0x1CC649C Slot: 5
	protected override string GetEffectName() { }

	// RVA: 0x1CC64E4 Offset: 0x1CC64E4 VA: 0x1CC64E4
	private static void .cctor() { }
}

// Namespace: 
public class EventBannerWindow : BaseDialog // TypeDefIndex: 10889
{
	// Fields
	public static readonly int OPEN_POSSIBLE_COUNT; // 0x0
	public static readonly float SCROLL_ITEM_Y_INTERVAL; // 0x4
	[SerializeField] // RVA: 0xCE72AC Offset: 0xCE72AC VA: 0xCE72AC
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xCE72BC Offset: 0xCE72BC VA: 0xCE72BC
	protected UILabel titleDetailLabel; // 0x60
	[SerializeField] // RVA: 0xCE72CC Offset: 0xCE72CC VA: 0xCE72CC
	protected GameObject scrollItemPrefab; // 0x68
	[SerializeField] // RVA: 0xCE72DC Offset: 0xCE72DC VA: 0xCE72DC
	protected UIGrid grid; // 0x70
	[SerializeField] // RVA: 0xCE72EC Offset: 0xCE72EC VA: 0xCE72EC
	protected UIButton closeBtn; // 0x78
	[SerializeField] // RVA: 0xCE72FC Offset: 0xCE72FC VA: 0xCE72FC
	protected UIScrollView scrollView; // 0x80
	private List<EventBannerWindowScrollItem> mScrollItems; // 0x88
	private int mNowEventId; // 0x90
	[CompilerGeneratedAttribute] // RVA: 0xCE730C Offset: 0xCE730C VA: 0xCE730C
	private static Action <>f__am$cache0; // 0x8

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1D1D0D8 Offset: 0x1D1D0D8 VA: 0x1D1D0D8
	public void .ctor() { }

	// RVA: 0x1D1D168 Offset: 0x1D1D168 VA: 0x1D1D168
	public void Setup(List<TitleInfoControl.EventEndTimeInfo> ev_end_time_infs) { }

	// RVA: 0x1D1D9FC Offset: 0x1D1D9FC VA: 0x1D1D9FC
	public void Open(Action end_act) { }

	// RVA: 0x1D1DA3C Offset: 0x1D1DA3C VA: 0x1D1DA3C
	public int GetNowEventId() { }

	// RVA: 0x1D1DAF0 Offset: 0x1D1DAF0 VA: 0x1D1DAF0
	public void OnClickClose() { }

	// RVA: 0x1D1DC1C Offset: 0x1D1DC1C VA: 0x1D1DC1C Slot: 6
	protected override string get_closeBtnPath() { }

	// RVA: 0x1D1DC64 Offset: 0x1D1DC64 VA: 0x1D1DC64
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F6CC Offset: 0xD3F6CC VA: 0xD3F6CC
	// RVA: 0x1D1DCC8 Offset: 0x1D1DCC8 VA: 0x1D1DCC8
	private static void <OnClickClose>m__0() { }
}

// Namespace: 
public class EventBannerWindowScrollItem : MonoBehaviour // TypeDefIndex: 10890
{
	// Fields
	public static readonly string DEFAULT_SP_NAME; // 0x0
	[SerializeField] // RVA: 0xCE731C Offset: 0xCE731C VA: 0xCE731C
	private UISprite mBannerSp; // 0x18
	[SerializeField] // RVA: 0xCE732C Offset: 0xCE732C VA: 0xCE732C
	private UIAtlas mCommonAtlas; // 0x20
	[SerializeField] // RVA: 0xCE733C Offset: 0xCE733C VA: 0xCE733C
	private UILabel condMessageLabel; // 0x28
	[SerializeField] // RVA: 0xCE734C Offset: 0xCE734C VA: 0xCE734C
	private NoticeNumberComponent noticeNumberPrefab; // 0x30
	[SerializeField] // RVA: 0xCE735C Offset: 0xCE735C VA: 0xCE735C
	private GameObject noticeNumberRoot; // 0x38
	private NoticeNumberComponent mNoticeNumber; // 0x40
	private TitleInfoControl.EventEndTimeInfo mEventEndTimeInfo; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xCE736C Offset: 0xCE736C VA: 0xCE736C
	private static Action <>f__am$cache0; // 0x8

	// Methods

	// RVA: 0x1D1DCCC Offset: 0x1D1DCCC VA: 0x1D1DCCC
	public void .ctor() { }

	// RVA: 0x1D1D5E4 Offset: 0x1D1D5E4 VA: 0x1D1D5E4
	public void Setup(TitleInfoControl.EventEndTimeInfo ev_end_time_inf) { }

	// RVA: 0x1D1DEC4 Offset: 0x1D1DEC4 VA: 0x1D1DEC4
	public void OnClickItem() { }

	// RVA: 0x1D1DCD4 Offset: 0x1D1DCD4 VA: 0x1D1DCD4
	private bool IsGrayOut() { }

	// RVA: 0x1D1E4AC Offset: 0x1D1E4AC VA: 0x1D1E4AC
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F6DC Offset: 0xD3F6DC VA: 0xD3F6DC
	// RVA: 0x1D1E508 Offset: 0x1D1E508 VA: 0x1D1E508
	private static void <OnClickItem>m__0() { }
}

// Namespace: 
public abstract class EventMapManagerBase : MonoBehaviour, EventMapManagerInterface // TypeDefIndex: 10891
{
	// Fields
	protected MapControl.MapInfo mapInfo; // 0x18
	protected MapControl.WarInfo warInfo; // 0x20
	protected ScrTerminalMap terminalMap; // 0x28
	protected MapCamera mapCamera; // 0x30
	protected GameObject rootRoadP; // 0x38
	protected GameObject rootSpotP; // 0x40
	protected GameObject rootPathP; // 0x48
	protected GameObject rootGimmickP; // 0x50
	protected GameObject rootEffectP; // 0x58
	private int touchBlockNum; // 0x60
	private int cameraWorkBlockNum; // 0x64

	// Methods

	// RVA: 0x1B7C63C Offset: 0x1B7C63C VA: 0x1B7C63C
	protected void .ctor() { }

	// RVA: 0x1B7C644 Offset: 0x1B7C644 VA: 0x1B7C644 Slot: 16
	public virtual void SetTerminalMapInfo(ScrTerminalMap terminalMap, MapControl.MapInfo mapInfo, MapControl.WarInfo warInfo, MapCamera mapCamera, GameObject rootEffectP, GameObject rootGimmickP, GameObject rootPathP, GameObject rootRoadP, GameObject rootSpotP) { }

	// RVA: 0x1B7C660 Offset: 0x1B7C660 VA: 0x1B7C660 Slot: 17
	public virtual void Initialize() { }

	// RVA: 0x1B7C664 Offset: 0x1B7C664 VA: 0x1B7C664 Slot: 18
	public virtual void LoadAssets(Action finishCallback) { }

	// RVA: 0x1B7C670 Offset: 0x1B7C670 VA: 0x1B7C670 Slot: 19
	public virtual void ExtractMapObjectFromAssetData(AssetData assetData) { }

	// RVA: 0x1B7C674 Offset: 0x1B7C674 VA: 0x1B7C674 Slot: 20
	public virtual void OnAfterSpotCreated(Action finishCallback) { }

	// RVA: 0x1B7C680 Offset: 0x1B7C680 VA: 0x1B7C680 Slot: 21
	public virtual bool IsShowQuestListWhenComingBackToMap() { }

	// RVA: 0x1B7C688 Offset: 0x1B7C688 VA: 0x1B7C688 Slot: 22
	public virtual void OnBeforeQuestAfterAction(Action finishCallback) { }

	// RVA: 0x1B7C694 Offset: 0x1B7C694 VA: 0x1B7C694 Slot: 23
	public virtual void OnAfterQuestAfterAction(Action finishCallback) { }

	// RVA: 0x1B7C6A0 Offset: 0x1B7C6A0 VA: 0x1B7C6A0 Slot: 24
	public virtual void OnEveryActionEnd() { }

	// RVA: 0x1B7C6A4 Offset: 0x1B7C6A4 VA: 0x1B7C6A4 Slot: 25
	public virtual void DestroyMapObjects() { }

	// RVA: 0x1B7C6A8 Offset: 0x1B7C6A8 VA: 0x1B7C6A8 Slot: 26
	public virtual void ReleaseAssets() { }

	// RVA: 0x1B7C6AC Offset: 0x1B7C6AC VA: 0x1B7C6AC Slot: 27
	public virtual void Finish() { }

	// RVA: 0x1B7C700 Offset: 0x1B7C700 VA: 0x1B7C700 Slot: 28
	protected virtual void SetAllTouchBlock(bool value) { }

	// RVA: 0x1B7C7EC Offset: 0x1B7C7EC VA: 0x1B7C7EC Slot: 29
	protected virtual void SetCameraWorkBlock(bool value) { }

	// RVA: 0x1B7C8FC Offset: 0x1B7C8FC VA: 0x1B7C8FC Slot: 30
	protected virtual void AllTouchBlockForceFalse() { }

	// RVA: 0x1B7C914 Offset: 0x1B7C914 VA: 0x1B7C914
	protected void LocateDialogToUiRoot(BaseDialog dialog) { }
}

// Namespace: 
public static class EventMapManagerFactory // TypeDefIndex: 10892
{
	// Methods

	// RVA: 0x1B7C9D0 Offset: 0x1B7C9D0 VA: 0x1B7C9D0
	public static EventMapManagerInterface AttachToTerminalMap(ScrTerminalMap termialMap, MapControl.MapInfo mapInfo, MapControl.WarInfo warInfo) { }

	// RVA: 0x1B7CBB8 Offset: 0x1B7CBB8 VA: 0x1B7CBB8
	public static void DetachFromTerminalMap(ScrTerminalMap termialMap) { }
}

// Namespace: 
public class EventMapManagerIdle : EventMapManagerInterface // TypeDefIndex: 10893
{
	// Methods

	// RVA: 0x1B7CBB0 Offset: 0x1B7CBB0 VA: 0x1B7CBB0
	public void .ctor() { }

	// RVA: 0x1B7CC1C Offset: 0x1B7CC1C VA: 0x1B7CC1C Slot: 16
	public virtual void SetTerminalMapInfo(ScrTerminalMap terminalMap, MapControl.MapInfo mapInfo, MapControl.WarInfo warInfo, MapCamera mapCamera, GameObject rootEffectP, GameObject rootGimmickP, GameObject rootPathP, GameObject rootRoadP, GameObject rootSpotP) { }

	// RVA: 0x1B7CC20 Offset: 0x1B7CC20 VA: 0x1B7CC20 Slot: 5
	public void Initialize() { }

	// RVA: 0x1B7CC24 Offset: 0x1B7CC24 VA: 0x1B7CC24 Slot: 6
	public void LoadAssets(Action finishCallback) { }

	// RVA: 0x1B7CC30 Offset: 0x1B7CC30 VA: 0x1B7CC30 Slot: 7
	public void ExtractMapObjectFromAssetData(AssetData assetData) { }

	// RVA: 0x1B7CC34 Offset: 0x1B7CC34 VA: 0x1B7CC34 Slot: 8
	public void OnAfterSpotCreated(Action finishCallback) { }

	// RVA: 0x1B7CC40 Offset: 0x1B7CC40 VA: 0x1B7CC40 Slot: 9
	public bool IsShowQuestListWhenComingBackToMap() { }

	// RVA: 0x1B7CC48 Offset: 0x1B7CC48 VA: 0x1B7CC48 Slot: 17
	public virtual bool HasSelfQuestAfterAction() { }

	// RVA: 0x1B7CC50 Offset: 0x1B7CC50 VA: 0x1B7CC50 Slot: 18
	public virtual void OnBeforeQuestAfterAction(Action finishCallback) { }

	// RVA: 0x1B7CC5C Offset: 0x1B7CC5C VA: 0x1B7CC5C Slot: 19
	public virtual void OnAfterQuestAfterAction(Action finishCallback) { }

	// RVA: 0x1B7CC68 Offset: 0x1B7CC68 VA: 0x1B7CC68 Slot: 12
	public void OnEveryActionEnd() { }

	// RVA: 0x1B7CC6C Offset: 0x1B7CC6C VA: 0x1B7CC6C Slot: 14
	public void DestroyMapObjects() { }

	// RVA: 0x1B7CC70 Offset: 0x1B7CC70 VA: 0x1B7CC70 Slot: 13
	public void ReleaseAssets() { }

	// RVA: 0x1B7CC74 Offset: 0x1B7CC74 VA: 0x1B7CC74 Slot: 15
	public void Finish() { }
}

// Namespace: 
public interface EventMapManagerInterface // TypeDefIndex: 10894
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void SetTerminalMapInfo(ScrTerminalMap terminalMap, MapControl.MapInfo mapInfo, MapControl.WarInfo warInfo, MapCamera mapCamera, GameObject rootEffectP, GameObject rootGimmickP, GameObject rootPathP, GameObject rootRoadP, GameObject rootSpotP);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void Initialize();

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void LoadAssets(Action finishCallback);

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void ExtractMapObjectFromAssetData(AssetData assetData);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void OnAfterSpotCreated(Action finishCallback);

	// RVA: -1 Offset: -1 Slot: 5
	public abstract bool IsShowQuestListWhenComingBackToMap();

	// RVA: -1 Offset: -1 Slot: 6
	public abstract void OnBeforeQuestAfterAction(Action finishCallback);

	// RVA: -1 Offset: -1 Slot: 7
	public abstract void OnAfterQuestAfterAction(Action finishCallback);

	// RVA: -1 Offset: -1 Slot: 8
	public abstract void OnEveryActionEnd();

	// RVA: -1 Offset: -1 Slot: 9
	public abstract void ReleaseAssets();

	// RVA: -1 Offset: -1 Slot: 10
	public abstract void DestroyMapObjects();

	// RVA: -1 Offset: -1 Slot: 11
	public abstract void Finish();
}

// Namespace: 
public class Submarine2DUILocationInfo : Base2DUILocationInfo // TypeDefIndex: 10895
{
	// Methods

	// RVA: 0x1D0C990 Offset: 0x1D0C990 VA: 0x1D0C990
	public void .ctor() { }

	// RVA: 0x1D0CBDC Offset: 0x1D0CBDC VA: 0x1D0CBDC Slot: 8
	protected virtual Rect GetScanDialogRect() { }

	// RVA: 0x1D0CC00 Offset: 0x1D0CC00 VA: 0x1D0CC00 Slot: 9
	protected virtual Rect GetStorageRect() { }
}

// Namespace: 
public class SubmarineScanDialogUpsideLocationInfo : Submarine2DUILocationInfo // TypeDefIndex: 10896
{
	// Methods

	// RVA: 0x16F8C44 Offset: 0x16F8C44 VA: 0x16F8C44
	public void .ctor() { }

	// RVA: 0x16F8C4C Offset: 0x16F8C4C VA: 0x16F8C4C Slot: 8
	protected override Rect GetScanDialogRect() { }
}

// Namespace: 
public class SubmarinScanDialogUpSideWeakLocationInfo : SubmarineScanDialogUpsideLocationInfo // TypeDefIndex: 10897
{
	// Methods

	// RVA: 0x1D0C948 Offset: 0x1D0C948 VA: 0x1D0C948
	public void .ctor() { }

	// RVA: 0x1D0C950 Offset: 0x1D0C950 VA: 0x1D0C950 Slot: 7
	protected override Rect GetMasterIconSurroundsRect() { }

	// RVA: 0x1D0C970 Offset: 0x1D0C970 VA: 0x1D0C970 Slot: 6
	protected override Rect GetMapChangeButtonRect() { }
}

// Namespace: 
public static class ClosePanelTextureUtil // TypeDefIndex: 10898
{
	// Methods

	// RVA: 0x1F2C9C4 Offset: 0x1F2C9C4 VA: 0x1F2C9C4
	public static ObjectDomain[] CreateNeverOpenSurroundsDomains(SubmarinePanelPositionCalculator positionCalculator, Texture2D closedPanelTexture) { }

	// RVA: 0x1F2D0F0 Offset: 0x1F2D0F0 VA: 0x1F2D0F0
	public static ObjectDomain CreatePanelOccupiedTotalDomain(SubmarinePanelPositionCalculator positionCalculator, Texture2D closedPanelTexture) { }

	// RVA: 0x1F2D260 Offset: 0x1F2D260 VA: 0x1F2D260
	public static ObjectDomain CreateClosedPanelDomain(Vector3 pos, SubmarinePanelPositionCalculator positionCalculator) { }

	// RVA: 0x1F2D394 Offset: 0x1F2D394 VA: 0x1F2D394
	public static Texture2D ExtractCutTextureFromObjectDomain(ObjectDomain objDomain, SubmarinePanelPositionCalculator positionCalculator, Texture2D closedPanelTexture) { }

	// RVA: 0x1F2D648 Offset: 0x1F2D648 VA: 0x1F2D648
	public static Texture2D CreateDomainSubtractTexture(ObjectDomain objDomain, int[] excludePanelUniqueIds, SubmarinePanelPositionCalculator positionCalculator, Texture2D closedPanelTexture) { }

	// RVA: 0x1F2DAA4 Offset: 0x1F2DAA4 VA: 0x1F2DAA4
	public static Texture2D CreateResizedTexture2D(Texture2D baseTexture, int resizeWidth, int resizeHeight) { }

	// RVA: 0x1F2DC48 Offset: 0x1F2DC48 VA: 0x1F2DC48
	public static Texture2D CreateDarkTexture2D(Texture2D baseTexture, float darkRate) { }
}

// Namespace: 
public class SubmarineEffectScannablePanelComponent : MonoBehaviour // TypeDefIndex: 10899
{
	// Methods

	// RVA: 0x1D0E4A8 Offset: 0x1D0E4A8 VA: 0x1D0E4A8
	public void .ctor() { }
}

// Namespace: 
public class SubmarineEffectScanObstaclePanelComponent : MonoBehaviour // TypeDefIndex: 10900
{
	// Methods

	// RVA: 0x1D0E4A0 Offset: 0x1D0E4A0 VA: 0x1D0E4A0
	public void .ctor() { }
}

// Namespace: 
public class SubmarineEffectSelectedPanelComponent : MonoBehaviour // TypeDefIndex: 10901
{
	// Methods

	// RVA: 0x1D0E4B0 Offset: 0x1D0E4B0 VA: 0x1D0E4B0
	public void .ctor() { }
}

// Namespace: 
public class SubmarineMapPanelComponent : MonoBehaviour // TypeDefIndex: 10902
{
	// Fields
	[SerializeField] // RVA: 0xCE737C Offset: 0xCE737C VA: 0xCE737C
	private GameObject closedPanel; // 0x18
	[SerializeField] // RVA: 0xCE738C Offset: 0xCE738C VA: 0xCE738C
	private UIButton button; // 0x20
	private SimpleAnimation scannableAnim; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCE739C Offset: 0xCE739C VA: 0xCE739C
	[DebuggerBrowsableAttribute] // RVA: 0xCE739C Offset: 0xCE739C VA: 0xCE739C
	private Action <OnClickPanel>k__BackingField; // 0x30

	// Properties
	public Action OnClickPanel { get; set; }

	// Methods

	// RVA: 0x16F58F0 Offset: 0x16F58F0 VA: 0x16F58F0
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F6EC Offset: 0xD3F6EC VA: 0xD3F6EC
	// RVA: 0x16F58F8 Offset: 0x16F58F8 VA: 0x16F58F8
	public Action get_OnClickPanel() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F6FC Offset: 0xD3F6FC VA: 0xD3F6FC
	// RVA: 0x16F5900 Offset: 0x16F5900 VA: 0x16F5900
	public void set_OnClickPanel(Action value) { }

	// RVA: 0x16F5908 Offset: 0x16F5908 VA: 0x16F5908
	public void Initialize() { }

	// RVA: 0x16F5910 Offset: 0x16F5910 VA: 0x16F5910
	public void ClickPanel() { }

	// RVA: 0x16F5924 Offset: 0x16F5924 VA: 0x16F5924
	public void SetClosedPanelVisible(bool value) { }

	// RVA: 0x16F59D4 Offset: 0x16F59D4 VA: 0x16F59D4
	public void SetSize(ObjectDomain objDomain) { }

	// RVA: 0x16F5A4C Offset: 0x16F5A4C VA: 0x16F5A4C
	public void SetSize(float width, float height) { }

	// RVA: 0x16F5B40 Offset: 0x16F5B40 VA: 0x16F5B40
	public void SetClosedPanelTexture(ObjectDomain objDomain, Texture2D texture) { }

	// RVA: 0x16F5DE0 Offset: 0x16F5DE0 VA: 0x16F5DE0
	public void ShowOpenPanelAnim() { }

	// RVA: 0x16F5F3C Offset: 0x16F5F3C VA: 0x16F5F3C
	private void OnPanelFadeOutFinished() { }
}

// Namespace: 
public class SubmarineScannerComponent : MonoBehaviour // TypeDefIndex: 10903
{
	// Fields
	private static readonly float DEFAULT_JUMP_DURATION; // 0x0
	private static readonly float DEFAULT_JUMP_START_TIME; // 0x4
	private static readonly float DEFAULT_SELECTED_PANEL_EFFECT_FINISH_TIME; // 0x8
	private static readonly int[] ANIM_CHANGE_DIST_BORDERS; // 0x10
	private SimpleAnimation mAnimation; // 0x18
	private SimpleAnimation.EditorState state; // 0x20

	// Properties
	public SimpleAnimation AnimationComponent { get; }
	public string AnimName { get; }
	public AnimationClip AnimClip { get; }

	// Methods

	// RVA: 0x16F9014 Offset: 0x16F9014 VA: 0x16F9014
	public void .ctor() { }

	// RVA: 0x16F901C Offset: 0x16F901C VA: 0x16F901C
	public SimpleAnimation get_AnimationComponent() { }

	// RVA: 0x16F90B4 Offset: 0x16F90B4 VA: 0x16F90B4
	public string get_AnimName() { }

	// RVA: 0x16F9130 Offset: 0x16F9130 VA: 0x16F9130
	public AnimationClip get_AnimClip() { }

	// RVA: 0x16F9148 Offset: 0x16F9148 VA: 0x16F9148
	public void Initialize(float dist) { }

	// RVA: 0x16F9400 Offset: 0x16F9400 VA: 0x16F9400
	public bool IsAnimationPrepared() { }

	// RVA: 0x16F914C Offset: 0x16F914C VA: 0x16F914C
	private void PrepareAnimation(float dist) { }

	// RVA: 0x16F9410 Offset: 0x16F9410 VA: 0x16F9410
	private int GetDistIndex(float dist) { }

	// RVA: 0x16F952C Offset: 0x16F952C VA: 0x16F952C
	public float GetJumpDuration() { }

	// RVA: 0x16F9778 Offset: 0x16F9778 VA: 0x16F9778
	public float GetJumpStartTime() { }

	// RVA: 0x16F97F4 Offset: 0x16F97F4 VA: 0x16F97F4
	public float GetSelectedPanelEffecFinishTime() { }

	// RVA: 0x16F9870 Offset: 0x16F9870 VA: 0x16F9870
	public float GetTimeToStartOpenPanel() { }

	// RVA: 0x16F95E0 Offset: 0x16F95E0 VA: 0x16F95E0
	private float GetEventTimeByFunctionName(string funcName, float defaultValue = 0) { }

	// RVA: 0x16F993C Offset: 0x16F993C VA: 0x16F993C
	private void OnJumpStart() { }

	// RVA: 0x16F9940 Offset: 0x16F9940 VA: 0x16F9940
	private void OnJumpEnd() { }

	// RVA: 0x16F9944 Offset: 0x16F9944 VA: 0x16F9944
	private void OnStartScan() { }

	// RVA: 0x16F9948 Offset: 0x16F9948 VA: 0x16F9948
	private void FinishEffectSelectedPanel() { }

	// RVA: 0x16F994C Offset: 0x16F994C VA: 0x16F994C
	private void StartOpenPanel() { }

	// RVA: 0x16F9950 Offset: 0x16F9950 VA: 0x16F9950
	private static void .cctor() { }
}

// Namespace: 
public class SubmarineScanRangeComponent : MonoBehaviour // TypeDefIndex: 10904
{
	// Methods

	// RVA: 0x16F8E38 Offset: 0x16F8E38 VA: 0x16F8E38
	public void .ctor() { }
}

// Namespace: 
public class SubmarineScanVoiceComponent : MonoBehaviour // TypeDefIndex: 10905
{
	// Fields
	[SerializeField] // RVA: 0xCE73D8 Offset: 0xCE73D8 VA: 0xCE73D8
	private float waitTime; // 0x18
	[SerializeField] // RVA: 0xCE73E8 Offset: 0xCE73E8 VA: 0xCE73E8
	private int svtId; // 0x1C
	[SerializeField] // RVA: 0xCE73F8 Offset: 0xCE73F8 VA: 0xCE73F8
	private string[] vcNameList; // 0x20
	private string vcName; // 0x28
	public string assetName; // 0x30
	private SePlayer sePlayer; // 0x38

	// Methods

	// RVA: 0x16F8E40 Offset: 0x16F8E40 VA: 0x16F8E40
	public void .ctor() { }

	// RVA: 0x16F8E48 Offset: 0x16F8E48 VA: 0x16F8E48
	private void Awake() { }

	// RVA: 0x16F4E5C Offset: 0x16F4E5C VA: 0x16F4E5C
	public void PlayScanVoice() { }

	// RVA: 0x16F8F80 Offset: 0x16F8F80 VA: 0x16F8F80
	private void StopVoice() { }

	// RVA: 0x16F900C Offset: 0x16F900C VA: 0x16F900C
	public float GetWaitTime() { }
}

// Namespace: 
public class SubmarineSilhouetteComponent : MonoBehaviour // TypeDefIndex: 10906
{
	// Fields
	private SimpleAnimation mAnimation; // 0x18

	// Properties
	public SimpleAnimation AnimationComponent { get; }

	// Methods

	// RVA: 0x16FB95C Offset: 0x16FB95C VA: 0x16FB95C
	public void .ctor() { }

	// RVA: 0x16FB964 Offset: 0x16FB964 VA: 0x16FB964
	public SimpleAnimation get_AnimationComponent() { }
}

// Namespace: 
public class ObjectDomain // TypeDefIndex: 10907
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCE7408 Offset: 0xCE7408 VA: 0xCE7408
	[DebuggerBrowsableAttribute] // RVA: 0xCE7408 Offset: 0xCE7408 VA: 0xCE7408
	private float <X>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCE7444 Offset: 0xCE7444 VA: 0xCE7444
	[DebuggerBrowsableAttribute] // RVA: 0xCE7444 Offset: 0xCE7444 VA: 0xCE7444
	private float <Y>k__BackingField; // 0x14
	[CompilerGeneratedAttribute] // RVA: 0xCE7480 Offset: 0xCE7480 VA: 0xCE7480
	[DebuggerBrowsableAttribute] // RVA: 0xCE7480 Offset: 0xCE7480 VA: 0xCE7480
	private float <Width>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCE74BC Offset: 0xCE74BC VA: 0xCE74BC
	[DebuggerBrowsableAttribute] // RVA: 0xCE74BC Offset: 0xCE74BC VA: 0xCE74BC
	private float <Height>k__BackingField; // 0x1C

	// Properties
	public float X { get; set; }
	public float Y { get; set; }
	public float Width { get; set; }
	public float Height { get; set; }
	public Vector3 center { get; }

	// Methods

	// RVA: 0x205915C Offset: 0x205915C VA: 0x205915C
	public void .ctor(float x, float y, float width, float height) { }

	// RVA: 0x20591C8 Offset: 0x20591C8 VA: 0x20591C8
	public void .ctor(ObjectDomain domain) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F70C Offset: 0xD3F70C VA: 0xD3F70C
	// RVA: 0x205925C Offset: 0x205925C VA: 0x205925C
	public float get_X() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F71C Offset: 0xD3F71C VA: 0xD3F71C
	// RVA: 0x20591A8 Offset: 0x20591A8 VA: 0x20591A8
	public void set_X(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F72C Offset: 0xD3F72C VA: 0xD3F72C
	// RVA: 0x2059264 Offset: 0x2059264 VA: 0x2059264
	public float get_Y() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F73C Offset: 0xD3F73C VA: 0xD3F73C
	// RVA: 0x20591B0 Offset: 0x20591B0 VA: 0x20591B0
	public void set_Y(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F74C Offset: 0xD3F74C VA: 0xD3F74C
	// RVA: 0x205926C Offset: 0x205926C VA: 0x205926C
	public float get_Width() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F75C Offset: 0xD3F75C VA: 0xD3F75C
	// RVA: 0x20591B8 Offset: 0x20591B8 VA: 0x20591B8
	public void set_Width(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F76C Offset: 0xD3F76C VA: 0xD3F76C
	// RVA: 0x2059274 Offset: 0x2059274 VA: 0x2059274
	public float get_Height() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F77C Offset: 0xD3F77C VA: 0xD3F77C
	// RVA: 0x20591C0 Offset: 0x20591C0 VA: 0x20591C0
	public void set_Height(float value) { }

	// RVA: 0x205927C Offset: 0x205927C VA: 0x205927C
	public Vector3 get_center() { }
}

// Namespace: 
public static class PanelUniqueIDUtil // TypeDefIndex: 10908
{
	// Fields
	private static readonly int V_INDEX_SHIFT; // 0x0

	// Methods

	// RVA: 0x179BA78 Offset: 0x179BA78 VA: 0x179BA78
	public static int GetID(int hIndex, int vIndex) { }

