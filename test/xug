
	// RVA: 0x14F1028 Offset: 0x14F1028 VA: 0x14F1028
	public List<SupportServantListViewObject> get_ObjectList() { }

	// RVA: 0x14F11F4 Offset: 0x14F11F4 VA: 0x14F11F4
	public List<SupportServantListViewObject> get_ClippingObjectList() { }

	// RVA: 0x14F14D4 Offset: 0x14F14D4 VA: 0x14F14D4
	public void ModifyItem() { }

	// RVA: 0x14F16D0 Offset: 0x14F16D0 VA: 0x14F16D0
	public void CreateList(SupportServantData[] supportServantData, int nowDeckNum, int classPos, EventUpValSetupInfo eventSetupInfo, int nowDeckId, int[] fixMainDeckIds, int[] fixEventDeckIds) { }

	// RVA: 0x14F20D0 Offset: 0x14F20D0 VA: 0x14F20D0
	public void ModifyList(bool isIconSizeChange = False) { }

	// RVA: 0x14F2498 Offset: 0x14F2498 VA: 0x14F2498
	public void DestroyList() { }

	// RVA: 0x14F2670 Offset: 0x14F2670 VA: 0x14F2670
	public SupportServantListViewItem GetItem(int index) { }

	// RVA: 0x14F2718 Offset: 0x14F2718 VA: 0x14F2718 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x14F2850 Offset: 0x14F2850 VA: 0x14F2850
	private void ResetEventCampaignListViewObjects() { }

	// RVA: 0x14F2A3C Offset: 0x14F2A3C VA: 0x14F2A3C
	private void ResetEventCampaignListViewObjectsStart() { }

	// RVA: 0x14F2C24 Offset: 0x14F2C24 VA: 0x14F2C24
	public void SetMode(SupportServantListViewManager.InitMode mode, SupportServantListViewManager.CallbackFunc callback) { }

	// RVA: 0x14F2CB0 Offset: 0x14F2CB0 VA: 0x14F2CB0
	public void SetMode(SupportServantListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x14F2C2C Offset: 0x14F2C2C VA: 0x14F2C2C
	public void SetMode(SupportServantListViewManager.InitMode mode) { }

	// RVA: 0x14F2CB8 Offset: 0x14F2CB8 VA: 0x14F2CB8
	protected void RequestListObject(SupportServantListViewObject.InitMode mode, float delay) { }

	// RVA: 0x14F14DC Offset: 0x14F14DC VA: 0x14F14DC
	protected void RequestListObject(SupportServantListViewObject.InitMode mode) { }

	// RVA: 0x14F2FC8 Offset: 0x14F2FC8 VA: 0x14F2FC8
	protected void OnMoveEnd() { }

	// RVA: 0x14F3094 Offset: 0x14F3094 VA: 0x14F3094
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x14F3098 Offset: 0x14F3098 VA: 0x14F3098
	protected void OnClickSelectListView(ListViewObject obj) { }

	// RVA: 0x14F3338 Offset: 0x14F3338 VA: 0x14F3338
	protected void OnLongPushListView(ListViewObject obj) { }

	// RVA: 0x14F34F8 Offset: 0x14F34F8 VA: 0x14F34F8
	protected void EndShowServant(bool isDecide, bool isIndividualityChanged, int questId) { }

	// RVA: 0x14F398C Offset: 0x14F398C VA: 0x14F398C
	protected void EndCloseShowServant() { }

	// RVA: 0x14F3994 Offset: 0x14F3994 VA: 0x14F3994
	protected void EndCloseShowServantQuestJump() { }

	// RVA: 0x14F3A00 Offset: 0x14F3A00 VA: 0x14F3A00
	public void OnClickBonusFilterKind() { }

	// RVA: 0x14F3AD4 Offset: 0x14F3AD4 VA: 0x14F3AD4
	public void OnClickFilterKind() { }

	// RVA: 0x14F3BC8 Offset: 0x14F3BC8 VA: 0x14F3BC8
	public void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x14F3C94 Offset: 0x14F3C94 VA: 0x14F3C94
	protected void EndCloseSelectFilterKind() { }

	// RVA: 0x14F1E60 Offset: 0x14F1E60 VA: 0x14F1E60
	private void SetFilterButtonImage() { }

	// RVA: 0x14F3C98 Offset: 0x14F3C98 VA: 0x14F3C98
	public void OnClickSortKind() { }

	// RVA: 0x14F3D90 Offset: 0x14F3D90 VA: 0x14F3D90
	protected void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x14F3E54 Offset: 0x14F3E54 VA: 0x14F3E54
	protected void EndCloseSelectSortKind() { }

	// RVA: 0x14F3E58 Offset: 0x14F3E58 VA: 0x14F3E58
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x14F3F48 Offset: 0x14F3F48 VA: 0x14F3F48 Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x14EE790 Offset: 0x14EE790 VA: 0x14EE790
	public long GetAmountSortValue(int svtId) { }

	// RVA: 0x14F4254 Offset: 0x14F4254 VA: 0x14F4254
	public bool GetSwapLockList(out long[] lockList, out long[] unlockList) { }

	// RVA: 0x14F453C Offset: 0x14F453C VA: 0x14F453C
	public bool GetSwapChoiceList(out long[] choiceList, out long[] unchoiceList) { }

	// RVA: 0x14F4810 Offset: 0x14F4810 VA: 0x14F4810
	public void setCanLongPushFlag(bool flag) { }

	// RVA: 0x14F481C Offset: 0x14F481C VA: 0x14F481C
	public void ChangeIconScale() { }

	// RVA: 0x14F49A4 Offset: 0x14F49A4 VA: 0x14F49A4
	public string GetScaleButtonSpriteName() { }

	// RVA: 0x14F1EF4 Offset: 0x14F1EF4 VA: 0x14F1EF4
	private long GetEventFriendCampaignFinishedAt() { }

	// RVA: 0x14F368C Offset: 0x14F368C VA: 0x14F368C
	public void UpdateItemState(bool isPushMode) { }

	// RVA: 0x14F49DC Offset: 0x14F49DC VA: 0x14F49DC
	private static void .cctor() { }
}

// Namespace: 
public enum SupportServantListViewManager.InitMode // TypeDefIndex: 10871
{
	// Fields
	public int value__; // 0x0
	public const SupportServantListViewManager.InitMode NONE = 0;
	public const SupportServantListViewManager.InitMode VALID = 1;
	public const SupportServantListViewManager.InitMode INPUT = 2;
	public const SupportServantListViewManager.InitMode MODIFY = 3;
}

// Namespace: 
public enum SupportServantListViewManager.ResultKind // TypeDefIndex: 10872
{
	// Fields
	public int value__; // 0x0
	public const SupportServantListViewManager.ResultKind NONE = 0;
	public const SupportServantListViewManager.ResultKind CANCEL = 1;
	public const SupportServantListViewManager.ResultKind DECIDE = 2;
}

// Namespace: 
public sealed class SupportServantListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 10873
{
	// Methods

	// RVA: 0x14F4A98 Offset: 0x14F4A98 VA: 0x14F4A98
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x14F30F4 Offset: 0x14F30F4 VA: 0x14F30F4 Slot: 11
	public virtual void Invoke(SupportServantListViewManager.ResultKind kind, int result) { }

	// RVA: 0x14F4AA8 Offset: 0x14F4AA8 VA: 0x14F4AA8 Slot: 12
	public virtual IAsyncResult BeginInvoke(SupportServantListViewManager.ResultKind kind, int result, AsyncCallback callback, object object) { }

	// RVA: 0x14F4B50 Offset: 0x14F4B50 VA: 0x14F4B50 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SupportServantListViewObject : ListViewObject // TypeDefIndex: 10874
{
	// Fields
	protected SupportServantListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC7A4B0 Offset: 0xC7A4B0 VA: 0xC7A4B0
	[DebuggerBrowsableAttribute] // RVA: 0xC7A4B0 Offset: 0xC7A4B0 VA: 0xC7A4B0
	private Action callbackFunc; // 0x70
	protected SupportServantListViewItemDraw itemDraw; // 0x78
	protected SupportServantListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x14F4B5C Offset: 0x14F4B5C VA: 0x14F4B5C
	public void .ctor() { }

	// RVA: 0x14F4BC4 Offset: 0x14F4BC4 VA: 0x14F4BC4
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x14F4CB0 Offset: 0x14F4CB0 VA: 0x14F4CB0
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x14F4D9C Offset: 0x14F4D9C VA: 0x14F4D9C
	protected void Awake() { }

	// RVA: 0x14F4E10 Offset: 0x14F4E10 VA: 0x14F4E10
	private void OnDestroy() { }

	// RVA: 0x14F1450 Offset: 0x14F1450 VA: 0x14F1450
	public SupportServantListViewItem GetItem() { }

	// RVA: 0x14F4EBC Offset: 0x14F4EBC VA: 0x14F4EBC Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x14F4EEC Offset: 0x14F4EEC VA: 0x14F4EEC Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x14F4EE4 Offset: 0x14F4EE4 VA: 0x14F4EE4
	protected void InitItem() { }

	// RVA: 0x14F4F14 Offset: 0x14F4F14 VA: 0x14F4F14 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x14F5018 Offset: 0x14F5018 VA: 0x14F5018 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x14F50A0 Offset: 0x14F50A0 VA: 0x14F50A0
	public void Init(SupportServantListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x14F2EC0 Offset: 0x14F2EC0 VA: 0x14F2EC0
	public void Init(SupportServantListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x14F2F44 Offset: 0x14F2F44 VA: 0x14F2F44
	public void Init(SupportServantListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x14F27D0 Offset: 0x14F27D0 VA: 0x14F27D0
	public void Init(SupportServantListViewObject.InitMode initMode) { }

	// RVA: 0x14F52BC Offset: 0x14F52BC VA: 0x14F52BC
	protected void SetupDisp() { }

	// RVA: 0x14F2A38 Offset: 0x14F2A38 VA: 0x14F2A38
	public void ResetEventCampaign() { }

	// RVA: 0x14F53CC Offset: 0x14F53CC VA: 0x14F53CC
	protected void EventMoveEnd() { }

	// RVA: 0x14F53F4 Offset: 0x14F53F4 VA: 0x14F53F4
	public void OnLongPush() { }

	// RVA: 0x14F547C Offset: 0x14F547C VA: 0x14F547C
	public void OnClickItem() { }
}

// Namespace: 
public enum SupportServantListViewObject.InitMode // TypeDefIndex: 10875
{
	// Fields
	public int value__; // 0x0
	public const SupportServantListViewObject.InitMode INVISIBLE = 0;
	public const SupportServantListViewObject.InitMode INVALID = 1;
	public const SupportServantListViewObject.InitMode VALID = 2;
	public const SupportServantListViewObject.InitMode INPUT = 3;
	public const SupportServantListViewObject.InitMode MODIFY = 4;
	public const SupportServantListViewObject.InitMode TUTORIAL_INPUT = 5;
}

// Namespace: 
protected enum SupportServantListViewObject.State // TypeDefIndex: 10876
{
	// Fields
	public int value__; // 0x0
	public const SupportServantListViewObject.State INIT = 0;
	public const SupportServantListViewObject.State IDLE = 1;
	public const SupportServantListViewObject.State MOVE = 2;
	public const SupportServantListViewObject.State INPUT = 3;
	public const SupportServantListViewObject.State TUTORIAL_INPUT = 4;
}

// Namespace: 
public class SupportServantSelectMenu : BaseMenu // TypeDefIndex: 10877
{
	// Fields
	[SerializeField] // RVA: 0xC7A4EC Offset: 0xC7A4EC VA: 0xC7A4EC
	protected SupportServantListViewManager supportServantListViewManager; // 0x58
	[SerializeField] // RVA: 0xC7A4FC Offset: 0xC7A4FC VA: 0xC7A4FC
	protected TitleInfoControl titleInfo; // 0x60
	[SerializeField] // RVA: 0xC7A50C Offset: 0xC7A50C VA: 0xC7A50C
	protected UILabel explanationLabel; // 0x68
	[SerializeField] // RVA: 0xC7A51C Offset: 0xC7A51C VA: 0xC7A51C
	protected UISprite normalTabSprite; // 0x70
	[SerializeField] // RVA: 0xC7A52C Offset: 0xC7A52C VA: 0xC7A52C
	protected UICommonButton normalTabButton; // 0x78
	[SerializeField] // RVA: 0xC7A53C Offset: 0xC7A53C VA: 0xC7A53C
	protected UISprite lockTabSprite; // 0x80
	[SerializeField] // RVA: 0xC7A54C Offset: 0xC7A54C VA: 0xC7A54C
	protected UICommonButton lockTabButton; // 0x88
	[SerializeField] // RVA: 0xC7A55C Offset: 0xC7A55C VA: 0xC7A55C
	protected UISprite choiceTabSprite; // 0x90
	[SerializeField] // RVA: 0xC7A56C Offset: 0xC7A56C VA: 0xC7A56C
	protected UICommonButton choiceTabButton; // 0x98
	[SerializeField] // RVA: 0xC7A57C Offset: 0xC7A57C VA: 0xC7A57C
	protected UISprite scaleChangeTabSprite; // 0xA0
	[SerializeField] // RVA: 0xC7A58C Offset: 0xC7A58C VA: 0xC7A58C
	protected UICommonButton scaleChangeTabButton; // 0xA8
	[SerializeField] // RVA: 0xC7A59C Offset: 0xC7A59C VA: 0xC7A59C
	protected UISprite bgTxtSprite; // 0xB0
	[SerializeField] // RVA: 0xC7A5AC Offset: 0xC7A5AC VA: 0xC7A5AC
	protected UISprite pushTabSprite; // 0xB8
	[SerializeField] // RVA: 0xC7A5BC Offset: 0xC7A5BC VA: 0xC7A5BC
	protected UICommonButton pushTabButton; // 0xC0
	protected SupportServantSelectMenu.State state; // 0xC8
	[CompilerGeneratedAttribute] // RVA: 0xC7A5CC Offset: 0xC7A5CC VA: 0xC7A5CC
	[DebuggerBrowsableAttribute] // RVA: 0xC7A5CC Offset: 0xC7A5CC VA: 0xC7A5CC
	private SupportServantSelectMenu.CallbackFunc callbackFunc; // 0xD0
	protected SupportServantSelectMenu.RequestCallbackFunc requestCallback; // 0xD8
	private SupportServantSelectMenu.ModeKind tabModeKind; // 0xE0
	private int classPos; // 0xE4
	protected const string BEFORE_CLASS_POS = "ClassPos";

	// Methods

	// RVA: 0x14F5518 Offset: 0x14F5518 VA: 0x14F5518
	public void .ctor() { }

	// RVA: 0x14F5580 Offset: 0x14F5580 VA: 0x14F5580
	protected void add_callbackFunc(SupportServantSelectMenu.CallbackFunc value) { }

	// RVA: 0x14F566C Offset: 0x14F566C VA: 0x14F566C
	protected void remove_callbackFunc(SupportServantSelectMenu.CallbackFunc value) { }

	// RVA: 0x14F5758 Offset: 0x14F5758 VA: 0x14F5758
	public void Init() { }

	// RVA: 0x14F5D68 Offset: 0x14F5D68 VA: 0x14F5D68
	public void Open(SupportServantData[] supportServantData, int nowDeckNum, int classPos, EventUpValSetupInfo eventSetupInfo, int nowDeckId, int[] fixMainDeckIds, int[] fixEventDeckIds, SupportServantSelectMenu.CallbackFunc callback) { }

	// RVA: 0x14F5FF8 Offset: 0x14F5FF8 VA: 0x14F5FF8
	protected void EndOpen() { }

	// RVA: 0x14F6090 Offset: 0x14F6090 VA: 0x14F6090
	public void ModifyItem() { }

	// RVA: 0x14F60C0 Offset: 0x14F60C0 VA: 0x14F60C0
	protected void Callback(SupportSelectRootComponent.ResultKind result, int classPos, UserServantEntity entity) { }

	// RVA: 0x14F6348 Offset: 0x14F6348 VA: 0x14F6348
	protected void OnSelectItem(SupportServantListViewManager.ResultKind kind, int offset) { }

	// RVA: 0x14F7138 Offset: 0x14F7138 VA: 0x14F7138
	public void onClickNormalTabButton() { }

	// RVA: 0x14F73FC Offset: 0x14F73FC VA: 0x14F73FC
	protected void EndClickTabNormal(bool isRequest) { }

	// RVA: 0x14F745C Offset: 0x14F745C VA: 0x14F745C
	public void onClickLockTabButton() { }

	// RVA: 0x14F7570 Offset: 0x14F7570 VA: 0x14F7570
	protected void EndClickTabLock(bool isRequest) { }

	// RVA: 0x14F75D0 Offset: 0x14F75D0 VA: 0x14F75D0
	public void onClickChoiceTabButton() { }

	// RVA: 0x14F76E4 Offset: 0x14F76E4 VA: 0x14F76E4
	protected void EndClickTabChoice(bool isRequest) { }

	// RVA: 0x14F7744 Offset: 0x14F7744 VA: 0x14F7744
	public void onClickPushTabButton() { }

	// RVA: 0x14F7820 Offset: 0x14F7820 VA: 0x14F7820
	protected void EndClickTabPush(bool isRequest) { }

	// RVA: 0x14F5878 Offset: 0x14F5878 VA: 0x14F5878
	private void setModeTabKind(SupportServantSelectMenu.ModeKind modeKind) { }

	// RVA: 0x14F7880 Offset: 0x14F7880 VA: 0x14F7880
	public void OnClickCancel() { }

	// RVA: 0x14F796C Offset: 0x14F796C VA: 0x14F796C
	protected void endCancelButton(bool isRequest) { }

	// RVA: 0x14F7200 Offset: 0x14F7200 VA: 0x14F7200
	public void statusRequest(SupportServantSelectMenu.RequestCallbackFunc callback) { }

	// RVA: 0x14F7C48 Offset: 0x14F7C48 VA: 0x14F7C48
	protected void EndStatusSync(string result) { }

	// RVA: 0x14F7C68 Offset: 0x14F7C68 VA: 0x14F7C68
	public void OnClickScaleChange() { }

	// RVA: 0x14F6D90 Offset: 0x14F6D90 VA: 0x14F6D90
	private void PushRequest(SupportServantListViewItem selectItem) { }

	// RVA: 0x14F7D3C Offset: 0x14F7D3C VA: 0x14F7D3C
	private void EndCardFavoriteRequest(string result) { }

	// RVA: 0x14F7DF0 Offset: 0x14F7DF0 VA: 0x14F7DF0
	public void ClearScrollValue() { }
}

// Namespace: 
protected enum SupportServantSelectMenu.State // TypeDefIndex: 10878
{
	// Fields
	public int value__; // 0x0
	public const SupportServantSelectMenu.State INIT = 0;
	public const SupportServantSelectMenu.State OPEN = 1;
	public const SupportServantSelectMenu.State INPUT = 2;
	public const SupportServantSelectMenu.State SELECTED = 3;
	public const SupportServantSelectMenu.State CLOSE = 4;
}

// Namespace: 
public enum SupportServantSelectMenu.ModeKind // TypeDefIndex: 10879
{
	// Fields
	public int value__; // 0x0
	public const SupportServantSelectMenu.ModeKind NORMAL = 0;
	public const SupportServantSelectMenu.ModeKind LOCK = 1;
	public const SupportServantSelectMenu.ModeKind CHOICE = 2;
	public const SupportServantSelectMenu.ModeKind PUSH = 3;
	public const SupportServantSelectMenu.ModeKind SUM = 4;
}

// Namespace: 
public sealed class SupportServantSelectMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10880
{
	// Methods

	// RVA: 0x14F7F9C Offset: 0x14F7F9C VA: 0x14F7F9C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x14F60DC Offset: 0x14F60DC VA: 0x14F60DC Slot: 11
	public virtual void Invoke(SupportSelectRootComponent.ResultKind result, int classPos, UserServantEntity entity) { }

	// RVA: 0x14F7FAC Offset: 0x14F7FAC VA: 0x14F7FAC Slot: 12
	public virtual IAsyncResult BeginInvoke(SupportSelectRootComponent.ResultKind result, int classPos, UserServantEntity entity, AsyncCallback callback, object object) { }

	// RVA: 0x14F8064 Offset: 0x14F8064 VA: 0x14F8064 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class SupportServantSelectMenu.RequestCallbackFunc : MulticastDelegate // TypeDefIndex: 10881
{
	// Methods

	// RVA: 0x14F71F0 Offset: 0x14F71F0 VA: 0x14F71F0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x14F7A1C Offset: 0x14F7A1C VA: 0x14F7A1C Slot: 11
	public virtual void Invoke(bool isRequest) { }

	// RVA: 0x14F8070 Offset: 0x14F8070 VA: 0x14F8070 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isRequest, AsyncCallback callback, object object) { }

	// RVA: 0x14F8100 Offset: 0x14F8100 VA: 0x14F8100 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45694 Offset: 0xC45694 VA: 0xC45694
private sealed class SupportServantSelectMenu.<OnSelectItem>c__AnonStorey0 // TypeDefIndex: 10882
{
	// Fields
	internal SupportServantListViewItem item; // 0x10
	internal SupportServantSelectMenu $this; // 0x18

	// Methods

	// RVA: 0x14F6D88 Offset: 0x14F6D88 VA: 0x14F6D88
	public void .ctor() { }

	// RVA: 0x14F7E24 Offset: 0x14F7E24 VA: 0x14F7E24
	internal void <>m__0(bool isDecide) { }

	// RVA: 0x14F7F6C Offset: 0x14F7F6C VA: 0x14F7F6C
	internal void <>m__1() { }
}

// Namespace: 
public class BaseCore : MonoBehaviour // TypeDefIndex: 10883
{
	// Fields
	public const float ROTATE_AUTO_SPD = -0.4;
	public const float ZOOM_IN_WHITE_FADE_TIME = 0.4;
	public const float ZOOM_OUT_WHITE_FADE_TIME = 0.4;
	[SerializeField] // RVA: 0xC7A608 Offset: 0xC7A608 VA: 0xC7A608
	protected GameObject mEarthRoot; // 0x18
	[SerializeField] // RVA: 0xC7A618 Offset: 0xC7A618 VA: 0xC7A618
	protected GameObject mEarthPointRoot; // 0x20
	[SerializeField] // RVA: 0xC7A628 Offset: 0xC7A628 VA: 0xC7A628
	protected GameObject mEarthPointPrefab; // 0x28
	protected TerminalSceneComponent mTerminalScene; // 0x30
	protected GameObject mTerminalMap; // 0x38
	protected Camera mEarthEffCamera; // 0x40
	protected BaseEarthPoint mFocusEarthPoint; // 0x48
	protected MeshRenderer mMeshRenderer; // 0x50
	protected Quaternion mRootQua; // 0x58
	protected Quaternion mResumeQua; // 0x68
	protected Vector3 mFocusTgtPos; // 0x78
	protected float mFocusTgtScl; // 0x84
	protected bool mIsFocusIn; // 0x88
	protected bool mIsFocusMoving; // 0x89
	protected bool mIsTouch; // 0x8A
	protected bool mIsReqZoomIn; // 0x8B
	protected BaseCore.CORE_TYPE mCoreType; // 0x8C
	[CompilerGeneratedAttribute] // RVA: 0xC7A638 Offset: 0xC7A638 VA: 0xC7A638
	[DebuggerBrowsableAttribute] // RVA: 0xC7A638 Offset: 0xC7A638 VA: 0xC7A638
	private float <PointInitAngle>k__BackingField; // 0x90

	// Properties
	public bool IsFocusIn { get; }
	public bool IsFocusMoving { get; }
	public BaseCore.CORE_TYPE CoreType { get; }
	public float PointInitAngle { get; set; }

	// Methods

	// RVA: 0xF6529C Offset: 0xF6529C VA: 0xF6529C
	public void .ctor() { }

	// RVA: 0xF652A4 Offset: 0xF652A4 VA: 0xF652A4
	public bool get_IsFocusIn() { }

	// RVA: 0xF652AC Offset: 0xF652AC VA: 0xF652AC
	public bool get_IsFocusMoving() { }

	// RVA: 0xF652B4 Offset: 0xF652B4 VA: 0xF652B4
	public BaseCore.CORE_TYPE get_CoreType() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2088 Offset: 0xCD2088 VA: 0xCD2088
	// RVA: 0xF652BC Offset: 0xF652BC VA: 0xF652BC
	public float get_PointInitAngle() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2098 Offset: 0xCD2098 VA: 0xCD2098
	// RVA: 0xF652C4 Offset: 0xF652C4 VA: 0xF652C4
	public void set_PointInitAngle(float value) { }

	// RVA: 0xF652CC Offset: 0xF652CC VA: 0xF652CC
	public float GetAutoRotationSpeed() { }

	// RVA: 0xF652DC Offset: 0xF652DC VA: 0xF652DC
	public void FocusIn(bool isForce = False) { }

	// RVA: 0xF652F0 Offset: 0xF652F0 VA: 0xF652F0
	public void FocusOut(bool isForce = False) { }

	// RVA: 0xF65304 Offset: 0xF65304 VA: 0xF65304 Slot: 4
	public virtual void FocusInOut(bool isFocusIn, bool isForce = False) { }

	// RVA: 0xF65308 Offset: 0xF65308 VA: 0xF65308 Slot: 5
	public virtual void Awake() { }

	// RVA: 0xF65310 Offset: 0xF65310 VA: 0xF65310 Slot: 6
	public virtual void Update() { }

	// RVA: 0xF65314 Offset: 0xF65314 VA: 0xF65314 Slot: 7
	public virtual void OnPress() { }

	// RVA: 0xF65318 Offset: 0xF65318 VA: 0xF65318
	public void OnRelease() { }

	// RVA: 0xF65320 Offset: 0xF65320 VA: 0xF65320 Slot: 8
	public virtual void Setup(List<MapControl.WarInfo> warInfoList, bool isFocusIn) { }

	// RVA: 0xF65324 Offset: 0xF65324 VA: 0xF65324
	public void SetTerminalData() { }

	// RVA: 0xF653E4 Offset: 0xF653E4 VA: 0xF653E4
	public void SetFocusEarthPoint(int warId) { }

	// RVA: 0xF65408 Offset: 0xF65408 VA: 0xF65408
	public BaseEarthPoint GetEarthPoint(int warId) { }

	// RVA: -1 Offset: -1
	protected T CreateEarthPoint<T>(int warId, float x, float y, float z) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1D640 Offset: 0x1C1D640 VA: 0x1C1D640
	|-BaseCore.CreateEarthPoint<CylinderPoint>
	|-BaseCore.CreateEarthPoint<EarthPoint>
	|-BaseCore.CreateEarthPoint<object>
	*/

	// RVA: 0xF65568 Offset: 0xF65568 VA: 0xF65568
	protected bool IsWarOpen(MapControl.WarInfo warInfo) { }

	// RVA: 0xF65674 Offset: 0xF65674 VA: 0xF65674 Slot: 9
	public virtual void mcbfStartMain() { }

	// RVA: 0xF65678 Offset: 0xF65678 VA: 0xF65678 Slot: 10
	public virtual void mcbfStartZoomOut() { }

	// RVA: 0xF6567C Offset: 0xF6567C VA: 0xF6567C Slot: 11
	public virtual void mcbfStartZoomIn() { }

	// RVA: 0xF65680 Offset: 0xF65680 VA: 0xF65680 Slot: 12
	public virtual void SetDisp(bool isDisp) { }

	// RVA: 0xF65684 Offset: 0xF65684 VA: 0xF65684 Slot: 13
	public virtual BaseCore.STATE GetState() { }

	// RVA: 0xF6568C Offset: 0xF6568C VA: 0xF6568C Slot: 14
	public virtual float GetStateMainInertialSpdOld() { }

	// RVA: 0xF65694 Offset: 0xF65694 VA: 0xF65694 Slot: 15
	public virtual void SetState(BaseCore.STATE state) { }

	// RVA: 0xF65698 Offset: 0xF65698 VA: 0xF65698
	public void SetRotateY_PointInitAngle() { }

	// RVA: 0xF6571C Offset: 0xF6571C VA: 0xF6571C
	public void EndSlideServant() { }
}

// Namespace: 
public enum BaseCore.CORE_TYPE // TypeDefIndex: 10884
{
	// Fields
	public int value__; // 0x0
	public const BaseCore.CORE_TYPE EARTH = 0;
	public const BaseCore.CORE_TYPE CYLINDER = 1;
}

// Namespace: 
public enum BaseCore.STATE // TypeDefIndex: 10885
{
	// Fields
	public int value__; // 0x0
	public const BaseCore.STATE NONE = 0;
	public const BaseCore.STATE MAIN = 1;
	public const BaseCore.STATE ZOOM_IN = 2;
	public const BaseCore.STATE ZOOM_OUT = 3;
	public const BaseCore.STATE SIZEOF = 4;
}

// Namespace: 
public class BaseEarthPoint : MonoBehaviour // TypeDefIndex: 10886
{
	// Fields
	public const string NAME_PREFIX = "EarthPoint_";
	protected static readonly Vector3 FORWARD_VEC; // 0x0
	protected BaseCore mEarthCore; // 0x18
	protected Vector3 mBaseVec; // 0x20
	protected UIWidget mWidget; // 0x30
	protected ParticleSystem mParticleSystem; // 0x38
	protected GameObject mParticleSystemObj; // 0x40
	protected Camera earthEffectCamera; // 0x48
	protected bool mIsForward; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xC7A674 Offset: 0xC7A674 VA: 0xC7A674
	[DebuggerBrowsableAttribute] // RVA: 0xC7A674 Offset: 0xC7A674 VA: 0xC7A674
	private float <FocusAng>k__BackingField; // 0x54
	[CompilerGeneratedAttribute] // RVA: 0xC7A6B0 Offset: 0xC7A6B0 VA: 0xC7A6B0
	[DebuggerBrowsableAttribute] // RVA: 0xC7A6B0 Offset: 0xC7A6B0 VA: 0xC7A6B0
	private Quaternion <FocusQua>k__BackingField; // 0x58
	protected bool IsParticleDisp; // 0x68

	// Properties
	public BaseCore EarthCore { get; }
	public bool IsForward { get; }
	public float FocusAng { get; set; }
	public Quaternion FocusQua { get; set; }

	// Methods

	// RVA: 0xF663BC Offset: 0xF663BC VA: 0xF663BC
	public void .ctor() { }

	// RVA: 0xF663CC Offset: 0xF663CC VA: 0xF663CC
	public BaseCore get_EarthCore() { }

	// RVA: 0xF663D4 Offset: 0xF663D4 VA: 0xF663D4
	public bool get_IsForward() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD20A8 Offset: 0xCD20A8 VA: 0xCD20A8
	// RVA: 0xF663DC Offset: 0xF663DC VA: 0xF663DC
	public float get_FocusAng() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD20B8 Offset: 0xCD20B8 VA: 0xCD20B8
	// RVA: 0xF663E4 Offset: 0xF663E4 VA: 0xF663E4
	private void set_FocusAng(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD20C8 Offset: 0xCD20C8 VA: 0xCD20C8
	// RVA: 0xF663EC Offset: 0xF663EC VA: 0xF663EC
	public Quaternion get_FocusQua() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD20D8 Offset: 0xCD20D8 VA: 0xCD20D8
	// RVA: 0xF663F8 Offset: 0xF663F8 VA: 0xF663F8
	private void set_FocusQua(Quaternion value) { }

	// RVA: 0xF66404 Offset: 0xF66404 VA: 0xF66404 Slot: 4
	protected virtual void LateUpdate() { }

	// RVA: 0xF66408 Offset: 0xF66408 VA: 0xF66408 Slot: 5
	protected virtual string GetEffectName() { }

	// RVA: 0xF66410 Offset: 0xF66410 VA: 0xF66410
	public void Setup(bool isActive, Camera earthEffCamera) { }

	// RVA: 0xF66B7C Offset: 0xF66B7C VA: 0xF66B7C
	public float GetDotXZ(ref Vector3 vec) { }

	// RVA: 0xF66968 Offset: 0xF66968 VA: 0xF66968
	public float GetDotXZ_Deg(ref Vector3 vec) { }

	// RVA: 0xF66CC0 Offset: 0xF66CC0 VA: 0xF66CC0
	public static float Cos2Deg(float _cos) { }

	// RVA: 0xF66D3C Offset: 0xF66D3C VA: 0xF66D3C
	private static void .cctor() { }
}

// Namespace: 
public class TerminalBoardOptionTextData // TypeDefIndex: 10887
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC7A6EC Offset: 0xC7A6EC VA: 0xC7A6EC
	[DebuggerBrowsableAttribute] // RVA: 0xC7A6EC Offset: 0xC7A6EC VA: 0xC7A6EC
	private string <ForwardText>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC7A728 Offset: 0xC7A728 VA: 0xC7A728
	[DebuggerBrowsableAttribute] // RVA: 0xC7A728 Offset: 0xC7A728 VA: 0xC7A728
	private string <BehindText>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC7A764 Offset: 0xC7A764 VA: 0xC7A764
	[DebuggerBrowsableAttribute] // RVA: 0xC7A764 Offset: 0xC7A764 VA: 0xC7A764
	private string <BehindTextFormat>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC7A7A0 Offset: 0xC7A7A0 VA: 0xC7A7A0
	[DebuggerBrowsableAttribute] // RVA: 0xC7A7A0 Offset: 0xC7A7A0 VA: 0xC7A7A0
	private int <ItemImageId>k__BackingField; // 0x28

	// Properties
	public string ForwardText { get; set; }
	public string BehindText { get; set; }
	public string BehindTextFormat { get; set; }
	public int ItemImageId { get; set; }

	// Methods

	// RVA: 0x108FE70 Offset: 0x108FE70 VA: 0x108FE70
	public void .ctor(string forwardText, string behindTextFormat, int itemImageId = 0) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD20E8 Offset: 0xCD20E8 VA: 0xCD20E8
	// RVA: 0x108FECC Offset: 0x108FECC VA: 0x108FECC
	public string get_ForwardText() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD20F8 Offset: 0xCD20F8 VA: 0xCD20F8
	// RVA: 0x108FEB4 Offset: 0x108FEB4 VA: 0x108FEB4
	public void set_ForwardText(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2108 Offset: 0xCD2108 VA: 0xCD2108
	// RVA: 0x108FED4 Offset: 0x108FED4 VA: 0x108FED4
	public string get_BehindText() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2118 Offset: 0xCD2118 VA: 0xCD2118
	// RVA: 0x108FEDC Offset: 0x108FEDC VA: 0x108FEDC
	public void set_BehindText(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2128 Offset: 0xCD2128 VA: 0xCD2128
	// RVA: 0x108FEE4 Offset: 0x108FEE4 VA: 0x108FEE4
	public string get_BehindTextFormat() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2138 Offset: 0xCD2138 VA: 0xCD2138
	// RVA: 0x108FEBC Offset: 0x108FEBC VA: 0x108FEBC
	private void set_BehindTextFormat(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2148 Offset: 0xCD2148 VA: 0xCD2148
	// RVA: 0x108FEEC Offset: 0x108FEEC VA: 0x108FEEC
	public int get_ItemImageId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2158 Offset: 0xCD2158 VA: 0xCD2158
	// RVA: 0x108FEC4 Offset: 0x108FEC4 VA: 0x108FEC4
	private void set_ItemImageId(int value) { }

	// RVA: 0x108FEF4 Offset: 0x108FEF4 VA: 0x108FEF4
	public void SetParamsToBehindText(object[] args) { }
}

// Namespace: 
public class BoardOptionEventTargetComponent : MonoBehaviour // TypeDefIndex: 10888
{
	// Fields
	private bool mIsBuildingList; // 0x18
	private string[] loadedAssets; // 0x20
	private bool loading; // 0x28
	protected List<ListViewItem> itemList; // 0x30
	[SerializeField] // RVA: 0xC7A7DC Offset: 0xC7A7DC VA: 0xC7A7DC
	private BoardOptionEventTargetListViewItemDraw[] eventTargetItemDrawList; // 0x38
	[SerializeField] // RVA: 0xC7A7EC Offset: 0xC7A7EC VA: 0xC7A7EC
	private GameObject missionTargetLabel; // 0x40
	private int nowOffset; // 0x48
	private Texture2D mChocoTex; // 0x50
	private Material mChocoMaterialTx; // 0x58
	private Material mChocoMaterialSp; // 0x60
	private static readonly string CHOCO_SHADER_TX; // 0x0
	private static readonly string CHOCO_SHADER_SP; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC7A7FC Offset: 0xC7A7FC VA: 0xC7A7FC
	private static Func<ViewEnemyEntity, bool> <>f__am$cache0; // 0x10

	// Methods

	// RVA: 0x19B2250 Offset: 0x19B2250 VA: 0x19B2250
	public void .ctor() { }

	// RVA: 0x19B2258 Offset: 0x19B2258 VA: 0x19B2258
	public void CreateEnemyList(int questId, int[] enemies) { }

	// RVA: 0x19B2AAC Offset: 0x19B2AAC VA: 0x19B2AAC
	private void DispEmptyList(int useNum) { }

	// RVA: 0x19B3228 Offset: 0x19B3228 VA: 0x19B3228
	private void CreateEnemyList(int questId, int[] enemies, ViewEnemyEntity[] veEnts) { }

	// RVA: 0x19B3468 Offset: 0x19B3468 VA: 0x19B3468
	private void DispList(int offset = 0) { }

	// RVA: 0x19B33E0 Offset: 0x19B33E0 VA: 0x19B33E0
	public void DestroyList() { }

	// RVA: 0x19B3824 Offset: 0x19B3824 VA: 0x19B3824
	public Material NewChocoMaterialForTexture() { }

	// RVA: 0x19B3984 Offset: 0x19B3984 VA: 0x19B3984
	public Material NewChocoMaterialForSprite() { }

	// RVA: 0x19B3764 Offset: 0x19B3764 VA: 0x19B3764
	public void SetAlpha(float alpha) { }

	// RVA: 0x19B3B28 Offset: 0x19B3B28 VA: 0x19B3B28
	public bool IsNeedAnim() { }

	// RVA: 0x19B3BAC Offset: 0x19B3BAC VA: 0x19B3BAC
	public void SetNextTarget() { }

	// RVA: 0x19B3CB0 Offset: 0x19B3CB0 VA: 0x19B3CB0
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD2168 Offset: 0xCD2168 VA: 0xCD2168
	// RVA: 0x19B3D24 Offset: 0x19B3D24 VA: 0x19B3D24
	private static bool <CreateEnemyList>m__0(ViewEnemyEntity n) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC456A4 Offset: 0xC456A4 VA: 0xC456A4
private sealed class BoardOptionEventTargetComponent.<CreateEnemyList>c__AnonStorey0 // TypeDefIndex: 10889
{
	// Fields
	internal int questId; // 0x10
	internal int[] enemies; // 0x18
	internal ViewEnemyEntity[] veEnts; // 0x20
	internal BoardOptionEventTargetComponent $this; // 0x28

	// Methods

	// RVA: 0x19B2AA4 Offset: 0x19B2AA4 VA: 0x19B2AA4
	public void .ctor() { }

	// RVA: 0x19B3D30 Offset: 0x19B3D30 VA: 0x19B3D30
	internal void <>m__0() { }

	// RVA: 0x19B3DE8 Offset: 0x19B3DE8 VA: 0x19B3DE8
	internal void <>m__1() { }
}

// Namespace: 
public class BoardOptionEventTargetListViewItemDraw : QuestInformationListViewItemDraw // TypeDefIndex: 10890
{
	// Fields
	private static readonly string BASE_SPRITE_NAME; // 0x0
	[SerializeField] // RVA: 0xC7A80C Offset: 0xC7A80C VA: 0xC7A80C
	private BoardOptionEventTargetComponent eventTargetComponent; // 0x90
	[SerializeField] // RVA: 0xC7A81C Offset: 0xC7A81C VA: 0xC7A81C
	private UISprite iconBaseSprite; // 0x98

	// Methods

	// RVA: 0x19B3E28 Offset: 0x19B3E28 VA: 0x19B3E28
	public void .ctor() { }

	// RVA: 0x19B2C40 Offset: 0x19B2C40 VA: 0x19B2C40
	public void SetItem(QuestInformationListViewItem item, QuestInformationListViewItemDraw.DispMode mode) { }

	// RVA: 0x19B3F64 Offset: 0x19B3F64 VA: 0x19B3F64
	protected void SetDispType(DisplayType.Type dispTp, UISpriteAltMat sp) { }

	// RVA: 0x19B4148 Offset: 0x19B4148 VA: 0x19B4148
	protected void SetDispType(DisplayType.Type dispTp, UITexture texture) { }

	// RVA: 0x19B3E98 Offset: 0x19B3E98 VA: 0x19B3E98
	private void SetFrame() { }

	// RVA: 0x19B3AE4 Offset: 0x19B3AE4 VA: 0x19B3AE4
	public void SetAlpha(float alpha) { }

	// RVA: 0x19B4534 Offset: 0x19B4534 VA: 0x19B4534
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC456B4 Offset: 0xC456B4 VA: 0xC456B4
private sealed class BoardOptionEventTargetListViewItemDraw.<SetItem>c__AnonStorey0 // TypeDefIndex: 10891
{
	// Fields
	internal QuestInformationListViewItem item; // 0x10
	internal BoardOptionEventTargetListViewItemDraw $this; // 0x18

	// Methods

	// RVA: 0x19B3E90 Offset: 0x19B3E90 VA: 0x19B3E90
	public void .ctor() { }

	// RVA: 0x19B4590 Offset: 0x19B4590 VA: 0x19B4590
	internal void <>m__0() { }
}

// Namespace: 
public class BoardOptionTextWithIconComponent : MonoBehaviour // TypeDefIndex: 10892
{
	// Fields
	[SerializeField] // RVA: 0xC7A82C Offset: 0xC7A82C VA: 0xC7A82C
	private UILabel forwardLabel; // 0x18
	[SerializeField] // RVA: 0xC7A83C Offset: 0xC7A83C VA: 0xC7A83C
	private UILabel behindLabel; // 0x20
	[SerializeField] // RVA: 0xC7A84C Offset: 0xC7A84C VA: 0xC7A84C
	private UISprite itemIconSprite; // 0x28
	[SerializeField] // RVA: 0xC7A85C Offset: 0xC7A85C VA: 0xC7A85C
	private int itemIconPaddingLeft; // 0x30
	[SerializeField] // RVA: 0xC7A86C Offset: 0xC7A86C VA: 0xC7A86C
	private int itemIconPaddingRight; // 0x34
	private TerminalBoardOptionTextData data; // 0x38
	private float alpha; // 0x40

	// Properties
	public string forwardLabelText { get; }
	public string behindLabelText { get; }
	public float Alpha { get; set; }
	public Color LabelGradientTop { set; }
	public Color LabelGradientBottom { set; }
	public int LabelFontSize { set; }
	private float iconSpaceWidth { get; }

	// Methods

	// RVA: 0x19B4664 Offset: 0x19B4664 VA: 0x19B4664
	public void .ctor() { }

	// RVA: 0x19B4674 Offset: 0x19B4674 VA: 0x19B4674
	public string get_forwardLabelText() { }

	// RVA: 0x19B473C Offset: 0x19B473C VA: 0x19B473C
	public string get_behindLabelText() { }

	// RVA: 0x19B4804 Offset: 0x19B4804 VA: 0x19B4804
	public float get_Alpha() { }

	// RVA: 0x19B480C Offset: 0x19B480C VA: 0x19B480C
	public void set_Alpha(float value) { }

	// RVA: 0x19B4984 Offset: 0x19B4984 VA: 0x19B4984
	public void set_LabelGradientTop(Color value) { }

	// RVA: 0x19B4AC0 Offset: 0x19B4AC0 VA: 0x19B4AC0
	public void set_LabelGradientBottom(Color value) { }

	// RVA: 0x19B4BFC Offset: 0x19B4BFC VA: 0x19B4BFC
	public void set_LabelFontSize(int value) { }

	// RVA: 0x19B4CFC Offset: 0x19B4CFC VA: 0x19B4CFC
	private float get_iconSpaceWidth() { }

	// RVA: 0x19B4DC8 Offset: 0x19B4DC8 VA: 0x19B4DC8
	public void UpdateUI(TerminalBoardOptionTextData data, int wholeWidth) { }

	// RVA: 0x19B5600 Offset: 0x19B5600 VA: 0x19B5600
	public bool IsTextEmpty() { }

	// RVA: 0x19B56CC Offset: 0x19B56CC VA: 0x19B56CC
	public int GetBehindLabelWrappedWidth() { }

	// RVA: 0x19B53B8 Offset: 0x19B53B8 VA: 0x19B53B8
	private void AdjustContentsAnchor() { }

	// RVA: 0x19B502C Offset: 0x19B502C VA: 0x19B502C
	private void SetForwardText(string text) { }

	// RVA: 0x19B5150 Offset: 0x19B5150 VA: 0x19B5150
	private void SetBehindText(string text) { }

	// RVA: 0x19B5274 Offset: 0x19B5274 VA: 0x19B5274
	private void SetCondensedScale(int wholeWidth) { }

	// RVA: 0x19B57A8 Offset: 0x19B57A8 VA: 0x19B57A8
	private float GetForwardTextWidth(float totalTextWidth) { }

	// RVA: 0x19B58DC Offset: 0x19B58DC VA: 0x19B58DC
	private float GetBehindTextWidth(float totalTextWidth) { }

	// RVA: 0x19B4E8C Offset: 0x19B4E8C VA: 0x19B4E8C
	private void SetItemIconAtlas(int itemImageId) { }
}

// Namespace: 
public class CaldeaFolderTutorial // TypeDefIndex: 10893
{
	// Fields
	public static readonly int CALDEA_GATE_WAR_ID; // 0x0
	public static readonly int CALDEA_WEEKLY_WAR_ID; // 0x4
	public static readonly int CALDEA_FRIEND_STORY_WAR_ID; // 0x8
	private static Dictionary<int, CaldeaFolderTutorial.TutorialData> FolderTutorials; // 0x10

	// Methods

	// RVA: 0x14E3710 Offset: 0x14E3710 VA: 0x14E3710
	public void .ctor() { }

