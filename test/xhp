	// RVA: 0x2B9509C Offset: 0x2B9509C VA: 0x2B9509C
	public void SetEnabledFading(bool enabled, float interpolationTime) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBF952C Offset: 0xBF952C VA: 0xBF952C
	// RVA: 0x2B95128 Offset: 0x2B95128 VA: 0x2B95128
	public void SetEnabledFading(bool enabled) { }

	// RVA: 0x2B95134 Offset: 0x2B95134 VA: 0x2B95134
	public bool get_solverFrequency() { }

	// RVA: 0x2B95150 Offset: 0x2B95150 VA: 0x2B95150
	public void set_solverFrequency(bool value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBF953C Offset: 0xBF953C VA: 0xBF953C
	// RVA: 0x2B95198 Offset: 0x2B95198 VA: 0x2B95198
	public CapsuleCollider[] get_capsuleColliders() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBF954C Offset: 0xBF954C VA: 0xBF954C
	// RVA: 0x2B95204 Offset: 0x2B95204 VA: 0x2B95204
	public void set_capsuleColliders(CapsuleCollider[] value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBF955C Offset: 0xBF955C VA: 0xBF955C
	// RVA: 0x2B95278 Offset: 0x2B95278 VA: 0x2B95278
	public ClothSphereColliderPair[] get_sphereColliders() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBF956C Offset: 0xBF956C VA: 0xBF956C
	// RVA: 0x2B952E4 Offset: 0x2B952E4 VA: 0x2B952E4
	public void set_sphereColliders(ClothSphereColliderPair[] value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBF957C Offset: 0xBF957C VA: 0xBF957C
	// RVA: 0x2B946F0 Offset: 0x2B946F0 VA: 0x2B946F0
	internal void GetVirtualParticleIndicesMono(object indicesOutList) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBF958C Offset: 0xBF958C VA: 0xBF958C
	// RVA: 0x2B94800 Offset: 0x2B94800 VA: 0x2B94800
	internal void SetVirtualParticleIndicesMono(object indicesInList) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBF959C Offset: 0xBF959C VA: 0xBF959C
	// RVA: 0x2B94910 Offset: 0x2B94910 VA: 0x2B94910
	internal void GetVirtualParticleWeightsMono(object weightsOutList) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBF95AC Offset: 0xBF95AC VA: 0xBF95AC
	// RVA: 0x2B94A20 Offset: 0x2B94A20 VA: 0x2B94A20
	internal void SetVirtualParticleWeightsMono(object weightsInList) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBF95BC Offset: 0xBF95BC VA: 0xBF95BC
	// RVA: 0x2B94B30 Offset: 0x2B94B30 VA: 0x2B94B30
	internal void GetSelfAndInterCollisionIndicesMono(object indicesOutList) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBF95CC Offset: 0xBF95CC VA: 0xBF95CC
	// RVA: 0x2B94C40 Offset: 0x2B94C40 VA: 0x2B94C40
	internal void SetSelfAndInterCollisionIndicesMono(object indicesInList) { }

	// RVA: 0x2B938A4 Offset: 0x2B938A4 VA: 0x2B938A4
	private void get_externalAcceleration_Injected(out Vector3 ret) { }

	// RVA: 0x2B93940 Offset: 0x2B93940 VA: 0x2B93940
	private void set_externalAcceleration_Injected(ref Vector3 value) { }

	// RVA: 0x2B939E4 Offset: 0x2B939E4 VA: 0x2B939E4
	private void get_randomAcceleration_Injected(out Vector3 ret) { }

	// RVA: 0x2B93A80 Offset: 0x2B93A80 VA: 0x2B93A80
	private void set_randomAcceleration_Injected(ref Vector3 value) { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xBF946C Offset: 0xBF946C VA: 0xBF946C
public struct ClothSkinningCoefficient // TypeDefIndex: 2726
{
	// Fields
	public float maxDistance; // 0x0
	public float collisionSphereDistance; // 0x4
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xBF947C Offset: 0xBF947C VA: 0xBF947C
public struct ClothSphereColliderPair // TypeDefIndex: 2727
{
	// Fields
	private SphereCollider m_First; // 0x0
	private SphereCollider m_Second; // 0x8
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2728
{}

// Namespace: UnityEngine
[StaticAccessorAttribute] // RVA: 0xBFA7C0 Offset: 0xBFA7C0 VA: 0xBFA7C0
[NativeHeaderAttribute] // RVA: 0xBFA7C0 Offset: 0xBFA7C0 VA: 0xBFA7C0
public sealed class Event // TypeDefIndex: 2729
{
	// Fields
	internal IntPtr m_Ptr; // 0x10
	private static Event s_Current; // 0x0
	private static Event s_MasterEvent; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xBFADC0 Offset: 0xBFADC0 VA: 0xBFADC0
	private static Dictionary<string, int> <>f__switch$map0; // 0x10

	// Properties
	[NativePropertyAttribute] // RVA: 0xBFCDF0 Offset: 0xBFCDF0 VA: 0xBFCDF0
	public EventType rawType { get; }
	[NativePropertyAttribute] // RVA: 0xBFCE30 Offset: 0xBFCE30 VA: 0xBFCE30
	public Vector2 mousePosition { get; }
	[NativePropertyAttribute] // RVA: 0xBFCE70 Offset: 0xBFCE70 VA: 0xBFCE70
	public Vector2 delta { get; }
	[NativePropertyAttribute] // RVA: 0xBFCEB0 Offset: 0xBFCEB0 VA: 0xBFCEB0
	public EventModifiers modifiers { get; set; }
	[NativePropertyAttribute] // RVA: 0xBFCEF0 Offset: 0xBFCEF0 VA: 0xBFCEF0
	public int clickCount { get; }
	[NativePropertyAttribute] // RVA: 0xBFCF30 Offset: 0xBFCF30 VA: 0xBFCF30
	public char character { get; set; }
	[NativePropertyAttribute] // RVA: 0xBFCF70 Offset: 0xBFCF70 VA: 0xBFCF70
	public KeyCode keyCode { get; set; }
	[NativePropertyAttribute] // RVA: 0xBFCFB0 Offset: 0xBFCFB0 VA: 0xBFCFB0
	public int displayIndex { set; }
	public EventType type { get; set; }
	public string commandName { get; }
	public bool shift { get; }
	public bool alt { get; }
	public static Event current { get; }
	public bool isKey { get; }
	public bool isMouse { get; }

	// Methods

	// RVA: 0x26B8260 Offset: 0x26B8260 VA: 0x26B8260
	public void .ctor() { }

	// RVA: 0x26B82FC Offset: 0x26B82FC VA: 0x26B82FC
	public void .ctor(int displayIndex) { }

	// RVA: 0x26B8330 Offset: 0x26B8330 VA: 0x26B8330
	public EventType get_rawType() { }

	// RVA: 0x26B839C Offset: 0x26B839C VA: 0x26B839C
	public Vector2 get_mousePosition() { }

	// RVA: 0x26B8438 Offset: 0x26B8438 VA: 0x26B8438
	public Vector2 get_delta() { }

	// RVA: 0x26B84D4 Offset: 0x26B84D4 VA: 0x26B84D4
	public EventModifiers get_modifiers() { }

	// RVA: 0x26B8540 Offset: 0x26B8540 VA: 0x26B8540
	public void set_modifiers(EventModifiers value) { }

	// RVA: 0x26B85B4 Offset: 0x26B85B4 VA: 0x26B85B4
	public int get_clickCount() { }

	// RVA: 0x26B8620 Offset: 0x26B8620 VA: 0x26B8620
	public char get_character() { }

	// RVA: 0x26B868C Offset: 0x26B868C VA: 0x26B868C
	public void set_character(char value) { }

	// RVA: 0x26B8700 Offset: 0x26B8700 VA: 0x26B8700
	public KeyCode get_keyCode() { }

	// RVA: 0x26B876C Offset: 0x26B876C VA: 0x26B876C
	public void set_keyCode(KeyCode value) { }

	// RVA: 0x26B87E0 Offset: 0x26B87E0 VA: 0x26B87E0
	public void set_displayIndex(int value) { }

	[FreeFunctionAttribute] // RVA: 0xBFB92C Offset: 0xBFB92C VA: 0xBFB92C
	// RVA: 0x26B8854 Offset: 0x26B8854 VA: 0x26B8854
	public EventType get_type() { }

	[FreeFunctionAttribute] // RVA: 0xBFB974 Offset: 0xBFB974 VA: 0xBFB974
	// RVA: 0x26B88C0 Offset: 0x26B88C0 VA: 0x26B88C0
	public void set_type(EventType value) { }

	[FreeFunctionAttribute] // RVA: 0xBFB9BC Offset: 0xBFB9BC VA: 0xBFB9BC
	// RVA: 0x26B8934 Offset: 0x26B8934 VA: 0x26B8934
	public string get_commandName() { }

	[NativeMethodAttribute] // RVA: 0xBFBA04 Offset: 0xBFBA04 VA: 0xBFBA04
	// RVA: 0x26B89A0 Offset: 0x26B89A0 VA: 0x26B89A0
	private void Internal_Use() { }

	[FreeFunctionAttribute] // RVA: 0xBFBA3C Offset: 0xBFBA3C VA: 0xBFBA3C
	// RVA: 0x26B8290 Offset: 0x26B8290 VA: 0x26B8290
	private static IntPtr Internal_Create(int displayIndex) { }

	[FreeFunctionAttribute] // RVA: 0xBFBA84 Offset: 0xBFBA84 VA: 0xBFBA84
	// RVA: 0x26B8A0C Offset: 0x26B8A0C VA: 0x26B8A0C
	private static void Internal_Destroy(IntPtr ptr) { }

	[FreeFunctionAttribute] // RVA: 0xBFBACC Offset: 0xBFBACC VA: 0xBFBACC
	// RVA: 0x26B8A78 Offset: 0x26B8A78 VA: 0x26B8A78
	public EventType GetTypeForControl(int controlID) { }

	// RVA: 0x26B8AEC Offset: 0x26B8AEC VA: 0x26B8AEC
	public static bool PopEvent(Event outEvent) { }

	// RVA: 0x26B8B58 Offset: 0x26B8B58 VA: 0x26B8B58
	private static void Internal_SetNativeEvent(IntPtr ptr) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xBFBB14 Offset: 0xBFBB14 VA: 0xBFBB14
	// RVA: 0x26B8BC4 Offset: 0x26B8BC4 VA: 0x26B8BC4
	internal static void Internal_MakeMasterEventCurrent(int displayIndex) { }

	// RVA: 0x26B8C98 Offset: 0x26B8C98 VA: 0x26B8C98 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x26B8D50 Offset: 0x26B8D50 VA: 0x26B8D50
	public bool get_shift() { }

	// RVA: 0x26B8D68 Offset: 0x26B8D68 VA: 0x26B8D68
	public bool get_alt() { }

	// RVA: 0x26B8D80 Offset: 0x26B8D80 VA: 0x26B8D80
	public static Event get_current() { }

	// RVA: 0x26B8DD0 Offset: 0x26B8DD0 VA: 0x26B8DD0
	public bool get_isKey() { }

	// RVA: 0x26B8DF0 Offset: 0x26B8DF0 VA: 0x26B8DF0
	public bool get_isMouse() { }

	// RVA: 0x26B8E2C Offset: 0x26B8E2C VA: 0x26B8E2C
	public static Event KeyboardEvent(string key) { }

	// RVA: 0x26BA5EC Offset: 0x26BA5EC VA: 0x26BA5EC Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x26BA69C Offset: 0x26BA69C VA: 0x26BA69C Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0x26BA8E8 Offset: 0x26BA8E8 VA: 0x26BA8E8 Slot: 3
	public override string ToString() { }

	// RVA: 0x26BB160 Offset: 0x26BB160 VA: 0x26BB160
	public void Use() { }

	// RVA: 0x26B83C4 Offset: 0x26B83C4 VA: 0x26B83C4
	private void get_mousePosition_Injected(out Vector2 ret) { }

	// RVA: 0x26B8460 Offset: 0x26B8460 VA: 0x26B8460
	private void get_delta_Injected(out Vector2 ret) { }
}

// Namespace: UnityEngine
public enum EventType // TypeDefIndex: 2730
{
	// Fields
	public int value__; // 0x0
	public const EventType MouseDown = 0;
	public const EventType MouseUp = 1;
	public const EventType MouseMove = 2;
	public const EventType MouseDrag = 3;
	public const EventType KeyDown = 4;
	public const EventType KeyUp = 5;
	public const EventType ScrollWheel = 6;
	public const EventType Repaint = 7;
	public const EventType Layout = 8;
	public const EventType DragUpdated = 9;
	public const EventType DragPerform = 10;
	public const EventType DragExited = 15;
	public const EventType Ignore = 11;
	public const EventType Used = 12;
	public const EventType ValidateCommand = 13;
	public const EventType ExecuteCommand = 14;
	public const EventType ContextClick = 16;
	public const EventType MouseEnterWindow = 20;
	public const EventType MouseLeaveWindow = 21;
	[EditorBrowsableAttribute] // RVA: 0xBFADD0 Offset: 0xBFADD0 VA: 0xBFADD0
	[ObsoleteAttribute] // RVA: 0xBFADD0 Offset: 0xBFADD0 VA: 0xBFADD0
	public const EventType mouseDown = 0;
	[EditorBrowsableAttribute] // RVA: 0xBFAE24 Offset: 0xBFAE24 VA: 0xBFAE24
	[ObsoleteAttribute] // RVA: 0xBFAE24 Offset: 0xBFAE24 VA: 0xBFAE24
	public const EventType mouseUp = 1;
	[EditorBrowsableAttribute] // RVA: 0xBFAE78 Offset: 0xBFAE78 VA: 0xBFAE78
	[ObsoleteAttribute] // RVA: 0xBFAE78 Offset: 0xBFAE78 VA: 0xBFAE78
	public const EventType mouseMove = 2;
	[ObsoleteAttribute] // RVA: 0xBFAECC Offset: 0xBFAECC VA: 0xBFAECC
	[EditorBrowsableAttribute] // RVA: 0xBFAECC Offset: 0xBFAECC VA: 0xBFAECC
	public const EventType mouseDrag = 3;
	[ObsoleteAttribute] // RVA: 0xBFAF20 Offset: 0xBFAF20 VA: 0xBFAF20
	[EditorBrowsableAttribute] // RVA: 0xBFAF20 Offset: 0xBFAF20 VA: 0xBFAF20
	public const EventType keyDown = 4;
	[EditorBrowsableAttribute] // RVA: 0xBFAF74 Offset: 0xBFAF74 VA: 0xBFAF74
	[ObsoleteAttribute] // RVA: 0xBFAF74 Offset: 0xBFAF74 VA: 0xBFAF74
	public const EventType keyUp = 5;
	[ObsoleteAttribute] // RVA: 0xBFAFC8 Offset: 0xBFAFC8 VA: 0xBFAFC8
	[EditorBrowsableAttribute] // RVA: 0xBFAFC8 Offset: 0xBFAFC8 VA: 0xBFAFC8
	public const EventType scrollWheel = 6;
	[ObsoleteAttribute] // RVA: 0xBFB01C Offset: 0xBFB01C VA: 0xBFB01C
	[EditorBrowsableAttribute] // RVA: 0xBFB01C Offset: 0xBFB01C VA: 0xBFB01C
	public const EventType repaint = 7;
	[ObsoleteAttribute] // RVA: 0xBFB070 Offset: 0xBFB070 VA: 0xBFB070
	[EditorBrowsableAttribute] // RVA: 0xBFB070 Offset: 0xBFB070 VA: 0xBFB070
	public const EventType layout = 8;
	[ObsoleteAttribute] // RVA: 0xBFB0C4 Offset: 0xBFB0C4 VA: 0xBFB0C4
	[EditorBrowsableAttribute] // RVA: 0xBFB0C4 Offset: 0xBFB0C4 VA: 0xBFB0C4
	public const EventType dragUpdated = 9;
	[EditorBrowsableAttribute] // RVA: 0xBFB118 Offset: 0xBFB118 VA: 0xBFB118
	[ObsoleteAttribute] // RVA: 0xBFB118 Offset: 0xBFB118 VA: 0xBFB118
	public const EventType dragPerform = 10;
	[EditorBrowsableAttribute] // RVA: 0xBFB16C Offset: 0xBFB16C VA: 0xBFB16C
	[ObsoleteAttribute] // RVA: 0xBFB16C Offset: 0xBFB16C VA: 0xBFB16C
	public const EventType ignore = 11;
	[ObsoleteAttribute] // RVA: 0xBFB1C0 Offset: 0xBFB1C0 VA: 0xBFB1C0
	[EditorBrowsableAttribute] // RVA: 0xBFB1C0 Offset: 0xBFB1C0 VA: 0xBFB1C0
	public const EventType used = 12;
}

// Namespace: UnityEngine
[FlagsAttribute] // RVA: 0xBFA824 Offset: 0xBFA824 VA: 0xBFA824
public enum EventModifiers // TypeDefIndex: 2731
{
	// Fields
	public int value__; // 0x0
	public const EventModifiers None = 0;
	public const EventModifiers Shift = 1;
	public const EventModifiers Control = 2;
	public const EventModifiers Alt = 4;
	public const EventModifiers Command = 8;
	public const EventModifiers Numeric = 16;
	public const EventModifiers CapsLock = 32;
	public const EventModifiers FunctionKey = 64;
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBFA834 Offset: 0xBFA834 VA: 0xBFA834
[NativeHeaderAttribute] // RVA: 0xBFA834 Offset: 0xBFA834 VA: 0xBFA834
public class GUI // TypeDefIndex: 2732
{
	// Fields
	private static int s_ScrollControlId; // 0x0
	private static int s_HotTextField; // 0x4
	private static readonly int s_BoxHash; // 0x8
	private static readonly int s_ButonHash; // 0xC
	private static readonly int s_RepeatButtonHash; // 0x10
	private static readonly int s_ToggleHash; // 0x14
	private static readonly int s_ButtonGridHash; // 0x18
	private static readonly int s_SliderHash; // 0x1C
	private static readonly int s_BeginGroupHash; // 0x20
	private static readonly int s_ScrollviewHash; // 0x24
	[DebuggerBrowsableAttribute] // RVA: 0xBFB214 Offset: 0xBFB214 VA: 0xBFB214
	[CompilerGeneratedAttribute] // RVA: 0xBFB214 Offset: 0xBFB214 VA: 0xBFB214
	private static int <scrollTroughSide>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xBFB250 Offset: 0xBFB250 VA: 0xBFB250
	[DebuggerBrowsableAttribute] // RVA: 0xBFB250 Offset: 0xBFB250 VA: 0xBFB250
	private static DateTime <nextScrollStepTime>k__BackingField; // 0x30
	private static GUISkin s_Skin; // 0x40
	private static readonly GenericStack s_ScrollViewStates; // 0x48

	// Properties
	public static Color color { get; set; }
	public static Color backgroundColor { get; set; }
	public static Color contentColor { get; set; }
	public static bool changed { get; set; }
	public static bool enabled { get; }
	public static int depth { get; set; }
	internal static bool usePageScrollbars { get; }
	internal static Material blendMaterial { get; }
	internal static Material blitMaterial { get; }
	internal static Material roundedRectMaterial { get; }
	internal static int scrollTroughSide { get; set; }
	internal static DateTime nextScrollStepTime { get; set; }
	public static GUISkin skin { get; set; }
	public static Matrix4x4 matrix { get; set; }
	public static string tooltip { get; }

	// Methods

	// RVA: 0x26BB2B4 Offset: 0x26BB2B4 VA: 0x26BB2B4
	private static void .cctor() { }

	// RVA: 0x26BB550 Offset: 0x26BB550 VA: 0x26BB550
	public static Color get_color() { }

	// RVA: 0x26BB634 Offset: 0x26BB634 VA: 0x26BB634
	public static void set_color(Color value) { }

	// RVA: 0x26BB714 Offset: 0x26BB714 VA: 0x26BB714
	public static Color get_backgroundColor() { }

	// RVA: 0x26BB7F8 Offset: 0x26BB7F8 VA: 0x26BB7F8
	public static void set_backgroundColor(Color value) { }

	// RVA: 0x26BB8D8 Offset: 0x26BB8D8 VA: 0x26BB8D8
	public static Color get_contentColor() { }

	// RVA: 0x26BB9BC Offset: 0x26BB9BC VA: 0x26BB9BC
	public static void set_contentColor(Color value) { }

	// RVA: 0x26BBA9C Offset: 0x26BBA9C VA: 0x26BBA9C
	public static bool get_changed() { }

	// RVA: 0x26BBAF4 Offset: 0x26BBAF4 VA: 0x26BBAF4
	public static void set_changed(bool value) { }

	// RVA: 0x26BBB60 Offset: 0x26BBB60 VA: 0x26BBB60
	public static bool get_enabled() { }

	// RVA: 0x26BBBB8 Offset: 0x26BBBB8 VA: 0x26BBBB8
	public static int get_depth() { }

	// RVA: 0x26BBC10 Offset: 0x26BBC10 VA: 0x26BBC10
	public static void set_depth(int value) { }

	// RVA: 0x26BBC7C Offset: 0x26BBC7C VA: 0x26BBC7C
	internal static bool get_usePageScrollbars() { }

	[FreeFunctionAttribute] // RVA: 0xBFBB24 Offset: 0xBFBB24 VA: 0xBFBB24
	// RVA: 0x26BBCD4 Offset: 0x26BBCD4 VA: 0x26BBCD4
	internal static Material get_blendMaterial() { }

	[FreeFunctionAttribute] // RVA: 0xBFBB5C Offset: 0xBFBB5C VA: 0xBFBB5C
	// RVA: 0x26BBD2C Offset: 0x26BBD2C VA: 0x26BBD2C
	internal static Material get_blitMaterial() { }

	[FreeFunctionAttribute] // RVA: 0xBFBB94 Offset: 0xBFBB94 VA: 0xBFBB94
	// RVA: 0x26BBD84 Offset: 0x26BBD84 VA: 0x26BBD84
	internal static Material get_roundedRectMaterial() { }

	// RVA: 0x26BBDDC Offset: 0x26BBDDC VA: 0x26BBDDC
	private static void GrabMouseControl(int id) { }

	// RVA: 0x26BBE48 Offset: 0x26BBE48 VA: 0x26BBE48
	private static bool HasMouseControl(int id) { }

	// RVA: 0x26BBEB4 Offset: 0x26BBEB4 VA: 0x26BBEB4
	private static void ReleaseMouseControl() { }

	[FreeFunctionAttribute] // RVA: 0xBFBBCC Offset: 0xBFBBCC VA: 0xBFBBCC
	// RVA: 0x26BBF0C Offset: 0x26BBF0C VA: 0x26BBF0C
	public static void SetNextControlName(string name) { }

	// RVA: 0x26BBF78 Offset: 0x26BBF78 VA: 0x26BBF78
	internal static void InternalRepaintEditorWindow() { }

	// RVA: 0x26BBFD0 Offset: 0x26BBFD0 VA: 0x26BBFD0
	private static string Internal_GetTooltip() { }

	[CompilerGeneratedAttribute] // RVA: 0xBFBC04 Offset: 0xBFBC04 VA: 0xBFBC04
	// RVA: 0x26BC028 Offset: 0x26BC028 VA: 0x26BC028
	internal static int get_scrollTroughSide() { }

	[CompilerGeneratedAttribute] // RVA: 0xBFBC14 Offset: 0xBFBC14 VA: 0xBFBC14
	// RVA: 0x26BC090 Offset: 0x26BC090 VA: 0x26BC090
	internal static void set_scrollTroughSide(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBFBC24 Offset: 0xBFBC24 VA: 0xBFBC24
	// RVA: 0x26BC0FC Offset: 0x26BC0FC VA: 0x26BC0FC
	internal static DateTime get_nextScrollStepTime() { }

	[CompilerGeneratedAttribute] // RVA: 0xBFBC34 Offset: 0xBFBC34 VA: 0xBFBC34
	// RVA: 0x26BB4D8 Offset: 0x26BB4D8 VA: 0x26BB4D8
	internal static void set_nextScrollStepTime(DateTime value) { }

	// RVA: 0x26BC164 Offset: 0x26BC164 VA: 0x26BC164
	public static void set_skin(GUISkin value) { }

	// RVA: 0x26BC30C Offset: 0x26BC30C VA: 0x26BC30C
	public static GUISkin get_skin() { }

	// RVA: 0x26BC258 Offset: 0x26BC258 VA: 0x26BC258
	internal static void DoSetSkin(GUISkin newSkin) { }

	// RVA: 0x26BC488 Offset: 0x26BC488 VA: 0x26BC488
	public static Matrix4x4 get_matrix() { }

	// RVA: 0x26BC530 Offset: 0x26BC530 VA: 0x26BC530
	public static void set_matrix(Matrix4x4 value) { }

	// RVA: 0x26BC574 Offset: 0x26BC574 VA: 0x26BC574
	public static string get_tooltip() { }

	// RVA: 0x26BC5E8 Offset: 0x26BC5E8 VA: 0x26BC5E8
	public static void Label(Rect position, string text) { }

	// RVA: 0x26BC854 Offset: 0x26BC854 VA: 0x26BC854
	public static void Label(Rect position, GUIContent content) { }

	// RVA: 0x26BC904 Offset: 0x26BC904 VA: 0x26BC904
	public static void Label(Rect position, string text, GUIStyle style) { }

	// RVA: 0x26BC7AC Offset: 0x26BC7AC VA: 0x26BC7AC
	public static void Label(Rect position, GUIContent content, GUIStyle style) { }

	// RVA: 0x26BCBD8 Offset: 0x26BCBD8 VA: 0x26BCBD8
	public static void DrawTexture(Rect position, Texture image) { }

	// RVA: 0x26BCC70 Offset: 0x26BCC70 VA: 0x26BCC70
	public static void DrawTexture(Rect position, Texture image, ScaleMode scaleMode) { }

	// RVA: 0x26BCD18 Offset: 0x26BCD18 VA: 0x26BCD18
	public static void DrawTexture(Rect position, Texture image, ScaleMode scaleMode, bool alphaBlend) { }

	// RVA: 0x26BCDC8 Offset: 0x26BCDC8 VA: 0x26BCDC8
	public static void DrawTexture(Rect position, Texture image, ScaleMode scaleMode, bool alphaBlend, float imageAspect) { }

	// RVA: 0x26BCEA4 Offset: 0x26BCEA4 VA: 0x26BCEA4
	public static void DrawTexture(Rect position, Texture image, ScaleMode scaleMode, bool alphaBlend, float imageAspect, Color color, float borderWidth, float borderRadius) { }

	// RVA: 0x26BCFD8 Offset: 0x26BCFD8 VA: 0x26BCFD8
	public static void DrawTexture(Rect position, Texture image, ScaleMode scaleMode, bool alphaBlend, float imageAspect, Color color, Vector4 borderWidths, float borderRadius) { }

	// RVA: 0x26BD138 Offset: 0x26BD138 VA: 0x26BD138
	public static void DrawTexture(Rect position, Texture image, ScaleMode scaleMode, bool alphaBlend, float imageAspect, Color color, Vector4 borderWidths, Vector4 borderRadiuses) { }

	// RVA: 0x26BD508 Offset: 0x26BD508 VA: 0x26BD508
	internal static bool CalculateScaledTextureRects(Rect position, ScaleMode scaleMode, float imageAspect, ref Rect outScreenRect, ref Rect outSourceRect) { }

	// RVA: 0x26BD734 Offset: 0x26BD734 VA: 0x26BD734
	public static void Box(Rect position, string text) { }

	// RVA: 0x26BD968 Offset: 0x26BD968 VA: 0x26BD968
	public static void Box(Rect position, GUIContent content) { }

	// RVA: 0x26BD81C Offset: 0x26BD81C VA: 0x26BD81C
	public static void Box(Rect position, GUIContent content, GUIStyle style) { }

	// RVA: 0x26BDA74 Offset: 0x26BDA74 VA: 0x26BDA74
	public static bool Button(Rect position, string text) { }

	// RVA: 0x26BDB5C Offset: 0x26BDB5C VA: 0x26BDB5C
	public static bool Button(Rect position, GUIContent content, GUIStyle style) { }

	// RVA: 0x26BDC58 Offset: 0x26BDC58 VA: 0x26BDC58
	internal static bool Button(Rect position, int id, GUIContent content, GUIStyle style) { }

	// RVA: 0x26BDDB8 Offset: 0x26BDDB8 VA: 0x26BDDB8
	public static bool RepeatButton(Rect position, GUIContent content, GUIStyle style) { }

	// RVA: 0x26BDE60 Offset: 0x26BDE60 VA: 0x26BDE60
	private static bool DoRepeatButton(Rect position, GUIContent content, GUIStyle style, FocusType focusType) { }

	// RVA: 0x26BE154 Offset: 0x26BE154 VA: 0x26BE154
	public static string PasswordField(Rect position, string password, char maskChar, int maxLength, GUIStyle style) { }

	// RVA: 0x26BE37C Offset: 0x26BE37C VA: 0x26BE37C
	internal static string PasswordFieldGetStrToShow(string password, char maskChar) { }

	// RVA: 0x26BE994 Offset: 0x26BE994 VA: 0x26BE994
	public static string TextArea(Rect position, string text) { }

	// RVA: 0x26BE8C4 Offset: 0x26BE8C4 VA: 0x26BE8C4
	internal static void DoTextField(Rect position, int id, GUIContent content, bool multiline, int maxLength, GUIStyle style) { }

	// RVA: 0x26BEAC0 Offset: 0x26BEAC0 VA: 0x26BEAC0
	internal static void DoTextField(Rect position, int id, GUIContent content, bool multiline, int maxLength, GUIStyle style, string secureText) { }

	// RVA: 0x26BE4D8 Offset: 0x26BE4D8 VA: 0x26BE4D8
	internal static void DoTextField(Rect position, int id, GUIContent content, bool multiline, int maxLength, GUIStyle style, string secureText, char maskChar) { }

	// RVA: 0x26BEC14 Offset: 0x26BEC14 VA: 0x26BEC14
	private static void HandleTextFieldEventForTouchscreen(Rect position, int id, GUIContent content, bool multiline, int maxLength, GUIStyle style, string secureText, char maskChar, TextEditor editor) { }

	// RVA: 0x26BF088 Offset: 0x26BF088 VA: 0x26BF088
	private static void HandleTextFieldEventForDesktop(Rect position, int id, GUIContent content, bool multiline, int maxLength, GUIStyle style, TextEditor editor) { }

	// RVA: 0x26BF95C Offset: 0x26BF95C VA: 0x26BF95C
	public static bool Toggle(Rect position, bool value, GUIContent content, GUIStyle style) { }

	// RVA: 0x26BFAF8 Offset: 0x26BFAF8 VA: 0x26BFAF8
	public static int Toolbar(Rect position, int selected, GUIContent[] contents, GUIStyle style, GUI.ToolbarButtonSize buttonSize) { }

	// RVA: 0x26BFBB8 Offset: 0x26BFBB8 VA: 0x26BFBB8
	internal static int Toolbar(Rect position, int selected, GUIContent[] contents, string[] controlNames, GUIStyle style, GUI.ToolbarButtonSize buttonSize) { }

	// RVA: 0x26BFCE4 Offset: 0x26BFCE4 VA: 0x26BFCE4
	internal static void FindStyles(ref GUIStyle style, out GUIStyle firstStyle, out GUIStyle midStyle, out GUIStyle lastStyle, string first, string mid, string last) { }

	// RVA: 0x26C0A78 Offset: 0x26C0A78 VA: 0x26C0A78
	internal static int CalcTotalHorizSpacing(int xCount, GUIStyle style, GUIStyle firstStyle, GUIStyle midStyle, GUIStyle lastStyle) { }

	// RVA: 0x26C0D9C Offset: 0x26C0D9C VA: 0x26C0D9C
	private static bool DoControl(Rect position, int id, bool on, GUIContent content, GUIStyle style) { }

	// RVA: 0x26BC9D8 Offset: 0x26BC9D8 VA: 0x26BC9D8
	private static void DoLabel(Rect position, GUIContent content, GUIStyle style) { }

	// RVA: 0x26BFA3C Offset: 0x26BFA3C VA: 0x26BFA3C
	internal static bool DoToggle(Rect position, int id, bool value, GUIContent content, GUIStyle style) { }

	// RVA: 0x26BDD08 Offset: 0x26BDD08 VA: 0x26BDD08
	internal static bool DoButton(Rect position, int id, GUIContent content, GUIStyle style) { }

	// RVA: 0x26BFF2C Offset: 0x26BFF2C VA: 0x26BFF2C
	private static int DoButtonGrid(Rect position, int selected, GUIContent[] contents, string[] controlNames, int xCount, GUIStyle style, GUIStyle firstStyle, GUIStyle midStyle, GUIStyle lastStyle, GUI.ToolbarButtonSize buttonSize) { }

	// RVA: 0x26C1258 Offset: 0x26C1258 VA: 0x26C1258
	private static Rect[] CalcMouseRects(Rect position, GUIContent[] contents, int xCount, float elemWidth, float elemHeight, GUIStyle style, GUIStyle firstStyle, GUIStyle midStyle, GUIStyle lastStyle, bool addBorders, GUI.ToolbarButtonSize buttonSize) { }

	// RVA: 0x26C17E4 Offset: 0x26C17E4 VA: 0x26C17E4
	public static float HorizontalSlider(Rect position, float value, float leftValue, float rightValue, GUIStyle slider, GUIStyle thumb) { }

	// RVA: 0x26C19E8 Offset: 0x26C19E8 VA: 0x26C19E8
	public static float VerticalSlider(Rect position, float value, float topValue, float bottomValue, GUIStyle slider, GUIStyle thumb) { }

	// RVA: 0x26C18BC Offset: 0x26C18BC VA: 0x26C18BC
	public static float Slider(Rect position, float value, float size, float start, float end, GUIStyle slider, GUIStyle thumb, bool horiz, int id) { }

	// RVA: 0x26C1B7C Offset: 0x26C1B7C VA: 0x26C1B7C
	public static float HorizontalScrollbar(Rect position, float value, float size, float leftValue, float rightValue, GUIStyle style) { }

	// RVA: 0x26C26F0 Offset: 0x26C26F0 VA: 0x26C26F0
	internal static bool ScrollerRepeatButton(int scrollerID, Rect rect, GUIStyle style) { }

	// RVA: 0x26C2998 Offset: 0x26C2998 VA: 0x26C2998
	public static float VerticalScrollbar(Rect position, float value, float size, float topValue, float bottomValue, GUIStyle style) { }

	// RVA: 0x26C20F0 Offset: 0x26C20F0 VA: 0x26C20F0
	internal static float Scroller(Rect position, float value, float size, float leftValue, float rightValue, GUIStyle slider, GUIStyle thumb, GUIStyle leftButton, GUIStyle rightButton, bool horiz) { }

	// RVA: 0x26C2B94 Offset: 0x26C2B94 VA: 0x26C2B94
	public static void BeginGroup(Rect position, GUIContent content, GUIStyle style) { }

	// RVA: 0x26C2C78 Offset: 0x26C2C78 VA: 0x26C2C78
	internal static void BeginGroup(Rect position, GUIContent content, GUIStyle style, Vector2 scrollOffset) { }

	// RVA: 0x26C2FA4 Offset: 0x26C2FA4 VA: 0x26C2FA4
	public static void EndGroup() { }

	// RVA: 0x26C3010 Offset: 0x26C3010 VA: 0x26C3010
	public static Vector2 BeginScrollView(Rect position, Vector2 scrollPosition, Rect viewRect) { }

	// RVA: 0x26C3130 Offset: 0x26C3130 VA: 0x26C3130
	internal static Vector2 BeginScrollView(Rect position, Vector2 scrollPosition, Rect viewRect, bool alwaysShowHorizontal, bool alwaysShowVertical, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar, GUIStyle background) { }

	// RVA: 0x26C408C Offset: 0x26C408C VA: 0x26C408C
	public static void EndScrollView() { }

	// RVA: 0x26C40EC Offset: 0x26C40EC VA: 0x26C40EC
	public static void EndScrollView(bool handleScrollWheel) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xBFBC44 Offset: 0xBFBC44 VA: 0xBFBC44
	// RVA: 0x26C44D8 Offset: 0x26C44D8 VA: 0x26C44D8
	internal static void CallWindowDelegate(GUI.WindowFunction func, int id, int instanceID, GUISkin _skin, int forceRect, float width, float height, GUIStyle style) { }

	// RVA: 0x26BB5C8 Offset: 0x26BB5C8 VA: 0x26BB5C8
	private static void get_color_Injected(out Color ret) { }

	// RVA: 0x26BB6A8 Offset: 0x26BB6A8 VA: 0x26BB6A8
	private static void set_color_Injected(ref Color value) { }

	// RVA: 0x26BB78C Offset: 0x26BB78C VA: 0x26BB78C
	private static void get_backgroundColor_Injected(out Color ret) { }

	// RVA: 0x26BB86C Offset: 0x26BB86C VA: 0x26BB86C
	private static void set_backgroundColor_Injected(ref Color value) { }

	// RVA: 0x26BB950 Offset: 0x26BB950 VA: 0x26BB950
	private static void get_contentColor_Injected(out Color ret) { }

	// RVA: 0x26BBA30 Offset: 0x26BBA30 VA: 0x26BBA30
	private static void set_contentColor_Injected(ref Color value) { }
}

// Namespace: 
public enum GUI.ToolbarButtonSize // TypeDefIndex: 2733
{
	// Fields
	public int value__; // 0x0
	public const GUI.ToolbarButtonSize Fixed = 0;
	public const GUI.ToolbarButtonSize FitToContents = 1;
}

// Namespace: 
public sealed class GUI.WindowFunction : MulticastDelegate // TypeDefIndex: 2734
{
	// Methods

	// RVA: 0x26C5364 Offset: 0x26C5364 VA: 0x26C5364
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x26C4E74 Offset: 0x26C4E74 VA: 0x26C4E74 Slot: 11
	public virtual void Invoke(int id) { }

	// RVA: 0x26C5374 Offset: 0x26C5374 VA: 0x26C5374 Slot: 12
	public virtual IAsyncResult BeginInvoke(int id, AsyncCallback callback, object object) { }

	// RVA: 0x26C5400 Offset: 0x26C5400 VA: 0x26C5400 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBFA894 Offset: 0xBFA894 VA: 0xBFA894
[NativeHeaderAttribute] // RVA: 0xBFA894 Offset: 0xBFA894 VA: 0xBFA894
[VisibleToOtherModulesAttribute] // RVA: 0xBFA894 Offset: 0xBFA894 VA: 0xBFA894
internal sealed class GUIClip // TypeDefIndex: 2735
{
	// Properties
	internal static Rect visibleRect { get; }

	// Methods

	[FreeFunctionAttribute] // RVA: 0xBFBC54 Offset: 0xBFBC54 VA: 0xBFBC54
	// RVA: 0x26C10D8 Offset: 0x26C10D8 VA: 0x26C10D8
	internal static Rect get_visibleRect() { }

	[VisibleToOtherModulesAttribute] // RVA: 0xBFBC8C Offset: 0xBFBC8C VA: 0xBFBC8C
	// RVA: 0x26C5478 Offset: 0x26C5478 VA: 0x26C5478
	internal static void Internal_Push(Rect screenRect, Vector2 scrollOffset, Vector2 renderOffset, bool resetOffset) { }

	[VisibleToOtherModulesAttribute] // RVA: 0xBFBD04 Offset: 0xBFBD04 VA: 0xBFBD04
	// RVA: 0x26C2FB8 Offset: 0x26C2FB8 VA: 0x26C2FB8
	internal static void Internal_Pop() { }

	[FreeFunctionAttribute] // RVA: 0xBFBD7C Offset: 0xBFBD7C VA: 0xBFBD7C
	// RVA: 0x26C5540 Offset: 0x26C5540 VA: 0x26C5540
	private static Vector2 Unclip_Vector2(Vector2 pos) { }

	[VisibleToOtherModulesAttribute] // RVA: 0xBFBDB4 Offset: 0xBFBDB4 VA: 0xBFBDB4
	[FreeFunctionAttribute] // RVA: 0xBFBDB4 Offset: 0xBFBDB4 VA: 0xBFBDB4
	// RVA: 0x26BC4E8 Offset: 0x26BC4E8 VA: 0x26BC4E8
	internal static Matrix4x4 GetMatrix() { }

	[VisibleToOtherModulesAttribute] // RVA: 0xBFBE50 Offset: 0xBFBE50 VA: 0xBFBE50
	// RVA: 0x26BC570 Offset: 0x26BC570 VA: 0x26BC570
	internal static void SetMatrix(Matrix4x4 m) { }

	// RVA: 0x26C2F9C Offset: 0x26C2F9C VA: 0x26C2F9C
	internal static void Push(Rect screenRect, Vector2 scrollOffset, Vector2 renderOffset, bool resetOffset) { }

	// RVA: 0x26C44D4 Offset: 0x26C44D4 VA: 0x26C44D4
	internal static void Pop() { }

	// RVA: 0x26C56BC Offset: 0x26C56BC VA: 0x26C56BC
	public static Vector2 Unclip(Vector2 pos) { }

	// RVA: 0x26C540C Offset: 0x26C540C VA: 0x26C540C
	private static void get_visibleRect_Injected(out Rect ret) { }

	// RVA: 0x26C54B4 Offset: 0x26C54B4 VA: 0x26C54B4
	private static void Internal_Push_Injected(ref Rect screenRect, ref Vector2 scrollOffset, ref Vector2 renderOffset, bool resetOffset) { }

	// RVA: 0x26C5570 Offset: 0x26C5570 VA: 0x26C5570
	private static void Unclip_Vector2_Injected(ref Vector2 pos, out Vector2 ret) { }

	// RVA: 0x26C55E4 Offset: 0x26C55E4 VA: 0x26C55E4
	private static void GetMatrix_Injected(out Matrix4x4 ret) { }

	// RVA: 0x26C5650 Offset: 0x26C5650 VA: 0x26C5650
	private static void SetMatrix_Injected(ref Matrix4x4 m) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBFA954 Offset: 0xBFA954 VA: 0xBFA954
[RequiredByNativeCodeAttribute] // RVA: 0xBFA954 Offset: 0xBFA954 VA: 0xBFA954
[Serializable]
public class GUIContent // TypeDefIndex: 2736
{
	// Fields
	[SerializeField] // RVA: 0xBFB28C Offset: 0xBFB28C VA: 0xBFB28C
	private string m_Text; // 0x10
	[SerializeField] // RVA: 0xBFB29C Offset: 0xBFB29C VA: 0xBFB29C
	private Texture m_Image; // 0x18
	[SerializeField] // RVA: 0xBFB2AC Offset: 0xBFB2AC VA: 0xBFB2AC
	private string m_Tooltip; // 0x20
	private static readonly GUIContent s_Text; // 0x0
	private static readonly GUIContent s_Image; // 0x8
	private static readonly GUIContent s_TextImage; // 0x10
	public static GUIContent none; // 0x18

	// Properties
	public string text { get; set; }
	public Texture image { set; }
	public string tooltip { get; set; }

	// Methods

	// RVA: 0x26C56EC Offset: 0x26C56EC VA: 0x26C56EC
	public void .ctor() { }

	// RVA: 0x26C5770 Offset: 0x26C5770 VA: 0x26C5770
	public void .ctor(string text) { }

	// RVA: 0x26C57F4 Offset: 0x26C57F4 VA: 0x26C57F4
	public void .ctor(string text, Texture image, string tooltip) { }

	// RVA: 0x26C58B0 Offset: 0x26C58B0 VA: 0x26C58B0
	public void .ctor(GUIContent src) { }

	// RVA: 0x26BE98C Offset: 0x26BE98C VA: 0x26BE98C
	public string get_text() { }

	// RVA: 0x26BEB98 Offset: 0x26BEB98 VA: 0x26BEB98
	public void set_text(string value) { }

	// RVA: 0x26C58A0 Offset: 0x26C58A0 VA: 0x26C58A0
	public void set_image(Texture value) { }

	// RVA: 0x26C10D0 Offset: 0x26C10D0 VA: 0x26C10D0
	public string get_tooltip() { }

	// RVA: 0x26C58A8 Offset: 0x26C58A8 VA: 0x26C58A8
	public void set_tooltip(string value) { }

	// RVA: 0x26BC6C8 Offset: 0x26BC6C8 VA: 0x26BC6C8
	internal static GUIContent Temp(string t) { }

	[VisibleToOtherModulesAttribute] // RVA: 0xBFBEC8 Offset: 0xBFBEC8 VA: 0xBFBEC8
	// RVA: 0x26C5994 Offset: 0x26C5994 VA: 0x26C5994
	internal static void ClearStaticCache() { }

	// RVA: 0x26C5ADC Offset: 0x26C5ADC VA: 0x26C5ADC
	private static void .cctor() { }
}

// Namespace: UnityEngine
public enum ScaleMode // TypeDefIndex: 2737
{
	// Fields
	public int value__; // 0x0
	public const ScaleMode StretchToFill = 0;
	public const ScaleMode ScaleAndCrop = 1;
	public const ScaleMode ScaleToFit = 2;
}

// Namespace: UnityEngine
public enum FocusType // TypeDefIndex: 2738
{
	// Fields
	public int value__; // 0x0
	[ObsoleteAttribute] // RVA: 0xBFB2BC Offset: 0xBFB2BC VA: 0xBFB2BC
	public const FocusType Native = 0;
	public const FocusType Keyboard = 1;
	public const FocusType Passive = 2;
}

// Namespace: UnityEngine
public class GUILayout // TypeDefIndex: 2739
{
	// Methods

	// RVA: 0x26C5B94 Offset: 0x26C5B94 VA: 0x26C5B94
	public static void Label(string text, GUILayoutOption[] options) { }

	// RVA: 0x26C5D24 Offset: 0x26C5D24 VA: 0x26C5D24
	public static void Label(GUIContent content, GUILayoutOption[] options) { }

	// RVA: 0x26C5DAC Offset: 0x26C5DAC VA: 0x26C5DAC
	public static void Label(GUIContent content, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C5C4C Offset: 0x26C5C4C VA: 0x26C5C4C
	private static void DoLabel(GUIContent content, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C5E2C Offset: 0x26C5E2C VA: 0x26C5E2C
	public static void Box(GUIContent content, GUILayoutOption[] options) { }

	// RVA: 0x26C5F8C Offset: 0x26C5F8C VA: 0x26C5F8C
	public static void Box(GUIContent content, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C5EB4 Offset: 0x26C5EB4 VA: 0x26C5EB4
	private static void DoBox(GUIContent content, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C5F90 Offset: 0x26C5F90 VA: 0x26C5F90
	public static bool Button(GUIContent content, GUILayoutOption[] options) { }

	// RVA: 0x26C60F0 Offset: 0x26C60F0 VA: 0x26C60F0
	public static bool Button(GUIContent content, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C6018 Offset: 0x26C6018 VA: 0x26C6018
	private static bool DoButton(GUIContent content, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C60F4 Offset: 0x26C60F4 VA: 0x26C60F4
	public static bool RepeatButton(GUIContent content, GUILayoutOption[] options) { }

	// RVA: 0x26C6254 Offset: 0x26C6254 VA: 0x26C6254
	public static bool RepeatButton(GUIContent content, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C617C Offset: 0x26C617C VA: 0x26C617C
	private static bool DoRepeatButton(GUIContent content, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C6258 Offset: 0x26C6258 VA: 0x26C6258
	public static string TextField(string text, GUILayoutOption[] options) { }

	// RVA: 0x26C6510 Offset: 0x26C6510 VA: 0x26C6510
	public static string TextField(string text, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C652C Offset: 0x26C652C VA: 0x26C652C
	public static string TextField(string text, int maxLength, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C6544 Offset: 0x26C6544 VA: 0x26C6544
	public static string PasswordField(string password, char maskChar, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C655C Offset: 0x26C655C VA: 0x26C655C
	public static string PasswordField(string password, char maskChar, int maxLength, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C62F0 Offset: 0x26C62F0 VA: 0x26C62F0
	private static string DoTextField(string text, int maxLength, bool multiline, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C6678 Offset: 0x26C6678 VA: 0x26C6678
	public static bool Toggle(bool value, GUIContent content, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C6680 Offset: 0x26C6680 VA: 0x26C6680
	private static bool DoToggle(bool value, GUIContent content, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C6768 Offset: 0x26C6768 VA: 0x26C6768
	public static int Toolbar(int selected, GUIContent[] contents, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C6778 Offset: 0x26C6778 VA: 0x26C6778
	public static int Toolbar(int selected, GUIContent[] contents, GUIStyle style, GUI.ToolbarButtonSize buttonSize, GUILayoutOption[] options) { }

	// RVA: 0x26C6B4C Offset: 0x26C6B4C VA: 0x26C6B4C
	public static float HorizontalSlider(float value, float leftValue, float rightValue, GUILayoutOption[] options) { }

	// RVA: 0x26C6C1C Offset: 0x26C6C1C VA: 0x26C6C1C
	private static float DoHorizontalSlider(float value, float leftValue, float rightValue, GUIStyle slider, GUIStyle thumb, GUILayoutOption[] options) { }

	// RVA: 0x26C6D54 Offset: 0x26C6D54 VA: 0x26C6D54
	public static float VerticalSlider(float value, float leftValue, float rightValue, GUILayoutOption[] options) { }

	// RVA: 0x26C6E24 Offset: 0x26C6E24 VA: 0x26C6E24
	private static float DoVerticalSlider(float value, float leftValue, float rightValue, GUIStyle slider, GUIStyle thumb, GUILayoutOption[] options) { }

	// RVA: 0x26C6F5C Offset: 0x26C6F5C VA: 0x26C6F5C
	public static void Space(float pixels) { }

	// RVA: 0x26C7350 Offset: 0x26C7350 VA: 0x26C7350
	public static void FlexibleSpace() { }

	// RVA: 0x26C771C Offset: 0x26C771C VA: 0x26C771C
	public static void BeginHorizontal(GUILayoutOption[] options) { }

	// RVA: 0x26C77BC Offset: 0x26C77BC VA: 0x26C77BC
	public static void BeginHorizontal(GUIContent content, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C7CB0 Offset: 0x26C7CB0 VA: 0x26C7CB0
	public static void EndHorizontal() { }

	// RVA: 0x26C7FA8 Offset: 0x26C7FA8 VA: 0x26C7FA8
	public static void BeginVertical(GUILayoutOption[] options) { }

	// RVA: 0x26C8048 Offset: 0x26C8048 VA: 0x26C8048
	public static void BeginVertical(GUIContent content, GUIStyle style, GUILayoutOption[] options) { }

	// RVA: 0x26C81E4 Offset: 0x26C81E4 VA: 0x26C81E4
	public static void EndVertical() { }

	// RVA: 0x26C8240 Offset: 0x26C8240 VA: 0x26C8240
	public static void BeginArea(Rect screenRect) { }

	// RVA: 0x26C85DC Offset: 0x26C85DC VA: 0x26C85DC
	public static void BeginArea(Rect screenRect, string text) { }

	// RVA: 0x26C8308 Offset: 0x26C8308 VA: 0x26C8308
	public static void BeginArea(Rect screenRect, GUIContent content, GUIStyle style) { }

	// RVA: 0x26C89C8 Offset: 0x26C89C8 VA: 0x26C89C8
	public static void EndArea() { }

	// RVA: 0x26C8BA8 Offset: 0x26C8BA8 VA: 0x26C8BA8
	public static Vector2 BeginScrollView(Vector2 scrollPosition, bool alwaysShowHorizontal, bool alwaysShowVertical, GUILayoutOption[] options) { }

	// RVA: 0x26C8C88 Offset: 0x26C8C88 VA: 0x26C8C88
	public static Vector2 BeginScrollView(Vector2 scrollPosition, bool alwaysShowHorizontal, bool alwaysShowVertical, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar, GUIStyle background, GUILayoutOption[] options) { }

	// RVA: 0x26C8FF8 Offset: 0x26C8FF8 VA: 0x26C8FF8
	public static void EndScrollView() { }

	// RVA: 0x26C9000 Offset: 0x26C9000 VA: 0x26C9000
	internal static void EndScrollView(bool handleScrollWheel) { }

	// RVA: 0x26C49F8 Offset: 0x26C49F8 VA: 0x26C49F8
	public static GUILayoutOption Width(float width) { }

	// RVA: 0x26C90C4 Offset: 0x26C90C4 VA: 0x26C90C4
	public static GUILayoutOption MinWidth(float minWidth) { }

	// RVA: 0x26C9158 Offset: 0x26C9158 VA: 0x26C9158
	public static GUILayoutOption MaxWidth(float maxWidth) { }

	// RVA: 0x26C4A88 Offset: 0x26C4A88 VA: 0x26C4A88
	public static GUILayoutOption Height(float height) { }

	// RVA: 0x26C91EC Offset: 0x26C91EC VA: 0x26C91EC
	public static GUILayoutOption MinHeight(float minHeight) { }

	// RVA: 0x26C9280 Offset: 0x26C9280 VA: 0x26C9280
	public static GUILayoutOption MaxHeight(float maxHeight) { }

	// RVA: 0x26C7684 Offset: 0x26C7684 VA: 0x26C7684
	public static GUILayoutOption ExpandWidth(bool expand) { }

	// RVA: 0x26C75EC Offset: 0x26C75EC VA: 0x26C75EC
	public static GUILayoutOption ExpandHeight(bool expand) { }
}

// Namespace: UnityEngine
public sealed class GUILayoutOption // TypeDefIndex: 2740
{
	// Fields
	internal GUILayoutOption.Type type; // 0x10
	internal object value; // 0x18

	// Methods

	// RVA: 0x26C9088 Offset: 0x26C9088 VA: 0x26C9088
	internal void .ctor(GUILayoutOption.Type type, object value) { }
}

// Namespace: 
