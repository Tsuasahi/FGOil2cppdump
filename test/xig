	// Properties
	public abstract GameObject gameObject { get; }
	public abstract RectTransform rectTransform { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract GameObject get_gameObject();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void RecalculateClipping();

	// RVA: -1 Offset: -1 Slot: 2
	public abstract RectTransform get_rectTransform();

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void Cull(Rect clipRect, bool validRect);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void SetClipRect(Rect value, bool validRect);
}

// Namespace: UnityEngine.UI
internal class RectangularVertexClipper // TypeDefIndex: 3136
{
	// Fields
	private readonly Vector3[] m_WorldCorners; // 0x10
	private readonly Vector3[] m_CanvasCorners; // 0x18

	// Methods

	// RVA: 0x21135C0 Offset: 0x21135C0 VA: 0x21135C0
	public void .ctor() { }

	// RVA: 0x2113880 Offset: 0x2113880 VA: 0x2113880
	public Rect GetCanvasRect(RectTransform t, Canvas c) { }
}

// Namespace: UnityEngine.UI
[AddComponentMenu] // RVA: 0xC129DC Offset: 0xC129DC VA: 0xC129DC
[ExecuteAlways] // RVA: 0xC129DC Offset: 0xC129DC VA: 0xC129DC
[RequireComponent] // RVA: 0xC129DC Offset: 0xC129DC VA: 0xC129DC
[DisallowMultipleComponent] // RVA: 0xC129DC Offset: 0xC129DC VA: 0xC129DC
public class AspectRatioFitter : UIBehaviour, ILayoutSelfController, ILayoutController // TypeDefIndex: 3137
{
	// Fields
	[SerializeField] // RVA: 0xC14ECC Offset: 0xC14ECC VA: 0xC14ECC
	private AspectRatioFitter.AspectMode m_AspectMode; // 0x18
	[SerializeField] // RVA: 0xC14EDC Offset: 0xC14EDC VA: 0xC14EDC
	private float m_AspectRatio; // 0x1C
	private RectTransform m_Rect; // 0x20
	private bool m_DelayedSetDirty; // 0x28
	private DrivenRectTransformTracker m_Tracker; // 0x29

	// Properties
	public AspectRatioFitter.AspectMode aspectMode { get; set; }
	public float aspectRatio { get; set; }
	private RectTransform rectTransform { get; }

	// Methods

	// RVA: 0x1F7B914 Offset: 0x1F7B914 VA: 0x1F7B914
	protected void .ctor() { }

	// RVA: 0x1F7B928 Offset: 0x1F7B928 VA: 0x1F7B928
	public AspectRatioFitter.AspectMode get_aspectMode() { }

	// RVA: 0x1F7B930 Offset: 0x1F7B930 VA: 0x1F7B930
	public void set_aspectMode(AspectRatioFitter.AspectMode value) { }

	// RVA: 0x1F7B9B0 Offset: 0x1F7B9B0 VA: 0x1F7B9B0
	public float get_aspectRatio() { }

	// RVA: 0x1F7B9B8 Offset: 0x1F7B9B8 VA: 0x1F7B9B8
	public void set_aspectRatio(float value) { }

	// RVA: 0x1F7BA34 Offset: 0x1F7BA34 VA: 0x1F7BA34
	private RectTransform get_rectTransform() { }

	// RVA: 0x1F7BACC Offset: 0x1F7BACC VA: 0x1F7BACC Slot: 5
	protected override void OnEnable() { }

	// RVA: 0x1F7BAD0 Offset: 0x1F7BAD0 VA: 0x1F7BAD0 Slot: 7
	protected override void OnDisable() { }

	// RVA: 0x1F7BB54 Offset: 0x1F7BB54 VA: 0x1F7BB54 Slot: 19
	protected virtual void Update() { }

	// RVA: 0x1F7BB68 Offset: 0x1F7BB68 VA: 0x1F7BB68 Slot: 10
	protected override void OnRectTransformDimensionsChange() { }

	// RVA: 0x1F7BB6C Offset: 0x1F7BB6C VA: 0x1F7BB6C
	private void UpdateRect() { }

	// RVA: 0x1F7BFC0 Offset: 0x1F7BFC0 VA: 0x1F7BFC0
	private float GetSizeDeltaToProduceSize(float size, int axis) { }

	// RVA: 0x1F7BEA8 Offset: 0x1F7BEA8 VA: 0x1F7BEA8
	private Vector2 GetParentSize() { }

	// RVA: 0x1F7C09C Offset: 0x1F7C09C VA: 0x1F7C09C Slot: 20
	public virtual void SetLayoutHorizontal() { }

	// RVA: 0x1F7C0A0 Offset: 0x1F7C0A0 VA: 0x1F7C0A0 Slot: 21
	public virtual void SetLayoutVertical() { }

	// RVA: 0x1F7B9AC Offset: 0x1F7B9AC VA: 0x1F7B9AC
	protected void SetDirty() { }
}

// Namespace: 
public enum AspectRatioFitter.AspectMode // TypeDefIndex: 3138
{
	// Fields
	public int value__; // 0x0
	public const AspectRatioFitter.AspectMode None = 0;
	public const AspectRatioFitter.AspectMode WidthControlsHeight = 1;
	public const AspectRatioFitter.AspectMode HeightControlsWidth = 2;
	public const AspectRatioFitter.AspectMode FitInParent = 3;
	public const AspectRatioFitter.AspectMode EnvelopeParent = 4;
}

// Namespace: UnityEngine.UI
[RequireComponent] // RVA: 0xC12A88 Offset: 0xC12A88 VA: 0xC12A88
[ExecuteAlways] // RVA: 0xC12A88 Offset: 0xC12A88 VA: 0xC12A88
[AddComponentMenu] // RVA: 0xC12A88 Offset: 0xC12A88 VA: 0xC12A88
public class CanvasScaler : UIBehaviour // TypeDefIndex: 3139
{
	// Fields
	[TooltipAttribute] // RVA: 0xC14EEC Offset: 0xC14EEC VA: 0xC14EEC
	[SerializeField] // RVA: 0xC14EEC Offset: 0xC14EEC VA: 0xC14EEC
	private CanvasScaler.ScaleMode m_UiScaleMode; // 0x18
	[TooltipAttribute] // RVA: 0xC14F38 Offset: 0xC14F38 VA: 0xC14F38
	[SerializeField] // RVA: 0xC14F38 Offset: 0xC14F38 VA: 0xC14F38
	protected float m_ReferencePixelsPerUnit; // 0x1C
	[TooltipAttribute] // RVA: 0xC14F84 Offset: 0xC14F84 VA: 0xC14F84
	[SerializeField] // RVA: 0xC14F84 Offset: 0xC14F84 VA: 0xC14F84
	protected float m_ScaleFactor; // 0x20
	[TooltipAttribute] // RVA: 0xC14FD0 Offset: 0xC14FD0 VA: 0xC14FD0
	[SerializeField] // RVA: 0xC14FD0 Offset: 0xC14FD0 VA: 0xC14FD0
	protected Vector2 m_ReferenceResolution; // 0x24
	[TooltipAttribute] // RVA: 0xC1501C Offset: 0xC1501C VA: 0xC1501C
	[SerializeField] // RVA: 0xC1501C Offset: 0xC1501C VA: 0xC1501C
	protected CanvasScaler.ScreenMatchMode m_ScreenMatchMode; // 0x2C
	[TooltipAttribute] // RVA: 0xC15068 Offset: 0xC15068 VA: 0xC15068
	[RangeAttribute] // RVA: 0xC15068 Offset: 0xC15068 VA: 0xC15068
	[SerializeField] // RVA: 0xC15068 Offset: 0xC15068 VA: 0xC15068
	protected float m_MatchWidthOrHeight; // 0x30
	private const float kLogBase = 2;
	[TooltipAttribute] // RVA: 0xC150CC Offset: 0xC150CC VA: 0xC150CC
	[SerializeField] // RVA: 0xC150CC Offset: 0xC150CC VA: 0xC150CC
	protected CanvasScaler.Unit m_PhysicalUnit; // 0x34
	[TooltipAttribute] // RVA: 0xC15118 Offset: 0xC15118 VA: 0xC15118
	[SerializeField] // RVA: 0xC15118 Offset: 0xC15118 VA: 0xC15118
	protected float m_FallbackScreenDPI; // 0x38
	[TooltipAttribute] // RVA: 0xC15164 Offset: 0xC15164 VA: 0xC15164
	[SerializeField] // RVA: 0xC15164 Offset: 0xC15164 VA: 0xC15164
	protected float m_DefaultSpriteDPI; // 0x3C
	[TooltipAttribute] // RVA: 0xC151B0 Offset: 0xC151B0 VA: 0xC151B0
	[SerializeField] // RVA: 0xC151B0 Offset: 0xC151B0 VA: 0xC151B0
	protected float m_DynamicPixelsPerUnit; // 0x40
	private Canvas m_Canvas; // 0x48
	private float m_PrevScaleFactor; // 0x50
	private float m_PrevReferencePixelsPerUnit; // 0x54

	// Properties
	public CanvasScaler.ScaleMode uiScaleMode { get; set; }
	public float referencePixelsPerUnit { get; set; }
	public float scaleFactor { get; set; }
	public Vector2 referenceResolution { get; set; }
	public CanvasScaler.ScreenMatchMode screenMatchMode { get; set; }
	public float matchWidthOrHeight { get; set; }
	public CanvasScaler.Unit physicalUnit { get; set; }
	public float fallbackScreenDPI { get; set; }
	public float defaultSpriteDPI { get; set; }
	public float dynamicPixelsPerUnit { get; set; }

	// Methods

	// RVA: 0x1F7C928 Offset: 0x1F7C928 VA: 0x1F7C928
	protected void .ctor() { }

	// RVA: 0x1F7C9B0 Offset: 0x1F7C9B0 VA: 0x1F7C9B0
	public CanvasScaler.ScaleMode get_uiScaleMode() { }

	// RVA: 0x1F7C9B8 Offset: 0x1F7C9B8 VA: 0x1F7C9B8
	public void set_uiScaleMode(CanvasScaler.ScaleMode value) { }

	// RVA: 0x1F7C9C0 Offset: 0x1F7C9C0 VA: 0x1F7C9C0
	public float get_referencePixelsPerUnit() { }

	// RVA: 0x1F7C9C8 Offset: 0x1F7C9C8 VA: 0x1F7C9C8
	public void set_referencePixelsPerUnit(float value) { }

	// RVA: 0x1F7C9D0 Offset: 0x1F7C9D0 VA: 0x1F7C9D0
	public float get_scaleFactor() { }

	// RVA: 0x1F7C9D8 Offset: 0x1F7C9D8 VA: 0x1F7C9D8
	public void set_scaleFactor(float value) { }

	// RVA: 0x1F7CA5C Offset: 0x1F7CA5C VA: 0x1F7CA5C
	public Vector2 get_referenceResolution() { }

	// RVA: 0x1F7CA64 Offset: 0x1F7CA64 VA: 0x1F7CA64
	public void set_referenceResolution(Vector2 value) { }

	// RVA: 0x1F7CB64 Offset: 0x1F7CB64 VA: 0x1F7CB64
	public CanvasScaler.ScreenMatchMode get_screenMatchMode() { }

	// RVA: 0x1F7CB6C Offset: 0x1F7CB6C VA: 0x1F7CB6C
	public void set_screenMatchMode(CanvasScaler.ScreenMatchMode value) { }

	// RVA: 0x1F7CB74 Offset: 0x1F7CB74 VA: 0x1F7CB74
	public float get_matchWidthOrHeight() { }

	// RVA: 0x1F7CB7C Offset: 0x1F7CB7C VA: 0x1F7CB7C
	public void set_matchWidthOrHeight(float value) { }

	// RVA: 0x1F7CB84 Offset: 0x1F7CB84 VA: 0x1F7CB84
	public CanvasScaler.Unit get_physicalUnit() { }

	// RVA: 0x1F7CB8C Offset: 0x1F7CB8C VA: 0x1F7CB8C
	public void set_physicalUnit(CanvasScaler.Unit value) { }

	// RVA: 0x1F7CB94 Offset: 0x1F7CB94 VA: 0x1F7CB94
	public float get_fallbackScreenDPI() { }

	// RVA: 0x1F7CB9C Offset: 0x1F7CB9C VA: 0x1F7CB9C
	public void set_fallbackScreenDPI(float value) { }

	// RVA: 0x1F7CBA4 Offset: 0x1F7CBA4 VA: 0x1F7CBA4
	public float get_defaultSpriteDPI() { }

	// RVA: 0x1F7CBAC Offset: 0x1F7CBAC VA: 0x1F7CBAC
	public void set_defaultSpriteDPI(float value) { }

	// RVA: 0x1F7CC2C Offset: 0x1F7CC2C VA: 0x1F7CC2C
	public float get_dynamicPixelsPerUnit() { }

	// RVA: 0x1F7CC34 Offset: 0x1F7CC34 VA: 0x1F7CC34
	public void set_dynamicPixelsPerUnit(float value) { }

	// RVA: 0x1F7CC3C Offset: 0x1F7CC3C VA: 0x1F7CC3C Slot: 5
	protected override void OnEnable() { }

	// RVA: 0x1F7CCA4 Offset: 0x1F7CCA4 VA: 0x1F7CCA4 Slot: 7
	protected override void OnDisable() { }

	// RVA: 0x1F7CD84 Offset: 0x1F7CD84 VA: 0x1F7CD84 Slot: 17
	protected virtual void Update() { }

	// RVA: 0x1F7CD94 Offset: 0x1F7CD94 VA: 0x1F7CD94 Slot: 18
	protected virtual void Handle() { }

	// RVA: 0x1F7CEB4 Offset: 0x1F7CEB4 VA: 0x1F7CEB4 Slot: 19
	protected virtual void HandleWorldCanvas() { }

	// RVA: 0x1F7CEE0 Offset: 0x1F7CEE0 VA: 0x1F7CEE0 Slot: 20
	protected virtual void HandleConstantPixelSize() { }

	// RVA: 0x1F7CF0C Offset: 0x1F7CF0C VA: 0x1F7CF0C Slot: 21
	protected virtual void HandleScaleWithScreenSize() { }

	// RVA: 0x1F7D1CC Offset: 0x1F7D1CC VA: 0x1F7D1CC Slot: 22
	protected virtual void HandleConstantPhysicalSize() { }

	// RVA: 0x1F7CCD4 Offset: 0x1F7CCD4 VA: 0x1F7CCD4
	protected void SetScaleFactor(float scaleFactor) { }

	// RVA: 0x1F7CD2C Offset: 0x1F7CD2C VA: 0x1F7CD2C
	protected void SetReferencePixelsPerUnit(float referencePixelsPerUnit) { }
}

// Namespace: 
public enum CanvasScaler.ScaleMode // TypeDefIndex: 3140
{
	// Fields
	public int value__; // 0x0
	public const CanvasScaler.ScaleMode ConstantPixelSize = 0;
	public const CanvasScaler.ScaleMode ScaleWithScreenSize = 1;
	public const CanvasScaler.ScaleMode ConstantPhysicalSize = 2;
}

// Namespace: 
public enum CanvasScaler.ScreenMatchMode // TypeDefIndex: 3141
{
	// Fields
	public int value__; // 0x0
	public const CanvasScaler.ScreenMatchMode MatchWidthOrHeight = 0;
	public const CanvasScaler.ScreenMatchMode Expand = 1;
	public const CanvasScaler.ScreenMatchMode Shrink = 2;
}

// Namespace: 
public enum CanvasScaler.Unit // TypeDefIndex: 3142
{
	// Fields
	public int value__; // 0x0
	public const CanvasScaler.Unit Centimeters = 0;
	public const CanvasScaler.Unit Millimeters = 1;
	public const CanvasScaler.Unit Inches = 2;
	public const CanvasScaler.Unit Points = 3;
	public const CanvasScaler.Unit Picas = 4;
}

// Namespace: UnityEngine.UI
[AddComponentMenu] // RVA: 0xC12B24 Offset: 0xC12B24 VA: 0xC12B24
[ExecuteAlways] // RVA: 0xC12B24 Offset: 0xC12B24 VA: 0xC12B24
[RequireComponent] // RVA: 0xC12B24 Offset: 0xC12B24 VA: 0xC12B24
public class ContentSizeFitter : UIBehaviour, ILayoutSelfController, ILayoutController // TypeDefIndex: 3143
{
	// Fields
	[SerializeField] // RVA: 0xC151FC Offset: 0xC151FC VA: 0xC151FC
	protected ContentSizeFitter.FitMode m_HorizontalFit; // 0x18
	[SerializeField] // RVA: 0xC1520C Offset: 0xC1520C VA: 0xC1520C
	protected ContentSizeFitter.FitMode m_VerticalFit; // 0x1C
	private RectTransform m_Rect; // 0x20
	private DrivenRectTransformTracker m_Tracker; // 0x28

	// Properties
	public ContentSizeFitter.FitMode horizontalFit { get; set; }
	public ContentSizeFitter.FitMode verticalFit { get; set; }
	private RectTransform rectTransform { get; }

	// Methods

	// RVA: 0x1F7F6F0 Offset: 0x1F7F6F0 VA: 0x1F7F6F0
	protected void .ctor() { }

	// RVA: 0x1F7F6FC Offset: 0x1F7F6FC VA: 0x1F7F6FC
	public ContentSizeFitter.FitMode get_horizontalFit() { }

	// RVA: 0x1F7F704 Offset: 0x1F7F704 VA: 0x1F7F704
	public void set_horizontalFit(ContentSizeFitter.FitMode value) { }

	// RVA: 0x1F7F818 Offset: 0x1F7F818 VA: 0x1F7F818
	public ContentSizeFitter.FitMode get_verticalFit() { }

	// RVA: 0x1F7F820 Offset: 0x1F7F820 VA: 0x1F7F820
	public void set_verticalFit(ContentSizeFitter.FitMode value) { }

	// RVA: 0x1F7F89C Offset: 0x1F7F89C VA: 0x1F7F89C
	private RectTransform get_rectTransform() { }

	// RVA: 0x1F7F934 Offset: 0x1F7F934 VA: 0x1F7F934 Slot: 5
	protected override void OnEnable() { }

	// RVA: 0x1F7F938 Offset: 0x1F7F938 VA: 0x1F7F938 Slot: 7
	protected override void OnDisable() { }

	// RVA: 0x1F7F9BC Offset: 0x1F7F9BC VA: 0x1F7F9BC Slot: 10
	protected override void OnRectTransformDimensionsChange() { }

	// RVA: 0x1F7F9C0 Offset: 0x1F7F9C0 VA: 0x1F7F9C0
	private void HandleSelfFittingAlongAxis(int axis) { }

	// RVA: 0x1F7FAA8 Offset: 0x1F7FAA8 VA: 0x1F7FAA8 Slot: 19
	public virtual void SetLayoutHorizontal() { }

	// RVA: 0x1F7FAD8 Offset: 0x1F7FAD8 VA: 0x1F7FAD8 Slot: 20
	public virtual void SetLayoutVertical() { }

	// RVA: 0x1F7F780 Offset: 0x1F7F780 VA: 0x1F7F780
	protected void SetDirty() { }
}

// Namespace: 
public enum ContentSizeFitter.FitMode // TypeDefIndex: 3144
{
	// Fields
	public int value__; // 0x0
	public const ContentSizeFitter.FitMode Unconstrained = 0;
	public const ContentSizeFitter.FitMode MinSize = 1;
	public const ContentSizeFitter.FitMode PreferredSize = 2;
}

// Namespace: UnityEngine.UI
[AddComponentMenu] // RVA: 0xC12BC0 Offset: 0xC12BC0 VA: 0xC12BC0
public class GridLayoutGroup : LayoutGroup // TypeDefIndex: 3145
{
	// Fields
	[SerializeField] // RVA: 0xC1521C Offset: 0xC1521C VA: 0xC1521C
	protected GridLayoutGroup.Corner m_StartCorner; // 0x58
	[SerializeField] // RVA: 0xC1522C Offset: 0xC1522C VA: 0xC1522C
	protected GridLayoutGroup.Axis m_StartAxis; // 0x5C
	[SerializeField] // RVA: 0xC1523C Offset: 0xC1523C VA: 0xC1523C
	protected Vector2 m_CellSize; // 0x60
	[SerializeField] // RVA: 0xC1524C Offset: 0xC1524C VA: 0xC1524C
	protected Vector2 m_Spacing; // 0x68
	[SerializeField] // RVA: 0xC1525C Offset: 0xC1525C VA: 0xC1525C
	protected GridLayoutGroup.Constraint m_Constraint; // 0x70
	[SerializeField] // RVA: 0xC1526C Offset: 0xC1526C VA: 0xC1526C
	protected int m_ConstraintCount; // 0x74

	// Properties
	public GridLayoutGroup.Corner startCorner { get; set; }
	public GridLayoutGroup.Axis startAxis { get; set; }
	public Vector2 cellSize { get; set; }
	public Vector2 spacing { get; set; }
	public GridLayoutGroup.Constraint constraint { get; set; }
	public int constraintCount { get; set; }

	// Methods

	// RVA: 0x214B1A8 Offset: 0x214B1A8 VA: 0x214B1A8
	protected void .ctor() { }

	// RVA: 0x214B358 Offset: 0x214B358 VA: 0x214B358
	public GridLayoutGroup.Corner get_startCorner() { }

	// RVA: 0x214B360 Offset: 0x214B360 VA: 0x214B360
	public void set_startCorner(GridLayoutGroup.Corner value) { }

	// RVA: 0x214B3C4 Offset: 0x214B3C4 VA: 0x214B3C4
	public GridLayoutGroup.Axis get_startAxis() { }

	// RVA: 0x214B3CC Offset: 0x214B3CC VA: 0x214B3CC
	public void set_startAxis(GridLayoutGroup.Axis value) { }

	// RVA: 0x214B430 Offset: 0x214B430 VA: 0x214B430
	public Vector2 get_cellSize() { }

	// RVA: 0x214B438 Offset: 0x214B438 VA: 0x214B438
	public void set_cellSize(Vector2 value) { }

	// RVA: 0x214B4A4 Offset: 0x214B4A4 VA: 0x214B4A4
	public Vector2 get_spacing() { }

	// RVA: 0x214B4AC Offset: 0x214B4AC VA: 0x214B4AC
	public void set_spacing(Vector2 value) { }

	// RVA: 0x214B518 Offset: 0x214B518 VA: 0x214B518
	public GridLayoutGroup.Constraint get_constraint() { }

	// RVA: 0x214B520 Offset: 0x214B520 VA: 0x214B520
	public void set_constraint(GridLayoutGroup.Constraint value) { }

	// RVA: 0x214B584 Offset: 0x214B584 VA: 0x214B584
	public int get_constraintCount() { }

	// RVA: 0x214B58C Offset: 0x214B58C VA: 0x214B58C
	public void set_constraintCount(int value) { }

	// RVA: 0x214B624 Offset: 0x214B624 VA: 0x214B624 Slot: 28
	public override void CalculateLayoutInputHorizontal() { }

	// RVA: 0x214BC18 Offset: 0x214BC18 VA: 0x214BC18 Slot: 29
	public override void CalculateLayoutInputVertical() { }

	// RVA: 0x214BEE8 Offset: 0x214BEE8 VA: 0x214BEE8 Slot: 37
	public override void SetLayoutHorizontal() { }

	// RVA: 0x214C6F0 Offset: 0x214C6F0 VA: 0x214C6F0 Slot: 38
	public override void SetLayoutVertical() { }

	// RVA: 0x214BEF0 Offset: 0x214BEF0 VA: 0x214BEF0
	private void SetCellsAlongAxis(int axis) { }
}

// Namespace: 
public enum GridLayoutGroup.Corner // TypeDefIndex: 3146
{
	// Fields
	public int value__; // 0x0
	public const GridLayoutGroup.Corner UpperLeft = 0;
	public const GridLayoutGroup.Corner UpperRight = 1;
	public const GridLayoutGroup.Corner LowerLeft = 2;
	public const GridLayoutGroup.Corner LowerRight = 3;
}

// Namespace: 
public enum GridLayoutGroup.Axis // TypeDefIndex: 3147
{
	// Fields
	public int value__; // 0x0
	public const GridLayoutGroup.Axis Horizontal = 0;
	public const GridLayoutGroup.Axis Vertical = 1;
}

// Namespace: 
public enum GridLayoutGroup.Constraint // TypeDefIndex: 3148
{
	// Fields
	public int value__; // 0x0
	public const GridLayoutGroup.Constraint Flexible = 0;
	public const GridLayoutGroup.Constraint FixedColumnCount = 1;
	public const GridLayoutGroup.Constraint FixedRowCount = 2;
}

// Namespace: UnityEngine.UI
[AddComponentMenu] // RVA: 0xC12BFC Offset: 0xC12BFC VA: 0xC12BFC
public class HorizontalLayoutGroup : HorizontalOrVerticalLayoutGroup // TypeDefIndex: 3149
{
	// Methods

	// RVA: 0x214C944 Offset: 0x214C944 VA: 0x214C944
	protected void .ctor() { }

	// RVA: 0x214C96C Offset: 0x214C96C VA: 0x214C96C Slot: 28
	public override void CalculateLayoutInputHorizontal() { }

	// RVA: 0x214CC34 Offset: 0x214CC34 VA: 0x214CC34 Slot: 29
	public override void CalculateLayoutInputVertical() { }

	// RVA: 0x214CC40 Offset: 0x214CC40 VA: 0x214CC40 Slot: 37
	public override void SetLayoutHorizontal() { }

	// RVA: 0x214D278 Offset: 0x214D278 VA: 0x214D278 Slot: 38
	public override void SetLayoutVertical() { }
}

// Namespace: UnityEngine.UI
public abstract class HorizontalOrVerticalLayoutGroup : LayoutGroup // TypeDefIndex: 3150
{
	// Fields
	[SerializeField] // RVA: 0xC1527C Offset: 0xC1527C VA: 0xC1527C
	protected float m_Spacing; // 0x58
	[SerializeField] // RVA: 0xC1528C Offset: 0xC1528C VA: 0xC1528C
	protected bool m_ChildForceExpandWidth; // 0x5C
	[SerializeField] // RVA: 0xC1529C Offset: 0xC1529C VA: 0xC1529C
	protected bool m_ChildForceExpandHeight; // 0x5D
	[SerializeField] // RVA: 0xC152AC Offset: 0xC152AC VA: 0xC152AC
	protected bool m_ChildControlWidth; // 0x5E
	[SerializeField] // RVA: 0xC152BC Offset: 0xC152BC VA: 0xC152BC
	protected bool m_ChildControlHeight; // 0x5F

	// Properties
	public float spacing { get; set; }
	public bool childForceExpandWidth { get; set; }
	public bool childForceExpandHeight { get; set; }
	public bool childControlWidth { get; set; }
	public bool childControlHeight { get; set; }

	// Methods

	// RVA: 0x214C958 Offset: 0x214C958 VA: 0x214C958
	protected void .ctor() { }

	// RVA: 0x214D284 Offset: 0x214D284 VA: 0x214D284
	public float get_spacing() { }

	// RVA: 0x214D28C Offset: 0x214D28C VA: 0x214D28C
	public void set_spacing(float value) { }

	// RVA: 0x214D2F0 Offset: 0x214D2F0 VA: 0x214D2F0
	public bool get_childForceExpandWidth() { }

	// RVA: 0x214D2F8 Offset: 0x214D2F8 VA: 0x214D2F8
	public void set_childForceExpandWidth(bool value) { }

	// RVA: 0x214D35C Offset: 0x214D35C VA: 0x214D35C
	public bool get_childForceExpandHeight() { }

	// RVA: 0x214D364 Offset: 0x214D364 VA: 0x214D364
	public void set_childForceExpandHeight(bool value) { }

	// RVA: 0x214D3C8 Offset: 0x214D3C8 VA: 0x214D3C8
	public bool get_childControlWidth() { }

	// RVA: 0x214D3D0 Offset: 0x214D3D0 VA: 0x214D3D0
	public void set_childControlWidth(bool value) { }

	// RVA: 0x214D434 Offset: 0x214D434 VA: 0x214D434
	public bool get_childControlHeight() { }

	// RVA: 0x214D43C Offset: 0x214D43C VA: 0x214D43C
	public void set_childControlHeight(bool value) { }

	// RVA: 0x214C998 Offset: 0x214C998 VA: 0x214C998
	protected void CalcAlongAxis(int axis, bool isVertical) { }

	// RVA: 0x214CC4C Offset: 0x214CC4C VA: 0x214CC4C
	protected void SetChildrenAlongAxis(int axis, bool isVertical) { }

	// RVA: 0x214D4A0 Offset: 0x214D4A0 VA: 0x214D4A0
	private void GetChildSizes(RectTransform child, int axis, bool controlSize, bool childForceExpand, out float min, out float preferred, out float flexible) { }
}

// Namespace: UnityEngine.UI
public interface ILayoutElement // TypeDefIndex: 3151
{
	// Properties
	public abstract float minWidth { get; }
	public abstract float preferredWidth { get; }
	public abstract float flexibleWidth { get; }
	public abstract float minHeight { get; }
	public abstract float preferredHeight { get; }
	public abstract float flexibleHeight { get; }
	public abstract int layoutPriority { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void CalculateLayoutInputHorizontal();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void CalculateLayoutInputVertical();

	// RVA: -1 Offset: -1 Slot: 2
	public abstract float get_minWidth();

	// RVA: -1 Offset: -1 Slot: 3
	public abstract float get_preferredWidth();

	// RVA: -1 Offset: -1 Slot: 4
	public abstract float get_flexibleWidth();

	// RVA: -1 Offset: -1 Slot: 5
	public abstract float get_minHeight();

	// RVA: -1 Offset: -1 Slot: 6
	public abstract float get_preferredHeight();

	// RVA: -1 Offset: -1 Slot: 7
	public abstract float get_flexibleHeight();

	// RVA: -1 Offset: -1 Slot: 8
	public abstract int get_layoutPriority();
}

// Namespace: UnityEngine.UI
public interface ILayoutController // TypeDefIndex: 3152
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void SetLayoutHorizontal();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void SetLayoutVertical();
}

// Namespace: UnityEngine.UI
public interface ILayoutGroup : ILayoutController // TypeDefIndex: 3153
{}

// Namespace: UnityEngine.UI
public interface ILayoutSelfController : ILayoutController // TypeDefIndex: 3154
{}

// Namespace: UnityEngine.UI
public interface ILayoutIgnorer // TypeDefIndex: 3155
{
	// Properties
	public abstract bool ignoreLayout { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract bool get_ignoreLayout();
}

// Namespace: UnityEngine.UI
[AddComponentMenu] // RVA: 0xC12C38 Offset: 0xC12C38 VA: 0xC12C38
[RequireComponent] // RVA: 0xC12C38 Offset: 0xC12C38 VA: 0xC12C38
[ExecuteAlways] // RVA: 0xC12C38 Offset: 0xC12C38 VA: 0xC12C38
public class LayoutElement : UIBehaviour, ILayoutElement, ILayoutIgnorer // TypeDefIndex: 3156
{
	// Fields
	[SerializeField] // RVA: 0xC152CC Offset: 0xC152CC VA: 0xC152CC
	private bool m_IgnoreLayout; // 0x18
	[SerializeField] // RVA: 0xC152DC Offset: 0xC152DC VA: 0xC152DC
	private float m_MinWidth; // 0x1C
	[SerializeField] // RVA: 0xC152EC Offset: 0xC152EC VA: 0xC152EC
	private float m_MinHeight; // 0x20
	[SerializeField] // RVA: 0xC152FC Offset: 0xC152FC VA: 0xC152FC
	private float m_PreferredWidth; // 0x24
	[SerializeField] // RVA: 0xC1530C Offset: 0xC1530C VA: 0xC1530C
	private float m_PreferredHeight; // 0x28
	[SerializeField] // RVA: 0xC1531C Offset: 0xC1531C VA: 0xC1531C
	private float m_FlexibleWidth; // 0x2C
	[SerializeField] // RVA: 0xC1532C Offset: 0xC1532C VA: 0xC1532C
	private float m_FlexibleHeight; // 0x30
	[SerializeField] // RVA: 0xC1533C Offset: 0xC1533C VA: 0xC1533C
	private int m_LayoutPriority; // 0x34

	// Properties
	public virtual bool ignoreLayout { get; set; }
	public virtual float minWidth { get; set; }
	public virtual float minHeight { get; set; }
	public virtual float preferredWidth { get; set; }
	public virtual float preferredHeight { get; set; }
	public virtual float flexibleWidth { get; set; }
	public virtual float flexibleHeight { get; set; }
	public virtual int layoutPriority { get; set; }

	// Methods

	// RVA: 0x216006C Offset: 0x216006C VA: 0x216006C
	protected void .ctor() { }

	// RVA: 0x2160094 Offset: 0x2160094 VA: 0x2160094 Slot: 27
	public virtual bool get_ignoreLayout() { }

	// RVA: 0x216009C Offset: 0x216009C VA: 0x216009C Slot: 28
	public virtual void set_ignoreLayout(bool value) { }

	// RVA: 0x21601D8 Offset: 0x21601D8 VA: 0x21601D8 Slot: 29
	public virtual void CalculateLayoutInputHorizontal() { }

	// RVA: 0x21601DC Offset: 0x21601DC VA: 0x21601DC Slot: 30
	public virtual void CalculateLayoutInputVertical() { }

	// RVA: 0x21601E0 Offset: 0x21601E0 VA: 0x21601E0 Slot: 31
	public virtual float get_minWidth() { }

	// RVA: 0x21601E8 Offset: 0x21601E8 VA: 0x21601E8 Slot: 32
	public virtual void set_minWidth(float value) { }

	// RVA: 0x2160264 Offset: 0x2160264 VA: 0x2160264 Slot: 33
	public virtual float get_minHeight() { }

	// RVA: 0x216026C Offset: 0x216026C VA: 0x216026C Slot: 34
	public virtual void set_minHeight(float value) { }

	// RVA: 0x21602E8 Offset: 0x21602E8 VA: 0x21602E8 Slot: 35
	public virtual float get_preferredWidth() { }

	// RVA: 0x21602F0 Offset: 0x21602F0 VA: 0x21602F0 Slot: 36
	public virtual void set_preferredWidth(float value) { }

	// RVA: 0x216036C Offset: 0x216036C VA: 0x216036C Slot: 37
	public virtual float get_preferredHeight() { }

	// RVA: 0x2160374 Offset: 0x2160374 VA: 0x2160374 Slot: 38
	public virtual void set_preferredHeight(float value) { }

	// RVA: 0x21603F0 Offset: 0x21603F0 VA: 0x21603F0 Slot: 39
	public virtual float get_flexibleWidth() { }

	// RVA: 0x21603F8 Offset: 0x21603F8 VA: 0x21603F8 Slot: 40
	public virtual void set_flexibleWidth(float value) { }

	// RVA: 0x2160474 Offset: 0x2160474 VA: 0x2160474 Slot: 41
	public virtual float get_flexibleHeight() { }

	// RVA: 0x216047C Offset: 0x216047C VA: 0x216047C Slot: 42
	public virtual void set_flexibleHeight(float value) { }

	// RVA: 0x21604F8 Offset: 0x21604F8 VA: 0x21604F8 Slot: 43
	public virtual int get_layoutPriority() { }

	// RVA: 0x2160500 Offset: 0x2160500 VA: 0x2160500 Slot: 44
	public virtual void set_layoutPriority(int value) { }

	// RVA: 0x216057C Offset: 0x216057C VA: 0x216057C Slot: 5
	protected override void OnEnable() { }

	// RVA: 0x21605A4 Offset: 0x21605A4 VA: 0x21605A4 Slot: 12
	protected override void OnTransformParentChanged() { }

	// RVA: 0x21605A8 Offset: 0x21605A8 VA: 0x21605A8 Slot: 7
	protected override void OnDisable() { }

	// RVA: 0x21605D0 Offset: 0x21605D0 VA: 0x21605D0 Slot: 13
	protected override void OnDidApplyAnimationProperties() { }

	// RVA: 0x21605D4 Offset: 0x21605D4 VA: 0x21605D4 Slot: 11
	protected override void OnBeforeTransformParentChanged() { }

	// RVA: 0x2160118 Offset: 0x2160118 VA: 0x2160118
	protected void SetDirty() { }
}

// Namespace: UnityEngine.UI
[DisallowMultipleComponent] // RVA: 0xC12CD4 Offset: 0xC12CD4 VA: 0xC12CD4
[ExecuteAlways] // RVA: 0xC12CD4 Offset: 0xC12CD4 VA: 0xC12CD4
[RequireComponent] // RVA: 0xC12CD4 Offset: 0xC12CD4 VA: 0xC12CD4
public abstract class LayoutGroup : UIBehaviour, ILayoutElement, ILayoutGroup, ILayoutController // TypeDefIndex: 3157
{
	// Fields
	[SerializeField] // RVA: 0xC1534C Offset: 0xC1534C VA: 0xC1534C
	protected RectOffset m_Padding; // 0x18
	[SerializeField] // RVA: 0xC1535C Offset: 0xC1535C VA: 0xC1535C
	protected TextAnchor m_ChildAlignment; // 0x20
	private RectTransform m_Rect; // 0x28
	protected DrivenRectTransformTracker m_Tracker; // 0x30
	private Vector2 m_TotalMinSize; // 0x34
	private Vector2 m_TotalPreferredSize; // 0x3C
	private Vector2 m_TotalFlexibleSize; // 0x44
	private List<RectTransform> m_RectChildren; // 0x50

	// Properties
	public RectOffset padding { get; set; }
	public TextAnchor childAlignment { get; set; }
	protected RectTransform rectTransform { get; }
	protected List<RectTransform> rectChildren { get; }
	public virtual float minWidth { get; }
	public virtual float preferredWidth { get; }
	public virtual float flexibleWidth { get; }
	public virtual float minHeight { get; }
	public virtual float preferredHeight { get; }
	public virtual float flexibleHeight { get; }
	public virtual int layoutPriority { get; }
	private bool isRootLayoutGroup { get; }

	// Methods

	// RVA: 0x214B254 Offset: 0x214B254 VA: 0x214B254
	protected void .ctor() { }

	// RVA: 0x214BBB0 Offset: 0x214BBB0 VA: 0x214BBB0
	public RectOffset get_padding() { }

	// RVA: 0x21605D8 Offset: 0x21605D8 VA: 0x21605D8
	public void set_padding(RectOffset value) { }

	// RVA: 0x216063C Offset: 0x216063C VA: 0x216063C
	public TextAnchor get_childAlignment() { }

	// RVA: 0x2160644 Offset: 0x2160644 VA: 0x2160644
	public void set_childAlignment(TextAnchor value) { }

	// RVA: 0x214BE50 Offset: 0x214BE50 VA: 0x214BE50
	protected RectTransform get_rectTransform() { }

	// RVA: 0x214BBA8 Offset: 0x214BBA8 VA: 0x214BBA8
	protected List<RectTransform> get_rectChildren() { }

	// RVA: 0x214B7E4 Offset: 0x214B7E4 VA: 0x214B7E4 Slot: 28
	public virtual void CalculateLayoutInputHorizontal() { }

	// RVA: -1 Offset: -1 Slot: 29
	public abstract void CalculateLayoutInputVertical();

	// RVA: 0x21606A8 Offset: 0x21606A8 VA: 0x21606A8 Slot: 30
	public virtual float get_minWidth() { }

	// RVA: 0x21606B8 Offset: 0x21606B8 VA: 0x21606B8 Slot: 31
	public virtual float get_preferredWidth() { }

	// RVA: 0x21606C8 Offset: 0x21606C8 VA: 0x21606C8 Slot: 32
	public virtual float get_flexibleWidth() { }

	// RVA: 0x21606D8 Offset: 0x21606D8 VA: 0x21606D8 Slot: 33
	public virtual float get_minHeight() { }

	// RVA: 0x21606E8 Offset: 0x21606E8 VA: 0x21606E8 Slot: 34
	public virtual float get_preferredHeight() { }

	// RVA: 0x21606F8 Offset: 0x21606F8 VA: 0x21606F8 Slot: 35
	public virtual float get_flexibleHeight() { }

	// RVA: 0x2160708 Offset: 0x2160708 VA: 0x2160708 Slot: 36
	public virtual int get_layoutPriority() { }

	// RVA: -1 Offset: -1 Slot: 37
	public abstract void SetLayoutHorizontal();

	// RVA: -1 Offset: -1 Slot: 38
	public abstract void SetLayoutVertical();

	// RVA: 0x2160710 Offset: 0x2160710 VA: 0x2160710 Slot: 5
	protected override void OnEnable() { }

	// RVA: 0x216082C Offset: 0x216082C VA: 0x216082C Slot: 7
	protected override void OnDisable() { }

	// RVA: 0x21608BC Offset: 0x21608BC VA: 0x21608BC Slot: 13
	protected override void OnDidApplyAnimationProperties() { }

	// RVA: 0x214D754 Offset: 0x214D754 VA: 0x214D754
	protected float GetTotalMinSize(int axis) { }

	// RVA: 0x214D748 Offset: 0x214D748 VA: 0x214D748
	protected float GetTotalPreferredSize(int axis) { }

	// RVA: 0x214D73C Offset: 0x214D73C VA: 0x214D73C
	protected float GetTotalFlexibleSize(int axis) { }

	// RVA: 0x214C6F8 Offset: 0x214C6F8 VA: 0x214C6F8
	protected float GetStartOffset(int axis, float requiredSpaceWithoutPadding) { }

	// RVA: 0x214D5D4 Offset: 0x214D5D4 VA: 0x214D5D4
	protected float GetAlignmentOnAxis(int axis) { }

	// RVA: 0x214BBB8 Offset: 0x214BBB8 VA: 0x214BBB8
	protected void SetLayoutInputForAxis(float totalMin, float totalPreferred, float totalFlexible, int axis) { }

	// RVA: 0x214D620 Offset: 0x214D620 VA: 0x214D620
	protected void SetChildAlongAxis(RectTransform rect, int axis, float pos) { }

	// RVA: 0x214C850 Offset: 0x214C850 VA: 0x214C850
	protected void SetChildAlongAxis(RectTransform rect, int axis, float pos, float size) { }

	// RVA: 0x21608C0 Offset: 0x21608C0 VA: 0x21608C0
	private bool get_isRootLayoutGroup() { }

	// RVA: 0x2160A2C Offset: 0x2160A2C VA: 0x2160A2C Slot: 10
	protected override void OnRectTransformDimensionsChange() { }

	// RVA: 0x2160A6C Offset: 0x2160A6C VA: 0x2160A6C Slot: 39
	protected virtual void OnTransformChildrenChanged() { }

	// RVA: -1 Offset: -1
	protected void SetProperty<T>(ref T currentValue, T newValue) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1CAE0 Offset: 0x1C1CAE0 VA: 0x1C1CAE0
	|-LayoutGroup.SetProperty<bool>
	|
	|-RVA: 0x1C1CB6C Offset: 0x1C1CB6C VA: 0x1C1CB6C
	|-LayoutGroup.SetProperty<int>
	|
	|-RVA: 0x1C1CBF8 Offset: 0x1C1CBF8 VA: 0x1C1CBF8
	|-LayoutGroup.SetProperty<object>
	|-LayoutGroup.SetProperty<RectOffset>
	|
	|-RVA: 0x1C1CC74 Offset: 0x1C1CC74 VA: 0x1C1CC74
	|-LayoutGroup.SetProperty<float>
	|
	|-RVA: 0x1C1CD08 Offset: 0x1C1CD08 VA: 0x1C1CD08
	|-LayoutGroup.SetProperty<TextAnchor>
	|
	|-RVA: 0x1C1CDF0 Offset: 0x1C1CDF0 VA: 0x1C1CDF0
	|-LayoutGroup.SetProperty<GridLayoutGroup.Axis>
	|
	|-RVA: 0x1C1CED8 Offset: 0x1C1CED8 VA: 0x1C1CED8
	|-LayoutGroup.SetProperty<GridLayoutGroup.Constraint>
	|
	|-RVA: 0x1C1CFC0 Offset: 0x1C1CFC0 VA: 0x1C1CFC0
	|-LayoutGroup.SetProperty<GridLayoutGroup.Corner>
	|
	|-RVA: 0x1C1D0A8 Offset: 0x1C1D0A8 VA: 0x1C1D0A8
	|-LayoutGroup.SetProperty<Vector2>
	*/

	// RVA: 0x2160738 Offset: 0x2160738 VA: 0x2160738
	protected void SetDirty() { }

	[DebuggerHiddenAttribute] // RVA: 0xC15AB4 Offset: 0xC15AB4 VA: 0xC15AB4
	// RVA: 0x2160A70 Offset: 0x2160A70 VA: 0x2160A70
	private IEnumerator DelayedSetDirty(RectTransform rectTransform) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC12FB0 Offset: 0xC12FB0 VA: 0xC12FB0
private sealed class LayoutGroup.<DelayedSetDirty>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 3158
{
	// Fields
	internal RectTransform rectTransform; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xC15E98 Offset: 0xC15E98 VA: 0xC15E98
	// RVA: 0x210AEAC Offset: 0x210AEAC VA: 0x210AEAC
	public void .ctor() { }

	// RVA: 0x210AEB4 Offset: 0x210AEB4 VA: 0x210AEB4 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xC15EA8 Offset: 0xC15EA8 VA: 0xC15EA8
	// RVA: 0x210B374 Offset: 0x210B374 VA: 0x210B374 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC15EB8 Offset: 0xC15EB8 VA: 0xC15EB8
	// RVA: 0x210B37C Offset: 0x210B37C VA: 0x210B37C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC15EC8 Offset: 0xC15EC8 VA: 0xC15EC8
	// RVA: 0x210B384 Offset: 0x210B384 VA: 0x210B384 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xC15ED8 Offset: 0xC15ED8 VA: 0xC15ED8
	// RVA: 0x210B398 Offset: 0x210B398 VA: 0x210B398 Slot: 6
	public void Reset() { }
}

// Namespace: UnityEngine.UI
public class LayoutRebuilder : ICanvasElement // TypeDefIndex: 3159
{
	// Fields
	private RectTransform m_ToRebuild; // 0x10
	private int m_CachedHashFromTransform; // 0x18
	private static ObjectPool<LayoutRebuilder> s_Rebuilders; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC1536C Offset: 0xC1536C VA: 0xC1536C
	private static RectTransform.ReapplyDrivenProperties <>f__mg$cache0; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC1537C Offset: 0xC1537C VA: 0xC1537C
	private static Predicate<Component> <>f__am$cache0; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC1538C Offset: 0xC1538C VA: 0xC1538C
	private static UnityAction<Component> <>f__am$cache1; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC1539C Offset: 0xC1539C VA: 0xC1539C
	private static UnityAction<Component> <>f__am$cache2; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC153AC Offset: 0xC153AC VA: 0xC153AC
	private static UnityAction<Component> <>f__am$cache3; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC153BC Offset: 0xC153BC VA: 0xC153BC
	private static UnityAction<Component> <>f__am$cache4; // 0x30

	// Properties
	public Transform transform { get; }

	// Methods

