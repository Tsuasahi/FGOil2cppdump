	public const SpotEntity.enSpotCondType NOT_EVENT_STATUS = 26;
	public const SpotEntity.enSpotCondType MISSION_CLEAR = 27;
	public const SpotEntity.enSpotCondType NOT_MISSION_CLEAR = 28;
	public const SpotEntity.enSpotCondType MISSION_CLEAR_ONLY = 29;
	public const SpotEntity.enSpotCondType MULTIPLE_DATE = 30;
	public const SpotEntity.enSpotCondType COMMON_RELEASE = 31;
}

// Namespace: 
public enum SpotEntity.FlagKind // TypeDefIndex: 7316
{
	// Fields
	public int value__; // 0x0
	public const SpotEntity.FlagKind NONE = 0;
	public const SpotEntity.FlagKind NOT_DISPLAY = 1;
	public const SpotEntity.FlagKind MOVE_SPOT = 2;
	public const SpotEntity.FlagKind HIDE_NAME = 3;
	public const SpotEntity.FlagKind INACTIVE_DISPLAY_NAME = 4;
	public const SpotEntity.FlagKind SORTED_BY_RELEASE_QUEST = 5;
	public const SpotEntity.FlagKind FOLDER_SPOT_HIDDEN = 6;
}

// Namespace: 
public enum SpotEntity.Flag // TypeDefIndex: 7317
{
	// Fields
	public int value__; // 0x0
	public const SpotEntity.Flag NONE = 1;
	public const SpotEntity.Flag NOT_DISPLAY = 2;
	public const SpotEntity.Flag MOVE_SPOT = 4;
	public const SpotEntity.Flag HIDE_NAME = 8;
	public const SpotEntity.Flag INACTIVE_DISPLAY_NAME = 16;
	public const SpotEntity.Flag SORTED_BY_RELEASE_QUEST = 32;
	public const SpotEntity.Flag FOLDER_SPOT_HIDDEN = 64;
}

// Namespace: 
public class SpotImageEntity : DataEntityBase<string> // TypeDefIndex: 7318
{
	// Fields
	public int spotId; // 0x10
	public int priority; // 0x14
	public int imageId; // 0x18
	public int dispCondType; // 0x1C
	public int dispTargetId; // 0x20
	public int dispTargetValue; // 0x24

	// Methods

	// RVA: 0x13E1FEC Offset: 0x13E1FEC VA: 0x13E1FEC
	public void .ctor() { }

	// RVA: 0x13E203C Offset: 0x13E203C VA: 0x13E203C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x13E204C Offset: 0x13E204C VA: 0x13E204C
	public static string CreatePK(int spotId, int priority) { }
}

// Namespace: 
public class SpotImageMaster : DataMasterBase<SpotImageMaster, SpotImageEntity, string> // TypeDefIndex: 7319
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55F1C Offset: 0xC55F1C VA: 0xC55F1C
	private static Comparison<SpotImageEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x13E205C Offset: 0x13E205C VA: 0x13E205C
	public void .ctor() { }

	// RVA: 0x13E20B0 Offset: 0x13E20B0 VA: 0x13E20B0
	public SpotImageEntity GetEntity(int spotId, int priority) { }

	// RVA: 0x13E2124 Offset: 0x13E2124 VA: 0x13E2124
	public bool TryGetEntity(out SpotImageEntity entity, int spotId, int priority) { }

	// RVA: 0x13E1DD4 Offset: 0x13E1DD4 VA: 0x13E1DD4
	public SpotImageEntity[] GetImageList(int spot_id) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA8E8 Offset: 0xCCA8E8 VA: 0xCCA8E8
	// RVA: 0x13E21A8 Offset: 0x13E21A8 VA: 0x13E21A8
	private static int <GetImageList>m__0(SpotImageEntity a, SpotImageEntity b) { }
}

// Namespace: 
public class SpotMaster : DataMasterBase<SpotMaster, SpotEntity, int> // TypeDefIndex: 7320
{
	// Methods

	// RVA: 0x13E35D4 Offset: 0x13E35D4 VA: 0x13E35D4
	public void .ctor() { }

	// RVA: 0x13E3628 Offset: 0x13E3628 VA: 0x13E3628
	public SpotEntity[] getList(int Map_id) { }
}

// Namespace: 
public class SpotPathEntity : DataEntityBase<int> // TypeDefIndex: 7321
{
	// Fields
	public int spotId; // 0x10
	public int pathId; // 0x14
	public int valueType; // 0x18
	public int targetId; // 0x1C
	public int targetValue; // 0x20
	public long distance; // 0x28
	public Dictionary<string, object> script; // 0x30

	// Methods

	// RVA: 0x13E3798 Offset: 0x13E3798 VA: 0x13E3798
	public void .ctor() { }

	// RVA: 0x13E37E8 Offset: 0x13E37E8 VA: 0x13E37E8 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x13E37F0 Offset: 0x13E37F0 VA: 0x13E37F0
	public SpotPathEntity.ValueType GetValueType() { }

	// RVA: 0x13E37F8 Offset: 0x13E37F8 VA: 0x13E37F8
	public object getScriptObj(string key) { }

	// RVA: 0x13E3878 Offset: 0x13E3878 VA: 0x13E3878
	public int getScriptIntParam(string key, int defVal = -1) { }

	// RVA: 0x13E38F0 Offset: 0x13E38F0 VA: 0x13E38F0
	public bool IsStopRaidDeadTime() { }

	// RVA: 0x13E3950 Offset: 0x13E3950 VA: 0x13E3950
	public int GetMapGimmickId() { }

	// RVA: 0x13E39A4 Offset: 0x13E39A4 VA: 0x13E39A4
	public int GetMapGimmickEffectId() { }
}

// Namespace: 
public enum SpotPathEntity.ValueType // TypeDefIndex: 7322
{
	// Fields
	public int value__; // 0x0
	public const SpotPathEntity.ValueType NONE = 0;
	public const SpotPathEntity.ValueType EVENT_RACE = 1;
	public const SpotPathEntity.ValueType EVENT_TIME_LIMIT_RAID = 2;
}

// Namespace: 
public class SpotPathMaster : DataMasterBase<SpotPathMaster, SpotPathEntity, int> // TypeDefIndex: 7323
{
	// Methods

	// RVA: 0x13E39F8 Offset: 0x13E39F8 VA: 0x13E39F8
	public void .ctor() { }

	// RVA: 0x13E3A4C Offset: 0x13E3A4C VA: 0x13E3A4C
	public static int CreateTargetId(int eventId, int termId) { }

	// RVA: 0x13E3A58 Offset: 0x13E3A58 VA: 0x13E3A58
	public SpotPathEntity GetSpotPathEntity(int eventId, int termId, int groupId) { }

	// RVA: 0x13E3BAC Offset: 0x13E3BAC VA: 0x13E3BAC
	public int GetRaceSpotId(int eventId, int termId, int groupId) { }
}

// Namespace: 
public class SpotRoadEntity : DataEntityBase<int> // TypeDefIndex: 7324
{
	// Fields
	public int id; // 0x10
	public int mapId; // 0x14
	public int srcSpotId; // 0x18
	public int dstSpotId; // 0x1C
	public int type; // 0x20
	public int imageId; // 0x24
	public int dispCondType; // 0x28
	public int dispTargetId; // 0x2C
	public int dispTargetValue; // 0x30
	public int dispCondType2; // 0x34
	public int dispTargetId2; // 0x38
	public int dispTargetValue2; // 0x3C
	public int activeCondType; // 0x40
	public int activeTargetId; // 0x44
	public int activeTargetValue; // 0x48

	// Methods

	// RVA: 0x13E3BC8 Offset: 0x13E3BC8 VA: 0x13E3BC8
	public void .ctor() { }

	// RVA: 0x13E3C18 Offset: 0x13E3C18 VA: 0x13E3C18
	public void .ctor(SpotRoadEntity cSrc) { }

	// RVA: 0x13E3DC4 Offset: 0x13E3DC4 VA: 0x13E3DC4
	public int getSpotRoadId() { }

	// RVA: 0x13E3DCC Offset: 0x13E3DCC VA: 0x13E3DCC
	public int getMapId() { }

	// RVA: 0x13E3DD4 Offset: 0x13E3DD4 VA: 0x13E3DD4
	public int getSrcSpotId() { }

	// RVA: 0x13E3DDC Offset: 0x13E3DDC VA: 0x13E3DDC
	public int getDstSpotId() { }

	// RVA: 0x13E3DE4 Offset: 0x13E3DE4 VA: 0x13E3DE4
	public int getType() { }

	// RVA: 0x13E3DEC Offset: 0x13E3DEC VA: 0x13E3DEC
	public int getImageId() { }

	// RVA: 0x13E3DF4 Offset: 0x13E3DF4 VA: 0x13E3DF4
	public int getDispCondType() { }

	// RVA: 0x13E3DFC Offset: 0x13E3DFC VA: 0x13E3DFC
	public int getDispTargetId() { }

	// RVA: 0x13E3E04 Offset: 0x13E3E04 VA: 0x13E3E04
	public int getDispTargetValue() { }

	// RVA: 0x13E3E0C Offset: 0x13E3E0C VA: 0x13E3E0C
	public int getDispCondType2() { }

	// RVA: 0x13E3E14 Offset: 0x13E3E14 VA: 0x13E3E14
	public int getDispTargetId2() { }

	// RVA: 0x13E3E1C Offset: 0x13E3E1C VA: 0x13E3E1C
	public int getDispTargetValue2() { }

	// RVA: 0x13E3E24 Offset: 0x13E3E24 VA: 0x13E3E24
	public int getActiveCondType() { }

	// RVA: 0x13E3E2C Offset: 0x13E3E2C VA: 0x13E3E2C
	public int getActiveTargetId() { }

	// RVA: 0x13E3E34 Offset: 0x13E3E34 VA: 0x13E3E34
	public int getActiveTargetValue() { }

	// RVA: 0x13E3E3C Offset: 0x13E3E3C VA: 0x13E3E3C Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class SpotRoadMaster : DataMasterBase<SpotRoadMaster, SpotRoadEntity, int> // TypeDefIndex: 7325
{
	// Methods

	// RVA: 0x13E3E44 Offset: 0x13E3E44 VA: 0x13E3E44
	public void .ctor() { }

	// RVA: 0x13E3E98 Offset: 0x13E3E98 VA: 0x13E3E98
	public SpotRoadEntity[] getList(int map_id) { }
}

// Namespace: 
public class StageEntity : DataEntityBase<string> // TypeDefIndex: 7326
{
	// Fields
	public static readonly int DEFAULT_ENEMY_ACTION_COUNT; // 0x0
	public int questId; // 0x10
	public int questPhase; // 0x14
	public string name; // 0x18
	public int wave; // 0x20
	public long npcDeckId; // 0x28
	public int bgmId; // 0x30
	public int startEffectId; // 0x34
	public int enemyInfo; // 0x38
	public Dictionary<string, object> script; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC55F2C Offset: 0xC55F2C VA: 0xC55F2C
	private static Converter<object, int> <>f__am$cache0; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC55F3C Offset: 0xC55F3C VA: 0xC55F3C
	private static Converter<object, int> <>f__am$cache1; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC55F4C Offset: 0xC55F4C VA: 0xC55F4C
	private static Converter<object, int> <>f__am$cache2; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC55F5C Offset: 0xC55F5C VA: 0xC55F5C
	private static Converter<object, string> <>f__am$cache3; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC55F6C Offset: 0xC55F6C VA: 0xC55F6C
	private static Func<List<object>, SubBgmPlayArgs[]> <>f__mg$cache0; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC55F7C Offset: 0xC55F7C VA: 0xC55F7C
	private static Func<int, int> <>f__am$cache4; // 0x30

	// Methods

	// RVA: 0x13E762C Offset: 0x13E762C VA: 0x13E762C
	public void .ctor() { }

	// RVA: 0x13E767C Offset: 0x13E767C VA: 0x13E767C
	public void .ctor(StageEntity cSrc) { }

	// RVA: 0x13E7764 Offset: 0x13E7764 VA: 0x13E7764
	public int getQuestId() { }

	// RVA: 0x13E776C Offset: 0x13E776C VA: 0x13E776C
	public int getPhase() { }

	// RVA: 0x13E7774 Offset: 0x13E7774 VA: 0x13E7774
	public int getWave() { }

	// RVA: 0x13E777C Offset: 0x13E777C VA: 0x13E777C
	public bool isNotDisplayRemain() { }

	// RVA: 0x13E778C Offset: 0x13E778C VA: 0x13E778C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x13E780C Offset: 0x13E780C VA: 0x13E780C
	public static string CreatePK(int questId, int questPhase, int wave) { }

	// RVA: 0x13E7820 Offset: 0x13E7820 VA: 0x13E7820
	public bool checkScript(string key) { }

	// RVA: 0x13E7894 Offset: 0x13E7894 VA: 0x13E7894
	public int getScript(string key, int defVal = 0) { }

	// RVA: 0x13E7934 Offset: 0x13E7934 VA: 0x13E7934
	public float getScriptFloat(string key, float defVal = 0) { }

	// RVA: 0x13E79E0 Offset: 0x13E79E0 VA: 0x13E79E0
	public int[] getScriptIntArrayParam(string key, int[] defVal) { }

	// RVA: 0x13E7BE8 Offset: 0x13E7BE8 VA: 0x13E7BE8
	public int getLimitTurn() { }

	// RVA: 0x13E7C3C Offset: 0x13E7C3C VA: 0x13E7C3C
	public int getTurnEffectType() { }

	// RVA: 0x13E7C90 Offset: 0x13E7C90 VA: 0x13E7C90
	public bool getTurnElapsedEndBattleFlag() { }

	// RVA: 0x13E7CF0 Offset: 0x13E7CF0 VA: 0x13E7CF0
	public int getLimitAct() { }

	// RVA: 0x13E7D44 Offset: 0x13E7D44 VA: 0x13E7D44
	public float getCustomFOV() { }

	// RVA: 0x13E7D98 Offset: 0x13E7D98 VA: 0x13E7D98
	public bool checkCustomFOV() { }

	// RVA: 0x13E7DE8 Offset: 0x13E7DE8 VA: 0x13E7DE8
	public int getShowTurnState() { }

	// RVA: 0x13E7E3C Offset: 0x13E7E3C VA: 0x13E7E3C
	public int getEnemyMasterBattleId() { }

	// RVA: 0x13E7E90 Offset: 0x13E7E90 VA: 0x13E7E90
	public int getChangeBgId() { }

	// RVA: 0x13E7EE4 Offset: 0x13E7EE4 VA: 0x13E7EE4
	public int getChangeBgType() { }

	// RVA: 0x13E7F38 Offset: 0x13E7F38 VA: 0x13E7F38
	public object[] getFieldAis() { }

	// RVA: 0x13E8060 Offset: 0x13E8060 VA: 0x13E8060
	public int[] getTurnEffect(int limitTurn) { }

	// RVA: 0x13E8298 Offset: 0x13E8298 VA: 0x13E8298
	public int[] GetTurnEffect(int limitTurn, int[] turnlist) { }

	// RVA: 0x13E83A8 Offset: 0x13E83A8 VA: 0x13E83A8
	public int[] getNoEntryIds() { }

	// RVA: 0x13E85CC Offset: 0x13E85CC VA: 0x13E85CC
	public int getEnemyActCount() { }

	// RVA: 0x13E8658 Offset: 0x13E8658 VA: 0x13E8658
	public int getStartBattleAssetId() { }

	// RVA: 0x13E86AC Offset: 0x13E86AC VA: 0x13E86AC
	public bool disableSystemFadeStartBattle() { }

	// RVA: 0x13E870C Offset: 0x13E870C VA: 0x13E870C
	public int[] GetMultiEffectIds() { }

	// RVA: 0x13E8760 Offset: 0x13E8760 VA: 0x13E8760
	public int GetFadeType() { }

	// RVA: 0x13E87B4 Offset: 0x13E87B4 VA: 0x13E87B4
	public int GetEffectSvtId() { }

	// RVA: 0x13E8808 Offset: 0x13E8808 VA: 0x13E8808
	public int[] GetCutInSvtIds(bool isEnemy) { }

	// RVA: 0x13E8878 Offset: 0x13E8878 VA: 0x13E8878
	public int GetEffectBgmId() { }

	// RVA: 0x13E88CC Offset: 0x13E88CC VA: 0x13E88CC
	public int GetStartBgmOffFlag() { }

	// RVA: 0x13E8920 Offset: 0x13E8920 VA: 0x13E8920
	public int[] GetBossIdAndChangeBgmId() { }

	// RVA: 0x13E8988 Offset: 0x13E8988 VA: 0x13E8988
	public object[] GetAiActTypeAttackCommandCard() { }

	// RVA: 0x13E8A68 Offset: 0x13E8A68 VA: 0x13E8A68
	public int GetAiActTypeAttackCommandCardType(BattleServantData enemyServantData) { }

	// RVA: 0x13E8C20 Offset: 0x13E8C20 VA: 0x13E8C20
	public bool IsDisableFieldMotion() { }

	// RVA: 0x13E8C80 Offset: 0x13E8C80 VA: 0x13E8C80
	public int[] GetFieldCallServantId() { }

	// RVA: 0x13E8CF0 Offset: 0x13E8CF0 VA: 0x13E8CF0
	public object GetScriptObject(string key) { }

	// RVA: 0x13E8D78 Offset: 0x13E8D78 VA: 0x13E8D78
	public int GetBattleStartVoiceServantId() { }

	// RVA: 0x13E8DCC Offset: 0x13E8DCC VA: 0x13E8DCC
	public int GetBattleStartVoiceServantLimit() { }

	// RVA: 0x13E8E20 Offset: 0x13E8E20 VA: 0x13E8E20
	public string[] GetBattleStartVoiceIdArray() { }

	// RVA: 0x13E8FAC Offset: 0x13E8FAC VA: 0x13E8FAC
	public bool IsSpecifiedBattleStartVoice() { }

	// RVA: 0x13E8FEC Offset: 0x13E8FEC VA: 0x13E8FEC
	public bool IsSpecifiedBattleStartVoice(out int servantId, out int limit) { }

	// RVA: 0x13E9044 Offset: 0x13E9044 VA: 0x13E9044
	public int GetEnemyFieldPosCount() { }

	// RVA: 0x13E9098 Offset: 0x13E9098 VA: 0x13E9098
	public bool Is3_6BossBattle() { }

	// RVA: 0x13E90F8 Offset: 0x13E90F8 VA: 0x13E90F8
	public int getBattleMasterImageId() { }

	// RVA: 0x13E914C Offset: 0x13E914C VA: 0x13E914C
	public bool IsReleaseUnusedAssetsWhenEntryMember() { }

	// RVA: 0x13E919C Offset: 0x13E919C VA: 0x13E919C
	public SubBgmPlayArgs[] GetSubBgmPlayArgsArray(bool defaultEmpty = True) { }

	// RVA: 0x13E92D0 Offset: 0x13E92D0 VA: 0x13E92D0
	public bool IsForceSetNormalEnemyStatusUI() { }

	// RVA: 0x13E9320 Offset: 0x13E9320 VA: 0x13E9320
	public int[] GetEnemyAddOrderPosArray(int enemyFieldPosCount) { }

	// RVA: 0x13E9464 Offset: 0x13E9464 VA: 0x13E9464
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA8F8 Offset: 0xCCA8F8 VA: 0xCCA8F8
	// RVA: 0x13E94B8 Offset: 0x13E94B8 VA: 0x13E94B8
	private static int <getScriptIntArrayParam>m__0(object x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA908 Offset: 0xCCA908 VA: 0xCCA908
	// RVA: 0x13E9534 Offset: 0x13E9534 VA: 0x13E9534
	private static int <getTurnEffect>m__1(object x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA918 Offset: 0xCCA918 VA: 0xCCA918
	// RVA: 0x13E95B0 Offset: 0x13E95B0 VA: 0x13E95B0
	private static int <getNoEntryIds>m__2(object x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA928 Offset: 0xCCA928 VA: 0xCCA928
	// RVA: 0x13E962C Offset: 0x13E962C VA: 0x13E962C
	private static string <GetBattleStartVoiceIdArray>m__3(object x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA938 Offset: 0xCCA938 VA: 0xCCA938
	// RVA: 0x13E965C Offset: 0x13E965C VA: 0x13E965C
	private static int <GetEnemyAddOrderPosArray>m__4(int i) { }
}

// Namespace: 
public enum StageEntity.FadeType // TypeDefIndex: 7327
{
	// Fields
	public int value__; // 0x0
	public const StageEntity.FadeType SlideIn = 0;
	public const StageEntity.FadeType AlphaFadeIn = 1;
	public const StageEntity.FadeType FadeOff = 2;
}

// Namespace: 
public class StageMaster : DataMasterBase<StageMaster, StageEntity, string> // TypeDefIndex: 7328
{
	// Methods

	// RVA: 0x13E9664 Offset: 0x13E9664 VA: 0x13E9664
	public void .ctor() { }

	// RVA: 0x13E96B8 Offset: 0x13E96B8 VA: 0x13E96B8
	public StageEntity GetEntity(int questId, int questPhase, int wave) { }

	// RVA: 0x13E975C Offset: 0x13E975C VA: 0x13E975C
	public bool TryGetEntity(out StageEntity entity, int questId, int questPhase, int wave) { }
}

// Namespace: 
public class StatusEffectPosOverwriteEntity : DataEntityBase<string> // TypeDefIndex: 7329
{
	// Fields
	public int statusEffectId; // 0x10
	public int svtId; // 0x14
	public int svtLimitCount; // 0x18
	public string nodeName; // 0x20
	public int offsetX; // 0x28
	public int offsetY; // 0x2C
	public int offsetZ; // 0x30
	public int rotationX; // 0x34
	public int rotationY; // 0x38
	public int rotationZ; // 0x3C
	public int scaleX; // 0x40
	public int scaleY; // 0x44
	public int scaleZ; // 0x48

	// Methods

	// RVA: 0x179F7F4 Offset: 0x179F7F4 VA: 0x179F7F4
	public void .ctor() { }

	// RVA: 0x179F844 Offset: 0x179F844 VA: 0x179F844 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x179F858 Offset: 0x179F858 VA: 0x179F858
	public static string CreatePK(int statusEffectId, int svtId, int svtLimitCount) { }

	// RVA: 0x179F86C Offset: 0x179F86C VA: 0x179F86C
	public Vector3 GetOffset(bool isFlip = False) { }

	// RVA: 0x179F8DC Offset: 0x179F8DC VA: 0x179F8DC
	public Vector3 GetRotation() { }

	// RVA: 0x179F938 Offset: 0x179F938 VA: 0x179F938
	public Vector3 GetScale() { }
}

// Namespace: 
public class StatusEffectPosOverwriteMaster : DataMasterBase<StatusEffectPosOverwriteMaster, StatusEffectPosOverwriteEntity, string> // TypeDefIndex: 7330
{
	// Methods

	// RVA: 0x179F994 Offset: 0x179F994 VA: 0x179F994
	public void .ctor() { }

	// RVA: 0x179F9E8 Offset: 0x179F9E8 VA: 0x179F9E8
	public StatusEffectPosOverwriteEntity GetEntity(int statusEffectId, int svtId, int svtLimitCount) { }

	// RVA: 0x179FA6C Offset: 0x179FA6C VA: 0x179FA6C
	public bool TryGetEntity(out StatusEffectPosOverwriteEntity entity, int statusEffectId, int svtId, int svtLimitCount) { }
}

// Namespace: 
public class StoneShopEntity : DataEntityBase<int> // TypeDefIndex: 7331
{
	// Fields
	public int id; // 0x10
	public string name; // 0x18
	public string detail; // 0x20
	public int effect; // 0x28
	public int price; // 0x2C
	public int openedAt; // 0x30
	public int closedAt; // 0x34

	// Methods

	// RVA: 0x17A6C64 Offset: 0x17A6C64 VA: 0x17A6C64
	public void .ctor() { }

	// RVA: 0x17A6CB4 Offset: 0x17A6CB4 VA: 0x17A6CB4 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x17A6CBC Offset: 0x17A6CBC VA: 0x17A6CBC
	public bool IsEnable(long nowTime = 0) { }

	// RVA: 0x17A6D5C Offset: 0x17A6D5C VA: 0x17A6D5C
	public bool IsOpened(long nowTime = 0) { }

	// RVA: 0x17A6DE4 Offset: 0x17A6DE4 VA: 0x17A6DE4
	public bool IsClosed(long nowTime = 0) { }

	// RVA: 0x17A6E78 Offset: 0x17A6E78 VA: 0x17A6E78
	public string GetCountText() { }

	// RVA: 0x17A6EDC Offset: 0x17A6EDC VA: 0x17A6EDC
	public IconLabelInfo.IconKind GetPriceUnitIcon() { }

	// RVA: 0x17A6EE4 Offset: 0x17A6EE4 VA: 0x17A6EE4
	public IconLabelInfo.IconKind GetPriceIcon() { }

	// RVA: 0x17A6EEC Offset: 0x17A6EEC VA: 0x17A6EEC
	public int GetPrice() { }
}

// Namespace: 
public class StoneShopMaster : DataMasterBase<StoneShopMaster, StoneShopEntity, int> // TypeDefIndex: 7332
{
	// Methods

	// RVA: 0x17A6EF4 Offset: 0x17A6EF4 VA: 0x17A6EF4
	public void .ctor() { }

	// RVA: 0x17A6F48 Offset: 0x17A6F48 VA: 0x17A6F48
	public StoneShopEntity[] GetEnableEntitiyList() { }

	// RVA: 0x17A70F8 Offset: 0x17A70F8 VA: 0x17A70F8
	public StoneShopEntity[] GetEnableEntitiyList(StoneShopEffect.Kind effect) { }
}

// Namespace: 
public class SubEquipEntity : DataEntityBase<int> // TypeDefIndex: 7333
{
	// Fields
	public int id; // 0x10
	public string name; // 0x18
	public string detail; // 0x20
	public int abilityId; // 0x28
	public int abilityLv; // 0x2C
	public int condLv; // 0x30
	public int imageId; // 0x34

	// Methods

	// RVA: 0x17A7E30 Offset: 0x17A7E30 VA: 0x17A7E30
	public void .ctor() { }

	// RVA: 0x17A7E80 Offset: 0x17A7E80 VA: 0x17A7E80 Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class SubEquipMaster : DataMasterBase<SubEquipMaster, SubEquipEntity, int> // TypeDefIndex: 7334
{
	// Methods

	// RVA: 0x17A7E88 Offset: 0x17A7E88 VA: 0x17A7E88
	public void .ctor() { }
}

// Namespace: 
public class SvtAppendPassiveSkillUnlockEntity : DataEntityBase<string> // TypeDefIndex: 7335
{
	// Fields
	public int svtId; // 0x10
	public int num; // 0x14
	public int[] itemIds; // 0x18
	public int[] itemNums; // 0x20

	// Methods

	// RVA: 0x14F810C Offset: 0x14F810C VA: 0x14F810C
	public void .ctor() { }

	// RVA: 0x14F815C Offset: 0x14F815C VA: 0x14F815C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x14F816C Offset: 0x14F816C VA: 0x14F816C
	public static string CreatePK(int svtId, int num) { }
}

// Namespace: 
public class SvtAppendPassiveSkillUnlockMaster : DataMasterBase<SvtAppendPassiveSkillUnlockMaster, SvtAppendPassiveSkillUnlockEntity, string> // TypeDefIndex: 7336
{
	// Methods

	// RVA: 0x14F817C Offset: 0x14F817C VA: 0x14F817C
	public void .ctor() { }

	// RVA: 0x14F81D0 Offset: 0x14F81D0 VA: 0x14F81D0
	public SvtAppendPassiveSkillUnlockEntity GetEntity(int svtId, int num) { }

	// RVA: 0x14F8244 Offset: 0x14F8244 VA: 0x14F8244
	public bool TryGetEntity(out SvtAppendPassiveSkillUnlockEntity entity, int svtId, int num) { }
}

// Namespace: 
public class SvtCoinEntity : DataEntityBase<int> // TypeDefIndex: 7337
{
	// Fields
	public int svtId; // 0x10
	public int summonNum; // 0x14
	public int itemId; // 0x18

	// Methods

	// RVA: 0x14F842C Offset: 0x14F842C VA: 0x14F842C
	public void .ctor() { }

	// RVA: 0x14F847C Offset: 0x14F847C VA: 0x14F847C Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class SvtCoinMaster : DataMasterBase<SvtCoinMaster, SvtCoinEntity, int> // TypeDefIndex: 7338
{
	// Methods

	// RVA: 0x14F8484 Offset: 0x14F8484 VA: 0x14F8484
	public void .ctor() { }
}

// Namespace: 
public class SvtMaterialTdEntity : DataEntityBase<string> // TypeDefIndex: 7339
{
	// Fields
	public int baseSvtId; // 0x10
	public int idx; // 0x14
	public int materialSvtId; // 0x18

	// Methods

	// RVA: 0x10869EC Offset: 0x10869EC VA: 0x10869EC
	public void .ctor() { }

	// RVA: 0x1086A3C Offset: 0x1086A3C VA: 0x1086A3C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1086A4C Offset: 0x1086A4C VA: 0x1086A4C
	public static string CreatePK(int baseSvtId, int idx) { }
}

// Namespace: 
public class SvtMaterialTdMaster : DataMasterBase<SvtMaterialTdMaster, SvtMaterialTdEntity, string> // TypeDefIndex: 7340
{
	// Methods

	// RVA: 0x1086A5C Offset: 0x1086A5C VA: 0x1086A5C
	public void .ctor() { }

	// RVA: 0x1086AB0 Offset: 0x1086AB0 VA: 0x1086AB0
	public SvtMaterialTdEntity[] GetEntityList(int baseSvtId) { }
}

// Namespace: 
public class SvtMultiPortraitEntity : DataEntityBase<string> // TypeDefIndex: 7341
{
	// Fields
	public int svtId; // 0x10
	public int limitCount; // 0x14
	public int idx; // 0x18
	public int portraitImageId; // 0x1C
	public int displayPriority; // 0x20
	public int[] commonPosition; // 0x28
	public int[] summonPosition; // 0x30

	// Methods

	// RVA: 0x1086CEC Offset: 0x1086CEC VA: 0x1086CEC
	public void .ctor() { }

	// RVA: 0x1086D3C Offset: 0x1086D3C VA: 0x1086D3C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1086D50 Offset: 0x1086D50 VA: 0x1086D50
	public static string CreatePK(int svtId, int limitCount, int idx) { }
}

// Namespace: 
public class SvtMultiPortraitMaster : DataMasterBase<SvtMultiPortraitMaster, SvtMultiPortraitEntity, string> // TypeDefIndex: 7342
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55F8C Offset: 0xC55F8C VA: 0xC55F8C
	private static Func<SvtMultiPortraitEntity, int> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1086D64 Offset: 0x1086D64 VA: 0x1086D64
	public void .ctor() { }

	// RVA: 0x1086DB8 Offset: 0x1086DB8 VA: 0x1086DB8
	public List<SvtMultiPortraitEntity> GetEntityListOrderBy(int svtId, int limitCount) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA948 Offset: 0xCCA948 VA: 0xCCA948
	// RVA: 0x1087088 Offset: 0x1087088 VA: 0x1087088
	private static int <GetEntityListOrderBy>m__0(SvtMultiPortraitEntity x) { }
}

// Namespace: 
public class TblFriendEntity : DataEntityBase<string> // TypeDefIndex: 7343
{
	// Fields
	public long userId; // 0x10
	public long friendId; // 0x18
	public int status; // 0x20
	public int flag; // 0x24
	public long updatedAt; // 0x28
	public long createdAt; // 0x30

	// Methods

	// RVA: 0x108D7F0 Offset: 0x108D7F0 VA: 0x108D7F0
	public void .ctor() { }

	// RVA: 0x108D840 Offset: 0x108D840 VA: 0x108D840 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x108D850 Offset: 0x108D850 VA: 0x108D850
	public static string CreatePK(long userId, long friendId) { }

	// RVA: 0x108D858 Offset: 0x108D858 VA: 0x108D858
	public bool HasFlag(TblFriendEntity.Flag typeFlag) { }
}

// Namespace: 
public enum TblFriendEntity.Flag // TypeDefIndex: 7344
{
	// Fields
	public int value__; // 0x0
	public const TblFriendEntity.Flag NONE = 1;
	public const TblFriendEntity.Flag FRIEND_ID_MES_HIDE = 2;
	public const TblFriendEntity.Flag USER_ID_MES_HIDE = 4;
	public const TblFriendEntity.Flag TO_FRIENDID_LOCK = 8;
	public const TblFriendEntity.Flag TO_USERID_LOCK = 16;
}

// Namespace: 
public class TblFriendMaster : DataMasterBase<TblFriendMaster, TblFriendEntity, string> // TypeDefIndex: 7345
{
	// Methods

	// RVA: 0x108D868 Offset: 0x108D868 VA: 0x108D868
	public void .ctor() { }

	// RVA: 0x108D8BC Offset: 0x108D8BC VA: 0x108D8BC
	public TblFriendEntity GetEntity(long userId, long friendId) { }

	// RVA: 0x108D930 Offset: 0x108D930 VA: 0x108D930
	public bool TryGetEntity(out TblFriendEntity entity, long userId, long friendId) { }

	// RVA: 0x108D9B4 Offset: 0x108D9B4 VA: 0x108D9B4
	public int GetFriendSum() { }

	// RVA: 0x108DB04 Offset: 0x108DB04 VA: 0x108DB04
	public int GetSum(FriendStatus.Kind kind) { }

	// RVA: 0x108DD90 Offset: 0x108DD90 VA: 0x108DD90
	public OtherUserGameEntity[] GetList(FriendStatus.Kind kind) { }

	// RVA: 0x108E2AC Offset: 0x108E2AC VA: 0x108E2AC
	public bool isMessageDisp(FriendStatus.Kind kind, long otherUserId) { }

	// RVA: 0x108E440 Offset: 0x108E440 VA: 0x108E440
	public bool IsLockUser(FriendStatus.Kind kind, long otherUserId) { }

	// RVA: 0x108E6EC Offset: 0x108E6EC VA: 0x108E6EC
	public bool isFriend(long otherUserId) { }
}

// Namespace: 
public class TblUserEntity : DataEntityBase<long> // TypeDefIndex: 7346
{
	// Fields
	public long userId; // 0x10
	public int friendPoint; // 0x18

	// Methods

	// RVA: 0x108E85C Offset: 0x108E85C VA: 0x108E85C
	public void .ctor() { }

	// RVA: 0x108E8AC Offset: 0x108E8AC VA: 0x108E8AC Slot: 5
	protected sealed override long CreatePrimaryKey() { }
}

// Namespace: 
public class TblUserMaster : DataMasterBase<TblUserMaster, TblUserEntity, long> // TypeDefIndex: 7347
{
	// Methods

	// RVA: 0x108E8B4 Offset: 0x108E8B4 VA: 0x108E8B4
	public void .ctor() { }

	// RVA: 0x108E908 Offset: 0x108E908 VA: 0x108E908
	public TblUserEntity getUserData(long userId) { }
}

// Namespace: 
public class TelopEntity : DataEntityBase<int> // TypeDefIndex: 7348
{
	// Fields
	public int id; // 0x10
	public string message; // 0x18

	// Methods

	// RVA: 0x108E968 Offset: 0x108E968 VA: 0x108E968
	public void .ctor() { }

	// RVA: 0x108E9B8 Offset: 0x108E9B8 VA: 0x108E9B8 Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class TelopMaster : DataMasterBase<TelopMaster, TelopEntity, int> // TypeDefIndex: 7349
{
	// Methods

	// RVA: 0x108E9C0 Offset: 0x108E9C0 VA: 0x108E9C0
	public void .ctor() { }
}

// Namespace: 
public class TipsBattleEntity : DataEntityBase<int> // TypeDefIndex: 7350
{
	// Fields
	public int id; // 0x10
	public string comment; // 0x18

	// Methods

	// RVA: 0xEB9B60 Offset: 0xEB9B60 VA: 0xEB9B60
	public void .ctor() { }

	// RVA: 0xEB9BB0 Offset: 0xEB9BB0 VA: 0xEB9BB0 Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class TipsBattleMaster : DataMasterBase<TipsBattleMaster, TipsBattleEntity, int> // TypeDefIndex: 7351
{
	// Methods

	// RVA: 0xEB9BB8 Offset: 0xEB9BB8 VA: 0xEB9BB8
	public void .ctor() { }

	// RVA: 0xEB9C0C Offset: 0xEB9C0C VA: 0xEB9C0C
	public int getSum() { }
}

// Namespace: 
public class TotalBoxGachaEntity : DataEntityBase<int> // TypeDefIndex: 7352
{
	// Fields
	public int eventId; // 0x10
	public int boxGachaId; // 0x14
	public long totalCount; // 0x18

	// Methods

	// RVA: 0x1883B70 Offset: 0x1883B70 VA: 0x1883B70
	public void .ctor() { }

	// RVA: 0x1883BC0 Offset: 0x1883BC0 VA: 0x1883BC0 Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class TotalBoxGachaMaster : DataMasterBase<TotalBoxGachaMaster, TotalBoxGachaEntity, int> // TypeDefIndex: 7353
{
	// Methods

	// RVA: 0x1883BC8 Offset: 0x1883BC8 VA: 0x1883BC8
	public void .ctor() { }

	// RVA: 0x1883C1C Offset: 0x1883C1C VA: 0x1883C1C
	private TotalBoxGachaEntity GetEntity(int boxGachaId) { }

	// RVA: 0x1883DF0 Offset: 0x1883DF0 VA: 0x1883DF0
	public long GetTotalCount(int boxGachaId) { }

	// RVA: 0x1883E0C Offset: 0x1883E0C VA: 0x1883E0C
	public long GetEventTotalCount(int eventId) { }
}

// Namespace: 
public class TotalEventPointEntity : DataEntityBase<string> // TypeDefIndex: 7354
{
	// Fields
	public int eventId; // 0x10
	public int id; // 0x14
	public int groupId; // 0x18
	public long totalPoint; // 0x20
	public bool isBoss; // 0x28
	public long normaTotalPoint; // 0x30

	// Methods

	// RVA: 0x1883FE4 Offset: 0x1883FE4 VA: 0x1883FE4
	public void .ctor() { }

	// RVA: 0x1884034 Offset: 0x1884034 VA: 0x1884034 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1884048 Offset: 0x1884048 VA: 0x1884048
	public static string CreatePK(int eventId, int id, int groupId) { }
}

// Namespace: 
public class TotalEventPointMaster : DataMasterBase<TotalEventPointMaster, TotalEventPointEntity, string> // TypeDefIndex: 7355
{
	// Methods

	// RVA: 0x188405C Offset: 0x188405C VA: 0x188405C
	public void .ctor() { }

	// RVA: 0x18840B0 Offset: 0x18840B0 VA: 0x18840B0
	public TotalEventPointEntity GetEntity(int eventId, int id, int groupId) { }

	// RVA: 0x1884134 Offset: 0x1884134 VA: 0x1884134
	public bool TryGetEntity(out TotalEventPointEntity entity, int eventId, int id, int groupId) { }

	// RVA: 0x18841C0 Offset: 0x18841C0 VA: 0x18841C0
	public bool IsGroupWin(int eventId, int periodId, int groupId) { }

	// RVA: 0x18847E4 Offset: 0x18847E4 VA: 0x18847E4
	public long GetPeriodTotalPoint(int eventId, int periodId) { }

	// RVA: 0x18844C0 Offset: 0x18844C0 VA: 0x18844C0
