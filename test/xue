	public bool IsDispLock { get; }
	public bool IsChoice { get; }
	public bool IsSwapChoice { get; }
	public bool IsDispChoice { get; }
	public bool IsUseServant { get; }
	public bool IsPushMode { get; set; }
	public bool IsPush { get; set; }
	public bool IsEnabled { get; set; }
	public bool IsInvalidRarity { get; }
	public bool IsUseInSet { get; }
	public int UseSet { get; }

	// Methods

	// RVA: 0x1A08448 Offset: 0x1A08448 VA: 0x1A08448
	public void .ctor(int index, UserServantEntity userServantEntity, SupportServantData[] supportServantData, int nowDeckNum, int classPos, EventUpValSetupInfo eventSetupInfo, EventCampaignEntity[] friendPointCampaignEntityList, int nowDeckId, int[] fixMainDeckIds, int[] fixEventDeckIds, bool isFixMainDeck, bool isFixEventDeck) { }

	// RVA: 0x1A08CD4 Offset: 0x1A08CD4 VA: 0x1A08CD4
	private bool CheckUseInSet(out int setNo, int[] fixDeckIds, int nowDeckId, SupportServantData[] supportServantData) { }

	// RVA: 0x1A08F00 Offset: 0x1A08F00 VA: 0x1A08F00
	public void Modify() { }

	// RVA: 0x1A09008 Offset: 0x1A09008 VA: 0x1A09008
	public void Modify(UserServantEntity userServantEntity) { }

	// RVA: 0x1A09034 Offset: 0x1A09034 VA: 0x1A09034
	public void ModifyItem(UserServantEntity userServantEntity) { }

	// RVA: 0x1A09078 Offset: 0x1A09078 VA: 0x1A09078
	public void ModifyLockItem() { }

	// RVA: 0x1A090BC Offset: 0x1A090BC VA: 0x1A090BC
	public void ModifyChoiceItem() { }

	// RVA: 0x1A09100 Offset: 0x1A09100 VA: 0x1A09100
	public void ResetEventCampaign(EventCampaignEntity[] friendPointCampaigns) { }

	// RVA: 0x1A09108 Offset: 0x1A09108 VA: 0x1A09108 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1A09110 Offset: 0x1A09110 VA: 0x1A09110
	protected void SetEquipStatus(ObscuredLong[] equipIdList) { }

	// RVA: 0x1A09458 Offset: 0x1A09458 VA: 0x1A09458
	private bool IsMatchServantFilter(ListViewSort sort) { }

	// RVA: 0x1A0971C Offset: 0x1A0971C VA: 0x1A0971C Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x1A0A1B0 Offset: 0x1A0A1B0 VA: 0x1A0A1B0
	public long[] GetEquipList() { }

	// RVA: 0x1A0A308 Offset: 0x1A0A308 VA: 0x1A0A308
	public void SetEquipUserServantId(long userSvtId) { }

	// RVA: 0x1A0A3C8 Offset: 0x1A0A3C8 VA: 0x1A0A3C8
	public bool SwapLock() { }

	// RVA: 0x1A0A3E4 Offset: 0x1A0A3E4 VA: 0x1A0A3E4
	public bool SwapChoice() { }

	// RVA: 0x1A096F4 Offset: 0x1A096F4 VA: 0x1A096F4
	public UserServantEntity get_UserServant() { }

	// RVA: 0x1A0A400 Offset: 0x1A0A400 VA: 0x1A0A400
	public ServantEntity get_Servant() { }

	// RVA: 0x1A0A408 Offset: 0x1A0A408 VA: 0x1A0A408
	public int get_SvtId() { }

	// RVA: 0x1A0A478 Offset: 0x1A0A478 VA: 0x1A0A478
	public int get_Rarity() { }

	// RVA: 0x1A0A480 Offset: 0x1A0A480 VA: 0x1A0A480
	public int get_ClassId() { }

	// RVA: 0x1A0A488 Offset: 0x1A0A488 VA: 0x1A0A488
	public string get_NameText() { }

	// RVA: 0x1A0A544 Offset: 0x1A0A544 VA: 0x1A0A544
	public bool get_IsBase() { }

	// RVA: 0x1A0A54C Offset: 0x1A0A54C VA: 0x1A0A54C
	public int get_Cost() { }

	// RVA: 0x1A0A578 Offset: 0x1A0A578 VA: 0x1A0A578
	public int get_EquipCost() { }

	// RVA: 0x1A0A590 Offset: 0x1A0A590 VA: 0x1A0A590
	public bool get_IsSame() { }

	// RVA: 0x1A0A598 Offset: 0x1A0A598 VA: 0x1A0A598
	public bool get_IsEventJoin() { }

	// RVA: 0x1A0A5A0 Offset: 0x1A0A5A0 VA: 0x1A0A5A0
	public bool get_IsLock() { }

	// RVA: 0x1A0A5A8 Offset: 0x1A0A5A8 VA: 0x1A0A5A8
	public IconLabelInfo get_IconInfo1() { }

	// RVA: 0x1A0A5B0 Offset: 0x1A0A5B0 VA: 0x1A0A5B0
	public IconLabelInfo get_IconInfo2() { }

	// RVA: 0x1A0A5B8 Offset: 0x1A0A5B8 VA: 0x1A0A5B8
	public bool get_IsEquip() { }

	// RVA: 0x1A0A5C8 Offset: 0x1A0A5C8 VA: 0x1A0A5C8
	public bool get_IsCanNotSelectHeroine() { }

	// RVA: 0x1A0A648 Offset: 0x1A0A648 VA: 0x1A0A648
	public bool get_IsSwapLock() { }

	// RVA: 0x1A0A650 Offset: 0x1A0A650 VA: 0x1A0A650
	public bool get_IsDispLock() { }

	// RVA: 0x1A0A670 Offset: 0x1A0A670 VA: 0x1A0A670
	public bool get_IsChoice() { }

	// RVA: 0x1A0A678 Offset: 0x1A0A678 VA: 0x1A0A678
	public bool get_IsSwapChoice() { }

	// RVA: 0x1A096FC Offset: 0x1A096FC VA: 0x1A096FC
	public bool get_IsDispChoice() { }

	// RVA: 0x1A0A680 Offset: 0x1A0A680 VA: 0x1A0A680
	public bool get_IsUseServant() { }

	// RVA: 0x1A0A744 Offset: 0x1A0A744 VA: 0x1A0A744
	public bool GetNpInfo(out TreasureDvcInfo tdInfo) { }

	// RVA: 0x1A0A7DC Offset: 0x1A0A7DC VA: 0x1A0A7DC
	public int GetFriendPointBonus() { }

	// RVA: 0x1A0A9E0 Offset: 0x1A0A9E0 VA: 0x1A0A9E0
	public void set_IsPushMode(bool value) { }

	// RVA: 0x1A0A9EC Offset: 0x1A0A9EC VA: 0x1A0A9EC
	public bool get_IsPushMode() { }

	// RVA: 0x1A0A9F4 Offset: 0x1A0A9F4 VA: 0x1A0A9F4
	public void set_IsPush(bool value) { }

	// RVA: 0x1A0AA00 Offset: 0x1A0AA00 VA: 0x1A0AA00
	public bool get_IsPush() { }

	// RVA: 0x1A0AA08 Offset: 0x1A0AA08 VA: 0x1A0AA08
	public void set_IsEnabled(bool value) { }

	// RVA: 0x1A0AA14 Offset: 0x1A0AA14 VA: 0x1A0AA14
	public bool get_IsEnabled() { }

	// RVA: 0x1A0AA1C Offset: 0x1A0AA1C VA: 0x1A0AA1C
	public bool get_IsInvalidRarity() { }

	// RVA: 0x1A0AA24 Offset: 0x1A0AA24 VA: 0x1A0AA24
	public bool get_IsUseInSet() { }

	// RVA: 0x1A0AA2C Offset: 0x1A0AA2C VA: 0x1A0AA2C
	public int get_UseSet() { }
}

// Namespace: 
public class SupportServantListViewItemDraw : MonoBehaviour // TypeDefIndex: 10834
{
	// Fields
	[SerializeField] // RVA: 0xCE6A48 Offset: 0xCE6A48 VA: 0xCE6A48
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xCE6A58 Offset: 0xCE6A58 VA: 0xCE6A58
	protected ServantFaceIconComponent servantFaceIcon; // 0x20
	[SerializeField] // RVA: 0xCE6A68 Offset: 0xCE6A68 VA: 0xCE6A68
	protected FlashingIconComponent partyIcon; // 0x28
	[SerializeField] // RVA: 0xCE6A78 Offset: 0xCE6A78 VA: 0xCE6A78
	protected UISprite lockSprite; // 0x30
	[SerializeField] // RVA: 0xCE6A88 Offset: 0xCE6A88 VA: 0xCE6A88
	protected UISprite choiceSprite; // 0x38
	[SerializeField] // RVA: 0xCE6A98 Offset: 0xCE6A98 VA: 0xCE6A98
	protected UISprite pushSprite; // 0x40
	[SerializeField] // RVA: 0xCE6AA8 Offset: 0xCE6AA8 VA: 0xCE6AA8
	protected GameObject selectObject; // 0x48
	[SerializeField] // RVA: 0xCE6AB8 Offset: 0xCE6AB8 VA: 0xCE6AB8
	protected UISprite maskSprite; // 0x50
	[SerializeField] // RVA: 0xCE6AC8 Offset: 0xCE6AC8 VA: 0xCE6AC8
	protected UILabel warningLabel; // 0x58
	[SerializeField] // RVA: 0xCE6AD8 Offset: 0xCE6AD8 VA: 0xCE6AD8
	protected TweenAlpha warningTween; // 0x60
	[SerializeField] // RVA: 0xCE6AE8 Offset: 0xCE6AE8 VA: 0xCE6AE8
	protected TweenColor warningTweenColor; // 0x68
	protected static List<SupportServantListViewItemDraw> itemList; // 0x0
	private SupportServantListViewItemDraw.WarningLabelText[] warningLabelTexts; // 0x70
	private int warningLabelTextSync2Pattern; // 0x78
	private int warningLabelTextSync2PatternOld; // 0x7C
	private static readonly float changeTimeSecond; // 0x8

	// Methods

	// RVA: 0x1A0AA34 Offset: 0x1A0AA34 VA: 0x1A0AA34
	public void .ctor() { }

	// RVA: 0x1A0AA3C Offset: 0x1A0AA3C VA: 0x1A0AA3C
	public void OnDisable() { }

	// RVA: 0x1A0AAC8 Offset: 0x1A0AAC8 VA: 0x1A0AAC8
	public void SetItem(SupportServantListViewItem item, SupportServantListViewItemDraw.DispMode mode) { }

	// RVA: 0x1A0ADC4 Offset: 0x1A0ADC4 VA: 0x1A0ADC4
	private void SetWarning(SupportServantListViewItem item) { }

	// RVA: 0x1A0B69C Offset: 0x1A0B69C VA: 0x1A0B69C
	private string GetWarningText(SupportServantListViewItem item, bool isBaseSelect) { }

	// RVA: 0x1A0BFB8 Offset: 0x1A0BFB8 VA: 0x1A0BFB8
	public void SetInput(SupportServantListViewItem item, bool isInput) { }

	// RVA: 0x1A0BAB4 Offset: 0x1A0BAB4 VA: 0x1A0BAB4
	private void AdvanceWarningLabel() { }

	// RVA: 0x1A0B928 Offset: 0x1A0B928 VA: 0x1A0B928
	private void WarningTweenStart() { }

	// RVA: 0x1A0BA68 Offset: 0x1A0BA68 VA: 0x1A0BA68
	private void WarningTweenStop() { }

	// RVA: 0x1A0C2FC Offset: 0x1A0C2FC VA: 0x1A0C2FC
	public void OnFinishWarningAnime() { }

	// RVA: 0x1A0C320 Offset: 0x1A0C320 VA: 0x1A0C320
	private static void .cctor() { }
}

// Namespace: 
private class SupportServantListViewItemDraw.WarningLabelText // TypeDefIndex: 10835
{
	// Fields
	public string text; // 0x10
	public bool gradation; // 0x18
	public bool coloranime; // 0x19
	public Color top; // 0x1C
	public Color bottom; // 0x2C
	public float scaleX; // 0x3C
	public bool isSkillInvalid; // 0x40

	// Methods

	// RVA: 0x1A0B630 Offset: 0x1A0B630 VA: 0x1A0B630
	public void .ctor(string s, float scaleX = 1, bool isSkillInvalid = False) { }

	// RVA: 0x1A0B58C Offset: 0x1A0B58C VA: 0x1A0B58C
	public void .ctor(string s, Color t, Color b, float scaleX = 1, bool isSkillInvalid = False) { }
}

// Namespace: 
public enum SupportServantListViewItemDraw.DispMode // TypeDefIndex: 10836
{
	// Fields
	public int value__; // 0x0
	public const SupportServantListViewItemDraw.DispMode INVISIBLE = 0;
	public const SupportServantListViewItemDraw.DispMode INVALID = 1;
	public const SupportServantListViewItemDraw.DispMode VALID = 2;
	public const SupportServantListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class SupportServantListViewManager : ListViewManager // TypeDefIndex: 10837
{
	// Fields
	[SerializeField] // RVA: 0xCE6AF8 Offset: 0xCE6AF8 VA: 0xCE6AF8
	protected UICommonButton filterButton; // 0x138
	[SerializeField] // RVA: 0xCE6B08 Offset: 0xCE6B08 VA: 0xCE6B08
	protected UISprite filterSprite; // 0x140
	[SerializeField] // RVA: 0xCE6B18 Offset: 0xCE6B18 VA: 0xCE6B18
	protected UISprite sortExplanationSprite; // 0x148
	[SerializeField] // RVA: 0xCE6B28 Offset: 0xCE6B28 VA: 0xCE6B28
	protected UICommonButton bonusFilterKindButton; // 0x150
	[SerializeField] // RVA: 0xCE6B38 Offset: 0xCE6B38 VA: 0xCE6B38
	protected UILabel bonusFilterKindLabel; // 0x158
	[SerializeField] // RVA: 0xCE6B48 Offset: 0xCE6B48 VA: 0xCE6B48
	protected ListViewItemSeed normalSizeSeed; // 0x160
	[SerializeField] // RVA: 0xCE6B58 Offset: 0xCE6B58 VA: 0xCE6B58
	protected ListViewItemSeed smallSizeSeed; // 0x168
	[SerializeField] // RVA: 0xCE6B68 Offset: 0xCE6B68 VA: 0xCE6B68
	protected ListViewItemSeed extremelySmallSizeSeed; // 0x170
	protected const string SORT_SAVE_KEY_ALL = "SupportServantSelectAll";
	protected const string SORT_SAVE_KEY = "SupportServantSelect";
	protected static ListViewSort servantSortInfoAll; // 0x0
	protected static ListViewSort servantSortInfo; // 0x8
	protected SupportServantData supportServantData; // 0x178
	private TimeOverChecker timeOverChecker; // 0x180
	private TimeOverChecker eventStartChecker; // 0x188
	private EventCampaignEntity[] eventFriendPoints; // 0x190
	private int classPos; // 0x198
	protected SupportServantListViewManager.InitMode initMode; // 0x19C
	protected ListViewSort.ScaleType scaleType; // 0x1A0
	private ListViewSort.FilterKind[] classFilter; // 0x1A8
	[CompilerGeneratedAttribute] // RVA: 0xCE6B78 Offset: 0xCE6B78 VA: 0xCE6B78
	[DebuggerBrowsableAttribute] // RVA: 0xCE6B78 Offset: 0xCE6B78 VA: 0xCE6B78
	private SupportServantListViewManager.CallbackFunc callbackFunc; // 0x1B0
	[CompilerGeneratedAttribute] // RVA: 0xCE6BB4 Offset: 0xCE6BB4 VA: 0xCE6BB4
	[DebuggerBrowsableAttribute] // RVA: 0xCE6BB4 Offset: 0xCE6BB4 VA: 0xCE6BB4
	private Action callbackFunc2; // 0x1B8
	protected int callbackCount; // 0x1C0
	protected int[] bonusEventIdList; // 0x1C8
	protected int[] servantFilterIdList; // 0x1D0
	private bool isCanNotLongPush; // 0x1D8

	// Properties
	public List<SupportServantListViewObject> ObjectList { get; }
	public List<SupportServantListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x1A0C3A4 Offset: 0x1A0C3A4 VA: 0x1A0C3A4
	public void .ctor() { }

	// RVA: 0x1A0C424 Offset: 0x1A0C424 VA: 0x1A0C424
	protected void add_callbackFunc(SupportServantListViewManager.CallbackFunc value) { }

	// RVA: 0x1A0C514 Offset: 0x1A0C514 VA: 0x1A0C514
	protected void remove_callbackFunc(SupportServantListViewManager.CallbackFunc value) { }

	// RVA: 0x1A0C604 Offset: 0x1A0C604 VA: 0x1A0C604
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x1A0C6F4 Offset: 0x1A0C6F4 VA: 0x1A0C6F4
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x1A0C7E4 Offset: 0x1A0C7E4 VA: 0x1A0C7E4
	public static void DeleteContinueData() { }

	// RVA: 0x1A0C884 Offset: 0x1A0C884 VA: 0x1A0C884
	public static void InitLoad() { }

	// RVA: 0x1A0C924 Offset: 0x1A0C924 VA: 0x1A0C924
	public List<SupportServantListViewObject> get_ObjectList() { }

	// RVA: 0x1A0CAF0 Offset: 0x1A0CAF0 VA: 0x1A0CAF0
	public List<SupportServantListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1A0CDD0 Offset: 0x1A0CDD0 VA: 0x1A0CDD0
	public void ModifyItem() { }

	// RVA: 0x1A0CFCC Offset: 0x1A0CFCC VA: 0x1A0CFCC
	public void CreateList(SupportServantData[] supportServantData, int nowDeckNum, int classPos, EventUpValSetupInfo eventSetupInfo, int nowDeckId, int[] fixMainDeckIds, int[] fixEventDeckIds) { }

	// RVA: 0x1A0D9CC Offset: 0x1A0D9CC VA: 0x1A0D9CC
	public void ModifyList(bool isIconSizeChange = False) { }

	// RVA: 0x1A0DD94 Offset: 0x1A0DD94 VA: 0x1A0DD94
	public void DestroyList() { }

	// RVA: 0x1A0DF6C Offset: 0x1A0DF6C VA: 0x1A0DF6C
	public SupportServantListViewItem GetItem(int index) { }

	// RVA: 0x1A0E014 Offset: 0x1A0E014 VA: 0x1A0E014 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1A0E14C Offset: 0x1A0E14C VA: 0x1A0E14C
	private void ResetEventCampaignListViewObjects() { }

	// RVA: 0x1A0E338 Offset: 0x1A0E338 VA: 0x1A0E338
	private void ResetEventCampaignListViewObjectsStart() { }

	// RVA: 0x1A0E520 Offset: 0x1A0E520 VA: 0x1A0E520
	public void SetMode(SupportServantListViewManager.InitMode mode, SupportServantListViewManager.CallbackFunc callback) { }

	// RVA: 0x1A0E5AC Offset: 0x1A0E5AC VA: 0x1A0E5AC
	public void SetMode(SupportServantListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1A0E528 Offset: 0x1A0E528 VA: 0x1A0E528
	public void SetMode(SupportServantListViewManager.InitMode mode) { }

	// RVA: 0x1A0E5B4 Offset: 0x1A0E5B4 VA: 0x1A0E5B4
	protected void RequestListObject(SupportServantListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1A0CDD8 Offset: 0x1A0CDD8 VA: 0x1A0CDD8
	protected void RequestListObject(SupportServantListViewObject.InitMode mode) { }

	// RVA: 0x1A0E8C4 Offset: 0x1A0E8C4 VA: 0x1A0E8C4
	protected void OnMoveEnd() { }

	// RVA: 0x1A0E990 Offset: 0x1A0E990 VA: 0x1A0E990
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x1A0E994 Offset: 0x1A0E994 VA: 0x1A0E994
	protected void OnClickSelectListView(ListViewObject obj) { }

	// RVA: 0x1A0EC34 Offset: 0x1A0EC34 VA: 0x1A0EC34
	protected void OnLongPushListView(ListViewObject obj) { }

	// RVA: 0x1A0EDF4 Offset: 0x1A0EDF4 VA: 0x1A0EDF4
	protected void EndShowServant(bool isDecide, bool isIndividualityChanged, int questId) { }

	// RVA: 0x1A0F288 Offset: 0x1A0F288 VA: 0x1A0F288
	protected void EndCloseShowServant() { }

	// RVA: 0x1A0F290 Offset: 0x1A0F290 VA: 0x1A0F290
	protected void EndCloseShowServantQuestJump() { }

	// RVA: 0x1A0F2FC Offset: 0x1A0F2FC VA: 0x1A0F2FC
	public void OnClickBonusFilterKind() { }

	// RVA: 0x1A0F3D0 Offset: 0x1A0F3D0 VA: 0x1A0F3D0
	public void OnClickFilterKind() { }

	// RVA: 0x1A0F4C4 Offset: 0x1A0F4C4 VA: 0x1A0F4C4
	public void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x1A0F590 Offset: 0x1A0F590 VA: 0x1A0F590
	protected void EndCloseSelectFilterKind() { }

	// RVA: 0x1A0D75C Offset: 0x1A0D75C VA: 0x1A0D75C
	private void SetFilterButtonImage() { }

	// RVA: 0x1A0F594 Offset: 0x1A0F594 VA: 0x1A0F594
	public void OnClickSortKind() { }

	// RVA: 0x1A0F68C Offset: 0x1A0F68C VA: 0x1A0F68C
	protected void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x1A0F750 Offset: 0x1A0F750 VA: 0x1A0F750
	protected void EndCloseSelectSortKind() { }

	// RVA: 0x1A0F754 Offset: 0x1A0F754 VA: 0x1A0F754
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x1A0F844 Offset: 0x1A0F844 VA: 0x1A0F844 Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x1A0A08C Offset: 0x1A0A08C VA: 0x1A0A08C
	public long GetAmountSortValue(int svtId) { }

	// RVA: 0x1A0FB50 Offset: 0x1A0FB50 VA: 0x1A0FB50
	public bool GetSwapLockList(out long[] lockList, out long[] unlockList) { }

	// RVA: 0x1A0FE38 Offset: 0x1A0FE38 VA: 0x1A0FE38
	public bool GetSwapChoiceList(out long[] choiceList, out long[] unchoiceList) { }

	// RVA: 0x1A1010C Offset: 0x1A1010C VA: 0x1A1010C
	public void setCanLongPushFlag(bool flag) { }

	// RVA: 0x1A10118 Offset: 0x1A10118 VA: 0x1A10118
	public void ChangeIconScale() { }

	// RVA: 0x1A102A0 Offset: 0x1A102A0 VA: 0x1A102A0
	public string GetScaleButtonSpriteName() { }

	// RVA: 0x1A0D7F0 Offset: 0x1A0D7F0 VA: 0x1A0D7F0
	private long GetEventFriendCampaignFinishedAt() { }

	// RVA: 0x1A0EF88 Offset: 0x1A0EF88 VA: 0x1A0EF88
	public void UpdateItemState(bool isPushMode) { }

	// RVA: 0x1A102D8 Offset: 0x1A102D8 VA: 0x1A102D8
	private static void .cctor() { }
}

// Namespace: 
public enum SupportServantListViewManager.InitMode // TypeDefIndex: 10838
{
	// Fields
	public int value__; // 0x0
	public const SupportServantListViewManager.InitMode NONE = 0;
	public const SupportServantListViewManager.InitMode VALID = 1;
	public const SupportServantListViewManager.InitMode INPUT = 2;
	public const SupportServantListViewManager.InitMode MODIFY = 3;
}

// Namespace: 
public enum SupportServantListViewManager.ResultKind // TypeDefIndex: 10839
{
	// Fields
	public int value__; // 0x0
	public const SupportServantListViewManager.ResultKind NONE = 0;
	public const SupportServantListViewManager.ResultKind CANCEL = 1;
	public const SupportServantListViewManager.ResultKind DECIDE = 2;
}

// Namespace: 
public sealed class SupportServantListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 10840
{
	// Methods

	// RVA: 0x1A10394 Offset: 0x1A10394 VA: 0x1A10394
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1A0E9F0 Offset: 0x1A0E9F0 VA: 0x1A0E9F0 Slot: 11
	public virtual void Invoke(SupportServantListViewManager.ResultKind kind, int result) { }

	// RVA: 0x1A103A4 Offset: 0x1A103A4 VA: 0x1A103A4 Slot: 12
	public virtual IAsyncResult BeginInvoke(SupportServantListViewManager.ResultKind kind, int result, AsyncCallback callback, object object) { }

	// RVA: 0x1A1044C Offset: 0x1A1044C VA: 0x1A1044C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SupportServantListViewObject : ListViewObject // TypeDefIndex: 10841
{
	// Fields
	protected SupportServantListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCE6BF0 Offset: 0xCE6BF0 VA: 0xCE6BF0
	[DebuggerBrowsableAttribute] // RVA: 0xCE6BF0 Offset: 0xCE6BF0 VA: 0xCE6BF0
	private Action callbackFunc; // 0x70
	protected SupportServantListViewItemDraw itemDraw; // 0x78
	protected SupportServantListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x1A10458 Offset: 0x1A10458 VA: 0x1A10458
	public void .ctor() { }

	// RVA: 0x1A104C0 Offset: 0x1A104C0 VA: 0x1A104C0
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1A105AC Offset: 0x1A105AC VA: 0x1A105AC
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1A10698 Offset: 0x1A10698 VA: 0x1A10698
	protected void Awake() { }

	// RVA: 0x1A1070C Offset: 0x1A1070C VA: 0x1A1070C
	private void OnDestroy() { }

	// RVA: 0x1A0CD4C Offset: 0x1A0CD4C VA: 0x1A0CD4C
	public SupportServantListViewItem GetItem() { }

	// RVA: 0x1A107B8 Offset: 0x1A107B8 VA: 0x1A107B8 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1A107E8 Offset: 0x1A107E8 VA: 0x1A107E8 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x1A107E0 Offset: 0x1A107E0 VA: 0x1A107E0
	protected void InitItem() { }

	// RVA: 0x1A10810 Offset: 0x1A10810 VA: 0x1A10810 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x1A10914 Offset: 0x1A10914 VA: 0x1A10914 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1A1099C Offset: 0x1A1099C VA: 0x1A1099C
	public void Init(SupportServantListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1A0E7BC Offset: 0x1A0E7BC VA: 0x1A0E7BC
	public void Init(SupportServantListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x1A0E840 Offset: 0x1A0E840 VA: 0x1A0E840
	public void Init(SupportServantListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x1A0E0CC Offset: 0x1A0E0CC VA: 0x1A0E0CC
	public void Init(SupportServantListViewObject.InitMode initMode) { }

	// RVA: 0x1A10BB8 Offset: 0x1A10BB8 VA: 0x1A10BB8
	protected void SetupDisp() { }

	// RVA: 0x1A0E334 Offset: 0x1A0E334 VA: 0x1A0E334
	public void ResetEventCampaign() { }

	// RVA: 0x1A10CC8 Offset: 0x1A10CC8 VA: 0x1A10CC8
	protected void EventMoveEnd() { }

	// RVA: 0x1A10CF0 Offset: 0x1A10CF0 VA: 0x1A10CF0
	public void OnLongPush() { }

	// RVA: 0x1A10D78 Offset: 0x1A10D78 VA: 0x1A10D78
	public void OnClickItem() { }
}

// Namespace: 
public enum SupportServantListViewObject.InitMode // TypeDefIndex: 10842
{
	// Fields
	public int value__; // 0x0
	public const SupportServantListViewObject.InitMode INVISIBLE = 0;
	public const SupportServantListViewObject.InitMode INVALID = 1;
	public const SupportServantListViewObject.InitMode VALID = 2;
	public const SupportServantListViewObject.InitMode INPUT = 3;
	public const SupportServantListViewObject.InitMode MODIFY = 4;
	public const SupportServantListViewObject.InitMode TUTORIAL_INPUT = 5;
}

// Namespace: 
protected enum SupportServantListViewObject.State // TypeDefIndex: 10843
{
	// Fields
	public int value__; // 0x0
	public const SupportServantListViewObject.State INIT = 0;
	public const SupportServantListViewObject.State IDLE = 1;
	public const SupportServantListViewObject.State MOVE = 2;
	public const SupportServantListViewObject.State INPUT = 3;
	public const SupportServantListViewObject.State TUTORIAL_INPUT = 4;
}

// Namespace: 
public class SupportServantSelectMenu : BaseMenu // TypeDefIndex: 10844
{
	// Fields
	[SerializeField] // RVA: 0xCE6C2C Offset: 0xCE6C2C VA: 0xCE6C2C
	protected SupportServantListViewManager supportServantListViewManager; // 0x58
	[SerializeField] // RVA: 0xCE6C3C Offset: 0xCE6C3C VA: 0xCE6C3C
	protected TitleInfoControl titleInfo; // 0x60
	[SerializeField] // RVA: 0xCE6C4C Offset: 0xCE6C4C VA: 0xCE6C4C
	protected UILabel explanationLabel; // 0x68
	[SerializeField] // RVA: 0xCE6C5C Offset: 0xCE6C5C VA: 0xCE6C5C
	protected UISprite normalTabSprite; // 0x70
	[SerializeField] // RVA: 0xCE6C6C Offset: 0xCE6C6C VA: 0xCE6C6C
	protected UICommonButton normalTabButton; // 0x78
	[SerializeField] // RVA: 0xCE6C7C Offset: 0xCE6C7C VA: 0xCE6C7C
	protected UISprite lockTabSprite; // 0x80
	[SerializeField] // RVA: 0xCE6C8C Offset: 0xCE6C8C VA: 0xCE6C8C
	protected UICommonButton lockTabButton; // 0x88
	[SerializeField] // RVA: 0xCE6C9C Offset: 0xCE6C9C VA: 0xCE6C9C
	protected UISprite choiceTabSprite; // 0x90
	[SerializeField] // RVA: 0xCE6CAC Offset: 0xCE6CAC VA: 0xCE6CAC
	protected UICommonButton choiceTabButton; // 0x98
	[SerializeField] // RVA: 0xCE6CBC Offset: 0xCE6CBC VA: 0xCE6CBC
	protected UISprite scaleChangeTabSprite; // 0xA0
	[SerializeField] // RVA: 0xCE6CCC Offset: 0xCE6CCC VA: 0xCE6CCC
	protected UICommonButton scaleChangeTabButton; // 0xA8
	[SerializeField] // RVA: 0xCE6CDC Offset: 0xCE6CDC VA: 0xCE6CDC
	protected UISprite bgTxtSprite; // 0xB0
	[SerializeField] // RVA: 0xCE6CEC Offset: 0xCE6CEC VA: 0xCE6CEC
	protected UISprite pushTabSprite; // 0xB8
	[SerializeField] // RVA: 0xCE6CFC Offset: 0xCE6CFC VA: 0xCE6CFC
	protected UICommonButton pushTabButton; // 0xC0
	protected SupportServantSelectMenu.State state; // 0xC8
	[CompilerGeneratedAttribute] // RVA: 0xCE6D0C Offset: 0xCE6D0C VA: 0xCE6D0C
	[DebuggerBrowsableAttribute] // RVA: 0xCE6D0C Offset: 0xCE6D0C VA: 0xCE6D0C
	private SupportServantSelectMenu.CallbackFunc callbackFunc; // 0xD0
	protected SupportServantSelectMenu.RequestCallbackFunc requestCallback; // 0xD8
	private SupportServantSelectMenu.ModeKind tabModeKind; // 0xE0
	private int classPos; // 0xE4
	protected const string BEFORE_CLASS_POS = "ClassPos";

	// Methods

	// RVA: 0x1A10E14 Offset: 0x1A10E14 VA: 0x1A10E14
	public void .ctor() { }

	// RVA: 0x1A10E7C Offset: 0x1A10E7C VA: 0x1A10E7C
	protected void add_callbackFunc(SupportServantSelectMenu.CallbackFunc value) { }

	// RVA: 0x1A10F68 Offset: 0x1A10F68 VA: 0x1A10F68
	protected void remove_callbackFunc(SupportServantSelectMenu.CallbackFunc value) { }

	// RVA: 0x1A11054 Offset: 0x1A11054 VA: 0x1A11054
	public void Init() { }

	// RVA: 0x1A11664 Offset: 0x1A11664 VA: 0x1A11664
	public void Open(SupportServantData[] supportServantData, int nowDeckNum, int classPos, EventUpValSetupInfo eventSetupInfo, int nowDeckId, int[] fixMainDeckIds, int[] fixEventDeckIds, SupportServantSelectMenu.CallbackFunc callback) { }

	// RVA: 0x1A118F4 Offset: 0x1A118F4 VA: 0x1A118F4
	protected void EndOpen() { }

	// RVA: 0x1A1198C Offset: 0x1A1198C VA: 0x1A1198C
	public void ModifyItem() { }

	// RVA: 0x1A119BC Offset: 0x1A119BC VA: 0x1A119BC
	protected void Callback(SupportSelectRootComponent.ResultKind result, int classPos, UserServantEntity entity) { }

	// RVA: 0x1A11C44 Offset: 0x1A11C44 VA: 0x1A11C44
	protected void OnSelectItem(SupportServantListViewManager.ResultKind kind, int offset) { }

	// RVA: 0x1A12A34 Offset: 0x1A12A34 VA: 0x1A12A34
	public void onClickNormalTabButton() { }

	// RVA: 0x1A12CF8 Offset: 0x1A12CF8 VA: 0x1A12CF8
	protected void EndClickTabNormal(bool isRequest) { }

	// RVA: 0x1A12D58 Offset: 0x1A12D58 VA: 0x1A12D58
	public void onClickLockTabButton() { }

	// RVA: 0x1A12E6C Offset: 0x1A12E6C VA: 0x1A12E6C
	protected void EndClickTabLock(bool isRequest) { }

	// RVA: 0x1A12ECC Offset: 0x1A12ECC VA: 0x1A12ECC
	public void onClickChoiceTabButton() { }

	// RVA: 0x1A12FE0 Offset: 0x1A12FE0 VA: 0x1A12FE0
	protected void EndClickTabChoice(bool isRequest) { }

	// RVA: 0x1A13040 Offset: 0x1A13040 VA: 0x1A13040
	public void onClickPushTabButton() { }

	// RVA: 0x1A1311C Offset: 0x1A1311C VA: 0x1A1311C
	protected void EndClickTabPush(bool isRequest) { }

	// RVA: 0x1A11174 Offset: 0x1A11174 VA: 0x1A11174
	private void setModeTabKind(SupportServantSelectMenu.ModeKind modeKind) { }

	// RVA: 0x1A1317C Offset: 0x1A1317C VA: 0x1A1317C
	public void OnClickCancel() { }

	// RVA: 0x1A13268 Offset: 0x1A13268 VA: 0x1A13268
	protected void endCancelButton(bool isRequest) { }

	// RVA: 0x1A12AFC Offset: 0x1A12AFC VA: 0x1A12AFC
	public void statusRequest(SupportServantSelectMenu.RequestCallbackFunc callback) { }

	// RVA: 0x1A13544 Offset: 0x1A13544 VA: 0x1A13544
	protected void EndStatusSync(string result) { }

	// RVA: 0x1A13564 Offset: 0x1A13564 VA: 0x1A13564
	public void OnClickScaleChange() { }

	// RVA: 0x1A1268C Offset: 0x1A1268C VA: 0x1A1268C
	private void PushRequest(SupportServantListViewItem selectItem) { }

	// RVA: 0x1A13638 Offset: 0x1A13638 VA: 0x1A13638
	private void EndCardFavoriteRequest(string result) { }

	// RVA: 0x1A136EC Offset: 0x1A136EC VA: 0x1A136EC
	public void ClearScrollValue() { }
}

// Namespace: 
protected enum SupportServantSelectMenu.State // TypeDefIndex: 10845
{
	// Fields
	public int value__; // 0x0
	public const SupportServantSelectMenu.State INIT = 0;
	public const SupportServantSelectMenu.State OPEN = 1;
	public const SupportServantSelectMenu.State INPUT = 2;
	public const SupportServantSelectMenu.State SELECTED = 3;
	public const SupportServantSelectMenu.State CLOSE = 4;
}

// Namespace: 
public enum SupportServantSelectMenu.ModeKind // TypeDefIndex: 10846
{
	// Fields
	public int value__; // 0x0
	public const SupportServantSelectMenu.ModeKind NORMAL = 0;
	public const SupportServantSelectMenu.ModeKind LOCK = 1;
	public const SupportServantSelectMenu.ModeKind CHOICE = 2;
	public const SupportServantSelectMenu.ModeKind PUSH = 3;
	public const SupportServantSelectMenu.ModeKind SUM = 4;
}

// Namespace: 
public sealed class SupportServantSelectMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10847
{
	// Methods

	// RVA: 0x1A13898 Offset: 0x1A13898 VA: 0x1A13898
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1A119D8 Offset: 0x1A119D8 VA: 0x1A119D8 Slot: 11
	public virtual void Invoke(SupportSelectRootComponent.ResultKind result, int classPos, UserServantEntity entity) { }

	// RVA: 0x1A138A8 Offset: 0x1A138A8 VA: 0x1A138A8 Slot: 12
	public virtual IAsyncResult BeginInvoke(SupportSelectRootComponent.ResultKind result, int classPos, UserServantEntity entity, AsyncCallback callback, object object) { }

	// RVA: 0x1A13960 Offset: 0x1A13960 VA: 0x1A13960 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class SupportServantSelectMenu.RequestCallbackFunc : MulticastDelegate // TypeDefIndex: 10848
{
	// Methods

	// RVA: 0x1A12AEC Offset: 0x1A12AEC VA: 0x1A12AEC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1A13318 Offset: 0x1A13318 VA: 0x1A13318 Slot: 11
	public virtual void Invoke(bool isRequest) { }

	// RVA: 0x1A1396C Offset: 0x1A1396C VA: 0x1A1396C Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isRequest, AsyncCallback callback, object object) { }

	// RVA: 0x1A139FC Offset: 0x1A139FC VA: 0x1A139FC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1740 Offset: 0xCB1740 VA: 0xCB1740
private sealed class SupportServantSelectMenu.<OnSelectItem>c__AnonStorey0 // TypeDefIndex: 10849
{
	// Fields
	internal SupportServantListViewItem item; // 0x10
	internal SupportServantSelectMenu $this; // 0x18

	// Methods

	// RVA: 0x1A12684 Offset: 0x1A12684 VA: 0x1A12684
	public void .ctor() { }

	// RVA: 0x1A13720 Offset: 0x1A13720 VA: 0x1A13720
	internal void <>m__0(bool isDecide) { }

	// RVA: 0x1A13868 Offset: 0x1A13868 VA: 0x1A13868
	internal void <>m__1() { }
}

// Namespace: 
public class BaseCore : MonoBehaviour // TypeDefIndex: 10850
{
	// Fields
	public const float ROTATE_AUTO_SPD = -0.4;
	public const float ZOOM_IN_WHITE_FADE_TIME = 0.4;
	public const float ZOOM_OUT_WHITE_FADE_TIME = 0.4;
	[SerializeField] // RVA: 0xCE6D48 Offset: 0xCE6D48 VA: 0xCE6D48
	protected GameObject mEarthRoot; // 0x18
	[SerializeField] // RVA: 0xCE6D58 Offset: 0xCE6D58 VA: 0xCE6D58
	protected GameObject mEarthPointRoot; // 0x20
	[SerializeField] // RVA: 0xCE6D68 Offset: 0xCE6D68 VA: 0xCE6D68
	protected GameObject mEarthPointPrefab; // 0x28
	protected TerminalSceneComponent mTerminalScene; // 0x30
	protected GameObject mTerminalMap; // 0x38
	protected Camera mEarthEffCamera; // 0x40
	protected BaseEarthPoint mFocusEarthPoint; // 0x48
	protected MeshRenderer mMeshRenderer; // 0x50
	protected Quaternion mRootQua; // 0x58
	protected Quaternion mResumeQua; // 0x68
	protected Vector3 mFocusTgtPos; // 0x78
	protected float mFocusTgtScl; // 0x84
	protected bool mIsFocusIn; // 0x88
	protected bool mIsFocusMoving; // 0x89
	protected bool mIsTouch; // 0x8A
	protected bool mIsReqZoomIn; // 0x8B
	protected BaseCore.CORE_TYPE mCoreType; // 0x8C
	[CompilerGeneratedAttribute] // RVA: 0xCE6D78 Offset: 0xCE6D78 VA: 0xCE6D78
	[DebuggerBrowsableAttribute] // RVA: 0xCE6D78 Offset: 0xCE6D78 VA: 0xCE6D78
	private float <PointInitAngle>k__BackingField; // 0x90

	// Properties
	public bool IsFocusIn { get; }
	public bool IsFocusMoving { get; }
	public BaseCore.CORE_TYPE CoreType { get; }
	public float PointInitAngle { get; set; }

	// Methods

	// RVA: 0x1480934 Offset: 0x1480934 VA: 0x1480934
	public void .ctor() { }

	// RVA: 0x148093C Offset: 0x148093C VA: 0x148093C
	public bool get_IsFocusIn() { }

	// RVA: 0x1480944 Offset: 0x1480944 VA: 0x1480944
	public bool get_IsFocusMoving() { }

	// RVA: 0x148094C Offset: 0x148094C VA: 0x148094C
	public BaseCore.CORE_TYPE get_CoreType() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F40C Offset: 0xD3F40C VA: 0xD3F40C
	// RVA: 0x1480954 Offset: 0x1480954 VA: 0x1480954
	public float get_PointInitAngle() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F41C Offset: 0xD3F41C VA: 0xD3F41C
	// RVA: 0x148095C Offset: 0x148095C VA: 0x148095C
	public void set_PointInitAngle(float value) { }

	// RVA: 0x1480964 Offset: 0x1480964 VA: 0x1480964
	public void FocusIn(bool isForce = False) { }

	// RVA: 0x1480978 Offset: 0x1480978 VA: 0x1480978
	public void FocusOut(bool isForce = False) { }

	// RVA: 0x148098C Offset: 0x148098C VA: 0x148098C Slot: 4
	public virtual void FocusInOut(bool isFocusIn, bool isForce = False) { }

	// RVA: 0x1480990 Offset: 0x1480990 VA: 0x1480990 Slot: 5
	public virtual void Awake() { }

	// RVA: 0x1480998 Offset: 0x1480998 VA: 0x1480998 Slot: 6
	public virtual void Update() { }

	// RVA: 0x148099C Offset: 0x148099C VA: 0x148099C Slot: 7
	public virtual void OnPress() { }

	// RVA: 0x14809A0 Offset: 0x14809A0 VA: 0x14809A0
	public void OnRelease() { }

	// RVA: 0x14809A8 Offset: 0x14809A8 VA: 0x14809A8 Slot: 8
	public virtual void Setup(List<MapControl.WarInfo> warInfoList, bool isFocusIn) { }

	// RVA: 0x14809AC Offset: 0x14809AC VA: 0x14809AC
	public void SetTerminalData() { }

	// RVA: 0x1480A6C Offset: 0x1480A6C VA: 0x1480A6C
	public void SetFocusEarthPoint(int warId) { }

	// RVA: 0x1480A90 Offset: 0x1480A90 VA: 0x1480A90
	public BaseEarthPoint GetEarthPoint(int warId) { }

	// RVA: -1 Offset: -1
	protected T CreateEarthPoint<T>(int warId, float x, float y, float z) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218C2A0 Offset: 0x218C2A0 VA: 0x218C2A0
	|-BaseCore.CreateEarthPoint<CylinderPoint>
	|-BaseCore.CreateEarthPoint<EarthPoint>
	|-BaseCore.CreateEarthPoint<object>
	*/

	// RVA: 0x1480BF0 Offset: 0x1480BF0 VA: 0x1480BF0
	protected bool IsWarOpen(MapControl.WarInfo warInfo) { }

	// RVA: 0x1480CFC Offset: 0x1480CFC VA: 0x1480CFC Slot: 9
	public virtual void mcbfStartMain() { }

	// RVA: 0x1480D00 Offset: 0x1480D00 VA: 0x1480D00 Slot: 10
	public virtual void mcbfStartZoomOut() { }

	// RVA: 0x1480D04 Offset: 0x1480D04 VA: 0x1480D04 Slot: 11
	public virtual void mcbfStartZoomIn() { }

	// RVA: 0x1480D08 Offset: 0x1480D08 VA: 0x1480D08 Slot: 12
	public virtual void SetDisp(bool isDisp) { }

	// RVA: 0x1480D0C Offset: 0x1480D0C VA: 0x1480D0C Slot: 13
	public virtual BaseCore.STATE GetState() { }

	// RVA: 0x1480D14 Offset: 0x1480D14 VA: 0x1480D14 Slot: 14
	public virtual float GetStateMainInertialSpdOld() { }

	// RVA: 0x1480D1C Offset: 0x1480D1C VA: 0x1480D1C Slot: 15
	public virtual void SetState(BaseCore.STATE state) { }

	// RVA: 0x1480D20 Offset: 0x1480D20 VA: 0x1480D20
	public void SetRotateY_PointInitAngle() { }

	// RVA: 0x1480DA4 Offset: 0x1480DA4 VA: 0x1480DA4
	public void EndSlideServant() { }
}

// Namespace: 
public enum BaseCore.CORE_TYPE // TypeDefIndex: 10851
{
	// Fields
	public int value__; // 0x0
	public const BaseCore.CORE_TYPE EARTH = 0;
	public const BaseCore.CORE_TYPE CYLINDER = 1;
}

// Namespace: 
public enum BaseCore.STATE // TypeDefIndex: 10852
{
	// Fields
	public int value__; // 0x0
	public const BaseCore.STATE NONE = 0;
	public const BaseCore.STATE MAIN = 1;
	public const BaseCore.STATE ZOOM_IN = 2;
	public const BaseCore.STATE ZOOM_OUT = 3;
	public const BaseCore.STATE SIZEOF = 4;
}

// Namespace: 
public class BaseEarthPoint : MonoBehaviour // TypeDefIndex: 10853
{
	// Fields
	public const string NAME_PREFIX = "EarthPoint_";
	protected static readonly Vector3 FORWARD_VEC; // 0x0
	protected BaseCore mEarthCore; // 0x18
	protected Vector3 mBaseVec; // 0x20
	protected UIWidget mWidget; // 0x30
	protected ParticleSystem mParticleSystem; // 0x38
	protected GameObject mParticleSystemObj; // 0x40
	protected Camera earthEffectCamera; // 0x48
	protected bool mIsForward; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xCE6DB4 Offset: 0xCE6DB4 VA: 0xCE6DB4
	[DebuggerBrowsableAttribute] // RVA: 0xCE6DB4 Offset: 0xCE6DB4 VA: 0xCE6DB4
	private float <FocusAng>k__BackingField; // 0x54
	[CompilerGeneratedAttribute] // RVA: 0xCE6DF0 Offset: 0xCE6DF0 VA: 0xCE6DF0
	[DebuggerBrowsableAttribute] // RVA: 0xCE6DF0 Offset: 0xCE6DF0 VA: 0xCE6DF0
	private Quaternion <FocusQua>k__BackingField; // 0x58
	protected bool IsParticleDisp; // 0x68

	// Properties
	public BaseCore EarthCore { get; }
	public bool IsForward { get; }
	public float FocusAng { get; set; }
	public Quaternion FocusQua { get; set; }

	// Methods

	// RVA: 0x1481A44 Offset: 0x1481A44 VA: 0x1481A44
	public void .ctor() { }

	// RVA: 0x1481A54 Offset: 0x1481A54 VA: 0x1481A54
	public BaseCore get_EarthCore() { }

	// RVA: 0x1481A5C Offset: 0x1481A5C VA: 0x1481A5C
	public bool get_IsForward() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F42C Offset: 0xD3F42C VA: 0xD3F42C
	// RVA: 0x1481A64 Offset: 0x1481A64 VA: 0x1481A64
	public float get_FocusAng() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F43C Offset: 0xD3F43C VA: 0xD3F43C
	// RVA: 0x1481A6C Offset: 0x1481A6C VA: 0x1481A6C
	private void set_FocusAng(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F44C Offset: 0xD3F44C VA: 0xD3F44C
	// RVA: 0x1481A74 Offset: 0x1481A74 VA: 0x1481A74
	public Quaternion get_FocusQua() { }
