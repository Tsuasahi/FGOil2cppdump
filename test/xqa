	public void .ctor() { }

	// RVA: 0x15A59F0 Offset: 0x15A59F0 VA: 0x15A59F0
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x15A5AE0 Offset: 0x15A5AE0 VA: 0x15A5AE0
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x15A5BD0 Offset: 0x15A5BD0 VA: 0x15A5BD0
	public List<ScriptBackLogListViewObject> get_ObjectList() { }

	// RVA: 0x15A4F18 Offset: 0x15A4F18 VA: 0x15A4F18
	public void CreateList(List<ScriptMessageLabel> logList, float offsetY, ScriptBackLogListViewManager.ClickDelegate callbackFunc) { }

	// RVA: 0x15A51F4 Offset: 0x15A51F4 VA: 0x15A51F4
	public void DestroyList() { }

	// RVA: 0x15A5D9C Offset: 0x15A5D9C VA: 0x15A5D9C
	public ScriptBackLogListViewItem GetItem(int index) { }

	// RVA: 0x15A5E44 Offset: 0x15A5E44 VA: 0x15A5E44 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x15A5134 Offset: 0x15A5134 VA: 0x15A5134
	public void SetMode(ScriptBackLogListViewManager.InitMode mode) { }

	// RVA: 0x15A5F7C Offset: 0x15A5F7C VA: 0x15A5F7C
	public void SetMode(ScriptBackLogListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x15A62C8 Offset: 0x15A62C8 VA: 0x15A62C8
	protected void RequestListObject(ScriptBackLogListViewObject.InitMode mode, float delay) { }

	// RVA: 0x15A60D4 Offset: 0x15A60D4 VA: 0x15A60D4
	protected void RequestListObject(ScriptBackLogListViewObject.InitMode mode) { }

	// RVA: 0x15A65D8 Offset: 0x15A65D8 VA: 0x15A65D8
	protected void OnMoveEnd() { }

	// RVA: 0x15A66A4 Offset: 0x15A66A4 VA: 0x15A66A4
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x15A6924 Offset: 0x15A6924 VA: 0x15A6924
	public void OnClickBack() { }

	// RVA: 0x15A693C Offset: 0x15A693C VA: 0x15A693C
	protected void OnEnable() { }
}

// Namespace: 
public enum ScriptBackLogListViewManager.InitMode // TypeDefIndex: 8448
{
	// Fields
	public int value__; // 0x0
	public const ScriptBackLogListViewManager.InitMode NONE = 0;
	public const ScriptBackLogListViewManager.InitMode INPUT = 1;
}

// Namespace: 
public sealed class ScriptBackLogListViewManager.ClickDelegate : MulticastDelegate // TypeDefIndex: 8449
{
	// Methods

	// RVA: 0x15A4F08 Offset: 0x15A4F08 VA: 0x15A4F08
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x15A66F8 Offset: 0x15A66F8 VA: 0x15A66F8 Slot: 11
	public virtual void Invoke(int select) { }

	// RVA: 0x15A69C4 Offset: 0x15A69C4 VA: 0x15A69C4 Slot: 12
	public virtual IAsyncResult BeginInvoke(int select, AsyncCallback callback, object object) { }

	// RVA: 0x15A6A50 Offset: 0x15A6A50 VA: 0x15A6A50 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2A6BC Offset: 0xC2A6BC VA: 0xC2A6BC
public class ScriptBackLogListViewObject : ListViewObject // TypeDefIndex: 8450
{
	// Fields
	protected ScriptBackLogListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC5E538 Offset: 0xC5E538 VA: 0xC5E538
	[DebuggerBrowsableAttribute] // RVA: 0xC5E538 Offset: 0xC5E538 VA: 0xC5E538
	private Action callbackFunc; // 0x70
	protected ScriptBackLogListViewItemDraw itemDraw; // 0x78
	protected ScriptBackLogListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x15A6A5C Offset: 0x15A6A5C VA: 0x15A6A5C
	public void .ctor() { }

	// RVA: 0x15A6AC4 Offset: 0x15A6AC4 VA: 0x15A6AC4
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x15A6BB0 Offset: 0x15A6BB0 VA: 0x15A6BB0
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x15A6C9C Offset: 0x15A6C9C VA: 0x15A6C9C
	protected void Awake() { }

	// RVA: 0x15A6D10 Offset: 0x15A6D10 VA: 0x15A6D10
	private void OnDestroy() { }

	// RVA: 0x15A6DBC Offset: 0x15A6DBC VA: 0x15A6DBC
	private void Start() { }

	// RVA: 0x15A6DD0 Offset: 0x15A6DD0 VA: 0x15A6DD0
	public ScriptBackLogListViewItem GetItem() { }

	// RVA: 0x15A6E54 Offset: 0x15A6E54 VA: 0x15A6E54 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x15A6E60 Offset: 0x15A6E60 VA: 0x15A6E60 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x15A6EE8 Offset: 0x15A6EE8 VA: 0x15A6EE8
	public void Init(ScriptBackLogListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x15A64D0 Offset: 0x15A64D0 VA: 0x15A64D0
	public void Init(ScriptBackLogListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x15A6554 Offset: 0x15A6554 VA: 0x15A6554
	public void Init(ScriptBackLogListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x15A5EFC Offset: 0x15A5EFC VA: 0x15A5EFC
	public void Init(ScriptBackLogListViewObject.InitMode initMode) { }

	// RVA: 0x15A70AC Offset: 0x15A70AC VA: 0x15A70AC
	protected void SetupDisp() { }

	// RVA: 0x15A71BC Offset: 0x15A71BC VA: 0x15A71BC
	protected void EventMoveEnd() { }

	// RVA: 0x15A71E4 Offset: 0x15A71E4 VA: 0x15A71E4 Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum ScriptBackLogListViewObject.InitMode // TypeDefIndex: 8451
{
	// Fields
	public int value__; // 0x0
	public const ScriptBackLogListViewObject.InitMode INVISIBLE = 0;
	public const ScriptBackLogListViewObject.InitMode INVALID = 1;
	public const ScriptBackLogListViewObject.InitMode VALID = 2;
	public const ScriptBackLogListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum ScriptBackLogListViewObject.State // TypeDefIndex: 8452
{
	// Fields
	public int value__; // 0x0
	public const ScriptBackLogListViewObject.State INIT = 0;
	public const ScriptBackLogListViewObject.State IDLE = 1;
	public const ScriptBackLogListViewObject.State MOVE = 2;
	public const ScriptBackLogListViewObject.State INPUT = 3;
}

// Namespace: 
public class ScriptCharaData // TypeDefIndex: 8453
{
	// Fields
	protected ScriptCharaData.Kind kind; // 0x10
	protected ScriptCharaData.State state; // 0x14
	protected string name; // 0x18
	protected string imageName; // 0x20
	protected string talkName; // 0x28
	protected GameObject gameObject; // 0x30
	protected UIScriptChara chara; // 0x38
	protected Face.Type faceType; // 0x40
	protected string changeKind; // 0x48
	protected float changeSpeed; // 0x50
	protected int defaultDepth; // 0x54
	protected bool isWaitTalkMoveAlpha; // 0x58

	// Properties
	public ScriptCharaData.Kind DispKind { get; }
	public string Name { get; }
	public string TalkName { get; }

	// Methods

	// RVA: 0x15AB450 Offset: 0x15AB450 VA: 0x15AB450
	public void .ctor(ScriptCharaData.Kind kind, string name, string imageName, ItemSeed seed) { }

	// RVA: 0x15AB9E0 Offset: 0x15AB9E0 VA: 0x15AB9E0
	public ScriptCharaData.Kind get_DispKind() { }

	// RVA: 0x15AB9E8 Offset: 0x15AB9E8 VA: 0x15AB9E8
	public string get_Name() { }

	// RVA: 0x15AB9F0 Offset: 0x15AB9F0 VA: 0x15AB9F0
	public string get_TalkName() { }

	// RVA: 0x15AB9F8 Offset: 0x15AB9F8 VA: 0x15AB9F8
	public bool IsLoad() { }

	// RVA: 0x15ABA08 Offset: 0x15ABA08 VA: 0x15ABA08
	public bool IsChange() { }

	// RVA: 0x15AB924 Offset: 0x15AB924 VA: 0x15AB924
	public void SetCharacter(string imageName) { }

	// RVA: 0x15ABA48 Offset: 0x15ABA48 VA: 0x15ABA48
	protected void EndLoadAsset() { }

	// RVA: 0x15ABA54 Offset: 0x15ABA54 VA: 0x15ABA54
	public void ChangeCharacter(string kind, float speed, string imageName, int type) { }

	// RVA: 0x15ABB2C Offset: 0x15ABB2C VA: 0x15ABB2C
	protected void EndChange() { }

	// RVA: 0x15ABB38 Offset: 0x15ABB38 VA: 0x15ABB38
	public void Destroy() { }

	// RVA: 0x15ABBEC Offset: 0x15ABBEC VA: 0x15ABBEC
	public void SetFace(int type, float fadeTime = 0) { }

	// RVA: 0x15ABC3C Offset: 0x15ABC3C VA: 0x15ABC3C
	public void SetShadow(bool isShadow, bool isSkip) { }

	// RVA: 0x15ABC88 Offset: 0x15ABC88 VA: 0x15ABC88
	public void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x15ABCF4 Offset: 0x15ABCF4 VA: 0x15ABCF4
	public void SetTalkName(string name) { }

	// RVA: 0x15ABCFC Offset: 0x15ABCFC VA: 0x15ABCFC
	public void SetPosition(int index) { }

	// RVA: 0x15ABDB4 Offset: 0x15ABDB4 VA: 0x15ABDB4
	public void SetPosition(float x, float y) { }

	// RVA: 0x15ABE6C Offset: 0x15ABE6C VA: 0x15ABE6C
	public void SetPosition(Vector3 v) { }

	// RVA: 0x15ABEC4 Offset: 0x15ABEC4 VA: 0x15ABEC4
	public void SetScale(float v) { }

	// RVA: 0x15ABF04 Offset: 0x15ABF04 VA: 0x15ABF04
	public void SetFullScreenScaleType(int type) { }

	// RVA: 0x15ABF44 Offset: 0x15ABF44 VA: 0x15ABF44
	public void SetTalkMask(bool isMask) { }

	// RVA: 0x15ABF80 Offset: 0x15ABF80 VA: 0x15ABF80
	public void SetAlpha(float a) { }

	// RVA: 0x15AB9D8 Offset: 0x15AB9D8 VA: 0x15AB9D8
	public void SetDepth(int d) { }

	// RVA: 0x15ABFC4 Offset: 0x15ABFC4 VA: 0x15ABFC4
	public void RecoverDepth() { }

	// RVA: 0x15AC000 Offset: 0x15AC000 VA: 0x15AC000
	public void SetTalkDepth() { }

	// RVA: 0x15AC038 Offset: 0x15AC038 VA: 0x15AC038
	public bool IsMoveAlpha() { }

	// RVA: 0x15AC06C Offset: 0x15AC06C VA: 0x15AC06C
	public bool IsMoveAlphaWaitTalk() { }

	// RVA: 0x15AC0B0 Offset: 0x15AC0B0 VA: 0x15AC0B0
	public void MoveAlpha(float duration, float alpha, bool isWaitTalk = True) { }

	// RVA: 0x15AC108 Offset: 0x15AC108 VA: 0x15AC108
	public void MoveAlphaSpeed(float speed, float alpha, bool isWaitTalk = True) { }

	// RVA: 0x15AC160 Offset: 0x15AC160 VA: 0x15AC160
	public bool IsMove() { }

	// RVA: 0x15AC190 Offset: 0x15AC190 VA: 0x15AC190
	public void MovePosition(float duration, int index) { }

	// RVA: 0x15AC294 Offset: 0x15AC294 VA: 0x15AC294
	public void MovePosition(float duration, float x, float y) { }

	// RVA: 0x15AC234 Offset: 0x15AC234 VA: 0x15AC234
	public void MovePosition(float duration, Vector3 v) { }

	// RVA: 0x15AC340 Offset: 0x15AC340 VA: 0x15AC340
	public void MoveReturnPosition(float duration) { }

	// RVA: 0x15AC380 Offset: 0x15AC380 VA: 0x15AC380
	public void MoveReturnPosition(float duration, int index) { }

	// RVA: 0x15AC484 Offset: 0x15AC484 VA: 0x15AC484
	public void MoveReturnPosition(float duration, float x, float y) { }

	// RVA: 0x15AC424 Offset: 0x15AC424 VA: 0x15AC424
	public void MoveReturnPosition(float duration, Vector3 v) { }

	// RVA: 0x15AC530 Offset: 0x15AC530 VA: 0x15AC530
	public void MoveScale(float duration, float s) { }

	// RVA: 0x15AC578 Offset: 0x15AC578 VA: 0x15AC578
	public void MoveAttack(string kind, float duration, int index) { }

	// RVA: 0x15AC68C Offset: 0x15AC68C VA: 0x15AC68C
	public void MoveAttack(string kind, float duration, float x, float y) { }

	// RVA: 0x15AC624 Offset: 0x15AC624 VA: 0x15AC624
	public void MoveAttack(string kind, float duration, Vector3 v) { }

	// RVA: 0x15AC748 Offset: 0x15AC748 VA: 0x15AC748
	public bool IsRoll() { }

	// RVA: 0x15AC778 Offset: 0x15AC778 VA: 0x15AC778
	public void InitRoll() { }

	// RVA: 0x15AC7A8 Offset: 0x15AC7A8 VA: 0x15AC7A8
	public void SetRoll(float rollZ, Vector3 centerOffset) { }

	// RVA: 0x15AC808 Offset: 0x15AC808 VA: 0x15AC808
	public void StartRoll(float duration, float rollZ) { }

	// RVA: 0x15AC850 Offset: 0x15AC850 VA: 0x15AC850
	public void StartRollEx(float duration, float rollZ, Vector3 centerOffset) { }

	// RVA: 0x15AC8C0 Offset: 0x15AC8C0 VA: 0x15AC8C0
	public bool IsShake() { }

	// RVA: 0x15AC8F0 Offset: 0x15AC8F0 VA: 0x15AC8F0
	public void Shake(float duration, float cycle, float x, float y) { }

	// RVA: 0x15AC950 Offset: 0x15AC950 VA: 0x15AC950
	public void ShakeStop() { }

	// RVA: 0x15AC990 Offset: 0x15AC990 VA: 0x15AC990
	public bool IsCut() { }

	// RVA: 0x15AC9C0 Offset: 0x15AC9C0 VA: 0x15AC9C0
	public bool IsCutStart() { }

	// RVA: 0x15AC9F0 Offset: 0x15AC9F0 VA: 0x15AC9F0
	public void SetCutin(string n, float time, float mgd, bool isSkip = False, bool isPause = False) { }

	// RVA: 0x15ACA60 Offset: 0x15ACA60 VA: 0x15ACA60
	public void ResumeCutin(bool isSkip = False) { }

	// RVA: 0x15ACAA0 Offset: 0x15ACAA0 VA: 0x15ACAA0
	public void SetCutout(float time, bool isSkip = False) { }

	// RVA: 0x15ACAF0 Offset: 0x15ACAF0 VA: 0x15ACAF0
	public void StopCut() { }

	// RVA: 0x15ACB20 Offset: 0x15ACB20 VA: 0x15ACB20
	public bool IsSpecialEffect() { }

	// RVA: 0x15ACB50 Offset: 0x15ACB50 VA: 0x15ACB50
	public bool IsSpecialEffect(string n) { }

	// RVA: 0x15ACB88 Offset: 0x15ACB88 VA: 0x15ACB88
	public bool IsSpecialEffectStart() { }

	// RVA: 0x15ACBB8 Offset: 0x15ACBB8 VA: 0x15ACBB8
	public bool IsSpecialEffectStart(string n) { }

	// RVA: 0x15ACBF0 Offset: 0x15ACBF0 VA: 0x15ACBF0
	public void SetSpecialEffect(string n, Vector3 pos, float time, Color color, float range, bool isSkip = False, bool isPause = False) { }

	// RVA: 0x15ACCB8 Offset: 0x15ACCB8 VA: 0x15ACCB8
	public void ResumeSpecialEffect(bool isPause = False) { }

	// RVA: 0x15ACCF0 Offset: 0x15ACCF0 VA: 0x15ACCF0
	public void ResumeSpecialEffect(string n, bool isPause = False) { }

	// RVA: 0x15ACD38 Offset: 0x15ACD38 VA: 0x15ACD38
	public void StopSpecialEffect() { }

	// RVA: 0x15ACD68 Offset: 0x15ACD68 VA: 0x15ACD68
	public void StopSpecialEffect(string n) { }

	// RVA: 0x15ACDA0 Offset: 0x15ACDA0 VA: 0x15ACDA0
	public bool IsEffect() { }

	// RVA: 0x15ACDD0 Offset: 0x15ACDD0 VA: 0x15ACDD0
	public bool IsEffect(string n) { }

	// RVA: 0x15ACE08 Offset: 0x15ACE08 VA: 0x15ACE08
	public bool IsEffectStart() { }

	// RVA: 0x15ACE38 Offset: 0x15ACE38 VA: 0x15ACE38
	public bool IsEffectStart(string n) { }

	// RVA: 0x15ACE70 Offset: 0x15ACE70 VA: 0x15ACE70
	public void SetEffect(string n, bool isSkip = False, bool isPause = False, CommonEffectManager.FlipKind flip = 0) { }

	// RVA: 0x15ACED0 Offset: 0x15ACED0 VA: 0x15ACED0
	public void SetEffect(string n, Vector3 p, bool isSkip = False, bool isPause = False, CommonEffectManager.FlipKind flip = 0) { }

	// RVA: 0x15ACF58 Offset: 0x15ACF58 VA: 0x15ACF58
	public void ResumeEffect(bool isSkip = False) { }

	// RVA: 0x15ACF90 Offset: 0x15ACF90 VA: 0x15ACF90
	public void ResumeEffect(string n, bool isSkip = False) { }

	// RVA: 0x15ACFD8 Offset: 0x15ACFD8 VA: 0x15ACFD8
	public bool StopEffect(bool isSkip = False) { }

	// RVA: 0x15AD010 Offset: 0x15AD010 VA: 0x15AD010
	public bool StopEffect(string n, bool isSkip = False) { }

	// RVA: 0x15AD058 Offset: 0x15AD058 VA: 0x15AD058
	public bool IsBackEffect() { }

	// RVA: 0x15AD088 Offset: 0x15AD088 VA: 0x15AD088
	public bool IsBackEffect(string n) { }

	// RVA: 0x15AD0C0 Offset: 0x15AD0C0 VA: 0x15AD0C0
	public bool IsBackEffectStart() { }

	// RVA: 0x15AD0F0 Offset: 0x15AD0F0 VA: 0x15AD0F0
	public bool IsBackEffectStart(string n) { }

	// RVA: 0x15AD128 Offset: 0x15AD128 VA: 0x15AD128
	public void SetBackEffect(string n, bool isSkip = False, bool isPause = False, CommonEffectManager.FlipKind flip = 0) { }

	// RVA: 0x15AD188 Offset: 0x15AD188 VA: 0x15AD188
	public void SetBackEffect(string n, Vector3 p, bool isSkip = False, bool isPause = False, CommonEffectManager.FlipKind flip = 0) { }

	// RVA: 0x15AD210 Offset: 0x15AD210 VA: 0x15AD210
	public void ResumeBackEffect(bool isSkip = False) { }

	// RVA: 0x15AD248 Offset: 0x15AD248 VA: 0x15AD248
	public void ResumeBackEffect(string n, bool isSkip = False) { }

	// RVA: 0x15AD290 Offset: 0x15AD290 VA: 0x15AD290
	public bool StopBackEffect(bool isSkip = False) { }

	// RVA: 0x15AD2C8 Offset: 0x15AD2C8 VA: 0x15AD2C8
	public bool StopBackEffect(string n, bool isSkip = False) { }

	// RVA: 0x15AD310 Offset: 0x15AD310 VA: 0x15AD310
	public float GetDepthPos() { }

	// RVA: 0x15AD47C Offset: 0x15AD47C VA: 0x15AD47C
	public void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x15AD4BC Offset: 0x15AD4BC VA: 0x15AD4BC
	public void SetSortingOrder(int order) { }
}

// Namespace: 
public enum ScriptCharaData.Kind // TypeDefIndex: 8454
{
	// Fields
	public int value__; // 0x0
	public const ScriptCharaData.Kind FIGURE = 0;
	public const ScriptCharaData.Kind EQUIP = 1;
	public const ScriptCharaData.Kind IMAGE = 2;
	public const ScriptCharaData.Kind VERTICAL_IMAGE = 3;
	public const ScriptCharaData.Kind HORIZONTAL_IMAGE = 4;
}

// Namespace: 
public enum ScriptCharaData.State // TypeDefIndex: 8455
{
	// Fields
	public int value__; // 0x0
	public const ScriptCharaData.State LOAD = 0;
	public const ScriptCharaData.State IDLE = 1;
	public const ScriptCharaData.State MOVE = 2;
	public const ScriptCharaData.State DESTROY = 3;
}

// Namespace: 
public class ScriptCommandDelayParam // TypeDefIndex: 8456
{
	// Fields
	public int executeIndex; // 0x10
	public int executeIndexMax; // 0x14
	public float delaySecond; // 0x18
	public bool skipDropFlag; // 0x1C
	public bool messageFlag; // 0x1D
	public bool checkTextSpeed; // 0x1E

	// Methods

	// RVA: 0x15AD4FC Offset: 0x15AD4FC VA: 0x15AD4FC
	public void .ctor(int index, int indexMax, float second, bool sflag, bool mflag, bool cflag) { }
}

// Namespace: 
[Serializable]
public class ScriptEncryptEntity // TypeDefIndex: 8457
{
	// Fields
	[SerializeField] // RVA: 0xC5E574 Offset: 0xC5E574 VA: 0xC5E574
	public string scriptName; // 0x10
	[SerializeField] // RVA: 0xC5E584 Offset: 0xC5E584 VA: 0xC5E584
	public string keyType; // 0x18

	// Methods

	// RVA: 0x15B2730 Offset: 0x15B2730 VA: 0x15B2730
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class ScriptEncryptSettings : ScriptableObject // TypeDefIndex: 8458
{
	// Fields
	[SerializeField] // RVA: 0xC5E594 Offset: 0xC5E594 VA: 0xC5E594
	private ScriptEncryptEntity[] settings; // 0x18
	private Dictionary<string, ScriptEncryptEntity> lookup; // 0x20

	// Methods

	// RVA: 0x15B2738 Offset: 0x15B2738 VA: 0x15B2738
	public void .ctor() { }

	// RVA: 0x15B2740 Offset: 0x15B2740 VA: 0x15B2740
	public void OnEnable() { }

	// RVA: 0x15B2850 Offset: 0x15B2850 VA: 0x15B2850
	public string GetKey(string scriptName) { }

	// RVA: 0x15B290C Offset: 0x15B290C VA: 0x15B290C
	public ScriptEncryptEntity GetEntity(string scriptName) { }
}

// Namespace: 
public class ScriptFlagData // TypeDefIndex: 8459
{
	// Fields
	protected string name; // 0x10
	protected long v; // 0x18

	// Properties
	public string Name { get; }

	// Methods

	// RVA: 0x15B3E7C Offset: 0x15B3E7C VA: 0x15B3E7C
	public void .ctor(string name) { }

	// RVA: 0x15B3EA8 Offset: 0x15B3EA8 VA: 0x15B3EA8
	public void .ctor(string name, long v) { }

	// RVA: 0x15B3EE0 Offset: 0x15B3EE0 VA: 0x15B3EE0
	public string get_Name() { }

	// RVA: 0x15B3EE8 Offset: 0x15B3EE8 VA: 0x15B3EE8
	protected long Conv(string vs) { }

	// RVA: 0x15B4034 Offset: 0x15B4034 VA: 0x15B4034
	public bool Comp(string vs) { }

	// RVA: 0x15B405C Offset: 0x15B405C VA: 0x15B405C
	public bool Comp() { }

	// RVA: 0x15B406C Offset: 0x15B406C VA: 0x15B406C
	public void Set(string vs) { }

	// RVA: 0x15B4090 Offset: 0x15B4090 VA: 0x15B4090
	public void Set(long v) { }

	// RVA: 0x15B4098 Offset: 0x15B4098 VA: 0x15B4098
	public void SetRahdom(string ss, string es) { }
}

// Namespace: 
public class ScriptLineMessage : MonoBehaviour // TypeDefIndex: 8460
{
	// Fields
	[SerializeField] // RVA: 0xC5E5A4 Offset: 0xC5E5A4 VA: 0xC5E5A4
	protected GameObject mainPrefab; // 0x18
	[SerializeField] // RVA: 0xC5E5B4 Offset: 0xC5E5B4 VA: 0xC5E5B4
	protected GameObject rubyPrefab; // 0x20
	[SerializeField] // RVA: 0xC5E5C4 Offset: 0xC5E5C4 VA: 0xC5E5C4
	protected GameObject imagePrefab; // 0x28
	[SerializeField] // RVA: 0xC5E5D4 Offset: 0xC5E5D4 VA: 0xC5E5D4
	protected Transform messageRoot; // 0x30
	[SerializeField] // RVA: 0xC5E5E4 Offset: 0xC5E5E4 VA: 0xC5E5E4
	protected Transform messageOffset; // 0x38
	[SerializeField] // RVA: 0xC5E5F4 Offset: 0xC5E5F4 VA: 0xC5E5F4
	protected bool isRecycle; // 0x40
	[SerializeField] // RVA: 0xC5E604 Offset: 0xC5E604 VA: 0xC5E604
	protected bool isCondensedScale; // 0x41
	[SerializeField] // RVA: 0xC5E614 Offset: 0xC5E614 VA: 0xC5E614
	protected int condensedSize; // 0x44
	[SerializeField] // RVA: 0xC5E624 Offset: 0xC5E624 VA: 0xC5E624
	protected float fontScale; // 0x48
	[SerializeField] // RVA: 0xC5E634 Offset: 0xC5E634 VA: 0xC5E634
	protected int depthOffset; // 0x4C
	protected float textOnlyLineHeight; // 0x50
	protected float beforeTextOnlyLineHeight; // 0x54
	protected float defaultTextOnlyLineHeight; // 0x58
	protected float rubyLineHeight; // 0x5C
	[SerializeField] // RVA: 0xC5E644 Offset: 0xC5E644 VA: 0xC5E644
	protected float defaultBetweenLineHeight; // 0x60
	protected float betweenLineHeight; // 0x64
	[SerializeField] // RVA: 0xC5E654 Offset: 0xC5E654 VA: 0xC5E654
	protected int defaultFontSize; // 0x68
	[SerializeField] // RVA: 0xC5E664 Offset: 0xC5E664 VA: 0xC5E664
	protected int rubyFontSize; // 0x6C
	protected int fontSize; // 0x70
	protected Dictionary<string, int> fontSizes; // 0x78
	protected string defaultColorTag; // 0x80
	private Vector2 startPosition; // 0x88
	private Vector2 dispPosition; // 0x90
	private Vector2 maxDispPosition; // 0x98
	protected Stack<UILabel> mainStock; // 0xA0
	protected Stack<UILabel> rubyStock; // 0xA8
	protected Stack<UISprite> imageStock; // 0xB0
	protected Stack<ScriptMessageLabel> labelStock; // 0xB8
	private List<ScriptMessageLabel> dispLabelList; // 0xC0
	protected bool isInit; // 0xC8

	// Properties
	protected float textLineHeight { get; }

	// Methods

	// RVA: 0x15B40F4 Offset: 0x15B40F4 VA: 0x15B40F4
	public void .ctor() { }

	// RVA: 0x15B42EC Offset: 0x15B42EC VA: 0x15B42EC
	protected float get_textLineHeight() { }

	// RVA: 0x15B42FC Offset: 0x15B42FC VA: 0x15B42FC
	public void Init() { }

	// RVA: 0x15B484C Offset: 0x15B484C VA: 0x15B484C
	public void Quit() { }

	// RVA: 0x15B4850 Offset: 0x15B4850 VA: 0x15B4850
	public void DeleteLabels() { }

	// RVA: 0x15B4AE4 Offset: 0x15B4AE4 VA: 0x15B4AE4
	public void ClearLabels() { }

	// RVA: 0x15B4F58 Offset: 0x15B4F58 VA: 0x15B4F58
	protected UILabel FetchMainLabel() { }

	// RVA: 0x15B529C Offset: 0x15B529C VA: 0x15B529C
	protected UILabel FetchRubyLabel() { }

	// RVA: 0x15B5600 Offset: 0x15B5600 VA: 0x15B5600
	protected UISprite FetchImageSprite() { }

	// RVA: 0x15B5944 Offset: 0x15B5944 VA: 0x15B5944
	private ScriptMessageLabel FetchLabel() { }

	// RVA: 0x15B4C28 Offset: 0x15B4C28 VA: 0x15B4C28
	private void ReleaseLabel(ScriptMessageLabel label) { }

	// RVA: 0x15B59F0 Offset: 0x15B59F0 VA: 0x15B59F0
	private void AddLabel(string text, string colorTag, bool isFoward, Font font) { }

	// RVA: 0x15B6370 Offset: 0x15B6370 VA: 0x15B6370
	protected void UpdateLabels(string txt, bool isFoward, string enforceColor, Font font, bool removeUserNameColorCode = False) { }

	// RVA: 0x15B6F44 Offset: 0x15B6F44 VA: 0x15B6F44
	protected void SetDefaultState() { }

	// RVA: 0x15B6E70 Offset: 0x15B6E70 VA: 0x15B6E70
	public void ReturnText() { }

	// RVA: 0x15B6FDC Offset: 0x15B6FDC VA: 0x15B6FDC
	public void SetFontSize(string sizeName) { }

	// RVA: 0x15B7084 Offset: 0x15B7084 VA: 0x15B7084
	public void SetBetweenLineHeight(float height) { }

	// RVA: 0x15B4740 Offset: 0x15B4740 VA: 0x15B4740
	public void ClearText() { }

	// RVA: 0x15B70CC Offset: 0x15B70CC VA: 0x15B70CC
	public void SetText(string text, string color, Font font, bool removeUserNameColorCode = False) { }

	// RVA: 0x15B7124 Offset: 0x15B7124 VA: 0x15B7124
	public void FowardText(string text, string color, Font font) { }

	// RVA: 0x15B7140 Offset: 0x15B7140 VA: 0x15B7140
	public Vector2 GetPrintedSize() { }

	// RVA: 0x15B71E0 Offset: 0x15B71E0 VA: 0x15B71E0
	public void Fadeout(float d) { }

	// RVA: 0x15B72A0 Offset: 0x15B72A0 VA: 0x15B72A0
	public void EffectScale(float s, float d) { }
}

// Namespace: 
private sealed class ScriptLineMessage.ProcAddLabel : MulticastDelegate // TypeDefIndex: 8461
{
	// Methods

	// RVA: 0xF72580 Offset: 0xF72580 VA: 0xF72580
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xF72590 Offset: 0xF72590 VA: 0xF72590 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0xF72790 Offset: 0xF72790 VA: 0xF72790 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0xF727C4 Offset: 0xF727C4 VA: 0xF727C4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private sealed class ScriptLineMessage.ProcAddLabel2 : MulticastDelegate // TypeDefIndex: 8462
{
	// Methods

	// RVA: 0xF727D0 Offset: 0xF727D0 VA: 0xF727D0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xF727E0 Offset: 0xF727E0 VA: 0xF727E0 Slot: 11
	public virtual void Invoke(string txt) { }

	// RVA: 0xF72B80 Offset: 0xF72B80 VA: 0xF72B80 Slot: 12
	public virtual IAsyncResult BeginInvoke(string txt, AsyncCallback callback, object object) { }

	// RVA: 0xF72BA4 Offset: 0xF72BA4 VA: 0xF72BA4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC43304 Offset: 0xC43304 VA: 0xC43304
private sealed class ScriptLineMessage.<UpdateLabels>c__AnonStorey0 // TypeDefIndex: 8463
{
	// Fields
	internal StringBuilder tmpTxt; // 0x10
	internal bool isFoward; // 0x18
	internal Font font; // 0x20
	internal string tmpColorTag; // 0x28
	internal ScriptLineMessage $this; // 0x30

	// Methods

	// RVA: 0xF723D0 Offset: 0xF723D0 VA: 0xF723D0
	public void .ctor() { }

	// RVA: 0xF723D8 Offset: 0xF723D8 VA: 0xF723D8
	internal void <>m__0() { }

	// RVA: 0xF724D0 Offset: 0xF724D0 VA: 0xF724D0
	internal void <>m__1(string text) { }
}

// Namespace: 
public class ScriptLogMessage : MonoBehaviour // TypeDefIndex: 8464
{
	// Fields
	private static readonly float ALIGN_LEFT_BASE; // 0x0
	private static readonly float ALIGN_CENTER_BASE; // 0x4
	private static readonly float ALIGN_RIGHT_BASE; // 0x8
	[SerializeField] // RVA: 0xC5E674 Offset: 0xC5E674 VA: 0xC5E674
	protected ScriptBackLog backLogDialog; // 0x18
	[SerializeField] // RVA: 0xC5E684 Offset: 0xC5E684 VA: 0xC5E684
	protected GameObject mainPrefab; // 0x20
	[SerializeField] // RVA: 0xC5E694 Offset: 0xC5E694 VA: 0xC5E694
	protected GameObject rubyPrefab; // 0x28
	[SerializeField] // RVA: 0xC5E6A4 Offset: 0xC5E6A4 VA: 0xC5E6A4
	protected GameObject imagePrefab; // 0x30
	[SerializeField] // RVA: 0xC5E6B4 Offset: 0xC5E6B4 VA: 0xC5E6B4
	private GameObject playVoicePrefab; // 0x38
	[SerializeField] // RVA: 0xC5E6C4 Offset: 0xC5E6C4 VA: 0xC5E6C4
	protected Transform workLabelRoot; // 0x40
	[SerializeField] // RVA: 0xC5E6D4 Offset: 0xC5E6D4 VA: 0xC5E6D4
	protected bool isRecycle; // 0x48
	[SerializeField] // RVA: 0xC5E6E4 Offset: 0xC5E6E4 VA: 0xC5E6E4
	protected float fontScale; // 0x4C
	[SerializeField] // RVA: 0xC5E6F4 Offset: 0xC5E6F4 VA: 0xC5E6F4
	protected int depthOffset; // 0x50
	protected float textOnlyLineHeight; // 0x54
	protected float beforeTextOnlyLineHeight; // 0x58
	protected float defaultTextOnlyLineHeight; // 0x5C
	protected float rubyLineHeight; // 0x60
	[SerializeField] // RVA: 0xC5E704 Offset: 0xC5E704 VA: 0xC5E704
	protected float defaultBetweenLineHeight; // 0x64
	protected float betweenLineHeight; // 0x68
	protected Font defaultFontType; // 0x70
	[SerializeField] // RVA: 0xC5E714 Offset: 0xC5E714 VA: 0xC5E714
	protected int defaultFontSize; // 0x78
	[SerializeField] // RVA: 0xC5E724 Offset: 0xC5E724 VA: 0xC5E724
	protected int rubyFontSize; // 0x7C
	protected Font fontType; // 0x80
	protected int fontSize; // 0x88
	private ScriptMessageLabel.VerticalAlign verticalAlign; // 0x8C
	private int maxFontSize; // 0x90
	private int fowardMaxFontSize; // 0x94
	protected string defaultColorTag; // 0x98
	protected string talkName; // 0xA0
	private Vector2 startPosition; // 0xA8
	private Vector2 dispPosition; // 0xB0
	protected ScriptMessageLabel analyzeLabel; // 0xB8
	private ScriptLogMessage.HorizontalAlign horizontalAlign; // 0xC0
	private bool isReservedAddPlayVoice; // 0xC4
	private string voiceAssetName; // 0xC8
	private string voiceObjectName; // 0xD0
	private float voiceVolume; // 0xD8
	private bool isDelayAddPlayVoice; // 0xDC
	protected bool isInit; // 0xDD

	// Properties
	protected float textLineHeight { get; }

	// Methods

	// RVA: 0xF72BB0 Offset: 0xF72BB0 VA: 0xF72BB0
	public void .ctor() { }

	// RVA: 0xF72C38 Offset: 0xF72C38 VA: 0xF72C38
	protected float get_textLineHeight() { }

	// RVA: 0xF72C48 Offset: 0xF72C48 VA: 0xF72C48
	public void Init() { }

	// RVA: 0xF73394 Offset: 0xF73394 VA: 0xF73394
	public void Quit() { }

	// RVA: 0xF733E4 Offset: 0xF733E4 VA: 0xF733E4
	public void DeleteLabels() { }

	// RVA: 0xF733E8 Offset: 0xF733E8 VA: 0xF733E8
	public void ClearLabels() { }

	// RVA: 0xF733EC Offset: 0xF733EC VA: 0xF733EC
	public void SetMaxFontSize(int fontSize) { }

	// RVA: 0xF73404 Offset: 0xF73404 VA: 0xF73404
	protected UILabel FetchMainLabel() { }

	// RVA: 0xF73538 Offset: 0xF73538 VA: 0xF73538
	protected UILabel FetchRubyLabel() { }

	// RVA: 0xF73694 Offset: 0xF73694 VA: 0xF73694
	protected UISprite FetchImageSprite() { }

	// RVA: 0xF737C8 Offset: 0xF737C8 VA: 0xF737C8
	private void AddLabel(string text, string colorTag, bool isFoward) { }

	// RVA: 0xF74024 Offset: 0xF74024 VA: 0xF74024
	protected void UpdateLabels(string txt, bool isFoward, string enforceColor) { }

	// RVA: 0xF750BC Offset: 0xF750BC VA: 0xF750BC
	private void UpdatePlayVoice() { }

	// RVA: 0xF75268 Offset: 0xF75268 VA: 0xF75268
	private void SetBackLogReplayingVoice(string assetName, string objectName, bool isReplaying) { }

	// RVA: 0xF752FC Offset: 0xF752FC VA: 0xF752FC
	public void SetHomePosition(int x) { }

	// RVA: 0xF75340 Offset: 0xF75340 VA: 0xF75340
	protected void SetDefaultState() { }

	// RVA: 0xF74FF0 Offset: 0xF74FF0 VA: 0xF74FF0
	public void ReturnText() { }

	// RVA: 0xF753EC Offset: 0xF753EC VA: 0xF753EC
	public void SetFontType(Font font) { }

	// RVA: 0xF75484 Offset: 0xF75484 VA: 0xF75484
	public void SetFontSize(string sizeName, string verticalAlign) { }

	// RVA: 0xF75544 Offset: 0xF75544 VA: 0xF75544
	public string GetFontSizeString() { }

	// RVA: 0xF755B0 Offset: 0xF755B0 VA: 0xF755B0
	public void SetBetweenLineHeight(float height) { }

	// RVA: 0xF73368 Offset: 0xF73368 VA: 0xF73368
	public void ClearText() { }

	// RVA: 0xF755F8 Offset: 0xF755F8 VA: 0xF755F8
	public void AddPlayVoice(string assetName, string objectName, float volume) { }

	// RVA: 0xF7560C Offset: 0xF7560C VA: 0xF7560C
	private void ReservePlayVoice(string assetName, string objectName, float volume) { }

	// RVA: 0xF732AC Offset: 0xF732AC VA: 0xF732AC
	private void ReleasePlayVoice() { }

	// RVA: 0xF75620 Offset: 0xF75620 VA: 0xF75620
	public void SetText(string text, string color) { }

	// RVA: 0xF75670 Offset: 0xF75670 VA: 0xF75670
	public void AddText(string text, string color) { }

	// RVA: 0xF75680 Offset: 0xF75680 VA: 0xF75680
	public void AddText(string text, bool isLineHead, int lineLength) { }

	// RVA: 0xF756BC Offset: 0xF756BC VA: 0xF756BC
	private void SetAlignedDispPosition(bool isLineHead, int lineLength) { }

	// RVA: 0xF75800 Offset: 0xF75800 VA: 0xF75800
	public void SetHorizontalAlign(ScriptLogMessage.HorizontalAlign horizontalAlign) { }

	// RVA: 0xF75808 Offset: 0xF75808 VA: 0xF75808
	public void FowardText(string text, string color) { }

	// RVA: 0xF75844 Offset: 0xF75844 VA: 0xF75844
	public void FooterText(string text, bool isAligned, string color) { }

	// RVA: 0xF758D4 Offset: 0xF758D4 VA: 0xF758D4
	public bool IsChangeTalkName(string text) { }

	// RVA: 0xF75950 Offset: 0xF75950 VA: 0xF75950
	public void ClearTalkName() { }

	// RVA: 0xF759C0 Offset: 0xF759C0 VA: 0xF759C0
	public bool SetTalkName(string text) { }

	// RVA: 0xF75A9C Offset: 0xF75A9C VA: 0xF75A9C
	private int GetDefaultFontSize() { }

	// RVA: 0xF73338 Offset: 0xF73338 VA: 0xF73338
	private int GetDefaultScaledFontSize() { }

	// RVA: 0xF75B14 Offset: 0xF75B14 VA: 0xF75B14
	private static void .cctor() { }
}

// Namespace: 
public enum ScriptLogMessage.HorizontalAlign // TypeDefIndex: 8465
{
	// Fields
	public int value__; // 0x0
	public const ScriptLogMessage.HorizontalAlign Left = 0;
	public const ScriptLogMessage.HorizontalAlign Center = 1;
	public const ScriptLogMessage.HorizontalAlign Right = 2;
}

// Namespace: 
private sealed class ScriptLogMessage.ProcAddLabel : MulticastDelegate // TypeDefIndex: 8466
{
	// Methods

	// RVA: 0xF74A30 Offset: 0xF74A30 VA: 0xF74A30
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xF74A50 Offset: 0xF74A50 VA: 0xF74A50 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0xF75D14 Offset: 0xF75D14 VA: 0xF75D14 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0xF75D48 Offset: 0xF75D48 VA: 0xF75D48 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private sealed class ScriptLogMessage.ProcAddLabel2 : MulticastDelegate // TypeDefIndex: 8467
{
	// Methods

	// RVA: 0xF74A40 Offset: 0xF74A40 VA: 0xF74A40
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xF74C50 Offset: 0xF74C50 VA: 0xF74C50 Slot: 11
	public virtual void Invoke(string txt) { }

	// RVA: 0xF75D54 Offset: 0xF75D54 VA: 0xF75D54 Slot: 12
	public virtual IAsyncResult BeginInvoke(string txt, AsyncCallback callback, object object) { }

	// RVA: 0xF75D78 Offset: 0xF75D78 VA: 0xF75D78 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC43314 Offset: 0xC43314 VA: 0xC43314
private sealed class ScriptLogMessage.<UpdateLabels>c__AnonStorey0 // TypeDefIndex: 8468
{
	// Fields
	internal StringBuilder tmpTxt; // 0x10
	internal bool isFoward; // 0x18
	internal string tmpColorTag; // 0x20
	internal ScriptLogMessage $this; // 0x28

	// Methods

	// RVA: 0xF74A28 Offset: 0xF74A28 VA: 0xF74A28
	public void .ctor() { }

	// RVA: 0xF75B78 Offset: 0xF75B78 VA: 0xF75B78
	internal void <>m__0() { }

	// RVA: 0xF75C64 Offset: 0xF75C64 VA: 0xF75C64
	internal void <>m__1(string text) { }
}

// Namespace: 
public class ScriptLoop // TypeDefIndex: 8469
{
	// Fields
	private bool isForceStopAdd; // 0x10
	private int count; // 0x14
	private int lastIndex; // 0x18
	private int lastSelectedIndex; // 0x1C
