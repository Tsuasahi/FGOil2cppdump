	public static ExecuteInEditMode[] _executeInEditModeArray; // 0x8
	public static RequireComponent[] _requireComponentArray; // 0x10

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC4B730 Offset: 0xC4B730 VA: 0xC4B730
	// RVA: 0x26444D4 Offset: 0x26444D4 VA: 0x26444D4
	private static Type GetParentTypeDisallowingMultipleInclusion(Type type) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC4B740 Offset: 0xC4B740 VA: 0xC4B740
	// RVA: 0x26445DC Offset: 0x26445DC VA: 0x26445DC
	private static Type[] GetRequiredComponents(Type klass) { }

	// RVA: 0x26449E4 Offset: 0x26449E4 VA: 0x26449E4
	private static int GetExecuteMode(Type klass) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC4B750 Offset: 0xC4B750 VA: 0xC4B750
	// RVA: 0x2644B08 Offset: 0x2644B08 VA: 0x2644B08
	private static int CheckIsEditorScript(Type klass) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC4B760 Offset: 0xC4B760 VA: 0xC4B760
	// RVA: 0x2644BF0 Offset: 0x2644BF0 VA: 0x2644BF0
	private static int GetDefaultExecutionOrderFor(Type klass) { }

	// RVA: -1 Offset: -1
	private static T GetCustomAttributeOfType<T>(Type klass) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x219F138 Offset: 0x219F138 VA: 0x219F138
	|-AttributeHelperEngine.GetCustomAttributeOfType<object>
	|-AttributeHelperEngine.GetCustomAttributeOfType<DefaultExecutionOrder>
	*/

	// RVA: 0x2644C74 Offset: 0x2644C74 VA: 0x2644C74
	private static void .cctor() { }
}

// Namespace: UnityEngine
[AttributeUsageAttribute] // RVA: 0xC4396C Offset: 0xC4396C VA: 0xC4396C
public sealed class DisallowMultipleComponent : Attribute // TypeDefIndex: 2088
{
	// Methods

	// RVA: 0x264BAE0 Offset: 0x264BAE0 VA: 0x264BAE0
	public void .ctor() { }
}

// Namespace: UnityEngine
[AttributeUsageAttribute] // RVA: 0xC439A8 Offset: 0xC439A8 VA: 0xC439A8
public sealed class RequireComponent : Attribute // TypeDefIndex: 2089
{
	// Fields
	public Type m_Type0; // 0x10
	public Type m_Type1; // 0x18
	public Type m_Type2; // 0x20

	// Methods

	// RVA: 0x1032278 Offset: 0x1032278 VA: 0x1032278
	public void .ctor(Type requiredComponent) { }

	// RVA: 0x10322A4 Offset: 0x10322A4 VA: 0x10322A4
	public void .ctor(Type requiredComponent, Type requiredComponent2) { }
}

// Namespace: UnityEngine
public sealed class AddComponentMenu : Attribute // TypeDefIndex: 2090
{
	// Fields
	private string m_AddComponentMenu; // 0x10
	private int m_Ordering; // 0x18

	// Methods

	// RVA: 0x26371E4 Offset: 0x26371E4 VA: 0x26371E4
	public void .ctor(string menuName) { }

	// RVA: 0x2637214 Offset: 0x2637214 VA: 0x2637214
	public void .ctor(string menuName, int order) { }
}

// Namespace: UnityEngine
[AttributeUsageAttribute] // RVA: 0xC439E4 Offset: 0xC439E4 VA: 0xC439E4
public sealed class CreateAssetMenuAttribute : Attribute // TypeDefIndex: 2091
{
	// Fields
	[DebuggerBrowsableAttribute] // RVA: 0xC482F0 Offset: 0xC482F0 VA: 0xC482F0
	[CompilerGeneratedAttribute] // RVA: 0xC482F0 Offset: 0xC482F0 VA: 0xC482F0
	private string <menuName>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC4832C Offset: 0xC4832C VA: 0xC4832C
	[DebuggerBrowsableAttribute] // RVA: 0xC4832C Offset: 0xC4832C VA: 0xC4832C
	private string <fileName>k__BackingField; // 0x18

	// Properties
	public string menuName { set; }
	public string fileName { set; }

	// Methods

	// RVA: 0x2649ACC Offset: 0x2649ACC VA: 0x2649ACC
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC4B770 Offset: 0xC4B770 VA: 0xC4B770
	// RVA: 0x2649AD4 Offset: 0x2649AD4 VA: 0x2649AD4
	public void set_menuName(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC4B780 Offset: 0xC4B780 VA: 0xC4B780
	// RVA: 0x2649ADC Offset: 0x2649ADC VA: 0x2649ADC
	public void set_fileName(string value) { }
}

// Namespace: UnityEngine
[AttributeUsageAttribute] // RVA: 0xC43A30 Offset: 0xC43A30 VA: 0xC43A30
[RequiredByNativeCodeAttribute] // RVA: 0xC43A30 Offset: 0xC43A30 VA: 0xC43A30
public sealed class ContextMenu : Attribute // TypeDefIndex: 2092
{
	// Fields
	public readonly string menuItem; // 0x10
	public readonly bool validate; // 0x18
	public readonly int priority; // 0x1C

	// Methods

	// RVA: 0x2649910 Offset: 0x2649910 VA: 0x2649910
	public void .ctor(string itemName) { }

	// RVA: 0x264994C Offset: 0x264994C VA: 0x264994C
	public void .ctor(string itemName, bool isValidateFunction) { }

	// RVA: 0x2649998 Offset: 0x2649998 VA: 0x2649998
	public void .ctor(string itemName, bool isValidateFunction, int priority) { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC43A80 Offset: 0xC43A80 VA: 0xC43A80
public sealed class ExecuteInEditMode : Attribute // TypeDefIndex: 2093
{
	// Methods

	// RVA: 0x264EC7C Offset: 0x264EC7C VA: 0x264EC7C
	public void .ctor() { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC43A90 Offset: 0xC43A90 VA: 0xC43A90
public sealed class ExecuteAlways : Attribute // TypeDefIndex: 2094
{
	// Methods

	// RVA: 0x264EC74 Offset: 0x264EC74 VA: 0x264EC74
	public void .ctor() { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC43AA0 Offset: 0xC43AA0 VA: 0xC43AA0
public sealed class HideInInspector : Attribute // TypeDefIndex: 2095
{
	// Methods

	// RVA: 0x26A9EE4 Offset: 0x26A9EE4 VA: 0x26A9EE4
	public void .ctor() { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC43AB0 Offset: 0xC43AB0 VA: 0xC43AB0
[AttributeUsageAttribute] // RVA: 0xC43AB0 Offset: 0xC43AB0 VA: 0xC43AB0
public sealed class HelpURLAttribute : Attribute // TypeDefIndex: 2096
{
	// Fields
	internal readonly string m_Url; // 0x10

	// Methods

	// RVA: 0x26A9EB8 Offset: 0x26A9EB8 VA: 0x26A9EB8
	public void .ctor(string url) { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC43B00 Offset: 0xC43B00 VA: 0xC43B00
[AttributeUsageAttribute] // RVA: 0xC43B00 Offset: 0xC43B00 VA: 0xC43B00
public class DefaultExecutionOrder : Attribute // TypeDefIndex: 2097
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC48368 Offset: 0xC48368 VA: 0xC48368
	[DebuggerBrowsableAttribute] // RVA: 0xC48368 Offset: 0xC48368 VA: 0xC48368
	private int <order>k__BackingField; // 0x10

	// Properties
	public int order { get; set; }

	// Methods

	// RVA: 0x264BAA4 Offset: 0x264BAA4 VA: 0x264BAA4
	public void .ctor(int order) { }

	[CompilerGeneratedAttribute] // RVA: 0xC4B790 Offset: 0xC4B790 VA: 0xC4B790
	// RVA: 0x2644C6C Offset: 0x2644C6C VA: 0x2644C6C
	public int get_order() { }

	[CompilerGeneratedAttribute] // RVA: 0xC4B7A0 Offset: 0xC4B7A0 VA: 0xC4B7A0
	// RVA: 0x264BAD0 Offset: 0x264BAD0 VA: 0x264BAD0
	private void set_order(int value) { }
}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xC43B3C Offset: 0xC43B3C VA: 0xC43B3C
[AttributeUsageAttribute] // RVA: 0xC43B3C Offset: 0xC43B3C VA: 0xC43B3C
public class AssemblyIsEditorAssembly : Attribute // TypeDefIndex: 2098
{}

// Namespace: UnityEngine
[AttributeUsageAttribute] // RVA: 0xC43B78 Offset: 0xC43B78 VA: 0xC43B78
[UsedByNativeCodeAttribute] // RVA: 0xC43B78 Offset: 0xC43B78 VA: 0xC43B78
public class ExcludeFromPresetAttribute : Attribute // TypeDefIndex: 2099
{
	// Methods

	// RVA: 0x264EC6C Offset: 0x264EC6C VA: 0x264EC6C
	public void .ctor() { }
}

// Namespace: UnityEngine
public enum AudioType // TypeDefIndex: 2100
{
	// Fields
	public int value__; // 0x0
	public const AudioType UNKNOWN = 0;
	public const AudioType ACC = 1;
	public const AudioType AIFF = 2;
	public const AudioType IT = 10;
	public const AudioType MOD = 12;
	public const AudioType MPEG = 13;
	public const AudioType OGGVORBIS = 14;
	public const AudioType S3M = 17;
	public const AudioType WAV = 20;
	public const AudioType XM = 21;
	public const AudioType XMA = 22;
	public const AudioType VAG = 23;
	public const AudioType AUDIOQUEUE = 24;
}

// Namespace: UnityEngine
public enum SendMessageOptions // TypeDefIndex: 2101
{
	// Fields
	public int value__; // 0x0
	public const SendMessageOptions RequireReceiver = 0;
	public const SendMessageOptions DontRequireReceiver = 1;
}

// Namespace: UnityEngine
public enum PrimitiveType // TypeDefIndex: 2102
{
	// Fields
	public int value__; // 0x0
	public const PrimitiveType Sphere = 0;
	public const PrimitiveType Capsule = 1;
	public const PrimitiveType Cylinder = 2;
	public const PrimitiveType Cube = 3;
	public const PrimitiveType Plane = 4;
	public const PrimitiveType Quad = 5;
}

// Namespace: UnityEngine
public enum Space // TypeDefIndex: 2103
{
	// Fields
	public int value__; // 0x0
	public const Space World = 0;
	public const Space Self = 1;
}

// Namespace: UnityEngine
public enum RuntimePlatform // TypeDefIndex: 2104
{
	// Fields
	public int value__; // 0x0
	public const RuntimePlatform OSXEditor = 0;
	public const RuntimePlatform OSXPlayer = 1;
	public const RuntimePlatform WindowsPlayer = 2;
	[ObsoleteAttribute] // RVA: 0xC483A4 Offset: 0xC483A4 VA: 0xC483A4
	public const RuntimePlatform OSXWebPlayer = 3;
	[ObsoleteAttribute] // RVA: 0xC483E0 Offset: 0xC483E0 VA: 0xC483E0
	public const RuntimePlatform OSXDashboardPlayer = 4;
	[ObsoleteAttribute] // RVA: 0xC4841C Offset: 0xC4841C VA: 0xC4841C
	public const RuntimePlatform WindowsWebPlayer = 5;
	public const RuntimePlatform WindowsEditor = 7;
	public const RuntimePlatform IPhonePlayer = 8;
	[ObsoleteAttribute] // RVA: 0xC48458 Offset: 0xC48458 VA: 0xC48458
	public const RuntimePlatform XBOX360 = 10;
	[ObsoleteAttribute] // RVA: 0xC48490 Offset: 0xC48490 VA: 0xC48490
	public const RuntimePlatform PS3 = 9;
	public const RuntimePlatform Android = 11;
	[ObsoleteAttribute] // RVA: 0xC484C8 Offset: 0xC484C8 VA: 0xC484C8
	public const RuntimePlatform NaCl = 12;
	[ObsoleteAttribute] // RVA: 0xC48500 Offset: 0xC48500 VA: 0xC48500
	public const RuntimePlatform FlashPlayer = 15;
	public const RuntimePlatform LinuxPlayer = 13;
	public const RuntimePlatform LinuxEditor = 16;
	public const RuntimePlatform WebGLPlayer = 17;
	[ObsoleteAttribute] // RVA: 0xC48538 Offset: 0xC48538 VA: 0xC48538
	public const RuntimePlatform MetroPlayerX86 = 18;
	public const RuntimePlatform WSAPlayerX86 = 18;
	[ObsoleteAttribute] // RVA: 0xC48570 Offset: 0xC48570 VA: 0xC48570
	public const RuntimePlatform MetroPlayerX64 = 19;
	public const RuntimePlatform WSAPlayerX64 = 19;
	[ObsoleteAttribute] // RVA: 0xC485A8 Offset: 0xC485A8 VA: 0xC485A8
	public const RuntimePlatform MetroPlayerARM = 20;
	public const RuntimePlatform WSAPlayerARM = 20;
	[ObsoleteAttribute] // RVA: 0xC485E0 Offset: 0xC485E0 VA: 0xC485E0
	public const RuntimePlatform WP8Player = 21;
	[ObsoleteAttribute] // RVA: 0xC48618 Offset: 0xC48618 VA: 0xC48618
	public const RuntimePlatform BlackBerryPlayer = 22;
	[ObsoleteAttribute] // RVA: 0xC48650 Offset: 0xC48650 VA: 0xC48650
	public const RuntimePlatform TizenPlayer = 23;
	[ObsoleteAttribute] // RVA: 0xC48688 Offset: 0xC48688 VA: 0xC48688
	public const RuntimePlatform PSP2 = 24;
	public const RuntimePlatform PS4 = 25;
	[ObsoleteAttribute] // RVA: 0xC486C0 Offset: 0xC486C0 VA: 0xC486C0
	public const RuntimePlatform PSM = 26;
	public const RuntimePlatform XboxOne = 27;
	[ObsoleteAttribute] // RVA: 0xC486F8 Offset: 0xC486F8 VA: 0xC486F8
	public const RuntimePlatform SamsungTVPlayer = 28;
	[ObsoleteAttribute] // RVA: 0xC48730 Offset: 0xC48730 VA: 0xC48730
	public const RuntimePlatform WiiU = 30;
	public const RuntimePlatform tvOS = 31;
	public const RuntimePlatform Switch = 32;
	public const RuntimePlatform Lumin = 33;
}

// Namespace: UnityEngine
public enum LogType // TypeDefIndex: 2105
{
	// Fields
	public int value__; // 0x0
	public const LogType Error = 0;
	public const LogType Assert = 1;
	public const LogType Warning = 2;
	public const LogType Log = 3;
	public const LogType Exception = 4;
}

// Namespace: UnityEngine
public enum ThreadPriority // TypeDefIndex: 2106
{
	// Fields
	public int value__; // 0x0
	public const ThreadPriority Low = 0;
	public const ThreadPriority BelowNormal = 1;
	public const ThreadPriority Normal = 2;
	public const ThreadPriority High = 4;
}

// Namespace: UnityEngine
internal static class BeforeRenderHelper // TypeDefIndex: 2107
{
	// Fields
	private static List<BeforeRenderHelper.OrderBlock> s_OrderBlocks; // 0x0

	// Methods

	// RVA: 0x26433D8 Offset: 0x26433D8 VA: 0x26433D8
	public static void Invoke() { }

	// RVA: 0x2644F18 Offset: 0x2644F18 VA: 0x2644F18
	private static void .cctor() { }
}

// Namespace: 
private struct BeforeRenderHelper.OrderBlock // TypeDefIndex: 2108
{
	// Fields
	internal int order; // 0x0
	internal UnityAction callback; // 0x8
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC43BC8 Offset: 0xC43BC8 VA: 0xC43BC8
[NativeHeaderAttribute] // RVA: 0xC43BC8 Offset: 0xC43BC8 VA: 0xC43BC8
public class Behaviour : Component // TypeDefIndex: 2109
{
	// Properties
	[RequiredByNativeCodeAttribute] // RVA: 0xC54040 Offset: 0xC54040 VA: 0xC54040
	[NativePropertyAttribute] // RVA: 0xC54040 Offset: 0xC54040 VA: 0xC54040
	public bool enabled { get; set; }
	[NativePropertyAttribute] // RVA: 0xC54078 Offset: 0xC54078 VA: 0xC54078
	public bool isActiveAndEnabled { get; }

	// Methods

	// RVA: 0x2644F8C Offset: 0x2644F8C VA: 0x2644F8C
	public void .ctor() { }

	// RVA: 0x2644FF8 Offset: 0x2644FF8 VA: 0x2644FF8
	public bool get_enabled() { }

	// RVA: 0x2645064 Offset: 0x2645064 VA: 0x2645064
	public void set_enabled(bool value) { }

	[NativeMethodAttribute] // RVA: 0xC4B7B0 Offset: 0xC4B7B0 VA: 0xC4B7B0
	// RVA: 0x26450D8 Offset: 0x26450D8 VA: 0x26450D8
	public bool get_isActiveAndEnabled() { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC43C14 Offset: 0xC43C14 VA: 0xC43C14
internal class BootConfigData // TypeDefIndex: 2110
{
	// Fields
	private IntPtr m_Ptr; // 0x10

	// Methods

	// RVA: 0x2645144 Offset: 0x2645144 VA: 0x2645144
	private void .ctor(IntPtr nativeHandle) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC4B7E8 Offset: 0xC4B7E8 VA: 0xC4B7E8
	// RVA: 0x26451F8 Offset: 0x26451F8 VA: 0x26451F8
	private static BootConfigData WrapBootConfigData(IntPtr nativeHandle) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC43C4C Offset: 0xC43C4C VA: 0xC43C4C
[NativeTypeAttribute] // RVA: 0xC43C4C Offset: 0xC43C4C VA: 0xC43C4C
[NativeHeaderAttribute] // RVA: 0xC43C4C Offset: 0xC43C4C VA: 0xC43C4C
[RequiredByNativeCodeAttribute] // RVA: 0xC43C4C Offset: 0xC43C4C VA: 0xC43C4C
[NativeHeaderAttribute] // RVA: 0xC43C4C Offset: 0xC43C4C VA: 0xC43C4C
[NativeClassAttribute] // RVA: 0xC43C4C Offset: 0xC43C4C VA: 0xC43C4C
[NativeHeaderAttribute] // RVA: 0xC43C4C Offset: 0xC43C4C VA: 0xC43C4C
[ThreadAndSerializationSafeAttribute] // RVA: 0xC43C4C Offset: 0xC43C4C VA: 0xC43C4C
public struct Bounds : IEquatable<Bounds> // TypeDefIndex: 2111
{
	// Fields
	private Vector3 m_Center; // 0x0
	[NativeNameAttribute] // RVA: 0xC48768 Offset: 0xC48768 VA: 0xC48768
	private Vector3 m_Extents; // 0xC

	// Properties
	public Vector3 center { get; set; }
	public Vector3 size { get; set; }
	public Vector3 extents { get; set; }
	public Vector3 min { get; set; }
	public Vector3 max { get; set; }

	// Methods

	// RVA: 0xDD2240 Offset: 0xDD2240 VA: 0xDD2240
	public void .ctor(Vector3 center, Vector3 size) { }

	// RVA: 0xDD2248 Offset: 0xDD2248 VA: 0xDD2248 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0xDD2250 Offset: 0xDD2250 VA: 0xDD2250 Slot: 0
	public override bool Equals(object other) { }

	// RVA: 0xDD2258 Offset: 0xDD2258 VA: 0xDD2258 Slot: 4
	public bool Equals(Bounds other) { }

	// RVA: 0xDD2290 Offset: 0xDD2290 VA: 0xDD2290
	public Vector3 get_center() { }

	// RVA: 0xDD229C Offset: 0xDD229C VA: 0xDD229C
	public void set_center(Vector3 value) { }

	// RVA: 0xDD22A8 Offset: 0xDD22A8 VA: 0xDD22A8
	public Vector3 get_size() { }

	// RVA: 0xDD22B0 Offset: 0xDD22B0 VA: 0xDD22B0
	public void set_size(Vector3 value) { }

	// RVA: 0xDD22B8 Offset: 0xDD22B8 VA: 0xDD22B8
	public Vector3 get_extents() { }

	// RVA: 0xDD22C4 Offset: 0xDD22C4 VA: 0xDD22C4
	public void set_extents(Vector3 value) { }

	// RVA: 0xDD22D0 Offset: 0xDD22D0 VA: 0xDD22D0
	public Vector3 get_min() { }

	// RVA: 0xDD22D8 Offset: 0xDD22D8 VA: 0xDD22D8
	public void set_min(Vector3 value) { }

	// RVA: 0xDD22E0 Offset: 0xDD22E0 VA: 0xDD22E0
	public Vector3 get_max() { }

	// RVA: 0xDD22E8 Offset: 0xDD22E8 VA: 0xDD22E8
	public void set_max(Vector3 value) { }

	// RVA: 0x26458C4 Offset: 0x26458C4 VA: 0x26458C4
	public static bool op_Equality(Bounds lhs, Bounds rhs) { }

	// RVA: 0x26459E0 Offset: 0x26459E0 VA: 0x26459E0
	public static bool op_Inequality(Bounds lhs, Bounds rhs) { }

	// RVA: 0xDD22F0 Offset: 0xDD22F0 VA: 0xDD22F0
	public void SetMinMax(Vector3 min, Vector3 max) { }

	// RVA: 0xDD22F8 Offset: 0xDD22F8 VA: 0xDD22F8
	public void Encapsulate(Vector3 point) { }

	// RVA: 0xDD2300 Offset: 0xDD2300 VA: 0xDD2300
	public void Encapsulate(Bounds bounds) { }

	// RVA: 0xDD2334 Offset: 0xDD2334 VA: 0xDD2334
	public bool IntersectRay(Ray ray) { }

	// RVA: 0xDD2384 Offset: 0xDD2384 VA: 0xDD2384 Slot: 3
	public override string ToString() { }

	[FreeFunctionAttribute] // RVA: 0xC4B7F8 Offset: 0xC4B7F8 VA: 0xC4B7F8
	// RVA: 0x2645C48 Offset: 0x2645C48 VA: 0x2645C48
	private static bool IntersectRayAABB(Ray ray, Bounds bounds, out float dist) { }

	// RVA: 0x2645DB4 Offset: 0x2645DB4 VA: 0x2645DB4
	private static bool IntersectRayAABB_Injected(ref Ray ray, ref Bounds bounds, out float dist) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC43D94 Offset: 0xC43D94 VA: 0xC43D94
[NativeHeaderAttribute] // RVA: 0xC43D94 Offset: 0xC43D94 VA: 0xC43D94
[RequireComponent] // RVA: 0xC43D94 Offset: 0xC43D94 VA: 0xC43D94
[NativeHeaderAttribute] // RVA: 0xC43D94 Offset: 0xC43D94 VA: 0xC43D94
[NativeHeaderAttribute] // RVA: 0xC43D94 Offset: 0xC43D94 VA: 0xC43D94
[NativeHeaderAttribute] // RVA: 0xC43D94 Offset: 0xC43D94 VA: 0xC43D94
[NativeHeaderAttribute] // RVA: 0xC43D94 Offset: 0xC43D94 VA: 0xC43D94
[UsedByNativeCodeAttribute] // RVA: 0xC43D94 Offset: 0xC43D94 VA: 0xC43D94
[NativeHeaderAttribute] // RVA: 0xC43D94 Offset: 0xC43D94 VA: 0xC43D94
public sealed class Camera : Behaviour // TypeDefIndex: 2112
{
	// Fields
	public static Camera.CameraCallback onPreCull; // 0x0
	public static Camera.CameraCallback onPreRender; // 0x8
	public static Camera.CameraCallback onPostRender; // 0x10

	// Properties
	[NativePropertyAttribute] // RVA: 0xC54088 Offset: 0xC54088 VA: 0xC54088
	public float nearClipPlane { get; set; }
	[NativePropertyAttribute] // RVA: 0xC540C0 Offset: 0xC540C0 VA: 0xC540C0
	public float farClipPlane { get; set; }
	[NativePropertyAttribute] // RVA: 0xC540F8 Offset: 0xC540F8 VA: 0xC540F8
	public float fieldOfView { get; set; }
	public RenderingPath renderingPath { set; }
	public bool allowHDR { get; set; }
	public bool allowMSAA { set; }
	public bool allowDynamicResolution { set; }
	public float orthographicSize { get; set; }
	public bool orthographic { get; set; }
	public TransparencySortMode transparencySortMode { get; set; }
	public float depth { get; set; }
	public float aspect { get; set; }
	public int cullingMask { get; set; }
	public int eventMask { get; set; }
	public bool useOcclusionCulling { set; }
	public Color backgroundColor { set; }
	public CameraClearFlags clearFlags { get; set; }
	public DepthTextureMode depthTextureMode { get; set; }
	[NativePropertyAttribute] // RVA: 0xC54130 Offset: 0xC54130 VA: 0xC54130
	public Rect rect { get; set; }
	[NativePropertyAttribute] // RVA: 0xC54168 Offset: 0xC54168 VA: 0xC54168
	public Rect pixelRect { get; }
	public int pixelHeight { get; }
	public RenderTexture targetTexture { get; set; }
	public int targetDisplay { get; }
	public Matrix4x4 worldToCameraMatrix { get; }
	public Matrix4x4 projectionMatrix { get; set; }
	public static Camera main { get; }
	public static Camera current { get; }
	public static int allCamerasCount { get; }

	// Methods

	// RVA: 0x2645E38 Offset: 0x2645E38 VA: 0x2645E38
	public void .ctor() { }

	// RVA: 0x2645E3C Offset: 0x2645E3C VA: 0x2645E3C
	public float get_nearClipPlane() { }

	// RVA: 0x2645EA8 Offset: 0x2645EA8 VA: 0x2645EA8
	public void set_nearClipPlane(float value) { }

	// RVA: 0x2645F1C Offset: 0x2645F1C VA: 0x2645F1C
	public float get_farClipPlane() { }

	// RVA: 0x2645F88 Offset: 0x2645F88 VA: 0x2645F88
	public void set_farClipPlane(float value) { }

	// RVA: 0x2645FFC Offset: 0x2645FFC VA: 0x2645FFC
	public float get_fieldOfView() { }

	// RVA: 0x2646068 Offset: 0x2646068 VA: 0x2646068
	public void set_fieldOfView(float value) { }

	// RVA: 0x26460DC Offset: 0x26460DC VA: 0x26460DC
	public void set_renderingPath(RenderingPath value) { }

	// RVA: 0x2646150 Offset: 0x2646150 VA: 0x2646150
	public bool get_allowHDR() { }

	// RVA: 0x26461BC Offset: 0x26461BC VA: 0x26461BC
	public void set_allowHDR(bool value) { }

	// RVA: 0x2646230 Offset: 0x2646230 VA: 0x2646230
	public void set_allowMSAA(bool value) { }

	// RVA: 0x26462A4 Offset: 0x26462A4 VA: 0x26462A4
	public void set_allowDynamicResolution(bool value) { }

	// RVA: 0x2646318 Offset: 0x2646318 VA: 0x2646318
	public float get_orthographicSize() { }

	// RVA: 0x2646384 Offset: 0x2646384 VA: 0x2646384
	public void set_orthographicSize(float value) { }

	// RVA: 0x26463F8 Offset: 0x26463F8 VA: 0x26463F8
	public bool get_orthographic() { }

	// RVA: 0x2646464 Offset: 0x2646464 VA: 0x2646464
	public void set_orthographic(bool value) { }

	// RVA: 0x26464D8 Offset: 0x26464D8 VA: 0x26464D8
	public TransparencySortMode get_transparencySortMode() { }

	// RVA: 0x2646544 Offset: 0x2646544 VA: 0x2646544
	public void set_transparencySortMode(TransparencySortMode value) { }

	// RVA: 0x26465B8 Offset: 0x26465B8 VA: 0x26465B8
	public float get_depth() { }

	// RVA: 0x2646624 Offset: 0x2646624 VA: 0x2646624
	public void set_depth(float value) { }

	// RVA: 0x2646698 Offset: 0x2646698 VA: 0x2646698
	public float get_aspect() { }

	// RVA: 0x2646704 Offset: 0x2646704 VA: 0x2646704
	public void set_aspect(float value) { }

	// RVA: 0x2646778 Offset: 0x2646778 VA: 0x2646778
	public int get_cullingMask() { }

	// RVA: 0x26467E4 Offset: 0x26467E4 VA: 0x26467E4
	public void set_cullingMask(int value) { }

	// RVA: 0x2646858 Offset: 0x2646858 VA: 0x2646858
	public int get_eventMask() { }

	// RVA: 0x26468C4 Offset: 0x26468C4 VA: 0x26468C4
	public void set_eventMask(int value) { }

	// RVA: 0x2646938 Offset: 0x2646938 VA: 0x2646938
	public void set_useOcclusionCulling(bool value) { }

	// RVA: 0x26469AC Offset: 0x26469AC VA: 0x26469AC
	public void set_backgroundColor(Color value) { }

	// RVA: 0x2646A48 Offset: 0x2646A48 VA: 0x2646A48
	public CameraClearFlags get_clearFlags() { }

	// RVA: 0x2646AB4 Offset: 0x2646AB4 VA: 0x2646AB4
	public void set_clearFlags(CameraClearFlags value) { }

	// RVA: 0x2646B28 Offset: 0x2646B28 VA: 0x2646B28
	public DepthTextureMode get_depthTextureMode() { }

	// RVA: 0x2646B94 Offset: 0x2646B94 VA: 0x2646B94
	public void set_depthTextureMode(DepthTextureMode value) { }

	// RVA: 0x2646C08 Offset: 0x2646C08 VA: 0x2646C08
	public Rect get_rect() { }

	// RVA: 0x2646CA8 Offset: 0x2646CA8 VA: 0x2646CA8
	public void set_rect(Rect value) { }

	// RVA: 0x2646D44 Offset: 0x2646D44 VA: 0x2646D44
	public Rect get_pixelRect() { }

	[FreeFunctionAttribute] // RVA: 0xC4B840 Offset: 0xC4B840 VA: 0xC4B840
	// RVA: 0x2646DE4 Offset: 0x2646DE4 VA: 0x2646DE4
	public int get_pixelHeight() { }

	// RVA: 0x2646E50 Offset: 0x2646E50 VA: 0x2646E50
	public RenderTexture get_targetTexture() { }

	// RVA: 0x2646EBC Offset: 0x2646EBC VA: 0x2646EBC
	public void set_targetTexture(RenderTexture value) { }

	// RVA: 0x2646F30 Offset: 0x2646F30 VA: 0x2646F30
	public int get_targetDisplay() { }

	[FreeFunctionAttribute] // RVA: 0xC4B888 Offset: 0xC4B888 VA: 0xC4B888
	// RVA: 0x2646F9C Offset: 0x2646F9C VA: 0x2646F9C
	private void SetTargetBuffersImpl(RenderBuffer color, RenderBuffer depth) { }

	// RVA: 0x264704C Offset: 0x264704C VA: 0x264704C
	public void SetTargetBuffers(RenderBuffer colorBuffer, RenderBuffer depthBuffer) { }

	// RVA: 0x2647078 Offset: 0x2647078 VA: 0x2647078
	public Matrix4x4 get_worldToCameraMatrix() { }

	// RVA: 0x2647134 Offset: 0x2647134 VA: 0x2647134
	public Matrix4x4 get_projectionMatrix() { }

	// RVA: 0x26471F0 Offset: 0x26471F0 VA: 0x26471F0
	public void set_projectionMatrix(Matrix4x4 value) { }

	// RVA: 0x2647268 Offset: 0x2647268 VA: 0x2647268
	public void ResetWorldToCameraMatrix() { }

	// RVA: 0x26472D4 Offset: 0x26472D4 VA: 0x26472D4
	public void ResetProjectionMatrix() { }

	// RVA: 0x2647340 Offset: 0x2647340 VA: 0x2647340
	public Vector3 WorldToScreenPoint(Vector3 position, Camera.MonoOrStereoscopicEye eye) { }

	// RVA: 0x2647410 Offset: 0x2647410 VA: 0x2647410
	public Vector3 WorldToViewportPoint(Vector3 position, Camera.MonoOrStereoscopicEye eye) { }

	// RVA: 0x26474E0 Offset: 0x26474E0 VA: 0x26474E0
	public Vector3 ViewportToWorldPoint(Vector3 position, Camera.MonoOrStereoscopicEye eye) { }

	// RVA: 0x26475B0 Offset: 0x26475B0 VA: 0x26475B0
	public Vector3 ScreenToWorldPoint(Vector3 position, Camera.MonoOrStereoscopicEye eye) { }

	// RVA: 0x2647680 Offset: 0x2647680 VA: 0x2647680
	public Vector3 WorldToScreenPoint(Vector3 position) { }

	// RVA: 0x2647688 Offset: 0x2647688 VA: 0x2647688
	public Vector3 WorldToViewportPoint(Vector3 position) { }

	// RVA: 0x2647690 Offset: 0x2647690 VA: 0x2647690
	public Vector3 ViewportToWorldPoint(Vector3 position) { }

	// RVA: 0x2647698 Offset: 0x2647698 VA: 0x2647698
	public Vector3 ScreenToWorldPoint(Vector3 position) { }

	// RVA: 0x26476A0 Offset: 0x26476A0 VA: 0x26476A0
	public Vector3 ScreenToViewportPoint(Vector3 position) { }

	// RVA: 0x2647760 Offset: 0x2647760 VA: 0x2647760
	private Ray ScreenPointToRay(Vector2 pos, Camera.MonoOrStereoscopicEye eye) { }

	// RVA: 0x264783C Offset: 0x264783C VA: 0x264783C
	public Ray ScreenPointToRay(Vector3 pos, Camera.MonoOrStereoscopicEye eye) { }

	// RVA: 0x2647928 Offset: 0x2647928 VA: 0x2647928
	public Ray ScreenPointToRay(Vector3 pos) { }

	[FreeFunctionAttribute] // RVA: 0xC4B8D0 Offset: 0xC4B8D0 VA: 0xC4B8D0
	// RVA: 0x264796C Offset: 0x264796C VA: 0x264796C
	internal GameObject RaycastTry(Ray ray, float distance, int layerMask) { }

	[FreeFunctionAttribute] // RVA: 0xC4B918 Offset: 0xC4B918 VA: 0xC4B918
	// RVA: 0x26479FC Offset: 0x26479FC VA: 0x26479FC
	internal GameObject RaycastTry2D(Ray ray, float distance, int layerMask) { }

	[FreeFunctionAttribute] // RVA: 0xC4B960 Offset: 0xC4B960 VA: 0xC4B960
	// RVA: 0x2647A8C Offset: 0x2647A8C VA: 0x2647A8C
	public static Camera get_main() { }

	[FreeFunctionAttribute] // RVA: 0xC4B998 Offset: 0xC4B998 VA: 0xC4B998
	// RVA: 0x2647AE4 Offset: 0x2647AE4 VA: 0x2647AE4
	public static Camera get_current() { }

	[FreeFunctionAttribute] // RVA: 0xC4B9D0 Offset: 0xC4B9D0 VA: 0xC4B9D0
	// RVA: 0x2647B3C Offset: 0x2647B3C VA: 0x2647B3C
	private static int GetAllCamerasCount() { }

	[FreeFunctionAttribute] // RVA: 0xC4BA08 Offset: 0xC4BA08 VA: 0xC4BA08
	// RVA: 0x2647B94 Offset: 0x2647B94 VA: 0x2647B94
	private static int GetAllCamerasImpl([Out] Camera[] cam) { }

	// RVA: 0x2647C00 Offset: 0x2647C00 VA: 0x2647C00
	public static int get_allCamerasCount() { }

	// RVA: 0x2647C04 Offset: 0x2647C04 VA: 0x2647C04
	public static int GetAllCameras(Camera[] cameras) { }

	[FreeFunctionAttribute] // RVA: 0xC4BA40 Offset: 0xC4BA40 VA: 0xC4BA40
	// RVA: 0x2647CC0 Offset: 0x2647CC0 VA: 0x2647CC0
	public void Render() { }

	[NativeNameAttribute] // RVA: 0xC4BA88 Offset: 0xC4BA88 VA: 0xC4BA88
	// RVA: 0x2647D2C Offset: 0x2647D2C VA: 0x2647D2C
	private void AddCommandBufferImpl(CameraEvent evt, CommandBuffer buffer) { }

	[NativeNameAttribute] // RVA: 0xC4BAC0 Offset: 0xC4BAC0 VA: 0xC4BAC0
	// RVA: 0x2647DB0 Offset: 0x2647DB0 VA: 0x2647DB0
	private void RemoveCommandBufferImpl(CameraEvent evt, CommandBuffer buffer) { }

	// RVA: 0x2647E34 Offset: 0x2647E34 VA: 0x2647E34
	public void AddCommandBuffer(CameraEvent evt, CommandBuffer buffer) { }

	// RVA: 0x2647F8C Offset: 0x2647F8C VA: 0x2647F8C
	public void RemoveCommandBuffer(CameraEvent evt, CommandBuffer buffer) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC4BAF8 Offset: 0xC4BAF8 VA: 0xC4BAF8
	// RVA: 0x26480E4 Offset: 0x26480E4 VA: 0x26480E4
	private static void FireOnPreCull(Camera cam) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC4BB08 Offset: 0xC4BB08 VA: 0xC4BB08
	// RVA: 0x26484F0 Offset: 0x26484F0 VA: 0x26484F0
	private static void FireOnPreRender(Camera cam) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC4BB18 Offset: 0xC4BB18 VA: 0xC4BB18
	// RVA: 0x264855C Offset: 0x264855C VA: 0x264855C
	private static void FireOnPostRender(Camera cam) { }

	// RVA: 0x26469D4 Offset: 0x26469D4 VA: 0x26469D4
	private void set_backgroundColor_Injected(ref Color value) { }

	// RVA: 0x2646C34 Offset: 0x2646C34 VA: 0x2646C34
	private void get_rect_Injected(out Rect ret) { }

	// RVA: 0x2646CD0 Offset: 0x2646CD0 VA: 0x2646CD0
	private void set_rect_Injected(ref Rect value) { }

	// RVA: 0x2646D70 Offset: 0x2646D70 VA: 0x2646D70
	private void get_pixelRect_Injected(out Rect ret) { }

	// RVA: 0x2646FC8 Offset: 0x2646FC8 VA: 0x2646FC8
	private void SetTargetBuffersImpl_Injected(ref RenderBuffer color, ref RenderBuffer depth) { }

	// RVA: 0x26470C0 Offset: 0x26470C0 VA: 0x26470C0
	private void get_worldToCameraMatrix_Injected(out Matrix4x4 ret) { }

	// RVA: 0x264717C Offset: 0x264717C VA: 0x264717C
	private void get_projectionMatrix_Injected(out Matrix4x4 ret) { }

	// RVA: 0x26471F4 Offset: 0x26471F4 VA: 0x26471F4
	private void set_projectionMatrix_Injected(ref Matrix4x4 value) { }

	// RVA: 0x2647384 Offset: 0x2647384 VA: 0x2647384
	private void WorldToScreenPoint_Injected(ref Vector3 position, Camera.MonoOrStereoscopicEye eye, out Vector3 ret) { }

	// RVA: 0x2647454 Offset: 0x2647454 VA: 0x2647454
	private void WorldToViewportPoint_Injected(ref Vector3 position, Camera.MonoOrStereoscopicEye eye, out Vector3 ret) { }

	// RVA: 0x2647524 Offset: 0x2647524 VA: 0x2647524
	private void ViewportToWorldPoint_Injected(ref Vector3 position, Camera.MonoOrStereoscopicEye eye, out Vector3 ret) { }

	// RVA: 0x26475F4 Offset: 0x26475F4 VA: 0x26475F4
	private void ScreenToWorldPoint_Injected(ref Vector3 position, Camera.MonoOrStereoscopicEye eye, out Vector3 ret) { }

	// RVA: 0x26476DC Offset: 0x26476DC VA: 0x26476DC
	private void ScreenToViewportPoint_Injected(ref Vector3 position, out Vector3 ret) { }

	// RVA: 0x26477B0 Offset: 0x26477B0 VA: 0x26477B0
	private void ScreenPointToRay_Injected(ref Vector2 pos, Camera.MonoOrStereoscopicEye eye, out Ray ret) { }

	// RVA: 0x2647970 Offset: 0x2647970 VA: 0x2647970
	private GameObject RaycastTry_Injected(ref Ray ray, float distance, int layerMask) { }

	// RVA: 0x2647A00 Offset: 0x2647A00 VA: 0x2647A00
	private GameObject RaycastTry2D_Injected(ref Ray ray, float distance, int layerMask) { }
}

// Namespace: 
public enum Camera.MonoOrStereoscopicEye // TypeDefIndex: 2113
{
	// Fields
	public int value__; // 0x0
	public const Camera.MonoOrStereoscopicEye Left = 0;
	public const Camera.MonoOrStereoscopicEye Right = 1;
	public const Camera.MonoOrStereoscopicEye Mono = 2;
}

// Namespace: 
public sealed class Camera.CameraCallback : MulticastDelegate // TypeDefIndex: 2114
{
	// Methods

	// RVA: 0x26485C8 Offset: 0x26485C8 VA: 0x26485C8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2648150 Offset: 0x2648150 VA: 0x2648150 Slot: 11
	public virtual void Invoke(Camera cam) { }

	// RVA: 0x26485D8 Offset: 0x26485D8 VA: 0x26485D8 Slot: 12
	public virtual IAsyncResult BeginInvoke(Camera cam, AsyncCallback callback, object object) { }

	// RVA: 0x26485FC Offset: 0x26485FC VA: 0x26485FC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine
internal struct CastHelper<T> // TypeDefIndex: 2115
{
	// Fields
	public T t; // 0x0
	public IntPtr onePointerFurtherThanT; // 0x0
}

// Namespace: UnityEngine
internal static class ClassLibraryInitializer // TypeDefIndex: 2116
{
	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC4BB28 Offset: 0xC4BB28 VA: 0xC4BB28
	// RVA: 0x2648608 Offset: 0x2648608 VA: 0x2648608
	private static void Init() { }
}

// Namespace: UnityEngine
internal class LowerResBlitTexture : Object // TypeDefIndex: 2117
{
	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC4BB38 Offset: 0xC4BB38 VA: 0xC4BB38
	// RVA: 0x26AC808 Offset: 0x26AC808 VA: 0x26AC808
	internal void LowerResBlitTextureDontStripMe() { }
}

// Namespace: UnityEngine
internal class PreloadData : Object // TypeDefIndex: 2118
{
	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC4BB48 Offset: 0xC4BB48 VA: 0xC4BB48
	// RVA: 0x26BAA0C Offset: 0x26BAA0C VA: 0x26BAA0C
	internal void PreloadDataDontStripMe() { }
}

// Namespace: UnityEngine
[NativeClassAttribute] // RVA: 0xC43F04 Offset: 0xC43F04 VA: 0xC43F04
[NativeHeaderAttribute] // RVA: 0xC43F04 Offset: 0xC43F04 VA: 0xC43F04
[RequiredByNativeCodeAttribute] // RVA: 0xC43F04 Offset: 0xC43F04 VA: 0xC43F04
[DefaultMemberAttribute] // RVA: 0xC43F04 Offset: 0xC43F04 VA: 0xC43F04
public struct Color : IEquatable<Color> // TypeDefIndex: 2119
{
	// Fields
	public float r; // 0x0
	public float g; // 0x4
	public float b; // 0x8
	public float a; // 0xC

	// Properties
	public static Color red { get; }
	public static Color green { get; }
	public static Color blue { get; }
	public static Color white { get; }
	public static Color black { get; }
	public static Color yellow { get; }
	public static Color cyan { get; }
	public static Color magenta { get; }
	public static Color gray { get; }
	public static Color grey { get; }
	public static Color clear { get; }
	public float Item { get; }

	// Methods

	// RVA: 0xDD238C Offset: 0xDD238C VA: 0xDD238C
	public void .ctor(float r, float g, float b, float a) { }

	// RVA: 0xDD2398 Offset: 0xDD2398 VA: 0xDD2398
	public void .ctor(float r, float g, float b) { }

	// RVA: 0xDD23AC Offset: 0xDD23AC VA: 0xDD23AC Slot: 3
	public override string ToString() { }

	// RVA: 0xDD23B4 Offset: 0xDD23B4 VA: 0xDD23B4 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0xDD23BC Offset: 0xDD23BC VA: 0xDD23BC Slot: 0
	public override bool Equals(object other) { }

	// RVA: 0xDD23C4 Offset: 0xDD23C4 VA: 0xDD23C4 Slot: 4
	public bool Equals(Color other) { }

	// RVA: 0x26489D0 Offset: 0x26489D0 VA: 0x26489D0
	public static Color op_Addition(Color a, Color b) { }

	// RVA: 0x26489E4 Offset: 0x26489E4 VA: 0x26489E4
	public static Color op_Subtraction(Color a, Color b) { }

	// RVA: 0x26489F8 Offset: 0x26489F8 VA: 0x26489F8
	public static Color op_Multiply(Color a, Color b) { }

	// RVA: 0x2648A0C Offset: 0x2648A0C VA: 0x2648A0C
	public static Color op_Multiply(Color a, float b) { }

	// RVA: 0x2648A20 Offset: 0x2648A20 VA: 0x2648A20
	public static Color op_Multiply(float b, Color a) { }

	// RVA: 0x2648A38 Offset: 0x2648A38 VA: 0x2648A38
	public static Color op_Division(Color a, float b) { }

	// RVA: 0x2648A4C Offset: 0x2648A4C VA: 0x2648A4C
	public static bool op_Equality(Color lhs, Color rhs) { }

	// RVA: 0x2648B54 Offset: 0x2648B54 VA: 0x2648B54
	public static bool op_Inequality(Color lhs, Color rhs) { }

	// RVA: 0x2648B70 Offset: 0x2648B70 VA: 0x2648B70
	public static Color Lerp(Color a, Color b, float t) { }

	// RVA: 0x2648C50 Offset: 0x2648C50 VA: 0x2648C50
	public static Color get_red() { }

	// RVA: 0x2648C64 Offset: 0x2648C64 VA: 0x2648C64
