
	// RVA: 0x223BA14 Offset: 0x223BA14 VA: 0x223BA14 Slot: 15
	public virtual void OnDeserialization(object sender) { }

	// RVA: 0x223C0B4 Offset: 0x223C0B4 VA: 0x223C0B4
	protected bool get_IsReadOnly() { }

	// RVA: 0x223BF68 Offset: 0x223BF68 VA: 0x223BF68
	protected void BaseAdd(string name, object value) { }

	// RVA: 0x223C0F4 Offset: 0x223C0F4 VA: 0x223C0F4
	protected void BaseClear() { }

	// RVA: 0x223C184 Offset: 0x223C184 VA: 0x223C184
	protected object BaseGet(int index) { }

	// RVA: 0x223C2F0 Offset: 0x223C2F0 VA: 0x223C2F0
	protected object BaseGet(string name) { }

	// RVA: 0x223C40C Offset: 0x223C40C VA: 0x223C40C
	protected string[] BaseGetAllKeys() { }

	// RVA: 0x223C530 Offset: 0x223C530 VA: 0x223C530
	protected string BaseGetKey(int index) { }

	// RVA: 0x223C69C Offset: 0x223C69C VA: 0x223C69C
	protected void BaseRemove(string name) { }

	// RVA: 0x223C960 Offset: 0x223C960 VA: 0x223C960
	protected void BaseSet(string name, object value) { }

	[MonoTODOAttribute] // RVA: 0xBD120C Offset: 0xBD120C VA: 0xBD120C
	// RVA: 0x223C30C Offset: 0x223C30C VA: 0x223C30C
	private NameObjectCollectionBase._Item FindFirstMatchedItem(string name) { }

	// RVA: 0x223C804 Offset: 0x223C804 VA: 0x223C804
	internal bool Equals(string s1, string s2) { }
}

// Namespace: 
internal class NameObjectCollectionBase._Item // TypeDefIndex: 1156
{
	// Fields
	public string key; // 0x10
	public object value; // 0x18

	// Methods

	// RVA: 0x223C0BC Offset: 0x223C0BC VA: 0x223C0BC
	public void .ctor(string key, object value) { }
}

// Namespace: 
[Serializable]
internal class NameObjectCollectionBase._KeysEnumerator : IEnumerator // TypeDefIndex: 1157
{
	// Fields
	private NameObjectCollectionBase m_collection; // 0x10
	private int m_position; // 0x18

	// Properties
	public object Current { get; }

	// Methods

	// RVA: 0x223B338 Offset: 0x223B338 VA: 0x223B338
	internal void .ctor(NameObjectCollectionBase collection) { }

	// RVA: 0x223CED4 Offset: 0x223CED4 VA: 0x223CED4 Slot: 4
	public object get_Current() { }

	// RVA: 0x223CFA4 Offset: 0x223CFA4 VA: 0x223CFA4 Slot: 5
	public bool MoveNext() { }

	// RVA: 0x223CEC8 Offset: 0x223CEC8 VA: 0x223CEC8 Slot: 6
	public void Reset() { }
}

// Namespace: 
[DefaultMemberAttribute] // RVA: 0xBCFB00 Offset: 0xBCFB00 VA: 0xBCFB00
[Serializable]
public class NameObjectCollectionBase.KeysCollection : ICollection, IEnumerable // TypeDefIndex: 1158
{
	// Fields
	private NameObjectCollectionBase m_collection; // 0x10

	// Properties
	private bool System.Collections.ICollection.IsSynchronized { get; }
	private object System.Collections.ICollection.SyncRoot { get; }
	public int Count { get; }

	// Methods

	// RVA: 0x223B2A0 Offset: 0x223B2A0 VA: 0x223B2A0
	internal void .ctor(NameObjectCollectionBase collection) { }

	// RVA: 0x223CA2C Offset: 0x223CA2C VA: 0x223CA2C Slot: 7
	private void System.Collections.ICollection.CopyTo(Array array, int arrayIndex) { }

	// RVA: 0x223CE10 Offset: 0x223CE10 VA: 0x223CE10 Slot: 5
	private bool System.Collections.ICollection.get_IsSynchronized() { }

	// RVA: 0x223CE18 Offset: 0x223CE18 VA: 0x223CE18 Slot: 6
	private object System.Collections.ICollection.get_SyncRoot() { }

	// RVA: 0x223CE20 Offset: 0x223CE20 VA: 0x223CE20 Slot: 4
	public int get_Count() { }

	// RVA: 0x223CE58 Offset: 0x223CE58 VA: 0x223CE58 Slot: 8
	public IEnumerator GetEnumerator() { }
}

// Namespace: System.Collections.Specialized
[DefaultMemberAttribute] // RVA: 0xBCFB38 Offset: 0xBCFB38 VA: 0xBCFB38
[Serializable]
public class NameValueCollection : NameObjectCollectionBase // TypeDefIndex: 1159
{
	// Fields
	private string[] cachedAllKeys; // 0x58
	private string[] cachedAll; // 0x60

	// Properties
	public virtual string[] AllKeys { get; }
	public string Item { get; set; }

	// Methods

	// RVA: 0x223CFF4 Offset: 0x223CFF4 VA: 0x223CFF4
	public void .ctor() { }

	// RVA: 0x223CFF8 Offset: 0x223CFF8 VA: 0x223CFF8
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x223D024 Offset: 0x223D024 VA: 0x223D024 Slot: 16
	public virtual string[] get_AllKeys() { }

	// RVA: 0x223D054 Offset: 0x223D054 VA: 0x223D054
	public string get_Item(string name) { }

	// RVA: 0x223D064 Offset: 0x223D064 VA: 0x223D064
	public void set_Item(string name, string value) { }

	// RVA: 0x223D074 Offset: 0x223D074 VA: 0x223D074
	public void Add(NameValueCollection c) { }

	// RVA: 0x223D314 Offset: 0x223D314 VA: 0x223D314 Slot: 17
	public virtual void Add(string name, string val) { }

	// RVA: 0x223D4C4 Offset: 0x223D4C4 VA: 0x223D4C4 Slot: 18
	public virtual void Clear() { }

	// RVA: 0x223D558 Offset: 0x223D558 VA: 0x223D558 Slot: 19
	public virtual string Get(int index) { }

	// RVA: 0x223DAAC Offset: 0x223DAAC VA: 0x223DAAC Slot: 20
	public virtual string Get(string name) { }

	// RVA: 0x223D634 Offset: 0x223D634 VA: 0x223D634
	private static string AsSingleString(ArrayList values) { }

	// RVA: 0x223DB90 Offset: 0x223DB90 VA: 0x223DB90 Slot: 21
	public virtual string GetKey(int index) { }

	// RVA: 0x223DB94 Offset: 0x223DB94 VA: 0x223DB94 Slot: 22
	public virtual string[] GetValues(int index) { }

	// RVA: 0x223DD0C Offset: 0x223DD0C VA: 0x223DD0C Slot: 23
	public virtual string[] GetValues(string name) { }

	// RVA: 0x223DC70 Offset: 0x223DC70 VA: 0x223DC70
	private static string[] AsStringArray(ArrayList values) { }

	// RVA: 0x223DDF0 Offset: 0x223DDF0 VA: 0x223DDF0 Slot: 24
	public virtual void Remove(string name) { }

	// RVA: 0x223DE94 Offset: 0x223DE94 VA: 0x223DE94 Slot: 25
	public virtual void Set(string name, string value) { }

	// RVA: 0x223D30C Offset: 0x223D30C VA: 0x223D30C
	protected void InvalidateCachedArrays() { }
}

// Namespace: System.Collections.Specialized
[DefaultMemberAttribute] // RVA: 0xBCFB70 Offset: 0xBCFB70 VA: 0xBCFB70
internal class ProcessStringDictionary : StringDictionary, IEnumerable // TypeDefIndex: 1160
{
	// Fields
	private Hashtable table; // 0x18

	// Properties
	public override int Count { get; }
	public override string Item { get; set; }
	public override ICollection Keys { get; }
	public override ICollection Values { get; }

	// Methods

	// RVA: 0x223DF94 Offset: 0x223DF94 VA: 0x223DF94
	public void .ctor() { }

	// RVA: 0x223E114 Offset: 0x223E114 VA: 0x223E114 Slot: 5
	public override int get_Count() { }

	// RVA: 0x223E14C Offset: 0x223E14C VA: 0x223E14C Slot: 6
	public override string get_Item(string key) { }

	// RVA: 0x223E224 Offset: 0x223E224 VA: 0x223E224 Slot: 7
	public override void set_Item(string key, string value) { }

	// RVA: 0x223E274 Offset: 0x223E274 VA: 0x223E274 Slot: 8
	public override ICollection get_Keys() { }

	// RVA: 0x223E2AC Offset: 0x223E2AC VA: 0x223E2AC Slot: 9
	public override ICollection get_Values() { }

	// RVA: 0x223E2E4 Offset: 0x223E2E4 VA: 0x223E2E4 Slot: 10
	public override void Add(string key, string value) { }

	// RVA: 0x223E334 Offset: 0x223E334 VA: 0x223E334 Slot: 11
	public override IEnumerator GetEnumerator() { }
}

// Namespace: System.Collections.Specialized
[DefaultMemberAttribute] // RVA: 0xBCFBA8 Offset: 0xBCFBA8 VA: 0xBCFBA8
[Serializable]
public class StringDictionary : IEnumerable // TypeDefIndex: 1161
{
	// Fields
	private Hashtable contents; // 0x10

	// Properties
	public virtual int Count { get; }
	public virtual string Item { get; set; }
	public virtual ICollection Keys { get; }
	public virtual ICollection Values { get; }

	// Methods

	// RVA: 0x223E0A8 Offset: 0x223E0A8 VA: 0x223E0A8
	public void .ctor() { }

	// RVA: 0x223E36C Offset: 0x223E36C VA: 0x223E36C Slot: 5
	public virtual int get_Count() { }

	// RVA: 0x223E3A4 Offset: 0x223E3A4 VA: 0x223E3A4 Slot: 6
	public virtual string get_Item(string key) { }

	// RVA: 0x223E500 Offset: 0x223E500 VA: 0x223E500 Slot: 7
	public virtual void set_Item(string key, string value) { }

	// RVA: 0x223E5FC Offset: 0x223E5FC VA: 0x223E5FC Slot: 8
	public virtual ICollection get_Keys() { }

	// RVA: 0x223E634 Offset: 0x223E634 VA: 0x223E634 Slot: 9
	public virtual ICollection get_Values() { }

	// RVA: 0x223E66C Offset: 0x223E66C VA: 0x223E66C Slot: 10
	public virtual void Add(string key, string value) { }

	// RVA: 0x223E768 Offset: 0x223E768 VA: 0x223E768 Slot: 11
	public virtual IEnumerator GetEnumerator() { }
}

// Namespace: System.ComponentModel.Design.Serialization
public sealed class InstanceDescriptor // TypeDefIndex: 1162
{
	// Fields
	private MemberInfo member; // 0x10
	private ICollection arguments; // 0x18
	private bool isComplete; // 0x20

	// Methods

	// RVA: 0x22483D4 Offset: 0x22483D4 VA: 0x22483D4
	public void .ctor(MemberInfo member, ICollection arguments) { }

	// RVA: 0x224BCEC Offset: 0x224BCEC VA: 0x224BCEC
	public void .ctor(MemberInfo member, ICollection arguments, bool isComplete) { }

	// RVA: 0x224BD3C Offset: 0x224BD3C VA: 0x224BD3C
	private void ValidateMember(MemberInfo member, ICollection arguments) { }

	// RVA: 0x224C378 Offset: 0x224C378 VA: 0x224C378
	public object Invoke() { }
}

// Namespace: System.ComponentModel.Design
public abstract class DesignerTransaction : IDisposable // TypeDefIndex: 1163
{
	// Fields
	private bool committed; // 0x10
	private bool canceled; // 0x11

	// Properties
	public bool Canceled { get; }
	public bool Committed { get; }

	// Methods

	// RVA: 0x224AEE8 Offset: 0x224AEE8 VA: 0x224AEE8 Slot: 4
	private void System.IDisposable.Dispose() { }

	// RVA: 0x224AEF8 Offset: 0x224AEF8 VA: 0x224AEF8 Slot: 5
	protected virtual void Dispose(bool disposing) { }

	// RVA: -1 Offset: -1 Slot: 6
	protected abstract void OnCancel();

	// RVA: -1 Offset: -1 Slot: 7
	protected abstract void OnCommit();

	// RVA: 0x224AF9C Offset: 0x224AF9C VA: 0x224AF9C
	public void Cancel() { }

	// RVA: 0x224AFD4 Offset: 0x224AFD4 VA: 0x224AFD4
	public void Commit() { }

	// RVA: 0x224AFC4 Offset: 0x224AFC4 VA: 0x224AFC4
	public bool get_Canceled() { }

	// RVA: 0x224AFCC Offset: 0x224AFCC VA: 0x224AFCC
	public bool get_Committed() { }

	// RVA: 0x224AFFC Offset: 0x224AFFC VA: 0x224AFFC Slot: 1
	protected override void Finalize() { }
}

// Namespace: System.ComponentModel.Design
[ComVisibleAttribute] // RVA: 0xBCFBE0 Offset: 0xBCFBE0 VA: 0xBCFBE0
public interface IComponentChangeService // TypeDefIndex: 1164
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnComponentChanged(object component, MemberDescriptor member, object oldValue, object newValue);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void OnComponentChanging(object component, MemberDescriptor member);
}

// Namespace: System.ComponentModel.Design
[ComVisibleAttribute] // RVA: 0xBCFBF4 Offset: 0xBCFBF4 VA: 0xBCFBF4
public interface IDesigner : IDisposable // TypeDefIndex: 1165
{}

// Namespace: System.ComponentModel.Design
[ComVisibleAttribute] // RVA: 0xBCFC08 Offset: 0xBCFC08 VA: 0xBCFC08
public interface IDesignerHost : IServiceContainer, IServiceProvider // TypeDefIndex: 1166
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract DesignerTransaction CreateTransaction(string description);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract IDesigner GetDesigner(IComponent component);
}

// Namespace: System.ComponentModel.Design
public interface IReferenceService // TypeDefIndex: 1167
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract string GetName(object reference);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract object GetReference(string name);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract object[] GetReferences(Type baseType);
}

// Namespace: System.ComponentModel.Design
[ComVisibleAttribute] // RVA: 0xBCFC1C Offset: 0xBCFC1C VA: 0xBCFC1C
public interface IRootDesigner : IDisposable, IDesigner // TypeDefIndex: 1168
{}

// Namespace: System.ComponentModel.Design
[ComVisibleAttribute] // RVA: 0xBCFC30 Offset: 0xBCFC30 VA: 0xBCFC30
public interface IServiceContainer : IServiceProvider // TypeDefIndex: 1169
{}

// Namespace: System.ComponentModel.Design
public interface ITypeDescriptorFilterService // TypeDefIndex: 1170
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract bool FilterAttributes(IComponent component, IDictionary attributes);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract bool FilterEvents(IComponent component, IDictionary events);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract bool FilterProperties(IComponent component, IDictionary properties);
}

// Namespace: System.ComponentModel.Design
public interface ITypeResolutionService // TypeDefIndex: 1171
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract Type GetType(string name);
}

// Namespace: System.ComponentModel.Design
internal class RuntimeLicenseContext : LicenseContext // TypeDefIndex: 1172
{
	// Fields
	private Hashtable extraassemblies; // 0x10
	private Hashtable keys; // 0x18

	// Methods

	// RVA: 0x224B07C Offset: 0x224B07C VA: 0x224B07C
	public void .ctor() { }

	// RVA: 0x224B08C Offset: 0x224B08C VA: 0x224B08C
	private void LoadKeys() { }

	// RVA: 0x224B194 Offset: 0x224B194 VA: 0x224B194
	private void LoadAssemblyLicenses(Hashtable targetkeys, Assembly asm) { }

	// RVA: 0x224B9B8 Offset: 0x224B9B8 VA: 0x224B9B8 Slot: 5
	public override string GetSavedLicenseKey(Type type, Assembly resourceAssembly) { }

	// RVA: 0x224BC0C Offset: 0x224BC0C VA: 0x224BC0C Slot: 7
	public override void SetSavedLicenseKey(Type type, string key) { }
}

// Namespace: System.ComponentModel
public class ArrayConverter : CollectionConverter // TypeDefIndex: 1173
{
	// Methods

	// RVA: 0x223E7A0 Offset: 0x223E7A0 VA: 0x223E7A0
	public void .ctor() { }

	// RVA: 0x223E7B0 Offset: 0x223E7B0 VA: 0x223E7B0 Slot: 7
	public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) { }

	// RVA: 0x223EA50 Offset: 0x223EA50 VA: 0x223EA50 Slot: 10
	public override PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object value, Attribute[] attributes) { }

	// RVA: 0x223EC80 Offset: 0x223EC80 VA: 0x223EC80 Slot: 11
	public override bool GetPropertiesSupported(ITypeDescriptorContext context) { }
}

// Namespace: 
internal class ArrayConverter.ArrayPropertyDescriptor : PropertyDescriptor // TypeDefIndex: 1174
{
	// Fields
	private int index; // 0x38
	private Type array_type; // 0x40

	// Properties
	public override Type ComponentType { get; }
	public override Type PropertyType { get; }
	public override bool IsReadOnly { get; }

	// Methods

	// RVA: 0x223EBB4 Offset: 0x223EBB4 VA: 0x223EBB4
	public void .ctor(int index, Type array_type) { }

	// RVA: 0x223EC88 Offset: 0x223EC88 VA: 0x223EC88 Slot: 17
	public override Type get_ComponentType() { }

	// RVA: 0x223EC90 Offset: 0x223EC90 VA: 0x223EC90 Slot: 21
	public override Type get_PropertyType() { }

	// RVA: 0x223ECC8 Offset: 0x223ECC8 VA: 0x223ECC8 Slot: 20
	public override bool get_IsReadOnly() { }

	// RVA: 0x223ECD0 Offset: 0x223ECD0 VA: 0x223ECD0 Slot: 26
	public override object GetValue(object component) { }

	// RVA: 0x223EE2C Offset: 0x223EE2C VA: 0x223EE2C Slot: 27
	public override void SetValue(object component, object value) { }

	// RVA: 0x223EF90 Offset: 0x223EF90 VA: 0x223EF90 Slot: 28
	public override void ResetValue(object component) { }

	// RVA: 0x223EF94 Offset: 0x223EF94 VA: 0x223EF94 Slot: 29
	public override bool CanResetValue(object component) { }

	// RVA: 0x223EF9C Offset: 0x223EF9C VA: 0x223EF9C Slot: 30
	public override bool ShouldSerializeValue(object component) { }
}

// Namespace: System.ComponentModel
public class AsyncCompletedEventArgs : EventArgs // TypeDefIndex: 1175
{
	// Fields
	private Exception _error; // 0x10
	private bool _cancelled; // 0x18
	private object _userState; // 0x20

	// Properties
	public bool Cancelled { get; }
	public Exception Error { get; }
	public object UserState { get; }

	// Methods

	// RVA: 0x223EFA4 Offset: 0x223EFA4 VA: 0x223EFA4
	public void .ctor(Exception error, bool cancelled, object userState) { }

	// RVA: 0x223F03C Offset: 0x223F03C VA: 0x223F03C
	protected void RaiseExceptionIfNecessary() { }

	// RVA: 0x223F104 Offset: 0x223F104 VA: 0x223F104
	public bool get_Cancelled() { }

	// RVA: 0x223F10C Offset: 0x223F10C VA: 0x223F10C
	public Exception get_Error() { }

	// RVA: 0x223F114 Offset: 0x223F114 VA: 0x223F114
	public object get_UserState() { }
}

// Namespace: System.ComponentModel
public sealed class AsyncOperation // TypeDefIndex: 1176
{
	// Fields
	private SynchronizationContext ctx; // 0x10
	private object state; // 0x18
	private bool done; // 0x20

	// Properties
	public SynchronizationContext SynchronizationContext { get; }
	public object UserSuppliedState { get; }

	// Methods

	// RVA: 0x223F528 Offset: 0x223F528 VA: 0x223F528
	internal void .ctor(SynchronizationContext ctx, object state) { }

	// RVA: 0x223F578 Offset: 0x223F578 VA: 0x223F578 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x223F604 Offset: 0x223F604 VA: 0x223F604
	public SynchronizationContext get_SynchronizationContext() { }

	// RVA: 0x223F60C Offset: 0x223F60C VA: 0x223F60C
	public object get_UserSuppliedState() { }

	// RVA: 0x223F614 Offset: 0x223F614 VA: 0x223F614
	public void OperationCompleted() { }

	// RVA: 0x223F6C8 Offset: 0x223F6C8 VA: 0x223F6C8
	public void Post(SendOrPostCallback d, object arg) { }

	// RVA: 0x223F788 Offset: 0x223F788 VA: 0x223F788
	public void PostOperationCompleted(SendOrPostCallback d, object arg) { }
}

// Namespace: System.ComponentModel
public static class AsyncOperationManager // TypeDefIndex: 1177
{
	// Properties
	[EditorBrowsableAttribute] // RVA: 0xBD2914 Offset: 0xBD2914 VA: 0xBD2914
	public static SynchronizationContext SynchronizationContext { get; set; }

	// Methods

	// RVA: 0x223F838 Offset: 0x223F838 VA: 0x223F838
	private static void .cctor() { }

	// RVA: 0x223F83C Offset: 0x223F83C VA: 0x223F83C
	public static SynchronizationContext get_SynchronizationContext() { }

	// RVA: 0x223F8B0 Offset: 0x223F8B0 VA: 0x223F8B0
	public static void set_SynchronizationContext(SynchronizationContext value) { }

	// RVA: 0x223F8B8 Offset: 0x223F8B8 VA: 0x223F8B8
	public static AsyncOperation CreateOperation(object userSuppliedState) { }
}

// Namespace: System.ComponentModel
[ComVisibleAttribute] // RVA: 0xBCFC44 Offset: 0xBCFC44 VA: 0xBCFC44
[DefaultMemberAttribute] // RVA: 0xBCFC44 Offset: 0xBCFC44 VA: 0xBCFC44
public class AttributeCollection : ICollection, IEnumerable // TypeDefIndex: 1178
{
	// Fields
	private ArrayList attrList; // 0x10
	public static readonly AttributeCollection Empty; // 0x0

	// Properties
	private bool System.Collections.ICollection.IsSynchronized { get; }
	private object System.Collections.ICollection.SyncRoot { get; }
	private int System.Collections.ICollection.Count { get; }
	public int Count { get; }
	public virtual Attribute Item { get; }
	public virtual Attribute Item { get; }

	// Methods

	// RVA: 0x223F950 Offset: 0x223F950 VA: 0x223F950
	internal void .ctor(ArrayList attributes) { }

	// RVA: 0x223F9D0 Offset: 0x223F9D0 VA: 0x223F9D0
	public void .ctor(Attribute[] attributes) { }

	// RVA: 0x223FAC0 Offset: 0x223FAC0 VA: 0x223FAC0
	private static void .cctor() { }

	// RVA: 0x223FB24 Offset: 0x223FB24 VA: 0x223FB24 Slot: 8
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x223FB94 Offset: 0x223FB94 VA: 0x223FB94 Slot: 5
	private bool System.Collections.ICollection.get_IsSynchronized() { }

	// RVA: 0x223FBCC Offset: 0x223FBCC VA: 0x223FBCC Slot: 6
	private object System.Collections.ICollection.get_SyncRoot() { }

	// RVA: 0x223FC04 Offset: 0x223FC04 VA: 0x223FC04 Slot: 4
	private int System.Collections.ICollection.get_Count() { }

	// RVA: 0x223FC3C Offset: 0x223FC3C VA: 0x223FC3C
	public static AttributeCollection FromExisting(AttributeCollection existing, Attribute[] newAttributes) { }

	// RVA: 0x223FD70 Offset: 0x223FD70 VA: 0x223FD70
	public bool Contains(Attribute attr) { }

	// RVA: 0x223FDEC Offset: 0x223FDEC VA: 0x223FDEC
	public bool Contains(Attribute[] attributes) { }

	// RVA: 0x223FE74 Offset: 0x223FE74 VA: 0x223FE74 Slot: 7
	public void CopyTo(Array array, int index) { }

	// RVA: 0x223FB5C Offset: 0x223FB5C VA: 0x223FB5C Slot: 9
	public IEnumerator GetEnumerator() { }

	// RVA: 0x223FEC4 Offset: 0x223FEC4 VA: 0x223FEC4
	public bool Matches(Attribute attr) { }

	// RVA: 0x2240214 Offset: 0x2240214 VA: 0x2240214
	public bool Matches(Attribute[] attributes) { }

	// RVA: 0x2240298 Offset: 0x2240298 VA: 0x2240298
	protected Attribute GetDefaultAttribute(Type attributeType) { }

	// RVA: 0x223FC20 Offset: 0x223FC20 VA: 0x223FC20 Slot: 10
	public int get_Count() { }

	// RVA: 0x2240448 Offset: 0x2240448 VA: 0x2240448 Slot: 11
	public virtual Attribute get_Item(Type type) { }

	// RVA: 0x224077C Offset: 0x224077C VA: 0x224077C Slot: 12
	public virtual Attribute get_Item(int index) { }
}

// Namespace: System.ComponentModel
public class BackgroundWorker // TypeDefIndex: 1179
{
	// Fields
	private AsyncOperation async; // 0x10
	private bool cancel_pending; // 0x18
	private bool report_progress; // 0x19
	private bool support_cancel; // 0x1A
	private DoWorkEventHandler DoWork; // 0x20
	private ProgressChangedEventHandler ProgressChanged; // 0x28
	private RunWorkerCompletedEventHandler RunWorkerCompleted; // 0x30

	// Properties
	public bool CancellationPending { get; }
	public bool IsBusy { get; }
	[DefaultValueAttribute] // RVA: 0xBD2928 Offset: 0xBD2928 VA: 0xBD2928
	public bool WorkerReportsProgress { get; set; }
	[DefaultValueAttribute] // RVA: 0xBD293C Offset: 0xBD293C VA: 0xBD293C
	public bool WorkerSupportsCancellation { get; set; }

	// Methods

	// RVA: 0x2240870 Offset: 0x2240870 VA: 0x2240870
	public void .ctor() { }

	// RVA: 0x2240878 Offset: 0x2240878 VA: 0x2240878
	public void add_DoWork(DoWorkEventHandler value) { }

	// RVA: 0x224093C Offset: 0x224093C VA: 0x224093C
	public void remove_DoWork(DoWorkEventHandler value) { }

	// RVA: 0x2240A00 Offset: 0x2240A00 VA: 0x2240A00
	public void add_ProgressChanged(ProgressChangedEventHandler value) { }

	// RVA: 0x2240AC4 Offset: 0x2240AC4 VA: 0x2240AC4
	public void remove_ProgressChanged(ProgressChangedEventHandler value) { }

	// RVA: 0x2240B88 Offset: 0x2240B88 VA: 0x2240B88
	public void add_RunWorkerCompleted(RunWorkerCompletedEventHandler value) { }

	// RVA: 0x2240C4C Offset: 0x2240C4C VA: 0x2240C4C
	public void remove_RunWorkerCompleted(RunWorkerCompletedEventHandler value) { }

	// RVA: 0x2240D10 Offset: 0x2240D10 VA: 0x2240D10
	public bool get_CancellationPending() { }

	// RVA: 0x2240D18 Offset: 0x2240D18 VA: 0x2240D18
	public bool get_IsBusy() { }

	// RVA: 0x2240D28 Offset: 0x2240D28 VA: 0x2240D28
	public bool get_WorkerReportsProgress() { }

	// RVA: 0x2240D30 Offset: 0x2240D30 VA: 0x2240D30
	public void set_WorkerReportsProgress(bool value) { }

	// RVA: 0x2240D3C Offset: 0x2240D3C VA: 0x2240D3C
	public bool get_WorkerSupportsCancellation() { }

	// RVA: 0x2240D44 Offset: 0x2240D44 VA: 0x2240D44
	public void set_WorkerSupportsCancellation(bool value) { }

	// RVA: 0x2240D50 Offset: 0x2240D50 VA: 0x2240D50
	public void CancelAsync() { }

	// RVA: 0x2240DEC Offset: 0x2240DEC VA: 0x2240DEC
	public void ReportProgress(int percentProgress) { }

	// RVA: 0x2240DF4 Offset: 0x2240DF4 VA: 0x2240DF4
	public void ReportProgress(int percentProgress, object userState) { }

	// RVA: 0x2240F10 Offset: 0x2240F10 VA: 0x2240F10
	public void RunWorkerAsync() { }

	// RVA: 0x2241070 Offset: 0x2241070 VA: 0x2241070
	private void ProcessWorker(object argument, AsyncOperation async, SendOrPostCallback callback) { }

	// RVA: 0x2241354 Offset: 0x2241354 VA: 0x2241354
	private void CompleteWorker(object state) { }

	// RVA: 0x2240F18 Offset: 0x2240F18 VA: 0x2240F18
	public void RunWorkerAsync(object argument) { }

	// RVA: 0x2241550 Offset: 0x2241550 VA: 0x2241550 Slot: 4
	protected virtual void OnDoWork(DoWorkEventArgs e) { }

	// RVA: 0x2241934 Offset: 0x2241934 VA: 0x2241934 Slot: 5
	protected virtual void OnProgressChanged(ProgressChangedEventArgs e) { }

	// RVA: 0x2241958 Offset: 0x2241958 VA: 0x2241958 Slot: 6
	protected virtual void OnRunWorkerCompleted(RunWorkerCompletedEventArgs e) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD121C Offset: 0xBD121C VA: 0xBD121C
	// RVA: 0x224197C Offset: 0x224197C VA: 0x224197C
	private void <ReportProgress>m__0(object o) { }

	[CompilerGeneratedAttribute] // RVA: 0xBD122C Offset: 0xBD122C VA: 0xBD122C
	// RVA: 0x2241A14 Offset: 0x2241A14 VA: 0x2241A14
	private void <CompleteWorker>m__1(object darg) { }
}

// Namespace: 
private sealed class BackgroundWorker.ProcessWorkerEventHandler : MulticastDelegate // TypeDefIndex: 1180
{
	// Methods

	// RVA: 0x2241510 Offset: 0x2241510 VA: 0x2241510
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2241AB0 Offset: 0x2241AB0 VA: 0x2241AB0 Slot: 11
	public virtual void Invoke(object argument, AsyncOperation async, SendOrPostCallback callback) { }

	// RVA: 0x2241520 Offset: 0x2241520 VA: 0x2241520 Slot: 12
	public virtual IAsyncResult BeginInvoke(object argument, AsyncOperation async, SendOrPostCallback callback, AsyncCallback _callback, object object) { }

	// RVA: 0x2241EA0 Offset: 0x2241EA0 VA: 0x2241EA0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: System.ComponentModel
public abstract class BaseNumberConverter : TypeConverter // TypeDefIndex: 1181
{
	// Fields
	internal Type InnerType; // 0x10

	// Properties
	internal abstract bool SupportHex { get; }

	// Methods

	// RVA: 0x2241EAC Offset: 0x2241EAC VA: 0x2241EAC
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 16
	internal abstract bool get_SupportHex();

	// RVA: 0x2241EB4 Offset: 0x2241EB4 VA: 0x2241EB4 Slot: 4
	public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) { }

	// RVA: 0x2241F68 Offset: 0x2241F68 VA: 0x2241F68 Slot: 5
	public override bool CanConvertTo(ITypeDescriptorContext context, Type t) { }

	// RVA: 0x2241FD4 Offset: 0x2241FD4 VA: 0x2241FD4 Slot: 6
	public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) { }

	// RVA: 0x22423C8 Offset: 0x22423C8 VA: 0x22423C8 Slot: 7
	public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) { }

	// RVA: -1 Offset: -1 Slot: 17
	internal abstract string ConvertToString(object value, NumberFormatInfo format);

	// RVA: -1 Offset: -1 Slot: 18
	internal abstract object ConvertFromString(string value, NumberFormatInfo format);

	// RVA: 0x22426CC Offset: 0x22426CC VA: 0x22426CC Slot: 19
	internal virtual object ConvertFromString(string value, int fromBase) { }
}

// Namespace: System.ComponentModel
public enum BindableSupport // TypeDefIndex: 1182
{
	// Fields
	public int value__; // 0x0
	public const BindableSupport No = 0;
	public const BindableSupport Yes = 1;
	public const BindableSupport Default = 2;
}

// Namespace: System.ComponentModel
public class BooleanConverter : TypeConverter // TypeDefIndex: 1183
{
	// Methods

	// RVA: 0x2242770 Offset: 0x2242770 VA: 0x2242770
	public void .ctor() { }

	// RVA: 0x2242778 Offset: 0x2242778 VA: 0x2242778 Slot: 4
	public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) { }

	// RVA: 0x224282C Offset: 0x224282C VA: 0x224282C Slot: 6
	public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) { }

	// RVA: 0x2242974 Offset: 0x2242974 VA: 0x2242974 Slot: 12
	public override TypeConverter.StandardValuesCollection GetStandardValues(ITypeDescriptorContext context) { }

	// RVA: 0x2242A14 Offset: 0x2242A14 VA: 0x2242A14 Slot: 13
	public override bool GetStandardValuesExclusive(ITypeDescriptorContext context) { }

	// RVA: 0x2242A1C Offset: 0x2242A1C VA: 0x2242A1C Slot: 14
	public override bool GetStandardValuesSupported(ITypeDescriptorContext context) { }
}

// Namespace: System.ComponentModel
[AttributeUsageAttribute] // RVA: 0xBCFC94 Offset: 0xBCFC94 VA: 0xBCFC94
public sealed class BrowsableAttribute : Attribute // TypeDefIndex: 1184
{
	// Fields
	private bool browsable; // 0x10
	public static readonly BrowsableAttribute Default; // 0x0
	public static readonly BrowsableAttribute No; // 0x8
	public static readonly BrowsableAttribute Yes; // 0x10

	// Properties
	public bool Browsable { get; }

	// Methods

	// RVA: 0x2242A24 Offset: 0x2242A24 VA: 0x2242A24
	public void .ctor(bool browsable) { }

	// RVA: 0x2242A54 Offset: 0x2242A54 VA: 0x2242A54
	private static void .cctor() { }

	// RVA: 0x2242B0C Offset: 0x2242B0C VA: 0x2242B0C
	public bool get_Browsable() { }

	// RVA: 0x2242B14 Offset: 0x2242B14 VA: 0x2242B14 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0x2242BB4 Offset: 0x2242BB4 VA: 0x2242BB4 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x2242BC0 Offset: 0x2242BC0 VA: 0x2242BC0 Slot: 5
	public override bool IsDefaultAttribute() { }
}

// Namespace: System.ComponentModel
public class ByteConverter : BaseNumberConverter // TypeDefIndex: 1185
{
	// Properties
	internal override bool SupportHex { get; }

	// Methods

	// RVA: 0x2242C58 Offset: 0x2242C58 VA: 0x2242C58
	public void .ctor() { }

	// RVA: 0x2242CE0 Offset: 0x2242CE0 VA: 0x2242CE0 Slot: 16
	internal override bool get_SupportHex() { }

	// RVA: 0x2242CE8 Offset: 0x2242CE8 VA: 0x2242CE8 Slot: 17
	internal override string ConvertToString(object value, NumberFormatInfo format) { }

	// RVA: 0x2242D70 Offset: 0x2242D70 VA: 0x2242D70 Slot: 18
	internal override object ConvertFromString(string value, NumberFormatInfo format) { }

	// RVA: 0x2242DEC Offset: 0x2242DEC VA: 0x2242DEC Slot: 19
	internal override object ConvertFromString(string value, int fromBase) { }
}

// Namespace: System.ComponentModel
public class CancelEventArgs : EventArgs // TypeDefIndex: 1186
{
	// Fields
	private bool cancel; // 0x10

	// Properties
	public bool Cancel { get; set; }

	// Methods

	// RVA: 0x2242E84 Offset: 0x2242E84 VA: 0x2242E84
	public void .ctor() { }

	// RVA: 0x2242EF4 Offset: 0x2242EF4 VA: 0x2242EF4
	public void .ctor(bool cancel) { }

	// RVA: 0x2242F74 Offset: 0x2242F74 VA: 0x2242F74
	public bool get_Cancel() { }

	// RVA: 0x2242F7C Offset: 0x2242F7C VA: 0x2242F7C
	public void set_Cancel(bool value) { }
}

// Namespace: System.ComponentModel
[AttributeUsageAttribute] // RVA: 0xBCFCA8 Offset: 0xBCFCA8 VA: 0xBCFCA8
public class CategoryAttribute : Attribute // TypeDefIndex: 1187
{
	// Fields
	private string category; // 0x10
	private bool IsLocalized; // 0x18
	private static CategoryAttribute action; // 0x0
	private static CategoryAttribute appearance; // 0x8
	private static CategoryAttribute behaviour; // 0x10
	private static CategoryAttribute data; // 0x18
	private static CategoryAttribute def; // 0x20
	private static CategoryAttribute design; // 0x28
	private static CategoryAttribute drag_drop; // 0x30
	private static CategoryAttribute focus; // 0x38
	private static CategoryAttribute format; // 0x40
	private static CategoryAttribute key; // 0x48
	private static CategoryAttribute layout; // 0x50
	private static CategoryAttribute mouse; // 0x58
	private static CategoryAttribute window_style; // 0x60
	private static CategoryAttribute async; // 0x68
	private static object lockobj; // 0x70

	// Properties
	public static CategoryAttribute Action { get; }
	public static CategoryAttribute Appearance { get; }
	public static CategoryAttribute Asynchronous { get; }
	public static CategoryAttribute Behavior { get; }
	public static CategoryAttribute Data { get; }
	public static CategoryAttribute Default { get; }
	public static CategoryAttribute Design { get; }
	public static CategoryAttribute DragDrop { get; }
	public static CategoryAttribute Focus { get; }
	public static CategoryAttribute Format { get; }
	public static CategoryAttribute Key { get; }
	public static CategoryAttribute Layout { get; }
	public static CategoryAttribute Mouse { get; }
	public static CategoryAttribute WindowStyle { get; }
	public string Category { get; }

	// Methods

	// RVA: 0x2242F88 Offset: 0x2242F88 VA: 0x2242F88
	public void .ctor() { }

	// RVA: 0x2242FE4 Offset: 0x2242FE4 VA: 0x2242FE4
	public void .ctor(string category) { }

	// RVA: 0x2243010 Offset: 0x2243010 VA: 0x2243010
	private static void .cctor() { }

	// RVA: 0x224307C Offset: 0x224307C VA: 0x224307C
	public static CategoryAttribute get_Action() { }

	// RVA: 0x2243224 Offset: 0x2243224 VA: 0x2243224
	public static CategoryAttribute get_Appearance() { }

	// RVA: 0x22433CC Offset: 0x22433CC VA: 0x22433CC
	public static CategoryAttribute get_Asynchronous() { }

	// RVA: 0x224358C Offset: 0x224358C VA: 0x224358C
	public static CategoryAttribute get_Behavior() { }

	// RVA: 0x2243734 Offset: 0x2243734 VA: 0x2243734
	public static CategoryAttribute get_Data() { }

	// RVA: 0x22438DC Offset: 0x22438DC VA: 0x22438DC
	public static CategoryAttribute get_Default() { }

	// RVA: 0x2243A84 Offset: 0x2243A84 VA: 0x2243A84
	public static CategoryAttribute get_Design() { }

