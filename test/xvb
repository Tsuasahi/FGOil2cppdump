
	// RVA: 0x15F3D80 Offset: 0x15F3D80 VA: 0x15F3D80
	public static void DeleteContinueData() { }

	// RVA: 0x15F4054 Offset: 0x15F4054 VA: 0x15F4054
	private static void InitParameter() { }

	// RVA: 0x15F4480 Offset: 0x15F4480 VA: 0x15F4480
	public static void InitLoad() { }

	// RVA: 0x15F44DC Offset: 0x15F44DC VA: 0x15F44DC
	public static void Load_SaveData() { }

	// RVA: 0x15F52D8 Offset: 0x15F52D8 VA: 0x15F52D8
	public static TerminalTransitionInfo Load_TerminalTransitionInfoData() { }

	// RVA: 0x15F375C Offset: 0x15F375C VA: 0x15F375C
	public static void Save_SaveData() { }

	// RVA: 0x15F53B0 Offset: 0x15F53B0 VA: 0x15F53B0
	public static void SpotIdSave_SaveData() { }

	// RVA: 0x15F5430 Offset: 0x15F5430 VA: 0x15F5430
	public static void EventStatusSave_SaveData() { }

	// RVA: 0x15F54D0 Offset: 0x15F54D0 VA: 0x15F54D0
	public static void EventDailyPointSave_SaveData() { }

	// RVA: 0x15F5588 Offset: 0x15F5588 VA: 0x15F5588
	public static void PlayQuestSave_SaveData() { }

	// RVA: 0x15F5648 Offset: 0x15F5648 VA: 0x15F5648
	public static void TerminalTransitionInfoSave_SaveData(TerminalTransitionInfo terminalTransitionInfo) { }

	// RVA: 0x15F56CC Offset: 0x15F56CC VA: 0x15F56CC
	public static void TerminalEventActivityPointInfoSave_SaveData() { }

	// RVA: 0x15F576C Offset: 0x15F576C VA: 0x15F576C
	public static bool CheckEventActivityPointSaveData() { }

	// RVA: 0x15F57E0 Offset: 0x15F57E0 VA: 0x15F57E0
	public static void TerminalEventSubmarinePointInfoSave_SaveData() { }

	// RVA: 0x15F58C8 Offset: 0x15F58C8 VA: 0x15F58C8
	public static bool CheckEventSubmarinePointSaveData() { }

	// RVA: 0x15F5914 Offset: 0x15F5914 VA: 0x15F5914
	public static void TerminalEventConquestInfosSave_SaveData() { }

	// RVA: 0x15F5A48 Offset: 0x15F5A48 VA: 0x15F5A48
	public static void TerminalEventConquestInfoDispSave_SaveData() { }

	// RVA: 0x15F5AC8 Offset: 0x15F5AC8 VA: 0x15F5AC8
	public static void TerminalEventHarvestGrowthInfosSave_SaveData() { }

	// RVA: 0x15F5BC8 Offset: 0x15F5BC8 VA: 0x15F5BC8
	public static void LastPlayBgmNameSave_SaveData() { }

	// RVA: 0x15F5C48 Offset: 0x15F5C48 VA: 0x15F5C48
	public static void LastPlayQuestConsumeApSave_SaveData() { }

	// RVA: 0x15F5CC8 Offset: 0x15F5CC8 VA: 0x15F5CC8
	public static void LastPanelEventPointSave_SaveData() { }

	// RVA: 0x15F5D48 Offset: 0x15F5D48 VA: 0x15F5D48
	public static void IsPlayTerminalEffectDisappear_SaveData() { }

	// RVA: 0x15F5DC8 Offset: 0x15F5DC8 VA: 0x15F5DC8
	public static void TerminalSelectedStoryQuestId_SaveData() { }

	// RVA: 0x15F5E48 Offset: 0x15F5E48 VA: 0x15F5E48
	public static void ConnectMark_SaveData() { }

	// RVA: 0x15F5EE8 Offset: 0x15F5EE8 VA: 0x15F5EE8
	public static void CheckClearSelectedStoryQuestId(int questId) { }

	// RVA: 0x15F5FA4 Offset: 0x15F5FA4 VA: 0x15F5FA4
	public static bool IsTerminalEffectPlayed(int effectId) { }

	// RVA: 0x15F6168 Offset: 0x15F6168 VA: 0x15F6168
	public static void PlayedTerminalEffectsSave_SaveData(int effectId) { }

	// RVA: 0x15F62D0 Offset: 0x15F62D0 VA: 0x15F62D0
	public static bool IsWarStartedId(int war_id) { }

	// RVA: 0x15F647C Offset: 0x15F647C VA: 0x15F647C
	public static void SetWarStartedId(int war_id) { }

	// RVA: 0x15F43E0 Offset: 0x15F43E0 VA: 0x15F43E0
	public static void InitMessageWindowData() { }

	// RVA: 0x15F5198 Offset: 0x15F5198 VA: 0x15F5198
	public static void SetFolderLastClickedIdx(int warId, int idx) { }

	// RVA: 0x15F6580 Offset: 0x15F6580 VA: 0x15F6580
	public static int GetFolderLastClickedIdx(int warId) { }

	// RVA: 0x15F665C Offset: 0x15F665C VA: 0x15F665C
	public static void ReceiveQuestEndResultInfo(BattleResultComponent.resultData[] result, bool isWin) { }

	// RVA: 0x15F9910 Offset: 0x15F9910 VA: 0x15F9910
	public static void SaveClearDatas() { }

	// RVA: 0x15F9B64 Offset: 0x15F9B64 VA: 0x15F9B64
	public static void LoadClearDatas() { }

	// RVA: 0x15F4228 Offset: 0x15F4228 VA: 0x15F4228
	public static void DeleteClearDatas() { }

	// RVA: 0x15F42F8 Offset: 0x15F42F8 VA: 0x15F42F8
	private static void DeleteEventRaidDefeatedEffectInfo() { }

	// RVA: 0x15FA394 Offset: 0x15FA394 VA: 0x15FA394
	public static void LoadEventRaidDefeatedEffectInfo() { }

	// RVA: 0x15FA494 Offset: 0x15FA494 VA: 0x15FA494
	public static void UpdateEventRaidDefeatedEffectInfo(int eventId, int day) { }

	// RVA: 0x15FA624 Offset: 0x15FA624 VA: 0x15FA624
	public static void SaveEventRaidDefeatedEffectInfo() { }

	// RVA: 0x15FA6BC Offset: 0x15FA6BC VA: 0x15FA6BC
	public static bool IsPlayedEventRaidDefeatedEffect(int eventId, int day) { }

	// RVA: 0x15F436C Offset: 0x15F436C VA: 0x15F436C
	private static void DeleteQuestRandomGroupList() { }

	// RVA: 0x15FA794 Offset: 0x15FA794 VA: 0x15FA794
	public static void LoadQuestRandomGroupList() { }

	// RVA: 0x15FAA48 Offset: 0x15FAA48 VA: 0x15FAA48
	public static void SaveQuestRandomGroupList() { }

	// RVA: 0x15FAD14 Offset: 0x15FAD14 VA: 0x15FAD14
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD423F4 Offset: 0xD423F4 VA: 0xD423F4
	// RVA: 0x15FAE38 Offset: 0x15FAE38 VA: 0x15FAE38
	private static bool <ReceiveQuestEndResultInfo>m__0(QuestReleaseEntity n) { }
}

// Namespace: 
private class TerminalPramsManager.OldHeroineLawData // TypeDefIndex: 11407
{
	// Fields
	public long id; // 0x10
	public long userId; // 0x18
	public int svtId; // 0x20
	public int limitCount; // 0x24
	public int imageLimitCount; // 0x28
	public int dispLimitCount; // 0x2C
	public int commandCardLimitCount; // 0x30
	public int iconLimitCount; // 0x34
	public int lv; // 0x38
	public int exp; // 0x3C
	public int atk; // 0x40
	public int hp; // 0x44
	public int adjustAtk; // 0x48
	public int adjustHp; // 0x4C
	public int skillLv1; // 0x50
	public int skillLv2; // 0x54
	public int skillLv3; // 0x58
	public int treasureDeviceLv1; // 0x5C
	public int exceedCount; // 0x60
	public int status; // 0x64
	public long createdAt; // 0x68

	// Methods

	// RVA: 0x14082C4 Offset: 0x14082C4 VA: 0x14082C4
	public void .ctor() { }

	// RVA: 0x14082CC Offset: 0x14082CC VA: 0x14082CC
	public void .ctor(UserServantEntity uSvtEnt) { }

	// RVA: 0x1408490 Offset: 0x1408490 VA: 0x1408490
	public UserServantEntity GetLoad() { }
}

// Namespace: 
private class TerminalPramsManager.QuestClearHeroineInfoForSave // TypeDefIndex: 11408
{
	// Fields
	public TerminalPramsManager.OldHeroineLawData oldUsrSvtData; // 0x10
	public bool isChangeLimitcnt; // 0x18
	public bool isChangeTreasureDvc; // 0x19
	public int treasureDvcId; // 0x1C
	public int treasureDvcLv; // 0x20
	public int oldFriendShipRank; // 0x24
	public bool isFriendShipExceed; // 0x28
	public bool isExceed; // 0x29

	// Methods

	// RVA: 0x14080D4 Offset: 0x14080D4 VA: 0x14080D4
	public void .ctor() { }

	// RVA: 0x14080FC Offset: 0x14080FC VA: 0x14080FC
	public void .ctor(QuestClearHeroineInfo qClearHeroineInfo) { }

	// RVA: 0x1408660 Offset: 0x1408660 VA: 0x1408660
	public QuestClearHeroineInfo GetLoad() { }
}

// Namespace: 
public enum TerminalPramsManager.enSceneStatus // TypeDefIndex: 11409
{
	// Fields
	public int value__; // 0x0
	public const TerminalPramsManager.enSceneStatus enNone = 0;
	public const TerminalPramsManager.enSceneStatus enInitialize = 1;
	public const TerminalPramsManager.enSceneStatus enResume = 2;
	public const TerminalPramsManager.enSceneStatus enResumeFromScript = 3;
	public const TerminalPramsManager.enSceneStatus enMAX = 4;
}

// Namespace: 
public enum TerminalPramsManager.eDispState // TypeDefIndex: 11410
{
	// Fields
	public int value__; // 0x0
	public const TerminalPramsManager.eDispState None = 0;
	public const TerminalPramsManager.eDispState Top = 1;
	public const TerminalPramsManager.eDispState Map = 2;
	public const TerminalPramsManager.eDispState Caldea = 3;
	public const TerminalPramsManager.eDispState Story = 4;
	public const TerminalPramsManager.eDispState Hero = 5;
	public const TerminalPramsManager.eDispState MAX = 6;
}

// Namespace: 
public enum TerminalPramsManager.eSpecifiedScene // TypeDefIndex: 11411
{
	// Fields
	public int value__; // 0x0
	public const TerminalPramsManager.eSpecifiedScene None = 0;
	public const TerminalPramsManager.eSpecifiedScene EventReward = 1;
}

// Namespace: 
private class TerminalPramsManager.ClearData // TypeDefIndex: 11412
{
	// Fields
	public static readonly string SAVEKEY_CLEAR_REWARD_DISP; // 0x0
	public TerminalPramsManager.QuestClearHeroineInfoForSave qClearHeroineInfo; // 0x10
	public QuestRewardInfo[] questRewardInfos; // 0x18
	public QuestRewardInfo[] questPhaseRewardInfos; // 0x20
	public bool questClear; // 0x28
	public bool phaseClear; // 0x29
	public int clearedLastBattleRaidId; // 0x2C
	public int clearedBattleRaidId; // 0x30
	public int joinGroup; // 0x34
	public UserSuperBossEntity[] mOldSuperBoss; // 0x38
	public EventPointWinReward evPointWinReward; // 0x40
	public int evPointWinType; // 0x48
	public EventRaceBoostInfo evRaceBoost; // 0x50
	public CostumeReleaseAnnounce[] questClearCostume; // 0x58
	public CostumeReleaseAnnounce[] questClearCostumeGetInfo; // 0x60
	public EventTowerReward eventTowerReward; // 0x68
	public QuestRewardInfo[] resultEventTowerRewardInfo; // 0x70
	public QuestRewardInfo[] resultBoostItemRewardInfo; // 0x78
	public QuestRewardInfo[] resultEventBoardGameTokenRewardInfo; // 0x80
	public bool isDispOnly; // 0x88
	public WarClearReward[] warClearReward; // 0x90
	public int EventActivityPointEffectState; // 0x98
	public bool isWarBoardClear; // 0x9C
	public BattleDropItem[] questResultAfterEventRewardInfos; // 0xA0
	public BattleDropItem[] resultEventPanelRewardInfos; // 0xA8
	public int panelEventPoint; // 0xB0
	public LimitImageAnnounce[] limitImageAnnounces; // 0xB8

	// Methods

	// RVA: 0x1407CC4 Offset: 0x1407CC4 VA: 0x1407CC4
	public void .ctor() { }

	// RVA: 0x1407D80 Offset: 0x1407D80 VA: 0x1407D80
	public void .ctor(QuestClearHeroineInfo qcrHeroineInfo, QuestRewardInfo[] qri, QuestRewardInfo[] questPhaseRewardInfos, bool qClear, bool pclear, int lastRaidId, int raidId, int groupjoin, UserSuperBossEntity[] oldSuperBoss, EventPointWinReward evpWinReward, EventPointVsResultAction.GROUP_WIN evpWinType, EventRaceBoostInfo evRace, CostumeReleaseAnnounce[] questClearCostumeRelease, CostumeReleaseAnnounce[] questClearCostumeGet, EventTowerReward evTowerReward, QuestRewardInfo[] resultEvTowerRewardInfo, bool dispOnly, WarClearReward[] warClearRewardIn, int eventActivityPointEffectState, bool isWarBoardClear, BattleDropItem[] questResultAfterEventRewardInfos, BattleDropItem[] resultEventPanelRewardInfos, int panelEventPoint, LimitImageAnnounce[] limitImageAnnounces) { }

	// RVA: 0x1408268 Offset: 0x1408268 VA: 0x1408268
	private static void .cctor() { }
}

// Namespace: 
public class UVScrollAnimation : MonoBehaviour // TypeDefIndex: 11413
{
	// Fields
	[SerializeField] // RVA: 0xCEC368 Offset: 0xCEC368 VA: 0xCEC368
	[TooltipAttribute] // RVA: 0xCEC368 Offset: 0xCEC368 VA: 0xCEC368
	private float offsetXPerSec; // 0x18
	[SerializeField] // RVA: 0xCEC3B4 Offset: 0xCEC3B4 VA: 0xCEC3B4
	[TooltipAttribute] // RVA: 0xCEC3B4 Offset: 0xCEC3B4 VA: 0xCEC3B4
	private float offsetYPerSec; // 0x1C
	private const float offsetMaxX = 1;
	private const float offsetMaxY = 1;

	// Methods

	// RVA: 0x20373B8 Offset: 0x20373B8 VA: 0x20373B8
	public void .ctor() { }

	// RVA: 0x20373C0 Offset: 0x20373C0 VA: 0x20373C0
	private void Start() { }

	// RVA: 0x20373C4 Offset: 0x20373C4 VA: 0x20373C4
	private void Update() { }

	// RVA: 0x20373C8 Offset: 0x20373C8 VA: 0x20373C8
	public void UpdateUVOffset() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC96B2C Offset: 0xC96B2C VA: 0xC96B2C
public class BackViewListViewItem : ListViewItem // TypeDefIndex: 11414
{
	// Fields
	protected string path; // 0x70

	// Properties
	public string TitleText { get; }
	public string Path { get; }

	// Methods

	// RVA: 0x1479AA4 Offset: 0x1479AA4 VA: 0x1479AA4
	public void .ctor(int index, string path) { }

	// RVA: 0x1479AD0 Offset: 0x1479AD0 VA: 0x1479AD0 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1479AD8 Offset: 0x1479AD8 VA: 0x1479AD8
	public string get_TitleText() { }

	// RVA: 0x1479B48 Offset: 0x1479B48 VA: 0x1479B48
	public string get_Path() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC96B64 Offset: 0xC96B64 VA: 0xC96B64
public class BackViewListViewItemDraw : MonoBehaviour // TypeDefIndex: 11415
{
	// Fields
	[SerializeField] // RVA: 0xCEC400 Offset: 0xCEC400 VA: 0xCEC400
	protected UITexture baseImageTexture; // 0x18
	[SerializeField] // RVA: 0xCEC410 Offset: 0xCEC410 VA: 0xCEC410
	protected UILabel titleTextLabel; // 0x20

	// Methods

	// RVA: 0x1479B50 Offset: 0x1479B50 VA: 0x1479B50
	public void .ctor() { }

	// RVA: 0x1479B58 Offset: 0x1479B58 VA: 0x1479B58
	public void SetItem(BackViewListViewItem item, BackViewListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public enum BackViewListViewItemDraw.DispMode // TypeDefIndex: 11416
{
	// Fields
	public int value__; // 0x0
	public const BackViewListViewItemDraw.DispMode INVISIBLE = 0;
	public const BackViewListViewItemDraw.DispMode INVALID = 1;
	public const BackViewListViewItemDraw.DispMode VALID = 2;
	public const BackViewListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC96B9C Offset: 0xC96B9C VA: 0xC96B9C
public class BackViewListViewManager : ListViewManager // TypeDefIndex: 11417
{
	// Fields
	protected BackViewListViewManager.InitMode initMode; // 0x138
	[CompilerGeneratedAttribute] // RVA: 0xCEC420 Offset: 0xCEC420 VA: 0xCEC420
	[DebuggerBrowsableAttribute] // RVA: 0xCEC420 Offset: 0xCEC420 VA: 0xCEC420
	private Action callbackFunc; // 0x140
	protected int callbackCount; // 0x148
	protected int callbackIndex; // 0x14C

	// Properties
	public List<BackViewListViewObject> ObjectList { get; }

	// Methods

	// RVA: 0x1479CF8 Offset: 0x1479CF8 VA: 0x1479CF8
	public void .ctor() { }

	// RVA: 0x1479D00 Offset: 0x1479D00 VA: 0x1479D00
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1479DF0 Offset: 0x1479DF0 VA: 0x1479DF0
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1479EE0 Offset: 0x1479EE0 VA: 0x1479EE0
	public List<BackViewListViewObject> get_ObjectList() { }

	// RVA: 0x147A0AC Offset: 0x147A0AC VA: 0x147A0AC
	public void CreateList(string[] list) { }

	// RVA: 0x147A1D0 Offset: 0x147A1D0 VA: 0x147A1D0
	public void DestroyList() { }

	// RVA: 0x147A1D8 Offset: 0x147A1D8 VA: 0x147A1D8
	public BackViewListViewItem GetItem(int index) { }

	// RVA: 0x147A280 Offset: 0x147A280 VA: 0x147A280 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x147A3B8 Offset: 0x147A3B8 VA: 0x147A3B8
	public void SetMode(BackViewListViewManager.InitMode mode) { }

	// RVA: 0x147A3C0 Offset: 0x147A3C0 VA: 0x147A3C0
	public void SetMode(BackViewListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x147A620 Offset: 0x147A620 VA: 0x147A620
	protected void RequestListObject(BackViewListViewObject.InitMode mode, float delay) { }

	// RVA: 0x147A42C Offset: 0x147A42C VA: 0x147A42C
	protected void RequestListObject(BackViewListViewObject.InitMode mode) { }

	// RVA: 0x147A930 Offset: 0x147A930 VA: 0x147A930
	protected void OnMoveEnd() { }

	// RVA: 0x147AA0C Offset: 0x147AA0C VA: 0x147AA0C
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x147AA68 Offset: 0x147AA68 VA: 0x147AA68
	public int GetClickResult() { }

	// RVA: 0x147AA70 Offset: 0x147AA70 VA: 0x147AA70
	public string GetNextName(string name) { }
}

// Namespace: 
public enum BackViewListViewManager.InitMode // TypeDefIndex: 11418
{
	// Fields
	public int value__; // 0x0
	public const BackViewListViewManager.InitMode NONE = 0;
	public const BackViewListViewManager.InitMode INPUT = 1;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC96BD4 Offset: 0xC96BD4 VA: 0xC96BD4
public class BackViewListViewMenu : MonoBehaviour // TypeDefIndex: 11419
{
	// Fields
	public GameObject rootObject; // 0x18
	public UIButton cancelButton; // 0x20
	public BackViewListViewManager listViewManager; // 0x28
	public UIButton forceObi169Button; // 0x30
	public UISprite forceObi169Sprite; // 0x38
	protected BackViewListViewMenu.State state; // 0x40
	protected string[] backAssetList; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xCEC45C Offset: 0xCEC45C VA: 0xCEC45C
	[DebuggerBrowsableAttribute] // RVA: 0xCEC45C Offset: 0xCEC45C VA: 0xCEC45C
	private BackViewListViewMenu.CallbackFunc callbackFunc; // 0x50

	// Methods

	// RVA: 0x147AC14 Offset: 0x147AC14 VA: 0x147AC14
	public void .ctor() { }

	// RVA: 0x147AC1C Offset: 0x147AC1C VA: 0x147AC1C
	protected void add_callbackFunc(BackViewListViewMenu.CallbackFunc value) { }

	// RVA: 0x147AD08 Offset: 0x147AD08 VA: 0x147AD08
	protected void remove_callbackFunc(BackViewListViewMenu.CallbackFunc value) { }

	// RVA: 0x147ADF4 Offset: 0x147ADF4 VA: 0x147ADF4
	public void Open(BackViewListViewMenu.CallbackFunc callback) { }

	// RVA: 0x147B034 Offset: 0x147B034 VA: 0x147B034
	public void Close() { }

	// RVA: 0x147AF08 Offset: 0x147AF08 VA: 0x147AF08
	public void StartInput() { }

	// RVA: 0x147B09C Offset: 0x147B09C VA: 0x147B09C
	public void EndInput() { }

	// RVA: 0x147B108 Offset: 0x147B108 VA: 0x147B108
	protected void Callback(bool result) { }

	// RVA: 0x147B354 Offset: 0x147B354 VA: 0x147B354
	protected void OnClickItem() { }

	// RVA: 0x147B468 Offset: 0x147B468 VA: 0x147B468
	protected void OnEndBackView(bool isExit) { }

	// RVA: 0x147B53C Offset: 0x147B53C VA: 0x147B53C
	public void OnClickCancel() { }

	// RVA: 0x147B594 Offset: 0x147B594 VA: 0x147B594
	public void OnClickClear() { }

	// RVA: 0x147B610 Offset: 0x147B610 VA: 0x147B610
	public void OnClickForceObi169() { }
}

// Namespace: 
protected enum BackViewListViewMenu.State // TypeDefIndex: 11420
{
	// Fields
	public int value__; // 0x0
	public const BackViewListViewMenu.State INIT = 0;
	public const BackViewListViewMenu.State INIT_MOVE = 1;
	public const BackViewListViewMenu.State INPUT = 2;
	public const BackViewListViewMenu.State VIEW_BACK = 3;
	public const BackViewListViewMenu.State SELECTED = 4;
	public const BackViewListViewMenu.State CLOSE = 5;
}

// Namespace: 
public sealed class BackViewListViewMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 11421
{
	// Methods

	// RVA: 0x147B6F0 Offset: 0x147B6F0 VA: 0x147B6F0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x147B128 Offset: 0x147B128 VA: 0x147B128 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x147B700 Offset: 0x147B700 VA: 0x147B700 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x147B790 Offset: 0x147B790 VA: 0x147B790 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC96C0C Offset: 0xC96C0C VA: 0xC96C0C
public class BackViewListViewObject : ListViewObject // TypeDefIndex: 11422
{
	// Fields
	protected BackViewListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCEC498 Offset: 0xCEC498 VA: 0xCEC498
	[DebuggerBrowsableAttribute] // RVA: 0xCEC498 Offset: 0xCEC498 VA: 0xCEC498
	private Action callbackFunc; // 0x70
	protected BackViewListViewItemDraw itemDraw; // 0x78
	protected BackViewListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x147B79C Offset: 0x147B79C VA: 0x147B79C
	public void .ctor() { }

	// RVA: 0x147B804 Offset: 0x147B804 VA: 0x147B804
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x147B8F0 Offset: 0x147B8F0 VA: 0x147B8F0
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x147B9DC Offset: 0x147B9DC VA: 0x147B9DC
	protected void Awake() { }

	// RVA: 0x147BA50 Offset: 0x147BA50 VA: 0x147BA50
	private void Start() { }

	// RVA: 0x147BA64 Offset: 0x147BA64 VA: 0x147BA64
	private void OnDestroy() { }

	// RVA: 0x147BB10 Offset: 0x147BB10 VA: 0x147BB10
	public BackViewListViewItem GetItem() { }

	// RVA: 0x147BB94 Offset: 0x147BB94 VA: 0x147BB94 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x147BBA0 Offset: 0x147BBA0 VA: 0x147BBA0 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x147BC28 Offset: 0x147BC28 VA: 0x147BC28
	public void Init(BackViewListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x147A828 Offset: 0x147A828 VA: 0x147A828
	public void Init(BackViewListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x147A8AC Offset: 0x147A8AC VA: 0x147A8AC
	public void Init(BackViewListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x147A338 Offset: 0x147A338 VA: 0x147A338
	public void Init(BackViewListViewObject.InitMode initMode) { }

	// RVA: 0x147BDEC Offset: 0x147BDEC VA: 0x147BDEC
	protected void SetupDisp() { }

	// RVA: 0x147BEFC Offset: 0x147BEFC VA: 0x147BEFC
	protected void EventMoveEnd() { }

	// RVA: 0x147BF24 Offset: 0x147BF24 VA: 0x147BF24 Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum BackViewListViewObject.InitMode // TypeDefIndex: 11423
{
	// Fields
	public int value__; // 0x0
	public const BackViewListViewObject.InitMode INVISIBLE = 0;
	public const BackViewListViewObject.InitMode INVALID = 1;
	public const BackViewListViewObject.InitMode VALID = 2;
	public const BackViewListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum BackViewListViewObject.State // TypeDefIndex: 11424
{
	// Fields
	public int value__; // 0x0
	public const BackViewListViewObject.State INIT = 0;
	public const BackViewListViewObject.State IDLE = 1;
	public const BackViewListViewObject.State MOVE = 2;
	public const BackViewListViewObject.State INPUT = 3;
}

// Namespace: 
public class CostSpriteCheckView : MonoBehaviour // TypeDefIndex: 11425
{
	// Fields
	private static readonly string[] filterNameList; // 0x0
	private int filterMode; // 0x18
	public CostSpriteListManager costSpriteListManager; // 0x20
	public UILabel filterLabel; // 0x28

	// Properties
	private int filterModeMax { get; }
	private int filterModeMin { get; }

	// Methods

	// RVA: 0x1975978 Offset: 0x1975978 VA: 0x1975978
	public void .ctor() { }

	// RVA: 0x1975980 Offset: 0x1975980 VA: 0x1975980
	private int get_filterModeMax() { }

	// RVA: 0x1975988 Offset: 0x1975988 VA: 0x1975988
	private int get_filterModeMin() { }

	// RVA: 0x1975990 Offset: 0x1975990 VA: 0x1975990
	private CostSpriteListManager.ListType GetListTypeByFilterMode(int mode) { }

	// RVA: 0x19759B0 Offset: 0x19759B0 VA: 0x19759B0
	public void Setup() { }

	// RVA: 0x1975B08 Offset: 0x1975B08 VA: 0x1975B08
	public void Init() { }

	// RVA: 0x1976640 Offset: 0x1976640 VA: 0x1976640
	public void OnClickCloseButton() { }

	// RVA: 0x1976704 Offset: 0x1976704 VA: 0x1976704
	public void OnClickFilterButton() { }

	// RVA: 0x197671C Offset: 0x197671C VA: 0x197671C
	private void ChangeNextFilterMode() { }

	// RVA: 0x1976734 Offset: 0x1976734 VA: 0x1976734
	private void UpdateDisp(int mode) { }

	// RVA: 0x1976644 Offset: 0x1976644 VA: 0x1976644
	private void Finish() { }

	// RVA: 0x19768A8 Offset: 0x19768A8 VA: 0x19768A8
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD42444 Offset: 0xD42444 VA: 0xD42444
	// RVA: 0x1976A10 Offset: 0x1976A10 VA: 0x1976A10
	private void <Setup>m__0() { }
}

// Namespace: 
public enum CostSpriteCheckView.FilterMode // TypeDefIndex: 11426
{
	// Fields
	public int value__; // 0x0
	public const CostSpriteCheckView.FilterMode ALL = 0;
	public const CostSpriteCheckView.FilterMode FAILED = 1;
	public const CostSpriteCheckView.FilterMode SUCCESS = 2;
}

// Namespace: 
public class CostSpriteListManager : ListViewManager // TypeDefIndex: 11427
{
	// Fields
	private List<int>[] bannerIdAllList; // 0x138

	// Properties
	private List<int> allBannerIdList { get; }
	private List<int> failedBannerIdList { get; }
	private List<int> successBannerIdList { get; }
	private int listTypeCount { get; }

	// Methods

	// RVA: 0x1976A14 Offset: 0x1976A14 VA: 0x1976A14
	public void .ctor() { }

	// RVA: 0x1976A1C Offset: 0x1976A1C VA: 0x1976A1C
	private List<int> get_allBannerIdList() { }

	// RVA: 0x1976A60 Offset: 0x1976A60 VA: 0x1976A60
	private List<int> get_failedBannerIdList() { }

	// RVA: 0x1976AA8 Offset: 0x1976AA8 VA: 0x1976AA8
	private List<int> get_successBannerIdList() { }

	// RVA: 0x1976AF0 Offset: 0x1976AF0 VA: 0x1976AF0
	private int get_listTypeCount() { }

	// RVA: 0x1975BEC Offset: 0x1975BEC VA: 0x1975BEC
	public void Init() { }

	// RVA: 0x19764BC Offset: 0x19764BC VA: 0x19764BC
	public void CreateList(CostSpriteListManager.ListType type) { }

	// RVA: 0x1975CF4 Offset: 0x1975CF4 VA: 0x1975CF4
	public void Load() { }

	// RVA: 0x197689C Offset: 0x197689C VA: 0x197689C
	public void DestroyList() { }

	// RVA: 0x19768A4 Offset: 0x19768A4 VA: 0x19768A4
	public void Finish() { }

	// RVA: 0x1976B24 Offset: 0x1976B24 VA: 0x1976B24
	private void SortAllList() { }

	// RVA: 0x1976BD8 Offset: 0x1976BD8 VA: 0x1976BD8
	private void ClearAllList() { }
}

// Namespace: 
public enum CostSpriteListManager.ListType // TypeDefIndex: 11428
{
	// Fields
	public int value__; // 0x0
	public const CostSpriteListManager.ListType ALL = 0;
	public const CostSpriteListManager.ListType FAILED = 1;
	public const CostSpriteListManager.ListType SUCCESS = 2;
}

// Namespace: 
public class CostSpriteViewItem : ListViewItem // TypeDefIndex: 11429
{
	// Fields
	private int id; // 0x70

	// Properties
	public int bannerId { get; }

	// Methods

	// RVA: 0x1976AF8 Offset: 0x1976AF8 VA: 0x1976AF8
	public void .ctor(int index, int bannerId) { }

	// RVA: 0x1976C8C Offset: 0x1976C8C VA: 0x1976C8C
	public int get_bannerId() { }

	// RVA: 0x1976C94 Offset: 0x1976C94 VA: 0x1976C94 Slot: 1
	protected override void Finalize() { }
}

// Namespace: 
public class CostSpriteViewItemDraw : MonoBehaviour // TypeDefIndex: 11430
{
	// Fields
	[SerializeField] // RVA: 0xCEC4D4 Offset: 0xCEC4D4 VA: 0xCEC4D4
	private UISprite costSprite; // 0x18
	[SerializeField] // RVA: 0xCEC4E4 Offset: 0xCEC4E4 VA: 0xCEC4E4
	private UILabel fileNameLable; // 0x20

	// Methods

	// RVA: 0x1976C9C Offset: 0x1976C9C VA: 0x1976C9C
	public void .ctor() { }

	// RVA: 0x1976CA4 Offset: 0x1976CA4 VA: 0x1976CA4
	public void SetItem(CostSpriteViewItem viewItem) { }

	// RVA: 0x1976DC4 Offset: 0x1976DC4 VA: 0x1976DC4
	public bool IsCostSpriteEnabled() { }
}

// Namespace: 
public class CostSpriteViewObject : ListViewObject // TypeDefIndex: 11431
{
	// Fields
	protected CostSpriteViewItemDraw itemDraw; // 0x70
	protected GameObject dragObject; // 0x78

	// Methods

	// RVA: 0x1976DF4 Offset: 0x1976DF4 VA: 0x1976DF4
	public void .ctor() { }

	// RVA: 0x1976E5C Offset: 0x1976E5C VA: 0x1976E5C
	protected void Awake() { }

	// RVA: 0x1976ED0 Offset: 0x1976ED0 VA: 0x1976ED0
	private void Start() { }

	// RVA: 0x1976F70 Offset: 0x1976F70 VA: 0x1976F70
	private void OnDestroy() { }

	// RVA: 0x1976ED4 Offset: 0x1976ED4 VA: 0x1976ED4
	public void Init() { }

	// RVA: 0x197701C Offset: 0x197701C VA: 0x197701C
	public void SetupDisp() { }

	// RVA: 0x197711C Offset: 0x197711C VA: 0x197711C
	public bool IsCostSpriteEnabled() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC96C44 Offset: 0xC96C44 VA: 0xC96C44
public class DebugListViewItem : ListViewItem // TypeDefIndex: 11432
{
	// Fields
	protected FsmEventData eventData; // 0x70
	protected string titleText; // 0x78

	// Properties
	public string TitleText { get; set; }
	public string EventName { get; }

	// Methods

	// RVA: 0x178C7B8 Offset: 0x178C7B8 VA: 0x178C7B8
	public void .ctor(int index, FsmEventData eventData) { }

	// RVA: 0x178C800 Offset: 0x178C800 VA: 0x178C800 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x178C808 Offset: 0x178C808 VA: 0x178C808
	public string get_TitleText() { }

	// RVA: 0x178C810 Offset: 0x178C810 VA: 0x178C810
	public void set_TitleText(string value) { }

	// RVA: 0x178C818 Offset: 0x178C818 VA: 0x178C818
	public string get_EventName() { }

	// RVA: 0x178C848 Offset: 0x178C848 VA: 0x178C848
	public DebugListViewObject getDebugListViewObject() { }

	// RVA: 0x178C96C Offset: 0x178C96C VA: 0x178C96C
	private string ToString() { }

	// RVA: 0x178C9E4 Offset: 0x178C9E4 VA: 0x178C9E4
	public void SetIndex(int value) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC96C7C Offset: 0xC96C7C VA: 0xC96C7C
public class DebugListViewItemDraw : MonoBehaviour // TypeDefIndex: 11433
{
	// Fields
	[SerializeField] // RVA: 0xCEC4F4 Offset: 0xCEC4F4 VA: 0xCEC4F4
	protected UITexture baseImageTexture; // 0x18
	[SerializeField] // RVA: 0xCEC504 Offset: 0xCEC504 VA: 0xCEC504
	protected UILabel eventTextLabel; // 0x20

	// Methods

	// RVA: 0x178C9EC Offset: 0x178C9EC VA: 0x178C9EC
	public void .ctor() { }

	// RVA: 0x178C9F4 Offset: 0x178C9F4 VA: 0x178C9F4
	public void SetItem(DebugListViewItem item, DebugListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public enum DebugListViewItemDraw.DispMode // TypeDefIndex: 11434
{
	// Fields
	public int value__; // 0x0
	public const DebugListViewItemDraw.DispMode INVISIBLE = 0;
	public const DebugListViewItemDraw.DispMode INVALID = 1;
	public const DebugListViewItemDraw.DispMode VALID = 2;
	public const DebugListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC96CB4 Offset: 0xC96CB4 VA: 0xC96CB4
public class DebugListViewManager : ListViewManager // TypeDefIndex: 11435
{
	// Fields
	[SerializeField] // RVA: 0xCEC514 Offset: 0xCEC514 VA: 0xCEC514
	protected FsmEventDataList debugDataList; // 0x138
	protected DebugListViewManager.InitMode initMode; // 0x140
	[CompilerGeneratedAttribute] // RVA: 0xCEC524 Offset: 0xCEC524 VA: 0xCEC524
	[DebuggerBrowsableAttribute] // RVA: 0xCEC524 Offset: 0xCEC524 VA: 0xCEC524
	private Action callbackFunc; // 0x148
	protected int callbackCount; // 0x150

	// Properties
	public List<DebugListViewObject> ObjectList { get; }

	// Methods

	// RVA: 0x178CB84 Offset: 0x178CB84 VA: 0x178CB84
	public void .ctor() { }

	// RVA: 0x178CB8C Offset: 0x178CB8C VA: 0x178CB8C
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x178CC7C Offset: 0x178CC7C VA: 0x178CC7C
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x178CD6C Offset: 0x178CD6C VA: 0x178CD6C
	public List<DebugListViewObject> get_ObjectList() { }

	// RVA: 0x178CF38 Offset: 0x178CF38 VA: 0x178CF38
	public void CreateList() { }

	// RVA: 0x178D2B8 Offset: 0x178D2B8 VA: 0x178D2B8
	public void DestroyList() { }

	// RVA: 0x178D09C Offset: 0x178D09C VA: 0x178D09C
	public DebugListViewItem GetDebugListViewItem(string eventName) { }

	// RVA: 0x178D2C0 Offset: 0x178D2C0 VA: 0x178D2C0
	public DebugListViewItem GetDebugListViewItem(ListViewObject listViewObject) { }

	// RVA: 0x178D474 Offset: 0x178D474 VA: 0x178D474 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x178D5AC Offset: 0x178D5AC VA: 0x178D5AC
	public void SetMode(DebugListViewManager.InitMode mode) { }

	// RVA: 0x178D5B4 Offset: 0x178D5B4 VA: 0x178D5B4
	public void SetMode(DebugListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x178D80C Offset: 0x178D80C VA: 0x178D80C
	protected void RequestListObject(DebugListViewObject.InitMode mode, float delay) { }

	// RVA: 0x178D618 Offset: 0x178D618 VA: 0x178D618
	protected void RequestListObject(DebugListViewObject.InitMode mode) { }

	// RVA: 0x178DB1C Offset: 0x178DB1C VA: 0x178DB1C
	protected void OnMoveEnd() { }

	// RVA: 0x178DBE8 Offset: 0x178DBE8 VA: 0x178DBE8
	protected void OnClickListView(ListViewObject listViewObject) { }
}

// Namespace: 
public enum DebugListViewManager.InitMode // TypeDefIndex: 11436
{
	// Fields
	public int value__; // 0x0
	public const DebugListViewManager.InitMode NONE = 0;
	public const DebugListViewManager.InitMode INPUT = 1;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC96CEC Offset: 0xC96CEC VA: 0xC96CEC
public class DebugListViewMenu : MonoBehaviour // TypeDefIndex: 11437
{
	// Fields
	public DebugListViewManager listViewManager; // 0x18
	protected DebugListViewMenu.State state; // 0x20

	// Methods

	// RVA: 0x178DC60 Offset: 0x178DC60 VA: 0x178DC60
	public void .ctor() { }

	// RVA: 0x178DC68 Offset: 0x178DC68 VA: 0x178DC68
	public void Init() { }

	// RVA: 0x178DCC8 Offset: 0x178DCC8 VA: 0x178DCC8
	public void StartInput() { }
}

// Namespace: 
protected enum DebugListViewMenu.State // TypeDefIndex: 11438
{
	// Fields
	public int value__; // 0x0
	public const DebugListViewMenu.State INIT = 0;
	public const DebugListViewMenu.State INPUT = 1;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC96D24 Offset: 0xC96D24 VA: 0xC96D24
public class DebugListViewObject : ListViewObject // TypeDefIndex: 11439
{
	// Fields
	protected DebugListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCEC560 Offset: 0xCEC560 VA: 0xCEC560
	[DebuggerBrowsableAttribute] // RVA: 0xCEC560 Offset: 0xCEC560 VA: 0xCEC560
	private Action callbackFunc; // 0x70
	protected DebugListViewItemDraw itemDraw; // 0x78
	protected DebugListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88
