	public ProductType type; // 0x18
	[DebuggerBrowsableAttribute] // RVA: 0xC7DA50 Offset: 0xC7DA50 VA: 0xC7DA50
	[CompilerGeneratedAttribute] // RVA: 0xC7DA50 Offset: 0xC7DA50 VA: 0xC7DA50
	private ProductMetadata <metadata>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC7DA8C Offset: 0xC7DA8C VA: 0xC7DA8C
	[DebuggerBrowsableAttribute] // RVA: 0xC7DA8C Offset: 0xC7DA8C VA: 0xC7DA8C
	private string <receipt>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC7DAC8 Offset: 0xC7DAC8 VA: 0xC7DAC8
	[DebuggerBrowsableAttribute] // RVA: 0xC7DAC8 Offset: 0xC7DAC8 VA: 0xC7DAC8
	private string <transactionId>k__BackingField; // 0x30

	// Properties
	public string storeSpecificId { get; set; }
	public ProductMetadata metadata { get; set; }
	public string receipt { get; set; }
	public string transactionId { get; set; }

	// Methods

	// RVA: 0x1338098 Offset: 0x1338098 VA: 0x1338098
	public void .ctor(string id, ProductMetadata metadata, string receipt, string transactionId) { }

	// RVA: 0x1338108 Offset: 0x1338108 VA: 0x1338108
	public void .ctor(string id, ProductMetadata metadata, string receipt, string transactionId, ProductType type) { }

	// RVA: 0x1338160 Offset: 0x1338160 VA: 0x1338160
	public void .ctor(string id, ProductMetadata metadata) { }

	[CompilerGeneratedAttribute] // RVA: 0xC7DDD4 Offset: 0xC7DDD4 VA: 0xC7DDD4
	// RVA: 0x13381A0 Offset: 0x13381A0 VA: 0x13381A0
	public string get_storeSpecificId() { }

	[CompilerGeneratedAttribute] // RVA: 0xC7DDE4 Offset: 0xC7DDE4 VA: 0xC7DDE4
	// RVA: 0x13380E8 Offset: 0x13380E8 VA: 0x13380E8
	private void set_storeSpecificId(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC7DDF4 Offset: 0xC7DDF4 VA: 0xC7DDF4
	// RVA: 0x13381A8 Offset: 0x13381A8 VA: 0x13381A8
	public ProductMetadata get_metadata() { }

	[CompilerGeneratedAttribute] // RVA: 0xC7DE04 Offset: 0xC7DE04 VA: 0xC7DE04
	// RVA: 0x13380F0 Offset: 0x13380F0 VA: 0x13380F0
	private void set_metadata(ProductMetadata value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC7DE14 Offset: 0xC7DE14 VA: 0xC7DE14
	// RVA: 0x13381B0 Offset: 0x13381B0 VA: 0x13381B0
	public string get_receipt() { }

	[CompilerGeneratedAttribute] // RVA: 0xC7DE24 Offset: 0xC7DE24 VA: 0xC7DE24
	// RVA: 0x13380F8 Offset: 0x13380F8 VA: 0x13380F8
	private void set_receipt(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC7DE34 Offset: 0xC7DE34 VA: 0xC7DE34
	// RVA: 0x13381B8 Offset: 0x13381B8 VA: 0x13381B8
	public string get_transactionId() { }

	[CompilerGeneratedAttribute] // RVA: 0xC7DE44 Offset: 0xC7DE44 VA: 0xC7DE44
	// RVA: 0x1338100 Offset: 0x1338100 VA: 0x1338100
	public void set_transactionId(string value) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2995
{}

// Namespace: UnityEngine.EventSystems
[FlagsAttribute] // RVA: 0xC7E03C Offset: 0xC7E03C VA: 0xC7E03C
public enum EventHandle // TypeDefIndex: 2996
{
	// Fields
	public int value__; // 0x0
	public const EventHandle Unused = 0;
	public const EventHandle Used = 1;
}

// Namespace: UnityEngine.EventSystems
public interface IEventSystemHandler // TypeDefIndex: 2997
{}

// Namespace: UnityEngine.EventSystems
public interface IPointerEnterHandler : IEventSystemHandler // TypeDefIndex: 2998
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnPointerEnter(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IPointerExitHandler : IEventSystemHandler // TypeDefIndex: 2999
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnPointerExit(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IPointerDownHandler : IEventSystemHandler // TypeDefIndex: 3000
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnPointerDown(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IPointerUpHandler : IEventSystemHandler // TypeDefIndex: 3001
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnPointerUp(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IPointerClickHandler : IEventSystemHandler // TypeDefIndex: 3002
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnPointerClick(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IBeginDragHandler : IEventSystemHandler // TypeDefIndex: 3003
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnBeginDrag(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IInitializePotentialDragHandler : IEventSystemHandler // TypeDefIndex: 3004
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnInitializePotentialDrag(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IDragHandler : IEventSystemHandler // TypeDefIndex: 3005
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnDrag(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IEndDragHandler : IEventSystemHandler // TypeDefIndex: 3006
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnEndDrag(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IDropHandler : IEventSystemHandler // TypeDefIndex: 3007
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnDrop(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IScrollHandler : IEventSystemHandler // TypeDefIndex: 3008
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnScroll(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IUpdateSelectedHandler : IEventSystemHandler // TypeDefIndex: 3009
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnUpdateSelected(BaseEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface ISelectHandler : IEventSystemHandler // TypeDefIndex: 3010
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnSelect(BaseEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IDeselectHandler : IEventSystemHandler // TypeDefIndex: 3011
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnDeselect(BaseEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IMoveHandler : IEventSystemHandler // TypeDefIndex: 3012
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnMove(AxisEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface ISubmitHandler : IEventSystemHandler // TypeDefIndex: 3013
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnSubmit(BaseEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface ICancelHandler : IEventSystemHandler // TypeDefIndex: 3014
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnCancel(BaseEventData eventData);
}

// Namespace: UnityEngine.EventSystems
[AddComponentMenu] // RVA: 0xC7E04C Offset: 0xC7E04C VA: 0xC7E04C
public class EventSystem : UIBehaviour // TypeDefIndex: 3015
{
	// Fields
	private List<BaseInputModule> m_SystemInputModules; // 0x18
	private BaseInputModule m_CurrentInputModule; // 0x20
	private static List<EventSystem> m_EventSystems; // 0x0
	[SerializeField] // RVA: 0xC7F0E8 Offset: 0xC7F0E8 VA: 0xC7F0E8
	[FormerlySerializedAsAttribute] // RVA: 0xC7F0E8 Offset: 0xC7F0E8 VA: 0xC7F0E8
	private GameObject m_FirstSelected; // 0x28
	[SerializeField] // RVA: 0xC7F134 Offset: 0xC7F134 VA: 0xC7F134
	private bool m_sendNavigationEvents; // 0x30
	[SerializeField] // RVA: 0xC7F144 Offset: 0xC7F144 VA: 0xC7F144
	private int m_DragThreshold; // 0x34
	private GameObject m_CurrentSelected; // 0x38
	private bool m_HasFocus; // 0x40
	private bool m_SelectionGuard; // 0x41
	private BaseEventData m_DummyData; // 0x48
	private static readonly Comparison<RaycastResult> s_RaycastComparer; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC7F154 Offset: 0xC7F154 VA: 0xC7F154
	private static Comparison<RaycastResult> <>f__mg$cache0; // 0x10

	// Properties
	public static EventSystem current { get; set; }
	public bool sendNavigationEvents { get; set; }
	public int pixelDragThreshold { get; set; }
	public BaseInputModule currentInputModule { get; }
	public GameObject firstSelectedGameObject { get; set; }
	public GameObject currentSelectedGameObject { get; }
	[ObsoleteAttribute] // RVA: 0xC82020 Offset: 0xC82020 VA: 0xC82020
	public GameObject lastSelectedGameObject { get; }
	public bool isFocused { get; }
	public bool alreadySelecting { get; }
	private BaseEventData baseEventDataCache { get; }

	// Methods

	// RVA: 0xF0C040 Offset: 0xF0C040 VA: 0xF0C040
	protected void .ctor() { }

	// RVA: 0xF0C0C4 Offset: 0xF0C0C4 VA: 0xF0C0C4
	public static EventSystem get_current() { }

	// RVA: 0xF0C1A4 Offset: 0xF0C1A4 VA: 0xF0C1A4
	public static void set_current(EventSystem value) { }

	// RVA: 0xF0C2CC Offset: 0xF0C2CC VA: 0xF0C2CC
	public bool get_sendNavigationEvents() { }

	// RVA: 0xF0C2D4 Offset: 0xF0C2D4 VA: 0xF0C2D4
	public void set_sendNavigationEvents(bool value) { }

	// RVA: 0xF0C2E0 Offset: 0xF0C2E0 VA: 0xF0C2E0
	public int get_pixelDragThreshold() { }

	// RVA: 0xF0C2E8 Offset: 0xF0C2E8 VA: 0xF0C2E8
	public void set_pixelDragThreshold(int value) { }

	// RVA: 0xF0A58C Offset: 0xF0A58C VA: 0xF0A58C
	public BaseInputModule get_currentInputModule() { }

	// RVA: 0xF0C2F0 Offset: 0xF0C2F0 VA: 0xF0C2F0
	public GameObject get_firstSelectedGameObject() { }

	// RVA: 0xF0C2F8 Offset: 0xF0C2F8 VA: 0xF0C2F8
	public void set_firstSelectedGameObject(GameObject value) { }

	// RVA: 0xF0A5C0 Offset: 0xF0A5C0 VA: 0xF0A5C0
	public GameObject get_currentSelectedGameObject() { }

	// RVA: 0xF0C300 Offset: 0xF0C300 VA: 0xF0C300
	public GameObject get_lastSelectedGameObject() { }

	// RVA: 0xF0C308 Offset: 0xF0C308 VA: 0xF0C308
	public bool get_isFocused() { }

	// RVA: 0xF0ABB8 Offset: 0xF0ABB8 VA: 0xF0ABB8
	public void UpdateModules() { }

	// RVA: 0xF0C310 Offset: 0xF0C310 VA: 0xF0C310
	public bool get_alreadySelecting() { }

	// RVA: 0xF0A60C Offset: 0xF0A60C VA: 0xF0A60C
	public void SetSelectedGameObject(GameObject selected, BaseEventData pointer) { }

	// RVA: 0xF0C3E8 Offset: 0xF0C3E8 VA: 0xF0C3E8
	private BaseEventData get_baseEventDataCache() { }

	// RVA: 0xF0C458 Offset: 0xF0C458 VA: 0xF0C458
	public void SetSelectedGameObject(GameObject selected) { }

	// RVA: 0xF0C488 Offset: 0xF0C488 VA: 0xF0C488
	private static int RaycastComparer(RaycastResult lhs, RaycastResult rhs) { }

	// RVA: 0xF0C87C Offset: 0xF0C87C VA: 0xF0C87C
	public void RaycastAll(PointerEventData eventData, List<RaycastResult> raycastResults) { }

	// RVA: 0xF0CAA4 Offset: 0xF0CAA4 VA: 0xF0CAA4
	public bool IsPointerOverGameObject() { }

	// RVA: 0xF0CAAC Offset: 0xF0CAAC VA: 0xF0CAAC
	public bool IsPointerOverGameObject(int pointerId) { }

	// RVA: 0xF0CB68 Offset: 0xF0CB68 VA: 0xF0CB68 Slot: 5
	protected override void OnEnable() { }

	// RVA: 0xF0CBF4 Offset: 0xF0CBF4 VA: 0xF0CBF4 Slot: 7
	protected override void OnDisable() { }

	// RVA: 0xF0CCE0 Offset: 0xF0CCE0 VA: 0xF0CCE0
	private void TickModules() { }

	// RVA: 0xF0CE0C Offset: 0xF0CE0C VA: 0xF0CE0C Slot: 17
	protected virtual void OnApplicationFocus(bool hasFocus) { }

	// RVA: 0xF0CE18 Offset: 0xF0CE18 VA: 0xF0CE18 Slot: 18
	protected virtual void Update() { }

	// RVA: 0xF0D0F8 Offset: 0xF0D0F8 VA: 0xF0D0F8
	private void ChangeEventModule(BaseInputModule module) { }

	// RVA: 0xF0D220 Offset: 0xF0D220 VA: 0xF0D220 Slot: 3
	public override string ToString() { }

	// RVA: 0xF0D3D8 Offset: 0xF0D3D8 VA: 0xF0D3D8
	private static void .cctor() { }
}

// Namespace: UnityEngine.EventSystems
[AddComponentMenu] // RVA: 0xC7E084 Offset: 0xC7E084 VA: 0xC7E084
public class EventTrigger : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler, IPointerClickHandler, IInitializePotentialDragHandler, IBeginDragHandler, IDragHandler, IEndDragHandler, IDropHandler, IScrollHandler, IUpdateSelectedHandler, ISelectHandler, IDeselectHandler, IMoveHandler, ISubmitHandler, ICancelHandler, IEventSystemHandler // TypeDefIndex: 3016
{
	// Fields
	[FormerlySerializedAsAttribute] // RVA: 0xC7F164 Offset: 0xC7F164 VA: 0xC7F164
	[SerializeField] // RVA: 0xC7F164 Offset: 0xC7F164 VA: 0xC7F164
	private List<EventTrigger.Entry> m_Delegates; // 0x18
	[EditorBrowsableAttribute] // RVA: 0xC7F1B0 Offset: 0xC7F1B0 VA: 0xC7F1B0
	[ObsoleteAttribute] // RVA: 0xC7F1B0 Offset: 0xC7F1B0 VA: 0xC7F1B0
	public List<EventTrigger.Entry> delegates; // 0x20

	// Properties
	public List<EventTrigger.Entry> triggers { get; set; }

	// Methods

	// RVA: 0xF0D4A8 Offset: 0xF0D4A8 VA: 0xF0D4A8
	protected void .ctor() { }

	// RVA: 0xF0D4B0 Offset: 0xF0D4B0 VA: 0xF0D4B0
	public List<EventTrigger.Entry> get_triggers() { }

	// RVA: 0xF0D524 Offset: 0xF0D524 VA: 0xF0D524
	public void set_triggers(List<EventTrigger.Entry> value) { }

	// RVA: 0xF0D52C Offset: 0xF0D52C VA: 0xF0D52C
	private void Execute(EventTriggerType id, BaseEventData eventData) { }

	// RVA: 0xF0D630 Offset: 0xF0D630 VA: 0xF0D630 Slot: 21
	public virtual void OnPointerEnter(PointerEventData eventData) { }

	// RVA: 0xF0D640 Offset: 0xF0D640 VA: 0xF0D640 Slot: 22
	public virtual void OnPointerExit(PointerEventData eventData) { }

	// RVA: 0xF0D650 Offset: 0xF0D650 VA: 0xF0D650 Slot: 23
	public virtual void OnDrag(PointerEventData eventData) { }

	// RVA: 0xF0D660 Offset: 0xF0D660 VA: 0xF0D660 Slot: 24
	public virtual void OnDrop(PointerEventData eventData) { }

	// RVA: 0xF0D670 Offset: 0xF0D670 VA: 0xF0D670 Slot: 25
	public virtual void OnPointerDown(PointerEventData eventData) { }

	// RVA: 0xF0D680 Offset: 0xF0D680 VA: 0xF0D680 Slot: 26
	public virtual void OnPointerUp(PointerEventData eventData) { }

	// RVA: 0xF0D690 Offset: 0xF0D690 VA: 0xF0D690 Slot: 27
	public virtual void OnPointerClick(PointerEventData eventData) { }

	// RVA: 0xF0D6A0 Offset: 0xF0D6A0 VA: 0xF0D6A0 Slot: 28
	public virtual void OnSelect(BaseEventData eventData) { }

	// RVA: 0xF0D6B0 Offset: 0xF0D6B0 VA: 0xF0D6B0 Slot: 29
	public virtual void OnDeselect(BaseEventData eventData) { }

	// RVA: 0xF0D6C0 Offset: 0xF0D6C0 VA: 0xF0D6C0 Slot: 30
	public virtual void OnScroll(PointerEventData eventData) { }

	// RVA: 0xF0D6D0 Offset: 0xF0D6D0 VA: 0xF0D6D0 Slot: 31
	public virtual void OnMove(AxisEventData eventData) { }

	// RVA: 0xF0D6E0 Offset: 0xF0D6E0 VA: 0xF0D6E0 Slot: 32
	public virtual void OnUpdateSelected(BaseEventData eventData) { }

	// RVA: 0xF0D6F0 Offset: 0xF0D6F0 VA: 0xF0D6F0 Slot: 33
	public virtual void OnInitializePotentialDrag(PointerEventData eventData) { }

	// RVA: 0xF0D700 Offset: 0xF0D700 VA: 0xF0D700 Slot: 34
	public virtual void OnBeginDrag(PointerEventData eventData) { }

	// RVA: 0xF0D710 Offset: 0xF0D710 VA: 0xF0D710 Slot: 35
	public virtual void OnEndDrag(PointerEventData eventData) { }

	// RVA: 0xF0D720 Offset: 0xF0D720 VA: 0xF0D720 Slot: 36
	public virtual void OnSubmit(BaseEventData eventData) { }

	// RVA: 0xF0D730 Offset: 0xF0D730 VA: 0xF0D730 Slot: 37
	public virtual void OnCancel(BaseEventData eventData) { }
}

// Namespace: 
[Serializable]
public class EventTrigger.TriggerEvent : UnityEvent<BaseEventData> // TypeDefIndex: 3017
{
	// Methods

	// RVA: 0xF0D7AC Offset: 0xF0D7AC VA: 0xF0D7AC
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class EventTrigger.Entry // TypeDefIndex: 3018
{
	// Fields
	public EventTriggerType eventID; // 0x10
	public EventTrigger.TriggerEvent callback; // 0x18

	// Methods

	// RVA: 0xF0D740 Offset: 0xF0D740 VA: 0xF0D740
	public void .ctor() { }
}

// Namespace: UnityEngine.EventSystems
public enum EventTriggerType // TypeDefIndex: 3019
{
	// Fields
	public int value__; // 0x0
	public const EventTriggerType PointerEnter = 0;
	public const EventTriggerType PointerExit = 1;
	public const EventTriggerType PointerDown = 2;
	public const EventTriggerType PointerUp = 3;
	public const EventTriggerType PointerClick = 4;
	public const EventTriggerType Drag = 5;
	public const EventTriggerType Drop = 6;
	public const EventTriggerType Scroll = 7;
	public const EventTriggerType UpdateSelected = 8;
	public const EventTriggerType Select = 9;
	public const EventTriggerType Deselect = 10;
	public const EventTriggerType Move = 11;
	public const EventTriggerType InitializePotentialDrag = 12;
	public const EventTriggerType BeginDrag = 13;
	public const EventTriggerType EndDrag = 14;
	public const EventTriggerType Submit = 15;
	public const EventTriggerType Cancel = 16;
}

// Namespace: UnityEngine.EventSystems
public static class ExecuteEvents // TypeDefIndex: 3020
{
	// Fields
	private static readonly ExecuteEvents.EventFunction<IPointerEnterHandler> s_PointerEnterHandler; // 0x0
	private static readonly ExecuteEvents.EventFunction<IPointerExitHandler> s_PointerExitHandler; // 0x8
	private static readonly ExecuteEvents.EventFunction<IPointerDownHandler> s_PointerDownHandler; // 0x10
	private static readonly ExecuteEvents.EventFunction<IPointerUpHandler> s_PointerUpHandler; // 0x18
	private static readonly ExecuteEvents.EventFunction<IPointerClickHandler> s_PointerClickHandler; // 0x20
	private static readonly ExecuteEvents.EventFunction<IInitializePotentialDragHandler> s_InitializePotentialDragHandler; // 0x28
	private static readonly ExecuteEvents.EventFunction<IBeginDragHandler> s_BeginDragHandler; // 0x30
	private static readonly ExecuteEvents.EventFunction<IDragHandler> s_DragHandler; // 0x38
	private static readonly ExecuteEvents.EventFunction<IEndDragHandler> s_EndDragHandler; // 0x40
	private static readonly ExecuteEvents.EventFunction<IDropHandler> s_DropHandler; // 0x48
	private static readonly ExecuteEvents.EventFunction<IScrollHandler> s_ScrollHandler; // 0x50
	private static readonly ExecuteEvents.EventFunction<IUpdateSelectedHandler> s_UpdateSelectedHandler; // 0x58
	private static readonly ExecuteEvents.EventFunction<ISelectHandler> s_SelectHandler; // 0x60
	private static readonly ExecuteEvents.EventFunction<IDeselectHandler> s_DeselectHandler; // 0x68
	private static readonly ExecuteEvents.EventFunction<IMoveHandler> s_MoveHandler; // 0x70
	private static readonly ExecuteEvents.EventFunction<ISubmitHandler> s_SubmitHandler; // 0x78
	private static readonly ExecuteEvents.EventFunction<ICancelHandler> s_CancelHandler; // 0x80
	private static readonly ObjectPool<List<IEventSystemHandler>> s_HandlerListPool; // 0x88
	private static readonly List<Transform> s_InternalTransformList; // 0x90
	[CompilerGeneratedAttribute] // RVA: 0xC7F204 Offset: 0xC7F204 VA: 0xC7F204
	private static ExecuteEvents.EventFunction<IPointerEnterHandler> <>f__mg$cache0; // 0x98
	[CompilerGeneratedAttribute] // RVA: 0xC7F214 Offset: 0xC7F214 VA: 0xC7F214
	private static ExecuteEvents.EventFunction<IPointerExitHandler> <>f__mg$cache1; // 0xA0
	[CompilerGeneratedAttribute] // RVA: 0xC7F224 Offset: 0xC7F224 VA: 0xC7F224
	private static ExecuteEvents.EventFunction<IPointerDownHandler> <>f__mg$cache2; // 0xA8
	[CompilerGeneratedAttribute] // RVA: 0xC7F234 Offset: 0xC7F234 VA: 0xC7F234
	private static ExecuteEvents.EventFunction<IPointerUpHandler> <>f__mg$cache3; // 0xB0
	[CompilerGeneratedAttribute] // RVA: 0xC7F244 Offset: 0xC7F244 VA: 0xC7F244
	private static ExecuteEvents.EventFunction<IPointerClickHandler> <>f__mg$cache4; // 0xB8
	[CompilerGeneratedAttribute] // RVA: 0xC7F254 Offset: 0xC7F254 VA: 0xC7F254
	private static ExecuteEvents.EventFunction<IInitializePotentialDragHandler> <>f__mg$cache5; // 0xC0
	[CompilerGeneratedAttribute] // RVA: 0xC7F264 Offset: 0xC7F264 VA: 0xC7F264
	private static ExecuteEvents.EventFunction<IBeginDragHandler> <>f__mg$cache6; // 0xC8
	[CompilerGeneratedAttribute] // RVA: 0xC7F274 Offset: 0xC7F274 VA: 0xC7F274
	private static ExecuteEvents.EventFunction<IDragHandler> <>f__mg$cache7; // 0xD0
	[CompilerGeneratedAttribute] // RVA: 0xC7F284 Offset: 0xC7F284 VA: 0xC7F284
	private static ExecuteEvents.EventFunction<IEndDragHandler> <>f__mg$cache8; // 0xD8
	[CompilerGeneratedAttribute] // RVA: 0xC7F294 Offset: 0xC7F294 VA: 0xC7F294
	private static ExecuteEvents.EventFunction<IDropHandler> <>f__mg$cache9; // 0xE0
	[CompilerGeneratedAttribute] // RVA: 0xC7F2A4 Offset: 0xC7F2A4 VA: 0xC7F2A4
	private static ExecuteEvents.EventFunction<IScrollHandler> <>f__mg$cacheA; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xC7F2B4 Offset: 0xC7F2B4 VA: 0xC7F2B4
	private static ExecuteEvents.EventFunction<IUpdateSelectedHandler> <>f__mg$cacheB; // 0xF0
	[CompilerGeneratedAttribute] // RVA: 0xC7F2C4 Offset: 0xC7F2C4 VA: 0xC7F2C4
	private static ExecuteEvents.EventFunction<ISelectHandler> <>f__mg$cacheC; // 0xF8
	[CompilerGeneratedAttribute] // RVA: 0xC7F2D4 Offset: 0xC7F2D4 VA: 0xC7F2D4
	private static ExecuteEvents.EventFunction<IDeselectHandler> <>f__mg$cacheD; // 0x100
	[CompilerGeneratedAttribute] // RVA: 0xC7F2E4 Offset: 0xC7F2E4 VA: 0xC7F2E4
	private static ExecuteEvents.EventFunction<IMoveHandler> <>f__mg$cacheE; // 0x108
	[CompilerGeneratedAttribute] // RVA: 0xC7F2F4 Offset: 0xC7F2F4 VA: 0xC7F2F4
	private static ExecuteEvents.EventFunction<ISubmitHandler> <>f__mg$cacheF; // 0x110
	[CompilerGeneratedAttribute] // RVA: 0xC7F304 Offset: 0xC7F304 VA: 0xC7F304
	private static ExecuteEvents.EventFunction<ICancelHandler> <>f__mg$cache10; // 0x118

	// Properties
	public static ExecuteEvents.EventFunction<IPointerEnterHandler> pointerEnterHandler { get; }
	public static ExecuteEvents.EventFunction<IPointerExitHandler> pointerExitHandler { get; }
	public static ExecuteEvents.EventFunction<IPointerDownHandler> pointerDownHandler { get; }
	public static ExecuteEvents.EventFunction<IPointerUpHandler> pointerUpHandler { get; }
	public static ExecuteEvents.EventFunction<IPointerClickHandler> pointerClickHandler { get; }
	public static ExecuteEvents.EventFunction<IInitializePotentialDragHandler> initializePotentialDrag { get; }
	public static ExecuteEvents.EventFunction<IBeginDragHandler> beginDragHandler { get; }
	public static ExecuteEvents.EventFunction<IDragHandler> dragHandler { get; }
	public static ExecuteEvents.EventFunction<IEndDragHandler> endDragHandler { get; }
	public static ExecuteEvents.EventFunction<IDropHandler> dropHandler { get; }
	public static ExecuteEvents.EventFunction<IScrollHandler> scrollHandler { get; }
	public static ExecuteEvents.EventFunction<IUpdateSelectedHandler> updateSelectedHandler { get; }
	public static ExecuteEvents.EventFunction<ISelectHandler> selectHandler { get; }
	public static ExecuteEvents.EventFunction<IDeselectHandler> deselectHandler { get; }
	public static ExecuteEvents.EventFunction<IMoveHandler> moveHandler { get; }
	public static ExecuteEvents.EventFunction<ISubmitHandler> submitHandler { get; }
	public static ExecuteEvents.EventFunction<ICancelHandler> cancelHandler { get; }

	// Methods

	// RVA: -1 Offset: -1
	public static T ValidateEventData<T>(BaseEventData data) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x219F584 Offset: 0x219F584 VA: 0x219F584
	|-ExecuteEvents.ValidateEventData<object>
	|-ExecuteEvents.ValidateEventData<AxisEventData>
	|-ExecuteEvents.ValidateEventData<PointerEventData>
	*/

	// RVA: 0xF0D7FC Offset: 0xF0D7FC VA: 0xF0D7FC
	private static void Execute(IPointerEnterHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0D8F4 Offset: 0xF0D8F4 VA: 0xF0D8F4
	private static void Execute(IPointerExitHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0D9EC Offset: 0xF0D9EC VA: 0xF0D9EC
	private static void Execute(IPointerDownHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0DAE4 Offset: 0xF0DAE4 VA: 0xF0DAE4
	private static void Execute(IPointerUpHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0DBDC Offset: 0xF0DBDC VA: 0xF0DBDC
	private static void Execute(IPointerClickHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0DCD4 Offset: 0xF0DCD4 VA: 0xF0DCD4
	private static void Execute(IInitializePotentialDragHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0DDCC Offset: 0xF0DDCC VA: 0xF0DDCC
	private static void Execute(IBeginDragHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0DEC4 Offset: 0xF0DEC4 VA: 0xF0DEC4
	private static void Execute(IDragHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0DFBC Offset: 0xF0DFBC VA: 0xF0DFBC
	private static void Execute(IEndDragHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0E0B4 Offset: 0xF0E0B4 VA: 0xF0E0B4
	private static void Execute(IDropHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0E1AC Offset: 0xF0E1AC VA: 0xF0E1AC
	private static void Execute(IScrollHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0E2A4 Offset: 0xF0E2A4 VA: 0xF0E2A4
	private static void Execute(IUpdateSelectedHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0E364 Offset: 0xF0E364 VA: 0xF0E364
	private static void Execute(ISelectHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0E424 Offset: 0xF0E424 VA: 0xF0E424
	private static void Execute(IDeselectHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0E4E4 Offset: 0xF0E4E4 VA: 0xF0E4E4
	private static void Execute(IMoveHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0E5DC Offset: 0xF0E5DC VA: 0xF0E5DC
	private static void Execute(ISubmitHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0E69C Offset: 0xF0E69C VA: 0xF0E69C
	private static void Execute(ICancelHandler handler, BaseEventData eventData) { }

	// RVA: 0xF0B764 Offset: 0xF0B764 VA: 0xF0B764
	public static ExecuteEvents.EventFunction<IPointerEnterHandler> get_pointerEnterHandler() { }

	// RVA: 0xF0B6F4 Offset: 0xF0B6F4 VA: 0xF0B6F4
	public static ExecuteEvents.EventFunction<IPointerExitHandler> get_pointerExitHandler() { }

	// RVA: 0xF0E75C Offset: 0xF0E75C VA: 0xF0E75C
	public static ExecuteEvents.EventFunction<IPointerDownHandler> get_pointerDownHandler() { }

	// RVA: 0xF0E7C4 Offset: 0xF0E7C4 VA: 0xF0E7C4
	public static ExecuteEvents.EventFunction<IPointerUpHandler> get_pointerUpHandler() { }

	// RVA: 0xF0E82C Offset: 0xF0E82C VA: 0xF0E82C
	public static ExecuteEvents.EventFunction<IPointerClickHandler> get_pointerClickHandler() { }

	// RVA: 0xF0E894 Offset: 0xF0E894 VA: 0xF0E894
	public static ExecuteEvents.EventFunction<IInitializePotentialDragHandler> get_initializePotentialDrag() { }

	// RVA: 0xF0E8FC Offset: 0xF0E8FC VA: 0xF0E8FC
	public static ExecuteEvents.EventFunction<IBeginDragHandler> get_beginDragHandler() { }

	// RVA: 0xF0E964 Offset: 0xF0E964 VA: 0xF0E964
	public static ExecuteEvents.EventFunction<IDragHandler> get_dragHandler() { }

	// RVA: 0xF0E9CC Offset: 0xF0E9CC VA: 0xF0E9CC
	public static ExecuteEvents.EventFunction<IEndDragHandler> get_endDragHandler() { }

	// RVA: 0xF0EA34 Offset: 0xF0EA34 VA: 0xF0EA34
	public static ExecuteEvents.EventFunction<IDropHandler> get_dropHandler() { }

	// RVA: 0xF0EA9C Offset: 0xF0EA9C VA: 0xF0EA9C
	public static ExecuteEvents.EventFunction<IScrollHandler> get_scrollHandler() { }

	// RVA: 0xF0EB04 Offset: 0xF0EB04 VA: 0xF0EB04
	public static ExecuteEvents.EventFunction<IUpdateSelectedHandler> get_updateSelectedHandler() { }

	// RVA: 0xF0C380 Offset: 0xF0C380 VA: 0xF0C380
	public static ExecuteEvents.EventFunction<ISelectHandler> get_selectHandler() { }

	// RVA: 0xF0C318 Offset: 0xF0C318 VA: 0xF0C318
	public static ExecuteEvents.EventFunction<IDeselectHandler> get_deselectHandler() { }

	// RVA: 0xF0EB6C Offset: 0xF0EB6C VA: 0xF0EB6C
	public static ExecuteEvents.EventFunction<IMoveHandler> get_moveHandler() { }

	// RVA: 0xF0EBD4 Offset: 0xF0EBD4 VA: 0xF0EBD4
	public static ExecuteEvents.EventFunction<ISubmitHandler> get_submitHandler() { }

	// RVA: 0xF0EC3C Offset: 0xF0EC3C VA: 0xF0EC3C
	public static ExecuteEvents.EventFunction<ICancelHandler> get_cancelHandler() { }

	// RVA: 0xF0ECA4 Offset: 0xF0ECA4 VA: 0xF0ECA4
	private static void GetEventChain(GameObject root, IList<Transform> eventChain) { }

	// RVA: -1 Offset: -1
	public static bool Execute<T>(GameObject target, BaseEventData eventData, ExecuteEvents.EventFunction<T> functor) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1F938B4 Offset: 0x1F938B4 VA: 0x1F938B4
	|-ExecuteEvents.Execute<IEventMessageRecieve>
	|-ExecuteEvents.Execute<object>
	|-ExecuteEvents.Execute<IBeginDragHandler>
	|-ExecuteEvents.Execute<ICancelHandler>
	|-ExecuteEvents.Execute<IDeselectHandler>
	|-ExecuteEvents.Execute<IDragHandler>
	|-ExecuteEvents.Execute<IDropHandler>
	|-ExecuteEvents.Execute<IEndDragHandler>
	|-ExecuteEvents.Execute<IInitializePotentialDragHandler>
	|-ExecuteEvents.Execute<IMoveHandler>
	|-ExecuteEvents.Execute<IPointerClickHandler>
	|-ExecuteEvents.Execute<IPointerDownHandler>
	|-ExecuteEvents.Execute<IPointerEnterHandler>
	|-ExecuteEvents.Execute<IPointerExitHandler>
	|-ExecuteEvents.Execute<IPointerUpHandler>
	|-ExecuteEvents.Execute<IScrollHandler>
	|-ExecuteEvents.Execute<ISelectHandler>
	|-ExecuteEvents.Execute<ISubmitHandler>
	|-ExecuteEvents.Execute<IUpdateSelectedHandler>
	*/

	// RVA: -1 Offset: -1
	public static GameObject ExecuteHierarchy<T>(GameObject root, BaseEventData eventData, ExecuteEvents.EventFunction<T> callbackFunction) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B89620 Offset: 0x2B89620 VA: 0x2B89620
	|-ExecuteEvents.ExecuteHierarchy<object>
	|-ExecuteEvents.ExecuteHierarchy<IDropHandler>
	|-ExecuteEvents.ExecuteHierarchy<IPointerDownHandler>
	|-ExecuteEvents.ExecuteHierarchy<IPointerExitHandler>
	|-ExecuteEvents.ExecuteHierarchy<IScrollHandler>
	*/

	// RVA: -1 Offset: -1
	private static bool ShouldSendToComponent<T>(Component component) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1F93D70 Offset: 0x1F93D70 VA: 0x1F93D70
	|-ExecuteEvents.ShouldSendToComponent<object>
	*/

	// RVA: -1 Offset: -1
	private static void GetEventList<T>(GameObject go, IList<IEventSystemHandler> results) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21895D0 Offset: 0x21895D0 VA: 0x21895D0
	|-ExecuteEvents.GetEventList<object>
	*/

	// RVA: -1 Offset: -1
	public static bool CanHandleEvent<T>(GameObject go) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1F937A4 Offset: 0x1F937A4 VA: 0x1F937A4
	|-ExecuteEvents.CanHandleEvent<object>
	|-ExecuteEvents.CanHandleEvent<IBeginDragHandler>
	|-ExecuteEvents.CanHandleEvent<ICancelHandler>
	|-ExecuteEvents.CanHandleEvent<IDeselectHandler>
	|-ExecuteEvents.CanHandleEvent<IDragHandler>
	|-ExecuteEvents.CanHandleEvent<IDropHandler>
	|-ExecuteEvents.CanHandleEvent<IEndDragHandler>
	|-ExecuteEvents.CanHandleEvent<IInitializePotentialDragHandler>
	|-ExecuteEvents.CanHandleEvent<IPointerClickHandler>
	|-ExecuteEvents.CanHandleEvent<IPointerDownHandler>
	|-ExecuteEvents.CanHandleEvent<IPointerEnterHandler>
	|-ExecuteEvents.CanHandleEvent<IPointerExitHandler>
	|-ExecuteEvents.CanHandleEvent<IPointerUpHandler>
	|-ExecuteEvents.CanHandleEvent<IScrollHandler>
	|-ExecuteEvents.CanHandleEvent<ISubmitHandler>
	|-ExecuteEvents.CanHandleEvent<IUpdateSelectedHandler>
	*/

	// RVA: -1 Offset: -1
	public static GameObject GetEventHandler<T>(GameObject root) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B897BC Offset: 0x2B897BC VA: 0x2B897BC
	|-ExecuteEvents.GetEventHandler<object>
	|-ExecuteEvents.GetEventHandler<IDragHandler>
	|-ExecuteEvents.GetEventHandler<IPointerClickHandler>
	|-ExecuteEvents.GetEventHandler<IScrollHandler>
	|-ExecuteEvents.GetEventHandler<ISelectHandler>
	*/

	// RVA: 0xF0EE74 Offset: 0xF0EE74 VA: 0xF0EE74
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC815F0 Offset: 0xC815F0 VA: 0xC815F0
	// RVA: 0xF0F540 Offset: 0xF0F540 VA: 0xF0F540
	private static void <s_HandlerListPool>m__0(List<IEventSystemHandler> l) { }
}

// Namespace: 
public sealed class ExecuteEvents.EventFunction<T1> : MulticastDelegate // TypeDefIndex: 3021
{
	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(object object, IntPtr method) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2757DE4 Offset: 0x2757DE4 VA: 0x2757DE4
	|-ExecuteEvents.EventFunction<IEventMessageRecieve>..ctor
	|-ExecuteEvents.EventFunction<object>..ctor
	|-ExecuteEvents.EventFunction<IBeginDragHandler>..ctor
	|-ExecuteEvents.EventFunction<ICancelHandler>..ctor
	|-ExecuteEvents.EventFunction<IDeselectHandler>..ctor
	|-ExecuteEvents.EventFunction<IDragHandler>..ctor
	|-ExecuteEvents.EventFunction<IDropHandler>..ctor
	|-ExecuteEvents.EventFunction<IEndDragHandler>..ctor
	|-ExecuteEvents.EventFunction<IInitializePotentialDragHandler>..ctor
	|-ExecuteEvents.EventFunction<IMoveHandler>..ctor
	|-ExecuteEvents.EventFunction<IPointerClickHandler>..ctor
	|-ExecuteEvents.EventFunction<IPointerDownHandler>..ctor
	|-ExecuteEvents.EventFunction<IPointerEnterHandler>..ctor
	|-ExecuteEvents.EventFunction<IPointerExitHandler>..ctor
	|-ExecuteEvents.EventFunction<IPointerUpHandler>..ctor
	|-ExecuteEvents.EventFunction<IScrollHandler>..ctor
	|-ExecuteEvents.EventFunction<ISelectHandler>..ctor
	|-ExecuteEvents.EventFunction<ISubmitHandler>..ctor
	|-ExecuteEvents.EventFunction<IUpdateSelectedHandler>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 11
	public virtual void Invoke(T1 handler, BaseEventData eventData) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2757DF4 Offset: 0x2757DF4 VA: 0x2757DF4
	|-ExecuteEvents.EventFunction<object>.Invoke
	*/

	// RVA: -1 Offset: -1 Slot: 12
	public virtual IAsyncResult BeginInvoke(T1 handler, BaseEventData eventData, AsyncCallback callback, object object) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27581B4 Offset: 0x27581B4 VA: 0x27581B4
	|-ExecuteEvents.EventFunction<object>.BeginInvoke
	*/

	// RVA: -1 Offset: -1 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27581E4 Offset: 0x27581E4 VA: 0x27581E4
	|-ExecuteEvents.EventFunction<object>.EndInvoke
	*/
}

// Namespace: UnityEngine.EventSystems
public enum MoveDirection // TypeDefIndex: 3022
{
	// Fields
	public int value__; // 0x0
	public const MoveDirection Left = 0;
	public const MoveDirection Up = 1;
	public const MoveDirection Right = 2;
	public const MoveDirection Down = 3;
	public const MoveDirection None = 4;
}

// Namespace: UnityEngine.EventSystems
public struct RaycastResult // TypeDefIndex: 3023
{
	// Fields
	private GameObject m_GameObject; // 0x0
	public BaseRaycaster module; // 0x8
	public float distance; // 0x10
	public float index; // 0x14
	public int depth; // 0x18
	public int sortingLayer; // 0x1C
	public int sortingOrder; // 0x20
	public Vector3 worldPosition; // 0x24
	public Vector3 worldNormal; // 0x30
	public Vector2 screenPosition; // 0x3C
	internal int displayIndex; // 0x44

	// Properties
	public GameObject gameObject { get; set; }
	public bool isValid { get; }

	// Methods

	// RVA: 0xBB74C0 Offset: 0xBB74C0 VA: 0xBB74C0
	public GameObject get_gameObject() { }

	// RVA: 0xBB74C8 Offset: 0xBB74C8 VA: 0xBB74C8
	public void set_gameObject(GameObject value) { }

	// RVA: 0xBB74D0 Offset: 0xBB74D0 VA: 0xBB74D0
	public bool get_isValid() { }

	// RVA: 0xBB74D8 Offset: 0xBB74D8 VA: 0xBB74D8
	public void Clear() { }

	// RVA: 0xBB74E0 Offset: 0xBB74E0 VA: 0xBB74E0 Slot: 3
	public override string ToString() { }
}

// Namespace: UnityEngine.EventSystems
internal static class RaycasterManager // TypeDefIndex: 3024
{
	// Fields
	private static readonly List<BaseRaycaster> s_Raycasters; // 0x0

	// Methods

	// RVA: 0xF0BDFC Offset: 0xF0BDFC VA: 0xF0BDFC
	public static void AddRaycaster(BaseRaycaster baseRaycaster) { }

	// RVA: 0xF0CA3C Offset: 0xF0CA3C VA: 0xF0CA3C
	public static List<BaseRaycaster> GetRaycasters() { }

	// RVA: 0xF0BF50 Offset: 0xF0BF50 VA: 0xF0BF50
	public static void RemoveRaycasters(BaseRaycaster baseRaycaster) { }

	// RVA: 0xF1347C Offset: 0xF1347C VA: 0xF1347C
	private static void .cctor() { }
}

// Namespace: UnityEngine.EventSystems
public abstract class UIBehaviour : MonoBehaviour // TypeDefIndex: 3025
{
	// Methods

	// RVA: 0xF0A79C Offset: 0xF0A79C VA: 0xF0A79C
	protected void .ctor() { }

	// RVA: 0xF16074 Offset: 0xF16074 VA: 0xF16074 Slot: 4
	protected virtual void Awake() { }

	// RVA: 0xF0ABB4 Offset: 0xF0ABB4 VA: 0xF0ABB4 Slot: 5
	protected virtual void OnEnable() { }

	// RVA: 0xF16078 Offset: 0xF16078 VA: 0xF16078 Slot: 6
	protected virtual void Start() { }

	// RVA: 0xF0AD48 Offset: 0xF0AD48 VA: 0xF0AD48 Slot: 7
	protected virtual void OnDisable() { }

	// RVA: 0xF1607C Offset: 0xF1607C VA: 0xF1607C Slot: 8
	protected virtual void OnDestroy() { }

	// RVA: 0xF16080 Offset: 0xF16080 VA: 0xF16080 Slot: 9
	public virtual bool IsActive() { }

	// RVA: 0xF16088 Offset: 0xF16088 VA: 0xF16088 Slot: 10
	protected virtual void OnRectTransformDimensionsChange() { }

	// RVA: 0xF1608C Offset: 0xF1608C VA: 0xF1608C Slot: 11
	protected virtual void OnBeforeTransformParentChanged() { }

	// RVA: 0xF16090 Offset: 0xF16090 VA: 0xF16090 Slot: 12
	protected virtual void OnTransformParentChanged() { }

	// RVA: 0xF16094 Offset: 0xF16094 VA: 0xF16094 Slot: 13
	protected virtual void OnDidApplyAnimationProperties() { }

	// RVA: 0xF16098 Offset: 0xF16098 VA: 0xF16098 Slot: 14
	protected virtual void OnCanvasGroupChanged() { }

	// RVA: 0xF1609C Offset: 0xF1609C VA: 0xF1609C Slot: 15
	protected virtual void OnCanvasHierarchyChanged() { }

	// RVA: 0xF160A0 Offset: 0xF160A0 VA: 0xF160A0 Slot: 16
	public bool IsDestroyed() { }
}

// Namespace: UnityEngine.EventSystems
public class AxisEventData : BaseEventData // TypeDefIndex: 3026
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC7F314 Offset: 0xC7F314 VA: 0xC7F314
	[DebuggerBrowsableAttribute] // RVA: 0xC7F314 Offset: 0xC7F314 VA: 0xC7F314
	private Vector2 <moveVector>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC7F350 Offset: 0xC7F350 VA: 0xC7F350
	[DebuggerBrowsableAttribute] // RVA: 0xC7F350 Offset: 0xC7F350 VA: 0xC7F350
	private MoveDirection <moveDir>k__BackingField; // 0x28

	// Properties
	public Vector2 moveVector { get; set; }
	public MoveDirection moveDir { get; set; }

	// Methods

	// RVA: 0xF0A484 Offset: 0xF0A484 VA: 0xF0A484
	public void .ctor(EventSystem eventSystem) { }

	[CompilerGeneratedAttribute] // RVA: 0xC81600 Offset: 0xC81600 VA: 0xC81600
	// RVA: 0xF0A550 Offset: 0xF0A550 VA: 0xF0A550
	public Vector2 get_moveVector() { }

	[CompilerGeneratedAttribute] // RVA: 0xC81610 Offset: 0xC81610 VA: 0xC81610
	// RVA: 0xF0A540 Offset: 0xF0A540 VA: 0xF0A540
	public void set_moveVector(Vector2 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC81620 Offset: 0xC81620 VA: 0xC81620
	// RVA: 0xF0A558 Offset: 0xF0A558 VA: 0xF0A558
	public MoveDirection get_moveDir() { }

	[CompilerGeneratedAttribute] // RVA: 0xC81630 Offset: 0xC81630 VA: 0xC81630
	// RVA: 0xF0A548 Offset: 0xF0A548 VA: 0xF0A548
	public void set_moveDir(MoveDirection value) { }
}

// Namespace: UnityEngine.EventSystems
public abstract class AbstractEventData // TypeDefIndex: 3027
{
	// Fields
	protected bool m_Used; // 0x10

	// Properties
