	public abstract void RetrieveProducts(ReadOnlyCollection<ProductDefinition> products);

	// RVA: -1 Offset: -1 Slot: 10
	public abstract void Purchase(ProductDefinition product, string developerPayload);

	// RVA: -1 Offset: -1 Slot: 11
	public abstract void FinishTransaction(ProductDefinition product, string transactionId);
}

// Namespace: UnityEngine.Purchasing.Extension
public interface ICatalogProvider // TypeDefIndex: 2987
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void FetchProducts(Action<HashSet<ProductDefinition>> callback);
}

// Namespace: UnityEngine.Purchasing.Extension
public interface IPurchasingBinder // TypeDefIndex: 2988
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void RegisterStore(string name, IStore a);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void RegisterExtension<T>(T instance);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-IPurchasingBinder.RegisterExtension<IGooglePlayStoreExtensions>
	|-IPurchasingBinder.RegisterExtension<object>
	|-IPurchasingBinder.RegisterExtension<IAmazonExtensions>
	|-IPurchasingBinder.RegisterExtension<ISamsungAppsExtensions>
	|-IPurchasingBinder.RegisterExtension<IUDPExtensions>
	*/

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void RegisterConfiguration<T>(T instance);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-IPurchasingBinder.RegisterConfiguration<IGooglePlayConfiguration>
	|-IPurchasingBinder.RegisterConfiguration<object>
	|-IPurchasingBinder.RegisterConfiguration<IAmazonConfiguration>
	|-IPurchasingBinder.RegisterConfiguration<ISamsungAppsConfiguration>
	*/

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void SetCatalogProvider(ICatalogProvider provider);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void SetCatalogProviderFunction(Action<Action<HashSet<ProductDefinition>>> func);
}

// Namespace: UnityEngine.Purchasing.Extension
public interface IPurchasingModule // TypeDefIndex: 2989
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void Configure(IPurchasingBinder binder);
}

// Namespace: UnityEngine.Purchasing.Extension
public interface IStore // TypeDefIndex: 2990
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void Initialize(IStoreCallback callback);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void RetrieveProducts(ReadOnlyCollection<ProductDefinition> products);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void Purchase(ProductDefinition product, string developerPayload);

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void FinishTransaction(ProductDefinition product, string transactionId);
}

// Namespace: UnityEngine.Purchasing.Extension
public interface IStoreCallback // TypeDefIndex: 2991
{
	// Properties
	public abstract ProductCollection products { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract ProductCollection get_products();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void OnSetupFailed(InitializationFailureReason reason);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void OnProductsRetrieved(List<ProductDescription> products);

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void OnPurchaseSucceeded(string storeSpecificId, string receipt, string transactionIdentifier);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void OnPurchaseFailed(PurchaseFailureDescription desc);
}

// Namespace: UnityEngine.Purchasing.Extension
public interface IStoreConfiguration // TypeDefIndex: 2992
{}

// Namespace: UnityEngine.Purchasing
public interface IStoreExtension // TypeDefIndex: 2993
{}

// Namespace: UnityEngine.Purchasing.Extension
public class ProductDescription // TypeDefIndex: 2994
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC118EC Offset: 0xC118EC VA: 0xC118EC
	[DebuggerBrowsableAttribute] // RVA: 0xC118EC Offset: 0xC118EC VA: 0xC118EC
	private string <storeSpecificId>k__BackingField; // 0x10
	public ProductType type; // 0x18
	[DebuggerBrowsableAttribute] // RVA: 0xC11928 Offset: 0xC11928 VA: 0xC11928
	[CompilerGeneratedAttribute] // RVA: 0xC11928 Offset: 0xC11928 VA: 0xC11928
	private ProductMetadata <metadata>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC11964 Offset: 0xC11964 VA: 0xC11964
	[DebuggerBrowsableAttribute] // RVA: 0xC11964 Offset: 0xC11964 VA: 0xC11964
	private string <receipt>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC119A0 Offset: 0xC119A0 VA: 0xC119A0
	[DebuggerBrowsableAttribute] // RVA: 0xC119A0 Offset: 0xC119A0 VA: 0xC119A0
	private string <transactionId>k__BackingField; // 0x30

	// Properties
	public string storeSpecificId { get; set; }
	public ProductMetadata metadata { get; set; }
	public string receipt { get; set; }
	public string transactionId { get; set; }

	// Methods

	// RVA: 0x2B49108 Offset: 0x2B49108 VA: 0x2B49108
	public void .ctor(string id, ProductMetadata metadata, string receipt, string transactionId) { }

	// RVA: 0x2B49178 Offset: 0x2B49178 VA: 0x2B49178
	public void .ctor(string id, ProductMetadata metadata, string receipt, string transactionId, ProductType type) { }

	// RVA: 0x2B491D0 Offset: 0x2B491D0 VA: 0x2B491D0
	public void .ctor(string id, ProductMetadata metadata) { }

	[CompilerGeneratedAttribute] // RVA: 0xC11CAC Offset: 0xC11CAC VA: 0xC11CAC
	// RVA: 0x2B49210 Offset: 0x2B49210 VA: 0x2B49210
	public string get_storeSpecificId() { }

	[CompilerGeneratedAttribute] // RVA: 0xC11CBC Offset: 0xC11CBC VA: 0xC11CBC
	// RVA: 0x2B49158 Offset: 0x2B49158 VA: 0x2B49158
	private void set_storeSpecificId(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC11CCC Offset: 0xC11CCC VA: 0xC11CCC
	// RVA: 0x2B49218 Offset: 0x2B49218 VA: 0x2B49218
	public ProductMetadata get_metadata() { }

	[CompilerGeneratedAttribute] // RVA: 0xC11CDC Offset: 0xC11CDC VA: 0xC11CDC
	// RVA: 0x2B49160 Offset: 0x2B49160 VA: 0x2B49160
	private void set_metadata(ProductMetadata value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC11CEC Offset: 0xC11CEC VA: 0xC11CEC
	// RVA: 0x2B49220 Offset: 0x2B49220 VA: 0x2B49220
	public string get_receipt() { }

	[CompilerGeneratedAttribute] // RVA: 0xC11CFC Offset: 0xC11CFC VA: 0xC11CFC
	// RVA: 0x2B49168 Offset: 0x2B49168 VA: 0x2B49168
	private void set_receipt(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC11D0C Offset: 0xC11D0C VA: 0xC11D0C
	// RVA: 0x2B49228 Offset: 0x2B49228 VA: 0x2B49228
	public string get_transactionId() { }

	[CompilerGeneratedAttribute] // RVA: 0xC11D1C Offset: 0xC11D1C VA: 0xC11D1C
	// RVA: 0x2B49170 Offset: 0x2B49170 VA: 0x2B49170
	public void set_transactionId(string value) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2995
{}

// Namespace: UnityEngine.EventSystems
[FlagsAttribute] // RVA: 0xC11F14 Offset: 0xC11F14 VA: 0xC11F14
public enum EventHandle // TypeDefIndex: 2996
{
	// Fields
	public int value__; // 0x0
	public const EventHandle Unused = 0;
	public const EventHandle Used = 1;
}

// Namespace: UnityEngine.EventSystems
public interface IEventSystemHandler // TypeDefIndex: 2997
{}

// Namespace: UnityEngine.EventSystems
public interface IPointerEnterHandler : IEventSystemHandler // TypeDefIndex: 2998
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnPointerEnter(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IPointerExitHandler : IEventSystemHandler // TypeDefIndex: 2999
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnPointerExit(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IPointerDownHandler : IEventSystemHandler // TypeDefIndex: 3000
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnPointerDown(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IPointerUpHandler : IEventSystemHandler // TypeDefIndex: 3001
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnPointerUp(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IPointerClickHandler : IEventSystemHandler // TypeDefIndex: 3002
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnPointerClick(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IBeginDragHandler : IEventSystemHandler // TypeDefIndex: 3003
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnBeginDrag(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IInitializePotentialDragHandler : IEventSystemHandler // TypeDefIndex: 3004
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnInitializePotentialDrag(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IDragHandler : IEventSystemHandler // TypeDefIndex: 3005
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnDrag(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IEndDragHandler : IEventSystemHandler // TypeDefIndex: 3006
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnEndDrag(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IDropHandler : IEventSystemHandler // TypeDefIndex: 3007
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnDrop(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IScrollHandler : IEventSystemHandler // TypeDefIndex: 3008
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnScroll(PointerEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IUpdateSelectedHandler : IEventSystemHandler // TypeDefIndex: 3009
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnUpdateSelected(BaseEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface ISelectHandler : IEventSystemHandler // TypeDefIndex: 3010
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnSelect(BaseEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IDeselectHandler : IEventSystemHandler // TypeDefIndex: 3011
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnDeselect(BaseEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface IMoveHandler : IEventSystemHandler // TypeDefIndex: 3012
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnMove(AxisEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface ISubmitHandler : IEventSystemHandler // TypeDefIndex: 3013
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnSubmit(BaseEventData eventData);
}

// Namespace: UnityEngine.EventSystems
public interface ICancelHandler : IEventSystemHandler // TypeDefIndex: 3014
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnCancel(BaseEventData eventData);
}

// Namespace: UnityEngine.EventSystems
[AddComponentMenu] // RVA: 0xC11F24 Offset: 0xC11F24 VA: 0xC11F24
public class EventSystem : UIBehaviour // TypeDefIndex: 3015
{
	// Fields
	private List<BaseInputModule> m_SystemInputModules; // 0x18
	private BaseInputModule m_CurrentInputModule; // 0x20
	private static List<EventSystem> m_EventSystems; // 0x0
	[SerializeField] // RVA: 0xC12FC0 Offset: 0xC12FC0 VA: 0xC12FC0
	[FormerlySerializedAsAttribute] // RVA: 0xC12FC0 Offset: 0xC12FC0 VA: 0xC12FC0
	private GameObject m_FirstSelected; // 0x28
	[SerializeField] // RVA: 0xC1300C Offset: 0xC1300C VA: 0xC1300C
	private bool m_sendNavigationEvents; // 0x30
	[SerializeField] // RVA: 0xC1301C Offset: 0xC1301C VA: 0xC1301C
	private int m_DragThreshold; // 0x34
	private GameObject m_CurrentSelected; // 0x38
	private bool m_HasFocus; // 0x40
	private bool m_SelectionGuard; // 0x41
	private BaseEventData m_DummyData; // 0x48
	private static readonly Comparison<RaycastResult> s_RaycastComparer; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC1302C Offset: 0xC1302C VA: 0xC1302C
	private static Comparison<RaycastResult> <>f__mg$cache0; // 0x10

	// Properties
	public static EventSystem current { get; set; }
	public bool sendNavigationEvents { get; set; }
	public int pixelDragThreshold { get; set; }
	public BaseInputModule currentInputModule { get; }
	public GameObject firstSelectedGameObject { get; set; }
	public GameObject currentSelectedGameObject { get; }
	[ObsoleteAttribute] // RVA: 0xC15EF8 Offset: 0xC15EF8 VA: 0xC15EF8
	public GameObject lastSelectedGameObject { get; }
	public bool isFocused { get; }
	public bool alreadySelecting { get; }
	private BaseEventData baseEventDataCache { get; }

	// Methods

	// RVA: 0x1F716CC Offset: 0x1F716CC VA: 0x1F716CC
	protected void .ctor() { }

	// RVA: 0x1F71750 Offset: 0x1F71750 VA: 0x1F71750
	public static EventSystem get_current() { }

	// RVA: 0x1F71830 Offset: 0x1F71830 VA: 0x1F71830
	public static void set_current(EventSystem value) { }

	// RVA: 0x1F71958 Offset: 0x1F71958 VA: 0x1F71958
	public bool get_sendNavigationEvents() { }

	// RVA: 0x1F71960 Offset: 0x1F71960 VA: 0x1F71960
	public void set_sendNavigationEvents(bool value) { }

	// RVA: 0x1F7196C Offset: 0x1F7196C VA: 0x1F7196C
	public int get_pixelDragThreshold() { }

	// RVA: 0x1F71974 Offset: 0x1F71974 VA: 0x1F71974
	public void set_pixelDragThreshold(int value) { }

	// RVA: 0x1F6FC18 Offset: 0x1F6FC18 VA: 0x1F6FC18
	public BaseInputModule get_currentInputModule() { }

	// RVA: 0x1F7197C Offset: 0x1F7197C VA: 0x1F7197C
	public GameObject get_firstSelectedGameObject() { }

	// RVA: 0x1F71984 Offset: 0x1F71984 VA: 0x1F71984
	public void set_firstSelectedGameObject(GameObject value) { }

	// RVA: 0x1F6FC4C Offset: 0x1F6FC4C VA: 0x1F6FC4C
	public GameObject get_currentSelectedGameObject() { }

	// RVA: 0x1F7198C Offset: 0x1F7198C VA: 0x1F7198C
	public GameObject get_lastSelectedGameObject() { }

	// RVA: 0x1F71994 Offset: 0x1F71994 VA: 0x1F71994
	public bool get_isFocused() { }

	// RVA: 0x1F70244 Offset: 0x1F70244 VA: 0x1F70244
	public void UpdateModules() { }

	// RVA: 0x1F7199C Offset: 0x1F7199C VA: 0x1F7199C
	public bool get_alreadySelecting() { }

	// RVA: 0x1F6FC98 Offset: 0x1F6FC98 VA: 0x1F6FC98
	public void SetSelectedGameObject(GameObject selected, BaseEventData pointer) { }

	// RVA: 0x1F71A74 Offset: 0x1F71A74 VA: 0x1F71A74
	private BaseEventData get_baseEventDataCache() { }

	// RVA: 0x1F71AE4 Offset: 0x1F71AE4 VA: 0x1F71AE4
	public void SetSelectedGameObject(GameObject selected) { }

	// RVA: 0x1F71B14 Offset: 0x1F71B14 VA: 0x1F71B14
	private static int RaycastComparer(RaycastResult lhs, RaycastResult rhs) { }

	// RVA: 0x1F71F08 Offset: 0x1F71F08 VA: 0x1F71F08
	public void RaycastAll(PointerEventData eventData, List<RaycastResult> raycastResults) { }

	// RVA: 0x1F72130 Offset: 0x1F72130 VA: 0x1F72130
	public bool IsPointerOverGameObject() { }

	// RVA: 0x1F72138 Offset: 0x1F72138 VA: 0x1F72138
	public bool IsPointerOverGameObject(int pointerId) { }

	// RVA: 0x1F721F4 Offset: 0x1F721F4 VA: 0x1F721F4 Slot: 5
	protected override void OnEnable() { }

	// RVA: 0x1F72280 Offset: 0x1F72280 VA: 0x1F72280 Slot: 7
	protected override void OnDisable() { }

	// RVA: 0x1F7236C Offset: 0x1F7236C VA: 0x1F7236C
	private void TickModules() { }

	// RVA: 0x1F72498 Offset: 0x1F72498 VA: 0x1F72498 Slot: 17
	protected virtual void OnApplicationFocus(bool hasFocus) { }

	// RVA: 0x1F724A4 Offset: 0x1F724A4 VA: 0x1F724A4 Slot: 18
	protected virtual void Update() { }

	// RVA: 0x1F72784 Offset: 0x1F72784 VA: 0x1F72784
	private void ChangeEventModule(BaseInputModule module) { }

	// RVA: 0x1F728AC Offset: 0x1F728AC VA: 0x1F728AC Slot: 3
	public override string ToString() { }

	// RVA: 0x1F72A64 Offset: 0x1F72A64 VA: 0x1F72A64
	private static void .cctor() { }
}

// Namespace: UnityEngine.EventSystems
[AddComponentMenu] // RVA: 0xC11F5C Offset: 0xC11F5C VA: 0xC11F5C
public class EventTrigger : MonoBehaviour, IPointerEnterHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler, IPointerClickHandler, IInitializePotentialDragHandler, IBeginDragHandler, IDragHandler, IEndDragHandler, IDropHandler, IScrollHandler, IUpdateSelectedHandler, ISelectHandler, IDeselectHandler, IMoveHandler, ISubmitHandler, ICancelHandler, IEventSystemHandler // TypeDefIndex: 3016
{
	// Fields
	[FormerlySerializedAsAttribute] // RVA: 0xC1303C Offset: 0xC1303C VA: 0xC1303C
	[SerializeField] // RVA: 0xC1303C Offset: 0xC1303C VA: 0xC1303C
	private List<EventTrigger.Entry> m_Delegates; // 0x18
	[EditorBrowsableAttribute] // RVA: 0xC13088 Offset: 0xC13088 VA: 0xC13088
	[ObsoleteAttribute] // RVA: 0xC13088 Offset: 0xC13088 VA: 0xC13088
	public List<EventTrigger.Entry> delegates; // 0x20

	// Properties
	public List<EventTrigger.Entry> triggers { get; set; }

	// Methods

	// RVA: 0x1F72B34 Offset: 0x1F72B34 VA: 0x1F72B34
	protected void .ctor() { }

	// RVA: 0x1F72B3C Offset: 0x1F72B3C VA: 0x1F72B3C
	public List<EventTrigger.Entry> get_triggers() { }

	// RVA: 0x1F72BB0 Offset: 0x1F72BB0 VA: 0x1F72BB0
	public void set_triggers(List<EventTrigger.Entry> value) { }

	// RVA: 0x1F72BB8 Offset: 0x1F72BB8 VA: 0x1F72BB8
	private void Execute(EventTriggerType id, BaseEventData eventData) { }

	// RVA: 0x1F72CBC Offset: 0x1F72CBC VA: 0x1F72CBC Slot: 21
	public virtual void OnPointerEnter(PointerEventData eventData) { }

	// RVA: 0x1F72CCC Offset: 0x1F72CCC VA: 0x1F72CCC Slot: 22
	public virtual void OnPointerExit(PointerEventData eventData) { }

	// RVA: 0x1F72CDC Offset: 0x1F72CDC VA: 0x1F72CDC Slot: 23
	public virtual void OnDrag(PointerEventData eventData) { }

	// RVA: 0x1F72CEC Offset: 0x1F72CEC VA: 0x1F72CEC Slot: 24
	public virtual void OnDrop(PointerEventData eventData) { }

	// RVA: 0x1F72CFC Offset: 0x1F72CFC VA: 0x1F72CFC Slot: 25
	public virtual void OnPointerDown(PointerEventData eventData) { }

	// RVA: 0x1F72D0C Offset: 0x1F72D0C VA: 0x1F72D0C Slot: 26
	public virtual void OnPointerUp(PointerEventData eventData) { }

	// RVA: 0x1F72D1C Offset: 0x1F72D1C VA: 0x1F72D1C Slot: 27
	public virtual void OnPointerClick(PointerEventData eventData) { }

	// RVA: 0x1F72D2C Offset: 0x1F72D2C VA: 0x1F72D2C Slot: 28
	public virtual void OnSelect(BaseEventData eventData) { }

	// RVA: 0x1F72D3C Offset: 0x1F72D3C VA: 0x1F72D3C Slot: 29
	public virtual void OnDeselect(BaseEventData eventData) { }

	// RVA: 0x1F72D4C Offset: 0x1F72D4C VA: 0x1F72D4C Slot: 30
	public virtual void OnScroll(PointerEventData eventData) { }

	// RVA: 0x1F72D5C Offset: 0x1F72D5C VA: 0x1F72D5C Slot: 31
	public virtual void OnMove(AxisEventData eventData) { }

	// RVA: 0x1F72D6C Offset: 0x1F72D6C VA: 0x1F72D6C Slot: 32
	public virtual void OnUpdateSelected(BaseEventData eventData) { }

	// RVA: 0x1F72D7C Offset: 0x1F72D7C VA: 0x1F72D7C Slot: 33
	public virtual void OnInitializePotentialDrag(PointerEventData eventData) { }

	// RVA: 0x1F72D8C Offset: 0x1F72D8C VA: 0x1F72D8C Slot: 34
	public virtual void OnBeginDrag(PointerEventData eventData) { }

	// RVA: 0x1F72D9C Offset: 0x1F72D9C VA: 0x1F72D9C Slot: 35
	public virtual void OnEndDrag(PointerEventData eventData) { }

	// RVA: 0x1F72DAC Offset: 0x1F72DAC VA: 0x1F72DAC Slot: 36
	public virtual void OnSubmit(BaseEventData eventData) { }

	// RVA: 0x1F72DBC Offset: 0x1F72DBC VA: 0x1F72DBC Slot: 37
	public virtual void OnCancel(BaseEventData eventData) { }
}

// Namespace: 
[Serializable]
public class EventTrigger.TriggerEvent : UnityEvent<BaseEventData> // TypeDefIndex: 3017
{
	// Methods

	// RVA: 0x1F72E38 Offset: 0x1F72E38 VA: 0x1F72E38
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class EventTrigger.Entry // TypeDefIndex: 3018
{
	// Fields
	public EventTriggerType eventID; // 0x10
	public EventTrigger.TriggerEvent callback; // 0x18

	// Methods

	// RVA: 0x1F72DCC Offset: 0x1F72DCC VA: 0x1F72DCC
	public void .ctor() { }
}

// Namespace: UnityEngine.EventSystems
public enum EventTriggerType // TypeDefIndex: 3019
{
	// Fields
	public int value__; // 0x0
	public const EventTriggerType PointerEnter = 0;
	public const EventTriggerType PointerExit = 1;
	public const EventTriggerType PointerDown = 2;
	public const EventTriggerType PointerUp = 3;
	public const EventTriggerType PointerClick = 4;
	public const EventTriggerType Drag = 5;
	public const EventTriggerType Drop = 6;
	public const EventTriggerType Scroll = 7;
	public const EventTriggerType UpdateSelected = 8;
	public const EventTriggerType Select = 9;
	public const EventTriggerType Deselect = 10;
	public const EventTriggerType Move = 11;
	public const EventTriggerType InitializePotentialDrag = 12;
	public const EventTriggerType BeginDrag = 13;
	public const EventTriggerType EndDrag = 14;
	public const EventTriggerType Submit = 15;
	public const EventTriggerType Cancel = 16;
}

// Namespace: UnityEngine.EventSystems
public static class ExecuteEvents // TypeDefIndex: 3020
{
	// Fields
	private static readonly ExecuteEvents.EventFunction<IPointerEnterHandler> s_PointerEnterHandler; // 0x0
	private static readonly ExecuteEvents.EventFunction<IPointerExitHandler> s_PointerExitHandler; // 0x8
	private static readonly ExecuteEvents.EventFunction<IPointerDownHandler> s_PointerDownHandler; // 0x10
	private static readonly ExecuteEvents.EventFunction<IPointerUpHandler> s_PointerUpHandler; // 0x18
	private static readonly ExecuteEvents.EventFunction<IPointerClickHandler> s_PointerClickHandler; // 0x20
	private static readonly ExecuteEvents.EventFunction<IInitializePotentialDragHandler> s_InitializePotentialDragHandler; // 0x28
	private static readonly ExecuteEvents.EventFunction<IBeginDragHandler> s_BeginDragHandler; // 0x30
	private static readonly ExecuteEvents.EventFunction<IDragHandler> s_DragHandler; // 0x38
	private static readonly ExecuteEvents.EventFunction<IEndDragHandler> s_EndDragHandler; // 0x40
	private static readonly ExecuteEvents.EventFunction<IDropHandler> s_DropHandler; // 0x48
	private static readonly ExecuteEvents.EventFunction<IScrollHandler> s_ScrollHandler; // 0x50
	private static readonly ExecuteEvents.EventFunction<IUpdateSelectedHandler> s_UpdateSelectedHandler; // 0x58
	private static readonly ExecuteEvents.EventFunction<ISelectHandler> s_SelectHandler; // 0x60
	private static readonly ExecuteEvents.EventFunction<IDeselectHandler> s_DeselectHandler; // 0x68
	private static readonly ExecuteEvents.EventFunction<IMoveHandler> s_MoveHandler; // 0x70
	private static readonly ExecuteEvents.EventFunction<ISubmitHandler> s_SubmitHandler; // 0x78
	private static readonly ExecuteEvents.EventFunction<ICancelHandler> s_CancelHandler; // 0x80
	private static readonly ObjectPool<List<IEventSystemHandler>> s_HandlerListPool; // 0x88
	private static readonly List<Transform> s_InternalTransformList; // 0x90
	[CompilerGeneratedAttribute] // RVA: 0xC130DC Offset: 0xC130DC VA: 0xC130DC
	private static ExecuteEvents.EventFunction<IPointerEnterHandler> <>f__mg$cache0; // 0x98
	[CompilerGeneratedAttribute] // RVA: 0xC130EC Offset: 0xC130EC VA: 0xC130EC
	private static ExecuteEvents.EventFunction<IPointerExitHandler> <>f__mg$cache1; // 0xA0
	[CompilerGeneratedAttribute] // RVA: 0xC130FC Offset: 0xC130FC VA: 0xC130FC
	private static ExecuteEvents.EventFunction<IPointerDownHandler> <>f__mg$cache2; // 0xA8
	[CompilerGeneratedAttribute] // RVA: 0xC1310C Offset: 0xC1310C VA: 0xC1310C
	private static ExecuteEvents.EventFunction<IPointerUpHandler> <>f__mg$cache3; // 0xB0
	[CompilerGeneratedAttribute] // RVA: 0xC1311C Offset: 0xC1311C VA: 0xC1311C
	private static ExecuteEvents.EventFunction<IPointerClickHandler> <>f__mg$cache4; // 0xB8
	[CompilerGeneratedAttribute] // RVA: 0xC1312C Offset: 0xC1312C VA: 0xC1312C
	private static ExecuteEvents.EventFunction<IInitializePotentialDragHandler> <>f__mg$cache5; // 0xC0
	[CompilerGeneratedAttribute] // RVA: 0xC1313C Offset: 0xC1313C VA: 0xC1313C
	private static ExecuteEvents.EventFunction<IBeginDragHandler> <>f__mg$cache6; // 0xC8
	[CompilerGeneratedAttribute] // RVA: 0xC1314C Offset: 0xC1314C VA: 0xC1314C
	private static ExecuteEvents.EventFunction<IDragHandler> <>f__mg$cache7; // 0xD0
	[CompilerGeneratedAttribute] // RVA: 0xC1315C Offset: 0xC1315C VA: 0xC1315C
	private static ExecuteEvents.EventFunction<IEndDragHandler> <>f__mg$cache8; // 0xD8
	[CompilerGeneratedAttribute] // RVA: 0xC1316C Offset: 0xC1316C VA: 0xC1316C
	private static ExecuteEvents.EventFunction<IDropHandler> <>f__mg$cache9; // 0xE0
	[CompilerGeneratedAttribute] // RVA: 0xC1317C Offset: 0xC1317C VA: 0xC1317C
	private static ExecuteEvents.EventFunction<IScrollHandler> <>f__mg$cacheA; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xC1318C Offset: 0xC1318C VA: 0xC1318C
	private static ExecuteEvents.EventFunction<IUpdateSelectedHandler> <>f__mg$cacheB; // 0xF0
	[CompilerGeneratedAttribute] // RVA: 0xC1319C Offset: 0xC1319C VA: 0xC1319C
	private static ExecuteEvents.EventFunction<ISelectHandler> <>f__mg$cacheC; // 0xF8
	[CompilerGeneratedAttribute] // RVA: 0xC131AC Offset: 0xC131AC VA: 0xC131AC
	private static ExecuteEvents.EventFunction<IDeselectHandler> <>f__mg$cacheD; // 0x100
	[CompilerGeneratedAttribute] // RVA: 0xC131BC Offset: 0xC131BC VA: 0xC131BC
	private static ExecuteEvents.EventFunction<IMoveHandler> <>f__mg$cacheE; // 0x108
	[CompilerGeneratedAttribute] // RVA: 0xC131CC Offset: 0xC131CC VA: 0xC131CC
	private static ExecuteEvents.EventFunction<ISubmitHandler> <>f__mg$cacheF; // 0x110
	[CompilerGeneratedAttribute] // RVA: 0xC131DC Offset: 0xC131DC VA: 0xC131DC
	private static ExecuteEvents.EventFunction<ICancelHandler> <>f__mg$cache10; // 0x118

	// Properties
	public static ExecuteEvents.EventFunction<IPointerEnterHandler> pointerEnterHandler { get; }
	public static ExecuteEvents.EventFunction<IPointerExitHandler> pointerExitHandler { get; }
	public static ExecuteEvents.EventFunction<IPointerDownHandler> pointerDownHandler { get; }
	public static ExecuteEvents.EventFunction<IPointerUpHandler> pointerUpHandler { get; }
	public static ExecuteEvents.EventFunction<IPointerClickHandler> pointerClickHandler { get; }
	public static ExecuteEvents.EventFunction<IInitializePotentialDragHandler> initializePotentialDrag { get; }
	public static ExecuteEvents.EventFunction<IBeginDragHandler> beginDragHandler { get; }
	public static ExecuteEvents.EventFunction<IDragHandler> dragHandler { get; }
	public static ExecuteEvents.EventFunction<IEndDragHandler> endDragHandler { get; }
	public static ExecuteEvents.EventFunction<IDropHandler> dropHandler { get; }
	public static ExecuteEvents.EventFunction<IScrollHandler> scrollHandler { get; }
	public static ExecuteEvents.EventFunction<IUpdateSelectedHandler> updateSelectedHandler { get; }
	public static ExecuteEvents.EventFunction<ISelectHandler> selectHandler { get; }
	public static ExecuteEvents.EventFunction<IDeselectHandler> deselectHandler { get; }
	public static ExecuteEvents.EventFunction<IMoveHandler> moveHandler { get; }
	public static ExecuteEvents.EventFunction<ISubmitHandler> submitHandler { get; }
	public static ExecuteEvents.EventFunction<ICancelHandler> cancelHandler { get; }

	// Methods

	// RVA: -1 Offset: -1
	public static T ValidateEventData<T>(BaseEventData data) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C30924 Offset: 0x1C30924 VA: 0x1C30924
	|-ExecuteEvents.ValidateEventData<object>
	|-ExecuteEvents.ValidateEventData<AxisEventData>
	|-ExecuteEvents.ValidateEventData<PointerEventData>
	*/

	// RVA: 0x1F72E88 Offset: 0x1F72E88 VA: 0x1F72E88
	private static void Execute(IPointerEnterHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F72F80 Offset: 0x1F72F80 VA: 0x1F72F80
	private static void Execute(IPointerExitHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F73078 Offset: 0x1F73078 VA: 0x1F73078
	private static void Execute(IPointerDownHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F73170 Offset: 0x1F73170 VA: 0x1F73170
	private static void Execute(IPointerUpHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F73268 Offset: 0x1F73268 VA: 0x1F73268
	private static void Execute(IPointerClickHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F73360 Offset: 0x1F73360 VA: 0x1F73360
	private static void Execute(IInitializePotentialDragHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F73458 Offset: 0x1F73458 VA: 0x1F73458
	private static void Execute(IBeginDragHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F73550 Offset: 0x1F73550 VA: 0x1F73550
	private static void Execute(IDragHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F73648 Offset: 0x1F73648 VA: 0x1F73648
	private static void Execute(IEndDragHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F73740 Offset: 0x1F73740 VA: 0x1F73740
	private static void Execute(IDropHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F73838 Offset: 0x1F73838 VA: 0x1F73838
	private static void Execute(IScrollHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F73930 Offset: 0x1F73930 VA: 0x1F73930
	private static void Execute(IUpdateSelectedHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F739F0 Offset: 0x1F739F0 VA: 0x1F739F0
	private static void Execute(ISelectHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F73AB0 Offset: 0x1F73AB0 VA: 0x1F73AB0
	private static void Execute(IDeselectHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F73B70 Offset: 0x1F73B70 VA: 0x1F73B70
	private static void Execute(IMoveHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F73C68 Offset: 0x1F73C68 VA: 0x1F73C68
	private static void Execute(ISubmitHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F73D28 Offset: 0x1F73D28 VA: 0x1F73D28
	private static void Execute(ICancelHandler handler, BaseEventData eventData) { }

	// RVA: 0x1F70DF0 Offset: 0x1F70DF0 VA: 0x1F70DF0
	public static ExecuteEvents.EventFunction<IPointerEnterHandler> get_pointerEnterHandler() { }

	// RVA: 0x1F70D80 Offset: 0x1F70D80 VA: 0x1F70D80
	public static ExecuteEvents.EventFunction<IPointerExitHandler> get_pointerExitHandler() { }

	// RVA: 0x1F73DE8 Offset: 0x1F73DE8 VA: 0x1F73DE8
	public static ExecuteEvents.EventFunction<IPointerDownHandler> get_pointerDownHandler() { }

	// RVA: 0x1F73E50 Offset: 0x1F73E50 VA: 0x1F73E50
	public static ExecuteEvents.EventFunction<IPointerUpHandler> get_pointerUpHandler() { }

	// RVA: 0x1F73EB8 Offset: 0x1F73EB8 VA: 0x1F73EB8
	public static ExecuteEvents.EventFunction<IPointerClickHandler> get_pointerClickHandler() { }

	// RVA: 0x1F73F20 Offset: 0x1F73F20 VA: 0x1F73F20
	public static ExecuteEvents.EventFunction<IInitializePotentialDragHandler> get_initializePotentialDrag() { }

	// RVA: 0x1F73F88 Offset: 0x1F73F88 VA: 0x1F73F88
	public static ExecuteEvents.EventFunction<IBeginDragHandler> get_beginDragHandler() { }

	// RVA: 0x1F73FF0 Offset: 0x1F73FF0 VA: 0x1F73FF0
	public static ExecuteEvents.EventFunction<IDragHandler> get_dragHandler() { }

	// RVA: 0x1F74058 Offset: 0x1F74058 VA: 0x1F74058
	public static ExecuteEvents.EventFunction<IEndDragHandler> get_endDragHandler() { }

	// RVA: 0x1F740C0 Offset: 0x1F740C0 VA: 0x1F740C0
	public static ExecuteEvents.EventFunction<IDropHandler> get_dropHandler() { }

	// RVA: 0x1F74128 Offset: 0x1F74128 VA: 0x1F74128
	public static ExecuteEvents.EventFunction<IScrollHandler> get_scrollHandler() { }

	// RVA: 0x1F74190 Offset: 0x1F74190 VA: 0x1F74190
	public static ExecuteEvents.EventFunction<IUpdateSelectedHandler> get_updateSelectedHandler() { }

	// RVA: 0x1F71A0C Offset: 0x1F71A0C VA: 0x1F71A0C
	public static ExecuteEvents.EventFunction<ISelectHandler> get_selectHandler() { }

	// RVA: 0x1F719A4 Offset: 0x1F719A4 VA: 0x1F719A4
	public static ExecuteEvents.EventFunction<IDeselectHandler> get_deselectHandler() { }

	// RVA: 0x1F741F8 Offset: 0x1F741F8 VA: 0x1F741F8
	public static ExecuteEvents.EventFunction<IMoveHandler> get_moveHandler() { }

	// RVA: 0x1F74260 Offset: 0x1F74260 VA: 0x1F74260
	public static ExecuteEvents.EventFunction<ISubmitHandler> get_submitHandler() { }

	// RVA: 0x1F742C8 Offset: 0x1F742C8 VA: 0x1F742C8
	public static ExecuteEvents.EventFunction<ICancelHandler> get_cancelHandler() { }

	// RVA: 0x1F74330 Offset: 0x1F74330 VA: 0x1F74330
	private static void GetEventChain(GameObject root, IList<Transform> eventChain) { }

	// RVA: -1 Offset: -1
	public static bool Execute<T>(GameObject target, BaseEventData eventData, ExecuteEvents.EventFunction<T> functor) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1A1B140 Offset: 0x1A1B140 VA: 0x1A1B140
	|-ExecuteEvents.Execute<IEventMessageRecieve>
	|-ExecuteEvents.Execute<object>
	|-ExecuteEvents.Execute<IBeginDragHandler>
	|-ExecuteEvents.Execute<ICancelHandler>
	|-ExecuteEvents.Execute<IDeselectHandler>
	|-ExecuteEvents.Execute<IDragHandler>
	|-ExecuteEvents.Execute<IDropHandler>
	|-ExecuteEvents.Execute<IEndDragHandler>
	|-ExecuteEvents.Execute<IInitializePotentialDragHandler>
	|-ExecuteEvents.Execute<IMoveHandler>
	|-ExecuteEvents.Execute<IPointerClickHandler>
	|-ExecuteEvents.Execute<IPointerDownHandler>
	|-ExecuteEvents.Execute<IPointerEnterHandler>
	|-ExecuteEvents.Execute<IPointerExitHandler>
	|-ExecuteEvents.Execute<IPointerUpHandler>
	|-ExecuteEvents.Execute<IScrollHandler>
	|-ExecuteEvents.Execute<ISelectHandler>
	|-ExecuteEvents.Execute<ISubmitHandler>
	|-ExecuteEvents.Execute<IUpdateSelectedHandler>
	*/

	// RVA: -1 Offset: -1
	public static GameObject ExecuteHierarchy<T>(GameObject root, BaseEventData eventData, ExecuteEvents.EventFunction<T> callbackFunction) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B280A8 Offset: 0x2B280A8 VA: 0x2B280A8
	|-ExecuteEvents.ExecuteHierarchy<object>
	|-ExecuteEvents.ExecuteHierarchy<IDropHandler>
	|-ExecuteEvents.ExecuteHierarchy<IPointerDownHandler>
	|-ExecuteEvents.ExecuteHierarchy<IPointerExitHandler>
	|-ExecuteEvents.ExecuteHierarchy<IScrollHandler>
	*/

	// RVA: -1 Offset: -1
	private static bool ShouldSendToComponent<T>(Component component) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1A1B5FC Offset: 0x1A1B5FC VA: 0x1A1B5FC
	|-ExecuteEvents.ShouldSendToComponent<object>
	*/

	// RVA: -1 Offset: -1
	private static void GetEventList<T>(GameObject go, IList<IEventSystemHandler> results) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1A970 Offset: 0x1C1A970 VA: 0x1C1A970
	|-ExecuteEvents.GetEventList<object>
	*/

	// RVA: -1 Offset: -1
	public static bool CanHandleEvent<T>(GameObject go) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1A1B030 Offset: 0x1A1B030 VA: 0x1A1B030
	|-ExecuteEvents.CanHandleEvent<object>
	|-ExecuteEvents.CanHandleEvent<IBeginDragHandler>
	|-ExecuteEvents.CanHandleEvent<ICancelHandler>
	|-ExecuteEvents.CanHandleEvent<IDeselectHandler>
	|-ExecuteEvents.CanHandleEvent<IDragHandler>
	|-ExecuteEvents.CanHandleEvent<IDropHandler>
	|-ExecuteEvents.CanHandleEvent<IEndDragHandler>
	|-ExecuteEvents.CanHandleEvent<IInitializePotentialDragHandler>
	|-ExecuteEvents.CanHandleEvent<IPointerClickHandler>
	|-ExecuteEvents.CanHandleEvent<IPointerDownHandler>
	|-ExecuteEvents.CanHandleEvent<IPointerEnterHandler>
	|-ExecuteEvents.CanHandleEvent<IPointerExitHandler>
	|-ExecuteEvents.CanHandleEvent<IPointerUpHandler>
	|-ExecuteEvents.CanHandleEvent<IScrollHandler>
	|-ExecuteEvents.CanHandleEvent<ISubmitHandler>
	|-ExecuteEvents.CanHandleEvent<IUpdateSelectedHandler>
	*/

	// RVA: -1 Offset: -1
	public static GameObject GetEventHandler<T>(GameObject root) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B28244 Offset: 0x2B28244 VA: 0x2B28244
	|-ExecuteEvents.GetEventHandler<object>
	|-ExecuteEvents.GetEventHandler<IDragHandler>
	|-ExecuteEvents.GetEventHandler<IPointerClickHandler>
	|-ExecuteEvents.GetEventHandler<IScrollHandler>
	|-ExecuteEvents.GetEventHandler<ISelectHandler>
	*/

	// RVA: 0x1F74500 Offset: 0x1F74500 VA: 0x1F74500
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC154C8 Offset: 0xC154C8 VA: 0xC154C8
	// RVA: 0x1F74BCC Offset: 0x1F74BCC VA: 0x1F74BCC
	private static void <s_HandlerListPool>m__0(List<IEventSystemHandler> l) { }
}

// Namespace: 
public sealed class ExecuteEvents.EventFunction<T1> : MulticastDelegate // TypeDefIndex: 3021
{
	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(object object, IntPtr method) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2619960 Offset: 0x2619960 VA: 0x2619960
	|-ExecuteEvents.EventFunction<IEventMessageRecieve>..ctor
	|-ExecuteEvents.EventFunction<object>..ctor
	|-ExecuteEvents.EventFunction<IBeginDragHandler>..ctor
	|-ExecuteEvents.EventFunction<ICancelHandler>..ctor
	|-ExecuteEvents.EventFunction<IDeselectHandler>..ctor
	|-ExecuteEvents.EventFunction<IDragHandler>..ctor
	|-ExecuteEvents.EventFunction<IDropHandler>..ctor
	|-ExecuteEvents.EventFunction<IEndDragHandler>..ctor
	|-ExecuteEvents.EventFunction<IInitializePotentialDragHandler>..ctor
	|-ExecuteEvents.EventFunction<IMoveHandler>..ctor
	|-ExecuteEvents.EventFunction<IPointerClickHandler>..ctor
	|-ExecuteEvents.EventFunction<IPointerDownHandler>..ctor
	|-ExecuteEvents.EventFunction<IPointerEnterHandler>..ctor
	|-ExecuteEvents.EventFunction<IPointerExitHandler>..ctor
	|-ExecuteEvents.EventFunction<IPointerUpHandler>..ctor
	|-ExecuteEvents.EventFunction<IScrollHandler>..ctor
	|-ExecuteEvents.EventFunction<ISelectHandler>..ctor
	|-ExecuteEvents.EventFunction<ISubmitHandler>..ctor
	|-ExecuteEvents.EventFunction<IUpdateSelectedHandler>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 11
	public virtual void Invoke(T1 handler, BaseEventData eventData) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2619970 Offset: 0x2619970 VA: 0x2619970
	|-ExecuteEvents.EventFunction<object>.Invoke
	*/

	// RVA: -1 Offset: -1 Slot: 12
	public virtual IAsyncResult BeginInvoke(T1 handler, BaseEventData eventData, AsyncCallback callback, object object) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2619D30 Offset: 0x2619D30 VA: 0x2619D30
	|-ExecuteEvents.EventFunction<object>.BeginInvoke
	*/

	// RVA: -1 Offset: -1 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2619D60 Offset: 0x2619D60 VA: 0x2619D60
	|-ExecuteEvents.EventFunction<object>.EndInvoke
	*/
}

// Namespace: UnityEngine.EventSystems
public enum MoveDirection // TypeDefIndex: 3022
{
	// Fields
	public int value__; // 0x0
	public const MoveDirection Left = 0;
	public const MoveDirection Up = 1;
	public const MoveDirection Right = 2;
	public const MoveDirection Down = 3;
	public const MoveDirection None = 4;
}

// Namespace: UnityEngine.EventSystems
public struct RaycastResult // TypeDefIndex: 3023
{
	// Fields
	private GameObject m_GameObject; // 0x0
	public BaseRaycaster module; // 0x8
	public float distance; // 0x10
	public float index; // 0x14
	public int depth; // 0x18
	public int sortingLayer; // 0x1C
	public int sortingOrder; // 0x20
	public Vector3 worldPosition; // 0x24
	public Vector3 worldNormal; // 0x30
	public Vector2 screenPosition; // 0x3C
	internal int displayIndex; // 0x44

	// Properties
	public GameObject gameObject { get; set; }
	public bool isValid { get; }

	// Methods

	// RVA: 0xD63970 Offset: 0xD63970 VA: 0xD63970
	public GameObject get_gameObject() { }

	// RVA: 0xD63978 Offset: 0xD63978 VA: 0xD63978
	public void set_gameObject(GameObject value) { }

	// RVA: 0xD63980 Offset: 0xD63980 VA: 0xD63980
