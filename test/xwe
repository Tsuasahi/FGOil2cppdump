
	// RVA: 0x1960D14 Offset: 0x1960D14 VA: 0x1960D14
	private void Update() { }

	// RVA: 0x19611D4 Offset: 0x19611D4 VA: 0x19611D4
	private void NotifyListeners() { }

	// RVA: 0x19614E0 Offset: 0x19614E0 VA: 0x19614E0
	public static SpringPosition Begin(GameObject go, Vector3 pos, float strength) { }
}

// Namespace: 
public sealed class SpringPosition.OnFinished : MulticastDelegate // TypeDefIndex: 12146
{
	// Methods

	// RVA: 0x196165C Offset: 0x196165C VA: 0x196165C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x19612E0 Offset: 0x19612E0 VA: 0x19612E0 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x196166C Offset: 0x196166C VA: 0x196166C Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x19616A0 Offset: 0x19616A0 VA: 0x19616A0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC98BDC Offset: 0xC98BDC VA: 0xC98BDC
public class TweenAlpha : UITweener // TypeDefIndex: 12147
{
	// Fields
	[RangeAttribute] // RVA: 0xCF1CD4 Offset: 0xCF1CD4 VA: 0xCF1CD4
	public float from; // 0x78
	[RangeAttribute] // RVA: 0xCF1CEC Offset: 0xCF1CEC VA: 0xCF1CEC
	public float to; // 0x7C
	private bool mCached; // 0x80
	private UIRect mRect; // 0x88
	private Material mMat; // 0x90
	private SpriteRenderer mSr; // 0x98

	// Properties
	[ObsoleteAttribute] // RVA: 0xD4BFBC Offset: 0xD4BFBC VA: 0xD4BFBC
	public float alpha { get; set; }
	public float value { get; set; }

	// Methods

	// RVA: 0x1E1BA10 Offset: 0x1E1BA10 VA: 0x1E1BA10
	public void .ctor() { }

	// RVA: 0x1E1BA20 Offset: 0x1E1BA20 VA: 0x1E1BA20
	public float get_alpha() { }

	// RVA: 0x1E1BB88 Offset: 0x1E1BB88 VA: 0x1E1BB88
	public void set_alpha(float value) { }

	// RVA: 0x1E1BD98 Offset: 0x1E1BD98 VA: 0x1E1BD98
	private void Cache() { }

	// RVA: 0x1E1BA24 Offset: 0x1E1BA24 VA: 0x1E1BA24
	public float get_value() { }

	// RVA: 0x1E1BB8C Offset: 0x1E1BB8C VA: 0x1E1BB8C
	public void set_value(float value) { }

	// RVA: 0x1E1BF34 Offset: 0x1E1BF34 VA: 0x1E1BF34 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x1E13B94 Offset: 0x1E13B94 VA: 0x1E13B94
	public static TweenAlpha Begin(GameObject go, float duration, float alpha) { }

	// RVA: 0x1E1BFC4 Offset: 0x1E1BFC4 VA: 0x1E1BFC4 Slot: 6
	public override void SetStartToCurrentValue() { }

	// RVA: 0x1E1BFE8 Offset: 0x1E1BFE8 VA: 0x1E1BFE8 Slot: 7
	public override void SetEndToCurrentValue() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC98C14 Offset: 0xC98C14 VA: 0xC98C14
public class TweenColor : UITweener // TypeDefIndex: 12148
{
	// Fields
	public Color from; // 0x78
	public Color to; // 0x88
	private bool mCached; // 0x98
	private UIWidget mWidget; // 0xA0
	private Material mMat; // 0xA8
	private Light mLight; // 0xB0
	private SpriteRenderer mSr; // 0xB8

	// Properties
	[ObsoleteAttribute] // RVA: 0xD4BFF4 Offset: 0xD4BFF4 VA: 0xD4BFF4
	public Color color { get; set; }
	public Color value { get; set; }

	// Methods

	// RVA: 0x1E1C00C Offset: 0x1E1C00C VA: 0x1E1C00C
	public void .ctor() { }

	// RVA: 0x1E1C050 Offset: 0x1E1C050 VA: 0x1E1C050
	private void Cache() { }

	// RVA: 0x1E1C200 Offset: 0x1E1C200 VA: 0x1E1C200
	public Color get_color() { }

	// RVA: 0x1E1C3C8 Offset: 0x1E1C3C8 VA: 0x1E1C3C8
	public void set_color(Color value) { }

	// RVA: 0x1E1C204 Offset: 0x1E1C204 VA: 0x1E1C204
	public Color get_value() { }

	// RVA: 0x1E1C3CC Offset: 0x1E1C3CC VA: 0x1E1C3CC
	public void set_value(Color value) { }

	// RVA: 0x1E1C640 Offset: 0x1E1C640 VA: 0x1E1C640 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x1E1C688 Offset: 0x1E1C688 VA: 0x1E1C688
	public static TweenColor Begin(GameObject go, float duration, Color color) { }

	[ContextMenu] // RVA: 0xD446AC Offset: 0xD446AC VA: 0xD446AC
	// RVA: 0x1E1C7B8 Offset: 0x1E1C7B8 VA: 0x1E1C7B8 Slot: 6
	public override void SetStartToCurrentValue() { }

	[ContextMenu] // RVA: 0xD446E4 Offset: 0xD446E4 VA: 0xD446E4
	// RVA: 0x1E1C7E0 Offset: 0x1E1C7E0 VA: 0x1E1C7E0 Slot: 7
	public override void SetEndToCurrentValue() { }

	[ContextMenu] // RVA: 0xD4471C Offset: 0xD4471C VA: 0xD4471C
	// RVA: 0x1E1C808 Offset: 0x1E1C808 VA: 0x1E1C808
	private void SetCurrentValueToStart() { }

	[ContextMenu] // RVA: 0xD44754 Offset: 0xD44754 VA: 0xD44754
	// RVA: 0x1E1C814 Offset: 0x1E1C814 VA: 0x1E1C814
	private void SetCurrentValueToEnd() { }
}

// Namespace: 
[RequireComponent] // RVA: 0xC98C4C Offset: 0xC98C4C VA: 0xC98C4C
[AddComponentMenu] // RVA: 0xC98C4C Offset: 0xC98C4C VA: 0xC98C4C
public class TweenFOV : UITweener // TypeDefIndex: 12149
{
	// Fields
	public float from; // 0x78
	public float to; // 0x7C
	private Camera mCam; // 0x80

	// Properties
	public Camera cachedCamera { get; }
	[ObsoleteAttribute] // RVA: 0xD4C02C Offset: 0xD4C02C VA: 0xD4C02C
	public float fov { get; set; }
	public float value { get; set; }

	// Methods

	// RVA: 0x1E1C820 Offset: 0x1E1C820 VA: 0x1E1C820
	public void .ctor() { }

	// RVA: 0x1E1C834 Offset: 0x1E1C834 VA: 0x1E1C834
	public Camera get_cachedCamera() { }

	// RVA: 0x1E1C8CC Offset: 0x1E1C8CC VA: 0x1E1C8CC
	public float get_fov() { }

	// RVA: 0x1E1C900 Offset: 0x1E1C900 VA: 0x1E1C900
	public void set_fov(float value) { }

	// RVA: 0x1E1C8D0 Offset: 0x1E1C8D0 VA: 0x1E1C8D0
	public float get_value() { }

	// RVA: 0x1E1C904 Offset: 0x1E1C904 VA: 0x1E1C904
	public void set_value(float value) { }

	// RVA: 0x1E1C944 Offset: 0x1E1C944 VA: 0x1E1C944 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x1E1C960 Offset: 0x1E1C960 VA: 0x1E1C960
	public static TweenFOV Begin(GameObject go, float duration, float to) { }

	[ContextMenu] // RVA: 0xD4478C Offset: 0xD4478C VA: 0xD4478C
	// RVA: 0x1E1CA44 Offset: 0x1E1CA44 VA: 0x1E1CA44 Slot: 6
	public override void SetStartToCurrentValue() { }

	[ContextMenu] // RVA: 0xD447C4 Offset: 0xD447C4 VA: 0xD447C4
	// RVA: 0x1E1CA68 Offset: 0x1E1CA68 VA: 0x1E1CA68 Slot: 7
	public override void SetEndToCurrentValue() { }

	[ContextMenu] // RVA: 0xD447FC Offset: 0xD447FC VA: 0xD447FC
	// RVA: 0x1E1CA8C Offset: 0x1E1CA8C VA: 0x1E1CA8C
	private void SetCurrentValueToStart() { }

	[ContextMenu] // RVA: 0xD44834 Offset: 0xD44834 VA: 0xD44834
	// RVA: 0x1E1CA94 Offset: 0x1E1CA94 VA: 0x1E1CA94
	private void SetCurrentValueToEnd() { }
}

// Namespace: 
[RequireComponent] // RVA: 0xC98CD4 Offset: 0xC98CD4 VA: 0xC98CD4
[AddComponentMenu] // RVA: 0xC98CD4 Offset: 0xC98CD4 VA: 0xC98CD4
public class TweenHeight : UITweener // TypeDefIndex: 12150
{
	// Fields
	public int from; // 0x78
	public int to; // 0x7C
	public bool updateTable; // 0x80
	private UIWidget mWidget; // 0x88
	private UITable mTable; // 0x90

	// Properties
	public UIWidget cachedWidget { get; }
	[ObsoleteAttribute] // RVA: 0xD4C064 Offset: 0xD4C064 VA: 0xD4C064
	public int height { get; set; }
	public int value { get; set; }

	// Methods

	// RVA: 0x1E1CA9C Offset: 0x1E1CA9C VA: 0x1E1CA9C
	public void .ctor() { }

	// RVA: 0x1E1CAB0 Offset: 0x1E1CAB0 VA: 0x1E1CAB0
	public UIWidget get_cachedWidget() { }

	// RVA: 0x1E1CB48 Offset: 0x1E1CB48 VA: 0x1E1CB48
	public int get_height() { }

	// RVA: 0x1E1CB7C Offset: 0x1E1CB7C VA: 0x1E1CB7C
	public void set_height(int value) { }

	// RVA: 0x1E1CB4C Offset: 0x1E1CB4C VA: 0x1E1CB4C
	public int get_value() { }

	// RVA: 0x1E1CB80 Offset: 0x1E1CB80 VA: 0x1E1CB80
	public void set_value(int value) { }

	// RVA: 0x1E1CBB8 Offset: 0x1E1CBB8 VA: 0x1E1CBB8 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x1E13A98 Offset: 0x1E13A98 VA: 0x1E13A98
	public static TweenHeight Begin(UIWidget widget, float duration, int height) { }

	[ContextMenu] // RVA: 0xD4486C Offset: 0xD4486C VA: 0xD4486C
	// RVA: 0x1E1CD50 Offset: 0x1E1CD50 VA: 0x1E1CD50 Slot: 6
	public override void SetStartToCurrentValue() { }

	[ContextMenu] // RVA: 0xD448A4 Offset: 0xD448A4 VA: 0xD448A4
	// RVA: 0x1E1CD74 Offset: 0x1E1CD74 VA: 0x1E1CD74 Slot: 7
	public override void SetEndToCurrentValue() { }

	[ContextMenu] // RVA: 0xD448DC Offset: 0xD448DC VA: 0xD448DC
	// RVA: 0x1E1CD98 Offset: 0x1E1CD98 VA: 0x1E1CD98
	private void SetCurrentValueToStart() { }

	[ContextMenu] // RVA: 0xD44914 Offset: 0xD44914 VA: 0xD44914
	// RVA: 0x1E1CDA0 Offset: 0x1E1CDA0 VA: 0x1E1CDA0
	private void SetCurrentValueToEnd() { }
}

// Namespace: 
[RequireComponent] // RVA: 0xC98D5C Offset: 0xC98D5C VA: 0xC98D5C
[AddComponentMenu] // RVA: 0xC98D5C Offset: 0xC98D5C VA: 0xC98D5C
public class TweenOrthoSize : UITweener // TypeDefIndex: 12151
{
	// Fields
	public float from; // 0x78
	public float to; // 0x7C
	private Camera mCam; // 0x80

	// Properties
	public Camera cachedCamera { get; }
	[ObsoleteAttribute] // RVA: 0xD4C09C Offset: 0xD4C09C VA: 0xD4C09C
	public float orthoSize { get; set; }
	public float value { get; set; }

	// Methods

	// RVA: 0x1E1CDA8 Offset: 0x1E1CDA8 VA: 0x1E1CDA8
	public void .ctor() { }

	// RVA: 0x1E1CDB8 Offset: 0x1E1CDB8 VA: 0x1E1CDB8
	public Camera get_cachedCamera() { }

	// RVA: 0x1E1CE50 Offset: 0x1E1CE50 VA: 0x1E1CE50
	public float get_orthoSize() { }

	// RVA: 0x1E1CE84 Offset: 0x1E1CE84 VA: 0x1E1CE84
	public void set_orthoSize(float value) { }

	// RVA: 0x1E1CE54 Offset: 0x1E1CE54 VA: 0x1E1CE54
	public float get_value() { }

	// RVA: 0x1E1CE88 Offset: 0x1E1CE88 VA: 0x1E1CE88
	public void set_value(float value) { }

	// RVA: 0x1E1CEC8 Offset: 0x1E1CEC8 VA: 0x1E1CEC8 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x1E1CEE4 Offset: 0x1E1CEE4 VA: 0x1E1CEE4
	public static TweenOrthoSize Begin(GameObject go, float duration, float to) { }

	// RVA: 0x1E1CFC8 Offset: 0x1E1CFC8 VA: 0x1E1CFC8 Slot: 6
	public override void SetStartToCurrentValue() { }

	// RVA: 0x1E1CFEC Offset: 0x1E1CFEC VA: 0x1E1CFEC Slot: 7
	public override void SetEndToCurrentValue() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC98DE4 Offset: 0xC98DE4 VA: 0xC98DE4
public class TweenPosition : UITweener // TypeDefIndex: 12152
{
	// Fields
	public Vector3 from; // 0x78
	public Vector3 to; // 0x84
	[HideInInspector] // RVA: 0xCF1D04 Offset: 0xCF1D04 VA: 0xCF1D04
	public bool worldSpace; // 0x90
	private Transform mTrans; // 0x98
	private UIRect mRect; // 0xA0

	// Properties
	public Transform cachedTransform { get; }
	[ObsoleteAttribute] // RVA: 0xD4C0D4 Offset: 0xD4C0D4 VA: 0xD4C0D4
	public Vector3 position { get; set; }
	public Vector3 value { get; set; }

	// Methods

	// RVA: 0x1E1D010 Offset: 0x1E1D010 VA: 0x1E1D010
	public void .ctor() { }

	// RVA: 0x1E1D018 Offset: 0x1E1D018 VA: 0x1E1D018
	public Transform get_cachedTransform() { }

	// RVA: 0x1E1D0A8 Offset: 0x1E1D0A8 VA: 0x1E1D0A8
	public Vector3 get_position() { }

	// RVA: 0x1E1D0FC Offset: 0x1E1D0FC VA: 0x1E1D0FC
	public void set_position(Vector3 value) { }

	// RVA: 0x1E1D0AC Offset: 0x1E1D0AC VA: 0x1E1D0AC
	public Vector3 get_value() { }

	// RVA: 0x1E1D100 Offset: 0x1E1D100 VA: 0x1E1D100
	public void set_value(Vector3 value) { }

	// RVA: 0x1E1D2B0 Offset: 0x1E1D2B0 VA: 0x1E1D2B0
	private void Awake() { }

	// RVA: 0x1E1D308 Offset: 0x1E1D308 VA: 0x1E1D308 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x1E1D3E8 Offset: 0x1E1D3E8 VA: 0x1E1D3E8
	public static TweenPosition Begin(GameObject go, float duration, Vector3 pos) { }

	// RVA: 0x1E1D4FC Offset: 0x1E1D4FC VA: 0x1E1D4FC
	public static TweenPosition Begin(GameObject go, float duration, Vector3 pos, bool worldSpace) { }

	[ContextMenu] // RVA: 0xD4494C Offset: 0xD4494C VA: 0xD4494C
	// RVA: 0x1E1D63C Offset: 0x1E1D63C VA: 0x1E1D63C Slot: 6
	public override void SetStartToCurrentValue() { }

	[ContextMenu] // RVA: 0xD44984 Offset: 0xD44984 VA: 0xD44984
	// RVA: 0x1E1D664 Offset: 0x1E1D664 VA: 0x1E1D664 Slot: 7
	public override void SetEndToCurrentValue() { }

	[ContextMenu] // RVA: 0xD449BC Offset: 0xD449BC VA: 0xD449BC
	// RVA: 0x1E1D68C Offset: 0x1E1D68C VA: 0x1E1D68C
	private void SetCurrentValueToStart() { }

	[ContextMenu] // RVA: 0xD449F4 Offset: 0xD449F4 VA: 0xD449F4
	// RVA: 0x1E1D698 Offset: 0x1E1D698 VA: 0x1E1D698
	private void SetCurrentValueToEnd() { }
}

// Namespace: 
public class TweenPositionSync : TweenPosition // TypeDefIndex: 12153
{
	// Fields
	private bool forward; // 0xA8

	// Methods

	// RVA: 0x1E1D6A4 Offset: 0x1E1D6A4 VA: 0x1E1D6A4
	public void .ctor() { }

	// RVA: 0x1E1D6B4 Offset: 0x1E1D6B4 VA: 0x1E1D6B4
	private void LateUpdate() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC98E1C Offset: 0xC98E1C VA: 0xC98E1C
public class TweenRotation : UITweener // TypeDefIndex: 12154
{
	// Fields
	public Vector3 from; // 0x78
	public Vector3 to; // 0x84
	public bool quaternionLerp; // 0x90
	private Transform mTrans; // 0x98

	// Properties
	public Transform cachedTransform { get; }
	[ObsoleteAttribute] // RVA: 0xD4C10C Offset: 0xD4C10C VA: 0xD4C10C
	public Quaternion rotation { get; set; }
	public Quaternion value { get; set; }

	// Methods

	// RVA: 0x1E1DEFC Offset: 0x1E1DEFC VA: 0x1E1DEFC
	public void .ctor() { }

	// RVA: 0x1E1DF04 Offset: 0x1E1DF04 VA: 0x1E1DF04
	public Transform get_cachedTransform() { }

	// RVA: 0x1E1DF94 Offset: 0x1E1DF94 VA: 0x1E1DF94
	public Quaternion get_rotation() { }

	// RVA: 0x1E1DFC8 Offset: 0x1E1DFC8 VA: 0x1E1DFC8
	public void set_rotation(Quaternion value) { }

	// RVA: 0x1E1DF98 Offset: 0x1E1DF98 VA: 0x1E1DF98
	public Quaternion get_value() { }

	// RVA: 0x1E1DFCC Offset: 0x1E1DFCC VA: 0x1E1DFCC
	public void set_value(Quaternion value) { }

	// RVA: 0x1E1E02C Offset: 0x1E1E02C VA: 0x1E1E02C Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x1E1E1EC Offset: 0x1E1E1EC VA: 0x1E1E1EC
	public static TweenRotation Begin(GameObject go, float duration, Quaternion rot) { }

	[ContextMenu] // RVA: 0xD44A2C Offset: 0xD44A2C VA: 0xD44A2C
	// RVA: 0x1E1E310 Offset: 0x1E1E310 VA: 0x1E1E310 Slot: 6
	public override void SetStartToCurrentValue() { }

	[ContextMenu] // RVA: 0xD44A64 Offset: 0xD44A64 VA: 0xD44A64
	// RVA: 0x1E1E354 Offset: 0x1E1E354 VA: 0x1E1E354 Slot: 7
	public override void SetEndToCurrentValue() { }

	[ContextMenu] // RVA: 0xD44A9C Offset: 0xD44A9C VA: 0xD44A9C
	// RVA: 0x1E1E398 Offset: 0x1E1E398 VA: 0x1E1E398
	private void SetCurrentValueToStart() { }

	[ContextMenu] // RVA: 0xD44AD4 Offset: 0xD44AD4 VA: 0xD44AD4
	// RVA: 0x1E1E428 Offset: 0x1E1E428 VA: 0x1E1E428
	private void SetCurrentValueToEnd() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC98E54 Offset: 0xC98E54 VA: 0xC98E54
public class TweenScale : UITweener // TypeDefIndex: 12155
{
	// Fields
	public Vector3 from; // 0x78
	public Vector3 to; // 0x84
	public bool updateTable; // 0x90
	private Transform mTrans; // 0x98
	private UITable mTable; // 0xA0

	// Properties
	public Transform cachedTransform { get; }
	public Vector3 value { get; set; }
	[ObsoleteAttribute] // RVA: 0xD4C144 Offset: 0xD4C144 VA: 0xD4C144
	public Vector3 scale { get; set; }

	// Methods

	// RVA: 0x1E1E4B8 Offset: 0x1E1E4B8 VA: 0x1E1E4B8
	public void .ctor() { }

	// RVA: 0x1E1E540 Offset: 0x1E1E540 VA: 0x1E1E540
	public Transform get_cachedTransform() { }

	// RVA: 0x1E1E5D0 Offset: 0x1E1E5D0 VA: 0x1E1E5D0
	public Vector3 get_value() { }

	// RVA: 0x1E1E600 Offset: 0x1E1E600 VA: 0x1E1E600
	public void set_value(Vector3 value) { }

	// RVA: 0x1E1E658 Offset: 0x1E1E658 VA: 0x1E1E658
	public Vector3 get_scale() { }

	// RVA: 0x1E1E65C Offset: 0x1E1E65C VA: 0x1E1E65C
	public void set_scale(Vector3 value) { }

	// RVA: 0x1E1E660 Offset: 0x1E1E660 VA: 0x1E1E660 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x1E1E840 Offset: 0x1E1E840 VA: 0x1E1E840
	public static TweenScale Begin(GameObject go, float duration, Vector3 scale) { }

	[ContextMenu] // RVA: 0xD44B0C Offset: 0xD44B0C VA: 0xD44B0C
	// RVA: 0x1E1E954 Offset: 0x1E1E954 VA: 0x1E1E954 Slot: 6
	public override void SetStartToCurrentValue() { }

	[ContextMenu] // RVA: 0xD44B44 Offset: 0xD44B44 VA: 0xD44B44
	// RVA: 0x1E1E97C Offset: 0x1E1E97C VA: 0x1E1E97C Slot: 7
	public override void SetEndToCurrentValue() { }

	[ContextMenu] // RVA: 0xD44B7C Offset: 0xD44B7C VA: 0xD44B7C
	// RVA: 0x1E1E9A4 Offset: 0x1E1E9A4 VA: 0x1E1E9A4
	private void SetCurrentValueToStart() { }

	[ContextMenu] // RVA: 0xD44BB4 Offset: 0xD44BB4 VA: 0xD44BB4
	// RVA: 0x1E1E9B0 Offset: 0x1E1E9B0 VA: 0x1E1E9B0
	private void SetCurrentValueToEnd() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC98E8C Offset: 0xC98E8C VA: 0xC98E8C
public class TweenTransform : UITweener // TypeDefIndex: 12156
{
	// Fields
	public Transform from; // 0x78
	public Transform to; // 0x80
	public bool parentWhenFinished; // 0x88
	private Transform mTrans; // 0x90
	private Vector3 mPos; // 0x98
	private Quaternion mRot; // 0xA4
	private Vector3 mScale; // 0xB4

	// Methods

	// RVA: 0x1E1EE08 Offset: 0x1E1EE08 VA: 0x1E1EE08
	public void .ctor() { }

	// RVA: 0x1E1EE10 Offset: 0x1E1EE10 VA: 0x1E1EE10 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x1E1F444 Offset: 0x1E1F444 VA: 0x1E1F444
	public static TweenTransform Begin(GameObject go, float duration, Transform to) { }

	// RVA: 0x1E1F454 Offset: 0x1E1F454 VA: 0x1E1F454
	public static TweenTransform Begin(GameObject go, float duration, Transform from, Transform to) { }
}

// Namespace: 
[RequireComponent] // RVA: 0xC98EC4 Offset: 0xC98EC4 VA: 0xC98EC4
[AddComponentMenu] // RVA: 0xC98EC4 Offset: 0xC98EC4 VA: 0xC98EC4
public class TweenVolume : UITweener // TypeDefIndex: 12157
{
	// Fields
	[RangeAttribute] // RVA: 0xCF1D14 Offset: 0xCF1D14 VA: 0xCF1D14
	public float from; // 0x78
	[RangeAttribute] // RVA: 0xCF1D2C Offset: 0xCF1D2C VA: 0xCF1D2C
	public float to; // 0x7C
	private AudioSource mSource; // 0x80

	// Properties
	public AudioSource audioSource { get; }
	[ObsoleteAttribute] // RVA: 0xD4C17C Offset: 0xD4C17C VA: 0xD4C17C
	public float volume { get; set; }
	public float value { get; set; }

	// Methods

	// RVA: 0x249C7C8 Offset: 0x249C7C8 VA: 0x249C7C8
	public void .ctor() { }

	// RVA: 0x249C7D8 Offset: 0x249C7D8 VA: 0x249C7D8
	public AudioSource get_audioSource() { }

	// RVA: 0x249C8F4 Offset: 0x249C8F4 VA: 0x249C8F4
	public float get_volume() { }

	// RVA: 0x249C9A4 Offset: 0x249C9A4 VA: 0x249C9A4
	public void set_volume(float value) { }

	// RVA: 0x249C8F8 Offset: 0x249C8F8 VA: 0x249C8F8
	public float get_value() { }

	// RVA: 0x249C9A8 Offset: 0x249C9A8 VA: 0x249C9A8
	public void set_value(float value) { }

	// RVA: 0x249CA64 Offset: 0x249CA64 VA: 0x249CA64 Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x249CAF8 Offset: 0x249CAF8 VA: 0x249CAF8
	public static TweenVolume Begin(GameObject go, float duration, float targetVolume) { }

	// RVA: 0x249CBA8 Offset: 0x249CBA8 VA: 0x249CBA8 Slot: 6
	public override void SetStartToCurrentValue() { }

	// RVA: 0x249CBCC Offset: 0x249CBCC VA: 0x249CBCC Slot: 7
	public override void SetEndToCurrentValue() { }
}

// Namespace: 
[RequireComponent] // RVA: 0xC98F4C Offset: 0xC98F4C VA: 0xC98F4C
[AddComponentMenu] // RVA: 0xC98F4C Offset: 0xC98F4C VA: 0xC98F4C
public class TweenWidth : UITweener // TypeDefIndex: 12158
{
	// Fields
	public int from; // 0x78
	public int to; // 0x7C
	public bool updateTable; // 0x80
	private UIWidget mWidget; // 0x88
	private UITable mTable; // 0x90

	// Properties
	public UIWidget cachedWidget { get; }
	[ObsoleteAttribute] // RVA: 0xD4C1B4 Offset: 0xD4C1B4 VA: 0xD4C1B4
	public int width { get; set; }
	public int value { get; set; }

	// Methods

	// RVA: 0x249CBF0 Offset: 0x249CBF0 VA: 0x249CBF0
	public void .ctor() { }

	// RVA: 0x249CC04 Offset: 0x249CC04 VA: 0x249CC04
	public UIWidget get_cachedWidget() { }

	// RVA: 0x249CC9C Offset: 0x249CC9C VA: 0x249CC9C
	public int get_width() { }

	// RVA: 0x249CCD0 Offset: 0x249CCD0 VA: 0x249CCD0
	public void set_width(int value) { }

	// RVA: 0x249CCA0 Offset: 0x249CCA0 VA: 0x249CCA0
	public int get_value() { }

	// RVA: 0x249CCD4 Offset: 0x249CCD4 VA: 0x249CCD4
	public void set_value(int value) { }

	// RVA: 0x249CD0C Offset: 0x249CD0C VA: 0x249CD0C Slot: 5
	protected override void OnUpdate(float factor, bool isFinished) { }

	// RVA: 0x249CEA4 Offset: 0x249CEA4 VA: 0x249CEA4
	public static TweenWidth Begin(UIWidget widget, float duration, int width) { }

	[ContextMenu] // RVA: 0xD44BEC Offset: 0xD44BEC VA: 0xD44BEC
	// RVA: 0x249CFA0 Offset: 0x249CFA0 VA: 0x249CFA0 Slot: 6
	public override void SetStartToCurrentValue() { }

	[ContextMenu] // RVA: 0xD44C24 Offset: 0xD44C24 VA: 0xD44C24
	// RVA: 0x249CFC4 Offset: 0x249CFC4 VA: 0x249CFC4 Slot: 7
	public override void SetEndToCurrentValue() { }

	[ContextMenu] // RVA: 0xD44C5C Offset: 0xD44C5C VA: 0xD44C5C
	// RVA: 0x249CFE8 Offset: 0x249CFE8 VA: 0x249CFE8
	private void SetCurrentValueToStart() { }

	[ContextMenu] // RVA: 0xD44C94 Offset: 0xD44C94 VA: 0xD44C94
	// RVA: 0x249CFF0 Offset: 0x249CFF0 VA: 0x249CFF0
	private void SetCurrentValueToEnd() { }
}

// Namespace: 
public abstract class UITweener : MonoBehaviour // TypeDefIndex: 12159
{
	// Fields
	public static UITweener current; // 0x0
	[HideInInspector] // RVA: 0xCF1D44 Offset: 0xCF1D44 VA: 0xCF1D44
	public UITweener.Method method; // 0x18
	[HideInInspector] // RVA: 0xCF1D54 Offset: 0xCF1D54 VA: 0xCF1D54
	public UITweener.Style style; // 0x1C
	[HideInInspector] // RVA: 0xCF1D64 Offset: 0xCF1D64 VA: 0xCF1D64
	public AnimationCurve animationCurve; // 0x20
	[HideInInspector] // RVA: 0xCF1D74 Offset: 0xCF1D74 VA: 0xCF1D74
	public bool ignoreTimeScale; // 0x28
	[HideInInspector] // RVA: 0xCF1D84 Offset: 0xCF1D84 VA: 0xCF1D84
	public float delay; // 0x2C
	[HideInInspector] // RVA: 0xCF1D94 Offset: 0xCF1D94 VA: 0xCF1D94
	public float duration; // 0x30
	[HideInInspector] // RVA: 0xCF1DA4 Offset: 0xCF1DA4 VA: 0xCF1DA4
	public bool steeperCurves; // 0x34
	[HideInInspector] // RVA: 0xCF1DB4 Offset: 0xCF1DB4 VA: 0xCF1DB4
	public int tweenGroup; // 0x38
	[HideInInspector] // RVA: 0xCF1DC4 Offset: 0xCF1DC4 VA: 0xCF1DC4
	public List<EventDelegate> onFinished; // 0x40
	[HideInInspector] // RVA: 0xCF1DD4 Offset: 0xCF1DD4 VA: 0xCF1DD4
	public GameObject eventReceiver; // 0x48
	[HideInInspector] // RVA: 0xCF1DE4 Offset: 0xCF1DE4 VA: 0xCF1DE4
	public string callWhenFinished; // 0x50
	private bool mStarted; // 0x58
	private float mStartTime; // 0x5C
	private float mDuration; // 0x60
	private float mAmountPerDelta; // 0x64
	private float mFactor; // 0x68
	private List<EventDelegate> mTemp; // 0x70

	// Properties
	public float amountPerDelta { get; }
	public float tweenFactor { get; set; }
	public Direction direction { get; }

	// Methods

	// RVA: 0x2029CBC Offset: 0x2029CBC VA: 0x2029CBC
	protected void .ctor() { }

	// RVA: 0x2029E40 Offset: 0x2029E40 VA: 0x2029E40
	public float get_amountPerDelta() { }

	// RVA: 0x2029EF4 Offset: 0x2029EF4 VA: 0x2029EF4
	public float get_tweenFactor() { }

	// RVA: 0x2029EFC Offset: 0x2029EFC VA: 0x2029EFC
	public void set_tweenFactor(float value) { }

	// RVA: 0x2029F78 Offset: 0x2029F78 VA: 0x2029F78
	public Direction get_direction() { }

	// RVA: 0x2029F98 Offset: 0x2029F98 VA: 0x2029F98
	private void Reset() { }

	// RVA: 0x2029FE4 Offset: 0x2029FE4 VA: 0x2029FE4 Slot: 4
	protected virtual void Start() { }

	// RVA: 0x2029FE8 Offset: 0x2029FE8 VA: 0x2029FE8
	private void Update() { }

	// RVA: 0x202A6D8 Offset: 0x202A6D8 VA: 0x202A6D8
	public void SetOnFinished(EventDelegate.Callback del) { }

	// RVA: 0x202A754 Offset: 0x202A754 VA: 0x202A754
	public void SetOnFinished(EventDelegate del) { }

	// RVA: 0x202A7D0 Offset: 0x202A7D0 VA: 0x202A7D0
	public void AddOnFinished(EventDelegate.Callback del) { }

	// RVA: 0x202A84C Offset: 0x202A84C VA: 0x202A84C
	public void AddOnFinished(EventDelegate del) { }

	// RVA: 0x202A8C8 Offset: 0x202A8C8 VA: 0x202A8C8
	public void RemoveOnFinished(EventDelegate del) { }

	// RVA: 0x202A958 Offset: 0x202A958 VA: 0x202A958
	private void OnDisable() { }

	// RVA: 0x202A4A4 Offset: 0x202A4A4 VA: 0x202A4A4
	public void Sample(float factor, bool isFinished) { }

	// RVA: 0x202A960 Offset: 0x202A960 VA: 0x202A960
	private float BounceLogic(float val) { }

	[ObsoleteAttribute] // RVA: 0xD44CCC Offset: 0xD44CCC VA: 0xD44CCC
	// RVA: 0x202AA20 Offset: 0x202AA20 VA: 0x202AA20
	public void Play() { }

	// RVA: 0x202AAD0 Offset: 0x202AAD0 VA: 0x202AAD0
	public void PlayForward() { }

	// RVA: 0x202AAD8 Offset: 0x202AAD8 VA: 0x202AAD8
	public void PlayReverse() { }

	// RVA: 0x202AA28 Offset: 0x202AA28 VA: 0x202AA28
	public void Play(bool forward) { }

	// RVA: 0x202AAE0 Offset: 0x202AAE0 VA: 0x202AAE0
	public void ResetToBeginning() { }

	// RVA: 0x202AB38 Offset: 0x202AB38 VA: 0x202AB38
	public void Toggle() { }

	// RVA: -1 Offset: -1 Slot: 5
	protected abstract void OnUpdate(float factor, bool isFinished);

	// RVA: -1 Offset: -1
	public static T Begin<T>(GameObject go, float duration) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x219ED34 Offset: 0x219ED34 VA: 0x219ED34
	|-UITweener.Begin<object>
	|-UITweener.Begin<TweenAlpha>
	|-UITweener.Begin<TweenColor>
	|-UITweener.Begin<TweenFOV>
	|-UITweener.Begin<TweenHeight>
	|-UITweener.Begin<TweenOrthoSize>
	|-UITweener.Begin<TweenPosition>
	|-UITweener.Begin<TweenRenderVolume>
	|-UITweener.Begin<TweenRendererColor>
	|-UITweener.Begin<TweenRotation>
	|-UITweener.Begin<TweenScale>
	|-UITweener.Begin<TweenTransform>
	|-UITweener.Begin<TweenVolume>
	|-UITweener.Begin<TweenWidth>
	*/

	// RVA: 0x202ABD4 Offset: 0x202ABD4 VA: 0x202ABD4 Slot: 6
	public virtual void SetStartToCurrentValue() { }

	// RVA: 0x202ABD8 Offset: 0x202ABD8 VA: 0x202ABD8 Slot: 7
	public virtual void SetEndToCurrentValue() { }

	// RVA: 0x202ABDC Offset: 0x202ABDC VA: 0x202ABDC Slot: 8
	public virtual bool SynchronizeTween(UITweener tween) { }
}

// Namespace: 
public enum UITweener.Method // TypeDefIndex: 12160
{
	// Fields
	public int value__; // 0x0
	public const UITweener.Method Linear = 0;
	public const UITweener.Method EaseIn = 1;
	public const UITweener.Method EaseOut = 2;
	public const UITweener.Method EaseInOut = 3;
	public const UITweener.Method BounceIn = 4;
	public const UITweener.Method BounceOut = 5;
	public const UITweener.Method EaseOutQuad = 6;
}

// Namespace: 
public enum UITweener.Style // TypeDefIndex: 12161
{
	// Fields
	public int value__; // 0x0
	public const UITweener.Style Once = 0;
	public const UITweener.Style Loop = 1;
	public const UITweener.Style PingPong = 2;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC98FD4 Offset: 0xC98FD4 VA: 0xC98FD4
[AddComponentMenu] // RVA: 0xC98FD4 Offset: 0xC98FD4 VA: 0xC98FD4
public class UI2DSprite : UIBasicSprite // TypeDefIndex: 12162
{
	// Fields
	[HideInInspector] // RVA: 0xCF1DF4 Offset: 0xCF1DF4 VA: 0xCF1DF4
	[SerializeField] // RVA: 0xCF1DF4 Offset: 0xCF1DF4 VA: 0xCF1DF4
	private Sprite mSprite; // 0x1C8
	[HideInInspector] // RVA: 0xCF1E2C Offset: 0xCF1E2C VA: 0xCF1E2C
	[SerializeField] // RVA: 0xCF1E2C Offset: 0xCF1E2C VA: 0xCF1E2C
	private Material mMat; // 0x1D0
	[HideInInspector] // RVA: 0xCF1E64 Offset: 0xCF1E64 VA: 0xCF1E64
	[SerializeField] // RVA: 0xCF1E64 Offset: 0xCF1E64 VA: 0xCF1E64
	private Shader mShader; // 0x1D8
	[HideInInspector] // RVA: 0xCF1E9C Offset: 0xCF1E9C VA: 0xCF1E9C
	[SerializeField] // RVA: 0xCF1E9C Offset: 0xCF1E9C VA: 0xCF1E9C
	private Vector4 mBorder; // 0x1E0
	[HideInInspector] // RVA: 0xCF1ED4 Offset: 0xCF1ED4 VA: 0xCF1ED4
	[SerializeField] // RVA: 0xCF1ED4 Offset: 0xCF1ED4 VA: 0xCF1ED4
	private bool mFixedAspect; // 0x1F0
	[HideInInspector] // RVA: 0xCF1F0C Offset: 0xCF1F0C VA: 0xCF1F0C
	[SerializeField] // RVA: 0xCF1F0C Offset: 0xCF1F0C VA: 0xCF1F0C
	private float mPixelSize; // 0x1F4
	public Sprite nextSprite; // 0x1F8
	private int mPMA; // 0x200

	// Properties
	public Sprite sprite2D { get; set; }
	public override Material material { get; set; }
	public override Shader shader { get; set; }
	public override Texture mainTexture { get; }
	public override bool premultipliedAlpha { get; }
	public override float pixelSize { get; }
	public override Vector4 drawingDimensions { get; }
	public override Vector4 border { get; set; }

	// Methods

	// RVA: 0x249DCD4 Offset: 0x249DCD4 VA: 0x249DCD4
	public void .ctor() { }

	// RVA: 0x249DDFC Offset: 0x249DDFC VA: 0x249DDFC
	public Sprite get_sprite2D() { }

	// RVA: 0x249DE04 Offset: 0x249DE04 VA: 0x249DE04
	public void set_sprite2D(Sprite value) { }

	// RVA: 0x249DEB4 Offset: 0x249DEB4 VA: 0x249DEB4 Slot: 24
	public override Material get_material() { }

	// RVA: 0x249DEBC Offset: 0x249DEBC VA: 0x249DEBC Slot: 25
	public override void set_material(Material value) { }

	// RVA: 0x249DF78 Offset: 0x249DF78 VA: 0x249DF78 Slot: 28
	public override Shader get_shader() { }

	// RVA: 0x249E070 Offset: 0x249E070 VA: 0x249E070 Slot: 29
	public override void set_shader(Shader value) { }

	// RVA: 0x249E15C Offset: 0x249E15C VA: 0x249E15C Slot: 26
	public override Texture get_mainTexture() { }

	// RVA: 0x249E25C Offset: 0x249E25C VA: 0x249E25C Slot: 41
	public override bool get_premultipliedAlpha() { }

	// RVA: 0x249E350 Offset: 0x249E350 VA: 0x249E350 Slot: 42
	public override float get_pixelSize() { }

	// RVA: 0x249E358 Offset: 0x249E358 VA: 0x249E358 Slot: 23
	public override Vector4 get_drawingDimensions() { }

	// RVA: 0x249E8A4 Offset: 0x249E8A4 VA: 0x249E8A4 Slot: 36
	public override Vector4 get_border() { }

	// RVA: 0x249E8B8 Offset: 0x249E8B8 VA: 0x249E8B8 Slot: 37
	public override void set_border(Vector4 value) { }

	// RVA: 0x249E9C0 Offset: 0x249E9C0 VA: 0x249E9C0 Slot: 21
	protected override void OnUpdate() { }

	// RVA: 0x249EDE0 Offset: 0x249EDE0 VA: 0x249EDE0 Slot: 33
	public override void MakePixelPerfect() { }

	// RVA: 0x249F004 Offset: 0x249F004 VA: 0x249F004 Slot: 38
	public override void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }
}

// Namespace: 
public class UI2DSpriteAnimation : MonoBehaviour // TypeDefIndex: 12163
{
	// Fields
	[SerializeField] // RVA: 0xCF1F44 Offset: 0xCF1F44 VA: 0xCF1F44
	protected int framerate; // 0x18
	public bool ignoreTimeScale; // 0x1C
	public bool loop; // 0x1D
	public Sprite[] frames; // 0x20
	private SpriteRenderer mUnitySprite; // 0x28
	private UI2DSprite mNguiSprite; // 0x30
	private int mIndex; // 0x38
	private float mUpdate; // 0x3C

	// Properties
	public bool isPlaying { get; }
	public int framesPerSecond { get; set; }

	// Methods

	// RVA: 0x249F4D0 Offset: 0x249F4D0 VA: 0x249F4D0
	public void .ctor() { }

	// RVA: 0x249F4E8 Offset: 0x249F4E8 VA: 0x249F4E8
	public bool get_isPlaying() { }

	// RVA: 0x249F4F0 Offset: 0x249F4F0 VA: 0x249F4F0
	public int get_framesPerSecond() { }

	// RVA: 0x249F4F8 Offset: 0x249F4F8 VA: 0x249F4F8
	public void set_framesPerSecond(int value) { }

	// RVA: 0x249F500 Offset: 0x249F500 VA: 0x249F500
	public void Play() { }

	// RVA: 0x249F8B0 Offset: 0x249F8B0 VA: 0x249F8B0
	public void Pause() { }

	// RVA: 0x249F8BC Offset: 0x249F8BC VA: 0x249F8BC
	public void ResetToBeginning() { }

	// RVA: 0x249F908 Offset: 0x249F908 VA: 0x249F908
	private void Start() { }

	// RVA: 0x249F90C Offset: 0x249F90C VA: 0x249F90C
	private void Update() { }

	// RVA: 0x249F5D8 Offset: 0x249F5D8 VA: 0x249F5D8
	private void UpdateSprite() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC99020 Offset: 0xC99020 VA: 0xC99020
[AddComponentMenu] // RVA: 0xC99020 Offset: 0xC99020 VA: 0xC99020
public class UIAnchor : MonoBehaviour // TypeDefIndex: 12164
{
	// Fields
	public Camera uiCamera; // 0x18
	public GameObject container; // 0x20
	public UIAnchor.Side side; // 0x28
	public bool runOnlyOnce; // 0x2C
	public Vector2 relativeOffset; // 0x30
	public Vector2 pixelOffset; // 0x38
	[HideInInspector] // RVA: 0xCF1F54 Offset: 0xCF1F54 VA: 0xCF1F54
	[SerializeField] // RVA: 0xCF1F54 Offset: 0xCF1F54 VA: 0xCF1F54
	private UIWidget widgetContainer; // 0x40
	private Transform mTrans; // 0x48
	private Animation mAnim; // 0x50
	private Rect mRect; // 0x58
	private UIRoot mRoot; // 0x68
	private bool mStarted; // 0x70

	// Methods

	// RVA: 0x24A0244 Offset: 0x24A0244 VA: 0x24A0244
	public void .ctor() { }

	// RVA: 0x24A02D8 Offset: 0x24A02D8 VA: 0x24A02D8
	private void Awake() { }

	// RVA: 0x24A0420 Offset: 0x24A0420 VA: 0x24A0420
	private void OnDestroy() { }

	// RVA: 0x24A0540 Offset: 0x24A0540 VA: 0x24A0540
	private void ScreenSizeChanged() { }

	// RVA: 0x24A11D8 Offset: 0x24A11D8 VA: 0x24A11D8
	private void Start() { }

	// RVA: 0x24A0558 Offset: 0x24A0558 VA: 0x24A0558
	private void Update() { }
}

// Namespace: 
