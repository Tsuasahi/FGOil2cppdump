	public int dispLimitCount; // 0x4C

	// Methods

	// RVA: 0x15E5B08 Offset: 0x15E5B08 VA: 0x15E5B08
	public void .ctor() { }
}

// Namespace: 
public class SvtUseSkillData // TypeDefIndex: 9519
{
	// Fields
	public int[] svtUseSkillIdList; // 0x10
	public int[] svtSkillLvList; // 0x18
	public int[] svtSkillNumsList; // 0x20

	// Methods

	// RVA: 0x15E5B10 Offset: 0x15E5B10 VA: 0x15E5B10
	public void .ctor() { }
}

// Namespace: 
public class EventBannerControl : BaseMonoBehaviour // TypeDefIndex: 9520
{
	// Fields
	public CombineInitData combineData; // 0x18
	public GameObject bannerPf; // 0x20
	public UIGrid bannerGrid; // 0x28
	private List<int> bannerIdList; // 0x30
	private List<GameObject> bannerObjList; // 0x38

	// Methods

	// RVA: 0x1D1CC3C Offset: 0x1D1CC3C VA: 0x1D1CC3C
	public void .ctor() { }

	// RVA: 0x1D1CCD4 Offset: 0x1D1CCD4 VA: 0x1D1CCD4
	public void ClearBanner() { }

	// RVA: 0x1D1CE38 Offset: 0x1D1CE38 VA: 0x1D1CE38
	public void setBannerList() { }
}

// Namespace: 
public class EventNoticeControl : MonoBehaviour // TypeDefIndex: 9521
{
	// Fields
	private const int CONDENSE_THRESHOLD = 320;
	private const float CONDENSE_MAGNIFICATION = 0.8;
	[SerializeField] // RVA: 0xCD5D70 Offset: 0xCD5D70 VA: 0xCD5D70
	private UILabel eventDetailLabel; // 0x18
	[SerializeField] // RVA: 0xCD5D80 Offset: 0xCD5D80 VA: 0xCD5D80
	private UISprite eventDetailSprite; // 0x20
	[SerializeField] // RVA: 0xCD5D90 Offset: 0xCD5D90 VA: 0xCD5D90
	private UILabel eventRemainLabel; // 0x28
	private List<EventNoticeControl.EventInfo> eventInfoList; // 0x30
	private bool isNeedToUpdate; // 0x38
	private int eventInfoIndex; // 0x3C

	// Properties
	private bool IsMultiple { get; }

	// Methods

	// RVA: 0x1EBEFC0 Offset: 0x1EBEFC0 VA: 0x1EBEFC0
	public void .ctor() { }

	// RVA: 0x1EBF030 Offset: 0x1EBF030 VA: 0x1EBF030
	public void Initialize() { }

	// RVA: 0x1EBF180 Offset: 0x1EBF180 VA: 0x1EBF180
	public void SetCombineEventData(EventInfoData data) { }

	// RVA: 0x1EBF430 Offset: 0x1EBF430 VA: 0x1EBF430
	public void UpdateEventNotice() { }

	// RVA: 0x1EBF098 Offset: 0x1EBF098 VA: 0x1EBF098
	private void InitLabelAndSprite() { }

	// RVA: 0x1EBF50C Offset: 0x1EBF50C VA: 0x1EBF50C
	private bool GetIsNeedToInfoUpdate(List<EventNoticeControl.EventInfo> eventInfolist, long now, bool isNeedToUpdate) { }

	// RVA: 0x1EBF8D0 Offset: 0x1EBF8D0 VA: 0x1EBF8D0
	public static void SetRemainTime(long remainTime, UILabel label) { }

	// RVA: 0x1EBFC00 Offset: 0x1EBFC00 VA: 0x1EBFC00
	public void ChangeEventInfo() { }

	// RVA: 0x1EBFCA0 Offset: 0x1EBFCA0 VA: 0x1EBFCA0
	public void SetAlpha(float alpha) { }

	// RVA: 0x1EBF678 Offset: 0x1EBF678 VA: 0x1EBF678
	private void SetLabelAndSprite(int index) { }

	// RVA: 0x1EBF60C Offset: 0x1EBF60C VA: 0x1EBF60C
	private bool get_IsMultiple() { }
}

// Namespace: 
private class EventNoticeControl.EventInfo // TypeDefIndex: 9522
{
	// Fields
	private const string SPRITE_NAME_BASE = "synthesis_notice_";
	[CompilerGeneratedAttribute] // RVA: 0xCD5DA0 Offset: 0xCD5DA0 VA: 0xCD5DA0
	[DebuggerBrowsableAttribute] // RVA: 0xCD5DA0 Offset: 0xCD5DA0 VA: 0xCD5DA0
	private string <EventName>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCD5DDC Offset: 0xCD5DDC VA: 0xCD5DDC
	[DebuggerBrowsableAttribute] // RVA: 0xCD5DDC Offset: 0xCD5DDC VA: 0xCD5DDC
	private string <SpriteName>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCD5E18 Offset: 0xCD5E18 VA: 0xCD5E18
	[DebuggerBrowsableAttribute] // RVA: 0xCD5E18 Offset: 0xCD5E18 VA: 0xCD5E18
	private long <EndAt>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCD5E54 Offset: 0xCD5E54 VA: 0xCD5E54
	[DebuggerBrowsableAttribute] // RVA: 0xCD5E54 Offset: 0xCD5E54 VA: 0xCD5E54
	private long <StartAt>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCD5E90 Offset: 0xCD5E90 VA: 0xCD5E90
	[DebuggerBrowsableAttribute] // RVA: 0xCD5E90 Offset: 0xCD5E90 VA: 0xCD5E90
	private bool <IsSprite>k__BackingField; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xCD5ECC Offset: 0xCD5ECC VA: 0xCD5ECC
	[DebuggerBrowsableAttribute] // RVA: 0xCD5ECC Offset: 0xCD5ECC VA: 0xCD5ECC
	private bool <IsTimeOver>k__BackingField; // 0x31

	// Properties
	public string EventName { get; set; }
	public string SpriteName { get; set; }
	public long EndAt { get; set; }
	public long StartAt { get; set; }
	public bool IsSprite { get; set; }
	public bool IsTimeOver { get; set; }

	// Methods

	// RVA: 0x1EBF218 Offset: 0x1EBF218 VA: 0x1EBF218
	public void .ctor(EventInfoData eventInfoData) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3C9B4 Offset: 0xD3C9B4 VA: 0xD3C9B4
	// RVA: 0x1EBFD58 Offset: 0x1EBFD58 VA: 0x1EBFD58
	public string get_EventName() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3C9C4 Offset: 0xD3C9C4 VA: 0xD3C9C4
	// RVA: 0x1EBFD60 Offset: 0x1EBFD60 VA: 0x1EBFD60
	private void set_EventName(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3C9D4 Offset: 0xD3C9D4 VA: 0xD3C9D4
	// RVA: 0x1EBFD50 Offset: 0x1EBFD50 VA: 0x1EBFD50
	public string get_SpriteName() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3C9E4 Offset: 0xD3C9E4 VA: 0xD3C9E4
	// RVA: 0x1EBFD84 Offset: 0x1EBFD84 VA: 0x1EBFD84
	private void set_SpriteName(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3C9F4 Offset: 0xD3C9F4 VA: 0xD3C9F4
	// RVA: 0x1EBF8B4 Offset: 0x1EBF8B4 VA: 0x1EBF8B4
	public long get_EndAt() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CA04 Offset: 0xD3CA04 VA: 0xD3CA04
	// RVA: 0x1EBFD68 Offset: 0x1EBFD68 VA: 0x1EBFD68
	private void set_EndAt(long value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CA14 Offset: 0xD3CA14 VA: 0xD3CA14
	// RVA: 0x1EBF8C8 Offset: 0x1EBF8C8 VA: 0x1EBF8C8
	public long get_StartAt() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CA24 Offset: 0xD3CA24 VA: 0xD3CA24
	// RVA: 0x1EBFD70 Offset: 0x1EBFD70 VA: 0x1EBFD70
	private void set_StartAt(long value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CA34 Offset: 0xD3CA34 VA: 0xD3CA34
	// RVA: 0x1EBFD48 Offset: 0x1EBFD48 VA: 0x1EBFD48
	public bool get_IsSprite() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CA44 Offset: 0xD3CA44 VA: 0xD3CA44
	// RVA: 0x1EBFD8C Offset: 0x1EBFD8C VA: 0x1EBFD8C
	private void set_IsSprite(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CA54 Offset: 0xD3CA54 VA: 0xD3CA54
	// RVA: 0x1EBF8AC Offset: 0x1EBF8AC VA: 0x1EBF8AC
	public bool get_IsTimeOver() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CA64 Offset: 0xD3CA64 VA: 0xD3CA64
	// RVA: 0x1EBFD78 Offset: 0x1EBFD78 VA: 0x1EBFD78
	private void set_IsTimeOver(bool value) { }

	// RVA: 0x1EBF8BC Offset: 0x1EBF8BC VA: 0x1EBF8BC
	public void SetIsTimeOver() { }
}

// Namespace: 
public class FriendshipExceedControl : CombineMenuControl // TypeDefIndex: 9523
{
	// Fields
	private readonly Color NORMAL_COLOR; // 0x64
	[SerializeField] // RVA: 0xCD5F08 Offset: 0xCD5F08 VA: 0xCD5F08
	private FriendshipExceedInfoComponent friendshipExceedInfoComponent; // 0x78
	[SerializeField] // RVA: 0xCD5F18 Offset: 0xCD5F18 VA: 0xCD5F18
	private UIPanel panel; // 0x80
	[SerializeField] // RVA: 0xCD5F28 Offset: 0xCD5F28 VA: 0xCD5F28
	private GameObject characterGraphicBase; // 0x88
	[SerializeField] // RVA: 0xCD5F38 Offset: 0xCD5F38 VA: 0xCD5F38
	private UILabel preSelectBaseLabel; // 0x90
	[SerializeField] // RVA: 0xCD5F48 Offset: 0xCD5F48 VA: 0xCD5F48
	private GameObject baseSelectInfoLabel; // 0x98
	[SerializeField] // RVA: 0xCD5F58 Offset: 0xCD5F58 VA: 0xCD5F58
	private UILabel detailInfoLabel; // 0xA0
	[SerializeField] // RVA: 0xCD5F68 Offset: 0xCD5F68 VA: 0xCD5F68
	private UILabel userQpLabel; // 0xA8
	[SerializeField] // RVA: 0xCD5F78 Offset: 0xCD5F78 VA: 0xCD5F78
	private UILabel requiredQpLabel; // 0xB0
	[SerializeField] // RVA: 0xCD5F88 Offset: 0xCD5F88 VA: 0xCD5F88
	private UISprite combineButtonBg; // 0xB8
	[SerializeField] // RVA: 0xCD5F98 Offset: 0xCD5F98 VA: 0xCD5F98
	private UILabel combineButtonText; // 0xC0
	[SerializeField] // RVA: 0xCD5FA8 Offset: 0xCD5FA8 VA: 0xCD5FA8
	private UISprite combineTextImage; // 0xC8
	[SerializeField] // RVA: 0xCD5FB8 Offset: 0xCD5FB8 VA: 0xCD5FB8
	private List<LimitCntUpItemComponent> limitCntUpItemComponentList; // 0xD0
	[SerializeField] // RVA: 0xCD5FC8 Offset: 0xCD5FC8 VA: 0xCD5FC8
	private List<GameObject> materialImages; // 0xD8
	[SerializeField] // RVA: 0xCD5FD8 Offset: 0xCD5FD8 VA: 0xCD5FD8
	private UIButton executeButton; // 0xE0
	[SerializeField] // RVA: 0xCD5FE8 Offset: 0xCD5FE8 VA: 0xCD5FE8
	private UITouchPress baseServantTouchPress; // 0xE8
	[SerializeField] // RVA: 0xCD5FF8 Offset: 0xCD5FF8 VA: 0xCD5FF8
	private GameObject splitImage; // 0xF0
	private bool isBaseSelected; // 0xF8
	private bool isFriendshipRankMax; // 0xF9
	private bool isQpEnough; // 0xFA
	private bool isItemEnough; // 0xFB
	private bool isButtonInitialized; // 0xFC
	private int userQp; // 0x100
	private int requiredQp; // 0x104
	private UserServantCollectionEntity baseUserServantCollectionEntity; // 0x108
	private UICharaGraphTexture characterGraphic; // 0x110
	private Vector3 center; // 0x118
	[CompilerGeneratedAttribute] // RVA: 0xCD6008 Offset: 0xCD6008 VA: 0xCD6008
	[DebuggerBrowsableAttribute] // RVA: 0xCD6008 Offset: 0xCD6008 VA: 0xCD6008
	private FriendshipEntity <FriendshipEntity>k__BackingField; // 0x128

	// Properties
	public bool IsExecutable { get; }
	public List<LimitCntUpItemComponent> ItemInfoList { get; }
	public FriendshipEntity FriendshipEntity { get; set; }

	// Methods

	// RVA: 0x1E835D8 Offset: 0x1E835D8 VA: 0x1E835D8
	public void .ctor() { }

	// RVA: 0x1E83644 Offset: 0x1E83644 VA: 0x1E83644
	public bool get_IsExecutable() { }

	// RVA: 0x1E83674 Offset: 0x1E83674 VA: 0x1E83674
	public List<LimitCntUpItemComponent> get_ItemInfoList() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CA74 Offset: 0xD3CA74 VA: 0xD3CA74
	// RVA: 0x1E8367C Offset: 0x1E8367C VA: 0x1E8367C
	public FriendshipEntity get_FriendshipEntity() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CA84 Offset: 0xD3CA84 VA: 0xD3CA84
	// RVA: 0x1E83684 Offset: 0x1E83684 VA: 0x1E83684
	private void set_FriendshipEntity(FriendshipEntity value) { }

	// RVA: 0x1E8368C Offset: 0x1E8368C VA: 0x1E8368C Slot: 6
	protected override EventTutorialMaster.OpenType GetTutorialOpenType() { }

	// RVA: 0x1E83694 Offset: 0x1E83694 VA: 0x1E83694
	public void InitFriendshipExceed() { }

	// RVA: 0x1E83BD8 Offset: 0x1E83BD8 VA: 0x1E83BD8
	public void CheckTutorial() { }

	// RVA: 0x1E839AC Offset: 0x1E839AC VA: 0x1E839AC
	private void InitInfo() { }

	// RVA: 0x1E837EC Offset: 0x1E837EC VA: 0x1E837EC
	private void InitButtons() { }

	// RVA: 0x1E83BFC Offset: 0x1E83BFC VA: 0x1E83BFC
	private void SetUserQpInfo() { }

	// RVA: 0x1E83C90 Offset: 0x1E83C90 VA: 0x1E83C90
	private void SetRequiredQpInfo() { }

	// RVA: 0x1E84490 Offset: 0x1E84490 VA: 0x1E84490
	public void SetSelectedBaseServantId(UserServantEntity selectData) { }

	// RVA: 0x1E84588 Offset: 0x1E84588 VA: 0x1E84588
	public void ShowItemListInfo() { }

	// RVA: 0x1E84630 Offset: 0x1E84630 VA: 0x1E84630
	private void SetFriendshipExceedInfo() { }

	// RVA: 0x1E84A00 Offset: 0x1E84A00 VA: 0x1E84A00
	private void SetLimitCntUpItemComponents() { }

	// RVA: 0x1E84704 Offset: 0x1E84704 VA: 0x1E84704
	private void SetEntities() { }

	// RVA: 0x1E83DB0 Offset: 0x1E83DB0 VA: 0x1E83DB0
	private void SetExecuteButtonState() { }

	// RVA: 0x1E84D4C Offset: 0x1E84D4C VA: 0x1E84D4C
	public void SetBaseServantCardImage(UserServantEntity entity) { }

	// RVA: 0x1E83FF8 Offset: 0x1E83FF8 VA: 0x1E83FF8
	private void ResetCharacterGraphic() { }

	// RVA: 0x1E84F0C Offset: 0x1E84F0C VA: 0x1E84F0C
	public void OnClickExecute() { }

	// RVA: 0x1E84FB8 Offset: 0x1E84FB8 VA: 0x1E84FB8
	public void SetInfoMessage(CombineRootComponent.StateType state) { }
}

// Namespace: 
public class FriendshipExceedFriendshipGauge : MonoBehaviour // TypeDefIndex: 9524
{
	// Fields
	[SerializeField] // RVA: 0xCD6044 Offset: 0xCD6044 VA: 0xCD6044
	private UIExtrusionLabel levelLabel; // 0x18
	[SerializeField] // RVA: 0xCD6054 Offset: 0xCD6054 VA: 0xCD6054
	private UILabel maxLabel; // 0x20
	[SerializeField] // RVA: 0xCD6064 Offset: 0xCD6064 VA: 0xCD6064
	private UISlider[] normalGaugeSliderList; // 0x28
	[SerializeField] // RVA: 0xCD6074 Offset: 0xCD6074 VA: 0xCD6074
	private UISlider[] exceededGaugeSliderList; // 0x30
	[SerializeField] // RVA: 0xCD6084 Offset: 0xCD6084 VA: 0xCD6084
	private GameObject normalRoot; // 0x38
	[SerializeField] // RVA: 0xCD6094 Offset: 0xCD6094 VA: 0xCD6094
	private GameObject exceededRoot; // 0x40
	[SerializeField] // RVA: 0xCD60A4 Offset: 0xCD60A4 VA: 0xCD60A4
	private GameObject exceededIcon; // 0x48
	[SerializeField] // RVA: 0xCD60B4 Offset: 0xCD60B4 VA: 0xCD60B4
	private UISprite exceededIconUISprite; // 0x50
	private bool isInitUISpriteAtlas; // 0x58
	private readonly Color DISABLE_COLOR; // 0x5C
	private readonly Color EXCEEDED_COLOR; // 0x6C

	// Methods

	// RVA: 0x1E851DC Offset: 0x1E851DC VA: 0x1E851DC
	public void .ctor() { }

	// RVA: 0x1E85258 Offset: 0x1E85258 VA: 0x1E85258
	public void Set(int level, int max, float fraction, FriendshipExceedFriendshipGauge.Type type) { }

	// RVA: 0x1E8558C Offset: 0x1E8558C VA: 0x1E8558C
	private void SetGaugeList(UISlider[] sliderList, int level, int max, float fraction) { }

	// RVA: 0x1E853D4 Offset: 0x1E853D4 VA: 0x1E853D4
	private void SetLabel(int level, int max, FriendshipExceedFriendshipGauge.Type type) { }

	// RVA: 0x1E85348 Offset: 0x1E85348 VA: 0x1E85348
	private void InitUISpriteAtlas() { }
}

// Namespace: 
public enum FriendshipExceedFriendshipGauge.Type // TypeDefIndex: 9525
{
	// Fields
	public int value__; // 0x0
	public const FriendshipExceedFriendshipGauge.Type Normal = 0;
	public const FriendshipExceedFriendshipGauge.Type Disable = 1;
	public const FriendshipExceedFriendshipGauge.Type Exceeded = 2;
}

// Namespace: 
public class FriendshipExceedInfoComponent : MonoBehaviour // TypeDefIndex: 9526
{
	// Fields
	[SerializeField] // RVA: 0xCD60C4 Offset: 0xCD60C4 VA: 0xCD60C4
	private FriendshipExceedFriendshipGauge currentFriendshipGauge; // 0x18
	[SerializeField] // RVA: 0xCD60D4 Offset: 0xCD60D4 VA: 0xCD60D4
	private FriendshipExceedFriendshipGauge resultFriendshipGauge; // 0x20
	[SerializeField] // RVA: 0xCD60E4 Offset: 0xCD60E4 VA: 0xCD60E4
	private UILabel disableLabel; // 0x28
	private readonly Color DISABLE_COLOR; // 0x30
	private bool isInitialized; // 0x40

	// Methods

	// RVA: 0x1E856A0 Offset: 0x1E856A0 VA: 0x1E856A0
	public void .ctor() { }

	// RVA: 0x1E8570C Offset: 0x1E8570C VA: 0x1E8570C
	private void InitLabel() { }

	// RVA: 0x1E840C4 Offset: 0x1E840C4 VA: 0x1E840C4
	public void SetInfo(UserServantEntity userServantEntity, UserServantCollectionEntity userServantCollectionEntity, bool isExecutable, bool isOnEffect = False, int currentMax = 0) { }
}

// Namespace: 
public class FriendshipExceedResultWindowComponent : BaseDialog // TypeDefIndex: 9527
{
	// Fields
	[SerializeField] // RVA: 0xCD60F4 Offset: 0xCD60F4 VA: 0xCD60F4
	private FriendshipExceedInfoComponent friendshipExceedInfoComponent; // 0x58

	// Methods

	// RVA: 0x1E85B88 Offset: 0x1E85B88 VA: 0x1E85B88
	public void .ctor() { }

	// RVA: 0x1E85BF0 Offset: 0x1E85BF0 VA: 0x1E85BF0
	public void SetFriendshipExceedInfo(UserServantEntity userServantEntity) { }

	// RVA: 0x1E85BF8 Offset: 0x1E85BF8 VA: 0x1E85BF8
	public void SetFriendshipExceedInfo(UserServantEntity userServantEntity, int currentMax) { }
}

// Namespace: 
public class LevelExceedControl : CombineMenuControl // TypeDefIndex: 9528
{
	// Fields
	[SerializeField] // RVA: 0xCD6104 Offset: 0xCD6104 VA: 0xCD6104
	private CombineInfoComponent combineInfoComp; // 0x68
	[SerializeField] // RVA: 0xCD6114 Offset: 0xCD6114 VA: 0xCD6114
	private GameObject preSelectBaseObj; // 0x70
	[SerializeField] // RVA: 0xCD6124 Offset: 0xCD6124 VA: 0xCD6124
	private UILabel preSelectBaseLb; // 0x78
	[SerializeField] // RVA: 0xCD6134 Offset: 0xCD6134 VA: 0xCD6134
	private GameObject baseSelectInfoLb; // 0x80
	[SerializeField] // RVA: 0xCD6144 Offset: 0xCD6144 VA: 0xCD6144
	private UILabel detailInfoLb; // 0x88
	[SerializeField] // RVA: 0xCD6154 Offset: 0xCD6154 VA: 0xCD6154
	private GameObject itemListInfo; // 0x90
	[SerializeField] // RVA: 0xCD6164 Offset: 0xCD6164 VA: 0xCD6164
	private GameObject itemInfoPrefab; // 0x98
	[SerializeField] // RVA: 0xCD6174 Offset: 0xCD6174 VA: 0xCD6174
	private UIGrid itemListGrid; // 0xA0
	[SerializeField] // RVA: 0xCD6184 Offset: 0xCD6184 VA: 0xCD6184
	private UILabel haveQpLb; // 0xA8
	[SerializeField] // RVA: 0xCD6194 Offset: 0xCD6194 VA: 0xCD6194
	private UILabel needQpLb; // 0xB0
	[SerializeField] // RVA: 0xCD61A4 Offset: 0xCD61A4 VA: 0xCD61A4
	private UISprite combineBtnBg; // 0xB8
	[SerializeField] // RVA: 0xCD61B4 Offset: 0xCD61B4 VA: 0xCD61B4
	private UISprite combineTxtImg; // 0xC0
	private bool isSelectBase; // 0xC8
	private int haveQpVal; // 0xCC
	private int spendQpVal; // 0xD0
	private UserServantEntity baseData; // 0xD8
	private UICharaGraphTexture charaGraph; // 0xE0
	[CompilerGeneratedAttribute] // RVA: 0xCD61C4 Offset: 0xCD61C4 VA: 0xCD61C4
	[DebuggerBrowsableAttribute] // RVA: 0xCD61C4 Offset: 0xCD61C4 VA: 0xCD61C4
	private List<LimitCntUpItemComponent> <itemInfoList>k__BackingField; // 0xE8
	private List<GameObject> materialItemObjList; // 0xF0
	private int[] itemIdList; // 0xF8
	private bool isMaxLv; // 0x100
	private bool isMaxLimitCnt; // 0x101
	private bool isQpNum; // 0x102
	private bool isItemNum; // 0x103
	[SerializeField] // RVA: 0xCD6200 Offset: 0xCD6200 VA: 0xCD6200
	private GameObject conductionWireInfo; // 0x108
	[SerializeField] // RVA: 0xCD6210 Offset: 0xCD6210 VA: 0xCD6210
	private UILabel conductionWireLabel; // 0x110
	[SerializeField] // RVA: 0xCD6220 Offset: 0xCD6220 VA: 0xCD6220
	private UILabel conductionButtonLabel; // 0x118

	// Properties
	public List<LimitCntUpItemComponent> itemInfoList { get; set; }

	// Methods

	// RVA: 0x172A0A8 Offset: 0x172A0A8 VA: 0x172A0A8
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CA94 Offset: 0xD3CA94 VA: 0xD3CA94
	// RVA: 0x172A0B0 Offset: 0x172A0B0 VA: 0x172A0B0
	public List<LimitCntUpItemComponent> get_itemInfoList() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CAA4 Offset: 0xD3CAA4 VA: 0xD3CAA4
	// RVA: 0x172A0B8 Offset: 0x172A0B8 VA: 0x172A0B8
	private void set_itemInfoList(List<LimitCntUpItemComponent> value) { }

	// RVA: 0x172A0C0 Offset: 0x172A0C0 VA: 0x172A0C0 Slot: 6
	protected override EventTutorialMaster.OpenType GetTutorialOpenType() { }

	// RVA: 0x172A0C8 Offset: 0x172A0C8 VA: 0x172A0C8
	public void InitLvExceed() { }

	// RVA: 0x172A240 Offset: 0x172A240 VA: 0x172A240
	private void InitDispInfo() { }

	// RVA: 0x172A634 Offset: 0x172A634 VA: 0x172A634
	private void SetHaveQpIno() { }

	// RVA: 0x172A7DC Offset: 0x172A7DC VA: 0x172A7DC
	public void CheckIsSelectBaseSvt(UserServantEntity selectBase) { }

	// RVA: 0x172A8F4 Offset: 0x172A8F4 VA: 0x172A8F4
	public void SetBaseSvtCardImg(UserServantEntity usrSvtData) { }

	// RVA: 0x172AAAC Offset: 0x172AAAC VA: 0x172AAAC
	private void CheckConductionWire() { }

	// RVA: 0x172AC20 Offset: 0x172AC20 VA: 0x172AC20
	public void ShowItemListInfo() { }

	// RVA: 0x172B394 Offset: 0x172B394 VA: 0x172B394
	private CommonConsumeEntity[] GetConsumeItemList() { }

	// RVA: 0x172B47C Offset: 0x172B47C VA: 0x172B47C
	private void SetAddConsumeItem(ServantExceedEntity svtExceedEnt, ref CommonConsumeEntity[] consumeList) { }

	// RVA: 0x172B678 Offset: 0x172B678 VA: 0x172B678
	private void AdjustMaterialItemObjList(CommonConsumeEntity[] consumeList) { }

	// RVA: 0x172ACD0 Offset: 0x172ACD0 VA: 0x172ACD0
	private void SetExceedInfo() { }

	// RVA: 0x172BC3C Offset: 0x172BC3C VA: 0x172BC3C
	private bool CheckItemHaveNum() { }

	// RVA: 0x172A48C Offset: 0x172A48C VA: 0x172A48C
	private void SetExeBtnState() { }

	// RVA: 0x172A6C8 Offset: 0x172A6C8 VA: 0x172A6C8
	public void ClearItemList() { }

	// RVA: 0x172BD10 Offset: 0x172BD10 VA: 0x172BD10
	public void OnClickExeLvExceed() { }

	// RVA: 0x172BDCC Offset: 0x172BDCC VA: 0x172BDCC
	public void OnClickCheckLvExceed() { }

	// RVA: 0x172BE88 Offset: 0x172BE88 VA: 0x172BE88
	public void OnClickExecute() { }

	// RVA: 0x172BEE0 Offset: 0x172BEE0 VA: 0x172BEE0
	public void SetStateInfoMsg(CombineRootComponent.StateType state) { }
}

// Namespace: 
public class LimitCntUpControl : CombineMenuControl // TypeDefIndex: 9529
{
	// Fields
	[SerializeField] // RVA: 0xCD6230 Offset: 0xCD6230 VA: 0xCD6230
	private CombineInfoComponent combineInfoComp; // 0x68
	[SerializeField] // RVA: 0xCD6240 Offset: 0xCD6240 VA: 0xCD6240
	private UIPanel mPanel; // 0x70
	[SerializeField] // RVA: 0xCD6250 Offset: 0xCD6250 VA: 0xCD6250
	private UISprite eventNoticeImg; // 0x78
	[SerializeField] // RVA: 0xCD6260 Offset: 0xCD6260 VA: 0xCD6260
	private UILabel preSelectBaseLb; // 0x80
	[SerializeField] // RVA: 0xCD6270 Offset: 0xCD6270 VA: 0xCD6270
	private GameObject baseSelectInfoLb; // 0x88
	[SerializeField] // RVA: 0xCD6280 Offset: 0xCD6280 VA: 0xCD6280
	private UILabel detailInfoLb; // 0x90
	[SerializeField] // RVA: 0xCD6290 Offset: 0xCD6290 VA: 0xCD6290
	private UILabel haveQpLb; // 0x98
	[SerializeField] // RVA: 0xCD62A0 Offset: 0xCD62A0 VA: 0xCD62A0
	private UILabel qpLb; // 0xA0
	[SerializeField] // RVA: 0xCD62B0 Offset: 0xCD62B0 VA: 0xCD62B0
	private UISprite combineBtnBg; // 0xA8
	[SerializeField] // RVA: 0xCD62C0 Offset: 0xCD62C0 VA: 0xCD62C0
	private UILabel combineBtnTxt; // 0xB0
	[SerializeField] // RVA: 0xCD62D0 Offset: 0xCD62D0 VA: 0xCD62D0
	private UISprite combineTxtImg; // 0xB8
	[SerializeField] // RVA: 0xCD62E0 Offset: 0xCD62E0 VA: 0xCD62E0
	private GameObject conductionWireInfo; // 0xC0
	[SerializeField] // RVA: 0xCD62F0 Offset: 0xCD62F0 VA: 0xCD62F0
	private UILabel conductionInfoLabel; // 0xC8
	[SerializeField] // RVA: 0xCD6300 Offset: 0xCD6300 VA: 0xCD6300
	private UILabel conductionButtonLabel; // 0xD0
	[SerializeField] // RVA: 0xCD6310 Offset: 0xCD6310 VA: 0xCD6310
	private List<LimitCntUpItemComponent> limitCntUpItemList; // 0xD8
	[SerializeField] // RVA: 0xCD6320 Offset: 0xCD6320 VA: 0xCD6320
	private CombineLimitUpWarningDialog combineLimitUpWarningDialog; // 0xE0
	private bool isSelectBase; // 0xE8
	private int haveQpVal; // 0xEC
	private int spendQpVal; // 0xF0
	private UserServantEntity baseData; // 0xF8
	private UICharaGraphTexture charaGraph; // 0x100
	[CompilerGeneratedAttribute] // RVA: 0xCD6330 Offset: 0xCD6330 VA: 0xCD6330
	[DebuggerBrowsableAttribute] // RVA: 0xCD6330 Offset: 0xCD6330 VA: 0xCD6330
	private List<LimitCntUpItemComponent> <itemInfoList>k__BackingField; // 0x108
	private List<EventInfoData> combineEventList; // 0x110
	private Vector3 center; // 0x118
	private bool isMaxLv; // 0x124
	private bool isQpNum; // 0x125
	private bool isItemNum; // 0x126

	// Properties
	public List<LimitCntUpItemComponent> itemInfoList { get; set; }

	// Methods

	// RVA: 0x172C21C Offset: 0x172C21C VA: 0x172C21C
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CAB4 Offset: 0xD3CAB4 VA: 0xD3CAB4
	// RVA: 0x172C224 Offset: 0x172C224 VA: 0x172C224
	public List<LimitCntUpItemComponent> get_itemInfoList() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CAC4 Offset: 0xD3CAC4 VA: 0xD3CAC4
	// RVA: 0x172C22C Offset: 0x172C22C VA: 0x172C22C
	private void set_itemInfoList(List<LimitCntUpItemComponent> value) { }

	// RVA: 0x172C234 Offset: 0x172C234 VA: 0x172C234 Slot: 6
	protected override EventTutorialMaster.OpenType GetTutorialOpenType() { }

	// RVA: 0x172C23C Offset: 0x172C23C VA: 0x172C23C
	public void InitLimitUp() { }

	// RVA: 0x172C544 Offset: 0x172C544 VA: 0x172C544
	private void InitItemInfo() { }

	// RVA: 0x172C9FC Offset: 0x172C9FC VA: 0x172C9FC
	private void SetHaveQpIno() { }

	// RVA: 0x172CAC4 Offset: 0x172CAC4 VA: 0x172CAC4
	public void CheckIsSelectBaseSvt(UserServantEntity selectBase) { }

	// RVA: 0x172CBDC Offset: 0x172CBDC VA: 0x172CBDC
	public void ShowItemListInfo() { }

	// RVA: 0x172D5A8 Offset: 0x172D5A8 VA: 0x172D5A8
	public void SetBaseSvtCardImg(UserServantEntity usrSvtData) { }

	// RVA: 0x172D760 Offset: 0x172D760 VA: 0x172D760
	private void CheckConductionWire() { }

	// RVA: 0x172CC84 Offset: 0x172CC84 VA: 0x172CC84
	private void SetLimitUpInfo() { }

	// RVA: 0x172D8C0 Offset: 0x172D8C0 VA: 0x172D8C0
	private bool CheckItemHaveNum() { }

	// RVA: 0x172C7D0 Offset: 0x172C7D0 VA: 0x172C7D0
	private void SetExeBtnState() { }

	// RVA: 0x172D98C Offset: 0x172D98C VA: 0x172D98C
	public void OnClickExeLimitUp() { }

	// RVA: 0x172DA4C Offset: 0x172DA4C VA: 0x172DA4C
	public void SetStateInfoMsg(CombineRootComponent.StateType state) { }

	// RVA: 0x172DDA0 Offset: 0x172DDA0 VA: 0x172DDA0
	public void OnClickLimitUpConductionWire() { }
}

// Namespace: 
public class LimitCntUpItemComponent : MonoBehaviour // TypeDefIndex: 9530
{
	// Fields
	public GameObject itemInfo; // 0x18
	public GameObject statusInfo; // 0x20
	public UILabel needTitleLb; // 0x28
	public UILabel needNumLb; // 0x30
	public UILabel haveTitleLb; // 0x38
	public UILabel haveNumLb; // 0x40
	public ItemIconComponent itemIconComp; // 0x48
	[SerializeField] // RVA: 0xCD636C Offset: 0xCD636C VA: 0xCD636C
	private UISprite maskSprite; // 0x50
	private bool disableOpenItemDetailDialog; // 0x58
	private int currentItemId; // 0x5C
	private int haveItemNum; // 0x60
	private int needItemNum; // 0x64
	private bool isItemNum; // 0x68
	private ItemEntity itemEnt; // 0x70
	private int itemImgId; // 0x78

	// Methods

	// RVA: 0x172DE24 Offset: 0x172DE24 VA: 0x172DE24
	public void .ctor() { }

	// RVA: 0x172B76C Offset: 0x172B76C VA: 0x172B76C
	public void setLimitUpItemInfo(long usrId, int itemId, int needNum) { }

	// RVA: 0x172DE2C Offset: 0x172DE2C VA: 0x172DE2C
	public void SetItemIcon(int itemId) { }

	// RVA: 0x172DF48 Offset: 0x172DF48 VA: 0x172DF48
	public void SetItemEntity(int id) { }

	// RVA: 0x172DFEC Offset: 0x172DFEC VA: 0x172DFEC
	public ItemEntity GetItemEntity() { }

	// RVA: 0x172BD08 Offset: 0x172BD08 VA: 0x172BD08
	public bool checkItemNum() { }

	// RVA: 0x172DFF4 Offset: 0x172DFF4 VA: 0x172DFF4
	public int getItemId() { }

	// RVA: 0x172DFFC Offset: 0x172DFFC VA: 0x172DFFC
	public int getItemImgId() { }

	// RVA: 0x172E004 Offset: 0x172E004 VA: 0x172E004
	public void OnClickItem() { }

	// RVA: 0x172E168 Offset: 0x172E168 VA: 0x172E168
	private void CloseItemDetail(bool isDecide) { }

	// RVA: 0x172CA90 Offset: 0x172CA90 VA: 0x172CA90
	public void enableDispItemInfo() { }

	// RVA: 0x172E1F4 Offset: 0x172E1F4 VA: 0x172E1F4
	public void SetMaskSprite(bool isActive) { }

	// RVA: 0x172E2BC Offset: 0x172E2BC VA: 0x172E2BC
	public void DisableOpenItemDetailDialog(bool enable) { }
}

// Namespace: 
public class SpecialAscensionControl : CombineMenuControl // TypeDefIndex: 9531
{
	// Fields
	public static readonly string PRIVILEGE_KEY_NAME; // 0x0
	private static readonly int SPEND_QP_VAL; // 0x8
	[SerializeField] // RVA: 0xCD637C Offset: 0xCD637C VA: 0xCD637C
	private UILabel preSelectBaseLb; // 0x68
	[SerializeField] // RVA: 0xCD638C Offset: 0xCD638C VA: 0xCD638C
	private CombineInfoComponent combineInfoComp; // 0x70
	[SerializeField] // RVA: 0xCD639C Offset: 0xCD639C VA: 0xCD639C
	private GameObject baseSelectInfoLb; // 0x78
	[SerializeField] // RVA: 0xCD63AC Offset: 0xCD63AC VA: 0xCD63AC
	private UILabel detailInfoLb; // 0x80
	[SerializeField] // RVA: 0xCD63BC Offset: 0xCD63BC VA: 0xCD63BC
	private UILabel haveQpLb; // 0x88
	[SerializeField] // RVA: 0xCD63CC Offset: 0xCD63CC VA: 0xCD63CC
	private UILabel qpLb; // 0x90
	[SerializeField] // RVA: 0xCD63DC Offset: 0xCD63DC VA: 0xCD63DC
	private UISprite combineBtn; // 0x98
	[SerializeField] // RVA: 0xCD63EC Offset: 0xCD63EC VA: 0xCD63EC
	private UISprite combineTxtImg; // 0xA0
	private bool isSelectBase; // 0xA8
	private UICharaGraphTexture charaGraph; // 0xB0
	private CheckCombineResStatus combineResStatus; // 0xB8
	public int effectCnt; // 0xC0
	public bool pushExeButton; // 0xC4
	private bool helpSeSilent; // 0xC5

	// Methods

	// RVA: 0x1959A1C Offset: 0x1959A1C VA: 0x1959A1C
	public void .ctor() { }

	// RVA: 0x1959A24 Offset: 0x1959A24 VA: 0x1959A24 Slot: 6
	protected override EventTutorialMaster.OpenType GetTutorialOpenType() { }

	// RVA: 0x1959A2C Offset: 0x1959A2C VA: 0x1959A2C
	private void Start() { }

	// RVA: 0x1959A9C Offset: 0x1959A9C VA: 0x1959A9C
	public void SetUp() { }

	// RVA: 0x1959D08 Offset: 0x1959D08 VA: 0x1959D08
	public void Refresh(UserServantEntity selectBaseSvt) { }

	// RVA: 0x1959F60 Offset: 0x1959F60 VA: 0x1959F60
	private bool SelectedBaseSvt() { }

	// RVA: 0x195A48C Offset: 0x195A48C VA: 0x195A48C
	private void SetExeBtnState() { }

	// RVA: 0x195A630 Offset: 0x195A630 VA: 0x195A630
	public bool CanExeSpecialAscension() { }

	// RVA: 0x1959D78 Offset: 0x1959D78 VA: 0x1959D78
	private void SetStateInfoMsg() { }

	// RVA: 0x1959F70 Offset: 0x1959F70 VA: 0x1959F70
	private void SetBaseSvtCardImg() { }

	// RVA: 0x195A1AC Offset: 0x195A1AC VA: 0x195A1AC
	private void SetCombineInfo() { }

	// RVA: 0x195A6AC Offset: 0x195A6AC VA: 0x195A6AC
	public void OnClickSpecialAscension() { }

	// RVA: 0x195A738 Offset: 0x195A738 VA: 0x195A738
	private bool HaveCombineOtherServant(UserServantEntity userSvtEntity) { }

	// RVA: 0x195AC00 Offset: 0x195AC00 VA: 0x195AC00
	private bool HaveRequestItemAndQp(UserServantEntity userSvtEntity) { }

	// RVA: 0x195B268 Offset: 0x195B268 VA: 0x195B268
	public int GetEffectLimitCount() { }

	// RVA: 0x195B2FC Offset: 0x195B2FC VA: 0x195B2FC
	public void GetHpAndAtk(out int afterHp, out int afterAtk, UserServantEntity userServantEntity) { }

	// RVA: 0x195B448 Offset: 0x195B448 VA: 0x195B448
	public List<int> GetEffectRequestItemList(int limitCnt) { }

	// RVA: 0x195B604 Offset: 0x195B604 VA: 0x195B604 Slot: 5
	protected override void OnClickHelp() { }

	// RVA: 0x195B6F4 Offset: 0x195B6F4 VA: 0x195B6F4
	private static void .cctor() { }
}

// Namespace: 
public class CombineHelpInfo // TypeDefIndex: 9532
{
	// Fields
	public int kind; // 0x10
	public string textCode; // 0x18
	public string imageName; // 0x20
	public int line; // 0x28

	// Methods

	// RVA: 0x157E898 Offset: 0x157E898 VA: 0x157E898
	public void .ctor(CombineHelpListViewManager.ItemKind kind, string textCode, string imageName, int line) { }
}

// Namespace: 
public class CombineHelpListViewItem : ListViewItem // TypeDefIndex: 9533
{
	// Fields
	protected CombineHelpInfo info; // 0x70
	protected bool isUse; // 0x78

	// Properties
	public CombineHelpInfo Info { get; }
	public string InfoText { get; }
	public string ImageName { get; }
	public bool IsUse { get; }
	public int LineCnt { get; }
	public int Kind { get; }

	// Methods

	// RVA: 0x157E8E8 Offset: 0x157E8E8 VA: 0x157E8E8
	public void .ctor(int index, CombineHelpInfo info, bool isUse) { }

	// RVA: 0x157E928 Offset: 0x157E928 VA: 0x157E928
	public CombineHelpInfo get_Info() { }

	// RVA: 0x157E930 Offset: 0x157E930 VA: 0x157E930
	public string get_InfoText() { }

	// RVA: 0x157E9AC Offset: 0x157E9AC VA: 0x157E9AC
	public string get_ImageName() { }

	// RVA: 0x157E9D8 Offset: 0x157E9D8 VA: 0x157E9D8
	public bool get_IsUse() { }

	// RVA: 0x157E9E0 Offset: 0x157E9E0 VA: 0x157E9E0
	public int get_LineCnt() { }

	// RVA: 0x157EA0C Offset: 0x157EA0C VA: 0x157EA0C
	public int get_Kind() { }
}

// Namespace: 
public class CombineHelpListViewItemDraw : MonoBehaviour // TypeDefIndex: 9534
{
	// Fields
	[SerializeField] // RVA: 0xCD63FC Offset: 0xCD63FC VA: 0xCD63FC
	private UIAtlas baseAtlas; // 0x18
	[SerializeField] // RVA: 0xCD640C Offset: 0xCD640C VA: 0xCD640C
	protected UISprite rangeSprite; // 0x20
	[SerializeField] // RVA: 0xCD641C Offset: 0xCD641C VA: 0xCD641C
	protected UISprite baseImageSprite; // 0x28
	[SerializeField] // RVA: 0xCD642C Offset: 0xCD642C VA: 0xCD642C
	protected UISprite baseTextSprite; // 0x30
	[SerializeField] // RVA: 0xCD643C Offset: 0xCD643C VA: 0xCD643C
	protected UILabel infoTextLabel; // 0x38
	private UIAtlas baseImageBasicAtlas; // 0x40

	// Methods

	// RVA: 0x157EA38 Offset: 0x157EA38 VA: 0x157EA38
	public void .ctor() { }

	// RVA: 0x157EA40 Offset: 0x157EA40 VA: 0x157EA40
	private void Awake() { }

	// RVA: 0x157EA7C Offset: 0x157EA7C VA: 0x157EA7C
	public void SetItem(CombineHelpListViewItem item, CombineHelpListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public enum CombineHelpListViewItemDraw.DispMode // TypeDefIndex: 9535
{
	// Fields
	public int value__; // 0x0
	public const CombineHelpListViewItemDraw.DispMode INVISIBLE = 0;
	public const CombineHelpListViewItemDraw.DispMode INVALID = 1;
	public const CombineHelpListViewItemDraw.DispMode VALID = 2;
}

// Namespace: 
public class CombineHelpListViewManager : ListViewManager // TypeDefIndex: 9536
{
	// Fields
	protected static CombineHelpInfo[] itemInfo; // 0x0
	protected static CombineHelpListViewManager.ItemKind[] KindList; // 0x8
	protected CombineHelpListViewManager.InitMode initMode; // 0x138
	[SerializeField] // RVA: 0xCD644C Offset: 0xCD644C VA: 0xCD644C
	protected GameObject BaseWindow; // 0x140
	[SerializeField] // RVA: 0xCD645C Offset: 0xCD645C VA: 0xCD645C
	protected CombineHelpMenu baseDialog; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xCD646C Offset: 0xCD646C VA: 0xCD646C
	[DebuggerBrowsableAttribute] // RVA: 0xCD646C Offset: 0xCD646C VA: 0xCD646C
	private CombineHelpListViewManager.CallbackFunc callbackFunc; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xCD64A8 Offset: 0xCD64A8 VA: 0xCD64A8
	[DebuggerBrowsableAttribute] // RVA: 0xCD64A8 Offset: 0xCD64A8 VA: 0xCD64A8
	private CombineHelpListViewManager.CallbackFunc2 callbackFunc2; // 0x158
	protected int callbackCount; // 0x160
	protected static readonly string HELP_BASE_SPRITE_PATH; // 0x10
	protected static readonly string HELP_BASE_SPRITE_NAME; // 0x18
	protected static readonly string HELP_BASE_ALPHA_PATH; // 0x20
	protected static readonly string HELP_BASE_ALPHA_NAME; // 0x28

	// Properties
	public List<CombineHelpListViewObject> ObjectList { get; }
	public List<CombineHelpListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x157EF30 Offset: 0x157EF30 VA: 0x157EF30
	public void .ctor() { }

	// RVA: 0x157EF38 Offset: 0x157EF38 VA: 0x157EF38
	protected void add_callbackFunc(CombineHelpListViewManager.CallbackFunc value) { }

	// RVA: 0x157F028 Offset: 0x157F028 VA: 0x157F028
	protected void remove_callbackFunc(CombineHelpListViewManager.CallbackFunc value) { }

	// RVA: 0x157F118 Offset: 0x157F118 VA: 0x157F118
	protected void add_callbackFunc2(CombineHelpListViewManager.CallbackFunc2 value) { }

	// RVA: 0x157F208 Offset: 0x157F208 VA: 0x157F208
	protected void remove_callbackFunc2(CombineHelpListViewManager.CallbackFunc2 value) { }

	// RVA: 0x157F2F8 Offset: 0x157F2F8 VA: 0x157F2F8
	public List<CombineHelpListViewObject> get_ObjectList() { }

	// RVA: 0x157F4C4 Offset: 0x157F4C4 VA: 0x157F4C4
	public List<CombineHelpListViewObject> get_ClippingObjectList() { }

	// RVA: 0x157F7A4 Offset: 0x157F7A4 VA: 0x157F7A4
	public void LoadBaseSprite() { }

	// RVA: 0x157F99C Offset: 0x157F99C VA: 0x157F99C
	public void ReleaseBaseSprite() { }

	// RVA: 0x157FAC4 Offset: 0x157FAC4 VA: 0x157FAC4
	public void CreateList() { }

	// RVA: 0x157FD64 Offset: 0x157FD64 VA: 0x157FD64
	public void CloseHelpDialog(CombineHelpListViewManager.CallbackFunc2 callback) { }

	// RVA: 0x157FE90 Offset: 0x157FE90 VA: 0x157FE90
	private void WaitFadeOut() { }

	// RVA: 0x15800AC Offset: 0x15800AC VA: 0x15800AC
	protected void Callback() { }

	// RVA: 0x15802C8 Offset: 0x15802C8 VA: 0x15802C8
	public CombineHelpListViewItem GetItem(int index) { }

	// RVA: 0x1580370 Offset: 0x1580370 VA: 0x1580370 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x158047C Offset: 0x158047C VA: 0x158047C
	protected void RequestListObject(CombineHelpListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1580708 Offset: 0x1580708 VA: 0x1580708
	protected void RequestListObject(CombineHelpListViewObject.InitMode mode) { }

	// RVA: 0x1580980 Offset: 0x1580980 VA: 0x1580980
	protected void OnMoveEnd() { }

	// RVA: 0x1580AB8 Offset: 0x1580AB8 VA: 0x1580AB8
	private static void .cctor() { }
}

// Namespace: 
public enum CombineHelpListViewManager.ItemKind // TypeDefIndex: 9537
{
	// Fields
	public int value__; // 0x0
	public const CombineHelpListViewManager.ItemKind COMBINE = 1;
	public const CombineHelpListViewManager.ItemKind COMBINE_SKILL = 2;
	public const CombineHelpListViewManager.ItemKind COMBINE_SVT_EQ = 3;
	public const CombineHelpListViewManager.ItemKind COMBINE_LIMIT = 4;
	public const CombineHelpListViewManager.ItemKind COMBINE_NP = 5;
	public const CombineHelpListViewManager.ItemKind COMBINE_LV_EXCEED = 6;
	public const CombineHelpListViewManager.ItemKind COMBINE_COSTUME = 7;
	public const CombineHelpListViewManager.ItemKind COMBINE_CMD_CODE = 8;
	public const CombineHelpListViewManager.ItemKind COMBINE_FRIENDSHIP_EXCEED = 9;
	public const CombineHelpListViewManager.ItemKind COMBINE_SPECIAL_ASCENSION = 10;
	public const CombineHelpListViewManager.ItemKind COMBINE_CMD_CARD_EXCEED = 11;
	public const CombineHelpListViewManager.ItemKind COMBINE_APPEND_SKILL = 12;
	public const CombineHelpListViewManager.ItemKind COMBINE_BLANK = 13;
}

// Namespace: 
public enum CombineHelpListViewManager.InitMode // TypeDefIndex: 9538
{
	// Fields
	public int value__; // 0x0
	public const CombineHelpListViewManager.InitMode NONE = 0;
