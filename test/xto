	// RVA: 0x1446E14 Offset: 0x1446E14 VA: 0x1446E14
	public void Init() { }

	// RVA: 0x1446E2C Offset: 0x1446E2C VA: 0x1446E2C
	public void Quit() { }

	// RVA: 0x1444CEC Offset: 0x1444CEC VA: 0x1444CEC
	protected void SetCacheAssetNameList(string[] list) { }

	// RVA: 0x14454C4 Offset: 0x14454C4 VA: 0x14454C4
	public void SelectQuest() { }

	// RVA: 0x1446E34 Offset: 0x1446E34 VA: 0x1446E34
	protected void EndRequestSelectQuest(string result) { }

	// RVA: 0x1446E38 Offset: 0x1446E38 VA: 0x1446E38
	protected void EndSelectQuest() { }

	// RVA: 0x144722C Offset: 0x144722C VA: 0x144722C
	public void BackQuest() { }

	// RVA: 0x1447248 Offset: 0x1447248 VA: 0x1447248
	protected void EndFadeBackQuest() { }

	// RVA: 0x1447B74 Offset: 0x1447B74 VA: 0x1447B74
	public void SelectSupportOnlyQuest() { }

	// RVA: 0x1447D88 Offset: 0x1447D88 VA: 0x1447D88
	protected void EndFadeSelectSupportOnlyQuest() { }

	// RVA: 0x1447E64 Offset: 0x1447E64 VA: 0x1447E64
	public void BackSupportOnlyQuest() { }

	// RVA: 0x1447E80 Offset: 0x1447E80 VA: 0x1447E80
	protected void EndFadeBackSupportOnlyQuest() { }

	// RVA: 0x1447EE0 Offset: 0x1447EE0 VA: 0x1447EE0
	public void SelectParty() { }

	// RVA: 0x1448270 Offset: 0x1448270 VA: 0x1448270
	protected void EndFadeSelectParty() { }

	// RVA: 0x144834C Offset: 0x144834C VA: 0x144834C
	public void BackParty() { }

	// RVA: 0x1448478 Offset: 0x1448478 VA: 0x1448478
	protected void EndFadeBackParty() { }

	// RVA: 0x14484D8 Offset: 0x14484D8 VA: 0x14484D8
	public void SelectOrganizationChange() { }

	// RVA: 0x14485F0 Offset: 0x14485F0 VA: 0x14485F0
	public void BackOrganizationChange() { }

	// RVA: 0x14486E4 Offset: 0x14486E4 VA: 0x14486E4
	public void SelectOrganizationSwap() { }

	// RVA: 0x144880C Offset: 0x144880C VA: 0x144880C
	public void BackOrganizationSwap() { }

	// RVA: 0x14488F4 Offset: 0x14488F4 VA: 0x14488F4
	public bool ConfirmPartyOrganizationChangeCancel() { }

	// RVA: 0x1448AD8 Offset: 0x1448AD8 VA: 0x1448AD8
	protected void EndConfirmPartyOrganizationChangeCancel(bool isDecide) { }

	// RVA: 0x1448B94 Offset: 0x1448B94 VA: 0x1448B94
	public bool ConfirmPartyOrganizationChangeDecide() { }

	// RVA: 0x1448ED4 Offset: 0x1448ED4 VA: 0x1448ED4
	protected void EndConfirmPartyOrganizationChangeDecide(bool isDecide) { }

	// RVA: 0x1448F8C Offset: 0x1448F8C VA: 0x1448F8C
	protected void EndConfirmPartyOrganizationChangeDecideCancel() { }

	// RVA: 0x1448FF8 Offset: 0x1448FF8 VA: 0x1448FF8
	public bool ConfirmPartyOrganizationChangeRemove() { }

	// RVA: 0x1449140 Offset: 0x1449140 VA: 0x1449140
	protected void EndConfirmPartyOrganizationChangeRemoveSelect(PartyOrganizationRemoveSelectMenu.ResultKind result) { }

	// RVA: 0x1449318 Offset: 0x1449318 VA: 0x1449318
	protected void EndConfirmPartyOrganizationChangeRemoveEquip(bool isDecide) { }

	// RVA: 0x144945C Offset: 0x144945C VA: 0x144945C
	protected void EndConfirmPartyOrganizationChangeRemoveAll(bool isDecide) { }

	// RVA: 0x14495A0 Offset: 0x14495A0 VA: 0x14495A0
	protected void EndConfirmPartyOrganizationChangeInitAll(bool isDecide) { }

	// RVA: 0x1449708 Offset: 0x1449708 VA: 0x1449708
	public bool ConfirmPartyOrganizationSwapCancel() { }

	// RVA: 0x14498DC Offset: 0x14498DC VA: 0x14498DC
	protected void EndConfirmPartyOrganizationSwapCancel(bool isDecide) { }

	// RVA: 0x1449998 Offset: 0x1449998 VA: 0x1449998
	public bool ConfirmPartyOrganizationSwapDecide() { }

	// RVA: 0x1449CA0 Offset: 0x1449CA0 VA: 0x1449CA0
	protected void EndConfirmPartyOrganizationSwapDecide(bool isDecide) { }

	// RVA: 0x1449D58 Offset: 0x1449D58 VA: 0x1449D58
	protected void EndConfirmPartyOrganizationSwapDecideCancel() { }

	// RVA: 0x1449DC4 Offset: 0x1449DC4 VA: 0x1449DC4
	public bool ConfirmPartyOrganizationSwapRemove() { }

	// RVA: 0x1449EF8 Offset: 0x1449EF8 VA: 0x1449EF8
	protected void EndConfirmPartyOrganizationSwapRemoveSelect(PartyOrganizationRemoveSelectMenu.ResultKind result) { }

	// RVA: 0x144A0C4 Offset: 0x144A0C4 VA: 0x144A0C4
	protected void EndConfirmPartyOrganizationSwapRemoveEquip(bool isDecide) { }

	// RVA: 0x144A1FC Offset: 0x144A1FC VA: 0x144A1FC
	protected void EndConfirmPartyOrganizationSwapRemoveAll(bool isDecide) { }

	// RVA: 0x144A334 Offset: 0x144A334 VA: 0x144A334
	protected void EndConfirmPartyOrganizationSwapInitAll(bool isDecide) { }

	// RVA: 0x144A490 Offset: 0x144A490 VA: 0x144A490
	public bool InputDeckName() { }

	// RVA: 0x144A7D8 Offset: 0x144A7D8 VA: 0x144A7D8
	protected void EndInputDeckNameMenu(bool isDecide, string changeName) { }

	// RVA: 0x144A964 Offset: 0x144A964 VA: 0x144A964
	public bool CopyDeck() { }

	// RVA: 0x144AAA8 Offset: 0x144AAA8 VA: 0x144AAA8
	protected void EndDeckSelectCopy(DeckSelectMenu.ResultKind result, int index) { }

	// RVA: 0x144AC84 Offset: 0x144AC84 VA: 0x144AC84
	protected void EndConfirmCopy(bool isDecide) { }

	// RVA: 0x144ADC8 Offset: 0x144ADC8 VA: 0x144ADC8
	public bool InputBoostItem() { }

	// RVA: 0x144B420 Offset: 0x144B420 VA: 0x144B420
	protected void EndQuestStartTutorial() { }

	// RVA: 0x144B424 Offset: 0x144B424 VA: 0x144B424
	protected void EndInputBoostItemMenu(BoostItemMenu.ResultKind result, int n) { }

	// RVA: 0x144B88C Offset: 0x144B88C VA: 0x144B88C
	protected void EndConfirmInputBoostItem(bool isDecide) { }

	// RVA: 0x144BA04 Offset: 0x144BA04 VA: 0x144BA04
	protected void EndConfirmInputBoostSupportItem(BoostFunctionUtility.BoostResultKind result, int boostId) { }

	// RVA: 0x144BAF8 Offset: 0x144BAF8 VA: 0x144BAF8
	protected void EndShowCommandCardBoostItem() { }

	// RVA: 0x144A5B8 Offset: 0x144A5B8 VA: 0x144A5B8
	protected void RecoverInputShowMenu() { }

	// RVA: 0x144BBE8 Offset: 0x144BBE8 VA: 0x144BBE8
	public bool ShowInfomation() { }

	// RVA: 0x144BCE4 Offset: 0x144BCE4 VA: 0x144BCE4
	protected void EndShowInfomation() { }

	// RVA: 0x144BD88 Offset: 0x144BD88 VA: 0x144BD88
	protected void EndCloseShowInfomation() { }

	// RVA: 0x144BDFC Offset: 0x144BDFC VA: 0x144BDFC
	public bool ShowEventPoint() { }

	// RVA: 0x144BEFC Offset: 0x144BEFC VA: 0x144BEFC
	protected void EndShowEventPoint(bool isDecide) { }

	// RVA: 0x144BF8C Offset: 0x144BF8C VA: 0x144BF8C
	protected void EndCloseShowEventPoint() { }

	// RVA: 0x144C000 Offset: 0x144C000 VA: 0x144C000
	public bool ShowQuestInformation() { }

	// RVA: 0x144C0FC Offset: 0x144C0FC VA: 0x144C0FC
	protected void EndShowShowQuestInformation(bool isDecide) { }

	// RVA: 0x144C188 Offset: 0x144C188 VA: 0x144C188
	protected void EndCloseShowQuestInformation() { }

	// RVA: 0x144C1FC Offset: 0x144C1FC VA: 0x144C1FC
	public void RequestDeckName() { }

	// RVA: 0x144C348 Offset: 0x144C348 VA: 0x144C348
	protected void EndRequestDeckName(string result) { }

	// RVA: 0x144C430 Offset: 0x144C430 VA: 0x144C430
	public void RequestDeckCopy() { }

	// RVA: 0x144C5A4 Offset: 0x144C5A4 VA: 0x144C5A4
	protected void EndRequestDeckCopy(string result) { }

	// RVA: 0x144C690 Offset: 0x144C690 VA: 0x144C690
	public void RequestOrganizationSelect() { }

	// RVA: 0x144C984 Offset: 0x144C984 VA: 0x144C984
	protected void EndRequestOrganizationSelect(string result) { }

	// RVA: 0x144CAA0 Offset: 0x144CAA0 VA: 0x144CAA0
	public void RequestOrganizationChange() { }

	// RVA: 0x144CD8C Offset: 0x144CD8C VA: 0x144CD8C
	protected void EndRequestOrganizationChange(string result) { }

	// RVA: 0x144CEC4 Offset: 0x144CEC4 VA: 0x144CEC4
	public void RequestOrganizationSwap() { }

	// RVA: 0x144D1A4 Offset: 0x144D1A4 VA: 0x144D1A4
	protected void EndRequestOrganizationSwap(string result) { }

	// RVA: 0x144D2DC Offset: 0x144D2DC VA: 0x144D2DC
	public bool BackScene() { }

	// RVA: 0x144D4EC Offset: 0x144D4EC VA: 0x144D4EC
	public bool FollowerScene() { }

	// RVA: 0x144D2F8 Offset: 0x144D2F8 VA: 0x144D2F8
	private bool SceneBack(bool isSetChildFollower) { }

	// RVA: 0x144D5B4 Offset: 0x144D5B4 VA: 0x144D5B4
	public bool MasterFormationScene() { }

	// RVA: 0x144D810 Offset: 0x144D810 VA: 0x144D810
	private void SetRandomLimitCountBattleSutupInfo() { }

	// RVA: 0x144DB30 Offset: 0x144DB30 VA: 0x144DB30
	public bool StartScriptAction() { }

	// RVA: 0x144DBDC Offset: 0x144DBDC VA: 0x144DBDC
	public void StartWindowMessage(Action end_act) { }

	// RVA: 0x144DDCC Offset: 0x144DDCC VA: 0x144DDCC
	protected void StartBattledScript() { }

	// RVA: 0x14472A8 Offset: 0x14472A8 VA: 0x14472A8
	protected void OnMoveEnd() { }

	// RVA: 0x144FAB8 Offset: 0x144FAB8 VA: 0x144FAB8
	private void EndOpenMenu() { }

	// RVA: 0x144DF64 Offset: 0x144DF64 VA: 0x144DF64
	protected void OpenRestrictionHelpDialog() { }

	// RVA: 0x144FDB0 Offset: 0x144FDB0 VA: 0x144FDB0
	protected void CloseRestrictionHelpDialog(bool isDecide) { }

	// RVA: 0x144FB9C Offset: 0x144FB9C VA: 0x144FB9C
	protected void FirstRestrictionWarningDialog() { }

	// RVA: 0x144FE3C Offset: 0x144FE3C VA: 0x144FE3C
	protected void EndSelectQuestConfirmCostumeMenu() { }

	// RVA: 0x144FF34 Offset: 0x144FF34 VA: 0x144FF34
	protected void EndRequestConfirmCostumeMenu(string result) { }

	// RVA: 0x144FF88 Offset: 0x144FF88 VA: 0x144FF88
	public void OnClickBack() { }

	// RVA: 0x1450610 Offset: 0x1450610 VA: 0x1450610
	protected void EndCloseTutorialArrowChange() { }

	// RVA: 0x1450694 Offset: 0x1450694 VA: 0x1450694
	private void CtrlMyServantOrNpc(PartyOrganizationListViewItem item, int pos) { }

	// RVA: 0x144E12C Offset: 0x144E12C VA: 0x144E12C
	protected void OnSelectPartyList(PartyListMenu.ResultKind result, int n, int m) { }

	[DebuggerHiddenAttribute] // RVA: 0xCD0E80 Offset: 0xCD0E80 VA: 0xCD0E80
	// RVA: 0x1450BFC Offset: 0x1450BFC VA: 0x1450BFC
	private IEnumerator DisableFriendshipUpItemUseButton() { }

	// RVA: 0x14509B4 Offset: 0x14509B4 VA: 0x14509B4
	private void SendPlayMarkerEventForChange() { }

	// RVA: 0x1450C6C Offset: 0x1450C6C VA: 0x1450C6C
	protected void EndServantNumWarningQuestStart(bool isDecide) { }

	// RVA: 0x1450CA8 Offset: 0x1450CA8 VA: 0x1450CA8
	protected void EndSearvantNumAndFixedMyServantPosQuestStart(bool isDecide) { }

	// RVA: 0x1450D78 Offset: 0x1450D78 VA: 0x1450D78
	protected void EndFixedMyServantPosAndSearvantNumQuestStart(bool isDecide) { }

	// RVA: 0x1450EA8 Offset: 0x1450EA8 VA: 0x1450EA8
	protected void EndWarningQuestStart(bool isDecide) { }

	// RVA: 0x1450EE4 Offset: 0x1450EE4 VA: 0x1450EE4
	protected void EndSupportWarningQuestStart(bool isDecide) { }

	// RVA: 0x1450F20 Offset: 0x1450F20 VA: 0x1450F20
	protected void EndMyServantWarningQuestStart(bool isDecide) { }

	// RVA: 0x1450F5C Offset: 0x1450F5C VA: 0x1450F5C
	protected void EndConfirmPartyRemoveSelect(PartyOrganizationRemoveSelectMenu.ResultKind result) { }

	// RVA: 0x145114C Offset: 0x145114C VA: 0x145114C
	protected void EndConfirmPartyRemoveEquip(bool isDecide) { }

	// RVA: 0x145129C Offset: 0x145129C VA: 0x145129C
	protected void EndConfirmPartyRemoveAll(bool isDecide) { }

	// RVA: 0x14513EC Offset: 0x14513EC VA: 0x14513EC
	protected void EndConfirmPartyInitAll(bool isDecide) { }

	// RVA: 0x1451558 Offset: 0x1451558 VA: 0x1451558
	protected void OnSelectedOrganizationChange(PartyOrganizationChangeMenu.ResultKind result, int m) { }

	// RVA: 0x1451C68 Offset: 0x1451C68 VA: 0x1451C68
	protected void EndOpenOrganizationChangeServant() { }

	// RVA: 0x1451D80 Offset: 0x1451D80 VA: 0x1451D80
	protected void EndSelectOrganizationChangeServantEquip(EquipGraphListMenu.ResultKind result, EquipGraphListViewItem equipItem) { }

	// RVA: 0x1451F8C Offset: 0x1451F8C VA: 0x1451F8C
	protected void EndCloseOrganizationChangeServantEquipListDecide() { }

	// RVA: 0x1451F98 Offset: 0x1451F98 VA: 0x1451F98
	protected void EndCloseOrganizationChangeServantEquipListCancel() { }

	// RVA: 0x1452218 Offset: 0x1452218 VA: 0x1452218
	protected void EndSelectedOrganizationChangeServant(PartyServantSelectMenu.ResultKind result, PartyServantListViewItem item) { }

	// RVA: 0x1451F9C Offset: 0x1451F9C VA: 0x1451F9C
	protected void EndSelectedOrganizationChange() { }

	// RVA: 0x14525C0 Offset: 0x14525C0 VA: 0x14525C0
	protected void OnSelectedOrganizationSwap(PartyOrganizationMenu.ResultKind result, int m) { }

	// RVA: 0x1452CE4 Offset: 0x1452CE4 VA: 0x1452CE4
	protected void EndSelectedOrganizationSwapServant(PartyServantSelectMenu.ResultKind result, PartyServantListViewItem item) { }

	// RVA: 0x1453454 Offset: 0x1453454 VA: 0x1453454
	private void ExecutionServantSet(PartyServantSelectMenu.ResultKind result, PartyServantListViewItem item) { }

	// RVA: 0x1453AE0 Offset: 0x1453AE0 VA: 0x1453AE0
	protected void EndSelectOrganizationSwapServantEquip(EquipGraphListMenu.ResultKind result, EquipGraphListViewItem equipItem) { }

	// RVA: 0x1454264 Offset: 0x1454264 VA: 0x1454264
	protected void EndCloseSwapServantEquipListDecide() { }

	// RVA: 0x1454270 Offset: 0x1454270 VA: 0x1454270
	protected void EndCloseSwapServantEquipListCancel() { }

	// RVA: 0x14542FC Offset: 0x14542FC VA: 0x14542FC
	protected void SelectedFriendOfferConfirm(bool isDecide) { }

	// RVA: 0x144F7F0 Offset: 0x144F7F0 VA: 0x144F7F0
	protected void EndTutorialOrganizationGuideNotification1() { }

	// RVA: 0x1454380 Offset: 0x1454380 VA: 0x1454380
	protected void EndTutorialOrganizationGuideNotification2() { }

	// RVA: 0x1454460 Offset: 0x1454460 VA: 0x1454460
	protected void EndTutorialOrganizationGuideNotification3() { }

	// RVA: 0x145460C Offset: 0x145460C VA: 0x145460C
	protected void EndTutorialOrganizationGuideNotification4() { }

	// RVA: 0x1454660 Offset: 0x1454660 VA: 0x1454660
	protected void EndTutorialOrganizationGuideNotification5() { }

	// RVA: 0x144F8E4 Offset: 0x144F8E4 VA: 0x144F8E4
	protected void EndTutorialOrganizationGuideNotification6() { }

	// RVA: 0x1454740 Offset: 0x1454740 VA: 0x1454740
	protected void EndOpenTutorialArrow() { }

	// RVA: 0x144DE70 Offset: 0x144DE70 VA: 0x144DE70
	protected void EndTutorialFollowerGuideNotification1() { }

	// RVA: 0x145474C Offset: 0x145474C VA: 0x145474C
	public BattleSetupInfo GetBattleSetupInfo() { }

	// RVA: 0x144524C Offset: 0x144524C VA: 0x144524C
	private bool IsEventDeck() { }

	// RVA: 0x144D508 Offset: 0x144D508 VA: 0x144D508
	private bool IsNotSelectSupportAfterScript() { }

	// RVA: 0x144B0B8 Offset: 0x144B0B8 VA: 0x144B0B8
	private bool IsFriendChocolateQuest() { }

	// RVA: 0x144B1F4 Offset: 0x144B1F4 VA: 0x144B1F4
	private bool IsAvailableFriendChocolate() { }

	// RVA: 0x1450964 Offset: 0x1450964 VA: 0x1450964
	private void OpenSelectMyServantOrNpcDialog(string name, SelectMyServantOrNpcDialog.CallbackFunc callback, bool canMaskTouchClose = False) { }

	// RVA: 0x14508C8 Offset: 0x14508C8 VA: 0x14508C8
	private void CloseSelectMyServantOrNpcDialog() { }

	// RVA: 0x1450AD8 Offset: 0x1450AD8 VA: 0x1450AD8
	private void SetCampaignItemIdBattleSutupInfo() { }

	// RVA: 0x1454754 Offset: 0x1454754 VA: 0x1454754
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0E90 Offset: 0xCD0E90 VA: 0xCD0E90
	// RVA: 0x14547D4 Offset: 0x14547D4 VA: 0x14547D4
	private void <SelectQuest>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0EA0 Offset: 0xCD0EA0 VA: 0xCD0EA0
	// RVA: 0x14548D4 Offset: 0x14548D4 VA: 0x14548D4
	private void <EndConfirmCopy>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0EB0 Offset: 0xCD0EB0 VA: 0xCD0EB0
	// RVA: 0x1454948 Offset: 0x1454948 VA: 0x1454948
	private void <EndInputBoostItemMenu>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0EC0 Offset: 0xCD0EC0 VA: 0xCD0EC0
	// RVA: 0x14549BC Offset: 0x14549BC VA: 0x14549BC
	private void <StartScriptAction>m__3() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0ED0 Offset: 0xCD0ED0 VA: 0xCD0ED0
	// RVA: 0x14549C0 Offset: 0x14549C0 VA: 0x14549C0
	private void <OnClickBack>m__4(bool isDecide) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0EE0 Offset: 0xCD0EE0 VA: 0xCD0EE0
	// RVA: 0x1454A70 Offset: 0x1454A70 VA: 0x1454A70
	private void <OnClickBack>m__5() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0EF0 Offset: 0xCD0EF0 VA: 0xCD0EF0
	// RVA: 0x1454ABC Offset: 0x1454ABC VA: 0x1454ABC
	private void <OnClickBack>m__6() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0F00 Offset: 0xCD0F00 VA: 0xCD0F00
	// RVA: 0x1454B08 Offset: 0x1454B08 VA: 0x1454B08
	private void <OnSelectPartyList>m__7() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0F10 Offset: 0xCD0F10 VA: 0xCD0F10
	// RVA: 0x1454C08 Offset: 0x1454C08 VA: 0x1454C08
	private void <EndSelectedOrganizationChange>m__8() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0F20 Offset: 0xCD0F20 VA: 0xCD0F20
	// RVA: 0x1454C54 Offset: 0x1454C54 VA: 0x1454C54
	private void <EndSelectedOrganizationChange>m__9() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0F30 Offset: 0xCD0F30 VA: 0xCD0F30
	// RVA: 0x1454CA0 Offset: 0x1454CA0 VA: 0x1454CA0
	private void <ExecutionServantSet>m__A() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0F40 Offset: 0xCD0F40 VA: 0xCD0F40
	// RVA: 0x1454CEC Offset: 0x1454CEC VA: 0x1454CEC
	private void <SelectQuest>m__B() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0F50 Offset: 0xCD0F50 VA: 0xCD0F50
	// RVA: 0x1454D18 Offset: 0x1454D18 VA: 0x1454D18
	private void <OnSelectPartyList>m__C() { }
}

// Namespace: 
protected enum PartyOrganizationRootComponent.TutorialMode // TypeDefIndex: 10493
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationRootComponent.TutorialMode NONE = 0;
	public const PartyOrganizationRootComponent.TutorialMode ORGANIZATION_GUIDE = 1;
	public const PartyOrganizationRootComponent.TutorialMode FRIEND = 2;
	public const PartyOrganizationRootComponent.TutorialMode NPC = 3;
}

// Namespace: 
protected enum PartyOrganizationRootComponent.TutorialState // TypeDefIndex: 10494
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationRootComponent.TutorialState NONE = 0;
	public const PartyOrganizationRootComponent.TutorialState INIT = 1;
	public const PartyOrganizationRootComponent.TutorialState SELECT_PARTY = 2;
	public const PartyOrganizationRootComponent.TutorialState SELECT_MEMBER = 3;
	public const PartyOrganizationRootComponent.TutorialState SELECT_SERVANT = 4;
	public const PartyOrganizationRootComponent.TutorialState SELECT_CHANGE_DECIDE = 5;
	public const PartyOrganizationRootComponent.TutorialState SELECT_RETURN = 6;
	public const PartyOrganizationRootComponent.TutorialState SELECT_START = 7;
}

// Namespace: 
protected enum PartyOrganizationRootComponent.MenuMode // TypeDefIndex: 10495
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationRootComponent.MenuMode QUEST_START = 0;
	public const PartyOrganizationRootComponent.MenuMode SUPPORT_ONLY_QUEST_START = 1;
	public const PartyOrganizationRootComponent.MenuMode NO_SUPPORT_QUEST_START = 2;
	public const PartyOrganizationRootComponent.MenuMode SINGLE_MEMBER_QUEST_START = 3;
	public const PartyOrganizationRootComponent.MenuMode NUM_RESTRICTION_QUEST_START = 4;
	public const PartyOrganizationRootComponent.MenuMode NUM_AND_POSITION_RESTRICTION_QUEST_START = 5;
	public const PartyOrganizationRootComponent.MenuMode FIX_SUPPORT_ONLY_QUEST_START = 6;
	public const PartyOrganizationRootComponent.MenuMode FIX_SUPPORT_QUEST_START = 7;
	public const PartyOrganizationRootComponent.MenuMode SELECT_PARTY = 8;
	public const PartyOrganizationRootComponent.MenuMode ORGANIZATION_CHANGE = 9;
	public const PartyOrganizationRootComponent.MenuMode ORGANIZATION_SWAP = 10;
}

// Namespace: 
protected enum PartyOrganizationRootComponent.State // TypeDefIndex: 10496
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationRootComponent.State INIT = 0;
	public const PartyOrganizationRootComponent.State INIT_TOP = 1;
	public const PartyOrganizationRootComponent.State INIT_QUEST_START = 2;
	public const PartyOrganizationRootComponent.State INPUT_QUEST_START = 3;
	public const PartyOrganizationRootComponent.State QUIT_QUEST_START = 4;
	public const PartyOrganizationRootComponent.State INIT_SUPPORT_ONLY_QUEST_START = 5;
	public const PartyOrganizationRootComponent.State INPUT_SUPPORT_ONLY_QUEST_START = 6;
	public const PartyOrganizationRootComponent.State QUIT_SUPPORT_ONLY_QUEST_START = 7;
	public const PartyOrganizationRootComponent.State INIT_SELECT_PARTY = 8;
	public const PartyOrganizationRootComponent.State INPUT_SELECT_PARTY = 9;
	public const PartyOrganizationRootComponent.State QUIT_SELECT_PARTY = 10;
	public const PartyOrganizationRootComponent.State INIT_ORGANIZATION_CHANGE = 11;
	public const PartyOrganizationRootComponent.State INPUT_ORGANIZATION_CHANGE = 12;
	public const PartyOrganizationRootComponent.State QUIT_ORGANIZATION_CHANGE = 13;
	public const PartyOrganizationRootComponent.State INIT_ORGANIZATION_SWAP = 14;
	public const PartyOrganizationRootComponent.State INPUT_ORGANIZATION_SWAP = 15;
	public const PartyOrganizationRootComponent.State QUIT_ORGANIZATION_SWAP = 16;
	public const PartyOrganizationRootComponent.State INPUT_ORGANIZATION_CHANGE_SERVANT_SELECT = 17;
	public const PartyOrganizationRootComponent.State INPUT_ORGANIZATION_SWAP_SERVANT_SELECT = 18;
	public const PartyOrganizationRootComponent.State INPUT_ORGANIZATION_CHANGE_EQUIP_SELECT = 19;
	public const PartyOrganizationRootComponent.State INPUT_ORGANIZATION_SWAP_EQUIP_SELECT = 20;
	public const PartyOrganizationRootComponent.State INPUT_INFOMATION = 21;
	public const PartyOrganizationRootComponent.State INPUT_EVENT_POINT = 22;
	public const PartyOrganizationRootComponent.State INPUT_CHARA_GRAPH = 23;
	public const PartyOrganizationRootComponent.State INPUT_DECK_NAME = 24;
	public const PartyOrganizationRootComponent.State INPUT_DECK_COPY = 25;
	public const PartyOrganizationRootComponent.State INPUT_QUEST_START_TUROTIAL = 26;
	public const PartyOrganizationRootComponent.State INPUT_BOOST_ITEM = 27;
	public const PartyOrganizationRootComponent.State QUIT_SCENE = 28;
	public const PartyOrganizationRootComponent.State MASTER_FORMATION_SCENE = 29;
	public const PartyOrganizationRootComponent.State QUEST_INFORMATION = 30;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45324 Offset: 0xC45324 VA: 0xC45324
private sealed class PartyOrganizationRootComponent.<EndInputDeckNameMenu>c__AnonStorey1 // TypeDefIndex: 10497
{
	// Fields
	internal bool isDecide; // 0x10
	internal PartyOrganizationRootComponent $this; // 0x18

	// Methods

	// RVA: 0x17668D4 Offset: 0x17668D4 VA: 0x17668D4
	public void .ctor() { }

	// RVA: 0x17668DC Offset: 0x17668DC VA: 0x17668DC
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45334 Offset: 0xC45334 VA: 0xC45334
private sealed class PartyOrganizationRootComponent.<CtrlMyServantOrNpc>c__AnonStorey2 // TypeDefIndex: 10498
{
	// Fields
	internal int pos; // 0x10
	internal PartyOrganizationRootComponent $this; // 0x18

	// Methods

	// RVA: 0x1766420 Offset: 0x1766420 VA: 0x1766420
	public void .ctor() { }

	// RVA: 0x1766428 Offset: 0x1766428 VA: 0x1766428
	internal void <>m__0(SelectMyServantOrNpcDialog.ResultClicked buttonResult) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45344 Offset: 0xC45344 VA: 0xC45344
private sealed class PartyOrganizationRootComponent.<DisableFriendshipUpItemUseButton>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 10499
{
	// Fields
	internal PartyOrganizationRootComponent $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDC9E0 Offset: 0xCDC9E0 VA: 0xCDC9E0
	// RVA: 0x1766694 Offset: 0x1766694 VA: 0x1766694
	public void .ctor() { }

	// RVA: 0x176669C Offset: 0x176669C VA: 0x176669C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC9F0 Offset: 0xCDC9F0 VA: 0xCDC9F0
	// RVA: 0x1766848 Offset: 0x1766848 VA: 0x1766848 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCA00 Offset: 0xCDCA00 VA: 0xCDCA00
	// RVA: 0x1766850 Offset: 0x1766850 VA: 0x1766850 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCA10 Offset: 0xCDCA10 VA: 0xCDCA10
	// RVA: 0x1766858 Offset: 0x1766858 VA: 0x1766858 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDCA20 Offset: 0xCDCA20 VA: 0xCDCA20
	// RVA: 0x176686C Offset: 0x176686C VA: 0x176686C Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45354 Offset: 0xC45354 VA: 0xC45354
private sealed class PartyOrganizationRootComponent.<OnSelectedOrganizationChange>c__AnonStorey3 // TypeDefIndex: 10500
{
	// Fields
	internal int m; // 0x10
	internal PartyOrganizationRootComponent $this; // 0x18

	// Methods

	// RVA: 0x1767140 Offset: 0x1767140 VA: 0x1767140
	public void .ctor() { }

	// RVA: 0x1767148 Offset: 0x1767148 VA: 0x1767148
	internal void <>m__0(SelectMyServantOrNpcDialog.ResultClicked buttonResult) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45364 Offset: 0xC45364 VA: 0xC45364
private sealed class PartyOrganizationRootComponent.<OnSelectedOrganizationSwap>c__AnonStorey4 // TypeDefIndex: 10501
{
	// Fields
	internal int m; // 0x10
	internal PartyOrganizationRootComponent $this; // 0x18

	// Methods

	// RVA: 0x1767580 Offset: 0x1767580 VA: 0x1767580
	public void .ctor() { }

	// RVA: 0x1767588 Offset: 0x1767588 VA: 0x1767588
	internal void <>m__0(SelectMyServantOrNpcDialog.ResultClicked buttonResult) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45374 Offset: 0xC45374 VA: 0xC45374
private sealed class PartyOrganizationRootComponent.<EndSelectedOrganizationSwapServant>c__AnonStorey5 // TypeDefIndex: 10502
{
	// Fields
	internal PartyServantSelectMenu.ResultKind result; // 0x10
	internal PartyServantListViewItem item; // 0x18
	internal PartyOrganizationRootComponent $this; // 0x20

	// Methods

	// RVA: 0x1766BB8 Offset: 0x1766BB8 VA: 0x1766BB8
	public void .ctor() { }

	// RVA: 0x1766BC0 Offset: 0x1766BC0 VA: 0x1766BC0
	internal void <>m__0() { }

	// RVA: 0x1766C1C Offset: 0x1766C1C VA: 0x1766C1C
	internal void <>m__1(bool isDecide) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45384 Offset: 0xC45384 VA: 0xC45384
private sealed class PartyOrganizationRootComponent.<EndSelectOrganizationSwapServantEquip>c__AnonStorey6 // TypeDefIndex: 10503
{
	// Fields
	internal long equipUserSvtId; // 0x10
	internal PartyOrganizationRootComponent $this; // 0x18

	// Methods

	// RVA: 0x17669B8 Offset: 0x17669B8 VA: 0x17669B8
	public void .ctor() { }

	// RVA: 0x17669C0 Offset: 0x17669C0 VA: 0x17669C0
	internal void <>m__0(bool isDecide) { }
}

// Namespace: 
public class PartyOrganizationUIDragDropListViewDrop : UIDragDropListViewItem // TypeDefIndex: 10504
{
	// Fields
	[SerializeField] // RVA: 0xC74CF8 Offset: 0xC74CF8 VA: 0xC74CF8
	protected ListViewObject listViewObject; // 0x78
	protected static float ACTION_TIME; // 0x0
	protected PartyOrganizationListViewDropObject dropObject; // 0x80
	private bool isEquipSwap; // 0x88
	private bool isDrag; // 0x89
	private GameObject surface; // 0x90

	// Methods

	// RVA: 0x17679C0 Offset: 0x17679C0 VA: 0x17679C0
	public void .ctor() { }

	// RVA: 0x17679C8 Offset: 0x17679C8 VA: 0x17679C8
	private void Update() { }

	// RVA: 0x1767A60 Offset: 0x1767A60 VA: 0x1767A60 Slot: 5
	public override void SetBaseTransform() { }

	// RVA: 0x1767B58 Offset: 0x1767B58 VA: 0x1767B58 Slot: 6
	protected override void OnDragDropStart() { }

	// RVA: 0x1767D90 Offset: 0x1767D90 VA: 0x1767D90 Slot: 8
	protected override void OnDragDropRelease(GameObject surface) { }

	// RVA: 0x1768454 Offset: 0x1768454 VA: 0x1768454
	protected void DragEnd() { }

	// RVA: 0x1768748 Offset: 0x1768748 VA: 0x1768748
	protected void DragReturnStart() { }

	// RVA: 0x1768928 Offset: 0x1768928 VA: 0x1768928
	protected void DragReturnMoveEnd() { }

	// RVA: 0x1768A78 Offset: 0x1768A78 VA: 0x1768A78
	protected void DragReturnEnd() { }

	// RVA: 0x1768554 Offset: 0x1768554 VA: 0x1768554
	protected void DragDumpStart() { }

	// RVA: 0x1768BC0 Offset: 0x1768BC0 VA: 0x1768BC0
	protected void DragDumpEnd() { }

	// RVA: 0x1768198 Offset: 0x1768198 VA: 0x1768198
	protected void DragSwapStart(PartyOrganizationListViewDropObject ddo) { }

	// RVA: 0x1768D88 Offset: 0x1768D88 VA: 0x1768D88
	protected void DragSwapMoveEnd() { }

	// RVA: 0x1769F24 Offset: 0x1769F24 VA: 0x1769F24
	private void ExcecutionSwap() { }

	// RVA: 0x176A144 Offset: 0x176A144 VA: 0x176A144
	protected void DragSwapEnd() { }

	// RVA: 0x176A3A8 Offset: 0x176A3A8 VA: 0x176A3A8
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0F60 Offset: 0xCD0F60 VA: 0xCD0F60
	// RVA: 0x176A400 Offset: 0x176A400 VA: 0x176A400
	private void <DragSwapMoveEnd>m__0(bool isDecide) { }
}

// Namespace: 
public class PartyOrganizationUIDragDropListViewItem : UIDragDropListViewItem // TypeDefIndex: 10505
{
	// Fields
	protected static float ACTION_TIME; // 0x0

	// Methods

	// RVA: 0x176A4A4 Offset: 0x176A4A4 VA: 0x176A4A4
	public void .ctor() { }

	// RVA: 0x176A4AC Offset: 0x176A4AC VA: 0x176A4AC Slot: 6
	protected override void OnDragDropStart() { }

	// RVA: 0x176A590 Offset: 0x176A590 VA: 0x176A590 Slot: 8
	protected override void OnDragDropRelease(GameObject surface) { }

	// RVA: 0x176AB14 Offset: 0x176AB14 VA: 0x176AB14
	protected void DragEnd() { }

	// RVA: 0x176A934 Offset: 0x176A934 VA: 0x176A934
	protected void DragReturnStart() { }

	// RVA: 0x176ABEC Offset: 0x176ABEC VA: 0x176ABEC
	protected void DragReturnEnd() { }

	// RVA: 0x176ACC4 Offset: 0x176ACC4 VA: 0x176ACC4
	private static void .cctor() { }
}

// Namespace: 
public class PartyOrganizationUIDragDropListViewSurface : UIDragDropListViewSurface // TypeDefIndex: 10506
{
	// Fields
	[SerializeField] // RVA: 0xC74D08 Offset: 0xC74D08 VA: 0xC74D08
	protected PartyOrganizationListViewDropObject dropObject; // 0x18

	// Properties
	public PartyOrganizationListViewDropObject DropObject { get; }

	// Methods

	// RVA: 0x176AD1C Offset: 0x176AD1C VA: 0x176AD1C
	public void .ctor() { }

	// RVA: 0x1768190 Offset: 0x1768190 VA: 0x1768190
	public PartyOrganizationListViewDropObject get_DropObject() { }
}

// Namespace: 
public class PartyOrganizationUtility : SingletonTemplate<PartyOrganizationUtility> // TypeDefIndex: 10507
{
	// Fields
	public static readonly string SAVE_KEY_FRIENDSHIP_ITEM_USE_STATE; // 0x0
	private List<string> restrictionDialogHistoryList; // 0x10
	private Dictionary<int, FollowerInfo> followerInfo; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC74D18 Offset: 0xC74D18 VA: 0xC74D18
	[DebuggerBrowsableAttribute] // RVA: 0xC74D18 Offset: 0xC74D18 VA: 0xC74D18
	private int <SelectedPartyPosition>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC74D54 Offset: 0xC74D54 VA: 0xC74D54
	[DebuggerBrowsableAttribute] // RVA: 0xC74D54 Offset: 0xC74D54 VA: 0xC74D54
	private bool <IsExitPartyOrganization>k__BackingField; // 0x24
	[CompilerGeneratedAttribute] // RVA: 0xC74D90 Offset: 0xC74D90 VA: 0xC74D90
	[DebuggerBrowsableAttribute] // RVA: 0xC74D90 Offset: 0xC74D90 VA: 0xC74D90
	private PartyListViewItem <BasePartyItem>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC74DCC Offset: 0xC74DCC VA: 0xC74DCC
	[DebuggerBrowsableAttribute] // RVA: 0xC74DCC Offset: 0xC74DCC VA: 0xC74DCC
	private PartyListViewItem <PartyItem>k__BackingField; // 0x30

	// Properties
	public int SelectedPartyPosition { get; set; }
	public bool IsExitPartyOrganization { get; set; }
	public PartyListViewItem BasePartyItem { get; set; }
	public PartyListViewItem PartyItem { get; set; }

	// Methods

	// RVA: 0x176AD24 Offset: 0x176AD24 VA: 0x176AD24
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0F70 Offset: 0xCD0F70 VA: 0xCD0F70
	// RVA: 0x176ADE4 Offset: 0x176ADE4 VA: 0x176ADE4
	public int get_SelectedPartyPosition() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0F80 Offset: 0xCD0F80 VA: 0xCD0F80
	// RVA: 0x176668C Offset: 0x176668C VA: 0x176668C
	public void set_SelectedPartyPosition(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0F90 Offset: 0xCD0F90 VA: 0xCD0F90
	// RVA: 0x176ADEC Offset: 0x176ADEC VA: 0x176ADEC
	public bool get_IsExitPartyOrganization() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0FA0 Offset: 0xCD0FA0 VA: 0xCD0FA0
	// RVA: 0x176ADF4 Offset: 0x176ADF4 VA: 0x176ADF4
	public void set_IsExitPartyOrganization(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0FB0 Offset: 0xCD0FB0 VA: 0xCD0FB0
	// RVA: 0x176AE00 Offset: 0x176AE00 VA: 0x176AE00
	public PartyListViewItem get_BasePartyItem() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0FC0 Offset: 0xCD0FC0 VA: 0xCD0FC0
	// RVA: 0x176AE08 Offset: 0x176AE08 VA: 0x176AE08
	public void set_BasePartyItem(PartyListViewItem value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0FD0 Offset: 0xCD0FD0 VA: 0xCD0FD0
	// RVA: 0x176AE10 Offset: 0x176AE10 VA: 0x176AE10
	public PartyListViewItem get_PartyItem() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0FE0 Offset: 0xCD0FE0 VA: 0xCD0FE0
	// RVA: 0x176AE18 Offset: 0x176AE18 VA: 0x176AE18
	public void set_PartyItem(PartyListViewItem value) { }

	// RVA: 0x176AE20 Offset: 0x176AE20 VA: 0x176AE20
	public bool IsDisplayedRestrictionDialog(int questId, int phaseId, int restrictionId, bool isAddHistory = True) { }

	// RVA: 0x176AF50 Offset: 0x176AF50 VA: 0x176AF50
	public void AddRestrictionDialogHistory(int questId, int phaseId, int restrictionId) { }

	// RVA: 0x17697BC Offset: 0x17697BC VA: 0x17697BC
	public bool IsRarityRestriction(out string skillName, out int actMaxRarity, int servantId, int servantRarity, int equipServantId, int eventId = -1) { }

	// RVA: 0x176B068 Offset: 0x176B068 VA: 0x176B068
	public bool IsRarityRestriction(int servantId, int servantRarity, int skillId, int skillLv = 1) { }

	// RVA: 0x1769EAC Offset: 0x1769EAC VA: 0x1769EAC
	public void DecisionFontSize(out int maxFontSize, out int minFontSize, int maxLength) { }

	// RVA: 0x1769B20 Offset: 0x1769B20 VA: 0x1769B20
	public string GetRarityInvalidMessage(out int maxLength, string servantName, int servantRarity, string equipName, string skillName, int actMaxRarity) { }

	// RVA: 0x176B1A4 Offset: 0x176B1A4 VA: 0x176B1A4
	public void SetFollowerInfo(int key, FollowerInfo followerInfo) { }

	// RVA: 0x176B21C Offset: 0x176B21C VA: 0x176B21C
	public FollowerInfo GetFollowerInfo(int key) { }

	// RVA: 0x176B280 Offset: 0x176B280 VA: 0x176B280
	public Dictionary<int, FollowerInfo> GetFollowerInfo() { }

	// RVA: 0x176B288 Offset: 0x176B288 VA: 0x176B288
	public void ClearFollowerInfo() { }

	// RVA: 0x176B2E8 Offset: 0x176B2E8 VA: 0x176B2E8
	public bool IsAvailableFriendshipUpItem() { }

	// RVA: 0x176B388 Offset: 0x176B388 VA: 0x176B388
	public ItemEntity GetAvailableFriendshipUpItemEntity() { }

	// RVA: 0x176B5B4 Offset: 0x176B5B4 VA: 0x176B5B4
	public int GetAvailableFriendshipUpItemNum() { }

	// RVA: 0x176B8A4 Offset: 0x176B8A4 VA: 0x176B8A4
	private static void .cctor() { }
}

// Namespace: 
public class PartyServantListViewItem : ListViewItem // TypeDefIndex: 10508
{
	// Fields
	private static readonly long PRIORITY_NORMAL; // 0x0
	private static readonly long PRIORITY_TOP; // 0x8
	private static readonly long PRIORITY_LOWEST; // 0x10
	private static readonly long PRIORITY_LOWEST_HEROIN_LEAVE; // 0x18
	protected UserServantEntity userServantEntity; // 0x70
	protected long[] equipIdList; // 0x78
	protected ServantEntity servantEntity; // 0x80
	protected EventUpValSetupInfo setupInfo; // 0x88
	protected QuestRestrictionInfo questRestrictionInfo; // 0x90
	protected ObscuredInt svtId; // 0x98
	protected int classId; // 0xA8
	protected int rarityId; // 0xAC
	protected int frameType; // 0xB0
	protected ObscuredInt friendship; // 0xB4
	protected int friendshipMax; // 0xC4
	protected bool isBase; // 0xC8
	protected int partyIndex; // 0xCC
	protected bool isLock; // 0xD0
	protected bool isChoice; // 0xD1
	protected bool isCostOver; // 0xD2
	protected bool isSame; // 0xD3
	protected bool isEventJoin; // 0xD4
	protected bool isLeave; // 0xD5
	protected bool isSelectLeader; // 0xD6
	protected bool isSelectEmpty; // 0xD7
	protected bool isPushMode; // 0xD8
	protected bool isPush; // 0xD9
	protected bool isEnabled; // 0xDA
	protected ListViewSort.BonusFilterKind bonusKind; // 0xDC
	protected int bonusKindId; // 0xE0
	protected bool isEventUpVal; // 0xE4
	protected bool isQuestRestriction; // 0xE5
	protected bool isUniqueSvtRestriction; // 0xE6
	protected long fatigureTime; // 0xE8
	protected bool isFatigureRecover; // 0xF0
	protected int priority; // 0xF4
	protected IconLabelInfo iconLabelInfo1; // 0xF8
	protected IconLabelInfo iconLabelInfo2; // 0x100
	protected IconLabelInfo iconLabelInfo3; // 0x108
	protected UserServantEntity equipUserServantEntity; // 0x110
	protected ServantEntity equipServantEntity; // 0x118
	protected long amountSortValue; // 0x120
	protected bool isSwapLock; // 0x128
	protected bool isSwapChoice; // 0x129
	protected bool isInvalidRarity; // 0x12A
	private int hpReinforceValue; // 0x12C
	private int atkReinforceValue; // 0x130
	private int nowMaxHpReinforceValue; // 0x134
	private int nowMaxAtkReinforceValue; // 0x138
	protected int commonRestrictionId; // 0x13C
	private int memberIndex; // 0x140
	private PartyOrganizationListViewItem baseItem; // 0x148
	private PartyServantSelectMenu.TutorialMode tutorialMode; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xC74E08 Offset: 0xC74E08 VA: 0xC74E08
	[DebuggerBrowsableAttribute] // RVA: 0xC74E08 Offset: 0xC74E08 VA: 0xC74E08
	private PartyListViewItem.MenuKind <PartyListViewItemMenuKind>k__BackingField; // 0x154
	[CompilerGeneratedAttribute] // RVA: 0xC74E44 Offset: 0xC74E44 VA: 0xC74E44
	[DebuggerBrowsableAttribute] // RVA: 0xC74E44 Offset: 0xC74E44 VA: 0xC74E44
	private bool <IsDispSvtPoint>k__BackingField; // 0x158
	[CompilerGeneratedAttribute] // RVA: 0xC74E80 Offset: 0xC74E80 VA: 0xC74E80
	[DebuggerBrowsableAttribute] // RVA: 0xC74E80 Offset: 0xC74E80 VA: 0xC74E80
	private int <SvtPoint>k__BackingField; // 0x15C
	[CompilerGeneratedAttribute] // RVA: 0xC74EBC Offset: 0xC74EBC VA: 0xC74EBC
	[DebuggerBrowsableAttribute] // RVA: 0xC74EBC Offset: 0xC74EBC VA: 0xC74EBC
	private int <SvtPointRank>k__BackingField; // 0x160

	// Properties
	public PartyListViewItem.MenuKind PartyListViewItemMenuKind { get; set; }
	public bool IsDispSvtPoint { get; set; }
	public int SvtPoint { get; set; }
	public int SvtPointRank { get; set; }
	public bool IsSelectLeader { get; }
	public bool IsSelectEmpty { get; }
	public UserServantEntity UserServant { get; }
	public ServantEntity Servant { get; }
	public int SvtId { get; }
	public int ClassId { get; }
	public int RarityId { get; }
	public int FrameType { get; }
	public string NameText { get; }
	public bool IsBase { get; }
	public bool IsParty { get; }
	public int PartyIndex { get; }
	public int Cost { get; }
	public int EquipCost { get; }
	public bool IsCostOver { get; }
	public bool IsSame { get; }
	public bool IsEventJoin { get; }
	public bool IsLeave { get; }
	public bool IsLock { get; }
	public bool IsSwapLock { get; }
	public bool IsDispLock { get; }
	public bool IsChoice { get; }
