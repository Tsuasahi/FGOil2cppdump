
	// RVA: 0x20C6E58 Offset: 0x20C6E58 VA: 0x20C6E58
	public static Color get_GUIContentColor() { }

	// RVA: 0x20C6EC4 Offset: 0x20C6EC4 VA: 0x20C6EC4
	public static void set_GUIContentColor(Color value) { }

	// RVA: 0x20C6F50 Offset: 0x20C6F50 VA: 0x20C6F50
	public static Matrix4x4 get_GUIMatrix() { }

	// RVA: 0x20C6FD8 Offset: 0x20C6FD8 VA: 0x20C6FD8
	public static void set_GUIMatrix(Matrix4x4 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC197B4 Offset: 0xC197B4 VA: 0xC197B4
	// RVA: 0x20C7088 Offset: 0x20C7088 VA: 0x20C7088
	public static Texture get_MouseCursor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC197C4 Offset: 0xC197C4 VA: 0xC197C4
	// RVA: 0x20C70F0 Offset: 0x20C70F0 VA: 0x20C70F0
	public static void set_MouseCursor(Texture value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC197D4 Offset: 0xC197D4 VA: 0xC197D4
	// RVA: 0x20C715C Offset: 0x20C715C VA: 0x20C715C
	public static bool get_LockCursor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC197E4 Offset: 0xC197E4 VA: 0xC197E4
	// RVA: 0x20C71C4 Offset: 0x20C71C4 VA: 0x20C71C4
	public static void set_LockCursor(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC197F4 Offset: 0xC197F4 VA: 0xC197F4
	// RVA: 0x20C7234 Offset: 0x20C7234 VA: 0x20C7234
	public static bool get_HideCursor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC19804 Offset: 0xC19804 VA: 0xC19804
	// RVA: 0x20C729C Offset: 0x20C729C VA: 0x20C729C
	public static void set_HideCursor(bool value) { }

	// RVA: 0x20C730C Offset: 0x20C730C VA: 0x20C730C
	private void InitLabelStyle() { }

	// RVA: 0x20C7648 Offset: 0x20C7648 VA: 0x20C7648
	private void DrawStateLabels() { }

	// RVA: 0x20C79BC Offset: 0x20C79BC VA: 0x20C79BC
	private void DrawStateLabel(PlayMakerFSM fsm) { }

	// RVA: 0x20C8294 Offset: 0x20C8294 VA: 0x20C8294
	private static string GenerateStateLabel(PlayMakerFSM fsm) { }

	// RVA: 0x20C83CC Offset: 0x20C83CC VA: 0x20C83CC
	private void Awake() { }

	// RVA: 0x20C84DC Offset: 0x20C84DC VA: 0x20C84DC
	private void OnEnable() { }

	// RVA: 0x20C84E0 Offset: 0x20C84E0 VA: 0x20C84E0
	private void OnGUI() { }

	// RVA: 0x20C8F1C Offset: 0x20C8F1C VA: 0x20C8F1C
	private void CallOnGUI(Fsm fsm) { }

	// RVA: 0x20C9014 Offset: 0x20C9014 VA: 0x20C9014
	private void OnDisable() { }

	// RVA: 0x20C8D80 Offset: 0x20C8D80 VA: 0x20C8D80
	private static void DoEditGUI() { }

	// RVA: 0x20C90E4 Offset: 0x20C90E4 VA: 0x20C90E4
	public void OnApplicationQuit() { }

	// RVA: 0x20C914C Offset: 0x20C914C VA: 0x20C914C
	public void .ctor() { }

	// RVA: 0x20C9178 Offset: 0x20C9178 VA: 0x20C9178
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC18204 Offset: 0xC18204 VA: 0xC18204
[Serializable]
private sealed class PlayMakerGUI.<>c // TypeDefIndex: 3270
{
	// Fields
	public static readonly PlayMakerGUI.<>c <>9; // 0x0
	public static Comparison<PlayMakerFSM> <>9__65_0; // 0x8

	// Methods

	// RVA: 0x20C92E0 Offset: 0x20C92E0 VA: 0x20C92E0
	private static void .cctor() { }

	// RVA: 0x20C9344 Offset: 0x20C9344 VA: 0x20C9344
	public void .ctor() { }

	// RVA: 0x20C934C Offset: 0x20C934C VA: 0x20C934C
	internal int <DrawStateLabels>b__65_0(PlayMakerFSM x, PlayMakerFSM y) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC17C6C Offset: 0xC17C6C VA: 0xC17C6C
public class PlayMakerMouseEvents : PlayMakerProxyBase // TypeDefIndex: 3271
{
	// Methods

	// RVA: 0x20CA154 Offset: 0x20CA154 VA: 0x20CA154
	public void OnMouseEnter() { }

	// RVA: 0x20CA2F4 Offset: 0x20CA2F4 VA: 0x20CA2F4
	public void OnMouseDown() { }

	// RVA: 0x20CA494 Offset: 0x20CA494 VA: 0x20CA494
	public void OnMouseUp() { }

	// RVA: 0x20CA67C Offset: 0x20CA67C VA: 0x20CA67C
	public void OnMouseUpAsButton() { }

	// RVA: 0x20CA864 Offset: 0x20CA864 VA: 0x20CA864
	public void OnMouseExit() { }

	// RVA: 0x20CAA04 Offset: 0x20CAA04 VA: 0x20CAA04
	public void OnMouseDrag() { }

	// RVA: 0x20CABA4 Offset: 0x20CABA4 VA: 0x20CABA4
	public void OnMouseOver() { }

	// RVA: 0x20CAD44 Offset: 0x20CAD44 VA: 0x20CAD44
	public void .ctor() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC17CA4 Offset: 0xC17CA4 VA: 0xC17CA4
[AddComponentMenu] // RVA: 0xC17CA4 Offset: 0xC17CA4 VA: 0xC17CA4
public class PlayMakerOnGUI : MonoBehaviour // TypeDefIndex: 3272
{
	// Fields
	public PlayMakerFSM playMakerFSM; // 0x18
	public bool previewInEditMode; // 0x20

	// Methods

	// RVA: 0x20CAD48 Offset: 0x20CAD48 VA: 0x20CAD48
	public void Start() { }

	// RVA: 0x20CADFC Offset: 0x20CADFC VA: 0x20CADFC
	public void OnGUI() { }

	// RVA: 0x20CAF1C Offset: 0x20CAF1C VA: 0x20CAF1C
	private static void DoEditGUI() { }

	// RVA: 0x20CB078 Offset: 0x20CB078 VA: 0x20CB078
	public void .ctor() { }
}

// Namespace: 
public abstract class PlayMakerProxyBase : MonoBehaviour // TypeDefIndex: 3273
{
	// Fields
	public List<PlayMakerFSM> TargetFSMs; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC184AC Offset: 0xC184AC VA: 0xC184AC
	private PlayMakerProxyBase.TriggerEvent TriggerEventCallback; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC184BC Offset: 0xC184BC VA: 0xC184BC
	private PlayMakerProxyBase.CollisionEvent CollisionEventCallback; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC184CC Offset: 0xC184CC VA: 0xC184CC
	private PlayMakerProxyBase.ParticleCollisionEvent ParticleCollisionEventCallback; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC184DC Offset: 0xC184DC VA: 0xC184DC
	private PlayMakerProxyBase.ControllerCollisionEvent ControllerCollisionEventCallback; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC184EC Offset: 0xC184EC VA: 0xC184EC
	private PlayMakerProxyBase.Trigger2DEvent Trigger2DEventCallback; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC184FC Offset: 0xC184FC VA: 0xC184FC
	private PlayMakerProxyBase.Collision2DEvent Collision2DEventCallback; // 0x48

	// Properties
	protected PlayMakerFSM[] playMakerFSMs { get; }

	// Methods

	// RVA: 0x20CD2A4 Offset: 0x20CD2A4 VA: 0x20CD2A4
	protected PlayMakerFSM[] get_playMakerFSMs() { }

	[CompilerGeneratedAttribute] // RVA: 0xC19814 Offset: 0xC19814 VA: 0xC19814
	// RVA: 0x20CD304 Offset: 0x20CD304 VA: 0x20CD304
	private void add_TriggerEventCallback(PlayMakerProxyBase.TriggerEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC19824 Offset: 0xC19824 VA: 0xC19824
	// RVA: 0x20CD3F0 Offset: 0x20CD3F0 VA: 0x20CD3F0
	private void remove_TriggerEventCallback(PlayMakerProxyBase.TriggerEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC19834 Offset: 0xC19834 VA: 0xC19834
	// RVA: 0x20CD4DC Offset: 0x20CD4DC VA: 0x20CD4DC
	private void add_CollisionEventCallback(PlayMakerProxyBase.CollisionEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC19844 Offset: 0xC19844 VA: 0xC19844
	// RVA: 0x20CD5C8 Offset: 0x20CD5C8 VA: 0x20CD5C8
	private void remove_CollisionEventCallback(PlayMakerProxyBase.CollisionEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC19854 Offset: 0xC19854 VA: 0xC19854
	// RVA: 0x20CD6B4 Offset: 0x20CD6B4 VA: 0x20CD6B4
	private void add_ParticleCollisionEventCallback(PlayMakerProxyBase.ParticleCollisionEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC19864 Offset: 0xC19864 VA: 0xC19864
	// RVA: 0x20CD7A0 Offset: 0x20CD7A0 VA: 0x20CD7A0
	private void remove_ParticleCollisionEventCallback(PlayMakerProxyBase.ParticleCollisionEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC19874 Offset: 0xC19874 VA: 0xC19874
	// RVA: 0x20CD88C Offset: 0x20CD88C VA: 0x20CD88C
	private void add_ControllerCollisionEventCallback(PlayMakerProxyBase.ControllerCollisionEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC19884 Offset: 0xC19884 VA: 0xC19884
	// RVA: 0x20CD978 Offset: 0x20CD978 VA: 0x20CD978
	private void remove_ControllerCollisionEventCallback(PlayMakerProxyBase.ControllerCollisionEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC19894 Offset: 0xC19894 VA: 0xC19894
	// RVA: 0x20CDA64 Offset: 0x20CDA64 VA: 0x20CDA64
	private void add_Trigger2DEventCallback(PlayMakerProxyBase.Trigger2DEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC198A4 Offset: 0xC198A4 VA: 0xC198A4
	// RVA: 0x20CDB50 Offset: 0x20CDB50 VA: 0x20CDB50
	private void remove_Trigger2DEventCallback(PlayMakerProxyBase.Trigger2DEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC198B4 Offset: 0xC198B4 VA: 0xC198B4
	// RVA: 0x20CDC3C Offset: 0x20CDC3C VA: 0x20CDC3C
	private void add_Collision2DEventCallback(PlayMakerProxyBase.Collision2DEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC198C4 Offset: 0xC198C4 VA: 0xC198C4
	// RVA: 0x20CDD28 Offset: 0x20CDD28 VA: 0x20CDD28
	private void remove_Collision2DEventCallback(PlayMakerProxyBase.Collision2DEvent value) { }

	// RVA: 0x20CDE14 Offset: 0x20CDE14 VA: 0x20CDE14
	public void AddTarget(PlayMakerFSM fsmTarget) { }

	// RVA: 0x20CDEC0 Offset: 0x20CDEC0 VA: 0x20CDEC0
	public bool HasTriggerEventDelegates() { }

	// RVA: 0x20CDED0 Offset: 0x20CDED0 VA: 0x20CDED0
	public void AddTriggerEventCallback(PlayMakerProxyBase.TriggerEvent triggerEvent) { }

	// RVA: 0x20CDED4 Offset: 0x20CDED4 VA: 0x20CDED4
	public void RemoveTriggerEventCallback(PlayMakerProxyBase.TriggerEvent triggerEvent) { }

	// RVA: 0x20CDED8 Offset: 0x20CDED8 VA: 0x20CDED8
	public void DoTriggerEventCallback(Collider other) { }

	// RVA: 0x20CE28C Offset: 0x20CE28C VA: 0x20CE28C
	public bool HasTrigger2DEventDelegates() { }

	// RVA: 0x20CE29C Offset: 0x20CE29C VA: 0x20CE29C
	public void AddTrigger2DEventCallback(PlayMakerProxyBase.Trigger2DEvent triggerEvent) { }

	// RVA: 0x20CE2A0 Offset: 0x20CE2A0 VA: 0x20CE2A0
	public void RemoveTrigger2DEventCallback(PlayMakerProxyBase.Trigger2DEvent triggerEvent) { }

	// RVA: 0x20CE2A4 Offset: 0x20CE2A4 VA: 0x20CE2A4
	public void DoTrigger2DEventCallback(Collider2D other) { }

	// RVA: 0x20CE658 Offset: 0x20CE658 VA: 0x20CE658
	public bool HasCollisionEventDelegates() { }

	// RVA: 0x20CE668 Offset: 0x20CE668 VA: 0x20CE668
	public void AddCollisionEventCallback(PlayMakerProxyBase.CollisionEvent collisionEvent) { }

	// RVA: 0x20CE66C Offset: 0x20CE66C VA: 0x20CE66C
	public void RemoveCollisionEventCallback(PlayMakerProxyBase.CollisionEvent collisionEvent) { }

	// RVA: 0x20C2A44 Offset: 0x20C2A44 VA: 0x20C2A44
	public void DoCollisionEventCallback(Collision collisionInfo) { }

	// RVA: 0x20CEA10 Offset: 0x20CEA10 VA: 0x20CEA10
	public bool HasCollision2DEventDelegates() { }

	// RVA: 0x20CEA20 Offset: 0x20CEA20 VA: 0x20CEA20
	public void AddCollision2DEventCallback(PlayMakerProxyBase.Collision2DEvent collisionEvent) { }

	// RVA: 0x20CEA24 Offset: 0x20CEA24 VA: 0x20CEA24
	public void RemoveCollision2DEventCallback(PlayMakerProxyBase.Collision2DEvent collisionEvent) { }

	// RVA: 0x20C2C0C Offset: 0x20C2C0C VA: 0x20C2C0C
	public void DoCollision2DEventCallback(Collision2D collisionInfo) { }

	// RVA: 0x20CEDC8 Offset: 0x20CEDC8 VA: 0x20CEDC8
	public bool HasParticleCollisionEventDelegates() { }

	// RVA: 0x20CEDD8 Offset: 0x20CEDD8 VA: 0x20CEDD8
	public void AddParticleCollisionEventCallback(PlayMakerProxyBase.ParticleCollisionEvent collisionEvent) { }

	// RVA: 0x20CEDDC Offset: 0x20CEDDC VA: 0x20CEDDC
	public void RemoveParticleCollisionEventCallback(PlayMakerProxyBase.ParticleCollisionEvent collisionEvent) { }

	// RVA: 0x20CEDE0 Offset: 0x20CEDE0 VA: 0x20CEDE0
	public void DoParticleCollisionEventCallback(GameObject go) { }

	// RVA: 0x20CF194 Offset: 0x20CF194 VA: 0x20CF194
	public bool HasControllerCollisionEventDelegates() { }

	// RVA: 0x20CF1A4 Offset: 0x20CF1A4 VA: 0x20CF1A4
	public void AddControllerCollisionEventCallback(PlayMakerProxyBase.ControllerCollisionEvent collisionEvent) { }

	// RVA: 0x20CF1A8 Offset: 0x20CF1A8 VA: 0x20CF1A8
	public void RemoveControllerCollisionEventCallback(PlayMakerProxyBase.ControllerCollisionEvent collisionEvent) { }

	// RVA: 0x20C34A4 Offset: 0x20C34A4 VA: 0x20C34A4
	public void DoControllerCollisionEventCallback(ControllerColliderHit hitCollider) { }

	// RVA: 0x20C235C Offset: 0x20C235C VA: 0x20C235C
	protected void .ctor() { }
}

// Namespace: 
public sealed class PlayMakerProxyBase.TriggerEvent : MulticastDelegate // TypeDefIndex: 3274
{
	// Methods

	// RVA: 0x20CF68C Offset: 0x20CF68C VA: 0x20CF68C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20CDEEC Offset: 0x20CDEEC VA: 0x20CDEEC Slot: 11
	public virtual void Invoke(Collider other) { }

	// RVA: 0x20CF69C Offset: 0x20CF69C VA: 0x20CF69C Slot: 12
	public virtual IAsyncResult BeginInvoke(Collider other, AsyncCallback callback, object object) { }

	// RVA: 0x20CF6C0 Offset: 0x20CF6C0 VA: 0x20CF6C0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class PlayMakerProxyBase.CollisionEvent : MulticastDelegate // TypeDefIndex: 3275
{
	// Methods

	// RVA: 0x20CF58C Offset: 0x20CF58C VA: 0x20CF58C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20CE670 Offset: 0x20CE670 VA: 0x20CE670 Slot: 11
	public virtual void Invoke(Collision collisionInfo) { }

	// RVA: 0x20CF59C Offset: 0x20CF59C VA: 0x20CF59C Slot: 12
	public virtual IAsyncResult BeginInvoke(Collision collisionInfo, AsyncCallback callback, object object) { }

	// RVA: 0x20CF5C0 Offset: 0x20CF5C0 VA: 0x20CF5C0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class PlayMakerProxyBase.Trigger2DEvent : MulticastDelegate // TypeDefIndex: 3276
{
	// Methods

	// RVA: 0x20CF64C Offset: 0x20CF64C VA: 0x20CF64C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20CE2B8 Offset: 0x20CE2B8 VA: 0x20CE2B8 Slot: 11
	public virtual void Invoke(Collider2D other) { }

	// RVA: 0x20CF65C Offset: 0x20CF65C VA: 0x20CF65C Slot: 12
	public virtual IAsyncResult BeginInvoke(Collider2D other, AsyncCallback callback, object object) { }

	// RVA: 0x20CF680 Offset: 0x20CF680 VA: 0x20CF680 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class PlayMakerProxyBase.Collision2DEvent : MulticastDelegate // TypeDefIndex: 3277
{
	// Methods

	// RVA: 0x20CF54C Offset: 0x20CF54C VA: 0x20CF54C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20CEA28 Offset: 0x20CEA28 VA: 0x20CEA28 Slot: 11
	public virtual void Invoke(Collision2D collisionInfo) { }

	// RVA: 0x20CF55C Offset: 0x20CF55C VA: 0x20CF55C Slot: 12
	public virtual IAsyncResult BeginInvoke(Collision2D collisionInfo, AsyncCallback callback, object object) { }

	// RVA: 0x20CF580 Offset: 0x20CF580 VA: 0x20CF580 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class PlayMakerProxyBase.ParticleCollisionEvent : MulticastDelegate // TypeDefIndex: 3278
{
	// Methods

	// RVA: 0x20CF60C Offset: 0x20CF60C VA: 0x20CF60C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20CEDF4 Offset: 0x20CEDF4 VA: 0x20CEDF4 Slot: 11
	public virtual void Invoke(GameObject gameObject) { }

	// RVA: 0x20CF61C Offset: 0x20CF61C VA: 0x20CF61C Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject gameObject, AsyncCallback callback, object object) { }

	// RVA: 0x20CF640 Offset: 0x20CF640 VA: 0x20CF640 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class PlayMakerProxyBase.ControllerCollisionEvent : MulticastDelegate // TypeDefIndex: 3279
{
	// Methods

	// RVA: 0x20CF5CC Offset: 0x20CF5CC VA: 0x20CF5CC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20CF1AC Offset: 0x20CF1AC VA: 0x20CF1AC Slot: 11
	public virtual void Invoke(ControllerColliderHit hitCollider) { }

	// RVA: 0x20CF5DC Offset: 0x20CF5DC VA: 0x20CF5DC Slot: 12
	public virtual IAsyncResult BeginInvoke(ControllerColliderHit hitCollider, AsyncCallback callback, object object) { }

	// RVA: 0x20CF600 Offset: 0x20CF600 VA: 0x20CF600 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC17CF0 Offset: 0xC17CF0 VA: 0xC17CF0
public class PlayMakerTriggerEnter : PlayMakerProxyBase // TypeDefIndex: 3280
{
	// Methods

	// RVA: 0x20CF6CC Offset: 0x20CF6CC VA: 0x20CF6CC
	public void OnTriggerEnter(Collider other) { }

	// RVA: 0x20CF87C Offset: 0x20CF87C VA: 0x20CF87C
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC17D28 Offset: 0xC17D28 VA: 0xC17D28
public class PlayMakerTriggerEnter2D : PlayMakerProxyBase // TypeDefIndex: 3281
{
	// Methods

	// RVA: 0x20CF880 Offset: 0x20CF880 VA: 0x20CF880
	public void OnTriggerEnter2D(Collider2D other) { }

	// RVA: 0x20CFA30 Offset: 0x20CFA30 VA: 0x20CFA30
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC17D60 Offset: 0xC17D60 VA: 0xC17D60
public class PlayMakerTriggerExit : PlayMakerProxyBase // TypeDefIndex: 3282
{
	// Methods

	// RVA: 0x2B92E3C Offset: 0x2B92E3C VA: 0x2B92E3C
	public void OnTriggerExit(Collider other) { }

	// RVA: 0x2B92FE0 Offset: 0x2B92FE0 VA: 0x2B92FE0
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC17D98 Offset: 0xC17D98 VA: 0xC17D98
public class PlayMakerTriggerExit2D : PlayMakerProxyBase // TypeDefIndex: 3283
{
	// Methods

	// RVA: 0x2B92FE8 Offset: 0x2B92FE8 VA: 0x2B92FE8
	public void OnTriggerExit2D(Collider2D other) { }

	// RVA: 0x2B9318C Offset: 0x2B9318C VA: 0x2B9318C
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC17DD0 Offset: 0xC17DD0 VA: 0xC17DD0
public class PlayMakerTriggerStay : PlayMakerProxyBase // TypeDefIndex: 3284
{
	// Methods

	// RVA: 0x2B93194 Offset: 0x2B93194 VA: 0x2B93194
	public void OnTriggerStay(Collider other) { }

	// RVA: 0x2B93338 Offset: 0x2B93338 VA: 0x2B93338
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC17E08 Offset: 0xC17E08 VA: 0xC17E08
public class PlayMakerTriggerStay2D : PlayMakerProxyBase // TypeDefIndex: 3285
{
	// Methods

	// RVA: 0x2B93340 Offset: 0x2B93340 VA: 0x2B93340
	public void OnTriggerStay2D(Collider2D other) { }

	// RVA: 0x2B934E4 Offset: 0x2B934E4 VA: 0x2B934E4
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC17E40 Offset: 0xC17E40 VA: 0xC17E40
public class PlayMakerParticleCollision : PlayMakerProxyBase // TypeDefIndex: 3286
{
	// Methods

	// RVA: 0x20CB088 Offset: 0x20CB088 VA: 0x20CB088
	public void OnParticleCollision(GameObject other) { }

	// RVA: 0x20CB210 Offset: 0x20CB210 VA: 0x20CB210
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC17E78 Offset: 0xC17E78 VA: 0xC17E78
public class PlayMakerJointBreak : PlayMakerProxyBase // TypeDefIndex: 3287
{
	// Methods

	// RVA: 0x20C9CB0 Offset: 0x20C9CB0 VA: 0x20C9CB0
	public void OnJointBreak(float breakForce) { }

	// RVA: 0x20C9E40 Offset: 0x20C9E40 VA: 0x20C9E40
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC17EB0 Offset: 0xC17EB0 VA: 0xC17EB0
public class PlayMakerJointBreak2D : PlayMakerProxyBase // TypeDefIndex: 3288
{
	// Methods

	// RVA: 0x20C9E44 Offset: 0x20C9E44 VA: 0x20C9E44
	public void OnJointBreak2D(Joint2D brokenJoint) { }

	// RVA: 0x20C9FCC Offset: 0x20C9FCC VA: 0x20C9FCC
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
public enum CollisionType // TypeDefIndex: 3289
{
	// Fields
	public int value__; // 0x0
	public const CollisionType OnCollisionEnter = 0;
	public const CollisionType OnCollisionStay = 1;
	public const CollisionType OnCollisionExit = 2;
	public const CollisionType OnControllerColliderHit = 3;
	public const CollisionType OnParticleCollision = 4;
}

// Namespace: HutongGames.PlayMaker
public enum TriggerType // TypeDefIndex: 3290
{
	// Fields
	public int value__; // 0x0
	public const TriggerType OnTriggerEnter = 0;
	public const TriggerType OnTriggerStay = 1;
	public const TriggerType OnTriggerExit = 2;
}

// Namespace: HutongGames.PlayMaker
public enum Collision2DType // TypeDefIndex: 3291
{
	// Fields
	public int value__; // 0x0
	public const Collision2DType OnCollisionEnter2D = 0;
	public const Collision2DType OnCollisionStay2D = 1;
	public const Collision2DType OnCollisionExit2D = 2;
	public const Collision2DType OnParticleCollision = 3;
}

// Namespace: HutongGames.PlayMaker
public enum Trigger2DType // TypeDefIndex: 3292
{
	// Fields
	public int value__; // 0x0
	public const Trigger2DType OnTriggerEnter2D = 0;
	public const Trigger2DType OnTriggerStay2D = 1;
	public const Trigger2DType OnTriggerExit2D = 2;
}

// Namespace: HutongGames.PlayMaker
public enum InterpolationType // TypeDefIndex: 3293
{
	// Fields
	public int value__; // 0x0
	public const InterpolationType Linear = 0;
	public const InterpolationType EaseInOut = 1;
}

// Namespace: HutongGames.PlayMaker
public enum MouseEventType // TypeDefIndex: 3294
{
	// Fields
	public int value__; // 0x0
	public const MouseEventType OnMouseEnter = 0;
	public const MouseEventType OnMouseOver = 1;
	public const MouseEventType OnMouseExit = 2;
	public const MouseEventType OnMouseDown = 3;
	public const MouseEventType OnMouseUp = 4;
	public const MouseEventType OnMouseDrag = 5;
}

// Namespace: HutongGames.PlayMaker
public enum ActionCategory // TypeDefIndex: 3295
{
	// Fields
	public int value__; // 0x0
	public const ActionCategory Animation = 0;
	public const ActionCategory Audio = 1;
	public const ActionCategory Debug = 2;
	public const ActionCategory Events = 3;
	public const ActionCategory GameObject = 4;
	public const ActionCategory GUI = 5;
	public const ActionCategory Input = 6;
	public const ActionCategory Math = 7;
	public const ActionCategory Movement = 8;
	public const ActionCategory Physics = 9;
	public const ActionCategory Renderer = 10;
	public const ActionCategory ScriptControl = 11;
	public const ActionCategory StateMachine = 12;
	public const ActionCategory Effects = 13;
	public const ActionCategory Transform = 14;
	public const ActionCategory GameLogic = 15;
	public const ActionCategory String = 16;
	public const ActionCategory Convert = 17;
	public const ActionCategory GUIElement = 18;
	public const ActionCategory Vector3 = 19;
	public const ActionCategory Material = 20;
	public const ActionCategory Lights = 21;
	public const ActionCategory Camera = 22;
	public const ActionCategory RenderSettings = 23;
	public const ActionCategory Color = 24;
	public const ActionCategory Level = 25;
	public const ActionCategory GUILayout = 26;
	public const ActionCategory Logic = 27;
	public const ActionCategory World = 28;
	public const ActionCategory Screen = 29;
	public const ActionCategory Movie = 30;
	public const ActionCategory Time = 31;
	public const ActionCategory Character = 32;
	public const ActionCategory Device = 33;
	public const ActionCategory Controller = 34;
	public const ActionCategory CharacterController = 35;
	public const ActionCategory iTween = 36;
	public const ActionCategory AnimateVariables = 37;
	public const ActionCategory InputDevice = 38;
	public const ActionCategory Rect = 39;
	public const ActionCategory UnityObject = 40;
	public const ActionCategory Application = 41;
	public const ActionCategory NavMesh = 42;
	public const ActionCategory NavMeshAgent = 43;
	public const ActionCategory Network = 44;
	public const ActionCategory Vector2 = 45;
	public const ActionCategory Array = 46;
	public const ActionCategory Mecanim = 47;
	public const ActionCategory Animator = 48;
	public const ActionCategory Quaternion = 49;
	public const ActionCategory Enum = 50;
	public const ActionCategory Physics2D = 51;
	public const ActionCategory Trigonometry = 52;
	public const ActionCategory Scene = 53;
	public const ActionCategory UI = 54;
	public const ActionCategory Tween = 55;
}

// Namespace: HutongGames.PlayMaker
public enum UIHint // TypeDefIndex: 3296
{
	// Fields
	public int value__; // 0x0
	public const UIHint None = 0;
	public const UIHint TextArea = 1;
	public const UIHint Behaviour = 2;
	public const UIHint Script = 3;
	public const UIHint Method = 4;
	public const UIHint Coroutine = 5;
	public const UIHint Animation = 6;
	public const UIHint Tag = 7;
	public const UIHint Layer = 8;
	public const UIHint Description = 9;
	public const UIHint Variable = 10;
	public const UIHint ScriptComponent = 11;
	public const UIHint Comment = 12;
	public const UIHint NamedColor = 13;
	public const UIHint NamedTexture = 14;
	public const UIHint FsmName = 15;
	public const UIHint FsmEvent = 16;
	public const UIHint FsmFloat = 17;
	public const UIHint FsmInt = 18;
	public const UIHint FsmBool = 19;
	public const UIHint FsmString = 20;
	public const UIHint FsmVector3 = 21;
	public const UIHint FsmGameObject = 22;
	public const UIHint FsmColor = 23;
	public const UIHint FsmRect = 24;
	public const UIHint FsmMaterial = 25;
	public const UIHint FsmTexture = 26;
	public const UIHint FsmQuaternion = 27;
	public const UIHint FsmObject = 28;
	public const UIHint FsmVector2 = 29;
	public const UIHint FsmEnum = 30;
	public const UIHint FsmArray = 31;
	public const UIHint AnimatorFloat = 32;
	public const UIHint AnimatorBool = 33;
	public const UIHint AnimatorInt = 34;
	public const UIHint AnimatorTrigger = 35;
	public const UIHint SortingLayer = 36;
	public const UIHint TagMenu = 37;
}

// Namespace: HutongGames.PlayMaker
public enum MouseButton // TypeDefIndex: 3297
{
	// Fields
	public int value__; // 0x0
	public const MouseButton None = -1;
	public const MouseButton Left = 0;
	public const MouseButton Right = 1;
	public const MouseButton Middle = 2;
}

// Namespace: HutongGames.PlayMaker
public enum LogLevel // TypeDefIndex: 3298
{
	// Fields
	public int value__; // 0x0
	public const LogLevel Info = 0;
	public const LogLevel Warning = 1;
	public const LogLevel Error = 2;
}

// Namespace: HutongGames.PlayMaker
public enum ColorBlendMode // TypeDefIndex: 3299
{
	// Fields
	public int value__; // 0x0
	public const ColorBlendMode Normal = 0;
	public const ColorBlendMode Multiply = 1;
	public const ColorBlendMode Screen = 2;
}

// Namespace: HutongGames.PlayMaker
public class ActionReport // TypeDefIndex: 3300
{
	// Fields
	public static readonly List<ActionReport> ActionReportList; // 0x0
	public static int InfoCount; // 0x8
	public static int ErrorCount; // 0xC
	public PlayMakerFSM fsm; // 0x10
	public FsmState state; // 0x18
	public FsmStateAction action; // 0x20
	public int actionIndex; // 0x28
	public string logText; // 0x30
	public bool isError; // 0x38
	public string parameter; // 0x40

	// Methods

	// RVA: 0x1D577BC Offset: 0x1D577BC VA: 0x1D577BC
	public static void Start() { }

	// RVA: 0x1D4FB78 Offset: 0x1D4FB78 VA: 0x1D4FB78
	public static ActionReport Log(PlayMakerFSM fsm, FsmState state, FsmStateAction action, int actionIndex, string parameter, string logLine, bool isError = False) { }

	// RVA: 0x1D57860 Offset: 0x1D57860 VA: 0x1D57860
	private static bool ActionReportContains(ActionReport report) { }

	// RVA: 0x1D579C4 Offset: 0x1D579C4 VA: 0x1D579C4
	private bool SameAs(ActionReport actionReport) { }

	// RVA: 0x1D57AF4 Offset: 0x1D57AF4 VA: 0x1D57AF4
	public static void LogWarning(PlayMakerFSM fsm, FsmState state, FsmStateAction action, int actionIndex, string parameter, string logLine) { }

	// RVA: 0x1D4FA38 Offset: 0x1D4FA38 VA: 0x1D4FA38
	public static void LogError(PlayMakerFSM fsm, FsmState state, FsmStateAction action, int actionIndex, string parameter, string logLine) { }

	// RVA: 0x1D57C34 Offset: 0x1D57C34 VA: 0x1D57C34
	public static void LogError(PlayMakerFSM fsm, FsmState state, FsmStateAction action, int actionIndex, string logLine) { }

	// RVA: 0x1D57D70 Offset: 0x1D57D70 VA: 0x1D57D70
	public static void Clear() { }

	// RVA: 0x1D57DF4 Offset: 0x1D57DF4 VA: 0x1D57DF4
	public static void Remove(PlayMakerFSM fsm) { }

	// RVA: 0x1D57EF0 Offset: 0x1D57EF0 VA: 0x1D57EF0
	public static int GetCount() { }

	// RVA: 0x1D57858 Offset: 0x1D57858 VA: 0x1D57858
	public void .ctor() { }

	// RVA: 0x1D57F74 Offset: 0x1D57F74 VA: 0x1D57F74
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC18214 Offset: 0xC18214 VA: 0xC18214
private sealed class ActionReport.<>c__DisplayClass18_0 // TypeDefIndex: 3301
{
	// Fields
	public PlayMakerFSM fsm; // 0x10

	// Methods

	// RVA: 0x1D57EE8 Offset: 0x1D57EE8 VA: 0x1D57EE8
	public void .ctor() { }

	// RVA: 0x1D57FE8 Offset: 0x1D57FE8 VA: 0x1D57FE8
	internal bool <Remove>b__0(ActionReport x) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC17EE8 Offset: 0xC17EE8 VA: 0xC17EE8
public sealed class ActionTarget : Attribute // TypeDefIndex: 3302
{
	// Fields
	private readonly Type objectType; // 0x10
	private readonly string fieldName; // 0x18
	private readonly bool allowPrefabs; // 0x20

	// Properties
	public Type ObjectType { get; }
	public string FieldName { get; }
	public bool AllowPrefabs { get; }

	// Methods

	// RVA: 0x1D580A8 Offset: 0x1D580A8 VA: 0x1D580A8
	public Type get_ObjectType() { }

	// RVA: 0x1D580B0 Offset: 0x1D580B0 VA: 0x1D580B0
	public string get_FieldName() { }

	// RVA: 0x1D580B8 Offset: 0x1D580B8 VA: 0x1D580B8
	public bool get_AllowPrefabs() { }

	// RVA: 0x1D580C0 Offset: 0x1D580C0 VA: 0x1D580C0
	public void .ctor(Type objectType, string fieldName = "", bool allowPrefabs = False) { }

	// RVA: 0x1D58104 Offset: 0x1D58104 VA: 0x1D58104
	public bool IsSameAs(ActionTarget actionTarget) { }

	// RVA: 0x1D581B4 Offset: 0x1D581B4 VA: 0x1D581B4 Slot: 3
	public override string ToString() { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC17F24 Offset: 0xC17F24 VA: 0xC17F24
public sealed class NoActionTargetsAttribute : Attribute // TypeDefIndex: 3303
{
	// Methods

	// RVA: 0x20BF7EC Offset: 0x20BF7EC VA: 0x20BF7EC
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC17F38 Offset: 0xC17F38 VA: 0xC17F38
public sealed class HideIfAttribute : Attribute // TypeDefIndex: 3304
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC1850C Offset: 0xC1850C VA: 0xC1850C
	private string <Test>k__BackingField; // 0x10

	// Properties
	public string Test { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC198D4 Offset: 0xC198D4 VA: 0xC198D4
	// RVA: 0x20BEE1C Offset: 0x20BEE1C VA: 0x20BEE1C
	public string get_Test() { }

	[CompilerGeneratedAttribute] // RVA: 0xC198E4 Offset: 0xC198E4 VA: 0xC198E4
	// RVA: 0x20BEE24 Offset: 0x20BEE24 VA: 0x20BEE24
	private void set_Test(string value) { }

	// RVA: 0x20BEE2C Offset: 0x20BEE2C VA: 0x20BEE2C
	public void .ctor(string test) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC17F4C Offset: 0xC17F4C VA: 0xC17F4C
public sealed class SettingsMenuItemAttribute : Attribute // TypeDefIndex: 3305
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC1851C Offset: 0xC1851C VA: 0xC1851C
	private string <MenuItem>k__BackingField; // 0x10

	// Properties
	public string MenuItem { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC198F4 Offset: 0xC198F4 VA: 0xC198F4
	// RVA: 0x20C1BF4 Offset: 0x20C1BF4 VA: 0x20C1BF4
	public string get_MenuItem() { }

	[CompilerGeneratedAttribute] // RVA: 0xC19904 Offset: 0xC19904 VA: 0xC19904
	// RVA: 0x20C1BFC Offset: 0x20C1BFC VA: 0x20C1BFC
	private void set_MenuItem(string value) { }

	// RVA: 0x20C1C04 Offset: 0x20C1C04 VA: 0x20C1C04
	public void .ctor(string menuItem) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC17F60 Offset: 0xC17F60 VA: 0xC17F60
public sealed class PreviewFieldAttribute : Attribute // TypeDefIndex: 3306
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC1852C Offset: 0xC1852C VA: 0xC1852C
	private string <MethodName>k__BackingField; // 0x10

	// Properties
	public string MethodName { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC19914 Offset: 0xC19914 VA: 0xC19914
	// RVA: 0x20BF85C Offset: 0x20BF85C VA: 0x20BF85C
	public string get_MethodName() { }

	[CompilerGeneratedAttribute] // RVA: 0xC19924 Offset: 0xC19924 VA: 0xC19924
	// RVA: 0x20BF864 Offset: 0x20BF864 VA: 0x20BF864
	private void set_MethodName(string value) { }

	// RVA: 0x20BF86C Offset: 0x20BF86C VA: 0x20BF86C
	public void .ctor(string methodName) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC17F74 Offset: 0xC17F74 VA: 0xC17F74
public sealed class SettingsMenuItemStateAttribute : Attribute // TypeDefIndex: 3307
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC1853C Offset: 0xC1853C VA: 0xC1853C
	private string <MenuItem>k__BackingField; // 0x10

	// Properties
	public string MenuItem { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC19934 Offset: 0xC19934 VA: 0xC19934
	// RVA: 0x20C1C30 Offset: 0x20C1C30 VA: 0x20C1C30
	public string get_MenuItem() { }

	[CompilerGeneratedAttribute] // RVA: 0xC19944 Offset: 0xC19944 VA: 0xC19944
	// RVA: 0x20C1C38 Offset: 0x20C1C38 VA: 0x20C1C38
	private void set_MenuItem(string value) { }

	// RVA: 0x20C1C40 Offset: 0x20C1C40 VA: 0x20C1C40
	public void .ctor(string menuItem) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC17F88 Offset: 0xC17F88 VA: 0xC17F88
public sealed class ActionCategoryAttribute : Attribute // TypeDefIndex: 3308
{
	// Fields
	private readonly string category; // 0x10

	// Properties
	public string Category { get; }

	// Methods

	// RVA: 0x1D44E9C Offset: 0x1D44E9C VA: 0x1D44E9C
	public string get_Category() { }

	// RVA: 0x1D44EA4 Offset: 0x1D44EA4 VA: 0x1D44EA4
	public void .ctor(string category) { }

	// RVA: 0x1D44ED0 Offset: 0x1D44ED0 VA: 0x1D44ED0
	public void .ctor(ActionCategory category) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC17F9C Offset: 0xC17F9C VA: 0xC17F9C
public sealed class ActionSection : Attribute // TypeDefIndex: 3309
{
	// Fields
	private readonly string section; // 0x10

	// Properties
	public string Section { get; }

	// Methods

	// RVA: 0x1D58074 Offset: 0x1D58074 VA: 0x1D58074
	public string get_Section() { }

	// RVA: 0x1D5807C Offset: 0x1D5807C VA: 0x1D5807C
	public void .ctor(string section) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC17FB0 Offset: 0xC17FB0 VA: 0xC17FB0
public sealed class ArrayEditorAttribute : Attribute // TypeDefIndex: 3310
{
	// Fields
	private readonly VariableType variableType; // 0x10
	private readonly Type objectType; // 0x18
	private readonly string elementName; // 0x20
	private readonly int fixedSize; // 0x28
