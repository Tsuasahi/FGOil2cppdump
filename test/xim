	// RVA: 0xFD4984 Offset: 0xFD4984 VA: 0xFD4984
	public void OnMouseOver() { }

	// RVA: 0xFD4B24 Offset: 0xFD4B24 VA: 0xFD4B24
	public void .ctor() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC83DCC Offset: 0xC83DCC VA: 0xC83DCC
[AddComponentMenu] // RVA: 0xC83DCC Offset: 0xC83DCC VA: 0xC83DCC
public class PlayMakerOnGUI : MonoBehaviour // TypeDefIndex: 3272
{
	// Fields
	public PlayMakerFSM playMakerFSM; // 0x18
	public bool previewInEditMode; // 0x20

	// Methods

	// RVA: 0xFD4B28 Offset: 0xFD4B28 VA: 0xFD4B28
	public void Start() { }

	// RVA: 0xFD4BDC Offset: 0xFD4BDC VA: 0xFD4BDC
	public void OnGUI() { }

	// RVA: 0xFD4CFC Offset: 0xFD4CFC VA: 0xFD4CFC
	private static void DoEditGUI() { }

	// RVA: 0xFD4E58 Offset: 0xFD4E58 VA: 0xFD4E58
	public void .ctor() { }
}

// Namespace: 
public abstract class PlayMakerProxyBase : MonoBehaviour // TypeDefIndex: 3273
{
	// Fields
	public List<PlayMakerFSM> TargetFSMs; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC845D4 Offset: 0xC845D4 VA: 0xC845D4
	private PlayMakerProxyBase.TriggerEvent TriggerEventCallback; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC845E4 Offset: 0xC845E4 VA: 0xC845E4
	private PlayMakerProxyBase.CollisionEvent CollisionEventCallback; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC845F4 Offset: 0xC845F4 VA: 0xC845F4
	private PlayMakerProxyBase.ParticleCollisionEvent ParticleCollisionEventCallback; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC84604 Offset: 0xC84604 VA: 0xC84604
	private PlayMakerProxyBase.ControllerCollisionEvent ControllerCollisionEventCallback; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC84614 Offset: 0xC84614 VA: 0xC84614
	private PlayMakerProxyBase.Trigger2DEvent Trigger2DEventCallback; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC84624 Offset: 0xC84624 VA: 0xC84624
	private PlayMakerProxyBase.Collision2DEvent Collision2DEventCallback; // 0x48

	// Properties
	protected PlayMakerFSM[] playMakerFSMs { get; }

	// Methods

	// RVA: 0xFD7084 Offset: 0xFD7084 VA: 0xFD7084
	protected PlayMakerFSM[] get_playMakerFSMs() { }

	[CompilerGeneratedAttribute] // RVA: 0xC8593C Offset: 0xC8593C VA: 0xC8593C
	// RVA: 0xFD70E4 Offset: 0xFD70E4 VA: 0xFD70E4
	private void add_TriggerEventCallback(PlayMakerProxyBase.TriggerEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC8594C Offset: 0xC8594C VA: 0xC8594C
	// RVA: 0xFD71D0 Offset: 0xFD71D0 VA: 0xFD71D0
	private void remove_TriggerEventCallback(PlayMakerProxyBase.TriggerEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC8595C Offset: 0xC8595C VA: 0xC8595C
	// RVA: 0xFD72BC Offset: 0xFD72BC VA: 0xFD72BC
	private void add_CollisionEventCallback(PlayMakerProxyBase.CollisionEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC8596C Offset: 0xC8596C VA: 0xC8596C
	// RVA: 0xFD73A8 Offset: 0xFD73A8 VA: 0xFD73A8
	private void remove_CollisionEventCallback(PlayMakerProxyBase.CollisionEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC8597C Offset: 0xC8597C VA: 0xC8597C
	// RVA: 0xFD7494 Offset: 0xFD7494 VA: 0xFD7494
	private void add_ParticleCollisionEventCallback(PlayMakerProxyBase.ParticleCollisionEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC8598C Offset: 0xC8598C VA: 0xC8598C
	// RVA: 0xFD7580 Offset: 0xFD7580 VA: 0xFD7580
	private void remove_ParticleCollisionEventCallback(PlayMakerProxyBase.ParticleCollisionEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC8599C Offset: 0xC8599C VA: 0xC8599C
	// RVA: 0xFD766C Offset: 0xFD766C VA: 0xFD766C
	private void add_ControllerCollisionEventCallback(PlayMakerProxyBase.ControllerCollisionEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC859AC Offset: 0xC859AC VA: 0xC859AC
	// RVA: 0xFD7758 Offset: 0xFD7758 VA: 0xFD7758
	private void remove_ControllerCollisionEventCallback(PlayMakerProxyBase.ControllerCollisionEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC859BC Offset: 0xC859BC VA: 0xC859BC
	// RVA: 0xFD7844 Offset: 0xFD7844 VA: 0xFD7844
	private void add_Trigger2DEventCallback(PlayMakerProxyBase.Trigger2DEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC859CC Offset: 0xC859CC VA: 0xC859CC
	// RVA: 0xFD7930 Offset: 0xFD7930 VA: 0xFD7930
	private void remove_Trigger2DEventCallback(PlayMakerProxyBase.Trigger2DEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC859DC Offset: 0xC859DC VA: 0xC859DC
	// RVA: 0xFD7A1C Offset: 0xFD7A1C VA: 0xFD7A1C
	private void add_Collision2DEventCallback(PlayMakerProxyBase.Collision2DEvent value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC859EC Offset: 0xC859EC VA: 0xC859EC
	// RVA: 0xFD7B08 Offset: 0xFD7B08 VA: 0xFD7B08
	private void remove_Collision2DEventCallback(PlayMakerProxyBase.Collision2DEvent value) { }

	// RVA: 0xFD7BF4 Offset: 0xFD7BF4 VA: 0xFD7BF4
	public void AddTarget(PlayMakerFSM fsmTarget) { }

	// RVA: 0xFD7CA0 Offset: 0xFD7CA0 VA: 0xFD7CA0
	public bool HasTriggerEventDelegates() { }

	// RVA: 0xFD7CB0 Offset: 0xFD7CB0 VA: 0xFD7CB0
	public void AddTriggerEventCallback(PlayMakerProxyBase.TriggerEvent triggerEvent) { }

	// RVA: 0xFD7CB4 Offset: 0xFD7CB4 VA: 0xFD7CB4
	public void RemoveTriggerEventCallback(PlayMakerProxyBase.TriggerEvent triggerEvent) { }

	// RVA: 0xFD7CB8 Offset: 0xFD7CB8 VA: 0xFD7CB8
	public void DoTriggerEventCallback(Collider other) { }

	// RVA: 0xFD806C Offset: 0xFD806C VA: 0xFD806C
	public bool HasTrigger2DEventDelegates() { }

	// RVA: 0xFD807C Offset: 0xFD807C VA: 0xFD807C
	public void AddTrigger2DEventCallback(PlayMakerProxyBase.Trigger2DEvent triggerEvent) { }

	// RVA: 0xFD8080 Offset: 0xFD8080 VA: 0xFD8080
	public void RemoveTrigger2DEventCallback(PlayMakerProxyBase.Trigger2DEvent triggerEvent) { }

	// RVA: 0xFD8084 Offset: 0xFD8084 VA: 0xFD8084
	public void DoTrigger2DEventCallback(Collider2D other) { }

	// RVA: 0xFD8438 Offset: 0xFD8438 VA: 0xFD8438
	public bool HasCollisionEventDelegates() { }

	// RVA: 0xFD8448 Offset: 0xFD8448 VA: 0xFD8448
	public void AddCollisionEventCallback(PlayMakerProxyBase.CollisionEvent collisionEvent) { }

	// RVA: 0xFD844C Offset: 0xFD844C VA: 0xFD844C
	public void RemoveCollisionEventCallback(PlayMakerProxyBase.CollisionEvent collisionEvent) { }

	// RVA: 0xFCC824 Offset: 0xFCC824 VA: 0xFCC824
	public void DoCollisionEventCallback(Collision collisionInfo) { }

	// RVA: 0xFD87F0 Offset: 0xFD87F0 VA: 0xFD87F0
	public bool HasCollision2DEventDelegates() { }

	// RVA: 0xFD8800 Offset: 0xFD8800 VA: 0xFD8800
	public void AddCollision2DEventCallback(PlayMakerProxyBase.Collision2DEvent collisionEvent) { }

	// RVA: 0xFD8804 Offset: 0xFD8804 VA: 0xFD8804
	public void RemoveCollision2DEventCallback(PlayMakerProxyBase.Collision2DEvent collisionEvent) { }

	// RVA: 0xFCC9EC Offset: 0xFCC9EC VA: 0xFCC9EC
	public void DoCollision2DEventCallback(Collision2D collisionInfo) { }

	// RVA: 0xFD8BA8 Offset: 0xFD8BA8 VA: 0xFD8BA8
	public bool HasParticleCollisionEventDelegates() { }

	// RVA: 0xFD8BB8 Offset: 0xFD8BB8 VA: 0xFD8BB8
	public void AddParticleCollisionEventCallback(PlayMakerProxyBase.ParticleCollisionEvent collisionEvent) { }

	// RVA: 0xFD8BBC Offset: 0xFD8BBC VA: 0xFD8BBC
	public void RemoveParticleCollisionEventCallback(PlayMakerProxyBase.ParticleCollisionEvent collisionEvent) { }

	// RVA: 0xFD8BC0 Offset: 0xFD8BC0 VA: 0xFD8BC0
	public void DoParticleCollisionEventCallback(GameObject go) { }

	// RVA: 0xFD8F74 Offset: 0xFD8F74 VA: 0xFD8F74
	public bool HasControllerCollisionEventDelegates() { }

	// RVA: 0xFD8F84 Offset: 0xFD8F84 VA: 0xFD8F84
	public void AddControllerCollisionEventCallback(PlayMakerProxyBase.ControllerCollisionEvent collisionEvent) { }

	// RVA: 0xFD8F88 Offset: 0xFD8F88 VA: 0xFD8F88
	public void RemoveControllerCollisionEventCallback(PlayMakerProxyBase.ControllerCollisionEvent collisionEvent) { }

	// RVA: 0xFCD284 Offset: 0xFCD284 VA: 0xFCD284
	public void DoControllerCollisionEventCallback(ControllerColliderHit hitCollider) { }

	// RVA: 0xFCC13C Offset: 0xFCC13C VA: 0xFCC13C
	protected void .ctor() { }
}

// Namespace: 
public sealed class PlayMakerProxyBase.TriggerEvent : MulticastDelegate // TypeDefIndex: 3274
{
	// Methods

	// RVA: 0xFD946C Offset: 0xFD946C VA: 0xFD946C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xFD7CCC Offset: 0xFD7CCC VA: 0xFD7CCC Slot: 11
	public virtual void Invoke(Collider other) { }

	// RVA: 0xFD947C Offset: 0xFD947C VA: 0xFD947C Slot: 12
	public virtual IAsyncResult BeginInvoke(Collider other, AsyncCallback callback, object object) { }

	// RVA: 0xFD94A0 Offset: 0xFD94A0 VA: 0xFD94A0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class PlayMakerProxyBase.CollisionEvent : MulticastDelegate // TypeDefIndex: 3275
{
	// Methods

	// RVA: 0xFD936C Offset: 0xFD936C VA: 0xFD936C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xFD8450 Offset: 0xFD8450 VA: 0xFD8450 Slot: 11
	public virtual void Invoke(Collision collisionInfo) { }

	// RVA: 0xFD937C Offset: 0xFD937C VA: 0xFD937C Slot: 12
	public virtual IAsyncResult BeginInvoke(Collision collisionInfo, AsyncCallback callback, object object) { }

	// RVA: 0xFD93A0 Offset: 0xFD93A0 VA: 0xFD93A0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class PlayMakerProxyBase.Trigger2DEvent : MulticastDelegate // TypeDefIndex: 3276
{
	// Methods

	// RVA: 0xFD942C Offset: 0xFD942C VA: 0xFD942C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xFD8098 Offset: 0xFD8098 VA: 0xFD8098 Slot: 11
	public virtual void Invoke(Collider2D other) { }

	// RVA: 0xFD943C Offset: 0xFD943C VA: 0xFD943C Slot: 12
	public virtual IAsyncResult BeginInvoke(Collider2D other, AsyncCallback callback, object object) { }

	// RVA: 0xFD9460 Offset: 0xFD9460 VA: 0xFD9460 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class PlayMakerProxyBase.Collision2DEvent : MulticastDelegate // TypeDefIndex: 3277
{
	// Methods

	// RVA: 0xFD932C Offset: 0xFD932C VA: 0xFD932C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xFD8808 Offset: 0xFD8808 VA: 0xFD8808 Slot: 11
	public virtual void Invoke(Collision2D collisionInfo) { }

	// RVA: 0xFD933C Offset: 0xFD933C VA: 0xFD933C Slot: 12
	public virtual IAsyncResult BeginInvoke(Collision2D collisionInfo, AsyncCallback callback, object object) { }

	// RVA: 0xFD9360 Offset: 0xFD9360 VA: 0xFD9360 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class PlayMakerProxyBase.ParticleCollisionEvent : MulticastDelegate // TypeDefIndex: 3278
{
	// Methods

	// RVA: 0xFD93EC Offset: 0xFD93EC VA: 0xFD93EC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xFD8BD4 Offset: 0xFD8BD4 VA: 0xFD8BD4 Slot: 11
	public virtual void Invoke(GameObject gameObject) { }

	// RVA: 0xFD93FC Offset: 0xFD93FC VA: 0xFD93FC Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject gameObject, AsyncCallback callback, object object) { }

	// RVA: 0xFD9420 Offset: 0xFD9420 VA: 0xFD9420 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class PlayMakerProxyBase.ControllerCollisionEvent : MulticastDelegate // TypeDefIndex: 3279
{
	// Methods

	// RVA: 0xFD93AC Offset: 0xFD93AC VA: 0xFD93AC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xFD8F8C Offset: 0xFD8F8C VA: 0xFD8F8C Slot: 11
	public virtual void Invoke(ControllerColliderHit hitCollider) { }

	// RVA: 0xFD93BC Offset: 0xFD93BC VA: 0xFD93BC Slot: 12
	public virtual IAsyncResult BeginInvoke(ControllerColliderHit hitCollider, AsyncCallback callback, object object) { }

	// RVA: 0xFD93E0 Offset: 0xFD93E0 VA: 0xFD93E0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83E18 Offset: 0xC83E18 VA: 0xC83E18
public class PlayMakerTriggerEnter : PlayMakerProxyBase // TypeDefIndex: 3280
{
	// Methods

	// RVA: 0xFD94AC Offset: 0xFD94AC VA: 0xFD94AC
	public void OnTriggerEnter(Collider other) { }

	// RVA: 0xFD965C Offset: 0xFD965C VA: 0xFD965C
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83E50 Offset: 0xC83E50 VA: 0xC83E50
public class PlayMakerTriggerEnter2D : PlayMakerProxyBase // TypeDefIndex: 3281
{
	// Methods

	// RVA: 0xFD9660 Offset: 0xFD9660 VA: 0xFD9660
	public void OnTriggerEnter2D(Collider2D other) { }

	// RVA: 0xFD9810 Offset: 0xFD9810 VA: 0xFD9810
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83E88 Offset: 0xC83E88 VA: 0xC83E88
public class PlayMakerTriggerExit : PlayMakerProxyBase // TypeDefIndex: 3282
{
	// Methods

	// RVA: 0x1381F4C Offset: 0x1381F4C VA: 0x1381F4C
	public void OnTriggerExit(Collider other) { }

	// RVA: 0x13820F0 Offset: 0x13820F0 VA: 0x13820F0
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83EC0 Offset: 0xC83EC0 VA: 0xC83EC0
public class PlayMakerTriggerExit2D : PlayMakerProxyBase // TypeDefIndex: 3283
{
	// Methods

	// RVA: 0x13820F8 Offset: 0x13820F8 VA: 0x13820F8
	public void OnTriggerExit2D(Collider2D other) { }

	// RVA: 0x138229C Offset: 0x138229C VA: 0x138229C
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83EF8 Offset: 0xC83EF8 VA: 0xC83EF8
public class PlayMakerTriggerStay : PlayMakerProxyBase // TypeDefIndex: 3284
{
	// Methods

	// RVA: 0x13822A4 Offset: 0x13822A4 VA: 0x13822A4
	public void OnTriggerStay(Collider other) { }

	// RVA: 0x1382448 Offset: 0x1382448 VA: 0x1382448
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83F30 Offset: 0xC83F30 VA: 0xC83F30
public class PlayMakerTriggerStay2D : PlayMakerProxyBase // TypeDefIndex: 3285
{
	// Methods

	// RVA: 0x1382450 Offset: 0x1382450 VA: 0x1382450
	public void OnTriggerStay2D(Collider2D other) { }

	// RVA: 0x13825F4 Offset: 0x13825F4 VA: 0x13825F4
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83F68 Offset: 0xC83F68 VA: 0xC83F68
public class PlayMakerParticleCollision : PlayMakerProxyBase // TypeDefIndex: 3286
{
	// Methods

	// RVA: 0xFD4E68 Offset: 0xFD4E68 VA: 0xFD4E68
	public void OnParticleCollision(GameObject other) { }

	// RVA: 0xFD4FF0 Offset: 0xFD4FF0 VA: 0xFD4FF0
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83FA0 Offset: 0xC83FA0 VA: 0xC83FA0
public class PlayMakerJointBreak : PlayMakerProxyBase // TypeDefIndex: 3287
{
	// Methods

	// RVA: 0xFD3A90 Offset: 0xFD3A90 VA: 0xFD3A90
	public void OnJointBreak(float breakForce) { }

	// RVA: 0xFD3C20 Offset: 0xFD3C20 VA: 0xFD3C20
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83FD8 Offset: 0xC83FD8 VA: 0xC83FD8
public class PlayMakerJointBreak2D : PlayMakerProxyBase // TypeDefIndex: 3288
{
	// Methods

	// RVA: 0xFD3C24 Offset: 0xFD3C24 VA: 0xFD3C24
	public void OnJointBreak2D(Joint2D brokenJoint) { }

	// RVA: 0xFD3DAC Offset: 0xFD3DAC VA: 0xFD3DAC
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
public enum CollisionType // TypeDefIndex: 3289
{
	// Fields
	public int value__; // 0x0
	public const CollisionType OnCollisionEnter = 0;
	public const CollisionType OnCollisionStay = 1;
	public const CollisionType OnCollisionExit = 2;
	public const CollisionType OnControllerColliderHit = 3;
	public const CollisionType OnParticleCollision = 4;
}

// Namespace: HutongGames.PlayMaker
public enum TriggerType // TypeDefIndex: 3290
{
	// Fields
	public int value__; // 0x0
	public const TriggerType OnTriggerEnter = 0;
	public const TriggerType OnTriggerStay = 1;
	public const TriggerType OnTriggerExit = 2;
}

// Namespace: HutongGames.PlayMaker
public enum Collision2DType // TypeDefIndex: 3291
{
	// Fields
	public int value__; // 0x0
	public const Collision2DType OnCollisionEnter2D = 0;
	public const Collision2DType OnCollisionStay2D = 1;
	public const Collision2DType OnCollisionExit2D = 2;
	public const Collision2DType OnParticleCollision = 3;
}

// Namespace: HutongGames.PlayMaker
public enum Trigger2DType // TypeDefIndex: 3292
{
	// Fields
	public int value__; // 0x0
	public const Trigger2DType OnTriggerEnter2D = 0;
	public const Trigger2DType OnTriggerStay2D = 1;
	public const Trigger2DType OnTriggerExit2D = 2;
}

// Namespace: HutongGames.PlayMaker
public enum InterpolationType // TypeDefIndex: 3293
{
	// Fields
	public int value__; // 0x0
	public const InterpolationType Linear = 0;
	public const InterpolationType EaseInOut = 1;
}

// Namespace: HutongGames.PlayMaker
public enum MouseEventType // TypeDefIndex: 3294
{
	// Fields
	public int value__; // 0x0
	public const MouseEventType OnMouseEnter = 0;
	public const MouseEventType OnMouseOver = 1;
	public const MouseEventType OnMouseExit = 2;
	public const MouseEventType OnMouseDown = 3;
	public const MouseEventType OnMouseUp = 4;
	public const MouseEventType OnMouseDrag = 5;
}

// Namespace: HutongGames.PlayMaker
public enum ActionCategory // TypeDefIndex: 3295
{
	// Fields
	public int value__; // 0x0
	public const ActionCategory Animation = 0;
	public const ActionCategory Audio = 1;
	public const ActionCategory Debug = 2;
	public const ActionCategory Events = 3;
	public const ActionCategory GameObject = 4;
	public const ActionCategory GUI = 5;
	public const ActionCategory Input = 6;
	public const ActionCategory Math = 7;
	public const ActionCategory Movement = 8;
	public const ActionCategory Physics = 9;
	public const ActionCategory Renderer = 10;
	public const ActionCategory ScriptControl = 11;
	public const ActionCategory StateMachine = 12;
	public const ActionCategory Effects = 13;
	public const ActionCategory Transform = 14;
	public const ActionCategory GameLogic = 15;
	public const ActionCategory String = 16;
	public const ActionCategory Convert = 17;
	public const ActionCategory GUIElement = 18;
	public const ActionCategory Vector3 = 19;
	public const ActionCategory Material = 20;
	public const ActionCategory Lights = 21;
	public const ActionCategory Camera = 22;
	public const ActionCategory RenderSettings = 23;
	public const ActionCategory Color = 24;
	public const ActionCategory Level = 25;
	public const ActionCategory GUILayout = 26;
	public const ActionCategory Logic = 27;
	public const ActionCategory World = 28;
	public const ActionCategory Screen = 29;
	public const ActionCategory Movie = 30;
	public const ActionCategory Time = 31;
	public const ActionCategory Character = 32;
	public const ActionCategory Device = 33;
	public const ActionCategory Controller = 34;
	public const ActionCategory CharacterController = 35;
	public const ActionCategory iTween = 36;
	public const ActionCategory AnimateVariables = 37;
	public const ActionCategory InputDevice = 38;
	public const ActionCategory Rect = 39;
	public const ActionCategory UnityObject = 40;
	public const ActionCategory Application = 41;
	public const ActionCategory NavMesh = 42;
	public const ActionCategory NavMeshAgent = 43;
	public const ActionCategory Network = 44;
	public const ActionCategory Vector2 = 45;
	public const ActionCategory Array = 46;
	public const ActionCategory Mecanim = 47;
	public const ActionCategory Animator = 48;
	public const ActionCategory Quaternion = 49;
	public const ActionCategory Enum = 50;
	public const ActionCategory Physics2D = 51;
	public const ActionCategory Trigonometry = 52;
	public const ActionCategory Scene = 53;
	public const ActionCategory UI = 54;
	public const ActionCategory Tween = 55;
}

// Namespace: HutongGames.PlayMaker
public enum UIHint // TypeDefIndex: 3296
{
	// Fields
	public int value__; // 0x0
	public const UIHint None = 0;
	public const UIHint TextArea = 1;
	public const UIHint Behaviour = 2;
	public const UIHint Script = 3;
	public const UIHint Method = 4;
	public const UIHint Coroutine = 5;
	public const UIHint Animation = 6;
	public const UIHint Tag = 7;
	public const UIHint Layer = 8;
	public const UIHint Description = 9;
	public const UIHint Variable = 10;
	public const UIHint ScriptComponent = 11;
	public const UIHint Comment = 12;
	public const UIHint NamedColor = 13;
	public const UIHint NamedTexture = 14;
	public const UIHint FsmName = 15;
	public const UIHint FsmEvent = 16;
	public const UIHint FsmFloat = 17;
	public const UIHint FsmInt = 18;
	public const UIHint FsmBool = 19;
	public const UIHint FsmString = 20;
	public const UIHint FsmVector3 = 21;
	public const UIHint FsmGameObject = 22;
	public const UIHint FsmColor = 23;
	public const UIHint FsmRect = 24;
	public const UIHint FsmMaterial = 25;
	public const UIHint FsmTexture = 26;
	public const UIHint FsmQuaternion = 27;
	public const UIHint FsmObject = 28;
	public const UIHint FsmVector2 = 29;
	public const UIHint FsmEnum = 30;
	public const UIHint FsmArray = 31;
	public const UIHint AnimatorFloat = 32;
	public const UIHint AnimatorBool = 33;
	public const UIHint AnimatorInt = 34;
	public const UIHint AnimatorTrigger = 35;
	public const UIHint SortingLayer = 36;
	public const UIHint TagMenu = 37;
}

// Namespace: HutongGames.PlayMaker
public enum MouseButton // TypeDefIndex: 3297
{
	// Fields
	public int value__; // 0x0
	public const MouseButton None = -1;
	public const MouseButton Left = 0;
	public const MouseButton Right = 1;
	public const MouseButton Middle = 2;
}

// Namespace: HutongGames.PlayMaker
public enum LogLevel // TypeDefIndex: 3298
{
	// Fields
	public int value__; // 0x0
	public const LogLevel Info = 0;
	public const LogLevel Warning = 1;
	public const LogLevel Error = 2;
}

// Namespace: HutongGames.PlayMaker
public enum ColorBlendMode // TypeDefIndex: 3299
{
	// Fields
	public int value__; // 0x0
	public const ColorBlendMode Normal = 0;
	public const ColorBlendMode Multiply = 1;
	public const ColorBlendMode Screen = 2;
}

// Namespace: HutongGames.PlayMaker
public class ActionReport // TypeDefIndex: 3300
{
	// Fields
	public static readonly List<ActionReport> ActionReportList; // 0x0
	public static int InfoCount; // 0x8
	public static int ErrorCount; // 0xC
	public PlayMakerFSM fsm; // 0x10
	public FsmState state; // 0x18
	public FsmStateAction action; // 0x20
	public int actionIndex; // 0x28
	public string logText; // 0x30
	public bool isError; // 0x38
	public string parameter; // 0x40

	// Methods

	// RVA: 0xE2B11C Offset: 0xE2B11C VA: 0xE2B11C
	public static void Start() { }

	// RVA: 0xE234D8 Offset: 0xE234D8 VA: 0xE234D8
	public static ActionReport Log(PlayMakerFSM fsm, FsmState state, FsmStateAction action, int actionIndex, string parameter, string logLine, bool isError = False) { }

	// RVA: 0xE2B1C0 Offset: 0xE2B1C0 VA: 0xE2B1C0
	private static bool ActionReportContains(ActionReport report) { }

	// RVA: 0xE2B324 Offset: 0xE2B324 VA: 0xE2B324
	private bool SameAs(ActionReport actionReport) { }

	// RVA: 0xE2B454 Offset: 0xE2B454 VA: 0xE2B454
	public static void LogWarning(PlayMakerFSM fsm, FsmState state, FsmStateAction action, int actionIndex, string parameter, string logLine) { }

	// RVA: 0xE23398 Offset: 0xE23398 VA: 0xE23398
	public static void LogError(PlayMakerFSM fsm, FsmState state, FsmStateAction action, int actionIndex, string parameter, string logLine) { }

	// RVA: 0xE2B594 Offset: 0xE2B594 VA: 0xE2B594
	public static void LogError(PlayMakerFSM fsm, FsmState state, FsmStateAction action, int actionIndex, string logLine) { }

	// RVA: 0xE2B6D0 Offset: 0xE2B6D0 VA: 0xE2B6D0
	public static void Clear() { }

	// RVA: 0xE2B754 Offset: 0xE2B754 VA: 0xE2B754
	public static void Remove(PlayMakerFSM fsm) { }

	// RVA: 0xE2B850 Offset: 0xE2B850 VA: 0xE2B850
	public static int GetCount() { }

	// RVA: 0xE2B1B8 Offset: 0xE2B1B8 VA: 0xE2B1B8
	public void .ctor() { }

	// RVA: 0xE2B8D4 Offset: 0xE2B8D4 VA: 0xE2B8D4
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC8433C Offset: 0xC8433C VA: 0xC8433C
private sealed class ActionReport.<>c__DisplayClass18_0 // TypeDefIndex: 3301
{
	// Fields
	public PlayMakerFSM fsm; // 0x10

	// Methods

	// RVA: 0xE2B848 Offset: 0xE2B848 VA: 0xE2B848
	public void .ctor() { }

	// RVA: 0xE2B948 Offset: 0xE2B948 VA: 0xE2B948
	internal bool <Remove>b__0(ActionReport x) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC84010 Offset: 0xC84010 VA: 0xC84010
public sealed class ActionTarget : Attribute // TypeDefIndex: 3302
{
	// Fields
	private readonly Type objectType; // 0x10
	private readonly string fieldName; // 0x18
	private readonly bool allowPrefabs; // 0x20

	// Properties
	public Type ObjectType { get; }
	public string FieldName { get; }
	public bool AllowPrefabs { get; }

	// Methods

	// RVA: 0xE2BA08 Offset: 0xE2BA08 VA: 0xE2BA08
	public Type get_ObjectType() { }

	// RVA: 0xE2BA10 Offset: 0xE2BA10 VA: 0xE2BA10
	public string get_FieldName() { }

	// RVA: 0xE2BA18 Offset: 0xE2BA18 VA: 0xE2BA18
	public bool get_AllowPrefabs() { }

	// RVA: 0xE2BA20 Offset: 0xE2BA20 VA: 0xE2BA20
	public void .ctor(Type objectType, string fieldName = "", bool allowPrefabs = False) { }

	// RVA: 0xE2BA64 Offset: 0xE2BA64 VA: 0xE2BA64
	public bool IsSameAs(ActionTarget actionTarget) { }

	// RVA: 0xE2BB14 Offset: 0xE2BB14 VA: 0xE2BB14 Slot: 3
	public override string ToString() { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC8404C Offset: 0xC8404C VA: 0xC8404C
public sealed class NoActionTargetsAttribute : Attribute // TypeDefIndex: 3303
{
	// Methods

	// RVA: 0xFC95CC Offset: 0xFC95CC VA: 0xFC95CC
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC84060 Offset: 0xC84060 VA: 0xC84060
public sealed class HideIfAttribute : Attribute // TypeDefIndex: 3304
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC84634 Offset: 0xC84634 VA: 0xC84634
	private string <Test>k__BackingField; // 0x10

	// Properties
	public string Test { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC859FC Offset: 0xC859FC VA: 0xC859FC
	// RVA: 0xFC8BFC Offset: 0xFC8BFC VA: 0xFC8BFC
	public string get_Test() { }

	[CompilerGeneratedAttribute] // RVA: 0xC85A0C Offset: 0xC85A0C VA: 0xC85A0C
	// RVA: 0xFC8C04 Offset: 0xFC8C04 VA: 0xFC8C04
	private void set_Test(string value) { }

	// RVA: 0xFC8C0C Offset: 0xFC8C0C VA: 0xFC8C0C
	public void .ctor(string test) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC84074 Offset: 0xC84074 VA: 0xC84074
public sealed class SettingsMenuItemAttribute : Attribute // TypeDefIndex: 3305
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC84644 Offset: 0xC84644 VA: 0xC84644
	private string <MenuItem>k__BackingField; // 0x10

	// Properties
	public string MenuItem { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC85A1C Offset: 0xC85A1C VA: 0xC85A1C
	// RVA: 0xFCB9D4 Offset: 0xFCB9D4 VA: 0xFCB9D4
	public string get_MenuItem() { }

	[CompilerGeneratedAttribute] // RVA: 0xC85A2C Offset: 0xC85A2C VA: 0xC85A2C
	// RVA: 0xFCB9DC Offset: 0xFCB9DC VA: 0xFCB9DC
	private void set_MenuItem(string value) { }

	// RVA: 0xFCB9E4 Offset: 0xFCB9E4 VA: 0xFCB9E4
	public void .ctor(string menuItem) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC84088 Offset: 0xC84088 VA: 0xC84088
public sealed class PreviewFieldAttribute : Attribute // TypeDefIndex: 3306
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC84654 Offset: 0xC84654 VA: 0xC84654
	private string <MethodName>k__BackingField; // 0x10

	// Properties
	public string MethodName { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC85A3C Offset: 0xC85A3C VA: 0xC85A3C
	// RVA: 0xFC963C Offset: 0xFC963C VA: 0xFC963C
	public string get_MethodName() { }

	[CompilerGeneratedAttribute] // RVA: 0xC85A4C Offset: 0xC85A4C VA: 0xC85A4C
	// RVA: 0xFC9644 Offset: 0xFC9644 VA: 0xFC9644
	private void set_MethodName(string value) { }

	// RVA: 0xFC964C Offset: 0xFC964C VA: 0xFC964C
	public void .ctor(string methodName) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC8409C Offset: 0xC8409C VA: 0xC8409C
public sealed class SettingsMenuItemStateAttribute : Attribute // TypeDefIndex: 3307
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC84664 Offset: 0xC84664 VA: 0xC84664
	private string <MenuItem>k__BackingField; // 0x10

	// Properties
	public string MenuItem { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC85A5C Offset: 0xC85A5C VA: 0xC85A5C
	// RVA: 0xFCBA10 Offset: 0xFCBA10 VA: 0xFCBA10
	public string get_MenuItem() { }

	[CompilerGeneratedAttribute] // RVA: 0xC85A6C Offset: 0xC85A6C VA: 0xC85A6C
	// RVA: 0xFCBA18 Offset: 0xFCBA18 VA: 0xFCBA18
	private void set_MenuItem(string value) { }

	// RVA: 0xFCBA20 Offset: 0xFCBA20 VA: 0xFCBA20
	public void .ctor(string menuItem) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC840B0 Offset: 0xC840B0 VA: 0xC840B0
public sealed class ActionCategoryAttribute : Attribute // TypeDefIndex: 3308
{
	// Fields
	private readonly string category; // 0x10

	// Properties
	public string Category { get; }

	// Methods

	// RVA: 0xE187FC Offset: 0xE187FC VA: 0xE187FC
	public string get_Category() { }

	// RVA: 0xE18804 Offset: 0xE18804 VA: 0xE18804
	public void .ctor(string category) { }

	// RVA: 0xE18830 Offset: 0xE18830 VA: 0xE18830
	public void .ctor(ActionCategory category) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC840C4 Offset: 0xC840C4 VA: 0xC840C4
public sealed class ActionSection : Attribute // TypeDefIndex: 3309
{
	// Fields
	private readonly string section; // 0x10

	// Properties
	public string Section { get; }

	// Methods

	// RVA: 0xE2B9D4 Offset: 0xE2B9D4 VA: 0xE2B9D4
	public string get_Section() { }

	// RVA: 0xE2B9DC Offset: 0xE2B9DC VA: 0xE2B9DC
	public void .ctor(string section) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC840D8 Offset: 0xC840D8 VA: 0xC840D8
public sealed class ArrayEditorAttribute : Attribute // TypeDefIndex: 3310
{
	// Fields
	private readonly VariableType variableType; // 0x10
	private readonly Type objectType; // 0x18
	private readonly string elementName; // 0x20
	private readonly int fixedSize; // 0x28
	private readonly int maxSize; // 0x2C
	private readonly int minSize; // 0x30

	// Properties
	public VariableType VariableType { get; }
	public Type ObjectType { get; }
	public string ElementName { get; }
	public int FixedSize { get; }
	public bool Resizable { get; }
	public int MinSize { get; }
	public int MaxSize { get; }

	// Methods

	// RVA: 0xE2BC24 Offset: 0xE2BC24 VA: 0xE2BC24
	public VariableType get_VariableType() { }

	// RVA: 0xE2BC2C Offset: 0xE2BC2C VA: 0xE2BC2C
	public Type get_ObjectType() { }

	// RVA: 0xE2BC34 Offset: 0xE2BC34 VA: 0xE2BC34
	public string get_ElementName() { }

	// RVA: 0xE2BC3C Offset: 0xE2BC3C VA: 0xE2BC3C
	public int get_FixedSize() { }

	// RVA: 0xE2BC44 Offset: 0xE2BC44 VA: 0xE2BC44
	public bool get_Resizable() { }

	// RVA: 0xE2BC54 Offset: 0xE2BC54 VA: 0xE2BC54
	public int get_MinSize() { }

	// RVA: 0xE2BC5C Offset: 0xE2BC5C VA: 0xE2BC5C
	public int get_MaxSize() { }

	// RVA: 0xE2BC64 Offset: 0xE2BC64 VA: 0xE2BC64
	public void .ctor(VariableType variableType, string elementName = "", int fixedSize = 0, int minSize = 0, int maxSize = 65536) { }

	// RVA: 0xE2BCBC Offset: 0xE2BCBC VA: 0xE2BCBC
	public void .ctor(Type objectType, string elementName = "", int fixedSize = 0, int minSize = 0, int maxSize = 65536) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC840EC Offset: 0xC840EC VA: 0xC840EC
public sealed class CheckForComponentAttribute : Attribute // TypeDefIndex: 3311
{
	// Fields
	private readonly Type type0; // 0x10
	private readonly Type type1; // 0x18
	private readonly Type type2; // 0x20

	// Properties
	public Type Type0 { get; }
	public Type Type1 { get; }
	public Type Type2 { get; }

	// Methods

	// RVA: 0xE2BD50 Offset: 0xE2BD50 VA: 0xE2BD50
	public Type get_Type0() { }

	// RVA: 0xE2BD58 Offset: 0xE2BD58 VA: 0xE2BD58
	public Type get_Type1() { }

	// RVA: 0xE2BD60 Offset: 0xE2BD60 VA: 0xE2BD60
	public Type get_Type2() { }

	// RVA: 0xE2BD68 Offset: 0xE2BD68 VA: 0xE2BD68
	public void .ctor(Type type0) { }

	// RVA: 0xE2BD94 Offset: 0xE2BD94 VA: 0xE2BD94
	public void .ctor(Type type0, Type type1) { }

	// RVA: 0xE2BDCC Offset: 0xE2BDCC VA: 0xE2BDCC
	public void .ctor(Type type0, Type type1, Type type2) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC84128 Offset: 0xC84128 VA: 0xC84128
public sealed class CompoundArrayAttribute : Attribute // TypeDefIndex: 3312
{
	// Fields
	private readonly string name; // 0x10
	private readonly string firstArrayName; // 0x18
	private readonly string secondArrayName; // 0x20

	// Properties
	public string Name { get; }
	public string FirstArrayName { get; }
	public string SecondArrayName { get; }

	// Methods

	// RVA: 0xE2BE0C Offset: 0xE2BE0C VA: 0xE2BE0C
	public string get_Name() { }

	// RVA: 0xE2BE14 Offset: 0xE2BE14 VA: 0xE2BE14
	public string get_FirstArrayName() { }

	// RVA: 0xE2BE1C Offset: 0xE2BE1C VA: 0xE2BE1C
	public string get_SecondArrayName() { }

	// RVA: 0xE2BE24 Offset: 0xE2BE24 VA: 0xE2BE24
	public void .ctor(string name, string firstArrayName, string secondArrayName) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC8413C Offset: 0xC8413C VA: 0xC8413C
public sealed class DisplayOrderAttribute : Attribute // TypeDefIndex: 3313
{
	// Fields
	private readonly int index; // 0x10

	// Properties
	public int Index { get; }

	// Methods

	// RVA: 0xE2C8D0 Offset: 0xE2C8D0 VA: 0xE2C8D0
	public int get_Index() { }

	// RVA: 0xE2C8D8 Offset: 0xE2C8D8 VA: 0xE2C8D8
