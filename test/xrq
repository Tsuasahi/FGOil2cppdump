	[SerializeField] // RVA: 0xCD3690 Offset: 0xCD3690 VA: 0xCD3690
	private UILabel totalQpLabel; // 0x20
	[SerializeField] // RVA: 0xCD36A0 Offset: 0xCD36A0 VA: 0xCD36A0
	private GameObject eventPointRoot; // 0x28
	[SerializeField] // RVA: 0xCD36B0 Offset: 0xCD36B0 VA: 0xCD36B0
	private GameObject eventDamageRoot; // 0x30
	[SerializeField] // RVA: 0xCD36C0 Offset: 0xCD36C0 VA: 0xCD36C0
	[HeaderAttribute] // RVA: 0xCD36C0 Offset: 0xCD36C0 VA: 0xCD36C0
	private UISprite[] groupIcons; // 0x38
	[SerializeField] // RVA: 0xCD370C Offset: 0xCD370C VA: 0xCD370C
	private UILabel[] groupLabels; // 0x40
	[SerializeField] // RVA: 0xCD371C Offset: 0xCD371C VA: 0xCD371C
	[HeaderAttribute] // RVA: 0xCD371C Offset: 0xCD371C VA: 0xCD371C
	private UISprite[] pointBgSps; // 0x48
	[SerializeField] // RVA: 0xCD3768 Offset: 0xCD3768 VA: 0xCD3768
	private UILabel getTitleLabel; // 0x50
	[SerializeField] // RVA: 0xCD3778 Offset: 0xCD3778 VA: 0xCD3778
	private Transform getLabelRoot; // 0x58
	[SerializeField] // RVA: 0xCD3788 Offset: 0xCD3788 VA: 0xCD3788
	private UILabel totalTitleLabel; // 0x60
	[SerializeField] // RVA: 0xCD3798 Offset: 0xCD3798 VA: 0xCD3798
	private Transform totalLabelRoot; // 0x68
	[SerializeField] // RVA: 0xCD37A8 Offset: 0xCD37A8 VA: 0xCD37A8
	private int titleLabelWidth; // 0x70
	[SerializeField] // RVA: 0xCD37B8 Offset: 0xCD37B8 VA: 0xCD37B8
	private int pointLabelWidth; // 0x74
	[SerializeField] // RVA: 0xCD37C8 Offset: 0xCD37C8 VA: 0xCD37C8
	private int triplePointLabelWidth; // 0x78
	[SerializeField] // RVA: 0xCD37D8 Offset: 0xCD37D8 VA: 0xCD37D8
	private Vector3 groupLabelPosition; // 0x7C
	[SerializeField] // RVA: 0xCD37E8 Offset: 0xCD37E8 VA: 0xCD37E8
	private Vector3 groupIconPosition; // 0x88
	[SerializeField] // RVA: 0xCD37F8 Offset: 0xCD37F8 VA: 0xCD37F8
	private int groupIconSpace; // 0x94

	// Methods

	// RVA: 0x16A1F08 Offset: 0x16A1F08 VA: 0x16A1F08
	public void .ctor() { }

	// RVA: 0x16A1F10 Offset: 0x16A1F10 VA: 0x16A1F10
	public void SetQpInfo(int totalQp, int getQp) { }

	// RVA: 0x16A2034 Offset: 0x16A2034 VA: 0x16A2034
	public void SetGroupPointInfo(int eventId, long userId, UserEventPointEntity[] oldUsrPoint, int[] viewGroupIds) { }

	// RVA: 0x16A21CC Offset: 0x16A21CC VA: 0x16A21CC
	private void SwitchViewMode(long userId, int[] viewGroupIds, UserEventPointEntity[] oldUsrPoint, EventDetailEntity eventDetail) { }

	// RVA: 0x16A3404 Offset: 0x16A3404 VA: 0x16A3404
	private void CommonPointViewFunc(UISprite getSp, UISprite totalSp, UILabel getLabel, UILabel totalLabel, long userId, int eventId, int groupId, long oldPoint = 0) { }

	// RVA: 0x16A3768 Offset: 0x16A3768 VA: 0x16A3768
	public void SetGroupDamageInfo(int eventId, UserEventEntity[] oldUsrEvent, long addDamagePoint, UserGameEntity userGame) { }
}

// Namespace: 
public class BattleResultExpComponent : MonoBehaviour // TypeDefIndex: 9356
{
	// Fields
	public BattleResultComponent parentComp; // 0x18
	public PlayMakerFSM myFsm; // 0x20
	public BattleWindowComponent window; // 0x28
	public GameObject figureRoot; // 0x30
	public float time_exptotal; // 0x38
	public UILabel mst_Title; // 0x40
	public UILabel mst_Lv; // 0x48
	public SimpleAnimation mst_LvupSimpleAnim; // 0x50
	public Animation mst_LvupAnim; // 0x58
	public UILabel mst_getexpLabel; // 0x60
	public UILabel mst_atexpLabel; // 0x68
	public UISprite mst_nextSprite; // 0x70
	public UIProgressBar mst_slider; // 0x78
	public GameObject masterLevelupRoot; // 0x80
	public BattleWindowComponent masterupwindow; // 0x88
	public UISprite masterLevelwindowSprite; // 0x90
	public BattleResultMasterUpStatusComponent[] upParamList; // 0x98
	public UISprite[] lvUpRewardSpArray; // 0xA0
	public UILabel[] lvUpRewardLabelArray; // 0xA8
	public UILabel equip_Title; // 0xB0
	public UILabel equip_Lv; // 0xB8
	public SimpleAnimation equip_LvupSimpleAnim; // 0xC0
	public Animation equip_LvupAnim; // 0xC8
	public UILabel equip_nameLabel; // 0xD0
	public UILabel equip_getexpLabel; // 0xD8
	public UILabel equip_atexpLabel; // 0xE0
	public UISprite equip_nextSprite; // 0xE8
	public UIProgressBar equip_slider; // 0xF0
	public GameObject equipLevelupRoot; // 0xF8
	public BattleWindowComponent equipupwindow; // 0x100
	public UISprite eqLevelwindowSprite; // 0x108
	public Transform eqConfRoot; // 0x110
	public UILabel equip_oldlevelLabel; // 0x118
	public UILabel equip_newlevelLabel; // 0x120
	public UILabel equip_confLabel; // 0x128
	public GameObject damageRecordRoot; // 0x130
	public BattleWindowComponent damageRecordWindow; // 0x138
	public SimpleAnimation damage_LvupSimpleAnim; // 0x140
	public Animation damage_LvupAnim; // 0x148
	public UILabel damage_recordLabel; // 0x150
	public UILabel damage_battleLabel; // 0x158
	public UISprite damage_recordRenewalSp; // 0x160
	public Color record_renewalColor; // 0x168
	public Color record_intactColor; // 0x178
	public Color damage_renewalColor; // 0x188
	public Color damage_intactColor; // 0x198
	public BattleResultKnockdownComponent knockdownRecordWindow; // 0x1A8
	private UserGameEntity oldGame; // 0x1B0
	private UserGameEntity newGame; // 0x1B8
	private UserEquipEntity oldEquip; // 0x1C0
	private UserEquipEntity newEquip; // 0x1C8
	private long bestTurnDamage; // 0x1D0
	private long oldRecordDamage; // 0x1D8
	private bool updateFlg; // 0x1E0
	private SePlayer MeterSePlayer; // 0x1E8
	private bool bondsCountUp; // 0x1F0
	private List<UIUnityRenderer> effectUIList; // 0x1F8

	// Methods

	// RVA: 0x16A37C0 Offset: 0x16A37C0 VA: 0x16A37C0
	public void .ctor() { }

	// RVA: 0x1696DDC Offset: 0x1696DDC VA: 0x1696DDC
	public void Init() { }

	// RVA: 0x16A384C Offset: 0x16A384C VA: 0x16A384C
	public void setMasterLv(int level) { }

	// RVA: 0x16A39B0 Offset: 0x16A39B0 VA: 0x16A39B0
	public void setEquipLv(int level) { }

	// RVA: 0x1698D50 Offset: 0x1698D50 VA: 0x1698D50
	public void setResultData(UserGameEntity oldGame, UserEquipEntity oldEquip, MasterLvRewardInfo[] masterLvInfoArray, AssetData resultAssetData, long maxTurnDamage, long oldRecord, QuestKnockdownResult knockdownResult) { }

	// RVA: 0x16A46A4 Offset: 0x16A46A4 VA: 0x16A46A4
	private void CreateRewardEffect(AssetData data, UISprite targetIcon, string effectName) { }

	// RVA: 0x16A3C60 Offset: 0x16A3C60 VA: 0x16A3C60
	public bool setMasterExp(long getexp, long nowexp, int start_level) { }

	// RVA: 0x16A40D0 Offset: 0x16A40D0 VA: 0x16A40D0
	public bool setEquipExp(int equipId, int getexp, int nowexp, int start_level) { }

	// RVA: 0x169AC40 Offset: 0x169AC40 VA: 0x169AC40
	public void Open() { }

	// RVA: 0x16A4958 Offset: 0x16A4958 VA: 0x16A4958
	public void Close() { }

	// RVA: 0x16A49EC Offset: 0x16A49EC VA: 0x16A49EC
	public void endClose() { }

	// RVA: 0x16A4A78 Offset: 0x16A4A78 VA: 0x16A4A78
	public void endMoveFigure() { }

	// RVA: 0x16A4F20 Offset: 0x16A4F20 VA: 0x16A4F20
	public void finishUpdateValue() { }

	// RVA: 0x16A4F98 Offset: 0x16A4F98 VA: 0x16A4F98
	public void UpdateValue(float val) { }

	// RVA: 0x16A4FA0 Offset: 0x16A4FA0 VA: 0x16A4FA0
	public void updateValueActual(float val, bool isFinish = False) { }

	// RVA: 0x16A51A0 Offset: 0x16A51A0 VA: 0x16A51A0
	public void checkMasterLevelUp() { }

	// RVA: 0x16A5534 Offset: 0x16A5534 VA: 0x16A5534
	public void endOpenMasterUp() { }

	// RVA: 0x16A5598 Offset: 0x16A5598 VA: 0x16A5598
	public void activeTouch() { }

	// RVA: 0x16A55C8 Offset: 0x16A55C8 VA: 0x16A55C8
	public void closeMasterUp() { }

	// RVA: 0x16A5738 Offset: 0x16A5738 VA: 0x16A5738
	public void endCloseMasterUp() { }

	// RVA: 0x16A57BC Offset: 0x16A57BC VA: 0x16A57BC
	public void checkEquipLevelUp() { }

	// RVA: 0x16A5A94 Offset: 0x16A5A94 VA: 0x16A5A94
	public void endOpenEquipUp() { }

	// RVA: 0x16A5AC4 Offset: 0x16A5AC4 VA: 0x16A5AC4
	public void closeEquipUp() { }

	// RVA: 0x16A5B74 Offset: 0x16A5B74 VA: 0x16A5B74
	public void endCloseEquipUp() { }

	// RVA: 0x16A5BF8 Offset: 0x16A5BF8 VA: 0x16A5BF8
	public void checkDamageRecord() { }

	// RVA: 0x16A5EAC Offset: 0x16A5EAC VA: 0x16A5EAC
	public void endOpenDamageRecord() { }

	// RVA: 0x16A5EDC Offset: 0x16A5EDC VA: 0x16A5EDC
	public void closeDamageRecord() { }

	// RVA: 0x16A5F8C Offset: 0x16A5F8C VA: 0x16A5F8C
	public void endCloseDamageRecord() { }

	// RVA: 0x16A6010 Offset: 0x16A6010 VA: 0x16A6010
	public void checkOpenKnockdownRecord() { }

	// RVA: 0x16A60F8 Offset: 0x16A60F8 VA: 0x16A60F8
	public void closeKnockdownRecord() { }
}

// Namespace: 
private enum BattleResultExpComponent.ParamList // TypeDefIndex: 9357
{
	// Fields
	public int value__; // 0x0
	public const BattleResultExpComponent.ParamList MASTER_LEVEL = 0;
	public const BattleResultExpComponent.ParamList AP = 1;
	public const BattleResultExpComponent.ParamList COST = 2;
	public const BattleResultExpComponent.ParamList FRIENDKEEP = 3;
	public const BattleResultExpComponent.ParamList FULL_AP = 4;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB05D0 Offset: 0xCB05D0 VA: 0xCB05D0
private sealed class BattleResultExpComponent.<setResultData>c__AnonStorey0 // TypeDefIndex: 9358
{
	// Fields
	internal UserGameEntity oldGame; // 0x10
	internal MasterLvRewardInfo[] masterLvInfoArray; // 0x18
	internal BattleResultExpComponent $this; // 0x20

	// Methods

	// RVA: 0x16A3B14 Offset: 0x16A3B14 VA: 0x16A3B14
	public void .ctor() { }

	// RVA: 0x16A619C Offset: 0x16A619C VA: 0x16A619C
	internal int <>m__0(float height, int baseHeight) { }
}

// Namespace: 
public class BattleResultFriendComponent : BaseMonoBehaviour // TypeDefIndex: 9359
{
	// Fields
	public BattleResultComponent parentComp; // 0x18
	public PlayMakerFSM myFsm; // 0x20
	public GameObject root; // 0x28
	public UILabel countLabel; // 0x30
	public UILabel titleLabel; // 0x38
	public UILabel errLabel; // 0x40
	public UIButton centerButton; // 0x48
	public FriendIconComponent friendIconComp; // 0x50
	public UILabel centerButtonLabel; // 0x58
	public UILabel leftButtonLabel; // 0x60
	public UILabel confLabel; // 0x68
	public UIButton rightButton; // 0x70
	public UILabel rightButtonLabel; // 0x78
	public GameObject followCountRoot; // 0x80
	public UILabel followCountLabel; // 0x88
	public UIButton helpButton; // 0x90
	public UILabel friendWarningLabel; // 0x98
	public GameObject countRoot; // 0xA0
	public UIGrid countGrid; // 0xA8
	public UIButton leftButton; // 0xB0
	public UISprite centerMarkSprite; // 0xB8
	public UISprite rightMarkSprite; // 0xC0
	private OtherUserGameEntity otherUser; // 0xC8
	private Follower.Type followerType; // 0xD0
	private int followerStatus; // 0xD4
	private int followerClassId; // 0xD8
	private int dispClassId; // 0xDC
	private long targetId; // 0xE0
	private bool enableFollowQuest; // 0xE8
	private readonly float offsetPosition; // 0xEC
	private static readonly float offsetOfferLabelPosition; // 0x0
	private static readonly float offsetFollowMarkPosition; // 0x4
	private OtherUserGameEntity.ReturnSupportServantType displayServantType; // 0xF0
	public ClassButtonControlComponent classButtonControl; // 0xF8
	[SerializeField] // RVA: 0xCD3808 Offset: 0xCD3808 VA: 0xCD3808
	private GameObject followTutorialMask; // 0x100
	[SerializeField] // RVA: 0xCD3818 Offset: 0xCD3818 VA: 0xCD3818
	private UIButton followTutorialButton; // 0x108
	[SerializeField] // RVA: 0xCD3828 Offset: 0xCD3828 VA: 0xCD3828
	private UILabel followTutorialLabel; // 0x110
	private Action releasePerformanceObject; // 0x118

	// Methods

	// RVA: 0x16A6F50 Offset: 0x16A6F50 VA: 0x16A6F50
	public void .ctor() { }

	// RVA: 0x1697480 Offset: 0x1697480 VA: 0x1697480
	public void Init(Action releasePerformanceObject) { }

	// RVA: 0x169A748 Offset: 0x169A748 VA: 0x169A748
	public void setResultData(int infollowerType, int infollowerStatus, long followerId, int infollowerClassId, bool enableFollow) { }

	// RVA: 0x16A6F60 Offset: 0x16A6F60 VA: 0x16A6F60
	public void onChangeClass(int classPos) { }

	// RVA: 0x16A6FE0 Offset: 0x16A6FE0 VA: 0x16A6FE0
	public void changeClass(int classPos) { }

	// RVA: 0x169B5D8 Offset: 0x169B5D8 VA: 0x169B5D8
	public void Open() { }

	[DebuggerHiddenAttribute] // RVA: 0xD3BD5C Offset: 0xD3BD5C VA: 0xD3BD5C
	// RVA: 0x16A7048 Offset: 0x16A7048 VA: 0x16A7048
	private IEnumerator ChangeFaceAtlas() { }

	// RVA: 0x16A70B8 Offset: 0x16A70B8 VA: 0x16A70B8
	private void openCore() { }

	// RVA: 0x16A7A20 Offset: 0x16A7A20 VA: 0x16A7A20
	private void OtherUserChangeLimitCountBySpoilerProtection() { }

	// RVA: 0x16A7CE4 Offset: 0x16A7CE4 VA: 0x16A7CE4
	public void ServantConfClick() { }

	// RVA: 0x16A7B84 Offset: 0x16A7B84 VA: 0x16A7B84
	public int getExistLeaderInfo(int firstClassId) { }

	// RVA: 0x16A7D48 Offset: 0x16A7D48 VA: 0x16A7D48
	public void ShowServantConf() { }

	// RVA: 0x16A7F34 Offset: 0x16A7F34 VA: 0x16A7F34
	public void EndShowServant(bool flg) { }

	// RVA: 0x16A7ED0 Offset: 0x16A7ED0 VA: 0x16A7ED0
	public void endCloseSHowServant() { }

	// RVA: 0x16A7FD8 Offset: 0x16A7FD8 VA: 0x16A7FD8
	public void OnClickFriend() { }

	// RVA: 0x16A803C Offset: 0x16A803C VA: 0x16A803C
	public void OnClickNoActionFriend() { }

	// RVA: 0x16A80A0 Offset: 0x16A80A0 VA: 0x16A80A0
	public void OnClickNo() { }

	// RVA: 0x16A8104 Offset: 0x16A8104 VA: 0x16A8104
	public void OnClickFollow() { }

	// RVA: 0x16A8168 Offset: 0x16A8168 VA: 0x16A8168
	public void OnClickTutorialFollow() { }

	// RVA: 0x16A8238 Offset: 0x16A8238 VA: 0x16A8238
	public void friendOffer() { }

	// RVA: 0x16A8320 Offset: 0x16A8320 VA: 0x16A8320
	private void EndRequestFriend(string result) { }

	// RVA: 0x16A85DC Offset: 0x16A85DC VA: 0x16A85DC
	public void followAssign() { }

	// RVA: 0x16A86C4 Offset: 0x16A86C4 VA: 0x16A86C4
	private void EndRequestFollow(string result) { }

	// RVA: 0x16A8980 Offset: 0x16A8980 VA: 0x16A8980
	protected void OnEndRequestDialog(bool isDecide) { }

	// RVA: 0x16A8A0C Offset: 0x16A8A0C VA: 0x16A8A0C
	public void OnClickSupportInfo() { }

	// RVA: 0x16A8A70 Offset: 0x16A8A70 VA: 0x16A8A70
	public void ChangeSupportScene() { }

	// RVA: 0x16A8CD8 Offset: 0x16A8CD8 VA: 0x16A8CD8
	public void callBackBeginResume() { }

	// RVA: 0x16A76D0 Offset: 0x16A76D0 VA: 0x16A76D0
	private void Layout(bool isActiveFollow, bool isActiveFriend) { }

	// RVA: 0x16A8D3C Offset: 0x16A8D3C VA: 0x16A8D3C
	private void SetupButtons(bool isActiveFollow, bool isActiveFriend) { }

	// RVA: 0x16A9394 Offset: 0x16A9394 VA: 0x16A9394
	public void OnClickHelp() { }

	// RVA: 0x16A940C Offset: 0x16A940C VA: 0x16A940C
	private void OpenHelpDialog() { }

	// RVA: 0x16A9420 Offset: 0x16A9420 VA: 0x16A9420
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB05E0 Offset: 0xCB05E0 VA: 0xCB05E0
private sealed class BattleResultFriendComponent.<ChangeFaceAtlas>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 9360
{
	// Fields
	internal WaitForEndOfFrame <waitForEndOfFrame>__0; // 0x10
	internal BattleResultFriendComponent $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C
	private BattleResultFriendComponent.<ChangeFaceAtlas>c__Iterator0.<ChangeFaceAtlas>c__AnonStorey1 $locvar0; // 0x30

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD49074 Offset: 0xD49074 VA: 0xD49074
	// RVA: 0x16A76C8 Offset: 0x16A76C8 VA: 0x16A76C8
	public void .ctor() { }

	// RVA: 0x16A9484 Offset: 0x16A9484 VA: 0x16A9484 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD49084 Offset: 0xD49084 VA: 0xD49084
	// RVA: 0x16A978C Offset: 0x16A978C VA: 0x16A978C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD49094 Offset: 0xD49094 VA: 0xD49094
	// RVA: 0x16A9794 Offset: 0x16A9794 VA: 0x16A9794 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD490A4 Offset: 0xD490A4 VA: 0xD490A4
	// RVA: 0x16A979C Offset: 0x16A979C VA: 0x16A979C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD490B4 Offset: 0xD490B4 VA: 0xD490B4
	// RVA: 0x16A97B0 Offset: 0x16A97B0 VA: 0x16A97B0 Slot: 6
	public void Reset() { }
}

// Namespace: 
private sealed class BattleResultFriendComponent.<ChangeFaceAtlas>c__Iterator0.<ChangeFaceAtlas>c__AnonStorey1 // TypeDefIndex: 9361
{
	// Fields
	internal bool isWait; // 0x10
	internal BattleResultFriendComponent.<ChangeFaceAtlas>c__Iterator0 <>f__ref$0; // 0x18

	// Methods

	// RVA: 0x16A9784 Offset: 0x16A9784 VA: 0x16A9784
	public void .ctor() { }

	// RVA: 0x16A9818 Offset: 0x16A9818 VA: 0x16A9818
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB05F0 Offset: 0xCB05F0 VA: 0xCB05F0
private sealed class BattleResultFriendComponent.<openCore>c__AnonStorey2 // TypeDefIndex: 9362
{
	// Fields
	internal bool isFollowTutorial; // 0x10
	internal BattleResultFriendComponent $this; // 0x18

	// Methods

	// RVA: 0x16A7CDC Offset: 0x16A7CDC VA: 0x16A7CDC
	public void .ctor() { }

	// RVA: 0x16A9820 Offset: 0x16A9820 VA: 0x16A9820
	internal void <>m__0() { }
}

// Namespace: 
public class BattleResultItemComponent : BaseMonoBehaviour // TypeDefIndex: 9363
{
	// Fields
	private static readonly string EP_SP_BASE_NAME; // 0x0
	private static readonly string DP_SP_BASE_NAME; // 0x8
	private static readonly float EP_GET_POSY_NORMAL; // 0x10
	private static readonly float EP_GET_POSY_BOOSTED; // 0x14
	private static readonly int EP_GET_FONT_NORMAL; // 0x18
	private static readonly int EP_GET_FONT_BOOSTED; // 0x1C
	private static readonly string EP_GET_LOCALE_KEY; // 0x20
	private static readonly int GET_TITLE_LABEL_MAX_WIDTH; // 0x28
	public BattleResultComponent parentComp; // 0x18
	public PlayMakerFSM myFsm; // 0x20
	public BattleWindowComponent window; // 0x28
	public BattleViewItemlistComponent itemWindow; // 0x30
	public GameObject touchNextRoot; // 0x38
	public UILabel titleConfLabel; // 0x40
	public UILabel getQpLabel; // 0x48
	public UILabel nowQpLabel; // 0x50
	public GameObject rootEventPoint; // 0x58
	public UISprite eventIconSprite; // 0x60
	public UISprite eventPointBgSprite; // 0x68
	public UILabel getEventPointLabel; // 0x70
	public UILabel nowEventPointLabel; // 0x78
	public UILabel getTitleLabel; // 0x80
	public UILabel getBoostLabel; // 0x88
	public UISprite eventPointMaxSprite; // 0x90
	public GameObject rootEventDamagePoint; // 0x98
	public UISprite eventDamageIconSprite; // 0xA0
	public UISprite eventDamageBGSprite; // 0xA8
	public UILabel getEventDamagePointLabel; // 0xB0
	public UILabel nowEventDamagePointLabel; // 0xB8
	public ItemDetailInfoComponent itemDialog; // 0xC0
	protected List<BattleDropItem> newDroplist; // 0xC8
	public int itemColumnCount; // 0xD0
	public GameObject nomalRootObj; // 0xD8
	public BattleResultEventItemGroupComponent groupRootObj; // 0xE0
	public UIButton showModeChangeButton; // 0xE8
	public UILabel showModeChangeButtonLabel; // 0xF0
	public Color[] showModeChanButtonLabelEffectColors; // 0xF8
	private bool isShowPossessionNum; // 0x100
	private long tmp_userSvtId; // 0x108
	private int tmp_svtId; // 0x110
	private int tmp_itemId; // 0x114
	private long tmp_commandCodeId; // 0x118
	[CompilerGeneratedAttribute] // RVA: 0xCD3838 Offset: 0xCD3838 VA: 0xCD3838
	private static Predicate<BattleDropItem> <>f__am$cache0; // 0x30

	// Methods

	// RVA: 0x16A9B20 Offset: 0x16A9B20 VA: 0x16A9B20
	public void .ctor() { }

	// RVA: 0x1697148 Offset: 0x1697148 VA: 0x1697148
	public void Init() { }

	// RVA: 0x169B394 Offset: 0x169B394 VA: 0x169B394
	public void Open() { }

	// RVA: 0x16A9C08 Offset: 0x16A9C08 VA: 0x16A9C08
	public void endOpen() { }

	// RVA: 0x1699EF8 Offset: 0x1699EF8 VA: 0x1699EF8
	public void setResultData(BattleDropItem[] drop, int getqp, int originalGetQp, UserGameEntity oldGame, int eventId, UserEventEntity[] oldUsrEvent, UserEventPointEntity[] oldUsrPoint, long addDamagePoint, int[] viewGroupIds, int boostRate, DropUpInfo[] dropupinfos, EventConquestInfo[] eventConquestInfos, int firstClearRewardQp, bool isNotDisplayEventPoint) { }

	// RVA: 0x16A9C98 Offset: 0x16A9C98 VA: 0x16A9C98
	private void SetGroupEventRoot(int eventId, UserEventEntity[] oldUsrEvent, UserEventPointEntity[] oldUsrPoint, long addDamagePoint, UserGameEntity userGame, int countQp, int[] viewGroupIds, int conquestRewardQp) { }

	// RVA: 0x16A9D9C Offset: 0x16A9D9C VA: 0x16A9D9C
	private void SetNomalRoot(int eventId, UserEventPointEntity[] oldUsrPoint, long addDamagePoint, UserGameEntity userGame, int countQp, int boostRate, int conquestRewardQp, int firstClearRewardQp, UserGameEntity oldGame, bool isNotDisplayEventPoint) { }

	// RVA: 0x16AA0EC Offset: 0x16AA0EC VA: 0x16AA0EC
	private void setEventInfo(int eventId, UserEventPointEntity[] oldUsrPoint, long addDamagePoint, int boostRate, int firstClearRewardQp, int countQp, bool isNotDisplayEventPoint) { }

	// RVA: 0x16AAD88 Offset: 0x16AAD88 VA: 0x16AAD88
	public void setShowConf(BattleDropItem item) { }

	// RVA: 0x16AAE38 Offset: 0x16AAE38 VA: 0x16AAE38
	public void setShowServantConf(BattleDropItem dropItem) { }

	// RVA: 0x16AAFE4 Offset: 0x16AAFE4 VA: 0x16AAFE4
	public void showServantDialog() { }

	// RVA: 0x16AB100 Offset: 0x16AB100 VA: 0x16AB100
	public void DialogCallBack(bool flg) { }

	// RVA: 0x16AB1A4 Offset: 0x16AB1A4 VA: 0x16AB1A4
	public void EndCloseDialogCallBack() { }

	// RVA: 0x16AAEFC Offset: 0x16AAEFC VA: 0x16AAEFC
	public void setShowItemConf(int itemId) { }

	// RVA: 0x16AB208 Offset: 0x16AB208 VA: 0x16AB208
	public void showItemDialog() { }

	// RVA: 0x16AB304 Offset: 0x16AB304 VA: 0x16AB304
	public void itemDialogCallBack(bool flg) { }

	// RVA: 0x16AB3C0 Offset: 0x16AB3C0 VA: 0x16AB3C0
	public void endItemDialogCallBack() { }

	// RVA: 0x16AAF70 Offset: 0x16AAF70 VA: 0x16AAF70
	public void setShowCommandCodeConf(long commandCodeId) { }

	// RVA: 0x16AB424 Offset: 0x16AB424 VA: 0x16AB424
	public void showCommandCodeDialog() { }

	// RVA: 0x16AB530 Offset: 0x16AB530 VA: 0x16AB530
	public void commandCodeDialogCallBack(bool flg) { }

	// RVA: 0x16AB5D4 Offset: 0x16AB5D4 VA: 0x16AB5D4
	public void endCommandCodeDialogCallBack() { }

	// RVA: 0x16AB638 Offset: 0x16AB638 VA: 0x16AB638
	public void Close() { }

	// RVA: 0x16AB6E8 Offset: 0x16AB6E8 VA: 0x16AB6E8
	public void endClose() { }

	// RVA: 0x169C08C Offset: 0x169C08C VA: 0x169C08C
	public BattleDropItem getNewDrop() { }

	// RVA: 0x16AB790 Offset: 0x16AB790 VA: 0x16AB790
	public void OnClickSwitchShowMode() { }

	// RVA: 0x16A9B80 Offset: 0x16A9B80 VA: 0x16A9B80
	private void setCondensedScale() { }

	// RVA: 0x16AAC6C Offset: 0x16AAC6C VA: 0x16AAC6C
	private bool GetIsShowEventPointMax(EventDetailEntity eventDetailEntity, long userEventPoint) { }

	// RVA: 0x16AB8E4 Offset: 0x16AB8E4 VA: 0x16AB8E4
	private int GetEventPointUpperPriority(int eventPointUpperId) { }

	// RVA: 0x16ABD44 Offset: 0x16ABD44 VA: 0x16ABD44
	private Dictionary<int, List<EventPointUpperReleaseEntity>> GetEventPointUpperReleases(EventPointUpperReleaseEntity[] entities) { }

	// RVA: 0x16ABC68 Offset: 0x16ABC68 VA: 0x16ABC68
	private long GetEventPointUpperValue(int priority, EventPointUpperEntity[] entities) { }

	// RVA: 0x16ABEE0 Offset: 0x16ABEE0 VA: 0x16ABEE0
	private bool GetIsAndCondGroup(EventPointUpperReleaseEntity[] entities) { }

	// RVA: 0x16ABF74 Offset: 0x16ABF74 VA: 0x16ABF74
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3BD6C Offset: 0xD3BD6C VA: 0xD3BD6C
	// RVA: 0x16AC02C Offset: 0x16AC02C VA: 0x16AC02C
	private static bool <setResultData>m__0(BattleDropItem s) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB0600 Offset: 0xCB0600 VA: 0xCB0600
private sealed class BattleResultItemComponent.<setResultData>c__AnonStorey0 // TypeDefIndex: 9364
{
	// Fields
	internal List<BattleDropItem> list; // 0x10

	// Methods

	// RVA: 0x16A9C88 Offset: 0x16A9C88 VA: 0x16A9C88
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB0610 Offset: 0xCB0610 VA: 0xCB0610
private sealed class BattleResultItemComponent.<setResultData>c__AnonStorey1 // TypeDefIndex: 9365
{
	// Fields
	internal int i; // 0x10
	internal BattleResultItemComponent.<setResultData>c__AnonStorey0 <>f__ref$0; // 0x18

	// Methods

	// RVA: 0x16A9C90 Offset: 0x16A9C90 VA: 0x16A9C90
	public void .ctor() { }

	// RVA: 0x16AC088 Offset: 0x16AC088 VA: 0x16AC088
	internal bool <>m__0(DropUpInfo e) { }
}

// Namespace: 
public class BattleResultKnockdownComponent : BattleResultPopupWindowComponent // TypeDefIndex: 9366
{
	// Fields
	[HeaderAttribute] // RVA: 0xCD3848 Offset: 0xCD3848 VA: 0xCD3848
	public UILabel[] battleLabels; // 0x88
	public UILabel[] recordLabels; // 0x90
	[HeaderAttribute] // RVA: 0xCD3880 Offset: 0xCD3880 VA: 0xCD3880
	public Color[] battleColor; // 0x98
	public Color[] recordColor; // 0xA0
	public UISprite recordRenewalSp; // 0xA8

	// Methods

	// RVA: 0x16AC138 Offset: 0x16AC138 VA: 0x16AC138
	public void .ctor() { }

	// RVA: 0x16A3B1C Offset: 0x16A3B1C VA: 0x16A3B1C
	public void setData(QuestKnockdownResult result) { }

	// RVA: 0x16AC2C8 Offset: 0x16AC2C8 VA: 0x16AC2C8
	private void setKnockdownInfoLabel(UILabel[] labelArray, QuestKnockdownInfo info, Color color) { }
}

// Namespace: 
protected enum BattleResultKnockdownComponent.ColorType // TypeDefIndex: 9367
{
	// Fields
	public int value__; // 0x0
	public const BattleResultKnockdownComponent.ColorType Normal = 0;
	public const BattleResultKnockdownComponent.ColorType NewRecord = 1;
	public const BattleResultKnockdownComponent.ColorType Term = 2;
}

// Namespace: 
public class BattleResultMasterUpStatusComponent : MonoBehaviour // TypeDefIndex: 9368
{
	// Fields
	public UILabel titleParamLabel; // 0x18
	public UILabel oldParamLabel; // 0x20
	public UILabel newParamLabel; // 0x28

	// Methods

	// RVA: 0x16AC558 Offset: 0x16AC558 VA: 0x16AC558
	public void .ctor() { }

	// RVA: 0x16A6E54 Offset: 0x16A6E54 VA: 0x16A6E54
	public void setTitle(string key) { }

	// RVA: 0x16A44EC Offset: 0x16A44EC VA: 0x16A44EC
	public void setData(int oldVal, int newVal) { }
}

// Namespace: 
public class BattleResultPopupWindowComponent : BattleWindowComponent // TypeDefIndex: 9369
{
	// Fields
	public BattleResultComponent ownerComp; // 0x48
	public PlayMakerFSM notifyFsm; // 0x50
	public GameObject rootObj; // 0x58
	public SimpleAnimation titleSimpleAnim; // 0x60
	public Animation titleAnim; // 0x68
	protected BattleWindowComponent.EndCall callbackOpen; // 0x70
	protected BattleWindowComponent.EndCall callbackClose; // 0x78
	protected bool isOpenPossible; // 0x80

	// Methods

	// RVA: 0x16AC2C0 Offset: 0x16AC2C0 VA: 0x16AC2C0
	public void .ctor() { }

	// RVA: 0x16AC560 Offset: 0x16AC560 VA: 0x16AC560 Slot: 14
	public virtual void InitPopup() { }

	// RVA: 0x16AC5C8 Offset: 0x16AC5C8 VA: 0x16AC5C8 Slot: 10
	public override void Open(BattleWindowComponent.EndCall call) { }

	// RVA: 0x16AC684 Offset: 0x16AC684 VA: 0x16AC684 Slot: 15
	protected virtual void OpenPreProcess() { }

	// RVA: 0x16ACA4C Offset: 0x16ACA4C VA: 0x16ACA4C Slot: 16
	protected virtual void EndOpenCallback() { }

	// RVA: 0x16ACA9C Offset: 0x16ACA9C VA: 0x16ACA9C Slot: 17
	protected virtual void OpenedPostProcess() { }

	// RVA: 0x16ACB00 Offset: 0x16ACB00 VA: 0x16ACB00 Slot: 12
	public override void Close(BattleWindowComponent.EndCall call) { }

	// RVA: 0x16ACBBC Offset: 0x16ACBBC VA: 0x16ACBBC Slot: 18
	protected virtual void ClosePreProcess() { }

	// RVA: 0x16ACBEC Offset: 0x16ACBEC VA: 0x16ACBEC Slot: 19
	protected virtual void EndCloseCallback() { }

	// RVA: 0x16ACD1C Offset: 0x16ACD1C VA: 0x16ACD1C Slot: 20
	protected virtual void ClosedPostProcess() { }

	// RVA: 0x16A60F0 Offset: 0x16A60F0 VA: 0x16A60F0
	public bool IsOpenPossible() { }

	// RVA: 0x16ACC6C Offset: 0x16ACC6C VA: 0x16ACC6C
	protected void SendFsmEvent(string eventName = "END_PROC") { }

	// RVA: 0x16AC764 Offset: 0x16AC764 VA: 0x16AC764
	protected bool PlayTargetSimpleAnimation(SimpleAnimation anim, string clipName = "") { }

	// RVA: 0x16AC908 Offset: 0x16AC908 VA: 0x16AC908
	protected void PlayTargetAnimation(Animation anim, string clipName = "") { }
}

// Namespace: 
public class BattleRetryConfirmComponent : BaseMonoBehaviour // TypeDefIndex: 9370
{
	// Fields
	private readonly Vector3 CONFIRM_BUTTON_POSITION_ON_THREE; // 0x18
	private readonly Vector3 CANCEL_BUTTON_POSITION_ON_THREE; // 0x24
	[SerializeField] // RVA: 0xCD38B8 Offset: 0xCD38B8 VA: 0xCD38B8
	private BattleResultComponent battleResultComponent; // 0x30
	[SerializeField] // RVA: 0xCD38C8 Offset: 0xCD38C8 VA: 0xCD38C8
	private GameObject root; // 0x38
	[SerializeField] // RVA: 0xCD38D8 Offset: 0xCD38D8 VA: 0xCD38D8
	private BattleWindowComponent window; // 0x40
	[SerializeField] // RVA: 0xCD38E8 Offset: 0xCD38E8 VA: 0xCD38E8
	private UILabel mainText; // 0x48
	[SerializeField] // RVA: 0xCD38F8 Offset: 0xCD38F8 VA: 0xCD38F8
	private UILabel cancelLabel; // 0x50
	[SerializeField] // RVA: 0xCD3908 Offset: 0xCD3908 VA: 0xCD3908
	private UILabel confirmLabel; // 0x58
	[SerializeField] // RVA: 0xCD3918 Offset: 0xCD3918 VA: 0xCD3918
	private GameObject reqSingleParent; // 0x60
	[SerializeField] // RVA: 0xCD3928 Offset: 0xCD3928 VA: 0xCD3928
	private GameObject reqDoubleParent; // 0x68
	[SerializeField] // RVA: 0xCD3938 Offset: 0xCD3938 VA: 0xCD3938
	private GameObject reqTripleParent; // 0x70
	[SerializeField] // RVA: 0xCD3948 Offset: 0xCD3948 VA: 0xCD3948
	private RetryConfirmItem singleAp; // 0x78
	[SerializeField] // RVA: 0xCD3958 Offset: 0xCD3958 VA: 0xCD3958
	private RetryConfirmItem singleItem; // 0x80
	[SerializeField] // RVA: 0xCD3968 Offset: 0xCD3968 VA: 0xCD3968
	private RetryConfirmItem doubleAp; // 0x88
	[SerializeField] // RVA: 0xCD3978 Offset: 0xCD3978 VA: 0xCD3978
	private RetryConfirmItem[] doubleItems; // 0x90
	[SerializeField] // RVA: 0xCD3988 Offset: 0xCD3988 VA: 0xCD3988
	private RetryConfirmItem tripleAp; // 0x98
	[SerializeField] // RVA: 0xCD3998 Offset: 0xCD3998 VA: 0xCD3998
	private RetryConfirmItem[] tripleItems; // 0xA0
	[SerializeField] // RVA: 0xCD39A8 Offset: 0xCD39A8 VA: 0xCD39A8
	private FriendshipUpItemUseItem friendshipUpItemUseButton; // 0xA8
	[SerializeField] // RVA: 0xCD39B8 Offset: 0xCD39B8 VA: 0xCD39B8
	private GameObject reqSingleParentWithUseItemButton; // 0xB0
	[SerializeField] // RVA: 0xCD39C8 Offset: 0xCD39C8 VA: 0xCD39C8
	private GameObject reqDoubleParentWithUseItemButton; // 0xB8
	[SerializeField] // RVA: 0xCD39D8 Offset: 0xCD39D8 VA: 0xCD39D8
	private GameObject reqTripleParentWithUseItemButton; // 0xC0
	[SerializeField] // RVA: 0xCD39E8 Offset: 0xCD39E8 VA: 0xCD39E8
	private RetryConfirmItem singleApWithUseItemButton; // 0xC8
	[SerializeField] // RVA: 0xCD39F8 Offset: 0xCD39F8 VA: 0xCD39F8
	private RetryConfirmItem singleItemWithUseItemButton; // 0xD0
	[SerializeField] // RVA: 0xCD3A08 Offset: 0xCD3A08 VA: 0xCD3A08
	private RetryConfirmItem doubleApWithUseItemButton; // 0xD8
	[SerializeField] // RVA: 0xCD3A18 Offset: 0xCD3A18 VA: 0xCD3A18
	private RetryConfirmItem[] doubleItemsWithUseItemButton; // 0xE0
	[SerializeField] // RVA: 0xCD3A28 Offset: 0xCD3A28 VA: 0xCD3A28
	private RetryConfirmItem tripleApWithUseItemButton; // 0xE8
	[SerializeField] // RVA: 0xCD3A38 Offset: 0xCD3A38 VA: 0xCD3A38
	private RetryConfirmItem[] tripleItemsWithUseItemButton; // 0xF0
	private static readonly int MAIN_TEXT_DEFAULT_FONT_SIZE; // 0x0
	private static readonly int MAIN_TEXT_FONT_SIZE_FOR_THREE_ITEM; // 0x4
	private static readonly int MAIN_TEXT_FONT_SIZE_FOR_DOUBLE_ITEM_AND_BUTTON; // 0x8
	private static readonly int MAIN_TEXT_FONT_SIZE_FOR_THREE_ITEM_AND_BUTTON; // 0xC
	private bool isInitialized; // 0xF8
	private UserGameEntity userGameEntity; // 0x100
	[SerializeField] // RVA: 0xCD3A48 Offset: 0xCD3A48 VA: 0xCD3A48
	private GameObject bgObj; // 0x108
	private List<UIButton> buttons; // 0x110
	[SerializeField] // RVA: 0xCD3A58 Offset: 0xCD3A58 VA: 0xCD3A58
	private UILabel boostSupportRequestLabel; // 0x118
	[CompilerGeneratedAttribute] // RVA: 0xCD3A68 Offset: 0xCD3A68 VA: 0xCD3A68
	private static Action <>f__am$cache0; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCD3A78 Offset: 0xCD3A78 VA: 0xCD3A78
	private static Action <>f__am$cache1; // 0x18

	// Methods

	// RVA: 0x16AF84C Offset: 0x16AF84C VA: 0x16AF84C
	public void .ctor() { }

	// RVA: 0x169CC30 Offset: 0x169CC30 VA: 0x169CC30
	public bool SetValues() { }

	// RVA: 0x16B050C Offset: 0x16B050C VA: 0x16B050C
	public void OnClickCancel() { }

	// RVA: 0x16B0684 Offset: 0x16B0684 VA: 0x16B0684
	public void OnClickConfirm() { }

	// RVA: 0x16B07FC Offset: 0x16B07FC VA: 0x16B07FC
	private void SetRetryConfirmItemTextWithStr(BattleRetryConfirmComponent.RetryConfirmItemStr value, ref RetryConfirmItem item) { }

	// RVA: 0x16B08F0 Offset: 0x16B08F0 VA: 0x16B08F0
	private void SetCostValueTextSingle(BattleRetryConfirmComponent.RetryConfirmItemStr costPoint, BattleRetryConfirmComponent.RetryConfirmItemStr item) { }

	// RVA: 0x16B0ACC Offset: 0x16B0ACC VA: 0x16B0ACC
	private void SetCostValueTextDouble(BattleRetryConfirmComponent.RetryConfirmItemStr costPoint, BattleRetryConfirmComponent.RetryConfirmItemStr[] items) { }

	// RVA: 0x16B0DA0 Offset: 0x16B0DA0 VA: 0x16B0DA0
	private void SetCostValueTextTriple(BattleRetryConfirmComponent.RetryConfirmItemStr costPoint, BattleRetryConfirmComponent.RetryConfirmItemStr[] items) { }

	// RVA: 0x16AF8F4 Offset: 0x16AF8F4 VA: 0x16AF8F4
	public void SetCostValueText(BattleRetryConfirmComponent.RetryConfirmItemStr costPoint, BattleRetryConfirmComponent.RetryConfirmItemStr[] items) { }

	// RVA: 0x169768C Offset: 0x169768C VA: 0x169768C
	public void Init() { }

	// RVA: 0x169E1C4 Offset: 0x169E1C4 VA: 0x169E1C4
	public void Open() { }

	// RVA: 0x169CA2C Offset: 0x169CA2C VA: 0x169CA2C
	public void Close() { }

	// RVA: 0x16B11A8 Offset: 0x16B11A8 VA: 0x16B11A8
	public void OnClickBoostSupportRequest() { }

	// RVA: 0x16B13B0 Offset: 0x16B13B0 VA: 0x16B13B0
	private void BoostSupportRequestDialogCallback(BoostFunctionUtility.BoostResultKind result, int boostId) { }

	// RVA: 0x16AFA78 Offset: 0x16AFA78 VA: 0x16AFA78
	private void SetBoostSupportRequestButton() { }

	// RVA: 0x16B1074 Offset: 0x16B1074 VA: 0x16B1074
	private void CostPointLabelCentering() { }

	// RVA: 0x16AFEE8 Offset: 0x16AFEE8 VA: 0x16AFEE8
	private void SetFriendshipUpItemUseButton() { }

	// RVA: 0x16B1568 Offset: 0x16B1568 VA: 0x16B1568
	public void OnClickFriendshipUpItemUseButton() { }

	// RVA: 0x16B16CC Offset: 0x16B16CC VA: 0x16B16CC
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3BD7C Offset: 0xD3BD7C VA: 0xD3BD7C
	// RVA: 0x16B174C Offset: 0x16B174C VA: 0x16B174C
	private static void <SetValues>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3BD8C Offset: 0xD3BD8C VA: 0xD3BD8C
	// RVA: 0x16B17BC Offset: 0x16B17BC VA: 0x16B17BC
	private static void <SetValues>m__1() { }
}

// Namespace: 
public struct BattleRetryConfirmComponent.RetryConfirmItemStr // TypeDefIndex: 9371
{
	// Fields
	public string useName; // 0x0
	public string useAmount; // 0x8
	public string possessionName; // 0x10
	public string possessionAmount; // 0x18
}

// Namespace: 
public class FriendshipGauge : MonoBehaviour, IFriendshipGauge // TypeDefIndex: 9372
{
	// Fields
	public UISprite[] gaugeIcons; // 0x18
	private FriendshipGauge.GaugeData nowGauge; // 0x20
	private FriendshipGauge.GaugeData nextGauge; // 0x28
	private int friendshipId; // 0x30
	private int maxFriendShipRank; // 0x34
	private FriendshipEntity tmp_friendshipEnt; // 0x38
	private int prevRank; // 0x40
	private int prevPoint; // 0x44

	// Methods

	// RVA: 0x1E85EB0 Offset: 0x1E85EB0 VA: 0x1E85EB0
	public void .ctor() { }

	// RVA: 0x1E85EC0 Offset: 0x1E85EC0 VA: 0x1E85EC0 Slot: 4
	public void SetGaugeData(int friendshipId, int friendship, int friendshipRank, int inMaxFriendShipRank, int exceedCount = 0) { }

	// RVA: 0x1E86348 Offset: 0x1E86348 VA: 0x1E86348 Slot: 5
	public void SetNextGaugeData(int friendship, int friendshipRank) { }

	// RVA: 0x1E863DC Offset: 0x1E863DC VA: 0x1E863DC Slot: 6
	public bool IsChange() { }

	// RVA: 0x1E85FCC Offset: 0x1E85FCC VA: 0x1E85FCC Slot: 7
	public void ChangeGaugeData(int friendshipId, int friendship, int friendshipRank) { }

	// RVA: 0x1E86408 Offset: 0x1E86408 VA: 0x1E86408 Slot: 8
	public int ChangeGauge(float val, out bool max, out bool isLevelUp, out bool isChange) { }

	// RVA: 0x1E86664 Offset: 0x1E86664 VA: 0x1E86664 Slot: 9
	public void Hide() { }

	// RVA: 0x1E8669C Offset: 0x1E8669C VA: 0x1E8669C Slot: 10
	public void Show() { }
}

// Namespace: 
private class FriendshipGauge.GaugeData // TypeDefIndex: 9373
{
	// Fields
	public int friendship; // 0x10
	public int friendshipRank; // 0x14

	// Methods

	// RVA: 0x1E85FC4 Offset: 0x1E85FC4 VA: 0x1E85FC4
	public void .ctor() { }
}

// Namespace: 
public class FriendshipGaugeEx : MonoBehaviour, IFriendshipGauge // TypeDefIndex: 9374
{
	// Fields
	[SerializeField] // RVA: 0xCD3A88 Offset: 0xCD3A88 VA: 0xCD3A88
	private UISprite bigIcon; // 0x18
	[SerializeField] // RVA: 0xCD3A98 Offset: 0xCD3A98 VA: 0xCD3A98
	private UISprite[] icons; // 0x20
	[SerializeField] // RVA: 0xCD3AA8 Offset: 0xCD3AA8 VA: 0xCD3AA8
	private GameObject[] iconRoots; // 0x28
	private int nowFriendship; // 0x30
	private int nextFriendship; // 0x34
	private int nowFriendshipRank; // 0x38
	private int nextFriendshipRank; // 0x3C
	private int friendshipId; // 0x40
	private int maxFriendshipRank; // 0x44
	private int exceedCount; // 0x48
	private int exceedMaxFriendshipRank; // 0x4C
	private int prevRank; // 0x50
	private int prevPoint; // 0x54
	private static readonly string AtlasPath; // 0x0
	private static readonly string ObjectName; // 0x8
	private static readonly string SpriteName; // 0x10

	// Methods

	// RVA: 0x1E866D4 Offset: 0x1E866D4 VA: 0x1E866D4
	public void .ctor() { }

	// RVA: 0x1E866E4 Offset: 0x1E866E4 VA: 0x1E866E4
	private void Start() { }

	// RVA: 0x1E867E0 Offset: 0x1E867E0 VA: 0x1E867E0 Slot: 4
	public void SetGaugeData(int friendshipId, int friendship, int friendshipRank, int inMaxFriendShipRank, int exceedCount) { }

	// RVA: 0x1E86AC0 Offset: 0x1E86AC0 VA: 0x1E86AC0 Slot: 5
	public void SetNextGaugeData(int friendship, int friendshipRank) { }

	// RVA: 0x1E86ACC Offset: 0x1E86ACC VA: 0x1E86ACC Slot: 8
	public int ChangeGauge(float val, out bool max, out bool isLevelUp, out bool isChange) { }

