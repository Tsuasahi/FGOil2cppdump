
	// RVA: 0x182DB88 Offset: 0x182DB88 VA: 0x182DB88
	public static string GetAssetName(int imageId) { }

	// RVA: 0x182DC5C Offset: 0x182DC5C VA: 0x182DC5C
	public static string GetAssetName(string imageName, int formId = 0) { }

	// RVA: 0x182BA1C Offset: 0x182BA1C VA: 0x182BA1C
	public static string GetAssetNameWithForm(int imageId, int formId) { }

	// RVA: 0x18288F0 Offset: 0x18288F0 VA: 0x18288F0
	public static Texture2D[] GetTextureList(AssetData assetData, bool loadRequiredResource = False) { }

	// RVA: 0x1817510 Offset: 0x1817510 VA: 0x1817510
	public bool IsBusyMoveAlpha() { }

	// RVA: 0x1815C58 Offset: 0x1815C58 VA: 0x1815C58
	public Vector2 GetCenterOffset() { }

	// RVA: 0x182C470 Offset: 0x182C470 VA: 0x182C470
	public static Vector2 GetCharacterOffset(int id, int formId, ServantScriptEntity.OffsetKind offsetKind) { }

	// RVA: 0x182DE0C Offset: 0x182DE0C VA: 0x182DE0C
	public static int GetForm(int imageId, bool isMyRoom, int friendship = -1) { }

	// RVA: 0x182B08C Offset: 0x182B08C VA: 0x182B08C Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x182DFF4 Offset: 0x182DFF4 VA: 0x182DFF4
	public Vector2 GetBodySize() { }

	// RVA: 0x1812B98 Offset: 0x1812B98 VA: 0x1812B98
	public void SetActive(bool isActive) { }

	// RVA: 0x18279B4 Offset: 0x18279B4 VA: 0x18279B4
	public void ReleaseCharacter() { }

	// RVA: 0x182E1A8 Offset: 0x182E1A8 VA: 0x182E1A8
	public void SetCharacter(int id, Face.Type faceType, int formId, Texture2D[] textureList) { }

	// RVA: 0x182904C Offset: 0x182904C VA: 0x182904C
	protected void SetCharacterRender() { }

	[DebuggerHiddenAttribute] // RVA: 0xCCAE58 Offset: 0xCCAE58 VA: 0xCCAE58
	// RVA: 0x182E3C8 Offset: 0x182E3C8 VA: 0x182E3C8
	private IEnumerator ChangeFaceFade(float time) { }

	// RVA: 0x182E078 Offset: 0x182E078 VA: 0x182E078
	private void StopChangeFaceFade() { }

	// RVA: 0x182E458 Offset: 0x182E458 VA: 0x182E458
	private void CopyFaceFadeMesh() { }

	// RVA: 0x1815D74 Offset: 0x1815D74 VA: 0x1815D74
	public void SetFace(Face.Type faceType, float fadeTime = 0) { }

	// RVA: 0x182EE84 Offset: 0x182EE84 VA: 0x182EE84
	public void SetSharder(string shaderName) { }

	// RVA: 0x182F048 Offset: 0x182F048 VA: 0x182F048
	public void RecoverSharder() { }

	// RVA: 0x182F160 Offset: 0x182F160 VA: 0x182F160
	public void SetWipeTexture(Texture texture) { }

	// RVA: 0x18158EC Offset: 0x18158EC VA: 0x18158EC
	public void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x182E1C4 Offset: 0x182E1C4 VA: 0x182E1C4
	public void SetBaseColor() { }

	// RVA: 0x1812E40 Offset: 0x1812E40 VA: 0x1812E40
	public void SetShadow(bool isShadow) { }

	// RVA: 0x1817314 Offset: 0x1817314 VA: 0x1817314
	public void SetTalkMask(bool isMask) { }

	// RVA: 0x1812D74 Offset: 0x1812D74 VA: 0x1812D74
	public void SetAlpha(float alpha) { }

	// RVA: 0x182E29C Offset: 0x182E29C VA: 0x182E29C
	public void SetFilterColor(Color c) { }

	// RVA: 0x182F458 Offset: 0x182F458 VA: 0x182F458
	public void SetGradation(float g) { }

	// RVA: 0x182F578 Offset: 0x182F578 VA: 0x182F578
	public void SetVolume(float v) { }

	// RVA: 0x1812DB8 Offset: 0x1812DB8 VA: 0x1812DB8
	public void SetDepth(float d) { }

	// RVA: 0x18138B8 Offset: 0x18138B8 VA: 0x18138B8
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x1817660 Offset: 0x1817660 VA: 0x1817660
	public void MoveAlphaSpeed(float speed, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x182F698 Offset: 0x182F698 VA: 0x182F698
	protected void EndMoveAlpha() { }

	// RVA: 0x182F75C Offset: 0x182F75C VA: 0x182F75C
	public void SetLayer(int layer) { }

	// RVA: 0x182F7D4 Offset: 0x182F7D4 VA: 0x182F7D4
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x182FAD4 Offset: 0x182FAD4 VA: 0x182FAD4
	public void StartChaseParentAlpha() { }

	[DebuggerHiddenAttribute] // RVA: 0xCCAE68 Offset: 0xCCAE68 VA: 0xCCAE68
	// RVA: 0x182FB00 Offset: 0x182FB00 VA: 0x182FB00
	private IEnumerator ChaseParentAlpha() { }

	// RVA: 0x1818118 Offset: 0x1818118 VA: 0x1818118
	public void SetSortingOrder(int order) { }

	// RVA: 0x1817FB4 Offset: 0x1817FB4 VA: 0x1817FB4
	public void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x1828320 Offset: 0x1828320 VA: 0x1828320
	protected List<string> GetFaceImageNameByFaceType(int imageId, Face.Type type) { }

	// RVA: 0x182FB70 Offset: 0x182FB70 VA: 0x182FB70
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC43084 Offset: 0xC43084 VA: 0xC43084
private sealed class UIStandFigureRender.<ChangeFaceFade>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 7877
{
	// Fields
	internal float <total>__1; // 0x10
	internal float time; // 0x14
	internal UIStandFigureRender $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD94D0 Offset: 0xCD94D0 VA: 0xCD94D0
	// RVA: 0x1AE4FD8 Offset: 0x1AE4FD8 VA: 0x1AE4FD8
	public void .ctor() { }

	// RVA: 0x1AE4FE0 Offset: 0x1AE4FE0 VA: 0x1AE4FE0 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD94E0 Offset: 0xCD94E0 VA: 0xCD94E0
	// RVA: 0x1AE53F4 Offset: 0x1AE53F4 VA: 0x1AE53F4 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD94F0 Offset: 0xCD94F0 VA: 0xCD94F0
	// RVA: 0x1AE53FC Offset: 0x1AE53FC VA: 0x1AE53FC Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD9500 Offset: 0xCD9500 VA: 0xCD9500
	// RVA: 0x1AE5404 Offset: 0x1AE5404 VA: 0x1AE5404 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD9510 Offset: 0xCD9510 VA: 0xCD9510
	// RVA: 0x1AE5418 Offset: 0x1AE5418 VA: 0x1AE5418 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC43094 Offset: 0xC43094 VA: 0xC43094
private sealed class UIStandFigureRender.<ChaseParentAlpha>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 7878
{
	// Fields
	internal Transform <parent>__0; // 0x10
	internal UITexture <tex>__0; // 0x18
	internal Color <color>__0; // 0x20
	internal UIStandFigureRender $this; // 0x30
	internal object $current; // 0x38
	internal bool $disposing; // 0x40
	internal int $PC; // 0x44

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD9520 Offset: 0xCD9520 VA: 0xCD9520
	// RVA: 0x1AE5480 Offset: 0x1AE5480 VA: 0x1AE5480
	public void .ctor() { }

	// RVA: 0x1AE5488 Offset: 0x1AE5488 VA: 0x1AE5488 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD9530 Offset: 0xCD9530 VA: 0xCD9530
	// RVA: 0x1AE57BC Offset: 0x1AE57BC VA: 0x1AE57BC Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD9540 Offset: 0xCD9540 VA: 0xCD9540
	// RVA: 0x1AE57C4 Offset: 0x1AE57C4 VA: 0x1AE57C4 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD9550 Offset: 0xCD9550 VA: 0xCD9550
	// RVA: 0x1AE57CC Offset: 0x1AE57CC VA: 0x1AE57CC Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD9560 Offset: 0xCD9560 VA: 0xCD9560
	// RVA: 0x1AE57E0 Offset: 0x1AE57E0 VA: 0x1AE57E0 Slot: 6
	public void Reset() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC25E78 Offset: 0xC25E78 VA: 0xC25E78
public class UITouchPress : MonoBehaviour // TypeDefIndex: 7879
{
	// Fields
	public const float LONG_PRESS_NORMAL_TIME = 1;
	public const float LONG_PRESS_FAST_TIME = 0.5;
	public List<EventDelegate> onClick; // 0x18
	public List<EventDelegate> onPress; // 0x20
	public List<EventDelegate> onLongPress; // 0x28
	public List<EventDelegate> onLongRelease; // 0x30
	public bool isLongPressFast; // 0x38
	public float releaseRange; // 0x3C
	[SerializeField] // RVA: 0xC57C90 Offset: 0xC57C90 VA: 0xC57C90
	private float clickRange; // 0x40
	protected bool isCancel; // 0x44
	protected bool isPress; // 0x45
	protected bool isLongPressCheck; // 0x46
	protected bool isLongPress; // 0x47
	protected Vector2 startPosition; // 0x48

	// Properties
	public bool IsEnabled { get; set; }
	public bool IsPress { get; }
	public bool IsLongPress { get; }

	// Methods

	// RVA: 0x1AEDD38 Offset: 0x1AEDD38 VA: 0x1AEDD38
	public void .ctor() { }

	// RVA: 0x1AEDE04 Offset: 0x1AEDE04 VA: 0x1AEDE04
	public bool get_IsEnabled() { }

	// RVA: 0x1AEDE0C Offset: 0x1AEDE0C VA: 0x1AEDE0C
	public void set_IsEnabled(bool value) { }

	// RVA: 0x1AEDEA4 Offset: 0x1AEDEA4 VA: 0x1AEDEA4
	public bool get_IsPress() { }

	// RVA: 0x1AEDEC4 Offset: 0x1AEDEC4 VA: 0x1AEDEC4
	public bool get_IsLongPress() { }

	// RVA: 0x1AEDEE4 Offset: 0x1AEDEE4 VA: 0x1AEDEE4
	protected void OnEnable() { }

	// RVA: 0x1AEDEEC Offset: 0x1AEDEEC VA: 0x1AEDEEC
	protected void Init() { }

	// RVA: 0x1AEDEF0 Offset: 0x1AEDEF0 VA: 0x1AEDEF0
	public void OnPress(bool isPressed) { }

	// RVA: 0x1AEE144 Offset: 0x1AEE144 VA: 0x1AEE144
	protected void OnCheckLongPress() { }

	// RVA: 0x1AEE1B8 Offset: 0x1AEE1B8 VA: 0x1AEE1B8
	public void OnHover(bool isSelect) { }

	// RVA: 0x1AEE234 Offset: 0x1AEE234 VA: 0x1AEE234
	protected void OnDrag(Vector2 v) { }

	// RVA: 0x1AEE35C Offset: 0x1AEE35C VA: 0x1AEE35C
	public void Click() { }

	// RVA: 0x1AEE3F4 Offset: 0x1AEE3F4 VA: 0x1AEE3F4
	protected void OnPressCancel() { }

	// RVA: 0x1AEE400 Offset: 0x1AEE400 VA: 0x1AEE400
	public void PressReset() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC25EB0 Offset: 0xC25EB0 VA: 0xC25EB0
public class UITouchPressMarge : MonoBehaviour // TypeDefIndex: 7880
{
	// Fields
	public UITouchPress margeComponent; // 0x18
	protected bool isPress; // 0x20

	// Methods

	// RVA: 0x1AEE40C Offset: 0x1AEE40C VA: 0x1AEE40C
	public void .ctor() { }

	// RVA: 0x1AEE414 Offset: 0x1AEE414 VA: 0x1AEE414
	public void OnPress(bool isPressed) { }

	// RVA: 0x1AEE494 Offset: 0x1AEE494 VA: 0x1AEE494
	protected void OnHover(bool isSelect) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC25EE8 Offset: 0xC25EE8 VA: 0xC25EE8
[AddComponentMenu] // RVA: 0xC25EE8 Offset: 0xC25EE8 VA: 0xC25EE8
public class UITweenRenderer : UIWidget // TypeDefIndex: 7881
{
	// Fields
	protected float volume; // 0x180

	// Methods

	// RVA: 0x1AEE514 Offset: 0x1AEE514 VA: 0x1AEE514
	public void .ctor() { }

	// RVA: 0x1AEE640 Offset: 0x1AEE640 VA: 0x1AEE640 Slot: 39
	public virtual void SetTweenColor(Color c) { }

	// RVA: 0x1AEE644 Offset: 0x1AEE644 VA: 0x1AEE644 Slot: 40
	public virtual Color GetTweenColor() { }

	// RVA: 0x1AEE650 Offset: 0x1AEE650 VA: 0x1AEE650 Slot: 41
	public virtual void SetTweenVolume(float v) { }

	// RVA: 0x1AEE658 Offset: 0x1AEE658 VA: 0x1AEE658 Slot: 42
	public virtual float GetTweenVolume() { }

	// RVA: 0x1AEE660 Offset: 0x1AEE660 VA: 0x1AEE660
	protected CompareFunction GetRenderingCompareFunction(SpriteMaskInteraction maskInteraction) { }
}

// Namespace: 
public class UIUnityRendererEnableClip : UIWidget // TypeDefIndex: 7882
{
	// Fields
	[HideInInspector] // RVA: 0xC57CA0 Offset: 0xC57CA0 VA: 0xC57CA0
	[SerializeField] // RVA: 0xC57CA0 Offset: 0xC57CA0 VA: 0xC57CA0
	private Renderer mRenderer; // 0x180
	[HideInInspector] // RVA: 0xC57CD8 Offset: 0xC57CD8 VA: 0xC57CD8
	[SerializeField] // RVA: 0xC57CD8 Offset: 0xC57CD8 VA: 0xC57CD8
	private int renderQueue; // 0x188
	[HideInInspector] // RVA: 0xC57D10 Offset: 0xC57D10 VA: 0xC57D10
	[SerializeField] // RVA: 0xC57D10 Offset: 0xC57D10 VA: 0xC57D10
	private Material[] mMats; // 0x190
	private bool createMat; // 0x198
	private static readonly int PROPERTY_ID_ClipRange0; // 0x0
	private static readonly int PROPERTY_ID_ClipRotateInfo; // 0x4
	private static readonly int PROPERTY_ID_ClipTex; // 0x8
	private static readonly int PROPERTY_ID_PanelReplace; // 0xC
	private static readonly int PROPERTY_ID_ClipSharpness; // 0x10
	private static readonly int PROPERTY_ID_PanelSpaceMatrix; // 0x14
	private UIDrawCall.Clipping currentClipping; // 0x19C

	// Properties
	public Renderer cachedRenderer { get; }
	public override Material material { get; set; }
	public override Shader shader { get; set; }

	// Methods

	// RVA: 0x1AF0684 Offset: 0x1AF0684 VA: 0x1AF0684
	public void .ctor() { }

	// RVA: 0x1AF0690 Offset: 0x1AF0690 VA: 0x1AF0690
	public Renderer get_cachedRenderer() { }

	// RVA: 0x1AF0728 Offset: 0x1AF0728 VA: 0x1AF0728 Slot: 24
	public override Material get_material() { }

	// RVA: 0x1AF0D78 Offset: 0x1AF0D78 VA: 0x1AF0D78 Slot: 25
	public override void set_material(Material value) { }

	// RVA: 0x1AF0C4C Offset: 0x1AF0C4C VA: 0x1AF0C4C
	public bool isEqualMaterials(Material[] a, Material[] b) { }

	// RVA: 0x1AF0E3C Offset: 0x1AF0E3C VA: 0x1AF0E3C Slot: 28
	public override Shader get_shader() { }

	// RVA: 0x1AF0EB4 Offset: 0x1AF0EB4 VA: 0x1AF0EB4 Slot: 29
	public override void set_shader(Shader value) { }

	// RVA: 0x1AF0AC0 Offset: 0x1AF0AC0 VA: 0x1AF0AC0
	private bool ExistSharedMaterial0() { }

	// RVA: 0x1AF0B7C Offset: 0x1AF0B7C VA: 0x1AF0B7C
	private bool CheckMaterial(Material[] mats) { }

	// RVA: 0x1AF0F78 Offset: 0x1AF0F78 VA: 0x1AF0F78
	private void OnDestroy() { }

	// RVA: 0x1AF10A0 Offset: 0x1AF10A0 VA: 0x1AF10A0
	private void OnWillRenderObject() { }

	// RVA: 0x1AF1B78 Offset: 0x1AF1B78 VA: 0x1AF1B78 Slot: 38
	public override void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }

	// RVA: 0x1AF1E84 Offset: 0x1AF1E84 VA: 0x1AF1E84
	private static void .cctor() { }
}

// Namespace: 
public class UIVerticalImageM : UIVerticalImageRender // TypeDefIndex: 7883
{
	// Fields
	protected AssetData[] assetDataList; // 0x1F0
	protected string[] loadNameList; // 0x1F8
	protected Action callbackFunc; // 0x200

	// Properties
	public bool IsLoad { get; }

	// Methods

	// RVA: 0x1AF1F88 Offset: 0x1AF1F88 VA: 0x1AF1F88
	public void .ctor() { }

	// RVA: 0x1AF2058 Offset: 0x1AF2058 VA: 0x1AF2058
	public bool get_IsLoad() { }

	// RVA: 0x1AF2068 Offset: 0x1AF2068 VA: 0x1AF2068
	public void Destroy() { }

	// RVA: 0x1AF2124 Offset: 0x1AF2124 VA: 0x1AF2124
	protected void OnDestroy() { }

	// RVA: 0x1AF206C Offset: 0x1AF206C VA: 0x1AF206C
	public void ReleaseCharacter() { }

	// RVA: 0x1AF2378 Offset: 0x1AF2378 VA: 0x1AF2378
	public void SetCharacter(string imageName, Face.Type faceType, Action callbackFunc) { }

	// RVA: 0x1AF2850 Offset: 0x1AF2850 VA: 0x1AF2850
	protected void EndLoadAsset() { }

	// RVA: 0x1AF2974 Offset: 0x1AF2974 VA: 0x1AF2974
	protected void SetTexture() { }

	// RVA: 0x1AF2770 Offset: 0x1AF2770 VA: 0x1AF2770
	protected void SetTextureStatus() { }

	// RVA: 0x1AF3A3C Offset: 0x1AF3A3C VA: 0x1AF3A3C
	public void SetDispOffset() { }
}

// Namespace: 
public class UIVerticalImageRender : UITweenRenderer // TypeDefIndex: 7884
{
	// Fields
	[SerializeField] // RVA: 0xC57D48 Offset: 0xC57D48 VA: 0xC57D48
	protected MeshFilter bodyFilter; // 0x188
	[SerializeField] // RVA: 0xC57D58 Offset: 0xC57D58 VA: 0xC57D58
	protected MeshRenderer bodyRenderer; // 0x190
	public static readonly int MAIN_SIZE_X; // 0x0
	public static readonly int MAIN_SIZE_Y; // 0x4
	public static readonly int BODY_SIZE_X; // 0x8
	public static readonly int BODY_SIZE_Y; // 0xC
	public static readonly int OVERLAP_V; // 0x10
	public static readonly int LEFT_X; // 0x14
	public static readonly int RIGHT_X; // 0x18
	public static readonly int TOP_Y; // 0x1C
	public static readonly int BOTTOM_Y; // 0x20
	public static readonly int BOTTOM_Y2; // 0x24
	public static readonly float BODY_U; // 0x28
	public static readonly float BODY_V; // 0x2C
	public static readonly float BODY_U2; // 0x30
	public static readonly float BODY_V2; // 0x34
	public static readonly float BODY_W; // 0x38
	public static readonly float BODY_H; // 0x3C
	protected bool isShadow; // 0x198
	protected bool isTalkMask; // 0x199
	protected string filterName; // 0x1A0
	protected Color filterColor; // 0x1A8
	protected Vector2 figureOffset; // 0x1B8
	protected Vector2 dispOffset; // 0x1C0
	protected Vector2 dispTop; // 0x1C8
	protected Texture2D[] textureList; // 0x1D0
	protected bool isBusyMoveAlpha; // 0x1D8
	protected GameObject moveAlphaCallbackObject; // 0x1E0
	protected string moveAlphaCallbackFunc; // 0x1E8

	// Methods

	// RVA: 0x1AF1FEC Offset: 0x1AF1FEC VA: 0x1AF1FEC
	public void .ctor() { }

	// RVA: 0x1AF2620 Offset: 0x1AF2620 VA: 0x1AF2620
	public static string[] GetAssetNameList(string imageName) { }

	// RVA: 0x1AF3B14 Offset: 0x1AF3B14 VA: 0x1AF3B14
	public bool IsBusyMoveAlpha() { }

	// RVA: 0x1AF3B1C Offset: 0x1AF3B1C VA: 0x1AF3B1C
	public Vector2 GetCenterOffset() { }

	// RVA: 0x1AF3BB8 Offset: 0x1AF3BB8 VA: 0x1AF3BB8
	public static Vector2 GetCharacterOffset() { }

	// RVA: 0x1AF3BEC Offset: 0x1AF3BEC VA: 0x1AF3BEC
	public static Vector2 GetCharacterOffsetMyroom() { }

	// RVA: 0x1AF3C20 Offset: 0x1AF3C20 VA: 0x1AF3C20 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x1AF3D30 Offset: 0x1AF3D30 VA: 0x1AF3D30
	public Vector2 GetBodySize() { }

	// RVA: 0x1AF3DB4 Offset: 0x1AF3DB4 VA: 0x1AF3DB4
	public void SetActive(bool isActive) { }

	// RVA: 0x1AF2128 Offset: 0x1AF2128 VA: 0x1AF2128
	public void ReleaseCharacter() { }

	// RVA: 0x1AF3E04 Offset: 0x1AF3E04 VA: 0x1AF3E04
	public void SetCharacter(string imageName, Face.Type faceType, Texture2D[] textureList) { }

	// RVA: 0x1AF2B6C Offset: 0x1AF2B6C VA: 0x1AF2B6C
	protected void SetCharacterRender() { }

	// RVA: 0x1AF3F78 Offset: 0x1AF3F78 VA: 0x1AF3F78
	public void SetSharder(string shaderName) { }

	// RVA: 0x1AF40F4 Offset: 0x1AF40F4 VA: 0x1AF40F4
	public void RecoverSharder() { }

	// RVA: 0x1AF41CC Offset: 0x1AF41CC VA: 0x1AF41CC
	public void SetWipeTexture(Texture texture) { }

	// RVA: 0x1AF4410 Offset: 0x1AF4410 VA: 0x1AF4410
	public void SetFilter(string filterName, Color filterColor) { }

	// RVA: 0x1AF3E10 Offset: 0x1AF3E10 VA: 0x1AF3E10
	public void SetBaseColor() { }

	// RVA: 0x1AF4468 Offset: 0x1AF4468 VA: 0x1AF4468
	public void SetShadow(bool isShadow) { }

	// RVA: 0x1AF4474 Offset: 0x1AF4474 VA: 0x1AF4474
	public void SetTalkMask(bool isMask) { }

	// RVA: 0x1AF4480 Offset: 0x1AF4480 VA: 0x1AF4480
	public void SetAlpha(float alpha) { }

	// RVA: 0x1AF3EA0 Offset: 0x1AF3EA0 VA: 0x1AF3EA0
	public void SetFilterColor(Color c) { }

	// RVA: 0x1AF44A4 Offset: 0x1AF44A4 VA: 0x1AF44A4
	public void SetGradation(float g) { }

	// RVA: 0x1AF4588 Offset: 0x1AF4588 VA: 0x1AF4588
	public void SetVolume(float v) { }

	// RVA: 0x1AF466C Offset: 0x1AF466C VA: 0x1AF466C
	public void SetDepth(float d) { }

	// RVA: 0x1AF46F4 Offset: 0x1AF46F4 VA: 0x1AF46F4
	public void MoveAlpha(float duration, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x1AF49A4 Offset: 0x1AF49A4 VA: 0x1AF49A4
	public void MoveAlphaSpeed(float speed, float alpha, GameObject callbackObject, string callbackFunc) { }

	// RVA: 0x1AF48EC Offset: 0x1AF48EC VA: 0x1AF48EC
	protected void EndMoveAlpha() { }

	// RVA: 0x1AF4BB0 Offset: 0x1AF4BB0 VA: 0x1AF4BB0
	public void SetLayer(int layer) { }

	// RVA: 0x1AF4C28 Offset: 0x1AF4C28 VA: 0x1AF4C28
	protected void SetLayer(Transform tf, int layer) { }

	// RVA: 0x1AF4F28 Offset: 0x1AF4F28 VA: 0x1AF4F28
	public void SetMaskInteraction(SpriteMaskInteraction maskInteraction) { }

	// RVA: 0x1AF4FCC Offset: 0x1AF4FCC VA: 0x1AF4FCC
	public void SetSortingOrder(int order) { }

	// RVA: 0x1AF5004 Offset: 0x1AF5004 VA: 0x1AF5004
	private static void .cctor() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC25F34 Offset: 0xC25F34 VA: 0xC25F34
[TooltipAttribute] // RVA: 0xC25F34 Offset: 0xC25F34 VA: 0xC25F34
public class ActionCommonConfirmDialog : FsmStateAction // TypeDefIndex: 7885
{
	// Fields
	[TooltipAttribute] // RVA: 0xC57D68 Offset: 0xC57D68 VA: 0xC57D68
	public FsmString titleName; // 0x50
	[TooltipAttribute] // RVA: 0xC57DA0 Offset: 0xC57DA0 VA: 0xC57DA0
	public FsmString messageName; // 0x58
	[TooltipAttribute] // RVA: 0xC57DD8 Offset: 0xC57DD8 VA: 0xC57DD8
	public FsmEvent decideFinishedEvent; // 0x60
	[TooltipAttribute] // RVA: 0xC57E10 Offset: 0xC57E10 VA: 0xC57E10
	public FsmEvent cancelFinishedEvent; // 0x68

	// Methods

	// RVA: 0x1D26898 Offset: 0x1D26898 VA: 0x1D26898
	public void .ctor() { }

	// RVA: 0x1D268A0 Offset: 0x1D268A0 VA: 0x1D268A0 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D268A8 Offset: 0x1D268A8 VA: 0x1D268A8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D269A8 Offset: 0x1D269A8 VA: 0x1D269A8
	protected void EndDialog(bool isDecide) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC25F84 Offset: 0xC25F84 VA: 0xC25F84
[TooltipAttribute] // RVA: 0xC25F84 Offset: 0xC25F84 VA: 0xC25F84
public class ActionTripleButtonDialog : FsmStateAction // TypeDefIndex: 7886
{
	// Fields
	[TooltipAttribute] // RVA: 0xC57E48 Offset: 0xC57E48 VA: 0xC57E48
	public FsmString titleName; // 0x50
	[TooltipAttribute] // RVA: 0xC57E80 Offset: 0xC57E80 VA: 0xC57E80
	public FsmString messageName; // 0x58
	[TooltipAttribute] // RVA: 0xC57EB8 Offset: 0xC57EB8 VA: 0xC57EB8
	public FsmString cancelButtonLabel; // 0x60
	[TooltipAttribute] // RVA: 0xC57EF0 Offset: 0xC57EF0 VA: 0xC57EF0
	public FsmString middleButtonLabel; // 0x68
	[TooltipAttribute] // RVA: 0xC57F28 Offset: 0xC57F28 VA: 0xC57F28
	public FsmString rightButtonLabel; // 0x70
	[TooltipAttribute] // RVA: 0xC57F60 Offset: 0xC57F60 VA: 0xC57F60
	public FsmEvent decideMiddleFinishedEvent; // 0x78
	[TooltipAttribute] // RVA: 0xC57F98 Offset: 0xC57F98 VA: 0xC57F98
	public FsmEvent decideRightFinishedEvent; // 0x80
	[TooltipAttribute] // RVA: 0xC57FD0 Offset: 0xC57FD0 VA: 0xC57FD0
	public FsmEvent cancelFinishedEvent; // 0x88

	// Methods

	// RVA: 0x1D26A88 Offset: 0x1D26A88 VA: 0x1D26A88
	public void .ctor() { }

	// RVA: 0x1D26A90 Offset: 0x1D26A90 VA: 0x1D26A90 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D26A9C Offset: 0x1D26A9C VA: 0x1D26A9C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D26C30 Offset: 0x1D26C30 VA: 0x1D26C30
	protected void EndDialog(TripleButtonDlgComponent.ResultClicked result) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC25FD4 Offset: 0xC25FD4 VA: 0xC25FD4
[TooltipAttribute] // RVA: 0xC25FD4 Offset: 0xC25FD4 VA: 0xC25FD4
public class AdStoreEvent : FsmStateAction // TypeDefIndex: 7887
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58008 Offset: 0xC58008 VA: 0xC58008
	[TooltipAttribute] // RVA: 0xC58008 Offset: 0xC58008 VA: 0xC58008
	public FsmString actionKey; // 0x50

	// Methods

	// RVA: 0x1D27330 Offset: 0x1D27330 VA: 0x1D27330
	public void .ctor() { }

	// RVA: 0x1D27338 Offset: 0x1D27338 VA: 0x1D27338 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D2733C Offset: 0x1D2733C VA: 0x1D2733C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26034 Offset: 0xC26034 VA: 0xC26034
[TooltipAttribute] // RVA: 0xC26034 Offset: 0xC26034 VA: 0xC26034
public class AssetManagerLoader : FsmStateAction // TypeDefIndex: 7888
{
	// Fields
	[TooltipAttribute] // RVA: 0xC58054 Offset: 0xC58054 VA: 0xC58054
	public FsmString assetName; // 0x50
	[TooltipAttribute] // RVA: 0xC5808C Offset: 0xC5808C VA: 0xC5808C
	public FsmBool isDownloadOnly; // 0x58
	[TooltipAttribute] // RVA: 0xC580C4 Offset: 0xC580C4 VA: 0xC580C4
	public FsmEvent finishEvent; // 0x60
	[TooltipAttribute] // RVA: 0xC580FC Offset: 0xC580FC VA: 0xC580FC
	public FsmObject assetData; // 0x68

	// Methods

	// RVA: 0x1D31D2C Offset: 0x1D31D2C VA: 0x1D31D2C
	public void .ctor() { }

	// RVA: 0x1D31D34 Offset: 0x1D31D34 VA: 0x1D31D34 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D31DBC Offset: 0x1D31DBC VA: 0x1D31DBC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D31ED8 Offset: 0x1D31ED8 VA: 0x1D31ED8
	protected void LoadEndAsset(AssetData data) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26084 Offset: 0xC26084 VA: 0xC26084
[NoteAttribute] // RVA: 0xC26084 Offset: 0xC26084 VA: 0xC26084
public class JudgeUsingOptionalBattleEffectId : FsmStateAction // TypeDefIndex: 7889
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58134 Offset: 0xC58134 VA: 0xC58134
	[CheckForComponentAttribute] // RVA: 0xC58134 Offset: 0xC58134 VA: 0xC58134
	public FsmGameObject PerformanceObject; // 0x50
	[TooltipAttribute] // RVA: 0xC581A8 Offset: 0xC581A8 VA: 0xC581A8
	public FsmEvent TrueEvent; // 0x58
	[TooltipAttribute] // RVA: 0xC581E0 Offset: 0xC581E0 VA: 0xC581E0
	public FsmEvent FalseEvent; // 0x60

	// Methods

	// RVA: 0x1B7BB5C Offset: 0x1B7BB5C VA: 0x1B7BB5C
	public void .ctor() { }

	// RVA: 0x1B7BB64 Offset: 0x1B7BB64 VA: 0x1B7BB64 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B7BBC0 Offset: 0x1B7BBC0 VA: 0x1B7BBC0
	private bool IsOptionalBattleEffectIdAvaliable() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC260E4 Offset: 0xC260E4 VA: 0xC260E4
[NoteAttribute] // RVA: 0xC260E4 Offset: 0xC260E4 VA: 0xC260E4
public class StoreOptionalBattleEffectId : FsmStateAction // TypeDefIndex: 7890
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58218 Offset: 0xC58218 VA: 0xC58218
	[CheckForComponentAttribute] // RVA: 0xC58218 Offset: 0xC58218 VA: 0xC58218
	public FsmGameObject PerformanceObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC5828C Offset: 0xC5828C VA: 0xC5828C
	[TooltipAttribute] // RVA: 0xC5828C Offset: 0xC5828C VA: 0xC5828C
	public FsmInt EffectIndex; // 0x58
	[TooltipAttribute] // RVA: 0xC582D8 Offset: 0xC582D8 VA: 0xC582D8
	public FsmInt StoreEffectId; // 0x60

	// Methods

	// RVA: 0x1B9FB84 Offset: 0x1B9FB84 VA: 0x1B9FB84
	public void .ctor() { }

	// RVA: 0x1B9FB8C Offset: 0x1B9FB8C VA: 0x1B9FB8C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B9FBE0 Offset: 0x1B9FBE0 VA: 0x1B9FBE0
	private int GetEffectIdFromSKillLvScript() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26144 Offset: 0xC26144 VA: 0xC26144
[TooltipAttribute] // RVA: 0xC26144 Offset: 0xC26144 VA: 0xC26144
public class BattleSeLoader : FsmStateAction // TypeDefIndex: 7891
{
	// Fields
	[TooltipAttribute] // RVA: 0xC58310 Offset: 0xC58310 VA: 0xC58310
	public FsmString categoryName; // 0x50
	[TooltipAttribute] // RVA: 0xC58348 Offset: 0xC58348 VA: 0xC58348
	public FsmBool isDownloadOnly; // 0x58
	[TooltipAttribute] // RVA: 0xC58380 Offset: 0xC58380 VA: 0xC58380
	public FsmEvent finishEvent; // 0x60
	[TooltipAttribute] // RVA: 0xC583B8 Offset: 0xC583B8 VA: 0xC583B8
	public FsmObject assetData; // 0x68

	// Methods

	// RVA: 0x1D333B0 Offset: 0x1D333B0 VA: 0x1D333B0
	public void .ctor() { }

	// RVA: 0x1D333B8 Offset: 0x1D333B8 VA: 0x1D333B8 Slot: 28
	public override void Reset() { }

	// RVA: 0x1D33440 Offset: 0x1D33440 VA: 0x1D33440 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26194 Offset: 0xC26194 VA: 0xC26194
public class ChangeRendererMaterialColor : FsmStateAction // TypeDefIndex: 7892
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC583F0 Offset: 0xC583F0 VA: 0xC583F0
	public FsmGameObject gameObject; // 0x50
	public ChangeRendererMaterialColorEffect.RendererType[] targetRendererTypes; // 0x58
	public FsmString propertyName; // 0x60
	public FsmColor color; // 0x68
	public FsmFloat time; // 0x70
	public iTween.EaseType easeType; // 0x78
	public FsmBool isMaterialAll; // 0x80
	public FsmEvent changedEvent; // 0x88
	private bool isChanged; // 0x90

	// Methods

	// RVA: 0x1D37E8C Offset: 0x1D37E8C VA: 0x1D37E8C
	public void .ctor() { }

	// RVA: 0x1D37EFC Offset: 0x1D37EFC VA: 0x1D37EFC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1D381BC Offset: 0x1D381BC VA: 0x1D381BC Slot: 34
	public override void OnUpdate() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCAE78 Offset: 0xCCAE78 VA: 0xCCAE78
	// RVA: 0x1D38234 Offset: 0x1D38234 VA: 0x1D38234
	private void <OnEnter>m__0() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC261CC Offset: 0xC261CC VA: 0xC261CC
public class ChangeScene : FsmStateAction // TypeDefIndex: 7893
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58400 Offset: 0xC58400 VA: 0xC58400
	public SceneList.Type SceneType; // 0x4C

	// Methods

	// RVA: 0x1D38240 Offset: 0x1D38240 VA: 0x1D38240
	public void .ctor() { }

	// RVA: 0x1D38248 Offset: 0x1D38248 VA: 0x1D38248 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26204 Offset: 0xC26204 VA: 0xC26204
public class ChangeSceneString : FsmStateAction // TypeDefIndex: 7894
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58410 Offset: 0xC58410 VA: 0xC58410
	public string SceneName; // 0x50

	// Methods

	// RVA: 0x1D382D0 Offset: 0x1D382D0 VA: 0x1D382D0
	public void .ctor() { }

	// RVA: 0x1D382D8 Offset: 0x1D382D8 VA: 0x1D382D8 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2623C Offset: 0xC2623C VA: 0xC2623C
[TooltipAttribute] // RVA: 0xC2623C Offset: 0xC2623C VA: 0xC2623C
public class ChangeVolumeBgm : FsmStateAction // TypeDefIndex: 7895
{
	// Fields
	[TooltipAttribute] // RVA: 0xC58420 Offset: 0xC58420 VA: 0xC58420
	public FsmFloat volume; // 0x50
	[TooltipAttribute] // RVA: 0xC58458 Offset: 0xC58458 VA: 0xC58458
	public FsmFloat fadeTime; // 0x58

	// Methods

	// RVA: 0x1D38360 Offset: 0x1D38360 VA: 0x1D38360
	public void .ctor() { }

	// RVA: 0x1D383A4 Offset: 0x1D383A4 VA: 0x1D383A4 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2628C Offset: 0xC2628C VA: 0xC2628C
[ActionTarget] // RVA: 0xC2628C Offset: 0xC2628C VA: 0xC2628C
[TooltipAttribute] // RVA: 0xC2628C Offset: 0xC2628C VA: 0xC2628C
public class CreateObjectEx : FsmStateAction // TypeDefIndex: 7896
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC58490 Offset: 0xC58490 VA: 0xC58490
	[TooltipAttribute] // RVA: 0xC58490 Offset: 0xC58490 VA: 0xC58490
	public FsmGameObject gameObject; // 0x50
	public FsmGameObject parentGameObject; // 0x58
	[TooltipAttribute] // RVA: 0xC584DC Offset: 0xC584DC VA: 0xC584DC
	public FsmGameObject spawnPoint; // 0x60
	[TooltipAttribute] // RVA: 0xC58514 Offset: 0xC58514 VA: 0xC58514
	public FsmVector3 position; // 0x68
	[TooltipAttribute] // RVA: 0xC5854C Offset: 0xC5854C VA: 0xC5854C
	public FsmVector3 rotation; // 0x70
	[UIHintAttribute] // RVA: 0xC58584 Offset: 0xC58584 VA: 0xC58584
	[TooltipAttribute] // RVA: 0xC58584 Offset: 0xC58584 VA: 0xC58584
	public FsmGameObject storeObject; // 0x78

	// Methods

	// RVA: 0x1D3DDC4 Offset: 0x1D3DDC4 VA: 0x1D3DDC4
	public void .ctor() { }

	// RVA: 0x1D3DDCC Offset: 0x1D3DDCC VA: 0x1D3DDCC Slot: 28
	public override void Reset() { }

	// RVA: 0x1D3DE8C Offset: 0x1D3DE8C VA: 0x1D3DE8C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26358 Offset: 0xC26358 VA: 0xC26358
[TooltipAttribute] // RVA: 0xC26358 Offset: 0xC26358 VA: 0xC26358
public class DevicePlayMovieAsset : FsmStateAction // TypeDefIndex: 7897
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC585D4 Offset: 0xC585D4 VA: 0xC585D4
	[TooltipAttribute] // RVA: 0xC585D4 Offset: 0xC585D4 VA: 0xC585D4
	public FsmString moviePath; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC58620 Offset: 0xC58620 VA: 0xC58620
	[TooltipAttribute] // RVA: 0xC58620 Offset: 0xC58620 VA: 0xC58620
	public FsmColor fadeColor; // 0x58

	// Methods

	// RVA: 0x12EBED8 Offset: 0x12EBED8 VA: 0x12EBED8
	public void .ctor() { }

	// RVA: 0x12EBEE0 Offset: 0x12EBEE0 VA: 0x12EBEE0 Slot: 28
	public override void Reset() { }

	// RVA: 0x12EBF6C Offset: 0x12EBF6C VA: 0x12EBF6C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12EC2F8 Offset: 0x12EC2F8 VA: 0x12EC2F8
	private void OnEndDownload(AssetData data) { }

	// RVA: 0x12EC15C Offset: 0x12EC15C VA: 0x12EC15C
	private void PlayVideo(string name, string path) { }

	// RVA: 0x12EC378 Offset: 0x12EC378 VA: 0x12EC378
	private CRIMoviePlayer CreateCriMoviePlayerObject() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC430A4 Offset: 0xC430A4 VA: 0xC430A4
private sealed class DevicePlayMovieAsset.<PlayVideo>c__AnonStorey0 // TypeDefIndex: 7898
{
	// Fields
	internal CRIMoviePlayer player; // 0x10
	internal DevicePlayMovieAsset $this; // 0x18

	// Methods

	// RVA: 0x12EC370 Offset: 0x12EC370 VA: 0x12EC370
	public void .ctor() { }

	// RVA: 0x12EC428 Offset: 0x12EC428 VA: 0x12EC428
	internal void <>m__0() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC263A8 Offset: 0xC263A8 VA: 0xC263A8
[TooltipAttribute] // RVA: 0xC263A8 Offset: 0xC263A8 VA: 0xC263A8
public class DeviceWebView : FsmStateAction // TypeDefIndex: 7899
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC5866C Offset: 0xC5866C VA: 0xC5866C
	public FsmString webPath; // 0x50

	// Methods

	// RVA: 0x12EC580 Offset: 0x12EC580 VA: 0x12EC580
	public void .ctor() { }

	// RVA: 0x12EC588 Offset: 0x12EC588 VA: 0x12EC588 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x12EC67C Offset: 0x12EC67C VA: 0x12EC67C
	protected void OnEndWebView() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC263F8 Offset: 0xC263F8 VA: 0xC263F8
[TooltipAttribute] // RVA: 0xC263F8 Offset: 0xC263F8 VA: 0xC263F8
public class FadeoutBgm : FsmStateAction // TypeDefIndex: 7900
{
	// Fields
	[HasFloatSliderAttribute] // RVA: 0xC5867C Offset: 0xC5867C VA: 0xC5867C
	[TooltipAttribute] // RVA: 0xC5867C Offset: 0xC5867C VA: 0xC5867C
	public FsmFloat fadeTime; // 0x50

	// Methods

	// RVA: 0x1AAF9E4 Offset: 0x1AAF9E4 VA: 0x1AAF9E4
	public void .ctor() { }

	// RVA: 0x1AAFA18 Offset: 0x1AAFA18 VA: 0x1AAFA18 Slot: 28
	public override void Reset() { }

	// RVA: 0x1AAFA1C Offset: 0x1AAFA1C VA: 0x1AAFA1C Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC26448 Offset: 0xC26448 VA: 0xC26448
public class FGOActionSkillTargetCheck : FsmStateAction // TypeDefIndex: 7901
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC586D4 Offset: 0xC586D4 VA: 0xC586D4
	[CheckForComponentAttribute] // RVA: 0xC586D4 Offset: 0xC586D4 VA: 0xC586D4
