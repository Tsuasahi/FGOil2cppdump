	// Properties
	public int mPrioredIconId { get; set; }
	public bool IsReplacedData { get; set; }

	// Methods

	// RVA: 0x20FAC48 Offset: 0x20FAC48 VA: 0x20FAC48
	public void .ctor() { }

	// RVA: 0x20FACB0 Offset: 0x20FACB0 VA: 0x20FACB0
	public void .ctor(GiftEntity cSrc, int priorIconId = 0, bool replace = False) { }

	// RVA: 0x20FADD0 Offset: 0x20FADD0 VA: 0x20FADD0
	public int get_mPrioredIconId() { }

	// RVA: 0x20FADD8 Offset: 0x20FADD8 VA: 0x20FADD8
	public void set_mPrioredIconId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37BCC Offset: 0xD37BCC VA: 0xD37BCC
	// RVA: 0x20FADE0 Offset: 0x20FADE0 VA: 0x20FADE0
	public bool get_IsReplacedData() { }

	[CompilerGeneratedAttribute] // RVA: 0xD37BDC Offset: 0xD37BDC VA: 0xD37BDC
	// RVA: 0x20FACA4 Offset: 0x20FACA4 VA: 0x20FACA4
	private void set_IsReplacedData(bool value) { }

	// RVA: 0x20FADE8 Offset: 0x20FADE8 VA: 0x20FADE8
	public void SetReplacedData(bool flag) { }

	// RVA: 0x20FADF4 Offset: 0x20FADF4 VA: 0x20FADF4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x20FAE08 Offset: 0x20FAE08 VA: 0x20FAE08
	public static string CreatePK(int id, int type, int objectId) { }

	// RVA: 0x20FAE1C Offset: 0x20FAE1C VA: 0x20FAE1C
	public void GetInfo(out string nameText, out string countText) { }

	// RVA: 0x20FB4E8 Offset: 0x20FB4E8 VA: 0x20FB4E8
	public string GetRewardName() { }

	// RVA: 0x20FBAE0 Offset: 0x20FBAE0 VA: 0x20FBAE0
	public bool isQp() { }

	// RVA: 0x20FBBA4 Offset: 0x20FBBA4 VA: 0x20FBBA4
	public int getIconImageId() { }

	// RVA: 0x20FBC68 Offset: 0x20FBC68 VA: 0x20FBC68
	public bool checkGiftType(Gift.Type checkType) { }
}

// Namespace: 
public class GiftMaster : DataMasterBase<GiftMaster, GiftEntity, string> // TypeDefIndex: 7047
{
	// Methods

	// RVA: 0x20FC3E0 Offset: 0x20FC3E0 VA: 0x20FC3E0
	public void .ctor() { }

	// RVA: 0x20FC434 Offset: 0x20FC434 VA: 0x20FC434
	public GiftEntity GetEntity(int id, int type, int objectId) { }

	// RVA: 0x20FC4B8 Offset: 0x20FC4B8 VA: 0x20FC4B8
	public bool TryGetEntity(out GiftEntity entity, int id, int type, int objectId) { }

	// RVA: 0x20FC544 Offset: 0x20FC544 VA: 0x20FC544
	public GiftEntity getDataById(int id) { }

	// RVA: 0x20FC714 Offset: 0x20FC714 VA: 0x20FC714
	public GiftEntity[] GetGiftListById(int giftId) { }

	// RVA: 0x20FC9D0 Offset: 0x20FC9D0 VA: 0x20FC9D0
	public List<GiftEntity> GetListById(int giftId) { }

	// RVA: 0x20FCC74 Offset: 0x20FCC74 VA: 0x20FCC74
	public GiftEntity[] GetGiftListByIds(int[] giftIds, bool isAddMstCheck) { }
}

// Namespace: 
public class GuideEntity : DataEntityBase<string> // TypeDefIndex: 7048
{
	// Fields
	public int guideType; // 0x10
	public int priority; // 0x14
	public int guideImageId; // 0x18
	public int guideFaceId; // 0x1C
	public int guideLimitCount; // 0x20
	public int bgImageId; // 0x24
	public int condQuestId; // 0x28
	public int condQuestPhase; // 0x2C

	// Methods

	// RVA: 0x210B11C Offset: 0x210B11C VA: 0x210B11C
	public void .ctor() { }

	// RVA: 0x210B16C Offset: 0x210B16C VA: 0x210B16C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x210B17C Offset: 0x210B17C VA: 0x210B17C
	public static string CreatePK(int guideType, int priority) { }
}

// Namespace: 
public enum GuideEntity.GuideType // TypeDefIndex: 7049
{
	// Fields
	public int value__; // 0x0
	public const GuideEntity.GuideType COMBINE = 1;
	public const GuideEntity.GuideType SHOP = 2;
	public const GuideEntity.GuideType SVT_COSTUME = 3;
}

// Namespace: 
public class GuideMaster : DataMasterBase<GuideMaster, GuideEntity, string> // TypeDefIndex: 7050
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1A18 Offset: 0xCC1A18 VA: 0xCC1A18
	private static Comparison<GuideEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x210B18C Offset: 0x210B18C VA: 0x210B18C
	public void .ctor() { }

	// RVA: 0x210B1E0 Offset: 0x210B1E0 VA: 0x210B1E0
	public GuideEntity GetEntity(int guideType, int priority) { }

	// RVA: 0x210B254 Offset: 0x210B254 VA: 0x210B254
	public bool TryGetEntity(out GuideEntity entity, int guideType, int priority) { }

	// RVA: 0x210B2D8 Offset: 0x210B2D8 VA: 0x210B2D8
	public GuideEntity[] getDataListByType(GuideEntity.GuideType type) { }

	// RVA: 0x210B4F0 Offset: 0x210B4F0 VA: 0x210B4F0
	public GuideEntity getGuideData(GuideEntity.GuideType type) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37BEC Offset: 0xD37BEC VA: 0xD37BEC
	// RVA: 0x210B658 Offset: 0x210B658 VA: 0x210B658
	private static int <getDataListByType>m__0(GuideEntity a, GuideEntity b) { }
}

// Namespace: 
public class IllustratorEntity : DataEntityBase<int> // TypeDefIndex: 7051
{
	// Fields
	public int id; // 0x10
	public string name; // 0x18
	public string comment; // 0x20

	// Methods

	// RVA: 0x171505C Offset: 0x171505C VA: 0x171505C
	public void .ctor() { }

	// RVA: 0x17150AC Offset: 0x17150AC VA: 0x17150AC Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class IllustratorMaster : DataMasterBase<IllustratorMaster, IllustratorEntity, int> // TypeDefIndex: 7052
{
	// Methods

	// RVA: 0x17150B4 Offset: 0x17150B4 VA: 0x17150B4
	public void .ctor() { }
}

// Namespace: 
public class ItemEntity : DataEntityBase<int> // TypeDefIndex: 7053
{
	// Fields
	public int id; // 0x10
	public string name; // 0x18
	public string detail; // 0x20
	public int imageId; // 0x28
	public int bgImageId; // 0x2C
	public int type; // 0x30
	public string unit; // 0x38
	public int value; // 0x40
	public int sellQp; // 0x44
	public bool isSell; // 0x48
	public int priority; // 0x4C
	public int[] individuality; // 0x50
	public long startedAt; // 0x58
	public long endedAt; // 0x60
	public Dictionary<string, object> script; // 0x68

	// Methods

	// RVA: 0x171A474 Offset: 0x171A474 VA: 0x171A474
	public void .ctor() { }

	// RVA: 0x171A4C4 Offset: 0x171A4C4 VA: 0x171A4C4 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x171A4CC Offset: 0x171A4CC VA: 0x171A4CC
	public ItemType.Type GetItemType() { }

	// RVA: 0x171A4D4 Offset: 0x171A4D4 VA: 0x171A4D4
	public bool IsEnable() { }

	// RVA: 0x171A568 Offset: 0x171A568 VA: 0x171A568
	public bool IsEnable(long checkTime) { }

	// RVA: 0x171A598 Offset: 0x171A598 VA: 0x171A598
	public string GetCountText(int num) { }

	// RVA: 0x171A840 Offset: 0x171A840 VA: 0x171A840
	public string GetCountTextWithPrefix(int num) { }

	// RVA: 0x171A9D0 Offset: 0x171A9D0 VA: 0x171A9D0
	public IconLabelInfo.IconKind GetPriceUnitIcon() { }

	// RVA: 0x171A9D8 Offset: 0x171A9D8 VA: 0x171A9D8
	public IconLabelInfo.IconKind GetPriceIcon() { }

	// RVA: 0x171A9E0 Offset: 0x171A9E0 VA: 0x171A9E0
	public int GetPrice() { }

	// RVA: 0x171A9E8 Offset: 0x171A9E8 VA: 0x171A9E8
	public int getScript(string key, int defVal = 0) { }

	// RVA: 0x171AA84 Offset: 0x171AA84 VA: 0x171AA84
	public int GetImageId() { }

	// RVA: 0x171AD5C Offset: 0x171AD5C VA: 0x171AD5C
	public string GetOverwritePresentboxDetail() { }

	// RVA: 0x171ACE0 Offset: 0x171ACE0 VA: 0x171ACE0
	public string GetOverwriteImageIdInfo() { }

	// RVA: 0x171ADD8 Offset: 0x171ADD8 VA: 0x171ADD8
	public string getScript(string key, string defVal) { }
}

// Namespace: 
public class ItemMaster : DataMasterBase<ItemMaster, ItemEntity, int> // TypeDefIndex: 7054
{
	// Fields
	private int qpId; // 0x44
	private int manaId; // 0x48
	private int rarePriId; // 0x4C
	private int friendPointId; // 0x50
	private int stoneId; // 0x54
	private int stoneFragmentsId; // 0x58
	private int anonymousId; // 0x5C
	[CompilerGeneratedAttribute] // RVA: 0xCC1A28 Offset: 0xCC1A28 VA: 0xCC1A28
	private static Comparison<ItemEntity> <>f__am$cache0; // 0x0

	// Properties
	public int StoneFragments { get; }
	public int Anonymous { get; }

	// Methods

	// RVA: 0x171FF48 Offset: 0x171FF48 VA: 0x171FF48
	public void .ctor() { }

	// RVA: 0x171FF9C Offset: 0x171FF9C VA: 0x171FF9C Slot: 6
	public override bool preProcess() { }

	// RVA: 0x17201F4 Offset: 0x17201F4 VA: 0x17201F4
	public ItemEntity getEntityFromId(int id) { }

	// RVA: 0x17202F4 Offset: 0x17202F4 VA: 0x17202F4
	public ItemEntity[] GetEntityList(ItemType.Type itemType) { }

	// RVA: 0x17204B8 Offset: 0x17204B8 VA: 0x17204B8
	public ItemEntity GetEntityByType(ItemType.Type itemType) { }

	// RVA: 0x17205C4 Offset: 0x17205C4 VA: 0x17205C4
	public List<ItemEntity> GetEntityListByType(ItemType.Type itemType) { }

	// RVA: 0x1720828 Offset: 0x1720828 VA: 0x1720828
	public ItemEntity GetItemData(int itemId) { }

	// RVA: 0x1720860 Offset: 0x1720860 VA: 0x1720860
	public ItemEntity GetTimeLimitAfterItemData(int itemId, bool reboot = False) { }

	// RVA: 0x1720904 Offset: 0x1720904 VA: 0x1720904
	public ItemEntity GetEventPoint(int eventId) { }

	// RVA: 0x1720A08 Offset: 0x1720A08 VA: 0x1720A08
	public int[] GetBoostItemList(EventUpValSetupInfo setupInfo) { }

	// RVA: 0x1720D28 Offset: 0x1720D28 VA: 0x1720D28
	public ItemEntity[] GetIndividualityList(int individuality) { }

	// RVA: 0x1720F4C Offset: 0x1720F4C VA: 0x1720F4C
	public ItemEntity[] GetIndividualityList(int[] individualityList) { }

	// RVA: 0x1721180 Offset: 0x1721180 VA: 0x1721180
	public bool isQP(int id) { }

	// RVA: 0x1721190 Offset: 0x1721190 VA: 0x1721190
	public bool isMana(int id) { }

	// RVA: 0x17211A0 Offset: 0x17211A0 VA: 0x17211A0
	public bool isRarePri(int id) { }

	// RVA: 0x17211B0 Offset: 0x17211B0 VA: 0x17211B0
	public bool isFriendPoint(int id) { }

	// RVA: 0x17211C0 Offset: 0x17211C0 VA: 0x17211C0
	public bool isStone(int id) { }

	// RVA: 0x17211D0 Offset: 0x17211D0 VA: 0x17211D0
	public bool isStoneFragments(int id) { }

	// RVA: 0x17211E0 Offset: 0x17211E0 VA: 0x17211E0
	public bool isAnonymous(int id) { }

	// RVA: 0x17211F0 Offset: 0x17211F0 VA: 0x17211F0
	public bool isEventPoint(int id) { }

	// RVA: 0x1721224 Offset: 0x1721224 VA: 0x1721224
	public int get_StoneFragments() { }

	// RVA: 0x172122C Offset: 0x172122C VA: 0x172122C
	public int get_Anonymous() { }

	[CompilerGeneratedAttribute] // RVA: 0xD37BFC Offset: 0xD37BFC VA: 0xD37BFC
	// RVA: 0x1721234 Offset: 0x1721234 VA: 0x1721234
	private static int <GetBoostItemList>m__0(ItemEntity a, ItemEntity b) { }
}

// Namespace: 
public class ItemSelectEntity : DataEntityBase<string> // TypeDefIndex: 7055
{
	// Fields
	public int itemId; // 0x10
	public int idx; // 0x14
	public int candidateGiftId; // 0x18
	public int requireNum; // 0x1C
	public string detail; // 0x20

	// Methods

	// RVA: 0x1721D10 Offset: 0x1721D10 VA: 0x1721D10
	public void .ctor() { }

	// RVA: 0x1721D60 Offset: 0x1721D60 VA: 0x1721D60 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1721D70 Offset: 0x1721D70 VA: 0x1721D70
	public static string CreatePK(int itemId, int idx) { }

	// RVA: 0x1721D80 Offset: 0x1721D80 VA: 0x1721D80
	public GiftEntity[] GetGiftData() { }
}

// Namespace: 
public class ItemSelectMaster : DataMasterBase<ItemSelectMaster, ItemSelectEntity, string> // TypeDefIndex: 7056
{
	// Methods

	// RVA: 0x1721E10 Offset: 0x1721E10 VA: 0x1721E10
	public void .ctor() { }

	// RVA: 0x1721E64 Offset: 0x1721E64 VA: 0x1721E64
	public ItemSelectEntity GetEntity(int itemId, int idx) { }

	// RVA: 0x1721ED8 Offset: 0x1721ED8 VA: 0x1721ED8
	public bool TryGetEntity(out ItemSelectEntity entity, int itemId, int idx) { }

	// RVA: 0x1721F5C Offset: 0x1721F5C VA: 0x1721F5C
	public ItemSelectEntity[] GetSelectables(int itemId) { }
}

// Namespace: 
public class LoginQuestEntity : DataEntityBase<int> // TypeDefIndex: 7057
{
	// Fields
	public int id; // 0x10
	public int priority; // 0x14
	public int questId; // 0x18
	public long startedAt; // 0x20
	public long endedAt; // 0x28

	// Methods

	// RVA: 0x1D50988 Offset: 0x1D50988 VA: 0x1D50988
	public void .ctor() { }

	// RVA: 0x1D509D8 Offset: 0x1D509D8 VA: 0x1D509D8 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1D509E0 Offset: 0x1D509E0 VA: 0x1D509E0
	public bool IsEnablePeriod(long time) { }
}

// Namespace: 
public class LoginQuestMaster : DataMasterBase<LoginQuestMaster, LoginQuestEntity, int> // TypeDefIndex: 7058
{
	// Methods

	// RVA: 0x1D50A10 Offset: 0x1D50A10 VA: 0x1D50A10
	public void .ctor() { }

	// RVA: 0x1D50A64 Offset: 0x1D50A64 VA: 0x1D50A64
	public LoginQuestEntity GetEntityByQuestId(int questId) { }
}

// Namespace: 
public class MapButtonEntity : DataEntityBase<string> // TypeDefIndex: 7059
{
	// Fields
	public int id; // 0x10
	public int priority; // 0x14
	public int targetMapId; // 0x18
	public int imageId; // 0x1C

	// Methods

	// RVA: 0x17F7C4C Offset: 0x17F7C4C VA: 0x17F7C4C
	public void .ctor() { }

	// RVA: 0x17F7C9C Offset: 0x17F7C9C VA: 0x17F7C9C
	public void .ctor(MapButtonEntity cSrc) { }

	// RVA: 0x17F7D68 Offset: 0x17F7D68 VA: 0x17F7D68 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x17F7D7C Offset: 0x17F7D7C VA: 0x17F7D7C
	public static string CreatePK(int id, int priority, int targetMapId) { }
}

// Namespace: 
public class MapButtonMaster : DataMasterBase<MapButtonMaster, MapButtonEntity, string> // TypeDefIndex: 7060
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1A38 Offset: 0xCC1A38 VA: 0xCC1A38
	private static Comparison<MapButtonEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x17F7D90 Offset: 0x17F7D90 VA: 0x17F7D90
	public void .ctor() { }

	// RVA: 0x17F7DE4 Offset: 0x17F7DE4 VA: 0x17F7DE4
	public MapButtonEntity GetEntity(int id, int priority, int targetMapId) { }

	// RVA: 0x17F7E68 Offset: 0x17F7E68 VA: 0x17F7E68
	public bool TryGetEntity(out MapButtonEntity entity, int id, int priority, int targetMapId) { }

	// RVA: 0x17F6D50 Offset: 0x17F6D50 VA: 0x17F6D50
	public MapButtonEntity[] GetOpenedButtons(MapControl.WarInfo warInf, MapControl.MapInfo mapInf) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37C0C Offset: 0xD37C0C VA: 0xD37C0C
	// RVA: 0x17F8170 Offset: 0x17F8170 VA: 0x17F8170
	private static int <GetOpenedButtons>m__0(MapButtonEntity a, MapButtonEntity b) { }
}

// Namespace: 
public class MapCondEntity : DataEntityBase<string> // TypeDefIndex: 7061
{
	// Fields
	public int id; // 0x10
	public int mapId; // 0x14
	public int priority; // 0x18
	public int changeType; // 0x1C
	public int targetId; // 0x20
	public int condType; // 0x24
	public int condTargetId; // 0x28
	public int condNum; // 0x2C

	// Methods

	// RVA: 0x17FBBA4 Offset: 0x17FBBA4 VA: 0x17FBBA4
	public void .ctor() { }

	// RVA: 0x17FBBF4 Offset: 0x17FBBF4 VA: 0x17FBBF4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x17FBC04 Offset: 0x17FBC04 VA: 0x17FBC04
	public static string CreatePK(int id, int mapId) { }

	// RVA: 0x17FBC14 Offset: 0x17FBC14 VA: 0x17FBC14
	public CondType.Kind GetCondType() { }

	// RVA: 0x17FBC1C Offset: 0x17FBC1C VA: 0x17FBC1C
	public bool IsOpen() { }

	// RVA: 0x17FBC9C Offset: 0x17FBC9C VA: 0x17FBC9C
	public bool IsCondAboutQuestClear(int questId, int phase) { }
}

// Namespace: 
public enum MapCondEntity.ChangeType // TypeDefIndex: 7062
{
	// Fields
	public int value__; // 0x0
	public const MapCondEntity.ChangeType BUTTON_DISPLAY = 1;
	public const MapCondEntity.ChangeType CHANGE_MAP_IMAGE = 2;
	public const MapCondEntity.ChangeType CHANGE_BGM = 3;
	public const MapCondEntity.ChangeType HEADER_IMAGE = 4;
	public const MapCondEntity.ChangeType ON_MAP_CAMERA_OFFSET_X = 5;
	public const MapCondEntity.ChangeType ON_MAP_CAMERA_OFFSET_Y = 6;
}

// Namespace: 
public class MapCondMaster : DataMasterBase<MapCondMaster, MapCondEntity, string> // TypeDefIndex: 7063
{
	// Methods

	// RVA: 0x17FBCF4 Offset: 0x17FBCF4 VA: 0x17FBCF4
	public void .ctor() { }

	// RVA: 0x17FBD48 Offset: 0x17FBD48 VA: 0x17FBD48
	public MapCondEntity GetEntity(int id, int mapId) { }

	// RVA: 0x17FBDBC Offset: 0x17FBDBC VA: 0x17FBDBC
	public bool TryGetEntity(out MapCondEntity entity, int id, int mapId) { }

	// RVA: 0x17FBE40 Offset: 0x17FBE40 VA: 0x17FBE40
	public int GetPrioredID(MapCondEntity.ChangeType type, int mapId, int defVal, int beforeQuest = 0, int qPhase = 0) { }

	// RVA: 0x17F7EF4 Offset: 0x17F7EF4 VA: 0x17F7EF4
	public List<int> GetAvailableButtons(int mapId) { }

	// RVA: 0x17FC08C Offset: 0x17FC08C VA: 0x17FC08C
	public bool TryGetOnMapCameraOffset(int mapId, ref Vector3 pos, int beforeQuest = 0, int qPhase = 0) { }
}

// Namespace: 
public class MapEntity : DataEntityBase<string> // TypeDefIndex: 7064
{
	// Fields
	public int id; // 0x10
	public int warId; // 0x14
	public int mapImageId; // 0x18
	public int mapImageW; // 0x1C
	public int mapImageH; // 0x20
	public int headerImageId; // 0x24
	public int bgmId; // 0x28
	public Dictionary<string, object> script; // 0x30

	// Methods

	// RVA: 0x17FF518 Offset: 0x17FF518 VA: 0x17FF518
	public void .ctor() { }

	// RVA: 0x17FF568 Offset: 0x17FF568 VA: 0x17FF568
	public void .ctor(MapEntity cSrc) { }

	// RVA: 0x17FF688 Offset: 0x17FF688 VA: 0x17FF688 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x17FF698 Offset: 0x17FF698 VA: 0x17FF698
	public static string CreatePK(int id, int warId) { }

	// RVA: 0x17FF6A8 Offset: 0x17FF6A8 VA: 0x17FF6A8
	public int GetPrioredMapImageId() { }

	// RVA: 0x17FF750 Offset: 0x17FF750 VA: 0x17FF750
	public string GetPrioredBgmName() { }

	// RVA: 0x17FF854 Offset: 0x17FF854 VA: 0x17FF854
	public int GetPrioredHeaderId(int beforeClearQuestId = 0, int questPhase = 0) { }

	// RVA: 0x17FF90C Offset: 0x17FF90C VA: 0x17FF90C
	public bool GetFirstFadeInfo(out string fadeType, out int fadeTime) { }

	// RVA: 0x17FFB74 Offset: 0x17FFB74 VA: 0x17FFB74
	public int GetReferrerMapId() { }

	// RVA: 0x17FFC70 Offset: 0x17FFC70 VA: 0x17FFC70
	public string GetOverwriteMapAssetId() { }
}

// Namespace: 
public enum MapEntity.StartType // TypeDefIndex: 7065
{
	// Fields
	public int value__; // 0x0
	public const MapEntity.StartType NONE = 1;
	public const MapEntity.StartType SCRIPT = 2;
	public const MapEntity.StartType QUEST = 4;
}

// Namespace: 
public class MapGimmickEntity : DataEntityBase<int> // TypeDefIndex: 7066
{
	// Fields
	public int id; // 0x10
	public int mapId; // 0x14
	public int imageId; // 0x18
	public int x; // 0x1C
	public int y; // 0x20
	public int depthOffset; // 0x24
	public int dispCondType; // 0x28
	public int dispTargetId; // 0x2C
	public int dispTargetValue; // 0x30
	public int dispCondType2; // 0x34
	public int dispTargetId2; // 0x38
	public int dispTargetValue2; // 0x3C
	public long startedAt; // 0x40
	public long endedAt; // 0x48
	public int scale; // 0x50
	public Dictionary<string, object> script; // 0x58
	public int actionAnimTime; // 0x60
	public int actionEffectId; // 0x64

	// Methods

	// RVA: 0x1803910 Offset: 0x1803910 VA: 0x1803910
	public void .ctor() { }

	// RVA: 0x1803960 Offset: 0x1803960 VA: 0x1803960 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1803968 Offset: 0x1803968 VA: 0x1803968
	public bool IsEnableTime(long time) { }

	// RVA: 0x180398C Offset: 0x180398C VA: 0x180398C
	public int GetMapId() { }

	// RVA: 0x1803994 Offset: 0x1803994 VA: 0x1803994
	public MapGimmickEntity.GimmickType GetScriptType() { }

	// RVA: 0x1801308 Offset: 0x1801308 VA: 0x1801308
	public bool IsEventMissionScript() { }

	// RVA: 0x180132C Offset: 0x180132C VA: 0x180132C
	public List<int> GetEventMissionIdList() { }

	// RVA: 0x180126C Offset: 0x180126C VA: 0x180126C
	public Vector3 GetTouchSize() { }

	// RVA: 0x1803B5C Offset: 0x1803B5C VA: 0x1803B5C
	public object getScriptObj(string key) { }

	// RVA: 0x1803BDC Offset: 0x1803BDC VA: 0x1803BDC
	public int getScriptIntParam(string key, int defVal = -1) { }

	// RVA: 0x1802258 Offset: 0x1802258 VA: 0x1802258
	public string GetTitleFromScript() { }

	// RVA: 0x18022A8 Offset: 0x18022A8 VA: 0x18022A8
	public string GetSubTitleFromScript() { }

	// RVA: 0x1803C54 Offset: 0x1803C54 VA: 0x1803C54
	public int GetRaidDispSpotIdFromScript() { }

	// RVA: 0x1800ED4 Offset: 0x1800ED4 VA: 0x1800ED4
	public string GetColorCodeFromScript() { }

	// RVA: 0x180121C Offset: 0x180121C VA: 0x180121C
	public int GetUseAnimFromScript() { }

	// RVA: 0x1803A90 Offset: 0x1803A90 VA: 0x1803A90
	private string GetStringFromScript(string key) { }

	// RVA: 0x18039E4 Offset: 0x18039E4 VA: 0x18039E4
	private int GetIntFromScript(string key) { }
}

// Namespace: 
public enum MapGimmickEntity.GimmickType // TypeDefIndex: 7067
{
	// Fields
	public int value__; // 0x0
	public const MapGimmickEntity.GimmickType NORMAL = 0;
	public const MapGimmickEntity.GimmickType EVENT_MISSION = 1;
}

// Namespace: 
public class MapGimmickMaster : DataMasterBase<MapGimmickMaster, MapGimmickEntity, int> // TypeDefIndex: 7068
{
	// Methods

	// RVA: 0x1803CA4 Offset: 0x1803CA4 VA: 0x1803CA4
	public void .ctor() { }

	// RVA: 0x1803CF8 Offset: 0x1803CF8 VA: 0x1803CF8
	public MapGimmickEntity[] getList(int map_id) { }
}

// Namespace: 
public class MapGimmickReleaseEntity : DataEntityBase<string> // TypeDefIndex: 7069
{
	// Fields
	public int mapGimmickId; // 0x10
	public int priority; // 0x14
	public int condType; // 0x18
	public int condTargetId; // 0x1C
	public int condNum; // 0x20
	public int condGroup; // 0x24

	// Methods

	// RVA: 0x1803E68 Offset: 0x1803E68 VA: 0x1803E68
	public void .ctor() { }

	// RVA: 0x1803EB8 Offset: 0x1803EB8 VA: 0x1803EB8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1803EC8 Offset: 0x1803EC8 VA: 0x1803EC8
	public static string CreatePK(int mapGimmickId, int priority) { }
}

// Namespace: 
public class MapGimmickReleaseMaster : DataMasterBase<MapGimmickReleaseMaster, MapGimmickReleaseEntity, string> // TypeDefIndex: 7070
{
	// Methods

	// RVA: 0x1803ED8 Offset: 0x1803ED8 VA: 0x1803ED8
	public void .ctor() { }

	// RVA: 0x1803F2C Offset: 0x1803F2C VA: 0x1803F2C
	public MapGimmickReleaseEntity GetEntity(int mapGimmickId, int priority) { }

	// RVA: 0x1803FA0 Offset: 0x1803FA0 VA: 0x1803FA0
	public bool TryGetEntity(out MapGimmickReleaseEntity entity, int mapGimmickId, int priority) { }

	// RVA: 0x1804024 Offset: 0x1804024 VA: 0x1804024
	public bool IsOpen(MapGimmickEntity mapGimmickEntity) { }
}

// Namespace: 
public class MapMaster : DataMasterBase<MapMaster, MapEntity, string> // TypeDefIndex: 7071
{
	// Fields
	public static readonly string SCRIPT_KEY_FADE_TYPE; // 0x0
	public static readonly string SCRIPT_KEY_FADE_TIME; // 0x8
	public static readonly string SCRIPT_KEY_REFERRER_MAP_ID; // 0x10
	public static readonly string SCRIPT_KEY_OVERWRITE_MAP_ASSET_ID; // 0x18

	// Methods

	// RVA: 0x1804570 Offset: 0x1804570 VA: 0x1804570
	public void .ctor() { }

	// RVA: 0x18045C4 Offset: 0x18045C4 VA: 0x18045C4
	public MapEntity GetEntity(int id, int warId) { }

	// RVA: 0x1804638 Offset: 0x1804638 VA: 0x1804638
	public bool TryGetEntity(out MapEntity entity, int id, int warId) { }

	// RVA: 0x18046BC Offset: 0x18046BC VA: 0x18046BC
	public MapEntity[] getList(int war_id) { }

	// RVA: 0x180482C Offset: 0x180482C VA: 0x180482C
	public MapEntity[] GetEntityListByMapId(int mapId) { }

	// RVA: 0x18049A4 Offset: 0x18049A4 VA: 0x18049A4
	private static void .cctor() { }
}

// Namespace: 
public class MaterialFolderEntity : DataEntityBase<int> // TypeDefIndex: 7072
{
	// Fields
	public int id; // 0x10
	public int priority; // 0x14
	public string name; // 0x18
	public int eventId; // 0x20
	public int condQuestId; // 0x24

	// Methods

	// RVA: 0x1BB9218 Offset: 0x1BB9218 VA: 0x1BB9218
	public void .ctor() { }

	// RVA: 0x1BB9268 Offset: 0x1BB9268 VA: 0x1BB9268 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1BB9270 Offset: 0x1BB9270 VA: 0x1BB9270
	public int getQuestId() { }

	// RVA: 0x1BB9278 Offset: 0x1BB9278 VA: 0x1BB9278
	public string getQuestName() { }
}

// Namespace: 
public class MaterialFolderMaster : DataMasterBase<MaterialFolderMaster, MaterialFolderEntity, int> // TypeDefIndex: 7073
{
	// Methods

	// RVA: 0x1BB9280 Offset: 0x1BB9280 VA: 0x1BB9280
	public void .ctor() { }

	// RVA: 0x1BB92D4 Offset: 0x1BB92D4 VA: 0x1BB92D4
	public MaterialFolderEntity[] getFoldersWithEventID(int eventId) { }
}

// Namespace: 
public class MstMissionDisplayInfoEntity : DataEntityBase<int> // TypeDefIndex: 7074
{
	// Fields
	public int id; // 0x10
	public int guideImageId; // 0x14
	public string[] talkIds; // 0x18
	public int guideLimitCount; // 0x20
	public long startedAt; // 0x28
	public long endedAt; // 0x30

	// Methods

	// RVA: 0x17B3C54 Offset: 0x17B3C54 VA: 0x17B3C54
	public void .ctor() { }

	// RVA: 0x17B3CA4 Offset: 0x17B3CA4 VA: 0x17B3CA4 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x17B3CAC Offset: 0x17B3CAC VA: 0x17B3CAC
	public bool isOpenNow() { }
}

// Namespace: 
public class MstMissionDisplayInfoMaster : DataMasterBase<MstMissionDisplayInfoMaster, MstMissionDisplayInfoEntity, int> // TypeDefIndex: 7075
{
	// Methods

	// RVA: 0x17B3D38 Offset: 0x17B3D38 VA: 0x17B3D38
	public void .ctor() { }

	// RVA: 0x17B3D8C Offset: 0x17B3D8C VA: 0x17B3D8C
	public bool IsOpenNow() { }

	// RVA: 0x17B3E90 Offset: 0x17B3E90 VA: 0x17B3E90
	public bool IsBefOpenTime() { }
}

// Namespace: 
public class MstMissionEntity : DataEntityBase<int> // TypeDefIndex: 7076
{
	// Fields
	private int WEEK_TIME; // 0x10
	public int id; // 0x14
	public long startedAt; // 0x18
	public long endedAt; // 0x20
	public long closedAt; // 0x28
	public int imageId; // 0x30

	// Methods

	// RVA: 0x17B3FD0 Offset: 0x17B3FD0 VA: 0x17B3FD0
	public void .ctor() { }

	// RVA: 0x17B402C Offset: 0x17B402C VA: 0x17B402C Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x17B4034 Offset: 0x17B4034 VA: 0x17B4034
	public bool isOpenNow() { }

	// RVA: 0x17B40C0 Offset: 0x17B40C0 VA: 0x17B40C0
	public bool isActiveNow() { }

	// RVA: 0x17B414C Offset: 0x17B414C VA: 0x17B414C
	public bool hasUnarchived() { }

	// RVA: 0x17B42D0 Offset: 0x17B42D0 VA: 0x17B42D0
	public bool isWeekly() { }

	// RVA: 0x17B42E8 Offset: 0x17B42E8 VA: 0x17B42E8
	public MissionType.Type getMissionType() { }
}

// Namespace: 
public class MstMissionMaster : DataMasterBase<MstMissionMaster, MstMissionEntity, int> // TypeDefIndex: 7077
{
	// Fields
	public MstMissionMaster.CurrentType currentType; // 0x44

	// Methods

	// RVA: 0x17B43BC Offset: 0x17B43BC VA: 0x17B43BC
	public void .ctor() { }

	// RVA: 0x17B4410 Offset: 0x17B4410 VA: 0x17B4410 Slot: 6
	public override bool preProcess() { }

	// RVA: 0x17B452C Offset: 0x17B452C VA: 0x17B452C
	public MstMissionMaster.CurrentType GetCurrentType() { }

	// RVA: 0x17B4534 Offset: 0x17B4534 VA: 0x17B4534
	public MstMissionEntity[] GetEnableMissions() { }

	// RVA: 0x17B46E0 Offset: 0x17B46E0 VA: 0x17B46E0
	public MstMissionEntity[] GetEnableMissionsWithTime(out long ratestStart, out long fastestEnd) { }

	// RVA: 0x17B490C Offset: 0x17B490C VA: 0x17B490C
	public bool IsOpenNow() { }

	// RVA: 0x17B4A10 Offset: 0x17B4A10 VA: 0x17B4A10
	public bool IsBefOpenTime() { }
}

// Namespace: 
public enum MstMissionMaster.CurrentType // TypeDefIndex: 7078
{
	// Fields
	public int value__; // 0x0
	public const MstMissionMaster.CurrentType NOT_OPEN = 0;
	public const MstMissionMaster.CurrentType OPEN = 1;
	public const MstMissionMaster.CurrentType NONE_NEXT = 2;
}

// Namespace: 
public class MyRoomAddEntity : DataEntityBase<string> // TypeDefIndex: 7079
{
	// Fields
	public int id; // 0x10
	public int type; // 0x14
	public int priority; // 0x18
	public int overwriteId; // 0x1C
	public int condType; // 0x20
	public int condValue; // 0x24
	public int condValue2; // 0x28
	public long startedAt; // 0x30
	public long endedAt; // 0x38

	// Methods

	// RVA: 0x17B9D28 Offset: 0x17B9D28 VA: 0x17B9D28
	public void .ctor() { }

	// RVA: 0x17B9D78 Offset: 0x17B9D78 VA: 0x17B9D78 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x17B9D8C Offset: 0x17B9D8C VA: 0x17B9D8C
	public static string CreatePK(int id, int type, int priority) { }
}

// Namespace: 
public enum MyRoomAddEntity.OverwriteType // TypeDefIndex: 7080
{
	// Fields
	public int value__; // 0x0
	public const MyRoomAddEntity.OverwriteType BG_IMAGE = 1;
	public const MyRoomAddEntity.OverwriteType BGM = 2;
	public const MyRoomAddEntity.OverwriteType FRONT_OBJ = 6;
}

// Namespace: 
public class MyRoomAddMaster : DataMasterBase<MyRoomAddMaster, MyRoomAddEntity, string> // TypeDefIndex: 7081
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1A48 Offset: 0xCC1A48 VA: 0xCC1A48
	private static Comparison<MyRoomAddEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC1A58 Offset: 0xCC1A58 VA: 0xCC1A58
	private static Comparison<MyRoomAddEntity> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCC1A68 Offset: 0xCC1A68 VA: 0xCC1A68
	private static Comparison<MyRoomAddEntity> <>f__am$cache2; // 0x10

	// Methods

	// RVA: 0x17B9DA0 Offset: 0x17B9DA0 VA: 0x17B9DA0
	public void .ctor() { }

	// RVA: 0x17B9DF4 Offset: 0x17B9DF4 VA: 0x17B9DF4
	public MyRoomAddEntity GetEntity(int id, int type, int priority) { }

	// RVA: 0x17B9E78 Offset: 0x17B9E78 VA: 0x17B9E78
	public bool TryGetEntity(out MyRoomAddEntity entity, int id, int type, int priority) { }

	// RVA: 0x17B9F04 Offset: 0x17B9F04 VA: 0x17B9F04
	private List<MyRoomAddEntity> GetEnableEntityList(int type) { }

	// RVA: 0x17BA0B4 Offset: 0x17BA0B4 VA: 0x17BA0B4
	public int GetChangeMyRoomBgId() { }

	// RVA: 0x17BA2CC Offset: 0x17BA2CC VA: 0x17BA2CC
	public int GetChangeMyRoomBgm() { }

	// RVA: 0x17BA4E0 Offset: 0x17BA4E0 VA: 0x17BA4E0
	public int GetChangeMyRoomFrontObjId(int defaultId = -1) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37C1C Offset: 0xD37C1C VA: 0xD37C1C
	// RVA: 0x17BA6BC Offset: 0x17BA6BC VA: 0x17BA6BC
	private static int <GetChangeMyRoomBgId>m__0(MyRoomAddEntity a, MyRoomAddEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37C2C Offset: 0xD37C2C VA: 0xD37C2C
	// RVA: 0x17BA700 Offset: 0x17BA700 VA: 0x17BA700
	private static int <GetChangeMyRoomBgm>m__1(MyRoomAddEntity a, MyRoomAddEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37C3C Offset: 0xD37C3C VA: 0xD37C3C
	// RVA: 0x17BA744 Offset: 0x17BA744 VA: 0x17BA744
	private static int <GetChangeMyRoomFrontObjId>m__2(MyRoomAddEntity a, MyRoomAddEntity b) { }
}

// Namespace: 
public class NewsEntity : DataEntityBase<int> // TypeDefIndex: 7082
{
	// Fields
	public int id; // 0x10
	public string title; // 0x18
	public int type; // 0x20
	public string detail; // 0x28
	public int priority; // 0x30
	public long noticeAt; // 0x38
	public long finishedAt; // 0x40

	// Methods

	// RVA: 0x18C9BBC Offset: 0x18C9BBC VA: 0x18C9BBC
	public void .ctor() { }

