	private static Comparison<EventEntity> <>f__am$cache5; // 0x28

	// Methods

	// RVA: 0x160A53C Offset: 0x160A53C VA: 0x160A53C
	public void .ctor() { }

	// RVA: 0x160A590 Offset: 0x160A590 VA: 0x160A590
	public EventEntity getEntityFromId(int id) { }

	// RVA: 0x160A690 Offset: 0x160A690 VA: 0x160A690
	public int[] getEventIdList() { }

	// RVA: 0x160A7F0 Offset: 0x160A7F0 VA: 0x160A7F0
	public EventEntity[] GetEntityList(GameEventType.TYPE eventType) { }

	// RVA: 0x160A9B8 Offset: 0x160A9B8 VA: 0x160A9B8
	public EventEntity[] GetEnableEntityList(GameEventType.TYPE eventType, bool isFinishedAt = True) { }

	// RVA: 0x160A9C4 Offset: 0x160A9C4 VA: 0x160A9C4
	public List<EventEntity[]> GetEnableEntityLists(GameEventType.TYPE[] eventTypes, bool isFinishedAt = True) { }

	// RVA: 0x160AAD0 Offset: 0x160AAD0 VA: 0x160AAD0
	public EventEntity[] GetEnabledEntityListFromIds(GameEventType.TYPE eventType, List<int> ids, long checkTime = 0) { }

	// RVA: 0x160A7FC Offset: 0x160A7FC VA: 0x160A7FC
	private EventEntity[] GetEntityList(GameEventType.TYPE eventType, bool isOpenGet, bool isFinishedAt = True) { }

	// RVA: 0x160ACC0 Offset: 0x160ACC0 VA: 0x160ACC0
	public EventEntity[] GetFilterEnableEntityList(bool isFinishedAt = False) { }

	// RVA: 0x160B10C Offset: 0x160B10C VA: 0x160B10C
	public int GetPointEventImageId(int eventId) { }

	// RVA: 0x160B1C0 Offset: 0x160B1C0 VA: 0x160B1C0
	public int GetRaidEventImageId(int eventId) { }

	// RVA: 0x160B274 Offset: 0x160B274 VA: 0x160B274
	public int getMyRoomBgImgId() { }

	// RVA: 0x160B3AC Offset: 0x160B3AC VA: 0x160B3AC
	public int getMyRoomBgmId() { }

	// RVA: 0x160B580 Offset: 0x160B580 VA: 0x160B580
	public List<EventEntity> GetSortedEntityList(GameEventType.TYPE[] types) { }

	// RVA: 0x160B740 Offset: 0x160B740 VA: 0x160B740
	public int GetRaidEnableEventId() { }

	// RVA: 0x160B888 Offset: 0x160B888 VA: 0x160B888
	public bool IsRaidEnable() { }

	// RVA: 0x160B8A4 Offset: 0x160B8A4 VA: 0x160B8A4
	public int GetBPEnableEventId() { }

	// RVA: 0x160B9EC Offset: 0x160B9EC VA: 0x160B9EC
	public bool IsBPEnable() { }

	// RVA: 0x160BBEC Offset: 0x160BBEC VA: 0x160BBEC
	public bool IsBPNotification(long checkTime) { }

	// RVA: 0x160BC54 Offset: 0x160BC54 VA: 0x160BC54
	public int[] GetEventValUpEventIdList(bool isFinish = False) { }

	// RVA: 0x160BE48 Offset: 0x160BE48 VA: 0x160BE48
	public bool IsEnableDetailFlag(EventDetailEntity.Flag flag) { }

	// RVA: 0x160C008 Offset: 0x160C008 VA: 0x160C008
	public string GetEventName(int eventId) { }

	// RVA: 0x160C0FC Offset: 0x160C0FC VA: 0x160C0FC
	public string GetEventShortName(int eventId) { }

	// RVA: 0x160C1F0 Offset: 0x160C1F0 VA: 0x160C1F0
	public EventEntity[] GetOpenedEventEntityList() { }

	// RVA: 0x160C770 Offset: 0x160C770 VA: 0x160C770
	public bool IsEnableEventShop() { }

	// RVA: 0x160CA1C Offset: 0x160CA1C VA: 0x160CA1C
	public EventEntity[] GetEnableExistEventRewardEntityList() { }

	// RVA: 0x160CC54 Offset: 0x160CC54 VA: 0x160CC54
	public bool IsEnableFatigueEvent(out int eventId) { }

	// RVA: 0x160CE1C Offset: 0x160CE1C VA: 0x160CE1C
	public List<EventEntity> GetCombineCostumeItemEventList() { }

	// RVA: 0x160CF64 Offset: 0x160CF64 VA: 0x160CF64
	public bool IsEnableEvent(int eventId, GameEventType.TYPE eventType = 0) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA1C8 Offset: 0xCCA1C8 VA: 0xCCA1C8
	// RVA: 0x160CFB0 Offset: 0x160CFB0 VA: 0x160CFB0
	private static int <GetFilterEnableEntityList>m__0(EventEntity a, EventEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA1D8 Offset: 0xCCA1D8 VA: 0xCCA1D8
	// RVA: 0x160CFF0 Offset: 0x160CFF0 VA: 0x160CFF0
	private static int <GetFilterEnableEntityList>m__1(EventEntity a, EventEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA1E8 Offset: 0xCCA1E8 VA: 0xCCA1E8
	// RVA: 0x160D030 Offset: 0x160D030 VA: 0x160D030
	private static int <GetSortedEntityList>m__2(EventEntity a, EventEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA1F8 Offset: 0xCCA1F8 VA: 0xCCA1F8
	// RVA: 0x160D0EC Offset: 0x160D0EC VA: 0x160D0EC
	private static int <GetOpenedEventEntityList>m__3(EventEntity a, EventEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA208 Offset: 0xCCA208 VA: 0xCCA208
	// RVA: 0x160D154 Offset: 0x160D154 VA: 0x160D154
	private static int <GetOpenedEventEntityList>m__4(EventEntity a, EventEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA218 Offset: 0xCCA218 VA: 0xCCA218
	// RVA: 0x160D18C Offset: 0x160D18C VA: 0x160D18C
	private static int <GetOpenedEventEntityList>m__5(EventEntity a, EventEntity b) { }
}

// Namespace: 
public class EventMissionActionAddEntity : DataEntityBase<string> // TypeDefIndex: 6886
{
	// Fields
	public int missionId; // 0x10
	public int missionProgressType; // 0x14
	public int id; // 0x18
	public int priority; // 0x1C
	public int commonReleaseId; // 0x20
	public int missionActionType; // 0x24
	public string[] vals; // 0x28
	public int optionId; // 0x30

	// Methods

	// RVA: 0x160DB58 Offset: 0x160DB58 VA: 0x160DB58
	public void .ctor() { }

	// RVA: 0x160DBA8 Offset: 0x160DBA8 VA: 0x160DBA8 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x160DBBC Offset: 0x160DBBC VA: 0x160DBBC
	public static string CreatePK(int missionId, int missionProgressType, int id) { }

	// RVA: 0x160DBD0 Offset: 0x160DBD0 VA: 0x160DBD0
	public ActionType.Type GetMissionActionType() { }

	// RVA: 0x160DBD8 Offset: 0x160DBD8 VA: 0x160DBD8
	public bool isSafeType() { }
}

// Namespace: 
public class EventMissionActionAddMaster : DataMasterBase<EventMissionActionAddMaster, EventMissionActionAddEntity, string> // TypeDefIndex: 6887
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55834 Offset: 0xC55834 VA: 0xC55834
	private static Comparison<EventMissionActionAddEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC55844 Offset: 0xC55844 VA: 0xC55844
	private static Comparison<EventMissionActionAddEntity> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x160DBE8 Offset: 0x160DBE8 VA: 0x160DBE8
	public void .ctor() { }

	// RVA: 0x160DC3C Offset: 0x160DC3C VA: 0x160DC3C
	public EventMissionActionAddEntity GetEntity(int missionId, int missionProgressType, int id) { }

	// RVA: 0x160DCC0 Offset: 0x160DCC0 VA: 0x160DCC0
	public bool TryGetEntity(out EventMissionActionAddEntity entity, int missionId, int missionProgressType, int id) { }

	// RVA: 0x160DD4C Offset: 0x160DD4C VA: 0x160DD4C
	public EventMissionActionAddEntity GetEntityFromId(int missionId, int missionProgressType, int id) { }

	// RVA: 0x160E040 Offset: 0x160E040 VA: 0x160E040
	public EventMissionActionAddEntity GetEntityFromIdProgressTypeAndActionType(int missionID, MissionProgressType.Type progressType, ActionType.Type actionType) { }

	// RVA: 0x160E204 Offset: 0x160E204 VA: 0x160E204
	public List<EventMissionActionAddEntity> GetEntityListFromIdProgressTypeAndActionType(int missionID, MissionProgressType.Type progressType, ActionType.Type actionType) { }

	// RVA: 0x160E41C Offset: 0x160E41C VA: 0x160E41C
	public List<EventMissionActionAddEntity> GetEntityListFromIDnType(int missionID, MissionProgressType.Type progressType) { }

	// RVA: 0x160E69C Offset: 0x160E69C VA: 0x160E69C
	public List<EventMissionActionAddEntity> GetSafeActionListFromIDnType(int missionID, MissionProgressType.Type progressType) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA228 Offset: 0xCCA228 VA: 0xCCA228
	// RVA: 0x160E924 Offset: 0x160E924 VA: 0x160E924
	private static int <GetEntityListFromIDnType>m__0(EventMissionActionAddEntity a, EventMissionActionAddEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA238 Offset: 0xCCA238 VA: 0xCCA238
	// RVA: 0x160E964 Offset: 0x160E964 VA: 0x160E964
	private static int <GetSafeActionListFromIDnType>m__1(EventMissionActionAddEntity a, EventMissionActionAddEntity b) { }
}

// Namespace: 
public class EventMissionActionEntity : DataEntityBase<string> // TypeDefIndex: 6888
{
	// Fields
	public int missionId; // 0x10
	public int missionProgressType; // 0x14
	public int id; // 0x18
	public int missionActionType; // 0x1C
	public string[] vals; // 0x20
	public int optionId; // 0x28

	// Methods

	// RVA: 0x160E9A4 Offset: 0x160E9A4 VA: 0x160E9A4
	public void .ctor() { }

	// RVA: 0x160E9F4 Offset: 0x160E9F4 VA: 0x160E9F4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x160EA08 Offset: 0x160EA08 VA: 0x160EA08
	public static string CreatePK(int missionId, int missionProgressType, int id) { }

	// RVA: 0x160EA1C Offset: 0x160EA1C VA: 0x160EA1C
	public ActionType.Type GetMissionActionType() { }

	// RVA: 0x160EA24 Offset: 0x160EA24 VA: 0x160EA24
	public bool isSafeType() { }
}

// Namespace: 
public class EventMissionActionMaster : DataMasterBase<EventMissionActionMaster, EventMissionActionEntity, string> // TypeDefIndex: 6889
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55854 Offset: 0xC55854 VA: 0xC55854
	private static Comparison<EventMissionActionEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC55864 Offset: 0xC55864 VA: 0xC55864
	private static Comparison<EventMissionActionEntity> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x160EC0C Offset: 0x160EC0C VA: 0x160EC0C
	public void .ctor() { }

	// RVA: 0x160EC60 Offset: 0x160EC60 VA: 0x160EC60
	public EventMissionActionEntity GetEntity(int missionId, int missionProgressType, int id) { }

	// RVA: 0x160ECE4 Offset: 0x160ECE4 VA: 0x160ECE4
	public bool TryGetEntity(out EventMissionActionEntity entity, int missionId, int missionProgressType, int id) { }

	// RVA: 0x160ED70 Offset: 0x160ED70 VA: 0x160ED70
	public EventMissionActionEntity getEntityFromId(int missionId, int missionProgressType, int id) { }

	// RVA: 0x160F064 Offset: 0x160F064 VA: 0x160F064
	public EventMissionActionEntity getEntityFromIdProgressTypeAndActionType(int missionID, MissionProgressType.Type progressType, ActionType.Type actionType) { }

	// RVA: 0x160F198 Offset: 0x160F198 VA: 0x160F198
	public List<EventMissionActionEntity> getEntityListFromIdProgressTypeAndActionType(int missionID, MissionProgressType.Type progressType, ActionType.Type actionType) { }

	// RVA: 0x160F32C Offset: 0x160F32C VA: 0x160F32C
	public List<EventMissionActionEntity> getEntityListFromIDnType(int missionID, MissionProgressType.Type progressType) { }

	// RVA: 0x160F538 Offset: 0x160F538 VA: 0x160F538
	public List<EventMissionActionEntity> getSafeActionListFromIDnType(int missionID, MissionProgressType.Type progressType) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA248 Offset: 0xCCA248 VA: 0xCCA248
	// RVA: 0x160F74C Offset: 0x160F74C VA: 0x160F74C
	private static int <getEntityListFromIDnType>m__0(EventMissionActionEntity a, EventMissionActionEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA258 Offset: 0xCCA258 VA: 0xCCA258
	// RVA: 0x160F78C Offset: 0x160F78C VA: 0x160F78C
	private static int <getSafeActionListFromIDnType>m__1(EventMissionActionEntity a, EventMissionActionEntity b) { }
}

// Namespace: 
public class EventMissionAddEntity : DataEntityBase<string> // TypeDefIndex: 6890
{
	// Fields
	public int missionId; // 0x10
	public int priority; // 0x14
	public int missionTargetId; // 0x18
	public int condType; // 0x1C
	public int condTargetId; // 0x20
	public int condNum; // 0x24
	public int changeType; // 0x28
	public int changeValue; // 0x2C
	public string changeText; // 0x30

	// Methods

	// RVA: 0x160F7D4 Offset: 0x160F7D4 VA: 0x160F7D4
	public void .ctor() { }

	// RVA: 0x160F824 Offset: 0x160F824 VA: 0x160F824 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x160F834 Offset: 0x160F834 VA: 0x160F834
	public static string CreatePK(int missionId, int priority) { }
}

// Namespace: 
public class EventMissionAddMaster : DataMasterBase<EventMissionAddMaster, EventMissionAddEntity, string> // TypeDefIndex: 6891
{
	// Methods

	// RVA: 0x160F844 Offset: 0x160F844 VA: 0x160F844
	public void .ctor() { }

	// RVA: 0x160F898 Offset: 0x160F898 VA: 0x160F898
	public EventMissionAddEntity GetEntity(int missionId, int priority) { }

	// RVA: 0x160F90C Offset: 0x160F90C VA: 0x160F90C
	public bool TryGetEntity(out EventMissionAddEntity entity, int missionId, int priority) { }

	// RVA: 0x160F990 Offset: 0x160F990 VA: 0x160F990
	public List<EventMissionAddEntity> getEventMissionAddList(int eventId, int missionId) { }
}

// Namespace: 
public class EventMissionCondDetailEntity : DataEntityBase<int> // TypeDefIndex: 6892
{
	// Fields
	public int id; // 0x10
	public int missionTargetId; // 0x14
	public int missionCondType; // 0x18
	public int logicType; // 0x1C
	public int[] targetIds; // 0x20
	public int[] addTargetIds; // 0x28
	public int[] targetQuestIndividualities; // 0x30
	public int conditionLinkType; // 0x38
	public int[] targetEventIds; // 0x40

	// Methods

	// RVA: 0x160FDD0 Offset: 0x160FDD0 VA: 0x160FDD0
	public void .ctor() { }

	// RVA: 0x160FE20 Offset: 0x160FE20 VA: 0x160FE20 Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class EventMissionCondDetailMaster : DataMasterBase<EventMissionCondDetailMaster, EventMissionCondDetailEntity, int> // TypeDefIndex: 6893
{
	// Methods

	// RVA: 0x160FE28 Offset: 0x160FE28 VA: 0x160FE28
	public void .ctor() { }

	// RVA: 0x160FE7C Offset: 0x160FE7C VA: 0x160FE7C
	public List<EventMissionCondDetailEntity> getEntitiesFromMissionTargetId(int missionTargetId) { }

	// RVA: 0x1610088 Offset: 0x1610088 VA: 0x1610088
	public List<EventMissionCondDetailEntity> GetMissionConditionDetailListFromMissionTargetId(int missionId) { }
}

// Namespace: 
public class EventMissionConditionEntity : DataEntityBase<string> // TypeDefIndex: 6894
{
	// Fields
	public int missionId; // 0x10
	public int missionProgressType; // 0x14
	public int priority; // 0x18
	public int id; // 0x1C
	public int missionTargetId; // 0x20
	public int condGroup; // 0x24
	public int condType; // 0x28
	public int[] targetIds; // 0x30
	public long targetNum; // 0x38
	public string conditionMessage; // 0x40
	public string closedMessage; // 0x48
	public int flag; // 0x50

	// Methods

	// RVA: 0x16102F4 Offset: 0x16102F4 VA: 0x16102F4
	public void .ctor() { }

	// RVA: 0x1610344 Offset: 0x1610344 VA: 0x1610344 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1610358 Offset: 0x1610358 VA: 0x1610358
	public static string CreatePK(int missionId, int missionProgressType, int id) { }

	// RVA: 0x161036C Offset: 0x161036C VA: 0x161036C
	public bool getMissionProgress() { }

	// RVA: 0x16109C8 Offset: 0x16109C8 VA: 0x16109C8
	private long GetProgNum() { }

	// RVA: 0x1610678 Offset: 0x1610678 VA: 0x1610678
	private bool GetUserEventMissionFixProgress(UserEventMissionFixEntity entity) { }

	// RVA: 0x1610CFC Offset: 0x1610CFC VA: 0x1610CFC
	public long getProgressNum() { }

	// RVA: 0x1610B74 Offset: 0x1610B74 VA: 0x1610B74
	private bool MissionTypeORCond() { }

	// RVA: 0x1610BA0 Offset: 0x1610BA0 VA: 0x1610BA0
	private long GetMaxProgNum() { }

	// RVA: 0x1610E2C Offset: 0x1610E2C VA: 0x1610E2C
	public int getProgressNumByDateType() { }

	// RVA: 0x1610E98 Offset: 0x1610E98 VA: 0x1610E98
	public bool isQuestClear() { }

	// RVA: 0x1610F90 Offset: 0x1610F90 VA: 0x1610F90
	public bool isMissionClear() { }

	// RVA: 0x1611080 Offset: 0x1611080 VA: 0x1611080
	public bool HasFlag(EventMissionConditionEntity.Flag flag) { }

	// RVA: 0x16105C8 Offset: 0x16105C8 VA: 0x16105C8
	private bool IsIgnoreStartCondition() { }

	// RVA: 0x161070C Offset: 0x161070C VA: 0x161070C
	private bool IsNotActiveDailyMission() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA268 Offset: 0xCCA268 VA: 0xCCA268
	// RVA: 0x1611090 Offset: 0x1611090 VA: 0x1611090
	private bool <IsNotActiveDailyMission>m__0(EventMissionConditionEntity ent) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA278 Offset: 0xCCA278 VA: 0xCCA278
	// RVA: 0x16110CC Offset: 0x16110CC VA: 0x16110CC
	private bool <IsNotActiveDailyMission>m__1(UserEventMissionEntity target) { }
}

// Namespace: 
public enum EventMissionConditionEntity.Flag // TypeDefIndex: 6895
{
	// Fields
	public int value__; // 0x0
	public const EventMissionConditionEntity.Flag NONE = 1;
	public const EventMissionConditionEntity.Flag NO_DISPLAY_NOTIFY_BATTLE_OPEN = 2;
	public const EventMissionConditionEntity.Flag NO_DISPLAY_NOTIFY_BATTLE_START = 4;
	public const EventMissionConditionEntity.Flag NO_DISPLAY_NOTIFY_BATTLE_PROGRESS = 8;
	public const EventMissionConditionEntity.Flag NO_DISPLAY_NOTIFY_BATTLE_CLEAR = 16;
	public const EventMissionConditionEntity.Flag UNLOCK_COND_TEXT_COLOR_CHANGE = 64;
}

// Namespace: 
public class EventMissionConditionMaster : DataMasterBase<EventMissionConditionMaster, EventMissionConditionEntity, string> // TypeDefIndex: 6896
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55874 Offset: 0xC55874 VA: 0xC55874
	private static Comparison<EventMissionConditionEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC55884 Offset: 0xC55884 VA: 0xC55884
	private static Comparison<EventMissionConditionEntity> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x196E228 Offset: 0x196E228 VA: 0x196E228
	public void .ctor() { }

	// RVA: 0x196E27C Offset: 0x196E27C VA: 0x196E27C
	public EventMissionConditionEntity GetEntity(int missionId, int missionProgressType, int id) { }

	// RVA: 0x196E300 Offset: 0x196E300 VA: 0x196E300
	public bool TryGetEntity(out EventMissionConditionEntity entity, int missionId, int missionProgressType, int id) { }

	// RVA: 0x196E38C Offset: 0x196E38C VA: 0x196E38C
	public EventMissionConditionEntity[] getMissionCondList(int eventId, int missionId) { }

	// RVA: 0x196E5AC Offset: 0x196E5AC VA: 0x196E5AC
	public EventMissionConditionEntity[] getMissionCondListHighPriority(int eventId, int missionId) { }

	// RVA: 0x196E754 Offset: 0x196E754 VA: 0x196E754
	public List<EventMissionConditionEntity> getMissionCondListByType(int eventId, int missionId, int type) { }

	// RVA: 0x196E87C Offset: 0x196E87C VA: 0x196E87C
	public List<int> getMissionIdListClearWithDailyOpen(int eventId, MissionType.Type missionType) { }

	// RVA: 0x196EA5C Offset: 0x196EA5C VA: 0x196EA5C
	private bool checkEventMissionCondition(EventMissionConditionEntity entity, MissionType.Type missionType) { }

	// RVA: 0x196EAF8 Offset: 0x196EAF8 VA: 0x196EAF8
	public int getTodayFirstMissionId(int eventId) { }

	// RVA: 0x196EE34 Offset: 0x196EE34 VA: 0x196EE34
	public bool IsMissionRunning(int missionId) { }

	// RVA: 0x196EFB0 Offset: 0x196EFB0 VA: 0x196EFB0
	public List<EventMissionConditionEntity> GetEntityFromTargetIdAndCondType(int targetId, int condType) { }

	// RVA: 0x196F1E4 Offset: 0x196F1E4 VA: 0x196F1E4
	public List<EventMissionConditionEntity> GetEntityListFromMissionIdAndProgressTypeAndCondType(int missionId, int progressType, int condType) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA288 Offset: 0xCCA288 VA: 0xCCA288
	// RVA: 0x196F440 Offset: 0x196F440 VA: 0x196F440
	private static int <getMissionCondList>m__0(EventMissionConditionEntity a, EventMissionConditionEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA298 Offset: 0xCCA298 VA: 0xCCA298
	// RVA: 0x196F480 Offset: 0x196F480 VA: 0x196F480
	private static int <getTodayFirstMissionId>m__1(EventMissionConditionEntity a, EventMissionConditionEntity b) { }
}

// Namespace: 
public class EventMissionEntity : DataEntityBase<int> // TypeDefIndex: 6897
{
	// Fields
	public int id; // 0x10
	public int flag; // 0x14
	public int type; // 0x18
	public int missionTargetId; // 0x1C
	public int dispNo; // 0x20
	public string name; // 0x28
	public string detail; // 0x30
	public long startedAt; // 0x38
	public long endedAt; // 0x40
	public long closedAt; // 0x48
	public int rewardType; // 0x50
	public int giftId; // 0x54
	public int bannerGroup; // 0x58
	public int priority; // 0x5C
	public int rewardRarity; // 0x60

	// Methods

	// RVA: 0x196F4C0 Offset: 0x196F4C0 VA: 0x196F4C0
	public void .ctor() { }

	// RVA: 0x196F510 Offset: 0x196F510 VA: 0x196F510 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x196F518 Offset: 0x196F518 VA: 0x196F518
	public GiftEntity[] getGiftData() { }

	// RVA: 0x196F710 Offset: 0x196F710 VA: 0x196F710
	public EventRewardSetEntity getSetRewardData() { }

	// RVA: 0x196F7B4 Offset: 0x196F7B4 VA: 0x196F7B4
	public bool isNowMission() { }

	// RVA: 0x196F83C Offset: 0x196F83C VA: 0x196F83C
	public MissionType.Type GetMissionType() { }

	// RVA: 0x196F844 Offset: 0x196F844 VA: 0x196F844
	public bool IsMasterMission() { }

	// RVA: 0x196F850 Offset: 0x196F850 VA: 0x196F850
	public bool HasMissionFlag(EventMissionEntity.MissionFlag missionFlag) { }

	// RVA: 0x196F860 Offset: 0x196F860 VA: 0x196F860
	public bool IsHideReward() { }

	// RVA: 0x196F86C Offset: 0x196F86C VA: 0x196F86C
	public bool IsIgnoreStartCondition() { }

	// RVA: 0x196F878 Offset: 0x196F878 VA: 0x196F878
	public bool IsDirectReward() { }

	// RVA: 0x196F884 Offset: 0x196F884 VA: 0x196F884
	public bool IsDaily() { }
}

// Namespace: 
public enum EventMissionEntity.MissionFlag // TypeDefIndex: 6898
{
	// Fields
	public int value__; // 0x0
	public const EventMissionEntity.MissionFlag NONE = 1;
	public const EventMissionEntity.MissionFlag CLOSED_HIDE_REWARD = 2;
	public const EventMissionEntity.MissionFlag IGNORE_START_CONDITION = 8;
	public const EventMissionEntity.MissionFlag IS_DIRECT_REWARD = 16;
	public const EventMissionEntity.MissionFlag IS_DAILY = 32;
}

// Namespace: 
public class EventMissionMaster : DataMasterBase<EventMissionMaster, EventMissionEntity, int> // TypeDefIndex: 6899
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55894 Offset: 0xC55894 VA: 0xC55894
	private static Comparison<EventMissionEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC558A4 Offset: 0xC558A4 VA: 0xC558A4
	private static Comparison<EventMissionEntity> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC558B4 Offset: 0xC558B4 VA: 0xC558B4
	private static Comparison<EventMissionEntity> <>f__am$cache2; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC558C4 Offset: 0xC558C4 VA: 0xC558C4
	private static Comparison<EventMissionEntity> <>f__am$cache3; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC558D4 Offset: 0xC558D4 VA: 0xC558D4
	private static Comparison<EventMissionEntity> <>f__am$cache4; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC558E4 Offset: 0xC558E4 VA: 0xC558E4
	private static Comparison<EventMissionEntity> <>f__am$cache5; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC558F4 Offset: 0xC558F4 VA: 0xC558F4
	private static Comparison<EventMissionEntity> <>f__am$cache6; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC55904 Offset: 0xC55904 VA: 0xC55904
	private static Func<EventMissionConditionEntity, int> <>f__am$cache7; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC55914 Offset: 0xC55914 VA: 0xC55914
	private static Comparison<EventMissionEntity> <>f__am$cache8; // 0x40

	// Methods

	// RVA: 0x1977F30 Offset: 0x1977F30 VA: 0x1977F30
	public void .ctor() { }

	// RVA: 0x1977F84 Offset: 0x1977F84 VA: 0x1977F84
	public EventMissionEntity[] getEventMissionList(int eventId) { }

	// RVA: 0x19781EC Offset: 0x19781EC VA: 0x19781EC
	public EventMissionEntity[] getEventMissionList(List<int> idList) { }

	// RVA: 0x1978454 Offset: 0x1978454 VA: 0x1978454
	public int[] getMissionIdListByEvent(int eventId) { }

	// RVA: 0x197861C Offset: 0x197861C VA: 0x197861C
	public EventMissionEntity[] getCompleteMissionList(int eventId) { }

	// RVA: 0x1978880 Offset: 0x1978880 VA: 0x1978880
	public List<int> getAchivePanelNum(List<EventMissionEntity> missionData) { }

	// RVA: 0x1978B20 Offset: 0x1978B20 VA: 0x1978B20
	public bool isActiveCompMission() { }

	// RVA: 0x1978C34 Offset: 0x1978C34 VA: 0x1978C34
	public EventMissionEntity[] getDailyMasterMissionList(int eventId) { }

	// RVA: 0x1978E98 Offset: 0x1978E98 VA: 0x1978E98
	public EventMissionEntity[] getWeeklyMasterMissionList(int eventId) { }

	// RVA: 0x197933C Offset: 0x197933C VA: 0x197933C
	public List<EventMissionEntity> getExtraMissionList(int eventId) { }

	// RVA: 0x19796A4 Offset: 0x19796A4 VA: 0x19796A4
	public List<EventMissionEntity> getLimitedMissionList(int eventId) { }

	// RVA: 0x19798D8 Offset: 0x19798D8 VA: 0x19798D8
	public MissionType.Type getMissionType(int eventId) { }

	// RVA: 0x1979A64 Offset: 0x1979A64 VA: 0x1979A64
	public EventMissionEntity[] getClearMasterMissionList(int eventId, MissionType.Type missionType = 2) { }

	// RVA: 0x197A070 Offset: 0x197A070 VA: 0x197A070
	public int getDailyEventMissionNum(int eventId) { }

	// RVA: 0x197A244 Offset: 0x197A244 VA: 0x197A244
	public EventMissionEntity getTargetEventMissionEntity(int eventId, int targetMissionId) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA2A8 Offset: 0xCCA2A8 VA: 0xCCA2A8
	// RVA: 0x197A3AC Offset: 0x197A3AC VA: 0x197A3AC
	private static int <getEventMissionList>m__0(EventMissionEntity a, EventMissionEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA2B8 Offset: 0xCCA2B8 VA: 0xCCA2B8
	// RVA: 0x197A3EC Offset: 0x197A3EC VA: 0x197A3EC
	private static int <getEventMissionList>m__1(EventMissionEntity a, EventMissionEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA2C8 Offset: 0xCCA2C8 VA: 0xCCA2C8
	// RVA: 0x197A42C Offset: 0x197A42C VA: 0x197A42C
	private static int <getCompleteMissionList>m__2(EventMissionEntity a, EventMissionEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA2D8 Offset: 0xCCA2D8 VA: 0xCCA2D8
	// RVA: 0x197A46C Offset: 0x197A46C VA: 0x197A46C
	private static int <getDailyMasterMissionList>m__3(EventMissionEntity a, EventMissionEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA2E8 Offset: 0xCCA2E8 VA: 0xCCA2E8
	// RVA: 0x197A4AC Offset: 0x197A4AC VA: 0x197A4AC
	private static int <getWeeklyMasterMissionList>m__4(EventMissionEntity a, EventMissionEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA2F8 Offset: 0xCCA2F8 VA: 0xCCA2F8
	// RVA: 0x197A4EC Offset: 0x197A4EC VA: 0x197A4EC
	private static int <getExtraMissionList>m__5(EventMissionEntity a, EventMissionEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA308 Offset: 0xCCA308 VA: 0xCCA308
	// RVA: 0x197A52C Offset: 0x197A52C VA: 0x197A52C
	private static int <getLimitedMissionList>m__6(EventMissionEntity a, EventMissionEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA318 Offset: 0xCCA318 VA: 0xCCA318
	// RVA: 0x197A56C Offset: 0x197A56C VA: 0x197A56C
	private static int <getClearMasterMissionList>m__7(EventMissionConditionEntity value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA328 Offset: 0xCCA328 VA: 0xCCA328
	// RVA: 0x197A594 Offset: 0x197A594 VA: 0x197A594
	private static int <getClearMasterMissionList>m__8(EventMissionEntity a, EventMissionEntity b) { }
}

// Namespace: 
public class EventPanelMapDetailEntity : DataEntityBase<int> // TypeDefIndex: 6900
{
	// Fields
	public int id; // 0x10
	public int mapId; // 0x14
	public int eventId; // 0x18
	public int idxX; // 0x1C
	public int idxY; // 0x20
	public int x; // 0x24
	public int y; // 0x28
	public int flag; // 0x2C
	public int spotGroupId; // 0x30
	public int commonReleaseId; // 0x34

	// Properties
	public EventPanelMapDetailEntity.EventPanelMapDetailFlag panelDetailFlag { get; }

	// Methods

	// RVA: 0x197B5B4 Offset: 0x197B5B4 VA: 0x197B5B4
	public void .ctor() { }

	// RVA: 0x197B604 Offset: 0x197B604 VA: 0x197B604
	public EventPanelMapDetailEntity.EventPanelMapDetailFlag get_panelDetailFlag() { }

	// RVA: 0x197B60C Offset: 0x197B60C VA: 0x197B60C Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x197B614 Offset: 0x197B614 VA: 0x197B614
	public bool IsStartScan() { }
}

// Namespace: 
public enum EventPanelMapDetailEntity.EventPanelMapDetailFlag // TypeDefIndex: 6901
{
	// Fields
	public int value__; // 0x0
	public const EventPanelMapDetailEntity.EventPanelMapDetailFlag START_SCAN = 1;
	public const EventPanelMapDetailEntity.EventPanelMapDetailFlag IGNORE_RANDOM_SPOT = 2;
}

// Namespace: 
public class EventPanelMapDetailMaster : DataMasterBase<EventPanelMapDetailMaster, EventPanelMapDetailEntity, int> // TypeDefIndex: 6902
{
	// Methods

	// RVA: 0x197B620 Offset: 0x197B620 VA: 0x197B620
	public void .ctor() { }

	// RVA: 0x197B674 Offset: 0x197B674 VA: 0x197B674
	public EventPanelMapDetailEntity[] GetListByMapId(int mapId) { }
}

// Namespace: 
public class EventPanelMapEntity : DataEntityBase<int> // TypeDefIndex: 6903
{
	// Fields
	public int mapId; // 0x10
	public int eventId; // 0x14
	public int sizeX; // 0x18
	public int sizeY; // 0x1C
	public int startEventPoint; // 0x20
	public int endEventPoint; // 0x24

	// Methods

	// RVA: 0x197B7EC Offset: 0x197B7EC VA: 0x197B7EC
	public void .ctor() { }

	// RVA: 0x197B83C Offset: 0x197B83C VA: 0x197B83C Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class EventPanelMapMaster : DataMasterBase<EventPanelMapMaster, EventPanelMapEntity, int> // TypeDefIndex: 6904
{
	// Methods

	// RVA: 0x197B844 Offset: 0x197B844 VA: 0x197B844
	public void .ctor() { }
}

// Namespace: 
public class EventPanelScanEntity : DataEntityBase<int> // TypeDefIndex: 6905
{
	// Fields
	public int id; // 0x10
	public int eventId; // 0x14
	public string name; // 0x18
	public int iconImageId; // 0x20
	public int[][][] scanIdxListJson; // 0x28
	public int commonConsumeId; // 0x30
	public int commonReleaseId; // 0x34
	public int objectId; // 0x38

	// Properties
	public bool HasReleaseCondition { get; }

	// Methods

	// RVA: 0x197B898 Offset: 0x197B898 VA: 0x197B898
	public void .ctor() { }

	// RVA: 0x197B8E8 Offset: 0x197B8E8 VA: 0x197B8E8
	public bool get_HasReleaseCondition() { }

	// RVA: 0x197B8F8 Offset: 0x197B8F8 VA: 0x197B8F8 Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class EventPanelScanMaster : DataMasterBase<EventPanelScanMaster, EventPanelScanEntity, int> // TypeDefIndex: 6906
{
	// Methods

	// RVA: 0x197B900 Offset: 0x197B900 VA: 0x197B900
	public void .ctor() { }

	// RVA: 0x197B954 Offset: 0x197B954 VA: 0x197B954
	public EventPanelScanEntity[] GetListByEventId(int eventId) { }

	// RVA: 0x197BACC Offset: 0x197BACC VA: 0x197BACC
	public bool IsSatisfyReleaseCondition(EventPanelScanEntity entity) { }
}

// Namespace: 
public class EventPanelSpotEntity : DataEntityBase<int> // TypeDefIndex: 6907
{
	// Fields
	public int spotId; // 0x10
	public int eventId; // 0x14
	public int mapId; // 0x18
	public int type; // 0x1C
	public int panelMapDetailId; // 0x20
	public int objectId; // 0x24
	public int[] objectQuestIds; // 0x28
	public int[][] enemySizeIdxListJson; // 0x30

	// Properties
	public EventPanelSpotEntity.EventPanelSpotType eventPanelSpotType { get; }

	// Methods

	// RVA: 0x197BB88 Offset: 0x197BB88 VA: 0x197BB88
	public void .ctor() { }

	// RVA: 0x197BBD8 Offset: 0x197BBD8 VA: 0x197BBD8
	public EventPanelSpotEntity.EventPanelSpotType get_eventPanelSpotType() { }

	// RVA: 0x197BBE0 Offset: 0x197BBE0 VA: 0x197BBE0 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x197BBE8 Offset: 0x197BBE8 VA: 0x197BBE8
	public bool HasObject() { }

	// RVA: 0x197BBF8 Offset: 0x197BBF8 VA: 0x197BBF8
	public bool HasObjectQuestIds() { }

	// RVA: 0x197BC18 Offset: 0x197BC18 VA: 0x197BC18
	public bool HasEnemySize() { }

	// RVA: 0x197BC38 Offset: 0x197BC38 VA: 0x197BC38
	public bool IsNormalSpot() { }

	// RVA: 0x197BC48 Offset: 0x197BC48 VA: 0x197BC48
	public bool IsRandomSpot() { }

	// RVA: 0x197BC58 Offset: 0x197BC58 VA: 0x197BC58
	public bool IsCrossLineSpot() { }
}

// Namespace: 
public enum EventPanelSpotEntity.EventPanelSpotType // TypeDefIndex: 6908
{
	// Fields
	public int value__; // 0x0
	public const EventPanelSpotEntity.EventPanelSpotType NORMAL = 1;
	public const EventPanelSpotEntity.EventPanelSpotType RANDOM = 2;
	public const EventPanelSpotEntity.EventPanelSpotType CROSSLINE = 3;
}

// Namespace: 
public class EventPanelSpotMaster : DataMasterBase<EventPanelSpotMaster, EventPanelSpotEntity, int> // TypeDefIndex: 6909
{
	// Methods

	// RVA: 0x197BC68 Offset: 0x197BC68 VA: 0x197BC68
	public void .ctor() { }

	// RVA: 0x197BCBC Offset: 0x197BCBC VA: 0x197BCBC
	public EventPanelSpotEntity[] GetEntityList(int eventId, int mapId) { }

	// RVA: 0x197BE44 Offset: 0x197BE44 VA: 0x197BE44
	public EventPanelSpotEntity[] GetEntityListFromEventId(int eventId) { }
}

// Namespace: 
public class EventPointActivityEntity : DataEntityBase<string> // TypeDefIndex: 6910
{
	// Fields
	public int eventId; // 0x10
	public int groupId; // 0x14
	public int objectType; // 0x18
	public int objectId; // 0x1C
	public long objectValue; // 0x20
	public int point; // 0x28

	// Methods

	// RVA: 0x197D6AC Offset: 0x197D6AC VA: 0x197D6AC
	public void .ctor() { }

	// RVA: 0x197D70C Offset: 0x197D70C VA: 0x197D70C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x197D724 Offset: 0x197D724 VA: 0x197D724
	public static string CreatePK(int eventId, int groupId, int objectType, int objectId, long objectValue) { }
}

// Namespace: 
public class EventPointActivityMaster : DataMasterBase<EventPointActivityMaster, EventPointActivityEntity, string> // TypeDefIndex: 6911
{
	// Methods

	// RVA: 0x197D73C Offset: 0x197D73C VA: 0x197D73C
	public void .ctor() { }

	// RVA: 0x197D790 Offset: 0x197D790 VA: 0x197D790
	public EventPointActivityEntity GetEntity(int eventId, int groupId, int objectType, int objectId, long objectValue) { }

	// RVA: 0x197D82C Offset: 0x197D82C VA: 0x197D82C
	public bool TryGetEntity(out EventPointActivityEntity entity, int eventId, int groupId, int objectType, int objectId, long objectValue) { }

	// RVA: 0x197D8D0 Offset: 0x197D8D0 VA: 0x197D8D0
	public EventPointActivityEntity[] getEntityList(int eventId) { }
}

// Namespace: 
public class EventPointBuffEntity : DataEntityBase<int> // TypeDefIndex: 6912
{
	// Fields
	public int id; // 0x10
	public int eventId; // 0x14
	public int groupId; // 0x18
	public int eventPoint; // 0x1C
	public string name; // 0x20
	public string detail; // 0x28
	public int imageId; // 0x30
	public int bgImageId; // 0x34
	public int value; // 0x38
	public int[] funcIds; // 0x40

	// Methods

	// RVA: 0x197DA88 Offset: 0x197DA88 VA: 0x197DA88
	public void .ctor() { }

	// RVA: 0x197DB38 Offset: 0x197DB38 VA: 0x197DB38
	public void .ctor(EventPointBuffEntity cSrc) { }

	// RVA: 0x197DCAC Offset: 0x197DCAC VA: 0x197DCAC Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x197DCB4 Offset: 0x197DCB4 VA: 0x197DCB4
	public bool IsEnable(long point) { }
}

// Namespace: 
public class EventPointBuffMaster : DataMasterBase<EventPointBuffMaster, EventPointBuffEntity, int> // TypeDefIndex: 6913
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55924 Offset: 0xC55924 VA: 0xC55924
	private static Comparison<EventPointBuffEntity> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC55934 Offset: 0xC55934 VA: 0xC55934
	private static Comparison<EventPointBuffEntity> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x197DCC4 Offset: 0x197DCC4 VA: 0x197DCC4
	public void .ctor() { }

	// RVA: 0x197DD18 Offset: 0x197DD18 VA: 0x197DD18
	public EventPointBuffEntity[] getEntityList(int eventId) { }

	// RVA: 0x197DE98 Offset: 0x197DE98 VA: 0x197DE98
	public List<EventPointBuffEntity> GetEntityListWithGroupId(int eventId, int groupId) { }

	// RVA: 0x197E0E0 Offset: 0x197E0E0 VA: 0x197E0E0
	public EventPointBuffEntity[] GetAllEventBuff(int eventId, int groupId) { }

	// RVA: 0x197E44C Offset: 0x197E44C VA: 0x197E44C
	public bool IsEventEntityContains(int eventId, int groupId = 0) { }

	// RVA: 0x197E534 Offset: 0x197E534 VA: 0x197E534
	public EventPointBuffEntity GetEnableEntity(int eventId, int funcid) { }

	// RVA: 0x197E76C Offset: 0x197E76C VA: 0x197E76C
	public int GetEventPointGroupId(int eventId, int funcId, int defaultValue = -1) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA338 Offset: 0xCCA338 VA: 0xCCA338
	// RVA: 0x197E888 Offset: 0x197E888 VA: 0x197E888
	private static int <GetAllEventBuff>m__0(EventPointBuffEntity a, EventPointBuffEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA348 Offset: 0xCCA348 VA: 0xCCA348
	// RVA: 0x197E8C8 Offset: 0x197E8C8 VA: 0x197E8C8
	private static int <GetEnableEntity>m__1(EventPointBuffEntity x, EventPointBuffEntity y) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42CA4 Offset: 0xC42CA4 VA: 0xC42CA4
private sealed class EventPointBuffMaster.<IsEventEntityContains>c__AnonStorey0 // TypeDefIndex: 6914
{
	// Fields
	internal int eventId; // 0x10
	internal int groupId; // 0x14

	// Methods

	// RVA: 0x197E52C Offset: 0x197E52C VA: 0x197E52C
	public void .ctor() { }

	// RVA: 0x197E9E4 Offset: 0x197E9E4 VA: 0x197E9E4
	internal bool <>m__0(DataEntityBase ent) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42CB4 Offset: 0xC42CB4 VA: 0xC42CB4
private sealed class EventPointBuffMaster.<GetEnableEntity>c__AnonStorey1 // TypeDefIndex: 6915
{
	// Fields
	internal long pointTotal; // 0x10
	internal int funcid; // 0x18

