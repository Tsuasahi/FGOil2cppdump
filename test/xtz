	public void set_IsSelectItem(bool value) { }

	// RVA: 0x1DBAA28 Offset: 0x1DBAA28 VA: 0x1DBAA28
	public bool get_isCommandCode() { }
}

// Namespace: 
public class SummonEffectComponent : MonoBehaviour // TypeDefIndex: 10713
{
	// Fields
	private static readonly string RANKUP_NONE_ANIMATION; // 0x0
	private static readonly string RANKUP_TO_SILVER_ANIMATION; // 0x8
	private static readonly string RANKUP_TO_GOLD_ANIMATION; // 0x10
	private static readonly string RANKUP_COMMANDCODE_ANIMATION; // 0x18
	private static readonly string FSM_VARIABLE_UP_ANIMATION_NAME; // 0x20
	public Texture2D[] testCards; // 0x18
	private readonly int[] cardTextureSize; // 0x20
	private static Dictionary<Rarity.TYPE, SummonEffectComponent.CardColor> rarityToColor; // 0x28
	private Transform firstTr; // 0x28
	private Transform firstTPeelr; // 0x30
	public List<SummonEffectComponent.SummonInfo> SummonInfos; // 0x38
	public bool EditMode; // 0x40
	private List<string> _releaseAssetPath; // 0x48
	private GameObject prevObject; // 0x50
	private int _counter; // 0x58
	private int _counterMax; // 0x5C
	private GameObject effect; // 0x60
	private GameObject bgParentObject; // 0x68
	private int DownloadCounter; // 0x70
	private bool isNoSkip; // 0x74
	private Animation effAnimation; // 0x78
	private string effAnimName; // 0x80
	private List<string> upAnimationNameList; // 0x88
	private int gachaId; // 0x90

	// Properties
	public bool IsNoSkip { get; set; }

	// Methods

	// RVA: 0x170ED14 Offset: 0x170ED14 VA: 0x170ED14
	public void .ctor() { }

	// RVA: 0x170EDF4 Offset: 0x170EDF4 VA: 0x170EDF4
	public bool get_IsNoSkip() { }

	// RVA: 0x170D6C0 Offset: 0x170D6C0 VA: 0x170D6C0
	public void set_IsNoSkip(bool value) { }

	// RVA: 0x170D658 Offset: 0x170D658 VA: 0x170D658
	public void Initialize() { }

	// RVA: 0x170D6D4 Offset: 0x170D6D4 VA: 0x170D6D4
	public void AddSummonInfo(int servantId, int limitCount, bool isRankup, bool isNewCard, SummonEffectComponent.NoticeEffect noticeRarity, Rarity.TYPE rarity, SummonEffectComponent.CardType cardType, bool isSkipStop, long userSvtId) { }

	// RVA: 0x170EDFC Offset: 0x170EDFC VA: 0x170EDFC
	private void Start() { }

	// RVA: 0x170F044 Offset: 0x170F044 VA: 0x170F044
	public void FadeIn() { }

	// RVA: 0x170F0E8 Offset: 0x170F0E8 VA: 0x170F0E8
	public void InitSummonEffect() { }

	// RVA: 0x170F5A8 Offset: 0x170F5A8 VA: 0x170F5A8
	protected void OnCharaGraphLoadDone(AssetData loadData) { }

	// RVA: 0x170F664 Offset: 0x170F664 VA: 0x170F664
	public void ReleasePrevAsset() { }

	// RVA: 0x170F7C0 Offset: 0x170F7C0 VA: 0x170F7C0
	public void endAnimation() { }

	// RVA: 0x170F8A0 Offset: 0x170F8A0 VA: 0x170F8A0
	public void UpdateCardParam() { }

	// RVA: 0x170FF04 Offset: 0x170FF04 VA: 0x170FF04
	public void UpdateCardTexture() { }

	// RVA: 0x171223C Offset: 0x171223C VA: 0x171223C
	private void ChangeClassCardColor(Transform cardNode, int col) { }

	// RVA: 0x1712384 Offset: 0x1712384 VA: 0x1712384
	private void CompleteCallback() { }

	// RVA: 0x1712418 Offset: 0x1712418 VA: 0x1712418
	public void SetUpAnimation() { }

	// RVA: 0x170D6CC Offset: 0x170D6CC VA: 0x170D6CC
	public void SetGachaId(int id) { }

	// RVA: 0x17125C0 Offset: 0x17125C0 VA: 0x17125C0
	public int GetGachaId() { }

	// RVA: 0x17125C8 Offset: 0x17125C8 VA: 0x17125C8
	public void StopUpAnimation() { }

	// RVA: 0x17127FC Offset: 0x17127FC VA: 0x17127FC
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F1EC Offset: 0xD3F1EC VA: 0xD3F1EC
	// RVA: 0x17128AC Offset: 0x17128AC VA: 0x17128AC
	private void <endAnimation>m__0() { }
}

// Namespace: 
public enum SummonEffectComponent.CardColor // TypeDefIndex: 10714
{
	// Fields
	public int value__; // 0x0
	public const SummonEffectComponent.CardColor BRONZE = 0;
	public const SummonEffectComponent.CardColor SILVER = 1;
	public const SummonEffectComponent.CardColor GOLD = 2;
}

// Namespace: 
public enum SummonEffectComponent.CardType // TypeDefIndex: 10715
{
	// Fields
	public int value__; // 0x0
	public const SummonEffectComponent.CardType OTHER = 0;
	public const SummonEffectComponent.CardType CANCER = 1;
	public const SummonEffectComponent.CardType SERVANT = 2;
	public const SummonEffectComponent.CardType COMMAND_CODE = 3;
}

// Namespace: 
public enum SummonEffectComponent.NoticeEffect // TypeDefIndex: 10716
{
	// Fields
	public int value__; // 0x0
	public const SummonEffectComponent.NoticeEffect NONE = 0;
	public const SummonEffectComponent.NoticeEffect SR = 1;
	public const SummonEffectComponent.NoticeEffect SSR = 2;
}

// Namespace: 
private enum SummonEffectComponent.RankUp // TypeDefIndex: 10717
{
	// Fields
	public int value__; // 0x0
	public const SummonEffectComponent.RankUp NONE = 0;
	public const SummonEffectComponent.RankUp TO_SILVER = 1;
	public const SummonEffectComponent.RankUp TO_GOLD = 2;
	public const SummonEffectComponent.RankUp COMMANDCODE = 3;
}

// Namespace: 
[Serializable]
public class SummonEffectComponent.SummonInfo // TypeDefIndex: 10718
{
	// Fields
	public int ServantId; // 0x10
	public int LimitCount; // 0x14
	public bool IsRankUp; // 0x18
	public bool IsNewCard; // 0x19
	public SummonEffectComponent.NoticeEffect NoticeRarity; // 0x1C
	public Rarity.TYPE Rarity; // 0x20
	public SummonEffectComponent.CardType CardType; // 0x24
	public bool IsSkipStop; // 0x28
	public long userServantId; // 0x30

	// Methods

	// RVA: 0x1DAC93C Offset: 0x1DAC93C VA: 0x1DAC93C
	public void .ctor(int servantId, int limitCount, bool isRankup, bool isNewCard, SummonEffectComponent.NoticeEffect noticeRarity, Rarity.TYPE rarity, SummonEffectComponent.CardType cardType, bool isSkipStop, long userSvtId) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1680 Offset: 0xCB1680 VA: 0xCB1680
private sealed class SummonEffectComponent.<UpdateCardTexture>c__AnonStorey0 // TypeDefIndex: 10719
{
	// Fields
	internal string cardFirstName; // 0x10
	internal string cardFirstPeelName; // 0x18
	internal string cardSecondName; // 0x20
	internal string cardRotName; // 0x28
	internal SummonEffectComponent.CardType cardType; // 0x30
	internal SummonEffectComponent $this; // 0x38

	// Methods

	// RVA: 0x1DABBD0 Offset: 0x1DABBD0 VA: 0x1DABBD0
	public void .ctor() { }

	// RVA: 0x1DABBD8 Offset: 0x1DABBD8 VA: 0x1DABBD8
	internal void <>m__0() { }

	// RVA: 0x1DABC08 Offset: 0x1DABC08 VA: 0x1DABC08
	internal void <>m__1() { }

	// RVA: 0x1DABC38 Offset: 0x1DABC38 VA: 0x1DABC38
	internal void <>m__2() { }

	// RVA: 0x1DABC68 Offset: 0x1DABC68 VA: 0x1DABC68
	internal void <>m__3(AssetData d) { }

	// RVA: 0x1DABE54 Offset: 0x1DABE54 VA: 0x1DABE54
	internal void <>m__4(AssetData d) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1690 Offset: 0xCB1690 VA: 0xCB1690
private sealed class SummonEffectComponent.<UpdateCardTexture>c__AnonStorey2 // TypeDefIndex: 10720
{
	// Fields
	internal int classCardId; // 0x10

	// Methods

	// RVA: 0x1DAC40C Offset: 0x1DAC40C VA: 0x1DAC40C
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB16A0 Offset: 0xCB16A0 VA: 0xCB16A0
private sealed class SummonEffectComponent.<UpdateCardTexture>c__AnonStorey1 // TypeDefIndex: 10721
{
	// Fields
	internal int beforeClassCardId; // 0x10
	internal int classBackId; // 0x14
	internal SummonEffectComponent.<UpdateCardTexture>c__AnonStorey0 <>f__ref$0; // 0x18
	internal SummonEffectComponent.<UpdateCardTexture>c__AnonStorey2 <>f__ref$2; // 0x20

	// Methods

	// RVA: 0x1DABFF8 Offset: 0x1DABFF8 VA: 0x1DABFF8
	public void .ctor() { }

	// RVA: 0x1DAC000 Offset: 0x1DAC000 VA: 0x1DAC000
	internal void <>m__0(AssetData d) { }

	// RVA: 0x1DAC1BC Offset: 0x1DAC1BC VA: 0x1DAC1BC
	internal void <>m__1(AssetData d) { }

	// RVA: 0x1DAC2DC Offset: 0x1DAC2DC VA: 0x1DAC2DC
	internal void <>m__2(AssetData d) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB16B0 Offset: 0xCB16B0 VA: 0xCB16B0
private sealed class SummonEffectComponent.<UpdateCardTexture>c__AnonStorey3 // TypeDefIndex: 10722
{
	// Fields
	internal int backImageId; // 0x10
	internal SummonEffectComponent.<UpdateCardTexture>c__AnonStorey0 <>f__ref$0; // 0x18
	internal SummonEffectComponent.<UpdateCardTexture>c__AnonStorey2 <>f__ref$2; // 0x20

	// Methods

	// RVA: 0x1DAC414 Offset: 0x1DAC414 VA: 0x1DAC414
	public void .ctor() { }

	// RVA: 0x1DAC41C Offset: 0x1DAC41C VA: 0x1DAC41C
	internal void <>m__0(AssetData d) { }

	// RVA: 0x1DAC734 Offset: 0x1DAC734 VA: 0x1DAC734
	internal void <>m__1(AssetData d) { }
}

// Namespace: 
[RequireComponent] // RVA: 0xC96AA8 Offset: 0xC96AA8 VA: 0xC96AA8
public class SummonInfoControl : MonoBehaviour // TypeDefIndex: 10723
{
	// Fields
	protected static readonly float OPEN_TIME; // 0x0
	private static readonly float NORMAL_SUMMON_BTN1_X; // 0x4
	private static readonly float NORMAL_SUMMON_BTN2_X; // 0x8
	private static readonly float APD_SUMMON_BTN1_X; // 0xC
	private static readonly float APD_SUMMON_BTN2_X; // 0x10
	private static readonly float APD_SUMMON_BTN3_X; // 0x14
	private static readonly long ONEDAY_SECOND; // 0x18
	public GameObject freeSummonInfo; // 0x18
	public GameObject singlePtSummonInfo; // 0x20
	public UILabel singlePtInfoLb; // 0x28
	public GameObject multiPtSummonInfo; // 0x30
	public UILabel onePointInfoLb; // 0x38
	public UISprite multiPointNumImg; // 0x40
	public UILabel multiPointInfoLb; // 0x48
	public GameObject singlePaySummonInfo; // 0x50
	public UISprite singlePayNumImg; // 0x58
	public UILabel singlePayInfoLb; // 0x60
	public GameObject paySummonInfo; // 0x68
	public UISprite onePayNumImg; // 0x70
	public UILabel onePayInfoLb; // 0x78
	public UISprite multiPayNumImg; // 0x80
	public UILabel mutiPayInfoLb; // 0x88
	public GameObject ticketSummonInfo; // 0x90
	public UILabel needTicketInfoLb; // 0x98
	public UILabel haveTicketInfoLb; // 0xA0
	public UILabel ticketMultiInfoLb; // 0xA8
	public UIButton tutorialPayBtn; // 0xB0
	public UIButton singlePayBtn; // 0xB8
	public UIButton multiPayBtn; // 0xC0
	public UIButton ticketSinglePayBtn; // 0xC8
	public UIButton ticketOnetimePayBtn; // 0xD0
	public UIButton ticketMultiPayBtn; // 0xD8
	public UIButton chargePayBtn; // 0xE0
	public GameObject summonDetailInfo; // 0xE8
	public UIButton summonDetailBtn; // 0xF0
	public UIButton summonHelpInfo; // 0xF8
	[SerializeField] // RVA: 0xCE5084 Offset: 0xCE5084 VA: 0xCE5084
	private UIButton summonHistoryButton; // 0x100
	[SerializeField] // RVA: 0xCE5094 Offset: 0xCE5094 VA: 0xCE5094
	private UISprite summonHistorySprite; // 0x108
	public GameObject chargeSummonInfo; // 0x110
	public UILabel needChargeInfoLb; // 0x118
	public UILabel haveChargeInfoLb; // 0x120
	public UISprite chargeGachaNumImg; // 0x128
	private VaildGachaInfo currentSummonData; // 0x130
	private GachaRqParamData requestData; // 0x138
	[SerializeField] // RVA: 0xCE50A4 Offset: 0xCE50A4 VA: 0xCE50A4
	private UISprite onePayBonusCount; // 0x140
	[SerializeField] // RVA: 0xCE50B4 Offset: 0xCE50B4 VA: 0xCE50B4
	private UISprite onePayBonusInfo; // 0x148
	[SerializeField] // RVA: 0xCE50C4 Offset: 0xCE50C4 VA: 0xCE50C4
	private UISprite multiPayBonusInfo; // 0x150
	[SerializeField] // RVA: 0xCE50D4 Offset: 0xCE50D4 VA: 0xCE50D4
	private UISprite ticketOnePayBonusCount; // 0x158
	[SerializeField] // RVA: 0xCE50E4 Offset: 0xCE50E4 VA: 0xCE50E4
	private UISprite ticketOnePayBonusInfo; // 0x160
	[SerializeField] // RVA: 0xCE50F4 Offset: 0xCE50F4 VA: 0xCE50F4
	private UISprite ticketMultiPayBonusInfo; // 0x168
	[SerializeField] // RVA: 0xCE5104 Offset: 0xCE5104 VA: 0xCE5104
	private UISprite ticketOnePayNumImg; // 0x170
	[SerializeField] // RVA: 0xCE5114 Offset: 0xCE5114 VA: 0xCE5114
	private UISprite ticketMultiPayNumImg; // 0x178
	[SerializeField] // RVA: 0xCE5124 Offset: 0xCE5124 VA: 0xCE5124
	private UISprite singlePayBonusInfo; // 0x180
	[SerializeField] // RVA: 0xCE5134 Offset: 0xCE5134 VA: 0xCE5134
	private UISprite chargePayBonusInfo; // 0x188
	[SerializeField] // RVA: 0xCE5144 Offset: 0xCE5144 VA: 0xCE5144
	private UISprite onePayButtonImg; // 0x190
	[SerializeField] // RVA: 0xCE5154 Offset: 0xCE5154 VA: 0xCE5154
	private UISprite ticketOnePayButtonImg; // 0x198
	[SerializeField] // RVA: 0xCE5164 Offset: 0xCE5164 VA: 0xCE5164
	private GameObject onePayBtnObject; // 0x1A0
	[SerializeField] // RVA: 0xCE5174 Offset: 0xCE5174 VA: 0xCE5174
	private GameObject multiPayBtnObject; // 0x1A8
	[SerializeField] // RVA: 0xCE5184 Offset: 0xCE5184 VA: 0xCE5184
	private GameObject ticketOnePayBtnObject; // 0x1B0
	[SerializeField] // RVA: 0xCE5194 Offset: 0xCE5194 VA: 0xCE5194
	private GameObject ticketMultiPayBtnObject; // 0x1B8
	[SerializeField] // RVA: 0xCE51A4 Offset: 0xCE51A4 VA: 0xCE51A4
	private GameObject onePay2SummonInfo; // 0x1C0
	[SerializeField] // RVA: 0xCE51B4 Offset: 0xCE51B4 VA: 0xCE51B4
	private GameObject onePay2BtnObject; // 0x1C8
	[SerializeField] // RVA: 0xCE51C4 Offset: 0xCE51C4 VA: 0xCE51C4
	private UISprite onePay2ButtonImg; // 0x1D0
	[SerializeField] // RVA: 0xCE51D4 Offset: 0xCE51D4 VA: 0xCE51D4
	private UISprite onePay2BonusCount; // 0x1D8
	[SerializeField] // RVA: 0xCE51E4 Offset: 0xCE51E4 VA: 0xCE51E4
	private UISprite onePay2BonusInfo; // 0x1E0
	[SerializeField] // RVA: 0xCE51F4 Offset: 0xCE51F4 VA: 0xCE51F4
	private UISprite onePay2NumImg; // 0x1E8
	[SerializeField] // RVA: 0xCE5204 Offset: 0xCE5204 VA: 0xCE5204
	private UISprite onePay2InfoSprite; // 0x1F0
	[SerializeField] // RVA: 0xCE5214 Offset: 0xCE5214 VA: 0xCE5214
	private UILabel onePay2InfoLabel; // 0x1F8
	[SerializeField] // RVA: 0xCE5224 Offset: 0xCE5224 VA: 0xCE5224
	private UIButton onePay2Button; // 0x200
	[SerializeField] // RVA: 0xCE5234 Offset: 0xCE5234 VA: 0xCE5234
	private UILabel freeSummonCampaignLabel; // 0x208
	[SerializeField] // RVA: 0xCE5244 Offset: 0xCE5244 VA: 0xCE5244
	private GameObject freeSummonCampaignNeedInfo; // 0x210
	[SerializeField] // RVA: 0xCE5254 Offset: 0xCE5254 VA: 0xCE5254
	private UILabel freeSummonCampaignNeedNum; // 0x218
	[SerializeField] // RVA: 0xCE5264 Offset: 0xCE5264 VA: 0xCE5264
	private SummonInfoControl.InfoButtonLayout infoButtonLayout; // 0x220
	[SerializeField] // RVA: 0xCE5274 Offset: 0xCE5274 VA: 0xCE5274
	private SummonInfoLayout summonInfoLayout; // 0x228
	private UIAtlas gachaAtlas; // 0x230
	private bool isPayExUsePossible; // 0x238
	private bool isDispPayExSummon; // 0x239
	private int price; // 0x23C
	private int gachaTime; // 0x240
	private bool isFree; // 0x244
	private int multiPayPrice; // 0x248
	private int multiPayGachaTime; // 0x24C
	private int shopIdIdx; // 0x250
	private int multiShopIdIdx; // 0x254
	private int payGachaPrice; // 0x258
	private bool isTicket; // 0x25C
	private int ticketNum; // 0x260
	private int haveStoneNum; // 0x264
	private int freeDrawNum; // 0x268
	[CompilerGeneratedAttribute] // RVA: 0xCE5284 Offset: 0xCE5284 VA: 0xCE5284
	[DebuggerBrowsableAttribute] // RVA: 0xCE5284 Offset: 0xCE5284 VA: 0xCE5284
	private int <HaveFreeStoneNum>k__BackingField; // 0x26C
	[CompilerGeneratedAttribute] // RVA: 0xCE52C0 Offset: 0xCE52C0 VA: 0xCE52C0
	[DebuggerBrowsableAttribute] // RVA: 0xCE52C0 Offset: 0xCE52C0 VA: 0xCE52C0
	private int <HaveChargeStoneNum>k__BackingField; // 0x270
	private SummonInfoControl.SummonState state; // 0x274
	private int summonType; // 0x278
	private UserGameEntity usrData; // 0x280
	private GameObject currentBtnInfo; // 0x288
	private VaildGachaInfo beforeSummonData; // 0x290
	protected SummonInfoControl.ClickDelegate clickCallbackFunc; // 0x298
	protected Action closeCallbackFunc; // 0x2A0
	public bool partialMaintenance; // 0x2A8
	public SummonMaintenance maintenanceMask; // 0x2B0
	public GameObject freeTxtInfoObj; // 0x2B8
	public GameObject freeTenInfoObj; // 0x2C0
	private Action animationCallback; // 0x2C8
	[CompilerGeneratedAttribute] // RVA: 0xCE52FC Offset: 0xCE52FC VA: 0xCE52FC
	private static Action<GameObject> <>f__am$cache0; // 0x20

	// Properties
	public int HaveFreeStoneNum { get; set; }
	public int HaveChargeStoneNum { get; set; }
	public bool Flag20220101 { get; }
	public SummonInfoLayout SummonInfoLayout { get; }

	// Methods

	// RVA: 0x1DADA38 Offset: 0x1DADA38 VA: 0x1DADA38
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F1FC Offset: 0xD3F1FC VA: 0xD3F1FC
	// RVA: 0x1DADA48 Offset: 0x1DADA48 VA: 0x1DADA48
	public int get_HaveFreeStoneNum() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F20C Offset: 0xD3F20C VA: 0xD3F20C
	// RVA: 0x1DADA50 Offset: 0x1DADA50 VA: 0x1DADA50
	internal void set_HaveFreeStoneNum(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F21C Offset: 0xD3F21C VA: 0xD3F21C
	// RVA: 0x1DADA58 Offset: 0x1DADA58 VA: 0x1DADA58
	public int get_HaveChargeStoneNum() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F22C Offset: 0xD3F22C VA: 0xD3F22C
	// RVA: 0x1DADA60 Offset: 0x1DADA60 VA: 0x1DADA60
	internal void set_HaveChargeStoneNum(int value) { }

	// RVA: 0x1DADA68 Offset: 0x1DADA68 VA: 0x1DADA68
	public bool get_Flag20220101() { }

	// RVA: 0x1DADAC0 Offset: 0x1DADAC0 VA: 0x1DADAC0
	public SummonInfoLayout get_SummonInfoLayout() { }

	// RVA: 0x1DADAC8 Offset: 0x1DADAC8 VA: 0x1DADAC8
	public void initSummonInfo() { }

	// RVA: 0x1DADB28 Offset: 0x1DADB28 VA: 0x1DADB28
	public void SetMaintenanceImg(GameObject imgAtlas, string sprtName) { }

	// RVA: 0x1DADCE4 Offset: 0x1DADCE4 VA: 0x1DADCE4
	public void setSummonInfo(VaildGachaInfo gachaData, SummonInfoControl.ClickDelegate callback) { }

	// RVA: 0x1DADD60 Offset: 0x1DADD60 VA: 0x1DADD60
	public void setSummonDispInfo() { }

	// RVA: 0x1DAF5F0 Offset: 0x1DAF5F0 VA: 0x1DAF5F0
	private void initSummonBtnDisp() { }

	// RVA: 0x1DAF824 Offset: 0x1DAF824 VA: 0x1DAF824
	public void setHelpBtnDisp(bool isDisp) { }

	// RVA: 0x1DAE220 Offset: 0x1DAE220 VA: 0x1DAE220
	public void setFreeSummonInfo() { }

	// RVA: 0x1DAF874 Offset: 0x1DAF874 VA: 0x1DAF874
	public void setPointSummonInfo() { }

	// RVA: 0x1DAE61C Offset: 0x1DAE61C VA: 0x1DAE61C
	public void setPaySummonInfo() { }

	// RVA: 0x1DB0038 Offset: 0x1DB0038 VA: 0x1DB0038
	private void SetElevenBonusInfo(GachaEntity ent, bool ticket, int oneCount, int multiCount, UISprite oneNumImg, UISprite multiNumImg, UIButton oneButton, UISprite oneButtonImg, UISprite oneBonusCount, UISprite oneBonusInfo, UISprite multiBonusInfo) { }

	// RVA: 0x1DAFE68 Offset: 0x1DAFE68 VA: 0x1DAFE68
	private void SetElevenBonusInfoSingle(int multiCount, UISprite multiNumImg, UISprite multiBonusInfo) { }

	// RVA: 0x1DB04F4 Offset: 0x1DB04F4 VA: 0x1DB04F4
	private void SetOneTimeExButton(GachaEntity gachaEnt, bool ticket) { }

	// RVA: 0x1DB0A74 Offset: 0x1DB0A74 VA: 0x1DB0A74
	private void SetGachaSprite(UISprite sprite, string spriteName) { }

	// RVA: 0x1DAF33C Offset: 0x1DAF33C VA: 0x1DAF33C
	public void setChargeSummonInfo() { }

	// RVA: 0x1DB0AE4 Offset: 0x1DB0AE4 VA: 0x1DB0AE4
	private void setCurrentSummonInfo(GameObject currentInfo) { }

	// RVA: 0x1DB0AEC Offset: 0x1DB0AEC VA: 0x1DB0AEC
	public void SetEnableSummonBtn(bool isEnable) { }

	// RVA: 0x1DAFFE8 Offset: 0x1DAFFE8 VA: 0x1DAFFE8
	private void checkPartialMaintenance() { }

	// RVA: 0x1DAFC00 Offset: 0x1DAFC00 VA: 0x1DAFC00
	private void setSummonButtonsCollider(bool OnOff) { }

	// RVA: 0x1DB0EA8 Offset: 0x1DB0EA8 VA: 0x1DB0EA8
	public void setAlphaSummonBtn(Action callback) { }

	// RVA: 0x1DB0F2C Offset: 0x1DB0F2C VA: 0x1DB0F2C
	private void MoveAlpha(GameObject target) { }

	// RVA: 0x1DB10C0 Offset: 0x1DB10C0 VA: 0x1DB10C0
	private void EndAnimation() { }

	// RVA: 0x1DB10D4 Offset: 0x1DB10D4 VA: 0x1DB10D4
	public void OnClickFreeSummon() { }

	// RVA: 0x1DB1614 Offset: 0x1DB1614 VA: 0x1DB1614
	public void OnClickGacha() { }

	// RVA: 0x1DB181C Offset: 0x1DB181C VA: 0x1DB181C
	public void OnClickMutiGacha() { }

	// RVA: 0x1DB19C4 Offset: 0x1DB19C4 VA: 0x1DB19C4
	public void OnClickSinglePayGacha() { }

	// RVA: 0x1DB1B6C Offset: 0x1DB1B6C VA: 0x1DB1B6C
	public void OnClickSinglePayExGacha() { }

	// RVA: 0x1DB1D80 Offset: 0x1DB1D80 VA: 0x1DB1D80
	public void OnClickMultiPayGacha() { }

	// RVA: 0x1DB1F28 Offset: 0x1DB1F28 VA: 0x1DB1F28
	public void OnClickChargeGacha() { }

	// RVA: 0x1DB20D0 Offset: 0x1DB20D0 VA: 0x1DB20D0
	public void OnClickDetail(Action callback) { }

	// RVA: 0x1DB2204 Offset: 0x1DB2204 VA: 0x1DB2204
	public int getUsrStoneNum() { }

	// RVA: 0x1DB220C Offset: 0x1DB220C VA: 0x1DB220C
	public int getUsrTicketNum() { }

	// RVA: 0x1DB2214 Offset: 0x1DB2214 VA: 0x1DB2214
	public int getSummonPrice() { }

	// RVA: 0x1DB221C Offset: 0x1DB221C VA: 0x1DB221C
	public bool getIsFree() { }

	// RVA: 0x1DB2224 Offset: 0x1DB2224 VA: 0x1DB2224
	public void setTutorialBtnEnable(bool isEnable) { }

	// RVA: 0x1DB22AC Offset: 0x1DB22AC VA: 0x1DB22AC
	public void setTutorialExeBtnEnable(bool isEnable) { }

	// RVA: 0x1DB2314 Offset: 0x1DB2314 VA: 0x1DB2314
	public int tutoSummonSinglePrice() { }

	// RVA: 0x1DB2508 Offset: 0x1DB2508 VA: 0x1DB2508
	public int getGroupGachaId() { }

	// RVA: 0x1DB2534 Offset: 0x1DB2534 VA: 0x1DB2534
	public void SetSummonHistorySprite(GameObject bannerAtlas, string imgName) { }

	// RVA: 0x1DB2648 Offset: 0x1DB2648 VA: 0x1DB2648
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3F23C Offset: 0xD3F23C VA: 0xD3F23C
	// RVA: 0x1DB26E8 Offset: 0x1DB26E8 VA: 0x1DB26E8
	private static void <setSummonDispInfo>m__0(GameObject obj) { }
}

// Namespace: 
[Serializable]
public class SummonInfoControl.InfoButtonLayout // TypeDefIndex: 10724
{
	// Fields
	public Vector3 Top; // 0x10
	public Vector3 Center; // 0x1C
	public Vector3 Buttom; // 0x28

	// Methods

	// RVA: 0x1DB27E4 Offset: 0x1DB27E4 VA: 0x1DB27E4
	public void .ctor() { }
}

// Namespace: 
public sealed class SummonInfoControl.ClickDelegate : MulticastDelegate // TypeDefIndex: 10725
{
	// Methods

	// RVA: 0x1DB27A4 Offset: 0x1DB27A4 VA: 0x1DB27A4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1DB1274 Offset: 0x1DB1274 VA: 0x1DB1274 Slot: 11
	public virtual void Invoke(GachaRqParamData paramData) { }

	// RVA: 0x1DB27B4 Offset: 0x1DB27B4 VA: 0x1DB27B4 Slot: 12
	public virtual IAsyncResult BeginInvoke(GachaRqParamData paramData, AsyncCallback callback, object object) { }

	// RVA: 0x1DB27D8 Offset: 0x1DB27D8 VA: 0x1DB27D8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public enum SummonInfoControl.SummonState // TypeDefIndex: 10726
{
	// Fields
	public int value__; // 0x0
	public const SummonInfoControl.SummonState FREE_SUMMON = 0;
	public const SummonInfoControl.SummonState SINGLE_POINT_SUMMON = 1;
	public const SummonInfoControl.SummonState MULTI_POINT_SUMMON = 2;
	public const SummonInfoControl.SummonState SINGLE_PAY_SUMMON = 3;
	public const SummonInfoControl.SummonState MULTI_PAY_SUMMON = 4;
	public const SummonInfoControl.SummonState TICKET_SUMMON = 5;
}

// Namespace: 
public class SummonInfoLayout : MonoBehaviour // TypeDefIndex: 10727
{
	// Fields
	[SerializeField] // RVA: 0xCE530C Offset: 0xCE530C VA: 0xCE530C
	[HeaderAttribute] // RVA: 0xCE530C Offset: 0xCE530C VA: 0xCE530C
	private SummonInfoLayout.InfoControlLayout infoControlLayoutPc; // 0x18
	private SummonInfoLayout.InfoControlLayout infoControlLayoutDefault; // 0x30
	private FSOffset fsOffset; // 0x48

	// Methods

	// RVA: 0x1DB30FC Offset: 0x1DB30FC VA: 0x1DB30FC
	public void .ctor() { }

	// RVA: 0x1DB3104 Offset: 0x1DB3104 VA: 0x1DB3104
	public void UpdateDefault() { }

	// RVA: 0x1DB323C Offset: 0x1DB323C VA: 0x1DB323C
	public void UpdatePc() { }

	// RVA: 0x1DB32D8 Offset: 0x1DB32D8 VA: 0x1DB32D8
	private void Awake() { }

	// RVA: 0x1DB31A0 Offset: 0x1DB31A0 VA: 0x1DB31A0
	private void UpdateOffset() { }
}

// Namespace: 
[Serializable]
public struct SummonInfoLayout.InfoControlLayout // TypeDefIndex: 10728
{
	// Fields
	public Vector3 Position; // 0x0
	public Vector3 Scale; // 0xC
}

// Namespace: 
public class SummonMaintenance : MonoBehaviour // TypeDefIndex: 10729
{
	// Fields
	protected static readonly float ANIM_TIME; // 0x0

	// Methods

	// RVA: 0x1DB52A0 Offset: 0x1DB52A0 VA: 0x1DB52A0
	public void .ctor() { }

	// RVA: 0x1DADBFC Offset: 0x1DADBFC VA: 0x1DADBFC
	public void SetSprite(GameObject imgAtlas, string sprtName) { }

	// RVA: 0x1DB0C28 Offset: 0x1DB0C28 VA: 0x1DB0C28
	public void Open() { }

	// RVA: 0x1DAF728 Offset: 0x1DAF728 VA: 0x1DAF728
	public void Close() { }

	// RVA: 0x1DB52A8 Offset: 0x1DB52A8 VA: 0x1DB52A8
	private void OnEnd() { }

	// RVA: 0x1DB52E0 Offset: 0x1DB52E0 VA: 0x1DB52E0
	private static void .cctor() { }
}

// Namespace: 
public class SummonInfoDlgComponent : BaseDialog // TypeDefIndex: 10730
{
	// Fields
	[SerializeField] // RVA: 0xCE5358 Offset: 0xCE5358 VA: 0xCE5358
	protected GameObject cautionInfo; // 0x58
	[SerializeField] // RVA: 0xCE5368 Offset: 0xCE5368 VA: 0xCE5368
	protected UILabel titleLabel; // 0x60
	[SerializeField] // RVA: 0xCE5378 Offset: 0xCE5378 VA: 0xCE5378
	protected UILabel messageLabel; // 0x68
	[SerializeField] // RVA: 0xCE5388 Offset: 0xCE5388 VA: 0xCE5388
	protected UILabel confirmBtnLabel; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xCE5398 Offset: 0xCE5398 VA: 0xCE5398
	[DebuggerBrowsableAttribute] // RVA: 0xCE5398 Offset: 0xCE5398 VA: 0xCE5398
	private SummonInfoDlgComponent.CallbackFunc callbackFunc; // 0x78
	protected Action closeCallbackFunc; // 0x80

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1DB28C8 Offset: 0x1DB28C8 VA: 0x1DB28C8
	public void .ctor() { }

	// RVA: 0x1DB2930 Offset: 0x1DB2930 VA: 0x1DB2930
	protected void add_callbackFunc(SummonInfoDlgComponent.CallbackFunc value) { }

	// RVA: 0x1DB2A1C Offset: 0x1DB2A1C VA: 0x1DB2A1C
	protected void remove_callbackFunc(SummonInfoDlgComponent.CallbackFunc value) { }

	// RVA: 0x1DB2B08 Offset: 0x1DB2B08 VA: 0x1DB2B08
	public void Init() { }

	// RVA: 0x1DB2C18 Offset: 0x1DB2C18 VA: 0x1DB2C18
	public void OpenInfoMessageDlg(string title, string message, SummonInfoDlgComponent.CallbackFunc callback) { }

	// RVA: 0x1DB2D68 Offset: 0x1DB2D68 VA: 0x1DB2D68
	public void Close(Action callback) { }

	// RVA: 0x1DB2DF0 Offset: 0x1DB2DF0 VA: 0x1DB2DF0
	protected void EndClose() { }

	// RVA: 0x1DB2E2C Offset: 0x1DB2E2C VA: 0x1DB2E2C
	protected void Callback() { }

	// RVA: 0x1DB3048 Offset: 0x1DB3048 VA: 0x1DB3048
	public void OnClickDecide() { }

	// RVA: 0x1DB3064 Offset: 0x1DB3064 VA: 0x1DB3064 Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
public sealed class SummonInfoDlgComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 10731
{
	// Methods

	// RVA: 0x1DB30AC Offset: 0x1DB30AC VA: 0x1DB30AC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1DB2E48 Offset: 0x1DB2E48 VA: 0x1DB2E48 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1DB30BC Offset: 0x1DB30BC VA: 0x1DB30BC Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1DB30F0 Offset: 0x1DB30F0 VA: 0x1DB30F0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SummonLimitWarningDlgComponent : BaseDialog // TypeDefIndex: 10732
{
	// Fields
	[SerializeField] // RVA: 0xCE53D4 Offset: 0xCE53D4 VA: 0xCE53D4
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xCE53E4 Offset: 0xCE53E4 VA: 0xCE53E4
	protected UILabel msgLabel; // 0x60
	[SerializeField] // RVA: 0xCE53F4 Offset: 0xCE53F4 VA: 0xCE53F4
	protected UILabel titleLabel2; // 0x68
	[SerializeField] // RVA: 0xCE5404 Offset: 0xCE5404 VA: 0xCE5404
	protected UILabel warningLabel; // 0x70
	[SerializeField] // RVA: 0xCE5414 Offset: 0xCE5414 VA: 0xCE5414
	protected UILabel confirmLabel; // 0x78
	[SerializeField] // RVA: 0xCE5424 Offset: 0xCE5424 VA: 0xCE5424
	protected UILabel qpLabel; // 0x80
	[SerializeField] // RVA: 0xCE5434 Offset: 0xCE5434 VA: 0xCE5434
	protected UIButton decideButton; // 0x88
	[SerializeField] // RVA: 0xCE5444 Offset: 0xCE5444 VA: 0xCE5444
	protected UILabel decideLabel; // 0x90
	[SerializeField] // RVA: 0xCE5454 Offset: 0xCE5454 VA: 0xCE5454
	protected UIButton otherButton; // 0x98
	[SerializeField] // RVA: 0xCE5464 Offset: 0xCE5464 VA: 0xCE5464
	protected UILabel otherLabel; // 0xA0
	[SerializeField] // RVA: 0xCE5474 Offset: 0xCE5474 VA: 0xCE5474
	protected UIButton cancelButton; // 0xA8
	[SerializeField] // RVA: 0xCE5484 Offset: 0xCE5484 VA: 0xCE5484
	protected UILabel cancelLabel; // 0xB0
	[SerializeField] // RVA: 0xCE5494 Offset: 0xCE5494 VA: 0xCE5494
	protected UIButton otherButton2; // 0xB8
	[SerializeField] // RVA: 0xCE54A4 Offset: 0xCE54A4 VA: 0xCE54A4
	protected UILabel otherLabel2; // 0xC0
	[SerializeField] // RVA: 0xCE54B4 Offset: 0xCE54B4 VA: 0xCE54B4
	protected UIButton cancelButton2; // 0xC8
	[SerializeField] // RVA: 0xCE54C4 Offset: 0xCE54C4 VA: 0xCE54C4
	protected UILabel cancelLabel2; // 0xD0
	[SerializeField] // RVA: 0xCE54D4 Offset: 0xCE54D4 VA: 0xCE54D4
	protected UIButton settingButton; // 0xD8
	[SerializeField] // RVA: 0xCE54E4 Offset: 0xCE54E4 VA: 0xCE54E4
	protected UILabel settingLabel; // 0xE0
	[SerializeField] // RVA: 0xCE54F4 Offset: 0xCE54F4 VA: 0xCE54F4
	protected AutomaticSaleDlgComponent autoSaleDlgInfo; // 0xE8
	[CompilerGeneratedAttribute] // RVA: 0xCE5504 Offset: 0xCE5504 VA: 0xCE5504
	[DebuggerBrowsableAttribute] // RVA: 0xCE5504 Offset: 0xCE5504 VA: 0xCE5504
	private SummonLimitWarningDlgComponent.CallbackFunc callbackFunc; // 0xF0
	protected Action closeCallbackFunc; // 0xF8
	protected Action autoSaleDialogCloseCallbackFunc; // 0x100
	protected SummonLimitWarningDlgComponent.State state; // 0x108

	// Methods

	// RVA: 0x1DB3388 Offset: 0x1DB3388 VA: 0x1DB3388
	public void .ctor() { }

	// RVA: 0x1DB33F0 Offset: 0x1DB33F0 VA: 0x1DB33F0
	protected void add_callbackFunc(SummonLimitWarningDlgComponent.CallbackFunc value) { }

	// RVA: 0x1DB34DC Offset: 0x1DB34DC VA: 0x1DB34DC
	protected void remove_callbackFunc(SummonLimitWarningDlgComponent.CallbackFunc value) { }

	// RVA: 0x1DB35C8 Offset: 0x1DB35C8 VA: 0x1DB35C8
	public void Init() { }

	// RVA: 0x1DB3874 Offset: 0x1DB3874 VA: 0x1DB3874
	public void OpenQpWarning(SummonLimitWarningDlgComponent.CallbackFunc callback, Action autoSaleDialogCloseCallback) { }

	// RVA: 0x1DB3F50 Offset: 0x1DB3F50 VA: 0x1DB3F50
	public void OpenManaWarning(SummonLimitWarningDlgComponent.CallbackFunc callback, Action autoSaleDialogCloseCallback) { }

	// RVA: 0x1DB448C Offset: 0x1DB448C VA: 0x1DB448C
	public void OpenQpWarning2(SummonLimitWarningDlgComponent.CallbackFunc callback, Action autoSaleDialogCloseCallback) { }

	// RVA: 0x1DB4B00 Offset: 0x1DB4B00 VA: 0x1DB4B00
	protected void EndOpen() { }

	// RVA: 0x1DB4B0C Offset: 0x1DB4B0C VA: 0x1DB4B0C
	public void Close() { }

	// RVA: 0x1DB4B14 Offset: 0x1DB4B14 VA: 0x1DB4B14
	public void Close(Action callback) { }

	// RVA: 0x1DB4BA4 Offset: 0x1DB4BA4 VA: 0x1DB4BA4
	protected void EndClose() { }

	// RVA: 0x1DB4C08 Offset: 0x1DB4C08 VA: 0x1DB4C08
	protected void callback(SummonLimitWarningDlgComponent.Result result) { }

	// RVA: 0x1DB4E54 Offset: 0x1DB4E54 VA: 0x1DB4E54
	public void OnClickDecide() { }

	// RVA: 0x1DB4F04 Offset: 0x1DB4F04 VA: 0x1DB4F04
	public void OnClickOtherScene() { }

	// RVA: 0x1DB4FB4 Offset: 0x1DB4FB4 VA: 0x1DB4FB4
	public void OnClickCancel() { }

	// RVA: 0x1DB3EE8 Offset: 0x1DB3EE8 VA: 0x1DB3EE8
	protected void SetButtonEnable(bool isEnable) { }

	// RVA: 0x1DB5064 Offset: 0x1DB5064 VA: 0x1DB5064
	public void OnClickSetting() { }

	// RVA: 0x1DB5148 Offset: 0x1DB5148 VA: 0x1DB5148
	private void settingResult(bool res) { }
}

// Namespace: 
protected enum SummonLimitWarningDlgComponent.State // TypeDefIndex: 10733
{
	// Fields
	public int value__; // 0x0
	public const SummonLimitWarningDlgComponent.State INIT = 0;
	public const SummonLimitWarningDlgComponent.State OPEN = 1;
	public const SummonLimitWarningDlgComponent.State INPUT = 2;
	public const SummonLimitWarningDlgComponent.State SELECTED = 3;
	public const SummonLimitWarningDlgComponent.State CLOSE = 4;
}

// Namespace: 
public enum SummonLimitWarningDlgComponent.Result // TypeDefIndex: 10734
{
	// Fields
	public int value__; // 0x0
	public const SummonLimitWarningDlgComponent.Result CANCEL = 0;
	public const SummonLimitWarningDlgComponent.Result OTHER_SCENE = 1;
	public const SummonLimitWarningDlgComponent.Result DECIDE = 2;
}

// Namespace: 
public sealed class SummonLimitWarningDlgComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 10735
{
	// Methods

	// RVA: 0x1DB51F8 Offset: 0x1DB51F8 VA: 0x1DB51F8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1DB4C28 Offset: 0x1DB4C28 VA: 0x1DB4C28 Slot: 11
	public virtual void Invoke(SummonLimitWarningDlgComponent.Result result) { }

	// RVA: 0x1DB5208 Offset: 0x1DB5208 VA: 0x1DB5208 Slot: 12
	public virtual IAsyncResult BeginInvoke(SummonLimitWarningDlgComponent.Result result, AsyncCallback callback, object object) { }

	// RVA: 0x1DB5294 Offset: 0x1DB5294 VA: 0x1DB5294 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SummonMiniBannerComponent : MonoBehaviour // TypeDefIndex: 10736
{
	// Fields
	private readonly float SCALING_SIZE; // 0x18
	private readonly float SCALING_POS; // 0x1C
	[SerializeField] // RVA: 0xCE5540 Offset: 0xCE5540 VA: 0xCE5540
	private UISprite bannerImg; // 0x20
	[SerializeField] // RVA: 0xCE5550 Offset: 0xCE5550 VA: 0xCE5550
	private UIPanel clipPanel; // 0x28
	private VaildGachaInfo info; // 0x30
	private int bannerIdx; // 0x38
	private int moveBannerIdx; // 0x3C
	private UIPanel scrollPanel; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xCE5560 Offset: 0xCE5560 VA: 0xCE5560
	[DebuggerBrowsableAttribute] // RVA: 0xCE5560 Offset: 0xCE5560 VA: 0xCE5560
	private SummonMiniBannerComponent.CallbackFunc callbackFunc; // 0x48

	// Methods

	// RVA: 0x1DB5338 Offset: 0x1DB5338 VA: 0x1DB5338
	public void .ctor() { }

	// RVA: 0x1DB5350 Offset: 0x1DB5350 VA: 0x1DB5350
	private void add_callbackFunc(SummonMiniBannerComponent.CallbackFunc value) { }

	// RVA: 0x1DB543C Offset: 0x1DB543C VA: 0x1DB543C
	private void remove_callbackFunc(SummonMiniBannerComponent.CallbackFunc value) { }

	// RVA: 0x1DB5528 Offset: 0x1DB5528 VA: 0x1DB5528
	public void SetBannerInfo(VaildGachaInfo info, int idx, int moveIdx, GameObject bannerAtlas, string imgName, SummonMiniBannerComponent.CallbackFunc callback, UIPanel parent) { }

	// RVA: 0x1DB5660 Offset: 0x1DB5660 VA: 0x1DB5660
	public void Update() { }

	// RVA: 0x1DB5788 Offset: 0x1DB5788 VA: 0x1DB5788
	public VaildGachaInfo GetBannerSummonInfo() { }

	// RVA: 0x1DB5790 Offset: 0x1DB5790 VA: 0x1DB5790
	public int GetBannerIndex() { }

	// RVA: 0x1DB5798 Offset: 0x1DB5798 VA: 0x1DB5798
	public int GetMoveBannerIndex() { }

	// RVA: 0x1DB57A0 Offset: 0x1DB57A0 VA: 0x1DB57A0
	public void SetEnableCollider(bool isEnable) { }

	// RVA: 0x1DB5864 Offset: 0x1DB5864 VA: 0x1DB5864
	public void OnClickBanner() { }
}

// Namespace: 
public sealed class SummonMiniBannerComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 10737
{
	// Methods

	// RVA: 0x1DB5AAC Offset: 0x1DB5AAC VA: 0x1DB5AAC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1DB5880 Offset: 0x1DB5880 VA: 0x1DB5880 Slot: 11
	public virtual void Invoke(int moveIndex) { }

	// RVA: 0x1DB5ABC Offset: 0x1DB5ABC VA: 0x1DB5ABC Slot: 12
	public virtual IAsyncResult BeginInvoke(int moveIndex, AsyncCallback callback, object object) { }

	// RVA: 0x1DB5B48 Offset: 0x1DB5B48 VA: 0x1DB5B48 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SummonResultComponent : BaseMonoBehaviour // TypeDefIndex: 10738
{
	// Fields
	public PlayMakerFSM fsm; // 0x18
	public GameObject backImg; // 0x20
	public UIWidget mWidget; // 0x28
	public GameObject targetGo; // 0x30
	public UIGrid fstGrid; // 0x38
	public UIGrid scdGrid; // 0x40
	public GameObject changeSceneBtnInfo; // 0x48
	public GameObject closeInfo; // 0x50
	[SerializeField] // RVA: 0xCE559C Offset: 0xCE559C VA: 0xCE559C
	private UILabel formationBtnLabel; // 0x58
	[SerializeField] // RVA: 0xCE55AC Offset: 0xCE55AC VA: 0xCE55AC
	private UILabel combineBtnLabel; // 0x60
	[SerializeField] // RVA: 0xCE55BC Offset: 0xCE55BC VA: 0xCE55BC
	private UILabel summonBtnLabel; // 0x68
	[SerializeField] // RVA: 0xCE55CC Offset: 0xCE55CC VA: 0xCE55CC
	private UILabel sellBtnLabel; // 0x70
	[SerializeField] // RVA: 0xCE55DC Offset: 0xCE55DC VA: 0xCE55DC
	private UIButton summonBtn; // 0x78
	[SerializeField] // RVA: 0xCE55EC Offset: 0xCE55EC VA: 0xCE55EC
	private UISprite summonBtnSpr; // 0x80
	[SerializeField] // RVA: 0xCE55FC Offset: 0xCE55FC VA: 0xCE55FC
	private UIButton formationBtn; // 0x88
	[SerializeField] // RVA: 0xCE560C Offset: 0xCE560C VA: 0xCE560C
	private UISprite formationBtnSpr; // 0x90
	[SerializeField] // RVA: 0xCE561C Offset: 0xCE561C VA: 0xCE561C
	private UIButton combineBtn; // 0x98
	[SerializeField] // RVA: 0xCE562C Offset: 0xCE562C VA: 0xCE562C
	private UISprite combineBtnSpr; // 0xA0
	[SerializeField] // RVA: 0xCE563C Offset: 0xCE563C VA: 0xCE563C
	private UIButton sellBtn; // 0xA8
	[SerializeField] // RVA: 0xCE564C Offset: 0xCE564C VA: 0xCE564C
	private UISprite sellBtnSpr; // 0xB0
	public UILabel svtTitleLb; // 0xB8
	public UILabel svtNumLb; // 0xC0
	public UILabel svtMaxLb; // 0xC8
	public UILabel svtEqTitleLb; // 0xD0
	public UILabel svtEqNumLb; // 0xD8
	public UILabel svtEqMaxLb; // 0xE0
