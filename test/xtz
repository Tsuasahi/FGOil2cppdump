	internal int kind; // 0x10

	// Methods

	// RVA: 0xF59018 Offset: 0xF59018 VA: 0xF59018
	public void .ctor() { }

	// RVA: 0xF59320 Offset: 0xF59320 VA: 0xF59320
	internal bool <>m__0(int x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45574 Offset: 0xC45574 VA: 0xC45574
private sealed class AutomaticSaleDlgComponent.<GetDisableList>c__AnonStorey3 // TypeDefIndex: 10712
{
	// Fields
	internal int i; // 0x10

	// Methods

	// RVA: 0xF5926C Offset: 0xF5926C VA: 0xF5926C
	public void .ctor() { }

	// RVA: 0xF592F0 Offset: 0xF592F0 VA: 0xF592F0
	internal bool <>m__0(int x) { }
}

// Namespace: 
public class AutoSellInfoComponent : MonoBehaviour // TypeDefIndex: 10713
{
	// Fields
	[SerializeField] // RVA: 0xC78370 Offset: 0xC78370 VA: 0xC78370
	protected GameObject line; // 0x18
	[SerializeField] // RVA: 0xC78380 Offset: 0xC78380 VA: 0xC78380
	protected GameObject manaInfo; // 0x20
	[SerializeField] // RVA: 0xC78390 Offset: 0xC78390 VA: 0xC78390
	protected GameObject qpInfo; // 0x28
	[SerializeField] // RVA: 0xC783A0 Offset: 0xC783A0 VA: 0xC783A0
	protected UILabel manaLabel; // 0x30
	[SerializeField] // RVA: 0xC783B0 Offset: 0xC783B0 VA: 0xC783B0
	protected UILabel qpLabel; // 0x38

	// Methods

	// RVA: 0xF562C8 Offset: 0xF562C8 VA: 0xF562C8
	public void .ctor() { }

	// RVA: 0xF562D0 Offset: 0xF562D0 VA: 0xF562D0
	public void Clear() { }

	// RVA: 0xF56414 Offset: 0xF56414 VA: 0xF56414
	public void SetData(int mana, int qp, int befMana = -1, int befQp = -1) { }
}

// Namespace: 
public class GachaBannerComponent : MonoBehaviour // TypeDefIndex: 10714
{
	// Fields
	[SerializeField] // RVA: 0xC783C0 Offset: 0xC783C0 VA: 0xC783C0
	protected UISprite bannerImg; // 0x18
	[SerializeField] // RVA: 0xC783D0 Offset: 0xC783D0 VA: 0xC783D0
	protected GameObject closeInfo; // 0x20
	[SerializeField] // RVA: 0xC783E0 Offset: 0xC783E0 VA: 0xC783E0
	protected UISprite closeImg; // 0x28
	[SerializeField] // RVA: 0xC783F0 Offset: 0xC783F0 VA: 0xC783F0
	protected UILabel closeTxtLb; // 0x30
	[SerializeField] // RVA: 0xC78400 Offset: 0xC78400 VA: 0xC78400
	protected UIPanel clipPanel; // 0x38
	[SerializeField] // RVA: 0xC78410 Offset: 0xC78410 VA: 0xC78410
	private UILabel pickupMessage; // 0x40
	[SerializeField] // RVA: 0xC78420 Offset: 0xC78420 VA: 0xC78420
	private GameObject pickupMessageParent; // 0x48
	private VaildGachaInfo info; // 0x50
	private int bannerIdx; // 0x58
	private int moveBannerIdx; // 0x5C

	// Methods

	// RVA: 0x192FED8 Offset: 0x192FED8 VA: 0x192FED8
	public void .ctor() { }

	// RVA: 0x192FEE0 Offset: 0x192FEE0 VA: 0x192FEE0
	public void setBannerGachaInfo(VaildGachaInfo data, int idx, int moveIdx, GameObject bannerAtlas, string imgName) { }

	// RVA: 0x19300CC Offset: 0x19300CC VA: 0x19300CC
	public void UpdateDisplay() { }

	// RVA: 0x19303B8 Offset: 0x19303B8 VA: 0x19303B8
	public VaildGachaInfo getBannerGachaInfo() { }

	// RVA: 0x19303C0 Offset: 0x19303C0 VA: 0x19303C0
	public int getBannerIdx() { }

	// RVA: 0x19303C8 Offset: 0x19303C8 VA: 0x19303C8
	public int getMoveBannerIdx() { }

	// RVA: 0x19303D0 Offset: 0x19303D0 VA: 0x19303D0
	public void setEnabledCollider(bool isEnable) { }

	// RVA: 0x1930448 Offset: 0x1930448 VA: 0x1930448
	public void OnClickDetail() { }
}

// Namespace: 
public class GachaInfos // TypeDefIndex: 10715
{
	// Fields
	public bool isNew; // 0x10
	public long userSvtId; // 0x18
	public int type; // 0x20
	public int objectId; // 0x24
	public int num; // 0x28
	public int limitCount; // 0x2C
	public int sellQp; // 0x30
	public int sellMana; // 0x34
	public int svtCoinNum; // 0x38

	// Methods

	// RVA: 0x1931C50 Offset: 0x1931C50 VA: 0x1931C50
	public void .ctor() { }
}

// Namespace: 
public class GachaRqParamData // TypeDefIndex: 10716
{
	// Fields
	public int gachaType; // 0x10
	public int gachaId; // 0x14
	public int warId; // 0x18
	public int gachaTime; // 0x1C
	public int gachaResourceNum; // 0x20
	public int ticketItemId; // 0x24
	public int shopIdIdx; // 0x28
	public int gachaSubId; // 0x2C
	public int[] storyAdjustIds; // 0x30
	public bool isAppendSummon; // 0x38

	// Methods

	// RVA: 0x1932838 Offset: 0x1932838 VA: 0x1932838
	public void .ctor() { }
}

// Namespace: 
public class SummonHistoryDialog : TextLabelScrollDialog // TypeDefIndex: 10717
{
	// Fields
	[HeaderAttribute] // RVA: 0xC78430 Offset: 0xC78430 VA: 0xC78430
	[SerializeField] // RVA: 0xC78430 Offset: 0xC78430 VA: 0xC78430
	private SummonHistoryListViewManager summonHistoryListViewManager; // 0xA0
	[HeaderAttribute] // RVA: 0xC7847C Offset: 0xC7847C VA: 0xC7847C
	[SerializeField] // RVA: 0xC7847C Offset: 0xC7847C VA: 0xC7847C
	private UILabel summonNameLabel; // 0xA8
	[HeaderAttribute] // RVA: 0xC784C8 Offset: 0xC784C8 VA: 0xC784C8
	[SerializeField] // RVA: 0xC784C8 Offset: 0xC784C8 VA: 0xC784C8
	private UILabel UpperMessageLabel; // 0xB0

	// Methods

	// RVA: 0x17F1330 Offset: 0x17F1330 VA: 0x17F1330
	public void .ctor() { }

	// RVA: 0x17F1338 Offset: 0x17F1338 VA: 0x17F1338 Slot: 7
	protected override void Init() { }

	// RVA: 0x17F1374 Offset: 0x17F1374 VA: 0x17F1374
	public void Open(VaildGachaInfo gachaInfo) { }
}

// Namespace: 
public class SummonHistoryListViewItem : ListViewItem // TypeDefIndex: 10718
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC78514 Offset: 0xC78514 VA: 0xC78514
	[DebuggerBrowsableAttribute] // RVA: 0xC78514 Offset: 0xC78514 VA: 0xC78514
	private string <Message>k__BackingField; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC78550 Offset: 0xC78550 VA: 0xC78550
	[DebuggerBrowsableAttribute] // RVA: 0xC78550 Offset: 0xC78550 VA: 0xC78550
	private SummonHistoryListViewItem.LayoutType <Layout>k__BackingField; // 0x78

	// Properties
	public string Message { get; set; }
	public SummonHistoryListViewItem.LayoutType Layout { get; set; }

	// Methods

	// RVA: 0x17F1D50 Offset: 0x17F1D50 VA: 0x17F1D50
	public void .ctor(int index, string message, SummonHistoryListViewItem.LayoutType layout) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1C98 Offset: 0xCD1C98 VA: 0xCD1C98
	// RVA: 0x17F1D9C Offset: 0x17F1D9C VA: 0x17F1D9C
	public string get_Message() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1CA8 Offset: 0xCD1CA8 VA: 0xCD1CA8
	// RVA: 0x17F1D8C Offset: 0x17F1D8C VA: 0x17F1D8C
	private void set_Message(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1CB8 Offset: 0xCD1CB8 VA: 0xCD1CB8
	// RVA: 0x17F1DA4 Offset: 0x17F1DA4 VA: 0x17F1DA4
	public SummonHistoryListViewItem.LayoutType get_Layout() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1CC8 Offset: 0xCD1CC8 VA: 0xCD1CC8
	// RVA: 0x17F1D94 Offset: 0x17F1D94 VA: 0x17F1D94
	private void set_Layout(SummonHistoryListViewItem.LayoutType value) { }
}

// Namespace: 
public enum SummonHistoryListViewItem.LayoutType // TypeDefIndex: 10719
{
	// Fields
	public int value__; // 0x0
	public const SummonHistoryListViewItem.LayoutType Message = 0;
	public const SummonHistoryListViewItem.LayoutType Datetime = 1;
}

// Namespace: 
public class SummonHistoryListViewItemDraw : MonoBehaviour // TypeDefIndex: 10720
{
	// Fields
	[SerializeField] // RVA: 0xC7858C Offset: 0xC7858C VA: 0xC7858C
	private UILabel messageLabel; // 0x18
	[SerializeField] // RVA: 0xC7859C Offset: 0xC7859C VA: 0xC7859C
	private UILabel datetimeLabel; // 0x20
	[SerializeField] // RVA: 0xC785AC Offset: 0xC785AC VA: 0xC785AC
	private UILabel dotLabel; // 0x28

	// Methods

	// RVA: 0x17F1DAC Offset: 0x17F1DAC VA: 0x17F1DAC
	public void .ctor() { }

	// RVA: 0x17F1DB4 Offset: 0x17F1DB4 VA: 0x17F1DB4
	public void SetItem(SummonHistoryListViewItem item) { }
}

// Namespace: 
public class SummonHistoryListViewManager : ListViewManager // TypeDefIndex: 10721
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC785BC Offset: 0xC785BC VA: 0xC785BC
	private static Func<UserGachaHistoryEntity, long> <>f__am$cache0; // 0x0

	// Properties
	public float ListViewHeight { get; }

	// Methods

	// RVA: 0x17F2004 Offset: 0x17F2004 VA: 0x17F2004
	public void .ctor() { }

	// RVA: 0x17F1D0C Offset: 0x17F1D0C VA: 0x17F1D0C
	public float get_ListViewHeight() { }

	// RVA: 0x17F16A0 Offset: 0x17F16A0 VA: 0x17F16A0
	public void CreateList() { }

	// RVA: 0x17F200C Offset: 0x17F200C VA: 0x17F200C Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1CD8 Offset: 0xCD1CD8 VA: 0xCD1CD8
	// RVA: 0x17F2194 Offset: 0x17F2194 VA: 0x17F2194
	private static long <CreateList>m__0(UserGachaHistoryEntity entity) { }
}

// Namespace: 
public class SummonHistoryListViewObject : ListViewObject // TypeDefIndex: 10722
{
	// Fields
	private SummonHistoryListViewItemDraw itemDraw; // 0x70

	// Methods

	// RVA: 0x17F21BC Offset: 0x17F21BC VA: 0x17F21BC
	public void .ctor() { }

	// RVA: 0x17F2224 Offset: 0x17F2224 VA: 0x17F2224
	private void Awake() { }

	// RVA: 0x17F2094 Offset: 0x17F2094 VA: 0x17F2094
	public void SetupDisp() { }
}

// Namespace: 
public class MaskWithOpening : MonoBehaviour // TypeDefIndex: 10723
{
	// Fields
	[SerializeField] // RVA: 0xC785CC Offset: 0xC785CC VA: 0xC785CC
	private BoxCollider mask1; // 0x18
	[SerializeField] // RVA: 0xC785DC Offset: 0xC785DC VA: 0xC785DC
	private BoxCollider mask2; // 0x20
	[SerializeField] // RVA: 0xC785EC Offset: 0xC785EC VA: 0xC785EC
	private BoxCollider mask3; // 0x28
	[SerializeField] // RVA: 0xC785FC Offset: 0xC785FC VA: 0xC785FC
	private BoxCollider mask4; // 0x30

	// Methods

	// RVA: 0x1495054 Offset: 0x1495054 VA: 0x1495054
	public void .ctor() { }

	// RVA: 0x149505C Offset: 0x149505C VA: 0x149505C
	private void Start() { }

	// RVA: 0x149512C Offset: 0x149512C VA: 0x149512C
	public void SetDepth(int depth) { }

	// RVA: 0x14951A4 Offset: 0x14951A4 VA: 0x14951A4
	public void SetOpening(Rect hole, int depth) { }

	// RVA: 0x14955C4 Offset: 0x14955C4 VA: 0x14955C4
	public void SetBlock() { }
}

// Namespace: 
public class PaySummonInfoComponent : MonoBehaviour // TypeDefIndex: 10724
{
	// Fields
	public UILabel paySummonDetailLb; // 0x18
	public UISprite payTitle; // 0x20
	public UISprite ticketTitle; // 0x28
	public GameObject stoneInfo; // 0x30
	public UILabel stoneNumLb; // 0x38
	public GameObject ticketInfo; // 0x40
	public UILabel ticketNumLb; // 0x48
	public UIButton paySummonBtn; // 0x50
	public UISprite paySummonBntImg; // 0x58
	public UISprite paySummonBg; // 0x60
	public GameObject payBtnInfo; // 0x68
	private VaildGachaInfo currentGachaData; // 0x70
	private bool isTicket; // 0x78
	private int ticketNum; // 0x7C
	private int haveStoneNum; // 0x80
	private int price; // 0x84
	private int gachaTime; // 0x88
	private GachaRqParamData requestData; // 0x90
	protected PaySummonInfoComponent.ClickDelegate clickCallbackFunc; // 0x98

	// Methods

	// RVA: 0x1779D68 Offset: 0x1779D68 VA: 0x1779D68
	public void .ctor() { }

	// RVA: 0x1779D78 Offset: 0x1779D78 VA: 0x1779D78
	public void init() { }

	// RVA: 0x1779DF8 Offset: 0x1779DF8 VA: 0x1779DF8
	public void setPaySummonInfo(VaildGachaInfo gachaData, PaySummonInfoComponent.ClickDelegate callback) { }

	// RVA: 0x177A078 Offset: 0x177A078 VA: 0x177A078
	public void setPaySummonDispInfo() { }

	// RVA: 0x177A504 Offset: 0x177A504 VA: 0x177A504
	public int getUsrStoneNum() { }

	// RVA: 0x177A50C Offset: 0x177A50C VA: 0x177A50C
	public int getUsrTicketNum() { }

	// RVA: 0x177A514 Offset: 0x177A514 VA: 0x177A514
	public int getSummonPrice() { }

	// RVA: 0x177A51C Offset: 0x177A51C VA: 0x177A51C
	public void setCurrentBannerInfo(VaildGachaInfo gachaData) { }

	// RVA: 0x1779E64 Offset: 0x1779E64 VA: 0x1779E64
	public void setEnableSummonBtn(bool isOpen) { }

	// RVA: 0x177A558 Offset: 0x177A558 VA: 0x177A558
	public void setDispSummonBtn(bool isDisp) { }

	// RVA: 0x177A76C Offset: 0x177A76C VA: 0x177A76C
	public void setAlphaSummonBtn(bool isDisp) { }

	// RVA: 0x177A784 Offset: 0x177A784 VA: 0x177A784
	private void MoveAlpha(GameObject target) { }

	// RVA: 0x177A9A4 Offset: 0x177A9A4 VA: 0x177A9A4
	private void ClearAlpha(GameObject target) { }

	// RVA: 0x177AAF8 Offset: 0x177AAF8 VA: 0x177AAF8
	public void OnClickGacha() { }
}

// Namespace: 
public sealed class PaySummonInfoComponent.ClickDelegate : MulticastDelegate // TypeDefIndex: 10725
{
	// Methods

	// RVA: 0x177B04C Offset: 0x177B04C VA: 0x177B04C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x177ACAC Offset: 0x177ACAC VA: 0x177ACAC Slot: 11
	public virtual void Invoke(GachaRqParamData paramData) { }

	// RVA: 0x177B05C Offset: 0x177B05C VA: 0x177B05C Slot: 12
	public virtual IAsyncResult BeginInvoke(GachaRqParamData paramData, AsyncCallback callback, object object) { }

	// RVA: 0x177B080 Offset: 0x177B080 VA: 0x177B080 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class PointSummonInfoComponent : MonoBehaviour // TypeDefIndex: 10726
{
	// Fields
	public GameObject singleGachaBtnInfo; // 0x18
	public UIButton freeGachaBtn; // 0x20
	public UISprite freeGachaBtnImg; // 0x28
	public UISprite freeGachaTxtImg; // 0x30
	public GameObject multiGachaBtnInfo; // 0x38
	public UIButton singleBtn; // 0x40
	public UISprite singleBtnImg; // 0x48
	public UISprite singleNumImg; // 0x50
	public UIButton multiBtn; // 0x58
	public UISprite multiBtnImg; // 0x60
	public UISprite multiNumImg; // 0x68
	public UILabel pointGachaDetailLb; // 0x70
	public UILabel pointNumLb; // 0x78
	public UISprite pointSummonBg; // 0x80
	private GachaEntity pointGachaData; // 0x88
	private GachaRqParamData requestData; // 0x90
	private int price; // 0x98
	private int gachaTime; // 0x9C
	private bool isFree; // 0xA0
	protected PointSummonInfoComponent.ClickDelegate clickCallbackFunc; // 0xA8

	// Methods

	// RVA: 0x177F050 Offset: 0x177F050 VA: 0x177F050
	public void .ctor() { }

	// RVA: 0x177F060 Offset: 0x177F060 VA: 0x177F060
	public void init() { }

	// RVA: 0x177F0C0 Offset: 0x177F0C0 VA: 0x177F0C0
	public void setPointSummonInfo(GachaEntity pointGachaEnt, PointSummonInfoComponent.ClickDelegate callback) { }

	// RVA: 0x177F11C Offset: 0x177F11C VA: 0x177F11C
	public void setPointSummonDispInfo() { }

	// RVA: 0x177F8B0 Offset: 0x177F8B0 VA: 0x177F8B0
	public bool getIsFree() { }

	// RVA: 0x177F720 Offset: 0x177F720 VA: 0x177F720
	private void setMultiGachaNum(int price, int usrFriendPoint) { }

	// RVA: 0x177F8B8 Offset: 0x177F8B8 VA: 0x177F8B8
	public void setDispPointBtn(bool isDisp) { }

	// RVA: 0x177FB00 Offset: 0x177FB00 VA: 0x177FB00
	public void OnClickGacha() { }

	// RVA: 0x177FFE0 Offset: 0x177FFE0 VA: 0x177FFE0
	public void OnClickMutiGacha() { }

	// RVA: 0x1780124 Offset: 0x1780124 VA: 0x1780124
	public GachaRqParamData getRequetParam() { }
}

// Namespace: 
public sealed class PointSummonInfoComponent.ClickDelegate : MulticastDelegate // TypeDefIndex: 10727
{
	// Methods

	// RVA: 0x178012C Offset: 0x178012C VA: 0x178012C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x177FC40 Offset: 0x177FC40 VA: 0x177FC40 Slot: 11
	public virtual void Invoke(GachaRqParamData paramData) { }

	// RVA: 0x178013C Offset: 0x178013C VA: 0x178013C Slot: 12
	public virtual IAsyncResult BeginInvoke(GachaRqParamData paramData, AsyncCallback callback, object object) { }

	// RVA: 0x1780160 Offset: 0x1780160 VA: 0x1780160 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SelectBannerSliderIcon : MonoBehaviour // TypeDefIndex: 10728
{
	// Fields
	public UISprite onImg; // 0x18
	public UISprite offImg; // 0x20

	// Methods

	// RVA: 0x1735C10 Offset: 0x1735C10 VA: 0x1735C10
	public void .ctor() { }

	// RVA: 0x1735C18 Offset: 0x1735C18 VA: 0x1735C18
	public void setEnableOnImg(bool isOn) { }

	// RVA: 0x1735C68 Offset: 0x1735C68 VA: 0x1735C68
	public void setEnableOffImg(bool isOff) { }
}

// Namespace: 
public class StoryGachaAdjustData // TypeDefIndex: 10729
{
	// Fields
	public GachaStoryAdjustEntity targetEntity; // 0x10
	public int[] adjustIds; // 0x18

	// Methods

	// RVA: 0x17A76C8 Offset: 0x17A76C8 VA: 0x17A76C8
	public void .ctor() { }
}

// Namespace: 
public class SummonCautionDlgComponent : BaseDialog // TypeDefIndex: 10730
{
	// Fields
	[SerializeField] // RVA: 0xC7860C Offset: 0xC7860C VA: 0xC7860C
	protected GameObject cautionInfo; // 0x58
	[SerializeField] // RVA: 0xC7861C Offset: 0xC7861C VA: 0xC7861C
	protected UILabel titleLabel; // 0x60
	[SerializeField] // RVA: 0xC7862C Offset: 0xC7862C VA: 0xC7862C
	protected UILabel messageLabel; // 0x68
	[SerializeField] // RVA: 0xC7863C Offset: 0xC7863C VA: 0xC7863C
	protected UILabel confirmBtnLabel; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC7864C Offset: 0xC7864C VA: 0xC7864C
	[DebuggerBrowsableAttribute] // RVA: 0xC7864C Offset: 0xC7864C VA: 0xC7864C
	private SummonCautionDlgComponent.CallbackFunc callbackFunc; // 0x78
	protected Action closeCallbackFunc; // 0x80

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x11800D4 Offset: 0x11800D4 VA: 0x11800D4
	public void .ctor() { }

	// RVA: 0x118013C Offset: 0x118013C VA: 0x118013C
	protected void add_callbackFunc(SummonCautionDlgComponent.CallbackFunc value) { }

	// RVA: 0x1180228 Offset: 0x1180228 VA: 0x1180228
	protected void remove_callbackFunc(SummonCautionDlgComponent.CallbackFunc value) { }

	// RVA: 0x1180314 Offset: 0x1180314 VA: 0x1180314
	public void Init() { }

	// RVA: 0x1180424 Offset: 0x1180424 VA: 0x1180424
	public void OpenCautionMessageDlg(string title, string message, SummonCautionDlgComponent.CallbackFunc callback) { }

	// RVA: 0x1180574 Offset: 0x1180574 VA: 0x1180574
	public void Close(Action callback) { }

	// RVA: 0x11805FC Offset: 0x11805FC VA: 0x11805FC
	protected void EndClose() { }

	// RVA: 0x1180638 Offset: 0x1180638 VA: 0x1180638
	protected void Callback(bool result) { }

	// RVA: 0x1180884 Offset: 0x1180884 VA: 0x1180884
	public void OnClickDecide() { }

	// RVA: 0x11808A4 Offset: 0x11808A4 VA: 0x11808A4
	public void OnClickCancel() { }

	// RVA: 0x11808C4 Offset: 0x11808C4 VA: 0x11808C4 Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
public sealed class SummonCautionDlgComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 10731
{
	// Methods

	// RVA: 0x118090C Offset: 0x118090C VA: 0x118090C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1180658 Offset: 0x1180658 VA: 0x1180658 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x118091C Offset: 0x118091C VA: 0x118091C Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x11809AC Offset: 0x11809AC VA: 0x11809AC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SummonConfirmDlgComponent : BaseDialog // TypeDefIndex: 10732
{
	// Fields
	private static readonly float CONFIRM_DETAIL_LABEL_POS_Y; // 0x0
	private static readonly float CONFIRM_DETAIL_LABEL_CAMPAIGN_POS_Y; // 0x4
	[SerializeField] // RVA: 0xC78688 Offset: 0xC78688 VA: 0xC78688
	protected GameObject defMsgInfo; // 0x58
	[SerializeField] // RVA: 0xC78698 Offset: 0xC78698 VA: 0xC78698
	protected UILabel confirmTitleLabel; // 0x60
	[SerializeField] // RVA: 0xC786A8 Offset: 0xC786A8 VA: 0xC786A8
	protected UILabel confirmDetailLabel; // 0x68
	[SerializeField] // RVA: 0xC786B8 Offset: 0xC786B8 VA: 0xC786B8
	protected GameObject singleMsgInfo; // 0x70
	[SerializeField] // RVA: 0xC786C8 Offset: 0xC786C8 VA: 0xC786C8
	protected UILabel infoMsgLabel; // 0x78
	[SerializeField] // RVA: 0xC786D8 Offset: 0xC786D8 VA: 0xC786D8
	protected UILabel msgLabel; // 0x80
	[SerializeField] // RVA: 0xC786E8 Offset: 0xC786E8 VA: 0xC786E8
	protected GameObject closeBtnObject; // 0x88
	[SerializeField] // RVA: 0xC786F8 Offset: 0xC786F8 VA: 0xC786F8
	protected UIButton closeBtn; // 0x90
	[SerializeField] // RVA: 0xC78708 Offset: 0xC78708 VA: 0xC78708
	protected UILabel closeBtnLb; // 0x98
	[SerializeField] // RVA: 0xC78718 Offset: 0xC78718 VA: 0xC78718
	protected GameObject confirmBtnObject; // 0xA0
	[SerializeField] // RVA: 0xC78728 Offset: 0xC78728 VA: 0xC78728
	protected UILabel confirmBtnLb; // 0xA8
	[SerializeField] // RVA: 0xC78738 Offset: 0xC78738 VA: 0xC78738
	protected GameObject settingBtnObject; // 0xB0
	[SerializeField] // RVA: 0xC78748 Offset: 0xC78748 VA: 0xC78748
	protected UIButton settingBtn; // 0xB8
	[SerializeField] // RVA: 0xC78758 Offset: 0xC78758 VA: 0xC78758
	protected UILabel settingBtnLb; // 0xC0
	[SerializeField] // RVA: 0xC78768 Offset: 0xC78768 VA: 0xC78768
	protected AutomaticSaleDlgComponent autoSaleDlgInfo; // 0xC8
	[SerializeField] // RVA: 0xC78778 Offset: 0xC78778 VA: 0xC78778
	private UILabel campaignLabel; // 0xD0
	[CompilerGeneratedAttribute] // RVA: 0xC78788 Offset: 0xC78788 VA: 0xC78788
	[DebuggerBrowsableAttribute] // RVA: 0xC78788 Offset: 0xC78788 VA: 0xC78788
	private SummonConfirmDlgComponent.CallbackFunc callbackFunc; // 0xD8
	protected Action closeCallbackFunc; // 0xE0
	protected Action autoSaleDialogCloseCallbackFunc; // 0xE8
	protected SummonConfirmDlgComponent.State state; // 0xF0
	protected SeManager.SystemSeKind seKind; // 0xF4

	// Methods

	// RVA: 0x11809B8 Offset: 0x11809B8 VA: 0x11809B8
	public void .ctor() { }

	// RVA: 0x1180A20 Offset: 0x1180A20 VA: 0x1180A20
	protected void add_callbackFunc(SummonConfirmDlgComponent.CallbackFunc value) { }

	// RVA: 0x1180B0C Offset: 0x1180B0C VA: 0x1180B0C
	protected void remove_callbackFunc(SummonConfirmDlgComponent.CallbackFunc value) { }

	// RVA: 0x1180BF8 Offset: 0x1180BF8 VA: 0x1180BF8
	public void Init() { }

	// RVA: 0x1180DDC Offset: 0x1180DDC VA: 0x1180DDC
	public void OpenShortStone(int haveNum, SummonConfirmDlgComponent.CallbackFunc callback) { }

	// RVA: 0x1181250 Offset: 0x1181250 VA: 0x1181250
	public void OpenShortChargeStone(int price, int haveChargeStoneNum, int haveFreeStoneNum, SummonConfirmDlgComponent.CallbackFunc callback) { }

	// RVA: 0x11813C8 Offset: 0x11813C8 VA: 0x11813C8
	public void OpenShortPoint(int havePoint, SummonConfirmDlgComponent.CallbackFunc callback) { }

	// RVA: 0x11814E8 Offset: 0x11814E8 VA: 0x11814E8
	public void OpenConfirmStone(string title, PayType.Type type, int price, int num, int haveStoneNum, int haveFreeStoneNum, int haveChargeStoneNum, int afterStoneNum, int afterFreeStoneNum, int afterChargeStoneNum, SummonConfirmDlgComponent.CallbackFunc callback, bool isAppendSummon = False) { }

	// RVA: 0x118196C Offset: 0x118196C VA: 0x118196C
	public void OpenConfirmTicket(string title, int num, int haveTicketNum, int afterTicketNum, SummonConfirmDlgComponent.CallbackFunc callback) { }

	// RVA: 0x1181B70 Offset: 0x1181B70 VA: 0x1181B70
	public void OpenConfirmPoint(int havePointNum, int needPointNum, int afterPointNum, SummonConfirmDlgComponent.CallbackFunc callback, Action autoSaleDialogCloseCallback) { }

	// RVA: 0x1181CC4 Offset: 0x1181CC4 VA: 0x1181CC4
	public void OpenConfirmFree(SummonConfirmDlgComponent.CallbackFunc callback, Action autoSaleDialogCloseCallback) { }

	// RVA: 0x1180F18 Offset: 0x1180F18 VA: 0x1180F18
	public void Open(string title, string msg, string decideTxt, SummonConfirmDlgComponent.CallbackFunc callback, float msgOffY = 14) { }

	// RVA: 0x1182214 Offset: 0x1182214 VA: 0x1182214
	public void OpenConfirmGroupSummon(int groupId, int price, int haveStoneNum, int haveFreeStoneNum, int haveChargeStoneNum, int afterStoneNum, int afterFreeStoneNum, int afterChargeStoneNum, SummonConfirmDlgComponent.CallbackFunc callback) { }

	// RVA: 0x118201C Offset: 0x118201C VA: 0x118201C
	private void setBtnInfoActive() { }

	// RVA: 0x1182BE0 Offset: 0x1182BE0 VA: 0x1182BE0
	protected void EndOpen() { }

	// RVA: 0x1182BE4 Offset: 0x1182BE4 VA: 0x1182BE4
	public void Close() { }

	// RVA: 0x1182BEC Offset: 0x1182BEC VA: 0x1182BEC
	public void Close(Action callback) { }

	// RVA: 0x1182C74 Offset: 0x1182C74 VA: 0x1182C74
	protected void EndClose() { }

	// RVA: 0x1182CD8 Offset: 0x1182CD8 VA: 0x1182CD8
	protected void Callback(bool result) { }

	// RVA: 0x1182F28 Offset: 0x1182F28 VA: 0x1182F28
	public void OnClickDecide() { }

	// RVA: 0x1182F4C Offset: 0x1182F4C VA: 0x1182F4C
	public void OnClickCancel() { }

	// RVA: 0x1182F70 Offset: 0x1182F70 VA: 0x1182F70
	public void setTutorial(bool isTutorial) { }

	// RVA: 0x1182FAC Offset: 0x1182FAC VA: 0x1182FAC
	public void OnClickSetting() { }

	// RVA: 0x1183090 Offset: 0x1183090 VA: 0x1183090
	private void settingResult(bool res) { }

	// RVA: 0x1183140 Offset: 0x1183140 VA: 0x1183140
	private void OnEnable() { }

	// RVA: 0x11831E8 Offset: 0x11831E8 VA: 0x11831E8
	private static void .cctor() { }
}

// Namespace: 
public sealed class SummonConfirmDlgComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 10733
{
	// Methods

	// RVA: 0x118324C Offset: 0x118324C VA: 0x118324C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1182CFC Offset: 0x1182CFC VA: 0x1182CFC Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x118325C Offset: 0x118325C VA: 0x118325C Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x11832EC Offset: 0x11832EC VA: 0x11832EC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
protected enum SummonConfirmDlgComponent.State // TypeDefIndex: 10734
{
	// Fields
	public int value__; // 0x0
	public const SummonConfirmDlgComponent.State INIT = 0;
	public const SummonConfirmDlgComponent.State SHORT_SERVANT = 1;
	public const SummonConfirmDlgComponent.State SHORT_STONE = 2;
	public const SummonConfirmDlgComponent.State SHORT_POINT = 3;
	public const SummonConfirmDlgComponent.State CONFIRM_STONE = 4;
	public const SummonConfirmDlgComponent.State CONFIRM_TICKET = 5;
	public const SummonConfirmDlgComponent.State CONFIRM_POINT = 6;
	public const SummonConfirmDlgComponent.State CONFIRM_FREE = 7;
}

// Namespace: 
public class SummonControl : BaseMonoBehaviour // TypeDefIndex: 10735
{
	// Fields
	public static readonly int FRIEND_POINT_SUMMON_ID; // 0x0
	public readonly Rect TUTORIAL_SUMMON_ARROW_RECT; // 0x18
	public readonly Vector2 TUTORIAL_SUMMON_ARROW_POS; // 0x28
	public readonly Rect TUTORIAL_MENU_ARROW_RECT; // 0x30
	public readonly Vector2 TUTORIAL_MENU_ARROW_POS; // 0x40
	public readonly Rect TUTORIAL_FORMATION_ARROW_RECT; // 0x48
	public readonly Vector2 TUTORIAL_FORMATION_ARROW_POS; // 0x58
	private readonly string DETAIL_SCRIPT_IDS; // 0x60
	private readonly string DETAIL_SCRIPT_TYPE; // 0x68
	protected static readonly float COLOR_VAL; // 0x4
	protected static readonly string MAINTAIN_IMG; // 0x8
	private static readonly string ARROW_SPRITE_NAME; // 0x10
	public GameObject bgRoot; // 0x70
	public PlayMakerFSM fsm; // 0x78
	public TitleInfoControl titleInfo; // 0x80
	public GameObject maskBgObject; // 0x88
	public GameObject slideIndexPrefab; // 0x90
	public UIGrid sliderGrid; // 0x98
	public UICenterOnChild centerChild; // 0xA0
	public GameObject noneGachaInfo; // 0xA8
	public SummonConfirmDlgComponent confirmDlgInfo; // 0xB0
	public SummonCautionDlgComponent cautionDlgInfo; // 0xB8
	public SummonInfoDlgComponent infoDlgInfo; // 0xC0
	public SummonLimitWarningDlgComponent limitWarningDlgInfo; // 0xC8
	public Transform summonInstance; // 0xD0
	public SummonResultComponent summonResultInfo; // 0xD8
	public GameObject summonBannerInfo; // 0xE0
	public UIButton leftArrowBtn; // 0xE8
	public UIButton rightArrowBtn; // 0xF0
	[SerializeField] // RVA: 0xC787C4 Offset: 0xC787C4 VA: 0xC787C4
	private UISprite leftArrowSprite; // 0xF8
	[SerializeField] // RVA: 0xC787D4 Offset: 0xC787D4 VA: 0xC787D4
	private UISprite rightArrowSprite; // 0x100
	public UIPanel indexPanel; // 0x108
	public GameObject summonBannerPrefab; // 0x110
	public UIScrollView summonBannerScrollView; // 0x118
	public UIWrapContent bannerLoopCtr; // 0x120
	[SerializeField] // RVA: 0xC787E4 Offset: 0xC787E4 VA: 0xC787E4
	private GameObject summonMBannerPrefab; // 0x128
	[SerializeField] // RVA: 0xC787F4 Offset: 0xC787F4 VA: 0xC787F4
	private GameObject summonMBannerObject; // 0x130
	[SerializeField] // RVA: 0xC78804 Offset: 0xC78804 VA: 0xC78804
	private UIScrollView summonMBannerScrollView; // 0x138
	[SerializeField] // RVA: 0xC78814 Offset: 0xC78814 VA: 0xC78814
	private UIWrapContent summonMBannerLoopCtr; // 0x140
	[SerializeField] // RVA: 0xC78824 Offset: 0xC78824 VA: 0xC78824
	private UISprite summonMBannerLineSprite; // 0x148
	[SerializeField] // RVA: 0xC78834 Offset: 0xC78834 VA: 0xC78834
	private UISprite summonMBannerBgSprite; // 0x150
	[SerializeField] // RVA: 0xC78844 Offset: 0xC78844 VA: 0xC78844
	private UICenterOnChild summonMBannerCenterChild; // 0x158
	[SerializeField] // RVA: 0xC78854 Offset: 0xC78854 VA: 0xC78854
	private UIButton summonMBannerLeftArrowBtn; // 0x160
	[SerializeField] // RVA: 0xC78864 Offset: 0xC78864 VA: 0xC78864
	private UIButton summonMBannerRightArrowBtn; // 0x168
	[SerializeField] // RVA: 0xC78874 Offset: 0xC78874 VA: 0xC78874
	private UISprite summonMBannerLeftArrowSprite; // 0x170
	[SerializeField] // RVA: 0xC78884 Offset: 0xC78884 VA: 0xC78884
	private UISprite summonMBannerRightArrowSprite; // 0x178
	private List<SummonMiniBannerComponent> summonMBannerInfoList; // 0x180
	private SummonMiniBannerComponent currentSummonMBannerComponent; // 0x188
	private bool isDragging; // 0x190
	private bool isNotCenterOnSync; // 0x191
	public SummonInfoControl summonInfoCtr; // 0x198
	public GameObject currentResourceInfo; // 0x1A0
	public UISprite stoneNumInfo; // 0x1A8
	public UISprite pointNumInfo; // 0x1B0
	public UILabel currentStoneNumLb; // 0x1B8
	public UILabel currentPointNumLb; // 0x1C0
	public GameObject detailInfo; // 0x1C8
	public GameObject helpImgInfo; // 0x1D0
	public GameObject maskObject; // 0x1D8
	public GameObject summonHelpInfo; // 0x1E0
	public UILabel summonHelpLabel; // 0x1E8
	[SerializeField] // RVA: 0xC78894 Offset: 0xC78894 VA: 0xC78894
	private ServantCoinConfirmDialog overflowSvtCoinInfo; // 0x1F0
	public AutomaticSaleDlgComponent automaticSaleDlgComponent; // 0x1F8
	private Vector3 center; // 0x200
	private UserGameEntity userGameEntity; // 0x210
	private GachaEntity[] payGachaList; // 0x218
	private GachaEntity pointGachaData; // 0x220
	private List<VaildGachaInfo> vaildGachaList; // 0x228
	private GachaMaster gachaMst; // 0x230
	private bool isDailyGacha; // 0x238
	private GachaRqParamData gachaParamData; // 0x240
	private int haveStone; // 0x248
	private int haveFreeStone; // 0x24C
	private int haveChargeStone; // 0x250
	private int needStone; // 0x254
	private int haveTicketNum; // 0x258
	private int afterTicketNum; // 0x25C
	private int friendPoint; // 0x260
	private int needPoint; // 0x264
	private GachaInfos[] gachaResInfoList; // 0x268
	private int[] canRankUpClassIds; // 0x270
	private GetSvtCoin[] overflowSvtCoinInfos; // 0x278
	private int[] extraGiftIds; // 0x280
	private int resType; // 0x288
	private int getSvtIdx; // 0x28C
	private VaildGachaInfo currentGachaInfo; // 0x290
	private int currentIdx; // 0x298
	private int currentMoveIdx; // 0x29C
	private List<GachaBannerComponent> bannerInfoList; // 0x2A0
	private GachaBannerComponent currentBannerComp; // 0x2A8
	private int summonType; // 0x2B0
	private long summonSceneInTime; // 0x2B8
	private List<int> befSvtList; // 0x2C0
	private bool isDoneTutorial; // 0x2C8
	private bool isDoneSecTutorial; // 0x2C9
	private bool isDoneSvtEqTutorial; // 0x2CA
	private SummonEffectComponent summonComp; // 0x2D0
	private Vector3 initBannerPos; // 0x2D8
	private string assetPath; // 0x2E8
	private AssetData bannerAssetData; // 0x2F0
	private GachaEntity[] useGachaData; // 0x2F8
	private List<VaildGachaInfo> useSummonList; // 0x300
	private GachaSubEntity gachaSubEntity; // 0x308
	private int npEnhanceSvtId; // 0x310
	private bool isResult; // 0x314
	[SerializeField] // RVA: 0xC788A4 Offset: 0xC788A4 VA: 0xC788A4
	private GameObject tutorialArrowObj; // 0x318
	[SerializeField] // RVA: 0xC788B4 Offset: 0xC788B4 VA: 0xC788B4
	private SummonHistoryDialog historyDialog; // 0x320
	private SummonControl.TUTORIAL_KIND tutorialKind; // 0x328
	private int mBannerSpringPanelRetryCount; // 0x32C
	private ServantAssetArgs battleAssetArgs; // 0x330
	[CompilerGeneratedAttribute] // RVA: 0xC788C4 Offset: 0xC788C4 VA: 0xC788C4
	private static Action <>f__am$cache0; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC788D4 Offset: 0xC788D4 VA: 0xC788D4
	private static Action <>f__am$cache1; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC788E4 Offset: 0xC788E4 VA: 0xC788E4
	private static Comparison<EventTutorialEntity> <>f__am$cache2; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC788F4 Offset: 0xC788F4 VA: 0xC788F4
	private static Func<string, int> <>f__mg$cache0; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC78904 Offset: 0xC78904 VA: 0xC78904
	private static Action <>f__am$cache3; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC78914 Offset: 0xC78914 VA: 0xC78914
	private static Action <>f__am$cache4; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC78924 Offset: 0xC78924 VA: 0xC78924
	private static Action <>f__am$cache5; // 0x48

	// Properties
	public Vector2 TUTORIAL_MENU_ARROW_POS_FS { get; }
	public Rect TUTORIAL_MENU_ARROW_RECT_FS { get; }
	public Vector2 TUTORIAL_FORMATION_ARROW_POS_FS { get; }
	public Rect TUTORIAL_FORMATION_ARROW_RECT_FS { get; }
	public bool IsResult { get; set; }
	public GachaRqParamData GetNowGachaParamData { get; }

	// Methods

	// RVA: 0x11832F8 Offset: 0x11832F8 VA: 0x11832F8
	public void .ctor() { }

	// RVA: 0x1183514 Offset: 0x1183514 VA: 0x1183514
	private float FSMenuOffsetX() { }

	// RVA: 0x1183580 Offset: 0x1183580 VA: 0x1183580
	private float FSMenuOffsetY() { }

	// RVA: 0x118358C Offset: 0x118358C VA: 0x118358C
	public Vector2 get_TUTORIAL_MENU_ARROW_POS_FS() { }

	// RVA: 0x1183624 Offset: 0x1183624 VA: 0x1183624
	public Rect get_TUTORIAL_MENU_ARROW_RECT_FS() { }

	// RVA: 0x11836B8 Offset: 0x11836B8 VA: 0x11836B8
	public Vector2 get_TUTORIAL_FORMATION_ARROW_POS_FS() { }

	// RVA: 0x11836CC Offset: 0x11836CC VA: 0x11836CC
	public Rect get_TUTORIAL_FORMATION_ARROW_RECT_FS() { }

	// RVA: 0x1183718 Offset: 0x1183718 VA: 0x1183718
	public bool get_IsResult() { }

	// RVA: 0x1183720 Offset: 0x1183720 VA: 0x1183720
	public void set_IsResult(bool value) { }

	// RVA: 0x118372C Offset: 0x118372C VA: 0x118372C
	public void checkSummonTutorial() { }

	// RVA: 0x1184280 Offset: 0x1184280 VA: 0x1184280
	public void returnTutorial() { }

	// RVA: 0x1183EB8 Offset: 0x1183EB8 VA: 0x1183EB8
	private void setTutorialCtrEnable(bool isEnable) { }

	// RVA: 0x11840A0 Offset: 0x11840A0 VA: 0x11840A0
	private void setEnableTutorialBtn(bool isTutorial) { }

	// RVA: 0x1183AD8 Offset: 0x1183AD8 VA: 0x1183AD8
	private void progTutorial() { }

	// RVA: 0x118428C Offset: 0x118428C VA: 0x118428C
	private void openSummonExeArrow() { }

	// RVA: 0x1184330 Offset: 0x1184330 VA: 0x1184330
	private void openAfterSummonInfo() { }

	// RVA: 0x1184558 Offset: 0x1184558 VA: 0x1184558
	private void exeFormation() { }

	// RVA: 0x1184714 Offset: 0x1184714 VA: 0x1184714
	private void openSvtEqInfo() { }

	// RVA: 0x1184B08 Offset: 0x1184B08 VA: 0x1184B08
	public void setSummonData() { }

	// RVA: 0x11856B8 Offset: 0x11856B8 VA: 0x11856B8
	private void LoadBannerEnd(AssetData data) { }

	// RVA: 0x1186E18 Offset: 0x1186E18 VA: 0x1186E18
	private void releaseBannerData() { }

	// RVA: 0x1186E94 Offset: 0x1186E94 VA: 0x1186E94
	public void quit() { }

	// RVA: 0x1186C14 Offset: 0x1186C14 VA: 0x1186C14
	private void ResetArrowTween() { }

	// RVA: 0x1185090 Offset: 0x1185090 VA: 0x1185090
	private void setUserResourceDisp() { }

	// RVA: 0x1185294 Offset: 0x1185294 VA: 0x1185294
	private void checkValidGachaList() { }

	// RVA: 0x11873A4 Offset: 0x11873A4 VA: 0x11873A4
	private bool CheckStoryGachaAdjustData(out StoryGachaAdjustData adjustData, int gachaId) { }

	// RVA: 0x11875E0 Offset: 0x11875E0 VA: 0x11875E0
	private bool checkIsMaxDrawNum(UserGachaEntity drawUsrGachaEnt, GachaEntity drawGachaEnt) { }

	// RVA: 0x1187A3C Offset: 0x1187A3C VA: 0x1187A3C
	private bool checkIsDrawGroupSummon(GachaEntity drawGachaEnt, int groupId) { }

	// RVA: 0x1187440 Offset: 0x1187440 VA: 0x1187440
	private UserGachaEntity getUserGachaData(int gachaId) { }

	// RVA: 0x1187570 Offset: 0x1187570 VA: 0x1187570
	private GachaEntity getCurrentGachaData(int gachaId) { }

	// RVA: 0x11876F0 Offset: 0x11876F0 VA: 0x11876F0
	private void setVaildInfoList(GachaEntity data, StoryGachaAdjustData adjustData) { }

	// RVA: 0x1187BC0 Offset: 0x1187BC0 VA: 0x1187BC0
	private void setUseData(VaildGachaInfo info) { }

	// RVA: 0x1187D40 Offset: 0x1187D40 VA: 0x1187D40
	private int SlotCompare(VaildGachaInfo a, VaildGachaInfo b) { }

	// RVA: 0x1185838 Offset: 0x1185838 VA: 0x1185838
	private void createSummonInfo() { }

