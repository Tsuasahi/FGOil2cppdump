
	// RVA: 0x180589C Offset: 0x180589C VA: 0x180589C
	public void OnSelected() { }
}

// Namespace: 
public sealed class SupportSelectDeckListViewObject.OnSelectEvent : MulticastDelegate // TypeDefIndex: 10817
{
	// Methods

	// RVA: 0x18049D0 Offset: 0x18049D0 VA: 0x18049D0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1805984 Offset: 0x1805984 VA: 0x1805984 Slot: 11
	public virtual void Invoke(int deckId) { }

	// RVA: 0x1805BB0 Offset: 0x1805BB0 VA: 0x1805BB0 Slot: 12
	public virtual IAsyncResult BeginInvoke(int deckId, AsyncCallback callback, object object) { }

	// RVA: 0x1805C3C Offset: 0x1805C3C VA: 0x1805C3C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SupportSelectEditMenu : BaseDialog // TypeDefIndex: 10818
{
	// Fields
	[SerializeField] // RVA: 0xC7962C Offset: 0xC7962C VA: 0xC7962C
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC7963C Offset: 0xC7963C VA: 0xC7963C
	private UILabel supportNameLabel; // 0x60
	[SerializeField] // RVA: 0xC7964C Offset: 0xC7964C VA: 0xC7964C
	private UILabel messageLabel; // 0x68
	[SerializeField] // RVA: 0xC7965C Offset: 0xC7965C VA: 0xC7965C
	private UICommonButton copyButton; // 0x70
	[SerializeField] // RVA: 0xC7966C Offset: 0xC7966C VA: 0xC7966C
	private UICommonButton removeAllButton; // 0x78
	[SerializeField] // RVA: 0xC7967C Offset: 0xC7967C VA: 0xC7967C
	private UICommonButton initAllButton; // 0x80
	[SerializeField] // RVA: 0xC7968C Offset: 0xC7968C VA: 0xC7968C
	private UICommonButton removeEquipButton; // 0x88
	[SerializeField] // RVA: 0xC7969C Offset: 0xC7969C VA: 0xC7969C
	private UICommonButton changeNameButton; // 0x90
	[SerializeField] // RVA: 0xC796AC Offset: 0xC796AC VA: 0xC796AC
	private UICommonButton cancelButton; // 0x98
	private SupportSelectEditMenu.State currentState; // 0xA0
	private SupportSelectEditMenu.OnClickButtonEvent onClickButton; // 0xA8

	// Properties
	private bool IsEnableInput { get; }
	protected override GameObject closeBtnObject { get; }

	// Methods

	// RVA: 0x1805C48 Offset: 0x1805C48 VA: 0x1805C48
	public void .ctor() { }

	// RVA: 0x1805CB8 Offset: 0x1805CB8 VA: 0x1805CB8
	private bool get_IsEnableInput() { }

	// RVA: 0x1805CC8 Offset: 0x1805CC8 VA: 0x1805CC8
	public void Open(SupportServantData deckData, bool isEditting, SupportSelectEditMenu.OnClickButtonEvent onClickButton) { }

	// RVA: 0x1806198 Offset: 0x1806198 VA: 0x1806198
	private void OnFinishedOpen() { }

	// RVA: 0x18061A4 Offset: 0x18061A4 VA: 0x18061A4
	public void Close() { }

	// RVA: 0x1806224 Offset: 0x1806224 VA: 0x1806224
	private void OnFinishedClose() { }

	// RVA: 0x1806098 Offset: 0x1806098 VA: 0x1806098
	private void SetButtonText(UICommonButton target, string localizationKey) { }

	// RVA: 0x180622C Offset: 0x180622C VA: 0x180622C
	public void OnClickCopy() { }

	// RVA: 0x18064EC Offset: 0x18064EC VA: 0x18064EC
	public void OnClickRemoveAll() { }

	// RVA: 0x1806580 Offset: 0x1806580 VA: 0x1806580
	public void OnClickInitAll() { }

	// RVA: 0x1806614 Offset: 0x1806614 VA: 0x1806614
	public void OnClickRemoveEquip() { }

	// RVA: 0x18066A8 Offset: 0x18066A8 VA: 0x18066A8
	public void OnClickChangeName() { }

	// RVA: 0x180673C Offset: 0x180673C VA: 0x180673C
	public void OnClickCancel() { }

	// RVA: 0x18067C4 Offset: 0x18067C4 VA: 0x18067C4 Slot: 4
	protected override GameObject get_closeBtnObject() { }
}

// Namespace: 
public enum SupportSelectEditMenu.ResultKind // TypeDefIndex: 10819
{
	// Fields
	public int value__; // 0x0
	public const SupportSelectEditMenu.ResultKind COPY = 0;
	public const SupportSelectEditMenu.ResultKind REMOVE_ALL = 1;
	public const SupportSelectEditMenu.ResultKind INIT_ALL = 2;
	public const SupportSelectEditMenu.ResultKind REMOVE_EQUIP = 3;
	public const SupportSelectEditMenu.ResultKind CHANGE_NAME = 4;
}

// Namespace: 
private enum SupportSelectEditMenu.State // TypeDefIndex: 10820
{
	// Fields
	public int value__; // 0x0
	public const SupportSelectEditMenu.State OPEN = 0;
	public const SupportSelectEditMenu.State INPUT = 1;
	public const SupportSelectEditMenu.State CLOSE = 2;
}

// Namespace: 
public sealed class SupportSelectEditMenu.OnClickButtonEvent : MulticastDelegate // TypeDefIndex: 10821
{
	// Methods

	// RVA: 0x1806864 Offset: 0x1806864 VA: 0x1806864
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x18062C0 Offset: 0x18062C0 VA: 0x18062C0 Slot: 11
	public virtual void Invoke(SupportSelectEditMenu.ResultKind result) { }

	// RVA: 0x1806874 Offset: 0x1806874 VA: 0x1806874 Slot: 12
	public virtual IAsyncResult BeginInvoke(SupportSelectEditMenu.ResultKind result, AsyncCallback callback, object object) { }

	// RVA: 0x1806900 Offset: 0x1806900 VA: 0x1806900 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SupportSelectItemDraw : MonoBehaviour // TypeDefIndex: 10822
{
	// Fields
	[SerializeField] // RVA: 0xC796BC Offset: 0xC796BC VA: 0xC796BC
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xC796CC Offset: 0xC796CC VA: 0xC796CC
	protected UISprite baseSprite; // 0x20
	[SerializeField] // RVA: 0xC796DC Offset: 0xC796DC VA: 0xC796DC
	protected UISprite base2Sprite; // 0x28
	[SerializeField] // RVA: 0xC796EC Offset: 0xC796EC VA: 0xC796EC
	protected UINarrowFigureTexture servantNarrowTexture; // 0x30
	[SerializeField] // RVA: 0xC796FC Offset: 0xC796FC VA: 0xC796FC
	protected ServantClassIconComponent servantClassIcon; // 0x38
	[SerializeField] // RVA: 0xC7970C Offset: 0xC7970C VA: 0xC7970C
	protected UILabel levelLabel; // 0x40
	[SerializeField] // RVA: 0xC7971C Offset: 0xC7971C VA: 0xC7971C
	protected UISprite raritySprite; // 0x48
	[SerializeField] // RVA: 0xC7972C Offset: 0xC7972C VA: 0xC7972C
	protected UILabel hpLabel; // 0x50
	[SerializeField] // RVA: 0xC7973C Offset: 0xC7973C VA: 0xC7973C
	protected UILabel attackLabel; // 0x58
	[SerializeField] // RVA: 0xC7974C Offset: 0xC7974C VA: 0xC7974C
	protected UILabel costLabel; // 0x60
	[SerializeField] // RVA: 0xC7975C Offset: 0xC7975C VA: 0xC7975C
	protected UISprite noneEquipSprite; // 0x68
	[SerializeField] // RVA: 0xC7976C Offset: 0xC7976C VA: 0xC7976C
	protected UIMeshSprite equipSprite; // 0x70
	[SerializeField] // RVA: 0xC7977C Offset: 0xC7977C VA: 0xC7977C
	protected UISprite backClassIcon; // 0x78
	[SerializeField] // RVA: 0xC7978C Offset: 0xC7978C VA: 0xC7978C
	protected UISprite equipLimitCountSprite; // 0x80
	[SerializeField] // RVA: 0xC7979C Offset: 0xC7979C VA: 0xC7979C
	protected ShiningIconComponent bounusIcon; // 0x88
	[SerializeField] // RVA: 0xC797AC Offset: 0xC797AC VA: 0xC797AC
	protected EventUpValIconComponent eventUpValIcon; // 0x90
	[SerializeField] // RVA: 0xC797BC Offset: 0xC797BC VA: 0xC797BC
	protected GameObject dragSwapGuideObj; // 0x98
	[SerializeField] // RVA: 0xC797CC Offset: 0xC797CC VA: 0xC797CC
	protected UIWidget equipRootObj; // 0xA0
	[SerializeField] // RVA: 0xC797DC Offset: 0xC797DC VA: 0xC797DC
	protected UISprite restrictionMaskSprite; // 0xA8
	[SerializeField] // RVA: 0xC797EC Offset: 0xC797EC VA: 0xC797EC
	protected UILabel restrictionMaskMessageText; // 0xB0
	[SerializeField] // RVA: 0xC797FC Offset: 0xC797FC VA: 0xC797FC
	protected GameObject restrictionWarningBase; // 0xB8
	[SerializeField] // RVA: 0xC7980C Offset: 0xC7980C VA: 0xC7980C
	protected FlashingIconComponent restrictionWarningIcon; // 0xC0
	[SerializeField] // RVA: 0xC7981C Offset: 0xC7981C VA: 0xC7981C
	protected UILabel restrictionWarningMessageLabel; // 0xC8
	[SerializeField] // RVA: 0xC7982C Offset: 0xC7982C VA: 0xC7982C
	protected UISprite sortieMaskSprite; // 0xD0
	[SerializeField] // RVA: 0xC7983C Offset: 0xC7983C VA: 0xC7983C
	protected SkillListTreasureDeviceComponent skillListTreasureDevice; // 0xD8
	[SerializeField] // RVA: 0xC7984C Offset: 0xC7984C VA: 0xC7984C
	protected ServantCommandCardListComponent svtCommandCardList; // 0xE0
	[SerializeField] // RVA: 0xC7985C Offset: 0xC7985C VA: 0xC7985C
	protected AppendSkillListComponent appendSkillList; // 0xE8
	[SerializeField] // RVA: 0xC7986C Offset: 0xC7986C VA: 0xC7986C
	protected SwitchUIWidgetComponent switchSkillInfo; // 0xF0
	[SerializeField] // RVA: 0xC7987C Offset: 0xC7987C VA: 0xC7987C
	protected UIWidget skillInfoUiWidget; // 0xF8
	[SerializeField] // RVA: 0xC7988C Offset: 0xC7988C VA: 0xC7988C
	protected UIWidget appendSkillInfoUiWidget; // 0x100
	[SerializeField] // RVA: 0xC7989C Offset: 0xC7989C VA: 0xC7989C
	protected UILabel friendPointBonus; // 0x108
	[SerializeField] // RVA: 0xC798AC Offset: 0xC798AC VA: 0xC798AC
	protected GameObject friendPointBonusBase; // 0x110
	[SerializeField] // RVA: 0xC798BC Offset: 0xC798BC VA: 0xC798BC
	protected UISprite friendPointBonusIcon; // 0x118
	[SerializeField] // RVA: 0xC798CC Offset: 0xC798CC VA: 0xC798CC
	protected UISprite pushSprite; // 0x120
	private static readonly string[] backClassIconFileList; // 0x0
	protected Vector3 baseRarityPosition; // 0x128
	protected int restrictionMaskMessageWidth; // 0x134
	protected int restrictionWarningMessageWidth; // 0x138
	protected Vector3 restrictionWarningCenter; // 0x13C
	protected UIAtlas baseDefaultUIAtlas; // 0x148
	protected UIAtlas base2DefaultUIAtlas; // 0x150
	private List<UIWidget> switchSkillUIList; // 0x158

	// Methods

	// RVA: 0x180690C Offset: 0x180690C VA: 0x180690C
	public void .ctor() { }

	// RVA: 0x1806914 Offset: 0x1806914 VA: 0x1806914
	protected void Awake() { }

	// RVA: 0x1806D3C Offset: 0x1806D3C VA: 0x1806D3C
	public void ClearItem() { }

	// RVA: 0x18070A4 Offset: 0x18070A4 VA: 0x18070A4
	public void SetItem(SupportServantData supportServantData, int classPos, EventCampaignEntity[] eventFriendPoints, SupportSelectItemDraw.DispMode mode) { }

	// RVA: 0x1806EDC Offset: 0x1806EDC VA: 0x1806EDC
	protected void ClearMessage() { }

	// RVA: 0x180A06C Offset: 0x180A06C VA: 0x180A06C
	protected void SetMaskMessage(string message, bool isScale = False) { }

	// RVA: 0x180A338 Offset: 0x180A338 VA: 0x180A338
	protected void SetWarningMessage(string message, bool isScale = False) { }

	// RVA: 0x1806C8C Offset: 0x1806C8C VA: 0x1806C8C
	public void SetActiveDragSwapGuide(bool flag) { }

	// RVA: 0x180A68C Offset: 0x180A68C VA: 0x180A68C
	public void SetEquipAlpha(float alpha) { }

	// RVA: 0x180A740 Offset: 0x180A740 VA: 0x180A740
	public void ActivateEquipOnly() { }

	// RVA: 0x180AAD4 Offset: 0x180AAD4 VA: 0x180AAD4
	private static void .cctor() { }
}

// Namespace: 
public enum SupportSelectItemDraw.DispMode // TypeDefIndex: 10823
{
	// Fields
	public int value__; // 0x0
	public const SupportSelectItemDraw.DispMode INVISIBLE = 0;
	public const SupportSelectItemDraw.DispMode INVALID = 1;
	public const SupportSelectItemDraw.DispMode VALID = 2;
	public const SupportSelectItemDraw.DispMode INPUT = 3;
	public const SupportSelectItemDraw.DispMode DRAG_INVISIBLE = 4;
}

// Namespace: 
public class SupportSelectItemDrawDrop : UIDragDropListViewItem // TypeDefIndex: 10824
{
	// Fields
	protected static readonly float ACTION_TIME; // 0x0
	[SerializeField] // RVA: 0xC798DC Offset: 0xC798DC VA: 0xC798DC
	protected ListViewObject listViewObject; // 0x78
	private SupportSelectListViewDropObject dropObject; // 0x80
	private bool isDrag; // 0x88
	private GameObject surface; // 0x90

	// Methods

	// RVA: 0x180AE34 Offset: 0x180AE34 VA: 0x180AE34
	public void .ctor() { }

	// RVA: 0x180AE3C Offset: 0x180AE3C VA: 0x180AE3C Slot: 5
	public override void SetBaseTransform() { }

	// RVA: 0x180AF34 Offset: 0x180AF34 VA: 0x180AF34
	private SupportSelectListViewDropObject GetListViewObj() { }

	// RVA: 0x180AFB8 Offset: 0x180AFB8 VA: 0x180AFB8
	private SupportSelectListViewManager GetListViewManager() { }

	// RVA: 0x180B058 Offset: 0x180B058 VA: 0x180B058
	private void Update() { }

	// RVA: 0x180B0F0 Offset: 0x180B0F0 VA: 0x180B0F0 Slot: 6
	protected override void OnDragDropStart() { }

	// RVA: 0x180B234 Offset: 0x180B234 VA: 0x180B234 Slot: 8
	protected override void OnDragDropRelease(GameObject surface) { }

	// RVA: 0x180B388 Offset: 0x180B388 VA: 0x180B388
	private bool IsSameObject(SupportSelectListViewDropObject obj) { }

	// RVA: 0x180B4CC Offset: 0x180B4CC VA: 0x180B4CC
	protected void DoSwapMove(SupportSelectListViewDropObject target) { }

	// RVA: 0x180B9DC Offset: 0x180B9DC VA: 0x180B9DC
	protected void OnFinishedSwapMove() { }

	// RVA: 0x180B754 Offset: 0x180B754 VA: 0x180B754
	protected void DoReturnMove() { }

	// RVA: 0x180C938 Offset: 0x180C938 VA: 0x180C938
	protected void OnFinishedReturnMove() { }

	// RVA: 0x180C8D8 Offset: 0x180C8D8 VA: 0x180C8D8
	protected void OnFinishDragAndDrop() { }

	// RVA: 0x180C99C Offset: 0x180C99C VA: 0x180C99C
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1EE8 Offset: 0xCD1EE8 VA: 0xCD1EE8
	[DebuggerHiddenAttribute] // RVA: 0xCD1EE8 Offset: 0xCD1EE8 VA: 0xCD1EE8
	// RVA: 0x180C9F4 Offset: 0x180C9F4 VA: 0x180C9F4
	private void <OnDragDropRelease>__BaseCallProxy0(GameObject surface) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45634 Offset: 0xC45634 VA: 0xC45634
private sealed class SupportSelectItemDrawDrop.<OnFinishedSwapMove>c__AnonStorey0 // TypeDefIndex: 10825
{
	// Fields
	internal SupportSelectListViewDropObject from; // 0x10
	internal SupportSelectListViewDropObject to; // 0x18
	internal SupportSelectItemDrawDrop $this; // 0x20

	// Methods

	// RVA: 0x180C7EC Offset: 0x180C7EC VA: 0x180C7EC
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45644 Offset: 0xC45644 VA: 0xC45644
private sealed class SupportSelectItemDrawDrop.<OnFinishedSwapMove>c__AnonStorey1 // TypeDefIndex: 10826
{
	// Fields
	internal SupportSelectListViewManager manager; // 0x10
	internal SupportSelectObject fromMember; // 0x18
	internal SupportSelectObject toMember; // 0x20
	internal SupportSelectItemDrawDrop.<OnFinishedSwapMove>c__AnonStorey0 <>f__ref$0; // 0x28

	// Methods

	// RVA: 0x180C7F4 Offset: 0x180C7F4 VA: 0x180C7F4
	public void .ctor() { }

	// RVA: 0x180C9FC Offset: 0x180C9FC VA: 0x180C9FC
	internal void <>m__0(bool isDecide) { }
}

// Namespace: 
public class SupportSelectListViewDropObject : ListViewDropObject // TypeDefIndex: 10827
{
	// Fields
	[SerializeField] // RVA: 0xC798EC Offset: 0xC798EC VA: 0xC798EC
	private SupportSelectObject memberObject; // 0x70
	private GameObject dragObject; // 0x78
	private bool isEquipPress; // 0x80

	// Methods

	// RVA: 0x180CC1C Offset: 0x180CC1C VA: 0x180CC1C
	public void .ctor() { }

	// RVA: 0x180CC24 Offset: 0x180CC24 VA: 0x180CC24
	private void OnDestroy() { }

	// RVA: 0x180B8FC Offset: 0x180B8FC VA: 0x180B8FC
	public SupportSelectObject GetMemberObject() { }

	// RVA: 0x180CCD0 Offset: 0x180CCD0 VA: 0x180CCD0 Slot: 7
	public override bool IsCanDrag() { }

	// RVA: 0x180B904 Offset: 0x180B904 VA: 0x180B904
	public void DoSwap(Vector3 targetPosition, float duration) { }

	// RVA: 0x180C82C Offset: 0x180C82C VA: 0x180C82C
	public void DestroyDragObj() { }

	// RVA: 0x180CF78 Offset: 0x180CF78 VA: 0x180CF78 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x180CDB8 Offset: 0x180CDB8 VA: 0x180CDB8
	public GameObject CreateDragObject(int addDepth) { }

	// RVA: 0x180D0CC Offset: 0x180D0CC VA: 0x180D0CC
	public void SetData(SupportServantData supportServantData, int deckNum, int classPos, EventCampaignEntity[] friendPointCampaigns) { }

	// RVA: 0x180B204 Offset: 0x180B204 VA: 0x180B204
	public void HideEquip() { }

	// RVA: 0x180C7FC Offset: 0x180C7FC VA: 0x180C7FC
	public void ShowEquip() { }

	// RVA: 0x180D1A4 Offset: 0x180D1A4 VA: 0x180D1A4
	public void ActivateEquipOnly() { }

	// RVA: 0x180D1D4 Offset: 0x180D1D4 VA: 0x180D1D4
	public void OnPressItem() { }

	// RVA: 0x180D1DC Offset: 0x180D1DC VA: 0x180D1DC
	public void OnPressEquip() { }
}

// Namespace: 
public class SupportSelectListViewIndicator : ListViewIndicator // TypeDefIndex: 10828
{
	// Fields
	[SerializeField] // RVA: 0xC798FC Offset: 0xC798FC VA: 0xC798FC
	protected UISprite indexSprite; // 0x18
	[SerializeField] // RVA: 0xC7990C Offset: 0xC7990C VA: 0xC7990C
	protected UILabel selectNameLabel; // 0x20
	[SerializeField] // RVA: 0xC7991C Offset: 0xC7991C VA: 0xC7991C
	protected GameObject leftObject; // 0x28
	[SerializeField] // RVA: 0xC7992C Offset: 0xC7992C VA: 0xC7992C
	protected GameObject rightObject; // 0x30
	[SerializeField] // RVA: 0xC7993C Offset: 0xC7993C VA: 0xC7993C
	protected GameObject pageBaseObject; // 0x38
	[SerializeField] // RVA: 0xC7994C Offset: 0xC7994C VA: 0xC7994C
	protected UISprite[] pageSpriteList; // 0x40
	protected ListViewManager manager; // 0x48
	protected int pageMax; // 0x50
	protected int pageIndex; // 0x54
	protected Action modifyCenterItemCallBack; // 0x58

	// Methods

	// RVA: 0x1AC83CC Offset: 0x1AC83CC VA: 0x1AC83CC
	public void .ctor() { }

	// RVA: 0x1AC83D4 Offset: 0x1AC83D4 VA: 0x1AC83D4
	private void Start() { }

	// RVA: 0x1AC83DC Offset: 0x1AC83DC VA: 0x1AC83DC
	public void createSpriteList() { }

	// RVA: 0x1AC846C Offset: 0x1AC846C VA: 0x1AC846C
	public void setModifyCenterItemCallBack(Action callback) { }

	// RVA: 0x1AC8474 Offset: 0x1AC8474 VA: 0x1AC8474
	public void SetActive(bool isEnable) { }

	// RVA: 0x1AC84E0 Offset: 0x1AC84E0 VA: 0x1AC84E0 Slot: 4
	public override void SetIndexMax(int max) { }

	// RVA: 0x1AC86A0 Offset: 0x1AC86A0 VA: 0x1AC86A0
	public void setPageSprite(int num, UISprite sprite) { }

	// RVA: 0x1AC8730 Offset: 0x1AC8730 VA: 0x1AC8730 Slot: 5
	public override void OnModifyCenterItem(ListViewManager manager, ListViewItem item, bool isTop, bool isBottom, bool isLeft, bool isRight) { }

	// RVA: 0x1AC853C Offset: 0x1AC853C VA: 0x1AC853C
	public void SetPageMax(int max) { }

	// RVA: 0x1AC888C Offset: 0x1AC888C VA: 0x1AC888C
	public void SetPageIndex(int index) { }

	// RVA: 0x1AC8B78 Offset: 0x1AC8B78 VA: 0x1AC8B78
	public int getPageIndex() { }

	// RVA: 0x1AC8A58 Offset: 0x1AC8A58 VA: 0x1AC8A58
	public void DrawPartyInfo(SupportSelectListViewItem partyItem) { }

	// RVA: 0x1AC8BAC Offset: 0x1AC8BAC VA: 0x1AC8BAC
	public void OnClickLeft() { }

	// RVA: 0x1AC8D14 Offset: 0x1AC8D14 VA: 0x1AC8D14
	public void OnClickRight() { }

	// RVA: 0x1AC8E9C Offset: 0x1AC8E9C VA: 0x1AC8E9C
	public void SetPageActive(int index, bool active) { }
}

// Namespace: 
public class SupportSelectListViewItem : ListViewItem // TypeDefIndex: 10829
{
	// Fields
	protected SupportServantData supportServantData; // 0x70
	private EventCampaignEntity[] eventFriendPoints; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xC7995C Offset: 0xC7995C VA: 0xC7995C
	[DebuggerBrowsableAttribute] // RVA: 0xC7995C Offset: 0xC7995C VA: 0xC7995C
	private SupportSelectListViewObject <listObj>k__BackingField; // 0x80

	// Properties
	public SupportSelectListViewObject listObj { get; set; }
	public string DeckName { get; }

	// Methods

	// RVA: 0x1AC8F2C Offset: 0x1AC8F2C VA: 0x1AC8F2C
	public void .ctor(int index, SupportServantData supportServantData, EventCampaignEntity[] friendPointCampaigns) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1F20 Offset: 0xCD1F20 VA: 0xCD1F20
	// RVA: 0x1AC8F64 Offset: 0x1AC8F64 VA: 0x1AC8F64
	public SupportSelectListViewObject get_listObj() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1F30 Offset: 0xCD1F30 VA: 0xCD1F30
	// RVA: 0x1AC8F6C Offset: 0x1AC8F6C VA: 0x1AC8F6C
	public void set_listObj(SupportSelectListViewObject value) { }

	// RVA: 0x1AC8F74 Offset: 0x1AC8F74 VA: 0x1AC8F74
	public void ResetEventCampaign(EventCampaignEntity[] friendPointCampaigns) { }

	// RVA: 0x1AC8F7C Offset: 0x1AC8F7C VA: 0x1AC8F7C
	public void setuplistObj(SupportSelectListViewObject obj) { }

	// RVA: 0x1AC8B80 Offset: 0x1AC8B80 VA: 0x1AC8B80
	public string get_DeckName() { }
}

// Namespace: 
public class SupportSelectListViewManager : ListViewManager // TypeDefIndex: 10830
{
	// Fields
	[SerializeField] // RVA: 0xC79998 Offset: 0xC79998 VA: 0xC79998
	protected GameObject explanationBase; // 0x138
	[SerializeField] // RVA: 0xC799A8 Offset: 0xC799A8 VA: 0xC799A8
	protected UILabel explanationLabel; // 0x140
	[CompilerGeneratedAttribute] // RVA: 0xC799B8 Offset: 0xC799B8 VA: 0xC799B8
	[DebuggerBrowsableAttribute] // RVA: 0xC799B8 Offset: 0xC799B8 VA: 0xC799B8
	private SupportSelectMenu.CallbackFunc callbackFunc; // 0x148
	protected int callbackCount; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xC799F4 Offset: 0xC799F4 VA: 0xC799F4
	[DebuggerBrowsableAttribute] // RVA: 0xC799F4 Offset: 0xC799F4 VA: 0xC799F4
	private SupportSelectMenu.DragSwapCallbackFunc dragSwapCallbackFunc; // 0x158
	private TimeOverChecker timeOverChecker; // 0x160
	private EventCampaignEntity[] eventFriendPoints; // 0x168
	private TimeOverChecker eventStartChecker; // 0x170
	private bool ableToSwapDragObj; // 0x178

	// Properties
	public List<SupportSelectListViewObject> ObjectList { get; }
	public List<SupportSelectListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x1AC9234 Offset: 0x1AC9234 VA: 0x1AC9234
	public void .ctor() { }

	// RVA: 0x1AC923C Offset: 0x1AC923C VA: 0x1AC923C
	protected void add_callbackFunc(SupportSelectMenu.CallbackFunc value) { }

	// RVA: 0x1AC932C Offset: 0x1AC932C VA: 0x1AC932C
	protected void remove_callbackFunc(SupportSelectMenu.CallbackFunc value) { }

	// RVA: 0x1AC941C Offset: 0x1AC941C VA: 0x1AC941C
	public void add_dragSwapCallbackFunc(SupportSelectMenu.DragSwapCallbackFunc value) { }

	// RVA: 0x1AC950C Offset: 0x1AC950C VA: 0x1AC950C
	public void remove_dragSwapCallbackFunc(SupportSelectMenu.DragSwapCallbackFunc value) { }

	// RVA: 0x1AC95FC Offset: 0x1AC95FC VA: 0x1AC95FC
	public void SetLoopFlag(bool flag) { }

	// RVA: 0x1AC9608 Offset: 0x1AC9608 VA: 0x1AC9608
	public List<SupportSelectListViewObject> get_ObjectList() { }

	// RVA: 0x1AC97D4 Offset: 0x1AC97D4 VA: 0x1AC97D4
	public List<SupportSelectListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1AC9AB4 Offset: 0x1AC9AB4 VA: 0x1AC9AB4
	public void setItem() { }

	// RVA: 0x1AC9D58 Offset: 0x1AC9D58 VA: 0x1AC9D58
	public void clearItem() { }

	// RVA: 0x1AC9F48 Offset: 0x1AC9F48 VA: 0x1AC9F48
	public void reDisp() { }

	// RVA: 0x1ACA0D4 Offset: 0x1ACA0D4 VA: 0x1ACA0D4
	public void CreateList(SupportServantData[] supportServantData, int mainDeckIdx, SupportSelectMenu.CallbackFunc callback, SupportSelectMenu.DragSwapCallbackFunc dragSwapCallbackFunc) { }

	// RVA: 0x1ACA5D8 Offset: 0x1ACA5D8 VA: 0x1ACA5D8
	public void DestroyList() { }

	// RVA: 0x1ACA5E0 Offset: 0x1ACA5E0 VA: 0x1ACA5E0
	private void ResetEventCampaignListViewObjects() { }

	// RVA: 0x1ACA894 Offset: 0x1ACA894 VA: 0x1ACA894
	private void ResetEventCampaignListViewObjectsStart() { }

	// RVA: 0x1ACAA88 Offset: 0x1ACAA88 VA: 0x1ACAA88
	public SupportSelectListViewItem GetItem(int index) { }

	// RVA: 0x1ACAB68 Offset: 0x1ACAB68 VA: 0x1ACAB68 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1ACAD34 Offset: 0x1ACAD34 VA: 0x1ACAD34
	public void callbackFuncObj(SupportSelectMenu.ResultKind result, int d, int n) { }

	// RVA: 0x1ACAFB4 Offset: 0x1ACAFB4 VA: 0x1ACAFB4
	public void MoveCenterItem(int index, bool isAnimation = True) { }

	// RVA: 0x1ACA3FC Offset: 0x1ACA3FC VA: 0x1ACA3FC
	private long GetEventFriendCampaignFinishedAt() { }

	// RVA: 0x1ACB0E4 Offset: 0x1ACB0E4 VA: 0x1ACB0E4
	public void SetSurface(SupportSelectListViewItem item) { }

	// RVA: 0x1ACB288 Offset: 0x1ACB288 VA: 0x1ACB288
	public void OnSwapEquip(SupportSelectRootComponent.SwapKind kind, int classPos1, UserServantLeaderEntity leader1, int classPos2, UserServantLeaderEntity leader2) { }

	// RVA: 0x1ACB548 Offset: 0x1ACB548 VA: 0x1ACB548
	public void SetAbleToSwapDrag(bool flag) { }

	// RVA: 0x1ACB728 Offset: 0x1ACB728 VA: 0x1ACB728
	public bool GetAbleToSwapDrag() { }

	// RVA: 0x1ACB578 Offset: 0x1ACB578 VA: 0x1ACB578
	public void UpdateExplanationText(bool ableToSwapDragObj) { }

	// RVA: 0x1ACB650 Offset: 0x1ACB650 VA: 0x1ACB650
	public void SetActiveDragSwapGuide(bool flag) { }
}

// Namespace: 
public class SupportSelectListViewObject : ListViewObject // TypeDefIndex: 10831
{
	// Fields
	[SerializeField] // RVA: 0xC79A30 Offset: 0xC79A30 VA: 0xC79A30
	protected SupportSelectObject[] supportSelectObject; // 0x70
	[SerializeField] // RVA: 0xC79A40 Offset: 0xC79A40 VA: 0xC79A40
	protected SupportSelectListViewDropObject[] dropObjectList; // 0x78
	[SerializeField] // RVA: 0xC79A50 Offset: 0xC79A50 VA: 0xC79A50
	private UISprite[] classIconSpriteList; // 0x80
	[SerializeField] // RVA: 0xC79A60 Offset: 0xC79A60 VA: 0xC79A60
	private UILabel explanationLb; // 0x88
	private SupportServantData supportServantData; // 0x90
	private EventCampaignEntity[] eventFriendPoints; // 0x98
	[SerializeField] // RVA: 0xC79A70 Offset: 0xC79A70 VA: 0xC79A70
	private bool useAlphaMask; // 0xA0
	[SerializeField] // RVA: 0xC79A80 Offset: 0xC79A80 VA: 0xC79A80
	private UISprite maskSprite; // 0xA8
	[SerializeField] // RVA: 0xC79A90 Offset: 0xC79A90 VA: 0xC79A90
	private float maxAlphaRate; // 0xB0
	private UIScrollView scrollView; // 0xB8
	private ListViewItemSeed itemSeed; // 0xC0
	private BoxCollider[] colliders; // 0xC8
	private static readonly string[] upperOffClassIconFileList; // 0x0
	private static readonly string[] upperOnClassIconFileList; // 0x8

	// Properties
	public SupportSelectListViewDropObject[] DropObjectList { get; }

	// Methods

	// RVA: 0x1ACB88C Offset: 0x1ACB88C VA: 0x1ACB88C
	public void .ctor() { }

	// RVA: 0x1ACB940 Offset: 0x1ACB940 VA: 0x1ACB940
	public static string GetClassIconSpriteName(int classPos, bool isUpperOn) { }

	// RVA: 0x1ACB278 Offset: 0x1ACB278 VA: 0x1ACB278
	public SupportSelectListViewDropObject[] get_DropObjectList() { }

	// RVA: 0x1ACBAC0 Offset: 0x1ACBAC0 VA: 0x1ACBAC0
	private void Update() { }

	// RVA: 0x1AC8FD0 Offset: 0x1AC8FD0 VA: 0x1AC8FD0
	public void Init(SupportServantData supportServantData, EventCampaignEntity[] friendPointCampaigns, int deckNum) { }

	// RVA: 0x1ACAC70 Offset: 0x1ACAC70 VA: 0x1ACAC70
	public void SetDragPrefab(GameObject dragPrefab, SupportSelectListViewManager manager) { }

	// RVA: 0x1AC9A30 Offset: 0x1AC9A30 VA: 0x1AC9A30
	public SupportSelectListViewItem GetItem() { }

	// RVA: 0x1AC9EA4 Offset: 0x1AC9EA4 VA: 0x1AC9EA4
	public void clearItemObj() { }

	// RVA: 0x1ACC150 Offset: 0x1ACC150 VA: 0x1ACC150
	public void clearItemObj(int classPos) { }

	// RVA: 0x1AC9C30 Offset: 0x1AC9C30 VA: 0x1AC9C30
	public void setItemObj(int deckNum) { }

	// RVA: 0x1ACC2D8 Offset: 0x1ACC2D8 VA: 0x1ACC2D8
	public void setItemObj(int deckNum, int classPos) { }

	// RVA: 0x1ACA098 Offset: 0x1ACA098 VA: 0x1ACA098
	public void setDisp(bool disp) { }

	// RVA: 0x1ACA7D0 Offset: 0x1ACA7D0 VA: 0x1ACA7D0
	public void ResetEventCampaign(EventCampaignEntity[] friendPointCampaigns) { }

	// RVA: 0x1ACC3D8 Offset: 0x1ACC3D8 VA: 0x1ACC3D8
	public void callbackFuncObj(SupportSelectMenu.ResultKind result, int d, int n) { }

	// RVA: 0x1ACBFC4 Offset: 0x1ACBFC4 VA: 0x1ACBFC4
	private void setUpperClassIcon(int classPos) { }

	// RVA: 0x1ACB730 Offset: 0x1ACB730 VA: 0x1ACB730
	public void UpdateExplanationLabel(bool displaySwapInfo) { }

	// RVA: 0x1ACB7E4 Offset: 0x1ACB7E4 VA: 0x1ACB7E4
	public void SetActiveDragSwapGuide(bool flag) { }

	// RVA: 0x1ACC570 Offset: 0x1ACC570 VA: 0x1ACC570
	public void OnClickListView() { }

	// RVA: 0x1ACBDB4 Offset: 0x1ACBDB4 VA: 0x1ACBDB4
	private void InitAlphaMask() { }

	// RVA: 0x1ACBAC4 Offset: 0x1ACBAC4 VA: 0x1ACBAC4
	private void UpdateAlphaMask() { }

	// RVA: 0x1ACC574 Offset: 0x1ACC574 VA: 0x1ACC574
	private void UpdateCollider(bool enable) { }

	// RVA: 0x1ACC620 Offset: 0x1ACC620 VA: 0x1ACC620
	private static void .cctor() { }
}

// Namespace: 
public class SupportSelectMenu : BaseMenu // TypeDefIndex: 10832
{
	// Fields
	private readonly Vector3 SUPPORT_EDIT_BUTTON_POSITION_EDTTING; // 0x58
	private readonly Vector3 SUPPORT_EDIT_BUTTON_POSITION_NOT_EDIT; // 0x64
	[SerializeField] // RVA: 0xC79AA0 Offset: 0xC79AA0 VA: 0xC79AA0
	protected UICommonButton decideButton; // 0x70
	[SerializeField] // RVA: 0xC79AB0 Offset: 0xC79AB0 VA: 0xC79AB0
	protected UICommonButton swapButton; // 0x78
	[SerializeField] // RVA: 0xC79AC0 Offset: 0xC79AC0 VA: 0xC79AC0
	protected UICommonButton editButton; // 0x80
	[SerializeField] // RVA: 0xC79AD0 Offset: 0xC79AD0 VA: 0xC79AD0
	protected UICommonButton cancelButton; // 0x88
	[SerializeField] // RVA: 0xC79AE0 Offset: 0xC79AE0 VA: 0xC79AE0
	protected UISprite helpButton; // 0x90
	[SerializeField] // RVA: 0xC79AF0 Offset: 0xC79AF0 VA: 0xC79AF0
	protected GameObject headerObject; // 0x98
	[SerializeField] // RVA: 0xC79B00 Offset: 0xC79B00 VA: 0xC79B00
	protected UISprite fixBaseSprite; // 0xA0
	[SerializeField] // RVA: 0xC79B10 Offset: 0xC79B10 VA: 0xC79B10
	protected UISprite fixMainQuestFrameSprite; // 0xA8
	[SerializeField] // RVA: 0xC79B20 Offset: 0xC79B20 VA: 0xC79B20
	protected UIButton[] fixMainQuestSupportDeckButtons; // 0xB0
	[SerializeField] // RVA: 0xC79B30 Offset: 0xC79B30 VA: 0xC79B30
	protected UISprite[] fixMainQuestSupportDeckLabelSprites; // 0xB8
	[SerializeField] // RVA: 0xC79B40 Offset: 0xC79B40 VA: 0xC79B40
	protected UISprite[] fixMainQuestSupportDeckFrameSprites; // 0xC0
	[SerializeField] // RVA: 0xC79B50 Offset: 0xC79B50 VA: 0xC79B50
	protected UISprite fixEventQuestFrameSprite; // 0xC8
	[SerializeField] // RVA: 0xC79B60 Offset: 0xC79B60 VA: 0xC79B60
	protected UIButton[] fixEventQuestSupportDeckButtons; // 0xD0
	[SerializeField] // RVA: 0xC79B70 Offset: 0xC79B70 VA: 0xC79B70
	protected UISprite[] fixEventQuestSupportDeckLabelSprites; // 0xD8
	[SerializeField] // RVA: 0xC79B80 Offset: 0xC79B80 VA: 0xC79B80
	protected UISprite[] fixEventQuestSupportDeckFrameSprites; // 0xE0
	[SerializeField] // RVA: 0xC79B90 Offset: 0xC79B90 VA: 0xC79B90
	protected GameObject indexItemSeed; // 0xE8
	[SerializeField] // RVA: 0xC79BA0 Offset: 0xC79BA0 VA: 0xC79BA0
	protected UISprite supportDeckNum; // 0xF0
	[SerializeField] // RVA: 0xC79BB0 Offset: 0xC79BB0 VA: 0xC79BB0
	protected UIGrid indexGrid; // 0xF8
	[SerializeField] // RVA: 0xC79BC0 Offset: 0xC79BC0 VA: 0xC79BC0
	protected SupportSelectListViewManager supportSelectListViewManager; // 0x100
	[SerializeField] // RVA: 0xC79BD0 Offset: 0xC79BD0 VA: 0xC79BD0
	public SupportSelectListViewIndicator indicator; // 0x108
	[SerializeField] // RVA: 0xC79BE0 Offset: 0xC79BE0 VA: 0xC79BE0
	protected UIGrid currentSupportDeckSpriteGrid; // 0x110
	[SerializeField] // RVA: 0xC79BF0 Offset: 0xC79BF0 VA: 0xC79BF0
	protected UISprite currentMainQuestSupportSprite; // 0x118
	[SerializeField] // RVA: 0xC79C00 Offset: 0xC79C00 VA: 0xC79C00
	protected UISprite currentEventQuestSupportSprite; // 0x120
	[SerializeField] // RVA: 0xC79C10 Offset: 0xC79C10 VA: 0xC79C10
	protected UIGrid applySupportDeckGrid; // 0x128
	[SerializeField] // RVA: 0xC79C20 Offset: 0xC79C20 VA: 0xC79C20
	protected UISprite applyMainQuestSupport; // 0x130
	[SerializeField] // RVA: 0xC79C30 Offset: 0xC79C30 VA: 0xC79C30
	protected UISprite applyMainQuestSupportFrame; // 0x138
	[SerializeField] // RVA: 0xC79C40 Offset: 0xC79C40 VA: 0xC79C40
	protected UISprite applyEventQuestSupport; // 0x140
	[SerializeField] // RVA: 0xC79C50 Offset: 0xC79C50 VA: 0xC79C50
	protected UISprite applyEventQuestSupportFrame; // 0x148
	[SerializeField] // RVA: 0xC79C60 Offset: 0xC79C60 VA: 0xC79C60
	protected BoxCollider namePanelCollider; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xC79C70 Offset: 0xC79C70 VA: 0xC79C70
	[DebuggerBrowsableAttribute] // RVA: 0xC79C70 Offset: 0xC79C70 VA: 0xC79C70
	private SupportSelectMenu.CallbackFunc callbackFunc; // 0x158
	[CompilerGeneratedAttribute] // RVA: 0xC79CAC Offset: 0xC79CAC VA: 0xC79CAC
	[DebuggerBrowsableAttribute] // RVA: 0xC79CAC Offset: 0xC79CAC VA: 0xC79CAC
	private SupportSelectMenu.DragSwapCallbackFunc dragSwapCallbackFunc; // 0x160
	protected SupportServantData[] supportServantData; // 0x168
	[CompilerGeneratedAttribute] // RVA: 0xC79CE8 Offset: 0xC79CE8 VA: 0xC79CE8
	private static Func<int, bool> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC79CF8 Offset: 0xC79CF8 VA: 0xC79CF8
	private static Func<int, bool> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x1ACCC9C Offset: 0x1ACCC9C VA: 0x1ACCC9C
	public void .ctor() { }

	// RVA: 0x1ACCD74 Offset: 0x1ACCD74 VA: 0x1ACCD74
	protected void add_callbackFunc(SupportSelectMenu.CallbackFunc value) { }

	// RVA: 0x1ACCE64 Offset: 0x1ACCE64 VA: 0x1ACCE64
	protected void remove_callbackFunc(SupportSelectMenu.CallbackFunc value) { }

	// RVA: 0x1ACCF54 Offset: 0x1ACCF54 VA: 0x1ACCF54
	protected void add_dragSwapCallbackFunc(SupportSelectMenu.DragSwapCallbackFunc value) { }

	// RVA: 0x1ACD044 Offset: 0x1ACD044 VA: 0x1ACD044
	protected void remove_dragSwapCallbackFunc(SupportSelectMenu.DragSwapCallbackFunc value) { }

	// RVA: 0x1ACD134 Offset: 0x1ACD134 VA: 0x1ACD134
	public void Init() { }

	// RVA: 0x1ACD140 Offset: 0x1ACD140 VA: 0x1ACD140
	private void createIndexItem(int deckNum) { }

	// RVA: 0x1ACD524 Offset: 0x1ACD524 VA: 0x1ACD524
	public void Open(SupportServantData[] supportServantData, int mainDeckIdx, SupportSelectMenu.CallbackFunc callback, SupportSelectMenu.DragSwapCallbackFunc dragSwapCallbackFunc) { }

	// RVA: 0x1ACD848 Offset: 0x1ACD848 VA: 0x1ACD848
	public void SetActiveHeader(bool active) { }

	// RVA: 0x1ACD880 Offset: 0x1ACD880 VA: 0x1ACD880
	public void SetActiveSupportApplyIcon(int nowDeckId, int[] fixMainDeckIds, int[] fixEventDeckIds) { }

	// RVA: 0x1ACDC50 Offset: 0x1ACDC50 VA: 0x1ACDC50
	public void HideActiveSupportApplyIcon() { }

	// RVA: 0x1ACDD48 Offset: 0x1ACDD48 VA: 0x1ACDD48
	public void SetActiveCurrentSupportSprite(bool mainQuestActive, bool eventQuestActive, int mainNo = 0, int eventNo = 0) { }

	// RVA: 0x1ACDFDC Offset: 0x1ACDFDC VA: 0x1ACDFDC
	public SupportSelectListViewItem GetCenterItem() { }

	// RVA: 0x1ACE080 Offset: 0x1ACE080 VA: 0x1ACE080
	public void Active() { }

	// RVA: 0x1ACD7C4 Offset: 0x1ACD7C4 VA: 0x1ACD7C4
	public void Redisp() { }

	// RVA: 0x1ACE0B8 Offset: 0x1ACE0B8 VA: 0x1ACE0B8
	public void Reset(int classPos = -1) { }

	// RVA: 0x1ACE164 Offset: 0x1ACE164 VA: 0x1ACE164
	public void Close() { }

	// RVA: 0x1ACE1B0 Offset: 0x1ACE1B0 VA: 0x1ACE1B0
	protected void Callback(SupportSelectMenu.ResultKind result, int d = -1, int n = -1) { }

	// RVA: 0x1ACE1C4 Offset: 0x1ACE1C4 VA: 0x1ACE1C4
	public void buttonDispSetting(bool flag) { }

	// RVA: 0x1ACE310 Offset: 0x1ACE310 VA: 0x1ACE310
	public void SetActiveFixDeckButton(bool active) { }

	// RVA: 0x1ACE4E8 Offset: 0x1ACE4E8 VA: 0x1ACE4E8
	public void SetupFooterButtons(bool isEditting) { }

	// RVA: 0x1ACE63C Offset: 0x1ACE63C VA: 0x1ACE63C
	public void SetAbleToSwapDrag(bool flag) { }

	// RVA: 0x1ACE680 Offset: 0x1ACE680 VA: 0x1ACE680
	public void setActiveDeckNameChangeButton(bool active) { }

	// RVA: 0x1ACE054 Offset: 0x1ACE054 VA: 0x1ACE054
	public int getPageIdx() { }

	// RVA: 0x1ACD78C Offset: 0x1ACD78C VA: 0x1ACD78C
	public void moveCenterItem(int centerIdx) { }

	// RVA: 0x1ACE6B8 Offset: 0x1ACE6B8 VA: 0x1ACE6B8
	public void SetFixDeckButton(int currentId, bool isEventButton, int[] fixDeckIds) { }

	// RVA: 0x1ACE964 Offset: 0x1ACE964 VA: 0x1ACE964
	public void OnClickDecide() { }

	// RVA: 0x1ACE984 Offset: 0x1ACE984 VA: 0x1ACE984
	public void OnClickTab(GameObject idxSprite) { }

	// RVA: 0x1ACEA40 Offset: 0x1ACEA40 VA: 0x1ACEA40
	public void OnClickSupportEdit() { }

	// RVA: 0x1ACEAD0 Offset: 0x1ACEAD0 VA: 0x1ACEAD0
	public void OnClickSwap() { }

	// RVA: 0x1ACEB60 Offset: 0x1ACEB60 VA: 0x1ACEB60
	public void OnClickDeckName() { }

	// RVA: 0x1ACEBF0 Offset: 0x1ACEBF0 VA: 0x1ACEBF0
	public void OnClickCancel() { }

	// RVA: 0x1ACEC80 Offset: 0x1ACEC80 VA: 0x1ACEC80
	public void onClickHelpButton() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1F40 Offset: 0xCD1F40 VA: 0xCD1F40
	// RVA: 0x1ACECF8 Offset: 0x1ACECF8 VA: 0x1ACECF8
	private static bool <SetActiveSupportApplyIcon>m__0(int x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD1F50 Offset: 0xCD1F50 VA: 0xCD1F50
	// RVA: 0x1ACED04 Offset: 0x1ACED04 VA: 0x1ACED04
	private static bool <SetActiveSupportApplyIcon>m__1(int x) { }
}

// Namespace: 
public enum SupportSelectMenu.ResultKind // TypeDefIndex: 10833
{
	// Fields
	public int value__; // 0x0
	public const SupportSelectMenu.ResultKind CANCEL = 0;
	public const SupportSelectMenu.ResultKind DECIDE = 1;
	public const SupportSelectMenu.ResultKind CLOSE = 2;
	public const SupportSelectMenu.ResultKind SELECT_SERVANT = 3;
	public const SupportSelectMenu.ResultKind SELECT_EQUIP = 4;
	public const SupportSelectMenu.ResultKind DECK_NAME = 5;
	public const SupportSelectMenu.ResultKind SWAP = 6;
	public const SupportSelectMenu.ResultKind EDIT = 7;
	public const SupportSelectMenu.ResultKind SELECT_FOLLOWER = 8;
	public const SupportSelectMenu.ResultKind SUPPORT_INFO_SERVANT = 9;
	public const SupportSelectMenu.ResultKind SUPPORT_INFO_EQUIP = 10;
}

// Namespace: 
public sealed class SupportSelectMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10834
{
	// Methods

	// RVA: 0x1ACC1CC Offset: 0x1ACC1CC VA: 0x1ACC1CC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1ACAD48 Offset: 0x1ACAD48 VA: 0x1ACAD48 Slot: 11
	public virtual void Invoke(SupportSelectMenu.ResultKind result, int d, int n) { }

	// RVA: 0x1ACED10 Offset: 0x1ACED10 VA: 0x1ACED10 Slot: 12
	public virtual IAsyncResult BeginInvoke(SupportSelectMenu.ResultKind result, int d, int n, AsyncCallback callback, object object) { }

	// RVA: 0x1ACEDD0 Offset: 0x1ACEDD0 VA: 0x1ACEDD0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class SupportSelectMenu.DragSwapCallbackFunc : MulticastDelegate // TypeDefIndex: 10835
{
	// Methods

	// RVA: 0x1ACEDDC Offset: 0x1ACEDDC VA: 0x1ACEDDC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1ACB29C Offset: 0x1ACB29C VA: 0x1ACB29C Slot: 11
	public virtual void Invoke(SupportSelectRootComponent.SwapKind kind, int classPos1, UserServantLeaderEntity leader1, int classPos2, UserServantLeaderEntity leader2) { }

	// RVA: 0x1ACEDEC Offset: 0x1ACEDEC VA: 0x1ACEDEC Slot: 12
	public virtual IAsyncResult BeginInvoke(SupportSelectRootComponent.SwapKind kind, int classPos1, UserServantLeaderEntity leader1, int classPos2, UserServantLeaderEntity leader2, AsyncCallback callback, object object) { }

	// RVA: 0x1ACEEBC Offset: 0x1ACEEBC VA: 0x1ACEEBC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SupportSelectObject : BaseMonoBehaviour // TypeDefIndex: 10836
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC79D08 Offset: 0xC79D08 VA: 0xC79D08
	[DebuggerBrowsableAttribute] // RVA: 0xC79D08 Offset: 0xC79D08 VA: 0xC79D08
	private SupportSelectMenu.CallbackFunc callbackFunc; // 0x18
	protected SupportSelectItemDraw itemDraw; // 0x20
	protected SupportServantData supportServantData; // 0x28
	protected int deckNum; // 0x30
	protected int classPos; // 0x34
	protected EventCampaignEntity[] eventFriendPoints; // 0x38

	// Methods

	// RVA: 0x1ACEEC8 Offset: 0x1ACEEC8 VA: 0x1ACEEC8
	public void .ctor() { }

	// RVA: 0x1ACEED0 Offset: 0x1ACEED0 VA: 0x1ACEED0
	protected void add_callbackFunc(SupportSelectMenu.CallbackFunc value) { }

	// RVA: 0x1ACEFBC Offset: 0x1ACEFBC VA: 0x1ACEFBC
	protected void remove_callbackFunc(SupportSelectMenu.CallbackFunc value) { }

	// RVA: 0x1ACF0A8 Offset: 0x1ACF0A8 VA: 0x1ACF0A8
	protected void Awake() { }

	// RVA: 0x1ACF100 Offset: 0x1ACF100 VA: 0x1ACF100
	public SupportServantData GetSupportServantData() { }

	// RVA: 0x1ACF108 Offset: 0x1ACF108 VA: 0x1ACF108
	public int GetClassPos() { }

	// RVA: 0x1ACF110 Offset: 0x1ACF110 VA: 0x1ACF110
	public int GetDeckNum() { }

