
	// RVA: 0x1FD6F40 Offset: 0x1FD6F40 VA: 0x1FD6F40
	public ServantStatusDialog.Kind get_Kind() { }

	// RVA: 0x1FCD564 Offset: 0x1FCD564 VA: 0x1FCD564
	public bool get_IsSelectServant() { }

	// RVA: 0x1FDDC84 Offset: 0x1FDDC84 VA: 0x1FDDC84
	public EventUpValSetupInfo get_EventSetupInfo() { }

	// RVA: 0x1FD3B24 Offset: 0x1FD3B24 VA: 0x1FD3B24
	public void set_EventSetupInfo(EventUpValSetupInfo value) { }

	// RVA: 0x1FD6F28 Offset: 0x1FD6F28 VA: 0x1FD6F28
	public EventUpValSetupInfo get_EventSetupInfo2() { }

	// RVA: 0x1FCD56C Offset: 0x1FCD56C VA: 0x1FCD56C
	public QuestRestrictionInfo get_QuestRestriction() { }

	// RVA: 0x1FDDC8C Offset: 0x1FDDC8C VA: 0x1FDDC8C
	public bool IsEmpty() { }

	// RVA: 0x1FDDCC8 Offset: 0x1FDDCC8 VA: 0x1FDDCC8
	public bool IsDefaultDeckName() { }

	// RVA: 0x1FDC468 Offset: 0x1FDC468 VA: 0x1FDC468
	public bool IsChangeDeckName() { }

	// RVA: 0x1FD7EB0 Offset: 0x1FD7EB0 VA: 0x1FD7EB0
	public void set_PushUserServantId(long value) { }

	// RVA: 0x1FDDD48 Offset: 0x1FDDD48 VA: 0x1FDDD48
	public long get_PushUserServantId() { }

	// RVA: 0x1FDC8DC Offset: 0x1FDC8DC VA: 0x1FDC8DC
	public void ResetOld() { }

	// RVA: 0x1FD4FDC Offset: 0x1FD4FDC VA: 0x1FD4FDC
	public void SetOld(SupportServantData data) { }

	// RVA: 0x1FDB740 Offset: 0x1FDB740 VA: 0x1FDB740
	public void CopyData(SupportServantData data, bool isInit = False) { }
}

// Namespace: 
public enum SupportServantData.ClassPos // TypeDefIndex: 10814
{
	// Fields
	public int value__; // 0x0
	public const SupportServantData.ClassPos NONE = -1;
	public const SupportServantData.ClassPos ALL = 0;
	public const SupportServantData.ClassPos SABER = 1;
	public const SupportServantData.ClassPos ARCHER = 2;
	public const SupportServantData.ClassPos LANCER = 3;
	public const SupportServantData.ClassPos RIDER = 4;
	public const SupportServantData.ClassPos CASTER = 5;
	public const SupportServantData.ClassPos ASSASSIN = 6;
	public const SupportServantData.ClassPos BERSERKER = 7;
	public const SupportServantData.ClassPos EXTRA = 8;
	public const SupportServantData.ClassPos SUM = 9;
}

// Namespace: 
public class SupportServantEquipListMenu : BaseMenu // TypeDefIndex: 10815
{
	// Fields
	[SerializeField] // RVA: 0xCE66C8 Offset: 0xCE66C8 VA: 0xCE66C8
	protected SupportServantEquipListViewManager supportServantEquipListViewManager; // 0x58
	[SerializeField] // RVA: 0xCE66D8 Offset: 0xCE66D8 VA: 0xCE66D8
	protected TitleInfoControl titleInfo; // 0x60
	[SerializeField] // RVA: 0xCE66E8 Offset: 0xCE66E8 VA: 0xCE66E8
	protected UILabel explanationLabel; // 0x68
	[SerializeField] // RVA: 0xCE66F8 Offset: 0xCE66F8 VA: 0xCE66F8
	protected UISprite normalTabSprite; // 0x70
	[SerializeField] // RVA: 0xCE6708 Offset: 0xCE6708 VA: 0xCE6708
	protected UICommonButton normalTabButton; // 0x78
	[SerializeField] // RVA: 0xCE6718 Offset: 0xCE6718 VA: 0xCE6718
	protected UISprite lockTabSprite; // 0x80
	[SerializeField] // RVA: 0xCE6728 Offset: 0xCE6728 VA: 0xCE6728
	protected UICommonButton lockTabButton; // 0x88
	[SerializeField] // RVA: 0xCE6738 Offset: 0xCE6738 VA: 0xCE6738
	protected UISprite choiceTabSprite; // 0x90
	[SerializeField] // RVA: 0xCE6748 Offset: 0xCE6748 VA: 0xCE6748
	protected UICommonButton choiceTabButton; // 0x98
	[SerializeField] // RVA: 0xCE6758 Offset: 0xCE6758 VA: 0xCE6758
	protected UISprite scaleChangeTabSprite; // 0xA0
	[SerializeField] // RVA: 0xCE6768 Offset: 0xCE6768 VA: 0xCE6768
	protected UICommonButton scaleChangeTabButton; // 0xA8
	private SupportServantEquipListMenu.ModeKind tabModeKind; // 0xB0
	protected SupportServantEquipListMenu.State state; // 0xB4
	[CompilerGeneratedAttribute] // RVA: 0xCE6778 Offset: 0xCE6778 VA: 0xCE6778
	[DebuggerBrowsableAttribute] // RVA: 0xCE6778 Offset: 0xCE6778 VA: 0xCE6778
	private SupportServantEquipListMenu.CallbackFunc callbackFunc; // 0xB8
	protected Action closeCallbackFunc; // 0xC0
	protected SupportServantEquipListMenu.RequestCallbackFunc requedstCallback; // 0xC8
	protected int selectNum; // 0xD0
	private SupportServantData supportServantData; // 0xD8
	private int classPos; // 0xE0
	private bool isSelectedSvt; // 0xE4

	// Methods

	// RVA: 0x1FDDD50 Offset: 0x1FDDD50 VA: 0x1FDDD50
	public void .ctor() { }

	// RVA: 0x1FDDDB8 Offset: 0x1FDDDB8 VA: 0x1FDDDB8
	protected void add_callbackFunc(SupportServantEquipListMenu.CallbackFunc value) { }

	// RVA: 0x1FDDEA4 Offset: 0x1FDDEA4 VA: 0x1FDDEA4
	protected void remove_callbackFunc(SupportServantEquipListMenu.CallbackFunc value) { }

	// RVA: 0x1FDDF90 Offset: 0x1FDDF90 VA: 0x1FDDF90
	public void Init() { }

	// RVA: 0x1FDE464 Offset: 0x1FDE464 VA: 0x1FDE464
	public void Open(SupportServantData[] supportServantDatas, int nowDeckNum, int classPos, EventUpValSetupInfo eventSetupInfo, int nowDeckId, int[] fixMainDeckIds, int[] fixEventDeckIds, SupportServantEquipListMenu.CallbackFunc callback) { }

	// RVA: 0x1FDEDEC Offset: 0x1FDEDEC VA: 0x1FDEDEC
	protected void EndOpen() { }

	// RVA: 0x1FDEF18 Offset: 0x1FDEF18 VA: 0x1FDEF18
	public void Close() { }

	// RVA: 0x1FDEF20 Offset: 0x1FDEF20 VA: 0x1FDEF20
	public void Close(Action callback) { }

	// RVA: 0x1FDEFB8 Offset: 0x1FDEFB8 VA: 0x1FDEFB8
	protected void EndCloseList() { }

	// RVA: 0x1FDEFBC Offset: 0x1FDEFBC VA: 0x1FDEFBC
	protected void EndClose() { }

	// RVA: 0x1FDEFF8 Offset: 0x1FDEFF8 VA: 0x1FDEFF8
	protected void Callback(SupportSelectRootComponent.ResultKind result, int classPos, SupportServantEquipListViewItem item) { }

	// RVA: 0x1FDED04 Offset: 0x1FDED04 VA: 0x1FDED04
	protected void SetListManagerStatus() { }

	// RVA: 0x1FDF398 Offset: 0x1FDF398 VA: 0x1FDF398
	public void OnClickDecide() { }

	// RVA: 0x1FDF568 Offset: 0x1FDF568 VA: 0x1FDF568
	protected void Decide() { }

	// RVA: 0x1FDF814 Offset: 0x1FDF814 VA: 0x1FDF814
	protected void EndDecide(bool isRequest) { }

	// RVA: 0x1FDFD84 Offset: 0x1FDFD84 VA: 0x1FDFD84
	protected void EndCloseEventServantWarning() { }

	// RVA: 0x1FDFDA8 Offset: 0x1FDFDA8 VA: 0x1FDFDA8
	public void OnClickCancel() { }

	// RVA: 0x1FDFE8C Offset: 0x1FDFE8C VA: 0x1FDFE8C
	protected void endCancelButton(bool isRequest) { }

	// RVA: 0x1FDFF38 Offset: 0x1FDFF38 VA: 0x1FDFF38
	protected void OnSelectServantEquip(SupportServantEquipListViewManager.ResultKind kind, int n) { }

	// RVA: 0x1FE0A5C Offset: 0x1FE0A5C VA: 0x1FE0A5C
	protected void EndShowServantEquip(bool isDecide) { }

	// RVA: 0x1FE0B40 Offset: 0x1FE0B40 VA: 0x1FE0B40
	protected void EndCloseShowServantEquip() { }

	// RVA: 0x1FE0BD8 Offset: 0x1FE0BD8 VA: 0x1FE0BD8
	public void onClickNormalTabButton() { }

	// RVA: 0x1FE0C90 Offset: 0x1FE0C90 VA: 0x1FE0C90
	protected void EndClickTabNormal(bool isRequest) { }

	// RVA: 0x1FE0CF0 Offset: 0x1FE0CF0 VA: 0x1FE0CF0
	public void onClickLockTabButton() { }

	// RVA: 0x1FE0E04 Offset: 0x1FE0E04 VA: 0x1FE0E04
	protected void EndClickTabLock(bool isRequest) { }

	// RVA: 0x1FE0E64 Offset: 0x1FE0E64 VA: 0x1FE0E64
	public void onClickChoiceTabButton() { }

	// RVA: 0x1FE0F78 Offset: 0x1FE0F78 VA: 0x1FE0F78
	protected void EndClickTabChoice(bool isRequest) { }

	// RVA: 0x1FDE0F4 Offset: 0x1FDE0F4 VA: 0x1FDE0F4
	private void setModeTabKind(SupportServantEquipListMenu.ModeKind modeKind) { }

	// RVA: 0x1FDF618 Offset: 0x1FDF618 VA: 0x1FDF618
	public void StatusRequest(SupportServantEquipListMenu.RequestCallbackFunc callback) { }

	// RVA: 0x1FE17CC Offset: 0x1FE17CC VA: 0x1FE17CC
	protected void EndStatusSync(string result) { }

	// RVA: 0x1FE17EC Offset: 0x1FE17EC VA: 0x1FE17EC
	public void OnClickScaleChange() { }
}

// Namespace: 
public enum SupportServantEquipListMenu.ModeKind // TypeDefIndex: 10816
{
	// Fields
	public int value__; // 0x0
	public const SupportServantEquipListMenu.ModeKind NORMAL = 0;
	public const SupportServantEquipListMenu.ModeKind LOCK = 1;
	public const SupportServantEquipListMenu.ModeKind CHOICE = 2;
	public const SupportServantEquipListMenu.ModeKind SUM = 3;
}

// Namespace: 
protected enum SupportServantEquipListMenu.State // TypeDefIndex: 10817
{
	// Fields
	public int value__; // 0x0
	public const SupportServantEquipListMenu.State INIT = 0;
	public const SupportServantEquipListMenu.State OPEN = 1;
	public const SupportServantEquipListMenu.State INPUT = 2;
	public const SupportServantEquipListMenu.State SELECTED = 3;
	public const SupportServantEquipListMenu.State CLOSE = 4;
	public const SupportServantEquipListMenu.State SHOW_STATUS = 5;
	public const SupportServantEquipListMenu.State WARNING = 6;
}

// Namespace: 
public sealed class SupportServantEquipListMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10818
{
	// Methods

	// RVA: 0x1FD6F30 Offset: 0x1FD6F30 VA: 0x1FD6F30
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1FDF00C Offset: 0x1FDF00C VA: 0x1FDF00C Slot: 11
	public virtual void Invoke(SupportSelectRootComponent.ResultKind result, int classPos, SupportServantEquipListViewItem item) { }

	// RVA: 0x1FE1998 Offset: 0x1FE1998 VA: 0x1FE1998 Slot: 12
	public virtual IAsyncResult BeginInvoke(SupportSelectRootComponent.ResultKind result, int classPos, SupportServantEquipListViewItem item, AsyncCallback callback, object object) { }

	// RVA: 0x1FE1A50 Offset: 0x1FE1A50 VA: 0x1FE1A50 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class SupportServantEquipListMenu.RequestCallbackFunc : MulticastDelegate // TypeDefIndex: 10819
{
	// Methods

	// RVA: 0x1FDF608 Offset: 0x1FDF608 VA: 0x1FDF608
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1FE15A0 Offset: 0x1FE15A0 VA: 0x1FE15A0 Slot: 11
	public virtual void Invoke(bool isRequest) { }

	// RVA: 0x1FE1A5C Offset: 0x1FE1A5C VA: 0x1FE1A5C Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isRequest, AsyncCallback callback, object object) { }

	// RVA: 0x1FE1AEC Offset: 0x1FE1AEC VA: 0x1FE1AEC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SupportServantEquipListViewItem : ListViewItem // TypeDefIndex: 10820
{
	// Fields
	protected UserServantEntity userSvtEntity; // 0x70
	protected UserServantEntity equippedUserSvtEntity; // 0x78
	protected ServantEntity servantEntity; // 0x80
	protected EventUpValSetupInfo eventSetupInfo; // 0x88
	protected int classId; // 0x90
	protected int rarity; // 0x94
	protected bool isOldBase; // 0x98
	protected bool isBase; // 0x99
	protected bool isUse; // 0x9A
	protected bool isLock; // 0x9B
	protected bool isChoice; // 0x9C
	protected ListViewSort.BonusFilterKind bonusKind; // 0xA0
	protected int bonusKindId; // 0xA4
	protected bool isEventUpVal; // 0xA8
	protected long amountSortValue; // 0xB0
	protected bool isSwapLock; // 0xB8
	protected bool isSwapChoice; // 0xB9
	protected bool isInvalidRarity; // 0xBA
	protected int[] categoryIdList; // 0xC0
	protected IconLabelInfo iconLabelInfo1; // 0xC8
	protected IconLabelInfo iconLabelInfo2; // 0xD0

	// Properties
	public UserServantEntity UserServant { get; }
	public ServantEntity Servant { get; }
	public string NameText { get; }
	public int Attack { get; }
	public int AdjustAttack { get; }
	public int Hp { get; }
	public int AdjustHp { get; }
	public int Cost { get; }
	public bool IsBase { get; set; }
	public bool IsUse { get; }
	public bool IsLock { get; }
	public bool IsCanNotSelect { get; }
	public bool IsSwapLock { get; }
	public bool IsDispLock { get; }
	public bool IsChoice { get; }
	public bool IsSwapChoice { get; }
	public bool IsDispChoice { get; }
	public IconLabelInfo IconInfo1 { get; }
	public IconLabelInfo IconInfo2 { get; }
	public bool IsInvalidRarity { get; }

	// Methods

	// RVA: 0x1FE1AF8 Offset: 0x1FE1AF8 VA: 0x1FE1AF8
	public void .ctor(int index, UserServantEntity userSvtEntity, long targetSvtEquipId, long oldTargetSvtEquipId, long[] useSvtEquipList, UserServantEntity equippedUserSvtEntity, EventUpValSetupInfo eventSetupInfo, SupportServantData[] supportServantData, int nowDeckId, int[] fixMainDeckIds, int[] fixEventDeckIds, bool isFixMainDeck, bool isFixEventDeck) { }

	// RVA: 0x1FE20EC Offset: 0x1FE20EC VA: 0x1FE20EC
	public void Modify(UserServantEntity userSvtEntity, long targetSvtEquipId) { }

	// RVA: 0x1FE2118 Offset: 0x1FE2118 VA: 0x1FE2118
	public void ModifyItem(UserServantEntity userSvtEntity, long targetSvtEquipId) { }

	// RVA: 0x1FE237C Offset: 0x1FE237C VA: 0x1FE237C
	public void ModifyLockItem() { }

	// RVA: 0x1FE23C0 Offset: 0x1FE23C0 VA: 0x1FE23C0
	public void ModifyChoiceItem() { }

	// RVA: 0x1FE2404 Offset: 0x1FE2404 VA: 0x1FE2404 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1FE240C Offset: 0x1FE240C VA: 0x1FE240C Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x1FE2C64 Offset: 0x1FE2C64 VA: 0x1FE2C64 Slot: 5
	public override bool IsMatchFilter(ListViewSort sort) { }

	// RVA: 0x1FE2C90 Offset: 0x1FE2C90 VA: 0x1FE2C90
	private bool IsMatchServantEquipFilter(ListViewSort sort) { }

	// RVA: 0x1FE0518 Offset: 0x1FE0518 VA: 0x1FE0518
	public bool SwapLock() { }

	// RVA: 0x1FE0534 Offset: 0x1FE0534 VA: 0x1FE0534
	public bool SwapChoice() { }

	// RVA: 0x1FD8934 Offset: 0x1FD8934 VA: 0x1FD8934
	public UserServantEntity get_UserServant() { }

	// RVA: 0x1FD860C Offset: 0x1FD860C VA: 0x1FD860C
	public ServantEntity get_Servant() { }

	// RVA: 0x1FE2E4C Offset: 0x1FE2E4C VA: 0x1FE2E4C
	public string get_NameText() { }

	// RVA: 0x1FE2F08 Offset: 0x1FE2F08 VA: 0x1FE2F08
	public int get_Attack() { }

	// RVA: 0x1FE2F20 Offset: 0x1FE2F20 VA: 0x1FE2F20
	public int get_AdjustAttack() { }

	// RVA: 0x1FE2F38 Offset: 0x1FE2F38 VA: 0x1FE2F38
	public int get_Hp() { }

	// RVA: 0x1FE2F50 Offset: 0x1FE2F50 VA: 0x1FE2F50
	public int get_AdjustHp() { }

	// RVA: 0x1FE2F68 Offset: 0x1FE2F68 VA: 0x1FE2F68
	public int get_Cost() { }

	// RVA: 0x1FE0510 Offset: 0x1FE0510 VA: 0x1FE0510
	public bool get_IsBase() { }

	// RVA: 0x1FE0560 Offset: 0x1FE0560 VA: 0x1FE0560
	public void set_IsBase(bool value) { }

	// RVA: 0x1FE0508 Offset: 0x1FE0508 VA: 0x1FE0508
	public bool get_IsUse() { }

	// RVA: 0x1FE2F80 Offset: 0x1FE2F80 VA: 0x1FE2F80
	public bool get_IsLock() { }

	// RVA: 0x1FE2F88 Offset: 0x1FE2F88 VA: 0x1FE2F88
	public bool get_IsCanNotSelect() { }

	// RVA: 0x1FE2FA8 Offset: 0x1FE2FA8 VA: 0x1FE2FA8
	public bool get_IsSwapLock() { }

	// RVA: 0x1FE2FB0 Offset: 0x1FE2FB0 VA: 0x1FE2FB0
	public bool get_IsDispLock() { }

	// RVA: 0x1FE2FD0 Offset: 0x1FE2FD0 VA: 0x1FE2FD0
	public bool get_IsChoice() { }

	// RVA: 0x1FE2FD8 Offset: 0x1FE2FD8 VA: 0x1FE2FD8
	public bool get_IsSwapChoice() { }

	// RVA: 0x1FE2A20 Offset: 0x1FE2A20 VA: 0x1FE2A20
	public bool get_IsDispChoice() { }

	// RVA: 0x1FE2FE0 Offset: 0x1FE2FE0 VA: 0x1FE2FE0
	public IconLabelInfo get_IconInfo1() { }

	// RVA: 0x1FE2FE8 Offset: 0x1FE2FE8 VA: 0x1FE2FE8
	public IconLabelInfo get_IconInfo2() { }

	// RVA: 0x1FE2FF0 Offset: 0x1FE2FF0 VA: 0x1FE2FF0
	public bool GetNpInfo(out TreasureDvcInfo tdInfo) { }

	// RVA: 0x1FE3088 Offset: 0x1FE3088 VA: 0x1FE3088
	private string ToString() { }

	// RVA: 0x1FE310C Offset: 0x1FE310C VA: 0x1FE310C
	public bool get_IsInvalidRarity() { }
}

// Namespace: 
public class SupportServantEquipListViewItemDraw : MonoBehaviour // TypeDefIndex: 10821
{
	// Fields
	[SerializeField] // RVA: 0xCE67B4 Offset: 0xCE67B4 VA: 0xCE67B4
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xCE67C4 Offset: 0xCE67C4 VA: 0xCE67C4
	protected ServantFaceIconComponent servantFaceIcon; // 0x20
	[SerializeField] // RVA: 0xCE67D4 Offset: 0xCE67D4 VA: 0xCE67D4
	protected UISprite lockSprite; // 0x28
	[SerializeField] // RVA: 0xCE67E4 Offset: 0xCE67E4 VA: 0xCE67E4
	protected UISprite choiceSprite; // 0x30
	[SerializeField] // RVA: 0xCE67F4 Offset: 0xCE67F4 VA: 0xCE67F4
	protected UISprite maskSprite; // 0x38
	[SerializeField] // RVA: 0xCE6804 Offset: 0xCE6804 VA: 0xCE6804
	protected UILabel warningLabel; // 0x40
	[SerializeField] // RVA: 0xCE6814 Offset: 0xCE6814 VA: 0xCE6814
	protected GameObject selectObject; // 0x48
	[SerializeField] // RVA: 0xCE6824 Offset: 0xCE6824 VA: 0xCE6824
	protected UILabel skillInvalidLabel; // 0x50
	[SerializeField] // RVA: 0xCE6834 Offset: 0xCE6834 VA: 0xCE6834
	protected SwitchUIWidgetComponent messageLabel; // 0x58
	private List<UIWidget> messageLabelList; // 0x60

	// Methods

	// RVA: 0x1FE3114 Offset: 0x1FE3114 VA: 0x1FE3114
	public void .ctor() { }

	// RVA: 0x1FE311C Offset: 0x1FE311C VA: 0x1FE311C
	protected void Awake() { }

	// RVA: 0x1FE3184 Offset: 0x1FE3184 VA: 0x1FE3184
	public void SetItem(SupportServantEquipListViewItem item, SupportServantEquipListViewItemDraw.DispMode mode) { }

	// RVA: 0x1FE36F4 Offset: 0x1FE36F4 VA: 0x1FE36F4
	public void SetInput(SupportServantEquipListViewItem item, bool isInput) { }
}

// Namespace: 
public enum SupportServantEquipListViewItemDraw.DispMode // TypeDefIndex: 10822
{
	// Fields
	public int value__; // 0x0
	public const SupportServantEquipListViewItemDraw.DispMode INVISIBLE = 0;
	public const SupportServantEquipListViewItemDraw.DispMode INVALID = 1;
	public const SupportServantEquipListViewItemDraw.DispMode VALID = 2;
	public const SupportServantEquipListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class SupportServantEquipListViewManager : ListViewManager // TypeDefIndex: 10823
{
	// Fields
	protected const string SORT_SAVE_KEY = "SupportServantEquip";
	protected static ListViewSort sortStatus; // 0x0
	[SerializeField] // RVA: 0xCE6844 Offset: 0xCE6844 VA: 0xCE6844
	protected SupportServantEquipServantItemDraw servantItemDraw; // 0x138
	[SerializeField] // RVA: 0xCE6854 Offset: 0xCE6854 VA: 0xCE6854
	protected SupportSelectConfirmMenu supportSelectConfirmMenu; // 0x140
	[SerializeField] // RVA: 0xCE6864 Offset: 0xCE6864 VA: 0xCE6864
	protected UISprite sortExplanationSprite; // 0x148
	[SerializeField] // RVA: 0xCE6874 Offset: 0xCE6874 VA: 0xCE6874
	protected UISprite filterSprite; // 0x150
	[SerializeField] // RVA: 0xCE6884 Offset: 0xCE6884 VA: 0xCE6884
	protected UICommonButton bonusFilterKindButton; // 0x158
	[SerializeField] // RVA: 0xCE6894 Offset: 0xCE6894 VA: 0xCE6894
	protected UILabel bonusFilterKindLabel; // 0x160
	[SerializeField] // RVA: 0xCE68A4 Offset: 0xCE68A4 VA: 0xCE68A4
	protected ListViewItemSeed normalSizeSeed; // 0x168
	[SerializeField] // RVA: 0xCE68B4 Offset: 0xCE68B4 VA: 0xCE68B4
	protected ListViewItemSeed smallSizeSeed; // 0x170
	[SerializeField] // RVA: 0xCE68C4 Offset: 0xCE68C4 VA: 0xCE68C4
	protected ListViewItemSeed extremelySmallSizeSeed; // 0x178
	private long saveId; // 0x180
	private int savePos; // 0x188
	protected SupportServantEquipListViewManager.InitMode initMode; // 0x18C
	protected ListViewSort.ScaleType scaleType; // 0x190
	[CompilerGeneratedAttribute] // RVA: 0xCE68D4 Offset: 0xCE68D4 VA: 0xCE68D4
	[DebuggerBrowsableAttribute] // RVA: 0xCE68D4 Offset: 0xCE68D4 VA: 0xCE68D4
	private SupportServantEquipListViewManager.CallbackFunc callbackFunc; // 0x198
	[CompilerGeneratedAttribute] // RVA: 0xCE6910 Offset: 0xCE6910 VA: 0xCE6910
	[DebuggerBrowsableAttribute] // RVA: 0xCE6910 Offset: 0xCE6910 VA: 0xCE6910
	private Action callbackFunc2; // 0x1A0
	protected int callbackCount; // 0x1A8
	protected SupportServantEquipServantItem servantItemInfo; // 0x1B0
	protected SupportServantData supportServantData; // 0x1B8
	protected int classPos; // 0x1C0
	protected int[] bonusEventIdList; // 0x1C8
	private bool isCanNotLongPush; // 0x1D0
	protected SupportServantEquipListViewObject saveObj; // 0x1D8

	// Properties
	public List<SupportServantEquipListViewObject> ObjectList { get; }
	public List<SupportServantEquipListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x1FE3964 Offset: 0x1FE3964 VA: 0x1FE3964
	public void .ctor() { }

	// RVA: 0x1FE396C Offset: 0x1FE396C VA: 0x1FE396C
	protected void add_callbackFunc(SupportServantEquipListViewManager.CallbackFunc value) { }

	// RVA: 0x1FE3A5C Offset: 0x1FE3A5C VA: 0x1FE3A5C
	protected void remove_callbackFunc(SupportServantEquipListViewManager.CallbackFunc value) { }

	// RVA: 0x1FE3B4C Offset: 0x1FE3B4C VA: 0x1FE3B4C
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x1FE3C3C Offset: 0x1FE3C3C VA: 0x1FE3C3C
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x1FE3D2C Offset: 0x1FE3D2C VA: 0x1FE3D2C
	public static void DeleteContinueData() { }

	// RVA: 0x1FE3DA8 Offset: 0x1FE3DA8 VA: 0x1FE3DA8
	public static void InitLoad() { }

	// RVA: 0x1FE3E24 Offset: 0x1FE3E24 VA: 0x1FE3E24
	public List<SupportServantEquipListViewObject> get_ObjectList() { }

	// RVA: 0x1FE3FF0 Offset: 0x1FE3FF0 VA: 0x1FE3FF0
	public List<SupportServantEquipListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1FE0550 Offset: 0x1FE0550 VA: 0x1FE0550
	public SupportServantEquipServantItem getServantItemInfo() { }

	// RVA: 0x1FE0558 Offset: 0x1FE0558 VA: 0x1FE0558
	public SupportServantEquipServantItemDraw getServantItemDraw() { }

	// RVA: 0x1FDE708 Offset: 0x1FDE708 VA: 0x1FDE708
	public void CreateList(SupportServantData[] supportServantData, int nowDeckNum, int classPos, EventUpValSetupInfo eventSetupInfo, int nowDeckId, int[] fixMainDeckIds, int[] fixEventDeckIds) { }

	// RVA: 0x1FDF900 Offset: 0x1FDF900 VA: 0x1FDF900
	public void ModifyList(bool isIconSizeChange = False) { }

	// RVA: 0x1FDE0B0 Offset: 0x1FDE0B0 VA: 0x1FDE0B0
	public void DestroyList() { }

	// RVA: 0x1FDFCDC Offset: 0x1FDFCDC VA: 0x1FDFCDC
	public SupportServantEquipListViewItem GetItem(int index) { }

	// RVA: 0x1FE056C Offset: 0x1FE056C VA: 0x1FE056C
	public void RefreshListDisp() { }

	// RVA: 0x1FE42E4 Offset: 0x1FE42E4 VA: 0x1FE42E4 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1FDF278 Offset: 0x1FDF278 VA: 0x1FDF278
	public void SetMode(SupportServantEquipListViewManager.InitMode mode, SupportServantEquipListViewManager.CallbackFunc callback) { }

	// RVA: 0x1FE43A0 Offset: 0x1FE43A0 VA: 0x1FE43A0
	public void SetMode(SupportServantEquipListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1FDF280 Offset: 0x1FDF280 VA: 0x1FDF280
	public void SetMode(SupportServantEquipListViewManager.InitMode mode) { }

	// RVA: 0x1FE45A0 Offset: 0x1FE45A0 VA: 0x1FE45A0
	protected void RequestListObject(SupportServantEquipListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1FE43A8 Offset: 0x1FE43A8 VA: 0x1FE43A8
	protected void RequestListObject(SupportServantEquipListViewObject.InitMode mode) { }

	// RVA: 0x1FE47AC Offset: 0x1FE47AC VA: 0x1FE47AC
	protected void OnMoveEnd() { }

	// RVA: 0x1FE4878 Offset: 0x1FE4878 VA: 0x1FE4878
	public int GetSelect() { }

	// RVA: 0x1FDF400 Offset: 0x1FDF400 VA: 0x1FDF400
	public SupportServantEquipListViewItem GetSelectItem() { }

	// RVA: 0x1FE49F4 Offset: 0x1FE49F4 VA: 0x1FE49F4
	public void OnClickDecide() { }

	// RVA: 0x1FE4A38 Offset: 0x1FE4A38 VA: 0x1FE4A38
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x1FE4A3C Offset: 0x1FE4A3C VA: 0x1FE4A3C
	protected void OnClickSelectListView(ListViewObject obj) { }

	// RVA: 0x1FE4A98 Offset: 0x1FE4A98 VA: 0x1FE4A98
	public void onClickSelectedItem(ListViewObject obj) { }

	// RVA: 0x1FE0804 Offset: 0x1FE0804 VA: 0x1FE0804
	public void checkEquipChange(SupportServantEquipListViewItem selectItem) { }

	// RVA: 0x1FE4AF4 Offset: 0x1FE4AF4 VA: 0x1FE4AF4
	private void EndConfirmMenu(bool flag) { }

	// RVA: 0x1FE4DEC Offset: 0x1FE4DEC VA: 0x1FE4DEC
	protected void OnLongPushListView(ListViewObject obj) { }

	// RVA: 0x1FE4E80 Offset: 0x1FE4E80 VA: 0x1FE4E80
	public void OnClickSelectDetail() { }

	// RVA: 0x1FE4EC4 Offset: 0x1FE4EC4 VA: 0x1FE4EC4
	public void OnClickFilterKind() { }

	// RVA: 0x1FE4FBC Offset: 0x1FE4FBC VA: 0x1FE4FBC
	public void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x1FE5088 Offset: 0x1FE5088 VA: 0x1FE5088
	protected void EndCloseSelectFilterKind() { }

	// RVA: 0x1FE4250 Offset: 0x1FE4250 VA: 0x1FE4250
	private void SetFilterButtonImage() { }

	// RVA: 0x1FE508C Offset: 0x1FE508C VA: 0x1FE508C
	public void OnClickBonusFilterKind() { }

	// RVA: 0x1FE5160 Offset: 0x1FE5160 VA: 0x1FE5160
	public void OnClickSortKind() { }

	// RVA: 0x1FE5258 Offset: 0x1FE5258 VA: 0x1FE5258
	protected void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x1FE531C Offset: 0x1FE531C VA: 0x1FE531C
	protected void EndCloseSelectSortKind() { }

	// RVA: 0x1FE5320 Offset: 0x1FE5320 VA: 0x1FE5320
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x1FE5410 Offset: 0x1FE5410 VA: 0x1FE5410 Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x1FE2A40 Offset: 0x1FE2A40 VA: 0x1FE2A40
	public long GetAmountSortValue(int svtId) { }

	// RVA: 0x1FE0FE4 Offset: 0x1FE0FE4 VA: 0x1FE0FE4
	public bool GetSwapLockList(out long[] lockList, out long[] unlockList) { }

	// RVA: 0x1FE12CC Offset: 0x1FE12CC VA: 0x1FE12CC
	public bool GetSwapChoiceList(out long[] choiceList, out long[] unchoiceList) { }

	// RVA: 0x1FE0FD8 Offset: 0x1FE0FD8 VA: 0x1FE0FD8
	public void setCanLongPushFlag(bool flag) { }

	// RVA: 0x1FE06B0 Offset: 0x1FE06B0 VA: 0x1FE06B0
	public void resetEquipItemBaseFlag() { }

	// RVA: 0x1FE18C0 Offset: 0x1FE18C0 VA: 0x1FE18C0
	public void ChangeIconScale() { }

	// RVA: 0x1FDEDB4 Offset: 0x1FDEDB4 VA: 0x1FDEDB4
	public string GetScaleButtonSpriteName() { }

	// RVA: 0x1FE5718 Offset: 0x1FE5718 VA: 0x1FE5718
	private static void .cctor() { }
}

// Namespace: 
public enum SupportServantEquipListViewManager.InitMode // TypeDefIndex: 10824
{
	// Fields
	public int value__; // 0x0
	public const SupportServantEquipListViewManager.InitMode NONE = 0;
	public const SupportServantEquipListViewManager.InitMode VALID = 1;
	public const SupportServantEquipListViewManager.InitMode INPUT = 2;
	public const SupportServantEquipListViewManager.InitMode MODIFY = 3;
}

// Namespace: 
public enum SupportServantEquipListViewManager.ResultKind // TypeDefIndex: 10825
{
	// Fields
	public int value__; // 0x0
	public const SupportServantEquipListViewManager.ResultKind CANCEL = 0;
	public const SupportServantEquipListViewManager.ResultKind DECIDE = 1;
	public const SupportServantEquipListViewManager.ResultKind SHOW_STATUS = 2;
	public const SupportServantEquipListViewManager.ResultKind SELECT = 3;
	public const SupportServantEquipListViewManager.ResultKind SELECTED_CHECK = 4;
}

// Namespace: 
public sealed class SupportServantEquipListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 10826
{
	// Methods

	// RVA: 0x1A06438 Offset: 0x1A06438 VA: 0x1A06438
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1A06448 Offset: 0x1A06448 VA: 0x1A06448 Slot: 11
	public virtual void Invoke(SupportServantEquipListViewManager.ResultKind kind, int result) { }

	// RVA: 0x1A0668C Offset: 0x1A0668C VA: 0x1A0668C Slot: 12
	public virtual IAsyncResult BeginInvoke(SupportServantEquipListViewManager.ResultKind kind, int result, AsyncCallback callback, object object) { }

	// RVA: 0x1A06734 Offset: 0x1A06734 VA: 0x1A06734 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SupportServantEquipListViewObject : ListViewObject // TypeDefIndex: 10827
{
	// Fields
	protected SupportServantEquipListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCE694C Offset: 0xCE694C VA: 0xCE694C
	[DebuggerBrowsableAttribute] // RVA: 0xCE694C Offset: 0xCE694C VA: 0xCE694C
	private Action callbackFunc; // 0x70
	protected SupportServantEquipListViewItemDraw itemDraw; // 0x78
	protected SupportServantEquipListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x1A06740 Offset: 0x1A06740 VA: 0x1A06740
	public void .ctor() { }

	// RVA: 0x1A067A8 Offset: 0x1A067A8 VA: 0x1A067A8
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1A06894 Offset: 0x1A06894 VA: 0x1A06894
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1A06980 Offset: 0x1A06980 VA: 0x1A06980
	protected void Awake() { }

	// RVA: 0x1A069F4 Offset: 0x1A069F4 VA: 0x1A069F4
	private void OnDestroy() { }

	// RVA: 0x1A06AA0 Offset: 0x1A06AA0 VA: 0x1A06AA0
	public SupportServantEquipListViewItem GetItem() { }

	// RVA: 0x1A06B24 Offset: 0x1A06B24 VA: 0x1A06B24 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1A06B54 Offset: 0x1A06B54 VA: 0x1A06B54 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x1A06B4C Offset: 0x1A06B4C VA: 0x1A06B4C
	protected void InitItem() { }

	// RVA: 0x1A06B7C Offset: 0x1A06B7C VA: 0x1A06B7C Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x1A06C84 Offset: 0x1A06C84 VA: 0x1A06C84 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1A06D8C Offset: 0x1A06D8C VA: 0x1A06D8C
	public void Init(SupportServantEquipListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1A07090 Offset: 0x1A07090 VA: 0x1A07090
	public void Init(SupportServantEquipListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x1A07114 Offset: 0x1A07114 VA: 0x1A07114
	public void Init(SupportServantEquipListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x1A06D0C Offset: 0x1A06D0C VA: 0x1A06D0C
	public void Init(SupportServantEquipListViewObject.InitMode initMode) { }

	// RVA: 0x1A06F7C Offset: 0x1A06F7C VA: 0x1A06F7C
	public void SetupDisp() { }

	// RVA: 0x1A07198 Offset: 0x1A07198 VA: 0x1A07198
	public void OnClickSelect() { }

	// RVA: 0x1A072AC Offset: 0x1A072AC VA: 0x1A072AC
	public void OnLongPush() { }

	// RVA: 0x1A07328 Offset: 0x1A07328 VA: 0x1A07328 Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum SupportServantEquipListViewObject.InitMode // TypeDefIndex: 10828
{
	// Fields
	public int value__; // 0x0
	public const SupportServantEquipListViewObject.InitMode INVISIBLE = 0;
	public const SupportServantEquipListViewObject.InitMode INVALID = 1;
	public const SupportServantEquipListViewObject.InitMode VALID = 2;
	public const SupportServantEquipListViewObject.InitMode INPUT = 3;
	public const SupportServantEquipListViewObject.InitMode MODIFY = 4;
}

// Namespace: 
protected enum SupportServantEquipListViewObject.State // TypeDefIndex: 10829
{
	// Fields
	public int value__; // 0x0
	public const SupportServantEquipListViewObject.State INIT = 0;
	public const SupportServantEquipListViewObject.State IDLE = 1;
	public const SupportServantEquipListViewObject.State MOVE = 2;
	public const SupportServantEquipListViewObject.State INPUT = 3;
}

// Namespace: 
public class SupportServantEquipServantItem // TypeDefIndex: 10830
{
	// Fields
	protected UserServantEntity userServantEntity; // 0x10
	protected ServantEntity servantEntity; // 0x18
	protected IconLabelInfo iconLabelInfo; // 0x20
	protected long oldEquipTargetId; // 0x28
	protected long equipTargetId; // 0x30
	protected UserServantEntity equipUserSvtEntity; // 0x38
	protected ServantEntity equipServantEntity; // 0x40

	// Properties
	public UserServantEntity UserServant { get; }
	public UserServantEntity EquipUserServant { get; }
	public string NameText { get; }
	public int Atk { get; }
	public int AdjustAtk { get; }
	public int Hp { get; }
	public int AdjustHp { get; }
	public long OldEquipUserSvtId { get; }
	public long EquipUserSvtId { get; }
	public bool IsEquip { get; }
	public int EquipLimitCount { get; }
	public int EquipLimitCountMax { get; }
	public int EquipAtk { get; }
	public int EquipHp { get; }
	public IconLabelInfo IconInfo { get; }

	// Methods

	// RVA: 0x1A073F8 Offset: 0x1A073F8 VA: 0x1A073F8
	public void .ctor(UserServantEntity entity, long equipSvtId) { }

	// RVA: 0x1A075C0 Offset: 0x1A075C0 VA: 0x1A075C0
	public void SetEquipTarget(long equipUserSvtId) { }

	// RVA: 0x1A07758 Offset: 0x1A07758 VA: 0x1A07758
	public UserServantEntity get_UserServant() { }

	// RVA: 0x1A07760 Offset: 0x1A07760 VA: 0x1A07760
	public UserServantEntity get_EquipUserServant() { }

	// RVA: 0x1A07768 Offset: 0x1A07768 VA: 0x1A07768
	public string get_NameText() { }

	// RVA: 0x1A07824 Offset: 0x1A07824 VA: 0x1A07824
	public int get_Atk() { }

	// RVA: 0x1A0783C Offset: 0x1A0783C VA: 0x1A0783C
	public int get_AdjustAtk() { }

	// RVA: 0x1A07854 Offset: 0x1A07854 VA: 0x1A07854
	public int get_Hp() { }

	// RVA: 0x1A0786C Offset: 0x1A0786C VA: 0x1A0786C
	public int get_AdjustHp() { }

	// RVA: 0x1A07884 Offset: 0x1A07884 VA: 0x1A07884
	public long get_OldEquipUserSvtId() { }

	// RVA: 0x1A0788C Offset: 0x1A0788C VA: 0x1A0788C
	public long get_EquipUserSvtId() { }

	// RVA: 0x1A07928 Offset: 0x1A07928 VA: 0x1A07928
	public bool get_IsEquip() { }

	// RVA: 0x1A07938 Offset: 0x1A07938 VA: 0x1A07938
	public int get_EquipLimitCount() { }

	// RVA: 0x1A079C0 Offset: 0x1A079C0 VA: 0x1A079C0
	public int get_EquipLimitCountMax() { }

	// RVA: 0x1A079FC Offset: 0x1A079FC VA: 0x1A079FC
	public int get_EquipAtk() { }

	// RVA: 0x1A07A14 Offset: 0x1A07A14 VA: 0x1A07A14
	public int get_EquipHp() { }

	// RVA: 0x1A07A2C Offset: 0x1A07A2C VA: 0x1A07A2C
	public IconLabelInfo get_IconInfo() { }

	// RVA: 0x1A07A34 Offset: 0x1A07A34 VA: 0x1A07A34
	public bool GetNpInfo(out TreasureDvcInfo tdInfo) { }

	// RVA: 0x1A07ACC Offset: 0x1A07ACC VA: 0x1A07ACC
	public int GetTreasureDeviceLevelIcon() { }
}

// Namespace: 
public class SupportServantEquipServantItemDraw : MonoBehaviour // TypeDefIndex: 10831
{
	// Fields
	[SerializeField] // RVA: 0xCE6988 Offset: 0xCE6988 VA: 0xCE6988
	protected ServantFaceIconComponent servantFaceIcon; // 0x18
	[SerializeField] // RVA: 0xCE6998 Offset: 0xCE6998 VA: 0xCE6998
	protected UISprite noneEquipSprite; // 0x20
	[SerializeField] // RVA: 0xCE69A8 Offset: 0xCE69A8 VA: 0xCE69A8
	protected UIMeshSprite equipSprite; // 0x28
	[SerializeField] // RVA: 0xCE69B8 Offset: 0xCE69B8 VA: 0xCE69B8
	protected UISprite equipLimitCountSprite; // 0x30
	[SerializeField] // RVA: 0xCE69C8 Offset: 0xCE69C8 VA: 0xCE69C8
	protected UILabel skillNameLabel; // 0x38
	[SerializeField] // RVA: 0xCE69D8 Offset: 0xCE69D8 VA: 0xCE69D8
	protected UILabel skillExplanationLabel; // 0x40
	[SerializeField] // RVA: 0xCE69E8 Offset: 0xCE69E8 VA: 0xCE69E8
	protected UIIconLabel hpIconLabel; // 0x48
	[SerializeField] // RVA: 0xCE69F8 Offset: 0xCE69F8 VA: 0xCE69F8
	protected UIIconLabel differHpIconLabel; // 0x50
	[SerializeField] // RVA: 0xCE6A08 Offset: 0xCE6A08 VA: 0xCE6A08
	protected UIIconLabel attackIconLabel; // 0x58
	[SerializeField] // RVA: 0xCE6A18 Offset: 0xCE6A18 VA: 0xCE6A18
	protected UIIconLabel differAttackIconLabel; // 0x60
	[SerializeField] // RVA: 0xCE6A28 Offset: 0xCE6A28 VA: 0xCE6A28
	protected UICommonButton equipButton; // 0x68
	[SerializeField] // RVA: 0xCE6A38 Offset: 0xCE6A38 VA: 0xCE6A38
	protected UICommonButton decideButton; // 0x70

	// Methods

	// RVA: 0x1A07AE0 Offset: 0x1A07AE0 VA: 0x1A07AE0
	public void .ctor() { }

	// RVA: 0x1A07AE8 Offset: 0x1A07AE8 VA: 0x1A07AE8
	public void SetItem(SupportServantEquipServantItem item) { }

	// RVA: 0x1A08394 Offset: 0x1A08394 VA: 0x1A08394
	public void SetInput(bool isInput) { }
}

// Namespace: 
public enum SupportServantEquipServantItemDraw.DispMode // TypeDefIndex: 10832
{
	// Fields
	public int value__; // 0x0
	public const SupportServantEquipServantItemDraw.DispMode INVISIBLE = 0;
	public const SupportServantEquipServantItemDraw.DispMode INVALID = 1;
	public const SupportServantEquipServantItemDraw.DispMode VALID = 2;
	public const SupportServantEquipServantItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class SupportServantListViewItem : ListViewItem // TypeDefIndex: 10833
{
	// Fields
	protected ObscuredLong[] equipIdList; // 0x70
	protected UserServantEntity userServantEntity; // 0x78
	protected ServantEntity servantEntity; // 0x80
	protected SupportServantData supportServantData; // 0x88
	protected ObscuredInt svtId; // 0x90
	protected int classId; // 0xA0
	protected int rarity; // 0xA4
	protected ObscuredInt friendship; // 0xA8
	protected int friendshipMax; // 0xB8
	protected bool isBase; // 0xBC
	protected bool isLock; // 0xBD
	protected bool isChoice; // 0xBE
	protected bool isSame; // 0xBF
	protected bool isEventJoin; // 0xC0
	protected bool isHeroine; // 0xC1
	protected bool isPushMode; // 0xC2
	protected bool isPush; // 0xC3
	protected bool isEnabled; // 0xC4
	protected ListViewSort.BonusFilterKind bonusKind; // 0xC8
	protected int bonusKindId; // 0xCC
	protected bool isEventUpVal; // 0xD0
	protected int priority; // 0xD4
	protected IconLabelInfo iconLabelInfo1; // 0xD8
	protected IconLabelInfo iconLabelInfo2; // 0xE0
	protected UserServantEntity equipUserServantEntity; // 0xE8
	protected ServantEntity equipServantEntity; // 0xF0
	protected EventUpValSetupInfo eventSetupInfo; // 0xF8
	private EventCampaignEntity[] eventFriendPoints; // 0x100
	protected long amountSortValue; // 0x108
	protected bool isSwapLock; // 0x110
	protected bool isSwapChoice; // 0x111
	protected bool isInvalidRarity; // 0x112
	protected bool isUseInSet; // 0x113
	protected int useSet; // 0x114
	private int hpReinforceValue; // 0x118
	private int atkReinforceValue; // 0x11C
	private int nowMaxHpReinforceValue; // 0x120
	private int nowMaxAtkReinforceValue; // 0x124

	// Properties
	public UserServantEntity UserServant { get; }
	public ServantEntity Servant { get; }
	public int SvtId { get; }
	public int Rarity { get; }
	public int ClassId { get; }
	public string NameText { get; }
	public bool IsBase { get; }
	public int Cost { get; }
	public int EquipCost { get; }
	public bool IsSame { get; }
	public bool IsEventJoin { get; }
	public bool IsLock { get; }
	public IconLabelInfo IconInfo1 { get; }
	public IconLabelInfo IconInfo2 { get; }
	public bool IsEquip { get; }
	public bool IsCanNotSelectHeroine { get; }
	public bool IsSwapLock { get; }
