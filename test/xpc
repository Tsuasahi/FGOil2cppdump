
	// RVA: 0x1789C24 Offset: 0x1789C24 VA: 0x1789C24
	private void CreateListCoroutine() { }

	// RVA: 0x1789F14 Offset: 0x1789F14 VA: 0x1789F14
	public void Close() { }

	// RVA: 0x1789F4C Offset: 0x1789F4C VA: 0x1789F4C
	public void TapBuffTypeSelectCallback(BuffList.TYPE buffType) { }
}

// Namespace: 
public class DebugEx : MonoBehaviour // TypeDefIndex: 7662
{
	// Methods

	// RVA: 0x178A194 Offset: 0x178A194 VA: 0x178A194
	public void .ctor() { }
}

// Namespace: 
public class DebugInputBuffComponent : MonoBehaviour // TypeDefIndex: 7663
{
	// Fields
	[SerializeField] // RVA: 0xCC209C Offset: 0xCC209C VA: 0xCC209C
	private UIToggle[] TargetPlayerToggleList; // 0x18
	[SerializeField] // RVA: 0xCC20AC Offset: 0xCC20AC VA: 0xCC20AC
	private UIToggle[] TargetEnemyToggleList; // 0x20
	[SerializeField] // RVA: 0xCC20BC Offset: 0xCC20BC VA: 0xCC20BC
	private UIInput BuffIdInput; // 0x28
	[SerializeField] // RVA: 0xCC20CC Offset: 0xCC20CC VA: 0xCC20CC
	private UIPopupList BuffPopupList; // 0x30
	[SerializeField] // RVA: 0xCC20DC Offset: 0xCC20DC VA: 0xCC20DC
	private UILabel SelectBuffLabel; // 0x38
	[SerializeField] // RVA: 0xCC20EC Offset: 0xCC20EC VA: 0xCC20EC
	private UIInput ValueInput; // 0x40
	[SerializeField] // RVA: 0xCC20FC Offset: 0xCC20FC VA: 0xCC20FC
	private UIInput TurnInput; // 0x48
	[SerializeField] // RVA: 0xCC210C Offset: 0xCC210C VA: 0xCC210C
	private UIInput CountInput; // 0x50
	[SerializeField] // RVA: 0xCC211C Offset: 0xCC211C VA: 0xCC211C
	private DebugBuffSelectComponent BuffSelect; // 0x58
	[SerializeField] // RVA: 0xCC212C Offset: 0xCC212C VA: 0xCC212C
	private UILabel SelectBuffName; // 0x60
	[SerializeField] // RVA: 0xCC213C Offset: 0xCC213C VA: 0xCC213C
	private UILabel SelectBuffDetail; // 0x68
	[SerializeField] // RVA: 0xCC214C Offset: 0xCC214C VA: 0xCC214C
	private DebugBuffTypeSelectComponent BuffTypeSelect; // 0x70
	[SerializeField] // RVA: 0xCC215C Offset: 0xCC215C VA: 0xCC215C
	private UIToggle FilterCheckBox; // 0x78
	[SerializeField] // RVA: 0xCC216C Offset: 0xCC216C VA: 0xCC216C
	private UILabel SelectBuffTypeName; // 0x80
	[SerializeField] // RVA: 0xCC217C Offset: 0xCC217C VA: 0xCC217C
	private UIInput SkillIdInput; // 0x88
	[SerializeField] // RVA: 0xCC218C Offset: 0xCC218C VA: 0xCC218C
	private DebugSkillSelectComponent SkillSelect; // 0x90
	[SerializeField] // RVA: 0xCC219C Offset: 0xCC219C VA: 0xCC219C
	private UILabel SelectSkillName; // 0x98
	[SerializeField] // RVA: 0xCC21AC Offset: 0xCC21AC VA: 0xCC21AC
	private UILabel SelectSkillDetail; // 0xA0
	[SerializeField] // RVA: 0xCC21BC Offset: 0xCC21BC VA: 0xCC21BC
	private UIInput SkillLvInput; // 0xA8
	[SerializeField] // RVA: 0xCC21CC Offset: 0xCC21CC VA: 0xCC21CC
	private UIScrollView ScrollView; // 0xB0
	[SerializeField] // RVA: 0xCC21DC Offset: 0xCC21DC VA: 0xCC21DC
	private UIInput ParamAddInput; // 0xB8
	[SerializeField] // RVA: 0xCC21EC Offset: 0xCC21EC VA: 0xCC21EC
	private UIInput ParamMaxInput; // 0xC0
	private BattleData data; // 0xC8
	private BuffList.TYPE selectBuffType; // 0xD0
	private bool isFirstOpen; // 0xD4
	private Transform debugMenuTran; // 0xD8

	// Methods

	// RVA: 0x178A19C Offset: 0x178A19C VA: 0x178A19C
	public void .ctor() { }

	// RVA: 0x178A1AC Offset: 0x178A1AC VA: 0x178A1AC
	public void Open(BattleData _data, Transform _debugMenuTran) { }

	// RVA: 0x178A304 Offset: 0x178A304 VA: 0x178A304
	public void cancel() { }

	// RVA: 0x178A37C Offset: 0x178A37C VA: 0x178A37C
	private BattleServantData[] GetTargetSvtList() { }

	// RVA: 0x178A5F8 Offset: 0x178A5F8 VA: 0x178A5F8
	public void OnSublitBuffId(string value) { }

	// RVA: 0x178A924 Offset: 0x178A924 VA: 0x178A924
	public void OpenBuffSelect() { }

	// RVA: 0x178A790 Offset: 0x178A790 VA: 0x178A790
	public void TapBuffSelectCallback(int id, string name, string detail, int buffType) { }

	// RVA: 0x178A9E4 Offset: 0x178A9E4 VA: 0x178A9E4
	public void OpenBuffTypeSelect() { }

	// RVA: 0x178AA78 Offset: 0x178AA78 VA: 0x178AA78
	public void TapBuffTypeSelectCallback(BuffList.TYPE buffType) { }

	// RVA: 0x178AB7C Offset: 0x178AB7C VA: 0x178AB7C
	public void TapBuffTypeFiler() { }

	// RVA: 0x178ABA8 Offset: 0x178ABA8 VA: 0x178ABA8
	public void TurnLeft() { }

	// RVA: 0x178AC44 Offset: 0x178AC44 VA: 0x178AC44
	public void TurnRight() { }

	// RVA: 0x178ACD8 Offset: 0x178ACD8 VA: 0x178ACD8
	private string GetFixTurnNum() { }

	// RVA: 0x178AD40 Offset: 0x178AD40 VA: 0x178AD40
	public void CountLeft() { }

	// RVA: 0x178ADDC Offset: 0x178ADDC VA: 0x178ADDC
	public void CountRight() { }

	// RVA: 0x178AE70 Offset: 0x178AE70 VA: 0x178AE70
	public void OnSublitSkillId(string value) { }

	// RVA: 0x178B19C Offset: 0x178B19C VA: 0x178B19C
	public void OpenSkillSelect() { }

	// RVA: 0x178B0B4 Offset: 0x178B0B4 VA: 0x178B0B4
	public void TapSkillSelectCallback(int id, string name, string detail) { }

	// RVA: 0x178B234 Offset: 0x178B234 VA: 0x178B234
	public void submit() { }
}

// Namespace: 
public class DebugInputComponent : BaseMonoBehaviour // TypeDefIndex: 7664
{
	// Fields
	public UIInput inputField; // 0x18
	public DebugInputComponent.EndInputCallBack inputCallBack; // 0x20

	// Methods

	// RVA: 0x178B7D4 Offset: 0x178B7D4 VA: 0x178B7D4
	public void .ctor() { }

	// RVA: 0x178B7DC Offset: 0x178B7DC VA: 0x178B7DC
	public void setCallBack(DebugInputComponent.EndInputCallBack cb) { }

	// RVA: 0x178B878 Offset: 0x178B878 VA: 0x178B878
	public void submit() { }

	// RVA: 0x178BC90 Offset: 0x178BC90 VA: 0x178BC90
	public void cancel() { }
}

// Namespace: 
public sealed class DebugInputComponent.EndInputCallBack : MulticastDelegate // TypeDefIndex: 7665
{
	// Methods

	// RVA: 0x178BD1C Offset: 0x178BD1C VA: 0x178BD1C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x178B8D0 Offset: 0x178B8D0 VA: 0x178B8D0 Slot: 11
	public virtual void Invoke(string input, bool submit) { }

	// RVA: 0x178BD2C Offset: 0x178BD2C VA: 0x178BD2C Slot: 12
	public virtual IAsyncResult BeginInvoke(string input, bool submit, AsyncCallback callback, object object) { }

	// RVA: 0x178BDCC Offset: 0x178BDCC VA: 0x178BDCC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class DebugInputSkillChangeComponent : MonoBehaviour // TypeDefIndex: 7666
{
	// Fields
	[SerializeField] // RVA: 0xCC21FC Offset: 0xCC21FC VA: 0xCC21FC
	private UIScrollView scrollView; // 0x18
	[SerializeField] // RVA: 0xCC220C Offset: 0xCC220C VA: 0xCC220C
	private UIToggle[] targetServants; // 0x20
	[SerializeField] // RVA: 0xCC221C Offset: 0xCC221C VA: 0xCC221C
	private UIToggle[] targetSkills; // 0x28
	[SerializeField] // RVA: 0xCC222C Offset: 0xCC222C VA: 0xCC222C
	private UIInput skillIdInput; // 0x30
	[SerializeField] // RVA: 0xCC223C Offset: 0xCC223C VA: 0xCC223C
	private UILabel selectSkillName; // 0x38
	[SerializeField] // RVA: 0xCC224C Offset: 0xCC224C VA: 0xCC224C
	private UILabel selectSkillDetail; // 0x40
	[SerializeField] // RVA: 0xCC225C Offset: 0xCC225C VA: 0xCC225C
	private UIInput skillLvInput; // 0x48
	[SerializeField] // RVA: 0xCC226C Offset: 0xCC226C VA: 0xCC226C
	private UILabel targetServantTitle; // 0x50
	private BattleLogic battleLogic; // 0x58
	private BattleData battleData; // 0x60
	private GameObject debugMenu; // 0x68
	private bool isFirstOpen; // 0x70
	private bool isPlayerChange; // 0x71

	// Methods

	// RVA: 0x178BDD8 Offset: 0x178BDD8 VA: 0x178BDD8
	public void .ctor() { }

	// RVA: 0x178BDE8 Offset: 0x178BDE8 VA: 0x178BDE8
	public void Open(BattleLogic logic, BattleData data, GameObject menu, bool isPlayerChange) { }

	// RVA: 0x178C0BC Offset: 0x178C0BC VA: 0x178C0BC
	public void Close() { }

	// RVA: 0x178BF6C Offset: 0x178BF6C VA: 0x178BF6C
	public void DecideSkillIdInput(string value) { }

	// RVA: 0x178C118 Offset: 0x178C118 VA: 0x178C118
	private void SelectSkill(int skillId, string skillName, string skillDetail) { }

	// RVA: 0x178C200 Offset: 0x178C200 VA: 0x178C200
	private BattleServantData[] getTargetServantDataArray() { }

	// RVA: 0x178C3B4 Offset: 0x178C3B4 VA: 0x178C3B4
	private BattleSkillInfoData[] getTargetSkillInfoDataArray(BattleServantData[] targetServantDataArray) { }

	// RVA: 0x178C57C Offset: 0x178C57C VA: 0x178C57C
	public void DecideSkillChange() { }
}

// Namespace: 
public class DebugMenuComponent : MonoBehaviour // TypeDefIndex: 7667
{
	// Fields
	public UILabel titlelabel; // 0x18
	private DebugMenuComponent.TYPE type; // 0x20
	private string title; // 0x28
	private string originalTitle; // 0x30
	private int param; // 0x38
	private string strParam; // 0x40
	private bool flg; // 0x48
	private int min; // 0x4C
	private int max; // 0x50
	private DebugPanelRootComponent.menuDelegate menudel; // 0x58
	private DebugPanelRootComponent.tgrDelegate tgrdel; // 0x60
	private DebugPanelRootComponent.paramDelegate paramdel; // 0x68
	private DebugPanelRootComponent.paramtgrDelegate paramtgrdel; // 0x70
	private DebugPanelRootComponent.paramStrDelegate paramStrdel; // 0x78
	[SerializeField] // RVA: 0xCC227C Offset: 0xCC227C VA: 0xCC227C
	private GameObject checkMark; // 0x80

	// Properties
	public bool isFavorite { get; }

	// Methods

	// RVA: 0x178E594 Offset: 0x178E594 VA: 0x178E594
	public void .ctor() { }

	// RVA: 0x178E59C Offset: 0x178E59C VA: 0x178E59C
	public bool get_isFavorite() { }

	// RVA: 0x178E5CC Offset: 0x178E5CC VA: 0x178E5CC
	public void setTitle(string txt) { }

	// RVA: 0x178E5DC Offset: 0x178E5DC VA: 0x178E5DC
	public void setParam(int param) { }

	// RVA: 0x178E5E4 Offset: 0x178E5E4 VA: 0x178E5E4
	public void setStringParam(string param) { }

	// RVA: 0x178E5EC Offset: 0x178E5EC VA: 0x178E5EC
	public void setTgr(bool initFlg) { }

	// RVA: 0x178E5F8 Offset: 0x178E5F8 VA: 0x178E5F8
	public void updateTitleLabel() { }

	// RVA: 0x178E89C Offset: 0x178E89C VA: 0x178E89C
	public void setInitDlg(string txt, DebugPanelRootComponent.menuDelegate del) { }

	// RVA: 0x178E8AC Offset: 0x178E8AC VA: 0x178E8AC
	public void setInitDlg(string txt, DebugPanelRootComponent.tgrDelegate del, bool flg) { }

	// RVA: 0x178E8C8 Offset: 0x178E8C8 VA: 0x178E8C8
	public void setInitDlg(string txt, DebugPanelRootComponent.paramDelegate del, int param) { }

	// RVA: 0x178E8E0 Offset: 0x178E8E0 VA: 0x178E8E0
	public void setInitDlg(string txt, DebugPanelRootComponent.paramtgrDelegate del, int param, bool flg) { }

	// RVA: 0x178E900 Offset: 0x178E900 VA: 0x178E900
	public void setInitDlg(string txt, DebugPanelRootComponent.paramStrDelegate del, string param) { }

	// RVA: 0x178E918 Offset: 0x178E918 VA: 0x178E918
	public void setInitDlg(string txt, DebugPanelRootComponent.paramDelegate del, int param, int min, int max) { }

	// RVA: 0x178E934 Offset: 0x178E934 VA: 0x178E934
	public string getTitle() { }

	// RVA: 0x178E93C Offset: 0x178E93C VA: 0x178E93C
	public void OnClickMenu() { }

	// RVA: 0x178E5D4 Offset: 0x178E5D4 VA: 0x178E5D4
	private string SetSelectMenuColor(string title) { }

	// RVA: 0x178EAC0 Offset: 0x178EAC0 VA: 0x178EAC0
	public void SetFavorite(bool favorite) { }

	// RVA: 0x178EAF8 Offset: 0x178EAF8 VA: 0x178EAF8
	public void OnClickCheckBox() { }
}

// Namespace: 
public enum DebugMenuComponent.TYPE // TypeDefIndex: 7668
{
	// Fields
	public int value__; // 0x0
	public const DebugMenuComponent.TYPE SELECT = 0;
	public const DebugMenuComponent.TYPE TGR = 1;
	public const DebugMenuComponent.TYPE PARAM = 2;
	public const DebugMenuComponent.TYPE PARAM_TGR = 3;
	public const DebugMenuComponent.TYPE PARAM_STR = 4;
	public const DebugMenuComponent.TYPE PARAM_CHANGE = 5;
}

// Namespace: 
public class DebugOutputLabelLog : MonoBehaviour // TypeDefIndex: 7669
{
	// Methods

	// RVA: 0x1618B88 Offset: 0x1618B88 VA: 0x1618B88
	public void .ctor() { }
}

// Namespace: 
public class DebugPanelRootComponent : MonoBehaviour // TypeDefIndex: 7670
{
	// Fields
	public Transform menuRoot; // 0x18
	public UILabel debugStr; // 0x20
	public GameObject debugOutputLabel; // 0x28
	public GameObject mst_selectmenu; // 0x30
	public List<GameObject> list; // 0x38
	public DebugInputComponent debuginput; // 0x40
	protected DebugInputComponent.EndInputCallBack debugInputCallBackFunc; // 0x48
	public DebugInputBuffComponent debugBuffinput; // 0x50
	public DebugInputSkillChangeComponent debugInputSkillChange; // 0x58
	[SerializeField] // RVA: 0xCC228C Offset: 0xCC228C VA: 0xCC228C
	private GameObject checkMark; // 0x60
	private const int MenuDifference = -70;
	private const string DebugMenuSaveKey = "BattleDebugMenuFavorite";
	private const string FavoriteSaveKey = "BattleKeepFavorite";
	public List<string> strlist; // 0x68

	// Methods

	// RVA: 0x1618B90 Offset: 0x1618B90 VA: 0x1618B90
	public void .ctor() { }

	// RVA: 0x1618C28 Offset: 0x1618C28 VA: 0x1618C28
	public void OpenWindow() { }

	// RVA: 0x1618C2C Offset: 0x1618C2C VA: 0x1618C2C
	public void CloseWindow() { }

	// RVA: 0x1618FC4 Offset: 0x1618FC4 VA: 0x1618FC4
	public void ClearMenu() { }

	// RVA: 0x161912C Offset: 0x161912C VA: 0x161912C
	private DebugMenuComponent createMenu() { }

	// RVA: 0x1619368 Offset: 0x1619368 VA: 0x1619368
	public void setMenu(string title, DebugPanelRootComponent.menuDelegate dg) { }

	// RVA: 0x16193B0 Offset: 0x16193B0 VA: 0x16193B0
	public void setMenu(string title, DebugPanelRootComponent.tgrDelegate dg, bool init) { }

	// RVA: 0x1619400 Offset: 0x1619400 VA: 0x1619400
	public void setMenu(string title, DebugPanelRootComponent.paramDelegate dg, int param) { }

	// RVA: 0x1619450 Offset: 0x1619450 VA: 0x1619450
	public void setMenu(string title, DebugPanelRootComponent.paramtgrDelegate dg, int param, bool init) { }

	// RVA: 0x16194B0 Offset: 0x16194B0 VA: 0x16194B0
	public void setMenu(string title, DebugPanelRootComponent.paramStrDelegate dg, string param) { }

	// RVA: 0x1619500 Offset: 0x1619500 VA: 0x1619500
	public void setMenu(string title, DebugPanelRootComponent.paramDelegate dg, int param, int min, int max) { }

	// RVA: 0x1619568 Offset: 0x1619568 VA: 0x1619568
	public void setLog(string str) { }

	// RVA: 0x16195A0 Offset: 0x16195A0 VA: 0x16195A0
	public void setLog(string[] strlist) { }

	// RVA: 0x16196C4 Offset: 0x16196C4 VA: 0x16196C4
	public void openInputWindow(DebugInputComponent.EndInputCallBack cb) { }

	// RVA: 0x1619814 Offset: 0x1619814 VA: 0x1619814
	public void debugInputCallBack(string input, bool submit) { }

	// RVA: 0x16198D0 Offset: 0x16198D0 VA: 0x16198D0
	public void openInputBuffWindow(BattleLogic logic, BattleData data) { }

	// RVA: 0x1619988 Offset: 0x1619988 VA: 0x1619988
	public void openInputSkillChangeWindow(BattleLogic logic, BattleData data, bool isPlayerChange) { }

	// RVA: 0x1619A78 Offset: 0x1619A78 VA: 0x1619A78
	public void OnClickFavoriteOnly() { }

	// RVA: 0x1618DE0 Offset: 0x1618DE0 VA: 0x1618DE0
	private void SaveDebugMenuFavorite() { }

	// RVA: 0x1619E5C Offset: 0x1619E5C VA: 0x1619E5C
	public void LoadDebugMenuFavorite() { }
}

// Namespace: 
public sealed class DebugPanelRootComponent.menuDelegate : MulticastDelegate // TypeDefIndex: 7671
{
	// Methods

	// RVA: 0x161A1C4 Offset: 0x161A1C4 VA: 0x161A1C4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x161A1D4 Offset: 0x161A1D4 VA: 0x161A1D4 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x161A3D4 Offset: 0x161A3D4 VA: 0x161A3D4 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x161A408 Offset: 0x161A408 VA: 0x161A408 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class DebugPanelRootComponent.tgrDelegate : MulticastDelegate // TypeDefIndex: 7672
{
	// Methods

	// RVA: 0x161ADD8 Offset: 0x161ADD8 VA: 0x161ADD8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x161ADE8 Offset: 0x161ADE8 VA: 0x161ADE8 Slot: 11
	public virtual void Invoke(bool flg) { }

	// RVA: 0x161B014 Offset: 0x161B014 VA: 0x161B014 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool flg, AsyncCallback callback, object object) { }

	// RVA: 0x161B0A4 Offset: 0x161B0A4 VA: 0x161B0A4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class DebugPanelRootComponent.paramDelegate : MulticastDelegate // TypeDefIndex: 7673
{
	// Methods

	// RVA: 0x161A414 Offset: 0x161A414 VA: 0x161A414
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x161A424 Offset: 0x161A424 VA: 0x161A424 Slot: 11
	public virtual void Invoke(int param) { }

	// RVA: 0x161A650 Offset: 0x161A650 VA: 0x161A650 Slot: 12
	public virtual IAsyncResult BeginInvoke(int param, AsyncCallback callback, object object) { }

	// RVA: 0x161A6DC Offset: 0x161A6DC VA: 0x161A6DC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class DebugPanelRootComponent.paramStrDelegate : MulticastDelegate // TypeDefIndex: 7674
{
	// Methods

	// RVA: 0x161A6E8 Offset: 0x161A6E8 VA: 0x161A6E8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x161A6F8 Offset: 0x161A6F8 VA: 0x161A6F8 Slot: 11
	public virtual void Invoke(string param) { }

	// RVA: 0x161AA98 Offset: 0x161AA98 VA: 0x161AA98 Slot: 12
	public virtual IAsyncResult BeginInvoke(string param, AsyncCallback callback, object object) { }

	// RVA: 0x161AABC Offset: 0x161AABC VA: 0x161AABC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class DebugPanelRootComponent.paramtgrDelegate : MulticastDelegate // TypeDefIndex: 7675
{
	// Methods

	// RVA: 0x161AAC8 Offset: 0x161AAC8 VA: 0x161AAC8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x161AAD8 Offset: 0x161AAD8 VA: 0x161AAD8 Slot: 11
	public virtual void Invoke(int param, bool flg) { }

	// RVA: 0x161AD1C Offset: 0x161AD1C VA: 0x161AD1C Slot: 12
	public virtual IAsyncResult BeginInvoke(int param, bool flg, AsyncCallback callback, object object) { }

	// RVA: 0x161ADCC Offset: 0x161ADCC VA: 0x161ADCC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public enum DebugPanelRootComponent.TAG // TypeDefIndex: 7676
{
	// Fields
	public int value__; // 0x0
	public const DebugPanelRootComponent.TAG SVT = 0;
	public const DebugPanelRootComponent.TAG AI = 1;
}

// Namespace: 
public class DebugPanelRootShortCutComponent : MonoBehaviour // TypeDefIndex: 7677
{
	// Methods

	// RVA: 0x161B0B0 Offset: 0x161B0B0 VA: 0x161B0B0
	public void .ctor() { }
}

// Namespace: 
public class DebugSkillSelectCellComponent : MonoBehaviour // TypeDefIndex: 7678
{
	// Fields
	[SerializeField] // RVA: 0xCC229C Offset: 0xCC229C VA: 0xCC229C
	private UILabel ShowLabel; // 0x18
	private int id; // 0x20
	private string name; // 0x28
	private string detail; // 0x30
	private Action<int, string, string> callback; // 0x38

	// Methods

	// RVA: 0x161C7F0 Offset: 0x161C7F0 VA: 0x161C7F0
	public void .ctor() { }

	// RVA: 0x161C7F8 Offset: 0x161C7F8 VA: 0x161C7F8
	public void Set(int _id, string _name, string _detail, Action<int, string, string> _callback) { }

	// RVA: 0x161C8F0 Offset: 0x161C8F0 VA: 0x161C8F0
	public void Tap() { }
}

// Namespace: 
public class DebugSkillSelectComponent : MonoBehaviour // TypeDefIndex: 7679
{
	// Fields
	[SerializeField] // RVA: 0xCC22AC Offset: 0xCC22AC VA: 0xCC22AC
	private GameObject BaseCell; // 0x18
	[SerializeField] // RVA: 0xCC22BC Offset: 0xCC22BC VA: 0xCC22BC
	private UIGrid grid; // 0x20
	private Action<int, string, string> callback; // 0x28
	private bool isListCreate; // 0x30

	// Methods

	// RVA: 0x161C958 Offset: 0x161C958 VA: 0x161C958
	public void .ctor() { }

	// RVA: 0x161C960 Offset: 0x161C960 VA: 0x161C960
	public void Open(Action<int, string, string> _callback) { }

	[DebuggerHiddenAttribute] // RVA: 0xD381EC Offset: 0xD381EC VA: 0xD381EC
	// RVA: 0x161CA04 Offset: 0x161CA04 VA: 0x161CA04
	private IEnumerator CreateListCoroutine() { }

	// RVA: 0x161CA7C Offset: 0x161CA7C VA: 0x161CA7C
	public void Close() { }

	// RVA: 0x161CAB4 Offset: 0x161CAB4 VA: 0x161CAB4
	public void TapSkillSelectCallback(int id, string name, string detail) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF0D0 Offset: 0xCAF0D0 VA: 0xCAF0D0
private sealed class DebugSkillSelectComponent.<CreateListCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 7680
{
	// Fields
	internal SkillMaster <skillMst>__0; // 0x10
	internal SkillEntity[] <skillEntList>__0; // 0x18
	internal SkillDetailMaster <detailMst>__0; // 0x20
	internal int <interval>__0; // 0x28
	internal int <cnt>__0; // 0x2C
	internal int <i>__1; // 0x30
	internal GameObject <cell>__2; // 0x38
	internal string <skillDetail>__2; // 0x40
	internal SkillDetailEntity <skillDetailEnt>__2; // 0x48
	internal DebugSkillSelectComponent $this; // 0x50
	internal object $current; // 0x58
	internal bool $disposing; // 0x60
	internal int $PC; // 0x64

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD46744 Offset: 0xD46744 VA: 0xD46744
	// RVA: 0x161CA74 Offset: 0x161CA74 VA: 0x161CA74
	public void .ctor() { }

	// RVA: 0x161CB58 Offset: 0x161CB58 VA: 0x161CB58 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46754 Offset: 0xD46754 VA: 0xD46754
	// RVA: 0x161D140 Offset: 0x161D140 VA: 0x161D140 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46764 Offset: 0xD46764 VA: 0xD46764
	// RVA: 0x161D148 Offset: 0x161D148 VA: 0x161D148 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46774 Offset: 0xD46774 VA: 0xD46774
	// RVA: 0x161D150 Offset: 0x161D150 VA: 0x161D150 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46784 Offset: 0xD46784 VA: 0xD46784
	// RVA: 0x161D164 Offset: 0x161D164 VA: 0x161D164 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class DisplayPrint : SingletonMonoBehaviour<DisplayPrint> // TypeDefIndex: 7681
{
	// Methods

	// RVA: 0x16303AC Offset: 0x16303AC VA: 0x16303AC
	public void .ctor() { }

	[ConditionalAttribute] // RVA: 0xD381FC Offset: 0xD381FC VA: 0xD381FC
	// RVA: 0x16303FC Offset: 0x16303FC VA: 0x16303FC
	public static void CreateDisplayPrintPanel() { }

	[ConditionalAttribute] // RVA: 0xD38234 Offset: 0xD38234 VA: 0xD38234
	// RVA: 0x1630400 Offset: 0x1630400 VA: 0x1630400
	public void DrawString(string key, float posX, float posY, string text) { }

	[ConditionalAttribute] // RVA: 0xD3826C Offset: 0xD3826C VA: 0xD3826C
	// RVA: 0x1630404 Offset: 0x1630404 VA: 0x1630404
	public void DrawString(string key, float posX, float posY, UIWidget.Pivot pivot, string text, Color color, Vector2 widgetSize) { }

	[ConditionalAttribute] // RVA: 0xD382A4 Offset: 0xD382A4 VA: 0xD382A4
	// RVA: 0x1630408 Offset: 0x1630408 VA: 0x1630408
	public void Remove(string key) { }

	[ConditionalAttribute] // RVA: 0xD382DC Offset: 0xD382DC VA: 0xD382DC
	// RVA: 0x163040C Offset: 0x163040C VA: 0x163040C
	public void Clear() { }
}

// Namespace: 
public class MultiLapStopWatch // TypeDefIndex: 7682
{
	// Fields
	private static readonly string DEFAULT_KEY; // 0x0
	private Stopwatch sw; // 0x10
	private Dictionary<string, MultiLapStopWatch.LapDetail> laps; // 0x18
	private string currentLapKey; // 0x20
	private long currentLapStartMilliSeconds; // 0x28

	// Methods

	// RVA: 0x17B8994 Offset: 0x17B8994 VA: 0x17B8994
	public void .ctor() { }

	// RVA: 0x17B8A6C Offset: 0x17B8A6C VA: 0x17B8A6C
	public void Start() { }

	// RVA: 0x17B8CA4 Offset: 0x17B8CA4 VA: 0x17B8CA4
	public void Stop() { }

	// RVA: 0x17B8B20 Offset: 0x17B8B20 VA: 0x17B8B20
	public void LapResume(string key) { }

	// RVA: 0x17B8CDC Offset: 0x17B8CDC VA: 0x17B8CDC
	public void LapPause() { }

	// RVA: 0x17B8D9C Offset: 0x17B8D9C VA: 0x17B8D9C
	public void ShowLap() { }

	// RVA: 0x17B8D54 Offset: 0x17B8D54 VA: 0x17B8D54
	private long GetElapsedMilliSeconds() { }

	// RVA: 0x17B9010 Offset: 0x17B9010 VA: 0x17B9010
	private static void .cctor() { }
}

// Namespace: 
private class MultiLapStopWatch.LapDetail // TypeDefIndex: 7683
{
	// Fields
	public long milliSec; // 0x10
	public long lapCount; // 0x18

	// Methods

	// RVA: 0x17B8D4C Offset: 0x17B8D4C VA: 0x17B8D4C
	public void .ctor() { }
}

// Namespace: 
public class BattleChangeSpecialShader : MonoBehaviour, IEffectMesh // TypeDefIndex: 7684
{
	// Fields
	[SerializeField] // RVA: 0xCC22CC Offset: 0xCC22CC VA: 0xCC22CC
	private int sourceServantId; // 0x18
	[SerializeField] // RVA: 0xCC22DC Offset: 0xCC22DC VA: 0xCC22DC
	private bool isCheckUniqueId; // 0x1C
	[SerializeField] // RVA: 0xCC22EC Offset: 0xCC22EC VA: 0xCC22EC
	[TooltipAttribute] // RVA: 0xCC22EC Offset: 0xCC22EC VA: 0xCC22EC
	private List<Renderer> targetRendererList; // 0x20
	[SerializeField] // RVA: 0xCC2338 Offset: 0xCC2338 VA: 0xCC2338
	[TooltipAttribute] // RVA: 0xCC2338 Offset: 0xCC2338 VA: 0xCC2338
	private bool isNPEffect; // 0x28
	[SerializeField] // RVA: 0xCC2384 Offset: 0xCC2384 VA: 0xCC2384
	[TooltipAttribute] // RVA: 0xCC2384 Offset: 0xCC2384 VA: 0xCC2384
	private bool isCreateShadowAura; // 0x29
	[SerializeField] // RVA: 0xCC23D0 Offset: 0xCC23D0 VA: 0xCC23D0
	[TooltipAttribute] // RVA: 0xCC23D0 Offset: 0xCC23D0 VA: 0xCC23D0
	private string shadowAuraNodeName; // 0x30
	private int targetId; // 0x38

	// Methods

	// RVA: 0x1D68FE4 Offset: 0x1D68FE4 VA: 0x1D68FE4
	public void .ctor() { }

	// RVA: 0x1D6905C Offset: 0x1D6905C VA: 0x1D6905C
	private void Start() { }

	// RVA: 0x1D69070 Offset: 0x1D69070 VA: 0x1D69070 Slot: 4
	public void SetTargetId(int uniqueId) { }

	// RVA: 0x1D6906C Offset: 0x1D6906C VA: 0x1D6906C Slot: 5
	public void Execute() { }

	// RVA: 0x1D69078 Offset: 0x1D69078 VA: 0x1D69078
	private void ChangeShader() { }

	// RVA: 0x1D696A0 Offset: 0x1D696A0 VA: 0x1D696A0
	private BattleActorControl GetModelBattleActor() { }
}

// Namespace: 
public class BattleEffectChangeTexture : MonoBehaviour, IEffectMesh // TypeDefIndex: 7685
{
	// Fields
	[SerializeField] // RVA: 0xCC241C Offset: 0xCC241C VA: 0xCC241C
	private int sourceServantId; // 0x18
	[SerializeField] // RVA: 0xCC242C Offset: 0xCC242C VA: 0xCC242C
	private int[] sourceServantIds; // 0x20
	[SerializeField] // RVA: 0xCC243C Offset: 0xCC243C VA: 0xCC243C
	private bool isCheckUniqueId; // 0x28
	[SerializeField] // RVA: 0xCC244C Offset: 0xCC244C VA: 0xCC244C
	[TooltipAttribute] // RVA: 0xCC244C Offset: 0xCC244C VA: 0xCC244C
	private bool isNPEffect; // 0x29
	[SerializeField] // RVA: 0xCC2498 Offset: 0xCC2498 VA: 0xCC2498
	[TooltipAttribute] // RVA: 0xCC2498 Offset: 0xCC2498 VA: 0xCC2498
	private string searchMeshWord; // 0x30
	[SerializeField] // RVA: 0xCC24E4 Offset: 0xCC24E4 VA: 0xCC24E4
	[TooltipAttribute] // RVA: 0xCC24E4 Offset: 0xCC24E4 VA: 0xCC24E4
	private List<Renderer> targetRendererList; // 0x38
	[SpaceAttribute] // RVA: 0xCC2530 Offset: 0xCC2530 VA: 0xCC2530
	[SerializeField] // RVA: 0xCC2530 Offset: 0xCC2530 VA: 0xCC2530
	[TooltipAttribute] // RVA: 0xCC2530 Offset: 0xCC2530 VA: 0xCC2530
	private bool isCreateShadowAura; // 0x40
	[SerializeField] // RVA: 0xCC2590 Offset: 0xCC2590 VA: 0xCC2590
	[TooltipAttribute] // RVA: 0xCC2590 Offset: 0xCC2590 VA: 0xCC2590
	private string shadowAuraNodeName; // 0x48
	private int targetId; // 0x50

	// Methods

	// RVA: 0x1662114 Offset: 0x1662114 VA: 0x1662114
	public void .ctor() { }

	// RVA: 0x16621A4 Offset: 0x16621A4 VA: 0x16621A4
	private void Start() { }

	// RVA: 0x16621B4 Offset: 0x16621B4 VA: 0x16621B4 Slot: 5
	public void Execute() { }

	// RVA: 0x1662B6C Offset: 0x1662B6C VA: 0x1662B6C Slot: 4
	public void SetTargetId(int uniqueId) { }

	// RVA: 0x1662ABC Offset: 0x1662ABC VA: 0x1662ABC
	private void ChangeTexture(int servantId) { }

	// RVA: 0x1662318 Offset: 0x1662318 VA: 0x1662318
	private void ChangeTexture(BattleActorControl actor) { }

	// RVA: 0x1662B74 Offset: 0x1662B74 VA: 0x1662B74
	private BattleActorControl GetModelBattleActor(int servantId) { }
}

// Namespace: 
public class CharaAppearanceEffectComponent : ProgramEffectComponent // TypeDefIndex: 7686
{
	// Fields
	[SerializeField] // RVA: 0xCC25DC Offset: 0xCC25DC VA: 0xCC25DC
	protected GameObject subEffectBase; // 0x1B0
	[SerializeField] // RVA: 0xCC25EC Offset: 0xCC25EC VA: 0xCC25EC
	protected string subEffectName; // 0x1B8
	[SerializeField] // RVA: 0xCC25FC Offset: 0xCC25FC VA: 0xCC25FC
	protected Color erasureColor; // 0x1C0
	protected bool isWaitEndEffect; // 0x1D0
	protected UIStandFigureM figure; // 0x1D8
	protected CommonEffectComponent childEffect; // 0x1E0
	protected float addVolume; // 0x1E8
	protected Vector2 bodySize; // 0x1EC

	// Methods

	// RVA: 0x1F0E6A4 Offset: 0x1F0E6A4 VA: 0x1F0E6A4
	public void .ctor() { }

	// RVA: 0x1F0E6E0 Offset: 0x1F0E6E0 VA: 0x1F0E6E0 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x1F0E754 Offset: 0x1F0E754 VA: 0x1F0E754 Slot: 41
	public override void SetTweenVolume(float v) { }

	// RVA: 0x1F0E8E8 Offset: 0x1F0E8E8 VA: 0x1F0E8E8
	public void AppearanceStart(UIStandFigureM figure) { }

	// RVA: 0x1F0ED08 Offset: 0x1F0ED08 VA: 0x1F0ED08
	protected void EndCreateEffect(CommonEffectComponent effect) { }

	// RVA: 0x1F0EE04 Offset: 0x1F0EE04 VA: 0x1F0EE04 Slot: 43
	public override void Resume(bool isSkip) { }

	// RVA: 0x1F0ED24 Offset: 0x1F0ED24 VA: 0x1F0ED24
	protected void EffectResume() { }

	// RVA: 0x1F0EE28 Offset: 0x1F0EE28 VA: 0x1F0EE28
	protected void OnEndEffect() { }

	// RVA: 0x1F0EEA8 Offset: 0x1F0EEA8 VA: 0x1F0EEA8
	protected void OnDestroy() { }

	// RVA: 0x1F0EF60 Offset: 0x1F0EF60 VA: 0x1F0EF60 Slot: 21
	protected override void OnUpdate() { }
}

// Namespace: 
public class CharaAppearanceReverseEffectComponent : ProgramEffectComponent // TypeDefIndex: 7687
{
	// Fields
	[SerializeField] // RVA: 0xCC260C Offset: 0xCC260C VA: 0xCC260C
	protected GameObject subEffectBase; // 0x1B0
	[SerializeField] // RVA: 0xCC261C Offset: 0xCC261C VA: 0xCC261C
	protected string subEffectName; // 0x1B8
	[SerializeField] // RVA: 0xCC262C Offset: 0xCC262C VA: 0xCC262C
	protected Color erasureColor; // 0x1C0
	protected bool isWaitEndEffect; // 0x1D0
	protected UIStandFigureM figure; // 0x1D8
	protected CommonEffectComponent childEffect; // 0x1E0
	protected float addVolume; // 0x1E8
	protected Vector2 bodySize; // 0x1EC

	// Methods

	// RVA: 0x1F0F034 Offset: 0x1F0F034 VA: 0x1F0F034
	public void .ctor() { }

	// RVA: 0x1F0F070 Offset: 0x1F0F070 VA: 0x1F0F070 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x1F0F0E4 Offset: 0x1F0F0E4 VA: 0x1F0F0E4 Slot: 41
	public override void SetTweenVolume(float v) { }

	// RVA: 0x1F0F278 Offset: 0x1F0F278 VA: 0x1F0F278
	public void AppearanceStart(UIStandFigureM figure) { }

	// RVA: 0x1F0F698 Offset: 0x1F0F698 VA: 0x1F0F698
	protected void EndCreateEffect(CommonEffectComponent effect) { }

	// RVA: 0x1F0F794 Offset: 0x1F0F794 VA: 0x1F0F794 Slot: 43
	public override void Resume(bool isSkip) { }

	// RVA: 0x1F0F6B4 Offset: 0x1F0F6B4 VA: 0x1F0F6B4
	protected void EffectResume() { }

	// RVA: 0x1F0F7B8 Offset: 0x1F0F7B8 VA: 0x1F0F7B8
	protected void OnEndEffect() { }

	// RVA: 0x1F0F838 Offset: 0x1F0F838 VA: 0x1F0F838
	protected void OnDestroy() { }

	// RVA: 0x1F0F8F0 Offset: 0x1F0F8F0 VA: 0x1F0F8F0 Slot: 21
	protected override void OnUpdate() { }
}

// Namespace: 
public class CharaCutEffectComponent : ProgramEffectComponent // TypeDefIndex: 7688
{
	// Fields
	protected UIImageM image; // 0x1B0
	protected AssetData wipeData; // 0x1B8
	protected float addVolume; // 0x1C0
	protected Vector2 bodySize; // 0x1C4
	protected float mgd; // 0x1CC
	protected bool isCutBusy; // 0x1D0

	// Methods

	// RVA: 0x1F0F9C4 Offset: 0x1F0F9C4 VA: 0x1F0F9C4
	public void .ctor() { }

	// RVA: 0x1F0F9CC Offset: 0x1F0F9CC VA: 0x1F0F9CC Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x1F0FA40 Offset: 0x1F0FA40 VA: 0x1F0FA40 Slot: 41
	public override void SetTweenVolume(float v) { }

	// RVA: 0x1F0FA84 Offset: 0x1F0FA84 VA: 0x1F0FA84
	public bool IsBusyCut() { }

	// RVA: 0x1F0FA8C Offset: 0x1F0FA8C VA: 0x1F0FA8C
	public void CutinStart(UIImageM image, string wipeName, float mgd) { }

	// RVA: 0x1F0FB94 Offset: 0x1F0FB94 VA: 0x1F0FB94
	protected void EndLoadWipe(AssetData data) { }

	// RVA: 0x1F0FEC8 Offset: 0x1F0FEC8 VA: 0x1F0FEC8 Slot: 43
	public override void Resume(bool isSkip) { }

	// RVA: 0x1F0FC64 Offset: 0x1F0FC64 VA: 0x1F0FC64
	protected void CutinResume() { }

	// RVA: 0x1F0FEEC Offset: 0x1F0FEEC VA: 0x1F0FEEC
	protected void OnEndCutinEffect() { }

	// RVA: 0x1F0FEF4 Offset: 0x1F0FEF4 VA: 0x1F0FEF4
	public void CutoutStart(float time, bool isSkip) { }

	// RVA: 0x1F10038 Offset: 0x1F10038 VA: 0x1F10038
	protected void OnEndCutoutEffect() { }

	// RVA: 0x1F100B8 Offset: 0x1F100B8 VA: 0x1F100B8
	protected void OnDestroy() { }
}

// Namespace: 
public class CharaErasureEffectComponent : ProgramEffectComponent // TypeDefIndex: 7689
{
	// Fields
	[SerializeField] // RVA: 0xCC263C Offset: 0xCC263C VA: 0xCC263C
	protected GameObject subEffectBase; // 0x1B0
	[SerializeField] // RVA: 0xCC264C Offset: 0xCC264C VA: 0xCC264C
	protected string subEffectName; // 0x1B8
	[SerializeField] // RVA: 0xCC265C Offset: 0xCC265C VA: 0xCC265C
	protected Color erasureColor; // 0x1C0
	protected bool isWaitEndEffect; // 0x1D0
	protected UIStandFigureM figure; // 0x1D8
	protected CommonEffectComponent childEffect; // 0x1E0
	protected float addVolume; // 0x1E8
	protected Vector2 bodySize; // 0x1EC

	// Methods

	// RVA: 0x1F101A8 Offset: 0x1F101A8 VA: 0x1F101A8
	public void .ctor() { }

	// RVA: 0x1F101E4 Offset: 0x1F101E4 VA: 0x1F101E4 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x1F10258 Offset: 0x1F10258 VA: 0x1F10258 Slot: 41
	public override void SetTweenVolume(float v) { }

	// RVA: 0x1F103EC Offset: 0x1F103EC VA: 0x1F103EC
	public void ErasureStart(UIStandFigureM figure) { }

	// RVA: 0x1F107BC Offset: 0x1F107BC VA: 0x1F107BC
	protected void EndCreateEffect(CommonEffectComponent effect) { }

	// RVA: 0x1F108B8 Offset: 0x1F108B8 VA: 0x1F108B8 Slot: 43
	public override void Resume(bool isSkip) { }

	// RVA: 0x1F107D8 Offset: 0x1F107D8 VA: 0x1F107D8
	protected void EffectResume() { }

	// RVA: 0x1F108DC Offset: 0x1F108DC VA: 0x1F108DC
	protected void OnEndEffect() { }

	// RVA: 0x1F1095C Offset: 0x1F1095C VA: 0x1F1095C
	protected void OnDestroy() { }

	// RVA: 0x1F10A14 Offset: 0x1F10A14 VA: 0x1F10A14 Slot: 21
	protected override void OnUpdate() { }
}

// Namespace: 
public class CharaErasureReverseEffectComponent : ProgramEffectComponent // TypeDefIndex: 7690
{
	// Fields
	[SerializeField] // RVA: 0xCC266C Offset: 0xCC266C VA: 0xCC266C
	protected GameObject subEffectBase; // 0x1B0
	[SerializeField] // RVA: 0xCC267C Offset: 0xCC267C VA: 0xCC267C
