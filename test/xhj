	// Methods

	// RVA: 0xD6CDA4 Offset: 0xD6CDA4 VA: 0xD6CDA4
	public void Add(Object driver, RectTransform rectTransform, DrivenTransformProperties drivenProperties) { }

	// RVA: 0xD6CDA8 Offset: 0xD6CDA8 VA: 0xD6CDA8
	public void Clear() { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBDBD3C Offset: 0xBDBD3C VA: 0xBDBD3C
[NativeClassAttribute] // RVA: 0xBDBD3C Offset: 0xBDBD3C VA: 0xBDBD3C
public sealed class RectTransform : Transform // TypeDefIndex: 2561
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xBDDEF8 Offset: 0xBDDEF8 VA: 0xBDDEF8
	[DebuggerBrowsableAttribute] // RVA: 0xBDDEF8 Offset: 0xBDDEF8 VA: 0xBDDEF8
	private static RectTransform.ReapplyDrivenProperties reapplyDrivenProperties; // 0x0

	// Properties
	public Rect rect { get; }
	public Vector2 anchorMin { get; set; }
	public Vector2 anchorMax { get; set; }
	public Vector2 anchoredPosition { get; set; }
	public Vector2 sizeDelta { get; set; }
	public Vector2 pivot { get; set; }
	public Vector2 offsetMin { get; set; }
	public Vector2 offsetMax { get; set; }

	// Methods

	// RVA: 0x25791D0 Offset: 0x25791D0 VA: 0x25791D0
	public static void add_reapplyDrivenProperties(RectTransform.ReapplyDrivenProperties value) { }

	// RVA: 0x25792D0 Offset: 0x25792D0 VA: 0x25792D0
	public static void remove_reapplyDrivenProperties(RectTransform.ReapplyDrivenProperties value) { }

	// RVA: 0x25793D0 Offset: 0x25793D0 VA: 0x25793D0
	public Rect get_rect() { }

	// RVA: 0x2579470 Offset: 0x2579470 VA: 0x2579470
	public Vector2 get_anchorMin() { }

	// RVA: 0x257950C Offset: 0x257950C VA: 0x257950C
	public void set_anchorMin(Vector2 value) { }

	// RVA: 0x25795A4 Offset: 0x25795A4 VA: 0x25795A4
	public Vector2 get_anchorMax() { }

	// RVA: 0x2579640 Offset: 0x2579640 VA: 0x2579640
	public void set_anchorMax(Vector2 value) { }

	// RVA: 0x25796D8 Offset: 0x25796D8 VA: 0x25796D8
	public Vector2 get_anchoredPosition() { }

	// RVA: 0x2579774 Offset: 0x2579774 VA: 0x2579774
	public void set_anchoredPosition(Vector2 value) { }

	// RVA: 0x257980C Offset: 0x257980C VA: 0x257980C
	public Vector2 get_sizeDelta() { }

	// RVA: 0x25798A8 Offset: 0x25798A8 VA: 0x25798A8
	public void set_sizeDelta(Vector2 value) { }

	// RVA: 0x2579940 Offset: 0x2579940 VA: 0x2579940
	public Vector2 get_pivot() { }

	// RVA: 0x25799DC Offset: 0x25799DC VA: 0x25799DC
	public void set_pivot(Vector2 value) { }

	// RVA: 0x2579A74 Offset: 0x2579A74 VA: 0x2579A74
	public Vector2 get_offsetMin() { }

	// RVA: 0x2579B60 Offset: 0x2579B60 VA: 0x2579B60
	public void set_offsetMin(Vector2 value) { }

	// RVA: 0x2579D38 Offset: 0x2579D38 VA: 0x2579D38
	public Vector2 get_offsetMax() { }

	// RVA: 0x2579E44 Offset: 0x2579E44 VA: 0x2579E44
	public void set_offsetMax(Vector2 value) { }

	// RVA: 0x257A014 Offset: 0x257A014 VA: 0x257A014
	public void GetLocalCorners(Vector3[] fourCornersArray) { }

	// RVA: 0x257A220 Offset: 0x257A220 VA: 0x257A220
	public void GetWorldCorners(Vector3[] fourCornersArray) { }

	// RVA: 0x257A38C Offset: 0x257A38C VA: 0x257A38C
	public void SetInsetAndSizeFromParentEdge(RectTransform.Edge edge, float inset, float size) { }

	// RVA: 0x257A550 Offset: 0x257A550 VA: 0x257A550
	public void SetSizeWithCurrentAnchors(RectTransform.Axis axis, float size) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xBE642C Offset: 0xBE642C VA: 0xBE642C
	// RVA: 0x257A750 Offset: 0x257A750 VA: 0x257A750
	internal static void SendReapplyDrivenProperties(RectTransform driven) { }

	// RVA: 0x257A644 Offset: 0x257A644 VA: 0x257A644
	private Vector2 GetParentSize() { }

	// RVA: 0x25793FC Offset: 0x25793FC VA: 0x25793FC
	private void get_rect_Injected(out Rect ret) { }

	// RVA: 0x2579498 Offset: 0x2579498 VA: 0x2579498
	private void get_anchorMin_Injected(out Vector2 ret) { }

	// RVA: 0x2579530 Offset: 0x2579530 VA: 0x2579530
	private void set_anchorMin_Injected(ref Vector2 value) { }

	// RVA: 0x25795CC Offset: 0x25795CC VA: 0x25795CC
	private void get_anchorMax_Injected(out Vector2 ret) { }

	// RVA: 0x2579664 Offset: 0x2579664 VA: 0x2579664
	private void set_anchorMax_Injected(ref Vector2 value) { }

	// RVA: 0x2579700 Offset: 0x2579700 VA: 0x2579700
	private void get_anchoredPosition_Injected(out Vector2 ret) { }

	// RVA: 0x2579798 Offset: 0x2579798 VA: 0x2579798
	private void set_anchoredPosition_Injected(ref Vector2 value) { }

	// RVA: 0x2579834 Offset: 0x2579834 VA: 0x2579834
	private void get_sizeDelta_Injected(out Vector2 ret) { }

	// RVA: 0x25798CC Offset: 0x25798CC VA: 0x25798CC
	private void set_sizeDelta_Injected(ref Vector2 value) { }

	// RVA: 0x2579968 Offset: 0x2579968 VA: 0x2579968
	private void get_pivot_Injected(out Vector2 ret) { }

	// RVA: 0x2579A00 Offset: 0x2579A00 VA: 0x2579A00
	private void set_pivot_Injected(ref Vector2 value) { }
}

// Namespace: 
public enum RectTransform.Edge // TypeDefIndex: 2562
{
	// Fields
	public int value__; // 0x0
	public const RectTransform.Edge Left = 0;
	public const RectTransform.Edge Right = 1;
	public const RectTransform.Edge Top = 2;
	public const RectTransform.Edge Bottom = 3;
}

// Namespace: 
public enum RectTransform.Axis // TypeDefIndex: 2563
{
	// Fields
	public int value__; // 0x0
	public const RectTransform.Axis Horizontal = 0;
	public const RectTransform.Axis Vertical = 1;
}

// Namespace: 
public sealed class RectTransform.ReapplyDrivenProperties : MulticastDelegate // TypeDefIndex: 2564
{
	// Methods

	// RVA: 0x2161AE0 Offset: 0x2161AE0 VA: 0x2161AE0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2161AF0 Offset: 0x2161AF0 VA: 0x2161AF0 Slot: 11
	public virtual void Invoke(RectTransform driven) { }

	// RVA: 0x2161E90 Offset: 0x2161E90 VA: 0x2161E90 Slot: 12
	public virtual IAsyncResult BeginInvoke(RectTransform driven, AsyncCallback callback, object object) { }

	// RVA: 0x2161EB4 Offset: 0x2161EB4 VA: 0x2161EB4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBDBD9C Offset: 0xBDBD9C VA: 0xBDBD9C
[NativeHeaderAttribute] // RVA: 0xBDBD9C Offset: 0xBDBD9C VA: 0xBDBD9C
[NativeHeaderAttribute] // RVA: 0xBDBD9C Offset: 0xBDBD9C VA: 0xBDBD9C
[RequiredByNativeCodeAttribute] // RVA: 0xBDBD9C Offset: 0xBDBD9C VA: 0xBDBD9C
public class Transform : Component, IEnumerable // TypeDefIndex: 2565
{
	// Properties
	public Vector3 position { get; set; }
	public Vector3 localPosition { get; set; }
	public Vector3 eulerAngles { get; set; }
	public Vector3 localEulerAngles { get; set; }
	public Vector3 right { get; }
	public Vector3 up { get; }
	public Vector3 forward { get; }
	public Quaternion rotation { get; set; }
	public Quaternion localRotation { get; set; }
	public Vector3 localScale { get; set; }
	public Transform parent { get; set; }
	internal Transform parentInternal { get; set; }
	public Matrix4x4 worldToLocalMatrix { get; }
	public Matrix4x4 localToWorldMatrix { get; }
	public Transform root { get; }
	public int childCount { get; }
	public Vector3 lossyScale { get; }
	[NativePropertyAttribute] // RVA: 0xBE8740 Offset: 0xBE8740 VA: 0xBE8740
	public bool hasChanged { get; set; }

	// Methods

	// RVA: 0x2172120 Offset: 0x2172120 VA: 0x2172120
	protected void .ctor() { }

	// RVA: 0x2172128 Offset: 0x2172128 VA: 0x2172128
	public Vector3 get_position() { }

	// RVA: 0x21721CC Offset: 0x21721CC VA: 0x21721CC
	public void set_position(Vector3 value) { }

	// RVA: 0x2172268 Offset: 0x2172268 VA: 0x2172268
	public Vector3 get_localPosition() { }

	// RVA: 0x217230C Offset: 0x217230C VA: 0x217230C
	public void set_localPosition(Vector3 value) { }

	// RVA: 0x21723A8 Offset: 0x21723A8 VA: 0x21723A8
	public Vector3 get_eulerAngles() { }

	// RVA: 0x217240C Offset: 0x217240C VA: 0x217240C
	public void set_eulerAngles(Vector3 value) { }

	// RVA: 0x21724E0 Offset: 0x21724E0 VA: 0x21724E0
	public Vector3 get_localEulerAngles() { }

	// RVA: 0x2172544 Offset: 0x2172544 VA: 0x2172544
	public void set_localEulerAngles(Vector3 value) { }

	// RVA: 0x2172618 Offset: 0x2172618 VA: 0x2172618
	public Vector3 get_right() { }

	// RVA: 0x2172778 Offset: 0x2172778 VA: 0x2172778
	public Vector3 get_up() { }

	// RVA: 0x21728D8 Offset: 0x21728D8 VA: 0x21728D8
	public Vector3 get_forward() { }

	// RVA: 0x21723E0 Offset: 0x21723E0 VA: 0x21723E0
	public Quaternion get_rotation() { }

	// RVA: 0x21724B8 Offset: 0x21724B8 VA: 0x21724B8
	public void set_rotation(Quaternion value) { }

	// RVA: 0x2172518 Offset: 0x2172518 VA: 0x2172518
	public Quaternion get_localRotation() { }

	// RVA: 0x21725F0 Offset: 0x21725F0 VA: 0x21725F0
	public void set_localRotation(Quaternion value) { }

	// RVA: 0x2172C08 Offset: 0x2172C08 VA: 0x2172C08
	public Vector3 get_localScale() { }

	// RVA: 0x2172CAC Offset: 0x2172CAC VA: 0x2172CAC
	public void set_localScale(Vector3 value) { }

	// RVA: 0x2172D48 Offset: 0x2172D48 VA: 0x2172D48
	public Transform get_parent() { }

	// RVA: 0x2172D50 Offset: 0x2172D50 VA: 0x2172D50
	public void set_parent(Transform value) { }

	// RVA: 0x2172D4C Offset: 0x2172D4C VA: 0x2172D4C
	internal Transform get_parentInternal() { }

	// RVA: 0x2172DFC Offset: 0x2172DFC VA: 0x2172DFC
	internal void set_parentInternal(Transform value) { }

	// RVA: 0x2172E04 Offset: 0x2172E04 VA: 0x2172E04
	private Transform GetParent() { }

	// RVA: 0x2172E70 Offset: 0x2172E70 VA: 0x2172E70
	public void SetParent(Transform p) { }

	[FreeFunctionAttribute] // RVA: 0xBE643C Offset: 0xBE643C VA: 0xBE643C
	// RVA: 0x2172E78 Offset: 0x2172E78 VA: 0x2172E78
	public void SetParent(Transform parent, bool worldPositionStays) { }

	// RVA: 0x2172EFC Offset: 0x2172EFC VA: 0x2172EFC
	public Matrix4x4 get_worldToLocalMatrix() { }

	// RVA: 0x2172FB8 Offset: 0x2172FB8 VA: 0x2172FB8
	public Matrix4x4 get_localToWorldMatrix() { }

	// RVA: 0x2173074 Offset: 0x2173074 VA: 0x2173074
	public void SetPositionAndRotation(Vector3 position, Quaternion rotation) { }

	// RVA: 0x217312C Offset: 0x217312C VA: 0x217312C
	public void Translate(Vector3 translation, Space relativeTo) { }

	// RVA: 0x21732A0 Offset: 0x21732A0 VA: 0x21732A0
	public void Rotate(Vector3 eulers, Space relativeTo) { }

	// RVA: 0x21734E0 Offset: 0x21734E0 VA: 0x21734E0
	public void Rotate(Vector3 eulers) { }

	// RVA: 0x21734E8 Offset: 0x21734E8 VA: 0x21734E8
	public void Rotate(float xAngle, float yAngle, float zAngle, Space relativeTo) { }

	// RVA: 0x21734F8 Offset: 0x21734F8 VA: 0x21734F8
	public void Rotate(float xAngle, float yAngle, float zAngle) { }

	[NativeMethodAttribute] // RVA: 0xBE6484 Offset: 0xBE6484 VA: 0xBE6484
	// RVA: 0x2173500 Offset: 0x2173500 VA: 0x2173500
	internal void RotateAroundInternal(Vector3 axis, float angle) { }

	// RVA: 0x21735B8 Offset: 0x21735B8 VA: 0x21735B8
	public void Rotate(Vector3 axis, float angle, Space relativeTo) { }

	// RVA: 0x2173668 Offset: 0x2173668 VA: 0x2173668
	public void Rotate(Vector3 axis, float angle) { }

	// RVA: 0x2173670 Offset: 0x2173670 VA: 0x2173670
	public void LookAt(Transform target, Vector3 worldUp) { }

	// RVA: 0x217378C Offset: 0x217378C VA: 0x217378C
	public void LookAt(Transform target) { }

	// RVA: 0x2173758 Offset: 0x2173758 VA: 0x2173758
	public void LookAt(Vector3 worldPosition, Vector3 worldUp) { }

	// RVA: 0x21738B0 Offset: 0x21738B0 VA: 0x21738B0
	public void LookAt(Vector3 worldPosition) { }

	[FreeFunctionAttribute] // RVA: 0xBE64BC Offset: 0xBE64BC VA: 0xBE64BC
	// RVA: 0x217387C Offset: 0x217387C VA: 0x217387C
	private void Internal_LookAt(Vector3 worldPosition, Vector3 worldUp) { }

	// RVA: 0x2173264 Offset: 0x2173264 VA: 0x2173264
	public Vector3 TransformDirection(Vector3 direction) { }

	// RVA: 0x2173A60 Offset: 0x2173A60 VA: 0x2173A60
	public Vector3 InverseTransformDirection(Vector3 direction) { }

	// RVA: 0x2173B20 Offset: 0x2173B20 VA: 0x2173B20
	public Vector3 TransformPoint(Vector3 position) { }

	// RVA: 0x2173BE0 Offset: 0x2173BE0 VA: 0x2173BE0
	public Vector3 TransformPoint(float x, float y, float z) { }

	// RVA: 0x2173BE4 Offset: 0x2173BE4 VA: 0x2173BE4
	public Vector3 InverseTransformPoint(Vector3 position) { }

	// RVA: 0x2173CA4 Offset: 0x2173CA4 VA: 0x2173CA4
	public Transform get_root() { }

	// RVA: 0x2173CA8 Offset: 0x2173CA8 VA: 0x2173CA8
	private Transform GetRoot() { }

	[NativeMethodAttribute] // RVA: 0xBE6504 Offset: 0xBE6504 VA: 0xBE6504
	// RVA: 0x2173D14 Offset: 0x2173D14 VA: 0x2173D14
	public int get_childCount() { }

	[FreeFunctionAttribute] // RVA: 0xBE653C Offset: 0xBE653C VA: 0xBE653C
	// RVA: 0x2173D80 Offset: 0x2173D80 VA: 0x2173D80
	public void DetachChildren() { }

	// RVA: 0x2173DEC Offset: 0x2173DEC VA: 0x2173DEC
	public void SetAsFirstSibling() { }

	// RVA: 0x2173E58 Offset: 0x2173E58 VA: 0x2173E58
	public void SetAsLastSibling() { }

	[FreeFunctionAttribute] // RVA: 0xBE6584 Offset: 0xBE6584 VA: 0xBE6584
	// RVA: 0x2173EC4 Offset: 0x2173EC4 VA: 0x2173EC4
	private static Transform FindRelativeTransformWithPath(Transform transform, string path, bool isActiveOnly) { }

	// RVA: 0x2173F48 Offset: 0x2173F48 VA: 0x2173F48
	public Transform Find(string n) { }

	[NativeMethodAttribute] // RVA: 0xBE6594 Offset: 0xBE6594 VA: 0xBE6594
	// RVA: 0x2173FE8 Offset: 0x2173FE8 VA: 0x2173FE8
	public Vector3 get_lossyScale() { }

	[FreeFunctionAttribute] // RVA: 0xBE65CC Offset: 0xBE65CC VA: 0xBE65CC
	// RVA: 0x217408C Offset: 0x217408C VA: 0x217408C
	public bool IsChildOf(Transform parent) { }

	// RVA: 0x2174100 Offset: 0x2174100 VA: 0x2174100
	public bool get_hasChanged() { }

	// RVA: 0x217416C Offset: 0x217416C VA: 0x217416C
	public void set_hasChanged(bool value) { }

	// RVA: 0x21741E0 Offset: 0x21741E0 VA: 0x21741E0 Slot: 4
	public IEnumerator GetEnumerator() { }

	[NativeThrowsAttribute] // RVA: 0xBE6614 Offset: 0xBE6614 VA: 0xBE6614
	[FreeFunctionAttribute] // RVA: 0xBE6614 Offset: 0xBE6614 VA: 0xBE6614
	// RVA: 0x2174280 Offset: 0x2174280 VA: 0x2174280
	public Transform GetChild(int index) { }

	// RVA: 0x2172158 Offset: 0x2172158 VA: 0x2172158
	private void get_position_Injected(out Vector3 ret) { }

	// RVA: 0x21721F4 Offset: 0x21721F4 VA: 0x21721F4
	private void set_position_Injected(ref Vector3 value) { }

	// RVA: 0x2172298 Offset: 0x2172298 VA: 0x2172298
	private void get_localPosition_Injected(out Vector3 ret) { }

	// RVA: 0x2172334 Offset: 0x2172334 VA: 0x2172334
	private void set_localPosition_Injected(ref Vector3 value) { }

	// RVA: 0x2172A38 Offset: 0x2172A38 VA: 0x2172A38
	private void get_rotation_Injected(out Quaternion ret) { }

	// RVA: 0x2172AAC Offset: 0x2172AAC VA: 0x2172AAC
	private void set_rotation_Injected(ref Quaternion value) { }

	// RVA: 0x2172B20 Offset: 0x2172B20 VA: 0x2172B20
	private void get_localRotation_Injected(out Quaternion ret) { }

	// RVA: 0x2172B94 Offset: 0x2172B94 VA: 0x2172B94
	private void set_localRotation_Injected(ref Quaternion value) { }

	// RVA: 0x2172C38 Offset: 0x2172C38 VA: 0x2172C38
	private void get_localScale_Injected(out Vector3 ret) { }

	// RVA: 0x2172CD4 Offset: 0x2172CD4 VA: 0x2172CD4
	private void set_localScale_Injected(ref Vector3 value) { }

	// RVA: 0x2172F44 Offset: 0x2172F44 VA: 0x2172F44
	private void get_worldToLocalMatrix_Injected(out Matrix4x4 ret) { }

	// RVA: 0x2173000 Offset: 0x2173000 VA: 0x2173000
	private void get_localToWorldMatrix_Injected(out Matrix4x4 ret) { }

	// RVA: 0x21730A8 Offset: 0x21730A8 VA: 0x21730A8
	private void SetPositionAndRotation_Injected(ref Vector3 position, ref Quaternion rotation) { }

	// RVA: 0x217352C Offset: 0x217352C VA: 0x217352C
	private void RotateAroundInternal_Injected(ref Vector3 axis, float angle) { }

	// RVA: 0x2173958 Offset: 0x2173958 VA: 0x2173958
	private void Internal_LookAt_Injected(ref Vector3 worldPosition, ref Vector3 worldUp) { }

	// RVA: 0x21739DC Offset: 0x21739DC VA: 0x21739DC
	private void TransformDirection_Injected(ref Vector3 direction, out Vector3 ret) { }

	// RVA: 0x2173A9C Offset: 0x2173A9C VA: 0x2173A9C
	private void InverseTransformDirection_Injected(ref Vector3 direction, out Vector3 ret) { }

	// RVA: 0x2173B5C Offset: 0x2173B5C VA: 0x2173B5C
	private void TransformPoint_Injected(ref Vector3 position, out Vector3 ret) { }

	// RVA: 0x2173C20 Offset: 0x2173C20 VA: 0x2173C20
	private void InverseTransformPoint_Injected(ref Vector3 position, out Vector3 ret) { }

	// RVA: 0x2174018 Offset: 0x2174018 VA: 0x2174018
	private void get_lossyScale_Injected(out Vector3 ret) { }
}

// Namespace: 
private class Transform.Enumerator : IEnumerator // TypeDefIndex: 2566
{
	// Fields
	private Transform outer; // 0x10
	private int currentIndex; // 0x18

	// Properties
	public object Current { get; }

	// Methods

	// RVA: 0x217424C Offset: 0x217424C VA: 0x217424C
	internal void .ctor(Transform outer) { }

	// RVA: 0x21742F4 Offset: 0x21742F4 VA: 0x21742F4 Slot: 4
	public object get_Current() { }

	// RVA: 0x2174328 Offset: 0x2174328 VA: 0x2174328 Slot: 5
	public bool MoveNext() { }

	// RVA: 0x2174370 Offset: 0x2174370 VA: 0x2174370 Slot: 6
	public void Reset() { }
}

// Namespace: UnityEngine.Experimental.U2D
[NativeTypeAttribute] // RVA: 0xBDBE30 Offset: 0xBDBE30 VA: 0xBDBE30
[NativeHeaderAttribute] // RVA: 0xBDBE30 Offset: 0xBDBE30 VA: 0xBDBE30
[RequiredByNativeCodeAttribute] // RVA: 0xBDBE30 Offset: 0xBDBE30 VA: 0xBDBE30
[Serializable]
public struct SpriteBone // TypeDefIndex: 2567
{
	// Fields
	[SerializeField] // RVA: 0xBDDF34 Offset: 0xBDDF34 VA: 0xBDDF34
	[NativeNameAttribute] // RVA: 0xBDDF34 Offset: 0xBDDF34 VA: 0xBDDF34
	private string m_Name; // 0x0
	[NativeNameAttribute] // RVA: 0xBDDF80 Offset: 0xBDDF80 VA: 0xBDDF80
	[SerializeField] // RVA: 0xBDDF80 Offset: 0xBDDF80 VA: 0xBDDF80
	private Vector3 m_Position; // 0x8
	[SerializeField] // RVA: 0xBDDFCC Offset: 0xBDDFCC VA: 0xBDDFCC
	[NativeNameAttribute] // RVA: 0xBDDFCC Offset: 0xBDDFCC VA: 0xBDDFCC
	private Quaternion m_Rotation; // 0x14
	[SerializeField] // RVA: 0xBDE018 Offset: 0xBDE018 VA: 0xBDE018
	[NativeNameAttribute] // RVA: 0xBDE018 Offset: 0xBDE018 VA: 0xBDE018
	private float m_Length; // 0x24
	[NativeNameAttribute] // RVA: 0xBDE064 Offset: 0xBDE064 VA: 0xBDE064
	[SerializeField] // RVA: 0xBDE064 Offset: 0xBDE064 VA: 0xBDE064
	private int m_ParentId; // 0x28
}

// Namespace: UnityEngine.Sprites
public sealed class DataUtility // TypeDefIndex: 2568
{
	// Methods

	// RVA: 0x216B484 Offset: 0x216B484 VA: 0x216B484
	public static Vector4 GetInnerUV(Sprite sprite) { }

	// RVA: 0x216B4C8 Offset: 0x216B4C8 VA: 0x216B4C8
	public static Vector4 GetOuterUV(Sprite sprite) { }

	// RVA: 0x216B50C Offset: 0x216B50C VA: 0x216B50C
	public static Vector4 GetPadding(Sprite sprite) { }

	// RVA: 0x216B550 Offset: 0x216B550 VA: 0x216B550
	public static Vector2 GetMinSize(Sprite sprite) { }
}

// Namespace: UnityEngine
public enum SpriteMaskInteraction // TypeDefIndex: 2569
{
	// Fields
	public int value__; // 0x0
	public const SpriteMaskInteraction None = 0;
	public const SpriteMaskInteraction VisibleInsideMask = 1;
	public const SpriteMaskInteraction VisibleOutsideMask = 2;
}

// Namespace: UnityEngine
[RequireComponent] // RVA: 0xBDBEA4 Offset: 0xBDBEA4 VA: 0xBDBEA4
[NativeTypeAttribute] // RVA: 0xBDBEA4 Offset: 0xBDBEA4 VA: 0xBDBEA4
public sealed class SpriteRenderer : Renderer // TypeDefIndex: 2570
{
	// Properties
	public Sprite sprite { get; set; }
	public Color color { get; set; }

	// Methods

	// RVA: 0x216B268 Offset: 0x216B268 VA: 0x216B268
	public Sprite get_sprite() { }

	// RVA: 0x216B2D4 Offset: 0x216B2D4 VA: 0x216B2D4
	public void set_sprite(Sprite value) { }

	// RVA: 0x216B348 Offset: 0x216B348 VA: 0x216B348
	public Color get_color() { }

	// RVA: 0x216B3E8 Offset: 0x216B3E8 VA: 0x216B3E8
	public void set_color(Color value) { }

	// RVA: 0x216B374 Offset: 0x216B374 VA: 0x216B374
	private void get_color_Injected(out Color ret) { }

	// RVA: 0x216B410 Offset: 0x216B410 VA: 0x216B410
	private void set_color_Injected(ref Color value) { }
}

// Namespace: UnityEngine
public enum SpriteMeshType // TypeDefIndex: 2571
{
	// Fields
	public int value__; // 0x0
	public const SpriteMeshType FullRect = 0;
	public const SpriteMeshType Tight = 1;
}

// Namespace: UnityEngine
public enum SpritePackingMode // TypeDefIndex: 2572
{
	// Fields
	public int value__; // 0x0
	public const SpritePackingMode Tight = 0;
	public const SpritePackingMode Rectangle = 1;
}

// Namespace: UnityEngine
public enum SpriteSortPoint // TypeDefIndex: 2573
{
	// Fields
	public int value__; // 0x0
	public const SpriteSortPoint Center = 0;
	public const SpriteSortPoint Pivot = 1;
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBDBF2C Offset: 0xBDBF2C VA: 0xBDBF2C
[NativeHeaderAttribute] // RVA: 0xBDBF2C Offset: 0xBDBF2C VA: 0xBDBF2C
[ExcludeFromPresetAttribute] // RVA: 0xBDBF2C Offset: 0xBDBF2C VA: 0xBDBF2C
[NativeTypeAttribute] // RVA: 0xBDBF2C Offset: 0xBDBF2C VA: 0xBDBF2C
[NativeHeaderAttribute] // RVA: 0xBDBF2C Offset: 0xBDBF2C VA: 0xBDBF2C
public sealed class Sprite : Object // TypeDefIndex: 2574
{
	// Properties
	public Bounds bounds { get; }
	public Rect rect { get; }
	public Vector4 border { get; }
	public Texture2D texture { get; }
	public float pixelsPerUnit { get; }
	public Texture2D associatedAlphaSplitTexture { get; }
	public Vector2 pivot { get; }
	public bool packed { get; }
	public SpritePackingMode packingMode { get; }
	public Rect textureRect { get; }
	public Vector2 textureRectOffset { get; }
	public Vector2[] vertices { get; }
	public ushort[] triangles { get; }
	public Vector2[] uv { get; }

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xBE6670 Offset: 0xBE6670 VA: 0xBE6670
	// RVA: 0x2169FE0 Offset: 0x2169FE0 VA: 0x2169FE0
	private void .ctor() { }

	// RVA: 0x216A048 Offset: 0x216A048 VA: 0x216A048
	internal int GetPackingMode() { }

	// RVA: 0x216A0B4 Offset: 0x216A0B4 VA: 0x216A0B4
	internal int GetPacked() { }

	// RVA: 0x216A120 Offset: 0x216A120 VA: 0x216A120
	internal Rect GetTextureRect() { }

	// RVA: 0x216A1C0 Offset: 0x216A1C0 VA: 0x216A1C0
	internal Vector2 GetTextureRectOffset() { }

	// RVA: 0x216A25C Offset: 0x216A25C VA: 0x216A25C
	internal Vector4 GetInnerUVs() { }

	// RVA: 0x216A2FC Offset: 0x216A2FC VA: 0x216A2FC
	internal Vector4 GetOuterUVs() { }

	// RVA: 0x216A39C Offset: 0x216A39C VA: 0x216A39C
	internal Vector4 GetPadding() { }

	[FreeFunctionAttribute] // RVA: 0xBE6680 Offset: 0xBE6680 VA: 0xBE6680
	// RVA: 0x216A43C Offset: 0x216A43C VA: 0x216A43C
	internal static Sprite CreateSprite(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit, uint extrude, SpriteMeshType meshType, Vector4 border, bool generateFallbackPhysicsShape) { }

	// RVA: 0x216A554 Offset: 0x216A554 VA: 0x216A554
	public Bounds get_bounds() { }

	// RVA: 0x216A608 Offset: 0x216A608 VA: 0x216A608
	public Rect get_rect() { }

	// RVA: 0x216A6A8 Offset: 0x216A6A8 VA: 0x216A6A8
	public Vector4 get_border() { }

	// RVA: 0x216A748 Offset: 0x216A748 VA: 0x216A748
	public Texture2D get_texture() { }

	[NativeMethodAttribute] // RVA: 0xBE66B8 Offset: 0xBE66B8 VA: 0xBE66B8
	// RVA: 0x216A7B4 Offset: 0x216A7B4 VA: 0x216A7B4
	public float get_pixelsPerUnit() { }

	[NativeMethodAttribute] // RVA: 0xBE66F0 Offset: 0xBE66F0 VA: 0xBE66F0
	// RVA: 0x216A820 Offset: 0x216A820 VA: 0x216A820
	public Texture2D get_associatedAlphaSplitTexture() { }

	[NativeMethodAttribute] // RVA: 0xBE6728 Offset: 0xBE6728 VA: 0xBE6728
	// RVA: 0x216A88C Offset: 0x216A88C VA: 0x216A88C
	public Vector2 get_pivot() { }

	// RVA: 0x216A928 Offset: 0x216A928 VA: 0x216A928
	public bool get_packed() { }

	// RVA: 0x216A944 Offset: 0x216A944 VA: 0x216A944
	public SpritePackingMode get_packingMode() { }

	// RVA: 0x216A948 Offset: 0x216A948 VA: 0x216A948
	public Rect get_textureRect() { }

	// RVA: 0x216A9B4 Offset: 0x216A9B4 VA: 0x216A9B4
	public Vector2 get_textureRectOffset() { }

	[FreeFunctionAttribute] // RVA: 0xBE6760 Offset: 0xBE6760 VA: 0xBE6760
	// RVA: 0x216AAC8 Offset: 0x216AAC8 VA: 0x216AAC8
	public Vector2[] get_vertices() { }

	[FreeFunctionAttribute] // RVA: 0xBE67A8 Offset: 0xBE67A8 VA: 0xBE67A8
	// RVA: 0x216AB34 Offset: 0x216AB34 VA: 0x216AB34
	public ushort[] get_triangles() { }

	[FreeFunctionAttribute] // RVA: 0xBE67F0 Offset: 0xBE67F0 VA: 0xBE67F0
	// RVA: 0x216ABA0 Offset: 0x216ABA0 VA: 0x216ABA0
	public Vector2[] get_uv() { }

	// RVA: 0x216AC0C Offset: 0x216AC0C VA: 0x216AC0C
	public static Sprite Create(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit, uint extrude, SpriteMeshType meshType, Vector4 border, bool generateFallbackPhysicsShape) { }

	// RVA: 0x216B0D8 Offset: 0x216B0D8 VA: 0x216B0D8
	public static Sprite Create(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit, uint extrude, SpriteMeshType meshType, Vector4 border) { }

	// RVA: 0x216B0F8 Offset: 0x216B0F8 VA: 0x216B0F8
	public static Sprite Create(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit, uint extrude, SpriteMeshType meshType) { }

	// RVA: 0x216B254 Offset: 0x216B254 VA: 0x216B254
	public static Sprite Create(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit, uint extrude) { }

	// RVA: 0x216B25C Offset: 0x216B25C VA: 0x216B25C
	public static Sprite Create(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit) { }

	// RVA: 0x216A14C Offset: 0x216A14C VA: 0x216A14C
	private void GetTextureRect_Injected(out Rect ret) { }

	// RVA: 0x216A1E8 Offset: 0x216A1E8 VA: 0x216A1E8
	private void GetTextureRectOffset_Injected(out Vector2 ret) { }

	// RVA: 0x216A288 Offset: 0x216A288 VA: 0x216A288
	private void GetInnerUVs_Injected(out Vector4 ret) { }

	// RVA: 0x216A328 Offset: 0x216A328 VA: 0x216A328
	private void GetOuterUVs_Injected(out Vector4 ret) { }

	// RVA: 0x216A3C8 Offset: 0x216A3C8 VA: 0x216A3C8
	private void GetPadding_Injected(out Vector4 ret) { }

	// RVA: 0x216A498 Offset: 0x216A498 VA: 0x216A498
	private static Sprite CreateSprite_Injected(Texture2D texture, ref Rect rect, ref Vector2 pivot, float pixelsPerUnit, uint extrude, SpriteMeshType meshType, ref Vector4 border, bool generateFallbackPhysicsShape) { }

	// RVA: 0x216A594 Offset: 0x216A594 VA: 0x216A594
	private void get_bounds_Injected(out Bounds ret) { }

	// RVA: 0x216A634 Offset: 0x216A634 VA: 0x216A634
	private void get_rect_Injected(out Rect ret) { }

	// RVA: 0x216A6D4 Offset: 0x216A6D4 VA: 0x216A6D4
	private void get_border_Injected(out Vector4 ret) { }

	// RVA: 0x216A8B4 Offset: 0x216A8B4 VA: 0x216A8B4
	private void get_pivot_Injected(out Vector2 ret) { }
}

// Namespace: UnityEngine.U2D
[NativeHeaderAttribute] // RVA: 0xBDBFE4 Offset: 0xBDBFE4 VA: 0xBDBFE4
[NativeHeaderAttribute] // RVA: 0xBDBFE4 Offset: 0xBDBFE4 VA: 0xBDBFE4
[StaticAccessorAttribute] // RVA: 0xBDBFE4 Offset: 0xBDBFE4 VA: 0xBDBFE4
public class SpriteAtlasManager // TypeDefIndex: 2575
{
	// Fields
	[DebuggerBrowsableAttribute] // RVA: 0xBDE0B0 Offset: 0xBDE0B0 VA: 0xBDE0B0
	[CompilerGeneratedAttribute] // RVA: 0xBDE0B0 Offset: 0xBDE0B0 VA: 0xBDE0B0
	private static Action<string, Action<SpriteAtlas>> atlasRequested; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xBDE0EC Offset: 0xBDE0EC VA: 0xBDE0EC
	[DebuggerBrowsableAttribute] // RVA: 0xBDE0EC Offset: 0xBDE0EC VA: 0xBDE0EC
	private static Action<SpriteAtlas> atlasRegistered; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xBDE128 Offset: 0xBDE128 VA: 0xBDE128
	private static Action<SpriteAtlas> <>f__mg$cache0; // 0x10

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xBE6838 Offset: 0xBE6838 VA: 0xBE6838
	// RVA: 0x21743F0 Offset: 0x21743F0 VA: 0x21743F0
	private static bool RequestAtlas(string tag) { }

	// RVA: 0x217453C Offset: 0x217453C VA: 0x217453C
	public static void add_atlasRegistered(Action<SpriteAtlas> value) { }

	// RVA: 0x217467C Offset: 0x217467C VA: 0x217467C
	public static void remove_atlasRegistered(Action<SpriteAtlas> value) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xBE6848 Offset: 0xBE6848 VA: 0xBE6848
	// RVA: 0x21747BC Offset: 0x21747BC VA: 0x21747BC
	private static void PostRegisteredAtlas(SpriteAtlas spriteAtlas) { }

	// RVA: 0x217487C Offset: 0x217487C VA: 0x217487C
	internal static void Register(SpriteAtlas spriteAtlas) { }

	// RVA: 0x21748E8 Offset: 0x21748E8 VA: 0x21748E8
	private static void .cctor() { }
}

// Namespace: UnityEngine.U2D
[NativeHeaderAttribute] // RVA: 0xBDC06C Offset: 0xBDC06C VA: 0xBDC06C
[NativeTypeAttribute] // RVA: 0xBDC06C Offset: 0xBDC06C VA: 0xBDC06C
public class SpriteAtlas : Object // TypeDefIndex: 2576
{
	// Methods

	// RVA: 0x217437C Offset: 0x217437C VA: 0x217437C
	public bool CanBindTo(Sprite sprite) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2577
{}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBE99C0 Offset: 0xBE99C0 VA: 0xBE99C0
[NativeHeaderAttribute] // RVA: 0xBE99C0 Offset: 0xBE99C0 VA: 0xBE99C0
[NativeHeaderAttribute] // RVA: 0xBE99C0 Offset: 0xBE99C0 VA: 0xBE99C0
[NativeHeaderAttribute] // RVA: 0xBE99C0 Offset: 0xBE99C0 VA: 0xBE99C0
[NativeHeaderAttribute] // RVA: 0xBE99C0 Offset: 0xBE99C0 VA: 0xBE99C0
[NativeHeaderAttribute] // RVA: 0xBE99C0 Offset: 0xBE99C0 VA: 0xBE99C0
[NativeHeaderAttribute] // RVA: 0xBE99C0 Offset: 0xBE99C0 VA: 0xBE99C0
[NativeHeaderAttribute] // RVA: 0xBE99C0 Offset: 0xBE99C0 VA: 0xBE99C0
[NativeHeaderAttribute] // RVA: 0xBE99C0 Offset: 0xBE99C0 VA: 0xBE99C0
[NativeHeaderAttribute] // RVA: 0xBE99C0 Offset: 0xBE99C0 VA: 0xBE99C0
[ExcludeFromPresetAttribute] // RVA: 0xBE99C0 Offset: 0xBE99C0 VA: 0xBE99C0
[NativeHeaderAttribute] // RVA: 0xBE99C0 Offset: 0xBE99C0 VA: 0xBE99C0
public class AssetBundle : Object // TypeDefIndex: 2578
{
	// Methods

	// RVA: 0x2B98518 Offset: 0x2B98518 VA: 0x2B98518
	private void .ctor() { }

	[FreeFunctionAttribute] // RVA: 0xBE9C58 Offset: 0xBE9C58 VA: 0xBE9C58
	// RVA: 0x2B98580 Offset: 0x2B98580 VA: 0x2B98580
	internal static AssetBundleCreateRequest LoadFromMemoryAsync_Internal(byte[] binary, uint crc) { }

	// RVA: 0x2B985F4 Offset: 0x2B985F4 VA: 0x2B985F4
	public static AssetBundleCreateRequest LoadFromMemoryAsync(byte[] binary) { }

	// RVA: 0x2B985FC Offset: 0x2B985FC VA: 0x2B985FC
	public AssetBundleRequest LoadAssetAsync(string name) { }

	// RVA: 0x2B9868C Offset: 0x2B9868C VA: 0x2B9868C
	public AssetBundleRequest LoadAssetAsync(string name, Type type) { }

	// RVA: 0x2B98810 Offset: 0x2B98810 VA: 0x2B98810
	public AssetBundleRequest LoadAllAssetsAsync() { }

	// RVA: 0x2B98890 Offset: 0x2B98890 VA: 0x2B98890
	public AssetBundleRequest LoadAllAssetsAsync(Type type) { }

	[NativeThrowsAttribute] // RVA: 0xBE9C90 Offset: 0xBE9C90 VA: 0xBE9C90
	[NativeMethodAttribute] // RVA: 0xBE9C90 Offset: 0xBE9C90 VA: 0xBE9C90
	// RVA: 0x2B9878C Offset: 0x2B9878C VA: 0x2B9878C
	private AssetBundleRequest LoadAssetAsync_Internal(string name, Type type) { }

	[NativeMethodAttribute] // RVA: 0xBE9CDC Offset: 0xBE9CDC VA: 0xBE9CDC
	// RVA: 0x2B989BC Offset: 0x2B989BC VA: 0x2B989BC
	public void Unload(bool unloadAllLoadedObjects) { }

	[NativeMethodAttribute] // RVA: 0xBE9D14 Offset: 0xBE9D14 VA: 0xBE9D14
	// RVA: 0x2B98A30 Offset: 0x2B98A30 VA: 0x2B98A30
	public string[] GetAllScenePaths() { }

	[NativeThrowsAttribute] // RVA: 0xBE9D4C Offset: 0xBE9D4C VA: 0xBE9D4C
	[NativeMethodAttribute] // RVA: 0xBE9D4C Offset: 0xBE9D4C VA: 0xBE9D4C
	// RVA: 0x2B98938 Offset: 0x2B98938 VA: 0x2B98938
	private AssetBundleRequest LoadAssetWithSubAssetsAsync_Internal(string name, Type type) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBE9B74 Offset: 0xBE9B74 VA: 0xBE9B74
[RequiredByNativeCodeAttribute] // RVA: 0xBE9B74 Offset: 0xBE9B74 VA: 0xBE9B74
public class AssetBundleCreateRequest : AsyncOperation // TypeDefIndex: 2579
{
	// Properties
	public AssetBundle assetBundle { get; }

	// Methods

	// RVA: 0x2B98A9C Offset: 0x2B98A9C VA: 0x2B98A9C
	public void .ctor() { }

	[NativeMethodAttribute] // RVA: 0xBE9D98 Offset: 0xBE9D98 VA: 0xBE9D98
	// RVA: 0x2B98AA4 Offset: 0x2B98AA4 VA: 0x2B98AA4
	public AssetBundle get_assetBundle() { }
}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xBE9BC0 Offset: 0xBE9BC0 VA: 0xBE9BC0
[NativeHeaderAttribute] // RVA: 0xBE9BC0 Offset: 0xBE9BC0 VA: 0xBE9BC0
public class AssetBundleRecompressOperation : AsyncOperation // TypeDefIndex: 2580
{}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBE9C0C Offset: 0xBE9C0C VA: 0xBE9C0C
[RequiredByNativeCodeAttribute] // RVA: 0xBE9C0C Offset: 0xBE9C0C VA: 0xBE9C0C
public class AssetBundleRequest : AsyncOperation // TypeDefIndex: 2581
{
	// Properties
	public Object[] allAssets { get; }

	// Methods

	// RVA: 0x2B98B10 Offset: 0x2B98B10 VA: 0x2B98B10
	public void .ctor() { }

	[NativeMethodAttribute] // RVA: 0xBE9DD0 Offset: 0xBE9DD0 VA: 0xBE9DD0
	// RVA: 0x2B98B18 Offset: 0x2B98B18 VA: 0x2B98B18
	public Object[] get_allAssets() { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2582
{}

// Namespace: UnityEngine.Networking
[NativeHeaderAttribute] // RVA: 0xBEAF50 Offset: 0xBEAF50 VA: 0xBEAF50
[NativeHeaderAttribute] // RVA: 0xBEAF50 Offset: 0xBEAF50 VA: 0xBEAF50
[UsedByNativeCodeAttribute] // RVA: 0xBEAF50 Offset: 0xBEAF50 VA: 0xBEAF50
public class UnityWebRequestAsyncOperation : AsyncOperation // TypeDefIndex: 2583
{
	// Fields
	[DebuggerBrowsableAttribute] // RVA: 0xBEB1C0 Offset: 0xBEB1C0 VA: 0xBEB1C0
	[CompilerGeneratedAttribute] // RVA: 0xBEB1C0 Offset: 0xBEB1C0 VA: 0xBEB1C0
	private UnityWebRequest <webRequest>k__BackingField; // 0x20

	// Properties
	internal UnityWebRequest webRequest { set; }

	// Methods

	// RVA: 0x2B55010 Offset: 0x2B55010 VA: 0x2B55010
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xBEB2C0 Offset: 0xBEB2C0 VA: 0xBEB2C0
	// RVA: 0x2B539E0 Offset: 0x2B539E0 VA: 0x2B539E0
	internal void set_webRequest(UnityWebRequest value) { }
}

// Namespace: UnityEngine.Networking
[NativeHeaderAttribute] // RVA: 0xBEAFC0 Offset: 0xBEAFC0 VA: 0xBEAFC0
public class UnityWebRequest : IDisposable // TypeDefIndex: 2584
{
	// Fields
	internal IntPtr m_Ptr; // 0x10
	internal DownloadHandler m_DownloadHandler; // 0x18
	internal UploadHandler m_UploadHandler; // 0x20
	internal CertificateHandler m_CertificateHandler; // 0x28
	internal Uri m_Uri; // 0x30
	public const string kHttpVerbGET = "GET";
	public const string kHttpVerbHEAD = "HEAD";
	public const string kHttpVerbPOST = "POST";
	public const string kHttpVerbPUT = "PUT";
	public const string kHttpVerbCREATE = "CREATE";
	public const string kHttpVerbDELETE = "DELETE";
	[DebuggerBrowsableAttribute] // RVA: 0xBEB1FC Offset: 0xBEB1FC VA: 0xBEB1FC
	[CompilerGeneratedAttribute] // RVA: 0xBEB1FC Offset: 0xBEB1FC VA: 0xBEB1FC
	private bool <disposeCertificateHandlerOnDispose>k__BackingField; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xBEB238 Offset: 0xBEB238 VA: 0xBEB238
	[DebuggerBrowsableAttribute] // RVA: 0xBEB238 Offset: 0xBEB238 VA: 0xBEB238
	private bool <disposeDownloadHandlerOnDispose>k__BackingField; // 0x39
	[CompilerGeneratedAttribute] // RVA: 0xBEB274 Offset: 0xBEB274 VA: 0xBEB274
	[DebuggerBrowsableAttribute] // RVA: 0xBEB274 Offset: 0xBEB274 VA: 0xBEB274
	private bool <disposeUploadHandlerOnDispose>k__BackingField; // 0x3A

	// Properties
	public bool disposeCertificateHandlerOnDispose { get; set; }
	public bool disposeDownloadHandlerOnDispose { get; set; }
	public bool disposeUploadHandlerOnDispose { get; set; }
	public string method { set; }
	public string error { get; }
	public string url { get; set; }
	public long responseCode { get; }
	public bool isModifiable { get; }
	public bool isDone { get; }
	public bool isNetworkError { get; }
	public bool isHttpError { get; }
	public float downloadProgress { get; }
	public bool chunkedTransfer { set; }
	public UploadHandler uploadHandler { get; set; }
	public DownloadHandler downloadHandler { get; set; }
	public CertificateHandler certificateHandler { get; }

	// Methods

	// RVA: 0x2B52F70 Offset: 0x2B52F70 VA: 0x2B52F70
	public void .ctor(string url) { }

	// RVA: 0x2B530B0 Offset: 0x2B530B0 VA: 0x2B530B0
	public void .ctor(string url, string method) { }

	// RVA: 0x2B53314 Offset: 0x2B53314 VA: 0x2B53314
	public void .ctor(string url, string method, DownloadHandler downloadHandler, UploadHandler uploadHandler) { }

	[NativeMethodAttribute] // RVA: 0xBEB2D0 Offset: 0xBEB2D0 VA: 0xBEB2D0
	[NativeConditionalAttribute] // RVA: 0xBEB2D0 Offset: 0xBEB2D0 VA: 0xBEB2D0
	// RVA: 0x2B53574 Offset: 0x2B53574 VA: 0x2B53574
	private static string GetWebErrorString(UnityWebRequest.UnityWebRequestError err) { }

	[VisibleToOtherModulesAttribute] // RVA: 0xBEB330 Offset: 0xBEB330 VA: 0xBEB330
	// RVA: 0x2B535E0 Offset: 0x2B535E0 VA: 0x2B535E0
	internal static string GetHTTPStatusString(long responseCode) { }

	[CompilerGeneratedAttribute] // RVA: 0xBEB340 Offset: 0xBEB340 VA: 0xBEB340
	// RVA: 0x2B5364C Offset: 0x2B5364C VA: 0x2B5364C
	public bool get_disposeCertificateHandlerOnDispose() { }

	[CompilerGeneratedAttribute] // RVA: 0xBEB350 Offset: 0xBEB350 VA: 0xBEB350
	// RVA: 0x2B53654 Offset: 0x2B53654 VA: 0x2B53654
	public void set_disposeCertificateHandlerOnDispose(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xBEB360 Offset: 0xBEB360 VA: 0xBEB360
	// RVA: 0x2B53660 Offset: 0x2B53660 VA: 0x2B53660
	public bool get_disposeDownloadHandlerOnDispose() { }

	[CompilerGeneratedAttribute] // RVA: 0xBEB370 Offset: 0xBEB370 VA: 0xBEB370
	// RVA: 0x2B53668 Offset: 0x2B53668 VA: 0x2B53668
	public void set_disposeDownloadHandlerOnDispose(bool value) { }

