	// RVA: 0x26BEDD8 Offset: 0x26BEDD8 VA: 0x26BEDD8
	private void get_sizeDelta_Injected(out Vector2 ret) { }

	// RVA: 0x26BEE70 Offset: 0x26BEE70 VA: 0x26BEE70
	private void set_sizeDelta_Injected(ref Vector2 value) { }

	// RVA: 0x26BEF0C Offset: 0x26BEF0C VA: 0x26BEF0C
	private void get_pivot_Injected(out Vector2 ret) { }

	// RVA: 0x26BEFA4 Offset: 0x26BEFA4 VA: 0x26BEFA4
	private void set_pivot_Injected(ref Vector2 value) { }
}

// Namespace: 
public enum RectTransform.Edge // TypeDefIndex: 2562
{
	// Fields
	public int value__; // 0x0
	public const RectTransform.Edge Left = 0;
	public const RectTransform.Edge Right = 1;
	public const RectTransform.Edge Top = 2;
	public const RectTransform.Edge Bottom = 3;
}

// Namespace: 
public enum RectTransform.Axis // TypeDefIndex: 2563
{
	// Fields
	public int value__; // 0x0
	public const RectTransform.Axis Horizontal = 0;
	public const RectTransform.Axis Vertical = 1;
}

// Namespace: 
public sealed class RectTransform.ReapplyDrivenProperties : MulticastDelegate // TypeDefIndex: 2564
{
	// Methods

	// RVA: 0x102E708 Offset: 0x102E708 VA: 0x102E708
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x102E718 Offset: 0x102E718 VA: 0x102E718 Slot: 11
	public virtual void Invoke(RectTransform driven) { }

	// RVA: 0x102EAB8 Offset: 0x102EAB8 VA: 0x102EAB8 Slot: 12
	public virtual IAsyncResult BeginInvoke(RectTransform driven, AsyncCallback callback, object object) { }

	// RVA: 0x102EADC Offset: 0x102EADC VA: 0x102EADC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC47EC4 Offset: 0xC47EC4 VA: 0xC47EC4
[NativeHeaderAttribute] // RVA: 0xC47EC4 Offset: 0xC47EC4 VA: 0xC47EC4
[NativeHeaderAttribute] // RVA: 0xC47EC4 Offset: 0xC47EC4 VA: 0xC47EC4
[RequiredByNativeCodeAttribute] // RVA: 0xC47EC4 Offset: 0xC47EC4 VA: 0xC47EC4
public class Transform : Component, IEnumerable // TypeDefIndex: 2565
{
	// Properties
	public Vector3 position { get; set; }
	public Vector3 localPosition { get; set; }
	public Vector3 eulerAngles { get; set; }
	public Vector3 localEulerAngles { get; set; }
	public Vector3 right { get; }
	public Vector3 up { get; }
	public Vector3 forward { get; }
	public Quaternion rotation { get; set; }
	public Quaternion localRotation { get; set; }
	public Vector3 localScale { get; set; }
	public Transform parent { get; set; }
	internal Transform parentInternal { get; set; }
	public Matrix4x4 worldToLocalMatrix { get; }
	public Matrix4x4 localToWorldMatrix { get; }
	public Transform root { get; }
	public int childCount { get; }
	public Vector3 lossyScale { get; }
	[NativePropertyAttribute] // RVA: 0xC54868 Offset: 0xC54868 VA: 0xC54868
	public bool hasChanged { get; set; }

	// Methods

	// RVA: 0x103ED48 Offset: 0x103ED48 VA: 0x103ED48
	protected void .ctor() { }

	// RVA: 0x103ED50 Offset: 0x103ED50 VA: 0x103ED50
	public Vector3 get_position() { }

	// RVA: 0x103EDF4 Offset: 0x103EDF4 VA: 0x103EDF4
	public void set_position(Vector3 value) { }

	// RVA: 0x103EE90 Offset: 0x103EE90 VA: 0x103EE90
	public Vector3 get_localPosition() { }

	// RVA: 0x103EF34 Offset: 0x103EF34 VA: 0x103EF34
	public void set_localPosition(Vector3 value) { }

	// RVA: 0x103EFD0 Offset: 0x103EFD0 VA: 0x103EFD0
	public Vector3 get_eulerAngles() { }

	// RVA: 0x103F034 Offset: 0x103F034 VA: 0x103F034
	public void set_eulerAngles(Vector3 value) { }

	// RVA: 0x103F108 Offset: 0x103F108 VA: 0x103F108
	public Vector3 get_localEulerAngles() { }

	// RVA: 0x103F16C Offset: 0x103F16C VA: 0x103F16C
	public void set_localEulerAngles(Vector3 value) { }

	// RVA: 0x103F240 Offset: 0x103F240 VA: 0x103F240
	public Vector3 get_right() { }

	// RVA: 0x103F3A0 Offset: 0x103F3A0 VA: 0x103F3A0
	public Vector3 get_up() { }

	// RVA: 0x103F500 Offset: 0x103F500 VA: 0x103F500
	public Vector3 get_forward() { }

	// RVA: 0x103F008 Offset: 0x103F008 VA: 0x103F008
	public Quaternion get_rotation() { }

	// RVA: 0x103F0E0 Offset: 0x103F0E0 VA: 0x103F0E0
	public void set_rotation(Quaternion value) { }

	// RVA: 0x103F140 Offset: 0x103F140 VA: 0x103F140
	public Quaternion get_localRotation() { }

	// RVA: 0x103F218 Offset: 0x103F218 VA: 0x103F218
	public void set_localRotation(Quaternion value) { }

	// RVA: 0x103F830 Offset: 0x103F830 VA: 0x103F830
	public Vector3 get_localScale() { }

	// RVA: 0x103F8D4 Offset: 0x103F8D4 VA: 0x103F8D4
	public void set_localScale(Vector3 value) { }

	// RVA: 0x103F970 Offset: 0x103F970 VA: 0x103F970
	public Transform get_parent() { }

	// RVA: 0x103F978 Offset: 0x103F978 VA: 0x103F978
	public void set_parent(Transform value) { }

	// RVA: 0x103F974 Offset: 0x103F974 VA: 0x103F974
	internal Transform get_parentInternal() { }

	// RVA: 0x103FA24 Offset: 0x103FA24 VA: 0x103FA24
	internal void set_parentInternal(Transform value) { }

	// RVA: 0x103FA2C Offset: 0x103FA2C VA: 0x103FA2C
	private Transform GetParent() { }

	// RVA: 0x103FA98 Offset: 0x103FA98 VA: 0x103FA98
	public void SetParent(Transform p) { }

	[FreeFunctionAttribute] // RVA: 0xC52564 Offset: 0xC52564 VA: 0xC52564
	// RVA: 0x103FAA0 Offset: 0x103FAA0 VA: 0x103FAA0
	public void SetParent(Transform parent, bool worldPositionStays) { }

	// RVA: 0x103FB24 Offset: 0x103FB24 VA: 0x103FB24
	public Matrix4x4 get_worldToLocalMatrix() { }

	// RVA: 0x103FBE0 Offset: 0x103FBE0 VA: 0x103FBE0
	public Matrix4x4 get_localToWorldMatrix() { }

	// RVA: 0x103FC9C Offset: 0x103FC9C VA: 0x103FC9C
	public void SetPositionAndRotation(Vector3 position, Quaternion rotation) { }

	// RVA: 0x103FD54 Offset: 0x103FD54 VA: 0x103FD54
	public void Translate(Vector3 translation, Space relativeTo) { }

	// RVA: 0x103FEC8 Offset: 0x103FEC8 VA: 0x103FEC8
	public void Rotate(Vector3 eulers, Space relativeTo) { }

	// RVA: 0x1040108 Offset: 0x1040108 VA: 0x1040108
	public void Rotate(Vector3 eulers) { }

	// RVA: 0x1040110 Offset: 0x1040110 VA: 0x1040110
	public void Rotate(float xAngle, float yAngle, float zAngle, Space relativeTo) { }

	// RVA: 0x1040120 Offset: 0x1040120 VA: 0x1040120
	public void Rotate(float xAngle, float yAngle, float zAngle) { }

	[NativeMethodAttribute] // RVA: 0xC525AC Offset: 0xC525AC VA: 0xC525AC
	// RVA: 0x1040128 Offset: 0x1040128 VA: 0x1040128
	internal void RotateAroundInternal(Vector3 axis, float angle) { }

	// RVA: 0x10401E0 Offset: 0x10401E0 VA: 0x10401E0
	public void Rotate(Vector3 axis, float angle, Space relativeTo) { }

	// RVA: 0x1040290 Offset: 0x1040290 VA: 0x1040290
	public void Rotate(Vector3 axis, float angle) { }

	// RVA: 0x1040298 Offset: 0x1040298 VA: 0x1040298
	public void LookAt(Transform target, Vector3 worldUp) { }

	// RVA: 0x10403B4 Offset: 0x10403B4 VA: 0x10403B4
	public void LookAt(Transform target) { }

	// RVA: 0x1040380 Offset: 0x1040380 VA: 0x1040380
	public void LookAt(Vector3 worldPosition, Vector3 worldUp) { }

	// RVA: 0x10404D8 Offset: 0x10404D8 VA: 0x10404D8
	public void LookAt(Vector3 worldPosition) { }

	[FreeFunctionAttribute] // RVA: 0xC525E4 Offset: 0xC525E4 VA: 0xC525E4
	// RVA: 0x10404A4 Offset: 0x10404A4 VA: 0x10404A4
	private void Internal_LookAt(Vector3 worldPosition, Vector3 worldUp) { }

	// RVA: 0x103FE8C Offset: 0x103FE8C VA: 0x103FE8C
	public Vector3 TransformDirection(Vector3 direction) { }

	// RVA: 0x1040688 Offset: 0x1040688 VA: 0x1040688
	public Vector3 InverseTransformDirection(Vector3 direction) { }

	// RVA: 0x1040748 Offset: 0x1040748 VA: 0x1040748
	public Vector3 TransformPoint(Vector3 position) { }

	// RVA: 0x1040808 Offset: 0x1040808 VA: 0x1040808
	public Vector3 TransformPoint(float x, float y, float z) { }

	// RVA: 0x104080C Offset: 0x104080C VA: 0x104080C
	public Vector3 InverseTransformPoint(Vector3 position) { }

	// RVA: 0x10408CC Offset: 0x10408CC VA: 0x10408CC
	public Transform get_root() { }

	// RVA: 0x10408D0 Offset: 0x10408D0 VA: 0x10408D0
	private Transform GetRoot() { }

	[NativeMethodAttribute] // RVA: 0xC5262C Offset: 0xC5262C VA: 0xC5262C
	// RVA: 0x104093C Offset: 0x104093C VA: 0x104093C
	public int get_childCount() { }

	[FreeFunctionAttribute] // RVA: 0xC52664 Offset: 0xC52664 VA: 0xC52664
	// RVA: 0x10409A8 Offset: 0x10409A8 VA: 0x10409A8
	public void DetachChildren() { }

	// RVA: 0x1040A14 Offset: 0x1040A14 VA: 0x1040A14
	public void SetAsFirstSibling() { }

	// RVA: 0x1040A80 Offset: 0x1040A80 VA: 0x1040A80
	public void SetAsLastSibling() { }

	[FreeFunctionAttribute] // RVA: 0xC526AC Offset: 0xC526AC VA: 0xC526AC
	// RVA: 0x1040AEC Offset: 0x1040AEC VA: 0x1040AEC
	private static Transform FindRelativeTransformWithPath(Transform transform, string path, bool isActiveOnly) { }

	// RVA: 0x1040B70 Offset: 0x1040B70 VA: 0x1040B70
	public Transform Find(string n) { }

	[NativeMethodAttribute] // RVA: 0xC526BC Offset: 0xC526BC VA: 0xC526BC
	// RVA: 0x1040C10 Offset: 0x1040C10 VA: 0x1040C10
	public Vector3 get_lossyScale() { }

	[FreeFunctionAttribute] // RVA: 0xC526F4 Offset: 0xC526F4 VA: 0xC526F4
	// RVA: 0x1040CB4 Offset: 0x1040CB4 VA: 0x1040CB4
	public bool IsChildOf(Transform parent) { }

	// RVA: 0x1040D28 Offset: 0x1040D28 VA: 0x1040D28
	public bool get_hasChanged() { }

	// RVA: 0x1040D94 Offset: 0x1040D94 VA: 0x1040D94
	public void set_hasChanged(bool value) { }

	// RVA: 0x1040E08 Offset: 0x1040E08 VA: 0x1040E08 Slot: 4
	public IEnumerator GetEnumerator() { }

	[NativeThrowsAttribute] // RVA: 0xC5273C Offset: 0xC5273C VA: 0xC5273C
	[FreeFunctionAttribute] // RVA: 0xC5273C Offset: 0xC5273C VA: 0xC5273C
	// RVA: 0x1040EA8 Offset: 0x1040EA8 VA: 0x1040EA8
	public Transform GetChild(int index) { }

	// RVA: 0x103ED80 Offset: 0x103ED80 VA: 0x103ED80
	private void get_position_Injected(out Vector3 ret) { }

	// RVA: 0x103EE1C Offset: 0x103EE1C VA: 0x103EE1C
	private void set_position_Injected(ref Vector3 value) { }

	// RVA: 0x103EEC0 Offset: 0x103EEC0 VA: 0x103EEC0
	private void get_localPosition_Injected(out Vector3 ret) { }

	// RVA: 0x103EF5C Offset: 0x103EF5C VA: 0x103EF5C
	private void set_localPosition_Injected(ref Vector3 value) { }

	// RVA: 0x103F660 Offset: 0x103F660 VA: 0x103F660
	private void get_rotation_Injected(out Quaternion ret) { }

	// RVA: 0x103F6D4 Offset: 0x103F6D4 VA: 0x103F6D4
	private void set_rotation_Injected(ref Quaternion value) { }

	// RVA: 0x103F748 Offset: 0x103F748 VA: 0x103F748
	private void get_localRotation_Injected(out Quaternion ret) { }

	// RVA: 0x103F7BC Offset: 0x103F7BC VA: 0x103F7BC
	private void set_localRotation_Injected(ref Quaternion value) { }

	// RVA: 0x103F860 Offset: 0x103F860 VA: 0x103F860
	private void get_localScale_Injected(out Vector3 ret) { }

	// RVA: 0x103F8FC Offset: 0x103F8FC VA: 0x103F8FC
	private void set_localScale_Injected(ref Vector3 value) { }

	// RVA: 0x103FB6C Offset: 0x103FB6C VA: 0x103FB6C
	private void get_worldToLocalMatrix_Injected(out Matrix4x4 ret) { }

	// RVA: 0x103FC28 Offset: 0x103FC28 VA: 0x103FC28
	private void get_localToWorldMatrix_Injected(out Matrix4x4 ret) { }

	// RVA: 0x103FCD0 Offset: 0x103FCD0 VA: 0x103FCD0
	private void SetPositionAndRotation_Injected(ref Vector3 position, ref Quaternion rotation) { }

	// RVA: 0x1040154 Offset: 0x1040154 VA: 0x1040154
	private void RotateAroundInternal_Injected(ref Vector3 axis, float angle) { }

	// RVA: 0x1040580 Offset: 0x1040580 VA: 0x1040580
	private void Internal_LookAt_Injected(ref Vector3 worldPosition, ref Vector3 worldUp) { }

	// RVA: 0x1040604 Offset: 0x1040604 VA: 0x1040604
	private void TransformDirection_Injected(ref Vector3 direction, out Vector3 ret) { }

	// RVA: 0x10406C4 Offset: 0x10406C4 VA: 0x10406C4
	private void InverseTransformDirection_Injected(ref Vector3 direction, out Vector3 ret) { }

	// RVA: 0x1040784 Offset: 0x1040784 VA: 0x1040784
	private void TransformPoint_Injected(ref Vector3 position, out Vector3 ret) { }

	// RVA: 0x1040848 Offset: 0x1040848 VA: 0x1040848
	private void InverseTransformPoint_Injected(ref Vector3 position, out Vector3 ret) { }

	// RVA: 0x1040C40 Offset: 0x1040C40 VA: 0x1040C40
	private void get_lossyScale_Injected(out Vector3 ret) { }
}

// Namespace: 
private class Transform.Enumerator : IEnumerator // TypeDefIndex: 2566
{
	// Fields
	private Transform outer; // 0x10
	private int currentIndex; // 0x18

	// Properties
	public object Current { get; }

	// Methods

	// RVA: 0x1040E74 Offset: 0x1040E74 VA: 0x1040E74
	internal void .ctor(Transform outer) { }

	// RVA: 0x1040F1C Offset: 0x1040F1C VA: 0x1040F1C Slot: 4
	public object get_Current() { }

	// RVA: 0x1040F50 Offset: 0x1040F50 VA: 0x1040F50 Slot: 5
	public bool MoveNext() { }

	// RVA: 0x1040F98 Offset: 0x1040F98 VA: 0x1040F98 Slot: 6
	public void Reset() { }
}

// Namespace: UnityEngine.Experimental.U2D
[NativeTypeAttribute] // RVA: 0xC47F58 Offset: 0xC47F58 VA: 0xC47F58
[NativeHeaderAttribute] // RVA: 0xC47F58 Offset: 0xC47F58 VA: 0xC47F58
[RequiredByNativeCodeAttribute] // RVA: 0xC47F58 Offset: 0xC47F58 VA: 0xC47F58
[Serializable]
public struct SpriteBone // TypeDefIndex: 2567
{
	// Fields
	[SerializeField] // RVA: 0xC4A05C Offset: 0xC4A05C VA: 0xC4A05C
	[NativeNameAttribute] // RVA: 0xC4A05C Offset: 0xC4A05C VA: 0xC4A05C
	private string m_Name; // 0x0
	[NativeNameAttribute] // RVA: 0xC4A0A8 Offset: 0xC4A0A8 VA: 0xC4A0A8
	[SerializeField] // RVA: 0xC4A0A8 Offset: 0xC4A0A8 VA: 0xC4A0A8
	private Vector3 m_Position; // 0x8
	[SerializeField] // RVA: 0xC4A0F4 Offset: 0xC4A0F4 VA: 0xC4A0F4
	[NativeNameAttribute] // RVA: 0xC4A0F4 Offset: 0xC4A0F4 VA: 0xC4A0F4
	private Quaternion m_Rotation; // 0x14
	[SerializeField] // RVA: 0xC4A140 Offset: 0xC4A140 VA: 0xC4A140
	[NativeNameAttribute] // RVA: 0xC4A140 Offset: 0xC4A140 VA: 0xC4A140
	private float m_Length; // 0x24
	[NativeNameAttribute] // RVA: 0xC4A18C Offset: 0xC4A18C VA: 0xC4A18C
	[SerializeField] // RVA: 0xC4A18C Offset: 0xC4A18C VA: 0xC4A18C
	private int m_ParentId; // 0x28
}

// Namespace: UnityEngine.Sprites
public sealed class DataUtility // TypeDefIndex: 2568
{
	// Methods

	// RVA: 0x10380AC Offset: 0x10380AC VA: 0x10380AC
	public static Vector4 GetInnerUV(Sprite sprite) { }

	// RVA: 0x10380F0 Offset: 0x10380F0 VA: 0x10380F0
	public static Vector4 GetOuterUV(Sprite sprite) { }

	// RVA: 0x1038134 Offset: 0x1038134 VA: 0x1038134
	public static Vector4 GetPadding(Sprite sprite) { }

	// RVA: 0x1038178 Offset: 0x1038178 VA: 0x1038178
	public static Vector2 GetMinSize(Sprite sprite) { }
}

// Namespace: UnityEngine
public enum SpriteMaskInteraction // TypeDefIndex: 2569
{
	// Fields
	public int value__; // 0x0
	public const SpriteMaskInteraction None = 0;
	public const SpriteMaskInteraction VisibleInsideMask = 1;
	public const SpriteMaskInteraction VisibleOutsideMask = 2;
}

// Namespace: UnityEngine
[RequireComponent] // RVA: 0xC47FCC Offset: 0xC47FCC VA: 0xC47FCC
[NativeTypeAttribute] // RVA: 0xC47FCC Offset: 0xC47FCC VA: 0xC47FCC
public sealed class SpriteRenderer : Renderer // TypeDefIndex: 2570
{
	// Properties
	public Sprite sprite { get; set; }
	public Color color { get; set; }

	// Methods

	// RVA: 0x1037E90 Offset: 0x1037E90 VA: 0x1037E90
	public Sprite get_sprite() { }

	// RVA: 0x1037EFC Offset: 0x1037EFC VA: 0x1037EFC
	public void set_sprite(Sprite value) { }

	// RVA: 0x1037F70 Offset: 0x1037F70 VA: 0x1037F70
	public Color get_color() { }

	// RVA: 0x1038010 Offset: 0x1038010 VA: 0x1038010
	public void set_color(Color value) { }

	// RVA: 0x1037F9C Offset: 0x1037F9C VA: 0x1037F9C
	private void get_color_Injected(out Color ret) { }

	// RVA: 0x1038038 Offset: 0x1038038 VA: 0x1038038
	private void set_color_Injected(ref Color value) { }
}

// Namespace: UnityEngine
public enum SpriteMeshType // TypeDefIndex: 2571
{
	// Fields
	public int value__; // 0x0
	public const SpriteMeshType FullRect = 0;
	public const SpriteMeshType Tight = 1;
}

// Namespace: UnityEngine
public enum SpritePackingMode // TypeDefIndex: 2572
{
	// Fields
	public int value__; // 0x0
	public const SpritePackingMode Tight = 0;
	public const SpritePackingMode Rectangle = 1;
}

// Namespace: UnityEngine
public enum SpriteSortPoint // TypeDefIndex: 2573
{
	// Fields
	public int value__; // 0x0
	public const SpriteSortPoint Center = 0;
	public const SpriteSortPoint Pivot = 1;
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC48054 Offset: 0xC48054 VA: 0xC48054
[NativeHeaderAttribute] // RVA: 0xC48054 Offset: 0xC48054 VA: 0xC48054
[ExcludeFromPresetAttribute] // RVA: 0xC48054 Offset: 0xC48054 VA: 0xC48054
[NativeTypeAttribute] // RVA: 0xC48054 Offset: 0xC48054 VA: 0xC48054
[NativeHeaderAttribute] // RVA: 0xC48054 Offset: 0xC48054 VA: 0xC48054
public sealed class Sprite : Object // TypeDefIndex: 2574
{
	// Properties
	public Bounds bounds { get; }
	public Rect rect { get; }
	public Vector4 border { get; }
	public Texture2D texture { get; }
	public float pixelsPerUnit { get; }
	public Texture2D associatedAlphaSplitTexture { get; }
	public Vector2 pivot { get; }
	public bool packed { get; }
	public SpritePackingMode packingMode { get; }
	public Rect textureRect { get; }
	public Vector2 textureRectOffset { get; }
	public Vector2[] vertices { get; }
	public ushort[] triangles { get; }
	public Vector2[] uv { get; }

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC52798 Offset: 0xC52798 VA: 0xC52798
	// RVA: 0x1036C08 Offset: 0x1036C08 VA: 0x1036C08
	private void .ctor() { }

	// RVA: 0x1036C70 Offset: 0x1036C70 VA: 0x1036C70
	internal int GetPackingMode() { }

	// RVA: 0x1036CDC Offset: 0x1036CDC VA: 0x1036CDC
	internal int GetPacked() { }

	// RVA: 0x1036D48 Offset: 0x1036D48 VA: 0x1036D48
	internal Rect GetTextureRect() { }

	// RVA: 0x1036DE8 Offset: 0x1036DE8 VA: 0x1036DE8
	internal Vector2 GetTextureRectOffset() { }

	// RVA: 0x1036E84 Offset: 0x1036E84 VA: 0x1036E84
	internal Vector4 GetInnerUVs() { }

	// RVA: 0x1036F24 Offset: 0x1036F24 VA: 0x1036F24
	internal Vector4 GetOuterUVs() { }

	// RVA: 0x1036FC4 Offset: 0x1036FC4 VA: 0x1036FC4
	internal Vector4 GetPadding() { }

	[FreeFunctionAttribute] // RVA: 0xC527A8 Offset: 0xC527A8 VA: 0xC527A8
	// RVA: 0x1037064 Offset: 0x1037064 VA: 0x1037064
	internal static Sprite CreateSprite(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit, uint extrude, SpriteMeshType meshType, Vector4 border, bool generateFallbackPhysicsShape) { }

	// RVA: 0x103717C Offset: 0x103717C VA: 0x103717C
	public Bounds get_bounds() { }

	// RVA: 0x1037230 Offset: 0x1037230 VA: 0x1037230
	public Rect get_rect() { }

	// RVA: 0x10372D0 Offset: 0x10372D0 VA: 0x10372D0
	public Vector4 get_border() { }

	// RVA: 0x1037370 Offset: 0x1037370 VA: 0x1037370
	public Texture2D get_texture() { }

	[NativeMethodAttribute] // RVA: 0xC527E0 Offset: 0xC527E0 VA: 0xC527E0
	// RVA: 0x10373DC Offset: 0x10373DC VA: 0x10373DC
	public float get_pixelsPerUnit() { }

	[NativeMethodAttribute] // RVA: 0xC52818 Offset: 0xC52818 VA: 0xC52818
	// RVA: 0x1037448 Offset: 0x1037448 VA: 0x1037448
	public Texture2D get_associatedAlphaSplitTexture() { }

	[NativeMethodAttribute] // RVA: 0xC52850 Offset: 0xC52850 VA: 0xC52850
	// RVA: 0x10374B4 Offset: 0x10374B4 VA: 0x10374B4
	public Vector2 get_pivot() { }

	// RVA: 0x1037550 Offset: 0x1037550 VA: 0x1037550
	public bool get_packed() { }

	// RVA: 0x103756C Offset: 0x103756C VA: 0x103756C
	public SpritePackingMode get_packingMode() { }

	// RVA: 0x1037570 Offset: 0x1037570 VA: 0x1037570
	public Rect get_textureRect() { }

	// RVA: 0x10375DC Offset: 0x10375DC VA: 0x10375DC
	public Vector2 get_textureRectOffset() { }

	[FreeFunctionAttribute] // RVA: 0xC52888 Offset: 0xC52888 VA: 0xC52888
	// RVA: 0x10376F0 Offset: 0x10376F0 VA: 0x10376F0
	public Vector2[] get_vertices() { }

	[FreeFunctionAttribute] // RVA: 0xC528D0 Offset: 0xC528D0 VA: 0xC528D0
	// RVA: 0x103775C Offset: 0x103775C VA: 0x103775C
	public ushort[] get_triangles() { }

	[FreeFunctionAttribute] // RVA: 0xC52918 Offset: 0xC52918 VA: 0xC52918
	// RVA: 0x10377C8 Offset: 0x10377C8 VA: 0x10377C8
	public Vector2[] get_uv() { }

	// RVA: 0x1037834 Offset: 0x1037834 VA: 0x1037834
	public static Sprite Create(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit, uint extrude, SpriteMeshType meshType, Vector4 border, bool generateFallbackPhysicsShape) { }

	// RVA: 0x1037D00 Offset: 0x1037D00 VA: 0x1037D00
	public static Sprite Create(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit, uint extrude, SpriteMeshType meshType, Vector4 border) { }

	// RVA: 0x1037D20 Offset: 0x1037D20 VA: 0x1037D20
	public static Sprite Create(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit, uint extrude, SpriteMeshType meshType) { }

	// RVA: 0x1037E7C Offset: 0x1037E7C VA: 0x1037E7C
	public static Sprite Create(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit, uint extrude) { }

	// RVA: 0x1037E84 Offset: 0x1037E84 VA: 0x1037E84
	public static Sprite Create(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit) { }

	// RVA: 0x1036D74 Offset: 0x1036D74 VA: 0x1036D74
	private void GetTextureRect_Injected(out Rect ret) { }

	// RVA: 0x1036E10 Offset: 0x1036E10 VA: 0x1036E10
	private void GetTextureRectOffset_Injected(out Vector2 ret) { }

	// RVA: 0x1036EB0 Offset: 0x1036EB0 VA: 0x1036EB0
	private void GetInnerUVs_Injected(out Vector4 ret) { }

	// RVA: 0x1036F50 Offset: 0x1036F50 VA: 0x1036F50
	private void GetOuterUVs_Injected(out Vector4 ret) { }

	// RVA: 0x1036FF0 Offset: 0x1036FF0 VA: 0x1036FF0
	private void GetPadding_Injected(out Vector4 ret) { }

	// RVA: 0x10370C0 Offset: 0x10370C0 VA: 0x10370C0
	private static Sprite CreateSprite_Injected(Texture2D texture, ref Rect rect, ref Vector2 pivot, float pixelsPerUnit, uint extrude, SpriteMeshType meshType, ref Vector4 border, bool generateFallbackPhysicsShape) { }

	// RVA: 0x10371BC Offset: 0x10371BC VA: 0x10371BC
	private void get_bounds_Injected(out Bounds ret) { }

	// RVA: 0x103725C Offset: 0x103725C VA: 0x103725C
	private void get_rect_Injected(out Rect ret) { }

	// RVA: 0x10372FC Offset: 0x10372FC VA: 0x10372FC
	private void get_border_Injected(out Vector4 ret) { }

	// RVA: 0x10374DC Offset: 0x10374DC VA: 0x10374DC
	private void get_pivot_Injected(out Vector2 ret) { }
}

// Namespace: UnityEngine.U2D
[NativeHeaderAttribute] // RVA: 0xC4810C Offset: 0xC4810C VA: 0xC4810C
[NativeHeaderAttribute] // RVA: 0xC4810C Offset: 0xC4810C VA: 0xC4810C
[StaticAccessorAttribute] // RVA: 0xC4810C Offset: 0xC4810C VA: 0xC4810C
public class SpriteAtlasManager // TypeDefIndex: 2575
{
	// Fields
	[DebuggerBrowsableAttribute] // RVA: 0xC4A1D8 Offset: 0xC4A1D8 VA: 0xC4A1D8
	[CompilerGeneratedAttribute] // RVA: 0xC4A1D8 Offset: 0xC4A1D8 VA: 0xC4A1D8
	private static Action<string, Action<SpriteAtlas>> atlasRequested; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC4A214 Offset: 0xC4A214 VA: 0xC4A214
	[DebuggerBrowsableAttribute] // RVA: 0xC4A214 Offset: 0xC4A214 VA: 0xC4A214
	private static Action<SpriteAtlas> atlasRegistered; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC4A250 Offset: 0xC4A250 VA: 0xC4A250
	private static Action<SpriteAtlas> <>f__mg$cache0; // 0x10

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC52960 Offset: 0xC52960 VA: 0xC52960
	// RVA: 0x1041018 Offset: 0x1041018 VA: 0x1041018
	private static bool RequestAtlas(string tag) { }

	// RVA: 0x1041164 Offset: 0x1041164 VA: 0x1041164
	public static void add_atlasRegistered(Action<SpriteAtlas> value) { }

	// RVA: 0x10412A4 Offset: 0x10412A4 VA: 0x10412A4
	public static void remove_atlasRegistered(Action<SpriteAtlas> value) { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC52970 Offset: 0xC52970 VA: 0xC52970
	// RVA: 0x10413E4 Offset: 0x10413E4 VA: 0x10413E4
	private static void PostRegisteredAtlas(SpriteAtlas spriteAtlas) { }

	// RVA: 0x10414A4 Offset: 0x10414A4 VA: 0x10414A4
	internal static void Register(SpriteAtlas spriteAtlas) { }

	// RVA: 0x1041510 Offset: 0x1041510 VA: 0x1041510
	private static void .cctor() { }
}

// Namespace: UnityEngine.U2D
[NativeHeaderAttribute] // RVA: 0xC48194 Offset: 0xC48194 VA: 0xC48194
[NativeTypeAttribute] // RVA: 0xC48194 Offset: 0xC48194 VA: 0xC48194
public class SpriteAtlas : Object // TypeDefIndex: 2576
{
	// Methods

	// RVA: 0x1040FA4 Offset: 0x1040FA4 VA: 0x1040FA4
	public bool CanBindTo(Sprite sprite) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2577
{}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC55AE8 Offset: 0xC55AE8 VA: 0xC55AE8
[NativeHeaderAttribute] // RVA: 0xC55AE8 Offset: 0xC55AE8 VA: 0xC55AE8
[NativeHeaderAttribute] // RVA: 0xC55AE8 Offset: 0xC55AE8 VA: 0xC55AE8
[NativeHeaderAttribute] // RVA: 0xC55AE8 Offset: 0xC55AE8 VA: 0xC55AE8
[NativeHeaderAttribute] // RVA: 0xC55AE8 Offset: 0xC55AE8 VA: 0xC55AE8
[NativeHeaderAttribute] // RVA: 0xC55AE8 Offset: 0xC55AE8 VA: 0xC55AE8
[NativeHeaderAttribute] // RVA: 0xC55AE8 Offset: 0xC55AE8 VA: 0xC55AE8
[NativeHeaderAttribute] // RVA: 0xC55AE8 Offset: 0xC55AE8 VA: 0xC55AE8
[NativeHeaderAttribute] // RVA: 0xC55AE8 Offset: 0xC55AE8 VA: 0xC55AE8
[NativeHeaderAttribute] // RVA: 0xC55AE8 Offset: 0xC55AE8 VA: 0xC55AE8
[ExcludeFromPresetAttribute] // RVA: 0xC55AE8 Offset: 0xC55AE8 VA: 0xC55AE8
[NativeHeaderAttribute] // RVA: 0xC55AE8 Offset: 0xC55AE8 VA: 0xC55AE8
public class AssetBundle : Object // TypeDefIndex: 2578
{
	// Methods

	// RVA: 0x1387628 Offset: 0x1387628 VA: 0x1387628
	private void .ctor() { }

	[FreeFunctionAttribute] // RVA: 0xC55D80 Offset: 0xC55D80 VA: 0xC55D80
	// RVA: 0x1387690 Offset: 0x1387690 VA: 0x1387690
	internal static AssetBundleCreateRequest LoadFromMemoryAsync_Internal(byte[] binary, uint crc) { }

	// RVA: 0x1387704 Offset: 0x1387704 VA: 0x1387704
	public static AssetBundleCreateRequest LoadFromMemoryAsync(byte[] binary) { }

	// RVA: 0x138770C Offset: 0x138770C VA: 0x138770C
	public AssetBundleRequest LoadAssetAsync(string name) { }

	// RVA: 0x138779C Offset: 0x138779C VA: 0x138779C
	public AssetBundleRequest LoadAssetAsync(string name, Type type) { }

	// RVA: 0x1387920 Offset: 0x1387920 VA: 0x1387920
	public AssetBundleRequest LoadAllAssetsAsync() { }

	// RVA: 0x13879A0 Offset: 0x13879A0 VA: 0x13879A0
	public AssetBundleRequest LoadAllAssetsAsync(Type type) { }

	[NativeThrowsAttribute] // RVA: 0xC55DB8 Offset: 0xC55DB8 VA: 0xC55DB8
	[NativeMethodAttribute] // RVA: 0xC55DB8 Offset: 0xC55DB8 VA: 0xC55DB8
	// RVA: 0x138789C Offset: 0x138789C VA: 0x138789C
	private AssetBundleRequest LoadAssetAsync_Internal(string name, Type type) { }

	[NativeMethodAttribute] // RVA: 0xC55E04 Offset: 0xC55E04 VA: 0xC55E04
	// RVA: 0x1387ACC Offset: 0x1387ACC VA: 0x1387ACC
	public void Unload(bool unloadAllLoadedObjects) { }

	[NativeMethodAttribute] // RVA: 0xC55E3C Offset: 0xC55E3C VA: 0xC55E3C
	// RVA: 0x1387B40 Offset: 0x1387B40 VA: 0x1387B40
	public string[] GetAllScenePaths() { }

	[NativeThrowsAttribute] // RVA: 0xC55E74 Offset: 0xC55E74 VA: 0xC55E74
	[NativeMethodAttribute] // RVA: 0xC55E74 Offset: 0xC55E74 VA: 0xC55E74
	// RVA: 0x1387A48 Offset: 0x1387A48 VA: 0x1387A48
	private AssetBundleRequest LoadAssetWithSubAssetsAsync_Internal(string name, Type type) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC55C9C Offset: 0xC55C9C VA: 0xC55C9C
[RequiredByNativeCodeAttribute] // RVA: 0xC55C9C Offset: 0xC55C9C VA: 0xC55C9C
public class AssetBundleCreateRequest : AsyncOperation // TypeDefIndex: 2579
{
	// Properties
	public AssetBundle assetBundle { get; }

	// Methods

	// RVA: 0x1387BAC Offset: 0x1387BAC VA: 0x1387BAC
	public void .ctor() { }

	[NativeMethodAttribute] // RVA: 0xC55EC0 Offset: 0xC55EC0 VA: 0xC55EC0
	// RVA: 0x1387BB4 Offset: 0x1387BB4 VA: 0x1387BB4
	public AssetBundle get_assetBundle() { }
}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xC55CE8 Offset: 0xC55CE8 VA: 0xC55CE8
[NativeHeaderAttribute] // RVA: 0xC55CE8 Offset: 0xC55CE8 VA: 0xC55CE8
public class AssetBundleRecompressOperation : AsyncOperation // TypeDefIndex: 2580
{}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC55D34 Offset: 0xC55D34 VA: 0xC55D34
[RequiredByNativeCodeAttribute] // RVA: 0xC55D34 Offset: 0xC55D34 VA: 0xC55D34
public class AssetBundleRequest : AsyncOperation // TypeDefIndex: 2581
{
	// Properties
	public Object[] allAssets { get; }

	// Methods

	// RVA: 0x1387C20 Offset: 0x1387C20 VA: 0x1387C20
	public void .ctor() { }

	[NativeMethodAttribute] // RVA: 0xC55EF8 Offset: 0xC55EF8 VA: 0xC55EF8
	// RVA: 0x1387C28 Offset: 0x1387C28 VA: 0x1387C28
	public Object[] get_allAssets() { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2582
{}

// Namespace: UnityEngine.Networking
[NativeHeaderAttribute] // RVA: 0xC57078 Offset: 0xC57078 VA: 0xC57078
[NativeHeaderAttribute] // RVA: 0xC57078 Offset: 0xC57078 VA: 0xC57078
[UsedByNativeCodeAttribute] // RVA: 0xC57078 Offset: 0xC57078 VA: 0xC57078
public class UnityWebRequestAsyncOperation : AsyncOperation // TypeDefIndex: 2583
{
	// Fields
	[DebuggerBrowsableAttribute] // RVA: 0xC572E8 Offset: 0xC572E8 VA: 0xC572E8
	[CompilerGeneratedAttribute] // RVA: 0xC572E8 Offset: 0xC572E8 VA: 0xC572E8
	private UnityWebRequest <webRequest>k__BackingField; // 0x20

	// Properties
	internal UnityWebRequest webRequest { set; }

	// Methods

	// RVA: 0x1344FA0 Offset: 0x1344FA0 VA: 0x1344FA0
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC573E8 Offset: 0xC573E8 VA: 0xC573E8
	// RVA: 0x1343970 Offset: 0x1343970 VA: 0x1343970
	internal void set_webRequest(UnityWebRequest value) { }
}

// Namespace: UnityEngine.Networking
[NativeHeaderAttribute] // RVA: 0xC570E8 Offset: 0xC570E8 VA: 0xC570E8
public class UnityWebRequest : IDisposable // TypeDefIndex: 2584
{
	// Fields
	internal IntPtr m_Ptr; // 0x10
	internal DownloadHandler m_DownloadHandler; // 0x18
	internal UploadHandler m_UploadHandler; // 0x20
	internal CertificateHandler m_CertificateHandler; // 0x28
	internal Uri m_Uri; // 0x30
	public const string kHttpVerbGET = "GET";
	public const string kHttpVerbHEAD = "HEAD";
	public const string kHttpVerbPOST = "POST";
	public const string kHttpVerbPUT = "PUT";
	public const string kHttpVerbCREATE = "CREATE";
	public const string kHttpVerbDELETE = "DELETE";
	[DebuggerBrowsableAttribute] // RVA: 0xC57324 Offset: 0xC57324 VA: 0xC57324
	[CompilerGeneratedAttribute] // RVA: 0xC57324 Offset: 0xC57324 VA: 0xC57324
	private bool <disposeCertificateHandlerOnDispose>k__BackingField; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC57360 Offset: 0xC57360 VA: 0xC57360
	[DebuggerBrowsableAttribute] // RVA: 0xC57360 Offset: 0xC57360 VA: 0xC57360
	private bool <disposeDownloadHandlerOnDispose>k__BackingField; // 0x39
	[CompilerGeneratedAttribute] // RVA: 0xC5739C Offset: 0xC5739C VA: 0xC5739C
	[DebuggerBrowsableAttribute] // RVA: 0xC5739C Offset: 0xC5739C VA: 0xC5739C
	private bool <disposeUploadHandlerOnDispose>k__BackingField; // 0x3A

	// Properties
	public bool disposeCertificateHandlerOnDispose { get; set; }
	public bool disposeDownloadHandlerOnDispose { get; set; }
	public bool disposeUploadHandlerOnDispose { get; set; }
	public string method { set; }
	public string error { get; }
	public string url { get; set; }
	public long responseCode { get; }
	public bool isModifiable { get; }
	public bool isDone { get; }
	public bool isNetworkError { get; }
	public bool isHttpError { get; }
	public float downloadProgress { get; }
	public bool chunkedTransfer { set; }
	public UploadHandler uploadHandler { get; set; }
	public DownloadHandler downloadHandler { get; set; }
	public CertificateHandler certificateHandler { get; }

	// Methods

	// RVA: 0x1342F00 Offset: 0x1342F00 VA: 0x1342F00
	public void .ctor(string url) { }

	// RVA: 0x1343040 Offset: 0x1343040 VA: 0x1343040
	public void .ctor(string url, string method) { }

	// RVA: 0x13432A4 Offset: 0x13432A4 VA: 0x13432A4
	public void .ctor(string url, string method, DownloadHandler downloadHandler, UploadHandler uploadHandler) { }

	[NativeMethodAttribute] // RVA: 0xC573F8 Offset: 0xC573F8 VA: 0xC573F8
	[NativeConditionalAttribute] // RVA: 0xC573F8 Offset: 0xC573F8 VA: 0xC573F8
	// RVA: 0x1343504 Offset: 0x1343504 VA: 0x1343504
	private static string GetWebErrorString(UnityWebRequest.UnityWebRequestError err) { }

	[VisibleToOtherModulesAttribute] // RVA: 0xC57458 Offset: 0xC57458 VA: 0xC57458
	// RVA: 0x1343570 Offset: 0x1343570 VA: 0x1343570
	internal static string GetHTTPStatusString(long responseCode) { }

	[CompilerGeneratedAttribute] // RVA: 0xC57468 Offset: 0xC57468 VA: 0xC57468
	// RVA: 0x13435DC Offset: 0x13435DC VA: 0x13435DC
	public bool get_disposeCertificateHandlerOnDispose() { }

	[CompilerGeneratedAttribute] // RVA: 0xC57478 Offset: 0xC57478 VA: 0xC57478
	// RVA: 0x13435E4 Offset: 0x13435E4 VA: 0x13435E4
	public void set_disposeCertificateHandlerOnDispose(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC57488 Offset: 0xC57488 VA: 0xC57488
	// RVA: 0x13435F0 Offset: 0x13435F0 VA: 0x13435F0
	public bool get_disposeDownloadHandlerOnDispose() { }

	[CompilerGeneratedAttribute] // RVA: 0xC57498 Offset: 0xC57498 VA: 0xC57498
	// RVA: 0x13435F8 Offset: 0x13435F8 VA: 0x13435F8
	public void set_disposeDownloadHandlerOnDispose(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC574A8 Offset: 0xC574A8 VA: 0xC574A8
	// RVA: 0x1343604 Offset: 0x1343604 VA: 0x1343604
	public bool get_disposeUploadHandlerOnDispose() { }

	[CompilerGeneratedAttribute] // RVA: 0xC574B8 Offset: 0xC574B8 VA: 0xC574B8
	// RVA: 0x134360C Offset: 0x134360C VA: 0x134360C
	public void set_disposeUploadHandlerOnDispose(bool value) { }

	// RVA: 0x1342F48 Offset: 0x1342F48 VA: 0x1342F48
	internal static IntPtr Create() { }

	[NativeMethodAttribute] // RVA: 0xC574C8 Offset: 0xC574C8 VA: 0xC574C8
	// RVA: 0x1343618 Offset: 0x1343618 VA: 0x1343618
	private void Release() { }

	// RVA: 0x1343684 Offset: 0x1343684 VA: 0x1343684
	internal void InternalDestroy() { }

	// RVA: 0x1342FA0 Offset: 0x1342FA0 VA: 0x1342FA0
	private void InternalSetDefaults() { }

	// RVA: 0x1343758 Offset: 0x1343758 VA: 0x1343758 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1343834 Offset: 0x1343834 VA: 0x1343834 Slot: 4
	public void Dispose() { }

	// RVA: 0x13437D4 Offset: 0x13437D4 VA: 0x13437D4
	private void DisposeHandlers() { }

	[NativeThrowsAttribute] // RVA: 0xC57500 Offset: 0xC57500 VA: 0xC57500
	// RVA: 0x13438DC Offset: 0x13438DC VA: 0x13438DC
	internal UnityWebRequestAsyncOperation BeginWebRequest() { }

	// RVA: 0x1343948 Offset: 0x1343948 VA: 0x1343948
	public UnityWebRequestAsyncOperation SendWebRequest() { }

	[NativeMethodAttribute] // RVA: 0xC57510 Offset: 0xC57510 VA: 0xC57510
	// RVA: 0x13436EC Offset: 0x13436EC VA: 0x13436EC
	public void Abort() { }

	// RVA: 0x1343978 Offset: 0x1343978 VA: 0x1343978
	private UnityWebRequest.UnityWebRequestError SetMethod(UnityWebRequest.UnityWebRequestMethod methodType) { }

	// RVA: 0x13439EC Offset: 0x13439EC VA: 0x13439EC
	internal void InternalSetMethod(UnityWebRequest.UnityWebRequestMethod methodType) { }

	// RVA: 0x1343B40 Offset: 0x1343B40 VA: 0x1343B40
	private UnityWebRequest.UnityWebRequestError SetCustomMethod(string customMethodName) { }

	// RVA: 0x1343BB4 Offset: 0x1343BB4 VA: 0x1343BB4
	internal void InternalSetCustomMethod(string customMethodName) { }

	// RVA: 0x13430A0 Offset: 0x13430A0 VA: 0x13430A0
	public void set_method(string value) { }

	// RVA: 0x1343C9C Offset: 0x1343C9C VA: 0x1343C9C
	private UnityWebRequest.UnityWebRequestError GetError() { }

	// RVA: 0x1343D08 Offset: 0x1343D08 VA: 0x1343D08
	public string get_error() { }

	// RVA: 0x1343F50 Offset: 0x1343F50 VA: 0x1343F50
	public string get_url() { }

	// RVA: 0x1342FB4 Offset: 0x1342FB4 VA: 0x1342FB4
	public void set_url(string value) { }

	// RVA: 0x1343F54 Offset: 0x1343F54 VA: 0x1343F54
	private string GetUrl() { }

	// RVA: 0x13444A0 Offset: 0x13444A0 VA: 0x13444A0
	private UnityWebRequest.UnityWebRequestError SetUrl(string url) { }

	// RVA: 0x13443B8 Offset: 0x13443B8 VA: 0x13443B8
	private void InternalSetUrl(string url) { }

	// RVA: 0x1343EE4 Offset: 0x1343EE4 VA: 0x1343EE4
	public long get_responseCode() { }

	// RVA: 0x1344514 Offset: 0x1344514 VA: 0x1344514
	private bool IsExecuting() { }

	[NativeMethodAttribute] // RVA: 0xC57548 Offset: 0xC57548 VA: 0xC57548
	// RVA: 0x1343AD4 Offset: 0x1343AD4 VA: 0x1343AD4
	public bool get_isModifiable() { }

	[NativeMethodAttribute] // RVA: 0xC57580 Offset: 0xC57580 VA: 0xC57580
	// RVA: 0x1344580 Offset: 0x1344580 VA: 0x1344580
	public bool get_isDone() { }

	[NativeMethodAttribute] // RVA: 0xC575B8 Offset: 0xC575B8 VA: 0xC575B8
	// RVA: 0x1343E0C Offset: 0x1343E0C VA: 0x1343E0C
	public bool get_isNetworkError() { }

	[NativeMethodAttribute] // RVA: 0xC575F0 Offset: 0xC575F0 VA: 0xC575F0
	// RVA: 0x1343E78 Offset: 0x1343E78 VA: 0x1343E78
	public bool get_isHttpError() { }

	// RVA: 0x13445EC Offset: 0x13445EC VA: 0x13445EC
	private float GetDownloadProgress() { }

	// RVA: 0x1344658 Offset: 0x1344658 VA: 0x1344658
	public float get_downloadProgress() { }

	// RVA: 0x134469C Offset: 0x134469C VA: 0x134469C
	private UnityWebRequest.UnityWebRequestError SetChunked(bool chunked) { }

	// RVA: 0x1344710 Offset: 0x1344710 VA: 0x1344710
	public void set_chunkedTransfer(bool value) { }

	// RVA: 0x13447F8 Offset: 0x13447F8 VA: 0x13447F8
	public string GetResponseHeader(string name) { }

	// RVA: 0x134486C Offset: 0x134486C VA: 0x134486C
	internal string[] GetResponseHeaderKeys() { }

	// RVA: 0x13448D8 Offset: 0x13448D8 VA: 0x13448D8
	public Dictionary<string, string> GetResponseHeaders() { }

	// RVA: 0x1344A48 Offset: 0x1344A48 VA: 0x1344A48
	private UnityWebRequest.UnityWebRequestError SetUploadHandler(UploadHandler uh) { }
