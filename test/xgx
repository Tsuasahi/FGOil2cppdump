	// RVA: 0x26A8844 Offset: 0x26A8844 VA: 0x26A8844
	public void SendMessage(string methodName) { }

	[FreeFunctionAttribute] // RVA: 0xC4C878 Offset: 0xC4C878 VA: 0xC4C878
	// RVA: 0x26A8180 Offset: 0x26A8180 VA: 0x26A8180
	public void BroadcastMessage(string methodName, object parameter, SendMessageOptions options) { }

	[FreeFunctionAttribute] // RVA: 0xC4C8CC Offset: 0xC4C8CC VA: 0xC4C8CC
	// RVA: 0x26A7A94 Offset: 0x26A7A94 VA: 0x26A7A94
	private static void Internal_CreateGameObject(GameObject self, string name) { }

	[FreeFunctionAttribute] // RVA: 0xC4C910 Offset: 0xC4C910 VA: 0xC4C910
	// RVA: 0x26A8850 Offset: 0x26A8850 VA: 0x26A8850
	public static GameObject Find(string name) { }

	[FreeFunctionAttribute] // RVA: 0xC4C954 Offset: 0xC4C954 VA: 0xC4C954
	// RVA: 0x26A88BC Offset: 0x26A88BC VA: 0x26A88BC
	public Scene get_scene() { }

	// RVA: 0x26A8958 Offset: 0x26A8958 VA: 0x26A8958
	public GameObject get_gameObject() { }

	// RVA: 0x26A88E4 Offset: 0x26A88E4 VA: 0x26A88E4
	private void get_scene_Injected(out Scene ret) { }
}

// Namespace: UnityEngine
[StaticAccessorAttribute] // RVA: 0xC4449C Offset: 0xC4449C VA: 0xC4449C
[NativeHeaderAttribute] // RVA: 0xC4449C Offset: 0xC4449C VA: 0xC4449C
public sealed class Gizmos // TypeDefIndex: 2142
{
	// Properties
	public static Color color { set; }

	// Methods

	[NativeThrowsAttribute] // RVA: 0xC4C99C Offset: 0xC4C99C VA: 0xC4C99C
	// RVA: 0x26A895C Offset: 0x26A895C VA: 0x26A895C
	public static void DrawLine(Vector3 from, Vector3 to) { }

	[NativeThrowsAttribute] // RVA: 0xC4C9AC Offset: 0xC4C9AC VA: 0xC4C9AC
	// RVA: 0x26A8A04 Offset: 0x26A8A04 VA: 0x26A8A04
	public static void DrawWireSphere(Vector3 center, float radius) { }

	[NativeThrowsAttribute] // RVA: 0xC4C9BC Offset: 0xC4C9BC VA: 0xC4C9BC
	// RVA: 0x26A8AA4 Offset: 0x26A8AA4 VA: 0x26A8AA4
	public static void DrawSphere(Vector3 center, float radius) { }

	[NativeThrowsAttribute] // RVA: 0xC4C9CC Offset: 0xC4C9CC VA: 0xC4C9CC
	// RVA: 0x26A8B44 Offset: 0x26A8B44 VA: 0x26A8B44
	public static void DrawWireCube(Vector3 center, Vector3 size) { }

	[NativeThrowsAttribute] // RVA: 0xC4C9DC Offset: 0xC4C9DC VA: 0xC4C9DC
	// RVA: 0x26A8BEC Offset: 0x26A8BEC VA: 0x26A8BEC
	public static void DrawCube(Vector3 center, Vector3 size) { }

	[NativeThrowsAttribute] // RVA: 0xC4C9EC Offset: 0xC4C9EC VA: 0xC4C9EC
	// RVA: 0x26A8C94 Offset: 0x26A8C94 VA: 0x26A8C94
	public static void DrawIcon(Vector3 center, string name, bool allowScaling) { }

	// RVA: 0x26A8D4C Offset: 0x26A8D4C VA: 0x26A8D4C
	public static void set_color(Color value) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC4C9FC Offset: 0xC4C9FC VA: 0xC4C9FC
	// RVA: 0x26A8DE0 Offset: 0x26A8DE0 VA: 0x26A8DE0
	public static void DrawIcon(Vector3 center, string name) { }

	// RVA: 0x26A8990 Offset: 0x26A8990 VA: 0x26A8990
	private static void DrawLine_Injected(ref Vector3 from, ref Vector3 to) { }

	// RVA: 0x26A8A30 Offset: 0x26A8A30 VA: 0x26A8A30
	private static void DrawWireSphere_Injected(ref Vector3 center, float radius) { }

	// RVA: 0x26A8AD0 Offset: 0x26A8AD0 VA: 0x26A8AD0
	private static void DrawSphere_Injected(ref Vector3 center, float radius) { }

	// RVA: 0x26A8B78 Offset: 0x26A8B78 VA: 0x26A8B78
	private static void DrawWireCube_Injected(ref Vector3 center, ref Vector3 size) { }

	// RVA: 0x26A8C20 Offset: 0x26A8C20 VA: 0x26A8C20
	private static void DrawCube_Injected(ref Vector3 center, ref Vector3 size) { }

	// RVA: 0x26A8CC8 Offset: 0x26A8CC8 VA: 0x26A8CC8
	private static void DrawIcon_Injected(ref Vector3 center, string name, bool allowScaling) { }

	// RVA: 0x26A8D74 Offset: 0x26A8D74 VA: 0x26A8D74
	private static void set_color_Injected(ref Color value) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC44500 Offset: 0xC44500 VA: 0xC44500
[RequiredByNativeCodeAttribute] // RVA: 0xC44500 Offset: 0xC44500 VA: 0xC44500
public class Gradient : IEquatable<Gradient> // TypeDefIndex: 2143
{
	// Fields
	internal IntPtr m_Ptr; // 0x10

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC4CA0C Offset: 0xC4CA0C VA: 0xC4CA0C
	// RVA: 0x26A8FB0 Offset: 0x26A8FB0 VA: 0x26A8FB0
	public void .ctor() { }

	[FreeFunctionAttribute] // RVA: 0xC4CA1C Offset: 0xC4CA1C VA: 0xC4CA1C
	// RVA: 0x26A8FDC Offset: 0x26A8FDC VA: 0x26A8FDC
	private static IntPtr Init() { }

	[FreeFunctionAttribute] // RVA: 0xC4CA70 Offset: 0xC4CA70 VA: 0xC4CA70
	// RVA: 0x26A9034 Offset: 0x26A9034 VA: 0x26A9034
	private void Cleanup() { }

	[FreeFunctionAttribute] // RVA: 0xC4CAD4 Offset: 0xC4CAD4 VA: 0xC4CAD4
	// RVA: 0x26A90A0 Offset: 0x26A90A0 VA: 0x26A90A0
	private bool Internal_Equals(IntPtr other) { }

	// RVA: 0x26A9114 Offset: 0x26A9114 VA: 0x26A9114 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x26A9188 Offset: 0x26A9188 VA: 0x26A9188 Slot: 0
	public override bool Equals(object o) { }

	// RVA: 0x26A92A0 Offset: 0x26A92A0 VA: 0x26A92A0 Slot: 4
	public bool Equals(Gradient other) { }

	// RVA: 0x26A934C Offset: 0x26A934C VA: 0x26A934C Slot: 2
	public override int GetHashCode() { }
}

// Namespace: UnityEngine
internal enum EnabledOrientation // TypeDefIndex: 2144
{
	// Fields
	public int value__; // 0x0
	public const EnabledOrientation kAutorotateToPortrait = 1;
	public const EnabledOrientation kAutorotateToPortraitUpsideDown = 2;
	public const EnabledOrientation kAutorotateToLandscapeLeft = 4;
	public const EnabledOrientation kAutorotateToLandscapeRight = 8;
}

// Namespace: UnityEngine
public enum FullScreenMode // TypeDefIndex: 2145
{
	// Fields
	public int value__; // 0x0
	public const FullScreenMode ExclusiveFullScreen = 0;
	public const FullScreenMode FullScreenWindow = 1;
	public const FullScreenMode MaximizedWindow = 2;
	public const FullScreenMode Windowed = 3;
}

// Namespace: UnityEngine
[StaticAccessorAttribute] // RVA: 0xC4454C Offset: 0xC4454C VA: 0xC4454C
[NativeHeaderAttribute] // RVA: 0xC4454C Offset: 0xC4454C VA: 0xC4454C
[NativeHeaderAttribute] // RVA: 0xC4454C Offset: 0xC4454C VA: 0xC4454C
public sealed class Screen // TypeDefIndex: 2146
{
	// Properties
	public static int width { get; }
	public static int height { get; }
	public static float dpi { get; }
	public static ScreenOrientation orientation { get; set; }
	public static bool autorotateToPortrait { set; }
	public static bool autorotateToPortraitUpsideDown { set; }
	public static bool autorotateToLandscapeLeft { set; }
	public static bool autorotateToLandscapeRight { set; }
	public static Resolution currentResolution { get; }
	public static bool fullScreen { get; set; }
	public static Rect safeArea { get; }

	// Methods

	[NativeMethodAttribute] // RVA: 0xC4CB2C Offset: 0xC4CB2C VA: 0xC4CB2C
	// RVA: 0x1034210 Offset: 0x1034210 VA: 0x1034210
	public static int get_width() { }

	[NativeMethodAttribute] // RVA: 0xC4CB80 Offset: 0xC4CB80 VA: 0xC4CB80
	// RVA: 0x1034268 Offset: 0x1034268 VA: 0x1034268
	public static int get_height() { }

	[NativeNameAttribute] // RVA: 0xC4CBD4 Offset: 0xC4CBD4 VA: 0xC4CBD4
	// RVA: 0x10342C0 Offset: 0x10342C0 VA: 0x10342C0
	public static float get_dpi() { }

	// RVA: 0x1034318 Offset: 0x1034318 VA: 0x1034318
	private static void RequestOrientation(ScreenOrientation orient) { }

	// RVA: 0x1034384 Offset: 0x1034384 VA: 0x1034384
	private static ScreenOrientation GetScreenOrientation() { }

	// RVA: 0x10343DC Offset: 0x10343DC VA: 0x10343DC
	public static ScreenOrientation get_orientation() { }

	// RVA: 0x10343E0 Offset: 0x10343E0 VA: 0x10343E0
	public static void set_orientation(ScreenOrientation value) { }

	[NativeNameAttribute] // RVA: 0xC4CC0C Offset: 0xC4CC0C VA: 0xC4CC0C
	// RVA: 0x1034460 Offset: 0x1034460 VA: 0x1034460
	private static void SetOrientationEnabled(EnabledOrientation orient, bool enabled) { }

	// RVA: 0x10344D4 Offset: 0x10344D4 VA: 0x10344D4
	public static void set_autorotateToPortrait(bool value) { }

	// RVA: 0x10344E0 Offset: 0x10344E0 VA: 0x10344E0
	public static void set_autorotateToPortraitUpsideDown(bool value) { }

	// RVA: 0x10344EC Offset: 0x10344EC VA: 0x10344EC
	public static void set_autorotateToLandscapeLeft(bool value) { }

	// RVA: 0x10344F8 Offset: 0x10344F8 VA: 0x10344F8
	public static void set_autorotateToLandscapeRight(bool value) { }

	// RVA: 0x1034504 Offset: 0x1034504 VA: 0x1034504
	public static Resolution get_currentResolution() { }

	[NativeNameAttribute] // RVA: 0xC4CC44 Offset: 0xC4CC44 VA: 0xC4CC44
	// RVA: 0x10345A0 Offset: 0x10345A0 VA: 0x10345A0
	public static bool get_fullScreen() { }

	[NativeNameAttribute] // RVA: 0xC4CC7C Offset: 0xC4CC7C VA: 0xC4CC7C
	// RVA: 0x10345F8 Offset: 0x10345F8 VA: 0x10345F8
	public static void set_fullScreen(bool value) { }

	// RVA: 0x1034664 Offset: 0x1034664 VA: 0x1034664
	public static Rect get_safeArea() { }

	[NativeNameAttribute] // RVA: 0xC4CCB4 Offset: 0xC4CCB4 VA: 0xC4CCB4
	// RVA: 0x10346FC Offset: 0x10346FC VA: 0x10346FC
	public static void SetResolution(int width, int height, FullScreenMode fullscreenMode, int preferredRefreshRate) { }

	// RVA: 0x1034788 Offset: 0x1034788 VA: 0x1034788
	public static void SetResolution(int width, int height, bool fullscreen, int preferredRefreshRate) { }

	// RVA: 0x1034798 Offset: 0x1034798 VA: 0x1034798
	public static void SetResolution(int width, int height, bool fullscreen) { }

	// RVA: 0x1034534 Offset: 0x1034534 VA: 0x1034534
	private static void get_currentResolution_Injected(out Resolution ret) { }

	// RVA: 0x1034690 Offset: 0x1034690 VA: 0x1034690
	private static void get_safeArea_Injected(out Rect ret) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC445D4 Offset: 0xC445D4 VA: 0xC445D4
public struct RenderBuffer // TypeDefIndex: 2147
{
	// Fields
	internal int m_RenderTextureInstanceID; // 0x0
	internal IntPtr m_BufferPtr; // 0x8
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC4460C Offset: 0xC4460C VA: 0xC4460C
[NativeHeaderAttribute] // RVA: 0xC4460C Offset: 0xC4460C VA: 0xC4460C
[NativeHeaderAttribute] // RVA: 0xC4460C Offset: 0xC4460C VA: 0xC4460C
[NativeHeaderAttribute] // RVA: 0xC4460C Offset: 0xC4460C VA: 0xC4460C
[NativeHeaderAttribute] // RVA: 0xC4460C Offset: 0xC4460C VA: 0xC4460C
public class Graphics // TypeDefIndex: 2148
{
	// Fields
	internal static readonly int kMaxDrawMeshInstanceCount; // 0x0

	// Methods

	[FreeFunctionAttribute] // RVA: 0xC4CCEC Offset: 0xC4CCEC VA: 0xC4CCEC
	// RVA: 0x26A9358 Offset: 0x26A9358 VA: 0x26A9358
	private static int Internal_GetMaxDrawMeshInstanceCount() { }

	[FreeFunctionAttribute] // RVA: 0xC4CD24 Offset: 0xC4CD24 VA: 0xC4CD24
	// RVA: 0x26A93B0 Offset: 0x26A93B0 VA: 0x26A93B0
	private static void Internal_SetNullRT() { }

	[NativeMethodAttribute] // RVA: 0xC4CD5C Offset: 0xC4CD5C VA: 0xC4CD5C
	// RVA: 0x26A9408 Offset: 0x26A9408 VA: 0x26A9408
	private static void Internal_SetRTSimple(RenderBuffer color, RenderBuffer depth, int mip, CubemapFace face, int depthSlice) { }

	[VisibleToOtherModulesAttribute] // RVA: 0xC4CDC0 Offset: 0xC4CDC0 VA: 0xC4CDC0
	[FreeFunctionAttribute] // RVA: 0xC4CDC0 Offset: 0xC4CDC0 VA: 0xC4CDC0
	// RVA: 0x26A953C Offset: 0x26A953C VA: 0x26A953C
	internal static void Internal_DrawTexture(ref Internal_DrawTextureArguments args) { }

	[FreeFunctionAttribute] // RVA: 0xC4CE5C Offset: 0xC4CE5C VA: 0xC4CE5C
	// RVA: 0x26A95A8 Offset: 0x26A95A8 VA: 0x26A95A8
	private static void Internal_BlitMaterial(Texture source, RenderTexture dest, Material mat, int pass, bool setRT) { }

	[FreeFunctionAttribute] // RVA: 0xC4CE94 Offset: 0xC4CE94 VA: 0xC4CE94
	// RVA: 0x26A9644 Offset: 0x26A9644 VA: 0x26A9644
	private static void Internal_BlitMultiTap(Texture source, RenderTexture dest, Material mat, Vector2[] offsets) { }

	[FreeFunctionAttribute] // RVA: 0xC4CECC Offset: 0xC4CECC VA: 0xC4CECC
	// RVA: 0x26A96D0 Offset: 0x26A96D0 VA: 0x26A96D0
	private static void Blit2(Texture source, RenderTexture dest) { }

	// RVA: 0x26A9744 Offset: 0x26A9744 VA: 0x26A9744
	internal static void SetRenderTargetImpl(RenderBuffer colorBuffer, RenderBuffer depthBuffer, int mipLevel, CubemapFace face, int depthSlice) { }

	// RVA: 0x26A97F0 Offset: 0x26A97F0 VA: 0x26A97F0
	internal static void SetRenderTargetImpl(RenderTexture rt, int mipLevel, CubemapFace face, int depthSlice) { }

	// RVA: 0x26A99BC Offset: 0x26A99BC VA: 0x26A99BC
	public static void SetRenderTarget(RenderTexture rt, int mipLevel, CubemapFace face, int depthSlice) { }

	// RVA: 0x26A9A48 Offset: 0x26A9A48 VA: 0x26A9A48
	public static void Blit(Texture source, RenderTexture dest) { }

	// RVA: 0x26A9ABC Offset: 0x26A9ABC VA: 0x26A9ABC
	public static void Blit(Texture source, RenderTexture dest, Material mat, int pass) { }

	// RVA: 0x26A9B4C Offset: 0x26A9B4C VA: 0x26A9B4C
	public static void Blit(Texture source, RenderTexture dest, Material mat) { }

	// RVA: 0x26A9BCC Offset: 0x26A9BCC VA: 0x26A9BCC
	public static void BlitMultiTap(Texture source, RenderTexture dest, Material mat, Vector2[] offsets) { }

	[ExcludeFromDocsAttribute] // RVA: 0xC4CF04 Offset: 0xC4CF04 VA: 0xC4CF04
	// RVA: 0x26A9CBC Offset: 0x26A9CBC VA: 0x26A9CBC
	public static void SetRenderTarget(RenderTexture rt) { }

	// RVA: 0x26A9D2C Offset: 0x26A9D2C VA: 0x26A9D2C
	private static void .cctor() { }

	// RVA: 0x26A94A0 Offset: 0x26A94A0 VA: 0x26A94A0
	private static void Internal_SetRTSimple_Injected(ref RenderBuffer color, ref RenderBuffer depth, int mip, CubemapFace face, int depthSlice) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC446D8 Offset: 0xC446D8 VA: 0xC446D8
[NativeHeaderAttribute] // RVA: 0xC446D8 Offset: 0xC446D8 VA: 0xC446D8
[StaticAccessorAttribute] // RVA: 0xC446D8 Offset: 0xC446D8 VA: 0xC446D8
[NativeHeaderAttribute] // RVA: 0xC446D8 Offset: 0xC446D8 VA: 0xC446D8
[NativeHeaderAttribute] // RVA: 0xC446D8 Offset: 0xC446D8 VA: 0xC446D8
public sealed class GL // TypeDefIndex: 2149
{
	// Methods

	[NativeNameAttribute] // RVA: 0xC4CF14 Offset: 0xC4CF14 VA: 0xC4CF14
	// RVA: 0x2650398 Offset: 0x2650398 VA: 0x2650398
	public static void Vertex3(float x, float y, float z) { }

	// RVA: 0x2650420 Offset: 0x2650420 VA: 0x2650420
	public static void Vertex(Vector3 v) { }

	[NativeNameAttribute] // RVA: 0xC4CF4C Offset: 0xC4CF4C VA: 0xC4CF4C
	// RVA: 0x2650424 Offset: 0x2650424 VA: 0x2650424
	public static void TexCoord3(float x, float y, float z) { }

	// RVA: 0x26504AC Offset: 0x26504AC VA: 0x26504AC
	public static void TexCoord2(float x, float y) { }

	[NativeNameAttribute] // RVA: 0xC4CF84 Offset: 0xC4CF84 VA: 0xC4CF84
	// RVA: 0x26504B4 Offset: 0x26504B4 VA: 0x26504B4
	private static void ImmediateColor(float r, float g, float b, float a) { }

	// RVA: 0x265053C Offset: 0x265053C VA: 0x265053C
	public static void Color(Color c) { }

	[NativeNameAttribute] // RVA: 0xC4CFBC Offset: 0xC4CFBC VA: 0xC4CFBC
	[ObsoleteAttribute] // RVA: 0xC4CFBC Offset: 0xC4CFBC VA: 0xC4CFBC
	// RVA: 0x2650540 Offset: 0x2650540 VA: 0x2650540
	public static void SetRevertBackfacing(bool revertBackFaces) { }

	[FreeFunctionAttribute] // RVA: 0xC4D020 Offset: 0xC4D020 VA: 0xC4D020
	// RVA: 0x26505AC Offset: 0x26505AC VA: 0x26505AC
	public static void PushMatrix() { }

	[FreeFunctionAttribute] // RVA: 0xC4D058 Offset: 0xC4D058 VA: 0xC4D058
	// RVA: 0x2650604 Offset: 0x2650604 VA: 0x2650604
	public static void PopMatrix() { }

	[FreeFunctionAttribute] // RVA: 0xC4D090 Offset: 0xC4D090 VA: 0xC4D090
	// RVA: 0x265065C Offset: 0x265065C VA: 0x265065C
	public static void LoadOrtho() { }

	[FreeFunctionAttribute] // RVA: 0xC4D0C8 Offset: 0xC4D0C8 VA: 0xC4D0C8
	// RVA: 0x26506B4 Offset: 0x26506B4 VA: 0x26506B4
	public static Matrix4x4 GetGPUProjectionMatrix(Matrix4x4 proj, bool renderIntoTexture) { }

	[FreeFunctionAttribute] // RVA: 0xC4D100 Offset: 0xC4D100 VA: 0xC4D100
	// RVA: 0x2650784 Offset: 0x2650784 VA: 0x2650784
	private static void GLIssuePluginEvent(IntPtr callback, int eventID) { }

	// RVA: 0x26507F8 Offset: 0x26507F8 VA: 0x26507F8
	public static void IssuePluginEvent(IntPtr callback, int eventID) { }

	[FreeFunctionAttribute] // RVA: 0xC4D110 Offset: 0xC4D110 VA: 0xC4D110
	// RVA: 0x26508B0 Offset: 0x26508B0 VA: 0x26508B0
	public static void Begin(int mode) { }

	[FreeFunctionAttribute] // RVA: 0xC4D158 Offset: 0xC4D158 VA: 0xC4D158
	// RVA: 0x265091C Offset: 0x265091C VA: 0x265091C
	public static void End() { }

	[FreeFunctionAttribute] // RVA: 0xC4D190 Offset: 0xC4D190 VA: 0xC4D190
	// RVA: 0x2650974 Offset: 0x2650974 VA: 0x2650974
	private static void GLClear(bool clearDepth, bool clearColor, Color backgroundColor, float depth) { }

	// RVA: 0x2650A34 Offset: 0x2650A34 VA: 0x2650A34
	public static void Clear(bool clearDepth, bool clearColor, Color backgroundColor) { }

	// RVA: 0x2650700 Offset: 0x2650700 VA: 0x2650700
	private static void GetGPUProjectionMatrix_Injected(ref Matrix4x4 proj, bool renderIntoTexture, out Matrix4x4 ret) { }

	// RVA: 0x26509A8 Offset: 0x26509A8 VA: 0x26509A8
	private static void GLClear_Injected(bool clearDepth, bool clearColor, ref Color backgroundColor, float depth) { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC447A8 Offset: 0xC447A8 VA: 0xC447A8
[NativeHeaderAttribute] // RVA: 0xC447A8 Offset: 0xC447A8 VA: 0xC447A8
public sealed class LightmapData // TypeDefIndex: 2150
{
	// Fields
	internal Texture2D m_Light; // 0x10
	internal Texture2D m_Dir; // 0x18
	internal Texture2D m_ShadowMask; // 0x20

	// Properties
	public Texture2D lightmapColor { get; set; }
	public Texture2D lightmapDir { set; }
	public Texture2D shadowMask { set; }

	// Methods

	// RVA: 0x26AB498 Offset: 0x26AB498 VA: 0x26AB498
	public void .ctor() { }

	// RVA: 0x26AB4A0 Offset: 0x26AB4A0 VA: 0x26AB4A0
	public Texture2D get_lightmapColor() { }

	// RVA: 0x26AB4A8 Offset: 0x26AB4A8 VA: 0x26AB4A8
	public void set_lightmapColor(Texture2D value) { }

	// RVA: 0x26AB4B0 Offset: 0x26AB4B0 VA: 0x26AB4B0
	public void set_lightmapDir(Texture2D value) { }

	// RVA: 0x26AB4B8 Offset: 0x26AB4B8 VA: 0x26AB4B8
	public void set_shadowMask(Texture2D value) { }
}

// Namespace: UnityEngine
[StaticAccessorAttribute] // RVA: 0xC447F4 Offset: 0xC447F4 VA: 0xC447F4
[NativeHeaderAttribute] // RVA: 0xC447F4 Offset: 0xC447F4 VA: 0xC447F4
public sealed class LightmapSettings : Object // TypeDefIndex: 2151
{
	// Properties
	public static LightmapData[] lightmaps { get; set; }
	public static LightmapsMode lightmapsMode { get; set; }

	// Methods

	[FreeFunctionAttribute] // RVA: 0xC4D1A0 Offset: 0xC4D1A0 VA: 0xC4D1A0
	// RVA: 0x26AB4C0 Offset: 0x26AB4C0 VA: 0x26AB4C0
	public static LightmapData[] get_lightmaps() { }

	[FreeFunctionAttribute] // RVA: 0xC4D1B0 Offset: 0xC4D1B0 VA: 0xC4D1B0
	// RVA: 0x26AB518 Offset: 0x26AB518 VA: 0x26AB518
	public static void set_lightmaps(LightmapData[] value) { }

	// RVA: 0x26AB584 Offset: 0x26AB584 VA: 0x26AB584
	public static LightmapsMode get_lightmapsMode() { }

	[FreeFunctionAttribute] // RVA: 0xC4D1C0 Offset: 0xC4D1C0 VA: 0xC4D1C0
	// RVA: 0x26AB5DC Offset: 0x26AB5DC VA: 0x26AB5DC
	public static void set_lightmapsMode(LightmapsMode value) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC44854 Offset: 0xC44854 VA: 0xC44854
[NativeAsStructAttribute] // RVA: 0xC44854 Offset: 0xC44854 VA: 0xC44854
public sealed class LightProbes : Object // TypeDefIndex: 2152
{}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xC448A0 Offset: 0xC448A0 VA: 0xC448A0
public struct Resolution // TypeDefIndex: 2153
{
	// Fields
	private int m_Width; // 0x0
	private int m_Height; // 0x4
	private int m_RefreshRate; // 0x8

	// Properties
	public int width { get; }
	public int height { get; }

	// Methods

	// RVA: 0xBBA1D8 Offset: 0xBBA1D8 VA: 0xBBA1D8
	public int get_width() { }

	// RVA: 0xBBA1E0 Offset: 0xBBA1E0 VA: 0xBBA1E0
	public int get_height() { }

	// RVA: 0xBBA1E8 Offset: 0xBBA1E8 VA: 0xBBA1E8 Slot: 3
	public override string ToString() { }
}

// Namespace: UnityEngine
[VisibleToOtherModulesAttribute] // RVA: 0xC448B0 Offset: 0xC448B0 VA: 0xC448B0
internal struct Internal_DrawTextureArguments // TypeDefIndex: 2154
{
	// Fields
	public Rect screenRect; // 0x0
	public Rect sourceRect; // 0x10
	public int leftBorder; // 0x20
	public int rightBorder; // 0x24
	public int topBorder; // 0x28
	public int bottomBorder; // 0x2C
	public Color color; // 0x30
	public Vector4 borderWidths; // 0x40
	public Vector4 cornerRadiuses; // 0x50
	public int pass; // 0x60
	public Texture texture; // 0x68
	public Material mat; // 0x70
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC44928 Offset: 0xC44928 VA: 0xC44928
[NativeHeaderAttribute] // RVA: 0xC44928 Offset: 0xC44928 VA: 0xC44928
[StaticAccessorAttribute] // RVA: 0xC44928 Offset: 0xC44928 VA: 0xC44928
public sealed class QualitySettings : Object // TypeDefIndex: 2155
{
	// Properties
	[NativePropertyAttribute] // RVA: 0xC5433C Offset: 0xC5433C VA: 0xC5433C
	public static ShadowResolution shadowResolution { get; }
	public static int vSyncCount { set; }
	public static ColorSpace activeColorSpace { get; }

	// Methods

	// RVA: 0x26BB510 Offset: 0x26BB510 VA: 0x26BB510
	public static ShadowResolution get_shadowResolution() { }

	// RVA: 0x26BB568 Offset: 0x26BB568 VA: 0x26BB568
	public static void set_vSyncCount(int value) { }

	[NativeNameAttribute] // RVA: 0xC4D1F8 Offset: 0xC4D1F8 VA: 0xC4D1F8
	[StaticAccessorAttribute] // RVA: 0xC4D1F8 Offset: 0xC4D1F8 VA: 0xC4D1F8
	// RVA: 0x26BB5D4 Offset: 0x26BB5D4 VA: 0x26BB5D4
	public static ColorSpace get_activeColorSpace() { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC449B0 Offset: 0xC449B0 VA: 0xC449B0
public sealed class ImageEffectOpaque : Attribute // TypeDefIndex: 2156
{
	// Methods

	// RVA: 0x26A9EEC Offset: 0x26A9EEC VA: 0x26A9EEC
	public void .ctor() { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC449C0 Offset: 0xC449C0 VA: 0xC449C0
[NativeHeaderAttribute] // RVA: 0xC449C0 Offset: 0xC449C0 VA: 0xC449C0
public sealed class TrailRenderer : Renderer // TypeDefIndex: 2157
{
	// Properties
	[ObsoleteAttribute] // RVA: 0xC54374 Offset: 0xC54374 VA: 0xC54374
	public int numPositions { get; }
	public float time { get; set; }
	public float startWidth { get; set; }
	public float endWidth { get; set; }
	public float widthMultiplier { get; set; }
	public bool autodestruct { get; set; }
	public bool emitting { get; set; }
	public int numCornerVertices { get; set; }
	public int numCapVertices { get; set; }
	public float minVertexDistance { get; set; }
	public Color startColor { get; set; }
	public Color endColor { get; set; }
	[NativePropertyAttribute] // RVA: 0xC543B0 Offset: 0xC543B0 VA: 0xC543B0
	public int positionCount { get; }
	public float shadowBias { get; set; }
	public bool generateLightingData { get; set; }
	public LineTextureMode textureMode { get; set; }
	public LineAlignment alignment { get; set; }
	public AnimationCurve widthCurve { get; set; }
	public Gradient colorGradient { get; set; }

	// Methods

	// RVA: 0x103D894 Offset: 0x103D894 VA: 0x103D894
	public void .ctor() { }

	// RVA: 0x103D89C Offset: 0x103D89C VA: 0x103D89C
	public int get_numPositions() { }

	// RVA: 0x103D90C Offset: 0x103D90C VA: 0x103D90C
	public float get_time() { }

	// RVA: 0x103D978 Offset: 0x103D978 VA: 0x103D978
	public void set_time(float value) { }

	// RVA: 0x103D9EC Offset: 0x103D9EC VA: 0x103D9EC
	public float get_startWidth() { }

	// RVA: 0x103DA58 Offset: 0x103DA58 VA: 0x103DA58
	public void set_startWidth(float value) { }

	// RVA: 0x103DACC Offset: 0x103DACC VA: 0x103DACC
	public float get_endWidth() { }

	// RVA: 0x103DB38 Offset: 0x103DB38 VA: 0x103DB38
	public void set_endWidth(float value) { }

	// RVA: 0x103DBAC Offset: 0x103DBAC VA: 0x103DBAC
	public float get_widthMultiplier() { }

	// RVA: 0x103DC18 Offset: 0x103DC18 VA: 0x103DC18
	public void set_widthMultiplier(float value) { }

	// RVA: 0x103DC8C Offset: 0x103DC8C VA: 0x103DC8C
	public bool get_autodestruct() { }

	// RVA: 0x103DCF8 Offset: 0x103DCF8 VA: 0x103DCF8
	public void set_autodestruct(bool value) { }

	// RVA: 0x103DD6C Offset: 0x103DD6C VA: 0x103DD6C
	public bool get_emitting() { }

	// RVA: 0x103DDD8 Offset: 0x103DDD8 VA: 0x103DDD8
	public void set_emitting(bool value) { }

	// RVA: 0x103DE4C Offset: 0x103DE4C VA: 0x103DE4C
	public int get_numCornerVertices() { }

	// RVA: 0x103DEB8 Offset: 0x103DEB8 VA: 0x103DEB8
	public void set_numCornerVertices(int value) { }

	// RVA: 0x103DF2C Offset: 0x103DF2C VA: 0x103DF2C
	public int get_numCapVertices() { }

	// RVA: 0x103DF98 Offset: 0x103DF98 VA: 0x103DF98
	public void set_numCapVertices(int value) { }

	// RVA: 0x103E00C Offset: 0x103E00C VA: 0x103E00C
	public float get_minVertexDistance() { }

	// RVA: 0x103E078 Offset: 0x103E078 VA: 0x103E078
	public void set_minVertexDistance(float value) { }

	// RVA: 0x103E0EC Offset: 0x103E0EC VA: 0x103E0EC
	public Color get_startColor() { }

	// RVA: 0x103E18C Offset: 0x103E18C VA: 0x103E18C
	public void set_startColor(Color value) { }

	// RVA: 0x103E228 Offset: 0x103E228 VA: 0x103E228
	public Color get_endColor() { }

	// RVA: 0x103E2C8 Offset: 0x103E2C8 VA: 0x103E2C8
	public void set_endColor(Color value) { }

	// RVA: 0x103D8A0 Offset: 0x103D8A0 VA: 0x103D8A0
	public int get_positionCount() { }

	// RVA: 0x103E364 Offset: 0x103E364 VA: 0x103E364
	public void SetPosition(int index, Vector3 position) { }

	// RVA: 0x103E410 Offset: 0x103E410 VA: 0x103E410
	public Vector3 GetPosition(int index) { }

	// RVA: 0x103E4C4 Offset: 0x103E4C4 VA: 0x103E4C4
	public float get_shadowBias() { }

	// RVA: 0x103E530 Offset: 0x103E530 VA: 0x103E530
	public void set_shadowBias(float value) { }

	// RVA: 0x103E5A4 Offset: 0x103E5A4 VA: 0x103E5A4
	public bool get_generateLightingData() { }

	// RVA: 0x103E610 Offset: 0x103E610 VA: 0x103E610
	public void set_generateLightingData(bool value) { }

	// RVA: 0x103E684 Offset: 0x103E684 VA: 0x103E684
	public LineTextureMode get_textureMode() { }

	// RVA: 0x103E6F0 Offset: 0x103E6F0 VA: 0x103E6F0
	public void set_textureMode(LineTextureMode value) { }

	// RVA: 0x103E764 Offset: 0x103E764 VA: 0x103E764
	public LineAlignment get_alignment() { }

	// RVA: 0x103E7D0 Offset: 0x103E7D0 VA: 0x103E7D0
	public void set_alignment(LineAlignment value) { }

	// RVA: 0x103E844 Offset: 0x103E844 VA: 0x103E844
	public void Clear() { }

	// RVA: 0x103E8B0 Offset: 0x103E8B0 VA: 0x103E8B0
	public void BakeMesh(Mesh mesh, bool useTransform = False) { }

	// RVA: 0x103E8F4 Offset: 0x103E8F4 VA: 0x103E8F4
	public void BakeMesh(Mesh mesh, Camera camera, bool useTransform = False) { }

	// RVA: 0x103E980 Offset: 0x103E980 VA: 0x103E980
	public AnimationCurve get_widthCurve() { }

	// RVA: 0x103E9F0 Offset: 0x103E9F0 VA: 0x103E9F0
	public void set_widthCurve(AnimationCurve value) { }

	// RVA: 0x103EA68 Offset: 0x103EA68 VA: 0x103EA68
	public Gradient get_colorGradient() { }

	// RVA: 0x103EAD8 Offset: 0x103EAD8 VA: 0x103EAD8
	public void set_colorGradient(Gradient value) { }

	// RVA: 0x103E984 Offset: 0x103E984 VA: 0x103E984
	private AnimationCurve GetWidthCurveCopy() { }

	// RVA: 0x103E9F4 Offset: 0x103E9F4 VA: 0x103E9F4
	private void SetWidthCurve(AnimationCurve curve) { }

	// RVA: 0x103EA6C Offset: 0x103EA6C VA: 0x103EA6C
	private Gradient GetColorGradientCopy() { }

	// RVA: 0x103EADC Offset: 0x103EADC VA: 0x103EADC
	private void SetColorGradient(Gradient curve) { }

	[FreeFunctionAttribute] // RVA: 0xC4D25C Offset: 0xC4D25C VA: 0xC4D25C
	// RVA: 0x103EB50 Offset: 0x103EB50 VA: 0x103EB50
	public int GetPositions([Out] Vector3[] positions) { }

	[FreeFunctionAttribute] // RVA: 0xC4D2B0 Offset: 0xC4D2B0 VA: 0xC4D2B0
	// RVA: 0x103EBC4 Offset: 0x103EBC4 VA: 0x103EBC4
	public void SetPositions(Vector3[] positions) { }

	[FreeFunctionAttribute] // RVA: 0xC4D304 Offset: 0xC4D304 VA: 0xC4D304
	// RVA: 0x103EC38 Offset: 0x103EC38 VA: 0x103EC38
	public void AddPosition(Vector3 position) { }

	[FreeFunctionAttribute] // RVA: 0xC4D358 Offset: 0xC4D358 VA: 0xC4D358
	// RVA: 0x103ECD4 Offset: 0x103ECD4 VA: 0x103ECD4
	public void AddPositions(Vector3[] positions) { }

	// RVA: 0x103E118 Offset: 0x103E118 VA: 0x103E118
	private void get_startColor_Injected(out Color ret) { }

	// RVA: 0x103E1B4 Offset: 0x103E1B4 VA: 0x103E1B4
	private void set_startColor_Injected(ref Color value) { }

	// RVA: 0x103E254 Offset: 0x103E254 VA: 0x103E254
	private void get_endColor_Injected(out Color ret) { }

	// RVA: 0x103E2F0 Offset: 0x103E2F0 VA: 0x103E2F0
	private void set_endColor_Injected(ref Color value) { }

	// RVA: 0x103E38C Offset: 0x103E38C VA: 0x103E38C
	private void SetPosition_Injected(int index, ref Vector3 position) { }

	// RVA: 0x103E440 Offset: 0x103E440 VA: 0x103E440
	private void GetPosition_Injected(int index, out Vector3 ret) { }

	// RVA: 0x103EC60 Offset: 0x103EC60 VA: 0x103EC60
	private void AddPosition_Injected(ref Vector3 position) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC44A20 Offset: 0xC44A20 VA: 0xC44A20
[NativeHeaderAttribute] // RVA: 0xC44A20 Offset: 0xC44A20 VA: 0xC44A20
public sealed class LineRenderer : Renderer // TypeDefIndex: 2158
{
	// Properties
	public float startWidth { set; }
	public float endWidth { set; }
	public bool useWorldSpace { set; }
	[NativePropertyAttribute] // RVA: 0xC543E8 Offset: 0xC543E8 VA: 0xC543E8
	public int positionCount { set; }

	// Methods

	[ObsoleteAttribute] // RVA: 0xC4D3AC Offset: 0xC4D3AC VA: 0xC4D3AC
	// RVA: 0x26AB648 Offset: 0x26AB648 VA: 0x26AB648
	public void SetWidth(float start, float end) { }

	[ObsoleteAttribute] // RVA: 0xC4D3E8 Offset: 0xC4D3E8 VA: 0xC4D3E8
	// RVA: 0x26AB764 Offset: 0x26AB764 VA: 0x26AB764
	public void SetVertexCount(int count) { }

	// RVA: 0x26AB67C Offset: 0x26AB67C VA: 0x26AB67C
	public void set_startWidth(float value) { }

	// RVA: 0x26AB6F0 Offset: 0x26AB6F0 VA: 0x26AB6F0
	public void set_endWidth(float value) { }

	// RVA: 0x26AB7DC Offset: 0x26AB7DC VA: 0x26AB7DC
	public void set_useWorldSpace(bool value) { }

	// RVA: 0x26AB768 Offset: 0x26AB768 VA: 0x26AB768
	public void set_positionCount(int value) { }

	// RVA: 0x26AB850 Offset: 0x26AB850 VA: 0x26AB850
	public void SetPosition(int index, Vector3 position) { }

	// RVA: 0x26AB878 Offset: 0x26AB878 VA: 0x26AB878
	private void SetPosition_Injected(int index, ref Vector3 position) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC44A80 Offset: 0xC44A80 VA: 0xC44A80
[NativeHeaderAttribute] // RVA: 0xC44A80 Offset: 0xC44A80 VA: 0xC44A80
[NativeHeaderAttribute] // RVA: 0xC44A80 Offset: 0xC44A80 VA: 0xC44A80
[NativeHeaderAttribute] // RVA: 0xC44A80 Offset: 0xC44A80 VA: 0xC44A80
public sealed class MaterialPropertyBlock // TypeDefIndex: 2159
{
	// Fields
	internal IntPtr m_Ptr; // 0x10

	// Methods

	// RVA: 0x26AE444 Offset: 0x26AE444 VA: 0x26AE444
	public void .ctor() { }

	[NativeNameAttribute] // RVA: 0xC4D424 Offset: 0xC4D424 VA: 0xC4D424
	// RVA: 0x26AE4C8 Offset: 0x26AE4C8 VA: 0x26AE4C8
	private void SetColorImpl(int name, Color value) { }

	[NativeNameAttribute] // RVA: 0xC4D45C Offset: 0xC4D45C VA: 0xC4D45C
	// RVA: 0x26AE574 Offset: 0x26AE574 VA: 0x26AE574
	private void SetTextureImpl(int name, Texture value) { }

	[NativeMethodAttribute] // RVA: 0xC4D494 Offset: 0xC4D494 VA: 0xC4D494
	// RVA: 0x26AE470 Offset: 0x26AE470 VA: 0x26AE470
	private static IntPtr CreateImpl() { }

	[NativeMethodAttribute] // RVA: 0xC4D4E8 Offset: 0xC4D4E8 VA: 0xC4D4E8
	// RVA: 0x26AE5F8 Offset: 0x26AE5F8 VA: 0x26AE5F8
	private static void DestroyImpl(IntPtr mpb) { }

	// RVA: 0x26AE664 Offset: 0x26AE664 VA: 0x26AE664
	private void Clear(bool keepMemory) { }

	// RVA: 0x26AE6D8 Offset: 0x26AE6D8 VA: 0x26AE6D8
	public void Clear() { }

	// RVA: 0x26AE6E0 Offset: 0x26AE6E0 VA: 0x26AE6E0 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x26AE754 Offset: 0x26AE754 VA: 0x26AE754
	private void Dispose() { }

	// RVA: 0x26AE7BC Offset: 0x26AE7BC VA: 0x26AE7BC
	public void SetColor(string name, Color value) { }

	// RVA: 0x26AE824 Offset: 0x26AE824 VA: 0x26AE824
	public void SetTexture(string name, Texture value) { }

	// RVA: 0x26AE4F0 Offset: 0x26AE4F0 VA: 0x26AE4F0
	private void SetColorImpl_Injected(int name, ref Color value) { }
}

// Namespace: UnityEngine
[RequireComponent] // RVA: 0xC44B28 Offset: 0xC44B28 VA: 0xC44B28
[NativeHeaderAttribute] // RVA: 0xC44B28 Offset: 0xC44B28 VA: 0xC44B28
[NativeHeaderAttribute] // RVA: 0xC44B28 Offset: 0xC44B28 VA: 0xC44B28
[UsedByNativeCodeAttribute] // RVA: 0xC44B28 Offset: 0xC44B28 VA: 0xC44B28
public class Renderer : Component // TypeDefIndex: 2160
{
	// Properties
	[EditorBrowsableAttribute] // RVA: 0xC54420 Offset: 0xC54420 VA: 0xC54420
	[ObsoleteAttribute] // RVA: 0xC54420 Offset: 0xC54420 VA: 0xC54420
	public bool castShadows { set; }
	public Bounds bounds { get; }
	public bool enabled { get; set; }
	public bool isVisible { get; }
	public ShadowCastingMode shadowCastingMode { set; }
	public bool receiveShadows { set; }
	public LightProbeUsage lightProbeUsage { set; }
	public ReflectionProbeUsage reflectionProbeUsage { set; }
	public int sortingLayerID { get; }
	public int sortingOrder { get; set; }
	public Transform probeAnchor { set; }
	public int lightmapIndex { set; }
	public Vector4 lightmapScaleOffset { set; }
	public Material[] materials { get; set; }
	public Material material { get; set; }
	public Material sharedMaterial { get; set; }
	public Material[] sharedMaterials { get; set; }

	// Methods

	// RVA: 0x1030ECC Offset: 0x1030ECC VA: 0x1030ECC
	public void .ctor() { }

	// RVA: 0x1030ED4 Offset: 0x1030ED4 VA: 0x1030ED4
	public void set_castShadows(bool value) { }

	[FreeFunctionAttribute] // RVA: 0xC4D54C Offset: 0xC4D54C VA: 0xC4D54C
	// RVA: 0x1030F78 Offset: 0x1030F78 VA: 0x1030F78
	public Bounds get_bounds() { }

	[FreeFunctionAttribute] // RVA: 0xC4D5A0 Offset: 0xC4D5A0 VA: 0xC4D5A0
	// RVA: 0x103102C Offset: 0x103102C VA: 0x103102C
	private void SetStaticLightmapST(Vector4 st) { }

	[FreeFunctionAttribute] // RVA: 0xC4D5F4 Offset: 0xC4D5F4 VA: 0xC4D5F4
	// RVA: 0x10310C8 Offset: 0x10310C8 VA: 0x10310C8
	private Material GetMaterial() { }

	[FreeFunctionAttribute] // RVA: 0xC4D648 Offset: 0xC4D648 VA: 0xC4D648
	// RVA: 0x1031134 Offset: 0x1031134 VA: 0x1031134
	private Material GetSharedMaterial() { }

	[FreeFunctionAttribute] // RVA: 0xC4D69C Offset: 0xC4D69C VA: 0xC4D69C
	// RVA: 0x10311A0 Offset: 0x10311A0 VA: 0x10311A0
	private void SetMaterial(Material m) { }

	[FreeFunctionAttribute] // RVA: 0xC4D6F0 Offset: 0xC4D6F0 VA: 0xC4D6F0
	// RVA: 0x1031214 Offset: 0x1031214 VA: 0x1031214
	private Material[] GetMaterialArray() { }

	[FreeFunctionAttribute] // RVA: 0xC4D744 Offset: 0xC4D744 VA: 0xC4D744
	// RVA: 0x1031280 Offset: 0x1031280 VA: 0x1031280
	private void SetMaterialArray(Material[] m) { }

	[FreeFunctionAttribute] // RVA: 0xC4D798 Offset: 0xC4D798 VA: 0xC4D798
	// RVA: 0x10312F4 Offset: 0x10312F4 VA: 0x10312F4
	internal void Internal_SetPropertyBlock(MaterialPropertyBlock properties) { }

	// RVA: 0x1031368 Offset: 0x1031368 VA: 0x1031368
	public void SetPropertyBlock(MaterialPropertyBlock properties) { }

	// RVA: 0x103136C Offset: 0x103136C VA: 0x103136C
	public bool get_enabled() { }

	// RVA: 0x10313D8 Offset: 0x10313D8 VA: 0x10313D8
	public void set_enabled(bool value) { }

	[NativeNameAttribute] // RVA: 0xC4D7EC Offset: 0xC4D7EC VA: 0xC4D7EC
	// RVA: 0x103144C Offset: 0x103144C VA: 0x103144C
	public bool get_isVisible() { }

	// RVA: 0x1030F04 Offset: 0x1030F04 VA: 0x1030F04
	public void set_shadowCastingMode(ShadowCastingMode value) { }

	// RVA: 0x10314B8 Offset: 0x10314B8 VA: 0x10314B8
	public void set_receiveShadows(bool value) { }

	// RVA: 0x103152C Offset: 0x103152C VA: 0x103152C
	public void set_lightProbeUsage(LightProbeUsage value) { }

	// RVA: 0x10315A0 Offset: 0x10315A0 VA: 0x10315A0
	public void set_reflectionProbeUsage(ReflectionProbeUsage value) { }

	// RVA: 0x1031614 Offset: 0x1031614 VA: 0x1031614
	public int get_sortingLayerID() { }

	// RVA: 0x1031680 Offset: 0x1031680 VA: 0x1031680
	public int get_sortingOrder() { }

	// RVA: 0x10316EC Offset: 0x10316EC VA: 0x10316EC
	public void set_sortingOrder(int value) { }

	// RVA: 0x1031760 Offset: 0x1031760 VA: 0x1031760
	public void set_probeAnchor(Transform value) { }

	[NativeNameAttribute] // RVA: 0xC4D824 Offset: 0xC4D824 VA: 0xC4D824
	// RVA: 0x10317D4 Offset: 0x10317D4 VA: 0x10317D4
	private void SetLightmapIndex(int index, LightmapType lt) { }

	// RVA: 0x1031858 Offset: 0x1031858 VA: 0x1031858
	public void set_lightmapIndex(int value) { }

	// RVA: 0x1031860 Offset: 0x1031860 VA: 0x1031860
	public void set_lightmapScaleOffset(Vector4 value) { }

	[NativeNameAttribute] // RVA: 0xC4D85C Offset: 0xC4D85C VA: 0xC4D85C
	// RVA: 0x1031888 Offset: 0x1031888 VA: 0x1031888
	private Material[] GetSharedMaterialArray() { }

	// RVA: 0x10318F4 Offset: 0x10318F4 VA: 0x10318F4
	public Material[] get_materials() { }

	// RVA: 0x10318F8 Offset: 0x10318F8 VA: 0x10318F8
	public void set_materials(Material[] value) { }

	// RVA: 0x10318FC Offset: 0x10318FC VA: 0x10318FC
	public Material get_material() { }

	// RVA: 0x1031900 Offset: 0x1031900 VA: 0x1031900
	public void set_material(Material value) { }

	// RVA: 0x1031904 Offset: 0x1031904 VA: 0x1031904
	public Material get_sharedMaterial() { }

	// RVA: 0x1031908 Offset: 0x1031908 VA: 0x1031908
	public void set_sharedMaterial(Material value) { }

	// RVA: 0x103190C Offset: 0x103190C VA: 0x103190C
	public Material[] get_sharedMaterials() { }

	// RVA: 0x1031910 Offset: 0x1031910 VA: 0x1031910
	public void set_sharedMaterials(Material[] value) { }

	// RVA: 0x1030FB8 Offset: 0x1030FB8 VA: 0x1030FB8
	private void get_bounds_Injected(out Bounds ret) { }

	// RVA: 0x1031054 Offset: 0x1031054 VA: 0x1031054
	private void SetStaticLightmapST_Injected(ref Vector4 st) { }
