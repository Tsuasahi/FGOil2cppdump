	|-GameObject.AddComponent<SyncTransformComponent>
	|-GameObject.AddComponent<TrackingMoveCtCComponent>
	|-GameObject.AddComponent<TweenAlpha>
	|-GameObject.AddComponent<TweenColor>
	|-GameObject.AddComponent<TweenHeight>
	|-GameObject.AddComponent<TweenPosition>
	|-GameObject.AddComponent<UIButton>
	|-GameObject.AddComponent<UICamera>
	|-GameObject.AddComponent<UICenterOnChild>
	|-GameObject.AddComponent<UIDragScrollView>
	|-GameObject.AddComponent<UIDrawCall>
	|-GameObject.AddComponent<UIEventListener>
	|-GameObject.AddComponent<UIKeyNavigation>
	|-GameObject.AddComponent<UILabel>
	|-GameObject.AddComponent<UIPanel>
	|-GameObject.AddComponent<UIRoot>
	|-GameObject.AddComponent<UITexture>
	|-GameObject.AddComponent<UITouchPress>
	|-GameObject.AddComponent<UIWrapContent>
	|-GameObject.AddComponent<Animation>
	|-GameObject.AddComponent<AudioListener>
	|-GameObject.AddComponent<AudioSource>
	|-GameObject.AddComponent<BoxCollider2D>
	|-GameObject.AddComponent<BoxCollider>
	|-GameObject.AddComponent<Camera>
	|-GameObject.AddComponent<Canvas>
	|-GameObject.AddComponent<CapsuleCollider>
	|-GameObject.AddComponent<CharacterController>
	|-GameObject.AddComponent<BaseInput>
	|-GameObject.AddComponent<StandaloneInputModule>
	|-GameObject.AddComponent<GUITexture>
	|-GameObject.AddComponent<MeshCollider>
	|-GameObject.AddComponent<MeshFilter>
	|-GameObject.AddComponent<MeshRenderer>
	|-GameObject.AddComponent<AsyncWebUtil>
	|-GameObject.AddComponent<UnityUtil>
	|-GameObject.AddComponent<UIFakeStore.LifecycleNotifier>
	|-GameObject.AddComponent<RectTransform>
	|-GameObject.AddComponent<Rigidbody>
	|-GameObject.AddComponent<Button>
	|-GameObject.AddComponent<Dropdown.DropdownItem>
	|-GameObject.AddComponent<Dropdown>
	|-GameObject.AddComponent<GraphicRaycaster>
	|-GameObject.AddComponent<Image>
	|-GameObject.AddComponent<InputField>
	|-GameObject.AddComponent<LayoutElement>
	|-GameObject.AddComponent<Mask>
	|-GameObject.AddComponent<RawImage>
	|-GameObject.AddComponent<ScrollRect>
	|-GameObject.AddComponent<Scrollbar>
	|-GameObject.AddComponent<Slider>
	|-GameObject.AddComponent<Text>
	|-GameObject.AddComponent<Toggle>
	|-GameObject.AddComponent<VideoPlayer>
	|-GameObject.AddComponent<WebViewObject>
	|-GameObject.AddComponent<AnimationTimelineController>
	|-GameObject.AddComponent<USRecordSequence>
	|-GameObject.AddComponent<USTimelineContainer>
	|-GameObject.AddComponent<iTween>
	|-GameObject.AddComponent<iTweenFSMEvents>
	|-GameObject.AddComponent<object>
	*/

	[FreeFunctionAttribute] // RVA: 0xBE0394 Offset: 0xBE0394 VA: 0xBE0394
	// RVA: 0x2562CDC Offset: 0x2562CDC VA: 0x2562CDC
	public Transform get_transform() { }

	// RVA: 0x2562D48 Offset: 0x2562D48 VA: 0x2562D48
	public int get_layer() { }

	// RVA: 0x2562DB4 Offset: 0x2562DB4 VA: 0x2562DB4
	public void set_layer(int value) { }

	[NativeMethodAttribute] // RVA: 0xBE03DC Offset: 0xBE03DC VA: 0xBE03DC
	// RVA: 0x2562E28 Offset: 0x2562E28 VA: 0x2562E28
	public bool get_active() { }

	[NativeMethodAttribute] // RVA: 0xBE0420 Offset: 0xBE0420 VA: 0xBE0420
	// RVA: 0x2562E94 Offset: 0x2562E94 VA: 0x2562E94
	public void SetActive(bool value) { }

	[NativeMethodAttribute] // RVA: 0xBE0464 Offset: 0xBE0464 VA: 0xBE0464
	// RVA: 0x2562F08 Offset: 0x2562F08 VA: 0x2562F08
	public bool get_activeSelf() { }

	[NativeMethodAttribute] // RVA: 0xBE04A8 Offset: 0xBE04A8 VA: 0xBE04A8
	// RVA: 0x2562F74 Offset: 0x2562F74 VA: 0x2562F74
	public bool get_activeInHierarchy() { }

	[FreeFunctionAttribute] // RVA: 0xBE04EC Offset: 0xBE04EC VA: 0xBE04EC
	// RVA: 0x2562FE0 Offset: 0x2562FE0 VA: 0x2562FE0
	public string get_tag() { }

	[FreeFunctionAttribute] // RVA: 0xBE0544 Offset: 0xBE0544 VA: 0xBE0544
	// RVA: 0x256304C Offset: 0x256304C VA: 0x256304C
	public void set_tag(string value) { }

	[FreeFunctionAttribute] // RVA: 0xBE058C Offset: 0xBE058C VA: 0xBE058C
	// RVA: 0x25630C0 Offset: 0x25630C0 VA: 0x25630C0
	public bool CompareTag(string tag) { }

	[FreeFunctionAttribute] // RVA: 0xBE05E0 Offset: 0xBE05E0 VA: 0xBE05E0
	// RVA: 0x2563134 Offset: 0x2563134 VA: 0x2563134
	public static GameObject FindGameObjectWithTag(string tag) { }

	[FreeFunctionAttribute] // RVA: 0xBE0634 Offset: 0xBE0634 VA: 0xBE0634
	// RVA: 0x25631A0 Offset: 0x25631A0 VA: 0x25631A0
	public static GameObject[] FindGameObjectsWithTag(string tag) { }

	[FreeFunctionAttribute] // RVA: 0xBE0688 Offset: 0xBE0688 VA: 0xBE0688
	// RVA: 0x256320C Offset: 0x256320C VA: 0x256320C
	public void SendMessageUpwards(string methodName, object value, SendMessageOptions options) { }

	[FreeFunctionAttribute] // RVA: 0xBE06DC Offset: 0xBE06DC VA: 0xBE06DC
	// RVA: 0x2562B40 Offset: 0x2562B40 VA: 0x2562B40
	public void SendMessage(string methodName, object value, SendMessageOptions options) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBE0730 Offset: 0xBE0730 VA: 0xBE0730
	// RVA: 0x2563298 Offset: 0x2563298 VA: 0x2563298
	public void SendMessage(string methodName, object value) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBE0740 Offset: 0xBE0740 VA: 0xBE0740
	// RVA: 0x25632A0 Offset: 0x25632A0 VA: 0x25632A0
	public void SendMessage(string methodName) { }

	[FreeFunctionAttribute] // RVA: 0xBE0750 Offset: 0xBE0750 VA: 0xBE0750
	// RVA: 0x2562BDC Offset: 0x2562BDC VA: 0x2562BDC
	public void BroadcastMessage(string methodName, object parameter, SendMessageOptions options) { }

	[FreeFunctionAttribute] // RVA: 0xBE07A4 Offset: 0xBE07A4 VA: 0xBE07A4
	// RVA: 0x25624F0 Offset: 0x25624F0 VA: 0x25624F0
	private static void Internal_CreateGameObject(GameObject self, string name) { }

	[FreeFunctionAttribute] // RVA: 0xBE07E8 Offset: 0xBE07E8 VA: 0xBE07E8
	// RVA: 0x25632AC Offset: 0x25632AC VA: 0x25632AC
	public static GameObject Find(string name) { }

	[FreeFunctionAttribute] // RVA: 0xBE082C Offset: 0xBE082C VA: 0xBE082C
	// RVA: 0x2563318 Offset: 0x2563318 VA: 0x2563318
	public Scene get_scene() { }

	// RVA: 0x25633B4 Offset: 0x25633B4 VA: 0x25633B4
	public GameObject get_gameObject() { }

	// RVA: 0x2563340 Offset: 0x2563340 VA: 0x2563340
	private void get_scene_Injected(out Scene ret) { }
}

// Namespace: UnityEngine
[StaticAccessorAttribute] // RVA: 0xBD8374 Offset: 0xBD8374 VA: 0xBD8374
[NativeHeaderAttribute] // RVA: 0xBD8374 Offset: 0xBD8374 VA: 0xBD8374
public sealed class Gizmos // TypeDefIndex: 2142
{
	// Properties
	public static Color color { set; }

	// Methods

	[NativeThrowsAttribute] // RVA: 0xBE0874 Offset: 0xBE0874 VA: 0xBE0874
	// RVA: 0x25633B8 Offset: 0x25633B8 VA: 0x25633B8
	public static void DrawLine(Vector3 from, Vector3 to) { }

	[NativeThrowsAttribute] // RVA: 0xBE0884 Offset: 0xBE0884 VA: 0xBE0884
	// RVA: 0x2563460 Offset: 0x2563460 VA: 0x2563460
	public static void DrawWireSphere(Vector3 center, float radius) { }

	[NativeThrowsAttribute] // RVA: 0xBE0894 Offset: 0xBE0894 VA: 0xBE0894
	// RVA: 0x2563500 Offset: 0x2563500 VA: 0x2563500
	public static void DrawSphere(Vector3 center, float radius) { }

	[NativeThrowsAttribute] // RVA: 0xBE08A4 Offset: 0xBE08A4 VA: 0xBE08A4
	// RVA: 0x25635A0 Offset: 0x25635A0 VA: 0x25635A0
	public static void DrawWireCube(Vector3 center, Vector3 size) { }

	[NativeThrowsAttribute] // RVA: 0xBE08B4 Offset: 0xBE08B4 VA: 0xBE08B4
	// RVA: 0x2563648 Offset: 0x2563648 VA: 0x2563648
	public static void DrawCube(Vector3 center, Vector3 size) { }

	[NativeThrowsAttribute] // RVA: 0xBE08C4 Offset: 0xBE08C4 VA: 0xBE08C4
	// RVA: 0x25636F0 Offset: 0x25636F0 VA: 0x25636F0
	public static void DrawIcon(Vector3 center, string name, bool allowScaling) { }

	// RVA: 0x25637A8 Offset: 0x25637A8 VA: 0x25637A8
	public static void set_color(Color value) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBE08D4 Offset: 0xBE08D4 VA: 0xBE08D4
	// RVA: 0x256383C Offset: 0x256383C VA: 0x256383C
	public static void DrawIcon(Vector3 center, string name) { }

	// RVA: 0x25633EC Offset: 0x25633EC VA: 0x25633EC
	private static void DrawLine_Injected(ref Vector3 from, ref Vector3 to) { }

	// RVA: 0x256348C Offset: 0x256348C VA: 0x256348C
	private static void DrawWireSphere_Injected(ref Vector3 center, float radius) { }

	// RVA: 0x256352C Offset: 0x256352C VA: 0x256352C
	private static void DrawSphere_Injected(ref Vector3 center, float radius) { }

	// RVA: 0x25635D4 Offset: 0x25635D4 VA: 0x25635D4
	private static void DrawWireCube_Injected(ref Vector3 center, ref Vector3 size) { }

	// RVA: 0x256367C Offset: 0x256367C VA: 0x256367C
	private static void DrawCube_Injected(ref Vector3 center, ref Vector3 size) { }

	// RVA: 0x2563724 Offset: 0x2563724 VA: 0x2563724
	private static void DrawIcon_Injected(ref Vector3 center, string name, bool allowScaling) { }

	// RVA: 0x25637D0 Offset: 0x25637D0 VA: 0x25637D0
	private static void set_color_Injected(ref Color value) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBD83D8 Offset: 0xBD83D8 VA: 0xBD83D8
[RequiredByNativeCodeAttribute] // RVA: 0xBD83D8 Offset: 0xBD83D8 VA: 0xBD83D8
public class Gradient : IEquatable<Gradient> // TypeDefIndex: 2143
{
	// Fields
	internal IntPtr m_Ptr; // 0x10

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xBE08E4 Offset: 0xBE08E4 VA: 0xBE08E4
	// RVA: 0x2563A0C Offset: 0x2563A0C VA: 0x2563A0C
	public void .ctor() { }

	[FreeFunctionAttribute] // RVA: 0xBE08F4 Offset: 0xBE08F4 VA: 0xBE08F4
	// RVA: 0x2563A38 Offset: 0x2563A38 VA: 0x2563A38
	private static IntPtr Init() { }

	[FreeFunctionAttribute] // RVA: 0xBE0948 Offset: 0xBE0948 VA: 0xBE0948
	// RVA: 0x2563A90 Offset: 0x2563A90 VA: 0x2563A90
	private void Cleanup() { }

	[FreeFunctionAttribute] // RVA: 0xBE09AC Offset: 0xBE09AC VA: 0xBE09AC
	// RVA: 0x2563AFC Offset: 0x2563AFC VA: 0x2563AFC
	private bool Internal_Equals(IntPtr other) { }

	// RVA: 0x2563B70 Offset: 0x2563B70 VA: 0x2563B70 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x2563BE4 Offset: 0x2563BE4 VA: 0x2563BE4 Slot: 0
	public override bool Equals(object o) { }

	// RVA: 0x2563CFC Offset: 0x2563CFC VA: 0x2563CFC Slot: 4
	public bool Equals(Gradient other) { }

	// RVA: 0x2563DA8 Offset: 0x2563DA8 VA: 0x2563DA8 Slot: 2
	public override int GetHashCode() { }
}

// Namespace: UnityEngine
internal enum EnabledOrientation // TypeDefIndex: 2144
{
	// Fields
	public int value__; // 0x0
	public const EnabledOrientation kAutorotateToPortrait = 1;
	public const EnabledOrientation kAutorotateToPortraitUpsideDown = 2;
	public const EnabledOrientation kAutorotateToLandscapeLeft = 4;
	public const EnabledOrientation kAutorotateToLandscapeRight = 8;
}

// Namespace: UnityEngine
public enum FullScreenMode // TypeDefIndex: 2145
{
	// Fields
	public int value__; // 0x0
	public const FullScreenMode ExclusiveFullScreen = 0;
	public const FullScreenMode FullScreenWindow = 1;
	public const FullScreenMode MaximizedWindow = 2;
	public const FullScreenMode Windowed = 3;
}

// Namespace: UnityEngine
[StaticAccessorAttribute] // RVA: 0xBD8424 Offset: 0xBD8424 VA: 0xBD8424
[NativeHeaderAttribute] // RVA: 0xBD8424 Offset: 0xBD8424 VA: 0xBD8424
[NativeHeaderAttribute] // RVA: 0xBD8424 Offset: 0xBD8424 VA: 0xBD8424
public sealed class Screen // TypeDefIndex: 2146
{
	// Properties
	public static int width { get; }
	public static int height { get; }
	public static float dpi { get; }
	public static ScreenOrientation orientation { get; set; }
	public static bool autorotateToPortrait { set; }
	public static bool autorotateToPortraitUpsideDown { set; }
	public static bool autorotateToLandscapeLeft { set; }
	public static bool autorotateToLandscapeRight { set; }
	public static Resolution currentResolution { get; }
	public static bool fullScreen { get; set; }
	public static Rect safeArea { get; }

	// Methods

	[NativeMethodAttribute] // RVA: 0xBE0A04 Offset: 0xBE0A04 VA: 0xBE0A04
	// RVA: 0x21675E8 Offset: 0x21675E8 VA: 0x21675E8
	public static int get_width() { }

	[NativeMethodAttribute] // RVA: 0xBE0A58 Offset: 0xBE0A58 VA: 0xBE0A58
	// RVA: 0x2167640 Offset: 0x2167640 VA: 0x2167640
	public static int get_height() { }

	[NativeNameAttribute] // RVA: 0xBE0AAC Offset: 0xBE0AAC VA: 0xBE0AAC
	// RVA: 0x2167698 Offset: 0x2167698 VA: 0x2167698
	public static float get_dpi() { }

	// RVA: 0x21676F0 Offset: 0x21676F0 VA: 0x21676F0
	private static void RequestOrientation(ScreenOrientation orient) { }

	// RVA: 0x216775C Offset: 0x216775C VA: 0x216775C
	private static ScreenOrientation GetScreenOrientation() { }

	// RVA: 0x21677B4 Offset: 0x21677B4 VA: 0x21677B4
	public static ScreenOrientation get_orientation() { }

	// RVA: 0x21677B8 Offset: 0x21677B8 VA: 0x21677B8
	public static void set_orientation(ScreenOrientation value) { }

	[NativeNameAttribute] // RVA: 0xBE0AE4 Offset: 0xBE0AE4 VA: 0xBE0AE4
	// RVA: 0x2167838 Offset: 0x2167838 VA: 0x2167838
	private static void SetOrientationEnabled(EnabledOrientation orient, bool enabled) { }

	// RVA: 0x21678AC Offset: 0x21678AC VA: 0x21678AC
	public static void set_autorotateToPortrait(bool value) { }

	// RVA: 0x21678B8 Offset: 0x21678B8 VA: 0x21678B8
	public static void set_autorotateToPortraitUpsideDown(bool value) { }

	// RVA: 0x21678C4 Offset: 0x21678C4 VA: 0x21678C4
	public static void set_autorotateToLandscapeLeft(bool value) { }

	// RVA: 0x21678D0 Offset: 0x21678D0 VA: 0x21678D0
	public static void set_autorotateToLandscapeRight(bool value) { }

	// RVA: 0x21678DC Offset: 0x21678DC VA: 0x21678DC
	public static Resolution get_currentResolution() { }

	[NativeNameAttribute] // RVA: 0xBE0B1C Offset: 0xBE0B1C VA: 0xBE0B1C
	// RVA: 0x2167978 Offset: 0x2167978 VA: 0x2167978
	public static bool get_fullScreen() { }

	[NativeNameAttribute] // RVA: 0xBE0B54 Offset: 0xBE0B54 VA: 0xBE0B54
	// RVA: 0x21679D0 Offset: 0x21679D0 VA: 0x21679D0
	public static void set_fullScreen(bool value) { }

	// RVA: 0x2167A3C Offset: 0x2167A3C VA: 0x2167A3C
	public static Rect get_safeArea() { }

	[NativeNameAttribute] // RVA: 0xBE0B8C Offset: 0xBE0B8C VA: 0xBE0B8C
	// RVA: 0x2167AD4 Offset: 0x2167AD4 VA: 0x2167AD4
	public static void SetResolution(int width, int height, FullScreenMode fullscreenMode, int preferredRefreshRate) { }

	// RVA: 0x2167B60 Offset: 0x2167B60 VA: 0x2167B60
	public static void SetResolution(int width, int height, bool fullscreen, int preferredRefreshRate) { }

	// RVA: 0x2167B70 Offset: 0x2167B70 VA: 0x2167B70
	public static void SetResolution(int width, int height, bool fullscreen) { }

	// RVA: 0x216790C Offset: 0x216790C VA: 0x216790C
	private static void get_currentResolution_Injected(out Resolution ret) { }

	// RVA: 0x2167A68 Offset: 0x2167A68 VA: 0x2167A68
	private static void get_safeArea_Injected(out Rect ret) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBD84AC Offset: 0xBD84AC VA: 0xBD84AC
public struct RenderBuffer // TypeDefIndex: 2147
{
	// Fields
	internal int m_RenderTextureInstanceID; // 0x0
	internal IntPtr m_BufferPtr; // 0x8
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBD84E4 Offset: 0xBD84E4 VA: 0xBD84E4
[NativeHeaderAttribute] // RVA: 0xBD84E4 Offset: 0xBD84E4 VA: 0xBD84E4
[NativeHeaderAttribute] // RVA: 0xBD84E4 Offset: 0xBD84E4 VA: 0xBD84E4
[NativeHeaderAttribute] // RVA: 0xBD84E4 Offset: 0xBD84E4 VA: 0xBD84E4
[NativeHeaderAttribute] // RVA: 0xBD84E4 Offset: 0xBD84E4 VA: 0xBD84E4
public class Graphics // TypeDefIndex: 2148
{
	// Fields
	internal static readonly int kMaxDrawMeshInstanceCount; // 0x0

	// Methods

	[FreeFunctionAttribute] // RVA: 0xBE0BC4 Offset: 0xBE0BC4 VA: 0xBE0BC4
	// RVA: 0x2563DB4 Offset: 0x2563DB4 VA: 0x2563DB4
	private static int Internal_GetMaxDrawMeshInstanceCount() { }

	[FreeFunctionAttribute] // RVA: 0xBE0BFC Offset: 0xBE0BFC VA: 0xBE0BFC
	// RVA: 0x2563E0C Offset: 0x2563E0C VA: 0x2563E0C
	private static void Internal_SetNullRT() { }

	[NativeMethodAttribute] // RVA: 0xBE0C34 Offset: 0xBE0C34 VA: 0xBE0C34
	// RVA: 0x2563E64 Offset: 0x2563E64 VA: 0x2563E64
	private static void Internal_SetRTSimple(RenderBuffer color, RenderBuffer depth, int mip, CubemapFace face, int depthSlice) { }

	[VisibleToOtherModulesAttribute] // RVA: 0xBE0C98 Offset: 0xBE0C98 VA: 0xBE0C98
	[FreeFunctionAttribute] // RVA: 0xBE0C98 Offset: 0xBE0C98 VA: 0xBE0C98
	// RVA: 0x2563F98 Offset: 0x2563F98 VA: 0x2563F98
	internal static void Internal_DrawTexture(ref Internal_DrawTextureArguments args) { }

	[FreeFunctionAttribute] // RVA: 0xBE0D34 Offset: 0xBE0D34 VA: 0xBE0D34
	// RVA: 0x2564004 Offset: 0x2564004 VA: 0x2564004
	private static void Internal_BlitMaterial(Texture source, RenderTexture dest, Material mat, int pass, bool setRT) { }

	[FreeFunctionAttribute] // RVA: 0xBE0D6C Offset: 0xBE0D6C VA: 0xBE0D6C
	// RVA: 0x25640A0 Offset: 0x25640A0 VA: 0x25640A0
	private static void Internal_BlitMultiTap(Texture source, RenderTexture dest, Material mat, Vector2[] offsets) { }

	[FreeFunctionAttribute] // RVA: 0xBE0DA4 Offset: 0xBE0DA4 VA: 0xBE0DA4
	// RVA: 0x256412C Offset: 0x256412C VA: 0x256412C
	private static void Blit2(Texture source, RenderTexture dest) { }

	// RVA: 0x25641A0 Offset: 0x25641A0 VA: 0x25641A0
	internal static void SetRenderTargetImpl(RenderBuffer colorBuffer, RenderBuffer depthBuffer, int mipLevel, CubemapFace face, int depthSlice) { }

	// RVA: 0x256424C Offset: 0x256424C VA: 0x256424C
	internal static void SetRenderTargetImpl(RenderTexture rt, int mipLevel, CubemapFace face, int depthSlice) { }

	// RVA: 0x2564418 Offset: 0x2564418 VA: 0x2564418
	public static void SetRenderTarget(RenderTexture rt, int mipLevel, CubemapFace face, int depthSlice) { }

	// RVA: 0x25644A4 Offset: 0x25644A4 VA: 0x25644A4
	public static void Blit(Texture source, RenderTexture dest) { }

	// RVA: 0x2564518 Offset: 0x2564518 VA: 0x2564518
	public static void Blit(Texture source, RenderTexture dest, Material mat, int pass) { }

	// RVA: 0x25645A8 Offset: 0x25645A8 VA: 0x25645A8
	public static void Blit(Texture source, RenderTexture dest, Material mat) { }

	// RVA: 0x2564628 Offset: 0x2564628 VA: 0x2564628
	public static void BlitMultiTap(Texture source, RenderTexture dest, Material mat, Vector2[] offsets) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBE0DDC Offset: 0xBE0DDC VA: 0xBE0DDC
	// RVA: 0x2564718 Offset: 0x2564718 VA: 0x2564718
	public static void SetRenderTarget(RenderTexture rt) { }

	// RVA: 0x2564788 Offset: 0x2564788 VA: 0x2564788
	private static void .cctor() { }

	// RVA: 0x2563EFC Offset: 0x2563EFC VA: 0x2563EFC
	private static void Internal_SetRTSimple_Injected(ref RenderBuffer color, ref RenderBuffer depth, int mip, CubemapFace face, int depthSlice) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBD85B0 Offset: 0xBD85B0 VA: 0xBD85B0
[NativeHeaderAttribute] // RVA: 0xBD85B0 Offset: 0xBD85B0 VA: 0xBD85B0
[StaticAccessorAttribute] // RVA: 0xBD85B0 Offset: 0xBD85B0 VA: 0xBD85B0
[NativeHeaderAttribute] // RVA: 0xBD85B0 Offset: 0xBD85B0 VA: 0xBD85B0
[NativeHeaderAttribute] // RVA: 0xBD85B0 Offset: 0xBD85B0 VA: 0xBD85B0
public sealed class GL // TypeDefIndex: 2149
{
	// Methods

	[NativeNameAttribute] // RVA: 0xBE0DEC Offset: 0xBE0DEC VA: 0xBE0DEC
	// RVA: 0x24CD008 Offset: 0x24CD008 VA: 0x24CD008
	public static void Vertex3(float x, float y, float z) { }

	// RVA: 0x24CD090 Offset: 0x24CD090 VA: 0x24CD090
	public static void Vertex(Vector3 v) { }

	[NativeNameAttribute] // RVA: 0xBE0E24 Offset: 0xBE0E24 VA: 0xBE0E24
	// RVA: 0x24CD094 Offset: 0x24CD094 VA: 0x24CD094
	public static void TexCoord3(float x, float y, float z) { }

	// RVA: 0x24CD11C Offset: 0x24CD11C VA: 0x24CD11C
	public static void TexCoord2(float x, float y) { }

	[NativeNameAttribute] // RVA: 0xBE0E5C Offset: 0xBE0E5C VA: 0xBE0E5C
	// RVA: 0x24CD124 Offset: 0x24CD124 VA: 0x24CD124
	private static void ImmediateColor(float r, float g, float b, float a) { }

	// RVA: 0x24CD1AC Offset: 0x24CD1AC VA: 0x24CD1AC
	public static void Color(Color c) { }

	[NativeNameAttribute] // RVA: 0xBE0E94 Offset: 0xBE0E94 VA: 0xBE0E94
	[ObsoleteAttribute] // RVA: 0xBE0E94 Offset: 0xBE0E94 VA: 0xBE0E94
	// RVA: 0x24CD1B0 Offset: 0x24CD1B0 VA: 0x24CD1B0
	public static void SetRevertBackfacing(bool revertBackFaces) { }

	[FreeFunctionAttribute] // RVA: 0xBE0EF8 Offset: 0xBE0EF8 VA: 0xBE0EF8
	// RVA: 0x24CD21C Offset: 0x24CD21C VA: 0x24CD21C
	public static void PushMatrix() { }

	[FreeFunctionAttribute] // RVA: 0xBE0F30 Offset: 0xBE0F30 VA: 0xBE0F30
	// RVA: 0x24CD274 Offset: 0x24CD274 VA: 0x24CD274
	public static void PopMatrix() { }

	[FreeFunctionAttribute] // RVA: 0xBE0F68 Offset: 0xBE0F68 VA: 0xBE0F68
	// RVA: 0x24CD2CC Offset: 0x24CD2CC VA: 0x24CD2CC
	public static void LoadOrtho() { }

	[FreeFunctionAttribute] // RVA: 0xBE0FA0 Offset: 0xBE0FA0 VA: 0xBE0FA0
	// RVA: 0x24CD324 Offset: 0x24CD324 VA: 0x24CD324
	public static Matrix4x4 GetGPUProjectionMatrix(Matrix4x4 proj, bool renderIntoTexture) { }

	[FreeFunctionAttribute] // RVA: 0xBE0FD8 Offset: 0xBE0FD8 VA: 0xBE0FD8
	// RVA: 0x24CD3F4 Offset: 0x24CD3F4 VA: 0x24CD3F4
	private static void GLIssuePluginEvent(IntPtr callback, int eventID) { }

	// RVA: 0x24CD468 Offset: 0x24CD468 VA: 0x24CD468
	public static void IssuePluginEvent(IntPtr callback, int eventID) { }

	[FreeFunctionAttribute] // RVA: 0xBE0FE8 Offset: 0xBE0FE8 VA: 0xBE0FE8
	// RVA: 0x24CD520 Offset: 0x24CD520 VA: 0x24CD520
	public static void Begin(int mode) { }

	[FreeFunctionAttribute] // RVA: 0xBE1030 Offset: 0xBE1030 VA: 0xBE1030
	// RVA: 0x24CD58C Offset: 0x24CD58C VA: 0x24CD58C
	public static void End() { }

	[FreeFunctionAttribute] // RVA: 0xBE1068 Offset: 0xBE1068 VA: 0xBE1068
	// RVA: 0x24CD5E4 Offset: 0x24CD5E4 VA: 0x24CD5E4
	private static void GLClear(bool clearDepth, bool clearColor, Color backgroundColor, float depth) { }

	// RVA: 0x24CD6A4 Offset: 0x24CD6A4 VA: 0x24CD6A4
	public static void Clear(bool clearDepth, bool clearColor, Color backgroundColor) { }

	// RVA: 0x24CD370 Offset: 0x24CD370 VA: 0x24CD370
	private static void GetGPUProjectionMatrix_Injected(ref Matrix4x4 proj, bool renderIntoTexture, out Matrix4x4 ret) { }

	// RVA: 0x24CD618 Offset: 0x24CD618 VA: 0x24CD618
	private static void GLClear_Injected(bool clearDepth, bool clearColor, ref Color backgroundColor, float depth) { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xBD8680 Offset: 0xBD8680 VA: 0xBD8680
[NativeHeaderAttribute] // RVA: 0xBD8680 Offset: 0xBD8680 VA: 0xBD8680
public sealed class LightmapData // TypeDefIndex: 2150
{
	// Fields
	internal Texture2D m_Light; // 0x10
	internal Texture2D m_Dir; // 0x18
	internal Texture2D m_ShadowMask; // 0x20

	// Properties
	public Texture2D lightmapColor { get; set; }
	public Texture2D lightmapDir { set; }
	public Texture2D shadowMask { set; }

	// Methods

	// RVA: 0x2565EF4 Offset: 0x2565EF4 VA: 0x2565EF4
	public void .ctor() { }

	// RVA: 0x2565EFC Offset: 0x2565EFC VA: 0x2565EFC
	public Texture2D get_lightmapColor() { }

	// RVA: 0x2565F04 Offset: 0x2565F04 VA: 0x2565F04
	public void set_lightmapColor(Texture2D value) { }

	// RVA: 0x2565F0C Offset: 0x2565F0C VA: 0x2565F0C
	public void set_lightmapDir(Texture2D value) { }

	// RVA: 0x2565F14 Offset: 0x2565F14 VA: 0x2565F14
	public void set_shadowMask(Texture2D value) { }
}

// Namespace: UnityEngine
[StaticAccessorAttribute] // RVA: 0xBD86CC Offset: 0xBD86CC VA: 0xBD86CC
[NativeHeaderAttribute] // RVA: 0xBD86CC Offset: 0xBD86CC VA: 0xBD86CC
public sealed class LightmapSettings : Object // TypeDefIndex: 2151
{
	// Properties
	public static LightmapData[] lightmaps { get; set; }
	public static LightmapsMode lightmapsMode { get; set; }

	// Methods

	[FreeFunctionAttribute] // RVA: 0xBE1078 Offset: 0xBE1078 VA: 0xBE1078
	// RVA: 0x2565F1C Offset: 0x2565F1C VA: 0x2565F1C
	public static LightmapData[] get_lightmaps() { }

	[FreeFunctionAttribute] // RVA: 0xBE1088 Offset: 0xBE1088 VA: 0xBE1088
	// RVA: 0x2565F74 Offset: 0x2565F74 VA: 0x2565F74
	public static void set_lightmaps(LightmapData[] value) { }

	// RVA: 0x2565FE0 Offset: 0x2565FE0 VA: 0x2565FE0
	public static LightmapsMode get_lightmapsMode() { }

	[FreeFunctionAttribute] // RVA: 0xBE1098 Offset: 0xBE1098 VA: 0xBE1098
	// RVA: 0x2566038 Offset: 0x2566038 VA: 0x2566038
	public static void set_lightmapsMode(LightmapsMode value) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBD872C Offset: 0xBD872C VA: 0xBD872C
[NativeAsStructAttribute] // RVA: 0xBD872C Offset: 0xBD872C VA: 0xBD872C
public sealed class LightProbes : Object // TypeDefIndex: 2152
{}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xBD8778 Offset: 0xBD8778 VA: 0xBD8778
public struct Resolution // TypeDefIndex: 2153
{
	// Fields
	private int m_Width; // 0x0
	private int m_Height; // 0x4
	private int m_RefreshRate; // 0x8

	// Properties
	public int width { get; }
	public int height { get; }

	// Methods

	// RVA: 0xD66774 Offset: 0xD66774 VA: 0xD66774
	public int get_width() { }

	// RVA: 0xD6677C Offset: 0xD6677C VA: 0xD6677C
	public int get_height() { }

	// RVA: 0xD66784 Offset: 0xD66784 VA: 0xD66784 Slot: 3
	public override string ToString() { }
}

// Namespace: UnityEngine
[VisibleToOtherModulesAttribute] // RVA: 0xBD8788 Offset: 0xBD8788 VA: 0xBD8788
internal struct Internal_DrawTextureArguments // TypeDefIndex: 2154
{
	// Fields
	public Rect screenRect; // 0x0
	public Rect sourceRect; // 0x10
	public int leftBorder; // 0x20
	public int rightBorder; // 0x24
	public int topBorder; // 0x28
	public int bottomBorder; // 0x2C
	public Color color; // 0x30
	public Vector4 borderWidths; // 0x40
	public Vector4 cornerRadiuses; // 0x50
	public int pass; // 0x60
	public Texture texture; // 0x68
	public Material mat; // 0x70
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBD8800 Offset: 0xBD8800 VA: 0xBD8800
[NativeHeaderAttribute] // RVA: 0xBD8800 Offset: 0xBD8800 VA: 0xBD8800
[StaticAccessorAttribute] // RVA: 0xBD8800 Offset: 0xBD8800 VA: 0xBD8800
public sealed class QualitySettings : Object // TypeDefIndex: 2155
{
	// Properties
	[NativePropertyAttribute] // RVA: 0xBE8214 Offset: 0xBE8214 VA: 0xBE8214
	public static ShadowResolution shadowResolution { get; }
	public static int vSyncCount { set; }
	public static ColorSpace activeColorSpace { get; }

	// Methods

	// RVA: 0x2575F6C Offset: 0x2575F6C VA: 0x2575F6C
	public static ShadowResolution get_shadowResolution() { }

	// RVA: 0x2575FC4 Offset: 0x2575FC4 VA: 0x2575FC4
	public static void set_vSyncCount(int value) { }

	[NativeNameAttribute] // RVA: 0xBE10D0 Offset: 0xBE10D0 VA: 0xBE10D0
	[StaticAccessorAttribute] // RVA: 0xBE10D0 Offset: 0xBE10D0 VA: 0xBE10D0
	// RVA: 0x2576030 Offset: 0x2576030 VA: 0x2576030
	public static ColorSpace get_activeColorSpace() { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xBD8888 Offset: 0xBD8888 VA: 0xBD8888
public sealed class ImageEffectOpaque : Attribute // TypeDefIndex: 2156
{
	// Methods

	// RVA: 0x2564948 Offset: 0x2564948 VA: 0x2564948
	public void .ctor() { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBD8898 Offset: 0xBD8898 VA: 0xBD8898
[NativeHeaderAttribute] // RVA: 0xBD8898 Offset: 0xBD8898 VA: 0xBD8898
public sealed class TrailRenderer : Renderer // TypeDefIndex: 2157
{
	// Properties
	[ObsoleteAttribute] // RVA: 0xBE824C Offset: 0xBE824C VA: 0xBE824C
	public int numPositions { get; }
	public float time { get; set; }
	public float startWidth { get; set; }
	public float endWidth { get; set; }
	public float widthMultiplier { get; set; }
	public bool autodestruct { get; set; }
	public bool emitting { get; set; }
	public int numCornerVertices { get; set; }
	public int numCapVertices { get; set; }
	public float minVertexDistance { get; set; }
	public Color startColor { get; set; }
	public Color endColor { get; set; }
	[NativePropertyAttribute] // RVA: 0xBE8288 Offset: 0xBE8288 VA: 0xBE8288
	public int positionCount { get; }
	public float shadowBias { get; set; }
	public bool generateLightingData { get; set; }
	public LineTextureMode textureMode { get; set; }
	public LineAlignment alignment { get; set; }
	public AnimationCurve widthCurve { get; set; }
	public Gradient colorGradient { get; set; }

	// Methods

	// RVA: 0x2170C6C Offset: 0x2170C6C VA: 0x2170C6C
	public void .ctor() { }

	// RVA: 0x2170C74 Offset: 0x2170C74 VA: 0x2170C74
	public int get_numPositions() { }

	// RVA: 0x2170CE4 Offset: 0x2170CE4 VA: 0x2170CE4
	public float get_time() { }

	// RVA: 0x2170D50 Offset: 0x2170D50 VA: 0x2170D50
	public void set_time(float value) { }

	// RVA: 0x2170DC4 Offset: 0x2170DC4 VA: 0x2170DC4
	public float get_startWidth() { }

	// RVA: 0x2170E30 Offset: 0x2170E30 VA: 0x2170E30
	public void set_startWidth(float value) { }

	// RVA: 0x2170EA4 Offset: 0x2170EA4 VA: 0x2170EA4
	public float get_endWidth() { }

	// RVA: 0x2170F10 Offset: 0x2170F10 VA: 0x2170F10
	public void set_endWidth(float value) { }

	// RVA: 0x2170F84 Offset: 0x2170F84 VA: 0x2170F84
	public float get_widthMultiplier() { }

	// RVA: 0x2170FF0 Offset: 0x2170FF0 VA: 0x2170FF0
	public void set_widthMultiplier(float value) { }

	// RVA: 0x2171064 Offset: 0x2171064 VA: 0x2171064
	public bool get_autodestruct() { }

	// RVA: 0x21710D0 Offset: 0x21710D0 VA: 0x21710D0
	public void set_autodestruct(bool value) { }

	// RVA: 0x2171144 Offset: 0x2171144 VA: 0x2171144
	public bool get_emitting() { }

	// RVA: 0x21711B0 Offset: 0x21711B0 VA: 0x21711B0
	public void set_emitting(bool value) { }

	// RVA: 0x2171224 Offset: 0x2171224 VA: 0x2171224
	public int get_numCornerVertices() { }

	// RVA: 0x2171290 Offset: 0x2171290 VA: 0x2171290
	public void set_numCornerVertices(int value) { }

	// RVA: 0x2171304 Offset: 0x2171304 VA: 0x2171304
	public int get_numCapVertices() { }

	// RVA: 0x2171370 Offset: 0x2171370 VA: 0x2171370
	public void set_numCapVertices(int value) { }

	// RVA: 0x21713E4 Offset: 0x21713E4 VA: 0x21713E4
	public float get_minVertexDistance() { }

	// RVA: 0x2171450 Offset: 0x2171450 VA: 0x2171450
	public void set_minVertexDistance(float value) { }

	// RVA: 0x21714C4 Offset: 0x21714C4 VA: 0x21714C4
	public Color get_startColor() { }

	// RVA: 0x2171564 Offset: 0x2171564 VA: 0x2171564
	public void set_startColor(Color value) { }

	// RVA: 0x2171600 Offset: 0x2171600 VA: 0x2171600
	public Color get_endColor() { }

	// RVA: 0x21716A0 Offset: 0x21716A0 VA: 0x21716A0
	public void set_endColor(Color value) { }

	// RVA: 0x2170C78 Offset: 0x2170C78 VA: 0x2170C78
	public int get_positionCount() { }

	// RVA: 0x217173C Offset: 0x217173C VA: 0x217173C
	public void SetPosition(int index, Vector3 position) { }

	// RVA: 0x21717E8 Offset: 0x21717E8 VA: 0x21717E8
	public Vector3 GetPosition(int index) { }

	// RVA: 0x217189C Offset: 0x217189C VA: 0x217189C
	public float get_shadowBias() { }

	// RVA: 0x2171908 Offset: 0x2171908 VA: 0x2171908
	public void set_shadowBias(float value) { }

	// RVA: 0x217197C Offset: 0x217197C VA: 0x217197C
	public bool get_generateLightingData() { }

	// RVA: 0x21719E8 Offset: 0x21719E8 VA: 0x21719E8
	public void set_generateLightingData(bool value) { }

	// RVA: 0x2171A5C Offset: 0x2171A5C VA: 0x2171A5C
	public LineTextureMode get_textureMode() { }

	// RVA: 0x2171AC8 Offset: 0x2171AC8 VA: 0x2171AC8
	public void set_textureMode(LineTextureMode value) { }

	// RVA: 0x2171B3C Offset: 0x2171B3C VA: 0x2171B3C
	public LineAlignment get_alignment() { }

	// RVA: 0x2171BA8 Offset: 0x2171BA8 VA: 0x2171BA8
	public void set_alignment(LineAlignment value) { }

	// RVA: 0x2171C1C Offset: 0x2171C1C VA: 0x2171C1C
	public void Clear() { }

	// RVA: 0x2171C88 Offset: 0x2171C88 VA: 0x2171C88
	public void BakeMesh(Mesh mesh, bool useTransform = False) { }

	// RVA: 0x2171CCC Offset: 0x2171CCC VA: 0x2171CCC
	public void BakeMesh(Mesh mesh, Camera camera, bool useTransform = False) { }

	// RVA: 0x2171D58 Offset: 0x2171D58 VA: 0x2171D58
	public AnimationCurve get_widthCurve() { }

	// RVA: 0x2171DC8 Offset: 0x2171DC8 VA: 0x2171DC8
	public void set_widthCurve(AnimationCurve value) { }

	// RVA: 0x2171E40 Offset: 0x2171E40 VA: 0x2171E40
	public Gradient get_colorGradient() { }

	// RVA: 0x2171EB0 Offset: 0x2171EB0 VA: 0x2171EB0
	public void set_colorGradient(Gradient value) { }

	// RVA: 0x2171D5C Offset: 0x2171D5C VA: 0x2171D5C
	private AnimationCurve GetWidthCurveCopy() { }

	// RVA: 0x2171DCC Offset: 0x2171DCC VA: 0x2171DCC
	private void SetWidthCurve(AnimationCurve curve) { }

	// RVA: 0x2171E44 Offset: 0x2171E44 VA: 0x2171E44
	private Gradient GetColorGradientCopy() { }

	// RVA: 0x2171EB4 Offset: 0x2171EB4 VA: 0x2171EB4
	private void SetColorGradient(Gradient curve) { }

	[FreeFunctionAttribute] // RVA: 0xBE1134 Offset: 0xBE1134 VA: 0xBE1134
	// RVA: 0x2171F28 Offset: 0x2171F28 VA: 0x2171F28
	public int GetPositions([Out] Vector3[] positions) { }

	[FreeFunctionAttribute] // RVA: 0xBE1188 Offset: 0xBE1188 VA: 0xBE1188
	// RVA: 0x2171F9C Offset: 0x2171F9C VA: 0x2171F9C
	public void SetPositions(Vector3[] positions) { }

	[FreeFunctionAttribute] // RVA: 0xBE11DC Offset: 0xBE11DC VA: 0xBE11DC
	// RVA: 0x2172010 Offset: 0x2172010 VA: 0x2172010
	public void AddPosition(Vector3 position) { }

	[FreeFunctionAttribute] // RVA: 0xBE1230 Offset: 0xBE1230 VA: 0xBE1230
	// RVA: 0x21720AC Offset: 0x21720AC VA: 0x21720AC
	public void AddPositions(Vector3[] positions) { }

	// RVA: 0x21714F0 Offset: 0x21714F0 VA: 0x21714F0
	private void get_startColor_Injected(out Color ret) { }

	// RVA: 0x217158C Offset: 0x217158C VA: 0x217158C
	private void set_startColor_Injected(ref Color value) { }

	// RVA: 0x217162C Offset: 0x217162C VA: 0x217162C
	private void get_endColor_Injected(out Color ret) { }

	// RVA: 0x21716C8 Offset: 0x21716C8 VA: 0x21716C8
	private void set_endColor_Injected(ref Color value) { }

	// RVA: 0x2171764 Offset: 0x2171764 VA: 0x2171764
	private void SetPosition_Injected(int index, ref Vector3 position) { }

	// RVA: 0x2171818 Offset: 0x2171818 VA: 0x2171818
	private void GetPosition_Injected(int index, out Vector3 ret) { }

	// RVA: 0x2172038 Offset: 0x2172038 VA: 0x2172038
	private void AddPosition_Injected(ref Vector3 position) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBD88F8 Offset: 0xBD88F8 VA: 0xBD88F8
[NativeHeaderAttribute] // RVA: 0xBD88F8 Offset: 0xBD88F8 VA: 0xBD88F8
public sealed class LineRenderer : Renderer // TypeDefIndex: 2158
{
	// Properties
	public float startWidth { set; }
	public float endWidth { set; }
	public bool useWorldSpace { set; }
	[NativePropertyAttribute] // RVA: 0xBE82C0 Offset: 0xBE82C0 VA: 0xBE82C0
	public int positionCount { set; }

	// Methods

	[ObsoleteAttribute] // RVA: 0xBE1284 Offset: 0xBE1284 VA: 0xBE1284
	// RVA: 0x25660A4 Offset: 0x25660A4 VA: 0x25660A4
	public void SetWidth(float start, float end) { }

	[ObsoleteAttribute] // RVA: 0xBE12C0 Offset: 0xBE12C0 VA: 0xBE12C0
	// RVA: 0x25661C0 Offset: 0x25661C0 VA: 0x25661C0
	public void SetVertexCount(int count) { }

	// RVA: 0x25660D8 Offset: 0x25660D8 VA: 0x25660D8
	public void set_startWidth(float value) { }

	// RVA: 0x256614C Offset: 0x256614C VA: 0x256614C
	public void set_endWidth(float value) { }

	// RVA: 0x2566238 Offset: 0x2566238 VA: 0x2566238
	public void set_useWorldSpace(bool value) { }

	// RVA: 0x25661C4 Offset: 0x25661C4 VA: 0x25661C4
	public void set_positionCount(int value) { }

	// RVA: 0x25662AC Offset: 0x25662AC VA: 0x25662AC
	public void SetPosition(int index, Vector3 position) { }

	// RVA: 0x25662D4 Offset: 0x25662D4 VA: 0x25662D4
	private void SetPosition_Injected(int index, ref Vector3 position) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBD8958 Offset: 0xBD8958 VA: 0xBD8958
[NativeHeaderAttribute] // RVA: 0xBD8958 Offset: 0xBD8958 VA: 0xBD8958
[NativeHeaderAttribute] // RVA: 0xBD8958 Offset: 0xBD8958 VA: 0xBD8958
[NativeHeaderAttribute] // RVA: 0xBD8958 Offset: 0xBD8958 VA: 0xBD8958
public sealed class MaterialPropertyBlock // TypeDefIndex: 2159
{
	// Fields
	internal IntPtr m_Ptr; // 0x10

	// Methods

	// RVA: 0x2568EA0 Offset: 0x2568EA0 VA: 0x2568EA0
	public void .ctor() { }

	[NativeNameAttribute] // RVA: 0xBE12FC Offset: 0xBE12FC VA: 0xBE12FC
	// RVA: 0x2568F24 Offset: 0x2568F24 VA: 0x2568F24
	private void SetColorImpl(int name, Color value) { }

	[NativeNameAttribute] // RVA: 0xBE1334 Offset: 0xBE1334 VA: 0xBE1334
	// RVA: 0x2568FD0 Offset: 0x2568FD0 VA: 0x2568FD0
	private void SetTextureImpl(int name, Texture value) { }

	[NativeMethodAttribute] // RVA: 0xBE136C Offset: 0xBE136C VA: 0xBE136C
	// RVA: 0x2568ECC Offset: 0x2568ECC VA: 0x2568ECC
	private static IntPtr CreateImpl() { }

	[NativeMethodAttribute] // RVA: 0xBE13C0 Offset: 0xBE13C0 VA: 0xBE13C0
	// RVA: 0x2569054 Offset: 0x2569054 VA: 0x2569054
	private static void DestroyImpl(IntPtr mpb) { }

	// RVA: 0x25690C0 Offset: 0x25690C0 VA: 0x25690C0
	private void Clear(bool keepMemory) { }

	// RVA: 0x2569134 Offset: 0x2569134 VA: 0x2569134
	public void Clear() { }

	// RVA: 0x256913C Offset: 0x256913C VA: 0x256913C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x25691B0 Offset: 0x25691B0 VA: 0x25691B0
	private void Dispose() { }

	// RVA: 0x2569218 Offset: 0x2569218 VA: 0x2569218
	public void SetColor(string name, Color value) { }

	// RVA: 0x2569280 Offset: 0x2569280 VA: 0x2569280
	public void SetTexture(string name, Texture value) { }

	// RVA: 0x2568F4C Offset: 0x2568F4C VA: 0x2568F4C
	private void SetColorImpl_Injected(int name, ref Color value) { }
}

// Namespace: UnityEngine
[RequireComponent] // RVA: 0xBD8A00 Offset: 0xBD8A00 VA: 0xBD8A00
[NativeHeaderAttribute] // RVA: 0xBD8A00 Offset: 0xBD8A00 VA: 0xBD8A00
[NativeHeaderAttribute] // RVA: 0xBD8A00 Offset: 0xBD8A00 VA: 0xBD8A00
[UsedByNativeCodeAttribute] // RVA: 0xBD8A00 Offset: 0xBD8A00 VA: 0xBD8A00
public class Renderer : Component // TypeDefIndex: 2160
{
	// Properties
	[EditorBrowsableAttribute] // RVA: 0xBE82F8 Offset: 0xBE82F8 VA: 0xBE82F8
	[ObsoleteAttribute] // RVA: 0xBE82F8 Offset: 0xBE82F8 VA: 0xBE82F8
	public bool castShadows { set; }
	public Bounds bounds { get; }
	public bool enabled { get; set; }
	public bool isVisible { get; }
	public ShadowCastingMode shadowCastingMode { set; }
	public bool receiveShadows { set; }
	public LightProbeUsage lightProbeUsage { set; }
	public ReflectionProbeUsage reflectionProbeUsage { set; }
	public int sortingLayerID { get; }
	public int sortingOrder { get; set; }
	public Transform probeAnchor { set; }
	public int lightmapIndex { set; }
	public Vector4 lightmapScaleOffset { set; }
	public Material[] materials { get; set; }
	public Material material { get; set; }
	public Material sharedMaterial { get; set; }
