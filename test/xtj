	// RVA: 0x10D35F0 Offset: 0x10D35F0 VA: 0x10D35F0
	private void SwitchSelect(int kind) { }

	// RVA: 0x10D3380 Offset: 0x10D3380 VA: 0x10D3380
	private void RequestUserStatusFlagSet() { }

	// RVA: 0x10D3974 Offset: 0x10D3974 VA: 0x10D3974
	private void callbackUsetStatusFlagSet(string result) { }

	// RVA: 0x10D3794 Offset: 0x10D3794 VA: 0x10D3794
	private int[] GetDisableList() { }

	// RVA: 0x10D3A3C Offset: 0x10D3A3C VA: 0x10D3A3C Slot: 4
	protected override GameObject get_closeBtnObject() { }

	// RVA: 0x10D3ADC Offset: 0x10D3ADC VA: 0x10D3ADC
	private static void .cctor() { }
}

// Namespace: 
private enum DropAutoSellDlgComponent.FlagKind // TypeDefIndex: 10376
{
	// Fields
	public int value__; // 0x0
	public const DropAutoSellDlgComponent.FlagKind EXP_1 = 0;
	public const DropAutoSellDlgComponent.FlagKind EXP_2 = 1;
	public const DropAutoSellDlgComponent.FlagKind EXP_3 = 2;
	public const DropAutoSellDlgComponent.FlagKind EXP_4 = 3;
	public const DropAutoSellDlgComponent.FlagKind MAX = 4;
}

// Namespace: 
private enum DropAutoSellDlgComponent.State // TypeDefIndex: 10377
{
	// Fields
	public int value__; // 0x0
	public const DropAutoSellDlgComponent.State INIT = 0;
	public const DropAutoSellDlgComponent.State OPEN = 1;
	public const DropAutoSellDlgComponent.State INPUT = 2;
	public const DropAutoSellDlgComponent.State NETWORK = 3;
	public const DropAutoSellDlgComponent.State SELECTED = 4;
	public const DropAutoSellDlgComponent.State CLOSE = 5;
}

// Namespace: 
public sealed class DropAutoSellDlgComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 10378
{
	// Methods

	// RVA: 0x10D3D18 Offset: 0x10D3D18 VA: 0x10D3D18
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x10D30B8 Offset: 0x10D30B8 VA: 0x10D30B8 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x10D3D28 Offset: 0x10D3D28 VA: 0x10D3D28 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x10D3DB8 Offset: 0x10D3DB8 VA: 0x10D3DB8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC452A4 Offset: 0xC452A4 VA: 0xC452A4
private sealed class DropAutoSellDlgComponent.<SetButtonSelect>c__AnonStorey1 // TypeDefIndex: 10379
{
	// Fields
	internal int kind; // 0x10

	// Methods

	// RVA: 0x10D377C Offset: 0x10D377C VA: 0x10D377C
	public void .ctor() { }

	// RVA: 0x10D3C54 Offset: 0x10D3C54 VA: 0x10D3C54
	internal bool <>m__0(int x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC452B4 Offset: 0xC452B4 VA: 0xC452B4
private sealed class DropAutoSellDlgComponent.<SetButtonSelect>c__AnonStorey0 // TypeDefIndex: 10380
{
	// Fields
	internal int i; // 0x10

	// Methods

	// RVA: 0x10D3784 Offset: 0x10D3784 VA: 0x10D3784
	public void .ctor() { }

	// RVA: 0x10D3BA0 Offset: 0x10D3BA0 VA: 0x10D3BA0
	internal bool <>m__0(int x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC452C4 Offset: 0xC452C4 VA: 0xC452C4
private sealed class DropAutoSellDlgComponent.<SwitchSelect>c__AnonStorey2 // TypeDefIndex: 10381
{
	// Fields
	internal int target; // 0x10

	// Methods

	// RVA: 0x10D378C Offset: 0x10D378C VA: 0x10D378C
	public void .ctor() { }

	// RVA: 0x10D3D08 Offset: 0x10D3D08 VA: 0x10D3D08
	internal bool <>m__0(int x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC452D4 Offset: 0xC452D4 VA: 0xC452D4
private sealed class DropAutoSellDlgComponent.<GetDisableList>c__AnonStorey3 // TypeDefIndex: 10382
{
	// Fields
	internal int target; // 0x10

	// Methods

	// RVA: 0x10D3A34 Offset: 0x10D3A34 VA: 0x10D3A34
	public void .ctor() { }

	// RVA: 0x10D3B90 Offset: 0x10D3B90 VA: 0x10D3B90
	internal bool <>m__0(int x) { }
}

// Namespace: 
public class FriendshipUpItemUseItem : BaseMonoBehaviour // TypeDefIndex: 10383
{
	// Fields
	private static readonly int FRIENDSHIP_UP_ITEM_MAX_NUM; // 0x0
	private static readonly string BUTTON_ON_FILE_NAME; // 0x8
	private static readonly string BUTTON_OFF_FILE_NAME; // 0x10
	public UISprite friendshipUpItemUseSprite; // 0x18
	public UISprite friendshipUpItemIconSprite; // 0x20
	public UILabel friendshipUpItemUseFixAutoUseLabel; // 0x28
	public UILabel friendshipUpItemUseFixHaveLabel; // 0x30
	public UILabel friendshipUpItemUseNumLabel; // 0x38

	// Methods

	// RVA: 0x192D5F8 Offset: 0x192D5F8 VA: 0x192D5F8
	public void .ctor() { }

	// RVA: 0x192D600 Offset: 0x192D600 VA: 0x192D600
	public void SetInit() { }

	// RVA: 0x192D8A8 Offset: 0x192D8A8 VA: 0x192D8A8
	public void ChangeButtonState(bool isOn) { }

	// RVA: 0x192D964 Offset: 0x192D964 VA: 0x192D964
	private static void .cctor() { }
}

// Namespace: 
public class PartyEventPointIndicator : ListViewIndicator // TypeDefIndex: 10384
{
	// Fields
	[SerializeField] // RVA: 0xC73300 Offset: 0xC73300 VA: 0xC73300
	protected UIPanel infomationPanel; // 0x18
	[SerializeField] // RVA: 0xC73310 Offset: 0xC73310 VA: 0xC73310
	protected GameObject pointEventBase; // 0x20
	[SerializeField] // RVA: 0xC73320 Offset: 0xC73320 VA: 0xC73320
	protected Transform pointEventTotalTitleBase; // 0x28
	[SerializeField] // RVA: 0xC73330 Offset: 0xC73330 VA: 0xC73330
	protected UILabel pointEventTotalTitle1Label; // 0x30
	[SerializeField] // RVA: 0xC73340 Offset: 0xC73340 VA: 0xC73340
	protected UILabel pointEventTotalTitle2Label; // 0x38
	[SerializeField] // RVA: 0xC73350 Offset: 0xC73350 VA: 0xC73350
	protected UILabel pointEventTotalDataLabel; // 0x40
	[SerializeField] // RVA: 0xC73360 Offset: 0xC73360 VA: 0xC73360
	protected GameObject trendInfoBase; // 0x48
	[SerializeField] // RVA: 0xC73370 Offset: 0xC73370 VA: 0xC73370
	protected GameObject levelInfoBase; // 0x50
	[SerializeField] // RVA: 0xC73380 Offset: 0xC73380 VA: 0xC73380
	protected UILabel levelInfoLabel; // 0x58
	[SerializeField] // RVA: 0xC73390 Offset: 0xC73390 VA: 0xC73390
	protected GameObject classInfoBase; // 0x60
	[SerializeField] // RVA: 0xC733A0 Offset: 0xC733A0 VA: 0xC733A0
	protected ServantClassIconComponent[] classIconList; // 0x68
	[SerializeField] // RVA: 0xC733B0 Offset: 0xC733B0 VA: 0xC733B0
	protected Transform restrictionMessageBase; // 0x70
	[SerializeField] // RVA: 0xC733C0 Offset: 0xC733C0 VA: 0xC733C0
	protected UILabel restrictionMessageLabel; // 0x78
	protected EventPartyMargeUpValInfo eventMargeItemUpValInfo; // 0x80
	protected QuestRestrictionInfo questRestrictionInfo; // 0x88
	protected bool isDispTrend; // 0x90
	protected PartyEventPointIndicator.DispKind dispKind; // 0x94
	protected int dispNum; // 0x98
	protected IEnumerator dispTotalDropItemCRW; // 0xA0
	protected bool isClick; // 0xA8
	protected int titleWidth; // 0xAC
	protected int baseMessageWidth; // 0xB0

	// Methods

	// RVA: 0x123EB38 Offset: 0x123EB38 VA: 0x123EB38
	public void .ctor() { }

	// RVA: 0x123EB48 Offset: 0x123EB48 VA: 0x123EB48
	protected void Awake() { }

	// RVA: 0x123EC00 Offset: 0x123EC00 VA: 0x123EC00
	public void SetInfomation(QuestRestrictionInfo questRestrictionInfo) { }

	// RVA: 0x123EF2C Offset: 0x123EF2C VA: 0x123EF2C
	public void SetTotalDropItemList(EventPartyMargeUpValInfo margeItemInfo) { }

	[DebuggerHiddenAttribute] // RVA: 0xCD0DB0 Offset: 0xCD0DB0 VA: 0xCD0DB0
	// RVA: 0x123F680 Offset: 0x123F680 VA: 0x123F680
	private IEnumerator DispTotalDropItemCR() { }

	// RVA: 0x123F004 Offset: 0x123F004 VA: 0x123F004
	protected void StopTotalDropItemtweenAlpha() { }

	// RVA: 0x123F0E4 Offset: 0x123F0E4 VA: 0x123F0E4
	protected bool SetTotalDropItem(EventMargeItemUpValInfo dropItemInfo) { }

	// RVA: 0x123EC50 Offset: 0x123EC50 VA: 0x123EC50
	protected bool SetTrendDisp() { }

	// RVA: 0x123F6F8 Offset: 0x123F6F8 VA: 0x123F6F8
	protected bool SetRestrictionDisp(RestrictionEntity restrictionEntity) { }

	// RVA: 0x123F910 Offset: 0x123F910 VA: 0x123F910
	public void OnClick() { }
}

// Namespace: 
protected enum PartyEventPointIndicator.DispKind // TypeDefIndex: 10385
{
	// Fields
	public int value__; // 0x0
	public const PartyEventPointIndicator.DispKind NONE = 0;
	public const PartyEventPointIndicator.DispKind TREND = 1;
	public const PartyEventPointIndicator.DispKind RESTRICTION = 2;
	public const PartyEventPointIndicator.DispKind MARGE_UP_VAL = 3;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC452E4 Offset: 0xC452E4 VA: 0xC452E4
private sealed class PartyEventPointIndicator.<DispTotalDropItemCR>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 10386
{
	// Fields
	internal RestrictionEntity[] <restrictionEntityList>__0; // 0x10
	internal int <restrictionCount>__0; // 0x18
	internal EventMargeItemUpValInfo[] <margeItemList>__0; // 0x20
	internal int <margeItemCount>__0; // 0x28
	internal TweenAlpha <ta>__1; // 0x30
	internal WaitForEndOfFrame <wait>__2; // 0x38
	internal float <startTime>__3; // 0x40
	internal float <nowTime>__4; // 0x44
	internal WaitForEndOfFrame <wait>__5; // 0x48
	internal PartyEventPointIndicator $this; // 0x50
	internal object $current; // 0x58
	internal bool $disposing; // 0x60
	internal int $PC; // 0x64

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCDC990 Offset: 0xCDC990 VA: 0xCDC990
	// RVA: 0x123F6F0 Offset: 0x123F6F0 VA: 0x123F6F0
	public void .ctor() { }

	// RVA: 0x123F994 Offset: 0x123F994 VA: 0x123F994 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC9A0 Offset: 0xCDC9A0 VA: 0xCDC9A0
	// RVA: 0x1240604 Offset: 0x1240604 VA: 0x1240604 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC9B0 Offset: 0xCDC9B0 VA: 0xCDC9B0
	// RVA: 0x124060C Offset: 0x124060C VA: 0x124060C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC9C0 Offset: 0xCDC9C0 VA: 0xCDC9C0
	// RVA: 0x1240614 Offset: 0x1240614 VA: 0x1240614 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCDC9D0 Offset: 0xCDC9D0 VA: 0xCDC9D0
	// RVA: 0x1240628 Offset: 0x1240628 VA: 0x1240628 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class PartyListMenu : BaseMenu // TypeDefIndex: 10387
{
	// Fields
	protected static readonly Vector3 HELP_PANEL_OFFSET_1; // 0x0
	protected static readonly Vector3 HELP_PANEL_OFFSET_2; // 0xC
	protected static readonly int LAYOUT_SIZE_X_TYPE_SMALL; // 0x18
	protected static readonly int[] LAYOUT_SIZE_X_TYPE_MIDDLE; // 0x20
	protected static readonly int LAYOUT_SIZE_X_TYPE_BIG; // 0x28
	protected static readonly int LAYOUT_POS_X_AUTOSELL_IN_EVENT; // 0x2C
	protected static readonly int LAYOUT_POS_X_AUTOSELL_NOT_EVENT; // 0x30
	protected static readonly int LAYOUT_POS_X_HINT_IN_EVENT; // 0x34
	protected static readonly int LAYOUT_POS_X_HINT_NOT_EVENT; // 0x38
	protected static readonly int[] LAYOUT_POS_X_HELP; // 0x40
	protected static readonly int[] LAYOUT_POS_X_QUESTINFO; // 0x48
	protected static readonly int[] LAYOUT_POS_X_AUTOSELL_1; // 0x50
	protected static readonly int[] LAYOUT_POS_X_AUTOSELL_2; // 0x58
	protected static readonly int[] LAYOUT_POS_X_EVENT; // 0x60
	protected static readonly int[] LAYOUT_POS_X_INFOMATION; // 0x68
	protected static readonly int[] LAYOUT_POS_X_REMOVE; // 0x70
	protected static readonly int[] LAYOUT_POS_X_SWAP; // 0x78
	protected static readonly int[] LAYOUT_POS_X_HINT_1; // 0x80
	protected static readonly int[] LAYOUT_POS_X_HINT_2; // 0x88
	protected static readonly int[] LAYOUT_POS_X_HELP_BUTTON; // 0x90
	protected static readonly float LAYOUT_FS_OFFSET; // 0x98
	protected static readonly float[] LAYOUT_FS_OFFSET_OLD; // 0xA0
	protected static readonly string START_BUTTON_QUEST_SP; // 0xA8
	protected static readonly string START_BUTTON_BATTLE_SP; // 0xB0
	[SerializeField] // RVA: 0xC733D0 Offset: 0xC733D0 VA: 0xC733D0
	protected PartyListViewManager partyListViewManager; // 0x58
	[SerializeField] // RVA: 0xC733E0 Offset: 0xC733E0 VA: 0xC733E0
	protected GameObject questStartBase; // 0x60
	[SerializeField] // RVA: 0xC733F0 Offset: 0xC733F0 VA: 0xC733F0
	protected GameObject partySelectBase; // 0x68
	[SerializeField] // RVA: 0xC73400 Offset: 0xC73400 VA: 0xC73400
	protected UICommonButton partyEditButton; // 0x70
	[SerializeField] // RVA: 0xC73410 Offset: 0xC73410 VA: 0xC73410
	protected UICommonButton partyStartButton; // 0x78
	[SerializeField] // RVA: 0xC73420 Offset: 0xC73420 VA: 0xC73420
	protected UICommonButton partyChangeButton; // 0x80
	[SerializeField] // RVA: 0xC73430 Offset: 0xC73430 VA: 0xC73430
	protected UICommonButton partySwapButton; // 0x88
	[SerializeField] // RVA: 0xC73440 Offset: 0xC73440 VA: 0xC73440
	protected UICommonButton partySwap2Button; // 0x90
	[SerializeField] // RVA: 0xC73450 Offset: 0xC73450 VA: 0xC73450
	protected UICommonButton partyRemoveButton; // 0x98
	[SerializeField] // RVA: 0xC73460 Offset: 0xC73460 VA: 0xC73460
	protected UICommonButton partyRemove2Button; // 0xA0
	[SerializeField] // RVA: 0xC73470 Offset: 0xC73470 VA: 0xC73470
	protected UICommonButton partyPointEventButton; // 0xA8
	[SerializeField] // RVA: 0xC73480 Offset: 0xC73480 VA: 0xC73480
	protected UICommonButton autoSellButton; // 0xB0
	[SerializeField] // RVA: 0xC73490 Offset: 0xC73490 VA: 0xC73490
	protected UICommonButton partyHelpButton; // 0xB8
	[SerializeField] // RVA: 0xC734A0 Offset: 0xC734A0 VA: 0xC734A0
	protected UICommonButton partyHelpIconButton; // 0xC0
	[SerializeField] // RVA: 0xC734B0 Offset: 0xC734B0 VA: 0xC734B0
	protected UICommonButton partyQuestInfoIconButton; // 0xC8
	[SerializeField] // RVA: 0xC734C0 Offset: 0xC734C0 VA: 0xC734C0
	protected UICommonButton assistConfirmButton; // 0xD0
	[SerializeField] // RVA: 0xC734D0 Offset: 0xC734D0 VA: 0xC734D0
	protected UILabel assistCanNotLabel; // 0xD8
	[SerializeField] // RVA: 0xC734E0 Offset: 0xC734E0 VA: 0xC734E0
	protected UISprite centerEffectLabelSp; // 0xE0
	[SerializeField] // RVA: 0xC734F0 Offset: 0xC734F0 VA: 0xC734F0
	protected UICommonButton hintDialogButton; // 0xE8
	[SerializeField] // RVA: 0xC73500 Offset: 0xC73500 VA: 0xC73500
	protected UICommonButton infomationButton; // 0xF0
	[SerializeField] // RVA: 0xC73510 Offset: 0xC73510 VA: 0xC73510
	protected GameObject tutorialMaskBase; // 0xF8
	[SerializeField] // RVA: 0xC73520 Offset: 0xC73520 VA: 0xC73520
	protected UICommonButton tutorialPartyChangeButton; // 0x100
	[SerializeField] // RVA: 0xC73530 Offset: 0xC73530 VA: 0xC73530
	protected UICommonButton tutorialPartyStartButton; // 0x108
	[SerializeField] // RVA: 0xC73540 Offset: 0xC73540 VA: 0xC73540
	protected PartyOrganizationChangeObject tutorialPartyOrganizationChangeEmptyObject; // 0x110
	[SerializeField] // RVA: 0xC73550 Offset: 0xC73550 VA: 0xC73550
	protected UISprite partyStartButtonTxtSp; // 0x118
	[SerializeField] // RVA: 0xC73560 Offset: 0xC73560 VA: 0xC73560
	protected DropAutoSellDlgComponent dropAutoSellDialog; // 0x120
	[SerializeField] // RVA: 0xC73570 Offset: 0xC73570 VA: 0xC73570
	protected GameObject infoPanel; // 0x128
	[SerializeField] // RVA: 0xC73580 Offset: 0xC73580 VA: 0xC73580
	private FriendshipUpItemUseItem friendshipUpItemUseButton; // 0x130
	[SerializeField] // RVA: 0xC73590 Offset: 0xC73590 VA: 0xC73590
	protected UICommonButton infomation2Button; // 0x138
	[SerializeField] // RVA: 0xC735A0 Offset: 0xC735A0 VA: 0xC735A0
	protected UICommonButton partyHelp2Button; // 0x140
	[SerializeField] // RVA: 0xC735B0 Offset: 0xC735B0 VA: 0xC735B0
	private UISprite autoSellSprite; // 0x148
	[SerializeField] // RVA: 0xC735C0 Offset: 0xC735C0 VA: 0xC735C0
	private UISprite partyPointEventSprite; // 0x150
	[SerializeField] // RVA: 0xC735D0 Offset: 0xC735D0 VA: 0xC735D0
	private UISprite partyRemoveSprite; // 0x158
	[SerializeField] // RVA: 0xC735E0 Offset: 0xC735E0 VA: 0xC735E0
	private UISprite partyRemove2Sprite; // 0x160
	protected PartyListMenu.TutorialMode tutorialMode; // 0x168
	protected PartyListMenu.State state; // 0x16C
	[CompilerGeneratedAttribute] // RVA: 0xC735F0 Offset: 0xC735F0 VA: 0xC735F0
	[DebuggerBrowsableAttribute] // RVA: 0xC735F0 Offset: 0xC735F0 VA: 0xC735F0
	private PartyListMenu.CallbackFunc callbackFunc; // 0x170
	protected Action openCallbackFunc; // 0x178
	protected Action closeCallbackFunc; // 0x180
	protected PartyListViewItem.MenuKind menuKind; // 0x188
	protected EventUpValSetupInfo setupInfo; // 0x190
	protected QuestRestrictionInfo questRestrictionInfo; // 0x198
	protected bool isSelectItemEnable; // 0x1A0
	private bool buttonStateSetFlag; // 0x1A1
	private bool isHintDialogOpneFlag; // 0x1A2
	[CompilerGeneratedAttribute] // RVA: 0xC7362C Offset: 0xC7362C VA: 0xC7362C
	private static ScrollMessageDialog.ClickDelegate <>f__am$cache0; // 0xB8

	// Properties
	public Vector2 HELP_PANEL_OFFSET_1_FS { get; }
	public Vector2 HELP_PANEL_OFFSET_2_FS { get; }

	// Methods

	// RVA: 0x1240748 Offset: 0x1240748 VA: 0x1240748
	public void .ctor() { }

	// RVA: 0x12407B8 Offset: 0x12407B8 VA: 0x12407B8
	private float FSOffsetX() { }

	// RVA: 0x1240824 Offset: 0x1240824 VA: 0x1240824
	private float FSOffsetX(float ver) { }

	// RVA: 0x1240898 Offset: 0x1240898 VA: 0x1240898
	public Vector2 get_HELP_PANEL_OFFSET_1_FS() { }

	// RVA: 0x124094C Offset: 0x124094C VA: 0x124094C
	public Vector2 get_HELP_PANEL_OFFSET_2_FS() { }

	// RVA: 0x1240A00 Offset: 0x1240A00 VA: 0x1240A00
	protected void add_callbackFunc(PartyListMenu.CallbackFunc value) { }

	// RVA: 0x1240AF0 Offset: 0x1240AF0 VA: 0x1240AF0
	protected void remove_callbackFunc(PartyListMenu.CallbackFunc value) { }

	// RVA: 0x1240BE0 Offset: 0x1240BE0 VA: 0x1240BE0
	public void DispInfoPanel(bool disp) { }

	// RVA: 0x1240C70 Offset: 0x1240C70 VA: 0x1240C70
	public void SetListViewMangaerEnabled(bool enabled) { }

	// RVA: 0x1240CA8 Offset: 0x1240CA8 VA: 0x1240CA8
	public PartyListViewItem GetItem(int index) { }

	// RVA: 0x1240CE0 Offset: 0x1240CE0 VA: 0x1240CE0
	public PartyListViewItem GetCenterItem() { }

	// RVA: 0x1240D7C Offset: 0x1240D7C VA: 0x1240D7C
	public void SetCenterItem(int index, bool isAnimation = True) { }

	// RVA: 0x1240DB4 Offset: 0x1240DB4 VA: 0x1240DB4
	public void ForceSetCenterItem(int index) { }

	// RVA: 0x1240DEC Offset: 0x1240DEC VA: 0x1240DEC
	public void Init() { }

	// RVA: 0x1240E94 Offset: 0x1240E94 VA: 0x1240E94
	public void SetButtonStateSetFlag(bool flag) { }

	// RVA: 0x1240EA0 Offset: 0x1240EA0 VA: 0x1240EA0
	public void Open(PartyListViewItem.MenuKind menuKind, PartyListMenu.TutorialMode tutorialMode, PartyListViewItem[] baseDeckItemList, int partyNum, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, PartyListMenu.CallbackFunc callback, Action openCallback, int friendBonusVal = 0) { }

	// RVA: 0x1242DB0 Offset: 0x1242DB0 VA: 0x1242DB0
	private void SetButtonPosAndSize(GameObject buttonObj, float offset, int posX, int sizeX = 0) { }

	// RVA: 0x12429B0 Offset: 0x12429B0 VA: 0x12429B0
	private void SetButtonState() { }

	// RVA: 0x12438BC Offset: 0x12438BC VA: 0x12438BC
	protected void EndOpen() { }

	// RVA: 0x1244644 Offset: 0x1244644 VA: 0x1244644
	protected void EndOpenTutorialArrow() { }

	// RVA: 0x1244650 Offset: 0x1244650 VA: 0x1244650
	public void Close() { }

	// RVA: 0x1244658 Offset: 0x1244658 VA: 0x1244658
	public void Close(Action callback) { }

	// RVA: 0x1244738 Offset: 0x1244738 VA: 0x1244738
	protected void EndCloseList() { }

	// RVA: 0x124473C Offset: 0x124473C VA: 0x124473C
	protected void EndClose() { }

	// RVA: 0x1244778 Offset: 0x1244778 VA: 0x1244778
	public void Enter() { }

	// RVA: 0x1244780 Offset: 0x1244780 VA: 0x1244780
	public void Enter(Action callback) { }

	// RVA: 0x1244830 Offset: 0x1244830 VA: 0x1244830
	protected void EndEnter() { }

	// RVA: 0x124488C Offset: 0x124488C VA: 0x124488C
	protected void Callback(PartyListMenu.ResultKind result) { }

	// RVA: 0x1244B68 Offset: 0x1244B68 VA: 0x1244B68
	public void OnClickDecide() { }

	// RVA: 0x1244BEC Offset: 0x1244BEC VA: 0x1244BEC
	protected void EndBlockDecideDialog() { }

	// RVA: 0x1244C80 Offset: 0x1244C80 VA: 0x1244C80
	public void OnClickCancel() { }

	// RVA: 0x1244D34 Offset: 0x1244D34 VA: 0x1244D34
	public void OnClickChange() { }

	// RVA: 0x1244EC8 Offset: 0x1244EC8 VA: 0x1244EC8
	protected void EndCloseTutorialArrowChange() { }

	// RVA: 0x1244F6C Offset: 0x1244F6C VA: 0x1244F6C
	public void OnClickMasterFormation() { }

	// RVA: 0x1245020 Offset: 0x1245020 VA: 0x1245020
	public void OnClickLimitMasterFormation() { }

	// RVA: 0x1245084 Offset: 0x1245084 VA: 0x1245084
	public void OnClickSwap() { }

	// RVA: 0x1245158 Offset: 0x1245158 VA: 0x1245158
	public void OnClickRemove() { }

	// RVA: 0x124522C Offset: 0x124522C VA: 0x124522C
	public void OnClickDeckName() { }

	// RVA: 0x1245340 Offset: 0x1245340 VA: 0x1245340
	public void OnClickDeckCopy() { }

	// RVA: 0x1245414 Offset: 0x1245414 VA: 0x1245414
	public void OnClickEdit() { }

	// RVA: 0x12454E8 Offset: 0x12454E8 VA: 0x12454E8
	public void OnClickStart() { }

	// RVA: 0x1245650 Offset: 0x1245650 VA: 0x1245650
	public void OnClickAutoSell() { }

	// RVA: 0x124570C Offset: 0x124570C VA: 0x124570C
	public void OnClickQuestInfo() { }

	// RVA: 0x12457C0 Offset: 0x12457C0 VA: 0x12457C0
	protected void EndCloseTutorialArrowStart() { }

	// RVA: 0x1245864 Offset: 0x1245864 VA: 0x1245864
	public void OnClickInfomation() { }

	// RVA: 0x1245938 Offset: 0x1245938 VA: 0x1245938
	public void OnClickPointEvent() { }

	// RVA: 0x1245A0C Offset: 0x1245A0C VA: 0x1245A0C
	protected void OnSelectItem(PartyListViewManager.ResultKind kind, int n, int m) { }

	// RVA: 0x1245B54 Offset: 0x1245B54 VA: 0x1245B54
	public void OnClickTabParty1() { }

	// RVA: 0x1245BF8 Offset: 0x1245BF8 VA: 0x1245BF8
	public void OnClickTabParty2() { }

	// RVA: 0x1245C9C Offset: 0x1245C9C VA: 0x1245C9C
	public void OnClickTabParty3() { }

	// RVA: 0x1245D40 Offset: 0x1245D40 VA: 0x1245D40
	public void OnClickTabParty4() { }

	// RVA: 0x1245DE4 Offset: 0x1245DE4 VA: 0x1245DE4
	public void OnClickTabParty5() { }

	// RVA: 0x1245E88 Offset: 0x1245E88 VA: 0x1245E88
	public void OnClickTabParty6() { }

	// RVA: 0x1245F2C Offset: 0x1245F2C VA: 0x1245F2C
	public void OnClickTabParty7() { }

	// RVA: 0x1245FD0 Offset: 0x1245FD0 VA: 0x1245FD0
	public void OnClickTabParty8() { }

	// RVA: 0x1246074 Offset: 0x1246074 VA: 0x1246074
	public void OnClickTabParty9() { }

	// RVA: 0x1246118 Offset: 0x1246118 VA: 0x1246118
	public void OnClickTabParty10() { }

	// RVA: 0x12461BC Offset: 0x12461BC VA: 0x12461BC
	public void OnClickTutorialEmptyItem() { }

	// RVA: 0x1246284 Offset: 0x1246284 VA: 0x1246284
	protected void EndCloseTutorialArrowEmptyItem() { }

	// RVA: 0x1243064 Offset: 0x1243064 VA: 0x1243064
	public bool IsNeedHelp() { }

	// RVA: 0x1246340 Offset: 0x1246340 VA: 0x1246340
	public void OnClickHelp() { }

	// RVA: 0x12465B4 Offset: 0x12465B4 VA: 0x12465B4
	protected void EndHelp() { }

	// RVA: 0x12440B8 Offset: 0x12440B8 VA: 0x12440B8
	protected void OpenHelp() { }

	// RVA: 0x12465B8 Offset: 0x12465B8 VA: 0x12465B8
	private void CheckFriendshipUpItemTutorial() { }

	// RVA: 0x12466A8 Offset: 0x12466A8 VA: 0x12466A8
	public void SetStartButton(bool isBattle) { }

	// RVA: 0x12467AC Offset: 0x12467AC VA: 0x12467AC
	public void UpdateEventLimitEquip(int index) { }

	// RVA: 0x12467E4 Offset: 0x12467E4 VA: 0x12467E4
	public void SetEventLimitEquipSetting() { }

	// RVA: 0x1246814 Offset: 0x1246814 VA: 0x1246814
	public bool IsUseEventLimitEquipUserWill(int index) { }

	// RVA: 0x124684C Offset: 0x124684C VA: 0x124684C
	public void SetSelectItemEnable(bool enable) { }

	// RVA: 0x1243140 Offset: 0x1243140 VA: 0x1243140
	private bool IsDisplayAssistConfirm() { }

	// RVA: 0x12433F4 Offset: 0x12433F4 VA: 0x12433F4
	private bool IsActiveAssistConfirm() { }

	// RVA: 0x1246858 Offset: 0x1246858 VA: 0x1246858
	public void OnClickAssistConfirmButton() { }

	// RVA: 0x1246954 Offset: 0x1246954 VA: 0x1246954
	public void CloseAssistEffectConfirmDialog() { }

	// RVA: 0x1243568 Offset: 0x1243568 VA: 0x1243568
	private bool IsDisplayLiveConfirm() { }

	// RVA: 0x12469B4 Offset: 0x12469B4 VA: 0x12469B4
	public void OnClickCenterEffectDetailDialogButton() { }

	// RVA: 0x1246AD8 Offset: 0x1246AD8 VA: 0x1246AD8
	public void CloseCenterEffectDetailDialog() { }

	// RVA: 0x1246B3C Offset: 0x1246B3C VA: 0x1246B3C
	public void SetPartyDeck(PartyListViewItem[] baseDeckItemList, int partyNum, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, int friendBonusVal = 0) { }

	// RVA: 0x1242800 Offset: 0x1242800 VA: 0x1242800
	private bool IsHintDialog() { }

	// RVA: 0x1243748 Offset: 0x1243748 VA: 0x1243748
	private bool IsHintDialogEveryTime() { }

	// RVA: 0x1246BF8 Offset: 0x1246BF8 VA: 0x1246BF8
	public void OnClickHintDialogButton() { }

	// RVA: 0x12443AC Offset: 0x12443AC VA: 0x12443AC
	public void ShowHintDialogButton() { }

	// RVA: 0x1246C68 Offset: 0x1246C68 VA: 0x1246C68
	public void OnClickFriendshipUpItemUseButton() { }

	// RVA: 0x1246DCC Offset: 0x1246DCC VA: 0x1246DCC
	public void HideFriendshipUpItemUseButton() { }

	// RVA: 0x1246E18 Offset: 0x1246E18 VA: 0x1246E18
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0DC0 Offset: 0xCD0DC0 VA: 0xCD0DC0
	// RVA: 0x12474C0 Offset: 0x12474C0 VA: 0x12474C0
	private void <OnClickAutoSell>m__0(bool res) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD0DD0 Offset: 0xCD0DD0 VA: 0xCD0DD0
	// RVA: 0x12474F0 Offset: 0x12474F0 VA: 0x12474F0
	private static void <ShowHintDialogButton>m__1(bool isDecide) { }
}

// Namespace: 
public enum PartyListMenu.TutorialMode // TypeDefIndex: 10388
{
	// Fields
	public int value__; // 0x0
	public const PartyListMenu.TutorialMode NONE = 0;
	public const PartyListMenu.TutorialMode ORGANIZATION_GUIDE_CHANGE_SELECT = 1;
	public const PartyListMenu.TutorialMode ORGANIZATION_GUIDE_DECK_EMPTY_SELECT = 2;
	public const PartyListMenu.TutorialMode FOLLOWER_GUIDE_START_SELECT = 3;
}

// Namespace: 
public enum PartyListMenu.ResultKind // TypeDefIndex: 10389
{
	// Fields
	public int value__; // 0x0
	public const PartyListMenu.ResultKind CANCEL = 0;
	public const PartyListMenu.ResultKind DECIDE = 1;
	public const PartyListMenu.ResultKind CHANGE = 2;
	public const PartyListMenu.ResultKind SWAP = 3;
	public const PartyListMenu.ResultKind REMOVE = 4;
	public const PartyListMenu.ResultKind DECK_NAME = 5;
	public const PartyListMenu.ResultKind DECK_COPY = 6;
	public const PartyListMenu.ResultKind EDIT = 7;
	public const PartyListMenu.ResultKind START = 8;
	public const PartyListMenu.ResultKind MASTER_FORMATION = 9;
	public const PartyListMenu.ResultKind MASTER_LIMIT_FORMATION = 10;
	public const PartyListMenu.ResultKind INFOMATION = 11;
	public const PartyListMenu.ResultKind EVENT_POINT = 12;
	public const PartyListMenu.ResultKind MODIFY_STATUS = 13;
	public const PartyListMenu.ResultKind CHANGE_SERVANT = 14;
	public const PartyListMenu.ResultKind CHANGE_EQUIP = 15;
	public const PartyListMenu.ResultKind DETAIL_SERVANT = 16;
	public const PartyListMenu.ResultKind TUTORIAL_CHANGE_SERVANT = 17;
	public const PartyListMenu.ResultKind QUEST_INFORMATION = 18;
}

// Namespace: 
protected enum PartyListMenu.State // TypeDefIndex: 10390
{
	// Fields
	public int value__; // 0x0
	public const PartyListMenu.State INIT = 0;
	public const PartyListMenu.State OPEN = 1;
	public const PartyListMenu.State INPUT = 2;
	public const PartyListMenu.State SELECTED = 3;
	public const PartyListMenu.State CLOSE = 4;
	public const PartyListMenu.State ENTER = 5;
	public const PartyListMenu.State TUTORIAL_OPEN = 6;
	public const PartyListMenu.State TUTORIAL = 7;
	public const PartyListMenu.State TUTORIAL_CLOSE = 8;
}

// Namespace: 
public sealed class PartyListMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10391
{
	// Methods

	// RVA: 0x12474F4 Offset: 0x12474F4 VA: 0x12474F4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x12448FC Offset: 0x12448FC VA: 0x12448FC Slot: 11
	public virtual void Invoke(PartyListMenu.ResultKind result, int n, int m) { }

	// RVA: 0x1247504 Offset: 0x1247504 VA: 0x1247504 Slot: 12
	public virtual IAsyncResult BeginInvoke(PartyListMenu.ResultKind result, int n, int m, AsyncCallback callback, object object) { }

	// RVA: 0x12475C4 Offset: 0x12475C4 VA: 0x12475C4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class PartyListViewIndicator : ListViewIndicator // TypeDefIndex: 10392
{
	// Fields
	private const string SAVE_KEY_LIMIT_EQUIP = "LIMIT_EQUIP_SETTING";
	[SerializeField] // RVA: 0xC7363C Offset: 0xC7363C VA: 0xC7363C
	protected GameObject soloBaseObject; // 0x18
	[SerializeField] // RVA: 0xC7364C Offset: 0xC7364C VA: 0xC7364C
	protected GameObject organizationNumObject; // 0x20
	[SerializeField] // RVA: 0xC7365C Offset: 0xC7365C VA: 0xC7365C
	protected GameObject indexBaseObject; // 0x28
	[SerializeField] // RVA: 0xC7366C Offset: 0xC7366C VA: 0xC7366C
	protected UISprite indexSprite; // 0x30
	[SerializeField] // RVA: 0xC7367C Offset: 0xC7367C VA: 0xC7367C
	protected GameObject costBaseObject; // 0x38
	[SerializeField] // RVA: 0xC7368C Offset: 0xC7368C VA: 0xC7368C
	protected UILabel maxCostLabel; // 0x40
	[SerializeField] // RVA: 0xC7369C Offset: 0xC7369C VA: 0xC7369C
	protected UILabel splitCostLabel; // 0x48
	[SerializeField] // RVA: 0xC736AC Offset: 0xC736AC VA: 0xC736AC
	protected UILabel selectCostLabel; // 0x50
	[SerializeField] // RVA: 0xC736BC Offset: 0xC736BC VA: 0xC736BC
	protected GameObject selectNameBaseObject; // 0x58
	[SerializeField] // RVA: 0xC736CC Offset: 0xC736CC VA: 0xC736CC
	protected UILabel selectNameLabel; // 0x60
	[SerializeField] // RVA: 0xC736DC Offset: 0xC736DC VA: 0xC736DC
	protected GameObject leftObject; // 0x68
	[SerializeField] // RVA: 0xC736EC Offset: 0xC736EC VA: 0xC736EC
	protected GameObject rightObject; // 0x70
	[SerializeField] // RVA: 0xC736FC Offset: 0xC736FC VA: 0xC736FC
	protected UISprite[] tabPartySpriteList; // 0x78
	[SerializeField] // RVA: 0xC7370C Offset: 0xC7370C VA: 0xC7370C
	protected UICommonButton[] tabPartyButtonList; // 0x80
	[SerializeField] // RVA: 0xC7371C Offset: 0xC7371C VA: 0xC7371C
	protected UILabel[] tabPartyLabelList; // 0x88
	[SerializeField] // RVA: 0xC7372C Offset: 0xC7372C VA: 0xC7372C
	protected GameObject pageBaseObject; // 0x90
	[SerializeField] // RVA: 0xC7373C Offset: 0xC7373C VA: 0xC7373C
	protected UISprite[] pageSpriteList; // 0x98
	[SerializeField] // RVA: 0xC7374C Offset: 0xC7374C VA: 0xC7374C
	protected UICommonButton partyStartButton; // 0xA0
	[SerializeField] // RVA: 0xC7375C Offset: 0xC7375C VA: 0xC7375C
	protected PartyEventPointIndicator partyEventPointIndicator; // 0xA8
	[SerializeField] // RVA: 0xC7376C Offset: 0xC7376C VA: 0xC7376C
	protected ItemIconComponent masterEquipIcon1; // 0xB0
	[SerializeField] // RVA: 0xC7377C Offset: 0xC7377C VA: 0xC7377C
	protected ItemIconComponent masterEquipIcon2; // 0xB8
	[SerializeField] // RVA: 0xC7378C Offset: 0xC7378C VA: 0xC7378C
	private UICommonButton limitMasterFormationButton; // 0xC0
	[SerializeField] // RVA: 0xC7379C Offset: 0xC7379C VA: 0xC7379C
	private ItemIconComponent limitEquipIcon; // 0xC8
	[SerializeField] // RVA: 0xC737AC Offset: 0xC737AC VA: 0xC737AC
	private UISprite limitEquipFixSprite; // 0xD0
	[SerializeField] // RVA: 0xC737BC Offset: 0xC737BC VA: 0xC737BC
	private UISprite masterEquipBackSprite; // 0xD8
	[SerializeField] // RVA: 0xC737CC Offset: 0xC737CC VA: 0xC737CC
	private UISprite masterEquipFrameSprite; // 0xE0
	[SerializeField] // RVA: 0xC737DC Offset: 0xC737DC VA: 0xC737DC
	private UISprite friendPointUpBonusSprite; // 0xE8
	[SerializeField] // RVA: 0xC737EC Offset: 0xC737EC VA: 0xC737EC
	private UILabel friendPointUpBonusLabel; // 0xF0
	[SerializeField] // RVA: 0xC737FC Offset: 0xC737FC VA: 0xC737FC
	private UISprite lastTimeUsedSprite; // 0xF8
	protected ListViewManager manager; // 0x100
	protected int pageMax; // 0x108
	protected int pageIndex; // 0x10C
	protected PartyListViewItem.MenuKind menuKind; // 0x110
	protected EventUpValSetupInfo setupInfo; // 0x118
	protected QuestRestrictionInfo questRestrictionInfo; // 0x120
	protected EventPartyMargeUpValInfo eventMargeUpValInfo; // 0x128
	protected int eventDropItemDispNum; // 0x130
	private const int LIMIT_EQUIP_USE = 0;
	private const int LIMIT_EQUIP_NOT_USE = 1;
	private bool isChkSave; // 0x134
	private int[] useLimitEquip; // 0x138
	private readonly Color ICON_NORMAL_COLOR; // 0x140
	private readonly Color ICON_MASK_COLOR; // 0x150

	// Methods

	// RVA: 0x12475D0 Offset: 0x12475D0 VA: 0x12475D0
	public void .ctor() { }

	// RVA: 0x12476DC Offset: 0x12476DC VA: 0x12476DC Slot: 4
	public override void SetIndexMax(int max) { }

	// RVA: 0x1247958 Offset: 0x1247958 VA: 0x1247958 Slot: 5
	public override void OnModifyCenterItem(ListViewManager manager, ListViewItem item, bool isTop, bool isBottom, bool isLeft, bool isRight) { }

	// RVA: 0x1248930 Offset: 0x1248930 VA: 0x1248930 Slot: 6
	public override void OnModifyPosition(ListViewManager manager, ListViewItem item) { }

	// RVA: 0x1247738 Offset: 0x1247738 VA: 0x1247738
	public void SetPageMax(int max) { }

	// RVA: 0x1247A90 Offset: 0x1247A90 VA: 0x1247A90
	public void SetPageIndex(int index) { }

	// RVA: 0x1248934 Offset: 0x1248934 VA: 0x1248934
	public void SetKind(PartyListViewItem.MenuKind menuKind) { }

	// RVA: 0x124893C Offset: 0x124893C VA: 0x124893C
	public void SetEventId(EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo) { }

	// RVA: 0x1247D1C Offset: 0x1247D1C VA: 0x1247D1C
	public void DrawPartyInfo(PartyListViewItem partyItem) { }

	// RVA: 0x1248B84 Offset: 0x1248B84 VA: 0x1248B84
	public void DrawEventLimitEquip(PartyListViewItem partyItem, bool isChng = False) { }

	// RVA: 0x1249B84 Offset: 0x1249B84 VA: 0x1249B84
	private void ClearEventLimitEquip() { }

	// RVA: 0x1249CD8 Offset: 0x1249CD8 VA: 0x1249CD8
	public void OnClickLeft() { }

	// RVA: 0x1249E40 Offset: 0x1249E40 VA: 0x1249E40
	public void OnClickRight() { }

	// RVA: 0x124899C Offset: 0x124899C VA: 0x124899C
	private void SetEventDeckPartyName(int servantNum) { }

	// RVA: 0x1249FC8 Offset: 0x1249FC8 VA: 0x1249FC8
	public void SetEventLimitEquipSetting() { }

	// RVA: 0x124A168 Offset: 0x124A168 VA: 0x124A168
	public bool IsUseEventLimitEquipUserWill(PartyListViewItem partyItem) { }

	// RVA: 0x12499EC Offset: 0x12499EC VA: 0x12499EC
	private bool IsEventOnlyEquip() { }

	// RVA: 0x124A31C Offset: 0x124A31C VA: 0x124A31C
	public void DispFriendPointUpBonus(int bonusVal) { }
}

// Namespace: 
public class PartyListViewItem : ListViewItem // TypeDefIndex: 10393
{
	// Fields
	protected PartyListViewItem.MenuKind menuKind; // 0x70
	protected int maxCost; // 0x74
	protected PartyOrganizationListViewItem[] memberList; // 0x78
	protected long id; // 0x80
	protected int cost; // 0x88
	protected bool isDeckNameDefault; // 0x8C
	protected string deckName; // 0x90
	protected long userEquipId; // 0x98
	protected EventUpValSetupInfo setupInfo; // 0xA0
	protected QuestRestrictionInfo questRestrictionInfo; // 0xA8

	// Properties
	public int Cost { get; }
	public long DeckId { get; }
	public int DeckNum { get; }
	public int MaxCost { get; }
	public string DeckName { get; }
	public string DefaultDeckName { get; }
	public long UserEquipId { get; }

	// Methods

	// RVA: 0x124A494 Offset: 0x124A494 VA: 0x124A494
	protected void .ctor() { }

	// RVA: 0x124A520 Offset: 0x124A520 VA: 0x124A520
	public void .ctor(PartyListViewItem.MenuKind menuKind, int index, int maxCost, UserDeckEntity deck, FollowerInfo follower, int followerClassId = 0, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, EventCampaignEntity[] friendPointCampaignEntityList, int followerDeckId = 0) { }

	// RVA: 0x124AB78 Offset: 0x124AB78 VA: 0x124AB78
	public void .ctor(ref bool isBaseModify, PartyListViewItem.MenuKind menuKind, int index, int maxCost, UserEventDeckEntity deck, FollowerInfo follower, int followerClassId = 0, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, EventCampaignEntity[] friendPointCampaignEntityList, int followerDeckId = 0) { }

	// RVA: 0x124B94C Offset: 0x124B94C VA: 0x124B94C
	public void .ctor(ref bool isBaseModify, PartyListViewItem.MenuKind menuKind, int index, int maxCost, UserEventDeckEntity deck, FollowerInfo follower, int followerClassId = 0, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, bool isFirstEnforceChange = False, int followerDeckId = 0) { }

	// RVA: 0x124C420 Offset: 0x124C420 VA: 0x124C420
	public void .ctor(PartyListViewItem.MenuKind menuKind, int index, int maxCost, long userEquipId, FollowerInfo follower, int followerClassId = 0, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, EventCampaignEntity[] friendPointCampaignEntityList, int followerDeckId = 0) { }

	// RVA: 0x124C77C Offset: 0x124C77C VA: 0x124C77C
	public void .ctor(ref bool isBaseModify, PartyListViewItem.MenuKind menuKind, int index, int maxCost, UserEventDeckEntity deck, QuestRestrictionInfo questRestrictionInfo, FollowerInfo follower, int followerClassId = 0, EventUpValSetupInfo setupInfo, EventCampaignEntity[] friendPointCampaignEntityList, int followerDeckId = 0) { }

	// RVA: 0x124D074 Offset: 0x124D074 VA: 0x124D074
	public void .ctor(ref bool isBaseModify, PartyListViewItem.MenuKind menuKind, int index, int maxCost, UserEventDeckEntity deck, QuestRestrictionInfo questRestrictionInfo, EventUpValSetupInfo setupInfo, bool isNew = False, FollowerInfo follower, int followerClassId = 0, int followerDeckId = 0) { }

	// RVA: 0x124EA20 Offset: 0x124EA20 VA: 0x124EA20
	private int GetSupportInitIndex(List<FollowerInfo> fixNpcFollowerInfoList) { }

	// RVA: 0x124B51C Offset: 0x124B51C VA: 0x124B51C
	private bool SetNpcFollowerInfo(ref FollowerInfo follower, ref int followerClassId, FollowerInfo[] npcFollowerInfoList, long npcFollowerSvtId) { }

	// RVA: 0x124EBC4 Offset: 0x124EBC4 VA: 0x124EBC4
	public PartyListViewItem Clone() { }

	// RVA: 0x124AA90 Offset: 0x124AA90 VA: 0x124AA90
	public void CheckRestriction() { }

	// RVA: 0x124EE44 Offset: 0x124EE44 VA: 0x124EE44
	public void Modify() { }

	// RVA: 0x124EC38 Offset: 0x124EC38 VA: 0x124EC38
	public void Set(PartyListViewItem item) { }

	// RVA: 0x124EF28 Offset: 0x124EF28 VA: 0x124EF28
	public void SetEquip(int num, long userSvtId) { }

	// RVA: 0x124F09C Offset: 0x124F09C VA: 0x124F09C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x124F0A4 Offset: 0x124F0A4 VA: 0x124F0A4
	public void SetMember(int num, PartyServantListViewItem item) { }

	// RVA: 0x124F1E0 Offset: 0x124F1E0 VA: 0x124F1E0
	public void SwapMember(int num1, int num2) { }

	// RVA: 0x124F294 Offset: 0x124F294 VA: 0x124F294
	public void ClearMember(int num) { }

	// RVA: 0x124F370 Offset: 0x124F370 VA: 0x124F370
	public void ClearMember() { }

	// RVA: 0x124F4A8 Offset: 0x124F4A8 VA: 0x124F4A8
	public void ClearEquip() { }

	// RVA: 0x124F5E8 Offset: 0x124F5E8 VA: 0x124F5E8
	public void ClearFollower() { }

	// RVA: 0x124F6CC Offset: 0x124F6CC VA: 0x124F6CC
	public void LeaderOnly() { }

	// RVA: 0x124F838 Offset: 0x124F838 VA: 0x124F838
	public bool IsDeckInit() { }

	// RVA: 0x124F98C Offset: 0x124F98C VA: 0x124F98C
	public bool IsDeckEmpty() { }

	// RVA: 0x124FA78 Offset: 0x124FA78 VA: 0x124FA78
	public bool IsEquipEmpty() { }

	// RVA: 0x124FB68 Offset: 0x124FB68 VA: 0x124FB68
	private bool CheckDeckConditionServantNum(int deckMemberCount, int mainMemberCount, bool isFollowerMainMember, int mainFollowerNum = 1) { }

	// RVA: 0x124FC64 Offset: 0x124FC64 VA: 0x124FC64
	private PartyListViewItem.DeckCondition GetDeckConditionServantNum(int deckMemberCount, int mainMemberCount, bool isFollowerMainMember, int mainFollowerNum = 1) { }

	// RVA: 0x124FC88 Offset: 0x124FC88 VA: 0x124FC88
	private PartyListViewItem.DeckCondition GetDeckConditionServantNumAndPosition(int deckMemberCount, int mainMemberCount, bool isFollowerMainMember, int mainFollowerNum = 1) { }

	// RVA: 0x124FDD0 Offset: 0x124FDD0 VA: 0x124FDD0
	public PartyListViewItem.DeckCondition GetDeckCondition() { }

	// RVA: 0x124B638 Offset: 0x124B638 VA: 0x124B638
	public PartyListViewItem.DeckCondition GetStartDeckCondition() { }

	// RVA: 0x1250678 Offset: 0x1250678 VA: 0x1250678
	public bool CompMember(PartyListViewItem item) { }

	// RVA: 0x12507F0 Offset: 0x12507F0 VA: 0x12507F0
	public UserDeckEntity GetUserDeck(PartyListViewItem baseItem) { }

	// RVA: 0x1250B28 Offset: 0x1250B28 VA: 0x1250B28
	public UserEventDeckEntity GetUserEventDeck() { }

	// RVA: 0x1250FF4 Offset: 0x1250FF4 VA: 0x1250FF4
	public long[] GetEquipList() { }
