	protected UILabel explanationLabel; // 0x40
	[SerializeField] // RVA: 0xCBBC80 Offset: 0xCBBC80 VA: 0xCBBC80
	protected GameObject[] skillBaseList; // 0x48
	[SerializeField] // RVA: 0xCBBC90 Offset: 0xCBBC90 VA: 0xCBBC90
	protected SkillIconComponent[] skillIconList; // 0x50
	[SerializeField] // RVA: 0xCBBCA0 Offset: 0xCBBCA0 VA: 0xCBBCA0
	protected UIRangeLabel[] skillTitleRangeLabelList; // 0x58
	[SerializeField] // RVA: 0xCBBCB0 Offset: 0xCBBCB0 VA: 0xCBBCB0
	protected UILabel[] skillExplanationLabelList; // 0x60
	protected int skillPitch; // 0x68
	protected Vector3 baseSize; // 0x6C
	protected Vector3 titleBasePosition; // 0x78
	protected Vector3 skillBasePosition; // 0x84

	// Methods

	// RVA: 0x20C52D0 Offset: 0x20C52D0 VA: 0x20C52D0
	public void .ctor() { }

	// RVA: 0x20C53B8 Offset: 0x20C53B8 VA: 0x20C53B8
	protected void Awake() { }

	// RVA: 0x20C5614 Offset: 0x20C5614 VA: 0x20C5614 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x20C561C Offset: 0x20C561C VA: 0x20C561C Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawEquip : ServantStatusListViewItemDraw // TypeDefIndex: 5754
{
	// Fields
	[SerializeField] // RVA: 0xCBBCC0 Offset: 0xCBBCC0 VA: 0xCBBCC0
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xCBBCD0 Offset: 0xCBBCD0 VA: 0xCBBCD0
	protected BoxCollider baseCollider; // 0x28
	[SerializeField] // RVA: 0xCBBCE0 Offset: 0xCBBCE0 VA: 0xCBBCE0
	protected UISprite baseSprite; // 0x30
	[SerializeField] // RVA: 0xCBBCF0 Offset: 0xCBBCF0 VA: 0xCBBCF0
	protected UISprite titleSprite; // 0x38
	[SerializeField] // RVA: 0xCBBD00 Offset: 0xCBBD00 VA: 0xCBBD00
	protected UICommonButton equipButton; // 0x40
	[SerializeField] // RVA: 0xCBBD10 Offset: 0xCBBD10 VA: 0xCBBD10
	protected ServantFaceIconComponent equipIcon; // 0x48
	[SerializeField] // RVA: 0xCBBD20 Offset: 0xCBBD20 VA: 0xCBBD20
	protected UILabel explanationLabel; // 0x50
	[SerializeField] // RVA: 0xCBBD30 Offset: 0xCBBD30 VA: 0xCBBD30
	protected UIRangeLabel nameRangeLabel; // 0x58
	[SerializeField] // RVA: 0xCBBD40 Offset: 0xCBBD40 VA: 0xCBBD40
	protected UIExtrusionLabel levelLabel; // 0x60
	[SerializeField] // RVA: 0xCBBD50 Offset: 0xCBBD50 VA: 0xCBBD50
	protected UILabel maxLevelLabel; // 0x68
	[SerializeField] // RVA: 0xCBBD60 Offset: 0xCBBD60 VA: 0xCBBD60
	protected UIIconLabel attackIconLabel; // 0x70
	[SerializeField] // RVA: 0xCBBD70 Offset: 0xCBBD70 VA: 0xCBBD70
	protected UIIconLabel hpIconLabel; // 0x78
	[SerializeField] // RVA: 0xCBBD80 Offset: 0xCBBD80 VA: 0xCBBD80
	protected UILabel costLabel; // 0x80
	[SerializeField] // RVA: 0xCBBD90 Offset: 0xCBBD90 VA: 0xCBBD90
	protected GameObject expBase; // 0x88
	[SerializeField] // RVA: 0xCBBDA0 Offset: 0xCBBDA0 VA: 0xCBBDA0
	protected GameObject lateExpBase; // 0x90
	[SerializeField] // RVA: 0xCBBDB0 Offset: 0xCBBDB0 VA: 0xCBBDB0
	protected UILabel lateExpLabel; // 0x98
	[SerializeField] // RVA: 0xCBBDC0 Offset: 0xCBBDC0 VA: 0xCBBDC0
	protected UISlider expBar; // 0xA0
	[SerializeField] // RVA: 0xCBBDD0 Offset: 0xCBBDD0 VA: 0xCBBDD0
	protected ServantStatusLimitCountGauge limitCountGauge; // 0xA8
	[SerializeField] // RVA: 0xCBBDE0 Offset: 0xCBBDE0 VA: 0xCBBDE0
	protected UISprite lineSprite; // 0xB0
	[SerializeField] // RVA: 0xCBBDF0 Offset: 0xCBBDF0 VA: 0xCBBDF0
	protected GameObject[] equipSkillBaseList; // 0xB8
	[SerializeField] // RVA: 0xCBBE00 Offset: 0xCBBE00 VA: 0xCBBE00
	protected SkillIconComponent[] equipSkillIcon; // 0xC0
	[SerializeField] // RVA: 0xCBBE10 Offset: 0xCBBE10 VA: 0xCBBE10
	protected UIRangeLabel[] equipSkillTitleRangeLabelList; // 0xC8
	[SerializeField] // RVA: 0xCBBE20 Offset: 0xCBBE20 VA: 0xCBBE20
	protected UILabel[] equipSkillExplanationLabelList; // 0xD0
	protected int skillPitch; // 0xD8
	protected Vector3 baseSize; // 0xDC
	protected Vector3 titleBasePosition; // 0xE8
	protected Vector3 skillBasePosition; // 0xF4
	private static readonly int DETAIL_FONT_SIZE; // 0x0
	private static readonly int MAX_HEIGHT; // 0x4
	private static readonly int ADJUST_HEIGHT; // 0x8
	private readonly Color COLOR_INVALID; // 0x100

	// Methods

	// RVA: 0x20C5B24 Offset: 0x20C5B24 VA: 0x20C5B24
	public void .ctor() { }

	// RVA: 0x20C5C54 Offset: 0x20C5C54 VA: 0x20C5C54
	protected void Awake() { }

	// RVA: 0x20C5EB0 Offset: 0x20C5EB0 VA: 0x20C5EB0 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x20C5EB8 Offset: 0x20C5EB8 VA: 0x20C5EB8 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x20C6D30 Offset: 0x20C6D30 VA: 0x20C6D30
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusListViewItemDrawEquipMain : ServantStatusListViewItemDraw // TypeDefIndex: 5755
{
	// Fields
	[SerializeField] // RVA: 0xCBBE30 Offset: 0xCBBE30 VA: 0xCBBE30
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xCBBE40 Offset: 0xCBBE40 VA: 0xCBBE40
	protected ServantFaceIconComponent servantFacceIcon; // 0x28
	[SerializeField] // RVA: 0xCBBE50 Offset: 0xCBBE50 VA: 0xCBBE50
	protected UIExtrusionLabel levelLabel; // 0x30
	[SerializeField] // RVA: 0xCBBE60 Offset: 0xCBBE60 VA: 0xCBBE60
	protected UILabel maxLevelLabel; // 0x38
	[SerializeField] // RVA: 0xCBBE70 Offset: 0xCBBE70 VA: 0xCBBE70
	protected UIIconLabel attackIconLabel; // 0x40
	[SerializeField] // RVA: 0xCBBE80 Offset: 0xCBBE80 VA: 0xCBBE80
	protected UIIconLabel hpIconLabel; // 0x48
	[SerializeField] // RVA: 0xCBBE90 Offset: 0xCBBE90 VA: 0xCBBE90
	protected UILabel costLabel; // 0x50
	[SerializeField] // RVA: 0xCBBEA0 Offset: 0xCBBEA0 VA: 0xCBBEA0
	protected GameObject expBase; // 0x58
	[SerializeField] // RVA: 0xCBBEB0 Offset: 0xCBBEB0 VA: 0xCBBEB0
	protected GameObject lateExpBase; // 0x60
	[SerializeField] // RVA: 0xCBBEC0 Offset: 0xCBBEC0 VA: 0xCBBEC0
	protected UILabel lateExpLabel; // 0x68
	[SerializeField] // RVA: 0xCBBED0 Offset: 0xCBBED0 VA: 0xCBBED0
	protected UISlider expBar; // 0x70
	[SerializeField] // RVA: 0xCBBEE0 Offset: 0xCBBEE0 VA: 0xCBBEE0
	protected ServantStatusLimitCountGauge limitCountGauge; // 0x78

	// Methods

	// RVA: 0x20C6DA4 Offset: 0x20C6DA4 VA: 0x20C6DA4
	public void .ctor() { }

	// RVA: 0x20C6DAC Offset: 0x20C6DAC VA: 0x20C6DAC Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x20C6DB4 Offset: 0x20C6DB4 VA: 0x20C6DB4 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawEquipSkill : ServantStatusListViewItemDraw // TypeDefIndex: 5756
{
	// Fields
	[SerializeField] // RVA: 0xCBBEF0 Offset: 0xCBBEF0 VA: 0xCBBEF0
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xCBBF00 Offset: 0xCBBF00 VA: 0xCBBF00
	protected BoxCollider baseCollider; // 0x28
	[SerializeField] // RVA: 0xCBBF10 Offset: 0xCBBF10 VA: 0xCBBF10
	protected UISprite baseSprite; // 0x30
	[SerializeField] // RVA: 0xCBBF20 Offset: 0xCBBF20 VA: 0xCBBF20
	protected UISprite titleSprite; // 0x38
	[SerializeField] // RVA: 0xCBBF30 Offset: 0xCBBF30 VA: 0xCBBF30
	protected UILabel explanationLabel; // 0x40
	[SerializeField] // RVA: 0xCBBF40 Offset: 0xCBBF40 VA: 0xCBBF40
	protected GameObject[] skillBaseList; // 0x48
	[SerializeField] // RVA: 0xCBBF50 Offset: 0xCBBF50 VA: 0xCBBF50
	protected SkillIconComponent[] skillIconList; // 0x50
	[SerializeField] // RVA: 0xCBBF60 Offset: 0xCBBF60 VA: 0xCBBF60
	protected UIRangeLabel[] skillTitleRangeLabelList; // 0x58
	[SerializeField] // RVA: 0xCBBF70 Offset: 0xCBBF70 VA: 0xCBBF70
	protected UILabel[] skillExplanationLabelList; // 0x60
	protected int skillPitch; // 0x68
	protected Vector3 baseSize; // 0x6C
	protected Vector3 titleBasePosition; // 0x78
	protected Vector3 skillBasePosition; // 0x84
	private static readonly int DETAIL_FONT_SIZE; // 0x0
	private static readonly int MAX_HEIGHT; // 0x4
	private static readonly int ADJUST_HEIGHT; // 0x8

	// Methods

	// RVA: 0x20C72E8 Offset: 0x20C72E8 VA: 0x20C72E8
	public void .ctor() { }

	// RVA: 0x20C73D0 Offset: 0x20C73D0 VA: 0x20C73D0
	protected void Awake() { }

	// RVA: 0x20C762C Offset: 0x20C762C VA: 0x20C762C Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x20C7634 Offset: 0x20C7634 VA: 0x20C7634 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x20C7CBC Offset: 0x20C7CBC VA: 0x20C7CBC
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusListViewItemDrawFace : ServantStatusListViewItemDraw // TypeDefIndex: 5757
{
	// Fields
	public const int FACE_ICON_LINE = 4;
	private readonly int MASK_LABEL_MAX_WIDTH; // 0x1C
	[SerializeField] // RVA: 0xCBBF80 Offset: 0xCBBF80 VA: 0xCBBF80
	protected BoxCollider baseCollider; // 0x20
	[SerializeField] // RVA: 0xCBBF90 Offset: 0xCBBF90 VA: 0xCBBF90
	protected UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xCBBFA0 Offset: 0xCBBFA0 VA: 0xCBBFA0
	protected UISprite titleSprite; // 0x30
	[SerializeField] // RVA: 0xCBBFB0 Offset: 0xCBBFB0 VA: 0xCBBFB0
	protected GameObject faceBase; // 0x38
	[SerializeField] // RVA: 0xCBBFC0 Offset: 0xCBBFC0 VA: 0xCBBFC0
	protected UILabel explanationLabel; // 0x40
	[SerializeField] // RVA: 0xCBBFD0 Offset: 0xCBBFD0 VA: 0xCBBFD0
	protected UISprite[] faceSpriteList; // 0x48
	[SerializeField] // RVA: 0xCBBFE0 Offset: 0xCBBFE0 VA: 0xCBBFE0
	protected UISprite[] faceSpriteCostumeIconList; // 0x50
	[SerializeField] // RVA: 0xCBBFF0 Offset: 0xCBBFF0 VA: 0xCBBFF0
	protected UISprite[] faceFrameSpriteList; // 0x58
	[SerializeField] // RVA: 0xCBC000 Offset: 0xCBC000 VA: 0xCBC000
	protected UICommonButton[] faceButtonList; // 0x60
	[SerializeField] // RVA: 0xCBC010 Offset: 0xCBC010 VA: 0xCBC010
	protected UIRangeLabel[] charaLevelTitleRangeLabelList; // 0x68
	[SerializeField] // RVA: 0xCBC020 Offset: 0xCBC020 VA: 0xCBC020
	protected UISprite[] charaLevelSpriteList; // 0x70
	[SerializeField] // RVA: 0xCBC030 Offset: 0xCBC030 VA: 0xCBC030
	protected UICommonButton[] charaLevelButtonList; // 0x78
	[SerializeField] // RVA: 0xCBC040 Offset: 0xCBC040 VA: 0xCBC040
	protected GameObject maskBase; // 0x80
	[SerializeField] // RVA: 0xCBC050 Offset: 0xCBC050 VA: 0xCBC050
	protected UISprite maskSprite; // 0x88
	[SerializeField] // RVA: 0xCBC060 Offset: 0xCBC060 VA: 0xCBC060
	protected UILabel maskInfoLabel; // 0x90
	[SerializeField] // RVA: 0xCBC070 Offset: 0xCBC070 VA: 0xCBC070
	private UILabel[] limitCountSealLabel; // 0x98
	[SerializeField] // RVA: 0xCBC080 Offset: 0xCBC080 VA: 0xCBC080
	private GameObject[] limitCountSealObjList; // 0xA0
	protected int baseRange; // 0xA8
	protected int facePitch; // 0xAC
	protected Vector3 baseSize; // 0xB0
	protected Vector3 titleBasePosition; // 0xBC
	protected Vector3 faceBasePosition; // 0xC8
	protected Vector3 explanationBasePosition; // 0xD4

	// Methods

	// RVA: 0x20C7D30 Offset: 0x20C7D30 VA: 0x20C7D30
	public void .ctor() { }

	// RVA: 0x20C7D40 Offset: 0x20C7D40 VA: 0x20C7D40
	protected void Awake() { }

	// RVA: 0x20C7FDC Offset: 0x20C7FDC VA: 0x20C7FDC Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x20C7FE4 Offset: 0x20C7FE4 VA: 0x20C7FE4 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x20C8D80 Offset: 0x20C8D80 VA: 0x20C8D80
	private void SetCostumeIcon(int index, ServantCostumeEntity svtCostumeEntity) { }

	// RVA: 0x20CA14C Offset: 0x20CA14C VA: 0x20CA14C Slot: 8
	public override void ModifyFace(ServantStatusListViewItem item) { }

	// RVA: 0x20C91C8 Offset: 0x20C91C8 VA: 0x20C91C8
	protected void SetupButton(ServantStatusListViewItem item, bool isInit = False) { }

	// RVA: 0x20C9E80 Offset: 0x20C9E80 VA: 0x20C9E80
	private void SetupMask(ServantStatusListViewItem item) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawFlavorText : ServantStatusListViewItemDraw // TypeDefIndex: 5758
{
	// Fields
	[SerializeField] // RVA: 0xCBC090 Offset: 0xCBC090 VA: 0xCBC090
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xCBC0A0 Offset: 0xCBC0A0 VA: 0xCBC0A0
	protected BoxCollider baseCollider; // 0x28
	[SerializeField] // RVA: 0xCBC0B0 Offset: 0xCBC0B0 VA: 0xCBC0B0
	protected UISprite baseSprite; // 0x30
	[SerializeField] // RVA: 0xCBC0C0 Offset: 0xCBC0C0 VA: 0xCBC0C0
	protected GameObject titleBase; // 0x38
	[SerializeField] // RVA: 0xCBC0D0 Offset: 0xCBC0D0 VA: 0xCBC0D0
	protected UILabel messageLabel; // 0x40
	protected bool isFirst; // 0x48

	// Methods

	// RVA: 0x20CA154 Offset: 0x20CA154 VA: 0x20CA154
	public void .ctor() { }

	// RVA: 0x20CA164 Offset: 0x20CA164 VA: 0x20CA164 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x20CA16C Offset: 0x20CA16C VA: 0x20CA16C Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawMain : ServantStatusListViewItemDraw // TypeDefIndex: 5759
{
	// Fields
	[SerializeField] // RVA: 0xCBC0E0 Offset: 0xCBC0E0 VA: 0xCBC0E0
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xCBC0F0 Offset: 0xCBC0F0 VA: 0xCBC0F0
	protected UITexture servantTexture; // 0x28
	[SerializeField] // RVA: 0xCBC100 Offset: 0xCBC100 VA: 0xCBC100
	protected UIExtrusionLabel levelLabel; // 0x30
	[SerializeField] // RVA: 0xCBC110 Offset: 0xCBC110 VA: 0xCBC110
	protected UILabel maxLevelLabel; // 0x38
	[SerializeField] // RVA: 0xCBC120 Offset: 0xCBC120 VA: 0xCBC120
	protected UIIconLabel attackIconLabel; // 0x40
	[SerializeField] // RVA: 0xCBC130 Offset: 0xCBC130 VA: 0xCBC130
	protected UIIconLabel hpIconLabel; // 0x48
	[SerializeField] // RVA: 0xCBC140 Offset: 0xCBC140 VA: 0xCBC140
	protected UIIconLabel reinforceAttackIconLabel; // 0x50
	[SerializeField] // RVA: 0xCBC150 Offset: 0xCBC150 VA: 0xCBC150
	protected UILabel reinforceAttackMaxLabel; // 0x58
	[SerializeField] // RVA: 0xCBC160 Offset: 0xCBC160 VA: 0xCBC160
	protected UIIconLabel reinforceHpIconLabel; // 0x60
	[SerializeField] // RVA: 0xCBC170 Offset: 0xCBC170 VA: 0xCBC170
	protected UILabel reinforceHpMaxLabel; // 0x68
	[SerializeField] // RVA: 0xCBC180 Offset: 0xCBC180 VA: 0xCBC180
	protected UILabel costLabel; // 0x70
	[SerializeField] // RVA: 0xCBC190 Offset: 0xCBC190 VA: 0xCBC190
	protected GameObject expBase; // 0x78
	[SerializeField] // RVA: 0xCBC1A0 Offset: 0xCBC1A0 VA: 0xCBC1A0
	protected GameObject lateExpBase; // 0x80
	[SerializeField] // RVA: 0xCBC1B0 Offset: 0xCBC1B0 VA: 0xCBC1B0
	protected UILabel lateExpLabel; // 0x88
	[SerializeField] // RVA: 0xCBC1C0 Offset: 0xCBC1C0 VA: 0xCBC1C0
	protected UISlider expBar; // 0x90
	[SerializeField] // RVA: 0xCBC1D0 Offset: 0xCBC1D0 VA: 0xCBC1D0
	protected ServantStatusLimitCountGauge limitCountGauge; // 0x98
	[SerializeField] // RVA: 0xCBC1E0 Offset: 0xCBC1E0 VA: 0xCBC1E0
	protected UISprite tdStrengthStatusSprite; // 0xA0
	[SerializeField] // RVA: 0xCBC1F0 Offset: 0xCBC1F0 VA: 0xCBC1F0
	protected UISprite[] skillStrengthStatusLabelList; // 0xA8
	[SerializeField] // RVA: 0xCBC200 Offset: 0xCBC200 VA: 0xCBC200
	protected ServantStatusFriendshipGauge friendshipGauge; // 0xB0
	[SerializeField] // RVA: 0xCBC210 Offset: 0xCBC210 VA: 0xCBC210
	protected ShiningIconComponent eventJoinIcon; // 0xB8
	[SerializeField] // RVA: 0xCBC220 Offset: 0xCBC220 VA: 0xCBC220
	protected UISprite eventJoinSprite; // 0xC0
	protected bool isStart; // 0xC8

	// Methods

	// RVA: 0x20CA614 Offset: 0x20CA614 VA: 0x20CA614
	public void .ctor() { }

	// RVA: 0x20CA61C Offset: 0x20CA61C VA: 0x20CA61C Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x20CA624 Offset: 0x20CA624 VA: 0x20CA624 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x20CB208 Offset: 0x20CB208 VA: 0x20CB208
	private int GetServantLimitCount(int svtId, int limitCount) { }

	// RVA: 0x20CB2A4 Offset: 0x20CB2A4 VA: 0x20CB2A4 Slot: 9
	public override void ModifyStatus(ServantStatusListViewItem item) { }

	// RVA: 0x20CB3B8 Offset: 0x20CB3B8 VA: 0x20CB3B8 Slot: 10
	public override void ModifyPortrait(ServantStatusListViewItem item) { }

	// RVA: 0x20CB4E8 Offset: 0x20CB4E8 VA: 0x20CB4E8 Slot: 13
	public override void ModifyRandomLimitCountSetting(ServantStatusListViewItem item) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawNp : ServantStatusListViewItemDraw // TypeDefIndex: 5760
{
	// Fields
	private static readonly int NP_LIST_MAX; // 0x0
	[SerializeField] // RVA: 0xCBC230 Offset: 0xCBC230 VA: 0xCBC230
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xCBC240 Offset: 0xCBC240 VA: 0xCBC240
	protected BoxCollider baseCollider; // 0x28
	[SerializeField] // RVA: 0xCBC250 Offset: 0xCBC250 VA: 0xCBC250
	protected UISprite baseSprite; // 0x30
	[SerializeField] // RVA: 0xCBC260 Offset: 0xCBC260 VA: 0xCBC260
	protected GameObject titleObject; // 0x38
	[SerializeField] // RVA: 0xCBC270 Offset: 0xCBC270 VA: 0xCBC270
	protected ServantStatusNpComponent[] npList; // 0x40
	protected TreasureDvcInfo tdInfo; // 0x48
	protected bool isStart; // 0x50
	private int dispLimitCnt; // 0x54
	protected int npPitch; // 0x58
	protected Vector3 baseSize; // 0x5C
	protected Vector3 titleBasePosition; // 0x68
	protected Vector3 npBasePosition; // 0x74

	// Methods

	// RVA: 0x18438EC Offset: 0x18438EC VA: 0x18438EC
	public void .ctor() { }

	// RVA: 0x184397C Offset: 0x184397C VA: 0x184397C
	protected void Awake() { }

	// RVA: 0x1843BD8 Offset: 0x1843BD8 VA: 0x1843BD8 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x1843BE0 Offset: 0x1843BE0 VA: 0x1843BE0 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x18454C0 Offset: 0x18454C0 VA: 0x18454C0 Slot: 7
	public override void ModifyCommandCard(ServantStatusListViewItem item) { }

	// RVA: 0x1845D14 Offset: 0x1845D14 VA: 0x1845D14
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusListViewItemDrawPortrait : ServantStatusListViewItemDraw // TypeDefIndex: 5761
{
	// Fields
	public const int BUTTON_LINE = 3;
	private readonly int MASK_LABEL_MAX_WIDTH; // 0x1C
	[SerializeField] // RVA: 0xCBC280 Offset: 0xCBC280 VA: 0xCBC280
	protected BoxCollider baseCollider; // 0x20
	[SerializeField] // RVA: 0xCBC290 Offset: 0xCBC290 VA: 0xCBC290
	protected UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xCBC2A0 Offset: 0xCBC2A0 VA: 0xCBC2A0
	protected UISprite titleSprite; // 0x30
	[SerializeField] // RVA: 0xCBC2B0 Offset: 0xCBC2B0 VA: 0xCBC2B0
	protected UILabel explanationLabel; // 0x38
	[SerializeField] // RVA: 0xCBC2C0 Offset: 0xCBC2C0 VA: 0xCBC2C0
	protected GameObject levelButtonBase; // 0x40
	[SerializeField] // RVA: 0xCBC2D0 Offset: 0xCBC2D0 VA: 0xCBC2D0
	protected UITexture[] servantTextureList; // 0x48
	[SerializeField] // RVA: 0xCBC2E0 Offset: 0xCBC2E0 VA: 0xCBC2E0
	protected UISprite[] servantMaskSpriteList; // 0x50
	[SerializeField] // RVA: 0xCBC2F0 Offset: 0xCBC2F0 VA: 0xCBC2F0
	protected UICommonButton[] servantButtonList; // 0x58
	[SerializeField] // RVA: 0xCBC300 Offset: 0xCBC300 VA: 0xCBC300
	protected UIRangeLabel[] charaLevelTitleRangeLabelList; // 0x60
	[SerializeField] // RVA: 0xCBC310 Offset: 0xCBC310 VA: 0xCBC310
	protected UISprite[] charaLevelSpriteList; // 0x68
	[SerializeField] // RVA: 0xCBC320 Offset: 0xCBC320 VA: 0xCBC320
	protected UICommonButton[] charaLevelButtonList; // 0x70
	[SerializeField] // RVA: 0xCBC330 Offset: 0xCBC330 VA: 0xCBC330
	protected GameObject maskBase; // 0x78
	[SerializeField] // RVA: 0xCBC340 Offset: 0xCBC340 VA: 0xCBC340
	protected UISprite maskSprite; // 0x80
	[SerializeField] // RVA: 0xCBC350 Offset: 0xCBC350 VA: 0xCBC350
	protected UILabel maskInfoLabel; // 0x88
	[SerializeField] // RVA: 0xCBC360 Offset: 0xCBC360 VA: 0xCBC360
	private UILabel[] limitCountSealLabel; // 0x90
	[SerializeField] // RVA: 0xCBC370 Offset: 0xCBC370 VA: 0xCBC370
	private GameObject[] limitCountSealObjList; // 0x98
	protected int baseRange; // 0xA0
	protected int buttonPitch; // 0xA4
	protected Vector3 baseSize; // 0xA8
	protected Vector3 titleBasePosition; // 0xB4
	protected Vector3 levelButtonBasePosition; // 0xC0
	protected Vector3 explanationBasePosition; // 0xCC
	private readonly Color QUESTION_MARK_COLOR; // 0xD8

	// Methods

	// RVA: 0x1845D68 Offset: 0x1845D68 VA: 0x1845D68
	public void .ctor() { }

	// RVA: 0x1845DD4 Offset: 0x1845DD4 VA: 0x1845DD4
	protected void Awake() { }

	// RVA: 0x1846078 Offset: 0x1846078 VA: 0x1846078 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x1846080 Offset: 0x1846080 VA: 0x1846080 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x18477A4 Offset: 0x18477A4 VA: 0x18477A4 Slot: 9
	public override void ModifyStatus(ServantStatusListViewItem item) { }

	// RVA: 0x18466EC Offset: 0x18466EC VA: 0x18466EC
	protected void SetupButton(ServantStatusListViewItem item, bool isInit = False) { }

	// RVA: 0x18474A8 Offset: 0x18474A8 VA: 0x18474A8
	private void SetupMask(ServantStatusListViewItem item) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawRandomLimitCountSetting : ServantStatusListViewItemDraw // TypeDefIndex: 5762
{
	// Fields
	private readonly int MASK_LABEL_MAX_WIDTH; // 0x1C
	private readonly Vector2 MASK_SIZE_ALL; // 0x20
	private readonly Vector2 MASK_POS_ALL; // 0x28
	private readonly Vector2 MASK_LABEL_POS_ALL; // 0x30
	private readonly Vector2 MASK_SIZE_TOP; // 0x38
	private readonly Vector2 MASK_POS_TOP; // 0x40
	private readonly Vector2 MASK_LABEL_POS_TOP; // 0x48
	private readonly Vector2 MASK_SIZE_BOTTOM; // 0x50
	private readonly Vector2 MASK_POS_BOTTOM; // 0x58
	private readonly Vector2 MASK_LABEL_POS_BOTTOM; // 0x60
	[SerializeField] // RVA: 0xCBC380 Offset: 0xCBC380 VA: 0xCBC380
	private UISprite baseSprite; // 0x68
	[SerializeField] // RVA: 0xCBC390 Offset: 0xCBC390 VA: 0xCBC390
	private UISprite titleSprite; // 0x70
	[SerializeField] // RVA: 0xCBC3A0 Offset: 0xCBC3A0 VA: 0xCBC3A0
	private GameObject maskBase; // 0x78
	[SerializeField] // RVA: 0xCBC3B0 Offset: 0xCBC3B0 VA: 0xCBC3B0
	private UISprite maskSprite; // 0x80
	[SerializeField] // RVA: 0xCBC3C0 Offset: 0xCBC3C0 VA: 0xCBC3C0
	private UILabel informationLabel; // 0x88
	[SerializeField] // RVA: 0xCBC3D0 Offset: 0xCBC3D0 VA: 0xCBC3D0
	private ServantStatusListViewItemDrawRandomLimitCountSetting.CategoryInfo myServantInfo; // 0x90
	[SerializeField] // RVA: 0xCBC3E0 Offset: 0xCBC3E0 VA: 0xCBC3E0
	private ServantStatusListViewItemDrawRandomLimitCountSetting.CategoryInfo supportServantInfo; // 0x98
	[SerializeField] // RVA: 0xCBC3F0 Offset: 0xCBC3F0 VA: 0xCBC3F0
	private UISprite lineSprite; // 0xA0

	// Methods

	// RVA: 0x18481D0 Offset: 0x18481D0 VA: 0x18481D0
	public void .ctor() { }

	// RVA: 0x1848354 Offset: 0x1848354 VA: 0x1848354 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x184835C Offset: 0x184835C VA: 0x184835C Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x18484FC Offset: 0x18484FC VA: 0x18484FC Slot: 13
	public override void ModifyRandomLimitCountSetting(ServantStatusListViewItem item) { }

	// RVA: 0x18483B0 Offset: 0x18483B0 VA: 0x18483B0
	private void Setup(ServantStatusListViewItem item) { }

	// RVA: 0x1848500 Offset: 0x1848500 VA: 0x1848500
	private void SetupCategoryInfo(ServantStatusListViewItemDrawRandomLimitCountSetting.CategoryInfo target, bool isButtonOn, string buttonText, string explanationText) { }

	// RVA: 0x18485E0 Offset: 0x18485E0 VA: 0x18485E0
	private void SetupMask(ServantStatusListViewItem item) { }

	// RVA: 0x1848774 Offset: 0x1848774 VA: 0x1848774
	private void SetupMask(ServantStatusListViewItemDrawRandomLimitCountSetting.MaskType maskType) { }
}

// Namespace: 
private enum ServantStatusListViewItemDrawRandomLimitCountSetting.MaskType // TypeDefIndex: 5763
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusListViewItemDrawRandomLimitCountSetting.MaskType NONE = 0;
	public const ServantStatusListViewItemDrawRandomLimitCountSetting.MaskType NOT_COMBINE = 1;
	public const ServantStatusListViewItemDrawRandomLimitCountSetting.MaskType ENABLE_OWN_ALL_OPTION = 2;
	public const ServantStatusListViewItemDrawRandomLimitCountSetting.MaskType ENABLE_SUPPORT_ALL_OPTION = 3;
	public const ServantStatusListViewItemDrawRandomLimitCountSetting.MaskType ENABLE_ALL_OPTION = 4;
}

// Namespace: 
[Serializable]
private class ServantStatusListViewItemDrawRandomLimitCountSetting.CategoryInfo // TypeDefIndex: 5764
{
	// Fields
	public UIButton button; // 0x10
	public UILabel buttonLabel; // 0x18
	public UILabel explanationLabel; // 0x20

	// Methods

	// RVA: 0x1848C3C Offset: 0x1848C3C VA: 0x1848C3C
	public void .ctor() { }
}

// Namespace: 
public class ServantStatusListViewItemDrawRandomLimitCountSupport : ServantStatusListViewItemDraw // TypeDefIndex: 5765
{
	// Fields
	private readonly int BUTTON_LABEL_MAX_WIDTH; // 0x1C
	private readonly int MASK_LABEL_MAX_WIDTH; // 0x20
	[SerializeField] // RVA: 0xCBC400 Offset: 0xCBC400 VA: 0xCBC400
	private BoxCollider baseCollider; // 0x28
	[SerializeField] // RVA: 0xCBC410 Offset: 0xCBC410 VA: 0xCBC410
	private UISprite baseSprite; // 0x30
	[SerializeField] // RVA: 0xCBC420 Offset: 0xCBC420 VA: 0xCBC420
	private GameObject titleBase; // 0x38
	[SerializeField] // RVA: 0xCBC430 Offset: 0xCBC430 VA: 0xCBC430
	private UISprite titleSprite; // 0x40
	[SerializeField] // RVA: 0xCBC440 Offset: 0xCBC440 VA: 0xCBC440
	private GameObject maskBase; // 0x48
	[SerializeField] // RVA: 0xCBC450 Offset: 0xCBC450 VA: 0xCBC450
	private UISprite maskSprite; // 0x50
	[SerializeField] // RVA: 0xCBC460 Offset: 0xCBC460 VA: 0xCBC460
	private UILabel informationLabel; // 0x58
	[SerializeField] // RVA: 0xCBC470 Offset: 0xCBC470 VA: 0xCBC470
	private GameObject buttonBaseObj; // 0x60
	[SerializeField] // RVA: 0xCBC480 Offset: 0xCBC480 VA: 0xCBC480
	private UICommonButton reflectOwnSettingButton; // 0x68
	[SerializeField] // RVA: 0xCBC490 Offset: 0xCBC490 VA: 0xCBC490
	private UIGrid limitCountButtonGrid; // 0x70
	[SerializeField] // RVA: 0xCBC4A0 Offset: 0xCBC4A0 VA: 0xCBC4A0
	private UICommonButton[] limitCountButtonList; // 0x78
	[SerializeField] // RVA: 0xCBC4B0 Offset: 0xCBC4B0 VA: 0xCBC4B0
	private UILabel explanationLabel; // 0x80
	protected Vector3 baseSize; // 0x88
	protected Vector3 titleBasePosition; // 0x94
	protected Vector3 buttonBasePosition; // 0xA0
	protected Vector3 explanationBasePosition; // 0xAC

	// Methods

	// RVA: 0x1848C44 Offset: 0x1848C44 VA: 0x1848C44
	public void .ctor() { }

	// RVA: 0x1848C58 Offset: 0x1848C58 VA: 0x1848C58
	private void Awake() { }

	// RVA: 0x1848DB8 Offset: 0x1848DB8 VA: 0x1848DB8 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x1848DC0 Offset: 0x1848DC0 VA: 0x1848DC0 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x18496B4 Offset: 0x18496B4 VA: 0x18496B4 Slot: 12
	public override void ModifyRandomLimitCountSupport(ServantStatusListViewItem item) { }

	// RVA: 0x1848E1C Offset: 0x1848E1C VA: 0x1848E1C
	private void Setup(ServantStatusListViewItem item) { }

	// RVA: 0x184998C Offset: 0x184998C VA: 0x184998C
	private void DeactivateLimitCountButtonList() { }

	// RVA: 0x1849A2C Offset: 0x1849A2C VA: 0x1849A2C
	private UICommonButton GetLimitCountButton(int index) { }

	// RVA: 0x1849A84 Offset: 0x1849A84 VA: 0x1849A84
	private void SetupMask(ServantStatusListViewItemDrawRandomLimitCountSupport.MaskType maskType) { }

	// RVA: 0x18496D8 Offset: 0x18496D8 VA: 0x18496D8
	private void SetButtonText(UICommonButton targetButton, string text, bool isOpen, bool isSelected) { }

	// RVA: 0x184939C Offset: 0x184939C VA: 0x184939C
	private void Layout() { }
}

// Namespace: 
private enum ServantStatusListViewItemDrawRandomLimitCountSupport.MaskType // TypeDefIndex: 5766
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusListViewItemDrawRandomLimitCountSupport.MaskType NONE = 0;
	public const ServantStatusListViewItemDrawRandomLimitCountSupport.MaskType NOT_COMBINE = 1;
	public const ServantStatusListViewItemDrawRandomLimitCountSupport.MaskType ENABLE_SUPPORT_ALL_OPTION = 2;
	public const ServantStatusListViewItemDrawRandomLimitCountSupport.MaskType ENABLE_SUPPORT_SETTING = 3;
}

// Namespace: 
public class ServantStatusListViewItemDrawServantQuest : ServantStatusListViewItemDraw // TypeDefIndex: 5767
{
	// Fields
	protected static int QuestBoardSize; // 0x0
	protected static int QuestBoardPitch; // 0x4
	[SerializeField] // RVA: 0xCBC4C0 Offset: 0xCBC4C0 VA: 0xCBC4C0
	protected BoxCollider baseCollider; // 0x20
	[SerializeField] // RVA: 0xCBC4D0 Offset: 0xCBC4D0 VA: 0xCBC4D0
	protected UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xCBC4E0 Offset: 0xCBC4E0 VA: 0xCBC4E0
	protected UISprite titleSprite; // 0x30
	[SerializeField] // RVA: 0xCBC4F0 Offset: 0xCBC4F0 VA: 0xCBC4F0
	protected UILabel explanationLabel; // 0x38
	[SerializeField] // RVA: 0xCBC500 Offset: 0xCBC500 VA: 0xCBC500
	protected UILabel explanation2Label; // 0x40
	[SerializeField] // RVA: 0xCBC510 Offset: 0xCBC510 VA: 0xCBC510
	protected GameObject titleBase; // 0x48
	[SerializeField] // RVA: 0xCBC520 Offset: 0xCBC520 VA: 0xCBC520
	protected GameObject interludeBase; // 0x50
	[SerializeField] // RVA: 0xCBC530 Offset: 0xCBC530 VA: 0xCBC530
	protected GameObject rainforcementBase; // 0x58
	[SerializeField] // RVA: 0xCBC540 Offset: 0xCBC540 VA: 0xCBC540
	protected GameObject interludeQuestBase; // 0x60
	[SerializeField] // RVA: 0xCBC550 Offset: 0xCBC550 VA: 0xCBC550
	protected GameObject rainforcementQuestBase; // 0x68
	[SerializeField] // RVA: 0xCBC560 Offset: 0xCBC560 VA: 0xCBC560
	protected string questBoardPrefabPath; // 0x70
	[SerializeField] // RVA: 0xCBC570 Offset: 0xCBC570 VA: 0xCBC570
	protected GameObject inputMessageObject; // 0x78
	protected bool isInit; // 0x80
	protected GameObject loadPrefab; // 0x88
	protected ServantStatusQuestBoardManager questBoardManager; // 0x90
	protected List<ServantStatusQuestBoardDraw> questBoardList; // 0x98

	// Methods

	// RVA: 0x1849C68 Offset: 0x1849C68 VA: 0x1849C68
	public void .ctor() { }

	// RVA: 0x1849CD8 Offset: 0x1849CD8 VA: 0x1849CD8
	protected void OnDestroy() { }

	// RVA: 0x1849DB4 Offset: 0x1849DB4 VA: 0x1849DB4 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x1849DBC Offset: 0x1849DBC VA: 0x1849DBC
	private GameObject CreateQuestBoardPrefab(GameObject parent) { }

	// RVA: 0x1849F58 Offset: 0x1849F58 VA: 0x1849F58 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x184CE60 Offset: 0x184CE60 VA: 0x184CE60
	public void OnChangeAlphaAnim() { }

	// RVA: 0x184CFD0 Offset: 0x184CFD0 VA: 0x184CFD0
	protected void Update() { }

	// RVA: 0x184D2E0 Offset: 0x184D2E0 VA: 0x184D2E0
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusListViewItemDrawSkill : ServantStatusListViewItemDraw // TypeDefIndex: 5768
{
	// Fields
	[SerializeField] // RVA: 0xCBC580 Offset: 0xCBC580 VA: 0xCBC580
	protected BoxCollider baseCollider; // 0x20
	[SerializeField] // RVA: 0xCBC590 Offset: 0xCBC590 VA: 0xCBC590
	protected UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xCBC5A0 Offset: 0xCBC5A0 VA: 0xCBC5A0
	protected UISprite titleSprite; // 0x30
	[SerializeField] // RVA: 0xCBC5B0 Offset: 0xCBC5B0 VA: 0xCBC5B0
	protected UILabel explanationLabel; // 0x38
	[SerializeField] // RVA: 0xCBC5C0 Offset: 0xCBC5C0 VA: 0xCBC5C0
	protected GameObject[] skillBaseList; // 0x40
	[SerializeField] // RVA: 0xCBC5D0 Offset: 0xCBC5D0 VA: 0xCBC5D0
	protected SkillIconComponent[] skillIconList; // 0x48
	[SerializeField] // RVA: 0xCBC5E0 Offset: 0xCBC5E0 VA: 0xCBC5E0
	protected UISprite[] chargeTitleSpriteList; // 0x50
	[SerializeField] // RVA: 0xCBC5F0 Offset: 0xCBC5F0 VA: 0xCBC5F0
	protected UILabel[] chargeDataLabelList; // 0x58
	[SerializeField] // RVA: 0xCBC600 Offset: 0xCBC600 VA: 0xCBC600
	private UILabel[] skillNameLabelList; // 0x60
	private ServantSkillStrengthStatus[] skillStrengthStatus; // 0x68
	[SerializeField] // RVA: 0xCBC610 Offset: 0xCBC610 VA: 0xCBC610
	protected UILabel[] skillExplanationLabelList; // 0x70
	protected int skillPitch; // 0x78
	protected Vector3 baseSize; // 0x7C
	protected Vector3 titleBasePosition; // 0x88
	protected Vector3 skillBasePosition; // 0x94
	private static readonly int DETAIL_FONT_SIZE; // 0x0
	private static readonly int MAX_HEIGHT; // 0x4
	private static readonly int ADJUST_HEIGHT; // 0x8

	// Methods

	// RVA: 0x184D344 Offset: 0x184D344 VA: 0x184D344
	public void .ctor() { }

	// RVA: 0x184D484 Offset: 0x184D484 VA: 0x184D484
	protected void Awake() { }

	// RVA: 0x184D6E0 Offset: 0x184D6E0 VA: 0x184D6E0 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x184D6E8 Offset: 0x184D6E8 VA: 0x184D6E8 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x184E444 Offset: 0x184E444 VA: 0x184E444
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusListViewItemDrawTdSpeed : ServantStatusListViewItemDraw // TypeDefIndex: 5769
{
	// Fields
	[SerializeField] // RVA: 0xCBC620 Offset: 0xCBC620 VA: 0xCBC620
	protected UILabel explanationLabel; // 0x20
	[SerializeField] // RVA: 0xCBC630 Offset: 0xCBC630 VA: 0xCBC630
	protected UIRangeLabel[] tdSpeedRangeLabelList; // 0x28
	[SerializeField] // RVA: 0xCBC640 Offset: 0xCBC640 VA: 0xCBC640
	protected UICommonButton[] tdSpeedButtonList; // 0x30
	[SerializeField] // RVA: 0xCBC650 Offset: 0xCBC650 VA: 0xCBC650
	protected UISprite[] tdSpeedButtonSpriteList; // 0x38
	[SerializeField] // RVA: 0xCBC660 Offset: 0xCBC660 VA: 0xCBC660
	protected GameObject clickEventObject; // 0x40

	// Methods

	// RVA: 0x184E4B8 Offset: 0x184E4B8 VA: 0x184E4B8
	public void .ctor() { }

	// RVA: 0x184E4C0 Offset: 0x184E4C0 VA: 0x184E4C0
	protected void Awake() { }

	// RVA: 0x184E4C4 Offset: 0x184E4C4 VA: 0x184E4C4 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x184E4CC Offset: 0x184E4CC VA: 0x184E4CC Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawTerminal : ServantStatusListViewItemDraw // TypeDefIndex: 5770
{
	// Methods

	// RVA: 0x184E8CC Offset: 0x184E8CC VA: 0x184E8CC
	public void .ctor() { }

	// RVA: 0x184E8D4 Offset: 0x184E8D4 VA: 0x184E8D4 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }
}

// Namespace: 
public class ServantStatusListViewManager : MonoBehaviour // TypeDefIndex: 5771
{
	// Fields
	protected static int LIST_BLANK; // 0x0
	public UIScrollView scrollView; // 0x18
	public UIScrollBar scrollBar; // 0x20
	public GameObject listParent; // 0x28
	protected ServantStatusListViewItem mainInfo; // 0x30
	protected List<ServantStatusListViewObject> objectList; // 0x38
	protected bool isInput; // 0x40
	private List<ServantStatusListViewItemDraw.Kind> currentKindList; // 0x48
	protected Vector3 oldScrollPosition; // 0x50
	protected bool isScrollRefresh; // 0x5C
	[SerializeField] // RVA: 0xCBC670 Offset: 0xCBC670 VA: 0xCBC670
	protected GameObject[] statusObjectList; // 0x60
	protected ServantStatusListViewManager.InitMode initMode; // 0x68
	protected static ServantStatusListViewItemDraw.Kind[] normalKindList; // 0x8
	protected static ServantStatusListViewItemDraw.Kind[] equipKindList; // 0x10
	protected static ServantStatusListViewItemDraw.Kind[] npcFollowerEquipKindList; // 0x18
	protected static ServantStatusListViewItemDraw.Kind[] commandCodeKindList; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCBC680 Offset: 0xCBC680 VA: 0xCBC680
	[DebuggerBrowsableAttribute] // RVA: 0xCBC680 Offset: 0xCBC680 VA: 0xCBC680
	private ServantStatusListViewManager.CallbackFunc callbackFunc; // 0x70
	protected int callbackCount; // 0x78

	// Properties
	public bool IsInput { get; set; }

	// Methods

	// RVA: 0x184E8DC Offset: 0x184E8DC VA: 0x184E8DC
	public void .ctor() { }

	// RVA: 0x184E97C Offset: 0x184E97C VA: 0x184E97C
	public bool get_IsInput() { }

	// RVA: 0x184E984 Offset: 0x184E984 VA: 0x184E984
	public void set_IsInput(bool value) { }

	// RVA: 0x184EA74 Offset: 0x184EA74 VA: 0x184EA74
	protected void OnEnable() { }

	// RVA: 0x184EA80 Offset: 0x184EA80 VA: 0x184EA80
	protected void add_callbackFunc(ServantStatusListViewManager.CallbackFunc value) { }

	// RVA: 0x184EB6C Offset: 0x184EB6C VA: 0x184EB6C
	protected void remove_callbackFunc(ServantStatusListViewManager.CallbackFunc value) { }

	// RVA: 0x184EC58 Offset: 0x184EC58 VA: 0x184EC58
	public void CreateList(ServantStatusListViewItem mainInfo) { }

	// RVA: 0x184F72C Offset: 0x184F72C VA: 0x184F72C
	public void DestroyList() { }

	// RVA: 0x184FAB0 Offset: 0x184FAB0 VA: 0x184FAB0
	protected void SetObjectItem(ServantStatusListViewObject obj) { }

	// RVA: 0x184FB9C Offset: 0x184FB9C VA: 0x184FB9C
	public float GetScrillBarValue(ServantStatusListViewItemDraw.Kind kind) { }

	// RVA: 0x184FD8C Offset: 0x184FD8C VA: 0x184FD8C
	public void SetMode(ServantStatusListViewManager.InitMode mode, ServantStatusListViewManager.CallbackFunc callback) { }

	// RVA: 0x184FD94 Offset: 0x184FD94 VA: 0x184FD94
	public void SetMode(ServantStatusListViewManager.InitMode mode) { }

	// RVA: 0x1850094 Offset: 0x1850094 VA: 0x1850094
	protected void RequestListObject(ServantStatusListViewObject.InitMode mode, float delay) { }

	// RVA: 0x184FEA4 Offset: 0x184FEA4 VA: 0x184FEA4
	protected void RequestListObject(ServantStatusListViewObject.InitMode mode) { }

	// RVA: 0x18503A0 Offset: 0x18503A0 VA: 0x18503A0
	protected void OnMoveEnd() { }

	// RVA: 0x1850474 Offset: 0x1850474 VA: 0x1850474
	public void OnClickListView(ServantStatusListViewObject obj) { }

	// RVA: 0x18507C0 Offset: 0x18507C0 VA: 0x18507C0
	public void OnClickListViewExp() { }

	// RVA: 0x1850918 Offset: 0x1850918 VA: 0x1850918
	public void OnClickListViewEquipExp() { }

	// RVA: 0x1850AC0 Offset: 0x1850AC0 VA: 0x1850AC0
	public void OnClickListViewFriendship() { }

	// RVA: 0x1850C7C Offset: 0x1850C7C VA: 0x1850C7C
	public void OnClickListViewEquip1() { }

	// RVA: 0x1850CAC Offset: 0x1850CAC VA: 0x1850CAC
	public void OnLongPushListViewEquip1() { }

	// RVA: 0x1850CDC Offset: 0x1850CDC VA: 0x1850CDC
	public void OnClickCommandCharaLevel(int id) { }

	// RVA: 0x1850D10 Offset: 0x1850D10 VA: 0x1850D10
	public void OnClickFaceCharaLevel(int id) { }

	// RVA: 0x1850D44 Offset: 0x1850D44 VA: 0x1850D44
	public void OnClickPortraitCharaLevel(int id) { }

	// RVA: 0x1850D78 Offset: 0x1850D78 VA: 0x1850D78
	public void OnClickCommandCode(int id) { }

	// RVA: 0x1850DAC Offset: 0x1850DAC VA: 0x1850DAC
	public void OnClickServantQuest(int questId) { }

	// RVA: 0x1850DE0 Offset: 0x1850DE0 VA: 0x1850DE0
	public void OnClickServantTdSpeed(int type) { }

	// RVA: 0x1850E14 Offset: 0x1850E14 VA: 0x1850E14
	public void OnClickRandomLimitCountSupport(int index) { }

	// RVA: 0x1850E48 Offset: 0x1850E48 VA: 0x1850E48
	public void OnClickSwitchRandomLimitCountOwn() { }

	// RVA: 0x1850E78 Offset: 0x1850E78 VA: 0x1850E78
	public void OnClickSwitchRandomLimitCountSupport() { }

	// RVA: 0x1850EA8 Offset: 0x1850EA8 VA: 0x1850EA8
	public void OnClickRandomLimitCountMask(ServantStatusDialog.MaskType maskType) { }

	// RVA: 0x1850EDC Offset: 0x1850EDC VA: 0x1850EDC
	public void OnClickButton(UICommonButton tappedButton, ServantStatusListViewItemDrawButton ownerObject) { }

	// RVA: 0x1850FA4 Offset: 0x1850FA4 VA: 0x1850FA4
	private static void .cctor() { }
}

// Namespace: 
public enum ServantStatusListViewManager.InitMode // TypeDefIndex: 5772
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusListViewManager.InitMode NONE = 0;
	public const ServantStatusListViewManager.InitMode INPUT = 1;
	public const ServantStatusListViewManager.InitMode VALID = 2;
	public const ServantStatusListViewManager.InitMode BATTLE = 3;
	public const ServantStatusListViewManager.InitMode COMMAND = 4;
	public const ServantStatusListViewManager.InitMode FACE = 5;
	public const ServantStatusListViewManager.InitMode STATUS = 6;
	public const ServantStatusListViewManager.InitMode PORTRAIT = 7;
	public const ServantStatusListViewManager.InitMode MODIFY = 8;
	public const ServantStatusListViewManager.InitMode RANDOM_LIMIT_COUNT_SUPPORT = 9;
	public const ServantStatusListViewManager.InitMode RANDOM_LIMIT_COUNT_SETTING = 10;
}

// Namespace: 
public enum ServantStatusListViewManager.ResultKind // TypeDefIndex: 5773
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusListViewManager.ResultKind SELECT = 0;
	public const ServantStatusListViewManager.ResultKind EQUIP1 = 1;
	public const ServantStatusListViewManager.ResultKind EQUIP1_STATUS = 2;
	public const ServantStatusListViewManager.ResultKind COMMAND = 3;
	public const ServantStatusListViewManager.ResultKind FACE = 4;
	public const ServantStatusListViewManager.ResultKind PORTRAIT = 5;
	public const ServantStatusListViewManager.ResultKind COMMAND_CODE = 6;
	public const ServantStatusListViewManager.ResultKind SERVANT_QUEST = 7;
	public const ServantStatusListViewManager.ResultKind TREASURE_DEVICE_SPEED = 8;
	public const ServantStatusListViewManager.ResultKind CHANGE_VOICE = 9;
	public const ServantStatusListViewManager.ResultKind RANDOM_LIMIT_COUNT_SUPPORT = 10;
	public const ServantStatusListViewManager.ResultKind RANDOM_LIMIT_COUNT_SETTING = 11;
	public const ServantStatusListViewManager.ResultKind RANDOM_LIMIT_COUNT_MASK = 12;
}

// Namespace: 
public sealed class ServantStatusListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 5774
{
	// Methods

	// RVA: 0x18510F0 Offset: 0x18510F0 VA: 0x18510F0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x185057C Offset: 0x185057C VA: 0x185057C Slot: 11
	public virtual void Invoke(ServantStatusListViewManager.ResultKind result, int id) { }

	// RVA: 0x1851100 Offset: 0x1851100 VA: 0x1851100 Slot: 12
	public virtual IAsyncResult BeginInvoke(ServantStatusListViewManager.ResultKind result, int id, AsyncCallback callback, object object) { }

	// RVA: 0x18511A8 Offset: 0x18511A8 VA: 0x18511A8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantStatusListViewObject : MonoBehaviour // TypeDefIndex: 5775
{
	// Fields
	[SerializeField] // RVA: 0xCBC6BC Offset: 0xCBC6BC VA: 0xCBC6BC
	protected GameObject dispObject; // 0x18
	protected ServantStatusListViewItem mainInfo; // 0x20
	protected ServantStatusListViewManager manager; // 0x28
