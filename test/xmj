	// RVA: 0x1B4D824 Offset: 0x1B4D824 VA: 0x1B4D824
	public void SetButtonKind(int value) { }

	// RVA: 0x1B4D38C Offset: 0x1B4D38C VA: 0x1B4D38C Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x1B4D82C Offset: 0x1B4D82C VA: 0x1B4D82C Slot: 14
	protected virtual int Selected(ServantStatusListViewItem item) { }

	// RVA: 0x1B4D834 Offset: 0x1B4D834 VA: 0x1B4D834
	public int GetButtonIndex(UICommonButton buttonObj) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawClassSkill : ServantStatusListViewItemDraw // TypeDefIndex: 5748
{
	// Fields
	[SerializeField] // RVA: 0xC4FB88 Offset: 0xC4FB88 VA: 0xC4FB88
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xC4FB98 Offset: 0xC4FB98 VA: 0xC4FB98
	protected BoxCollider baseCollider; // 0x28
	[SerializeField] // RVA: 0xC4FBA8 Offset: 0xC4FBA8 VA: 0xC4FBA8
	protected UISprite baseSprite; // 0x30
	[SerializeField] // RVA: 0xC4FBB8 Offset: 0xC4FBB8 VA: 0xC4FBB8
	protected UISprite titleSprite; // 0x38
	[SerializeField] // RVA: 0xC4FBC8 Offset: 0xC4FBC8 VA: 0xC4FBC8
	protected UILabel explanationLabel; // 0x40
	[SerializeField] // RVA: 0xC4FBD8 Offset: 0xC4FBD8 VA: 0xC4FBD8
	protected GameObject[] skillBaseList; // 0x48
	[SerializeField] // RVA: 0xC4FBE8 Offset: 0xC4FBE8 VA: 0xC4FBE8
	protected SkillIconComponent[] skillIconList; // 0x50
	[SerializeField] // RVA: 0xC4FBF8 Offset: 0xC4FBF8 VA: 0xC4FBF8
	protected UIRangeLabel[] skillTitleRangeLabelList; // 0x58
	[SerializeField] // RVA: 0xC4FC08 Offset: 0xC4FC08 VA: 0xC4FC08
	protected UILabel[] skillExplanationLabelList; // 0x60
	protected int skillPitch; // 0x68
	protected Vector3 baseSize; // 0x6C
	protected Vector3 titleBasePosition; // 0x78
	protected Vector3 skillBasePosition; // 0x84
	private static readonly int DETAIL_FONT_SIZE; // 0x0
	private static readonly int MAX_HEIGHT; // 0x4
	private static readonly int ADJUST_HEIGHT; // 0x8

	// Methods

	// RVA: 0x1B4D894 Offset: 0x1B4D894 VA: 0x1B4D894
	public void .ctor() { }

	// RVA: 0x1B4D97C Offset: 0x1B4D97C VA: 0x1B4D97C
	protected void Awake() { }

	// RVA: 0x1B4DBD8 Offset: 0x1B4DBD8 VA: 0x1B4DBD8 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x1B4DBE0 Offset: 0x1B4DBE0 VA: 0x1B4DBE0 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x1B4E244 Offset: 0x1B4E244 VA: 0x1B4E244
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusListViewItemDrawCommand : ServantStatusListViewItemDraw // TypeDefIndex: 5749
{
	// Fields
	public const int BUTTON_LINE = 3;
	private readonly int MASK_LABEL_MAX_WIDTH; // 0x1C
	[SerializeField] // RVA: 0xC4FC18 Offset: 0xC4FC18 VA: 0xC4FC18
	protected BoxCollider baseCollider; // 0x20
	[SerializeField] // RVA: 0xC4FC28 Offset: 0xC4FC28 VA: 0xC4FC28
	protected UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xC4FC38 Offset: 0xC4FC38 VA: 0xC4FC38
	protected UISprite titleSprite; // 0x30
	[SerializeField] // RVA: 0xC4FC48 Offset: 0xC4FC48 VA: 0xC4FC48
	protected GameObject cardBase; // 0x38
	[SerializeField] // RVA: 0xC4FC58 Offset: 0xC4FC58 VA: 0xC4FC58
	protected GameObject commandCardPrefab; // 0x40
	[SerializeField] // RVA: 0xC4FC68 Offset: 0xC4FC68 VA: 0xC4FC68
	protected GameObject[] commandCardBaseList; // 0x48
	[SerializeField] // RVA: 0xC4FC78 Offset: 0xC4FC78 VA: 0xC4FC78
	protected UILabel explanationLabel; // 0x50
	[SerializeField] // RVA: 0xC4FC88 Offset: 0xC4FC88 VA: 0xC4FC88
	protected GameObject levelButtonBase; // 0x58
	[SerializeField] // RVA: 0xC4FC98 Offset: 0xC4FC98 VA: 0xC4FC98
	protected UIRangeLabel[] battleCharaLevelTitleRangeLabelList; // 0x60
	[SerializeField] // RVA: 0xC4FCA8 Offset: 0xC4FCA8 VA: 0xC4FCA8
	protected UISprite[] battleCharaLevelSpriteList; // 0x68
	[SerializeField] // RVA: 0xC4FCB8 Offset: 0xC4FCB8 VA: 0xC4FCB8
	protected UICommonButton[] battleCharaLevelButtonList; // 0x70
	[SerializeField] // RVA: 0xC4FCC8 Offset: 0xC4FCC8 VA: 0xC4FCC8
	protected GameObject clickEventObject; // 0x78
	[SerializeField] // RVA: 0xC4FCD8 Offset: 0xC4FCD8 VA: 0xC4FCD8
	protected UISprite[] commandCodeSpriteList; // 0x80
	[SerializeField] // RVA: 0xC4FCE8 Offset: 0xC4FCE8 VA: 0xC4FCE8
	protected GameObject maskBase; // 0x88
	[SerializeField] // RVA: 0xC4FCF8 Offset: 0xC4FCF8 VA: 0xC4FCF8
	protected UISprite maskSprite; // 0x90
	[SerializeField] // RVA: 0xC4FD08 Offset: 0xC4FD08 VA: 0xC4FD08
	protected UILabel maskInfoLabel; // 0x98
	[SerializeField] // RVA: 0xC4FD18 Offset: 0xC4FD18 VA: 0xC4FD18
	private UILabel[] limitCountSealLabel; // 0xA0
	[SerializeField] // RVA: 0xC4FD28 Offset: 0xC4FD28 VA: 0xC4FD28
	private GameObject[] limitCountSealObjList; // 0xA8
	protected BattleCommandData[] commandCardDataList; // 0xB0
	protected BattleCommandComponent[] commandCardComponentList; // 0xB8
	protected int[] commandCodeIdList; // 0xC0
	protected int[] commandCardParam; // 0xC8
	protected bool isStart; // 0xD0
	protected int baseRange; // 0xD4
	protected int buttonPitch; // 0xD8
	protected Vector3 baseSize; // 0xDC
	protected Vector3 titleBasePosition; // 0xE8
	protected Vector3 cardBasePosition; // 0xF4
	protected Vector3 levelButtonBasePosition; // 0x100
	protected Vector3 explanationBasePosition; // 0x10C

	// Methods

	// RVA: 0x1B4E2B8 Offset: 0x1B4E2B8 VA: 0x1B4E2B8
	public void .ctor() { }

	// RVA: 0x1B4E348 Offset: 0x1B4E348 VA: 0x1B4E348
	protected void Awake() { }

	// RVA: 0x1B4E634 Offset: 0x1B4E634 VA: 0x1B4E634 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x1B4E63C Offset: 0x1B4E63C VA: 0x1B4E63C Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x1B4FAF4 Offset: 0x1B4FAF4 VA: 0x1B4FAF4 Slot: 7
	public override void ModifyCommandCard(ServantStatusListViewItem item) { }

	// RVA: 0x1B5097C Offset: 0x1B5097C VA: 0x1B5097C Slot: 13
	public override void ModifyRandomLimitCountSetting(ServantStatusListViewItem item) { }

	// RVA: 0x1B4FB00 Offset: 0x1B4FB00 VA: 0x1B4FB00
	private void RefreshCommandCard(ServantStatusListViewItem item) { }

	// RVA: 0x1B4EC94 Offset: 0x1B4EC94 VA: 0x1B4EC94
	protected void SetupBattleButton(ServantStatusListViewItem item, bool isInit = False) { }

	// RVA: 0x1B4F828 Offset: 0x1B4F828 VA: 0x1B4F828
	private void SetupMask(ServantStatusListViewItem item) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawCommandCodeSkill : ServantStatusListViewItemDraw // TypeDefIndex: 5750
{
	// Fields
	[SerializeField] // RVA: 0xC4FD38 Offset: 0xC4FD38 VA: 0xC4FD38
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xC4FD48 Offset: 0xC4FD48 VA: 0xC4FD48
	protected BoxCollider baseCollider; // 0x28
	[SerializeField] // RVA: 0xC4FD58 Offset: 0xC4FD58 VA: 0xC4FD58
	protected UISprite baseSprite; // 0x30
	[SerializeField] // RVA: 0xC4FD68 Offset: 0xC4FD68 VA: 0xC4FD68
	protected UISprite titleSprite; // 0x38
	[SerializeField] // RVA: 0xC4FD78 Offset: 0xC4FD78 VA: 0xC4FD78
	protected UILabel explanationLabel; // 0x40
	[SerializeField] // RVA: 0xC4FD88 Offset: 0xC4FD88 VA: 0xC4FD88
	protected GameObject[] skillBaseList; // 0x48
	[SerializeField] // RVA: 0xC4FD98 Offset: 0xC4FD98 VA: 0xC4FD98
	protected SkillIconComponent[] skillIconList; // 0x50
	[SerializeField] // RVA: 0xC4FDA8 Offset: 0xC4FDA8 VA: 0xC4FDA8
	protected UIRangeLabel[] skillTitleRangeLabelList; // 0x58
	[SerializeField] // RVA: 0xC4FDB8 Offset: 0xC4FDB8 VA: 0xC4FDB8
	protected UILabel[] skillExplanationLabelList; // 0x60
	protected int skillPitch; // 0x68
	protected Vector3 baseSize; // 0x6C
	protected Vector3 titleBasePosition; // 0x78
	protected Vector3 skillBasePosition; // 0x84

	// Methods

	// RVA: 0x1B50A14 Offset: 0x1B50A14 VA: 0x1B50A14
	public void .ctor() { }

	// RVA: 0x1B50AFC Offset: 0x1B50AFC VA: 0x1B50AFC
	protected void Awake() { }

	// RVA: 0x1B50D58 Offset: 0x1B50D58 VA: 0x1B50D58 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x1B50D60 Offset: 0x1B50D60 VA: 0x1B50D60 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawEquip : ServantStatusListViewItemDraw // TypeDefIndex: 5751
{
	// Fields
	[SerializeField] // RVA: 0xC4FDC8 Offset: 0xC4FDC8 VA: 0xC4FDC8
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xC4FDD8 Offset: 0xC4FDD8 VA: 0xC4FDD8
	protected BoxCollider baseCollider; // 0x28
	[SerializeField] // RVA: 0xC4FDE8 Offset: 0xC4FDE8 VA: 0xC4FDE8
	protected UISprite baseSprite; // 0x30
	[SerializeField] // RVA: 0xC4FDF8 Offset: 0xC4FDF8 VA: 0xC4FDF8
	protected UISprite titleSprite; // 0x38
	[SerializeField] // RVA: 0xC4FE08 Offset: 0xC4FE08 VA: 0xC4FE08
	protected UICommonButton equipButton; // 0x40
	[SerializeField] // RVA: 0xC4FE18 Offset: 0xC4FE18 VA: 0xC4FE18
	protected ServantFaceIconComponent equipIcon; // 0x48
	[SerializeField] // RVA: 0xC4FE28 Offset: 0xC4FE28 VA: 0xC4FE28
	protected UILabel explanationLabel; // 0x50
	[SerializeField] // RVA: 0xC4FE38 Offset: 0xC4FE38 VA: 0xC4FE38
	protected UIRangeLabel nameRangeLabel; // 0x58
	[SerializeField] // RVA: 0xC4FE48 Offset: 0xC4FE48 VA: 0xC4FE48
	protected UIExtrusionLabel levelLabel; // 0x60
	[SerializeField] // RVA: 0xC4FE58 Offset: 0xC4FE58 VA: 0xC4FE58
	protected UILabel maxLevelLabel; // 0x68
	[SerializeField] // RVA: 0xC4FE68 Offset: 0xC4FE68 VA: 0xC4FE68
	protected UIIconLabel attackIconLabel; // 0x70
	[SerializeField] // RVA: 0xC4FE78 Offset: 0xC4FE78 VA: 0xC4FE78
	protected UIIconLabel hpIconLabel; // 0x78
	[SerializeField] // RVA: 0xC4FE88 Offset: 0xC4FE88 VA: 0xC4FE88
	protected UILabel costLabel; // 0x80
	[SerializeField] // RVA: 0xC4FE98 Offset: 0xC4FE98 VA: 0xC4FE98
	protected GameObject expBase; // 0x88
	[SerializeField] // RVA: 0xC4FEA8 Offset: 0xC4FEA8 VA: 0xC4FEA8
	protected GameObject lateExpBase; // 0x90
	[SerializeField] // RVA: 0xC4FEB8 Offset: 0xC4FEB8 VA: 0xC4FEB8
	protected UILabel lateExpLabel; // 0x98
	[SerializeField] // RVA: 0xC4FEC8 Offset: 0xC4FEC8 VA: 0xC4FEC8
	protected UISlider expBar; // 0xA0
	[SerializeField] // RVA: 0xC4FED8 Offset: 0xC4FED8 VA: 0xC4FED8
	protected ServantStatusLimitCountGauge limitCountGauge; // 0xA8
	[SerializeField] // RVA: 0xC4FEE8 Offset: 0xC4FEE8 VA: 0xC4FEE8
	protected UISprite lineSprite; // 0xB0
	[SerializeField] // RVA: 0xC4FEF8 Offset: 0xC4FEF8 VA: 0xC4FEF8
	protected GameObject[] equipSkillBaseList; // 0xB8
	[SerializeField] // RVA: 0xC4FF08 Offset: 0xC4FF08 VA: 0xC4FF08
	protected SkillIconComponent[] equipSkillIcon; // 0xC0
	[SerializeField] // RVA: 0xC4FF18 Offset: 0xC4FF18 VA: 0xC4FF18
	protected UIRangeLabel[] equipSkillTitleRangeLabelList; // 0xC8
	[SerializeField] // RVA: 0xC4FF28 Offset: 0xC4FF28 VA: 0xC4FF28
	protected UILabel[] equipSkillExplanationLabelList; // 0xD0
	protected int skillPitch; // 0xD8
	protected Vector3 baseSize; // 0xDC
	protected Vector3 titleBasePosition; // 0xE8
	protected Vector3 skillBasePosition; // 0xF4
	private static readonly int DETAIL_FONT_SIZE; // 0x0
	private static readonly int MAX_HEIGHT; // 0x4
	private static readonly int ADJUST_HEIGHT; // 0x8
	private readonly Color COLOR_INVALID; // 0x100

	// Methods

	// RVA: 0x1B51268 Offset: 0x1B51268 VA: 0x1B51268
	public void .ctor() { }

	// RVA: 0x1B51398 Offset: 0x1B51398 VA: 0x1B51398
	protected void Awake() { }

	// RVA: 0x1B515F4 Offset: 0x1B515F4 VA: 0x1B515F4 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x1B515FC Offset: 0x1B515FC VA: 0x1B515FC Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x1B52474 Offset: 0x1B52474 VA: 0x1B52474
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusListViewItemDrawEquipMain : ServantStatusListViewItemDraw // TypeDefIndex: 5752
{
	// Fields
	[SerializeField] // RVA: 0xC4FF38 Offset: 0xC4FF38 VA: 0xC4FF38
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xC4FF48 Offset: 0xC4FF48 VA: 0xC4FF48
	protected ServantFaceIconComponent servantFacceIcon; // 0x28
	[SerializeField] // RVA: 0xC4FF58 Offset: 0xC4FF58 VA: 0xC4FF58
	protected UIExtrusionLabel levelLabel; // 0x30
	[SerializeField] // RVA: 0xC4FF68 Offset: 0xC4FF68 VA: 0xC4FF68
	protected UILabel maxLevelLabel; // 0x38
	[SerializeField] // RVA: 0xC4FF78 Offset: 0xC4FF78 VA: 0xC4FF78
	protected UIIconLabel attackIconLabel; // 0x40
	[SerializeField] // RVA: 0xC4FF88 Offset: 0xC4FF88 VA: 0xC4FF88
	protected UIIconLabel hpIconLabel; // 0x48
	[SerializeField] // RVA: 0xC4FF98 Offset: 0xC4FF98 VA: 0xC4FF98
	protected UILabel costLabel; // 0x50
	[SerializeField] // RVA: 0xC4FFA8 Offset: 0xC4FFA8 VA: 0xC4FFA8
	protected GameObject expBase; // 0x58
	[SerializeField] // RVA: 0xC4FFB8 Offset: 0xC4FFB8 VA: 0xC4FFB8
	protected GameObject lateExpBase; // 0x60
	[SerializeField] // RVA: 0xC4FFC8 Offset: 0xC4FFC8 VA: 0xC4FFC8
	protected UILabel lateExpLabel; // 0x68
	[SerializeField] // RVA: 0xC4FFD8 Offset: 0xC4FFD8 VA: 0xC4FFD8
	protected UISlider expBar; // 0x70
	[SerializeField] // RVA: 0xC4FFE8 Offset: 0xC4FFE8 VA: 0xC4FFE8
	protected ServantStatusLimitCountGauge limitCountGauge; // 0x78

	// Methods

	// RVA: 0x1B524E8 Offset: 0x1B524E8 VA: 0x1B524E8
	public void .ctor() { }

	// RVA: 0x1B524F0 Offset: 0x1B524F0 VA: 0x1B524F0 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x1B524F8 Offset: 0x1B524F8 VA: 0x1B524F8 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawEquipSkill : ServantStatusListViewItemDraw // TypeDefIndex: 5753
{
	// Fields
	[SerializeField] // RVA: 0xC4FFF8 Offset: 0xC4FFF8 VA: 0xC4FFF8
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xC50008 Offset: 0xC50008 VA: 0xC50008
	protected BoxCollider baseCollider; // 0x28
	[SerializeField] // RVA: 0xC50018 Offset: 0xC50018 VA: 0xC50018
	protected UISprite baseSprite; // 0x30
	[SerializeField] // RVA: 0xC50028 Offset: 0xC50028 VA: 0xC50028
	protected UISprite titleSprite; // 0x38
	[SerializeField] // RVA: 0xC50038 Offset: 0xC50038 VA: 0xC50038
	protected UILabel explanationLabel; // 0x40
	[SerializeField] // RVA: 0xC50048 Offset: 0xC50048 VA: 0xC50048
	protected GameObject[] skillBaseList; // 0x48
	[SerializeField] // RVA: 0xC50058 Offset: 0xC50058 VA: 0xC50058
	protected SkillIconComponent[] skillIconList; // 0x50
	[SerializeField] // RVA: 0xC50068 Offset: 0xC50068 VA: 0xC50068
	protected UIRangeLabel[] skillTitleRangeLabelList; // 0x58
	[SerializeField] // RVA: 0xC50078 Offset: 0xC50078 VA: 0xC50078
	protected UILabel[] skillExplanationLabelList; // 0x60
	protected int skillPitch; // 0x68
	protected Vector3 baseSize; // 0x6C
	protected Vector3 titleBasePosition; // 0x78
	protected Vector3 skillBasePosition; // 0x84
	private static readonly int DETAIL_FONT_SIZE; // 0x0
	private static readonly int MAX_HEIGHT; // 0x4
	private static readonly int ADJUST_HEIGHT; // 0x8

	// Methods

	// RVA: 0x1B52A2C Offset: 0x1B52A2C VA: 0x1B52A2C
	public void .ctor() { }

	// RVA: 0x1B52B14 Offset: 0x1B52B14 VA: 0x1B52B14
	protected void Awake() { }

	// RVA: 0x1B52D70 Offset: 0x1B52D70 VA: 0x1B52D70 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x1B52D78 Offset: 0x1B52D78 VA: 0x1B52D78 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x1B53400 Offset: 0x1B53400 VA: 0x1B53400
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusListViewItemDrawFace : ServantStatusListViewItemDraw // TypeDefIndex: 5754
{
	// Fields
	public const int FACE_ICON_LINE = 4;
	private readonly int MASK_LABEL_MAX_WIDTH; // 0x1C
	[SerializeField] // RVA: 0xC50088 Offset: 0xC50088 VA: 0xC50088
	protected BoxCollider baseCollider; // 0x20
	[SerializeField] // RVA: 0xC50098 Offset: 0xC50098 VA: 0xC50098
	protected UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xC500A8 Offset: 0xC500A8 VA: 0xC500A8
	protected UISprite titleSprite; // 0x30
	[SerializeField] // RVA: 0xC500B8 Offset: 0xC500B8 VA: 0xC500B8
	protected GameObject faceBase; // 0x38
	[SerializeField] // RVA: 0xC500C8 Offset: 0xC500C8 VA: 0xC500C8
	protected UILabel explanationLabel; // 0x40
	[SerializeField] // RVA: 0xC500D8 Offset: 0xC500D8 VA: 0xC500D8
	protected UISprite[] faceSpriteList; // 0x48
	[SerializeField] // RVA: 0xC500E8 Offset: 0xC500E8 VA: 0xC500E8
	protected UISprite[] faceSpriteCostumeIconList; // 0x50
	[SerializeField] // RVA: 0xC500F8 Offset: 0xC500F8 VA: 0xC500F8
	protected UISprite[] faceFrameSpriteList; // 0x58
	[SerializeField] // RVA: 0xC50108 Offset: 0xC50108 VA: 0xC50108
	protected UICommonButton[] faceButtonList; // 0x60
	[SerializeField] // RVA: 0xC50118 Offset: 0xC50118 VA: 0xC50118
	protected UIRangeLabel[] charaLevelTitleRangeLabelList; // 0x68
	[SerializeField] // RVA: 0xC50128 Offset: 0xC50128 VA: 0xC50128
	protected UISprite[] charaLevelSpriteList; // 0x70
	[SerializeField] // RVA: 0xC50138 Offset: 0xC50138 VA: 0xC50138
	protected UICommonButton[] charaLevelButtonList; // 0x78
	[SerializeField] // RVA: 0xC50148 Offset: 0xC50148 VA: 0xC50148
	protected GameObject maskBase; // 0x80
	[SerializeField] // RVA: 0xC50158 Offset: 0xC50158 VA: 0xC50158
	protected UISprite maskSprite; // 0x88
	[SerializeField] // RVA: 0xC50168 Offset: 0xC50168 VA: 0xC50168
	protected UILabel maskInfoLabel; // 0x90
	[SerializeField] // RVA: 0xC50178 Offset: 0xC50178 VA: 0xC50178
	private UILabel[] limitCountSealLabel; // 0x98
	[SerializeField] // RVA: 0xC50188 Offset: 0xC50188 VA: 0xC50188
	private GameObject[] limitCountSealObjList; // 0xA0
	protected int baseRange; // 0xA8
	protected int facePitch; // 0xAC
	protected Vector3 baseSize; // 0xB0
	protected Vector3 titleBasePosition; // 0xBC
	protected Vector3 faceBasePosition; // 0xC8
	protected Vector3 explanationBasePosition; // 0xD4

	// Methods

	// RVA: 0x1B53474 Offset: 0x1B53474 VA: 0x1B53474
	public void .ctor() { }

	// RVA: 0x1B53484 Offset: 0x1B53484 VA: 0x1B53484
	protected void Awake() { }

	// RVA: 0x1B53720 Offset: 0x1B53720 VA: 0x1B53720 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x1B53728 Offset: 0x1B53728 VA: 0x1B53728 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x1B544C4 Offset: 0x1B544C4 VA: 0x1B544C4
	private void SetCostumeIcon(int index, ServantCostumeEntity svtCostumeEntity) { }

	// RVA: 0x1B55890 Offset: 0x1B55890 VA: 0x1B55890 Slot: 8
	public override void ModifyFace(ServantStatusListViewItem item) { }

	// RVA: 0x1B5490C Offset: 0x1B5490C VA: 0x1B5490C
	protected void SetupButton(ServantStatusListViewItem item, bool isInit = False) { }

	// RVA: 0x1B555C4 Offset: 0x1B555C4 VA: 0x1B555C4
	private void SetupMask(ServantStatusListViewItem item) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawFlavorText : ServantStatusListViewItemDraw // TypeDefIndex: 5755
{
	// Fields
	[SerializeField] // RVA: 0xC50198 Offset: 0xC50198 VA: 0xC50198
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xC501A8 Offset: 0xC501A8 VA: 0xC501A8
	protected BoxCollider baseCollider; // 0x28
	[SerializeField] // RVA: 0xC501B8 Offset: 0xC501B8 VA: 0xC501B8
	protected UISprite baseSprite; // 0x30
	[SerializeField] // RVA: 0xC501C8 Offset: 0xC501C8 VA: 0xC501C8
	protected GameObject titleBase; // 0x38
	[SerializeField] // RVA: 0xC501D8 Offset: 0xC501D8 VA: 0xC501D8
	protected UILabel messageLabel; // 0x40
	protected bool isFirst; // 0x48

	// Methods

	// RVA: 0x1B55898 Offset: 0x1B55898 VA: 0x1B55898
	public void .ctor() { }

	// RVA: 0x1B558A8 Offset: 0x1B558A8 VA: 0x1B558A8 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x1B558B0 Offset: 0x1B558B0 VA: 0x1B558B0 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawMain : ServantStatusListViewItemDraw // TypeDefIndex: 5756
{
	// Fields
	[SerializeField] // RVA: 0xC501E8 Offset: 0xC501E8 VA: 0xC501E8
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xC501F8 Offset: 0xC501F8 VA: 0xC501F8
	protected UITexture servantTexture; // 0x28
	[SerializeField] // RVA: 0xC50208 Offset: 0xC50208 VA: 0xC50208
	protected UIExtrusionLabel levelLabel; // 0x30
	[SerializeField] // RVA: 0xC50218 Offset: 0xC50218 VA: 0xC50218
	protected UILabel maxLevelLabel; // 0x38
	[SerializeField] // RVA: 0xC50228 Offset: 0xC50228 VA: 0xC50228
	protected UIIconLabel attackIconLabel; // 0x40
	[SerializeField] // RVA: 0xC50238 Offset: 0xC50238 VA: 0xC50238
	protected UIIconLabel hpIconLabel; // 0x48
	[SerializeField] // RVA: 0xC50248 Offset: 0xC50248 VA: 0xC50248
	protected UIIconLabel reinforceAttackIconLabel; // 0x50
	[SerializeField] // RVA: 0xC50258 Offset: 0xC50258 VA: 0xC50258
	protected UILabel reinforceAttackMaxLabel; // 0x58
	[SerializeField] // RVA: 0xC50268 Offset: 0xC50268 VA: 0xC50268
	protected UIIconLabel reinforceHpIconLabel; // 0x60
	[SerializeField] // RVA: 0xC50278 Offset: 0xC50278 VA: 0xC50278
	protected UILabel reinforceHpMaxLabel; // 0x68
	[SerializeField] // RVA: 0xC50288 Offset: 0xC50288 VA: 0xC50288
	protected UILabel costLabel; // 0x70
	[SerializeField] // RVA: 0xC50298 Offset: 0xC50298 VA: 0xC50298
	protected GameObject expBase; // 0x78
	[SerializeField] // RVA: 0xC502A8 Offset: 0xC502A8 VA: 0xC502A8
	protected GameObject lateExpBase; // 0x80
	[SerializeField] // RVA: 0xC502B8 Offset: 0xC502B8 VA: 0xC502B8
	protected UILabel lateExpLabel; // 0x88
	[SerializeField] // RVA: 0xC502C8 Offset: 0xC502C8 VA: 0xC502C8
	protected UISlider expBar; // 0x90
	[SerializeField] // RVA: 0xC502D8 Offset: 0xC502D8 VA: 0xC502D8
	protected ServantStatusLimitCountGauge limitCountGauge; // 0x98
	[SerializeField] // RVA: 0xC502E8 Offset: 0xC502E8 VA: 0xC502E8
	protected UISprite tdStrengthStatusSprite; // 0xA0
	[SerializeField] // RVA: 0xC502F8 Offset: 0xC502F8 VA: 0xC502F8
	protected UISprite[] skillStrengthStatusLabelList; // 0xA8
	[SerializeField] // RVA: 0xC50308 Offset: 0xC50308 VA: 0xC50308
	protected ServantStatusFriendshipGauge friendshipGauge; // 0xB0
	[SerializeField] // RVA: 0xC50318 Offset: 0xC50318 VA: 0xC50318
	protected ShiningIconComponent eventJoinIcon; // 0xB8
	[SerializeField] // RVA: 0xC50328 Offset: 0xC50328 VA: 0xC50328
	protected UISprite eventJoinSprite; // 0xC0
	protected bool isStart; // 0xC8

	// Methods

	// RVA: 0x1B55D58 Offset: 0x1B55D58 VA: 0x1B55D58
	public void .ctor() { }

	// RVA: 0x1B55D60 Offset: 0x1B55D60 VA: 0x1B55D60 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x1B55D68 Offset: 0x1B55D68 VA: 0x1B55D68 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x1B5694C Offset: 0x1B5694C VA: 0x1B5694C
	private int GetServantLimitCount(int svtId, int limitCount) { }

	// RVA: 0x1B569E8 Offset: 0x1B569E8 VA: 0x1B569E8 Slot: 9
	public override void ModifyStatus(ServantStatusListViewItem item) { }

	// RVA: 0x1B56AFC Offset: 0x1B56AFC VA: 0x1B56AFC Slot: 10
	public override void ModifyPortrait(ServantStatusListViewItem item) { }

	// RVA: 0x1B56C2C Offset: 0x1B56C2C VA: 0x1B56C2C Slot: 13
	public override void ModifyRandomLimitCountSetting(ServantStatusListViewItem item) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawNp : ServantStatusListViewItemDraw // TypeDefIndex: 5757
{
	// Fields
	private static readonly int NP_LIST_MAX; // 0x0
	[SerializeField] // RVA: 0xC50338 Offset: 0xC50338 VA: 0xC50338
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xC50348 Offset: 0xC50348 VA: 0xC50348
	protected BoxCollider baseCollider; // 0x28
	[SerializeField] // RVA: 0xC50358 Offset: 0xC50358 VA: 0xC50358
	protected UISprite baseSprite; // 0x30
	[SerializeField] // RVA: 0xC50368 Offset: 0xC50368 VA: 0xC50368
	protected GameObject titleObject; // 0x38
	[SerializeField] // RVA: 0xC50378 Offset: 0xC50378 VA: 0xC50378
	protected ServantStatusNpComponent[] npList; // 0x40
	protected TreasureDvcInfo tdInfo; // 0x48
	protected bool isStart; // 0x50
	private int dispLimitCnt; // 0x54
	protected int npPitch; // 0x58
	protected Vector3 baseSize; // 0x5C
	protected Vector3 titleBasePosition; // 0x68
	protected Vector3 npBasePosition; // 0x74

	// Methods

	// RVA: 0x12A9DBC Offset: 0x12A9DBC VA: 0x12A9DBC
	public void .ctor() { }

	// RVA: 0x12A9E4C Offset: 0x12A9E4C VA: 0x12A9E4C
	protected void Awake() { }

	// RVA: 0x12AA0A8 Offset: 0x12AA0A8 VA: 0x12AA0A8 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x12AA0B0 Offset: 0x12AA0B0 VA: 0x12AA0B0 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x12AB990 Offset: 0x12AB990 VA: 0x12AB990 Slot: 7
	public override void ModifyCommandCard(ServantStatusListViewItem item) { }

	// RVA: 0x12AC1E4 Offset: 0x12AC1E4 VA: 0x12AC1E4
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusListViewItemDrawPortrait : ServantStatusListViewItemDraw // TypeDefIndex: 5758
{
	// Fields
	public const int BUTTON_LINE = 3;
	private readonly int MASK_LABEL_MAX_WIDTH; // 0x1C
	[SerializeField] // RVA: 0xC50388 Offset: 0xC50388 VA: 0xC50388
	protected BoxCollider baseCollider; // 0x20
	[SerializeField] // RVA: 0xC50398 Offset: 0xC50398 VA: 0xC50398
	protected UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xC503A8 Offset: 0xC503A8 VA: 0xC503A8
	protected UISprite titleSprite; // 0x30
	[SerializeField] // RVA: 0xC503B8 Offset: 0xC503B8 VA: 0xC503B8
	protected UILabel explanationLabel; // 0x38
	[SerializeField] // RVA: 0xC503C8 Offset: 0xC503C8 VA: 0xC503C8
	protected GameObject levelButtonBase; // 0x40
	[SerializeField] // RVA: 0xC503D8 Offset: 0xC503D8 VA: 0xC503D8
	protected UITexture[] servantTextureList; // 0x48
	[SerializeField] // RVA: 0xC503E8 Offset: 0xC503E8 VA: 0xC503E8
	protected UISprite[] servantMaskSpriteList; // 0x50
	[SerializeField] // RVA: 0xC503F8 Offset: 0xC503F8 VA: 0xC503F8
	protected UICommonButton[] servantButtonList; // 0x58
	[SerializeField] // RVA: 0xC50408 Offset: 0xC50408 VA: 0xC50408
	protected UIRangeLabel[] charaLevelTitleRangeLabelList; // 0x60
	[SerializeField] // RVA: 0xC50418 Offset: 0xC50418 VA: 0xC50418
	protected UISprite[] charaLevelSpriteList; // 0x68
	[SerializeField] // RVA: 0xC50428 Offset: 0xC50428 VA: 0xC50428
	protected UICommonButton[] charaLevelButtonList; // 0x70
	[SerializeField] // RVA: 0xC50438 Offset: 0xC50438 VA: 0xC50438
	protected GameObject maskBase; // 0x78
	[SerializeField] // RVA: 0xC50448 Offset: 0xC50448 VA: 0xC50448
	protected UISprite maskSprite; // 0x80
	[SerializeField] // RVA: 0xC50458 Offset: 0xC50458 VA: 0xC50458
	protected UILabel maskInfoLabel; // 0x88
	[SerializeField] // RVA: 0xC50468 Offset: 0xC50468 VA: 0xC50468
	private UILabel[] limitCountSealLabel; // 0x90
	[SerializeField] // RVA: 0xC50478 Offset: 0xC50478 VA: 0xC50478
	private GameObject[] limitCountSealObjList; // 0x98
	protected int baseRange; // 0xA0
	protected int buttonPitch; // 0xA4
	protected Vector3 baseSize; // 0xA8
	protected Vector3 titleBasePosition; // 0xB4
	protected Vector3 levelButtonBasePosition; // 0xC0
	protected Vector3 explanationBasePosition; // 0xCC
	private readonly Color QUESTION_MARK_COLOR; // 0xD8

	// Methods

	// RVA: 0x12AC238 Offset: 0x12AC238 VA: 0x12AC238
	public void .ctor() { }

	// RVA: 0x12AC2A4 Offset: 0x12AC2A4 VA: 0x12AC2A4
	protected void Awake() { }

	// RVA: 0x12AC548 Offset: 0x12AC548 VA: 0x12AC548 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x12AC550 Offset: 0x12AC550 VA: 0x12AC550 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x12ADC74 Offset: 0x12ADC74 VA: 0x12ADC74 Slot: 9
	public override void ModifyStatus(ServantStatusListViewItem item) { }

	// RVA: 0x12ACBBC Offset: 0x12ACBBC VA: 0x12ACBBC
	protected void SetupButton(ServantStatusListViewItem item, bool isInit = False) { }

	// RVA: 0x12AD978 Offset: 0x12AD978 VA: 0x12AD978
	private void SetupMask(ServantStatusListViewItem item) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawRandomLimitCountSetting : ServantStatusListViewItemDraw // TypeDefIndex: 5759
{
	// Fields
	private readonly int MASK_LABEL_MAX_WIDTH; // 0x1C
	private readonly Vector2 MASK_SIZE_ALL; // 0x20
	private readonly Vector2 MASK_POS_ALL; // 0x28
	private readonly Vector2 MASK_LABEL_POS_ALL; // 0x30
	private readonly Vector2 MASK_SIZE_TOP; // 0x38
	private readonly Vector2 MASK_POS_TOP; // 0x40
	private readonly Vector2 MASK_LABEL_POS_TOP; // 0x48
	private readonly Vector2 MASK_SIZE_BOTTOM; // 0x50
	private readonly Vector2 MASK_POS_BOTTOM; // 0x58
	private readonly Vector2 MASK_LABEL_POS_BOTTOM; // 0x60
	[SerializeField] // RVA: 0xC50488 Offset: 0xC50488 VA: 0xC50488
	private UISprite baseSprite; // 0x68
	[SerializeField] // RVA: 0xC50498 Offset: 0xC50498 VA: 0xC50498
	private UISprite titleSprite; // 0x70
	[SerializeField] // RVA: 0xC504A8 Offset: 0xC504A8 VA: 0xC504A8
	private GameObject maskBase; // 0x78
	[SerializeField] // RVA: 0xC504B8 Offset: 0xC504B8 VA: 0xC504B8
	private UISprite maskSprite; // 0x80
	[SerializeField] // RVA: 0xC504C8 Offset: 0xC504C8 VA: 0xC504C8
	private UILabel informationLabel; // 0x88
	[SerializeField] // RVA: 0xC504D8 Offset: 0xC504D8 VA: 0xC504D8
	private ServantStatusListViewItemDrawRandomLimitCountSetting.CategoryInfo myServantInfo; // 0x90
	[SerializeField] // RVA: 0xC504E8 Offset: 0xC504E8 VA: 0xC504E8
	private ServantStatusListViewItemDrawRandomLimitCountSetting.CategoryInfo supportServantInfo; // 0x98
	[SerializeField] // RVA: 0xC504F8 Offset: 0xC504F8 VA: 0xC504F8
	private UISprite lineSprite; // 0xA0

	// Methods

	// RVA: 0x12AE6A0 Offset: 0x12AE6A0 VA: 0x12AE6A0
	public void .ctor() { }

	// RVA: 0x12AE824 Offset: 0x12AE824 VA: 0x12AE824 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x12AE82C Offset: 0x12AE82C VA: 0x12AE82C Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x12AE9CC Offset: 0x12AE9CC VA: 0x12AE9CC Slot: 13
	public override void ModifyRandomLimitCountSetting(ServantStatusListViewItem item) { }

	// RVA: 0x12AE880 Offset: 0x12AE880 VA: 0x12AE880
	private void Setup(ServantStatusListViewItem item) { }

	// RVA: 0x12AE9D0 Offset: 0x12AE9D0 VA: 0x12AE9D0
	private void SetupCategoryInfo(ServantStatusListViewItemDrawRandomLimitCountSetting.CategoryInfo target, bool isButtonOn, string buttonText, string explanationText) { }

	// RVA: 0x12AEAB0 Offset: 0x12AEAB0 VA: 0x12AEAB0
	private void SetupMask(ServantStatusListViewItem item) { }

	// RVA: 0x12AEC44 Offset: 0x12AEC44 VA: 0x12AEC44
	private void SetupMask(ServantStatusListViewItemDrawRandomLimitCountSetting.MaskType maskType) { }
}

// Namespace: 
private enum ServantStatusListViewItemDrawRandomLimitCountSetting.MaskType // TypeDefIndex: 5760
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusListViewItemDrawRandomLimitCountSetting.MaskType NONE = 0;
	public const ServantStatusListViewItemDrawRandomLimitCountSetting.MaskType NOT_COMBINE = 1;
	public const ServantStatusListViewItemDrawRandomLimitCountSetting.MaskType ENABLE_OWN_ALL_OPTION = 2;
	public const ServantStatusListViewItemDrawRandomLimitCountSetting.MaskType ENABLE_SUPPORT_ALL_OPTION = 3;
	public const ServantStatusListViewItemDrawRandomLimitCountSetting.MaskType ENABLE_ALL_OPTION = 4;
}

// Namespace: 
[Serializable]
private class ServantStatusListViewItemDrawRandomLimitCountSetting.CategoryInfo // TypeDefIndex: 5761
{
	// Fields
	public UIButton button; // 0x10
	public UILabel buttonLabel; // 0x18
	public UILabel explanationLabel; // 0x20

	// Methods

	// RVA: 0x12AF10C Offset: 0x12AF10C VA: 0x12AF10C
	public void .ctor() { }
}

// Namespace: 
public class ServantStatusListViewItemDrawRandomLimitCountSupport : ServantStatusListViewItemDraw // TypeDefIndex: 5762
{
	// Fields
	private readonly int BUTTON_LABEL_MAX_WIDTH; // 0x1C
	private readonly int MASK_LABEL_MAX_WIDTH; // 0x20
	[SerializeField] // RVA: 0xC50508 Offset: 0xC50508 VA: 0xC50508
	private BoxCollider baseCollider; // 0x28
	[SerializeField] // RVA: 0xC50518 Offset: 0xC50518 VA: 0xC50518
	private UISprite baseSprite; // 0x30
	[SerializeField] // RVA: 0xC50528 Offset: 0xC50528 VA: 0xC50528
	private GameObject titleBase; // 0x38
	[SerializeField] // RVA: 0xC50538 Offset: 0xC50538 VA: 0xC50538
	private UISprite titleSprite; // 0x40
	[SerializeField] // RVA: 0xC50548 Offset: 0xC50548 VA: 0xC50548
	private GameObject maskBase; // 0x48
	[SerializeField] // RVA: 0xC50558 Offset: 0xC50558 VA: 0xC50558
	private UISprite maskSprite; // 0x50
	[SerializeField] // RVA: 0xC50568 Offset: 0xC50568 VA: 0xC50568
	private UILabel informationLabel; // 0x58
	[SerializeField] // RVA: 0xC50578 Offset: 0xC50578 VA: 0xC50578
	private GameObject buttonBaseObj; // 0x60
	[SerializeField] // RVA: 0xC50588 Offset: 0xC50588 VA: 0xC50588
	private UICommonButton reflectOwnSettingButton; // 0x68
	[SerializeField] // RVA: 0xC50598 Offset: 0xC50598 VA: 0xC50598
	private UIGrid limitCountButtonGrid; // 0x70
	[SerializeField] // RVA: 0xC505A8 Offset: 0xC505A8 VA: 0xC505A8
	private UICommonButton[] limitCountButtonList; // 0x78
	[SerializeField] // RVA: 0xC505B8 Offset: 0xC505B8 VA: 0xC505B8
	private UILabel explanationLabel; // 0x80
	protected Vector3 baseSize; // 0x88
	protected Vector3 titleBasePosition; // 0x94
	protected Vector3 buttonBasePosition; // 0xA0
	protected Vector3 explanationBasePosition; // 0xAC

	// Methods

	// RVA: 0x12AF114 Offset: 0x12AF114 VA: 0x12AF114
	public void .ctor() { }

	// RVA: 0x12AF128 Offset: 0x12AF128 VA: 0x12AF128
	private void Awake() { }

	// RVA: 0x12AF288 Offset: 0x12AF288 VA: 0x12AF288 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x12AF290 Offset: 0x12AF290 VA: 0x12AF290 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x12AFB84 Offset: 0x12AFB84 VA: 0x12AFB84 Slot: 12
	public override void ModifyRandomLimitCountSupport(ServantStatusListViewItem item) { }

	// RVA: 0x12AF2EC Offset: 0x12AF2EC VA: 0x12AF2EC
	private void Setup(ServantStatusListViewItem item) { }

	// RVA: 0x12AFE5C Offset: 0x12AFE5C VA: 0x12AFE5C
	private void DeactivateLimitCountButtonList() { }

	// RVA: 0x12AFEFC Offset: 0x12AFEFC VA: 0x12AFEFC
	private UICommonButton GetLimitCountButton(int index) { }

	// RVA: 0x12AFF54 Offset: 0x12AFF54 VA: 0x12AFF54
	private void SetupMask(ServantStatusListViewItemDrawRandomLimitCountSupport.MaskType maskType) { }

	// RVA: 0x12AFBA8 Offset: 0x12AFBA8 VA: 0x12AFBA8
	private void SetButtonText(UICommonButton targetButton, string text, bool isOpen, bool isSelected) { }

	// RVA: 0x12AF86C Offset: 0x12AF86C VA: 0x12AF86C
	private void Layout() { }
}

// Namespace: 
private enum ServantStatusListViewItemDrawRandomLimitCountSupport.MaskType // TypeDefIndex: 5763
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusListViewItemDrawRandomLimitCountSupport.MaskType NONE = 0;
	public const ServantStatusListViewItemDrawRandomLimitCountSupport.MaskType NOT_COMBINE = 1;
	public const ServantStatusListViewItemDrawRandomLimitCountSupport.MaskType ENABLE_SUPPORT_ALL_OPTION = 2;
	public const ServantStatusListViewItemDrawRandomLimitCountSupport.MaskType ENABLE_SUPPORT_SETTING = 3;
}

// Namespace: 
public class ServantStatusListViewItemDrawServantQuest : ServantStatusListViewItemDraw // TypeDefIndex: 5764
{
	// Fields
	protected static int QuestBoardSize; // 0x0
	protected static int QuestBoardPitch; // 0x4
	[SerializeField] // RVA: 0xC505C8 Offset: 0xC505C8 VA: 0xC505C8
	protected BoxCollider baseCollider; // 0x20
	[SerializeField] // RVA: 0xC505D8 Offset: 0xC505D8 VA: 0xC505D8
	protected UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xC505E8 Offset: 0xC505E8 VA: 0xC505E8
	protected UISprite titleSprite; // 0x30
	[SerializeField] // RVA: 0xC505F8 Offset: 0xC505F8 VA: 0xC505F8
	protected UILabel explanationLabel; // 0x38
	[SerializeField] // RVA: 0xC50608 Offset: 0xC50608 VA: 0xC50608
	protected UILabel explanation2Label; // 0x40
	[SerializeField] // RVA: 0xC50618 Offset: 0xC50618 VA: 0xC50618
	protected GameObject titleBase; // 0x48
	[SerializeField] // RVA: 0xC50628 Offset: 0xC50628 VA: 0xC50628
	protected GameObject interludeBase; // 0x50
	[SerializeField] // RVA: 0xC50638 Offset: 0xC50638 VA: 0xC50638
	protected GameObject rainforcementBase; // 0x58
	[SerializeField] // RVA: 0xC50648 Offset: 0xC50648 VA: 0xC50648
	protected GameObject interludeQuestBase; // 0x60
	[SerializeField] // RVA: 0xC50658 Offset: 0xC50658 VA: 0xC50658
	protected GameObject rainforcementQuestBase; // 0x68
	[SerializeField] // RVA: 0xC50668 Offset: 0xC50668 VA: 0xC50668
	protected string questBoardPrefabPath; // 0x70
	[SerializeField] // RVA: 0xC50678 Offset: 0xC50678 VA: 0xC50678
	protected GameObject inputMessageObject; // 0x78
	protected bool isInit; // 0x80
	protected GameObject loadPrefab; // 0x88
	protected ServantStatusQuestBoardManager questBoardManager; // 0x90
	protected List<ServantStatusQuestBoardDraw> questBoardList; // 0x98

	// Methods

	// RVA: 0x12B0138 Offset: 0x12B0138 VA: 0x12B0138
	public void .ctor() { }

	// RVA: 0x12B01A8 Offset: 0x12B01A8 VA: 0x12B01A8
	protected void OnDestroy() { }

	// RVA: 0x12B0284 Offset: 0x12B0284 VA: 0x12B0284 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x12B028C Offset: 0x12B028C VA: 0x12B028C
	private GameObject CreateQuestBoardPrefab(GameObject parent) { }

	// RVA: 0x12B0428 Offset: 0x12B0428 VA: 0x12B0428 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x12B3330 Offset: 0x12B3330 VA: 0x12B3330
	public void OnChangeAlphaAnim() { }

	// RVA: 0x12B34A0 Offset: 0x12B34A0 VA: 0x12B34A0
	protected void Update() { }

	// RVA: 0x12B384C Offset: 0x12B384C VA: 0x12B384C
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusListViewItemDrawSkill : ServantStatusListViewItemDraw // TypeDefIndex: 5765
{
	// Fields
	[SerializeField] // RVA: 0xC50688 Offset: 0xC50688 VA: 0xC50688
	protected BoxCollider baseCollider; // 0x20
	[SerializeField] // RVA: 0xC50698 Offset: 0xC50698 VA: 0xC50698
	protected UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xC506A8 Offset: 0xC506A8 VA: 0xC506A8
	protected UISprite titleSprite; // 0x30
	[SerializeField] // RVA: 0xC506B8 Offset: 0xC506B8 VA: 0xC506B8
	protected UILabel explanationLabel; // 0x38
	[SerializeField] // RVA: 0xC506C8 Offset: 0xC506C8 VA: 0xC506C8
	protected GameObject[] skillBaseList; // 0x40
	[SerializeField] // RVA: 0xC506D8 Offset: 0xC506D8 VA: 0xC506D8
	protected SkillIconComponent[] skillIconList; // 0x48
	[SerializeField] // RVA: 0xC506E8 Offset: 0xC506E8 VA: 0xC506E8
	protected UISprite[] chargeTitleSpriteList; // 0x50
	[SerializeField] // RVA: 0xC506F8 Offset: 0xC506F8 VA: 0xC506F8
	protected UILabel[] chargeDataLabelList; // 0x58
	[SerializeField] // RVA: 0xC50708 Offset: 0xC50708 VA: 0xC50708
	private UILabel[] skillNameLabelList; // 0x60
	private ServantSkillStrengthStatus[] skillStrengthStatus; // 0x68
	[SerializeField] // RVA: 0xC50718 Offset: 0xC50718 VA: 0xC50718
	protected UILabel[] skillExplanationLabelList; // 0x70
	protected int skillPitch; // 0x78
	protected Vector3 baseSize; // 0x7C
	protected Vector3 titleBasePosition; // 0x88
	protected Vector3 skillBasePosition; // 0x94
	private static readonly int DETAIL_FONT_SIZE; // 0x0
	private static readonly int MAX_HEIGHT; // 0x4
	private static readonly int ADJUST_HEIGHT; // 0x8

	// Methods

	// RVA: 0x12B38B0 Offset: 0x12B38B0 VA: 0x12B38B0
	public void .ctor() { }

	// RVA: 0x12B39F0 Offset: 0x12B39F0 VA: 0x12B39F0
	protected void Awake() { }

	// RVA: 0x12B3C4C Offset: 0x12B3C4C VA: 0x12B3C4C Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x12B3C54 Offset: 0x12B3C54 VA: 0x12B3C54 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }

	// RVA: 0x12B49B0 Offset: 0x12B49B0 VA: 0x12B49B0
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusListViewItemDrawTdSpeed : ServantStatusListViewItemDraw // TypeDefIndex: 5766
{
	// Fields
	[SerializeField] // RVA: 0xC50728 Offset: 0xC50728 VA: 0xC50728
	protected UILabel explanationLabel; // 0x20
	[SerializeField] // RVA: 0xC50738 Offset: 0xC50738 VA: 0xC50738
	protected UIRangeLabel[] tdSpeedRangeLabelList; // 0x28
	[SerializeField] // RVA: 0xC50748 Offset: 0xC50748 VA: 0xC50748
	protected UICommonButton[] tdSpeedButtonList; // 0x30
	[SerializeField] // RVA: 0xC50758 Offset: 0xC50758 VA: 0xC50758
	protected UISprite[] tdSpeedButtonSpriteList; // 0x38
	[SerializeField] // RVA: 0xC50768 Offset: 0xC50768 VA: 0xC50768
	protected GameObject clickEventObject; // 0x40

	// Methods

	// RVA: 0x12B4A24 Offset: 0x12B4A24 VA: 0x12B4A24
	public void .ctor() { }

	// RVA: 0x12B4A2C Offset: 0x12B4A2C VA: 0x12B4A2C
	protected void Awake() { }

	// RVA: 0x12B4A30 Offset: 0x12B4A30 VA: 0x12B4A30 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }

	// RVA: 0x12B4A38 Offset: 0x12B4A38 VA: 0x12B4A38 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, ServantStatusListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public class ServantStatusListViewItemDrawTerminal : ServantStatusListViewItemDraw // TypeDefIndex: 5767
{
	// Methods

	// RVA: 0x12B4E38 Offset: 0x12B4E38 VA: 0x12B4E38
	public void .ctor() { }

	// RVA: 0x12B4E40 Offset: 0x12B4E40 VA: 0x12B4E40 Slot: 4
	public override ServantStatusListViewItemDraw.Kind GetKind() { }
}

// Namespace: 
public class ServantStatusListViewManager : MonoBehaviour // TypeDefIndex: 5768
{
	// Fields
	protected static int LIST_BLANK; // 0x0
	public UIScrollView scrollView; // 0x18
	public UIScrollBar scrollBar; // 0x20
	public GameObject listParent; // 0x28
	protected ServantStatusListViewItem mainInfo; // 0x30
	protected List<ServantStatusListViewObject> objectList; // 0x38
	protected bool isInput; // 0x40
	private List<ServantStatusListViewItemDraw.Kind> currentKindList; // 0x48
	protected Vector3 oldScrollPosition; // 0x50
	protected bool isScrollRefresh; // 0x5C
	[SerializeField] // RVA: 0xC50778 Offset: 0xC50778 VA: 0xC50778
	protected GameObject[] statusObjectList; // 0x60
	protected ServantStatusListViewManager.InitMode initMode; // 0x68
	protected static ServantStatusListViewItemDraw.Kind[] normalKindList; // 0x8
	protected static ServantStatusListViewItemDraw.Kind[] equipKindList; // 0x10
	protected static ServantStatusListViewItemDraw.Kind[] npcFollowerEquipKindList; // 0x18
	protected static ServantStatusListViewItemDraw.Kind[] commandCodeKindList; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC50788 Offset: 0xC50788 VA: 0xC50788
	[DebuggerBrowsableAttribute] // RVA: 0xC50788 Offset: 0xC50788 VA: 0xC50788
	private ServantStatusListViewManager.CallbackFunc callbackFunc; // 0x70
	protected int callbackCount; // 0x78

	// Properties
	public bool IsInput { get; set; }

	// Methods

	// RVA: 0x12B4E48 Offset: 0x12B4E48 VA: 0x12B4E48
	public void .ctor() { }

	// RVA: 0x12B4EE8 Offset: 0x12B4EE8 VA: 0x12B4EE8
	public bool get_IsInput() { }
