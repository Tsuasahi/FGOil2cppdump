
	// Methods

	// RVA: 0x2094C4C Offset: 0x2094C4C VA: 0x2094C4C
	public void .ctor() { }

	// RVA: 0x2094C5C Offset: 0x2094C5C VA: 0x2094C5C Slot: 28
	public override void Reset() { }

	// RVA: 0x2094C74 Offset: 0x2094C74 VA: 0x2094C74 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2095014 Offset: 0x2095014 VA: 0x2095014 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2094CB0 Offset: 0x2094CB0 VA: 0x2094CB0
	private void DoVector2Operator() { }
}

// Namespace: 
public enum Vector2Operator.Vector2Operation // TypeDefIndex: 13143
{
	// Fields
	public int value__; // 0x0
	public const Vector2Operator.Vector2Operation DotProduct = 0;
	public const Vector2Operator.Vector2Operation Distance = 1;
	public const Vector2Operator.Vector2Operation Angle = 2;
	public const Vector2Operator.Vector2Operation Add = 3;
	public const Vector2Operator.Vector2Operation Subtract = 4;
	public const Vector2Operator.Vector2Operation Multiply = 5;
	public const Vector2Operator.Vector2Operation Divide = 6;
	public const Vector2Operator.Vector2Operation Min = 7;
	public const Vector2Operator.Vector2Operation Max = 8;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FA38 Offset: 0xC3FA38 VA: 0xC3FA38
[TooltipAttribute] // RVA: 0xC3FA38 Offset: 0xC3FA38 VA: 0xC3FA38
public class Vector2PerSecond : FsmStateAction // TypeDefIndex: 13144
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC4D24 Offset: 0xCC4D24 VA: 0xCC4D24
	[UIHintAttribute] // RVA: 0xCC4D24 Offset: 0xCC4D24 VA: 0xCC4D24
	[TooltipAttribute] // RVA: 0xCC4D24 Offset: 0xCC4D24 VA: 0xCC4D24
	public FsmVector2 vector2Variable; // 0x50
	[TooltipAttribute] // RVA: 0xCC4D84 Offset: 0xCC4D84 VA: 0xCC4D84
	public bool everyFrame; // 0x58

	// Methods

	// RVA: 0x2095018 Offset: 0x2095018 VA: 0x2095018
	public void .ctor() { }

	// RVA: 0x2095020 Offset: 0x2095020 VA: 0x2095020 Slot: 28
	public override void Reset() { }

	// RVA: 0x2095030 Offset: 0x2095030 VA: 0x2095030 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2095130 Offset: 0x2095130 VA: 0x2095130 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FA88 Offset: 0xC3FA88 VA: 0xC3FA88
[TooltipAttribute] // RVA: 0xC3FA88 Offset: 0xC3FA88 VA: 0xC3FA88
public class Vector2RotateTowards : FsmStateAction // TypeDefIndex: 13145
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC4DBC Offset: 0xCC4DBC VA: 0xCC4DBC
	[TooltipAttribute] // RVA: 0xCC4DBC Offset: 0xCC4DBC VA: 0xCC4DBC
	public FsmVector2 currentDirection; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCC4E08 Offset: 0xCC4E08 VA: 0xCC4E08
	[TooltipAttribute] // RVA: 0xCC4E08 Offset: 0xCC4E08 VA: 0xCC4E08
	public FsmVector2 targetDirection; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCC4E54 Offset: 0xCC4E54 VA: 0xCC4E54
	[TooltipAttribute] // RVA: 0xCC4E54 Offset: 0xCC4E54 VA: 0xCC4E54
	public FsmFloat rotateSpeed; // 0x60
	private Vector3 current; // 0x68
	private Vector3 target; // 0x74

	// Methods

	// RVA: 0x2095208 Offset: 0x2095208 VA: 0x2095208
	public void .ctor() { }

	// RVA: 0x2095210 Offset: 0x2095210 VA: 0x2095210 Slot: 28
	public override void Reset() { }

	// RVA: 0x20952DC Offset: 0x20952DC VA: 0x20952DC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20953D8 Offset: 0x20953D8 VA: 0x20953D8 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FAD8 Offset: 0xC3FAD8 VA: 0xC3FAD8
[TooltipAttribute] // RVA: 0xC3FAD8 Offset: 0xC3FAD8 VA: 0xC3FAD8
public class Vector2Subtract : FsmStateAction // TypeDefIndex: 13146
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC4EA0 Offset: 0xCC4EA0 VA: 0xCC4EA0
	[UIHintAttribute] // RVA: 0xCC4EA0 Offset: 0xCC4EA0 VA: 0xCC4EA0
	[TooltipAttribute] // RVA: 0xCC4EA0 Offset: 0xCC4EA0 VA: 0xCC4EA0
	public FsmVector2 vector2Variable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCC4F00 Offset: 0xCC4F00 VA: 0xCC4F00
	[TooltipAttribute] // RVA: 0xCC4F00 Offset: 0xCC4F00 VA: 0xCC4F00
	public FsmVector2 subtractVector; // 0x58
	[TooltipAttribute] // RVA: 0xCC4F4C Offset: 0xCC4F4C VA: 0xCC4F4C
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x209554C Offset: 0x209554C VA: 0x209554C
	public void .ctor() { }

	// RVA: 0x2095554 Offset: 0x2095554 VA: 0x2095554 Slot: 28
	public override void Reset() { }

	// RVA: 0x20955D8 Offset: 0x20955D8 VA: 0x20955D8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2095700 Offset: 0x2095700 VA: 0x2095700 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FB28 Offset: 0xC3FB28 VA: 0xC3FB28
[TooltipAttribute] // RVA: 0xC3FB28 Offset: 0xC3FB28 VA: 0xC3FB28
public class Vector3Add : FsmStateAction // TypeDefIndex: 13147
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC4F84 Offset: 0xCC4F84 VA: 0xCC4F84
	[UIHintAttribute] // RVA: 0xCC4F84 Offset: 0xCC4F84 VA: 0xCC4F84
	public FsmVector3 vector3Variable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCC4FC0 Offset: 0xCC4FC0 VA: 0xCC4FC0
	public FsmVector3 addVector; // 0x58
	public bool everyFrame; // 0x60
	public bool perSecond; // 0x61

	// Methods

	// RVA: 0x20957F4 Offset: 0x20957F4 VA: 0x20957F4
	public void .ctor() { }

	// RVA: 0x20957FC Offset: 0x20957FC VA: 0x20957FC Slot: 28
	public override void Reset() { }

	// RVA: 0x2095880 Offset: 0x2095880 VA: 0x2095880 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2095A48 Offset: 0x2095A48 VA: 0x2095A48 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x20958BC Offset: 0x20958BC VA: 0x20958BC
	private void DoVector3Add() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FB78 Offset: 0xC3FB78 VA: 0xC3FB78
[TooltipAttribute] // RVA: 0xC3FB78 Offset: 0xC3FB78 VA: 0xC3FB78
public class Vector3AddXYZ : FsmStateAction // TypeDefIndex: 13148
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC4FD0 Offset: 0xCC4FD0 VA: 0xCC4FD0
	[UIHintAttribute] // RVA: 0xCC4FD0 Offset: 0xCC4FD0 VA: 0xCC4FD0
	public FsmVector3 vector3Variable; // 0x50
	public FsmFloat addX; // 0x58
	public FsmFloat addY; // 0x60
	public FsmFloat addZ; // 0x68
	public bool everyFrame; // 0x70
	public bool perSecond; // 0x71

	// Methods

	// RVA: 0x2095A4C Offset: 0x2095A4C VA: 0x2095A4C
	public void .ctor() { }

	// RVA: 0x2095A54 Offset: 0x2095A54 VA: 0x2095A54 Slot: 28
	public override void Reset() { }

	// RVA: 0x2095AA8 Offset: 0x2095AA8 VA: 0x2095AA8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2095CD0 Offset: 0x2095CD0 VA: 0x2095CD0 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2095AE4 Offset: 0x2095AE4 VA: 0x2095AE4
	private void DoVector3AddXYZ() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FBC8 Offset: 0xC3FBC8 VA: 0xC3FBC8
[TooltipAttribute] // RVA: 0xC3FBC8 Offset: 0xC3FBC8 VA: 0xC3FBC8
public class Vector3ClampMagnitude : FsmStateAction // TypeDefIndex: 13149
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC500C Offset: 0xCC500C VA: 0xCC500C
	[UIHintAttribute] // RVA: 0xCC500C Offset: 0xCC500C VA: 0xCC500C
	public FsmVector3 vector3Variable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCC5048 Offset: 0xCC5048 VA: 0xCC5048
	public FsmFloat maxLength; // 0x58
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x2095CD4 Offset: 0x2095CD4 VA: 0x2095CD4
	public void .ctor() { }

	// RVA: 0x2095CDC Offset: 0x2095CDC VA: 0x2095CDC Slot: 28
	public override void Reset() { }

	// RVA: 0x2095CE8 Offset: 0x2095CE8 VA: 0x2095CE8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2095E20 Offset: 0x2095E20 VA: 0x2095E20 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2095D24 Offset: 0x2095D24 VA: 0x2095D24
	private void DoVector3ClampMagnitude() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FC18 Offset: 0xC3FC18 VA: 0xC3FC18
[TooltipAttribute] // RVA: 0xC3FC18 Offset: 0xC3FC18 VA: 0xC3FC18
public class Vector3HighPassFilter : FsmStateAction // TypeDefIndex: 13150
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC5058 Offset: 0xCC5058 VA: 0xCC5058
	[UIHintAttribute] // RVA: 0xCC5058 Offset: 0xCC5058 VA: 0xCC5058
	[TooltipAttribute] // RVA: 0xCC5058 Offset: 0xCC5058 VA: 0xCC5058
	public FsmVector3 vector3Variable; // 0x50
	[TooltipAttribute] // RVA: 0xCC50B8 Offset: 0xCC50B8 VA: 0xCC50B8
	public FsmFloat filteringFactor; // 0x58
	private Vector3 filteredVector; // 0x60

	// Methods

	// RVA: 0x2095E24 Offset: 0x2095E24 VA: 0x2095E24
	public void .ctor() { }

	// RVA: 0x2095E2C Offset: 0x2095E2C VA: 0x2095E2C Slot: 28
	public override void Reset() { }

	// RVA: 0x2095E60 Offset: 0x2095E60 VA: 0x2095E60 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2095F14 Offset: 0x2095F14 VA: 0x2095F14 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FC68 Offset: 0xC3FC68 VA: 0xC3FC68
[TooltipAttribute] // RVA: 0xC3FC68 Offset: 0xC3FC68 VA: 0xC3FC68
public class Vector3Interpolate : FsmStateAction // TypeDefIndex: 13151
{
	// Fields
	public InterpolationType mode; // 0x4C
	[RequiredFieldAttribute] // RVA: 0xCC50F0 Offset: 0xCC50F0 VA: 0xCC50F0
	public FsmVector3 fromVector; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCC5100 Offset: 0xCC5100 VA: 0xCC5100
	public FsmVector3 toVector; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCC5110 Offset: 0xCC5110 VA: 0xCC5110
	public FsmFloat time; // 0x60
	[RequiredFieldAttribute] // RVA: 0xCC5120 Offset: 0xCC5120 VA: 0xCC5120
	[UIHintAttribute] // RVA: 0xCC5120 Offset: 0xCC5120 VA: 0xCC5120
	public FsmVector3 storeResult; // 0x68
	public FsmEvent finishEvent; // 0x70
	[TooltipAttribute] // RVA: 0xCC515C Offset: 0xCC515C VA: 0xCC515C
	public bool realTime; // 0x78
	private float startTime; // 0x7C
	private float currentTime; // 0x80

	// Methods

	// RVA: 0x2096158 Offset: 0x2096158 VA: 0x2096158
	public void .ctor() { }

	// RVA: 0x2096160 Offset: 0x2096160 VA: 0x2096160 Slot: 28
	public override void Reset() { }

	// RVA: 0x2096234 Offset: 0x2096234 VA: 0x2096234 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20962A0 Offset: 0x20962A0 VA: 0x20962A0 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FCB8 Offset: 0xC3FCB8 VA: 0xC3FCB8
[TooltipAttribute] // RVA: 0xC3FCB8 Offset: 0xC3FCB8 VA: 0xC3FCB8
public class Vector3Invert : FsmStateAction // TypeDefIndex: 13152
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC5194 Offset: 0xCC5194 VA: 0xCC5194
	[UIHintAttribute] // RVA: 0xCC5194 Offset: 0xCC5194 VA: 0xCC5194
	public FsmVector3 vector3Variable; // 0x50
	public bool everyFrame; // 0x58

	// Methods

	// RVA: 0x20964CC Offset: 0x20964CC VA: 0x20964CC
	public void .ctor() { }

	// RVA: 0x20964D4 Offset: 0x20964D4 VA: 0x20964D4 Slot: 28
	public override void Reset() { }

	// RVA: 0x20964E0 Offset: 0x20964E0 VA: 0x20964E0 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20965E4 Offset: 0x20965E4 VA: 0x20965E4 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FD08 Offset: 0xC3FD08 VA: 0xC3FD08
[TooltipAttribute] // RVA: 0xC3FD08 Offset: 0xC3FD08 VA: 0xC3FD08
public class Vector3Lerp : FsmStateAction // TypeDefIndex: 13153
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC51D0 Offset: 0xCC51D0 VA: 0xCC51D0
	[TooltipAttribute] // RVA: 0xCC51D0 Offset: 0xCC51D0 VA: 0xCC51D0
	public FsmVector3 fromVector; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCC521C Offset: 0xCC521C VA: 0xCC521C
	[TooltipAttribute] // RVA: 0xCC521C Offset: 0xCC521C VA: 0xCC521C
	public FsmVector3 toVector; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCC5268 Offset: 0xCC5268 VA: 0xCC5268
	[TooltipAttribute] // RVA: 0xCC5268 Offset: 0xCC5268 VA: 0xCC5268
	public FsmFloat amount; // 0x60
	[RequiredFieldAttribute] // RVA: 0xCC52B4 Offset: 0xCC52B4 VA: 0xCC52B4
	[UIHintAttribute] // RVA: 0xCC52B4 Offset: 0xCC52B4 VA: 0xCC52B4
	[TooltipAttribute] // RVA: 0xCC52B4 Offset: 0xCC52B4 VA: 0xCC52B4
	public FsmVector3 storeResult; // 0x68
	[TooltipAttribute] // RVA: 0xCC5314 Offset: 0xCC5314 VA: 0xCC5314
	public bool everyFrame; // 0x70

	// Methods

	// RVA: 0x20966C0 Offset: 0x20966C0 VA: 0x20966C0
	public void .ctor() { }

	// RVA: 0x20966C8 Offset: 0x20966C8 VA: 0x20966C8 Slot: 28
	public override void Reset() { }

	// RVA: 0x209678C Offset: 0x209678C VA: 0x209678C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2096914 Offset: 0x2096914 VA: 0x2096914 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x20967C8 Offset: 0x20967C8 VA: 0x20967C8
	private void DoVector3Lerp() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FD58 Offset: 0xC3FD58 VA: 0xC3FD58
[TooltipAttribute] // RVA: 0xC3FD58 Offset: 0xC3FD58 VA: 0xC3FD58
public class Vector3LowPassFilter : FsmStateAction // TypeDefIndex: 13154
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC534C Offset: 0xCC534C VA: 0xCC534C
	[UIHintAttribute] // RVA: 0xCC534C Offset: 0xCC534C VA: 0xCC534C
	[TooltipAttribute] // RVA: 0xCC534C Offset: 0xCC534C VA: 0xCC534C
	public FsmVector3 vector3Variable; // 0x50
	[TooltipAttribute] // RVA: 0xCC53AC Offset: 0xCC53AC VA: 0xCC53AC
	public FsmFloat filteringFactor; // 0x58
	private Vector3 filteredVector; // 0x60

	// Methods

	// RVA: 0x2096918 Offset: 0x2096918 VA: 0x2096918
	public void .ctor() { }

	// RVA: 0x2096920 Offset: 0x2096920 VA: 0x2096920 Slot: 28
	public override void Reset() { }

	// RVA: 0x2096954 Offset: 0x2096954 VA: 0x2096954 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2096A08 Offset: 0x2096A08 VA: 0x2096A08 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FDA8 Offset: 0xC3FDA8 VA: 0xC3FDA8
[TooltipAttribute] // RVA: 0xC3FDA8 Offset: 0xC3FDA8 VA: 0xC3FDA8
public class Vector3Multiply : FsmStateAction // TypeDefIndex: 13155
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC53E4 Offset: 0xCC53E4 VA: 0xCC53E4
	[UIHintAttribute] // RVA: 0xCC53E4 Offset: 0xCC53E4 VA: 0xCC53E4
	public FsmVector3 vector3Variable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCC5420 Offset: 0xCC5420 VA: 0xCC5420
	public FsmFloat multiplyBy; // 0x58
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x2096BD8 Offset: 0x2096BD8 VA: 0x2096BD8
	public void .ctor() { }

	// RVA: 0x2096BE0 Offset: 0x2096BE0 VA: 0x2096BE0 Slot: 28
	public override void Reset() { }

	// RVA: 0x2096C14 Offset: 0x2096C14 VA: 0x2096C14 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2096D44 Offset: 0x2096D44 VA: 0x2096D44 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FDF8 Offset: 0xC3FDF8 VA: 0xC3FDF8
[TooltipAttribute] // RVA: 0xC3FDF8 Offset: 0xC3FDF8 VA: 0xC3FDF8
public class Vector3Normalize : FsmStateAction // TypeDefIndex: 13156
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC5430 Offset: 0xCC5430 VA: 0xCC5430
	[UIHintAttribute] // RVA: 0xCC5430 Offset: 0xCC5430 VA: 0xCC5430
	public FsmVector3 vector3Variable; // 0x50
	public bool everyFrame; // 0x58

	// Methods

	// RVA: 0x2096E40 Offset: 0x2096E40 VA: 0x2096E40
	public void .ctor() { }

	// RVA: 0x2096E48 Offset: 0x2096E48 VA: 0x2096E48 Slot: 28
	public override void Reset() { }

	// RVA: 0x2096E54 Offset: 0x2096E54 VA: 0x2096E54 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2096F04 Offset: 0x2096F04 VA: 0x2096F04 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FE48 Offset: 0xC3FE48 VA: 0xC3FE48
[TooltipAttribute] // RVA: 0xC3FE48 Offset: 0xC3FE48 VA: 0xC3FE48
public class Vector3Operator : FsmStateAction // TypeDefIndex: 13157
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC546C Offset: 0xCC546C VA: 0xCC546C
	public FsmVector3 vector1; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCC547C Offset: 0xCC547C VA: 0xCC547C
	public FsmVector3 vector2; // 0x58
	public Vector3Operator.Vector3Operation operation; // 0x60
	[UIHintAttribute] // RVA: 0xCC548C Offset: 0xCC548C VA: 0xCC548C
	public FsmVector3 storeVector3Result; // 0x68
	[UIHintAttribute] // RVA: 0xCC54A0 Offset: 0xCC54A0 VA: 0xCC54A0
	public FsmFloat storeFloatResult; // 0x70
	public bool everyFrame; // 0x78

	// Methods

	// RVA: 0x2096F9C Offset: 0x2096F9C VA: 0x2096F9C
	public void .ctor() { }

	// RVA: 0x2096FAC Offset: 0x2096FAC VA: 0x2096FAC Slot: 28
	public override void Reset() { }

	// RVA: 0x2096FC4 Offset: 0x2096FC4 VA: 0x2096FC4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20974A0 Offset: 0x20974A0 VA: 0x20974A0 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2097000 Offset: 0x2097000 VA: 0x2097000
	private void DoVector3Operator() { }
}

// Namespace: 
public enum Vector3Operator.Vector3Operation // TypeDefIndex: 13158
{
	// Fields
	public int value__; // 0x0
	public const Vector3Operator.Vector3Operation DotProduct = 0;
	public const Vector3Operator.Vector3Operation CrossProduct = 1;
	public const Vector3Operator.Vector3Operation Distance = 2;
	public const Vector3Operator.Vector3Operation Angle = 3;
	public const Vector3Operator.Vector3Operation Project = 4;
	public const Vector3Operator.Vector3Operation Reflect = 5;
	public const Vector3Operator.Vector3Operation Add = 6;
	public const Vector3Operator.Vector3Operation Subtract = 7;
	public const Vector3Operator.Vector3Operation Multiply = 8;
	public const Vector3Operator.Vector3Operation Divide = 9;
	public const Vector3Operator.Vector3Operation Min = 10;
	public const Vector3Operator.Vector3Operation Max = 11;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FE98 Offset: 0xC3FE98 VA: 0xC3FE98
[TooltipAttribute] // RVA: 0xC3FE98 Offset: 0xC3FE98 VA: 0xC3FE98
public class Vector3PerSecond : FsmStateAction // TypeDefIndex: 13159
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC54B4 Offset: 0xCC54B4 VA: 0xCC54B4
	[UIHintAttribute] // RVA: 0xCC54B4 Offset: 0xCC54B4 VA: 0xCC54B4
	public FsmVector3 vector3Variable; // 0x50
	public bool everyFrame; // 0x58

	// Methods

	// RVA: 0x20974A4 Offset: 0x20974A4 VA: 0x20974A4
	public void .ctor() { }

	// RVA: 0x20974AC Offset: 0x20974AC VA: 0x20974AC Slot: 28
	public override void Reset() { }

	// RVA: 0x20974B8 Offset: 0x20974B8 VA: 0x20974B8 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20975C8 Offset: 0x20975C8 VA: 0x20975C8 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FEE8 Offset: 0xC3FEE8 VA: 0xC3FEE8
[TooltipAttribute] // RVA: 0xC3FEE8 Offset: 0xC3FEE8 VA: 0xC3FEE8
public class Vector3RotateTowards : FsmStateAction // TypeDefIndex: 13160
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC54F0 Offset: 0xCC54F0 VA: 0xCC54F0
	public FsmVector3 currentDirection; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCC5500 Offset: 0xCC5500 VA: 0xCC5500
	public FsmVector3 targetDirection; // 0x58
	[RequiredFieldAttribute] // RVA: 0xCC5510 Offset: 0xCC5510 VA: 0xCC5510
	[TooltipAttribute] // RVA: 0xCC5510 Offset: 0xCC5510 VA: 0xCC5510
	public FsmFloat rotateSpeed; // 0x60
	[RequiredFieldAttribute] // RVA: 0xCC555C Offset: 0xCC555C VA: 0xCC555C
	[TooltipAttribute] // RVA: 0xCC555C Offset: 0xCC555C VA: 0xCC555C
	public FsmFloat maxMagnitude; // 0x68

	// Methods

	// RVA: 0x20976B0 Offset: 0x20976B0 VA: 0x20976B0
	public void .ctor() { }

	// RVA: 0x20976B8 Offset: 0x20976B8 VA: 0x20976B8 Slot: 28
	public override void Reset() { }

	// RVA: 0x2097794 Offset: 0x2097794 VA: 0x2097794 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FF38 Offset: 0xC3FF38 VA: 0xC3FF38
[TooltipAttribute] // RVA: 0xC3FF38 Offset: 0xC3FF38 VA: 0xC3FF38
public class Vector3Subtract : FsmStateAction // TypeDefIndex: 13161
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC55A8 Offset: 0xCC55A8 VA: 0xCC55A8
	[UIHintAttribute] // RVA: 0xCC55A8 Offset: 0xCC55A8 VA: 0xCC55A8
	public FsmVector3 vector3Variable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCC55E4 Offset: 0xCC55E4 VA: 0xCC55E4
	public FsmVector3 subtractVector; // 0x58
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x2097918 Offset: 0x2097918 VA: 0x2097918
	public void .ctor() { }

	// RVA: 0x2097920 Offset: 0x2097920 VA: 0x2097920 Slot: 28
	public override void Reset() { }

	// RVA: 0x20979A4 Offset: 0x20979A4 VA: 0x20979A4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2097AF0 Offset: 0x2097AF0 VA: 0x2097AF0 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FF88 Offset: 0xC3FF88 VA: 0xC3FF88
[TooltipAttribute] // RVA: 0xC3FF88 Offset: 0xC3FF88 VA: 0xC3FF88
public class Wait : FsmStateAction // TypeDefIndex: 13162
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC55F4 Offset: 0xCC55F4 VA: 0xCC55F4
	public FsmFloat time; // 0x50
	public FsmEvent finishEvent; // 0x58
	public bool realTime; // 0x60
	protected float startTime; // 0x64
	protected float timer; // 0x68

	// Methods

	// RVA: 0x2097C04 Offset: 0x2097C04 VA: 0x2097C04
	public void .ctor() { }

	// RVA: 0x2097C0C Offset: 0x2097C0C VA: 0x2097C0C Slot: 28
	public override void Reset() { }

	// RVA: 0x2097C3C Offset: 0x2097C3C VA: 0x2097C3C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2097CD8 Offset: 0x2097CD8 VA: 0x2097CD8 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC3FFD8 Offset: 0xC3FFD8 VA: 0xC3FFD8
[TooltipAttribute] // RVA: 0xC3FFD8 Offset: 0xC3FFD8 VA: 0xC3FFD8
public class WaitAnyVoice : Wait // TypeDefIndex: 13163
{
	// Fields
	public bool isVoiceWait; // 0x6C

	// Methods

	// RVA: 0x2097D9C Offset: 0x2097D9C VA: 0x2097D9C
	public void .ctor() { }

	// RVA: 0x2097DA4 Offset: 0x2097DA4 VA: 0x2097DA4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2097E48 Offset: 0x2097E48 VA: 0x2097E48 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC40028 Offset: 0xC40028 VA: 0xC40028
[TooltipAttribute] // RVA: 0xC40028 Offset: 0xC40028 VA: 0xC40028
public class WakeAllRigidBodies : FsmStateAction // TypeDefIndex: 13164
{
	// Fields
	public bool everyFrame; // 0x49
	private Rigidbody[] bodies; // 0x50

	// Methods

	// RVA: 0x2097F68 Offset: 0x2097F68 VA: 0x2097F68
	public void .ctor() { }

	// RVA: 0x2097F70 Offset: 0x2097F70 VA: 0x2097F70 Slot: 28
	public override void Reset() { }

	// RVA: 0x2097F78 Offset: 0x2097F78 VA: 0x2097F78 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2098188 Offset: 0x2098188 VA: 0x2098188 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x209805C Offset: 0x209805C VA: 0x209805C
	private void DoWakeAll() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC40078 Offset: 0xC40078 VA: 0xC40078
[TooltipAttribute] // RVA: 0xC40078 Offset: 0xC40078 VA: 0xC40078
public class WakeUp : ComponentAction<Rigidbody> // TypeDefIndex: 13165
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCC5604 Offset: 0xCC5604 VA: 0xCC5604
	[CheckForComponentAttribute] // RVA: 0xCC5604 Offset: 0xCC5604 VA: 0xCC5604
	public FsmOwnerDefault gameObject; // 0x60

	// Methods

	// RVA: 0x2098300 Offset: 0x2098300 VA: 0x2098300
	public void .ctor() { }

	// RVA: 0x2098350 Offset: 0x2098350 VA: 0x2098350 Slot: 28
	public override void Reset() { }

	// RVA: 0x2098358 Offset: 0x2098358 VA: 0x2098358 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2098380 Offset: 0x2098380 VA: 0x2098380
	private void DoWakeUp() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC400C8 Offset: 0xC400C8 VA: 0xC400C8
[TooltipAttribute] // RVA: 0xC400C8 Offset: 0xC400C8 VA: 0xC400C8
public class WorldToScreenPoint : FsmStateAction // TypeDefIndex: 13166
{
	// Fields
	[UIHintAttribute] // RVA: 0xCC5678 Offset: 0xCC5678 VA: 0xCC5678
	[TooltipAttribute] // RVA: 0xCC5678 Offset: 0xCC5678 VA: 0xCC5678
	public FsmVector3 worldPosition; // 0x50
	[TooltipAttribute] // RVA: 0xCC56C8 Offset: 0xCC56C8 VA: 0xCC56C8
	public FsmFloat worldX; // 0x58
	[TooltipAttribute] // RVA: 0xCC5700 Offset: 0xCC5700 VA: 0xCC5700
	public FsmFloat worldY; // 0x60
	[TooltipAttribute] // RVA: 0xCC5738 Offset: 0xCC5738 VA: 0xCC5738
	public FsmFloat worldZ; // 0x68
	[UIHintAttribute] // RVA: 0xCC5770 Offset: 0xCC5770 VA: 0xCC5770
	[TooltipAttribute] // RVA: 0xCC5770 Offset: 0xCC5770 VA: 0xCC5770
	public FsmVector3 storeScreenPoint; // 0x70
	[UIHintAttribute] // RVA: 0xCC57C0 Offset: 0xCC57C0 VA: 0xCC57C0
	[TooltipAttribute] // RVA: 0xCC57C0 Offset: 0xCC57C0 VA: 0xCC57C0
	public FsmFloat storeScreenX; // 0x78
	[UIHintAttribute] // RVA: 0xCC5810 Offset: 0xCC5810 VA: 0xCC5810
	[TooltipAttribute] // RVA: 0xCC5810 Offset: 0xCC5810 VA: 0xCC5810
	public FsmFloat storeScreenY; // 0x80
	[TooltipAttribute] // RVA: 0xCC5860 Offset: 0xCC5860 VA: 0xCC5860
	public FsmBool normalize; // 0x88
	[TooltipAttribute] // RVA: 0xCC5898 Offset: 0xCC5898 VA: 0xCC5898
	public bool everyFrame; // 0x90

	// Methods

	// RVA: 0x20985BC Offset: 0x20985BC VA: 0x20985BC
	public void .ctor() { }

	// RVA: 0x20985C4 Offset: 0x20985C4 VA: 0x20985C4 Slot: 28
	public override void Reset() { }

	// RVA: 0x20986BC Offset: 0x20986BC VA: 0x20986BC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x20989D8 Offset: 0x20989D8 VA: 0x20989D8 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x20986F8 Offset: 0x20986F8 VA: 0x20986F8
	private void DoWorldToScreenPoint() { }
}

// Namespace: HutongGames.PlayMaker
[PreserveAttribute] // RVA: 0xC40118 Offset: 0xC40118 VA: 0xC40118
public class FsmProcessor // TypeDefIndex: 13167
{
	// Methods

	// RVA: 0x20B11AC Offset: 0x20B11AC VA: 0x20B11AC
	public void .ctor() { }

	// RVA: 0x20B11B4 Offset: 0x20B11B4 VA: 0x20B11B4
	public static void OnPreprocess(PlayMakerFSM fsm) { }

	// RVA: -1 Offset: -1
	private static void HandleUiEvent<T>(PlayMakerFSM fsm, UiEvents uiEvent) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C60E80 Offset: 0x1C60E80 VA: 0x1C60E80
	|-FsmProcessor.HandleUiEvent<PlayMakerUiBoolValueChangedEvent>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiClickEvent>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiDragEvents>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiDropEvent>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiEndEditEvent>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiFloatValueChangedEvent>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiIntValueChangedEvent>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiPointerEvents>
	|-FsmProcessor.HandleUiEvent<PlayMakerUiVector2ValueChangedEvent>
	|-FsmProcessor.HandleUiEvent<object>
	*/

	// RVA: -1 Offset: -1
	private static void AddUiEventHandler<T>(PlayMakerFSM fsm) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C60D38 Offset: 0x1C60D38 VA: 0x1C60D38
	|-FsmProcessor.AddUiEventHandler<object>
	*/

	// RVA: 0x20B137C Offset: 0x20B137C VA: 0x20B137C
	private static bool AddEventHandlerComponent(PlayMakerFSM fsm, Type type) { }

	// RVA: 0x20B1484 Offset: 0x20B1484 VA: 0x20B1484
	public static PlayMakerProxyBase GetEventHandlerComponent(GameObject go, Type type) { }
}

// Namespace: 
public class iTweenFSMEvents : MonoBehaviour // TypeDefIndex: 13168
{
	// Fields
	public static int itweenIDCount; // 0x0
	public int itweenID; // 0x18
	public iTweenFsmAction itweenFSMAction; // 0x20
	public bool donotfinish; // 0x28
	public bool islooping; // 0x29

	// Methods

	// RVA: 0x2B18488 Offset: 0x2B18488 VA: 0x2B18488
	public void .ctor() { }

	// RVA: 0x2B18490 Offset: 0x2B18490 VA: 0x2B18490
	private void iTweenOnStart(int aniTweenID) { }

	// RVA: 0x2B18504 Offset: 0x2B18504 VA: 0x2B18504
	private void iTweenOnComplete(int aniTweenID) { }

	// RVA: 0x2B185B0 Offset: 0x2B185B0 VA: 0x2B185B0
	private static void .cctor() { }
}

// Namespace: 
public enum iTweenFSMType // TypeDefIndex: 13169
{
	// Fields
	public int value__; // 0x0
	public const iTweenFSMType all = 0;
	public const iTweenFSMType move = 1;
	public const iTweenFSMType rotate = 2;
	public const iTweenFSMType scale = 3;
	public const iTweenFSMType shake = 4;
	public const iTweenFSMType position = 5;
	public const iTweenFSMType value = 6;
	public const iTweenFSMType look = 7;
}

// Namespace: HutongGames.PlayMaker
public class UpdateHelper // TypeDefIndex: 13170
{
	// Fields
	private static bool editorPrefLoaded; // 0x0

	// Methods

	// RVA: 0x11B605C Offset: 0x11B605C VA: 0x11B605C
	public void .ctor() { }

	// RVA: 0x11B6064 Offset: 0x11B6064 VA: 0x11B6064
	public static void SetDirty(Fsm fsm) { }
}

// Namespace: 
public class CompilerPing // TypeDefIndex: 13171
{
	// Methods

	// RVA: 0x1630D34 Offset: 0x1630D34 VA: 0x1630D34
	public void .ctor() { }
}

// Namespace: Assets.SimpleAndroidNotifications.Data
public class NotificationCallback // TypeDefIndex: 13172
{
	// Fields
	public int Id; // 0x10
	public string Data; // 0x18

	// Methods

	// RVA: 0x141AE40 Offset: 0x141AE40 VA: 0x141AE40
	public void .ctor() { }
}

// Namespace: Assets.SimpleAndroidNotifications.Enums
public enum NotificationExecuteMode // TypeDefIndex: 13173
{
	// Fields
	public int value__; // 0x0
	public const NotificationExecuteMode Inexact = 0;
	public const NotificationExecuteMode Exact = 1;
	public const NotificationExecuteMode ExactAndAllowWhileIdle = 2;
}

// Namespace: Assets.SimpleAndroidNotifications.Enums
public enum NotificationImportance // TypeDefIndex: 13174
{
	// Fields
	public int value__; // 0x0
	public const NotificationImportance Unspecified = -1000;
	public const NotificationImportance None = 0;
	public const NotificationImportance Min = 1;
	public const NotificationImportance Low = 2;
	public const NotificationImportance Default = 3;
	public const NotificationImportance High = 4;
	public const NotificationImportance Max = 5;
}

// Namespace: Assets.SimpleAndroidNotifications.Helpers
public class DebugConsole : MonoBehaviour // TypeDefIndex: 13175
{
	// Fields
	public Rect ButtonRect; // 0x18
	public Rect PosRect; // 0x28
	public Rect ViewRect; // 0x38
	public bool Show; // 0x48
	public bool StackTrace; // 0x49
	private bool _expand; // 0x4A
	private Vector2 _scrollPos; // 0x4C
	private int _count; // 0x54
	private readonly StringBuilder _log; // 0x58
	private readonly StringBuilder _fullLog; // 0x60
	private bool _subscribed; // 0x68

	// Methods

	// RVA: 0x141AF48 Offset: 0x141AF48 VA: 0x141AF48
	public void .ctor() { }

	// RVA: 0x141B0A0 Offset: 0x141B0A0 VA: 0x141B0A0
	public void Awake() { }

	// RVA: 0x141B0A4 Offset: 0x141B0A4 VA: 0x141B0A4
	public void Subscribe() { }

	// RVA: 0x141B12C Offset: 0x141B12C VA: 0x141B12C
	public void Update() { }

	// RVA: 0x141B164 Offset: 0x141B164 VA: 0x141B164
	public void HandleLog(string message, string stackTrace, LogType type) { }

	// RVA: 0x141B214 Offset: 0x141B214 VA: 0x141B214
	public void OnGUI() { }

	// RVA: 0x141B3BC Offset: 0x141B3BC VA: 0x141B3BC
	public string GetLogs() { }
}

// Namespace: Assets.SimpleAndroidNotifications.Helpers
public static class NotificationIdHandler // TypeDefIndex: 13176
{
	// Fields
	private const string PlayerPrefsKey = "NotificationHelper.Scheduled";
	[CompilerGeneratedAttribute] // RVA: 0xCC58D0 Offset: 0xCC58D0 VA: 0xCC58D0
	private static Func<string, int> <>f__mg$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC58E0 Offset: 0xCC58E0 VA: 0xCC58E0
	private static Func<string, bool> <>f__am$cache0; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCC58F0 Offset: 0xCC58F0 VA: 0xCC58F0
	private static Func<int, string> <>f__am$cache1; // 0x10

	// Methods

	// RVA: 0x141B3F0 Offset: 0x141B3F0 VA: 0x141B3F0
	public static List<int> GetScheduledNotificaions() { }

	// RVA: 0x141B5EC Offset: 0x141B5EC VA: 0x141B5EC
	public static void SetScheduledNotificaions(List<int> scheduledNotificaions) { }

	// RVA: 0x141B71C Offset: 0x141B71C VA: 0x141B71C
	public static void AddScheduledNotificaion(int notificationId) { }

	// RVA: 0x141B788 Offset: 0x141B788 VA: 0x141B788
	public static void RemoveScheduledNotificaion(int id) { }

	// RVA: 0x141B86C Offset: 0x141B86C VA: 0x141B86C
	public static void RemoveAllScheduledNotificaions() { }

	// RVA: 0x141B8D0 Offset: 0x141B8D0 VA: 0x141B8D0
	public static int GetNotificationId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD7AE0 Offset: 0xCD7AE0 VA: 0xCD7AE0
	// RVA: 0x141B95C Offset: 0x141B95C VA: 0x141B95C
	private static bool <GetScheduledNotificaions>m__0(string i) { }

	[CompilerGeneratedAttribute] // RVA: 0xCD7AF0 Offset: 0xCD7AF0 VA: 0xCD7AF0
	// RVA: 0x141B9D0 Offset: 0x141B9D0 VA: 0x141B9D0
	private static string <SetScheduledNotificaions>m__1(int i) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC46EA4 Offset: 0xC46EA4 VA: 0xC46EA4
private sealed class NotificationIdHandler.<RemoveScheduledNotificaion>c__AnonStorey0 // TypeDefIndex: 13177
{
	// Fields
	internal int id; // 0x10

	// Methods

	// RVA: 0x141B864 Offset: 0x141B864 VA: 0x141B864
	public void .ctor() { }

	// RVA: 0x141B9F8 Offset: 0x141B9F8 VA: 0x141B9F8
	internal bool <>m__0(int i) { }
}

// Namespace: Assets.SimpleAndroidNotifications
public class NotificationExample : MonoBehaviour // TypeDefIndex: 13178
{
	// Fields
	public Toggle Toggle; // 0x18

	// Methods

	// RVA: 0x141BA08 Offset: 0x141BA08 VA: 0x141BA08
	public void .ctor() { }

	// RVA: 0x141BA10 Offset: 0x141BA10 VA: 0x141BA10
	public void Awake() { }

	// RVA: 0x141BD8C Offset: 0x141BD8C VA: 0x141BD8C
	public void OnApplicationPause(bool pause) { }

	// RVA: 0x141BDD4 Offset: 0x141BDD4 VA: 0x141BDD4
	public void Rate() { }

	// RVA: 0x141BE20 Offset: 0x141BE20 VA: 0x141BE20
	public void OpenWiki() { }

	// RVA: 0x141BE6C Offset: 0x141BE6C VA: 0x141BE6C
	public void CancelAll() { }

	// RVA: 0x141BF14 Offset: 0x141BF14 VA: 0x141BF14
	public void ScheduleSimple(int seconds) { }

	// RVA: 0x141C194 Offset: 0x141C194 VA: 0x141C194
	public void ScheduleNormal() { }

	// RVA: 0x141C418 Offset: 0x141C418 VA: 0x141C418
	public void ScheduleRepeated() { }

	// RVA: 0x141D268 Offset: 0x141D268 VA: 0x141D268
