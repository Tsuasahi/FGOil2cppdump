
// Namespace: 
public class EventInfoChronologyComponent : MonoBehaviour // TypeDefIndex: 5448
{
	// Fields
	private const int AdjustWidgetY = 7;
	private const int AdjustLineY = 10;
	[SerializeField] // RVA: 0xC4C818 Offset: 0xC4C818 VA: 0xC4C818
	private GameObject objHistory; // 0x18
	[SerializeField] // RVA: 0xC4C828 Offset: 0xC4C828 VA: 0xC4C828
	private UIWidget widget; // 0x20
	[SerializeField] // RVA: 0xC4C838 Offset: 0xC4C838 VA: 0xC4C838
	private BoxCollider collider; // 0x28
	[SerializeField] // RVA: 0xC4C848 Offset: 0xC4C848 VA: 0xC4C848
	private UISprite spriteLineW; // 0x30
	[SerializeField] // RVA: 0xC4C858 Offset: 0xC4C858 VA: 0xC4C858
	private UISprite spriteLineH; // 0x38

	// Methods

	// RVA: 0x187DA40 Offset: 0x187DA40 VA: 0x187DA40
	public void .ctor() { }

	// RVA: 0x187DA48 Offset: 0x187DA48 VA: 0x187DA48
	public void Initialize(UISprite srcSprite) { }

	// RVA: 0x187DB0C Offset: 0x187DB0C VA: 0x187DB0C
	public void Refresh() { }

	// RVA: 0x187DA78 Offset: 0x187DA78 VA: 0x187DA78
	private void SetSprite(UISprite src, UISprite dest) { }
}

// Namespace: 
public class EventInfoChronologyDialog : BaseDialog // TypeDefIndex: 5449
{
	// Fields
	private const string NameLineSprite = "chronology_line";
	[SerializeField] // RVA: 0xC4C868 Offset: 0xC4C868 VA: 0xC4C868
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC4C878 Offset: 0xC4C878 VA: 0xC4C878
	private UIScrollView scrollView; // 0x60
	[SerializeField] // RVA: 0xC4C888 Offset: 0xC4C888 VA: 0xC4C888
	private UICommonButton closeButton; // 0x68
	[SerializeField] // RVA: 0xC4C898 Offset: 0xC4C898 VA: 0xC4C898
	private UILabel closeLabel; // 0x70
	[SerializeField] // RVA: 0xC4C8A8 Offset: 0xC4C8A8 VA: 0xC4C8A8
	private UISprite failySprite; // 0x78
	[SerializeField] // RVA: 0xC4C8B8 Offset: 0xC4C8B8 VA: 0xC4C8B8
	private UISprite queenSprite; // 0x80
	[SerializeField] // RVA: 0xC4C8C8 Offset: 0xC4C8C8 VA: 0xC4C8C8
	private GameObject grid; // 0x88
	[SerializeField] // RVA: 0xC4C8D8 Offset: 0xC4C8D8 VA: 0xC4C8D8
	private float gridSpace; // 0x90
	private bool initialized; // 0x94
	private Action closeAction; // 0x98
	private EventInfoChronologyDialog.State state; // 0xA0

	// Properties
	public bool IsOpened { get; }
	protected override GameObject closeBtnObject { get; }

	// Methods

	// RVA: 0x187DE90 Offset: 0x187DE90 VA: 0x187DE90
	public void .ctor() { }

	// RVA: 0x187D50C Offset: 0x187D50C VA: 0x187D50C
	public bool get_IsOpened() { }

	// RVA: 0x187DF00 Offset: 0x187DF00 VA: 0x187DF00
	private void Init() { }

	// RVA: 0x187D520 Offset: 0x187D520 VA: 0x187D520
	public void Open(Action closeAction) { }

	// RVA: 0x187E520 Offset: 0x187E520 VA: 0x187E520
	public void OnClickCloseButton() { }

	// RVA: 0x187E1B8 Offset: 0x187E1B8 VA: 0x187E1B8
	protected void SetTitleInfoTouchEnable(bool enable) { }

	// RVA: 0x187E5E4 Offset: 0x187E5E4 VA: 0x187E5E4 Slot: 4
	protected override GameObject get_closeBtnObject() { }

	// RVA: 0x187E2C4 Offset: 0x187E2C4 VA: 0x187E2C4
	private void Laytout() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7CB4 Offset: 0xCC7CB4 VA: 0xCC7CB4
	// RVA: 0x187E684 Offset: 0x187E684 VA: 0x187E684
	private void <Open>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7CC4 Offset: 0xCC7CC4 VA: 0xCC7CC4
	// RVA: 0x187E690 Offset: 0x187E690 VA: 0x187E690
	private void <OnClickCloseButton>m__1() { }
}

// Namespace: 
private enum EventInfoChronologyDialog.State // TypeDefIndex: 5450
{
	// Fields
	public int value__; // 0x0
	public const EventInfoChronologyDialog.State INIT = 0;
	public const EventInfoChronologyDialog.State OPEN = 1;
	public const EventInfoChronologyDialog.State INPUT = 2;
	public const EventInfoChronologyDialog.State CLOSE = 3;
}

// Namespace: 
public class EventInfoCommandBuffPointComponent : MonoBehaviour // TypeDefIndex: 5451
{
	// Fields
	private static readonly long USER_EVENT_POINT_REST_MIN; // 0x0
	private static readonly long USER_EVENT_POINT_REST_MAX; // 0x8
	[SerializeField] // RVA: 0xC4C8E8 Offset: 0xC4C8E8 VA: 0xC4C8E8
	private UISprite bgSprite; // 0x18
	[SerializeField] // RVA: 0xC4C8F8 Offset: 0xC4C8F8 VA: 0xC4C8F8
	private UILabel pointLabel; // 0x20
	[SerializeField] // RVA: 0xC4C908 Offset: 0xC4C908 VA: 0xC4C908
	private UILabel buffValueLabel; // 0x28
	[SerializeField] // RVA: 0xC4C918 Offset: 0xC4C918 VA: 0xC4C918
	private UILabel needPointLabel; // 0x30
	private EventUiEntity eventUiEntity; // 0x38
	private EventUiValueEntity eventUiValueEntity; // 0x40
	private long point; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC4C928 Offset: 0xC4C928 VA: 0xC4C928
	private static Comparison<EventPointBuffEntity> <>f__am$cache0; // 0x10

	// Properties
	public long Point { get; }
	public float Height { get; }

	// Methods

	// RVA: 0x187E6C8 Offset: 0x187E6C8 VA: 0x187E6C8
	public void .ctor() { }

	// RVA: 0x187E6D0 Offset: 0x187E6D0 VA: 0x187E6D0
	public long get_Point() { }

	// RVA: 0x187E6D8 Offset: 0x187E6D8 VA: 0x187E6D8
	public float get_Height() { }

	// RVA: 0x187E710 Offset: 0x187E710 VA: 0x187E710
	public void Setup(EventUiEntity eventUiEntity, EventUiValueEntity eventUiValueEntity, EventInfoCommandBuffPointComponent.ViewData viewData) { }

	// RVA: 0x187EA44 Offset: 0x187EA44 VA: 0x187EA44
	public void UpdatePoint() { }

	// RVA: 0x187EE70 Offset: 0x187EE70 VA: 0x187EE70
	private long GetUserEventPoint(int eventId, int groupId) { }

	// RVA: 0x187EF44 Offset: 0x187EF44 VA: 0x187EF44
	private void GetEnableEventPointBuffEntity(int eventId, int groupId, long userPoint, out EventPointBuffEntity nowEventPointBuff, out EventPointBuffEntity nextEventPointBuff) { }

	// RVA: 0x187F1CC Offset: 0x187F1CC VA: 0x187F1CC
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7CD4 Offset: 0xCC7CD4 VA: 0xCC7CD4
	// RVA: 0x187F224 Offset: 0x187F224 VA: 0x187F224
	private static int <GetEnableEventPointBuffEntity>m__0(EventPointBuffEntity a, EventPointBuffEntity b) { }
}

// Namespace: 
[Serializable]
public class EventInfoCommandBuffPointComponent.LabelSetting // TypeDefIndex: 5452
{
	// Fields
	public Color BaseColor; // 0x10
	public Color EffectColor; // 0x20

	// Methods

	// RVA: 0x187F268 Offset: 0x187F268 VA: 0x187F268
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class EventInfoCommandBuffPointComponent.ViewData // TypeDefIndex: 5453
{
	// Fields
	public int GroupId; // 0x10
	public string BgSpriteName; // 0x18
	public EventInfoCommandBuffPointComponent.LabelSetting PointLabelSetting; // 0x20
	public EventInfoCommandBuffPointComponent.LabelSetting BuffValueSetting; // 0x28
	public EventInfoCommandBuffPointComponent.LabelSetting NeedPointSetting; // 0x30

	// Methods

	// RVA: 0x187F270 Offset: 0x187F270 VA: 0x187F270
	public void .ctor() { }
}

// Namespace: 
public class EventInfoCommandBuffPointControl : EventInfoUIBase // TypeDefIndex: 5454
{
	// Fields
	[SerializeField] // RVA: 0xC4C938 Offset: 0xC4C938 VA: 0xC4C938
	private GameObject rootObject; // 0x28
	[SerializeField] // RVA: 0xC4C948 Offset: 0xC4C948 VA: 0xC4C948
	private GameObject baseBuffPointPrefab; // 0x30
	[SerializeField] // RVA: 0xC4C958 Offset: 0xC4C958 VA: 0xC4C958
	private GameObject titleObject; // 0x38
	[SerializeField] // RVA: 0xC4C968 Offset: 0xC4C968 VA: 0xC4C968
	private UISprite titleBgSprite; // 0x40
	[SerializeField] // RVA: 0xC4C978 Offset: 0xC4C978 VA: 0xC4C978
	private string titleBgSpriteName; // 0x48
	[SerializeField] // RVA: 0xC4C988 Offset: 0xC4C988 VA: 0xC4C988
	private GameObject totalPointObject; // 0x50
	[SerializeField] // RVA: 0xC4C998 Offset: 0xC4C998 VA: 0xC4C998
	private UILabel totalPointLabel; // 0x58
	[SerializeField] // RVA: 0xC4C9A8 Offset: 0xC4C9A8 VA: 0xC4C9A8
	private UISprite totalPointBgSprite; // 0x60
	[SerializeField] // RVA: 0xC4C9B8 Offset: 0xC4C9B8 VA: 0xC4C9B8
	private string totalPointBgSpriteName; // 0x68
	[SerializeField] // RVA: 0xC4C9C8 Offset: 0xC4C9C8 VA: 0xC4C9C8
	private List<EventInfoCommandBuffPointComponent.ViewData> ViewDataList; // 0x70
	private EventUiEntity eventUiEntity; // 0x78
	private List<EventInfoCommandBuffPointComponent> buffPointCompnentList; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC4C9D8 Offset: 0xC4C9D8 VA: 0xC4C9D8
	private static Func<EventUiValueEntity, int> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x187F278 Offset: 0x187F278 VA: 0x187F278
	public void .ctor() { }

	// RVA: 0x187F280 Offset: 0x187F280 VA: 0x187F280 Slot: 4
	public override void Initialization(EventUiEntity entity) { }

	// RVA: 0x187F2F8 Offset: 0x187F2F8 VA: 0x187F2F8 Slot: 5
	public override void Setup(EventUiValueEntity[] entitys) { }

	// RVA: 0x187F88C Offset: 0x187F88C VA: 0x187F88C
	private GameObject CreateBuffPointObject(EventUiValueEntity ent) { }

	// RVA: 0x187FA0C Offset: 0x187FA0C VA: 0x187FA0C
	private EventInfoCommandBuffPointComponent.ViewData GetViewData(int GroupId) { }

	// RVA: 0x187FC5C Offset: 0x187FC5C VA: 0x187FC5C Slot: 9
	public override void Redisplay() { }

	// RVA: 0x187FADC Offset: 0x187FADC VA: 0x187FADC
	private void SetTotalPointLabel(long totalPoint) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7CE4 Offset: 0xCC7CE4 VA: 0xCC7CE4
	// RVA: 0x187FDB0 Offset: 0x187FDB0 VA: 0x187FDB0
	private static int <Setup>m__0(EventUiValueEntity ent) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41D54 Offset: 0xC41D54 VA: 0xC41D54
private sealed class EventInfoCommandBuffPointControl.<GetViewData>c__AnonStorey0 // TypeDefIndex: 5455
{
	// Fields
	internal int GroupId; // 0x10

	// Methods

	// RVA: 0x187FC54 Offset: 0x187FC54 VA: 0x187FC54
	public void .ctor() { }

	// RVA: 0x187FDD8 Offset: 0x187FDD8 VA: 0x187FDD8
	internal bool <>m__0(EventInfoCommandBuffPointComponent.ViewData x) { }
}

// Namespace: 
public class EventInfoCondenseLabel : MonoBehaviour // TypeDefIndex: 5456
{
	// Fields
	[SerializeField] // RVA: 0xC4C9E8 Offset: 0xC4C9E8 VA: 0xC4C9E8
	public int condensedWidth; // 0x18
	private UILabel label; // 0x20
	private string beforeText; // 0x28

	// Methods

	// RVA: 0x187FE14 Offset: 0x187FE14 VA: 0x187FE14
	public void .ctor() { }

	// RVA: 0x187FE8C Offset: 0x187FE8C VA: 0x187FE8C
	private void Start() { }

	// RVA: 0x187FFDC Offset: 0x187FFDC VA: 0x187FFDC
	private void OnEnable() { }

	// RVA: 0x187FFE0 Offset: 0x187FFE0 VA: 0x187FFE0
	private void Update() { }

	// RVA: 0x187FF00 Offset: 0x187FF00 VA: 0x187FF00
	public void SetCondensedScale() { }
}

// Namespace: 
public class EventInfoConquestGetComponent : MonoBehaviour // TypeDefIndex: 5457
{
	// Fields
	[SerializeField] // RVA: 0xC4C9F8 Offset: 0xC4C9F8 VA: 0xC4C9F8
	protected UISprite backSprite; // 0x18
	[SerializeField] // RVA: 0xC4CA08 Offset: 0xC4CA08 VA: 0xC4CA08
	protected EventConquestGetDialog dialog; // 0x20
	private static readonly string EVENT_CONQUEST_GET_BG; // 0x0

	// Methods

	// RVA: 0x18800CC Offset: 0x18800CC VA: 0x18800CC
	public void .ctor() { }

	// RVA: 0x18800D4 Offset: 0x18800D4 VA: 0x18800D4
	public void Open(Action callback) { }

	// RVA: 0x18804FC Offset: 0x18804FC VA: 0x18804FC
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41D64 Offset: 0xC41D64 VA: 0xC41D64
private sealed class EventInfoConquestGetComponent.<Open>c__AnonStorey0 // TypeDefIndex: 5458
{
	// Fields
	internal List<GiftEntity> giftList; // 0x10
	internal string title; // 0x18
	internal string message; // 0x20
	internal Action callback; // 0x28
	internal EventInfoConquestGetComponent $this; // 0x30

	// Methods

	// RVA: 0x18804F4 Offset: 0x18804F4 VA: 0x18804F4
	public void .ctor() { }

	// RVA: 0x1880558 Offset: 0x1880558 VA: 0x1880558
	internal void <>m__0() { }

	// RVA: 0x1880664 Offset: 0x1880664 VA: 0x1880664
	internal void <>m__1() { }

	// RVA: 0x1880700 Offset: 0x1880700 VA: 0x1880700
	internal void <>m__2() { }

	// RVA: 0x18807E0 Offset: 0x18807E0 VA: 0x18807E0
	internal void <>m__3() { }
}

// Namespace: 
public class EventInfoConquestItemCounterComponent : MonoBehaviour // TypeDefIndex: 5459
{
	// Fields
	[SerializeField] // RVA: 0xC4CA18 Offset: 0xC4CA18 VA: 0xC4CA18
	private UISprite baseSprite; // 0x18
	[SerializeField] // RVA: 0xC4CA28 Offset: 0xC4CA28 VA: 0xC4CA28
	private UILabel itemNumTitleLabel; // 0x20
	[SerializeField] // RVA: 0xC4CA38 Offset: 0xC4CA38 VA: 0xC4CA38
	private UILabel productNumTitleLabel; // 0x28
	[SerializeField] // RVA: 0xC4CA48 Offset: 0xC4CA48 VA: 0xC4CA48
	private UILabel itemNumLabel; // 0x30
	[SerializeField] // RVA: 0xC4CA58 Offset: 0xC4CA58 VA: 0xC4CA58
	private UILabel productNumLabel; // 0x38
	[SerializeField] // RVA: 0xC4CA68 Offset: 0xC4CA68 VA: 0xC4CA68
	private int titleLabelMaxWidth; // 0x40
	[SerializeField] // RVA: 0xC4CA78 Offset: 0xC4CA78 VA: 0xC4CA78
	private int numLabelMaxWidth; // 0x44
	[CompilerGeneratedAttribute] // RVA: 0xC4CA88 Offset: 0xC4CA88 VA: 0xC4CA88
	[DebuggerBrowsableAttribute] // RVA: 0xC4CA88 Offset: 0xC4CA88 VA: 0xC4CA88
	private int <itemId>k__BackingField; // 0x48
	private int itemNum; // 0x4C
	private int addProductNum; // 0x50
	private int productNum; // 0x54

	// Properties
	public bool IsAnimFinished { get; }
	public int itemId { get; set; }

	// Methods

	// RVA: 0x188084C Offset: 0x188084C VA: 0x188084C
	public void .ctor() { }

	// RVA: 0x1880860 Offset: 0x1880860 VA: 0x1880860
	public bool get_IsAnimFinished() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7CF4 Offset: 0xCC7CF4 VA: 0xCC7CF4
	// RVA: 0x1880870 Offset: 0x1880870 VA: 0x1880870
	public int get_itemId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7D04 Offset: 0xCC7D04 VA: 0xCC7D04
	// RVA: 0x1880878 Offset: 0x1880878 VA: 0x1880878
	private void set_itemId(int value) { }

	// RVA: 0x1880880 Offset: 0x1880880 VA: 0x1880880
	public void Start() { }

	// RVA: 0x18809D4 Offset: 0x18809D4 VA: 0x18809D4
	public void SetItem(int itemId, string spriteName) { }

	// RVA: 0x18809AC Offset: 0x18809AC VA: 0x18809AC
	public void SetNum(int itemId, int itemNum, int productNum, int addProductNum) { }

	// RVA: 0x1880A7C Offset: 0x1880A7C VA: 0x1880A7C
	private void SetLabel(int itemNum, int productNum, int addNum) { }

	// RVA: 0x1880C34 Offset: 0x1880C34 VA: 0x1880C34
	public void PlayAnim() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC7D14 Offset: 0xCC7D14 VA: 0xCC7D14
	// RVA: 0x1880C78 Offset: 0x1880C78 VA: 0x1880C78
	private IEnumerator anim() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41D74 Offset: 0xC41D74 VA: 0xC41D74
private sealed class EventInfoConquestItemCounterComponent.<anim>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 5460
{
	// Fields
	internal float <add>__0; // 0x10
	internal int <i>__1; // 0x14
	internal EventInfoConquestItemCounterComponent $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD7F10 Offset: 0xCD7F10 VA: 0xCD7F10
	// RVA: 0x15F7394 Offset: 0x15F7394 VA: 0x15F7394
	public void .ctor() { }

	// RVA: 0x15F739C Offset: 0x15F739C VA: 0x15F739C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7F20 Offset: 0xCD7F20 VA: 0xCD7F20
	// RVA: 0x15F75B8 Offset: 0x15F75B8 VA: 0x15F75B8 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7F30 Offset: 0xCD7F30 VA: 0xCD7F30
	// RVA: 0x15F75C0 Offset: 0x15F75C0 VA: 0x15F75C0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7F40 Offset: 0xCD7F40 VA: 0xCD7F40
	// RVA: 0x15F75C8 Offset: 0x15F75C8 VA: 0x15F75C8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7F50 Offset: 0xCD7F50 VA: 0xCD7F50
	// RVA: 0x15F75DC Offset: 0x15F75DC VA: 0x15F75DC Slot: 6
	public void Reset() { }
}

// Namespace: 
public class EventInfoConquestItemCounterControl : EventInfoUIBase // TypeDefIndex: 5461
{
	// Fields
	[SerializeField] // RVA: 0xC4CAC4 Offset: 0xC4CAC4 VA: 0xC4CAC4
	private UISprite crestSprite; // 0x28
	[SerializeField] // RVA: 0xC4CAD4 Offset: 0xC4CAD4 VA: 0xC4CAD4
	private UILabel armamentLabel; // 0x30
	[SerializeField] // RVA: 0xC4CAE4 Offset: 0xC4CAE4 VA: 0xC4CAE4
	private EventInfoConquestItemCounterComponent[] conquestItems; // 0x38
	[SerializeField] // RVA: 0xC4CAF4 Offset: 0xC4CAF4 VA: 0xC4CAF4
	private List<EventInfoConquestItemCounterControl.ItemSpriteData> itemSprites; // 0x40
	private int eventId; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC4CB04 Offset: 0xC4CB04 VA: 0xC4CB04
	private static Func<EventUiValueEntity, int> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x15F7644 Offset: 0x15F7644 VA: 0x15F7644
	public void .ctor() { }

	// RVA: 0x15F7768 Offset: 0x15F7768 VA: 0x15F7768
	private void Start() { }

	// RVA: 0x15F7870 Offset: 0x15F7870 VA: 0x15F7870 Slot: 5
	public override void Setup(EventUiValueEntity[] entity) { }

	// RVA: 0x15F7B2C Offset: 0x15F7B2C VA: 0x15F7B2C Slot: 7
	public override void PlayAnim(EventInfoUIBase.PlayType type, Action callback) { }

	[DebuggerHiddenAttribute] // RVA: 0xCC7D24 Offset: 0xCC7D24 VA: 0xCC7D24
	// RVA: 0x15F7B88 Offset: 0x15F7B88 VA: 0x15F7B88
	private IEnumerator playAnim(Action callback) { }

	// RVA: 0x15F7C24 Offset: 0x15F7C24 VA: 0x15F7C24 Slot: 11
	protected override void SetEventId(object val) { }

	// RVA: 0x15F7CF0 Offset: 0x15F7CF0 VA: 0x15F7CF0 Slot: 12
	protected override void SetConquestInfos(object obj) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7D34 Offset: 0xCC7D34 VA: 0xCC7D34
	// RVA: 0x15F8310 Offset: 0x15F8310 VA: 0x15F8310
	private static int <Setup>m__0(EventUiValueEntity ent) { }
}

// Namespace: 
[Serializable]
private class EventInfoConquestItemCounterControl.ItemSpriteData // TypeDefIndex: 5462
{
	// Fields
	public int itemId; // 0x10
	public string spriteName; // 0x18

	// Methods

	// RVA: 0x15F862C Offset: 0x15F862C VA: 0x15F862C
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41D84 Offset: 0xC41D84 VA: 0xC41D84
private sealed class EventInfoConquestItemCounterControl.<Setup>c__AnonStorey1 // TypeDefIndex: 5463
{
	// Fields
	internal int itemId; // 0x10

	// Methods

	// RVA: 0x15F7B24 Offset: 0x15F7B24 VA: 0x15F7B24
	public void .ctor() { }

	// RVA: 0x15F8338 Offset: 0x15F8338 VA: 0x15F8338
	internal bool <>m__0(EventInfoConquestItemCounterControl.ItemSpriteData item) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41D94 Offset: 0xC41D94 VA: 0xC41D94
private sealed class EventInfoConquestItemCounterControl.<playAnim>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 5464
{
	// Fields
	internal EventInfoConquestItemCounterComponent[] $locvar0; // 0x10
	internal int $locvar1; // 0x18
	internal int <i>__1; // 0x1C
	internal Action callback; // 0x20
	internal EventInfoConquestItemCounterControl $this; // 0x28
	internal object $current; // 0x30
	internal bool $disposing; // 0x38
	internal int $PC; // 0x3C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD7F60 Offset: 0xCD7F60 VA: 0xCD7F60
	// RVA: 0x15F7C1C Offset: 0x15F7C1C VA: 0x15F7C1C
	public void .ctor() { }

	// RVA: 0x15F8374 Offset: 0x15F8374 VA: 0x15F8374 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7F70 Offset: 0xCD7F70 VA: 0xCD7F70
	// RVA: 0x15F85A0 Offset: 0x15F85A0 VA: 0x15F85A0 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7F80 Offset: 0xCD7F80 VA: 0xCD7F80
	// RVA: 0x15F85A8 Offset: 0x15F85A8 VA: 0x15F85A8 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7F90 Offset: 0xCD7F90 VA: 0xCD7F90
	// RVA: 0x15F85B0 Offset: 0x15F85B0 VA: 0x15F85B0 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD7FA0 Offset: 0xCD7FA0 VA: 0xCD7FA0
	// RVA: 0x15F85C4 Offset: 0x15F85C4 VA: 0x15F85C4 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class EventInfoCooltimeNoticeButton : EventInfoUIBase // TypeDefIndex: 5465
{
	// Fields
	public const int COMMON_RELEASE_ID = 30062301;
	private const string SPRITE_NAME_BUTTON_ON = "btn_on";
	private const string SPRITE_NAME_BUTTON_OFF = "btn_off";
	private const string SPRITE_NAME_BG = "80341001";
	private readonly Vector3 POSITION; // 0x28
	[SerializeField] // RVA: 0xC4CB14 Offset: 0xC4CB14 VA: 0xC4CB14
	private UIButton noticeButton; // 0x38
	[SerializeField] // RVA: 0xC4CB24 Offset: 0xC4CB24 VA: 0xC4CB24
	private UISprite buttonSprite; // 0x40
	[SerializeField] // RVA: 0xC4CB34 Offset: 0xC4CB34 VA: 0xC4CB34
	private UISprite bgSprite; // 0x48
	private bool isButtonOn; // 0x50

	// Methods

	// RVA: 0x15F8634 Offset: 0x15F8634 VA: 0x15F8634
	public void .ctor() { }

	// RVA: 0x15F8698 Offset: 0x15F8698 VA: 0x15F8698 Slot: 4
	public override void Initialization(EventUiEntity entity) { }

	// RVA: 0x15F8884 Offset: 0x15F8884 VA: 0x15F8884
	private void SetDispActive(bool isActive) { }

	// RVA: 0x15F8808 Offset: 0x15F8808 VA: 0x15F8808
	private void UpdateButtonDisp() { }

	// RVA: 0x15F8918 Offset: 0x15F8918 VA: 0x15F8918
	public void OnClickButton() { }
}

// Namespace: 
public class EventInfoDetectiveRankControl : EventInfoUIProgressControl // TypeDefIndex: 5466
{
	// Fields
	private static int MISSION_CLEAR_DISP_COUNT_MAX; // 0x0
	[SerializeField] // RVA: 0xC4CB44 Offset: 0xC4CB44 VA: 0xC4CB44
	private UISprite titleBgSprite; // 0x48
	[SerializeField] // RVA: 0xC4CB54 Offset: 0xC4CB54 VA: 0xC4CB54
	private string titleBgSpriteName; // 0x50
	[SerializeField] // RVA: 0xC4CB64 Offset: 0xC4CB64 VA: 0xC4CB64
	private UISprite rankSprite; // 0x58
	[SerializeField] // RVA: 0xC4CB74 Offset: 0xC4CB74 VA: 0xC4CB74
	private List<EventInfoDetectiveRankControl.ViewData> viewDataList; // 0x60
	[SerializeField] // RVA: 0xC4CB84 Offset: 0xC4CB84 VA: 0xC4CB84
	private UISprite condtionBgSprite; // 0x68
	[SerializeField] // RVA: 0xC4CB94 Offset: 0xC4CB94 VA: 0xC4CB94
	private string condtionBgSpriteName; // 0x70
	[SerializeField] // RVA: 0xC4CBA4 Offset: 0xC4CBA4 VA: 0xC4CBA4
	private UILabel conditionTextLabel; // 0x78
	[SerializeField] // RVA: 0xC4CBB4 Offset: 0xC4CBB4 VA: 0xC4CBB4
	private UISprite missionCountBgSprite; // 0x80
	[SerializeField] // RVA: 0xC4CBC4 Offset: 0xC4CBC4 VA: 0xC4CBC4
	private string missionCountBgSpriteName; // 0x88
	[SerializeField] // RVA: 0xC4CBD4 Offset: 0xC4CBD4 VA: 0xC4CBD4
	private UILabel missionTextLabel; // 0x90
	[SerializeField] // RVA: 0xC4CBE4 Offset: 0xC4CBE4 VA: 0xC4CBE4
	private UILabel missionCountTextLabel; // 0x98
	[SerializeField] // RVA: 0xC4CBF4 Offset: 0xC4CBF4 VA: 0xC4CBF4
	private UISprite missionStartedCountBgSprite; // 0xA0
	[SerializeField] // RVA: 0xC4CC04 Offset: 0xC4CC04 VA: 0xC4CC04
	private string missionStartedCountBgSpriteName; // 0xA8
	[SerializeField] // RVA: 0xC4CC14 Offset: 0xC4CC14 VA: 0xC4CC14
	private UILabel missionStartedCountTextLabel; // 0xB0
	private GameObject effectBasePrefab; // 0xB8
	private EventInfoDetectiveRankControl.DetectiveRank userRank; // 0xC0

	// Methods

	// RVA: 0x15F89C4 Offset: 0x15F89C4 VA: 0x15F89C4
	public void .ctor() { }

	// RVA: 0x15F8A2C Offset: 0x15F8A2C VA: 0x15F8A2C Slot: 4
	public override void Initialization(EventUiEntity entity) { }

	// RVA: 0x15F8DBC Offset: 0x15F8DBC VA: 0x15F8DBC Slot: 5
	public override void Setup(EventUiValueEntity[] entitys) { }

	// RVA: 0x15F8EFC Offset: 0x15F8EFC VA: 0x15F8EFC
	public void SetupTitleBg(EventInfoDetectiveRankControl.DetectiveRank userRank) { }

	// RVA: 0x15F9040 Offset: 0x15F9040 VA: 0x15F9040
	public void SetupCondtionText(EventInfoDetectiveRankControl.DetectiveRank userRank) { }

	// RVA: 0x15F90E8 Offset: 0x15F90E8 VA: 0x15F90E8
	public void SetupMissionClearCount() { }

	// RVA: 0x15F9330 Offset: 0x15F9330 VA: 0x15F9330
	public void SetupMissionStartedCount() { }

	// RVA: 0x15F95F0 Offset: 0x15F95F0 VA: 0x15F95F0 Slot: 9
	public override void Redisplay() { }

	// RVA: 0x15F9664 Offset: 0x15F9664 VA: 0x15F9664 Slot: 7
	public override void PlayAnim(EventInfoUIBase.PlayType type, Action callback) { }

	// RVA: 0x15F8E08 Offset: 0x15F8E08 VA: 0x15F8E08
	public EventInfoDetectiveRankControl.DetectiveRank GetCurrentDetectiveRank() { }

	// RVA: 0x15F9914 Offset: 0x15F9914 VA: 0x15F9914
	private static void .cctor() { }
}

// Namespace: 
public enum EventInfoDetectiveRankControl.DetectiveRank // TypeDefIndex: 5467
{
	// Fields
	public int value__; // 0x0
	public const EventInfoDetectiveRankControl.DetectiveRank RANK_E = 0;
	public const EventInfoDetectiveRankControl.DetectiveRank RANK_D = 1;
	public const EventInfoDetectiveRankControl.DetectiveRank RANK_C = 2;
	public const EventInfoDetectiveRankControl.DetectiveRank RANK_B = 3;
	public const EventInfoDetectiveRankControl.DetectiveRank RANK_A = 4;
	public const EventInfoDetectiveRankControl.DetectiveRank RANK_EX = 5;
}

// Namespace: 
[Serializable]
public class EventInfoDetectiveRankControl.ViewData // TypeDefIndex: 5468
{
	// Fields
	public EventInfoDetectiveRankControl.DetectiveRank DetectiveRank; // 0x10
	public string ImageName; // 0x18
	public string RankName; // 0x20

	// Methods

	// RVA: 0x15F9DC0 Offset: 0x15F9DC0 VA: 0x15F9DC0
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41DA4 Offset: 0xC41DA4 VA: 0xC41DA4
private sealed class EventInfoDetectiveRankControl.<SetupTitleBg>c__AnonStorey0 // TypeDefIndex: 5469
{
	// Fields
	internal EventInfoDetectiveRankControl.DetectiveRank userRank; // 0x10

	// Methods

	// RVA: 0x15F95E8 Offset: 0x15F95E8 VA: 0x15F95E8
	public void .ctor() { }

	// RVA: 0x15F9D84 Offset: 0x15F9D84 VA: 0x15F9D84
	internal bool <>m__0(EventInfoDetectiveRankControl.ViewData n) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41DB4 Offset: 0xC41DB4 VA: 0xC41DB4
private sealed class EventInfoDetectiveRankControl.<PlayAnim>c__AnonStorey1 // TypeDefIndex: 5470
{
	// Fields
	internal EventInfoDetectiveRankControl.DetectiveRank afterRank; // 0x10
	internal Action callback; // 0x18
	internal EventInfoDetectiveRankControl $this; // 0x20

	// Methods

	// RVA: 0x15F989C Offset: 0x15F989C VA: 0x15F989C
	public void .ctor() { }

	// RVA: 0x15F996C Offset: 0x15F996C VA: 0x15F996C
	internal void <>m__0() { }

	// RVA: 0x15F99DC Offset: 0x15F99DC VA: 0x15F99DC
	internal void <>m__1() { }

	// RVA: 0x15F9C38 Offset: 0x15F9C38 VA: 0x15F9C38
	internal bool <>m__2(EventInfoDetectiveRankControl.ViewData n) { }

	// RVA: 0x15F9C84 Offset: 0x15F9C84 VA: 0x15F9C84
	internal bool <>m__3(EventInfoDetectiveRankControl.ViewData n) { }

	// RVA: 0x15F9CC0 Offset: 0x15F9CC0 VA: 0x15F9CC0
	internal void <>m__4() { }
}

// Namespace: 
public class EventInfoHarvestCautionDialog : BaseDialog // TypeDefIndex: 5471
{
	// Fields
	[SerializeField] // RVA: 0xC4CC24 Offset: 0xC4CC24 VA: 0xC4CC24
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC4CC34 Offset: 0xC4CC34 VA: 0xC4CC34
	private UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC4CC44 Offset: 0xC4CC44 VA: 0xC4CC44
	private UILabel decideLabel; // 0x68
	[SerializeField] // RVA: 0xC4CC54 Offset: 0xC4CC54 VA: 0xC4CC54
	private UILabel cancelLabel; // 0x70
	private bool isClose; // 0x78
	private CommonConfirmDialog.ClickDelegate callback; // 0x80

	// Methods

	// RVA: 0x15F9DC8 Offset: 0x15F9DC8 VA: 0x15F9DC8
	public void .ctor() { }

	// RVA: 0x15F9E30 Offset: 0x15F9E30 VA: 0x15F9E30
	private void Init() { }

	// RVA: 0x15F9F68 Offset: 0x15F9F68 VA: 0x15F9F68
	public void Open(int questId, int questPhase, string message, CommonConfirmDialog.ClickDelegate callback) { }

	// RVA: 0x15FA1F0 Offset: 0x15FA1F0 VA: 0x15FA1F0
	public void OnClickDecideButton() { }

	// RVA: 0x15FA2A8 Offset: 0x15FA2A8 VA: 0x15FA2A8
	public void OnClickCancelButton() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7D44 Offset: 0xCC7D44 VA: 0xCC7D44
	// RVA: 0x15FA368 Offset: 0x15FA368 VA: 0x15FA368
	private void <OnClickDecideButton>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7D54 Offset: 0xCC7D54 VA: 0xCC7D54
	// RVA: 0x15FA39C Offset: 0x15FA39C VA: 0x15FA39C
	private void <OnClickCancelButton>m__1() { }
}

// Namespace: 
public class EventInfoHarvestGrowthDialog : BaseDialog // TypeDefIndex: 5472
{
	// Fields
	public const string HARVEST_GROWTH_TITLE_KEY = "harvestGrowthTitle";
	public const string HARVEST_GROWTH_BEFORE_QUEST_KEY = "harvestGrowthBeforeQuestId";
	public const string HARVEST_GROWTH_AFTER_QUEST_KEY = "harvestGrowthAfterQuestId";
	[SerializeField] // RVA: 0xC4CC64 Offset: 0xC4CC64 VA: 0xC4CC64
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC4CC74 Offset: 0xC4CC74 VA: 0xC4CC74
	private UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC4CC84 Offset: 0xC4CC84 VA: 0xC4CC84
	private UIScrollView scrollView; // 0x68
	[SerializeField] // RVA: 0xC4CC94 Offset: 0xC4CC94 VA: 0xC4CC94
	private UILabel closeLabel; // 0x70
	[SerializeField] // RVA: 0xC4CCA4 Offset: 0xC4CCA4 VA: 0xC4CCA4
	private GameObject[] dispObjList; // 0x78
	[SerializeField] // RVA: 0xC4CCB4 Offset: 0xC4CCB4 VA: 0xC4CCB4
	private UILabel[] messageList; // 0x80
	[SerializeField] // RVA: 0xC4CCC4 Offset: 0xC4CCC4 VA: 0xC4CCC4
	private ItemIconComponent[] countIconList01; // 0x88
	[SerializeField] // RVA: 0xC4CCD4 Offset: 0xC4CCD4 VA: 0xC4CCD4
	private UILabel[] countLabelList01; // 0x90
	[SerializeField] // RVA: 0xC4CCE4 Offset: 0xC4CCE4 VA: 0xC4CCE4
	private ItemIconComponent[] countIconList02; // 0x98
	[SerializeField] // RVA: 0xC4CCF4 Offset: 0xC4CCF4 VA: 0xC4CCF4
	private UILabel[] countLabelList02; // 0xA0
	[SerializeField] // RVA: 0xC4CD04 Offset: 0xC4CD04 VA: 0xC4CD04
	private ItemIconComponent[] countIconList03; // 0xA8
	[SerializeField] // RVA: 0xC4CD14 Offset: 0xC4CD14 VA: 0xC4CD14
	private UILabel[] countLabelList03; // 0xB0
	[SerializeField] // RVA: 0xC4CD24 Offset: 0xC4CD24 VA: 0xC4CD24
	private ItemIconComponent[] countIconList04; // 0xB8
	[SerializeField] // RVA: 0xC4CD34 Offset: 0xC4CD34 VA: 0xC4CD34
	private UILabel[] countLabelList04; // 0xC0
	private bool isClose; // 0xC8
	private Action closeAction; // 0xD0

	// Methods

	// RVA: 0x15FA3D0 Offset: 0x15FA3D0 VA: 0x15FA3D0
	public void .ctor() { }

	// RVA: 0x15FA438 Offset: 0x15FA438 VA: 0x15FA438
	private void Init() { }

	// RVA: 0x15FA5A0 Offset: 0x15FA5A0 VA: 0x15FA5A0
	public void Open(EventHarvestGrowthInfo harvestGrowthInfo, Action closeAction) { }

	// RVA: 0x15FB0C8 Offset: 0x15FB0C8 VA: 0x15FB0C8
	public void OnClickCloseButton() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7D64 Offset: 0xCC7D64 VA: 0xCC7D64
	// RVA: 0x15FB180 Offset: 0x15FB180 VA: 0x15FB180
	private void <OnClickCloseButton>m__0() { }
}

// Namespace: 
private class EventInfoHarvestGrowthDialog.GiftInfo // TypeDefIndex: 5473
{
	// Fields
	public Gift.Type type; // 0x10
	public int objectId; // 0x14
	public int iconId; // 0x18
	public int num; // 0x1C
	public int addNum; // 0x20
	public bool isGradeup; // 0x24
	public bool isNew; // 0x25

	// Methods

	// RVA: 0x15FB0C0 Offset: 0x15FB0C0 VA: 0x15FB0C0
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41DC4 Offset: 0xC41DC4 VA: 0xC41DC4
private sealed class EventInfoHarvestGrowthDialog.<Open>c__AnonStorey0 // TypeDefIndex: 5474
{
	// Fields
	internal GiftEntity giftEntity; // 0x10

	// Methods

	// RVA: 0x15FB0B8 Offset: 0x15FB0B8 VA: 0x15FB0B8
	public void .ctor() { }

	// RVA: 0x15FB1AC Offset: 0x15FB1AC VA: 0x15FB1AC
	internal bool <>m__0(GiftEntity entity) { }
}

// Namespace: 
public class EventInfoPointGaugeComponent : MonoBehaviour // TypeDefIndex: 5475
{
	// Fields
	[SerializeField] // RVA: 0xC4CD44 Offset: 0xC4CD44 VA: 0xC4CD44
	private float gaugeAnimationTime; // 0x18
	[SerializeField] // RVA: 0xC4CD54 Offset: 0xC4CD54 VA: 0xC4CD54
	private GameObject gaugeBaseObj; // 0x20
	[SerializeField] // RVA: 0xC4CD64 Offset: 0xC4CD64 VA: 0xC4CD64
	private UISprite iconImg; // 0x28
	[SerializeField] // RVA: 0xC4CD74 Offset: 0xC4CD74 VA: 0xC4CD74
	private GameObject gaugeObj; // 0x30
	[SerializeField] // RVA: 0xC4CD84 Offset: 0xC4CD84 VA: 0xC4CD84
	private UISprite gaugeBgSprite; // 0x38
	[SerializeField] // RVA: 0xC4CD94 Offset: 0xC4CD94 VA: 0xC4CD94
	private UISprite gaugeBarSprite; // 0x40
	[SerializeField] // RVA: 0xC4CDA4 Offset: 0xC4CDA4 VA: 0xC4CDA4
	private UISprite gaugeFrameSprite; // 0x48
	[SerializeField] // RVA: 0xC4CDB4 Offset: 0xC4CDB4 VA: 0xC4CDB4
	private string[] addEffectNameList; // 0x50
	[SerializeField] // RVA: 0xC4CDC4 Offset: 0xC4CDC4 VA: 0xC4CDC4
	private string[] subEffectNameList; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xC4CDD4 Offset: 0xC4CDD4 VA: 0xC4CDD4
	[DebuggerBrowsableAttribute] // RVA: 0xC4CDD4 Offset: 0xC4CDD4 VA: 0xC4CDD4
	private int <MainPoint>k__BackingField; // 0x60
	[CompilerGeneratedAttribute] // RVA: 0xC4CE10 Offset: 0xC4CE10 VA: 0xC4CE10
	[DebuggerBrowsableAttribute] // RVA: 0xC4CE10 Offset: 0xC4CE10 VA: 0xC4CE10
	private int <BufferPoint>k__BackingField; // 0x64
	private int maxPoint; // 0x68
	private EventInfoPointGaugeComponent.AnimeState animeState; // 0x6C
	private float gaugeHeight; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC4CE4C Offset: 0xC4CE4C VA: 0xC4CE4C
	[DebuggerBrowsableAttribute] // RVA: 0xC4CE4C Offset: 0xC4CE4C VA: 0xC4CE4C
	private EventInfoPointGaugeComponent.GaugeState <GaugeStateId>k__BackingField; // 0x74
	private TweenHeight gaugeTweenHeight; // 0x78
	private Action endCallback; // 0x80

	// Properties
	public int MainPoint { get; set; }
	public int BufferPoint { get; set; }
	public EventInfoPointGaugeComponent.GaugeState GaugeStateId { get; set; }

	// Methods

	// RVA: 0x15FB228 Offset: 0x15FB228 VA: 0x15FB228
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7D74 Offset: 0xCC7D74 VA: 0xCC7D74
	// RVA: 0x15FB230 Offset: 0x15FB230 VA: 0x15FB230
	public int get_MainPoint() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7D84 Offset: 0xCC7D84 VA: 0xCC7D84
	// RVA: 0x15FB238 Offset: 0x15FB238 VA: 0x15FB238
	public void set_MainPoint(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7D94 Offset: 0xCC7D94 VA: 0xCC7D94
	// RVA: 0x15FB240 Offset: 0x15FB240 VA: 0x15FB240
	public int get_BufferPoint() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7DA4 Offset: 0xCC7DA4 VA: 0xCC7DA4
	// RVA: 0x15FB248 Offset: 0x15FB248 VA: 0x15FB248
	public void set_BufferPoint(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7DB4 Offset: 0xCC7DB4 VA: 0xCC7DB4
	// RVA: 0x15FB250 Offset: 0x15FB250 VA: 0x15FB250
	public EventInfoPointGaugeComponent.GaugeState get_GaugeStateId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7DC4 Offset: 0xCC7DC4 VA: 0xCC7DC4
	// RVA: 0x15FB258 Offset: 0x15FB258 VA: 0x15FB258
	public void set_GaugeStateId(EventInfoPointGaugeComponent.GaugeState value) { }

	// RVA: 0x15FB260 Offset: 0x15FB260 VA: 0x15FB260
	protected void Awake() { }

	// RVA: 0x15FB5D8 Offset: 0x15FB5D8 VA: 0x15FB5D8
	public void Setup(EventInfoPointGaugeComponent.GaugeState gaugeState, int point) { }

	// RVA: 0x15FB5B4 Offset: 0x15FB5B4 VA: 0x15FB5B4
	private void UpdateGaugeBarHeight() { }

	// RVA: 0x15FB65C Offset: 0x15FB65C VA: 0x15FB65C
	public void PlayGaugeAnime(Action callback) { }

	// RVA: 0x15FB6E0 Offset: 0x15FB6E0 VA: 0x15FB6E0
	public TweenHeight CreateGaugeAnime(int startHeight, int endHeight) { }

	// RVA: 0x15FB81C Offset: 0x15FB81C VA: 0x15FB81C
	public void EndGaugeAnime() { }

	// RVA: 0x15FB8B8 Offset: 0x15FB8B8 VA: 0x15FB8B8
	public bool IsPlayingAnime() { }

	// RVA: 0x15FB3CC Offset: 0x15FB3CC VA: 0x15FB3CC
	public void ChangeDispGauge(EventInfoPointGaugeComponent.GaugeState gaugeState) { }

	// RVA: 0x15FB8C8 Offset: 0x15FB8C8 VA: 0x15FB8C8
	public void SetGaugeBarHeightByPoint(int point) { }

	// RVA: 0x15FB624 Offset: 0x15FB624 VA: 0x15FB624
	public void SetGaugeBarHeight(int height) { }

	// RVA: 0x15FB8F0 Offset: 0x15FB8F0 VA: 0x15FB8F0
	public float GetPointBarUpPositionY() { }

	// RVA: 0x15FB960 Offset: 0x15FB960 VA: 0x15FB960
	public string[] GetAddEffectNameList() { }

	// RVA: 0x15FB968 Offset: 0x15FB968 VA: 0x15FB968
	public string[] GetSubEffectNameList() { }
}

// Namespace: 
public enum EventInfoPointGaugeComponent.GaugeState // TypeDefIndex: 5476
{
	// Fields
	public int value__; // 0x0
