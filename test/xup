	public const QuestBoardListViewEarthLine.STATE SIZEOF = 2;
}

// Namespace: 
private class QuestBoardListViewEarthLine.StateNone : IState<QuestBoardListViewEarthLine> // TypeDefIndex: 11103
{
	// Methods

	// RVA: 0x1AF7C3C Offset: 0x1AF7C3C VA: 0x1AF7C3C
	public void .ctor() { }

	// RVA: 0x1AF8728 Offset: 0x1AF8728 VA: 0x1AF8728 Slot: 4
	public void begin(QuestBoardListViewEarthLine that) { }

	// RVA: 0x1AF880C Offset: 0x1AF880C VA: 0x1AF880C Slot: 5
	public void update(QuestBoardListViewEarthLine that) { }

	// RVA: 0x1AF8810 Offset: 0x1AF8810 VA: 0x1AF8810 Slot: 6
	public void end(QuestBoardListViewEarthLine that) { }
}

// Namespace: 
private class QuestBoardListViewEarthLine.StateMain : IState<QuestBoardListViewEarthLine> // TypeDefIndex: 11104
{
	// Fields
	private float mTgtRate; // 0x10
	private float mStartTime; // 0x14

	// Methods

	// RVA: 0x1AF7C44 Offset: 0x1AF7C44 VA: 0x1AF7C44
	public void .ctor() { }

	// RVA: 0x1AF82BC Offset: 0x1AF82BC VA: 0x1AF82BC Slot: 4
	public void begin(QuestBoardListViewEarthLine that) { }

	// RVA: 0x1AF8464 Offset: 0x1AF8464 VA: 0x1AF8464 Slot: 5
	public void update(QuestBoardListViewEarthLine that) { }

	// RVA: 0x1AF86A4 Offset: 0x1AF86A4 VA: 0x1AF86A4 Slot: 6
	public void end(QuestBoardListViewEarthLine that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1BD0 Offset: 0xCB1BD0 VA: 0xCB1BD0
private sealed class QuestBoardListViewEarthLine.StateMain.<begin>c__AnonStorey0 // TypeDefIndex: 11105
{
	// Fields
	internal EasingObject eo; // 0x10
	internal QuestBoardListViewEarthLine.StateMain $this; // 0x18

	// Methods

	// RVA: 0x1AF845C Offset: 0x1AF845C VA: 0x1AF845C
	public void .ctor() { }

	// RVA: 0x1AF86A8 Offset: 0x1AF86A8 VA: 0x1AF86A8
	internal void <>m__0() { }

	// RVA: 0x1AF86F8 Offset: 0x1AF86F8 VA: 0x1AF86F8
	internal void <>m__1() { }
}

// Namespace: 
public class QuestBoardListViewItem : ListViewItem // TypeDefIndex: 11106
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCE958C Offset: 0xCE958C VA: 0xCE958C
	[DebuggerBrowsableAttribute] // RVA: 0xCE958C Offset: 0xCE958C VA: 0xCE958C
	private QuestBoardListViewItem.InfoKind <info_kind>k__BackingField; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xCE95C8 Offset: 0xCE95C8 VA: 0xCE95C8
	[DebuggerBrowsableAttribute] // RVA: 0xCE95C8 Offset: 0xCE95C8 VA: 0xCE95C8
	private MapControl.QuestInfo <quest_info>k__BackingField; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xCE9604 Offset: 0xCE9604 VA: 0xCE9604
	[DebuggerBrowsableAttribute] // RVA: 0xCE9604 Offset: 0xCE9604 VA: 0xCE9604
	private GameObject <black_mark_prefab>k__BackingField; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xCE9640 Offset: 0xCE9640 VA: 0xCE9640
	[DebuggerBrowsableAttribute] // RVA: 0xCE9640 Offset: 0xCE9640 VA: 0xCE9640
	private GameObject <white_mark_prefab>k__BackingField; // 0x88

	// Properties
	public QuestBoardListViewItem.InfoKind info_kind { get; set; }
	public MapControl.QuestInfo quest_info { get; set; }
	public GameObject black_mark_prefab { get; set; }
	public GameObject white_mark_prefab { get; set; }

	// Methods

	// RVA: 0x1AF8814 Offset: 0x1AF8814 VA: 0x1AF8814
	private void .ctor() { }

	// RVA: 0x1AF881C Offset: 0x1AF881C VA: 0x1AF881C
	public void .ctor(int index, QuestBoardListViewItem.InfoKind ikind, MapControl.QuestInfo qinf, GameObject blackMarkPrefab, GameObject whiteMarkPrefab) { }

	[CompilerGeneratedAttribute] // RVA: 0xD40E24 Offset: 0xD40E24 VA: 0xD40E24
	// RVA: 0x1AF888C Offset: 0x1AF888C VA: 0x1AF888C
	public QuestBoardListViewItem.InfoKind get_info_kind() { }

	[CompilerGeneratedAttribute] // RVA: 0xD40E34 Offset: 0xD40E34 VA: 0xD40E34
	// RVA: 0x1AF886C Offset: 0x1AF886C VA: 0x1AF886C
	private void set_info_kind(QuestBoardListViewItem.InfoKind value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD40E44 Offset: 0xD40E44 VA: 0xD40E44
	// RVA: 0x1AF8894 Offset: 0x1AF8894 VA: 0x1AF8894
	public MapControl.QuestInfo get_quest_info() { }

	[CompilerGeneratedAttribute] // RVA: 0xD40E54 Offset: 0xD40E54 VA: 0xD40E54
	// RVA: 0x1AF8874 Offset: 0x1AF8874 VA: 0x1AF8874
	private void set_quest_info(MapControl.QuestInfo value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD40E64 Offset: 0xD40E64 VA: 0xD40E64
	// RVA: 0x1AF889C Offset: 0x1AF889C VA: 0x1AF889C
	public GameObject get_black_mark_prefab() { }

	[CompilerGeneratedAttribute] // RVA: 0xD40E74 Offset: 0xD40E74 VA: 0xD40E74
	// RVA: 0x1AF887C Offset: 0x1AF887C VA: 0x1AF887C
	private void set_black_mark_prefab(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD40E84 Offset: 0xD40E84 VA: 0xD40E84
	// RVA: 0x1AF88A4 Offset: 0x1AF88A4 VA: 0x1AF88A4
	public GameObject get_white_mark_prefab() { }

	[CompilerGeneratedAttribute] // RVA: 0xD40E94 Offset: 0xD40E94 VA: 0xD40E94
	// RVA: 0x1AF8884 Offset: 0x1AF8884 VA: 0x1AF8884
	private void set_white_mark_prefab(GameObject value) { }
}

// Namespace: 
public enum QuestBoardListViewItem.InfoKind // TypeDefIndex: 11107
{
	// Fields
	public int value__; // 0x0
	public const QuestBoardListViewItem.InfoKind AREA = 0;
	public const QuestBoardListViewItem.InfoKind MAP = 1;
	public const QuestBoardListViewItem.InfoKind STORY = 2;
	public const QuestBoardListViewItem.InfoKind HERO = 3;
	public const QuestBoardListViewItem.InfoKind CALDEA = 4;
	public const QuestBoardListViewItem.InfoKind WARBOARD = 5;
	public const QuestBoardListViewItem.InfoKind SIZEOF = 6;
}

// Namespace: 
public class QuestBoardListViewItemDraw : MonoBehaviour // TypeDefIndex: 11108
{
	// Fields
	public static readonly int POS_Y_ITVL_AREA; // 0x0
	public static readonly int POS_Y_ITVL_SHORTCUT; // 0x4
	public static readonly int POS_Y_ITVL_QUEST; // 0x8
	public static readonly int CLIP_W_DEFAULT; // 0xC
	public static readonly int CLIP_W_AREA; // 0x10
	public static readonly int CLIP_RANGE_MARGIN; // 0x14
	public static readonly int SCRL_OBJ_DUMMY_NUM; // 0x18
	private static readonly int TITLE_LEVEL_BASE_X; // 0x1C
	private static readonly int PHASE_NORMAL_MAX; // 0x20
	private static readonly int PHASE_EXTRA_MAX; // 0x24
	public static readonly int TITLE_LABEL_BASE_WIDTH; // 0x28
	private static readonly Color CAMPAIGN_COST_COLOR; // 0x2C
	private static readonly Color OVER_COST_COLOR; // 0x3C
	private static readonly Vector3 NEW_POS_AREA; // 0x4C
	private static readonly Vector3 NEW_POS_SHORTCUT; // 0x58
	private static readonly Vector3 NEW_POS_QUEST; // 0x64
	private static readonly Vector3 NEW_POS_QUEST_NEXT; // 0x70
	private static readonly int NEW_W_DEFAULT; // 0x7C
	private static readonly int NEW_H_DEFAULT; // 0x80
	private static readonly int NEW_W_AREA; // 0x84
	private static readonly int NEW_H_AREA; // 0x88
	private static readonly Vector3 CLEAR_POS_AREA; // 0x8C
	private static readonly Vector3 CLEAR_POS_QUEST; // 0x98
	private static readonly float NEXT_POS_X_AREA_L; // 0xA4
	private static readonly float NEXT_POS_X_AREA_R; // 0xA8
	private static readonly float NEXT_POS_X_QUEST; // 0xAC
	private static readonly Vector3 PREV_POS_QUEST; // 0xB0
	private static readonly Vector3 PREV_POS_QUEST_NEXT; // 0xBC
	private static readonly Vector3 LINE_ST_POS_AREA; // 0xC8
	private static readonly Vector3 LINE_ST_POS_SHORTCUT; // 0xD4
	private static readonly Vector3 COST_OBJ_POS; // 0xE0
	private static readonly Vector3 COST_OBJ_POS_WAR_BOARD; // 0xEC
	private static readonly int COST_BG_WIDTH_SINGLE; // 0xF8
	private static readonly int COST_BG_WIDTH_DOUBLE; // 0xFC
	private static readonly int COST_BG_WIDTH_TLIPLE_FOR_ALL_ITEM; // 0x100
	private static readonly int COST_BG_WIDTH_WAR_BOARD; // 0x104
	private static readonly int COST_BG_WIDTH_DOUBLE_QP; // 0x108
	private static readonly string COST_BG_ITEM; // 0x110
	private static readonly string COST_BG_QP; // 0x118
	private static readonly Vector3 COST_1_ICON_AP_POS; // 0x120
	private static readonly Vector3 COST_1_ICON_AP_POS_WAR_BOARD; // 0x12C
	private static readonly Vector3 COST_1_LABEL_AP_POS; // 0x138
	private static readonly Vector3 COST_1_LABEL_AP_POS_WAR_BOARD; // 0x144
	private static readonly int COST_2_ICON_NORMAL_POSITION_X; // 0x150
	private static readonly int COST_2_ICON_QP_POSITION_X; // 0x154
	private static readonly int COST_2_LABEL_NORMAL_POSITION_X; // 0x158
	private static readonly int COST_2_LABEL_QP_POSITION_X; // 0x15C
	private static readonly int COST_1_LABEL_NORMAL_POSITION_X_FOR_ALL_ITEM; // 0x160
	private static readonly int COST_2_ICON_NORMAL_POSITION_X_FOR_ALL_ITEM; // 0x164
	private static readonly int COST_2_LABEL_NORMAL_POSITION_X_FOR_ALL_ITEM; // 0x168
	private static readonly int COST_3_ICON_NORMAL_POSITION_X_FOR_ALL_ITEM; // 0x16C
	private static readonly int COST_3_LABEL_NORMAL_POSITION_X_FOR_ALL_ITEM; // 0x170
	private static readonly float COST_1_LABEL_DIGIT_3_SCALE_X; // 0x174
	private static readonly int COST_1_LABEL_DEFAULT_WIDTH; // 0x178
	private static readonly int COST_2_LABEL_DEFAULT_WIDTH; // 0x17C
	private static readonly int COST_3_LABEL_DEFAULT_WIDTH; // 0x180
	private static readonly float COST_LABEL_WIDTH_FOR_THREE_ITEM; // 0x184
	private static readonly float COST_2_LABEL_DIGIT_8_SCALE_X; // 0x188
	private static readonly float COST_2_LABEL_DIGIT_9_SCALE_X; // 0x18C
	private static readonly int COST_LABEL_DEFAULT_SPACING; // 0x190
	private static readonly int COST_LABEL_SPACING_FOR_THREE_ITEM; // 0x194
	private static readonly Vector3 SHOHI_SP_POS; // 0x198
	private static readonly Vector3 SHOHI_SP_POS_WAR_BOARD; // 0x1A4
	private static readonly string SHOHI_SP_NAME; // 0x1B0
	private static readonly string SHOHI_SP_NAME_WAR_BOARD; // 0x1B8
	private static readonly string QUEST_BOARD_COSTNAME; // 0x1C0
	private static readonly int QUEST_BOARD_PHASE_INTERVAL; // 0x1C8
	private static readonly int QUEST_BOARD_PHASE_LOOF_INTERVAL; // 0x1CC
	private static readonly int QUEST_BOARD_PHASE_EX_INTERVAL; // 0x1D0
	private static readonly int QUEST_BOARD_PHASE_EX_LOOF_INTERVAL; // 0x1D4
	private static readonly Vector3 CHALLENGE_OBJ_POS_SINGLE; // 0x1D8
	private static readonly Vector3 CHALLENGE_OBJ_POS_DOUBLE; // 0x1E4
	private static readonly Vector3 PHASE_OBJ_POS_SINGLE; // 0x1F0
	private static readonly Vector3 PHASE_OBJ_POS_DOUBLE; // 0x1FC
	private static readonly Vector3 PHASE_OBJ_POS_DOUBLE_QP; // 0x208
	private static readonly Vector3 PHASE_OBJ_POS_TRIPLE_ITEM; // 0x214
	private static readonly Vector3 PHASE_STR_POS_SINGLE; // 0x220
	private static readonly Vector3 PHASE_STR_POS_DOUBLE; // 0x22C
	private static readonly Vector3 PHASE_STR_POS_DOUBLE_QP; // 0x238
	private static readonly Vector3 PHASE_STR_POS_TRIPLE_ITEM; // 0x244
	private static readonly Vector3 PHASE_STR_SCL_SINGLE; // 0x250
	private static readonly Vector3 PHASE_STR_SCL_DOUBLE; // 0x25C
	private static readonly Vector3 PHASE_STR_SCL_DOUBLE_QP; // 0x268
	private static readonly Vector3 PHASE_STR_SCL_TRIPLE_ITEM; // 0x274
	private static readonly int BOARD_MESSAGE_MAX_WITDH; // 0x280
	private static readonly Vector3 BLACK_MARK_OBJ_POS; // 0x284
	private static readonly Vector3 BLACK_MARK_OBJ_POS_CENTER; // 0x290
	private static readonly Vector3 WHITE_MARK_OBJ_UNDER_POS; // 0x29C
	private static readonly string EVENT_WAR_SPNAME_PREFIX; // 0x2A8
	private static readonly string QUEST_BOARD_SPNAME_PREFIX; // 0x2B0
	private static readonly string QUEST_BOARD_ICON_SPNAME_PREFIX; // 0x2B8
	private static readonly string QUEST_BOARD_MASK_SPNAME_PREFIX; // 0x2C0
	private static readonly string QUEST_BOARD_SHOHI_SPNAME_PREFIX; // 0x2C8
	private static readonly string QUEST_BOARD_AP_SPNAME_PREFIX; // 0x2D0
	private static readonly string QUEST_BOARD_INFO_FRAME_NAME; // 0x2D8
	private static readonly string QUEST_BOARD_DAMAGE_RECODE_NAME; // 0x2E0
	private static readonly string QUEST_BOARD_PREV_ICON_NAME; // 0x2E8
	private static readonly string QUEST_BOARD_KNOCKDOWN_RECODE_NAME; // 0x2F0
	private static readonly string QUEST_BOARD_ICON_TEXTURE_PATH; // 0x2F8
	private static readonly string QUEST_BOARD_ICON_TEXTURE_PREFIX; // 0x300
	private static readonly int QUEST_BOARD_KNOCKDOWN_DAMAGE_WIDTH; // 0x308
	private static readonly int QUEST_BOARD_KNOCKDOWN_DAMAGE_POSX; // 0x30C
	private static readonly int QUEST_BOARD_KNOCKDOWN_ZERO_DAMAGE_POSX; // 0x310
	private static readonly float FLICK_THRESHOLD; // 0x314
	private static readonly string BANNER_POINT_SPNAME_ON; // 0x318
	private static readonly string BANNER_POINT_SPNAME_OFF; // 0x320
	private static readonly int SHORTCUT_FACE_MASK_SP_W; // 0x328
	private static readonly int QUEST_FACE_MASK_SP_W; // 0x32C
	private static readonly string SHORTCUT_FACE_MASK_SPNAME; // 0x330
	private static readonly string QUEST_STORY_FACE_MASK_SPNAME; // 0x338
	private static readonly string QUEST_MAIN_FACE_MASK_SPNAME; // 0x340
	private static readonly string QUEST_EVENT_FACE_MASK_SPNAME; // 0x348
	private static readonly string[] RP_SPNAME_FRAME; // 0x350
	private static readonly string[] RP_SPNAME_POINT; // 0x358
	private static readonly int RESTRICTION_DEFAULT_FONT_SIZE; // 0x360
	private static readonly int RESTRICTION_FONT_SPACING_DEFAULT; // 0x364
	private static readonly int RESTRICTION_FONT_SPACING_MIN; // 0x368
	private static readonly string QBOARD_CAP_CLOSED; // 0x370
	private static readonly string QBOARD_CAP_CLOSED_SPECIAL_FORMAT; // 0x378
	private static readonly string QBOARD_CAP_CLOSED_SPECIAL; // 0x380
	private static readonly string[] msQBoardL1Names; // 0x388
	private static readonly string msQBoardL2Name_Story; // 0x390
	private static readonly string msQBoardL2Name_Hero; // 0x398
	private static readonly string[] msQBoardL3Names; // 0x3A0
	private static readonly string[] msLabelMainSprNames; // 0x3A8
	private static readonly string[] QuestBoardApSpNames; // 0x3B0
	private static readonly string msPhaseSprName_ArrowOff; // 0x3B8
	private static readonly string msPhaseSprName_ArrowOn; // 0x3C0
	private static readonly string msPhaseSprName_ExArrowOff; // 0x3C8
	private static readonly string msPhaseSprName_ExArrowOn; // 0x3D0
	private static readonly string msPhaseSprName_LoopOff; // 0x3D8
	private static readonly string msPhaseSprName_LoopOn; // 0x3E0
	private static readonly string msPhaseSprName_LoopFirstOff; // 0x3E8
	private static readonly string CHAPTER_SP_BASE_NAME; // 0x3F0
	private static readonly string CHAPTER_SP_UNIT_NAME; // 0x3F8
	[SerializeField] // RVA: 0xCE967C Offset: 0xCE967C VA: 0xCE967C
	private UIAtlas mCommonAtlas; // 0x18
	[SerializeField] // RVA: 0xCE968C Offset: 0xCE968C VA: 0xCE968C
	private UIAtlas mTerminalAtlas; // 0x20
	[SerializeField] // RVA: 0xCE969C Offset: 0xCE969C VA: 0xCE969C
	private UISprite mcBaseP; // 0x28
	[SerializeField] // RVA: 0xCE96AC Offset: 0xCE96AC VA: 0xCE96AC
	private GameObject[] mStatusSp; // 0x30
	[SerializeField] // RVA: 0xCE96BC Offset: 0xCE96BC VA: 0xCE96BC
	private GameObject mStatusObj; // 0x38
	[SerializeField] // RVA: 0xCE96CC Offset: 0xCE96CC VA: 0xCE96CC
	private GameObject mOptionObj; // 0x40
	[SerializeField] // RVA: 0xCE96DC Offset: 0xCE96DC VA: 0xCE96DC
	private GameObject mLabelObj; // 0x48
	[SerializeField] // RVA: 0xCE96EC Offset: 0xCE96EC VA: 0xCE96EC
	private GameObject mTitleObj; // 0x50
	[SerializeField] // RVA: 0xCE96FC Offset: 0xCE96FC VA: 0xCE96FC
	private GameObject mRewardObj; // 0x58
	[SerializeField] // RVA: 0xCE970C Offset: 0xCE970C VA: 0xCE970C
	private GameObject mPhaseObj; // 0x60
	[SerializeField] // RVA: 0xCE971C Offset: 0xCE971C VA: 0xCE971C
	private GameObject mChallengeObj; // 0x68
	[SerializeField] // RVA: 0xCE972C Offset: 0xCE972C VA: 0xCE972C
	private UILabel mChallengeLb; // 0x70
	[SerializeField] // RVA: 0xCE973C Offset: 0xCE973C VA: 0xCE973C
	private UISprite challengeStrSpr; // 0x78
	[SerializeField] // RVA: 0xCE974C Offset: 0xCE974C VA: 0xCE974C
	private GameObject mCostObj; // 0x80
	[SerializeField] // RVA: 0xCE975C Offset: 0xCE975C VA: 0xCE975C
	private ShiningIconComponent mNewIcon; // 0x88
	[SerializeField] // RVA: 0xCE976C Offset: 0xCE976C VA: 0xCE976C
	private UISprite mNextSp; // 0x90
	[SerializeField] // RVA: 0xCE977C Offset: 0xCE977C VA: 0xCE977C
	private UISprite mPrevSp; // 0x98
	[SerializeField] // RVA: 0xCE978C Offset: 0xCE978C VA: 0xCE978C
	private UILabel mTitleNameLb; // 0xA0
	[SerializeField] // RVA: 0xCE979C Offset: 0xCE979C VA: 0xCE979C
	private GameObject mTitleLevelRoot; // 0xA8
	[SerializeField] // RVA: 0xCE97AC Offset: 0xCE97AC VA: 0xCE97AC
	private UISprite mTitleLevelStrSp; // 0xB0
	[SerializeField] // RVA: 0xCE97BC Offset: 0xCE97BC VA: 0xCE97BC
	private UISprite mTitleLevelSp; // 0xB8
	[SerializeField] // RVA: 0xCE97CC Offset: 0xCE97CC VA: 0xCE97CC
	private UILabel mTitleLevelLb; // 0xC0
	[SerializeField] // RVA: 0xCE97DC Offset: 0xCE97DC VA: 0xCE97DC
	private UILabel mTitleShortcutLb; // 0xC8
	[SerializeField] // RVA: 0xCE97EC Offset: 0xCE97EC VA: 0xCE97EC
	private UISprite mLabelNameSp; // 0xD0
	[SerializeField] // RVA: 0xCE97FC Offset: 0xCE97FC VA: 0xCE97FC
	private GameObject mLabelFaceObj; // 0xD8
	[SerializeField] // RVA: 0xCE980C Offset: 0xCE980C VA: 0xCE980C
	private UISprite mLabelFaceIcon; // 0xE0
	[SerializeField] // RVA: 0xCE981C Offset: 0xCE981C VA: 0xCE981C
	private UISprite mLabelFaceMaskShortcutSp; // 0xE8
	[SerializeField] // RVA: 0xCE982C Offset: 0xCE982C VA: 0xCE982C
	private UISprite mLabelFaceMaskQuestSp; // 0xF0
	[SerializeField] // RVA: 0xCE983C Offset: 0xCE983C VA: 0xCE983C
	private UISprite mLabelChapterSp; // 0xF8
	[SerializeField] // RVA: 0xCE984C Offset: 0xCE984C VA: 0xCE984C
	private UISprite mLabelBoardSectionSp; // 0x100
	[SerializeField] // RVA: 0xCE985C Offset: 0xCE985C VA: 0xCE985C
	private UILabel mLabelSubSectionNumLb; // 0x108
	[SerializeField] // RVA: 0xCE986C Offset: 0xCE986C VA: 0xCE986C
	private BoardOptionTextWithIconComponent mOptionInfoLb; // 0x110
	[SerializeField] // RVA: 0xCE987C Offset: 0xCE987C VA: 0xCE987C
	private UISprite mOptionInfoFrameSp; // 0x118
	[SerializeField] // RVA: 0xCE988C Offset: 0xCE988C VA: 0xCE988C
	private UILabel mOptionRestrinctionLb; // 0x120
	[SerializeField] // RVA: 0xCE989C Offset: 0xCE989C VA: 0xCE989C
	private UISprite mOptionRestrinctionSp; // 0x128
	[SerializeField] // RVA: 0xCE98AC Offset: 0xCE98AC VA: 0xCE98AC
	private ItemIconComponent mRewardIcon; // 0x130
	[SerializeField] // RVA: 0xCE98BC Offset: 0xCE98BC VA: 0xCE98BC
	private UISprite mRewardGetSP; // 0x138
	[SerializeField] // RVA: 0xCE98CC Offset: 0xCE98CC VA: 0xCE98CC
	private UISprite mRewardFirstSP; // 0x140
	[SerializeField] // RVA: 0xCE98DC Offset: 0xCE98DC VA: 0xCE98DC
	private UISprite mPhaseStrSp; // 0x148
	[SerializeField] // RVA: 0xCE98EC Offset: 0xCE98EC VA: 0xCE98EC
	private UISprite[] mPhaseSp; // 0x150
	[SerializeField] // RVA: 0xCE98FC Offset: 0xCE98FC VA: 0xCE98FC
	private UILabel mCostLb1; // 0x158
	[SerializeField] // RVA: 0xCE990C Offset: 0xCE990C VA: 0xCE990C
	private UILabel mCostLb2; // 0x160
	[SerializeField] // RVA: 0xCE991C Offset: 0xCE991C VA: 0xCE991C
	private UILabel mCostLb3; // 0x168
	[SerializeField] // RVA: 0xCE992C Offset: 0xCE992C VA: 0xCE992C
	private UISprite mCostShohiSp; // 0x170
	[SerializeField] // RVA: 0xCE993C Offset: 0xCE993C VA: 0xCE993C
	private UISprite mCostBg1; // 0x178
	[SerializeField] // RVA: 0xCE994C Offset: 0xCE994C VA: 0xCE994C
	private UISprite mCostBg2; // 0x180
	[SerializeField] // RVA: 0xCE995C Offset: 0xCE995C VA: 0xCE995C
	private UISprite mCostBg3; // 0x188
	[SerializeField] // RVA: 0xCE996C Offset: 0xCE996C VA: 0xCE996C
	private UISprite mCostApSp; // 0x190
	[SerializeField] // RVA: 0xCE997C Offset: 0xCE997C VA: 0xCE997C
	private UISprite mCostRpSp; // 0x198
	[SerializeField] // RVA: 0xCE998C Offset: 0xCE998C VA: 0xCE998C
	private UISprite mCostRpPointSp; // 0x1A0
	[SerializeField] // RVA: 0xCE999C Offset: 0xCE999C VA: 0xCE999C
	private ItemIconComponent mCostItemIcon1; // 0x1A8
	[SerializeField] // RVA: 0xCE99AC Offset: 0xCE99AC VA: 0xCE99AC
	private ItemIconComponent mCostItemIcon2; // 0x1B0
	[SerializeField] // RVA: 0xCE99BC Offset: 0xCE99BC VA: 0xCE99BC
	private ItemIconComponent mCostItemIcon3; // 0x1B8
	[SerializeField] // RVA: 0xCE99CC Offset: 0xCE99CC VA: 0xCE99CC
	private UISprite mCostConsumeBattleWinSp; // 0x1C0
	[SerializeField] // RVA: 0xCE99DC Offset: 0xCE99DC VA: 0xCE99DC
	private UISprite mShohiSp; // 0x1C8
	[SerializeField] // RVA: 0xCE99EC Offset: 0xCE99EC VA: 0xCE99EC
	private GameObject mEarthLinePrefab; // 0x1D0
	[SerializeField] // RVA: 0xCE99FC Offset: 0xCE99FC VA: 0xCE99FC
	private GameObject mNoticeNumberPrefab; // 0x1D8
	[SerializeField] // RVA: 0xCE9A0C Offset: 0xCE9A0C VA: 0xCE9A0C
	private GameObject mNoticeNumberRoot; // 0x1E0
	[SerializeField] // RVA: 0xCE9A1C Offset: 0xCE9A1C VA: 0xCE9A1C
	private GameObject mClassIconRoot; // 0x1E8
	[SerializeField] // RVA: 0xCE9A2C Offset: 0xCE9A2C VA: 0xCE9A2C
	private UISprite mClassStrSp; // 0x1F0
	[SerializeField] // RVA: 0xCE9A3C Offset: 0xCE9A3C VA: 0xCE9A3C
	private ServantClassIconComponent[] mClassIcons; // 0x1F8
	[SerializeField] // RVA: 0xCE9A4C Offset: 0xCE9A4C VA: 0xCE9A4C
	private GameObject mBannerRoot; // 0x200
	[SerializeField] // RVA: 0xCE9A5C Offset: 0xCE9A5C VA: 0xCE9A5C
	private TerminalBannerComponent[] mTerminalBanners; // 0x208
	[SerializeField] // RVA: 0xCE9A6C Offset: 0xCE9A6C VA: 0xCE9A6C
	private GameObject mBannerArrowObj; // 0x210
	[SerializeField] // RVA: 0xCE9A7C Offset: 0xCE9A7C VA: 0xCE9A7C
	private ScrollArrowComponent[] mBannerArrows; // 0x218
	[SerializeField] // RVA: 0xCE9A8C Offset: 0xCE9A8C VA: 0xCE9A8C
	private UIGrid mBannerPointGrid; // 0x220
	[SerializeField] // RVA: 0xCE9A9C Offset: 0xCE9A9C VA: 0xCE9A9C
	private UISprite[] mBannerPointSps; // 0x228
	[SerializeField] // RVA: 0xCE9AAC Offset: 0xCE9AAC VA: 0xCE9AAC
	private GameObject mNoBattleObj; // 0x230
	[SerializeField] // RVA: 0xCE9ABC Offset: 0xCE9ABC VA: 0xCE9ABC
	private UISprite mRarePrismSp; // 0x238
	[SerializeField] // RVA: 0xCE9ACC Offset: 0xCE9ACC VA: 0xCE9ACC
	private GameObject mQuestInfoBtn; // 0x240
	[SerializeField] // RVA: 0xCE9ADC Offset: 0xCE9ADC VA: 0xCE9ADC
	private GameObject mQuestInfoShowing; // 0x248
	[SerializeField] // RVA: 0xCE9AEC Offset: 0xCE9AEC VA: 0xCE9AEC
	private UISprite mDamageRecordSp; // 0x250
	[SerializeField] // RVA: 0xCE9AFC Offset: 0xCE9AFC VA: 0xCE9AFC
	private UILabel mDamageRecordLb; // 0x258
	[SerializeField] // RVA: 0xCE9B0C Offset: 0xCE9B0C VA: 0xCE9B0C
	private UISprite mKnockdownRecordSp; // 0x260
	[SerializeField] // RVA: 0xCE9B1C Offset: 0xCE9B1C VA: 0xCE9B1C
	private UILabel mKnockdownRecordCountLb; // 0x268
	[SerializeField] // RVA: 0xCE9B2C Offset: 0xCE9B2C VA: 0xCE9B2C
	private UILabel mKnockdownRecordDamageLb; // 0x270
	[SerializeField] // RVA: 0xCE9B3C Offset: 0xCE9B3C VA: 0xCE9B3C
	private UILabel mKnockdownRecordPlusLb; // 0x278
	[SerializeField] // RVA: 0xCE9B4C Offset: 0xCE9B4C VA: 0xCE9B4C
	private UILabel mKnockdownRecordDamageNameLb; // 0x280
	[SerializeField] // RVA: 0xCE9B5C Offset: 0xCE9B5C VA: 0xCE9B5C
	private GameObject blackMarkSpace; // 0x288
	[SerializeField] // RVA: 0xCE9B6C Offset: 0xCE9B6C VA: 0xCE9B6C
	private UILabel mBoardMessage; // 0x290
	private NoticeNumberComponent mNoticeNumber; // 0x298
	private QuestBoardListViewEarthLine mEarthLine; // 0x2A0
	private GameObject mEarthLineObj; // 0x2A8
	private QuestBoardListViewObject mListViewObject; // 0x2B0
	private int mBannerCount; // 0x2B8
	private bool mIsEnableBannerAutoMoveOld; // 0x2BC
	private float mBannerAutoMoveTimeOld; // 0x2C0
	private float mBannerAutoMoveTimeInterval; // 0x2C4
	private bool mIsPressed; // 0x2C8
	private bool mIsPressedForDragX; // 0x2C9
	private Vector2 mPressPos; // 0x2CC
	private bool mIsEnableDragX; // 0x2D4
	private Vector2 mTouchPosNow; // 0x2D8
	private Vector2 mTouchPosOld; // 0x2E0
	private float mTouchPosDif; // 0x2E8
	private int restrictionDefaultWidth; // 0x2EC
	private List<QuestBoardInformaionText> mInfoTextList; // 0x2F0
	private GiftEntity[] mRewardIconInfs; // 0x2F8
	private GameObject blackMarkEffect; // 0x300
	private GameObject whiteMarkEffect; // 0x308
	private AssetData boardIconAssetData; // 0x310
	private string boardIconName; // 0x318
	[SerializeField] // RVA: 0xCE9B7C Offset: 0xCE9B7C VA: 0xCE9B7C
	private UITexture boardIconTexture; // 0x320
	[SerializeField] // RVA: 0xCE9B8C Offset: 0xCE9B8C VA: 0xCE9B8C
	private GameObject eventTarget; // 0x328
	[SerializeField] // RVA: 0xCE9B9C Offset: 0xCE9B9C VA: 0xCE9B9C
	private BoardOptionEventTargetComponent eventTargetComponent; // 0x330
	[CompilerGeneratedAttribute] // RVA: 0xCE9BAC Offset: 0xCE9BAC VA: 0xCE9BAC
	private static Func<ViewEnemyEntity, int> <>f__am$cache0; // 0x400
	[CompilerGeneratedAttribute] // RVA: 0xCE9BBC Offset: 0xCE9BBC VA: 0xCE9BBC
	private static Func<RestrictionEntity, bool> <>f__am$cache1; // 0x408

	// Properties
	public bool IsPressed { get; }
	public bool IsPressedForDragX { get; }
	public bool IsEnableDragX { get; }
	public float TouchPosDif { get; }

	// Methods

	// RVA: 0x1AF88AC Offset: 0x1AF88AC VA: 0x1AF88AC
	public void .ctor() { }

	// RVA: 0x1AF894C Offset: 0x1AF894C VA: 0x1AF894C
	public bool get_IsPressed() { }

	// RVA: 0x1AF8954 Offset: 0x1AF8954 VA: 0x1AF8954
	public bool get_IsPressedForDragX() { }

	// RVA: 0x1AF895C Offset: 0x1AF895C VA: 0x1AF895C
	public bool get_IsEnableDragX() { }

	// RVA: 0x1AF8964 Offset: 0x1AF8964 VA: 0x1AF8964
	public float get_TouchPosDif() { }

	// RVA: 0x1AF896C Offset: 0x1AF896C VA: 0x1AF896C
	private void Awake() { }

	// RVA: 0x1AF89A8 Offset: 0x1AF89A8 VA: 0x1AF89A8
	private void OnDestroy() { }

	// RVA: 0x1AF8B5C Offset: 0x1AF8B5C VA: 0x1AF8B5C
	public void SetListViewObject(QuestBoardListViewObject questBoardObject) { }

	// RVA: 0x1AF8B64 Offset: 0x1AF8B64 VA: 0x1AF8B64
	public void SetItem(QuestBoardListViewItem questBoardItem, QuestBoardListViewItemDraw.DispMode dispMode) { }

	// RVA: 0x1B01AF0 Offset: 0x1B01AF0 VA: 0x1B01AF0
	private void ResetInfoTextList() { }

	// RVA: 0x1B01B78 Offset: 0x1B01B78 VA: 0x1B01B78
	public void SetItemOfAreaForTeminalTopEffect(QuestBoardListViewItem questBoardItem, bool isBoardDisp, bool isBadgeDisp, bool isBlackMarkOnly, bool isSpecialClosedBanner) { }

	// RVA: 0x1AFA2C4 Offset: 0x1AFA2C4 VA: 0x1AFA2C4
	private void SetItemOfArea(QuestBoardListViewItem questBoardItem, bool isBoardDisp = True, bool isBadgeDisp = True, bool isBlackMarkOnly = False, bool isSpecialClosedBanner = False) { }

	// RVA: 0x1B02360 Offset: 0x1B02360 VA: 0x1B02360
	private void SetBlackMarkAndWhiteMark(QuestBoardListViewItem questBoardItem, WarEntity warEntity, bool isBlackMarkOnly) { }

	// RVA: 0x1B02E5C Offset: 0x1B02E5C VA: 0x1B02E5C
	private void CreateInfoTextList(QuestBoardListViewItem questBoardItem, long checkTime) { }

	// RVA: 0x1B03794 Offset: 0x1B03794 VA: 0x1B03794
	private void UpdateInfoText(QuestBoardListViewItem questBoardItem, int strIndex, long checkTime) { }

	// RVA: 0x1B03778 Offset: 0x1B03778 VA: 0x1B03778
	private bool IsEventTime(EventEntity eventEntity, long checkTime) { }

	// RVA: 0x1B03674 Offset: 0x1B03674 VA: 0x1B03674
	private BoardMessageEntity FindOverrideQuestMessage(BoardMessageEntity[] boardMessageData, int eventId) { }

	// RVA: 0x1AFB518 Offset: 0x1AFB518 VA: 0x1AFB518
	private void SetItemOfShortcut(QuestBoardListViewItem questBoardItem) { }

	// RVA: 0x1AF93F8 Offset: 0x1AF93F8 VA: 0x1AF93F8
	private void SetItemOfFolder(QuestBoardListViewItem questBoardItem) { }

	// RVA: 0x1B01B94 Offset: 0x1B01B94 VA: 0x1B01B94
	private bool IsPurchasedByRarePrism(List<MapControl.QuestInfo> questList, WarEntity warEnt) { }

	// RVA: 0x1B04CC0 Offset: 0x1B04CC0 VA: 0x1B04CC0
	private bool HasNewQuestInWar(List<MapControl.QuestInfo> questList, int warId) { }

	// RVA: 0x1AFC618 Offset: 0x1AFC618 VA: 0x1AFC618
	private void SetItemOfQuest(QuestBoardListViewItem questBoardItem) { }

	// RVA: 0x1B09084 Offset: 0x1B09084 VA: 0x1B09084
	private QuestPhaseDetailEntity.BoardInfo CreateQuestBoardInfoPreBattleFormation() { }

	// RVA: 0x1AFFFF8 Offset: 0x1AFFFF8 VA: 0x1AFFFF8
	private void SetItemOfWarBoard(QuestBoardListViewItem questBoardItem) { }

	// RVA: 0x1B05BB8 Offset: 0x1B05BB8 VA: 0x1B05BB8
	private void SetCostDisp(QuestEntity questEnt, bool isClosed, int costCalcVal, int fixedVal, Color baseColor, out bool isDoubleItemConsume, out bool isDoubleItemConsumeQp, out bool isTripleItemConsume) { }

	// RVA: 0x1B093A4 Offset: 0x1B093A4 VA: 0x1B093A4
	private bool SetRestrictionLabelFromQuestRestrictionMaster(int questId, int phase) { }

	// RVA: 0x1B09524 Offset: 0x1B09524 VA: 0x1B09524
	private void SetRestrinctionLabelSpacingX(int spacingX) { }

	// RVA: 0x1B052E8 Offset: 0x1B052E8 VA: 0x1B052E8
	private bool IsMainWar(int warId) { }

	// RVA: 0x1B051CC Offset: 0x1B051CC VA: 0x1B051CC
	private string GetFaceMaskSpriteName(QuestEntity.enType questType) { }

	// RVA: 0x1B099BC Offset: 0x1B099BC VA: 0x1B099BC
	private bool IsDispQuestName(QuestEntity.enType questType) { }

	// RVA: 0x1B05A2C Offset: 0x1B05A2C VA: 0x1B05A2C
	private string GetDispQuestName(QuestEntity questEnt, QuestEntity.enType questType) { }

	// RVA: 0x1B056E4 Offset: 0x1B056E4 VA: 0x1B056E4
	private string GetQuestIconName(QuestEntity questEnt, QuestEntity.enType questType) { }

	// RVA: 0x1B05588 Offset: 0x1B05588 VA: 0x1B05588
	private string GetQuestIconNameForMainType(QuestEntity questEnt) { }

	// RVA: 0x1B043EC Offset: 0x1B043EC VA: 0x1B043EC
	private void SetupRewardIconDisp(QuestEntity questEnt, bool isClosed, Color color) { }

	// RVA: 0x1B03B30 Offset: 0x1B03B30 VA: 0x1B03B30
	private string GetAdvanceNoticeText(MapControl.QuestInfo questInfo, QuestEntity questEnt) { }

	// RVA: 0x1B04918 Offset: 0x1B04918 VA: 0x1B04918
	private void SetupFirstRewardDisp(int questId, int afterClearType, Color color) { }

	// RVA: 0x1B04A4C Offset: 0x1B04A4C VA: 0x1B04A4C
	private void SetupRewardGotDisp(int questId, UserQuestEntity userQuestEnt, Color color) { }

	// RVA: 0x1B099E4 Offset: 0x1B099E4 VA: 0x1B099E4
	public void setInfoShowing(bool onOff) { }

	// RVA: 0x1B021E0 Offset: 0x1B021E0 VA: 0x1B021E0
	private string GetEventAddBannerSpriteName(EventEntity eventEnt, bool isActiveEventWar) { }

	// RVA: 0x1B05118 Offset: 0x1B05118 VA: 0x1B05118
	private GameObject GetStatusSp(QuestBoardListViewItemDraw.enStatus status) { }

	// RVA: 0x1B02938 Offset: 0x1B02938 VA: 0x1B02938
	private void SetStatusActive(QuestBoardListViewItemDraw.enStatus status, bool isActive = True) { }

	// RVA: 0x1B02808 Offset: 0x1B02808 VA: 0x1B02808
	private void SetBadge(int num) { }

	// RVA: 0x1B02988 Offset: 0x1B02988 VA: 0x1B02988
	private void SetNewIcon(Vector3 pos, int w, int h) { }

	// RVA: 0x1B03830 Offset: 0x1B03830 VA: 0x1B03830
	private void SetPickupIcon() { }

	// RVA: 0x1B02BB4 Offset: 0x1B02BB4 VA: 0x1B02BB4
	private void SetClearSprite(WarEntity warEnt) { }

	// RVA: 0x1B02CBC Offset: 0x1B02CBC VA: 0x1B02CBC
	private void SetNextSprite(MapControl.AreaBoardInfo info, WarEntity warEnt) { }

	// RVA: 0x1B04D98 Offset: 0x1B04D98 VA: 0x1B04D98
	private void SetPrevSprite(QuestEntity questEnt, Vector3 pos) { }

	// RVA: 0x1B0392C Offset: 0x1B0392C VA: 0x1B0392C
	private void SetStatusToggle() { }

	// RVA: 0x1B04044 Offset: 0x1B04044 VA: 0x1B04044
	private bool SetFaceImage(QuestEntity questEnt, UISprite maskSprite, int maskWidth, string maskSpriteName, Color baseColor) { }

	// RVA: 0x1B09728 Offset: 0x1B09728 VA: 0x1B09728
	private void SetCostLabelItem(UILabel label, int consumeNo, UserItemEntity usrItem, ItemEntity itemEnt, Color baseCol, bool isClosed) { }

	// RVA: 0x1B0958C Offset: 0x1B0958C VA: 0x1B0958C
	private void SetCostLabel(UILabel label, string content, int costCalcVal, Color baseColor, bool isOverCost, bool isClosed, bool isFixedVal) { }

	// RVA: 0x1B08944 Offset: 0x1B08944 VA: 0x1B08944
	private void InitPhase(bool isDoubleItemConsume, bool isDoubleItemConsumeQp, bool isTripleItemConsume) { }

	// RVA: 0x1B08DB0 Offset: 0x1B08DB0 VA: 0x1B08DB0
	private string GetPhaseArrowSpriteName(QuestBoardListViewItemDraw.PhaseShowType phaseType, bool isOn, bool isLastIndex, bool isRepeatFirst, bool isRepeatLast) { }

	// RVA: 0x1B08F80 Offset: 0x1B08F80 VA: 0x1B08F80
	private int GetPhaseArrowIntervalSize(QuestBoardListViewItemDraw.PhaseShowType phaseType, bool isRepeatLast) { }

	// RVA: 0x1B053D4 Offset: 0x1B053D4 VA: 0x1B053D4
	private string ConvertToChineseAscii(int n) { }

	// RVA: 0x1B04B78 Offset: 0x1B04B78 VA: 0x1B04B78
	private QuestBoardInformaionText[] GetCampaignText(int questId, int phase, bool isQuestNoneCleared, ref int costCalcVal, ref int fixedVal) { }

	// RVA: 0x1B09A24 Offset: 0x1B09A24 VA: 0x1B09A24
	private List<QuestBoardInformaionText> GetCampaignTextListByEventQuestMaster(int questId, int phase, bool isQuestNoneCleared, ref int costCalcVal, ref int fixedVal) { }

	// RVA: 0x1B09DB4 Offset: 0x1B09DB4 VA: 0x1B09DB4
	private List<QuestBoardInformaionText> GetCampaignTextListByWarGroupMaster(int questId, int phase, bool isQuestNoneCleared, ref int costCalcVal, ref int fixedVal) { }

	// RVA: 0x1B0A16C Offset: 0x1B0A16C VA: 0x1B0A16C
	private QuestBoardInformaionText CreateQuestBoardInformationText(QuestEntity questEntity, EventEntity eventEnt, EventCampaignEntity eventCampaignEnt, int phase, bool isQuestNoneCleared, ref int costCalcVal, ref int fixedVal) { }

	// RVA: 0x1B0AA3C Offset: 0x1B0AA3C VA: 0x1B0AA3C
	private bool IsValidSupportSelection(QuestEntity questEntity, int phase) { }

	// RVA: 0x1B0ADA0 Offset: 0x1B0ADA0 VA: 0x1B0ADA0
	public void SetInput(QuestBoardListViewItem questBoardItem, bool isInput) { }

	// RVA: 0x1B0ADA4 Offset: 0x1B0ADA4 VA: 0x1B0ADA4
	public void UpdateItem(QuestBoardListViewItem questBoardItem, QuestBoardListViewItemDraw.DispMode dispMode, QuestBoardListViewManager qmanager) { }

	// RVA: 0x1B0B374 Offset: 0x1B0B374 VA: 0x1B0B374
	public void LateUpdateItem(QuestBoardListViewItem questBoardItem, QuestBoardListViewItemDraw.DispMode dispMode, QuestBoardListViewManager questBoardManager) { }

	// RVA: 0x1B0B6A8 Offset: 0x1B0B6A8 VA: 0x1B0B6A8
	public void OnChangeAlphaAnim(QuestBoardListViewItem questBoardItem, QuestBoardListViewItemDraw.DispMode dispMode, QuestBoardListViewManager questBoardManager) { }

	// RVA: 0x1B0B090 Offset: 0x1B0B090 VA: 0x1B0B090
	private void ResetQuest(QuestBoardListViewItem questBoardItem) { }

	// RVA: 0x1B0AE88 Offset: 0x1B0AE88 VA: 0x1B0AE88
	private void SetInfoTextAlpha(float alpha) { }

	// RVA: 0x1B0B6E0 Offset: 0x1B0B6E0 VA: 0x1B0B6E0
	private void ChangeNextInfoText(QuestBoardListViewItem questBoardItem, QuestBoardListViewManager questBoardManager) { }

	// RVA: 0x1B0BB68 Offset: 0x1B0BB68 VA: 0x1B0BB68
	private bool IsMultiInfoText() { }

	// RVA: 0x1B0BBC8 Offset: 0x1B0BBC8 VA: 0x1B0BBC8
	private bool IsInfoTextListNullOrEmpty() { }

	// RVA: 0x1B0AF0C Offset: 0x1B0AF0C VA: 0x1B0AF0C
	private void SetRewardIconAlpha(float alpha) { }

	// RVA: 0x1B0B8F8 Offset: 0x1B0B8F8 VA: 0x1B0B8F8
	private void ChangeNextRewardIcon(QuestBoardListViewManager questBoardManager) { }

	// RVA: 0x1B0BC30 Offset: 0x1B0BC30 VA: 0x1B0BC30
	private bool IsRewardIcons() { }

	// RVA: 0x1B0AF70 Offset: 0x1B0AF70 VA: 0x1B0AF70
	private void SetEventTargetAlpha(float alpha) { }

	// RVA: 0x1B0BC50 Offset: 0x1B0BC50 VA: 0x1B0BC50
	private bool IsNeedAnimEventTarget() { }

	// RVA: 0x1B0BA64 Offset: 0x1B0BA64 VA: 0x1B0BA64
	private void ChangeNextEventTarget() { }

	// RVA: 0x1B0BC80 Offset: 0x1B0BC80 VA: 0x1B0BC80
	public void OnPressItem(QuestBoardListViewItem questBoardItem, QuestBoardListViewItemDraw.DispMode dispMode, QuestBoardListViewManager questBoardManager) { }

	// RVA: 0x1B0BE48 Offset: 0x1B0BE48 VA: 0x1B0BE48
	public void OnPullItem(QuestBoardListViewItem questBoardItem, QuestBoardListViewItemDraw.DispMode dispMode, QuestBoardListViewManager questBoardManager) { }

	// RVA: 0x1B0BF7C Offset: 0x1B0BF7C VA: 0x1B0BF7C
	public void OnDragStartItem(QuestBoardListViewItem questBoardItem, QuestBoardListViewItemDraw.DispMode dispMode, QuestBoardListViewManager qmanager) { }

	// RVA: 0x1B01CFC Offset: 0x1B01CFC VA: 0x1B01CFC
	private void SetupBanner(QuestBoardListViewItem questBoardItem) { }

	// RVA: 0x1B0C23C Offset: 0x1B0C23C VA: 0x1B0C23C
	private void ResetBannerAutoMoveTime() { }

	// RVA: 0x1B0B38C Offset: 0x1B0B38C VA: 0x1B0B38C
	private void MoveBanner(QuestBoardListViewItem questBoardItem) { }

	// RVA: 0x1B0BD8C Offset: 0x1B0BD8C VA: 0x1B0BD8C
	private void OnPressBanner(QuestBoardListViewItem questBoardItem) { }

	// RVA: 0x1B0BEB8 Offset: 0x1B0BEB8 VA: 0x1B0BEB8
	private void OnPullBanner(QuestBoardListViewItem questBoardItem) { }

	// RVA: 0x1B0C110 Offset: 0x1B0C110 VA: 0x1B0C110
	private bool IsBanners(QuestBoardListViewItem questBoardItem) { }

	// RVA: 0x1B0C2B8 Offset: 0x1B0C2B8 VA: 0x1B0C2B8
	private void UpdateDispBannerPoint(int index = 0) { }

	// RVA: 0x1B0C17C Offset: 0x1B0C17C VA: 0x1B0C17C
	private void SetDispBannerArrows(bool isDisp, bool isForce = False) { }

	// RVA: 0x1B0C3D8 Offset: 0x1B0C3D8 VA: 0x1B0C3D8
	public bool IsFlickL() { }

	// RVA: 0x1B0C45C Offset: 0x1B0C45C VA: 0x1B0C45C
	public bool IsFlickR() { }

	// RVA: 0x1B0B2B8 Offset: 0x1B0B2B8 VA: 0x1B0B2B8
	private void UpdateTouch(QuestBoardListViewManager questBoardManager) { }

	// RVA: 0x1B09904 Offset: 0x1B09904 VA: 0x1B09904
	public static string GetApSpriteFileName(int bannerId) { }

	// RVA: 0x1B05818 Offset: 0x1B05818 VA: 0x1B05818
	private void LoadBoardIconTexture(QuestEntity questEntity, Action callback) { }

	// RVA: 0x1AF8A4C Offset: 0x1AF8A4C VA: 0x1AF8A4C
	private void ReleaseBoardIconTexture() { }

	// RVA: 0x1B05170 Offset: 0x1B05170 VA: 0x1B05170
	private string GetRecommendLv(QuestEntity questEnt, int questPhase, bool hasBattle, bool isClosed) { }

	// RVA: 0x1B0C4E4 Offset: 0x1B0C4E4 VA: 0x1B0C4E4
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD40EA4 Offset: 0xD40EA4 VA: 0xD40EA4
	// RVA: 0x1B0DEA4 Offset: 0x1B0DEA4 VA: 0x1B0DEA4
	private static int <SetItemOfQuest>m__0(ViewEnemyEntity value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD40EB4 Offset: 0xD40EB4 VA: 0xD40EB4
	// RVA: 0x1B0DECC Offset: 0x1B0DECC VA: 0x1B0DECC
	private static bool <IsValidSupportSelection>m__1(RestrictionEntity rest) { }
}

// Namespace: 
public enum QuestBoardListViewItemDraw.PhaseShowType // TypeDefIndex: 11109
{
	// Fields
	public int value__; // 0x0
	public const QuestBoardListViewItemDraw.PhaseShowType NORMAL = 0;
	public const QuestBoardListViewItemDraw.PhaseShowType EXTRA = 1;
}

// Namespace: 
public enum QuestBoardListViewItemDraw.DispMode // TypeDefIndex: 11110
{
	// Fields
	public int value__; // 0x0
	public const QuestBoardListViewItemDraw.DispMode INVISIBLE = 0;
	public const QuestBoardListViewItemDraw.DispMode INVALID = 1;
	public const QuestBoardListViewItemDraw.DispMode VALID = 2;
}

// Namespace: 
public enum QuestBoardListViewItemDraw.enQBoardL1Type // TypeDefIndex: 11111
{
	// Fields
	public int value__; // 0x0
	public const QuestBoardListViewItemDraw.enQBoardL1Type enNone = 0;
	public const QuestBoardListViewItemDraw.enQBoardL1Type enBanner = 1;
	public const QuestBoardListViewItemDraw.enQBoardL1Type enCapter = 2;
	public const QuestBoardListViewItemDraw.enQBoardL1Type enCaldeaGate = 3;
	public const QuestBoardListViewItemDraw.enQBoardL1Type enStory = 4;
	public const QuestBoardListViewItemDraw.enQBoardL1Type enHeroBallad = 5;
	public const QuestBoardListViewItemDraw.enQBoardL1Type enWarBoard = 6;
	public const QuestBoardListViewItemDraw.enQBoardL1Type enMAX = 7;
}

// Namespace: 
public enum QuestBoardListViewItemDraw.enStatus // TypeDefIndex: 11112
{
	// Fields
	public int value__; // 0x0
	public const QuestBoardListViewItemDraw.enStatus enNone = 0;
	public const QuestBoardListViewItemDraw.enStatus enNew = 1;
	public const QuestBoardListViewItemDraw.enStatus enClear = 2;
	public const QuestBoardListViewItemDraw.enStatus enComplete = 3;
	public const QuestBoardListViewItemDraw.enStatus enPickup = 4;
	public const QuestBoardListViewItemDraw.enStatus enMAX = 5;
	public const QuestBoardListViewItemDraw.enStatus enNotice = 6;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1BE0 Offset: 0xCB1BE0 VA: 0xCB1BE0
private sealed class QuestBoardListViewItemDraw.<IsPurchasedByRarePrism>c__AnonStorey0 // TypeDefIndex: 11113
{
	// Fields
	internal WarEntity warEnt; // 0x10
	internal UserQuestMaster userQuestMst; // 0x18

	// Methods

	// RVA: 0x1B04D80 Offset: 0x1B04D80 VA: 0x1B04D80
	public void .ctor() { }

	// RVA: 0x1B0E01C Offset: 0x1B0E01C VA: 0x1B0E01C
	internal bool <>m__0(MapControl.QuestInfo quest) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1BF0 Offset: 0xCB1BF0 VA: 0xCB1BF0
private sealed class QuestBoardListViewItemDraw.<HasNewQuestInWar>c__AnonStorey1 // TypeDefIndex: 11114
{
	// Fields
	internal int warId; // 0x10

	// Methods

	// RVA: 0x1B04D88 Offset: 0x1B04D88 VA: 0x1B04D88
	public void .ctor() { }

	// RVA: 0x1B0DF90 Offset: 0x1B0DF90 VA: 0x1B0DF90
	internal bool <>m__0(MapControl.QuestInfo quest) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1C00 Offset: 0xCB1C00 VA: 0xCB1C00
private sealed class QuestBoardListViewItemDraw.<SetItemOfQuest>c__AnonStorey2 // TypeDefIndex: 11115
{
	// Fields
	internal Color baseColor; // 0x10
	internal QuestBoardListViewItemDraw $this; // 0x20

	// Methods

	// RVA: 0x1B04D90 Offset: 0x1B04D90 VA: 0x1B04D90
	public void .ctor() { }

	// RVA: 0x1B0E374 Offset: 0x1B0E374 VA: 0x1B0E374
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1C10 Offset: 0xCB1C10 VA: 0xCB1C10
private sealed class QuestBoardListViewItemDraw.<SetItemOfWarBoard>c__AnonStorey3 // TypeDefIndex: 11116
{
	// Fields
	internal Color baseColor; // 0x10
	internal QuestBoardListViewItemDraw $this; // 0x20

	// Methods

	// RVA: 0x1B09584 Offset: 0x1B09584 VA: 0x1B09584
	public void .ctor() { }

	// RVA: 0x1B0E410 Offset: 0x1B0E410 VA: 0x1B0E410
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1C20 Offset: 0xCB1C20 VA: 0xCB1C20
private sealed class QuestBoardListViewItemDraw.<CreateQuestBoardInformationText>c__AnonStorey4 // TypeDefIndex: 11117
{
	// Fields
	internal long checkTime; // 0x10

	// Methods

	// RVA: 0x1B0AA34 Offset: 0x1B0AA34 VA: 0x1B0AA34
	public void .ctor() { }

	// RVA: 0x1B0DEFC Offset: 0x1B0DEFC VA: 0x1B0DEFC
	internal bool <>m__0(UserOwnItemInfo x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1C30 Offset: 0xCB1C30 VA: 0xCB1C30
private sealed class QuestBoardListViewItemDraw.<LoadBoardIconTexture>c__AnonStorey5 // TypeDefIndex: 11118
{
	// Fields
	internal Action callback; // 0x10
	internal QuestBoardListViewItemDraw $this; // 0x18

	// Methods

	// RVA: 0x1B0C4DC Offset: 0x1B0C4DC VA: 0x1B0C4DC
	public void .ctor() { }

	// RVA: 0x1B0E14C Offset: 0x1B0E14C VA: 0x1B0E14C
	internal void <>m__0(AssetData assetData) { }
}

// Namespace: 
public class QuestBoardListViewManager : ListViewManager // TypeDefIndex: 11119
{
	// Fields
	public static readonly float INTO_TIME; // 0x0
	public static readonly float EXIT_TIME; // 0x4
	public static readonly float MAP_INTO_TIME; // 0x8
	public static readonly float MAP_EXIT_TIME; // 0xC
	private static readonly float ALPHA_ANIM_SPD_RATE; // 0x10
	private static readonly float ALPHA_ANIM_TIME_INTERVAL; // 0x14
	private static readonly int DEFAULT_SCROLL_VIEW_DEPTH; // 0x18
	private static readonly int ALPHA_ANIM_COUNT_RESET_VAL; // 0x1C
	private const string TERMINAL_EFFECT_PATH = "Terminal/Effect";
	private const string BLACK_MARK_PREFAB_NAME = "ef_blackpoint";
	private const string WHITE_MARK_PREFAB_NAME = "ef_whitepoint";
	private const string BOARD_APPEAR_EFFECT_PREFAB_NAME = "bit_board_appear";
	private const string BOARD_APPEAR_EFFECT_FADE_PREFAB_NAME = "bit_fade_black";
	private const string BOARD_DISAPPEAR_EFFECT_PREFAB_NAME = "bit_board_disappear";
	private const string BOARD_DISAPPEAR2_EFFECT_PREFAB_NAME = "bit_board_disappear2";
	private const string BOARD_DISAPPEAR2_EFFECT_FADE_PREFAB_NAME = "bit_fade_black2";
	protected QuestBoardListViewManager.InitMode initMode; // 0x138
	[SerializeField] // RVA: 0xCE9BCC Offset: 0xCE9BCC VA: 0xCE9BCC
	private TerminalSceneComponent mTerminalScene; // 0x140
	[SerializeField] // RVA: 0xCE9BDC Offset: 0xCE9BDC VA: 0xCE9BDC
	private ScrTerminalListTop mTerminalList; // 0x148
	[SerializeField] // RVA: 0xCE9BEC Offset: 0xCE9BEC VA: 0xCE9BEC
	private UILabel mNoneLabel; // 0x150
	[SerializeField] // RVA: 0xCE9BFC Offset: 0xCE9BFC VA: 0xCE9BFC
	private Camera mUICamera; // 0x158
	[SerializeField] // RVA: 0xCE9C0C Offset: 0xCE9C0C VA: 0xCE9C0C
	private ExUITexture mFolderBg; // 0x160
	[SerializeField] // RVA: 0xCE9C1C Offset: 0xCE9C1C VA: 0xCE9C1C
	private UIPanel fadePanel; // 0x168
	[SerializeField] // RVA: 0xCE9C2C Offset: 0xCE9C2C VA: 0xCE9C2C
	private UIPanel onEffectPanel; // 0x170
	private GameObject mNoneLabelParent; // 0x178
	private AssetData effectAssetData; // 0x180
	private GameObject blackMarkPrefab; // 0x188
	private GameObject whiteMarkPrefab; // 0x190
	private GameObject boardAppearEffectPrefab; // 0x198
	private GameObject boardAppearEffectFadePrefab; // 0x1A0
	private GameObject boardDisappearEffectPrefab; // 0x1A8
	private GameObject boardDisappear2EffectPrefab; // 0x1B0
	private GameObject boardDisappearEffectFadePrefab; // 0x1B8
	private bool mIsDoing_Slide; // 0x1C0
	private float mBaseClipRange; // 0x1C4
	private BoxCollider mBoxCollider; // 0x1C8
	private ExUITexture mFolderBgTemp; // 0x1D0
	private float mCrossFadeTime; // 0x1D8
	private float mAlphaAnimNow; // 0x1DC
	private float mAlphaAnimTgt; // 0x1E0
	private float mAlphaAnimTimeOld; // 0x1E4
	private int mAlphaAnimCnt; // 0x1E8
	private bool mResetConsumeColor; // 0x1EC
	private float infoTime; // 0x1F0
	private float exitTime; // 0x1F4
	private int mRequestedBGid; // 0x1F8
	private bool mFaded; // 0x1FC
	private long mListCreatedTime; // 0x200
	[CompilerGeneratedAttribute] // RVA: 0xCE9C3C Offset: 0xCE9C3C VA: 0xCE9C3C
	[DebuggerBrowsableAttribute] // RVA: 0xCE9C3C Offset: 0xCE9C3C VA: 0xCE9C3C
	private float <SyncReferenceTime>k__BackingField; // 0x208
	private int waitCount; // 0x20C
	public QuestBoardListEffectAppearComponent effectAppearComponent; // 0x210
	public QuestBoardListEffectComponent effectAppearFadeComponent; // 0x218
	public QuestBoardListEffectDisappearComponent effectDisappearComponent; // 0x220
	public QuestBoardListEffectComponent effectDisappear2Component; // 0x228
	public QuestBoardListEffectComponent effectDisappearFadeComponent; // 0x230
	[SerializeField] // RVA: 0xCE9C78 Offset: 0xCE9C78 VA: 0xCE9C78
	private GameObject blockMaskPrefab; // 0x238
	private GameObject blockMask; // 0x240
	private List<ListViewItem> topItemList; // 0x248
	private List<ListViewItem> bottomItemList; // 0x250
	[CompilerGeneratedAttribute] // RVA: 0xCE9C88 Offset: 0xCE9C88 VA: 0xCE9C88
	private static Func<WarEntity, bool> <>f__am$cache0; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCE9C98 Offset: 0xCE9C98 VA: 0xCE9C98
	private static Func<WarEntity, bool> <>f__am$cache1; // 0x28

	// Properties
	public static float OUT_POS_OFS_X { get; }
