	private readonly int maxSize; // 0x2C
	private readonly int minSize; // 0x30

	// Properties
	public VariableType VariableType { get; }
	public Type ObjectType { get; }
	public string ElementName { get; }
	public int FixedSize { get; }
	public bool Resizable { get; }
	public int MinSize { get; }
	public int MaxSize { get; }

	// Methods

	// RVA: 0x1D582C4 Offset: 0x1D582C4 VA: 0x1D582C4
	public VariableType get_VariableType() { }

	// RVA: 0x1D582CC Offset: 0x1D582CC VA: 0x1D582CC
	public Type get_ObjectType() { }

	// RVA: 0x1D582D4 Offset: 0x1D582D4 VA: 0x1D582D4
	public string get_ElementName() { }

	// RVA: 0x1D582DC Offset: 0x1D582DC VA: 0x1D582DC
	public int get_FixedSize() { }

	// RVA: 0x1D582E4 Offset: 0x1D582E4 VA: 0x1D582E4
	public bool get_Resizable() { }

	// RVA: 0x1D582F4 Offset: 0x1D582F4 VA: 0x1D582F4
	public int get_MinSize() { }

	// RVA: 0x1D582FC Offset: 0x1D582FC VA: 0x1D582FC
	public int get_MaxSize() { }

	// RVA: 0x1D58304 Offset: 0x1D58304 VA: 0x1D58304
	public void .ctor(VariableType variableType, string elementName = "", int fixedSize = 0, int minSize = 0, int maxSize = 65536) { }

	// RVA: 0x1D5835C Offset: 0x1D5835C VA: 0x1D5835C
	public void .ctor(Type objectType, string elementName = "", int fixedSize = 0, int minSize = 0, int maxSize = 65536) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC17FC4 Offset: 0xC17FC4 VA: 0xC17FC4
public sealed class CheckForComponentAttribute : Attribute // TypeDefIndex: 3311
{
	// Fields
	private readonly Type type0; // 0x10
	private readonly Type type1; // 0x18
	private readonly Type type2; // 0x20

	// Properties
	public Type Type0 { get; }
	public Type Type1 { get; }
	public Type Type2 { get; }

	// Methods

	// RVA: 0x1D583F0 Offset: 0x1D583F0 VA: 0x1D583F0
	public Type get_Type0() { }

	// RVA: 0x1D583F8 Offset: 0x1D583F8 VA: 0x1D583F8
	public Type get_Type1() { }

	// RVA: 0x1D58400 Offset: 0x1D58400 VA: 0x1D58400
	public Type get_Type2() { }

	// RVA: 0x1D58408 Offset: 0x1D58408 VA: 0x1D58408
	public void .ctor(Type type0) { }

	// RVA: 0x1D58434 Offset: 0x1D58434 VA: 0x1D58434
	public void .ctor(Type type0, Type type1) { }

	// RVA: 0x1D5846C Offset: 0x1D5846C VA: 0x1D5846C
	public void .ctor(Type type0, Type type1, Type type2) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC18000 Offset: 0xC18000 VA: 0xC18000
public sealed class CompoundArrayAttribute : Attribute // TypeDefIndex: 3312
{
	// Fields
	private readonly string name; // 0x10
	private readonly string firstArrayName; // 0x18
	private readonly string secondArrayName; // 0x20

	// Properties
	public string Name { get; }
	public string FirstArrayName { get; }
	public string SecondArrayName { get; }

	// Methods

	// RVA: 0x1D584AC Offset: 0x1D584AC VA: 0x1D584AC
	public string get_Name() { }

	// RVA: 0x1D584B4 Offset: 0x1D584B4 VA: 0x1D584B4
	public string get_FirstArrayName() { }

	// RVA: 0x1D584BC Offset: 0x1D584BC VA: 0x1D584BC
	public string get_SecondArrayName() { }

	// RVA: 0x1D584C4 Offset: 0x1D584C4 VA: 0x1D584C4
	public void .ctor(string name, string firstArrayName, string secondArrayName) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC18014 Offset: 0xC18014 VA: 0xC18014
public sealed class DisplayOrderAttribute : Attribute // TypeDefIndex: 3313
{
	// Fields
	private readonly int index; // 0x10

	// Properties
	public int Index { get; }

	// Methods

	// RVA: 0x1D58F70 Offset: 0x1D58F70 VA: 0x1D58F70
	public int get_Index() { }

	// RVA: 0x1D58F78 Offset: 0x1D58F78 VA: 0x1D58F78
	public void .ctor(int orderIndex) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC18028 Offset: 0xC18028 VA: 0xC18028
public sealed class EventTargetAttribute : Attribute // TypeDefIndex: 3314
{
	// Fields
	private readonly FsmEventTarget.EventTarget target; // 0x10

	// Properties
	public FsmEventTarget.EventTarget Target { get; }

	// Methods

	// RVA: 0x1D58FA4 Offset: 0x1D58FA4 VA: 0x1D58FA4
	public FsmEventTarget.EventTarget get_Target() { }

	// RVA: 0x1D58FAC Offset: 0x1D58FAC VA: 0x1D58FAC
	public void .ctor(FsmEventTarget.EventTarget target) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC1803C Offset: 0xC1803C VA: 0xC1803C
public sealed class HasFloatSliderAttribute : Attribute // TypeDefIndex: 3315
{
	// Fields
	private readonly float minValue; // 0x10
	private readonly float maxValue; // 0x14

	// Properties
	public float MinValue { get; }
	public float MaxValue { get; }

	// Methods

	// RVA: 0x20BEDA0 Offset: 0x20BEDA0 VA: 0x20BEDA0
	public float get_MinValue() { }

	// RVA: 0x20BEDA8 Offset: 0x20BEDA8 VA: 0x20BEDA8
	public float get_MaxValue() { }

	// RVA: 0x20BEDB0 Offset: 0x20BEDB0 VA: 0x20BEDB0
	public void .ctor(float minValue, float maxValue) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC18050 Offset: 0xC18050 VA: 0xC18050
public sealed class HelpUrlAttribute : Attribute // TypeDefIndex: 3316
{
	// Fields
	private readonly string url; // 0x10

	// Properties
	public string Url { get; }

	// Methods

	// RVA: 0x20BEDE8 Offset: 0x20BEDE8 VA: 0x20BEDE8
	public string get_Url() { }

	// RVA: 0x20BEDF0 Offset: 0x20BEDF0 VA: 0x20BEDF0
	public void .ctor(string url) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC18064 Offset: 0xC18064 VA: 0xC18064
public sealed class HideTypeFilter : Attribute // TypeDefIndex: 3317
{
	// Methods

	// RVA: 0x20BEE58 Offset: 0x20BEE58 VA: 0x20BEE58
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC18078 Offset: 0xC18078 VA: 0xC18078
public sealed class MatchElementTypeAttribute : Attribute // TypeDefIndex: 3318
{
	// Fields
	private readonly string fieldName; // 0x10

	// Properties
	public string FieldName { get; }

	// Methods

	// RVA: 0x20BF164 Offset: 0x20BF164 VA: 0x20BF164
	public string get_FieldName() { }

	// RVA: 0x20BF16C Offset: 0x20BF16C VA: 0x20BF16C
	public void .ctor(string fieldName) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC1808C Offset: 0xC1808C VA: 0xC1808C
public sealed class MatchFieldTypeAttribute : Attribute // TypeDefIndex: 3319
{
	// Fields
	private readonly string fieldName; // 0x10

	// Properties
	public string FieldName { get; }

	// Methods

	// RVA: 0x20BF198 Offset: 0x20BF198 VA: 0x20BF198
	public string get_FieldName() { }

	// RVA: 0x20BF1A0 Offset: 0x20BF1A0 VA: 0x20BF1A0
	public void .ctor(string fieldName) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC180A0 Offset: 0xC180A0 VA: 0xC180A0
public sealed class NoteAttribute : Attribute // TypeDefIndex: 3320
{
	// Fields
	private readonly string text; // 0x10

	// Properties
	public string Text { get; }

	// Methods

	// RVA: 0x20BF7F4 Offset: 0x20BF7F4 VA: 0x20BF7F4
	public string get_Text() { }

	// RVA: 0x20BF7FC Offset: 0x20BF7FC VA: 0x20BF7FC
	public void .ctor(string text) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC180B4 Offset: 0xC180B4 VA: 0xC180B4
public sealed class ObjectTypeAttribute : Attribute // TypeDefIndex: 3321
{
	// Fields
	private readonly Type objectType; // 0x10

	// Properties
	public Type ObjectType { get; }

	// Methods

	// RVA: 0x20BF828 Offset: 0x20BF828 VA: 0x20BF828
	public Type get_ObjectType() { }

	// RVA: 0x20BF830 Offset: 0x20BF830 VA: 0x20BF830
	public void .ctor(Type objectType) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC180C8 Offset: 0xC180C8 VA: 0xC180C8
public sealed class ReadonlyAttribute : Attribute // TypeDefIndex: 3322
{
	// Methods

	// RVA: 0x20BF898 Offset: 0x20BF898 VA: 0x20BF898
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC180DC Offset: 0xC180DC VA: 0xC180DC
public sealed class VariableTypeAttribute : Attribute // TypeDefIndex: 3323
{
	// Fields
	private readonly VariableType type; // 0x10

	// Properties
	public VariableType Type { get; }

	// Methods

	// RVA: 0x20C1D08 Offset: 0x20C1D08 VA: 0x20C1D08
	public VariableType get_Type() { }

	// RVA: 0x20C1D10 Offset: 0x20C1D10 VA: 0x20C1D10
	public void .ctor(VariableType type) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC180F0 Offset: 0xC180F0 VA: 0xC180F0
public sealed class VariableTypeFilter : Attribute // TypeDefIndex: 3324
{
	// Methods

	// RVA: 0x20C1D3C Offset: 0x20C1D3C VA: 0x20C1D3C
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC18104 Offset: 0xC18104 VA: 0xC18104
public sealed class RequiredFieldAttribute : Attribute // TypeDefIndex: 3325
{
	// Methods

	// RVA: 0x20C1BEC Offset: 0x20C1BEC VA: 0x20C1BEC
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC18118 Offset: 0xC18118 VA: 0xC18118
public sealed class TitleAttribute : Attribute // TypeDefIndex: 3326
{
	// Fields
	private readonly string text; // 0x10

	// Properties
	public string Text { get; }

	// Methods

	// RVA: 0x20C1C6C Offset: 0x20C1C6C VA: 0x20C1C6C
	public string get_Text() { }

	// RVA: 0x20C1C74 Offset: 0x20C1C74 VA: 0x20C1C74
	public void .ctor(string text) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC1812C Offset: 0xC1812C VA: 0xC1812C
public sealed class TooltipAttribute : Attribute // TypeDefIndex: 3327
{
	// Fields
	private readonly string text; // 0x10

	// Properties
	public string Text { get; }

	// Methods

	// RVA: 0x20C1CA0 Offset: 0x20C1CA0 VA: 0x20C1CA0
	public string get_Text() { }

	// RVA: 0x20C1CA8 Offset: 0x20C1CA8 VA: 0x20C1CA8
	public void .ctor(string text) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC18140 Offset: 0xC18140 VA: 0xC18140
public sealed class UIHintAttribute : Attribute // TypeDefIndex: 3328
{
	// Fields
	private readonly UIHint hint; // 0x10

	// Properties
	public UIHint Hint { get; }

	// Methods

	// RVA: 0x20C1CD4 Offset: 0x20C1CD4 VA: 0x20C1CD4
	public UIHint get_Hint() { }

	// RVA: 0x20C1CDC Offset: 0x20C1CDC VA: 0x20C1CDC
	public void .ctor(UIHint hint) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmTemplateControl // TypeDefIndex: 3329
{
	// Fields
	public FsmTemplate fsmTemplate; // 0x10
	public FsmVarOverride[] fsmVarOverrides; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC1854C Offset: 0xC1854C VA: 0xC1854C
	private int <ID>k__BackingField; // 0x20
	private Fsm runFsm; // 0x28

	// Properties
	public int ID { get; set; }
	public Fsm RunFsm { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC19954 Offset: 0xC19954 VA: 0xC19954
	// RVA: 0x208ACC4 Offset: 0x208ACC4 VA: 0x208ACC4
	public int get_ID() { }

	[CompilerGeneratedAttribute] // RVA: 0xC19964 Offset: 0xC19964 VA: 0xC19964
	// RVA: 0x208ACCC Offset: 0x208ACCC VA: 0x208ACCC
	public void set_ID(int value) { }

	// RVA: 0x208ACD4 Offset: 0x208ACD4 VA: 0x208ACD4
	public Fsm get_RunFsm() { }

	// RVA: 0x208ACDC Offset: 0x208ACDC VA: 0x208ACDC
	private void set_RunFsm(Fsm value) { }

	// RVA: 0x208ACE4 Offset: 0x208ACE4 VA: 0x208ACE4
	public void .ctor() { }

	// RVA: 0x208AD58 Offset: 0x208AD58 VA: 0x208AD58
	public void .ctor(FsmTemplateControl source) { }

	// RVA: 0x208AF58 Offset: 0x208AF58 VA: 0x208AF58
	public void SetFsmTemplate(FsmTemplate template) { }

	// RVA: 0x208B2C4 Offset: 0x208B2C4 VA: 0x208B2C4
	public Fsm InstantiateFsm() { }

	// RVA: 0x208ADE8 Offset: 0x208ADE8 VA: 0x208ADE8
	private static FsmVarOverride[] CopyOverrides(FsmTemplateControl source) { }

	// RVA: 0x208AF80 Offset: 0x208AF80 VA: 0x208AF80
	private void ClearOverrides() { }

	// RVA: 0x208AFD8 Offset: 0x208AFD8 VA: 0x208AFD8
	public void UpdateOverrides() { }

	// RVA: 0x208B410 Offset: 0x208B410 VA: 0x208B410
	public void UpdateValues() { }

	// RVA: 0x208B358 Offset: 0x208B358 VA: 0x208B358
	public void ApplyOverrides(Fsm overrideFsm) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC18224 Offset: 0xC18224 VA: 0xC18224
private sealed class FsmTemplateControl.<>c__DisplayClass16_0 // TypeDefIndex: 3330
{
	// Fields
	public NamedVariable namedVariable; // 0x10

	// Methods

	// RVA: 0x208B408 Offset: 0x208B408 VA: 0x208B408
	public void .ctor() { }

	// RVA: 0x208B4D4 Offset: 0x208B4D4 VA: 0x208B4D4
	internal bool <UpdateOverrides>b__0(FsmVarOverride o) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmEventTarget // TypeDefIndex: 3331
{
	// Fields
	private static FsmEventTarget self; // 0x0
	public FsmEventTarget.EventTarget target; // 0x10
	public FsmBool excludeSelf; // 0x18
	public FsmOwnerDefault gameObject; // 0x20
	public FsmString fsmName; // 0x28
	public FsmBool sendToChildren; // 0x30
	public PlayMakerFSM fsmComponent; // 0x38

	// Properties
	public static FsmEventTarget Self { get; }

	// Methods

	// RVA: 0x207EF28 Offset: 0x207EF28 VA: 0x207EF28
	public static FsmEventTarget get_Self() { }

	// RVA: 0x207EFA4 Offset: 0x207EFA4 VA: 0x207EFA4
	public void .ctor() { }

	// RVA: 0x207F038 Offset: 0x207F038 VA: 0x207F038
	public void .ctor(FsmEventTarget source) { }

	// RVA: 0x207EFCC Offset: 0x207EFCC VA: 0x207EFCC
	public void ResetParameters() { }
}

// Namespace: 
public enum FsmEventTarget.EventTarget // TypeDefIndex: 3332
{
	// Fields
	public int value__; // 0x0
	public const FsmEventTarget.EventTarget Self = 0;
	public const FsmEventTarget.EventTarget GameObject = 1;
	public const FsmEventTarget.EventTarget GameObjectFSM = 2;
	public const FsmEventTarget.EventTarget FSMComponent = 3;
	public const FsmEventTarget.EventTarget BroadcastAll = 4;
	public const FsmEventTarget.EventTarget HostFSM = 5;
	public const FsmEventTarget.EventTarget SubFSMs = 6;
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmVarOverride // TypeDefIndex: 3333
{
	// Fields
	public NamedVariable variable; // 0x10
	public FsmVar fsmVar; // 0x18
	public bool isEdited; // 0x20

	// Methods

	// RVA: 0x20B2DD0 Offset: 0x20B2DD0 VA: 0x20B2DD0
	public void .ctor(FsmVarOverride source) { }

	// RVA: 0x20B2F44 Offset: 0x20B2F44 VA: 0x20B2F44
	public void .ctor(NamedVariable namedVar) { }

	// RVA: 0x20B2FC8 Offset: 0x20B2FC8 VA: 0x20B2FC8
	public void Apply(FsmVariables variables) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FunctionCall // TypeDefIndex: 3334
{
	// Fields
	public string FunctionName; // 0x10
	[SerializeField] // RVA: 0xC1855C Offset: 0xC1855C VA: 0xC1855C
	private string parameterType; // 0x18
	public FsmBool BoolParameter; // 0x20
	public FsmFloat FloatParameter; // 0x28
	public FsmInt IntParameter; // 0x30
	public FsmGameObject GameObjectParameter; // 0x38
	public FsmObject ObjectParameter; // 0x40
	public FsmString StringParameter; // 0x48
	public FsmVector2 Vector2Parameter; // 0x50
	public FsmVector3 Vector3Parameter; // 0x58
	public FsmRect RectParamater; // 0x60
	public FsmQuaternion QuaternionParameter; // 0x68
	public FsmMaterial MaterialParameter; // 0x70
	public FsmTexture TextureParameter; // 0x78
	public FsmColor ColorParameter; // 0x80
	public FsmEnum EnumParameter; // 0x88
	public FsmArray ArrayParameter; // 0x90

	// Properties
	public string ParameterType { get; set; }

	// Methods

	// RVA: 0x20BE7C4 Offset: 0x20BE7C4 VA: 0x20BE7C4
	public void .ctor() { }

	// RVA: 0x20BE9E8 Offset: 0x20BE9E8 VA: 0x20BE9E8
	public void .ctor(FunctionCall source) { }

	// RVA: 0x20BE824 Offset: 0x20BE824 VA: 0x20BE824
	public void ResetParameters() { }

	// RVA: 0x20BED90 Offset: 0x20BED90 VA: 0x20BED90
	public string get_ParameterType() { }

	// RVA: 0x20BED98 Offset: 0x20BED98 VA: 0x20BED98
	public void set_ParameterType(string value) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class LayoutOption // TypeDefIndex: 3335
{
	// Fields
	public LayoutOption.LayoutOptionType option; // 0x10
	public FsmFloat floatParam; // 0x18
	public FsmBool boolParam; // 0x20

	// Methods

	// RVA: 0x20BEE60 Offset: 0x20BEE60 VA: 0x20BEE60
	public void .ctor() { }

	// RVA: 0x20BEEE0 Offset: 0x20BEEE0 VA: 0x20BEEE0
	public void .ctor(LayoutOption source) { }

	// RVA: 0x20BEEA4 Offset: 0x20BEEA4 VA: 0x20BEEA4
	public void ResetParameters() { }

	// RVA: 0x20BEFC0 Offset: 0x20BEFC0 VA: 0x20BEFC0
	public GUILayoutOption GetGUILayoutOption() { }
}

// Namespace: 
public enum LayoutOption.LayoutOptionType // TypeDefIndex: 3336
{
	// Fields
	public int value__; // 0x0
	public const LayoutOption.LayoutOptionType Width = 0;
	public const LayoutOption.LayoutOptionType Height = 1;
	public const LayoutOption.LayoutOptionType MinWidth = 2;
	public const LayoutOption.LayoutOptionType MaxWidth = 3;
	public const LayoutOption.LayoutOptionType MinHeight = 4;
	public const LayoutOption.LayoutOptionType MaxHeight = 5;
	public const LayoutOption.LayoutOptionType ExpandWidth = 6;
	public const LayoutOption.LayoutOptionType ExpandHeight = 7;
}

// Namespace: HutongGames.PlayMaker
public class DebugUtils // TypeDefIndex: 3337
{
	// Methods

	[ConditionalAttribute] // RVA: 0xC19974 Offset: 0xC19974 VA: 0xC19974
	// RVA: 0x1D58504 Offset: 0x1D58504 VA: 0x1D58504
	public static void Assert(bool condition) { }

	// RVA: 0x1D58580 Offset: 0x1D58580 VA: 0x1D58580
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
public class DelayedEvent // TypeDefIndex: 3338
{
	// Fields
	private readonly Fsm fsm; // 0x10
	private readonly FsmEvent fsmEvent; // 0x18
	private readonly FsmEventTarget eventTarget; // 0x20
	private FsmEventData eventData; // 0x28
	private float timer; // 0x30
	private float delay; // 0x34
	private bool eventFired; // 0x38

	// Properties
	public FsmEvent FsmEvent { get; }
	public float Timer { get; }
	public bool Finished { get; }

	// Methods

	// RVA: 0x1D58588 Offset: 0x1D58588 VA: 0x1D58588
	public FsmEvent get_FsmEvent() { }

	// RVA: 0x1D58590 Offset: 0x1D58590 VA: 0x1D58590
	public float get_Timer() { }

	// RVA: 0x1D58598 Offset: 0x1D58598 VA: 0x1D58598
	public void .ctor(Fsm fsm, FsmEvent fsmEvent, float delay) { }

	// RVA: 0x1D586EC Offset: 0x1D586EC VA: 0x1D586EC
	public void .ctor(Fsm fsm, string fsmEventName, float delay) { }

	// RVA: 0x1D58784 Offset: 0x1D58784 VA: 0x1D58784
	public void .ctor(Fsm fsm, FsmEventTarget eventTarget, FsmEvent fsmEvent, float delay) { }

	// RVA: 0x1D587B0 Offset: 0x1D587B0 VA: 0x1D587B0
	public void .ctor(Fsm fsm, FsmEventTarget eventTarget, string fsmEvent, float delay) { }

	// RVA: 0x1D587DC Offset: 0x1D587DC VA: 0x1D587DC
	public void .ctor(PlayMakerFSM fsm, FsmEvent fsmEvent, float delay) { }

	// RVA: 0x1D5883C Offset: 0x1D5883C VA: 0x1D5883C
	public void .ctor(PlayMakerFSM fsm, string fsmEventName, float delay) { }

	// RVA: 0x1D5889C Offset: 0x1D5889C VA: 0x1D5889C
	public void Update() { }

	// RVA: 0x1D58F38 Offset: 0x1D58F38 VA: 0x1D58F38
	public float GetProgress() { }

	// RVA: 0x1D58F4C Offset: 0x1D58F4C VA: 0x1D58F4C
	public static bool WasSent(DelayedEvent delayedEvent) { }

	// RVA: 0x1D58F68 Offset: 0x1D58F68 VA: 0x1D58F68
	public bool get_Finished() { }
}

// Namespace: HutongGames.PlayMaker
public class FsmDebugUtility // TypeDefIndex: 3339
{
	// Methods

	// RVA: 0x207887C Offset: 0x207887C VA: 0x207887C
	public static void Log(Fsm fsm, string text, bool frameCount = False) { }

	// RVA: 0x2078B44 Offset: 0x2078B44 VA: 0x2078B44
	public static void Log(string text, bool frameCount = False) { }

	// RVA: 0x2078C2C Offset: 0x2078C2C VA: 0x2078C2C
	public static void Log(Object obj, string text) { }

	// RVA: 0x2078CD8 Offset: 0x2078CD8 VA: 0x2078CD8
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
public class FsmEventData // TypeDefIndex: 3340
{
	// Fields
	public GameObject SentByGameObject; // 0x10
	public Fsm SentByFsm; // 0x18
	public FsmState SentByState; // 0x20
	public FsmStateAction SentByAction; // 0x28
	public bool BoolData; // 0x30
	public int IntData; // 0x34
	public float FloatData; // 0x38
	public Vector2 Vector2Data; // 0x3C
	public Vector3 Vector3Data; // 0x44
	public string StringData; // 0x50
	public Quaternion QuaternionData; // 0x58
	public Rect RectData; // 0x68
	public Color ColorData; // 0x78
	public Object ObjectData; // 0x88
	public GameObject GameObjectData; // 0x90
	public Material MaterialData; // 0x98
	public Texture TextureData; // 0xA0

	// Methods

	// RVA: 0x207EB0C Offset: 0x207EB0C VA: 0x207EB0C
	public void .ctor() { }

	// RVA: 0x207EB14 Offset: 0x207EB14 VA: 0x207EB14
	public void .ctor(FsmEventData source) { }

	// RVA: 0x207ED2C Offset: 0x207ED2C VA: 0x207ED2C
	public void DebugLog() { }
}

// Namespace: HutongGames.PlayMaker
public static class FsmExecutionStack // TypeDefIndex: 3341
{
	// Fields
	private static readonly Stack<Fsm> fsmExecutionStack; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC1856C Offset: 0xC1856C VA: 0xC1856C
	private static int <MaxStackCount>k__BackingField; // 0x8

	// Properties
	public static Fsm ExecutingFsm { get; }
	public static FsmState ExecutingState { get; }
	public static string ExecutingStateName { get; }
	public static FsmStateAction ExecutingAction { get; }
	public static int StackCount { get; }
	public static int MaxStackCount { get; set; }

	// Methods

	// RVA: 0x207F328 Offset: 0x207F328 VA: 0x207F328
	public static Fsm get_ExecutingFsm() { }

	// RVA: 0x207F404 Offset: 0x207F404 VA: 0x207F404
	public static FsmState get_ExecutingState() { }

	// RVA: 0x207F4A4 Offset: 0x207F4A4 VA: 0x207F4A4
	public static string get_ExecutingStateName() { }

	// RVA: 0x207F550 Offset: 0x207F550 VA: 0x207F550
	public static FsmStateAction get_ExecutingAction() { }

	// RVA: 0x207F5E8 Offset: 0x207F5E8 VA: 0x207F5E8
	public static int get_StackCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xC199AC Offset: 0xC199AC VA: 0xC199AC
	// RVA: 0x207F66C Offset: 0x207F66C VA: 0x207F66C
	public static int get_MaxStackCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xC199BC Offset: 0xC199BC VA: 0xC199BC
	// RVA: 0x207F6D4 Offset: 0x207F6D4 VA: 0x207F6D4
	private static void set_MaxStackCount(int value) { }

	// RVA: 0x207F740 Offset: 0x207F740 VA: 0x207F740
	public static void PushFsm(Fsm executingFsm) { }

	// RVA: 0x207F860 Offset: 0x207F860 VA: 0x207F860
	public static void PopFsm() { }

	// RVA: 0x207F8E4 Offset: 0x207F8E4 VA: 0x207F8E4
	public static string GetDebugString() { }

	// RVA: 0x207F9B0 Offset: 0x207F9B0 VA: 0x207F9B0
	private static void .cctor() { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmProperty // TypeDefIndex: 3342
{
	// Fields
	public FsmObject TargetObject; // 0x10
	public string TargetTypeName; // 0x18
	public Type TargetType; // 0x20
	public string PropertyName; // 0x28
	public Type PropertyType; // 0x30
	public FsmBool BoolParameter; // 0x38
	public FsmFloat FloatParameter; // 0x40
	public FsmInt IntParameter; // 0x48
	public FsmGameObject GameObjectParameter; // 0x50
	public FsmString StringParameter; // 0x58
	public FsmVector2 Vector2Parameter; // 0x60
	public FsmVector3 Vector3Parameter; // 0x68
	public FsmRect RectParamater; // 0x70
	public FsmQuaternion QuaternionParameter; // 0x78
	public FsmObject ObjectParameter; // 0x80
	public FsmMaterial MaterialParameter; // 0x88
	public FsmTexture TextureParameter; // 0x90
	public FsmColor ColorParameter; // 0x98
	public FsmEnum EnumParameter; // 0xA0
	public FsmArray ArrayParameter; // 0xA8
	public bool setProperty; // 0xB0
	private bool initialized; // 0xB1
	private Object targetObjectCached; // 0xB8
	private MemberInfo[] memberInfo; // 0xC0

	// Methods

	// RVA: 0x2083744 Offset: 0x2083744 VA: 0x2083744
	public void .ctor() { }

	// RVA: 0x20839B4 Offset: 0x20839B4 VA: 0x20839B4
	public void .ctor(FsmProperty source) { }

	// RVA: 0x2083DF8 Offset: 0x2083DF8 VA: 0x2083DF8
	public void SetVariable(NamedVariable variable) { }

	// RVA: 0x20842C0 Offset: 0x20842C0 VA: 0x20842C0
	public NamedVariable GetVariable() { }

	// RVA: 0x208492C Offset: 0x208492C VA: 0x208492C
	public void SetPropertyName(string propertyName) { }

	// RVA: 0x20852CC Offset: 0x20852CC VA: 0x20852CC
	public void SetValue() { }

	// RVA: 0x2085F8C Offset: 0x2085F8C VA: 0x2085F8C
	public void GetValue() { }

	// RVA: 0x2084EFC Offset: 0x2084EFC VA: 0x2084EFC
	public void Init() { }

	// RVA: 0x2084820 Offset: 0x2084820 VA: 0x2084820
	public void CheckForReinitialize() { }

	// RVA: 0x20837C8 Offset: 0x20837C8 VA: 0x20837C8
	public void ResetParameters() { }
}

// Namespace: HutongGames.PlayMaker
public static class FsmTime // TypeDefIndex: 3343
{
	// Fields
	private static bool firstUpdateHasHappened; // 0x0
	private static float totalEditorPlayerPausedTime; // 0x4
	private static float realtimeLastUpdate; // 0x8
	private static int frameCountLastUpdate; // 0xC

	// Properties
	public static float RealtimeSinceStartup { get; }

	// Methods

	// RVA: 0x2081468 Offset: 0x2081468 VA: 0x2081468
	public static float get_RealtimeSinceStartup() { }

	// RVA: 0x208B690 Offset: 0x208B690 VA: 0x208B690
	public static void RealtimeBugFix() { }

	// RVA: 0x208B6E4 Offset: 0x208B6E4 VA: 0x208B6E4
	public static void Update() { }

	// RVA: 0x20828C4 Offset: 0x20828C4 VA: 0x20828C4
	public static string FormatTime(float time) { }

	// RVA: 0x208B790 Offset: 0x208B790 VA: 0x208B790
	public static void DebugLog() { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmAnimationCurve // TypeDefIndex: 3344
{
	// Fields
	public AnimationCurve curve; // 0x10

	// Methods

	// RVA: 0x2075FAC Offset: 0x2075FAC VA: 0x2075FAC
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmArray : NamedVariable // TypeDefIndex: 3345
{
	// Fields
	[SerializeField] // RVA: 0xC1857C Offset: 0xC1857C VA: 0xC1857C
	private VariableType type; // 0x38
	[SerializeField] // RVA: 0xC1858C Offset: 0xC1858C VA: 0xC1858C
	private string objectTypeName; // 0x40
	private Type objectType; // 0x48
	public float[] floatValues; // 0x50
	public int[] intValues; // 0x58
	public bool[] boolValues; // 0x60
	public string[] stringValues; // 0x68
	public Vector4[] vector4Values; // 0x70
	public Object[] objectReferences; // 0x78
	private Array sourceArray; // 0x80
	private object[] values; // 0x88

	// Properties
	public override object RawValue { get; set; }
	public override Type ObjectType { get; set; }
	public string ObjectTypeName { get; }
	public object[] Values { get; set; }
	public int Length { get; }
	public override VariableType TypeConstraint { get; }
	public VariableType ElementType { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	// RVA: 0x2076014 Offset: 0x2076014 VA: 0x2076014 Slot: 27
	public override object get_RawValue() { }

	// RVA: 0x207601C Offset: 0x207601C VA: 0x207601C Slot: 26
	public override void set_RawValue(object value) { }

	// RVA: 0x20760DC Offset: 0x20760DC VA: 0x20760DC Slot: 23
	public override Type get_ObjectType() { }

	// RVA: 0x20762A4 Offset: 0x20762A4 VA: 0x20762A4 Slot: 24
	public override void set_ObjectType(Type value) { }

	// RVA: 0x207610C Offset: 0x207610C VA: 0x207610C
	private void InitObjectType() { }

	// RVA: 0x2076468 Offset: 0x2076468 VA: 0x2076468
	public string get_ObjectTypeName() { }

	// RVA: 0x2076470 Offset: 0x2076470 VA: 0x2076470
	public object[] get_Values() { }

	// RVA: 0x20765E4 Offset: 0x20765E4 VA: 0x20765E4
	public void set_Values(object[] value) { }

	// RVA: 0x2076730 Offset: 0x2076730 VA: 0x2076730
	public int get_Length() { }

	// RVA: 0x2076770 Offset: 0x2076770 VA: 0x2076770 Slot: 25
	public override VariableType get_TypeConstraint() { }

	// RVA: 0x2076460 Offset: 0x2076460 VA: 0x2076460
	public VariableType get_ElementType() { }

	// RVA: 0x2076778 Offset: 0x2076778 VA: 0x2076778
	public void set_ElementType(VariableType value) { }

	// RVA: 0x20764A0 Offset: 0x20764A0 VA: 0x20764A0
	private void InitArray() { }

	// RVA: 0x2076F68 Offset: 0x2076F68 VA: 0x2076F68 Slot: 28
	public override void Init() { }

	// RVA: 0x2076F6C Offset: 0x2076F6C VA: 0x2076F6C
	public object Get(int index) { }

	// RVA: 0x2076FDC Offset: 0x2076FDC VA: 0x2076FDC
	public void Set(int index, object value) { }

	// RVA: 0x20769AC Offset: 0x20769AC VA: 0x20769AC
	private object Load(int index) { }

	// RVA: 0x20770AC Offset: 0x20770AC VA: 0x20770AC
	private void Save(int index, object value) { }

	// RVA: 0x207677C Offset: 0x207677C VA: 0x207677C
	public void SetType(VariableType newType) { }

	// RVA: 0x2076620 Offset: 0x2076620 VA: 0x2076620
	public void SaveChanges() { }

	// RVA: 0x2077974 Offset: 0x2077974 VA: 0x2077974
	public void CopyValues(FsmArray source) { }

	// RVA: 0x207779C Offset: 0x207779C VA: 0x207779C
	private void ConformSourceArraySize() { }

	// RVA: 0x20767E4 Offset: 0x20767E4 VA: 0x20767E4
	private Array GetSourceArray() { }

	// RVA: 0x2077A30 Offset: 0x2077A30 VA: 0x2077A30
	public void Resize(int newLength) { }

	// RVA: 0x2076450 Offset: 0x2076450 VA: 0x2076450
	public void Reset() { }

	// RVA: 0x2077BD4 Offset: 0x2077BD4 VA: 0x2077BD4
	public void .ctor() { }

	// RVA: 0x2077BE4 Offset: 0x2077BE4 VA: 0x2077BE4
	public void .ctor(string name) { }

	// RVA: 0x2077BF4 Offset: 0x2077BF4 VA: 0x2077BF4
	public void .ctor(FsmArray source) { }

