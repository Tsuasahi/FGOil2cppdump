	public void .ctor(int orderIndex) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC84150 Offset: 0xC84150 VA: 0xC84150
public sealed class EventTargetAttribute : Attribute // TypeDefIndex: 3314
{
	// Fields
	private readonly FsmEventTarget.EventTarget target; // 0x10

	// Properties
	public FsmEventTarget.EventTarget Target { get; }

	// Methods

	// RVA: 0xE2C904 Offset: 0xE2C904 VA: 0xE2C904
	public FsmEventTarget.EventTarget get_Target() { }

	// RVA: 0xE2C90C Offset: 0xE2C90C VA: 0xE2C90C
	public void .ctor(FsmEventTarget.EventTarget target) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC84164 Offset: 0xC84164 VA: 0xC84164
public sealed class HasFloatSliderAttribute : Attribute // TypeDefIndex: 3315
{
	// Fields
	private readonly float minValue; // 0x10
	private readonly float maxValue; // 0x14

	// Properties
	public float MinValue { get; }
	public float MaxValue { get; }

	// Methods

	// RVA: 0xFC8B80 Offset: 0xFC8B80 VA: 0xFC8B80
	public float get_MinValue() { }

	// RVA: 0xFC8B88 Offset: 0xFC8B88 VA: 0xFC8B88
	public float get_MaxValue() { }

	// RVA: 0xFC8B90 Offset: 0xFC8B90 VA: 0xFC8B90
	public void .ctor(float minValue, float maxValue) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC84178 Offset: 0xC84178 VA: 0xC84178
public sealed class HelpUrlAttribute : Attribute // TypeDefIndex: 3316
{
	// Fields
	private readonly string url; // 0x10

	// Properties
	public string Url { get; }

	// Methods

	// RVA: 0xFC8BC8 Offset: 0xFC8BC8 VA: 0xFC8BC8
	public string get_Url() { }

	// RVA: 0xFC8BD0 Offset: 0xFC8BD0 VA: 0xFC8BD0
	public void .ctor(string url) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC8418C Offset: 0xC8418C VA: 0xC8418C
public sealed class HideTypeFilter : Attribute // TypeDefIndex: 3317
{
	// Methods

	// RVA: 0xFC8C38 Offset: 0xFC8C38 VA: 0xFC8C38
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC841A0 Offset: 0xC841A0 VA: 0xC841A0
public sealed class MatchElementTypeAttribute : Attribute // TypeDefIndex: 3318
{
	// Fields
	private readonly string fieldName; // 0x10

	// Properties
	public string FieldName { get; }

	// Methods

	// RVA: 0xFC8F44 Offset: 0xFC8F44 VA: 0xFC8F44
	public string get_FieldName() { }

	// RVA: 0xFC8F4C Offset: 0xFC8F4C VA: 0xFC8F4C
	public void .ctor(string fieldName) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC841B4 Offset: 0xC841B4 VA: 0xC841B4
public sealed class MatchFieldTypeAttribute : Attribute // TypeDefIndex: 3319
{
	// Fields
	private readonly string fieldName; // 0x10

	// Properties
	public string FieldName { get; }

	// Methods

	// RVA: 0xFC8F78 Offset: 0xFC8F78 VA: 0xFC8F78
	public string get_FieldName() { }

	// RVA: 0xFC8F80 Offset: 0xFC8F80 VA: 0xFC8F80
	public void .ctor(string fieldName) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC841C8 Offset: 0xC841C8 VA: 0xC841C8
public sealed class NoteAttribute : Attribute // TypeDefIndex: 3320
{
	// Fields
	private readonly string text; // 0x10

	// Properties
	public string Text { get; }

	// Methods

	// RVA: 0xFC95D4 Offset: 0xFC95D4 VA: 0xFC95D4
	public string get_Text() { }

	// RVA: 0xFC95DC Offset: 0xFC95DC VA: 0xFC95DC
	public void .ctor(string text) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC841DC Offset: 0xC841DC VA: 0xC841DC
public sealed class ObjectTypeAttribute : Attribute // TypeDefIndex: 3321
{
	// Fields
	private readonly Type objectType; // 0x10

	// Properties
	public Type ObjectType { get; }

	// Methods

	// RVA: 0xFC9608 Offset: 0xFC9608 VA: 0xFC9608
	public Type get_ObjectType() { }

	// RVA: 0xFC9610 Offset: 0xFC9610 VA: 0xFC9610
	public void .ctor(Type objectType) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC841F0 Offset: 0xC841F0 VA: 0xC841F0
public sealed class ReadonlyAttribute : Attribute // TypeDefIndex: 3322
{
	// Methods

	// RVA: 0xFC9678 Offset: 0xFC9678 VA: 0xFC9678
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC84204 Offset: 0xC84204 VA: 0xC84204
public sealed class VariableTypeAttribute : Attribute // TypeDefIndex: 3323
{
	// Fields
	private readonly VariableType type; // 0x10

	// Properties
	public VariableType Type { get; }

	// Methods

	// RVA: 0xFCBAE8 Offset: 0xFCBAE8 VA: 0xFCBAE8
	public VariableType get_Type() { }

	// RVA: 0xFCBAF0 Offset: 0xFCBAF0 VA: 0xFCBAF0
	public void .ctor(VariableType type) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC84218 Offset: 0xC84218 VA: 0xC84218
public sealed class VariableTypeFilter : Attribute // TypeDefIndex: 3324
{
	// Methods

	// RVA: 0xFCBB1C Offset: 0xFCBB1C VA: 0xFCBB1C
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC8422C Offset: 0xC8422C VA: 0xC8422C
public sealed class RequiredFieldAttribute : Attribute // TypeDefIndex: 3325
{
	// Methods

	// RVA: 0xFCB9CC Offset: 0xFCB9CC VA: 0xFCB9CC
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC84240 Offset: 0xC84240 VA: 0xC84240
public sealed class TitleAttribute : Attribute // TypeDefIndex: 3326
{
	// Fields
	private readonly string text; // 0x10

	// Properties
	public string Text { get; }

	// Methods

	// RVA: 0xFCBA4C Offset: 0xFCBA4C VA: 0xFCBA4C
	public string get_Text() { }

	// RVA: 0xFCBA54 Offset: 0xFCBA54 VA: 0xFCBA54
	public void .ctor(string text) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC84254 Offset: 0xC84254 VA: 0xC84254
public sealed class TooltipAttribute : Attribute // TypeDefIndex: 3327
{
	// Fields
	private readonly string text; // 0x10

	// Properties
	public string Text { get; }

	// Methods

	// RVA: 0xFCBA80 Offset: 0xFCBA80 VA: 0xFCBA80
	public string get_Text() { }

	// RVA: 0xFCBA88 Offset: 0xFCBA88 VA: 0xFCBA88
	public void .ctor(string text) { }
}

// Namespace: HutongGames.PlayMaker
[AttributeUsageAttribute] // RVA: 0xC84268 Offset: 0xC84268 VA: 0xC84268
public sealed class UIHintAttribute : Attribute // TypeDefIndex: 3328
{
	// Fields
	private readonly UIHint hint; // 0x10

	// Properties
	public UIHint Hint { get; }

	// Methods

	// RVA: 0xFCBAB4 Offset: 0xFCBAB4 VA: 0xFCBAB4
	public UIHint get_Hint() { }

	// RVA: 0xFCBABC Offset: 0xFCBABC VA: 0xFCBABC
	public void .ctor(UIHint hint) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmTemplateControl // TypeDefIndex: 3329
{
	// Fields
	public FsmTemplate fsmTemplate; // 0x10
	public FsmVarOverride[] fsmVarOverrides; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC84674 Offset: 0xC84674 VA: 0xC84674
	private int <ID>k__BackingField; // 0x20
	private Fsm runFsm; // 0x28

	// Properties
	public int ID { get; set; }
	public Fsm RunFsm { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC85A7C Offset: 0xC85A7C VA: 0xC85A7C
	// RVA: 0xFB2D4C Offset: 0xFB2D4C VA: 0xFB2D4C
	public int get_ID() { }

	[CompilerGeneratedAttribute] // RVA: 0xC85A8C Offset: 0xC85A8C VA: 0xC85A8C
	// RVA: 0xFB2D54 Offset: 0xFB2D54 VA: 0xFB2D54
	public void set_ID(int value) { }

	// RVA: 0xFB2D5C Offset: 0xFB2D5C VA: 0xFB2D5C
	public Fsm get_RunFsm() { }

	// RVA: 0xFB2D64 Offset: 0xFB2D64 VA: 0xFB2D64
	private void set_RunFsm(Fsm value) { }

	// RVA: 0xFB2D6C Offset: 0xFB2D6C VA: 0xFB2D6C
	public void .ctor() { }

	// RVA: 0xFB2DE0 Offset: 0xFB2DE0 VA: 0xFB2DE0
	public void .ctor(FsmTemplateControl source) { }

	// RVA: 0xFB2FE0 Offset: 0xFB2FE0 VA: 0xFB2FE0
	public void SetFsmTemplate(FsmTemplate template) { }

	// RVA: 0xFB334C Offset: 0xFB334C VA: 0xFB334C
	public Fsm InstantiateFsm() { }

	// RVA: 0xFB2E70 Offset: 0xFB2E70 VA: 0xFB2E70
	private static FsmVarOverride[] CopyOverrides(FsmTemplateControl source) { }

	// RVA: 0xFB3008 Offset: 0xFB3008 VA: 0xFB3008
	private void ClearOverrides() { }

	// RVA: 0xFB3060 Offset: 0xFB3060 VA: 0xFB3060
	public void UpdateOverrides() { }

	// RVA: 0xFB3498 Offset: 0xFB3498 VA: 0xFB3498
	public void UpdateValues() { }

	// RVA: 0xFB33E0 Offset: 0xFB33E0 VA: 0xFB33E0
	public void ApplyOverrides(Fsm overrideFsm) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC8434C Offset: 0xC8434C VA: 0xC8434C
private sealed class FsmTemplateControl.<>c__DisplayClass16_0 // TypeDefIndex: 3330
{
	// Fields
	public NamedVariable namedVariable; // 0x10

	// Methods

	// RVA: 0xFB3490 Offset: 0xFB3490 VA: 0xFB3490
	public void .ctor() { }

	// RVA: 0xFB355C Offset: 0xFB355C VA: 0xFB355C
	internal bool <UpdateOverrides>b__0(FsmVarOverride o) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmEventTarget // TypeDefIndex: 3331
{
	// Fields
	private static FsmEventTarget self; // 0x0
	public FsmEventTarget.EventTarget target; // 0x10
	public FsmBool excludeSelf; // 0x18
	public FsmOwnerDefault gameObject; // 0x20
	public FsmString fsmName; // 0x28
	public FsmBool sendToChildren; // 0x30
	public PlayMakerFSM fsmComponent; // 0x38

	// Properties
	public static FsmEventTarget Self { get; }

	// Methods

	// RVA: 0xFA6FB0 Offset: 0xFA6FB0 VA: 0xFA6FB0
	public static FsmEventTarget get_Self() { }

	// RVA: 0xFA702C Offset: 0xFA702C VA: 0xFA702C
	public void .ctor() { }

	// RVA: 0xFA70C0 Offset: 0xFA70C0 VA: 0xFA70C0
	public void .ctor(FsmEventTarget source) { }

	// RVA: 0xFA7054 Offset: 0xFA7054 VA: 0xFA7054
	public void ResetParameters() { }
}

// Namespace: 
public enum FsmEventTarget.EventTarget // TypeDefIndex: 3332
{
	// Fields
	public int value__; // 0x0
	public const FsmEventTarget.EventTarget Self = 0;
	public const FsmEventTarget.EventTarget GameObject = 1;
	public const FsmEventTarget.EventTarget GameObjectFSM = 2;
	public const FsmEventTarget.EventTarget FSMComponent = 3;
	public const FsmEventTarget.EventTarget BroadcastAll = 4;
	public const FsmEventTarget.EventTarget HostFSM = 5;
	public const FsmEventTarget.EventTarget SubFSMs = 6;
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmVarOverride // TypeDefIndex: 3333
{
	// Fields
	public NamedVariable variable; // 0x10
	public FsmVar fsmVar; // 0x18
	public bool isEdited; // 0x20

	// Methods

	// RVA: 0xFBCBB0 Offset: 0xFBCBB0 VA: 0xFBCBB0
	public void .ctor(FsmVarOverride source) { }

	// RVA: 0xFBCD24 Offset: 0xFBCD24 VA: 0xFBCD24
	public void .ctor(NamedVariable namedVar) { }

	// RVA: 0xFBCDA8 Offset: 0xFBCDA8 VA: 0xFBCDA8
	public void Apply(FsmVariables variables) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FunctionCall // TypeDefIndex: 3334
{
	// Fields
	public string FunctionName; // 0x10
	[SerializeField] // RVA: 0xC84684 Offset: 0xC84684 VA: 0xC84684
	private string parameterType; // 0x18
	public FsmBool BoolParameter; // 0x20
	public FsmFloat FloatParameter; // 0x28
	public FsmInt IntParameter; // 0x30
	public FsmGameObject GameObjectParameter; // 0x38
	public FsmObject ObjectParameter; // 0x40
	public FsmString StringParameter; // 0x48
	public FsmVector2 Vector2Parameter; // 0x50
	public FsmVector3 Vector3Parameter; // 0x58
	public FsmRect RectParamater; // 0x60
	public FsmQuaternion QuaternionParameter; // 0x68
	public FsmMaterial MaterialParameter; // 0x70
	public FsmTexture TextureParameter; // 0x78
	public FsmColor ColorParameter; // 0x80
	public FsmEnum EnumParameter; // 0x88
	public FsmArray ArrayParameter; // 0x90

	// Properties
	public string ParameterType { get; set; }

	// Methods

	// RVA: 0xFC85A4 Offset: 0xFC85A4 VA: 0xFC85A4
	public void .ctor() { }

	// RVA: 0xFC87C8 Offset: 0xFC87C8 VA: 0xFC87C8
	public void .ctor(FunctionCall source) { }

	// RVA: 0xFC8604 Offset: 0xFC8604 VA: 0xFC8604
	public void ResetParameters() { }

	// RVA: 0xFC8B70 Offset: 0xFC8B70 VA: 0xFC8B70
	public string get_ParameterType() { }

	// RVA: 0xFC8B78 Offset: 0xFC8B78 VA: 0xFC8B78
	public void set_ParameterType(string value) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class LayoutOption // TypeDefIndex: 3335
{
	// Fields
	public LayoutOption.LayoutOptionType option; // 0x10
	public FsmFloat floatParam; // 0x18
	public FsmBool boolParam; // 0x20

	// Methods

	// RVA: 0xFC8C40 Offset: 0xFC8C40 VA: 0xFC8C40
	public void .ctor() { }

	// RVA: 0xFC8CC0 Offset: 0xFC8CC0 VA: 0xFC8CC0
	public void .ctor(LayoutOption source) { }

	// RVA: 0xFC8C84 Offset: 0xFC8C84 VA: 0xFC8C84
	public void ResetParameters() { }

	// RVA: 0xFC8DA0 Offset: 0xFC8DA0 VA: 0xFC8DA0
	public GUILayoutOption GetGUILayoutOption() { }
}

// Namespace: 
public enum LayoutOption.LayoutOptionType // TypeDefIndex: 3336
{
	// Fields
	public int value__; // 0x0
	public const LayoutOption.LayoutOptionType Width = 0;
	public const LayoutOption.LayoutOptionType Height = 1;
	public const LayoutOption.LayoutOptionType MinWidth = 2;
	public const LayoutOption.LayoutOptionType MaxWidth = 3;
	public const LayoutOption.LayoutOptionType MinHeight = 4;
	public const LayoutOption.LayoutOptionType MaxHeight = 5;
	public const LayoutOption.LayoutOptionType ExpandWidth = 6;
	public const LayoutOption.LayoutOptionType ExpandHeight = 7;
}

// Namespace: HutongGames.PlayMaker
public class DebugUtils // TypeDefIndex: 3337
{
	// Methods

	[ConditionalAttribute] // RVA: 0xC85A9C Offset: 0xC85A9C VA: 0xC85A9C
	// RVA: 0xE2BE64 Offset: 0xE2BE64 VA: 0xE2BE64
	public static void Assert(bool condition) { }

	// RVA: 0xE2BEE0 Offset: 0xE2BEE0 VA: 0xE2BEE0
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
public class DelayedEvent // TypeDefIndex: 3338
{
	// Fields
	private readonly Fsm fsm; // 0x10
	private readonly FsmEvent fsmEvent; // 0x18
	private readonly FsmEventTarget eventTarget; // 0x20
	private FsmEventData eventData; // 0x28
	private float timer; // 0x30
	private float delay; // 0x34
	private bool eventFired; // 0x38

	// Properties
	public FsmEvent FsmEvent { get; }
	public float Timer { get; }
	public bool Finished { get; }

	// Methods

	// RVA: 0xE2BEE8 Offset: 0xE2BEE8 VA: 0xE2BEE8
	public FsmEvent get_FsmEvent() { }

	// RVA: 0xE2BEF0 Offset: 0xE2BEF0 VA: 0xE2BEF0
	public float get_Timer() { }

	// RVA: 0xE2BEF8 Offset: 0xE2BEF8 VA: 0xE2BEF8
	public void .ctor(Fsm fsm, FsmEvent fsmEvent, float delay) { }

	// RVA: 0xE2C04C Offset: 0xE2C04C VA: 0xE2C04C
	public void .ctor(Fsm fsm, string fsmEventName, float delay) { }

	// RVA: 0xE2C0E4 Offset: 0xE2C0E4 VA: 0xE2C0E4
	public void .ctor(Fsm fsm, FsmEventTarget eventTarget, FsmEvent fsmEvent, float delay) { }

	// RVA: 0xE2C110 Offset: 0xE2C110 VA: 0xE2C110
	public void .ctor(Fsm fsm, FsmEventTarget eventTarget, string fsmEvent, float delay) { }

	// RVA: 0xE2C13C Offset: 0xE2C13C VA: 0xE2C13C
	public void .ctor(PlayMakerFSM fsm, FsmEvent fsmEvent, float delay) { }

	// RVA: 0xE2C19C Offset: 0xE2C19C VA: 0xE2C19C
	public void .ctor(PlayMakerFSM fsm, string fsmEventName, float delay) { }

	// RVA: 0xE2C1FC Offset: 0xE2C1FC VA: 0xE2C1FC
	public void Update() { }

	// RVA: 0xE2C898 Offset: 0xE2C898 VA: 0xE2C898
	public float GetProgress() { }

	// RVA: 0xE2C8AC Offset: 0xE2C8AC VA: 0xE2C8AC
	public static bool WasSent(DelayedEvent delayedEvent) { }

	// RVA: 0xE2C8C8 Offset: 0xE2C8C8 VA: 0xE2C8C8
	public bool get_Finished() { }
}

// Namespace: HutongGames.PlayMaker
public class FsmDebugUtility // TypeDefIndex: 3339
{
	// Methods

	// RVA: 0xFA0904 Offset: 0xFA0904 VA: 0xFA0904
	public static void Log(Fsm fsm, string text, bool frameCount = False) { }

	// RVA: 0xFA0BCC Offset: 0xFA0BCC VA: 0xFA0BCC
	public static void Log(string text, bool frameCount = False) { }

	// RVA: 0xFA0CB4 Offset: 0xFA0CB4 VA: 0xFA0CB4
	public static void Log(Object obj, string text) { }

	// RVA: 0xFA0D60 Offset: 0xFA0D60 VA: 0xFA0D60
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
public class FsmEventData // TypeDefIndex: 3340
{
	// Fields
	public GameObject SentByGameObject; // 0x10
	public Fsm SentByFsm; // 0x18
	public FsmState SentByState; // 0x20
	public FsmStateAction SentByAction; // 0x28
	public bool BoolData; // 0x30
	public int IntData; // 0x34
	public float FloatData; // 0x38
	public Vector2 Vector2Data; // 0x3C
	public Vector3 Vector3Data; // 0x44
	public string StringData; // 0x50
	public Quaternion QuaternionData; // 0x58
	public Rect RectData; // 0x68
	public Color ColorData; // 0x78
	public Object ObjectData; // 0x88
	public GameObject GameObjectData; // 0x90
	public Material MaterialData; // 0x98
	public Texture TextureData; // 0xA0

	// Methods

	// RVA: 0xFA6B94 Offset: 0xFA6B94 VA: 0xFA6B94
	public void .ctor() { }

	// RVA: 0xFA6B9C Offset: 0xFA6B9C VA: 0xFA6B9C
	public void .ctor(FsmEventData source) { }

	// RVA: 0xFA6DB4 Offset: 0xFA6DB4 VA: 0xFA6DB4
	public void DebugLog() { }
}

// Namespace: HutongGames.PlayMaker
public static class FsmExecutionStack // TypeDefIndex: 3341
{
	// Fields
	private static readonly Stack<Fsm> fsmExecutionStack; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC84694 Offset: 0xC84694 VA: 0xC84694
	private static int <MaxStackCount>k__BackingField; // 0x8

	// Properties
	public static Fsm ExecutingFsm { get; }
	public static FsmState ExecutingState { get; }
	public static string ExecutingStateName { get; }
	public static FsmStateAction ExecutingAction { get; }
	public static int StackCount { get; }
	public static int MaxStackCount { get; set; }

	// Methods

	// RVA: 0xFA73B0 Offset: 0xFA73B0 VA: 0xFA73B0
	public static Fsm get_ExecutingFsm() { }

	// RVA: 0xFA748C Offset: 0xFA748C VA: 0xFA748C
	public static FsmState get_ExecutingState() { }

	// RVA: 0xFA752C Offset: 0xFA752C VA: 0xFA752C
	public static string get_ExecutingStateName() { }

	// RVA: 0xFA75D8 Offset: 0xFA75D8 VA: 0xFA75D8
	public static FsmStateAction get_ExecutingAction() { }

	// RVA: 0xFA7670 Offset: 0xFA7670 VA: 0xFA7670
	public static int get_StackCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xC85AD4 Offset: 0xC85AD4 VA: 0xC85AD4
	// RVA: 0xFA76F4 Offset: 0xFA76F4 VA: 0xFA76F4
	public static int get_MaxStackCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xC85AE4 Offset: 0xC85AE4 VA: 0xC85AE4
	// RVA: 0xFA775C Offset: 0xFA775C VA: 0xFA775C
	private static void set_MaxStackCount(int value) { }

	// RVA: 0xFA77C8 Offset: 0xFA77C8 VA: 0xFA77C8
	public static void PushFsm(Fsm executingFsm) { }

	// RVA: 0xFA78E8 Offset: 0xFA78E8 VA: 0xFA78E8
	public static void PopFsm() { }

	// RVA: 0xFA796C Offset: 0xFA796C VA: 0xFA796C
	public static string GetDebugString() { }

	// RVA: 0xFA7A38 Offset: 0xFA7A38 VA: 0xFA7A38
	private static void .cctor() { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmProperty // TypeDefIndex: 3342
{
	// Fields
	public FsmObject TargetObject; // 0x10
	public string TargetTypeName; // 0x18
	public Type TargetType; // 0x20
	public string PropertyName; // 0x28
	public Type PropertyType; // 0x30
	public FsmBool BoolParameter; // 0x38
	public FsmFloat FloatParameter; // 0x40
	public FsmInt IntParameter; // 0x48
	public FsmGameObject GameObjectParameter; // 0x50
	public FsmString StringParameter; // 0x58
	public FsmVector2 Vector2Parameter; // 0x60
	public FsmVector3 Vector3Parameter; // 0x68
	public FsmRect RectParamater; // 0x70
	public FsmQuaternion QuaternionParameter; // 0x78
	public FsmObject ObjectParameter; // 0x80
	public FsmMaterial MaterialParameter; // 0x88
	public FsmTexture TextureParameter; // 0x90
	public FsmColor ColorParameter; // 0x98
	public FsmEnum EnumParameter; // 0xA0
	public FsmArray ArrayParameter; // 0xA8
	public bool setProperty; // 0xB0
	private bool initialized; // 0xB1
	private Object targetObjectCached; // 0xB8
	private MemberInfo[] memberInfo; // 0xC0

	// Methods

	// RVA: 0xFAB7CC Offset: 0xFAB7CC VA: 0xFAB7CC
	public void .ctor() { }

	// RVA: 0xFABA3C Offset: 0xFABA3C VA: 0xFABA3C
	public void .ctor(FsmProperty source) { }

	// RVA: 0xFABE80 Offset: 0xFABE80 VA: 0xFABE80
	public void SetVariable(NamedVariable variable) { }

	// RVA: 0xFAC348 Offset: 0xFAC348 VA: 0xFAC348
	public NamedVariable GetVariable() { }

	// RVA: 0xFAC9B4 Offset: 0xFAC9B4 VA: 0xFAC9B4
	public void SetPropertyName(string propertyName) { }

	// RVA: 0xFAD354 Offset: 0xFAD354 VA: 0xFAD354
	public void SetValue() { }

	// RVA: 0xFAE014 Offset: 0xFAE014 VA: 0xFAE014
	public void GetValue() { }

	// RVA: 0xFACF84 Offset: 0xFACF84 VA: 0xFACF84
	public void Init() { }

	// RVA: 0xFAC8A8 Offset: 0xFAC8A8 VA: 0xFAC8A8
	public void CheckForReinitialize() { }

	// RVA: 0xFAB850 Offset: 0xFAB850 VA: 0xFAB850
	public void ResetParameters() { }
}

// Namespace: HutongGames.PlayMaker
public static class FsmTime // TypeDefIndex: 3343
{
	// Fields
	private static bool firstUpdateHasHappened; // 0x0
	private static float totalEditorPlayerPausedTime; // 0x4
	private static float realtimeLastUpdate; // 0x8
	private static int frameCountLastUpdate; // 0xC

	// Properties
	public static float RealtimeSinceStartup { get; }

	// Methods

	// RVA: 0xFA94F0 Offset: 0xFA94F0 VA: 0xFA94F0
	public static float get_RealtimeSinceStartup() { }

	// RVA: 0xFB3718 Offset: 0xFB3718 VA: 0xFB3718
	public static void RealtimeBugFix() { }

	// RVA: 0xFB376C Offset: 0xFB376C VA: 0xFB376C
	public static void Update() { }

	// RVA: 0xFAA94C Offset: 0xFAA94C VA: 0xFAA94C
	public static string FormatTime(float time) { }

	// RVA: 0xFB3818 Offset: 0xFB3818 VA: 0xFB3818
	public static void DebugLog() { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmAnimationCurve // TypeDefIndex: 3344
{
	// Fields
	public AnimationCurve curve; // 0x10

	// Methods

	// RVA: 0xF9E034 Offset: 0xF9E034 VA: 0xF9E034
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmArray : NamedVariable // TypeDefIndex: 3345
{
	// Fields
	[SerializeField] // RVA: 0xC846A4 Offset: 0xC846A4 VA: 0xC846A4
	private VariableType type; // 0x38
	[SerializeField] // RVA: 0xC846B4 Offset: 0xC846B4 VA: 0xC846B4
	private string objectTypeName; // 0x40
	private Type objectType; // 0x48
	public float[] floatValues; // 0x50
	public int[] intValues; // 0x58
	public bool[] boolValues; // 0x60
	public string[] stringValues; // 0x68
	public Vector4[] vector4Values; // 0x70
	public Object[] objectReferences; // 0x78
	private Array sourceArray; // 0x80
	private object[] values; // 0x88

	// Properties
	public override object RawValue { get; set; }
	public override Type ObjectType { get; set; }
	public string ObjectTypeName { get; }
	public object[] Values { get; set; }
	public int Length { get; }
	public override VariableType TypeConstraint { get; }
	public VariableType ElementType { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	// RVA: 0xF9E09C Offset: 0xF9E09C VA: 0xF9E09C Slot: 27
	public override object get_RawValue() { }

	// RVA: 0xF9E0A4 Offset: 0xF9E0A4 VA: 0xF9E0A4 Slot: 26
	public override void set_RawValue(object value) { }

	// RVA: 0xF9E164 Offset: 0xF9E164 VA: 0xF9E164 Slot: 23
	public override Type get_ObjectType() { }

	// RVA: 0xF9E32C Offset: 0xF9E32C VA: 0xF9E32C Slot: 24
	public override void set_ObjectType(Type value) { }

	// RVA: 0xF9E194 Offset: 0xF9E194 VA: 0xF9E194
	private void InitObjectType() { }

	// RVA: 0xF9E4F0 Offset: 0xF9E4F0 VA: 0xF9E4F0
	public string get_ObjectTypeName() { }

	// RVA: 0xF9E4F8 Offset: 0xF9E4F8 VA: 0xF9E4F8
	public object[] get_Values() { }

	// RVA: 0xF9E66C Offset: 0xF9E66C VA: 0xF9E66C
	public void set_Values(object[] value) { }

	// RVA: 0xF9E7B8 Offset: 0xF9E7B8 VA: 0xF9E7B8
	public int get_Length() { }

	// RVA: 0xF9E7F8 Offset: 0xF9E7F8 VA: 0xF9E7F8 Slot: 25
	public override VariableType get_TypeConstraint() { }

	// RVA: 0xF9E4E8 Offset: 0xF9E4E8 VA: 0xF9E4E8
	public VariableType get_ElementType() { }

	// RVA: 0xF9E800 Offset: 0xF9E800 VA: 0xF9E800
	public void set_ElementType(VariableType value) { }

	// RVA: 0xF9E528 Offset: 0xF9E528 VA: 0xF9E528
	private void InitArray() { }

	// RVA: 0xF9EFF0 Offset: 0xF9EFF0 VA: 0xF9EFF0 Slot: 28
	public override void Init() { }

	// RVA: 0xF9EFF4 Offset: 0xF9EFF4 VA: 0xF9EFF4
	public object Get(int index) { }

	// RVA: 0xF9F064 Offset: 0xF9F064 VA: 0xF9F064
	public void Set(int index, object value) { }

	// RVA: 0xF9EA34 Offset: 0xF9EA34 VA: 0xF9EA34
	private object Load(int index) { }

	// RVA: 0xF9F134 Offset: 0xF9F134 VA: 0xF9F134
	private void Save(int index, object value) { }

	// RVA: 0xF9E804 Offset: 0xF9E804 VA: 0xF9E804
	public void SetType(VariableType newType) { }

	// RVA: 0xF9E6A8 Offset: 0xF9E6A8 VA: 0xF9E6A8
	public void SaveChanges() { }

	// RVA: 0xF9F9FC Offset: 0xF9F9FC VA: 0xF9F9FC
	public void CopyValues(FsmArray source) { }

	// RVA: 0xF9F824 Offset: 0xF9F824 VA: 0xF9F824
	private void ConformSourceArraySize() { }

	// RVA: 0xF9E86C Offset: 0xF9E86C VA: 0xF9E86C
	private Array GetSourceArray() { }

	// RVA: 0xF9FAB8 Offset: 0xF9FAB8 VA: 0xF9FAB8
	public void Resize(int newLength) { }

	// RVA: 0xF9E4D8 Offset: 0xF9E4D8 VA: 0xF9E4D8
	public void Reset() { }

	// RVA: 0xF9FC5C Offset: 0xF9FC5C VA: 0xF9FC5C
	public void .ctor() { }

	// RVA: 0xF9FC6C Offset: 0xF9FC6C VA: 0xF9FC6C
	public void .ctor(string name) { }

	// RVA: 0xF9FC7C Offset: 0xF9FC7C VA: 0xF9FC7C
	public void .ctor(FsmArray source) { }

	// RVA: 0xF9FD00 Offset: 0xF9FD00 VA: 0xF9FD00 Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0xF9FD60 Offset: 0xF9FD60 VA: 0xF9FD60 Slot: 34
	public override void Clear() { }

	// RVA: 0xF9FD70 Offset: 0xF9FD70 VA: 0xF9FD70 Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0xF9FD78 Offset: 0xF9FD78 VA: 0xF9FD78 Slot: 3
	public override string ToString() { }

	// RVA: 0xFA0014 Offset: 0xFA0014 VA: 0xFA0014 Slot: 29
	public override bool TestTypeConstraint(VariableType variableType, Type _objectType) { }

	// RVA: 0xFA00B4 Offset: 0xFA00B4 VA: 0xFA00B4
	public Type RealType() { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmBool : NamedVariable // TypeDefIndex: 3346
{
	// Fields
	[SerializeField] // RVA: 0xC846C4 Offset: 0xC846C4 VA: 0xC846C4
	private bool value; // 0x38

	// Properties
	public bool Value { get; set; }
	public override object RawValue { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	// RVA: 0xFA030C Offset: 0xFA030C VA: 0xFA030C
	public bool get_Value() { }

	// RVA: 0xFA0378 Offset: 0xFA0378 VA: 0xFA0378
	public void set_Value(bool value) { }

	// RVA: 0xFA0384 Offset: 0xFA0384 VA: 0xFA0384 Slot: 27
	public override object get_RawValue() { }

	// RVA: 0xFA03E8 Offset: 0xFA03E8 VA: 0xFA03E8 Slot: 26
	public override void set_RawValue(object value) { }

	// RVA: 0xFA0450 Offset: 0xFA0450 VA: 0xFA0450
	public void .ctor() { }

	// RVA: 0xFA0458 Offset: 0xFA0458 VA: 0xFA0458
	public void .ctor(string name) { }

	// RVA: 0xFA0460 Offset: 0xFA0460 VA: 0xFA0460
	public void .ctor(FsmBool source) { }

	// RVA: 0xFA0494 Offset: 0xFA0494 VA: 0xFA0494 Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0xFA0504 Offset: 0xFA0504 VA: 0xFA0504 Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0xFA050C Offset: 0xFA050C VA: 0xFA050C Slot: 3
	public override string ToString() { }

	// RVA: 0xFA053C Offset: 0xFA053C VA: 0xFA053C Slot: 33
	public override int ToInt() { }

	// RVA: 0xFA0544 Offset: 0xFA0544 VA: 0xFA0544 Slot: 34
	public override void Clear() { }

	// RVA: 0xFA054C Offset: 0xFA054C VA: 0xFA054C
	public static FsmBool op_Implicit(bool value) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmColor : NamedVariable // TypeDefIndex: 3347
{
	// Fields
	[SerializeField] // RVA: 0xC846D4 Offset: 0xC846D4 VA: 0xC846D4
	private Color value; // 0x38

	// Properties
	public Color Value { get; set; }
	public override object RawValue { get; set; }
	public override VariableType VariableType { get; }

	// Methods

	// RVA: 0xFA05F8 Offset: 0xFA05F8 VA: 0xFA05F8
	public Color get_Value() { }

	// RVA: 0xFA0604 Offset: 0xFA0604 VA: 0xFA0604
	public void set_Value(Color value) { }

	// RVA: 0xFA0610 Offset: 0xFA0610 VA: 0xFA0610 Slot: 27
	public override object get_RawValue() { }

	// RVA: 0xFA0674 Offset: 0xFA0674 VA: 0xFA0674 Slot: 26
	public override void set_RawValue(object value) { }

	// RVA: 0xFA06EC Offset: 0xFA06EC VA: 0xFA06EC
	public void .ctor() { }

	// RVA: 0xFA0720 Offset: 0xFA0720 VA: 0xFA0720
	public void .ctor(string name) { }

	// RVA: 0xFA075C Offset: 0xFA075C VA: 0xFA075C
	public void .ctor(FsmColor source) { }

	// RVA: 0xFA07A8 Offset: 0xFA07A8 VA: 0xFA07A8 Slot: 31
	public override NamedVariable Clone() { }

	// RVA: 0xFA0808 Offset: 0xFA0808 VA: 0xFA0808 Slot: 34
	public override void Clear() { }

	// RVA: 0xFA0834 Offset: 0xFA0834 VA: 0xFA0834 Slot: 22
	public override VariableType get_VariableType() { }

	// RVA: 0xFA083C Offset: 0xFA083C VA: 0xFA083C Slot: 3
	public override string ToString() { }

