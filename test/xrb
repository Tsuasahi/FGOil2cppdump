	public void resetNo() { }

	// RVA: 0x15C3958 Offset: 0x15C3958 VA: 0x15C3958
	public void setNo(int count) { }

	// RVA: 0x15C3A18 Offset: 0x15C3A18 VA: 0x15C3A18
	public void resetComboGuid() { }

	// RVA: 0x15C3AFC Offset: 0x15C3AFC VA: 0x15C3AFC
	public void setComboGuid(int index, BattleComboData combo) { }
}

// Namespace: 
public class BattleCommandSealStatus // TypeDefIndex: 8997
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCD15F4 Offset: 0xCD15F4 VA: 0xCD15F4
	[DebuggerBrowsableAttribute] // RVA: 0xCD15F4 Offset: 0xCD15F4 VA: 0xCD15F4
	private BattleBuffData.BuffData <SleepBuff>k__BackingField; // 0x10
	private List<BattleCommandSealStatus.Status> statusList; // 0x18
	private BattleCommandData battleCommandData; // 0x20
	private BattleServantData svtData; // 0x28
	private BattleData data; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xCD1630 Offset: 0xCD1630 VA: 0xCD1630
	private static Predicate<BattleCommandSealStatus.Status> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCD1640 Offset: 0xCD1640 VA: 0xCD1640
	private static Predicate<BattleCommandSealStatus.Status> <>f__am$cache1; // 0x8

	// Properties
	public BattleCommandSealStatus.Status PrioredStatus { get; }
	public bool HasKindOfSealed { get; }
	public bool HasKindOfDontAction { get; }
	public BattleBuffData.BuffData SleepBuff { get; set; }

	// Methods

	// RVA: 0x15B6FF4 Offset: 0x15B6FF4 VA: 0x15B6FF4
	public void .ctor() { }

	// RVA: 0x15BAB90 Offset: 0x15BAB90 VA: 0x15BAB90
	public void .ctor(BattleCommandData battleCommandData, BattleServantData svtData, BattleData data) { }

	// RVA: 0x15BAF14 Offset: 0x15BAF14 VA: 0x15BAF14
	public BattleCommandSealStatus.Status get_PrioredStatus() { }

	// RVA: 0x15B7090 Offset: 0x15B7090 VA: 0x15B7090
	public bool get_HasKindOfSealed() { }

	// RVA: 0x15B7194 Offset: 0x15B7194 VA: 0x15B7194
	public bool get_HasKindOfDontAction() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3A9B4 Offset: 0xD3A9B4 VA: 0xD3A9B4
	// RVA: 0x15BAFA0 Offset: 0x15BAFA0 VA: 0x15BAFA0
	public BattleBuffData.BuffData get_SleepBuff() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3A9C4 Offset: 0xD3A9C4 VA: 0xD3A9C4
	// RVA: 0x15C3CE0 Offset: 0x15C3CE0 VA: 0x15C3CE0
	private void set_SleepBuff(BattleBuffData.BuffData value) { }

	// RVA: 0x15C3CBC Offset: 0x15C3CBC VA: 0x15C3CBC
	private void DetectSealStatus() { }

	// RVA: 0x15C3CE8 Offset: 0x15C3CE8 VA: 0x15C3CE8
	private void DetectCommonSealStatus() { }

	// RVA: 0x15C3FC0 Offset: 0x15C3FC0 VA: 0x15C3FC0
	private void DetectTreasureDeviceSealStatus() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3A9D4 Offset: 0xD3A9D4 VA: 0xD3A9D4
	// RVA: 0x15C4190 Offset: 0x15C4190 VA: 0x15C4190
	private static bool <get_HasKindOfSealed>m__0(BattleCommandSealStatus.Status x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3A9E4 Offset: 0xD3A9E4 VA: 0xD3A9E4
	// RVA: 0x15C41A0 Offset: 0x15C41A0 VA: 0x15C41A0
	private static bool <get_HasKindOfDontAction>m__1(BattleCommandSealStatus.Status x) { }
}

// Namespace: 
public enum BattleCommandSealStatus.Status // TypeDefIndex: 8998
{
	// Fields
	public int value__; // 0x0
	public const BattleCommandSealStatus.Status DONOT_ACT_BY_PERMANENT_SLEEP = 0;
	public const BattleCommandSealStatus.Status DONOT_ACT_BY_SLEEP = 1;
	public const BattleCommandSealStatus.Status DONOT_ACT_BY_OTHER_DEBUFF = 2;
	public const BattleCommandSealStatus.Status NO_FUNC_HEROINE = 3;
	public const BattleCommandSealStatus.Status NO_FUNC = 4;
	public const BattleCommandSealStatus.Status DONOT_NOBLE = 5;
	public const BattleCommandSealStatus.Status SHORTAGE_CRITICAL_STAR = 6;
	public const BattleCommandSealStatus.Status DONOT_NOBLE_COND_MISMATCH = 7;
	public const BattleCommandSealStatus.Status DONOT_ACT_WITH_TYPE_SP = 8;
	public const BattleCommandSealStatus.Status NONE = 2147483647;
}

// Namespace: 
public class BattleSelectCommandComponent : MonoBehaviour // TypeDefIndex: 8999
{
	// Fields
	public UISprite markSprite; // 0x18
	private static readonly string[] frameFileList; // 0x0

	// Methods

	// RVA: 0x15338C0 Offset: 0x15338C0 VA: 0x15338C0
	public void .ctor() { }

	// RVA: 0x15338C8 Offset: 0x15338C8 VA: 0x15338C8
	public void setIndex(int index) { }

	// RVA: 0x1533A58 Offset: 0x1533A58 VA: 0x1533A58
	private static void .cctor() { }
}

// Namespace: 
public class CommandCodeInfo // TypeDefIndex: 9000
{
	// Fields
	public long id; // 0x10
	public int userId; // 0x18
	public int commandCodeId; // 0x1C

	// Methods

	// RVA: 0x1B641A8 Offset: 0x1B641A8 VA: 0x1B641A8
	public void .ctor() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC969FC Offset: 0xC969FC VA: 0xC969FC
[AddComponentMenu] // RVA: 0xC969FC Offset: 0xC969FC VA: 0xC969FC
public class ContrastImageEffect : ImageEffectBase // TypeDefIndex: 9001
{
	// Fields
	public float saturation; // 0x28
	public float contrast; // 0x2C

	// Methods

	// RVA: 0x1975864 Offset: 0x1975864 VA: 0x1975864
	public void .ctor() { }

	// RVA: 0x197586C Offset: 0x197586C VA: 0x197586C
	private void OnRenderImage(RenderTexture source, RenderTexture destination) { }
}

// Namespace: 
public class BitValue<T> // TypeDefIndex: 9002
{
	// Fields
	protected int value; // 0x0
	protected Func<T, int> convertFunc; // 0x0

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(Func<T, int> func) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252536C Offset: 0x252536C VA: 0x252536C
	|-BitValue<CommonMotionSkip.State>..ctor
	|
	|-RVA: 0x2525564 Offset: 0x2525564 VA: 0x2525564
	|-BitValue<object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void On(T val) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25253A4 Offset: 0x25253A4 VA: 0x25253A4
	|-BitValue<CommonMotionSkip.State>.On
	|
	|-RVA: 0x252559C Offset: 0x252559C VA: 0x252559C
	|-BitValue<object>.On
	*/

	// RVA: -1 Offset: -1
	public void Off(T val) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2525410 Offset: 0x2525410 VA: 0x2525410
	|-BitValue<CommonMotionSkip.State>.Off
	|
	|-RVA: 0x2525608 Offset: 0x2525608 VA: 0x2525608
	|-BitValue<object>.Off
	*/

	// RVA: -1 Offset: -1
	public bool Check(T val) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252547C Offset: 0x252547C VA: 0x252547C
	|-BitValue<CommonMotionSkip.State>.Check
	|
	|-RVA: 0x2525674 Offset: 0x2525674 VA: 0x2525674
	|-BitValue<object>.Check
	*/

	// RVA: -1 Offset: -1
	public bool CheckAndOff(T val) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25254DC Offset: 0x25254DC VA: 0x25254DC
	|-BitValue<CommonMotionSkip.State>.CheckAndOff
	|
	|-RVA: 0x25256D4 Offset: 0x25256D4 VA: 0x25256D4
	|-BitValue<object>.CheckAndOff
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public virtual void Reset() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252555C Offset: 0x252555C VA: 0x252555C
	|-BitValue<CommonMotionSkip.State>.Reset
	|
	|-RVA: 0x2525754 Offset: 0x2525754 VA: 0x2525754
	|-BitValue<object>.Reset
	*/
}

// Namespace: 
public class ItemDroppedSkillShiftInfo // TypeDefIndex: 9003
{
	// Fields
	private List<ItemDroppedSkillShiftInfo.ServantInfo> servantInfoList; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCD1650 Offset: 0xCD1650 VA: 0xCD1650
	private static Func<ItemDroppedSkillShiftInfo.ServantInfo, int> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCD1660 Offset: 0xCD1660 VA: 0xCD1660
	private static Func<ItemDroppedSkillShiftInfo.ServantInfo, long> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x1719E20 Offset: 0x1719E20 VA: 0x1719E20
	public void .ctor() { }

	// RVA: 0x1719E90 Offset: 0x1719E90 VA: 0x1719E90
	public int[] GetUniqueIdArray() { }

	// RVA: 0x1719F60 Offset: 0x1719F60 VA: 0x1719F60
	public long[] GetNpcSvtIdArray() { }

	// RVA: 0x171A02C Offset: 0x171A02C VA: 0x171A02C
	public bool HasUniqueId(int uniqueId) { }

	// RVA: 0x171A0F8 Offset: 0x171A0F8 VA: 0x171A0F8
	public void Register(BattleServantData svtData) { }

	// RVA: 0x171A21C Offset: 0x171A21C VA: 0x171A21C
	public void SetSaveData(BattleData.SaveData saveData) { }

	// RVA: 0x171A378 Offset: 0x171A378 VA: 0x171A378
	private bool IsSaveDataAvailable(BattleData.SaveData saveData) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3A9F4 Offset: 0xD3A9F4 VA: 0xD3A9F4
	// RVA: 0x171A3C8 Offset: 0x171A3C8 VA: 0x171A3C8
	private static int <GetUniqueIdArray>m__0(ItemDroppedSkillShiftInfo.ServantInfo x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AA04 Offset: 0xD3AA04 VA: 0xD3AA04
	// RVA: 0x171A3F8 Offset: 0x171A3F8 VA: 0x171A3F8
	private static long <GetNpcSvtIdArray>m__1(ItemDroppedSkillShiftInfo.ServantInfo x) { }
}

// Namespace: 
public class ItemDroppedSkillShiftInfo.ServantInfo // TypeDefIndex: 9004
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCD1670 Offset: 0xCD1670 VA: 0xCD1670
	[DebuggerBrowsableAttribute] // RVA: 0xCD1670 Offset: 0xCD1670 VA: 0xCD1670
	private int <uniqueId>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCD16AC Offset: 0xCD16AC VA: 0xCD16AC
	[DebuggerBrowsableAttribute] // RVA: 0xCD16AC Offset: 0xCD16AC VA: 0xCD16AC
	private long <npcSvtId>k__BackingField; // 0x18

	// Properties
	public int uniqueId { get; set; }
	public long npcSvtId { get; set; }

	// Methods

	// RVA: 0x171A1E0 Offset: 0x171A1E0 VA: 0x171A1E0
	public void .ctor(int uniqueId, long shiftNpcId) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AA14 Offset: 0xD3AA14 VA: 0xD3AA14
	// RVA: 0x171A3F0 Offset: 0x171A3F0 VA: 0x171A3F0
	public int get_uniqueId() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AA24 Offset: 0xD3AA24 VA: 0xD3AA24
	// RVA: 0x171A464 Offset: 0x171A464 VA: 0x171A464
	private void set_uniqueId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AA34 Offset: 0xD3AA34 VA: 0xD3AA34
	// RVA: 0x171A420 Offset: 0x171A420 VA: 0x171A420
	public long get_npcSvtId() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AA44 Offset: 0xD3AA44 VA: 0xD3AA44
	// RVA: 0x171A46C Offset: 0x171A46C VA: 0x171A46C
	private void set_npcSvtId(long value) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB0090 Offset: 0xCB0090 VA: 0xCB0090
private sealed class ItemDroppedSkillShiftInfo.<HasUniqueId>c__AnonStorey0 // TypeDefIndex: 9005
{
	// Fields
	internal int uniqueId; // 0x10

	// Methods

	// RVA: 0x171A0F0 Offset: 0x171A0F0 VA: 0x171A0F0
	public void .ctor() { }

	// RVA: 0x171A428 Offset: 0x171A428 VA: 0x171A428
	internal bool <>m__0(ItemDroppedSkillShiftInfo.ServantInfo x) { }
}

// Namespace: 
public class ServantAssetArgs // TypeDefIndex: 9006
{
	// Fields
	private const string UniqueKeyGlue = "_";
	[CompilerGeneratedAttribute] // RVA: 0xCD16E8 Offset: 0xCD16E8 VA: 0xCD16E8
	[DebuggerBrowsableAttribute] // RVA: 0xCD16E8 Offset: 0xCD16E8 VA: 0xCD16E8
	private int <SvtId>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCD1724 Offset: 0xCD1724 VA: 0xCD1724
	[DebuggerBrowsableAttribute] // RVA: 0xCD1724 Offset: 0xCD1724 VA: 0xCD1724
	private int <CommandImageSvtId>k__BackingField; // 0x14
	[CompilerGeneratedAttribute] // RVA: 0xCD1760 Offset: 0xCD1760 VA: 0xCD1760
	[DebuggerBrowsableAttribute] // RVA: 0xCD1760 Offset: 0xCD1760 VA: 0xCD1760
	private int <DispImageSvtId>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCD179C Offset: 0xCD179C VA: 0xCD179C
	[DebuggerBrowsableAttribute] // RVA: 0xCD179C Offset: 0xCD179C VA: 0xCD179C
	private int <DispLimitCount>k__BackingField; // 0x1C
	[CompilerGeneratedAttribute] // RVA: 0xCD17D8 Offset: 0xCD17D8 VA: 0xCD17D8
	[DebuggerBrowsableAttribute] // RVA: 0xCD17D8 Offset: 0xCD17D8 VA: 0xCD17D8
	private int <Weapon>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCD1814 Offset: 0xCD1814 VA: 0xCD1814
	[DebuggerBrowsableAttribute] // RVA: 0xCD1814 Offset: 0xCD1814 VA: 0xCD1814
	private int <EffectFolder>k__BackingField; // 0x24
	[CompilerGeneratedAttribute] // RVA: 0xCD1850 Offset: 0xCD1850 VA: 0xCD1850
	[DebuggerBrowsableAttribute] // RVA: 0xCD1850 Offset: 0xCD1850 VA: 0xCD1850
	private int <CameraId>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCD188C Offset: 0xCD188C VA: 0xCD188C
	[DebuggerBrowsableAttribute] // RVA: 0xCD188C Offset: 0xCD188C VA: 0xCD188C
	private int <UniqueId>k__BackingField; // 0x2C
	[CompilerGeneratedAttribute] // RVA: 0xCD18C8 Offset: 0xCD18C8 VA: 0xCD18C8
	[DebuggerBrowsableAttribute] // RVA: 0xCD18C8 Offset: 0xCD18C8 VA: 0xCD18C8
	private int <OverwriteSvtVoiceId>k__BackingField; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xCD1904 Offset: 0xCD1904 VA: 0xCD1904
	[DebuggerBrowsableAttribute] // RVA: 0xCD1904 Offset: 0xCD1904 VA: 0xCD1904
	private int[] <CommandCodeIds>k__BackingField; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xCD1940 Offset: 0xCD1940 VA: 0xCD1940
	[DebuggerBrowsableAttribute] // RVA: 0xCD1940 Offset: 0xCD1940 VA: 0xCD1940
	private int <AppearanceId>k__BackingField; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xCD197C Offset: 0xCD197C VA: 0xCD197C
	[DebuggerBrowsableAttribute] // RVA: 0xCD197C Offset: 0xCD197C VA: 0xCD197C
	private List<BattleSkillInfoData> <skillList>k__BackingField; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xCD19B8 Offset: 0xCD19B8 VA: 0xCD19B8
	[DebuggerBrowsableAttribute] // RVA: 0xCD19B8 Offset: 0xCD19B8 VA: 0xCD19B8
	private int <UnloadCount>k__BackingField; // 0x50
	private string uniqueKey; // 0x58

	// Properties
	public int SvtId { get; set; }
	public int CommandImageSvtId { get; set; }
	public int DispImageSvtId { get; set; }
	public int DispLimitCount { get; set; }
	public int Weapon { get; set; }
	public int EffectFolder { get; set; }
	public int CameraId { get; set; }
	public int UniqueId { get; set; }
	public int OverwriteSvtVoiceId { get; set; }
	public int[] CommandCodeIds { get; set; }
	public int AppearanceId { get; set; }
	public List<BattleSkillInfoData> skillList { get; set; }
	public int UnloadCount { get; set; }
	public string UniqueKey { get; }

	// Methods

	// RVA: 0x1B25924 Offset: 0x1B25924 VA: 0x1B25924
	public void .ctor(BattleServantData svtData) { }

	// RVA: 0x1B25B78 Offset: 0x1B25B78 VA: 0x1B25B78
	public void .ctor(int svtId, int limitCount, int overwriteSvtVoiceId = 0, int appearanceId = 0) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AA54 Offset: 0xD3AA54 VA: 0xD3AA54
	// RVA: 0x1B25BCC Offset: 0x1B25BCC VA: 0x1B25BCC
	public int get_SvtId() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AA64 Offset: 0xD3AA64 VA: 0xD3AA64
	// RVA: 0x1B25B18 Offset: 0x1B25B18 VA: 0x1B25B18
	protected void set_SvtId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AA74 Offset: 0xD3AA74 VA: 0xD3AA74
	// RVA: 0x1B25BD4 Offset: 0x1B25BD4 VA: 0x1B25BD4
	public int get_CommandImageSvtId() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AA84 Offset: 0xD3AA84 VA: 0xD3AA84
	// RVA: 0x1B25B20 Offset: 0x1B25B20 VA: 0x1B25B20
	protected void set_CommandImageSvtId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AA94 Offset: 0xD3AA94 VA: 0xD3AA94
	// RVA: 0x1B25BDC Offset: 0x1B25BDC VA: 0x1B25BDC
	public int get_DispImageSvtId() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AAA4 Offset: 0xD3AAA4 VA: 0xD3AAA4
	// RVA: 0x1B25B28 Offset: 0x1B25B28 VA: 0x1B25B28
	protected void set_DispImageSvtId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AAB4 Offset: 0xD3AAB4 VA: 0xD3AAB4
	// RVA: 0x1B25BE4 Offset: 0x1B25BE4 VA: 0x1B25BE4
	public int get_DispLimitCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AAC4 Offset: 0xD3AAC4 VA: 0xD3AAC4
	// RVA: 0x1B25B30 Offset: 0x1B25B30 VA: 0x1B25B30
	protected void set_DispLimitCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AAD4 Offset: 0xD3AAD4 VA: 0xD3AAD4
	// RVA: 0x1B25BEC Offset: 0x1B25BEC VA: 0x1B25BEC
	public int get_Weapon() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AAE4 Offset: 0xD3AAE4 VA: 0xD3AAE4
	// RVA: 0x1B25B38 Offset: 0x1B25B38 VA: 0x1B25B38
	protected void set_Weapon(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AAF4 Offset: 0xD3AAF4 VA: 0xD3AAF4
	// RVA: 0x1B25BF4 Offset: 0x1B25BF4 VA: 0x1B25BF4
	public int get_EffectFolder() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AB04 Offset: 0xD3AB04 VA: 0xD3AB04
	// RVA: 0x1B25B40 Offset: 0x1B25B40 VA: 0x1B25B40
	protected void set_EffectFolder(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AB14 Offset: 0xD3AB14 VA: 0xD3AB14
	// RVA: 0x1B25BFC Offset: 0x1B25BFC VA: 0x1B25BFC
	public int get_CameraId() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AB24 Offset: 0xD3AB24 VA: 0xD3AB24
	// RVA: 0x1B25B48 Offset: 0x1B25B48 VA: 0x1B25B48
	protected void set_CameraId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AB34 Offset: 0xD3AB34 VA: 0xD3AB34
	// RVA: 0x1B25C04 Offset: 0x1B25C04 VA: 0x1B25C04
	public int get_UniqueId() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AB44 Offset: 0xD3AB44 VA: 0xD3AB44
	// RVA: 0x1B25B50 Offset: 0x1B25B50 VA: 0x1B25B50
	protected void set_UniqueId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AB54 Offset: 0xD3AB54 VA: 0xD3AB54
	// RVA: 0x1B25C0C Offset: 0x1B25C0C VA: 0x1B25C0C
	public int get_OverwriteSvtVoiceId() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AB64 Offset: 0xD3AB64 VA: 0xD3AB64
	// RVA: 0x1B25B58 Offset: 0x1B25B58 VA: 0x1B25B58
	protected void set_OverwriteSvtVoiceId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AB74 Offset: 0xD3AB74 VA: 0xD3AB74
	// RVA: 0x1B25C14 Offset: 0x1B25C14 VA: 0x1B25C14
	public int[] get_CommandCodeIds() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AB84 Offset: 0xD3AB84 VA: 0xD3AB84
	// RVA: 0x1B25B68 Offset: 0x1B25B68 VA: 0x1B25B68
	protected void set_CommandCodeIds(int[] value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AB94 Offset: 0xD3AB94 VA: 0xD3AB94
	// RVA: 0x1B25C1C Offset: 0x1B25C1C VA: 0x1B25C1C
	public int get_AppearanceId() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3ABA4 Offset: 0xD3ABA4 VA: 0xD3ABA4
	// RVA: 0x1B25B60 Offset: 0x1B25B60 VA: 0x1B25B60
	protected void set_AppearanceId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3ABB4 Offset: 0xD3ABB4 VA: 0xD3ABB4
	// RVA: 0x1B25C24 Offset: 0x1B25C24 VA: 0x1B25C24
	public List<BattleSkillInfoData> get_skillList() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3ABC4 Offset: 0xD3ABC4 VA: 0xD3ABC4
	// RVA: 0x1B25B70 Offset: 0x1B25B70 VA: 0x1B25B70
	protected void set_skillList(List<BattleSkillInfoData> value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3ABD4 Offset: 0xD3ABD4 VA: 0xD3ABD4
	// RVA: 0x1B25C2C Offset: 0x1B25C2C VA: 0x1B25C2C
	public int get_UnloadCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3ABE4 Offset: 0xD3ABE4 VA: 0xD3ABE4
	// RVA: 0x1B25C34 Offset: 0x1B25C34 VA: 0x1B25C34
	public void set_UnloadCount(int value) { }

	// RVA: 0x1B25C3C Offset: 0x1B25C3C VA: 0x1B25C3C
	public string get_UniqueKey() { }

	// RVA: 0x1B25F48 Offset: 0x1B25F48 VA: 0x1B25F48
	private string GenerateUniqueKey(string[] para) { }
}

// Namespace: 
public class EffectComponent : BaseMonoBehaviour // TypeDefIndex: 9007
{
	// Fields
	protected static int _RenderQueue; // 0x0
	[SerializeField] // RVA: 0xCD19F4 Offset: 0xCD19F4 VA: 0xCD19F4
	public float endtime; // 0x18
	public float losttime; // 0x1C
	public bool uieffect; // 0x20
	public bool loop; // 0x21
	public bool deleteInstantly; // 0x22
	public UILabel label; // 0x28
	public GameObject mstobject; // 0x30
	public UITexture texture; // 0x38
	public ParticleSystem[] particlelist; // 0x40
	private Spawner spawner; // 0x48
	private float totaltime; // 0x50
	private BattleActorControl battleActor; // 0x58
	private int effectBuffEffectId; // 0x60
	private string filename; // 0x68
	private UIStandFigureR myStandFigure; // 0x70
	private Action FigureLoadCallback; // 0x78

	// Methods

	// RVA: 0x1CC7F00 Offset: 0x1CC7F00 VA: 0x1CC7F00
	public void .ctor() { }

	// RVA: 0x1CC7F14 Offset: 0x1CC7F14 VA: 0x1CC7F14
	public void Init() { }

	// RVA: 0x1CC80C8 Offset: 0x1CC80C8 VA: 0x1CC80C8
	private void Start() { }

	// RVA: 0x1CC8120 Offset: 0x1CC8120 VA: 0x1CC8120
	private void OnDestroy() { }

	// RVA: 0x1CC82F8 Offset: 0x1CC82F8 VA: 0x1CC82F8
	private void OnSpawn() { }

	// RVA: 0x1CC8300 Offset: 0x1CC8300 VA: 0x1CC8300
	private void Update() { }

	// RVA: 0x1CC8598 Offset: 0x1CC8598 VA: 0x1CC8598
	public void setLabel(string text) { }

	// RVA: 0x1CC8648 Offset: 0x1CC8648 VA: 0x1CC8648
	public void setTexture(string filename) { }

	// RVA: 0x1CC8718 Offset: 0x1CC8718 VA: 0x1CC8718
	public void replaceFigure(GameObject obj) { }

	// RVA: 0x1CC89C4 Offset: 0x1CC89C4 VA: 0x1CC89C4
	public void setFigure(int svtId, int limit, Action callback) { }

	// RVA: 0x1CC8C7C Offset: 0x1CC8C7C VA: 0x1CC8C7C
	private void onFigureAssetLoad() { }

	// RVA: 0x1CC8C90 Offset: 0x1CC8C90 VA: 0x1CC8C90
	public void EndLoadAsset(AssetData loadData) { }

	// RVA: 0x1CC8D80 Offset: 0x1CC8D80 VA: 0x1CC8D80
	public void SetBattleActor(BattleActorControl actor, int buffEffectId) { }

	// RVA: 0x1CC84F4 Offset: 0x1CC84F4 VA: 0x1CC84F4
	private void StartActorBuffEffect() { }

	// RVA: 0x1CC8DC0 Offset: 0x1CC8DC0 VA: 0x1CC8DC0
	private static void .cctor() { }
}

// Namespace: 
public class EffectSynchronize : MonoBehaviour // TypeDefIndex: 9008
{
	// Fields
	protected static List<Animation> animCompList; // 0x0
	protected static List<SimpleAnimation> simpleAnimCompList; // 0x8
	protected SimpleAnimation simpleAnimComp; // 0x18
	protected Animation animComp; // 0x20
	[SerializeField] // RVA: 0xCD1A04 Offset: 0xCD1A04 VA: 0xCD1A04
	[TooltipAttribute] // RVA: 0xCD1A04 Offset: 0xCD1A04 VA: 0xCD1A04
	private string syncAnimStr; // 0x28
	[SerializeField] // RVA: 0xCD1A50 Offset: 0xCD1A50 VA: 0xCD1A50
	[TooltipAttribute] // RVA: 0xCD1A50 Offset: 0xCD1A50 VA: 0xCD1A50
	private string selfAnimStr; // 0x30

	// Methods

	// RVA: 0x1CC9F38 Offset: 0x1CC9F38 VA: 0x1CC9F38
	public void .ctor() { }

	// RVA: 0x1CC9F40 Offset: 0x1CC9F40 VA: 0x1CC9F40
	private void Awake() { }

	// RVA: 0x1CCA10C Offset: 0x1CCA10C VA: 0x1CCA10C
	private void OnDestroy() { }

	// RVA: 0x1CCA264 Offset: 0x1CCA264 VA: 0x1CCA264
	private bool IsEqualsName() { }

	// RVA: 0x1CCA298 Offset: 0x1CCA298 VA: 0x1CCA298
	public void synchronize() { }

	// RVA: 0x1CCA9B4 Offset: 0x1CCA9B4 VA: 0x1CCA9B4
	private void OnEnable() { }

	// RVA: 0x1CCAAB4 Offset: 0x1CCAAB4 VA: 0x1CCAAB4
	private static void .cctor() { }
}

// Namespace: 
public class EnemyFieldStatus : BattleFieldStatus // TypeDefIndex: 9009
{
	// Methods

	// RVA: 0x1CD1678 Offset: 0x1CD1678 VA: 0x1CD1678
	public void .ctor() { }

	// RVA: 0x1CD1680 Offset: 0x1CD1680 VA: 0x1CD1680 Slot: 6
	public override double[] getAiParam(BattleData bData, ConditionsInformation.PARAMATER param, int turn, int actCnt, long[] checkparams) { }
}

// Namespace: 
public interface IGimmickEffect // TypeDefIndex: 9010
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void SetGimmick(int svtId, BattleActionData.GimmickData data, Action endCb);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void EndGimmick();

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void StartGimmick(Action animCallback);

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void PlaySe(string seName);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void PlayVoice(int index);
}

// Namespace: 
public class AiLogic // TypeDefIndex: 9011
{
	// Fields
	private BattleData Bdata; // 0x10
	private AiLogic.AiInfo.AITYPE _aiType; // 0x18
	private List<AiBaseEntity> _thinkList; // 0x20
	private AiActMaster aiActMst; // 0x28
	private long[] wkZero; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xCD1A9C Offset: 0xCD1A9C VA: 0xCD1A9C
	private static Comparison<AiBaseEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x15A2E88 Offset: 0x15A2E88 VA: 0x15A2E88
	public void .ctor() { }

	[ConditionalAttribute] // RVA: 0xD3ABF4 Offset: 0xD3ABF4 VA: 0xD3ABF4
	// RVA: 0x15A2EE8 Offset: 0x15A2EE8 VA: 0x15A2EE8
	protected void LOG(string str) { }

	[ConditionalAttribute] // RVA: 0xD3AC2C Offset: 0xD3AC2C VA: 0xD3AC2C
	// RVA: 0x15A2EEC Offset: 0x15A2EEC VA: 0x15A2EEC
	protected void INITLOG() { }

	// RVA: 0x15A2EF0 Offset: 0x15A2EF0 VA: 0x15A2EF0
	public void Initialize(BattleData data) { }

	// RVA: 0x15A2F78 Offset: 0x15A2F78 VA: 0x15A2F78
	public void updateThinkGroup(AiLogic.AiInfo aiInfo, AiState aiState) { }

	// RVA: 0x15A3364 Offset: 0x15A3364 VA: 0x15A3364
	public bool checkThinking(BattleServantData svtData, AiLogic.PROC_STATE procState) { }

	// RVA: 0x15A35A0 Offset: 0x15A35A0 VA: 0x15A35A0
	public bool checkThinking(BattleFieldData fieldData, AiLogic.PROC_STATE procState) { }

	// RVA: 0x15A3484 Offset: 0x15A3484 VA: 0x15A3484
	private bool checkThinkingBase(AiLogic.AiInfo aiInfo, AiLogic.PROC_STATE procState) { }

	// RVA: 0x15A3680 Offset: 0x15A3680 VA: 0x15A3680
	public AiEntity getAction(BattleServantData svtData, AiLogic.PROC_STATE procState, int turnCount, int actCount) { }

	// RVA: 0x15A392C Offset: 0x15A392C VA: 0x15A392C
	public AiFieldEntity getAction(BattleFieldData fieldData, AiLogic.PROC_STATE procState, int turnCount, int actCount) { }

	// RVA: 0x15A37AC Offset: 0x15A37AC VA: 0x15A37AC
	private AiBaseEntity getActionBase(AiLogic.AiInfo aiInfo, AiLogic.PROC_STATE procState, int turnCount, int actCount) { }

	// RVA: 0x15A3A50 Offset: 0x15A3A50 VA: 0x15A3A50
	private AiBaseEntity getBasicAct(AiLogic.AiInfo aiInfo, AiLogic.PROC_STATE procState, int turn, int actcnt) { }

	// RVA: 0x15A4014 Offset: 0x15A4014 VA: 0x15A4014
	private bool checkThinking(AiLogic.AiInfo aiInfo, AiBaseEntity aiEnt, int turn, int actcnt) { }

	// RVA: 0x15A5500 Offset: 0x15A5500 VA: 0x15A5500
	private void getTargetPosServant(List<AiInterface> targetList, bool isOpponent, AiLogic.AiInfo aiInfo, BattleLogicTarget.Position pos) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3AC64 Offset: 0xD3AC64 VA: 0xD3AC64
	// RVA: 0x15A5608 Offset: 0x15A5608 VA: 0x15A5608
	private static int <getBasicAct>m__0(AiBaseEntity a, AiBaseEntity b) { }
}

// Namespace: 
public enum AiLogic.PROC_STATE // TypeDefIndex: 9012
{
	// Fields
	public int value__; // 0x0
	public const AiLogic.PROC_STATE NONE = 0;
	public const AiLogic.PROC_STATE NOMAL = 1;
	public const AiLogic.PROC_STATE DEAD = 2;
	public const AiLogic.PROC_STATE PLAYERACTIONEND = 3;
	public const AiLogic.PROC_STATE TURN_START = 4;
	public const AiLogic.PROC_STATE TURN_END = 5;
	public const AiLogic.PROC_STATE WAVE_START = 6;
	public const AiLogic.PROC_STATE MAXNP = 7;
	public const AiLogic.PROC_STATE USENP_TARGET = 8;
	public const AiLogic.PROC_STATE TURN_ENEMY_START = 10;
	public const AiLogic.PROC_STATE TURN_ENEMY_END = 11;
	public const AiLogic.PROC_STATE TURN_PLAYER_START = 12;
	public const AiLogic.PROC_STATE TURN_PLAYER_END = 13;
	public const AiLogic.PROC_STATE SHIFT_SERVANT_AFTER = 14;
	public const AiLogic.PROC_STATE ENTRY_UNIT = 15;
	public const AiLogic.PROC_STATE TURN_START_PREV = 16;
}

// Namespace: 
public class AiLogic.AiInfo // TypeDefIndex: 9013
{
	// Fields
	public AiLogic.AiInfo.AITYPE aiType; // 0x10
	public int uniqueId; // 0x14
	public AiState aiState; // 0x18

	// Methods

	// RVA: 0x15A3444 Offset: 0x15A3444 VA: 0x15A3444
	public void .ctor(AiLogic.AiInfo.AITYPE inAiType, int inUniqueId, AiState inAiSate) { }
}

// Namespace: 
public enum AiLogic.AiInfo.AITYPE // TypeDefIndex: 9014
{
	// Fields
	public int value__; // 0x0
	public const AiLogic.AiInfo.AITYPE NONE = 0;
	public const AiLogic.AiInfo.AITYPE SERVANT = 1;
	public const AiLogic.AiInfo.AITYPE FIELD = 2;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB00A0 Offset: 0xCB00A0 VA: 0xCB00A0
private sealed class AiLogic.<checkThinkingBase>c__AnonStorey0 // TypeDefIndex: 9015
{
	// Fields
	internal AiLogic.PROC_STATE procState; // 0x10

	// Methods

	// RVA: 0x15A3678 Offset: 0x15A3678 VA: 0x15A3678
	public void .ctor() { }

	// RVA: 0x15A564C Offset: 0x15A564C VA: 0x15A564C
	internal bool <>m__0(AiBaseEntity s) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB00B0 Offset: 0xCB00B0 VA: 0xCB00B0
private sealed class AiLogic.<getBasicAct>c__AnonStorey1 // TypeDefIndex: 9016
{
	// Fields
	internal AiLogic.PROC_STATE procState; // 0x10
	internal int actcnt; // 0x14

	// Methods

	// RVA: 0x15A4004 Offset: 0x15A4004 VA: 0x15A4004
	public void .ctor() { }

	// RVA: 0x15A568C Offset: 0x15A568C VA: 0x15A568C
	internal bool <>m__0(AiBaseEntity s) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB00C0 Offset: 0xCB00C0 VA: 0xCB00C0
private sealed class AiLogic.<getBasicAct>c__AnonStorey2 // TypeDefIndex: 9017
{
	// Fields
	internal int priority; // 0x10

	// Methods

	// RVA: 0x15A400C Offset: 0x15A400C VA: 0x15A400C
	public void .ctor() { }

	// RVA: 0x15A56D4 Offset: 0x15A56D4 VA: 0x15A56D4
	internal bool <>m__0(AiBaseEntity s) { }
}

// Namespace: 
public class ConditionsInformation // TypeDefIndex: 9018
{
	// Fields
	private static Dictionary<Ai.COND, ConditionsInformation.CheckInfo> FuncList; // 0x0

	// Methods

	// RVA: 0x1968D70 Offset: 0x1968D70 VA: 0x1968D70
	public void .ctor() { }

	// RVA: 0x1968D78 Offset: 0x1968D78 VA: 0x1968D78
	public static bool isNone(double[] selfVals, long[] entVals) { }

	// RVA: 0x1968D80 Offset: 0x1968D80 VA: 0x1968D80
	public static bool isEqual(double[] selfVals, long[] entVals) { }

	// RVA: 0x1968E4C Offset: 0x1968E4C VA: 0x1968E4C
	public static bool isNotEqual(double[] selfVals, long[] entVals) { }

	// RVA: 0x1968ECC Offset: 0x1968ECC VA: 0x1968ECC
	public static bool isHigher(double[] selfVals, long[] entVals) { }

	// RVA: 0x1968F98 Offset: 0x1968F98 VA: 0x1968F98
	public static bool isLower(double[] selfVals, long[] entVals) { }

	// RVA: 0x1969070 Offset: 0x1969070 VA: 0x1969070
	public static bool isMultiple(double[] selfVals, long[] entVals) { }

	// RVA: 0x1969150 Offset: 0x1969150 VA: 0x1969150
	public static bool isExist(double[] selfVals, long[] entVals) { }

	// RVA: 0x1969228 Offset: 0x1969228 VA: 0x1969228
	public static ConditionsInformation.CheckInfo getCheckFunction(Ai.COND cond) { }

	// RVA: 0x19692B4 Offset: 0x19692B4 VA: 0x19692B4
	private static void .cctor() { }
}

// Namespace: 
public enum ConditionsInformation.TARGET // TypeDefIndex: 9019
{
	// Fields
	public int value__; // 0x0
	public const ConditionsInformation.TARGET NONE = 0;
	public const ConditionsInformation.TARGET FIELD = 1;
	public const ConditionsInformation.TARGET SELF = 2;
	public const ConditionsInformation.TARGET PT = 3;
	public const ConditionsInformation.TARGET OPPONENT = 4;
	public const ConditionsInformation.TARGET PT_FIELD = 5;
	public const ConditionsInformation.TARGET OPPONENT_FIELD = 6;
	public const ConditionsInformation.TARGET PT_ALL = 7;
	public const ConditionsInformation.TARGET OPPONENT_ALL = 8;
	public const ConditionsInformation.TARGET OPPONENT_FRONT = 9;
	public const ConditionsInformation.TARGET OPPONENT_CENTER = 10;
	public const ConditionsInformation.TARGET OPPONENT_BACK = 11;
	public const ConditionsInformation.TARGET ALL_FIELD = 12;
	public const ConditionsInformation.TARGET PT_FRONT = 13;
	public const ConditionsInformation.TARGET PT_CENTER = 14;
	public const ConditionsInformation.TARGET PT_BACK = 15;
}

// Namespace: 
public enum ConditionsInformation.PARAMATER // TypeDefIndex: 9020
{
	// Fields
	public int value__; // 0x0
	public const ConditionsInformation.PARAMATER NONE = 0;
	public const ConditionsInformation.PARAMATER TURN = 1;
	public const ConditionsInformation.PARAMATER SPACE = 2;
	public const ConditionsInformation.PARAMATER PREV_ACTID = 3;
	public const ConditionsInformation.PARAMATER PREV_ACTTYPE = 4;
	public const ConditionsInformation.PARAMATER HP = 5;
	public const ConditionsInformation.PARAMATER NPGAUGE = 6;
	public const ConditionsInformation.PARAMATER TDTURN = 7;
	public const ConditionsInformation.PARAMATER ACT_COUNT = 8;
	public const ConditionsInformation.PARAMATER ACT_COUNT_THISTURN = 9;
	public const ConditionsInformation.PARAMATER TURN_FIELD = 10;
	public const ConditionsInformation.PARAMATER TURN_ACT_COUNT = 11;
	public const ConditionsInformation.PARAMATER BUFF_ID = 12;
	public const ConditionsInformation.PARAMATER INDIVIDUALITY = 13;
	public const ConditionsInformation.PARAMATER BUFF_INDIVIDUALITY = 14;
	public const ConditionsInformation.PARAMATER BUFF_ACTIVE_INDIVIDUALITY = 15;
	public const ConditionsInformation.PARAMATER RAID_HP = 16;
	public const ConditionsInformation.PARAMATER RAID_COUNT = 17;
	public const ConditionsInformation.PARAMATER RAID_COUNT_VALUE = 18;
	public const ConditionsInformation.PARAMATER COUNT_ALIVE = 19;
	public const ConditionsInformation.PARAMATER COUNT_REST = 20;
	public const ConditionsInformation.PARAMATER COUNT_ITEM = 21;
	public const ConditionsInformation.PARAMATER COUNT_BUFFCOUNT_INDIVIDUALITY = 22;
	public const ConditionsInformation.PARAMATER BUFF_ACTIVE_ID = 23;
	public const ConditionsInformation.PARAMATER ENEMY_MASTER_COMMAND_SPELL_COUNT = 24;
	public const ConditionsInformation.PARAMATER COUNT_STAR = 25;
	public const ConditionsInformation.PARAMATER TARGET_POSITION = 26;
	public const ConditionsInformation.PARAMATER COUNT_TARGET_BUFF_INDIVIDUALITY_SUM = 27;
	public const ConditionsInformation.PARAMATER DEAD = 28;
	public const ConditionsInformation.PARAMATER PRECEDING_ENEMY = 29;
	public const ConditionsInformation.PARAMATER REMAIN_TURN = 30;
	public const ConditionsInformation.PARAMATER AVALON_145566 = 31;
	public const ConditionsInformation.PARAMATER CHECK_PARAMATER_32 = 32;
	public const ConditionsInformation.PARAMATER CHAIN_COUNT = 33;
	public const ConditionsInformation.PARAMATER CHECK_TARGET_SKILL_THISTURN = 34;
}

// Namespace: 
public enum ConditionsInformation.REFINE // TypeDefIndex: 9021
{
	// Fields
	public int value__; // 0x0
	public const ConditionsInformation.REFINE ANY = 0;
	public const ConditionsInformation.REFINE ALL = 1;
	public const ConditionsInformation.REFINE HIGHER = 2;
	public const ConditionsInformation.REFINE LOWER = 3;
	public const ConditionsInformation.REFINE TOTAL_COUNT = 4;
}

// Namespace: 
public enum ConditionsInformation.CHECK // TypeDefIndex: 9022
{
	// Fields
	public int value__; // 0x0
	public const ConditionsInformation.CHECK NONE = 0;
	public const ConditionsInformation.CHECK EQUAL = 1;
	public const ConditionsInformation.CHECK EQUAL_NOT = 2;
	public const ConditionsInformation.CHECK HIGHER = 3;
	public const ConditionsInformation.CHECK LOWER = 4;
	public const ConditionsInformation.CHECK MULTIPLE = 5;
	public const ConditionsInformation.CHECK EXIST = 6;
}

// Namespace: 
public sealed class ConditionsInformation.ISCheckFunction : MulticastDelegate // TypeDefIndex: 9023
{
	// Methods

	// RVA: 0x196BC0C Offset: 0x196BC0C VA: 0x196BC0C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x196BC24 Offset: 0x196BC24 VA: 0x196BC24 Slot: 11
	public virtual bool Invoke(double[] selfVals, long[] entVals) { }

	// RVA: 0x196BFE8 Offset: 0x196BFE8 VA: 0x196BFE8 Slot: 12
	public virtual IAsyncResult BeginInvoke(double[] selfVals, long[] entVals, AsyncCallback callback, object object) { }

	// RVA: 0x196C018 Offset: 0x196C018 VA: 0x196C018 Slot: 13
	public virtual bool EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ConditionsInformation.BuffIndividualitySumCheckInfo : ConditionsInformation.CheckInfo // TypeDefIndex: 9024
{
	// Methods

	// RVA: 0x196BBD8 Offset: 0x196BBD8 VA: 0x196BBD8
	public void .ctor(ConditionsInformation.TARGET inTarget, ConditionsInformation.CHECK inCheck) { }
}

// Namespace: 
public class ConditionsInformation.HigherBuffIndividualitySumCheckInfo : ConditionsInformation.BuffIndividualitySumCheckInfo // TypeDefIndex: 9025
{
	// Methods

	// RVA: 0x196BA88 Offset: 0x196BA88 VA: 0x196BA88
	public void .ctor(ConditionsInformation.TARGET inTarget) { }
}

// Namespace: 
public class ConditionsInformation.LowerBuffIndividualitySumCheckInfo : ConditionsInformation.BuffIndividualitySumCheckInfo // TypeDefIndex: 9026
{
	// Methods

	// RVA: 0x196BAB8 Offset: 0x196BAB8 VA: 0x196BAB8
	public void .ctor(ConditionsInformation.TARGET inTarget) { }
}

// Namespace: 
public class ConditionsInformation.EqualBuffIndividualitySumCheckInfo : ConditionsInformation.BuffIndividualitySumCheckInfo // TypeDefIndex: 9027
{
	// Methods

	// RVA: 0x196BAE8 Offset: 0x196BAE8 VA: 0x196BAE8
	public void .ctor(ConditionsInformation.TARGET inTarget) { }
}

// Namespace: 
public class ConditionsInformation.TotalCountHigherIndividualityCheckInfo : ConditionsInformation.HigherBuffIndividualitySumCheckInfo // TypeDefIndex: 9028
{
	// Methods

	// RVA: 0x196BB24 Offset: 0x196BB24 VA: 0x196BB24
	public void .ctor(ConditionsInformation.TARGET inTarget) { }
}

// Namespace: 
public class ConditionsInformation.TotalCountLowerIndividualityCheckInfo : ConditionsInformation.LowerBuffIndividualitySumCheckInfo // TypeDefIndex: 9029
{
	// Methods

	// RVA: 0x196BB5C Offset: 0x196BB5C VA: 0x196BB5C
	public void .ctor(ConditionsInformation.TARGET inTarget) { }
}
