
// Namespace: UnityEngine
public struct TextGenerationSettings // TypeDefIndex: 2641
{
	// Fields
	public Font font; // 0x0
	public Color color; // 0x8
	public int fontSize; // 0x18
	public float lineSpacing; // 0x1C
	public bool richText; // 0x20
	public float scaleFactor; // 0x24
	public FontStyle fontStyle; // 0x28
	public TextAnchor textAnchor; // 0x2C
	public bool alignByGeometry; // 0x30
	public bool resizeTextForBestFit; // 0x31
	public int resizeTextMinSize; // 0x34
	public int resizeTextMaxSize; // 0x38
	public bool updateBounds; // 0x3C
	public VerticalWrapMode verticalOverflow; // 0x40
	public HorizontalWrapMode horizontalOverflow; // 0x44
	public Vector2 generationExtents; // 0x48
	public Vector2 pivot; // 0x50
	public bool generateOutOfBounds; // 0x58

	// Methods

	// RVA: 0xD79F18 Offset: 0xD79F18 VA: 0xD79F18
	private bool CompareColors(Color left, Color right) { }

	// RVA: 0xD79F1C Offset: 0xD79F1C VA: 0xD79F1C
	private bool CompareVector2(Vector2 left, Vector2 right) { }

	// RVA: 0xD79F20 Offset: 0xD79F20 VA: 0xD79F20
	public bool Equals(TextGenerationSettings other) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBF1AC0 Offset: 0xBF1AC0 VA: 0xBF1AC0
[UsedByNativeCodeAttribute] // RVA: 0xBF1AC0 Offset: 0xBF1AC0 VA: 0xBF1AC0
public sealed class TextGenerator : IDisposable // TypeDefIndex: 2642
{
	// Fields
	internal IntPtr m_Ptr; // 0x10
	private string m_LastString; // 0x18
	private TextGenerationSettings m_LastSettings; // 0x20
	private bool m_HasGenerated; // 0x80
	private TextGenerationError m_LastValid; // 0x84
	private readonly List<UIVertex> m_Verts; // 0x88
	private readonly List<UICharInfo> m_Characters; // 0x90
	private readonly List<UILineInfo> m_Lines; // 0x98
	private bool m_CachedVerts; // 0xA0
	private bool m_CachedCharacters; // 0xA1
	private bool m_CachedLines; // 0xA2

	// Properties
	public int characterCountVisible { get; }
	public IList<UIVertex> verts { get; }
	public IList<UICharInfo> characters { get; }
	public IList<UILineInfo> lines { get; }
	public Rect rectExtents { get; }
	public int characterCount { get; }
	public int lineCount { get; }

	// Methods

	// RVA: 0x2B87308 Offset: 0x2B87308 VA: 0x2B87308
	public void .ctor() { }

	// RVA: 0x2B87310 Offset: 0x2B87310 VA: 0x2B87310
	public void .ctor(int initialCapacity) { }

	// RVA: 0x2B87450 Offset: 0x2B87450 VA: 0x2B87450 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x2B8754C Offset: 0x2B8754C VA: 0x2B8754C Slot: 4
	private void System.IDisposable.Dispose() { }

	[CompilerGeneratedAttribute] // RVA: 0xBF1E24 Offset: 0xBF1E24 VA: 0xBF1E24
	// RVA: 0x2B87618 Offset: 0x2B87618 VA: 0x2B87618
	public int get_characterCountVisible() { }

	// RVA: 0x2B8769C Offset: 0x2B8769C VA: 0x2B8769C
	private TextGenerationSettings ValidatedSettings(TextGenerationSettings settings) { }

	// RVA: 0x2B87990 Offset: 0x2B87990 VA: 0x2B87990
	public void Invalidate() { }

	// RVA: 0x2B87998 Offset: 0x2B87998 VA: 0x2B87998
	public void GetCharacters(List<UICharInfo> characters) { }

	// RVA: 0x2B87A10 Offset: 0x2B87A10 VA: 0x2B87A10
	public void GetLines(List<UILineInfo> lines) { }

	// RVA: 0x2B87A88 Offset: 0x2B87A88 VA: 0x2B87A88
	public void GetVertices(List<UIVertex> vertices) { }

	// RVA: 0x2B87B00 Offset: 0x2B87B00 VA: 0x2B87B00
	public float GetPreferredWidth(string str, TextGenerationSettings settings) { }

	// RVA: 0x2B87C00 Offset: 0x2B87C00 VA: 0x2B87C00
	public float GetPreferredHeight(string str, TextGenerationSettings settings) { }

	// RVA: 0x2B87C7C Offset: 0x2B87C7C VA: 0x2B87C7C
	public bool PopulateWithErrors(string str, TextGenerationSettings settings, GameObject context) { }

	// RVA: 0x2B87B80 Offset: 0x2B87B80 VA: 0x2B87B80
	public bool Populate(string str, TextGenerationSettings settings) { }

	// RVA: 0x2B87E70 Offset: 0x2B87E70 VA: 0x2B87E70
	private TextGenerationError PopulateWithError(string str, TextGenerationSettings settings) { }

	// RVA: 0x2B87F54 Offset: 0x2B87F54 VA: 0x2B87F54
	private TextGenerationError PopulateAlways(string str, TextGenerationSettings settings) { }

	// RVA: 0x2B8821C Offset: 0x2B8821C VA: 0x2B8821C
	public IList<UIVertex> get_verts() { }

	// RVA: 0x2B88258 Offset: 0x2B88258 VA: 0x2B88258
	public IList<UICharInfo> get_characters() { }

	// RVA: 0x2B88294 Offset: 0x2B88294 VA: 0x2B88294
	public IList<UILineInfo> get_lines() { }

	// RVA: 0x2B87BD4 Offset: 0x2B87BD4 VA: 0x2B87BD4
	public Rect get_rectExtents() { }

	// RVA: 0x2B87630 Offset: 0x2B87630 VA: 0x2B87630
	public int get_characterCount() { }

	// RVA: 0x2B88344 Offset: 0x2B88344 VA: 0x2B88344
	public int get_lineCount() { }

	[NativeMethodAttribute] // RVA: 0xBF1E34 Offset: 0xBF1E34 VA: 0xBF1E34
	// RVA: 0x2B873F8 Offset: 0x2B873F8 VA: 0x2B873F8
	private static IntPtr Internal_Create() { }

	[NativeMethodAttribute] // RVA: 0xBF1E6C Offset: 0xBF1E6C VA: 0xBF1E6C
	// RVA: 0x2B875AC Offset: 0x2B875AC VA: 0x2B875AC
	private static void Internal_Destroy(IntPtr ptr) { }

	// RVA: 0x2B883B0 Offset: 0x2B883B0 VA: 0x2B883B0
	internal bool Populate_Internal(string str, Font font, Color color, int fontSize, float scaleFactor, float lineSpacing, FontStyle style, bool richText, bool resizeTextForBestFit, int resizeTextMinSize, int resizeTextMaxSize, int verticalOverFlow, int horizontalOverflow, bool updateBounds, TextAnchor anchor, float extentsX, float extentsY, float pivotX, float pivotY, bool generateOutOfBounds, bool alignByGeometry, out uint error) { }

	// RVA: 0x2B88070 Offset: 0x2B88070 VA: 0x2B88070
	internal bool Populate_Internal(string str, Font font, Color color, int fontSize, float scaleFactor, float lineSpacing, FontStyle style, bool richText, bool resizeTextForBestFit, int resizeTextMinSize, int resizeTextMaxSize, VerticalWrapMode verticalOverFlow, HorizontalWrapMode horizontalOverflow, bool updateBounds, TextAnchor anchor, Vector2 extents, Vector2 pivot, bool generateOutOfBounds, bool alignByGeometry, out TextGenerationError error) { }

	[NativeThrowsAttribute] // RVA: 0xBF1EA4 Offset: 0xBF1EA4 VA: 0xBF1EA4
	// RVA: 0x2B87A8C Offset: 0x2B87A8C VA: 0x2B87A8C
	private void GetVerticesInternal(object vertices) { }

	[NativeThrowsAttribute] // RVA: 0xBF1EB4 Offset: 0xBF1EB4 VA: 0xBF1EB4
	// RVA: 0x2B8799C Offset: 0x2B8799C VA: 0x2B8799C
	private void GetCharactersInternal(object characters) { }

	[NativeThrowsAttribute] // RVA: 0xBF1EC4 Offset: 0xBF1EC4 VA: 0xBF1EC4
	// RVA: 0x2B87A14 Offset: 0x2B87A14 VA: 0x2B87A14
	private void GetLinesInternal(object lines) { }

	// RVA: 0x2B882D0 Offset: 0x2B882D0 VA: 0x2B882D0
	private void get_rectExtents_Injected(out Rect ret) { }

	// RVA: 0x2B8846C Offset: 0x2B8846C VA: 0x2B8846C
	private bool Populate_Internal_Injected(string str, Font font, ref Color color, int fontSize, float scaleFactor, float lineSpacing, FontStyle style, bool richText, bool resizeTextForBestFit, int resizeTextMinSize, int resizeTextMaxSize, int verticalOverFlow, int horizontalOverflow, bool updateBounds, TextAnchor anchor, float extentsX, float extentsY, float pivotX, float pivotY, bool generateOutOfBounds, bool alignByGeometry, out uint error) { }
}

// Namespace: UnityEngine
public enum TextAnchor // TypeDefIndex: 2643
{
	// Fields
	public int value__; // 0x0
	public const TextAnchor UpperLeft = 0;
	public const TextAnchor UpperCenter = 1;
	public const TextAnchor UpperRight = 2;
	public const TextAnchor MiddleLeft = 3;
	public const TextAnchor MiddleCenter = 4;
	public const TextAnchor MiddleRight = 5;
	public const TextAnchor LowerLeft = 6;
	public const TextAnchor LowerCenter = 7;
	public const TextAnchor LowerRight = 8;
}

// Namespace: UnityEngine
public enum HorizontalWrapMode // TypeDefIndex: 2644
{
	// Fields
	public int value__; // 0x0
	public const HorizontalWrapMode Wrap = 0;
	public const HorizontalWrapMode Overflow = 1;
}

// Namespace: UnityEngine
public enum VerticalWrapMode // TypeDefIndex: 2645
{
	// Fields
	public int value__; // 0x0
	public const VerticalWrapMode Truncate = 0;
	public const VerticalWrapMode Overflow = 1;
}

// Namespace: UnityEngine
[NativeClassAttribute] // RVA: 0xBF1B0C Offset: 0xBF1B0C VA: 0xBF1B0C
[ObsoleteAttribute] // RVA: 0xBF1B0C Offset: 0xBF1B0C VA: 0xBF1B0C
[NativeHeaderAttribute] // RVA: 0xBF1B0C Offset: 0xBF1B0C VA: 0xBF1B0C
[NativeHeaderAttribute] // RVA: 0xBF1B0C Offset: 0xBF1B0C VA: 0xBF1B0C
public sealed class GUIText : GUIElement // TypeDefIndex: 2646
{
	// Properties
	public string text { set; }
	public Material material { get; }

	// Methods

	// RVA: 0x2B86DB8 Offset: 0x2B86DB8 VA: 0x2B86DB8
	public void set_text(string value) { }

	[FreeFunctionAttribute] // RVA: 0xBF1ED4 Offset: 0xBF1ED4 VA: 0xBF1ED4
	// RVA: 0x2B86E2C Offset: 0x2B86E2C VA: 0x2B86E2C
	public Material get_material() { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xBF1BB8 Offset: 0xBF1BB8 VA: 0xBF1BB8
public struct CharacterInfo // TypeDefIndex: 2647
{
	// Fields
	public int index; // 0x0
	[ObsoleteAttribute] // RVA: 0xBF1CA4 Offset: 0xBF1CA4 VA: 0xBF1CA4
	public Rect uv; // 0x4
	[ObsoleteAttribute] // RVA: 0xBF1CDC Offset: 0xBF1CDC VA: 0xBF1CDC
	public Rect vert; // 0x14
	[ObsoleteAttribute] // RVA: 0xBF1D14 Offset: 0xBF1D14 VA: 0xBF1D14
	[NativeNameAttribute] // RVA: 0xBF1D14 Offset: 0xBF1D14 VA: 0xBF1D14
	public float width; // 0x24
	public int size; // 0x28
	public FontStyle style; // 0x2C
	[ObsoleteAttribute] // RVA: 0xBF1D74 Offset: 0xBF1D74 VA: 0xBF1D74
	public bool flipped; // 0x30

	// Properties
	public int advance { get; }
	public int minY { get; }
	public int maxY { get; }
	public int minX { get; }
	public int maxX { get; }
	internal Vector2 uvBottomLeftUnFlipped { get; }
	internal Vector2 uvBottomRightUnFlipped { get; }
	internal Vector2 uvTopRightUnFlipped { get; }
	internal Vector2 uvTopLeftUnFlipped { get; }
	public Vector2 uvBottomLeft { get; }
	public Vector2 uvBottomRight { get; }
	public Vector2 uvTopRight { get; }
	public Vector2 uvTopLeft { get; }

	// Methods

	// RVA: 0xD79D88 Offset: 0xD79D88 VA: 0xD79D88
	public int get_advance() { }

	// RVA: 0xD79DB0 Offset: 0xD79DB0 VA: 0xD79DB0
	public int get_minY() { }

	// RVA: 0xD79DF8 Offset: 0xD79DF8 VA: 0xD79DF8
	public int get_maxY() { }

	// RVA: 0xD79E18 Offset: 0xD79E18 VA: 0xD79E18
	public int get_minX() { }

	// RVA: 0xD79E38 Offset: 0xD79E38 VA: 0xD79E38
	public int get_maxX() { }

	// RVA: 0xD79E80 Offset: 0xD79E80 VA: 0xD79E80
	internal Vector2 get_uvBottomLeftUnFlipped() { }

	// RVA: 0xD79E88 Offset: 0xD79E88 VA: 0xD79E88
	internal Vector2 get_uvBottomRightUnFlipped() { }

	// RVA: 0xD79E90 Offset: 0xD79E90 VA: 0xD79E90
	internal Vector2 get_uvTopRightUnFlipped() { }

	// RVA: 0xD79E98 Offset: 0xD79E98 VA: 0xD79E98
	internal Vector2 get_uvTopLeftUnFlipped() { }

	// RVA: 0xD79EA0 Offset: 0xD79EA0 VA: 0xD79EA0
	public Vector2 get_uvBottomLeft() { }

	// RVA: 0xD79EA8 Offset: 0xD79EA8 VA: 0xD79EA8
	public Vector2 get_uvBottomRight() { }

	// RVA: 0xD79EB0 Offset: 0xD79EB0 VA: 0xD79EB0
	public Vector2 get_uvTopRight() { }

	// RVA: 0xD79EB8 Offset: 0xD79EB8 VA: 0xD79EB8
	public Vector2 get_uvTopLeft() { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xBF1BC8 Offset: 0xBF1BC8 VA: 0xBF1BC8
public struct UICharInfo // TypeDefIndex: 2648
{
	// Fields
	public Vector2 cursorPos; // 0x0
	public float charWidth; // 0x8
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xBF1BD8 Offset: 0xBF1BD8 VA: 0xBF1BD8
public struct UILineInfo // TypeDefIndex: 2649
{
	// Fields
	public int startCharIdx; // 0x0
	public int height; // 0x4
	public float topY; // 0x8
	public float leading; // 0xC
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xBF1BE8 Offset: 0xBF1BE8 VA: 0xBF1BE8
public struct UIVertex // TypeDefIndex: 2650
{
	// Fields
	public Vector3 position; // 0x0
	public Vector3 normal; // 0xC
	public Vector4 tangent; // 0x18
	public Color32 color; // 0x28
	public Vector2 uv0; // 0x2C
	public Vector2 uv1; // 0x34
	public Vector2 uv2; // 0x3C
	public Vector2 uv3; // 0x44
	private static readonly Color32 s_DefaultColor; // 0x0
	private static readonly Vector4 s_DefaultTangent; // 0x4
	public static UIVertex simpleVert; // 0x14

	// Methods

	// RVA: 0x2B885C8 Offset: 0x2B885C8 VA: 0x2B885C8
	private static void .cctor() { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBF1BF8 Offset: 0xBF1BF8 VA: 0xBF1BF8
[StaticAccessorAttribute] // RVA: 0xBF1BF8 Offset: 0xBF1BF8 VA: 0xBF1BF8
[NativeClassAttribute] // RVA: 0xBF1BF8 Offset: 0xBF1BF8 VA: 0xBF1BF8
[NativeHeaderAttribute] // RVA: 0xBF1BF8 Offset: 0xBF1BF8 VA: 0xBF1BF8
public sealed class Font : Object // TypeDefIndex: 2651
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xBF1DAC Offset: 0xBF1DAC VA: 0xBF1DAC
	[DebuggerBrowsableAttribute] // RVA: 0xBF1DAC Offset: 0xBF1DAC VA: 0xBF1DAC
	private static Action<Font> textureRebuilt; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xBF1DE8 Offset: 0xBF1DE8 VA: 0xBF1DE8
	[DebuggerBrowsableAttribute] // RVA: 0xBF1DE8 Offset: 0xBF1DE8 VA: 0xBF1DE8
	private Font.FontTextureRebuildCallback m_FontTextureRebuildCallback; // 0x18

	// Properties
	public Material material { get; }
	public string[] fontNames { get; }
	public bool dynamic { get; }
	public int fontSize { get; }

	// Methods

	// RVA: 0x2B8649C Offset: 0x2B8649C VA: 0x2B8649C
	public void .ctor() { }

	// RVA: 0x2B86584 Offset: 0x2B86584 VA: 0x2B86584
	public static void add_textureRebuilt(Action<Font> value) { }

	// RVA: 0x2B86684 Offset: 0x2B86684 VA: 0x2B86684
	public static void remove_textureRebuilt(Action<Font> value) { }

	// RVA: 0x2B86784 Offset: 0x2B86784 VA: 0x2B86784
	public Material get_material() { }

	// RVA: 0x2B867F0 Offset: 0x2B867F0 VA: 0x2B867F0
	public string[] get_fontNames() { }

	// RVA: 0x2B8685C Offset: 0x2B8685C VA: 0x2B8685C
	public bool get_dynamic() { }

	// RVA: 0x2B868C8 Offset: 0x2B868C8 VA: 0x2B868C8
	public int get_fontSize() { }

	[RequiredByNativeCodeAttribute] // RVA: 0xBF1F1C Offset: 0xBF1F1C VA: 0xBF1F1C
	// RVA: 0x2B86934 Offset: 0x2B86934 VA: 0x2B86934
	internal static void InvokeTextureRebuilt_Internal(Font font) { }

	// RVA: 0x2B86BC4 Offset: 0x2B86BC4 VA: 0x2B86BC4
	public bool HasCharacter(char c) { }

	// RVA: 0x2B86BCC Offset: 0x2B86BCC VA: 0x2B86BCC
	private bool HasCharacter(int c) { }

	// RVA: 0x2B86510 Offset: 0x2B86510 VA: 0x2B86510
	private static void Internal_CreateFont(Font self, string name) { }

	[FreeFunctionAttribute] // RVA: 0xBF1F2C Offset: 0xBF1F2C VA: 0xBF1F2C
	// RVA: 0x2B86C40 Offset: 0x2B86C40 VA: 0x2B86C40
	public bool GetCharacterInfo(char ch, out CharacterInfo info, int size, FontStyle style) { }

	// RVA: 0x2B86CDC Offset: 0x2B86CDC VA: 0x2B86CDC
	public void RequestCharactersInTexture(string characters, int size, FontStyle style) { }
}

// Namespace: 
public sealed class Font.FontTextureRebuildCallback : MulticastDelegate // TypeDefIndex: 2652
{
	// Methods

	// RVA: 0x2B86D68 Offset: 0x2B86D68 VA: 0x2B86D68
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2B869C4 Offset: 0x2B869C4 VA: 0x2B869C4 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x2B86D78 Offset: 0x2B86D78 VA: 0x2B86D78 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x2B86DAC Offset: 0x2B86DAC VA: 0x2B86DAC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2653
{}

// Namespace: UnityEngine.Networking
public static class UnityWebRequestAssetBundle // TypeDefIndex: 2654
{
	// Methods

	// RVA: 0x2B99614 Offset: 0x2B99614 VA: 0x2B99614
	public static UnityWebRequest GetAssetBundle(string uri) { }

	// RVA: 0x2B9961C Offset: 0x2B9961C VA: 0x2B9961C
	public static UnityWebRequest GetAssetBundle(string uri, uint crc) { }
}

// Namespace: UnityEngine.Networking
[NativeHeaderAttribute] // RVA: 0xBF3164 Offset: 0xBF3164 VA: 0xBF3164
public sealed class DownloadHandlerAssetBundle : DownloadHandler // TypeDefIndex: 2655
{
	// Properties
	public AssetBundle assetBundle { get; }

	// Methods

	// RVA: 0x2B9936C Offset: 0x2B9936C VA: 0x2B9936C
	public void .ctor(string url, uint crc) { }

	// RVA: 0x2B993D8 Offset: 0x2B993D8 VA: 0x2B993D8
	private static IntPtr Create(DownloadHandlerAssetBundle obj, string url, uint crc) { }

	// RVA: 0x2B993B4 Offset: 0x2B993B4 VA: 0x2B993B4
	private void InternalCreateAssetBundle(string url, uint crc) { }

	// RVA: 0x2B9945C Offset: 0x2B9945C VA: 0x2B9945C Slot: 5
	protected override byte[] GetData() { }

	// RVA: 0x2B994D0 Offset: 0x2B994D0 VA: 0x2B994D0 Slot: 6
	protected override string GetText() { }

	// RVA: 0x2B99544 Offset: 0x2B99544 VA: 0x2B99544
	public AssetBundle get_assetBundle() { }

	// RVA: 0x2B995B0 Offset: 0x2B995B0 VA: 0x2B995B0
	public static AssetBundle GetContent(UnityWebRequest www) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2656
{}

// Namespace: UnityEngine.Purchasing
public class MiniJson // TypeDefIndex: 2657
{
	// Methods

	// RVA: 0x2B8EDC0 Offset: 0x2B8EDC0 VA: 0x2B8EDC0
	public static string JsonEncode(object json) { }

	// RVA: 0x2B8EE54 Offset: 0x2B8EE54 VA: 0x2B8EE54
	public static object JsonDecode(string json) { }
}

// Namespace: UnityEngine.Purchasing
public interface INativeStore // TypeDefIndex: 2658
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void RetrieveProducts(string json);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void Purchase(string productJSON, string developerPayload);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void FinishTransaction(string productJSON, string transactionID);
}

// Namespace: UnityEngine.Purchasing
internal sealed class UnityPurchasingCallback : MulticastDelegate // TypeDefIndex: 2659
{
	// Methods

	// RVA: 0x2B8EE60 Offset: 0x2B8EE60 VA: 0x2B8EE60
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2B8EE70 Offset: 0x2B8EE70 VA: 0x2B8EE70 Slot: 11
	public virtual void Invoke(string subject, string payload, string receipt, string transactionId) { }

	// RVA: 0x2B8F280 Offset: 0x2B8F280 VA: 0x2B8F280 Slot: 12
	public virtual IAsyncResult BeginInvoke(string subject, string payload, string receipt, string transactionId, AsyncCallback callback, object object) { }

	// RVA: 0x2B8F2B4 Offset: 0x2B8F2B4 VA: 0x2B8F2B4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine.Purchasing.MiniJSON
public static class Json // TypeDefIndex: 2660
{
	// Methods

	// RVA: 0x2B8CE44 Offset: 0x2B8CE44 VA: 0x2B8CE44
	public static object Deserialize(string json) { }

	// RVA: 0x2B8CF94 Offset: 0x2B8CF94 VA: 0x2B8CF94
	public static string Serialize(object obj) { }
}

// Namespace: 
private sealed class Json.Parser : IDisposable // TypeDefIndex: 2661
{
	// Fields
	private StringReader json; // 0x10

	// Properties
	private char PeekChar { get; }
	private char NextChar { get; }
	private string NextWord { get; }
	private Json.Parser.TOKEN NextToken { get; }

	// Methods

	// RVA: 0x2B8D03C Offset: 0x2B8D03C VA: 0x2B8D03C
	public static bool IsWordBreak(char c) { }

	// RVA: 0x2B8D0E0 Offset: 0x2B8D0E0 VA: 0x2B8D0E0
	private void .ctor(string jsonString) { }

	// RVA: 0x2B8CE50 Offset: 0x2B8CE50 VA: 0x2B8CE50
	public static object Parse(string jsonString) { }

	// RVA: 0x2B8D184 Offset: 0x2B8D184 VA: 0x2B8D184 Slot: 4
	public void Dispose() { }

	// RVA: 0x2B8D1C0 Offset: 0x2B8D1C0 VA: 0x2B8D1C0
	private Dictionary<string, object> ParseObject() { }

	// RVA: 0x2B8D830 Offset: 0x2B8D830 VA: 0x2B8D830
	private List<object> ParseArray() { }

	// RVA: 0x2B8D15C Offset: 0x2B8D15C VA: 0x2B8D15C
	private object ParseValue() { }

	// RVA: 0x2B8D91C Offset: 0x2B8D91C VA: 0x2B8D91C
	private object ParseByToken(Json.Parser.TOKEN token) { }

	// RVA: 0x2B8D52C Offset: 0x2B8D52C VA: 0x2B8D52C
	private string ParseString() { }

	// RVA: 0x2B8D9F8 Offset: 0x2B8D9F8 VA: 0x2B8D9F8
	private object ParseNumber() { }

	// RVA: 0x2B8DCE0 Offset: 0x2B8DCE0 VA: 0x2B8DCE0
	private void EatWhitespace() { }

	// RVA: 0x2B8DDA8 Offset: 0x2B8DDA8 VA: 0x2B8DDA8
	private char get_PeekChar() { }

	// RVA: 0x2B8DB74 Offset: 0x2B8DB74 VA: 0x2B8DB74
	private char get_NextChar() { }

	// RVA: 0x2B8DC04 Offset: 0x2B8DC04 VA: 0x2B8DC04
	private string get_NextWord() { }

	// RVA: 0x2B8D2FC Offset: 0x2B8D2FC VA: 0x2B8D2FC
	private Json.Parser.TOKEN get_NextToken() { }
}

// Namespace: 
private enum Json.Parser.TOKEN // TypeDefIndex: 2662
{
	// Fields
	public int value__; // 0x0
	public const Json.Parser.TOKEN NONE = 0;
	public const Json.Parser.TOKEN CURLY_OPEN = 1;
	public const Json.Parser.TOKEN CURLY_CLOSE = 2;
	public const Json.Parser.TOKEN SQUARED_OPEN = 3;
	public const Json.Parser.TOKEN SQUARED_CLOSE = 4;
	public const Json.Parser.TOKEN COLON = 5;
	public const Json.Parser.TOKEN COMMA = 6;
	public const Json.Parser.TOKEN STRING = 7;
	public const Json.Parser.TOKEN NUMBER = 8;
	public const Json.Parser.TOKEN TRUE = 9;
	public const Json.Parser.TOKEN FALSE = 10;
	public const Json.Parser.TOKEN NULL = 11;
}

// Namespace: 
private sealed class Json.Serializer // TypeDefIndex: 2663
{
	// Fields
	private StringBuilder builder; // 0x10

	// Methods

	// RVA: 0x2B8DE38 Offset: 0x2B8DE38 VA: 0x2B8DE38
	private void .ctor() { }

	// RVA: 0x2B8CF98 Offset: 0x2B8CF98 VA: 0x2B8CF98
	public static string Serialize(object obj) { }

	// RVA: 0x2B8DEA4 Offset: 0x2B8DEA4 VA: 0x2B8DEA4
	private void SerializeValue(object value) { }

	// RVA: 0x2B8E62C Offset: 0x2B8E62C VA: 0x2B8E62C
	private void SerializeObject(IDictionary obj) { }

	// RVA: 0x2B8E330 Offset: 0x2B8E330 VA: 0x2B8E330
	private void SerializeArray(IList anArray) { }

	// RVA: 0x2B8E060 Offset: 0x2B8E060 VA: 0x2B8E060
	private void SerializeString(string str) { }

	// RVA: 0x2B8EA74 Offset: 0x2B8EA74 VA: 0x2B8EA74
	private void SerializeOther(object value) { }
}

// Namespace: UnityEngine.Purchasing.MiniJSON
[ExtensionAttribute] // RVA: 0xBF429C Offset: 0xBF429C VA: 0xBF429C
public static class MiniJsonExtensions // TypeDefIndex: 2664
{
	// Methods

	[ExtensionAttribute] // RVA: 0xBF42AC Offset: 0xBF42AC VA: 0xBF42AC
	// RVA: 0x2B8ECF4 Offset: 0x2B8ECF4 VA: 0x2B8ECF4
	public static string GetString(Dictionary<string, object> dic, string key, string defaultValue = "") { }

	[ExtensionAttribute] // RVA: 0xBF42BC Offset: 0xBF42BC VA: 0xBF42BC
	// RVA: 0x2B8EDBC Offset: 0x2B8EDBC VA: 0x2B8EDBC
	public static string toJson(Dictionary<string, object> obj) { }

	[ExtensionAttribute] // RVA: 0xBF42CC Offset: 0xBF42CC VA: 0xBF42CC
	// RVA: 0x2B8EDC4 Offset: 0x2B8EDC4 VA: 0x2B8EDC4
	public static string toJson(Dictionary<string, string> obj) { }

	[ExtensionAttribute] // RVA: 0xBF42DC Offset: 0xBF42DC VA: 0xBF42DC
	// RVA: 0x2B8EDC8 Offset: 0x2B8EDC8 VA: 0x2B8EDC8
	public static Dictionary<string, object> HashtableFromJson(string json) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2665
{}

// Namespace: System
public class Tuple<T1, T2> // TypeDefIndex: 2666
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xBF45E4 Offset: 0xBF45E4 VA: 0xBF45E4
	[DebuggerBrowsableAttribute] // RVA: 0xBF45E4 Offset: 0xBF45E4 VA: 0xBF45E4
	private T1 <Item1>k__BackingField; // 0x0
	[DebuggerBrowsableAttribute] // RVA: 0xBF4620 Offset: 0xBF4620 VA: 0xBF4620
	[CompilerGeneratedAttribute] // RVA: 0xBF4620 Offset: 0xBF4620 VA: 0xBF4620
	private T2 <Item2>k__BackingField; // 0x0

	// Properties
	public T1 Item1 { get; set; }
	public T2 Item2 { get; set; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(T1 item1, T2 item2) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2618994 Offset: 0x2618994 VA: 0x2618994
	|-Tuple<object, object>..ctor
	|-Tuple<SendOrPostCallback, object>..ctor
	*/

	[CompilerGeneratedAttribute] // RVA: 0xBF466C Offset: 0xBF466C VA: 0xBF466C
	// RVA: -1 Offset: -1
	public T1 get_Item1() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2618A30 Offset: 0x2618A30 VA: 0x2618A30
	|-Tuple<SendOrPostCallback, object>.get_Item1
	|-Tuple<object, object>.get_Item1
	*/

	[CompilerGeneratedAttribute] // RVA: 0xBF467C Offset: 0xBF467C VA: 0xBF467C
	// RVA: -1 Offset: -1
	private void set_Item1(T1 value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2618A38 Offset: 0x2618A38 VA: 0x2618A38
	|-Tuple<object, object>.set_Item1
	*/

	[CompilerGeneratedAttribute] // RVA: 0xBF468C Offset: 0xBF468C VA: 0xBF468C
	// RVA: -1 Offset: -1
	public T2 get_Item2() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2618A40 Offset: 0x2618A40 VA: 0x2618A40
	|-Tuple<SendOrPostCallback, object>.get_Item2
	|-Tuple<object, object>.get_Item2
	*/

	[CompilerGeneratedAttribute] // RVA: 0xBF469C Offset: 0xBF469C VA: 0xBF469C
	// RVA: -1 Offset: -1
	private void set_Item2(T2 value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2618A48 Offset: 0x2618A48 VA: 0x2618A48
	|-Tuple<object, object>.set_Item2
	*/

	// RVA: -1 Offset: -1 Slot: 0
	public override bool Equals(object obj) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2618A50 Offset: 0x2618A50 VA: 0x2618A50
	|-Tuple<object, object>.Equals
	*/

	// RVA: -1 Offset: -1 Slot: 2
	public override int GetHashCode() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2618B60 Offset: 0x2618B60 VA: 0x2618B60
	|-Tuple<object, object>.GetHashCode
	*/
}

// Namespace: System.Threading
public class ThreadLocal<T> : IDisposable // TypeDefIndex: 2667
{
	// Fields
	private static long lastId; // 0x0
	[ThreadStaticAttribute] // RVA: 0xBF465C Offset: 0xBF465C VA: 0xBF465C
	private static IDictionary<long, T> threadLocalData; // 0xFFFFFFFF
	private static IList<WeakReference> allDataDictionaries; // 0x0
	private bool disposed; // 0x0
	private readonly long id; // 0x0
	private readonly Func<T> valueFactory; // 0x0

	// Properties
	private static IDictionary<long, T> ThreadLocalData { get; }
	public T Value { get; set; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(Func<T> valueFactory) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x261655C Offset: 0x261655C VA: 0x261655C
	|-ThreadLocal<int>..ctor
	|
	|-RVA: 0x2617778 Offset: 0x2617778 VA: 0x2617778
	|-ThreadLocal<object>..ctor
	*/

	// RVA: -1 Offset: -1
	private static IDictionary<long, T> get_ThreadLocalData() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2616638 Offset: 0x2616638 VA: 0x2616638
	|-ThreadLocal<int>.get_ThreadLocalData
	|
	|-RVA: 0x2617854 Offset: 0x2617854 VA: 0x2617854
	|-ThreadLocal<object>.get_ThreadLocalData
	*/

	// RVA: -1 Offset: -1
	public T get_Value() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2616BC4 Offset: 0x2616BC4 VA: 0x2616BC4
	|-ThreadLocal<int>.get_Value
	|
	|-RVA: 0x2617DE0 Offset: 0x2617DE0 VA: 0x2617DE0
	|-ThreadLocal<object>.get_Value
	*/

	// RVA: -1 Offset: -1
	public void set_Value(T value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2616E84 Offset: 0x2616E84 VA: 0x2616E84
	|-ThreadLocal<int>.set_Value
	|
	|-RVA: 0x26180A0 Offset: 0x26180A0 VA: 0x26180A0
	|-ThreadLocal<object>.set_Value
	*/

	// RVA: -1 Offset: -1 Slot: 1
	protected override void Finalize() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2616FE4 Offset: 0x2616FE4 VA: 0x2616FE4
	|-ThreadLocal<int>.Finalize
	|
	|-RVA: 0x2618200 Offset: 0x2618200 VA: 0x2618200
	|-ThreadLocal<object>.Finalize
	*/

	// RVA: -1 Offset: -1
	private void CheckDisposed() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2617074 Offset: 0x2617074 VA: 0x2617074
	|-ThreadLocal<int>.CheckDisposed
	|
	|-RVA: 0x2618290 Offset: 0x2618290 VA: 0x2618290
	|-ThreadLocal<object>.CheckDisposed
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public void Dispose() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2617100 Offset: 0x2617100 VA: 0x2617100
	|-ThreadLocal<int>.Dispose
	|
	|-RVA: 0x261831C Offset: 0x261831C VA: 0x261831C
	|-ThreadLocal<object>.Dispose
	*/

	// RVA: -1 Offset: -1
	private static void .cctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x26176A8 Offset: 0x26176A8 VA: 0x26176A8
	|-ThreadLocal<int>..cctor
	|
	|-RVA: 0x26188C4 Offset: 0x26188C4 VA: 0x26188C4
	|-ThreadLocal<object>..cctor
	*/
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2668
{}

// Namespace: UnityEngine.AI
[NativeHeaderAttribute] // RVA: 0xBF4820 Offset: 0xBF4820 VA: 0xBF4820
[MovedFromAttribute] // RVA: 0xBF4820 Offset: 0xBF4820 VA: 0xBF4820
public static class NavMesh // TypeDefIndex: 2669
{
	// Fields
	public static NavMesh.OnNavMeshPreUpdate onPreUpdate; // 0x0

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xBF48B8 Offset: 0xBF48B8 VA: 0xBF48B8
	// RVA: 0x2B9BFA0 Offset: 0x2B9BFA0 VA: 0x2B9BFA0
	private static void Internal_CallOnNavMeshPreUpdate() { }
}

// Namespace: 
public sealed class NavMesh.OnNavMeshPreUpdate : MulticastDelegate // TypeDefIndex: 2670
{
	// Methods

	// RVA: 0x2B9C204 Offset: 0x2B9C204 VA: 0x2B9C204
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2B9C004 Offset: 0x2B9C004 VA: 0x2B9C004 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x2B9C214 Offset: 0x2B9C214 VA: 0x2B9C214 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x2B9C248 Offset: 0x2B9C248 VA: 0x2B9C248 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine.AI
[MovedFromAttribute] // RVA: 0xBF4880 Offset: 0xBF4880 VA: 0xBF4880
public sealed class NavMeshAgent : Behaviour // TypeDefIndex: 2671
{
	// Properties
	public Vector3 velocity { set; }

	// Methods

	// RVA: 0x2B9C254 Offset: 0x2B9C254 VA: 0x2B9C254
	public void set_velocity(Vector3 value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xBF48C8 Offset: 0xBF48C8 VA: 0xBF48C8
	// RVA: 0x2B9C27C Offset: 0x2B9C27C VA: 0x2B9C27C
	private void INTERNAL_set_velocity(ref Vector3 value) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2672
{}

// Namespace: UnityEngine.Playables
public static class AnimationPlayableUtilities // TypeDefIndex: 2673
{
	// Methods

	// RVA: 0x2B38F40 Offset: 0x2B38F40 VA: 0x2B38F40
	public static void Play(Animator animator, Playable playable, PlayableGraph graph) { }
}

// Namespace: UnityEngine
public interface IAnimationClipSource // TypeDefIndex: 2674
{}

// Namespace: UnityEngine.Experimental.Animations
public interface IAnimationJobPlayable : IPlayable // TypeDefIndex: 2675
{}

// Namespace: UnityEngine
[AttributeUsageAttribute] // RVA: 0xBF59D8 Offset: 0xBF59D8 VA: 0xBF59D8
[RequiredByNativeCodeAttribute] // RVA: 0xBF59D8 Offset: 0xBF59D8 VA: 0xBF59D8
public sealed class SharedBetweenAnimatorsAttribute : Attribute // TypeDefIndex: 2676
{}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xBF5A28 Offset: 0xBF5A28 VA: 0xBF5A28
public abstract class StateMachineBehaviour : ScriptableObject // TypeDefIndex: 2677
{
	// Methods

	// RVA: 0x2B39028 Offset: 0x2B39028 VA: 0x2B39028
	protected void .ctor() { }

	// RVA: 0x2B39030 Offset: 0x2B39030 VA: 0x2B39030 Slot: 4
	public virtual void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) { }

	// RVA: 0x2B39034 Offset: 0x2B39034 VA: 0x2B39034 Slot: 5
	public virtual void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) { }

	// RVA: 0x2B39038 Offset: 0x2B39038 VA: 0x2B39038 Slot: 6
	public virtual void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) { }

	// RVA: 0x2B3903C Offset: 0x2B3903C VA: 0x2B3903C Slot: 7
	public virtual void OnStateMove(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) { }

	// RVA: 0x2B39040 Offset: 0x2B39040 VA: 0x2B39040 Slot: 8
	public virtual void OnStateIK(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) { }

	// RVA: 0x2B39044 Offset: 0x2B39044 VA: 0x2B39044 Slot: 9
	public virtual void OnStateMachineEnter(Animator animator, int stateMachinePathHash) { }

	// RVA: 0x2B39048 Offset: 0x2B39048 VA: 0x2B39048 Slot: 10
	public virtual void OnStateMachineExit(Animator animator, int stateMachinePathHash) { }

	// RVA: 0x2B3904C Offset: 0x2B3904C VA: 0x2B3904C Slot: 11
	public virtual void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex, AnimatorControllerPlayable controller) { }

	// RVA: 0x2B39050 Offset: 0x2B39050 VA: 0x2B39050 Slot: 12
	public virtual void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex, AnimatorControllerPlayable controller) { }

	// RVA: 0x2B39054 Offset: 0x2B39054 VA: 0x2B39054 Slot: 13
	public virtual void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex, AnimatorControllerPlayable controller) { }

	// RVA: 0x2B39058 Offset: 0x2B39058 VA: 0x2B39058 Slot: 14
	public virtual void OnStateMove(Animator animator, AnimatorStateInfo stateInfo, int layerIndex, AnimatorControllerPlayable controller) { }

	// RVA: 0x2B3905C Offset: 0x2B3905C VA: 0x2B3905C Slot: 15
	public virtual void OnStateIK(Animator animator, AnimatorStateInfo stateInfo, int layerIndex, AnimatorControllerPlayable controller) { }

	// RVA: 0x2B39060 Offset: 0x2B39060 VA: 0x2B39060 Slot: 16
	public virtual void OnStateMachineEnter(Animator animator, int stateMachinePathHash, AnimatorControllerPlayable controller) { }

	// RVA: 0x2B39064 Offset: 0x2B39064 VA: 0x2B39064 Slot: 17
	public virtual void OnStateMachineExit(Animator animator, int stateMachinePathHash, AnimatorControllerPlayable controller) { }
}

// Namespace: UnityEngine
[NativeTypeAttribute] // RVA: 0xBF5A38 Offset: 0xBF5A38 VA: 0xBF5A38
[NativeHeaderAttribute] // RVA: 0xBF5A38 Offset: 0xBF5A38 VA: 0xBF5A38
public sealed class AnimationClip : Motion // TypeDefIndex: 2678
{
	// Properties
	[NativePropertyAttribute] // RVA: 0xBF820C Offset: 0xBF820C VA: 0xBF820C
	public float length { get; }
	[NativePropertyAttribute] // RVA: 0xBF824C Offset: 0xBF824C VA: 0xBF824C
	public WrapMode wrapMode { get; }
	public bool legacy { get; }
	public AnimationEvent[] events { get; }

	// Methods
