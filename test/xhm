
	// RVA: 0x1379B64 Offset: 0x1379B64 VA: 0x1379B64
	public Rect get_rectExtents() { }

	// RVA: 0x13795C0 Offset: 0x13795C0 VA: 0x13795C0
	public int get_characterCount() { }

	// RVA: 0x137A2D4 Offset: 0x137A2D4 VA: 0x137A2D4
	public int get_lineCount() { }

	[NativeMethodAttribute] // RVA: 0xC5DF5C Offset: 0xC5DF5C VA: 0xC5DF5C
	// RVA: 0x1379388 Offset: 0x1379388 VA: 0x1379388
	private static IntPtr Internal_Create() { }

	[NativeMethodAttribute] // RVA: 0xC5DF94 Offset: 0xC5DF94 VA: 0xC5DF94
	// RVA: 0x137953C Offset: 0x137953C VA: 0x137953C
	private static void Internal_Destroy(IntPtr ptr) { }

	// RVA: 0x137A340 Offset: 0x137A340 VA: 0x137A340
	internal bool Populate_Internal(string str, Font font, Color color, int fontSize, float scaleFactor, float lineSpacing, FontStyle style, bool richText, bool resizeTextForBestFit, int resizeTextMinSize, int resizeTextMaxSize, int verticalOverFlow, int horizontalOverflow, bool updateBounds, TextAnchor anchor, float extentsX, float extentsY, float pivotX, float pivotY, bool generateOutOfBounds, bool alignByGeometry, out uint error) { }

	// RVA: 0x137A000 Offset: 0x137A000 VA: 0x137A000
	internal bool Populate_Internal(string str, Font font, Color color, int fontSize, float scaleFactor, float lineSpacing, FontStyle style, bool richText, bool resizeTextForBestFit, int resizeTextMinSize, int resizeTextMaxSize, VerticalWrapMode verticalOverFlow, HorizontalWrapMode horizontalOverflow, bool updateBounds, TextAnchor anchor, Vector2 extents, Vector2 pivot, bool generateOutOfBounds, bool alignByGeometry, out TextGenerationError error) { }

	[NativeThrowsAttribute] // RVA: 0xC5DFCC Offset: 0xC5DFCC VA: 0xC5DFCC
	// RVA: 0x1379A1C Offset: 0x1379A1C VA: 0x1379A1C
	private void GetVerticesInternal(object vertices) { }

	[NativeThrowsAttribute] // RVA: 0xC5DFDC Offset: 0xC5DFDC VA: 0xC5DFDC
	// RVA: 0x137992C Offset: 0x137992C VA: 0x137992C
	private void GetCharactersInternal(object characters) { }

	[NativeThrowsAttribute] // RVA: 0xC5DFEC Offset: 0xC5DFEC VA: 0xC5DFEC
	// RVA: 0x13799A4 Offset: 0x13799A4 VA: 0x13799A4
	private void GetLinesInternal(object lines) { }

	// RVA: 0x137A260 Offset: 0x137A260 VA: 0x137A260
	private void get_rectExtents_Injected(out Rect ret) { }

	// RVA: 0x137A3FC Offset: 0x137A3FC VA: 0x137A3FC
	private bool Populate_Internal_Injected(string str, Font font, ref Color color, int fontSize, float scaleFactor, float lineSpacing, FontStyle style, bool richText, bool resizeTextForBestFit, int resizeTextMinSize, int resizeTextMaxSize, int verticalOverFlow, int horizontalOverflow, bool updateBounds, TextAnchor anchor, float extentsX, float extentsY, float pivotX, float pivotY, bool generateOutOfBounds, bool alignByGeometry, out uint error) { }
}

// Namespace: UnityEngine
public enum TextAnchor // TypeDefIndex: 2643
{
	// Fields
	public int value__; // 0x0
	public const TextAnchor UpperLeft = 0;
	public const TextAnchor UpperCenter = 1;
	public const TextAnchor UpperRight = 2;
	public const TextAnchor MiddleLeft = 3;
	public const TextAnchor MiddleCenter = 4;
	public const TextAnchor MiddleRight = 5;
	public const TextAnchor LowerLeft = 6;
	public const TextAnchor LowerCenter = 7;
	public const TextAnchor LowerRight = 8;
}

// Namespace: UnityEngine
public enum HorizontalWrapMode // TypeDefIndex: 2644
{
	// Fields
	public int value__; // 0x0
	public const HorizontalWrapMode Wrap = 0;
	public const HorizontalWrapMode Overflow = 1;
}

// Namespace: UnityEngine
public enum VerticalWrapMode // TypeDefIndex: 2645
{
	// Fields
	public int value__; // 0x0
	public const VerticalWrapMode Truncate = 0;
	public const VerticalWrapMode Overflow = 1;
}

// Namespace: UnityEngine
[NativeClassAttribute] // RVA: 0xC5DC34 Offset: 0xC5DC34 VA: 0xC5DC34
[ObsoleteAttribute] // RVA: 0xC5DC34 Offset: 0xC5DC34 VA: 0xC5DC34
[NativeHeaderAttribute] // RVA: 0xC5DC34 Offset: 0xC5DC34 VA: 0xC5DC34
[NativeHeaderAttribute] // RVA: 0xC5DC34 Offset: 0xC5DC34 VA: 0xC5DC34
public sealed class GUIText : GUIElement // TypeDefIndex: 2646
{
	// Properties
	public string text { set; }
	public Material material { get; }

	// Methods

	// RVA: 0x1378D48 Offset: 0x1378D48 VA: 0x1378D48
	public void set_text(string value) { }

	[FreeFunctionAttribute] // RVA: 0xC5DFFC Offset: 0xC5DFFC VA: 0xC5DFFC
	// RVA: 0x1378DBC Offset: 0x1378DBC VA: 0x1378DBC
	public Material get_material() { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC5DCE0 Offset: 0xC5DCE0 VA: 0xC5DCE0
public struct CharacterInfo // TypeDefIndex: 2647
{
	// Fields
	public int index; // 0x0
	[ObsoleteAttribute] // RVA: 0xC5DDCC Offset: 0xC5DDCC VA: 0xC5DDCC
	public Rect uv; // 0x4
	[ObsoleteAttribute] // RVA: 0xC5DE04 Offset: 0xC5DE04 VA: 0xC5DE04
	public Rect vert; // 0x14
	[ObsoleteAttribute] // RVA: 0xC5DE3C Offset: 0xC5DE3C VA: 0xC5DE3C
	[NativeNameAttribute] // RVA: 0xC5DE3C Offset: 0xC5DE3C VA: 0xC5DE3C
	public float width; // 0x24
	public int size; // 0x28
	public FontStyle style; // 0x2C
	[ObsoleteAttribute] // RVA: 0xC5DE9C Offset: 0xC5DE9C VA: 0xC5DE9C
	public bool flipped; // 0x30

	// Properties
	public int advance { get; }
	public int minY { get; }
	public int maxY { get; }
	public int minX { get; }
	public int maxX { get; }
	internal Vector2 uvBottomLeftUnFlipped { get; }
	internal Vector2 uvBottomRightUnFlipped { get; }
	internal Vector2 uvTopRightUnFlipped { get; }
	internal Vector2 uvTopLeftUnFlipped { get; }
	public Vector2 uvBottomLeft { get; }
	public Vector2 uvBottomRight { get; }
	public Vector2 uvTopRight { get; }
	public Vector2 uvTopLeft { get; }

	// Methods

	// RVA: 0xBC29B0 Offset: 0xBC29B0 VA: 0xBC29B0
	public int get_advance() { }

	// RVA: 0xBC29D8 Offset: 0xBC29D8 VA: 0xBC29D8
	public int get_minY() { }

	// RVA: 0xBC2A20 Offset: 0xBC2A20 VA: 0xBC2A20
	public int get_maxY() { }

	// RVA: 0xBC2A40 Offset: 0xBC2A40 VA: 0xBC2A40
	public int get_minX() { }

	// RVA: 0xBC2A60 Offset: 0xBC2A60 VA: 0xBC2A60
	public int get_maxX() { }

	// RVA: 0xBC2AA8 Offset: 0xBC2AA8 VA: 0xBC2AA8
	internal Vector2 get_uvBottomLeftUnFlipped() { }

	// RVA: 0xBC2AB0 Offset: 0xBC2AB0 VA: 0xBC2AB0
	internal Vector2 get_uvBottomRightUnFlipped() { }

	// RVA: 0xBC2AB8 Offset: 0xBC2AB8 VA: 0xBC2AB8
	internal Vector2 get_uvTopRightUnFlipped() { }

	// RVA: 0xBC2AC0 Offset: 0xBC2AC0 VA: 0xBC2AC0
	internal Vector2 get_uvTopLeftUnFlipped() { }

	// RVA: 0xBC2AC8 Offset: 0xBC2AC8 VA: 0xBC2AC8
	public Vector2 get_uvBottomLeft() { }

	// RVA: 0xBC2AD0 Offset: 0xBC2AD0 VA: 0xBC2AD0
	public Vector2 get_uvBottomRight() { }

	// RVA: 0xBC2AD8 Offset: 0xBC2AD8 VA: 0xBC2AD8
	public Vector2 get_uvTopRight() { }

	// RVA: 0xBC2AE0 Offset: 0xBC2AE0 VA: 0xBC2AE0
	public Vector2 get_uvTopLeft() { }
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC5DCF0 Offset: 0xC5DCF0 VA: 0xC5DCF0
public struct UICharInfo // TypeDefIndex: 2648
{
	// Fields
	public Vector2 cursorPos; // 0x0
	public float charWidth; // 0x8
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC5DD00 Offset: 0xC5DD00 VA: 0xC5DD00
public struct UILineInfo // TypeDefIndex: 2649
{
	// Fields
	public int startCharIdx; // 0x0
	public int height; // 0x4
	public float topY; // 0x8
	public float leading; // 0xC
}

// Namespace: UnityEngine
[UsedByNativeCodeAttribute] // RVA: 0xC5DD10 Offset: 0xC5DD10 VA: 0xC5DD10
public struct UIVertex // TypeDefIndex: 2650
{
	// Fields
	public Vector3 position; // 0x0
	public Vector3 normal; // 0xC
	public Vector4 tangent; // 0x18
	public Color32 color; // 0x28
	public Vector2 uv0; // 0x2C
	public Vector2 uv1; // 0x34
	public Vector2 uv2; // 0x3C
	public Vector2 uv3; // 0x44
	private static readonly Color32 s_DefaultColor; // 0x0
	private static readonly Vector4 s_DefaultTangent; // 0x4
	public static UIVertex simpleVert; // 0x14

	// Methods

	// RVA: 0x137A558 Offset: 0x137A558 VA: 0x137A558
	private static void .cctor() { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xC5DD20 Offset: 0xC5DD20 VA: 0xC5DD20
[StaticAccessorAttribute] // RVA: 0xC5DD20 Offset: 0xC5DD20 VA: 0xC5DD20
[NativeClassAttribute] // RVA: 0xC5DD20 Offset: 0xC5DD20 VA: 0xC5DD20
[NativeHeaderAttribute] // RVA: 0xC5DD20 Offset: 0xC5DD20 VA: 0xC5DD20
public sealed class Font : Object // TypeDefIndex: 2651
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC5DED4 Offset: 0xC5DED4 VA: 0xC5DED4
	[DebuggerBrowsableAttribute] // RVA: 0xC5DED4 Offset: 0xC5DED4 VA: 0xC5DED4
	private static Action<Font> textureRebuilt; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC5DF10 Offset: 0xC5DF10 VA: 0xC5DF10
	[DebuggerBrowsableAttribute] // RVA: 0xC5DF10 Offset: 0xC5DF10 VA: 0xC5DF10
	private Font.FontTextureRebuildCallback m_FontTextureRebuildCallback; // 0x18

	// Properties
	public Material material { get; }
	public string[] fontNames { get; }
	public bool dynamic { get; }
	public int fontSize { get; }

	// Methods

	// RVA: 0x137842C Offset: 0x137842C VA: 0x137842C
	public void .ctor() { }

	// RVA: 0x1378514 Offset: 0x1378514 VA: 0x1378514
	public static void add_textureRebuilt(Action<Font> value) { }

	// RVA: 0x1378614 Offset: 0x1378614 VA: 0x1378614
	public static void remove_textureRebuilt(Action<Font> value) { }

	// RVA: 0x1378714 Offset: 0x1378714 VA: 0x1378714
	public Material get_material() { }

	// RVA: 0x1378780 Offset: 0x1378780 VA: 0x1378780
	public string[] get_fontNames() { }

	// RVA: 0x13787EC Offset: 0x13787EC VA: 0x13787EC
	public bool get_dynamic() { }

	// RVA: 0x1378858 Offset: 0x1378858 VA: 0x1378858
	public int get_fontSize() { }

	[RequiredByNativeCodeAttribute] // RVA: 0xC5E044 Offset: 0xC5E044 VA: 0xC5E044
	// RVA: 0x13788C4 Offset: 0x13788C4 VA: 0x13788C4
	internal static void InvokeTextureRebuilt_Internal(Font font) { }

	// RVA: 0x1378B54 Offset: 0x1378B54 VA: 0x1378B54
	public bool HasCharacter(char c) { }

	// RVA: 0x1378B5C Offset: 0x1378B5C VA: 0x1378B5C
	private bool HasCharacter(int c) { }

	// RVA: 0x13784A0 Offset: 0x13784A0 VA: 0x13784A0
	private static void Internal_CreateFont(Font self, string name) { }

	[FreeFunctionAttribute] // RVA: 0xC5E054 Offset: 0xC5E054 VA: 0xC5E054
	// RVA: 0x1378BD0 Offset: 0x1378BD0 VA: 0x1378BD0
	public bool GetCharacterInfo(char ch, out CharacterInfo info, int size, FontStyle style) { }

	// RVA: 0x1378C6C Offset: 0x1378C6C VA: 0x1378C6C
	public void RequestCharactersInTexture(string characters, int size, FontStyle style) { }
}

// Namespace: 
public sealed class Font.FontTextureRebuildCallback : MulticastDelegate // TypeDefIndex: 2652
{
	// Methods

	// RVA: 0x1378CF8 Offset: 0x1378CF8 VA: 0x1378CF8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1378954 Offset: 0x1378954 VA: 0x1378954 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1378D08 Offset: 0x1378D08 VA: 0x1378D08 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1378D3C Offset: 0x1378D3C VA: 0x1378D3C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2653
{}

// Namespace: UnityEngine.Networking
public static class UnityWebRequestAssetBundle // TypeDefIndex: 2654
{
	// Methods

	// RVA: 0x1388724 Offset: 0x1388724 VA: 0x1388724
	public static UnityWebRequest GetAssetBundle(string uri) { }

	// RVA: 0x138872C Offset: 0x138872C VA: 0x138872C
	public static UnityWebRequest GetAssetBundle(string uri, uint crc) { }
}

// Namespace: UnityEngine.Networking
[NativeHeaderAttribute] // RVA: 0xC5F28C Offset: 0xC5F28C VA: 0xC5F28C
public sealed class DownloadHandlerAssetBundle : DownloadHandler // TypeDefIndex: 2655
{
	// Properties
	public AssetBundle assetBundle { get; }

	// Methods

	// RVA: 0x138847C Offset: 0x138847C VA: 0x138847C
	public void .ctor(string url, uint crc) { }

	// RVA: 0x13884E8 Offset: 0x13884E8 VA: 0x13884E8
	private static IntPtr Create(DownloadHandlerAssetBundle obj, string url, uint crc) { }

	// RVA: 0x13884C4 Offset: 0x13884C4 VA: 0x13884C4
	private void InternalCreateAssetBundle(string url, uint crc) { }

	// RVA: 0x138856C Offset: 0x138856C VA: 0x138856C Slot: 5
	protected override byte[] GetData() { }

	// RVA: 0x13885E0 Offset: 0x13885E0 VA: 0x13885E0 Slot: 6
	protected override string GetText() { }

	// RVA: 0x1388654 Offset: 0x1388654 VA: 0x1388654
	public AssetBundle get_assetBundle() { }

	// RVA: 0x13886C0 Offset: 0x13886C0 VA: 0x13886C0
	public static AssetBundle GetContent(UnityWebRequest www) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2656
{}

// Namespace: UnityEngine.Purchasing
public class MiniJson // TypeDefIndex: 2657
{
	// Methods

	// RVA: 0x137DED0 Offset: 0x137DED0 VA: 0x137DED0
	public static string JsonEncode(object json) { }

	// RVA: 0x137DF64 Offset: 0x137DF64 VA: 0x137DF64
	public static object JsonDecode(string json) { }
}

// Namespace: UnityEngine.Purchasing
public interface INativeStore // TypeDefIndex: 2658
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void RetrieveProducts(string json);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void Purchase(string productJSON, string developerPayload);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void FinishTransaction(string productJSON, string transactionID);
}

// Namespace: UnityEngine.Purchasing
internal sealed class UnityPurchasingCallback : MulticastDelegate // TypeDefIndex: 2659
{
	// Methods

	// RVA: 0x137DF70 Offset: 0x137DF70 VA: 0x137DF70
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x137DF80 Offset: 0x137DF80 VA: 0x137DF80 Slot: 11
	public virtual void Invoke(string subject, string payload, string receipt, string transactionId) { }

	// RVA: 0x137E390 Offset: 0x137E390 VA: 0x137E390 Slot: 12
	public virtual IAsyncResult BeginInvoke(string subject, string payload, string receipt, string transactionId, AsyncCallback callback, object object) { }

	// RVA: 0x137E3C4 Offset: 0x137E3C4 VA: 0x137E3C4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine.Purchasing.MiniJSON
public static class Json // TypeDefIndex: 2660
{
	// Methods

	// RVA: 0x137BF54 Offset: 0x137BF54 VA: 0x137BF54
	public static object Deserialize(string json) { }

	// RVA: 0x137C0A4 Offset: 0x137C0A4 VA: 0x137C0A4
	public static string Serialize(object obj) { }
}

// Namespace: 
private sealed class Json.Parser : IDisposable // TypeDefIndex: 2661
{
	// Fields
	private StringReader json; // 0x10

	// Properties
	private char PeekChar { get; }
	private char NextChar { get; }
	private string NextWord { get; }
	private Json.Parser.TOKEN NextToken { get; }

	// Methods

	// RVA: 0x137C14C Offset: 0x137C14C VA: 0x137C14C
	public static bool IsWordBreak(char c) { }

	// RVA: 0x137C1F0 Offset: 0x137C1F0 VA: 0x137C1F0
	private void .ctor(string jsonString) { }

	// RVA: 0x137BF60 Offset: 0x137BF60 VA: 0x137BF60
	public static object Parse(string jsonString) { }

	// RVA: 0x137C294 Offset: 0x137C294 VA: 0x137C294 Slot: 4
	public void Dispose() { }

	// RVA: 0x137C2D0 Offset: 0x137C2D0 VA: 0x137C2D0
	private Dictionary<string, object> ParseObject() { }

	// RVA: 0x137C940 Offset: 0x137C940 VA: 0x137C940
	private List<object> ParseArray() { }

	// RVA: 0x137C26C Offset: 0x137C26C VA: 0x137C26C
	private object ParseValue() { }

	// RVA: 0x137CA2C Offset: 0x137CA2C VA: 0x137CA2C
	private object ParseByToken(Json.Parser.TOKEN token) { }

	// RVA: 0x137C63C Offset: 0x137C63C VA: 0x137C63C
	private string ParseString() { }

	// RVA: 0x137CB08 Offset: 0x137CB08 VA: 0x137CB08
	private object ParseNumber() { }

	// RVA: 0x137CDF0 Offset: 0x137CDF0 VA: 0x137CDF0
	private void EatWhitespace() { }

	// RVA: 0x137CEB8 Offset: 0x137CEB8 VA: 0x137CEB8
	private char get_PeekChar() { }

	// RVA: 0x137CC84 Offset: 0x137CC84 VA: 0x137CC84
	private char get_NextChar() { }

	// RVA: 0x137CD14 Offset: 0x137CD14 VA: 0x137CD14
	private string get_NextWord() { }

	// RVA: 0x137C40C Offset: 0x137C40C VA: 0x137C40C
	private Json.Parser.TOKEN get_NextToken() { }
}

// Namespace: 
private enum Json.Parser.TOKEN // TypeDefIndex: 2662
{
	// Fields
	public int value__; // 0x0
	public const Json.Parser.TOKEN NONE = 0;
	public const Json.Parser.TOKEN CURLY_OPEN = 1;
	public const Json.Parser.TOKEN CURLY_CLOSE = 2;
	public const Json.Parser.TOKEN SQUARED_OPEN = 3;
	public const Json.Parser.TOKEN SQUARED_CLOSE = 4;
	public const Json.Parser.TOKEN COLON = 5;
	public const Json.Parser.TOKEN COMMA = 6;
	public const Json.Parser.TOKEN STRING = 7;
	public const Json.Parser.TOKEN NUMBER = 8;
	public const Json.Parser.TOKEN TRUE = 9;
	public const Json.Parser.TOKEN FALSE = 10;
	public const Json.Parser.TOKEN NULL = 11;
}

// Namespace: 
private sealed class Json.Serializer // TypeDefIndex: 2663
{
	// Fields
	private StringBuilder builder; // 0x10

	// Methods

	// RVA: 0x137CF48 Offset: 0x137CF48 VA: 0x137CF48
	private void .ctor() { }

	// RVA: 0x137C0A8 Offset: 0x137C0A8 VA: 0x137C0A8
	public static string Serialize(object obj) { }

	// RVA: 0x137CFB4 Offset: 0x137CFB4 VA: 0x137CFB4
	private void SerializeValue(object value) { }

	// RVA: 0x137D73C Offset: 0x137D73C VA: 0x137D73C
	private void SerializeObject(IDictionary obj) { }

	// RVA: 0x137D440 Offset: 0x137D440 VA: 0x137D440
	private void SerializeArray(IList anArray) { }

	// RVA: 0x137D170 Offset: 0x137D170 VA: 0x137D170
	private void SerializeString(string str) { }

	// RVA: 0x137DB84 Offset: 0x137DB84 VA: 0x137DB84
	private void SerializeOther(object value) { }
}

// Namespace: UnityEngine.Purchasing.MiniJSON
[ExtensionAttribute] // RVA: 0xC603C4 Offset: 0xC603C4 VA: 0xC603C4
public static class MiniJsonExtensions // TypeDefIndex: 2664
{
	// Methods

	[ExtensionAttribute] // RVA: 0xC603D4 Offset: 0xC603D4 VA: 0xC603D4
	// RVA: 0x137DE04 Offset: 0x137DE04 VA: 0x137DE04
	public static string GetString(Dictionary<string, object> dic, string key, string defaultValue = "") { }

	[ExtensionAttribute] // RVA: 0xC603E4 Offset: 0xC603E4 VA: 0xC603E4
	// RVA: 0x137DECC Offset: 0x137DECC VA: 0x137DECC
	public static string toJson(Dictionary<string, object> obj) { }

	[ExtensionAttribute] // RVA: 0xC603F4 Offset: 0xC603F4 VA: 0xC603F4
	// RVA: 0x137DED4 Offset: 0x137DED4 VA: 0x137DED4
	public static string toJson(Dictionary<string, string> obj) { }

	[ExtensionAttribute] // RVA: 0xC60404 Offset: 0xC60404 VA: 0xC60404
	// RVA: 0x137DED8 Offset: 0x137DED8 VA: 0x137DED8
	public static Dictionary<string, object> HashtableFromJson(string json) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2665
{}

// Namespace: System
public class Tuple<T1, T2> // TypeDefIndex: 2666
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC6070C Offset: 0xC6070C VA: 0xC6070C
	[DebuggerBrowsableAttribute] // RVA: 0xC6070C Offset: 0xC6070C VA: 0xC6070C
	private T1 <Item1>k__BackingField; // 0x0
	[DebuggerBrowsableAttribute] // RVA: 0xC60748 Offset: 0xC60748 VA: 0xC60748
	[CompilerGeneratedAttribute] // RVA: 0xC60748 Offset: 0xC60748 VA: 0xC60748
	private T2 <Item2>k__BackingField; // 0x0

	// Properties
	public T1 Item1 { get; set; }
	public T2 Item2 { get; set; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(T1 item1, T2 item2) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2757B10 Offset: 0x2757B10 VA: 0x2757B10
	|-Tuple<object, object>..ctor
	|-Tuple<SendOrPostCallback, object>..ctor
	*/

	[CompilerGeneratedAttribute] // RVA: 0xC60794 Offset: 0xC60794 VA: 0xC60794
	// RVA: -1 Offset: -1
	public T1 get_Item1() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2757BAC Offset: 0x2757BAC VA: 0x2757BAC
	|-Tuple<SendOrPostCallback, object>.get_Item1
	|-Tuple<object, object>.get_Item1
	*/

	[CompilerGeneratedAttribute] // RVA: 0xC607A4 Offset: 0xC607A4 VA: 0xC607A4
	// RVA: -1 Offset: -1
	private void set_Item1(T1 value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2757BB4 Offset: 0x2757BB4 VA: 0x2757BB4
	|-Tuple<object, object>.set_Item1
	*/

	[CompilerGeneratedAttribute] // RVA: 0xC607B4 Offset: 0xC607B4 VA: 0xC607B4
	// RVA: -1 Offset: -1
	public T2 get_Item2() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2757BBC Offset: 0x2757BBC VA: 0x2757BBC
	|-Tuple<SendOrPostCallback, object>.get_Item2
	|-Tuple<object, object>.get_Item2
	*/

	[CompilerGeneratedAttribute] // RVA: 0xC607C4 Offset: 0xC607C4 VA: 0xC607C4
	// RVA: -1 Offset: -1
	private void set_Item2(T2 value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2757BC4 Offset: 0x2757BC4 VA: 0x2757BC4
	|-Tuple<object, object>.set_Item2
	*/

	// RVA: -1 Offset: -1 Slot: 0
	public override bool Equals(object obj) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2757BCC Offset: 0x2757BCC VA: 0x2757BCC
	|-Tuple<object, object>.Equals
	*/

	// RVA: -1 Offset: -1 Slot: 2
	public override int GetHashCode() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2757CDC Offset: 0x2757CDC VA: 0x2757CDC
	|-Tuple<object, object>.GetHashCode
	*/
}

// Namespace: System.Threading
public class ThreadLocal<T> : IDisposable // TypeDefIndex: 2667
{
	// Fields
	private static long lastId; // 0x0
	[ThreadStaticAttribute] // RVA: 0xC60784 Offset: 0xC60784 VA: 0xC60784
	private static IDictionary<long, T> threadLocalData; // 0xFFFFFFFF
	private static IList<WeakReference> allDataDictionaries; // 0x0
	private bool disposed; // 0x0
	private readonly long id; // 0x0
	private readonly Func<T> valueFactory; // 0x0

	// Properties
	private static IDictionary<long, T> ThreadLocalData { get; }
	public T Value { get; set; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(Func<T> valueFactory) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27556D8 Offset: 0x27556D8 VA: 0x27556D8
	|-ThreadLocal<int>..ctor
	|
	|-RVA: 0x27568F4 Offset: 0x27568F4 VA: 0x27568F4
	|-ThreadLocal<object>..ctor
	*/

	// RVA: -1 Offset: -1
	private static IDictionary<long, T> get_ThreadLocalData() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27557B4 Offset: 0x27557B4 VA: 0x27557B4
	|-ThreadLocal<int>.get_ThreadLocalData
	|
	|-RVA: 0x27569D0 Offset: 0x27569D0 VA: 0x27569D0
	|-ThreadLocal<object>.get_ThreadLocalData
	*/

	// RVA: -1 Offset: -1
	public T get_Value() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2755D40 Offset: 0x2755D40 VA: 0x2755D40
	|-ThreadLocal<int>.get_Value
	|
	|-RVA: 0x2756F5C Offset: 0x2756F5C VA: 0x2756F5C
	|-ThreadLocal<object>.get_Value
	*/

	// RVA: -1 Offset: -1
	public void set_Value(T value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2756000 Offset: 0x2756000 VA: 0x2756000
	|-ThreadLocal<int>.set_Value
	|
	|-RVA: 0x275721C Offset: 0x275721C VA: 0x275721C
	|-ThreadLocal<object>.set_Value
	*/

	// RVA: -1 Offset: -1 Slot: 1
	protected override void Finalize() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2756160 Offset: 0x2756160 VA: 0x2756160
	|-ThreadLocal<int>.Finalize
	|
	|-RVA: 0x275737C Offset: 0x275737C VA: 0x275737C
	|-ThreadLocal<object>.Finalize
	*/

	// RVA: -1 Offset: -1
	private void CheckDisposed() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27561F0 Offset: 0x27561F0 VA: 0x27561F0
	|-ThreadLocal<int>.CheckDisposed
	|
	|-RVA: 0x275740C Offset: 0x275740C VA: 0x275740C
	|-ThreadLocal<object>.CheckDisposed
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public void Dispose() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x275627C Offset: 0x275627C VA: 0x275627C
	|-ThreadLocal<int>.Dispose
	|
	|-RVA: 0x2757498 Offset: 0x2757498 VA: 0x2757498
	|-ThreadLocal<object>.Dispose
	*/

	// RVA: -1 Offset: -1
	private static void .cctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2756824 Offset: 0x2756824 VA: 0x2756824
	|-ThreadLocal<int>..cctor
	|
	|-RVA: 0x2757A40 Offset: 0x2757A40 VA: 0x2757A40
	|-ThreadLocal<object>..cctor
	*/
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2668
{}

// Namespace: UnityEngine.AI
[NativeHeaderAttribute] // RVA: 0xC60948 Offset: 0xC60948 VA: 0xC60948
[MovedFromAttribute] // RVA: 0xC60948 Offset: 0xC60948 VA: 0xC60948
public static class NavMesh // TypeDefIndex: 2669
{
	// Fields
	public static NavMesh.OnNavMeshPreUpdate onPreUpdate; // 0x0

	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xC609E0 Offset: 0xC609E0 VA: 0xC609E0
	// RVA: 0x138A0B0 Offset: 0x138A0B0 VA: 0x138A0B0
	private static void Internal_CallOnNavMeshPreUpdate() { }
}

// Namespace: 
public sealed class NavMesh.OnNavMeshPreUpdate : MulticastDelegate // TypeDefIndex: 2670
{
	// Methods

	// RVA: 0x138A314 Offset: 0x138A314 VA: 0x138A314
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x138A114 Offset: 0x138A114 VA: 0x138A114 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x138A324 Offset: 0x138A324 VA: 0x138A324 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x138A358 Offset: 0x138A358 VA: 0x138A358 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: UnityEngine.AI
[MovedFromAttribute] // RVA: 0xC609A8 Offset: 0xC609A8 VA: 0xC609A8
public sealed class NavMeshAgent : Behaviour // TypeDefIndex: 2671
{
	// Properties
	public Vector3 velocity { set; }

	// Methods

	// RVA: 0x138A364 Offset: 0x138A364 VA: 0x138A364
	public void set_velocity(Vector3 value) { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC609F0 Offset: 0xC609F0 VA: 0xC609F0
	// RVA: 0x138A38C Offset: 0x138A38C VA: 0x138A38C
	private void INTERNAL_set_velocity(ref Vector3 value) { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 2672
{}

// Namespace: UnityEngine.Playables
public static class AnimationPlayableUtilities // TypeDefIndex: 2673
{
	// Methods

	// RVA: 0x1328ED0 Offset: 0x1328ED0 VA: 0x1328ED0
	public static void Play(Animator animator, Playable playable, PlayableGraph graph) { }
}

// Namespace: UnityEngine
public interface IAnimationClipSource // TypeDefIndex: 2674
{}

// Namespace: UnityEngine.Experimental.Animations
public interface IAnimationJobPlayable : IPlayable // TypeDefIndex: 2675
{}

// Namespace: UnityEngine
[AttributeUsageAttribute] // RVA: 0xC61B00 Offset: 0xC61B00 VA: 0xC61B00
[RequiredByNativeCodeAttribute] // RVA: 0xC61B00 Offset: 0xC61B00 VA: 0xC61B00
public sealed class SharedBetweenAnimatorsAttribute : Attribute // TypeDefIndex: 2676
{}

// Namespace: UnityEngine
[RequiredByNativeCodeAttribute] // RVA: 0xC61B50 Offset: 0xC61B50 VA: 0xC61B50
public abstract class StateMachineBehaviour : ScriptableObject // TypeDefIndex: 2677
{
	// Methods

	// RVA: 0x1328FB8 Offset: 0x1328FB8 VA: 0x1328FB8
	protected void .ctor() { }

	// RVA: 0x1328FC0 Offset: 0x1328FC0 VA: 0x1328FC0 Slot: 4
	public virtual void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) { }

	// RVA: 0x1328FC4 Offset: 0x1328FC4 VA: 0x1328FC4 Slot: 5
	public virtual void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) { }

	// RVA: 0x1328FC8 Offset: 0x1328FC8 VA: 0x1328FC8 Slot: 6
	public virtual void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) { }

	// RVA: 0x1328FCC Offset: 0x1328FCC VA: 0x1328FCC Slot: 7
	public virtual void OnStateMove(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) { }

	// RVA: 0x1328FD0 Offset: 0x1328FD0 VA: 0x1328FD0 Slot: 8
	public virtual void OnStateIK(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) { }

	// RVA: 0x1328FD4 Offset: 0x1328FD4 VA: 0x1328FD4 Slot: 9
	public virtual void OnStateMachineEnter(Animator animator, int stateMachinePathHash) { }

	// RVA: 0x1328FD8 Offset: 0x1328FD8 VA: 0x1328FD8 Slot: 10
	public virtual void OnStateMachineExit(Animator animator, int stateMachinePathHash) { }

	// RVA: 0x1328FDC Offset: 0x1328FDC VA: 0x1328FDC Slot: 11
	public virtual void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex, AnimatorControllerPlayable controller) { }

	// RVA: 0x1328FE0 Offset: 0x1328FE0 VA: 0x1328FE0 Slot: 12
	public virtual void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex, AnimatorControllerPlayable controller) { }

	// RVA: 0x1328FE4 Offset: 0x1328FE4 VA: 0x1328FE4 Slot: 13
	public virtual void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex, AnimatorControllerPlayable controller) { }

	// RVA: 0x1328FE8 Offset: 0x1328FE8 VA: 0x1328FE8 Slot: 14
	public virtual void OnStateMove(Animator animator, AnimatorStateInfo stateInfo, int layerIndex, AnimatorControllerPlayable controller) { }

	// RVA: 0x1328FEC Offset: 0x1328FEC VA: 0x1328FEC Slot: 15
	public virtual void OnStateIK(Animator animator, AnimatorStateInfo stateInfo, int layerIndex, AnimatorControllerPlayable controller) { }

	// RVA: 0x1328FF0 Offset: 0x1328FF0 VA: 0x1328FF0 Slot: 16
	public virtual void OnStateMachineEnter(Animator animator, int stateMachinePathHash, AnimatorControllerPlayable controller) { }

	// RVA: 0x1328FF4 Offset: 0x1328FF4 VA: 0x1328FF4 Slot: 17
	public virtual void OnStateMachineExit(Animator animator, int stateMachinePathHash, AnimatorControllerPlayable controller) { }
}

// Namespace: UnityEngine
[NativeTypeAttribute] // RVA: 0xC61B60 Offset: 0xC61B60 VA: 0xC61B60
[NativeHeaderAttribute] // RVA: 0xC61B60 Offset: 0xC61B60 VA: 0xC61B60
public sealed class AnimationClip : Motion // TypeDefIndex: 2678
{
	// Properties
	[NativePropertyAttribute] // RVA: 0xC64334 Offset: 0xC64334 VA: 0xC64334
	public float length { get; }
	[NativePropertyAttribute] // RVA: 0xC64374 Offset: 0xC64374 VA: 0xC64374
	public WrapMode wrapMode { get; }
	public bool legacy { get; }
	public AnimationEvent[] events { get; }

	// Methods

	// RVA: 0x1322278 Offset: 0x1322278 VA: 0x1322278
	public void .ctor() { }

	[FreeFunctionAttribute] // RVA: 0xC62F64 Offset: 0xC62F64 VA: 0xC62F64
	// RVA: 0x1322304 Offset: 0x1322304 VA: 0x1322304
	private static void Internal_CreateAnimationClip(AnimationClip self) { }

	// RVA: 0x1322370 Offset: 0x1322370 VA: 0x1322370
	public float get_length() { }

	[FreeFunctionAttribute] // RVA: 0xC62F9C Offset: 0xC62F9C VA: 0xC62F9C
	// RVA: 0x13223DC Offset: 0x13223DC VA: 0x13223DC
	public void SetCurve(string relativePath, Type type, string propertyName, AnimationCurve curve) { }

	// RVA: 0x1322478 Offset: 0x1322478 VA: 0x1322478
	public WrapMode get_wrapMode() { }

	[NativeMethodAttribute] // RVA: 0xC62FE4 Offset: 0xC62FE4 VA: 0xC62FE4
	// RVA: 0x13224E4 Offset: 0x13224E4 VA: 0x13224E4
	public bool get_legacy() { }

	// RVA: 0x1322550 Offset: 0x1322550 VA: 0x1322550
	public AnimationEvent[] get_events() { }

	[GeneratedByOldBindingsGeneratorAttribute] // RVA: 0xC6301C Offset: 0xC6301C VA: 0xC6301C
	// RVA: 0x1322614 Offset: 0x1322614 VA: 0x1322614
	internal Array GetEventsInternal() { }
}

// Namespace: UnityEngine.Animations
[NativeHeaderAttribute] // RVA: 0xC61BC0 Offset: 0xC61BC0 VA: 0xC61BC0
[RequiredByNativeCodeAttribute] // RVA: 0xC61BC0 Offset: 0xC61BC0 VA: 0xC61BC0
[StaticAccessorAttribute] // RVA: 0xC61BC0 Offset: 0xC61BC0 VA: 0xC61BC0
[NativeHeaderAttribute] // RVA: 0xC61BC0 Offset: 0xC61BC0 VA: 0xC61BC0
public struct AnimationClipPlayable : IPlayable, IEquatable<AnimationClipPlayable> // TypeDefIndex: 2679
{
	// Fields
	private PlayableHandle m_Handle; // 0x0

	// Methods

	// RVA: 0xBC0C68 Offset: 0xBC0C68 VA: 0xBC0C68
	internal void .ctor(PlayableHandle handle) { }

	// RVA: 0x1322F04 Offset: 0x1322F04 VA: 0x1322F04
	public static AnimationClipPlayable Create(PlayableGraph graph, AnimationClip clip) { }

	// RVA: 0x1322F40 Offset: 0x1322F40 VA: 0x1322F40
	private static PlayableHandle CreateHandle(PlayableGraph graph, AnimationClip clip) { }

	// RVA: 0xBC0C70 Offset: 0xBC0C70 VA: 0xBC0C70 Slot: 4
	public PlayableHandle GetHandle() { }

	// RVA: 0x1323044 Offset: 0x1323044 VA: 0x1323044
	public static Playable op_Implicit(AnimationClipPlayable playable) { }

	// RVA: 0xBC0C7C Offset: 0xBC0C7C VA: 0xBC0C7C Slot: 5
	public bool Equals(AnimationClipPlayable other) { }

	// RVA: 0xBC0C84 Offset: 0xBC0C84 VA: 0xBC0C84
	public AnimationClip GetAnimationClip() { }

	// RVA: 0xBC0C8C Offset: 0xBC0C8C VA: 0xBC0C8C
	public bool GetApplyFootIK() { }

	// RVA: 0xBC0C94 Offset: 0xBC0C94 VA: 0xBC0C94
	public bool GetApplyPlayableIK() { }

	// RVA: 0xBC0C9C Offset: 0xBC0C9C VA: 0xBC0C9C
	internal bool GetRemoveStartOffset() { }

	[NativeThrowsAttribute] // RVA: 0xC6302C Offset: 0xC6302C VA: 0xC6302C
	// RVA: 0x1323008 Offset: 0x1323008 VA: 0x1323008
	private static bool CreateHandleInternal(PlayableGraph graph, AnimationClip clip, ref PlayableHandle handle) { }

	[NativeThrowsAttribute] // RVA: 0xC6303C Offset: 0xC6303C VA: 0xC6303C
	// RVA: 0x132310C Offset: 0x132310C VA: 0x132310C
	private static AnimationClip GetAnimationClipInternal(ref PlayableHandle handle) { }

	[NativeThrowsAttribute] // RVA: 0xC6304C Offset: 0xC6304C VA: 0xC6304C
	// RVA: 0x132317C Offset: 0x132317C VA: 0x132317C
	private static bool GetApplyFootIKInternal(ref PlayableHandle handle) { }

	[NativeThrowsAttribute] // RVA: 0xC6305C Offset: 0xC6305C VA: 0xC6305C
	// RVA: 0x13231EC Offset: 0x13231EC VA: 0x13231EC
	private static bool GetApplyPlayableIKInternal(ref PlayableHandle handle) { }

	[NativeThrowsAttribute] // RVA: 0xC6306C Offset: 0xC6306C VA: 0xC6306C
	// RVA: 0x132325C Offset: 0x132325C VA: 0x132325C
	private static bool GetRemoveStartOffsetInternal(ref PlayableHandle handle) { }

	// RVA: 0x13232C8 Offset: 0x13232C8 VA: 0x13232C8
	private static bool CreateHandleInternal_Injected(ref PlayableGraph graph, AnimationClip clip, ref PlayableHandle handle) { }
}

// Namespace: UnityEngine.Experimental.Animations
[RequiredByNativeCodeAttribute] // RVA: 0xC61C58 Offset: 0xC61C58 VA: 0xC61C58
[NativeHeaderAttribute] // RVA: 0xC61C58 Offset: 0xC61C58 VA: 0xC61C58
[NativeHeaderAttribute] // RVA: 0xC61C58 Offset: 0xC61C58 VA: 0xC61C58
public struct AnimationHumanStream // TypeDefIndex: 2680
{
	// Fields
	private IntPtr stream; // 0x0
}

// Namespace: UnityEngine.Animations
[NativeHeaderAttribute] // RVA: 0xC61CC8 Offset: 0xC61CC8 VA: 0xC61CC8
[StaticAccessorAttribute] // RVA: 0xC61CC8 Offset: 0xC61CC8 VA: 0xC61CC8
[NativeHeaderAttribute] // RVA: 0xC61CC8 Offset: 0xC61CC8 VA: 0xC61CC8
[RequiredByNativeCodeAttribute] // RVA: 0xC61CC8 Offset: 0xC61CC8 VA: 0xC61CC8
[NativeHeaderAttribute] // RVA: 0xC61CC8 Offset: 0xC61CC8 VA: 0xC61CC8
public struct AnimationLayerMixerPlayable : IPlayable, IEquatable<AnimationLayerMixerPlayable> // TypeDefIndex: 2681
{
	// Fields
	private PlayableHandle m_Handle; // 0x0
	private static readonly AnimationLayerMixerPlayable m_NullPlayable; // 0x0

	// Methods

	// RVA: 0xBC0CA4 Offset: 0xBC0CA4 VA: 0xBC0CA4
	internal void .ctor(PlayableHandle handle) { }
