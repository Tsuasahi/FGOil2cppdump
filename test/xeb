
	// RVA: 0x1EBD238 Offset: 0x1EBD238 VA: 0x1EBD238 Slot: 6
	private void System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity(Identity value) { }

	// RVA: 0x1EB8628 Offset: 0x1EB8628 VA: 0x1EB8628 Slot: 19
	internal virtual void InitMethodProperty(string key, object value) { }

	// RVA: 0x1EB8E1C Offset: 0x1EB8E1C VA: 0x1EB8E1C Slot: 20
	public virtual void GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x1EBD240 Offset: 0x1EBD240 VA: 0x1EBD240 Slot: 10
	public int get_ArgCount() { }

	// RVA: 0x1EBD26C Offset: 0x1EBD26C VA: 0x1EBD26C Slot: 11
	public object[] get_Args() { }

	// RVA: 0x1EBD274 Offset: 0x1EBD274 VA: 0x1EBD274 Slot: 12
	public LogicalCallContext get_LogicalCallContext() { }

	// RVA: 0x1EBD2DC Offset: 0x1EBD2DC VA: 0x1EBD2DC Slot: 13
	public MethodBase get_MethodBase() { }

	// RVA: 0x1EBD30C Offset: 0x1EBD30C VA: 0x1EBD30C Slot: 14
	public string get_MethodName() { }

	// RVA: 0x1EBD354 Offset: 0x1EBD354 VA: 0x1EBD354 Slot: 15
	public object get_MethodSignature() { }

	// RVA: 0x1EB92F4 Offset: 0x1EB92F4 VA: 0x1EB92F4 Slot: 21
	public virtual IDictionary get_Properties() { }

	// RVA: 0x1EBD4C4 Offset: 0x1EBD4C4 VA: 0x1EBD4C4 Slot: 22
	internal virtual void InitDictionary() { }

	// RVA: 0x1EBD5E0 Offset: 0x1EBD5E0 VA: 0x1EBD5E0 Slot: 16
	public string get_TypeName() { }

	// RVA: 0x1EBD218 Offset: 0x1EBD218 VA: 0x1EBD218 Slot: 17
	public string get_Uri() { }

	// RVA: 0x1EBD228 Offset: 0x1EBD228 VA: 0x1EBD228 Slot: 23
	public void set_Uri(string value) { }

	// RVA: 0x1EBD648 Offset: 0x1EBD648 VA: 0x1EBD648 Slot: 18
	public object GetArg(int argNum) { }

	// RVA: 0x1EBD69C Offset: 0x1EBD69C VA: 0x1EBD69C Slot: 24
	public virtual void Init() { }

	// RVA: 0x1EBC6D8 Offset: 0x1EBC6D8 VA: 0x1EBC6D8
	public void ResolveMethod() { }

	// RVA: 0x1EBD76C Offset: 0x1EBD76C VA: 0x1EBD76C
	private Type CastTo(string clientType, Type serverType) { }

	// RVA: 0x1EBE038 Offset: 0x1EBE038 VA: 0x1EBE038
	private static string GetTypeNameFromAssemblyQualifiedName(string aqname) { }

	// RVA: 0x1EBDFE4 Offset: 0x1EBDFE4 VA: 0x1EBDFE4
	private Type[] get_GenericArguments() { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal class MethodCallDictionary : MethodDictionary // TypeDefIndex: 582
{
	// Fields
	public static string[] InternalKeys; // 0x0

	// Methods

	// RVA: 0x1EBD554 Offset: 0x1EBD554 VA: 0x1EBD554
	public void .ctor(IMethodMessage message) { }

	// RVA: 0x1EBE118 Offset: 0x1EBE118 VA: 0x1EBE118
	private static void .cctor() { }
}

// Namespace: System.Runtime.Remoting.Messaging
[DefaultMemberAttribute] // RVA: 0xBC8A6C Offset: 0xBC8A6C VA: 0xBC8A6C
[Serializable]
internal class MethodDictionary : IEnumerable, ICollection, IDictionary // TypeDefIndex: 583
{
	// Fields
	private IDictionary _internalProperties; // 0x10
	protected IMethodMessage _message; // 0x18
	private string[] _methodKeys; // 0x20
	private bool _ownProperties; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xBCB640 Offset: 0xBCB640 VA: 0xBCB640
	private static Dictionary<string, int> <>f__switch$map21; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xBCB650 Offset: 0xBCB650 VA: 0xBCB650
	private static Dictionary<string, int> <>f__switch$map22; // 0x8

	// Properties
	internal bool HasInternalProperties { get; }
	internal IDictionary InternalProperties { get; }
	public string[] MethodKeys { set; }
	public bool IsFixedSize { get; }
	public bool IsReadOnly { get; }
	public object Item { get; set; }
	public ICollection Keys { get; }
	public ICollection Values { get; }
	public int Count { get; }
	public bool IsSynchronized { get; }
	public object SyncRoot { get; }

	// Methods

	// RVA: 0x1EB9338 Offset: 0x1EB9338 VA: 0x1EB9338
	public void .ctor(IMethodMessage message) { }

	// RVA: 0x1EBE37C Offset: 0x1EBE37C VA: 0x1EBE37C Slot: 4
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x1EBE4FC Offset: 0x1EBE4FC VA: 0x1EBE4FC
	internal bool get_HasInternalProperties() { }

	// RVA: 0x1EBE5FC Offset: 0x1EBE5FC VA: 0x1EBE5FC
	internal IDictionary get_InternalProperties() { }

	// RVA: 0x1EB9364 Offset: 0x1EB9364 VA: 0x1EB9364
	public void set_MethodKeys(string[] value) { }

	// RVA: 0x1EBE67C Offset: 0x1EBE67C VA: 0x1EBE67C Slot: 20
	protected virtual IDictionary AllocInternalProperties() { }

	// RVA: 0x1EB8030 Offset: 0x1EB8030 VA: 0x1EB8030
	public IDictionary GetInternalProperties() { }

	// RVA: 0x1EBE6E4 Offset: 0x1EBE6E4 VA: 0x1EBE6E4
	private bool IsOverridenKey(string key) { }

	// RVA: 0x1EBE7C8 Offset: 0x1EBE7C8 VA: 0x1EBE7C8 Slot: 9
	public bool get_IsFixedSize() { }

	// RVA: 0x1EBE7D0 Offset: 0x1EBE7D0 VA: 0x1EBE7D0 Slot: 10
	public bool get_IsReadOnly() { }

	// RVA: 0x1EBE7D8 Offset: 0x1EBE7D8 VA: 0x1EBE7D8 Slot: 11
	public object get_Item(object key) { }

	// RVA: 0x1EBE9C0 Offset: 0x1EBE9C0 VA: 0x1EBE9C0 Slot: 12
	public void set_Item(object key, object value) { }

	// RVA: 0x1EBA008 Offset: 0x1EBA008 VA: 0x1EBA008 Slot: 21
	protected virtual object GetMethodProperty(string key) { }

	// RVA: 0x1EBAC48 Offset: 0x1EBAC48 VA: 0x1EBAC48 Slot: 22
	protected virtual void SetMethodProperty(string key, object value) { }

	// RVA: 0x1EBEBDC Offset: 0x1EBEBDC VA: 0x1EBEBDC Slot: 13
	public ICollection get_Keys() { }

	// RVA: 0x1EBF028 Offset: 0x1EBF028 VA: 0x1EBF028 Slot: 14
	public ICollection get_Values() { }

	// RVA: 0x1EBE9C4 Offset: 0x1EBE9C4 VA: 0x1EBE9C4 Slot: 15
	public void Add(object key, object value) { }

	// RVA: 0x1EBF45C Offset: 0x1EBF45C VA: 0x1EBF45C Slot: 16
	public void Clear() { }

	// RVA: 0x1EBF518 Offset: 0x1EBF518 VA: 0x1EBF518 Slot: 17
	public bool Contains(object key) { }

	// RVA: 0x1EBF6F0 Offset: 0x1EBF6F0 VA: 0x1EBF6F0 Slot: 19
	public void Remove(object key) { }

	// RVA: 0x1EBF8F8 Offset: 0x1EBF8F8 VA: 0x1EBF8F8 Slot: 5
	public int get_Count() { }

	// RVA: 0x1EBF9DC Offset: 0x1EBF9DC VA: 0x1EBF9DC Slot: 6
	public bool get_IsSynchronized() { }

	// RVA: 0x1EBF9E4 Offset: 0x1EBF9E4 VA: 0x1EBF9E4 Slot: 7
	public object get_SyncRoot() { }

	// RVA: 0x1EBF9E8 Offset: 0x1EBF9E8 VA: 0x1EBF9E8 Slot: 8
	public void CopyTo(Array array, int index) { }

	// RVA: 0x1EBFABC Offset: 0x1EBFABC VA: 0x1EBFABC Slot: 18
	public IDictionaryEnumerator GetEnumerator() { }
}

// Namespace: 
private class MethodDictionary.DictionaryEnumerator : IEnumerator, IDictionaryEnumerator // TypeDefIndex: 584
{
	// Fields
	private MethodDictionary _methodDictionary; // 0x10
	private IDictionaryEnumerator _hashtableEnum; // 0x18
	private int _posMethod; // 0x20

	// Properties
	public object Current { get; }
	public DictionaryEntry Entry { get; }
	public object Key { get; }
	public object Value { get; }

	// Methods

	// RVA: 0x1EBE3DC Offset: 0x1EBE3DC VA: 0x1EBE3DC
	public void .ctor(MethodDictionary methodDictionary) { }

	// RVA: 0x1EBFB1C Offset: 0x1EBFB1C VA: 0x1EBFB1C Slot: 4
	public object get_Current() { }

	// RVA: 0x1EBFD28 Offset: 0x1EBFD28 VA: 0x1EBFD28 Slot: 5
	public bool MoveNext() { }

	// RVA: 0x1EBFF68 Offset: 0x1EBFF68 VA: 0x1EBFF68 Slot: 6
	public void Reset() { }

	// RVA: 0x1EBFB48 Offset: 0x1EBFB48 VA: 0x1EBFB48 Slot: 7
	public DictionaryEntry get_Entry() { }

	// RVA: 0x1EC0028 Offset: 0x1EC0028 VA: 0x1EC0028 Slot: 8
	public object get_Key() { }

	// RVA: 0x1EC0054 Offset: 0x1EC0054 VA: 0x1EC0054 Slot: 9
	public object get_Value() { }
}

// Namespace: System.Runtime.Remoting.Messaging
[ComVisibleAttribute] // RVA: 0xBC8AA4 Offset: 0xBC8AA4 VA: 0xBC8AA4
[CLSCompliantAttribute] // RVA: 0xBC8AA4 Offset: 0xBC8AA4 VA: 0xBC8AA4
[Serializable]
public class MethodResponse : ISerializable, IInternalMessage, IMessage, IMethodMessage, IMethodReturnMessage, ISerializationRootObject // TypeDefIndex: 585
{
	// Fields
	private string _methodName; // 0x10
	private string _uri; // 0x18
	private string _typeName; // 0x20
	private MethodBase _methodBase; // 0x28
	private object _returnValue; // 0x30
	private Exception _exception; // 0x38
	private Type[] _methodSignature; // 0x40
	private ArgInfo _inArgInfo; // 0x48
	private object[] _args; // 0x50
	private object[] _outArgs; // 0x58
	private IMethodCallMessage _callMsg; // 0x60
	private LogicalCallContext _callContext; // 0x68
	private Identity _targetIdentity; // 0x70
	protected IDictionary ExternalProperties; // 0x78
	protected IDictionary InternalProperties; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xBCB660 Offset: 0xBCB660 VA: 0xBCB660
	private static Dictionary<string, int> <>f__switch$map25; // 0x0

	// Properties
	private string System.Runtime.Remoting.Messaging.IInternalMessage.Uri { get; set; }
	private Identity System.Runtime.Remoting.Messaging.IInternalMessage.TargetIdentity { get; set; }
	public int ArgCount { get; }
	public object[] Args { get; }
	public Exception Exception { get; }
	public LogicalCallContext LogicalCallContext { get; }
	public MethodBase MethodBase { get; }
	public string MethodName { get; }
	public object MethodSignature { get; }
	public int OutArgCount { get; }
	public object[] OutArgs { get; }
	public virtual IDictionary Properties { get; }
	public object ReturnValue { get; }
	public string TypeName { get; }
	public string Uri { get; set; }

	// Methods

	// RVA: 0x1EBB200 Offset: 0x1EBB200 VA: 0x1EBB200
	internal void .ctor(Exception e, IMethodCallMessage msg) { }

	// RVA: 0x1EBB10C Offset: 0x1EBB10C VA: 0x1EBB10C
	internal void .ctor(object returnValue, object[] outArgs, LogicalCallContext callCtx, IMethodCallMessage msg) { }

	// RVA: 0x1EC0080 Offset: 0x1EC0080 VA: 0x1EC0080
	internal void .ctor(IMethodCallMessage msg, CADMethodReturnMessage retmsg) { }

	// RVA: 0x1EBB324 Offset: 0x1EBB324 VA: 0x1EBB324
	internal void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x1EC0A00 Offset: 0x1EC0A00 VA: 0x1EC0A00 Slot: 7
	private string System.Runtime.Remoting.Messaging.IInternalMessage.get_Uri() { }

	// RVA: 0x1EC0ACC Offset: 0x1EC0ACC VA: 0x1EC0ACC Slot: 8
	private void System.Runtime.Remoting.Messaging.IInternalMessage.set_Uri(string value) { }

	// RVA: 0x1EC0ADC Offset: 0x1EC0ADC VA: 0x1EC0ADC Slot: 5
	private Identity System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity() { }

	// RVA: 0x1EC0AE4 Offset: 0x1EC0AE4 VA: 0x1EC0AE4 Slot: 6
	private void System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity(Identity value) { }

	// RVA: 0x1EC0384 Offset: 0x1EC0384 VA: 0x1EC0384
	internal void InitMethodProperty(string key, object value) { }

	// RVA: 0x1EC0AEC Offset: 0x1EC0AEC VA: 0x1EC0AEC Slot: 10
	public int get_ArgCount() { }

	// RVA: 0x1EC0B04 Offset: 0x1EC0B04 VA: 0x1EC0B04 Slot: 11
	public object[] get_Args() { }

	// RVA: 0x1EC0B0C Offset: 0x1EC0B0C VA: 0x1EC0B0C Slot: 19
	public Exception get_Exception() { }

	// RVA: 0x1EC0B14 Offset: 0x1EC0B14 VA: 0x1EC0B14 Slot: 12
	public LogicalCallContext get_LogicalCallContext() { }

	// RVA: 0x1EC0B7C Offset: 0x1EC0B7C VA: 0x1EC0B7C Slot: 13
	public MethodBase get_MethodBase() { }

	// RVA: 0x1EC0C84 Offset: 0x1EC0C84 VA: 0x1EC0C84 Slot: 14
	public string get_MethodName() { }

	// RVA: 0x1EC0E14 Offset: 0x1EC0E14 VA: 0x1EC0E14 Slot: 15
	public object get_MethodSignature() { }

	// RVA: 0x1EC0F58 Offset: 0x1EC0F58 VA: 0x1EC0F58 Slot: 20
	public int get_OutArgCount() { }

	// RVA: 0x1EC1018 Offset: 0x1EC1018 VA: 0x1EC1018 Slot: 21
	public object[] get_OutArgs() { }

	// RVA: 0x1EBB3FC Offset: 0x1EBB3FC VA: 0x1EBB3FC Slot: 23
	public virtual IDictionary get_Properties() { }

	// RVA: 0x1EC1208 Offset: 0x1EC1208 VA: 0x1EC1208 Slot: 22
	public object get_ReturnValue() { }

	// RVA: 0x1EC0D4C Offset: 0x1EC0D4C VA: 0x1EC0D4C Slot: 16
	public string get_TypeName() { }

	// RVA: 0x1EC0A04 Offset: 0x1EC0A04 VA: 0x1EC0A04 Slot: 17
	public string get_Uri() { }

	// RVA: 0x1EC0AD4 Offset: 0x1EC0AD4 VA: 0x1EC0AD4 Slot: 24
	public void set_Uri(string value) { }

	// RVA: 0x1EC1210 Offset: 0x1EC1210 VA: 0x1EC1210 Slot: 18
	public object GetArg(int argNum) { }

	// RVA: 0x1EC1260 Offset: 0x1EC1260 VA: 0x1EC1260 Slot: 25
	public virtual void GetObjectData(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal class MethodReturnDictionary : MethodDictionary // TypeDefIndex: 586
{
	// Fields
	public static string[] InternalReturnKeys; // 0x0
	public static string[] InternalExceptionKeys; // 0x8

	// Methods

	// RVA: 0x1EC10DC Offset: 0x1EC10DC VA: 0x1EC10DC
	public void .ctor(IMethodReturnMessage message) { }

	// RVA: 0x1EC171C Offset: 0x1EC171C VA: 0x1EC171C
	private static void .cctor() { }
}

// Namespace: System.Runtime.Remoting.Messaging
[Serializable]
internal class MonoMethodMessage : IInternalMessage, IMessage, IMethodCallMessage, IMethodMessage, IMethodReturnMessage // TypeDefIndex: 587
{
	// Fields
	private MonoMethod method; // 0x10
	private object[] args; // 0x18
	private byte[] arg_types; // 0x20
	public LogicalCallContext ctx; // 0x28
	public object rval; // 0x30
	public Exception exc; // 0x38
	private AsyncResult asyncResult; // 0x40
	private CallType call_type; // 0x48
	private string uri; // 0x50
	private MethodCallDictionary properties; // 0x58
	private Type[] methodSignature; // 0x60
	private Identity identity; // 0x68

	// Properties
	private Identity System.Runtime.Remoting.Messaging.IInternalMessage.TargetIdentity { get; set; }
	public IDictionary Properties { get; }
	public int ArgCount { get; }
	public object[] Args { get; }
	public LogicalCallContext LogicalCallContext { get; }
	public MethodBase MethodBase { get; }
	public string MethodName { get; }
	public object MethodSignature { get; }
	public string TypeName { get; }
	public string Uri { get; set; }
	public Exception Exception { get; }
	public int OutArgCount { get; }
	public object[] OutArgs { get; }
	public object ReturnValue { get; }
	public AsyncResult AsyncResult { get; }
	internal CallType CallType { get; }

	// Methods

	// RVA: 0x1EC1A48 Offset: 0x1EC1A48 VA: 0x1EC1A48 Slot: 4
	private Identity System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity() { }

	// RVA: 0x1EC1A50 Offset: 0x1EC1A50 VA: 0x1EC1A50 Slot: 5
	private void System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity(Identity value) { }

	// RVA: 0x1EC1A58 Offset: 0x1EC1A58 VA: 0x1EC1A58 Slot: 8
	public IDictionary get_Properties() { }

	// RVA: 0x1EC1AC4 Offset: 0x1EC1AC4 VA: 0x1EC1AC4 Slot: 9
	public int get_ArgCount() { }

	// RVA: 0x1EC1B90 Offset: 0x1EC1B90 VA: 0x1EC1B90 Slot: 10
	public object[] get_Args() { }

	// RVA: 0x1EC1B98 Offset: 0x1EC1B98 VA: 0x1EC1B98 Slot: 11
	public LogicalCallContext get_LogicalCallContext() { }

	// RVA: 0x1EC1BA0 Offset: 0x1EC1BA0 VA: 0x1EC1BA0 Slot: 12
	public MethodBase get_MethodBase() { }

	// RVA: 0x1EC1BA8 Offset: 0x1EC1BA8 VA: 0x1EC1BA8 Slot: 13
	public string get_MethodName() { }

	// RVA: 0x1EC1C30 Offset: 0x1EC1C30 VA: 0x1EC1C30 Slot: 14
	public object get_MethodSignature() { }

	// RVA: 0x1EC1DA0 Offset: 0x1EC1DA0 VA: 0x1EC1DA0 Slot: 15
	public string get_TypeName() { }

	// RVA: 0x1EC1E48 Offset: 0x1EC1E48 VA: 0x1EC1E48 Slot: 16
	public string get_Uri() { }

	// RVA: 0x1EC1E50 Offset: 0x1EC1E50 VA: 0x1EC1E50 Slot: 7
	public void set_Uri(string value) { }

	// RVA: 0x1EC1E58 Offset: 0x1EC1E58 VA: 0x1EC1E58 Slot: 17
	public object GetArg(int arg_num) { }

	// RVA: 0x1EC1EA8 Offset: 0x1EC1EA8 VA: 0x1EC1EA8 Slot: 18
	public Exception get_Exception() { }

	// RVA: 0x1EC1EB0 Offset: 0x1EC1EB0 VA: 0x1EC1EB0 Slot: 19
	public int get_OutArgCount() { }

	// RVA: 0x1EC1F3C Offset: 0x1EC1F3C VA: 0x1EC1F3C Slot: 20
	public object[] get_OutArgs() { }

	// RVA: 0x1EC20C0 Offset: 0x1EC20C0 VA: 0x1EC20C0 Slot: 21
	public object get_ReturnValue() { }

	// RVA: 0x1EC20C8 Offset: 0x1EC20C8 VA: 0x1EC20C8
	public AsyncResult get_AsyncResult() { }

	// RVA: 0x1EC1B08 Offset: 0x1EC1B08 VA: 0x1EC1B08
	internal CallType get_CallType() { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal enum CallType // TypeDefIndex: 588
{
	// Fields
	public int value__; // 0x0
	public const CallType Sync = 0;
	public const CallType BeginInvoke = 1;
	public const CallType EndInvoke = 2;
	public const CallType OneWay = 3;
}

// Namespace: System.Runtime.Remoting.Messaging
[ComVisibleAttribute] // RVA: 0xBC8AE4 Offset: 0xBC8AE4 VA: 0xBC8AE4
[AttributeUsageAttribute] // RVA: 0xBC8AE4 Offset: 0xBC8AE4 VA: 0xBC8AE4
public class OneWayAttribute : Attribute // TypeDefIndex: 589
{}

// Namespace: System.Runtime.Remoting.Messaging
internal class RemotingSurrogate : ISerializationSurrogate // TypeDefIndex: 590
{
	// Methods

	// RVA: 0x1EC23AC Offset: 0x1EC23AC VA: 0x1EC23AC
	public void .ctor() { }

	// RVA: 0x1EC23B4 Offset: 0x1EC23B4 VA: 0x1EC23B4 Slot: 6
	public virtual void GetObjectData(object obj, SerializationInfo si, StreamingContext sc) { }

	// RVA: 0x1EC281C Offset: 0x1EC281C VA: 0x1EC281C Slot: 7
	public virtual object SetObjectData(object obj, SerializationInfo si, StreamingContext sc, ISurrogateSelector selector) { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal class ObjRefSurrogate : ISerializationSurrogate // TypeDefIndex: 591
{
	// Methods

	// RVA: 0x1EC216C Offset: 0x1EC216C VA: 0x1EC216C
	public void .ctor() { }

	// RVA: 0x1EC2174 Offset: 0x1EC2174 VA: 0x1EC2174 Slot: 6
	public virtual void GetObjectData(object obj, SerializationInfo si, StreamingContext sc) { }

	// RVA: 0x1EC2338 Offset: 0x1EC2338 VA: 0x1EC2338 Slot: 7
	public virtual object SetObjectData(object obj, SerializationInfo si, StreamingContext sc, ISurrogateSelector selector) { }
}

// Namespace: System.Runtime.Remoting.Messaging
[ComVisibleAttribute] // RVA: 0xBC8B24 Offset: 0xBC8B24 VA: 0xBC8B24
public class RemotingSurrogateSelector : ISurrogateSelector // TypeDefIndex: 592
{
	// Fields
	private static Type s_cachedTypeObjRef; // 0x0
	private static ObjRefSurrogate _objRefSurrogate; // 0x8
	private static RemotingSurrogate _objRemotingSurrogate; // 0x10
	private ISurrogateSelector _next; // 0x10

	// Methods

	// RVA: 0x1EC2884 Offset: 0x1EC2884 VA: 0x1EC2884
	public void .ctor() { }

	// RVA: 0x1EC288C Offset: 0x1EC288C VA: 0x1EC288C
	private static void .cctor() { }

	// RVA: 0x1EC2964 Offset: 0x1EC2964 VA: 0x1EC2964 Slot: 5
	public virtual ISerializationSurrogate GetSurrogate(Type type, StreamingContext context, out ISurrogateSelector ssout) { }
}

// Namespace: System.Runtime.Remoting.Messaging
[ComVisibleAttribute] // RVA: 0xBC8B38 Offset: 0xBC8B38 VA: 0xBC8B38
public class ReturnMessage : IInternalMessage, IMessage, IMethodMessage, IMethodReturnMessage // TypeDefIndex: 593
{
	// Fields
	private object[] _outArgs; // 0x10
	private object[] _args; // 0x18
	private int _outArgsCount; // 0x20
	private LogicalCallContext _callCtx; // 0x28
	private object _returnValue; // 0x30
	private string _uri; // 0x38
	private Exception _exception; // 0x40
	private MethodBase _methodBase; // 0x48
	private string _methodName; // 0x50
	private Type[] _methodSignature; // 0x58
	private string _typeName; // 0x60
	private MethodReturnDictionary _properties; // 0x68
	private Identity _targetIdentity; // 0x70
	private ArgInfo _inArgInfo; // 0x78

	// Properties
	private string System.Runtime.Remoting.Messaging.IInternalMessage.Uri { get; set; }
	private Identity System.Runtime.Remoting.Messaging.IInternalMessage.TargetIdentity { get; set; }
	public int ArgCount { get; }
	public object[] Args { get; }
	public LogicalCallContext LogicalCallContext { get; }
	public MethodBase MethodBase { get; }
	public string MethodName { get; }
	public object MethodSignature { get; }
	public virtual IDictionary Properties { get; }
	public string TypeName { get; }
	public string Uri { get; set; }
	public Exception Exception { get; }
	public int OutArgCount { get; }
	public object[] OutArgs { get; }
	public virtual object ReturnValue { get; }

	// Methods

	// RVA: 0x1EC2B38 Offset: 0x1EC2B38 VA: 0x1EC2B38
	public void .ctor(object ret, object[] outArgs, int outArgsCount, LogicalCallContext callCtx, IMethodCallMessage mcm) { }

	// RVA: 0x1EC2CB8 Offset: 0x1EC2CB8 VA: 0x1EC2CB8
	public void .ctor(Exception e, IMethodCallMessage mcm) { }

	// RVA: 0x1EC2E0C Offset: 0x1EC2E0C VA: 0x1EC2E0C Slot: 6
	private string System.Runtime.Remoting.Messaging.IInternalMessage.get_Uri() { }

	// RVA: 0x1EC2E1C Offset: 0x1EC2E1C VA: 0x1EC2E1C Slot: 7
	private void System.Runtime.Remoting.Messaging.IInternalMessage.set_Uri(string value) { }

	// RVA: 0x1EC2E2C Offset: 0x1EC2E2C VA: 0x1EC2E2C Slot: 4
	private Identity System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity() { }

	// RVA: 0x1EC2E34 Offset: 0x1EC2E34 VA: 0x1EC2E34 Slot: 5
	private void System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity(Identity value) { }

	// RVA: 0x1EC2E3C Offset: 0x1EC2E3C VA: 0x1EC2E3C Slot: 9
	public int get_ArgCount() { }

	// RVA: 0x1EC2E68 Offset: 0x1EC2E68 VA: 0x1EC2E68 Slot: 10
	public object[] get_Args() { }

	// RVA: 0x1EC2E70 Offset: 0x1EC2E70 VA: 0x1EC2E70 Slot: 11
	public LogicalCallContext get_LogicalCallContext() { }

	// RVA: 0x1EC2ED8 Offset: 0x1EC2ED8 VA: 0x1EC2ED8 Slot: 12
	public MethodBase get_MethodBase() { }

	// RVA: 0x1EC2EE0 Offset: 0x1EC2EE0 VA: 0x1EC2EE0 Slot: 13
	public string get_MethodName() { }

	// RVA: 0x1EC2F1C Offset: 0x1EC2F1C VA: 0x1EC2F1C Slot: 14
	public object get_MethodSignature() { }

	// RVA: 0x1EC3084 Offset: 0x1EC3084 VA: 0x1EC3084 Slot: 22
	public virtual IDictionary get_Properties() { }

	// RVA: 0x1EC30F0 Offset: 0x1EC30F0 VA: 0x1EC30F0 Slot: 15
	public string get_TypeName() { }

	// RVA: 0x1EC2E14 Offset: 0x1EC2E14 VA: 0x1EC2E14 Slot: 16
	public string get_Uri() { }

	// RVA: 0x1EC2E24 Offset: 0x1EC2E24 VA: 0x1EC2E24 Slot: 23
	public void set_Uri(string value) { }

	// RVA: 0x1EC3150 Offset: 0x1EC3150 VA: 0x1EC3150 Slot: 17
	public object GetArg(int argNum) { }

	// RVA: 0x1EC31A4 Offset: 0x1EC31A4 VA: 0x1EC31A4 Slot: 18
	public Exception get_Exception() { }

	// RVA: 0x1EC31AC Offset: 0x1EC31AC VA: 0x1EC31AC Slot: 19
	public int get_OutArgCount() { }

	// RVA: 0x1EC3260 Offset: 0x1EC3260 VA: 0x1EC3260 Slot: 20
	public object[] get_OutArgs() { }

	// RVA: 0x1EC3318 Offset: 0x1EC3318 VA: 0x1EC3318 Slot: 24
	public virtual object get_ReturnValue() { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal class ServerContextTerminatorSink : IMessageSink // TypeDefIndex: 594
{
	// Methods

	// RVA: 0x1EC3320 Offset: 0x1EC3320 VA: 0x1EC3320
	public void .ctor() { }

	// RVA: 0x1EC3328 Offset: 0x1EC3328 VA: 0x1EC3328 Slot: 4
	public IMessage SyncProcessMessage(IMessage msg) { }

	// RVA: 0x1EC34B4 Offset: 0x1EC34B4 VA: 0x1EC34B4 Slot: 5
	public IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink) { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal class ServerObjectTerminatorSink : IMessageSink // TypeDefIndex: 595
{
	// Fields
	private IMessageSink _nextSink; // 0x10

	// Methods

	// RVA: 0x1EC3750 Offset: 0x1EC3750 VA: 0x1EC3750
	public void .ctor(IMessageSink nextSink) { }

	// RVA: 0x1EC377C Offset: 0x1EC377C VA: 0x1EC377C Slot: 4
	public IMessage SyncProcessMessage(IMessage msg) { }

	// RVA: 0x1EC3958 Offset: 0x1EC3958 VA: 0x1EC3958 Slot: 5
	public IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink) { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal class ServerObjectReplySink : IMessageSink // TypeDefIndex: 596
{
	// Fields
	private IMessageSink _replySink; // 0x10
	private ServerIdentity _identity; // 0x18

	// Methods

	// RVA: 0x1EC35C0 Offset: 0x1EC35C0 VA: 0x1EC35C0
	public void .ctor(ServerIdentity identity, IMessageSink replySink) { }

	// RVA: 0x1EC35F8 Offset: 0x1EC35F8 VA: 0x1EC35F8 Slot: 4
	public IMessage SyncProcessMessage(IMessage msg) { }

	// RVA: 0x1EC36E8 Offset: 0x1EC36E8 VA: 0x1EC36E8 Slot: 5
	public IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink) { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal class StackBuilderSink : IMessageSink // TypeDefIndex: 597
{
	// Fields
	private MarshalByRefObject _target; // 0x10
	private RealProxy _rp; // 0x18

	// Methods

	// RVA: 0x1EC3B90 Offset: 0x1EC3B90 VA: 0x1EC3B90
	public void .ctor(MarshalByRefObject obj, bool forceInternalExecute) { }

	// RVA: 0x1EC3C44 Offset: 0x1EC3C44 VA: 0x1EC3C44 Slot: 4
	public IMessage SyncProcessMessage(IMessage msg) { }

	// RVA: 0x1EC4F64 Offset: 0x1EC4F64 VA: 0x1EC4F64 Slot: 5
	public IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink) { }

	// RVA: 0x1EC50A8 Offset: 0x1EC50A8 VA: 0x1EC50A8
	private void ExecuteAsyncMessage(object ob) { }

	// RVA: 0x1EC3D64 Offset: 0x1EC3D64 VA: 0x1EC3D64
	private void CheckParameters(IMessage msg) { }
}

// Namespace: System.Runtime.Remoting.Metadata
[ComVisibleAttribute] // RVA: 0xBC8B4C Offset: 0xBC8B4C VA: 0xBC8B4C
public class SoapAttribute : Attribute // TypeDefIndex: 598
{
	// Fields
	private bool _useAttribute; // 0x10
	protected string ProtXmlNamespace; // 0x18
	protected object ReflectInfo; // 0x20

	// Properties
	public virtual bool UseAttribute { get; }
	public virtual string XmlNamespace { get; }

	// Methods

	// RVA: 0x1EC5364 Offset: 0x1EC5364 VA: 0x1EC5364
	public void .ctor() { }

	// RVA: 0x1EC536C Offset: 0x1EC536C VA: 0x1EC536C Slot: 7
	public virtual bool get_UseAttribute() { }

	// RVA: 0x1EC5374 Offset: 0x1EC5374 VA: 0x1EC5374 Slot: 8
	public virtual string get_XmlNamespace() { }

	// RVA: 0x1EC537C Offset: 0x1EC537C VA: 0x1EC537C Slot: 9
	internal virtual void SetReflectionObject(object reflectionObject) { }
}

// Namespace: System.Runtime.Remoting.Metadata
[AttributeUsageAttribute] // RVA: 0xBC8B60 Offset: 0xBC8B60 VA: 0xBC8B60
[ComVisibleAttribute] // RVA: 0xBC8B60 Offset: 0xBC8B60 VA: 0xBC8B60
public sealed class SoapFieldAttribute : SoapAttribute // TypeDefIndex: 599
{
	// Fields
	private string _elementName; // 0x28
	private bool _isElement; // 0x30

	// Properties
	public string XmlElementName { get; }

	// Methods

	// RVA: 0x1EC5384 Offset: 0x1EC5384 VA: 0x1EC5384
	public void .ctor() { }

	// RVA: 0x1EC538C Offset: 0x1EC538C VA: 0x1EC538C
	public string get_XmlElementName() { }

	// RVA: 0x1EC5394 Offset: 0x1EC5394 VA: 0x1EC5394
	public bool IsInteropXmlElement() { }

	// RVA: 0x1EC539C Offset: 0x1EC539C VA: 0x1EC539C Slot: 9
	internal override void SetReflectionObject(object reflectionObject) { }
}

// Namespace: System.Runtime.Remoting.Metadata
[AttributeUsageAttribute] // RVA: 0xBC8BA0 Offset: 0xBC8BA0 VA: 0xBC8BA0
[ComVisibleAttribute] // RVA: 0xBC8BA0 Offset: 0xBC8BA0 VA: 0xBC8BA0
public sealed class SoapMethodAttribute : SoapAttribute // TypeDefIndex: 600
{
	// Fields
	private string _responseElement; // 0x28
	private string _responseNamespace; // 0x30
	private string _returnElement; // 0x38
	private string _soapAction; // 0x40
	private bool _useAttribute; // 0x48
	private string _namespace; // 0x50

	// Properties
	public override bool UseAttribute { get; }
	public override string XmlNamespace { get; }

	// Methods

	// RVA: 0x1EC5490 Offset: 0x1EC5490 VA: 0x1EC5490
	public void .ctor() { }

	// RVA: 0x1EC5498 Offset: 0x1EC5498 VA: 0x1EC5498 Slot: 7
	public override bool get_UseAttribute() { }

	// RVA: 0x1EC54A0 Offset: 0x1EC54A0 VA: 0x1EC54A0 Slot: 8
	public override string get_XmlNamespace() { }

	// RVA: 0x1EC54A8 Offset: 0x1EC54A8 VA: 0x1EC54A8 Slot: 9
	internal override void SetReflectionObject(object reflectionObject) { }
}

// Namespace: System.Runtime.Remoting.Metadata
[ComVisibleAttribute] // RVA: 0xBC8BE0 Offset: 0xBC8BE0 VA: 0xBC8BE0
[AttributeUsageAttribute] // RVA: 0xBC8BE0 Offset: 0xBC8BE0 VA: 0xBC8BE0
public sealed class SoapParameterAttribute : SoapAttribute // TypeDefIndex: 601
{
	// Methods

	// RVA: 0x1EC5864 Offset: 0x1EC5864 VA: 0x1EC5864
	public void .ctor() { }
}

// Namespace: System.Runtime.Remoting.Metadata
[ComVisibleAttribute] // RVA: 0xBC8C20 Offset: 0xBC8C20 VA: 0xBC8C20
[AttributeUsageAttribute] // RVA: 0xBC8C20 Offset: 0xBC8C20 VA: 0xBC8C20
public sealed class SoapTypeAttribute : SoapAttribute // TypeDefIndex: 602
{
	// Fields
	private bool _useAttribute; // 0x28
	private string _xmlElementName; // 0x30
	private string _xmlNamespace; // 0x38
	private string _xmlTypeName; // 0x40
	private string _xmlTypeNamespace; // 0x48
	private bool _isType; // 0x50
	private bool _isElement; // 0x51

	// Properties
	public override bool UseAttribute { get; }
	public string XmlElementName { get; }
	public override string XmlNamespace { get; }
	public string XmlTypeName { get; }
	public string XmlTypeNamespace { get; }
	internal bool IsInteropXmlElement { get; }
	internal bool IsInteropXmlType { get; }

	// Methods

	// RVA: 0x1EC586C Offset: 0x1EC586C VA: 0x1EC586C
	public void .ctor() { }

	// RVA: 0x1EC5874 Offset: 0x1EC5874 VA: 0x1EC5874 Slot: 7
	public override bool get_UseAttribute() { }

	// RVA: 0x1EC587C Offset: 0x1EC587C VA: 0x1EC587C
	public string get_XmlElementName() { }

	// RVA: 0x1EC5884 Offset: 0x1EC5884 VA: 0x1EC5884 Slot: 8
	public override string get_XmlNamespace() { }

	// RVA: 0x1EC588C Offset: 0x1EC588C VA: 0x1EC588C
	public string get_XmlTypeName() { }

	// RVA: 0x1EC5894 Offset: 0x1EC5894 VA: 0x1EC5894
	public string get_XmlTypeNamespace() { }

	// RVA: 0x1EC589C Offset: 0x1EC589C VA: 0x1EC589C
	internal bool get_IsInteropXmlElement() { }

	// RVA: 0x1EC58A4 Offset: 0x1EC58A4 VA: 0x1EC58A4
	internal bool get_IsInteropXmlType() { }

	// RVA: 0x1EC58AC Offset: 0x1EC58AC VA: 0x1EC58AC Slot: 9
	internal override void SetReflectionObject(object reflectionObject) { }
}

// Namespace: System.Runtime.Remoting.Proxies
[AttributeUsageAttribute] // RVA: 0xBC8C60 Offset: 0xBC8C60 VA: 0xBC8C60
[ComVisibleAttribute] // RVA: 0xBC8C60 Offset: 0xBC8C60 VA: 0xBC8C60
public class ProxyAttribute : Attribute, IContextAttribute // TypeDefIndex: 603
{
	// Methods

	// RVA: 0x1EC78E4 Offset: 0x1EC78E4 VA: 0x1EC78E4 Slot: 9
	public virtual MarshalByRefObject CreateInstance(Type serverType) { }

	// RVA: 0x1EC7A7C Offset: 0x1EC7A7C VA: 0x1EC7A7C Slot: 10
	public virtual RealProxy CreateProxy(ObjRef objRef, Type serverType, object serverObject, Context serverContext) { }

	[ComVisibleAttribute] // RVA: 0xBCD19C Offset: 0xBCD19C VA: 0xBCD19C
	// RVA: 0x1EC7BF8 Offset: 0x1EC7BF8 VA: 0x1EC7BF8 Slot: 7
	public void GetPropertiesForNewContext(IConstructionCallMessage msg) { }

	[ComVisibleAttribute] // RVA: 0xBCD1B0 Offset: 0xBCD1B0 VA: 0xBCD1B0
	// RVA: 0x1EC7BFC Offset: 0x1EC7BFC VA: 0x1EC7BFC Slot: 8
	public bool IsContextOK(Context ctx, IConstructionCallMessage msg) { }
}

// Namespace: System.Runtime.Remoting.Proxies
internal class TransparentProxy // TypeDefIndex: 604
{
	// Fields
	public RealProxy _rp; // 0x10
}

// Namespace: System.Runtime.Remoting.Proxies
[ComVisibleAttribute] // RVA: 0xBC8CA0 Offset: 0xBC8CA0 VA: 0xBC8CA0
public abstract class RealProxy // TypeDefIndex: 605
{
	// Fields
	private Type class_to_proxy; // 0x10
	internal Context _targetContext; // 0x18
	private MarshalByRefObject _server; // 0x20
	private int _targetDomainId; // 0x28
	internal string _targetUri; // 0x30
	internal Identity _objectIdentity; // 0x38
	private object _objTP; // 0x40
	private object _stubData; // 0x48

	// Properties
	internal Identity ObjectIdentity { get; set; }

	// Methods

	// RVA: 0x1EC7C04 Offset: 0x1EC7C04 VA: 0x1EC7C04
	protected void .ctor(Type classToProxy) { }

	// RVA: 0x1EC7D80 Offset: 0x1EC7D80 VA: 0x1EC7D80
	internal void .ctor(Type classToProxy, ClientIdentity identity) { }

	// RVA: 0x1EC7C5C Offset: 0x1EC7C5C VA: 0x1EC7C5C
	protected void .ctor(Type classToProxy, IntPtr stub, object stubData) { }

	// RVA: 0x1EC7DE4 Offset: 0x1EC7DE4 VA: 0x1EC7DE4
	private static Type InternalGetProxyType(object transparentProxy) { }

	// RVA: 0x1EC7DE8 Offset: 0x1EC7DE8 VA: 0x1EC7DE8
	public Type GetProxiedType() { }

	// RVA: 0x1EC7E9C Offset: 0x1EC7E9C VA: 0x1EC7E9C Slot: 4
	public virtual void GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0x1EC7F40 Offset: 0x1EC7F40 VA: 0x1EC7F40
	internal Identity get_ObjectIdentity() { }

	// RVA: 0x1EC7F48 Offset: 0x1EC7F48 VA: 0x1EC7F48
	internal void set_ObjectIdentity(Identity value) { }

	// RVA: -1 Offset: -1 Slot: 5
	public abstract IMessage Invoke(IMessage msg);

	// RVA: 0x1EC7F50 Offset: 0x1EC7F50 VA: 0x1EC7F50 Slot: 6
	internal virtual object InternalGetTransparentProxy(string className) { }

	// RVA: 0x1EC7F54 Offset: 0x1EC7F54 VA: 0x1EC7F54 Slot: 7
	public virtual object GetTransparentProxy() { }

	// RVA: 0x1EC80F8 Offset: 0x1EC80F8 VA: 0x1EC80F8
	protected void AttachServer(MarshalByRefObject s) { }

	// RVA: 0x1EC8100 Offset: 0x1EC8100 VA: 0x1EC8100
	internal void SetTargetDomain(int domainId) { }
}

// Namespace: System.Runtime.Remoting.Proxies
internal class RemotingProxy : RealProxy, IRemotingTypeInfo // TypeDefIndex: 606
{
	// Fields
	private static MethodInfo _cache_GetTypeMethod; // 0x0
	private static MethodInfo _cache_GetHashCodeMethod; // 0x8
	private IMessageSink _sink; // 0x50
	private bool _hasEnvoySink; // 0x58
	private ConstructionCall _ctorCall; // 0x60

	// Properties
	public string TypeName { get; }

	// Methods

	// RVA: 0x1EC8108 Offset: 0x1EC8108 VA: 0x1EC8108
	internal void .ctor(Type type, ClientIdentity identity) { }

	// RVA: 0x1EC7A2C Offset: 0x1EC7A2C VA: 0x1EC7A2C
	internal void .ctor(Type type, string activationUrl, object[] activationAttributes) { }

	// RVA: 0x1EC817C Offset: 0x1EC817C VA: 0x1EC817C
	private static void .cctor() { }

	// RVA: 0x1EC826C Offset: 0x1EC826C VA: 0x1EC826C Slot: 5
	public override IMessage Invoke(IMessage request) { }

	// RVA: 0x1EC889C Offset: 0x1EC889C VA: 0x1EC889C
	internal void AttachIdentity(Identity identity) { }

	// RVA: 0x1EC8D24 Offset: 0x1EC8D24 VA: 0x1EC8D24 Slot: 8
	public string get_TypeName() { }

	// RVA: 0x1EC8E70 Offset: 0x1EC8E70 VA: 0x1EC8E70 Slot: 1
	protected override void Finalize() { }
}

// Namespace: System.Runtime.Remoting.Services
[ComVisibleAttribute] // RVA: 0xBC8CB4 Offset: 0xBC8CB4 VA: 0xBC8CB4
public interface ITrackingHandler // TypeDefIndex: 607
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void DisconnectedObject(object obj);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void MarshaledObject(object obj, ObjRef or);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void UnmarshaledObject(object obj, ObjRef or);
}

// Namespace: System.Runtime.Remoting.Services
[ComVisibleAttribute] // RVA: 0xBC8CC8 Offset: 0xBC8CC8 VA: 0xBC8CC8
public class TrackingServices // TypeDefIndex: 608
{
	// Fields
	private static ArrayList _handlers; // 0x0
