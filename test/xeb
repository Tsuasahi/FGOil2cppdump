
	// RVA: 0xE9DE34 Offset: 0xE9DE34 VA: 0xE9DE34 Slot: 21
	public virtual IDictionary get_Properties() { }

	// RVA: 0xEA2004 Offset: 0xEA2004 VA: 0xEA2004 Slot: 22
	internal virtual void InitDictionary() { }

	// RVA: 0xEA2120 Offset: 0xEA2120 VA: 0xEA2120 Slot: 16
	public string get_TypeName() { }

	// RVA: 0xEA1D58 Offset: 0xEA1D58 VA: 0xEA1D58 Slot: 17
	public string get_Uri() { }

	// RVA: 0xEA1D68 Offset: 0xEA1D68 VA: 0xEA1D68 Slot: 23
	public void set_Uri(string value) { }

	// RVA: 0xEA2188 Offset: 0xEA2188 VA: 0xEA2188 Slot: 18
	public object GetArg(int argNum) { }

	// RVA: 0xEA21DC Offset: 0xEA21DC VA: 0xEA21DC Slot: 24
	public virtual void Init() { }

	// RVA: 0xEA1218 Offset: 0xEA1218 VA: 0xEA1218
	public void ResolveMethod() { }

	// RVA: 0xEA22AC Offset: 0xEA22AC VA: 0xEA22AC
	private Type CastTo(string clientType, Type serverType) { }

	// RVA: 0xEA2B78 Offset: 0xEA2B78 VA: 0xEA2B78
	private static string GetTypeNameFromAssemblyQualifiedName(string aqname) { }

	// RVA: 0xEA2B24 Offset: 0xEA2B24 VA: 0xEA2B24
	private Type[] get_GenericArguments() { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal class MethodCallDictionary : MethodDictionary // TypeDefIndex: 582
{
	// Fields
	public static string[] InternalKeys; // 0x0

	// Methods

	// RVA: 0xEA2094 Offset: 0xEA2094 VA: 0xEA2094
	public void .ctor(IMethodMessage message) { }

	// RVA: 0xEA2C58 Offset: 0xEA2C58 VA: 0xEA2C58
	private static void .cctor() { }
}

// Namespace: System.Runtime.Remoting.Messaging
[DefaultMemberAttribute] // RVA: 0xC34B94 Offset: 0xC34B94 VA: 0xC34B94
[Serializable]
internal class MethodDictionary : IEnumerable, ICollection, IDictionary // TypeDefIndex: 583
{
	// Fields
	private IDictionary _internalProperties; // 0x10
	protected IMethodMessage _message; // 0x18
	private string[] _methodKeys; // 0x20
	private bool _ownProperties; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC37768 Offset: 0xC37768 VA: 0xC37768
	private static Dictionary<string, int> <>f__switch$map21; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC37778 Offset: 0xC37778 VA: 0xC37778
	private static Dictionary<string, int> <>f__switch$map22; // 0x8

	// Properties
	internal bool HasInternalProperties { get; }
	internal IDictionary InternalProperties { get; }
	public string[] MethodKeys { set; }
	public bool IsFixedSize { get; }
	public bool IsReadOnly { get; }
	public object Item { get; set; }
	public ICollection Keys { get; }
	public ICollection Values { get; }
	public int Count { get; }
	public bool IsSynchronized { get; }
	public object SyncRoot { get; }

	// Methods

	// RVA: 0xE9DE78 Offset: 0xE9DE78 VA: 0xE9DE78
	public void .ctor(IMethodMessage message) { }

	// RVA: 0xEA2EBC Offset: 0xEA2EBC VA: 0xEA2EBC Slot: 4
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0xEA303C Offset: 0xEA303C VA: 0xEA303C
	internal bool get_HasInternalProperties() { }

	// RVA: 0xEA313C Offset: 0xEA313C VA: 0xEA313C
	internal IDictionary get_InternalProperties() { }

	// RVA: 0xE9DEA4 Offset: 0xE9DEA4 VA: 0xE9DEA4
	public void set_MethodKeys(string[] value) { }

	// RVA: 0xEA31BC Offset: 0xEA31BC VA: 0xEA31BC Slot: 20
	protected virtual IDictionary AllocInternalProperties() { }

	// RVA: 0xE9CB70 Offset: 0xE9CB70 VA: 0xE9CB70
	public IDictionary GetInternalProperties() { }

	// RVA: 0xEA3224 Offset: 0xEA3224 VA: 0xEA3224
	private bool IsOverridenKey(string key) { }

	// RVA: 0xEA3308 Offset: 0xEA3308 VA: 0xEA3308 Slot: 9
	public bool get_IsFixedSize() { }

	// RVA: 0xEA3310 Offset: 0xEA3310 VA: 0xEA3310 Slot: 10
	public bool get_IsReadOnly() { }

	// RVA: 0xEA3318 Offset: 0xEA3318 VA: 0xEA3318 Slot: 11
	public object get_Item(object key) { }

	// RVA: 0xEA3500 Offset: 0xEA3500 VA: 0xEA3500 Slot: 12
	public void set_Item(object key, object value) { }

	// RVA: 0xE9EB48 Offset: 0xE9EB48 VA: 0xE9EB48 Slot: 21
	protected virtual object GetMethodProperty(string key) { }

	// RVA: 0xE9F788 Offset: 0xE9F788 VA: 0xE9F788 Slot: 22
	protected virtual void SetMethodProperty(string key, object value) { }

	// RVA: 0xEA371C Offset: 0xEA371C VA: 0xEA371C Slot: 13
	public ICollection get_Keys() { }

	// RVA: 0xEA3B68 Offset: 0xEA3B68 VA: 0xEA3B68 Slot: 14
	public ICollection get_Values() { }

	// RVA: 0xEA3504 Offset: 0xEA3504 VA: 0xEA3504 Slot: 15
	public void Add(object key, object value) { }

	// RVA: 0xEA3F9C Offset: 0xEA3F9C VA: 0xEA3F9C Slot: 16
	public void Clear() { }

	// RVA: 0xEA4058 Offset: 0xEA4058 VA: 0xEA4058 Slot: 17
	public bool Contains(object key) { }

	// RVA: 0xEA4230 Offset: 0xEA4230 VA: 0xEA4230 Slot: 19
	public void Remove(object key) { }

	// RVA: 0xEA4438 Offset: 0xEA4438 VA: 0xEA4438 Slot: 5
	public int get_Count() { }

	// RVA: 0xEA451C Offset: 0xEA451C VA: 0xEA451C Slot: 6
	public bool get_IsSynchronized() { }

	// RVA: 0xEA4524 Offset: 0xEA4524 VA: 0xEA4524 Slot: 7
	public object get_SyncRoot() { }

	// RVA: 0xEA4528 Offset: 0xEA4528 VA: 0xEA4528 Slot: 8
	public void CopyTo(Array array, int index) { }

	// RVA: 0xEA45FC Offset: 0xEA45FC VA: 0xEA45FC Slot: 18
	public IDictionaryEnumerator GetEnumerator() { }
}

// Namespace: 
private class MethodDictionary.DictionaryEnumerator : IEnumerator, IDictionaryEnumerator // TypeDefIndex: 584
{
	// Fields
	private MethodDictionary _methodDictionary; // 0x10
	private IDictionaryEnumerator _hashtableEnum; // 0x18
	private int _posMethod; // 0x20

	// Properties
	public object Current { get; }
	public DictionaryEntry Entry { get; }
	public object Key { get; }
	public object Value { get; }

	// Methods

	// RVA: 0xEA2F1C Offset: 0xEA2F1C VA: 0xEA2F1C
	public void .ctor(MethodDictionary methodDictionary) { }

	// RVA: 0xEA465C Offset: 0xEA465C VA: 0xEA465C Slot: 4
	public object get_Current() { }

	// RVA: 0xEA4868 Offset: 0xEA4868 VA: 0xEA4868 Slot: 5
	public bool MoveNext() { }

	// RVA: 0xEA4AA8 Offset: 0xEA4AA8 VA: 0xEA4AA8 Slot: 6
	public void Reset() { }

	// RVA: 0xEA4688 Offset: 0xEA4688 VA: 0xEA4688 Slot: 7
	public DictionaryEntry get_Entry() { }

	// RVA: 0xEA4B68 Offset: 0xEA4B68 VA: 0xEA4B68 Slot: 8
	public object get_Key() { }

	// RVA: 0xEA4B94 Offset: 0xEA4B94 VA: 0xEA4B94 Slot: 9
	public object get_Value() { }
}

// Namespace: System.Runtime.Remoting.Messaging
[ComVisibleAttribute] // RVA: 0xC34BCC Offset: 0xC34BCC VA: 0xC34BCC
[CLSCompliantAttribute] // RVA: 0xC34BCC Offset: 0xC34BCC VA: 0xC34BCC
[Serializable]
public class MethodResponse : ISerializable, IInternalMessage, IMessage, IMethodMessage, IMethodReturnMessage, ISerializationRootObject // TypeDefIndex: 585
{
	// Fields
	private string _methodName; // 0x10
	private string _uri; // 0x18
	private string _typeName; // 0x20
	private MethodBase _methodBase; // 0x28
	private object _returnValue; // 0x30
	private Exception _exception; // 0x38
	private Type[] _methodSignature; // 0x40
	private ArgInfo _inArgInfo; // 0x48
	private object[] _args; // 0x50
	private object[] _outArgs; // 0x58
	private IMethodCallMessage _callMsg; // 0x60
	private LogicalCallContext _callContext; // 0x68
	private Identity _targetIdentity; // 0x70
	protected IDictionary ExternalProperties; // 0x78
	protected IDictionary InternalProperties; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC37788 Offset: 0xC37788 VA: 0xC37788
	private static Dictionary<string, int> <>f__switch$map25; // 0x0

	// Properties
	private string System.Runtime.Remoting.Messaging.IInternalMessage.Uri { get; set; }
	private Identity System.Runtime.Remoting.Messaging.IInternalMessage.TargetIdentity { get; set; }
	public int ArgCount { get; }
	public object[] Args { get; }
	public Exception Exception { get; }
	public LogicalCallContext LogicalCallContext { get; }
	public MethodBase MethodBase { get; }
	public string MethodName { get; }
	public object MethodSignature { get; }
	public int OutArgCount { get; }
	public object[] OutArgs { get; }
	public virtual IDictionary Properties { get; }
	public object ReturnValue { get; }
	public string TypeName { get; }
	public string Uri { get; set; }

	// Methods

	// RVA: 0xE9FD40 Offset: 0xE9FD40 VA: 0xE9FD40
	internal void .ctor(Exception e, IMethodCallMessage msg) { }

	// RVA: 0xE9FC4C Offset: 0xE9FC4C VA: 0xE9FC4C
	internal void .ctor(object returnValue, object[] outArgs, LogicalCallContext callCtx, IMethodCallMessage msg) { }

	// RVA: 0xEA4BC0 Offset: 0xEA4BC0 VA: 0xEA4BC0
	internal void .ctor(IMethodCallMessage msg, CADMethodReturnMessage retmsg) { }

	// RVA: 0xE9FE64 Offset: 0xE9FE64 VA: 0xE9FE64
	internal void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0xEA5540 Offset: 0xEA5540 VA: 0xEA5540 Slot: 7
	private string System.Runtime.Remoting.Messaging.IInternalMessage.get_Uri() { }

	// RVA: 0xEA560C Offset: 0xEA560C VA: 0xEA560C Slot: 8
	private void System.Runtime.Remoting.Messaging.IInternalMessage.set_Uri(string value) { }

	// RVA: 0xEA561C Offset: 0xEA561C VA: 0xEA561C Slot: 5
	private Identity System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity() { }

	// RVA: 0xEA5624 Offset: 0xEA5624 VA: 0xEA5624 Slot: 6
	private void System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity(Identity value) { }

	// RVA: 0xEA4EC4 Offset: 0xEA4EC4 VA: 0xEA4EC4
	internal void InitMethodProperty(string key, object value) { }

	// RVA: 0xEA562C Offset: 0xEA562C VA: 0xEA562C Slot: 10
	public int get_ArgCount() { }

	// RVA: 0xEA5644 Offset: 0xEA5644 VA: 0xEA5644 Slot: 11
	public object[] get_Args() { }

	// RVA: 0xEA564C Offset: 0xEA564C VA: 0xEA564C Slot: 19
	public Exception get_Exception() { }

	// RVA: 0xEA5654 Offset: 0xEA5654 VA: 0xEA5654 Slot: 12
	public LogicalCallContext get_LogicalCallContext() { }

	// RVA: 0xEA56BC Offset: 0xEA56BC VA: 0xEA56BC Slot: 13
	public MethodBase get_MethodBase() { }

	// RVA: 0xEA57C4 Offset: 0xEA57C4 VA: 0xEA57C4 Slot: 14
	public string get_MethodName() { }

	// RVA: 0xEA5954 Offset: 0xEA5954 VA: 0xEA5954 Slot: 15
	public object get_MethodSignature() { }

	// RVA: 0xEA5A98 Offset: 0xEA5A98 VA: 0xEA5A98 Slot: 20
	public int get_OutArgCount() { }

	// RVA: 0xEA5B58 Offset: 0xEA5B58 VA: 0xEA5B58 Slot: 21
	public object[] get_OutArgs() { }

	// RVA: 0xE9FF3C Offset: 0xE9FF3C VA: 0xE9FF3C Slot: 23
	public virtual IDictionary get_Properties() { }

	// RVA: 0xEA5D48 Offset: 0xEA5D48 VA: 0xEA5D48 Slot: 22
	public object get_ReturnValue() { }

	// RVA: 0xEA588C Offset: 0xEA588C VA: 0xEA588C Slot: 16
	public string get_TypeName() { }

	// RVA: 0xEA5544 Offset: 0xEA5544 VA: 0xEA5544 Slot: 17
	public string get_Uri() { }

	// RVA: 0xEA5614 Offset: 0xEA5614 VA: 0xEA5614 Slot: 24
	public void set_Uri(string value) { }

	// RVA: 0xEA5D50 Offset: 0xEA5D50 VA: 0xEA5D50 Slot: 18
	public object GetArg(int argNum) { }

	// RVA: 0xEA5DA0 Offset: 0xEA5DA0 VA: 0xEA5DA0 Slot: 25
	public virtual void GetObjectData(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal class MethodReturnDictionary : MethodDictionary // TypeDefIndex: 586
{
	// Fields
	public static string[] InternalReturnKeys; // 0x0
	public static string[] InternalExceptionKeys; // 0x8

	// Methods

	// RVA: 0xEA5C1C Offset: 0xEA5C1C VA: 0xEA5C1C
	public void .ctor(IMethodReturnMessage message) { }

	// RVA: 0xEA625C Offset: 0xEA625C VA: 0xEA625C
	private static void .cctor() { }
}

// Namespace: System.Runtime.Remoting.Messaging
[Serializable]
internal class MonoMethodMessage : IInternalMessage, IMessage, IMethodCallMessage, IMethodMessage, IMethodReturnMessage // TypeDefIndex: 587
{
	// Fields
	private MonoMethod method; // 0x10
	private object[] args; // 0x18
	private byte[] arg_types; // 0x20
	public LogicalCallContext ctx; // 0x28
	public object rval; // 0x30
	public Exception exc; // 0x38
	private AsyncResult asyncResult; // 0x40
	private CallType call_type; // 0x48
	private string uri; // 0x50
	private MethodCallDictionary properties; // 0x58
	private Type[] methodSignature; // 0x60
	private Identity identity; // 0x68

	// Properties
	private Identity System.Runtime.Remoting.Messaging.IInternalMessage.TargetIdentity { get; set; }
	public IDictionary Properties { get; }
	public int ArgCount { get; }
	public object[] Args { get; }
	public LogicalCallContext LogicalCallContext { get; }
	public MethodBase MethodBase { get; }
	public string MethodName { get; }
	public object MethodSignature { get; }
	public string TypeName { get; }
	public string Uri { get; set; }
	public Exception Exception { get; }
	public int OutArgCount { get; }
	public object[] OutArgs { get; }
	public object ReturnValue { get; }
	public AsyncResult AsyncResult { get; }
	internal CallType CallType { get; }

	// Methods

	// RVA: 0xEA6588 Offset: 0xEA6588 VA: 0xEA6588 Slot: 4
	private Identity System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity() { }

	// RVA: 0xEA6590 Offset: 0xEA6590 VA: 0xEA6590 Slot: 5
	private void System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity(Identity value) { }

	// RVA: 0xEA6598 Offset: 0xEA6598 VA: 0xEA6598 Slot: 8
	public IDictionary get_Properties() { }

	// RVA: 0xEA6604 Offset: 0xEA6604 VA: 0xEA6604 Slot: 9
	public int get_ArgCount() { }

	// RVA: 0xEA66D0 Offset: 0xEA66D0 VA: 0xEA66D0 Slot: 10
	public object[] get_Args() { }

	// RVA: 0xEA66D8 Offset: 0xEA66D8 VA: 0xEA66D8 Slot: 11
	public LogicalCallContext get_LogicalCallContext() { }

	// RVA: 0xEA66E0 Offset: 0xEA66E0 VA: 0xEA66E0 Slot: 12
	public MethodBase get_MethodBase() { }

	// RVA: 0xEA66E8 Offset: 0xEA66E8 VA: 0xEA66E8 Slot: 13
	public string get_MethodName() { }

	// RVA: 0xEA6770 Offset: 0xEA6770 VA: 0xEA6770 Slot: 14
	public object get_MethodSignature() { }

	// RVA: 0xEA68E0 Offset: 0xEA68E0 VA: 0xEA68E0 Slot: 15
	public string get_TypeName() { }

	// RVA: 0xEA6988 Offset: 0xEA6988 VA: 0xEA6988 Slot: 16
	public string get_Uri() { }

	// RVA: 0xEA6990 Offset: 0xEA6990 VA: 0xEA6990 Slot: 7
	public void set_Uri(string value) { }

	// RVA: 0xEA6998 Offset: 0xEA6998 VA: 0xEA6998 Slot: 17
	public object GetArg(int arg_num) { }

	// RVA: 0xEA69E8 Offset: 0xEA69E8 VA: 0xEA69E8 Slot: 18
	public Exception get_Exception() { }

	// RVA: 0xEA69F0 Offset: 0xEA69F0 VA: 0xEA69F0 Slot: 19
	public int get_OutArgCount() { }

	// RVA: 0xEA6A7C Offset: 0xEA6A7C VA: 0xEA6A7C Slot: 20
	public object[] get_OutArgs() { }

	// RVA: 0xEA6C00 Offset: 0xEA6C00 VA: 0xEA6C00 Slot: 21
	public object get_ReturnValue() { }

	// RVA: 0xEA6C08 Offset: 0xEA6C08 VA: 0xEA6C08
	public AsyncResult get_AsyncResult() { }

	// RVA: 0xEA6648 Offset: 0xEA6648 VA: 0xEA6648
	internal CallType get_CallType() { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal enum CallType // TypeDefIndex: 588
{
	// Fields
	public int value__; // 0x0
	public const CallType Sync = 0;
	public const CallType BeginInvoke = 1;
	public const CallType EndInvoke = 2;
	public const CallType OneWay = 3;
}

// Namespace: System.Runtime.Remoting.Messaging
[ComVisibleAttribute] // RVA: 0xC34C0C Offset: 0xC34C0C VA: 0xC34C0C
[AttributeUsageAttribute] // RVA: 0xC34C0C Offset: 0xC34C0C VA: 0xC34C0C
public class OneWayAttribute : Attribute // TypeDefIndex: 589
{}

// Namespace: System.Runtime.Remoting.Messaging
internal class RemotingSurrogate : ISerializationSurrogate // TypeDefIndex: 590
{
	// Methods

	// RVA: 0xEA6EEC Offset: 0xEA6EEC VA: 0xEA6EEC
	public void .ctor() { }

	// RVA: 0xEA6EF4 Offset: 0xEA6EF4 VA: 0xEA6EF4 Slot: 6
	public virtual void GetObjectData(object obj, SerializationInfo si, StreamingContext sc) { }

	// RVA: 0xEA735C Offset: 0xEA735C VA: 0xEA735C Slot: 7
	public virtual object SetObjectData(object obj, SerializationInfo si, StreamingContext sc, ISurrogateSelector selector) { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal class ObjRefSurrogate : ISerializationSurrogate // TypeDefIndex: 591
{
	// Methods

	// RVA: 0xEA6CAC Offset: 0xEA6CAC VA: 0xEA6CAC
	public void .ctor() { }

	// RVA: 0xEA6CB4 Offset: 0xEA6CB4 VA: 0xEA6CB4 Slot: 6
	public virtual void GetObjectData(object obj, SerializationInfo si, StreamingContext sc) { }

	// RVA: 0xEA6E78 Offset: 0xEA6E78 VA: 0xEA6E78 Slot: 7
	public virtual object SetObjectData(object obj, SerializationInfo si, StreamingContext sc, ISurrogateSelector selector) { }
}

// Namespace: System.Runtime.Remoting.Messaging
[ComVisibleAttribute] // RVA: 0xC34C4C Offset: 0xC34C4C VA: 0xC34C4C
public class RemotingSurrogateSelector : ISurrogateSelector // TypeDefIndex: 592
{
	// Fields
	private static Type s_cachedTypeObjRef; // 0x0
	private static ObjRefSurrogate _objRefSurrogate; // 0x8
	private static RemotingSurrogate _objRemotingSurrogate; // 0x10
	private ISurrogateSelector _next; // 0x10

	// Methods

	// RVA: 0xEA73C4 Offset: 0xEA73C4 VA: 0xEA73C4
	public void .ctor() { }

	// RVA: 0xEA73CC Offset: 0xEA73CC VA: 0xEA73CC
	private static void .cctor() { }

	// RVA: 0xEA74A4 Offset: 0xEA74A4 VA: 0xEA74A4 Slot: 5
	public virtual ISerializationSurrogate GetSurrogate(Type type, StreamingContext context, out ISurrogateSelector ssout) { }
}

// Namespace: System.Runtime.Remoting.Messaging
[ComVisibleAttribute] // RVA: 0xC34C60 Offset: 0xC34C60 VA: 0xC34C60
public class ReturnMessage : IInternalMessage, IMessage, IMethodMessage, IMethodReturnMessage // TypeDefIndex: 593
{
	// Fields
	private object[] _outArgs; // 0x10
	private object[] _args; // 0x18
	private int _outArgsCount; // 0x20
	private LogicalCallContext _callCtx; // 0x28
	private object _returnValue; // 0x30
	private string _uri; // 0x38
	private Exception _exception; // 0x40
	private MethodBase _methodBase; // 0x48
	private string _methodName; // 0x50
	private Type[] _methodSignature; // 0x58
	private string _typeName; // 0x60
	private MethodReturnDictionary _properties; // 0x68
	private Identity _targetIdentity; // 0x70
	private ArgInfo _inArgInfo; // 0x78

	// Properties
	private string System.Runtime.Remoting.Messaging.IInternalMessage.Uri { get; set; }
	private Identity System.Runtime.Remoting.Messaging.IInternalMessage.TargetIdentity { get; set; }
	public int ArgCount { get; }
	public object[] Args { get; }
	public LogicalCallContext LogicalCallContext { get; }
	public MethodBase MethodBase { get; }
	public string MethodName { get; }
	public object MethodSignature { get; }
	public virtual IDictionary Properties { get; }
	public string TypeName { get; }
	public string Uri { get; set; }
	public Exception Exception { get; }
	public int OutArgCount { get; }
	public object[] OutArgs { get; }
	public virtual object ReturnValue { get; }

	// Methods

	// RVA: 0xEA7678 Offset: 0xEA7678 VA: 0xEA7678
	public void .ctor(object ret, object[] outArgs, int outArgsCount, LogicalCallContext callCtx, IMethodCallMessage mcm) { }

	// RVA: 0xEA77F8 Offset: 0xEA77F8 VA: 0xEA77F8
	public void .ctor(Exception e, IMethodCallMessage mcm) { }

	// RVA: 0xEA794C Offset: 0xEA794C VA: 0xEA794C Slot: 6
	private string System.Runtime.Remoting.Messaging.IInternalMessage.get_Uri() { }

	// RVA: 0xEA795C Offset: 0xEA795C VA: 0xEA795C Slot: 7
	private void System.Runtime.Remoting.Messaging.IInternalMessage.set_Uri(string value) { }

	// RVA: 0xEA796C Offset: 0xEA796C VA: 0xEA796C Slot: 4
	private Identity System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity() { }

	// RVA: 0xEA7974 Offset: 0xEA7974 VA: 0xEA7974 Slot: 5
	private void System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity(Identity value) { }

	// RVA: 0xEA797C Offset: 0xEA797C VA: 0xEA797C Slot: 9
	public int get_ArgCount() { }

	// RVA: 0xEA79A8 Offset: 0xEA79A8 VA: 0xEA79A8 Slot: 10
	public object[] get_Args() { }

	// RVA: 0xEA79B0 Offset: 0xEA79B0 VA: 0xEA79B0 Slot: 11
	public LogicalCallContext get_LogicalCallContext() { }

	// RVA: 0xEA7A18 Offset: 0xEA7A18 VA: 0xEA7A18 Slot: 12
	public MethodBase get_MethodBase() { }

	// RVA: 0xEA7A20 Offset: 0xEA7A20 VA: 0xEA7A20 Slot: 13
	public string get_MethodName() { }

	// RVA: 0xEA7A5C Offset: 0xEA7A5C VA: 0xEA7A5C Slot: 14
	public object get_MethodSignature() { }

	// RVA: 0xEA7BC4 Offset: 0xEA7BC4 VA: 0xEA7BC4 Slot: 22
	public virtual IDictionary get_Properties() { }

	// RVA: 0xEA7C30 Offset: 0xEA7C30 VA: 0xEA7C30 Slot: 15
	public string get_TypeName() { }

	// RVA: 0xEA7954 Offset: 0xEA7954 VA: 0xEA7954 Slot: 16
	public string get_Uri() { }

	// RVA: 0xEA7964 Offset: 0xEA7964 VA: 0xEA7964 Slot: 23
	public void set_Uri(string value) { }

	// RVA: 0xEA7C90 Offset: 0xEA7C90 VA: 0xEA7C90 Slot: 17
	public object GetArg(int argNum) { }

	// RVA: 0xEA7CE4 Offset: 0xEA7CE4 VA: 0xEA7CE4 Slot: 18
	public Exception get_Exception() { }

	// RVA: 0xEA7CEC Offset: 0xEA7CEC VA: 0xEA7CEC Slot: 19
	public int get_OutArgCount() { }

	// RVA: 0xEA7DA0 Offset: 0xEA7DA0 VA: 0xEA7DA0 Slot: 20
	public object[] get_OutArgs() { }

	// RVA: 0xEA7E58 Offset: 0xEA7E58 VA: 0xEA7E58 Slot: 24
	public virtual object get_ReturnValue() { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal class ServerContextTerminatorSink : IMessageSink // TypeDefIndex: 594
{
	// Methods

	// RVA: 0xEA7E60 Offset: 0xEA7E60 VA: 0xEA7E60
	public void .ctor() { }

	// RVA: 0xEA7E68 Offset: 0xEA7E68 VA: 0xEA7E68 Slot: 4
	public IMessage SyncProcessMessage(IMessage msg) { }

	// RVA: 0xEA7FF4 Offset: 0xEA7FF4 VA: 0xEA7FF4 Slot: 5
	public IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink) { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal class ServerObjectTerminatorSink : IMessageSink // TypeDefIndex: 595
{
	// Fields
	private IMessageSink _nextSink; // 0x10

	// Methods

	// RVA: 0xEA8290 Offset: 0xEA8290 VA: 0xEA8290
	public void .ctor(IMessageSink nextSink) { }

	// RVA: 0xEA82BC Offset: 0xEA82BC VA: 0xEA82BC Slot: 4
	public IMessage SyncProcessMessage(IMessage msg) { }

	// RVA: 0xEA8498 Offset: 0xEA8498 VA: 0xEA8498 Slot: 5
	public IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink) { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal class ServerObjectReplySink : IMessageSink // TypeDefIndex: 596
{
	// Fields
	private IMessageSink _replySink; // 0x10
	private ServerIdentity _identity; // 0x18

	// Methods

	// RVA: 0xEA8100 Offset: 0xEA8100 VA: 0xEA8100
	public void .ctor(ServerIdentity identity, IMessageSink replySink) { }

	// RVA: 0xEA8138 Offset: 0xEA8138 VA: 0xEA8138 Slot: 4
	public IMessage SyncProcessMessage(IMessage msg) { }

	// RVA: 0xEA8228 Offset: 0xEA8228 VA: 0xEA8228 Slot: 5
	public IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink) { }
}

// Namespace: System.Runtime.Remoting.Messaging
internal class StackBuilderSink : IMessageSink // TypeDefIndex: 597
{
	// Fields
	private MarshalByRefObject _target; // 0x10
	private RealProxy _rp; // 0x18

	// Methods

	// RVA: 0xEA86D0 Offset: 0xEA86D0 VA: 0xEA86D0
	public void .ctor(MarshalByRefObject obj, bool forceInternalExecute) { }

	// RVA: 0xEA8784 Offset: 0xEA8784 VA: 0xEA8784 Slot: 4
	public IMessage SyncProcessMessage(IMessage msg) { }

	// RVA: 0xEA9AA4 Offset: 0xEA9AA4 VA: 0xEA9AA4 Slot: 5
	public IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink) { }

	// RVA: 0xEA9BE8 Offset: 0xEA9BE8 VA: 0xEA9BE8
	private void ExecuteAsyncMessage(object ob) { }

	// RVA: 0xEA88A4 Offset: 0xEA88A4 VA: 0xEA88A4
	private void CheckParameters(IMessage msg) { }
}

// Namespace: System.Runtime.Remoting.Metadata
[ComVisibleAttribute] // RVA: 0xC34C74 Offset: 0xC34C74 VA: 0xC34C74
public class SoapAttribute : Attribute // TypeDefIndex: 598
{
	// Fields
	private bool _useAttribute; // 0x10
	protected string ProtXmlNamespace; // 0x18
	protected object ReflectInfo; // 0x20

	// Properties
	public virtual bool UseAttribute { get; }
	public virtual string XmlNamespace { get; }

	// Methods

	// RVA: 0xEA9EA4 Offset: 0xEA9EA4 VA: 0xEA9EA4
	public void .ctor() { }

	// RVA: 0xEA9EAC Offset: 0xEA9EAC VA: 0xEA9EAC Slot: 7
	public virtual bool get_UseAttribute() { }

	// RVA: 0xEA9EB4 Offset: 0xEA9EB4 VA: 0xEA9EB4 Slot: 8
	public virtual string get_XmlNamespace() { }

	// RVA: 0xEA9EBC Offset: 0xEA9EBC VA: 0xEA9EBC Slot: 9
	internal virtual void SetReflectionObject(object reflectionObject) { }
}

// Namespace: System.Runtime.Remoting.Metadata
[AttributeUsageAttribute] // RVA: 0xC34C88 Offset: 0xC34C88 VA: 0xC34C88
[ComVisibleAttribute] // RVA: 0xC34C88 Offset: 0xC34C88 VA: 0xC34C88
public sealed class SoapFieldAttribute : SoapAttribute // TypeDefIndex: 599
{
	// Fields
	private string _elementName; // 0x28
	private bool _isElement; // 0x30

	// Properties
	public string XmlElementName { get; }

	// Methods

	// RVA: 0xEA9EC4 Offset: 0xEA9EC4 VA: 0xEA9EC4
	public void .ctor() { }

	// RVA: 0xEA9ECC Offset: 0xEA9ECC VA: 0xEA9ECC
	public string get_XmlElementName() { }

	// RVA: 0xEA9ED4 Offset: 0xEA9ED4 VA: 0xEA9ED4
	public bool IsInteropXmlElement() { }

	// RVA: 0xEA9EDC Offset: 0xEA9EDC VA: 0xEA9EDC Slot: 9
	internal override void SetReflectionObject(object reflectionObject) { }
}

// Namespace: System.Runtime.Remoting.Metadata
[AttributeUsageAttribute] // RVA: 0xC34CC8 Offset: 0xC34CC8 VA: 0xC34CC8
[ComVisibleAttribute] // RVA: 0xC34CC8 Offset: 0xC34CC8 VA: 0xC34CC8
public sealed class SoapMethodAttribute : SoapAttribute // TypeDefIndex: 600
{
	// Fields
	private string _responseElement; // 0x28
	private string _responseNamespace; // 0x30
	private string _returnElement; // 0x38
	private string _soapAction; // 0x40
	private bool _useAttribute; // 0x48
	private string _namespace; // 0x50

	// Properties
	public override bool UseAttribute { get; }
	public override string XmlNamespace { get; }

	// Methods

	// RVA: 0xEA9FD0 Offset: 0xEA9FD0 VA: 0xEA9FD0
	public void .ctor() { }

	// RVA: 0xEA9FD8 Offset: 0xEA9FD8 VA: 0xEA9FD8 Slot: 7
	public override bool get_UseAttribute() { }

	// RVA: 0xEA9FE0 Offset: 0xEA9FE0 VA: 0xEA9FE0 Slot: 8
	public override string get_XmlNamespace() { }

	// RVA: 0xEA9FE8 Offset: 0xEA9FE8 VA: 0xEA9FE8 Slot: 9
	internal override void SetReflectionObject(object reflectionObject) { }
}

// Namespace: System.Runtime.Remoting.Metadata
[ComVisibleAttribute] // RVA: 0xC34D08 Offset: 0xC34D08 VA: 0xC34D08
[AttributeUsageAttribute] // RVA: 0xC34D08 Offset: 0xC34D08 VA: 0xC34D08
public sealed class SoapParameterAttribute : SoapAttribute // TypeDefIndex: 601
{
	// Methods

	// RVA: 0xEAA3A4 Offset: 0xEAA3A4 VA: 0xEAA3A4
	public void .ctor() { }
}

// Namespace: System.Runtime.Remoting.Metadata
[ComVisibleAttribute] // RVA: 0xC34D48 Offset: 0xC34D48 VA: 0xC34D48
[AttributeUsageAttribute] // RVA: 0xC34D48 Offset: 0xC34D48 VA: 0xC34D48
public sealed class SoapTypeAttribute : SoapAttribute // TypeDefIndex: 602
{
	// Fields
	private bool _useAttribute; // 0x28
	private string _xmlElementName; // 0x30
	private string _xmlNamespace; // 0x38
	private string _xmlTypeName; // 0x40
	private string _xmlTypeNamespace; // 0x48
	private bool _isType; // 0x50
	private bool _isElement; // 0x51

	// Properties
	public override bool UseAttribute { get; }
	public string XmlElementName { get; }
	public override string XmlNamespace { get; }
	public string XmlTypeName { get; }
	public string XmlTypeNamespace { get; }
	internal bool IsInteropXmlElement { get; }
	internal bool IsInteropXmlType { get; }

	// Methods

	// RVA: 0xEAA3AC Offset: 0xEAA3AC VA: 0xEAA3AC
	public void .ctor() { }

	// RVA: 0xEAA3B4 Offset: 0xEAA3B4 VA: 0xEAA3B4 Slot: 7
	public override bool get_UseAttribute() { }

	// RVA: 0xEAA3BC Offset: 0xEAA3BC VA: 0xEAA3BC
	public string get_XmlElementName() { }

	// RVA: 0xEAA3C4 Offset: 0xEAA3C4 VA: 0xEAA3C4 Slot: 8
	public override string get_XmlNamespace() { }

	// RVA: 0xEAA3CC Offset: 0xEAA3CC VA: 0xEAA3CC
	public string get_XmlTypeName() { }

	// RVA: 0xEAA3D4 Offset: 0xEAA3D4 VA: 0xEAA3D4
	public string get_XmlTypeNamespace() { }

	// RVA: 0xEAA3DC Offset: 0xEAA3DC VA: 0xEAA3DC
	internal bool get_IsInteropXmlElement() { }

	// RVA: 0xEAA3E4 Offset: 0xEAA3E4 VA: 0xEAA3E4
	internal bool get_IsInteropXmlType() { }

	// RVA: 0xEAA3EC Offset: 0xEAA3EC VA: 0xEAA3EC Slot: 9
	internal override void SetReflectionObject(object reflectionObject) { }
}

// Namespace: System.Runtime.Remoting.Proxies
[AttributeUsageAttribute] // RVA: 0xC34D88 Offset: 0xC34D88 VA: 0xC34D88
[ComVisibleAttribute] // RVA: 0xC34D88 Offset: 0xC34D88 VA: 0xC34D88
public class ProxyAttribute : Attribute, IContextAttribute // TypeDefIndex: 603
{
	// Methods

	// RVA: 0xEAC424 Offset: 0xEAC424 VA: 0xEAC424 Slot: 9
	public virtual MarshalByRefObject CreateInstance(Type serverType) { }

	// RVA: 0xEAC5BC Offset: 0xEAC5BC VA: 0xEAC5BC Slot: 10
	public virtual RealProxy CreateProxy(ObjRef objRef, Type serverType, object serverObject, Context serverContext) { }

	[ComVisibleAttribute] // RVA: 0xC392C4 Offset: 0xC392C4 VA: 0xC392C4
	// RVA: 0xEAC738 Offset: 0xEAC738 VA: 0xEAC738 Slot: 7
	public void GetPropertiesForNewContext(IConstructionCallMessage msg) { }

	[ComVisibleAttribute] // RVA: 0xC392D8 Offset: 0xC392D8 VA: 0xC392D8
	// RVA: 0xEAC73C Offset: 0xEAC73C VA: 0xEAC73C Slot: 8
	public bool IsContextOK(Context ctx, IConstructionCallMessage msg) { }
}

// Namespace: System.Runtime.Remoting.Proxies
internal class TransparentProxy // TypeDefIndex: 604
{
	// Fields
	public RealProxy _rp; // 0x10
}

// Namespace: System.Runtime.Remoting.Proxies
[ComVisibleAttribute] // RVA: 0xC34DC8 Offset: 0xC34DC8 VA: 0xC34DC8
public abstract class RealProxy // TypeDefIndex: 605
{
	// Fields
	private Type class_to_proxy; // 0x10
	internal Context _targetContext; // 0x18
	private MarshalByRefObject _server; // 0x20
	private int _targetDomainId; // 0x28
	internal string _targetUri; // 0x30
	internal Identity _objectIdentity; // 0x38
	private object _objTP; // 0x40
	private object _stubData; // 0x48

	// Properties
	internal Identity ObjectIdentity { get; set; }

	// Methods

	// RVA: 0xEAC744 Offset: 0xEAC744 VA: 0xEAC744
	protected void .ctor(Type classToProxy) { }

	// RVA: 0xEAC8C0 Offset: 0xEAC8C0 VA: 0xEAC8C0
	internal void .ctor(Type classToProxy, ClientIdentity identity) { }

	// RVA: 0xEAC79C Offset: 0xEAC79C VA: 0xEAC79C
	protected void .ctor(Type classToProxy, IntPtr stub, object stubData) { }

	// RVA: 0xEAC924 Offset: 0xEAC924 VA: 0xEAC924
	private static Type InternalGetProxyType(object transparentProxy) { }

	// RVA: 0xEAC928 Offset: 0xEAC928 VA: 0xEAC928
	public Type GetProxiedType() { }

	// RVA: 0xEAC9DC Offset: 0xEAC9DC VA: 0xEAC9DC Slot: 4
	public virtual void GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0xEACA80 Offset: 0xEACA80 VA: 0xEACA80
	internal Identity get_ObjectIdentity() { }

	// RVA: 0xEACA88 Offset: 0xEACA88 VA: 0xEACA88
	internal void set_ObjectIdentity(Identity value) { }

	// RVA: -1 Offset: -1 Slot: 5
	public abstract IMessage Invoke(IMessage msg);

	// RVA: 0xEACA90 Offset: 0xEACA90 VA: 0xEACA90 Slot: 6
	internal virtual object InternalGetTransparentProxy(string className) { }

	// RVA: 0xEACA94 Offset: 0xEACA94 VA: 0xEACA94 Slot: 7
	public virtual object GetTransparentProxy() { }

	// RVA: 0xEACC38 Offset: 0xEACC38 VA: 0xEACC38
	protected void AttachServer(MarshalByRefObject s) { }

	// RVA: 0xEACC40 Offset: 0xEACC40 VA: 0xEACC40
	internal void SetTargetDomain(int domainId) { }
}

// Namespace: System.Runtime.Remoting.Proxies
internal class RemotingProxy : RealProxy, IRemotingTypeInfo // TypeDefIndex: 606
{
	// Fields
	private static MethodInfo _cache_GetTypeMethod; // 0x0
	private static MethodInfo _cache_GetHashCodeMethod; // 0x8
	private IMessageSink _sink; // 0x50
	private bool _hasEnvoySink; // 0x58
	private ConstructionCall _ctorCall; // 0x60

	// Properties
	public string TypeName { get; }

	// Methods

	// RVA: 0xEACC48 Offset: 0xEACC48 VA: 0xEACC48
	internal void .ctor(Type type, ClientIdentity identity) { }

	// RVA: 0xEAC56C Offset: 0xEAC56C VA: 0xEAC56C
	internal void .ctor(Type type, string activationUrl, object[] activationAttributes) { }

	// RVA: 0xEACCBC Offset: 0xEACCBC VA: 0xEACCBC
	private static void .cctor() { }

	// RVA: 0xEACDAC Offset: 0xEACDAC VA: 0xEACDAC Slot: 5
	public override IMessage Invoke(IMessage request) { }

	// RVA: 0xEAD3DC Offset: 0xEAD3DC VA: 0xEAD3DC
	internal void AttachIdentity(Identity identity) { }

	// RVA: 0xEAD864 Offset: 0xEAD864 VA: 0xEAD864 Slot: 8
	public string get_TypeName() { }

	// RVA: 0xEAD9B0 Offset: 0xEAD9B0 VA: 0xEAD9B0 Slot: 1
	protected override void Finalize() { }
}

// Namespace: System.Runtime.Remoting.Services
[ComVisibleAttribute] // RVA: 0xC34DDC Offset: 0xC34DDC VA: 0xC34DDC
public interface ITrackingHandler // TypeDefIndex: 607
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void DisconnectedObject(object obj);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void MarshaledObject(object obj, ObjRef or);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void UnmarshaledObject(object obj, ObjRef or);
}

// Namespace: System.Runtime.Remoting.Services
[ComVisibleAttribute] // RVA: 0xC34DF0 Offset: 0xC34DF0 VA: 0xC34DF0
public class TrackingServices // TypeDefIndex: 608
{
	// Fields
	private static ArrayList _handlers; // 0x0

	// Methods

	// RVA: 0xEB4308 Offset: 0xEB4308 VA: 0xEB4308
	private static void .cctor() { }

	// RVA: 0xEB23C4 Offset: 0xEB23C4 VA: 0xEB23C4
	internal static void NotifyMarshaledObject(object obj, ObjRef or) { }

	// RVA: 0xEB1450 Offset: 0xEB1450 VA: 0xEB1450
	internal static void NotifyUnmarshaledObject(object obj, ObjRef or) { }

	// RVA: 0xEB3FE4 Offset: 0xEB3FE4 VA: 0xEB3FE4
	internal static void NotifyDisconnectedObject(object obj) { }
}

// Namespace: System.Runtime.Remoting
[ComVisibleAttribute] // RVA: 0xC34E04 Offset: 0xC34E04 VA: 0xC34E04
public class ActivatedClientTypeEntry : TypeEntry // TypeDefIndex: 609
{
	// Fields
	private string applicationUrl; // 0x20
	private Type obj_type; // 0x28

	// Properties
	public string ApplicationUrl { get; }
	public IContextAttribute[] ContextAttributes { get; }
