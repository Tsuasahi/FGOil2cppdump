	[FormerlySerializedAsAttribute] // RVA: 0xC8032C Offset: 0xC8032C VA: 0xC8032C
	[SerializeField] // RVA: 0xC8032C Offset: 0xC8032C VA: 0xC8032C
	private InputField.InputType m_InputType; // 0xF4
	[FormerlySerializedAsAttribute] // RVA: 0xC80378 Offset: 0xC80378 VA: 0xC80378
	[SerializeField] // RVA: 0xC80378 Offset: 0xC80378 VA: 0xC80378
	private char m_AsteriskChar; // 0xF8
	[FormerlySerializedAsAttribute] // RVA: 0xC803C4 Offset: 0xC803C4 VA: 0xC803C4
	[SerializeField] // RVA: 0xC803C4 Offset: 0xC803C4 VA: 0xC803C4
	private TouchScreenKeyboardType m_KeyboardType; // 0xFC
	[SerializeField] // RVA: 0xC80410 Offset: 0xC80410 VA: 0xC80410
	private InputField.LineType m_LineType; // 0x100
	[FormerlySerializedAsAttribute] // RVA: 0xC80420 Offset: 0xC80420 VA: 0xC80420
	[SerializeField] // RVA: 0xC80420 Offset: 0xC80420 VA: 0xC80420
	private bool m_HideMobileInput; // 0x104
	[FormerlySerializedAsAttribute] // RVA: 0xC8046C Offset: 0xC8046C VA: 0xC8046C
	[SerializeField] // RVA: 0xC8046C Offset: 0xC8046C VA: 0xC8046C
	private InputField.CharacterValidation m_CharacterValidation; // 0x108
	[FormerlySerializedAsAttribute] // RVA: 0xC804B8 Offset: 0xC804B8 VA: 0xC804B8
	[SerializeField] // RVA: 0xC804B8 Offset: 0xC804B8 VA: 0xC804B8
	private int m_CharacterLimit; // 0x10C
	[FormerlySerializedAsAttribute] // RVA: 0xC80504 Offset: 0xC80504 VA: 0xC80504
	[FormerlySerializedAsAttribute] // RVA: 0xC80504 Offset: 0xC80504 VA: 0xC80504
	[FormerlySerializedAsAttribute] // RVA: 0xC80504 Offset: 0xC80504 VA: 0xC80504
	[SerializeField] // RVA: 0xC80504 Offset: 0xC80504 VA: 0xC80504
	private InputField.SubmitEvent m_OnEndEdit; // 0x110
	[FormerlySerializedAsAttribute] // RVA: 0xC80598 Offset: 0xC80598 VA: 0xC80598
	[FormerlySerializedAsAttribute] // RVA: 0xC80598 Offset: 0xC80598 VA: 0xC80598
	[SerializeField] // RVA: 0xC80598 Offset: 0xC80598 VA: 0xC80598
	private InputField.OnChangeEvent m_OnValueChanged; // 0x118
	[FormerlySerializedAsAttribute] // RVA: 0xC80608 Offset: 0xC80608 VA: 0xC80608
	[SerializeField] // RVA: 0xC80608 Offset: 0xC80608 VA: 0xC80608
	private InputField.OnValidateInput m_OnValidateInput; // 0x120
	[FormerlySerializedAsAttribute] // RVA: 0xC80654 Offset: 0xC80654 VA: 0xC80654
	[SerializeField] // RVA: 0xC80654 Offset: 0xC80654 VA: 0xC80654
	private Color m_CaretColor; // 0x128
	[SerializeField] // RVA: 0xC806A0 Offset: 0xC806A0 VA: 0xC806A0
	private bool m_CustomCaretColor; // 0x138
	[SerializeField] // RVA: 0xC806B0 Offset: 0xC806B0 VA: 0xC806B0
	private Color m_SelectionColor; // 0x13C
	[SerializeField] // RVA: 0xC806C0 Offset: 0xC806C0 VA: 0xC806C0
	[FormerlySerializedAsAttribute] // RVA: 0xC806C0 Offset: 0xC806C0 VA: 0xC806C0
	protected string m_Text; // 0x150
	[SerializeField] // RVA: 0xC8070C Offset: 0xC8070C VA: 0xC8070C
	[RangeAttribute] // RVA: 0xC8070C Offset: 0xC8070C VA: 0xC8070C
	private float m_CaretBlinkRate; // 0x158
	[SerializeField] // RVA: 0xC8074C Offset: 0xC8074C VA: 0xC8074C
	[RangeAttribute] // RVA: 0xC8074C Offset: 0xC8074C VA: 0xC8074C
	private int m_CaretWidth; // 0x15C
	[SerializeField] // RVA: 0xC8078C Offset: 0xC8078C VA: 0xC8078C
	private bool m_ReadOnly; // 0x160
	protected int m_CaretPosition; // 0x164
	protected int m_CaretSelectPosition; // 0x168
	private RectTransform caretRectTrans; // 0x170
	protected UIVertex[] m_CursorVerts; // 0x178
	private TextGenerator m_InputTextCache; // 0x180
	private CanvasRenderer m_CachedInputRenderer; // 0x188
	private bool m_PreventFontCallback; // 0x190
	protected Mesh m_Mesh; // 0x198
	private bool m_AllowInput; // 0x1A0
	private bool m_ShouldActivateNextUpdate; // 0x1A1
	private bool m_UpdateDrag; // 0x1A2
	private bool m_DragPositionOutOfBounds; // 0x1A3
	private const float kHScrollSpeed = 0.05;
	private const float kVScrollSpeed = 0.1;
	protected bool m_CaretVisible; // 0x1A4
	private Coroutine m_BlinkCoroutine; // 0x1A8
	private float m_BlinkStartTime; // 0x1B0
	protected int m_DrawStart; // 0x1B4
	protected int m_DrawEnd; // 0x1B8
	private Coroutine m_DragCoroutine; // 0x1C0
	private string m_OriginalText; // 0x1C8
	private bool m_WasCanceled; // 0x1D0
	private bool m_HasDoneFocusTransition; // 0x1D1
	private WaitForSecondsRealtime m_WaitForSecondsRealtime; // 0x1D8
	private const string kEmailSpecialCharacters = "!#$%&\'*+-/=?^_`{|}~";
	private Event m_ProcessingEvent; // 0x1E0
	private const int k_MaxTextLength = 16382;

	// Properties
	private BaseInput input { get; }
	private string compositionString { get; }
	protected Mesh mesh { get; }
	protected TextGenerator cachedInputTextGenerator { get; }
	public bool shouldHideMobileInput { get; set; }
	private bool shouldActivateOnSelect { get; }
	public string text { get; set; }
	public bool isFocused { get; }
	public float caretBlinkRate { get; set; }
	public int caretWidth { get; set; }
	public Text textComponent { get; set; }
	public Graphic placeholder { get; set; }
	public Color caretColor { get; set; }
	public bool customCaretColor { get; set; }
	public Color selectionColor { get; set; }
	public InputField.SubmitEvent onEndEdit { get; set; }
	[ObsoleteAttribute] // RVA: 0xC821E8 Offset: 0xC821E8 VA: 0xC821E8
	public InputField.OnChangeEvent onValueChange { get; set; }
	public InputField.OnChangeEvent onValueChanged { get; set; }
	public InputField.OnValidateInput onValidateInput { get; set; }
	public int characterLimit { get; set; }
	public InputField.ContentType contentType { get; set; }
	public InputField.LineType lineType { get; set; }
	public InputField.InputType inputType { get; set; }
	public TouchScreenKeyboard touchScreenKeyboard { get; }
	public TouchScreenKeyboardType keyboardType { get; set; }
	public InputField.CharacterValidation characterValidation { get; set; }
	public bool readOnly { get; set; }
	public bool multiLine { get; }
	public char asteriskChar { get; set; }
	public bool wasCanceled { get; }
	protected int caretPositionInternal { get; set; }
	protected int caretSelectPositionInternal { get; set; }
	private bool hasSelection { get; }
	public int caretPosition { get; set; }
	public int selectionAnchorPosition { get; set; }
	public int selectionFocusPosition { get; set; }
	private static string clipboard { get; set; }
	public virtual float minWidth { get; }
	public virtual float preferredWidth { get; }
	public virtual float flexibleWidth { get; }
	public virtual float minHeight { get; }
	public virtual float preferredHeight { get; }
	public virtual float flexibleHeight { get; }
	public virtual int layoutPriority { get; }

	// Methods

	// RVA: 0x10229BC Offset: 0x10229BC VA: 0x10229BC
	protected void .ctor() { }

	// RVA: 0x1022D08 Offset: 0x1022D08 VA: 0x1022D08
	private BaseInput get_input() { }

	// RVA: 0x1022E74 Offset: 0x1022E74 VA: 0x1022E74
	private string get_compositionString() { }

	// RVA: 0x1022F20 Offset: 0x1022F20 VA: 0x1022F20
	protected Mesh get_mesh() { }

	// RVA: 0x1022FC4 Offset: 0x1022FC4 VA: 0x1022FC4
	protected TextGenerator get_cachedInputTextGenerator() { }

	// RVA: 0x1023030 Offset: 0x1023030 VA: 0x1023030
	public void set_shouldHideMobileInput(bool value) { }

	// RVA: 0x1023090 Offset: 0x1023090 VA: 0x1023090
	public bool get_shouldHideMobileInput() { }

	// RVA: 0x10230E4 Offset: 0x10230E4 VA: 0x10230E4
	private bool get_shouldActivateOnSelect() { }

	// RVA: 0x1023104 Offset: 0x1023104 VA: 0x1023104
	public string get_text() { }

	// RVA: 0x102310C Offset: 0x102310C VA: 0x102310C
	public void set_text(string value) { }

	// RVA: 0x1023968 Offset: 0x1023968 VA: 0x1023968
	public bool get_isFocused() { }

	// RVA: 0x1023970 Offset: 0x1023970 VA: 0x1023970
	public float get_caretBlinkRate() { }

	// RVA: 0x1023978 Offset: 0x1023978 VA: 0x1023978
	public void set_caretBlinkRate(float value) { }

	// RVA: 0x1023A5C Offset: 0x1023A5C VA: 0x1023A5C
	public int get_caretWidth() { }

	// RVA: 0x1023A64 Offset: 0x1023A64 VA: 0x1023A64
	public void set_caretWidth(int value) { }

	// RVA: 0x1023B48 Offset: 0x1023B48 VA: 0x1023B48
	public Text get_textComponent() { }

	// RVA: 0x1023B50 Offset: 0x1023B50 VA: 0x1023B50
	public void set_textComponent(Text value) { }

	// RVA: 0x1023DE0 Offset: 0x1023DE0 VA: 0x1023DE0
	public Graphic get_placeholder() { }

	// RVA: 0x1023DE8 Offset: 0x1023DE8 VA: 0x1023DE8
	public void set_placeholder(Graphic value) { }

	// RVA: 0x1023E48 Offset: 0x1023E48 VA: 0x1023E48
	public Color get_caretColor() { }

	// RVA: 0x1023EA4 Offset: 0x1023EA4 VA: 0x1023EA4
	public void set_caretColor(Color value) { }

	// RVA: 0x1023E9C Offset: 0x1023E9C VA: 0x1023E9C
	public bool get_customCaretColor() { }

	// RVA: 0x1023EE0 Offset: 0x1023EE0 VA: 0x1023EE0
	public void set_customCaretColor(bool value) { }

	// RVA: 0x1023F04 Offset: 0x1023F04 VA: 0x1023F04
	public Color get_selectionColor() { }

	// RVA: 0x1023F18 Offset: 0x1023F18 VA: 0x1023F18
	public void set_selectionColor(Color value) { }

	// RVA: 0x1023F54 Offset: 0x1023F54 VA: 0x1023F54
	public InputField.SubmitEvent get_onEndEdit() { }

	// RVA: 0x1023F5C Offset: 0x1023F5C VA: 0x1023F5C
	public void set_onEndEdit(InputField.SubmitEvent value) { }

	// RVA: 0x1023FBC Offset: 0x1023FBC VA: 0x1023FBC
	public InputField.OnChangeEvent get_onValueChange() { }

	// RVA: 0x1023FCC Offset: 0x1023FCC VA: 0x1023FCC
	public void set_onValueChange(InputField.OnChangeEvent value) { }

	// RVA: 0x1023FC4 Offset: 0x1023FC4 VA: 0x1023FC4
	public InputField.OnChangeEvent get_onValueChanged() { }

	// RVA: 0x1023FD0 Offset: 0x1023FD0 VA: 0x1023FD0
	public void set_onValueChanged(InputField.OnChangeEvent value) { }

	// RVA: 0x1023528 Offset: 0x1023528 VA: 0x1023528
	public InputField.OnValidateInput get_onValidateInput() { }

	// RVA: 0x1024030 Offset: 0x1024030 VA: 0x1024030
	public void set_onValidateInput(InputField.OnValidateInput value) { }

	// RVA: 0x1023548 Offset: 0x1023548 VA: 0x1023548
	public int get_characterLimit() { }

	// RVA: 0x1024090 Offset: 0x1024090 VA: 0x1024090
	public void set_characterLimit(int value) { }

	// RVA: 0x1024614 Offset: 0x1024614 VA: 0x1024614
	public InputField.ContentType get_contentType() { }

	// RVA: 0x102461C Offset: 0x102461C VA: 0x102461C
	public void set_contentType(InputField.ContentType value) { }

	// RVA: 0x1024764 Offset: 0x1024764 VA: 0x1024764
	public InputField.LineType get_lineType() { }

	// RVA: 0x102476C Offset: 0x102476C VA: 0x102476C
	public void set_lineType(InputField.LineType value) { }

	// RVA: 0x10248E0 Offset: 0x10248E0 VA: 0x10248E0
	public InputField.InputType get_inputType() { }

	// RVA: 0x10248E8 Offset: 0x10248E8 VA: 0x10248E8
	public void set_inputType(InputField.InputType value) { }

	// RVA: 0x102498C Offset: 0x102498C VA: 0x102498C
	public TouchScreenKeyboard get_touchScreenKeyboard() { }

	// RVA: 0x1024994 Offset: 0x1024994 VA: 0x1024994
	public TouchScreenKeyboardType get_keyboardType() { }

	// RVA: 0x102499C Offset: 0x102499C VA: 0x102499C
	public void set_keyboardType(TouchScreenKeyboardType value) { }

	// RVA: 0x1023530 Offset: 0x1023530 VA: 0x1023530
	public InputField.CharacterValidation get_characterValidation() { }

	// RVA: 0x1024A28 Offset: 0x1024A28 VA: 0x1024A28
	public void set_characterValidation(InputField.CharacterValidation value) { }

	// RVA: 0x1024AB4 Offset: 0x1024AB4 VA: 0x1024AB4
	public bool get_readOnly() { }

	// RVA: 0x1024ABC Offset: 0x1024ABC VA: 0x1024ABC
	public void set_readOnly(bool value) { }

	// RVA: 0x1024AC8 Offset: 0x1024AC8 VA: 0x1024AC8
	public bool get_multiLine() { }

	// RVA: 0x1024ADC Offset: 0x1024ADC VA: 0x1024ADC
	public char get_asteriskChar() { }

	// RVA: 0x1024AE4 Offset: 0x1024AE4 VA: 0x1024AE4
	public void set_asteriskChar(char value) { }

	// RVA: 0x1024B60 Offset: 0x1024B60 VA: 0x1024B60
	public bool get_wasCanceled() { }

	// RVA: 0x1024B68 Offset: 0x1024B68 VA: 0x1024B68
	protected void ClampPos(ref int pos) { }

	// RVA: 0x1024BE4 Offset: 0x1024BE4 VA: 0x1024BE4
	protected int get_caretPositionInternal() { }

	// RVA: 0x1024C20 Offset: 0x1024C20 VA: 0x1024C20
	protected void set_caretPositionInternal(int value) { }

	// RVA: 0x1024C30 Offset: 0x1024C30 VA: 0x1024C30
	protected int get_caretSelectPositionInternal() { }

	// RVA: 0x1024C6C Offset: 0x1024C6C VA: 0x1024C6C
	protected void set_caretSelectPositionInternal(int value) { }

	// RVA: 0x1024C7C Offset: 0x1024C7C VA: 0x1024C7C
	private bool get_hasSelection() { }

	// RVA: 0x1024CB0 Offset: 0x1024CB0 VA: 0x1024CB0
	public int get_caretPosition() { }

	// RVA: 0x1024CEC Offset: 0x1024CEC VA: 0x1024CEC
	public void set_caretPosition(int value) { }

	// RVA: 0x1024DE0 Offset: 0x1024DE0 VA: 0x1024DE0
	public int get_selectionAnchorPosition() { }

	// RVA: 0x1024D18 Offset: 0x1024D18 VA: 0x1024D18
	public void set_selectionAnchorPosition(int value) { }

	// RVA: 0x1024E1C Offset: 0x1024E1C VA: 0x1024E1C
	public int get_selectionFocusPosition() { }

	// RVA: 0x1024D7C Offset: 0x1024D7C VA: 0x1024D7C
	public void set_selectionFocusPosition(int value) { }

	// RVA: 0x1024E58 Offset: 0x1024E58 VA: 0x1024E58 Slot: 5
	protected override void OnEnable() { }

	// RVA: 0x10250E8 Offset: 0x10250E8 VA: 0x10250E8 Slot: 7
	protected override void OnDisable() { }

	[DebuggerHiddenAttribute] // RVA: 0xC819D8 Offset: 0xC819D8 VA: 0xC819D8
	// RVA: 0x10254C4 Offset: 0x10254C4 VA: 0x10254C4
	private IEnumerator CaretBlink() { }

	// RVA: 0x102553C Offset: 0x102553C VA: 0x102553C
	private void SetCaretVisible() { }

	// RVA: 0x10239FC Offset: 0x10239FC VA: 0x10239FC
	private void SetCaretActive() { }

	// RVA: 0x1025584 Offset: 0x1025584 VA: 0x1025584
	private void UpdateCaretMaterial() { }

	// RVA: 0x10256C4 Offset: 0x10256C4 VA: 0x10256C4
	protected void OnFocus() { }

	// RVA: 0x10256C8 Offset: 0x10256C8 VA: 0x10256C8
	protected void SelectAll() { }

	// RVA: 0x102571C Offset: 0x102571C VA: 0x102571C
	public void MoveTextEnd(bool shift) { }

	// RVA: 0x1025790 Offset: 0x1025790 VA: 0x1025790
	public void MoveTextStart(bool shift) { }

	// RVA: 0x10257E8 Offset: 0x10257E8 VA: 0x10257E8
	private static string get_clipboard() { }

	// RVA: 0x10257F0 Offset: 0x10257F0 VA: 0x10257F0
	private static void set_clipboard(string value) { }

	// RVA: 0x10257F8 Offset: 0x10257F8 VA: 0x10257F8
	private bool InPlaceEditing() { }

	// RVA: 0x1025818 Offset: 0x1025818 VA: 0x1025818
	private void UpdateCaretFromKeyboard() { }

	// RVA: 0x10258DC Offset: 0x10258DC VA: 0x10258DC Slot: 59
	protected virtual void LateUpdate() { }

	[ObsoleteAttribute] // RVA: 0xC819E8 Offset: 0xC819E8 VA: 0xC819E8
	// RVA: 0x10271B4 Offset: 0x10271B4 VA: 0x10271B4
	public Vector2 ScreenToLocal(Vector2 screen) { }

	// RVA: 0x102754C Offset: 0x102754C VA: 0x102754C
	private int GetUnclampedCharacterLineFromPosition(Vector2 pos, TextGenerator generator) { }

	// RVA: 0x10277BC Offset: 0x10277BC VA: 0x10277BC
	protected int GetCharacterIndexFromPosition(Vector2 pos) { }

	// RVA: 0x1027CF0 Offset: 0x1027CF0 VA: 0x1027CF0
	private bool MayDrag(PointerEventData eventData) { }

	// RVA: 0x1027DE0 Offset: 0x1027DE0 VA: 0x1027DE0 Slot: 60
	public virtual void OnBeginDrag(PointerEventData eventData) { }

	// RVA: 0x1027E0C Offset: 0x1027E0C VA: 0x1027E0C Slot: 61
	public virtual void OnDrag(PointerEventData eventData) { }

	[DebuggerHiddenAttribute] // RVA: 0xC81A20 Offset: 0xC81A20 VA: 0xC81A20
	// RVA: 0x1028038 Offset: 0x1028038 VA: 0x1028038
	private IEnumerator MouseDragOutsideRect(PointerEventData eventData) { }

	// RVA: 0x10280D4 Offset: 0x10280D4 VA: 0x10280D4 Slot: 62
	public virtual void OnEndDrag(PointerEventData eventData) { }

	// RVA: 0x10280FC Offset: 0x10280FC VA: 0x10280FC Slot: 32
	public override void OnPointerDown(PointerEventData eventData) { }

	// RVA: 0x102830C Offset: 0x102830C VA: 0x102830C
	protected InputField.EditState KeyPressed(Event evt) { }

	// RVA: 0x1028E40 Offset: 0x1028E40 VA: 0x1028E40
	private bool IsValidChar(char c) { }

	// RVA: 0x1028EC4 Offset: 0x1028EC4 VA: 0x1028EC4
	public void ProcessEvent(Event e) { }

	// RVA: 0x1028EC8 Offset: 0x1028EC8 VA: 0x1028EC8 Slot: 63
	public virtual void OnUpdateSelected(BaseEventData eventData) { }

	// RVA: 0x10288D0 Offset: 0x10288D0 VA: 0x10288D0
	private string GetSelectedString() { }

	// RVA: 0x102905C Offset: 0x102905C VA: 0x102905C
	private int FindtNextWordBegin() { }

	// RVA: 0x1028D0C Offset: 0x1028D0C VA: 0x1028D0C
	private void MoveRight(bool shift, bool ctrl) { }

	// RVA: 0x102917C Offset: 0x102917C VA: 0x102917C
	private int FindtPrevWordBegin() { }

	// RVA: 0x1028BF0 Offset: 0x1028BF0 VA: 0x1028BF0
	private void MoveLeft(bool shift, bool ctrl) { }

	// RVA: 0x102923C Offset: 0x102923C VA: 0x102923C
	private int DetermineCharacterLine(int charPos, TextGenerator generator) { }

	// RVA: 0x102938C Offset: 0x102938C VA: 0x102938C
	private int LineUpCharacterPosition(int originalPos, bool goToFirstChar) { }

	// RVA: 0x1029758 Offset: 0x1029758 VA: 0x1029758
	private int LineDownCharacterPosition(int originalPos, bool goToLastChar) { }

	// RVA: 0x1028E34 Offset: 0x1028E34 VA: 0x1028E34
	private void MoveDown(bool shift) { }

	// RVA: 0x1029A94 Offset: 0x1029A94 VA: 0x1029A94
	private void MoveDown(bool shift, bool goToLastChar) { }

	// RVA: 0x1028E28 Offset: 0x1028E28 VA: 0x1028E28
	private void MoveUp(bool shift) { }

	// RVA: 0x1029BFC Offset: 0x1029BFC VA: 0x1029BFC
	private void MoveUp(bool shift, bool goToFirstChar) { }

	// RVA: 0x1028990 Offset: 0x1028990 VA: 0x1028990
	private void Delete() { }

	// RVA: 0x10287FC Offset: 0x10287FC VA: 0x10287FC
	private void ForwardSpace() { }

	// RVA: 0x102871C Offset: 0x102871C VA: 0x102871C
	private void Backspace() { }

	// RVA: 0x1029D3C Offset: 0x1029D3C VA: 0x1029D3C
	private void Insert(char c) { }

	// RVA: 0x1023944 Offset: 0x1023944 VA: 0x1023944
	private void SendOnValueChangedAndUpdateLabel() { }

	// RVA: 0x1029E40 Offset: 0x1029E40 VA: 0x1029E40
	private void SendOnValueChanged() { }

	// RVA: 0x1029EBC Offset: 0x1029EBC VA: 0x1029EBC
	protected void SendOnSubmit() { }

	// RVA: 0x1029F38 Offset: 0x1029F38 VA: 0x1029F38 Slot: 64
	protected virtual void Append(string input) { }

	// RVA: 0x102A010 Offset: 0x102A010 VA: 0x102A010 Slot: 65
	protected virtual void Append(char input) { }

	// RVA: 0x1024134 Offset: 0x1024134 VA: 0x1024134
	protected void UpdateLabel() { }

	// RVA: 0x102AE90 Offset: 0x102AE90 VA: 0x102AE90
	private bool IsSelectionVisible() { }

	// RVA: 0x102AF00 Offset: 0x102AF00 VA: 0x102AF00
	private static int GetLineStartPosition(TextGenerator gen, int line) { }

	// RVA: 0x1027B28 Offset: 0x1027B28 VA: 0x1027B28
	private static int GetLineEndPosition(TextGenerator gen, int line) { }

	// RVA: 0x102A14C Offset: 0x102A14C VA: 0x102A14C
	private void SetDrawRangeToContainCaretPosition(int caretPos) { }

	// RVA: 0x102B0AC Offset: 0x102B0AC VA: 0x102B0AC
	public void ForceLabelUpdate() { }

	// RVA: 0x1023AE0 Offset: 0x1023AE0 VA: 0x1023AE0
	private void MarkGeometryAsDirty() { }

	// RVA: 0x102B0B0 Offset: 0x102B0B0 VA: 0x102B0B0 Slot: 66
	public virtual void Rebuild(CanvasUpdate update) { }

	// RVA: 0x102B5F8 Offset: 0x102B5F8 VA: 0x102B5F8 Slot: 67
	public virtual void LayoutComplete() { }

	// RVA: 0x102B5FC Offset: 0x102B5FC VA: 0x102B5FC Slot: 68
	public virtual void GraphicUpdateComplete() { }

	// RVA: 0x102B0C0 Offset: 0x102B0C0 VA: 0x102B0C0
	private void UpdateGeometry() { }

	// RVA: 0x1026138 Offset: 0x1026138 VA: 0x1026138
	private void AssignPositioningIfNeeded() { }

	// RVA: 0x102B600 Offset: 0x102B600 VA: 0x102B600
	private void OnFillVBO(Mesh vbo) { }

	// RVA: 0x102B864 Offset: 0x102B864 VA: 0x102B864
	private void GenerateCaret(VertexHelper vbo, Vector2 roundingOffset) { }

	// RVA: 0x102CC90 Offset: 0x102CC90 VA: 0x102CC90
	private void CreateCursorVerts() { }

	// RVA: 0x102C0E0 Offset: 0x102C0E0 VA: 0x102C0E0
	private void GenerateHightlight(VertexHelper vbo, Vector2 roundingOffset) { }

	// RVA: 0x10269FC Offset: 0x10269FC VA: 0x10269FC
	protected char Validate(string text, int pos, char ch) { }

	// RVA: 0x102CE20 Offset: 0x102CE20 VA: 0x102CE20
	public void ActivateInputField() { }

	// RVA: 0x1025E68 Offset: 0x1025E68 VA: 0x1025E68
	private void ActivateInputFieldInternal() { }

	// RVA: 0x102CF84 Offset: 0x102CF84 VA: 0x102CF84 Slot: 36
	public override void OnSelect(BaseEventData eventData) { }

	// RVA: 0x102CFC8 Offset: 0x102CFC8 VA: 0x102CFC8 Slot: 69
	public virtual void OnPointerClick(PointerEventData eventData) { }

	// RVA: 0x1025320 Offset: 0x1025320 VA: 0x1025320
	public void DeactivateInputField() { }

	// RVA: 0x102D014 Offset: 0x102D014 VA: 0x102D014 Slot: 37
	public override void OnDeselect(BaseEventData eventData) { }

	// RVA: 0x102D044 Offset: 0x102D044 VA: 0x102D044 Slot: 70
	public virtual void OnSubmit(BaseEventData eventData) { }

	// RVA: 0x1024698 Offset: 0x1024698 VA: 0x1024698
	private void EnforceContentType() { }

	// RVA: 0x1022C4C Offset: 0x1022C4C VA: 0x1022C4C
	private void EnforceTextHOverflow() { }

	// RVA: 0x1024838 Offset: 0x1024838 VA: 0x1024838
	private void SetToCustomIfContentTypeIsNot(InputField.ContentType[] allowedContentTypes) { }

	// RVA: 0x1024974 Offset: 0x1024974 VA: 0x1024974
	private void SetToCustom() { }

	// RVA: 0x102D098 Offset: 0x102D098 VA: 0x102D098 Slot: 26
	protected override void DoStateTransition(Selectable.SelectionState state, bool instant) { }

	// RVA: 0x102D0C4 Offset: 0x102D0C4 VA: 0x102D0C4 Slot: 71
	public virtual void CalculateLayoutInputHorizontal() { }

	// RVA: 0x102D0C8 Offset: 0x102D0C8 VA: 0x102D0C8 Slot: 72
	public virtual void CalculateLayoutInputVertical() { }

	// RVA: 0x102D0CC Offset: 0x102D0CC VA: 0x102D0CC Slot: 73
	public virtual float get_minWidth() { }

	// RVA: 0x102D0D4 Offset: 0x102D0D4 VA: 0x102D0D4 Slot: 74
	public virtual float get_preferredWidth() { }

	// RVA: 0x102D268 Offset: 0x102D268 VA: 0x102D268 Slot: 75
	public virtual float get_flexibleWidth() { }

	// RVA: 0x102D270 Offset: 0x102D270 VA: 0x102D270 Slot: 76
	public virtual float get_minHeight() { }

	// RVA: 0x102D278 Offset: 0x102D278 VA: 0x102D278 Slot: 77
	public virtual float get_preferredHeight() { }

	// RVA: 0x102D430 Offset: 0x102D430 VA: 0x102D430 Slot: 78
	public virtual float get_flexibleHeight() { }

	// RVA: 0x102D438 Offset: 0x102D438 VA: 0x102D438 Slot: 79
	public virtual int get_layoutPriority() { }

	// RVA: 0x102D440 Offset: 0x102D440 VA: 0x102D440
	private static void .cctor() { }

	// RVA: 0x102D4BC Offset: 0x102D4BC VA: 0x102D4BC Slot: 46
	private Transform UnityEngine.UI.ICanvasElement.get_transform() { }
}

// Namespace: 
public enum InputField.ContentType // TypeDefIndex: 3087
{
	// Fields
	public int value__; // 0x0
	public const InputField.ContentType Standard = 0;
	public const InputField.ContentType Autocorrected = 1;
	public const InputField.ContentType IntegerNumber = 2;
	public const InputField.ContentType DecimalNumber = 3;
	public const InputField.ContentType Alphanumeric = 4;
	public const InputField.ContentType Name = 5;
	public const InputField.ContentType EmailAddress = 6;
	public const InputField.ContentType Password = 7;
	public const InputField.ContentType Pin = 8;
	public const InputField.ContentType Custom = 9;
}

// Namespace: 
public enum InputField.InputType // TypeDefIndex: 3088
{
	// Fields
	public int value__; // 0x0
	public const InputField.InputType Standard = 0;
	public const InputField.InputType AutoCorrect = 1;
	public const InputField.InputType Password = 2;
}

// Namespace: 
public enum InputField.CharacterValidation // TypeDefIndex: 3089
{
	// Fields
	public int value__; // 0x0
	public const InputField.CharacterValidation None = 0;
	public const InputField.CharacterValidation Integer = 1;
	public const InputField.CharacterValidation Decimal = 2;
	public const InputField.CharacterValidation Alphanumeric = 3;
	public const InputField.CharacterValidation Name = 4;
	public const InputField.CharacterValidation EmailAddress = 5;
}

// Namespace: 
public enum InputField.LineType // TypeDefIndex: 3090
{
	// Fields
	public int value__; // 0x0
	public const InputField.LineType SingleLine = 0;
	public const InputField.LineType MultiLineSubmit = 1;
	public const InputField.LineType MultiLineNewline = 2;
}

// Namespace: 
public sealed class InputField.OnValidateInput : MulticastDelegate // TypeDefIndex: 3091
{
	// Methods

	// RVA: 0x1023538 Offset: 0x1023538 VA: 0x1023538
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1023550 Offset: 0x1023550 VA: 0x1023550 Slot: 11
	public virtual char Invoke(string text, int charIndex, char addedChar) { }

	// RVA: 0x102DB9C Offset: 0x102DB9C VA: 0x102DB9C Slot: 12
	public virtual IAsyncResult BeginInvoke(string text, int charIndex, char addedChar, AsyncCallback callback, object object) { }

	// RVA: 0x102DC58 Offset: 0x102DC58 VA: 0x102DC58 Slot: 13
	public virtual char EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[Serializable]
public class InputField.SubmitEvent : UnityEvent<string> // TypeDefIndex: 3092
{
	// Methods

	// RVA: 0x1022BAC Offset: 0x1022BAC VA: 0x1022BAC
	public void .ctor() { }
}

// Namespace: 
[Serializable]
public class InputField.OnChangeEvent : UnityEvent<string> // TypeDefIndex: 3093
{
	// Methods

	// RVA: 0x1022BFC Offset: 0x1022BFC VA: 0x1022BFC
	public void .ctor() { }
}

// Namespace: 
protected enum InputField.EditState // TypeDefIndex: 3094
{
	// Fields
	public int value__; // 0x0
	public const InputField.EditState Continue = 0;
	public const InputField.EditState Finish = 1;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC7F098 Offset: 0xC7F098 VA: 0xC7F098
private sealed class InputField.<CaretBlink>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 3095
{
	// Fields
	internal float <blinkPeriod>__1; // 0x10
	internal bool <blinkState>__1; // 0x14
	internal InputField $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xC81ED0 Offset: 0xC81ED0 VA: 0xC81ED0
	// RVA: 0x1025534 Offset: 0x1025534 VA: 0x1025534
	public void .ctor() { }

	// RVA: 0x102D4C4 Offset: 0x102D4C4 VA: 0x102D4C4 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xC81EE0 Offset: 0xC81EE0 VA: 0xC81EE0
	// RVA: 0x102D69C Offset: 0x102D69C VA: 0x102D69C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC81EF0 Offset: 0xC81EF0 VA: 0xC81EF0
	// RVA: 0x102D6A4 Offset: 0x102D6A4 VA: 0x102D6A4 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC81F00 Offset: 0xC81F00 VA: 0xC81F00
	// RVA: 0x102D6AC Offset: 0x102D6AC VA: 0x102D6AC Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xC81F10 Offset: 0xC81F10 VA: 0xC81F10
	// RVA: 0x102D6C0 Offset: 0x102D6C0 VA: 0x102D6C0 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC7F0A8 Offset: 0xC7F0A8 VA: 0xC7F0A8
private sealed class InputField.<MouseDragOutsideRect>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 3096
{
	// Fields
	internal Vector2 <position>__1; // 0x10
	internal PointerEventData eventData; // 0x18
	internal Vector2 <localMousePos>__1; // 0x20
	internal Rect <rect>__1; // 0x28
	internal float <delay>__1; // 0x38
	internal InputField $this; // 0x40
	internal object $current; // 0x48
	internal bool $disposing; // 0x50
	internal int $PC; // 0x54

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xC81F20 Offset: 0xC81F20 VA: 0xC81F20
	// RVA: 0x10280CC Offset: 0x10280CC VA: 0x10280CC
	public void .ctor() { }

	// RVA: 0x102D728 Offset: 0x102D728 VA: 0x102D728 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xC81F30 Offset: 0xC81F30 VA: 0xC81F30
	// RVA: 0x102DB10 Offset: 0x102DB10 VA: 0x102DB10 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC81F40 Offset: 0xC81F40 VA: 0xC81F40
	// RVA: 0x102DB18 Offset: 0x102DB18 VA: 0x102DB18 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC81F50 Offset: 0xC81F50 VA: 0xC81F50
	// RVA: 0x102DB20 Offset: 0x102DB20 VA: 0x102DB20 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xC81F60 Offset: 0xC81F60 VA: 0xC81F60
	// RVA: 0x102DB34 Offset: 0x102DB34 VA: 0x102DB34 Slot: 6
	public void Reset() { }
}

// Namespace: UnityEngine.UI
[AddComponentMenu] // RVA: 0xC7E604 Offset: 0xC7E604 VA: 0xC7E604
[ExecuteAlways] // RVA: 0xC7E604 Offset: 0xC7E604 VA: 0xC7E604
[RequireComponent] // RVA: 0xC7E604 Offset: 0xC7E604 VA: 0xC7E604
[DisallowMultipleComponent] // RVA: 0xC7E604 Offset: 0xC7E604 VA: 0xC7E604
public class Mask : UIBehaviour, ICanvasRaycastFilter, IMaterialModifier // TypeDefIndex: 3097
{
	// Fields
	private RectTransform m_RectTransform; // 0x18
	[SerializeField] // RVA: 0xC8079C Offset: 0xC8079C VA: 0xC8079C
	private bool m_ShowMaskGraphic; // 0x20
	private Graphic m_Graphic; // 0x28
	private Material m_MaskMaterial; // 0x30
	private Material m_UnmaskMaterial; // 0x38

	// Properties
	public RectTransform rectTransform { get; }
	public bool showMaskGraphic { get; set; }
	public Graphic graphic { get; }

	// Methods

	// RVA: 0xFF932C Offset: 0xFF932C VA: 0xFF932C
	protected void .ctor() { }

	// RVA: 0xFF933C Offset: 0xFF933C VA: 0xFF933C
	public RectTransform get_rectTransform() { }

	// RVA: 0xFF939C Offset: 0xFF939C VA: 0xFF939C
	public bool get_showMaskGraphic() { }

	// RVA: 0xFF93A4 Offset: 0xFF93A4 VA: 0xFF93A4
	public void set_showMaskGraphic(bool value) { }

	// RVA: 0xFF9484 Offset: 0xFF9484 VA: 0xFF9484
	public Graphic get_graphic() { }

	// RVA: 0xFF94E4 Offset: 0xFF94E4 VA: 0xFF94E4 Slot: 19
	public virtual bool MaskEnabled() { }

	[ObsoleteAttribute] // RVA: 0xC81A30 Offset: 0xC81A30 VA: 0xC81A30
	// RVA: 0xFF9584 Offset: 0xFF9584 VA: 0xFF9584 Slot: 20
	public virtual void OnSiblingGraphicEnabledDisabled() { }

	// RVA: 0xFF9588 Offset: 0xFF9588 VA: 0xFF9588 Slot: 5
	protected override void OnEnable() { }

	// RVA: 0xFF990C Offset: 0xFF990C VA: 0xFF990C Slot: 7
	protected override void OnDisable() { }

	// RVA: 0xFF9C68 Offset: 0xFF9C68 VA: 0xFF9C68 Slot: 21
	public virtual bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera) { }

	// RVA: 0xFF9D30 Offset: 0xFF9D30 VA: 0xFF9D30 Slot: 22
	public virtual Material GetModifiedMaterial(Material baseMaterial) { }
}

// Namespace: UnityEngine.UI
public class MaskUtilities // TypeDefIndex: 3098
{
	// Methods

	// RVA: 0xFFB1E0 Offset: 0xFFB1E0 VA: 0xFFB1E0
	public void .ctor() { }

	// RVA: 0xFFB1E8 Offset: 0xFFB1E8 VA: 0xFFB1E8
	public static void Notify2DMaskStateChanged(Component mask) { }

	// RVA: 0xFF9680 Offset: 0xFF9680 VA: 0xFF9680
	public static void NotifyStencilStateChanged(Component mask) { }

	// RVA: 0xFFA004 Offset: 0xFFA004 VA: 0xFFA004
	public static Transform FindRootSortOverrideCanvas(Transform start) { }

	// RVA: 0xFFA1B0 Offset: 0xFFA1B0 VA: 0xFFA1B0
	public static int GetStencilDepth(Transform transform, Transform stopAfter) { }

	// RVA: 0xFFB478 Offset: 0xFFB478 VA: 0xFFB478
	public static bool IsDescendantOrSelf(Transform father, Transform child) { }

	// RVA: 0xFFB618 Offset: 0xFFB618 VA: 0xFFB618
	public static RectMask2D GetRectMaskForClippable(IClippable clippable) { }

	// RVA: 0xFFBAEC Offset: 0xFFBAEC VA: 0xFFBAEC
	public static void GetRectMasksForClip(RectMask2D clipper, List<RectMask2D> masks) { }
}

// Namespace: UnityEngine.UI
public abstract class MaskableGraphic : Graphic, IClippable, IMaskable, IMaterialModifier // TypeDefIndex: 3099
{
	// Fields
	protected bool m_ShouldRecalculateStencil; // 0x79
	protected Material m_MaskMaterial; // 0x80
	private RectMask2D m_ParentMask; // 0x88
	private bool m_Maskable; // 0x90
	[EditorBrowsableAttribute] // RVA: 0xC807AC Offset: 0xC807AC VA: 0xC807AC
	[ObsoleteAttribute] // RVA: 0xC807AC Offset: 0xC807AC VA: 0xC807AC
	protected bool m_IncludeForMasking; // 0x91
	[SerializeField] // RVA: 0xC80800 Offset: 0xC80800 VA: 0xC80800
	private MaskableGraphic.CullStateChangedEvent m_OnCullStateChanged; // 0x98
	[EditorBrowsableAttribute] // RVA: 0xC80810 Offset: 0xC80810 VA: 0xC80810
	[ObsoleteAttribute] // RVA: 0xC80810 Offset: 0xC80810 VA: 0xC80810
	protected bool m_ShouldRecalculate; // 0xA0
	protected int m_StencilValue; // 0xA4
	private readonly Vector3[] m_Corners; // 0xA8

	// Properties
	public MaskableGraphic.CullStateChangedEvent onCullStateChanged { get; set; }
	public bool maskable { get; set; }
	private Rect rootCanvasRect { get; }

	// Methods

	// RVA: 0xFFBE84 Offset: 0xFFBE84 VA: 0xFFBE84
	protected void .ctor() { }

	// RVA: 0xFFBF8C Offset: 0xFFBF8C VA: 0xFFBF8C
	public MaskableGraphic.CullStateChangedEvent get_onCullStateChanged() { }

	// RVA: 0xFFBF94 Offset: 0xFFBF94 VA: 0xFFBF94
	public void set_onCullStateChanged(MaskableGraphic.CullStateChangedEvent value) { }

	// RVA: 0xFFBF9C Offset: 0xFFBF9C VA: 0xFFBF9C
	public bool get_maskable() { }

	// RVA: 0xFFBFA4 Offset: 0xFFBFA4 VA: 0xFFBFA4
	public void set_maskable(bool value) { }

	// RVA: 0xFFBFDC Offset: 0xFFBFDC VA: 0xFFBFDC Slot: 57
	public virtual Material GetModifiedMaterial(Material baseMaterial) { }

	// RVA: 0xFFC15C Offset: 0xFFC15C VA: 0xFFC15C Slot: 58
	public virtual void Cull(Rect clipRect, bool validRect) { }

	// RVA: 0xFFC4EC Offset: 0xFFC4EC VA: 0xFFC4EC
	private void UpdateCull(bool cull) { }

	// RVA: 0xFFC5F0 Offset: 0xFFC5F0 VA: 0xFFC5F0 Slot: 59
	public virtual void SetClipRect(Rect clipRect, bool validRect) { }

	// RVA: 0xFFC67C Offset: 0xFFC67C VA: 0xFFC67C Slot: 5
	protected override void OnEnable() { }

	// RVA: 0xFFC8D0 Offset: 0xFFC8D0 VA: 0xFFC8D0 Slot: 7
	protected override void OnDisable() { }

	// RVA: 0xFFC9D0 Offset: 0xFFC9D0 VA: 0xFFC9D0 Slot: 12
	protected override void OnTransformParentChanged() { }

	[EditorBrowsableAttribute] // RVA: 0xC81A68 Offset: 0xC81A68 VA: 0xC81A68
	[ObsoleteAttribute] // RVA: 0xC81A68 Offset: 0xC81A68 VA: 0xC81A68
	// RVA: 0xFFCA30 Offset: 0xFFCA30 VA: 0xFFCA30 Slot: 60
	public virtual void ParentMaskStateChanged() { }

	// RVA: 0xFFCA34 Offset: 0xFFCA34 VA: 0xFFCA34 Slot: 15
	protected override void OnCanvasHierarchyChanged() { }

	// RVA: 0xFFC1BC Offset: 0xFFC1BC VA: 0xFFC1BC
	private Rect get_rootCanvasRect() { }

	// RVA: 0xFFC74C Offset: 0xFFC74C VA: 0xFFC74C
	private void UpdateClipParent() { }

	// RVA: 0xFFCC50 Offset: 0xFFCC50 VA: 0xFFCC50 Slot: 61
	public virtual void RecalculateClipping() { }

	// RVA: 0xFFCC54 Offset: 0xFFCC54 VA: 0xFFCC54 Slot: 62
	public virtual void RecalculateMasking() { }

	// RVA: 0xFFCCDC Offset: 0xFFCCDC VA: 0xFFCCDC Slot: 50
	private GameObject UnityEngine.UI.IClippable.get_gameObject() { }
}

// Namespace: 
[Serializable]
public class MaskableGraphic.CullStateChangedEvent : UnityEvent<bool> // TypeDefIndex: 3100
{
	// Methods

	// RVA: 0xFFBF3C Offset: 0xFFBF3C VA: 0xFFBF3C
	public void .ctor() { }
}

// Namespace: UnityEngine.UI
internal static class Misc // TypeDefIndex: 3101
{
	// Methods

	// RVA: 0xFFCCE4 Offset: 0xFFCCE4 VA: 0xFFCCE4
	public static void Destroy(Object obj) { }

	// RVA: 0xFFCE10 Offset: 0xFFCE10 VA: 0xFFCE10
	public static void DestroyImmediate(Object obj) { }
}

// Namespace: UnityEngine.UI
internal static class MultipleDisplayUtilities // TypeDefIndex: 3102
{
	// Methods

	// RVA: 0xFFCEE8 Offset: 0xFFCEE8 VA: 0xFFCEE8
	public static bool GetRelativeMousePositionForDrag(PointerEventData eventData, ref Vector2 position) { }

	// RVA: 0xFFD070 Offset: 0xFFD070 VA: 0xFFD070
	public static Vector2 GetMousePositionRelativeToMainDisplayResolution() { }
}

// Namespace: UnityEngine.UI
[Serializable]
public struct Navigation : IEquatable<Navigation> // TypeDefIndex: 3103
{
	// Fields
	[SerializeField] // RVA: 0xC80864 Offset: 0xC80864 VA: 0xC80864
	private Navigation.Mode m_Mode; // 0x0
	[SerializeField] // RVA: 0xC80874 Offset: 0xC80874 VA: 0xC80874
	private Selectable m_SelectOnUp; // 0x8
	[SerializeField] // RVA: 0xC80884 Offset: 0xC80884 VA: 0xC80884
	private Selectable m_SelectOnDown; // 0x10
	[SerializeField] // RVA: 0xC80894 Offset: 0xC80894 VA: 0xC80894
	private Selectable m_SelectOnLeft; // 0x18
	[SerializeField] // RVA: 0xC808A4 Offset: 0xC808A4 VA: 0xC808A4
	private Selectable m_SelectOnRight; // 0x20

	// Properties
	public Navigation.Mode mode { get; set; }
	public Selectable selectOnUp { get; set; }
