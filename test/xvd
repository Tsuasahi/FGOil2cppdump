	// RVA: 0x1097448 Offset: 0x1097448 VA: 0x1097448
	public static void IsPlayTerminalEffectDisappear_SaveData() { }

	// RVA: 0x10974C8 Offset: 0x10974C8 VA: 0x10974C8
	public static void TerminalSelectedStoryQuestId_SaveData() { }

	// RVA: 0x1097548 Offset: 0x1097548 VA: 0x1097548
	public static void ConnectMark_SaveData() { }

	// RVA: 0x10975E8 Offset: 0x10975E8 VA: 0x10975E8
	public static void CheckClearSelectedStoryQuestId(int questId) { }

	// RVA: 0x10976A4 Offset: 0x10976A4 VA: 0x10976A4
	public static bool IsTerminalEffectPlayed(int effectId) { }

	// RVA: 0x1097868 Offset: 0x1097868 VA: 0x1097868
	public static void PlayedTerminalEffectsSave_SaveData(int effectId) { }

	// RVA: 0x10979D0 Offset: 0x10979D0 VA: 0x10979D0
	public static bool IsWarStartedId(int war_id) { }

	// RVA: 0x1097B7C Offset: 0x1097B7C VA: 0x1097B7C
	public static void SetWarStartedId(int war_id) { }

	// RVA: 0x1095AE0 Offset: 0x1095AE0 VA: 0x1095AE0
	public static void InitMessageWindowData() { }

	// RVA: 0x1096898 Offset: 0x1096898 VA: 0x1096898
	public static void SetFolderLastClickedIdx(int warId, int idx) { }

	// RVA: 0x1097C80 Offset: 0x1097C80 VA: 0x1097C80
	public static int GetFolderLastClickedIdx(int warId) { }

	// RVA: 0x1097D5C Offset: 0x1097D5C VA: 0x1097D5C
	public static void ReceiveQuestEndResultInfo(BattleResultComponent.resultData[] result, bool isWin) { }

	// RVA: 0x109B010 Offset: 0x109B010 VA: 0x109B010
	public static void SaveClearDatas() { }

	// RVA: 0x109B264 Offset: 0x109B264 VA: 0x109B264
	public static void LoadClearDatas() { }

	// RVA: 0x1095928 Offset: 0x1095928 VA: 0x1095928
	public static void DeleteClearDatas() { }

	// RVA: 0x10959F8 Offset: 0x10959F8 VA: 0x10959F8
	private static void DeleteEventRaidDefeatedEffectInfo() { }

	// RVA: 0x109BA94 Offset: 0x109BA94 VA: 0x109BA94
	public static void LoadEventRaidDefeatedEffectInfo() { }

	// RVA: 0x109BB94 Offset: 0x109BB94 VA: 0x109BB94
	public static void UpdateEventRaidDefeatedEffectInfo(int eventId, int day) { }

	// RVA: 0x109BD24 Offset: 0x109BD24 VA: 0x109BD24
	public static void SaveEventRaidDefeatedEffectInfo() { }

	// RVA: 0x109BDBC Offset: 0x109BDBC VA: 0x109BDBC
	public static bool IsPlayedEventRaidDefeatedEffect(int eventId, int day) { }

	// RVA: 0x1095A6C Offset: 0x1095A6C VA: 0x1095A6C
	private static void DeleteQuestRandomGroupList() { }

	// RVA: 0x109BE94 Offset: 0x109BE94 VA: 0x109BE94
	public static void LoadQuestRandomGroupList() { }

	// RVA: 0x109C148 Offset: 0x109C148 VA: 0x109C148
	public static void SaveQuestRandomGroupList() { }

	// RVA: 0x109C414 Offset: 0x109C414 VA: 0x109C414
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD5090 Offset: 0xCD5090 VA: 0xCD5090
	// RVA: 0x109C538 Offset: 0x109C538 VA: 0x109C538
	private static bool <ReceiveQuestEndResultInfo>m__0(QuestReleaseEntity n) { }
}

// Namespace: 
private class TerminalPramsManager.OldHeroineLawData // TypeDefIndex: 11445
{
	// Fields
	public long id; // 0x10
	public long userId; // 0x18
	public int svtId; // 0x20
	public int limitCount; // 0x24
	public int imageLimitCount; // 0x28
	public int dispLimitCount; // 0x2C
	public int commandCardLimitCount; // 0x30
	public int iconLimitCount; // 0x34
	public int lv; // 0x38
	public int exp; // 0x3C
	public int atk; // 0x40
	public int hp; // 0x44
	public int adjustAtk; // 0x48
	public int adjustHp; // 0x4C
	public int skillLv1; // 0x50
	public int skillLv2; // 0x54
	public int skillLv3; // 0x58
	public int treasureDeviceLv1; // 0x5C
	public int exceedCount; // 0x60
	public int status; // 0x64
	public long createdAt; // 0x68

	// Methods

	// RVA: 0xEA3508 Offset: 0xEA3508 VA: 0xEA3508
	public void .ctor() { }

	// RVA: 0xEA3510 Offset: 0xEA3510 VA: 0xEA3510
	public void .ctor(UserServantEntity uSvtEnt) { }

	// RVA: 0xEA36D4 Offset: 0xEA36D4 VA: 0xEA36D4
	public UserServantEntity GetLoad() { }
}

// Namespace: 
private class TerminalPramsManager.QuestClearHeroineInfoForSave // TypeDefIndex: 11446
{
	// Fields
	public TerminalPramsManager.OldHeroineLawData oldUsrSvtData; // 0x10
	public bool isChangeLimitcnt; // 0x18
	public bool isChangeTreasureDvc; // 0x19
	public int treasureDvcId; // 0x1C
	public int treasureDvcLv; // 0x20
	public int oldFriendShipRank; // 0x24
	public bool isFriendShipExceed; // 0x28
	public bool isExceed; // 0x29

	// Methods

	// RVA: 0xEA3318 Offset: 0xEA3318 VA: 0xEA3318
	public void .ctor() { }

	// RVA: 0xEA3340 Offset: 0xEA3340 VA: 0xEA3340
	public void .ctor(QuestClearHeroineInfo qClearHeroineInfo) { }

	// RVA: 0xEA38A4 Offset: 0xEA38A4 VA: 0xEA38A4
	public QuestClearHeroineInfo GetLoad() { }
}

// Namespace: 
public enum TerminalPramsManager.enSceneStatus // TypeDefIndex: 11447
{
	// Fields
	public int value__; // 0x0
	public const TerminalPramsManager.enSceneStatus enNone = 0;
	public const TerminalPramsManager.enSceneStatus enInitialize = 1;
	public const TerminalPramsManager.enSceneStatus enResume = 2;
	public const TerminalPramsManager.enSceneStatus enResumeFromScript = 3;
	public const TerminalPramsManager.enSceneStatus enMAX = 4;
}

// Namespace: 
public enum TerminalPramsManager.eDispState // TypeDefIndex: 11448
{
	// Fields
	public int value__; // 0x0
	public const TerminalPramsManager.eDispState None = 0;
	public const TerminalPramsManager.eDispState Top = 1;
	public const TerminalPramsManager.eDispState Map = 2;
	public const TerminalPramsManager.eDispState Caldea = 3;
	public const TerminalPramsManager.eDispState Story = 4;
	public const TerminalPramsManager.eDispState Hero = 5;
	public const TerminalPramsManager.eDispState MAX = 6;
}

// Namespace: 
public enum TerminalPramsManager.eSpecifiedScene // TypeDefIndex: 11449
{
	// Fields
	public int value__; // 0x0
	public const TerminalPramsManager.eSpecifiedScene None = 0;
	public const TerminalPramsManager.eSpecifiedScene EventReward = 1;
}

// Namespace: 
private class TerminalPramsManager.ClearData // TypeDefIndex: 11450
{
	// Fields
	public static readonly string SAVEKEY_CLEAR_REWARD_DISP; // 0x0
	public TerminalPramsManager.QuestClearHeroineInfoForSave qClearHeroineInfo; // 0x10
	public QuestRewardInfo[] questRewardInfos; // 0x18
	public QuestRewardInfo[] questPhaseRewardInfos; // 0x20
	public bool questClear; // 0x28
	public bool phaseClear; // 0x29
	public int clearedLastBattleRaidId; // 0x2C
	public int clearedBattleRaidId; // 0x30
	public int joinGroup; // 0x34
	public UserSuperBossEntity[] mOldSuperBoss; // 0x38
	public EventPointWinReward evPointWinReward; // 0x40
	public int evPointWinType; // 0x48
	public EventRaceBoostInfo evRaceBoost; // 0x50
	public CostumeReleaseAnnounce[] questClearCostume; // 0x58
	public CostumeReleaseAnnounce[] questClearCostumeGetInfo; // 0x60
	public EventTowerReward eventTowerReward; // 0x68
	public QuestRewardInfo[] resultEventTowerRewardInfo; // 0x70
	public QuestRewardInfo[] resultBoostItemRewardInfo; // 0x78
	public QuestRewardInfo[] resultEventBoardGameTokenRewardInfo; // 0x80
	public bool isDispOnly; // 0x88
	public WarClearReward[] warClearReward; // 0x90
	public int EventActivityPointEffectState; // 0x98
	public bool isWarBoardClear; // 0x9C
	public BattleDropItem[] questResultAfterEventRewardInfos; // 0xA0
	public BattleDropItem[] resultEventPanelRewardInfos; // 0xA8
	public int panelEventPoint; // 0xB0
	public LimitImageAnnounce[] limitImageAnnounces; // 0xB8

	// Methods

	// RVA: 0xEA2F08 Offset: 0xEA2F08 VA: 0xEA2F08
	public void .ctor() { }

	// RVA: 0xEA2FC4 Offset: 0xEA2FC4 VA: 0xEA2FC4
	public void .ctor(QuestClearHeroineInfo qcrHeroineInfo, QuestRewardInfo[] qri, QuestRewardInfo[] questPhaseRewardInfos, bool qClear, bool pclear, int lastRaidId, int raidId, int groupjoin, UserSuperBossEntity[] oldSuperBoss, EventPointWinReward evpWinReward, EventPointVsResultAction.GROUP_WIN evpWinType, EventRaceBoostInfo evRace, CostumeReleaseAnnounce[] questClearCostumeRelease, CostumeReleaseAnnounce[] questClearCostumeGet, EventTowerReward evTowerReward, QuestRewardInfo[] resultEvTowerRewardInfo, bool dispOnly, WarClearReward[] warClearRewardIn, int eventActivityPointEffectState, bool isWarBoardClear, BattleDropItem[] questResultAfterEventRewardInfos, BattleDropItem[] resultEventPanelRewardInfos, int panelEventPoint, LimitImageAnnounce[] limitImageAnnounces) { }

	// RVA: 0xEA34AC Offset: 0xEA34AC VA: 0xEA34AC
	private static void .cctor() { }
}

// Namespace: 
public class UVScrollAnimation : MonoBehaviour // TypeDefIndex: 11451
{
	// Fields
	[SerializeField] // RVA: 0xC7FC94 Offset: 0xC7FC94 VA: 0xC7FC94
	[TooltipAttribute] // RVA: 0xC7FC94 Offset: 0xC7FC94 VA: 0xC7FC94
	private float offsetXPerSec; // 0x18
	[SerializeField] // RVA: 0xC7FCE0 Offset: 0xC7FCE0 VA: 0xC7FCE0
	[TooltipAttribute] // RVA: 0xC7FCE0 Offset: 0xC7FCE0 VA: 0xC7FCE0
	private float offsetYPerSec; // 0x1C
	private const float offsetMaxX = 1;
	private const float offsetMaxY = 1;

	// Methods

	// RVA: 0x1AFBD7C Offset: 0x1AFBD7C VA: 0x1AFBD7C
	public void .ctor() { }

	// RVA: 0x1AFBD84 Offset: 0x1AFBD84 VA: 0x1AFBD84
	private void Start() { }

	// RVA: 0x1AFBD88 Offset: 0x1AFBD88 VA: 0x1AFBD88
	private void Update() { }

	// RVA: 0x1AFBD8C Offset: 0x1AFBD8C VA: 0x1AFBD8C
	public void UpdateUVOffset() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2AA90 Offset: 0xC2AA90 VA: 0xC2AA90
public class BackViewListViewItem : ListViewItem // TypeDefIndex: 11452
{
	// Fields
	protected string path; // 0x70

	// Properties
	public string TitleText { get; }
	public string Path { get; }

	// Methods

	// RVA: 0xF5E35C Offset: 0xF5E35C VA: 0xF5E35C
	public void .ctor(int index, string path) { }

	// RVA: 0xF5E388 Offset: 0xF5E388 VA: 0xF5E388 Slot: 1
	protected override void Finalize() { }

	// RVA: 0xF5E390 Offset: 0xF5E390 VA: 0xF5E390
	public string get_TitleText() { }

	// RVA: 0xF5E400 Offset: 0xF5E400 VA: 0xF5E400
	public string get_Path() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2AAC8 Offset: 0xC2AAC8 VA: 0xC2AAC8
public class BackViewListViewItemDraw : MonoBehaviour // TypeDefIndex: 11453
{
	// Fields
	[SerializeField] // RVA: 0xC7FD2C Offset: 0xC7FD2C VA: 0xC7FD2C
	protected UITexture baseImageTexture; // 0x18
	[SerializeField] // RVA: 0xC7FD3C Offset: 0xC7FD3C VA: 0xC7FD3C
	protected UILabel titleTextLabel; // 0x20

	// Methods

	// RVA: 0xF5E408 Offset: 0xF5E408 VA: 0xF5E408
	public void .ctor() { }

	// RVA: 0xF5E410 Offset: 0xF5E410 VA: 0xF5E410
	public void SetItem(BackViewListViewItem item, BackViewListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public enum BackViewListViewItemDraw.DispMode // TypeDefIndex: 11454
{
	// Fields
	public int value__; // 0x0
	public const BackViewListViewItemDraw.DispMode INVISIBLE = 0;
	public const BackViewListViewItemDraw.DispMode INVALID = 1;
	public const BackViewListViewItemDraw.DispMode VALID = 2;
	public const BackViewListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2AB00 Offset: 0xC2AB00 VA: 0xC2AB00
public class BackViewListViewManager : ListViewManager // TypeDefIndex: 11455
{
	// Fields
	protected BackViewListViewManager.InitMode initMode; // 0x138
	[CompilerGeneratedAttribute] // RVA: 0xC7FD4C Offset: 0xC7FD4C VA: 0xC7FD4C
	[DebuggerBrowsableAttribute] // RVA: 0xC7FD4C Offset: 0xC7FD4C VA: 0xC7FD4C
	private Action callbackFunc; // 0x140
	protected int callbackCount; // 0x148
	protected int callbackIndex; // 0x14C

	// Properties
	public List<BackViewListViewObject> ObjectList { get; }

	// Methods

	// RVA: 0xF5E5B0 Offset: 0xF5E5B0 VA: 0xF5E5B0
	public void .ctor() { }

	// RVA: 0xF5E5B8 Offset: 0xF5E5B8 VA: 0xF5E5B8
	protected void add_callbackFunc(Action value) { }

	// RVA: 0xF5E6A8 Offset: 0xF5E6A8 VA: 0xF5E6A8
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0xF5E798 Offset: 0xF5E798 VA: 0xF5E798
	public List<BackViewListViewObject> get_ObjectList() { }

	// RVA: 0xF5E964 Offset: 0xF5E964 VA: 0xF5E964
	public void CreateList(string[] list) { }

	// RVA: 0xF5EA88 Offset: 0xF5EA88 VA: 0xF5EA88
	public void DestroyList() { }

	// RVA: 0xF5EA90 Offset: 0xF5EA90 VA: 0xF5EA90
	public BackViewListViewItem GetItem(int index) { }

	// RVA: 0xF5EB38 Offset: 0xF5EB38 VA: 0xF5EB38 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0xF5EC70 Offset: 0xF5EC70 VA: 0xF5EC70
	public void SetMode(BackViewListViewManager.InitMode mode) { }

	// RVA: 0xF5EC78 Offset: 0xF5EC78 VA: 0xF5EC78
	public void SetMode(BackViewListViewManager.InitMode mode, Action callback) { }

	// RVA: 0xF5EED8 Offset: 0xF5EED8 VA: 0xF5EED8
	protected void RequestListObject(BackViewListViewObject.InitMode mode, float delay) { }

	// RVA: 0xF5ECE4 Offset: 0xF5ECE4 VA: 0xF5ECE4
	protected void RequestListObject(BackViewListViewObject.InitMode mode) { }

	// RVA: 0xF5F1E8 Offset: 0xF5F1E8 VA: 0xF5F1E8
	protected void OnMoveEnd() { }

	// RVA: 0xF5F2C4 Offset: 0xF5F2C4 VA: 0xF5F2C4
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0xF5F320 Offset: 0xF5F320 VA: 0xF5F320
	public int GetClickResult() { }

	// RVA: 0xF5F328 Offset: 0xF5F328 VA: 0xF5F328
	public string GetNextName(string name) { }
}

// Namespace: 
public enum BackViewListViewManager.InitMode // TypeDefIndex: 11456
{
	// Fields
	public int value__; // 0x0
	public const BackViewListViewManager.InitMode NONE = 0;
	public const BackViewListViewManager.InitMode INPUT = 1;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2AB38 Offset: 0xC2AB38 VA: 0xC2AB38
public class BackViewListViewMenu : MonoBehaviour // TypeDefIndex: 11457
{
	// Fields
	public GameObject rootObject; // 0x18
	public UIButton cancelButton; // 0x20
	public BackViewListViewManager listViewManager; // 0x28
	public UIButton forceObi169Button; // 0x30
	public UISprite forceObi169Sprite; // 0x38
	protected BackViewListViewMenu.State state; // 0x40
	protected string[] backAssetList; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC7FD88 Offset: 0xC7FD88 VA: 0xC7FD88
	[DebuggerBrowsableAttribute] // RVA: 0xC7FD88 Offset: 0xC7FD88 VA: 0xC7FD88
	private BackViewListViewMenu.CallbackFunc callbackFunc; // 0x50

	// Methods

	// RVA: 0xF5F4CC Offset: 0xF5F4CC VA: 0xF5F4CC
	public void .ctor() { }

	// RVA: 0xF5F4D4 Offset: 0xF5F4D4 VA: 0xF5F4D4
	protected void add_callbackFunc(BackViewListViewMenu.CallbackFunc value) { }

	// RVA: 0xF5F5C0 Offset: 0xF5F5C0 VA: 0xF5F5C0
	protected void remove_callbackFunc(BackViewListViewMenu.CallbackFunc value) { }

	// RVA: 0xF5F6AC Offset: 0xF5F6AC VA: 0xF5F6AC
	public void Open(BackViewListViewMenu.CallbackFunc callback) { }

	// RVA: 0xF5F8EC Offset: 0xF5F8EC VA: 0xF5F8EC
	public void Close() { }

	// RVA: 0xF5F7C0 Offset: 0xF5F7C0 VA: 0xF5F7C0
	public void StartInput() { }

	// RVA: 0xF5F954 Offset: 0xF5F954 VA: 0xF5F954
	public void EndInput() { }

	// RVA: 0xF5F9C0 Offset: 0xF5F9C0 VA: 0xF5F9C0
	protected void Callback(bool result) { }

	// RVA: 0xF5FC0C Offset: 0xF5FC0C VA: 0xF5FC0C
	protected void OnClickItem() { }

	// RVA: 0xF5FD20 Offset: 0xF5FD20 VA: 0xF5FD20
	protected void OnEndBackView(bool isExit) { }

	// RVA: 0xF5FDF4 Offset: 0xF5FDF4 VA: 0xF5FDF4
	public void OnClickCancel() { }

	// RVA: 0xF5FE4C Offset: 0xF5FE4C VA: 0xF5FE4C
	public void OnClickClear() { }

	// RVA: 0xF5FEC8 Offset: 0xF5FEC8 VA: 0xF5FEC8
	public void OnClickForceObi169() { }
}

// Namespace: 
protected enum BackViewListViewMenu.State // TypeDefIndex: 11458
{
	// Fields
	public int value__; // 0x0
	public const BackViewListViewMenu.State INIT = 0;
	public const BackViewListViewMenu.State INIT_MOVE = 1;
	public const BackViewListViewMenu.State INPUT = 2;
	public const BackViewListViewMenu.State VIEW_BACK = 3;
	public const BackViewListViewMenu.State SELECTED = 4;
	public const BackViewListViewMenu.State CLOSE = 5;
}

// Namespace: 
public sealed class BackViewListViewMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 11459
{
	// Methods

	// RVA: 0xF5FFA8 Offset: 0xF5FFA8 VA: 0xF5FFA8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xF5F9E0 Offset: 0xF5F9E0 VA: 0xF5F9E0 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0xF5FFB8 Offset: 0xF5FFB8 VA: 0xF5FFB8 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0xF60048 Offset: 0xF60048 VA: 0xF60048 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2AB70 Offset: 0xC2AB70 VA: 0xC2AB70
public class BackViewListViewObject : ListViewObject // TypeDefIndex: 11460
{
	// Fields
	protected BackViewListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC7FDC4 Offset: 0xC7FDC4 VA: 0xC7FDC4
	[DebuggerBrowsableAttribute] // RVA: 0xC7FDC4 Offset: 0xC7FDC4 VA: 0xC7FDC4
	private Action callbackFunc; // 0x70
	protected BackViewListViewItemDraw itemDraw; // 0x78
	protected BackViewListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0xF60054 Offset: 0xF60054 VA: 0xF60054
	public void .ctor() { }

	// RVA: 0xF600BC Offset: 0xF600BC VA: 0xF600BC
	protected void add_callbackFunc(Action value) { }

	// RVA: 0xF601A8 Offset: 0xF601A8 VA: 0xF601A8
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0xF60294 Offset: 0xF60294 VA: 0xF60294
	protected void Awake() { }

	// RVA: 0xF60308 Offset: 0xF60308 VA: 0xF60308
	private void Start() { }

	// RVA: 0xF6031C Offset: 0xF6031C VA: 0xF6031C
	private void OnDestroy() { }

	// RVA: 0xF603C8 Offset: 0xF603C8 VA: 0xF603C8
	public BackViewListViewItem GetItem() { }

	// RVA: 0xF6044C Offset: 0xF6044C VA: 0xF6044C Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0xF60458 Offset: 0xF60458 VA: 0xF60458 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0xF604E0 Offset: 0xF604E0 VA: 0xF604E0
	public void Init(BackViewListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0xF5F0E0 Offset: 0xF5F0E0 VA: 0xF5F0E0
	public void Init(BackViewListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0xF5F164 Offset: 0xF5F164 VA: 0xF5F164
	public void Init(BackViewListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0xF5EBF0 Offset: 0xF5EBF0 VA: 0xF5EBF0
	public void Init(BackViewListViewObject.InitMode initMode) { }

	// RVA: 0xF606A4 Offset: 0xF606A4 VA: 0xF606A4
	protected void SetupDisp() { }

	// RVA: 0xF607B4 Offset: 0xF607B4 VA: 0xF607B4
	protected void EventMoveEnd() { }

	// RVA: 0xF607DC Offset: 0xF607DC VA: 0xF607DC Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum BackViewListViewObject.InitMode // TypeDefIndex: 11461
{
	// Fields
	public int value__; // 0x0
	public const BackViewListViewObject.InitMode INVISIBLE = 0;
	public const BackViewListViewObject.InitMode INVALID = 1;
	public const BackViewListViewObject.InitMode VALID = 2;
	public const BackViewListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum BackViewListViewObject.State // TypeDefIndex: 11462
{
	// Fields
	public int value__; // 0x0
	public const BackViewListViewObject.State INIT = 0;
	public const BackViewListViewObject.State IDLE = 1;
	public const BackViewListViewObject.State MOVE = 2;
	public const BackViewListViewObject.State INPUT = 3;
}

// Namespace: 
public class CostSpriteCheckView : MonoBehaviour // TypeDefIndex: 11463
{
	// Fields
	private static readonly string[] filterNameList; // 0x0
	private int filterMode; // 0x18
	public CostSpriteListManager costSpriteListManager; // 0x20
	public UILabel filterLabel; // 0x28

	// Properties
	private int filterModeMax { get; }
	private int filterModeMin { get; }

	// Methods

	// RVA: 0x1462F0C Offset: 0x1462F0C VA: 0x1462F0C
	public void .ctor() { }

	// RVA: 0x1462F14 Offset: 0x1462F14 VA: 0x1462F14
	private int get_filterModeMax() { }

	// RVA: 0x1462F1C Offset: 0x1462F1C VA: 0x1462F1C
	private int get_filterModeMin() { }

	// RVA: 0x1462F24 Offset: 0x1462F24 VA: 0x1462F24
	private CostSpriteListManager.ListType GetListTypeByFilterMode(int mode) { }

	// RVA: 0x1462F44 Offset: 0x1462F44 VA: 0x1462F44
	public void Setup() { }

	// RVA: 0x146309C Offset: 0x146309C VA: 0x146309C
	public void Init() { }

	// RVA: 0x1463BD4 Offset: 0x1463BD4 VA: 0x1463BD4
	public void OnClickCloseButton() { }

	// RVA: 0x1463C98 Offset: 0x1463C98 VA: 0x1463C98
	public void OnClickFilterButton() { }

	// RVA: 0x1463CB0 Offset: 0x1463CB0 VA: 0x1463CB0
	private void ChangeNextFilterMode() { }

	// RVA: 0x1463CC8 Offset: 0x1463CC8 VA: 0x1463CC8
	private void UpdateDisp(int mode) { }

	// RVA: 0x1463BD8 Offset: 0x1463BD8 VA: 0x1463BD8
	private void Finish() { }

	// RVA: 0x1463E3C Offset: 0x1463E3C VA: 0x1463E3C
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCD50E0 Offset: 0xCD50E0 VA: 0xCD50E0
	// RVA: 0x1463FA4 Offset: 0x1463FA4 VA: 0x1463FA4
	private void <Setup>m__0() { }
}

// Namespace: 
public enum CostSpriteCheckView.FilterMode // TypeDefIndex: 11464
{
	// Fields
	public int value__; // 0x0
	public const CostSpriteCheckView.FilterMode ALL = 0;
	public const CostSpriteCheckView.FilterMode FAILED = 1;
	public const CostSpriteCheckView.FilterMode SUCCESS = 2;
}

// Namespace: 
public class CostSpriteListManager : ListViewManager // TypeDefIndex: 11465
{
	// Fields
	private List<int>[] bannerIdAllList; // 0x138

	// Properties
	private List<int> allBannerIdList { get; }
	private List<int> failedBannerIdList { get; }
	private List<int> successBannerIdList { get; }
	private int listTypeCount { get; }

	// Methods

	// RVA: 0x1463FA8 Offset: 0x1463FA8 VA: 0x1463FA8
	public void .ctor() { }

	// RVA: 0x1463FB0 Offset: 0x1463FB0 VA: 0x1463FB0
	private List<int> get_allBannerIdList() { }

	// RVA: 0x1463FF4 Offset: 0x1463FF4 VA: 0x1463FF4
	private List<int> get_failedBannerIdList() { }

	// RVA: 0x146403C Offset: 0x146403C VA: 0x146403C
	private List<int> get_successBannerIdList() { }

	// RVA: 0x1464084 Offset: 0x1464084 VA: 0x1464084
	private int get_listTypeCount() { }

	// RVA: 0x1463180 Offset: 0x1463180 VA: 0x1463180
	public void Init() { }

	// RVA: 0x1463A50 Offset: 0x1463A50 VA: 0x1463A50
	public void CreateList(CostSpriteListManager.ListType type) { }

	// RVA: 0x1463288 Offset: 0x1463288 VA: 0x1463288
	public void Load() { }

	// RVA: 0x1463E30 Offset: 0x1463E30 VA: 0x1463E30
	public void DestroyList() { }

	// RVA: 0x1463E38 Offset: 0x1463E38 VA: 0x1463E38
	public void Finish() { }

	// RVA: 0x14640B8 Offset: 0x14640B8 VA: 0x14640B8
	private void SortAllList() { }

	// RVA: 0x146416C Offset: 0x146416C VA: 0x146416C
	private void ClearAllList() { }
}

// Namespace: 
public enum CostSpriteListManager.ListType // TypeDefIndex: 11466
{
	// Fields
	public int value__; // 0x0
	public const CostSpriteListManager.ListType ALL = 0;
	public const CostSpriteListManager.ListType FAILED = 1;
	public const CostSpriteListManager.ListType SUCCESS = 2;
}

// Namespace: 
public class CostSpriteViewItem : ListViewItem // TypeDefIndex: 11467
{
	// Fields
	private int id; // 0x70

	// Properties
	public int bannerId { get; }

	// Methods

	// RVA: 0x146408C Offset: 0x146408C VA: 0x146408C
	public void .ctor(int index, int bannerId) { }

	// RVA: 0x1464220 Offset: 0x1464220 VA: 0x1464220
	public int get_bannerId() { }

	// RVA: 0x1464228 Offset: 0x1464228 VA: 0x1464228 Slot: 1
	protected override void Finalize() { }
}

// Namespace: 
public class CostSpriteViewItemDraw : MonoBehaviour // TypeDefIndex: 11468
{
	// Fields
	[SerializeField] // RVA: 0xC7FE00 Offset: 0xC7FE00 VA: 0xC7FE00
	private UISprite costSprite; // 0x18
	[SerializeField] // RVA: 0xC7FE10 Offset: 0xC7FE10 VA: 0xC7FE10
	private UILabel fileNameLable; // 0x20

	// Methods

	// RVA: 0x1464230 Offset: 0x1464230 VA: 0x1464230
	public void .ctor() { }

	// RVA: 0x1464238 Offset: 0x1464238 VA: 0x1464238
	public void SetItem(CostSpriteViewItem viewItem) { }

	// RVA: 0x1464358 Offset: 0x1464358 VA: 0x1464358
	public bool IsCostSpriteEnabled() { }
}

// Namespace: 
public class CostSpriteViewObject : ListViewObject // TypeDefIndex: 11469
{
	// Fields
	protected CostSpriteViewItemDraw itemDraw; // 0x70
	protected GameObject dragObject; // 0x78

	// Methods

	// RVA: 0x1464388 Offset: 0x1464388 VA: 0x1464388
	public void .ctor() { }

	// RVA: 0x14643F0 Offset: 0x14643F0 VA: 0x14643F0
	protected void Awake() { }

	// RVA: 0x1464464 Offset: 0x1464464 VA: 0x1464464
	private void Start() { }

	// RVA: 0x1464504 Offset: 0x1464504 VA: 0x1464504
	private void OnDestroy() { }

	// RVA: 0x1464468 Offset: 0x1464468 VA: 0x1464468
	public void Init() { }

	// RVA: 0x14645B0 Offset: 0x14645B0 VA: 0x14645B0
	public void SetupDisp() { }

	// RVA: 0x14646B0 Offset: 0x14646B0 VA: 0x14646B0
	public bool IsCostSpriteEnabled() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2ABA8 Offset: 0xC2ABA8 VA: 0xC2ABA8
public class DebugListViewItem : ListViewItem // TypeDefIndex: 11470
{
	// Fields
	protected FsmEventData eventData; // 0x70
	protected string titleText; // 0x78

	// Properties
	public string TitleText { get; set; }
	public string EventName { get; }

	// Methods

	// RVA: 0x11F4BEC Offset: 0x11F4BEC VA: 0x11F4BEC
	public void .ctor(int index, FsmEventData eventData) { }

	// RVA: 0x11F4C34 Offset: 0x11F4C34 VA: 0x11F4C34 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x11F4C3C Offset: 0x11F4C3C VA: 0x11F4C3C
	public string get_TitleText() { }

	// RVA: 0x11F4C44 Offset: 0x11F4C44 VA: 0x11F4C44
	public void set_TitleText(string value) { }

	// RVA: 0x11F4C4C Offset: 0x11F4C4C VA: 0x11F4C4C
	public string get_EventName() { }

	// RVA: 0x11F4C7C Offset: 0x11F4C7C VA: 0x11F4C7C
	public DebugListViewObject getDebugListViewObject() { }

	// RVA: 0x11F4DA0 Offset: 0x11F4DA0 VA: 0x11F4DA0
	private string ToString() { }

	// RVA: 0x11F4E18 Offset: 0x11F4E18 VA: 0x11F4E18
	public void SetIndex(int value) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2ABE0 Offset: 0xC2ABE0 VA: 0xC2ABE0
public class DebugListViewItemDraw : MonoBehaviour // TypeDefIndex: 11471
{
	// Fields
	[SerializeField] // RVA: 0xC7FE20 Offset: 0xC7FE20 VA: 0xC7FE20
	protected UITexture baseImageTexture; // 0x18
	[SerializeField] // RVA: 0xC7FE30 Offset: 0xC7FE30 VA: 0xC7FE30
	protected UILabel eventTextLabel; // 0x20

	// Methods

	// RVA: 0x11F4E20 Offset: 0x11F4E20 VA: 0x11F4E20
	public void .ctor() { }

	// RVA: 0x11F4E28 Offset: 0x11F4E28 VA: 0x11F4E28
	public void SetItem(DebugListViewItem item, DebugListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public enum DebugListViewItemDraw.DispMode // TypeDefIndex: 11472
{
	// Fields
	public int value__; // 0x0
	public const DebugListViewItemDraw.DispMode INVISIBLE = 0;
	public const DebugListViewItemDraw.DispMode INVALID = 1;
	public const DebugListViewItemDraw.DispMode VALID = 2;
	public const DebugListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2AC18 Offset: 0xC2AC18 VA: 0xC2AC18
public class DebugListViewManager : ListViewManager // TypeDefIndex: 11473
{
	// Fields
	[SerializeField] // RVA: 0xC7FE40 Offset: 0xC7FE40 VA: 0xC7FE40
	protected FsmEventDataList debugDataList; // 0x138
	protected DebugListViewManager.InitMode initMode; // 0x140
	[CompilerGeneratedAttribute] // RVA: 0xC7FE50 Offset: 0xC7FE50 VA: 0xC7FE50
	[DebuggerBrowsableAttribute] // RVA: 0xC7FE50 Offset: 0xC7FE50 VA: 0xC7FE50
	private Action callbackFunc; // 0x148
	protected int callbackCount; // 0x150

	// Properties
	public List<DebugListViewObject> ObjectList { get; }

	// Methods

	// RVA: 0x11F4FB8 Offset: 0x11F4FB8 VA: 0x11F4FB8
	public void .ctor() { }

	// RVA: 0x11F4FC0 Offset: 0x11F4FC0 VA: 0x11F4FC0
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x11F50B0 Offset: 0x11F50B0 VA: 0x11F50B0
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x11F51A0 Offset: 0x11F51A0 VA: 0x11F51A0
	public List<DebugListViewObject> get_ObjectList() { }

	// RVA: 0x11F536C Offset: 0x11F536C VA: 0x11F536C
	public void CreateList() { }

	// RVA: 0x11F56EC Offset: 0x11F56EC VA: 0x11F56EC
	public void DestroyList() { }

	// RVA: 0x11F54D0 Offset: 0x11F54D0 VA: 0x11F54D0
	public DebugListViewItem GetDebugListViewItem(string eventName) { }

	// RVA: 0x11F56F4 Offset: 0x11F56F4 VA: 0x11F56F4
	public DebugListViewItem GetDebugListViewItem(ListViewObject listViewObject) { }

	// RVA: 0x11F58A8 Offset: 0x11F58A8 VA: 0x11F58A8 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x11F59E0 Offset: 0x11F59E0 VA: 0x11F59E0
	public void SetMode(DebugListViewManager.InitMode mode) { }

	// RVA: 0x11F59E8 Offset: 0x11F59E8 VA: 0x11F59E8
	public void SetMode(DebugListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x11F5C40 Offset: 0x11F5C40 VA: 0x11F5C40
	protected void RequestListObject(DebugListViewObject.InitMode mode, float delay) { }

	// RVA: 0x11F5A4C Offset: 0x11F5A4C VA: 0x11F5A4C
	protected void RequestListObject(DebugListViewObject.InitMode mode) { }

	// RVA: 0x11F5F50 Offset: 0x11F5F50 VA: 0x11F5F50
	protected void OnMoveEnd() { }

	// RVA: 0x11F601C Offset: 0x11F601C VA: 0x11F601C
	protected void OnClickListView(ListViewObject listViewObject) { }
}

// Namespace: 
public enum DebugListViewManager.InitMode // TypeDefIndex: 11474
{
	// Fields
	public int value__; // 0x0
	public const DebugListViewManager.InitMode NONE = 0;
	public const DebugListViewManager.InitMode INPUT = 1;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2AC50 Offset: 0xC2AC50 VA: 0xC2AC50
public class DebugListViewMenu : MonoBehaviour // TypeDefIndex: 11475
{
	// Fields
	public DebugListViewManager listViewManager; // 0x18
	protected DebugListViewMenu.State state; // 0x20

	// Methods

	// RVA: 0x11F6094 Offset: 0x11F6094 VA: 0x11F6094
	public void .ctor() { }

	// RVA: 0x11F609C Offset: 0x11F609C VA: 0x11F609C
	public void Init() { }

	// RVA: 0x11F60FC Offset: 0x11F60FC VA: 0x11F60FC
	public void StartInput() { }
}

// Namespace: 
protected enum DebugListViewMenu.State // TypeDefIndex: 11476
{
	// Fields
	public int value__; // 0x0
	public const DebugListViewMenu.State INIT = 0;
	public const DebugListViewMenu.State INPUT = 1;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2AC88 Offset: 0xC2AC88 VA: 0xC2AC88
public class DebugListViewObject : ListViewObject // TypeDefIndex: 11477
{
	// Fields
	protected DebugListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC7FE8C Offset: 0xC7FE8C VA: 0xC7FE8C
	[DebuggerBrowsableAttribute] // RVA: 0xC7FE8C Offset: 0xC7FE8C VA: 0xC7FE8C
	private Action callbackFunc; // 0x70
	protected DebugListViewItemDraw itemDraw; // 0x78
	protected DebugListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x11F6140 Offset: 0x11F6140 VA: 0x11F6140
	public void .ctor() { }

	// RVA: 0x11F61A8 Offset: 0x11F61A8 VA: 0x11F61A8
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x11F6294 Offset: 0x11F6294 VA: 0x11F6294
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x11F6380 Offset: 0x11F6380 VA: 0x11F6380
	protected void Awake() { }

	// RVA: 0x11F63F4 Offset: 0x11F63F4 VA: 0x11F63F4
	private void Start() { }

	// RVA: 0x11F6408 Offset: 0x11F6408 VA: 0x11F6408
	private void OnDestroy() { }

	// RVA: 0x11F64B4 Offset: 0x11F64B4 VA: 0x11F64B4
	public DebugListViewItem GetItem() { }

	// RVA: 0x11F6538 Offset: 0x11F6538 VA: 0x11F6538 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x11F6544 Offset: 0x11F6544 VA: 0x11F6544 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x11F65CC Offset: 0x11F65CC VA: 0x11F65CC
	public void Init(DebugListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x11F5E48 Offset: 0x11F5E48 VA: 0x11F5E48
	public void Init(DebugListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x11F5ECC Offset: 0x11F5ECC VA: 0x11F5ECC
	public void Init(DebugListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x11F5960 Offset: 0x11F5960 VA: 0x11F5960
	public void Init(DebugListViewObject.InitMode initMode) { }

	// RVA: 0x11F67E8 Offset: 0x11F67E8 VA: 0x11F67E8
	public void SetupDisp() { }

	// RVA: 0x11F67C0 Offset: 0x11F67C0 VA: 0x11F67C0
	protected void EventMoveEnd() { }

	// RVA: 0x11F68F8 Offset: 0x11F68F8 VA: 0x11F68F8 Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum DebugListViewObject.InitMode // TypeDefIndex: 11478
{
	// Fields
	public int value__; // 0x0
	public const DebugListViewObject.InitMode INVISIBLE = 0;
	public const DebugListViewObject.InitMode INVALID = 1;
	public const DebugListViewObject.InitMode VALID = 2;
	public const DebugListViewObject.InitMode FADEIN = 3;
	public const DebugListViewObject.InitMode INTO = 4;
	public const DebugListViewObject.InitMode INPUT = 5;
}
