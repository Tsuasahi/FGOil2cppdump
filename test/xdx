	// RVA: -1 Offset: -1
	public void .ctor(object object, IntPtr method) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x275038C Offset: 0x275038C VA: 0x275038C
	|-MonoProperty.Getter<object, object>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 11
	public virtual R Invoke(T _this) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x275039C Offset: 0x275039C VA: 0x275039C
	|-MonoProperty.Getter<object, object>.Invoke
	*/

	// RVA: -1 Offset: -1 Slot: 12
	public virtual IAsyncResult BeginInvoke(T _this, AsyncCallback callback, object object) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2750740 Offset: 0x2750740 VA: 0x2750740
	|-MonoProperty.Getter<object, object>.BeginInvoke
	*/

	// RVA: -1 Offset: -1 Slot: 13
	public virtual R EndInvoke(IAsyncResult result) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2750764 Offset: 0x2750764 VA: 0x2750764
	|-MonoProperty.Getter<object, object>.EndInvoke
	*/
}

// Namespace: 
private sealed class MonoProperty.StaticGetter<R> : MulticastDelegate // TypeDefIndex: 408
{
	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(object object, IntPtr method) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2750770 Offset: 0x2750770 VA: 0x2750770
	|-MonoProperty.StaticGetter<object>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 11
	public virtual R Invoke() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2750780 Offset: 0x2750780 VA: 0x2750780
	|-MonoProperty.StaticGetter<object>.Invoke
	*/

	// RVA: -1 Offset: -1 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2750984 Offset: 0x2750984 VA: 0x2750984
	|-MonoProperty.StaticGetter<object>.BeginInvoke
	*/

	// RVA: -1 Offset: -1 Slot: 13
	public virtual R EndInvoke(IAsyncResult result) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x27509B8 Offset: 0x27509B8 VA: 0x27509B8
	|-MonoProperty.StaticGetter<object>.EndInvoke
	*/
}

// Namespace: System.Reflection
[FlagsAttribute] // RVA: 0xC32A04 Offset: 0xC32A04 VA: 0xC32A04
[ComVisibleAttribute] // RVA: 0xC32A04 Offset: 0xC32A04 VA: 0xC32A04
[Serializable]
public enum ParameterAttributes // TypeDefIndex: 409
{
	// Fields
	public int value__; // 0x0
	public const ParameterAttributes None = 0;
	public const ParameterAttributes In = 1;
	public const ParameterAttributes Out = 2;
	public const ParameterAttributes Lcid = 4;
	public const ParameterAttributes Retval = 8;
	public const ParameterAttributes Optional = 16;
	public const ParameterAttributes ReservedMask = 61440;
	public const ParameterAttributes HasDefault = 4096;
	public const ParameterAttributes HasFieldMarshal = 8192;
	public const ParameterAttributes Reserved3 = 16384;
	public const ParameterAttributes Reserved4 = 32768;
}

// Namespace: System.Reflection
[ClassInterfaceAttribute] // RVA: 0xC32A40 Offset: 0xC32A40 VA: 0xC32A40
[ComVisibleAttribute] // RVA: 0xC32A40 Offset: 0xC32A40 VA: 0xC32A40
[ComDefaultInterfaceAttribute] // RVA: 0xC32A40 Offset: 0xC32A40 VA: 0xC32A40
[Serializable]
public class ParameterInfo : ICustomAttributeProvider, _ParameterInfo // TypeDefIndex: 410
{
	// Fields
	protected Type ClassImpl; // 0x10
	protected object DefaultValueImpl; // 0x18
	protected MemberInfo MemberImpl; // 0x20
	protected string NameImpl; // 0x28
	protected int PositionImpl; // 0x30
	protected ParameterAttributes AttrsImpl; // 0x34
	private UnmanagedMarshal marshalAs; // 0x38

	// Properties
	public virtual Type ParameterType { get; }
	public virtual ParameterAttributes Attributes { get; }
	public bool IsIn { get; }
	public bool IsOptional { get; }
	public bool IsOut { get; }
	public bool IsRetval { get; }
	public virtual MemberInfo Member { get; }
	public virtual string Name { get; }
	public virtual int Position { get; }

	// Methods

	// RVA: 0x1117D6C Offset: 0x1117D6C VA: 0x1117D6C
	protected void .ctor() { }

	// RVA: 0x10FE28C Offset: 0x10FE28C VA: 0x10FE28C
	internal void .ctor(ParameterBuilder pb, Type type, MemberInfo member, int position) { }

	// RVA: 0x1116C44 Offset: 0x1116C44 VA: 0x1116C44
	internal void .ctor(ParameterInfo pinfo, MemberInfo member) { }

	// RVA: 0x1117D74 Offset: 0x1117D74 VA: 0x1117D74 Slot: 3
	public override string ToString() { }

	// RVA: 0x1117FEC Offset: 0x1117FEC VA: 0x1117FEC Slot: 6
	public virtual Type get_ParameterType() { }

	// RVA: 0x1117FF4 Offset: 0x1117FF4 VA: 0x1117FF4 Slot: 7
	public virtual ParameterAttributes get_Attributes() { }

	// RVA: 0x1117FFC Offset: 0x1117FFC VA: 0x1117FFC
	public bool get_IsIn() { }

	// RVA: 0x111801C Offset: 0x111801C VA: 0x111801C
	public bool get_IsOptional() { }

	// RVA: 0x111803C Offset: 0x111803C VA: 0x111803C
	public bool get_IsOut() { }

	// RVA: 0x1117FCC Offset: 0x1117FCC VA: 0x1117FCC
	public bool get_IsRetval() { }

	// RVA: 0x111805C Offset: 0x111805C VA: 0x111805C Slot: 8
	public virtual MemberInfo get_Member() { }

	// RVA: 0x1118064 Offset: 0x1118064 VA: 0x1118064 Slot: 9
	public virtual string get_Name() { }

	// RVA: 0x111806C Offset: 0x111806C VA: 0x111806C Slot: 10
	public virtual int get_Position() { }

	// RVA: 0x1118074 Offset: 0x1118074 VA: 0x1118074 Slot: 11
	public virtual object[] GetCustomAttributes(Type attributeType, bool inherit) { }

	// RVA: 0x11180F4 Offset: 0x11180F4 VA: 0x11180F4 Slot: 12
	public virtual bool IsDefined(Type attributeType, bool inherit) { }

	// RVA: 0x1118174 Offset: 0x1118174 VA: 0x1118174
	internal object[] GetPseudoCustomAttributes() { }
}

// Namespace: System.Reflection
[ComVisibleAttribute] // RVA: 0xC32ACC Offset: 0xC32ACC VA: 0xC32ACC
[DefaultMemberAttribute] // RVA: 0xC32ACC Offset: 0xC32ACC VA: 0xC32ACC
[Serializable]
public struct ParameterModifier // TypeDefIndex: 411
{
	// Fields
	private bool[] _byref; // 0x0
}

// Namespace: System.Reflection
[CLSCompliantAttribute] // RVA: 0xC32B1C Offset: 0xC32B1C VA: 0xC32B1C
[ComVisibleAttribute] // RVA: 0xC32B1C Offset: 0xC32B1C VA: 0xC32B1C
[Serializable]
public sealed class Pointer : ISerializable // TypeDefIndex: 412
{
	// Fields
	private void* data; // 0x10
	private Type type; // 0x18

	// Methods

	// RVA: 0xF22CD8 Offset: 0xF22CD8 VA: 0xF22CD8
	private void .ctor() { }

	// RVA: 0xF22CE0 Offset: 0xF22CE0 VA: 0xF22CE0 Slot: 4
	private void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0xF22D54 Offset: 0xF22D54 VA: 0xF22D54
	public static object Box(void* ptr, Type type) { }
}

// Namespace: System.Reflection
[FlagsAttribute] // RVA: 0xC32B5C Offset: 0xC32B5C VA: 0xC32B5C
[ComVisibleAttribute] // RVA: 0xC32B5C Offset: 0xC32B5C VA: 0xC32B5C
[Serializable]
public enum PortableExecutableKinds // TypeDefIndex: 413
{
	// Fields
	public int value__; // 0x0
	public const PortableExecutableKinds NotAPortableExecutableImage = 0;
	public const PortableExecutableKinds ILOnly = 1;
	public const PortableExecutableKinds Required32Bit = 2;
	public const PortableExecutableKinds PE32Plus = 4;
	public const PortableExecutableKinds Unmanaged32Bit = 8;
}

// Namespace: System.Reflection
[ComVisibleAttribute] // RVA: 0xC32B98 Offset: 0xC32B98 VA: 0xC32B98
[Serializable]
public enum ProcessorArchitecture // TypeDefIndex: 414
{
	// Fields
	public int value__; // 0x0
	public const ProcessorArchitecture None = 0;
	public const ProcessorArchitecture MSIL = 1;
	public const ProcessorArchitecture X86 = 2;
	public const ProcessorArchitecture IA64 = 3;
	public const ProcessorArchitecture Amd64 = 4;
}

// Namespace: System.Reflection
[FlagsAttribute] // RVA: 0xC32BAC Offset: 0xC32BAC VA: 0xC32BAC
[ComVisibleAttribute] // RVA: 0xC32BAC Offset: 0xC32BAC VA: 0xC32BAC
[Serializable]
public enum PropertyAttributes // TypeDefIndex: 415
{
	// Fields
	public int value__; // 0x0
	public const PropertyAttributes None = 0;
	public const PropertyAttributes SpecialName = 512;
	public const PropertyAttributes ReservedMask = 62464;
	public const PropertyAttributes RTSpecialName = 1024;
	public const PropertyAttributes HasDefault = 4096;
	public const PropertyAttributes Reserved2 = 8192;
	public const PropertyAttributes Reserved3 = 16384;
	public const PropertyAttributes Reserved4 = 32768;
}

// Namespace: System.Reflection
[ClassInterfaceAttribute] // RVA: 0xC32BE8 Offset: 0xC32BE8 VA: 0xC32BE8
[ComVisibleAttribute] // RVA: 0xC32BE8 Offset: 0xC32BE8 VA: 0xC32BE8
[ComDefaultInterfaceAttribute] // RVA: 0xC32BE8 Offset: 0xC32BE8 VA: 0xC32BE8
[Serializable]
public abstract class PropertyInfo : MemberInfo, _PropertyInfo // TypeDefIndex: 416
{
	// Properties
	public abstract PropertyAttributes Attributes { get; }
	public abstract bool CanRead { get; }
	public abstract bool CanWrite { get; }
	public override MemberTypes MemberType { get; }
	public abstract Type PropertyType { get; }

	// Methods

	// RVA: 0xF22E6C Offset: 0xF22E6C VA: 0xF22E6C
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 14
	public abstract PropertyAttributes get_Attributes();

	// RVA: -1 Offset: -1 Slot: 15
	public abstract bool get_CanRead();

	// RVA: -1 Offset: -1 Slot: 16
	public abstract bool get_CanWrite();

	// RVA: 0xF22E74 Offset: 0xF22E74 VA: 0xF22E74 Slot: 7
	public override MemberTypes get_MemberType() { }

	// RVA: -1 Offset: -1 Slot: 17
	public abstract Type get_PropertyType();

	// RVA: -1 Offset: -1 Slot: 18
	public abstract MethodInfo[] GetAccessors(bool nonPublic);

	// RVA: 0xF22E7C Offset: 0xF22E7C VA: 0xF22E7C Slot: 19
	public MethodInfo GetGetMethod() { }

	// RVA: -1 Offset: -1 Slot: 20
	public abstract MethodInfo GetGetMethod(bool nonPublic);

	// RVA: -1 Offset: -1 Slot: 21
	public abstract ParameterInfo[] GetIndexParameters();

	// RVA: 0xF22E90 Offset: 0xF22E90 VA: 0xF22E90 Slot: 22
	public MethodInfo GetSetMethod() { }

	// RVA: -1 Offset: -1 Slot: 23
	public abstract MethodInfo GetSetMethod(bool nonPublic);

	[DebuggerStepThroughAttribute] // RVA: 0xC38F70 Offset: 0xC38F70 VA: 0xC38F70
	[DebuggerHiddenAttribute] // RVA: 0xC38F70 Offset: 0xC38F70 VA: 0xC38F70
	// RVA: 0xF22EA4 Offset: 0xF22EA4 VA: 0xF22EA4 Slot: 24
	public virtual object GetValue(object obj, object[] index) { }

	// RVA: -1 Offset: -1 Slot: 25
	public abstract object GetValue(object obj, BindingFlags invokeAttr, Binder binder, object[] index, CultureInfo culture);

	[DebuggerStepThroughAttribute] // RVA: 0xC38FA8 Offset: 0xC38FA8 VA: 0xC38FA8
	[DebuggerHiddenAttribute] // RVA: 0xC38FA8 Offset: 0xC38FA8 VA: 0xC38FA8
	// RVA: 0xF22EC8 Offset: 0xF22EC8 VA: 0xF22EC8 Slot: 26
	public virtual void SetValue(object obj, object value, object[] index) { }

	// RVA: -1 Offset: -1 Slot: 27
	public abstract void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, object[] index, CultureInfo culture);

	// RVA: 0xF22EEC Offset: 0xF22EEC VA: 0xF22EEC Slot: 28
	public virtual Type[] GetOptionalCustomModifiers() { }

	// RVA: 0xF22F54 Offset: 0xF22F54 VA: 0xF22F54 Slot: 29
	public virtual Type[] GetRequiredCustomModifiers() { }
}

// Namespace: System.Reflection
[ComVisibleAttribute] // RVA: 0xC32C74 Offset: 0xC32C74 VA: 0xC32C74
[FlagsAttribute] // RVA: 0xC32C74 Offset: 0xC32C74 VA: 0xC32C74
[Serializable]
public enum ResourceAttributes // TypeDefIndex: 417
{
	// Fields
	public int value__; // 0x0
	public const ResourceAttributes Public = 1;
	public const ResourceAttributes Private = 2;
}

// Namespace: System.Reflection
[ComVisibleAttribute] // RVA: 0xC32CB0 Offset: 0xC32CB0 VA: 0xC32CB0
[FlagsAttribute] // RVA: 0xC32CB0 Offset: 0xC32CB0 VA: 0xC32CB0
[Serializable]
public enum ResourceLocation // TypeDefIndex: 418
{
	// Fields
	public int value__; // 0x0
	public const ResourceLocation Embedded = 1;
	public const ResourceLocation ContainedInAnotherAssembly = 2;
	public const ResourceLocation ContainedInManifestFile = 4;
}

// Namespace: System.Reflection
[ComVisibleAttribute] // RVA: 0xC32CEC Offset: 0xC32CEC VA: 0xC32CEC
[Serializable]
public class StrongNameKeyPair : ISerializable, IDeserializationCallback // TypeDefIndex: 419
{
	// Fields
	private byte[] _publicKey; // 0x10
	private string _keyPairContainer; // 0x18
	private bool _keyPairExported; // 0x20
	private byte[] _keyPairArray; // 0x28
	private RSA _rsa; // 0x30

	// Methods

	// RVA: 0xF22FBC Offset: 0xF22FBC VA: 0xF22FBC
	protected void .ctor(SerializationInfo info, StreamingContext context) { }

	// RVA: 0xF23214 Offset: 0xF23214 VA: 0xF23214 Slot: 4
	private void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0xF2336C Offset: 0xF2336C VA: 0xF2336C Slot: 5
	private void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) { }

	// RVA: 0xF23370 Offset: 0xF23370 VA: 0xF23370
	private RSA GetRSA() { }

	// RVA: 0xF23444 Offset: 0xF23444 VA: 0xF23444
	internal StrongName StrongName() { }
}

// Namespace: System.Reflection
[ComVisibleAttribute] // RVA: 0xC32D00 Offset: 0xC32D00 VA: 0xC32D00
[Serializable]
public class TargetException : Exception // TypeDefIndex: 420
{
	// Methods

	// RVA: 0xF234EC Offset: 0xF234EC VA: 0xF234EC
	public void .ctor() { }

	// RVA: 0xF2354C Offset: 0xF2354C VA: 0xF2354C
	public void .ctor(string message) { }

	// RVA: 0xF23554 Offset: 0xF23554 VA: 0xF23554
	protected void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System.Reflection
[ComVisibleAttribute] // RVA: 0xC32D14 Offset: 0xC32D14 VA: 0xC32D14
[Serializable]
public sealed class TargetInvocationException : Exception // TypeDefIndex: 421
{
	// Methods

	// RVA: 0xF2355C Offset: 0xF2355C VA: 0xF2355C
	public void .ctor(Exception inner) { }

	// RVA: 0xF235C0 Offset: 0xF235C0 VA: 0xF235C0
	public void .ctor(string message, Exception inner) { }

	// RVA: 0xF235C8 Offset: 0xF235C8 VA: 0xF235C8
	internal void .ctor(SerializationInfo info, StreamingContext sc) { }
}

// Namespace: System.Reflection
[ComVisibleAttribute] // RVA: 0xC32D28 Offset: 0xC32D28 VA: 0xC32D28
[Serializable]
public sealed class TargetParameterCountException : Exception // TypeDefIndex: 422
{
	// Methods

	// RVA: 0xF235D0 Offset: 0xF235D0 VA: 0xF235D0
	public void .ctor() { }

	// RVA: 0xF23630 Offset: 0xF23630 VA: 0xF23630
	public void .ctor(string message) { }

	// RVA: 0xF23638 Offset: 0xF23638 VA: 0xF23638
	internal void .ctor(SerializationInfo info, StreamingContext context) { }
}

// Namespace: System.Reflection
[FlagsAttribute] // RVA: 0xC32D3C Offset: 0xC32D3C VA: 0xC32D3C
[ComVisibleAttribute] // RVA: 0xC32D3C Offset: 0xC32D3C VA: 0xC32D3C
[Serializable]
public enum TypeAttributes // TypeDefIndex: 423
{
	// Fields
	public int value__; // 0x0
	public const TypeAttributes VisibilityMask = 7;
	public const TypeAttributes NotPublic = 0;
	public const TypeAttributes Public = 1;
	public const TypeAttributes NestedPublic = 2;
	public const TypeAttributes NestedPrivate = 3;
	public const TypeAttributes NestedFamily = 4;
	public const TypeAttributes NestedAssembly = 5;
	public const TypeAttributes NestedFamANDAssem = 6;
	public const TypeAttributes NestedFamORAssem = 7;
	public const TypeAttributes LayoutMask = 24;
	public const TypeAttributes AutoLayout = 0;
	public const TypeAttributes SequentialLayout = 8;
	public const TypeAttributes ExplicitLayout = 16;
	public const TypeAttributes ClassSemanticsMask = 32;
	public const TypeAttributes Class = 0;
	public const TypeAttributes Interface = 32;
	public const TypeAttributes Abstract = 128;
	public const TypeAttributes Sealed = 256;
	public const TypeAttributes SpecialName = 1024;
	public const TypeAttributes Import = 4096;
	public const TypeAttributes Serializable = 8192;
	public const TypeAttributes StringFormatMask = 196608;
	public const TypeAttributes AnsiClass = 0;
	public const TypeAttributes UnicodeClass = 65536;
	public const TypeAttributes AutoClass = 131072;
	public const TypeAttributes BeforeFieldInit = 1048576;
	public const TypeAttributes ReservedMask = 264192;
	public const TypeAttributes RTSpecialName = 2048;
	public const TypeAttributes HasSecurity = 262144;
	public const TypeAttributes CustomFormatClass = 196608;
	public const TypeAttributes CustomFormatMask = 12582912;
}

// Namespace: System.Reflection
[ComVisibleAttribute] // RVA: 0xC32D78 Offset: 0xC32D78 VA: 0xC32D78
[Serializable]
public class TypeDelegator : Type // TypeDefIndex: 424
{
	// Fields
	protected Type typeImpl; // 0x18

	// Properties
	public override Assembly Assembly { get; }
	public override string AssemblyQualifiedName { get; }
	public override Type BaseType { get; }
	public override string FullName { get; }
	public override Module Module { get; }
	public override string Name { get; }
	public override string Namespace { get; }
	public override RuntimeTypeHandle TypeHandle { get; }
	public override Type UnderlyingSystemType { get; }

	// Methods

	// RVA: 0xF23640 Offset: 0xF23640 VA: 0xF23640
	protected void .ctor() { }

	// RVA: 0xF236A8 Offset: 0xF236A8 VA: 0xF236A8 Slot: 14
	public override Assembly get_Assembly() { }

	// RVA: 0xF236E0 Offset: 0xF236E0 VA: 0xF236E0 Slot: 15
	public override string get_AssemblyQualifiedName() { }

	// RVA: 0xF23718 Offset: 0xF23718 VA: 0xF23718 Slot: 17
	public override Type get_BaseType() { }

	// RVA: 0xF23750 Offset: 0xF23750 VA: 0xF23750 Slot: 18
	public override string get_FullName() { }

	// RVA: 0xF23788 Offset: 0xF23788 VA: 0xF23788 Slot: 10
	public override Module get_Module() { }

	// RVA: 0xF237BC Offset: 0xF237BC VA: 0xF237BC Slot: 8
	public override string get_Name() { }

	// RVA: 0xF237F0 Offset: 0xF237F0 VA: 0xF237F0 Slot: 34
	public override string get_Namespace() { }

	// RVA: 0xF23828 Offset: 0xF23828 VA: 0xF23828 Slot: 35
	public override RuntimeTypeHandle get_TypeHandle() { }

	// RVA: 0xF23860 Offset: 0xF23860 VA: 0xF23860 Slot: 36
	public override Type get_UnderlyingSystemType() { }

	// RVA: 0xF23898 Offset: 0xF23898 VA: 0xF23898 Slot: 70
	protected override TypeAttributes GetAttributeFlagsImpl() { }

	// RVA: 0xF238C8 Offset: 0xF238C8 VA: 0xF238C8 Slot: 69
	protected override ConstructorInfo GetConstructorImpl(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers) { }

	[ComVisibleAttribute] // RVA: 0xC38FE0 Offset: 0xC38FE0 VA: 0xC38FE0
	// RVA: 0xF23930 Offset: 0xF23930 VA: 0xF23930 Slot: 82
	public override ConstructorInfo[] GetConstructors(BindingFlags bindingAttr) { }

	// RVA: 0xF23970 Offset: 0xF23970 VA: 0xF23970 Slot: 12
	public override object[] GetCustomAttributes(bool inherit) { }

	// RVA: 0xF239AC Offset: 0xF239AC VA: 0xF239AC Slot: 13
	public override object[] GetCustomAttributes(Type attributeType, bool inherit) { }

	// RVA: 0xF239F8 Offset: 0xF239F8 VA: 0xF239F8 Slot: 44
	public override Type GetElementType() { }

	// RVA: 0xF23A30 Offset: 0xF23A30 VA: 0xF23A30 Slot: 46
	public override EventInfo GetEvent(string name, BindingFlags bindingAttr) { }

	// RVA: 0xF23A80 Offset: 0xF23A80 VA: 0xF23A80 Slot: 47
	public override EventInfo[] GetEvents() { }

	// RVA: 0xF23A94 Offset: 0xF23A94 VA: 0xF23A94 Slot: 48
	public override EventInfo[] GetEvents(BindingFlags bindingAttr) { }

	// RVA: 0xF23AD4 Offset: 0xF23AD4 VA: 0xF23AD4 Slot: 50
	public override FieldInfo GetField(string name, BindingFlags bindingAttr) { }

	// RVA: 0xF23B24 Offset: 0xF23B24 VA: 0xF23B24 Slot: 52
	public override FieldInfo[] GetFields(BindingFlags bindingAttr) { }

	// RVA: 0xF23B64 Offset: 0xF23B64 VA: 0xF23B64 Slot: 40
	public override Type[] GetInterfaces() { }

	// RVA: 0xF23B9C Offset: 0xF23B9C VA: 0xF23B9C Slot: 58
	protected override MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers) { }

	// RVA: 0xF23C14 Offset: 0xF23C14 VA: 0xF23C14 Slot: 59
	public override MethodInfo[] GetMethods(BindingFlags bindingAttr) { }

	// RVA: 0xF23C54 Offset: 0xF23C54 VA: 0xF23C54 Slot: 60
	public override Type[] GetNestedTypes(BindingFlags bindingAttr) { }

	// RVA: 0xF23C94 Offset: 0xF23C94 VA: 0xF23C94 Slot: 62
	public override PropertyInfo[] GetProperties(BindingFlags bindingAttr) { }

	// RVA: 0xF23CD4 Offset: 0xF23CD4 VA: 0xF23CD4 Slot: 68
	protected override PropertyInfo GetPropertyImpl(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers) { }

	// RVA: 0xF23D4C Offset: 0xF23D4C VA: 0xF23D4C Slot: 71
	protected override bool HasElementTypeImpl() { }

	// RVA: 0xF23D7C Offset: 0xF23D7C VA: 0xF23D7C Slot: 83
	public override object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, object[] args, ParameterModifier[] modifiers, CultureInfo culture, string[] namedParameters) { }

	// RVA: 0xF23E14 Offset: 0xF23E14 VA: 0xF23E14 Slot: 72
	protected override bool IsArrayImpl() { }

	// RVA: 0xF23E44 Offset: 0xF23E44 VA: 0xF23E44 Slot: 73
	protected override bool IsByRefImpl() { }

	// RVA: 0xF23E74 Offset: 0xF23E74 VA: 0xF23E74 Slot: 11
	public override bool IsDefined(Type attributeType, bool inherit) { }

	// RVA: 0xF23EC0 Offset: 0xF23EC0 VA: 0xF23EC0 Slot: 74
	protected override bool IsPointerImpl() { }

	// RVA: 0xF23EF0 Offset: 0xF23EF0 VA: 0xF23EF0 Slot: 75
	protected override bool IsPrimitiveImpl() { }

	// RVA: 0xF23F20 Offset: 0xF23F20 VA: 0xF23F20 Slot: 76
	protected override bool IsValueTypeImpl() { }
}

// Namespace: System.Resources
[ComVisibleAttribute] // RVA: 0xC32D8C Offset: 0xC32D8C VA: 0xC32D8C
public interface IResourceReader : IEnumerable, IDisposable // TypeDefIndex: 425
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void Close();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract IDictionaryEnumerator GetEnumerator();
}

// Namespace: System.Resources
[ComVisibleAttribute] // RVA: 0xC32DA0 Offset: 0xC32DA0 VA: 0xC32DA0
[AttributeUsageAttribute] // RVA: 0xC32DA0 Offset: 0xC32DA0 VA: 0xC32DA0
public sealed class NeutralResourcesLanguageAttribute : Attribute // TypeDefIndex: 426
{
	// Fields
	private string culture; // 0x10

	// Methods

	// RVA: 0xF2493C Offset: 0xF2493C VA: 0xF2493C
	public void .ctor(string cultureName) { }
}

// Namespace: System.Resources
[ComVisibleAttribute] // RVA: 0xC32DE0 Offset: 0xC32DE0 VA: 0xC32DE0
[Serializable]
public class ResourceManager // TypeDefIndex: 427
{
	// Fields
	private static Hashtable ResourceCache; // 0x0
	private static Hashtable NonExistent; // 0x8
	public static readonly int HeaderVersionNumber; // 0x10
	public static readonly int MagicNumber; // 0x14
	private Type resourceSetType; // 0x10

	// Methods

	// RVA: 0xF249E0 Offset: 0xF249E0 VA: 0xF249E0
	protected void .ctor() { }

	// RVA: 0xF24A64 Offset: 0xF24A64 VA: 0xF24A64
	private static void .cctor() { }
}

// Namespace: System.Resources
internal enum PredefinedResourceType // TypeDefIndex: 428
{
	// Fields
	public int value__; // 0x0
	public const PredefinedResourceType Null = 0;
	public const PredefinedResourceType String = 1;
	public const PredefinedResourceType Bool = 2;
	public const PredefinedResourceType Char = 3;
	public const PredefinedResourceType Byte = 4;
	public const PredefinedResourceType SByte = 5;
	public const PredefinedResourceType Int16 = 6;
	public const PredefinedResourceType UInt16 = 7;
	public const PredefinedResourceType Int32 = 8;
	public const PredefinedResourceType UInt32 = 9;
	public const PredefinedResourceType Int64 = 10;
	public const PredefinedResourceType UInt64 = 11;
	public const PredefinedResourceType Single = 12;
	public const PredefinedResourceType Double = 13;
	public const PredefinedResourceType Decimal = 14;
	public const PredefinedResourceType DateTime = 15;
	public const PredefinedResourceType TimeSpan = 16;
	public const PredefinedResourceType ByteArray = 32;
	public const PredefinedResourceType Stream = 33;
	public const PredefinedResourceType FistCustom = 64;
}

// Namespace: System.Resources
[ComVisibleAttribute] // RVA: 0xC32DF4 Offset: 0xC32DF4 VA: 0xC32DF4
public sealed class ResourceReader : IEnumerable, IDisposable, IResourceReader // TypeDefIndex: 429
{
	// Fields
	private BinaryReader reader; // 0x10
	private object readerLock; // 0x18
	private IFormatter formatter; // 0x20
	internal int resourceCount; // 0x28
	private int typeCount; // 0x2C
	private string[] typeNames; // 0x30
	private int[] hashes; // 0x38
	private ResourceReader.ResourceInfo[] infos; // 0x40
	private int dataSectionOffset; // 0x48
	private long nameSectionOffset; // 0x50
	private int resource_ver; // 0x58
	private ResourceReader.ResourceCacheItem[] cache; // 0x60
	private object cache_lock; // 0x68

	// Methods

	// RVA: 0xF24B38 Offset: 0xF24B38 VA: 0xF24B38
	public void .ctor(Stream stream) { }

	// RVA: 0xF258B0 Offset: 0xF258B0 VA: 0xF258B0
	public void .ctor(string fileName) { }

	// RVA: 0xF259DC Offset: 0xF259DC VA: 0xF259DC Slot: 4
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0xF25A84 Offset: 0xF25A84 VA: 0xF25A84 Slot: 5
	private void System.IDisposable.Dispose() { }

	// RVA: 0xF24CF4 Offset: 0xF24CF4 VA: 0xF24CF4
	private void ReadHeaders() { }

	// RVA: 0xF25B08 Offset: 0xF25B08 VA: 0xF25B08
	private void CreateResourceInfo(long position, ref ResourceReader.ResourceInfo info) { }

	// RVA: 0xF25D1C Offset: 0xF25D1C VA: 0xF25D1C
	private int Read7BitEncodedInt() { }

	// RVA: 0xF25D90 Offset: 0xF25D90 VA: 0xF25D90
	private object ReadValueVer2(int type_index) { }

	// RVA: 0xF26478 Offset: 0xF26478 VA: 0xF26478
	private object ReadValueVer1(Type type) { }

	// RVA: 0xF26324 Offset: 0xF26324 VA: 0xF26324
	private object ReadNonPredefinedValue(Type exp_type) { }

	// RVA: 0xF26B18 Offset: 0xF26B18 VA: 0xF26B18
	private void LoadResourceValues(ResourceReader.ResourceCacheItem[] store) { }

	// RVA: 0xF26E10 Offset: 0xF26E10 VA: 0xF26E10 Slot: 6
	public void Close() { }

	// RVA: 0xF26E50 Offset: 0xF26E50 VA: 0xF26E50 Slot: 7
	public IDictionaryEnumerator GetEnumerator() { }

	// RVA: 0xF25AC4 Offset: 0xF25AC4 VA: 0xF25AC4
	private void Dispose(bool disposing) { }
}

// Namespace: 
private struct ResourceReader.ResourceInfo // TypeDefIndex: 430
{
	// Fields
	public readonly long ValuePosition; // 0x0
	public readonly string ResourceName; // 0x8
	public readonly int TypeIndex; // 0x10

	// Methods

	// RVA: 0xBB7B1C Offset: 0xBB7B1C VA: 0xBB7B1C
	public void .ctor(string resourceName, long valuePosition, int type_index) { }
}

// Namespace: 
private struct ResourceReader.ResourceCacheItem // TypeDefIndex: 431
{
	// Fields
	public readonly string ResourceName; // 0x0
	public readonly object ResourceValue; // 0x8

	// Methods

	// RVA: 0xBB7A74 Offset: 0xBB7A74 VA: 0xBB7A74
	public void .ctor(string name, object value) { }
}

// Namespace: 
internal sealed class ResourceReader.ResourceEnumerator : IEnumerator, IDictionaryEnumerator // TypeDefIndex: 432
{
	// Fields
	private ResourceReader reader; // 0x10
	private int index; // 0x18
	private bool finished; // 0x1C

	// Properties
	public DictionaryEntry Entry { get; }
	public object Key { get; }
	public object Value { get; }
	public object Current { get; }

	// Methods

	// RVA: 0xF26F10 Offset: 0xF26F10 VA: 0xF26F10
	internal void .ctor(ResourceReader readerToEnumerate) { }

	// RVA: 0xF270A4 Offset: 0xF270A4 VA: 0xF270A4 Slot: 7
	public DictionaryEntry get_Entry() { }

	// RVA: 0xF2719C Offset: 0xF2719C VA: 0xF2719C Slot: 8
	public object get_Key() { }

	// RVA: 0xF272B0 Offset: 0xF272B0 VA: 0xF272B0 Slot: 9
	public object get_Value() { }

	// RVA: 0xF273C4 Offset: 0xF273C4 VA: 0xF273C4 Slot: 4
	public object get_Current() { }

	// RVA: 0xF27430 Offset: 0xF27430 VA: 0xF27430 Slot: 5
	public bool MoveNext() { }

	// RVA: 0xF27510 Offset: 0xF27510 VA: 0xF27510 Slot: 6
	public void Reset() { }

	// RVA: 0xF26F48 Offset: 0xF26F48 VA: 0xF26F48
	private void FillCache() { }
}

// Namespace: System.Resources
[ComVisibleAttribute] // RVA: 0xC32E08 Offset: 0xC32E08 VA: 0xC32E08
[Serializable]
public class ResourceSet : IEnumerable, IDisposable // TypeDefIndex: 433
{
	// Fields
	protected IResourceReader Reader; // 0x10
	protected Hashtable Table; // 0x18
	private bool resources_read; // 0x20
	private bool disposed; // 0x21

	// Methods

	// RVA: 0xF275B8 Offset: 0xF275B8 VA: 0xF275B8
	protected void .ctor() { }

	// RVA: 0xF2762C Offset: 0xF2762C VA: 0xF2762C
	public void .ctor(Stream stream) { }

	// RVA: 0xF276C4 Offset: 0xF276C4 VA: 0xF276C4
	internal void .ctor(UnmanagedMemoryStream stream) { }

	// RVA: 0xF2775C Offset: 0xF2775C VA: 0xF2775C
	public void .ctor(string fileName) { }

	// RVA: 0xF277F4 Offset: 0xF277F4 VA: 0xF277F4 Slot: 4
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0xF27800 Offset: 0xF27800 VA: 0xF27800 Slot: 5
	public void Dispose() { }

	// RVA: 0xF27834 Offset: 0xF27834 VA: 0xF27834 Slot: 6
	protected virtual void Dispose(bool disposing) { }

	[ComVisibleAttribute] // RVA: 0xC38FF4 Offset: 0xC38FF4 VA: 0xC38FF4
	// RVA: 0xF27900 Offset: 0xF27900 VA: 0xF27900 Slot: 7
	public virtual IDictionaryEnumerator GetEnumerator() { }

	// RVA: 0xF279BC Offset: 0xF279BC VA: 0xF279BC
	private object GetObjectInternal(string name, bool ignoreCase) { }

	// RVA: 0xF27E30 Offset: 0xF27E30 VA: 0xF27E30 Slot: 8
	public virtual object GetObject(string name) { }

	// RVA: 0xF27E38 Offset: 0xF27E38 VA: 0xF27E38 Slot: 9
	public virtual object GetObject(string name, bool ignoreCase) { }

	// RVA: 0xF27E40 Offset: 0xF27E40 VA: 0xF27E40 Slot: 10
	protected virtual void ReadResources() { }
}

// Namespace: System.Resources
[Serializable]
internal class RuntimeResourceSet : ResourceSet // TypeDefIndex: 434
{
	// Methods

	// RVA: 0xF2821C Offset: 0xF2821C VA: 0xF2821C
	public void .ctor(UnmanagedMemoryStream stream) { }

	// RVA: 0xF28220 Offset: 0xF28220 VA: 0xF28220
	public void .ctor(Stream stream) { }

	// RVA: 0xF28224 Offset: 0xF28224 VA: 0xF28224
	public void .ctor(string fileName) { }

	// RVA: 0xF28228 Offset: 0xF28228 VA: 0xF28228 Slot: 8
	public override object GetObject(string name) { }

	// RVA: 0xF283C0 Offset: 0xF283C0 VA: 0xF283C0 Slot: 9
	public override object GetObject(string name, bool ignoreCase) { }

	// RVA: 0xF282D4 Offset: 0xF282D4 VA: 0xF282D4
	private object CloneDisposableObjectIfPossible(object value) { }
}

// Namespace: System.Resources
[ComVisibleAttribute] // RVA: 0xC32E1C Offset: 0xC32E1C VA: 0xC32E1C
[AttributeUsageAttribute] // RVA: 0xC32E1C Offset: 0xC32E1C VA: 0xC32E1C
public sealed class SatelliteContractVersionAttribute : Attribute // TypeDefIndex: 435
{
	// Fields
	private Version ver; // 0x10

	// Methods

	// RVA: 0xF28470 Offset: 0xF28470 VA: 0xF28470
	public void .ctor(string version) { }
}

// Namespace: System.Resources
internal enum Win32ResourceType // TypeDefIndex: 436
{
	// Fields
	public int value__; // 0x0
	public const Win32ResourceType RT_CURSOR = 1;
	public const Win32ResourceType RT_FONT = 8;
	public const Win32ResourceType RT_BITMAP = 2;
	public const Win32ResourceType RT_ICON = 3;
	public const Win32ResourceType RT_MENU = 4;
	public const Win32ResourceType RT_DIALOG = 5;
	public const Win32ResourceType RT_STRING = 6;
	public const Win32ResourceType RT_FONTDIR = 7;
	public const Win32ResourceType RT_ACCELERATOR = 9;
	public const Win32ResourceType RT_RCDATA = 10;
	public const Win32ResourceType RT_MESSAGETABLE = 11;
	public const Win32ResourceType RT_GROUP_CURSOR = 12;
	public const Win32ResourceType RT_GROUP_ICON = 14;
	public const Win32ResourceType RT_VERSION = 16;
	public const Win32ResourceType RT_DLGINCLUDE = 17;
	public const Win32ResourceType RT_PLUGPLAY = 19;
	public const Win32ResourceType RT_VXD = 20;
	public const Win32ResourceType RT_ANICURSOR = 21;
	public const Win32ResourceType RT_ANIICON = 22;
	public const Win32ResourceType RT_HTML = 23;
}

// Namespace: System.Resources
internal class NameOrId // TypeDefIndex: 437
{
	// Fields
	private string name; // 0x10
	private int id; // 0x18

	// Properties
	public bool IsName { get; }
	public int Id { get; }

	// Methods

	// RVA: 0xF2481C Offset: 0xF2481C VA: 0xF2481C
	public bool get_IsName() { }

	// RVA: 0xF2482C Offset: 0xF2482C VA: 0xF2482C
	public int get_Id() { }

	// RVA: 0xF24834 Offset: 0xF24834 VA: 0xF24834 Slot: 3
	public override string ToString() { }
}

// Namespace: System.Resources
internal abstract class Win32Resource // TypeDefIndex: 438
{
	// Fields
	private NameOrId type; // 0x10
	private NameOrId name; // 0x18

	// Properties
	public Win32ResourceType ResourceType { get; }

	// Methods

	// RVA: 0xF284EC Offset: 0xF284EC VA: 0xF284EC
	public Win32ResourceType get_ResourceType() { }

	// RVA: 0xF2853C Offset: 0xF2853C VA: 0xF2853C Slot: 3
	public override string ToString() { }
}

// Namespace: System.Resources
[DefaultMemberAttribute] // RVA: 0xC32E5C Offset: 0xC32E5C VA: 0xC32E5C
internal class Win32VersionResource : Win32Resource // TypeDefIndex: 439
{}

// Namespace: System.Runtime.CompilerServices
[FlagsAttribute] // RVA: 0xC32E94 Offset: 0xC32E94 VA: 0xC32E94
[ComVisibleAttribute] // RVA: 0xC32E94 Offset: 0xC32E94 VA: 0xC32E94
[Serializable]
public enum CompilationRelaxations // TypeDefIndex: 440
{
	// Fields
	public int value__; // 0x0
	public const CompilationRelaxations NoStringInterning = 8;
}

// Namespace: System.Runtime.CompilerServices
[AttributeUsageAttribute] // RVA: 0xC32ED0 Offset: 0xC32ED0 VA: 0xC32ED0
[ComVisibleAttribute] // RVA: 0xC32ED0 Offset: 0xC32ED0 VA: 0xC32ED0
[Serializable]
public class CompilationRelaxationsAttribute : Attribute // TypeDefIndex: 441
{
	// Fields
	private int relax; // 0x10

	// Methods

	// RVA: 0xF28784 Offset: 0xF28784 VA: 0xF28784
	public void .ctor(int relaxations) { }

	// RVA: 0xF287B0 Offset: 0xF287B0 VA: 0xF287B0
	public void .ctor(CompilationRelaxations relaxations) { }
}

// Namespace: System.Runtime.CompilerServices
