	protected Action closeServantEquipStatusDialogCallback; // 0x330
	protected StonePurchaseMenu stonePurchaseMenu; // 0x338
	protected UserGameActRecoverMenu userGameActRecoverMenu; // 0x340
	protected UserPresentBoxWindow usrPresentListWindow; // 0x348
	protected CommonMultiItemGetDlg commonMultiItemGetDlg; // 0x350
	protected CampaignInfoDlg campaignInfoDlg; // 0x358
	protected PresentBoxNotificationMenu presentBoxNotificationMenu; // 0x360
	protected LogoMain logoMain; // 0x368
	protected Action logoMainCallback; // 0x370
	protected TripleButtonDlgComponent tripleButtonDialog; // 0x378
	protected ServantFrameShortDlgComponent svtFrameShortDialog; // 0x380
	protected UserNameEntryComponent userNameEntry; // 0x388
	protected BoostSupportRequestMenu boostSupportRequestMenu; // 0x390
	protected Action closeBoostSupportRequestMenuCallback; // 0x398
	protected BoostSupportRequestReconfirmationMenu boostSupportRequestReconfirmationMenu; // 0x3A0
	protected Action closeBoostSupportRequestReconfirmationMenuCallback; // 0x3A8
	protected CenterEffectDetailDialog centerEffectDetailDialog; // 0x3B0
	protected Action closeCenterEffectDetailDialogCallback; // 0x3B8
	protected CombineResultEffectComponent combineResEffectComp; // 0x3C0
	protected ClassCompatibilityMenu classCompatibilityMenu; // 0x3C8
	protected Action closeClassCompatibilityMenuCallback; // 0x3D0
	protected RecoverDlgComponent recvDlgComp; // 0x3D8
	protected EventItemSelectDlgComponent eventItemSelectDlgComp; // 0x3E0
	protected ItemDetailInfoComponent itemDetailDlgComp; // 0x3E8
	protected CompleteMissionComponent completeMissionComp; // 0x3F0
	protected MasterMissionComponent masterMissionComp; // 0x3F8
	protected MstProfileComponent masterProfileComp; // 0x400
	protected MissionRewardGetDialog missionRewardGetDlgComp; // 0x408
	protected WarBoardTreasureListComponent warBoardTreasureListComp; // 0x410
	protected TreasureBoxDialogComponent TreasureBoxDlgComp; // 0x418
	protected AssetData costumeReleaseEffectAssetData; // 0x420
	protected AssetData equipGetEffectAssetData; // 0x428
	protected MissionListDlgComponent missionListDlgComp; // 0x430
	protected AssistEffectConfirmDialog assistEffectConfirmDialog; // 0x438
	protected NotificationIconDialog notificationIconDialog; // 0x440
	protected Action closeNotificationIconDialogCallback; // 0x448
	protected ScrollMessageDialog scrollMessageDialog; // 0x450
	protected ScrollMessageDialog scrollMessageSubtitleDialog; // 0x458
	protected Action closeScrollMessageDialogCallback; // 0x460
	protected AchievementExchangeConditionsDialog achievementExchangeConditionsDialog; // 0x468
	protected Action closeAchievementExchangeConditionsDialogCallback; // 0x470
	protected NoTitleDialog noTitleDialog; // 0x478
	protected Action closeNoTitleDialogCallback; // 0x480
	private AssetData itemGetEffectAssetData; // 0x488
	private int itemGetEffectId; // 0x490
	private static readonly string ASSET_DATA_PATH_COIN_ROOM; // 0x40
	private static readonly string ASSET_DATA_EFFECT_COIN_ROOM; // 0x48
	private AssetData coinRoomEffectAssetData; // 0x498
	protected Transform maskParent; // 0x4A0
	protected int maskDepth; // 0x4A8
	[CompilerGeneratedAttribute] // RVA: 0xCB7BE0 Offset: 0xCB7BE0 VA: 0xCB7BE0
	[DebuggerBrowsableAttribute] // RVA: 0xCB7BE0 Offset: 0xCB7BE0 VA: 0xCB7BE0
	private MovieFileMerge <MovieFileMerge>k__BackingField; // 0x4B0
	[CompilerGeneratedAttribute] // RVA: 0xCB7C1C Offset: 0xCB7C1C VA: 0xCB7C1C
	[DebuggerBrowsableAttribute] // RVA: 0xCB7C1C Offset: 0xCB7C1C VA: 0xCB7C1C
	private GameObject <questPhaseRewardObject>k__BackingField; // 0x4B8
	private CommonUI.LoginResultData mLoginResult; // 0x4C0
	[CompilerGeneratedAttribute] // RVA: 0xCB7C58 Offset: 0xCB7C58 VA: 0xCB7C58
	private static Action <>f__am$cache0; // 0x50

	// Properties
	public MovieFileMerge MovieFileMerge { get; set; }
	public GameObject questPhaseRewardObject { get; set; }
	public CompleteMissionComponent completeMissionCompo { get; }
	public MasterMissionComponent masterMissionCompo { get; }

	// Methods

	// RVA: 0x149E2E8 Offset: 0x149E2E8 VA: 0x149E2E8
	public void .ctor() { }

	// RVA: 0x149E340 Offset: 0x149E340 VA: 0x149E340
	public static bool GetForceObi_16_9() { }

	// RVA: 0x149E3F0 Offset: 0x149E3F0 VA: 0x149E3F0
	public static void SetForceObi_16_9(bool flag) { }

	// RVA: 0x149E4D8 Offset: 0x149E4D8 VA: 0x149E4D8
	public bool IsActive_UserPresentBoxWindow() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35120 Offset: 0xD35120 VA: 0xD35120
	// RVA: 0x149E548 Offset: 0x149E548 VA: 0x149E548
	public MovieFileMerge get_MovieFileMerge() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35130 Offset: 0xD35130 VA: 0xD35130
	// RVA: 0x149E550 Offset: 0x149E550 VA: 0x149E550
	private void set_MovieFileMerge(MovieFileMerge value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD35140 Offset: 0xD35140 VA: 0xD35140
	// RVA: 0x149E558 Offset: 0x149E558 VA: 0x149E558
	public GameObject get_questPhaseRewardObject() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35150 Offset: 0xD35150 VA: 0xD35150
	// RVA: 0x149E560 Offset: 0x149E560 VA: 0x149E560
	private void set_questPhaseRewardObject(GameObject value) { }

	// RVA: 0x149E568 Offset: 0x149E568 VA: 0x149E568
	protected void Awake() { }

	// RVA: 0x149E624 Offset: 0x149E624 VA: 0x149E624
	public bool IsActive_ApRecvDlgComp() { }

	// RVA: 0x149E694 Offset: 0x149E694 VA: 0x149E694
	public bool IsActive_EventItemSelectDlgComp() { }

	// RVA: 0x149E704 Offset: 0x149E704 VA: 0x149E704
	public bool IsActive_NotifiDialog() { }

	// RVA: 0x149E7A4 Offset: 0x149E7A4 VA: 0x149E7A4
	public bool IsActive_TutorialBigDialog() { }

	// RVA: 0x149E7D4 Offset: 0x149E7D4 VA: 0x149E7D4
	public bool IsActive_MasterMission() { }

	// RVA: 0x149E844 Offset: 0x149E844 VA: 0x149E844
	public bool IsActive_MasterProfile() { }

	// RVA: 0x149E8B4 Offset: 0x149E8B4 VA: 0x149E8B4
	public bool IsActive_MissionListDialog() { }

	// RVA: 0x149E924 Offset: 0x149E924 VA: 0x149E924
	public bool IsActive_AssistEffectConfirmDialog() { }

	// RVA: 0x149E994 Offset: 0x149E994 VA: 0x149E994
	public bool IsActive_AchievementExchangeConditionsDialog() { }

	// RVA: 0x149EA04 Offset: 0x149EA04 VA: 0x149EA04
	public void Reboot() { }

	// RVA: 0x149FD84 Offset: 0x149FD84 VA: 0x149FD84
	protected GameObject CreateMenu(GameObject prefab) { }

	// RVA: 0x149FFC0 Offset: 0x149FFC0 VA: 0x149FFC0
	protected GameObject CreateMenu(string path) { }

	// RVA: 0x14A024C Offset: 0x14A024C VA: 0x14A024C
	public void initMaskPanel() { }

	// RVA: 0x1496A9C Offset: 0x1496A9C VA: 0x1496A9C
	public void setObiImgSize(int heightSize, int widthSize) { }

	// RVA: 0x14A02EC Offset: 0x14A02EC VA: 0x14A02EC
	private void addLeftPlate(float x, float y) { }

	// RVA: 0x14A0434 Offset: 0x14A0434 VA: 0x14A0434
	public void ShowLeftPlate() { }

	// RVA: 0x14A0468 Offset: 0x14A0468 VA: 0x14A0468
	public void HideLeftPlate() { }

	// RVA: 0x14A049C Offset: 0x14A049C VA: 0x14A049C
	public GameObject GetLeftPlateObject() { }

	// RVA: 0x14A04A4 Offset: 0x14A04A4 VA: 0x14A04A4
	private void addRightPlate(float x, float y) { }

	// RVA: 0x14A05E8 Offset: 0x14A05E8 VA: 0x14A05E8
	public void ShowRightPlate() { }

	// RVA: 0x14A061C Offset: 0x14A061C VA: 0x14A061C
	public void HideRightPlate() { }

	// RVA: 0x14A0650 Offset: 0x14A0650 VA: 0x14A0650
	public GameObject GetRightPlateObject() { }

	// RVA: 0x14A0658 Offset: 0x14A0658 VA: 0x14A0658
	public GameObject GetMaskImgLeftObject() { }

	// RVA: 0x14A0688 Offset: 0x14A0688 VA: 0x14A0688
	public GameObject GetMaskImgRightObject() { }

	// RVA: 0x14A06B8 Offset: 0x14A06B8 VA: 0x14A06B8
	public void setAllocMem(bool flag) { }

	// RVA: 0x14A06F0 Offset: 0x14A06F0 VA: 0x14A06F0
	public void switchingAllocMem() { }

	// RVA: 0x14A06F4 Offset: 0x14A06F4 VA: 0x14A06F4
	public void switchingDebugStatisticsShow() { }

	// RVA: 0x14A06F8 Offset: 0x14A06F8 VA: 0x14A06F8
	public void switchingAssetsInfo() { }

	[ConditionalAttribute] // RVA: 0xD35160 Offset: 0xD35160 VA: 0xD35160
	// RVA: 0x14A07FC Offset: 0x14A07FC VA: 0x14A07FC
	public void switchingSoundInfo() { }

	// RVA: 0x14A0908 Offset: 0x14A0908 VA: 0x14A0908
	public bool maskFadeIsBusy() { }

	// RVA: 0x14A0938 Offset: 0x14A0938 VA: 0x14A0938
	public bool maskFadeIsOnTop() { }

	// RVA: 0x14A0968 Offset: 0x14A0968 VA: 0x14A0968
	public bool maskFadeIsDisp() { }

	// RVA: 0x14A0998 Offset: 0x14A0998 VA: 0x14A0998
	public MaskFade.Kind maskFadGetFadeoutKind() { }

	// RVA: 0x14A09C8 Offset: 0x14A09C8 VA: 0x14A09C8
	public void maskFadeInit() { }

	// RVA: 0x14A09F8 Offset: 0x14A09F8 VA: 0x14A09F8
	public bool maskFadeChangeColor(MaskFade.Kind kind, float duration, Action callback) { }

	// RVA: 0x14A0A50 Offset: 0x14A0A50 VA: 0x14A0A50
	public bool maskFadeout(MaskFade.Kind kind, float duration, Action callback) { }

	// RVA: 0x14A0AA8 Offset: 0x14A0AA8 VA: 0x14A0AA8
	public bool maskFadein(float duration, Action callback) { }

	// RVA: 0x14A0AF0 Offset: 0x14A0AF0 VA: 0x14A0AF0
	public void SetFadeMaskCollider(bool enabled) { }

	// RVA: 0x14A0B28 Offset: 0x14A0B28 VA: 0x14A0B28
	public void SetMaskFadeInitColor(MaskFade.Kind kind) { }

	// RVA: 0x14A0B60 Offset: 0x14A0B60 VA: 0x14A0B60
	public void InitConnect() { }

	// RVA: 0x14A0B90 Offset: 0x14A0B90 VA: 0x14A0B90
	public void SetConnect(bool isConnect) { }

	// RVA: 0x14A0BC8 Offset: 0x14A0BC8 VA: 0x14A0BC8
	public void SetLoadMode(ConnectMark.Mode mode) { }

	// RVA: 0x14A0C00 Offset: 0x14A0C00 VA: 0x14A0C00
	public void SetConnectMarkFadeInLag(ConnectMarkFadeInLagType type) { }

	// RVA: 0x14A0C38 Offset: 0x14A0C38 VA: 0x14A0C38
	public void CheckChangeOtherConnectMark() { }

	// RVA: 0x14A0E78 Offset: 0x14A0E78 VA: 0x14A0E78
	public void CheckChangeOtherConnectMarkFromQuestClear(int questId, int eventId) { }

	// RVA: 0x14A110C Offset: 0x14A110C VA: 0x14A110C
	public void CheckChangeOtherConnectMarkFromEventId(int eventId, bool isUpdate = True) { }

	// RVA: 0x14A1310 Offset: 0x14A1310 VA: 0x14A1310
	public void SetChangeOtherConnectMarkFromPlayerPrefs() { }

	// RVA: 0x14A13A8 Offset: 0x14A13A8 VA: 0x14A13A8
	public bool IsBusyLoad() { }

	// RVA: 0x14A13D8 Offset: 0x14A13D8 VA: 0x14A13D8
	public bool IsLoadMode(ConnectMark.Mode mode) { }

	// RVA: 0x14A1410 Offset: 0x14A1410 VA: 0x14A1410
	public void InitMaskClick() { }

	// RVA: 0x14A1440 Offset: 0x14A1440 VA: 0x14A1440
	public bool IsMaskClick() { }

	// RVA: 0x14A1470 Offset: 0x14A1470 VA: 0x14A1470
	public void SetLoadMiniProgress(float progress) { }

	// RVA: 0x14A14B0 Offset: 0x14A14B0 VA: 0x14A14B0
	public void SetActiveMiniProgressCancelButton(bool enabled) { }

	// RVA: 0x14A14E8 Offset: 0x14A14E8 VA: 0x14A14E8
	public void OpenWarningDialog(string title, string message, ErrorDialog.ClickDelegate func, bool ableToCloseTapOutDialog = True, bool isNetwrokRebootBlock = False) { }

	[DebuggerHiddenAttribute] // RVA: 0xD35198 Offset: 0xD35198 VA: 0xD35198
	// RVA: 0x14A151C Offset: 0x14A151C VA: 0x14A151C
	protected IEnumerator OpenWarningDialogCR(string title, string message, ErrorDialog.ClickDelegate func, bool ableToCloseTapOutDialog, bool isNetwrokRebootBlock) { }

	// RVA: 0x14A162C Offset: 0x14A162C VA: 0x14A162C
	protected void OnEndWarningDialog(bool isDecide) { }

	// RVA: 0x14A165C Offset: 0x14A165C VA: 0x14A165C
	public void OpenErrorDialog(string title, string message, ErrorDialog.ClickDelegate func, bool isNetwrokRebootBlock = False) { }

	[DebuggerHiddenAttribute] // RVA: 0xD351A8 Offset: 0xD351A8 VA: 0xD351A8
	// RVA: 0x14A168C Offset: 0x14A168C VA: 0x14A168C
	protected IEnumerator OpenErrorDialogCR(string title, string message, ErrorDialog.ClickDelegate func, bool isNetwrokRebootBlock) { }

	// RVA: 0x14A1774 Offset: 0x14A1774 VA: 0x14A1774
	protected void OnEndErrorDialog(bool isDecide) { }

	// RVA: 0x14A17A4 Offset: 0x14A17A4 VA: 0x14A17A4
	public void OpenDataUpdateDialog(string title, string message, ErrorDialog.ClickDelegate func, bool isNetwrokRebootBlock = False) { }

	[DebuggerHiddenAttribute] // RVA: 0xD351B8 Offset: 0xD351B8 VA: 0xD351B8
	// RVA: 0x14A17D4 Offset: 0x14A17D4 VA: 0x14A17D4
	protected IEnumerator OpenDataUpdateDialogCR(string title, string message, ErrorDialog.ClickDelegate func, bool isNetwrokRebootBlock) { }

	// RVA: 0x14A18BC Offset: 0x14A18BC VA: 0x14A18BC
	protected void OnEndDataUpdateDialog(bool isDecide) { }

	// RVA: 0x14A18EC Offset: 0x14A18EC VA: 0x14A18EC
	public bool isBusyDataUpdateDialog() { }

	// RVA: 0x14A191C Offset: 0x14A191C VA: 0x14A191C
	public void OpenRetryDialog(string title, string message, ErrorDialog.ClickDelegate func, bool isNetwrokRebootBlock = False) { }

	// RVA: 0x14A1A78 Offset: 0x14A1A78 VA: 0x14A1A78
	public void OpenRetryDialog(string title, string message, string decideTxt, string cancleTxt, ErrorDialog.ClickDelegate func, bool isNetwrokRebootBlock = False) { }

	[DebuggerHiddenAttribute] // RVA: 0xD351C8 Offset: 0xD351C8 VA: 0xD351C8
	// RVA: 0x14A195C Offset: 0x14A195C VA: 0x14A195C
	protected IEnumerator OpenRetryDialogCR(string title, string message, string decideTxt, string cancleTxt, ErrorDialog.ClickDelegate func, bool isNetwrokRebootBlock) { }

	// RVA: 0x14A1AA8 Offset: 0x14A1AA8 VA: 0x14A1AA8
	public void CloseRetryDialog() { }

	// RVA: 0x14A1AD8 Offset: 0x14A1AD8 VA: 0x14A1AD8
	protected void OnEndRetryDialog(bool isDecide) { }

	// RVA: 0x14A1B08 Offset: 0x14A1B08 VA: 0x14A1B08
	public void OpenRetryBootDialog(string title, string message, ErrorDialog.ClickDelegate func, bool isNetwrokRebootBlock = False) { }

	[DebuggerHiddenAttribute] // RVA: 0xD351D8 Offset: 0xD351D8 VA: 0xD351D8
	// RVA: 0x14A1B38 Offset: 0x14A1B38 VA: 0x14A1B38
	protected IEnumerator OpenRetryBootDialogCR(string title, string message, ErrorDialog.ClickDelegate func, bool isNetwrokRebootBlock) { }

	// RVA: 0x14A1C20 Offset: 0x14A1C20 VA: 0x14A1C20
	protected void OnEndRetryBootDialog(bool isDecide) { }

	// RVA: 0x14A1C50 Offset: 0x14A1C50 VA: 0x14A1C50
	private bool isBusyDialog() { }

	// RVA: 0x14A1D14 Offset: 0x14A1D14 VA: 0x14A1D14
	public void OpenConfirmDialog(string title, string message, CommonConfirmDialog.ClickDelegate func, int fontsize = 0, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0) { }

	// RVA: 0x14A1D8C Offset: 0x14A1D8C VA: 0x14A1D8C
	public void OpenConfirmDialog(string title, string message, string decideTxt, string cancleTxt, CommonConfirmDialog.ClickDelegate func, int fontsize = 0, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0) { }

	// RVA: 0x14A1E1C Offset: 0x14A1E1C VA: 0x14A1E1C
	public void OpenConfirmDialog(string title, string message, string decideTxt, string cancleTxt, bool isDecideSe, CommonConfirmDialog.ClickDelegate func, int titleFontSize, int messageFontSize, float titlePosY, float messagePosY, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0) { }

	// RVA: 0x14A1EE0 Offset: 0x14A1EE0 VA: 0x14A1EE0
	public void OpenConfirmDecideDlg(string title, string message, string decideTxt, string cancleTxt, CommonConfirmDialog.ClickDelegate func, int fontsize = 0, float windowPosY = 0, float messagePosY = 15, int spacingY = 0, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0, int messageLabelHeight = 240, NGUIText.Alignment alignment = 0) { }

	// RVA: 0x14A1FA4 Offset: 0x14A1FA4 VA: 0x14A1FA4
	public void OpenConfirmDecideDlg(string title, string message, string decideTxt, string cancleTxt, bool isDecideSe, CommonConfirmDialog.ClickDelegate func, Vector2Int messageWidgetSize, int fontsize = 0, float messagePosY = 15, int spacingY = 0, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0) { }

	// RVA: 0x14A205C Offset: 0x14A205C VA: 0x14A205C
	public void OpenConfirmDialog(string title, string message, bool isDecideSe, CommonConfirmDialog.ClickDelegate func, int fontsize = 0, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0, bool setCondensedScale = False) { }

	// RVA: 0x14A20F0 Offset: 0x14A20F0 VA: 0x14A20F0
	public void OpenConfirmDialog(string title, string message, string decideTxt, string cancelTxt, bool isDecideSe, CommonConfirmDialog.ClickDelegate func, int fontsize = 0, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0) { }

	// RVA: 0x14A218C Offset: 0x14A218C VA: 0x14A218C
	public void OpenConfirmDialog(string title, string message, string decideTxt, string cancleTxt, CommonConfirmDialog.ClickDelegate func, int fontsize, int minFontSize, float messagePosY = 15, int messageWidth = 700, NGUIText.Alignment alignment = 0, int windowHeight = 480, float buttonPosY = -162.5, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0) { }

	// RVA: 0x14A2258 Offset: 0x14A2258 VA: 0x14A2258
	public void CloseConfirmDialog() { }

	// RVA: 0x14A2288 Offset: 0x14A2288 VA: 0x14A2288
	public void CloseConfirmDialog(Action callback) { }

	// RVA: 0x14A22C0 Offset: 0x14A22C0 VA: 0x14A22C0
	public void OpenConfirmDialogOnFade(string title, string message, string decideText, string cancelText, CommonConfirmDialog.ClickDelegate func, int fontsize = 0, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0) { }

	// RVA: 0x14A23B8 Offset: 0x14A23B8 VA: 0x14A23B8
	public void OpenNotificationDialog(string title, string message, Action func, int panel_depth = -1, int maxLine = 0, int titleSize = 0, bool isLineDraw = False, bool canMaskTouchClose = False, int messageFontSize = 0, SeManager.SystemSeKind onClickOkSeKind = 1, int spacingY = 0) { }

	// RVA: 0x14A24D4 Offset: 0x14A24D4 VA: 0x14A24D4
	public void OpenNotificationDialog(string title, string message, Action func, float messagePosY, float buttonPosY, int panel_depth = -1, int maxLine = 0, int titleSize = 0, bool isLineDraw = False, bool canMaskTouchClose = False, int messageFontSize = 0, SeManager.SystemSeKind onClickOkSeKind = 1) { }

	// RVA: 0x14A25EC Offset: 0x14A25EC VA: 0x14A25EC
	public void OpenNotificationDialog(string title, string message, NotificationDialog.ClickDelegate func, float messagePosY, float buttonPosY, int panel_depth = -1, int maxLine = 0, int titleSize = 0, bool isLineDraw = False, bool canMaskTouchClose = False, int messageFontSize = 0, SeManager.SystemSeKind onClickOkSeKind = 1) { }

	// RVA: 0x14A26B4 Offset: 0x14A26B4 VA: 0x14A26B4
	public void OpenNotificationDialogOnFade(string title, string message, Action func, int panel_depth = -1, int maxLine = 0, int titleSize = 0, bool isLineDraw = False, bool canMaskTouchClose = False, int messageFontSize = 0, SeManager.SystemSeKind onClickOkSeKind = 1) { }

	// RVA: 0x14A2814 Offset: 0x14A2814 VA: 0x14A2814
	public void OpenNotificationDialogWithScript(string title, string message, Action func, Dictionary<string, object> script, int panel_depth = -1, int maxLine = 0, int titleSize = 0, bool isLineDraw = False, bool canMaskTouchClose = False, SeManager.SystemSeKind onClickOkSeKind = 1) { }

	// RVA: 0x14A29DC Offset: 0x14A29DC VA: 0x14A29DC
	protected void SelectNotificationDialog(bool result) { }

	// RVA: 0x14A2A18 Offset: 0x14A2A18 VA: 0x14A2A18
	public void OpenNotificationDialog(string title, string message, NotificationDialog.ClickDelegate func, int panel_depth = -1, int maxLine = 0, int titleSize = 0, bool isLineDraw = False, bool canMaskTouchClose = False, SeManager.SystemSeKind onClickOkSeKind = 1, Nullable<float> titlePosY, Nullable<float> messagePosY, int messageFontSize = 0, int spacingY = 0, Nullable<int> messageWidgetSizeY, bool adjustText = True, Nullable<float> buttonPosY, Nullable<int> buttonWidgetSizeX, Nullable<int> buttonWidgetSizeY) { }

	// RVA: 0x14A2AF0 Offset: 0x14A2AF0 VA: 0x14A2AF0
	public void OpenNotificationDialogAboveMask(string title, string message, NotificationDialog.ClickDelegate func, int panel_depth = -1, int maxLine = 0, int titleSize = 0, bool isLineDraw = False, bool canMaskTouchClose = False, SeManager.SystemSeKind onClickOkSeKind = 1, Nullable<float> titlePosY, Nullable<float> messagePosY) { }

	// RVA: 0x14A2C78 Offset: 0x14A2C78 VA: 0x14A2C78
	public void CloseNotificationDialog() { }

	// RVA: 0x14A2CA8 Offset: 0x14A2CA8 VA: 0x14A2CA8
	public void CloseNotificationDialog(Action callback) { }

	// RVA: 0x14A2CE0 Offset: 0x14A2CE0 VA: 0x14A2CE0
	public void OpenPopupMessageDialog(string message) { }

	// RVA: 0x14A2D18 Offset: 0x14A2D18 VA: 0x14A2D18
	public void OpenDetailInfoDialog(string name, string info, string detail) { }

	// RVA: 0x14A2D68 Offset: 0x14A2D68 VA: 0x14A2D68
	public void OpenDetailLongInfoDialog(string name, string info, string detail, bool isSetMinSize = True, bool isCondensedName = False) { }

	// RVA: 0x14A2DD0 Offset: 0x14A2DD0 VA: 0x14A2DD0
	public void OpenDetailLongInfoDialogOnFade(string name, string info, string detail) { }

	// RVA: 0x14A2EA4 Offset: 0x14A2EA4 VA: 0x14A2EA4
	public void OpenMovieConfirmDialog(string title, string mainMessage, MovieConfirmDialog.Mode mode, CommonConfirmDialog.ClickDelegate func, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0) { }

	// RVA: 0x14A2F1C Offset: 0x14A2F1C VA: 0x14A2F1C
	public void CloseMovieConfirmDialog() { }

	// RVA: 0x14A2F4C Offset: 0x14A2F4C VA: 0x14A2F4C
	public void CloseMovieConfirmDialog(Action callback) { }

	// RVA: 0x14A2F84 Offset: 0x14A2F84 VA: 0x14A2F84
	public void OpenLinkConfirmDialog(string message, LinkConfirmDialog.ClickDelegate func, string linkPath, string linkTexture = "", int panel_depth = -1, int maxLine = 0, int messageFontSize = 0) { }

	// RVA: 0x14A3004 Offset: 0x14A3004 VA: 0x14A3004
	public void CloseLinkConfirmDialog() { }

	// RVA: 0x14A3034 Offset: 0x14A3034 VA: 0x14A3034
	public void CloseLinkConfirmDialog(Action callback) { }

	// RVA: 0x14A306C Offset: 0x14A306C VA: 0x14A306C
	public void OpenServantFramePurchaseMenu(ServantFramePurchaseMenu.CallbackFunc callback, Action refreshCallback) { }

	// RVA: 0x14A3150 Offset: 0x14A3150 VA: 0x14A3150
	public void CloseServantFramePurchaseMenu() { }

	// RVA: 0x14A3238 Offset: 0x14A3238 VA: 0x14A3238
	public void OpenServantEquipFramePurchaseMenu(ServantEquipFramePurchaseMenu.CallbackFunc callback, Action refreshCallback) { }

	// RVA: 0x14A331C Offset: 0x14A331C VA: 0x14A331C
	public void CloseServantEquipFramePurchaseMenu() { }

	// RVA: 0x14A3404 Offset: 0x14A3404 VA: 0x14A3404
	public void OpenEquipGraphListMenu(PartyListViewItem partyItem, int member, EventUpValSetupInfo setupInfo, EquipGraphListMenu.CallbackFunc callback) { }

	// RVA: 0x14A3500 Offset: 0x14A3500 VA: 0x14A3500
	public void OpenEquipGraphListMenu(WarBoardPartyListViewItem partyItem, int member, EventUpValSetupInfo setupInfo, EquipGraphListMenu.CallbackFunc callback) { }

	// RVA: 0x14A35FC Offset: 0x14A35FC VA: 0x14A35FC
	public void OpenSupportServantEquipListMenu(SupportServantData[] supportServantData, int nowDeckNum, int classPos, EventUpValSetupInfo setupInfo, int nowDeckId, int[] fixMainDeckIds, int[] fixEventDeckIds, SupportServantEquipListMenu.CallbackFunc callback) { }

	// RVA: 0x14A3724 Offset: 0x14A3724 VA: 0x14A3724
	public void CloseEquipGraphListMenu(Action callback) { }

	// RVA: 0x14A3820 Offset: 0x14A3820 VA: 0x14A3820
	protected void EndCloseEquipGraphListMenu() { }

	// RVA: 0x14A390C Offset: 0x14A390C VA: 0x14A390C
	public void CloseSupportServantEquipListMenu(Action callback) { }

	// RVA: 0x14A3A08 Offset: 0x14A3A08 VA: 0x14A3A08
	protected void EndCloseSupportServantEquipListMenu() { }

	// RVA: 0x14A3AF4 Offset: 0x14A3AF4 VA: 0x14A3AF4
	public static ListViewSort GetServantSortInfo() { }

	// RVA: 0x14A3B54 Offset: 0x14A3B54 VA: 0x14A3B54
	public void OpenServantSortSelectMenu(ServantSortSelectMenu.Kind kind, ListViewSort sort, bool isChoiceReverse, ServantSortSelectMenu.CallbackFunc callback) { }

	// RVA: 0x14A3C50 Offset: 0x14A3C50 VA: 0x14A3C50
	public void CloseServantSortSelectMenu(Action callback) { }

	// RVA: 0x14A3D4C Offset: 0x14A3D4C VA: 0x14A3D4C
	protected void EndCloseServantSortSelectMenu() { }

	// RVA: 0x14A3E38 Offset: 0x14A3E38 VA: 0x14A3E38
	public static ListViewSort GetServantFilterInfo() { }

	// RVA: 0x14A3E98 Offset: 0x14A3E98 VA: 0x14A3E98
	public void OpenServantFilterSelectMenu(ServantFilterSelectMenu.Kind kind, ListViewSort sort, ServantFilterSelectMenu.CallbackFunc callback) { }

	// RVA: 0x14A3EA8 Offset: 0x14A3EA8 VA: 0x14A3EA8
	public void OpenServantFilterSelectMenu(ServantFilterSelectMenu.Kind kind, ListViewSort sort, ListViewManager listViewManager, ServantFilterSelectMenu.CallbackFunc callback) { }

	// RVA: 0x14A3FA4 Offset: 0x14A3FA4 VA: 0x14A3FA4
	public void CloseServantFilterSelectMenu(Action callback) { }

	// RVA: 0x14A40A0 Offset: 0x14A40A0 VA: 0x14A40A0
	protected void EndCloseServantFilterSelectMenu() { }

	// RVA: 0x14A418C Offset: 0x14A418C VA: 0x14A418C
	public static ListViewSort GetServantBonusFilterInfo() { }

	// RVA: 0x14A41EC Offset: 0x14A41EC VA: 0x14A41EC
	public void OpenServantBonusFilterSelectMenu(ServantBonusFilterSelectMenu.Kind kind, bool isServantBonusFilterEnable, bool isServantEquipBonusFilterEnable, ListViewSort sort, ServantBonusFilterSelectMenu.CallbackFunc callback) { }

	// RVA: 0x14A4310 Offset: 0x14A4310 VA: 0x14A4310
	public void CloseServantBonusFilterSelectMenu(Action callback) { }

	// RVA: 0x14A440C Offset: 0x14A440C VA: 0x14A440C
	protected void EndCloseServantBonusFilterSelectMenu() { }

	// RVA: 0x14A44F8 Offset: 0x14A44F8 VA: 0x14A44F8
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, PartyListViewItem partyItem, int member, ServantStatusDialog.EndDelegate callback) { }

	// RVA: 0x14A45F8 Offset: 0x14A45F8 VA: 0x14A45F8
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, WarBoardPartyListViewItem partyItem, int member, ServantStatusDialog.EndDelegate callback) { }

	// RVA: 0x14A46F8 Offset: 0x14A46F8 VA: 0x14A46F8
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, PartyListViewItem partyItem, int member, ServantStatusDialog.FormationEndDelegate callback) { }

	// RVA: 0x14A47F8 Offset: 0x14A47F8 VA: 0x14A47F8
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, long userSvtId, ServantStatusDialog.EndDelegate callback, Action openCallback) { }

	// RVA: 0x14A48F4 Offset: 0x14A48F4 VA: 0x14A48F4
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, UserServantEntity userSvtEntity, ServantStatusDialog.EndDelegate callback, Action openCallback) { }

	// RVA: 0x14A49F0 Offset: 0x14A49F0 VA: 0x14A49F0
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, long userSvtId, ServantStatusDialog.FormationEndDelegate callback, Action openCallback) { }

	// RVA: 0x14A4AEC Offset: 0x14A4AEC VA: 0x14A4AEC
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, long userSvtId, ServantStatusDialog.EndIndividualityDelegate callback, Action openCallback) { }

	// RVA: 0x14A4BE8 Offset: 0x14A4BE8 VA: 0x14A4BE8
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, long userSvtId, ServantStatusDialog.ResultDelegate callback, Action openCallback) { }

	// RVA: 0x14A4CE4 Offset: 0x14A4CE4 VA: 0x14A4CE4
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, UserServantEntity userSvtEntity, ServantStatusDialog.EndDelegate callback) { }

	// RVA: 0x14A4DDC Offset: 0x14A4DDC VA: 0x14A4DDC
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, UserServantEntity userSvtEntity, ServantStatusDialog.EndIndividualityDelegate callback) { }

	// RVA: 0x14A4ED4 Offset: 0x14A4ED4 VA: 0x14A4ED4
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, UserServantEntity userSvtEntity, ServantStatusDialog.ResultDelegate callback) { }

	// RVA: 0x14A4FCC Offset: 0x14A4FCC VA: 0x14A4FCC
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, UserServantEntity userSvtEntity, long[] equipIdList, QuestRestrictionInfo questRestrictionInfo, ServantStatusDialog.EndIndividualityDelegate callback) { }

	// RVA: 0x14A50DC Offset: 0x14A50DC VA: 0x14A50DC
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, UserServantEntity userSvtEntity, long[] equipIdList, QuestRestrictionInfo questRestrictionInfo, ServantStatusDialog.ResultDelegate callback) { }

	// RVA: 0x14A51EC Offset: 0x14A51EC VA: 0x14A51EC
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, UserServantCollectionEntity userSvtCollectionEntity, ServantStatusDialog.EndDelegate callback) { }

	// RVA: 0x14A52E4 Offset: 0x14A52E4 VA: 0x14A52E4
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, UserServantCollectionEntity userSvtCollectionEntity, int imageLimitCount, ServantStatusDialog.EndDelegate callback) { }

	// RVA: 0x14A53E4 Offset: 0x14A53E4 VA: 0x14A53E4
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, UserServantCollectionEntity userSvtCollectionEntity, ServantStatusDialog.ResultDelegate callback) { }

	// RVA: 0x14A54DC Offset: 0x14A54DC VA: 0x14A54DC
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, ServantLeaderInfo servantLeaderInfo, ServantStatusDialog.EndDelegate callback) { }

	// RVA: 0x14A55D4 Offset: 0x14A55D4 VA: 0x14A55D4
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, UserCommandCodeEntity userCommandCodeEntity, ServantStatusDialog.EndDelegate callback, Action openCallback) { }

	// RVA: 0x14A56D0 Offset: 0x14A56D0 VA: 0x14A56D0
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, UserCommandCodeEntity userCommandCodeEntity, ServantStatusDialog.EndIndividualityDelegate callback, Action openCallback) { }

	// RVA: 0x14A57CC Offset: 0x14A57CC VA: 0x14A57CC
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, UserCommandCodeCollectionEntity userCommandCodeCollectionEntity, ServantStatusDialog.EndDelegate callback, Action openCallback) { }

	// RVA: 0x14A58C8 Offset: 0x14A58C8 VA: 0x14A58C8
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, int svtId, ServantStatusDialog.EndDelegate callback) { }

	// RVA: 0x149BED8 Offset: 0x149BED8 VA: 0x149BED8
	public void OpenServantStatusDialog(ServantStatusDialog.Kind kind, GiftEntity gift, ServantStatusDialog.EndDelegate callback) { }

	// RVA: 0x149C198 Offset: 0x149C198 VA: 0x149C198
	public void CloseServantStatusDialog(Action callback) { }

	// RVA: 0x14A5AE0 Offset: 0x14A5AE0 VA: 0x14A5AE0
	protected void EndCloseServantStatusDialog() { }

	// RVA: 0x14A5BCC Offset: 0x14A5BCC VA: 0x14A5BCC
	public void OpenServantEquipStatusDialog(ServantStatusDialog.Kind kind, long userSvtId, bool isUse, ServantStatusDialog.EndDelegate callback, Action openCallback) { }

	// RVA: 0x14A5CD8 Offset: 0x14A5CD8 VA: 0x14A5CD8
	public void OpenServantEquipStatusDialog(ServantStatusDialog.Kind kind, UserServantEntity userSvtEntity, bool isUse, ServantStatusDialog.EndDelegate callback, Action openCallback) { }

	// RVA: 0x14A5DE4 Offset: 0x14A5DE4 VA: 0x14A5DE4
	public void OpenServantEquipStatusDialog(ServantStatusDialog.Kind kind, EquipTargetInfo equipTargetInfo, ServantStatusDialog.EndDelegate callback, Action openCallback) { }

	// RVA: 0x14A5EE0 Offset: 0x14A5EE0 VA: 0x14A5EE0
	public void OpenServantEquipStatusDialog(ServantStatusDialog.Kind kind, UserCommandCodeEntity userCommandCodeEntity, ServantStatusDialog.EndDelegate callback, Action openCallback) { }

	// RVA: 0x14A5FDC Offset: 0x14A5FDC VA: 0x14A5FDC
	public void OpenServantEquipStatusDialog(ServantStatusDialog.Kind kind, UserCommandCodeCollectionEntity userCommandCodeCollectionEntity, ServantStatusDialog.EndDelegate callback, Action openCallback) { }

	// RVA: 0x14A60D8 Offset: 0x14A60D8 VA: 0x14A60D8
	public void OpenServantEquipStatusDialog(ServantStatusDialog.Kind kind, int svtId, ServantStatusDialog.EndDelegate callback, Action openCallback) { }

	// RVA: 0x14A61F0 Offset: 0x14A61F0 VA: 0x14A61F0
	public void OpenServantEquipStatusDialog(ServantStatusDialog.Kind kind, CommandCodeEntity entity, bool isUse, ServantStatusDialog.EndDelegate callback, Action openCallback) { }

	// RVA: 0x14A62FC Offset: 0x14A62FC VA: 0x14A62FC
	public void CloseServantEquipStatusDialog(Action callback) { }

	// RVA: 0x14A63F8 Offset: 0x14A63F8 VA: 0x14A63F8
	protected void EndCloseServantEquipStatusDialog() { }

	// RVA: 0x14A64E4 Offset: 0x14A64E4 VA: 0x14A64E4
	public void OpenStonePurchaseMenu(StonePurchaseMenu.CallbackFunc callback, Action refreshCallback) { }

	// RVA: 0x14A65C8 Offset: 0x14A65C8 VA: 0x14A65C8
	public void CloseStonePurchaseMenu() { }

	// RVA: 0x14A66A0 Offset: 0x14A66A0 VA: 0x14A66A0
	protected void EndCloseStonePurchaseMenu() { }

	// RVA: 0x14A676C Offset: 0x14A676C VA: 0x14A676C
	public void OpenStonePurchaseReciveMenu(PurchaseBehaviour.Result purchaseResult, int perMonthAmount, int freeStoneNum, int chargeStoneNum) { }

	// RVA: 0x14A6A10 Offset: 0x14A6A10 VA: 0x14A6A10
	public void OpenStonePurchaseReciveMenu(AccountingManager.Result result, string resultString) { }

	// RVA: 0x14A6C48 Offset: 0x14A6C48 VA: 0x14A6C48
	protected void EndBuyBankItemNotificationRecive() { }

	// RVA: 0x14A6C78 Offset: 0x14A6C78 VA: 0x14A6C78
	public void OpenUserGameActRecoverMenu(UserGameActRecoverMenu.CallbackFunc callback, Action refreshCallback) { }

	// RVA: 0x14A6D5C Offset: 0x14A6D5C VA: 0x14A6D5C
	public void CloseUserGameActRecoverMenu() { }

	// RVA: 0x14A6E44 Offset: 0x14A6E44 VA: 0x14A6E44
	public void OpenUsrPresentList(bool isShowBg, UserPresentBoxWindow.ClickDelegate callback, Action redisp_act) { }

	// RVA: 0x14A6F38 Offset: 0x14A6F38 VA: 0x14A6F38
	public void CloseUsrPresentList() { }

	// RVA: 0x14A7020 Offset: 0x14A7020 VA: 0x14A7020
	public void OpenMultiGiftGetDialog(string title, string detail, string closeMgs, string decideMsg, GiftEntity[] gifts, int columnCount, CommonMultiItemGetDlg.OnClickDelegate callback) { }

	// RVA: 0x14A7140 Offset: 0x14A7140 VA: 0x14A7140
	public void CloseMultiGiftGetDialg() { }

	// RVA: 0x14A7214 Offset: 0x14A7214 VA: 0x14A7214
	public void OpenCampaignInfoDialog(CampaignInfoEntity cInfo, string closeMgs, string decideMsg, bool activeDecide, CampaignInfoDlg.onButtonDelgate callback) { }

	// RVA: 0x14A7320 Offset: 0x14A7320 VA: 0x14A7320
	public void CloseCampaignInfoDialg() { }

	// RVA: 0x14A73F8 Offset: 0x14A73F8 VA: 0x14A73F8
	public void OpenPresentBoxNotificationMenu(UserPresentBoxEntity[] presentList, PresentBoxNotificationMenu.CallbackFunc callback) { }

	// RVA: 0x14A74DC Offset: 0x14A74DC VA: 0x14A74DC
	public void ClosePresentBoxNotificationMenu() { }

	// RVA: 0x14A75B4 Offset: 0x14A75B4 VA: 0x14A75B4
	protected void EndClosePresentBoxNotificationMenu() { }

	// RVA: 0x14A7680 Offset: 0x14A7680 VA: 0x14A7680
	public void OpenTutorialNotificationDialog(string message, TutorialFlag.Id flagId = -1, Action callback) { }

	// RVA: 0x14A7784 Offset: 0x14A7784 VA: 0x14A7784
	public void OpenFullScreenMaskDialog(string message, TutorialFlag.Id flagId = -1, Action callback, Vector2 messagePos, int fontSize = -1, bool dispTouchSprite = True) { }

	// RVA: 0x14A78A8 Offset: 0x14A78A8 VA: 0x14A78A8
	public void OpenTutorialNotificationDialogBox(string message, Rect[] rects, Vector2 messagePos, int fontSize = -1, TutorialFlag.Id flagId = -1, Action callback, Action opencallback) { }

	// RVA: 0x14A79FC Offset: 0x14A79FC VA: 0x14A79FC
	public void OpenEventTutorialNotificationDialog(string message, Rect[] rects, Vector2 messagePos, Vector3 touchObjPos, int dlgBgId, NGUIText.Alignment alignment, Action callback, Action opencallback) { }

	// RVA: 0x14A7B74 Offset: 0x14A7B74 VA: 0x14A7B74
	public void OpenTutorialNotificationDialogArrow(string message, Vector2 pos, Rect rect, float way, Vector2 messagePos, int fontSize = -1, Action callbackFunc) { }

	// RVA: 0x14A7DE8 Offset: 0x14A7DE8 VA: 0x14A7DE8
	public void OpenTutorialNotificationDialogArrow(string message, Vector2[] posList, Rect rect, float way, Vector2 messagePos, int fontSize = -1, Action callbackFunc) { }

	// RVA: 0x14A7F2C Offset: 0x14A7F2C VA: 0x14A7F2C
	public void OpenTutorialNotificationDialogArrow(string message, Vector2[] posList, Rect[] rects, float way, Vector2 messagePos, int fontSize = -1, Action callbackFunc) { }

	// RVA: 0x14A8014 Offset: 0x14A8014 VA: 0x14A8014
	public void OpenTutorialNotificationDialogArrow(string message, Vector2 pos, Rect[] rects, float way, Vector2 messagePos, int fontSize = -1, Action callbackFunc) { }

	// RVA: 0x14A7CF8 Offset: 0x14A7CF8 VA: 0x14A7CF8
	public void OpenTutorialNotificationDialogArrow(string message, Vector2[] posList, Rect[] rects, float[] ways, Vector2 messagePos, int fontSize = -1, Action callbackFunc) { }

	// RVA: 0x14A81A4 Offset: 0x14A81A4 VA: 0x14A81A4
	public void CloseTutorialNotificationDialogArrow() { }

	// RVA: 0x14A821C Offset: 0x14A821C VA: 0x14A821C
	public void CloseTutorialNotificationDialogArrow(Action callbackFunc) { }

	// RVA: 0x14A832C Offset: 0x14A832C VA: 0x14A832C
	public void OpenTutorialImageDialog(TutorialFlag.ImageId[] images, TutorialFlag.Id flagId = -1, Action closeCallback, Action endOpenCallback, Action endTurorialRequestFunc) { }

	// RVA: 0x14A8394 Offset: 0x14A8394 VA: 0x14A8394
	public void OpenTutorialImageDialog(TutorialFlag.ImageId image, TutorialFlag.Id flagId = -1, Action closeCallback, Action endOpenCallback, Action endTurorialRequestFunc) { }

	// RVA: 0x14A8454 Offset: 0x14A8454 VA: 0x14A8454
	public void OpenTutorialImageDialog(TutorialFlag.ImageId[] images, TutorialFlag.LocalId flagId, Action closeCallback, Action endOpenCallback, Action endTurorialRequestFunc) { }

	// RVA: 0x14A84BC Offset: 0x14A84BC VA: 0x14A84BC
	public void OpenTutorialImageDialog(TutorialFlag.ImageId image, TutorialFlag.LocalId flagId, Action closeCallback, Action endOpenCallback, Action endTurorialRequestFunc) { }

	// RVA: 0x14A857C Offset: 0x14A857C VA: 0x14A857C
	public void OpenTutorialImageDialog(TutorialFlag.ImageId[] images, TutorialFlag.EventId flagId, int eventId, Action closeCallback, Action endOpenCallback, Action endTurorialRequestFunc) { }

	// RVA: 0x14A85F4 Offset: 0x14A85F4 VA: 0x14A85F4
	public void OpenTutorialImageDialog(TutorialFlag.ImageId image, TutorialFlag.EventId flagId, int eventId, Action closeCallback, Action endOpenCallback, Action endTurorialRequestFunc) { }

	// RVA: 0x14A86BC Offset: 0x14A86BC VA: 0x14A86BC
	public void OpenTutorialImageDialog(int[] images, TutorialFlag.EventId flagId, int eventId, Action closeCallback, Action endOpenCallback, Action endTurorialRequestFunc) { }

	// RVA: 0x14A8734 Offset: 0x14A8734 VA: 0x14A8734
	public void OpenImageDialogWithAssets(string[] images, Action closeCallback, Action endOpenCallback, Action endTurorialRequestFunc) { }

	// RVA: 0x14A8794 Offset: 0x14A8794 VA: 0x14A8794
	public void OpenImageDialogAssets(int[] images, TutorialBigDialog.TutrialWindowSize kind, Action closeCallback) { }

	// RVA: 0x14A87E4 Offset: 0x14A87E4 VA: 0x14A87E4
	public void OpenImageDialogByConfigId(string[] images, int configFlg, Action closeCallback, Action endOpenCallback, Action endTurorialRequestFunc) { }

	// RVA: 0x14A884C Offset: 0x14A884C VA: 0x14A884C
	public void InitTurotialArrowMark() { }

	// RVA: 0x14A887C Offset: 0x14A887C VA: 0x14A887C
	public void OpenTutorialArrowMark(Vector2 pos, float way, Rect rect, Action callback) { }

	// RVA: 0x14A890C Offset: 0x14A890C VA: 0x14A890C
	public void OpenTutorialArrowMark(Vector2[] posList, float way, Rect rect, Action callback) { }

	// RVA: 0x14A8994 Offset: 0x14A8994 VA: 0x14A8994
	public void OpenTutorialArrowMark(Vector2 pos, float way, Rect[] rects, Action callback) { }

	// RVA: 0x14A8A04 Offset: 0x14A8A04 VA: 0x14A8A04
	public void OpenTutorialArrowMark(Vector2[] posList, float way, Rect[] rects, Action callback) { }

	// RVA: 0x14A8144 Offset: 0x14A8144 VA: 0x14A8144
	public void OpenTutorialArrowMark(Vector2[] posList, float[] ways, Rect[] rects, Action callback) { }

	// RVA: 0x14A81E4 Offset: 0x14A81E4 VA: 0x14A81E4
	public void CloseTutorialArrowMark(Action callback) { }

	// RVA: 0x14A8A64 Offset: 0x14A8A64 VA: 0x14A8A64
	public bool PlayLogo(Action callback) { }

	// RVA: 0x14A8BC4 Offset: 0x14A8BC4 VA: 0x14A8BC4
	protected void EndPlayLogo() { }

	// RVA: 0x14A8D48 Offset: 0x14A8D48 VA: 0x14A8D48
	public void OpenLocationTermsOfUseDlg(TermsOfUseDlg.CallbackFunc callback, bool canMaskTouchClose = False) { }

	// RVA: 0x14A8EC0 Offset: 0x14A8EC0 VA: 0x14A8EC0
	public void CloseLocationTermsOfUseDlg() { }

	// RVA: 0x14A8EF0 Offset: 0x14A8EF0 VA: 0x14A8EF0
	public void OpenTripleButtonDlg(string title, string message, string cancelBtnMsg, string middleBtnMsg, string rightBtnMsg, TripleButtonDlgComponent.CallbackFunc callback, int fontSize = 30, int positionY = 10, int spacingY = 10, bool canMaskTouchClose = False, SeManager.SystemSeKind middleSe = 8, SeManager.SystemSeKind rightSe = 8) { }

	// RVA: 0x14A9040 Offset: 0x14A9040 VA: 0x14A9040
	public void CloseTripleButtonDlg(Action closed_act) { }

	// RVA: 0x14A9160 Offset: 0x14A9160 VA: 0x14A9160
	public void setCallbackTripleButtonDlg(TripleButtonDlgComponent.CallbackFunc callback) { }

	// RVA: 0x14A9210 Offset: 0x14A9210 VA: 0x14A9210
	public void setStateTripleButtonDlgRightButton(bool disabled) { }

	// RVA: 0x14A92C0 Offset: 0x14A92C0 VA: 0x14A92C0
	public void OpenSvtFrameShortDlg(int haveSvtNum, int maxSvtNum, ServantFrameShortDlgComponent.Type type, bool isQuest, ServantFrameShortDlgComponent.CallbackFunc callback) { }

	// RVA: 0x14A93CC Offset: 0x14A93CC VA: 0x14A93CC
	public void CloseSvtFrameShortDlg(Action closed_act) { }

	// RVA: 0x14A94EC Offset: 0x14A94EC VA: 0x14A94EC
	public void OpenUserNameEntry(Action closed_act) { }

	// RVA: 0x14A9634 Offset: 0x14A9634 VA: 0x14A9634
	protected void CloseUserNameEntry() { }

	// RVA: 0x14A9700 Offset: 0x14A9700 VA: 0x14A9700
	public void SaveLoginResultHavingBonusDuringTutorial() { }

	// RVA: 0x14A980C Offset: 0x14A980C VA: 0x14A980C
	public void SetupLoginResultData(int[] eventSvtGets) { }

	// RVA: 0x14A9C2C Offset: 0x14A9C2C VA: 0x14A9C2C
	public void ClearLoginResultData() { }

	// RVA: 0x14A9C34 Offset: 0x14A9C34 VA: 0x14A9C34
	public static void DeleteTutorialSaveKey() { }

	// RVA: 0x14A9994 Offset: 0x14A9994 VA: 0x14A9994
	public void SetMaterialAddSvts() { }

	// RVA: 0x14A9C80 Offset: 0x14A9C80 VA: 0x14A9C80
	public void StartServantEventJoinLeaveNotification(Action end_act) { }

	// RVA: 0x14A9CB8 Offset: 0x14A9CB8 VA: 0x14A9CB8
	private void StartServantEventJoinLeaveNotification_sub(int idx, Action end_act) { }

	// RVA: 0x14A9F40 Offset: 0x14A9F40 VA: 0x14A9F40
	public void StartLoginMessages(Action end_act) { }

	// RVA: 0x14A9F78 Offset: 0x14A9F78 VA: 0x14A9F78
	private void StartLoginMessageChain(CommonUI.LoginMessageData[] loginMessages, int index, Action end_act) { }

	// RVA: 0x14AA1B8 Offset: 0x14AA1B8 VA: 0x14AA1B8
	public void StartLoginAndCampaignBonus(Action end_act, Action onCloseLogin, int panel_depth = -1) { }

	// RVA: 0x14AA1BC Offset: 0x14AA1BC VA: 0x14AA1BC
	private void StartTotalLoginBonus(Action end_act, Action onCloseLogin, int panel_depth = -1) { }

	// RVA: 0x14AA208 Offset: 0x14AA208 VA: 0x14AA208
	private void TotalLoginBonusChain(CommonUI.LoginBonusData[] bDatas, int index, Action end_act, Action onCloseLogin, int panel_depth) { }

	// RVA: 0x14AA7B8 Offset: 0x14AA7B8 VA: 0x14AA7B8
	private void StartSeqLoginBonus(Action end_act, Action onCloseLogin, int panel_depth = -1) { }

	// RVA: 0x14AA93C Offset: 0x14AA93C VA: 0x14AA93C
	private void SeqLoginBonusChain(CommonUI.LoginBonusData[] bDatas, int index, Action end_act, Action onCloseLogin, int panel_depth) { }

	// RVA: 0x14AAEEC Offset: 0x14AAEEC VA: 0x14AAEEC
	private void StartCampaignBonus(Action end_act, int panel_depth = -1) { }

	// RVA: 0x14AAF2C Offset: 0x14AAF2C VA: 0x14AAF2C
	private void StartCampaignBonus_sub(int idx, Action end_act, int panel_depth = -1) { }

	// RVA: 0x14AB418 Offset: 0x14AB418 VA: 0x14AB418
	public void StartFriendPointNotification(Action end_act) { }

	// RVA: 0x14ABC80 Offset: 0x14ABC80 VA: 0x14ABC80
	public void OpenServantCombineResult(CombineResultEffectComponent.Kind kind, int infoIdx, UserServantEntity usrSvtData, int baseCollectionLv, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x14ABD8C Offset: 0x14ABD8C VA: 0x14ABD8C
	public void OpenServantCombineResult(CombineResultEffectComponent.Kind kind, int infoIdx, UserServantEntity baseSvtData, UserServantEntity resSvtData, int svtId, string voiceId, bool statusDisp, int friendship, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x14ABEC4 Offset: 0x14ABEC4 VA: 0x14ABEC4
	public void OpenServantEqCombineResult(CombineResultEffectComponent.Kind kind, int infoIdx, int normalExp, int addExp, UserServantEntity usrSvtData, int baseCollectionLv, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x14ABFE8 Offset: 0x14ABFE8 VA: 0x14ABFE8
	public void OpenLimitUpCombineResult(CombineResultEffectComponent.Kind kind, UserServantEntity usrSvtData, CombineResultEffectComponent.ClickDelegate callback, ServantChangeEntity svtChange, bool autoFadeout = True, ServantLimitUpVoiceCache.Type displayType = 0, int genderType = -1, string playVoiceLabel) { }

	// RVA: 0x14AC030 Offset: 0x14AC030 VA: 0x14AC030
	public void OpenLimitUpCombineResult(CombineResultEffectComponent.Kind kind, UserServantEntity usrSvtData, int baseCollectionLimitCnt, CombineResultEffectComponent.ClickDelegate callback, ServantChangeEntity svtChange, bool autoFadeout = True, ServantLimitUpVoiceCache.Type displayType = 0, int genderType = -1, string playVoiceLabel) { }

	// RVA: 0x14AC168 Offset: 0x14AC168 VA: 0x14AC168
	public void OpenNameRevealResult(ServantChangeEntity beforeSvtData, ServantChangeEntity afterSvtData, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x14AC25C Offset: 0x14AC25C VA: 0x14AC25C
	public void OpenSkillCombineResult(CombineResultEffectComponent.Kind kind, UserServantEntity usrSvtData, int targetId, int targetLv, CombineResultEffectComponent.ClickDelegate callback, int targetIdOld = 0, int targetLvOld = 0) { }

	// RVA: 0x14AC380 Offset: 0x14AC380 VA: 0x14AC380
	public void OpenNobleCombineResult(CombineResultEffectComponent.Kind kind, UserServantEntity usrSvtData, int targetId, int targetLv, CombineResultEffectComponent.ClickDelegate callback, int targetIdOld = 0, int targetLvOld = 0) { }

	// RVA: 0x14AC4A4 Offset: 0x14AC4A4 VA: 0x14AC4A4
	public void OpenFriendshipUp(UserServantEntity usrSvtData, int oldFriendShipRank, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x14AC604 Offset: 0x14AC604 VA: 0x14AC604
	public void OpenFriendshipExceed(UserServantEntity usrSvtData, int oldFriendshipRank, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x14AC764 Offset: 0x14AC764 VA: 0x14AC764
	public void OpenSecretTreasureDeviceForQuestClear(int questId, int phase, CombineResultEffectComponent.MessageDelegate msgCallBack, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x14AC8CC Offset: 0x14AC8CC VA: 0x14AC8CC
	public void OpenSecretTreasureDeviceForSvtGet(int svtId, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x14ACA1C Offset: 0x14ACA1C VA: 0x14ACA1C
	public void CloseCombineResult() { }

	// RVA: 0x14ACB04 Offset: 0x14ACB04 VA: 0x14ACB04
	public void OpenPowerUp(CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x14ACD28 Offset: 0x14ACD28 VA: 0x14ACD28
	public void OpenPowerUp(UserServantEntity usrSvtData, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x14ACE78 Offset: 0x14ACE78 VA: 0x14ACE78
	public void OpenCombineLimit(UserServantEntity usrSvtData, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x14ACFCC Offset: 0x14ACFCC VA: 0x14ACFCC
	public void OpenBoostSupportRequestMenu(int questId, int questPhase, BoostFunctionUtility.CallbackFunc callback, bool isRetryBattle = False) { }

	// RVA: 0x14AD0C8 Offset: 0x14AD0C8 VA: 0x14AD0C8
	public void CloseBoostSupportRequestMenu(Action callback) { }

	// RVA: 0x14AD1A8 Offset: 0x14AD1A8 VA: 0x14AD1A8
	protected void EndCloseBoostSupportRequestMenu() { }

	// RVA: 0x14AD294 Offset: 0x14AD294 VA: 0x14AD294
	public void OpenBoostSupportRequestReconfirmationMenu(BoostEntity boostEntity, BoostFunctionUtility.CallbackFunc callback) { }

	// RVA: 0x14AD378 Offset: 0x14AD378 VA: 0x14AD378
	public void CloseBoostSupportRequestReconfirmationMenu(Action callback) { }

	// RVA: 0x14AD458 Offset: 0x14AD458 VA: 0x14AD458
	protected void EndCloseBoostSupportRequestReconfirmationMenu() { }

	// RVA: 0x14AD544 Offset: 0x14AD544 VA: 0x14AD544
	public void OpenCenterEffectDetailDialog(int questId, int questPhase, Action callback) { }

	// RVA: 0x14AD638 Offset: 0x14AD638 VA: 0x14AD638
	public void CloseCenterEffectDetailDialog(Action callback) { }

	// RVA: 0x14AD718 Offset: 0x14AD718 VA: 0x14AD718
	protected void EndCloseCenterEffectDetailDialog() { }

	// RVA: 0x14AD804 Offset: 0x14AD804 VA: 0x14AD804
	public void OpenClassCompatibilityMenu(Action callback) { }

	// RVA: 0x14AD818 Offset: 0x14AD818 VA: 0x14AD818
	public void OpenClassCompatibilityMenu(int questId, int questPhase, Action callback) { }

	// RVA: 0x14AD90C Offset: 0x14AD90C VA: 0x14AD90C
	public void OpenCostumeCombineResult(UserServantEntity baseSvt, int costumeId, string costumeName, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x14ADA08 Offset: 0x14ADA08 VA: 0x14ADA08
	public void CloseClassCompatibilityMenu(Action callback) { }

	// RVA: 0x14ADAE8 Offset: 0x14ADAE8 VA: 0x14ADAE8
	protected void EndCloseClassCompatibilityMenu() { }

	// RVA: 0x14ADBD4 Offset: 0x14ADBD4 VA: 0x14ADBD4
	public void LoadCostumeReleaseEffect(Action callBack) { }

	// RVA: 0x14ADD28 Offset: 0x14ADD28 VA: 0x14ADD28
	public void OpenCostumeReleaseEffect(bool releaseAfter, string itemString, Action callBack, ImageItem.Id imageId = 23) { }

	// RVA: 0x14ADF48 Offset: 0x14ADF48 VA: 0x14ADF48
	public void OpenCompensationItemDialog(List<int> messageIds, Action endCallBack) { }

	// RVA: 0x14AE188 Offset: 0x14AE188 VA: 0x14AE188
	public void ReleaseCostumeReleaseEffect() { }

	// RVA: 0x14AE268 Offset: 0x14AE268 VA: 0x14AE268
	public void LoadEquipGetEffect(Action callBack) { }

	// RVA: 0x14AE3BC Offset: 0x14AE3BC VA: 0x14AE3BC
	public void OpenEquipGetEffect(bool releaseAfter, QuestRewardInfo questRewardInfo, Action callBack) { }

	// RVA: 0x14AE5B0 Offset: 0x14AE5B0 VA: 0x14AE5B0
	public void ReleaseEquipGetEffect() { }

	// RVA: 0x14AE690 Offset: 0x14AE690 VA: 0x14AE690
	public void LoadItemGetEffect(QuestRewardInfo questRewardInfo, Action callBack) { }

	// RVA: 0x14AE88C Offset: 0x14AE88C VA: 0x14AE88C
	public void LoadItemGetEffect(int effectId, Action callBack) { }

	// RVA: 0x14AE6C0 Offset: 0x14AE6C0 VA: 0x14AE6C0
	public int GetItemEffectId(QuestRewardInfo questRewardInfo) { }

	// RVA: 0x14AEA1C Offset: 0x14AEA1C VA: 0x14AEA1C
	public void LoadCoinRoomGetEffect(Action callBack) { }

	// RVA: 0x14AEB34 Offset: 0x14AEB34 VA: 0x14AEB34
	public void OpenCoinRoomGetEffect(Transform parent, bool releaseAfter, QuestRewardInfo questRewardInfo, Action callBack) { }

	// RVA: 0x14AEFF4 Offset: 0x14AEFF4 VA: 0x14AEFF4
	public void ReleaseCoinRoomGetEffect() { }

	// RVA: 0x14AF094 Offset: 0x14AF094 VA: 0x14AF094
	public void OpenItemGetEffect(Transform parent, bool releaseAfter, QuestRewardInfo questRewardInfo, Action callBack) { }

	// RVA: 0x14AF5A8 Offset: 0x14AF5A8 VA: 0x14AF5A8
	public void ReleaseItemGetEffect() { }

	// RVA: 0x14AF6C0 Offset: 0x14AF6C0 VA: 0x14AF6C0
	public void OpenQuestPhaseReward(Action callback) { }

	// RVA: 0x14AF8E4 Offset: 0x14AF8E4 VA: 0x14AF8E4
	public void DestoryQuestPhaseReward() { }

	// RVA: 0x14AF990 Offset: 0x14AF990 VA: 0x14AF990
	public void OpenApRecoverItemListDialog(int needAp, RecoverDlgComponent.CallbackFunc callback, bool canMaskTouchClose = True) { }

	// RVA: 0x14AFA84 Offset: 0x14AFA84 VA: 0x14AFA84
	public void OpenRpRecoverItemListDialog(int needRp, RecoverDlgComponent.CallbackFunc callback, bool canMaskTouchClose = True) { }

	// RVA: 0x14AFB78 Offset: 0x14AFB78 VA: 0x14AFB78
	public void CloseRecoverItemListDialog() { }

	// RVA: 0x14AFC50 Offset: 0x14AFC50 VA: 0x14AFC50
	public void OpenEventItemSelectDialog(List<ItemEntity> viewItemList, string title, string detail, Action endOpenFunc, EventItemSelectDlgComponent.CallbackFunc onSelectItemFunc, Action onCloseDialogFunc, bool canMaskTouchClose = True) { }

	// RVA: 0x14AFD74 Offset: 0x14AFD74 VA: 0x14AFD74
	public void CloseEventItemListDialog() { }

	// RVA: 0x14AFE4C Offset: 0x14AFE4C VA: 0x14AFE4C
	public void OpenItemDetailDialog(ItemEntity itemData, ItemDetailInfoComponent.CallbackFunc callback, int depth = 50) { }

	// RVA: 0x14AFF40 Offset: 0x14AFF40 VA: 0x14AFF40
	public void CloseItemDetailDialog() { }

	// RVA: 0x14B0018 Offset: 0x14B0018 VA: 0x14B0018
	public void OpenItemDetailDialog(string name, string msg, ItemDetailInfoComponent.CallbackFunc callback) { }

	// RVA: 0x14B010C Offset: 0x14B010C VA: 0x14B010C
	public GameObject CreateMissionNotify() { }

	// RVA: 0x14B0198 Offset: 0x14B0198 VA: 0x14B0198
	public void OpenCompleteMission(CompleteMissionComponent.ClickDelegate callback, Action redisp_act, CompleteMissionComponent.Type typeIndex = 0) { }

	// RVA: 0x14B028C Offset: 0x14B028C VA: 0x14B028C
	public void CloseCompleteMission() { }

	// RVA: 0x14B0374 Offset: 0x14B0374 VA: 0x14B0374
	public CompleteMissionComponent get_completeMissionCompo() { }

	// RVA: 0x14B037C Offset: 0x14B037C VA: 0x14B037C
	public void OpenMasterMission(MasterMissionComponent.ClickDelegate callback, Action redisp_act, MasterMissionComponent.Type typeIndex = -1) { }

	// RVA: 0x14B0470 Offset: 0x14B0470 VA: 0x14B0470
	public void CloseMasterMission() { }

	// RVA: 0x14B0558 Offset: 0x14B0558 VA: 0x14B0558
	public MasterMissionComponent get_masterMissionCompo() { }

	// RVA: 0x14B0560 Offset: 0x14B0560 VA: 0x14B0560
	public void OpenMissionRewardGetDialog(GiftEntity[] rewards, string rewardDetail, MissionRewardGetDialog.ClickDelegate callback) { }

	// RVA: 0x14B0654 Offset: 0x14B0654 VA: 0x14B0654
	public void OpenWarBoardTreasureGetDialog(int[] treasureIds, WarBoardTreasureListComponent.DialogType type, Action callback) { }

	// RVA: 0x14B0748 Offset: 0x14B0748 VA: 0x14B0748
