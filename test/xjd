	public bool BrokenTangents { get; set; }

	// Methods

	// RVA: 0x20F80BC Offset: 0x20F80BC VA: 0x20F80BC
	public float get_Value() { }

	// RVA: 0x20F87D4 Offset: 0x20F87D4 VA: 0x20F87D4
	public void set_Value(float value) { }

	// RVA: 0x20F74A8 Offset: 0x20F74A8 VA: 0x20F74A8
	public float get_Time() { }

	// RVA: 0x20F86BC Offset: 0x20F86BC VA: 0x20F86BC
	public void set_Time(float value) { }

	// RVA: 0x20F80C4 Offset: 0x20F80C4 VA: 0x20F80C4
	public float get_InTangent() { }

	// RVA: 0x20F887C Offset: 0x20F887C VA: 0x20F887C
	public void set_InTangent(float value) { }

	// RVA: 0x20F80CC Offset: 0x20F80CC VA: 0x20F80CC
	public float get_OutTangent() { }

	// RVA: 0x20F8924 Offset: 0x20F8924 VA: 0x20F8924
	public void set_OutTangent(float value) { }

	// RVA: 0x20F9578 Offset: 0x20F9578 VA: 0x20F9578
	public bool get_BrokenTangents() { }

	// RVA: 0x20F9580 Offset: 0x20F9580 VA: 0x20F9580
	public void set_BrokenTangents(bool value) { }

	// RVA: 0x20F962C Offset: 0x20F962C VA: 0x20F962C
	private void OnEnable() { }

	// RVA: 0x20F7D94 Offset: 0x20F7D94 VA: 0x20F7D94
	public void ConvertFrom(Keyframe keyframe) { }

	// RVA: 0x20F9630 Offset: 0x20F9630 VA: 0x20F9630
	public void Smooth() { }

	// RVA: 0x20F9838 Offset: 0x20F9838 VA: 0x20F9838
	public void Flatten() { }

	// RVA: 0x20F98D0 Offset: 0x20F98D0 VA: 0x20F98D0
	public void RightTangentLinear() { }

	// RVA: 0x20F9A18 Offset: 0x20F9A18 VA: 0x20F9A18
	public void RightTangentConstant() { }

	// RVA: 0x20F9A4C Offset: 0x20F9A4C VA: 0x20F9A4C
	public void LeftTangentLinear() { }

	// RVA: 0x20F9B94 Offset: 0x20F9B94 VA: 0x20F9B94
	public void LeftTangentConstant() { }

	// RVA: 0x20F9BC8 Offset: 0x20F9BC8 VA: 0x20F9BC8
	public void BothTangentLinear() { }

	// RVA: 0x20F9BEC Offset: 0x20F9BEC VA: 0x20F9BEC
	public void BothTangentConstant() { }

	// RVA: 0x20F9C10 Offset: 0x20F9C10 VA: 0x20F9C10
	public void .ctor() { }
}

// Namespace: WellFired
public class USequencerEventHideDurationAttribute : Attribute // TypeDefIndex: 3734
{
	// Methods

	// RVA: 0x2B62004 Offset: 0x2B62004 VA: 0x2B62004
	public void .ctor() { }
}

// Namespace: WellFired
public class USequencerEventAttribute : Attribute // TypeDefIndex: 3735
{
	// Fields
	private string eventPath; // 0x10

	// Methods

	// RVA: 0x2B61FD8 Offset: 0x2B61FD8 VA: 0x2B61FD8
	public void .ctor(string myEventPath) { }
}

// Namespace: WellFired
public class USequencerFriendlyNameAttribute : Attribute // TypeDefIndex: 3736
{
	// Fields
	private string friendlyName; // 0x10

	// Methods

	// RVA: 0x2B6200C Offset: 0x2B6200C VA: 0x2B6200C
	public void .ctor(string myFriendlyName) { }
}

// Namespace: WellFired
[ExecuteInEditMode] // RVA: 0xC1D65C Offset: 0xC1D65C VA: 0xC1D65C
[Serializable]
public abstract class USEventBase : MonoBehaviour // TypeDefIndex: 3737
{
	// Fields
	[SerializeField] // RVA: 0xC1DBE8 Offset: 0xC1DBE8 VA: 0xC1DBE8
	private bool fireOnSkip; // 0x18
	[SerializeField] // RVA: 0xC1DBF8 Offset: 0xC1DBF8 VA: 0xC1DBF8
	private float firetime; // 0x1C
	[SerializeField] // RVA: 0xC1DC08 Offset: 0xC1DC08 VA: 0xC1DC08
	private float duration; // 0x20
	[SerializeField] // RVA: 0xC1DC18 Offset: 0xC1DC18 VA: 0xC1DC18
	[HideInInspector] // RVA: 0xC1DC18 Offset: 0xC1DC18 VA: 0xC1DC18
	private string[] serializedAdditionalObjectsPaths; // 0x28

	// Properties
	public float FireTime { get; set; }
	public float Duration { get; set; }
	public USSequencer Sequence { get; }
	public USTimelineBase Timeline { get; }
	public USTimelineContainer TimelineContainer { get; }
	public GameObject AffectedObject { get; }
	public bool IsFireAndForgetEvent { get; }
	public bool FireOnSkip { get; set; }

	// Methods

	// RVA: 0x20F6844 Offset: 0x20F6844 VA: 0x20F6844
	public float get_FireTime() { }

	// RVA: 0x20F684C Offset: 0x20F684C VA: 0x20F684C
	public void set_FireTime(float value) { }

	// RVA: 0x20F695C Offset: 0x20F695C VA: 0x20F695C
	public float get_Duration() { }

	// RVA: 0x20F6964 Offset: 0x20F6964 VA: 0x20F6964
	public void set_Duration(float value) { }

	// RVA: 0x20F68B4 Offset: 0x20F68B4 VA: 0x20F68B4
	public USSequencer get_Sequence() { }

	// RVA: 0x20F696C Offset: 0x20F696C VA: 0x20F696C
	public USTimelineBase get_Timeline() { }

	// RVA: 0x20F6D18 Offset: 0x20F6D18 VA: 0x20F6D18
	public USTimelineContainer get_TimelineContainer() { }

	// RVA: 0x20F6E84 Offset: 0x20F6E84 VA: 0x20F6E84
	public GameObject get_AffectedObject() { }

	// RVA: 0x20F70F4 Offset: 0x20F70F4 VA: 0x20F70F4
	public void SetSerializedAdditionalObjectsPaths(string[] paths) { }

	// RVA: 0x20F70FC Offset: 0x20F70FC VA: 0x20F70FC
	public void FixupAdditionalObjects() { }

	// RVA: 0x20F72B4 Offset: 0x20F72B4 VA: 0x20F72B4
	public bool get_IsFireAndForgetEvent() { }

	// RVA: 0x20F72C4 Offset: 0x20F72C4 VA: 0x20F72C4
	public bool get_FireOnSkip() { }

	// RVA: 0x20F72CC Offset: 0x20F72CC VA: 0x20F72CC
	public void set_FireOnSkip(bool value) { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void FireEvent();

	// RVA: -1 Offset: -1 Slot: 5
	public abstract void ProcessEvent(float runningTime);

	// RVA: 0x20F72D8 Offset: 0x20F72D8 VA: 0x20F72D8 Slot: 6
	public virtual void PauseEvent() { }

	// RVA: 0x20F72DC Offset: 0x20F72DC VA: 0x20F72DC Slot: 7
	public virtual void ResumeEvent() { }

	// RVA: 0x20F72E0 Offset: 0x20F72E0 VA: 0x20F72E0 Slot: 8
	public virtual void StopEvent() { }

	// RVA: 0x20F72E4 Offset: 0x20F72E4 VA: 0x20F72E4 Slot: 9
	public virtual void EndEvent() { }

	// RVA: 0x20F72E8 Offset: 0x20F72E8 VA: 0x20F72E8 Slot: 10
	public virtual void UndoEvent() { }

	// RVA: 0x20F72EC Offset: 0x20F72EC VA: 0x20F72EC Slot: 11
	public virtual void ManuallySetTime(float deltaTime) { }

	// RVA: 0x20F72F0 Offset: 0x20F72F0 VA: 0x20F72F0 Slot: 12
	public virtual Transform[] GetAdditionalObjects() { }

	// RVA: 0x20F733C Offset: 0x20F733C VA: 0x20F733C Slot: 13
	public virtual void SetAdditionalObjects(Transform[] additionalObjects) { }

	// RVA: 0x20F7340 Offset: 0x20F7340 VA: 0x20F7340 Slot: 14
	public virtual bool HasValidAdditionalObjects() { }

	// RVA: 0x20F7348 Offset: 0x20F7348 VA: 0x20F7348 Slot: 15
	public virtual void MakeUnique() { }

	// RVA: 0x20F734C Offset: 0x20F734C VA: 0x20F734C
	protected void .ctor() { }
}

// Namespace: WellFired
public enum UILayer // TypeDefIndex: 3738
{
	// Fields
	public int value__; // 0x0
	public const UILayer Front = 0;
	public const UILayer Middle = 1;
	public const UILayer Back = 2;
}

// Namespace: WellFired
public enum UIPosition // TypeDefIndex: 3739
{
	// Fields
	public int value__; // 0x0
	public const UIPosition Center = 0;
	public const UIPosition TopLeft = 1;
	public const UIPosition TopRight = 2;
	public const UIPosition BottomLeft = 3;
	public const UIPosition BottomRight = 4;
}

// Namespace: WellFired
[ExtensionAttribute] // RVA: 0xC1D66C Offset: 0xC1D66C VA: 0xC1D66C
public static class TransformExtensions // TypeDefIndex: 3740
{
	// Methods

	[ExtensionAttribute] // RVA: 0xC1E360 Offset: 0xC1E360 VA: 0xC1E360
	// RVA: 0x20F66D4 Offset: 0x20F66D4 VA: 0x20F66D4
	public static string GetFullHierarchyPath(Transform transform) { }
}

// Namespace: WellFired
[Serializable]
public class USObserverKeyframe : ScriptableObject // TypeDefIndex: 3741
{
	// Fields
	public USTimelineObserver observer; // 0x18
	public bool prevActiveState; // 0x20
	private AudioListener cachedListener; // 0x28
	private BaseTransition transition; // 0x30
	[SerializeField] // RVA: 0xC1DC50 Offset: 0xC1DC50 VA: 0xC1DC50
	private TypeOfTransition transitionType; // 0x38
	[SerializeField] // RVA: 0xC1DC60 Offset: 0xC1DC60 VA: 0xC1DC60
	private float transitionDuration; // 0x3C
	[SerializeField] // RVA: 0xC1DC70 Offset: 0xC1DC70 VA: 0xC1DC70
	private Camera camera; // 0x40
	[SerializeField] // RVA: 0xC1DC80 Offset: 0xC1DC80 VA: 0xC1DC80
	public string cameraPath; // 0x48
	[SerializeField] // RVA: 0xC1DC90 Offset: 0xC1DC90 VA: 0xC1DC90
	private float fireTime; // 0x50
	[SerializeField] // RVA: 0xC1DCA0 Offset: 0xC1DCA0 VA: 0xC1DCA0
	private List<Camera> additionalSourceCameras; // 0x58
	[SerializeField] // RVA: 0xC1DCB0 Offset: 0xC1DCB0 VA: 0xC1DCB0
	private List<Camera> additionalDestinationCameras; // 0x60
	[CompilerGeneratedAttribute] // RVA: 0xC1DCC0 Offset: 0xC1DCC0 VA: 0xC1DCC0
	private bool <Fired>k__BackingField; // 0x68

	// Properties
	public bool Fired { get; set; }
	public float FireTime { get; set; }
	public float TransitionDuration { get; set; }
	public TypeOfTransition TransitionType { get; set; }
	public BaseTransition ActiveTransition { get; set; }
	public Camera KeyframeCamera { get; set; }
	public AudioListener AudioListener { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC1E370 Offset: 0xC1E370 VA: 0xC1E370
	// RVA: 0x20F9C18 Offset: 0x20F9C18 VA: 0x20F9C18
	public bool get_Fired() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1E380 Offset: 0xC1E380 VA: 0xC1E380
	// RVA: 0x20F9C20 Offset: 0x20F9C20 VA: 0x20F9C20
	private void set_Fired(bool value) { }

	// RVA: 0x20F9C2C Offset: 0x20F9C2C VA: 0x20F9C2C
	public void set_FireTime(float value) { }

	// RVA: 0x20F9D1C Offset: 0x20F9D1C VA: 0x20F9D1C
	public float get_FireTime() { }

	// RVA: 0x20F9D24 Offset: 0x20F9D24 VA: 0x20F9D24
	public float get_TransitionDuration() { }

	// RVA: 0x20F9D3C Offset: 0x20F9D3C VA: 0x20F9D3C
	public void set_TransitionDuration(float value) { }

	// RVA: 0x20F9D44 Offset: 0x20F9D44 VA: 0x20F9D44
	public TypeOfTransition get_TransitionType() { }

	// RVA: 0x20F9D4C Offset: 0x20F9D4C VA: 0x20F9D4C
	public void set_TransitionType(TypeOfTransition value) { }

	// RVA: 0x20F9D54 Offset: 0x20F9D54 VA: 0x20F9D54
	public BaseTransition get_ActiveTransition() { }

	// RVA: 0x20F9D5C Offset: 0x20F9D5C VA: 0x20F9D5C
	public void set_ActiveTransition(BaseTransition value) { }

	// RVA: 0x20F9D64 Offset: 0x20F9D64 VA: 0x20F9D64
	public void set_KeyframeCamera(Camera value) { }

	// RVA: 0x20F9D6C Offset: 0x20F9D6C VA: 0x20F9D6C
	public Camera get_KeyframeCamera() { }

	// RVA: 0x20F9D74 Offset: 0x20F9D74 VA: 0x20F9D74
	public void set_AudioListener(AudioListener value) { }

	// RVA: 0x20F9D78 Offset: 0x20F9D78 VA: 0x20F9D78
	public AudioListener get_AudioListener() { }

	// RVA: 0x20F9E1C Offset: 0x20F9E1C VA: 0x20F9E1C
	public void Fire(Camera previousCamera) { }

	// RVA: 0x20FA020 Offset: 0x20FA020 VA: 0x20FA020
	public void UnFire() { }

	// RVA: 0x20FA0C8 Offset: 0x20FA0C8 VA: 0x20FA0C8
	public void End() { }

	// RVA: 0x20FA0FC Offset: 0x20FA0FC VA: 0x20FA0FC
	public void Revert() { }

	// RVA: 0x20FA20C Offset: 0x20FA20C VA: 0x20FA20C
	public void ProcessFromOnGUI() { }

	// RVA: 0x20FA220 Offset: 0x20FA220 VA: 0x20FA220
	public void Process(float time) { }

	// RVA: 0x20FA268 Offset: 0x20FA268 VA: 0x20FA268
	public void .ctor() { }
}

// Namespace: WellFired
public enum PropertyTypeInfo // TypeDefIndex: 3742
{
	// Fields
	public int value__; // 0x0
	public const PropertyTypeInfo None = -1;
	public const PropertyTypeInfo Int = 0;
	public const PropertyTypeInfo Long = 1;
	public const PropertyTypeInfo Float = 2;
	public const PropertyTypeInfo Double = 3;
	public const PropertyTypeInfo Bool = 4;
	public const PropertyTypeInfo Vec2 = 5;
	public const PropertyTypeInfo Vec3 = 6;
	public const PropertyTypeInfo Vec4 = 7;
	public const PropertyTypeInfo Quat = 8;
	public const PropertyTypeInfo Colour = 9;
}

// Namespace: WellFired
public class Modification // TypeDefIndex: 3743
{
	// Fields
	public USInternalCurve curve; // 0x10
	public float newTime; // 0x18
	public float newValue; // 0x1C

	// Methods

	// RVA: 0x20F20AC Offset: 0x20F20AC VA: 0x20F20AC
	public void .ctor(USInternalCurve curve, float newTime, float newValue) { }
}

// Namespace: WellFired
[Serializable]
public class USPropertyInfo : ScriptableObject // TypeDefIndex: 3744
{
	// Fields
	[SerializeField] // RVA: 0xC1DCD0 Offset: 0xC1DCD0 VA: 0xC1DCD0
	private PropertyTypeInfo propertyType; // 0x18
	[SerializeField] // RVA: 0xC1DCE0 Offset: 0xC1DCE0 VA: 0xC1DCE0
	private Component component; // 0x20
	[SerializeField] // RVA: 0xC1DCF0 Offset: 0xC1DCF0 VA: 0xC1DCF0
	private string componentType; // 0x28
	public string propertyName; // 0x30
	public string fieldName; // 0x38
	private PropertyInfo cachedPropertyInfo; // 0x40
	private FieldInfo cachedFieldInfo; // 0x48
	public List<USInternalCurve> curves; // 0x50
	[ObsoleteAttribute] // RVA: 0xC1DD00 Offset: 0xC1DD00 VA: 0xC1DD00
	public AnimationCurve curves0; // 0x58
	[ObsoleteAttribute] // RVA: 0xC1DD38 Offset: 0xC1DD38 VA: 0xC1DD38
	public AnimationCurve curves1; // 0x60
	[ObsoleteAttribute] // RVA: 0xC1DD70 Offset: 0xC1DD70 VA: 0xC1DD70
	public AnimationCurve curves2; // 0x68
	[ObsoleteAttribute] // RVA: 0xC1DDA8 Offset: 0xC1DDA8 VA: 0xC1DDA8
	public AnimationCurve curves3; // 0x70
	private bool tmpBool; // 0x78
	private Keyframe tmpKeyframe; // 0x7C
	private Vector2 tmpVector2; // 0x98
	private Vector3 tmpVector3; // 0xA0
	private Vector4 tmpVector4; // 0xAC
	private Quaternion tmpQuat; // 0xBC
	private Color tmpColour; // 0xCC
	[SerializeField] // RVA: 0xC1DDE0 Offset: 0xC1DDE0 VA: 0xC1DDE0
	private int baseInt; // 0xDC
	[SerializeField] // RVA: 0xC1DDF0 Offset: 0xC1DDF0 VA: 0xC1DDF0
	private long baseLong; // 0xE0
	[SerializeField] // RVA: 0xC1DE00 Offset: 0xC1DE00 VA: 0xC1DE00
	private float baseFloat; // 0xE8
	[SerializeField] // RVA: 0xC1DE10 Offset: 0xC1DE10 VA: 0xC1DE10
	private double baseDouble; // 0xF0
	[SerializeField] // RVA: 0xC1DE20 Offset: 0xC1DE20 VA: 0xC1DE20
	private bool baseBool; // 0xF8
	[SerializeField] // RVA: 0xC1DE30 Offset: 0xC1DE30 VA: 0xC1DE30
	private Vector2 baseVector2; // 0xFC
	[SerializeField] // RVA: 0xC1DE40 Offset: 0xC1DE40 VA: 0xC1DE40
	private Vector3 baseVector3; // 0x104
	[SerializeField] // RVA: 0xC1DE50 Offset: 0xC1DE50 VA: 0xC1DE50
	private Vector4 baseVector4; // 0x110
	[SerializeField] // RVA: 0xC1DE60 Offset: 0xC1DE60 VA: 0xC1DE60
	private Quaternion baseQuat; // 0x120
	[SerializeField] // RVA: 0xC1DE70 Offset: 0xC1DE70 VA: 0xC1DE70
	private Color baseColour; // 0x130
	private float previousTime; // 0x140
	[SerializeField] // RVA: 0xC1DE80 Offset: 0xC1DE80 VA: 0xC1DE80
	private string internalName; // 0x148

	// Properties
	public PropertyInfo propertyInfo { get; set; }
	public FieldInfo fieldInfo { get; set; }
	public bool UseCurrentValue { get; set; }
	public Component Component { get; set; }
	public string ComponentType { get; set; }
	public string PropertyName { get; set; }
	public PropertyTypeInfo PropertyType { get; }
	public string InternalName { get; set; }

	// Methods

	// RVA: 0x20FA308 Offset: 0x20FA308 VA: 0x20FA308
	public PropertyInfo get_propertyInfo() { }

	// RVA: 0x20FA47C Offset: 0x20FA47C VA: 0x20FA47C
	public void set_propertyInfo(PropertyInfo value) { }

	// RVA: 0x20FA4C0 Offset: 0x20FA4C0 VA: 0x20FA4C0
	public FieldInfo get_fieldInfo() { }

	// RVA: 0x20FA638 Offset: 0x20FA638 VA: 0x20FA638
	public void set_fieldInfo(FieldInfo value) { }

	// RVA: 0x20FA67C Offset: 0x20FA67C VA: 0x20FA67C
	public bool get_UseCurrentValue() { }

	// RVA: 0x20FA76C Offset: 0x20FA76C VA: 0x20FA76C
	public void set_UseCurrentValue(bool value) { }

	// RVA: 0x20FA894 Offset: 0x20FA894 VA: 0x20FA894
	public Component get_Component() { }

	// RVA: 0x20FA89C Offset: 0x20FA89C VA: 0x20FA89C
	public void set_Component(Component value) { }

	// RVA: 0x20FA988 Offset: 0x20FA988 VA: 0x20FA988
	public string get_ComponentType() { }

	// RVA: 0x20FA960 Offset: 0x20FA960 VA: 0x20FA960
	public void set_ComponentType(string value) { }

	// RVA: 0x20FAB68 Offset: 0x20FAB68 VA: 0x20FAB68
	public string get_PropertyName() { }

	// RVA: 0x20FAC30 Offset: 0x20FAC30 VA: 0x20FAC30
	private void set_PropertyName(string value) { }

	// RVA: 0x20FAC34 Offset: 0x20FAC34 VA: 0x20FAC34
	public PropertyTypeInfo get_PropertyType() { }

	// RVA: 0x20FAC3C Offset: 0x20FAC3C VA: 0x20FAC3C
	public string get_InternalName() { }

	// RVA: 0x20FAC44 Offset: 0x20FAC44 VA: 0x20FAC44
	public void set_InternalName(string value) { }

	// RVA: 0x20FAC4C Offset: 0x20FAC4C VA: 0x20FAC4C
	public void CreatePropertyInfo(PropertyTypeInfo createdPropertyType) { }

	// RVA: 0x20FB250 Offset: 0x20FB250 VA: 0x20FB250
	public void SetValue(float time) { }

	// RVA: 0x20FBE74 Offset: 0x20FBE74 VA: 0x20FBE74
	public void AddKeyframe(List<USInternalCurve> settingCurves, object ourValue, float time, CurveAutoTangentModes tangentMode) { }

	// RVA: 0x20FD570 Offset: 0x20FD570 VA: 0x20FD570
	public void AddKeyframe(float time, CurveAutoTangentModes tangentMode) { }

	// RVA: 0x20FD63C Offset: 0x20FD63C VA: 0x20FD63C
	public void AddKeyframe(object ourValue, float time, CurveAutoTangentModes tangentMode) { }

	// RVA: 0x20FD414 Offset: 0x20FD414 VA: 0x20FD414
	private void AddKeyframe(USInternalCurve curve, Keyframe keyframe, CurveAutoTangentModes tangentMode) { }

	// RVA: 0x20FCFE4 Offset: 0x20FCFE4 VA: 0x20FCFE4
	private void AddKeyframe(int ourValue, float time, CurveAutoTangentModes tangentMode) { }

	// RVA: 0x20FD0B8 Offset: 0x20FD0B8 VA: 0x20FD0B8
	private void AddKeyframe(long ourValue, float time, CurveAutoTangentModes tangentMode) { }

	// RVA: 0x20FD18C Offset: 0x20FD18C VA: 0x20FD18C
	private void AddKeyframe(float ourValue, float time, CurveAutoTangentModes tangentMode) { }

	// RVA: 0x20FD260 Offset: 0x20FD260 VA: 0x20FD260
	private void AddKeyframe(double ourValue, float time, CurveAutoTangentModes tangentMode) { }

	// RVA: 0x20FD334 Offset: 0x20FD334 VA: 0x20FD334
	private void AddKeyframe(bool ourValue, float time, CurveAutoTangentModes tangentMode) { }

	// RVA: 0x20FD9B4 Offset: 0x20FD9B4 VA: 0x20FD9B4
	private void AddKeyframe(Vector2 ourValue, float time, CurveAutoTangentModes tangentMode) { }

	// RVA: 0x20FDB00 Offset: 0x20FDB00 VA: 0x20FDB00
	private void AddKeyframe(Vector3 ourValue, float time, CurveAutoTangentModes tangentMode) { }

	// RVA: 0x20FDCB4 Offset: 0x20FDCB4 VA: 0x20FDCB4
	private void AddKeyframe(Vector4 ourValue, float time, CurveAutoTangentModes tangentMode) { }

	// RVA: 0x20FDED8 Offset: 0x20FDED8 VA: 0x20FDED8
	private void AddKeyframe(Quaternion ourValue, float time, CurveAutoTangentModes tangentMode) { }

	// RVA: 0x20FE0FC Offset: 0x20FE0FC VA: 0x20FE0FC
	private void AddKeyframe(Color ourValue, float time, CurveAutoTangentModes tangentMode) { }

	// RVA: 0x20FACEC Offset: 0x20FACEC VA: 0x20FACEC
	private void CreatePropertyCurves() { }

	// RVA: 0x20FE320 Offset: 0x20FE320 VA: 0x20FE320
	public object GetValueForTime(float time) { }

	// RVA: 0x20FEA80 Offset: 0x20FEA80 VA: 0x20FEA80
	public List<Modification> GetModifiedCurvesAtTime(float runningTime) { }

	// RVA: 0x20FFE8C Offset: 0x20FFE8C VA: 0x20FFE8C
	public void StoreBaseState() { }

	// RVA: 0x2100104 Offset: 0x2100104 VA: 0x2100104
	public void RestoreBaseState() { }

	// RVA: 0x20FCCE8 Offset: 0x20FCCE8 VA: 0x20FCCE8
	public static PropertyTypeInfo GetMappedType(Type type) { }

	// RVA: 0x21002DC Offset: 0x21002DC VA: 0x21002DC
	public static Type GetMappedType(PropertyTypeInfo type) { }

	// RVA: 0x2100458 Offset: 0x2100458 VA: 0x2100458
	private float GetValue(int curveIndex) { }

	// RVA: 0x20FBD9C Offset: 0x20FBD9C VA: 0x20FBD9C
	private void BuildForCurrentValue(int curveIndex) { }

	// RVA: 0x210076C Offset: 0x210076C VA: 0x210076C
	public string GetJSON() { }

	// RVA: 0x2100838 Offset: 0x2100838 VA: 0x2100838
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC1D67C Offset: 0xC1D67C VA: 0xC1D67C
[Serializable]
private sealed class USPropertyInfo.<>c // TypeDefIndex: 3745
{
	// Fields
	public static readonly USPropertyInfo.<>c <>9; // 0x0
	public static Func<USInternalCurve, bool> <>9__37_0; // 0x8

	// Methods

	// RVA: 0x21009EC Offset: 0x21009EC VA: 0x21009EC
	private static void .cctor() { }

	// RVA: 0x2100A50 Offset: 0x2100A50 VA: 0x2100A50
	public void .ctor() { }

	// RVA: 0x2100A58 Offset: 0x2100A58 VA: 0x2100A58
	internal bool <get_UseCurrentValue>b__37_0(USInternalCurve curve) { }
}

// Namespace: WellFired
public class USRecord // TypeDefIndex: 3746
{
	// Methods

	// RVA: 0x2100A84 Offset: 0x2100A84 VA: 0x2100A84
	public static int GetFramerate() { }

	// RVA: 0x2100BCC Offset: 0x2100BCC VA: 0x2100BCC
	public static int GetUpscaleAmount() { }
}

// Namespace: 
public enum USRecord.PlayerResolution // TypeDefIndex: 3747
{
	// Fields
	public int value__; // 0x0
	public const USRecord.PlayerResolution _1920x1080 = 0;
	public const USRecord.PlayerResolution _1280x720 = 1;
	public const USRecord.PlayerResolution _960x540 = 2;
	public const USRecord.PlayerResolution _854x480 = 3;
	public const USRecord.PlayerResolution _720x576 = 4;
	public const USRecord.PlayerResolution _640x480 = 5;
	public const USRecord.PlayerResolution _Custom = 6;
}

// Namespace: 
public enum USRecord.FrameRate // TypeDefIndex: 3748
{
	// Fields
	public int value__; // 0x0
	public const USRecord.FrameRate _24 = 0;
	public const USRecord.FrameRate _25 = 1;
	public const USRecord.FrameRate _30 = 2;
	public const USRecord.FrameRate _50 = 3;
	public const USRecord.FrameRate _60 = 4;
}

// Namespace: 
public enum USRecord.Upscaling // TypeDefIndex: 3749
{
	// Fields
	public int value__; // 0x0
	public const USRecord.Upscaling _1 = 0;
	public const USRecord.Upscaling _2 = 1;
	public const USRecord.Upscaling _4 = 2;
	public const USRecord.Upscaling _8 = 3;
}

// Namespace: WellFired
public static class USRecordRuntimePreferences // TypeDefIndex: 3750
{
	// Fields
	private static string resolutionPref; // 0x0
	private static string frameRatePref; // 0x8
	private static string upscaleAmountPref; // 0x10
	private static string pathPref; // 0x18
	private static string presetNamePref; // 0x20
	private static string presetPref; // 0x28
	private static string selectedPresetPref; // 0x30
	private static USRecord.PlayerResolution defaultResolution; // 0x38
	private static USRecord.FrameRate defaultFrameRate; // 0x3C
	private static USRecord.Upscaling defaultUpscaling; // 0x40
	private static string defaultPreset; // 0x48
	private static int defaultSelectedPreset; // 0x50

	// Properties
	public static USRecord.FrameRate FrameRate { get; }
	public static USRecord.Upscaling UpscaleAmount { get; }
	public static string CapturePath { get; }

	// Methods

	// RVA: 0x2100B00 Offset: 0x2100B00 VA: 0x2100B00
	public static USRecord.FrameRate get_FrameRate() { }

	// RVA: 0x2100C48 Offset: 0x2100C48 VA: 0x2100C48
	public static USRecord.Upscaling get_UpscaleAmount() { }

	// RVA: 0x2100D14 Offset: 0x2100D14 VA: 0x2100D14
	public static string get_CapturePath() { }

	// RVA: 0x2100DE8 Offset: 0x2100DE8 VA: 0x2100DE8
	public static string GetDefaultCapturePath() { }

	// RVA: 0x2100EB4 Offset: 0x2100EB4 VA: 0x2100EB4
	private static void .cctor() { }
}

// Namespace: WellFired
public class USRecordSequence : MonoBehaviour // TypeDefIndex: 3751
{
	// Fields
	private bool isRecording; // 0x18
	private bool recordOnStart; // 0x19
	private int imageCount; // 0x1C
	private int captureFrameRate; // 0x20
	private int upscaleAmount; // 0x24
	private string capturePath; // 0x28

	// Properties
	public int CaptureFrameRate { set; }
	public int UpscaleAmount { set; }
	public string CapturePath { set; }
	public bool RecordOnStart { set; }

	// Methods

	// RVA: 0x2100FCC Offset: 0x2100FCC VA: 0x2100FCC
	public void set_CaptureFrameRate(int value) { }

	// RVA: 0x2101050 Offset: 0x2101050 VA: 0x2101050
	public void set_UpscaleAmount(int value) { }

	// RVA: 0x21010D4 Offset: 0x21010D4 VA: 0x21010D4
	public void set_CapturePath(string value) { }

	// RVA: 0x21010DC Offset: 0x21010DC VA: 0x21010DC
	public void set_RecordOnStart(bool value) { }

	// RVA: 0x21010E8 Offset: 0x21010E8 VA: 0x21010E8
	private void Start() { }

	// RVA: 0x21010F8 Offset: 0x21010F8 VA: 0x21010F8
	private void LateUpdate() { }

	// RVA: 0x2101310 Offset: 0x2101310 VA: 0x2101310
	public void StartRecording() { }

	// RVA: 0x210131C Offset: 0x210131C VA: 0x210131C
	public void PauseRecording() { }

	// RVA: 0x2101324 Offset: 0x2101324 VA: 0x2101324
	public void StopRecording() { }

	// RVA: 0x2101330 Offset: 0x2101330 VA: 0x2101330
	public void .ctor() { }
}

// Namespace: WellFired
[ExecuteInEditMode] // RVA: 0xC1D68C Offset: 0xC1D68C VA: 0xC1D68C
[Serializable]
public class USSequencer : MonoBehaviour // TypeDefIndex: 3752
{
	// Fields
	[SerializeField] // RVA: 0xC1DE90 Offset: 0xC1DE90 VA: 0xC1DE90
	private List<Transform> observedObjects; // 0x18
	[SerializeField] // RVA: 0xC1DEA0 Offset: 0xC1DEA0 VA: 0xC1DEA0
	private float runningTime; // 0x20
	[SerializeField] // RVA: 0xC1DEB0 Offset: 0xC1DEB0 VA: 0xC1DEB0
	private float playbackRate; // 0x24
	[SerializeField] // RVA: 0xC1DEC0 Offset: 0xC1DEC0 VA: 0xC1DEC0
	private int version; // 0x28
	[SerializeField] // RVA: 0xC1DED0 Offset: 0xC1DED0 VA: 0xC1DED0
	private float duration; // 0x2C
	[SerializeField] // RVA: 0xC1DEE0 Offset: 0xC1DEE0 VA: 0xC1DEE0
	private bool isLoopingSequence; // 0x30
	[SerializeField] // RVA: 0xC1DEF0 Offset: 0xC1DEF0 VA: 0xC1DEF0
	private bool isPingPongingSequence; // 0x31
	[SerializeField] // RVA: 0xC1DF00 Offset: 0xC1DF00 VA: 0xC1DF00
	private bool updateOnFixedUpdate; // 0x32
	[SerializeField] // RVA: 0xC1DF10 Offset: 0xC1DF10 VA: 0xC1DF10
	private bool autoplay; // 0x33
	private bool playing; // 0x34
	private bool isFreshPlayback; // 0x35
	private float previousTime; // 0x38
	private float minPlaybackRate; // 0x3C
	private float maxPlaybackRate; // 0x40
	private float setSkipTime; // 0x44
	private USTimelineContainer[] timelineContainers; // 0x48
	public USSequencer.PlaybackDelegate PlaybackStarted; // 0x50
	public USSequencer.PlaybackDelegate PlaybackStopped; // 0x58
	public USSequencer.PlaybackDelegate PlaybackPaused; // 0x60
	public USSequencer.PlaybackDelegate PlaybackFinished; // 0x68
	public USSequencer.UpdateDelegate BeforeUpdate; // 0x70
	public USSequencer.UpdateDelegate AfterUpdate; // 0x78
	public USSequencer.PlaybackDelegate OnRunningTimeSet; // 0x80

	// Properties
	public int Version { get; set; }
	public List<Transform> ObservedObjects { get; }
	public float Duration { get; set; }
	public bool IsPlaying { get; }
	public bool IsLopping { get; set; }
	public bool IsPingPonging { get; set; }
	public bool IsComplete { get; set; }
	public float RunningTime { get; set; }
	public float PlaybackRate { get; set; }
	public float MinPlaybackRate { get; }
	public float MaxPlaybackRate { get; }
	public bool HasSequenceBeenStarted { get; }
	public USTimelineContainer[] TimelineContainers { get; }
	public USTimelineContainer[] SortedTimelineContainers { get; }
	public int TimelineContainerCount { get; }
	public int ObservedObjectCount { get; }
	public bool UpdateOnFixedUpdate { get; set; }
	public static float SequenceUpdateRate { get; }

	// Methods

	// RVA: 0x2101654 Offset: 0x2101654 VA: 0x2101654
	public int get_Version() { }

	// RVA: 0x210165C Offset: 0x210165C VA: 0x210165C
	public void set_Version(int value) { }

	// RVA: 0x2101664 Offset: 0x2101664 VA: 0x2101664
	public List<Transform> get_ObservedObjects() { }

	// RVA: 0x20F2CEC Offset: 0x20F2CEC VA: 0x20F2CEC
	public float get_Duration() { }

	// RVA: 0x210166C Offset: 0x210166C VA: 0x210166C
	public void set_Duration(float value) { }

	// RVA: 0x20F26FC Offset: 0x20F26FC VA: 0x20F26FC
	public bool get_IsPlaying() { }

	// RVA: 0x2101684 Offset: 0x2101684 VA: 0x2101684
	public bool get_IsLopping() { }

	// RVA: 0x210168C Offset: 0x210168C VA: 0x210168C
	public void set_IsLopping(bool value) { }

	// RVA: 0x2101698 Offset: 0x2101698 VA: 0x2101698
	public bool get_IsPingPonging() { }

	// RVA: 0x21016A0 Offset: 0x21016A0 VA: 0x21016A0
	public void set_IsPingPonging(bool value) { }

	// RVA: 0x21016AC Offset: 0x21016AC VA: 0x21016AC
	public bool get_IsComplete() { }

	// RVA: 0x21016D0 Offset: 0x21016D0 VA: 0x21016D0
	public void set_IsComplete(bool value) { }

	// RVA: 0x20F2CE4 Offset: 0x20F2CE4 VA: 0x20F2CE4
	public float get_RunningTime() { }

	// RVA: 0x20F2CF4 Offset: 0x20F2CF4 VA: 0x20F2CF4
	public void set_RunningTime(float value) { }

	// RVA: 0x2101830 Offset: 0x2101830 VA: 0x2101830
	public float get_PlaybackRate() { }

	// RVA: 0x2101CA8 Offset: 0x2101CA8 VA: 0x2101CA8
	public void set_PlaybackRate(float value) { }

	// RVA: 0x2101D38 Offset: 0x2101D38 VA: 0x2101D38
	public float get_MinPlaybackRate() { }

	// RVA: 0x2101D40 Offset: 0x2101D40 VA: 0x2101D40
	public float get_MaxPlaybackRate() { }

	// RVA: 0x2101D48 Offset: 0x2101D48 VA: 0x2101D48
	public bool get_HasSequenceBeenStarted() { }

	// RVA: 0x21016D4 Offset: 0x21016D4 VA: 0x21016D4
	public USTimelineContainer[] get_TimelineContainers() { }

	// RVA: 0x2101D58 Offset: 0x2101D58 VA: 0x2101D58
	public USTimelineContainer[] get_SortedTimelineContainers() { }

	// RVA: 0x2101DF8 Offset: 0x2101DF8 VA: 0x2101DF8
	public int get_TimelineContainerCount() { }

	// RVA: 0x2101E24 Offset: 0x2101E24 VA: 0x2101E24
	public int get_ObservedObjectCount() { }

	// RVA: 0x2101E84 Offset: 0x2101E84 VA: 0x2101E84
	public bool get_UpdateOnFixedUpdate() { }

	// RVA: 0x2101E8C Offset: 0x2101E8C VA: 0x2101E8C
	public void set_UpdateOnFixedUpdate(bool value) { }

	// RVA: 0x2101E98 Offset: 0x2101E98 VA: 0x2101E98
	public static float get_SequenceUpdateRate() { }

	// RVA: 0x2101EBC Offset: 0x2101EBC VA: 0x2101EBC
	private void OnDestroy() { }

	// RVA: 0x2101F10 Offset: 0x2101F10 VA: 0x2101F10
	private void Start() { }

	// RVA: 0x2102424 Offset: 0x2102424 VA: 0x2102424
	public void TogglePlayback() { }

	// RVA: 0x20F2EE0 Offset: 0x20F2EE0 VA: 0x20F2EE0
	public void Play() { }

	// RVA: 0x20F2740 Offset: 0x20F2740 VA: 0x20F2740
	public void Pause() { }

	// RVA: 0x20F631C Offset: 0x20F631C VA: 0x20F631C
	public void Stop() { }

	// RVA: 0x2102460 Offset: 0x2102460 VA: 0x2102460
	private void End() { }

	// RVA: 0x21025FC Offset: 0x21025FC VA: 0x21025FC
	public USTimelineContainer CreateNewTimelineContainer(Transform affectedObject) { }

	// RVA: 0x2102894 Offset: 0x2102894 VA: 0x2102894
	public bool HasTimelineContainerFor(Transform affectedObject) { }

	// RVA: 0x2102994 Offset: 0x2102994 VA: 0x2102994
	public USTimelineContainer GetTimelineContainerFor(Transform affectedObject) { }

	// RVA: 0x2102A94 Offset: 0x2102A94 VA: 0x2102A94
	public void DeleteTimelineContainer(USTimelineContainer timelineContainer) { }

	// RVA: 0x2102B1C Offset: 0x2102B1C VA: 0x2102B1C
	public void RemoveObservedObject(Transform observedObject) { }

	// RVA: 0x20F5504 Offset: 0x20F5504 VA: 0x20F5504
	public void SkipTimelineTo(float time) { }

	// RVA: 0x2102BC8 Offset: 0x2102BC8 VA: 0x2102BC8
	public void SetPlaybackRate(float rate) { }

	// RVA: 0x2102BCC Offset: 0x2102BCC VA: 0x2102BCC
	public void SetPlaybackTime(float time) { }

	// RVA: 0x2102BD0 Offset: 0x2102BD0 VA: 0x2102BD0
	public void UpdateSequencer(float deltaTime) { }

	// RVA: 0x2103350 Offset: 0x2103350 VA: 0x2103350
	private IEnumerator UpdateSequencerCoroutine() { }

	// RVA: 0x21033F0 Offset: 0x21033F0 VA: 0x21033F0
	private void FixedUpdate() { }

	// RVA: 0x210343C Offset: 0x210343C VA: 0x210343C
	public void ResetCachedData() { }

	// RVA: 0x2103558 Offset: 0x2103558 VA: 0x2103558
	public void .ctor() { }
}

// Namespace: 
public sealed class USSequencer.PlaybackDelegate : MulticastDelegate // TypeDefIndex: 3753
{
	// Methods

	// RVA: 0x20F2704 Offset: 0x20F2704 VA: 0x20F2704
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2101908 Offset: 0x2101908 VA: 0x2101908 Slot: 11
	public virtual void Invoke(USSequencer sequencer) { }

	// RVA: 0x2103BA0 Offset: 0x2103BA0 VA: 0x2103BA0 Slot: 12
	public virtual IAsyncResult BeginInvoke(USSequencer sequencer, AsyncCallback callback, object object) { }

	// RVA: 0x2103BC4 Offset: 0x2103BC4 VA: 0x2103BC4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class USSequencer.UpdateDelegate : MulticastDelegate // TypeDefIndex: 3754
{
	// Methods

	// RVA: 0x210398C Offset: 0x210398C VA: 0x210398C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x2102EF4 Offset: 0x2102EF4 VA: 0x2102EF4 Slot: 11
	public virtual void Invoke(USSequencer sequencer, float newRunningTime) { }

	// RVA: 0x2103BD0 Offset: 0x2103BD0 VA: 0x2103BD0 Slot: 12
	public virtual IAsyncResult BeginInvoke(USSequencer sequencer, float newRunningTime, AsyncCallback callback, object object) { }

	// RVA: 0x2103C6C Offset: 0x2103C6C VA: 0x2103C6C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC1D69C Offset: 0xC1D69C VA: 0xC1D69C
private sealed class USSequencer.<UpdateSequencerCoroutine>d__85 : IEnumerator<object>, IDisposable, IEnumerator // TypeDefIndex: 3755
{
	// Fields
	private int <>1__state; // 0x10
	private object <>2__current; // 0x18
	public USSequencer <>4__this; // 0x20
	private WaitForSeconds <wait>5__2; // 0x28

	// Properties
	private object System.Collections.Generic.IEnumerator<System.Object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xC1E390 Offset: 0xC1E390 VA: 0xC1E390
	// RVA: 0x21033C4 Offset: 0x21033C4 VA: 0x21033C4
	public void .ctor(int <>1__state) { }

	[DebuggerHiddenAttribute] // RVA: 0xC1E3A0 Offset: 0xC1E3A0 VA: 0xC1E3A0
	// RVA: 0x2103A24 Offset: 0x2103A24 VA: 0x2103A24 Slot: 8
	private void System.IDisposable.Dispose() { }

	// RVA: 0x2103A28 Offset: 0x2103A28 VA: 0x2103A28 Slot: 6
	private bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xC1E3B0 Offset: 0xC1E3B0 VA: 0xC1E3B0
	// RVA: 0x2103B28 Offset: 0x2103B28 VA: 0x2103B28 Slot: 4
	private object System.Collections.Generic.IEnumerator<System.Object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC1E3C0 Offset: 0xC1E3C0 VA: 0xC1E3C0
	// RVA: 0x2103B30 Offset: 0x2103B30 VA: 0x2103B30 Slot: 7
	private void System.Collections.IEnumerator.Reset() { }
