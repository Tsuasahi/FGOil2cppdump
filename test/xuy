
	// RVA: 0x1AB9EF4 Offset: 0x1AB9EF4 VA: 0x1AB9EF4
	private static bool <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB23C0 Offset: 0xCB23C0 VA: 0xCB23C0
private sealed class ScrTerminalMap.<ProductivityGrowthDialogOpen>c__AnonStorey9 // TypeDefIndex: 11330
{
	// Fields
	internal Action callback; // 0x10
	internal ScrTerminalMap $this; // 0x18

	// Methods

	// RVA: 0x1AB9514 Offset: 0x1AB9514 VA: 0x1AB9514
	public void .ctor() { }

	// RVA: 0x1AB951C Offset: 0x1AB951C VA: 0x1AB951C
	internal void <>m__0() { }

	// RVA: 0x1AB95C0 Offset: 0x1AB95C0 VA: 0x1AB95C0
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB23D0 Offset: 0xCB23D0 VA: 0xCB23D0
private sealed class ScrTerminalMap.<HarvestGrowthDialogOpen>c__AnonStoreyA // TypeDefIndex: 11331
{
	// Fields
	internal Action callback; // 0x10

	// Methods

	// RVA: 0x1AB87EC Offset: 0x1AB87EC VA: 0x1AB87EC
	public void .ctor() { }

	// RVA: 0x1AB87F4 Offset: 0x1AB87F4 VA: 0x1AB87F4
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB23E0 Offset: 0xCB23E0 VA: 0xCB23E0
private sealed class ScrTerminalMap.<ShowActivePlayerIcon>c__AnonStoreyB // TypeDefIndex: 11332
{
	// Fields
	internal Vector3 endScale; // 0x10
	internal Vector3 startScale; // 0x1C
	internal EasingObject easingObject; // 0x28
	internal ScrTerminalMap $this; // 0x30

	// Methods

	// RVA: 0x1AB96F4 Offset: 0x1AB96F4 VA: 0x1AB96F4
	public void .ctor() { }

	// RVA: 0x1AB96FC Offset: 0x1AB96FC VA: 0x1AB96FC
	internal void <>m__0() { }

	// RVA: 0x1AB9738 Offset: 0x1AB9738 VA: 0x1AB9738
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB23F0 Offset: 0xCB23F0 VA: 0xCB23F0
private sealed class ScrTerminalMap.<showEventScriptDlgs>c__AnonStoreyC // TypeDefIndex: 11333
{
	// Fields
	internal Action callback; // 0x10
	internal ScrTerminalMap $this; // 0x18

	// Methods

	// RVA: 0x1ABA070 Offset: 0x1ABA070 VA: 0x1ABA070
	public void .ctor() { }

	// RVA: 0x1ABA078 Offset: 0x1ABA078 VA: 0x1ABA078
	internal void <>m__0() { }

	// RVA: 0x1ABA170 Offset: 0x1ABA170 VA: 0x1ABA170
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2400 Offset: 0xCB2400 VA: 0xCB2400
private sealed class ScrTerminalMap.<EventScriptCaller>c__AnonStoreyD // TypeDefIndex: 11334
{
	// Fields
	internal EventScriptEntity eventScriptEntity; // 0x10
	internal ScrTerminalMap $this; // 0x18

	// Methods

	// RVA: 0x1AB868C Offset: 0x1AB868C VA: 0x1AB868C
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2410 Offset: 0xCB2410 VA: 0xCB2410
private sealed class ScrTerminalMap.<EventScriptCaller>c__AnonStoreyE // TypeDefIndex: 11335
{
	// Fields
	internal EventRaceResultEffect effect; // 0x10
	internal ScrTerminalMap.<EventScriptCaller>c__AnonStoreyD <>f__ref$13; // 0x18

	// Methods

	// RVA: 0x1AB8694 Offset: 0x1AB8694 VA: 0x1AB8694
	public void .ctor() { }

	// RVA: 0x1AB869C Offset: 0x1AB869C VA: 0x1AB869C
	internal void <>m__0(bool isExit) { }

	// RVA: 0x1AB86FC Offset: 0x1AB86FC VA: 0x1AB86FC
	internal void <>m__1() { }

	// RVA: 0x1AB878C Offset: 0x1AB878C VA: 0x1AB878C
	internal void <>m__2() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2420 Offset: 0xCB2420 VA: 0xCB2420
private sealed class ScrTerminalMap.<CheckAndWarningEventQuestBoardAllClear>c__AnonStoreyF // TypeDefIndex: 11336
{
	// Fields
	internal Action callback; // 0x10
	internal ScrTerminalMap $this; // 0x18

	// Methods

	// RVA: 0x1AB7EFC Offset: 0x1AB7EFC VA: 0x1AB7EFC
	public void .ctor() { }

	// RVA: 0x1AB7F04 Offset: 0x1AB7F04 VA: 0x1AB7F04
	internal void <>m__0(bool isDecide) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2430 Offset: 0xCB2430 VA: 0xCB2430
private sealed class ScrTerminalMap.<EndRequestDiceUse>c__AnonStorey10 // TypeDefIndex: 11337
{
	// Fields
	internal string result; // 0x10
	internal ScrTerminalMap $this; // 0x18

	// Methods

	// RVA: 0x1AB8080 Offset: 0x1AB8080 VA: 0x1AB8080
	public void .ctor() { }

	// RVA: 0x1AB8088 Offset: 0x1AB8088 VA: 0x1AB8088
	internal void <>m__0() { }

	// RVA: 0x1AB82D0 Offset: 0x1AB82D0 VA: 0x1AB82D0
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2440 Offset: 0xCB2440 VA: 0xCB2440
private sealed class ScrTerminalMap.<PlayBoardGamePieceEffectSub>c__AnonStorey11 // TypeDefIndex: 11338
{
	// Fields
	internal Vector3 oldPos; // 0x10
	internal ScrTerminalMap $this; // 0x20

	// Methods

	// RVA: 0x1AB9110 Offset: 0x1AB9110 VA: 0x1AB9110
	public void .ctor() { }

	// RVA: 0x1AB9118 Offset: 0x1AB9118 VA: 0x1AB9118
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2450 Offset: 0xCB2450 VA: 0xCB2450
private sealed class ScrTerminalMap.<PlayBoardGameQuestArrivalEffect>c__AnonStorey12 // TypeDefIndex: 11339
{
	// Fields
	internal bool isAuto; // 0x10
	internal int squareId; // 0x14
	internal int clearCount; // 0x18
	internal int maxClearCount; // 0x1C
	internal Action callback; // 0x20
	internal ScrTerminalMap $this; // 0x28

	// Methods

	// RVA: 0x1AB934C Offset: 0x1AB934C VA: 0x1AB934C
	public void .ctor() { }

	// RVA: 0x1AB9354 Offset: 0x1AB9354 VA: 0x1AB9354
	internal void <>m__0() { }

	// RVA: 0x1AB9480 Offset: 0x1AB9480 VA: 0x1AB9480
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2460 Offset: 0xCB2460 VA: 0xCB2460
private sealed class ScrTerminalMap.<EventBoardCameraActionAuto_IE>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 11340
{
	// Fields
	internal Action callback; // 0x10
	internal int squareId; // 0x18
	internal int clearCount; // 0x1C
	internal int maxClearCount; // 0x20
	internal ScrTerminalMap $this; // 0x28
	internal object $current; // 0x30
	internal bool $disposing; // 0x38
	internal int $PC; // 0x3C
	private ScrTerminalMap.<EventBoardCameraActionAuto_IE>c__Iterator2.<EventBoardCameraActionAuto_IE>c__AnonStorey13 $locvar0; // 0x40

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD4A474 Offset: 0xD4A474 VA: 0xD4A474
	// RVA: 0x1AB8300 Offset: 0x1AB8300 VA: 0x1AB8300
	public void .ctor() { }

	// RVA: 0x1AB8308 Offset: 0x1AB8308 VA: 0x1AB8308 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A484 Offset: 0xD4A484 VA: 0xD4A484
	// RVA: 0x1AB84C0 Offset: 0x1AB84C0 VA: 0x1AB84C0 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A494 Offset: 0xD4A494 VA: 0xD4A494
	// RVA: 0x1AB84C8 Offset: 0x1AB84C8 VA: 0x1AB84C8 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A4A4 Offset: 0xD4A4A4 VA: 0xD4A4A4
	// RVA: 0x1AB84D0 Offset: 0x1AB84D0 VA: 0x1AB84D0 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4A4B4 Offset: 0xD4A4B4 VA: 0xD4A4B4
	// RVA: 0x1AB84E4 Offset: 0x1AB84E4 VA: 0x1AB84E4 Slot: 6
	public void Reset() { }
}

// Namespace: 
private sealed class ScrTerminalMap.<EventBoardCameraActionAuto_IE>c__Iterator2.<EventBoardCameraActionAuto_IE>c__AnonStorey13 // TypeDefIndex: 11341
{
	// Fields
	internal Action callback; // 0x10
	internal int squareId; // 0x18
	internal int clearCount; // 0x1C
	internal int maxClearCount; // 0x20
	internal ScrTerminalMap.<EventBoardCameraActionAuto_IE>c__Iterator2 <>f__ref$2; // 0x28

	// Methods

	// RVA: 0x1AB84B8 Offset: 0x1AB84B8 VA: 0x1AB84B8
	public void .ctor() { }

	// RVA: 0x1AB854C Offset: 0x1AB854C VA: 0x1AB854C
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2470 Offset: 0xCB2470 VA: 0xCB2470
private sealed class ScrTerminalMap.<JumpEventBoardGamePiece>c__AnonStorey15 // TypeDefIndex: 11342
{
	// Fields
	internal Vector3 oldPos; // 0x10
	internal Vector3 newPos; // 0x1C
	internal int oldIndex; // 0x28
	internal int endIndex; // 0x2C
	internal Action callback; // 0x30
	internal ScrTerminalMap $this; // 0x38

	// Methods

	// RVA: 0x1AB8870 Offset: 0x1AB8870 VA: 0x1AB8870
	public void .ctor() { }

	// RVA: 0x1AB8878 Offset: 0x1AB8878 VA: 0x1AB8878
	internal void <>m__0() { }

	// RVA: 0x1AB8A20 Offset: 0x1AB8A20 VA: 0x1AB8A20
	internal void <>m__1() { }

	// RVA: 0x1AB8C98 Offset: 0x1AB8C98 VA: 0x1AB8C98
	internal void <>m__2() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2480 Offset: 0xCB2480 VA: 0xCB2480
private sealed class ScrTerminalMap.<SetBoardGameSquareHaveToken>c__AnonStorey16 // TypeDefIndex: 11343
{
	// Fields
	internal int questId; // 0x10
	internal EventBoardGameTokenRewardEntity rewardEnt; // 0x18

	// Methods

	// RVA: 0x1AB963C Offset: 0x1AB963C VA: 0x1AB963C
	public void .ctor() { }

	// RVA: 0x1AB9644 Offset: 0x1AB9644 VA: 0x1AB9644
	internal bool <>m__0(EventBoardGameTokenRewardEntity x) { }

	// RVA: 0x1AB9680 Offset: 0x1AB9680 VA: 0x1AB9680
	internal bool <>m__1(GiftEntity x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2490 Offset: 0xCB2490 VA: 0xCB2490
private sealed class ScrTerminalMap.<UpdateBoardGameSquare>c__AnonStorey14 // TypeDefIndex: 11344
{
	// Fields
	internal MapControl.MapGimmickInfo x; // 0x10
	internal ScrTerminalMap $this; // 0x18

	// Methods

	// RVA: 0x1AB97E0 Offset: 0x1AB97E0 VA: 0x1AB97E0
	public void .ctor() { }

	// RVA: 0x1AB97E8 Offset: 0x1AB97E8 VA: 0x1AB97E8
	internal bool <>m__0(MapGimmickComponent y) { }
}

// Namespace: 
public class ServantRewardAction : MonoBehaviour // TypeDefIndex: 11345
{
	// Fields
	public const float SCREEN_TOUCH_INFO_Y = -265;
	private CStateManager<ServantRewardAction> mFSM; // 0x18
	private Animation mAnimation; // 0x20
	private SimpleAnimation mSimpleAnimation; // 0x28
	private Animation numDisplayAnimation; // 0x30
	private SimpleAnimation numDisplaySimpleAnimation; // 0x38
	private int mServantId; // 0x40
	private int mLimitCount; // 0x44
	private ServantRewardAction.PLAY_FLAG mPlayFlag; // 0x48
	private int servantNum; // 0x4C
	private bool mIsDoneLoad; // 0x50
	private bool mIsPlayReq; // 0x51
	private float mFadeInTime; // 0x54
	private Action mEndAct; // 0x58
	private SvtType.Type mSvtType; // 0x60
	private bool mIsFromTreasureBox; // 0x64
	private bool isSkip; // 0x65
	private bool isDispNum; // 0x66
	private bool isPlayFinish; // 0x67
	private bool mIsCommandCode; // 0x68
	private UserCommandCodeEntity mUserCommandCodeEntity; // 0x70
	[SerializeField] // RVA: 0xCEAF7C Offset: 0xCEAF7C VA: 0xCEAF7C
	private GameObject mCardParent; // 0x78
	[SerializeField] // RVA: 0xCEAF8C Offset: 0xCEAF8C VA: 0xCEAF8C
	private AnimationClip mAnimNormal; // 0x80
	[SerializeField] // RVA: 0xCEAF9C Offset: 0xCEAF9C VA: 0xCEAF9C
	private AnimationClip mAnimSvtNew; // 0x88
	[SerializeField] // RVA: 0xCEAFAC Offset: 0xCEAFAC VA: 0xCEAFAC
	private AnimationClip mAnimSvtEquipNew; // 0x90
	[SerializeField] // RVA: 0xCEAFBC Offset: 0xCEAFBC VA: 0xCEAFBC
	private AnimationClip mAnimCommandCode; // 0x98
	[SerializeField] // RVA: 0xCEAFCC Offset: 0xCEAFCC VA: 0xCEAFCC
	private AnimationClip mAnimCommandCodeNew; // 0xA0
	[SerializeField] // RVA: 0xCEAFDC Offset: 0xCEAFDC VA: 0xCEAFDC
	private GameObject particlePrefab; // 0xA8
	[SerializeField] // RVA: 0xCEAFEC Offset: 0xCEAFEC VA: 0xCEAFEC
	private GameObject servantGetObj; // 0xB0
	[SerializeField] // RVA: 0xCEAFFC Offset: 0xCEAFFC VA: 0xCEAFFC
	private GameObject numDisplayObj; // 0xB8
	[SerializeField] // RVA: 0xCEB00C Offset: 0xCEB00C VA: 0xCEB00C
	private UILabel numText; // 0xC0
	[SerializeField] // RVA: 0xCEB01C Offset: 0xCEB01C VA: 0xCEB01C
	private float numPlayStartSec; // 0xC8
	[SerializeField] // RVA: 0xCEB02C Offset: 0xCEB02C VA: 0xCEB02C
	private AnimationClip mAnimNumDisplayDigit1; // 0xD0
	[SerializeField] // RVA: 0xCEB03C Offset: 0xCEB03C VA: 0xCEB03C
	private AnimationClip mAnimNumDisplayDigit2; // 0xD8
	[SerializeField] // RVA: 0xCEB04C Offset: 0xCEB04C VA: 0xCEB04C
	private GameObject mTouchParent; // 0xE0
	protected GameObject particleObj; // 0xE8
	private ScreenTouchInformationComponent mScreenTouchInfo; // 0xF0
	private UICharaGraphTexture mUICharaGraph; // 0xF8
	private UserServantEntity userSvtEntity; // 0x100
	[CompilerGeneratedAttribute] // RVA: 0xCEB05C Offset: 0xCEB05C VA: 0xCEB05C
	[DebuggerBrowsableAttribute] // RVA: 0xCEB05C Offset: 0xCEB05C VA: 0xCEB05C
	private int <PresentDialogMessageId>k__BackingField; // 0x108
	[CompilerGeneratedAttribute] // RVA: 0xCEB098 Offset: 0xCEB098 VA: 0xCEB098
	private static Action <>f__am$cache0; // 0x0

	// Properties
	public int PresentDialogMessageId { get; set; }

	// Methods

	// RVA: 0x1FAE990 Offset: 0x1FAE990 VA: 0x1FAE990
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD419B4 Offset: 0xD419B4 VA: 0xD419B4
	// RVA: 0x1FAE998 Offset: 0x1FAE998 VA: 0x1FAE998
	public int get_PresentDialogMessageId() { }

	[CompilerGeneratedAttribute] // RVA: 0xD419C4 Offset: 0xD419C4 VA: 0xD419C4
	// RVA: 0x1FAE9A0 Offset: 0x1FAE9A0 VA: 0x1FAE9A0
	public void set_PresentDialogMessageId(int value) { }

	// RVA: 0x1FAE9A8 Offset: 0x1FAE9A8 VA: 0x1FAE9A8
	private void Awake() { }

	// RVA: 0x1FAEE40 Offset: 0x1FAEE40 VA: 0x1FAEE40
	private void Update() { }

	// RVA: 0x1FAEFD8 Offset: 0x1FAEFD8 VA: 0x1FAEFD8
	private ServantRewardAction.PLAY_FLAG SetupPlayFlag(bool isSvtNew, bool isDoEffect, ServantRewardAction.PLAY_FLAG playFlag) { }

	// RVA: 0x1FAEFF0 Offset: 0x1FAEFF0 VA: 0x1FAEFF0
	private void SetupScreenTouchInfo() { }

	// RVA: 0x1FAF1B4 Offset: 0x1FAF1B4 VA: 0x1FAF1B4
	public void Setup(int servant_id, long user_svt_id, int limit_count, int svt_num, bool is_svt_new, bool isDoEffect, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1FAF774 Offset: 0x1FAF774 VA: 0x1FAF774
	public void Setup(int servant_id, UserServantEntity usrSvtEntity, int limit_count, int svt_num, bool is_svt_new, bool isDoEffect, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1FAF78C Offset: 0x1FAF78C VA: 0x1FAF78C
	public void Setup(int servant_id, long user_svt_id, int limit_count, int svt_num, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1FAF2C0 Offset: 0x1FAF2C0 VA: 0x1FAF2C0
	public void Setup(int servant_id, UserServantEntity usrSvtEntity, int limit_count, int svt_num, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1FAF8D4 Offset: 0x1FAF8D4 VA: 0x1FAF8D4
	public void Setup(QuestRewardInfo qri, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1FAF9C0 Offset: 0x1FAF9C0 VA: 0x1FAF9C0
	public void SetupCommandCode(QuestRewardInfo qri, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1FAFA30 Offset: 0x1FAFA30 VA: 0x1FAFA30
	public void SetupCommandCode(long user_command_code_id, bool is_svt_new, bool isDoEffect, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1FAFA48 Offset: 0x1FAFA48 VA: 0x1FAFA48
	public void SetupCommandCode(long user_command_code_id, ServantRewardAction.PLAY_FLAG play_flag = 0) { }

	// RVA: 0x1FAFCE0 Offset: 0x1FAFCE0 VA: 0x1FAFCE0
	public void Play(Action end_act, float fade_in_time = 0) { }

	// RVA: 0x1FAFCF8 Offset: 0x1FAFCF8 VA: 0x1FAFCF8
	public void Play(bool is_from_treasure_box, Action end_act, float fade_in_time = 0) { }

	// RVA: 0x1FAF874 Offset: 0x1FAF874 VA: 0x1FAF874
	public ServantRewardAction.STATE GetState() { }

	// RVA: 0x1FAEDD0 Offset: 0x1FAEDD0 VA: 0x1FAEDD0
	public void SetState(ServantRewardAction.STATE state) { }

	[CompilerGeneratedAttribute] // RVA: 0xD419D4 Offset: 0xD419D4 VA: 0xD419D4
	// RVA: 0x1FAFD14 Offset: 0x1FAFD14 VA: 0x1FAFD14
	private static void <Update>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD419E4 Offset: 0xD419E4 VA: 0xD419E4
	// RVA: 0x1FAFD18 Offset: 0x1FAFD18 VA: 0x1FAFD18
	private void <Setup>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xD419F4 Offset: 0xD419F4 VA: 0xD419F4
	// RVA: 0x1FAFF2C Offset: 0x1FAFF2C VA: 0x1FAFF2C
	private void <SetupCommandCode>m__2() { }
}

// Namespace: 
public enum ServantRewardAction.PLAY_FLAG // TypeDefIndex: 11346
{
	// Fields
	public int value__; // 0x0
	public const ServantRewardAction.PLAY_FLAG NONE = 0;
	public const ServantRewardAction.PLAY_FLAG SVT_NEW = 1;
	public const ServantRewardAction.PLAY_FLAG FADE_IN = 2;
	public const ServantRewardAction.PLAY_FLAG FADE_OUT = 4;
	public const ServantRewardAction.PLAY_FLAG EVENT_SVT_GET = 8;
	public const ServantRewardAction.PLAY_FLAG NEW_EFFECT = 16;
	public const ServantRewardAction.PLAY_FLAG DETAIL_SKIP = 32;
	public const ServantRewardAction.PLAY_FLAG EVENT_JOIN_SKIP = 64;
}

// Namespace: 
public enum ServantRewardAction.STATE // TypeDefIndex: 11347
{
	// Fields
	public int value__; // 0x0
	public const ServantRewardAction.STATE NONE = 0;
	public const ServantRewardAction.STATE PLAY = 1;
	public const ServantRewardAction.STATE NUM_DISPLAY = 2;
	public const ServantRewardAction.STATE TOUCH_WAIT = 3;
	public const ServantRewardAction.STATE TALK = 4;
	public const ServantRewardAction.STATE DETAIL = 5;
	public const ServantRewardAction.STATE SECRET_TREASURE_DEVICE = 6;
	public const ServantRewardAction.STATE END = 7;
	public const ServantRewardAction.STATE SIZEOF = 8;
}

// Namespace: 
private class ServantRewardAction.StateNone : IState<ServantRewardAction> // TypeDefIndex: 11348
{
	// Methods

	// RVA: 0x1FAED90 Offset: 0x1FAED90 VA: 0x1FAED90
	public void .ctor() { }

	// RVA: 0x1FB0A08 Offset: 0x1FB0A08 VA: 0x1FB0A08 Slot: 4
	public void begin(ServantRewardAction that) { }

	// RVA: 0x1FB0A0C Offset: 0x1FB0A0C VA: 0x1FB0A0C Slot: 5
	public void update(ServantRewardAction that) { }

	// RVA: 0x1FB0A10 Offset: 0x1FB0A10 VA: 0x1FB0A10 Slot: 6
	public void end(ServantRewardAction that) { }
}

// Namespace: 
private class ServantRewardAction.StatePlay : IState<ServantRewardAction> // TypeDefIndex: 11349
{
	// Fields
	private AnimationState mAnimState; // 0x10
	private SimpleAnimation.State mSimpleAnimState; // 0x18
	private float totalTime; // 0x20

	// Methods

	// RVA: 0x1FAED98 Offset: 0x1FAED98 VA: 0x1FAED98
	public void .ctor() { }

	// RVA: 0x1FB0FC8 Offset: 0x1FB0FC8 VA: 0x1FB0FC8 Slot: 4
	public void begin(ServantRewardAction that) { }

	// RVA: 0x1FB1320 Offset: 0x1FB1320 VA: 0x1FB1320 Slot: 5
	public void update(ServantRewardAction that) { }

	// RVA: 0x1FB1590 Offset: 0x1FB1590 VA: 0x1FB1590 Slot: 6
	public void end(ServantRewardAction that) { }
}

// Namespace: 
private class ServantRewardAction.StateNumDisplay : IState<ServantRewardAction> // TypeDefIndex: 11350
{
	// Fields
	private AnimationState mAnimState; // 0x10
	private SimpleAnimation.State mSimpleAnimState; // 0x18

	// Methods

	// RVA: 0x1FAEDA0 Offset: 0x1FAEDA0 VA: 0x1FAEDA0
	public void .ctor() { }

	// RVA: 0x1FB0A14 Offset: 0x1FB0A14 VA: 0x1FB0A14 Slot: 4
	public void begin(ServantRewardAction that) { }

	// RVA: 0x1FB0CC0 Offset: 0x1FB0CC0 VA: 0x1FB0CC0 Slot: 5
	public void update(ServantRewardAction that) { }

	// RVA: 0x1FB0FC4 Offset: 0x1FB0FC4 VA: 0x1FB0FC4 Slot: 6
	public void end(ServantRewardAction that) { }
}

// Namespace: 
private class ServantRewardAction.StateTouchWait : IState<ServantRewardAction> // TypeDefIndex: 11351
{
	// Fields
	private bool isWaitCloseDialog; // 0x10

	// Methods

	// RVA: 0x1FAEDA8 Offset: 0x1FAEDA8 VA: 0x1FAEDA8
	public void .ctor() { }

	// RVA: 0x1FB1AD0 Offset: 0x1FB1AD0 VA: 0x1FB1AD0 Slot: 4
	public void begin(ServantRewardAction that) { }

	// RVA: 0x1FB1DDC Offset: 0x1FB1DDC VA: 0x1FB1DDC Slot: 5
	public void update(ServantRewardAction that) { }

	// RVA: 0x1FB1EEC Offset: 0x1FB1EEC VA: 0x1FB1EEC Slot: 6
	public void end(ServantRewardAction that) { }

	[CompilerGeneratedAttribute] // RVA: 0xD41A04 Offset: 0xD41A04 VA: 0xD41A04
	// RVA: 0x1FB1EF0 Offset: 0x1FB1EF0 VA: 0x1FB1EF0
	private void <begin>m__0(bool decide) { }
}

// Namespace: 
private class ServantRewardAction.StateTalk : IState<ServantRewardAction> // TypeDefIndex: 11352
{
	// Methods

	// RVA: 0x1FAEDB0 Offset: 0x1FAEDB0 VA: 0x1FAEDB0
	public void .ctor() { }

	// RVA: 0x1FB1798 Offset: 0x1FB1798 VA: 0x1FB1798 Slot: 4
	public void begin(ServantRewardAction rewardAction) { }

	// RVA: 0x1FB1A98 Offset: 0x1FB1A98 VA: 0x1FB1A98 Slot: 5
	public void update(ServantRewardAction rewardAction) { }

	// RVA: 0x1FB1A9C Offset: 0x1FB1A9C VA: 0x1FB1A9C Slot: 6
	public void end(ServantRewardAction rewardAction) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB24A0 Offset: 0xCB24A0 VA: 0xCB24A0
private sealed class ServantRewardAction.StateTalk.<begin>c__AnonStorey0 // TypeDefIndex: 11353
{
	// Fields
	internal ServantRewardAction rewardAction; // 0x10

	// Methods

	// RVA: 0x1FB1A90 Offset: 0x1FB1A90 VA: 0x1FB1A90
	public void .ctor() { }

	// RVA: 0x1FB1AA0 Offset: 0x1FB1AA0 VA: 0x1FB1AA0
	internal void <>m__0() { }
}

// Namespace: 
private class ServantRewardAction.StateDetail : IState<ServantRewardAction> // TypeDefIndex: 11354
{
	// Fields
	private ServantRewardAction that; // 0x10

	// Methods

	// RVA: 0x1FAEDB8 Offset: 0x1FAEDB8 VA: 0x1FAEDB8
	public void .ctor() { }

	// RVA: 0x1FB00A4 Offset: 0x1FB00A4 VA: 0x1FB00A4 Slot: 4
	public void begin(ServantRewardAction servantrewardAction) { }

	// RVA: 0x1FB01CC Offset: 0x1FB01CC VA: 0x1FB01CC Slot: 5
	public void update(ServantRewardAction that) { }

	// RVA: 0x1FB01D0 Offset: 0x1FB01D0 VA: 0x1FB01D0 Slot: 6
	public void end(ServantRewardAction that) { }

	// RVA: 0x1FB01D4 Offset: 0x1FB01D4 VA: 0x1FB01D4
	private void detailOpen() { }

	// RVA: 0x1FB0278 Offset: 0x1FB0278 VA: 0x1FB0278
	private void detailEnd(bool isDecide) { }

	[CompilerGeneratedAttribute] // RVA: 0xD41A14 Offset: 0xD41A14 VA: 0xD41A14
	// RVA: 0x1FB03E0 Offset: 0x1FB03E0 VA: 0x1FB03E0
	private void <begin>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41A24 Offset: 0xD41A24 VA: 0xD41A24
	// RVA: 0x1FB0584 Offset: 0x1FB0584 VA: 0x1FB0584
	private void <detailEnd>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41A34 Offset: 0xD41A34 VA: 0xD41A34
	// RVA: 0x1FB0664 Offset: 0x1FB0664 VA: 0x1FB0664
	private void <detailEnd>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41A44 Offset: 0xD41A44 VA: 0xD41A44
	// RVA: 0x1FB06E8 Offset: 0x1FB06E8 VA: 0x1FB06E8
	private void <detailEnd>m__3() { }
}

// Namespace: 
private class ServantRewardAction.StateSecretTreasureDevice : IState<ServantRewardAction> // TypeDefIndex: 11355
{
	// Methods

	// RVA: 0x1FAEDC0 Offset: 0x1FAEDC0 VA: 0x1FAEDC0
	public void .ctor() { }

	// RVA: 0x1FB1594 Offset: 0x1FB1594 VA: 0x1FB1594 Slot: 4
	public void begin(ServantRewardAction that) { }

	// RVA: 0x1FB16A8 Offset: 0x1FB16A8 VA: 0x1FB16A8 Slot: 5
	public void update(ServantRewardAction that) { }

	// RVA: 0x1FB16AC Offset: 0x1FB16AC VA: 0x1FB16AC Slot: 6
	public void end(ServantRewardAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB24B0 Offset: 0xCB24B0 VA: 0xCB24B0
private sealed class ServantRewardAction.StateSecretTreasureDevice.<begin>c__AnonStorey0 // TypeDefIndex: 11356
{
	// Fields
	internal ServantRewardAction that; // 0x10

	// Methods

	// RVA: 0x1FB16A0 Offset: 0x1FB16A0 VA: 0x1FB16A0
	public void .ctor() { }

	// RVA: 0x1FB16B0 Offset: 0x1FB16B0 VA: 0x1FB16B0
	internal void <>m__0() { }

	// RVA: 0x1FB1768 Offset: 0x1FB1768 VA: 0x1FB1768
	internal void <>m__1(bool isDecide) { }
}

// Namespace: 
private class ServantRewardAction.StateEnd : IState<ServantRewardAction> // TypeDefIndex: 11357
{
	// Methods

	// RVA: 0x1FAEDC8 Offset: 0x1FAEDC8 VA: 0x1FAEDC8
	public void .ctor() { }

	// RVA: 0x1FB076C Offset: 0x1FB076C VA: 0x1FB076C Slot: 4
	public void begin(ServantRewardAction that) { }

	// RVA: 0x1FB0934 Offset: 0x1FB0934 VA: 0x1FB0934 Slot: 5
	public void update(ServantRewardAction that) { }

	// RVA: 0x1FB0964 Offset: 0x1FB0964 VA: 0x1FB0964 Slot: 6
	public void end(ServantRewardAction that) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB24C0 Offset: 0xCB24C0 VA: 0xCB24C0
private sealed class ServantRewardAction.StateEnd.<begin>c__AnonStorey0 // TypeDefIndex: 11358
{
	// Fields
	internal ServantRewardAction that; // 0x10

	// Methods

	// RVA: 0x1FB092C Offset: 0x1FB092C VA: 0x1FB092C
	public void .ctor() { }

	// RVA: 0x1FB0968 Offset: 0x1FB0968 VA: 0x1FB0968
	internal void <>m__0() { }
}

// Namespace: 
public class SideItemComponent : MonoBehaviour // TypeDefIndex: 11359
{
	// Fields
	public UISprite sprite; // 0x18
	public UILabel label; // 0x20

	// Methods

	// RVA: 0x1A5AA14 Offset: 0x1A5AA14 VA: 0x1A5AA14
	public void .ctor() { }
}

// Namespace: 
public class SpotLargeComponent : MonoBehaviour // TypeDefIndex: 11360
{
	// Fields
	private const float LARGE_POS_X = -230;
	private const float LARGE_POS_Y = -85;
	private const float LARGE_SCL = 2;
	private const float LARGE_IN_TIME = 0.15;
	private const float LARGE_OUT_TIME = 0.05;
	private const UITweener.Method LARGE_TWEEN_METHOD = 2;
	private const float DEFAULT_SPRITE_Y = 0;
	private CStateManager<SpotLargeComponent> mFSM; // 0x18
	[SerializeField] // RVA: 0xCEB0A8 Offset: 0xCEB0A8 VA: 0xCEB0A8
	private UISprite mSpotSp; // 0x20
	[SerializeField] // RVA: 0xCEB0B8 Offset: 0xCEB0B8 VA: 0xCEB0B8
	private UISprite mSpotNameSp; // 0x28
	[SerializeField] // RVA: 0xCEB0C8 Offset: 0xCEB0C8 VA: 0xCEB0C8
	private UILabel mSpotNameLabel; // 0x30
	private Action mShowEndAct; // 0x38
	private Action mHideEndAct; // 0x40
	private SrcSpotBasePrefab mBaseSpot; // 0x48
	private MapCamera mMapCamera; // 0x50

	// Methods

	// RVA: 0x195E664 Offset: 0x195E664 VA: 0x195E664
	public void .ctor() { }

	// RVA: 0x195E66C Offset: 0x195E66C VA: 0x195E66C
	private void Awake() { }

	// RVA: 0x195E898 Offset: 0x195E898 VA: 0x195E898
	private void Update() { }

	// RVA: 0x195E8F8 Offset: 0x195E8F8 VA: 0x195E8F8
	public void LargeIn(SrcSpotBasePrefab spot, MapCamera map_cam, Action end_act) { }

	// RVA: 0x195F104 Offset: 0x195F104 VA: 0x195F104
	public void LargeOut(Action end_act) { }

	// RVA: 0x195F114 Offset: 0x195F114 VA: 0x195F114
	public void ForceOff() { }

	// RVA: 0x195F170 Offset: 0x195F170 VA: 0x195F170
	public SpotLargeComponent.STATE GetState() { }

	// RVA: 0x195E828 Offset: 0x195E828 VA: 0x195E828
	private void SetState(SpotLargeComponent.STATE state) { }

	// RVA: 0x195EDF0 Offset: 0x195EDF0 VA: 0x195EDF0
	private float GetBaseScale() { }

	// RVA: 0x195EEA8 Offset: 0x195EEA8 VA: 0x195EEA8
	private Vector3 GetBasePosition() { }

	// RVA: 0x195F1D0 Offset: 0x195F1D0 VA: 0x195F1D0
	private void SetLargeSpotNameScale_NormalScale() { }

	// RVA: 0x195F238 Offset: 0x195F238 VA: 0x195F238
	private void StateLargeIn_End() { }

	// RVA: 0x195F26C Offset: 0x195F26C VA: 0x195F26C
	private void StateLargeOut_End() { }
}

// Namespace: 
public enum SpotLargeComponent.STATE // TypeDefIndex: 11361
{
	// Fields
	public int value__; // 0x0
	public const SpotLargeComponent.STATE NONE = 0;
	public const SpotLargeComponent.STATE LARGE_IN = 1;
	public const SpotLargeComponent.STATE LARGE_MAIN = 2;
	public const SpotLargeComponent.STATE LARGE_OUT = 3;
	public const SpotLargeComponent.STATE SIZEOF = 4;
}

// Namespace: 
private class SpotLargeComponent.StateNone : IState<SpotLargeComponent> // TypeDefIndex: 11362
{
	// Methods

	// RVA: 0x195E808 Offset: 0x195E808 VA: 0x195E808
	public void .ctor() { }

	// RVA: 0x195FA40 Offset: 0x195FA40 VA: 0x195FA40 Slot: 4
	public void begin(SpotLargeComponent that) { }

	// RVA: 0x195FA44 Offset: 0x195FA44 VA: 0x195FA44 Slot: 5
	public void update(SpotLargeComponent that) { }

	// RVA: 0x195FA48 Offset: 0x195FA48 VA: 0x195FA48 Slot: 6
	public void end(SpotLargeComponent that) { }
}

// Namespace: 
private class SpotLargeComponent.StateLargeIn : IState<SpotLargeComponent> // TypeDefIndex: 11363
{
	// Fields
	private GameObject mNameBgObj; // 0x10

	// Methods

	// RVA: 0x195E810 Offset: 0x195E810 VA: 0x195E810
	public void .ctor() { }

	// RVA: 0x195F2A0 Offset: 0x195F2A0 VA: 0x195F2A0 Slot: 4
	public void begin(SpotLargeComponent that) { }

	// RVA: 0x195F520 Offset: 0x195F520 VA: 0x195F520 Slot: 5
	public void update(SpotLargeComponent that) { }

	// RVA: 0x195F54C Offset: 0x195F54C VA: 0x195F54C Slot: 6
	public void end(SpotLargeComponent that) { }
}

// Namespace: 
private class SpotLargeComponent.StateLargeMain : IState<SpotLargeComponent> // TypeDefIndex: 11364
{
	// Methods

	// RVA: 0x195E818 Offset: 0x195E818 VA: 0x195E818
	public void .ctor() { }

	// RVA: 0x195F550 Offset: 0x195F550 VA: 0x195F550 Slot: 4
	public void begin(SpotLargeComponent that) { }

	// RVA: 0x195F7C4 Offset: 0x195F7C4 VA: 0x195F7C4 Slot: 5
	public void update(SpotLargeComponent that) { }

	// RVA: 0x195F7C8 Offset: 0x195F7C8 VA: 0x195F7C8 Slot: 6
	public void end(SpotLargeComponent that) { }
}

// Namespace: 
private class SpotLargeComponent.StateLargeOut : IState<SpotLargeComponent> // TypeDefIndex: 11365
{
	// Fields
	private GameObject mNameBgObj; // 0x10

	// Methods

	// RVA: 0x195E820 Offset: 0x195E820 VA: 0x195E820
	public void .ctor() { }

	// RVA: 0x195F7CC Offset: 0x195F7CC VA: 0x195F7CC Slot: 4
	public void begin(SpotLargeComponent that) { }

	// RVA: 0x195FA10 Offset: 0x195FA10 VA: 0x195FA10 Slot: 5
	public void update(SpotLargeComponent that) { }

	// RVA: 0x195FA3C Offset: 0x195FA3C VA: 0x195FA3C Slot: 6
	public void end(SpotLargeComponent that) { }
}

// Namespace: 
public class srcLineSprite : MonoBehaviour // TypeDefIndex: 11366
{
	// Fields
	public const float WHITE = 1;
	public const float GRAY = 0.5;
	private CStateManager<srcLineSprite> mFSM; // 0x18
	private bool mtIsUpdate; // 0x20
	public Transform mcMyTrans; // 0x28
	public UISprite mcLineSprite; // 0x30
	public TweenAlpha mcTweenAlphaP; // 0x38
	public TweenScale mcTweenScaleP; // 0x40
	public float mfWidth; // 0x48
	public int miLineW; // 0x4C
	public int miLineH; // 0x50
	public Vector2 mcFrom; // 0x54
	public Vector2 mcTo; // 0x5C
	public UIAtlas mcAtlasP; // 0x68
	public string msSpriteName; // 0x70
	private MapControl.SpotRoadInfo mMapCtrl_SpotRoadInfo; // 0x78
	private Action mStateEndAct; // 0x80

	// Methods

	// RVA: 0x2B7DAE4 Offset: 0x2B7DAE4 VA: 0x2B7DAE4
	public void .ctor() { }

	// RVA: 0x2B7DB64 Offset: 0x2B7DB64 VA: 0x2B7DB64
	public static string GetGobjName(int id) { }

	// RVA: 0x2B7DBFC Offset: 0x2B7DBFC VA: 0x2B7DBFC
	public void SetMapCtrl_SpotRoadInfo(MapControl.SpotRoadInfo _MapCtrl_SpotRoadInfo) { }

	// RVA: 0x2B7DC04 Offset: 0x2B7DC04 VA: 0x2B7DC04
	public MapControl.SpotRoadInfo GetMapCtrl_SpotRoadInfo() { }

	// RVA: 0x2B7DC0C Offset: 0x2B7DC0C VA: 0x2B7DC0C
	private void Awake() { }

	// RVA: 0x2B7DF50 Offset: 0x2B7DF50 VA: 0x2B7DF50
	private void Start() { }

	// RVA: 0x2B7DF54 Offset: 0x2B7DF54 VA: 0x2B7DF54
	private void Update() { }

	// RVA: 0x2B7DFB4 Offset: 0x2B7DFB4 VA: 0x2B7DFB4
	public void SetContrast(float val) { }

	// RVA: 0x2B7E038 Offset: 0x2B7E038 VA: 0x2B7E038
	public void mfSetITweenSize(float fSrcW, float fDstW, float fTime) { }

	// RVA: 0x2B7E140 Offset: 0x2B7E140 VA: 0x2B7E140
	public void mfSetPos2(Vector2 cFrom, Vector2 cTo) { }

	// RVA: 0x2B7E42C Offset: 0x2B7E42C VA: 0x2B7E42C
	public void mfSetAtlas(UIAtlas cAtlasP, string sSpriteName) { }

	// RVA: 0x2B7E390 Offset: 0x2B7E390 VA: 0x2B7E390
	public float GetAim(Vector2 p1, Vector2 p2) { }

	// RVA: 0x2B7E43C Offset: 0x2B7E43C VA: 0x2B7E43C
	public srcLineSprite.STATE GetState() { }

	// RVA: 0x2B7DED8 Offset: 0x2B7DED8 VA: 0x2B7DED8
	public void SetState(srcLineSprite.STATE state, Action end_act) { }

	// RVA: 0x2B7E49C Offset: 0x2B7E49C VA: 0x2B7E49C
	private void StateQaaEnd() { }

	// RVA: 0x2B7E4D0 Offset: 0x2B7E4D0 VA: 0x2B7E4D0
	private void SetQaaScaleAnim(bool is_disp) { }

	// RVA: 0x2B7E724 Offset: 0x2B7E724 VA: 0x2B7E724
	private void SetQaaColorAnim(bool is_disp) { }
}

// Namespace: 
public enum srcLineSprite.STATE // TypeDefIndex: 11367
{
	// Fields
	public int value__; // 0x0
	public const srcLineSprite.STATE NONE = 0;
	public const srcLineSprite.STATE MAP_MAIN = 1;
	public const srcLineSprite.STATE QAA_HIDE = 2;
	public const srcLineSprite.STATE QAA_GRAY = 3;
	public const srcLineSprite.STATE QAA_DISP = 4;
	public const srcLineSprite.STATE SIZEOF = 5;
}

// Namespace: 
private class srcLineSprite.StateNone : IState<srcLineSprite> // TypeDefIndex: 11368
{
	// Methods

	// RVA: 0x2B7DEB0 Offset: 0x2B7DEB0 VA: 0x2B7DEB0
	public void .ctor() { }

	// RVA: 0x2B7EAC4 Offset: 0x2B7EAC4 VA: 0x2B7EAC4 Slot: 4
	public void begin(srcLineSprite that) { }
