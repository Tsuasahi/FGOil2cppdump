	public FsmEvent twistUpdatedEvent; // 0x98
	[TooltipAttribute] // RVA: 0xC8E1E0 Offset: 0xC8E1E0 VA: 0xC8E1E0
	public FsmEvent twistEndedEvent; // 0xA0
	[UIHintAttribute] // RVA: 0xC8E218 Offset: 0xC8E218 VA: 0xC8E218
	[TooltipAttribute] // RVA: 0xC8E218 Offset: 0xC8E218 VA: 0xC8E218
	public FsmFloat storeDeltaRotation; // 0xA8
	[UIHintAttribute] // RVA: 0xC8E268 Offset: 0xC8E268 VA: 0xC8E268
	[TooltipAttribute] // RVA: 0xC8E268 Offset: 0xC8E268 VA: 0xC8E268
	public FsmFloat storeTotalRotation; // 0xB0

	// Methods

	// RVA: 0xE9021C Offset: 0xE9021C VA: 0xE9021C
	public void .ctor() { }

	// RVA: 0xE90224 Offset: 0xE90224 VA: 0xE90224 Slot: 28
	public override void Reset() { }

	// RVA: 0xE90244 Offset: 0xE90244 VA: 0xE90244 Slot: 63
	protected override bool HandleGestureEvent(Gesture gesture) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC8B674 Offset: 0xC8B674 VA: 0xC8B674
public abstract class FingerGesturesEvents : FsmStateAction // TypeDefIndex: 4132
{
	// Fields
	[ActionSection] // RVA: 0xC8E2B8 Offset: 0xC8E2B8 VA: 0xC8E2B8
	[TooltipAttribute] // RVA: 0xC8E2B8 Offset: 0xC8E2B8 VA: 0xC8E2B8
	public FsmEventTarget eventTarget; // 0x50
	[TooltipAttribute] // RVA: 0xC8E318 Offset: 0xC8E318 VA: 0xC8E318
	public FsmInt fingerIndexFilter; // 0x58
	[TooltipAttribute] // RVA: 0xC8E350 Offset: 0xC8E350 VA: 0xC8E350
	public FsmString eventNameFilter; // 0x60
	[TooltipAttribute] // RVA: 0xC8E388 Offset: 0xC8E388 VA: 0xC8E388
	public FsmOwnerDefault startObjectFilter; // 0x68
	[TooltipAttribute] // RVA: 0xC8E3C0 Offset: 0xC8E3C0 VA: 0xC8E3C0
	public FsmOwnerDefault currentObjectFilter; // 0x70
	[ActionSection] // RVA: 0xC8E3F8 Offset: 0xC8E3F8 VA: 0xC8E3F8
	[UIHintAttribute] // RVA: 0xC8E3F8 Offset: 0xC8E3F8 VA: 0xC8E3F8
	[TooltipAttribute] // RVA: 0xC8E3F8 Offset: 0xC8E3F8 VA: 0xC8E3F8
	public FsmInt storeFingerIndex; // 0x78
	[UIHintAttribute] // RVA: 0xC8E46C Offset: 0xC8E46C VA: 0xC8E46C
	[TooltipAttribute] // RVA: 0xC8E46C Offset: 0xC8E46C VA: 0xC8E46C
	public FsmGameObject storeCurrentObject; // 0x80
	[UIHintAttribute] // RVA: 0xC8E4BC Offset: 0xC8E4BC VA: 0xC8E4BC
	[TooltipAttribute] // RVA: 0xC8E4BC Offset: 0xC8E4BC VA: 0xC8E4BC
	public FsmGameObject storeStartObject; // 0x88

	// Methods

	// RVA: 0xE8E85C Offset: 0xE8E85C VA: 0xE8E85C
	protected void .ctor() { }

	// RVA: 0xE8E884 Offset: 0xE8E884 VA: 0xE8E884 Slot: 28
	public override void Reset() { }

	// RVA: 0xE8EF90 Offset: 0xE8EF90 VA: 0xE8EF90 Slot: 32
	public override void OnEnter() { }

	// RVA: 0xE8F05C Offset: 0xE8F05C VA: 0xE8F05C Slot: 37
	public override void OnExit() { }

	// RVA: 0xE8F128 Offset: 0xE8F128 VA: 0xE8F128
	private void FingerGestures_OnFingerEvent(FingerEvent eventData) { }

	// RVA: 0xE8F258 Offset: 0xE8F258 VA: 0xE8F258
	private bool IsValidEventName(string eventName) { }

	// RVA: 0xE8F4B4 Offset: 0xE8F4B4 VA: 0xE8F4B4
	protected void FingerGestures_OnGestureEvent(Gesture gesture) { }

	// RVA: 0xE8F624 Offset: 0xE8F624 VA: 0xE8F624 Slot: 62
	protected virtual bool HandleFingerEvent(FingerEvent e) { }

	// RVA: 0xE8F62C Offset: 0xE8F62C VA: 0xE8F62C Slot: 63
	protected virtual bool HandleGestureEvent(Gesture gesture) { }

	// RVA: 0xE8F354 Offset: 0xE8F354 VA: 0xE8F354
	private bool IsValidFinger(int fingerIndex) { }

	// RVA: 0xE8F3CC Offset: 0xE8F3CC VA: 0xE8F3CC
	private bool IsValidObject(FsmOwnerDefault filter, GameObject target) { }

	// RVA: 0xE8E9A4 Offset: 0xE8E9A4 VA: 0xE8E9A4
	protected void SendEvent(FsmEvent ev) { }
}

// Namespace: 
public enum ContinuousGesturePhase // TypeDefIndex: 4133
{
	// Fields
	public int value__; // 0x0
	public const ContinuousGesturePhase None = 0;
	public const ContinuousGesturePhase Started = 1;
	public const ContinuousGesturePhase Updated = 2;
	public const ContinuousGesturePhase Ended = 3;
}

// Namespace: 
public abstract class ContinuousGesture : Gesture // TypeDefIndex: 4134
{
	// Properties
	public ContinuousGesturePhase Phase { get; }

	// Methods

	// RVA: 0x11E89A4 Offset: 0x11E89A4 VA: 0x11E89A4
	protected void .ctor() { }

	// RVA: 0x11E89AC Offset: 0x11E89AC VA: 0x11E89AC
	public ContinuousGesturePhase get_Phase() { }
}

// Namespace: 
public abstract class ContinuousGestureRecognizer<T> : GestureRecognizerTS<T> // TypeDefIndex: 4135
{
	// Methods

	// RVA: -1 Offset: -1
	protected void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2526C08 Offset: 0x2526C08 VA: 0x2526C08
	|-ContinuousGestureRecognizer<DragGesture>..ctor
	|-ContinuousGestureRecognizer<PinchGesture>..ctor
	|-ContinuousGestureRecognizer<object>..ctor
	|-ContinuousGestureRecognizer<TwistGesture>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 23
	protected override void Reset(T gesture) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2526CB8 Offset: 0x2526CB8 VA: 0x2526CB8
	|-ContinuousGestureRecognizer<DragGesture>.Reset
	|-ContinuousGestureRecognizer<PinchGesture>.Reset
	|-ContinuousGestureRecognizer<object>.Reset
	|-ContinuousGestureRecognizer<TwistGesture>.Reset
	*/

	// RVA: -1 Offset: -1 Slot: 19
	protected override void OnStateChanged(Gesture sender) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2526D04 Offset: 0x2526D04 VA: 0x2526D04
	|-ContinuousGestureRecognizer<DragGesture>.OnStateChanged
	|-ContinuousGestureRecognizer<PinchGesture>.OnStateChanged
	|-ContinuousGestureRecognizer<object>.OnStateChanged
	|-ContinuousGestureRecognizer<TwistGesture>.OnStateChanged
	*/
}

// Namespace: 
public class DiscreteGesture : Gesture // TypeDefIndex: 4136
{
	// Methods

	// RVA: 0xE8358C Offset: 0xE8358C VA: 0xE8358C
	public void .ctor() { }
}

// Namespace: 
public abstract class DiscreteGestureRecognizer<T> : GestureRecognizerTS<T> // TypeDefIndex: 4137
{
	// Methods

	// RVA: -1 Offset: -1
	protected void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252ABD4 Offset: 0x252ABD4 VA: 0x252ABD4
	|-DiscreteGestureRecognizer<LongPressGesture>..ctor
	|-DiscreteGestureRecognizer<PointCloudGesture>..ctor
	|-DiscreteGestureRecognizer<SwipeGesture>..ctor
	|-DiscreteGestureRecognizer<object>..ctor
	|-DiscreteGestureRecognizer<TapGesture>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 19
	protected override void OnStateChanged(Gesture sender) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252AC84 Offset: 0x252AC84 VA: 0x252AC84
	|-DiscreteGestureRecognizer<LongPressGesture>.OnStateChanged
	|-DiscreteGestureRecognizer<PointCloudGesture>.OnStateChanged
	|-DiscreteGestureRecognizer<SwipeGesture>.OnStateChanged
	|-DiscreteGestureRecognizer<object>.OnStateChanged
	|-DiscreteGestureRecognizer<TapGesture>.OnStateChanged
	*/
}

// Namespace: 
public class FingerEvent // TypeDefIndex: 4138
{
	// Fields
	private FingerEventDetector detector; // 0x10
	private FingerGestures.Finger finger; // 0x18
	private string name; // 0x20
	private GameObject selection; // 0x28
	private ScreenRaycastData raycast; // 0x30

	// Properties
	public string Name { get; set; }
	public FingerEventDetector Detector { get; set; }
	public FingerGestures.Finger Finger { get; set; }
	public virtual Vector2 Position { get; set; }
	public GameObject Selection { get; set; }
	public ScreenRaycastData Raycast { get; set; }

	// Methods

	// RVA: 0xE87A50 Offset: 0xE87A50 VA: 0xE87A50
	public void .ctor() { }

	// RVA: 0xE87AD8 Offset: 0xE87AD8 VA: 0xE87AD8
	public string get_Name() { }

	// RVA: 0xE87858 Offset: 0xE87858 VA: 0xE87858
	internal void set_Name(string value) { }

	// RVA: 0xE87AE0 Offset: 0xE87AE0 VA: 0xE87AE0
	public FingerEventDetector get_Detector() { }

	// RVA: 0xE87AE8 Offset: 0xE87AE8 VA: 0xE87AE8
	internal void set_Detector(FingerEventDetector value) { }

	// RVA: 0xE87AF0 Offset: 0xE87AF0 VA: 0xE87AF0
	public FingerGestures.Finger get_Finger() { }

	// RVA: 0xE87AF8 Offset: 0xE87AF8 VA: 0xE87AF8
	internal void set_Finger(FingerGestures.Finger value) { }

	// RVA: 0xE87B00 Offset: 0xE87B00 VA: 0xE87B00 Slot: 4
	public virtual Vector2 get_Position() { }

	// RVA: 0xE87B2C Offset: 0xE87B2C VA: 0xE87B2C Slot: 5
	internal virtual void set_Position(Vector2 value) { }

	// RVA: 0xE87BF0 Offset: 0xE87BF0 VA: 0xE87BF0
	public GameObject get_Selection() { }

	// RVA: 0xE87BF8 Offset: 0xE87BF8 VA: 0xE87BF8
	internal void set_Selection(GameObject value) { }

	// RVA: 0xE87C00 Offset: 0xE87C00 VA: 0xE87C00
	public ScreenRaycastData get_Raycast() { }

	// RVA: 0xE87C10 Offset: 0xE87C10 VA: 0xE87C10
	internal void set_Raycast(ScreenRaycastData value) { }
}

// Namespace: 
public abstract class FingerEventDetector<T> : FingerEventDetector // TypeDefIndex: 4139
{
	// Fields
	private List<T> fingerEventsList; // 0x0

	// Methods

	// RVA: -1 Offset: -1
	protected void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252B188 Offset: 0x252B188 VA: 0x252B188
	|-FingerEventDetector<FingerDownEvent>..ctor
	|-FingerEventDetector<FingerHoverEvent>..ctor
	|-FingerEventDetector<FingerMotionEvent>..ctor
	|-FingerEventDetector<FingerUpEvent>..ctor
	|-FingerEventDetector<object>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 10
	protected virtual T CreateFingerEvent() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252B1B4 Offset: 0x252B1B4 VA: 0x252B1B4
	|-FingerEventDetector<FingerDownEvent>.CreateFingerEvent
	|-FingerEventDetector<FingerHoverEvent>.CreateFingerEvent
	|-FingerEventDetector<FingerMotionEvent>.CreateFingerEvent
	|-FingerEventDetector<FingerUpEvent>.CreateFingerEvent
	|-FingerEventDetector<object>.CreateFingerEvent
	*/

	// RVA: -1 Offset: -1 Slot: 5
	public override Type GetEventType() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252B1C8 Offset: 0x252B1C8 VA: 0x252B1C8
	|-FingerEventDetector<FingerDownEvent>.GetEventType
	|-FingerEventDetector<FingerHoverEvent>.GetEventType
	|-FingerEventDetector<FingerMotionEvent>.GetEventType
	|-FingerEventDetector<FingerUpEvent>.GetEventType
	|-FingerEventDetector<object>.GetEventType
	*/

	// RVA: -1 Offset: -1 Slot: 7
	protected override void Start() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252B23C Offset: 0x252B23C VA: 0x252B23C
	|-FingerEventDetector<FingerDownEvent>.Start
	|-FingerEventDetector<FingerHoverEvent>.Start
	|-FingerEventDetector<FingerMotionEvent>.Start
	|-FingerEventDetector<FingerUpEvent>.Start
	|-FingerEventDetector<object>.Start
	*/

	// RVA: -1 Offset: -1 Slot: 11
	protected virtual void OnDestroy() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252B310 Offset: 0x252B310 VA: 0x252B310
	|-FingerEventDetector<FingerDownEvent>.OnDestroy
	|-FingerEventDetector<FingerHoverEvent>.OnDestroy
	|-FingerEventDetector<FingerMotionEvent>.OnDestroy
	|-FingerEventDetector<FingerUpEvent>.OnDestroy
	|-FingerEventDetector<object>.OnDestroy
	*/

	// RVA: -1 Offset: -1
	private void FingerGestures_OnInputProviderChanged() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252B3B0 Offset: 0x252B3B0 VA: 0x252B3B0
	|-FingerEventDetector<object>.FingerGestures_OnInputProviderChanged
	*/

	// RVA: -1 Offset: -1 Slot: 12
	protected virtual void Init() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252B3E0 Offset: 0x252B3E0 VA: 0x252B3E0
	|-FingerEventDetector<FingerDownEvent>.Init
	|-FingerEventDetector<FingerHoverEvent>.Init
	|-FingerEventDetector<FingerMotionEvent>.Init
	|-FingerEventDetector<FingerUpEvent>.Init
	|-FingerEventDetector<object>.Init
	*/

	// RVA: -1 Offset: -1 Slot: 13
	protected virtual void Init(int fingersCount) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252B480 Offset: 0x252B480 VA: 0x252B480
	|-FingerEventDetector<FingerDownEvent>.Init
	|-FingerEventDetector<FingerHoverEvent>.Init
	|-FingerEventDetector<FingerMotionEvent>.Init
	|-FingerEventDetector<FingerUpEvent>.Init
	|-FingerEventDetector<object>.Init
	*/

	// RVA: -1 Offset: -1
	protected T GetEvent(FingerGestures.Finger finger) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252B5E0 Offset: 0x252B5E0 VA: 0x252B5E0
	|-FingerEventDetector<FingerHoverEvent>.GetEvent
	|-FingerEventDetector<FingerMotionEvent>.GetEvent
	|-FingerEventDetector<FingerUpEvent>.GetEvent
	|-FingerEventDetector<object>.GetEvent
	*/

	// RVA: -1 Offset: -1 Slot: 14
	protected virtual T GetEvent(int fingerIndex) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252B63C Offset: 0x252B63C VA: 0x252B63C
	|-FingerEventDetector<FingerDownEvent>.GetEvent
	|-FingerEventDetector<FingerHoverEvent>.GetEvent
	|-FingerEventDetector<FingerMotionEvent>.GetEvent
	|-FingerEventDetector<FingerUpEvent>.GetEvent
	|-FingerEventDetector<object>.GetEvent
	*/
}

// Namespace: 
public sealed class FingerEventDetector.FingerEventHandler<T> : MulticastDelegate // TypeDefIndex: 4140
{
	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(object object, IntPtr method) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252ADA8 Offset: 0x252ADA8 VA: 0x252ADA8
	|-FingerEventDetector.FingerEventHandler<FingerEvent>..ctor
	|-FingerEventDetector.FingerEventHandler<object>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 11
	public virtual void Invoke(T eventData) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252ADB8 Offset: 0x252ADB8 VA: 0x252ADB8
	|-FingerEventDetector.FingerEventHandler<FingerDownEvent>.Invoke
	|-FingerEventDetector.FingerEventHandler<FingerEvent>.Invoke
	|-FingerEventDetector.FingerEventHandler<FingerHoverEvent>.Invoke
	|-FingerEventDetector.FingerEventHandler<FingerMotionEvent>.Invoke
	|-FingerEventDetector.FingerEventHandler<FingerUpEvent>.Invoke
	|-FingerEventDetector.FingerEventHandler<object>.Invoke
	*/

	// RVA: -1 Offset: -1 Slot: 12
	public virtual IAsyncResult BeginInvoke(T eventData, AsyncCallback callback, object object) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252B158 Offset: 0x252B158 VA: 0x252B158
	|-FingerEventDetector.FingerEventHandler<object>.BeginInvoke
	*/

	// RVA: -1 Offset: -1 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252B17C Offset: 0x252B17C VA: 0x252B17C
	|-FingerEventDetector.FingerEventHandler<object>.EndInvoke
	*/
}

// Namespace: 
public abstract class FingerEventDetector : MonoBehaviour // TypeDefIndex: 4141
{
	// Fields
	public int FingerIndexFilter; // 0x18
	public ScreenRaycaster Raycaster; // 0x20
	public bool UseSendMessage; // 0x28
	public bool SendMessageToSelection; // 0x29
	public GameObject MessageTarget; // 0x30
	private FingerGestures.Finger activeFinger; // 0x38
	private ScreenRaycastData lastRaycast; // 0x40

	// Properties
	internal ScreenRaycastData Raycast { get; }

	// Methods

	// RVA: 0xE87C2C Offset: 0xE87C2C VA: 0xE87C2C
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 4
	protected abstract void ProcessFinger(FingerGestures.Finger finger);

	// RVA: -1 Offset: -1 Slot: 5
	public abstract Type GetEventType();

	// RVA: 0xE87C70 Offset: 0xE87C70 VA: 0xE87C70 Slot: 6
	protected virtual void Awake() { }

	// RVA: 0xE87D40 Offset: 0xE87D40 VA: 0xE87D40 Slot: 7
	protected virtual void Start() { }

	// RVA: 0xE87D44 Offset: 0xE87D44 VA: 0xE87D44 Slot: 8
	protected virtual void Update() { }

	// RVA: 0xE87D50 Offset: 0xE87D50 VA: 0xE87D50 Slot: 9
	protected virtual void ProcessFingers() { }

	// RVA: 0xE878F4 Offset: 0xE878F4 VA: 0xE878F4
	protected void TrySendMessage(FingerEvent eventData) { }

	// RVA: 0xE87F94 Offset: 0xE87F94 VA: 0xE87F94
	internal ScreenRaycastData get_Raycast() { }

	// RVA: 0xE87FA4 Offset: 0xE87FA4 VA: 0xE87FA4
	public GameObject PickObject(Vector2 screenPos) { }

	// RVA: 0xE87860 Offset: 0xE87860 VA: 0xE87860
	protected void UpdateSelection(FingerEvent e) { }
}

// Namespace: 
public enum GestureRecognitionState // TypeDefIndex: 4142
{
	// Fields
	public int value__; // 0x0
	public const GestureRecognitionState Ready = 0;
	public const GestureRecognitionState Started = 1;
	public const GestureRecognitionState InProgress = 2;
	public const GestureRecognitionState Failed = 3;
	public const GestureRecognitionState Ended = 4;
	public const GestureRecognitionState Recognized = 4;
	public const GestureRecognitionState FailAndRetry = 5;
}

// Namespace: 
public enum GestureResetMode // TypeDefIndex: 4143
{
	// Fields
	public int value__; // 0x0
	public const GestureResetMode Default = 0;
	public const GestureResetMode NextFrame = 1;
	public const GestureResetMode EndOfTouchSequence = 2;
}

// Namespace: 
public abstract class Gesture // TypeDefIndex: 4144
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC8E50C Offset: 0xC8E50C VA: 0xC8E50C
	[DebuggerBrowsableAttribute] // RVA: 0xC8E50C Offset: 0xC8E50C VA: 0xC8E50C
	private Gesture.EventHandler OnStateChanged; // 0x10
	internal int ClusterId; // 0x18
	private GestureRecognizer recognizer; // 0x20
	private float startTime; // 0x28
	private Vector2 startPosition; // 0x2C
	private Vector2 position; // 0x34
	private GestureRecognitionState state; // 0x3C
	private GestureRecognitionState prevState; // 0x40
	private FingerGestures.FingerList fingers; // 0x48
	private GameObject startSelection; // 0x50
	private GameObject selection; // 0x58
	private ScreenRaycastData lastRaycast; // 0x60

	// Properties
	public FingerGestures.FingerList Fingers { get; set; }
	public GestureRecognizer Recognizer { get; set; }
	public float StartTime { get; set; }
	public Vector2 StartPosition { get; set; }
	public Vector2 Position { get; set; }
	public GestureRecognitionState State { get; set; }
	public GestureRecognitionState PreviousState { get; }
	public float ElapsedTime { get; }
	public GameObject StartSelection { get; set; }
	public GameObject Selection { get; set; }
	public ScreenRaycastData Raycast { get; set; }

	// Methods

	// RVA: 0xE83590 Offset: 0xE83590 VA: 0xE83590
	protected void .ctor() { }

	// RVA: 0xE8CF1C Offset: 0xE8CF1C VA: 0xE8CF1C
	public void add_OnStateChanged(Gesture.EventHandler value) { }

	// RVA: 0xE8D008 Offset: 0xE8D008 VA: 0xE8D008
	public void remove_OnStateChanged(Gesture.EventHandler value) { }

	// RVA: 0xE8D0F4 Offset: 0xE8D0F4 VA: 0xE8D0F4
	public static bool op_Implicit(Gesture gesture) { }

	// RVA: 0xE8D100 Offset: 0xE8D100 VA: 0xE8D100
	public FingerGestures.FingerList get_Fingers() { }

	// RVA: 0xE8D108 Offset: 0xE8D108 VA: 0xE8D108
	internal void set_Fingers(FingerGestures.FingerList value) { }

	// RVA: 0xE8D110 Offset: 0xE8D110 VA: 0xE8D110
	public GestureRecognizer get_Recognizer() { }

	// RVA: 0xE8D118 Offset: 0xE8D118 VA: 0xE8D118
	internal void set_Recognizer(GestureRecognizer value) { }

	// RVA: 0xE8D120 Offset: 0xE8D120 VA: 0xE8D120
	public float get_StartTime() { }

	// RVA: 0xE8D128 Offset: 0xE8D128 VA: 0xE8D128
	internal void set_StartTime(float value) { }

	// RVA: 0xE8376C Offset: 0xE8376C VA: 0xE8376C
	public Vector2 get_StartPosition() { }

	// RVA: 0xE83CD4 Offset: 0xE83CD4 VA: 0xE83CD4
	internal void set_StartPosition(Vector2 value) { }

	// RVA: 0xE83764 Offset: 0xE83764 VA: 0xE83764
	public Vector2 get_Position() { }

	// RVA: 0xE83CCC Offset: 0xE83CCC VA: 0xE83CCC
	internal void set_Position(Vector2 value) { }

	// RVA: 0xE8D130 Offset: 0xE8D130 VA: 0xE8D130
	public GestureRecognitionState get_State() { }

	// RVA: 0xE8D138 Offset: 0xE8D138 VA: 0xE8D138
	public void set_State(GestureRecognitionState value) { }

	// RVA: 0xE8D164 Offset: 0xE8D164 VA: 0xE8D164
	public GestureRecognitionState get_PreviousState() { }

	// RVA: 0xE8D16C Offset: 0xE8D16C VA: 0xE8D16C
	public float get_ElapsedTime() { }

	// RVA: 0xE83840 Offset: 0xE83840 VA: 0xE83840
	public GameObject get_StartSelection() { }

	// RVA: 0xE8D198 Offset: 0xE8D198 VA: 0xE8D198
	internal void set_StartSelection(GameObject value) { }

	// RVA: 0xE8D1A0 Offset: 0xE8D1A0 VA: 0xE8D1A0
	public GameObject get_Selection() { }

	// RVA: 0xE8D1A8 Offset: 0xE8D1A8 VA: 0xE8D1A8
	internal void set_Selection(GameObject value) { }

	// RVA: 0xE8D1B0 Offset: 0xE8D1B0 VA: 0xE8D1B0
	public ScreenRaycastData get_Raycast() { }

	// RVA: 0xE8D1C0 Offset: 0xE8D1C0 VA: 0xE8D1C0
	internal void set_Raycast(ScreenRaycastData value) { }

	// RVA: 0xE8D1DC Offset: 0xE8D1DC VA: 0xE8D1DC
	internal GameObject PickObject(ScreenRaycaster raycaster, Vector2 screenPos) { }

	// RVA: 0xE8D2D0 Offset: 0xE8D2D0 VA: 0xE8D2D0
	internal void PickStartSelection(ScreenRaycaster raycaster) { }

	// RVA: 0xE8D2F8 Offset: 0xE8D2F8 VA: 0xE8D2F8
	internal void PickSelection(ScreenRaycaster raycaster) { }
}

// Namespace: 
public sealed class Gesture.EventHandler : MulticastDelegate // TypeDefIndex: 4145
{
	// Methods

	// RVA: 0xE8D320 Offset: 0xE8D320 VA: 0xE8D320
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xE888DC Offset: 0xE888DC VA: 0xE888DC Slot: 11
	public virtual void Invoke(Gesture gesture) { }

	// RVA: 0xE8D330 Offset: 0xE8D330 VA: 0xE8D330 Slot: 12
	public virtual IAsyncResult BeginInvoke(Gesture gesture, AsyncCallback callback, object object) { }

	// RVA: 0xE8D354 Offset: 0xE8D354 VA: 0xE8D354 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public abstract class GestureRecognizerTS<T> : GestureRecognizer // TypeDefIndex: 4146
{
	// Fields
	private List<T> gestures; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC8E548 Offset: 0xC8E548 VA: 0xC8E548
	[DebuggerBrowsableAttribute] // RVA: 0xC8E548 Offset: 0xC8E548 VA: 0xC8E548
	private GestureRecognizerTS.GestureEventHandler<T> OnGesture; // 0x0
	private static FingerGestures.FingerList tempTouchList; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC8E584 Offset: 0xC8E584 VA: 0xC8E584
	private static Predicate<T> <>f__am$cache0; // 0x0

	// Properties
	public List<T> Gestures { get; }

	// Methods

	// RVA: -1 Offset: -1
	protected void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252DB3C Offset: 0x252DB3C VA: 0x252DB3C
	|-GestureRecognizerTS<object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void add_OnGesture(GestureRecognizerTS.GestureEventHandler<T> value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252DBB0 Offset: 0x252DBB0 VA: 0x252DBB0
	|-GestureRecognizerTS<object>.add_OnGesture
	*/

	// RVA: -1 Offset: -1
	public void remove_OnGesture(GestureRecognizerTS.GestureEventHandler<T> value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252DCA0 Offset: 0x252DCA0 VA: 0x252DCA0
	|-GestureRecognizerTS<object>.remove_OnGesture
	*/

	// RVA: -1 Offset: -1 Slot: 13
	protected override void Start() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252DD90 Offset: 0x252DD90 VA: 0x252DD90
	|-GestureRecognizerTS<DragGesture>.Start
	|-GestureRecognizerTS<LongPressGesture>.Start
	|-GestureRecognizerTS<PinchGesture>.Start
	|-GestureRecognizerTS<PointCloudGesture>.Start
	|-GestureRecognizerTS<SwipeGesture>.Start
	|-GestureRecognizerTS<object>.Start
	|-GestureRecognizerTS<TapGesture>.Start
	|-GestureRecognizerTS<TwistGesture>.Start
	*/

	// RVA: -1 Offset: -1 Slot: 11
	protected override void OnEnable() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252DDF0 Offset: 0x252DDF0 VA: 0x252DDF0
	|-GestureRecognizerTS<DragGesture>.OnEnable
	|-GestureRecognizerTS<LongPressGesture>.OnEnable
	|-GestureRecognizerTS<PinchGesture>.OnEnable
	|-GestureRecognizerTS<PointCloudGesture>.OnEnable
	|-GestureRecognizerTS<SwipeGesture>.OnEnable
	|-GestureRecognizerTS<object>.OnEnable
	|-GestureRecognizerTS<TapGesture>.OnEnable
	|-GestureRecognizerTS<TwistGesture>.OnEnable
	*/

	// RVA: -1 Offset: -1
	private void InitGestures() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252DE1C Offset: 0x252DE1C VA: 0x252DE1C
	|-GestureRecognizerTS<object>.InitGestures
	*/

	// RVA: -1 Offset: -1
	protected T AddGesture() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252DEC4 Offset: 0x252DEC4 VA: 0x252DEC4
	|-GestureRecognizerTS<object>.AddGesture
	*/

	// RVA: -1 Offset: -1
	public List<T> get_Gestures() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252DFC0 Offset: 0x252DFC0 VA: 0x252DFC0
	|-GestureRecognizerTS<object>.get_Gestures
	*/

	// RVA: -1 Offset: -1 Slot: 14
	protected virtual bool CanBegin(T gesture, FingerGestures.IFingerList touches) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252DFC8 Offset: 0x252DFC8 VA: 0x252DFC8
	|-GestureRecognizerTS<DragGesture>.CanBegin
	|-GestureRecognizerTS<LongPressGesture>.CanBegin
	|-GestureRecognizerTS<PinchGesture>.CanBegin
	|-GestureRecognizerTS<PointCloudGesture>.CanBegin
	|-GestureRecognizerTS<SwipeGesture>.CanBegin
	|-GestureRecognizerTS<object>.CanBegin
	|-GestureRecognizerTS<TapGesture>.CanBegin
	|-GestureRecognizerTS<TwistGesture>.CanBegin
	*/

	// RVA: -1 Offset: -1 Slot: 15
	protected abstract void OnBegin(T gesture, FingerGestures.IFingerList touches);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-GestureRecognizerTS<object>.OnBegin
	*/

	// RVA: -1 Offset: -1 Slot: 16
	protected abstract GestureRecognitionState OnRecognize(T gesture, FingerGestures.IFingerList touches);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-GestureRecognizerTS<object>.OnRecognize
	*/

	// RVA: -1 Offset: -1 Slot: 17
	protected virtual GameObject GetDefaultSelectionForSendMessage(T gesture) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252E214 Offset: 0x252E214 VA: 0x252E214
	|-GestureRecognizerTS<LongPressGesture>.GetDefaultSelectionForSendMessage
	|-GestureRecognizerTS<PointCloudGesture>.GetDefaultSelectionForSendMessage
	|-GestureRecognizerTS<SwipeGesture>.GetDefaultSelectionForSendMessage
	|-GestureRecognizerTS<object>.GetDefaultSelectionForSendMessage
	|-GestureRecognizerTS<TapGesture>.GetDefaultSelectionForSendMessage
	*/

	// RVA: -1 Offset: -1 Slot: 18
	protected virtual T CreateGesture() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252E244 Offset: 0x252E244 VA: 0x252E244
	|-GestureRecognizerTS<DragGesture>.CreateGesture
	|-GestureRecognizerTS<LongPressGesture>.CreateGesture
	|-GestureRecognizerTS<PinchGesture>.CreateGesture
	|-GestureRecognizerTS<PointCloudGesture>.CreateGesture
	|-GestureRecognizerTS<SwipeGesture>.CreateGesture
	|-GestureRecognizerTS<object>.CreateGesture
	|-GestureRecognizerTS<TapGesture>.CreateGesture
	|-GestureRecognizerTS<TwistGesture>.CreateGesture
	*/

	// RVA: -1 Offset: -1 Slot: 9
	public override Type GetGestureType() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252E258 Offset: 0x252E258 VA: 0x252E258
	|-GestureRecognizerTS<DragGesture>.GetGestureType
	|-GestureRecognizerTS<LongPressGesture>.GetGestureType
	|-GestureRecognizerTS<PinchGesture>.GetGestureType
	|-GestureRecognizerTS<PointCloudGesture>.GetGestureType
	|-GestureRecognizerTS<SwipeGesture>.GetGestureType
	|-GestureRecognizerTS<object>.GetGestureType
	|-GestureRecognizerTS<TapGesture>.GetGestureType
	|-GestureRecognizerTS<TwistGesture>.GetGestureType
	*/

	// RVA: -1 Offset: -1 Slot: 19
	protected virtual void OnStateChanged(Gesture gesture) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252E2CC Offset: 0x252E2CC VA: 0x252E2CC
	|-GestureRecognizerTS<object>.OnStateChanged
	*/

	// RVA: -1 Offset: -1 Slot: 20
	protected virtual T FindGestureByCluster(FingerClusterManager.Cluster cluster) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252E2D0 Offset: 0x252E2D0 VA: 0x252E2D0
	|-GestureRecognizerTS<DragGesture>.FindGestureByCluster
	|-GestureRecognizerTS<LongPressGesture>.FindGestureByCluster
	|-GestureRecognizerTS<PinchGesture>.FindGestureByCluster
	|-GestureRecognizerTS<PointCloudGesture>.FindGestureByCluster
	|-GestureRecognizerTS<SwipeGesture>.FindGestureByCluster
	|-GestureRecognizerTS<object>.FindGestureByCluster
	|-GestureRecognizerTS<TapGesture>.FindGestureByCluster
	|-GestureRecognizerTS<TwistGesture>.FindGestureByCluster
	*/

	// RVA: -1 Offset: -1 Slot: 21
	protected virtual T MatchActiveGestureToCluster(FingerClusterManager.Cluster cluster) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252E3B4 Offset: 0x252E3B4 VA: 0x252E3B4
	|-GestureRecognizerTS<DragGesture>.MatchActiveGestureToCluster
	|-GestureRecognizerTS<LongPressGesture>.MatchActiveGestureToCluster
	|-GestureRecognizerTS<PinchGesture>.MatchActiveGestureToCluster
	|-GestureRecognizerTS<PointCloudGesture>.MatchActiveGestureToCluster
	|-GestureRecognizerTS<SwipeGesture>.MatchActiveGestureToCluster
	|-GestureRecognizerTS<object>.MatchActiveGestureToCluster
	|-GestureRecognizerTS<TapGesture>.MatchActiveGestureToCluster
	|-GestureRecognizerTS<TwistGesture>.MatchActiveGestureToCluster
	*/

	// RVA: -1 Offset: -1 Slot: 22
	protected virtual T FindFreeGesture() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252E3E0 Offset: 0x252E3E0 VA: 0x252E3E0
	|-GestureRecognizerTS<DragGesture>.FindFreeGesture
	|-GestureRecognizerTS<LongPressGesture>.FindFreeGesture
	|-GestureRecognizerTS<PinchGesture>.FindFreeGesture
	|-GestureRecognizerTS<PointCloudGesture>.FindFreeGesture
	|-GestureRecognizerTS<SwipeGesture>.FindFreeGesture
	|-GestureRecognizerTS<object>.FindFreeGesture
	|-GestureRecognizerTS<TapGesture>.FindFreeGesture
	|-GestureRecognizerTS<TwistGesture>.FindFreeGesture
	*/

	// RVA: -1 Offset: -1 Slot: 23
	protected virtual void Reset(T gesture) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252E624 Offset: 0x252E624 VA: 0x252E624
	|-GestureRecognizerTS<LongPressGesture>.Reset
	|-GestureRecognizerTS<PointCloudGesture>.Reset
	|-GestureRecognizerTS<SwipeGesture>.Reset
	|-GestureRecognizerTS<object>.Reset
	|-GestureRecognizerTS<TapGesture>.Reset
	*/

	// RVA: -1 Offset: -1 Slot: 24
	public virtual void Update() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252E6D4 Offset: 0x252E6D4 VA: 0x252E6D4
	|-GestureRecognizerTS<DragGesture>.Update
	|-GestureRecognizerTS<LongPressGesture>.Update
	|-GestureRecognizerTS<PinchGesture>.Update
	|-GestureRecognizerTS<PointCloudGesture>.Update
	|-GestureRecognizerTS<SwipeGesture>.Update
	|-GestureRecognizerTS<object>.Update
	|-GestureRecognizerTS<TapGesture>.Update
	|-GestureRecognizerTS<TwistGesture>.Update
	*/

	// RVA: -1 Offset: -1
	private void UpdateExclusive() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252E7D0 Offset: 0x252E7D0 VA: 0x252E7D0
	|-GestureRecognizerTS<object>.UpdateExclusive
	*/

	// RVA: -1 Offset: -1
	private void UpdatePerFinger() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252E8F4 Offset: 0x252E8F4 VA: 0x252E8F4
	|-GestureRecognizerTS<object>.UpdatePerFinger
	*/

	// RVA: -1 Offset: -1
	private void UpdateUsingClusters() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252EB64 Offset: 0x252EB64 VA: 0x252EB64
	|-GestureRecognizerTS<object>.UpdateUsingClusters
	*/

	// RVA: -1 Offset: -1 Slot: 25
	protected virtual void ProcessCluster(FingerClusterManager.Cluster cluster) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252ED6C Offset: 0x252ED6C VA: 0x252ED6C
	|-GestureRecognizerTS<DragGesture>.ProcessCluster
	|-GestureRecognizerTS<LongPressGesture>.ProcessCluster
	|-GestureRecognizerTS<PinchGesture>.ProcessCluster
	|-GestureRecognizerTS<PointCloudGesture>.ProcessCluster
	|-GestureRecognizerTS<SwipeGesture>.ProcessCluster
	|-GestureRecognizerTS<object>.ProcessCluster
	|-GestureRecognizerTS<TapGesture>.ProcessCluster
	|-GestureRecognizerTS<TwistGesture>.ProcessCluster
	*/

	// RVA: -1 Offset: -1
	private void ReleaseFingers(T gesture) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252EE90 Offset: 0x252EE90 VA: 0x252EE90
	|-GestureRecognizerTS<object>.ReleaseFingers
	*/

	// RVA: -1 Offset: -1
	private void Begin(T gesture, int clusterId, FingerGestures.IFingerList touches) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252EF50 Offset: 0x252EF50 VA: 0x252EF50
	|-GestureRecognizerTS<object>.Begin
	*/

	// RVA: -1 Offset: -1 Slot: 26
	protected virtual FingerGestures.IFingerList GetTouches(T gesture) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252F1C8 Offset: 0x252F1C8 VA: 0x252F1C8
	|-GestureRecognizerTS<DragGesture>.GetTouches
	|-GestureRecognizerTS<LongPressGesture>.GetTouches
	|-GestureRecognizerTS<PinchGesture>.GetTouches
	|-GestureRecognizerTS<PointCloudGesture>.GetTouches
	|-GestureRecognizerTS<SwipeGesture>.GetTouches
	|-GestureRecognizerTS<object>.GetTouches
	|-GestureRecognizerTS<TapGesture>.GetTouches
	|-GestureRecognizerTS<TwistGesture>.GetTouches
	*/

	// RVA: -1 Offset: -1 Slot: 27
	protected virtual void UpdateGesture(T gesture, FingerGestures.IFingerList touches) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252F304 Offset: 0x252F304 VA: 0x252F304
	|-GestureRecognizerTS<DragGesture>.UpdateGesture
	|-GestureRecognizerTS<LongPressGesture>.UpdateGesture
	|-GestureRecognizerTS<PinchGesture>.UpdateGesture
	|-GestureRecognizerTS<PointCloudGesture>.UpdateGesture
	|-GestureRecognizerTS<SwipeGesture>.UpdateGesture
	|-GestureRecognizerTS<object>.UpdateGesture
	|-GestureRecognizerTS<TapGesture>.UpdateGesture
	|-GestureRecognizerTS<TwistGesture>.UpdateGesture
	*/

	// RVA: -1 Offset: -1
	protected void RaiseEvent(T gesture) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252F664 Offset: 0x252F664 VA: 0x252F664
	|-GestureRecognizerTS<DragGesture>.RaiseEvent
	|-GestureRecognizerTS<PinchGesture>.RaiseEvent
	|-GestureRecognizerTS<object>.RaiseEvent
	|-GestureRecognizerTS<TwistGesture>.RaiseEvent
	*/

	// RVA: -1 Offset: -1
	private static void .cctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252F8AC Offset: 0x252F8AC VA: 0x252F8AC
	|-GestureRecognizerTS<object>..cctor
	*/

	[CompilerGeneratedAttribute] // RVA: 0xC90478 Offset: 0xC90478 VA: 0xC90478
	// RVA: -1 Offset: -1
	private static bool <FindFreeGesture>m__0(T g) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252F93C Offset: 0x252F93C VA: 0x252F93C
	|-GestureRecognizerTS<object>.<FindFreeGesture>m__0
	*/
}

// Namespace: 
public sealed class GestureRecognizerTS.GestureEventHandler<T> : MulticastDelegate // TypeDefIndex: 4147
{
	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(object object, IntPtr method) { }
	/* GenericInstMethod :
	|
