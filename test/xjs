[TooltipAttribute] // RVA: 0xC1F36C Offset: 0xC1F36C VA: 0xC1F36C
public class FingerGesturesPointCloudEvent : FingerGesturesEvents // TypeDefIndex: 4127
{
	// Fields
	[ActionSection] // RVA: 0xC21CB4 Offset: 0xC21CB4 VA: 0xC21CB4
	[TooltipAttribute] // RVA: 0xC21CB4 Offset: 0xC21CB4 VA: 0xC21CB4
	public FsmEvent matchEvent; // 0x90
	[TooltipAttribute] // RVA: 0xC21D14 Offset: 0xC21D14 VA: 0xC21D14
	public FsmString gestureNameFilter; // 0x98
	[UIHintAttribute] // RVA: 0xC21D4C Offset: 0xC21D4C VA: 0xC21D4C
	[TooltipAttribute] // RVA: 0xC21D4C Offset: 0xC21D4C VA: 0xC21D4C
	public FsmFloat storeMatchScore; // 0xA0
	[UIHintAttribute] // RVA: 0xC21D9C Offset: 0xC21D9C VA: 0xC21D9C
	[TooltipAttribute] // RVA: 0xC21D9C Offset: 0xC21D9C VA: 0xC21D9C
	public FsmFloat storeMatchDistance; // 0xA8
	[UIHintAttribute] // RVA: 0xC21DEC Offset: 0xC21DEC VA: 0xC21DEC
	[TooltipAttribute] // RVA: 0xC21DEC Offset: 0xC21DEC VA: 0xC21DEC
	public FsmString storeMatchedGestureName; // 0xB0

	// Methods

	// RVA: 0x1DF9FAC Offset: 0x1DF9FAC VA: 0x1DF9FAC
	public void .ctor() { }

	// RVA: 0x1DF9FB4 Offset: 0x1DF9FB4 VA: 0x1DF9FB4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1DF9FE4 Offset: 0x1DF9FE4 VA: 0x1DF9FE4 Slot: 63
	protected override bool HandleGestureEvent(Gesture gesture) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC1F3CC Offset: 0xC1F3CC VA: 0xC1F3CC
[TooltipAttribute] // RVA: 0xC1F3CC Offset: 0xC1F3CC VA: 0xC1F3CC
public class FingerGesturesSwipeEvent : FingerGesturesEvents // TypeDefIndex: 4128
{
	// Fields
	[ActionSection] // RVA: 0xC21E3C Offset: 0xC21E3C VA: 0xC21E3C
	[TooltipAttribute] // RVA: 0xC21E3C Offset: 0xC21E3C VA: 0xC21E3C
	public FsmEvent swipeEvent; // 0x90
	public FsmEvent swipeLeftEvent; // 0x98
	public FsmEvent swipeRightEvent; // 0xA0
	public FsmEvent swipeUpEvent; // 0xA8
	public FsmEvent swipeDownEvent; // 0xB0
	[UIHintAttribute] // RVA: 0xC21E9C Offset: 0xC21E9C VA: 0xC21E9C
	public FsmVector2 storeMoveVector; // 0xB8
	[UIHintAttribute] // RVA: 0xC21EB0 Offset: 0xC21EB0 VA: 0xC21EB0
	public FsmFloat storeVelocity; // 0xC0
	[UIHintAttribute] // RVA: 0xC21EC4 Offset: 0xC21EC4 VA: 0xC21EC4
	public FsmString storeDirection; // 0xC8

	// Methods

	// RVA: 0x1DFA1EC Offset: 0x1DFA1EC VA: 0x1DFA1EC
	public void .ctor() { }

	// RVA: 0x1DFA1F4 Offset: 0x1DFA1F4 VA: 0x1DFA1F4 Slot: 28
	public override void Reset() { }

	// RVA: 0x1DFA214 Offset: 0x1DFA214 VA: 0x1DFA214 Slot: 63
	protected override bool HandleGestureEvent(Gesture gesture) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC1F42C Offset: 0xC1F42C VA: 0xC1F42C
[TooltipAttribute] // RVA: 0xC1F42C Offset: 0xC1F42C VA: 0xC1F42C
public class FingerGesturesTapEvent : FingerGesturesEvents // TypeDefIndex: 4129
{
	// Fields
	[ActionSection] // RVA: 0xC21ED8 Offset: 0xC21ED8 VA: 0xC21ED8
	[TooltipAttribute] // RVA: 0xC21ED8 Offset: 0xC21ED8 VA: 0xC21ED8
	public FsmEvent tapEvent; // 0x90

	// Methods

	// RVA: 0x1DFA438 Offset: 0x1DFA438 VA: 0x1DFA438
	public void .ctor() { }

	// RVA: 0x1DFA440 Offset: 0x1DFA440 VA: 0x1DFA440 Slot: 28
	public override void Reset() { }

	// RVA: 0x1DFA460 Offset: 0x1DFA460 VA: 0x1DFA460 Slot: 63
	protected override bool HandleGestureEvent(Gesture gesture) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC1F48C Offset: 0xC1F48C VA: 0xC1F48C
[TooltipAttribute] // RVA: 0xC1F48C Offset: 0xC1F48C VA: 0xC1F48C
public class FingerGesturesTouchEvents : FingerGesturesEvents // TypeDefIndex: 4130
{
	// Fields
	[ActionSection] // RVA: 0xC21F38 Offset: 0xC21F38 VA: 0xC21F38
	[TooltipAttribute] // RVA: 0xC21F38 Offset: 0xC21F38 VA: 0xC21F38
	public FsmEvent fingerDownEvent; // 0x90
	[TooltipAttribute] // RVA: 0xC21F98 Offset: 0xC21F98 VA: 0xC21F98
	public FsmEvent fingerUpEvent; // 0x98
	[UIHintAttribute] // RVA: 0xC21FD0 Offset: 0xC21FD0 VA: 0xC21FD0
	[TooltipAttribute] // RVA: 0xC21FD0 Offset: 0xC21FD0 VA: 0xC21FD0
	public FsmFloat storeTimeHeldDown; // 0xA0

	// Methods

	// RVA: 0x1DFA4FC Offset: 0x1DFA4FC VA: 0x1DFA4FC
	public void .ctor() { }

	// RVA: 0x1DFA504 Offset: 0x1DFA504 VA: 0x1DFA504 Slot: 28
	public override void Reset() { }

	// RVA: 0x1DFA524 Offset: 0x1DFA524 VA: 0x1DFA524 Slot: 62
	protected override bool HandleFingerEvent(FingerEvent e) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC1F4EC Offset: 0xC1F4EC VA: 0xC1F4EC
[TooltipAttribute] // RVA: 0xC1F4EC Offset: 0xC1F4EC VA: 0xC1F4EC
public class FingerGesturesTwistEvent : FingerGesturesEvents // TypeDefIndex: 4131
{
	// Fields
	[ActionSection] // RVA: 0xC22020 Offset: 0xC22020 VA: 0xC22020
	[TooltipAttribute] // RVA: 0xC22020 Offset: 0xC22020 VA: 0xC22020
	public FsmEvent twistStartedEvent; // 0x90
	[TooltipAttribute] // RVA: 0xC22080 Offset: 0xC22080 VA: 0xC22080
	public FsmEvent twistUpdatedEvent; // 0x98
	[TooltipAttribute] // RVA: 0xC220B8 Offset: 0xC220B8 VA: 0xC220B8
	public FsmEvent twistEndedEvent; // 0xA0
	[UIHintAttribute] // RVA: 0xC220F0 Offset: 0xC220F0 VA: 0xC220F0
	[TooltipAttribute] // RVA: 0xC220F0 Offset: 0xC220F0 VA: 0xC220F0
	public FsmFloat storeDeltaRotation; // 0xA8
	[UIHintAttribute] // RVA: 0xC22140 Offset: 0xC22140 VA: 0xC22140
	[TooltipAttribute] // RVA: 0xC22140 Offset: 0xC22140 VA: 0xC22140
	public FsmFloat storeTotalRotation; // 0xB0

	// Methods

	// RVA: 0x1DFA620 Offset: 0x1DFA620 VA: 0x1DFA620
	public void .ctor() { }

	// RVA: 0x1DFA628 Offset: 0x1DFA628 VA: 0x1DFA628 Slot: 28
	public override void Reset() { }

	// RVA: 0x1DFA648 Offset: 0x1DFA648 VA: 0x1DFA648 Slot: 63
	protected override bool HandleGestureEvent(Gesture gesture) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC1F54C Offset: 0xC1F54C VA: 0xC1F54C
public abstract class FingerGesturesEvents : FsmStateAction // TypeDefIndex: 4132
{
	// Fields
	[ActionSection] // RVA: 0xC22190 Offset: 0xC22190 VA: 0xC22190
	[TooltipAttribute] // RVA: 0xC22190 Offset: 0xC22190 VA: 0xC22190
	public FsmEventTarget eventTarget; // 0x50
	[TooltipAttribute] // RVA: 0xC221F0 Offset: 0xC221F0 VA: 0xC221F0
	public FsmInt fingerIndexFilter; // 0x58
	[TooltipAttribute] // RVA: 0xC22228 Offset: 0xC22228 VA: 0xC22228
	public FsmString eventNameFilter; // 0x60
	[TooltipAttribute] // RVA: 0xC22260 Offset: 0xC22260 VA: 0xC22260
	public FsmOwnerDefault startObjectFilter; // 0x68
	[TooltipAttribute] // RVA: 0xC22298 Offset: 0xC22298 VA: 0xC22298
	public FsmOwnerDefault currentObjectFilter; // 0x70
	[ActionSection] // RVA: 0xC222D0 Offset: 0xC222D0 VA: 0xC222D0
	[UIHintAttribute] // RVA: 0xC222D0 Offset: 0xC222D0 VA: 0xC222D0
	[TooltipAttribute] // RVA: 0xC222D0 Offset: 0xC222D0 VA: 0xC222D0
	public FsmInt storeFingerIndex; // 0x78
	[UIHintAttribute] // RVA: 0xC22344 Offset: 0xC22344 VA: 0xC22344
	[TooltipAttribute] // RVA: 0xC22344 Offset: 0xC22344 VA: 0xC22344
	public FsmGameObject storeCurrentObject; // 0x80
	[UIHintAttribute] // RVA: 0xC22394 Offset: 0xC22394 VA: 0xC22394
	[TooltipAttribute] // RVA: 0xC22394 Offset: 0xC22394 VA: 0xC22394
	public FsmGameObject storeStartObject; // 0x88

	// Methods

	// RVA: 0x1DF8C60 Offset: 0x1DF8C60 VA: 0x1DF8C60
	protected void .ctor() { }

	// RVA: 0x1DF8C88 Offset: 0x1DF8C88 VA: 0x1DF8C88 Slot: 28
	public override void Reset() { }

	// RVA: 0x1DF9394 Offset: 0x1DF9394 VA: 0x1DF9394 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1DF9460 Offset: 0x1DF9460 VA: 0x1DF9460 Slot: 37
	public override void OnExit() { }

	// RVA: 0x1DF952C Offset: 0x1DF952C VA: 0x1DF952C
	private void FingerGestures_OnFingerEvent(FingerEvent eventData) { }

	// RVA: 0x1DF965C Offset: 0x1DF965C VA: 0x1DF965C
	private bool IsValidEventName(string eventName) { }

	// RVA: 0x1DF98B8 Offset: 0x1DF98B8 VA: 0x1DF98B8
	protected void FingerGestures_OnGestureEvent(Gesture gesture) { }

	// RVA: 0x1DF9A28 Offset: 0x1DF9A28 VA: 0x1DF9A28 Slot: 62
	protected virtual bool HandleFingerEvent(FingerEvent e) { }

	// RVA: 0x1DF9A30 Offset: 0x1DF9A30 VA: 0x1DF9A30 Slot: 63
	protected virtual bool HandleGestureEvent(Gesture gesture) { }

	// RVA: 0x1DF9758 Offset: 0x1DF9758 VA: 0x1DF9758
	private bool IsValidFinger(int fingerIndex) { }

	// RVA: 0x1DF97D0 Offset: 0x1DF97D0 VA: 0x1DF97D0
	private bool IsValidObject(FsmOwnerDefault filter, GameObject target) { }

	// RVA: 0x1DF8DA8 Offset: 0x1DF8DA8 VA: 0x1DF8DA8
	protected void SendEvent(FsmEvent ev) { }
}

// Namespace: 
public enum ContinuousGesturePhase // TypeDefIndex: 4133
{
	// Fields
	public int value__; // 0x0
	public const ContinuousGesturePhase None = 0;
	public const ContinuousGesturePhase Started = 1;
	public const ContinuousGesturePhase Updated = 2;
	public const ContinuousGesturePhase Ended = 3;
}

// Namespace: 
public abstract class ContinuousGesture : Gesture // TypeDefIndex: 4134
{
	// Properties
	public ContinuousGesturePhase Phase { get; }

	// Methods

	// RVA: 0x2463184 Offset: 0x2463184 VA: 0x2463184
	protected void .ctor() { }

	// RVA: 0x246318C Offset: 0x246318C VA: 0x246318C
	public ContinuousGesturePhase get_Phase() { }
}

// Namespace: 
public abstract class ContinuousGestureRecognizer<T> : GestureRecognizerTS<T> // TypeDefIndex: 4135
{
	// Methods

	// RVA: -1 Offset: -1
	protected void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2266978 Offset: 0x2266978 VA: 0x2266978
	|-ContinuousGestureRecognizer<DragGesture>..ctor
	|-ContinuousGestureRecognizer<PinchGesture>..ctor
	|-ContinuousGestureRecognizer<object>..ctor
	|-ContinuousGestureRecognizer<TwistGesture>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 23
	protected override void Reset(T gesture) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2266A28 Offset: 0x2266A28 VA: 0x2266A28
	|-ContinuousGestureRecognizer<DragGesture>.Reset
	|-ContinuousGestureRecognizer<PinchGesture>.Reset
	|-ContinuousGestureRecognizer<object>.Reset
	|-ContinuousGestureRecognizer<TwistGesture>.Reset
	*/

	// RVA: -1 Offset: -1 Slot: 19
	protected override void OnStateChanged(Gesture sender) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2266A74 Offset: 0x2266A74 VA: 0x2266A74
	|-ContinuousGestureRecognizer<DragGesture>.OnStateChanged
	|-ContinuousGestureRecognizer<PinchGesture>.OnStateChanged
	|-ContinuousGestureRecognizer<object>.OnStateChanged
	|-ContinuousGestureRecognizer<TwistGesture>.OnStateChanged
	*/
}

// Namespace: 
public class DiscreteGesture : Gesture // TypeDefIndex: 4136
{
	// Methods

	// RVA: 0x1DED990 Offset: 0x1DED990 VA: 0x1DED990
	public void .ctor() { }
}

// Namespace: 
public abstract class DiscreteGestureRecognizer<T> : GestureRecognizerTS<T> // TypeDefIndex: 4137
{
	// Methods

	// RVA: -1 Offset: -1
	protected void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226A944 Offset: 0x226A944 VA: 0x226A944
	|-DiscreteGestureRecognizer<LongPressGesture>..ctor
	|-DiscreteGestureRecognizer<PointCloudGesture>..ctor
	|-DiscreteGestureRecognizer<SwipeGesture>..ctor
	|-DiscreteGestureRecognizer<object>..ctor
	|-DiscreteGestureRecognizer<TapGesture>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 19
	protected override void OnStateChanged(Gesture sender) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226A9F4 Offset: 0x226A9F4 VA: 0x226A9F4
	|-DiscreteGestureRecognizer<LongPressGesture>.OnStateChanged
	|-DiscreteGestureRecognizer<PointCloudGesture>.OnStateChanged
	|-DiscreteGestureRecognizer<SwipeGesture>.OnStateChanged
	|-DiscreteGestureRecognizer<object>.OnStateChanged
	|-DiscreteGestureRecognizer<TapGesture>.OnStateChanged
	*/
}

// Namespace: 
public class FingerEvent // TypeDefIndex: 4138
{
	// Fields
	private FingerEventDetector detector; // 0x10
	private FingerGestures.Finger finger; // 0x18
	private string name; // 0x20
	private GameObject selection; // 0x28
	private ScreenRaycastData raycast; // 0x30

	// Properties
	public string Name { get; set; }
	public FingerEventDetector Detector { get; set; }
	public FingerGestures.Finger Finger { get; set; }
	public virtual Vector2 Position { get; set; }
	public GameObject Selection { get; set; }
	public ScreenRaycastData Raycast { get; set; }

	// Methods

	// RVA: 0x1DF1E54 Offset: 0x1DF1E54 VA: 0x1DF1E54
	public void .ctor() { }

	// RVA: 0x1DF1EDC Offset: 0x1DF1EDC VA: 0x1DF1EDC
	public string get_Name() { }

	// RVA: 0x1DF1C5C Offset: 0x1DF1C5C VA: 0x1DF1C5C
	internal void set_Name(string value) { }

	// RVA: 0x1DF1EE4 Offset: 0x1DF1EE4 VA: 0x1DF1EE4
	public FingerEventDetector get_Detector() { }

	// RVA: 0x1DF1EEC Offset: 0x1DF1EEC VA: 0x1DF1EEC
	internal void set_Detector(FingerEventDetector value) { }

	// RVA: 0x1DF1EF4 Offset: 0x1DF1EF4 VA: 0x1DF1EF4
	public FingerGestures.Finger get_Finger() { }

	// RVA: 0x1DF1EFC Offset: 0x1DF1EFC VA: 0x1DF1EFC
	internal void set_Finger(FingerGestures.Finger value) { }

	// RVA: 0x1DF1F04 Offset: 0x1DF1F04 VA: 0x1DF1F04 Slot: 4
	public virtual Vector2 get_Position() { }

	// RVA: 0x1DF1F30 Offset: 0x1DF1F30 VA: 0x1DF1F30 Slot: 5
	internal virtual void set_Position(Vector2 value) { }

	// RVA: 0x1DF1FF4 Offset: 0x1DF1FF4 VA: 0x1DF1FF4
	public GameObject get_Selection() { }

	// RVA: 0x1DF1FFC Offset: 0x1DF1FFC VA: 0x1DF1FFC
	internal void set_Selection(GameObject value) { }

	// RVA: 0x1DF2004 Offset: 0x1DF2004 VA: 0x1DF2004
	public ScreenRaycastData get_Raycast() { }

	// RVA: 0x1DF2014 Offset: 0x1DF2014 VA: 0x1DF2014
	internal void set_Raycast(ScreenRaycastData value) { }
}

// Namespace: 
public abstract class FingerEventDetector<T> : FingerEventDetector // TypeDefIndex: 4139
{
	// Fields
	private List<T> fingerEventsList; // 0x0

	// Methods

	// RVA: -1 Offset: -1
	protected void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226AEF8 Offset: 0x226AEF8 VA: 0x226AEF8
	|-FingerEventDetector<FingerDownEvent>..ctor
	|-FingerEventDetector<FingerHoverEvent>..ctor
	|-FingerEventDetector<FingerMotionEvent>..ctor
	|-FingerEventDetector<FingerUpEvent>..ctor
	|-FingerEventDetector<object>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 10
	protected virtual T CreateFingerEvent() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226AF24 Offset: 0x226AF24 VA: 0x226AF24
	|-FingerEventDetector<FingerDownEvent>.CreateFingerEvent
	|-FingerEventDetector<FingerHoverEvent>.CreateFingerEvent
	|-FingerEventDetector<FingerMotionEvent>.CreateFingerEvent
	|-FingerEventDetector<FingerUpEvent>.CreateFingerEvent
	|-FingerEventDetector<object>.CreateFingerEvent
	*/

	// RVA: -1 Offset: -1 Slot: 5
	public override Type GetEventType() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226AF38 Offset: 0x226AF38 VA: 0x226AF38
	|-FingerEventDetector<FingerDownEvent>.GetEventType
	|-FingerEventDetector<FingerHoverEvent>.GetEventType
	|-FingerEventDetector<FingerMotionEvent>.GetEventType
	|-FingerEventDetector<FingerUpEvent>.GetEventType
	|-FingerEventDetector<object>.GetEventType
	*/

	// RVA: -1 Offset: -1 Slot: 7
	protected override void Start() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226AFAC Offset: 0x226AFAC VA: 0x226AFAC
	|-FingerEventDetector<FingerDownEvent>.Start
	|-FingerEventDetector<FingerHoverEvent>.Start
	|-FingerEventDetector<FingerMotionEvent>.Start
	|-FingerEventDetector<FingerUpEvent>.Start
	|-FingerEventDetector<object>.Start
	*/

	// RVA: -1 Offset: -1 Slot: 11
	protected virtual void OnDestroy() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226B080 Offset: 0x226B080 VA: 0x226B080
	|-FingerEventDetector<FingerDownEvent>.OnDestroy
	|-FingerEventDetector<FingerHoverEvent>.OnDestroy
	|-FingerEventDetector<FingerMotionEvent>.OnDestroy
	|-FingerEventDetector<FingerUpEvent>.OnDestroy
	|-FingerEventDetector<object>.OnDestroy
	*/

	// RVA: -1 Offset: -1
	private void FingerGestures_OnInputProviderChanged() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226B120 Offset: 0x226B120 VA: 0x226B120
	|-FingerEventDetector<object>.FingerGestures_OnInputProviderChanged
	*/

	// RVA: -1 Offset: -1 Slot: 12
	protected virtual void Init() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226B150 Offset: 0x226B150 VA: 0x226B150
	|-FingerEventDetector<FingerDownEvent>.Init
	|-FingerEventDetector<FingerHoverEvent>.Init
	|-FingerEventDetector<FingerMotionEvent>.Init
	|-FingerEventDetector<FingerUpEvent>.Init
	|-FingerEventDetector<object>.Init
	*/

	// RVA: -1 Offset: -1 Slot: 13
	protected virtual void Init(int fingersCount) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226B1F0 Offset: 0x226B1F0 VA: 0x226B1F0
	|-FingerEventDetector<FingerDownEvent>.Init
	|-FingerEventDetector<FingerHoverEvent>.Init
	|-FingerEventDetector<FingerMotionEvent>.Init
	|-FingerEventDetector<FingerUpEvent>.Init
	|-FingerEventDetector<object>.Init
	*/

	// RVA: -1 Offset: -1
	protected T GetEvent(FingerGestures.Finger finger) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226B350 Offset: 0x226B350 VA: 0x226B350
	|-FingerEventDetector<FingerHoverEvent>.GetEvent
	|-FingerEventDetector<FingerMotionEvent>.GetEvent
	|-FingerEventDetector<FingerUpEvent>.GetEvent
	|-FingerEventDetector<object>.GetEvent
	*/

	// RVA: -1 Offset: -1 Slot: 14
	protected virtual T GetEvent(int fingerIndex) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226B3AC Offset: 0x226B3AC VA: 0x226B3AC
	|-FingerEventDetector<FingerDownEvent>.GetEvent
	|-FingerEventDetector<FingerHoverEvent>.GetEvent
	|-FingerEventDetector<FingerMotionEvent>.GetEvent
	|-FingerEventDetector<FingerUpEvent>.GetEvent
	|-FingerEventDetector<object>.GetEvent
	*/
}

// Namespace: 
public sealed class FingerEventDetector.FingerEventHandler<T> : MulticastDelegate // TypeDefIndex: 4140
{
	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(object object, IntPtr method) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226AB18 Offset: 0x226AB18 VA: 0x226AB18
	|-FingerEventDetector.FingerEventHandler<FingerEvent>..ctor
	|-FingerEventDetector.FingerEventHandler<object>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 11
	public virtual void Invoke(T eventData) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226AB28 Offset: 0x226AB28 VA: 0x226AB28
	|-FingerEventDetector.FingerEventHandler<FingerDownEvent>.Invoke
	|-FingerEventDetector.FingerEventHandler<FingerEvent>.Invoke
	|-FingerEventDetector.FingerEventHandler<FingerHoverEvent>.Invoke
	|-FingerEventDetector.FingerEventHandler<FingerMotionEvent>.Invoke
	|-FingerEventDetector.FingerEventHandler<FingerUpEvent>.Invoke
	|-FingerEventDetector.FingerEventHandler<object>.Invoke
	*/

	// RVA: -1 Offset: -1 Slot: 12
	public virtual IAsyncResult BeginInvoke(T eventData, AsyncCallback callback, object object) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226AEC8 Offset: 0x226AEC8 VA: 0x226AEC8
	|-FingerEventDetector.FingerEventHandler<object>.BeginInvoke
	*/

	// RVA: -1 Offset: -1 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226AEEC Offset: 0x226AEEC VA: 0x226AEEC
	|-FingerEventDetector.FingerEventHandler<object>.EndInvoke
	*/
}

// Namespace: 
public abstract class FingerEventDetector : MonoBehaviour // TypeDefIndex: 4141
{
	// Fields
	public int FingerIndexFilter; // 0x18
	public ScreenRaycaster Raycaster; // 0x20
	public bool UseSendMessage; // 0x28
	public bool SendMessageToSelection; // 0x29
	public GameObject MessageTarget; // 0x30
	private FingerGestures.Finger activeFinger; // 0x38
	private ScreenRaycastData lastRaycast; // 0x40

	// Properties
	internal ScreenRaycastData Raycast { get; }

	// Methods

	// RVA: 0x1DF2030 Offset: 0x1DF2030 VA: 0x1DF2030
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 4
	protected abstract void ProcessFinger(FingerGestures.Finger finger);

	// RVA: -1 Offset: -1 Slot: 5
	public abstract Type GetEventType();

	// RVA: 0x1DF2074 Offset: 0x1DF2074 VA: 0x1DF2074 Slot: 6
	protected virtual void Awake() { }

	// RVA: 0x1DF2144 Offset: 0x1DF2144 VA: 0x1DF2144 Slot: 7
	protected virtual void Start() { }

	// RVA: 0x1DF2148 Offset: 0x1DF2148 VA: 0x1DF2148 Slot: 8
	protected virtual void Update() { }

	// RVA: 0x1DF2154 Offset: 0x1DF2154 VA: 0x1DF2154 Slot: 9
	protected virtual void ProcessFingers() { }

	// RVA: 0x1DF1CF8 Offset: 0x1DF1CF8 VA: 0x1DF1CF8
	protected void TrySendMessage(FingerEvent eventData) { }

	// RVA: 0x1DF2398 Offset: 0x1DF2398 VA: 0x1DF2398
	internal ScreenRaycastData get_Raycast() { }

	// RVA: 0x1DF23A8 Offset: 0x1DF23A8 VA: 0x1DF23A8
	public GameObject PickObject(Vector2 screenPos) { }

	// RVA: 0x1DF1C64 Offset: 0x1DF1C64 VA: 0x1DF1C64
	protected void UpdateSelection(FingerEvent e) { }
}

// Namespace: 
public enum GestureRecognitionState // TypeDefIndex: 4142
{
	// Fields
	public int value__; // 0x0
	public const GestureRecognitionState Ready = 0;
	public const GestureRecognitionState Started = 1;
	public const GestureRecognitionState InProgress = 2;
	public const GestureRecognitionState Failed = 3;
	public const GestureRecognitionState Ended = 4;
	public const GestureRecognitionState Recognized = 4;
	public const GestureRecognitionState FailAndRetry = 5;
}

// Namespace: 
public enum GestureResetMode // TypeDefIndex: 4143
{
	// Fields
	public int value__; // 0x0
	public const GestureResetMode Default = 0;
	public const GestureResetMode NextFrame = 1;
	public const GestureResetMode EndOfTouchSequence = 2;
}

// Namespace: 
public abstract class Gesture // TypeDefIndex: 4144
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC223E4 Offset: 0xC223E4 VA: 0xC223E4
	[DebuggerBrowsableAttribute] // RVA: 0xC223E4 Offset: 0xC223E4 VA: 0xC223E4
	private Gesture.EventHandler OnStateChanged; // 0x10
	internal int ClusterId; // 0x18
	private GestureRecognizer recognizer; // 0x20
	private float startTime; // 0x28
	private Vector2 startPosition; // 0x2C
	private Vector2 position; // 0x34
	private GestureRecognitionState state; // 0x3C
	private GestureRecognitionState prevState; // 0x40
	private FingerGestures.FingerList fingers; // 0x48
	private GameObject startSelection; // 0x50
	private GameObject selection; // 0x58
	private ScreenRaycastData lastRaycast; // 0x60

	// Properties
	public FingerGestures.FingerList Fingers { get; set; }
	public GestureRecognizer Recognizer { get; set; }
	public float StartTime { get; set; }
	public Vector2 StartPosition { get; set; }
	public Vector2 Position { get; set; }
	public GestureRecognitionState State { get; set; }
	public GestureRecognitionState PreviousState { get; }
	public float ElapsedTime { get; }
	public GameObject StartSelection { get; set; }
	public GameObject Selection { get; set; }
	public ScreenRaycastData Raycast { get; set; }

	// Methods

	// RVA: 0x1DED994 Offset: 0x1DED994 VA: 0x1DED994
	protected void .ctor() { }

	// RVA: 0x1DF7320 Offset: 0x1DF7320 VA: 0x1DF7320
	public void add_OnStateChanged(Gesture.EventHandler value) { }

	// RVA: 0x1DF740C Offset: 0x1DF740C VA: 0x1DF740C
	public void remove_OnStateChanged(Gesture.EventHandler value) { }

	// RVA: 0x1DF74F8 Offset: 0x1DF74F8 VA: 0x1DF74F8
	public static bool op_Implicit(Gesture gesture) { }

	// RVA: 0x1DF7504 Offset: 0x1DF7504 VA: 0x1DF7504
	public FingerGestures.FingerList get_Fingers() { }

	// RVA: 0x1DF750C Offset: 0x1DF750C VA: 0x1DF750C
	internal void set_Fingers(FingerGestures.FingerList value) { }

	// RVA: 0x1DF7514 Offset: 0x1DF7514 VA: 0x1DF7514
	public GestureRecognizer get_Recognizer() { }

	// RVA: 0x1DF751C Offset: 0x1DF751C VA: 0x1DF751C
	internal void set_Recognizer(GestureRecognizer value) { }

	// RVA: 0x1DF7524 Offset: 0x1DF7524 VA: 0x1DF7524
	public float get_StartTime() { }

	// RVA: 0x1DF752C Offset: 0x1DF752C VA: 0x1DF752C
	internal void set_StartTime(float value) { }

	// RVA: 0x1DEDB70 Offset: 0x1DEDB70 VA: 0x1DEDB70
	public Vector2 get_StartPosition() { }

	// RVA: 0x1DEE0D8 Offset: 0x1DEE0D8 VA: 0x1DEE0D8
	internal void set_StartPosition(Vector2 value) { }

	// RVA: 0x1DEDB68 Offset: 0x1DEDB68 VA: 0x1DEDB68
	public Vector2 get_Position() { }

	// RVA: 0x1DEE0D0 Offset: 0x1DEE0D0 VA: 0x1DEE0D0
	internal void set_Position(Vector2 value) { }

	// RVA: 0x1DF7534 Offset: 0x1DF7534 VA: 0x1DF7534
	public GestureRecognitionState get_State() { }

	// RVA: 0x1DF753C Offset: 0x1DF753C VA: 0x1DF753C
	public void set_State(GestureRecognitionState value) { }

	// RVA: 0x1DF7568 Offset: 0x1DF7568 VA: 0x1DF7568
	public GestureRecognitionState get_PreviousState() { }

	// RVA: 0x1DF7570 Offset: 0x1DF7570 VA: 0x1DF7570
	public float get_ElapsedTime() { }

	// RVA: 0x1DEDC44 Offset: 0x1DEDC44 VA: 0x1DEDC44
	public GameObject get_StartSelection() { }

	// RVA: 0x1DF759C Offset: 0x1DF759C VA: 0x1DF759C
	internal void set_StartSelection(GameObject value) { }

	// RVA: 0x1DF75A4 Offset: 0x1DF75A4 VA: 0x1DF75A4
	public GameObject get_Selection() { }

	// RVA: 0x1DF75AC Offset: 0x1DF75AC VA: 0x1DF75AC
	internal void set_Selection(GameObject value) { }

	// RVA: 0x1DF75B4 Offset: 0x1DF75B4 VA: 0x1DF75B4
	public ScreenRaycastData get_Raycast() { }

	// RVA: 0x1DF75C4 Offset: 0x1DF75C4 VA: 0x1DF75C4
	internal void set_Raycast(ScreenRaycastData value) { }

	// RVA: 0x1DF75E0 Offset: 0x1DF75E0 VA: 0x1DF75E0
	internal GameObject PickObject(ScreenRaycaster raycaster, Vector2 screenPos) { }

	// RVA: 0x1DF76D4 Offset: 0x1DF76D4 VA: 0x1DF76D4
	internal void PickStartSelection(ScreenRaycaster raycaster) { }

	// RVA: 0x1DF76FC Offset: 0x1DF76FC VA: 0x1DF76FC
	internal void PickSelection(ScreenRaycaster raycaster) { }
}

// Namespace: 
public sealed class Gesture.EventHandler : MulticastDelegate // TypeDefIndex: 4145
{
	// Methods

	// RVA: 0x1DF7724 Offset: 0x1DF7724 VA: 0x1DF7724
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1DF2CE0 Offset: 0x1DF2CE0 VA: 0x1DF2CE0 Slot: 11
	public virtual void Invoke(Gesture gesture) { }

	// RVA: 0x1DF7734 Offset: 0x1DF7734 VA: 0x1DF7734 Slot: 12
	public virtual IAsyncResult BeginInvoke(Gesture gesture, AsyncCallback callback, object object) { }

	// RVA: 0x1DF7758 Offset: 0x1DF7758 VA: 0x1DF7758 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public abstract class GestureRecognizerTS<T> : GestureRecognizer // TypeDefIndex: 4146
{
	// Fields
	private List<T> gestures; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC22420 Offset: 0xC22420 VA: 0xC22420
	[DebuggerBrowsableAttribute] // RVA: 0xC22420 Offset: 0xC22420 VA: 0xC22420
	private GestureRecognizerTS.GestureEventHandler<T> OnGesture; // 0x0
	private static FingerGestures.FingerList tempTouchList; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC2245C Offset: 0xC2245C VA: 0xC2245C
	private static Predicate<T> <>f__am$cache0; // 0x0

	// Properties
	public List<T> Gestures { get; }

	// Methods

	// RVA: -1 Offset: -1
	protected void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226D8AC Offset: 0x226D8AC VA: 0x226D8AC
	|-GestureRecognizerTS<object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void add_OnGesture(GestureRecognizerTS.GestureEventHandler<T> value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226D920 Offset: 0x226D920 VA: 0x226D920
	|-GestureRecognizerTS<object>.add_OnGesture
	*/

	// RVA: -1 Offset: -1
	public void remove_OnGesture(GestureRecognizerTS.GestureEventHandler<T> value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226DA10 Offset: 0x226DA10 VA: 0x226DA10
	|-GestureRecognizerTS<object>.remove_OnGesture
	*/

	// RVA: -1 Offset: -1 Slot: 13
	protected override void Start() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226DB00 Offset: 0x226DB00 VA: 0x226DB00
	|-GestureRecognizerTS<DragGesture>.Start
	|-GestureRecognizerTS<LongPressGesture>.Start
	|-GestureRecognizerTS<PinchGesture>.Start
	|-GestureRecognizerTS<PointCloudGesture>.Start
	|-GestureRecognizerTS<SwipeGesture>.Start
	|-GestureRecognizerTS<object>.Start
	|-GestureRecognizerTS<TapGesture>.Start
	|-GestureRecognizerTS<TwistGesture>.Start
	*/

	// RVA: -1 Offset: -1 Slot: 11
	protected override void OnEnable() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226DB60 Offset: 0x226DB60 VA: 0x226DB60
	|-GestureRecognizerTS<DragGesture>.OnEnable
	|-GestureRecognizerTS<LongPressGesture>.OnEnable
	|-GestureRecognizerTS<PinchGesture>.OnEnable
	|-GestureRecognizerTS<PointCloudGesture>.OnEnable
	|-GestureRecognizerTS<SwipeGesture>.OnEnable
	|-GestureRecognizerTS<object>.OnEnable
	|-GestureRecognizerTS<TapGesture>.OnEnable
	|-GestureRecognizerTS<TwistGesture>.OnEnable
	*/

	// RVA: -1 Offset: -1
	private void InitGestures() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226DB8C Offset: 0x226DB8C VA: 0x226DB8C
	|-GestureRecognizerTS<object>.InitGestures
	*/

	// RVA: -1 Offset: -1
	protected T AddGesture() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226DC34 Offset: 0x226DC34 VA: 0x226DC34
	|-GestureRecognizerTS<object>.AddGesture
	*/

	// RVA: -1 Offset: -1
	public List<T> get_Gestures() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226DD30 Offset: 0x226DD30 VA: 0x226DD30
	|-GestureRecognizerTS<object>.get_Gestures
	*/

	// RVA: -1 Offset: -1 Slot: 14
	protected virtual bool CanBegin(T gesture, FingerGestures.IFingerList touches) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226DD38 Offset: 0x226DD38 VA: 0x226DD38
	|-GestureRecognizerTS<DragGesture>.CanBegin
	|-GestureRecognizerTS<LongPressGesture>.CanBegin
	|-GestureRecognizerTS<PinchGesture>.CanBegin
	|-GestureRecognizerTS<PointCloudGesture>.CanBegin
	|-GestureRecognizerTS<SwipeGesture>.CanBegin
	|-GestureRecognizerTS<object>.CanBegin
	|-GestureRecognizerTS<TapGesture>.CanBegin
	|-GestureRecognizerTS<TwistGesture>.CanBegin
	*/

	// RVA: -1 Offset: -1 Slot: 15
	protected abstract void OnBegin(T gesture, FingerGestures.IFingerList touches);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-GestureRecognizerTS<object>.OnBegin
	*/

	// RVA: -1 Offset: -1 Slot: 16
	protected abstract GestureRecognitionState OnRecognize(T gesture, FingerGestures.IFingerList touches);
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-GestureRecognizerTS<object>.OnRecognize
	*/

	// RVA: -1 Offset: -1 Slot: 17
	protected virtual GameObject GetDefaultSelectionForSendMessage(T gesture) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226DF84 Offset: 0x226DF84 VA: 0x226DF84
	|-GestureRecognizerTS<LongPressGesture>.GetDefaultSelectionForSendMessage
	|-GestureRecognizerTS<PointCloudGesture>.GetDefaultSelectionForSendMessage
	|-GestureRecognizerTS<SwipeGesture>.GetDefaultSelectionForSendMessage
	|-GestureRecognizerTS<object>.GetDefaultSelectionForSendMessage
	|-GestureRecognizerTS<TapGesture>.GetDefaultSelectionForSendMessage
	*/

	// RVA: -1 Offset: -1 Slot: 18
	protected virtual T CreateGesture() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226DFB4 Offset: 0x226DFB4 VA: 0x226DFB4
	|-GestureRecognizerTS<DragGesture>.CreateGesture
	|-GestureRecognizerTS<LongPressGesture>.CreateGesture
	|-GestureRecognizerTS<PinchGesture>.CreateGesture
	|-GestureRecognizerTS<PointCloudGesture>.CreateGesture
	|-GestureRecognizerTS<SwipeGesture>.CreateGesture
	|-GestureRecognizerTS<object>.CreateGesture
	|-GestureRecognizerTS<TapGesture>.CreateGesture
	|-GestureRecognizerTS<TwistGesture>.CreateGesture
	*/

	// RVA: -1 Offset: -1 Slot: 9
	public override Type GetGestureType() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226DFC8 Offset: 0x226DFC8 VA: 0x226DFC8
	|-GestureRecognizerTS<DragGesture>.GetGestureType
	|-GestureRecognizerTS<LongPressGesture>.GetGestureType
	|-GestureRecognizerTS<PinchGesture>.GetGestureType
	|-GestureRecognizerTS<PointCloudGesture>.GetGestureType
	|-GestureRecognizerTS<SwipeGesture>.GetGestureType
	|-GestureRecognizerTS<object>.GetGestureType
	|-GestureRecognizerTS<TapGesture>.GetGestureType
	|-GestureRecognizerTS<TwistGesture>.GetGestureType
	*/

	// RVA: -1 Offset: -1 Slot: 19
	protected virtual void OnStateChanged(Gesture gesture) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226E03C Offset: 0x226E03C VA: 0x226E03C
	|-GestureRecognizerTS<object>.OnStateChanged
	*/

	// RVA: -1 Offset: -1 Slot: 20
	protected virtual T FindGestureByCluster(FingerClusterManager.Cluster cluster) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226E040 Offset: 0x226E040 VA: 0x226E040
	|-GestureRecognizerTS<DragGesture>.FindGestureByCluster
	|-GestureRecognizerTS<LongPressGesture>.FindGestureByCluster
	|-GestureRecognizerTS<PinchGesture>.FindGestureByCluster
	|-GestureRecognizerTS<PointCloudGesture>.FindGestureByCluster
	|-GestureRecognizerTS<SwipeGesture>.FindGestureByCluster
	|-GestureRecognizerTS<object>.FindGestureByCluster
	|-GestureRecognizerTS<TapGesture>.FindGestureByCluster
	|-GestureRecognizerTS<TwistGesture>.FindGestureByCluster
	*/

	// RVA: -1 Offset: -1 Slot: 21
	protected virtual T MatchActiveGestureToCluster(FingerClusterManager.Cluster cluster) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226E124 Offset: 0x226E124 VA: 0x226E124
	|-GestureRecognizerTS<DragGesture>.MatchActiveGestureToCluster
	|-GestureRecognizerTS<LongPressGesture>.MatchActiveGestureToCluster
	|-GestureRecognizerTS<PinchGesture>.MatchActiveGestureToCluster
	|-GestureRecognizerTS<PointCloudGesture>.MatchActiveGestureToCluster
	|-GestureRecognizerTS<SwipeGesture>.MatchActiveGestureToCluster
	|-GestureRecognizerTS<object>.MatchActiveGestureToCluster
	|-GestureRecognizerTS<TapGesture>.MatchActiveGestureToCluster
	|-GestureRecognizerTS<TwistGesture>.MatchActiveGestureToCluster
	*/

	// RVA: -1 Offset: -1 Slot: 22
	protected virtual T FindFreeGesture() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226E150 Offset: 0x226E150 VA: 0x226E150
	|-GestureRecognizerTS<DragGesture>.FindFreeGesture
	|-GestureRecognizerTS<LongPressGesture>.FindFreeGesture
	|-GestureRecognizerTS<PinchGesture>.FindFreeGesture
	|-GestureRecognizerTS<PointCloudGesture>.FindFreeGesture
	|-GestureRecognizerTS<SwipeGesture>.FindFreeGesture
	|-GestureRecognizerTS<object>.FindFreeGesture
	|-GestureRecognizerTS<TapGesture>.FindFreeGesture
	|-GestureRecognizerTS<TwistGesture>.FindFreeGesture
	*/

	// RVA: -1 Offset: -1 Slot: 23
	protected virtual void Reset(T gesture) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226E394 Offset: 0x226E394 VA: 0x226E394
	|-GestureRecognizerTS<LongPressGesture>.Reset
	|-GestureRecognizerTS<PointCloudGesture>.Reset
	|-GestureRecognizerTS<SwipeGesture>.Reset
	|-GestureRecognizerTS<object>.Reset
	|-GestureRecognizerTS<TapGesture>.Reset
	*/

	// RVA: -1 Offset: -1 Slot: 24
	public virtual void Update() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226E444 Offset: 0x226E444 VA: 0x226E444
	|-GestureRecognizerTS<DragGesture>.Update
	|-GestureRecognizerTS<LongPressGesture>.Update
	|-GestureRecognizerTS<PinchGesture>.Update
	|-GestureRecognizerTS<PointCloudGesture>.Update
	|-GestureRecognizerTS<SwipeGesture>.Update
	|-GestureRecognizerTS<object>.Update
	|-GestureRecognizerTS<TapGesture>.Update
	|-GestureRecognizerTS<TwistGesture>.Update
	*/

	// RVA: -1 Offset: -1
