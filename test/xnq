	public static int DefaultResolutionScreenWidth { get; set; }
	public static int DefaultResolutionScreenHeight { get; set; }

	// Methods

	// RVA: 0x1AA4BA0 Offset: 0x1AA4BA0 VA: 0x1AA4BA0
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD37354 Offset: 0xD37354 VA: 0xD37354
	// RVA: 0x1AA4BB4 Offset: 0x1AA4BB4 VA: 0x1AA4BB4
	public static int get_DefaultScreenWidth() { }

	[CompilerGeneratedAttribute] // RVA: 0xD37364 Offset: 0xD37364 VA: 0xD37364
	// RVA: 0x1AA4C1C Offset: 0x1AA4C1C VA: 0x1AA4C1C
	private static void set_DefaultScreenWidth(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37374 Offset: 0xD37374 VA: 0xD37374
	// RVA: 0x1AA4C88 Offset: 0x1AA4C88 VA: 0x1AA4C88
	public static int get_DefaultScreenHeight() { }

	[CompilerGeneratedAttribute] // RVA: 0xD37384 Offset: 0xD37384 VA: 0xD37384
	// RVA: 0x1AA4CF0 Offset: 0x1AA4CF0 VA: 0x1AA4CF0
	private static void set_DefaultScreenHeight(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37394 Offset: 0xD37394 VA: 0xD37394
	// RVA: 0x1AA4D5C Offset: 0x1AA4D5C VA: 0x1AA4D5C
	public static int get_DefaultResolutionScreenWidth() { }

	[CompilerGeneratedAttribute] // RVA: 0xD373A4 Offset: 0xD373A4 VA: 0xD373A4
	// RVA: 0x1AA4DC4 Offset: 0x1AA4DC4 VA: 0x1AA4DC4
	private static void set_DefaultResolutionScreenWidth(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD373B4 Offset: 0xD373B4 VA: 0xD373B4
	// RVA: 0x1AA4E30 Offset: 0x1AA4E30 VA: 0x1AA4E30
	public static int get_DefaultResolutionScreenHeight() { }

	[CompilerGeneratedAttribute] // RVA: 0xD373C4 Offset: 0xD373C4 VA: 0xD373C4
	// RVA: 0x1AA4E98 Offset: 0x1AA4E98 VA: 0x1AA4E98
	private static void set_DefaultResolutionScreenHeight(int value) { }

	// RVA: 0x1AA4F04 Offset: 0x1AA4F04 VA: 0x1AA4F04
	public static void Initialize() { }

	// RVA: 0x1AA5004 Offset: 0x1AA5004 VA: 0x1AA5004
	private void Start() { }

	// RVA: 0x1AA51A4 Offset: 0x1AA51A4 VA: 0x1AA51A4
	private void Update() { }

	// RVA: 0x1AA5008 Offset: 0x1AA5008 VA: 0x1AA5008
	private void ReScale() { }

	// RVA: 0x1AA51F8 Offset: 0x1AA51F8 VA: 0x1AA51F8
	protected void OnApplicationPause(bool pauseStatus) { }

	// RVA: 0x1AA5204 Offset: 0x1AA5204 VA: 0x1AA5204
	private void OnPreRender() { }

	// RVA: 0x1AA5290 Offset: 0x1AA5290 VA: 0x1AA5290
	private void OnPostRender() { }

	// RVA: 0x1AA52B0 Offset: 0x1AA52B0 VA: 0x1AA52B0
	private void OnPreCull() { }

	// RVA: 0x1AA54E4 Offset: 0x1AA54E4 VA: 0x1AA54E4
	private static double GetScreenDPI() { }

	// RVA: 0x1AA5500 Offset: 0x1AA5500 VA: 0x1AA5500
	public static bool IsEnableResolutionSetting() { }

	// RVA: 0x1AA557C Offset: 0x1AA557C VA: 0x1AA557C
	public static void SetResolutionType(ResolutionManager.ResolutionType type) { }

	// RVA: 0x1AA56B0 Offset: 0x1AA56B0 VA: 0x1AA56B0
	private static void .cctor() { }
}

// Namespace: 
public enum ResolutionManager.ResolutionType // TypeDefIndex: 6547
{
	// Fields
	public int value__; // 0x0
	public const ResolutionManager.ResolutionType NORMAL = 0;
	public const ResolutionManager.ResolutionType LOW = 1;
}

// Namespace: 
public class SafetyNetManager : SingletonMonoBehaviour<SafetyNetManager> // TypeDefIndex: 6548
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1078 Offset: 0xCC1078 VA: 0xCC1078
	[DebuggerBrowsableAttribute] // RVA: 0xCC1078 Offset: 0xCC1078 VA: 0xCC1078
	private string <JWS>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCC10B4 Offset: 0xCC10B4 VA: 0xCC10B4
	[DebuggerBrowsableAttribute] // RVA: 0xCC10B4 Offset: 0xCC10B4 VA: 0xCC10B4
	private Action<string> <Callback>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCC10F0 Offset: 0xCC10F0 VA: 0xCC10F0
	[DebuggerBrowsableAttribute] // RVA: 0xCC10F0 Offset: 0xCC10F0 VA: 0xCC10F0
	private Action<string> <FailedCallback>k__BackingField; // 0x28

	// Properties
	public string JWS { get; set; }
	public Action<string> Callback { get; set; }
	public Action<string> FailedCallback { get; set; }

	// Methods

	// RVA: 0x1AAD0E0 Offset: 0x1AAD0E0 VA: 0x1AAD0E0
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD373D4 Offset: 0xD373D4 VA: 0xD373D4
	// RVA: 0x1AAD130 Offset: 0x1AAD130 VA: 0x1AAD130
	private void set_JWS(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD373E4 Offset: 0xD373E4 VA: 0xD373E4
	// RVA: 0x1AAD138 Offset: 0x1AAD138 VA: 0x1AAD138
	public string get_JWS() { }

	[CompilerGeneratedAttribute] // RVA: 0xD373F4 Offset: 0xD373F4 VA: 0xD373F4
	// RVA: 0x1AAD140 Offset: 0x1AAD140 VA: 0x1AAD140
	public void set_Callback(Action<string> value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37404 Offset: 0xD37404 VA: 0xD37404
	// RVA: 0x1AAD148 Offset: 0x1AAD148 VA: 0x1AAD148
	public Action<string> get_Callback() { }

	[CompilerGeneratedAttribute] // RVA: 0xD37414 Offset: 0xD37414 VA: 0xD37414
	// RVA: 0x1AAD150 Offset: 0x1AAD150 VA: 0x1AAD150
	public void set_FailedCallback(Action<string> value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37424 Offset: 0xD37424 VA: 0xD37424
	// RVA: 0x1AAD158 Offset: 0x1AAD158 VA: 0x1AAD158
	public Action<string> get_FailedCallback() { }

	[ConditionalAttribute] // RVA: 0xD37434 Offset: 0xD37434 VA: 0xD37434
	// RVA: 0x1AAD160 Offset: 0x1AAD160 VA: 0x1AAD160
	public void Attest(byte[] nonce) { }
}

// Namespace: 
public class SceneJumpInfo // TypeDefIndex: 6549
{
	// Fields
	protected string name; // 0x10
	protected int id; // 0x18
	protected int num; // 0x1C
	protected long userId; // 0x20
	protected long userId2; // 0x28
	protected string returnSceneName; // 0x30

	// Properties
	public string Name { get; }
	public int Id { get; }
	public int Num { get; }
	public long UserId { get; }
	public long UserId2 { get; }
	public string ReturnSceneName { get; }

	// Methods

	// RVA: 0x1AB6AA0 Offset: 0x1AB6AA0 VA: 0x1AB6AA0
	public void .ctor() { }

	// RVA: 0x1AB6AA8 Offset: 0x1AB6AA8 VA: 0x1AB6AA8
	public void .ctor(string name) { }

	// RVA: 0x1AB6AD4 Offset: 0x1AB6AD4 VA: 0x1AB6AD4
	public void .ctor(int id) { }

	// RVA: 0x1AB6B00 Offset: 0x1AB6B00 VA: 0x1AB6B00
	public void .ctor(string name, int id) { }

	// RVA: 0x1AB6B3C Offset: 0x1AB6B3C VA: 0x1AB6B3C
	public void .ctor(string name, int id, int num) { }

	// RVA: 0x1AB6B7C Offset: 0x1AB6B7C VA: 0x1AB6B7C
	public void .ctor(string name, int id, long userId) { }

	// RVA: 0x1AB6BC0 Offset: 0x1AB6BC0 VA: 0x1AB6BC0
	public void .ctor(string name, long userId) { }

	// RVA: 0x1AB6BFC Offset: 0x1AB6BFC VA: 0x1AB6BFC
	public void .ctor(string name, long userId, long userId2) { }

	// RVA: 0x1AB6C3C Offset: 0x1AB6C3C VA: 0x1AB6C3C
	public void .ctor(string name, long userId, int num, long userId2) { }

	// RVA: 0x1AB6C8C Offset: 0x1AB6C8C VA: 0x1AB6C8C
	public string get_Name() { }

	// RVA: 0x1AB6C94 Offset: 0x1AB6C94 VA: 0x1AB6C94
	public int get_Id() { }

	// RVA: 0x1AB6C9C Offset: 0x1AB6C9C VA: 0x1AB6C9C
	public int get_Num() { }

	// RVA: 0x1AB6CA4 Offset: 0x1AB6CA4 VA: 0x1AB6CA4
	public long get_UserId() { }

	// RVA: 0x1AB6CAC Offset: 0x1AB6CAC VA: 0x1AB6CAC
	public long get_UserId2() { }

	// RVA: 0x1AB6CB4 Offset: 0x1AB6CB4 VA: 0x1AB6CB4
	public string get_ReturnSceneName() { }

	// RVA: 0x1AB6CBC Offset: 0x1AB6CBC VA: 0x1AB6CBC
	public void SetReturnScene(SceneList.Type type) { }

	// RVA: 0x1AB6D38 Offset: 0x1AB6D38 VA: 0x1AB6D38
	public void SetReturnNowScene() { }

	// RVA: 0x1AB6DA4 Offset: 0x1AB6DA4 VA: 0x1AB6DA4
	public bool IsEnableReturnScene() { }

	// RVA: 0x1AB6DB4 Offset: 0x1AB6DB4 VA: 0x1AB6DB4
	public bool ReturnScene() { }

	// RVA: 0x1AB6E4C Offset: 0x1AB6E4C VA: 0x1AB6E4C
	public void SetId(int id) { }

	// RVA: 0x1AB6E54 Offset: 0x1AB6E54 VA: 0x1AB6E54
	public void SetUserId(long userId) { }

	// RVA: 0x1AB6E5C Offset: 0x1AB6E5C VA: 0x1AB6E5C
	public void SetUserId2(long userId2) { }
}

// Namespace: 
public class SceneRootComponent : BaseMonoBehaviour // TypeDefIndex: 6550
{
	// Fields
	public PlayMakerFSM myFSM; // 0x18
	protected UIRoot uiRoot; // 0x20
	protected int manualWidth; // 0x28
	protected int manualHeight; // 0x2C
	protected MainMenuBar.Kind kind; // 0x30
	protected int depth; // 0x34

	// Methods

	// RVA: 0x143B430 Offset: 0x143B430 VA: 0x143B430
	public void .ctor() { }

	// RVA: 0x143B4B4 Offset: 0x143B4B4 VA: 0x143B4B4
	public string getSceneName() { }

	// RVA: 0x143B4E8 Offset: 0x143B4E8 VA: 0x143B4E8
	public bool checkSceneName(string name) { }

	// RVA: 0x143B53C Offset: 0x143B53C VA: 0x143B53C
	public void Start() { }

	// RVA: 0x143B5FC Offset: 0x143B5FC VA: 0x143B5FC
	public bool SetSceneActive(bool flag) { }

	// RVA: 0x143B700 Offset: 0x143B700 VA: 0x143B700
	protected void OnApplicationPause(bool pauseStatus) { }

	// RVA: 0x143B5D4 Offset: 0x143B5D4 VA: 0x143B5D4
	protected void ReScaleUpdate() { }

	// RVA: 0x143B72C Offset: 0x143B72C VA: 0x143B72C
	public void initRenderSetting() { }

	// RVA: 0x143B748 Offset: 0x143B748 VA: 0x143B748
	public void sendMessageStartUp() { }

	// RVA: 0x143B81C Offset: 0x143B81C VA: 0x143B81C
	public void sendMessageResume() { }

	// RVA: 0x143B8F0 Offset: 0x143B8F0 VA: 0x143B8F0
	public void sendMessage(string message) { }

	// RVA: 0x143B9A0 Offset: 0x143B9A0 VA: 0x143B9A0 Slot: 4
	public virtual void beginInitialize() { }

	// RVA: 0x143B9EC Offset: 0x143B9EC VA: 0x143B9EC Slot: 5
	public virtual void beginStartUp(object data) { }

	// RVA: 0x143B9F8 Offset: 0x143B9F8 VA: 0x143B9F8 Slot: 6
	public virtual void beginStartUp() { }

	// RVA: 0x143BAB0 Offset: 0x143BAB0 VA: 0x143BAB0 Slot: 7
	public virtual void beginFinish() { }

	// RVA: 0x143BAB4 Offset: 0x143BAB4 VA: 0x143BAB4 Slot: 8
	public virtual void beginPause() { }

	// RVA: 0x143BAB8 Offset: 0x143BAB8 VA: 0x143BAB8 Slot: 9
	public virtual void beginResume(object data) { }

	// RVA: 0x143BAC4 Offset: 0x143BAC4 VA: 0x143BAC4 Slot: 10
	public virtual void beginResume() { }

	// RVA: 0x143B9DC Offset: 0x143B9DC VA: 0x143B9DC
	public void setMainMenuBar(MainMenuBar.Kind kind, int depth) { }

	// RVA: 0x143BB08 Offset: 0x143BB08 VA: 0x143BB08
	public void resumeMainMenuBar() { }
}

// Namespace: 
public class SceneTemp // TypeDefIndex: 6551
{
	// Fields
	private string sceneName; // 0x10

	// Methods

	// RVA: 0x143BB14 Offset: 0x143BB14 VA: 0x143BB14
	public void .ctor(string sceneName) { }

	// RVA: 0x143BB40 Offset: 0x143BB40 VA: 0x143BB40
	public void .ctor(SceneRootComponent comp) { }

	// RVA: 0x143BB80 Offset: 0x143BB80 VA: 0x143BB80
	public string getSceneName() { }
}

// Namespace: 
public class SeManager : SingletonMonoBehaviour<SeManager> // TypeDefIndex: 6552
{
	// Fields
	private static string[] LoadSeList; // 0x0
	protected CriAtomSource[] systemSeSources; // 0x18
	protected CriAtomSource[] seSources; // 0x20
	public static float DEFAULT_VOLUME; // 0x8
	private readonly int SYSTEM_SE_MAX; // 0x28
	private int systemSeIdx; // 0x2C
	[SerializeField] // RVA: 0xCC112C Offset: 0xCC112C VA: 0xCC112C
	public int seMax; // 0x30
	protected string[] systemSeClipNames; // 0x38
	protected string[] commonSeClipNames; // 0x40
	protected static string[] seAssetBundleList; // 0x10
	protected static string[] residentSeAssetBundleList; // 0x18
	protected static bool isMute; // 0x20
	protected static float masterVolume; // 0x24
	protected static float masterVoiceVolume; // 0x28
	protected GameObject playerGameObject; // 0x48
	protected SePlayer[] sePlayerStatusList; // 0x50
	protected List<SePlayer> workSePlayerStatusList; // 0x58
	protected List<CriAtomExPlayback> sePlaybackStatusList; // 0x60
	protected int sePlayNum; // 0x68
	public static bool IsBusy; // 0x2C
	protected static int loadCounter; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xCC113C Offset: 0xCC113C VA: 0xCC113C
	private static Action <>f__mg$cache0; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xCC114C Offset: 0xCC114C VA: 0xCC114C
	private static Action <>f__mg$cache1; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xCC115C Offset: 0xCC115C VA: 0xCC115C
	private static Func<string, string> <>f__am$cache0; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xCC116C Offset: 0xCC116C VA: 0xCC116C
	private static Func<string, string> <>f__am$cache1; // 0x50

	// Properties
	public static bool IsMute { get; }
	public static float MasterVolume { get; }
	public static float MasterVoiceVolume { get; }

	// Methods

	// RVA: 0x1B1AB8C Offset: 0x1B1AB8C VA: 0x1B1AB8C
	public void .ctor() { }

	// RVA: 0x1B1B9F4 Offset: 0x1B1B9F4 VA: 0x1B1B9F4
	public static void Initialize() { }

	// RVA: 0x1B1BF34 Offset: 0x1B1BF34 VA: 0x1B1BF34
	public static void InitializeAssetStorage() { }

	// RVA: 0x1B1C18C Offset: 0x1B1C18C VA: 0x1B1C18C
	protected static void LoadEndResidentSeAsset() { }

	// RVA: 0x1B1C4EC Offset: 0x1B1C4EC VA: 0x1B1C4EC
	public static string[] getLoadSeNameList() { }

	// RVA: 0x1B1C554 Offset: 0x1B1C554 VA: 0x1B1C554
	public static string GetPathName(string name) { }

	// RVA: 0x1B1C5C8 Offset: 0x1B1C5C8 VA: 0x1B1C5C8
	protected static bool IsDownloadFile(string pathName) { }

	// RVA: 0x1B1C650 Offset: 0x1B1C650 VA: 0x1B1C650
	public static void Reset() { }

	// RVA: 0x1B1C700 Offset: 0x1B1C700 VA: 0x1B1C700
	public static bool get_IsMute() { }

	// RVA: 0x1B1C768 Offset: 0x1B1C768 VA: 0x1B1C768
	public static void SetMute(bool isMute) { }

	// RVA: 0x1B1C9A8 Offset: 0x1B1C9A8 VA: 0x1B1C9A8
	public static float get_MasterVolume() { }

	// RVA: 0x1B1CA10 Offset: 0x1B1CA10 VA: 0x1B1CA10
	public static float get_MasterVoiceVolume() { }

	// RVA: 0x1B1CA78 Offset: 0x1B1CA78 VA: 0x1B1CA78
	public static void SetMasterVolume(float volume) { }

	// RVA: 0x1B1CB80 Offset: 0x1B1CB80 VA: 0x1B1CB80
	public static void SetVoiceMasterVolume(float volume) { }

	// RVA: 0x1B1CC88 Offset: 0x1B1CC88 VA: 0x1B1CC88
	public static CriAtomSource PlaySystemSe(SeManager.SystemSeKind kind) { }

	// RVA: 0x1B1D014 Offset: 0x1B1D014 VA: 0x1B1D014
	public static string GetCommonSeName(SeManager.CommonSeKind kind) { }

	// RVA: 0x1B1D078 Offset: 0x1B1D078 VA: 0x1B1D078
	public string GetCommonSeNameLocal(SeManager.CommonSeKind kind) { }

	// RVA: 0x1B1D0CC Offset: 0x1B1D0CC VA: 0x1B1D0CC
	public static void PlayCommonSe(SeManager.CommonSeKind kind) { }

	// RVA: 0x1B1D130 Offset: 0x1B1D130 VA: 0x1B1D130
	public void PlayCommonSeLocal(SeManager.CommonSeKind kind) { }

	// RVA: 0x1B1D1DC Offset: 0x1B1D1DC VA: 0x1B1D1DC
	public static bool IsBusyCommonSe(SeManager.CommonSeKind kind) { }

	// RVA: 0x1B1D240 Offset: 0x1B1D240 VA: 0x1B1D240
	public bool IsBusyCommonSeLocal(SeManager.CommonSeKind kind) { }

	// RVA: 0x1B1D2E8 Offset: 0x1B1D2E8 VA: 0x1B1D2E8
	public static bool IsBusySe(string name) { }

	// RVA: 0x1B1D61C Offset: 0x1B1D61C VA: 0x1B1D61C
	public static bool IsBusyVoice(string assetName, string objectName) { }

	// RVA: 0x1B1D6E4 Offset: 0x1B1D6E4 VA: 0x1B1D6E4
	public static void LoadSe(string name, Action callbackFunc) { }

	// RVA: 0x1B1D7AC Offset: 0x1B1D7AC VA: 0x1B1D7AC
	public static void ReleaseSe(string name) { }

	// RVA: 0x1B1D84C Offset: 0x1B1D84C VA: 0x1B1D84C
	public static SePlayer PlaySe(string name, float volume, float fadeinTime, Action callbackFunc, bool notOverwrite = False) { }

	// RVA: 0x1B1DC78 Offset: 0x1B1DC78 VA: 0x1B1DC78
	public static SePlayer PlaySe(string assetName, string objectName, float volume, float fadeinTime, Action callbackFunc, bool notOverwrite = False) { }

	// RVA: 0x1B1DDB8 Offset: 0x1B1DDB8 VA: 0x1B1DDB8
	public static SePlayer PlaySe(AssetData assetData, string objectName, float volume, float fadeinTime, Action callbackFunc) { }

	// RVA: 0x1B1DEC8 Offset: 0x1B1DEC8 VA: 0x1B1DEC8
	public static SePlayer PlaySeLoop(string name, float volume, float fadeinTime) { }

	// RVA: 0x1B1DFA4 Offset: 0x1B1DFA4 VA: 0x1B1DFA4
	public static SePlayer PlaySeLoop(string assetName, string objectName, float volume, float fadeinTime) { }

	// RVA: 0x1B1E094 Offset: 0x1B1E094 VA: 0x1B1E094
	public static SePlayer PlaySeLoop(AssetData assetData, string objectName, float volume, float fadeinTime) { }

	// RVA: 0x1B1E1A0 Offset: 0x1B1E1A0 VA: 0x1B1E1A0
	public static SePlayer PlayVoice(string name, float volume, Action callbackFunc) { }

	// RVA: 0x1B1E288 Offset: 0x1B1E288 VA: 0x1B1E288
	public static SePlayer PlayVoice(string assetName, string objectName, float volume, Action callbackFunc) { }

	// RVA: 0x1B1E378 Offset: 0x1B1E378 VA: 0x1B1E378
	public static SePlayer PlayVoice(AssetData assetData, string objectName, float volume, Action callbackFunc) { }

	// RVA: 0x1B1E484 Offset: 0x1B1E484 VA: 0x1B1E484
	public static void StopSe(int num, float fadeoutTime = 0) { }

	// RVA: 0x1B1E578 Offset: 0x1B1E578 VA: 0x1B1E578
	public static void StopSe(string name, float fadeoutTime = 0) { }

	// RVA: 0x1B1E66C Offset: 0x1B1E66C VA: 0x1B1E66C
	public static void StopSe(string assetName, string objectName, float fadeoutTime = 0) { }

	// RVA: 0x1B1E774 Offset: 0x1B1E774 VA: 0x1B1E774
	public static void StopSe(string assetName, string objectName, float volume, float fadeTime) { }

	// RVA: 0x1B1E88C Offset: 0x1B1E88C VA: 0x1B1E88C
	public static void StopSystemSe() { }

	// RVA: 0x1B1E9C4 Offset: 0x1B1E9C4 VA: 0x1B1E9C4
	public static void StopVoice(string assetName, string objectName, float fadeoutTime = 0) { }

	// RVA: 0x1B1EAE0 Offset: 0x1B1EAE0 VA: 0x1B1EAE0
	public static void StopSeAll(float fadeoutTime = 0) { }

	// RVA: 0x1B1EC60 Offset: 0x1B1EC60 VA: 0x1B1EC60
	public static void StopVoiceAll(float fadeoutTime = 0) { }

	// RVA: 0x1B1EDEC Offset: 0x1B1EDEC VA: 0x1B1EDEC
	public static void ChangeVolumeSe(string name, float volume, float fadeTime) { }

	// RVA: 0x1B1EEF0 Offset: 0x1B1EEF0 VA: 0x1B1EEF0
	public static void ChangeVolumeVoice(string assetName, string objectName, float volume, float fadeTime) { }

	// RVA: 0x1B1F01C Offset: 0x1B1F01C VA: 0x1B1F01C
	public static void SetPitchSe(string name, float pitch) { }

	// RVA: 0x1B1F10C Offset: 0x1B1F10C VA: 0x1B1F10C
	public static float GetPitchSe(string name) { }

	// RVA: 0x1B1F1EC Offset: 0x1B1F1EC VA: 0x1B1F1EC
	public static void PauseSe(bool isPause) { }

	// RVA: 0x1B1F360 Offset: 0x1B1F360 VA: 0x1B1F360
	public static void PauseVoice(bool isPause) { }

	// RVA: 0x1B1F29C Offset: 0x1B1F29C VA: 0x1B1F29C
	private void PauseSeLocal(bool isPause, SePlayer.SeType seType) { }

	// RVA: 0x1B1BB2C Offset: 0x1B1BB2C VA: 0x1B1BB2C
	private void InitializeLocal() { }

	// RVA: 0x1B1C6F8 Offset: 0x1B1C6F8 VA: 0x1B1C6F8
	protected void ResetLocal() { }

	// RVA: 0x1B1C870 Offset: 0x1B1C870 VA: 0x1B1C870
	protected void SetMuteLocal() { }

	// RVA: 0x1B1CCEC Offset: 0x1B1CCEC VA: 0x1B1CCEC
	protected CriAtomSource PlaySystemSeLocal(SeManager.SystemSeKind kind) { }

	// RVA: 0x1B1F634 Offset: 0x1B1F634 VA: 0x1B1F634
	public CriAtomSource GetAudioSource(SePlayer player) { }

	// RVA: 0x1B1F758 Offset: 0x1B1F758 VA: 0x1B1F758
	public CriAtomSource GetAudioSource(SePlayer player, string cueSheet, string cueName) { }

	// RVA: 0x1B1FAF4 Offset: 0x1B1FAF4 VA: 0x1B1FAF4
	public CriAtomSource GetAudioSource(SePlayer player, string cueSheet, string cueName, bool notOverwrite) { }

	// RVA: 0x1B1FC78 Offset: 0x1B1FC78 VA: 0x1B1FC78
	public bool ReleaseAudioSource(SePlayer player) { }

	// RVA: 0x1B1FD94 Offset: 0x1B1FD94 VA: 0x1B1FD94
	protected SePlayer GetSePlayer(int num) { }

	// RVA: 0x1B1FE6C Offset: 0x1B1FE6C VA: 0x1B1FE6C
	protected SePlayer GetSePlayer(string name) { }

	// RVA: 0x1B1FF78 Offset: 0x1B1FF78 VA: 0x1B1FF78
	protected SePlayer GetSePlayer(string assetName, string objectName) { }

	// RVA: 0x1B200B8 Offset: 0x1B200B8 VA: 0x1B200B8
	protected SePlayer GetSePlayer(SePlayer.SeType type, string name) { }

	// RVA: 0x1B201CC Offset: 0x1B201CC VA: 0x1B201CC
	protected SePlayer GetSePlayer(SePlayer.SeType type, string assetName, string objectName) { }

	// RVA: 0x1B1D3A0 Offset: 0x1B1D3A0 VA: 0x1B1D3A0
	protected bool IsBusyLocal(SePlayer.SeType seType, string assetName, string objectName) { }

	// RVA: 0x1B1D798 Offset: 0x1B1D798 VA: 0x1B1D798
	public void LoadSeLocal(string name, Action callbackFunc) { }

	// RVA: 0x1B1D848 Offset: 0x1B1D848 VA: 0x1B1D848
	public void ReleaseSeLocal(string name) { }

	// RVA: 0x1B20404 Offset: 0x1B20404 VA: 0x1B20404
	protected SePlayer PlayLocal(SePlayer.SeType seType, AssetData.Type assetType, string pathName, string name, float volume, bool isLoop, float fadeinTime, Action callbackFunc, bool notOverwrite = False) { }

	// RVA: 0x1B1F4C8 Offset: 0x1B1F4C8 VA: 0x1B1F4C8
	protected void StopLocal(CriAtomSource player) { }

	// RVA: 0x1B1D93C Offset: 0x1B1D93C VA: 0x1B1D93C
	protected SePlayer PlaySeLocal(SePlayer.SeType seType, string name, float volume, bool isLoop, float fadeinTime, Action callbackFunc, bool notOverwrite = False) { }

	// RVA: 0x1B1DD78 Offset: 0x1B1DD78 VA: 0x1B1DD78
	protected SePlayer PlaySeLocal(SePlayer.SeType seType, string pathName, string name, float volume, bool isLoop, float fadeinTime, Action callbackFunc, bool notOverwrite = False) { }

	// RVA: 0x1B1EB98 Offset: 0x1B1EB98 VA: 0x1B1EB98
	protected void StopSeAllLocal(float fadeoutTime) { }

	// RVA: 0x1B1E544 Offset: 0x1B1E544 VA: 0x1B1E544
	protected void StopSeLocal(int num, float fadeoutTime) { }

	// RVA: 0x1B1E638 Offset: 0x1B1E638 VA: 0x1B1E638
	protected void StopSeLocal(string name, float fadeoutTime) { }

	// RVA: 0x1B1E740 Offset: 0x1B1E740 VA: 0x1B1E740
	protected void StopSeLocal(string assetName, string objectName, float fadeoutTime) { }

	// RVA: 0x1B1E930 Offset: 0x1B1E930 VA: 0x1B1E930
	protected void StopSystemSeLocal() { }

	// RVA: 0x1B1EA98 Offset: 0x1B1EA98 VA: 0x1B1EA98
	protected void StopVoiceLocal(string assetName, string objectName, float fadeoutTime) { }

	// RVA: 0x1B1ED18 Offset: 0x1B1ED18 VA: 0x1B1ED18
	protected void StopVoiceAllLocal(float fadeoutTime) { }

	// RVA: 0x1B1EEB4 Offset: 0x1B1EEB4 VA: 0x1B1EEB4
	protected void ChangeVolumeSeLocal(string name, float volume, float fadeTime) { }

	// RVA: 0x1B1E850 Offset: 0x1B1E850 VA: 0x1B1E850
	protected void ChangeVolumeSeLocal(string assetName, string objectName, float volume, float fadeTime) { }

	// RVA: 0x1B1EFCC Offset: 0x1B1EFCC VA: 0x1B1EFCC
	protected void ChangeVolumeVoiceLocal(string assetName, string objectName, float volume, float fadeTime) { }

	// RVA: 0x1B1F0DC Offset: 0x1B1F0DC VA: 0x1B1F0DC
	protected void SetPitchSeLocal(string name, float pitch) { }

	// RVA: 0x1B1F1C8 Offset: 0x1B1F1C8 VA: 0x1B1F1C8
	protected float GetPitchSeLocal(string name) { }

	// RVA: 0x1B20814 Offset: 0x1B20814 VA: 0x1B20814
	protected void LateUpdate() { }

	// RVA: 0x1B21220 Offset: 0x1B21220 VA: 0x1B21220
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3746C Offset: 0xD3746C VA: 0xD3746C
	// RVA: 0x1B21374 Offset: 0x1B21374 VA: 0x1B21374
	private static string <LoadEndResidentSeAsset>m__0(string str) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3747C Offset: 0xD3747C VA: 0xD3747C
	// RVA: 0x1B213E8 Offset: 0x1B213E8 VA: 0x1B213E8
	private static string <LoadEndResidentSeAsset>m__1(string str) { }
}

// Namespace: 
private enum SeManager.SeType // TypeDefIndex: 6553
{
	// Fields
	public int value__; // 0x0
	public const SeManager.SeType RESIDENT_SE = 0;
	public const SeManager.SeType SE = 1;
}

// Namespace: 
public enum SeManager.SystemSeKind // TypeDefIndex: 6554
{
	// Fields
	public int value__; // 0x0
	public const SeManager.SystemSeKind BTN_COMMON = 0;
	public const SeManager.SystemSeKind BTN_CANCEL = 1;
	public const SeManager.SystemSeKind BTN_WARNING = 2;
	public const SeManager.SystemSeKind METER = 3;
	public const SeManager.SystemSeKind GET_ITEM = 4;
	public const SeManager.SystemSeKind LEVEL_UP = 5;
	public const SeManager.SystemSeKind STATUS_OPEN = 6;
	public const SeManager.SystemSeKind WINDOW_SLIDE = 7;
	public const SeManager.SystemSeKind BTN_DECIDE = 8;
	public const SeManager.SystemSeKind UNIOPEN = 9;
	public const SeManager.SystemSeKind UNICLOSE = 10;
	public const SeManager.SystemSeKind LOCK = 11;
}

// Namespace: 
public enum SeManager.CommonSeKind // TypeDefIndex: 6555
{
	// Fields
	public int value__; // 0x0
	public const SeManager.CommonSeKind BATTLE_NORMAL_WAVE_FADE_IN = 0;
	public const SeManager.CommonSeKind BATTLE_BOSS_WAVE_FADE_IN = 1;
	public const SeManager.CommonSeKind BATTLE_CHARGE_SKILL = 2;
	public const SeManager.CommonSeKind BATTLE_GAMEOVER = 3;
	public const SeManager.CommonSeKind BATTLE_SET_COMMAND_CARD = 4;
	public const SeManager.CommonSeKind BATTLE_OPEN_COMMAND_CARD = 5;
	public const SeManager.CommonSeKind BATTLE_DECIDE_COMMANDO_CARD = 6;
	public const SeManager.CommonSeKind BATTLE_CHANGE_CRITICAL = 7;
	public const SeManager.CommonSeKind BATTLE_CHARGE_NP = 8;
	public const SeManager.CommonSeKind BATTLE_BTN_COMMON = 9;
	public const SeManager.CommonSeKind BATTLE_BTN_CANCEL = 10;
	public const SeManager.CommonSeKind BATTLE_OPEN_STATUS = 11;
	public const SeManager.CommonSeKind BATTLE_CLOSE_STATUS = 12;
	public const SeManager.CommonSeKind BATTLE_ADD_EXTRA_CARD = 13;
	public const SeManager.CommonSeKind BATTLE_USE_NP = 14;
	public const SeManager.CommonSeKind BATTLE_INCREMENT_MERTER = 15;
	public const SeManager.CommonSeKind BATTLE_COUNT_UP_NUM = 16;
	public const SeManager.CommonSeKind AREA_OPEN_QUEST_SPOT = 17;
	public const SeManager.CommonSeKind AREA_BTN_DISE = 18;
	public const SeManager.CommonSeKind COMBINE = 19;
	public const SeManager.CommonSeKind MISSION_POP_BAR = 20;
	public const SeManager.CommonSeKind TEST_SE = 21;
	public const SeManager.CommonSeKind WORLD_MOVE_MAP_PT1 = 22;
	public const SeManager.CommonSeKind WORLD_MOVE_MAP_PT2 = 23;
	public const SeManager.CommonSeKind BATTLE_SKILL_SHIFT = 24;
	public const SeManager.CommonSeKind BATTLE_DECIDE_ORDER_1 = 25;
	public const SeManager.CommonSeKind BATTLE_DECIDE_ORDER_2 = 26;
	public const SeManager.CommonSeKind BATTLE_ERROR_ORDER = 27;
	public const SeManager.CommonSeKind AREA_DECIDE_TITLE_WAR_BOARD = 28;
	public const SeManager.CommonSeKind EVENT_CONQUEST_GET_SE = 29;
}

// Namespace: 
public class SePlayer // TypeDefIndex: 6556
{
	// Fields
	protected SePlayer.SeType seType; // 0x10
	protected int playNum; // 0x14
	protected string cueSheetName; // 0x18
	protected string objName; // 0x20
	protected bool isStop; // 0x28
	protected bool isLoop; // 0x29
	protected bool isLoading; // 0x2A
	protected bool isWaitSource; // 0x2B
	protected bool notOverwrite; // 0x2C
	protected float volume; // 0x30
	protected CriAtomSource source; // 0x38
	protected Action callbackFunc; // 0x40
	protected float fadeBaseVolume; // 0x48
	protected float fadeChangeVolume; // 0x4C
	protected float playTime; // 0x50
	protected float fadeinTime; // 0x54
	protected float fadeoutTime; // 0x58
	protected float pitchValue; // 0x5C
	protected bool changePitchRequest; // 0x60

	// Properties
	public SePlayer.SeType Type { get; }
	public int PlayNum { get; }
	public string AssetName { get; }
	public string DataName { get; }
	public bool IsBusy { get; }
	public bool IsLoop { get; }
	public bool IsPause { get; }
	public float Pitch { get; set; }

	// Methods

	// RVA: 0x1B20500 Offset: 0x1B20500 VA: 0x1B20500
	public void .ctor(int num, SePlayer.SeType type, AssetData.Type assetType, string pathName, string name, float volume, bool isLoop, float fadeinTime, Action callbackFunc, bool notOverwrite = False) { }

	// RVA: 0x1B1F410 Offset: 0x1B1F410 VA: 0x1B1F410
	public SePlayer.SeType get_Type() { }

	// RVA: 0x1B1FE64 Offset: 0x1B1FE64 VA: 0x1B1FE64
	public int get_PlayNum() { }

	// RVA: 0x1B200B0 Offset: 0x1B200B0 VA: 0x1B200B0
	public string get_AssetName() { }

	// RVA: 0x1B1FF70 Offset: 0x1B1FF70 VA: 0x1B1FF70
	public string get_DataName() { }

	// RVA: 0x1B2031C Offset: 0x1B2031C VA: 0x1B2031C
	public bool get_IsBusy() { }

	// RVA: 0x1B21518 Offset: 0x1B21518 VA: 0x1B21518
	public bool get_IsLoop() { }

	// RVA: 0x1B20A30 Offset: 0x1B20A30 VA: 0x1B20A30
	public bool get_IsPause() { }

	// RVA: 0x1B1F418 Offset: 0x1B1F418 VA: 0x1B1F418
	public void SetPause(bool isPause) { }

	// RVA: 0x1B2145C Offset: 0x1B2145C VA: 0x1B2145C
	protected float GetBaseVolume() { }

	// RVA: 0x1B215B8 Offset: 0x1B215B8 VA: 0x1B215B8
	public void Destroy() { }

	// RVA: 0x1B2165C Offset: 0x1B2165C VA: 0x1B2165C
	public void RemoveCallback(Action callbackFunc) { }

	// RVA: 0x1B211E8 Offset: 0x1B211E8 VA: 0x1B211E8
	public void Callback() { }

	// RVA: 0x1B1F984 Offset: 0x1B1F984 VA: 0x1B1F984
	public void StopSe(float fadeoutTime = 0) { }

	// RVA: 0x1B2068C Offset: 0x1B2068C VA: 0x1B2068C
	public bool ChangeVolume(float volume, float fadeTime) { }

	// RVA: 0x1B1F57C Offset: 0x1B1F57C VA: 0x1B1F57C
	public void MuteSe() { }

	// RVA: 0x1B20AD0 Offset: 0x1B20AD0 VA: 0x1B20AD0
	public bool Update(float delta) { }

	// RVA: 0x1B207FC Offset: 0x1B207FC VA: 0x1B207FC
	public void set_Pitch(float value) { }

	// RVA: 0x1B2080C Offset: 0x1B2080C VA: 0x1B2080C
	public float get_Pitch() { }
}

// Namespace: 
public enum SePlayer.SeType // TypeDefIndex: 6557
{
	// Fields
	public int value__; // 0x0
	public const SePlayer.SeType NORMAL = 0;
	public const SePlayer.SeType VOICE = 1;
}

// Namespace: 
public class SingletonMonoBehaviour<T> : MonoBehaviour // TypeDefIndex: 6558
{
	// Fields
	private static T instance; // 0x0

	// Properties
	public static T Instance { get; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24DD28C Offset: 0x24DD28C VA: 0x24DD28C
	|-SingletonMonoBehaviour<AccountingManager>..ctor
	|-SingletonMonoBehaviour<AdManager>..ctor
	|-SingletonMonoBehaviour<AndroidBackKeyManager>..ctor
	|-SingletonMonoBehaviour<AssetManager>..ctor
	|-SingletonMonoBehaviour<AtlasManager>..ctor
	|-SingletonMonoBehaviour<AutomatedAction>..ctor
	|-SingletonMonoBehaviour<AvalonNotificationManager>..ctor
	|-SingletonMonoBehaviour<AvalonSceneManager>..ctor
	|-SingletonMonoBehaviour<BattleChrManager>..ctor
	|-SingletonMonoBehaviour<BattleLogicDebug>..ctor
	|-SingletonMonoBehaviour<BattleRandom>..ctor
	|-SingletonMonoBehaviour<BattleSeManager>..ctor
	|-SingletonMonoBehaviour<BattleSequenceManager>..ctor
	|-SingletonMonoBehaviour<BgmManager>..ctor
	|-SingletonMonoBehaviour<BillBoardGroupManager>..ctor
	|-SingletonMonoBehaviour<CharaGraphManager>..ctor
	|-SingletonMonoBehaviour<CommandSpellIconManager>..ctor
	|-SingletonMonoBehaviour<CommonEffectManager>..ctor
	|-SingletonMonoBehaviour<CommonUI>..ctor
	|-SingletonMonoBehaviour<DataManager>..ctor
	|-SingletonMonoBehaviour<DesignCardManager>..ctor
	|-SingletonMonoBehaviour<DisplayPrint>..ctor
	|-SingletonMonoBehaviour<EndrolEffectManager>..ctor
	|-SingletonMonoBehaviour<FGOSequenceManager>..ctor
	|-SingletonMonoBehaviour<FSUtility>..ctor
	|-SingletonMonoBehaviour<FlashingIconManager>..ctor
	|-SingletonMonoBehaviour<LocalizationManager>..ctor
	|-SingletonMonoBehaviour<MainMenuBar>..ctor
	|-SingletonMonoBehaviour<ManagementManager>..ctor
	|-SingletonMonoBehaviour<MasterFaceManager>..ctor
	|-SingletonMonoBehaviour<MasterFigureManagerOld>..ctor
	|-SingletonMonoBehaviour<MasterFullFigureManager>..ctor
	|-SingletonMonoBehaviour<NetworkManager>..ctor
	|-SingletonMonoBehaviour<OptionManager>..ctor
	|-SingletonMonoBehaviour<OuterFrameController>..ctor
	|-SingletonMonoBehaviour<ProgramEffectManager>..ctor
	|-SingletonMonoBehaviour<QuestAfterAction>..ctor
	|-SingletonMonoBehaviour<SafetyNetManager>..ctor
	|-SingletonMonoBehaviour<ScriptManager>..ctor
	|-SingletonMonoBehaviour<SeManager>..ctor
	|-SingletonMonoBehaviour<ServantAssetLoadManager>..ctor
	|-SingletonMonoBehaviour<ShiningIconManager>..ctor
	|-SingletonMonoBehaviour<SoundManager>..ctor
	|-SingletonMonoBehaviour<Spawner>..ctor
	|-SingletonMonoBehaviour<StandFigureManager>..ctor
	|-SingletonMonoBehaviour<StateLog>..ctor
	|-SingletonMonoBehaviour<SummonAssetManager>..ctor
	|-SingletonMonoBehaviour<SwitchParameterDisplayManager>..ctor
	|-SingletonMonoBehaviour<object>..ctor
	|-SingletonMonoBehaviour<TestManager>..ctor
	|-SingletonMonoBehaviour<TouchEffectManager>..ctor
	|-SingletonMonoBehaviour<UIRectUpdater>..ctor
	|-SingletonMonoBehaviour<WarBoardManager>..ctor
	|-SingletonMonoBehaviour<WebViewManager>..ctor
	*/

	// RVA: -1 Offset: -1
	public static T get_Instance() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24DD2B8 Offset: 0x24DD2B8 VA: 0x24DD2B8
	|-SingletonMonoBehaviour<AccountingManager>.get_Instance
	|-SingletonMonoBehaviour<AdManager>.get_Instance
	|-SingletonMonoBehaviour<AndroidBackKeyManager>.get_Instance
	|-SingletonMonoBehaviour<AssetManager>.get_Instance
	|-SingletonMonoBehaviour<AtlasManager>.get_Instance
	|-SingletonMonoBehaviour<AutomatedAction>.get_Instance
	|-SingletonMonoBehaviour<AvalonNotificationManager>.get_Instance
	|-SingletonMonoBehaviour<AvalonSceneManager>.get_Instance
	|-SingletonMonoBehaviour<BattleChrManager>.get_Instance
	|-SingletonMonoBehaviour<BattleSeManager>.get_Instance
	|-SingletonMonoBehaviour<BattleSequenceManager>.get_Instance
	|-SingletonMonoBehaviour<BgmManager>.get_Instance
	|-SingletonMonoBehaviour<BillBoardGroupManager>.get_Instance
	|-SingletonMonoBehaviour<CharaGraphManager>.get_Instance
	|-SingletonMonoBehaviour<CommonEffectManager>.get_Instance
	|-SingletonMonoBehaviour<CommonUI>.get_Instance
	|-SingletonMonoBehaviour<DataManager>.get_Instance
	|-SingletonMonoBehaviour<DesignCardManager>.get_Instance
	|-SingletonMonoBehaviour<FGOSequenceManager>.get_Instance
	|-SingletonMonoBehaviour<FSUtility>.get_Instance
	|-SingletonMonoBehaviour<FlashingIconManager>.get_Instance
	|-SingletonMonoBehaviour<LocalizationManager>.get_Instance
	|-SingletonMonoBehaviour<MainMenuBar>.get_Instance
	|-SingletonMonoBehaviour<ManagementManager>.get_Instance
	|-SingletonMonoBehaviour<MasterFaceManager>.get_Instance
	|-SingletonMonoBehaviour<MasterFigureManagerOld>.get_Instance
	|-SingletonMonoBehaviour<MasterFullFigureManager>.get_Instance
	|-SingletonMonoBehaviour<NetworkManager>.get_Instance
	|-SingletonMonoBehaviour<ProgramEffectManager>.get_Instance
	|-SingletonMonoBehaviour<QuestAfterAction>.get_Instance
	|-SingletonMonoBehaviour<ScriptManager>.get_Instance
	|-SingletonMonoBehaviour<SeManager>.get_Instance
	|-SingletonMonoBehaviour<ServantAssetLoadManager>.get_Instance
	|-SingletonMonoBehaviour<SoundManager>.get_Instance
	|-SingletonMonoBehaviour<Spawner>.get_Instance
	|-SingletonMonoBehaviour<StandFigureManager>.get_Instance
	|-SingletonMonoBehaviour<SummonAssetManager>.get_Instance
	|-SingletonMonoBehaviour<SwitchParameterDisplayManager>.get_Instance
	|-SingletonMonoBehaviour<object>.get_Instance
	|-SingletonMonoBehaviour<TouchEffectManager>.get_Instance
	|-SingletonMonoBehaviour<WarBoardManager>.get_Instance
	|-SingletonMonoBehaviour<WebViewManager>.get_Instance
	*/

	// RVA: -1 Offset: -1
	protected void Awake() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24DD520 Offset: 0x24DD520 VA: 0x24DD520
	|-SingletonMonoBehaviour<CommonUI>.Awake
	|-SingletonMonoBehaviour<FGOSequenceManager>.Awake
	|-SingletonMonoBehaviour<Spawner>.Awake
	|-SingletonMonoBehaviour<object>.Awake
	|-SingletonMonoBehaviour<TestManager>.Awake
	*/

	// RVA: -1 Offset: -1
	public static T getInstance() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24DD55C Offset: 0x24DD55C VA: 0x24DD55C
	|-SingletonMonoBehaviour<AssetManager>.getInstance
	|-SingletonMonoBehaviour<AtlasManager>.getInstance
	|-SingletonMonoBehaviour<AvalonSceneManager>.getInstance
	|-SingletonMonoBehaviour<BattleRandom>.getInstance
	|-SingletonMonoBehaviour<CommonUI>.getInstance
	|-SingletonMonoBehaviour<DataManager>.getInstance
	|-SingletonMonoBehaviour<ManagementManager>.getInstance
	|-SingletonMonoBehaviour<QuestAfterAction>.getInstance
	|-SingletonMonoBehaviour<Spawner>.getInstance
	|-SingletonMonoBehaviour<object>.getInstance
	|-SingletonMonoBehaviour<TouchEffectManager>.getInstance
	|-SingletonMonoBehaviour<UIRectUpdater>.getInstance
	|-SingletonMonoBehaviour<WarBoardManager>.getInstance
	*/

	// RVA: -1 Offset: -1
	protected bool CheckInstance() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x24DD5A8 Offset: 0x24DD5A8 VA: 0x24DD5A8
	|-SingletonMonoBehaviour<ManagementManager>.CheckInstance
	|-SingletonMonoBehaviour<object>.CheckInstance
	|-SingletonMonoBehaviour<WarBoardManager>.CheckInstance
	*/
}

// Namespace: 
public class SoundManager : SingletonMonoBehaviour<SoundManager> // TypeDefIndex: 6559
{
	// Fields
	public static readonly float DEFAULT_VOLUME; // 0x0
	public static readonly string RESIDENT_RESOURCE_SOUND_NAME; // 0x8
	[SerializeField] // RVA: 0xCC117C Offset: 0xCC117C VA: 0xCC117C
	protected CriAtom criware; // 0x18
	[SerializeField] // RVA: 0xCC118C Offset: 0xCC118C VA: 0xCC118C
	protected CriWareInitializer initializer; // 0x20
	protected Dictionary<string, SoundManager.CpkLoader> SoundCpkLoader; // 0x28
	protected Dictionary<string, CriFsBinder> SoundBinders; // 0x30
	protected Dictionary<string, int> assetNameCounter; // 0x38
	protected bool isBusy; // 0x40

	// Properties
	public CriAtom CriwareComp { get; }
	public CriWareInitializer Initializer { get; }
	public bool IsBusy { get; }

	// Methods

	// RVA: 0x1CF7E28 Offset: 0x1CF7E28 VA: 0x1CF7E28
	public void .ctor() { }

	// RVA: 0x1CF1888 Offset: 0x1CF1888 VA: 0x1CF1888
	public CriAtom get_CriwareComp() { }

	// RVA: 0x1CF7EA8 Offset: 0x1CF7EA8 VA: 0x1CF7EA8
	public CriWareInitializer get_Initializer() { }

	// RVA: 0x1CF7EB0 Offset: 0x1CF7EB0 VA: 0x1CF7EB0
	public string GetCueSheet(string cueName) { }

	// RVA: 0x1CF7FBC Offset: 0x1CF7FBC VA: 0x1CF7FBC
	public string[] GetCueList(string cueSheetName) { }

	// RVA: 0x1CF81CC Offset: 0x1CF81CC VA: 0x1CF81CC
	public CriAtomEx.CueInfo[] GetCueInfoList(string cueSheetName) { }

	// RVA: 0x1CF831C Offset: 0x1CF831C VA: 0x1CF831C
	public CriAtomEx.CueInfo GetCueInfo(string cueSheetName, string cueName) { }

	// RVA: 0x1CF8460 Offset: 0x1CF8460 VA: 0x1CF8460
	public bool get_IsBusy() { }

	// RVA: 0x1CF8504 Offset: 0x1CF8504 VA: 0x1CF8504
	public static void reboot() { }

