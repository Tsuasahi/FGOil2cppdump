	// RVA: 0x11FF6C4 Offset: 0x11FF6C4 VA: 0x11FF6C4
	public string get_AppId() { }

	[CompilerGeneratedAttribute] // RVA: 0xC83524 Offset: 0xC83524 VA: 0xC83524
	// RVA: 0x11FF250 Offset: 0x11FF250 VA: 0x11FF250
	public void set_AppId(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC83534 Offset: 0xC83534 VA: 0xC83534
	// RVA: 0x11FF6CC Offset: 0x11FF6CC VA: 0x11FF6CC
	public string get_ApiKey() { }

	[CompilerGeneratedAttribute] // RVA: 0xC83544 Offset: 0xC83544 VA: 0xC83544
	// RVA: 0x11FF330 Offset: 0x11FF330 VA: 0x11FF330
	public void set_ApiKey(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC83554 Offset: 0xC83554 VA: 0xC83554
	// RVA: 0x11FF6D4 Offset: 0x11FF6D4 VA: 0x11FF6D4
	public string get_MessageSenderId() { }

	[CompilerGeneratedAttribute] // RVA: 0xC83564 Offset: 0xC83564 VA: 0xC83564
	// RVA: 0x11FF410 Offset: 0x11FF410 VA: 0x11FF410
	public void set_MessageSenderId(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC83574 Offset: 0xC83574 VA: 0xC83574
	// RVA: 0x11FF6DC Offset: 0x11FF6DC VA: 0x11FF6DC
	public string get_StorageBucket() { }

	[CompilerGeneratedAttribute] // RVA: 0xC83584 Offset: 0xC83584 VA: 0xC83584
	// RVA: 0x11FF4F0 Offset: 0x11FF4F0 VA: 0x11FF4F0
	public void set_StorageBucket(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC83594 Offset: 0xC83594 VA: 0xC83594
	// RVA: 0x11FF6E4 Offset: 0x11FF6E4 VA: 0x11FF6E4
	public string get_ProjectId() { }

	[CompilerGeneratedAttribute] // RVA: 0xC835A4 Offset: 0xC835A4 VA: 0xC835A4
	// RVA: 0x11FF5D0 Offset: 0x11FF5D0 VA: 0x11FF5D0
	public void set_ProjectId(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC835B4 Offset: 0xC835B4 VA: 0xC835B4
	// RVA: 0x11FF6EC Offset: 0x11FF6EC VA: 0x11FF6EC
	internal string get_PackageName() { }

	[CompilerGeneratedAttribute] // RVA: 0xC835C4 Offset: 0xC835C4 VA: 0xC835C4
	// RVA: 0x11FF6B0 Offset: 0x11FF6B0 VA: 0x11FF6B0
	internal void set_PackageName(string value) { }

	// RVA: 0x11FF6F4 Offset: 0x11FF6F4 VA: 0x11FF6F4
	public static AppOptions LoadFromJsonConfig(string jsonConfig) { }

	// RVA: 0x11FF86C Offset: 0x11FF86C VA: 0x11FF86C
	internal AppOptionsInternal ConvertToInternal() { }
}

// Namespace: 
internal class <Module> // TypeDefIndex: 3249
{}

// Namespace: 
[Serializable]
public class FsmTemplate : ScriptableObject // TypeDefIndex: 3250
{
	// Fields
	[SerializeField] // RVA: 0xC8436C Offset: 0xC8436C VA: 0xC8436C
	[DelayedAttribute] // RVA: 0xC8436C Offset: 0xC8436C VA: 0xC8436C
	private string category; // 0x18
	public Fsm fsm; // 0x20

	// Properties
	public string Category { get; set; }

	// Methods

	// RVA: 0xE179DC Offset: 0xE179DC VA: 0xE179DC
	public string get_Category() { }

	// RVA: 0xE179E4 Offset: 0xE179E4 VA: 0xE179E4
	public void set_Category(string value) { }

	// RVA: 0xE179EC Offset: 0xE179EC VA: 0xE179EC
	public void OnEnable() { }

	// RVA: 0xE17A04 Offset: 0xE17A04 VA: 0xE17A04
	public void .ctor() { }
}

// Namespace: 
public class PlayMakerPrefs : ScriptableObject // TypeDefIndex: 3251
{
	// Fields
	private static PlayMakerPrefs instance; // 0x0
	private static readonly Color[] defaultColors; // 0x8
	private static readonly string[] defaultColorNames; // 0x10
	[TooltipAttribute] // RVA: 0xC843A4 Offset: 0xC843A4 VA: 0xC843A4
	[SerializeField] // RVA: 0xC843A4 Offset: 0xC843A4 VA: 0xC843A4
	private bool logPerformanceWarnings; // 0x18
	[TooltipAttribute] // RVA: 0xC843F0 Offset: 0xC843F0 VA: 0xC843F0
	[SerializeField] // RVA: 0xC843F0 Offset: 0xC843F0 VA: 0xC843F0
	private bool showEventHandlerComponents; // 0x19
	[TooltipAttribute] // RVA: 0xC8443C Offset: 0xC8443C VA: 0xC8443C
	[SerializeField] // RVA: 0xC8443C Offset: 0xC8443C VA: 0xC8443C
	private Color[] colors; // 0x20
	[TooltipAttribute] // RVA: 0xC84488 Offset: 0xC84488 VA: 0xC84488
	[SerializeField] // RVA: 0xC84488 Offset: 0xC84488 VA: 0xC84488
	private string[] colorNames; // 0x28
	[SerializeField] // RVA: 0xC844D4 Offset: 0xC844D4 VA: 0xC844D4
	private Color tweenFromColor; // 0x30
	[SerializeField] // RVA: 0xC844E4 Offset: 0xC844E4 VA: 0xC844E4
	private Color tweenToColor; // 0x40
	private static Color[] minimapColors; // 0x18

	// Properties
	public static PlayMakerPrefs Instance { get; }
	public static bool LogPerformanceWarnings { get; set; }
	public static bool ShowEventHandlerComponents { get; set; }
	public static Color TweenFromColor { get; set; }
	public static Color TweenToColor { get; set; }
	public static Color[] Colors { get; set; }
	public static string[] ColorNames { get; set; }
	public static Color[] MinimapColors { get; }

	// Methods

	// RVA: 0xFD4FF4 Offset: 0xFD4FF4 VA: 0xFD4FF4
	public static PlayMakerPrefs get_Instance() { }

	// RVA: 0xFCE5AC Offset: 0xFCE5AC VA: 0xFCE5AC
	public static bool get_LogPerformanceWarnings() { }

	// RVA: 0xFD51A8 Offset: 0xFD51A8 VA: 0xFD51A8
	public static void set_LogPerformanceWarnings(bool value) { }

	// RVA: 0xFD5220 Offset: 0xFD5220 VA: 0xFD5220
	public static bool get_ShowEventHandlerComponents() { }

	// RVA: 0xFD5290 Offset: 0xFD5290 VA: 0xFD5290
	public static void set_ShowEventHandlerComponents(bool value) { }

	// RVA: 0xFD5308 Offset: 0xFD5308 VA: 0xFD5308
	public static Color get_TweenFromColor() { }

	// RVA: 0xFD537C Offset: 0xFD537C VA: 0xFD537C
	public static void set_TweenFromColor(Color value) { }

	// RVA: 0xFD5410 Offset: 0xFD5410 VA: 0xFD5410
	public static Color get_TweenToColor() { }

	// RVA: 0xFD5484 Offset: 0xFD5484 VA: 0xFD5484
	public static void set_TweenToColor(Color value) { }

	// RVA: 0xFD213C Offset: 0xFD213C VA: 0xFD213C
	public static Color[] get_Colors() { }

	// RVA: 0xFD5518 Offset: 0xFD5518 VA: 0xFD5518
	public static void set_Colors(Color[] value) { }

	// RVA: 0xFD558C Offset: 0xFD558C VA: 0xFD558C
	public static string[] get_ColorNames() { }

	// RVA: 0xFD55FC Offset: 0xFD55FC VA: 0xFD55FC
	public static void set_ColorNames(string[] value) { }

	// RVA: 0xFD5670 Offset: 0xFD5670 VA: 0xFD5670
	public void ResetDefaultColors() { }

	// RVA: 0xFD58DC Offset: 0xFD58DC VA: 0xFD58DC
	public static Color[] get_MinimapColors() { }

	// RVA: 0xFD5B30 Offset: 0xFD5B30 VA: 0xFD5B30
	public static void SaveChanges() { }

	// RVA: 0xFD5984 Offset: 0xFD5984 VA: 0xFD5984
	private static void UpdateMinimapColors() { }

	// RVA: 0xFD5B8C Offset: 0xFD5B8C VA: 0xFD5B8C
	public void .ctor() { }

	// RVA: 0xFD6AB4 Offset: 0xFD6AB4 VA: 0xFD6AB4
	private static void .cctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83A70 Offset: 0xC83A70 VA: 0xC83A70
public class PlayMakerAnimatorIK : PlayMakerProxyBase // TypeDefIndex: 3252
{
	// Methods

	// RVA: 0xFCBF40 Offset: 0xFCBF40 VA: 0xFCBF40
	public void OnAnimatorIK(int layerIndex) { }

	// RVA: 0xFCC138 Offset: 0xFCC138 VA: 0xFCC138
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83AA8 Offset: 0xC83AA8 VA: 0xC83AA8
public class PlayMakerAnimatorMove : PlayMakerProxyBase // TypeDefIndex: 3253
{
	// Methods

	// RVA: 0xFCC1AC Offset: 0xFCC1AC VA: 0xFCC1AC
	public void OnAnimatorMove() { }

	// RVA: 0xFCC32C Offset: 0xFCC32C VA: 0xFCC32C
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83AE0 Offset: 0xC83AE0 VA: 0xC83AE0
public class PlayMakerApplicationEvents : PlayMakerProxyBase // TypeDefIndex: 3254
{
	// Methods

	// RVA: 0xFCC330 Offset: 0xFCC330 VA: 0xFCC330
	public void OnApplicationFocus() { }

	// RVA: 0xFCC4D0 Offset: 0xFCC4D0 VA: 0xFCC4D0
	public void OnApplicationPause() { }

	// RVA: 0xFCC670 Offset: 0xFCC670 VA: 0xFCC670
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83B18 Offset: 0xC83B18 VA: 0xC83B18
public class PlayMakerCollisionEnter : PlayMakerProxyBase // TypeDefIndex: 3255
{
	// Methods

	// RVA: 0xFCC674 Offset: 0xFCC674 VA: 0xFCC674
	public void OnCollisionEnter(Collision collisionInfo) { }

	// RVA: 0xFCC838 Offset: 0xFCC838 VA: 0xFCC838
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83B50 Offset: 0xC83B50 VA: 0xC83B50
public class PlayMakerCollisionEnter2D : PlayMakerProxyBase // TypeDefIndex: 3256
{
	// Methods

	// RVA: 0xFCC83C Offset: 0xFCC83C VA: 0xFCC83C
	public void OnCollisionEnter2D(Collision2D collisionInfo) { }

	// RVA: 0xFCCA00 Offset: 0xFCCA00 VA: 0xFCCA00
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83B88 Offset: 0xC83B88 VA: 0xC83B88
public class PlayMakerCollisionExit : PlayMakerProxyBase // TypeDefIndex: 3257
{
	// Methods

	// RVA: 0xFCCA04 Offset: 0xFCCA04 VA: 0xFCCA04
	public void OnCollisionExit(Collision collisionInfo) { }

	// RVA: 0xFCCBB4 Offset: 0xFCCBB4 VA: 0xFCCBB4
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83BC0 Offset: 0xC83BC0 VA: 0xC83BC0
public class PlayMakerCollisionExit2D : PlayMakerProxyBase // TypeDefIndex: 3258
{
	// Methods

	// RVA: 0xFCCBB8 Offset: 0xFCCBB8 VA: 0xFCCBB8
	public void OnCollisionExit2D(Collision2D collisionInfo) { }

	// RVA: 0xFCCD68 Offset: 0xFCCD68 VA: 0xFCCD68
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83BF8 Offset: 0xC83BF8 VA: 0xC83BF8
public class PlayMakerCollisionStay : PlayMakerProxyBase // TypeDefIndex: 3259
{
	// Methods

	// RVA: 0xFCCD6C Offset: 0xFCCD6C VA: 0xFCCD6C
	public void OnCollisionStay(Collision collisionInfo) { }

	// RVA: 0xFCCF1C Offset: 0xFCCF1C VA: 0xFCCF1C
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83C30 Offset: 0xC83C30 VA: 0xC83C30
public class PlayMakerCollisionStay2D : PlayMakerProxyBase // TypeDefIndex: 3260
{
	// Methods

	// RVA: 0xFCCF20 Offset: 0xFCCF20 VA: 0xFCCF20
	public void OnCollisionStay2D(Collision2D collisionInfo) { }

	// RVA: 0xFCD0D0 Offset: 0xFCD0D0 VA: 0xFCD0D0
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83C68 Offset: 0xC83C68 VA: 0xC83C68
public class PlayMakerControllerColliderHit : PlayMakerProxyBase // TypeDefIndex: 3261
{
	// Methods

	// RVA: 0xFCD0D4 Offset: 0xFCD0D4 VA: 0xFCD0D4
	public void OnControllerColliderHit(ControllerColliderHit hitCollider) { }

	// RVA: 0xFCD298 Offset: 0xFCD298 VA: 0xFCD298
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83CA0 Offset: 0xC83CA0 VA: 0xC83CA0
public class PlayMakerFixedUpdate : PlayMakerProxyBase // TypeDefIndex: 3262
{
	// Methods

	// RVA: 0xFCFEE0 Offset: 0xFCFEE0 VA: 0xFCFEE0
	public void FixedUpdate() { }

	// RVA: 0xFD0060 Offset: 0xFD0060 VA: 0xFD0060
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83CD8 Offset: 0xC83CD8 VA: 0xC83CD8
public class PlayMakerLateUpdate : PlayMakerProxyBase // TypeDefIndex: 3263
{
	// Methods

	// RVA: 0xFD3DB0 Offset: 0xFD3DB0 VA: 0xFD3DB0
	public void LateUpdate() { }

	// RVA: 0xFD3F30 Offset: 0xFD3F30 VA: 0xFD3F30
	public void .ctor() { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83D10 Offset: 0xC83D10 VA: 0xC83D10
public class PlayMakerFSM : MonoBehaviour, ISerializationCallbackReceiver // TypeDefIndex: 3264
{
	// Fields
	private static readonly List<PlayMakerFSM> fsmList; // 0x0
	public static bool MaximizeFileCompatibility; // 0x8
	public static bool ApplicationIsQuitting; // 0x9
	public static bool NotMainThread; // 0xA
	[SerializeField] // RVA: 0xC844F4 Offset: 0xC844F4 VA: 0xC844F4
	private Fsm fsm; // 0x18
	[SerializeField] // RVA: 0xC84504 Offset: 0xC84504 VA: 0xC84504
	private FsmTemplate fsmTemplate; // 0x20
	[SerializeField] // RVA: 0xC84514 Offset: 0xC84514 VA: 0xC84514
	private bool eventHandlerComponentsAdded; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC84524 Offset: 0xC84524 VA: 0xC84524
	private static bool <DrawGizmos>k__BackingField; // 0xB
	private PlayMakerFSM.AddEventHandlerDelegate addEventHandlers; // 0x30
	private GUITexture _guiTexture; // 0x38
	private GUIText _guiText; // 0x40

	// Properties
	public static string VersionNotes { get; }
	public static string VersionLabel { get; }
	public static List<PlayMakerFSM> FsmList { get; }
	public FsmTemplate FsmTemplate { get; }
	public static bool DrawGizmos { get; set; }
	private PlayMakerFSM.AddEventHandlerDelegate AddEventHandlers { get; }
	public GUITexture GuiTexture { get; }
	public GUIText GuiText { get; }
	public Fsm Fsm { get; }
	public string FsmName { get; set; }
	public string FsmDescription { get; set; }
	public bool Active { get; }
	public string ActiveStateName { get; }
	public FsmState[] FsmStates { get; }
	public FsmEvent[] FsmEvents { get; }
	public FsmTransition[] FsmGlobalTransitions { get; }
	public FsmVariables FsmVariables { get; }
	public bool UsesTemplate { get; }

	// Methods

	// RVA: 0xFCD29C Offset: 0xFCD29C VA: 0xFCD29C
	public static string get_VersionNotes() { }

	// RVA: 0xFCD2E4 Offset: 0xFCD2E4 VA: 0xFCD2E4
	public static string get_VersionLabel() { }

	// RVA: 0xFCD32C Offset: 0xFCD32C VA: 0xFCD32C
	public static List<PlayMakerFSM> get_FsmList() { }

	// RVA: 0xFCD394 Offset: 0xFCD394 VA: 0xFCD394
	public static PlayMakerFSM FindFsmOnGameObject(GameObject go, string fsmName) { }

	// RVA: 0xFCD5C4 Offset: 0xFCD5C4 VA: 0xFCD5C4
	public FsmTemplate get_FsmTemplate() { }

	[CompilerGeneratedAttribute] // RVA: 0xC85774 Offset: 0xC85774 VA: 0xC85774
	// RVA: 0xFCD5CC Offset: 0xFCD5CC VA: 0xFCD5CC
	public static bool get_DrawGizmos() { }

	[CompilerGeneratedAttribute] // RVA: 0xC85784 Offset: 0xC85784 VA: 0xC85784
	// RVA: 0xFCD634 Offset: 0xFCD634 VA: 0xFCD634
	public static void set_DrawGizmos(bool value) { }

	// RVA: 0xFCD6A4 Offset: 0xFCD6A4 VA: 0xFCD6A4
	public void Reset() { }

	// RVA: 0xFCD72C Offset: 0xFCD72C VA: 0xFCD72C
	private void Awake() { }

	// RVA: 0xFCDC78 Offset: 0xFCDC78 VA: 0xFCDC78
	public void Preprocess() { }

	// RVA: 0xFCDB28 Offset: 0xFCDB28 VA: 0xFCDB28
	private void Init() { }

	// RVA: 0xFCDD28 Offset: 0xFCDD28 VA: 0xFCDD28
	private void InitTemplate() { }

	// RVA: 0xFCDEEC Offset: 0xFCDEEC VA: 0xFCDEEC
	private void InitFsm() { }

	// RVA: 0xFCDF90 Offset: 0xFCDF90 VA: 0xFCDF90
	public void AddEventHandlerComponents() { }

	// RVA: 0xFCE61C Offset: 0xFCE61C VA: 0xFCE61C
	private PlayMakerFSM.AddEventHandlerDelegate get_AddEventHandlers() { }

	// RVA: -1 Offset: -1
	private void AddEventHandlerComponent<T>() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x21D1328 Offset: 0x21D1328 VA: 0x21D1328
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerAnimatorIK>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerAnimatorMove>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerApplicationEvents>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerCollisionEnter2D>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerCollisionEnter>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerCollisionExit2D>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerCollisionExit>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerCollisionStay2D>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerCollisionStay>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerControllerColliderHit>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerFixedUpdate>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerJointBreak>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerLateUpdate>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerMouseEvents>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerParticleCollision>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerTriggerEnter2D>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerTriggerEnter>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerTriggerExit2D>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerTriggerExit>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerTriggerStay2D>
	|-PlayMakerFSM.AddEventHandlerComponent<PlayMakerTriggerStay>
	|-PlayMakerFSM.AddEventHandlerComponent<object>
	*/

	// RVA: -1 Offset: -1
	public static T GetEventHandlerComponent<T>(GameObject go) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218FE84 Offset: 0x218FE84 VA: 0x218FE84
	|-PlayMakerFSM.GetEventHandlerComponent<PlayMakerCollisionEnter2D>
	|-PlayMakerFSM.GetEventHandlerComponent<PlayMakerCollisionEnter>
	|-PlayMakerFSM.GetEventHandlerComponent<PlayMakerCollisionExit2D>
	|-PlayMakerFSM.GetEventHandlerComponent<PlayMakerCollisionExit>
	|-PlayMakerFSM.GetEventHandlerComponent<PlayMakerCollisionStay2D>
	|-PlayMakerFSM.GetEventHandlerComponent<PlayMakerCollisionStay>
	|-PlayMakerFSM.GetEventHandlerComponent<PlayMakerControllerColliderHit>
	|-PlayMakerFSM.GetEventHandlerComponent<PlayMakerParticleCollision>
	|-PlayMakerFSM.GetEventHandlerComponent<PlayMakerTriggerEnter2D>
	|-PlayMakerFSM.GetEventHandlerComponent<PlayMakerTriggerEnter>
	|-PlayMakerFSM.GetEventHandlerComponent<PlayMakerTriggerExit2D>
	|-PlayMakerFSM.GetEventHandlerComponent<PlayMakerTriggerExit>
	|-PlayMakerFSM.GetEventHandlerComponent<PlayMakerTriggerStay2D>
	|-PlayMakerFSM.GetEventHandlerComponent<PlayMakerTriggerStay>
	|-PlayMakerFSM.GetEventHandlerComponent<object>
	*/

	// RVA: 0xFCEB18 Offset: 0xFCEB18 VA: 0xFCEB18
	public void SetFsmTemplate(FsmTemplate template) { }

	// RVA: 0xFCEC3C Offset: 0xFCEC3C VA: 0xFCEC3C
	public GUITexture get_GuiTexture() { }

	// RVA: 0xFCECD4 Offset: 0xFCECD4 VA: 0xFCECD4
	public GUIText get_GuiText() { }

	// RVA: 0xFCED6C Offset: 0xFCED6C VA: 0xFCED6C
	private void Start() { }

	// RVA: 0xFCEDCC Offset: 0xFCEDCC VA: 0xFCEDCC
	private void OnEnable() { }

	// RVA: 0xFCEE74 Offset: 0xFCEE74 VA: 0xFCEE74
	private void Update() { }

	// RVA: 0xFCEEF4 Offset: 0xFCEEF4 VA: 0xFCEEF4
	public IEnumerator DoCoroutine(IEnumerator routine) { }

	// RVA: 0xFCEFB8 Offset: 0xFCEFB8 VA: 0xFCEFB8
	private void OnDisable() { }

	// RVA: 0xFCF0F8 Offset: 0xFCF0F8 VA: 0xFCF0F8
	private void OnDestroy() { }

	// RVA: 0xFCF1A0 Offset: 0xFCF1A0 VA: 0xFCF1A0
	private void OnApplicationQuit() { }

	// RVA: 0xFCF25C Offset: 0xFCF25C VA: 0xFCF25C
	private void OnDrawGizmos() { }

	// RVA: 0xFCF270 Offset: 0xFCF270 VA: 0xFCF270
	public void SetState(string stateName) { }

	// RVA: 0xFCF2A8 Offset: 0xFCF2A8 VA: 0xFCF2A8
	public void ChangeState(FsmEvent fsmEvent) { }

	[ObsoleteAttribute] // RVA: 0xC85794 Offset: 0xC85794 VA: 0xC85794
	// RVA: 0xFCF2E0 Offset: 0xFCF2E0 VA: 0xFCF2E0
	public void ChangeState(string eventName) { }

	// RVA: 0xFCF318 Offset: 0xFCF318 VA: 0xFCF318
	public void SendEvent(string eventName) { }

	[ObsoleteAttribute] // RVA: 0xC857CC Offset: 0xC857CC VA: 0xC857CC
	// RVA: 0xFCF350 Offset: 0xFCF350 VA: 0xFCF350
	public void SendRemoteFsmEvent(string eventName) { }

	[ObsoleteAttribute] // RVA: 0xC85804 Offset: 0xC85804 VA: 0xC85804
	// RVA: 0xFCF388 Offset: 0xFCF388 VA: 0xFCF388
	public void SendRemoteFsmEventWithData(string eventName, string eventData) { }

	// RVA: 0xFCF430 Offset: 0xFCF430 VA: 0xFCF430
	public static void BroadcastEvent(string fsmEventName) { }

	// RVA: 0xFCF504 Offset: 0xFCF504 VA: 0xFCF504
	public static void BroadcastEvent(FsmEvent fsmEvent) { }

	// RVA: 0xFCF6FC Offset: 0xFCF6FC VA: 0xFCF6FC
	private void OnBecameVisible() { }

	// RVA: 0xFCF784 Offset: 0xFCF784 VA: 0xFCF784
	private void OnBecameInvisible() { }

	// RVA: 0xFCC0C8 Offset: 0xFCC0C8 VA: 0xFCC0C8
	public Fsm get_Fsm() { }

	// RVA: 0xFCD594 Offset: 0xFCD594 VA: 0xFCD594
	public string get_FsmName() { }

	// RVA: 0xFCF80C Offset: 0xFCF80C VA: 0xFCF80C
	public void set_FsmName(string value) { }

	// RVA: 0xFCF844 Offset: 0xFCF844 VA: 0xFCF844
	public string get_FsmDescription() { }

	// RVA: 0xFCF874 Offset: 0xFCF874 VA: 0xFCF874
	public void set_FsmDescription(string value) { }

	// RVA: 0xFCC108 Offset: 0xFCC108 VA: 0xFCC108
	public bool get_Active() { }

	// RVA: 0xFCF8AC Offset: 0xFCF8AC VA: 0xFCF8AC
	public string get_ActiveStateName() { }

	// RVA: 0xFCF954 Offset: 0xFCF954 VA: 0xFCF954
	public FsmState[] get_FsmStates() { }

	// RVA: 0xFCF984 Offset: 0xFCF984 VA: 0xFCF984
	public FsmEvent[] get_FsmEvents() { }

	// RVA: 0xFCF9B4 Offset: 0xFCF9B4 VA: 0xFCF9B4
	public FsmTransition[] get_FsmGlobalTransitions() { }

	// RVA: 0xFCF9E4 Offset: 0xFCF9E4 VA: 0xFCF9E4
	public FsmVariables get_FsmVariables() { }

	// RVA: 0xFCFA14 Offset: 0xFCFA14 VA: 0xFCFA14
	public bool get_UsesTemplate() { }

	// RVA: 0xFCFA84 Offset: 0xFCFA84 VA: 0xFCFA84 Slot: 4
	public void OnBeforeSerialize() { }

	// RVA: 0xFCFA88 Offset: 0xFCFA88 VA: 0xFCFA88 Slot: 5
	public void OnAfterDeserialize() { }

	// RVA: 0xFCFBC8 Offset: 0xFCFBC8 VA: 0xFCFBC8
	public void .ctor() { }

	// RVA: 0xFCFBD0 Offset: 0xFCFBD0 VA: 0xFCFBD0
	private static void .cctor() { }
}

// Namespace: 
private sealed class PlayMakerFSM.AddEventHandlerDelegate : MulticastDelegate // TypeDefIndex: 3265
{
	// Methods

	// RVA: 0xFCFEA0 Offset: 0xFCFEA0 VA: 0xFCFEA0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xFCE778 Offset: 0xFCE778 VA: 0xFCE778 Slot: 11
	public virtual void Invoke(PlayMakerFSM fsm) { }

	// RVA: 0xFCFEB0 Offset: 0xFCFEB0 VA: 0xFCFEB0 Slot: 12
	public virtual IAsyncResult BeginInvoke(PlayMakerFSM fsm, AsyncCallback callback, object object) { }

	// RVA: 0xFCFED4 Offset: 0xFCFED4 VA: 0xFCFED4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC8430C Offset: 0xC8430C VA: 0xC8430C
private sealed class PlayMakerFSM.<DoCoroutine>d__43 : IEnumerator<object>, IDisposable, IEnumerator // TypeDefIndex: 3266
{
	// Fields
	private int <>1__state; // 0x10
	private object <>2__current; // 0x18
	public PlayMakerFSM <>4__this; // 0x20
	public IEnumerator routine; // 0x28

	// Properties
	private object System.Collections.Generic.IEnumerator<System.Object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xC86A68 Offset: 0xC86A68 VA: 0xC86A68
	// RVA: 0xFCEF8C Offset: 0xFCEF8C VA: 0xFCEF8C
	public void .ctor(int <>1__state) { }

	[DebuggerHiddenAttribute] // RVA: 0xC86A78 Offset: 0xC86A78 VA: 0xC86A78
	// RVA: 0xFCFC44 Offset: 0xFCFC44 VA: 0xFCFC44 Slot: 8
	private void System.IDisposable.Dispose() { }

	// RVA: 0xFCFC48 Offset: 0xFCFC48 VA: 0xFCFC48 Slot: 6
	private bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xC86A88 Offset: 0xC86A88 VA: 0xC86A88
	// RVA: 0xFCFE28 Offset: 0xFCFE28 VA: 0xFCFE28 Slot: 4
	private object System.Collections.Generic.IEnumerator<System.Object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC86A98 Offset: 0xC86A98 VA: 0xC86A98
	// RVA: 0xFCFE30 Offset: 0xFCFE30 VA: 0xFCFE30 Slot: 7
	private void System.Collections.IEnumerator.Reset() { }

	[DebuggerHiddenAttribute] // RVA: 0xC86AA8 Offset: 0xC86AA8 VA: 0xC86AA8
	// RVA: 0xFCFE98 Offset: 0xFCFE98 VA: 0xFCFE98 Slot: 5
	private object System.Collections.IEnumerator.get_Current() { }
}

// Namespace: 
public class PlayMakerGlobals : ScriptableObject // TypeDefIndex: 3267
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC84534 Offset: 0xC84534 VA: 0xC84534
	private static bool <Initialized>k__BackingField; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC84544 Offset: 0xC84544 VA: 0xC84544
	private static bool <IsPlayingInEditor>k__BackingField; // 0x1
	[CompilerGeneratedAttribute] // RVA: 0xC84554 Offset: 0xC84554 VA: 0xC84554
	private static bool <IsPlaying>k__BackingField; // 0x2
	[CompilerGeneratedAttribute] // RVA: 0xC84564 Offset: 0xC84564 VA: 0xC84564
	private static bool <IsEditor>k__BackingField; // 0x3
	[CompilerGeneratedAttribute] // RVA: 0xC84574 Offset: 0xC84574 VA: 0xC84574
	private static bool <IsBuilding>k__BackingField; // 0x4
	private static PlayMakerGlobals instance; // 0x8
	[SerializeField] // RVA: 0xC84584 Offset: 0xC84584 VA: 0xC84584
	private FsmVariables variables; // 0x18
	[SerializeField] // RVA: 0xC84594 Offset: 0xC84594 VA: 0xC84594
	private List<string> events; // 0x20

	// Properties
	public static bool Initialized { get; set; }
	public static bool IsPlayingInEditor { get; set; }
	public static bool IsPlaying { get; set; }
	public static bool IsEditor { get; set; }
	public static bool IsBuilding { get; set; }
	public static PlayMakerGlobals Instance { get; }
	public FsmVariables Variables { get; set; }
	public List<string> Events { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC8583C Offset: 0xC8583C VA: 0xC8583C
	// RVA: 0xFCFB78 Offset: 0xFCFB78 VA: 0xFCFB78
	public static bool get_Initialized() { }

	[CompilerGeneratedAttribute] // RVA: 0xC8584C Offset: 0xC8584C VA: 0xC8584C
	// RVA: 0xFD3210 Offset: 0xFD3210 VA: 0xFD3210
	private static void set_Initialized(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC8585C Offset: 0xC8585C VA: 0xC8585C
	// RVA: 0xFD3268 Offset: 0xFD3268 VA: 0xFD3268
	public static bool get_IsPlayingInEditor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC8586C Offset: 0xC8586C VA: 0xC8586C
	// RVA: 0xFD32B8 Offset: 0xFD32B8 VA: 0xFD32B8
	private static void set_IsPlayingInEditor(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC8587C Offset: 0xC8587C VA: 0xC8587C
	// RVA: 0xFD3310 Offset: 0xFD3310 VA: 0xFD3310
	public static bool get_IsPlaying() { }

	[CompilerGeneratedAttribute] // RVA: 0xC8588C Offset: 0xC8588C VA: 0xC8588C
	// RVA: 0xFD3360 Offset: 0xFD3360 VA: 0xFD3360
	private static void set_IsPlaying(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC8589C Offset: 0xC8589C VA: 0xC8589C
	// RVA: 0xFCDAD8 Offset: 0xFCDAD8 VA: 0xFCDAD8
	public static bool get_IsEditor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC858AC Offset: 0xC858AC VA: 0xC858AC
	// RVA: 0xFD33B8 Offset: 0xFD33B8 VA: 0xFD33B8
	private static void set_IsEditor(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC858BC Offset: 0xC858BC VA: 0xC858BC
	// RVA: 0xFD3410 Offset: 0xFD3410 VA: 0xFD3410
	public static bool get_IsBuilding() { }

	[CompilerGeneratedAttribute] // RVA: 0xC858CC Offset: 0xC858CC VA: 0xC858CC
	// RVA: 0xFD3460 Offset: 0xFD3460 VA: 0xFD3460
	public static void set_IsBuilding(bool value) { }

	// RVA: 0xFD34B8 Offset: 0xFD34B8 VA: 0xFD34B8
	public static void InitApplicationFlags() { }

	// RVA: 0xFCD7DC Offset: 0xFCD7DC VA: 0xFCD7DC
	public static void Initialize() { }

	// RVA: 0xFBE068 Offset: 0xFBE068 VA: 0xFBE068
	public static PlayMakerGlobals get_Instance() { }

	// RVA: 0xFD35FC Offset: 0xFD35FC VA: 0xFD35FC
	public static void ResetInstance() { }

	// RVA: 0xFBE0E8 Offset: 0xFBE0E8 VA: 0xFBE0E8
	public FsmVariables get_Variables() { }

	// RVA: 0xFD35E4 Offset: 0xFD35E4 VA: 0xFD35E4
	public void set_Variables(FsmVariables value) { }

	// RVA: 0xFD35EC Offset: 0xFD35EC VA: 0xFD35EC
	public List<string> get_Events() { }

	// RVA: 0xFD35F4 Offset: 0xFD35F4 VA: 0xFD35F4
	public void set_Events(List<string> value) { }

	// RVA: 0xFD364C Offset: 0xFD364C VA: 0xFD364C
	public FsmEvent AddEvent(string eventName) { }

	// RVA: 0xFD3764 Offset: 0xFD3764 VA: 0xFD3764
	public static void AddGlobalEvent(string eventName) { }

	// RVA: 0xFD3820 Offset: 0xFD3820 VA: 0xFD3820
	public static void RemoveGlobalEvent(string eventName) { }

	// RVA: 0xFD3904 Offset: 0xFD3904 VA: 0xFD3904
	public void OnEnable() { }

	// RVA: 0xFD3908 Offset: 0xFD3908 VA: 0xFD3908
	public void OnDestroy() { }

	// RVA: 0xFD3988 Offset: 0xFD3988 VA: 0xFD3988
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC8431C Offset: 0xC8431C VA: 0xC8431C
private sealed class PlayMakerGlobals.<>c__DisplayClass36_0 // TypeDefIndex: 3268
{
	// Fields
	public string eventName; // 0x10

	// Methods

	// RVA: 0xFD38FC Offset: 0xFD38FC VA: 0xFD38FC
	public void .ctor() { }

	// RVA: 0xFD3A14 Offset: 0xFD3A14 VA: 0xFD3A14
	internal bool <RemoveGlobalEvent>b__0(string m) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC83D48 Offset: 0xC83D48 VA: 0xC83D48
[AddComponentMenu] // RVA: 0xC83D48 Offset: 0xC83D48 VA: 0xC83D48
public class PlayMakerGUI : MonoBehaviour // TypeDefIndex: 3269
{
	// Fields
	private static readonly List<PlayMakerFSM> fsmList; // 0x0
	public static Fsm SelectedFSM; // 0x8
	private static readonly GUIContent labelContent; // 0x10
	public bool previewOnGUI; // 0x18
	public bool enableGUILayout; // 0x19
	public bool drawStateLabels; // 0x1A
	public bool enableStateLabelsInBuilds; // 0x1B
	public bool GUITextureStateLabels; // 0x1C
	public bool GUITextStateLabels; // 0x1D
	public bool filterLabelsWithDistance; // 0x1E
	public float maxLabelDistance; // 0x20
	public bool controlMouseCursor; // 0x24
	public float labelScale; // 0x28
	private static readonly List<PlayMakerFSM> SortedFsmList; // 0x18
	private static GameObject labelGameObject; // 0x20
	private static float fsmLabelIndex; // 0x28
	private static PlayMakerGUI instance; // 0x30
	private static GUISkin guiSkin; // 0x38
	private static Color guiColor; // 0x40
	private static Color guiBackgroundColor; // 0x50
	private static Color guiContentColor; // 0x60
	private static Matrix4x4 guiMatrix; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC845A4 Offset: 0xC845A4 VA: 0xC845A4
	private static Texture <MouseCursor>k__BackingField; // 0xB0
	[CompilerGeneratedAttribute] // RVA: 0xC845B4 Offset: 0xC845B4 VA: 0xC845B4
	private static bool <LockCursor>k__BackingField; // 0xB8
	[CompilerGeneratedAttribute] // RVA: 0xC845C4 Offset: 0xC845C4 VA: 0xC845C4
	private static bool <HideCursor>k__BackingField; // 0xB9
	private const float MaxLabelWidth = 200;
	private static GUIStyle stateLabelStyle; // 0xC0
	private static Texture2D stateLabelBackground; // 0xC8
	private float initLabelScale; // 0x2C

	// Properties
	public static bool EnableStateLabels { get; set; }
	public static bool EnableStateLabelsInBuild { get; set; }
	public static PlayMakerGUI Instance { get; }
	public static bool Enabled { get; }
	public static GUISkin GUISkin { get; set; }
	public static Color GUIColor { get; set; }
	public static Color GUIBackgroundColor { get; set; }
	public static Color GUIContentColor { get; set; }
	public static Matrix4x4 GUIMatrix { get; set; }
	public static Texture MouseCursor { get; set; }
	public static bool LockCursor { get; set; }
	public static bool HideCursor { get; set; }

	// Methods

	// RVA: 0xFD0064 Offset: 0xFD0064 VA: 0xFD0064
	public static bool get_EnableStateLabels() { }

	// RVA: 0xFD0460 Offset: 0xFD0460 VA: 0xFD0460
	public static void set_EnableStateLabels(bool value) { }

	// RVA: 0xFD0544 Offset: 0xFD0544 VA: 0xFD0544
	public static bool get_EnableStateLabelsInBuild() { }

	// RVA: 0xFD0668 Offset: 0xFD0668 VA: 0xFD0668
	public static void set_EnableStateLabelsInBuild(bool value) { }

	// RVA: 0xFD02B4 Offset: 0xFD02B4 VA: 0xFD02B4
	private static void InitInstance() { }

	// RVA: 0xFD074C Offset: 0xFD074C VA: 0xFD074C
	public static PlayMakerGUI get_Instance() { }

	// RVA: 0xFD088C Offset: 0xFD088C VA: 0xFD088C
	public static bool get_Enabled() { }

	// RVA: 0xFD0974 Offset: 0xFD0974 VA: 0xFD0974
	public static GUISkin get_GUISkin() { }

	// RVA: 0xFD09DC Offset: 0xFD09DC VA: 0xFD09DC
	public static void set_GUISkin(GUISkin value) { }

	// RVA: 0xFD0A48 Offset: 0xFD0A48 VA: 0xFD0A48
	public static Color get_GUIColor() { }

	// RVA: 0xFD0AB4 Offset: 0xFD0AB4 VA: 0xFD0AB4
	public static void set_GUIColor(Color value) { }

	// RVA: 0xFD0B40 Offset: 0xFD0B40 VA: 0xFD0B40
	public static Color get_GUIBackgroundColor() { }

	// RVA: 0xFD0BAC Offset: 0xFD0BAC VA: 0xFD0BAC
	public static void set_GUIBackgroundColor(Color value) { }

	// RVA: 0xFD0C38 Offset: 0xFD0C38 VA: 0xFD0C38
	public static Color get_GUIContentColor() { }

	// RVA: 0xFD0CA4 Offset: 0xFD0CA4 VA: 0xFD0CA4
	public static void set_GUIContentColor(Color value) { }

	// RVA: 0xFD0D30 Offset: 0xFD0D30 VA: 0xFD0D30
	public static Matrix4x4 get_GUIMatrix() { }

	// RVA: 0xFD0DB8 Offset: 0xFD0DB8 VA: 0xFD0DB8
	public static void set_GUIMatrix(Matrix4x4 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC858DC Offset: 0xC858DC VA: 0xC858DC
	// RVA: 0xFD0E68 Offset: 0xFD0E68 VA: 0xFD0E68
	public static Texture get_MouseCursor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC858EC Offset: 0xC858EC VA: 0xC858EC
	// RVA: 0xFD0ED0 Offset: 0xFD0ED0 VA: 0xFD0ED0
	public static void set_MouseCursor(Texture value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC858FC Offset: 0xC858FC VA: 0xC858FC
	// RVA: 0xFD0F3C Offset: 0xFD0F3C VA: 0xFD0F3C
	public static bool get_LockCursor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC8590C Offset: 0xC8590C VA: 0xC8590C
	// RVA: 0xFD0FA4 Offset: 0xFD0FA4 VA: 0xFD0FA4
	public static void set_LockCursor(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC8591C Offset: 0xC8591C VA: 0xC8591C
	// RVA: 0xFD1014 Offset: 0xFD1014 VA: 0xFD1014
	public static bool get_HideCursor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC8592C Offset: 0xC8592C VA: 0xC8592C
	// RVA: 0xFD107C Offset: 0xFD107C VA: 0xFD107C
	public static void set_HideCursor(bool value) { }

	// RVA: 0xFD10EC Offset: 0xFD10EC VA: 0xFD10EC
	private void InitLabelStyle() { }

	// RVA: 0xFD1428 Offset: 0xFD1428 VA: 0xFD1428
	private void DrawStateLabels() { }

	// RVA: 0xFD179C Offset: 0xFD179C VA: 0xFD179C
	private void DrawStateLabel(PlayMakerFSM fsm) { }

	// RVA: 0xFD2074 Offset: 0xFD2074 VA: 0xFD2074
	private static string GenerateStateLabel(PlayMakerFSM fsm) { }

	// RVA: 0xFD21AC Offset: 0xFD21AC VA: 0xFD21AC
	private void Awake() { }

	// RVA: 0xFD22BC Offset: 0xFD22BC VA: 0xFD22BC
	private void OnEnable() { }

	// RVA: 0xFD22C0 Offset: 0xFD22C0 VA: 0xFD22C0
	private void OnGUI() { }

	// RVA: 0xFD2CFC Offset: 0xFD2CFC VA: 0xFD2CFC
	private void CallOnGUI(Fsm fsm) { }

	// RVA: 0xFD2DF4 Offset: 0xFD2DF4 VA: 0xFD2DF4
	private void OnDisable() { }

	// RVA: 0xFD2B60 Offset: 0xFD2B60 VA: 0xFD2B60
	private static void DoEditGUI() { }

	// RVA: 0xFD2EC4 Offset: 0xFD2EC4 VA: 0xFD2EC4
	public void OnApplicationQuit() { }

	// RVA: 0xFD2F2C Offset: 0xFD2F2C VA: 0xFD2F2C
	public void .ctor() { }

	// RVA: 0xFD2F58 Offset: 0xFD2F58 VA: 0xFD2F58
	private static void .cctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC8432C Offset: 0xC8432C VA: 0xC8432C
[Serializable]
private sealed class PlayMakerGUI.<>c // TypeDefIndex: 3270
{
	// Fields
	public static readonly PlayMakerGUI.<>c <>9; // 0x0
	public static Comparison<PlayMakerFSM> <>9__65_0; // 0x8

	// Methods

	// RVA: 0xFD30C0 Offset: 0xFD30C0 VA: 0xFD30C0
	private static void .cctor() { }

	// RVA: 0xFD3124 Offset: 0xFD3124 VA: 0xFD3124
	public void .ctor() { }

	// RVA: 0xFD312C Offset: 0xFD312C VA: 0xFD312C
	internal int <DrawStateLabels>b__65_0(PlayMakerFSM x, PlayMakerFSM y) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC83D94 Offset: 0xC83D94 VA: 0xC83D94
public class PlayMakerMouseEvents : PlayMakerProxyBase // TypeDefIndex: 3271
{
	// Methods

	// RVA: 0xFD3F34 Offset: 0xFD3F34 VA: 0xFD3F34
	public void OnMouseEnter() { }

	// RVA: 0xFD40D4 Offset: 0xFD40D4 VA: 0xFD40D4
	public void OnMouseDown() { }

	// RVA: 0xFD4274 Offset: 0xFD4274 VA: 0xFD4274
	public void OnMouseUp() { }

	// RVA: 0xFD445C Offset: 0xFD445C VA: 0xFD445C
	public void OnMouseUpAsButton() { }

	// RVA: 0xFD4644 Offset: 0xFD4644 VA: 0xFD4644
	public void OnMouseExit() { }

	// RVA: 0xFD47E4 Offset: 0xFD47E4 VA: 0xFD47E4
	public void OnMouseDrag() { }

