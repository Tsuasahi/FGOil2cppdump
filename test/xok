
	// RVA: 0x174A320 Offset: 0x174A320 VA: 0x174A320 Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class QuestPickupMaster : DataMasterBase<QuestPickupMaster, QuestPickupEntity, int> // TypeDefIndex: 7147
{
	// Methods

	// RVA: 0x174A328 Offset: 0x174A328 VA: 0x174A328
	public void .ctor() { }

	// RVA: 0x174A37C Offset: 0x174A37C VA: 0x174A37C
	public QuestPickupEntity[] getList(int questId) { }

	// RVA: 0x174A4EC Offset: 0x174A4EC VA: 0x174A4EC
	public int GetPriority(int questId) { }
}

// Namespace: 
public class QuestRacePointEntity : DataEntityBase<string> // TypeDefIndex: 7148
{
	// Fields
	private static readonly string VOICE_KEY; // 0x0
	public int questId; // 0x10
	public int itemId; // 0x14
	public int addPoint; // 0x18
	public Dictionary<string, object> script; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCC1AF8 Offset: 0xCC1AF8 VA: 0xCC1AF8
	private static Converter<object, string> <>f__am$cache0; // 0x8

	// Methods

	// RVA: 0x174A5F0 Offset: 0x174A5F0 VA: 0x174A5F0
	public void .ctor() { }

	// RVA: 0x174A640 Offset: 0x174A640 VA: 0x174A640 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x174A6B0 Offset: 0x174A6B0 VA: 0x174A6B0
	public static string CreatePK(int questId, int itemId) { }

	// RVA: 0x174A6C0 Offset: 0x174A6C0 VA: 0x174A6C0
	public EventRaceBoostEffect.BoostColor GetBoostTypeColor() { }

	// RVA: 0x174A768 Offset: 0x174A768 VA: 0x174A768
	public EventRaceBoostEffect.BoostGrade GetEffectGrade() { }

	// RVA: 0x174A8D8 Offset: 0x174A8D8 VA: 0x174A8D8
	public string GetSe() { }

	// RVA: 0x174A9B8 Offset: 0x174A9B8 VA: 0x174A9B8
	public string[] GetVoices() { }

	// RVA: 0x174ABF0 Offset: 0x174ABF0 VA: 0x174ABF0
	public string GetRandVoice() { }

	// RVA: 0x174AC5C Offset: 0x174AC5C VA: 0x174AC5C
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD37CCC Offset: 0xD37CCC VA: 0xD37CCC
	// RVA: 0x174ACB8 Offset: 0x174ACB8 VA: 0x174ACB8
	private static string <GetVoices>m__0(object x) { }
}

// Namespace: 
public class QuestRacePointMaster : DataMasterBase<QuestRacePointMaster, QuestRacePointEntity, string> // TypeDefIndex: 7149
{
	// Methods

	// RVA: 0x174ACE8 Offset: 0x174ACE8 VA: 0x174ACE8
	public void .ctor() { }

	// RVA: 0x174AD3C Offset: 0x174AD3C VA: 0x174AD3C
	public QuestRacePointEntity GetEntity(int questId, int itemId) { }

	// RVA: 0x174ADD0 Offset: 0x174ADD0 VA: 0x174ADD0
	public bool TryGetEntity(out QuestRacePointEntity entity, int questId, int itemId) { }
}

// Namespace: 
public class QuestRandomGroupEntity : DataEntityBase<string> // TypeDefIndex: 7150
{
	// Fields
	public int questId; // 0x10
	public int randomGroupId; // 0x14
	public int probability; // 0x18

	// Methods

	// RVA: 0x174AE74 Offset: 0x174AE74 VA: 0x174AE74
	public void .ctor() { }

	// RVA: 0x174AEC4 Offset: 0x174AEC4 VA: 0x174AEC4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x174AED8 Offset: 0x174AED8 VA: 0x174AED8
	public static string CreatePK(int questId, int randomGroupId, int probability) { }

	// RVA: 0x174AEEC Offset: 0x174AEEC VA: 0x174AEEC
	public QuestEntity GetQuestEntity() { }
}

// Namespace: 
public class QuestRandomGroupMaster : DataMasterBase<QuestRandomGroupMaster, QuestRandomGroupEntity, string> // TypeDefIndex: 7151
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1B08 Offset: 0xCC1B08 VA: 0xCC1B08
	private static Func<QuestRandomGroupEntity, int> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCC1B18 Offset: 0xCC1B18 VA: 0xCC1B18
	private static Func<DataEntityBase, QuestRandomGroupEntity> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x174AF84 Offset: 0x174AF84 VA: 0x174AF84
	public void .ctor() { }

	// RVA: 0x174AFD8 Offset: 0x174AFD8 VA: 0x174AFD8
	public QuestRandomGroupEntity GetEntity(int questId, int randomGroupId, int probability) { }

	// RVA: 0x174B05C Offset: 0x174B05C VA: 0x174B05C
	public bool TryGetEntity(out QuestRandomGroupEntity entity, int questId, int randomGroupId, int probability) { }

	// RVA: 0x174B0E8 Offset: 0x174B0E8 VA: 0x174B0E8
	public QuestRandomGroupEntity GetEntityFromQuestId(int questId) { }

	// RVA: 0x174B214 Offset: 0x174B214 VA: 0x174B214
	public QuestRandomGroupEntity GetRandomRangeQuest(int groupId) { }

	// RVA: 0x174B338 Offset: 0x174B338 VA: 0x174B338
	public List<QuestRandomGroupEntity> GetValidEntityListFromGroupId(int groupId) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37CDC Offset: 0xD37CDC VA: 0xD37CDC
	// RVA: 0x174B49C Offset: 0x174B49C VA: 0x174B49C
	private static int <GetRandomRangeQuest>m__0(QuestRandomGroupEntity entity) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37CEC Offset: 0xD37CEC VA: 0xD37CEC
	// RVA: 0x174B4C4 Offset: 0x174B4C4 VA: 0x174B4C4
	private static QuestRandomGroupEntity <GetValidEntityListFromGroupId>m__1(DataEntityBase entity) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEE80 Offset: 0xCAEE80 VA: 0xCAEE80
private sealed class QuestRandomGroupMaster.<GetEntityFromQuestId>c__AnonStorey0 // TypeDefIndex: 7152
{
	// Fields
	internal int questId; // 0x10

	// Methods

	// RVA: 0x174B20C Offset: 0x174B20C VA: 0x174B20C
	public void .ctor() { }

	// RVA: 0x174B544 Offset: 0x174B544 VA: 0x174B544
	internal bool <>m__0(DataEntityBase entity) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEE90 Offset: 0xCAEE90 VA: 0xCAEE90
private sealed class QuestRandomGroupMaster.<GetValidEntityListFromGroupId>c__AnonStorey1 // TypeDefIndex: 7153
{
	// Fields
	internal int groupId; // 0x10

	// Methods

	// RVA: 0x174B494 Offset: 0x174B494 VA: 0x174B494
	public void .ctor() { }

	// RVA: 0x174B600 Offset: 0x174B600 VA: 0x174B600
	internal bool <>m__0(QuestRandomGroupEntity entity) { }
}

// Namespace: 
public class QuestReleaseEntity : DataEntityBase<string> // TypeDefIndex: 7154
{
	// Fields
	public int questId; // 0x10
	public int type; // 0x14
	public int targetId; // 0x18
	public long value; // 0x20
	public int closedMessageId; // 0x28
	public int imagePriority; // 0x2C

	// Methods

	// RVA: 0x174B6B0 Offset: 0x174B6B0 VA: 0x174B6B0
	public void .ctor() { }

	// RVA: 0x174B700 Offset: 0x174B700 VA: 0x174B700
	public int getQuestId() { }

	// RVA: 0x174B708 Offset: 0x174B708 VA: 0x174B708
	public int getType() { }

	// RVA: 0x174B710 Offset: 0x174B710 VA: 0x174B710
	public int getTargetId() { }

	// RVA: 0x174B718 Offset: 0x174B718 VA: 0x174B718
	public long getValue() { }

	// RVA: 0x174B720 Offset: 0x174B720 VA: 0x174B720
	public int getValueInt() { }

	// RVA: 0x174B728 Offset: 0x174B728 VA: 0x174B728
	public int getClosedMessageId() { }

	// RVA: 0x174B730 Offset: 0x174B730 VA: 0x174B730
	public int getImagePriority() { }

	// RVA: 0x174B738 Offset: 0x174B738 VA: 0x174B738 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x174B750 Offset: 0x174B750 VA: 0x174B750
	public static string CreatePK(int questId, int type, int targetId, long value) { }
}

// Namespace: 
public class QuestReleaseMaster : DataMasterBase<QuestReleaseMaster, QuestReleaseEntity, string> // TypeDefIndex: 7155
{
	// Fields
	private bool isCached; // 0x44
	private Dictionary<int, List<QuestReleaseEntity>> cachedQuestReleaseEntityDict; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xCC1B28 Offset: 0xCC1B28 VA: 0xCC1B28
	private static Comparison<QuestEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x174B764 Offset: 0x174B764 VA: 0x174B764
	public void .ctor() { }

	// RVA: 0x174B7E0 Offset: 0x174B7E0 VA: 0x174B7E0
	public QuestReleaseEntity GetEntity(int questId, int type, int targetId, long value) { }

	// RVA: 0x174B86C Offset: 0x174B86C VA: 0x174B86C
	public bool TryGetEntity(out QuestReleaseEntity entity, int questId, int type, int targetId, long value) { }

	// RVA: 0x174B908 Offset: 0x174B908 VA: 0x174B908
	public QuestReleaseEntity[] getListByQuestID(int qid) { }

	// RVA: 0x174BA78 Offset: 0x174BA78 VA: 0x174BA78 Slot: 7
	public override void Clear() { }

	// RVA: 0x174BAEC Offset: 0x174BAEC VA: 0x174BAEC
	public void getListByQuestID(int qid, ref List<QuestReleaseEntity> ret_list) { }

	// RVA: 0x174BDBC Offset: 0x174BDBC VA: 0x174BDBC
	public QuestReleaseEntity[] getListByType(CondType.Kind type) { }

	// RVA: 0x174BF2C Offset: 0x174BF2C VA: 0x174BF2C
	public int[] getQuestIdsByTargetAndOpenCondType(int targetId, CondType.Kind openCondType) { }

	// RVA: 0x174C0AC Offset: 0x174C0AC VA: 0x174C0AC
	public List<QuestReleaseEntity> getListByTargetAndCondType(int targetId, CondType.Kind condType) { }

	// RVA: 0x174C21C Offset: 0x174C21C VA: 0x174C21C
	public int[] GetQuestIdList(CondType.Kind type, int targetId, int value = -1) { }

	// RVA: 0x174C5D0 Offset: 0x174C5D0 VA: 0x174C5D0
	public EventPointVsResultAction.GROUP_WIN EventPointWinActionType(int questId, bool winGroup1) { }

	// RVA: 0x174C704 Offset: 0x174C704 VA: 0x174C704
	public bool IsQuestOfResultBattleCleared(int targetId) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37CFC Offset: 0xD37CFC VA: 0xD37CFC
	// RVA: 0x174C884 Offset: 0x174C884 VA: 0x174C884
	private static int <GetQuestIdList>m__0(QuestEntity a, QuestEntity b) { }
}

// Namespace: 
public class QuestResetEntity : DataEntityBase<int> // TypeDefIndex: 7156
{
	// Fields
	public int questId; // 0x10
	public int[] resetQuestIds; // 0x18
	public string startMessage; // 0x20

	// Methods

	// RVA: 0x174C8C8 Offset: 0x174C8C8 VA: 0x174C8C8
	public void .ctor() { }

	// RVA: 0x174C918 Offset: 0x174C918 VA: 0x174C918 Slot: 5
	protected sealed override int CreatePrimaryKey() { }
}

// Namespace: 
public class QuestResetMaster : DataMasterBase<QuestResetMaster, QuestResetEntity, int> // TypeDefIndex: 7157
{
	// Methods

	// RVA: 0x174C920 Offset: 0x174C920 VA: 0x174C920
	public void .ctor() { }
}

// Namespace: 
public class QuestRestrictionEntity : DataEntityBase<string> // TypeDefIndex: 7158
{
	// Fields
	public int questId; // 0x10
	public int phase; // 0x14
	public int restrictionId; // 0x18
	public int frequencyType; // 0x1C
	public string dialogMessage; // 0x20
	public string noticeMessage; // 0x28
	public string title; // 0x30

	// Methods

	// RVA: 0x174C974 Offset: 0x174C974 VA: 0x174C974
	public void .ctor() { }

	// RVA: 0x174C9C4 Offset: 0x174C9C4 VA: 0x174C9C4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x174C9D8 Offset: 0x174C9D8 VA: 0x174C9D8
	public static string CreatePK(int questId, int phase, int restrictionId) { }
}

// Namespace: 
public class QuestRestrictionInfoEntity : DataEntityBase<string> // TypeDefIndex: 7159
{
	// Fields
	public int questId; // 0x10
	public int phase; // 0x14
	public long flag; // 0x18
	public Dictionary<string, object> script; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCC1B38 Offset: 0xCC1B38 VA: 0xCC1B38
	private static Converter<object, int> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x180632C Offset: 0x180632C VA: 0x180632C
	public void .ctor() { }

	// RVA: 0x180637C Offset: 0x180637C VA: 0x180637C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x180638C Offset: 0x180638C VA: 0x180638C
	public static string CreatePK(int questId, int phase) { }

	// RVA: 0x180639C Offset: 0x180639C VA: 0x180639C
	public bool HasFlag(QuestEntity.Flag flag) { }

	// RVA: 0x18063AC Offset: 0x18063AC VA: 0x18063AC
	private object GetScriptObj(string key) { }

	// RVA: 0x180642C Offset: 0x180642C VA: 0x180642C
	private int GetScriptIntParam(string key, int defVal = -1) { }

	// RVA: 0x1806504 Offset: 0x1806504 VA: 0x1806504
	private List<object> GetScriptObjListParam(string key) { }

	// RVA: 0x18065DC Offset: 0x18065DC VA: 0x18065DC
	private int[] GetScriptIntArrayParam(string key, int[] defVal) { }

	// RVA: 0x18066E8 Offset: 0x18066E8 VA: 0x18066E8
	public int GetSingleForceSvtId() { }

	// RVA: 0x180673C Offset: 0x180673C VA: 0x180673C
	public int GetUserEventDeckNo() { }

	// RVA: 0x1806790 Offset: 0x1806790 VA: 0x1806790
	public bool GetOverwriteLimitCountSvtIds(out int[] overwriteLimitCountSvtIds, out int[] overwriteLimitCounts, out int[] overwriteLimitCountIconIds) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37D0C Offset: 0xD37D0C VA: 0xD37D0C
	// RVA: 0x180685C Offset: 0x180685C VA: 0x180685C
	private static int <GetScriptIntArrayParam>m__0(object x) { }
}

// Namespace: 
public class QuestRestrictionInfoMaster : DataMasterBase<QuestRestrictionInfoMaster, QuestRestrictionInfoEntity, string> // TypeDefIndex: 7160
{
	// Methods

	// RVA: 0x18068D8 Offset: 0x18068D8 VA: 0x18068D8
	public void .ctor() { }

	// RVA: 0x180692C Offset: 0x180692C VA: 0x180692C
	public QuestRestrictionInfoEntity GetEntity(int questId, int phase) { }

	// RVA: 0x18069A0 Offset: 0x18069A0 VA: 0x18069A0
	public bool TryGetEntity(out QuestRestrictionInfoEntity entity, int questId, int phase) { }
}

// Namespace: 
public class QuestRestrictionMaster : DataMasterBase<QuestRestrictionMaster, QuestRestrictionEntity, string> // TypeDefIndex: 7161
{
	// Methods

	// RVA: 0x1806A24 Offset: 0x1806A24 VA: 0x1806A24
	public void .ctor() { }

	// RVA: 0x1806A78 Offset: 0x1806A78 VA: 0x1806A78
	public QuestRestrictionEntity GetEntity(int questId, int phase, int restrictionId) { }

	// RVA: 0x1806AFC Offset: 0x1806AFC VA: 0x1806AFC
	public bool TryGetEntity(out QuestRestrictionEntity entity, int questId, int phase, int restrictionId) { }

	// RVA: 0x1806B88 Offset: 0x1806B88 VA: 0x1806B88
	public RestrictionEntity[] getRestrictionList(int questId, int phase) { }

	// RVA: 0x1806DA4 Offset: 0x1806DA4 VA: 0x1806DA4
	public RestrictionEntity[] getRestrictionList(out QuestRestrictionEntity[] questRestrictionEntityList, int questId, int phase) { }

	// RVA: 0x1807040 Offset: 0x1807040 VA: 0x1807040
	public string GetRestrictionName(int questId, int phase) { }
}

// Namespace: 
public class QuestScriptEntity : DataEntityBase<string> // TypeDefIndex: 7162
{
	// Fields
	public int id; // 0x10
	public string name; // 0x18
	public int folderType; // 0x20
	public int materialFolderId; // 0x24

	// Methods

	// RVA: 0x1810344 Offset: 0x1810344 VA: 0x1810344
	public void .ctor() { }

	// RVA: 0x1810394 Offset: 0x1810394 VA: 0x1810394 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x18103A8 Offset: 0x18103A8 VA: 0x18103A8
	public static string CreatePK(int id, int folderType) { }

	// RVA: 0x18103B8 Offset: 0x18103B8 VA: 0x18103B8
	public int getQuestId() { }

	// RVA: 0x18103C0 Offset: 0x18103C0 VA: 0x18103C0
	public string getQuestName() { }

	// RVA: 0x18103C8 Offset: 0x18103C8 VA: 0x18103C8
	public int GetFolderId() { }

	// RVA: 0x18103E4 Offset: 0x18103E4 VA: 0x18103E4
	public bool isMateiralRegistWithEventId(int eventId) { }
}

// Namespace: 
public enum QuestScriptEntity.FolderType // TypeDefIndex: 7163
{
	// Fields
	public int value__; // 0x0
	public const QuestScriptEntity.FolderType NONE = 0;
	public const QuestScriptEntity.FolderType MATERIAL_FOLDER = 1;
	public const QuestScriptEntity.FolderType EVENT = 2;
	public const QuestScriptEntity.FolderType SVT = 3;
}

// Namespace: 
public class QuestScriptMaster : DataMasterBase<QuestScriptMaster, QuestScriptEntity, string> // TypeDefIndex: 7164
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1B48 Offset: 0xCC1B48 VA: 0xCC1B48
	private static Comparison<QuestScriptEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1810408 Offset: 0x1810408 VA: 0x1810408
	public void .ctor() { }

	// RVA: 0x181045C Offset: 0x181045C VA: 0x181045C
	public QuestScriptEntity GetEntity(int id, int folderType) { }

	// RVA: 0x18104D0 Offset: 0x18104D0 VA: 0x18104D0
	public bool TryGetEntity(out QuestScriptEntity entity, int id, int folderType) { }

	// RVA: 0x1810554 Offset: 0x1810554 VA: 0x1810554
	public QuestScriptEntity GetEntityFromQuestId(int questId) { }

	// RVA: 0x1810600 Offset: 0x1810600 VA: 0x1810600
	public List<QuestScriptEntity> GetEntityListFromQuestId(int questId) { }

	// RVA: 0x18108B0 Offset: 0x18108B0 VA: 0x18108B0
	public QuestScriptEntity[] GetEntityListFromFolderType(int folderType) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37D1C Offset: 0xD37D1C VA: 0xD37D1C
	// RVA: 0x1810A2C Offset: 0x1810A2C VA: 0x1810A2C
	private static int <GetEntityListFromQuestId>m__0(QuestScriptEntity a, QuestScriptEntity b) { }
}

// Namespace: 
public class QuestScriptReleaseEntity : DataEntityBase<string> // TypeDefIndex: 7165
{
	// Fields
	public int scriptId; // 0x10
	public int phase; // 0x14
	public int id; // 0x18
	public int flag; // 0x1C
	public int condType; // 0x20
	public int[] targetIds; // 0x28
	public int targetNum; // 0x30

	// Methods

	// RVA: 0x1810A6C Offset: 0x1810A6C VA: 0x1810A6C
	public void .ctor() { }

	// RVA: 0x1810ABC Offset: 0x1810ABC VA: 0x1810ABC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1810AD0 Offset: 0x1810AD0 VA: 0x1810AD0
	public static string CreatePK(int scriptId, int phase, int id) { }

	// RVA: 0x1810AE4 Offset: 0x1810AE4 VA: 0x1810AE4
	public bool HasFlag(ScriptSceneType.Kind kind) { }

	// RVA: 0x1810B00 Offset: 0x1810B00 VA: 0x1810B00
	public bool IsOpen() { }
}

// Namespace: 
public class QuestScriptReleaseMaster : DataMasterBase<QuestScriptReleaseMaster, QuestScriptReleaseEntity, string> // TypeDefIndex: 7166
{
	// Methods

	// RVA: 0x1810B84 Offset: 0x1810B84 VA: 0x1810B84
	public void .ctor() { }

	// RVA: 0x1810BD8 Offset: 0x1810BD8 VA: 0x1810BD8
	public QuestScriptReleaseEntity GetEntity(int scriptId, int phase, int id) { }

	// RVA: 0x1810C5C Offset: 0x1810C5C VA: 0x1810C5C
	public bool TryGetEntity(out QuestScriptReleaseEntity entity, int scriptId, int phase, int id) { }

	// RVA: 0x1810CE8 Offset: 0x1810CE8 VA: 0x1810CE8
	public bool IsMaterialCondTypeQuestClearOnly(int scriptQuestId, int scriptPhase, bool isMainInterlude, out List<QuestScriptReleaseEntity> questScriptReleaseEnt, out int checkCnt) { }

	// RVA: 0x18110E0 Offset: 0x18110E0 VA: 0x18110E0
	private bool IsOpenPhase(out bool isOpen, int scriptQuestId, int scriptPhase, ScriptSceneType.Kind kind, bool isMainInterlude = False) { }

	// RVA: 0x18115E0 Offset: 0x18115E0 VA: 0x18115E0
	private bool IsOpenPhaseForSuperBoss(out bool isOpen, int scriptQuestId, int scriptPhase, ScriptSceneType.Kind kind) { }

	// RVA: 0x1811948 Offset: 0x1811948 VA: 0x1811948
	public int GetScriptQuestId(int questId, int phaseCnt, ScriptSceneType.Kind kind) { }

	// RVA: 0x1811A64 Offset: 0x1811A64 VA: 0x1811A64
	public bool IsOpenMaterial(out bool isOpen, int scriptQuestId, bool isMainInterlude) { }
}

// Namespace: 
public class QuestSpotReleaseEntity : DataEntityBase<string> // TypeDefIndex: 7167
{
	// Fields
	public int questId; // 0x10
	public int spotId; // 0x14
	public int priority; // 0x18
	public int condType; // 0x1C
	public int condId; // 0x20
	public int condNum; // 0x24

	// Properties
	public CondType.Kind CondType { get; }

	// Methods

	// RVA: 0x1811A74 Offset: 0x1811A74 VA: 0x1811A74
	public void .ctor() { }

	// RVA: 0x1811AC4 Offset: 0x1811AC4 VA: 0x1811AC4 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1811AD8 Offset: 0x1811AD8 VA: 0x1811AD8
	public static string CreatePK(int questId, int spotId, int priority) { }

	// RVA: 0x1811AEC Offset: 0x1811AEC VA: 0x1811AEC
	public CondType.Kind get_CondType() { }
}

// Namespace: 
public class QuestSpotReleaseMaster : DataMasterBase<QuestSpotReleaseMaster, QuestSpotReleaseEntity, string> // TypeDefIndex: 7168
{
	// Methods

	// RVA: 0x1811AF4 Offset: 0x1811AF4 VA: 0x1811AF4
	public void .ctor() { }

	// RVA: 0x1811B48 Offset: 0x1811B48 VA: 0x1811B48
	public QuestSpotReleaseEntity GetEntity(int questId, int spotId, int priority) { }

	// RVA: 0x1811BCC Offset: 0x1811BCC VA: 0x1811BCC
	public bool TryGetEntity(out QuestSpotReleaseEntity entity, int questId, int spotId, int priority) { }

	// RVA: 0x1811C58 Offset: 0x1811C58 VA: 0x1811C58
	public int GetSpotId(int questId) { }
}

// Namespace: 
public class RecoverEntity : DataEntityBase<int> // TypeDefIndex: 7169
{
	// Fields
	public int id; // 0x10
	public int target; // 0x14
	public int priority; // 0x18
	public int recoverType; // 0x1C
	public int targetId; // 0x20
	public int num; // 0x24

	// Methods

	// RVA: 0x1A9FF94 Offset: 0x1A9FF94 VA: 0x1A9FF94
	public void .ctor() { }

	// RVA: 0x1A9FFE4 Offset: 0x1A9FFE4 VA: 0x1A9FFE4 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1A9FFEC Offset: 0x1A9FFEC VA: 0x1A9FFEC
	public ItemEntity getRecvItemData() { }

	// RVA: 0x1AA0084 Offset: 0x1AA0084 VA: 0x1AA0084
	public CommandSpellEntity getRecvCmdSpellData() { }
}

// Namespace: 
public enum RecoverEntity.RecoverTarget // TypeDefIndex: 7170
{
	// Fields
	public int value__; // 0x0
	public const RecoverEntity.RecoverTarget AP = 1;
	public const RecoverEntity.RecoverTarget RP = 2;
}

// Namespace: 
public class RecoverMaster : DataMasterBase<RecoverMaster, RecoverEntity, int> // TypeDefIndex: 7171
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCC1B58 Offset: 0xCC1B58 VA: 0xCC1B58
	private static Comparison<RecoverEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1AA1BA8 Offset: 0x1AA1BA8 VA: 0x1AA1BA8
	public void .ctor() { }

	// RVA: 0x1A9D13C Offset: 0x1A9D13C VA: 0x1A9D13C
	public List<RecoverEntity> getRecvEntityList(RecoverEntity.RecoverTarget RecoverTarget) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37D2C Offset: 0xD37D2C VA: 0xD37D2C
	// RVA: 0x1AA1BFC Offset: 0x1AA1BFC VA: 0x1AA1BFC
	private static int <getRecvEntityList>m__0(RecoverEntity a, RecoverEntity b) { }
}

// Namespace: 
public class ReprintStageEntity : DataEntityBase<string> // TypeDefIndex: 7172
{
	// Fields
	public int questId; // 0x10
	public int questPhase; // 0x14
	public int wave; // 0x18
	public int remapQuestId; // 0x1C
	public int remapPhase; // 0x20
	public int remapWave; // 0x24

	// Methods

	// RVA: 0x1AA1F20 Offset: 0x1AA1F20 VA: 0x1AA1F20
	public void .ctor() { }

	// RVA: 0x1AA1F70 Offset: 0x1AA1F70 VA: 0x1AA1F70
	public void .ctor(ReprintStageEntity cSrc) { }

	// RVA: 0x1AA2074 Offset: 0x1AA2074 VA: 0x1AA2074
	public int getQuestId() { }

	// RVA: 0x1AA207C Offset: 0x1AA207C VA: 0x1AA207C
	public int getPhase() { }

	// RVA: 0x1AA2084 Offset: 0x1AA2084 VA: 0x1AA2084
	public int getWave() { }

	// RVA: 0x1AA208C Offset: 0x1AA208C VA: 0x1AA208C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1AA20A0 Offset: 0x1AA20A0 VA: 0x1AA20A0
	public static string CreatePK(int questId, int questPhase, int wave) { }
}

// Namespace: 
public class ReprintStageMaster : DataMasterBase<ReprintStageMaster, ReprintStageEntity, string> // TypeDefIndex: 7173
{
	// Methods

	// RVA: 0x1AA20B4 Offset: 0x1AA20B4 VA: 0x1AA20B4
	public void .ctor() { }

	// RVA: 0x1AA2108 Offset: 0x1AA2108 VA: 0x1AA2108
	public ReprintStageEntity GetEntity(int questId, int questPhase, int wave) { }

	// RVA: 0x1AA218C Offset: 0x1AA218C VA: 0x1AA218C
	public bool TryGetEntity(out ReprintStageEntity entity, int questId, int questPhase, int wave) { }
}

// Namespace: 
public class RestrictionEntity : DataEntityBase<int> // TypeDefIndex: 7174
{
	// Fields
	public int id; // 0x10
	public string name; // 0x18
	public int type; // 0x20
	public int[] targetVals; // 0x28
	public int[] targetVals2; // 0x30
	public int rangeType; // 0x38

	// Methods

	// RVA: 0x1AA8B54 Offset: 0x1AA8B54 VA: 0x1AA8B54
	public void .ctor() { }

	// RVA: 0x1AA8BA4 Offset: 0x1AA8BA4 VA: 0x1AA8BA4 Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1AA8BAC Offset: 0x1AA8BAC VA: 0x1AA8BAC
	public bool IsSearchVals(int v) { }

	// RVA: 0x1AA8C30 Offset: 0x1AA8C30 VA: 0x1AA8C30
	public bool IsSearchVals(int[] vList) { }

	// RVA: 0x1AA8D14 Offset: 0x1AA8D14 VA: 0x1AA8D14
	public bool IsRestriction(int v) { }

	// RVA: 0x1AA8DA8 Offset: 0x1AA8DA8 VA: 0x1AA8DA8
	public bool IsRestriction(int[] vList) { }

	// RVA: 0x1AA8E64 Offset: 0x1AA8E64 VA: 0x1AA8E64
	public int getTotalCost() { }

	// RVA: 0x1AA8E94 Offset: 0x1AA8E94 VA: 0x1AA8E94
	public string getTitle() { }

	// RVA: 0x1AA9140 Offset: 0x1AA9140 VA: 0x1AA9140
	public bool[] getDeckPositionList() { }

	// RVA: 0x1AA955C Offset: 0x1AA955C VA: 0x1AA955C
	public int GetSpecifiedPosition() { }
}

// Namespace: 
public class RestrictionMaster : DataMasterBase<RestrictionMaster, RestrictionEntity, int> // TypeDefIndex: 7175
{
	// Methods

	// RVA: 0x1AA958C Offset: 0x1AA958C VA: 0x1AA958C
	public void .ctor() { }
}

// Namespace: 
public class ServantAddEntity : DataEntityBase<int> // TypeDefIndex: 7176
{
	// Fields
	public ObscuredInt svtId; // 0x10
	public Dictionary<string, object> script; // 0x20

	// Methods

	// RVA: 0x1B232EC Offset: 0x1B232EC VA: 0x1B232EC
	public void .ctor() { }

	// RVA: 0x1B2333C Offset: 0x1B2333C VA: 0x1B2333C Slot: 5
	protected sealed override int CreatePrimaryKey() { }

	// RVA: 0x1B233AC Offset: 0x1B233AC VA: 0x1B233AC
	public int GetScript(string key, int defaultValue = 0) { }

	// RVA: 0x1B234B0 Offset: 0x1B234B0 VA: 0x1B234B0
	public int GetPresentDialogMessageId() { }

	// RVA: 0x1B23524 Offset: 0x1B23524 VA: 0x1B23524
	public string GetOverwriteServantShortName() { }
}

// Namespace: 
public class ServantAddMaster : DataMasterBase<ServantAddMaster, ServantAddEntity, int> // TypeDefIndex: 7177
{
	// Fields
	public static readonly string PRESENT_DIALOG_MESSAGE_ID; // 0x0

	// Methods

	// RVA: 0x1B23604 Offset: 0x1B23604 VA: 0x1B23604
	public void .ctor() { }

	// RVA: 0x1B23658 Offset: 0x1B23658 VA: 0x1B23658
	private static void .cctor() { }
}

// Namespace: 
public class ServantAnimationOverwriteEntity : DataEntityBase<string> // TypeDefIndex: 7178
{
	// Fields
	public int svtId; // 0x10
	public int svtLimitCount; // 0x14
	public int idx; // 0x18
	public int type; // 0x1C
	public int applyTarget; // 0x20
	public string targetName; // 0x28
	public string overwriteName; // 0x30

	// Methods

	// RVA: 0x1B236B4 Offset: 0x1B236B4 VA: 0x1B236B4
	public void .ctor() { }

	// RVA: 0x1B23704 Offset: 0x1B23704 VA: 0x1B23704 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1B23718 Offset: 0x1B23718 VA: 0x1B23718
	public static string CreatePK(int svtId, int svtLimitCount, int idx) { }

	// RVA: 0x1B2372C Offset: 0x1B2372C VA: 0x1B2372C
	public bool IsLimitCountMatch(int limit) { }

	// RVA: 0x1B23748 Offset: 0x1B23748 VA: 0x1B23748
	public bool IsApplyTargetMatch(int target) { }
}

// Namespace: 
public enum ServantAnimationOverwriteEntity.PhaseType // TypeDefIndex: 7179
{
	// Fields
	public int value__; // 0x0
	public const ServantAnimationOverwriteEntity.PhaseType NONE = 0;
	public const ServantAnimationOverwriteEntity.PhaseType TACTICAL = 1;
	public const ServantAnimationOverwriteEntity.PhaseType COMMAND = 2;
	public const ServantAnimationOverwriteEntity.PhaseType BATTLE = 3;
}

// Namespace: 
public enum ServantAnimationOverwriteEntity.ApplyType // TypeDefIndex: 7180
{
	// Fields
	public int value__; // 0x0
	public const ServantAnimationOverwriteEntity.ApplyType NONE = 0;
	public const ServantAnimationOverwriteEntity.ApplyType PLAYER = 1;
	public const ServantAnimationOverwriteEntity.ApplyType ENEMY = 2;
	public const ServantAnimationOverwriteEntity.ApplyType ALL = 3;
}

// Namespace: 
public class ServantAnimationOverwriteMaster : DataMasterBase<ServantAnimationOverwriteMaster, ServantAnimationOverwriteEntity, string> // TypeDefIndex: 7181
{
	// Properties
	public static ServantAnimationOverwriteMaster Master { get; }

	// Methods

	// RVA: 0x1B23764 Offset: 0x1B23764 VA: 0x1B23764
	public void .ctor() { }

	// RVA: 0x1B237B8 Offset: 0x1B237B8 VA: 0x1B237B8
	public ServantAnimationOverwriteEntity GetEntity(int svtId, int svtLimitCount, int idx) { }

	// RVA: 0x1B2383C Offset: 0x1B2383C VA: 0x1B2383C
	public bool TryGetEntity(out ServantAnimationOverwriteEntity entity, int svtId, int svtLimitCount, int idx) { }

	// RVA: 0x1B238C8 Offset: 0x1B238C8 VA: 0x1B238C8
	public static ServantAnimationOverwriteMaster get_Master() { }

	// RVA: 0x1B23934 Offset: 0x1B23934 VA: 0x1B23934
	public ServantAnimationOverwriteEntity[] GetList(int svtId, int limitCount, bool isEnemy) { }

	// RVA: 0x1B23A7C Offset: 0x1B23A7C VA: 0x1B23A7C
	private bool IsSvtMatch(DataEntityBase baseEnt, int svtId, int limit, int target) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEEA0 Offset: 0xCAEEA0 VA: 0xCAEEA0
private sealed class ServantAnimationOverwriteMaster.<GetList>c__AnonStorey0 // TypeDefIndex: 7182
{
	// Fields
	internal int svtId; // 0x10
	internal int limitCount; // 0x14
	internal int applyTarget; // 0x18
	internal ServantAnimationOverwriteMaster $this; // 0x20

	// Methods

	// RVA: 0x1B23A74 Offset: 0x1B23A74 VA: 0x1B23A74
	public void .ctor() { }

	// RVA: 0x1B23B60 Offset: 0x1B23B60 VA: 0x1B23B60
	internal bool <>m__0(DataEntityBase x) { }
}

// Namespace: 
public class ServantAppendPassiveSkillEntity : DataEntityBase<string> // TypeDefIndex: 7183
{
	// Fields
	public int svtId; // 0x10
	public int num; // 0x14
	public int priority; // 0x18
	public int skillId; // 0x1C

	// Methods

	// RVA: 0x1B23BAC Offset: 0x1B23BAC VA: 0x1B23BAC
	public void .ctor() { }

	// RVA: 0x1B23BFC Offset: 0x1B23BFC VA: 0x1B23BFC Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1B23C10 Offset: 0x1B23C10 VA: 0x1B23C10
	public static string CreatePK(int svtId, int num, int priority) { }

	// RVA: 0x1B23C24 Offset: 0x1B23C24 VA: 0x1B23C24
	public void GetEffectExplanation(out string title, out string explanation, int skillLv) { }
}

// Namespace: 
public class ServantAppendPassiveSkillMaster : DataMasterBase<ServantAppendPassiveSkillMaster, ServantAppendPassiveSkillEntity, string> // TypeDefIndex: 7184
{
	// Fields
	protected Dictionary<string, ServantAppendPassiveSkillEntity[]> listCache; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xCC1B68 Offset: 0xCC1B68 VA: 0xCC1B68
	private static Comparison<ServantAppendPassiveSkillEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1B23D64 Offset: 0x1B23D64 VA: 0x1B23D64
	public void .ctor() { }

	// RVA: 0x1B23DE0 Offset: 0x1B23DE0 VA: 0x1B23DE0
	public ServantAppendPassiveSkillEntity GetEntity(int svtId, int num, int priority) { }

	// RVA: 0x1B23E64 Offset: 0x1B23E64 VA: 0x1B23E64
	public bool TryGetEntity(out ServantAppendPassiveSkillEntity entity, int svtId, int num, int priority) { }

	// RVA: 0x1B23EF0 Offset: 0x1B23EF0 VA: 0x1B23EF0
	private string CreateTempKey(int svtId, int num) { }

	// RVA: 0x1B23F98 Offset: 0x1B23F98 VA: 0x1B23F98 Slot: 6
	public override bool preProcess() { }

	// RVA: 0x1B244F4 Offset: 0x1B244F4 VA: 0x1B244F4
	public ServantAppendPassiveSkillEntity[] GetEntityListFromSvtId(int svtId) { }

	// RVA: 0x1B246C4 Offset: 0x1B246C4 VA: 0x1B246C4
	public ServantAppendPassiveSkillEntity GetEntityFromIdNum(int svtId, int num) { }

	// RVA: 0x1B24794 Offset: 0x1B24794 VA: 0x1B24794
	public void GetAppendPassiveSkillInfo(out int[] idList, out string[] titleList, out string[] explanationList, out bool[] releaseStateList, out int[] lvList, int svtId, long userId, long userSvtId = 0) { }

	// RVA: 0x1B24FE0 Offset: 0x1B24FE0 VA: 0x1B24FE0
	public SvtUseSkillData GetSkillData(int svtId) { }

	// RVA: 0x1B25208 Offset: 0x1B25208 VA: 0x1B25208
	public void GetAppendPassiveSkillInfo(out int[] idList, out string[] titleList, out string[] explanationList, out bool[] releaseStateList, out int[] lvList, int svtId, int[] releaseSkillIds, int[] releaseSkillLvs) { }

	[CompilerGeneratedAttribute] // RVA: 0xD37D3C Offset: 0xD37D3C VA: 0xD37D3C
	// RVA: 0x1B258E0 Offset: 0x1B258E0 VA: 0x1B258E0
	private static int <preProcess>m__0(ServantAppendPassiveSkillEntity a, ServantAppendPassiveSkillEntity b) { }
}

// Namespace: 
public class ServantCardEntity : DataEntityBase<string> // TypeDefIndex: 7185
{
	// Fields
	public int svtId; // 0x10
	public int cardId; // 0x14
	public int motion; // 0x18
	public int[] normalDamage; // 0x20
	public int[] singleDamage; // 0x28
	public int[] trinityDamage; // 0x30
	public int[] unisonDamage; // 0x38
	public int[] grandDamage; // 0x40
	public int attackType; // 0x48
	public int[] attackIndividuality; // 0x50

	// Methods

	// RVA: 0x1988DC4 Offset: 0x1988DC4 VA: 0x1988DC4
	public void .ctor() { }

	// RVA: 0x1988E14 Offset: 0x1988E14 VA: 0x1988E14 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1988E24 Offset: 0x1988E24 VA: 0x1988E24
	public static string CreatePK(int svtId, int cardId) { }
}

// Namespace: 
public class ServantCardMaster : DataMasterBase<ServantCardMaster, ServantCardEntity, string> // TypeDefIndex: 7186
{
	// Methods

	// RVA: 0x1988E34 Offset: 0x1988E34 VA: 0x1988E34
	public void .ctor() { }

	// RVA: 0x1988E88 Offset: 0x1988E88 VA: 0x1988E88
	public ServantCardEntity GetEntity(int svtId, int cardId) { }

	// RVA: 0x1988EFC Offset: 0x1988EFC VA: 0x1988EFC
	public bool TryGetEntity(out ServantCardEntity entity, int svtId, int cardId) { }
}

