	private X509CertificateCollection BuildCertificatesCollection(string storeName) { }
}

// Namespace: Mono.Security.X509
internal sealed class X509StoreManager // TypeDefIndex: 149
{
	// Fields
	private static X509Stores _userStore; // 0x0
	private static X509Stores _machineStore; // 0x8

	// Properties
	public static X509Stores CurrentUser { get; }
	public static X509Stores LocalMachine { get; }
	public static X509CertificateCollection TrustedRootCertificates { get; }

	// Methods

	// RVA: 0x22751B0 Offset: 0x22751B0 VA: 0x22751B0
	public static X509Stores get_CurrentUser() { }

	// RVA: 0x22752D8 Offset: 0x22752D8 VA: 0x22752D8
	public static X509Stores get_LocalMachine() { }

	// RVA: 0x22753D0 Offset: 0x22753D0 VA: 0x22753D0
	public static X509CertificateCollection get_TrustedRootCertificates() { }
}

// Namespace: Mono.Security.X509
internal class X509Stores // TypeDefIndex: 150
{
	// Fields
	private string _storePath; // 0x10
	private X509Store _trusted; // 0x18

	// Properties
	public X509Store TrustedRoot { get; }

	// Methods

	// RVA: 0x22752AC Offset: 0x22752AC VA: 0x22752AC
	internal void .ctor(string path) { }

	// RVA: 0x22754FC Offset: 0x22754FC VA: 0x22754FC
	public X509Store get_TrustedRoot() { }
}

// Namespace: Mono.Security
[DefaultMemberAttribute] // RVA: 0xBC40D8 Offset: 0xBC40D8 VA: 0xBC40D8
internal class ASN1 // TypeDefIndex: 151
{
	// Fields
	private byte m_nTag; // 0x10
	private byte[] m_aValue; // 0x18
	private ArrayList elist; // 0x20

	// Properties
	public int Count { get; }
	public byte Tag { get; }
	public int Length { get; }
	public byte[] Value { get; set; }
	public ASN1 Item { get; }

	// Methods

	// RVA: 0x270497C Offset: 0x270497C VA: 0x270497C
	public void .ctor(byte tag) { }

	// RVA: 0x27049AC Offset: 0x27049AC VA: 0x27049AC
	public void .ctor(byte tag, byte[] data) { }

	// RVA: 0x27049E8 Offset: 0x27049E8 VA: 0x27049E8
	public void .ctor(byte[] data) { }

	// RVA: 0x2704CDC Offset: 0x2704CDC VA: 0x2704CDC
	public int get_Count() { }

	// RVA: 0x2704CF8 Offset: 0x2704CF8 VA: 0x2704CF8
	public byte get_Tag() { }

	// RVA: 0x2704D00 Offset: 0x2704D00 VA: 0x2704D00
	public int get_Length() { }

	// RVA: 0x2704D18 Offset: 0x2704D18 VA: 0x2704D18
	public byte[] get_Value() { }

	// RVA: 0x2704E08 Offset: 0x2704E08 VA: 0x2704E08
	public void set_Value(byte[] value) { }

	// RVA: 0x2704EDC Offset: 0x2704EDC VA: 0x2704EDC
	private bool CompareArray(byte[] array1, byte[] array2) { }

	// RVA: 0x2704FAC Offset: 0x2704FAC VA: 0x2704FAC
	public bool CompareValue(byte[] value) { }

	// RVA: 0x2704FC0 Offset: 0x2704FC0 VA: 0x2704FC0
	public ASN1 Add(ASN1 asn1) { }

	// RVA: 0x2705060 Offset: 0x2705060 VA: 0x2705060 Slot: 4
	public virtual byte[] GetBytes() { }

	// RVA: 0x2704BA4 Offset: 0x2704BA4 VA: 0x2704BA4
	protected void Decode(byte[] asn1, ref int anPos, int anLength) { }

	// RVA: 0x2705844 Offset: 0x2705844 VA: 0x2705844
	protected void DecodeTLV(byte[] asn1, ref int pos, out byte tag, out int length, out byte[] content) { }

	// RVA: 0x27059B4 Offset: 0x27059B4 VA: 0x27059B4
	public ASN1 get_Item(int index) { }

	// RVA: 0x2705B4C Offset: 0x2705B4C VA: 0x2705B4C
	public ASN1 Element(int index, byte anTag) { }

	// RVA: 0x2705D10 Offset: 0x2705D10 VA: 0x2705D10 Slot: 3
	public override string ToString() { }
}

// Namespace: Mono.Security
internal static class ASN1Convert // TypeDefIndex: 152
{
	// Methods

	// RVA: 0x2705FC4 Offset: 0x2705FC4 VA: 0x2705FC4
	public static ASN1 FromInt32(int value) { }

	// RVA: 0x270615C Offset: 0x270615C VA: 0x270615C
	public static ASN1 FromOid(string oid) { }

	// RVA: 0x2706238 Offset: 0x2706238 VA: 0x2706238
	public static ASN1 FromUnsignedBigInteger(byte[] big) { }

	// RVA: 0x2706350 Offset: 0x2706350 VA: 0x2706350
	public static int ToInt32(ASN1 asn1) { }

	// RVA: 0x2706498 Offset: 0x2706498 VA: 0x2706498
	public static string ToOid(ASN1 asn1) { }

	// RVA: 0x27067E4 Offset: 0x27067E4 VA: 0x27067E4
	public static DateTime ToDateTime(ASN1 time) { }
}

// Namespace: Mono.Security
internal sealed class BitConverterLE // TypeDefIndex: 153
{
	// Methods

	// RVA: 0x2709DD4 Offset: 0x2709DD4 VA: 0x2709DD4
	private static byte[] GetUIntBytes(byte* bytes) { }

	// RVA: 0x2709F80 Offset: 0x2709F80 VA: 0x2709F80
	private static byte[] GetULongBytes(byte* bytes) { }

	// RVA: 0x2706138 Offset: 0x2706138 VA: 0x2706138
	internal static byte[] GetBytes(int value) { }

	// RVA: 0x270A24C Offset: 0x270A24C VA: 0x270A24C
	internal static byte[] GetBytes(float value) { }

	// RVA: 0x270A270 Offset: 0x270A270 VA: 0x270A270
	internal static byte[] GetBytes(double value) { }

	// RVA: 0x270A294 Offset: 0x270A294 VA: 0x270A294
	private static void UShortFromBytes(byte* dst, byte[] src, int startIndex) { }

	// RVA: 0x270A3C0 Offset: 0x270A3C0 VA: 0x270A3C0
	private static void UIntFromBytes(byte* dst, byte[] src, int startIndex) { }

	// RVA: 0x270A5AC Offset: 0x270A5AC VA: 0x270A5AC
	private static void ULongFromBytes(byte* dst, byte[] src, int startIndex) { }

	// RVA: 0x270A6D8 Offset: 0x270A6D8 VA: 0x270A6D8
	internal static short ToInt16(byte[] value, int startIndex) { }

	// RVA: 0x2707310 Offset: 0x2707310 VA: 0x2707310
	internal static int ToInt32(byte[] value, int startIndex) { }

	// RVA: 0x27072D8 Offset: 0x27072D8 VA: 0x27072D8
	internal static ushort ToUInt16(byte[] value, int startIndex) { }

	// RVA: 0x2707348 Offset: 0x2707348 VA: 0x2707348
	internal static uint ToUInt32(byte[] value, int startIndex) { }

	// RVA: 0x270A710 Offset: 0x270A710 VA: 0x270A710
	internal static float ToSingle(byte[] value, int startIndex) { }

	// RVA: 0x270A748 Offset: 0x270A748 VA: 0x270A748
	internal static double ToDouble(byte[] value, int startIndex) { }
}

// Namespace: Mono.Security
internal sealed class PKCS7 // TypeDefIndex: 154
{}

// Namespace: 
public class PKCS7.ContentInfo // TypeDefIndex: 155
{
	// Fields
	private string contentType; // 0x10
	private ASN1 content; // 0x18

	// Properties
	public ASN1 ASN1 { get; }
	public ASN1 Content { get; set; }
	public string ContentType { get; set; }

	// Methods

	// RVA: 0x25D0854 Offset: 0x25D0854 VA: 0x25D0854
	public void .ctor() { }

	// RVA: 0x25D08C4 Offset: 0x25D08C4 VA: 0x25D08C4
	public void .ctor(string oid) { }

	// RVA: 0x25D08EC Offset: 0x25D08EC VA: 0x25D08EC
	public void .ctor(byte[] data) { }

	// RVA: 0x25D0960 Offset: 0x25D0960 VA: 0x25D0960
	public void .ctor(ASN1 asn1) { }

	// RVA: 0x25D0B9C Offset: 0x25D0B9C VA: 0x25D0B9C
	public ASN1 get_ASN1() { }

	// RVA: 0x25D0C70 Offset: 0x25D0C70 VA: 0x25D0C70
	public ASN1 get_Content() { }

	// RVA: 0x25D0C78 Offset: 0x25D0C78 VA: 0x25D0C78
	public void set_Content(ASN1 value) { }

	// RVA: 0x25D0C80 Offset: 0x25D0C80 VA: 0x25D0C80
	public string get_ContentType() { }

	// RVA: 0x25D0C88 Offset: 0x25D0C88 VA: 0x25D0C88
	public void set_ContentType(string value) { }

	// RVA: 0x25D0BA0 Offset: 0x25D0BA0 VA: 0x25D0BA0
	internal ASN1 GetASN1() { }
}

// Namespace: 
public class PKCS7.EncryptedData // TypeDefIndex: 156
{
	// Fields
	private byte _version; // 0x10
	private PKCS7.ContentInfo _content; // 0x18
	private PKCS7.ContentInfo _encryptionAlgorithm; // 0x20
	private byte[] _encrypted; // 0x28

	// Properties
	public PKCS7.ContentInfo EncryptionAlgorithm { get; }
	public byte[] EncryptedContent { get; }

	// Methods

	// RVA: 0x25D0C90 Offset: 0x25D0C90 VA: 0x25D0C90
	public void .ctor() { }

	// RVA: 0x25D0CB8 Offset: 0x25D0CB8 VA: 0x25D0CB8
	public void .ctor(ASN1 asn1) { }

	// RVA: 0x25D1094 Offset: 0x25D1094 VA: 0x25D1094
	public PKCS7.ContentInfo get_EncryptionAlgorithm() { }

	// RVA: 0x25D109C Offset: 0x25D109C VA: 0x25D109C
	public byte[] get_EncryptedContent() { }
}

// Namespace: 
public class PKCS7.SignedData // TypeDefIndex: 157
{
	// Fields
	private byte version; // 0x10
	private string hashAlgorithm; // 0x18
	private PKCS7.ContentInfo contentInfo; // 0x20
	private X509CertificateCollection certs; // 0x28
	private ArrayList crls; // 0x30
	private PKCS7.SignerInfo signerInfo; // 0x38
	private bool mda; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xBCB4E4 Offset: 0xBCB4E4 VA: 0xBCB4E4
	private static Dictionary<string, int> <>f__switch$map16; // 0x0

	// Properties
	public X509CertificateCollection Certificates { get; }
	public PKCS7.ContentInfo ContentInfo { get; }
	public string HashName { set; }
	public PKCS7.SignerInfo SignerInfo { get; }

	// Methods

	// RVA: 0x25D1168 Offset: 0x25D1168 VA: 0x25D1168
	public void .ctor(ASN1 asn1) { }

	// RVA: 0x25D23D4 Offset: 0x25D23D4 VA: 0x25D23D4
	public X509CertificateCollection get_Certificates() { }

	// RVA: 0x25D23DC Offset: 0x25D23DC VA: 0x25D23DC
	public PKCS7.ContentInfo get_ContentInfo() { }

	// RVA: 0x25D2398 Offset: 0x25D2398 VA: 0x25D2398
	public void set_HashName(string value) { }

	// RVA: 0x25D23EC Offset: 0x25D23EC VA: 0x25D23EC
	public PKCS7.SignerInfo get_SignerInfo() { }

	// RVA: 0x25D20F8 Offset: 0x25D20F8 VA: 0x25D20F8
	internal string OidToName(string oid) { }
}

// Namespace: 
public class PKCS7.SignerInfo // TypeDefIndex: 158
{
	// Fields
	private byte version; // 0x10
	private string hashAlgorithm; // 0x18
	private ArrayList authenticatedAttributes; // 0x20
	private ArrayList unauthenticatedAttributes; // 0x28
	private byte[] signature; // 0x30
	private string issuer; // 0x38
	private byte[] serial; // 0x40
	private byte[] ski; // 0x48

	// Properties
	public string IssuerName { get; }
	public byte[] SerialNumber { get; }
	public ArrayList AuthenticatedAttributes { get; }
	public string HashName { get; set; }
	public byte[] Signature { get; }
	public ArrayList UnauthenticatedAttributes { get; }
	public byte Version { get; }

	// Methods

	// RVA: 0x25D205C Offset: 0x25D205C VA: 0x25D205C
	public void .ctor() { }

	// RVA: 0x25D1AB8 Offset: 0x25D1AB8 VA: 0x25D1AB8
	public void .ctor(ASN1 asn1) { }

	// RVA: 0x25D253C Offset: 0x25D253C VA: 0x25D253C
	public string get_IssuerName() { }

	// RVA: 0x25D2544 Offset: 0x25D2544 VA: 0x25D2544
	public byte[] get_SerialNumber() { }

	// RVA: 0x25D23CC Offset: 0x25D23CC VA: 0x25D23CC
	public ArrayList get_AuthenticatedAttributes() { }

	// RVA: 0x25D20F0 Offset: 0x25D20F0 VA: 0x25D20F0
	public string get_HashName() { }

	// RVA: 0x25D23E4 Offset: 0x25D23E4 VA: 0x25D23E4
	public void set_HashName(string value) { }

	// RVA: 0x25D2610 Offset: 0x25D2610 VA: 0x25D2610
	public byte[] get_Signature() { }

	// RVA: 0x25D26DC Offset: 0x25D26DC VA: 0x25D26DC
	public ArrayList get_UnauthenticatedAttributes() { }

	// RVA: 0x25D26E4 Offset: 0x25D26E4 VA: 0x25D26E4
	public byte get_Version() { }
}

// Namespace: Mono.Security
internal sealed class StrongName // TypeDefIndex: 159
{
	// Fields
	private RSA rsa; // 0x10
	private byte[] publicKey; // 0x18
	private byte[] keyToken; // 0x20
	private string tokenAlgorithm; // 0x28
	private static object lockObject; // 0x0
	private static bool initialized; // 0x8

	// Properties
	public RSA RSA { set; }
	public byte[] PublicKey { get; }
	public byte[] PublicKeyToken { get; }
	public string TokenAlgorithm { get; }

	// Methods

	// RVA: 0x25D26EC Offset: 0x25D26EC VA: 0x25D26EC
	public void .ctor(byte[] data) { }

	// RVA: 0x25D28C4 Offset: 0x25D28C4 VA: 0x25D28C4
	public void .ctor(RSA rsa) { }

	// RVA: 0x25D296C Offset: 0x25D296C VA: 0x25D296C
	private static void .cctor() { }

	// RVA: 0x25D29E4 Offset: 0x25D29E4 VA: 0x25D29E4
	private void InvalidateCache() { }

	// RVA: 0x25D28B8 Offset: 0x25D28B8 VA: 0x25D28B8
	public void set_RSA(RSA value) { }

	// RVA: 0x25D29EC Offset: 0x25D29EC VA: 0x25D29EC
	public byte[] get_PublicKey() { }

	// RVA: 0x25D2F38 Offset: 0x25D2F38 VA: 0x25D2F38
	public byte[] get_PublicKeyToken() { }

	// RVA: 0x25D30F8 Offset: 0x25D30F8 VA: 0x25D30F8
	public string get_TokenAlgorithm() { }
}

// Namespace: Mono.Xml
internal class SecurityParser : SmallXmlParser, SmallXmlParser.IContentHandler // TypeDefIndex: 160
{
	// Fields
	private SecurityElement root; // 0x68
	private SecurityElement current; // 0x70
	private Stack stack; // 0x78

	// Methods

	// RVA: 0x22755C0 Offset: 0x22755C0 VA: 0x22755C0
	public void .ctor() { }

	// RVA: 0x2275710 Offset: 0x2275710 VA: 0x2275710
	public void LoadXml(string xml) { }

	// RVA: 0x22759D8 Offset: 0x22759D8 VA: 0x22759D8
	public SecurityElement ToXml() { }

	// RVA: 0x22759E0 Offset: 0x22759E0 VA: 0x22759E0 Slot: 4
	public void OnStartParsing(SmallXmlParser parser) { }

	// RVA: 0x22759E4 Offset: 0x22759E4 VA: 0x22759E4 Slot: 8
	public void OnProcessingInstruction(string name, string text) { }

	// RVA: 0x22759E8 Offset: 0x22759E8 VA: 0x22759E8 Slot: 10
	public void OnIgnorableWhitespace(string s) { }

	// RVA: 0x22759EC Offset: 0x22759EC VA: 0x22759EC Slot: 6
	public void OnStartElement(string name, SmallXmlParser.IAttrList attrs) { }

	// RVA: 0x2275D1C Offset: 0x2275D1C VA: 0x2275D1C Slot: 7
	public void OnEndElement(string name) { }

	// RVA: 0x2275DF0 Offset: 0x2275DF0 VA: 0x2275DF0 Slot: 9
	public void OnChars(string ch) { }

	// RVA: 0x2275E88 Offset: 0x2275E88 VA: 0x2275E88 Slot: 5
	public void OnEndParsing(SmallXmlParser parser) { }
}

// Namespace: Mono.Xml
internal class SmallXmlParser // TypeDefIndex: 161
{
	// Fields
	private SmallXmlParser.IContentHandler handler; // 0x10
	private TextReader reader; // 0x18
	private Stack elementNames; // 0x20
	private Stack xmlSpaces; // 0x28
	private string xmlSpace; // 0x30
	private StringBuilder buffer; // 0x38
	private char[] nameBuffer; // 0x40
	private bool isWhitespace; // 0x48
	private SmallXmlParser.AttrListImpl attributes; // 0x50
	private int line; // 0x58
	private int column; // 0x5C
	private bool resetColumn; // 0x60
	[CompilerGeneratedAttribute] // RVA: 0xBCB4F4 Offset: 0xBCB4F4 VA: 0xBCB4F4
	private static Dictionary<string, int> <>f__switch$map18; // 0x0

	// Methods

	// RVA: 0x2275628 Offset: 0x2275628 VA: 0x2275628
	public void .ctor() { }

	// RVA: 0x2275F0C Offset: 0x2275F0C VA: 0x2275F0C
	private Exception Error(string msg) { }

	// RVA: 0x2276074 Offset: 0x2276074 VA: 0x2276074
	private Exception UnexpectedEndError() { }

	// RVA: 0x2276180 Offset: 0x2276180 VA: 0x2276180
	private bool IsNameChar(char c, bool start) { }

	// RVA: 0x22762FC Offset: 0x22762FC VA: 0x22762FC
	private bool IsWhitespace(int c) { }

	// RVA: 0x227632C Offset: 0x227632C VA: 0x227632C
	public void SkipWhitespaces() { }

	// RVA: 0x227640C Offset: 0x227640C VA: 0x227640C
	private void HandleWhitespaces() { }

	// RVA: 0x2276334 Offset: 0x2276334 VA: 0x2276334
	public void SkipWhitespaces(bool expected) { }

	// RVA: 0x2276578 Offset: 0x2276578 VA: 0x2276578
	private int Peek() { }

	// RVA: 0x22764FC Offset: 0x22764FC VA: 0x22764FC
	private int Read() { }

	// RVA: 0x22765AC Offset: 0x22765AC VA: 0x22765AC
	public void Expect(int c) { }

	// RVA: 0x22766BC Offset: 0x22766BC VA: 0x22766BC
	private string ReadUntil(char until, bool handleReferences) { }

	// RVA: 0x2276B00 Offset: 0x2276B00 VA: 0x2276B00
	public string ReadName() { }

	// RVA: 0x22757AC Offset: 0x22757AC VA: 0x22757AC
	public void Parse(TextReader input, SmallXmlParser.IContentHandler handler) { }

	// RVA: 0x2277890 Offset: 0x2277890 VA: 0x2277890
	private void Cleanup() { }

	// RVA: 0x2276DC4 Offset: 0x2276DC4 VA: 0x2276DC4
	public void ReadContent() { }

	// RVA: 0x227771C Offset: 0x227771C VA: 0x227771C
	private void HandleBufferedContent() { }

	// RVA: 0x2277D38 Offset: 0x2277D38 VA: 0x2277D38
	private void ReadCharacters() { }

	// RVA: 0x22767F0 Offset: 0x22767F0 VA: 0x22767F0
	private void ReadReference() { }

	// RVA: 0x2277DDC Offset: 0x2277DDC VA: 0x2277DDC
	private int ReadCharacterReference() { }

	// RVA: 0x2277B94 Offset: 0x2277B94 VA: 0x2277B94
	private void ReadAttribute(SmallXmlParser.AttrListImpl a) { }

	// RVA: 0x2277998 Offset: 0x2277998 VA: 0x2277998
	private void ReadCDATASection() { }

	// RVA: 0x2277AE0 Offset: 0x2277AE0 VA: 0x2277AE0
	private void ReadComment() { }
}

// Namespace: 
public interface SmallXmlParser.IContentHandler // TypeDefIndex: 162
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnStartParsing(SmallXmlParser parser);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void OnEndParsing(SmallXmlParser parser);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void OnStartElement(string name, SmallXmlParser.IAttrList attrs);

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void OnEndElement(string name);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void OnProcessingInstruction(string name, string text);

	// RVA: -1 Offset: -1 Slot: 5
	public abstract void OnChars(string text);

	// RVA: -1 Offset: -1 Slot: 6
	public abstract void OnIgnorableWhitespace(string text);
}

// Namespace: 
public interface SmallXmlParser.IAttrList // TypeDefIndex: 163
{
	// Properties
	public abstract int Length { get; }
	public abstract string[] Names { get; }
	public abstract string[] Values { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract int get_Length();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract string GetName(int i);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract string GetValue(int i);

	// RVA: -1 Offset: -1 Slot: 3
	public abstract string GetValue(string name);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract string[] get_Names();

	// RVA: -1 Offset: -1 Slot: 5
	public abstract string[] get_Values();
}

// Namespace: 
private class SmallXmlParser.AttrListImpl : SmallXmlParser.IAttrList // TypeDefIndex: 164
{
	// Fields
	private ArrayList attrNames; // 0x10
	private ArrayList attrValues; // 0x18

	// Properties
	public int Length { get; }
	public string[] Names { get; }
	public string[] Values { get; }

	// Methods

	// RVA: 0x2275E8C Offset: 0x2275E8C VA: 0x2275E8C
	public void .ctor() { }

	// RVA: 0x2277FEC Offset: 0x2277FEC VA: 0x2277FEC Slot: 4
	public int get_Length() { }

	// RVA: 0x2278024 Offset: 0x2278024 VA: 0x2278024 Slot: 5
	public string GetName(int i) { }

	// RVA: 0x22780FC Offset: 0x22780FC VA: 0x22780FC Slot: 6
	public string GetValue(int i) { }

	// RVA: 0x22781D4 Offset: 0x22781D4 VA: 0x22781D4 Slot: 7
	public string GetValue(string name) { }

	// RVA: 0x22783B0 Offset: 0x22783B0 VA: 0x22783B0 Slot: 8
	public string[] get_Names() { }

	// RVA: 0x22784D0 Offset: 0x22784D0 VA: 0x22784D0 Slot: 9
	public string[] get_Values() { }

	// RVA: 0x2277938 Offset: 0x2277938 VA: 0x2277938
	internal void Clear() { }

	// RVA: 0x2277EF8 Offset: 0x2277EF8 VA: 0x2277EF8
	internal void Add(string name, string value) { }
}

// Namespace: Mono.Xml
internal class SmallXmlParserException : SystemException // TypeDefIndex: 165
{
	// Fields
	private int line; // 0x60
	private int column; // 0x64

	// Methods

	// RVA: 0x2275F88 Offset: 0x2275F88 VA: 0x2275F88
	public void .ctor(string msg, int line, int column) { }
}

// Namespace: Mono
internal class Runtime // TypeDefIndex: 166
{
	// Methods

	// RVA: 0x2704978 Offset: 0x2704978 VA: 0x2704978
	internal static string GetDisplayName() { }
}

// Namespace: System.Collections.Generic
internal sealed class CollectionDebuggerView<T> // TypeDefIndex: 167
{}

// Namespace: System.Collections.Generic
internal sealed class CollectionDebuggerView<T, U> // TypeDefIndex: 168
{}

// Namespace: System.Collections.Generic
[Serializable]
public abstract class Comparer<T> : IComparer<T>, IComparer // TypeDefIndex: 169
{
	// Fields
	private static readonly Comparer<T> _default; // 0x0

	// Properties
	public static Comparer<T> Default { get; }

	// Methods

	// RVA: -1 Offset: -1
	protected void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2296038 Offset: 0x2296038 VA: 0x2296038
	|-Comparer<AStarSearch.Node>..ctor
	|
	|-RVA: 0x229663C Offset: 0x229663C VA: 0x229663C
	|-Comparer<BattleCommandSealStatus.Status>..ctor
	|
	|-RVA: 0x2296C40 Offset: 0x2296C40 VA: 0x2296C40
	|-Comparer<BattleLogic.LOGICTYPE>..ctor
	|
	|-RVA: 0x2297244 Offset: 0x2297244 VA: 0x2297244
	|-Comparer<BattleLogic.SummonInfo>..ctor
	|
	|-RVA: 0x2297848 Offset: 0x2297848 VA: 0x2297848
	|-Comparer<BattleResultEventItemComponent.EventDropItemInfo>..ctor
	|
	|-RVA: 0x2297E78 Offset: 0x2297E78 VA: 0x2297E78
	|-Comparer<BattleRetryConfirmComponent.RetryConfirmItemStr>..ctor
	|
	|-RVA: 0x22984A8 Offset: 0x22984A8 VA: 0x22984A8
	|-Comparer<BezierControlPointMode>..ctor
	|
	|-RVA: 0x2298AAC Offset: 0x2298AAC VA: 0x2298AAC
	|-Comparer<BuffList.ACTION>..ctor
	|
	|-RVA: 0x22990B0 Offset: 0x22990B0 VA: 0x22990B0
	|-Comparer<BuffList.TYPE>..ctor
	|
	|-RVA: 0x22996B4 Offset: 0x22996B4 VA: 0x22996B4
	|-Comparer<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>..ctor
	|
	|-RVA: 0x2299CB8 Offset: 0x2299CB8 VA: 0x2299CB8
	|-Comparer<CondType.Kind>..ctor
	|
	|-RVA: 0x229A2BC Offset: 0x229A2BC VA: 0x229A2BC
	|-Comparer<CriAtomExPlayback>..ctor
	|
	|-RVA: 0x229A8C0 Offset: 0x229A8C0 VA: 0x229A8C0
	|-Comparer<CriDisposableObjectManager.ObjectRef>..ctor
	|
	|-RVA: 0x229AEF0 Offset: 0x229AEF0 VA: 0x229AEF0
	|-Comparer<EventRaceMaster.GroupRankData>..ctor
	|
	|-RVA: 0x229B530 Offset: 0x229B530 VA: 0x229B530
	|-Comparer<EventRewardRootComponent.StateType>..ctor
	|
	|-RVA: 0x229BB34 Offset: 0x229BB34 VA: 0x229BB34
	|-Comparer<FuncList.TYPE>..ctor
	|
	|-RVA: 0x229C138 Offset: 0x229C138 VA: 0x229C138
	|-Comparer<FunctionCategoryEntity.GroupType>..ctor
	|
	|-RVA: 0x229C73C Offset: 0x229C73C VA: 0x229C73C
	|-Comparer<ParamDataType>..ctor
	|
	|-RVA: 0x229CD40 Offset: 0x229CD40 VA: 0x229CD40
	|-Comparer<ListViewSort.FilterKind>..ctor
	|
	|-RVA: 0x229D344 Offset: 0x229D344 VA: 0x229D344
	|-Comparer<ListViewSort.PresentBoxCategoryFilterKind>..ctor
	|
	|-RVA: 0x229D948 Offset: 0x229D948 VA: 0x229D948
	|-Comparer<ListViewSort.PresentBoxRarityFilterKind>..ctor
	|
	|-RVA: 0x229DF4C Offset: 0x229DF4C VA: 0x229DF4C
	|-Comparer<ListViewSort.SortKind>..ctor
	|
	|-RVA: 0x229E550 Offset: 0x229E550 VA: 0x229E550
	|-Comparer<NGuiPlayMakerDelegates>..ctor
	|
	|-RVA: 0x229EB54 Offset: 0x229EB54 VA: 0x229EB54
	|-Comparer<PointCloudRegognizer.Point>..ctor
	|
	|-RVA: 0x229F164 Offset: 0x229F164 VA: 0x229F164
	|-Comparer<Rarity.TYPE>..ctor
	|
	|-RVA: 0x229F768 Offset: 0x229F768 VA: 0x229F768
	|-Comparer<ServantStatusListViewItemDraw.Kind>..ctor
	|
	|-RVA: 0x229FD6C Offset: 0x229FD6C VA: 0x229FD6C
	|-Comparer<SoundPlayerListViewItem.BgmReleaseData>..ctor
	|
	|-RVA: 0x22A0374 Offset: 0x22A0374 VA: 0x22A0374
	|-Comparer<SvtClassAttri.TYPE>..ctor
	|
	|-RVA: 0x22A0978 Offset: 0x22A0978 VA: 0x22A0978
	|-Comparer<bool>..ctor
	|
	|-RVA: 0x22A0F84 Offset: 0x22A0F84 VA: 0x22A0F84
	|-Comparer<byte>..ctor
	|
	|-RVA: 0x22A1588 Offset: 0x22A1588 VA: 0x22A1588
	|-Comparer<KeyValuePair<int, int>>..ctor
	|
	|-RVA: 0x22A1B8C Offset: 0x22A1B8C VA: 0x22A1B8C
	|-Comparer<KeyValuePair<int, object>>..ctor
	|
	|-RVA: 0x22A2194 Offset: 0x22A2194 VA: 0x22A2194
	|-Comparer<KeyValuePair<object, object>>..ctor
	|
	|-RVA: 0x22A279C Offset: 0x22A279C VA: 0x22A279C
	|-Comparer<KeyValuePair<object, float>>..ctor
	|
	|-RVA: 0x22A2DA4 Offset: 0x22A2DA4 VA: 0x22A2DA4
	|-Comparer<DateTime>..ctor
	|
	|-RVA: 0x22A33AC Offset: 0x22A33AC VA: 0x22A33AC
	|-Comparer<DateTimeOffset>..ctor
	|
	|-RVA: 0x22A39EC Offset: 0x22A39EC VA: 0x22A39EC
	|-Comparer<Decimal>..ctor
	|
	|-RVA: 0x22A3FF4 Offset: 0x22A3FF4 VA: 0x22A3FF4
	|-Comparer<double>..ctor
	|
	|-RVA: 0x22A4604 Offset: 0x22A4604 VA: 0x22A4604
	|-Comparer<Guid>..ctor
	|
	|-RVA: 0x22A4C0C Offset: 0x22A4C0C VA: 0x22A4C0C
	|-Comparer<int>..ctor
	|
	|-RVA: 0x22A5210 Offset: 0x22A5210 VA: 0x22A5210
	|-Comparer<long>..ctor
	|
	|-RVA: 0x22A5814 Offset: 0x22A5814 VA: 0x22A5814
	|-Comparer<IntPtr>..ctor
	|
	|-RVA: 0x22A5E18 Offset: 0x22A5E18 VA: 0x22A5E18
	|-Comparer<object>..ctor
	|
	|-RVA: 0x22A64C0 Offset: 0x22A64C0 VA: 0x22A64C0
	|-Comparer<CustomAttributeNamedArgument>..ctor
	|
	|-RVA: 0x22A6B00 Offset: 0x22A6B00 VA: 0x22A6B00
	|-Comparer<CustomAttributeTypedArgument>..ctor
	|
	|-RVA: 0x22A7108 Offset: 0x22A7108 VA: 0x22A7108
	|-Comparer<float>..ctor
	|
	|-RVA: 0x22A7718 Offset: 0x22A7718 VA: 0x22A7718
	|-Comparer<TimeSpan>..ctor
	|
	|-RVA: 0x22A7D1C Offset: 0x22A7D1C VA: 0x22A7D1C
	|-Comparer<uint>..ctor
	|
	|-RVA: 0x22A8320 Offset: 0x22A8320 VA: 0x22A8320
	|-Comparer<Target.PlayerTypeFlag>..ctor
	|
	|-RVA: 0x22A8924 Offset: 0x22A8924 VA: 0x22A8924
	|-Comparer<TaskScheduler.PerformanceQueue>..ctor
	|
	|-RVA: 0x22A8F2C Offset: 0x22A8F2C VA: 0x22A8F2C
	|-Comparer<TitleInfoEventItemComponent.DispType>..ctor
	|
	|-RVA: 0x22A9530 Offset: 0x22A9530 VA: 0x22A9530
	|-Comparer<ConstraintSource>..ctor
	|
	|-RVA: 0x22A9B38 Offset: 0x22A9B38 VA: 0x22A9B38
	|-Comparer<AnimatorClipInfo>..ctor
	|
	|-RVA: 0x22AA13C Offset: 0x22AA13C VA: 0x22AA13C
	|-Comparer<BeforeRenderHelper.OrderBlock>..ctor
	|
	|-RVA: 0x22AA744 Offset: 0x22AA744 VA: 0x22AA744
	|-Comparer<Color32>..ctor
	|
	|-RVA: 0x22AAD48 Offset: 0x22AAD48 VA: 0x22AAD48
	|-Comparer<Color>..ctor
	|
	|-RVA: 0x22AB378 Offset: 0x22AB378 VA: 0x22AB378
	|-Comparer<RaycastResult>..ctor
	|
	|-RVA: 0x22AB9B8 Offset: 0x22AB9B8 VA: 0x22AB9B8
	|-Comparer<Rect>..ctor
	|
	|-RVA: 0x22ABFE8 Offset: 0x22ABFE8 VA: 0x22ABFE8
	|-Comparer<RuntimePlatform>..ctor
	|
	|-RVA: 0x22AC5EC Offset: 0x22AC5EC VA: 0x22AC5EC
	|-Comparer<Touch>..ctor
	|
	|-RVA: 0x22ACC2C Offset: 0x22ACC2C VA: 0x22ACC2C
	|-Comparer<UICharInfo>..ctor
	|
	|-RVA: 0x22AD258 Offset: 0x22AD258 VA: 0x22AD258
	|-Comparer<UILineInfo>..ctor
	|
	|-RVA: 0x22AD860 Offset: 0x22AD860 VA: 0x22AD860
	|-Comparer<UIVertex>..ctor
	|
	|-RVA: 0x22ADEA0 Offset: 0x22ADEA0 VA: 0x22ADEA0
	|-Comparer<UnitySynchronizationContext.WorkRequest>..ctor
	|
	|-RVA: 0x22AE4E0 Offset: 0x22AE4E0 VA: 0x22AE4E0
	|-Comparer<Vector2>..ctor
	|
	|-RVA: 0x22AEAF4 Offset: 0x22AEAF4 VA: 0x22AEAF4
	|-Comparer<Vector3>..ctor
	|
	|-RVA: 0x22AF120 Offset: 0x22AF120 VA: 0x22AF120
	|-Comparer<Vector4>..ctor
	|
	|-RVA: 0x22AF750 Offset: 0x22AF750 VA: 0x22AF750
	|-Comparer<Voice.BATTLE>..ctor
	|
	|-RVA: 0x22AFD54 Offset: 0x22AFD54 VA: 0x22AFD54
	|-Comparer<VoiceCondType.Type>..ctor
	|
	|-RVA: 0x22B0358 Offset: 0x22B0358 VA: 0x22B0358
	|-Comparer<WarBoardManager.WarBoardPerformanceQueue>..ctor
	|
	|-RVA: 0x22B0960 Offset: 0x22B0960 VA: 0x22B0960
	|-Comparer<USFGOPlayStandardCutInRandom.CutInData>..ctor
	*/

	// RVA: -1 Offset: -1
	private static void .cctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2296064 Offset: 0x2296064 VA: 0x2296064
	|-Comparer<AStarSearch.Node>..cctor
	|
	|-RVA: 0x2296668 Offset: 0x2296668 VA: 0x2296668
	|-Comparer<BattleCommandSealStatus.Status>..cctor
	|
	|-RVA: 0x2296C6C Offset: 0x2296C6C VA: 0x2296C6C
	|-Comparer<BattleLogic.LOGICTYPE>..cctor
	|
	|-RVA: 0x2297270 Offset: 0x2297270 VA: 0x2297270
	|-Comparer<BattleLogic.SummonInfo>..cctor
	|
	|-RVA: 0x2297874 Offset: 0x2297874 VA: 0x2297874
	|-Comparer<BattleResultEventItemComponent.EventDropItemInfo>..cctor
	|
	|-RVA: 0x2297EA4 Offset: 0x2297EA4 VA: 0x2297EA4
	|-Comparer<BattleRetryConfirmComponent.RetryConfirmItemStr>..cctor
	|
	|-RVA: 0x22984D4 Offset: 0x22984D4 VA: 0x22984D4
	|-Comparer<BezierControlPointMode>..cctor
	|
	|-RVA: 0x2298AD8 Offset: 0x2298AD8 VA: 0x2298AD8
	|-Comparer<BuffList.ACTION>..cctor
	|
	|-RVA: 0x22990DC Offset: 0x22990DC VA: 0x22990DC
	|-Comparer<BuffList.TYPE>..cctor
	|
	|-RVA: 0x22996E0 Offset: 0x22996E0 VA: 0x22996E0
	|-Comparer<CenterEffectDetailDialog.CenterEffectDetailSkillInfo>..cctor
	|
	|-RVA: 0x2299CE4 Offset: 0x2299CE4 VA: 0x2299CE4
	|-Comparer<CondType.Kind>..cctor
	|
	|-RVA: 0x229A2E8 Offset: 0x229A2E8 VA: 0x229A2E8
	|-Comparer<CriAtomExPlayback>..cctor
	|
	|-RVA: 0x229A8EC Offset: 0x229A8EC VA: 0x229A8EC
	|-Comparer<CriDisposableObjectManager.ObjectRef>..cctor
	|
	|-RVA: 0x229AF1C Offset: 0x229AF1C VA: 0x229AF1C
	|-Comparer<EventRaceMaster.GroupRankData>..cctor
	|
	|-RVA: 0x229B55C Offset: 0x229B55C VA: 0x229B55C
	|-Comparer<EventRewardRootComponent.StateType>..cctor
	|
	|-RVA: 0x229BB60 Offset: 0x229BB60 VA: 0x229BB60
	|-Comparer<FuncList.TYPE>..cctor
	|
	|-RVA: 0x229C164 Offset: 0x229C164 VA: 0x229C164
	|-Comparer<FunctionCategoryEntity.GroupType>..cctor
	|
	|-RVA: 0x229C768 Offset: 0x229C768 VA: 0x229C768
	|-Comparer<ParamDataType>..cctor
	|
	|-RVA: 0x229CD6C Offset: 0x229CD6C VA: 0x229CD6C
	|-Comparer<ListViewSort.FilterKind>..cctor
	|
	|-RVA: 0x229D370 Offset: 0x229D370 VA: 0x229D370
	|-Comparer<ListViewSort.PresentBoxCategoryFilterKind>..cctor
	|
	|-RVA: 0x229D974 Offset: 0x229D974 VA: 0x229D974
	|-Comparer<ListViewSort.PresentBoxRarityFilterKind>..cctor
	|
	|-RVA: 0x229DF78 Offset: 0x229DF78 VA: 0x229DF78
	|-Comparer<ListViewSort.SortKind>..cctor
	|
	|-RVA: 0x229E57C Offset: 0x229E57C VA: 0x229E57C
	|-Comparer<NGuiPlayMakerDelegates>..cctor
	|
	|-RVA: 0x229EB80 Offset: 0x229EB80 VA: 0x229EB80
	|-Comparer<PointCloudRegognizer.Point>..cctor
	|
	|-RVA: 0x229F190 Offset: 0x229F190 VA: 0x229F190
	|-Comparer<Rarity.TYPE>..cctor
	|
	|-RVA: 0x229F794 Offset: 0x229F794 VA: 0x229F794
	|-Comparer<ServantStatusListViewItemDraw.Kind>..cctor
	|
	|-RVA: 0x229FD98 Offset: 0x229FD98 VA: 0x229FD98
	|-Comparer<SoundPlayerListViewItem.BgmReleaseData>..cctor
	|
	|-RVA: 0x22A03A0 Offset: 0x22A03A0 VA: 0x22A03A0
	|-Comparer<SvtClassAttri.TYPE>..cctor
	|
	|-RVA: 0x22A09A4 Offset: 0x22A09A4 VA: 0x22A09A4
	|-Comparer<bool>..cctor
	|
	|-RVA: 0x22A0FB0 Offset: 0x22A0FB0 VA: 0x22A0FB0
	|-Comparer<byte>..cctor
	|
	|-RVA: 0x22A15B4 Offset: 0x22A15B4 VA: 0x22A15B4
	|-Comparer<KeyValuePair<int, int>>..cctor
	|
	|-RVA: 0x22A1BB8 Offset: 0x22A1BB8 VA: 0x22A1BB8
	|-Comparer<KeyValuePair<int, object>>..cctor
	|
	|-RVA: 0x22A21C0 Offset: 0x22A21C0 VA: 0x22A21C0
	|-Comparer<KeyValuePair<object, object>>..cctor
	|
	|-RVA: 0x22A27C8 Offset: 0x22A27C8 VA: 0x22A27C8
	|-Comparer<KeyValuePair<object, float>>..cctor
