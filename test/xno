	public static readonly bool DebugNetworkSecurity; // 0x128
	public static readonly string DebugGameServerAddress; // 0x130
	public static readonly string DebugDataServerAddress; // 0x138
	public static readonly string DebugWebServerAddress; // 0x140
	public static readonly bool EventDevNetworkSecurity; // 0x148
	public static readonly string EventDevGameServerAddress; // 0x150
	public static readonly string EventDevDataServerAddress; // 0x158
	public static readonly string EventDevWebServerAddress; // 0x160
	public static readonly bool DevelopNetworkSecurity; // 0x168
	public static readonly string DevelopGameServerAddress; // 0x170
	public static readonly string DevelopDataServerAddress; // 0x178
	public static readonly string DevelopWebServerAddress; // 0x180
	public static readonly bool QaNetworkSecurity; // 0x188
	public static readonly string QaGameServerAddress; // 0x190
	public static readonly string QaDataServerAddress; // 0x198
	public static readonly string QaWebServerAddress; // 0x1A0
	public static readonly bool DevNetworkSecurity; // 0x1A8
	public static readonly string DevGameServerAddress; // 0x1B0
	public static readonly bool PlanNetworkSecurity; // 0x1B8
	public static readonly string PlanGameServerAddress; // 0x1C0
	public static readonly string PlanDataServerAddress; // 0x1C8
	public static readonly bool LimitNetworkSecurity; // 0x1D0
	public static readonly string LimitGameServerAddress; // 0x1D8
	public static readonly string LimitDataServerAddress; // 0x1E0
	public static readonly bool PlayNetworkSecurity; // 0x1E8
	public static readonly string PlayGameServerAddress; // 0x1F0
	public static readonly string PlayDataServerAddress; // 0x1F8
	public static readonly bool DesignNetworkSecurity; // 0x200
	public static readonly string DesignGameServerAddress; // 0x208
	public static readonly string DesignDataServerAddress; // 0x210
	public static readonly bool VersionUpNetworkSecurity; // 0x218
	public static readonly string VersionUp1GameServerAddress; // 0x220
	public static readonly string VersionUp1DataServerAddress; // 0x228
	public static readonly string VersionUpWebServerAddress; // 0x230
	public static readonly bool StressNetworkSecurity; // 0x238
	public static readonly string StressGameServerAddress; // 0x240
	public static readonly string StressDataServerAddress; // 0x248
	public static readonly string DevDataServerAddress; // 0x250
	public static readonly string DevWebServerAddress; // 0x258
	public static readonly string ScriptGameServerAddress; // 0x260
	public static readonly string ScriptDataServerAddress; // 0x268
	public static readonly bool IsTrueTargetPlatform; // 0x270
	public static readonly bool UseClientNetworkParameterCheck; // 0x271
	public static readonly bool IsNetworkMock; // 0x272
	public static readonly string ServerDefaultType; // 0x278
	public static readonly bool UseAppServer; // 0x280
	public static readonly bool UseDebugCommand; // 0x281
	public static readonly bool UseStandaloneAsset; // 0x282
	public static readonly bool UseMock; // 0x283
	public static readonly bool UseWebViewAuthoring; // 0x284

	// Methods

	// RVA: 0x2BAAB48 Offset: 0x2BAAB48 VA: 0x2BAAB48
	public void .ctor() { }

	// RVA: 0x2BAAB50 Offset: 0x2BAAB50 VA: 0x2BAAB50
	private static void .cctor() { }
}

// Namespace: 
public class MdcStr // TypeDefIndex: 6511
{
	// Fields
	protected const int WRITE_BUFFER_SIZE = 16384;

	// Methods

	// RVA: 0x1629EAC Offset: 0x1629EAC VA: 0x1629EAC
	public void .ctor() { }

	// RVA: 0x1629EB4 Offset: 0x1629EB4 VA: 0x1629EB4
	public static string Ec(ref Nullable<uint> crc, string str, uint eorData = 0) { }

	// RVA: 0x162A628 Offset: 0x162A628 VA: 0x162A628
	public static string Dc(string str, uint eorData = 0, Nullable<uint> crc) { }
}

// Namespace: 
public class MemoryWarningReciever : MonoBehaviour // TypeDefIndex: 6512
{
	// Fields
	private float prevExecuteTime; // 0x18
	private int executionCount; // 0x1C
	public float PeriodInterval; // 0x20
	public int PeriodExecutionCount; // 0x24

	// Methods

	// RVA: 0x162BB48 Offset: 0x162BB48 VA: 0x162BB48
	public void .ctor() { }

	// RVA: 0x162BB5C Offset: 0x162BB5C VA: 0x162BB5C
	private void Awake() { }

	// RVA: 0x162BC00 Offset: 0x162BC00 VA: 0x162BC00
	public void DidReceiveMemoryWarning() { }
}

// Namespace: 
public class NetworkManager : SingletonMonoBehaviour<NetworkManager> // TypeDefIndex: 6513
{
	// Fields
	public static readonly string FILE_URL_SCHEME; // 0x0
	protected static readonly long WebCacheTime; // 0x8
	protected static DateTime dtUnixEpoch; // 0x10
	protected static long serverTime; // 0x20
	protected static long serverOffsetTime; // 0x28
	protected static bool isErrorServerTimeLimitOver; // 0x30
	private static long serverTimeChkMovie; // 0x38
	protected static long nowTime; // 0x40
	protected static string userAgent; // 0x48
	protected static string userCreateServer; // 0x50
	protected static string userId; // 0x58
	protected static string authKey; // 0x60
	protected static string secretKey; // 0x68
	protected static string userName; // 0x70
	protected static int genderType; // 0x78
	protected static int month; // 0x7C
	protected static int day; // 0x80
	protected static string sessionId; // 0x88
	protected static bool isRebootBlock; // 0x90
	protected static bool isLogin; // 0x91
	protected static string friendCode; // 0x98
	protected static string registrationVersion; // 0xA0
	protected static string registrationId; // 0xA8
	protected static string serverSettingType; // 0xB0
	protected static bool serverSettingSecurity; // 0xB8
	protected static string gameServerSettingAddress; // 0xC0
	protected static string dataServerSettingAddress; // 0xC8
	protected static string webServerSettingAddress; // 0xD0
	protected static string dataServerFolder; // 0xD8
	protected static bool serverRedirectSecurity; // 0xE0
	protected static string gameServerRedirectAddress; // 0xE8
	protected static string dataServerRedirectAddress; // 0xF0
	protected static string webServerRedirectAddress; // 0xF8
	protected static bool serverSecurity; // 0x100
	protected static string gameServerAddress; // 0x108
	protected static string dataServerAddress; // 0x110
	protected static string webServerAddress; // 0x118
	protected static string webViewBaseURL; // 0x120
	protected static Dictionary<string, string> webViewAddress; // 0x128
	private readonly string[] spkiHashList; // 0x18
	[HideInInspector] // RVA: 0xC54BF4 Offset: 0xC54BF4 VA: 0xC54BF4
	[SerializeField] // RVA: 0xC54BF4 Offset: 0xC54BF4 VA: 0xC54BF4
	protected string mAndroidApiKey; // 0x20
	[HideInInspector] // RVA: 0xC54C2C Offset: 0xC54C2C VA: 0xC54C2C
	[SerializeField] // RVA: 0xC54C2C Offset: 0xC54C2C VA: 0xC54C2C
	protected string mAndroidProjectId; // 0x28
	[HideInInspector] // RVA: 0xC54C64 Offset: 0xC54C64 VA: 0xC54C64
	[SerializeField] // RVA: 0xC54C64 Offset: 0xC54C64 VA: 0xC54C64
	protected string mIosApplicationId; // 0x30
	[HideInInspector] // RVA: 0xC54C9C Offset: 0xC54C9C VA: 0xC54C9C
	[SerializeField] // RVA: 0xC54C9C Offset: 0xC54C9C VA: 0xC54C9C
	protected string mMk; // 0x38
	[HideInInspector] // RVA: 0xC54CD4 Offset: 0xC54CD4 VA: 0xC54CD4
	[SerializeField] // RVA: 0xC54CD4 Offset: 0xC54CD4 VA: 0xC54CD4
	protected string mCv; // 0x40
	[HideInInspector] // RVA: 0xC54D0C Offset: 0xC54D0C VA: 0xC54D0C
	[SerializeField] // RVA: 0xC54D0C Offset: 0xC54D0C VA: 0xC54D0C
	protected string mAuGameServerPublicKey; // 0x48
	protected ResponseCommandBase[] commandList; // 0x50
	protected Dictionary<string, ResponseCommandBase> commandLookup; // 0x58
	protected Queue<RequestBase> communicationWaitList; // 0x60
	protected RequestBase communicationWork; // 0x68
	protected ResponseData[] communicationWorkResponseList; // 0x70
	protected Coroutine communicationCoroutine; // 0x78
	protected RequestBase cacheRefreshWork; // 0x80
	protected ResponseData[] cacheRefreshWorkResponseList; // 0x88
	protected Action errorCallbackFunc; // 0x90
	protected NetworkManager.LoginCallbackFunc loginCallbackFunc; // 0x98
	protected string loginResponseResult; // 0xA0
	protected NetworkManager.StoreCallbackFunc storeCallbackFunc; // 0xA8
	protected bool isWaitDebugDialog; // 0xB0
	[CompilerGeneratedAttribute] // RVA: 0xC54D44 Offset: 0xC54D44 VA: 0xC54D44
	[DebuggerBrowsableAttribute] // RVA: 0xC54D44 Offset: 0xC54D44 VA: 0xC54D44
	private bool <isWaitUserAgent>k__BackingField; // 0xB1
	protected static readonly string AUTHMD5_KEY_TYPE; // 0x130
	[CompilerGeneratedAttribute] // RVA: 0xC54D80 Offset: 0xC54D80 VA: 0xC54D80
	private static Dictionary<string, int> <>f__switch$map4; // 0x138
	[CompilerGeneratedAttribute] // RVA: 0xC54D90 Offset: 0xC54D90 VA: 0xC54D90
	private static Dictionary<string, int> <>f__switch$map5; // 0x140

	// Properties
	public static bool IsRebootBlock { get; }
	public static string UserCreateServer { get; }
	public static bool IsLogin { get; }
	public static long UserId { get; }
	public bool isWaitUserAgent { get; set; }

	// Methods

	// RVA: 0x137B410 Offset: 0x137B410 VA: 0x137B410
	public void .ctor() { }

	// RVA: 0x137B618 Offset: 0x137B618 VA: 0x137B618
	public static bool get_IsRebootBlock() { }

	// RVA: 0x137B680 Offset: 0x137B680 VA: 0x137B680
	public static bool CheckUserCreateServer() { }

	// RVA: 0x137B76C Offset: 0x137B76C VA: 0x137B76C
	public static string get_UserCreateServer() { }

	// RVA: 0x137B7D4 Offset: 0x137B7D4 VA: 0x137B7D4
	public static bool get_IsLogin() { }

	// RVA: 0x137B83C Offset: 0x137B83C VA: 0x137B83C
	public static long get_UserId() { }

	// RVA: 0x137B8E0 Offset: 0x137B8E0 VA: 0x137B8E0
	public static bool CommunicationIsBusy() { }

	// RVA: 0x137B944 Offset: 0x137B944 VA: 0x137B944
	public static int GetTerminalDispState() { }

	// RVA: 0x137B9E8 Offset: 0x137B9E8 VA: 0x137B9E8
	public void EntryService(NetworkManager.ResultCallbackFunc callback) { }

	// RVA: 0x137BE48 Offset: 0x137BE48 VA: 0x137BE48
	public void ReleseService() { }

	// RVA: 0x137BE4C Offset: 0x137BE4C VA: 0x137BE4C
	protected void Start() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC99A0 Offset: 0xCC99A0 VA: 0xCC99A0
	// RVA: 0x137BE78 Offset: 0x137BE78 VA: 0x137BE78
	protected IEnumerator TimeUpdate() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC99B0 Offset: 0xCC99B0 VA: 0xCC99B0
	// RVA: 0x137BEDC Offset: 0x137BEDC VA: 0x137BEDC
	public IEnumerator Initialize() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC99C0 Offset: 0xCC99C0 VA: 0xCC99C0
	// RVA: 0x137BF54 Offset: 0x137BF54 VA: 0x137BF54
	public bool get_isWaitUserAgent() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC99D0 Offset: 0xCC99D0 VA: 0xCC99D0
	// RVA: 0x137BF5C Offset: 0x137BF5C VA: 0x137BF5C
	private void set_isWaitUserAgent(bool value) { }

	// RVA: 0x137BF68 Offset: 0x137BF68 VA: 0x137BF68
	private void InitializeUserAgent() { }

	// RVA: 0x137C008 Offset: 0x137C008 VA: 0x137C008
	private void SetUserAgent(string userAgent) { }

	// RVA: 0x137C084 Offset: 0x137C084 VA: 0x137C084
	private string getUserAgent() { }

	// RVA: 0x137C0E4 Offset: 0x137C0E4 VA: 0x137C0E4
	public bool ReadOldSignup() { }

	// RVA: 0x137C4C0 Offset: 0x137C4C0 VA: 0x137C4C0
	public bool ReadSignup() { }

	// RVA: 0x137C8BC Offset: 0x137C8BC VA: 0x137C8BC
	public void GetSignup(out string userName, out int genderType, out int month, out int day) { }

	// RVA: 0x137C978 Offset: 0x137C978 VA: 0x137C978
	public void SetSignup(string userName, int genderType) { }

	// RVA: 0x137C9FC Offset: 0x137C9FC VA: 0x137C9FC
	public void SetSignup(string userName, int genderType, int month, int day) { }

	// RVA: 0x137CAA0 Offset: 0x137CAA0 VA: 0x137CAA0
	public void WriteSignup() { }

	// RVA: 0x137CD00 Offset: 0x137CD00 VA: 0x137CD00
	public bool ReadFriendCode() { }

	// RVA: 0x137D098 Offset: 0x137D098 VA: 0x137D098
	public void SetFriendCode(string friendCode) { }

	// RVA: 0x137D108 Offset: 0x137D108 VA: 0x137D108
	public void WriteFriendCode() { }

	// RVA: 0x137D2FC Offset: 0x137D2FC VA: 0x137D2FC
	public string GetFriendCode() { }

	// RVA: 0x137D364 Offset: 0x137D364 VA: 0x137D364
	public string GetDispFriendCode() { }

	// RVA: 0x137D428 Offset: 0x137D428 VA: 0x137D428
	protected void OnApplicationPause(bool isPause) { }

	// RVA: 0x137D434 Offset: 0x137D434 VA: 0x137D434
	public bool CheckServerLimitTime() { }

	// RVA: 0x137D820 Offset: 0x137D820 VA: 0x137D820
	public static bool GetDebugSlowConnect() { }

	// RVA: 0x137D828 Offset: 0x137D828 VA: 0x137D828
	public static void SetDebugSlowConnect(bool flag) { }

	// RVA: 0x137D82C Offset: 0x137D82C VA: 0x137D82C
	public static void SwitchingDebugSlowConnect() { }

	// RVA: 0x137D830 Offset: 0x137D830 VA: 0x137D830
	public static long GetLastServerTime() { }

	// RVA: 0x137D898 Offset: 0x137D898 VA: 0x137D898
	public static void SetServerTimeChkMovie(long serverTimeChkMovie) { }

	// RVA: 0x137D904 Offset: 0x137D904 VA: 0x137D904
	public static long GetServerTimeChkMovie() { }

	// RVA: 0x137D96C Offset: 0x137D96C VA: 0x137D96C
	protected static string GetAuthCode(SortedDictionary<string, string> headers) { }

	// RVA: 0x137DF00 Offset: 0x137DF00 VA: 0x137DF00
	public void ClearAuth() { }

	// RVA: 0x137DF70 Offset: 0x137DF70 VA: 0x137DF70
	public NetworkManager.ReadResult ReadAuth() { }

	// RVA: 0x137EEDC Offset: 0x137EEDC VA: 0x137EEDC
	public void SetAuth(string userId, string authKey, string secretKey) { }

	// RVA: 0x137E660 Offset: 0x137E660 VA: 0x137E660
	protected int SyncAuth() { }

	// RVA: 0x137EF6C Offset: 0x137EF6C VA: 0x137EF6C
	public string LoadAuthMd5(string fname) { }

	// RVA: 0x137F280 Offset: 0x137F280 VA: 0x137F280
	public void WriteAuth() { }

	// RVA: 0x137F358 Offset: 0x137F358 VA: 0x137F358
	protected bool WriteAuthFile(string fname) { }

	// RVA: 0x137D620 Offset: 0x137D620 VA: 0x137D620
	public static long getTime() { }

	// RVA: 0x137F948 Offset: 0x137F948 VA: 0x137F948
	public static long getTime(DateTime dateTime) { }

	// RVA: 0x137F9E0 Offset: 0x137F9E0 VA: 0x137F9E0
	public static long getLocalTime() { }

	// RVA: 0x137FAF4 Offset: 0x137FAF4 VA: 0x137FAF4
	public static long getServerTime() { }

	// RVA: 0x137F87C Offset: 0x137F87C VA: 0x137F87C
	public static DateTime getDateTime() { }

	// RVA: 0x137FC54 Offset: 0x137FC54 VA: 0x137FC54
	public static DateTime getDateTime(long t) { }

	// RVA: 0x137FA40 Offset: 0x137FA40 VA: 0x137FA40
	public static DateTime getLocalDateTime() { }

	// RVA: 0x137FCE8 Offset: 0x137FCE8 VA: 0x137FCE8
	public static DateTime getLocalDateTime(long t) { }

	// RVA: 0x137FB54 Offset: 0x137FB54 VA: 0x137FB54
	public static DateTime getServerDateTime() { }

	// RVA: 0x137FD7C Offset: 0x137FD7C VA: 0x137FD7C
	public static DateTime getServerDateTime(long t) { }

	// RVA: 0x137FE30 Offset: 0x137FE30 VA: 0x137FE30
	public static long getTodayStartTime() { }

	// RVA: 0x137FEEC Offset: 0x137FEEC VA: 0x137FEEC
	public static long getNextDayTime() { }

	// RVA: 0x1380048 Offset: 0x1380048 VA: 0x1380048
	public static long getNextDayTime(int hour) { }

	// RVA: 0x138012C Offset: 0x138012C VA: 0x138012C
	public static long getNextDayStartTime() { }

	// RVA: 0x13801F0 Offset: 0x13801F0 VA: 0x13801F0
	public static long getNextMonthTime() { }

	// RVA: 0x13802E0 Offset: 0x13802E0 VA: 0x13802E0
	public static long getNextMonthTime(int day) { }

	// RVA: 0x1380458 Offset: 0x1380458 VA: 0x1380458
	protected void WarningDialog(string errorTitle, string errorDetail, string errorUrl, int errorType, Action callback) { }

	// RVA: 0x13805CC Offset: 0x13805CC VA: 0x13805CC
	public void GoToTitleDialog() { }

	// RVA: 0x137D6E0 Offset: 0x137D6E0 VA: 0x137D6E0
	protected void ErrorDialog(string errorTitle, string errorDetail, string errorUrl, Action callback) { }

	// RVA: 0x1380724 Offset: 0x1380724 VA: 0x1380724
	protected void EndErrorWebView() { }

	// RVA: 0x1380740 Offset: 0x1380740 VA: 0x1380740
	protected void EndErrorDialog(bool isDecide) { }

	// RVA: 0x138075C Offset: 0x138075C VA: 0x138075C
	protected void OnClickWaitDebugDialog(bool isDecide) { }

	// RVA: 0x1380764 Offset: 0x1380764 VA: 0x1380764
	protected void OnClickErrorStay() { }

	// RVA: 0x1380828 Offset: 0x1380828 VA: 0x1380828
	protected void OnClickErrorRetryDialog(bool isDecide) { }

	// RVA: 0x13809FC Offset: 0x13809FC VA: 0x13809FC
	protected void OnClickErrorRetryDialog_UnityIap(bool isDecide) { }

	// RVA: 0x1380AB4 Offset: 0x1380AB4 VA: 0x1380AB4
	protected void OnClickReloadCache() { }

	// RVA: 0x1380B70 Offset: 0x1380B70 VA: 0x1380B70
	protected void OnClickErrorReboot() { }

	// RVA: 0x1380C40 Offset: 0x1380C40 VA: 0x1380C40
	protected void OnClickErrorTerminal() { }

	// RVA: 0x1380D10 Offset: 0x1380D10 VA: 0x1380D10
	protected void OnClickRefreshTerminal() { }

	// RVA: 0x1380D98 Offset: 0x1380D98 VA: 0x1380D98
	protected void TerminalStart() { }

	// RVA: 0x1380E58 Offset: 0x1380E58 VA: 0x1380E58
	protected void OnClickUserDelete(bool isDecide) { }

	// RVA: 0x1380F38 Offset: 0x1380F38 VA: 0x1380F38
	protected void EndCloseUserDelete() { }

	// RVA: 0x1380FCC Offset: 0x1380FCC VA: 0x1380FCC
	protected void OnClickStore() { }

	// RVA: 0x1381040 Offset: 0x1381040 VA: 0x1381040
	protected void EndGetStoreUrl(string url) { }

	// RVA: 0x1381064 Offset: 0x1381064 VA: 0x1381064
	protected void OnClickErrorDialog(bool isDecide) { }

	// RVA: 0x137F1C8 Offset: 0x137F1C8 VA: 0x137F1C8
	protected static string getOldAuthFileName() { }

	// RVA: 0x137EDB4 Offset: 0x137EDB4 VA: 0x137EDB4
	protected static string getAuthFileName(bool isSlave) { }

	// RVA: 0x137C408 Offset: 0x137C408 VA: 0x137C408
	protected static string getOldSignupFileName() { }

	// RVA: 0x137C7E4 Offset: 0x137C7E4 VA: 0x137C7E4
	protected static string getSignupFileName() { }

	// RVA: 0x138106C Offset: 0x138106C VA: 0x138106C
	protected static string getServerSettingFileName() { }

	// RVA: 0x137CFC0 Offset: 0x137CFC0 VA: 0x137CFC0
	protected static string getFriendCodeFileName() { }

	// RVA: 0x1381144 Offset: 0x1381144 VA: 0x1381144
	public static void DeleteSaveData() { }

	// RVA: 0x1381234 Offset: 0x1381234 VA: 0x1381234
	public static void DeleteSignupData() { }

	// RVA: 0x1381310 Offset: 0x1381310 VA: 0x1381310
	public static string GetDataServerFolderName() { }

	// RVA: 0x1381378 Offset: 0x1381378 VA: 0x1381378
	public static void SetDataServerFolderName(string folderName) { }

	// RVA: 0x1381414 Offset: 0x1381414 VA: 0x1381414
	public static void SetGameServerRedirect(string address, bool isSecurity) { }

	// RVA: 0x1381498 Offset: 0x1381498 VA: 0x1381498
	public static void SetDataServerRedirect(string address) { }

	// RVA: 0x1381504 Offset: 0x1381504 VA: 0x1381504
	public static void SetWebServerRedirect(string address) { }

	// RVA: 0x1381570 Offset: 0x1381570 VA: 0x1381570
	public static string GetServerSettingType() { }

	// RVA: 0x13815D8 Offset: 0x13815D8 VA: 0x13815D8
	public static bool GetSecurityServerSetting() { }

	// RVA: 0x1381640 Offset: 0x1381640 VA: 0x1381640
	public static bool GetSecurityServerSetting(string type) { }

	// RVA: 0x13816A8 Offset: 0x13816A8 VA: 0x13816A8
	public static string GetGameServerSetting() { }

	// RVA: 0x1381710 Offset: 0x1381710 VA: 0x1381710
	public static string GetGameServerSetting(string type) { }

	// RVA: 0x1381778 Offset: 0x1381778 VA: 0x1381778
	public static string GetDataServerSetting() { }

	// RVA: 0x13817E0 Offset: 0x13817E0 VA: 0x13817E0
	public static string GetDataServerSetting(string type) { }

	// RVA: 0x1381848 Offset: 0x1381848 VA: 0x1381848
	public static string GetWebServerSetting() { }

	// RVA: 0x13818B0 Offset: 0x13818B0 VA: 0x13818B0
	public static string GetWebServerSetting(string type) { }

	// RVA: 0x1381918 Offset: 0x1381918 VA: 0x1381918
	public static string getBaseUrl(bool isSecurity = True) { }

	// RVA: 0x1381A68 Offset: 0x1381A68 VA: 0x1381A68
	public static string getBaseMockUrl() { }

	// RVA: 0x1381AD0 Offset: 0x1381AD0 VA: 0x1381AD0
	public static string getDataUrl() { }

	// RVA: 0x1381B38 Offset: 0x1381B38 VA: 0x1381B38
	public static string getWebUrl(string path, bool isSecurity = True, bool isWebView = True) { }

	// RVA: 0x1382064 Offset: 0x1382064 VA: 0x1382064
	public static void getStoreUrl(string storeName, string id, NetworkManager.StoreCallbackFunc callback) { }

	// RVA: 0x1382118 Offset: 0x1382118 VA: 0x1382118
	public static string getMockFile(string path) { }

	// RVA: 0x1382244 Offset: 0x1382244 VA: 0x1382244
	public static string GetApiCode() { }

	// RVA: 0x138232C Offset: 0x138232C VA: 0x138232C
	public static string GetMk() { }

	// RVA: 0x1382414 Offset: 0x1382414 VA: 0x1382414
	public static string GetCv() { }

	// RVA: 0x13824FC Offset: 0x13824FC VA: 0x13824FC
	public bool ReadServerSetting() { }

	// RVA: 0x138258C Offset: 0x138258C VA: 0x138258C
	public void SetServerSetting(string type, bool isSecuritey, string gameAddress, string dataAddress, string webAddress) { }

	// RVA: 0x138264C Offset: 0x138264C VA: 0x138264C
	public void SetServerSetting() { }

	// RVA: 0x138284C Offset: 0x138284C VA: 0x138284C
	private void setupDataServerAddress(NetworkManager.DataServerAddressType addressType) { }

	// RVA: 0x1382D8C Offset: 0x1382D8C VA: 0x1382D8C
	public void WriteServerSetting() { }

	// RVA: 0x1382D90 Offset: 0x1382D90 VA: 0x1382D90
	public static void setupWebViewAddress(string baseURL, string contactURL, Dictionary<string, object> filePassInfo) { }

	// RVA: 0x13830F8 Offset: 0x13830F8 VA: 0x13830F8
	public static string getWebViewAddress(string path) { }

	// RVA: 0x1383194 Offset: 0x1383194 VA: 0x1383194
	public static string getWebViewFullAddress(string path) { }

	// RVA: 0x1383258 Offset: 0x1383258 VA: 0x1383258
	public static string getWebViewAddress(NetworkManager.WebViewAddressType addressType) { }

	// RVA: 0x138339C Offset: 0x138339C VA: 0x138339C
	public static string getSummonDetailUrl(int gachaId) { }

	// RVA: 0x1383630 Offset: 0x1383630 VA: 0x1383630
	public static string GetServerType(string serverName) { }

	// RVA: 0x1383770 Offset: 0x1383770 VA: 0x1383770
	public static string GetServerNumber(string serverName) { }

	// RVA: -1 Offset: -1
	public static T getRequest<T>(NetworkManager.ResultCallbackFunc func) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C2111C Offset: 0x1C2111C VA: 0x1C2111C
	|-NetworkManager.getRequest<AccountRegistRequest>
	|-NetworkManager.getRequest<AppendSkillCombineRequest>
	|-NetworkManager.getRequest<BankStatusRequest>
	|-NetworkManager.getRequest<BattleCommandSpellRequest>
	|-NetworkManager.getRequest<BattleResultRequest>
	|-NetworkManager.getRequest<BattleResumeRequest>
	|-NetworkManager.getRequest<BattleRouteSelectRequest>
	|-NetworkManager.getRequest<BattleScenarioRequest>
	|-NetworkManager.getRequest<BattleSetupRequest>
	|-NetworkManager.getRequest<BattleTurnRequest>
	|-NetworkManager.getRequest<BattleUseContinueItemRequest>
	|-NetworkManager.getRequest<BattleUseContinueRequest>
	|-NetworkManager.getRequest<BattleUseItemRequest>
	|-NetworkManager.getRequest<BlacklistRegistRequest>
	|-NetworkManager.getRequest<BlacklistRemoveRequest>
	|-NetworkManager.getRequest<BlacklistTopRequest>
	|-NetworkManager.getRequest<BoxGachaDrawRequest>
	|-NetworkManager.getRequest<BoxGachaResetRequest>
	|-NetworkManager.getRequest<CardCombineLimitSpecialRequest>
	|-NetworkManager.getRequest<CardFavoriteRequest>
	|-NetworkManager.getRequest<CardLockSyncRequest>
	|-NetworkManager.getRequest<CardServantFlagRequest>
	|-NetworkManager.getRequest<CardStatusSyncRequest>
	|-NetworkManager.getRequest<CheckDateVersionRequest>
	|-NetworkManager.getRequest<CoinRoomRequest>
	|-NetworkManager.getRequest<CommandCardExceedRequest>
	|-NetworkManager.getRequest<CommandCodeAttachRequest>
	|-NetworkManager.getRequest<CommandCodeDetach>
	|-NetworkManager.getRequest<CommandCodeLockRequest>
	|-NetworkManager.getRequest<CommandCodeSetStatusRequest>
	|-NetworkManager.getRequest<CommandCodeStatusSyncRequest>
	|-NetworkManager.getRequest<CommandCodeUnlockRequest>
	|-NetworkManager.getRequest<CommitPurchaseRequest>
	|-NetworkManager.getRequest<ContinueDecideRequest>
	|-NetworkManager.getRequest<ContinuePrepareRequest>
	|-NetworkManager.getRequest<DeckEditNameRequest>
	|-NetworkManager.getRequest<DeckSetupRequest>
	|-NetworkManager.getRequest<EventDailyPointRequest>
	|-NetworkManager.getRequest<EventDeckSetupRequest>
	|-NetworkManager.getRequest<EventLocationRequest>
	|-NetworkManager.getRequest<EventMissionClearRewardRequest>
	|-NetworkManager.getRequest<EventMissionRandomCancelRequest>
	|-NetworkManager.getRequest<EventScanPanelMapRequest>
	|-NetworkManager.getRequest<EventScriptFlagRequest>
	|-NetworkManager.getRequest<FirendLockSyncRequest>
	|-NetworkManager.getRequest<FollowAssignRequest>
	|-NetworkManager.getRequest<FollowdRemoveRequest>
	|-NetworkManager.getRequest<FollowerListRequest>
	|-NetworkManager.getRequest<FollowerSetupRequest>
	|-NetworkManager.getRequest<FriendAcceptRequest>
	|-NetworkManager.getRequest<FriendCancelRequest>
	|-NetworkManager.getRequest<FriendMessageHideSyncRequest>
	|-NetworkManager.getRequest<FriendOfferRequest>
	|-NetworkManager.getRequest<FriendRejectRequest>
	|-NetworkManager.getRequest<FriendRemoveRequest>
	|-NetworkManager.getRequest<FriendTopRequest>
	|-NetworkManager.getRequest<GachaDrawRequest>
	|-NetworkManager.getRequest<GachaHistoryRequest>
	|-NetworkManager.getRequest<ItemUseRequest>
	|-NetworkManager.getRequest<ProfileTopRequest>
	|-NetworkManager.getRequest<PurchaseByBank_UnityIap_Request>
	|-NetworkManager.getRequest<PurchaseByStoneRequest>
	|-NetworkManager.getRequest<PurchaseRequest>
	|-NetworkManager.getRequest<RaidAutoUpdateRequest>
	|-NetworkManager.getRequest<RecoverCmdSpellRequest>
	|-NetworkManager.getRequest<RecoverUseItemRequest>
	|-NetworkManager.getRequest<SellServantRequest>
	|-NetworkManager.getRequest<ServantCombineRequest>
	|-NetworkManager.getRequest<ServantCostumeCombineRequest>
	|-NetworkManager.getRequest<ServantEquipCombineRequest>
	|-NetworkManager.getRequest<ServantFriendshipExceedRequest>
	|-NetworkManager.getRequest<ServantLevelExceedRequest>
	|-NetworkManager.getRequest<ServantLimitCombineRequest>
	|-NetworkManager.getRequest<ServantRecoverySyncRequest>
	|-NetworkManager.getRequest<ServantSkillCombineRequest>
	|-NetworkManager.getRequest<ServantTreasureDvcCombineRequest>
	|-NetworkManager.getRequest<SetUserBirthDayRequest>
	|-NetworkManager.getRequest<StorageTakeinRequest>
	|-NetworkManager.getRequest<StorageTakeoutRequest>
	|-NetworkManager.getRequest<object>
	|-NetworkManager.getRequest<TopGameDataRequest>
	|-NetworkManager.getRequest<TopHomeRequest>
	|-NetworkManager.getRequest<TopLoginRequest>
	|-NetworkManager.getRequest<TopMyRoomRequest>
	|-NetworkManager.getRequest<TopRefreshRequest>
	|-NetworkManager.getRequest<TopSignupRequest>
	|-NetworkManager.getRequest<TreasureBoxDrawRequest>
	|-NetworkManager.getRequest<TutorialEventSetRequest>
	|-NetworkManager.getRequest<TutorialSetRequest>
	|-NetworkManager.getRequest<UserDeleteRequest>
	|-NetworkManager.getRequest<UserFormationRequest>
	|-NetworkManager.getRequest<UserNameChangeRequest>
	|-NetworkManager.getRequest<UserPresentHistoryRequest>
	|-NetworkManager.getRequest<UserPresentListRequest>
	|-NetworkManager.getRequest<UserPresentReceiveRequest>
	|-NetworkManager.getRequest<UserStatusFlagSetRequest>
	|-NetworkManager.getRequest<WarBoardBattleResultRequest>
	|-NetworkManager.getRequest<WarBoardBattleResumeRequest>
	|-NetworkManager.getRequest<WarBoardBattleSetupRequest>
	|-NetworkManager.getRequest<WarBoardBuffSaveRequest>
	|-NetworkManager.getRequest<WarBoardFinishRequest>
	|-NetworkManager.getRequest<WarBoardMasterAttackRequest>
	|-NetworkManager.getRequest<WarBoardResumeRequest>
	|-NetworkManager.getRequest<WarBoardSetupRequest>
	|-NetworkManager.getRequest<WarBoardStartRequest>
	|-NetworkManager.getRequest<WarBoardTreasureRequest>
	|-NetworkManager.getRequest<WarBoardTurnEndRequest>
	*/

	// RVA: 0x1383950 Offset: 0x1383950 VA: 0x1383950
	public static void SetBaseField(RequestBase request) { }

	// RVA: 0x1383C34 Offset: 0x1383C34 VA: 0x1383C34
	public static void ReplaceBaseField(RequestBase request, bool isRefreshTime = False) { }

	// RVA: 0x1383E38 Offset: 0x1383E38 VA: 0x1383E38
	public static void RequestStart(RequestBase request) { }

	// RVA: 0x1384118 Offset: 0x1384118 VA: 0x1384118
	public static ResponseCommandBase.Result ExecuteCommand(ResponseData data) { }

	// RVA: 0x1383EF0 Offset: 0x1383EF0 VA: 0x1383EF0
	protected void AddWaitStatus(RequestBase request) { }

	// RVA: 0x1384048 Offset: 0x1384048 VA: 0x1384048
	protected bool CommunicationStart() { }

	[DebuggerHiddenAttribute] // RVA: 0xCC99E0 Offset: 0xCC99E0 VA: 0xCC99E0
	// RVA: 0x1380948 Offset: 0x1380948 VA: 0x1380948
	private IEnumerator RequestCR(RequestBase work, float delay) { }

	// RVA: 0x138076C Offset: 0x138076C VA: 0x138076C
	protected void OnEndCommunication(RequestBase requestWork, ResponseData[] responseList) { }

	// RVA: 0x13842E0 Offset: 0x13842E0 VA: 0x13842E0
	protected bool OnBackgroundErrorCommunication(RequestBase requestWork, string errorCode, bool forceCommunication = False) { }

	// RVA: 0x13843C4 Offset: 0x13843C4 VA: 0x13843C4
	private void checkServerCertificateError(string errorCode, ref string errorTitle, ref string errorDetail, ref string errorAction) { }

	// RVA: 0x13820EC Offset: 0x13820EC VA: 0x13820EC
	protected void GetStoreUrl(string storeName, string id, NetworkManager.StoreCallbackFunc callback) { }

	[DebuggerHiddenAttribute] // RVA: 0xCC99F0 Offset: 0xCC99F0 VA: 0xCC99F0
	// RVA: 0x1384508 Offset: 0x1384508 VA: 0x1384508
	private IEnumerator RequestApplicationUpdateCR(string storeName, string id, NetworkManager.StoreCallbackFunc callback) { }

	// RVA: 0x13845BC Offset: 0x13845BC VA: 0x13845BC
	public void RequestLogin(NetworkManager.LoginCallbackFunc callback, bool isEnforce = True) { }

	// RVA: 0x1384774 Offset: 0x1384774 VA: 0x1384774
	private void SetupObfuscatedAccountId(string loginResultStr) { }

	// RVA: 0x1384850 Offset: 0x1384850 VA: 0x1384850
	protected void EndTopLogin(string result) { }

	// RVA: 0x1384AC0 Offset: 0x1384AC0 VA: 0x1384AC0
	protected void EndLockSync(string result) { }

	// RVA: 0x13849EC Offset: 0x13849EC VA: 0x13849EC
	protected void OptionSync() { }

	// RVA: 0x1384B7C Offset: 0x1384B7C VA: 0x1384B7C
	protected void EndOptionSync() { }

	// RVA: 0x13846D4 Offset: 0x13846D4 VA: 0x13846D4
	protected void EndLogin() { }

	// RVA: 0x1384F88 Offset: 0x1384F88 VA: 0x1384F88
	public void ClearTopLoginResult() { }

	// RVA: 0x1384F90 Offset: 0x1384F90 VA: 0x1384F90
	public string GetTopLoginResult() { }

	// RVA: 0x1384F98 Offset: 0x1384F98 VA: 0x1384F98
	private static void .cctor() { }
}

// Namespace: 
public enum NetworkManager.ReadResult // TypeDefIndex: 6514
{
	// Fields
	public int value__; // 0x0
	public const NetworkManager.ReadResult OK = 0;
	public const NetworkManager.ReadResult NONE = 1;
	public const NetworkManager.ReadResult READ_ERROR = 2;
	public const NetworkManager.ReadResult CRYPT_ERROR = 3;
	public const NetworkManager.ReadResult JSON_ERROR = 4;
	public const NetworkManager.ReadResult VERSION_ERROR = 5;
	public const NetworkManager.ReadResult MD5_ERROR = 6;
}

// Namespace: 
public enum NetworkManager.WebViewAddressType // TypeDefIndex: 6515
{
	// Fields
	public int value__; // 0x0
	public const NetworkManager.WebViewAddressType NEWS = 0;
	public const NetworkManager.WebViewAddressType SUMMON_DETAIL = 1;
	public const NetworkManager.WebViewAddressType HELP = 2;
	public const NetworkManager.WebViewAddressType CONTACT = 3;
	public const NetworkManager.WebViewAddressType TERMS = 4;
	public const NetworkManager.WebViewAddressType CREDIT = 5;
	public const NetworkManager.WebViewAddressType RIGHTS = 6;
	public const NetworkManager.WebViewAddressType TERMINAL_BANNER = 7;
	public const NetworkManager.WebViewAddressType SP_DEAL = 8;
	public const NetworkManager.WebViewAddressType BOX_GACHA = 9;
	public const NetworkManager.WebViewAddressType DIALOG_BANNER = 10;
	public const NetworkManager.WebViewAddressType PRIVACY_POLICY = 11;
	public const NetworkManager.WebViewAddressType DELETE_ACCOUNT = 12;
}

// Namespace: 
private enum NetworkManager.DataServerAddressType // TypeDefIndex: 6516
{
	// Fields
	public int value__; // 0x0
	public const NetworkManager.DataServerAddressType IS_OFFLINE = 0;
	public const NetworkManager.DataServerAddressType IS_ONLINE = 1;
	public const NetworkManager.DataServerAddressType SCRIPT = 2;
	public const NetworkManager.DataServerAddressType REDIRECT = 3;
}

// Namespace: 
public sealed class NetworkManager.ResultCallbackFunc : MulticastDelegate // TypeDefIndex: 6517
{
	// Methods

	// RVA: 0x13846C4 Offset: 0x13846C4 VA: 0x13846C4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x137BAA8 Offset: 0x137BAA8 VA: 0x137BAA8 Slot: 11
	public virtual void Invoke(string result) { }

	// RVA: 0x13896F8 Offset: 0x13896F8 VA: 0x13896F8 Slot: 12
	public virtual IAsyncResult BeginInvoke(string result, AsyncCallback callback, object object) { }

	// RVA: 0x138971C Offset: 0x138971C VA: 0x138971C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class NetworkManager.LoginCallbackFunc : MulticastDelegate // TypeDefIndex: 6518
{
	// Methods

	// RVA: 0x13896B8 Offset: 0x13896B8 VA: 0x13896B8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1384BE8 Offset: 0x1384BE8 VA: 0x1384BE8 Slot: 11
	public virtual void Invoke(string result) { }

	// RVA: 0x13896C8 Offset: 0x13896C8 VA: 0x13896C8 Slot: 12
	public virtual IAsyncResult BeginInvoke(string result, AsyncCallback callback, object object) { }

	// RVA: 0x13896EC Offset: 0x13896EC VA: 0x13896EC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class NetworkManager.StoreCallbackFunc : MulticastDelegate // TypeDefIndex: 6519
{
	// Methods

	// RVA: 0x1389728 Offset: 0x1389728 VA: 0x1389728
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1385D8C Offset: 0x1385D8C VA: 0x1385D8C Slot: 11
	public virtual void Invoke(string url) { }

	// RVA: 0x1389738 Offset: 0x1389738 VA: 0x1389738 Slot: 12
	public virtual IAsyncResult BeginInvoke(string url, AsyncCallback callback, object object) { }

	// RVA: 0x138975C Offset: 0x138975C VA: 0x138975C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC429F4 Offset: 0xC429F4 VA: 0xC429F4
private sealed class NetworkManager.<TimeUpdate>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6520
{
	// Fields
	internal object $current; // 0x10
	internal bool $disposing; // 0x18
	internal int $PC; // 0x1C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8E30 Offset: 0xCD8E30 VA: 0xCD8E30
	// RVA: 0x137BED4 Offset: 0x137BED4 VA: 0x137BED4
	public void .ctor() { }

	// RVA: 0x1389550 Offset: 0x1389550 VA: 0x1389550 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8E40 Offset: 0xCD8E40 VA: 0xCD8E40
	// RVA: 0x138962C Offset: 0x138962C VA: 0x138962C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8E50 Offset: 0xCD8E50 VA: 0xCD8E50
	// RVA: 0x1389634 Offset: 0x1389634 VA: 0x1389634 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8E60 Offset: 0xCD8E60 VA: 0xCD8E60
	// RVA: 0x138963C Offset: 0x138963C VA: 0x138963C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8E70 Offset: 0xCD8E70 VA: 0xCD8E70
	// RVA: 0x1389650 Offset: 0x1389650 VA: 0x1389650 Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42A04 Offset: 0xC42A04 VA: 0xC42A04
private sealed class NetworkManager.<Initialize>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6521
{
	// Fields
	internal NetworkManager $this; // 0x10
	internal object $current; // 0x18
	internal bool $disposing; // 0x20
	internal int $PC; // 0x24

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8E80 Offset: 0xCD8E80 VA: 0xCD8E80
	// RVA: 0x137BF4C Offset: 0x137BF4C VA: 0x137BF4C
	public void .ctor() { }

	// RVA: 0x138521C Offset: 0x138521C VA: 0x138521C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8E90 Offset: 0xCD8E90 VA: 0xCD8E90
	// RVA: 0x13857A8 Offset: 0x13857A8 VA: 0x13857A8 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8EA0 Offset: 0xCD8EA0 VA: 0xCD8EA0
	// RVA: 0x13857B0 Offset: 0x13857B0 VA: 0x13857B0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8EB0 Offset: 0xCD8EB0 VA: 0xCD8EB0
	// RVA: 0x13857B8 Offset: 0x13857B8 VA: 0x13857B8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8EC0 Offset: 0xCD8EC0 VA: 0xCD8EC0
	// RVA: 0x13857CC Offset: 0x13857CC VA: 0x13857CC Slot: 6
	public void Reset() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42A14 Offset: 0xC42A14 VA: 0xC42A14
private sealed class NetworkManager.<RequestCR>c__Iterator2 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6522
{
	// Fields
	internal RequestBase work; // 0x10
	internal string <data>__1; // 0x18
	internal string <errorCode>__1; // 0x20
	internal string <errorLocalizeCode>__1; // 0x28
	internal string <errorAction>__1; // 0x30
	internal ResponseFailData <failData>__1; // 0x38
	internal ResponseData[] <responseList>__1; // 0x40
	internal float delay; // 0x48
	internal long <startTime>__1; // 0x50
	internal string <url>__2; // 0x58
	internal BestWWW <www>__3; // 0x60
	internal SortedDictionary<string, string> <authParams>__4; // 0x68
	internal WWWForm <form>__4; // 0x70
	internal Dictionary<string, string> <headers>__4; // 0x78
	internal Dictionary.Enumerator<string, string> $locvar0; // 0x80
	internal string <authCode>__4; // 0xA0
	internal string <url>__4; // 0xA8
	internal BestWWW <www>__4; // 0xB0
	internal float <timeout>__4; // 0xB8
	internal float <requestTime>__4; // 0xBC
	internal float <loadProgress>__4; // 0xC0
	internal WaitForEndOfFrame <wait>__4; // 0xC8
	internal bool <isPurchaseServerError>__1; // 0xD0
	internal NetworkManager $this; // 0xD8
	internal object $current; // 0xE0
	internal bool $disposing; // 0xE8
	internal int $PC; // 0xEC

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8ED0 Offset: 0xCD8ED0 VA: 0xCD8ED0
	// RVA: 0x13842D8 Offset: 0x13842D8 VA: 0x13842D8
	public void .ctor() { }

	// RVA: 0x13861B8 Offset: 0x13861B8 VA: 0x13861B8 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8EE0 Offset: 0xCD8EE0 VA: 0xCD8EE0
	// RVA: 0x1389474 Offset: 0x1389474 VA: 0x1389474 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8EF0 Offset: 0xCD8EF0 VA: 0xCD8EF0
	// RVA: 0x138947C Offset: 0x138947C VA: 0x138947C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8F00 Offset: 0xCD8F00 VA: 0xCD8F00
	// RVA: 0x1389484 Offset: 0x1389484 VA: 0x1389484 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8F10 Offset: 0xCD8F10 VA: 0xCD8F10
	// RVA: 0x1389498 Offset: 0x1389498 VA: 0x1389498 Slot: 6
	public void Reset() { }

	// RVA: 0x1389500 Offset: 0x1389500 VA: 0x1389500
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42A24 Offset: 0xC42A24 VA: 0xC42A24
private sealed class NetworkManager.<RequestApplicationUpdateCR>c__Iterator3 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6523
{
	// Fields
	internal string storeName; // 0x10
	internal string <url>__0; // 0x18
	internal string <data>__1; // 0x20
