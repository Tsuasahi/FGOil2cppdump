{
	// Fields
	internal int targetId; // 0x10
	internal bool result; // 0x14

	// Methods

	// RVA: 0x1835880 Offset: 0x1835880 VA: 0x1835880
	public void .ctor() { }

	// RVA: 0x1836090 Offset: 0x1836090 VA: 0x1836090
	internal bool <>m__0(BattleLogicFunctionProcess.FunctionTargetCheck x) { }
}

// Namespace: 
public class BattleLogicFunctionProcess.FunctionTargetCheck // TypeDefIndex: 9151
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC656DC Offset: 0xC656DC VA: 0xC656DC
	[DebuggerBrowsableAttribute] // RVA: 0xC656DC Offset: 0xC656DC VA: 0xC656DC
	private BattleLogicFunctionProcess.FunctionUnitCheck <funcUnit>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC65718 Offset: 0xC65718 VA: 0xC65718
	[DebuggerBrowsableAttribute] // RVA: 0xC65718 Offset: 0xC65718 VA: 0xC65718
	private int <targetId>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC65754 Offset: 0xC65754 VA: 0xC65754
	[DebuggerBrowsableAttribute] // RVA: 0xC65754 Offset: 0xC65754 VA: 0xC65754
	private bool <result>k__BackingField; // 0x1C
	public BattleLogicFunctionProcess.FuncInvalidType invalidType; // 0x20
	public string invalidText; // 0x28
	public bool isFixResult; // 0x30

	// Properties
	public BattleLogicFunctionProcess.FunctionUnitCheck funcUnit { get; set; }
	public int targetId { get; set; }
	public bool result { get; set; }

	// Methods

	// RVA: 0x1834774 Offset: 0x1834774 VA: 0x1834774
	public void .ctor(int targetId, BattleLogicFunctionProcess.FunctionUnitCheck funcUnit) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDD08 Offset: 0xCCDD08 VA: 0xCCDD08
	// RVA: 0x18338C4 Offset: 0x18338C4 VA: 0x18338C4
	public BattleLogicFunctionProcess.FunctionUnitCheck get_funcUnit() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDD18 Offset: 0xCCDD18 VA: 0xCCDD18
	// RVA: 0x1835180 Offset: 0x1835180 VA: 0x1835180
	private void set_funcUnit(BattleLogicFunctionProcess.FunctionUnitCheck value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDD28 Offset: 0xCCDD28 VA: 0xCCDD28
	// RVA: 0x18338CC Offset: 0x18338CC VA: 0x18338CC
	public int get_targetId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDD38 Offset: 0xCCDD38 VA: 0xCCDD38
	// RVA: 0x1835178 Offset: 0x1835178 VA: 0x1835178
	private void set_targetId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDD48 Offset: 0xCCDD48 VA: 0xCCDD48
	// RVA: 0x1835194 Offset: 0x1835194 VA: 0x1835194
	public bool get_result() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDD58 Offset: 0xCCDD58 VA: 0xCCDD58
	// RVA: 0x1835188 Offset: 0x1835188 VA: 0x1835188
	private void set_result(bool value) { }

	// RVA: 0x183519C Offset: 0x183519C VA: 0x183519C
	public void checkFunctionTypeCondtion(BattleLogicFunctionProcess.BaseFunctionTypeProcess funcProc, BattleActionData action) { }

	// RVA: 0x183529C Offset: 0x183529C VA: 0x183529C
	public void reflectLinkedToSelfResult(BattleLogicFunctionProcess.FunctionUnitCheck linkedToSelf) { }

	// RVA: 0x18353D0 Offset: 0x18353D0 VA: 0x18353D0
	public BattleActionData getInvalidObject() { }

	// RVA: 0x18343F8 Offset: 0x18343F8 VA: 0x18343F8
	public void changeInvalid(DataVals baseVals) { }

	// RVA: 0x1835580 Offset: 0x1835580 VA: 0x1835580 Slot: 4
	public virtual void ApplyPrevSaveBuffData(BattleBuffData.BuffData buff) { }
}

// Namespace: 
public class BattleLogicFunctionProcess.CommonAddStateTargetCheck : BattleLogicFunctionProcess.FunctionTargetCheck // TypeDefIndex: 9152
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC65790 Offset: 0xC65790 VA: 0xC65790
	[DebuggerBrowsableAttribute] // RVA: 0xC65790 Offset: 0xC65790 VA: 0xC65790
	private List<int> <CardIdsIndexList>k__BackingField; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC657CC Offset: 0xC657CC VA: 0xC657CC
	[DebuggerBrowsableAttribute] // RVA: 0xC657CC Offset: 0xC657CC VA: 0xC657CC
	private List<int> <AttachTargetList>k__BackingField; // 0x40

	// Properties
	public List<int> CardIdsIndexList { get; set; }
	public List<int> AttachTargetList { get; set; }
	public bool ExistAttachTarget { get; }

	// Methods

	// RVA: 0x1834734 Offset: 0x1834734 VA: 0x1834734
	public void .ctor(int targetId, BattleLogicFunctionProcess.FunctionUnitCheck funcUnit) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDD68 Offset: 0xCCDD68 VA: 0xCCDD68
	// RVA: 0x18347B4 Offset: 0x18347B4 VA: 0x18347B4
	private void set_CardIdsIndexList(List<int> value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDD78 Offset: 0xCCDD78 VA: 0xCCDD78
	// RVA: 0x18343F0 Offset: 0x18343F0 VA: 0x18343F0
	public List<int> get_CardIdsIndexList() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDD88 Offset: 0xCCDD88 VA: 0xCCDD88
	// RVA: 0x18347BC Offset: 0x18347BC VA: 0x18347BC
	private void set_AttachTargetList(List<int> value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDD98 Offset: 0xCCDD98 VA: 0xCCDD98
	// RVA: 0x183463C Offset: 0x183463C VA: 0x183463C
	public List<int> get_AttachTargetList() { }

	// RVA: 0x18346D4 Offset: 0x18346D4 VA: 0x18346D4
	public bool get_ExistAttachTarget() { }

	// RVA: 0x18347C4 Offset: 0x18347C4 VA: 0x18347C4
	private int ConvertAttachTargetFromCardIndex(int cardIndex) { }

	// RVA: 0x18347CC Offset: 0x18347CC VA: 0x18347CC Slot: 5
	public virtual void InitPrevCheckCondition(BattleActionData action, BattleServantData targetSvt) { }

	// RVA: 0x1834920 Offset: 0x1834920 VA: 0x1834920
	private int[] GetAttachTargetArray(BattleServantData targetSvt, long userCommandCodeId, int[] cardIdsIndexArray) { }

	// RVA: 0x1834644 Offset: 0x1834644 VA: 0x1834644
	public void RemoveAttachTarget(int attachTarget) { }

	// RVA: 0x1834B20 Offset: 0x1834B20 VA: 0x1834B20 Slot: 4
	public override void ApplyPrevSaveBuffData(BattleBuffData.BuffData buff) { }
}

// Namespace: 
public enum BattleLogicFunctionProcess.CommonAddStateTargetCheck.AttachTarget // TypeDefIndex: 9153
{
	// Fields
	public int value__; // 0x0
	public const BattleLogicFunctionProcess.CommonAddStateTargetCheck.AttachTarget Servant = 1;
	public const BattleLogicFunctionProcess.CommonAddStateTargetCheck.AttachTarget CommandCard1 = 101;
	public const BattleLogicFunctionProcess.CommonAddStateTargetCheck.AttachTarget CommandCard2 = 102;
	public const BattleLogicFunctionProcess.CommonAddStateTargetCheck.AttachTarget CommandCard3 = 103;
	public const BattleLogicFunctionProcess.CommonAddStateTargetCheck.AttachTarget CommandCard4 = 104;
	public const BattleLogicFunctionProcess.CommonAddStateTargetCheck.AttachTarget CommandCard5 = 105;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44264 Offset: 0xC44264 VA: 0xC44264
private sealed class BattleLogicFunctionProcess.CommonAddStateTargetCheck.<GetAttachTargetArray>c__AnonStorey0 // TypeDefIndex: 9154
{
	// Fields
	internal List<int> targetList; // 0x10
	internal BattleLogicFunctionProcess.CommonAddStateTargetCheck $this; // 0x18

	// Methods

	// RVA: 0x1834B18 Offset: 0x1834B18 VA: 0x1834B18
	public void .ctor() { }

	// RVA: 0x1834BC4 Offset: 0x1834BC4 VA: 0x1834BC4
	internal void <>m__0(int index) { }
}

// Namespace: 
public class BattleLogicFunctionProcess.BaseFunctionTypeProcess // TypeDefIndex: 9155
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC65808 Offset: 0xC65808 VA: 0xC65808
	[DebuggerBrowsableAttribute] // RVA: 0xC65808 Offset: 0xC65808 VA: 0xC65808
	private BattleLogicFunction <logic>k__BackingField; // 0x10

	// Properties
	protected BattleLogicFunction logic { get; set; }
	protected BattleData data { get; }

	// Methods

	// RVA: 0x1833200 Offset: 0x1833200 VA: 0x1833200
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDDA8 Offset: 0xCCDDA8 VA: 0xCCDDA8
	// RVA: 0x1833208 Offset: 0x1833208 VA: 0x1833208
	protected BattleLogicFunction get_logic() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDDB8 Offset: 0xCCDDB8 VA: 0xCCDDB8
	// RVA: 0x1833210 Offset: 0x1833210 VA: 0x1833210
	private void set_logic(BattleLogicFunction value) { }

	// RVA: 0x1833218 Offset: 0x1833218 VA: 0x1833218
	protected BattleData get_data() { }

	// RVA: 0x1833244 Offset: 0x1833244 VA: 0x1833244
	protected void DebugLog(string str) { }

	// RVA: 0x1833248 Offset: 0x1833248 VA: 0x1833248 Slot: 4
	public virtual void init(BattleLogicFunction logic) { }

	// RVA: 0x1833250 Offset: 0x1833250 VA: 0x1833250
	public bool IsNeedInit(BattleLogicFunction logic) { }

	// RVA: 0x1833260 Offset: 0x1833260 VA: 0x1833260 Slot: 5
	public virtual bool IsPreCheckTargetsAvailable(FunctionEntity funcEnt, int actorUniqueId) { }

	// RVA: 0x1833268 Offset: 0x1833268 VA: 0x1833268
	public bool checkExecutable(BattleActionData action, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget) { }

	// RVA: 0x18332EC Offset: 0x18332EC VA: 0x18332EC Slot: 6
	protected virtual bool checkCommonCondition(BattleActionData action, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget) { }

	// RVA: 0x1833900 Offset: 0x1833900 VA: 0x1833900 Slot: 7
	protected virtual bool checkCondition(BattleActionData action, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget) { }

	// RVA: 0x1833930 Offset: 0x1833930 VA: 0x1833930
	protected BattleLogicFunctionProcess.BaseBuffProcess MakeBuffProcess(int type) { }
}

// Namespace: 
public class BattleLogicFunctionProcess.AddStateProcess : BattleLogicFunctionProcess.CommonAddStateProcess // TypeDefIndex: 9156
{
	// Methods

	// RVA: 0x18331D8 Offset: 0x18331D8 VA: 0x18331D8
	public void .ctor() { }
}

// Namespace: 
public class BattleLogicFunctionProcess.AddStateShortProcess : BattleLogicFunctionProcess.CommonAddStateProcess // TypeDefIndex: 9157
{
	// Methods

	// RVA: 0x18331E8 Offset: 0x18331E8 VA: 0x18331E8
	public void .ctor() { }
}

// Namespace: 
public class BattleLogicFunctionProcess.CommonAddStateProcess : BattleLogicFunctionProcess.BaseFunctionTypeProcess // TypeDefIndex: 9158
{
	// Methods

	// RVA: 0x18331E0 Offset: 0x18331E0 VA: 0x18331E0
	public void .ctor() { }

	// RVA: 0x18339C4 Offset: 0x18339C4 VA: 0x18339C4 Slot: 7
	protected override bool checkCondition(BattleActionData action, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget) { }

	// RVA: 0x1833A5C Offset: 0x1833A5C VA: 0x1833A5C
	protected bool CheckCondition(BattleActionData action, BattleLogicFunctionProcess.CommonAddStateTargetCheck funcTarget) { }

	// RVA: 0x18344E8 Offset: 0x18344E8 VA: 0x18344E8
	protected bool IsDuplicatedBuffGroup(BattleLogicFunctionProcess.CommonAddStateTargetCheck funcTarget, BuffEntity buffEnt, BattleServantData targetSvt) { }
}

// Namespace: 
public class BattleLogicFunctionProcess.BaseBuffProcess // TypeDefIndex: 9159
{
	// Methods

	// RVA: 0x18331F0 Offset: 0x18331F0 VA: 0x18331F0
	public void .ctor() { }

	// RVA: 0x18331F8 Offset: 0x18331F8 VA: 0x18331F8 Slot: 4
	public virtual bool CheckCondition(BattleActionData action, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget, BattleServantData targetSvt) { }
}

// Namespace: 
public class BattleLogicFunctionProcess.SkillRankUpBuffProcess : BattleLogicFunctionProcess.BaseBuffProcess // TypeDefIndex: 9160
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC65844 Offset: 0xC65844 VA: 0xC65844
	private static Func<BattleSkillInfoData, bool> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x18339B4 Offset: 0x18339B4 VA: 0x18339B4
	public void .ctor() { }

	// RVA: 0x18363D0 Offset: 0x18363D0 VA: 0x18363D0 Slot: 4
	public override bool CheckCondition(BattleActionData action, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget, BattleServantData targetSvt) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDDC8 Offset: 0xCCDDC8 VA: 0xCCDDC8
	// RVA: 0x18364D4 Offset: 0x18364D4 VA: 0x18364D4
	private static bool <CheckCondition>m__0(BattleSkillInfoData skill) { }
}

// Namespace: 
public class BattleLogicFunctionProcess.SkillSealSelectBuffProcess : BattleLogicFunctionProcess.BaseBuffProcess // TypeDefIndex: 9161
{
	// Methods

	// RVA: 0x18339BC Offset: 0x18339BC VA: 0x18339BC
	public void .ctor() { }

	// RVA: 0x1836504 Offset: 0x1836504 VA: 0x1836504 Slot: 4
	public override bool CheckCondition(BattleActionData action, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget, BattleServantData targetSvt) { }
}

// Namespace: 
public class BattleLogicFunctionProcess.CommonFunctionTypeProcess : BattleLogicFunctionProcess.BaseFunctionTypeProcess // TypeDefIndex: 9162
{
	// Methods

	// RVA: 0x1834C4C Offset: 0x1834C4C VA: 0x1834C4C
	public void .ctor() { }

	// RVA: 0x1834D4C Offset: 0x1834D4C VA: 0x1834D4C Slot: 8
	protected virtual bool CheckConditionPartial(BattleActionData action, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget, DataVals baseVals, BattleLogicFunction.ProcListInArgs procArgs) { }

	// RVA: 0x1834D54 Offset: 0x1834D54 VA: 0x1834D54 Slot: 7
	protected override bool checkCondition(BattleActionData action, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget) { }
}

// Namespace: 
public class BattleLogicFunctionProcess.MoveToLastSubMemberProcess : BattleLogicFunctionProcess.CommonFunctionTypeProcess // TypeDefIndex: 9163
{
	// Methods

	// RVA: 0x18360F4 Offset: 0x18360F4 VA: 0x18360F4
	public void .ctor() { }

	// RVA: 0x18360FC Offset: 0x18360FC VA: 0x18360FC Slot: 7
	protected override bool checkCondition(BattleActionData action, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget) { }

	// RVA: 0x18362B0 Offset: 0x18362B0 VA: 0x18362B0
	protected bool HasRefuseBuff(BattleServantData targetSvtData) { }
}

// Namespace: 
public class BattleLogicFunctionProcess.TransformServantProcess : BattleLogicFunctionProcess.CommonFunctionTypeProcess // TypeDefIndex: 9164
{
	// Methods

	// RVA: 0x1836688 Offset: 0x1836688 VA: 0x1836688
	public void .ctor() { }

	// RVA: 0x1836690 Offset: 0x1836690 VA: 0x1836690 Slot: 8
	protected override bool CheckConditionPartial(BattleActionData action, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget, DataVals baseVals, BattleLogicFunction.ProcListInArgs procArgs) { }
}

// Namespace: 
public class BattleLogicFunctionProcess.CommonFieldFunctionProcess : BattleLogicFunctionProcess.CommonFunctionTypeProcess // TypeDefIndex: 9165
{
	// Methods

	// RVA: 0x1834C44 Offset: 0x1834C44 VA: 0x1834C44
	public void .ctor() { }

	// RVA: 0x1834C54 Offset: 0x1834C54 VA: 0x1834C54 Slot: 5
	public override bool IsPreCheckTargetsAvailable(FunctionEntity funcEnt, int actorUniqueId) { }

	// RVA: 0x1834C70 Offset: 0x1834C70 VA: 0x1834C70
	protected bool IsTargetNotServant(FunctionEntity funcEnt, int actorUniqueId) { }

	// RVA: 0x1834CB8 Offset: 0x1834CB8 VA: 0x1834CB8 Slot: 6
	protected override bool checkCommonCondition(BattleActionData action, BattleLogicFunctionProcess.FunctionTargetCheck funcTarget) { }
}

// Namespace: 
public class BattleLogicNomal // TypeDefIndex: 9166
{
	// Fields
	public BattleData data; // 0x10
	public BattleLogic logic; // 0x18
	public BattleLogicSkill logicskill; // 0x20
	public BattleLogicTarget logictarget; // 0x28
	public BattleLogicFunction logicfunction; // 0x30
	public int commandIndex; // 0x38
	public BattleLogicTask[] zeroTask; // 0x40
	private BattleLogicTask tmpShiftTask; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC65854 Offset: 0xC65854 VA: 0xC65854
	private static Comparison<BattleBuffData.BuffData> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC65864 Offset: 0xC65864 VA: 0xC65864
	private static Comparison<BattleBuffData.BuffData> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC65874 Offset: 0xC65874 VA: 0xC65874
	private static Action<AiNpcBattleServantData> <>f__am$cache2; // 0x10

	// Properties
	public BaseBattleEvent BattleEvent { get; }

	// Methods

	// RVA: 0x1836798 Offset: 0x1836798 VA: 0x1836798
	public void .ctor() { }

	// RVA: 0x183687C Offset: 0x183687C VA: 0x183687C
	public BaseBattleEvent get_BattleEvent() { }

	// RVA: 0x18368A8 Offset: 0x18368A8 VA: 0x18368A8
	public void setReactionFunction(Dictionary<BattleLogicTask.ACTIONTYPE, BattleLogic.reactionFunction> list) { }

	// RVA: 0x1836944 Offset: 0x1836944 VA: 0x1836944
	public bool checkOverKill() { }

	// RVA: 0x1836A3C Offset: 0x1836A3C VA: 0x1836A3C
	public BattleLogicTask[] taskCommandAttack(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x1837528 Offset: 0x1837528 VA: 0x1837528
	public BattleLogicTask[] taskAddCommandAttack(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x1837870 Offset: 0x1837870 VA: 0x1837870
	public BattleLogicTask[] taskCounterFuncPlayer(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x1837E68 Offset: 0x1837E68 VA: 0x1837E68
	public BattleLogicTask[] taskCounterFuncEnemy(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x1837880 Offset: 0x1837880 VA: 0x1837880
	public BattleLogicTask[] taskCounterFunc(BattleData data, bool isEnemy = True, bool isSkillCounter = False) { }

	// RVA: 0x1837F40 Offset: 0x1837F40 VA: 0x1837F40
	public BattleLogicTask[] taskComboOrderBefore(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x1837F94 Offset: 0x1837F94 VA: 0x1837F94
	public BattleLogicTask[] taskComboOrderAfter(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x18380A4 Offset: 0x18380A4 VA: 0x18380A4
	public BattleActionData createCommandBattle(BattleLogicTask task) { }

	// RVA: 0x183954C Offset: 0x183954C VA: 0x183954C
	public BattleActionData createBackStep(int uniqueId) { }

	// RVA: 0x18395E0 Offset: 0x18395E0 VA: 0x18395E0
	public BattleActionData createComboOrder(BattleLogicTask task) { }

	// RVA: 0x18398E4 Offset: 0x18398E4 VA: 0x18398E4
	public BattleLogicTask[] taskPlayMotion(BattleServantData svtData, string motionName, Transform Tr) { }

	// RVA: 0x1839A78 Offset: 0x1839A78 VA: 0x1839A78
	public BattleLogicTask[] taskPlaySubEntryMotion(BattleServantData svtData, Transform Tr, bool isTactical = False) { }

	// RVA: 0x1839E1C Offset: 0x1839E1C VA: 0x1839E1C
	public int getCountSubmember(BattleServantData[] svtList) { }

	// RVA: 0x1839ED0 Offset: 0x1839ED0 VA: 0x1839ED0
	public BattleActionData createPlayMotion(BattleLogicTask task) { }

	// RVA: 0x1839FEC Offset: 0x1839FEC VA: 0x1839FEC
	public BattleActionData createStartTurn(BattleLogicTask task) { }

	// RVA: 0x183A100 Offset: 0x183A100 VA: 0x183A100
	public BattleActionData createStartEnemyTurn(BattleLogicTask task) { }

	// RVA: 0x183A238 Offset: 0x183A238 VA: 0x183A238
	private bool CheckDeadEnemy() { }

	// RVA: 0x183A290 Offset: 0x183A290 VA: 0x183A290
	private BattleActionData DeadChangePos() { }

	// RVA: 0x183A628 Offset: 0x183A628 VA: 0x183A628
	public BattleActionData createEndTurnPlayer(BattleLogicTask task) { }

	// RVA: 0x183BCA4 Offset: 0x183BCA4 VA: 0x183BCA4
	private void SetNextTargetId() { }

	// RVA: 0x183C158 Offset: 0x183C158 VA: 0x183C158
	public BattleActionData createEndTurnEnemy(BattleLogicTask task) { }

	// RVA: 0x183D7CC Offset: 0x183D7CC VA: 0x183D7CC
	public BattleLogicTask[] taskBuffAdd(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x183D8F0 Offset: 0x183D8F0 VA: 0x183D8F0
	public BattleActionData createBuffAddPlayer(BattleLogicTask task) { }

	// RVA: 0x183DB7C Offset: 0x183DB7C VA: 0x183DB7C
	public BattleActionData createBuffAddEnemy(BattleLogicTask task) { }

	// RVA: 0x183DD48 Offset: 0x183DD48 VA: 0x183DD48
	public BattleLogicTask[] checkReflectionTask(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x183E0A0 Offset: 0x183E0A0 VA: 0x183E0A0
	private int getShiftableUniqueId(int uniqueId) { }

	// RVA: 0x183E1E0 Offset: 0x183E1E0 VA: 0x183E1E0
	public BattleLogicTask[] taskCheckShiftServants(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x183E3C8 Offset: 0x183E3C8 VA: 0x183E3C8
	public BattleActionData createShiftServant(BattleLogicTask task) { }

	// RVA: 0x183E1E8 Offset: 0x183E1E8 VA: 0x183E1E8
	public BattleLogicTask[] shiftServantTaskReaction(BattleLogicTask task) { }

	// RVA: 0x18391EC Offset: 0x18391EC VA: 0x18391EC
	private void commandCodeBuffProcess(BattleBuffData.CheckInvokeBuff checkInvokeBuff, SkillLvMaster skillLvMst, BattleCommandData command, List<BattleBuffData.BuffData> commandCodeBuffList, BattleActionData actionData, bool isCommandAfter, BattleLogicFunction.AttackSideEffectFunctionArgument arg) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDDD8 Offset: 0xCCDDD8 VA: 0xCCDDD8
	// RVA: 0x183E598 Offset: 0x183E598 VA: 0x183E598
	private static int <createCommandBattle>m__0(BattleBuffData.BuffData a, BattleBuffData.BuffData b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDDE8 Offset: 0xCCDDE8 VA: 0xCCDDE8
	// RVA: 0x183E5D8 Offset: 0x183E5D8 VA: 0x183E5D8
	private static int <createCommandBattle>m__1(BattleBuffData.BuffData a, BattleBuffData.BuffData b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDDF8 Offset: 0xCCDDF8 VA: 0xCCDDF8
	// RVA: 0x183E618 Offset: 0x183E618 VA: 0x183E618
	private static void <createBuffAddPlayer>m__2(AiNpcBattleServantData npc) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44274 Offset: 0xC44274 VA: 0xC44274
private sealed class BattleLogicNomal.<createEndTurnPlayer>c__AnonStorey0 // TypeDefIndex: 9167
{
	// Fields
	internal bool isEndEnemyTurn; // 0x10
	internal int[] fieldIndiv; // 0x18
	internal BattleLogicNomal $this; // 0x20

	// Methods

	// RVA: 0x183BC9C Offset: 0x183BC9C VA: 0x183BC9C
	public void .ctor() { }

	// RVA: 0x183E6A4 Offset: 0x183E6A4 VA: 0x183E6A4
	internal void <>m__0(AiNpcBattleServantData npc) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44284 Offset: 0xC44284 VA: 0xC44284
private sealed class BattleLogicNomal.<createEndTurnEnemy>c__AnonStorey1 // TypeDefIndex: 9168
{
	// Fields
	internal bool isEndEnemyTurn; // 0x10
	internal int[] fieldIndiv; // 0x18
	internal BattleLogicNomal $this; // 0x20

	// Methods

	// RVA: 0x183D7C4 Offset: 0x183D7C4 VA: 0x183D7C4
	public void .ctor() { }

	// RVA: 0x183E644 Offset: 0x183E644 VA: 0x183E644
	internal void <>m__0(AiNpcBattleServantData npc) { }
}

// Namespace: 
public class NpcAiCheckTask : BattleLogicTask // TypeDefIndex: 9169
{
	// Fields
	protected BattleLogicNpcAi logicNpcAi; // 0xB0
	protected NpcAiCheckTask.Argument arg; // 0xB8

	// Methods

	// RVA: 0x1396B04 Offset: 0x1396B04 VA: 0x1396B04
	public void .ctor(BattleLogicNpcAi logicNpcAi, NpcAiCheckTask.Argument arg) { }

	// RVA: 0x1396BE8 Offset: 0x1396BE8 VA: 0x1396BE8 Slot: 5
	public override BattleLogicTask[] MakeActionTask() { }
}

// Namespace: 
public class NpcAiCheckTask.Argument // TypeDefIndex: 9170
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC65884 Offset: 0xC65884 VA: 0xC65884
	[DebuggerBrowsableAttribute] // RVA: 0xC65884 Offset: 0xC65884 VA: 0xC65884
	private BattleLogicTask.ACTIONTYPE <ActType>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC658C0 Offset: 0xC658C0 VA: 0xC658C0
	[DebuggerBrowsableAttribute] // RVA: 0xC658C0 Offset: 0xC658C0 VA: 0xC658C0
	private AiLogic.PROC_STATE <State>k__BackingField; // 0x14
	[CompilerGeneratedAttribute] // RVA: 0xC658FC Offset: 0xC658FC VA: 0xC658FC
	[DebuggerBrowsableAttribute] // RVA: 0xC658FC Offset: 0xC658FC VA: 0xC658FC
	private AiNpcBattleServantData <Npc>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC65938 Offset: 0xC65938 VA: 0xC65938
	[DebuggerBrowsableAttribute] // RVA: 0xC65938 Offset: 0xC65938 VA: 0xC65938
	private int <AiStateIndex>k__BackingField; // 0x20
	public NpcAiCheckTask.Argument nextNpcArg; // 0x28

	// Properties
	public BattleLogicTask.ACTIONTYPE ActType { get; set; }
	public AiLogic.PROC_STATE State { get; set; }
	public AiNpcBattleServantData Npc { get; set; }
	public int AiStateIndex { get; set; }

	// Methods

	// RVA: 0x1A8EB98 Offset: 0x1A8EB98 VA: 0x1A8EB98
	public void .ctor(BattleLogicTask.ACTIONTYPE actType, AiLogic.PROC_STATE state, List<AiNpcBattleServantData> npcList, int index = 0) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDE08 Offset: 0xCCDE08 VA: 0xCCDE08
	// RVA: 0x1A8ECBC Offset: 0x1A8ECBC VA: 0x1A8ECBC
	public BattleLogicTask.ACTIONTYPE get_ActType() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDE18 Offset: 0xCCDE18 VA: 0xCCDE18
	// RVA: 0x1A8EC9C Offset: 0x1A8EC9C VA: 0x1A8EC9C
	private void set_ActType(BattleLogicTask.ACTIONTYPE value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDE28 Offset: 0xCCDE28 VA: 0xCCDE28
	// RVA: 0x1A8ECC4 Offset: 0x1A8ECC4 VA: 0x1A8ECC4
	public AiLogic.PROC_STATE get_State() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDE38 Offset: 0xCCDE38 VA: 0xCCDE38
	// RVA: 0x1A8ECA4 Offset: 0x1A8ECA4 VA: 0x1A8ECA4
	private void set_State(AiLogic.PROC_STATE value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDE48 Offset: 0xCCDE48 VA: 0xCCDE48
	// RVA: 0x1A8ECB4 Offset: 0x1A8ECB4 VA: 0x1A8ECB4
	public AiNpcBattleServantData get_Npc() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDE58 Offset: 0xCCDE58 VA: 0xCCDE58
	// RVA: 0x1A8ECAC Offset: 0x1A8ECAC VA: 0x1A8ECAC
	private void set_Npc(AiNpcBattleServantData value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDE68 Offset: 0xCCDE68 VA: 0xCCDE68
	// RVA: 0x1A8ECCC Offset: 0x1A8ECCC VA: 0x1A8ECCC
	public int get_AiStateIndex() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDE78 Offset: 0xCCDE78 VA: 0xCCDE78
	// RVA: 0x1A8ECD4 Offset: 0x1A8ECD4 VA: 0x1A8ECD4
	private void set_AiStateIndex(int value) { }

	// RVA: 0x1A8ECDC Offset: 0x1A8ECDC VA: 0x1A8ECDC
	public void AddNextAiCheckTask(BattleLogicNpcAi logicNpcAi, List<BattleLogicTask> taskList) { }
}

// Namespace: 
public class BattleLogicNpcAi // TypeDefIndex: 9171
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC65974 Offset: 0xC65974 VA: 0xC65974
	[DebuggerBrowsableAttribute] // RVA: 0xC65974 Offset: 0xC65974 VA: 0xC65974
	private BattleLogic <Logic>k__BackingField; // 0x10
	private AiLogic aiLogic; // 0x18
	private AiActMaster aiActMst; // 0x20
	public BattleLogicTask[] emptyTask; // 0x28
	private Dictionary<BattleLogic.LOGICTYPE, BattleLogicTask.ACTIONTYPE> dicLogicToActionType; // 0x30
	private Dictionary<BattleLogicTask.ACTIONTYPE, AiLogic.PROC_STATE> dicActionTypeToState; // 0x38
	private BattleLogicNpcAi.BaseAiActProc noneAiActProc; // 0x40
	private Dictionary<AiAct.TYPE, BattleLogicNpcAi.BaseAiActProc> dicAiActProc; // 0x48

	// Properties
	public BattleLogic Logic { get; set; }
	public BattlePerformance Perf { get; }
	public BattleData Data { get; }
	public BattleLogicTarget LogicTarget { get; }

	// Methods

	// RVA: 0x183E704 Offset: 0x183E704 VA: 0x183E704
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDE88 Offset: 0xCCDE88 VA: 0xCCDE88
	// RVA: 0x183EB84 Offset: 0x183EB84 VA: 0x183EB84
	public BattleLogic get_Logic() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDE98 Offset: 0xCCDE98 VA: 0xCCDE98
	// RVA: 0x183EB8C Offset: 0x183EB8C VA: 0x183EB8C
	public void set_Logic(BattleLogic value) { }

	// RVA: 0x183EB94 Offset: 0x183EB94 VA: 0x183EB94
	public BattlePerformance get_Perf() { }

	// RVA: 0x183EBC0 Offset: 0x183EBC0 VA: 0x183EBC0
	public BattleData get_Data() { }

	// RVA: 0x183EBEC Offset: 0x183EBEC VA: 0x183EBEC
	public BattleLogicTarget get_LogicTarget() { }

	[ConditionalAttribute] // RVA: 0xCCDEA8 Offset: 0xCCDEA8 VA: 0xCCDEA8
	// RVA: 0x183EC1C Offset: 0x183EC1C VA: 0x183EC1C
	protected void DebugLog(string str) { }

	// RVA: 0x183EC20 Offset: 0x183EC20 VA: 0x183EC20
	public void Initialize(BattleLogic logic) { }

	// RVA: 0x183ECF0 Offset: 0x183ECF0 VA: 0x183ECF0
	public void SetReactionFunction(Dictionary<BattleLogicTask.ACTIONTYPE, BattleLogic.reactionFunction> list) { }

	// RVA: 0x183EF38 Offset: 0x183EF38 VA: 0x183EF38
	public BattleLogicTask.ACTIONTYPE ConvertLogicToActType(BattleLogic.LOGICTYPE type) { }

	// RVA: 0x183EF9C Offset: 0x183EF9C VA: 0x183EF9C
	public AiLogic.PROC_STATE ConvertActionTypeToState(BattleLogicTask.ACTIONTYPE type) { }

	// RVA: 0x183F000 Offset: 0x183F000 VA: 0x183F000
	public BattleLogicTask[] MakeAiCheckTask(BattleLogic.LOGICTYPE logicType, BattleData data) { }

	// RVA: 0x183F028 Offset: 0x183F028 VA: 0x183F028
	public BattleLogicTask[] MakeAiCheckTask(BattleLogicTask.ACTIONTYPE actType, BattleData data) { }

	// RVA: 0x183F1DC Offset: 0x183F1DC VA: 0x183F1DC
	private BattleLogicTask[] MakeAiActionTask(BattleLogicTask task) { }

	// RVA: 0x183F220 Offset: 0x183F220 VA: 0x183F220
	public void AddAiActionTask(List<BattleLogicTask> taskList, NpcAiCheckTask.Argument arg) { }

	// RVA: 0x183F3C4 Offset: 0x183F3C4 VA: 0x183F3C4
	public BattleLogicTask[] ProcAiAct(AiNpcBattleServantData npcSvt, AiEntity aiEnt) { }

	// RVA: 0x183F67C Offset: 0x183F67C VA: 0x183F67C
	public BattleLogicTask MakeStepInTask(int targetId) { }

	// RVA: 0x183F738 Offset: 0x183F738 VA: 0x183F738
	public BattleLogicTask MakeBackStepTask(int targetId) { }

	// RVA: 0x183F5FC Offset: 0x183F5FC VA: 0x183F5FC
	public BattleLogicNpcAi.BaseAiActProc GetAiActProc(AiAct.TYPE actType) { }
}

// Namespace: 
public class BattleLogicNpcAi.AiActArgument // TypeDefIndex: 9172
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC659B0 Offset: 0xC659B0 VA: 0xC659B0
	[DebuggerBrowsableAttribute] // RVA: 0xC659B0 Offset: 0xC659B0 VA: 0xC659B0
	private AiNpcBattleServantData <NpcSvt>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC659EC Offset: 0xC659EC VA: 0xC659EC
	[DebuggerBrowsableAttribute] // RVA: 0xC659EC Offset: 0xC659EC VA: 0xC659EC
	private AiEntity <AiEnt>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC65A28 Offset: 0xC65A28 VA: 0xC65A28
	[DebuggerBrowsableAttribute] // RVA: 0xC65A28 Offset: 0xC65A28 VA: 0xC65A28
	private AiActEntity <AiActEnt>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC65A64 Offset: 0xC65A64 VA: 0xC65A64
	[DebuggerBrowsableAttribute] // RVA: 0xC65A64 Offset: 0xC65A64 VA: 0xC65A64
	private int <CountAct>k__BackingField; // 0x28

	// Properties
	public AiNpcBattleServantData NpcSvt { get; set; }
	public AiEntity AiEnt { get; set; }
	public AiActEntity AiActEnt { get; set; }
	public AiAct.TYPE AiActType { get; }
	public int CountAct { get; set; }

	// Methods

	// RVA: 0x183F50C Offset: 0x183F50C VA: 0x183F50C
	public void .ctor(AiActMaster aiActMst, AiNpcBattleServantData npcSvt, AiEntity aiEnt) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDEE0 Offset: 0xCCDEE0 VA: 0xCCDEE0
	// RVA: 0x183F81C Offset: 0x183F81C VA: 0x183F81C
	public AiNpcBattleServantData get_NpcSvt() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDEF0 Offset: 0xCCDEF0 VA: 0xCCDEF0
	// RVA: 0x183F7F4 Offset: 0x183F7F4 VA: 0x183F7F4
	private void set_NpcSvt(AiNpcBattleServantData value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDF00 Offset: 0xCCDF00 VA: 0xCCDF00
	// RVA: 0x183F824 Offset: 0x183F824 VA: 0x183F824
	public AiEntity get_AiEnt() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDF10 Offset: 0xCCDF10 VA: 0xCCDF10
	// RVA: 0x183F7FC Offset: 0x183F7FC VA: 0x183F7FC
	private void set_AiEnt(AiEntity value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDF20 Offset: 0xCCDF20 VA: 0xCCDF20
	// RVA: 0x183F814 Offset: 0x183F814 VA: 0x183F814
	public AiActEntity get_AiActEnt() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDF30 Offset: 0xCCDF30 VA: 0xCCDF30
	// RVA: 0x183F804 Offset: 0x183F804 VA: 0x183F804
	private void set_AiActEnt(AiActEntity value) { }

	// RVA: 0x183F5CC Offset: 0x183F5CC VA: 0x183F5CC
	public AiAct.TYPE get_AiActType() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDF40 Offset: 0xCCDF40 VA: 0xCCDF40
	// RVA: 0x183F82C Offset: 0x183F82C VA: 0x183F82C
	public int get_CountAct() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCDF50 Offset: 0xCCDF50 VA: 0xCCDF50
	// RVA: 0x183F80C Offset: 0x183F80C VA: 0x183F80C
	private void set_CountAct(int value) { }
}

// Namespace: 
public class BattleLogicNpcAi.BaseAiActProc // TypeDefIndex: 9173
{
	// Fields
	protected BattleLogicNpcAi logicNpcAi; // 0x10

	// Properties
	protected BattleData Data { get; }
	protected BattleLogic Logic { get; }
	public virtual bool IsNotAct { get; }

	// Methods

	// RVA: 0x183EB6C Offset: 0x183EB6C VA: 0x183EB6C
	public void .ctor() { }

	[ConditionalAttribute] // RVA: 0xCCDF60 Offset: 0xCCDF60 VA: 0xCCDF60
	// RVA: 0x183F834 Offset: 0x183F834 VA: 0x183F834
	protected void DebugLog(string str) { }

	// RVA: 0x183F838 Offset: 0x183F838 VA: 0x183F838
	protected BattleData get_Data() { }

	// RVA: 0x183F874 Offset: 0x183F874 VA: 0x183F874
	protected BattleLogic get_Logic() { }

	// RVA: 0x183F8A0 Offset: 0x183F8A0 VA: 0x183F8A0 Slot: 4
	public virtual bool get_IsNotAct() { }

	// RVA: 0x183F8A8 Offset: 0x183F8A8 VA: 0x183F8A8 Slot: 5
	public virtual BattleLogicNpcAi.BaseAiActProc Init(BattleLogicNpcAi logicNpcAi) { }

	// RVA: 0x183F8B0 Offset: 0x183F8B0 VA: 0x183F8B0 Slot: 6
	public virtual void PreActChangeThinking(BattleLogicNpcAi.AiActArgument arg) { }

	// RVA: 0x183F8B4 Offset: 0x183F8B4 VA: 0x183F8B4 Slot: 7
	public virtual void AddActCount(BattleLogicNpcAi.AiActArgument arg) { }

	// RVA: 0x183F8B8 Offset: 0x183F8B8 VA: 0x183F8B8 Slot: 8
	public virtual BattleLogicNpcAi.BaseAiActProc GetFixAiActProc(BattleLogicNpcAi.AiActArgument arg) { }

	// RVA: 0x183F8F8 Offset: 0x183F8F8 VA: 0x183F8F8 Slot: 9
	protected virtual AiAct.TYPE FixAiActType(BattleLogicNpcAi.AiActArgument arg) { }

	// RVA: 0x183F900 Offset: 0x183F900 VA: 0x183F900 Slot: 10
	public virtual BattleLogicTask[] MakeTask(BattleLogicNpcAi.AiActArgument arg) { }
}

// Namespace: 
public class BattleLogicNpcAi.CommonAiActProc : BattleLogicNpcAi.BaseAiActProc // TypeDefIndex: 9174
{
	// Properties
	public override bool IsNotAct { get; }
	protected virtual bool IsDispMessage { get; }

	// Methods

	// RVA: 0x183F92C Offset: 0x183F92C VA: 0x183F92C
	public void .ctor() { }

	// RVA: 0x183F93C Offset: 0x183F93C VA: 0x183F93C Slot: 4
	public override bool get_IsNotAct() { }

	// RVA: 0x183F944 Offset: 0x183F944 VA: 0x183F944 Slot: 11
	protected virtual bool get_IsDispMessage() { }

	// RVA: 0x183F94C Offset: 0x183F94C VA: 0x183F94C Slot: 6
	public override void PreActChangeThinking(BattleLogicNpcAi.AiActArgument arg) { }

	// RVA: 0x183F9E8 Offset: 0x183F9E8 VA: 0x183F9E8 Slot: 7
	public override void AddActCount(BattleLogicNpcAi.AiActArgument arg) { }

	// RVA: 0x183FA28 Offset: 0x183FA28 VA: 0x183FA28 Slot: 12
	protected virtual void AddTask(List<BattleLogicTask> taskList, BattleLogicNpcAi.AiActArgument arg, BattleLogicTask baseTask) { }

	// RVA: 0x183FA2C Offset: 0x183FA2C VA: 0x183FA2C Slot: 10
	public override BattleLogicTask[] MakeTask(BattleLogicNpcAi.AiActArgument arg) { }

	// RVA: 0x183FAE8 Offset: 0x183FAE8 VA: 0x183FAE8 Slot: 13
	protected virtual BattleLogicTask MakeCommonTask(BattleLogicNpcAi.AiActArgument arg) { }

	// RVA: 0x183FD0C Offset: 0x183FD0C VA: 0x183FD0C
	protected int[] GetTargetIds(BattleLogicNpcAi.AiActArgument arg, int[] targetArray) { }
}

// Namespace: 
public class BattleLogicNpcAi.ChangeThinkingActProc : BattleLogicNpcAi.CommonAiActProc // TypeDefIndex: 9175
{
	// Properties
	public override bool IsNotAct { get; }

	// Methods

	// RVA: 0x183EB74 Offset: 0x183EB74 VA: 0x183EB74
	public void .ctor() { }

	// RVA: 0x183F934 Offset: 0x183F934 VA: 0x183F934 Slot: 4
	public override bool get_IsNotAct() { }
}

// Namespace: 
public class BattleLogicNpcAi.NoblePhantasmActProc : BattleLogicNpcAi.CommonAiActProc // TypeDefIndex: 9176
{
	// Methods

	// RVA: 0x183EB7C Offset: 0x183EB7C VA: 0x183EB7C
	public void .ctor() { }

	// RVA: 0x1840124 Offset: 0x1840124 VA: 0x1840124 Slot: 9
	protected override AiAct.TYPE FixAiActType(BattleLogicNpcAi.AiActArgument arg) { }

	// RVA: 0x1840194 Offset: 0x1840194 VA: 0x1840194 Slot: 12
	protected override void AddTask(List<BattleLogicTask> taskList, BattleLogicNpcAi.AiActArgument arg, BattleLogicTask baseTask) { }

	// RVA: 0x1840360 Offset: 0x1840360 VA: 0x1840360
	protected void OverwriteTreasureDevice(BattleServantData svtData, int[] actVals) { }
}

// Namespace: 
private enum BattleLogicNpcAi.NoblePhantasmActProc.ParamOrder // TypeDefIndex: 9177
{
	// Fields
	public int value__; // 0x0
	public const BattleLogicNpcAi.NoblePhantasmActProc.ParamOrder ID = 0;
	public const BattleLogicNpcAi.NoblePhantasmActProc.ParamOrder LV = 1;
	public const BattleLogicNpcAi.NoblePhantasmActProc.ParamOrder CHANGE_NP = 2;
}

// Namespace: 
public class BattleLogicReaction // TypeDefIndex: 9178
{
	// Fields
	public BattleData data; // 0x10
	public BattleLogic logic; // 0x18
	public BattlePerformance perf; // 0x20
	public BattleLogicSkill logicskill; // 0x28
	public BattleLogicFunction logicfunction; // 0x30
	public BattleLogicEnemyAi logicenemyai; // 0x38
	public BattleLogicFieldAi logicfieldai; // 0x40

	// Properties
	public BaseBattleEvent BattleEvent { get; }

	// Methods

	// RVA: 0x1840474 Offset: 0x1840474 VA: 0x1840474
	public void .ctor() { }

	// RVA: 0x184047C Offset: 0x184047C VA: 0x184047C
	public BaseBattleEvent get_BattleEvent() { }

	// RVA: 0x18404A8 Offset: 0x18404A8 VA: 0x18404A8
	public BattleLogicTask[] checkResurrection() { }

	// RVA: 0x1840D24 Offset: 0x1840D24 VA: 0x1840D24
	public BattleActionData createResurrection(BattleLogicTask task) { }

	// RVA: 0x1841198 Offset: 0x1841198 VA: 0x1841198
	public BattleLogicTask[] checkDead() { }

	// RVA: 0x1841684 Offset: 0x1841684 VA: 0x1841684
	public BattleActionData createDeadMotion(BattleLogicTask task) { }

	// RVA: 0x1841D88 Offset: 0x1841D88 VA: 0x1841D88
	private void updateRemoveBuff(BattleServantData svtData) { }

	// RVA: 0x184285C Offset: 0x184285C VA: 0x184285C
	public BattleLogicTask[] createTaskProcBuffDead(int uniqueId) { }

	// RVA: 0x18429AC Offset: 0x18429AC VA: 0x18429AC
	public BattleLogicTask[] createTaskDead(int uniqueId) { }

	// RVA: 0x184099C Offset: 0x184099C VA: 0x184099C
	public BattleLogicTask[] createTaskGuts(int uniqueId) { }

	// RVA: 0x1842F68 Offset: 0x1842F68 VA: 0x1842F68
	public BattleLogicTask[] checkPlayerActionEnd(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x184313C Offset: 0x184313C VA: 0x184313C
	public BattleLogicTask[] checkEnemyStartTurn(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x1843310 Offset: 0x1843310 VA: 0x1843310
	public BattleLogicTask[] checkEnemyEndTurn(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x18434E4 Offset: 0x18434E4 VA: 0x18434E4
	public BattleLogicTask[] checkEnemyWaveStart(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x18436E0 Offset: 0x18436E0 VA: 0x18436E0
	public BattleLogicTask[] checkWithdraw() { }

	// RVA: 0x1843A74 Offset: 0x1843A74 VA: 0x1843A74
	public BattleActionData createWithdraw(BattleLogicTask task) { }

	// RVA: 0x1843BF4 Offset: 0x1843BF4 VA: 0x1843BF4
	public BattleLogicTask[] checkEnemyShiftAfter(BattleLogic.LOGICTYPE ltype, BattleData data) { }

	// RVA: 0x1843DF0 Offset: 0x1843DF0 VA: 0x1843DF0
	public BattleLogicTask[] checkChangeApp() { }

	// RVA: 0x18415AC Offset: 0x18415AC VA: 0x18415AC
	public BattleLogicTask getChangeAppearance(BattleServantData svtData, bool isDead = False) { }

	// RVA: 0x18440EC Offset: 0x18440EC VA: 0x18440EC
	public BattleActionData createChangeApp(BattleLogicTask task) { }
}

// Namespace: 
public class BattleLogicSkill // TypeDefIndex: 9179
{
	// Fields
	public BattleData data; // 0x10
	public BattleLogic logic; // 0x18
	public BattleLogicTarget logictarget; // 0x20
	public BattleLogicFunction logicfunction; // 0x28

	// Methods

	// RVA: 0x18441F0 Offset: 0x18441F0 VA: 0x18441F0
	public void .ctor() { }

	// RVA: 0x183BE20 Offset: 0x183BE20 VA: 0x183BE20
	public BattleLogicTask[] taskSkill(BattleSkillInfoData skillInfo, int[] ptTargetList, int[] enemyTargetList, bool checkAlive = False, bool checkRevengeId = False, bool isCanCounterSkill = False) { }

	// RVA: 0x18442E8 Offset: 0x18442E8 VA: 0x18442E8
	public BattleLogicTask[] taskCommandSpell(int skillId, int skillLv, int[] ptTargetList) { }

	// RVA: 0x1841DE8 Offset: 0x1841DE8 VA: 0x1841DE8
	public BattleActionData createSkillData(BattleLogicTask task) { }

	// RVA: 0x18444D8 Offset: 0x18444D8 VA: 0x18444D8
	public BattleLogicTask MakeAddInvokeSkillTask(SkillLvMaster skillLvMst, SkillLvEntity skillLvEnt, BattleLogicTask baseTask) { }

	// RVA: 0x184472C Offset: 0x184472C VA: 0x184472C
	public void actPassiveSkill(BattleSkillInfoData skillInfo, bool isShift = False) { }

