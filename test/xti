	// RVA: 0x19B6778 Offset: 0x19B6778 VA: 0x19B6778
	public string get_SkillText() { }

	// RVA: 0x19B6884 Offset: 0x19B6884 VA: 0x19B6884
	public int get_ImageId() { }

	// RVA: 0x19B689C Offset: 0x19B689C VA: 0x19B689C
	public string get_NumText() { }

	// RVA: 0x19B6978 Offset: 0x19B6978 VA: 0x19B6978
	public bool get_IsCanNotSelect() { }

	// RVA: 0x19B6980 Offset: 0x19B6980 VA: 0x19B6980
	public int get_Magnification() { }
}

// Namespace: 
public class BoostItemListViewItemDraw : MonoBehaviour // TypeDefIndex: 10341
{
	// Fields
	[SerializeField] // RVA: 0xC72DA8 Offset: 0xC72DA8 VA: 0xC72DA8
	protected UISprite baseSprite; // 0x18
	[SerializeField] // RVA: 0xC72DB8 Offset: 0xC72DB8 VA: 0xC72DB8
	protected UISprite maskSprite; // 0x20
	[SerializeField] // RVA: 0xC72DC8 Offset: 0xC72DC8 VA: 0xC72DC8
	protected UICommonButton baseButton; // 0x28
	[SerializeField] // RVA: 0xC72DD8 Offset: 0xC72DD8 VA: 0xC72DD8
	protected ItemIconComponent itemIconInfo; // 0x30
	[SerializeField] // RVA: 0xC72DE8 Offset: 0xC72DE8 VA: 0xC72DE8
	protected UILabel nameLabel; // 0x38
	[SerializeField] // RVA: 0xC72DF8 Offset: 0xC72DF8 VA: 0xC72DF8
	protected UILabel detailLabel; // 0x40
	[SerializeField] // RVA: 0xC72E08 Offset: 0xC72E08 VA: 0xC72E08
	protected UILabel infoLabel; // 0x48
	[SerializeField] // RVA: 0xC72E18 Offset: 0xC72E18 VA: 0xC72E18
	protected UILabel numLabel; // 0x50
	[SerializeField] // RVA: 0xC72E28 Offset: 0xC72E28 VA: 0xC72E28
	protected UISprite magnificationSprite; // 0x58
	private static readonly int DETAIL_FONT_SIZE; // 0x0

	// Methods

	// RVA: 0x19B6988 Offset: 0x19B6988 VA: 0x19B6988
	public void .ctor() { }

	// RVA: 0x19B6990 Offset: 0x19B6990 VA: 0x19B6990
	public void SetItem(BoostItemListViewItem item, BoostItemListViewItemDraw.DispMode mode) { }

	// RVA: 0x19B6D74 Offset: 0x19B6D74 VA: 0x19B6D74
	private static void .cctor() { }
}

// Namespace: 
public enum BoostItemListViewItemDraw.DispMode // TypeDefIndex: 10342
{
	// Fields
	public int value__; // 0x0
	public const BoostItemListViewItemDraw.DispMode INVISIBLE = 0;
	public const BoostItemListViewItemDraw.DispMode INVALID = 1;
	public const BoostItemListViewItemDraw.DispMode VALID = 2;
	public const BoostItemListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class BoostItemListViewManager : ListViewManager // TypeDefIndex: 10343
{
	// Fields
	protected BoostItemListViewManager.Kind kind; // 0x138
	protected BoostItemListViewManager.InitMode initMode; // 0x13C
	[CompilerGeneratedAttribute] // RVA: 0xC72E38 Offset: 0xC72E38 VA: 0xC72E38
	[DebuggerBrowsableAttribute] // RVA: 0xC72E38 Offset: 0xC72E38 VA: 0xC72E38
	private BoostItemListViewManager.CallbackFunc callbackFunc; // 0x140
	[CompilerGeneratedAttribute] // RVA: 0xC72E74 Offset: 0xC72E74 VA: 0xC72E74
	[DebuggerBrowsableAttribute] // RVA: 0xC72E74 Offset: 0xC72E74 VA: 0xC72E74
	private Action callbackFunc2; // 0x148
	protected int callbackCount; // 0x150

	// Properties
	public List<BoostItemListViewObject> ObjectList { get; }
	public List<BoostItemListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x19B6DC8 Offset: 0x19B6DC8 VA: 0x19B6DC8
	public void .ctor() { }

	// RVA: 0x19B6DD0 Offset: 0x19B6DD0 VA: 0x19B6DD0
	protected void add_callbackFunc(BoostItemListViewManager.CallbackFunc value) { }

	// RVA: 0x19B6EC0 Offset: 0x19B6EC0 VA: 0x19B6EC0
	protected void remove_callbackFunc(BoostItemListViewManager.CallbackFunc value) { }

	// RVA: 0x19B6FB0 Offset: 0x19B6FB0 VA: 0x19B6FB0
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x19B70A0 Offset: 0x19B70A0 VA: 0x19B70A0
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x19B7190 Offset: 0x19B7190 VA: 0x19B7190
	public List<BoostItemListViewObject> get_ObjectList() { }

	// RVA: 0x19B735C Offset: 0x19B735C VA: 0x19B735C
	public List<BoostItemListViewObject> get_ClippingObjectList() { }

	// RVA: 0x19B763C Offset: 0x19B763C VA: 0x19B763C
	public void CreateList(int[] itemQuestList, int questId) { }

	// RVA: 0x19B7960 Offset: 0x19B7960 VA: 0x19B7960
	public BoostItemListViewItem GetItem(int index) { }

	// RVA: 0x19B7A08 Offset: 0x19B7A08 VA: 0x19B7A08 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x19B7B40 Offset: 0x19B7B40 VA: 0x19B7B40
	public void SetMode(BoostItemListViewManager.InitMode mode, BoostItemListViewManager.CallbackFunc callback) { }

	// RVA: 0x19B7BB8 Offset: 0x19B7BB8 VA: 0x19B7BB8
	public void SetMode(BoostItemListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x19B7B48 Offset: 0x19B7B48 VA: 0x19B7B48
	public void SetMode(BoostItemListViewManager.InitMode mode) { }

	// RVA: 0x19B7DB4 Offset: 0x19B7DB4 VA: 0x19B7DB4
	protected void RequestListObject(BoostItemListViewObject.InitMode mode, float delay) { }

	// RVA: 0x19B7BC0 Offset: 0x19B7BC0 VA: 0x19B7BC0
	protected void RequestListObject(BoostItemListViewObject.InitMode mode) { }

	// RVA: 0x19B80C4 Offset: 0x19B80C4 VA: 0x19B80C4
	protected void OnMoveEnd() { }

	// RVA: 0x19B819C Offset: 0x19B819C VA: 0x19B819C
	protected void OnClickListView(ListViewObject obj) { }
}

// Namespace: 
public enum BoostItemListViewManager.Kind // TypeDefIndex: 10344
{
	// Fields
	public int value__; // 0x0
	public const BoostItemListViewManager.Kind EVENT = 0;
}

// Namespace: 
public enum BoostItemListViewManager.InitMode // TypeDefIndex: 10345
{
	// Fields
	public int value__; // 0x0
	public const BoostItemListViewManager.InitMode NONE = 0;
	public const BoostItemListViewManager.InitMode VALID = 1;
	public const BoostItemListViewManager.InitMode INPUT = 2;
}

// Namespace: 
public enum BoostItemListViewManager.ResultKind // TypeDefIndex: 10346
{
	// Fields
	public int value__; // 0x0
	public const BoostItemListViewManager.ResultKind CANCEL = 0;
	public const BoostItemListViewManager.ResultKind SELECT = 1;
	public const BoostItemListViewManager.ResultKind COMMAND_CARD = 2;
}

// Namespace: 
public sealed class BoostItemListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 10347
{
	// Methods

	// RVA: 0x19B843C Offset: 0x19B843C VA: 0x19B843C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x19B81F8 Offset: 0x19B81F8 VA: 0x19B81F8 Slot: 11
	public virtual void Invoke(BoostItemListViewManager.ResultKind result, int index) { }

	// RVA: 0x19B844C Offset: 0x19B844C VA: 0x19B844C Slot: 12
	public virtual IAsyncResult BeginInvoke(BoostItemListViewManager.ResultKind result, int index, AsyncCallback callback, object object) { }

	// RVA: 0x19B84F4 Offset: 0x19B84F4 VA: 0x19B84F4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class BoostItemListViewObject : ListViewObject // TypeDefIndex: 10348
{
	// Fields
	protected BoostItemListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC72EB0 Offset: 0xC72EB0 VA: 0xC72EB0
	[DebuggerBrowsableAttribute] // RVA: 0xC72EB0 Offset: 0xC72EB0 VA: 0xC72EB0
	private Action callbackFunc; // 0x70
	protected BoostItemListViewItemDraw itemDraw; // 0x78
	protected BoostItemListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x19B8500 Offset: 0x19B8500 VA: 0x19B8500
	public void .ctor() { }

	// RVA: 0x19B8568 Offset: 0x19B8568 VA: 0x19B8568
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x19B8654 Offset: 0x19B8654 VA: 0x19B8654
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x19B8740 Offset: 0x19B8740 VA: 0x19B8740
	protected void Awake() { }

	// RVA: 0x19B87B4 Offset: 0x19B87B4 VA: 0x19B87B4
	private void OnDestroy() { }

	// RVA: 0x19B75B8 Offset: 0x19B75B8 VA: 0x19B75B8
	public BoostItemListViewItem GetItem() { }

	// RVA: 0x19B8860 Offset: 0x19B8860 VA: 0x19B8860 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x19B886C Offset: 0x19B886C VA: 0x19B886C Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x19B88F4 Offset: 0x19B88F4 VA: 0x19B88F4
	public void Init(BoostItemListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x19B7FBC Offset: 0x19B7FBC VA: 0x19B7FBC
	public void Init(BoostItemListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x19B8040 Offset: 0x19B8040 VA: 0x19B8040
	public void Init(BoostItemListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x19B7AC0 Offset: 0x19B7AC0 VA: 0x19B7AC0
	public void Init(BoostItemListViewObject.InitMode initMode) { }

	// RVA: 0x19B8AAC Offset: 0x19B8AAC VA: 0x19B8AAC
	protected void SetupDisp() { }

	// RVA: 0x19B8BBC Offset: 0x19B8BBC VA: 0x19B8BBC
	protected void EventMoveEnd() { }
}

// Namespace: 
public enum BoostItemListViewObject.InitMode // TypeDefIndex: 10349
{
	// Fields
	public int value__; // 0x0
	public const BoostItemListViewObject.InitMode INVISIBLE = 0;
	public const BoostItemListViewObject.InitMode INVALID = 1;
	public const BoostItemListViewObject.InitMode VALID = 2;
	public const BoostItemListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum BoostItemListViewObject.State // TypeDefIndex: 10350
{
	// Fields
	public int value__; // 0x0
	public const BoostItemListViewObject.State INIT = 0;
	public const BoostItemListViewObject.State IDLE = 1;
	public const BoostItemListViewObject.State MOVE = 2;
	public const BoostItemListViewObject.State INPUT = 3;
}

// Namespace: 
public class BoostItemMenu : BaseDialog // TypeDefIndex: 10351
{
	// Fields
	[SerializeField] // RVA: 0xC72EEC Offset: 0xC72EEC VA: 0xC72EEC
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC72EFC Offset: 0xC72EFC VA: 0xC72EFC
	protected UILabel titleDetailLabel; // 0x60
	[SerializeField] // RVA: 0xC72F0C Offset: 0xC72F0C VA: 0xC72F0C
	protected UILabel useConfirmOptionLabel; // 0x68
	[SerializeField] // RVA: 0xC72F1C Offset: 0xC72F1C VA: 0xC72F1C
	protected BoostItemListViewManager itemListViewManager; // 0x70
	[SerializeField] // RVA: 0xC72F2C Offset: 0xC72F2C VA: 0xC72F2C
	protected UILabel decideLabel; // 0x78
	[SerializeField] // RVA: 0xC72F3C Offset: 0xC72F3C VA: 0xC72F3C
	protected UILabel cancelLabel; // 0x80
	[SerializeField] // RVA: 0xC72F4C Offset: 0xC72F4C VA: 0xC72F4C
	protected UISprite setupConfirmSprite; // 0x88
	[SerializeField] // RVA: 0xC72F5C Offset: 0xC72F5C VA: 0xC72F5C
	protected UICommonButton informationButton; // 0x90
	[CompilerGeneratedAttribute] // RVA: 0xC72F6C Offset: 0xC72F6C VA: 0xC72F6C
	[DebuggerBrowsableAttribute] // RVA: 0xC72F6C Offset: 0xC72F6C VA: 0xC72F6C
	private BoostItemMenu.CallbackFunc callbackFunc; // 0x98
	protected Action openCallbackFunc; // 0xA0
	protected Action closeCallbackFunc; // 0xA8
	protected BoostItemMenu.State state; // 0xB0
	protected bool isBoostItemUseConfirm; // 0xB4

	// Methods

	// RVA: 0x19B8BE4 Offset: 0x19B8BE4 VA: 0x19B8BE4
	public void .ctor() { }

	// RVA: 0x19B8C4C Offset: 0x19B8C4C VA: 0x19B8C4C
	protected void add_callbackFunc(BoostItemMenu.CallbackFunc value) { }

	// RVA: 0x19B8D38 Offset: 0x19B8D38 VA: 0x19B8D38
	protected void remove_callbackFunc(BoostItemMenu.CallbackFunc value) { }

	// RVA: 0x19B8E24 Offset: 0x19B8E24 VA: 0x19B8E24
	public BoostItemListViewItem GetItem(int index) { }

	// RVA: 0x19B8E58 Offset: 0x19B8E58 VA: 0x19B8E58
	public void Init() { }

	// RVA: 0x19B8E9C Offset: 0x19B8E9C VA: 0x19B8E9C
	public void Open(EventUpValSetupInfo setupInfo, BoostItemMenu.CallbackFunc callback, Action openCallback, bool IsFriendChocolate, bool IsAvailableFriendChocolate) { }

	// RVA: 0x19B94FC Offset: 0x19B94FC VA: 0x19B94FC
	protected void EndOpen() { }

	// RVA: 0x19B95B8 Offset: 0x19B95B8 VA: 0x19B95B8
	public void Close() { }

	// RVA: 0x19B95C0 Offset: 0x19B95C0 VA: 0x19B95C0
	public void Close(Action callback) { }

	// RVA: 0x19B966C Offset: 0x19B966C VA: 0x19B966C
	protected void EndClose() { }

	// RVA: 0x19B93F4 Offset: 0x19B93F4 VA: 0x19B93F4
	protected void Callback(BoostItemMenu.ResultKind result, int index = -1) { }

	// RVA: 0x19B96B0 Offset: 0x19B96B0 VA: 0x19B96B0
	public void OnClickCancel() { }

	// RVA: 0x19B96D4 Offset: 0x19B96D4 VA: 0x19B96D4
	public void OnClickDecide() { }

	// RVA: 0x19B96F8 Offset: 0x19B96F8 VA: 0x19B96F8
	protected void OnSelectItem(BoostItemListViewManager.ResultKind kind, int n) { }

	// RVA: 0x19B985C Offset: 0x19B985C VA: 0x19B985C
	public void OnClickInfomation() { }

	// RVA: 0x19B9880 Offset: 0x19B9880 VA: 0x19B9880
	public void OnClickSetupConfirm() { }
}

// Namespace: 
public enum BoostItemMenu.ResultKind // TypeDefIndex: 10352
{
	// Fields
	public int value__; // 0x0
	public const BoostItemMenu.ResultKind CANCEL = 0;
	public const BoostItemMenu.ResultKind SELECT = 1;
	public const BoostItemMenu.ResultKind INFOMATION = 2;
}

// Namespace: 
protected enum BoostItemMenu.State // TypeDefIndex: 10353
{
	// Fields
	public int value__; // 0x0
	public const BoostItemMenu.State INIT = 0;
	public const BoostItemMenu.State OPEN = 1;
	public const BoostItemMenu.State INPUT = 2;
	public const BoostItemMenu.State SELECTED = 3;
	public const BoostItemMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class BoostItemMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10354
{
	// Methods

	// RVA: 0x19B9BEC Offset: 0x19B9BEC VA: 0x19B9BEC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x19B99A8 Offset: 0x19B99A8 VA: 0x19B99A8 Slot: 11
	public virtual void Invoke(BoostItemMenu.ResultKind result, int index) { }

	// RVA: 0x19B9BFC Offset: 0x19B9BFC VA: 0x19B9BFC Slot: 12
	public virtual IAsyncResult BeginInvoke(BoostItemMenu.ResultKind result, int index, AsyncCallback callback, object object) { }

	// RVA: 0x19B9CA4 Offset: 0x19B9CA4 VA: 0x19B9CA4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC45294 Offset: 0xC45294 VA: 0xC45294
private sealed class BoostItemMenu.<Callback>c__AnonStorey0 // TypeDefIndex: 10355
{
	// Fields
	internal BoostItemMenu.ResultKind result; // 0x10
	internal int index; // 0x14
	internal BoostItemMenu $this; // 0x18

	// Methods

	// RVA: 0x19B96A8 Offset: 0x19B96A8 VA: 0x19B96A8
	public void .ctor() { }

	// RVA: 0x19B9948 Offset: 0x19B9948 VA: 0x19B9948
	internal void <>m__0() { }
}

// Namespace: 
public class DeckListViewItem : ListViewItem // TypeDefIndex: 10356
{
	// Fields
	protected PartyListViewItem partyItem; // 0x70

	// Properties
	public long DeckId { get; }
	public int DeckNum { get; }
	public string DeckName { get; }

	// Methods

	// RVA: 0x10C43D0 Offset: 0x10C43D0 VA: 0x10C43D0
	public void .ctor(int index, PartyListViewItem partyItem) { }

	// RVA: 0x10C43FC Offset: 0x10C43FC VA: 0x10C43FC Slot: 1
	protected override void Finalize() { }

	// RVA: 0x10C4404 Offset: 0x10C4404 VA: 0x10C4404
	public UserDeckEntity GetUserDeck(PartyListViewItem baseItem) { }

	// RVA: 0x10C443C Offset: 0x10C443C VA: 0x10C443C
	public PartyListViewItem GetPartyListViewItem() { }

	// RVA: 0x10C4444 Offset: 0x10C4444 VA: 0x10C4444
	public long get_DeckId() { }

	// RVA: 0x10C4474 Offset: 0x10C4474 VA: 0x10C4474
	public int get_DeckNum() { }

	// RVA: 0x10C44A4 Offset: 0x10C44A4 VA: 0x10C44A4
	public string get_DeckName() { }

	// RVA: 0x10C44D4 Offset: 0x10C44D4 VA: 0x10C44D4
	public PartyOrganizationListViewItem GetMember(int num) { }
}

// Namespace: 
public class DeckListViewItemDraw : MonoBehaviour // TypeDefIndex: 10357
{
	// Fields
	[SerializeField] // RVA: 0xC72FA8 Offset: 0xC72FA8 VA: 0xC72FA8
	protected UISprite baseSprite; // 0x18
	[SerializeField] // RVA: 0xC72FB8 Offset: 0xC72FB8 VA: 0xC72FB8
	protected UISprite maskSprite; // 0x20
	[SerializeField] // RVA: 0xC72FC8 Offset: 0xC72FC8 VA: 0xC72FC8
	protected UICommonButton baseButton; // 0x28
	[SerializeField] // RVA: 0xC72FD8 Offset: 0xC72FD8 VA: 0xC72FD8
	protected UILabel deckNumLabel; // 0x30
	[SerializeField] // RVA: 0xC72FE8 Offset: 0xC72FE8 VA: 0xC72FE8
	protected UILabel deckNameLabel; // 0x38
	[SerializeField] // RVA: 0xC72FF8 Offset: 0xC72FF8 VA: 0xC72FF8
	protected PartyOrganizationConfirmItemDraw[] memberObjectList; // 0x40
	protected static PartyOrganizationListViewItem emptyFollowerListViewItem; // 0x0

	// Methods

	// RVA: 0x10C450C Offset: 0x10C450C VA: 0x10C450C
	public void .ctor() { }

	// RVA: 0x10C4594 Offset: 0x10C4594 VA: 0x10C4594
	public void SetItem(DeckListViewItem item, DeckListViewItemDraw.DispMode mode) { }

	// RVA: 0x10C45D8 Offset: 0x10C45D8 VA: 0x10C45D8
	public void SetItem(PartyListViewItem item, DeckListViewItemDraw.DispMode mode) { }

	// RVA: 0x10C4850 Offset: 0x10C4850 VA: 0x10C4850
	private static void .cctor() { }
}

// Namespace: 
public enum DeckListViewItemDraw.DispMode // TypeDefIndex: 10358
{
	// Fields
	public int value__; // 0x0
	public const DeckListViewItemDraw.DispMode INVISIBLE = 0;
	public const DeckListViewItemDraw.DispMode INVALID = 1;
	public const DeckListViewItemDraw.DispMode VALID = 2;
	public const DeckListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class DeckListViewManager : ListViewManager // TypeDefIndex: 10359
{
	// Fields
	protected DeckListViewManager.Kind kind; // 0x138
	protected DeckListViewManager.InitMode initMode; // 0x13C
	[CompilerGeneratedAttribute] // RVA: 0xC73008 Offset: 0xC73008 VA: 0xC73008
	[DebuggerBrowsableAttribute] // RVA: 0xC73008 Offset: 0xC73008 VA: 0xC73008
	private DeckListViewManager.CallbackFunc callbackFunc; // 0x140
	[CompilerGeneratedAttribute] // RVA: 0xC73044 Offset: 0xC73044 VA: 0xC73044
	[DebuggerBrowsableAttribute] // RVA: 0xC73044 Offset: 0xC73044 VA: 0xC73044
	private Action callbackFunc2; // 0x148
	protected int callbackCount; // 0x150

	// Properties
	public List<DeckListViewObject> ObjectList { get; }
	public List<DeckListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x10C48D0 Offset: 0x10C48D0 VA: 0x10C48D0
	public void .ctor() { }

	// RVA: 0x10C48D8 Offset: 0x10C48D8 VA: 0x10C48D8
	protected void add_callbackFunc(DeckListViewManager.CallbackFunc value) { }

	// RVA: 0x10C49C8 Offset: 0x10C49C8 VA: 0x10C49C8
	protected void remove_callbackFunc(DeckListViewManager.CallbackFunc value) { }

	// RVA: 0x10C4AB8 Offset: 0x10C4AB8 VA: 0x10C4AB8
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x10C4BA8 Offset: 0x10C4BA8 VA: 0x10C4BA8
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x10C4C98 Offset: 0x10C4C98 VA: 0x10C4C98
	public List<DeckListViewObject> get_ObjectList() { }

	// RVA: 0x10C4E64 Offset: 0x10C4E64 VA: 0x10C4E64
	public List<DeckListViewObject> get_ClippingObjectList() { }

	// RVA: 0x10C5144 Offset: 0x10C5144 VA: 0x10C5144
	public void CreateList(PartyListViewItem[] baseDeckItemList) { }

	// RVA: 0x10C531C Offset: 0x10C531C VA: 0x10C531C
	public DeckListViewItem GetItem(int index) { }

	// RVA: 0x10C53C4 Offset: 0x10C53C4 VA: 0x10C53C4 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x10C5544 Offset: 0x10C5544 VA: 0x10C5544
	public void SetMode(DeckListViewManager.InitMode mode, DeckListViewManager.CallbackFunc callback) { }

	// RVA: 0x10C55BC Offset: 0x10C55BC VA: 0x10C55BC
	public void SetMode(DeckListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x10C554C Offset: 0x10C554C VA: 0x10C554C
	public void SetMode(DeckListViewManager.InitMode mode) { }

	// RVA: 0x10C57B8 Offset: 0x10C57B8 VA: 0x10C57B8
	protected void RequestListObject(DeckListViewObject.InitMode mode, float delay) { }

	// RVA: 0x10C55C4 Offset: 0x10C55C4 VA: 0x10C55C4
	protected void RequestListObject(DeckListViewObject.InitMode mode) { }

	// RVA: 0x10C5AC8 Offset: 0x10C5AC8 VA: 0x10C5AC8
	protected void OnMoveEnd() { }

	// RVA: 0x10C5BA0 Offset: 0x10C5BA0 VA: 0x10C5BA0
	protected void OnClickListView(ListViewObject obj) { }
}

// Namespace: 
public enum DeckListViewManager.Kind // TypeDefIndex: 10360
{
	// Fields
	public int value__; // 0x0
	public const DeckListViewManager.Kind EVENT = 0;
}

// Namespace: 
public enum DeckListViewManager.InitMode // TypeDefIndex: 10361
{
	// Fields
	public int value__; // 0x0
	public const DeckListViewManager.InitMode NONE = 0;
	public const DeckListViewManager.InitMode VALID = 1;
	public const DeckListViewManager.InitMode INPUT = 2;
}

// Namespace: 
public enum DeckListViewManager.ResultKind // TypeDefIndex: 10362
{
	// Fields
	public int value__; // 0x0
	public const DeckListViewManager.ResultKind CANCEL = 0;
	public const DeckListViewManager.ResultKind SELECT = 1;
	public const DeckListViewManager.ResultKind COMMAND_CARD = 2;
}

// Namespace: 
public sealed class DeckListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 10363
{
	// Methods

	// RVA: 0x10C5E40 Offset: 0x10C5E40 VA: 0x10C5E40
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x10C5BFC Offset: 0x10C5BFC VA: 0x10C5BFC Slot: 11
	public virtual void Invoke(DeckListViewManager.ResultKind result, int index) { }

	// RVA: 0x10C5E50 Offset: 0x10C5E50 VA: 0x10C5E50 Slot: 12
	public virtual IAsyncResult BeginInvoke(DeckListViewManager.ResultKind result, int index, AsyncCallback callback, object object) { }

	// RVA: 0x10C5EF8 Offset: 0x10C5EF8 VA: 0x10C5EF8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class DeckListViewObject : ListViewObject // TypeDefIndex: 10364
{
	// Fields
	protected DeckListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC73080 Offset: 0xC73080 VA: 0xC73080
	[DebuggerBrowsableAttribute] // RVA: 0xC73080 Offset: 0xC73080 VA: 0xC73080
	private Action callbackFunc; // 0x70
	protected DeckListViewItemDraw itemDraw; // 0x78
	protected DeckListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x10C5F04 Offset: 0x10C5F04 VA: 0x10C5F04
	public void .ctor() { }

	// RVA: 0x10C5F6C Offset: 0x10C5F6C VA: 0x10C5F6C
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x10C6058 Offset: 0x10C6058 VA: 0x10C6058
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x10C6144 Offset: 0x10C6144 VA: 0x10C6144
	protected void Awake() { }

	// RVA: 0x10C61B8 Offset: 0x10C61B8 VA: 0x10C61B8
	private void OnDestroy() { }

	// RVA: 0x10C50C0 Offset: 0x10C50C0 VA: 0x10C50C0
	public DeckListViewItem GetItem() { }

	// RVA: 0x10C6264 Offset: 0x10C6264 VA: 0x10C6264 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x10C6270 Offset: 0x10C6270 VA: 0x10C6270 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x10C62F8 Offset: 0x10C62F8 VA: 0x10C62F8
	public void Init(DeckListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x10C59C0 Offset: 0x10C59C0 VA: 0x10C59C0
	public void Init(DeckListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x10C5A44 Offset: 0x10C5A44 VA: 0x10C5A44
	public void Init(DeckListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x10C54C4 Offset: 0x10C54C4 VA: 0x10C54C4
	public void Init(DeckListViewObject.InitMode initMode) { }

	// RVA: 0x10C64B0 Offset: 0x10C64B0 VA: 0x10C64B0
	protected void SetupDisp() { }

	// RVA: 0x10C65C0 Offset: 0x10C65C0 VA: 0x10C65C0
	protected void EventMoveEnd() { }
}

// Namespace: 
public enum DeckListViewObject.InitMode // TypeDefIndex: 10365
{
	// Fields
	public int value__; // 0x0
	public const DeckListViewObject.InitMode INVISIBLE = 0;
	public const DeckListViewObject.InitMode INVALID = 1;
	public const DeckListViewObject.InitMode VALID = 2;
	public const DeckListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum DeckListViewObject.State // TypeDefIndex: 10366
{
	// Fields
	public int value__; // 0x0
	public const DeckListViewObject.State INIT = 0;
	public const DeckListViewObject.State IDLE = 1;
	public const DeckListViewObject.State MOVE = 2;
	public const DeckListViewObject.State INPUT = 3;
}

// Namespace: 
public class DeckNameInputMenu : BaseDialog // TypeDefIndex: 10367
{
	// Fields
	[SerializeField] // RVA: 0xC730BC Offset: 0xC730BC VA: 0xC730BC
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC730CC Offset: 0xC730CC VA: 0xC730CC
	protected UILabel explanationLabel; // 0x60
	[SerializeField] // RVA: 0xC730DC Offset: 0xC730DC VA: 0xC730DC
	protected UILineInput nameInput; // 0x68
	[SerializeField] // RVA: 0xC730EC Offset: 0xC730EC VA: 0xC730EC
	protected UILabel nameText; // 0x70
	[SerializeField] // RVA: 0xC730FC Offset: 0xC730FC VA: 0xC730FC
	protected UIInput inputTarget; // 0x78
	[SerializeField] // RVA: 0xC7310C Offset: 0xC7310C VA: 0xC7310C
	protected UICommonButton decideButton; // 0x80
	[SerializeField] // RVA: 0xC7311C Offset: 0xC7311C VA: 0xC7311C
	protected UILabel decideLabel; // 0x88
	[SerializeField] // RVA: 0xC7312C Offset: 0xC7312C VA: 0xC7312C
	protected UILabel cancelLabel; // 0x90
	[SerializeField] // RVA: 0xC7313C Offset: 0xC7313C VA: 0xC7313C
	protected UILabel clearLabel; // 0x98
	[SerializeField] // RVA: 0xC7314C Offset: 0xC7314C VA: 0xC7314C
	protected UILabel initLabel; // 0xA0
	[CompilerGeneratedAttribute] // RVA: 0xC7315C Offset: 0xC7315C VA: 0xC7315C
	[DebuggerBrowsableAttribute] // RVA: 0xC7315C Offset: 0xC7315C VA: 0xC7315C
	private DeckNameInputMenu.CallbackFunc callbackFunc; // 0xA8
	protected Action closeCallbackFunc; // 0xB0
	protected string baseName; // 0xB8
	protected string changeName; // 0xC0
	protected string initName; // 0xC8
	protected DeckNameInputMenu.State state; // 0xD0
	[CompilerGeneratedAttribute] // RVA: 0xC73198 Offset: 0xC73198 VA: 0xC73198
	private static UIInput.OnValidate <>f__mg$cache0; // 0x0

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x10C65E8 Offset: 0x10C65E8 VA: 0x10C65E8
	public void .ctor() { }

	// RVA: 0x10C6650 Offset: 0x10C6650 VA: 0x10C6650
	protected void add_callbackFunc(DeckNameInputMenu.CallbackFunc value) { }

	// RVA: 0x10C673C Offset: 0x10C673C VA: 0x10C673C
	protected void remove_callbackFunc(DeckNameInputMenu.CallbackFunc value) { }

	// RVA: 0x10C6828 Offset: 0x10C6828 VA: 0x10C6828
	public void Init() { }

	// RVA: 0x10C68DC Offset: 0x10C68DC VA: 0x10C68DC
	public void Open(string deckName, string initName, DeckNameInputMenu.CallbackFunc callback) { }

	// RVA: 0x10C6C2C Offset: 0x10C6C2C VA: 0x10C6C2C
	public void OnChangeInput() { }

	// RVA: 0x10C6C6C Offset: 0x10C6C6C VA: 0x10C6C6C
	public void ChangeInput(string inputName) { }

	// RVA: 0x10C6E7C Offset: 0x10C6E7C VA: 0x10C6E7C
	protected void EndOpen() { }

	// RVA: 0x10C6F18 Offset: 0x10C6F18 VA: 0x10C6F18
	public void Close() { }

	// RVA: 0x10C6F20 Offset: 0x10C6F20 VA: 0x10C6F20
	public void Close(Action callback) { }

	// RVA: 0x10C6FF0 Offset: 0x10C6FF0 VA: 0x10C6FF0
	protected void EndClose() { }

	// RVA: 0x10C7054 Offset: 0x10C7054 VA: 0x10C7054
	protected void Callback(bool result, string name) { }

	// RVA: 0x10C72B8 Offset: 0x10C72B8 VA: 0x10C72B8
	public void OnClickDecide() { }

	// RVA: 0x10C738C Offset: 0x10C738C VA: 0x10C738C
	public void OnClickCancel() { }

	// RVA: 0x10C7450 Offset: 0x10C7450 VA: 0x10C7450
	public void OnClickClear() { }

	// RVA: 0x10C7530 Offset: 0x10C7530 VA: 0x10C7530
	public void OnClickInit() { }

	// RVA: 0x10C75EC Offset: 0x10C75EC VA: 0x10C75EC Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
public sealed class DeckNameInputMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10368
{
	// Methods

	// RVA: 0x10C7634 Offset: 0x10C7634 VA: 0x10C7634
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x10C7074 Offset: 0x10C7074 VA: 0x10C7074 Slot: 11
	public virtual void Invoke(bool result, string changeName) { }

	// RVA: 0x10C7644 Offset: 0x10C7644 VA: 0x10C7644 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, string changeName, AsyncCallback callback, object object) { }

	// RVA: 0x10C76E0 Offset: 0x10C76E0 VA: 0x10C76E0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
protected enum DeckNameInputMenu.State // TypeDefIndex: 10369
{
	// Fields
	public int value__; // 0x0
	public const DeckNameInputMenu.State INIT = 0;
	public const DeckNameInputMenu.State OPEN = 1;
	public const DeckNameInputMenu.State INPUT = 2;
	public const DeckNameInputMenu.State CLOSE = 3;
}

// Namespace: 
public class DeckSelectMenu : BaseDialog // TypeDefIndex: 10370
{
	// Fields
	[SerializeField] // RVA: 0xC731A8 Offset: 0xC731A8 VA: 0xC731A8
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC731B8 Offset: 0xC731B8 VA: 0xC731B8
	protected UILabel titleDetailLabel; // 0x60
	[SerializeField] // RVA: 0xC731C8 Offset: 0xC731C8 VA: 0xC731C8
	protected DeckListViewManager deckListViewManager; // 0x68
	[SerializeField] // RVA: 0xC731D8 Offset: 0xC731D8 VA: 0xC731D8
	protected UILabel cancelLabel; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC731E8 Offset: 0xC731E8 VA: 0xC731E8
	[DebuggerBrowsableAttribute] // RVA: 0xC731E8 Offset: 0xC731E8 VA: 0xC731E8
	private DeckSelectMenu.CallbackFunc callbackFunc; // 0x78
	protected Action openCallbackFunc; // 0x80
	protected Action closeCallbackFunc; // 0x88
	protected DeckSelectMenu.State state; // 0x90

	// Methods

	// RVA: 0x10C76EC Offset: 0x10C76EC VA: 0x10C76EC
	public void .ctor() { }

	// RVA: 0x10C7754 Offset: 0x10C7754 VA: 0x10C7754
	protected void add_callbackFunc(DeckSelectMenu.CallbackFunc value) { }

	// RVA: 0x10C7840 Offset: 0x10C7840 VA: 0x10C7840
	protected void remove_callbackFunc(DeckSelectMenu.CallbackFunc value) { }

	// RVA: 0x10C792C Offset: 0x10C792C VA: 0x10C792C
	public DeckListViewItem GetItem(int index) { }

	// RVA: 0x10C7960 Offset: 0x10C7960 VA: 0x10C7960
	public void Init() { }

	// RVA: 0x10C79A4 Offset: 0x10C79A4 VA: 0x10C79A4
	public void Open(DeckSelectMenu.Kind kind, PartyListViewItem[] baseDeckItemList, DeckSelectMenu.CallbackFunc callback, Action openCallback) { }

	// RVA: 0x10C7C4C Offset: 0x10C7C4C VA: 0x10C7C4C
	protected void EndOpen() { }

	// RVA: 0x10C7D08 Offset: 0x10C7D08 VA: 0x10C7D08
	public void Close() { }

	// RVA: 0x10C7D10 Offset: 0x10C7D10 VA: 0x10C7D10
	public void Close(Action callback) { }

	// RVA: 0x10C7DBC Offset: 0x10C7DBC VA: 0x10C7DBC
	protected void EndClose() { }

	// RVA: 0x10C7DF8 Offset: 0x10C7DF8 VA: 0x10C7DF8
	protected void Callback(DeckSelectMenu.ResultKind result, int index = -1) { }

	// RVA: 0x10C8058 Offset: 0x10C8058 VA: 0x10C8058
	public void OnClickCancel() { }

	// RVA: 0x10C80FC Offset: 0x10C80FC VA: 0x10C80FC
	protected void OnSelectItem(DeckListViewManager.ResultKind kind, int n) { }
}

// Namespace: 
public enum DeckSelectMenu.Kind // TypeDefIndex: 10371
{
	// Fields
	public int value__; // 0x0
	public const DeckSelectMenu.Kind COPY = 0;
}

// Namespace: 
public enum DeckSelectMenu.ResultKind // TypeDefIndex: 10372
{
	// Fields
	public int value__; // 0x0
	public const DeckSelectMenu.ResultKind CANCEL = 0;
	public const DeckSelectMenu.ResultKind SELECT = 1;
}

// Namespace: 
protected enum DeckSelectMenu.State // TypeDefIndex: 10373
{
	// Fields
	public int value__; // 0x0
	public const DeckSelectMenu.State INIT = 0;
	public const DeckSelectMenu.State OPEN = 1;
	public const DeckSelectMenu.State INPUT = 2;
	public const DeckSelectMenu.State SELECTED = 3;
	public const DeckSelectMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class DeckSelectMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10374
{
	// Methods

	// RVA: 0x10C8218 Offset: 0x10C8218 VA: 0x10C8218
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x10C7E14 Offset: 0x10C7E14 VA: 0x10C7E14 Slot: 11
	public virtual void Invoke(DeckSelectMenu.ResultKind result, int index) { }

	// RVA: 0x10C8228 Offset: 0x10C8228 VA: 0x10C8228 Slot: 12
	public virtual IAsyncResult BeginInvoke(DeckSelectMenu.ResultKind result, int index, AsyncCallback callback, object object) { }

	// RVA: 0x10C82D0 Offset: 0x10C82D0 VA: 0x10C82D0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class DropAutoSellDlgComponent : BaseDialog // TypeDefIndex: 10375
{
	// Fields
	private static readonly int[] settingKinds; // 0x0
	private static readonly int[] settingMasks; // 0x8
	[SerializeField] // RVA: 0xC73224 Offset: 0xC73224 VA: 0xC73224
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC73234 Offset: 0xC73234 VA: 0xC73234
	private UILabel msgLabel; // 0x60
	[SerializeField] // RVA: 0xC73244 Offset: 0xC73244 VA: 0xC73244
	private UICommonButton decideButton; // 0x68
	[SerializeField] // RVA: 0xC73254 Offset: 0xC73254 VA: 0xC73254
	private UICommonButton cancelButton; // 0x70
	[SerializeField] // RVA: 0xC73264 Offset: 0xC73264 VA: 0xC73264
	private UILabel decideLabel; // 0x78
	[SerializeField] // RVA: 0xC73274 Offset: 0xC73274 VA: 0xC73274
	private UILabel cancelLabel; // 0x80
	[SerializeField] // RVA: 0xC73284 Offset: 0xC73284 VA: 0xC73284
	private UICommonButton[] settingButton; // 0x88
	[SerializeField] // RVA: 0xC73294 Offset: 0xC73294 VA: 0xC73294
	private UISprite[] settingButtonSprites; // 0x90
	[SerializeField] // RVA: 0xC732A4 Offset: 0xC732A4 VA: 0xC732A4
	private UILabel[] settingButtonLabel; // 0x98
	[SerializeField] // RVA: 0xC732B4 Offset: 0xC732B4 VA: 0xC732B4
	private UILabel expTitleLb; // 0xA0
	[CompilerGeneratedAttribute] // RVA: 0xC732C4 Offset: 0xC732C4 VA: 0xC732C4
	[DebuggerBrowsableAttribute] // RVA: 0xC732C4 Offset: 0xC732C4 VA: 0xC732C4
	private DropAutoSellDlgComponent.CallbackFunc callbackFunc; // 0xA8
	private Action closeCallbackFunc; // 0xB0
	private List<int> enableList; // 0xB8
	private DropAutoSellDlgComponent.State state; // 0xC0

	// Properties
	protected override GameObject closeBtnObject { get; }

	// Methods

	// RVA: 0x10D232C Offset: 0x10D232C VA: 0x10D232C
	public void .ctor() { }

	// RVA: 0x10D23BC Offset: 0x10D23BC VA: 0x10D23BC
	private void add_callbackFunc(DropAutoSellDlgComponent.CallbackFunc value) { }

	// RVA: 0x10D24A8 Offset: 0x10D24A8 VA: 0x10D24A8
	private void remove_callbackFunc(DropAutoSellDlgComponent.CallbackFunc value) { }

	// RVA: 0x10D2594 Offset: 0x10D2594 VA: 0x10D2594
	public void Init() { }

	// RVA: 0x10D2730 Offset: 0x10D2730 VA: 0x10D2730
	public void Open(DropAutoSellDlgComponent.CallbackFunc callback) { }

	// RVA: 0x10D2F90 Offset: 0x10D2F90 VA: 0x10D2F90
	private void EndOpen() { }

	// RVA: 0x10D2F9C Offset: 0x10D2F9C VA: 0x10D2F9C
	public void Close() { }

	// RVA: 0x10D2FA4 Offset: 0x10D2FA4 VA: 0x10D2FA4
	public void Close(Action callback) { }

	// RVA: 0x10D3034 Offset: 0x10D3034 VA: 0x10D3034
	private void EndClose() { }

	// RVA: 0x10D3098 Offset: 0x10D3098 VA: 0x10D3098
	private void Callback(bool result) { }

	// RVA: 0x10D32E4 Offset: 0x10D32E4 VA: 0x10D32E4
	public void OnClickDecide() { }

	// RVA: 0x10D347C Offset: 0x10D347C VA: 0x10D347C
	public void OnClickCancel() { }

	// RVA: 0x10D3528 Offset: 0x10D3528 VA: 0x10D3528
	public void OnClickExp4() { }

	// RVA: 0x10D35D8 Offset: 0x10D35D8 VA: 0x10D35D8
	public void OnClickExp3() { }

	// RVA: 0x10D35E0 Offset: 0x10D35E0 VA: 0x10D35E0
	public void OnClickExp2() { }

	// RVA: 0x10D35E8 Offset: 0x10D35E8 VA: 0x10D35E8
	public void OnClickExp1() { }

	// RVA: 0x10D3530 Offset: 0x10D3530 VA: 0x10D3530
	private void OnClickButton(DropAutoSellDlgComponent.FlagKind kind) { }

	// RVA: 0x10D2C1C Offset: 0x10D2C1C VA: 0x10D2C1C
	private void SetButtonSelect(int kind) { }

	// RVA: 0x10D2EC4 Offset: 0x10D2EC4 VA: 0x10D2EC4
	private void SetButtonEnable(bool isEnable) { }

