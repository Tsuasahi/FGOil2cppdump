	public void OnClickInfomation() { }

	// RVA: 0x17A3418 Offset: 0x17A3418 VA: 0x17A3418
	public void OnClickPointEvent() { }

	// RVA: 0x17A34EC Offset: 0x17A34EC VA: 0x17A34EC
	protected void OnSelectItem(PartyListViewManager.ResultKind kind, int n, int m) { }

	// RVA: 0x17A3634 Offset: 0x17A3634 VA: 0x17A3634
	public void OnClickTabParty1() { }

	// RVA: 0x17A36D8 Offset: 0x17A36D8 VA: 0x17A36D8
	public void OnClickTabParty2() { }

	// RVA: 0x17A377C Offset: 0x17A377C VA: 0x17A377C
	public void OnClickTabParty3() { }

	// RVA: 0x17A3820 Offset: 0x17A3820 VA: 0x17A3820
	public void OnClickTabParty4() { }

	// RVA: 0x17A38C4 Offset: 0x17A38C4 VA: 0x17A38C4
	public void OnClickTabParty5() { }

	// RVA: 0x17A3968 Offset: 0x17A3968 VA: 0x17A3968
	public void OnClickTabParty6() { }

	// RVA: 0x17A3A0C Offset: 0x17A3A0C VA: 0x17A3A0C
	public void OnClickTabParty7() { }

	// RVA: 0x17A3AB0 Offset: 0x17A3AB0 VA: 0x17A3AB0
	public void OnClickTabParty8() { }

	// RVA: 0x17A3B54 Offset: 0x17A3B54 VA: 0x17A3B54
	public void OnClickTabParty9() { }

	// RVA: 0x17A3BF8 Offset: 0x17A3BF8 VA: 0x17A3BF8
	public void OnClickTabParty10() { }

	// RVA: 0x17A3C9C Offset: 0x17A3C9C VA: 0x17A3C9C
	public void OnClickTutorialEmptyItem() { }

	// RVA: 0x17A3D64 Offset: 0x17A3D64 VA: 0x17A3D64
	protected void EndCloseTutorialArrowEmptyItem() { }

	// RVA: 0x17A0B44 Offset: 0x17A0B44 VA: 0x17A0B44
	public bool IsNeedHelp() { }

	// RVA: 0x17A3E20 Offset: 0x17A3E20 VA: 0x17A3E20
	public void OnClickHelp() { }

	// RVA: 0x17A4094 Offset: 0x17A4094 VA: 0x17A4094
	protected void EndHelp() { }

	// RVA: 0x17A1B98 Offset: 0x17A1B98 VA: 0x17A1B98
	protected void OpenHelp() { }

	// RVA: 0x17A4098 Offset: 0x17A4098 VA: 0x17A4098
	private void CheckFriendshipUpItemTutorial() { }

	// RVA: 0x17A4188 Offset: 0x17A4188 VA: 0x17A4188
	public void SetStartButton(bool isBattle) { }

	// RVA: 0x17A428C Offset: 0x17A428C VA: 0x17A428C
	public void UpdateEventLimitEquip(int index) { }

	// RVA: 0x17A42C4 Offset: 0x17A42C4 VA: 0x17A42C4
	public void SetEventLimitEquipSetting() { }

	// RVA: 0x17A42F4 Offset: 0x17A42F4 VA: 0x17A42F4
	public bool IsUseEventLimitEquipUserWill(int index) { }

	// RVA: 0x17A432C Offset: 0x17A432C VA: 0x17A432C
	public void SetSelectItemEnable(bool enable) { }

	// RVA: 0x17A0C20 Offset: 0x17A0C20 VA: 0x17A0C20
	private bool IsDisplayAssistConfirm() { }

	// RVA: 0x17A0ED4 Offset: 0x17A0ED4 VA: 0x17A0ED4
	private bool IsActiveAssistConfirm() { }

	// RVA: 0x17A4338 Offset: 0x17A4338 VA: 0x17A4338
	public void OnClickAssistConfirmButton() { }

	// RVA: 0x17A4434 Offset: 0x17A4434 VA: 0x17A4434
	public void CloseAssistEffectConfirmDialog() { }

	// RVA: 0x17A1048 Offset: 0x17A1048 VA: 0x17A1048
	private bool IsDisplayLiveConfirm() { }

	// RVA: 0x17A4494 Offset: 0x17A4494 VA: 0x17A4494
	public void OnClickCenterEffectDetailDialogButton() { }

	// RVA: 0x17A45B8 Offset: 0x17A45B8 VA: 0x17A45B8
	public void CloseCenterEffectDetailDialog() { }

	// RVA: 0x17A461C Offset: 0x17A461C VA: 0x17A461C
	public void SetPartyDeck(PartyListViewItem[] baseDeckItemList, int partyNum, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, int friendBonusVal = 0) { }

	// RVA: 0x17A02E0 Offset: 0x17A02E0 VA: 0x17A02E0
	private bool IsHintDialog() { }

	// RVA: 0x17A1228 Offset: 0x17A1228 VA: 0x17A1228
	private bool IsHintDialogEveryTime() { }

	// RVA: 0x17A46D8 Offset: 0x17A46D8 VA: 0x17A46D8
	public void OnClickHintDialogButton() { }

	// RVA: 0x17A1E8C Offset: 0x17A1E8C VA: 0x17A1E8C
	public void ShowHintDialogButton() { }

	// RVA: 0x17A4748 Offset: 0x17A4748 VA: 0x17A4748
	public void OnClickFriendshipUpItemUseButton() { }

	// RVA: 0x17A48AC Offset: 0x17A48AC VA: 0x17A48AC
	public void HideFriendshipUpItemUseButton() { }

	// RVA: 0x17A48F8 Offset: 0x17A48F8 VA: 0x17A48F8
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3E244 Offset: 0xD3E244 VA: 0xD3E244
	// RVA: 0x17A4FA0 Offset: 0x17A4FA0 VA: 0x17A4FA0
	private void <OnClickAutoSell>m__0(bool res) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3E254 Offset: 0xD3E254 VA: 0xD3E254
	// RVA: 0x17A4FD0 Offset: 0x17A4FD0 VA: 0x17A4FD0
	private static void <ShowHintDialogButton>m__1(bool isDecide) { }
}

// Namespace: 
public enum PartyListMenu.TutorialMode // TypeDefIndex: 10355
{
	// Fields
	public int value__; // 0x0
	public const PartyListMenu.TutorialMode NONE = 0;
	public const PartyListMenu.TutorialMode ORGANIZATION_GUIDE_CHANGE_SELECT = 1;
	public const PartyListMenu.TutorialMode ORGANIZATION_GUIDE_DECK_EMPTY_SELECT = 2;
	public const PartyListMenu.TutorialMode FOLLOWER_GUIDE_START_SELECT = 3;
}

// Namespace: 
public enum PartyListMenu.ResultKind // TypeDefIndex: 10356
{
	// Fields
	public int value__; // 0x0
	public const PartyListMenu.ResultKind CANCEL = 0;
	public const PartyListMenu.ResultKind DECIDE = 1;
	public const PartyListMenu.ResultKind CHANGE = 2;
	public const PartyListMenu.ResultKind SWAP = 3;
	public const PartyListMenu.ResultKind REMOVE = 4;
	public const PartyListMenu.ResultKind DECK_NAME = 5;
	public const PartyListMenu.ResultKind DECK_COPY = 6;
	public const PartyListMenu.ResultKind EDIT = 7;
	public const PartyListMenu.ResultKind START = 8;
	public const PartyListMenu.ResultKind MASTER_FORMATION = 9;
	public const PartyListMenu.ResultKind MASTER_LIMIT_FORMATION = 10;
	public const PartyListMenu.ResultKind INFOMATION = 11;
	public const PartyListMenu.ResultKind EVENT_POINT = 12;
	public const PartyListMenu.ResultKind MODIFY_STATUS = 13;
	public const PartyListMenu.ResultKind CHANGE_SERVANT = 14;
	public const PartyListMenu.ResultKind CHANGE_EQUIP = 15;
	public const PartyListMenu.ResultKind DETAIL_SERVANT = 16;
	public const PartyListMenu.ResultKind TUTORIAL_CHANGE_SERVANT = 17;
	public const PartyListMenu.ResultKind QUEST_INFORMATION = 18;
}

// Namespace: 
protected enum PartyListMenu.State // TypeDefIndex: 10357
{
	// Fields
	public int value__; // 0x0
	public const PartyListMenu.State INIT = 0;
	public const PartyListMenu.State OPEN = 1;
	public const PartyListMenu.State INPUT = 2;
	public const PartyListMenu.State SELECTED = 3;
	public const PartyListMenu.State CLOSE = 4;
	public const PartyListMenu.State ENTER = 5;
	public const PartyListMenu.State TUTORIAL_OPEN = 6;
	public const PartyListMenu.State TUTORIAL = 7;
	public const PartyListMenu.State TUTORIAL_CLOSE = 8;
}

// Namespace: 
public sealed class PartyListMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10358
{
	// Methods

	// RVA: 0x17A4FD4 Offset: 0x17A4FD4 VA: 0x17A4FD4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x17A23DC Offset: 0x17A23DC VA: 0x17A23DC Slot: 11
	public virtual void Invoke(PartyListMenu.ResultKind result, int n, int m) { }

	// RVA: 0x17A4FE4 Offset: 0x17A4FE4 VA: 0x17A4FE4 Slot: 12
	public virtual IAsyncResult BeginInvoke(PartyListMenu.ResultKind result, int n, int m, AsyncCallback callback, object object) { }

	// RVA: 0x17A50A4 Offset: 0x17A50A4 VA: 0x17A50A4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class PartyListViewIndicator : ListViewIndicator // TypeDefIndex: 10359
{
	// Fields
	private const string SAVE_KEY_LIMIT_EQUIP = "LIMIT_EQUIP_SETTING";
	[SerializeField] // RVA: 0xCE000C Offset: 0xCE000C VA: 0xCE000C
	protected GameObject soloBaseObject; // 0x18
	[SerializeField] // RVA: 0xCE001C Offset: 0xCE001C VA: 0xCE001C
	protected GameObject organizationNumObject; // 0x20
	[SerializeField] // RVA: 0xCE002C Offset: 0xCE002C VA: 0xCE002C
	protected GameObject indexBaseObject; // 0x28
	[SerializeField] // RVA: 0xCE003C Offset: 0xCE003C VA: 0xCE003C
	protected UISprite indexSprite; // 0x30
	[SerializeField] // RVA: 0xCE004C Offset: 0xCE004C VA: 0xCE004C
	protected GameObject costBaseObject; // 0x38
	[SerializeField] // RVA: 0xCE005C Offset: 0xCE005C VA: 0xCE005C
	protected UILabel maxCostLabel; // 0x40
	[SerializeField] // RVA: 0xCE006C Offset: 0xCE006C VA: 0xCE006C
	protected UILabel splitCostLabel; // 0x48
	[SerializeField] // RVA: 0xCE007C Offset: 0xCE007C VA: 0xCE007C
	protected UILabel selectCostLabel; // 0x50
	[SerializeField] // RVA: 0xCE008C Offset: 0xCE008C VA: 0xCE008C
	protected GameObject selectNameBaseObject; // 0x58
	[SerializeField] // RVA: 0xCE009C Offset: 0xCE009C VA: 0xCE009C
	protected UILabel selectNameLabel; // 0x60
	[SerializeField] // RVA: 0xCE00AC Offset: 0xCE00AC VA: 0xCE00AC
	protected GameObject leftObject; // 0x68
	[SerializeField] // RVA: 0xCE00BC Offset: 0xCE00BC VA: 0xCE00BC
	protected GameObject rightObject; // 0x70
	[SerializeField] // RVA: 0xCE00CC Offset: 0xCE00CC VA: 0xCE00CC
	protected UISprite[] tabPartySpriteList; // 0x78
	[SerializeField] // RVA: 0xCE00DC Offset: 0xCE00DC VA: 0xCE00DC
	protected UICommonButton[] tabPartyButtonList; // 0x80
	[SerializeField] // RVA: 0xCE00EC Offset: 0xCE00EC VA: 0xCE00EC
	protected UILabel[] tabPartyLabelList; // 0x88
	[SerializeField] // RVA: 0xCE00FC Offset: 0xCE00FC VA: 0xCE00FC
	protected GameObject pageBaseObject; // 0x90
	[SerializeField] // RVA: 0xCE010C Offset: 0xCE010C VA: 0xCE010C
	protected UISprite[] pageSpriteList; // 0x98
	[SerializeField] // RVA: 0xCE011C Offset: 0xCE011C VA: 0xCE011C
	protected UICommonButton partyStartButton; // 0xA0
	[SerializeField] // RVA: 0xCE012C Offset: 0xCE012C VA: 0xCE012C
	protected PartyEventPointIndicator partyEventPointIndicator; // 0xA8
	[SerializeField] // RVA: 0xCE013C Offset: 0xCE013C VA: 0xCE013C
	protected ItemIconComponent masterEquipIcon1; // 0xB0
	[SerializeField] // RVA: 0xCE014C Offset: 0xCE014C VA: 0xCE014C
	protected ItemIconComponent masterEquipIcon2; // 0xB8
	[SerializeField] // RVA: 0xCE015C Offset: 0xCE015C VA: 0xCE015C
	private UICommonButton limitMasterFormationButton; // 0xC0
	[SerializeField] // RVA: 0xCE016C Offset: 0xCE016C VA: 0xCE016C
	private ItemIconComponent limitEquipIcon; // 0xC8
	[SerializeField] // RVA: 0xCE017C Offset: 0xCE017C VA: 0xCE017C
	private UISprite limitEquipFixSprite; // 0xD0
	[SerializeField] // RVA: 0xCE018C Offset: 0xCE018C VA: 0xCE018C
	private UISprite masterEquipBackSprite; // 0xD8
	[SerializeField] // RVA: 0xCE019C Offset: 0xCE019C VA: 0xCE019C
	private UISprite masterEquipFrameSprite; // 0xE0
	[SerializeField] // RVA: 0xCE01AC Offset: 0xCE01AC VA: 0xCE01AC
	private UISprite friendPointUpBonusSprite; // 0xE8
	[SerializeField] // RVA: 0xCE01BC Offset: 0xCE01BC VA: 0xCE01BC
	private UILabel friendPointUpBonusLabel; // 0xF0
	[SerializeField] // RVA: 0xCE01CC Offset: 0xCE01CC VA: 0xCE01CC
	private UISprite lastTimeUsedSprite; // 0xF8
	protected ListViewManager manager; // 0x100
	protected int pageMax; // 0x108
	protected int pageIndex; // 0x10C
	protected PartyListViewItem.MenuKind menuKind; // 0x110
	protected EventUpValSetupInfo setupInfo; // 0x118
	protected QuestRestrictionInfo questRestrictionInfo; // 0x120
	protected EventPartyMargeUpValInfo eventMargeUpValInfo; // 0x128
	protected int eventDropItemDispNum; // 0x130
	private const int LIMIT_EQUIP_USE = 0;
	private const int LIMIT_EQUIP_NOT_USE = 1;
	private bool isChkSave; // 0x134
	private int[] useLimitEquip; // 0x138
	private readonly Color ICON_NORMAL_COLOR; // 0x140
	private readonly Color ICON_MASK_COLOR; // 0x150

	// Methods

	// RVA: 0x17A50B0 Offset: 0x17A50B0 VA: 0x17A50B0
	public void .ctor() { }

	// RVA: 0x17A51BC Offset: 0x17A51BC VA: 0x17A51BC Slot: 4
	public override void SetIndexMax(int max) { }

	// RVA: 0x17A5438 Offset: 0x17A5438 VA: 0x17A5438 Slot: 5
	public override void OnModifyCenterItem(ListViewManager manager, ListViewItem item, bool isTop, bool isBottom, bool isLeft, bool isRight) { }

	// RVA: 0x17A6410 Offset: 0x17A6410 VA: 0x17A6410 Slot: 6
	public override void OnModifyPosition(ListViewManager manager, ListViewItem item) { }

	// RVA: 0x17A5218 Offset: 0x17A5218 VA: 0x17A5218
	public void SetPageMax(int max) { }

	// RVA: 0x17A5570 Offset: 0x17A5570 VA: 0x17A5570
	public void SetPageIndex(int index) { }

	// RVA: 0x17A6414 Offset: 0x17A6414 VA: 0x17A6414
	public void SetKind(PartyListViewItem.MenuKind menuKind) { }

	// RVA: 0x17A641C Offset: 0x17A641C VA: 0x17A641C
	public void SetEventId(EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo) { }

	// RVA: 0x17A57FC Offset: 0x17A57FC VA: 0x17A57FC
	public void DrawPartyInfo(PartyListViewItem partyItem) { }

	// RVA: 0x17A6664 Offset: 0x17A6664 VA: 0x17A6664
	public void DrawEventLimitEquip(PartyListViewItem partyItem, bool isChng = False) { }

	// RVA: 0x17A7664 Offset: 0x17A7664 VA: 0x17A7664
	private void ClearEventLimitEquip() { }

	// RVA: 0x17A77B8 Offset: 0x17A77B8 VA: 0x17A77B8
	public void OnClickLeft() { }

	// RVA: 0x17A7920 Offset: 0x17A7920 VA: 0x17A7920
	public void OnClickRight() { }

	// RVA: 0x17A647C Offset: 0x17A647C VA: 0x17A647C
	private void SetEventDeckPartyName(int servantNum) { }

	// RVA: 0x17A7AA8 Offset: 0x17A7AA8 VA: 0x17A7AA8
	public void SetEventLimitEquipSetting() { }

	// RVA: 0x17A7C48 Offset: 0x17A7C48 VA: 0x17A7C48
	public bool IsUseEventLimitEquipUserWill(PartyListViewItem partyItem) { }

	// RVA: 0x17A74CC Offset: 0x17A74CC VA: 0x17A74CC
	private bool IsEventOnlyEquip() { }

	// RVA: 0x17A7DFC Offset: 0x17A7DFC VA: 0x17A7DFC
	public void DispFriendPointUpBonus(int bonusVal) { }
}

// Namespace: 
public class PartyListViewItem : ListViewItem // TypeDefIndex: 10360
{
	// Fields
	protected PartyListViewItem.MenuKind menuKind; // 0x70
	protected int maxCost; // 0x74
	protected PartyOrganizationListViewItem[] memberList; // 0x78
	protected long id; // 0x80
	protected int cost; // 0x88
	protected bool isDeckNameDefault; // 0x8C
	protected string deckName; // 0x90
	protected long userEquipId; // 0x98
	protected EventUpValSetupInfo setupInfo; // 0xA0
	protected QuestRestrictionInfo questRestrictionInfo; // 0xA8

	// Properties
	public int Cost { get; }
	public long DeckId { get; }
	public int DeckNum { get; }
	public int MaxCost { get; }
	public string DeckName { get; }
	public string DefaultDeckName { get; }
	public long UserEquipId { get; }

	// Methods

	// RVA: 0x17A7F74 Offset: 0x17A7F74 VA: 0x17A7F74
	protected void .ctor() { }

	// RVA: 0x17A8000 Offset: 0x17A8000 VA: 0x17A8000
	public void .ctor(PartyListViewItem.MenuKind menuKind, int index, int maxCost, UserDeckEntity deck, FollowerInfo follower, int followerClassId = 0, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, EventCampaignEntity[] friendPointCampaignEntityList, int followerDeckId = 0) { }

	// RVA: 0x17A8658 Offset: 0x17A8658 VA: 0x17A8658
	public void .ctor(ref bool isBaseModify, PartyListViewItem.MenuKind menuKind, int index, int maxCost, UserEventDeckEntity deck, FollowerInfo follower, int followerClassId = 0, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, EventCampaignEntity[] friendPointCampaignEntityList, int followerDeckId = 0) { }

	// RVA: 0x17A942C Offset: 0x17A942C VA: 0x17A942C
	public void .ctor(ref bool isBaseModify, PartyListViewItem.MenuKind menuKind, int index, int maxCost, UserEventDeckEntity deck, FollowerInfo follower, int followerClassId = 0, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, bool isFirstEnforceChange = False, int followerDeckId = 0) { }

	// RVA: 0x17A9F00 Offset: 0x17A9F00 VA: 0x17A9F00
	public void .ctor(PartyListViewItem.MenuKind menuKind, int index, int maxCost, long userEquipId, FollowerInfo follower, int followerClassId = 0, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, EventCampaignEntity[] friendPointCampaignEntityList, int followerDeckId = 0) { }

	// RVA: 0x17AA25C Offset: 0x17AA25C VA: 0x17AA25C
	public void .ctor(ref bool isBaseModify, PartyListViewItem.MenuKind menuKind, int index, int maxCost, UserEventDeckEntity deck, QuestRestrictionInfo questRestrictionInfo, FollowerInfo follower, int followerClassId = 0, EventUpValSetupInfo setupInfo, EventCampaignEntity[] friendPointCampaignEntityList, int followerDeckId = 0) { }

	// RVA: 0x17AAB54 Offset: 0x17AAB54 VA: 0x17AAB54
	public void .ctor(ref bool isBaseModify, PartyListViewItem.MenuKind menuKind, int index, int maxCost, UserEventDeckEntity deck, QuestRestrictionInfo questRestrictionInfo, EventUpValSetupInfo setupInfo, bool isNew = False, FollowerInfo follower, int followerClassId = 0, int followerDeckId = 0) { }

	// RVA: 0x17AC500 Offset: 0x17AC500 VA: 0x17AC500
	private int GetSupportInitIndex(List<FollowerInfo> fixNpcFollowerInfoList) { }

	// RVA: 0x17A8FFC Offset: 0x17A8FFC VA: 0x17A8FFC
	private bool SetNpcFollowerInfo(ref FollowerInfo follower, ref int followerClassId, FollowerInfo[] npcFollowerInfoList, long npcFollowerSvtId) { }

	// RVA: 0x17AC6A4 Offset: 0x17AC6A4 VA: 0x17AC6A4
	public PartyListViewItem Clone() { }

	// RVA: 0x17A8570 Offset: 0x17A8570 VA: 0x17A8570
	public void CheckRestriction() { }

	// RVA: 0x17AC924 Offset: 0x17AC924 VA: 0x17AC924
	public void Modify() { }

	// RVA: 0x17AC718 Offset: 0x17AC718 VA: 0x17AC718
	public void Set(PartyListViewItem item) { }

	// RVA: 0x17ACA08 Offset: 0x17ACA08 VA: 0x17ACA08
	public void SetEquip(int num, long userSvtId) { }

	// RVA: 0x17ACB7C Offset: 0x17ACB7C VA: 0x17ACB7C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x17ACB84 Offset: 0x17ACB84 VA: 0x17ACB84
	public void SetMember(int num, PartyServantListViewItem item) { }

	// RVA: 0x17ACCC0 Offset: 0x17ACCC0 VA: 0x17ACCC0
	public void SwapMember(int num1, int num2) { }

	// RVA: 0x17ACD74 Offset: 0x17ACD74 VA: 0x17ACD74
	public void ClearMember(int num) { }

	// RVA: 0x17ACE50 Offset: 0x17ACE50 VA: 0x17ACE50
	public void ClearMember() { }

	// RVA: 0x17ACF88 Offset: 0x17ACF88 VA: 0x17ACF88
	public void ClearEquip() { }

	// RVA: 0x17AD0C8 Offset: 0x17AD0C8 VA: 0x17AD0C8
	public void ClearFollower() { }

	// RVA: 0x17AD1AC Offset: 0x17AD1AC VA: 0x17AD1AC
	public void LeaderOnly() { }

	// RVA: 0x17AD318 Offset: 0x17AD318 VA: 0x17AD318
	public bool IsDeckInit() { }

	// RVA: 0x17AD46C Offset: 0x17AD46C VA: 0x17AD46C
	public bool IsDeckEmpty() { }

	// RVA: 0x17AD558 Offset: 0x17AD558 VA: 0x17AD558
	public bool IsEquipEmpty() { }

	// RVA: 0x17AD648 Offset: 0x17AD648 VA: 0x17AD648
	private bool CheckDeckConditionServantNum(int deckMemberCount, int mainMemberCount, bool isFollowerMainMember, int mainFollowerNum = 1) { }

	// RVA: 0x17AD744 Offset: 0x17AD744 VA: 0x17AD744
	private PartyListViewItem.DeckCondition GetDeckConditionServantNum(int deckMemberCount, int mainMemberCount, bool isFollowerMainMember, int mainFollowerNum = 1) { }

	// RVA: 0x17AD768 Offset: 0x17AD768 VA: 0x17AD768
	private PartyListViewItem.DeckCondition GetDeckConditionServantNumAndPosition(int deckMemberCount, int mainMemberCount, bool isFollowerMainMember, int mainFollowerNum = 1) { }

	// RVA: 0x17AD8B0 Offset: 0x17AD8B0 VA: 0x17AD8B0
	public PartyListViewItem.DeckCondition GetDeckCondition() { }

	// RVA: 0x17A9118 Offset: 0x17A9118 VA: 0x17A9118
	public PartyListViewItem.DeckCondition GetStartDeckCondition() { }

	// RVA: 0x17AE158 Offset: 0x17AE158 VA: 0x17AE158
	public bool CompMember(PartyListViewItem item) { }

	// RVA: 0x17AE2D0 Offset: 0x17AE2D0 VA: 0x17AE2D0
	public UserDeckEntity GetUserDeck(PartyListViewItem baseItem) { }

	// RVA: 0x17AE608 Offset: 0x17AE608 VA: 0x17AE608
	public UserEventDeckEntity GetUserEventDeck() { }

	// RVA: 0x17AEAD4 Offset: 0x17AEAD4 VA: 0x17AEAD4
	public long[] GetEquipList() { }

	// RVA: 0x17AEC24 Offset: 0x17AEC24 VA: 0x17AEC24
	public int GetWeareMember(long userSvtId) { }

	// RVA: 0x17AECE4 Offset: 0x17AECE4 VA: 0x17AECE4
	public PartyListViewItem.MenuKind GetMenuKind() { }

	// RVA: 0x17A6654 Offset: 0x17A6654 VA: 0x17A6654
	public int get_Cost() { }

	// RVA: 0x17AECEC Offset: 0x17AECEC VA: 0x17AECEC
	public long get_DeckId() { }

	// RVA: 0x17A7604 Offset: 0x17A7604 VA: 0x17A7604
	public int get_DeckNum() { }

	// RVA: 0x17A664C Offset: 0x17A664C VA: 0x17A664C
	public int get_MaxCost() { }

	// RVA: 0x17A6644 Offset: 0x17A6644 VA: 0x17A6644
	public string get_DeckName() { }

	// RVA: 0x17A8F28 Offset: 0x17A8F28 VA: 0x17A8F28
	public string get_DefaultDeckName() { }

	// RVA: 0x17AECF4 Offset: 0x17AECF4 VA: 0x17AECF4
	public void ClearDeckName() { }

	// RVA: 0x17A8498 Offset: 0x17A8498 VA: 0x17A8498
	public void SetDeckName(string name) { }

	// RVA: 0x17A665C Offset: 0x17A665C VA: 0x17A665C
	public long get_UserEquipId() { }

	// RVA: 0x17AED20 Offset: 0x17AED20 VA: 0x17AED20
	public void SetUserEquip(long userEquipId) { }

	// RVA: 0x17A6DB4 Offset: 0x17A6DB4 VA: 0x17A6DB4
	public ServantEntity[] GetSvtEntityList() { }

	// RVA: 0x17A6F6C Offset: 0x17A6F6C VA: 0x17A6F6C
	public string[] GetSvtNameList() { }

	// RVA: 0x17A7124 Offset: 0x17A7124 VA: 0x17A7124
	public bool[] GetIsFollowerList() { }

	// RVA: 0x17AED28 Offset: 0x17AED28 VA: 0x17AED28
	public PartyOrganizationListViewItem GetMember(int num) { }

	// RVA: 0x17AED7C Offset: 0x17AED7C VA: 0x17AED7C
	public int GetFriendPointUpVal() { }

	// RVA: 0x17A72B0 Offset: 0x17A72B0 VA: 0x17A72B0
	public bool GetEventUpVal(out int eventId, out EventUpValInfo[] eventUpValList) { }

	// RVA: 0x17AEEA4 Offset: 0x17AEEA4 VA: 0x17AEEA4
	public QuestRestrictionInfo GetQuestRestriction() { }

	// RVA: 0x17AEEAC Offset: 0x17AEEAC VA: 0x17AEEAC
	public bool IsSupportOnly() { }

	// RVA: 0x17AEEC0 Offset: 0x17AEEC0 VA: 0x17AEEC0
	public int[] GetCommandCardList(int typeMax) { }

	// RVA: 0x17AF0A4 Offset: 0x17AF0A4 VA: 0x17AF0A4
	public string[] GetAssetNameList() { }

	// RVA: 0x17A7610 Offset: 0x17A7610 VA: 0x17A7610
	public bool IsSpecificMenuKind() { }

	// RVA: 0x17A2E08 Offset: 0x17A2E08 VA: 0x17A2E08
	public static bool IsSpecificMenuKind(PartyListViewItem.MenuKind menuKind, bool isEventDeck) { }

	// RVA: 0x17AF220 Offset: 0x17AF220 VA: 0x17AF220
	public void SetMember(int idx, PartyOrganizationListViewItem member) { }
}

// Namespace: 
public enum PartyListViewItem.MenuKind // TypeDefIndex: 10361
{
	// Fields
	public int value__; // 0x0
	public const PartyListViewItem.MenuKind QUEST_START = 0;
	public const PartyListViewItem.MenuKind SUPPORT_ONLY_QUEST_START = 1;
	public const PartyListViewItem.MenuKind NO_SUPPORT_QUEST_START = 2;
	public const PartyListViewItem.MenuKind SINGLE_MEMBER_QUEST_START = 3;
	public const PartyListViewItem.MenuKind NUM_RESTRICTION_QUEST_START = 4;
	public const PartyListViewItem.MenuKind NUM_AND_POSITION_RESTRICTION_QUEST_START = 5;
	public const PartyListViewItem.MenuKind FIX_SUPPORT_ONLY_QUEST_START = 6;
	public const PartyListViewItem.MenuKind FIX_SUPPORT_QUEST_START = 7;
	public const PartyListViewItem.MenuKind SELECT_PARTY = 8;
}

// Namespace: 
public enum PartyListViewItem.DeckCondition // TypeDefIndex: 10362
{
	// Fields
	public int value__; // 0x0
	public const PartyListViewItem.DeckCondition OK = 0;
	public const PartyListViewItem.DeckCondition EMPTY_DECK_MEMBER = 1;
	public const PartyListViewItem.DeckCondition LEADER_ONLY_DECK_MEMBER = 2;
	public const PartyListViewItem.DeckCondition SHORTAGE_DECK_MEMBER = 3;
	public const PartyListViewItem.DeckCondition SAME_SAERVANT = 4;
	public const PartyListViewItem.DeckCondition LEAVE_SERVANT = 5;
	public const PartyListViewItem.DeckCondition FATIGURE_SERVANT = 6;
	public const PartyListViewItem.DeckCondition COST_OVER = 7;
	public const PartyListViewItem.DeckCondition RESTICTION_COST_OVER = 8;
	public const PartyListViewItem.DeckCondition RESTICTION_FIXED_SUPPORT_POSITION = 9;
	public const PartyListViewItem.DeckCondition RESTICTION_FIXED_MY_SERVANT_POSITION = 10;
	public const PartyListViewItem.DeckCondition RESTICTION_FIXED_MY_SERVANT_SINGLE = 11;
	public const PartyListViewItem.DeckCondition RESTICTION_UNIQUE_SERVANT = 12;
	public const PartyListViewItem.DeckCondition RESTRICTION_SERVANT_NUM = 13;
	public const PartyListViewItem.DeckCondition RESTRICTION_SERVANT_NUM_AND_FIXED_MY_SERVANT_POSITION = 14;
	public const PartyListViewItem.DeckCondition RESTRICTION_MY_SERVANT_FIX_SUPPORT_QUEST = 15;
	public const PartyListViewItem.DeckCondition RESTRICTION_REQUIRED = 16;
	public const PartyListViewItem.DeckCondition RESTICTION = 17;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB13A0 Offset: 0xCB13A0 VA: 0xCB13A0
private sealed class PartyListViewItem.<PartyListViewItem>c__AnonStorey0 // TypeDefIndex: 10363
{
	// Fields
	internal int i; // 0x10

	// Methods

	// RVA: 0x1F3B69C Offset: 0x1F3B69C VA: 0x1F3B69C
	public void .ctor() { }

	// RVA: 0x1F3B6A4 Offset: 0x1F3B6A4 VA: 0x1F3B6A4
	internal bool <>m__0(FollowerInfo x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB13B0 Offset: 0xCB13B0 VA: 0xCB13B0
private sealed class PartyListViewItem.<PartyListViewItem>c__AnonStorey1 // TypeDefIndex: 10364
{
	// Fields
	internal int i; // 0x10

	// Methods

	// RVA: 0x1F3B6E4 Offset: 0x1F3B6E4 VA: 0x1F3B6E4
	public void .ctor() { }

	// RVA: 0x1F3B6EC Offset: 0x1F3B6EC VA: 0x1F3B6EC
	internal bool <>m__0(FollowerInfo x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB13C0 Offset: 0xCB13C0 VA: 0xCB13C0
private sealed class PartyListViewItem.<GetSupportInitIndex>c__AnonStorey2 // TypeDefIndex: 10365
{
	// Fields
	internal int i; // 0x10

	// Methods

	// RVA: 0x1F3B654 Offset: 0x1F3B654 VA: 0x1F3B654
	public void .ctor() { }

	// RVA: 0x1F3B65C Offset: 0x1F3B65C VA: 0x1F3B65C
	internal bool <>m__0(FollowerInfo x) { }
}

// Namespace: 
public class PartyListViewItemDraw : MonoBehaviour // TypeDefIndex: 10366
{
	// Fields
	[SerializeField] // RVA: 0xCE01DC Offset: 0xCE01DC VA: 0xCE01DC
	protected UIButton baseButton; // 0x18
	[SerializeField] // RVA: 0xCE01EC Offset: 0xCE01EC VA: 0xCE01EC
	protected UISprite baseSprite; // 0x20
	[SerializeField] // RVA: 0xCE01FC Offset: 0xCE01FC VA: 0xCE01FC
	protected PartyOrganizationListViewItemDraw[] itemDrawList; // 0x28
	[SerializeField] // RVA: 0xCE020C Offset: 0xCE020C VA: 0xCE020C
	protected GameObject warningBase; // 0x30
	[SerializeField] // RVA: 0xCE021C Offset: 0xCE021C VA: 0xCE021C
	protected UILabel warningTitleLabel; // 0x38
	[SerializeField] // RVA: 0xCE022C Offset: 0xCE022C VA: 0xCE022C
	protected UILabel warningMessageLabel; // 0x40

	// Methods

	// RVA: 0x1F3B72C Offset: 0x1F3B72C VA: 0x1F3B72C
	public void .ctor() { }

	// RVA: 0x1F3B78C Offset: 0x1F3B78C VA: 0x1F3B78C
	public void SetItem(PartyListViewItem item, PartyListViewItemDraw.DispMode mode) { }

	// RVA: 0x1F3B9EC Offset: 0x1F3B9EC VA: 0x1F3B9EC
	public void SetInput(PartyListViewItem item, bool isInput) { }
}

// Namespace: 
public enum PartyListViewItemDraw.DispMode // TypeDefIndex: 10367
{
	// Fields
	public int value__; // 0x0
	public const PartyListViewItemDraw.DispMode INVISIBLE = 0;
	public const PartyListViewItemDraw.DispMode INVALID = 1;
	public const PartyListViewItemDraw.DispMode VALID = 2;
	public const PartyListViewItemDraw.DispMode INPUT = 3;
	public const PartyListViewItemDraw.DispMode ORGANIZATION_GUIDE_DECK_EMPTY_SELECT = 4;
}

// Namespace: 
public class PartyListViewManager : ListViewManager // TypeDefIndex: 10368
{
	// Fields
	[SerializeField] // RVA: 0xCE023C Offset: 0xCE023C VA: 0xCE023C
	protected GameObject explanationBase; // 0x138
	[SerializeField] // RVA: 0xCE024C Offset: 0xCE024C VA: 0xCE024C
	protected UILabel explanationLabel; // 0x140
	protected PartyListViewManager.InitMode initMode; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xCE025C Offset: 0xCE025C VA: 0xCE025C
	[DebuggerBrowsableAttribute] // RVA: 0xCE025C Offset: 0xCE025C VA: 0xCE025C
	private PartyListViewManager.CallbackFunc callbackFunc; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xCE0298 Offset: 0xCE0298 VA: 0xCE0298
	[DebuggerBrowsableAttribute] // RVA: 0xCE0298 Offset: 0xCE0298 VA: 0xCE0298
	private Action callbackFunc2; // 0x158
	protected int callbackCount; // 0x160
	protected PartyListViewItem.MenuKind menuKind; // 0x164

	// Properties
	public List<PartyListViewObject> ObjectList { get; }
	public List<PartyListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x1F3BBA0 Offset: 0x1F3BBA0 VA: 0x1F3BBA0
	public void .ctor() { }

	// RVA: 0x1F3BBA8 Offset: 0x1F3BBA8 VA: 0x1F3BBA8
	protected void add_callbackFunc(PartyListViewManager.CallbackFunc value) { }

	// RVA: 0x1F3BC98 Offset: 0x1F3BC98 VA: 0x1F3BC98
	protected void remove_callbackFunc(PartyListViewManager.CallbackFunc value) { }

	// RVA: 0x1F3BD88 Offset: 0x1F3BD88 VA: 0x1F3BD88
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x1F3BE78 Offset: 0x1F3BE78 VA: 0x1F3BE78
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x1F3BF68 Offset: 0x1F3BF68 VA: 0x1F3BF68
	public List<PartyListViewObject> get_ObjectList() { }

	// RVA: 0x1F3C134 Offset: 0x1F3C134 VA: 0x1F3C134
	public List<PartyListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1F3C414 Offset: 0x1F3C414 VA: 0x1F3C414
	public void CreateList(PartyListViewItem.MenuKind menuKind, PartyListViewItem[] baseDeckItemList, int partyNum, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, int friendBonusVal) { }

	// RVA: 0x1F3C708 Offset: 0x1F3C708 VA: 0x1F3C708
	public void DestroyList() { }

	// RVA: 0x1F3C74C Offset: 0x1F3C74C VA: 0x1F3C74C
	public PartyListViewItem GetItem(int index) { }

	// RVA: 0x1F3C82C Offset: 0x1F3C82C VA: 0x1F3C82C Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1F3C964 Offset: 0x1F3C964 VA: 0x1F3C964
	public void SetMode(PartyListViewManager.InitMode mode, PartyListViewManager.CallbackFunc callback) { }

	// RVA: 0x1F3C9EC Offset: 0x1F3C9EC VA: 0x1F3C9EC
	public void SetMode(PartyListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1F3C96C Offset: 0x1F3C96C VA: 0x1F3C96C
	public void SetMode(PartyListViewManager.InitMode mode) { }

	// RVA: 0x1F3CBE8 Offset: 0x1F3CBE8 VA: 0x1F3CBE8
	protected void RequestListObject(PartyListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1F3C9F4 Offset: 0x1F3C9F4 VA: 0x1F3C9F4
	protected void RequestListObject(PartyListViewObject.InitMode mode) { }

	// RVA: 0x1F3CEF8 Offset: 0x1F3CEF8 VA: 0x1F3CEF8
	protected void OnMoveEnd() { }

	// RVA: 0x1F3CFC4 Offset: 0x1F3CFC4 VA: 0x1F3CFC4
	public void MoveCenterItem(int index, bool isAnimation = True) { }

	// RVA: 0x1F3CFE8 Offset: 0x1F3CFE8 VA: 0x1F3CFE8
	public void ForceJumpItem(int targetIndex) { }

	// RVA: 0x1F3D0FC Offset: 0x1F3D0FC VA: 0x1F3D0FC
	protected void OnModifyListView(ListViewObject obj) { }

	// RVA: 0x1F3D3C8 Offset: 0x1F3D3C8 VA: 0x1F3D3C8
	protected void OnClickListViewChangeServant1(ListViewObject obj) { }

	// RVA: 0x1F3D428 Offset: 0x1F3D428 VA: 0x1F3D428
	protected void OnClickListViewChangeServant2(ListViewObject obj) { }

	// RVA: 0x1F3D488 Offset: 0x1F3D488 VA: 0x1F3D488
	protected void OnClickListViewChangeServant3(ListViewObject obj) { }

	// RVA: 0x1F3D4E8 Offset: 0x1F3D4E8 VA: 0x1F3D4E8
	protected void OnClickListViewChangeServant4(ListViewObject obj) { }

	// RVA: 0x1F3D548 Offset: 0x1F3D548 VA: 0x1F3D548
	protected void OnClickListViewChangeServant5(ListViewObject obj) { }

	// RVA: 0x1F3D5A8 Offset: 0x1F3D5A8 VA: 0x1F3D5A8
	protected void OnClickListViewChangeServant6(ListViewObject obj) { }

	// RVA: 0x1F3D608 Offset: 0x1F3D608 VA: 0x1F3D608
	protected void OnClickListViewChangeEquip1(ListViewObject obj) { }

	// RVA: 0x1F3D668 Offset: 0x1F3D668 VA: 0x1F3D668
	protected void OnClickListViewChangeEquip2(ListViewObject obj) { }

	// RVA: 0x1F3D6C8 Offset: 0x1F3D6C8 VA: 0x1F3D6C8
	protected void OnClickListViewChangeEquip3(ListViewObject obj) { }

	// RVA: 0x1F3D728 Offset: 0x1F3D728 VA: 0x1F3D728
	protected void OnClickListViewChangeEquip4(ListViewObject obj) { }

	// RVA: 0x1F3D788 Offset: 0x1F3D788 VA: 0x1F3D788
	protected void OnClickListViewChangeEquip5(ListViewObject obj) { }

	// RVA: 0x1F3D7E8 Offset: 0x1F3D7E8 VA: 0x1F3D7E8
	protected void OnClickListViewChangeEquip6(ListViewObject obj) { }

	// RVA: 0x1F3D848 Offset: 0x1F3D848 VA: 0x1F3D848
	protected void OnClickListViewChangeParty(PartyListViewObject obj) { }

	// RVA: 0x1F3D8A8 Offset: 0x1F3D8A8 VA: 0x1F3D8A8
	public void RefreshDrawPartyInfo() { }

	// RVA: 0x1F3D960 Offset: 0x1F3D960 VA: 0x1F3D960
	public void UpdateEventLimitEquip(int index) { }

	// RVA: 0x1F3DA28 Offset: 0x1F3DA28 VA: 0x1F3DA28
	public void SetEventLimitEquipSetting() { }

	// RVA: 0x1F3DAB4 Offset: 0x1F3DAB4 VA: 0x1F3DAB4
	public bool IsUseEventLimitEquipUserWill(int index) { }
}

// Namespace: 
public enum PartyListViewManager.InitMode // TypeDefIndex: 10369
{
	// Fields
	public int value__; // 0x0
	public const PartyListViewManager.InitMode NONE = 0;
	public const PartyListViewManager.InitMode VALID = 1;
	public const PartyListViewManager.InitMode INPUT = 2;
	public const PartyListViewManager.InitMode ORGANIZATION_GUIDE_DECK_EMPTY_SELECT = 3;
}

// Namespace: 
public enum PartyListViewManager.ResultKind // TypeDefIndex: 10370
{
	// Fields
	public int value__; // 0x0
	public const PartyListViewManager.ResultKind NONE = 0;
	public const PartyListViewManager.ResultKind SELECT_SERVANT = 1;
	public const PartyListViewManager.ResultKind SELECT_EQUIP = 2;
	public const PartyListViewManager.ResultKind CHANGE_PARTY = 3;
	public const PartyListViewManager.ResultKind MODIFY_STATUS = 4;
}

// Namespace: 
public sealed class PartyListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 10371
{
	// Methods

	// RVA: 0x1F3DB78 Offset: 0x1F3DB78 VA: 0x1F3DB78
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1F3D15C Offset: 0x1F3D15C VA: 0x1F3D15C Slot: 11
	public virtual void Invoke(PartyListViewManager.ResultKind kind, int n, int m) { }

	// RVA: 0x1F3DB88 Offset: 0x1F3DB88 VA: 0x1F3DB88 Slot: 12
	public virtual IAsyncResult BeginInvoke(PartyListViewManager.ResultKind kind, int n, int m, AsyncCallback callback, object object) { }

	// RVA: 0x1F3DC48 Offset: 0x1F3DC48 VA: 0x1F3DC48 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class PartyListViewObject : ListViewObject // TypeDefIndex: 10372
{
	// Fields
	protected PartyListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCE02D4 Offset: 0xCE02D4 VA: 0xCE02D4
	[DebuggerBrowsableAttribute] // RVA: 0xCE02D4 Offset: 0xCE02D4 VA: 0xCE02D4
	private Action callbackFunc; // 0x70
	protected PartyListViewItemDraw itemDraw; // 0x78
	protected PartyListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88
	protected int showIndex; // 0x90
	[SerializeField] // RVA: 0xCE0310 Offset: 0xCE0310 VA: 0xCE0310
	private bool useAlphaMask; // 0x94
	[SerializeField] // RVA: 0xCE0320 Offset: 0xCE0320 VA: 0xCE0320
	private UISprite maskSprite; // 0x98
	[SerializeField] // RVA: 0xCE0330 Offset: 0xCE0330 VA: 0xCE0330
	private float maxAlphaRate; // 0xA0
	private UIScrollView scrollView; // 0xA8
	private ListViewItemSeed itemSeed; // 0xB0
	private BoxCollider[] colliders; // 0xB8

	// Methods

	// RVA: 0x1F3DC54 Offset: 0x1F3DC54 VA: 0x1F3DC54
	public void .ctor() { }

	// RVA: 0x1F3DCC8 Offset: 0x1F3DCC8 VA: 0x1F3DCC8
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1F3DDB4 Offset: 0x1F3DDB4 VA: 0x1F3DDB4
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1F3DEA0 Offset: 0x1F3DEA0 VA: 0x1F3DEA0
	protected void Awake() { }

	// RVA: 0x1F3DF14 Offset: 0x1F3DF14 VA: 0x1F3DF14
	private void OnDestroy() { }

	// RVA: 0x1F3DFC0 Offset: 0x1F3DFC0 VA: 0x1F3DFC0
	private void Update() { }

	// RVA: 0x1F3C390 Offset: 0x1F3C390 VA: 0x1F3C390
	public PartyListViewItem GetItem() { }

	// RVA: 0x1F3E2A4 Offset: 0x1F3E2A4 VA: 0x1F3E2A4 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1F3E2D4 Offset: 0x1F3E2D4 VA: 0x1F3E2D4 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x1F3E2CC Offset: 0x1F3E2CC VA: 0x1F3E2CC
	protected void InitItem() { }

	// RVA: 0x1F3E2FC Offset: 0x1F3E2FC VA: 0x1F3E2FC Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x1F3E400 Offset: 0x1F3E400 VA: 0x1F3E400 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1F3E488 Offset: 0x1F3E488 VA: 0x1F3E488
	public void Init(PartyListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1F3CDF0 Offset: 0x1F3CDF0 VA: 0x1F3CDF0
	public void Init(PartyListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x1F3CE74 Offset: 0x1F3CE74 VA: 0x1F3CE74
	public void Init(PartyListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x1F3C8E4 Offset: 0x1F3C8E4 VA: 0x1F3C8E4
	public void Init(PartyListViewObject.InitMode initMode) { }

	// RVA: 0x1F3E880 Offset: 0x1F3E880 VA: 0x1F3E880
	protected void EventMoveEnd() { }

	// RVA: 0x1F3E8A8 Offset: 0x1F3E8A8 VA: 0x1F3E8A8
	protected void SelectMemberServant(int m) { }

	// RVA: 0x1F3E9C0 Offset: 0x1F3E9C0 VA: 0x1F3E9C0
	protected void SelectMemberEquip(int m) { }

	// RVA: 0x1F3EAD8 Offset: 0x1F3EAD8 VA: 0x1F3EAD8
	protected void OpenServantDetail(int m) { }

	// RVA: 0x1F3EE80 Offset: 0x1F3EE80 VA: 0x1F3EE80
	protected void EndShowServant(bool isDecide) { }

	// RVA: 0x1F3F024 Offset: 0x1F3F024 VA: 0x1F3F024
	protected void EndCloseShowServant() { }

	// RVA: 0x1F3F028 Offset: 0x1F3F028 VA: 0x1F3F028
	protected void EndShowServantWithQuest(bool isDecide, int questId) { }

	// RVA: 0x1F3F0F0 Offset: 0x1F3F0F0 VA: 0x1F3F0F0
	protected void EndCloseShowServantQuestJump() { }

	// RVA: 0x1F3F15C Offset: 0x1F3F15C VA: 0x1F3F15C
	protected void OpenEquipDetail(int m) { }

	// RVA: 0x1F3F6B4 Offset: 0x1F3F6B4 VA: 0x1F3F6B4
	protected void EndShowEquip(bool isDecide) { }

	// RVA: 0x1F3F858 Offset: 0x1F3F858 VA: 0x1F3F858
	protected void EndCloseShowEquip() { }

	// RVA: 0x1F3E714 Offset: 0x1F3E714 VA: 0x1F3E714
	private void InitAlphaMask() { }

	// RVA: 0x1F3DFC4 Offset: 0x1F3DFC4 VA: 0x1F3DFC4
	private void UpdateAlphaMask() { }

	// RVA: 0x1F3F85C Offset: 0x1F3F85C VA: 0x1F3F85C
	private void UpdateCollider(bool enable) { }

	// RVA: 0x1F3F908 Offset: 0x1F3F908 VA: 0x1F3F908
	public void OnClickItem1() { }

	// RVA: 0x1F3F910 Offset: 0x1F3F910 VA: 0x1F3F910
	public void OnLongPressItem1() { }

	// RVA: 0x1F3F918 Offset: 0x1F3F918 VA: 0x1F3F918
	public void OnClickItem2() { }

	// RVA: 0x1F3F920 Offset: 0x1F3F920 VA: 0x1F3F920
	public void OnLongPressItem2() { }

	// RVA: 0x1F3F928 Offset: 0x1F3F928 VA: 0x1F3F928
	public void OnClickItem3() { }

	// RVA: 0x1F3F930 Offset: 0x1F3F930 VA: 0x1F3F930
	public void OnLongPressItem3() { }

	// RVA: 0x1F3F938 Offset: 0x1F3F938 VA: 0x1F3F938
	public void OnClickItem4() { }

	// RVA: 0x1F3F940 Offset: 0x1F3F940 VA: 0x1F3F940
	public void OnLongPressItem4() { }

	// RVA: 0x1F3F948 Offset: 0x1F3F948 VA: 0x1F3F948
	public void OnClickItem5() { }

	// RVA: 0x1F3F950 Offset: 0x1F3F950 VA: 0x1F3F950
	public void OnLongPressItem5() { }

	// RVA: 0x1F3F958 Offset: 0x1F3F958 VA: 0x1F3F958
	public void OnClickItem6() { }

	// RVA: 0x1F3F960 Offset: 0x1F3F960 VA: 0x1F3F960
	public void OnLongPressItem6() { }

	// RVA: 0x1F3F968 Offset: 0x1F3F968 VA: 0x1F3F968
	public void OnClickItemEquip1() { }

	// RVA: 0x1F3F970 Offset: 0x1F3F970 VA: 0x1F3F970
	public void OnLongPressItemEquip1() { }
