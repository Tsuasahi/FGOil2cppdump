	// RVA: 0x15EA75C Offset: 0x15EA75C VA: 0x15EA75C
	private Action<bool> get_AllTouchBlockMethod() { }

	[CompilerGeneratedAttribute] // RVA: 0xD38C94 Offset: 0xD38C94 VA: 0xD38C94
	// RVA: 0x15EA764 Offset: 0x15EA764 VA: 0x15EA764
	public void set_AllTouchBlockMethod(Action<bool> value) { }

	// RVA: 0x15EA76C Offset: 0x15EA76C VA: 0x15EA76C
	public void Activate() { }

	// RVA: 0x15EA87C Offset: 0x15EA87C VA: 0x15EA87C Slot: 4
	public virtual void SetAllTouchBlock(bool isBlock) { }

	// RVA: 0x15EA8F0 Offset: 0x15EA8F0 VA: 0x15EA8F0
	public void PauseScheduler(bool immediate = False) { }

	// RVA: 0x15EA904 Offset: 0x15EA904 VA: 0x15EA904
	public void ResumeScheduler() { }

	// RVA: 0x15EA90C Offset: 0x15EA90C VA: 0x15EA90C
	public void AddTask(bool enableInput, SchedulerTaskBase[] performances) { }

	// RVA: 0x15EA988 Offset: 0x15EA988 VA: 0x15EA988
	public void AddTask(bool enableInput, List<SchedulerTaskBase> performances) { }

	// RVA: 0x15EAA04 Offset: 0x15EAA04 VA: 0x15EAA04
	public void InsertTask(bool enableInput, SchedulerTaskBase[] performances) { }

	// RVA: 0x15EAB90 Offset: 0x15EAB90 VA: 0x15EAB90
	public void InsertTask(bool enableInput, List<SchedulerTaskBase> performances) { }

	// RVA: 0x15EAC0C Offset: 0x15EAC0C VA: 0x15EAC0C
	public bool IsNonBlockTaskEmpty() { }

	[DebuggerHiddenAttribute] // RVA: 0xD38CA4 Offset: 0xD38CA4 VA: 0xD38CA4
	// RVA: 0x15EA79C Offset: 0x15EA79C VA: 0x15EA79C
	private IEnumerator TaskExecute() { }

	[DebuggerHiddenAttribute] // RVA: 0xD38CB4 Offset: 0xD38CB4 VA: 0xD38CB4
	// RVA: 0x15EA80C Offset: 0x15EA80C VA: 0x15EA80C
	private IEnumerator NonBlockTaskExecute() { }

	// RVA: 0x15EAC88 Offset: 0x15EAC88 VA: 0x15EAC88
	public static bool IEnumeratorExecute(IEnumerator enumerator) { }

	// RVA: 0x15EAF4C Offset: 0x15EAF4C VA: 0x15EAF4C
	public void TaskUpdate() { }

	[CompilerGeneratedAttribute] // RVA: 0xD38CC4 Offset: 0xD38CC4 VA: 0xD38CC4
	// RVA: 0x15EB080 Offset: 0x15EB080 VA: 0x15EB080
	private void <InsertTask>m__0(TaskScheduler.PerformanceQueue x) { }
}

// Namespace: 
private struct TaskScheduler.PerformanceQueue // TypeDefIndex: 8393
{
	// Fields
	public SchedulerTaskBase[] Tasks; // 0x0
	public bool EnableInput; // 0x8
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF330 Offset: 0xCAF330 VA: 0xCAF330
private sealed class TaskScheduler.<TaskExecute>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8394
{
	// Fields
	internal WaitUntil <emptyWait>__0; // 0x10
	internal WaitWhile <pauseWait>__0; // 0x18
	internal WaitWhile <fadeWait>__0; // 0x20
	internal TaskScheduler.PerformanceQueue <queue>__1; // 0x28
	internal int <count>__1; // 0x38
	internal int <i>__2; // 0x3C
	internal SchedulerTaskBase <task>__3; // 0x40
	internal IEnumerator <execute>__3; // 0x48
	internal TaskScheduler $this; // 0x50
	internal object $current; // 0x58
	internal bool $disposing; // 0x60
	internal int $PC; // 0x64
	private static Func<bool> <>f__am$cache0; // 0x0

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD46D04 Offset: 0xD46D04 VA: 0xD46D04
	// RVA: 0x15EAC78 Offset: 0x15EAC78 VA: 0x15EAC78
	public void .ctor() { }

	// RVA: 0x15EB920 Offset: 0x15EB920 VA: 0x15EB920 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46D14 Offset: 0xD46D14 VA: 0xD46D14
	// RVA: 0x15EBF30 Offset: 0x15EBF30 VA: 0x15EBF30 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46D24 Offset: 0xD46D24 VA: 0xD46D24
	// RVA: 0x15EBF38 Offset: 0x15EBF38 VA: 0x15EBF38 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46D34 Offset: 0xD46D34 VA: 0xD46D34
	// RVA: 0x15EBF40 Offset: 0x15EBF40 VA: 0x15EBF40 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46D44 Offset: 0xD46D44 VA: 0xD46D44
	// RVA: 0x15EBF54 Offset: 0x15EBF54 VA: 0x15EBF54 Slot: 6
	public void Reset() { }

	// RVA: 0x15EBFBC Offset: 0x15EBFBC VA: 0x15EBFBC
	internal bool <>m__0() { }

	// RVA: 0x15EC038 Offset: 0x15EC038 VA: 0x15EC038
	internal bool <>m__1() { }

	// RVA: 0x15EC090 Offset: 0x15EC090 VA: 0x15EC090
	private static bool <>m__2() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF340 Offset: 0xCAF340 VA: 0xCAF340
private sealed class TaskScheduler.<NonBlockTaskExecute>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 8395
{
	// Fields
	internal WaitUntil <emptyWait>__0; // 0x10
	internal WaitWhile <pauseWait>__0; // 0x18
	internal WaitWhile <fadeWait>__0; // 0x20
	internal Dictionary<SchedulerTaskBase, IEnumerator> <executions>__0; // 0x28
	internal List<SchedulerTaskBase> <removeTasks>__0; // 0x30
	internal TaskScheduler $this; // 0x38
	internal object $current; // 0x40
	internal bool $disposing; // 0x48
	internal int $PC; // 0x4C
	private static Func<bool> <>f__am$cache0; // 0x0

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD46D54 Offset: 0xD46D54 VA: 0xD46D54
	// RVA: 0x15EAC80 Offset: 0x15EAC80 VA: 0x15EAC80
	public void .ctor() { }

	// RVA: 0x15EB0F8 Offset: 0x15EB0F8 VA: 0x15EB0F8 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46D64 Offset: 0xD46D64 VA: 0xD46D64
	// RVA: 0x15EB760 Offset: 0x15EB760 VA: 0x15EB760 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46D74 Offset: 0xD46D74 VA: 0xD46D74
	// RVA: 0x15EB768 Offset: 0x15EB768 VA: 0x15EB768 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46D84 Offset: 0xD46D84 VA: 0xD46D84
	// RVA: 0x15EB770 Offset: 0x15EB770 VA: 0x15EB770 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD46D94 Offset: 0xD46D94 VA: 0xD46D94
	// RVA: 0x15EB784 Offset: 0x15EB784 VA: 0x15EB784 Slot: 6
	public void Reset() { }

	// RVA: 0x15EB7EC Offset: 0x15EB7EC VA: 0x15EB7EC
	internal bool <>m__0() { }

	// RVA: 0x15EB868 Offset: 0x15EB868 VA: 0x15EB868
	internal bool <>m__1() { }

	// RVA: 0x15EB8C0 Offset: 0x15EB8C0 VA: 0x15EB8C0
	private static bool <>m__2() { }
}

// Namespace: 
public class CommonMessageManager : ScriptMessageManager // TypeDefIndex: 8396
{
	// Fields
	protected CommonMessageManager.State state; // 0x204
	protected CommonMessageManager.PlaySpeed playSpeed; // 0x208
	protected string waitType; // 0x210
	protected string waitMessage; // 0x218
	protected string waitTalkName; // 0x220
	protected bool isCancelInput; // 0x228
	private bool isDispLastTouchMark; // 0x229
	protected Action callbackFunc; // 0x230
	protected Action touchCallbackFunc; // 0x238
	protected string codeCommentString; // 0x240
	protected string codeTalkString; // 0x248
	protected string codeVoiceString; // 0x250
	protected string codeReturnString; // 0x258
	protected int executeIndex; // 0x260
	protected int executeIndexMax; // 0x264
	protected string[] executeTagList; // 0x268
	protected string[] executeDataList; // 0x270
	protected int[] executeLineList; // 0x278
	[CompilerGeneratedAttribute] // RVA: 0xCCAFF4 Offset: 0xCCAFF4 VA: 0xCCAFF4
	private static Dictionary<string, int> <>f__switch$map8; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCCB004 Offset: 0xCCB004 VA: 0xCCB004
	private static Dictionary<string, int> <>f__switch$map9; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCCB014 Offset: 0xCCB014 VA: 0xCCB014
	private static Dictionary<string, int> <>f__switch$mapA; // 0x10

	// Methods

	// RVA: 0x14976CC Offset: 0x14976CC VA: 0x14976CC
	public void .ctor() { }

	// RVA: 0x149773C Offset: 0x149773C VA: 0x149773C
	public void Init() { }

	// RVA: 0x149787C Offset: 0x149787C VA: 0x149787C
	public void Quit() { }

	// RVA: 0x1497924 Offset: 0x1497924 VA: 0x1497924
	public void SetTouchCallback(Action callback) { }

	// RVA: 0x149792C Offset: 0x149792C VA: 0x149792C
	public void SetMessageBlock(string messageBlock, bool isDispLastTouchMark = True, Action callbackFunc) { }

	// RVA: 0x1497904 Offset: 0x1497904 VA: 0x1497904
	protected void EndExecuteScript() { }

	// RVA: 0x1498300 Offset: 0x1498300 VA: 0x1498300 Slot: 4
	public override void OnPressWindow() { }

	// RVA: 0x1498340 Offset: 0x1498340 VA: 0x1498340 Slot: 5
	public override void OnClickWindow() { }

	// RVA: 0x1498380 Offset: 0x1498380 VA: 0x1498380
	public void SetMessageSpeed(CommonMessageManager.PlaySpeed playSpeed) { }

	// RVA: 0x1498388 Offset: 0x1498388 VA: 0x1498388
	protected void SetTalkName(string name) { }

	// RVA: 0x149798C Offset: 0x149798C VA: 0x149798C
	protected void AnalysScript(string scriptData) { }

	// RVA: 0x149843C Offset: 0x149843C VA: 0x149843C
	protected void AnalysText(ref List<string> tagDataList, ref List<string> scriptDataList, ref List<int> lineDataList, ref int lastMessageIndex, ref string talkName, string analysData, int line) { }

	// RVA: 0x14995F4 Offset: 0x14995F4 VA: 0x14995F4
	protected string[] AnalysParam(string data) { }

	// RVA: 0x1499D94 Offset: 0x1499D94 VA: 0x1499D94
	protected void Update() { }

	// RVA: 0x1499DCC Offset: 0x1499DCC VA: 0x1499DCC
	protected bool ProcessScript(float delta) { }
}

// Namespace: 
protected enum CommonMessageManager.State // TypeDefIndex: 8397
{
	// Fields
	public int value__; // 0x0
	public const CommonMessageManager.State NONE = 0;
	public const CommonMessageManager.State IDLE = 1;
	public const CommonMessageManager.State LOAD = 2;
	public const CommonMessageManager.State EXECUTE = 3;
	public const CommonMessageManager.State WAIT = 4;
	public const CommonMessageManager.State WAIT_EXIT = 5;
	public const CommonMessageManager.State EXIT = 6;
	public const CommonMessageManager.State BACK_VIEW_INIT = 7;
	public const CommonMessageManager.State BACK_VIEW = 8;
	public const CommonMessageManager.State FIGURE_VIEW_INIT = 9;
	public const CommonMessageManager.State FIGURE_VIEW = 10;
	public const CommonMessageManager.State ERROR = 11;
}

// Namespace: 
public enum CommonMessageManager.PlaySpeed // TypeDefIndex: 8398
{
	// Fields
	public int value__; // 0x0
	public const CommonMessageManager.PlaySpeed NONE = 0;
	public const CommonMessageManager.PlaySpeed PAUSE = 1;
	public const CommonMessageManager.PlaySpeed NORMAL = 2;
	public const CommonMessageManager.PlaySpeed FAST = 3;
}

// Namespace: 
public class ScriptActionAdvPrefabActorController : MonoBehaviour // TypeDefIndex: 8399
{
	// Fields
	[SerializeField] // RVA: 0xCCB024 Offset: 0xCCB024 VA: 0xCCB024
	public string ActorName; // 0x18
	[SerializeField] // RVA: 0xCCB034 Offset: 0xCCB034 VA: 0xCCB034
	public ScriptActionAdvPrefabController.DisplayCond displayCond; // 0x20
	[SerializeField] // RVA: 0xCCB044 Offset: 0xCCB044 VA: 0xCCB044
	private Transform FollowTarget; // 0x28
	[SerializeField] // RVA: 0xCCB054 Offset: 0xCCB054 VA: 0xCCB054
	private Vector3 followOffsetPosition; // 0x30
	[SerializeField] // RVA: 0xCCB064 Offset: 0xCCB064 VA: 0xCCB064
	private Vector3 followOffsetAngle; // 0x3C
	[CompilerGeneratedAttribute] // RVA: 0xCCB074 Offset: 0xCCB074 VA: 0xCCB074
	[DebuggerBrowsableAttribute] // RVA: 0xCCB074 Offset: 0xCCB074 VA: 0xCCB074
	private bool <IsGoNext>k__BackingField; // 0x48
	private Animator animator; // 0x50

	// Properties
	public bool IsGoNext { get; set; }

	// Methods

	// RVA: 0x1ABA9F4 Offset: 0x1ABA9F4 VA: 0x1ABA9F4
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD38CD4 Offset: 0xD38CD4 VA: 0xD38CD4
	// RVA: 0x1ABA9FC Offset: 0x1ABA9FC VA: 0x1ABA9FC
	public bool get_IsGoNext() { }

	[CompilerGeneratedAttribute] // RVA: 0xD38CE4 Offset: 0xD38CE4 VA: 0xD38CE4
	// RVA: 0x1ABAA04 Offset: 0x1ABAA04 VA: 0x1ABAA04
	private void set_IsGoNext(bool value) { }

	// RVA: 0x1ABAA10 Offset: 0x1ABAA10 VA: 0x1ABAA10
	private void Awake() { }

	// RVA: 0x1ABAB28 Offset: 0x1ABAB28 VA: 0x1ABAB28
	public bool SetDisplay(int genderType) { }

	// RVA: 0x1ABABD4 Offset: 0x1ABABD4 VA: 0x1ABABD4
	public void SetGender(int genderType) { }

	// RVA: 0x1ABAC90 Offset: 0x1ABAC90 VA: 0x1ABAC90
	public bool PlayAnimator(string trigger) { }

	// RVA: 0x1ABAD44 Offset: 0x1ABAD44 VA: 0x1ABAD44
	public void Show() { }

	// RVA: 0x1ABAD7C Offset: 0x1ABAD7C VA: 0x1ABAD7C
	public void Hide() { }

	// RVA: 0x1ABADB4 Offset: 0x1ABADB4 VA: 0x1ABADB4
	public void GoNext() { }

	// RVA: 0x1ABADC0 Offset: 0x1ABADC0 VA: 0x1ABADC0
	public void Pause(bool pause) { }

	// RVA: 0x1ABAE08 Offset: 0x1ABAE08 VA: 0x1ABAE08
	private void Update() { }

	// RVA: 0x1ABAFD4 Offset: 0x1ABAFD4 VA: 0x1ABAFD4
	public void PlaySE(string se) { }

	// RVA: 0x1ABB03C Offset: 0x1ABB03C VA: 0x1ABB03C
	public void PlayVoice(string voice) { }

	// RVA: 0x1ABB0A4 Offset: 0x1ABB0A4 VA: 0x1ABB0A4
	public void ShowActor(string actorName) { }

	// RVA: 0x1ABB1F0 Offset: 0x1ABB1F0 VA: 0x1ABB1F0
	public void HideActor(string actorName) { }

	[CompilerGeneratedAttribute] // RVA: 0xD38CF4 Offset: 0xD38CF4 VA: 0xD38CF4
	// RVA: 0x1ABB33C Offset: 0x1ABB33C VA: 0x1ABB33C
	private void <Awake>m__0(ScriptActionAdvPrefabActorGoNextState x) { }
}

// Namespace: 
public class ScriptActionAdvPrefabActorGoNextState : StateMachineBehaviour // TypeDefIndex: 8400
{
	// Fields
	private ScriptActionAdvPrefabActorController owner; // 0x18

	// Methods

	// RVA: 0x1ABB374 Offset: 0x1ABB374 VA: 0x1ABB374
	public void .ctor() { }

	// RVA: 0x1ABB36C Offset: 0x1ABB36C VA: 0x1ABB36C
	public void SetOwner(ScriptActionAdvPrefabActorController owner) { }

	// RVA: 0x1ABB37C Offset: 0x1ABB37C VA: 0x1ABB37C Slot: 4
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) { }
}

// Namespace: 
public class ScriptActionAdvPrefabCameraLocator : MonoBehaviour // TypeDefIndex: 8401
{
	// Fields
	[SerializeField] // RVA: 0xCCB0B0 Offset: 0xCCB0B0 VA: 0xCCB0B0
	private Transform Locator; // 0x18
	[SerializeField] // RVA: 0xCCB0C0 Offset: 0xCCB0C0 VA: 0xCCB0C0
	private GameObject targetRig; // 0x20
	[SerializeField] // RVA: 0xCCB0D0 Offset: 0xCCB0D0 VA: 0xCCB0D0
	private bool scaleToCameraParameter; // 0x28
	private Camera[] targetCameras; // 0x30

	// Methods

	// RVA: 0x1ABB404 Offset: 0x1ABB404 VA: 0x1ABB404
	public void .ctor() { }

	// RVA: 0x1ABB40C Offset: 0x1ABB40C VA: 0x1ABB40C
	private void Awake() { }

	// RVA: 0x1ABB474 Offset: 0x1ABB474 VA: 0x1ABB474
	private void LateUpdate() { }
}

// Namespace: 
public class ScriptActionAdvPrefabController : MonoBehaviour // TypeDefIndex: 8402
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCCB0E0 Offset: 0xCCB0E0 VA: 0xCCB0E0
	[DebuggerBrowsableAttribute] // RVA: 0xCCB0E0 Offset: 0xCCB0E0 VA: 0xCCB0E0
	private RenderTexture <renderTexture>k__BackingField; // 0x18
	private GameObject demoRootObject; // 0x20
	private Dictionary<string, ScriptActionAdvPrefabActorController> actorDict; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCCB11C Offset: 0xCCB11C VA: 0xCCB11C
	[DebuggerBrowsableAttribute] // RVA: 0xCCB11C Offset: 0xCCB11C VA: 0xCCB11C
	private bool <isSetup>k__BackingField; // 0x30
	private AssetData assetData; // 0x38
	private bool isPaused; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xCCB158 Offset: 0xCCB158 VA: 0xCCB158
	private static Func<ScriptActionAdvPrefabActorController, bool> <>f__am$cache0; // 0x0

	// Properties
	public RenderTexture renderTexture { get; set; }
	public bool isSetup { get; set; }
	public bool IsGoNext { get; }

	// Methods

	// RVA: 0x1ABB6B0 Offset: 0x1ABB6B0 VA: 0x1ABB6B0
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD38D04 Offset: 0xD38D04 VA: 0xD38D04
	// RVA: 0x1ABB6B8 Offset: 0x1ABB6B8 VA: 0x1ABB6B8
	public RenderTexture get_renderTexture() { }

	[CompilerGeneratedAttribute] // RVA: 0xD38D14 Offset: 0xD38D14 VA: 0xD38D14
	// RVA: 0x1ABB6C0 Offset: 0x1ABB6C0 VA: 0x1ABB6C0
	private void set_renderTexture(RenderTexture value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD38D24 Offset: 0xD38D24 VA: 0xD38D24
	// RVA: 0x1ABB6C8 Offset: 0x1ABB6C8 VA: 0x1ABB6C8
	public bool get_isSetup() { }

	[CompilerGeneratedAttribute] // RVA: 0xD38D34 Offset: 0xD38D34 VA: 0xD38D34
	// RVA: 0x1ABB6D0 Offset: 0x1ABB6D0 VA: 0x1ABB6D0
	private void set_isSetup(bool value) { }

	// RVA: 0x1ABB6DC Offset: 0x1ABB6DC VA: 0x1ABB6DC
	public bool get_IsGoNext() { }

	// RVA: 0x1ABB7C0 Offset: 0x1ABB7C0 VA: 0x1ABB7C0
	public static string GetAssetName(string baseName) { }

	// RVA: 0x1ABB834 Offset: 0x1ABB834 VA: 0x1ABB834
	public void Setup(string assetName) { }

	// RVA: 0x1ABB8E0 Offset: 0x1ABB8E0 VA: 0x1ABB8E0
	public void Prepare(string objectName) { }

	// RVA: 0x1ABBD38 Offset: 0x1ABBD38 VA: 0x1ABBD38
	public void PlayAnimator(string actorName, string trigger) { }

	// RVA: 0x1ABBDD4 Offset: 0x1ABBDD4 VA: 0x1ABBDD4
	public bool CheckGoNext(string actorName) { }

	// RVA: 0x1ABB164 Offset: 0x1ABB164 VA: 0x1ABB164
	public void SetShow(string actorName) { }

	// RVA: 0x1ABB2B0 Offset: 0x1ABB2B0 VA: 0x1ABB2B0
	public void SetHide(string actorName) { }

	// RVA: 0x1ABBE6C Offset: 0x1ABBE6C VA: 0x1ABBE6C
	public void Release() { }

	// RVA: 0x1ABBF4C Offset: 0x1ABBF4C VA: 0x1ABBF4C
	public void Pause(bool pause) { }

	[CompilerGeneratedAttribute] // RVA: 0xD38D44 Offset: 0xD38D44 VA: 0xD38D44
	// RVA: 0x1ABC018 Offset: 0x1ABC018 VA: 0x1ABC018
	private static bool <get_IsGoNext>m__0(ScriptActionAdvPrefabActorController x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD38D54 Offset: 0xD38D54 VA: 0xD38D54
	// RVA: 0x1ABC040 Offset: 0x1ABC040 VA: 0x1ABC040
	private void <Setup>m__1(AssetData asset) { }

	[CompilerGeneratedAttribute] // RVA: 0xD38D64 Offset: 0xD38D64 VA: 0xD38D64
	// RVA: 0x1ABC050 Offset: 0x1ABC050 VA: 0x1ABC050
	private void <Pause>m__2(ScriptActionAdvPrefabActorController x) { }
}

// Namespace: 
public enum ScriptActionAdvPrefabController.DisplayCond // TypeDefIndex: 8403
{
	// Fields
	public int value__; // 0x0
	public const ScriptActionAdvPrefabController.DisplayCond Always = 0;
	public const ScriptActionAdvPrefabController.DisplayCond Male = 2;
	public const ScriptActionAdvPrefabController.DisplayCond Female = 4;
}

// Namespace: 
public class ScriptActionAdvPrefabLightSetting : MonoBehaviour // TypeDefIndex: 8404
{
	// Fields
	[SerializeField] // RVA: 0xCCB168 Offset: 0xCCB168 VA: 0xCCB168
	private Color ambientColor; // 0x18
	[SerializeField] // RVA: 0xCCB178 Offset: 0xCCB178 VA: 0xCCB178
	private bool fog; // 0x28
	[SerializeField] // RVA: 0xCCB188 Offset: 0xCCB188 VA: 0xCCB188
	private Color fogColor; // 0x2C
	[SerializeField] // RVA: 0xCCB198 Offset: 0xCCB198 VA: 0xCCB198
	private FogMode fogMode; // 0x3C
	[SerializeField] // RVA: 0xCCB1A8 Offset: 0xCCB1A8 VA: 0xCCB1A8
	private float fogDensity; // 0x40
	[SerializeField] // RVA: 0xCCB1B8 Offset: 0xCCB1B8 VA: 0xCCB1B8
	private float fogStartDistance; // 0x44
	[SerializeField] // RVA: 0xCCB1C8 Offset: 0xCCB1C8 VA: 0xCCB1C8
	private float fogEndDistance; // 0x48
	private AmbientMode originalAmblentMode; // 0x4C
	private Color originalAmblentLight; // 0x50
	private bool originalFog; // 0x60
	private Color originalFogColor; // 0x64
	private FogMode originalFogMode; // 0x74
	private float originalFogDensity; // 0x78
	private float originalFogStartDistance; // 0x7C
	private float originalFogEndDistance; // 0x80

	// Methods

	// RVA: 0x1ABC088 Offset: 0x1ABC088 VA: 0x1ABC088
	public void .ctor() { }

	// RVA: 0x1ABC0E8 Offset: 0x1ABC0E8 VA: 0x1ABC0E8
	private void Awake() { }

	// RVA: 0x1ABC170 Offset: 0x1ABC170 VA: 0x1ABC170
	private void Start() { }

	// RVA: 0x1ABC1F0 Offset: 0x1ABC1F0 VA: 0x1ABC1F0
	private void OnDestroy() { }
}

// Namespace: 
public class ScriptActionRenderEffectController // TypeDefIndex: 8405
{
	// Fields
	private float timerCount; // 0x10
	private float timerMax; // 0x14
	private float loopCount; // 0x18
	private ScriptActionRenderEffectController.ReflectionFunction reflectionFunction; // 0x20
	private ScriptActionRenderEffectController.StopFunction stopFunction; // 0x28
	private bool isEnable; // 0x30
	private bool requestStop; // 0x31
	private Material material_; // 0x38

	// Methods

	// RVA: 0x1ABC270 Offset: 0x1ABC270 VA: 0x1ABC270
	public void .ctor(Material material) { }

	// RVA: 0x1ABC2A4 Offset: 0x1ABC2A4 VA: 0x1ABC2A4
	private static float FloatLinear(float src, float dest, float rate) { }

	// RVA: 0x1ABC2B4 Offset: 0x1ABC2B4 VA: 0x1ABC2B4
	public void Update(float delta) { }

	// RVA: 0x1ABC410 Offset: 0x1ABC410 VA: 0x1ABC410
	private void OnStop(bool isRequest) { }

	// RVA: 0x1ABC6F4 Offset: 0x1ABC6F4 VA: 0x1ABC6F4
	private void Start(float sec, int count, bool isStop, ScriptActionRenderEffectController.ReflectionFunction func, ScriptActionRenderEffectController.StopFunction stopfunc) { }

	// RVA: 0x1ABC728 Offset: 0x1ABC728 VA: 0x1ABC728
	private void Skip() { }

	// RVA: 0x1ABC45C Offset: 0x1ABC45C VA: 0x1ABC45C
	private void Reflection(float rate) { }

	// RVA: 0x1ABC990 Offset: 0x1ABC990 VA: 0x1ABC990
	public bool IsBusy() { }

	// RVA: 0x1ABC998 Offset: 0x1ABC998 VA: 0x1ABC998
	public void SetDisable() { }

	// RVA: 0x1ABC9A0 Offset: 0x1ABC9A0 VA: 0x1ABC9A0
	public void StartDistortion(float sec, int count, float centerX, float centerY, float strength, float range, float coefficient) { }

	// RVA: 0x1ABCDBC Offset: 0x1ABCDBC VA: 0x1ABCDBC
	public void StopDistortion(float sec, ScriptActionRenderEffectController.StopFunction stopFunc) { }

	// RVA: 0x1ABD004 Offset: 0x1ABD004 VA: 0x1ABD004
	public void StartGaussianBlur(float sec, int sampleRange, float sigma) { }

	// RVA: 0x1ABD2C4 Offset: 0x1ABD2C4 VA: 0x1ABD2C4
	public void StopGaussianBlur(float sec, ScriptActionRenderEffectController.StopFunction stopFunc) { }

	// RVA: 0x1ABD484 Offset: 0x1ABD484 VA: 0x1ABD484
	public void StartMotionBlur(float sec, int sampleRange, float sigma, float centerX, float centerY, float range, float coefficient) { }

	// RVA: 0x1ABD8DC Offset: 0x1ABD8DC VA: 0x1ABD8DC
	public void StopMotionBlur(float sec, ScriptActionRenderEffectController.StopFunction stopFunc) { }

	// RVA: 0x1ABDB28 Offset: 0x1ABDB28 VA: 0x1ABDB28
	public void SetGaussianBlur(int sampleRange, float sigma) { }

	// RVA: 0x1ABE0C4 Offset: 0x1ABE0C4 VA: 0x1ABE0C4
	public void SetMotionBlur(int sampleRange, float sigma) { }

	// RVA: 0x1ABE3F8 Offset: 0x1ABE3F8 VA: 0x1ABE3F8
	public void SkipDistortion() { }

	// RVA: 0x1ABE3FC Offset: 0x1ABE3FC VA: 0x1ABE3FC
	public void SkipBlur() { }
}

// Namespace: 
public sealed class ScriptActionRenderEffectController.ReflectionFunction : MulticastDelegate // TypeDefIndex: 8406
{
	// Methods

	// RVA: 0x1ABCDAC Offset: 0x1ABCDAC VA: 0x1ABCDAC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1ABC754 Offset: 0x1ABC754 VA: 0x1ABC754 Slot: 11
	public virtual void Invoke(float animeRate) { }

	// RVA: 0x1ABECD8 Offset: 0x1ABECD8 VA: 0x1ABECD8 Slot: 12
	public virtual IAsyncResult BeginInvoke(float animeRate, AsyncCallback callback, object object) { }

	// RVA: 0x1ABED64 Offset: 0x1ABED64 VA: 0x1ABED64 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class ScriptActionRenderEffectController.StopFunction : MulticastDelegate // TypeDefIndex: 8407
{
	// Methods

	// RVA: 0x1ABED70 Offset: 0x1ABED70 VA: 0x1ABED70
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1ABC4F4 Offset: 0x1ABC4F4 VA: 0x1ABC4F4 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1ABED80 Offset: 0x1ABED80 VA: 0x1ABED80 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1ABEDB4 Offset: 0x1ABEDB4 VA: 0x1ABEDB4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
private class ScriptActionRenderEffectController.DistortionParam : ScriptActionRenderEffectController.EffectParamBase // TypeDefIndex: 8408
{
	// Fields
	private float centerX; // 0x10
	private float centerY; // 0x14
	private float strength; // 0x18
	private float range; // 0x1C
	private float coefficient; // 0x20

	// Methods

	// RVA: 0x1ABE9E8 Offset: 0x1ABE9E8 VA: 0x1ABE9E8
	public void .ctor() { }

	// RVA: 0x1ABCCC4 Offset: 0x1ABCCC4 VA: 0x1ABCCC4
	public static ScriptActionRenderEffectController.DistortionParam CreateDistortionParam(float x, float y, float str, float rng, float coeff) { }

	// RVA: 0x1ABCB54 Offset: 0x1ABCB54 VA: 0x1ABCB54
	public static ScriptActionRenderEffectController.DistortionParam CreateMaterialValue(Material material) { }

	// RVA: 0x1ABCEE4 Offset: 0x1ABCEE4 VA: 0x1ABCEE4
	public static ScriptActionRenderEffectController.DistortionParam CreateStopMaterial(Material material) { }

	// RVA: 0x1ABE4CC Offset: 0x1ABE4CC VA: 0x1ABE4CC
	public static void ReflectionMaterial(Material material, ScriptActionRenderEffectController.DistortionParam srcParam, ScriptActionRenderEffectController.DistortionParam destParam, float rate) { }
}

// Namespace: 
private class ScriptActionRenderEffectController.GaussianBlurParam : ScriptActionRenderEffectController.EffectParamBase // TypeDefIndex: 8409
{
	// Fields
	private int sampleRange; // 0x10
	private float sigma; // 0x14

	// Methods

	// RVA: 0x1ABECA0 Offset: 0x1ABECA0 VA: 0x1ABECA0
	public void .ctor() { }

	// RVA: 0x1ABD22C Offset: 0x1ABD22C VA: 0x1ABD22C
	public static ScriptActionRenderEffectController.GaussianBlurParam CreateByParams(int sampleRange, float sigma) { }

	// RVA: 0x1ABD154 Offset: 0x1ABD154 VA: 0x1ABD154
	public static ScriptActionRenderEffectController.GaussianBlurParam CreateByMaterialValue(Material material) { }

	// RVA: 0x1ABD3EC Offset: 0x1ABD3EC VA: 0x1ABD3EC
	public static ScriptActionRenderEffectController.GaussianBlurParam CreateStopByMaterial(Material material) { }

	// RVA: 0x1ABE678 Offset: 0x1ABE678 VA: 0x1ABE678
	public static void ReflectionMaterial(Material material, ScriptActionRenderEffectController.GaussianBlurParam srcParam, ScriptActionRenderEffectController.GaussianBlurParam destParam, float rate) { }

	// RVA: 0x1ABDCA8 Offset: 0x1ABDCA8 VA: 0x1ABDCA8
	public static float[] GetBlurFactors(int sampleRange, float sigma) { }
}

// Namespace: 
private class ScriptActionRenderEffectController.MotionBlurParam : ScriptActionRenderEffectController.EffectParamBase // TypeDefIndex: 8410
{
	// Fields
	private int sampleRange; // 0x10
	private float sigma; // 0x14
	private float centerX; // 0x18
	private float centerY; // 0x1C
	private float range; // 0x20
	private float coefficient; // 0x24

	// Methods

	// RVA: 0x1ABECB0 Offset: 0x1ABECB0 VA: 0x1ABECB0
	public void .ctor() { }

	// RVA: 0x1ABD7D8 Offset: 0x1ABD7D8 VA: 0x1ABD7D8
	public static ScriptActionRenderEffectController.MotionBlurParam CreateByParams(int sampleRange, float sigma, float centerX, float centerY, float range, float coefficient) { }

	// RVA: 0x1ABD614 Offset: 0x1ABD614 VA: 0x1ABD614
	public static ScriptActionRenderEffectController.MotionBlurParam CreateByMaterialValue(Material material) { }

	// RVA: 0x1ABDA04 Offset: 0x1ABDA04 VA: 0x1ABDA04
	public static ScriptActionRenderEffectController.MotionBlurParam CreateStopByMaterial(Material material) { }

	// RVA: 0x1ABE798 Offset: 0x1ABE798 VA: 0x1ABE798
	public static void ReflectionMaterial(Material material, ScriptActionRenderEffectController.MotionBlurParam srcParam, ScriptActionRenderEffectController.MotionBlurParam destParam, float rate) { }

	// RVA: 0x1ABE164 Offset: 0x1ABE164 VA: 0x1ABE164
	public static float[] GetBlurFactors(int sampleRange, float sigma) { }
}

// Namespace: 
private class ScriptActionRenderEffectController.EffectParamBase // TypeDefIndex: 8411
{
	// Methods

	// RVA: 0x1ABEA00 Offset: 0x1ABEA00 VA: 0x1ABEA00
	public void .ctor() { }

	// RVA: 0x1ABEB94 Offset: 0x1ABEB94 VA: 0x1ABEB94
	protected static int GetSampleRange(Material material) { }

	// RVA: 0x1ABEA08 Offset: 0x1ABEA08 VA: 0x1ABEA08
	protected static float GetFloatProperty(Material material, string key) { }

	// RVA: 0x1ABEB20 Offset: 0x1ABEB20 VA: 0x1ABEB20
	protected static void SetFloatProperty(Material material, string key, float value) { }

	// RVA: 0x1ABE080 Offset: 0x1ABE080 VA: 0x1ABE080
	public static void SetFloatArrayProperty(Material material, string key, float[] values) { }

	// RVA: 0x1ABDBC8 Offset: 0x1ABDBC8 VA: 0x1ABDBC8
	public static void SetSampleRange(Material material, int sampleRange) { }

	// RVA: 0x1ABEC00 Offset: 0x1ABEC00 VA: 0x1ABEC00
	public static string GetSampleRangeKeyword(int sampleRange) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF350 Offset: 0xCAF350 VA: 0xCAF350
private sealed class ScriptActionRenderEffectController.<StartDistortion>c__AnonStorey0 // TypeDefIndex: 8412
{
	// Fields
	internal int count; // 0x10
	internal ScriptActionRenderEffectController.DistortionParam srcParam; // 0x18
	internal ScriptActionRenderEffectController.DistortionParam destParam; // 0x20
	internal ScriptActionRenderEffectController $this; // 0x28

	// Methods

	// RVA: 0x1ABCB4C Offset: 0x1ABCB4C VA: 0x1ABCB4C
	public void .ctor() { }

	// RVA: 0x1ABE400 Offset: 0x1ABE400 VA: 0x1ABE400
	internal void <>m__0(float rate) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF360 Offset: 0xCAF360 VA: 0xCAF360
private sealed class ScriptActionRenderEffectController.<StopDistortion>c__AnonStorey1 // TypeDefIndex: 8413
{
	// Fields
	internal ScriptActionRenderEffectController.DistortionParam srcParam; // 0x10
	internal ScriptActionRenderEffectController.DistortionParam destParam; // 0x18
	internal ScriptActionRenderEffectController $this; // 0x20

	// Methods

	// RVA: 0x1ABCEDC Offset: 0x1ABCEDC VA: 0x1ABCEDC
	public void .ctor() { }

	// RVA: 0x1ABE91C Offset: 0x1ABE91C VA: 0x1ABE91C
	internal void <>m__0(float rate) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF370 Offset: 0xCAF370 VA: 0xCAF370
private sealed class ScriptActionRenderEffectController.<StartGaussianBlur>c__AnonStorey2 // TypeDefIndex: 8414
{
	// Fields
	internal ScriptActionRenderEffectController.GaussianBlurParam srcParam; // 0x10
	internal ScriptActionRenderEffectController.GaussianBlurParam destParam; // 0x18
	internal ScriptActionRenderEffectController $this; // 0x20

	// Methods

	// RVA: 0x1ABD14C Offset: 0x1ABD14C VA: 0x1ABD14C
	public void .ctor() { }

	// RVA: 0x1ABE634 Offset: 0x1ABE634 VA: 0x1ABE634
	internal void <>m__0(float rate) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF380 Offset: 0xCAF380 VA: 0xCAF380
private sealed class ScriptActionRenderEffectController.<StopGaussianBlur>c__AnonStorey3 // TypeDefIndex: 8415
{
	// Fields
	internal ScriptActionRenderEffectController.GaussianBlurParam srcParam; // 0x10
	internal ScriptActionRenderEffectController.GaussianBlurParam destParam; // 0x18
	internal ScriptActionRenderEffectController $this; // 0x20

	// Methods

	// RVA: 0x1ABD3E4 Offset: 0x1ABD3E4 VA: 0x1ABD3E4
	public void .ctor() { }

	// RVA: 0x1ABE960 Offset: 0x1ABE960 VA: 0x1ABE960
	internal void <>m__0(float rate) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF390 Offset: 0xCAF390 VA: 0xCAF390
private sealed class ScriptActionRenderEffectController.<StartMotionBlur>c__AnonStorey4 // TypeDefIndex: 8416
{
	// Fields
	internal ScriptActionRenderEffectController.MotionBlurParam srcParam; // 0x10
	internal ScriptActionRenderEffectController.MotionBlurParam destParam; // 0x18
	internal ScriptActionRenderEffectController $this; // 0x20

	// Methods

	// RVA: 0x1ABD60C Offset: 0x1ABD60C VA: 0x1ABD60C
	public void .ctor() { }

	// RVA: 0x1ABE754 Offset: 0x1ABE754 VA: 0x1ABE754
	internal void <>m__0(float rate) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAF3A0 Offset: 0xCAF3A0 VA: 0xCAF3A0
private sealed class ScriptActionRenderEffectController.<StopMotionBlur>c__AnonStorey5 // TypeDefIndex: 8417
{
	// Fields
	internal ScriptActionRenderEffectController.MotionBlurParam srcParam; // 0x10
	internal ScriptActionRenderEffectController.MotionBlurParam destPram; // 0x18
	internal ScriptActionRenderEffectController $this; // 0x20

	// Methods

	// RVA: 0x1ABD9FC Offset: 0x1ABD9FC VA: 0x1ABD9FC
	public void .ctor() { }

	// RVA: 0x1ABE9A4 Offset: 0x1ABE9A4 VA: 0x1ABE9A4
	internal void <>m__0(float rate) { }
}

// Namespace: 
public class ScriptActionSetRenderTextureComponent : MonoBehaviour // TypeDefIndex: 8418
{
	// Fields
	[SerializeField] // RVA: 0xCCB1D8 Offset: 0xCCB1D8 VA: 0xCCB1D8
	[TooltipAttribute] // RVA: 0xCCB1D8 Offset: 0xCCB1D8 VA: 0xCCB1D8
	private ScriptActionSetRenderTextureComponent.RenderTextureType textureType; // 0x18
	[SerializeField] // RVA: 0xCCB224 Offset: 0xCCB224 VA: 0xCCB224
	[TooltipAttribute] // RVA: 0xCCB224 Offset: 0xCCB224 VA: 0xCCB224
	private GameObject[] TargetObjects; // 0x20
	private const float ScriptActionRenderWidth = 1344;
	private const float ScriptActionRenderHeight = 576;
	private static readonly Vector2 mainTextureScale; // 0x0
	private static readonly Vector2 mainTextureOffset; // 0x8

	// Methods

	// RVA: 0x1ABEDC0 Offset: 0x1ABEDC0 VA: 0x1ABEDC0
	public void .ctor() { }

	// RVA: 0x1ABEDC8 Offset: 0x1ABEDC8 VA: 0x1ABEDC8
	private void Start() { }

	// RVA: 0x1ABF0A4 Offset: 0x1ABF0A4 VA: 0x1ABF0A4
	private static void .cctor() { }
}

// Namespace: 
public enum ScriptActionSetRenderTextureComponent.RenderTextureType // TypeDefIndex: 8419
{
	// Fields
	public int value__; // 0x0
	public const ScriptActionSetRenderTextureComponent.RenderTextureType RenderTarget = 0;
	public const ScriptActionSetRenderTextureComponent.RenderTextureType Capture = 1;
}

// Namespace: 
public class ScriptBackLog : BaseMonoBehaviour // TypeDefIndex: 8420
{
	// Fields
	[SerializeField] // RVA: 0xCCB270 Offset: 0xCCB270 VA: 0xCCB270
	protected GameObject rootObject; // 0x18
	[SerializeField] // RVA: 0xCCB280 Offset: 0xCCB280 VA: 0xCCB280
	protected ScriptBackLogListViewManager listViewManager; // 0x20
	protected ScriptBackLog.ClickDelegate clickFunc; // 0x28
	protected List<ScriptMessageLabel> logData; // 0x30
	protected float maxRangeY; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xCCB290 Offset: 0xCCB290 VA: 0xCCB290
	[DebuggerBrowsableAttribute] // RVA: 0xCCB290 Offset: 0xCCB290 VA: 0xCCB290
	private string <ReplayingAssetName>k__BackingField; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xCCB2CC Offset: 0xCCB2CC VA: 0xCCB2CC
	[DebuggerBrowsableAttribute] // RVA: 0xCCB2CC Offset: 0xCCB2CC VA: 0xCCB2CC
	private string <ReplayingObjectName>k__BackingField; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xCCB308 Offset: 0xCCB308 VA: 0xCCB308
	[DebuggerBrowsableAttribute] // RVA: 0xCCB308 Offset: 0xCCB308 VA: 0xCCB308
	private bool <IsReplayingVoice>k__BackingField; // 0x50

	// Properties
	public string ReplayingAssetName { get; set; }
	public string ReplayingObjectName { get; set; }
	public bool IsReplayingVoice { get; set; }

	// Methods

	// RVA: 0x1AC1C5C Offset: 0x1AC1C5C VA: 0x1AC1C5C
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD38D74 Offset: 0xD38D74 VA: 0xD38D74
	// RVA: 0x1AC1CCC Offset: 0x1AC1CCC VA: 0x1AC1CCC
	public string get_ReplayingAssetName() { }

	[CompilerGeneratedAttribute] // RVA: 0xD38D84 Offset: 0xD38D84 VA: 0xD38D84
	// RVA: 0x1AC1CD4 Offset: 0x1AC1CD4 VA: 0x1AC1CD4
	public void set_ReplayingAssetName(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD38D94 Offset: 0xD38D94 VA: 0xD38D94
	// RVA: 0x1AC1CDC Offset: 0x1AC1CDC VA: 0x1AC1CDC
	public string get_ReplayingObjectName() { }

	[CompilerGeneratedAttribute] // RVA: 0xD38DA4 Offset: 0xD38DA4 VA: 0xD38DA4
	// RVA: 0x1AC1CE4 Offset: 0x1AC1CE4 VA: 0x1AC1CE4
	public void set_ReplayingObjectName(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD38DB4 Offset: 0xD38DB4 VA: 0xD38DB4
	// RVA: 0x1AC1CEC Offset: 0x1AC1CEC VA: 0x1AC1CEC
	public bool get_IsReplayingVoice() { }

	[CompilerGeneratedAttribute] // RVA: 0xD38DC4 Offset: 0xD38DC4 VA: 0xD38DC4
	// RVA: 0x1AC1CF4 Offset: 0x1AC1CF4 VA: 0x1AC1CF4
	public void set_IsReplayingVoice(bool value) { }

	// RVA: 0x1AC1D00 Offset: 0x1AC1D00 VA: 0x1AC1D00
	public bool IsOpen() { }

	// RVA: 0x1AC1D30 Offset: 0x1AC1D30 VA: 0x1AC1D30
	public void Open(ScriptBackLog.ClickDelegate func) { }

	// RVA: 0x1AC2090 Offset: 0x1AC2090 VA: 0x1AC2090
	public void Open() { }

	// RVA: 0x1AC2098 Offset: 0x1AC2098 VA: 0x1AC2098
	public void Close() { }

	// RVA: 0x1AC2154 Offset: 0x1AC2154 VA: 0x1AC2154
	public bool IsEmptyLog() { }

	// RVA: 0x1AC21C0 Offset: 0x1AC21C0 VA: 0x1AC21C0
	public void ClearLog() { }

	// RVA: 0x1AC2228 Offset: 0x1AC2228 VA: 0x1AC2228
	public void AddLog(ScriptMessageLabel label) { }

	// RVA: 0x1AC22C4 Offset: 0x1AC22C4 VA: 0x1AC22C4
	public void OnClickEnd(int index) { }

	// RVA: 0x1AC24D8 Offset: 0x1AC24D8 VA: 0x1AC24D8
	public void StopAllPlayVoiceAnimation() { }
}

// Namespace: 
public sealed class ScriptBackLog.ClickDelegate : MulticastDelegate // TypeDefIndex: 8421
{
	// Methods

	// RVA: 0x1AC268C Offset: 0x1AC268C VA: 0x1AC268C
	public void .ctor(object object, IntPtr method) { }

