
	// RVA: 0x2203E8C Offset: 0x2203E8C VA: 0x2203E8C Slot: 5
	protected sealed override long CreatePrimaryKey() { }

	// RVA: 0x2203F18 Offset: 0x2203F18 VA: 0x2203F18
	public bool get_IsRandomChoice() { }

	// RVA: 0x2204048 Offset: 0x2204048 VA: 0x2204048
	private int GetLimitCountWithRandom(UserServantEntity.RandomLimitCountKind kind, bool ignoreRandomSettings = False) { }

	// RVA: 0x22041D8 Offset: 0x22041D8 VA: 0x22041D8
	public long getUserId() { }

	// RVA: 0x2204264 Offset: 0x2204264 VA: 0x2204264
	public int getSvtId() { }

	// RVA: 0x22042D4 Offset: 0x22042D4 VA: 0x22042D4
	public int getLimitCount() { }

	// RVA: 0x2204344 Offset: 0x2204344 VA: 0x2204344
	public int getSkillLevel(int iIdx) { }

	// RVA: 0x2204378 Offset: 0x2204378 VA: 0x2204378
	public int[] getSkillLevelList() { }

	// RVA: 0x2204474 Offset: 0x2204474 VA: 0x2204474
	public int getTreasureDeviceLv() { }

	// RVA: 0x220447C Offset: 0x220447C VA: 0x220447C
	public int[] getSkillIdList(int dispLimitCount = -1, int specificLimitCount = -1, bool useUserSvtId = True) { }

	// RVA: 0x22047DC Offset: 0x22047DC VA: 0x22047DC
	public void getSkillInfo(out SkillInfo[] skillInfoList, int beforeClearQuestId = -1, int dispLimitCount = -1, bool useUserSvtId = True, bool finishEvent = False) { }

	// RVA: 0x2204D8C Offset: 0x2204D8C VA: 0x2204D8C
	public void getEquipSkillInfo(out SkillInfo[] skillInfoList, bool useUserSvtId = True) { }

	// RVA: 0x22051C8 Offset: 0x22051C8 VA: 0x22051C8
	public void getNextUseSkillInfo(out int[] idList, out string[] skillNameList, int targetLv, int targetLimitCnt, bool useUserSvtId = True) { }

	// RVA: 0x2205600 Offset: 0x2205600 VA: 0x2205600
	public void getPassiveSkillInfo(out int[] idList, out string[] titleList, out string[] explanationList, int dispLimitCount = -1) { }

	// RVA: 0x2205888 Offset: 0x2205888 VA: 0x2205888
	public SvtUseSkillData getAppendSkillInfo() { }

	// RVA: 0x2205D70 Offset: 0x2205D70 VA: 0x2205D70
	public int getFriendPointUpVal(long[] equipIds) { }

	// RVA: 0x22061E8 Offset: 0x22061E8 VA: 0x22061E8
	public FuncList.TYPE getFriendPointUpType(long[] equipIds) { }

	// RVA: 0x2205E9C Offset: 0x2205E9C VA: 0x2205E9C
	protected int getBaseFriendPointUpVal() { }

	// RVA: 0x2206344 Offset: 0x2206344 VA: 0x2206344
	protected FuncList.TYPE getBaseFriendPointUpType() { }

	// RVA: 0x2206738 Offset: 0x2206738 VA: 0x2206738
	public bool getEventUpVal(EventUpValSetupInfo setupInfo) { }

	// RVA: 0x2206BA8 Offset: 0x2206BA8 VA: 0x2206BA8
	public bool getEventUpVal(EventUpValSetupInfo setupInfo, int eventId) { }

	// RVA: 0x2206C90 Offset: 0x2206C90 VA: 0x2206C90
	public bool getEventUpVal(int wearersSvtId, int wearesLimitCount, int wearesDispLimitCount, EventUpValSetupInfo setupInfo) { }

	// RVA: 0x2206D10 Offset: 0x2206D10 VA: 0x2206D10
	public bool getEventUpVal(int wearersSvtId, int wearesLimitCount, int wearesDispLimitCount, EventUpValSetupInfo setupInfo, int eventId, bool finishEvent = False) { }

	// RVA: 0x2206D24 Offset: 0x2206D24 VA: 0x2206D24
	public bool getEventUpVal(EventUpValSetupInfo setupInfo, long[] equipIds) { }

	// RVA: 0x2206F5C Offset: 0x2206F5C VA: 0x2206F5C
	public bool getEventUpVal(EventUpValSetupInfo setupInfo, UserServantEntity[] equipServentEntityList) { }

	// RVA: 0x2207158 Offset: 0x2207158 VA: 0x2207158
	public bool[] getEventUpValList(EventUpValSetupInfo setupInfo) { }

	// RVA: 0x2207330 Offset: 0x2207330 VA: 0x2207330
	public bool[] getEventUpValList(int wearersSvtId, int wearesLimitCount, int wearesDispLimitCount, EventUpValSetupInfo setupInfo) { }

	// RVA: 0x220682C Offset: 0x220682C VA: 0x220682C
	protected bool getBaseEventUpVal(int wearersSvtId, int wearesLimitCount, int wearesDispLimitCount, EventUpValSetupInfo setupInfo, int baseEventId, bool finishEvent = False) { }

	// RVA: 0x22074B4 Offset: 0x22074B4 VA: 0x22074B4
	public bool getEventUpVal(out EventUpValInfo eventUpVallInfo, EventUpValSetupInfo setupInfo, long[] equipIds) { }

	// RVA: 0x22076F0 Offset: 0x22076F0 VA: 0x22076F0
	protected bool getBaseEventUpVal(ref EventUpValInfo eventUpVallInfo) { }

	// RVA: 0x2207A44 Offset: 0x2207A44 VA: 0x2207A44
	public bool GetBonusUpVal(out EventUpValInfo eventUpVallInfo, EventUpValSetupInfo setupInfo, long[] equipIds, int questId, int questPhase) { }

	// RVA: 0x2207CE4 Offset: 0x2207CE4 VA: 0x2207CE4
	private bool GetBaseBonusUpVal(ref EventUpValInfo eventUpVallInfo, QuestPhaseEntity questPhaseEntity) { }

	// RVA: 0x220802C Offset: 0x220802C VA: 0x220802C
	public bool getQuestRestriction(QuestRestrictionInfo questRestrictionInfo) { }

	// RVA: 0x2208100 Offset: 0x2208100 VA: 0x2208100
	public bool getUniqueSvtRestriction(QuestRestrictionInfo questRestrictionInfo) { }

	// RVA: 0x22081A4 Offset: 0x22081A4 VA: 0x22081A4
	public bool getUniqueSvtRestriction(QuestRestrictionInfo questRestrictionInfo, PartyListViewItem partyItem, int num, int partyIndex = -1) { }

	// RVA: 0x220826C Offset: 0x220826C VA: 0x220826C
	public bool getTreasureDeviceInfo(out TreasureDvcInfo tdInfo, int beforeClearQuestId = -1, int dispLimitCount = -1) { }

	// RVA: 0x22088B4 Offset: 0x22088B4 VA: 0x22088B4
	public bool getTreasureDeviceInfo(out int tdLv, out int tdMaxLv) { }

	// RVA: 0x2208BD0 Offset: 0x2208BD0 VA: 0x2208BD0
	public int getTreasureDeviceLevelIcon() { }

	// RVA: 0x2208C2C Offset: 0x2208C2C VA: 0x2208C2C
	public int getServantLevel() { }

	// RVA: 0x2208C34 Offset: 0x2208C34 VA: 0x2208C34
	public int getServantExp() { }

	// RVA: 0x2208C3C Offset: 0x2208C3C VA: 0x2208C3C
	public bool checkID(long inId) { }

	// RVA: 0x2208CDC Offset: 0x2208CDC VA: 0x2208CDC
	public int getSellQp() { }

	// RVA: 0x2208F64 Offset: 0x2208F64 VA: 0x2208F64
	public int getSellMana() { }

	// RVA: 0x2209064 Offset: 0x2209064 VA: 0x2209064
	public int getSellRarePri() { }

	// RVA: 0x2208DDC Offset: 0x2208DDC VA: 0x2208DDC
	private int getMagnification(ServantEntity svtEntity) { }

	// RVA: 0x2209164 Offset: 0x2209164 VA: 0x2209164
	public int getCollectionNo() { }

	// RVA: 0x220876C Offset: 0x220876C VA: 0x220876C
	public int getFriendshipRank() { }

	// RVA: 0x220924C Offset: 0x220924C VA: 0x220924C
	public bool getExpInfo(out int exp, out int lateExp, out float barExp) { }

	// RVA: 0x2209620 Offset: 0x2209620 VA: 0x2209620
	public int getSvtClassId() { }

	// RVA: 0x2209708 Offset: 0x2209708 VA: 0x2209708
	public bool IsCombineMaterial() { }

	// RVA: 0x22097F4 Offset: 0x22097F4 VA: 0x22097F4
	public int getSvtClassGroupType(int classId) { }

	// RVA: 0x220989C Offset: 0x220989C VA: 0x220989C
	public int getCombineQp() { }

	// RVA: 0x22094A0 Offset: 0x22094A0 VA: 0x22094A0
	public int getLevelMax() { }

	// RVA: 0x2209A20 Offset: 0x2209A20 VA: 0x2209A20
	public bool isLevelMax() { }

	// RVA: 0x2209A4C Offset: 0x2209A4C VA: 0x2209A4C
	public int getLimitCntMax() { }

	// RVA: 0x2209B3C Offset: 0x2209B3C VA: 0x2209B3C
	public bool isLimitCountMax() { }

	// RVA: 0x2209BD0 Offset: 0x2209BD0 VA: 0x2209BD0
	public bool HasStatus(UserServantEntity.StatusFlag statusFlag) { }

	// RVA: 0x2209BE0 Offset: 0x2209BE0 VA: 0x2209BE0
	public bool IsLock() { }

	// RVA: 0x2209BEC Offset: 0x2209BEC VA: 0x2209BEC
	public bool IsModifyLock(bool isLock) { }

	// RVA: 0x2209BFC Offset: 0x2209BFC VA: 0x2209BFC
	public bool IsChoice() { }

	// RVA: 0x2209C08 Offset: 0x2209C08 VA: 0x2209C08
	public bool IsModifyChoice(bool isChoice) { }

	// RVA: 0x2209C18 Offset: 0x2209C18 VA: 0x2209C18
	public bool IsAddFriendShipHeroine() { }

	// RVA: 0x2209D40 Offset: 0x2209D40 VA: 0x2209D40
	public bool IsNew() { }

	// RVA: 0x2209F98 Offset: 0x2209F98 VA: 0x2209F98
	public void SetOld() { }

	// RVA: 0x220A1C4 Offset: 0x220A1C4 VA: 0x220A1C4
	public bool IsWithdrawal() { }

	// RVA: 0x220A1D0 Offset: 0x220A1D0 VA: 0x220A1D0
	public bool IsEventJoin() { }

	// RVA: 0x220A1DC Offset: 0x220A1DC VA: 0x220A1DC
	public bool IsNoPeriod() { }

	// RVA: 0x220A1E8 Offset: 0x220A1E8 VA: 0x220A1E8
	public bool IsCondJoin() { }

	// RVA: 0x220A1F4 Offset: 0x220A1F4 VA: 0x220A1F4
	public bool IsLeave() { }

	// RVA: 0x220A278 Offset: 0x220A278 VA: 0x220A278
	public bool IsProtectedEventServant() { }

	// RVA: 0x220A2C4 Offset: 0x220A2C4 VA: 0x220A2C4
	public EventServantEntity getEventServant() { }

	// RVA: 0x220A468 Offset: 0x220A468 VA: 0x220A468
	public EventServantEntity getEventServant(bool is_finishedAt) { }

	// RVA: 0x2209C4C Offset: 0x2209C4C VA: 0x2209C4C
	public bool IsHeroine() { }

	// RVA: 0x220A540 Offset: 0x220A540 VA: 0x220A540
	public int getCombineQpSvtEq() { }

	// RVA: 0x220A6C4 Offset: 0x220A6C4 VA: 0x220A6C4
	public ServantSkillEntity[] getUseSvtEqSkillInfo(int targetLv, int targetLimitCnt) { }

	// RVA: 0x220A9D0 Offset: 0x220A9D0 VA: 0x220A9D0
	public bool GetAdjustMax(out int maxAjustHp, out int maxAjustAtk, out int secondMaxAdjustHp, out int secondMaxAdjustAtk) { }

	// RVA: 0x220AC9C Offset: 0x220AC9C VA: 0x220AC9C
	public int getAdjustHp() { }

	// RVA: 0x220ACA4 Offset: 0x220ACA4 VA: 0x220ACA4
	public bool isAdjustHpMax() { }

	// RVA: 0x220AD70 Offset: 0x220AD70 VA: 0x220AD70
	public bool isSecondAdjustHpMax() { }

	// RVA: 0x220AE3C Offset: 0x220AE3C VA: 0x220AE3C
	public int getAdjustAtk() { }

	// RVA: 0x220AE44 Offset: 0x220AE44 VA: 0x220AE44
	public bool isAdjustAtkMax() { }

	// RVA: 0x220AF10 Offset: 0x220AF10 VA: 0x220AF10
	public bool isSecondAdjustAtkMax() { }

	// RVA: 0x220AFDC Offset: 0x220AFDC VA: 0x220AFDC
	public void getAdjustMaxData(out int hpData, out int atkData) { }

	// RVA: 0x220AB94 Offset: 0x220AB94 VA: 0x220AB94
	public int getRarity() { }

	// RVA: 0x220B1A0 Offset: 0x220B1A0 VA: 0x220B1A0
	public bool IsCombineExp() { }

	// RVA: 0x220B294 Offset: 0x220B294 VA: 0x220B294
	public bool IsStatusUp() { }

	// RVA: 0x220B388 Offset: 0x220B388 VA: 0x220B388
	public int getCost() { }

	// RVA: 0x2204794 Offset: 0x2204794 VA: 0x2204794
	public int getDispLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x220B478 Offset: 0x220B478 VA: 0x220B478
	public int getMaxDispLimitCount() { }

	// RVA: 0x220B53C Offset: 0x220B53C VA: 0x220B53C
	public bool IsModifyDispLimitCount(int dispLimitCount, bool ignoreRandomSettings = False) { }

	// RVA: 0x220B568 Offset: 0x220B568 VA: 0x220B568
	public int getDispSelectLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x220B668 Offset: 0x220B668 VA: 0x220B668
	public int getCommandCardLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x220B6B0 Offset: 0x220B6B0 VA: 0x220B6B0
	public int getMaxCommandCardLimitCount() { }

	// RVA: 0x220B774 Offset: 0x220B774 VA: 0x220B774
	public bool IsModifyCommandCardLimitCount(int commandCardLimitCount, bool ignoreRandomSettings = False) { }

	// RVA: 0x220B7A0 Offset: 0x220B7A0 VA: 0x220B7A0
	public int getCardImageLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x220B8A0 Offset: 0x220B8A0 VA: 0x220B8A0
	public int getMaxCardImageLimitCount() { }

	// RVA: 0x220B96C Offset: 0x220B96C VA: 0x220B96C
	public int getFigureImageLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x220BA70 Offset: 0x220BA70 VA: 0x220BA70
	public int getCombineVoiceLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x220BABC Offset: 0x220BABC VA: 0x220BABC
	public int getFigureLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x220BBD4 Offset: 0x220BBD4 VA: 0x220BBD4
	public int getIconLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x220BCE8 Offset: 0x220BCE8 VA: 0x220BCE8
	public int getFriendIconLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x220BC1C Offset: 0x220BC1C VA: 0x220BC1C
	public int getMaxIconLimitCount() { }

	// RVA: 0x220BD30 Offset: 0x220BD30 VA: 0x220BD30
	public int getMaxFriendIconLimitCount() { }

	// RVA: 0x220BDFC Offset: 0x220BDFC VA: 0x220BDFC
	public bool IsModifyIconLimitCount(int iconLimitCount, bool ignoreRandomSettings = False) { }

	// RVA: 0x220BE28 Offset: 0x220BE28 VA: 0x220BE28
	public int getPortraitLimitCount(bool ignoreRandomSettings = False) { }

	// RVA: 0x220BE70 Offset: 0x220BE70 VA: 0x220BE70
	public int getMaxPortraitLimitCount() { }

	// RVA: 0x220BF34 Offset: 0x220BF34 VA: 0x220BF34
	public bool IsModifyPortraitLimitCount(int portraitLimitCount, bool ignoreRandomSettings = False) { }

	// RVA: 0x220BF60 Offset: 0x220BF60 VA: 0x220BF60
	public int checkTreasureDeviceLevelUp(int targetLv) { }

	// RVA: 0x220BFA4 Offset: 0x220BFA4 VA: 0x220BFA4
	public bool IsExceedMaxLv(int targetLv) { }

	// RVA: 0x220BFE8 Offset: 0x220BFE8 VA: 0x220BFE8
	public void getStatusUpInfo(out int hpUp, out int atkUp) { }

	// RVA: 0x220C120 Offset: 0x220C120 VA: 0x220C120
	public int getExceedLvMax(int cnt) { }

	// RVA: 0x220C2B4 Offset: 0x220C2B4 VA: 0x220C2B4
	public bool isExceedLvMax() { }

	// RVA: 0x220C36C Offset: 0x220C36C VA: 0x220C36C
	public bool isExceedFriendshipMax() { }

	// RVA: 0x220C610 Offset: 0x220C610 VA: 0x220C610
	public int getCombineQpSvtExceed() { }

	// RVA: 0x220C63C Offset: 0x220C63C VA: 0x220C63C
	public ServantExceedEntity getSvtExceedEnt() { }

	// RVA: 0x220C6F0 Offset: 0x220C6F0 VA: 0x220C6F0
	public int getFrameType() { }

	// RVA: 0x220C858 Offset: 0x220C858 VA: 0x220C858
	public int getRarityIcon() { }

	// RVA: 0x220C97C Offset: 0x220C97C VA: 0x220C97C
	public bool isExceeded() { }

	// RVA: 0x220C98C Offset: 0x220C98C VA: 0x220C98C
	public string getFrameCardPrefix() { }

	// RVA: 0x220CB04 Offset: 0x220CB04 VA: 0x220CB04
	public int getAddTotalExp(int materialId) { }

	// RVA: 0x220CBC0 Offset: 0x220CBC0 VA: 0x220CBC0
	public int[] getCommandCodeIdList() { }

	// RVA: 0x220CCE8 Offset: 0x220CCE8 VA: 0x220CCE8
	public UserCommandCodeEntity getUserCommandCodeEntity(int index) { }

	// RVA: 0x220CEB8 Offset: 0x220CEB8 VA: 0x220CEB8
	public UserServantCommandCardEntity GetUserCommandCardEntity() { }

	// RVA: 0x220D058 Offset: 0x220D058 VA: 0x220D058
	public int[] GetCommandCardParam() { }

	// RVA: 0x220D074 Offset: 0x220D074 VA: 0x220D074
	public bool IsModifyBattleVoice(int battleVoice) { }

	// RVA: 0x220D0FC Offset: 0x220D0FC VA: 0x220D0FC
	public int[] GetEquipCategoryIdList() { }

	// RVA: 0x220D834 Offset: 0x220D834 VA: 0x220D834
	public bool IsFriendShipSvtEquip() { }

	// RVA: 0x220D920 Offset: 0x220D920 VA: 0x220D920
	public bool IsIgnoreCombineLimitSpecial() { }

	// RVA: 0x220DA0C Offset: 0x220DA0C VA: 0x220DA0C
	public bool IsChocolateSvtEquip() { }

	// RVA: 0x2203FCC Offset: 0x2203FCC VA: 0x2203FCC
	public bool IsEnableOwnRandomLimitCount() { }

	// RVA: 0x220DAF8 Offset: 0x220DAF8 VA: 0x220DAF8
	public bool IsEnableSupportRandomLimitCount() { }

	// RVA: 0x220DB74 Offset: 0x220DB74 VA: 0x220DB74
	public bool IsSetRandomLimitCountValue() { }

	// RVA: 0x220DBF0 Offset: 0x220DBF0 VA: 0x220DBF0
	public bool IsModifyRandomLimitCountSetting(bool ownSetting, bool friendFollowSetting) { }

	// RVA: 0x220DC40 Offset: 0x220DC40 VA: 0x220DC40
	public int[] GetRandomLimitCountList(int[] costumeIds) { }

	// RVA: 0x220DE24 Offset: 0x220DE24 VA: 0x220DE24
	public bool IsExchangeSvt() { }

	// RVA: 0x220E070 Offset: 0x220E070 VA: 0x220E070
	public void GetAppendPassiveSkillInfo(out int[] idList, out string[] titleList, out string[] explanationList, out bool[] releaseStateList, out int[] lvList) { }

	// RVA: 0x220E1FC Offset: 0x220E1FC VA: 0x220E1FC
	public void GetAppendPassiveSkillInfo(out SkillInfo[] skillInfoList) { }

	// RVA: 0x220E3FC Offset: 0x220E3FC VA: 0x220E3FC
	public bool IsMaterialTd() { }

	// RVA: 0x220E4EC Offset: 0x220E4EC VA: 0x220E4EC
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD380EC Offset: 0xD380EC VA: 0xD380EC
	// RVA: 0x220E4F0 Offset: 0x220E4F0 VA: 0x220E4F0
	private static int <getBaseFriendPointUpVal>m__0(ServantSkillEntity a, ServantSkillEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD380FC Offset: 0xD380FC VA: 0xD380FC
	// RVA: 0x220E534 Offset: 0x220E534 VA: 0x220E534
	private static int <getBaseFriendPointUpType>m__1(ServantSkillEntity a, ServantSkillEntity b) { }
}

// Namespace: 
public enum UserServantEntity.StatusKind // TypeDefIndex: 7484
{
	// Fields
	public int value__; // 0x0
	public const UserServantEntity.StatusKind LOCK = 0;
	public const UserServantEntity.StatusKind EVENT_JOIN = 1;
	public const UserServantEntity.StatusKind WITHDRAWAL = 2;
	public const UserServantEntity.StatusKind APRIL_FOOL_CANCEL = 3;
	public const UserServantEntity.StatusKind CHOICE = 4;
	public const UserServantEntity.StatusKind NO_PERIOD = 5;
	public const UserServantEntity.StatusKind COND_JOIN = 6;
	public const UserServantEntity.StatusKind ADD_FRIENDSHIP_HEROINE = 7;
}

// Namespace: 
public enum UserServantEntity.StatusFlag // TypeDefIndex: 7485
{
	// Fields
	public int value__; // 0x0
	public const UserServantEntity.StatusFlag LOCK = 1;
	public const UserServantEntity.StatusFlag EVENT_JOIN = 2;
	public const UserServantEntity.StatusFlag WITHDRAWAL = 4;
	public const UserServantEntity.StatusFlag APRIL_FOOL_CANCEL = 8;
	public const UserServantEntity.StatusFlag CHOICE = 16;
	public const UserServantEntity.StatusFlag NO_PERIOD = 32;
	public const UserServantEntity.StatusFlag COND_JOIN = 64;
	public const UserServantEntity.StatusFlag ADD_FRIENDSHIP_HEROINE = 128;
}

// Namespace: 
private enum UserServantEntity.RandomLimitCountKind // TypeDefIndex: 7486
{
	// Fields
	public int value__; // 0x0
	public const UserServantEntity.RandomLimitCountKind IMAGE_LIMIT_COUNT = 0;
	public const UserServantEntity.RandomLimitCountKind DISP_LIMIT_COUNT = 1;
	public const UserServantEntity.RandomLimitCountKind COMMANDCARD_LIMIT_COUNT = 2;
	public const UserServantEntity.RandomLimitCountKind ICON_LIMIT_COUNT = 3;
	public const UserServantEntity.RandomLimitCountKind PORTRAIT_LIMIT_COUNT = 4;
}

// Namespace: 
public class UserServantLeaderEntity : DataEntityBase<string> // TypeDefIndex: 7487
{
	// Fields
	protected UserServantEntity userServantEntity; // 0x10
	protected ServantLeaderInfo servantLeaderInfo; // 0x18
	public EquipTargetInfo equipTarget1; // 0x20
	public long userId; // 0x28
	public int supportDeckId; // 0x30
	public int classId; // 0x34
	public long userSvtId; // 0x38
	public int svtId; // 0x40

	// Methods

	// RVA: 0x220E578 Offset: 0x220E578 VA: 0x220E578
	public void .ctor() { }

	// RVA: 0x220E5E8 Offset: 0x220E5E8 VA: 0x220E5E8
	public void .ctor(int classPos, int supportDeckId) { }

	// RVA: 0x220E668 Offset: 0x220E668 VA: 0x220E668
	public void .ctor(UserServantLeaderEntity src) { }

	// RVA: 0x220E800 Offset: 0x220E800 VA: 0x220E800 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x220E814 Offset: 0x220E814 VA: 0x220E814
	public static string CreatePK(long userId, int classId, int supportDeckId) { }

	// RVA: 0x220E824 Offset: 0x220E824 VA: 0x220E824
	public long getEquipUserSvtId() { }

	// RVA: 0x220E790 Offset: 0x220E790 VA: 0x220E790
	public void setEquipTargetInfo(EquipTargetInfo equipTargetInfo) { }

	// RVA: 0x220E8C0 Offset: 0x220E8C0 VA: 0x220E8C0
	public void setUserServantEntity(UserServantEntity entity, int classPos, int supportDeckId) { }

	// RVA: 0x220E9D8 Offset: 0x220E9D8 VA: 0x220E9D8
	public void setUserServantEntity(ServantLeaderInfo info) { }

	// RVA: 0x220EAE8 Offset: 0x220EAE8 VA: 0x220EAE8
	public ServantLeaderInfo getServantLeaderInfo() { }

	// RVA: 0x220EAF0 Offset: 0x220EAF0 VA: 0x220EAF0
	public UserServantEntity GetUserServantEntity() { }
}

// Namespace: 
public class UserServantLeaderMaster : DataMasterBase<UserServantLeaderMaster, UserServantLeaderEntity, string> // TypeDefIndex: 7488
{
	// Methods

	// RVA: 0x220EAF8 Offset: 0x220EAF8 VA: 0x220EAF8
	public void .ctor() { }

	// RVA: 0x220EB4C Offset: 0x220EB4C VA: 0x220EB4C
	public UserServantLeaderEntity GetEntity(long userId, int classId, int supportDeckId) { }

	// RVA: 0x220EBD0 Offset: 0x220EBD0 VA: 0x220EBD0
	public bool TryGetEntity(out UserServantLeaderEntity entity, long userId, int classId, int supportDeckId) { }

	// RVA: 0x220EC5C Offset: 0x220EC5C VA: 0x220EC5C
	public UserServantLeaderEntity getEntityFromId(int classId) { }

	// RVA: 0x220ED5C Offset: 0x220ED5C VA: 0x220ED5C
	public UserServantLeaderEntity[] getSupportDeck(int supportDeckId) { }

	// RVA: 0x220F270 Offset: 0x220F270 VA: 0x220F270
	public UserServantLeaderEntity[] getAllSupportDeckList() { }
}

// Namespace: 
public class UserServantMaster : DataMasterBase<UserServantMaster, UserServantEntity, long> // TypeDefIndex: 7489
{
	// Methods

	// RVA: 0x220FE18 Offset: 0x220FE18 VA: 0x220FE18
	public void .ctor() { }

	// RVA: 0x220FCA4 Offset: 0x220FCA4 VA: 0x220FCA4
	public UserServantEntity getEntityFromId(long userSvtId) { }

	// RVA: 0x220FE6C Offset: 0x220FE6C VA: 0x220FE6C
	public bool TryGetEntityFromSvtId(out UserServantEntity svtEnt, long svtId) { }

	// RVA: 0x220FFCC Offset: 0x220FFCC VA: 0x220FFCC
	public int getCount(out int servantSum, out int servantEquipSum, bool friendShipSvtEqExclude = False) { }

	// RVA: 0x2210280 Offset: 0x2210280 VA: 0x2210280
	public int getCountWithoutMaterial(out int servantSum, out int servantEquipSum) { }

	// RVA: 0x220FF5C Offset: 0x220FF5C VA: 0x220FF5C
	public UserServantEntity[] getList() { }

	// RVA: 0x2210514 Offset: 0x2210514 VA: 0x2210514
	public UserServantEntity[] getList(long userId) { }

	// RVA: 0x22106E4 Offset: 0x22106E4 VA: 0x22106E4
	public List<UserServantEntity> getServantList() { }

	// RVA: 0x2210A4C Offset: 0x2210A4C VA: 0x2210A4C
	public List<UserServantEntity> getServantListByClassIdList(List<int> classIdList) { }

	// RVA: 0x2210DF4 Offset: 0x2210DF4 VA: 0x2210DF4
	public UserServantEntity[] getKeepServantList() { }

	// RVA: 0x22110B8 Offset: 0x22110B8 VA: 0x22110B8
	public UserServantEntity[] getOrganizationList() { }

	// RVA: 0x221137C Offset: 0x221137C VA: 0x221137C
	public UserServantEntity[] getKeepServantEquipList() { }

	// RVA: 0x2211640 Offset: 0x2211640 VA: 0x2211640
	public UserServantEntity[] getServantEquipList() { }

	// RVA: 0x2211904 Offset: 0x2211904 VA: 0x2211904
	public int getSameSvtNpLvCache(UserServantEntity usrSvtEnt, ref Dictionary<int, List<int>> cachedUserServantNpLvDict) { }

	// RVA: 0x2211EF0 Offset: 0x2211EF0 VA: 0x2211EF0
	public UserServantEntity[] getNpUpServantList(UserServantEntity usrSvtEnt) { }

	// RVA: 0x221230C Offset: 0x221230C VA: 0x221230C
	public bool IsServantHaving(int svtId, bool checkPresentBox = True) { }

	// RVA: 0x221232C Offset: 0x221232C VA: 0x221232C
	public int GetServantHavingCount(int servantId, bool isCheckPresentBox = True) { }

	// RVA: 0x2212624 Offset: 0x2212624 VA: 0x2212624
	public int GetServantHavingTdLvCount(int servantId) { }

	// RVA: 0x22127F8 Offset: 0x22127F8 VA: 0x22127F8
	public UserServantEntity getHeroineData(int heroineId) { }

	// RVA: 0x2212950 Offset: 0x2212950 VA: 0x2212950
	public UserServantEntity[] getNoneCombineSvt(long userId) { }

	// RVA: 0x2212BE4 Offset: 0x2212BE4 VA: 0x2212BE4
	public void continueDeviceUserServant() { }

	// RVA: 0x221308C Offset: 0x221308C VA: 0x221308C
	public UserServantEntity[] getCombineMaterialList() { }

	// RVA: 0x2213364 Offset: 0x2213364 VA: 0x2213364
	public bool CheckServantAdd(int count) { }

	// RVA: 0x22133C8 Offset: 0x22133C8 VA: 0x22133C8
	public bool CheckEquipAdd(int count, bool friendShipSvtEqExclude = False) { }

	// RVA: 0x221342C Offset: 0x221342C VA: 0x221342C
	public bool CheckServantAndEquipAdd(int servantCount, int equipCount) { }

	// RVA: 0x2212504 Offset: 0x2212504 VA: 0x2212504
	public UserServantEntity[] getAllList() { }

	// RVA: 0x2213470 Offset: 0x2213470 VA: 0x2213470
	public List<long> getSvtAllUserIdList(int svtId) { }

	// RVA: 0x2213744 Offset: 0x2213744 VA: 0x2213744
	public UserServantEntity CostumeTargetEntity(int svtId, bool checkStorage = True) { }

	// RVA: 0x2213B30 Offset: 0x2213B30 VA: 0x2213B30
	public UserServantEntity[] GetCombineMaterialList() { }

	// RVA: 0x2213E04 Offset: 0x2213E04 VA: 0x2213E04
	public int GetHaveServantSkillLevelMax(int svtId, int skillIdx) { }

	// RVA: 0x2213FB8 Offset: 0x2213FB8 VA: 0x2213FB8
	public UserServantEntity getSvtIdBattle(int svtId) { }

	// RVA: 0x22141BC Offset: 0x22141BC VA: 0x22141BC
	public bool IsServantHavingLimitMax(int svtId, int condNum) { }

	// RVA: 0x22141E4 Offset: 0x22141E4 VA: 0x22141E4
	public int GetServantHavintLimitMaxCount(int servantId) { }

	// RVA: 0x2214450 Offset: 0x2214450 VA: 0x2214450
	public int GetSvtEquipFriendShip() { }

	// RVA: 0x22146B8 Offset: 0x22146B8 VA: 0x22146B8
	public UserServantEntity[] GetEntities(long[] userServantIds) { }

	// RVA: 0x2214740 Offset: 0x2214740 VA: 0x2214740
	public UserServantEntity[] GetEntities(List<long> userServantIds) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEF30 Offset: 0xCAEF30 VA: 0xCAEF30
private sealed class UserServantMaster.<TryGetEntityFromSvtId>c__AnonStorey0 // TypeDefIndex: 7490
{
	// Fields
	internal long svtId; // 0x10

	// Methods

	// RVA: 0x220FF54 Offset: 0x220FF54 VA: 0x220FF54
	public void .ctor() { }

	// RVA: 0x2214B48 Offset: 0x2214B48 VA: 0x2214B48
	internal bool <>m__0(UserServantEntity ent) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEF40 Offset: 0xCAEF40 VA: 0xCAEF40
private sealed class UserServantMaster.<getSameSvtNpLvCache>c__AnonStorey1 // TypeDefIndex: 7491
{
	// Fields
	internal UserServantEntity e; // 0x10

	// Methods

	// RVA: 0x2211EE8 Offset: 0x2211EE8 VA: 0x2211EE8
	public void .ctor() { }

	// RVA: 0x2214C88 Offset: 0x2214C88 VA: 0x2214C88
	internal bool <>m__0(SvtMaterialTdEntity m) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEF50 Offset: 0xCAEF50 VA: 0xCAEF50
private sealed class UserServantMaster.<getNpUpServantList>c__AnonStorey2 // TypeDefIndex: 7492
{
	// Fields
	internal UserServantEntity e; // 0x10

	// Methods

	// RVA: 0x2212304 Offset: 0x2212304 VA: 0x2212304
	public void .ctor() { }

	// RVA: 0x2214BE0 Offset: 0x2214BE0 VA: 0x2214BE0
	internal bool <>m__0(SvtMaterialTdEntity m) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAEF60 Offset: 0xCAEF60 VA: 0xCAEF60
private sealed class UserServantMaster.<GetHaveServantSkillLevelMax>c__AnonStorey3 // TypeDefIndex: 7493
{
	// Fields
	internal int svtId; // 0x10
	internal int skillIdx; // 0x14

	// Methods

	// RVA: 0x2213FB0 Offset: 0x2213FB0 VA: 0x2213FB0
	public void .ctor() { }

	// RVA: 0x2214A00 Offset: 0x2214A00 VA: 0x2214A00
	internal bool <>m__0(UserServantEntity usrSvt) { }

	// RVA: 0x2214A98 Offset: 0x2214A98 VA: 0x2214A98
	internal int <>m__1(UserServantEntity a, UserServantEntity b) { }
}

// Namespace: 
public class UserServantStorageMaster : DataMasterBase<UserServantStorageMaster, UserServantEntity, long> // TypeDefIndex: 7494
{
	// Methods

	// RVA: 0x1B34074 Offset: 0x1B34074 VA: 0x1B34074
	public void .ctor() { }

	// RVA: 0x1B340C8 Offset: 0x1B340C8 VA: 0x1B340C8
	public UserServantEntity getEntityFromId(long userSvtId) { }

	// RVA: 0x1B341C8 Offset: 0x1B341C8 VA: 0x1B341C8
	public int getCount(out int servantSum, out int servantEquipSum, bool friendShipSvtEqExclude = False) { }

	// RVA: 0x1B34484 Offset: 0x1B34484 VA: 0x1B34484
	public UserServantEntity[] getList() { }

	// RVA: 0x1B344F4 Offset: 0x1B344F4 VA: 0x1B344F4
	public UserServantEntity[] getList(long userId) { }

	// RVA: 0x1B346CC Offset: 0x1B346CC VA: 0x1B346CC
	public UserServantEntity[] getKeepServantList() { }

	// RVA: 0x1B34998 Offset: 0x1B34998 VA: 0x1B34998
	public UserServantEntity[] getKeepServantEquipList() { }

	// RVA: 0x1B34C64 Offset: 0x1B34C64 VA: 0x1B34C64
	public UserServantEntity[] getServantEquipList() { }

	// RVA: 0x1B34F30 Offset: 0x1B34F30 VA: 0x1B34F30
	public void continueDeviceUserServant() { }

	// RVA: 0x1B351A4 Offset: 0x1B351A4 VA: 0x1B351A4
	public UserServantEntity CostumeTargetEntity(int svtId, UserServantEntity defaultTarget) { }

	// RVA: 0x1B35470 Offset: 0x1B35470 VA: 0x1B35470
	public UserServantEntity[] getOrganizationList() { }

	// RVA: 0x1B3573C Offset: 0x1B3573C VA: 0x1B3573C
	public bool isOnList(long userServantId) { }

	// RVA: 0x1B357D0 Offset: 0x1B357D0 VA: 0x1B357D0
	public int GetSvtEquipFriendShip() { }
}

// Namespace: 
public class UserServantVoicePlayedEntity : DataEntityBase<string> // TypeDefIndex: 7495
{
	// Fields
	public ObscuredLong userId; // 0x10
	public int svtId; // 0x30
	public int[] voicePlayed; // 0x38
	private HashSet<int> voicePlayedHash; // 0x40

	// Properties
	public HashSet<int> VoicePlayedHash { get; }

	// Methods

	// RVA: 0x1B35A40 Offset: 0x1B35A40 VA: 0x1B35A40
	public void .ctor() { }

	// RVA: 0x1B35A90 Offset: 0x1B35A90 VA: 0x1B35A90 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1B35B28 Offset: 0x1B35B28 VA: 0x1B35B28
	public static string CreatePK(long userId, int svtId) { }

	// RVA: 0x1B35B34 Offset: 0x1B35B34 VA: 0x1B35B34
	public HashSet<int> get_VoicePlayedHash() { }

	// RVA: 0x1B35B3C Offset: 0x1B35B3C VA: 0x1B35B3C
	public bool IsPlayed(int flagNum) { }

	// RVA: 0x1B35C08 Offset: 0x1B35C08 VA: 0x1B35C08
	public bool SetPlayed(int flagNum) { }
}

// Namespace: 
public class UserServantVoicePlayedMaster : DataMasterBase<UserServantVoicePlayedMaster, UserServantVoicePlayedEntity, string> // TypeDefIndex: 7496
{
	// Methods

	// RVA: 0x1B35CAC Offset: 0x1B35CAC VA: 0x1B35CAC
	public void .ctor() { }

	// RVA: 0x1B35D00 Offset: 0x1B35D00 VA: 0x1B35D00
	public UserServantVoicePlayedEntity GetEntity(long userId, int svtId) { }

	// RVA: 0x1B35D74 Offset: 0x1B35D74 VA: 0x1B35D74
	public bool TryGetEntity(out UserServantVoicePlayedEntity entity, long userId, int svtId) { }
}

// Namespace: 
public class UserShopEntity : DataEntityBase<string> // TypeDefIndex: 7497
{
	// Fields
	public long userId; // 0x10
	public int shopId; // 0x18
	public int num; // 0x1C
	public long flag; // 0x20
	public long updatedAt; // 0x28

	// Properties
	public bool IsReceivedShopItem { get; }
	public bool IsReturnRarePriShop { get; }

	// Methods

	// RVA: 0x1B35DF8 Offset: 0x1B35DF8 VA: 0x1B35DF8
	public void .ctor() { }

	// RVA: 0x1B35E48 Offset: 0x1B35E48 VA: 0x1B35E48
	public void .ctor(long userId, int shopId) { }

	// RVA: 0x1B35EC0 Offset: 0x1B35EC0 VA: 0x1B35EC0 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1B35ED4 Offset: 0x1B35ED4 VA: 0x1B35ED4
	public static string CreatePK(long userId, int shopId) { }

	// RVA: 0x1B35EE0 Offset: 0x1B35EE0 VA: 0x1B35EE0
	public bool get_IsReceivedShopItem() { }

	// RVA: 0x1B35F00 Offset: 0x1B35F00 VA: 0x1B35F00
	public bool get_IsReturnRarePriShop() { }

	// RVA: 0x1B35EEC Offset: 0x1B35EEC VA: 0x1B35EEC
	private bool CheckFlag(UserShopFlag.Flag userShopFlag) { }

	// RVA: 0x1B35F0C Offset: 0x1B35F0C VA: 0x1B35F0C
	public bool CheckFlagKind(UserShopFlag.FlagKind flagKind) { }
}

// Namespace: 
public class UserShopMaster : DataMasterBase<UserShopMaster, UserShopEntity, string> // TypeDefIndex: 7498
{
	// Methods

	// RVA: 0x1B35F34 Offset: 0x1B35F34 VA: 0x1B35F34
	public void .ctor() { }

	// RVA: 0x1B35F88 Offset: 0x1B35F88 VA: 0x1B35F88
	public UserShopEntity GetEntity(long userId, int shopId) { }

	// RVA: 0x1B35FFC Offset: 0x1B35FFC VA: 0x1B35FFC
	public bool TryGetEntity(out UserShopEntity entity, long userId, int shopId) { }

	// RVA: 0x1B36080 Offset: 0x1B36080 VA: 0x1B36080
	public UserShopEntity getEntityFromId(long userId, int shopId) { }

	// RVA: 0x1B3620C Offset: 0x1B3620C VA: 0x1B3620C
	public UserShopEntity getLastPurchaseEntity() { }

	// RVA: 0x1B36410 Offset: 0x1B36410 VA: 0x1B36410
	private int UpdateTimeSort(UserShopEntity x, UserShopEntity y) { }
}

// Namespace: 
public class UserSubEquipEntity : DataEntityBase<long> // TypeDefIndex: 7499
{
	// Fields
	public long id; // 0x10
	public long userId; // 0x18
	public int subEquipId; // 0x20

	// Methods

	// RVA: 0x1B36730 Offset: 0x1B36730 VA: 0x1B36730
	public void .ctor() { }

	// RVA: 0x1B36780 Offset: 0x1B36780 VA: 0x1B36780 Slot: 5
	protected sealed override long CreatePrimaryKey() { }
}

// Namespace: 
public class UserSubEquipMaster : DataMasterBase<UserSubEquipMaster, UserSubEquipEntity, long> // TypeDefIndex: 7500
{
	// Methods

	// RVA: 0x1B36788 Offset: 0x1B36788 VA: 0x1B36788
	public void .ctor() { }
}

// Namespace: 
public class UserSuperBossEntity : DataEntityBase<string> // TypeDefIndex: 7501
{
	// Fields
	public long userId; // 0x10
	public int eventId; // 0x18
	public int superBossId; // 0x1C
	public long damage; // 0x20

	// Methods

	// RVA: 0x1B367DC Offset: 0x1B367DC VA: 0x1B367DC
	public void .ctor() { }

	// RVA: 0x1B3682C Offset: 0x1B3682C VA: 0x1B3682C Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1B36840 Offset: 0x1B36840 VA: 0x1B36840
	public static string CreatePK(long userId, int eventId, int superBossId) { }
}

// Namespace: 
public class UserSuperBossMaster : DataMasterBase<UserSuperBossMaster, UserSuperBossEntity, string> // TypeDefIndex: 7502
{
	// Methods

	// RVA: 0x1B36850 Offset: 0x1B36850 VA: 0x1B36850
	public void .ctor() { }

	// RVA: 0x1B368A4 Offset: 0x1B368A4 VA: 0x1B368A4
	public UserSuperBossEntity GetEntity(long userId, int eventId, int superBossId) { }

	// RVA: 0x1B36928 Offset: 0x1B36928 VA: 0x1B36928
	public bool TryGetEntity(out UserSuperBossEntity entity, long userId, int eventId, int superBossId) { }

	// RVA: 0x1B369B4 Offset: 0x1B369B4 VA: 0x1B369B4
	public UserSuperBossEntity getEntityFromId(long userId, int eventId, int superBossId) { }

	// RVA: 0x1B36CA8 Offset: 0x1B36CA8 VA: 0x1B36CA8
	public long getTotalDamagePoint(int eventId) { }
}

// Namespace: 
public class UserSupportDeckEntity : DataEntityBase<string> // TypeDefIndex: 7503
{
	// Fields
	public long userId; // 0x10
	public int supportDeckId; // 0x18
	public string name; // 0x20

	// Methods

	// RVA: 0x1B36EE4 Offset: 0x1B36EE4 VA: 0x1B36EE4
	public void .ctor() { }

	// RVA: 0x1B36F34 Offset: 0x1B36F34 VA: 0x1B36F34 Slot: 5
	protected sealed override string CreatePrimaryKey() { }

	// RVA: 0x1B36F48 Offset: 0x1B36F48 VA: 0x1B36F48
	public static string CreatePK(long userId, int supportDeckId) { }
}

// Namespace: 
public class UserSupportDeckMaster : DataMasterBase<UserSupportDeckMaster, UserSupportDeckEntity, string> // TypeDefIndex: 7504
{
	// Methods

	// RVA: 0x1B36F54 Offset: 0x1B36F54 VA: 0x1B36F54
	public void .ctor() { }

	// RVA: 0x1B36FA8 Offset: 0x1B36FA8 VA: 0x1B36FA8
	public UserSupportDeckEntity GetEntity(long userId, int supportDeckId) { }

	// RVA: 0x1B3701C Offset: 0x1B3701C VA: 0x1B3701C
	public bool TryGetEntity(out UserSupportDeckEntity entity, long userId, int supportDeckId) { }

	// RVA: 0x1B370A0 Offset: 0x1B370A0 VA: 0x1B370A0
	public string getDeckName(int deckId) { }
}

// Namespace: 
public class UserSvtCoinEntity : DataEntityBase<string> // TypeDefIndex: 7505
{
	// Fields
	public long userId; // 0x10
	public int svtId; // 0x18
	public int num; // 0x1C
	public long updatedAt; // 0x20
	public long createdAt; // 0x28

	// Methods

