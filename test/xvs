
// Namespace: 
public sealed class WarBoardTaskBase.TaskCallback : MulticastDelegate // TypeDefIndex: 11896
{
	// Methods

	// RVA: 0x1A8367C Offset: 0x1A8367C VA: 0x1A8367C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1A8D6C4 Offset: 0x1A8D6C4 VA: 0x1A8D6C4 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1A8D964 Offset: 0x1A8D964 VA: 0x1A8D964 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1A8D998 Offset: 0x1A8D998 VA: 0x1A8D998 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2DB0 Offset: 0xCB2DB0 VA: 0xCB2DB0
private sealed class WarBoardTaskBase.<Execute>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 11897
{
	// Fields
	internal object $current; // 0x10
	internal bool $disposing; // 0x18
	internal int $PC; // 0x1C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD4B114 Offset: 0xD4B114 VA: 0xD4B114
	// RVA: 0x1A8D6BC Offset: 0x1A8D6BC VA: 0x1A8D6BC
	public void .ctor() { }

	// RVA: 0x1A8D8D8 Offset: 0x1A8D8D8 VA: 0x1A8D8D8 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B124 Offset: 0xD4B124 VA: 0xD4B124
	// RVA: 0x1A8D8E8 Offset: 0x1A8D8E8 VA: 0x1A8D8E8 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B134 Offset: 0xD4B134 VA: 0xD4B134
	// RVA: 0x1A8D8F0 Offset: 0x1A8D8F0 VA: 0x1A8D8F0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B144 Offset: 0xD4B144 VA: 0xD4B144
	// RVA: 0x1A8D8F8 Offset: 0x1A8D8F8 VA: 0x1A8D8F8 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B154 Offset: 0xD4B154 VA: 0xD4B154
	// RVA: 0x1A8D8FC Offset: 0x1A8D8FC VA: 0x1A8D8FC Slot: 6
	public void Reset() { }
}

// Namespace: 
public class WarBoardWaitNonBlockingTaskEnd : WarBoardTaskBase // TypeDefIndex: 11898
{
	// Methods

	// RVA: 0x1A9070C Offset: 0x1A9070C VA: 0x1A9070C
	public void .ctor() { }

	[DebuggerHiddenAttribute] // RVA: 0xD43664 Offset: 0xD43664 VA: 0xD43664
	// RVA: 0x1A90714 Offset: 0x1A90714 VA: 0x1A90714 Slot: 4
	public override IEnumerator Execute() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2DC0 Offset: 0xCB2DC0 VA: 0xCB2DC0
private sealed class WarBoardWaitNonBlockingTaskEnd.<Execute>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 11899
{
	// Fields
	internal object $current; // 0x10
	internal bool $disposing; // 0x18
	internal int $PC; // 0x1C
	private static Func<bool> <>f__am$cache0; // 0x0

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD4B164 Offset: 0xD4B164 VA: 0xD4B164
	// RVA: 0x1A90770 Offset: 0x1A90770 VA: 0x1A90770
	public void .ctor() { }

	// RVA: 0x1A90778 Offset: 0x1A90778 VA: 0x1A90778 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B174 Offset: 0xD4B174 VA: 0xD4B174
	// RVA: 0x1A908A0 Offset: 0x1A908A0 VA: 0x1A908A0 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B184 Offset: 0xD4B184 VA: 0xD4B184
	// RVA: 0x1A908A8 Offset: 0x1A908A8 VA: 0x1A908A8 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B194 Offset: 0xD4B194 VA: 0xD4B194
	// RVA: 0x1A908B0 Offset: 0x1A908B0 VA: 0x1A908B0 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B1A4 Offset: 0xD4B1A4 VA: 0xD4B1A4
	// RVA: 0x1A908C4 Offset: 0x1A908C4 VA: 0x1A908C4 Slot: 6
	public void Reset() { }

	// RVA: 0x1A9092C Offset: 0x1A9092C VA: 0x1A9092C
	private static bool <>m__0() { }
}

// Namespace: 
public class WarBoardWaitTime : WarBoardTaskBase // TypeDefIndex: 11900
{
	// Fields
	private float waitTime; // 0x2C

	// Methods

	// RVA: 0x1A839F0 Offset: 0x1A839F0 VA: 0x1A839F0
	public void .ctor(float waitTime) { }

	[DebuggerHiddenAttribute] // RVA: 0xD43674 Offset: 0xD43674 VA: 0xD43674
	// RVA: 0x1A9098C Offset: 0x1A9098C VA: 0x1A9098C Slot: 4
	public override IEnumerator Execute() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2DD0 Offset: 0xCB2DD0 VA: 0xCB2DD0
private sealed class WarBoardWaitTime.<Execute>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 11901
{
	// Fields
	internal float <espTime>__1; // 0x10
	internal WarBoardWaitTime $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD4B1B4 Offset: 0xD4B1B4 VA: 0xD4B1B4
	// RVA: 0x1A909FC Offset: 0x1A909FC VA: 0x1A909FC
	public void .ctor() { }

	// RVA: 0x1A90A04 Offset: 0x1A90A04 VA: 0x1A90A04 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B1C4 Offset: 0xD4B1C4 VA: 0xD4B1C4
	// RVA: 0x1A90AF0 Offset: 0x1A90AF0 VA: 0x1A90AF0 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B1D4 Offset: 0xD4B1D4 VA: 0xD4B1D4
	// RVA: 0x1A90AF8 Offset: 0x1A90AF8 VA: 0x1A90AF8 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B1E4 Offset: 0xD4B1E4 VA: 0xD4B1E4
	// RVA: 0x1A90B00 Offset: 0x1A90B00 VA: 0x1A90B00 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD4B1F4 Offset: 0xD4B1F4 VA: 0xD4B1F4
	// RVA: 0x1A90B14 Offset: 0x1A90B14 VA: 0x1A90B14 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class WarBoardCommonMiniPopup : WarBoardInfoPopupBase // TypeDefIndex: 11902
{
	// Fields
	[SerializeField] // RVA: 0xCEFC28 Offset: 0xCEFC28 VA: 0xCEFC28
	private UISkinSprite windowBase; // 0x30
	[SerializeField] // RVA: 0xCEFC38 Offset: 0xCEFC38 VA: 0xCEFC38
	private UILabel messgeLabel; // 0x38
	[SerializeField] // RVA: 0xCEFC48 Offset: 0xCEFC48 VA: 0xCEFC48
	private GameObject cofirmButtonRoot; // 0x40
	[SerializeField] // RVA: 0xCEFC58 Offset: 0xCEFC58 VA: 0xCEFC58
	private UILabel yesButtonLabel; // 0x48
	[SerializeField] // RVA: 0xCEFC68 Offset: 0xCEFC68 VA: 0xCEFC68
	private UILabel noButtonLabel; // 0x50
	[SerializeField] // RVA: 0xCEFC78 Offset: 0xCEFC78 VA: 0xCEFC78
	private GameObject noticeButtonRoot; // 0x58
	[SerializeField] // RVA: 0xCEFC88 Offset: 0xCEFC88 VA: 0xCEFC88
	private UILabel closeButtonLabel; // 0x60
	[SerializeField] // RVA: 0xCEFC98 Offset: 0xCEFC98 VA: 0xCEFC98
	private WarBoardCommonMiniPopup.LineLayout[] lineLayouts; // 0x68
	private Action<bool> clickCallback; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xCEFCA8 Offset: 0xCEFCA8 VA: 0xCEFCA8
	private static Func<char, bool> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x18E5680 Offset: 0x18E5680 VA: 0x18E5680
	public void .ctor() { }

	// RVA: 0x18E5768 Offset: 0x18E5768 VA: 0x18E5768 Slot: 4
	public override void Initialize() { }

	// RVA: 0x18E589C Offset: 0x18E589C VA: 0x18E589C
	private int GetLineCount(string message) { }

	// RVA: 0x18E5960 Offset: 0x18E5960 VA: 0x18E5960
	private WarBoardCommonMiniPopup.LineLayout GetLineLayout(string message) { }

	// RVA: 0x18E5A08 Offset: 0x18E5A08 VA: 0x18E5A08
	public void OpenConfirmPopup(Action<bool> clickCallback, string message, string yesButton, string noButton) { }

	// RVA: 0x18E5C94 Offset: 0x18E5C94 VA: 0x18E5C94
	public void OpenNoticePopup(Action<bool> clickCallback, string message, string closeButton) { }

	// RVA: 0x18E5E80 Offset: 0x18E5E80 VA: 0x18E5E80
	public void OnClickYes() { }

	// RVA: 0x18E5F80 Offset: 0x18E5F80 VA: 0x18E5F80
	public void OnClickNo() { }

	// RVA: 0x18E602C Offset: 0x18E602C VA: 0x18E602C
	public void OnClickClose() { }

	// RVA: 0x18E60D8 Offset: 0x18E60D8 VA: 0x18E60D8
	public void ClosePopup(Action hideCallback) { }

	[CompilerGeneratedAttribute] // RVA: 0xD43684 Offset: 0xD43684 VA: 0xD43684
	// RVA: 0x18E622C Offset: 0x18E622C VA: 0x18E622C
	private static bool <GetLineCount>m__0(char x) { }
}

// Namespace: 
[Serializable]
private struct WarBoardCommonMiniPopup.LineLayout // TypeDefIndex: 11903
{
	// Fields
	[SerializeField] // RVA: 0xCEFCB8 Offset: 0xCEFCB8 VA: 0xCEFCB8
	public float MessagePosY; // 0x0
	[SerializeField] // RVA: 0xCEFCC8 Offset: 0xCEFCC8 VA: 0xCEFCC8
	public float ButtonRootPosY; // 0x4
}

// Namespace: 
public class WarBoardInfoPopupBase : MonoBehaviour // TypeDefIndex: 11904
{
	// Fields
	private static readonly float POPUP_SHOW_ANIM_DURATION; // 0x0
	private static readonly float POPUP_HIDE_ANIM_DURATION; // 0x4
	[SerializeField] // RVA: 0xCEFCD8 Offset: 0xCEFCD8 VA: 0xCEFCD8
	protected GameObject mainView; // 0x18
	protected Action hideCompleteCallback; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCEFCE8 Offset: 0xCEFCE8 VA: 0xCEFCE8
	[DebuggerBrowsableAttribute] // RVA: 0xCEFCE8 Offset: 0xCEFCE8 VA: 0xCEFCE8
	private bool <isShowAnimating>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCEFD24 Offset: 0xCEFD24 VA: 0xCEFD24
	[DebuggerBrowsableAttribute] // RVA: 0xCEFD24 Offset: 0xCEFD24 VA: 0xCEFD24
	private bool <isHideAnimating>k__BackingField; // 0x29

	// Properties
	public bool isShowAnimating { get; set; }
	public bool isHideAnimating { get; set; }
	public bool isAnimating { get; }
	public bool isShown { get; }

	// Methods

	// RVA: 0x18E5760 Offset: 0x18E5760 VA: 0x18E5760
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD43694 Offset: 0xD43694 VA: 0xD43694
	// RVA: 0x18F0370 Offset: 0x18F0370 VA: 0x18F0370
	public bool get_isShowAnimating() { }

	[CompilerGeneratedAttribute] // RVA: 0xD436A4 Offset: 0xD436A4 VA: 0xD436A4
	// RVA: 0x18F0378 Offset: 0x18F0378 VA: 0x18F0378
	private void set_isShowAnimating(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD436B4 Offset: 0xD436B4 VA: 0xD436B4
	// RVA: 0x18F0384 Offset: 0x18F0384 VA: 0x18F0384
	public bool get_isHideAnimating() { }

	[CompilerGeneratedAttribute] // RVA: 0xD436C4 Offset: 0xD436C4 VA: 0xD436C4
	// RVA: 0x18F038C Offset: 0x18F038C VA: 0x18F038C
	private void set_isHideAnimating(bool value) { }

	// RVA: 0x18E5F60 Offset: 0x18E5F60 VA: 0x18E5F60
	public bool get_isAnimating() { }

	// RVA: 0x18E5F2C Offset: 0x18E5F2C VA: 0x18E5F2C
	public bool get_isShown() { }

	// RVA: 0x18E57A0 Offset: 0x18E57A0 VA: 0x18E57A0 Slot: 4
	public virtual void Initialize() { }

	// RVA: 0x18E5C00 Offset: 0x18E5C00 VA: 0x18E5C00
	public void Show() { }

	// RVA: 0x18E61A8 Offset: 0x18E61A8 VA: 0x18E61A8
	public void Hide() { }

	// RVA: 0x18F0398 Offset: 0x18F0398 VA: 0x18F0398
	public void AddHideCompleteCallback(Action completeCallback) { }

	// RVA: 0x18F045C Offset: 0x18F045C VA: 0x18F045C Slot: 5
	protected virtual void ShowAnimation(EventDelegate.Callback finishCallback) { }

	// RVA: 0x18F0590 Offset: 0x18F0590 VA: 0x18F0590 Slot: 6
	protected virtual void HideAnimation(EventDelegate.Callback finishCallback) { }

	// RVA: 0x18F06C4 Offset: 0x18F06C4 VA: 0x18F06C4 Slot: 7
	protected virtual void OnBeforeShow() { }

	// RVA: 0x18F06FC Offset: 0x18F06FC VA: 0x18F06FC Slot: 8
	protected virtual void OnAfterHide() { }

	// RVA: 0x18F0760 Offset: 0x18F0760 VA: 0x18F0760 Slot: 9
	protected virtual void CleanPopup() { }

	// RVA: 0x18F0764 Offset: 0x18F0764 VA: 0x18F0764
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD436D4 Offset: 0xD436D4 VA: 0xD436D4
	// RVA: 0x18F07C8 Offset: 0x18F07C8 VA: 0x18F07C8
	private void <Show>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD436E4 Offset: 0xD436E4 VA: 0xD436E4
	// RVA: 0x18F07D0 Offset: 0x18F07D0 VA: 0x18F07D0
	private void <Hide>m__1() { }
}

// Namespace: 
public class WarBoardSimplePopup : WarBoardInfoPopupBase // TypeDefIndex: 11905
{
	// Fields
	private static readonly int LEFT_MARGIN_WHEN_LOCATING_ON_LEFT_SIDE; // 0x0
	private static readonly int RIGHT_MARGIN_WHEN_LOCATING_ON_RIGHT_SIDE; // 0x4
	private static readonly int BOTTOM_MARGIN; // 0x8
	private static readonly int TOP_MARGIN; // 0xC
	private static readonly int FS_LEFT_MARGIN_WHEN_LOCATING_ON_LEFT_SIDE; // 0x10
	private static readonly int FS_RIGHT_MARGIN_WHEN_LOCATING_ON_RIGHT_SIDE; // 0x14
	private static readonly int FS_BOTTOM_MARGIN; // 0x18
	private static readonly int FS_TOP_MARGIN; // 0x1C
	private Vector3 targetPiecePosition; // 0x2C

	// Methods

	// RVA: 0x1A846B8 Offset: 0x1A846B8 VA: 0x1A846B8
	public void .ctor() { }

	// RVA: 0x1A84750 Offset: 0x1A84750 VA: 0x1A84750
	public GameObject AddElement(GameObject elemPrefab) { }

	// RVA: 0x1A847F4 Offset: 0x1A847F4 VA: 0x1A847F4
	public void SetTargetPiecePosition(Vector3 pos) { }

	// RVA: 0x1A84800 Offset: 0x1A84800 VA: 0x1A84800 Slot: 7
	protected override void OnBeforeShow() { }

	// RVA: 0x1A84830 Offset: 0x1A84830 VA: 0x1A84830
	private void MainViewContentsFit() { }

	// RVA: 0x1A84B58 Offset: 0x1A84B58 VA: 0x1A84B58
	private void AdjustMainViewPosition() { }

	// RVA: 0x1A853FC Offset: 0x1A853FC VA: 0x1A853FC Slot: 9
	protected override void CleanPopup() { }

	// RVA: 0x1A8550C Offset: 0x1A8550C VA: 0x1A8550C
	private void OnDestroy() { }

	// RVA: 0x1A85518 Offset: 0x1A85518 VA: 0x1A85518
	private static void .cctor() { }
}

// Namespace: 
public class WarBoardSimplePopupElementBuff : MonoBehaviour // TypeDefIndex: 11906
{
	// Fields
	[SerializeField] // RVA: 0xCEFD60 Offset: 0xCEFD60 VA: 0xCEFD60
	private UILabel titleLabel; // 0x18
	[SerializeField] // RVA: 0xCEFD70 Offset: 0xCEFD70 VA: 0xCEFD70
	private UILabel explanationLabel; // 0x20
	[SerializeField] // RVA: 0xCEFD80 Offset: 0xCEFD80 VA: 0xCEFD80
	private GameObject ItemIconParts; // 0x28
	[SerializeField] // RVA: 0xCEFD90 Offset: 0xCEFD90 VA: 0xCEFD90
	private GameObject effectIconParts; // 0x30
	[SerializeField] // RVA: 0xCEFDA0 Offset: 0xCEFDA0 VA: 0xCEFDA0
	private UISprite itemIcon; // 0x38
	[SerializeField] // RVA: 0xCEFDB0 Offset: 0xCEFDB0 VA: 0xCEFDB0
	private UISprite effectIcon; // 0x40
	[SerializeField] // RVA: 0xCEFDC0 Offset: 0xCEFDC0 VA: 0xCEFDC0
	private UISprite effectIconBase; // 0x48
	[SerializeField] // RVA: 0xCEFDD0 Offset: 0xCEFDD0 VA: 0xCEFDD0
	private UIScrollView scrollView; // 0x50

	// Methods

	// RVA: 0x1A855BC Offset: 0x1A855BC VA: 0x1A855BC
	public void .ctor() { }

	// RVA: 0x1A855C4 Offset: 0x1A855C4 VA: 0x1A855C4
	public void SetUp(WarBoardItemData itemData) { }

	// RVA: 0x1A8574C Offset: 0x1A8574C VA: 0x1A8574C
	public void SetUp(WarBoardEffectData effectData) { }

	// RVA: 0x1A85A2C Offset: 0x1A85A2C VA: 0x1A85A2C
	public void Update() { }

	// RVA: 0x1A85AC8 Offset: 0x1A85AC8 VA: 0x1A85AC8
	public void OnTouch() { }

	// RVA: 0x1A85B54 Offset: 0x1A85B54 VA: 0x1A85B54
	public void OnRelease() { }
}

// Namespace: 
public class WarBoardSimplePopupElementServant : MonoBehaviour // TypeDefIndex: 11907
{
	// Fields
	[SerializeField] // RVA: 0xCEFDE0 Offset: 0xCEFDE0 VA: 0xCEFDE0
	protected GameObject breakPointPrefab; // 0x18
	[SerializeField] // RVA: 0xCEFDF0 Offset: 0xCEFDF0 VA: 0xCEFDF0
	protected UIWidget breakPointParent; // 0x20
	[SerializeField] // RVA: 0xCEFE00 Offset: 0xCEFE00 VA: 0xCEFE00
	private UISprite hpBar; // 0x28
	[SerializeField] // RVA: 0xCEFE10 Offset: 0xCEFE10 VA: 0xCEFE10
	private UISprite[] npBars; // 0x30
	[SerializeField] // RVA: 0xCEFE20 Offset: 0xCEFE20 VA: 0xCEFE20
	private UISprite flameInClassIcon; // 0x38
	[SerializeField] // RVA: 0xCEFE30 Offset: 0xCEFE30 VA: 0xCEFE30
	private UILabel atkValueLabel; // 0x40
	[SerializeField] // RVA: 0xCEFE40 Offset: 0xCEFE40 VA: 0xCEFE40
	private UILabel atkLabel; // 0x48
	[SerializeField] // RVA: 0xCEFE50 Offset: 0xCEFE50 VA: 0xCEFE50
	private UILabel hpValueLabel; // 0x50
	[SerializeField] // RVA: 0xCEFE60 Offset: 0xCEFE60 VA: 0xCEFE60
	private UILabel hpLabel; // 0x58
	[SerializeField] // RVA: 0xCEFE70 Offset: 0xCEFE70 VA: 0xCEFE70
	private UILabel actValueLabel; // 0x60
	[SerializeField] // RVA: 0xCEFE80 Offset: 0xCEFE80 VA: 0xCEFE80
	private UISprite servantIcon; // 0x68
	[SerializeField] // RVA: 0xCEFE90 Offset: 0xCEFE90 VA: 0xCEFE90
	private UISprite frameSprite; // 0x70
	[SerializeField] // RVA: 0xCEFEA0 Offset: 0xCEFEA0 VA: 0xCEFEA0
	private UISprite equipIcon; // 0x78
	[SerializeField] // RVA: 0xCEFEB0 Offset: 0xCEFEB0 VA: 0xCEFEB0
	private UISprite equipLimitCountSprite; // 0x80
	[SerializeField] // RVA: 0xCEFEC0 Offset: 0xCEFEC0 VA: 0xCEFEC0
	private GameObject critecalStarsRoot; // 0x88
	[SerializeField] // RVA: 0xCEFED0 Offset: 0xCEFED0 VA: 0xCEFED0
	private UILabel critecalStarsLabel; // 0x90
	[SerializeField] // RVA: 0xCEFEE0 Offset: 0xCEFEE0 VA: 0xCEFEE0
	private BattleServantShowBuffComponent showBuffComponent; // 0x98
	[SerializeField] // RVA: 0xCEFEF0 Offset: 0xCEFEF0 VA: 0xCEFEF0
	private BattleServantSkillIConComponent[] skillIconList; // 0xA0
	[SerializeField] // RVA: 0xCEFF00 Offset: 0xCEFF00 VA: 0xCEFF00
	private GameObject actionCountObj; // 0xA8
	[SerializeField] // RVA: 0xCEFF10 Offset: 0xCEFF10 VA: 0xCEFF10
	private GameObject equipIconOnFace; // 0xB0
	private WarBoardPieceData pieceData; // 0xB8
	[SerializeField] // RVA: 0xCEFF20 Offset: 0xCEFF20 VA: 0xCEFF20
	private int HpValueLabelMaxWidth; // 0xC0
	[SerializeField] // RVA: 0xCEFF30 Offset: 0xCEFF30 VA: 0xCEFF30
	private UILabel servantNameLabel; // 0xC8
	[SerializeField] // RVA: 0xCEFF40 Offset: 0xCEFF40 VA: 0xCEFF40
	private int servantNameLabelWidth; // 0xD0
	[SerializeField] // RVA: 0xCEFF50 Offset: 0xCEFF50 VA: 0xCEFF50
	private UILabel detailButtonLabel; // 0xD8
	[SerializeField] // RVA: 0xCEFF60 Offset: 0xCEFF60 VA: 0xCEFF60
	private UISprite supportSprite; // 0xE0
	[SerializeField] // RVA: 0xCEFF70 Offset: 0xCEFF70 VA: 0xCEFF70
	private UILabel servantLevel; // 0xE8
	[SerializeField] // RVA: 0xCEFF80 Offset: 0xCEFF80 VA: 0xCEFF80
	private Vector3 positionLevel; // 0xF0
	[SerializeField] // RVA: 0xCEFF90 Offset: 0xCEFF90 VA: 0xCEFF90
	private Vector3 positionLevelDanger; // 0xFC
	[SerializeField] // RVA: 0xCEFFA0 Offset: 0xCEFFA0 VA: 0xCEFFA0
	private Vector3 positionLevelNpc; // 0x108
	[SerializeField] // RVA: 0xCEFFB0 Offset: 0xCEFFB0 VA: 0xCEFFB0
	private GameObject RoleTypeLabel; // 0x118

	// Methods

	// RVA: 0x1A85BE0 Offset: 0x1A85BE0 VA: 0x1A85BE0
	public void .ctor() { }

	// RVA: 0x1A85CCC Offset: 0x1A85CCC VA: 0x1A85CCC
	public void SetUp(WarBoardPieceData pieceData) { }

	// RVA: 0x1A8745C Offset: 0x1A8745C VA: 0x1A8745C
	public void UpdateLabel() { }

	// RVA: 0x1A8720C Offset: 0x1A8720C VA: 0x1A8720C
	private void UpdateNpBars(float progress) { }

	// RVA: 0x1A86A40 Offset: 0x1A86A40 VA: 0x1A86A40
	private void SetAtkLabel(int atk, bool isPlayerGroup) { }

	// RVA: 0x1A86B7C Offset: 0x1A86B7C VA: 0x1A86B7C
	private void SetUpSkillIcon(BattleServantData data, bool isPlayerGroup) { }

	// RVA: 0x1A86E38 Offset: 0x1A86E38 VA: 0x1A86E38
	private void SetBuffIcon(BattleBuffData buffData) { }

	// RVA: 0x1A86EFC Offset: 0x1A86EFC VA: 0x1A86EFC
	private void SetBreakPoint(int breakPoint, int breakPointMax) { }

	// RVA: 0x1A87500 Offset: 0x1A87500 VA: 0x1A87500
	public void ShowEquipStatus() { }

	// RVA: 0x1A875E4 Offset: 0x1A875E4 VA: 0x1A875E4
	public void OnClickDetailButton() { }
}

// Namespace: 
public class WarBoardBackMenuComponent : BaseDialog // TypeDefIndex: 11908
{
	// Fields
	protected Action cancelCallbackFunc; // 0x58
	protected Action suspendCallbackFunc; // 0x60
	protected Action retireCallbackFunc; // 0x68
	[SerializeField] // RVA: 0xCEFFC0 Offset: 0xCEFFC0 VA: 0xCEFFC0
	private UILabel menuTitleTxt; // 0x70
	[SerializeField] // RVA: 0xCEFFD0 Offset: 0xCEFFD0 VA: 0xCEFFD0
	private UILabel suspendButtonTxt; // 0x78
	[SerializeField] // RVA: 0xCEFFE0 Offset: 0xCEFFE0 VA: 0xCEFFE0
	private UILabel retireButtonTxt; // 0x80
	[SerializeField] // RVA: 0xCEFFF0 Offset: 0xCEFFF0 VA: 0xCEFFF0
	private UILabel cancelButtonTxt; // 0x88
	protected WarBoardBackMenuComponent.State state; // 0x90

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x18DE8FC Offset: 0x18DE8FC VA: 0x18DE8FC
	public void .ctor() { }

	// RVA: 0x18DE964 Offset: 0x18DE964 VA: 0x18DE964
	public void Init() { }

	// RVA: 0x18DE9B0 Offset: 0x18DE9B0 VA: 0x18DE9B0
	public void Open(Action suspendCallback, Action retireCallback, Action cancelCallback) { }

	// RVA: 0x18DEC98 Offset: 0x18DEC98 VA: 0x18DEC98
	public void OnClickCancelButton() { }

	// RVA: 0x18DED4C Offset: 0x18DED4C VA: 0x18DED4C
	public void OnClickSuspendButton() { }

	// RVA: 0x18DEEFC Offset: 0x18DEEFC VA: 0x18DEEFC
	private void OnClickSusupendConfirmDialog(bool isDecide) { }

	// RVA: 0x18DEF8C Offset: 0x18DEF8C VA: 0x18DEF8C
	public void OnClickRetireButton() { }

	// RVA: 0x18DF13C Offset: 0x18DF13C VA: 0x18DF13C
	private void OnClickRetireConfirmDialogFinalCheck(bool isDecide) { }

	// RVA: 0x18DF470 Offset: 0x18DF470 VA: 0x18DF470
	private void OnClickRetireConfirmDialog(bool isDecide) { }

	// RVA: 0x18DF500 Offset: 0x18DF500 VA: 0x18DF500
	public void OnClickBackButton() { }

	// RVA: 0x18DF5B4 Offset: 0x18DF5B4 VA: 0x18DF5B4
	protected void EndClose() { }

	// RVA: 0x18DF66C Offset: 0x18DF66C VA: 0x18DF66C Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
protected enum WarBoardBackMenuComponent.State // TypeDefIndex: 11909
{
	// Fields
	public int value__; // 0x0
	public const WarBoardBackMenuComponent.State INIT = 0;
	public const WarBoardBackMenuComponent.State OPEN = 1;
}

// Namespace: 
public class WarBoardConfigurationUIContoroller : MonoBehaviour // TypeDefIndex: 11910
{
	// Fields
	[SerializeField] // RVA: 0xCF0000 Offset: 0xCF0000 VA: 0xCF0000
	private UICommonButton startButton; // 0x18
	private GameObject[] startButtonTweenTargetCache; // 0x20
	[SerializeField] // RVA: 0xCF0010 Offset: 0xCF0010 VA: 0xCF0010
	private GameObject costBaseObj; // 0x28
	[SerializeField] // RVA: 0xCF0020 Offset: 0xCF0020 VA: 0xCF0020
	private UILabel maxCostLabel; // 0x30
	[SerializeField] // RVA: 0xCF0030 Offset: 0xCF0030 VA: 0xCF0030
	private UILabel spritLabel; // 0x38
	[SerializeField] // RVA: 0xCF0040 Offset: 0xCF0040 VA: 0xCF0040
	private UILabel currentCostLabel; // 0x40
	[SerializeField] // RVA: 0xCF0050 Offset: 0xCF0050 VA: 0xCF0050
	private UILabel currentApLabel; // 0x48
	[SerializeField] // RVA: 0xCF0060 Offset: 0xCF0060 VA: 0xCF0060
	private ItemIconComponent userEquipIcon; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xCF0070 Offset: 0xCF0070 VA: 0xCF0070
	private static Func<UIWidget, bool> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCF0080 Offset: 0xCF0080 VA: 0xCF0080
	private static Func<UIWidget, GameObject> <>f__am$cache1; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCF0090 Offset: 0xCF0090 VA: 0xCF0090
	private static NotificationDialog.ClickDelegate <>f__am$cache2; // 0x10

	// Methods

	// RVA: 0x18E6520 Offset: 0x18E6520 VA: 0x18E6520
	public void .ctor() { }

	// RVA: 0x18E6528 Offset: 0x18E6528 VA: 0x18E6528
	public void Init() { }

	// RVA: 0x18E68D0 Offset: 0x18E68D0 VA: 0x18E68D0
	public void Active() { }

	// RVA: 0x18E6908 Offset: 0x18E6908 VA: 0x18E6908
	public void Deactive() { }

	// RVA: 0x18E66FC Offset: 0x18E66FC VA: 0x18E66FC
	private void InitStartButton() { }

	// RVA: 0x18E6940 Offset: 0x18E6940 VA: 0x18E6940
	private void ModifyStartButton() { }

	// RVA: 0x18E6A84 Offset: 0x18E6A84 VA: 0x18E6A84
	public void SetActiveCostLabel(bool isActive) { }

	// RVA: 0x18E6554 Offset: 0x18E6554 VA: 0x18E6554
	private void InitCost() { }

	// RVA: 0x18E6ABC Offset: 0x18E6ABC VA: 0x18E6ABC
	public void ModifyCost() { }

	// RVA: 0x18E6CF8 Offset: 0x18E6CF8 VA: 0x18E6CF8
	public void ModifyAP() { }

	// RVA: 0x18E66F8 Offset: 0x18E66F8 VA: 0x18E66F8
	private void InitUserEquip() { }

	// RVA: 0x18E6E24 Offset: 0x18E6E24 VA: 0x18E6E24
	public void ModifyUserEquip() { }

	// RVA: 0x18E707C Offset: 0x18E707C VA: 0x18E707C
	public void OnClickUserEquipButton() { }

	// RVA: 0x18E7134 Offset: 0x18E7134 VA: 0x18E7134
	public void OnClickClassCompatibilityButton() { }

	// RVA: 0x18E7258 Offset: 0x18E7258 VA: 0x18E7258
	private void OnCloseClassCompatibility() { }

	// RVA: 0x18E72EC Offset: 0x18E72EC VA: 0x18E72EC
	public void OnClickStartButton() { }

	// RVA: 0x18E7D8C Offset: 0x18E7D8C VA: 0x18E7D8C
	private void OnClickStartConfirmDialog(bool isDecide) { }

	// RVA: 0x18E7E4C Offset: 0x18E7E4C VA: 0x18E7E4C
	public void OnClickReturnButton() { }

	// RVA: 0x18E8054 Offset: 0x18E8054 VA: 0x18E8054
	private void OnClickReturnConfirmDialog(bool isDecide) { }

	// RVA: 0x18E77A0 Offset: 0x18E77A0 VA: 0x18E77A0
	private bool IsEnabledPutOnFreeSquare(WarBoardData warBoardData) { }

	// RVA: 0x18E8398 Offset: 0x18E8398 VA: 0x18E8398
	private void OnEnable() { }

	[CompilerGeneratedAttribute] // RVA: 0xD436F4 Offset: 0xD436F4 VA: 0xD436F4
	// RVA: 0x18E8420 Offset: 0x18E8420 VA: 0x18E8420
	private static bool <InitStartButton>m__0(UIWidget x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD43704 Offset: 0xD43704 VA: 0xD43704
	// RVA: 0x18E848C Offset: 0x18E848C VA: 0x18E848C
	private static GameObject <InitStartButton>m__1(UIWidget x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD43714 Offset: 0xD43714 VA: 0xD43714
	// RVA: 0x18E84B8 Offset: 0x18E84B8 VA: 0x18E84B8
	private static void <OnClickStartButton>m__2(bool ok) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2DE0 Offset: 0xCB2DE0 VA: 0xCB2DE0
private sealed class WarBoardConfigurationUIContoroller.<IsEnabledPutOnFreeSquare>c__AnonStorey0 // TypeDefIndex: 11911
{
	// Fields
	internal int freeCost; // 0x10
	internal List<int> pieceSvtIdList; // 0x18

	// Methods

	// RVA: 0x18E8150 Offset: 0x18E8150 VA: 0x18E8150
	public void .ctor() { }

	// RVA: 0x18E8548 Offset: 0x18E8548 VA: 0x18E8548
	internal bool <>m__0(UserServantEntity svt) { }
}

// Namespace: 
public class WarBoardOnboardSkillNameComponent : MonoBehaviour // TypeDefIndex: 11912
{
	// Fields
	[SerializeField] // RVA: 0xCF00A0 Offset: 0xCF00A0 VA: 0xCF00A0
	private UILabel skillName; // 0x18
	[SerializeField] // RVA: 0xCF00B0 Offset: 0xCF00B0 VA: 0xCF00B0
	private float skillNameDispAfterWait; // 0x20
	[SerializeField] // RVA: 0xCF00C0 Offset: 0xCF00C0 VA: 0xCF00C0
	private float skillNameHideBeforeWait; // 0x24

	// Methods

	// RVA: 0x1BFC904 Offset: 0x1BFC904 VA: 0x1BFC904
	public void .ctor() { }

	// RVA: 0x1BF8950 Offset: 0x1BF8950 VA: 0x1BF8950
	public void Clear() { }

	// RVA: 0x1BFC914 Offset: 0x1BFC914 VA: 0x1BFC914
	public void SetActive(bool flag) { }

	// RVA: 0x1BFC950 Offset: 0x1BFC950 VA: 0x1BFC950
	public void SetSkillName(string name) { }

	// RVA: 0x1BFC988 Offset: 0x1BFC988 VA: 0x1BFC988
	public float GetSkillNameDispAfterWait() { }

	// RVA: 0x1BFC990 Offset: 0x1BFC990 VA: 0x1BFC990
	public float GetSkillNameHideBeforeWait() { }
}

// Namespace: 
public class WarBoardPlayingUIController : MonoBehaviour // TypeDefIndex: 11913
{
	// Fields
	[SerializeField] // RVA: 0xCF00D0 Offset: 0xCF00D0 VA: 0xCF00D0
	private GameObject nextTurnObject; // 0x18
	[SerializeField] // RVA: 0xCF00E0 Offset: 0xCF00E0 VA: 0xCF00E0
	private UICommonButton nextTurnButton; // 0x20
	[SerializeField] // RVA: 0xCF00F0 Offset: 0xCF00F0 VA: 0xCF00F0
	private GameObject nextTurnButtonBlinkPrefab; // 0x28
	[SerializeField] // RVA: 0xCF0100 Offset: 0xCF0100 VA: 0xCF0100
	private UILabel currentAPLabel; // 0x30
	[SerializeField] // RVA: 0xCF0110 Offset: 0xCF0110 VA: 0xCF0110
	private UILabel maxAPLabel; // 0x38
	[SerializeField] // RVA: 0xCF0120 Offset: 0xCF0120 VA: 0xCF0120
	private UILabel splitAPLabel; // 0x40
	[SerializeField] // RVA: 0xCF0130 Offset: 0xCF0130 VA: 0xCF0130
	private GameObject playerTurnRoot; // 0x48
	[SerializeField] // RVA: 0xCF0140 Offset: 0xCF0140 VA: 0xCF0140
	private GameObject enemyTurnRoot; // 0x50
	[SerializeField] // RVA: 0xCF0150 Offset: 0xCF0150 VA: 0xCF0150
	private UILabel playerTurnLabel; // 0x58
	[SerializeField] // RVA: 0xCF0160 Offset: 0xCF0160 VA: 0xCF0160
	private UILabel enemyTurnLabel; // 0x60
	[SerializeField] // RVA: 0xCF0170 Offset: 0xCF0170 VA: 0xCF0170
	private UILabel titleLabel; // 0x68
	[SerializeField] // RVA: 0xCF0180 Offset: 0xCF0180 VA: 0xCF0180
	private GameObject getTreasureRoot; // 0x70
	[SerializeField] // RVA: 0xCF0190 Offset: 0xCF0190 VA: 0xCF0190
	private UISprite getTreasureIcon; // 0x78
	[SerializeField] // RVA: 0xCF01A0 Offset: 0xCF01A0 VA: 0xCF01A0
	private UILabel getTreasureLabel; // 0x80
	[SerializeField] // RVA: 0xCF01B0 Offset: 0xCF01B0 VA: 0xCF01B0
	private GameObject treasureListPrefab; // 0x88
	private GameObject nextTurnButtonBlink; // 0x90
	private GameObject[] nextTurnButtonTweenObjectCache; // 0x98
	[SerializeField] // RVA: 0xCF01C0 Offset: 0xCF01C0 VA: 0xCF01C0
	private GameObject backPrefab; // 0xA0
	[CompilerGeneratedAttribute] // RVA: 0xCF01D0 Offset: 0xCF01D0 VA: 0xCF01D0
	private static Action <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1C0B208 Offset: 0x1C0B208 VA: 0x1C0B208
	public void .ctor() { }

	// RVA: 0x1C0B210 Offset: 0x1C0B210 VA: 0x1C0B210
	private void Awake() { }

	// RVA: 0x1C0B58C Offset: 0x1C0B58C VA: 0x1C0B58C
	public void Active() { }

	// RVA: 0x1C0B5C4 Offset: 0x1C0B5C4 VA: 0x1C0B5C4
	public void Deactive() { }

	// RVA: 0x1C0B5FC Offset: 0x1C0B5FC VA: 0x1C0B5FC
	public void SetPlayerTurn() { }

	// RVA: 0x1C0B6C4 Offset: 0x1C0B6C4 VA: 0x1C0B6C4
	public void SetNPCTurn() { }

	// RVA: 0x1C0B774 Offset: 0x1C0B774 VA: 0x1C0B774
	public void SetActionPoint(int current, int max) { }

	// RVA: 0x1C0BA44 Offset: 0x1C0BA44 VA: 0x1C0BA44
	public void SetBlinkNextTurnButton(bool value) { }

	// RVA: 0x1C0BAF4 Offset: 0x1C0BAF4 VA: 0x1C0BAF4
	public void OnClickNextTurn() { }

	// RVA: 0x1C0BCC8 Offset: 0x1C0BCC8 VA: 0x1C0BCC8
	public void NondispTurn() { }

	// RVA: 0x1C0BD20 Offset: 0x1C0BD20 VA: 0x1C0BD20
	public void SetTurn(bool isPlayer, int turnCount) { }

	// RVA: 0x1BF89CC Offset: 0x1BF89CC VA: 0x1BF89CC
	public void SetHeaderTitle(string name) { }

	// RVA: 0x1C0BE88 Offset: 0x1C0BE88 VA: 0x1C0BE88
	private void Update() { }

	// RVA: 0x1C0C034 Offset: 0x1C0C034 VA: 0x1C0C034
	public void OnClickTreasureButton() { }

	// RVA: 0x1C0C230 Offset: 0x1C0C230 VA: 0x1C0C230
	public void OnClickReturnButton() { }

	// RVA: 0x1C0C430 Offset: 0x1C0C430 VA: 0x1C0C430
	public void CallbackSuspendButton() { }

	// RVA: 0x1C0C51C Offset: 0x1C0C51C VA: 0x1C0C51C
	private void SuspendResponse(string response) { }

	// RVA: 0x1C0C5D8 Offset: 0x1C0C5D8 VA: 0x1C0C5D8
	public void CallbackRetireButton() { }

	// RVA: 0x1C0C6AC Offset: 0x1C0C6AC VA: 0x1C0C6AC
	public void CallbackBackButton() { }

	// RVA: 0x1C0C714 Offset: 0x1C0C714 VA: 0x1C0C714
	private void OnDestroy() { }

	[CompilerGeneratedAttribute] // RVA: 0xD43724 Offset: 0xD43724 VA: 0xD43724
	// RVA: 0x1C0C7C0 Offset: 0x1C0C7C0 VA: 0x1C0C7C0
	private static void <CallbackRetireButton>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB2DF0 Offset: 0xCB2DF0 VA: 0xCB2DF0
private sealed class WarBoardPlayingUIController.<OnClickNextTurn>c__AnonStorey1 // TypeDefIndex: 11914
{
	// Fields
	internal WarBoardManager warBoardManager; // 0x10

	// Methods

	// RVA: 0x1C0BCC0 Offset: 0x1C0BCC0 VA: 0x1C0BCC0
	public void .ctor() { }

	// RVA: 0x1C0C85C Offset: 0x1C0C85C VA: 0x1C0C85C
	internal void <>m__0(bool ok) { }
}

// Namespace: 
private sealed class WarBoardPlayingUIController.<OnClickNextTurn>c__AnonStorey1.<OnClickNextTurn>c__AnonStorey0 // TypeDefIndex: 11915
{
	// Fields
	internal bool ok; // 0x10
	internal WarBoardPlayingUIController.<OnClickNextTurn>c__AnonStorey1 <>f__ref$1; // 0x18

	// Methods

	// RVA: 0x1C0C94C Offset: 0x1C0C94C VA: 0x1C0C94C
	public void .ctor() { }

	// RVA: 0x1C0C954 Offset: 0x1C0C954 VA: 0x1C0C954
	internal void <>m__0() { }
}

// Namespace: 
public class WarBoardServantEquipSimpleDialogComponent : BaseDialog // TypeDefIndex: 11916
{
	// Fields
	public SkillIconComponent equipSkillSprite; // 0x58
	public UILabel equipSkillNameLabel; // 0x60
	public UILabel equipSkillConfLabel; // 0x68
	public UILabel closeButtonLabel; // 0x70
	protected WarBoardServantEquipSimpleDialogComponent.State state; // 0x78

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1A8112C Offset: 0x1A8112C VA: 0x1A8112C
	public void .ctor() { }

	// RVA: 0x1A81194 Offset: 0x1A81194 VA: 0x1A81194
	public void Init() { }

	// RVA: 0x1A81268 Offset: 0x1A81268 VA: 0x1A81268
	public void SetUp(BattleServantData bsvtData) { }

	// RVA: 0x1A81A1C Offset: 0x1A81A1C VA: 0x1A81A1C
	public void OpenFinish() { }

	// RVA: 0x1A81A94 Offset: 0x1A81A94 VA: 0x1A81A94
	public void OnClickClose() { }

	// RVA: 0x1A81B54 Offset: 0x1A81B54 VA: 0x1A81B54
	public void EndClose() { }

	// RVA: 0x1A81C28 Offset: 0x1A81C28 VA: 0x1A81C28 Slot: 6
	protected override string get_closeBtnPath() { }

	[CompilerGeneratedAttribute] // RVA: 0xD43734 Offset: 0xD43734 VA: 0xD43734
	// RVA: 0x1A81C70 Offset: 0x1A81C70 VA: 0x1A81C70
	private void <SetUp>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD43744 Offset: 0xD43744 VA: 0xD43744
	// RVA: 0x1A81C74 Offset: 0x1A81C74 VA: 0x1A81C74
	private void <OnClickClose>m__1() { }
}

// Namespace: 
protected enum WarBoardServantEquipSimpleDialogComponent.State // TypeDefIndex: 11917
{
	// Fields
	public int value__; // 0x0
	public const WarBoardServantEquipSimpleDialogComponent.State INIT = 0;
	public const WarBoardServantEquipSimpleDialogComponent.State OPEN = 1;
	public const WarBoardServantEquipSimpleDialogComponent.State INPUT = 2;
}

// Namespace: 
public class WarBoardTouchBlockObject : MonoBehaviour // TypeDefIndex: 11918
{
	// Fields
	private Action onClickCallback; // 0x18

	// Methods

	// RVA: 0x1A8D9A4 Offset: 0x1A8D9A4 VA: 0x1A8D9A4
	public void .ctor() { }

	// RVA: 0x1A8D9AC Offset: 0x1A8D9AC VA: 0x1A8D9AC
	public bool Activate(Action callback) { }

	// RVA: 0x1A8DA14 Offset: 0x1A8DA14 VA: 0x1A8DA14
	public void Deactivate() { }

	// RVA: 0x1A8DA58 Offset: 0x1A8DA58 VA: 0x1A8DA58
	public void OnClickObject() { }
}

// Namespace: 
public class WarBoardTreasureListComponent : BaseDialog // TypeDefIndex: 11919
{
	// Fields
	protected Action closeCallbackFunc; // 0x58
	[SerializeField] // RVA: 0xCF01E0 Offset: 0xCF01E0 VA: 0xCF01E0
	private Transform listRoot; // 0x60
	[SerializeField] // RVA: 0xCF01F0 Offset: 0xCF01F0 VA: 0xCF01F0
	private GameObject prefabResultItem; // 0x68
	[SerializeField] // RVA: 0xCF0200 Offset: 0xCF0200 VA: 0xCF0200
	private float iconScale; // 0x70
	[SerializeField] // RVA: 0xCF0210 Offset: 0xCF0210 VA: 0xCF0210
	private UIPanel scrollView; // 0x78
	[SerializeField] // RVA: 0xCF0220 Offset: 0xCF0220 VA: 0xCF0220
	private UIPanel scrollBar; // 0x80
	[SerializeField] // RVA: 0xCF0230 Offset: 0xCF0230 VA: 0xCF0230
	private UISprite listBg; // 0x88
	[SerializeField] // RVA: 0xCF0240 Offset: 0xCF0240 VA: 0xCF0240
	private UILabel titleLabel; // 0x90
	[SerializeField] // RVA: 0xCF0250 Offset: 0xCF0250 VA: 0xCF0250
	private UILabel textLabel; // 0x98
	[SerializeField] // RVA: 0xCF0260 Offset: 0xCF0260 VA: 0xCF0260
	private UICommonButton closeButton; // 0xA0
	[SerializeField] // RVA: 0xCF0270 Offset: 0xCF0270 VA: 0xCF0270
	private Vector3 basePos; // 0xA8
	[SerializeField] // RVA: 0xCF0280 Offset: 0xCF0280 VA: 0xCF0280
	private Vector3 gridPos; // 0xB4
	[SerializeField] // RVA: 0xCF0290 Offset: 0xCF0290 VA: 0xCF0290
	private int width; // 0xC0
	[SerializeField] // RVA: 0xCF02A0 Offset: 0xCF02A0 VA: 0xCF02A0
	private int height; // 0xC4
	private WarBoardTreasureListComponent.DialogType dialogType; // 0xC8

	// Properties
	protected override GameObject closeBtnObject { get; }

	// Methods

	// RVA: 0x1A8EA44 Offset: 0x1A8EA44 VA: 0x1A8EA44
	public void .ctor() { }

	// RVA: 0x1A8EAB8 Offset: 0x1A8EAB8 VA: 0x1A8EAB8
	public void Init() { }

	// RVA: 0x1A8EB00 Offset: 0x1A8EB00 VA: 0x1A8EB00
	public void Open(int[] treasureList, WarBoardTreasureListComponent.DialogType type, Action closeCallback) { }

