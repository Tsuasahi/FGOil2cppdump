	public void SetCriticalDecisionType(BattleCommandData.CriticalDecisionType type) { }

	// RVA: 0x10463D0 Offset: 0x10463D0 VA: 0x10463D0
	public void UpdateCritical(BattleServantData actSvt, BattleServantData optSvt, bool isUpdateFirst = False) { }

	// RVA: 0x10464D0 Offset: 0x10464D0 VA: 0x10464D0
	private void UpdateCommandType() { }

	// RVA: 0x103C94C Offset: 0x103C94C VA: 0x103C94C
	public void SetBattleBuffData(BattleBuffData setData) { }

	// RVA: 0x1046508 Offset: 0x1046508 VA: 0x1046508
	public bool IsCommandCardTypeChanged() { }

	// RVA: 0x1046544 Offset: 0x1046544 VA: 0x1046544
	public BattleBuffData.BuffData GetCommandCardTypeChangeBuff() { }

	// RVA: 0x1046558 Offset: 0x1046558 VA: 0x1046558
	public int GetOriginalType() { }

	// RVA: 0x1046560 Offset: 0x1046560 VA: 0x1046560
	public void SetSelectedType() { }

	// RVA: 0x1046594 Offset: 0x1046594 VA: 0x1046594
	public void ResetSelectedType() { }

	// RVA: 0x1045130 Offset: 0x1045130 VA: 0x1045130
	public BattleBuffData.BuffData[] GetCommandCodeBuffArray() { }

	// RVA: 0x10465A0 Offset: 0x10465A0 VA: 0x10465A0
	private static void .cctor() { }
}

// Namespace: 
public enum BattleCommandData.CriticalDecisionType // TypeDefIndex: 9019
{
	// Fields
	public int value__; // 0x0
	public const BattleCommandData.CriticalDecisionType NONE = 0;
	public const BattleCommandData.CriticalDecisionType ENEMY_NORMAL = 1;
	public const BattleCommandData.CriticalDecisionType FORCE = 2;
}

// Namespace: 
public class BattleTreasureDeviceCommandData : BattleCommandData // TypeDefIndex: 9020
{
	// Methods

	// RVA: 0x1572D74 Offset: 0x1572D74 VA: 0x1572D74
	public void .ctor(BattleServantData svtData) { }
}

// Namespace: 
public class BattleCommandParamComponent : BaseMonoBehaviour // TypeDefIndex: 9021
{
	// Fields
	public Transform NumberTr; // 0x18
	public Transform YakuTr; // 0x20
	private GameObject numberobj; // 0x28
	private GameObject[] yakuobj; // 0x30

	// Methods

	// RVA: 0x10465F4 Offset: 0x10465F4 VA: 0x10465F4
	public void .ctor() { }

	// RVA: 0x10465FC Offset: 0x10465FC VA: 0x10465FC
	public void setInit() { }

	// RVA: 0x1046750 Offset: 0x1046750 VA: 0x1046750
	public void resetNo() { }

	// RVA: 0x1046804 Offset: 0x1046804 VA: 0x1046804
	public void setNo(int count) { }

	// RVA: 0x10468C4 Offset: 0x10468C4 VA: 0x10468C4
	public void resetComboGuid() { }

	// RVA: 0x10469A8 Offset: 0x10469A8 VA: 0x10469A8
	public void setComboGuid(int index, BattleComboData combo) { }
}

// Namespace: 
public class BattleCommandSealStatus // TypeDefIndex: 9022
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC648C0 Offset: 0xC648C0 VA: 0xC648C0
	[DebuggerBrowsableAttribute] // RVA: 0xC648C0 Offset: 0xC648C0 VA: 0xC648C0
	private BattleBuffData.BuffData <SleepBuff>k__BackingField; // 0x10
	private List<BattleCommandSealStatus.Status> statusList; // 0x18
	private BattleCommandData battleCommandData; // 0x20
	private BattleServantData svtData; // 0x28
	private BattleData data; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC648FC Offset: 0xC648FC VA: 0xC648FC
	private static Predicate<BattleCommandSealStatus.Status> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC6490C Offset: 0xC6490C VA: 0xC6490C
	private static Predicate<BattleCommandSealStatus.Status> <>f__am$cache1; // 0x8

	// Properties
	public BattleCommandSealStatus.Status PrioredStatus { get; }
	public bool HasKindOfSealed { get; }
	public bool HasKindOfDontAction { get; }
	public BattleBuffData.BuffData SleepBuff { get; set; }

	// Methods

	// RVA: 0x1039EA0 Offset: 0x1039EA0 VA: 0x1039EA0
	public void .ctor() { }

	// RVA: 0x103DA3C Offset: 0x103DA3C VA: 0x103DA3C
	public void .ctor(BattleCommandData battleCommandData, BattleServantData svtData, BattleData data) { }

	// RVA: 0x103DDC0 Offset: 0x103DDC0 VA: 0x103DDC0
	public BattleCommandSealStatus.Status get_PrioredStatus() { }

	// RVA: 0x1039F3C Offset: 0x1039F3C VA: 0x1039F3C
	public bool get_HasKindOfSealed() { }

	// RVA: 0x103A040 Offset: 0x103A040 VA: 0x103A040
	public bool get_HasKindOfDontAction() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD3B0 Offset: 0xCCD3B0 VA: 0xCCD3B0
	// RVA: 0x103DE4C Offset: 0x103DE4C VA: 0x103DE4C
	public BattleBuffData.BuffData get_SleepBuff() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD3C0 Offset: 0xCCD3C0 VA: 0xCCD3C0
	// RVA: 0x1046B8C Offset: 0x1046B8C VA: 0x1046B8C
	private void set_SleepBuff(BattleBuffData.BuffData value) { }

	// RVA: 0x1046B68 Offset: 0x1046B68 VA: 0x1046B68
	private void DetectSealStatus() { }

	// RVA: 0x1046B94 Offset: 0x1046B94 VA: 0x1046B94
	private void DetectCommonSealStatus() { }

	// RVA: 0x1046E6C Offset: 0x1046E6C VA: 0x1046E6C
	private void DetectTreasureDeviceSealStatus() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD3D0 Offset: 0xCCD3D0 VA: 0xCCD3D0
	// RVA: 0x104703C Offset: 0x104703C VA: 0x104703C
	private static bool <get_HasKindOfSealed>m__0(BattleCommandSealStatus.Status x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD3E0 Offset: 0xCCD3E0 VA: 0xCCD3E0
	// RVA: 0x104704C Offset: 0x104704C VA: 0x104704C
	private static bool <get_HasKindOfDontAction>m__1(BattleCommandSealStatus.Status x) { }
}

// Namespace: 
public enum BattleCommandSealStatus.Status // TypeDefIndex: 9023
{
	// Fields
	public int value__; // 0x0
	public const BattleCommandSealStatus.Status DONOT_ACT_BY_PERMANENT_SLEEP = 0;
	public const BattleCommandSealStatus.Status DONOT_ACT_BY_SLEEP = 1;
	public const BattleCommandSealStatus.Status DONOT_ACT_BY_OTHER_DEBUFF = 2;
	public const BattleCommandSealStatus.Status NO_FUNC_HEROINE = 3;
	public const BattleCommandSealStatus.Status NO_FUNC = 4;
	public const BattleCommandSealStatus.Status DONOT_NOBLE = 5;
	public const BattleCommandSealStatus.Status SHORTAGE_CRITICAL_STAR = 6;
	public const BattleCommandSealStatus.Status DONOT_NOBLE_COND_MISMATCH = 7;
	public const BattleCommandSealStatus.Status DONOT_ACT_WITH_TYPE_SP = 8;
	public const BattleCommandSealStatus.Status NONE = 2147483647;
}

// Namespace: 
public class BattleSelectCommandComponent : MonoBehaviour // TypeDefIndex: 9024
{
	// Fields
	public UISprite markSprite; // 0x18
	private static readonly string[] frameFileList; // 0x0

	// Methods

	// RVA: 0xF14D8C Offset: 0xF14D8C VA: 0xF14D8C
	public void .ctor() { }

	// RVA: 0xF14D94 Offset: 0xF14D94 VA: 0xF14D94
	public void setIndex(int index) { }

	// RVA: 0xF14F24 Offset: 0xF14F24 VA: 0xF14F24
	private static void .cctor() { }
}

// Namespace: 
public class CommandCodeInfo // TypeDefIndex: 9025
{
	// Fields
	public long id; // 0x10
	public int userId; // 0x18
	public int commandCodeId; // 0x1C

	// Methods

	// RVA: 0x1660A04 Offset: 0x1660A04 VA: 0x1660A04
	public void .ctor() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2A8D4 Offset: 0xC2A8D4 VA: 0xC2A8D4
[AddComponentMenu] // RVA: 0xC2A8D4 Offset: 0xC2A8D4 VA: 0xC2A8D4
public class ContrastImageEffect : ImageEffectBase // TypeDefIndex: 9026
{
	// Fields
	public float saturation; // 0x28
	public float contrast; // 0x2C

	// Methods

	// RVA: 0x1462DF8 Offset: 0x1462DF8 VA: 0x1462DF8
	public void .ctor() { }

	// RVA: 0x1462E00 Offset: 0x1462E00 VA: 0x1462E00
	private void OnRenderImage(RenderTexture source, RenderTexture destination) { }
}

// Namespace: 
public class BitValue<T> // TypeDefIndex: 9027
{
	// Fields
	protected int value; // 0x0
	protected Func<T, int> convertFunc; // 0x0

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(Func<T, int> func) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x22650DC Offset: 0x22650DC VA: 0x22650DC
	|-BitValue<CommonMotionSkip.State>..ctor
	|
	|-RVA: 0x22652D4 Offset: 0x22652D4 VA: 0x22652D4
	|-BitValue<object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void On(T val) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2265114 Offset: 0x2265114 VA: 0x2265114
	|-BitValue<CommonMotionSkip.State>.On
	|
	|-RVA: 0x226530C Offset: 0x226530C VA: 0x226530C
	|-BitValue<object>.On
	*/

	// RVA: -1 Offset: -1
	public void Off(T val) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2265180 Offset: 0x2265180 VA: 0x2265180
	|-BitValue<CommonMotionSkip.State>.Off
	|
	|-RVA: 0x2265378 Offset: 0x2265378 VA: 0x2265378
	|-BitValue<object>.Off
	*/

	// RVA: -1 Offset: -1
	public bool Check(T val) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x22651EC Offset: 0x22651EC VA: 0x22651EC
	|-BitValue<CommonMotionSkip.State>.Check
	|
	|-RVA: 0x22653E4 Offset: 0x22653E4 VA: 0x22653E4
	|-BitValue<object>.Check
	*/

	// RVA: -1 Offset: -1
	public bool CheckAndOff(T val) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226524C Offset: 0x226524C VA: 0x226524C
	|-BitValue<CommonMotionSkip.State>.CheckAndOff
	|
	|-RVA: 0x2265444 Offset: 0x2265444 VA: 0x2265444
	|-BitValue<object>.CheckAndOff
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public virtual void Reset() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x22652CC Offset: 0x22652CC VA: 0x22652CC
	|-BitValue<CommonMotionSkip.State>.Reset
	|
	|-RVA: 0x22654C4 Offset: 0x22654C4 VA: 0x22654C4
	|-BitValue<object>.Reset
	*/
}

// Namespace: 
public class ItemDroppedSkillShiftInfo // TypeDefIndex: 9028
{
	// Fields
	private List<ItemDroppedSkillShiftInfo.ServantInfo> servantInfoList; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC6491C Offset: 0xC6491C VA: 0xC6491C
	private static Func<ItemDroppedSkillShiftInfo.ServantInfo, int> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC6492C Offset: 0xC6492C VA: 0xC6492C
	private static Func<ItemDroppedSkillShiftInfo.ServantInfo, long> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x11BAFF0 Offset: 0x11BAFF0 VA: 0x11BAFF0
	public void .ctor() { }

	// RVA: 0x11BB060 Offset: 0x11BB060 VA: 0x11BB060
	public int[] GetUniqueIdArray() { }

	// RVA: 0x11BB130 Offset: 0x11BB130 VA: 0x11BB130
	public long[] GetNpcSvtIdArray() { }

	// RVA: 0x11BB1FC Offset: 0x11BB1FC VA: 0x11BB1FC
	public bool HasUniqueId(int uniqueId) { }

	// RVA: 0x11BB2C8 Offset: 0x11BB2C8 VA: 0x11BB2C8
	public void Register(BattleServantData svtData) { }

	// RVA: 0x11BB3EC Offset: 0x11BB3EC VA: 0x11BB3EC
	public void SetSaveData(BattleData.SaveData saveData) { }

	// RVA: 0x11BB548 Offset: 0x11BB548 VA: 0x11BB548
	private bool IsSaveDataAvailable(BattleData.SaveData saveData) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD3F0 Offset: 0xCCD3F0 VA: 0xCCD3F0
	// RVA: 0x11BB598 Offset: 0x11BB598 VA: 0x11BB598
	private static int <GetUniqueIdArray>m__0(ItemDroppedSkillShiftInfo.ServantInfo x) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD400 Offset: 0xCCD400 VA: 0xCCD400
	// RVA: 0x11BB5C8 Offset: 0x11BB5C8 VA: 0x11BB5C8
	private static long <GetNpcSvtIdArray>m__1(ItemDroppedSkillShiftInfo.ServantInfo x) { }
}

// Namespace: 
public class ItemDroppedSkillShiftInfo.ServantInfo // TypeDefIndex: 9029
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC6493C Offset: 0xC6493C VA: 0xC6493C
	[DebuggerBrowsableAttribute] // RVA: 0xC6493C Offset: 0xC6493C VA: 0xC6493C
	private int <uniqueId>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC64978 Offset: 0xC64978 VA: 0xC64978
	[DebuggerBrowsableAttribute] // RVA: 0xC64978 Offset: 0xC64978 VA: 0xC64978
	private long <npcSvtId>k__BackingField; // 0x18

	// Properties
	public int uniqueId { get; set; }
	public long npcSvtId { get; set; }

	// Methods

	// RVA: 0x11BB3B0 Offset: 0x11BB3B0 VA: 0x11BB3B0
	public void .ctor(int uniqueId, long shiftNpcId) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD410 Offset: 0xCCD410 VA: 0xCCD410
	// RVA: 0x11BB5C0 Offset: 0x11BB5C0 VA: 0x11BB5C0
	public int get_uniqueId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD420 Offset: 0xCCD420 VA: 0xCCD420
	// RVA: 0x11BB634 Offset: 0x11BB634 VA: 0x11BB634
	private void set_uniqueId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD430 Offset: 0xCCD430 VA: 0xCCD430
	// RVA: 0x11BB5F0 Offset: 0x11BB5F0 VA: 0x11BB5F0
	public long get_npcSvtId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD440 Offset: 0xCCD440 VA: 0xCCD440
	// RVA: 0x11BB63C Offset: 0x11BB63C VA: 0x11BB63C
	private void set_npcSvtId(long value) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC43FF4 Offset: 0xC43FF4 VA: 0xC43FF4
private sealed class ItemDroppedSkillShiftInfo.<HasUniqueId>c__AnonStorey0 // TypeDefIndex: 9030
{
	// Fields
	internal int uniqueId; // 0x10

	// Methods

	// RVA: 0x11BB2C0 Offset: 0x11BB2C0 VA: 0x11BB2C0
	public void .ctor() { }

	// RVA: 0x11BB5F8 Offset: 0x11BB5F8 VA: 0x11BB5F8
	internal bool <>m__0(ItemDroppedSkillShiftInfo.ServantInfo x) { }
}

// Namespace: 
public class ServantAssetArgs // TypeDefIndex: 9031
{
	// Fields
	private const string UniqueKeyGlue = "_";
	[CompilerGeneratedAttribute] // RVA: 0xC649B4 Offset: 0xC649B4 VA: 0xC649B4
	[DebuggerBrowsableAttribute] // RVA: 0xC649B4 Offset: 0xC649B4 VA: 0xC649B4
	private int <SvtId>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC649F0 Offset: 0xC649F0 VA: 0xC649F0
	[DebuggerBrowsableAttribute] // RVA: 0xC649F0 Offset: 0xC649F0 VA: 0xC649F0
	private int <CommandImageSvtId>k__BackingField; // 0x14
	[CompilerGeneratedAttribute] // RVA: 0xC64A2C Offset: 0xC64A2C VA: 0xC64A2C
	[DebuggerBrowsableAttribute] // RVA: 0xC64A2C Offset: 0xC64A2C VA: 0xC64A2C
	private int <DispImageSvtId>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC64A68 Offset: 0xC64A68 VA: 0xC64A68
	[DebuggerBrowsableAttribute] // RVA: 0xC64A68 Offset: 0xC64A68 VA: 0xC64A68
	private int <DispLimitCount>k__BackingField; // 0x1C
	[CompilerGeneratedAttribute] // RVA: 0xC64AA4 Offset: 0xC64AA4 VA: 0xC64AA4
	[DebuggerBrowsableAttribute] // RVA: 0xC64AA4 Offset: 0xC64AA4 VA: 0xC64AA4
	private int <Weapon>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC64AE0 Offset: 0xC64AE0 VA: 0xC64AE0
	[DebuggerBrowsableAttribute] // RVA: 0xC64AE0 Offset: 0xC64AE0 VA: 0xC64AE0
	private int <WeaponEffectId>k__BackingField; // 0x24
	[CompilerGeneratedAttribute] // RVA: 0xC64B1C Offset: 0xC64B1C VA: 0xC64B1C
	[DebuggerBrowsableAttribute] // RVA: 0xC64B1C Offset: 0xC64B1C VA: 0xC64B1C
	private int <EffectFolder>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC64B58 Offset: 0xC64B58 VA: 0xC64B58
	[DebuggerBrowsableAttribute] // RVA: 0xC64B58 Offset: 0xC64B58 VA: 0xC64B58
	private int <CameraId>k__BackingField; // 0x2C
	[CompilerGeneratedAttribute] // RVA: 0xC64B94 Offset: 0xC64B94 VA: 0xC64B94
	[DebuggerBrowsableAttribute] // RVA: 0xC64B94 Offset: 0xC64B94 VA: 0xC64B94
	private int <UniqueId>k__BackingField; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC64BD0 Offset: 0xC64BD0 VA: 0xC64BD0
	[DebuggerBrowsableAttribute] // RVA: 0xC64BD0 Offset: 0xC64BD0 VA: 0xC64BD0
	private int <OverwriteSvtVoiceId>k__BackingField; // 0x34
	[CompilerGeneratedAttribute] // RVA: 0xC64C0C Offset: 0xC64C0C VA: 0xC64C0C
	[DebuggerBrowsableAttribute] // RVA: 0xC64C0C Offset: 0xC64C0C VA: 0xC64C0C
	private int[] <CommandCodeIds>k__BackingField; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC64C48 Offset: 0xC64C48 VA: 0xC64C48
	[DebuggerBrowsableAttribute] // RVA: 0xC64C48 Offset: 0xC64C48 VA: 0xC64C48
	private int <AppearanceId>k__BackingField; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC64C84 Offset: 0xC64C84 VA: 0xC64C84
	[DebuggerBrowsableAttribute] // RVA: 0xC64C84 Offset: 0xC64C84 VA: 0xC64C84
	private List<BattleSkillInfoData> <skillList>k__BackingField; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC64CC0 Offset: 0xC64CC0 VA: 0xC64CC0
	[DebuggerBrowsableAttribute] // RVA: 0xC64CC0 Offset: 0xC64CC0 VA: 0xC64CC0
	private int <UnloadCount>k__BackingField; // 0x50
	private string uniqueKey; // 0x58

	// Properties
	public int SvtId { get; set; }
	public int CommandImageSvtId { get; set; }
	public int DispImageSvtId { get; set; }
	public int DispLimitCount { get; set; }
	public int Weapon { get; set; }
	public int WeaponEffectId { get; set; }
	public int EffectFolder { get; set; }
	public int CameraId { get; set; }
	public int UniqueId { get; set; }
	public int OverwriteSvtVoiceId { get; set; }
	public int[] CommandCodeIds { get; set; }
	public int AppearanceId { get; set; }
	public List<BattleSkillInfoData> skillList { get; set; }
	public int UnloadCount { get; set; }
	public string UniqueKey { get; }

	// Methods

	// RVA: 0x1739E10 Offset: 0x1739E10 VA: 0x1739E10
	public void .ctor(BattleServantData svtData) { }

	// RVA: 0x173A09C Offset: 0x173A09C VA: 0x173A09C
	public void .ctor(int svtId, int limitCount, int overwriteSvtVoiceId = 0, int appearanceId = 0, int weapon = 0) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD450 Offset: 0xCCD450 VA: 0xCCD450
	// RVA: 0x173A0F8 Offset: 0x173A0F8 VA: 0x173A0F8
	public int get_SvtId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD460 Offset: 0xCCD460 VA: 0xCCD460
	// RVA: 0x173A034 Offset: 0x173A034 VA: 0x173A034
	protected void set_SvtId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD470 Offset: 0xCCD470 VA: 0xCCD470
	// RVA: 0x173A100 Offset: 0x173A100 VA: 0x173A100
	public int get_CommandImageSvtId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD480 Offset: 0xCCD480 VA: 0xCCD480
	// RVA: 0x173A03C Offset: 0x173A03C VA: 0x173A03C
	protected void set_CommandImageSvtId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD490 Offset: 0xCCD490 VA: 0xCCD490
	// RVA: 0x173A108 Offset: 0x173A108 VA: 0x173A108
	public int get_DispImageSvtId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD4A0 Offset: 0xCCD4A0 VA: 0xCCD4A0
	// RVA: 0x173A044 Offset: 0x173A044 VA: 0x173A044
	protected void set_DispImageSvtId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD4B0 Offset: 0xCCD4B0 VA: 0xCCD4B0
	// RVA: 0x173A110 Offset: 0x173A110 VA: 0x173A110
	public int get_DispLimitCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD4C0 Offset: 0xCCD4C0 VA: 0xCCD4C0
	// RVA: 0x173A04C Offset: 0x173A04C VA: 0x173A04C
	protected void set_DispLimitCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD4D0 Offset: 0xCCD4D0 VA: 0xCCD4D0
	// RVA: 0x173A118 Offset: 0x173A118 VA: 0x173A118
	public int get_Weapon() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD4E0 Offset: 0xCCD4E0 VA: 0xCCD4E0
	// RVA: 0x173A054 Offset: 0x173A054 VA: 0x173A054
	protected void set_Weapon(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD4F0 Offset: 0xCCD4F0 VA: 0xCCD4F0
	// RVA: 0x173A120 Offset: 0x173A120 VA: 0x173A120
	public int get_WeaponEffectId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD500 Offset: 0xCCD500 VA: 0xCCD500
	// RVA: 0x173A05C Offset: 0x173A05C VA: 0x173A05C
	protected void set_WeaponEffectId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD510 Offset: 0xCCD510 VA: 0xCCD510
	// RVA: 0x173A128 Offset: 0x173A128 VA: 0x173A128
	public int get_EffectFolder() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD520 Offset: 0xCCD520 VA: 0xCCD520
	// RVA: 0x173A064 Offset: 0x173A064 VA: 0x173A064
	protected void set_EffectFolder(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD530 Offset: 0xCCD530 VA: 0xCCD530
	// RVA: 0x173A130 Offset: 0x173A130 VA: 0x173A130
	public int get_CameraId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD540 Offset: 0xCCD540 VA: 0xCCD540
	// RVA: 0x173A06C Offset: 0x173A06C VA: 0x173A06C
	protected void set_CameraId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD550 Offset: 0xCCD550 VA: 0xCCD550
	// RVA: 0x173A138 Offset: 0x173A138 VA: 0x173A138
	public int get_UniqueId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD560 Offset: 0xCCD560 VA: 0xCCD560
	// RVA: 0x173A074 Offset: 0x173A074 VA: 0x173A074
	protected void set_UniqueId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD570 Offset: 0xCCD570 VA: 0xCCD570
	// RVA: 0x173A140 Offset: 0x173A140 VA: 0x173A140
	public int get_OverwriteSvtVoiceId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD580 Offset: 0xCCD580 VA: 0xCCD580
	// RVA: 0x173A07C Offset: 0x173A07C VA: 0x173A07C
	protected void set_OverwriteSvtVoiceId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD590 Offset: 0xCCD590 VA: 0xCCD590
	// RVA: 0x173A148 Offset: 0x173A148 VA: 0x173A148
	public int[] get_CommandCodeIds() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD5A0 Offset: 0xCCD5A0 VA: 0xCCD5A0
	// RVA: 0x173A08C Offset: 0x173A08C VA: 0x173A08C
	protected void set_CommandCodeIds(int[] value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD5B0 Offset: 0xCCD5B0 VA: 0xCCD5B0
	// RVA: 0x173A150 Offset: 0x173A150 VA: 0x173A150
	public int get_AppearanceId() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD5C0 Offset: 0xCCD5C0 VA: 0xCCD5C0
	// RVA: 0x173A084 Offset: 0x173A084 VA: 0x173A084
	protected void set_AppearanceId(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD5D0 Offset: 0xCCD5D0 VA: 0xCCD5D0
	// RVA: 0x173A158 Offset: 0x173A158 VA: 0x173A158
	public List<BattleSkillInfoData> get_skillList() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD5E0 Offset: 0xCCD5E0 VA: 0xCCD5E0
	// RVA: 0x173A094 Offset: 0x173A094 VA: 0x173A094
	protected void set_skillList(List<BattleSkillInfoData> value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD5F0 Offset: 0xCCD5F0 VA: 0xCCD5F0
	// RVA: 0x173A160 Offset: 0x173A160 VA: 0x173A160
	public int get_UnloadCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD600 Offset: 0xCCD600 VA: 0xCCD600
	// RVA: 0x173A168 Offset: 0x173A168 VA: 0x173A168
	public void set_UnloadCount(int value) { }

	// RVA: 0x173A170 Offset: 0x173A170 VA: 0x173A170
	public string get_UniqueKey() { }

	// RVA: 0x173A47C Offset: 0x173A47C VA: 0x173A47C
	private string GenerateUniqueKey(string[] para) { }
}

// Namespace: 
public class EffectComponent : BaseMonoBehaviour // TypeDefIndex: 9032
{
	// Fields
	protected static int _RenderQueue; // 0x0
	[SerializeField] // RVA: 0xC64CFC Offset: 0xC64CFC VA: 0xC64CFC
	public float endtime; // 0x18
	public float losttime; // 0x1C
	public bool uieffect; // 0x20
	public bool loop; // 0x21
	public bool deleteInstantly; // 0x22
	public UILabel label; // 0x28
	public GameObject mstobject; // 0x30
	public UITexture texture; // 0x38
	public ParticleSystem[] particlelist; // 0x40
	private Spawner spawner; // 0x48
	private float totaltime; // 0x50
	private BattleActorControl battleActor; // 0x58
	private int effectBuffEffectId; // 0x60
	private string filename; // 0x68
	private UIStandFigureR myStandFigure; // 0x70
	private Action FigureLoadCallback; // 0x78

	// Methods

	// RVA: 0x16F3EE8 Offset: 0x16F3EE8 VA: 0x16F3EE8
	public void .ctor() { }

	// RVA: 0x16F3EFC Offset: 0x16F3EFC VA: 0x16F3EFC
	public void Init() { }

	// RVA: 0x16F40B0 Offset: 0x16F40B0 VA: 0x16F40B0
	private void Start() { }

	// RVA: 0x16F4108 Offset: 0x16F4108 VA: 0x16F4108
	private void OnDestroy() { }

	// RVA: 0x16F42E0 Offset: 0x16F42E0 VA: 0x16F42E0
	private void OnSpawn() { }

	// RVA: 0x16F42E8 Offset: 0x16F42E8 VA: 0x16F42E8
	private void Update() { }

	// RVA: 0x16F4580 Offset: 0x16F4580 VA: 0x16F4580
	public void setLabel(string text) { }

	// RVA: 0x16F4630 Offset: 0x16F4630 VA: 0x16F4630
	public void setTexture(string filename) { }

	// RVA: 0x16F4700 Offset: 0x16F4700 VA: 0x16F4700
	public void replaceFigure(GameObject obj) { }

	// RVA: 0x16F49AC Offset: 0x16F49AC VA: 0x16F49AC
	public void setFigure(int svtId, int limit, Action callback) { }

	// RVA: 0x16F4C64 Offset: 0x16F4C64 VA: 0x16F4C64
	private void onFigureAssetLoad() { }

	// RVA: 0x16F4C78 Offset: 0x16F4C78 VA: 0x16F4C78
	public void EndLoadAsset(AssetData loadData) { }

	// RVA: 0x16F4D68 Offset: 0x16F4D68 VA: 0x16F4D68
	public void SetBattleActor(BattleActorControl actor, int buffEffectId) { }

	// RVA: 0x16F44DC Offset: 0x16F44DC VA: 0x16F44DC
	private void StartActorBuffEffect() { }

	// RVA: 0x16F4DA8 Offset: 0x16F4DA8 VA: 0x16F4DA8
	private static void .cctor() { }
}

// Namespace: 
public class EffectSynchronize : MonoBehaviour // TypeDefIndex: 9033
{
	// Fields
	protected static List<Animation> animCompList; // 0x0
	protected static List<SimpleAnimation> simpleAnimCompList; // 0x8
	protected SimpleAnimation simpleAnimComp; // 0x18
	protected Animation animComp; // 0x20
	[SerializeField] // RVA: 0xC64D0C Offset: 0xC64D0C VA: 0xC64D0C
	[TooltipAttribute] // RVA: 0xC64D0C Offset: 0xC64D0C VA: 0xC64D0C
	private string syncAnimStr; // 0x28
	[SerializeField] // RVA: 0xC64D58 Offset: 0xC64D58 VA: 0xC64D58
	[TooltipAttribute] // RVA: 0xC64D58 Offset: 0xC64D58 VA: 0xC64D58
	private string selfAnimStr; // 0x30

	// Methods

	// RVA: 0x16F5F20 Offset: 0x16F5F20 VA: 0x16F5F20
	public void .ctor() { }

	// RVA: 0x16F5F28 Offset: 0x16F5F28 VA: 0x16F5F28
	private void Awake() { }

	// RVA: 0x16F60F4 Offset: 0x16F60F4 VA: 0x16F60F4
	private void OnDestroy() { }

	// RVA: 0x16F624C Offset: 0x16F624C VA: 0x16F624C
	private bool IsEqualsName() { }

	// RVA: 0x16F6280 Offset: 0x16F6280 VA: 0x16F6280
	public void synchronize() { }

	// RVA: 0x16F699C Offset: 0x16F699C VA: 0x16F699C
	private void OnEnable() { }

	// RVA: 0x16F6A9C Offset: 0x16F6A9C VA: 0x16F6A9C
	private static void .cctor() { }
}

// Namespace: 
public class EnemyFieldStatus : BattleFieldStatus // TypeDefIndex: 9034
{
	// Methods

	// RVA: 0x16FDA2C Offset: 0x16FDA2C VA: 0x16FDA2C
	public void .ctor() { }

	// RVA: 0x16FDA34 Offset: 0x16FDA34 VA: 0x16FDA34 Slot: 6
	public override double[] getAiParam(BattleData bData, ConditionsInformation.PARAMATER param, int turn, int actCnt, long[] checkparams) { }
}

// Namespace: 
public interface IGimmickEffect // TypeDefIndex: 9035
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void SetGimmick(int svtId, BattleActionData.GimmickData data, Action endCb);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void EndGimmick();

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void StartGimmick(Action animCallback);

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void PlaySe(string seName);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void PlayVoice(int index);
}

// Namespace: 
public class AiLogic // TypeDefIndex: 9036
{
	// Fields
	private BattleData Bdata; // 0x10
	private AiLogic.AiInfo.AITYPE _aiType; // 0x18
	private List<AiBaseEntity> _thinkList; // 0x20
	private AiActMaster aiActMst; // 0x28
	private long[] wkZero; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC64DA4 Offset: 0xC64DA4 VA: 0xC64DA4
	private static Comparison<AiBaseEntity> <>f__am$cache0; // 0x0

	// Methods

	// RVA: 0x1070AC0 Offset: 0x1070AC0 VA: 0x1070AC0
	public void .ctor() { }

	[ConditionalAttribute] // RVA: 0xCCD610 Offset: 0xCCD610 VA: 0xCCD610
	// RVA: 0x1070B20 Offset: 0x1070B20 VA: 0x1070B20
	protected void LOG(string str) { }

	[ConditionalAttribute] // RVA: 0xCCD648 Offset: 0xCCD648 VA: 0xCCD648
	// RVA: 0x1070B24 Offset: 0x1070B24 VA: 0x1070B24
	protected void INITLOG() { }

	// RVA: 0x1070B28 Offset: 0x1070B28 VA: 0x1070B28
	public void Initialize(BattleData data) { }

	// RVA: 0x1070BB0 Offset: 0x1070BB0 VA: 0x1070BB0
	public void updateThinkGroup(AiLogic.AiInfo aiInfo, AiState aiState) { }

	// RVA: 0x1070F9C Offset: 0x1070F9C VA: 0x1070F9C
	public bool checkThinking(BattleServantData svtData, AiLogic.PROC_STATE procState) { }

	// RVA: 0x10711D8 Offset: 0x10711D8 VA: 0x10711D8
	public bool checkThinking(BattleFieldData fieldData, AiLogic.PROC_STATE procState) { }

	// RVA: 0x10710BC Offset: 0x10710BC VA: 0x10710BC
	private bool checkThinkingBase(AiLogic.AiInfo aiInfo, AiLogic.PROC_STATE procState) { }

	// RVA: 0x10712B8 Offset: 0x10712B8 VA: 0x10712B8
	public AiEntity getAction(BattleServantData svtData, AiLogic.PROC_STATE procState, int turnCount, int actCount) { }

	// RVA: 0x1071564 Offset: 0x1071564 VA: 0x1071564
	public AiFieldEntity getAction(BattleFieldData fieldData, AiLogic.PROC_STATE procState, int turnCount, int actCount) { }

	// RVA: 0x10713E4 Offset: 0x10713E4 VA: 0x10713E4
	private AiBaseEntity getActionBase(AiLogic.AiInfo aiInfo, AiLogic.PROC_STATE procState, int turnCount, int actCount) { }

	// RVA: 0x1071688 Offset: 0x1071688 VA: 0x1071688
	private AiBaseEntity getBasicAct(AiLogic.AiInfo aiInfo, AiLogic.PROC_STATE procState, int turn, int actcnt) { }

	// RVA: 0x1071C4C Offset: 0x1071C4C VA: 0x1071C4C
	private bool checkThinking(AiLogic.AiInfo aiInfo, AiBaseEntity aiEnt, int turn, int actcnt) { }

	// RVA: 0x1073138 Offset: 0x1073138 VA: 0x1073138
	private void getTargetPosServant(List<AiInterface> targetList, bool isOpponent, AiLogic.AiInfo aiInfo, BattleLogicTarget.Position pos) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCD680 Offset: 0xCCD680 VA: 0xCCD680
	// RVA: 0x1073240 Offset: 0x1073240 VA: 0x1073240
	private static int <getBasicAct>m__0(AiBaseEntity a, AiBaseEntity b) { }
}

// Namespace: 
public enum AiLogic.PROC_STATE // TypeDefIndex: 9037
{
	// Fields
	public int value__; // 0x0
	public const AiLogic.PROC_STATE NONE = 0;
	public const AiLogic.PROC_STATE NOMAL = 1;
	public const AiLogic.PROC_STATE DEAD = 2;
	public const AiLogic.PROC_STATE PLAYERACTIONEND = 3;
	public const AiLogic.PROC_STATE TURN_START = 4;
	public const AiLogic.PROC_STATE TURN_END = 5;
	public const AiLogic.PROC_STATE WAVE_START = 6;
	public const AiLogic.PROC_STATE MAXNP = 7;
	public const AiLogic.PROC_STATE USENP_TARGET = 8;
	public const AiLogic.PROC_STATE TURN_ENEMY_START = 10;
	public const AiLogic.PROC_STATE TURN_ENEMY_END = 11;
	public const AiLogic.PROC_STATE TURN_PLAYER_START = 12;
	public const AiLogic.PROC_STATE TURN_PLAYER_END = 13;
	public const AiLogic.PROC_STATE SHIFT_SERVANT_AFTER = 14;
	public const AiLogic.PROC_STATE ENTRY_UNIT = 15;
	public const AiLogic.PROC_STATE TURN_START_PREV = 16;
}

// Namespace: 
public class AiLogic.AiInfo // TypeDefIndex: 9038
{
	// Fields
	public AiLogic.AiInfo.AITYPE aiType; // 0x10
	public int uniqueId; // 0x14
	public AiState aiState; // 0x18

	// Methods

	// RVA: 0x107107C Offset: 0x107107C VA: 0x107107C
	public void .ctor(AiLogic.AiInfo.AITYPE inAiType, int inUniqueId, AiState inAiSate) { }
}

// Namespace: 
public enum AiLogic.AiInfo.AITYPE // TypeDefIndex: 9039
{
	// Fields
	public int value__; // 0x0
	public const AiLogic.AiInfo.AITYPE NONE = 0;
	public const AiLogic.AiInfo.AITYPE SERVANT = 1;
	public const AiLogic.AiInfo.AITYPE FIELD = 2;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44004 Offset: 0xC44004 VA: 0xC44004
private sealed class AiLogic.<checkThinkingBase>c__AnonStorey0 // TypeDefIndex: 9040
{
	// Fields
	internal AiLogic.PROC_STATE procState; // 0x10

	// Methods

	// RVA: 0x10712B0 Offset: 0x10712B0 VA: 0x10712B0
	public void .ctor() { }

	// RVA: 0x1073284 Offset: 0x1073284 VA: 0x1073284
	internal bool <>m__0(AiBaseEntity s) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44014 Offset: 0xC44014 VA: 0xC44014
private sealed class AiLogic.<getBasicAct>c__AnonStorey1 // TypeDefIndex: 9041
{
	// Fields
	internal AiLogic.PROC_STATE procState; // 0x10
	internal int actcnt; // 0x14

	// Methods

	// RVA: 0x1071C3C Offset: 0x1071C3C VA: 0x1071C3C
	public void .ctor() { }

	// RVA: 0x10732C4 Offset: 0x10732C4 VA: 0x10732C4
	internal bool <>m__0(AiBaseEntity s) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44024 Offset: 0xC44024 VA: 0xC44024
private sealed class AiLogic.<getBasicAct>c__AnonStorey2 // TypeDefIndex: 9042
{
	// Fields
	internal int priority; // 0x10

	// Methods

	// RVA: 0x1071C44 Offset: 0x1071C44 VA: 0x1071C44
	public void .ctor() { }

	// RVA: 0x107330C Offset: 0x107330C VA: 0x107330C
	internal bool <>m__0(AiBaseEntity s) { }
}

// Namespace: 
public class ConditionsInformation // TypeDefIndex: 9043
{
	// Fields
	private static Dictionary<Ai.COND, ConditionsInformation.CheckInfo> FuncList; // 0x0

	// Methods

	// RVA: 0x1456304 Offset: 0x1456304 VA: 0x1456304
	public void .ctor() { }

	// RVA: 0x145630C Offset: 0x145630C VA: 0x145630C
	public static bool isNone(double[] selfVals, long[] entVals) { }

	// RVA: 0x1456314 Offset: 0x1456314 VA: 0x1456314
	public static bool isEqual(double[] selfVals, long[] entVals) { }

	// RVA: 0x14563E0 Offset: 0x14563E0 VA: 0x14563E0
	public static bool isNotEqual(double[] selfVals, long[] entVals) { }

	// RVA: 0x1456460 Offset: 0x1456460 VA: 0x1456460
	public static bool isHigher(double[] selfVals, long[] entVals) { }

	// RVA: 0x145652C Offset: 0x145652C VA: 0x145652C
	public static bool isLower(double[] selfVals, long[] entVals) { }

	// RVA: 0x1456604 Offset: 0x1456604 VA: 0x1456604
	public static bool isMultiple(double[] selfVals, long[] entVals) { }

	// RVA: 0x14566E4 Offset: 0x14566E4 VA: 0x14566E4
	public static bool isExist(double[] selfVals, long[] entVals) { }

	// RVA: 0x14567BC Offset: 0x14567BC VA: 0x14567BC
	public static ConditionsInformation.CheckInfo getCheckFunction(Ai.COND cond) { }

	// RVA: 0x1456848 Offset: 0x1456848 VA: 0x1456848
	private static void .cctor() { }
}

// Namespace: 
public enum ConditionsInformation.TARGET // TypeDefIndex: 9044
{
	// Fields
	public int value__; // 0x0
	public const ConditionsInformation.TARGET NONE = 0;
	public const ConditionsInformation.TARGET FIELD = 1;
	public const ConditionsInformation.TARGET SELF = 2;
	public const ConditionsInformation.TARGET PT = 3;
	public const ConditionsInformation.TARGET OPPONENT = 4;
	public const ConditionsInformation.TARGET PT_FIELD = 5;
	public const ConditionsInformation.TARGET OPPONENT_FIELD = 6;
	public const ConditionsInformation.TARGET PT_ALL = 7;
	public const ConditionsInformation.TARGET OPPONENT_ALL = 8;
	public const ConditionsInformation.TARGET OPPONENT_FRONT = 9;
	public const ConditionsInformation.TARGET OPPONENT_CENTER = 10;
	public const ConditionsInformation.TARGET OPPONENT_BACK = 11;
	public const ConditionsInformation.TARGET ALL_FIELD = 12;
	public const ConditionsInformation.TARGET PT_FRONT = 13;
	public const ConditionsInformation.TARGET PT_CENTER = 14;
	public const ConditionsInformation.TARGET PT_BACK = 15;
}

// Namespace: 
public enum ConditionsInformation.PARAMATER // TypeDefIndex: 9045
{
	// Fields
	public int value__; // 0x0
	public const ConditionsInformation.PARAMATER NONE = 0;
	public const ConditionsInformation.PARAMATER TURN = 1;
	public const ConditionsInformation.PARAMATER SPACE = 2;
	public const ConditionsInformation.PARAMATER PREV_ACTID = 3;
	public const ConditionsInformation.PARAMATER PREV_ACTTYPE = 4;
	public const ConditionsInformation.PARAMATER HP = 5;
	public const ConditionsInformation.PARAMATER NPGAUGE = 6;
	public const ConditionsInformation.PARAMATER TDTURN = 7;
	public const ConditionsInformation.PARAMATER ACT_COUNT = 8;
	public const ConditionsInformation.PARAMATER ACT_COUNT_THISTURN = 9;
	public const ConditionsInformation.PARAMATER TURN_FIELD = 10;
	public const ConditionsInformation.PARAMATER TURN_ACT_COUNT = 11;
	public const ConditionsInformation.PARAMATER BUFF_ID = 12;
	public const ConditionsInformation.PARAMATER INDIVIDUALITY = 13;
	public const ConditionsInformation.PARAMATER BUFF_INDIVIDUALITY = 14;
	public const ConditionsInformation.PARAMATER BUFF_ACTIVE_INDIVIDUALITY = 15;
	public const ConditionsInformation.PARAMATER RAID_HP = 16;
	public const ConditionsInformation.PARAMATER RAID_COUNT = 17;
	public const ConditionsInformation.PARAMATER RAID_COUNT_VALUE = 18;
	public const ConditionsInformation.PARAMATER COUNT_ALIVE = 19;
	public const ConditionsInformation.PARAMATER COUNT_REST = 20;
	public const ConditionsInformation.PARAMATER COUNT_ITEM = 21;
	public const ConditionsInformation.PARAMATER COUNT_BUFFCOUNT_INDIVIDUALITY = 22;
	public const ConditionsInformation.PARAMATER BUFF_ACTIVE_ID = 23;
	public const ConditionsInformation.PARAMATER ENEMY_MASTER_COMMAND_SPELL_COUNT = 24;
	public const ConditionsInformation.PARAMATER COUNT_STAR = 25;
	public const ConditionsInformation.PARAMATER TARGET_POSITION = 26;
	public const ConditionsInformation.PARAMATER COUNT_TARGET_BUFF_INDIVIDUALITY_SUM = 27;
	public const ConditionsInformation.PARAMATER DEAD = 28;
	public const ConditionsInformation.PARAMATER PRECEDING_ENEMY = 29;
	public const ConditionsInformation.PARAMATER REMAIN_TURN = 30;
	public const ConditionsInformation.PARAMATER AVALON_145566 = 31;
	public const ConditionsInformation.PARAMATER CHECK_PARAMATER_32 = 32;
	public const ConditionsInformation.PARAMATER CHAIN_COUNT = 33;
	public const ConditionsInformation.PARAMATER CHECK_TARGET_SKILL_THISTURN = 34;
}

// Namespace: 
public enum ConditionsInformation.REFINE // TypeDefIndex: 9046
{
	// Fields
	public int value__; // 0x0
	public const ConditionsInformation.REFINE ANY = 0;
	public const ConditionsInformation.REFINE ALL = 1;
	public const ConditionsInformation.REFINE HIGHER = 2;
	public const ConditionsInformation.REFINE LOWER = 3;
	public const ConditionsInformation.REFINE TOTAL_COUNT = 4;
}

// Namespace: 
public enum ConditionsInformation.CHECK // TypeDefIndex: 9047
{
