	// RVA: 0x1215930 Offset: 0x1215930 VA: 0x1215930
	internal IntPtr SWIG_OnCompletion(FutureString.SWIG_CompletionDelegate cs_callback, int cs_key) { }

	// RVA: 0x1215A20 Offset: 0x1215A20 VA: 0x1215A20
	public void SWIG_FreeCompletionData(IntPtr data) { }

	// RVA: 0x1215CFC Offset: 0x1215CFC VA: 0x1215CFC
	public string GetResult() { }

	// RVA: 0x1215DD4 Offset: 0x1215DD4 VA: 0x1215DD4
	private static void .cctor() { }
}

// Namespace: 
public sealed class FutureString.Action : MulticastDelegate // TypeDefIndex: 3224
{
	// Methods

	// RVA: 0x1215654 Offset: 0x1215654 VA: 0x1215654
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1215AFC Offset: 0x1215AFC VA: 0x1215AFC Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x12160C0 Offset: 0x12160C0 VA: 0x12160C0 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x12160F4 Offset: 0x12160F4 VA: 0x12160F4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
internal sealed class FutureString.SWIG_CompletionDelegate : MulticastDelegate // TypeDefIndex: 3225
{
	// Methods

	// RVA: 0x1215920 Offset: 0x1215920 VA: 0x1215920
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1216100 Offset: 0x1216100 VA: 0x1216100 Slot: 11
	public virtual void Invoke(int index) { }

	// RVA: 0x121632C Offset: 0x121632C VA: 0x121632C Slot: 12
	public virtual IAsyncResult BeginInvoke(int index, AsyncCallback callback, object object) { }

	// RVA: 0x12163B8 Offset: 0x12163B8 VA: 0x12163B8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC827D0 Offset: 0xC827D0 VA: 0xC827D0
private sealed class FutureString.<GetTask>c__AnonStorey0 // TypeDefIndex: 3226
{
	// Fields
	internal FutureString fu; // 0x10
	internal TaskCompletionSource<string> tcs; // 0x18

	// Methods

	// RVA: 0x121564C Offset: 0x121564C VA: 0x121564C
	public void .ctor() { }

	// RVA: 0x1215E4C Offset: 0x1215E4C VA: 0x1215E4C
	internal void <>m__0() { }
}

// Namespace: Firebase
[DefaultMemberAttribute] // RVA: 0xC827E0 Offset: 0xC827E0 VA: 0xC827E0
internal class CharVector : IDisposable, IEnumerable, IList<byte>, ICollection<byte>, IEnumerable<byte> // TypeDefIndex: 3227
{
	// Fields
	private HandleRef swigCPtr; // 0x10
	protected bool swigCMemOwn; // 0x20

	// Properties
	public bool IsFixedSize { get; }
	public bool IsReadOnly { get; }
	public byte Item { get; set; }
	public int Capacity { get; set; }
	public int Count { get; }
	public bool IsSynchronized { get; }

	// Methods

	// RVA: 0x120B578 Offset: 0x120B578 VA: 0x120B578
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x120B5DC Offset: 0x120B5DC VA: 0x120B5DC
	public void .ctor(ICollection c) { }

	// RVA: 0x120B8C4 Offset: 0x120B8C4 VA: 0x120B8C4
	public void .ctor() { }

	// RVA: 0x120BA70 Offset: 0x120BA70 VA: 0x120BA70
	public void .ctor(CharVector other) { }

	// RVA: 0x120BBD4 Offset: 0x120BBD4 VA: 0x120BBD4
	public void .ctor(int capacity) { }

	// RVA: 0x120BB64 Offset: 0x120BB64 VA: 0x120BB64
	internal static HandleRef getCPtr(CharVector obj) { }

	// RVA: 0x120BCB4 Offset: 0x120BCB4 VA: 0x120BCB4 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x120BD34 Offset: 0x120BD34 VA: 0x120BD34 Slot: 19
	public virtual void Dispose() { }

	// RVA: 0x120BE98 Offset: 0x120BE98 VA: 0x120BE98
	public bool get_IsFixedSize() { }

	// RVA: 0x120BEA0 Offset: 0x120BEA0 VA: 0x120BEA0 Slot: 12
	public bool get_IsReadOnly() { }

	// RVA: 0x120BEA8 Offset: 0x120BEA8 VA: 0x120BEA8 Slot: 9
	public byte get_Item(int index) { }

	// RVA: 0x120BF94 Offset: 0x120BF94 VA: 0x120BF94 Slot: 10
	public void set_Item(int index, byte value) { }

	// RVA: 0x120C07C Offset: 0x120C07C VA: 0x120C07C
	public int get_Capacity() { }

	// RVA: 0x120C158 Offset: 0x120C158 VA: 0x120C158
	public void set_Capacity(int value) { }

	// RVA: 0x120C3B8 Offset: 0x120C3B8 VA: 0x120C3B8 Slot: 11
	public int get_Count() { }

	// RVA: 0x120C3BC Offset: 0x120C3BC VA: 0x120C3BC
	public bool get_IsSynchronized() { }

	// RVA: 0x120C3C4 Offset: 0x120C3C4 VA: 0x120C3C4
	public void CopyTo(byte[] array) { }

	// RVA: 0x120C618 Offset: 0x120C618 VA: 0x120C618 Slot: 16
	public void CopyTo(byte[] array, int arrayIndex) { }

	// RVA: 0x120C3FC Offset: 0x120C3FC VA: 0x120C3FC
	public void CopyTo(int index, byte[] array, int arrayIndex, int count) { }

	// RVA: 0x120C744 Offset: 0x120C744 VA: 0x120C744 Slot: 18
	private IEnumerator<byte> System.Collections.Generic.IEnumerable<byte>.GetEnumerator() { }

	// RVA: 0x120C7F4 Offset: 0x120C7F4 VA: 0x120C7F4 Slot: 5
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x120C854 Offset: 0x120C854 VA: 0x120C854
	public CharVector.CharVectorEnumerator GetEnumerator() { }

	// RVA: 0x120C8B4 Offset: 0x120C8B4 VA: 0x120C8B4 Slot: 14
	public void Clear() { }

	// RVA: 0x120B994 Offset: 0x120B994 VA: 0x120B994 Slot: 13
	public void Add(byte x) { }

	// RVA: 0x120C204 Offset: 0x120C204 VA: 0x120C204
	private uint size() { }

	// RVA: 0x120C080 Offset: 0x120C080 VA: 0x120C080
	private uint capacity() { }

	// RVA: 0x120C2DC Offset: 0x120C2DC VA: 0x120C2DC
	private void reserve(uint n) { }

	// RVA: 0x120C65C Offset: 0x120C65C VA: 0x120C65C
	private byte getitemcopy(int index) { }

	// RVA: 0x120BEAC Offset: 0x120BEAC VA: 0x120BEAC
	private byte getitem(int index) { }

	// RVA: 0x120BF98 Offset: 0x120BF98 VA: 0x120BF98
	private void setitem(int index, byte val) { }

	// RVA: 0x120C980 Offset: 0x120C980 VA: 0x120C980
	public void AddRange(CharVector values) { }

	// RVA: 0x120CA70 Offset: 0x120CA70 VA: 0x120CA70
	public CharVector GetRange(int index, int count) { }

	// RVA: 0x120CB90 Offset: 0x120CB90 VA: 0x120CB90 Slot: 7
	public void Insert(int index, byte x) { }

	// RVA: 0x120CC74 Offset: 0x120CC74 VA: 0x120CC74
	public void InsertRange(int index, CharVector values) { }

	// RVA: 0x120CD74 Offset: 0x120CD74 VA: 0x120CD74 Slot: 8
	public void RemoveAt(int index) { }

	// RVA: 0x120CE50 Offset: 0x120CE50 VA: 0x120CE50
	public void RemoveRange(int index, int count) { }

	// RVA: 0x120CF34 Offset: 0x120CF34 VA: 0x120CF34
	public static CharVector Repeat(byte value, int count) { }

	// RVA: 0x120D044 Offset: 0x120D044 VA: 0x120D044
	public void Reverse() { }

	// RVA: 0x120D110 Offset: 0x120D110 VA: 0x120D110
	public void Reverse(int index, int count) { }

	// RVA: 0x120D1F4 Offset: 0x120D1F4 VA: 0x120D1F4
	public void SetRange(int index, CharVector values) { }

	// RVA: 0x120D2F4 Offset: 0x120D2F4 VA: 0x120D2F4 Slot: 15
	public bool Contains(byte value) { }

	// RVA: 0x120D3DC Offset: 0x120D3DC VA: 0x120D3DC Slot: 6
	public int IndexOf(byte value) { }

	// RVA: 0x120D4C4 Offset: 0x120D4C4 VA: 0x120D4C4
	public int LastIndexOf(byte value) { }

	// RVA: 0x120D5AC Offset: 0x120D5AC VA: 0x120D5AC Slot: 17
	public bool Remove(byte value) { }
}

// Namespace: 
public sealed class CharVector.CharVectorEnumerator : IEnumerator, IEnumerator<byte>, IDisposable // TypeDefIndex: 3228
{
	// Fields
	private CharVector collectionRef; // 0x10
	private int currentIndex; // 0x18
	private object currentObject; // 0x20
	private int currentSize; // 0x28

	// Properties
	private object System.Collections.IEnumerator.Current { get; }
	public byte Current { get; }

	// Methods

	// RVA: 0x120C7A4 Offset: 0x120C7A4 VA: 0x120C7A4
	public void .ctor(CharVector collection) { }

	// RVA: 0x120D694 Offset: 0x120D694 VA: 0x120D694 Slot: 7
	public byte get_Current() { }

	// RVA: 0x120D788 Offset: 0x120D788 VA: 0x120D788 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	// RVA: 0x120D7F4 Offset: 0x120D7F4 VA: 0x120D7F4 Slot: 5
	public bool MoveNext() { }

	// RVA: 0x120D8C0 Offset: 0x120D8C0 VA: 0x120D8C0 Slot: 6
	public void Reset() { }

	// RVA: 0x120D974 Offset: 0x120D974 VA: 0x120D974 Slot: 8
	public void Dispose() { }
}

// Namespace: Firebase
[DefaultMemberAttribute] // RVA: 0xC82818 Offset: 0xC82818 VA: 0xC82818
internal class StringList : IDisposable, IEnumerable, IList<string>, ICollection<string>, IEnumerable<string> // TypeDefIndex: 3229
{
	// Fields
	private HandleRef swigCPtr; // 0x10
	protected bool swigCMemOwn; // 0x20

	// Properties
	public bool IsFixedSize { get; }
	public bool IsReadOnly { get; }
	public string Item { get; set; }
	public int Capacity { get; set; }
	public int Count { get; }
	public bool IsSynchronized { get; }

	// Methods

	// RVA: 0x1217E30 Offset: 0x1217E30 VA: 0x1217E30
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x1217E94 Offset: 0x1217E94 VA: 0x1217E94
	public void .ctor(ICollection c) { }

	// RVA: 0x12181DC Offset: 0x12181DC VA: 0x12181DC
	public void .ctor() { }

	// RVA: 0x1218388 Offset: 0x1218388 VA: 0x1218388
	public void .ctor(StringList other) { }

	// RVA: 0x12184EC Offset: 0x12184EC VA: 0x12184EC
	public void .ctor(int capacity) { }

	// RVA: 0x121847C Offset: 0x121847C VA: 0x121847C
	internal static HandleRef getCPtr(StringList obj) { }

	// RVA: 0x12185CC Offset: 0x12185CC VA: 0x12185CC Slot: 1
	protected override void Finalize() { }

	// RVA: 0x121864C Offset: 0x121864C VA: 0x121864C Slot: 19
	public virtual void Dispose() { }

	// RVA: 0x12187B0 Offset: 0x12187B0 VA: 0x12187B0
	public bool get_IsFixedSize() { }

	// RVA: 0x12187B8 Offset: 0x12187B8 VA: 0x12187B8 Slot: 12
	public bool get_IsReadOnly() { }

	// RVA: 0x12187C0 Offset: 0x12187C0 VA: 0x12187C0 Slot: 9
	public string get_Item(int index) { }

	// RVA: 0x12188AC Offset: 0x12188AC VA: 0x12188AC Slot: 10
	public void set_Item(int index, string value) { }

	// RVA: 0x1218994 Offset: 0x1218994 VA: 0x1218994
	public int get_Capacity() { }

	// RVA: 0x1218A70 Offset: 0x1218A70 VA: 0x1218A70
	public void set_Capacity(int value) { }

	// RVA: 0x1218CD0 Offset: 0x1218CD0 VA: 0x1218CD0 Slot: 11
	public int get_Count() { }

	// RVA: 0x1218CD4 Offset: 0x1218CD4 VA: 0x1218CD4
	public bool get_IsSynchronized() { }

	// RVA: 0x1218CDC Offset: 0x1218CDC VA: 0x1218CDC
	public void CopyTo(string[] array) { }

	// RVA: 0x1218F0C Offset: 0x1218F0C VA: 0x1218F0C Slot: 16
	public void CopyTo(string[] array, int arrayIndex) { }

	// RVA: 0x1218D14 Offset: 0x1218D14 VA: 0x1218D14
	public void CopyTo(int index, string[] array, int arrayIndex, int count) { }

	// RVA: 0x1219038 Offset: 0x1219038 VA: 0x1219038 Slot: 18
	private IEnumerator<string> System.Collections.Generic.IEnumerable<string>.GetEnumerator() { }

	// RVA: 0x12190E8 Offset: 0x12190E8 VA: 0x12190E8 Slot: 5
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x1219148 Offset: 0x1219148 VA: 0x1219148
	public StringList.StringListEnumerator GetEnumerator() { }

	// RVA: 0x12191A8 Offset: 0x12191A8 VA: 0x12191A8 Slot: 14
	public void Clear() { }

	// RVA: 0x12182AC Offset: 0x12182AC VA: 0x12182AC Slot: 13
	public void Add(string x) { }

	// RVA: 0x1218B1C Offset: 0x1218B1C VA: 0x1218B1C
	private uint size() { }

	// RVA: 0x1218998 Offset: 0x1218998 VA: 0x1218998
	private uint capacity() { }

	// RVA: 0x1218BF4 Offset: 0x1218BF4 VA: 0x1218BF4
	private void reserve(uint n) { }

	// RVA: 0x1218F50 Offset: 0x1218F50 VA: 0x1218F50
	private string getitemcopy(int index) { }

	// RVA: 0x12187C4 Offset: 0x12187C4 VA: 0x12187C4
	private string getitem(int index) { }

	// RVA: 0x12188B0 Offset: 0x12188B0 VA: 0x12188B0
	private void setitem(int index, string val) { }

	// RVA: 0x1219274 Offset: 0x1219274 VA: 0x1219274
	public void AddRange(StringList values) { }

	// RVA: 0x1219364 Offset: 0x1219364 VA: 0x1219364
	public StringList GetRange(int index, int count) { }

	// RVA: 0x1219484 Offset: 0x1219484 VA: 0x1219484 Slot: 7
	public void Insert(int index, string x) { }

	// RVA: 0x1219568 Offset: 0x1219568 VA: 0x1219568
	public void InsertRange(int index, StringList values) { }

	// RVA: 0x1219668 Offset: 0x1219668 VA: 0x1219668 Slot: 8
	public void RemoveAt(int index) { }

	// RVA: 0x1219744 Offset: 0x1219744 VA: 0x1219744
	public void RemoveRange(int index, int count) { }

	// RVA: 0x1219828 Offset: 0x1219828 VA: 0x1219828
	public static StringList Repeat(string value, int count) { }

	// RVA: 0x1219938 Offset: 0x1219938 VA: 0x1219938
	public void Reverse() { }

	// RVA: 0x1219A04 Offset: 0x1219A04 VA: 0x1219A04
	public void Reverse(int index, int count) { }

	// RVA: 0x1219AE8 Offset: 0x1219AE8 VA: 0x1219AE8
	public void SetRange(int index, StringList values) { }

	// RVA: 0x1219BE8 Offset: 0x1219BE8 VA: 0x1219BE8 Slot: 15
	public bool Contains(string value) { }

	// RVA: 0x1219CD0 Offset: 0x1219CD0 VA: 0x1219CD0 Slot: 6
	public int IndexOf(string value) { }

	// RVA: 0x1219DB8 Offset: 0x1219DB8 VA: 0x1219DB8
	public int LastIndexOf(string value) { }

	// RVA: 0x1219EA0 Offset: 0x1219EA0 VA: 0x1219EA0 Slot: 17
	public bool Remove(string value) { }
}

// Namespace: 
public sealed class StringList.StringListEnumerator : IEnumerator, IEnumerator<string>, IDisposable // TypeDefIndex: 3230
{
	// Fields
	private StringList collectionRef; // 0x10
	private int currentIndex; // 0x18
	private object currentObject; // 0x20
	private int currentSize; // 0x28

	// Properties
	private object System.Collections.IEnumerator.Current { get; }
	public string Current { get; }

	// Methods

	// RVA: 0x1219098 Offset: 0x1219098 VA: 0x1219098
	public void .ctor(StringList collection) { }

	// RVA: 0x1219F88 Offset: 0x1219F88 VA: 0x1219F88 Slot: 7
	public string get_Current() { }

	// RVA: 0x121A0D0 Offset: 0x121A0D0 VA: 0x121A0D0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	// RVA: 0x121A0D4 Offset: 0x121A0D4 VA: 0x121A0D4 Slot: 5
	public bool MoveNext() { }

	// RVA: 0x121A164 Offset: 0x121A164 VA: 0x121A164 Slot: 6
	public void Reset() { }

	// RVA: 0x121A218 Offset: 0x121A218 VA: 0x121A218 Slot: 8
	public void Dispose() { }
}

// Namespace: Firebase
[DefaultMemberAttribute] // RVA: 0xC82850 Offset: 0xC82850 VA: 0xC82850
internal class StringStringMap : IDisposable, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable // TypeDefIndex: 3231
{
	// Fields
	private HandleRef swigCPtr; // 0x10
	protected bool swigCMemOwn; // 0x20

	// Properties
	public string Item { get; set; }
	public int Count { get; }
	public bool IsReadOnly { get; }
	public ICollection<string> Keys { get; }
	public ICollection<string> Values { get; }

	// Methods

	// RVA: 0x121A228 Offset: 0x121A228 VA: 0x121A228
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x121A28C Offset: 0x121A28C VA: 0x121A28C
	public void .ctor() { }

	// RVA: 0x121A35C Offset: 0x121A35C VA: 0x121A35C
	public void .ctor(StringStringMap other) { }

	// RVA: 0x121A450 Offset: 0x121A450 VA: 0x121A450
	internal static HandleRef getCPtr(StringStringMap obj) { }

	// RVA: 0x121A4C0 Offset: 0x121A4C0 VA: 0x121A4C0 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x121A540 Offset: 0x121A540 VA: 0x121A540 Slot: 21
	public virtual void Dispose() { }

	// RVA: 0x121A6A4 Offset: 0x121A6A4 VA: 0x121A6A4 Slot: 8
	public string get_Item(string key) { }

	// RVA: 0x121A790 Offset: 0x121A790 VA: 0x121A790 Slot: 9
	public void set_Item(string key, string value) { }

	// RVA: 0x121A878 Offset: 0x121A878 VA: 0x121A878 Slot: 7
	public bool TryGetValue(string key, out string value) { }

	// RVA: 0x121A9B8 Offset: 0x121A9B8 VA: 0x121A9B8 Slot: 13
	public int get_Count() { }

	// RVA: 0x121AA94 Offset: 0x121AA94 VA: 0x121AA94 Slot: 14
	public bool get_IsReadOnly() { }

	// RVA: 0x121AA9C Offset: 0x121AA9C VA: 0x121AA9C Slot: 10
	public ICollection<string> get_Keys() { }

	// RVA: 0x121AE80 Offset: 0x121AE80 VA: 0x121AE80 Slot: 11
	public ICollection<string> get_Values() { }

	// RVA: 0x121B36C Offset: 0x121B36C VA: 0x121B36C Slot: 15
	public void Add(KeyValuePair<string, string> item) { }

	// RVA: 0x121B4D8 Offset: 0x121B4D8 VA: 0x121B4D8 Slot: 19
	public bool Remove(KeyValuePair<string, string> item) { }

	// RVA: 0x121B574 Offset: 0x121B574 VA: 0x121B574 Slot: 17
	public bool Contains(KeyValuePair<string, string> item) { }

	// RVA: 0x121B71C Offset: 0x121B71C VA: 0x121B71C
	public void CopyTo(KeyValuePair<string, string>[] array) { }

	// RVA: 0x121B724 Offset: 0x121B724 VA: 0x121B724 Slot: 18
	public void CopyTo(KeyValuePair<string, string>[] array, int arrayIndex) { }

	// RVA: 0x121BA44 Offset: 0x121BA44 VA: 0x121BA44 Slot: 20
	private IEnumerator<KeyValuePair<string, string>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>>.GetEnumerator() { }

	// RVA: 0x121BB70 Offset: 0x121BB70 VA: 0x121BB70 Slot: 12
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x121B09C Offset: 0x121B09C VA: 0x121B09C
	public StringStringMap.StringStringMapEnumerator GetEnumerator() { }

	// RVA: 0x121A9BC Offset: 0x121A9BC VA: 0x121A9BC
	private uint size() { }

	// RVA: 0x121BBD0 Offset: 0x121BBD0 VA: 0x121BBD0
	public bool empty() { }

	// RVA: 0x121BCA8 Offset: 0x121BCA8 VA: 0x121BCA8 Slot: 16
	public void Clear() { }

	// RVA: 0x121A6A8 Offset: 0x121A6A8 VA: 0x121A6A8
	private string getitem(string key) { }

	// RVA: 0x121A794 Offset: 0x121A794 VA: 0x121A794
	private void setitem(string key, string x) { }

	// RVA: 0x121A8D0 Offset: 0x121A8D0 VA: 0x121A8D0 Slot: 5
	public bool ContainsKey(string key) { }

	// RVA: 0x121B3F4 Offset: 0x121B3F4 VA: 0x121B3F4 Slot: 22
	public void Add(string key, string val) { }

	// RVA: 0x121B634 Offset: 0x121B634 VA: 0x121B634 Slot: 6
	public bool Remove(string key) { }

	// RVA: 0x121ABE4 Offset: 0x121ABE4 VA: 0x121ABE4
	private IntPtr create_iterator_begin() { }

	// RVA: 0x121ACBC Offset: 0x121ACBC VA: 0x121ACBC
	private string get_next_key(IntPtr swigiterator) { }

	// RVA: 0x121ADA4 Offset: 0x121ADA4 VA: 0x121ADA4
	private void destroy_iterator(IntPtr swigiterator) { }
}

// Namespace: 
public sealed class StringStringMap.StringStringMapEnumerator : IEnumerator, IEnumerator<KeyValuePair<string, string>>, IDisposable // TypeDefIndex: 3232
{
	// Fields
	private StringStringMap collectionRef; // 0x10
	private IList<string> keyCollection; // 0x18
	private int currentIndex; // 0x20
	private object currentObject; // 0x28
	private int currentSize; // 0x30

	// Properties
	private object System.Collections.IEnumerator.Current { get; }
	public KeyValuePair<string, string> Current { get; }

	// Methods

	// RVA: 0x121BAA4 Offset: 0x121BAA4 VA: 0x121BAA4
	public void .ctor(StringStringMap collection) { }

	// RVA: 0x121B0FC Offset: 0x121B0FC VA: 0x121B0FC Slot: 7
	public KeyValuePair<string, string> get_Current() { }

	// RVA: 0x121BD74 Offset: 0x121BD74 VA: 0x121BD74 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	// RVA: 0x121B1F4 Offset: 0x121B1F4 VA: 0x121B1F4 Slot: 5
	public bool MoveNext() { }

	// RVA: 0x121BDE0 Offset: 0x121BDE0 VA: 0x121BDE0 Slot: 6
	public void Reset() { }

	// RVA: 0x121BE94 Offset: 0x121BE94 VA: 0x121BE94 Slot: 8
	public void Dispose() { }
}

// Namespace: Firebase
internal class FutureBase : IDisposable // TypeDefIndex: 3233
{
	// Fields
	private HandleRef swigCPtr; // 0x10
	protected bool swigCMemOwn; // 0x20

	// Methods

	// RVA: 0x1213248 Offset: 0x1213248 VA: 0x1213248
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x12132AC Offset: 0x12132AC VA: 0x12132AC
	public void .ctor() { }

	// RVA: 0x121337C Offset: 0x121337C VA: 0x121337C
	public void .ctor(FutureBase rhs) { }

	// RVA: 0x1213470 Offset: 0x1213470 VA: 0x1213470
	internal static HandleRef getCPtr(FutureBase obj) { }

	// RVA: 0x12134E0 Offset: 0x12134E0 VA: 0x12134E0 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x121355C Offset: 0x121355C VA: 0x121355C Slot: 5
	public virtual void Dispose() { }

	// RVA: 0x12136C0 Offset: 0x12136C0 VA: 0x12136C0
	public void Release() { }

	// RVA: 0x121378C Offset: 0x121378C VA: 0x121378C
	public FutureStatus status() { }

	// RVA: 0x1213864 Offset: 0x1213864 VA: 0x1213864
	public int error() { }

	// RVA: 0x121393C Offset: 0x121393C VA: 0x121393C
	public string error_message() { }
}

// Namespace: Firebase
internal enum FutureStatus // TypeDefIndex: 3234
{
	// Fields
	public int value__; // 0x0
	public const FutureStatus Complete = 0;
	public const FutureStatus Pending = 1;
	public const FutureStatus Invalid = 2;
}

// Namespace: Firebase.Internal
internal static class TaskCompletionSourceCompat<T> // TypeDefIndex: 3235
{
	// Methods

	// RVA: -1 Offset: -1
	private static void SetExceptionInternal(TaskCompletionSource<T> tcs, AggregateException exception) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252CA6C Offset: 0x252CA6C VA: 0x252CA6C
	|-TaskCompletionSourceCompat<object>.SetExceptionInternal
	*/

	// RVA: -1 Offset: -1
	public static void SetException(TaskCompletionSource<T> tcs, AggregateException exception) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x252CAF8 Offset: 0x252CAF8 VA: 0x252CAF8
	|-TaskCompletionSourceCompat<object>.SetException
	*/
}

// Namespace: Firebase.Platform
internal class FirebaseAppPlatform : IFirebaseAppPlatform // TypeDefIndex: 3236
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC829C0 Offset: 0xC829C0 VA: 0xC829C0
	[DebuggerBrowsableAttribute] // RVA: 0xC829C0 Offset: 0xC829C0 VA: 0xC829C0
	private WeakReference <app>k__BackingField; // 0x10

	// Properties
	private WeakReference app { set; }

	// Methods

	// RVA: 0x121259C Offset: 0x121259C VA: 0x121259C
	internal void .ctor(FirebaseApp wrappedApp) { }

	[CompilerGeneratedAttribute] // RVA: 0xC833E0 Offset: 0xC833E0 VA: 0xC833E0
	// RVA: 0x1217C54 Offset: 0x1217C54 VA: 0x1217C54
	private void set_app(WeakReference value) { }
}

// Namespace: Firebase.Platform
internal class FirebaseAppUtils : IFirebaseAppUtils // TypeDefIndex: 3237
{
	// Fields
	private static FirebaseAppUtils instance; // 0x0

	// Properties
	public static FirebaseAppUtils Instance { get; }

	// Methods

	// RVA: 0x1217C5C Offset: 0x1217C5C VA: 0x1217C5C
	public void .ctor() { }

	// RVA: 0x12113A8 Offset: 0x12113A8 VA: 0x12113A8
	public static FirebaseAppUtils get_Instance() { }

	// RVA: 0x1217C64 Offset: 0x1217C64 VA: 0x1217C64 Slot: 4
	public void TranslateDllNotFoundException(Action action) { }

	// RVA: 0x1217CC8 Offset: 0x1217CC8 VA: 0x1217CC8 Slot: 5
	public void PollCallbacks() { }

	// RVA: 0x1217CCC Offset: 0x1217CCC VA: 0x1217CCC Slot: 6
	public PlatformLogLevel GetLogLevel() { }

	// RVA: 0x1217DCC Offset: 0x1217DCC VA: 0x1217DCC
	private static void .cctor() { }
}

// Namespace: Firebase
internal class VersionInfo // TypeDefIndex: 3238
{
	// Properties
	internal static string SdkVersion { get; }

	// Methods

	// RVA: 0x13710B4 Offset: 0x13710B4 VA: 0x13710B4
	public void .ctor() { }

	// RVA: 0x13710BC Offset: 0x13710BC VA: 0x13710BC
	internal static string get_SdkVersion() { }
}

// Namespace: Firebase
[ExtensionAttribute] // RVA: 0xC82888 Offset: 0xC82888 VA: 0xC82888
internal static class VariantExtension // TypeDefIndex: 3239
{
	// Fields
	private const VariantExtension.KeyOptions DefaultKeyOptions = 0;

	// Methods

	[ExtensionAttribute] // RVA: 0xC833F0 Offset: 0xC833F0 VA: 0xC833F0
	// RVA: 0x136C764 Offset: 0x136C764 VA: 0x136C764
	public static object ToObject(Variant variant) { }

	[ExtensionAttribute] // RVA: 0xC83400 Offset: 0xC83400 VA: 0xC83400
	// RVA: 0x136C79C Offset: 0x136C79C VA: 0x136C79C
	public static object ToObject(Variant variant, VariantExtension.KeyOptions options) { }

	[ExtensionAttribute] // RVA: 0xC83410 Offset: 0xC83410 VA: 0xC83410
	// RVA: 0x136C7D0 Offset: 0x136C7D0 VA: 0x136C7D0
	private static object ToObjectInternal(Variant variant, VariantExtension.KeyOptions options) { }

	[ExtensionAttribute] // RVA: 0xC83420 Offset: 0xC83420 VA: 0xC83420
	// RVA: 0x136D5A4 Offset: 0x136D5A4 VA: 0x136D5A4
	public static IDictionary<string, object> ToStringVariantMap(VariantVariantMap originalMap) { }

	[ExtensionAttribute] // RVA: 0xC83430 Offset: 0xC83430 VA: 0xC83430
	// RVA: 0x136CF30 Offset: 0x136CF30 VA: 0x136CF30
	public static IDictionary<string, object> ToStringVariantMap(VariantVariantMap originalMap, VariantExtension.KeyOptions options) { }
}

// Namespace: 
internal enum VariantExtension.KeyOptions // TypeDefIndex: 3240
{
	// Fields
	public int value__; // 0x0
	public const VariantExtension.KeyOptions UseObjectKeys = 0;
	public const VariantExtension.KeyOptions UseStringKeys = 1;
}

// Namespace: Firebase
[AttributeUsageAttribute] // RVA: 0xC82898 Offset: 0xC82898 VA: 0xC82898
internal sealed class MonoPInvokeCallbackAttribute : Attribute // TypeDefIndex: 3241
{
	// Methods

	// RVA: 0x1217C4C Offset: 0x1217C4C VA: 0x1217C4C
	public void .ctor(Type t) { }
}

// Namespace: Firebase
internal sealed class LogUtil : IDisposable // TypeDefIndex: 3242
{
	// Fields
	private static LogUtil _instance; // 0x0
	private static object InitializeLoggingLock; // 0x8
	private bool _disposed; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC829FC Offset: 0xC829FC VA: 0xC829FC
	private static LogUtil.LogMessageDelegate <>f__mg$cache0; // 0x10

	// Methods

	// RVA: 0x1217640 Offset: 0x1217640 VA: 0x1217640
	private static void .cctor() { }

	// RVA: 0x12176D0 Offset: 0x12176D0 VA: 0x12176D0
	public void .ctor() { }

	// RVA: 0x120DE14 Offset: 0x120DE14 VA: 0x120DE14
	public static void InitializeLogging() { }

	// RVA: 0x121782C Offset: 0x121782C VA: 0x121782C
	internal static PlatformLogLevel ConvertLogLevel(LogLevel logLevel) { }

	// RVA: 0x1210FC0 Offset: 0x1210FC0 VA: 0x1210FC0
	internal static void LogMessage(LogLevel logLevel, string message) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC83440 Offset: 0xC83440 VA: 0xC83440
	// RVA: 0x1217590 Offset: 0x1217590 VA: 0x1217590
	internal static void LogMessageFromCallback(LogLevel logLevel, string message) { }

	// RVA: 0x1217838 Offset: 0x1217838 VA: 0x1217838 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x12178F4 Offset: 0x12178F4 VA: 0x12178F4 Slot: 4
	public void Dispose() { }

	// RVA: 0x12178C0 Offset: 0x12178C0 VA: 0x12178C0
	protected void Dispose(bool disposing) { }

	[CompilerGeneratedAttribute] // RVA: 0xC834A4 Offset: 0xC834A4 VA: 0xC834A4
	// RVA: 0x1217930 Offset: 0x1217930 VA: 0x1217930
	private void <LogUtil>m__0(object sender, EventArgs e) { }
}

// Namespace: 
internal sealed class LogUtil.LogMessageDelegate : MulticastDelegate // TypeDefIndex: 3243
{
	// Methods

	// RVA: 0x121781C Offset: 0x121781C VA: 0x121781C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1217964 Offset: 0x1217964 VA: 0x1217964 Slot: 11
	public virtual void Invoke(LogLevel log_level, string message) { }

	// RVA: 0x1217BA8 Offset: 0x1217BA8 VA: 0x1217BA8 Slot: 12
	public virtual IAsyncResult BeginInvoke(LogLevel log_level, string message, AsyncCallback callback, object object) { }

	// RVA: 0x1217C40 Offset: 0x1217C40 VA: 0x1217C40 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: Firebase
public sealed class InitializationException : Exception // TypeDefIndex: 3244
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC82A0C Offset: 0xC82A0C VA: 0xC82A0C
	[DebuggerBrowsableAttribute] // RVA: 0xC82A0C Offset: 0xC82A0C VA: 0xC82A0C
	private InitResult <InitResult>k__BackingField; // 0x60

	// Properties
	public InitResult InitResult { get; set; }

	// Methods

	// RVA: 0x121755C Offset: 0x121755C VA: 0x121755C
	public void .ctor(InitResult result) { }

	// RVA: 0x120E56C Offset: 0x120E56C VA: 0x120E56C
	public void .ctor(InitResult result, string message) { }

	// RVA: 0x1211374 Offset: 0x1211374 VA: 0x1211374
	public void .ctor(InitResult result, string message, Exception inner) { }

	[CompilerGeneratedAttribute] // RVA: 0xC834B4 Offset: 0xC834B4 VA: 0xC834B4
	// RVA: 0x1211FE8 Offset: 0x1211FE8 VA: 0x1211FE8
	public InitResult get_InitResult() { }

	[CompilerGeneratedAttribute] // RVA: 0xC834C4 Offset: 0xC834C4 VA: 0xC834C4
	// RVA: 0x1217588 Offset: 0x1217588 VA: 0x1217588
	private void set_InitResult(InitResult value) { }
}

// Namespace: Firebase
public sealed class FirebaseException : Exception // TypeDefIndex: 3245
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC82A48 Offset: 0xC82A48 VA: 0xC82A48
	[DebuggerBrowsableAttribute] // RVA: 0xC82A48 Offset: 0xC82A48 VA: 0xC82A48
	private int <ErrorCode>k__BackingField; // 0x60

	// Properties
	public int ErrorCode { get; set; }

	// Methods

	// RVA: 0x1213180 Offset: 0x1213180 VA: 0x1213180
	public void .ctor() { }

	// RVA: 0x12131B0 Offset: 0x12131B0 VA: 0x12131B0
	public void .ctor(int errorCode) { }

	// RVA: 0x12131DC Offset: 0x12131DC VA: 0x12131DC
	public void .ctor(int errorCode, string message) { }

	// RVA: 0x121320C Offset: 0x121320C VA: 0x121320C
	public void .ctor(int errorCode, string message, Exception inner) { }

	[CompilerGeneratedAttribute] // RVA: 0xC834D4 Offset: 0xC834D4 VA: 0xC834D4
	// RVA: 0x1213240 Offset: 0x1213240 VA: 0x1213240
	public int get_ErrorCode() { }

	[CompilerGeneratedAttribute] // RVA: 0xC834E4 Offset: 0xC834E4 VA: 0xC834E4
	// RVA: 0x12131A8 Offset: 0x12131A8 VA: 0x12131A8
	private void set_ErrorCode(int value) { }
}

// Namespace: Firebase
internal class ErrorMessages // TypeDefIndex: 3246
{
	// Fields
	private static string DEPENDENCY_NOT_FOUND_ERROR_ANDROID; // 0x0
	private static string DEPENDENCY_NOT_FOUND_ERROR_IOS; // 0x8
	private static string DEPENDENCY_NOT_FOUND_ERROR_GENERIC; // 0x10
	private static string DLL_NOT_FOUND_ERROR_ANDROID; // 0x18
	private static string DLL_NOT_FOUND_ERROR_IOS; // 0x20
	private static string DLL_NOT_FOUND_ERROR_GENERIC; // 0x28

	// Properties
	internal static string DependencyNotFoundErrorMessage { get; }
	internal static string DllNotFoundExceptionErrorMessage { get; }

	// Methods

	// RVA: 0x120D984 Offset: 0x120D984 VA: 0x120D984
	public void .ctor() { }

	// RVA: 0x120D98C Offset: 0x120D98C VA: 0x120D98C
	internal static string get_DependencyNotFoundErrorMessage() { }

	// RVA: 0x120DA64 Offset: 0x120DA64 VA: 0x120DA64
	internal static string get_DllNotFoundExceptionErrorMessage() { }

	// RVA: 0x120DB94 Offset: 0x120DB94 VA: 0x120DB94
	private static void .cctor() { }
}

// Namespace: Firebase
public enum DependencyStatus // TypeDefIndex: 3247
{
	// Fields
	public int value__; // 0x0
	public const DependencyStatus Available = 0;
	public const DependencyStatus UnavailableDisabled = 1;
	public const DependencyStatus UnavailableInvalid = 2;
	public const DependencyStatus UnavilableMissing = 3;
	public const DependencyStatus UnavailablePermission = 4;
	public const DependencyStatus UnavailableUpdaterequired = 5;
	public const DependencyStatus UnavailableUpdating = 6;
	public const DependencyStatus UnavailableOther = 7;
}

// Namespace: Firebase
public sealed class AppOptions : IDisposable // TypeDefIndex: 3248
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC82A84 Offset: 0xC82A84 VA: 0xC82A84
	[DebuggerBrowsableAttribute] // RVA: 0xC82A84 Offset: 0xC82A84 VA: 0xC82A84
	private Uri <DatabaseUrl>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC82AC0 Offset: 0xC82AC0 VA: 0xC82AC0
	[DebuggerBrowsableAttribute] // RVA: 0xC82AC0 Offset: 0xC82AC0 VA: 0xC82AC0
	private string <AppId>k__BackingField; // 0x18
	[DebuggerBrowsableAttribute] // RVA: 0xC82AFC Offset: 0xC82AFC VA: 0xC82AFC
	[CompilerGeneratedAttribute] // RVA: 0xC82AFC Offset: 0xC82AFC VA: 0xC82AFC
	private string <ApiKey>k__BackingField; // 0x20
	[DebuggerBrowsableAttribute] // RVA: 0xC82B38 Offset: 0xC82B38 VA: 0xC82B38
	[CompilerGeneratedAttribute] // RVA: 0xC82B38 Offset: 0xC82B38 VA: 0xC82B38
	private string <MessageSenderId>k__BackingField; // 0x28
	[DebuggerBrowsableAttribute] // RVA: 0xC82B74 Offset: 0xC82B74 VA: 0xC82B74
	[CompilerGeneratedAttribute] // RVA: 0xC82B74 Offset: 0xC82B74 VA: 0xC82B74
	private string <StorageBucket>k__BackingField; // 0x30
	[DebuggerBrowsableAttribute] // RVA: 0xC82BB0 Offset: 0xC82BB0 VA: 0xC82BB0
	[CompilerGeneratedAttribute] // RVA: 0xC82BB0 Offset: 0xC82BB0 VA: 0xC82BB0
	private string <ProjectId>k__BackingField; // 0x38
	[DebuggerBrowsableAttribute] // RVA: 0xC82BEC Offset: 0xC82BEC VA: 0xC82BEC
	[CompilerGeneratedAttribute] // RVA: 0xC82BEC Offset: 0xC82BEC VA: 0xC82BEC
	private string <PackageName>k__BackingField; // 0x40

	// Properties
	public Uri DatabaseUrl { get; set; }
	public string AppId { get; set; }
	public string ApiKey { get; set; }
	public string MessageSenderId { get; set; }
	public string StorageBucket { get; set; }
	public string ProjectId { get; set; }
	internal string PackageName { get; set; }

	// Methods

	// RVA: 0x11FEFF0 Offset: 0x11FEFF0 VA: 0x11FEFF0
	public void .ctor() { }

	// RVA: 0x11FEFF8 Offset: 0x11FEFF8 VA: 0x11FEFF8
	internal void .ctor(AppOptionsInternal other) { }

	// RVA: 0x11FF6B8 Offset: 0x11FF6B8 VA: 0x11FF6B8 Slot: 4
	public void Dispose() { }

	[CompilerGeneratedAttribute] // RVA: 0xC834F4 Offset: 0xC834F4 VA: 0xC834F4
	// RVA: 0x11FF6BC Offset: 0x11FF6BC VA: 0x11FF6BC
	public Uri get_DatabaseUrl() { }

	[CompilerGeneratedAttribute] // RVA: 0xC83504 Offset: 0xC83504 VA: 0xC83504
	// RVA: 0x11FF170 Offset: 0x11FF170 VA: 0x11FF170
	public void set_DatabaseUrl(Uri value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC83514 Offset: 0xC83514 VA: 0xC83514
