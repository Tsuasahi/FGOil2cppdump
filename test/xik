	public static Task GetTask(FutureVoid fu) { }

	// RVA: 0x251C330 Offset: 0x251C330 VA: 0x251C330
	private void ThrowIfDisposed() { }

	// RVA: 0x251C114 Offset: 0x251C114 VA: 0x251C114
	public void SetOnCompletionCallback(FutureVoid.Action userCompletionCallback) { }

	// RVA: 0x251C0C8 Offset: 0x251C0C8 VA: 0x251C0C8
	private void SetCompletionData(IntPtr data) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC171F0 Offset: 0xC171F0 VA: 0xC171F0
	// RVA: 0x251BBEC Offset: 0x251BBEC VA: 0x251BBEC
	private static void SWIG_CompletionDispatcher(int key) { }

	// RVA: 0x251C3E0 Offset: 0x251C3E0 VA: 0x251C3E0
	internal IntPtr SWIG_OnCompletion(FutureVoid.SWIG_CompletionDelegate cs_callback, int cs_key) { }

	// RVA: 0x251C4D0 Offset: 0x251C4D0 VA: 0x251C4D0
	public void SWIG_FreeCompletionData(IntPtr data) { }

	// RVA: 0x251C7AC Offset: 0x251C7AC VA: 0x251C7AC
	private static void .cctor() { }
}

// Namespace: 
public sealed class FutureVoid.Action : MulticastDelegate // TypeDefIndex: 3220
{
	// Methods

	// RVA: 0x251C104 Offset: 0x251C104 VA: 0x251C104
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x251C5AC Offset: 0x251C5AC VA: 0x251C5AC Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x251CA80 Offset: 0x251CA80 VA: 0x251CA80 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x251CAB4 Offset: 0x251CAB4 VA: 0x251CAB4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
internal sealed class FutureVoid.SWIG_CompletionDelegate : MulticastDelegate // TypeDefIndex: 3221
{
	// Methods

	// RVA: 0x251C3D0 Offset: 0x251C3D0 VA: 0x251C3D0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x251CAC0 Offset: 0x251CAC0 VA: 0x251CAC0 Slot: 11
	public virtual void Invoke(int index) { }

	// RVA: 0x251CCEC Offset: 0x251CCEC VA: 0x251CCEC Slot: 12
	public virtual IAsyncResult BeginInvoke(int index, AsyncCallback callback, object object) { }

	// RVA: 0x251CD78 Offset: 0x251CD78 VA: 0x251CD78 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC16698 Offset: 0xC16698 VA: 0xC16698
private sealed class FutureVoid.<GetTask>c__AnonStorey0 // TypeDefIndex: 3222
{
	// Fields
	internal FutureVoid fu; // 0x10
	internal TaskCompletionSource<int> tcs; // 0x18

	// Methods

	// RVA: 0x251C0FC Offset: 0x251C0FC VA: 0x251C0FC
	public void .ctor() { }

	// RVA: 0x251C824 Offset: 0x251C824 VA: 0x251C824
	internal void <>m__0() { }
}

// Namespace: Firebase
internal class FutureString : FutureBase // TypeDefIndex: 3223
{
	// Fields
	private HandleRef swigCPtr; // 0x28
	private static Dictionary<int, FutureString.Action> Callbacks; // 0x0
	private static int CallbackIndex; // 0x8
	private static object CallbackLock; // 0x10
	private IntPtr callbackData; // 0x38
	private FutureString.SWIG_CompletionDelegate SWIG_CompletionCB; // 0x40

	// Methods

	// RVA: 0x251A8B8 Offset: 0x251A8B8 VA: 0x251A8B8
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x251A96C Offset: 0x251A96C VA: 0x251A96C
	public void .ctor() { }

	// RVA: 0x251AA3C Offset: 0x251AA3C VA: 0x251AA3C
	internal static HandleRef getCPtr(FutureString obj) { }

	// RVA: 0x251AAAC Offset: 0x251AAAC VA: 0x251AAAC Slot: 1
	protected override void Finalize() { }

	// RVA: 0x251AB20 Offset: 0x251AB20 VA: 0x251AB20 Slot: 5
	public override void Dispose() { }

	// RVA: 0x251ACD8 Offset: 0x251ACD8 VA: 0x251ACD8
	public static Task<string> GetTask(FutureString fu) { }

	// RVA: 0x251B0A8 Offset: 0x251B0A8 VA: 0x251B0A8
	private void ThrowIfDisposed() { }

	// RVA: 0x251AE8C Offset: 0x251AE8C VA: 0x251AE8C
	public void SetOnCompletionCallback(FutureString.Action userCompletionCallback) { }

	// RVA: 0x251ACA4 Offset: 0x251ACA4 VA: 0x251ACA4
	private void SetCompletionData(IntPtr data) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC17254 Offset: 0xC17254 VA: 0xC17254
	// RVA: 0x251A714 Offset: 0x251A714 VA: 0x251A714
	private static void SWIG_CompletionDispatcher(int key) { }

	// RVA: 0x251B158 Offset: 0x251B158 VA: 0x251B158
	internal IntPtr SWIG_OnCompletion(FutureString.SWIG_CompletionDelegate cs_callback, int cs_key) { }

	// RVA: 0x251B248 Offset: 0x251B248 VA: 0x251B248
	public void SWIG_FreeCompletionData(IntPtr data) { }

	// RVA: 0x251B524 Offset: 0x251B524 VA: 0x251B524
	public string GetResult() { }

	// RVA: 0x251B5FC Offset: 0x251B5FC VA: 0x251B5FC
	private static void .cctor() { }
}

// Namespace: 
public sealed class FutureString.Action : MulticastDelegate // TypeDefIndex: 3224
{
	// Methods

	// RVA: 0x251AE7C Offset: 0x251AE7C VA: 0x251AE7C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x251B324 Offset: 0x251B324 VA: 0x251B324 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x251B8E8 Offset: 0x251B8E8 VA: 0x251B8E8 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x251B91C Offset: 0x251B91C VA: 0x251B91C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
internal sealed class FutureString.SWIG_CompletionDelegate : MulticastDelegate // TypeDefIndex: 3225
{
	// Methods

	// RVA: 0x251B148 Offset: 0x251B148 VA: 0x251B148
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x251B928 Offset: 0x251B928 VA: 0x251B928 Slot: 11
	public virtual void Invoke(int index) { }

	// RVA: 0x251BB54 Offset: 0x251BB54 VA: 0x251BB54 Slot: 12
	public virtual IAsyncResult BeginInvoke(int index, AsyncCallback callback, object object) { }

	// RVA: 0x251BBE0 Offset: 0x251BBE0 VA: 0x251BBE0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC166A8 Offset: 0xC166A8 VA: 0xC166A8
private sealed class FutureString.<GetTask>c__AnonStorey0 // TypeDefIndex: 3226
{
	// Fields
	internal FutureString fu; // 0x10
	internal TaskCompletionSource<string> tcs; // 0x18

	// Methods

	// RVA: 0x251AE74 Offset: 0x251AE74 VA: 0x251AE74
	public void .ctor() { }

	// RVA: 0x251B674 Offset: 0x251B674 VA: 0x251B674
	internal void <>m__0() { }
}

// Namespace: Firebase
[DefaultMemberAttribute] // RVA: 0xC166B8 Offset: 0xC166B8 VA: 0xC166B8
internal class CharVector : IDisposable, IEnumerable, IList<byte>, ICollection<byte>, IEnumerable<byte> // TypeDefIndex: 3227
{
	// Fields
	private HandleRef swigCPtr; // 0x10
	protected bool swigCMemOwn; // 0x20

	// Properties
	public bool IsFixedSize { get; }
	public bool IsReadOnly { get; }
	public byte Item { get; set; }
	public int Capacity { get; set; }
	public int Count { get; }
	public bool IsSynchronized { get; }

	// Methods

	// RVA: 0x2510DA0 Offset: 0x2510DA0 VA: 0x2510DA0
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x2510E04 Offset: 0x2510E04 VA: 0x2510E04
	public void .ctor(ICollection c) { }

	// RVA: 0x25110EC Offset: 0x25110EC VA: 0x25110EC
	public void .ctor() { }

	// RVA: 0x2511298 Offset: 0x2511298 VA: 0x2511298
	public void .ctor(CharVector other) { }

	// RVA: 0x25113FC Offset: 0x25113FC VA: 0x25113FC
	public void .ctor(int capacity) { }

	// RVA: 0x251138C Offset: 0x251138C VA: 0x251138C
	internal static HandleRef getCPtr(CharVector obj) { }

	// RVA: 0x25114DC Offset: 0x25114DC VA: 0x25114DC Slot: 1
	protected override void Finalize() { }

	// RVA: 0x251155C Offset: 0x251155C VA: 0x251155C Slot: 19
	public virtual void Dispose() { }

	// RVA: 0x25116C0 Offset: 0x25116C0 VA: 0x25116C0
	public bool get_IsFixedSize() { }

	// RVA: 0x25116C8 Offset: 0x25116C8 VA: 0x25116C8 Slot: 12
	public bool get_IsReadOnly() { }

	// RVA: 0x25116D0 Offset: 0x25116D0 VA: 0x25116D0 Slot: 9
	public byte get_Item(int index) { }

	// RVA: 0x25117BC Offset: 0x25117BC VA: 0x25117BC Slot: 10
	public void set_Item(int index, byte value) { }

	// RVA: 0x25118A4 Offset: 0x25118A4 VA: 0x25118A4
	public int get_Capacity() { }

	// RVA: 0x2511980 Offset: 0x2511980 VA: 0x2511980
	public void set_Capacity(int value) { }

	// RVA: 0x2511BE0 Offset: 0x2511BE0 VA: 0x2511BE0 Slot: 11
	public int get_Count() { }

	// RVA: 0x2511BE4 Offset: 0x2511BE4 VA: 0x2511BE4
	public bool get_IsSynchronized() { }

	// RVA: 0x2511BEC Offset: 0x2511BEC VA: 0x2511BEC
	public void CopyTo(byte[] array) { }

	// RVA: 0x2511E40 Offset: 0x2511E40 VA: 0x2511E40 Slot: 16
	public void CopyTo(byte[] array, int arrayIndex) { }

	// RVA: 0x2511C24 Offset: 0x2511C24 VA: 0x2511C24
	public void CopyTo(int index, byte[] array, int arrayIndex, int count) { }

	// RVA: 0x2511F6C Offset: 0x2511F6C VA: 0x2511F6C Slot: 18
	private IEnumerator<byte> System.Collections.Generic.IEnumerable<byte>.GetEnumerator() { }

	// RVA: 0x251201C Offset: 0x251201C VA: 0x251201C Slot: 5
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x251207C Offset: 0x251207C VA: 0x251207C
	public CharVector.CharVectorEnumerator GetEnumerator() { }

	// RVA: 0x25120DC Offset: 0x25120DC VA: 0x25120DC Slot: 14
	public void Clear() { }

	// RVA: 0x25111BC Offset: 0x25111BC VA: 0x25111BC Slot: 13
	public void Add(byte x) { }

	// RVA: 0x2511A2C Offset: 0x2511A2C VA: 0x2511A2C
	private uint size() { }

	// RVA: 0x25118A8 Offset: 0x25118A8 VA: 0x25118A8
	private uint capacity() { }

	// RVA: 0x2511B04 Offset: 0x2511B04 VA: 0x2511B04
	private void reserve(uint n) { }

	// RVA: 0x2511E84 Offset: 0x2511E84 VA: 0x2511E84
	private byte getitemcopy(int index) { }

	// RVA: 0x25116D4 Offset: 0x25116D4 VA: 0x25116D4
	private byte getitem(int index) { }

	// RVA: 0x25117C0 Offset: 0x25117C0 VA: 0x25117C0
	private void setitem(int index, byte val) { }

	// RVA: 0x25121A8 Offset: 0x25121A8 VA: 0x25121A8
	public void AddRange(CharVector values) { }

	// RVA: 0x2512298 Offset: 0x2512298 VA: 0x2512298
	public CharVector GetRange(int index, int count) { }

	// RVA: 0x25123B8 Offset: 0x25123B8 VA: 0x25123B8 Slot: 7
	public void Insert(int index, byte x) { }

	// RVA: 0x251249C Offset: 0x251249C VA: 0x251249C
	public void InsertRange(int index, CharVector values) { }

	// RVA: 0x251259C Offset: 0x251259C VA: 0x251259C Slot: 8
	public void RemoveAt(int index) { }

	// RVA: 0x2512678 Offset: 0x2512678 VA: 0x2512678
	public void RemoveRange(int index, int count) { }

	// RVA: 0x251275C Offset: 0x251275C VA: 0x251275C
	public static CharVector Repeat(byte value, int count) { }

	// RVA: 0x251286C Offset: 0x251286C VA: 0x251286C
	public void Reverse() { }

	// RVA: 0x2512938 Offset: 0x2512938 VA: 0x2512938
	public void Reverse(int index, int count) { }

	// RVA: 0x2512A1C Offset: 0x2512A1C VA: 0x2512A1C
	public void SetRange(int index, CharVector values) { }

	// RVA: 0x2512B1C Offset: 0x2512B1C VA: 0x2512B1C Slot: 15
	public bool Contains(byte value) { }

	// RVA: 0x2512C04 Offset: 0x2512C04 VA: 0x2512C04 Slot: 6
	public int IndexOf(byte value) { }

	// RVA: 0x2512CEC Offset: 0x2512CEC VA: 0x2512CEC
	public int LastIndexOf(byte value) { }

	// RVA: 0x2512DD4 Offset: 0x2512DD4 VA: 0x2512DD4 Slot: 17
	public bool Remove(byte value) { }
}

// Namespace: 
public sealed class CharVector.CharVectorEnumerator : IEnumerator, IEnumerator<byte>, IDisposable // TypeDefIndex: 3228
{
	// Fields
	private CharVector collectionRef; // 0x10
	private int currentIndex; // 0x18
	private object currentObject; // 0x20
	private int currentSize; // 0x28

	// Properties
	private object System.Collections.IEnumerator.Current { get; }
	public byte Current { get; }

	// Methods

	// RVA: 0x2511FCC Offset: 0x2511FCC VA: 0x2511FCC
	public void .ctor(CharVector collection) { }

	// RVA: 0x2512EBC Offset: 0x2512EBC VA: 0x2512EBC Slot: 7
	public byte get_Current() { }

	// RVA: 0x2512FB0 Offset: 0x2512FB0 VA: 0x2512FB0 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	// RVA: 0x251301C Offset: 0x251301C VA: 0x251301C Slot: 5
	public bool MoveNext() { }

	// RVA: 0x25130E8 Offset: 0x25130E8 VA: 0x25130E8 Slot: 6
	public void Reset() { }

	// RVA: 0x251319C Offset: 0x251319C VA: 0x251319C Slot: 8
	public void Dispose() { }
}

// Namespace: Firebase
[DefaultMemberAttribute] // RVA: 0xC166F0 Offset: 0xC166F0 VA: 0xC166F0
internal class StringList : IDisposable, IEnumerable, IList<string>, ICollection<string>, IEnumerable<string> // TypeDefIndex: 3229
{
	// Fields
	private HandleRef swigCPtr; // 0x10
	protected bool swigCMemOwn; // 0x20

	// Properties
	public bool IsFixedSize { get; }
	public bool IsReadOnly { get; }
	public string Item { get; set; }
	public int Capacity { get; set; }
	public int Count { get; }
	public bool IsSynchronized { get; }

	// Methods

	// RVA: 0x251D658 Offset: 0x251D658 VA: 0x251D658
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x251D6BC Offset: 0x251D6BC VA: 0x251D6BC
	public void .ctor(ICollection c) { }

	// RVA: 0x251DA04 Offset: 0x251DA04 VA: 0x251DA04
	public void .ctor() { }

	// RVA: 0x251DBB0 Offset: 0x251DBB0 VA: 0x251DBB0
	public void .ctor(StringList other) { }

	// RVA: 0x251DD14 Offset: 0x251DD14 VA: 0x251DD14
	public void .ctor(int capacity) { }

	// RVA: 0x251DCA4 Offset: 0x251DCA4 VA: 0x251DCA4
	internal static HandleRef getCPtr(StringList obj) { }

	// RVA: 0x251DDF4 Offset: 0x251DDF4 VA: 0x251DDF4 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x251DE74 Offset: 0x251DE74 VA: 0x251DE74 Slot: 19
	public virtual void Dispose() { }

	// RVA: 0x251DFD8 Offset: 0x251DFD8 VA: 0x251DFD8
	public bool get_IsFixedSize() { }

	// RVA: 0x251DFE0 Offset: 0x251DFE0 VA: 0x251DFE0 Slot: 12
	public bool get_IsReadOnly() { }

	// RVA: 0x251DFE8 Offset: 0x251DFE8 VA: 0x251DFE8 Slot: 9
	public string get_Item(int index) { }

	// RVA: 0x251E0D4 Offset: 0x251E0D4 VA: 0x251E0D4 Slot: 10
	public void set_Item(int index, string value) { }

	// RVA: 0x251E1BC Offset: 0x251E1BC VA: 0x251E1BC
	public int get_Capacity() { }

	// RVA: 0x251E298 Offset: 0x251E298 VA: 0x251E298
	public void set_Capacity(int value) { }

	// RVA: 0x251E4F8 Offset: 0x251E4F8 VA: 0x251E4F8 Slot: 11
	public int get_Count() { }

	// RVA: 0x251E4FC Offset: 0x251E4FC VA: 0x251E4FC
	public bool get_IsSynchronized() { }

	// RVA: 0x251E504 Offset: 0x251E504 VA: 0x251E504
	public void CopyTo(string[] array) { }

	// RVA: 0x251E734 Offset: 0x251E734 VA: 0x251E734 Slot: 16
	public void CopyTo(string[] array, int arrayIndex) { }

	// RVA: 0x251E53C Offset: 0x251E53C VA: 0x251E53C
	public void CopyTo(int index, string[] array, int arrayIndex, int count) { }

	// RVA: 0x251E860 Offset: 0x251E860 VA: 0x251E860 Slot: 18
	private IEnumerator<string> System.Collections.Generic.IEnumerable<string>.GetEnumerator() { }

	// RVA: 0x251E910 Offset: 0x251E910 VA: 0x251E910 Slot: 5
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x251E970 Offset: 0x251E970 VA: 0x251E970
	public StringList.StringListEnumerator GetEnumerator() { }

	// RVA: 0x251E9D0 Offset: 0x251E9D0 VA: 0x251E9D0 Slot: 14
	public void Clear() { }

	// RVA: 0x251DAD4 Offset: 0x251DAD4 VA: 0x251DAD4 Slot: 13
	public void Add(string x) { }

	// RVA: 0x251E344 Offset: 0x251E344 VA: 0x251E344
	private uint size() { }

	// RVA: 0x251E1C0 Offset: 0x251E1C0 VA: 0x251E1C0
	private uint capacity() { }

	// RVA: 0x251E41C Offset: 0x251E41C VA: 0x251E41C
	private void reserve(uint n) { }

	// RVA: 0x251E778 Offset: 0x251E778 VA: 0x251E778
	private string getitemcopy(int index) { }

	// RVA: 0x251DFEC Offset: 0x251DFEC VA: 0x251DFEC
	private string getitem(int index) { }

	// RVA: 0x251E0D8 Offset: 0x251E0D8 VA: 0x251E0D8
	private void setitem(int index, string val) { }

	// RVA: 0x251EA9C Offset: 0x251EA9C VA: 0x251EA9C
	public void AddRange(StringList values) { }

	// RVA: 0x251EB8C Offset: 0x251EB8C VA: 0x251EB8C
	public StringList GetRange(int index, int count) { }

	// RVA: 0x251ECAC Offset: 0x251ECAC VA: 0x251ECAC Slot: 7
	public void Insert(int index, string x) { }

	// RVA: 0x251ED90 Offset: 0x251ED90 VA: 0x251ED90
	public void InsertRange(int index, StringList values) { }

	// RVA: 0x251EE90 Offset: 0x251EE90 VA: 0x251EE90 Slot: 8
	public void RemoveAt(int index) { }

	// RVA: 0x251EF6C Offset: 0x251EF6C VA: 0x251EF6C
	public void RemoveRange(int index, int count) { }

	// RVA: 0x251F050 Offset: 0x251F050 VA: 0x251F050
	public static StringList Repeat(string value, int count) { }

	// RVA: 0x251F160 Offset: 0x251F160 VA: 0x251F160
	public void Reverse() { }

	// RVA: 0x251F22C Offset: 0x251F22C VA: 0x251F22C
	public void Reverse(int index, int count) { }

	// RVA: 0x251F310 Offset: 0x251F310 VA: 0x251F310
	public void SetRange(int index, StringList values) { }

	// RVA: 0x251F410 Offset: 0x251F410 VA: 0x251F410 Slot: 15
	public bool Contains(string value) { }

	// RVA: 0x251F4F8 Offset: 0x251F4F8 VA: 0x251F4F8 Slot: 6
	public int IndexOf(string value) { }

	// RVA: 0x251F5E0 Offset: 0x251F5E0 VA: 0x251F5E0
	public int LastIndexOf(string value) { }

	// RVA: 0x251F6C8 Offset: 0x251F6C8 VA: 0x251F6C8 Slot: 17
	public bool Remove(string value) { }
}

// Namespace: 
public sealed class StringList.StringListEnumerator : IEnumerator, IEnumerator<string>, IDisposable // TypeDefIndex: 3230
{
	// Fields
	private StringList collectionRef; // 0x10
	private int currentIndex; // 0x18
	private object currentObject; // 0x20
	private int currentSize; // 0x28

	// Properties
	private object System.Collections.IEnumerator.Current { get; }
	public string Current { get; }

	// Methods

	// RVA: 0x251E8C0 Offset: 0x251E8C0 VA: 0x251E8C0
	public void .ctor(StringList collection) { }

	// RVA: 0x251F7B0 Offset: 0x251F7B0 VA: 0x251F7B0 Slot: 7
	public string get_Current() { }

	// RVA: 0x251F8F8 Offset: 0x251F8F8 VA: 0x251F8F8 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	// RVA: 0x251F8FC Offset: 0x251F8FC VA: 0x251F8FC Slot: 5
	public bool MoveNext() { }

	// RVA: 0x251F98C Offset: 0x251F98C VA: 0x251F98C Slot: 6
	public void Reset() { }

	// RVA: 0x251FA40 Offset: 0x251FA40 VA: 0x251FA40 Slot: 8
	public void Dispose() { }
}

// Namespace: Firebase
[DefaultMemberAttribute] // RVA: 0xC16728 Offset: 0xC16728 VA: 0xC16728
internal class StringStringMap : IDisposable, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable // TypeDefIndex: 3231
{
	// Fields
	private HandleRef swigCPtr; // 0x10
	protected bool swigCMemOwn; // 0x20

	// Properties
	public string Item { get; set; }
	public int Count { get; }
	public bool IsReadOnly { get; }
	public ICollection<string> Keys { get; }
	public ICollection<string> Values { get; }

	// Methods

	// RVA: 0x251FA50 Offset: 0x251FA50 VA: 0x251FA50
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x251FAB4 Offset: 0x251FAB4 VA: 0x251FAB4
	public void .ctor() { }

	// RVA: 0x251FB84 Offset: 0x251FB84 VA: 0x251FB84
	public void .ctor(StringStringMap other) { }

	// RVA: 0x251FC78 Offset: 0x251FC78 VA: 0x251FC78
	internal static HandleRef getCPtr(StringStringMap obj) { }

	// RVA: 0x251FCE8 Offset: 0x251FCE8 VA: 0x251FCE8 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x251FD68 Offset: 0x251FD68 VA: 0x251FD68 Slot: 21
	public virtual void Dispose() { }

	// RVA: 0x251FECC Offset: 0x251FECC VA: 0x251FECC Slot: 8
	public string get_Item(string key) { }

	// RVA: 0x251FFB8 Offset: 0x251FFB8 VA: 0x251FFB8 Slot: 9
	public void set_Item(string key, string value) { }

	// RVA: 0x25200A0 Offset: 0x25200A0 VA: 0x25200A0 Slot: 7
	public bool TryGetValue(string key, out string value) { }

	// RVA: 0x25201E0 Offset: 0x25201E0 VA: 0x25201E0 Slot: 13
	public int get_Count() { }

	// RVA: 0x25202BC Offset: 0x25202BC VA: 0x25202BC Slot: 14
	public bool get_IsReadOnly() { }

	// RVA: 0x25202C4 Offset: 0x25202C4 VA: 0x25202C4 Slot: 10
	public ICollection<string> get_Keys() { }

	// RVA: 0x25206A8 Offset: 0x25206A8 VA: 0x25206A8 Slot: 11
	public ICollection<string> get_Values() { }

	// RVA: 0x2520B94 Offset: 0x2520B94 VA: 0x2520B94 Slot: 15
	public void Add(KeyValuePair<string, string> item) { }

	// RVA: 0x2520D00 Offset: 0x2520D00 VA: 0x2520D00 Slot: 19
	public bool Remove(KeyValuePair<string, string> item) { }

	// RVA: 0x2520D9C Offset: 0x2520D9C VA: 0x2520D9C Slot: 17
	public bool Contains(KeyValuePair<string, string> item) { }

	// RVA: 0x2520F44 Offset: 0x2520F44 VA: 0x2520F44
	public void CopyTo(KeyValuePair<string, string>[] array) { }

	// RVA: 0x2520F4C Offset: 0x2520F4C VA: 0x2520F4C Slot: 18
	public void CopyTo(KeyValuePair<string, string>[] array, int arrayIndex) { }

	// RVA: 0x252126C Offset: 0x252126C VA: 0x252126C Slot: 20
	private IEnumerator<KeyValuePair<string, string>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>>.GetEnumerator() { }

	// RVA: 0x2521398 Offset: 0x2521398 VA: 0x2521398 Slot: 12
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0x25208C4 Offset: 0x25208C4 VA: 0x25208C4
	public StringStringMap.StringStringMapEnumerator GetEnumerator() { }

	// RVA: 0x25201E4 Offset: 0x25201E4 VA: 0x25201E4
	private uint size() { }

	// RVA: 0x25213F8 Offset: 0x25213F8 VA: 0x25213F8
	public bool empty() { }

	// RVA: 0x25214D0 Offset: 0x25214D0 VA: 0x25214D0 Slot: 16
	public void Clear() { }

	// RVA: 0x251FED0 Offset: 0x251FED0 VA: 0x251FED0
	private string getitem(string key) { }

	// RVA: 0x251FFBC Offset: 0x251FFBC VA: 0x251FFBC
	private void setitem(string key, string x) { }

	// RVA: 0x25200F8 Offset: 0x25200F8 VA: 0x25200F8 Slot: 5
	public bool ContainsKey(string key) { }

	// RVA: 0x2520C1C Offset: 0x2520C1C VA: 0x2520C1C Slot: 22
	public void Add(string key, string val) { }

	// RVA: 0x2520E5C Offset: 0x2520E5C VA: 0x2520E5C Slot: 6
	public bool Remove(string key) { }

	// RVA: 0x252040C Offset: 0x252040C VA: 0x252040C
	private IntPtr create_iterator_begin() { }

	// RVA: 0x25204E4 Offset: 0x25204E4 VA: 0x25204E4
	private string get_next_key(IntPtr swigiterator) { }

	// RVA: 0x25205CC Offset: 0x25205CC VA: 0x25205CC
	private void destroy_iterator(IntPtr swigiterator) { }
}

// Namespace: 
public sealed class StringStringMap.StringStringMapEnumerator : IEnumerator, IEnumerator<KeyValuePair<string, string>>, IDisposable // TypeDefIndex: 3232
{
	// Fields
	private StringStringMap collectionRef; // 0x10
	private IList<string> keyCollection; // 0x18
	private int currentIndex; // 0x20
	private object currentObject; // 0x28
	private int currentSize; // 0x30

	// Properties
	private object System.Collections.IEnumerator.Current { get; }
	public KeyValuePair<string, string> Current { get; }

	// Methods

	// RVA: 0x25212CC Offset: 0x25212CC VA: 0x25212CC
	public void .ctor(StringStringMap collection) { }

	// RVA: 0x2520924 Offset: 0x2520924 VA: 0x2520924 Slot: 7
	public KeyValuePair<string, string> get_Current() { }

	// RVA: 0x252159C Offset: 0x252159C VA: 0x252159C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	// RVA: 0x2520A1C Offset: 0x2520A1C VA: 0x2520A1C Slot: 5
	public bool MoveNext() { }

	// RVA: 0x2521608 Offset: 0x2521608 VA: 0x2521608 Slot: 6
	public void Reset() { }

	// RVA: 0x25216BC Offset: 0x25216BC VA: 0x25216BC Slot: 8
	public void Dispose() { }
}

// Namespace: Firebase
internal class FutureBase : IDisposable // TypeDefIndex: 3233
{
	// Fields
	private HandleRef swigCPtr; // 0x10
	protected bool swigCMemOwn; // 0x20

	// Methods

	// RVA: 0x2518A70 Offset: 0x2518A70 VA: 0x2518A70
	internal void .ctor(IntPtr cPtr, bool cMemoryOwn) { }

	// RVA: 0x2518AD4 Offset: 0x2518AD4 VA: 0x2518AD4
	public void .ctor() { }

	// RVA: 0x2518BA4 Offset: 0x2518BA4 VA: 0x2518BA4
	public void .ctor(FutureBase rhs) { }

	// RVA: 0x2518C98 Offset: 0x2518C98 VA: 0x2518C98
	internal static HandleRef getCPtr(FutureBase obj) { }

	// RVA: 0x2518D08 Offset: 0x2518D08 VA: 0x2518D08 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x2518D84 Offset: 0x2518D84 VA: 0x2518D84 Slot: 5
	public virtual void Dispose() { }

	// RVA: 0x2518EE8 Offset: 0x2518EE8 VA: 0x2518EE8
	public void Release() { }

	// RVA: 0x2518FB4 Offset: 0x2518FB4 VA: 0x2518FB4
	public FutureStatus status() { }

	// RVA: 0x251908C Offset: 0x251908C VA: 0x251908C
	public int error() { }

	// RVA: 0x2519164 Offset: 0x2519164 VA: 0x2519164
	public string error_message() { }
}

// Namespace: Firebase
internal enum FutureStatus // TypeDefIndex: 3234
{
	// Fields
	public int value__; // 0x0
	public const FutureStatus Complete = 0;
	public const FutureStatus Pending = 1;
	public const FutureStatus Invalid = 2;
}

// Namespace: Firebase.Internal
internal static class TaskCompletionSourceCompat<T> // TypeDefIndex: 3235
{
	// Methods

	// RVA: -1 Offset: -1
	private static void SetExceptionInternal(TaskCompletionSource<T> tcs, AggregateException exception) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226C7DC Offset: 0x226C7DC VA: 0x226C7DC
	|-TaskCompletionSourceCompat<object>.SetExceptionInternal
	*/

	// RVA: -1 Offset: -1
	public static void SetException(TaskCompletionSource<T> tcs, AggregateException exception) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226C868 Offset: 0x226C868 VA: 0x226C868
	|-TaskCompletionSourceCompat<object>.SetException
	*/
}

// Namespace: Firebase.Platform
internal class FirebaseAppPlatform : IFirebaseAppPlatform // TypeDefIndex: 3236
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC16898 Offset: 0xC16898 VA: 0xC16898
	[DebuggerBrowsableAttribute] // RVA: 0xC16898 Offset: 0xC16898 VA: 0xC16898
	private WeakReference <app>k__BackingField; // 0x10

	// Properties
	private WeakReference app { set; }

	// Methods

	// RVA: 0x2517DC4 Offset: 0x2517DC4 VA: 0x2517DC4
	internal void .ctor(FirebaseApp wrappedApp) { }

	[CompilerGeneratedAttribute] // RVA: 0xC172B8 Offset: 0xC172B8 VA: 0xC172B8
	// RVA: 0x251D47C Offset: 0x251D47C VA: 0x251D47C
	private void set_app(WeakReference value) { }
}

// Namespace: Firebase.Platform
internal class FirebaseAppUtils : IFirebaseAppUtils // TypeDefIndex: 3237
{
	// Fields
	private static FirebaseAppUtils instance; // 0x0

	// Properties
	public static FirebaseAppUtils Instance { get; }

	// Methods

	// RVA: 0x251D484 Offset: 0x251D484 VA: 0x251D484
	public void .ctor() { }

	// RVA: 0x2516BD0 Offset: 0x2516BD0 VA: 0x2516BD0
	public static FirebaseAppUtils get_Instance() { }

	// RVA: 0x251D48C Offset: 0x251D48C VA: 0x251D48C Slot: 4
	public void TranslateDllNotFoundException(Action action) { }

	// RVA: 0x251D4F0 Offset: 0x251D4F0 VA: 0x251D4F0 Slot: 5
	public void PollCallbacks() { }

	// RVA: 0x251D4F4 Offset: 0x251D4F4 VA: 0x251D4F4 Slot: 6
	public PlatformLogLevel GetLogLevel() { }

	// RVA: 0x251D5F4 Offset: 0x251D5F4 VA: 0x251D5F4
	private static void .cctor() { }
}

// Namespace: Firebase
internal class VersionInfo // TypeDefIndex: 3238
{
	// Properties
	internal static string SdkVersion { get; }

	// Methods

	// RVA: 0x2B7E124 Offset: 0x2B7E124 VA: 0x2B7E124
	public void .ctor() { }

	// RVA: 0x2B7E12C Offset: 0x2B7E12C VA: 0x2B7E12C
	internal static string get_SdkVersion() { }
}

// Namespace: Firebase
[ExtensionAttribute] // RVA: 0xC16760 Offset: 0xC16760 VA: 0xC16760
internal static class VariantExtension // TypeDefIndex: 3239
{
	// Fields
	private const VariantExtension.KeyOptions DefaultKeyOptions = 0;

	// Methods

	[ExtensionAttribute] // RVA: 0xC172C8 Offset: 0xC172C8 VA: 0xC172C8
	// RVA: 0x2B797D4 Offset: 0x2B797D4 VA: 0x2B797D4
	public static object ToObject(Variant variant) { }

	[ExtensionAttribute] // RVA: 0xC172D8 Offset: 0xC172D8 VA: 0xC172D8
	// RVA: 0x2B7980C Offset: 0x2B7980C VA: 0x2B7980C
	public static object ToObject(Variant variant, VariantExtension.KeyOptions options) { }

	[ExtensionAttribute] // RVA: 0xC172E8 Offset: 0xC172E8 VA: 0xC172E8
	// RVA: 0x2B79840 Offset: 0x2B79840 VA: 0x2B79840
	private static object ToObjectInternal(Variant variant, VariantExtension.KeyOptions options) { }

	[ExtensionAttribute] // RVA: 0xC172F8 Offset: 0xC172F8 VA: 0xC172F8
	// RVA: 0x2B7A614 Offset: 0x2B7A614 VA: 0x2B7A614
	public static IDictionary<string, object> ToStringVariantMap(VariantVariantMap originalMap) { }

	[ExtensionAttribute] // RVA: 0xC17308 Offset: 0xC17308 VA: 0xC17308
	// RVA: 0x2B79FA0 Offset: 0x2B79FA0 VA: 0x2B79FA0
	public static IDictionary<string, object> ToStringVariantMap(VariantVariantMap originalMap, VariantExtension.KeyOptions options) { }
}

// Namespace: 
internal enum VariantExtension.KeyOptions // TypeDefIndex: 3240
{
	// Fields
	public int value__; // 0x0
	public const VariantExtension.KeyOptions UseObjectKeys = 0;
	public const VariantExtension.KeyOptions UseStringKeys = 1;
}

// Namespace: Firebase
[AttributeUsageAttribute] // RVA: 0xC16770 Offset: 0xC16770 VA: 0xC16770
internal sealed class MonoPInvokeCallbackAttribute : Attribute // TypeDefIndex: 3241
{
	// Methods

	// RVA: 0x251D474 Offset: 0x251D474 VA: 0x251D474
	public void .ctor(Type t) { }
}

// Namespace: Firebase
internal sealed class LogUtil : IDisposable // TypeDefIndex: 3242
{
	// Fields
	private static LogUtil _instance; // 0x0
	private static object InitializeLoggingLock; // 0x8
	private bool _disposed; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC168D4 Offset: 0xC168D4 VA: 0xC168D4
	private static LogUtil.LogMessageDelegate <>f__mg$cache0; // 0x10

	// Methods

	// RVA: 0x251CE68 Offset: 0x251CE68 VA: 0x251CE68
	private static void .cctor() { }

	// RVA: 0x251CEF8 Offset: 0x251CEF8 VA: 0x251CEF8
	public void .ctor() { }

	// RVA: 0x251363C Offset: 0x251363C VA: 0x251363C
	public static void InitializeLogging() { }

	// RVA: 0x251D054 Offset: 0x251D054 VA: 0x251D054
	internal static PlatformLogLevel ConvertLogLevel(LogLevel logLevel) { }

	// RVA: 0x25167E8 Offset: 0x25167E8 VA: 0x25167E8
	internal static void LogMessage(LogLevel logLevel, string message) { }

	[MonoPInvokeCallbackAttribute] // RVA: 0xC17318 Offset: 0xC17318 VA: 0xC17318
	// RVA: 0x251CDB8 Offset: 0x251CDB8 VA: 0x251CDB8
	internal static void LogMessageFromCallback(LogLevel logLevel, string message) { }

	// RVA: 0x251D060 Offset: 0x251D060 VA: 0x251D060 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x251D11C Offset: 0x251D11C VA: 0x251D11C Slot: 4
	public void Dispose() { }

	// RVA: 0x251D0E8 Offset: 0x251D0E8 VA: 0x251D0E8
	protected void Dispose(bool disposing) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1737C Offset: 0xC1737C VA: 0xC1737C
	// RVA: 0x251D158 Offset: 0x251D158 VA: 0x251D158
	private void <LogUtil>m__0(object sender, EventArgs e) { }
}

// Namespace: 
internal sealed class LogUtil.LogMessageDelegate : MulticastDelegate // TypeDefIndex: 3243
{
	// Methods

	// RVA: 0x251D044 Offset: 0x251D044 VA: 0x251D044
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x251D18C Offset: 0x251D18C VA: 0x251D18C Slot: 11
	public virtual void Invoke(LogLevel log_level, string message) { }

	// RVA: 0x251D3D0 Offset: 0x251D3D0 VA: 0x251D3D0 Slot: 12
	public virtual IAsyncResult BeginInvoke(LogLevel log_level, string message, AsyncCallback callback, object object) { }

	// RVA: 0x251D468 Offset: 0x251D468 VA: 0x251D468 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: Firebase
public sealed class InitializationException : Exception // TypeDefIndex: 3244
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC168E4 Offset: 0xC168E4 VA: 0xC168E4
	[DebuggerBrowsableAttribute] // RVA: 0xC168E4 Offset: 0xC168E4 VA: 0xC168E4
	private InitResult <InitResult>k__BackingField; // 0x60

	// Properties
	public InitResult InitResult { get; set; }

	// Methods

	// RVA: 0x251CD84 Offset: 0x251CD84 VA: 0x251CD84
	public void .ctor(InitResult result) { }

	// RVA: 0x2513D94 Offset: 0x2513D94 VA: 0x2513D94
	public void .ctor(InitResult result, string message) { }

	// RVA: 0x2516B9C Offset: 0x2516B9C VA: 0x2516B9C
	public void .ctor(InitResult result, string message, Exception inner) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1738C Offset: 0xC1738C VA: 0xC1738C
	// RVA: 0x2517810 Offset: 0x2517810 VA: 0x2517810
	public InitResult get_InitResult() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1739C Offset: 0xC1739C VA: 0xC1739C
	// RVA: 0x251CDB0 Offset: 0x251CDB0 VA: 0x251CDB0
	private void set_InitResult(InitResult value) { }
}

// Namespace: Firebase
public sealed class FirebaseException : Exception // TypeDefIndex: 3245
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC16920 Offset: 0xC16920 VA: 0xC16920
	[DebuggerBrowsableAttribute] // RVA: 0xC16920 Offset: 0xC16920 VA: 0xC16920
	private int <ErrorCode>k__BackingField; // 0x60

	// Properties
	public int ErrorCode { get; set; }

	// Methods
