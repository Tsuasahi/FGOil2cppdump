	// RVA: 0x1AE14D0 Offset: 0x1AE14D0 VA: 0x1AE14D0
	private bool IsMatchServantEquipFilter(ListViewSort sort) { }

	// RVA: 0x1ADED58 Offset: 0x1ADED58 VA: 0x1ADED58
	public bool SwapLock() { }

	// RVA: 0x1ADED74 Offset: 0x1ADED74 VA: 0x1ADED74
	public bool SwapChoice() { }

	// RVA: 0x1AD7174 Offset: 0x1AD7174 VA: 0x1AD7174
	public UserServantEntity get_UserServant() { }

	// RVA: 0x1AD6E4C Offset: 0x1AD6E4C VA: 0x1AD6E4C
	public ServantEntity get_Servant() { }

	// RVA: 0x1AE168C Offset: 0x1AE168C VA: 0x1AE168C
	public string get_NameText() { }

	// RVA: 0x1AE1748 Offset: 0x1AE1748 VA: 0x1AE1748
	public int get_Attack() { }

	// RVA: 0x1AE1760 Offset: 0x1AE1760 VA: 0x1AE1760
	public int get_AdjustAttack() { }

	// RVA: 0x1AE1778 Offset: 0x1AE1778 VA: 0x1AE1778
	public int get_Hp() { }

	// RVA: 0x1AE1790 Offset: 0x1AE1790 VA: 0x1AE1790
	public int get_AdjustHp() { }

	// RVA: 0x1AE17A8 Offset: 0x1AE17A8 VA: 0x1AE17A8
	public int get_Cost() { }

	// RVA: 0x1ADED50 Offset: 0x1ADED50 VA: 0x1ADED50
	public bool get_IsBase() { }

	// RVA: 0x1ADEDA0 Offset: 0x1ADEDA0 VA: 0x1ADEDA0
	public void set_IsBase(bool value) { }

	// RVA: 0x1ADED48 Offset: 0x1ADED48 VA: 0x1ADED48
	public bool get_IsUse() { }

	// RVA: 0x1AE17C0 Offset: 0x1AE17C0 VA: 0x1AE17C0
	public bool get_IsLock() { }

	// RVA: 0x1AE17C8 Offset: 0x1AE17C8 VA: 0x1AE17C8
	public bool get_IsCanNotSelect() { }

	// RVA: 0x1AE17E8 Offset: 0x1AE17E8 VA: 0x1AE17E8
	public bool get_IsSwapLock() { }

	// RVA: 0x1AE17F0 Offset: 0x1AE17F0 VA: 0x1AE17F0
	public bool get_IsDispLock() { }

	// RVA: 0x1AE1810 Offset: 0x1AE1810 VA: 0x1AE1810
	public bool get_IsChoice() { }

	// RVA: 0x1AE1818 Offset: 0x1AE1818 VA: 0x1AE1818
	public bool get_IsSwapChoice() { }

	// RVA: 0x1AE1260 Offset: 0x1AE1260 VA: 0x1AE1260
	public bool get_IsDispChoice() { }

	// RVA: 0x1AE1820 Offset: 0x1AE1820 VA: 0x1AE1820
	public IconLabelInfo get_IconInfo1() { }

	// RVA: 0x1AE1828 Offset: 0x1AE1828 VA: 0x1AE1828
	public IconLabelInfo get_IconInfo2() { }

	// RVA: 0x1AE1830 Offset: 0x1AE1830 VA: 0x1AE1830
	public bool GetNpInfo(out TreasureDvcInfo tdInfo) { }

	// RVA: 0x1AE18C8 Offset: 0x1AE18C8 VA: 0x1AE18C8
	private string ToString() { }

	// RVA: 0x1AE194C Offset: 0x1AE194C VA: 0x1AE194C
	public bool get_IsInvalidRarity() { }
}

// Namespace: 
public class SupportServantEquipListViewItemDraw : MonoBehaviour // TypeDefIndex: 10854
{
	// Fields
	[SerializeField] // RVA: 0xC7A074 Offset: 0xC7A074 VA: 0xC7A074
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xC7A084 Offset: 0xC7A084 VA: 0xC7A084
	protected ServantFaceIconComponent servantFaceIcon; // 0x20
	[SerializeField] // RVA: 0xC7A094 Offset: 0xC7A094 VA: 0xC7A094
	protected UISprite lockSprite; // 0x28
	[SerializeField] // RVA: 0xC7A0A4 Offset: 0xC7A0A4 VA: 0xC7A0A4
	protected UISprite choiceSprite; // 0x30
	[SerializeField] // RVA: 0xC7A0B4 Offset: 0xC7A0B4 VA: 0xC7A0B4
	protected UISprite maskSprite; // 0x38
	[SerializeField] // RVA: 0xC7A0C4 Offset: 0xC7A0C4 VA: 0xC7A0C4
	protected UILabel warningLabel; // 0x40
	[SerializeField] // RVA: 0xC7A0D4 Offset: 0xC7A0D4 VA: 0xC7A0D4
	protected GameObject selectObject; // 0x48
	[SerializeField] // RVA: 0xC7A0E4 Offset: 0xC7A0E4 VA: 0xC7A0E4
	protected UILabel skillInvalidLabel; // 0x50
	[SerializeField] // RVA: 0xC7A0F4 Offset: 0xC7A0F4 VA: 0xC7A0F4
	protected SwitchUIWidgetComponent messageLabel; // 0x58
	private List<UIWidget> messageLabelList; // 0x60

	// Methods

	// RVA: 0x1AE1954 Offset: 0x1AE1954 VA: 0x1AE1954
	public void .ctor() { }

	// RVA: 0x1AE195C Offset: 0x1AE195C VA: 0x1AE195C
	protected void Awake() { }

	// RVA: 0x1AE19C4 Offset: 0x1AE19C4 VA: 0x1AE19C4
	public void SetItem(SupportServantEquipListViewItem item, SupportServantEquipListViewItemDraw.DispMode mode) { }

	// RVA: 0x1AE1F34 Offset: 0x1AE1F34 VA: 0x1AE1F34
	public void SetInput(SupportServantEquipListViewItem item, bool isInput) { }
}

// Namespace: 
public enum SupportServantEquipListViewItemDraw.DispMode // TypeDefIndex: 10855
{
	// Fields
	public int value__; // 0x0
	public const SupportServantEquipListViewItemDraw.DispMode INVISIBLE = 0;
	public const SupportServantEquipListViewItemDraw.DispMode INVALID = 1;
	public const SupportServantEquipListViewItemDraw.DispMode VALID = 2;
	public const SupportServantEquipListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class SupportServantEquipListViewManager : ListViewManager // TypeDefIndex: 10856
{
	// Fields
	protected const string SORT_SAVE_KEY = "SupportServantEquip";
	protected static ListViewSort sortStatus; // 0x0
	[SerializeField] // RVA: 0xC7A104 Offset: 0xC7A104 VA: 0xC7A104
	protected SupportServantEquipServantItemDraw servantItemDraw; // 0x138
	[SerializeField] // RVA: 0xC7A114 Offset: 0xC7A114 VA: 0xC7A114
	protected SupportSelectConfirmMenu supportSelectConfirmMenu; // 0x140
	[SerializeField] // RVA: 0xC7A124 Offset: 0xC7A124 VA: 0xC7A124
	protected UISprite sortExplanationSprite; // 0x148
	[SerializeField] // RVA: 0xC7A134 Offset: 0xC7A134 VA: 0xC7A134
	protected UISprite filterSprite; // 0x150
	[SerializeField] // RVA: 0xC7A144 Offset: 0xC7A144 VA: 0xC7A144
	protected UICommonButton bonusFilterKindButton; // 0x158
	[SerializeField] // RVA: 0xC7A154 Offset: 0xC7A154 VA: 0xC7A154
	protected UILabel bonusFilterKindLabel; // 0x160
	[SerializeField] // RVA: 0xC7A164 Offset: 0xC7A164 VA: 0xC7A164
	protected ListViewItemSeed normalSizeSeed; // 0x168
	[SerializeField] // RVA: 0xC7A174 Offset: 0xC7A174 VA: 0xC7A174
	protected ListViewItemSeed smallSizeSeed; // 0x170
	[SerializeField] // RVA: 0xC7A184 Offset: 0xC7A184 VA: 0xC7A184
	protected ListViewItemSeed extremelySmallSizeSeed; // 0x178
	private long saveId; // 0x180
	private int savePos; // 0x188
	protected SupportServantEquipListViewManager.InitMode initMode; // 0x18C
	protected ListViewSort.ScaleType scaleType; // 0x190
	[CompilerGeneratedAttribute] // RVA: 0xC7A194 Offset: 0xC7A194 VA: 0xC7A194
	[DebuggerBrowsableAttribute] // RVA: 0xC7A194 Offset: 0xC7A194 VA: 0xC7A194
	private SupportServantEquipListViewManager.CallbackFunc callbackFunc; // 0x198
	[CompilerGeneratedAttribute] // RVA: 0xC7A1D0 Offset: 0xC7A1D0 VA: 0xC7A1D0
	[DebuggerBrowsableAttribute] // RVA: 0xC7A1D0 Offset: 0xC7A1D0 VA: 0xC7A1D0
	private Action callbackFunc2; // 0x1A0
	protected int callbackCount; // 0x1A8
	protected SupportServantEquipServantItem servantItemInfo; // 0x1B0
	protected SupportServantData supportServantData; // 0x1B8
	protected int classPos; // 0x1C0
	protected int[] bonusEventIdList; // 0x1C8
	private bool isCanNotLongPush; // 0x1D0
	protected SupportServantEquipListViewObject saveObj; // 0x1D8

	// Properties
	public List<SupportServantEquipListViewObject> ObjectList { get; }
	public List<SupportServantEquipListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x1AE21A4 Offset: 0x1AE21A4 VA: 0x1AE21A4
	public void .ctor() { }

	// RVA: 0x1AE21AC Offset: 0x1AE21AC VA: 0x1AE21AC
	protected void add_callbackFunc(SupportServantEquipListViewManager.CallbackFunc value) { }

	// RVA: 0x1AE229C Offset: 0x1AE229C VA: 0x1AE229C
	protected void remove_callbackFunc(SupportServantEquipListViewManager.CallbackFunc value) { }

	// RVA: 0x1AE238C Offset: 0x1AE238C VA: 0x1AE238C
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x1AE247C Offset: 0x1AE247C VA: 0x1AE247C
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x1AE256C Offset: 0x1AE256C VA: 0x1AE256C
	public static void DeleteContinueData() { }

	// RVA: 0x1AE25E8 Offset: 0x1AE25E8 VA: 0x1AE25E8
	public static void InitLoad() { }

	// RVA: 0x1AE2664 Offset: 0x1AE2664 VA: 0x1AE2664
	public List<SupportServantEquipListViewObject> get_ObjectList() { }

	// RVA: 0x1AE2830 Offset: 0x1AE2830 VA: 0x1AE2830
	public List<SupportServantEquipListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1ADED90 Offset: 0x1ADED90 VA: 0x1ADED90
	public SupportServantEquipServantItem getServantItemInfo() { }

	// RVA: 0x1ADED98 Offset: 0x1ADED98 VA: 0x1ADED98
	public SupportServantEquipServantItemDraw getServantItemDraw() { }

	// RVA: 0x1ADCF48 Offset: 0x1ADCF48 VA: 0x1ADCF48
	public void CreateList(SupportServantData[] supportServantData, int nowDeckNum, int classPos, EventUpValSetupInfo eventSetupInfo, int nowDeckId, int[] fixMainDeckIds, int[] fixEventDeckIds) { }

	// RVA: 0x1ADE140 Offset: 0x1ADE140 VA: 0x1ADE140
	public void ModifyList(bool isIconSizeChange = False) { }

	// RVA: 0x1ADC8F0 Offset: 0x1ADC8F0 VA: 0x1ADC8F0
	public void DestroyList() { }

	// RVA: 0x1ADE51C Offset: 0x1ADE51C VA: 0x1ADE51C
	public SupportServantEquipListViewItem GetItem(int index) { }

	// RVA: 0x1ADEDAC Offset: 0x1ADEDAC VA: 0x1ADEDAC
	public void RefreshListDisp() { }

	// RVA: 0x1AE2B24 Offset: 0x1AE2B24 VA: 0x1AE2B24 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1ADDAB8 Offset: 0x1ADDAB8 VA: 0x1ADDAB8
	public void SetMode(SupportServantEquipListViewManager.InitMode mode, SupportServantEquipListViewManager.CallbackFunc callback) { }

	// RVA: 0x1AE2BE0 Offset: 0x1AE2BE0 VA: 0x1AE2BE0
	public void SetMode(SupportServantEquipListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1ADDAC0 Offset: 0x1ADDAC0 VA: 0x1ADDAC0
	public void SetMode(SupportServantEquipListViewManager.InitMode mode) { }

	// RVA: 0x1AE2DE0 Offset: 0x1AE2DE0 VA: 0x1AE2DE0
	protected void RequestListObject(SupportServantEquipListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1AE2BE8 Offset: 0x1AE2BE8 VA: 0x1AE2BE8
	protected void RequestListObject(SupportServantEquipListViewObject.InitMode mode) { }

	// RVA: 0x1AE2FEC Offset: 0x1AE2FEC VA: 0x1AE2FEC
	protected void OnMoveEnd() { }

	// RVA: 0x1AE30B8 Offset: 0x1AE30B8 VA: 0x1AE30B8
	public int GetSelect() { }

	// RVA: 0x1ADDC40 Offset: 0x1ADDC40 VA: 0x1ADDC40
	public SupportServantEquipListViewItem GetSelectItem() { }

	// RVA: 0x1AE3234 Offset: 0x1AE3234 VA: 0x1AE3234
	public void OnClickDecide() { }

	// RVA: 0x1AE3278 Offset: 0x1AE3278 VA: 0x1AE3278
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x1AE327C Offset: 0x1AE327C VA: 0x1AE327C
	protected void OnClickSelectListView(ListViewObject obj) { }

	// RVA: 0x1AE32D8 Offset: 0x1AE32D8 VA: 0x1AE32D8
	public void onClickSelectedItem(ListViewObject obj) { }

	// RVA: 0x1ADF044 Offset: 0x1ADF044 VA: 0x1ADF044
	public void checkEquipChange(SupportServantEquipListViewItem selectItem) { }

	// RVA: 0x1AE3334 Offset: 0x1AE3334 VA: 0x1AE3334
	private void EndConfirmMenu(bool flag) { }

	// RVA: 0x1AE362C Offset: 0x1AE362C VA: 0x1AE362C
	protected void OnLongPushListView(ListViewObject obj) { }

	// RVA: 0x1AE36C0 Offset: 0x1AE36C0 VA: 0x1AE36C0
	public void OnClickSelectDetail() { }

	// RVA: 0x1AE3704 Offset: 0x1AE3704 VA: 0x1AE3704
	public void OnClickFilterKind() { }

	// RVA: 0x1AE37FC Offset: 0x1AE37FC VA: 0x1AE37FC
	public void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x1AE38C8 Offset: 0x1AE38C8 VA: 0x1AE38C8
	protected void EndCloseSelectFilterKind() { }

	// RVA: 0x1AE2A90 Offset: 0x1AE2A90 VA: 0x1AE2A90
	private void SetFilterButtonImage() { }

	// RVA: 0x1AE38CC Offset: 0x1AE38CC VA: 0x1AE38CC
	public void OnClickBonusFilterKind() { }

	// RVA: 0x1AE39A0 Offset: 0x1AE39A0 VA: 0x1AE39A0
	public void OnClickSortKind() { }

	// RVA: 0x1AE3A98 Offset: 0x1AE3A98 VA: 0x1AE3A98
	protected void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x1AE3B5C Offset: 0x1AE3B5C VA: 0x1AE3B5C
	protected void EndCloseSelectSortKind() { }

	// RVA: 0x1AE3B60 Offset: 0x1AE3B60 VA: 0x1AE3B60
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x1AE3C50 Offset: 0x1AE3C50 VA: 0x1AE3C50 Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x1AE1280 Offset: 0x1AE1280 VA: 0x1AE1280
	public long GetAmountSortValue(int svtId) { }

	// RVA: 0x1ADF824 Offset: 0x1ADF824 VA: 0x1ADF824
	public bool GetSwapLockList(out long[] lockList, out long[] unlockList) { }

	// RVA: 0x1ADFB0C Offset: 0x1ADFB0C VA: 0x1ADFB0C
	public bool GetSwapChoiceList(out long[] choiceList, out long[] unchoiceList) { }

	// RVA: 0x1ADF818 Offset: 0x1ADF818 VA: 0x1ADF818
	public void setCanLongPushFlag(bool flag) { }

	// RVA: 0x1ADEEF0 Offset: 0x1ADEEF0 VA: 0x1ADEEF0
	public void resetEquipItemBaseFlag() { }

	// RVA: 0x1AE0100 Offset: 0x1AE0100 VA: 0x1AE0100
	public void ChangeIconScale() { }

	// RVA: 0x1ADD5F4 Offset: 0x1ADD5F4 VA: 0x1ADD5F4
	public string GetScaleButtonSpriteName() { }

	// RVA: 0x1AE3F58 Offset: 0x1AE3F58 VA: 0x1AE3F58
	private static void .cctor() { }
}

// Namespace: 
public enum SupportServantEquipListViewManager.InitMode // TypeDefIndex: 10857
{
	// Fields
	public int value__; // 0x0
	public const SupportServantEquipListViewManager.InitMode NONE = 0;
	public const SupportServantEquipListViewManager.InitMode VALID = 1;
	public const SupportServantEquipListViewManager.InitMode INPUT = 2;
	public const SupportServantEquipListViewManager.InitMode MODIFY = 3;
}

// Namespace: 
public enum SupportServantEquipListViewManager.ResultKind // TypeDefIndex: 10858
{
	// Fields
	public int value__; // 0x0
	public const SupportServantEquipListViewManager.ResultKind CANCEL = 0;
	public const SupportServantEquipListViewManager.ResultKind DECIDE = 1;
	public const SupportServantEquipListViewManager.ResultKind SHOW_STATUS = 2;
	public const SupportServantEquipListViewManager.ResultKind SELECT = 3;
	public const SupportServantEquipListViewManager.ResultKind SELECTED_CHECK = 4;
}

// Namespace: 
public sealed class SupportServantEquipListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 10859
{
	// Methods

	// RVA: 0x14EAB3C Offset: 0x14EAB3C VA: 0x14EAB3C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x14EAB4C Offset: 0x14EAB4C VA: 0x14EAB4C Slot: 11
	public virtual void Invoke(SupportServantEquipListViewManager.ResultKind kind, int result) { }

	// RVA: 0x14EAD90 Offset: 0x14EAD90 VA: 0x14EAD90 Slot: 12
	public virtual IAsyncResult BeginInvoke(SupportServantEquipListViewManager.ResultKind kind, int result, AsyncCallback callback, object object) { }

	// RVA: 0x14EAE38 Offset: 0x14EAE38 VA: 0x14EAE38 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class SupportServantEquipListViewObject : ListViewObject // TypeDefIndex: 10860
{
	// Fields
	protected SupportServantEquipListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC7A20C Offset: 0xC7A20C VA: 0xC7A20C
	[DebuggerBrowsableAttribute] // RVA: 0xC7A20C Offset: 0xC7A20C VA: 0xC7A20C
	private Action callbackFunc; // 0x70
	protected SupportServantEquipListViewItemDraw itemDraw; // 0x78
	protected SupportServantEquipListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x14EAE44 Offset: 0x14EAE44 VA: 0x14EAE44
	public void .ctor() { }

	// RVA: 0x14EAEAC Offset: 0x14EAEAC VA: 0x14EAEAC
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x14EAF98 Offset: 0x14EAF98 VA: 0x14EAF98
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x14EB084 Offset: 0x14EB084 VA: 0x14EB084
	protected void Awake() { }

	// RVA: 0x14EB0F8 Offset: 0x14EB0F8 VA: 0x14EB0F8
	private void OnDestroy() { }

	// RVA: 0x14EB1A4 Offset: 0x14EB1A4 VA: 0x14EB1A4
	public SupportServantEquipListViewItem GetItem() { }

	// RVA: 0x14EB228 Offset: 0x14EB228 VA: 0x14EB228 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x14EB258 Offset: 0x14EB258 VA: 0x14EB258 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x14EB250 Offset: 0x14EB250 VA: 0x14EB250
	protected void InitItem() { }

	// RVA: 0x14EB280 Offset: 0x14EB280 VA: 0x14EB280 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x14EB388 Offset: 0x14EB388 VA: 0x14EB388 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x14EB490 Offset: 0x14EB490 VA: 0x14EB490
	public void Init(SupportServantEquipListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x14EB794 Offset: 0x14EB794 VA: 0x14EB794
	public void Init(SupportServantEquipListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x14EB818 Offset: 0x14EB818 VA: 0x14EB818
	public void Init(SupportServantEquipListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x14EB410 Offset: 0x14EB410 VA: 0x14EB410
	public void Init(SupportServantEquipListViewObject.InitMode initMode) { }

	// RVA: 0x14EB680 Offset: 0x14EB680 VA: 0x14EB680
	public void SetupDisp() { }

	// RVA: 0x14EB89C Offset: 0x14EB89C VA: 0x14EB89C
	public void OnClickSelect() { }

	// RVA: 0x14EB9B0 Offset: 0x14EB9B0 VA: 0x14EB9B0
	public void OnLongPush() { }

	// RVA: 0x14EBA2C Offset: 0x14EBA2C VA: 0x14EBA2C Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum SupportServantEquipListViewObject.InitMode // TypeDefIndex: 10861
{
	// Fields
	public int value__; // 0x0
	public const SupportServantEquipListViewObject.InitMode INVISIBLE = 0;
	public const SupportServantEquipListViewObject.InitMode INVALID = 1;
	public const SupportServantEquipListViewObject.InitMode VALID = 2;
	public const SupportServantEquipListViewObject.InitMode INPUT = 3;
	public const SupportServantEquipListViewObject.InitMode MODIFY = 4;
}

// Namespace: 
protected enum SupportServantEquipListViewObject.State // TypeDefIndex: 10862
{
	// Fields
	public int value__; // 0x0
	public const SupportServantEquipListViewObject.State INIT = 0;
	public const SupportServantEquipListViewObject.State IDLE = 1;
	public const SupportServantEquipListViewObject.State MOVE = 2;
	public const SupportServantEquipListViewObject.State INPUT = 3;
}

// Namespace: 
public class SupportServantEquipServantItem // TypeDefIndex: 10863
{
	// Fields
	protected UserServantEntity userServantEntity; // 0x10
	protected ServantEntity servantEntity; // 0x18
	protected IconLabelInfo iconLabelInfo; // 0x20
	protected long oldEquipTargetId; // 0x28
	protected long equipTargetId; // 0x30
	protected UserServantEntity equipUserSvtEntity; // 0x38
	protected ServantEntity equipServantEntity; // 0x40

	// Properties
	public UserServantEntity UserServant { get; }
	public UserServantEntity EquipUserServant { get; }
	public string NameText { get; }
	public int Atk { get; }
	public int AdjustAtk { get; }
	public int Hp { get; }
	public int AdjustHp { get; }
	public long OldEquipUserSvtId { get; }
	public long EquipUserSvtId { get; }
	public bool IsEquip { get; }
	public int EquipLimitCount { get; }
	public int EquipLimitCountMax { get; }
	public int EquipAtk { get; }
	public int EquipHp { get; }
	public IconLabelInfo IconInfo { get; }

	// Methods

	// RVA: 0x14EBAFC Offset: 0x14EBAFC VA: 0x14EBAFC
	public void .ctor(UserServantEntity entity, long equipSvtId) { }

	// RVA: 0x14EBCC4 Offset: 0x14EBCC4 VA: 0x14EBCC4
	public void SetEquipTarget(long equipUserSvtId) { }

	// RVA: 0x14EBE5C Offset: 0x14EBE5C VA: 0x14EBE5C
	public UserServantEntity get_UserServant() { }

	// RVA: 0x14EBE64 Offset: 0x14EBE64 VA: 0x14EBE64
	public UserServantEntity get_EquipUserServant() { }

	// RVA: 0x14EBE6C Offset: 0x14EBE6C VA: 0x14EBE6C
	public string get_NameText() { }

	// RVA: 0x14EBF28 Offset: 0x14EBF28 VA: 0x14EBF28
	public int get_Atk() { }

	// RVA: 0x14EBF40 Offset: 0x14EBF40 VA: 0x14EBF40
	public int get_AdjustAtk() { }

	// RVA: 0x14EBF58 Offset: 0x14EBF58 VA: 0x14EBF58
	public int get_Hp() { }

	// RVA: 0x14EBF70 Offset: 0x14EBF70 VA: 0x14EBF70
	public int get_AdjustHp() { }

	// RVA: 0x14EBF88 Offset: 0x14EBF88 VA: 0x14EBF88
	public long get_OldEquipUserSvtId() { }

	// RVA: 0x14EBF90 Offset: 0x14EBF90 VA: 0x14EBF90
	public long get_EquipUserSvtId() { }

	// RVA: 0x14EC02C Offset: 0x14EC02C VA: 0x14EC02C
	public bool get_IsEquip() { }

	// RVA: 0x14EC03C Offset: 0x14EC03C VA: 0x14EC03C
	public int get_EquipLimitCount() { }

	// RVA: 0x14EC0C4 Offset: 0x14EC0C4 VA: 0x14EC0C4
	public int get_EquipLimitCountMax() { }

	// RVA: 0x14EC100 Offset: 0x14EC100 VA: 0x14EC100
	public int get_EquipAtk() { }

	// RVA: 0x14EC118 Offset: 0x14EC118 VA: 0x14EC118
	public int get_EquipHp() { }

	// RVA: 0x14EC130 Offset: 0x14EC130 VA: 0x14EC130
	public IconLabelInfo get_IconInfo() { }

	// RVA: 0x14EC138 Offset: 0x14EC138 VA: 0x14EC138
	public bool GetNpInfo(out TreasureDvcInfo tdInfo) { }

	// RVA: 0x14EC1D0 Offset: 0x14EC1D0 VA: 0x14EC1D0
	public int GetTreasureDeviceLevelIcon() { }
}

// Namespace: 
public class SupportServantEquipServantItemDraw : MonoBehaviour // TypeDefIndex: 10864
{
	// Fields
	[SerializeField] // RVA: 0xC7A248 Offset: 0xC7A248 VA: 0xC7A248
	protected ServantFaceIconComponent servantFaceIcon; // 0x18
	[SerializeField] // RVA: 0xC7A258 Offset: 0xC7A258 VA: 0xC7A258
	protected UISprite noneEquipSprite; // 0x20
	[SerializeField] // RVA: 0xC7A268 Offset: 0xC7A268 VA: 0xC7A268
	protected UIMeshSprite equipSprite; // 0x28
	[SerializeField] // RVA: 0xC7A278 Offset: 0xC7A278 VA: 0xC7A278
	protected UISprite equipLimitCountSprite; // 0x30
	[SerializeField] // RVA: 0xC7A288 Offset: 0xC7A288 VA: 0xC7A288
	protected UILabel skillNameLabel; // 0x38
	[SerializeField] // RVA: 0xC7A298 Offset: 0xC7A298 VA: 0xC7A298
	protected UILabel skillExplanationLabel; // 0x40
	[SerializeField] // RVA: 0xC7A2A8 Offset: 0xC7A2A8 VA: 0xC7A2A8
	protected UIIconLabel hpIconLabel; // 0x48
	[SerializeField] // RVA: 0xC7A2B8 Offset: 0xC7A2B8 VA: 0xC7A2B8
	protected UIIconLabel differHpIconLabel; // 0x50
	[SerializeField] // RVA: 0xC7A2C8 Offset: 0xC7A2C8 VA: 0xC7A2C8
	protected UIIconLabel attackIconLabel; // 0x58
	[SerializeField] // RVA: 0xC7A2D8 Offset: 0xC7A2D8 VA: 0xC7A2D8
	protected UIIconLabel differAttackIconLabel; // 0x60
	[SerializeField] // RVA: 0xC7A2E8 Offset: 0xC7A2E8 VA: 0xC7A2E8
	protected UICommonButton equipButton; // 0x68
	[SerializeField] // RVA: 0xC7A2F8 Offset: 0xC7A2F8 VA: 0xC7A2F8
	protected UICommonButton decideButton; // 0x70

	// Methods

	// RVA: 0x14EC1E4 Offset: 0x14EC1E4 VA: 0x14EC1E4
	public void .ctor() { }

	// RVA: 0x14EC1EC Offset: 0x14EC1EC VA: 0x14EC1EC
	public void SetItem(SupportServantEquipServantItem item) { }

	// RVA: 0x14ECA98 Offset: 0x14ECA98 VA: 0x14ECA98
	public void SetInput(bool isInput) { }
}

// Namespace: 
public enum SupportServantEquipServantItemDraw.DispMode // TypeDefIndex: 10865
{
	// Fields
	public int value__; // 0x0
	public const SupportServantEquipServantItemDraw.DispMode INVISIBLE = 0;
	public const SupportServantEquipServantItemDraw.DispMode INVALID = 1;
	public const SupportServantEquipServantItemDraw.DispMode VALID = 2;
	public const SupportServantEquipServantItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class SupportServantListViewItem : ListViewItem // TypeDefIndex: 10866
{
	// Fields
	protected ObscuredLong[] equipIdList; // 0x70
	protected UserServantEntity userServantEntity; // 0x78
	protected ServantEntity servantEntity; // 0x80
	protected SupportServantData supportServantData; // 0x88
	protected ObscuredInt svtId; // 0x90
	protected int classId; // 0xA0
	protected int rarity; // 0xA4
	protected ObscuredInt friendship; // 0xA8
	protected int friendshipMax; // 0xB8
	protected bool isBase; // 0xBC
	protected bool isLock; // 0xBD
	protected bool isChoice; // 0xBE
	protected bool isSame; // 0xBF
	protected bool isEventJoin; // 0xC0
	protected bool isHeroine; // 0xC1
	protected bool isPushMode; // 0xC2
	protected bool isPush; // 0xC3
	protected bool isEnabled; // 0xC4
	protected ListViewSort.BonusFilterKind bonusKind; // 0xC8
	protected int bonusKindId; // 0xCC
	protected bool isEventUpVal; // 0xD0
	protected int priority; // 0xD4
	protected IconLabelInfo iconLabelInfo1; // 0xD8
	protected IconLabelInfo iconLabelInfo2; // 0xE0
	protected UserServantEntity equipUserServantEntity; // 0xE8
	protected ServantEntity equipServantEntity; // 0xF0
	protected EventUpValSetupInfo eventSetupInfo; // 0xF8
	private EventCampaignEntity[] eventFriendPoints; // 0x100
	protected long amountSortValue; // 0x108
	protected bool isSwapLock; // 0x110
	protected bool isSwapChoice; // 0x111
	protected bool isInvalidRarity; // 0x112
	protected bool isUseInSet; // 0x113
	protected int useSet; // 0x114
	private int hpReinforceValue; // 0x118
	private int atkReinforceValue; // 0x11C
	private int nowMaxHpReinforceValue; // 0x120
	private int nowMaxAtkReinforceValue; // 0x124

	// Properties
	public UserServantEntity UserServant { get; }
	public ServantEntity Servant { get; }
	public int SvtId { get; }
	public int Rarity { get; }
	public int ClassId { get; }
	public string NameText { get; }
	public bool IsBase { get; }
	public int Cost { get; }
	public int EquipCost { get; }
	public bool IsSame { get; }
	public bool IsEventJoin { get; }
	public bool IsLock { get; }
	public IconLabelInfo IconInfo1 { get; }
	public IconLabelInfo IconInfo2 { get; }
	public bool IsEquip { get; }
	public bool IsCanNotSelectHeroine { get; }
	public bool IsSwapLock { get; }
	public bool IsDispLock { get; }
	public bool IsChoice { get; }
	public bool IsSwapChoice { get; }
	public bool IsDispChoice { get; }
	public bool IsUseServant { get; }
	public bool IsPushMode { get; set; }
	public bool IsPush { get; set; }
	public bool IsEnabled { get; set; }
	public bool IsInvalidRarity { get; }
	public bool IsUseInSet { get; }
	public int UseSet { get; }

	// Methods

	// RVA: 0x14ECB4C Offset: 0x14ECB4C VA: 0x14ECB4C
	public void .ctor(int index, UserServantEntity userServantEntity, SupportServantData[] supportServantData, int nowDeckNum, int classPos, EventUpValSetupInfo eventSetupInfo, EventCampaignEntity[] friendPointCampaignEntityList, int nowDeckId, int[] fixMainDeckIds, int[] fixEventDeckIds, bool isFixMainDeck, bool isFixEventDeck) { }

	// RVA: 0x14ED3D8 Offset: 0x14ED3D8 VA: 0x14ED3D8
	private bool CheckUseInSet(out int setNo, int[] fixDeckIds, int nowDeckId, SupportServantData[] supportServantData) { }

	// RVA: 0x14ED604 Offset: 0x14ED604 VA: 0x14ED604
	public void Modify() { }

	// RVA: 0x14ED70C Offset: 0x14ED70C VA: 0x14ED70C
	public void Modify(UserServantEntity userServantEntity) { }

	// RVA: 0x14ED738 Offset: 0x14ED738 VA: 0x14ED738
	public void ModifyItem(UserServantEntity userServantEntity) { }

	// RVA: 0x14ED77C Offset: 0x14ED77C VA: 0x14ED77C
	public void ModifyLockItem() { }

	// RVA: 0x14ED7C0 Offset: 0x14ED7C0 VA: 0x14ED7C0
	public void ModifyChoiceItem() { }

	// RVA: 0x14ED804 Offset: 0x14ED804 VA: 0x14ED804
	public void ResetEventCampaign(EventCampaignEntity[] friendPointCampaigns) { }

	// RVA: 0x14ED80C Offset: 0x14ED80C VA: 0x14ED80C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x14ED814 Offset: 0x14ED814 VA: 0x14ED814
	protected void SetEquipStatus(ObscuredLong[] equipIdList) { }

	// RVA: 0x14EDB5C Offset: 0x14EDB5C VA: 0x14EDB5C
	private bool IsMatchServantFilter(ListViewSort sort) { }

	// RVA: 0x14EDE20 Offset: 0x14EDE20 VA: 0x14EDE20 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x14EE8B4 Offset: 0x14EE8B4 VA: 0x14EE8B4
	public long[] GetEquipList() { }

	// RVA: 0x14EEA0C Offset: 0x14EEA0C VA: 0x14EEA0C
	public void SetEquipUserServantId(long userSvtId) { }

	// RVA: 0x14EEACC Offset: 0x14EEACC VA: 0x14EEACC
	public bool SwapLock() { }

	// RVA: 0x14EEAE8 Offset: 0x14EEAE8 VA: 0x14EEAE8
	public bool SwapChoice() { }

	// RVA: 0x14EDDF8 Offset: 0x14EDDF8 VA: 0x14EDDF8
	public UserServantEntity get_UserServant() { }

	// RVA: 0x14EEB04 Offset: 0x14EEB04 VA: 0x14EEB04
	public ServantEntity get_Servant() { }

	// RVA: 0x14EEB0C Offset: 0x14EEB0C VA: 0x14EEB0C
	public int get_SvtId() { }

	// RVA: 0x14EEB7C Offset: 0x14EEB7C VA: 0x14EEB7C
	public int get_Rarity() { }

	// RVA: 0x14EEB84 Offset: 0x14EEB84 VA: 0x14EEB84
	public int get_ClassId() { }

	// RVA: 0x14EEB8C Offset: 0x14EEB8C VA: 0x14EEB8C
	public string get_NameText() { }

	// RVA: 0x14EEC48 Offset: 0x14EEC48 VA: 0x14EEC48
	public bool get_IsBase() { }

	// RVA: 0x14EEC50 Offset: 0x14EEC50 VA: 0x14EEC50
	public int get_Cost() { }

	// RVA: 0x14EEC7C Offset: 0x14EEC7C VA: 0x14EEC7C
	public int get_EquipCost() { }

	// RVA: 0x14EEC94 Offset: 0x14EEC94 VA: 0x14EEC94
	public bool get_IsSame() { }

	// RVA: 0x14EEC9C Offset: 0x14EEC9C VA: 0x14EEC9C
	public bool get_IsEventJoin() { }

	// RVA: 0x14EECA4 Offset: 0x14EECA4 VA: 0x14EECA4
	public bool get_IsLock() { }

	// RVA: 0x14EECAC Offset: 0x14EECAC VA: 0x14EECAC
	public IconLabelInfo get_IconInfo1() { }

	// RVA: 0x14EECB4 Offset: 0x14EECB4 VA: 0x14EECB4
	public IconLabelInfo get_IconInfo2() { }

	// RVA: 0x14EECBC Offset: 0x14EECBC VA: 0x14EECBC
	public bool get_IsEquip() { }

	// RVA: 0x14EECCC Offset: 0x14EECCC VA: 0x14EECCC
	public bool get_IsCanNotSelectHeroine() { }

	// RVA: 0x14EED4C Offset: 0x14EED4C VA: 0x14EED4C
	public bool get_IsSwapLock() { }

	// RVA: 0x14EED54 Offset: 0x14EED54 VA: 0x14EED54
	public bool get_IsDispLock() { }

	// RVA: 0x14EED74 Offset: 0x14EED74 VA: 0x14EED74
	public bool get_IsChoice() { }

	// RVA: 0x14EED7C Offset: 0x14EED7C VA: 0x14EED7C
	public bool get_IsSwapChoice() { }

	// RVA: 0x14EDE00 Offset: 0x14EDE00 VA: 0x14EDE00
	public bool get_IsDispChoice() { }

	// RVA: 0x14EED84 Offset: 0x14EED84 VA: 0x14EED84
	public bool get_IsUseServant() { }

	// RVA: 0x14EEE48 Offset: 0x14EEE48 VA: 0x14EEE48
	public bool GetNpInfo(out TreasureDvcInfo tdInfo) { }

	// RVA: 0x14EEEE0 Offset: 0x14EEEE0 VA: 0x14EEEE0
	public int GetFriendPointBonus() { }

	// RVA: 0x14EF0E4 Offset: 0x14EF0E4 VA: 0x14EF0E4
	public void set_IsPushMode(bool value) { }

	// RVA: 0x14EF0F0 Offset: 0x14EF0F0 VA: 0x14EF0F0
	public bool get_IsPushMode() { }

	// RVA: 0x14EF0F8 Offset: 0x14EF0F8 VA: 0x14EF0F8
	public void set_IsPush(bool value) { }

	// RVA: 0x14EF104 Offset: 0x14EF104 VA: 0x14EF104
	public bool get_IsPush() { }

	// RVA: 0x14EF10C Offset: 0x14EF10C VA: 0x14EF10C
	public void set_IsEnabled(bool value) { }

	// RVA: 0x14EF118 Offset: 0x14EF118 VA: 0x14EF118
	public bool get_IsEnabled() { }

	// RVA: 0x14EF120 Offset: 0x14EF120 VA: 0x14EF120
	public bool get_IsInvalidRarity() { }

	// RVA: 0x14EF128 Offset: 0x14EF128 VA: 0x14EF128
	public bool get_IsUseInSet() { }

	// RVA: 0x14EF130 Offset: 0x14EF130 VA: 0x14EF130
	public int get_UseSet() { }
}

// Namespace: 
public class SupportServantListViewItemDraw : MonoBehaviour // TypeDefIndex: 10867
{
	// Fields
	[SerializeField] // RVA: 0xC7A308 Offset: 0xC7A308 VA: 0xC7A308
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xC7A318 Offset: 0xC7A318 VA: 0xC7A318
	protected ServantFaceIconComponent servantFaceIcon; // 0x20
	[SerializeField] // RVA: 0xC7A328 Offset: 0xC7A328 VA: 0xC7A328
	protected FlashingIconComponent partyIcon; // 0x28
	[SerializeField] // RVA: 0xC7A338 Offset: 0xC7A338 VA: 0xC7A338
	protected UISprite lockSprite; // 0x30
	[SerializeField] // RVA: 0xC7A348 Offset: 0xC7A348 VA: 0xC7A348
	protected UISprite choiceSprite; // 0x38
	[SerializeField] // RVA: 0xC7A358 Offset: 0xC7A358 VA: 0xC7A358
	protected UISprite pushSprite; // 0x40
	[SerializeField] // RVA: 0xC7A368 Offset: 0xC7A368 VA: 0xC7A368
	protected GameObject selectObject; // 0x48
	[SerializeField] // RVA: 0xC7A378 Offset: 0xC7A378 VA: 0xC7A378
	protected UISprite maskSprite; // 0x50
	[SerializeField] // RVA: 0xC7A388 Offset: 0xC7A388 VA: 0xC7A388
	protected UILabel warningLabel; // 0x58
	[SerializeField] // RVA: 0xC7A398 Offset: 0xC7A398 VA: 0xC7A398
	protected TweenAlpha warningTween; // 0x60
	[SerializeField] // RVA: 0xC7A3A8 Offset: 0xC7A3A8 VA: 0xC7A3A8
	protected TweenColor warningTweenColor; // 0x68
	protected static List<SupportServantListViewItemDraw> itemList; // 0x0
	private SupportServantListViewItemDraw.WarningLabelText[] warningLabelTexts; // 0x70
	private int warningLabelTextSync2Pattern; // 0x78
	private int warningLabelTextSync2PatternOld; // 0x7C
	private static readonly float changeTimeSecond; // 0x8

	// Methods

	// RVA: 0x14EF138 Offset: 0x14EF138 VA: 0x14EF138
	public void .ctor() { }

	// RVA: 0x14EF140 Offset: 0x14EF140 VA: 0x14EF140
	public void OnDisable() { }

	// RVA: 0x14EF1CC Offset: 0x14EF1CC VA: 0x14EF1CC
	public void SetItem(SupportServantListViewItem item, SupportServantListViewItemDraw.DispMode mode) { }

	// RVA: 0x14EF4C8 Offset: 0x14EF4C8 VA: 0x14EF4C8
	private void SetWarning(SupportServantListViewItem item) { }

	// RVA: 0x14EFDA0 Offset: 0x14EFDA0 VA: 0x14EFDA0
	private string GetWarningText(SupportServantListViewItem item, bool isBaseSelect) { }

	// RVA: 0x14F06BC Offset: 0x14F06BC VA: 0x14F06BC
	public void SetInput(SupportServantListViewItem item, bool isInput) { }

	// RVA: 0x14F01B8 Offset: 0x14F01B8 VA: 0x14F01B8
	private void AdvanceWarningLabel() { }

	// RVA: 0x14F002C Offset: 0x14F002C VA: 0x14F002C
	private void WarningTweenStart() { }

	// RVA: 0x14F016C Offset: 0x14F016C VA: 0x14F016C
	private void WarningTweenStop() { }

	// RVA: 0x14F0A00 Offset: 0x14F0A00 VA: 0x14F0A00
	public void OnFinishWarningAnime() { }

	// RVA: 0x14F0A24 Offset: 0x14F0A24 VA: 0x14F0A24
	private static void .cctor() { }
}

// Namespace: 
private class SupportServantListViewItemDraw.WarningLabelText // TypeDefIndex: 10868
{
	// Fields
	public string text; // 0x10
	public bool gradation; // 0x18
	public bool coloranime; // 0x19
	public Color top; // 0x1C
	public Color bottom; // 0x2C
	public float scaleX; // 0x3C
	public bool isSkillInvalid; // 0x40

	// Methods

	// RVA: 0x14EFD34 Offset: 0x14EFD34 VA: 0x14EFD34
	public void .ctor(string s, float scaleX = 1, bool isSkillInvalid = False) { }

	// RVA: 0x14EFC90 Offset: 0x14EFC90 VA: 0x14EFC90
	public void .ctor(string s, Color t, Color b, float scaleX = 1, bool isSkillInvalid = False) { }
}

// Namespace: 
public enum SupportServantListViewItemDraw.DispMode // TypeDefIndex: 10869
{
	// Fields
	public int value__; // 0x0
	public const SupportServantListViewItemDraw.DispMode INVISIBLE = 0;
	public const SupportServantListViewItemDraw.DispMode INVALID = 1;
	public const SupportServantListViewItemDraw.DispMode VALID = 2;
	public const SupportServantListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class SupportServantListViewManager : ListViewManager // TypeDefIndex: 10870
{
	// Fields
	[SerializeField] // RVA: 0xC7A3B8 Offset: 0xC7A3B8 VA: 0xC7A3B8
	protected UICommonButton filterButton; // 0x138
	[SerializeField] // RVA: 0xC7A3C8 Offset: 0xC7A3C8 VA: 0xC7A3C8
	protected UISprite filterSprite; // 0x140
	[SerializeField] // RVA: 0xC7A3D8 Offset: 0xC7A3D8 VA: 0xC7A3D8
	protected UISprite sortExplanationSprite; // 0x148
	[SerializeField] // RVA: 0xC7A3E8 Offset: 0xC7A3E8 VA: 0xC7A3E8
	protected UICommonButton bonusFilterKindButton; // 0x150
	[SerializeField] // RVA: 0xC7A3F8 Offset: 0xC7A3F8 VA: 0xC7A3F8
	protected UILabel bonusFilterKindLabel; // 0x158
	[SerializeField] // RVA: 0xC7A408 Offset: 0xC7A408 VA: 0xC7A408
	protected ListViewItemSeed normalSizeSeed; // 0x160
	[SerializeField] // RVA: 0xC7A418 Offset: 0xC7A418 VA: 0xC7A418
	protected ListViewItemSeed smallSizeSeed; // 0x168
	[SerializeField] // RVA: 0xC7A428 Offset: 0xC7A428 VA: 0xC7A428
	protected ListViewItemSeed extremelySmallSizeSeed; // 0x170
	protected const string SORT_SAVE_KEY_ALL = "SupportServantSelectAll";
	protected const string SORT_SAVE_KEY = "SupportServantSelect";
	protected static ListViewSort servantSortInfoAll; // 0x0
	protected static ListViewSort servantSortInfo; // 0x8
	protected SupportServantData supportServantData; // 0x178
	private TimeOverChecker timeOverChecker; // 0x180
	private TimeOverChecker eventStartChecker; // 0x188
	private EventCampaignEntity[] eventFriendPoints; // 0x190
	private int classPos; // 0x198
	protected SupportServantListViewManager.InitMode initMode; // 0x19C
	protected ListViewSort.ScaleType scaleType; // 0x1A0
	private ListViewSort.FilterKind[] classFilter; // 0x1A8
	[CompilerGeneratedAttribute] // RVA: 0xC7A438 Offset: 0xC7A438 VA: 0xC7A438
	[DebuggerBrowsableAttribute] // RVA: 0xC7A438 Offset: 0xC7A438 VA: 0xC7A438
	private SupportServantListViewManager.CallbackFunc callbackFunc; // 0x1B0
	[CompilerGeneratedAttribute] // RVA: 0xC7A474 Offset: 0xC7A474 VA: 0xC7A474
	[DebuggerBrowsableAttribute] // RVA: 0xC7A474 Offset: 0xC7A474 VA: 0xC7A474
	private Action callbackFunc2; // 0x1B8
	protected int callbackCount; // 0x1C0
	protected int[] bonusEventIdList; // 0x1C8
	protected int[] servantFilterIdList; // 0x1D0
	private bool isCanNotLongPush; // 0x1D8

	// Properties
	public List<SupportServantListViewObject> ObjectList { get; }
	public List<SupportServantListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x14F0AA8 Offset: 0x14F0AA8 VA: 0x14F0AA8
	public void .ctor() { }

	// RVA: 0x14F0B28 Offset: 0x14F0B28 VA: 0x14F0B28
	protected void add_callbackFunc(SupportServantListViewManager.CallbackFunc value) { }

	// RVA: 0x14F0C18 Offset: 0x14F0C18 VA: 0x14F0C18
	protected void remove_callbackFunc(SupportServantListViewManager.CallbackFunc value) { }

	// RVA: 0x14F0D08 Offset: 0x14F0D08 VA: 0x14F0D08
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x14F0DF8 Offset: 0x14F0DF8 VA: 0x14F0DF8
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x14F0EE8 Offset: 0x14F0EE8 VA: 0x14F0EE8
	public static void DeleteContinueData() { }

	// RVA: 0x14F0F88 Offset: 0x14F0F88 VA: 0x14F0F88
	public static void InitLoad() { }
