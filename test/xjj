
	// Methods

	// RVA: 0xBBE3E4 Offset: 0xBBE3E4 VA: 0xBBE3E4
	internal void .ctor(byte[] data, int startIndex) { }

	// RVA: 0xBBE3EC Offset: 0xBBE3EC VA: 0xBBE3EC
	public void .ctor(bool followsOriginalSource, CriAtomEx.Randomize3dCalcType calculationType, float param1 = 0, float param2 = 0, float param3 = 0) { }

	// RVA: 0xBBE3F8 Offset: 0xBBE3F8 VA: 0xBBE3F8
	public void .ctor(int dummy) { }

	// RVA: 0xBBE400 Offset: 0xBBE400 VA: 0xBBE400
	public bool get_FollowsOriginalSource() { }

	// RVA: 0xBBE408 Offset: 0xBBE408 VA: 0xBBE408
	public CriAtomEx.Randomize3dCalcType get_CalculationType() { }

	// RVA: 0xBBE410 Offset: 0xBBE410 VA: 0xBBE410
	public float get_CalculationParameter1() { }

	// RVA: 0xBBE418 Offset: 0xBBE418 VA: 0xBBE418
	public float get_CalculationParameter2() { }

	// RVA: 0xBBE420 Offset: 0xBBE420 VA: 0xBBE420
	public float get_CalculationParameter3() { }

	// RVA: 0xBBE428 Offset: 0xBBE428 VA: 0xBBE428
	public void ClearCalcParams(float initVal = 0) { }

	// RVA: 0xBBE430 Offset: 0xBBE430 VA: 0xBBE430
	public bool GetParamByType(CriAtomEx.Randomize3dParamType paramType, ref float paramVal) { }

	// RVA: 0xBBE438 Offset: 0xBBE438 VA: 0xBBE438
	public bool SetParamByType(CriAtomEx.Randomize3dParamType paramType, float paramVal) { }
}

// Namespace: 
public struct CriAtomEx.CuePos3dInfo // TypeDefIndex: 3870
{
	// Fields
	public float coneInsideAngle; // 0x0
	public float coneOutsideAngle; // 0x4
	public float minAttenuationDistance; // 0x8
	public float maxAttenuationDistance; // 0xC
	public float sourceRadius; // 0x10
	public float interiorDistance; // 0x14
	public float dopplerFactor; // 0x18
	public CriAtomEx.Randomize3dConfig randomPos; // 0x20
	public ushort distanceAisacControl; // 0x30
	public ushort listenerBaseAngleAisacControl; // 0x32
	public ushort sourceBaseAngleAisacControl; // 0x34
	public ushort listenerBaseElevationAisacControl; // 0x36
	public ushort sourceBaseElevationAisacControl; // 0x38
	public ushort[] reserved; // 0x40

	// Methods

	// RVA: 0xBBE3AC Offset: 0xBBE3AC VA: 0xBBE3AC
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public struct CriAtomEx.GameVariableInfo // TypeDefIndex: 3871
{
	// Fields
	public readonly string name; // 0x0
	public uint id; // 0x8
	public float gameValue; // 0xC

	// Methods

	// RVA: 0xBBE3B4 Offset: 0xBBE3B4 VA: 0xBBE3B4
	public void .ctor(byte[] data, int startIndex) { }

	// RVA: 0xBBE3BC Offset: 0xBBE3BC VA: 0xBBE3BC
	public void .ctor(string name, uint id, float gameValue) { }
}

// Namespace: 
public enum CriAtomEx.CueType // TypeDefIndex: 3872
{
	// Fields
	public int value__; // 0x0
	public const CriAtomEx.CueType Polyphonic = 0;
	public const CriAtomEx.CueType Sequential = 1;
	public const CriAtomEx.CueType Shuffle = 2;
	public const CriAtomEx.CueType Random = 3;
	public const CriAtomEx.CueType RandomNoRepeat = 4;
	public const CriAtomEx.CueType SwitchGameVariable = 5;
	public const CriAtomEx.CueType ComboSequential = 6;
	public const CriAtomEx.CueType SwitchSelector = 7;
	public const CriAtomEx.CueType TrackTransitionBySelector = 8;
}

// Namespace: 
public struct CriAtomEx.CueInfo // TypeDefIndex: 3873
{
	// Fields
	public int id; // 0x0
	public CriAtomEx.CueType type; // 0x4
	public readonly string name; // 0x8
	public readonly string userData; // 0x10
	public long length; // 0x18
	public ushort[] categories; // 0x20
	public short numLimits; // 0x28
	public ushort numBlocks; // 0x2A
	public ushort numTracks; // 0x2C
	public ushort numRelatedWaveForms; // 0x2E
	public byte priority; // 0x30
	public byte headerVisibility; // 0x31
	public byte ignore_player_parameter; // 0x32
	public byte probability; // 0x33
	public CriAtomEx.PanType panType; // 0x34
	public CriAtomEx.CuePos3dInfo pos3dInfo; // 0x38
	public CriAtomEx.GameVariableInfo gameVariableInfo; // 0x80

	// Methods

	// RVA: 0xBBE268 Offset: 0xBBE268 VA: 0xBBE268
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public struct CriAtomEx.WaveformInfo // TypeDefIndex: 3874
{
	// Fields
	public int waveId; // 0x0
	public uint format; // 0x4
	public int samplingRate; // 0x8
	public int numChannels; // 0xC
	public long numSamples; // 0x10
	public bool streamingFlag; // 0x18
	public uint[] reserved; // 0x20

	// Methods

	// RVA: 0xBBE560 Offset: 0xBBE560 VA: 0xBBE560
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public struct CriAtomEx.AisacInfo // TypeDefIndex: 3875
{
	// Fields
	public readonly string name; // 0x0
	public bool defaultControlFlag; // 0x8
	public float defaultControlValue; // 0xC
	public uint controlId; // 0x10
	public readonly string controlName; // 0x18

	// Methods

	// RVA: 0xBBDD48 Offset: 0xBBDD48 VA: 0xBBDD48
	public void .ctor(byte[] data, int startIndex) { }
}

// Namespace: 
public struct CriAtomEx.PerformanceInfo // TypeDefIndex: 3876
{
	// Fields
	public uint serverProcessCount; // 0x0
	public uint lastServerTime; // 0x4
	public uint maxServerTime; // 0x8
	public uint averageServerTime; // 0xC
	public uint lastServerInterval; // 0x10
	public uint maxServerInterval; // 0x14
	public uint averageServerInterval; // 0x18
}

// Namespace: 
public struct CriAtomEx.ResourceUsage // TypeDefIndex: 3877
{
	// Fields
	public uint useCount; // 0x0
	public uint limit; // 0x4
}

// Namespace: 
public struct CriAtomEx.NativeVector // TypeDefIndex: 3878
{
	// Fields
	public float x; // 0x0
	public float y; // 0x4
	public float z; // 0x8

	// Methods

	// RVA: 0xBBE3CC Offset: 0xBBE3CC VA: 0xBBE3CC
	public void .ctor(float x, float y, float z) { }

	// RVA: 0xBBE3D8 Offset: 0xBBE3D8 VA: 0xBBE3D8
	public void .ctor(Vector3 vector) { }
}

// Namespace: 
public struct CriAtomEx.CueLinkInfo // TypeDefIndex: 3879
{
	// Fields
	public IntPtr nativePlayerHn; // 0x0
	public uint basePlaybackId; // 0x8
	public uint targetPlaybackId; // 0xC
	public int cueLinkType; // 0x10
}

// Namespace: 
[UnmanagedFunctionPointerAttribute] // RVA: 0xC8AFD8 Offset: 0xC8AFD8 VA: 0xC8AFD8
public sealed class CriAtomEx.CueLinkCbFunc : MulticastDelegate // TypeDefIndex: 3880
{
	// Methods

	// RVA: 0x11ED4F4 Offset: 0x11ED4F4 VA: 0x11ED4F4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x11ED0C4 Offset: 0x11ED0C4 VA: 0x11ED0C4 Slot: 11
	public virtual void Invoke(ref CriAtomEx.CueLinkInfo info) { }

	// RVA: 0x11F196C Offset: 0x11F196C VA: 0x11F196C Slot: 12
	public virtual IAsyncResult BeginInvoke(ref CriAtomEx.CueLinkInfo info, AsyncCallback callback, object object) { }

	// RVA: 0x11F1A00 Offset: 0x11F1A00 VA: 0x11F1A00 Slot: 13
	public virtual void EndInvoke(ref CriAtomEx.CueLinkInfo info, IAsyncResult result) { }
}

// Namespace: 
public static class CriAtomExCategory // TypeDefIndex: 3881
{
	// Methods

	// RVA: 0x1192DB0 Offset: 0x1192DB0 VA: 0x1192DB0
	public static void SetVolume(string name, float volume) { }

	// RVA: 0x1192E70 Offset: 0x1192E70 VA: 0x1192E70
	public static void SetVolume(int id, float volume) { }

	// RVA: 0x1192F20 Offset: 0x1192F20 VA: 0x1192F20
	public static float GetVolume(string name) { }

	// RVA: 0x1192FE0 Offset: 0x1192FE0 VA: 0x1192FE0
	public static float GetVolume(int id) { }

	// RVA: 0x1193080 Offset: 0x1193080 VA: 0x1193080
	public static void Mute(string name, bool mute) { }

	// RVA: 0x1193144 Offset: 0x1193144 VA: 0x1193144
	public static void Mute(int id, bool mute) { }

	// RVA: 0x11931F8 Offset: 0x11931F8 VA: 0x11931F8
	public static bool IsMuted(string name) { }

	// RVA: 0x11932B4 Offset: 0x11932B4 VA: 0x11932B4
	public static bool IsMuted(int id) { }

	// RVA: 0x119335C Offset: 0x119335C VA: 0x119335C
	public static void Solo(string name, bool solo, float muteVolume) { }

	// RVA: 0x1193430 Offset: 0x1193430 VA: 0x1193430
	public static void Solo(int id, bool solo, float muteVolume) { }

	// RVA: 0x11934F4 Offset: 0x11934F4 VA: 0x11934F4
	public static bool IsSoloed(string name) { }

	// RVA: 0x11935B0 Offset: 0x11935B0 VA: 0x11935B0
	public static bool IsSoloed(int id) { }

	// RVA: 0x1193658 Offset: 0x1193658 VA: 0x1193658
	public static void Pause(string name, bool pause) { }

	// RVA: 0x119371C Offset: 0x119371C VA: 0x119371C
	public static void Pause(int id, bool pause) { }

	// RVA: 0x11937D0 Offset: 0x11937D0 VA: 0x11937D0
	public static bool IsPaused(string name) { }

	// RVA: 0x119388C Offset: 0x119388C VA: 0x119388C
	public static bool IsPaused(int id) { }

	// RVA: 0x1193934 Offset: 0x1193934 VA: 0x1193934
	public static void SetAisacControl(string name, string controlName, float value) { }

	[ObsoleteAttribute] // RVA: 0xC8F650 Offset: 0xC8F650 VA: 0xC8F650
	// RVA: 0x1193A1C Offset: 0x1193A1C VA: 0x1193A1C
	public static void SetAisac(string name, string controlName, float value) { }

	// RVA: 0x1193A20 Offset: 0x1193A20 VA: 0x1193A20
	public static void SetAisacControl(int id, int controlId, float value) { }

	[ObsoleteAttribute] // RVA: 0xC8F688 Offset: 0xC8F688 VA: 0xC8F688
	// RVA: 0x1193AE0 Offset: 0x1193AE0 VA: 0x1193AE0
	public static void SetAisac(int id, int controlId, float value) { }

	// RVA: 0x1193AE4 Offset: 0x1193AE4 VA: 0x1193AE4
	public static void SetReactParameter(string name, CriAtomExCategory.ReactParameter parameter) { }

	// RVA: 0x1193C00 Offset: 0x1193C00 VA: 0x1193C00
	public static bool GetReactParameter(string name, out CriAtomExCategory.ReactParameter parameter) { }

	// RVA: 0x1193D14 Offset: 0x1193D14 VA: 0x1193D14
	public static bool GetAttachedAisacInfoById(uint id, int aisacAttachedIndex, out CriAtomEx.AisacInfo aisacInfo) { }

	// RVA: 0x1193F9C Offset: 0x1193F9C VA: 0x1193F9C
	public static bool GetAttachedAisacInfoByName(string name, int aisacAttachedIndex, out CriAtomEx.AisacInfo aisacInfo) { }

	// RVA: 0x1194238 Offset: 0x1194238 VA: 0x1194238
	public static bool GetCurrentAisacControlValue(string categoryName, string aisacControlName, out float controlValue) { }

	// RVA: 0x1194324 Offset: 0x1194324 VA: 0x1194324
	public static CriAtomExCategory.ReactStatus GetReactStatus(string reactName) { }

	// RVA: 0x1192DB4 Offset: 0x1192DB4 VA: 0x1192DB4
	private static extern void criAtomExCategory_SetVolumeByName(string name, float volume) { }

	// RVA: 0x1192F24 Offset: 0x1192F24 VA: 0x1192F24
	private static extern float criAtomExCategory_GetVolumeByName(string name) { }

	// RVA: 0x1192E74 Offset: 0x1192E74 VA: 0x1192E74
	private static extern void criAtomExCategory_SetVolumeById(int id, float volume) { }

	// RVA: 0x1192FE4 Offset: 0x1192FE4 VA: 0x1192FE4
	private static extern float criAtomExCategory_GetVolumeById(int id) { }

	// RVA: 0x119314C Offset: 0x119314C VA: 0x119314C
	private static extern void criAtomExCategory_MuteById(int id, bool mute) { }

	// RVA: 0x11932B8 Offset: 0x11932B8 VA: 0x11932B8
	private static extern bool criAtomExCategory_IsMutedById(int id) { }

	// RVA: 0x1193088 Offset: 0x1193088 VA: 0x1193088
	private static extern void criAtomExCategory_MuteByName(string name, bool mute) { }

	// RVA: 0x11931FC Offset: 0x11931FC VA: 0x11931FC
	private static extern bool criAtomExCategory_IsMutedByName(string name) { }

	// RVA: 0x1193438 Offset: 0x1193438 VA: 0x1193438
	private static extern void criAtomExCategory_SoloById(int id, bool solo, float volume) { }

	// RVA: 0x11935B4 Offset: 0x11935B4 VA: 0x11935B4
	private static extern bool criAtomExCategory_IsSoloedById(int id) { }

	// RVA: 0x1193364 Offset: 0x1193364 VA: 0x1193364
	private static extern void criAtomExCategory_SoloByName(string name, bool solo, float volume) { }

	// RVA: 0x11934F8 Offset: 0x11934F8 VA: 0x11934F8
	private static extern bool criAtomExCategory_IsSoloedByName(string name) { }

	// RVA: 0x1193724 Offset: 0x1193724 VA: 0x1193724
	private static extern void criAtomExCategory_PauseById(int id, bool pause) { }

	// RVA: 0x1193890 Offset: 0x1193890 VA: 0x1193890
	private static extern bool criAtomExCategory_IsPausedById(int id) { }

	// RVA: 0x1193660 Offset: 0x1193660 VA: 0x1193660
	private static extern void criAtomExCategory_PauseByName(string name, bool pause) { }

	// RVA: 0x11937D4 Offset: 0x11937D4 VA: 0x11937D4
	private static extern bool criAtomExCategory_IsPausedByName(string name) { }

	// RVA: 0x1193A24 Offset: 0x1193A24 VA: 0x1193A24
	private static extern void criAtomExCategory_SetAisacControlById(int id, ushort controlId, float value) { }

	// RVA: 0x1193938 Offset: 0x1193938 VA: 0x1193938
	private static extern void criAtomExCategory_SetAisacControlByName(string name, string controlName, float value) { }

	// RVA: 0x1193AE8 Offset: 0x1193AE8 VA: 0x1193AE8
	private static extern void criAtomExCategory_SetReactParameter(string react_name, ref CriAtomExCategory.ReactParameter parameter) { }

	// RVA: 0x1193C04 Offset: 0x1193C04 VA: 0x1193C04
	private static extern bool criAtomExCategory_GetReactParameter(string react_name, out CriAtomExCategory.ReactParameter parameter) { }

	// RVA: 0x1193EE0 Offset: 0x1193EE0 VA: 0x1193EE0
	private static extern bool criAtomExCategory_GetAttachedAisacInfoById(uint id, int aisacAttachedIndex, IntPtr aisacInfo) { }

	// RVA: 0x1194168 Offset: 0x1194168 VA: 0x1194168
	private static extern bool criAtomExCategory_GetAttachedAisacInfoByName(string name, int aisacAttachedIndex, IntPtr aisacInfo) { }

	// RVA: 0x119423C Offset: 0x119423C VA: 0x119423C
	private static extern bool criAtomExCategory_GetCurrentAisacControlValueByName(string category_name, string aisac_control_name, out float control_value) { }

	// RVA: 0x1194328 Offset: 0x1194328 VA: 0x1194328
	private static extern CriAtomExCategory.ReactStatus criAtomExCategory_GetReactStatus(string react_name) { }
}

// Namespace: 
public enum CriAtomExCategory.ReactType // TypeDefIndex: 3882
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExCategory.ReactType Ducker = 0;
	public const CriAtomExCategory.ReactType AisacModulationTrigger = 1;
}

// Namespace: 
public enum CriAtomExCategory.ReactDuckerTargetType // TypeDefIndex: 3883
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExCategory.ReactDuckerTargetType Volume = 0;
	public const CriAtomExCategory.ReactDuckerTargetType AisacControlValue = 1;
}

// Namespace: 
public enum CriAtomExCategory.ReactDuckerCurveType // TypeDefIndex: 3884
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExCategory.ReactDuckerCurveType Linear = 0;
	public const CriAtomExCategory.ReactDuckerCurveType Square = 1;
	public const CriAtomExCategory.ReactDuckerCurveType SquareReverse = 2;
	public const CriAtomExCategory.ReactDuckerCurveType SCurve = 3;
	public const CriAtomExCategory.ReactDuckerCurveType FlatAtHalf = 4;
}

// Namespace: 
public struct CriAtomExCategory.ReactFadeParameter // TypeDefIndex: 3885
{
	// Fields
	public CriAtomExCategory.ReactDuckerCurveType curveType; // 0x0
	public float curveStrength; // 0x4
	public ushort fadeTimeMs; // 0x8
}

// Namespace: 
public enum CriAtomExCategory.ReactHoldType // TypeDefIndex: 3886
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExCategory.ReactHoldType WhilePlaying = 0;
	public const CriAtomExCategory.ReactHoldType FixedTime = 1;
}

// Namespace: 
public struct CriAtomExCategory.ReactDuckerParameter // TypeDefIndex: 3887
{
	// Fields
	public CriAtomExCategory.ReactDuckerParameter.Target target; // 0x0
	public CriAtomExCategory.ReactDuckerTargetType targetType; // 0x8
	public CriAtomExCategory.ReactFadeParameter entry; // 0xC
	public CriAtomExCategory.ReactFadeParameter exit; // 0x18
	public CriAtomExCategory.ReactHoldType holdType; // 0x24
	public ushort holdTimeMs; // 0x28
}

// Namespace: 
public struct CriAtomExCategory.ReactDuckerParameter.Volume // TypeDefIndex: 3888
{
	// Fields
	public float level; // 0x0
}

// Namespace: 
public struct CriAtomExCategory.ReactDuckerParameter.AisacControl // TypeDefIndex: 3889
{
	// Fields
	public ushort id; // 0x0
	public float value; // 0x4
}

// Namespace: 
public struct CriAtomExCategory.ReactDuckerParameter.Target // TypeDefIndex: 3890
{
	// Fields
	public CriAtomExCategory.ReactDuckerParameter.Volume volume; // 0x0
	public CriAtomExCategory.ReactDuckerParameter.AisacControl aisacControl; // 0x0
}

// Namespace: 
public struct CriAtomExCategory.ReactAisacModulationParameter // TypeDefIndex: 3891
{
	// Fields
	private int _enableDecrementAisacModulationKey; // 0x0
	public uint decrementAisacModulationKey; // 0x4
	private int _enableIncrementAisacModulationKey; // 0x8
	public uint incrementAisacModulationKey; // 0xC

	// Properties
	public bool enableDecrementAisacModulationKey { get; }
	public bool enableIncrementAisacModulationKey { get; }

	// Methods

	// RVA: 0xBBCB00 Offset: 0xBBCB00 VA: 0xBBCB00
	public bool get_enableDecrementAisacModulationKey() { }

	// RVA: 0xBBCB10 Offset: 0xBBCB10 VA: 0xBBCB10
	public bool get_enableIncrementAisacModulationKey() { }
}

// Namespace: 
public struct CriAtomExCategory.ReactParameter // TypeDefIndex: 3892
{
	// Fields
	public CriAtomExCategory.ReactParameter.Parameter parameter; // 0x0
	public CriAtomExCategory.ReactType type; // 0x2C
	public bool enablePausingCue; // 0x30
}

// Namespace: 
public struct CriAtomExCategory.ReactParameter.Parameter // TypeDefIndex: 3893
{
	// Fields
	public CriAtomExCategory.ReactDuckerParameter ducker; // 0x0
	public CriAtomExCategory.ReactAisacModulationParameter aisacModulation; // 0x0
}

// Namespace: 
public enum CriAtomExCategory.ReactStatus // TypeDefIndex: 3894
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExCategory.ReactStatus Stop = 0;
	public const CriAtomExCategory.ReactStatus FadeOut = 1;
	public const CriAtomExCategory.ReactStatus Hold = 2;
	public const CriAtomExCategory.ReactStatus FadeIn = 3;
	public const CriAtomExCategory.ReactStatus Error = 4;
}

// Namespace: 
public static class CriAtomExSequencer // TypeDefIndex: 3895
{
	// Methods

	// RVA: 0x119A878 Offset: 0x119A878 VA: 0x119A878
	public static void add_OnCallback(CriAtomExSequencer.EventCallback value) { }

	// RVA: 0x119A978 Offset: 0x119A978 VA: 0x119A978
	public static void remove_OnCallback(CriAtomExSequencer.EventCallback value) { }

	[ObsoleteAttribute] // RVA: 0xC8F6C0 Offset: 0xC8F6C0 VA: 0xC8F6C0
	// RVA: 0x11A069C Offset: 0x11A069C VA: 0x11A069C
	public static void SetEventCallback(CriAtomExSequencer.EventCbFunc func, string separator = "\t") { }
}

// Namespace: 
public struct CriAtomExSequencer.CriAtomExSequenceEventInfo // TypeDefIndex: 3896
{
	// Fields
	public ulong position; // 0x0
	public IntPtr playerHn; // 0x8
	public readonly string tag; // 0x10
	public uint playbackId; // 0x18
	private int type; // 0x1C
	public uint id; // 0x20
	private uint reserved; // 0x24
}

// Namespace: 
[UnmanagedFunctionPointerAttribute] // RVA: 0xC8AFEC Offset: 0xC8AFEC VA: 0xC8AFEC
public sealed class CriAtomExSequencer.EventCbFunc : MulticastDelegate // TypeDefIndex: 3897
{
	// Methods

	// RVA: 0x11A07D0 Offset: 0x11A07D0 VA: 0x11A07D0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x11A07E0 Offset: 0x11A07E0 VA: 0x11A07E0 Slot: 11
	public virtual void Invoke(string eventParamsString) { }

	// RVA: 0x11A0B80 Offset: 0x11A0B80 VA: 0x11A0B80 Slot: 12
	public virtual IAsyncResult BeginInvoke(string eventParamsString, AsyncCallback callback, object object) { }

	// RVA: 0x11A0BA4 Offset: 0x11A0BA4 VA: 0x11A0BA4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[UnmanagedFunctionPointerAttribute] // RVA: 0xC8B000 Offset: 0xC8B000 VA: 0xC8B000
public sealed class CriAtomExSequencer.EventCallback : MulticastDelegate // TypeDefIndex: 3898
{
	// Methods

	// RVA: 0x119A868 Offset: 0x119A868 VA: 0x119A868
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x119FFC4 Offset: 0x119FFC4 VA: 0x119FFC4 Slot: 11
	public virtual void Invoke(ref CriAtomExSequencer.CriAtomExSequenceEventInfo criAtomExSequenceInfo) { }

	// RVA: 0x11A0714 Offset: 0x11A0714 VA: 0x11A0714 Slot: 12
	public virtual IAsyncResult BeginInvoke(ref CriAtomExSequencer.CriAtomExSequenceEventInfo criAtomExSequenceInfo, AsyncCallback callback, object object) { }

	// RVA: 0x11A07A8 Offset: 0x11A07A8 VA: 0x11A07A8 Slot: 13
	public virtual void EndInvoke(ref CriAtomExSequencer.CriAtomExSequenceEventInfo criAtomExSequenceInfo, IAsyncResult result) { }
}

// Namespace: 
public static class CriAtomExBeatSync // TypeDefIndex: 3899
{
	// Methods

	// RVA: 0x1192980 Offset: 0x1192980 VA: 0x1192980
	public static void add_OnCallback(CriAtomExBeatSync.CbFunc value) { }

	// RVA: 0x11929E8 Offset: 0x11929E8 VA: 0x11929E8
	public static void remove_OnCallback(CriAtomExBeatSync.CbFunc value) { }

	[ObsoleteAttribute] // RVA: 0xC8F6FC Offset: 0xC8F6FC VA: 0xC8F6FC
	// RVA: 0x1192A50 Offset: 0x1192A50 VA: 0x1192A50
	public static void SetCallback(CriAtomExBeatSync.CbFunc func) { }
}

// Namespace: 
public struct CriAtomExBeatSync.Info // TypeDefIndex: 3900
{
	// Fields
	public IntPtr playerHn; // 0x0
	public uint playbackId; // 0x8
	public uint barCount; // 0xC
	public uint beatCount; // 0x10
	public float beatProgress; // 0x14
	public float bpm; // 0x18
	public int offset; // 0x1C
	public uint numBeats; // 0x20
}

// Namespace: 
[UnmanagedFunctionPointerAttribute] // RVA: 0xC8B014 Offset: 0xC8B014 VA: 0xC8B014
public sealed class CriAtomExBeatSync.CbFunc : MulticastDelegate // TypeDefIndex: 3901
{
	// Methods

	// RVA: 0x1192AB8 Offset: 0x1192AB8 VA: 0x1192AB8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1192AC8 Offset: 0x1192AC8 VA: 0x1192AC8 Slot: 11
	public virtual void Invoke(ref CriAtomExBeatSync.Info info) { }

	// RVA: 0x1192CF4 Offset: 0x1192CF4 VA: 0x1192CF4 Slot: 12
	public virtual IAsyncResult BeginInvoke(ref CriAtomExBeatSync.Info info, AsyncCallback callback, object object) { }

	// RVA: 0x1192D88 Offset: 0x1192D88 VA: 0x1192D88 Slot: 13
	public virtual void EndInvoke(ref CriAtomExBeatSync.Info info, IAsyncResult result) { }
}

// Namespace: 
public class CriAtomExAsr // TypeDefIndex: 3902
{
	// Methods

	// RVA: 0x118FF58 Offset: 0x118FF58 VA: 0x118FF58
	public void .ctor() { }

	// RVA: 0x118FF60 Offset: 0x118FF60 VA: 0x118FF60
	public static void AttachBusAnalyzer(string busName, int interval, int peakHoldTime) { }

	// RVA: 0x1190040 Offset: 0x1190040 VA: 0x1190040
	public static void AttachBusAnalyzer(int interval, int peakHoldTime) { }

	// RVA: 0x1190124 Offset: 0x1190124 VA: 0x1190124
	public static void DetachBusAnalyzer(string busName) { }

	// RVA: 0x11901D4 Offset: 0x11901D4 VA: 0x11901D4
	public static void DetachBusAnalyzer() { }

	// RVA: 0x11902A0 Offset: 0x11902A0 VA: 0x11902A0
	public static void GetBusAnalyzerInfo(string busName, out CriAtomExAsr.BusAnalyzerInfo info) { }

	[ObsoleteAttribute] // RVA: 0xC8F738 Offset: 0xC8F738 VA: 0xC8F738
	// RVA: 0x1190778 Offset: 0x1190778 VA: 0x1190778
	public static void GetBusAnalyzerInfo(int busId, out CriAtomExAsr.BusAnalyzerInfo info) { }

	// RVA: 0x11909B8 Offset: 0x11909B8 VA: 0x11909B8
	public static void SetBusVolume(string busName, float volume) { }

	[ObsoleteAttribute] // RVA: 0xC8F770 Offset: 0xC8F770 VA: 0xC8F770
	// RVA: 0x1190A78 Offset: 0x1190A78 VA: 0x1190A78
	public static void SetBusVolume(int busId, float volume) { }

	// RVA: 0x1190B28 Offset: 0x1190B28 VA: 0x1190B28
	public static void SetBusSendLevel(string busName, string sendTo, float level) { }

	[ObsoleteAttribute] // RVA: 0xC8F7A8 Offset: 0xC8F7A8 VA: 0xC8F7A8
	// RVA: 0x1190C10 Offset: 0x1190C10 VA: 0x1190C10
	public static void SetBusSendLevel(int busId, int sendTo, float level) { }

	// RVA: 0x1190CD0 Offset: 0x1190CD0 VA: 0x1190CD0
	public static void SetBusMatrix(string busName, int inputChannels, int outputChannels, float[] matrix) { }

	[ObsoleteAttribute] // RVA: 0xC8F7E0 Offset: 0xC8F7E0 VA: 0xC8F7E0
	// RVA: 0x1190DB0 Offset: 0x1190DB0 VA: 0x1190DB0
	public static void SetBusMatrix(int busId, int inputChannels, int outputChannels, float[] matrix) { }

	// RVA: 0x1190E80 Offset: 0x1190E80 VA: 0x1190E80
	public static void SetEffectBypass(string busName, string effectName, bool bypass) { }

	// RVA: 0x1190F64 Offset: 0x1190F64 VA: 0x1190F64
	public static void SetEffectParameter(string busName, string effectName, uint parameterIndex, float parameterValue) { }

	// RVA: 0x1191150 Offset: 0x1191150 VA: 0x1191150
	public static float GetEffectParameter(string busName, string effectName, uint parameterIndex) { }

	// RVA: 0x1191240 Offset: 0x1191240 VA: 0x1191240
	public static bool RegisterEffectInterface(IntPtr afx_interface) { }

	// RVA: 0x11912E8 Offset: 0x11912E8 VA: 0x11912E8
	public static void UnregisterEffectInterface(IntPtr afx_interface) { }

	// RVA: 0x1191388 Offset: 0x1191388 VA: 0x1191388
	public static void GetBusVolume(string busName, out float volume) { }

	// RVA: 0x118FF84 Offset: 0x118FF84 VA: 0x118FF84
	private static extern void criAtomExAsr_AttachBusAnalyzerByName(string busName, ref CriAtomExAsr.BusAnalyzerConfig config) { }

	// RVA: 0x1190078 Offset: 0x1190078 VA: 0x1190078
	private static extern void criAtomExAsr_AttachBusAnalyzer(int busNo, ref CriAtomExAsr.BusAnalyzerConfig config) { }

	// RVA: 0x1190128 Offset: 0x1190128 VA: 0x1190128
	private static extern void criAtomExAsr_DetachBusAnalyzerByName(string busName) { }

	// RVA: 0x1190204 Offset: 0x1190204 VA: 0x1190204
	private static extern void criAtomExAsr_DetachBusAnalyzer(int busNo) { }

	// RVA: 0x1190434 Offset: 0x1190434 VA: 0x1190434
	private static extern void criAtomExAsr_GetBusAnalyzerInfoByName(string busName, IntPtr info) { }

	// RVA: 0x119090C Offset: 0x119090C VA: 0x119090C
	private static extern void criAtomExAsr_GetBusAnalyzerInfo(int busNo, IntPtr info) { }

	// RVA: 0x11909BC Offset: 0x11909BC VA: 0x11909BC
	private static extern void criAtomExAsr_SetBusVolumeByName(string busName, float volume) { }

	// RVA: 0x1190A7C Offset: 0x1190A7C VA: 0x1190A7C
	private static extern void criAtomExAsr_SetBusVolume(int busNo, float volume) { }

	// RVA: 0x1190B2C Offset: 0x1190B2C VA: 0x1190B2C
	private static extern void criAtomExAsr_SetBusSendLevelByName(string busName, string sendtoName, float level) { }

	// RVA: 0x1190C14 Offset: 0x1190C14 VA: 0x1190C14
	private static extern void criAtomExAsr_SetBusSendLevel(int busNo, int sendtoNo, float level) { }

	// RVA: 0x1190CD4 Offset: 0x1190CD4 VA: 0x1190CD4
	private static extern void criAtomExAsr_SetBusMatrixByName(string busName, int inputChannels, int outputChannels, float[] matrix) { }

	// RVA: 0x1190DB4 Offset: 0x1190DB4 VA: 0x1190DB4
	private static extern void criAtomExAsr_SetBusMatrix(int busNo, int inputChannels, int outputChannels, float[] matrix) { }

	// RVA: 0x1190E88 Offset: 0x1190E88 VA: 0x1190E88
	private static extern void criAtomExAsr_SetEffectBypass(string busName, string effectName, bool bypass) { }

	// RVA: 0x119107C Offset: 0x119107C VA: 0x119107C
	private static extern void criAtomExAsr_UpdateEffectParameters(string busName, string effectName) { }

	// RVA: 0x1190F90 Offset: 0x1190F90 VA: 0x1190F90
	private static extern void criAtomExAsr_SetEffectParameter(string busName, string effectName, uint parameterIndex, float parameterValue) { }

	// RVA: 0x1191154 Offset: 0x1191154 VA: 0x1191154
	private static extern float criAtomExAsr_GetEffectParameter(string busName, string effectName, uint parameterIndex) { }

	// RVA: 0x1191244 Offset: 0x1191244 VA: 0x1191244
	private static extern bool criAtomExAsr_RegisterEffectInterface(IntPtr afx_interface) { }

	// RVA: 0x11912EC Offset: 0x11912EC VA: 0x11912EC
	private static extern void criAtomExAsr_UnregisterEffectInterface(IntPtr afx_interface) { }

	// RVA: 0x119138C Offset: 0x119138C VA: 0x119138C
	private static extern void criAtomExAsr_GetBusVolumeByName(string busName, out float volume) { }
}

// Namespace: 
private struct CriAtomExAsr.BusAnalyzerConfig // TypeDefIndex: 3903
{
	// Fields
	public int interval; // 0x0
	public int peakHoldTime; // 0x4
}

// Namespace: 
public struct CriAtomExAsr.BusAnalyzerInfo // TypeDefIndex: 3904
{
	// Fields
	public int numChannels; // 0x0
	public float[] rmsLevels; // 0x8
	public float[] peakLevels; // 0x10
	public float[] peakHoldLevels; // 0x18

	// Methods

	// RVA: 0xBBCA84 Offset: 0xBBCA84 VA: 0xBBCA84
	public void .ctor(byte[] data) { }
}

// Namespace: 
public static class CriAtomExLatencyEstimator // TypeDefIndex: 3905
{
	// Methods

	// RVA: 0x119449C Offset: 0x119449C VA: 0x119449C
	public static void InitializeModule() { }

	// RVA: 0x119452C Offset: 0x119452C VA: 0x119452C
	public static void FinalizeModule() { }

	// RVA: 0x11945BC Offset: 0x11945BC VA: 0x11945BC
	public static CriAtomExLatencyEstimator.EstimatorInfo GetCurrentInfo() { }

	// RVA: 0x11944A0 Offset: 0x11944A0 VA: 0x11944A0
	private static extern void criAtomLatencyEstimator_Initialize_ANDROID() { }

	// RVA: 0x1194530 Offset: 0x1194530 VA: 0x1194530
	private static extern void criAtomLatencyEstimator_Finalize_ANDROID() { }

	// RVA: 0x11945C0 Offset: 0x11945C0 VA: 0x11945C0
	private static extern CriAtomExLatencyEstimator.EstimatorInfo criAtomLatencyEstimator_GetCurrentInfo_ANDROID() { }
}

// Namespace: 
public enum CriAtomExLatencyEstimator.Status // TypeDefIndex: 3906
{
	// Fields
	public int value__; // 0x0
	public const CriAtomExLatencyEstimator.Status Stop = 0;
	public const CriAtomExLatencyEstimator.Status Processing = 1;
	public const CriAtomExLatencyEstimator.Status Done = 2;
	public const CriAtomExLatencyEstimator.Status Error = 3;
}

// Namespace: 
public struct CriAtomExLatencyEstimator.EstimatorInfo // TypeDefIndex: 3907
{
	// Fields
	public CriAtomExLatencyEstimator.Status status; // 0x0
	public uint estimated_latency; // 0x4
}

// Namespace: 
public class CriAtomEx3dListener : CriDisposable // TypeDefIndex: 3908
{
	// Fields
	private IntPtr handle; // 0x20

	// Properties
	public IntPtr nativeHandle { get; }

	// Methods

	// RVA: 0x11F256C Offset: 0x11F256C VA: 0x11F256C
	public void .ctor() { }

	// RVA: 0x11F26C0 Offset: 0x11F26C0 VA: 0x11F26C0 Slot: 5
	public override void Dispose() { }

	// RVA: 0x11F26C8 Offset: 0x11F26C8 VA: 0x11F26C8
	private void Dispose(bool disposing) { }

	// RVA: 0x11F281C Offset: 0x11F281C VA: 0x11F281C
	public IntPtr get_nativeHandle() { }

	// RVA: 0x11F2824 Offset: 0x11F2824 VA: 0x11F2824
	public void Update() { }

	// RVA: 0x11F2924 Offset: 0x11F2924 VA: 0x11F2924
	public void ResetParameters() { }

	// RVA: 0x11F2A24 Offset: 0x11F2A24 VA: 0x11F2A24
	public void SetPosition(float x, float y, float z) { }

	// RVA: 0x11F2B64 Offset: 0x11F2B64 VA: 0x11F2B64
	public void SetVelocity(float x, float y, float z) { }

	// RVA: 0x11F2CA4 Offset: 0x11F2CA4 VA: 0x11F2CA4
	public void SetOrientation(float fx, float fy, float fz, float ux, float uy, float uz) { }

	[ObsoleteAttribute] // RVA: 0xC8F818 Offset: 0xC8F818 VA: 0xC8F818
	// RVA: 0x11F2E14 Offset: 0x11F2E14 VA: 0x11F2E14
	public void SetDistanceFactor(float distanceFactor) { }

	// RVA: 0x11F2F90 Offset: 0x11F2F90 VA: 0x11F2F90
	public void SetDopplerMultiplier(float dopplerMultiplier) { }

	// RVA: 0x11F3050 Offset: 0x11F3050 VA: 0x11F3050
	public void SetFocusPoint(float x, float y, float z) { }

	// RVA: 0x11F3190 Offset: 0x11F3190 VA: 0x11F3190
	public void SetDistanceFocusLevel(float distanceFocusLevel) { }

	// RVA: 0x11F32B4 Offset: 0x11F32B4 VA: 0x11F32B4
	public void SetDirectionFocusLevel(float directionFocusLevel) { }

	// RVA: 0x11F33D8 Offset: 0x11F33D8 VA: 0x11F33D8
	public void Set3dRegion(CriAtomEx3dRegion region3d) { }

	// RVA: 0x11F3510 Offset: 0x11F3510 VA: 0x11F3510 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x11F260C Offset: 0x11F260C VA: 0x11F260C
	private static extern IntPtr criAtomEx3dListener_Create(ref CriAtomEx3dListener.Config config, IntPtr work, int work_size) { }

	// RVA: 0x11F2780 Offset: 0x11F2780 VA: 0x11F2780
	private static extern void criAtomEx3dListener_Destroy(IntPtr ex_3d_listener) { }

	// RVA: 0x11F2888 Offset: 0x11F2888 VA: 0x11F2888
	private static extern void criAtomEx3dListener_Update(IntPtr ex_3d_listener) { }

	// RVA: 0x11F2988 Offset: 0x11F2988 VA: 0x11F2988
	private static extern void criAtomEx3dListener_ResetParameters(IntPtr ex_3d_listener) { }

	// RVA: 0x11F2AB8 Offset: 0x11F2AB8 VA: 0x11F2AB8
	private static extern void criAtomEx3dListener_SetPosition(IntPtr ex_3d_listener, ref CriAtomEx.NativeVector position) { }

	// RVA: 0x11F2BF8 Offset: 0x11F2BF8 VA: 0x11F2BF8
	private static extern void criAtomEx3dListener_SetVelocity(IntPtr ex_3d_listener, ref CriAtomEx.NativeVector velocity) { }

	// RVA: 0x11F2D60 Offset: 0x11F2D60 VA: 0x11F2D60
	private static extern void criAtomEx3dListener_SetOrientation(IntPtr ex_3d_listener, ref CriAtomEx.NativeVector front, ref CriAtomEx.NativeVector top) { }

	// RVA: 0x11F3588 Offset: 0x11F3588 VA: 0x11F3588
	private static extern void criAtomEx3dListener_SetDistanceFactor(IntPtr ex_3d_listener, float distance_factor) { }

	// RVA: 0x11F2EE4 Offset: 0x11F2EE4 VA: 0x11F2EE4
	private static extern void criAtomEx3dListener_SetDopplerMultiplier(IntPtr ex_3d_listener, float doppler_multiplier) { }

	// RVA: 0x11F30E4 Offset: 0x11F30E4 VA: 0x11F30E4
	private static extern void criAtomEx3dListener_SetFocusPoint(IntPtr ex_3d_listener, ref CriAtomEx.NativeVector focus_point) { }

	// RVA: 0x11F3208 Offset: 0x11F3208 VA: 0x11F3208
	private static extern void criAtomEx3dListener_SetDistanceFocusLevel(IntPtr ex_3d_listener, float distance_focus_level) { }

	// RVA: 0x11F332C Offset: 0x11F332C VA: 0x11F332C
	private static extern void criAtomEx3dListener_SetDirectionFocusLevel(IntPtr ex_3d_listener, float direction_focus_level) { }

	// RVA: 0x11F3464 Offset: 0x11F3464 VA: 0x11F3464
	private static extern void criAtomEx3dListener_Set3dRegionHn(IntPtr ex_3d_listener, IntPtr ex_3d_region) { }
}

// Namespace: 
public struct CriAtomEx3dListener.Config // TypeDefIndex: 3909
{
	// Fields
	public int reserved; // 0x0
}

// Namespace: 
public class CriAtomEx3dSource : CriDisposable // TypeDefIndex: 3910
{
	// Fields
	private uint currentRandomPositionListMaxLength; // 0x20
	private IntPtr handle; // 0x28

	// Properties
	public IntPtr nativeHandle { get; }

	// Methods

	// RVA: 0x11F395C Offset: 0x11F395C VA: 0x11F395C
	public void .ctor(bool enableVoicePriorityDecay = False, uint randomPositionListMaxLength = 0) { }

	// RVA: 0x11F3B04 Offset: 0x11F3B04 VA: 0x11F3B04 Slot: 5
	public override void Dispose() { }

	// RVA: 0x11F3B0C Offset: 0x11F3B0C VA: 0x11F3B0C
	private void Dispose(bool disposing) { }

	// RVA: 0x11F3C60 Offset: 0x11F3C60 VA: 0x11F3C60
	public IntPtr get_nativeHandle() { }

	// RVA: 0x11F3C68 Offset: 0x11F3C68 VA: 0x11F3C68
	public void Update() { }

	// RVA: 0x11F3D0C Offset: 0x11F3D0C VA: 0x11F3D0C
	public void ResetParameters() { }

	// RVA: 0x11F3DB0 Offset: 0x11F3DB0 VA: 0x11F3DB0
	public void SetPosition(float x, float y, float z) { }

	// RVA: 0x11F3E88 Offset: 0x11F3E88 VA: 0x11F3E88
	public void SetVelocity(float x, float y, float z) { }

	// RVA: 0x11F3F60 Offset: 0x11F3F60 VA: 0x11F3F60
	public void SetOrientation(Vector3 front, Vector3 top) { }

	[ObsoleteAttribute] // RVA: 0xC8F850 Offset: 0xC8F850 VA: 0xC8F850
	// RVA: 0x11F404C Offset: 0x11F404C VA: 0x11F404C
	public void SetConeOrientation(float x, float y, float z) { }

	// RVA: 0x11F4124 Offset: 0x11F4124 VA: 0x11F4124
	public void SetConeParameter(float insideAngle, float outsideAngle, float outsideVolume) { }

	// RVA: 0x11F41F0 Offset: 0x11F41F0 VA: 0x11F41F0
	public void SetMinMaxDistance(float minDistance, float maxDistance) { }

	// RVA: 0x11F42AC Offset: 0x11F42AC VA: 0x11F42AC
	public void SetInteriorPanField(float sourceRadius, float interiorDistance) { }

	// RVA: 0x11F4368 Offset: 0x11F4368 VA: 0x11F4368
	public void SetDopplerFactor(float dopplerFactor) { }

	// RVA: 0x11F441C Offset: 0x11F441C VA: 0x11F441C
	public void SetVolume(float volume) { }

	// RVA: 0x11F44D0 Offset: 0x11F44D0 VA: 0x11F44D0
	public void SetMaxAngleAisacDelta(float maxDelta) { }

	// RVA: 0x11F4584 Offset: 0x11F4584 VA: 0x11F4584
	public void SetAttenuationDistanceSetting(bool flag) { }

	// RVA: 0x11F463C Offset: 0x11F463C VA: 0x11F463C
	public bool GetAttenuationDistanceSetting() { }

	// RVA: 0x11F46E8 Offset: 0x11F46E8 VA: 0x11F46E8
	public void SetRandomPositionConfig(Nullable<CriAtomEx.Randomize3dConfig> config) { }

	// RVA: 0x11F4928 Offset: 0x11F4928 VA: 0x11F4928
