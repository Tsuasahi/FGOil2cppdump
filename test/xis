	// RVA: 0x2081D84 Offset: 0x2081D84 VA: 0x2081D84
	public void set_EventTarget(FsmEventTarget value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A644 Offset: 0xC1A644 VA: 0xC1A644
	// RVA: 0x20827C0 Offset: 0x20827C0 VA: 0x20827C0
	public float get_Time() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A654 Offset: 0xC1A654 VA: 0xC1A654
	// RVA: 0x2081500 Offset: 0x2081500 VA: 0x2081500
	public void set_Time(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A664 Offset: 0xC1A664 VA: 0xC1A664
	// RVA: 0x20827C8 Offset: 0x20827C8 VA: 0x20827C8
	public float get_StateTime() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A674 Offset: 0xC1A674 VA: 0xC1A674
	// RVA: 0x2081F24 Offset: 0x2081F24 VA: 0x2081F24
	public void set_StateTime(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A684 Offset: 0xC1A684 VA: 0xC1A684
	// RVA: 0x20827D0 Offset: 0x20827D0 VA: 0x20827D0
	public int get_FrameCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A694 Offset: 0xC1A694 VA: 0xC1A694
	// RVA: 0x2081508 Offset: 0x2081508 VA: 0x2081508
	public void set_FrameCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A6A4 Offset: 0xC1A6A4 VA: 0xC1A6A4
	// RVA: 0x20827D8 Offset: 0x20827D8 VA: 0x20827D8
	public FsmVariables get_FsmVariablesCopy() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A6B4 Offset: 0xC1A6B4 VA: 0xC1A6B4
	// RVA: 0x2081FE8 Offset: 0x2081FE8 VA: 0x2081FE8
	public void set_FsmVariablesCopy(FsmVariables value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A6C4 Offset: 0xC1A6C4 VA: 0xC1A6C4
	// RVA: 0x20827E0 Offset: 0x20827E0 VA: 0x20827E0
	public FsmVariables get_GlobalVariablesCopy() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A6D4 Offset: 0xC1A6D4 VA: 0xC1A6D4
	// RVA: 0x2081FF0 Offset: 0x2081FF0 VA: 0x2081FF0
	public void set_GlobalVariablesCopy(FsmVariables value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A6E4 Offset: 0xC1A6E4 VA: 0xC1A6E4
	// RVA: 0x20827E8 Offset: 0x20827E8 VA: 0x20827E8
	public GameObject get_GameObject() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A6F4 Offset: 0xC1A6F4 VA: 0xC1A6F4
	// RVA: 0x2081544 Offset: 0x2081544 VA: 0x2081544
	public void set_GameObject(GameObject value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A704 Offset: 0xC1A704 VA: 0xC1A704
	// RVA: 0x20827F0 Offset: 0x20827F0 VA: 0x20827F0
	public string get_GameObjectName() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A714 Offset: 0xC1A714 VA: 0xC1A714
	// RVA: 0x208154C Offset: 0x208154C VA: 0x208154C
	public void set_GameObjectName(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A724 Offset: 0xC1A724 VA: 0xC1A724
	// RVA: 0x20827F8 Offset: 0x20827F8 VA: 0x20827F8
	public Texture get_GameObjectIcon() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A734 Offset: 0xC1A734 VA: 0xC1A734
	// RVA: 0x2082800 Offset: 0x2082800 VA: 0x2082800
	public void set_GameObjectIcon(Texture value) { }

	// RVA: 0x208155C Offset: 0x208155C VA: 0x208155C
	public string get_Text() { }

	// RVA: 0x2082580 Offset: 0x2082580 VA: 0x2082580
	public void set_Text(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A744 Offset: 0xC1A744 VA: 0xC1A744
	// RVA: 0x2082808 Offset: 0x2082808 VA: 0x2082808
	public string get_Text2() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A754 Offset: 0xC1A754 VA: 0xC1A754
	// RVA: 0x2082810 Offset: 0x2082810 VA: 0x2082810
	public void set_Text2(string value) { }

	// RVA: 0x2082818 Offset: 0x2082818 VA: 0x2082818
	public string get_TextWithTimecode() { }

	// RVA: 0x208294C Offset: 0x208294C VA: 0x208294C
	public int GetIndex() { }

	// RVA: 0x2081B60 Offset: 0x2081B60 VA: 0x2081B60
	public void Reset() { }

	// RVA: 0x2082A2C Offset: 0x2082A2C VA: 0x2082A2C
	public void DebugLog() { }

	// RVA: 0x2080978 Offset: 0x2080978 VA: 0x2080978
	public void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
public enum FsmLogType // TypeDefIndex: 3376
{
	// Fields
	public int value__; // 0x0
	public const FsmLogType Info = 0;
	public const FsmLogType Warning = 1;
	public const FsmLogType Error = 2;
	public const FsmLogType Event = 3;
	public const FsmLogType Transition = 4;
	public const FsmLogType ExitState = 5;
	public const FsmLogType EnterState = 6;
	public const FsmLogType Break = 7;
	public const FsmLogType SendEvent = 8;
	public const FsmLogType Start = 9;
	public const FsmLogType Stop = 10;
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmState : INameable // TypeDefIndex: 3377
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC19384 Offset: 0xC19384 VA: 0xC19384
	private float <StateTime>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC19394 Offset: 0xC19394 VA: 0xC19394
	private float <RealStartTime>k__BackingField; // 0x14
	[CompilerGeneratedAttribute] // RVA: 0xC193A4 Offset: 0xC193A4 VA: 0xC193A4
	private int <loopCount>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC193B4 Offset: 0xC193B4 VA: 0xC193B4
	private int <maxLoopCount>k__BackingField; // 0x1C
	private bool active; // 0x20
	private bool finished; // 0x21
	private FsmStateAction activeAction; // 0x28
	private int activeActionIndex; // 0x30
	private Fsm fsm; // 0x38
	[SerializeField] // RVA: 0xC193C4 Offset: 0xC193C4 VA: 0xC193C4
	private string name; // 0x40
	[SerializeField] // RVA: 0xC193D4 Offset: 0xC193D4 VA: 0xC193D4
	[TextAreaAttribute] // RVA: 0xC193D4 Offset: 0xC193D4 VA: 0xC193D4
	private string description; // 0x48
	[SerializeField] // RVA: 0xC19414 Offset: 0xC19414 VA: 0xC19414
	private byte colorIndex; // 0x50
	[SerializeField] // RVA: 0xC19424 Offset: 0xC19424 VA: 0xC19424
	private Rect position; // 0x54
	[SerializeField] // RVA: 0xC19434 Offset: 0xC19434 VA: 0xC19434
	private bool isBreakpoint; // 0x64
	[SerializeField] // RVA: 0xC19444 Offset: 0xC19444 VA: 0xC19444
	private bool isSequence; // 0x65
	[SerializeField] // RVA: 0xC19454 Offset: 0xC19454 VA: 0xC19454
	private bool hideUnused; // 0x66
	[SerializeField] // RVA: 0xC19464 Offset: 0xC19464 VA: 0xC19464
	private FsmTransition[] transitions; // 0x68
	private FsmStateAction[] actions; // 0x70
	[SerializeField] // RVA: 0xC19474 Offset: 0xC19474 VA: 0xC19474
	private ActionData actionData; // 0x78
	private List<FsmStateAction> activeActions; // 0x80
	private List<FsmStateAction> _finishedActions; // 0x88

	// Properties
	public float StateTime { get; set; }
	public float RealStartTime { get; set; }
	public int loopCount { get; set; }
	public int maxLoopCount { get; set; }
	public List<FsmStateAction> ActiveActions { get; }
	private List<FsmStateAction> finishedActions { get; }
	public bool Active { get; }
	public FsmStateAction ActiveAction { get; }
	public bool IsInitialized { get; }
	public Fsm Fsm { get; set; }
	public string Name { get; set; }
	public bool IsSequence { get; set; }
	public int ActiveActionIndex { get; }
	public Rect Position { get; set; }
	public bool IsBreakpoint { get; set; }
	public bool HideUnused { get; set; }
	public FsmStateAction[] Actions { get; set; }
	public bool ActionsLoaded { get; }
	public ActionData ActionData { get; }
	public FsmTransition[] Transitions { get; set; }
	public string Description { get; set; }
	public int ColorIndex { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC1A764 Offset: 0xC1A764 VA: 0xC1A764
	// RVA: 0x2087400 Offset: 0x2087400 VA: 0x2087400
	public float get_StateTime() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A774 Offset: 0xC1A774 VA: 0xC1A774
	// RVA: 0x2087408 Offset: 0x2087408 VA: 0x2087408
	private void set_StateTime(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A784 Offset: 0xC1A784 VA: 0xC1A784
	// RVA: 0x2081F1C Offset: 0x2081F1C VA: 0x2081F1C
	public float get_RealStartTime() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A794 Offset: 0xC1A794 VA: 0xC1A794
	// RVA: 0x2087410 Offset: 0x2087410 VA: 0x2087410
	private void set_RealStartTime(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A7A4 Offset: 0xC1A7A4 VA: 0xC1A7A4
	// RVA: 0x2087418 Offset: 0x2087418 VA: 0x2087418
	public int get_loopCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A7B4 Offset: 0xC1A7B4 VA: 0xC1A7B4
	// RVA: 0x2087420 Offset: 0x2087420 VA: 0x2087420
	private void set_loopCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A7C4 Offset: 0xC1A7C4 VA: 0xC1A7C4
	// RVA: 0x2087428 Offset: 0x2087428 VA: 0x2087428
	public int get_maxLoopCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A7D4 Offset: 0xC1A7D4 VA: 0xC1A7D4
	// RVA: 0x2087430 Offset: 0x2087430 VA: 0x2087430
	private void set_maxLoopCount(int value) { }

	// RVA: 0x2087438 Offset: 0x2087438 VA: 0x2087438
	public static string GetFullStateLabel(FsmState state) { }

	// RVA: 0x2087514 Offset: 0x2087514 VA: 0x2087514
	public void .ctor(Fsm fsm) { }

	// RVA: 0x20875A8 Offset: 0x20875A8 VA: 0x20875A8
	public void .ctor(FsmState source) { }

	// RVA: 0x2087940 Offset: 0x2087940 VA: 0x2087940
	public void CopyActionData(FsmState state) { }

	// RVA: 0x208798C Offset: 0x208798C VA: 0x208798C
	public void LoadActions() { }

	// RVA: 0x20879CC Offset: 0x20879CC VA: 0x20879CC
	public void SaveActions() { }

	// RVA: 0x2087A28 Offset: 0x2087A28 VA: 0x2087A28
	public List<FsmStateAction> get_ActiveActions() { }

	// RVA: 0x2087A9C Offset: 0x2087A9C VA: 0x2087A9C
	private List<FsmStateAction> get_finishedActions() { }

	// RVA: 0x2087B10 Offset: 0x2087B10 VA: 0x2087B10
	public void OnEnter() { }

	// RVA: 0x2087BF0 Offset: 0x2087BF0 VA: 0x2087BF0
	private bool ActivateActions(int startIndex) { }

	// RVA: 0x2087FDC Offset: 0x2087FDC VA: 0x2087FDC
	public bool OnEvent(FsmEvent fsmEvent) { }

	// RVA: 0x208811C Offset: 0x208811C VA: 0x208811C
	public void OnFixedUpdate() { }

	// RVA: 0x208821C Offset: 0x208821C VA: 0x208821C
	public void OnUpdate() { }

	// RVA: 0x2088358 Offset: 0x2088358 VA: 0x2088358
	public void OnLateUpdate() { }

	// RVA: 0x2088458 Offset: 0x2088458 VA: 0x2088458
	public bool OnAnimatorMove() { }

	// RVA: 0x208868C Offset: 0x208868C VA: 0x208868C
	public bool OnAnimatorIK(int layerIndex) { }

	// RVA: 0x20887B0 Offset: 0x20887B0 VA: 0x20887B0
	public bool OnCollisionEnter(Collision collisionInfo) { }

	// RVA: 0x20888D4 Offset: 0x20888D4 VA: 0x20888D4
	public bool OnCollisionStay(Collision collisionInfo) { }

	// RVA: 0x20889F8 Offset: 0x20889F8 VA: 0x20889F8
	public bool OnCollisionExit(Collision collisionInfo) { }

	// RVA: 0x2088B1C Offset: 0x2088B1C VA: 0x2088B1C
	public bool OnTriggerEnter(Collider other) { }

	// RVA: 0x2088C40 Offset: 0x2088C40 VA: 0x2088C40
	public bool OnTriggerStay(Collider other) { }

	// RVA: 0x2088D64 Offset: 0x2088D64 VA: 0x2088D64
	public bool OnTriggerExit(Collider other) { }

	// RVA: 0x2088E88 Offset: 0x2088E88 VA: 0x2088E88
	public bool OnParticleCollision(GameObject other) { }

	// RVA: 0x2088FAC Offset: 0x2088FAC VA: 0x2088FAC
	public bool OnCollisionEnter2D(Collision2D collisionInfo) { }

	// RVA: 0x20890D0 Offset: 0x20890D0 VA: 0x20890D0
	public bool OnCollisionStay2D(Collision2D collisionInfo) { }

	// RVA: 0x20891F4 Offset: 0x20891F4 VA: 0x20891F4
	public bool OnCollisionExit2D(Collision2D collisionInfo) { }

	// RVA: 0x2089318 Offset: 0x2089318 VA: 0x2089318
	public bool OnTriggerEnter2D(Collider2D other) { }

	// RVA: 0x208943C Offset: 0x208943C VA: 0x208943C
	public bool OnTriggerStay2D(Collider2D other) { }

	// RVA: 0x2089560 Offset: 0x2089560 VA: 0x2089560
	public bool OnTriggerExit2D(Collider2D other) { }

	// RVA: 0x2089684 Offset: 0x2089684 VA: 0x2089684
	public bool OnControllerColliderHit(ControllerColliderHit collider) { }

	// RVA: 0x20897A8 Offset: 0x20897A8 VA: 0x20897A8
	public bool OnJointBreak(float force) { }

	// RVA: 0x20898D4 Offset: 0x20898D4 VA: 0x20898D4
	public bool OnJointBreak2D(Joint2D joint) { }

	// RVA: 0x20899F8 Offset: 0x20899F8 VA: 0x20899F8
	public void OnGUI() { }

	// RVA: 0x2089AF8 Offset: 0x2089AF8 VA: 0x2089AF8
	public void FinishAction(FsmStateAction action) { }

	// RVA: 0x2088574 Offset: 0x2088574 VA: 0x2088574
	private void RemoveFinishedActions() { }

	// RVA: 0x2087D74 Offset: 0x2087D74 VA: 0x2087D74
	private void CheckAllActionsFinished() { }

	// RVA: 0x2089B6C Offset: 0x2089B6C VA: 0x2089B6C
	public void OnExit() { }

	// RVA: 0x2089C30 Offset: 0x2089C30 VA: 0x2089C30
	public void ResetLoopCount() { }

	// RVA: 0x2089C38 Offset: 0x2089C38 VA: 0x2089C38
	public FsmTransition GetTransition(int transitionIndex) { }

	// RVA: 0x2089CC4 Offset: 0x2089CC4 VA: 0x2089CC4
	public int GetTransitionIndex(FsmTransition transition) { }

	// RVA: 0x2089D68 Offset: 0x2089D68 VA: 0x2089D68
	public bool get_Active() { }

	// RVA: 0x207F5E0 Offset: 0x207F5E0 VA: 0x207F5E0
	public FsmStateAction get_ActiveAction() { }

	// RVA: 0x2089D70 Offset: 0x2089D70 VA: 0x2089D70
	public bool get_IsInitialized() { }

	// RVA: 0x2081F2C Offset: 0x2081F2C VA: 0x2081F2C
	public Fsm get_Fsm() { }

	// RVA: 0x2089D80 Offset: 0x2089D80 VA: 0x2089D80
	public void set_Fsm(Fsm value) { }

	// RVA: 0x207EF20 Offset: 0x207EF20 VA: 0x207EF20 Slot: 4
	public string get_Name() { }

	// RVA: 0x2089E44 Offset: 0x2089E44 VA: 0x2089E44
	public void set_Name(string value) { }

	// RVA: 0x2089E4C Offset: 0x2089E4C VA: 0x2089E4C
	public bool get_IsSequence() { }

	// RVA: 0x2089E54 Offset: 0x2089E54 VA: 0x2089E54
	public void set_IsSequence(bool value) { }

	// RVA: 0x2089E60 Offset: 0x2089E60 VA: 0x2089E60
	public int get_ActiveActionIndex() { }

	// RVA: 0x2089E68 Offset: 0x2089E68 VA: 0x2089E68
	public Rect get_Position() { }

	// RVA: 0x2089E74 Offset: 0x2089E74 VA: 0x2089E74
	public void set_Position(Rect value) { }

	// RVA: 0x2089EE8 Offset: 0x2089EE8 VA: 0x2089EE8
	public bool get_IsBreakpoint() { }

	// RVA: 0x2089EF0 Offset: 0x2089EF0 VA: 0x2089EF0
	public void set_IsBreakpoint(bool value) { }

	// RVA: 0x2089EFC Offset: 0x2089EFC VA: 0x2089EFC
	public bool get_HideUnused() { }

	// RVA: 0x2089F04 Offset: 0x2089F04 VA: 0x2089F04
	public void set_HideUnused(bool value) { }

	// RVA: 0x2087EBC Offset: 0x2087EBC VA: 0x2087EBC
	public FsmStateAction[] get_Actions() { }

	// RVA: 0x2089F10 Offset: 0x2089F10 VA: 0x2089F10
	public void set_Actions(FsmStateAction[] value) { }

	// RVA: 0x2089F18 Offset: 0x2089F18 VA: 0x2089F18
	public bool get_ActionsLoaded() { }

	// RVA: 0x2089F28 Offset: 0x2089F28 VA: 0x2089F28
	public ActionData get_ActionData() { }

	// RVA: 0x2087888 Offset: 0x2087888 VA: 0x2087888
	public FsmTransition[] get_Transitions() { }

	// RVA: 0x2089F30 Offset: 0x2089F30 VA: 0x2089F30
	public void set_Transitions(FsmTransition[] value) { }

	// RVA: 0x2089F38 Offset: 0x2089F38 VA: 0x2089F38
	public string get_Description() { }

	// RVA: 0x2089F90 Offset: 0x2089F90 VA: 0x2089F90
	public void set_Description(string value) { }

	// RVA: 0x2089F98 Offset: 0x2089F98 VA: 0x2089F98
	public int get_ColorIndex() { }

	// RVA: 0x2089FA0 Offset: 0x2089FA0 VA: 0x2089FA0
	public void set_ColorIndex(int value) { }

	// RVA: 0x2089FA8 Offset: 0x2089FA8 VA: 0x2089FA8
	public static int GetStateIndex(FsmState state) { }

	// RVA: 0x208A0FC Offset: 0x208A0FC VA: 0x208A0FC
	public bool HasFinishedTransition() { }
}

// Namespace: HutongGames.PlayMaker
public abstract class FsmStateAction : IFsmStateAction // TypeDefIndex: 3378
{
	// Fields
	public static Color ActiveHighlightColor; // 0x0
	public static bool Repaint; // 0x10
	private string name; // 0x10
	private bool enabled; // 0x18
	private bool isOpen; // 0x19
	private bool active; // 0x1A
	private bool finished; // 0x1B
	private bool autoName; // 0x1C
	private GameObject owner; // 0x20
	private FsmState fsmState; // 0x28
	private Fsm fsm; // 0x30
	private PlayMakerFSM fsmComponent; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC19484 Offset: 0xC19484 VA: 0xC19484
	private string <DisplayName>k__BackingField; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC19494 Offset: 0xC19494 VA: 0xC19494
	private bool <Entered>k__BackingField; // 0x48

	// Properties
	public string Name { get; set; }
	public string DisplayName { get; set; }
	public Fsm Fsm { get; set; }
	public GameObject Owner { get; set; }
	public FsmState State { get; set; }
	public bool Enabled { get; set; }
	public bool IsOpen { get; set; }
	public bool IsAutoNamed { get; set; }
	public bool Entered { get; set; }
	public bool Finished { get; set; }
	public bool Active { get; set; }

	// Methods

	// RVA: 0x208A230 Offset: 0x208A230 VA: 0x208A230 Slot: 26
	public virtual void Init(FsmState state) { }

	// RVA: 0x208A2A8 Offset: 0x208A2A8 VA: 0x208A2A8 Slot: 27
	public virtual void InitEditor(Fsm fsmOwner) { }

	// RVA: 0x208A2AC Offset: 0x208A2AC VA: 0x208A2AC Slot: 28
	public virtual void Reset() { }

	// RVA: 0x208A2B0 Offset: 0x208A2B0 VA: 0x208A2B0 Slot: 29
	public virtual void OnPreprocess() { }

	// RVA: 0x208A2B4 Offset: 0x208A2B4 VA: 0x208A2B4 Slot: 30
	public virtual void Awake() { }

	// RVA: 0x208A2B8 Offset: 0x208A2B8 VA: 0x208A2B8 Slot: 31
	public virtual bool Event(FsmEvent fsmEvent) { }

	// RVA: 0x208A2C0 Offset: 0x208A2C0 VA: 0x208A2C0
	public void Finish() { }

	// RVA: 0x208A318 Offset: 0x208A318 VA: 0x208A318
	public Coroutine StartCoroutine(IEnumerator routine) { }

	// RVA: 0x208A38C Offset: 0x208A38C VA: 0x208A38C
	public void StopCoroutine(Coroutine routine) { }

	// RVA: 0x208A3C4 Offset: 0x208A3C4 VA: 0x208A3C4 Slot: 32
	public virtual void OnEnter() { }

	// RVA: 0x208A3C8 Offset: 0x208A3C8 VA: 0x208A3C8 Slot: 33
	public virtual void OnFixedUpdate() { }

	// RVA: 0x208A3CC Offset: 0x208A3CC VA: 0x208A3CC Slot: 34
	public virtual void OnUpdate() { }

	// RVA: 0x208A3D0 Offset: 0x208A3D0 VA: 0x208A3D0 Slot: 35
	public virtual void OnGUI() { }

	// RVA: 0x208A3D4 Offset: 0x208A3D4 VA: 0x208A3D4 Slot: 36
	public virtual void OnLateUpdate() { }

	// RVA: 0x208A3D8 Offset: 0x208A3D8 VA: 0x208A3D8 Slot: 37
	public virtual void OnExit() { }

	// RVA: 0x208A3DC Offset: 0x208A3DC VA: 0x208A3DC Slot: 38
	public virtual void OnDrawActionGizmos() { }

	// RVA: 0x208A3E0 Offset: 0x208A3E0 VA: 0x208A3E0 Slot: 39
	public virtual void OnDrawActionGizmosSelected() { }

	// RVA: 0x208A3E4 Offset: 0x208A3E4 VA: 0x208A3E4 Slot: 40
	public virtual string AutoName() { }

	// RVA: 0x208A3EC Offset: 0x208A3EC VA: 0x208A3EC Slot: 41
	public virtual void OnActionTargetInvoked(object targetObject) { }

	// RVA: 0x208A3F0 Offset: 0x208A3F0 VA: 0x208A3F0 Slot: 42
	public virtual float GetProgress() { }

	// RVA: 0x208A3F8 Offset: 0x208A3F8 VA: 0x208A3F8 Slot: 43
	public virtual void DoCollisionEnter(Collision collisionInfo) { }

	// RVA: 0x208A3FC Offset: 0x208A3FC VA: 0x208A3FC Slot: 44
	public virtual void DoCollisionStay(Collision collisionInfo) { }

	// RVA: 0x208A400 Offset: 0x208A400 VA: 0x208A400 Slot: 45
	public virtual void DoCollisionExit(Collision collisionInfo) { }

	// RVA: 0x208A404 Offset: 0x208A404 VA: 0x208A404 Slot: 46
	public virtual void DoTriggerEnter(Collider other) { }

	// RVA: 0x208A408 Offset: 0x208A408 VA: 0x208A408 Slot: 47
	public virtual void DoTriggerStay(Collider other) { }

	// RVA: 0x208A40C Offset: 0x208A40C VA: 0x208A40C Slot: 48
	public virtual void DoTriggerExit(Collider other) { }

	// RVA: 0x208A410 Offset: 0x208A410 VA: 0x208A410 Slot: 49
	public virtual void DoParticleCollision(GameObject other) { }

	// RVA: 0x208A414 Offset: 0x208A414 VA: 0x208A414 Slot: 50
	public virtual void DoCollisionEnter2D(Collision2D collisionInfo) { }

	// RVA: 0x208A418 Offset: 0x208A418 VA: 0x208A418 Slot: 51
	public virtual void DoCollisionStay2D(Collision2D collisionInfo) { }

	// RVA: 0x208A41C Offset: 0x208A41C VA: 0x208A41C Slot: 52
	public virtual void DoCollisionExit2D(Collision2D collisionInfo) { }

	// RVA: 0x208A420 Offset: 0x208A420 VA: 0x208A420 Slot: 53
	public virtual void DoTriggerEnter2D(Collider2D other) { }

	// RVA: 0x208A424 Offset: 0x208A424 VA: 0x208A424 Slot: 54
	public virtual void DoTriggerStay2D(Collider2D other) { }

	// RVA: 0x208A428 Offset: 0x208A428 VA: 0x208A428 Slot: 55
	public virtual void DoTriggerExit2D(Collider2D other) { }

	// RVA: 0x208A42C Offset: 0x208A42C VA: 0x208A42C Slot: 56
	public virtual void DoControllerColliderHit(ControllerColliderHit collider) { }

	// RVA: 0x208A430 Offset: 0x208A430 VA: 0x208A430 Slot: 57
	public virtual void DoJointBreak(float force) { }

	// RVA: 0x208A434 Offset: 0x208A434 VA: 0x208A434 Slot: 58
	public virtual void DoJointBreak2D(Joint2D joint) { }

	// RVA: 0x208A438 Offset: 0x208A438 VA: 0x208A438 Slot: 59
	public virtual void DoAnimatorMove() { }

	// RVA: 0x208A43C Offset: 0x208A43C VA: 0x208A43C Slot: 60
	public virtual void DoAnimatorIK(int layerIndex) { }

	// RVA: 0x208A440 Offset: 0x208A440 VA: 0x208A440 Slot: 22
	public void Log(string text) { }

	// RVA: 0x208A4FC Offset: 0x208A4FC VA: 0x208A4FC Slot: 23
	public void LogWarning(string text) { }

	// RVA: 0x208A5B8 Offset: 0x208A5B8 VA: 0x208A5B8 Slot: 24
	public void LogError(string text) { }

	// RVA: 0x208A674 Offset: 0x208A674 VA: 0x208A674 Slot: 61
	public virtual string ErrorCheck() { }

	// RVA: 0x208A6DC Offset: 0x208A6DC VA: 0x208A6DC
	protected static bool TagMatches(FsmString tag, Component other) { }

	// RVA: 0x208A760 Offset: 0x208A760 VA: 0x208A760
	protected static bool TagMatches(FsmString tag, Collision collisionInfo) { }

	// RVA: 0x208A7FC Offset: 0x208A7FC VA: 0x208A7FC
	protected static bool TagMatches(FsmString tag, Collision2D collisionInfo) { }

	// RVA: 0x208A898 Offset: 0x208A898 VA: 0x208A898
	protected static bool TagMatches(FsmString tag, ControllerColliderHit collisionInfo) { }

	// RVA: 0x208A934 Offset: 0x208A934 VA: 0x208A934
	protected static bool TagMatches(FsmString tag, GameObject go) { }

	// RVA: 0x20826F4 Offset: 0x20826F4 VA: 0x20826F4
	public string get_Name() { }

	// RVA: 0x208A99C Offset: 0x208A99C VA: 0x208A99C
	public void set_Name(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A7E4 Offset: 0xC1A7E4 VA: 0xC1A7E4
	// RVA: 0x208A9A4 Offset: 0x208A9A4 VA: 0x208A9A4
	public string get_DisplayName() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A7F4 Offset: 0xC1A7F4 VA: 0xC1A7F4
	// RVA: 0x208A9AC Offset: 0x208A9AC VA: 0x208A9AC
	public void set_DisplayName(string value) { }

	// RVA: 0x208A9B4 Offset: 0x208A9B4 VA: 0x208A9B4
	public Fsm get_Fsm() { }

	// RVA: 0x208A9BC Offset: 0x208A9BC VA: 0x208A9BC
	public void set_Fsm(Fsm value) { }

	// RVA: 0x208A9C4 Offset: 0x208A9C4 VA: 0x208A9C4
	public GameObject get_Owner() { }

	// RVA: 0x208A9CC Offset: 0x208A9CC VA: 0x208A9CC
	public void set_Owner(GameObject value) { }

	// RVA: 0x208A310 Offset: 0x208A310 VA: 0x208A310
	public FsmState get_State() { }

	// RVA: 0x208A9D4 Offset: 0x208A9D4 VA: 0x208A9D4
	public void set_State(FsmState value) { }

	// RVA: 0x2087FA0 Offset: 0x2087FA0 VA: 0x2087FA0 Slot: 4
	public bool get_Enabled() { }

	// RVA: 0x208A9DC Offset: 0x208A9DC VA: 0x208A9DC Slot: 5
	public void set_Enabled(bool value) { }

	// RVA: 0x208A9E8 Offset: 0x208A9E8 VA: 0x208A9E8
	public bool get_IsOpen() { }

	// RVA: 0x208A9F0 Offset: 0x208A9F0 VA: 0x208A9F0
	public void set_IsOpen(bool value) { }

	// RVA: 0x208A9FC Offset: 0x208A9FC VA: 0x208A9FC
	public bool get_IsAutoNamed() { }

	// RVA: 0x208AA04 Offset: 0x208AA04 VA: 0x208AA04
	public void set_IsAutoNamed(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A804 Offset: 0xC1A804 VA: 0xC1A804
	// RVA: 0x2089C28 Offset: 0x2089C28 VA: 0x2089C28
	public bool get_Entered() { }

	[CompilerGeneratedAttribute] // RVA: 0xC1A814 Offset: 0xC1A814 VA: 0xC1A814
	// RVA: 0x2087FC8 Offset: 0x2087FC8 VA: 0x2087FC8
	public void set_Entered(bool value) { }

	// RVA: 0x2087FD4 Offset: 0x2087FD4 VA: 0x2087FD4
	public bool get_Finished() { }

	// RVA: 0x2087FA8 Offset: 0x2087FA8 VA: 0x2087FA8
	public void set_Finished(bool value) { }

	// RVA: 0x208AA10 Offset: 0x208AA10 VA: 0x208AA10
	public bool get_Active() { }

	// RVA: 0x2087FBC Offset: 0x2087FBC VA: 0x2087FBC
	public void set_Active(bool value) { }

	// RVA: 0x208AA18 Offset: 0x208AA18 VA: 0x208AA18
	protected void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmTransition : IEquatable<FsmTransition> // TypeDefIndex: 3379
{
	// Fields
	[SerializeField] // RVA: 0xC194A4 Offset: 0xC194A4 VA: 0xC194A4
	private FsmEvent fsmEvent; // 0x10
	[SerializeField] // RVA: 0xC194B4 Offset: 0xC194B4 VA: 0xC194B4
	private string toState; // 0x18
	[SerializeField] // RVA: 0xC194C4 Offset: 0xC194C4 VA: 0xC194C4
	private FsmTransition.CustomLinkStyle linkStyle; // 0x20
	[SerializeField] // RVA: 0xC194D4 Offset: 0xC194D4 VA: 0xC194D4
	private FsmTransition.CustomLinkConstraint linkConstraint; // 0x21
	[SerializeField] // RVA: 0xC194E4 Offset: 0xC194E4 VA: 0xC194E4
	private byte colorIndex; // 0x22
	private FsmState toFsmState; // 0x28

	// Properties
	public FsmEvent FsmEvent { get; set; }
	public string ToState { get; set; }
	public FsmState ToFsmState { get; set; }
	public FsmTransition.CustomLinkStyle LinkStyle { get; set; }
	public FsmTransition.CustomLinkConstraint LinkConstraint { get; set; }
	public int ColorIndex { get; set; }
	public string EventName { get; }

	// Methods

	// RVA: 0x208B8F4 Offset: 0x208B8F4 VA: 0x208B8F4
	public void .ctor() { }

	// RVA: 0x2087890 Offset: 0x2087890 VA: 0x2087890
	public void .ctor(FsmTransition source) { }

	// RVA: 0x208A228 Offset: 0x208A228 VA: 0x208A228
	public FsmEvent get_FsmEvent() { }

	// RVA: 0x208B8FC Offset: 0x208B8FC VA: 0x208B8FC
	public void set_FsmEvent(FsmEvent value) { }

	// RVA: 0x208B904 Offset: 0x208B904 VA: 0x208B904
	public string get_ToState() { }

	// RVA: 0x208B90C Offset: 0x208B90C VA: 0x208B90C
	public void set_ToState(string value) { }

	// RVA: 0x208B914 Offset: 0x208B914 VA: 0x208B914
	public FsmState get_ToFsmState() { }

	// RVA: 0x208B91C Offset: 0x208B91C VA: 0x208B91C
	public void set_ToFsmState(FsmState value) { }

	// RVA: 0x208B924 Offset: 0x208B924 VA: 0x208B924
	public FsmTransition.CustomLinkStyle get_LinkStyle() { }

	// RVA: 0x208B92C Offset: 0x208B92C VA: 0x208B92C
	public void set_LinkStyle(FsmTransition.CustomLinkStyle value) { }

	// RVA: 0x208B934 Offset: 0x208B934 VA: 0x208B934
	public FsmTransition.CustomLinkConstraint get_LinkConstraint() { }

	// RVA: 0x208B93C Offset: 0x208B93C VA: 0x208B93C
	public void set_LinkConstraint(FsmTransition.CustomLinkConstraint value) { }

	// RVA: 0x208B944 Offset: 0x208B944 VA: 0x208B944
	public int get_ColorIndex() { }

	// RVA: 0x208B94C Offset: 0x208B94C VA: 0x208B94C
	public void set_ColorIndex(int value) { }

	// RVA: 0x208BA08 Offset: 0x208BA08 VA: 0x208BA08
	public string get_EventName() { }

	// RVA: 0x208BABC Offset: 0x208BABC VA: 0x208BABC Slot: 4
	public bool Equals(FsmTransition other) { }
}

// Namespace: 
public enum FsmTransition.CustomLinkStyle // TypeDefIndex: 3380
{
	// Fields
	public byte value__; // 0x0
	public const FsmTransition.CustomLinkStyle Default = 0;
	public const FsmTransition.CustomLinkStyle Bezier = 1;
	public const FsmTransition.CustomLinkStyle Circuit = 2;
	public const FsmTransition.CustomLinkStyle Direct = 3;
}

// Namespace: 
public enum FsmTransition.CustomLinkConstraint // TypeDefIndex: 3381
{
	// Fields
	public byte value__; // 0x0
	public const FsmTransition.CustomLinkConstraint None = 0;
	public const FsmTransition.CustomLinkConstraint LockLeft = 1;
	public const FsmTransition.CustomLinkConstraint LockRight = 2;
}

// Namespace: HutongGames.PlayMaker
public static class FsmUtility // TypeDefIndex: 3382
{
	// Fields
	private static UTF8Encoding encoding; // 0x0

	// Properties
	public static UTF8Encoding Encoding { get; }

	// Methods

	// RVA: 0x208BBB8 Offset: 0x208BBB8 VA: 0x208BBB8
	public static UTF8Encoding get_Encoding() { }

	[ObsoleteAttribute] // RVA: 0xC1A824 Offset: 0xC1A824 VA: 0xC1A824
	// RVA: 0x208BC38 Offset: 0x208BC38 VA: 0x208BC38
	public static VariableType GetVariableType(INamedVariable variable) { }

	// RVA: 0x208C064 Offset: 0x208C064 VA: 0x208C064
	public static Type GetVariableRealType(VariableType variableType) { }

	// RVA: 0x208C29C Offset: 0x208C29C VA: 0x208C29C
	public static object GetEnum(Type enumType, int enumValue) { }

	// RVA: 0x208C338 Offset: 0x208C338 VA: 0x208C338
	public static ICollection<byte> FsmEventToByteArray(FsmEvent fsmEvent) { }

	// RVA: 0x208C450 Offset: 0x208C450 VA: 0x208C450
	public static ICollection<byte> FsmFloatToByteArray(FsmFloat fsmFloat) { }

	// RVA: 0x208C730 Offset: 0x208C730 VA: 0x208C730
	public static ICollection<byte> FsmIntToByteArray(FsmInt fsmInt) { }

	// RVA: 0x208C940 Offset: 0x208C940 VA: 0x208C940
	public static ICollection<byte> FsmBoolToByteArray(FsmBool fsmBool) { }

	// RVA: 0x208CA90 Offset: 0x208CA90 VA: 0x208CA90
	public static ICollection<byte> FsmVector2ToByteArray(FsmVector2 fsmVector2) { }

	// RVA: 0x208CCC0 Offset: 0x208CCC0 VA: 0x208CCC0
	public static ICollection<byte> FsmVector3ToByteArray(FsmVector3 fsmVector3) { }

	// RVA: 0x208CF30 Offset: 0x208CF30 VA: 0x208CF30
	public static ICollection<byte> FsmRectToByteArray(FsmRect fsmRect) { }

	// RVA: 0x208D1A8 Offset: 0x208D1A8 VA: 0x208D1A8
	public static ICollection<byte> FsmQuaternionToByteArray(FsmQuaternion fsmQuaternion) { }

	// RVA: 0x208D410 Offset: 0x208D410 VA: 0x208D410
	public static ICollection<byte> FsmColorToByteArray(FsmColor fsmColor) { }

	// RVA: 0x208D540 Offset: 0x208D540 VA: 0x208D540
	public static ICollection<byte> ColorToByteArray(Color color) { }

	// RVA: 0x208CBE0 Offset: 0x208CBE0 VA: 0x208CBE0
	public static ICollection<byte> Vector2ToByteArray(Vector2 vector2) { }

	// RVA: 0x208CE10 Offset: 0x208CE10 VA: 0x208CE10
	public static ICollection<byte> Vector3ToByteArray(Vector3 vector3) { }

	// RVA: 0x208D674 Offset: 0x208D674 VA: 0x208D674
	public static ICollection<byte> Vector4ToByteArray(Vector4 vector4) { }

	// RVA: 0x208D064 Offset: 0x208D064 VA: 0x208D064
	public static ICollection<byte> RectToByteArray(Rect rect) { }

	// RVA: 0x208D2DC Offset: 0x208D2DC VA: 0x208D2DC
	public static ICollection<byte> QuaternionToByteArray(Quaternion quaternion) { }

	// RVA: 0x208C3DC Offset: 0x208C3DC VA: 0x208C3DC
	public static byte[] StringToByteArray(string str) { }

	// RVA: 0x208D7C8 Offset: 0x208D7C8 VA: 0x208D7C8
	public static string ByteArrayToString(byte[] bytes) { }

	// RVA: 0x208D858 Offset: 0x208D858 VA: 0x208D858
	public static string ByteArrayToString(byte[] bytes, int startIndex, int count) { }

	// RVA: 0x208D914 Offset: 0x208D914 VA: 0x208D914
	public static FsmEvent ByteArrayToFsmEvent(byte[] bytes, int startIndex, int size) { }

	// RVA: 0x208D9E4 Offset: 0x208D9E4 VA: 0x208D9E4
	public static FsmFloat ByteArrayToFsmFloat(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0x208DC84 Offset: 0x208DC84 VA: 0x208DC84
	public static FsmInt ByteArrayToFsmInt(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0x208DEA0 Offset: 0x208DEA0 VA: 0x208DEA0
	public static FsmBool ByteArrayToFsmBool(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0x208E00C Offset: 0x208E00C VA: 0x208E00C
	public static Color ByteArrayToColor(byte[] bytes, int startIndex) { }

	// RVA: 0x208E0A0 Offset: 0x208E0A0 VA: 0x208E0A0
	public static Vector2 ByteArrayToVector2(byte[] bytes, int startIndex) { }

	// RVA: 0x208E0F8 Offset: 0x208E0F8 VA: 0x208E0F8
	public static FsmVector2 ByteArrayToFsmVector2(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0x208E280 Offset: 0x208E280 VA: 0x208E280
	public static Vector3 ByteArrayToVector3(byte[] bytes, int startIndex) { }

	// RVA: 0x208E2FC Offset: 0x208E2FC VA: 0x208E2FC
	public static FsmVector3 ByteArrayToFsmVector3(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0x208E498 Offset: 0x208E498 VA: 0x208E498
	public static FsmRect ByteArrayToFsmRect(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0x208E6BC Offset: 0x208E6BC VA: 0x208E6BC
	public static FsmQuaternion ByteArrayToFsmQuaternion(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0x208E8E0 Offset: 0x208E8E0 VA: 0x208E8E0
	public static FsmColor ByteArrayToFsmColor(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0x208EA6C Offset: 0x208EA6C VA: 0x208EA6C
	public static Vector4 ByteArrayToVector4(byte[] bytes, int startIndex) { }

	// RVA: 0x208E628 Offset: 0x208E628 VA: 0x208E628
	public static Rect ByteArrayToRect(byte[] bytes, int startIndex) { }

	// RVA: 0x208E84C Offset: 0x208E84C VA: 0x208E84C
	public static Quaternion ByteArrayToQuaternion(byte[] bytes, int startIndex) { }

	// RVA: 0x208EB00 Offset: 0x208EB00 VA: 0x208EB00
	private static byte[] ReadToEnd(Stream stream) { }

	// RVA: 0x20824FC Offset: 0x20824FC VA: 0x20824FC
	public static string StripNamespace(string name) { }

	// RVA: 0x2082B20 Offset: 0x2082B20 VA: 0x2082B20
	public static string GetPath(FsmState state) { }

	// RVA: 0x208ED40 Offset: 0x208ED40 VA: 0x208ED40
	public static string GetPath(FsmState state, FsmStateAction action) { }

	// RVA: 0x208EE48 Offset: 0x208EE48 VA: 0x208EE48
	public static string GetPath(FsmState state, FsmStateAction action, string parameter) { }

	// RVA: 0x208EEE4 Offset: 0x208EEE4 VA: 0x208EEE4
	public static string GetFullFsmLabel(Fsm fsm) { }

	// RVA: 0x208F10C Offset: 0x208F10C VA: 0x208F10C
	public static string GetFullFsmLabel(PlayMakerFSM fsm) { }

	// RVA: 0x208F0A8 Offset: 0x208F0A8 VA: 0x208F0A8
	public static string GetFsmLabel(Fsm fsm) { }

	// RVA: 0x208F24C Offset: 0x208F24C VA: 0x208F24C
	public static Object GetOwner(Fsm fsm) { }

	// RVA: 0x208F2F8 Offset: 0x208F2F8 VA: 0x208F2F8
	public static string GetFullPath(Fsm fsm) { }

	// RVA: 0x208F51C Offset: 0x208F51C VA: 0x208F51C
	public static string GetFullPath(GameObject go, string seperator = "/") { }
}

// Namespace: 
public static class FsmUtility.BitConverter // TypeDefIndex: 3383
{
	// Methods

	// RVA: 0x208DDEC Offset: 0x208DDEC VA: 0x208DDEC
	public static int ToInt32(byte[] value, int startIndex) { }

	// RVA: 0x208DB58 Offset: 0x208DB58 VA: 0x208DB58
	public static float ToSingle(byte[] value, int startIndex) { }

	// RVA: 0x208DC0C Offset: 0x208DC0C VA: 0x208DC0C
	public static bool ToBoolean(byte[] value, int startIndex) { }

	// RVA: 0x208C66C Offset: 0x208C66C VA: 0x208C66C
	public static byte[] GetBytes(bool value) { }

	// RVA: 0x208C87C Offset: 0x208C87C VA: 0x208C87C
	public static byte[] GetBytes(int value) { }

	// RVA: 0x208C59C Offset: 0x208C59C VA: 0x208C59C
	public static byte[] GetBytes(float value) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmVariables // TypeDefIndex: 3384
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC194F4 Offset: 0xC194F4 VA: 0xC194F4
	private static bool <GlobalVariablesSynced>k__BackingField; // 0x0
	[SerializeField] // RVA: 0xC19504 Offset: 0xC19504 VA: 0xC19504
	private FsmFloat[] floatVariables; // 0x10
	[SerializeField] // RVA: 0xC19514 Offset: 0xC19514 VA: 0xC19514
	private FsmInt[] intVariables; // 0x18
	[SerializeField] // RVA: 0xC19524 Offset: 0xC19524 VA: 0xC19524
	private FsmBool[] boolVariables; // 0x20
	[SerializeField] // RVA: 0xC19534 Offset: 0xC19534 VA: 0xC19534
	private FsmString[] stringVariables; // 0x28
	[SerializeField] // RVA: 0xC19544 Offset: 0xC19544 VA: 0xC19544
	private FsmVector2[] vector2Variables; // 0x30
	[SerializeField] // RVA: 0xC19554 Offset: 0xC19554 VA: 0xC19554
	private FsmVector3[] vector3Variables; // 0x38
	[SerializeField] // RVA: 0xC19564 Offset: 0xC19564 VA: 0xC19564
	private FsmColor[] colorVariables; // 0x40
	[SerializeField] // RVA: 0xC19574 Offset: 0xC19574 VA: 0xC19574
	private FsmRect[] rectVariables; // 0x48
	[SerializeField] // RVA: 0xC19584 Offset: 0xC19584 VA: 0xC19584
	private FsmQuaternion[] quaternionVariables; // 0x50
	[SerializeField] // RVA: 0xC19594 Offset: 0xC19594 VA: 0xC19594
	private FsmGameObject[] gameObjectVariables; // 0x58
	[SerializeField] // RVA: 0xC195A4 Offset: 0xC195A4 VA: 0xC195A4
	private FsmObject[] objectVariables; // 0x60
	[SerializeField] // RVA: 0xC195B4 Offset: 0xC195B4 VA: 0xC195B4
	private FsmMaterial[] materialVariables; // 0x68
	[SerializeField] // RVA: 0xC195C4 Offset: 0xC195C4 VA: 0xC195C4
	private FsmTexture[] textureVariables; // 0x70
	[SerializeField] // RVA: 0xC195D4 Offset: 0xC195D4 VA: 0xC195D4
	private FsmArray[] arrayVariables; // 0x78
	[SerializeField] // RVA: 0xC195E4 Offset: 0xC195E4 VA: 0xC195E4
	private FsmEnum[] enumVariables; // 0x80
	[SerializeField] // RVA: 0xC195F4 Offset: 0xC195F4 VA: 0xC195F4
	private string[] categories; // 0x88
	[SerializeField] // RVA: 0xC19604 Offset: 0xC19604 VA: 0xC19604
	private int[] variableCategoryIDs; // 0x90

	// Properties
	public static PlayMakerGlobals GlobalsComponent { get; }
	public static FsmVariables GlobalVariables { get; }
	public static bool GlobalVariablesSynced { get; set; }
	public string[] Categories { get; set; }
	public int[] CategoryIDs { get; set; }
	public FsmFloat[] FloatVariables { get; set; }
	public FsmInt[] IntVariables { get; set; }
	public FsmBool[] BoolVariables { get; set; }
