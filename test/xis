	[CompilerGeneratedAttribute] // RVA: 0xC854BC Offset: 0xC854BC VA: 0xC854BC
	private float <RealStartTime>k__BackingField; // 0x14
	[CompilerGeneratedAttribute] // RVA: 0xC854CC Offset: 0xC854CC VA: 0xC854CC
	private int <loopCount>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC854DC Offset: 0xC854DC VA: 0xC854DC
	private int <maxLoopCount>k__BackingField; // 0x1C
	private bool active; // 0x20
	private bool finished; // 0x21
	private FsmStateAction activeAction; // 0x28
	private int activeActionIndex; // 0x30
	private Fsm fsm; // 0x38
	[SerializeField] // RVA: 0xC854EC Offset: 0xC854EC VA: 0xC854EC
	private string name; // 0x40
	[SerializeField] // RVA: 0xC854FC Offset: 0xC854FC VA: 0xC854FC
	[TextAreaAttribute] // RVA: 0xC854FC Offset: 0xC854FC VA: 0xC854FC
	private string description; // 0x48
	[SerializeField] // RVA: 0xC8553C Offset: 0xC8553C VA: 0xC8553C
	private byte colorIndex; // 0x50
	[SerializeField] // RVA: 0xC8554C Offset: 0xC8554C VA: 0xC8554C
	private Rect position; // 0x54
	[SerializeField] // RVA: 0xC8555C Offset: 0xC8555C VA: 0xC8555C
	private bool isBreakpoint; // 0x64
	[SerializeField] // RVA: 0xC8556C Offset: 0xC8556C VA: 0xC8556C
	private bool isSequence; // 0x65
	[SerializeField] // RVA: 0xC8557C Offset: 0xC8557C VA: 0xC8557C
	private bool hideUnused; // 0x66
	[SerializeField] // RVA: 0xC8558C Offset: 0xC8558C VA: 0xC8558C
	private FsmTransition[] transitions; // 0x68
	private FsmStateAction[] actions; // 0x70
	[SerializeField] // RVA: 0xC8559C Offset: 0xC8559C VA: 0xC8559C
	private ActionData actionData; // 0x78
	private List<FsmStateAction> activeActions; // 0x80
	private List<FsmStateAction> _finishedActions; // 0x88

	// Properties
	public float StateTime { get; set; }
	public float RealStartTime { get; set; }
	public int loopCount { get; set; }
	public int maxLoopCount { get; set; }
	public List<FsmStateAction> ActiveActions { get; }
	private List<FsmStateAction> finishedActions { get; }
	public bool Active { get; }
	public FsmStateAction ActiveAction { get; }
	public bool IsInitialized { get; }
	public Fsm Fsm { get; set; }
	public string Name { get; set; }
	public bool IsSequence { get; set; }
	public int ActiveActionIndex { get; }
	public Rect Position { get; set; }
	public bool IsBreakpoint { get; set; }
	public bool HideUnused { get; set; }
	public FsmStateAction[] Actions { get; set; }
	public bool ActionsLoaded { get; }
	public ActionData ActionData { get; }
	public FsmTransition[] Transitions { get; set; }
	public string Description { get; set; }
	public int ColorIndex { get; set; }

	// Methods

	[CompilerGeneratedAttribute] // RVA: 0xC8688C Offset: 0xC8688C VA: 0xC8688C
	// RVA: 0xFAF488 Offset: 0xFAF488 VA: 0xFAF488
	public float get_StateTime() { }

	[CompilerGeneratedAttribute] // RVA: 0xC8689C Offset: 0xC8689C VA: 0xC8689C
	// RVA: 0xFAF490 Offset: 0xFAF490 VA: 0xFAF490
	private void set_StateTime(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC868AC Offset: 0xC868AC VA: 0xC868AC
	// RVA: 0xFA9FA4 Offset: 0xFA9FA4 VA: 0xFA9FA4
	public float get_RealStartTime() { }

	[CompilerGeneratedAttribute] // RVA: 0xC868BC Offset: 0xC868BC VA: 0xC868BC
	// RVA: 0xFAF498 Offset: 0xFAF498 VA: 0xFAF498
	private void set_RealStartTime(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC868CC Offset: 0xC868CC VA: 0xC868CC
	// RVA: 0xFAF4A0 Offset: 0xFAF4A0 VA: 0xFAF4A0
	public int get_loopCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xC868DC Offset: 0xC868DC VA: 0xC868DC
	// RVA: 0xFAF4A8 Offset: 0xFAF4A8 VA: 0xFAF4A8
	private void set_loopCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC868EC Offset: 0xC868EC VA: 0xC868EC
	// RVA: 0xFAF4B0 Offset: 0xFAF4B0 VA: 0xFAF4B0
	public int get_maxLoopCount() { }

	[CompilerGeneratedAttribute] // RVA: 0xC868FC Offset: 0xC868FC VA: 0xC868FC
	// RVA: 0xFAF4B8 Offset: 0xFAF4B8 VA: 0xFAF4B8
	private void set_maxLoopCount(int value) { }

	// RVA: 0xFAF4C0 Offset: 0xFAF4C0 VA: 0xFAF4C0
	public static string GetFullStateLabel(FsmState state) { }

	// RVA: 0xFAF59C Offset: 0xFAF59C VA: 0xFAF59C
	public void .ctor(Fsm fsm) { }

	// RVA: 0xFAF630 Offset: 0xFAF630 VA: 0xFAF630
	public void .ctor(FsmState source) { }

	// RVA: 0xFAF9C8 Offset: 0xFAF9C8 VA: 0xFAF9C8
	public void CopyActionData(FsmState state) { }

	// RVA: 0xFAFA14 Offset: 0xFAFA14 VA: 0xFAFA14
	public void LoadActions() { }

	// RVA: 0xFAFA54 Offset: 0xFAFA54 VA: 0xFAFA54
	public void SaveActions() { }

	// RVA: 0xFAFAB0 Offset: 0xFAFAB0 VA: 0xFAFAB0
	public List<FsmStateAction> get_ActiveActions() { }

	// RVA: 0xFAFB24 Offset: 0xFAFB24 VA: 0xFAFB24
	private List<FsmStateAction> get_finishedActions() { }

	// RVA: 0xFAFB98 Offset: 0xFAFB98 VA: 0xFAFB98
	public void OnEnter() { }

	// RVA: 0xFAFC78 Offset: 0xFAFC78 VA: 0xFAFC78
	private bool ActivateActions(int startIndex) { }

	// RVA: 0xFB0064 Offset: 0xFB0064 VA: 0xFB0064
	public bool OnEvent(FsmEvent fsmEvent) { }

	// RVA: 0xFB01A4 Offset: 0xFB01A4 VA: 0xFB01A4
	public void OnFixedUpdate() { }

	// RVA: 0xFB02A4 Offset: 0xFB02A4 VA: 0xFB02A4
	public void OnUpdate() { }

	// RVA: 0xFB03E0 Offset: 0xFB03E0 VA: 0xFB03E0
	public void OnLateUpdate() { }

	// RVA: 0xFB04E0 Offset: 0xFB04E0 VA: 0xFB04E0
	public bool OnAnimatorMove() { }

	// RVA: 0xFB0714 Offset: 0xFB0714 VA: 0xFB0714
	public bool OnAnimatorIK(int layerIndex) { }

	// RVA: 0xFB0838 Offset: 0xFB0838 VA: 0xFB0838
	public bool OnCollisionEnter(Collision collisionInfo) { }

	// RVA: 0xFB095C Offset: 0xFB095C VA: 0xFB095C
	public bool OnCollisionStay(Collision collisionInfo) { }

	// RVA: 0xFB0A80 Offset: 0xFB0A80 VA: 0xFB0A80
	public bool OnCollisionExit(Collision collisionInfo) { }

	// RVA: 0xFB0BA4 Offset: 0xFB0BA4 VA: 0xFB0BA4
	public bool OnTriggerEnter(Collider other) { }

	// RVA: 0xFB0CC8 Offset: 0xFB0CC8 VA: 0xFB0CC8
	public bool OnTriggerStay(Collider other) { }

	// RVA: 0xFB0DEC Offset: 0xFB0DEC VA: 0xFB0DEC
	public bool OnTriggerExit(Collider other) { }

	// RVA: 0xFB0F10 Offset: 0xFB0F10 VA: 0xFB0F10
	public bool OnParticleCollision(GameObject other) { }

	// RVA: 0xFB1034 Offset: 0xFB1034 VA: 0xFB1034
	public bool OnCollisionEnter2D(Collision2D collisionInfo) { }

	// RVA: 0xFB1158 Offset: 0xFB1158 VA: 0xFB1158
	public bool OnCollisionStay2D(Collision2D collisionInfo) { }

	// RVA: 0xFB127C Offset: 0xFB127C VA: 0xFB127C
	public bool OnCollisionExit2D(Collision2D collisionInfo) { }

	// RVA: 0xFB13A0 Offset: 0xFB13A0 VA: 0xFB13A0
	public bool OnTriggerEnter2D(Collider2D other) { }

	// RVA: 0xFB14C4 Offset: 0xFB14C4 VA: 0xFB14C4
	public bool OnTriggerStay2D(Collider2D other) { }

	// RVA: 0xFB15E8 Offset: 0xFB15E8 VA: 0xFB15E8
	public bool OnTriggerExit2D(Collider2D other) { }

	// RVA: 0xFB170C Offset: 0xFB170C VA: 0xFB170C
	public bool OnControllerColliderHit(ControllerColliderHit collider) { }

	// RVA: 0xFB1830 Offset: 0xFB1830 VA: 0xFB1830
	public bool OnJointBreak(float force) { }

	// RVA: 0xFB195C Offset: 0xFB195C VA: 0xFB195C
	public bool OnJointBreak2D(Joint2D joint) { }

	// RVA: 0xFB1A80 Offset: 0xFB1A80 VA: 0xFB1A80
	public void OnGUI() { }

	// RVA: 0xFB1B80 Offset: 0xFB1B80 VA: 0xFB1B80
	public void FinishAction(FsmStateAction action) { }

	// RVA: 0xFB05FC Offset: 0xFB05FC VA: 0xFB05FC
	private void RemoveFinishedActions() { }

	// RVA: 0xFAFDFC Offset: 0xFAFDFC VA: 0xFAFDFC
	private void CheckAllActionsFinished() { }

	// RVA: 0xFB1BF4 Offset: 0xFB1BF4 VA: 0xFB1BF4
	public void OnExit() { }

	// RVA: 0xFB1CB8 Offset: 0xFB1CB8 VA: 0xFB1CB8
	public void ResetLoopCount() { }

	// RVA: 0xFB1CC0 Offset: 0xFB1CC0 VA: 0xFB1CC0
	public FsmTransition GetTransition(int transitionIndex) { }

	// RVA: 0xFB1D4C Offset: 0xFB1D4C VA: 0xFB1D4C
	public int GetTransitionIndex(FsmTransition transition) { }

	// RVA: 0xFB1DF0 Offset: 0xFB1DF0 VA: 0xFB1DF0
	public bool get_Active() { }

	// RVA: 0xFA7668 Offset: 0xFA7668 VA: 0xFA7668
	public FsmStateAction get_ActiveAction() { }

	// RVA: 0xFB1DF8 Offset: 0xFB1DF8 VA: 0xFB1DF8
	public bool get_IsInitialized() { }

	// RVA: 0xFA9FB4 Offset: 0xFA9FB4 VA: 0xFA9FB4
	public Fsm get_Fsm() { }

	// RVA: 0xFB1E08 Offset: 0xFB1E08 VA: 0xFB1E08
	public void set_Fsm(Fsm value) { }

	// RVA: 0xFA6FA8 Offset: 0xFA6FA8 VA: 0xFA6FA8 Slot: 4
	public string get_Name() { }

	// RVA: 0xFB1ECC Offset: 0xFB1ECC VA: 0xFB1ECC
	public void set_Name(string value) { }

	// RVA: 0xFB1ED4 Offset: 0xFB1ED4 VA: 0xFB1ED4
	public bool get_IsSequence() { }

	// RVA: 0xFB1EDC Offset: 0xFB1EDC VA: 0xFB1EDC
	public void set_IsSequence(bool value) { }

	// RVA: 0xFB1EE8 Offset: 0xFB1EE8 VA: 0xFB1EE8
	public int get_ActiveActionIndex() { }

	// RVA: 0xFB1EF0 Offset: 0xFB1EF0 VA: 0xFB1EF0
	public Rect get_Position() { }

	// RVA: 0xFB1EFC Offset: 0xFB1EFC VA: 0xFB1EFC
	public void set_Position(Rect value) { }

	// RVA: 0xFB1F70 Offset: 0xFB1F70 VA: 0xFB1F70
	public bool get_IsBreakpoint() { }

	// RVA: 0xFB1F78 Offset: 0xFB1F78 VA: 0xFB1F78
	public void set_IsBreakpoint(bool value) { }

	// RVA: 0xFB1F84 Offset: 0xFB1F84 VA: 0xFB1F84
	public bool get_HideUnused() { }

	// RVA: 0xFB1F8C Offset: 0xFB1F8C VA: 0xFB1F8C
	public void set_HideUnused(bool value) { }

	// RVA: 0xFAFF44 Offset: 0xFAFF44 VA: 0xFAFF44
	public FsmStateAction[] get_Actions() { }

	// RVA: 0xFB1F98 Offset: 0xFB1F98 VA: 0xFB1F98
	public void set_Actions(FsmStateAction[] value) { }

	// RVA: 0xFB1FA0 Offset: 0xFB1FA0 VA: 0xFB1FA0
	public bool get_ActionsLoaded() { }

	// RVA: 0xFB1FB0 Offset: 0xFB1FB0 VA: 0xFB1FB0
	public ActionData get_ActionData() { }

	// RVA: 0xFAF910 Offset: 0xFAF910 VA: 0xFAF910
	public FsmTransition[] get_Transitions() { }

	// RVA: 0xFB1FB8 Offset: 0xFB1FB8 VA: 0xFB1FB8
	public void set_Transitions(FsmTransition[] value) { }

	// RVA: 0xFB1FC0 Offset: 0xFB1FC0 VA: 0xFB1FC0
	public string get_Description() { }

	// RVA: 0xFB2018 Offset: 0xFB2018 VA: 0xFB2018
	public void set_Description(string value) { }

	// RVA: 0xFB2020 Offset: 0xFB2020 VA: 0xFB2020
	public int get_ColorIndex() { }

	// RVA: 0xFB2028 Offset: 0xFB2028 VA: 0xFB2028
	public void set_ColorIndex(int value) { }

	// RVA: 0xFB2030 Offset: 0xFB2030 VA: 0xFB2030
	public static int GetStateIndex(FsmState state) { }

	// RVA: 0xFB2184 Offset: 0xFB2184 VA: 0xFB2184
	public bool HasFinishedTransition() { }
}

// Namespace: HutongGames.PlayMaker
public abstract class FsmStateAction : IFsmStateAction // TypeDefIndex: 3378
{
	// Fields
	public static Color ActiveHighlightColor; // 0x0
	public static bool Repaint; // 0x10
	private string name; // 0x10
	private bool enabled; // 0x18
	private bool isOpen; // 0x19
	private bool active; // 0x1A
	private bool finished; // 0x1B
	private bool autoName; // 0x1C
	private GameObject owner; // 0x20
	private FsmState fsmState; // 0x28
	private Fsm fsm; // 0x30
	private PlayMakerFSM fsmComponent; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0xC855AC Offset: 0xC855AC VA: 0xC855AC
	private string <DisplayName>k__BackingField; // 0x40
	[CompilerGeneratedAttribute] // RVA: 0xC855BC Offset: 0xC855BC VA: 0xC855BC
	private bool <Entered>k__BackingField; // 0x48

	// Properties
	public string Name { get; set; }
	public string DisplayName { get; set; }
	public Fsm Fsm { get; set; }
	public GameObject Owner { get; set; }
	public FsmState State { get; set; }
	public bool Enabled { get; set; }
	public bool IsOpen { get; set; }
	public bool IsAutoNamed { get; set; }
	public bool Entered { get; set; }
	public bool Finished { get; set; }
	public bool Active { get; set; }

	// Methods

	// RVA: 0xFB22B8 Offset: 0xFB22B8 VA: 0xFB22B8 Slot: 26
	public virtual void Init(FsmState state) { }

	// RVA: 0xFB2330 Offset: 0xFB2330 VA: 0xFB2330 Slot: 27
	public virtual void InitEditor(Fsm fsmOwner) { }

	// RVA: 0xFB2334 Offset: 0xFB2334 VA: 0xFB2334 Slot: 28
	public virtual void Reset() { }

	// RVA: 0xFB2338 Offset: 0xFB2338 VA: 0xFB2338 Slot: 29
	public virtual void OnPreprocess() { }

	// RVA: 0xFB233C Offset: 0xFB233C VA: 0xFB233C Slot: 30
	public virtual void Awake() { }

	// RVA: 0xFB2340 Offset: 0xFB2340 VA: 0xFB2340 Slot: 31
	public virtual bool Event(FsmEvent fsmEvent) { }

	// RVA: 0xFB2348 Offset: 0xFB2348 VA: 0xFB2348
	public void Finish() { }

	// RVA: 0xFB23A0 Offset: 0xFB23A0 VA: 0xFB23A0
	public Coroutine StartCoroutine(IEnumerator routine) { }

	// RVA: 0xFB2414 Offset: 0xFB2414 VA: 0xFB2414
	public void StopCoroutine(Coroutine routine) { }

	// RVA: 0xFB244C Offset: 0xFB244C VA: 0xFB244C Slot: 32
	public virtual void OnEnter() { }

	// RVA: 0xFB2450 Offset: 0xFB2450 VA: 0xFB2450 Slot: 33
	public virtual void OnFixedUpdate() { }

	// RVA: 0xFB2454 Offset: 0xFB2454 VA: 0xFB2454 Slot: 34
	public virtual void OnUpdate() { }

	// RVA: 0xFB2458 Offset: 0xFB2458 VA: 0xFB2458 Slot: 35
	public virtual void OnGUI() { }

	// RVA: 0xFB245C Offset: 0xFB245C VA: 0xFB245C Slot: 36
	public virtual void OnLateUpdate() { }

	// RVA: 0xFB2460 Offset: 0xFB2460 VA: 0xFB2460 Slot: 37
	public virtual void OnExit() { }

	// RVA: 0xFB2464 Offset: 0xFB2464 VA: 0xFB2464 Slot: 38
	public virtual void OnDrawActionGizmos() { }

	// RVA: 0xFB2468 Offset: 0xFB2468 VA: 0xFB2468 Slot: 39
	public virtual void OnDrawActionGizmosSelected() { }

	// RVA: 0xFB246C Offset: 0xFB246C VA: 0xFB246C Slot: 40
	public virtual string AutoName() { }

	// RVA: 0xFB2474 Offset: 0xFB2474 VA: 0xFB2474 Slot: 41
	public virtual void OnActionTargetInvoked(object targetObject) { }

	// RVA: 0xFB2478 Offset: 0xFB2478 VA: 0xFB2478 Slot: 42
	public virtual float GetProgress() { }

	// RVA: 0xFB2480 Offset: 0xFB2480 VA: 0xFB2480 Slot: 43
	public virtual void DoCollisionEnter(Collision collisionInfo) { }

	// RVA: 0xFB2484 Offset: 0xFB2484 VA: 0xFB2484 Slot: 44
	public virtual void DoCollisionStay(Collision collisionInfo) { }

	// RVA: 0xFB2488 Offset: 0xFB2488 VA: 0xFB2488 Slot: 45
	public virtual void DoCollisionExit(Collision collisionInfo) { }

	// RVA: 0xFB248C Offset: 0xFB248C VA: 0xFB248C Slot: 46
	public virtual void DoTriggerEnter(Collider other) { }

	// RVA: 0xFB2490 Offset: 0xFB2490 VA: 0xFB2490 Slot: 47
	public virtual void DoTriggerStay(Collider other) { }

	// RVA: 0xFB2494 Offset: 0xFB2494 VA: 0xFB2494 Slot: 48
	public virtual void DoTriggerExit(Collider other) { }

	// RVA: 0xFB2498 Offset: 0xFB2498 VA: 0xFB2498 Slot: 49
	public virtual void DoParticleCollision(GameObject other) { }

	// RVA: 0xFB249C Offset: 0xFB249C VA: 0xFB249C Slot: 50
	public virtual void DoCollisionEnter2D(Collision2D collisionInfo) { }

	// RVA: 0xFB24A0 Offset: 0xFB24A0 VA: 0xFB24A0 Slot: 51
	public virtual void DoCollisionStay2D(Collision2D collisionInfo) { }

	// RVA: 0xFB24A4 Offset: 0xFB24A4 VA: 0xFB24A4 Slot: 52
	public virtual void DoCollisionExit2D(Collision2D collisionInfo) { }

	// RVA: 0xFB24A8 Offset: 0xFB24A8 VA: 0xFB24A8 Slot: 53
	public virtual void DoTriggerEnter2D(Collider2D other) { }

	// RVA: 0xFB24AC Offset: 0xFB24AC VA: 0xFB24AC Slot: 54
	public virtual void DoTriggerStay2D(Collider2D other) { }

	// RVA: 0xFB24B0 Offset: 0xFB24B0 VA: 0xFB24B0 Slot: 55
	public virtual void DoTriggerExit2D(Collider2D other) { }

	// RVA: 0xFB24B4 Offset: 0xFB24B4 VA: 0xFB24B4 Slot: 56
	public virtual void DoControllerColliderHit(ControllerColliderHit collider) { }

	// RVA: 0xFB24B8 Offset: 0xFB24B8 VA: 0xFB24B8 Slot: 57
	public virtual void DoJointBreak(float force) { }

	// RVA: 0xFB24BC Offset: 0xFB24BC VA: 0xFB24BC Slot: 58
	public virtual void DoJointBreak2D(Joint2D joint) { }

	// RVA: 0xFB24C0 Offset: 0xFB24C0 VA: 0xFB24C0 Slot: 59
	public virtual void DoAnimatorMove() { }

	// RVA: 0xFB24C4 Offset: 0xFB24C4 VA: 0xFB24C4 Slot: 60
	public virtual void DoAnimatorIK(int layerIndex) { }

	// RVA: 0xFB24C8 Offset: 0xFB24C8 VA: 0xFB24C8 Slot: 22
	public void Log(string text) { }

	// RVA: 0xFB2584 Offset: 0xFB2584 VA: 0xFB2584 Slot: 23
	public void LogWarning(string text) { }

	// RVA: 0xFB2640 Offset: 0xFB2640 VA: 0xFB2640 Slot: 24
	public void LogError(string text) { }

	// RVA: 0xFB26FC Offset: 0xFB26FC VA: 0xFB26FC Slot: 61
	public virtual string ErrorCheck() { }

	// RVA: 0xFB2764 Offset: 0xFB2764 VA: 0xFB2764
	protected static bool TagMatches(FsmString tag, Component other) { }

	// RVA: 0xFB27E8 Offset: 0xFB27E8 VA: 0xFB27E8
	protected static bool TagMatches(FsmString tag, Collision collisionInfo) { }

	// RVA: 0xFB2884 Offset: 0xFB2884 VA: 0xFB2884
	protected static bool TagMatches(FsmString tag, Collision2D collisionInfo) { }

	// RVA: 0xFB2920 Offset: 0xFB2920 VA: 0xFB2920
	protected static bool TagMatches(FsmString tag, ControllerColliderHit collisionInfo) { }

	// RVA: 0xFB29BC Offset: 0xFB29BC VA: 0xFB29BC
	protected static bool TagMatches(FsmString tag, GameObject go) { }

	// RVA: 0xFAA77C Offset: 0xFAA77C VA: 0xFAA77C
	public string get_Name() { }

	// RVA: 0xFB2A24 Offset: 0xFB2A24 VA: 0xFB2A24
	public void set_Name(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC8690C Offset: 0xC8690C VA: 0xC8690C
	// RVA: 0xFB2A2C Offset: 0xFB2A2C VA: 0xFB2A2C
	public string get_DisplayName() { }

	[CompilerGeneratedAttribute] // RVA: 0xC8691C Offset: 0xC8691C VA: 0xC8691C
	// RVA: 0xFB2A34 Offset: 0xFB2A34 VA: 0xFB2A34
	public void set_DisplayName(string value) { }

	// RVA: 0xFB2A3C Offset: 0xFB2A3C VA: 0xFB2A3C
	public Fsm get_Fsm() { }

	// RVA: 0xFB2A44 Offset: 0xFB2A44 VA: 0xFB2A44
	public void set_Fsm(Fsm value) { }

	// RVA: 0xFB2A4C Offset: 0xFB2A4C VA: 0xFB2A4C
	public GameObject get_Owner() { }

	// RVA: 0xFB2A54 Offset: 0xFB2A54 VA: 0xFB2A54
	public void set_Owner(GameObject value) { }

	// RVA: 0xFB2398 Offset: 0xFB2398 VA: 0xFB2398
	public FsmState get_State() { }

	// RVA: 0xFB2A5C Offset: 0xFB2A5C VA: 0xFB2A5C
	public void set_State(FsmState value) { }

	// RVA: 0xFB0028 Offset: 0xFB0028 VA: 0xFB0028 Slot: 4
	public bool get_Enabled() { }

	// RVA: 0xFB2A64 Offset: 0xFB2A64 VA: 0xFB2A64 Slot: 5
	public void set_Enabled(bool value) { }

	// RVA: 0xFB2A70 Offset: 0xFB2A70 VA: 0xFB2A70
	public bool get_IsOpen() { }

	// RVA: 0xFB2A78 Offset: 0xFB2A78 VA: 0xFB2A78
	public void set_IsOpen(bool value) { }

	// RVA: 0xFB2A84 Offset: 0xFB2A84 VA: 0xFB2A84
	public bool get_IsAutoNamed() { }

	// RVA: 0xFB2A8C Offset: 0xFB2A8C VA: 0xFB2A8C
	public void set_IsAutoNamed(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC8692C Offset: 0xC8692C VA: 0xC8692C
	// RVA: 0xFB1CB0 Offset: 0xFB1CB0 VA: 0xFB1CB0
	public bool get_Entered() { }

	[CompilerGeneratedAttribute] // RVA: 0xC8693C Offset: 0xC8693C VA: 0xC8693C
	// RVA: 0xFB0050 Offset: 0xFB0050 VA: 0xFB0050
	public void set_Entered(bool value) { }

	// RVA: 0xFB005C Offset: 0xFB005C VA: 0xFB005C
	public bool get_Finished() { }

	// RVA: 0xFB0030 Offset: 0xFB0030 VA: 0xFB0030
	public void set_Finished(bool value) { }

	// RVA: 0xFB2A98 Offset: 0xFB2A98 VA: 0xFB2A98
	public bool get_Active() { }

	// RVA: 0xFB0044 Offset: 0xFB0044 VA: 0xFB0044
	public void set_Active(bool value) { }

	// RVA: 0xFB2AA0 Offset: 0xFB2AA0 VA: 0xFB2AA0
	protected void .ctor() { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmTransition : IEquatable<FsmTransition> // TypeDefIndex: 3379
{
	// Fields
	[SerializeField] // RVA: 0xC855CC Offset: 0xC855CC VA: 0xC855CC
	private FsmEvent fsmEvent; // 0x10
	[SerializeField] // RVA: 0xC855DC Offset: 0xC855DC VA: 0xC855DC
	private string toState; // 0x18
	[SerializeField] // RVA: 0xC855EC Offset: 0xC855EC VA: 0xC855EC
	private FsmTransition.CustomLinkStyle linkStyle; // 0x20
	[SerializeField] // RVA: 0xC855FC Offset: 0xC855FC VA: 0xC855FC
	private FsmTransition.CustomLinkConstraint linkConstraint; // 0x21
	[SerializeField] // RVA: 0xC8560C Offset: 0xC8560C VA: 0xC8560C
	private byte colorIndex; // 0x22
	private FsmState toFsmState; // 0x28

	// Properties
	public FsmEvent FsmEvent { get; set; }
	public string ToState { get; set; }
	public FsmState ToFsmState { get; set; }
	public FsmTransition.CustomLinkStyle LinkStyle { get; set; }
	public FsmTransition.CustomLinkConstraint LinkConstraint { get; set; }
	public int ColorIndex { get; set; }
	public string EventName { get; }

	// Methods

	// RVA: 0xFB397C Offset: 0xFB397C VA: 0xFB397C
	public void .ctor() { }

	// RVA: 0xFAF918 Offset: 0xFAF918 VA: 0xFAF918
	public void .ctor(FsmTransition source) { }

	// RVA: 0xFB22B0 Offset: 0xFB22B0 VA: 0xFB22B0
	public FsmEvent get_FsmEvent() { }

	// RVA: 0xFB3984 Offset: 0xFB3984 VA: 0xFB3984
	public void set_FsmEvent(FsmEvent value) { }

	// RVA: 0xFB398C Offset: 0xFB398C VA: 0xFB398C
	public string get_ToState() { }

	// RVA: 0xFB3994 Offset: 0xFB3994 VA: 0xFB3994
	public void set_ToState(string value) { }

	// RVA: 0xFB399C Offset: 0xFB399C VA: 0xFB399C
	public FsmState get_ToFsmState() { }

	// RVA: 0xFB39A4 Offset: 0xFB39A4 VA: 0xFB39A4
	public void set_ToFsmState(FsmState value) { }

	// RVA: 0xFB39AC Offset: 0xFB39AC VA: 0xFB39AC
	public FsmTransition.CustomLinkStyle get_LinkStyle() { }

	// RVA: 0xFB39B4 Offset: 0xFB39B4 VA: 0xFB39B4
	public void set_LinkStyle(FsmTransition.CustomLinkStyle value) { }

	// RVA: 0xFB39BC Offset: 0xFB39BC VA: 0xFB39BC
	public FsmTransition.CustomLinkConstraint get_LinkConstraint() { }

	// RVA: 0xFB39C4 Offset: 0xFB39C4 VA: 0xFB39C4
	public void set_LinkConstraint(FsmTransition.CustomLinkConstraint value) { }

	// RVA: 0xFB39CC Offset: 0xFB39CC VA: 0xFB39CC
	public int get_ColorIndex() { }

	// RVA: 0xFB39D4 Offset: 0xFB39D4 VA: 0xFB39D4
	public void set_ColorIndex(int value) { }

	// RVA: 0xFB3A90 Offset: 0xFB3A90 VA: 0xFB3A90
	public string get_EventName() { }

	// RVA: 0xFB3B44 Offset: 0xFB3B44 VA: 0xFB3B44 Slot: 4
	public bool Equals(FsmTransition other) { }
}

// Namespace: 
public enum FsmTransition.CustomLinkStyle // TypeDefIndex: 3380
{
	// Fields
	public byte value__; // 0x0
	public const FsmTransition.CustomLinkStyle Default = 0;
	public const FsmTransition.CustomLinkStyle Bezier = 1;
	public const FsmTransition.CustomLinkStyle Circuit = 2;
	public const FsmTransition.CustomLinkStyle Direct = 3;
}

// Namespace: 
public enum FsmTransition.CustomLinkConstraint // TypeDefIndex: 3381
{
	// Fields
	public byte value__; // 0x0
	public const FsmTransition.CustomLinkConstraint None = 0;
	public const FsmTransition.CustomLinkConstraint LockLeft = 1;
	public const FsmTransition.CustomLinkConstraint LockRight = 2;
}

// Namespace: HutongGames.PlayMaker
public static class FsmUtility // TypeDefIndex: 3382
{
	// Fields
	private static UTF8Encoding encoding; // 0x0

	// Properties
	public static UTF8Encoding Encoding { get; }

	// Methods

	// RVA: 0xFB3C40 Offset: 0xFB3C40 VA: 0xFB3C40
	public static UTF8Encoding get_Encoding() { }

	[ObsoleteAttribute] // RVA: 0xC8694C Offset: 0xC8694C VA: 0xC8694C
	// RVA: 0xFB3CC0 Offset: 0xFB3CC0 VA: 0xFB3CC0
	public static VariableType GetVariableType(INamedVariable variable) { }

	// RVA: 0xFB40EC Offset: 0xFB40EC VA: 0xFB40EC
	public static Type GetVariableRealType(VariableType variableType) { }

	// RVA: 0xFB4324 Offset: 0xFB4324 VA: 0xFB4324
	public static object GetEnum(Type enumType, int enumValue) { }

	// RVA: 0xFB43C0 Offset: 0xFB43C0 VA: 0xFB43C0
	public static ICollection<byte> FsmEventToByteArray(FsmEvent fsmEvent) { }

	// RVA: 0xFB44D8 Offset: 0xFB44D8 VA: 0xFB44D8
	public static ICollection<byte> FsmFloatToByteArray(FsmFloat fsmFloat) { }

	// RVA: 0xFB47B8 Offset: 0xFB47B8 VA: 0xFB47B8
	public static ICollection<byte> FsmIntToByteArray(FsmInt fsmInt) { }

	// RVA: 0xFB49C8 Offset: 0xFB49C8 VA: 0xFB49C8
	public static ICollection<byte> FsmBoolToByteArray(FsmBool fsmBool) { }

	// RVA: 0xFB4B18 Offset: 0xFB4B18 VA: 0xFB4B18
	public static ICollection<byte> FsmVector2ToByteArray(FsmVector2 fsmVector2) { }

	// RVA: 0xFB4D48 Offset: 0xFB4D48 VA: 0xFB4D48
	public static ICollection<byte> FsmVector3ToByteArray(FsmVector3 fsmVector3) { }

	// RVA: 0xFB4FB8 Offset: 0xFB4FB8 VA: 0xFB4FB8
	public static ICollection<byte> FsmRectToByteArray(FsmRect fsmRect) { }

	// RVA: 0xFB5230 Offset: 0xFB5230 VA: 0xFB5230
	public static ICollection<byte> FsmQuaternionToByteArray(FsmQuaternion fsmQuaternion) { }

	// RVA: 0xFB5498 Offset: 0xFB5498 VA: 0xFB5498
	public static ICollection<byte> FsmColorToByteArray(FsmColor fsmColor) { }

	// RVA: 0xFB55C8 Offset: 0xFB55C8 VA: 0xFB55C8
	public static ICollection<byte> ColorToByteArray(Color color) { }

	// RVA: 0xFB4C68 Offset: 0xFB4C68 VA: 0xFB4C68
	public static ICollection<byte> Vector2ToByteArray(Vector2 vector2) { }

	// RVA: 0xFB4E98 Offset: 0xFB4E98 VA: 0xFB4E98
	public static ICollection<byte> Vector3ToByteArray(Vector3 vector3) { }

	// RVA: 0xFB56FC Offset: 0xFB56FC VA: 0xFB56FC
	public static ICollection<byte> Vector4ToByteArray(Vector4 vector4) { }

	// RVA: 0xFB50EC Offset: 0xFB50EC VA: 0xFB50EC
	public static ICollection<byte> RectToByteArray(Rect rect) { }

	// RVA: 0xFB5364 Offset: 0xFB5364 VA: 0xFB5364
	public static ICollection<byte> QuaternionToByteArray(Quaternion quaternion) { }

	// RVA: 0xFB4464 Offset: 0xFB4464 VA: 0xFB4464
	public static byte[] StringToByteArray(string str) { }

	// RVA: 0xFB5850 Offset: 0xFB5850 VA: 0xFB5850
	public static string ByteArrayToString(byte[] bytes) { }

	// RVA: 0xFB58E0 Offset: 0xFB58E0 VA: 0xFB58E0
	public static string ByteArrayToString(byte[] bytes, int startIndex, int count) { }

	// RVA: 0xFB599C Offset: 0xFB599C VA: 0xFB599C
	public static FsmEvent ByteArrayToFsmEvent(byte[] bytes, int startIndex, int size) { }

	// RVA: 0xFB5A6C Offset: 0xFB5A6C VA: 0xFB5A6C
	public static FsmFloat ByteArrayToFsmFloat(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0xFB5D0C Offset: 0xFB5D0C VA: 0xFB5D0C
	public static FsmInt ByteArrayToFsmInt(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0xFB5F28 Offset: 0xFB5F28 VA: 0xFB5F28
	public static FsmBool ByteArrayToFsmBool(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0xFB6094 Offset: 0xFB6094 VA: 0xFB6094
	public static Color ByteArrayToColor(byte[] bytes, int startIndex) { }

	// RVA: 0xFB6128 Offset: 0xFB6128 VA: 0xFB6128
	public static Vector2 ByteArrayToVector2(byte[] bytes, int startIndex) { }

	// RVA: 0xFB6180 Offset: 0xFB6180 VA: 0xFB6180
	public static FsmVector2 ByteArrayToFsmVector2(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0xFB6308 Offset: 0xFB6308 VA: 0xFB6308
	public static Vector3 ByteArrayToVector3(byte[] bytes, int startIndex) { }

	// RVA: 0xFB6384 Offset: 0xFB6384 VA: 0xFB6384
	public static FsmVector3 ByteArrayToFsmVector3(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0xFB6520 Offset: 0xFB6520 VA: 0xFB6520
	public static FsmRect ByteArrayToFsmRect(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0xFB6744 Offset: 0xFB6744 VA: 0xFB6744
	public static FsmQuaternion ByteArrayToFsmQuaternion(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0xFB6968 Offset: 0xFB6968 VA: 0xFB6968
	public static FsmColor ByteArrayToFsmColor(Fsm fsm, byte[] bytes, int startIndex, int totalLength) { }

	// RVA: 0xFB6AF4 Offset: 0xFB6AF4 VA: 0xFB6AF4
	public static Vector4 ByteArrayToVector4(byte[] bytes, int startIndex) { }

	// RVA: 0xFB66B0 Offset: 0xFB66B0 VA: 0xFB66B0
	public static Rect ByteArrayToRect(byte[] bytes, int startIndex) { }

	// RVA: 0xFB68D4 Offset: 0xFB68D4 VA: 0xFB68D4
	public static Quaternion ByteArrayToQuaternion(byte[] bytes, int startIndex) { }

	// RVA: 0xFB6B88 Offset: 0xFB6B88 VA: 0xFB6B88
	private static byte[] ReadToEnd(Stream stream) { }

	// RVA: 0xFAA584 Offset: 0xFAA584 VA: 0xFAA584
	public static string StripNamespace(string name) { }

	// RVA: 0xFAABA8 Offset: 0xFAABA8 VA: 0xFAABA8
	public static string GetPath(FsmState state) { }

	// RVA: 0xFB6DC8 Offset: 0xFB6DC8 VA: 0xFB6DC8
	public static string GetPath(FsmState state, FsmStateAction action) { }

	// RVA: 0xFB6ED0 Offset: 0xFB6ED0 VA: 0xFB6ED0
	public static string GetPath(FsmState state, FsmStateAction action, string parameter) { }

	// RVA: 0xFB6F6C Offset: 0xFB6F6C VA: 0xFB6F6C
	public static string GetFullFsmLabel(Fsm fsm) { }

	// RVA: 0xFB7194 Offset: 0xFB7194 VA: 0xFB7194
	public static string GetFullFsmLabel(PlayMakerFSM fsm) { }

	// RVA: 0xFB7130 Offset: 0xFB7130 VA: 0xFB7130
	public static string GetFsmLabel(Fsm fsm) { }

	// RVA: 0xFB72D4 Offset: 0xFB72D4 VA: 0xFB72D4
	public static Object GetOwner(Fsm fsm) { }

	// RVA: 0xFB7380 Offset: 0xFB7380 VA: 0xFB7380
	public static string GetFullPath(Fsm fsm) { }

	// RVA: 0xFB75A4 Offset: 0xFB75A4 VA: 0xFB75A4
	public static string GetFullPath(GameObject go, string seperator = "/") { }
}

// Namespace: 
public static class FsmUtility.BitConverter // TypeDefIndex: 3383
{
	// Methods

	// RVA: 0xFB5E74 Offset: 0xFB5E74 VA: 0xFB5E74
	public static int ToInt32(byte[] value, int startIndex) { }

	// RVA: 0xFB5BE0 Offset: 0xFB5BE0 VA: 0xFB5BE0
	public static float ToSingle(byte[] value, int startIndex) { }

	// RVA: 0xFB5C94 Offset: 0xFB5C94 VA: 0xFB5C94
	public static bool ToBoolean(byte[] value, int startIndex) { }

	// RVA: 0xFB46F4 Offset: 0xFB46F4 VA: 0xFB46F4
	public static byte[] GetBytes(bool value) { }

	// RVA: 0xFB4904 Offset: 0xFB4904 VA: 0xFB4904
	public static byte[] GetBytes(int value) { }

	// RVA: 0xFB4624 Offset: 0xFB4624 VA: 0xFB4624
	public static byte[] GetBytes(float value) { }
}

// Namespace: HutongGames.PlayMaker
[Serializable]
public class FsmVariables // TypeDefIndex: 3384
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC8561C Offset: 0xC8561C VA: 0xC8561C
	private static bool <GlobalVariablesSynced>k__BackingField; // 0x0
	[SerializeField] // RVA: 0xC8562C Offset: 0xC8562C VA: 0xC8562C
	private FsmFloat[] floatVariables; // 0x10
	[SerializeField] // RVA: 0xC8563C Offset: 0xC8563C VA: 0xC8563C
	private FsmInt[] intVariables; // 0x18
	[SerializeField] // RVA: 0xC8564C Offset: 0xC8564C VA: 0xC8564C
	private FsmBool[] boolVariables; // 0x20
	[SerializeField] // RVA: 0xC8565C Offset: 0xC8565C VA: 0xC8565C
	private FsmString[] stringVariables; // 0x28
	[SerializeField] // RVA: 0xC8566C Offset: 0xC8566C VA: 0xC8566C
	private FsmVector2[] vector2Variables; // 0x30
	[SerializeField] // RVA: 0xC8567C Offset: 0xC8567C VA: 0xC8567C
	private FsmVector3[] vector3Variables; // 0x38
	[SerializeField] // RVA: 0xC8568C Offset: 0xC8568C VA: 0xC8568C
	private FsmColor[] colorVariables; // 0x40
	[SerializeField] // RVA: 0xC8569C Offset: 0xC8569C VA: 0xC8569C
	private FsmRect[] rectVariables; // 0x48
	[SerializeField] // RVA: 0xC856AC Offset: 0xC856AC VA: 0xC856AC
	private FsmQuaternion[] quaternionVariables; // 0x50
	[SerializeField] // RVA: 0xC856BC Offset: 0xC856BC VA: 0xC856BC
	private FsmGameObject[] gameObjectVariables; // 0x58
	[SerializeField] // RVA: 0xC856CC Offset: 0xC856CC VA: 0xC856CC
	private FsmObject[] objectVariables; // 0x60
	[SerializeField] // RVA: 0xC856DC Offset: 0xC856DC VA: 0xC856DC
	private FsmMaterial[] materialVariables; // 0x68
	[SerializeField] // RVA: 0xC856EC Offset: 0xC856EC VA: 0xC856EC
	private FsmTexture[] textureVariables; // 0x70
	[SerializeField] // RVA: 0xC856FC Offset: 0xC856FC VA: 0xC856FC
	private FsmArray[] arrayVariables; // 0x78
	[SerializeField] // RVA: 0xC8570C Offset: 0xC8570C VA: 0xC8570C
	private FsmEnum[] enumVariables; // 0x80
	[SerializeField] // RVA: 0xC8571C Offset: 0xC8571C VA: 0xC8571C
	private string[] categories; // 0x88
	[SerializeField] // RVA: 0xC8572C Offset: 0xC8572C VA: 0xC8572C
	private int[] variableCategoryIDs; // 0x90

	// Properties
	public static PlayMakerGlobals GlobalsComponent { get; }
	public static FsmVariables GlobalVariables { get; }
	public static bool GlobalVariablesSynced { get; set; }
	public string[] Categories { get; set; }
	public int[] CategoryIDs { get; set; }
	public FsmFloat[] FloatVariables { get; set; }
	public FsmInt[] IntVariables { get; set; }
	public FsmBool[] BoolVariables { get; set; }
	public FsmString[] StringVariables { get; set; }
	public FsmVector2[] Vector2Variables { get; set; }
	public FsmVector3[] Vector3Variables { get; set; }
	public FsmRect[] RectVariables { get; set; }
	public FsmQuaternion[] QuaternionVariables { get; set; }
	public FsmColor[] ColorVariables { get; set; }
	public FsmGameObject[] GameObjectVariables { get; set; }
	public FsmArray[] ArrayVariables { get; set; }
	public FsmEnum[] EnumVariables { get; set; }
	public FsmObject[] ObjectVariables { get; set; }
	public FsmMaterial[] MaterialVariables { get; set; }
	public FsmTexture[] TextureVariables { get; set; }

	// Methods

	// RVA: 0xFBE064 Offset: 0xFBE064 VA: 0xFBE064
	public static PlayMakerGlobals get_GlobalsComponent() { }

	// RVA: 0xFBE0BC Offset: 0xFBE0BC VA: 0xFBE0BC
	public static FsmVariables get_GlobalVariables() { }

	[CompilerGeneratedAttribute] // RVA: 0xC86984 Offset: 0xC86984 VA: 0xC86984
	// RVA: 0xFBE0F0 Offset: 0xFBE0F0 VA: 0xFBE0F0
	public static bool get_GlobalVariablesSynced() { }

	[CompilerGeneratedAttribute] // RVA: 0xC86994 Offset: 0xC86994 VA: 0xC86994
	// RVA: 0xFBE140 Offset: 0xFBE140 VA: 0xFBE140
	public static void set_GlobalVariablesSynced(bool value) { }

	// RVA: 0xFBE198 Offset: 0xFBE198 VA: 0xFBE198
	public string[] get_Categories() { }

	// RVA: 0xFBE1A0 Offset: 0xFBE1A0 VA: 0xFBE1A0
	public void set_Categories(string[] value) { }

	// RVA: 0xFBE1A8 Offset: 0xFBE1A8 VA: 0xFBE1A8
	public int[] get_CategoryIDs() { }

	// RVA: 0xFBE1B0 Offset: 0xFBE1B0 VA: 0xFBE1B0
	public void set_CategoryIDs(int[] value) { }

	// RVA: 0xFBE1B8 Offset: 0xFBE1B8 VA: 0xFBE1B8
	public NamedVariable[] GetAllNamedVariables() { }

	// RVA: 0xFBEB7C Offset: 0xFBEB7C VA: 0xFBEB7C
	public NamedVariable[] GetAllNamedVariablesSorted() { }

	// RVA: 0xFBEC44 Offset: 0xFBEC44 VA: 0xFBEC44
	public NamedVariable[] GetNamedVariables(VariableType type) { }

	// RVA: 0xFBEDB8 Offset: 0xFBEDB8 VA: 0xFBEDB8
	public NamedVariable[] GetNamedVariablesSorted(VariableType type) { }

	// RVA: 0xFBEE90 Offset: 0xFBEE90 VA: 0xFBEE90
	public bool Contains(string variableName) { }

	// RVA: 0xFBEF84 Offset: 0xFBEF84 VA: 0xFBEF84
	public bool Contains(NamedVariable variable) { }

	// RVA: 0xFBF008 Offset: 0xFBF008 VA: 0xFBF008
	public NamedVariable[] GetNames(Type ofType) { }

	// RVA: 0xFBF46C Offset: 0xFBF46C VA: 0xFBF46C
	public void .ctor() { }

	// RVA: 0xFBF548 Offset: 0xFBF548 VA: 0xFBF548
	public void .ctor(FsmVariables source) { }

	// RVA: 0xFC0868 Offset: 0xFC0868 VA: 0xFC0868
	public void OverrideVariableValues(FsmVariables source) { }

	// RVA: 0xFC2908 Offset: 0xFC2908 VA: 0xFC2908
	public void ApplyVariableValues(FsmVariables source) { }

	// RVA: 0xFC358C Offset: 0xFC358C VA: 0xFC358C
	public void ApplyVariableValuesCareful(FsmVariables source) { }

	// RVA: 0xFBE4B0 Offset: 0xFBE4B0 VA: 0xFBE4B0
	public FsmFloat[] get_FloatVariables() { }

	// RVA: 0xFC4DA0 Offset: 0xFC4DA0 VA: 0xFC4DA0
	public void set_FloatVariables(FsmFloat[] value) { }

	// RVA: 0xFBE524 Offset: 0xFBE524 VA: 0xFBE524
	public FsmInt[] get_IntVariables() { }

	// RVA: 0xFC4DA8 Offset: 0xFC4DA8 VA: 0xFC4DA8
	public void set_IntVariables(FsmInt[] value) { }

	// RVA: 0xFBE598 Offset: 0xFBE598 VA: 0xFBE598
	public FsmBool[] get_BoolVariables() { }

	// RVA: 0xFC4DB0 Offset: 0xFC4DB0 VA: 0xFC4DB0
	public void set_BoolVariables(FsmBool[] value) { }

	// RVA: 0xFBE60C Offset: 0xFBE60C VA: 0xFBE60C
	public FsmString[] get_StringVariables() { }

	// RVA: 0xFC4DB8 Offset: 0xFC4DB8 VA: 0xFC4DB8
	public void set_StringVariables(FsmString[] value) { }

	// RVA: 0xFBE680 Offset: 0xFBE680 VA: 0xFBE680
	public FsmVector2[] get_Vector2Variables() { }

	// RVA: 0xFC4DC0 Offset: 0xFC4DC0 VA: 0xFC4DC0
	public void set_Vector2Variables(FsmVector2[] value) { }

	// RVA: 0xFBE6F4 Offset: 0xFBE6F4 VA: 0xFBE6F4
	public FsmVector3[] get_Vector3Variables() { }

	// RVA: 0xFC4DC8 Offset: 0xFC4DC8 VA: 0xFC4DC8
	public void set_Vector3Variables(FsmVector3[] value) { }

	// RVA: 0xFBE768 Offset: 0xFBE768 VA: 0xFBE768
	public FsmRect[] get_RectVariables() { }

	// RVA: 0xFC4DD0 Offset: 0xFC4DD0 VA: 0xFC4DD0
	public void set_RectVariables(FsmRect[] value) { }

	// RVA: 0xFBE7DC Offset: 0xFBE7DC VA: 0xFBE7DC
	public FsmQuaternion[] get_QuaternionVariables() { }

