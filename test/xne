	// RVA: 0x1A4DA0C Offset: 0x1A4DA0C VA: 0x1A4DA0C
	public UICharaGraphTexture CreateCommandTextureLocal(GameObject parent, int commandCodeId) { }

	// RVA: 0x1A4CE1C Offset: 0x1A4CE1C VA: 0x1A4CE1C
	public UICharaGraphTexture CreateCommandTextureLocal(GameObject parent, UserCommandCodeEntity userCommandCodeEntity, int depth, Action callbackFunc) { }

	// RVA: 0x1A4D054 Offset: 0x1A4D054 VA: 0x1A4D054
	public UICharaGraphTexture CreateCommandTextureLocal(GameObject parent, UserCommandCodeCollectionEntity userCommandCodeCollectionEntity, int depth, Action callbackFunc) { }

	// RVA: 0x1A4D28C Offset: 0x1A4D28C VA: 0x1A4D28C
	public UICharaGraphTexture CreateCommandTextureLocal(GameObject parent, CommandCodeEntity commandCodeEntity, int depth, Action callbackFunc) { }

	// RVA: 0x1A4D4C4 Offset: 0x1A4D4C4 VA: 0x1A4D4C4
	public UICharaGraphTexture CreateCommandTextureLocal(GameObject parent, int commandCodeId, int depth, Action callbackFunc) { }
}

// Namespace: 
public class CommandSpellIconManager : SingletonMonoBehaviour<CommandSpellIconManager> // TypeDefIndex: 6290
{
	// Fields
	[SerializeField] // RVA: 0xC53560 Offset: 0xC53560 VA: 0xC53560
	protected GameObject commandSpellPrefab; // 0x18

	// Methods

	// RVA: 0x1664E9C Offset: 0x1664E9C VA: 0x1664E9C
	public void .ctor() { }

	// RVA: 0x1664EEC Offset: 0x1664EEC VA: 0x1664EEC
	public CommandSpellIconComponent Create(UserGameEntity dat, int width = 80, int height = 80) { }

	// RVA: 0x1664F7C Offset: 0x1664F7C VA: 0x1664F7C
	public CommandSpellIconComponent Create(int imageType, int remain, int width = 80, int height = 80) { }
}

// Namespace: 
public class DataAsset : Object // TypeDefIndex: 6291
{
	// Fields
	protected byte[] byteData; // 0x18
	protected string textData; // 0x20

	// Properties
	public byte[] bytes { get; }
	public string text { get; }

	// Methods

	// RVA: 0xE268E4 Offset: 0xE268E4 VA: 0xE268E4
	public void .ctor(byte[] bytes) { }

	// RVA: 0xE26960 Offset: 0xE26960 VA: 0xE26960
	public void .ctor(string text) { }

	// RVA: 0xE269DC Offset: 0xE269DC VA: 0xE269DC
	public byte[] get_bytes() { }

	// RVA: 0xE269E4 Offset: 0xE269E4 VA: 0xE269E4
	public string get_text() { }
}

// Namespace: 
public class FlashingIconManager : SingletonMonoBehaviour<FlashingIconManager> // TypeDefIndex: 6292
{
	// Fields
	private const float FAST_CYCLE_TIME = 0.5;
	private const float NORMAL_CYCLE_TIME = 1;
	private float dispTime; // 0x18
	private List<FlashingIconManager.FlashIconContents> flashIconList; // 0x20

	// Methods

	// RVA: 0x136E354 Offset: 0x136E354 VA: 0x136E354
	public void .ctor() { }

	// RVA: 0x136E3CC Offset: 0x136E3CC VA: 0x136E3CC
	public void Reboot() { }

	// RVA: 0x136DF34 Offset: 0x136DF34 VA: 0x136DF34
	public void AddIcon(FlashingIconComponent icon, bool isFast, float extraCycleTime = 0) { }

	// RVA: 0x136DC5C Offset: 0x136DC5C VA: 0x136DC5C
	public void RemoveIcon(FlashingIconComponent icon) { }

	// RVA: 0x136E46C Offset: 0x136E46C VA: 0x136E46C
	private float CalcAlpha(float targetCycleTime) { }

	// RVA: 0x136E4AC Offset: 0x136E4AC VA: 0x136E4AC
	protected void Update() { }
}

// Namespace: 
private class FlashingIconManager.FlashIconContents // TypeDefIndex: 6293
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC53570 Offset: 0xC53570 VA: 0xC53570
	[DebuggerBrowsableAttribute] // RVA: 0xC53570 Offset: 0xC53570 VA: 0xC53570
	private float <cycleTime>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC535AC Offset: 0xC535AC VA: 0xC535AC
	[DebuggerBrowsableAttribute] // RVA: 0xC535AC Offset: 0xC535AC VA: 0xC535AC
	private FlashingIconComponent <icon>k__BackingField; // 0x18

	// Properties
	public float cycleTime { get; set; }
	public FlashingIconComponent icon { get; set; }

	// Methods

	// RVA: 0x136E430 Offset: 0x136E430 VA: 0x136E430
	public void .ctor(FlashingIconComponent icon, float cycleTime) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8D04 Offset: 0xCC8D04 VA: 0xCC8D04
	// RVA: 0x136E60C Offset: 0x136E60C VA: 0x136E60C
	public float get_cycleTime() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8D14 Offset: 0xCC8D14 VA: 0xCC8D14
	// RVA: 0x136E624 Offset: 0x136E624 VA: 0x136E624
	private void set_cycleTime(float value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8D24 Offset: 0xCC8D24 VA: 0xCC8D24
	// RVA: 0x136E614 Offset: 0x136E614 VA: 0x136E614
	public FlashingIconComponent get_icon() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8D34 Offset: 0xCC8D34 VA: 0xCC8D34
	// RVA: 0x136E61C Offset: 0x136E61C VA: 0x136E61C
	private void set_icon(FlashingIconComponent value) { }
}

// Namespace: 
public class MasterFaceManager : SingletonMonoBehaviour<MasterFaceManager> // TypeDefIndex: 6294
{
	// Fields
	[SerializeField] // RVA: 0xC535E8 Offset: 0xC535E8 VA: 0xC535E8
	protected GameObject masterFacePrefab; // 0x18

	// Methods

	// RVA: 0x1499628 Offset: 0x1499628 VA: 0x1499628
	public void .ctor() { }

	// RVA: 0x1499678 Offset: 0x1499678 VA: 0x1499678
	public static string[] GetAssetName(UIMasterFaceRender.DispType dispType, int genderType, int equipId) { }

	// RVA: 0x14996FC Offset: 0x14996FC VA: 0x14996FC
	public static void DownloadAsset(UIMasterFaceRender.DispType dispType, int genderType, int equipId, Action callback) { }

	// RVA: 0x149979C Offset: 0x149979C VA: 0x149979C
	public static void LoadAsset(UIMasterFaceRender.DispType dispType, int genderType, int equipId, Action callback) { }

	// RVA: 0x1499840 Offset: 0x1499840 VA: 0x1499840
	public static void ReleaseAsset(UIMasterFaceRender.DispType dispType, int genderType, int equipId) { }

	// RVA: 0x14998D0 Offset: 0x14998D0 VA: 0x14998D0
	public static UIMasterFaceTexture CreatePrefab(GameObject parent) { }

	// RVA: 0x1499C28 Offset: 0x1499C28 VA: 0x1499C28
	public static UIMasterFaceTexture CreatePrefab(GameObject parent, UIMasterFaceRender.DispType dispType, int genderType, int equipId, int depth, Action callbackFunc, int overWriteImageId = 0) { }

	// RVA: 0x1499934 Offset: 0x1499934 VA: 0x1499934
	public UIMasterFaceTexture CreateLocal(GameObject parent) { }

	// RVA: 0x1499CE0 Offset: 0x1499CE0 VA: 0x1499CE0
	public UIMasterFaceTexture CreateLocal(GameObject parent, UIMasterFaceRender.DispType dispType, int genderType, int equipId, int depth, Action callbackFunc, int overWriteImageId) { }
}

// Namespace: 
public class MasterFigureManagerOld : SingletonMonoBehaviour<MasterFigureManagerOld> // TypeDefIndex: 6295
{
	// Fields
	[SerializeField] // RVA: 0xC535F8 Offset: 0xC535F8 VA: 0xC535F8
	protected GameObject masterFigurePrefab; // 0x18

	// Methods

	// RVA: 0x149A020 Offset: 0x149A020 VA: 0x149A020
	public void .ctor() { }

	// RVA: 0x149A070 Offset: 0x149A070 VA: 0x149A070
	public static string[] GetAssetName(int genderType, int equipId) { }

	// RVA: 0x149A0EC Offset: 0x149A0EC VA: 0x149A0EC
	public static void DownloadAsset(int genderType, int equipId, Action callback) { }

	// RVA: 0x149A17C Offset: 0x149A17C VA: 0x149A17C
	public static void LoadAsset(int genderType, int equipId, Action callback) { }

	// RVA: 0x149A210 Offset: 0x149A210 VA: 0x149A210
	public static void ReleaseAsset(int genderType, int equipId) { }

	// RVA: 0x149A298 Offset: 0x149A298 VA: 0x149A298
	public static UIMasterFigureTextureOld CreatePrefab(GameObject parent) { }

	// RVA: 0x149A634 Offset: 0x149A634 VA: 0x149A634
	public static UIMasterFigureTextureOld CreatePrefab(GameObject parent, UIMasterFigureRenderOld.DispType dispType, int genderType, int equipId, int depth, Action callbackFunc, int overWriteEquipId = 0, Nullable<Vector3> offset) { }

	// RVA: 0x149AA3C Offset: 0x149AA3C VA: 0x149AA3C
	public static UIMasterFigureTextureOld CreateEnemyPrefab(GameObject parent, int enemyFaceId, int enemyMasterBattleId, int depth, Action callbackFunc) { }

	// RVA: 0x149A304 Offset: 0x149A304 VA: 0x149A304
	public UIMasterFigureTextureOld CreateLocal(GameObject parent, Nullable<Vector3> offset) { }

	// RVA: 0x149A6F0 Offset: 0x149A6F0 VA: 0x149A6F0
	public UIMasterFigureTextureOld CreateLocal(GameObject parent, UIMasterFigureRenderOld.DispType dispType, int genderType, int equipId, int depth, Action callbackFunc, int overWriteEquipId = 0, Nullable<Vector3> offset) { }

	// RVA: 0x149AAD0 Offset: 0x149AAD0 VA: 0x149AAD0
	public UIMasterFigureTextureOld CreateEnemyLocal(GameObject parent, int enemyFaceId, int enemyBattleId, int depth, Action callbackFunc) { }
}

// Namespace: 
public class MasterFullFigureManager : SingletonMonoBehaviour<MasterFullFigureManager> // TypeDefIndex: 6296
{
	// Fields
	[SerializeField] // RVA: 0xC53608 Offset: 0xC53608 VA: 0xC53608
	protected GameObject masterFigurePrefab; // 0x18

	// Methods

	// RVA: 0x149F860 Offset: 0x149F860 VA: 0x149F860
	public void .ctor() { }

	// RVA: 0x149F8B0 Offset: 0x149F8B0 VA: 0x149F8B0
	public static string[] GetAssetName(int genderType, int equipId) { }

	// RVA: 0x149F928 Offset: 0x149F928 VA: 0x149F928
	public static void DownloadAsset(int genderType, int equipId, Action callback) { }

	// RVA: 0x149F9B8 Offset: 0x149F9B8 VA: 0x149F9B8
	public static void LoadAsset(int genderType, int equipId, Action callback) { }

	// RVA: 0x149FA4C Offset: 0x149FA4C VA: 0x149FA4C
	public static void ReleaseAsset(int genderType, int equipId) { }

	// RVA: 0x149FAD4 Offset: 0x149FAD4 VA: 0x149FAD4
	public static UIMasterFullFigureTexture CreatePrefab(GameObject parent) { }

	// RVA: 0x149FE2C Offset: 0x149FE2C VA: 0x149FE2C
	public static UIMasterFullFigureTexture CreatePrefab(GameObject parent, UIMasterFullFigureRender.DispType dispType, int genderType, int equipId, int depth, Action callbackFunc) { }

	// RVA: 0x149FB38 Offset: 0x149FB38 VA: 0x149FB38
	public UIMasterFullFigureTexture CreateLocal(GameObject parent) { }

	// RVA: 0x149FED0 Offset: 0x149FED0 VA: 0x149FED0
	public UIMasterFullFigureTexture CreateLocal(GameObject parent, UIMasterFullFigureRender.DispType dispType, int genderType, int equipId, int depth, Action callbackFunc) { }
}

// Namespace: 
public class ServantAssetLoadManager : SingletonMonoBehaviour<ServantAssetLoadManager> // TypeDefIndex: 6297
{
	// Fields
	private ServantMaster svtmaster; // 0x18
	private ServantLimitMaster svtlimitmaster; // 0x20
	private ServantLimitAddMaster svtlimitaddmaster; // 0x28
	private List<string> loadedList; // 0x30
	private List<string> loadlist; // 0x38
	private List<string> downloadlist; // 0x40
	protected Dictionary<int, SePlayer> ActorVoice; // 0x48
	protected Dictionary<int, string> LastActorVoice; // 0x50
	private int soundCount; // 0x58
	private AssetData nobleSequenceData; // 0x60
	private AssetData nobleAssetData; // 0x68
	public List<AssetData> bgAssetDataList; // 0x70
	private List<string> nobleEffectList; // 0x78
	private readonly Vector3 InitPoint; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC53618 Offset: 0xC53618 VA: 0xC53618
	[DebuggerBrowsableAttribute] // RVA: 0xC53618 Offset: 0xC53618 VA: 0xC53618
	private bool <IsRetryTransition>k__BackingField; // 0x8C
	[CompilerGeneratedAttribute] // RVA: 0xC53654 Offset: 0xC53654 VA: 0xC53654
	[DebuggerBrowsableAttribute] // RVA: 0xC53654 Offset: 0xC53654 VA: 0xC53654
	private ServantAssetLoadManager.RetryStatus <retryStatus>k__BackingField; // 0x90
	private static readonly int KeepAssetPlayerServantCount; // 0x0
	private static Dictionary<string, ServantAssetArgs> unloadIgnoredAssetArgs; // 0x8
	protected const int MAX_PARALLEL_LOAD = 20;
	private static string wkSpace; // 0x10
	private Dictionary<string, Object> _releaseAssets; // 0x98
	[CompilerGeneratedAttribute] // RVA: 0xC53690 Offset: 0xC53690 VA: 0xC53690
	private static Func<Shader, Shader, Shader> <>f__am$cache0; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC536A0 Offset: 0xC536A0 VA: 0xC536A0
	private static Func<Shader, Shader, Shader> <>f__am$cache1; // 0x20

	// Properties
	public bool IsRetryTransition { get; set; }
	public ServantAssetLoadManager.RetryStatus retryStatus { get; set; }

	// Methods

	// RVA: 0x173A4F0 Offset: 0x173A4F0 VA: 0x173A4F0
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8D44 Offset: 0xCC8D44 VA: 0xCC8D44
	// RVA: 0x173A698 Offset: 0x173A698 VA: 0x173A698
	public bool get_IsRetryTransition() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8D54 Offset: 0xCC8D54 VA: 0xCC8D54
	// RVA: 0x173A6A0 Offset: 0x173A6A0 VA: 0x173A6A0
	public void set_IsRetryTransition(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8D64 Offset: 0xCC8D64 VA: 0xCC8D64
	// RVA: 0x173A6AC Offset: 0x173A6AC VA: 0x173A6AC
	public ServantAssetLoadManager.RetryStatus get_retryStatus() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8D74 Offset: 0xCC8D74 VA: 0xCC8D74
	// RVA: 0x173A6B4 Offset: 0x173A6B4 VA: 0x173A6B4
	public void set_retryStatus(ServantAssetLoadManager.RetryStatus value) { }

	// RVA: 0x173A6BC Offset: 0x173A6BC VA: 0x173A6BC
	public static int GetLimitImageIndex(int svtId, int limitCount, int limitDiff = 0) { }

	// RVA: 0x173A74C Offset: 0x173A74C VA: 0x173A74C
	public void checkMaster() { }

	// RVA: 0x173A84C Offset: 0x173A84C VA: 0x173A84C
	public ServantEntity getSvtEntity(int svtId) { }

	// RVA: 0x173A8C4 Offset: 0x173A8C4 VA: 0x173A8C4
	public ServantLimitEntity getSvtLimitEntity(int svtId, int limitCnt) { }

	// RVA: 0x173A944 Offset: 0x173A944 VA: 0x173A944
	public ServantLimitAddEntity getSvtLimitAddEntity(int svtId, int limitCnt) { }

	// RVA: -1 Offset: -1
	public T getAssetObject<T>(string path, string file) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C216AC Offset: 0x1C216AC VA: 0x1C216AC
	|-ServantAssetLoadManager.getAssetObject<object>
	|-ServantAssetLoadManager.getAssetObject<GameObject>
	|-ServantAssetLoadManager.getAssetObject<TextAsset>
	|-ServantAssetLoadManager.getAssetObject<Texture2D>
	*/

	// RVA: 0x173AA44 Offset: 0x173AA44 VA: 0x173AA44
	public string getBattleChrId(int svtId, int limitCount) { }

	// RVA: 0x173AA94 Offset: 0x173AA94 VA: 0x173AA94
	public int getVoiceId(int svtId, int limitCount) { }

	// RVA: 0x173AAF4 Offset: 0x173AAF4 VA: 0x173AAF4
	public int getVoicePrefix(int svtId, int limitCount) { }

	// RVA: 0x173AB54 Offset: 0x173AB54 VA: 0x173AB54
	public static UIStandFigureR loadFigureObject(GameObject parent, int svtId, int limitCount, Face.Type faceType, Action callbackFunc) { }

	// RVA: 0x173AB98 Offset: 0x173AB98 VA: 0x173AB98
	public static string getCommandCardLoadFolderNameDisp(int svtId, int displimitCount) { }

	// RVA: 0x173AC38 Offset: 0x173AC38 VA: 0x173AC38
	public static string getCommandCardLoadFolderName(int svtId, int limitCount) { }

	// RVA: 0x173ACD8 Offset: 0x173ACD8 VA: 0x173ACD8
	public static void preloadCommandCard(int svtId, int limitCount) { }

	// RVA: 0x173AD3C Offset: 0x173AD3C VA: 0x173AD3C
	private void preloadCommandCardlocal(int svtId, int limitCount) { }

	// RVA: 0x173AE4C Offset: 0x173AE4C VA: 0x173AE4C
	public static UITexture loadCommandCard(UITexture tex, int svtId, int limit, int commandLimit) { }

	// RVA: 0x173AEC8 Offset: 0x173AEC8 VA: 0x173AEC8
	private UITexture loadCommandCardlocal(UITexture tex, int svtId, int limit, int commandLimit) { }

	// RVA: 0x173B07C Offset: 0x173B07C VA: 0x173B07C
	public static void unloadCommandCard(int svtId, int limitCount) { }

	// RVA: 0x173B0E0 Offset: 0x173B0E0 VA: 0x173B0E0
	public void unloadCommandCardlocal(int svtId, int limitCount) { }

	// RVA: 0x173B1DC Offset: 0x173B1DC VA: 0x173B1DC
	public static string getStatusImageFolderNameDisp(int svtId, int displimitCount) { }

	// RVA: 0x173B27C Offset: 0x173B27C VA: 0x173B27C
	public static string getStatusImageFolderName(int svtId, int limitCount) { }

	// RVA: 0x173B31C Offset: 0x173B31C VA: 0x173B31C
	public static void preloadStatusFace(int svtId, int limitCount) { }

	// RVA: 0x173B380 Offset: 0x173B380 VA: 0x173B380
	private void preloadStatusFacelocal(int svtId, int limitCount) { }

	// RVA: 0x173B3FC Offset: 0x173B3FC VA: 0x173B3FC
	public static UITexture loadStatusFace(UITexture tex, int svtID, int limit) { }

	// RVA: 0x173B478 Offset: 0x173B478 VA: 0x173B478
	public UITexture loadStatusFacelocal(UITexture tex, int svtID, int limit) { }

	// RVA: 0x173B62C Offset: 0x173B62C VA: 0x173B62C
	public static void unloadStatusFace(int svtId, int limitCount) { }

	// RVA: 0x173B6A0 Offset: 0x173B6A0 VA: 0x173B6A0
	public void unloadStatusFacelocal(int svtId, int limitCount) { }

	// RVA: 0x173B7B0 Offset: 0x173B7B0 VA: 0x173B7B0
	public static bool loadNobleName(UITexture tex, int svtId, int limit, int treasureDvcId) { }

	// RVA: 0x173B83C Offset: 0x173B83C VA: 0x173B83C
	public bool loadNobleNamelocal(UITexture tex, int svtId, int limit, int treasureDvcId) { }

	// RVA: 0x173BD78 Offset: 0x173BD78 VA: 0x173BD78
	public static void clearServantlist() { }

	// RVA: 0x173BDD4 Offset: 0x173BDD4 VA: 0x173BDD4
	public void clearServantlistlocal() { }

	// RVA: 0x173BE7C Offset: 0x173BE7C VA: 0x173BE7C
	public static bool checkLoad() { }

	// RVA: 0x173BED8 Offset: 0x173BED8 VA: 0x173BED8
	public bool checkLoadlocal() { }

	// RVA: 0x173BF84 Offset: 0x173BF84 VA: 0x173BF84
	public void setLoadList(string path) { }

	// RVA: 0x173ADB8 Offset: 0x173ADB8 VA: 0x173ADB8
	public void tryLoadList(string path) { }

	// RVA: 0x173C074 Offset: 0x173C074 VA: 0x173C074
	public void setDownloadList(string path) { }

	// RVA: 0x173C1C8 Offset: 0x173C1C8 VA: 0x173C1C8
	public void downloadAndRelease(string path) { }

	// RVA: 0x173C31C Offset: 0x173C31C VA: 0x173C31C
	protected void endLoadAndRelease(AssetData data) { }

	// RVA: 0x173C3B0 Offset: 0x173C3B0 VA: 0x173C3B0
	protected void endloadList(AssetData data) { }

	// RVA: 0x173C4BC Offset: 0x173C4BC VA: 0x173C4BC
	public static void PreloadAssetsByArgs(ServantAssetArgs args) { }

	// RVA: 0x173CAC4 Offset: 0x173CAC4 VA: 0x173CAC4
	public static void UnloadAssetsByArgs(ServantAssetArgs args) { }

	// RVA: 0x173CE04 Offset: 0x173CE04 VA: 0x173CE04
	public static bool TryRegisterUnloadIgnoredArgs(ServantAssetArgs args) { }

	// RVA: 0x173C64C Offset: 0x173C64C VA: 0x173C64C
	public static void preloadServant(ServantAssetArgs args) { }

	// RVA: 0x173D128 Offset: 0x173D128 VA: 0x173D128
	public void preloadServantlocal(ServantAssetArgs args) { }

	// RVA: 0x173CC54 Offset: 0x173CC54 VA: 0x173CC54
	public static void unloadServant(ServantAssetArgs args) { }

	// RVA: 0x173D59C Offset: 0x173D59C VA: 0x173D59C
	public void unloadServantlocal(ServantAssetArgs args) { }

	// RVA: 0x173D9DC Offset: 0x173D9DC VA: 0x173D9DC
	public static bool IsIgnoreUnloadServant(BattleServantData data) { }

	// RVA: 0x173DA90 Offset: 0x173DA90 VA: 0x173DA90
	public static void preloadServantVoice(int svtId, int limitCount, int overwriteSvtVoiceId = 0) { }

	// RVA: 0x173D37C Offset: 0x173D37C VA: 0x173D37C
	public void preloadServantVoicelocal(int svtId, int limitCount, int overwriteSvtVoiceId) { }

	// RVA: 0x173DB0C Offset: 0x173DB0C VA: 0x173DB0C
	public static void unloadServantVoice(int svtId, int limitCount, int overwriteSvtVoiceId = 0) { }

	// RVA: 0x173D800 Offset: 0x173D800 VA: 0x173D800
	public void unloadServantVoicelocal(int svtId, int limitCount, int overwriteSvtVoiceId = 0) { }

	// RVA: 0x173DB88 Offset: 0x173DB88 VA: 0x173DB88
	public static void preloadSkillAnyVoice(BattleSkillInfoData _skillInfo) { }

	// RVA: 0x173DBEC Offset: 0x173DBEC VA: 0x173DBEC
	public void preloadSkillAnyVoiceLocal(BattleSkillInfoData _skillInfo) { }

	// RVA: 0x173DD78 Offset: 0x173DD78 VA: 0x173DD78
	public static void unloadSkillAnyVoice(BattleSkillInfoData _skillInfo) { }

	// RVA: 0x173DDD4 Offset: 0x173DDD4 VA: 0x173DDD4
	public void unloadSkillAnyVoiceLocal(BattleSkillInfoData _skillInfo) { }

	// RVA: 0x173DF18 Offset: 0x173DF18 VA: 0x173DF18
	public static void preloadCommandSpellAnyVoice() { }

	// RVA: 0x173DF74 Offset: 0x173DF74 VA: 0x173DF74
	public void preloadCommandSpellAnyVoiceLocal() { }

	// RVA: 0x173E19C Offset: 0x173E19C VA: 0x173E19C
	public static void unloadCommandSpellAnyVoice() { }

	// RVA: 0x173E1F0 Offset: 0x173E1F0 VA: 0x173E1F0
	public void unloadCommandSpellAnyVoiceLocal() { }

	// RVA: 0x173E3C0 Offset: 0x173E3C0 VA: 0x173E3C0
	public static string getActorFolderNameFromDisp(int svtId, int displimitCount) { }

	// RVA: 0x173E4AC Offset: 0x173E4AC VA: 0x173E4AC
	public static string getActorFolderName(int svtId, int limitCount) { }

	// RVA: 0x173E560 Offset: 0x173E560 VA: 0x173E560
	public static string getActorFolderName(int svtId) { }

	// RVA: 0x173E600 Offset: 0x173E600 VA: 0x173E600
	public static void preloadBattleActor(ServantAssetArgs args, bool isForce = False) { }

	// RVA: 0x173D278 Offset: 0x173D278 VA: 0x173D278
	public void preloadBattleActorlocal(int svtId, int limitCount, int appearanceId = 0, bool isForce = False) { }

	// RVA: 0x173E6C4 Offset: 0x173E6C4 VA: 0x173E6C4
	public string GetPreloadBattleActorFolderName(int svtId, int limitCount, int appearanceId = 0, bool isForce = False) { }

	// RVA: 0x173E7B0 Offset: 0x173E7B0 VA: 0x173E7B0
	public bool ExistPreloadBattleActor(int svtId, int limitCount, int appearanceId = 0, bool isForce = False) { }

	// RVA: 0x173E850 Offset: 0x173E850 VA: 0x173E850
	public static GameObject loadBattleActor(GameObject parent, int svtId, int limitCount, bool isForce = False) { }

	// RVA: 0x173E8DC Offset: 0x173E8DC VA: 0x173E8DC
	private GameObject loadBattleActorlocal(GameObject parent, int svtId, int limitCount, bool isForce = False) { }

	// RVA: 0x173EB70 Offset: 0x173EB70 VA: 0x173EB70
	public static void unloadBattleActor(ServantAssetArgs args) { }

	// RVA: 0x173D6E8 Offset: 0x173D6E8 VA: 0x173D6E8
	public void unloadBattleActorlocal(int svtId, int limitCount, int appearanceId) { }

	// RVA: 0x173EC24 Offset: 0x173EC24 VA: 0x173EC24
	private static Func<Shader, Shader, Shader> GetReplaceDeadShaderFunc(GameObject obj) { }

	// RVA: 0x173EDBC Offset: 0x173EDBC VA: 0x173EDBC
	private static Func<Shader, Shader, Shader> GetReplaceChocoShaderFunc(GameObject obj) { }

	// RVA: 0x173EF54 Offset: 0x173EF54 VA: 0x173EF54
	public static void changeDeadShader(GameObject obj) { }

	// RVA: 0x173F7C0 Offset: 0x173F7C0 VA: 0x173F7C0
	public static void changeChocoDeadShader(GameObject obj) { }

	// RVA: 0x17400A0 Offset: 0x17400A0 VA: 0x17400A0
	public static void changeChocoSahder(GameObject obj) { }

	// RVA: 0x17405F4 Offset: 0x17405F4 VA: 0x17405F4
	public static TextAsset loadAnimEvents(int svtId, int limitCount, bool isForce = False) { }

	// RVA: 0x1740670 Offset: 0x1740670 VA: 0x1740670
	public TextAsset loadAnimEventslocal(int svtId, int limitCount, bool isForce) { }

	// RVA: 0x1740748 Offset: 0x1740748 VA: 0x1740748
	public static GameObject loadNoblePhantasmEffect(int treasureDeviceId, int limit, string name) { }

	// RVA: 0x17407C4 Offset: 0x17407C4 VA: 0x17407C4
	private GameObject loadNoblePhantasmEffectlocal(int treasureDeviceId, int limit, string name) { }

	// RVA: 0x17409CC Offset: 0x17409CC VA: 0x17409CC
	public static GameObject loadActorEffectFromActor(int svtId, int limitCount, int weapongroup, string name) { }

	// RVA: 0x1740A48 Offset: 0x1740A48 VA: 0x1740A48
	private GameObject loadActorEffectlocalFromActor(int svtId, int limitCount, int weapongroup, string name) { }

	// RVA: 0x1740B0C Offset: 0x1740B0C VA: 0x1740B0C
	public static GameObject loadEffect(string name, int weapongroup, int effectFolder) { }

	// RVA: 0x1740B88 Offset: 0x1740B88 VA: 0x1740B88
	public GameObject loadEffectlocal(string name, int weapongroup, int effectFolder) { }

	// RVA: 0x1740ED8 Offset: 0x1740ED8 VA: 0x1740ED8
	public static GameObject loadCommonEffect(string name) { }

	// RVA: 0x1740C3C Offset: 0x1740C3C VA: 0x1740C3C
	public GameObject loadCommonEffectlocal(string name) { }

	// RVA: 0x173C780 Offset: 0x173C780 VA: 0x173C780
	public static void preloadWeaponEffect(int weapongroup, int effectFolder) { }

	// RVA: 0x1740F34 Offset: 0x1740F34 VA: 0x1740F34
	public static GameObject loadWeaponGroupEffect(string name, int weapongroup, int effectFolder) { }

	// RVA: 0x1740D48 Offset: 0x1740D48 VA: 0x1740D48
	public GameObject loadWeaponGroupEffectlocal(string name, int weapongroup, int effectFolder) { }

	// RVA: 0x173CD1C Offset: 0x173CD1C VA: 0x173CD1C
	public static void unloadWeaponGroupEffect(int weapongroup, int effectFolder) { }

	// RVA: 0x1740FA8 Offset: 0x1740FA8 VA: 0x1740FA8
	public void unloadWeaponGroupEffectlocal(int weapongroup, int effectFolder) { }

	// RVA: 0x1741138 Offset: 0x1741138 VA: 0x1741138
	public static string[] preloadBattleCommonEffect(int[] effectIdList) { }

	// RVA: 0x174119C Offset: 0x174119C VA: 0x174119C
	public string[] preloadBattleCommonEffectLocal(int[] effectIdList) { }

	// RVA: 0x174126C Offset: 0x174126C VA: 0x174126C
	public static GameObject loadBattleCommonEffect(string path, string name) { }

	// RVA: 0x17412D8 Offset: 0x17412D8 VA: 0x17412D8
	public GameObject loadBattleCommonEffectLocal(string path, string name) { }

	// RVA: 0x17413AC Offset: 0x17413AC VA: 0x17413AC
	public static void unloadTargetPathAssets(string[] pathList) { }

	// RVA: 0x1741410 Offset: 0x1741410 VA: 0x1741410
	public void unloadTargetPathAssetsLocal(string[] pathList) { }

	// RVA: 0x1741488 Offset: 0x1741488 VA: 0x1741488
	public void unloadTargetPathAssetLocal(string path) { }

	// RVA: 0x174158C Offset: 0x174158C VA: 0x174158C
	protected string getSkillCutInPath(int cutInId) { }

	// RVA: 0x174162C Offset: 0x174162C VA: 0x174162C
	protected int getSkillCutInId(BattleSkillInfoData skillInfo) { }

	// RVA: 0x174164C Offset: 0x174164C VA: 0x174164C
	public static void preloadSkillCutIn(List<BattleSkillInfoData> skillInfoList) { }

	// RVA: 0x17416B0 Offset: 0x17416B0 VA: 0x17416B0
	public void preloadSkillCutInLocal(List<BattleSkillInfoData> skillInfoList) { }

	// RVA: 0x1741768 Offset: 0x1741768 VA: 0x1741768
	public void preloadSkillCutInLocal(BattleSkillInfoData skillInfo) { }

	// RVA: 0x17417C0 Offset: 0x17417C0 VA: 0x17417C0
	public static void loadSkillCutIn(BattleSkillInfoData skillInfo, AssetLoader.LoadEndDataHandler callback) { }

	// RVA: 0x174182C Offset: 0x174182C VA: 0x174182C
	public void loadSkillCutInLocal(BattleSkillInfoData skillInfo, AssetLoader.LoadEndDataHandler callback) { }

	// RVA: 0x17418D4 Offset: 0x17418D4 VA: 0x17418D4
	public static void unloadSkillCutIn(BattleSkillInfoData skillInfo) { }

	// RVA: 0x1741938 Offset: 0x1741938 VA: 0x1741938
	public void unloadSkillCutInLocal(BattleSkillInfoData skillInfo) { }

	// RVA: 0x173C6B0 Offset: 0x173C6B0 VA: 0x173C6B0
	public static void preloadActorMotion(int weapongroup) { }

	// RVA: 0x1741990 Offset: 0x1741990 VA: 0x1741990
	public static GameObject loadActorMotion(GameObject parent, int svtId, int weapongroup) { }

	// RVA: 0x1741A04 Offset: 0x1741A04 VA: 0x1741A04
	private GameObject loadActorMotionlocal(GameObject parent, int svtId, int weapongroup) { }

	// RVA: 0x173CCB8 Offset: 0x173CCB8 VA: 0x173CCB8
	public static void unloadActorMotion(int weapongroup) { }

	// RVA: 0x1741C94 Offset: 0x1741C94 VA: 0x1741C94
	public void unloadActorMotionlocal(int weapongroup) { }

	// RVA: 0x1741DC4 Offset: 0x1741DC4 VA: 0x1741DC4
	public static SePlayer playBattleVoice(int svtId, int limit, int overwriteSvtVoiceId, string voiceTypeId, float volume, Action callback, int uniqueId = -1, bool isNp = False) { }

	// RVA: 0x1741E94 Offset: 0x1741E94 VA: 0x1741E94
	public SePlayer playBattleVoicelocal(int svtId, int limit, int overwriteSvtVoiceId, string voiceTypeId, float volume, Action callback, int uniqueId = -1, string targetFileName, bool isNp = False) { }

	// RVA: 0x1742234 Offset: 0x1742234 VA: 0x1742234
	public string GetPrefixVoiceId(int servantId, int limitCount, string voiceId) { }

	// RVA: 0x1742300 Offset: 0x1742300 VA: 0x1742300
	public void EndPlaySe() { }

	// RVA: 0x1742304 Offset: 0x1742304 VA: 0x1742304
	public static SePlayer playBattleVoiceSe(int svtId, int limit, int overwriteSvtVoiceId, string fileName, float volume) { }

	// RVA: 0x17423A0 Offset: 0x17423A0 VA: 0x17423A0
	public SePlayer playBattleVoiceSelocal(int svtId, int limit, int overwriteSvtVoiceId, string targetFileName, float volume) { }

	// RVA: 0x17424D0 Offset: 0x17424D0 VA: 0x17424D0
	public static bool ExistsBattleVoice(int svtId, int limit, int overwriteSvtVoiceId, Voice.BATTLE type) { }

	// RVA: 0x174255C Offset: 0x174255C VA: 0x174255C
	public bool ExistsBattleVoiceLocal(int svtId, int limit, int overwriteSvtVoiceId, Voice.BATTLE type) { }

	// RVA: 0x17426F4 Offset: 0x17426F4 VA: 0x17426F4
	public static bool checkBattleVoice(int svtId, int limit, int overwriteSvtVoiceId, string voiceTypeId, bool isNp = False) { }

	// RVA: 0x1742788 Offset: 0x1742788 VA: 0x1742788
	public bool checkBattleVoicelocal(int svtId, int limit, int overwriteSvtVoiceId, string voiceTypeId, bool isNp = False) { }

	// RVA: 0x1742944 Offset: 0x1742944 VA: 0x1742944
	public static string GetLastVoiceType(int uniqueId) { }

	// RVA: 0x17429A8 Offset: 0x17429A8 VA: 0x17429A8
	public string GetLastVoiceTypeLocal(int uniqueId) { }

	// RVA: 0x1742A78 Offset: 0x1742A78 VA: 0x1742A78
	public static void StopVoice(int uniqueId) { }

	// RVA: 0x1742ADC Offset: 0x1742ADC VA: 0x1742ADC
	public void localStopVoice(int uniqueId) { }

	// RVA: 0x1742BA0 Offset: 0x1742BA0 VA: 0x1742BA0
	public static void LoadNoblePhantasm(GameObject parent, int svtId, int limitCount, int treasureDvcId, int treasureDvcLv, ServantAssetLoadManager.onGameObjectLoadComplete callback) { }

	// RVA: 0x1742C54 Offset: 0x1742C54 VA: 0x1742C54
	public void loadNoblePhantasm(GameObject parent, int svtId, int limitCount, int treasureDvcId, int treasureDvcLv, ServantAssetLoadManager.onGameObjectLoadComplete callback) { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8D84 Offset: 0xCC8D84 VA: 0xCC8D84
	// RVA: 0x1742C80 Offset: 0x1742C80 VA: 0x1742C80
	private IEnumerator loadNoblePhantasmCoroutine(GameObject parent, int svtId, int limitCount, int treasureDvcId, int treasureDvcLv, ServantAssetLoadManager.onGameObjectLoadComplete callback) { }

	// RVA: 0x1742DA4 Offset: 0x1742DA4 VA: 0x1742DA4
	private void LoadBg(USFGOChangeBgEvent[] bgList, Action callback) { }

	[DebuggerHiddenAttribute] // RVA: 0xCC8D94 Offset: 0xCC8D94 VA: 0xCC8D94
	// RVA: 0x1742DD0 Offset: 0x1742DD0 VA: 0x1742DD0
	private IEnumerator GetAheadBg(USFGOChangeBgEvent[] bgList, Action callback) { }

	// RVA: 0x1742E84 Offset: 0x1742E84 VA: 0x1742E84
	public void releaseNoblePhantasm() { }

	// RVA: 0x1743070 Offset: 0x1743070 VA: 0x1743070
	public void UnloadAllAsset() { }

	// RVA: 0x17431A8 Offset: 0x17431A8 VA: 0x17431A8
	public GameObject createShadowEffect(int tp) { }

	// RVA: 0x1743348 Offset: 0x1743348 VA: 0x1743348
	public void DebugPrint(AssetData data) { }

	// RVA: 0x17433B8 Offset: 0x17433B8 VA: 0x17433B8
	public static void unloadAssets() { }

	// RVA: 0x1743414 Offset: 0x1743414 VA: 0x1743414
	public void unloadAssetsLocal() { }

	// RVA: 0x17435AC Offset: 0x17435AC VA: 0x17435AC
	public static string getCameraActionPath(int cameraId) { }

	// RVA: 0x173CA1C Offset: 0x173CA1C VA: 0x173CA1C
	public static void preloadCameraAction(int cameraId) { }

	// RVA: 0x174364C Offset: 0x174364C VA: 0x174364C
	public static GameObject loadCameraAction(int cameraId, Transform parent) { }

	// RVA: 0x17436D8 Offset: 0x17436D8 VA: 0x17436D8
	private GameObject loadCameraActionlocal(int cameraId, Transform parent) { }

	// RVA: 0x173CD90 Offset: 0x173CD90 VA: 0x173CD90
	public static void unloadCameraAction(int cameraId) { }

	// RVA: 0x1743960 Offset: 0x1743960 VA: 0x1743960
	public void unloadCameraActionlocal(int cameraId) { }

	// RVA: 0x17439DC Offset: 0x17439DC VA: 0x17439DC
	public static UITexture loadCommandCodeTexture(UITexture tex, long userCommandCodeId) { }

	// RVA: 0x1743BAC Offset: 0x1743BAC VA: 0x1743BAC
	public static UITexture loadCommandCodeTexture(UITexture tex, int commandCodeId) { }

	// RVA: 0x1743C20 Offset: 0x1743C20 VA: 0x1743C20
	private UITexture loadCommandCodeTextureLocal(UITexture tex, int commandCodeId) { }

	// RVA: 0x1743A50 Offset: 0x1743A50 VA: 0x1743A50
	private UITexture loadCommandCodeTextureLocal(UITexture tex, long userCommandCodeId) { }

	// RVA: 0x173D4C4 Offset: 0x173D4C4 VA: 0x173D4C4
	private void preloadCommandCodeTextureLocal(int[] commandCodeIds) { }

	// RVA: 0x173D904 Offset: 0x173D904 VA: 0x173D904
	private void UnloadCommandCodeTextureLocal(int[] commandCodeIds) { }

	// RVA: 0x1743DB0 Offset: 0x1743DB0 VA: 0x1743DB0
	public static string GetCommandCodeFolderName(int commandCodeId) { }

	// RVA: 0x173CFD4 Offset: 0x173CFD4 VA: 0x173CFD4
	private bool IsKeepAssetAvailable() { }

	// RVA: 0x1743E50 Offset: 0x1743E50 VA: 0x1743E50
	public void EndRetryTransition() { }

	// RVA: 0x1744064 Offset: 0x1744064 VA: 0x1744064
	public bool CheckLoadList(string path) { }

	// RVA: 0x17440D4 Offset: 0x17440D4 VA: 0x17440D4
	public static int GetNPSeqIdFromCachedAssetName() { }

	// RVA: 0x1744190 Offset: 0x1744190 VA: 0x1744190
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8DA4 Offset: 0xCC8DA4 VA: 0xCC8DA4
	// RVA: 0x174424C Offset: 0x174424C VA: 0x174424C
	private void <preloadServantVoicelocal>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8DB4 Offset: 0xCC8DB4 VA: 0xCC8DB4
	// RVA: 0x174425C Offset: 0x174425C VA: 0x174425C
	private void <preloadSkillAnyVoiceLocal>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8DC4 Offset: 0xCC8DC4 VA: 0xCC8DC4
	// RVA: 0x174426C Offset: 0x174426C VA: 0x174426C
	private void <preloadCommandSpellAnyVoiceLocal>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8DD4 Offset: 0xCC8DD4 VA: 0xCC8DD4
	// RVA: 0x174427C Offset: 0x174427C VA: 0x174427C
	private static Shader <GetReplaceDeadShaderFunc>m__3(Shader targetShader, Shader defaultShader) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8DE4 Offset: 0xCC8DE4 VA: 0xCC8DE4
	// RVA: 0x1744284 Offset: 0x1744284 VA: 0x1744284
	private static Shader <GetReplaceChocoShaderFunc>m__4(Shader targetShader, Shader defaultShader) { }
}

// Namespace: 
public enum ServantAssetLoadManager.RetryStatus // TypeDefIndex: 6298
{
	// Fields
	public int value__; // 0x0
	public const ServantAssetLoadManager.RetryStatus None = 0;
	public const ServantAssetLoadManager.RetryStatus RetryButtonPressed = 1;
	public const ServantAssetLoadManager.RetryStatus SupporterListSelected = 2;
	public const ServantAssetLoadManager.RetryStatus Forbid = 3;
	public const ServantAssetLoadManager.RetryStatus RetryBattleStarted = 4;
}

// Namespace: 
public sealed class ServantAssetLoadManager.onGameObjectLoadComplete : MulticastDelegate // TypeDefIndex: 6299
{
	// Methods

	// RVA: 0x17457F8 Offset: 0x17457F8 VA: 0x17457F8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1744FEC Offset: 0x1744FEC VA: 0x1744FEC Slot: 11
	public virtual void Invoke(GameObject obj) { }

	// RVA: 0x1745808 Offset: 0x1745808 VA: 0x1745808 Slot: 12
	public virtual IAsyncResult BeginInvoke(GameObject obj, AsyncCallback callback, object object) { }

	// RVA: 0x174582C Offset: 0x174582C VA: 0x174582C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42774 Offset: 0xC42774 VA: 0xC42774
private sealed class ServantAssetLoadManager.<playBattleVoicelocal>c__AnonStorey2 // TypeDefIndex: 6300
{
	// Fields
	internal Action callback; // 0x10
	internal ServantAssetLoadManager $this; // 0x18

	// Methods

	// RVA: 0x174222C Offset: 0x174222C VA: 0x174222C
	public void .ctor() { }

	// RVA: 0x17457B4 Offset: 0x17457B4 VA: 0x17457B4
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42784 Offset: 0xC42784 VA: 0xC42784
private sealed class ServantAssetLoadManager.<loadNoblePhantasmCoroutine>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6301
{
	// Fields
	internal int treasureDvcId; // 0x10
	internal TreasureDvcEntity <treasureEnt>__0; // 0x18
	internal int limitCount; // 0x20
	internal int <seqId>__1; // 0x24
	internal string <nobleDataPath>__0; // 0x28
	internal int svtId; // 0x30
	internal GameObject parent; // 0x38
	internal List<int> <effectIdList>__2; // 0x40
	internal TreasureDvcLvMaster <treasureLvMst>__2; // 0x48
	internal int treasureDvcLv; // 0x50
	internal TreasureDvcLvEntity <treasureLvEnt>__2; // 0x58
	internal USFGOActorBattleActionEvent[] <actionEvents>__2; // 0x60
	internal string[] <loadedPathList>__2; // 0x68
	internal ServantAssetLoadManager.onGameObjectLoadComplete callback; // 0x70
	internal ServantAssetLoadManager $this; // 0x78
	internal object $current; // 0x80
	internal bool $disposing; // 0x88
	internal int $PC; // 0x8C
	private ServantAssetLoadManager.<loadNoblePhantasmCoroutine>c__Iterator0.<loadNoblePhantasmCoroutine>c__AnonStorey3 $locvar2; // 0x90

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD8960 Offset: 0xCD8960 VA: 0xCD8960
	// RVA: 0x1742D9C Offset: 0x1742D9C VA: 0x1742D9C
	public void .ctor() { }

	// RVA: 0x1744770 Offset: 0x1744770 VA: 0x1744770 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8970 Offset: 0xCD8970 VA: 0xCD8970
	// RVA: 0x174538C Offset: 0x174538C VA: 0x174538C Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8980 Offset: 0xCD8980 VA: 0xCD8980
	// RVA: 0x1745394 Offset: 0x1745394 VA: 0x1745394 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD8990 Offset: 0xCD8990 VA: 0xCD8990
	// RVA: 0x174539C Offset: 0x174539C VA: 0x174539C Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD89A0 Offset: 0xCD89A0 VA: 0xCD89A0
	// RVA: 0x17453B0 Offset: 0x17453B0 VA: 0x17453B0 Slot: 6
	public void Reset() { }
}

// Namespace: 
private sealed class ServantAssetLoadManager.<loadNoblePhantasmCoroutine>c__Iterator0.<loadNoblePhantasmCoroutine>c__AnonStorey3 // TypeDefIndex: 6302
{
	// Fields
	internal bool isNext; // 0x10
	internal string sequencePath; // 0x18
	internal GameObject sequence; // 0x20
	internal GameObject parent; // 0x28
	internal ServantAssetLoadManager.<loadNoblePhantasmCoroutine>c__Iterator0 <>f__ref$0; // 0x30

	// Methods

	// RVA: 0x1744FE4 Offset: 0x1744FE4 VA: 0x1744FE4
	public void .ctor() { }

	// RVA: 0x1745418 Offset: 0x1745418 VA: 0x1745418
	internal void <>m__0(AssetData data) { }

	// RVA: 0x174546C Offset: 0x174546C VA: 0x174546C
	internal void <>m__1(AssetData assetData) { }

	// RVA: 0x17457A8 Offset: 0x17457A8 VA: 0x17457A8
	internal void <>m__2() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42794 Offset: 0xC42794 VA: 0xC42794
private sealed class ServantAssetLoadManager.<GetAheadBg>c__Iterator1 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 6303
{
	// Fields
	internal USFGOChangeBgEvent[] bgList; // 0x10
	internal List<USFGOChangeBgEvent> <bgAheadList>__1; // 0x18
	internal USFGOChangeBgEvent[] $locvar0; // 0x20
	internal int $locvar1; // 0x28
	internal List.Enumerator<USFGOChangeBgEvent> $locvar2; // 0x30
	internal Action callback; // 0x48
	internal ServantAssetLoadManager $this; // 0x50
	internal object $current; // 0x58
	internal bool $disposing; // 0x60
	internal int $PC; // 0x64

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xCD89B0 Offset: 0xCD89B0 VA: 0xCD89B0
	// RVA: 0x1742E7C Offset: 0x1742E7C VA: 0x1742E7C
	public void .ctor() { }

	// RVA: 0x174428C Offset: 0x174428C VA: 0x174428C Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD89C0 Offset: 0xCD89C0 VA: 0xCD89C0
	// RVA: 0x1744664 Offset: 0x1744664 VA: 0x1744664 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD89D0 Offset: 0xCD89D0 VA: 0xCD89D0
	// RVA: 0x174466C Offset: 0x174466C VA: 0x174466C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD89E0 Offset: 0xCD89E0 VA: 0xCD89E0
	// RVA: 0x1744674 Offset: 0x1744674 VA: 0x1744674 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xCD89F0 Offset: 0xCD89F0 VA: 0xCD89F0
	// RVA: 0x1744688 Offset: 0x1744688 VA: 0x1744688 Slot: 6
	public void Reset() { }

	// RVA: 0x17446F0 Offset: 0x17446F0 VA: 0x17446F0
	internal void <>m__0(AssetData data) { }
}

// Namespace: 
public class ShiningIconManager : SingletonMonoBehaviour<ShiningIconManager> // TypeDefIndex: 6304
{
	// Fields
	[SerializeField] // RVA: 0xC536B0 Offset: 0xC536B0 VA: 0xC536B0
	protected UIAtlas shiningIconAtlas; // 0x18

	// Methods

	// RVA: 0x133686C Offset: 0x133686C VA: 0x133686C
	public void .ctor() { }

	// RVA: 0x13368BC Offset: 0x13368BC VA: 0x13368BC
	public static void Reboot() { }

	// RVA: 0x13368C0 Offset: 0x13368C0 VA: 0x13368C0
	public static void Initialize() { }
}

// Namespace: 
public enum SpawnerOverflowPolicy // TypeDefIndex: 6305
{
	// Fields
	public int value__; // 0x0
	public const SpawnerOverflowPolicy Instantiate = 0;
	public const SpawnerOverflowPolicy Recycle = 1;
}

// Namespace: 
public class Spawner : SingletonMonoBehaviour<Spawner> // TypeDefIndex: 6306
