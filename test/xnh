	// RVA: 0x16109D8 Offset: 0x16109D8 VA: 0x16109D8 Slot: 15
	protected override void OnInit() { }

	// RVA: 0x1610A5C Offset: 0x1610A5C VA: 0x1610A5C Slot: 20
	protected override void OnStart() { }

	// RVA: 0x1610E4C Offset: 0x1610E4C VA: 0x1610E4C Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x1610EDC Offset: 0x1610EDC VA: 0x1610EDC Slot: 40
	public override Color GetTweenColor() { }

	// RVA: 0x1610A00 Offset: 0x1610A00 VA: 0x1610A00
	private void InitBaseScale() { }

	// RVA: 0x1610EE4 Offset: 0x1610EE4 VA: 0x1610EE4
	public void ClearImage() { }

	// RVA: 0x1610B48 Offset: 0x1610B48 VA: 0x1610B48
	public void SetImage(Texture2D tex) { }

	// RVA: 0x161127C Offset: 0x161127C VA: 0x161127C
	public void SetAssetImage(string assetName, Action callback) { }

	// RVA: 0x161152C Offset: 0x161152C VA: 0x161152C
	public void SetAssetImageBackFS(string assetName, Action callback) { }

	// RVA: 0x1611568 Offset: 0x1611568 VA: 0x1611568
	private void Resize(string assetName) { }

	// RVA: 0x1611AB8 Offset: 0x1611AB8 VA: 0x1611AB8
	public void SetSceneMode(string assetName, ScriptManager.SCENE_MODE sceneMode) { }

	// RVA: 0x1611F30 Offset: 0x1611F30 VA: 0x1611F30
	public void SetAssetImage(string assetName, string assetLabel, Action callback) { }

	// RVA: 0x1611F40 Offset: 0x1611F40 VA: 0x1611F40
	public void SetAssetImage2(string assetName, string assetLabel, Action callback) { }

	// RVA: 0x1611290 Offset: 0x1611290 VA: 0x1611290
	protected void LoadAssetTexture(string assetName, string assetLabel, bool isUseAlphaImage, Action callback) { }

	// RVA: 0x16122EC Offset: 0x16122EC VA: 0x16122EC
	protected void EndLoad(AssetData data) { }

	// RVA: 0x1611020 Offset: 0x1611020 VA: 0x1611020
	protected void SetTexture(Texture2D tex) { }

	// RVA: 0x1611F50 Offset: 0x1611F50 VA: 0x1611F50
	protected void SetAssetTexture() { }

	// RVA: 0x1610C20 Offset: 0x1610C20 VA: 0x1610C20
	protected void ReScaleUpdate() { }

	// RVA: 0x16123D0 Offset: 0x16123D0 VA: 0x16123D0
	private static void .cctor() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC91464 Offset: 0xC91464 VA: 0xC91464
[AddComponentMenu] // RVA: 0xC91464 Offset: 0xC91464 VA: 0xC91464
public class ExUIUserMeshRenderer : ExUIMeshRenderer // TypeDefIndex: 6369
{
	// Fields
	private Vector3[] baseVertexs; // 0x1E8
	private Vector2[] baseUvs; // 0x1F0
	private int[] baseTriangles; // 0x1F8
	private bool isChangeMesh; // 0x200
	private bool isUseUserMesh; // 0x201

	// Methods

	// RVA: 0x1612A04 Offset: 0x1612A04 VA: 0x1612A04
	public void .ctor() { }

	// RVA: 0x1612A08 Offset: 0x1612A08 VA: 0x1612A08
	public void SetUserMesh(Vector3[] vertexs, Vector2[] uvs, int[] triangles) { }

	// RVA: 0x1612A48 Offset: 0x1612A48 VA: 0x1612A48
	public void ClearUserMesh() { }

	// RVA: 0x1612AA4 Offset: 0x1612AA4 VA: 0x1612AA4
	private bool HaveUserMesh() { }

	// RVA: 0x1612ACC Offset: 0x1612ACC VA: 0x1612ACC Slot: 43
	protected override void ReScale() { }
}

// Namespace: 
public class FBXAnimclips // TypeDefIndex: 6370
{
	// Fields
	public static readonly float animFps; // 0x0

	// Methods

	// RVA: 0x1613330 Offset: 0x1613330 VA: 0x1613330
	public void .ctor() { }

	// RVA: 0x1613338 Offset: 0x1613338 VA: 0x1613338
	public void loadAnimationEvents(int svtId, int level) { }

	// RVA: 0x1613524 Offset: 0x1613524 VA: 0x1613524
	public void inAttachAnimationEvents(GameObject gameObject, TextAsset data, int level) { }

	// RVA: 0x1613528 Offset: 0x1613528 VA: 0x1613528
	private static void .cctor() { }
}

// Namespace: 
public class FlashingIconComponent : BaseMonoBehaviour // TypeDefIndex: 6371
{
	// Fields
	[SerializeField] // RVA: 0xCBFD70 Offset: 0xCBFD70 VA: 0xCBFD70
	protected UIWidget widget; // 0x18

	// Methods

	// RVA: 0x190373C Offset: 0x190373C VA: 0x190373C
	public void .ctor() { }

	// RVA: 0x1903744 Offset: 0x1903744 VA: 0x1903744
	protected void Awake() { }

	// RVA: 0x1903778 Offset: 0x1903778 VA: 0x1903778
	protected void OnDestroy() { }

	// RVA: 0x190377C Offset: 0x190377C VA: 0x190377C
	public void Clear() { }

	// RVA: 0x1903A4C Offset: 0x1903A4C VA: 0x1903A4C
	public void Set() { }

	// RVA: 0x18F9060 Offset: 0x18F9060 VA: 0x18F9060
	public void Set(bool isDisp) { }

	// RVA: 0x1903C94 Offset: 0x1903C94 VA: 0x1903C94
	public void Set(float cycleTime) { }

	// RVA: 0x1903DAC Offset: 0x1903DAC VA: 0x1903DAC
	public void SetFast() { }

	// RVA: 0x1903EB4 Offset: 0x1903EB4 VA: 0x1903EB4
	public void SetFast(bool isDisp) { }

	// RVA: 0x1903EC0 Offset: 0x1903EC0 VA: 0x1903EC0
	public bool UpdateIcon(float alpha) { }
}

// Namespace: 
public class FlipEffectUpdater : MonoBehaviour // TypeDefIndex: 6372
{
	// Fields
	public Transform ConnectTarget; // 0x18
	private Transform mTrans; // 0x20

	// Methods

	// RVA: 0x190424C Offset: 0x190424C VA: 0x190424C
	public void .ctor() { }

	// RVA: 0x1904254 Offset: 0x1904254 VA: 0x1904254
	private void Start() { }

	// RVA: 0x190427C Offset: 0x190427C VA: 0x190427C
	private void LateUpdate() { }

	// RVA: 0x1904280 Offset: 0x1904280 VA: 0x1904280
	public void OnLateUpdate() { }
}

// Namespace: 
public class FollowObjectPositionComponent : MonoBehaviour // TypeDefIndex: 6373
{
	// Fields
	private GameObject TargetObj; // 0x18
	private bool IsInversion; // 0x20

	// Methods

	// RVA: 0x1904AC4 Offset: 0x1904AC4 VA: 0x1904AC4
	public void .ctor() { }

	// RVA: 0x1904ACC Offset: 0x1904ACC VA: 0x1904ACC
	public void SetObj(GameObject obj, bool _IsInversion = False) { }

	// RVA: 0x1904ADC Offset: 0x1904ADC VA: 0x1904ADC
	private void Update() { }
}

// Namespace: 
public class FOVSync : MonoBehaviour // TypeDefIndex: 6374
{
	// Fields
	public Camera observeCamera; // 0x18

	// Methods

	// RVA: 0x1615624 Offset: 0x1615624 VA: 0x1615624
	public void .ctor() { }

	// RVA: 0x161562C Offset: 0x161562C VA: 0x161562C
	private void Start() { }

	// RVA: 0x1615630 Offset: 0x1615630 VA: 0x1615630
	private void LateUpdate() { }
}

// Namespace: 
public class FriendIconComponent : MonoBehaviour // TypeDefIndex: 6375
{
	// Fields
	private static readonly string BASE_SPR_DEFAULT_NAME; // 0x0
	[SerializeField] // RVA: 0xCBFD80 Offset: 0xCBFD80 VA: 0xCBFD80
	protected ServantFaceIconComponent servantFaceIcon; // 0x18
	[SerializeField] // RVA: 0xCBFD90 Offset: 0xCBFD90 VA: 0xCBFD90
	protected UILabel playerNameLabel; // 0x20
	[SerializeField] // RVA: 0xCBFDA0 Offset: 0xCBFDA0 VA: 0xCBFDA0
	protected UIIconLabel playerLevelIconLabel; // 0x28
	[SerializeField] // RVA: 0xCBFDB0 Offset: 0xCBFDB0 VA: 0xCBFDB0
	protected UIRangeLabel servantNameLabel; // 0x30
	[SerializeField] // RVA: 0xCBFDC0 Offset: 0xCBFDC0 VA: 0xCBFDC0
	protected UIRangeLabel svtNpTitleLabel; // 0x38
	[SerializeField] // RVA: 0xCBFDD0 Offset: 0xCBFDD0 VA: 0xCBFDD0
	protected ServantNpCommandCardComponent svtNpCommandCard; // 0x40
	[SerializeField] // RVA: 0xCBFDE0 Offset: 0xCBFDE0 VA: 0xCBFDE0
	protected UILabel loginDataLabel; // 0x48
	[SerializeField] // RVA: 0xCBFDF0 Offset: 0xCBFDF0 VA: 0xCBFDF0
	protected GameObject[] skillBaseList; // 0x50
	[SerializeField] // RVA: 0xCBFE00 Offset: 0xCBFE00 VA: 0xCBFE00
	protected SkillIconComponent[] skillIconList; // 0x58
	[SerializeField] // RVA: 0xCBFE10 Offset: 0xCBFE10 VA: 0xCBFE10
	protected UIIconLabel[] skillLevelIconLabelList; // 0x60
	[SerializeField] // RVA: 0xCBFE20 Offset: 0xCBFE20 VA: 0xCBFE20
	protected UICommonButton[] skillButtonList; // 0x68
	[SerializeField] // RVA: 0xCBFE30 Offset: 0xCBFE30 VA: 0xCBFE30
	protected ServantCommandCardListComponent svtCommandCardList; // 0x70
	[SerializeField] // RVA: 0xCBFE40 Offset: 0xCBFE40 VA: 0xCBFE40
	protected UICommonButton baseButton; // 0x78
	[SerializeField] // RVA: 0xCBFE50 Offset: 0xCBFE50 VA: 0xCBFE50
	protected UISprite baseSpr; // 0x80
	[SerializeField] // RVA: 0xCBFE60 Offset: 0xCBFE60 VA: 0xCBFE60
	protected UserGradeComponent gradeIcon; // 0x88
	[SerializeField] // RVA: 0xCBFE70 Offset: 0xCBFE70 VA: 0xCBFE70
	protected UISprite pushSprite; // 0x90
	protected OtherUserGameEntity userGameEntity; // 0x98
	protected int classPos; // 0xA0
	private Follower.Type followerType; // 0xA4
	private OtherUserGameEntity.ReturnSupportServantType displayServantType; // 0xA8

	// Methods

	// RVA: 0x1CB8C58 Offset: 0x1CB8C58 VA: 0x1CB8C58
	public void .ctor() { }

	// RVA: 0x1CB8D20 Offset: 0x1CB8D20 VA: 0x1CB8D20
	public void Set(OtherUserGameEntity userGameEntity, bool isUseServantStatus, int classPos, OtherUserGameEntity.ReturnSupportServantType displayServantType, Follower.Type ftype = 0) { }

	// RVA: 0x1CB9DEC Offset: 0x1CB9DEC VA: 0x1CB9DEC
	public void OnClickServantStatus() { }

	// RVA: 0x1CB9F30 Offset: 0x1CB9F30 VA: 0x1CB9F30
	protected void EndShowServant(bool isDecide) { }

	// RVA: 0x1CB9F94 Offset: 0x1CB9F94 VA: 0x1CB9F94
	protected void OpenSkillInfoDialog(int skillIndex) { }

	// RVA: 0x1CBA33C Offset: 0x1CBA33C VA: 0x1CBA33C
	public void OnClickSkill1() { }

	// RVA: 0x1CBA340 Offset: 0x1CBA340 VA: 0x1CBA340
	public void OnLongPushSkill1() { }

	// RVA: 0x1CBA348 Offset: 0x1CBA348 VA: 0x1CBA348
	public void OnClickSkill2() { }

	// RVA: 0x1CBA34C Offset: 0x1CBA34C VA: 0x1CBA34C
	public void OnLongPushSkill2() { }

	// RVA: 0x1CBA354 Offset: 0x1CBA354 VA: 0x1CBA354
	public void OnClickSkill13() { }

	// RVA: 0x1CBA358 Offset: 0x1CBA358 VA: 0x1CBA358
	public void OnLongPushSkill3() { }

	// RVA: 0x1CBA360 Offset: 0x1CBA360 VA: 0x1CBA360
	public void OnClickSupportInfo() { }

	// RVA: 0x1CBA428 Offset: 0x1CBA428 VA: 0x1CBA428
	public void SelectShowServantEquip(EquipTargetInfo equipInfo, ServantStatusDialog.Kind statusKind) { }

	// RVA: 0x1CBA4E8 Offset: 0x1CBA4E8 VA: 0x1CBA4E8
	protected void EndShowServantEquip(bool isDecide) { }

	// RVA: 0x1CBA58C Offset: 0x1CBA58C VA: 0x1CBA58C
	protected void EndCloseShowServantEquip() { }

	// RVA: 0x1CBA590 Offset: 0x1CBA590 VA: 0x1CBA590
	public void OnLongPushEquip() { }

	// RVA: 0x1CBA75C Offset: 0x1CBA75C VA: 0x1CBA75C
	public void OnClickEquip() { }

	// RVA: 0x1CB9D80 Offset: 0x1CB9D80 VA: 0x1CB9D80
	private int GetTargetDeckId() { }

	// RVA: 0x1CBA760 Offset: 0x1CBA760 VA: 0x1CBA760
	private static void .cctor() { }
}

// Namespace: 
public class IconLabelInfo // TypeDefIndex: 6376
{
	// Fields
	protected IconLabelInfo.IconKind iconKind; // 0x10
	protected int data; // 0x14
	protected int adjustData; // 0x18
	protected int equipData; // 0x1C
	protected long time; // 0x20
	protected bool isHide; // 0x28
	protected bool isMaxHide; // 0x29
	protected int lv; // 0x2C

	// Properties
	public IconLabelInfo.IconKind Kind { get; }
	public int Data { get; }
	public int AdjustData { get; }
	public int EquipData { get; }
	public long TimeData { get; }
	public bool IsHide { get; }
	public bool IsMaxHide { get; }
	public int Lv { get; }

	// Methods

	// RVA: 0x1714E98 Offset: 0x1714E98 VA: 0x1714E98
	public void .ctor() { }

	// RVA: 0x1714EA0 Offset: 0x1714EA0 VA: 0x1714EA0
	public IconLabelInfo.IconKind get_Kind() { }

	// RVA: 0x1714EA8 Offset: 0x1714EA8 VA: 0x1714EA8
	public int get_Data() { }

	// RVA: 0x1714EB0 Offset: 0x1714EB0 VA: 0x1714EB0
	public int get_AdjustData() { }

	// RVA: 0x1714EB8 Offset: 0x1714EB8 VA: 0x1714EB8
	public int get_EquipData() { }

	// RVA: 0x1714EC0 Offset: 0x1714EC0 VA: 0x1714EC0
	public long get_TimeData() { }

	// RVA: 0x1714EC8 Offset: 0x1714EC8 VA: 0x1714EC8
	public bool get_IsHide() { }

	// RVA: 0x1714ED0 Offset: 0x1714ED0 VA: 0x1714ED0
	public bool get_IsMaxHide() { }

	// RVA: 0x1714ED8 Offset: 0x1714ED8 VA: 0x1714ED8
	public int get_Lv() { }

	// RVA: 0x1714EE0 Offset: 0x1714EE0 VA: 0x1714EE0
	public bool IsClear() { }

	// RVA: 0x1714EF0 Offset: 0x1714EF0 VA: 0x1714EF0
	public void Clear() { }

	// RVA: 0x1714F04 Offset: 0x1714F04 VA: 0x1714F04
	public void Set(IconLabelInfo info) { }

	// RVA: 0x1715000 Offset: 0x1715000 VA: 0x1715000
	public void Set(IconLabelInfo.IconKind iconKind, int data = 0, int adjustData = 0, int equipData = 0, bool isHide = False, bool isMaxHide = False, int lv = 0) { }

	// RVA: 0x1715024 Offset: 0x1715024 VA: 0x1715024
	public void SetTime(IconLabelInfo.IconKind iconKind, long time, bool isHide = False, bool isMaxHide = False, int lv = 0) { }

	// RVA: 0x171504C Offset: 0x171504C VA: 0x171504C
	public void SetPurchaseDecision(IconLabelInfo.IconKind iconKind, int price = 0, int holdCount = -1) { }
}

// Namespace: 
public enum IconLabelInfo.IconKind // TypeDefIndex: 6377
{
	// Fields
	public int value__; // 0x0
	public const IconLabelInfo.IconKind CLEAR = 0;
	public const IconLabelInfo.IconKind DATA = 1;
	public const IconLabelInfo.IconKind LEVEL = 2;
	public const IconLabelInfo.IconKind HP = 3;
	public const IconLabelInfo.IconKind HP_COMMA = 4;
	public const IconLabelInfo.IconKind ATK = 5;
	public const IconLabelInfo.IconKind ATK_COMMA = 6;
	public const IconLabelInfo.IconKind COST = 7;
	public const IconLabelInfo.IconKind ID = 8;
	public const IconLabelInfo.IconKind LIMIT_COUNT = 9;
	public const IconLabelInfo.IconKind FREE = 10;
	public const IconLabelInfo.IconKind UNIT = 11;
	public const IconLabelInfo.IconKind STONE_UNIT = 12;
	public const IconLabelInfo.IconKind MANA_UNIT = 13;
	public const IconLabelInfo.IconKind QP_UNIT = 14;
	public const IconLabelInfo.IconKind BANK_UNIT = 15;
	public const IconLabelInfo.IconKind FRIEND_POINT_UNIT = 16;
	public const IconLabelInfo.IconKind FRIEND_RANK_UNIT = 17;
	public const IconLabelInfo.IconKind EVENT_ITEM_UNIT = 18;
	public const IconLabelInfo.IconKind STONE_FRAGMENTS_UNIT = 19;
	public const IconLabelInfo.IconKind ANONYMOUS_UNIT = 20;
	public const IconLabelInfo.IconKind RARE_PRI_UNIT = 21;
	public const IconLabelInfo.IconKind STONE = 22;
	public const IconLabelInfo.IconKind MANA = 23;
	public const IconLabelInfo.IconKind QP = 24;
	public const IconLabelInfo.IconKind BANK = 25;
	public const IconLabelInfo.IconKind FRIEND_POINT = 26;
	public const IconLabelInfo.IconKind EVENT_ITEM = 27;
	public const IconLabelInfo.IconKind STONE_FRAGMENTS = 28;
	public const IconLabelInfo.IconKind ANONYMOUS = 29;
	public const IconLabelInfo.IconKind RARE_PRI = 30;
	public const IconLabelInfo.IconKind GRAIL_FRAGMENTS = 31;
	public const IconLabelInfo.IconKind FRIEND_RANK = 32;
	public const IconLabelInfo.IconKind NP_LEVEL = 33;
	public const IconLabelInfo.IconKind NP_ICON_LEVEL = 34;
	public const IconLabelInfo.IconKind RARITY = 35;
	public const IconLabelInfo.IconKind RARITY_EXCEED = 36;
	public const IconLabelInfo.IconKind AMOUNT = 37;
	public const IconLabelInfo.IconKind ADD_HP = 38;
	public const IconLabelInfo.IconKind ADD_ATK = 39;
	public const IconLabelInfo.IconKind ADD_COST = 40;
	public const IconLabelInfo.IconKind DIFFER_HP = 41;
	public const IconLabelInfo.IconKind DIFFER_ATK = 42;
	public const IconLabelInfo.IconKind DIFFER_COST = 43;
	public const IconLabelInfo.IconKind REINFORCEMENT_HP = 44;
	public const IconLabelInfo.IconKind REINFORCEMENT_ATK = 45;
	public const IconLabelInfo.IconKind EXTENTION_HP = 46;
	public const IconLabelInfo.IconKind EXTENTION_ATK = 47;
	public const IconLabelInfo.IconKind FOLLOWER_SKILL_LEVEL = 48;
	public const IconLabelInfo.IconKind YEAR_DATE = 49;
	public const IconLabelInfo.IconKind ALL_COSTUME = 50;
	public const IconLabelInfo.IconKind HAVE_COSTUME = 51;
	public const IconLabelInfo.IconKind NOT_HAVE_COSTUME = 52;
	public const IconLabelInfo.IconKind NOT_HAVE_RELEASE_ITEM = 53;
	public const IconLabelInfo.IconKind LIMIT_COUNT2 = 54;
	public const IconLabelInfo.IconKind FOLLOWER_FRIEND_POINT = 55;
	public const IconLabelInfo.IconKind NOT_HAVING_SHOP_ITEM_RECEIVE = 56;
	public const IconLabelInfo.IconKind DISP_NO = 57;
}

// Namespace: 
public class ItemIconComponent : BaseMonoBehaviour // TypeDefIndex: 6378
{
	// Fields
	protected static readonly int CHANGE_FONT_COUNT; // 0x0
	protected static readonly int DEFAULT_FONT_SIZE; // 0x4
	protected static readonly int OVER_FIVE_LENGTH; // 0x8
	protected static readonly int EQUIP_ITEM_RARITY; // 0xC
	private static readonly string ASSIST_SPRITE_NAME; // 0x10
	[SerializeField] // RVA: 0xCBFE80 Offset: 0xCBFE80 VA: 0xCBFE80
	protected UISprite backSprite; // 0x18
	[SerializeField] // RVA: 0xCBFE90 Offset: 0xCBFE90 VA: 0xCBFE90
	protected UISprite iconSprite; // 0x20
	[SerializeField] // RVA: 0xCBFEA0 Offset: 0xCBFEA0 VA: 0xCBFEA0
	protected UISprite frameSprite; // 0x28
	[SerializeField] // RVA: 0xCBFEB0 Offset: 0xCBFEB0 VA: 0xCBFEB0
	protected UISprite typeSprite; // 0x30
	[SerializeField] // RVA: 0xCBFEC0 Offset: 0xCBFEC0 VA: 0xCBFEC0
	protected UISprite classSprite; // 0x38
	[SerializeField] // RVA: 0xCBFED0 Offset: 0xCBFED0 VA: 0xCBFED0
	protected UISprite raritySprite; // 0x40
	[SerializeField] // RVA: 0xCBFEE0 Offset: 0xCBFEE0 VA: 0xCBFEE0
	protected UILabel counterLabel; // 0x48
	[SerializeField] // RVA: 0xCBFEF0 Offset: 0xCBFEF0 VA: 0xCBFEF0
	protected ShiningIconComponent svtJoinIcon; // 0x50
	[SerializeField] // RVA: 0xCBFF00 Offset: 0xCBFF00 VA: 0xCBFF00
	protected GameObject possessionRoot; // 0x58
	private int possessionNum; // 0x60
	private static readonly float PossessionLabelWidth; // 0x18
	[SerializeField] // RVA: 0xCBFF10 Offset: 0xCBFF10 VA: 0xCBFF10
	protected UISprite materialTdSprite; // 0x68
	private ItemEntity itemEnt; // 0x70
	private int commandCodeId; // 0x78
	private int svtId; // 0x7C

	// Properties
	public UISprite IconSprite { get; }

	// Methods

	// RVA: 0x171AEC4 Offset: 0x171AEC4 VA: 0x171AEC4
	public void .ctor() { }

	// RVA: 0x171AECC Offset: 0x171AECC VA: 0x171AECC
	public UISprite get_IconSprite() { }

	// RVA: 0x171AED4 Offset: 0x171AED4 VA: 0x171AED4
	protected void Awake() { }

	// RVA: 0x171B000 Offset: 0x171B000 VA: 0x171B000
	public void Clear() { }

	// RVA: 0x171B354 Offset: 0x171B354 VA: 0x171B354
	public void SetItem(int itemId, int count = -1) { }

	// RVA: 0x171B400 Offset: 0x171B400 VA: 0x171B400
	public void SetItem(ItemEntity itemEntity, int count = -1) { }

	// RVA: 0x171C0E4 Offset: 0x171C0E4 VA: 0x171C0E4
	public void SetCombineItem(int itemId, int count = -1) { }

	// RVA: 0x171C670 Offset: 0x171C670 VA: 0x171C670
	public void SetEquipItem(int equipItemId) { }

	// RVA: 0x171CB24 Offset: 0x171CB24 VA: 0x171CB24
	public void SetGift(Gift.Type giftType, int objectId = 0, int count = -1, bool isQuestBoard = False) { }

	// RVA: 0x171DB1C Offset: 0x171DB1C VA: 0x171DB1C
	public void SetGiftDesignSize(Gift.Type giftType, int objectId = 0, int count = -1) { }

	// RVA: 0x171DA4C Offset: 0x171DA4C VA: 0x171DA4C
	public void SetPresentItem(ItemEntity itemEnt, int count = -1) { }

	// RVA: 0x171DC70 Offset: 0x171DC70 VA: 0x171DC70
	public void SetPurchase(GamePurchase.Type purchaseType, int targetId, int imageId) { }

	// RVA: 0x171DF2C Offset: 0x171DF2C VA: 0x171DF2C
	public void SetPointEvent(int eventId) { }

	// RVA: 0x171DFDC Offset: 0x171DFDC VA: 0x171DFDC
	public void SetRaidEvent(int eventId) { }

	// RVA: 0x171DB0C Offset: 0x171DB0C VA: 0x171DB0C
	public void SetItemImage(ImageItem.Id imageId) { }

	// RVA: 0x171D53C Offset: 0x171D53C VA: 0x171D53C
	public void SetItemImage(ImageItem.Id imageId, int count) { }

	// RVA: 0x171E08C Offset: 0x171E08C VA: 0x171E08C
	public void SetItemImage(ImageItem.Id imageId, int objectId, int count) { }

	// RVA: 0x171E1D0 Offset: 0x171E1D0 VA: 0x171E1D0
	public void SetEventPointBuffImage(int imageId, int bgImageId) { }

	// RVA: 0x171BA58 Offset: 0x171BA58 VA: 0x171BA58
	public void SetItemImage(ImageItem.Id imageId, int bgImageId, int type, int count) { }

	// RVA: 0x171B510 Offset: 0x171B510 VA: 0x171B510
	public void SetCoinImage(int coinImageId, int bgImageId, int type, int count) { }

	// RVA: 0x171C1EC Offset: 0x171C1EC VA: 0x171C1EC
	public void SetCombineItemImage(int imageId, int bgImageId, int count = -1, bool isCoin = False) { }

	// RVA: 0x171C674 Offset: 0x171C674 VA: 0x171C674
	public void SetEquipItemImage(int equipImageId) { }

	// RVA: 0x171CE14 Offset: 0x171CE14 VA: 0x171CE14
	public void SetFaceImage(int svtId, int limitCount, int count = -1, Gift.Type giftType = 1, bool isQuestBoard = False) { }

	// RVA: 0x171D550 Offset: 0x171D550 VA: 0x171D550
	public void SetCommandCodeImage(int commandCodeId, int count = -1) { }

	// RVA: 0x171E65C Offset: 0x171E65C VA: 0x171E65C
	public void SetDepth(int depth) { }

	// RVA: 0x171EA00 Offset: 0x171EA00 VA: 0x171EA00
	public void SetColor(Color col) { }

	// RVA: 0x171ED08 Offset: 0x171ED08 VA: 0x171ED08
	public void SetAlpha(float alpha) { }

	// RVA: 0x171EFC0 Offset: 0x171EFC0 VA: 0x171EFC0
	public void setLocalScaleIconSprite(float scale) { }

	// RVA: 0x171F078 Offset: 0x171F078 VA: 0x171F078
	public void setLocalPositionIconSprite(float x) { }

	// RVA: 0x171F130 Offset: 0x171F130 VA: 0x171F130
	public void setTypeSpritePositionY(float y) { }

	// RVA: 0x171F238 Offset: 0x171F238 VA: 0x171F238
	public void setFrameSprite(bool isSetActive, string frameName = "") { }

	// RVA: 0x171F42C Offset: 0x171F42C VA: 0x171F42C
	public void ShowPossession(bool showPossession) { }

	// RVA: 0x171F52C Offset: 0x171F52C VA: 0x171F52C
	public void SetPossession(int possessionNum) { }

	// RVA: 0x171F7B8 Offset: 0x171F7B8 VA: 0x171F7B8
	public void OnClickItem(UIScrollBar bar) { }

	// RVA: 0x171FAF8 Offset: 0x171FAF8 VA: 0x171FAF8
	public void closeItemDetail(bool isDecide) { }

	// RVA: 0x171FB84 Offset: 0x171FB84 VA: 0x171FB84
	private void closeSvtDetail(bool isDecide) { }

	// RVA: 0x171FBE8 Offset: 0x171FBE8 VA: 0x171FBE8
	private void CloseCommandCodeDetail(bool isDecide) { }

	// RVA: 0x171FC4C Offset: 0x171FC4C VA: 0x171FC4C
	public void SetNotifyDirectGetCounter(int condensedWidth) { }

	// RVA: 0x171FCF4 Offset: 0x171FCF4 VA: 0x171FCF4
	private static void .cctor() { }
}

// Namespace: 
public class ItemIconWithConsumptionNumberComponent : ItemIconComponent // TypeDefIndex: 6379
{
	// Fields
	[SerializeField] // RVA: 0xCBFF20 Offset: 0xCBFF20 VA: 0xCBFF20
	protected UILabel consumptionNumberLabel; // 0x80

	// Methods

	// RVA: 0x171FD94 Offset: 0x171FD94 VA: 0x171FD94
	public void .ctor() { }

	// RVA: 0x171FDFC Offset: 0x171FDFC VA: 0x171FDFC
	public void SetConsumptionNumber(int consumptionNumber) { }
}

// Namespace: 
public class JsonManager // TypeDefIndex: 6380
{
	// Fields
	private static JsonManager singleton; // 0x0
	private static char[] stringReplaceList; // 0x8
	private static StringBuilder strBuilder; // 0x10

	// Methods

	// RVA: 0x172274C Offset: 0x172274C VA: 0x172274C
	private void .ctor() { }

	// RVA: 0x1722754 Offset: 0x1722754 VA: 0x1722754
	public static JsonManager GetInstance() { }

	// RVA: 0x17227BC Offset: 0x17227BC VA: 0x17227BC
	public static Dictionary<string, object> getDictionary(string jsonstr) { }

	// RVA: 0x1722890 Offset: 0x1722890 VA: 0x1722890
	public static Dictionary<string, object> getDictionary(object obj) { }

	// RVA: -1 Offset: -1
	public static T Deserialize<T>(object obj) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218F478 Offset: 0x218F478 VA: 0x218F478
	|-JsonManager.Deserialize<BattlePerformance.RaidInfoResult>
	|-JsonManager.Deserialize<BattleScriptRootComponent.TalkScriptSaveInfo>
	|-JsonManager.Deserialize<BattleServantData.SaveData>
	|-JsonManager.Deserialize<CommonUI.LoginResultData>
	|-JsonManager.Deserialize<EventConquestInfo[]>
	|-JsonManager.Deserialize<EventDailyPoint>
	|-JsonManager.Deserialize<EventHarvestGrowthInfo>
	|-JsonManager.Deserialize<EventLocationRequest.LocationGift>
	|-JsonManager.Deserialize<EventSaveData>
	|-JsonManager.Deserialize<ServantCommentManager.ClearWarInfo>
	|-JsonManager.Deserialize<Dictionary<string, object>>
	|-JsonManager.Deserialize<object>
	|-JsonManager.Deserialize<TerminalPramsManager.ClearData>
	|-JsonManager.Deserialize<TopHomeInfo>
	|-JsonManager.Deserialize<WarBoardDataEntity>
	|-JsonManager.Deserialize<WarBoardUserServantData>
	*/

	// RVA: -1 Offset: -1
	public static T[] DeserializeArray<T>(object obj) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B81624 Offset: 0x2B81624 VA: 0x2B81624
	|-JsonManager.DeserializeArray<BattleData.SaveData>
	|-JsonManager.DeserializeArray<BattleResultComponent.resultData>
	|-JsonManager.DeserializeArray<CatAndMouseGame.AssetbundleKeyEntity>
	|-JsonManager.DeserializeArray<ClearRandomMissionInfo>
	|-JsonManager.DeserializeArray<CombineRootComponent.eqCombineResData>
	|-JsonManager.DeserializeArray<CompleteMissionComponent.resData>
	|-JsonManager.DeserializeArray<EventInfoQPPointCounter.NextDisplayData>
	|-JsonManager.DeserializeArray<EventMissionItemListViewManager.resData>
	|-JsonManager.DeserializeArray<EventRewardRootComponent.resData>
	|-JsonManager.DeserializeArray<EventScanPanelMapRequest.ResultData>
	|-JsonManager.DeserializeArray<EventTreasureBoxPanelComponent.resData>
	|-JsonManager.DeserializeArray<MasterMissionComponent.resData>
	|-JsonManager.DeserializeArray<MissionNotifyDispInfo>
	|-JsonManager.DeserializeArray<PurchaseByBank_Legacy_Request.PurchaseResult>
	|-JsonManager.DeserializeArray<PurchaseByBank_UnityIap_Request.PurchaseResult>
	|-JsonManager.DeserializeArray<QuestBehaviorEntity>
	|-JsonManager.DeserializeArray<QuestRewardInfo>
	|-JsonManager.DeserializeArray<ResponseData>
	|-JsonManager.DeserializeArray<ScrTerminalListTop.AdditionalDlgMessage>
	|-JsonManager.DeserializeArray<SummonControl.resData>
	|-JsonManager.DeserializeArray<Dictionary<string, object>>
	|-JsonManager.DeserializeArray<object>
	|-JsonManager.DeserializeArray<TitleInfoEventTimeStatus.UIActiveQuestData>
	|-JsonManager.DeserializeArray<UserPresentBoxWindow.resData>
	|-JsonManager.DeserializeArray<WarBoardUserGetItemData>
	|-JsonManager.DeserializeArray<WarBoardUserMasterData>
	|-JsonManager.DeserializeArray<WarBoardUserTreasureData>
	*/

	// RVA: -1 Offset: -1
	public static T[][] DeserializeMultiArray<T>(object obj) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B87954 Offset: 0x2B87954 VA: 0x2B87954
	|-JsonManager.DeserializeMultiArray<int>
	|
	|-RVA: 0x2B879D0 Offset: 0x2B879D0 VA: 0x2B879D0
	|-JsonManager.DeserializeMultiArray<object>
	|
	|-RVA: 0x2B87A4C Offset: 0x2B87A4C VA: 0x2B87A4C
	|-JsonManager.DeserializeMultiArray<float>
	*/

	// RVA: 0x172295C Offset: 0x172295C VA: 0x172295C
	private static void CreateJsonString(object obj, bool isObscuredString = False, bool ignoreStaticField = False) { }

	// RVA: 0x1722390 Offset: 0x1722390 VA: 0x1722390
	public static string toJson(object obj, bool isObscuredString = False, bool ignoreStaticField = False) { }

	// RVA: 0x1724380 Offset: 0x1724380 VA: 0x1724380
	private static void CreateByDictInside(object dat, Type t, Dictionary<string, object> dict) { }

	// RVA: -1 Offset: -1
	private static T CreateByDict<T>(object obj) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x218E8B8 Offset: 0x218E8B8 VA: 0x218E8B8
	|-JsonManager.CreateByDict<object>
	*/

	// RVA: -1 Offset: -1
	private static T[] CreateByDictArray<T>(object obj) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B80E78 Offset: 0x2B80E78 VA: 0x2B80E78
	|-JsonManager.CreateByDictArray<object>
	*/

	// RVA: -1 Offset: -1
	private static T[][] CreateByDictMultiArray<T>(object obj) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B836A0 Offset: 0x2B836A0 VA: 0x2B836A0
	|-JsonManager.CreateByDictMultiArray<int>
	|
	|-RVA: 0x2B84CDC Offset: 0x2B84CDC VA: 0x2B84CDC
	|-JsonManager.CreateByDictMultiArray<object>
	|
	|-RVA: 0x2B86318 Offset: 0x2B86318 VA: 0x2B86318
	|-JsonManager.CreateByDictMultiArray<float>
	*/

	// RVA: 0x17286D8 Offset: 0x17286D8 VA: 0x17286D8
	private static void .cctor() { }
}

// Namespace: 
public class LimitCountIconComponent : BaseMonoBehaviour // TypeDefIndex: 6381
{
	// Fields
	[SerializeField] // RVA: 0xCBFF30 Offset: 0xCBFF30 VA: 0xCBFF30
	protected GameObject limitCountBase; // 0x18
	[SerializeField] // RVA: 0xCBFF40 Offset: 0xCBFF40 VA: 0xCBFF40
	protected UISprite[] limitCountSpriteList; // 0x20

	// Methods

	// RVA: 0x172E2C8 Offset: 0x172E2C8 VA: 0x172E2C8
	public void .ctor() { }

	// RVA: 0x172E2D0 Offset: 0x172E2D0 VA: 0x172E2D0
	public void Clear() { }

	// RVA: 0x172E304 Offset: 0x172E304 VA: 0x172E304
	public void Set(int limitCount, int limitMax) { }

	// RVA: 0x172E460 Offset: 0x172E460 VA: 0x172E460
	public void Set(LimitCountIconComponent limitCountIcon) { }
}

// Namespace: 
public class MasterDataUnpakcer // TypeDefIndex: 6382
{
	// Fields
	private static StringBuilder sb; // 0x0
	private byte[] tmp0; // 0x10
	private byte[] tmp1; // 0x18
	private readonly MemoryStream writeStream; // 0x20
	private byte[] tmpBuffer; // 0x28

	// Methods

	// RVA: 0x19EAE40 Offset: 0x19EAE40 VA: 0x19EAE40
	public void .ctor() { }

	// RVA: 0x19EAED8 Offset: 0x19EAED8 VA: 0x19EAED8
	public object Unpack(byte[] buf, int offset, int size) { }

	// RVA: 0x19EBC04 Offset: 0x19EBC04 VA: 0x19EBC04
	public object Unpack(byte[] buf) { }

	// RVA: 0x19EBC40 Offset: 0x19EBC40 VA: 0x19EBC40
	public void UnpackByte(Stream s, Stream ws) { }

	// RVA: 0x19EC428 Offset: 0x19EC428 VA: 0x19EC428
	public void UnpackBinary(int b, Stream s, Stream ws) { }

	// RVA: 0x19EC1CC Offset: 0x19EC1CC VA: 0x19EC1CC
	public void UnpackArrayByte(int b, Stream s, Stream ws) { }

	// RVA: 0x19EBF60 Offset: 0x19EBF60 VA: 0x19EBF60
	public void UnpackMapByte(int b, Stream s, Stream ws) { }

	// RVA: 0x19EB028 Offset: 0x19EB028 VA: 0x19EB028
	public object Unpack(Stream s) { }

	// RVA: 0x19ECEFC Offset: 0x19ECEFC VA: 0x19ECEFC
	private long UnpackUint16(Stream s) { }

	// RVA: 0x19ED018 Offset: 0x19ED018 VA: 0x19ED018
	private long UnpackUint32(Stream s) { }

	// RVA: 0x19ECC24 Offset: 0x19ECC24 VA: 0x19ECC24
	private string UnpackString(Stream s, long len) { }

	// RVA: 0x19ED1A8 Offset: 0x19ED1A8 VA: 0x19ED1A8
	private byte[] UnpackBinary(Stream s, long len) { }

	// RVA: 0x19ECB5C Offset: 0x19ECB5C VA: 0x19ECB5C
	private List<object> UnpackArray(Stream s, long len) { }

	// RVA: 0x19EC93C Offset: 0x19EC93C VA: 0x19EC93C
	private Dictionary<string, long[]> UnpackMap(Stream s, long len) { }

	// RVA: 0x19ED23C Offset: 0x19ED23C VA: 0x19ED23C
	public void Skip(Stream s) { }

	// RVA: 0x19ED4C0 Offset: 0x19ED4C0 VA: 0x19ED4C0
	private void SkipArray(Stream s, int len) { }

	// RVA: 0x19ED46C Offset: 0x19ED46C VA: 0x19ED46C
	private void SkipMap(Stream s, int len) { }

	// RVA: 0x19ED508 Offset: 0x19ED508 VA: 0x19ED508
	private void Seek(Stream s, long offset) { }
}

// Namespace: 
public class MemoryVisualizer : MonoBehaviour // TypeDefIndex: 6383
{
	// Methods

	// RVA: 0x16D5714 Offset: 0x16D5714 VA: 0x16D5714
	public void .ctor() { }
}

// Namespace: MiniJSON
public static class Json // TypeDefIndex: 6384
{
	// Methods

	// RVA: 0x16D6958 Offset: 0x16D6958 VA: 0x16D6958
	public static object Deserialize(string json) { }

	// RVA: 0x16D6AA8 Offset: 0x16D6AA8 VA: 0x16D6AA8
	public static string Serialize(object obj) { }

	// RVA: 0x16D6B50 Offset: 0x16D6B50 VA: 0x16D6B50
	public static void Serialize(object obj, StringBuilder builder) { }
}

// Namespace: 
private sealed class Json.Parser : IDisposable // TypeDefIndex: 6385
{
	// Fields
	private const string WORD_BREAK = ",:{}\"[]";
	private Json.Parser.MyStringReader json; // 0x10
	private StringBuilder g_s; // 0x18
	private string emptyString; // 0x20

	// Properties
	private char PeekChar { get; }
	private char NextChar { get; }
	private string NextWord { get; }
	private Json.Parser.TOKEN NextToken { get; }

	// Methods

	// RVA: 0x16D6BD0 Offset: 0x16D6BD0 VA: 0x16D6BD0
	private void .ctor(string jsonString) { }

	// RVA: 0x16D6CE4 Offset: 0x16D6CE4 VA: 0x16D6CE4
	public static bool IsWordBreak(char c) { }

	// RVA: 0x16D6964 Offset: 0x16D6964 VA: 0x16D6964
	public static object Parse(string jsonString) { }

	// RVA: 0x16D6DB0 Offset: 0x16D6DB0 VA: 0x16D6DB0 Slot: 4
	public void Dispose() { }

	// RVA: 0x16D6DEC Offset: 0x16D6DEC VA: 0x16D6DEC
	private Dictionary<string, object> ParseObject() { }

	// RVA: 0x16D72D0 Offset: 0x16D72D0 VA: 0x16D72D0
	private List<object> ParseArray() { }

	// RVA: 0x16D6D88 Offset: 0x16D6D88 VA: 0x16D6D88
	private object ParseValue() { }

	// RVA: 0x16D73B8 Offset: 0x16D73B8 VA: 0x16D73B8
	private object ParseByToken(Json.Parser.TOKEN token) { }

	// RVA: 0x16D7164 Offset: 0x16D7164 VA: 0x16D7164
	private string ParseString() { }

	// RVA: 0x16D7708 Offset: 0x16D7708 VA: 0x16D7708
	private string ParseStringMeta() { }

	// RVA: 0x16D7494 Offset: 0x16D7494 VA: 0x16D7494
	private object ParseNumber() { }

	// RVA: 0x16D7A24 Offset: 0x16D7A24 VA: 0x16D7A24
	private void EatWhitespace() { }

	// RVA: 0x16D7680 Offset: 0x16D7680 VA: 0x16D7680
	private char get_PeekChar() { }

	// RVA: 0x16D798C Offset: 0x16D798C VA: 0x16D798C
	private char get_NextChar() { }

	// RVA: 0x16D7B88 Offset: 0x16D7B88 VA: 0x16D7B88
	private string get_NextWord() { }

	// RVA: 0x16D6F30 Offset: 0x16D6F30 VA: 0x16D6F30
	private Json.Parser.TOKEN get_NextToken() { }
}

// Namespace: 
private enum Json.Parser.TOKEN // TypeDefIndex: 6386
{
	// Fields
	public int value__; // 0x0
	public const Json.Parser.TOKEN NONE = 0;
	public const Json.Parser.TOKEN CURLY_OPEN = 1;
	public const Json.Parser.TOKEN CURLY_CLOSE = 2;
	public const Json.Parser.TOKEN SQUARED_OPEN = 3;
	public const Json.Parser.TOKEN SQUARED_CLOSE = 4;
	public const Json.Parser.TOKEN COLON = 5;
	public const Json.Parser.TOKEN COMMA = 6;
	public const Json.Parser.TOKEN STRING = 7;
	public const Json.Parser.TOKEN NUMBER = 8;
	public const Json.Parser.TOKEN TRUE = 9;
	public const Json.Parser.TOKEN FALSE = 10;
	public const Json.Parser.TOKEN NULL = 11;
}

// Namespace: 
private class Json.Parser.MyStringReader // TypeDefIndex: 6387
{
	// Fields
	private string m_s; // 0x10
	private int m_pos; // 0x18
	private int m_end; // 0x1C

	// Methods

	// RVA: 0x16D6C98 Offset: 0x16D6C98 VA: 0x16D6C98
	public void .ctor(string s) { }

	// RVA: 0x16D797C Offset: 0x16D797C VA: 0x16D797C
	public bool isEnd() { }

	// RVA: 0x16D7974 Offset: 0x16D7974 VA: 0x16D7974
	public int getPos() { }

	// RVA: 0x16D7A14 Offset: 0x16D7A14 VA: 0x16D7A14
	public void setPos(int pos) { }

	// RVA: 0x16D6F20 Offset: 0x16D6F20 VA: 0x16D6F20
	public void nextChar() { }

	// RVA: 0x16D7A1C Offset: 0x16D7A1C VA: 0x16D7A1C
	public string getString() { }

	// RVA: 0x16D7AE0 Offset: 0x16D7AE0 VA: 0x16D7AE0
	public int Peek() { }

	// RVA: 0x16D7B30 Offset: 0x16D7B30 VA: 0x16D7B30
	public int Read() { }

	// RVA: 0x16D6DE4 Offset: 0x16D6DE4 VA: 0x16D6DE4
	public void Dispose() { }
}

// Namespace: 
private sealed class Json.Serializer // TypeDefIndex: 6388
{
	// Fields
	private readonly char[] hexChars; // 0x10
	private StringBuilder builder; // 0x18
