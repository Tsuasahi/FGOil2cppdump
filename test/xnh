
	// RVA: 0x10D20F0 Offset: 0x10D20F0 VA: 0x10D20F0
	public void .ctor() { }

	// RVA: 0x10D20F8 Offset: 0x10D20F8 VA: 0x10D20F8
	public void Set(int selectNum = -1, int dragSelectNum = -1) { }

	// RVA: 0x10D2310 Offset: 0x10D2310 VA: 0x10D2310
	public void setOverHundredNumCondensedScale(int width = -1) { }
}

// Namespace: 
public static class EmojiUtility // TypeDefIndex: 6365
{
	// Methods

	// RVA: 0x16F6D98 Offset: 0x16F6D98 VA: 0x16F6D98
	public static bool IsEmojiChar(char ch) { }

	// RVA: 0x16F7138 Offset: 0x16F7138 VA: 0x16F7138
	public static char ValidateNameText(string text, int charIndex, char addedChar) { }
}

// Namespace: 
public class EventBannerComponent : BaseMonoBehaviour // TypeDefIndex: 6366
{
	// Fields
	[SerializeField] // RVA: 0xC53D28 Offset: 0xC53D28 VA: 0xC53D28
	protected GameObject bannerPrefab; // 0x18
	[SerializeField] // RVA: 0xC53D38 Offset: 0xC53D38 VA: 0xC53D38
	protected UIGrid bannerGrid; // 0x20
	protected List<GameObject> bannerList; // 0x28

	// Methods

	// RVA: 0x1867AFC Offset: 0x1867AFC VA: 0x1867AFC
	public void .ctor() { }

	// RVA: 0x1867B6C Offset: 0x1867B6C VA: 0x1867B6C
	public void ClearBanner() { }

	// RVA: 0x1867CD0 Offset: 0x1867CD0 VA: 0x1867CD0
	public void SetBanner() { }
}

// Namespace: 
public class EventItemComponent : MonoBehaviour // TypeDefIndex: 6367
{
	// Fields
	private static readonly string BASE_SPRITE_DEFAULT_NAME; // 0x0
	[SerializeField] // RVA: 0xC53D48 Offset: 0xC53D48 VA: 0xC53D48
	protected GameObject baseObject; // 0x18
	[SerializeField] // RVA: 0xC53D58 Offset: 0xC53D58 VA: 0xC53D58
	protected UISprite baseSp; // 0x20
	[SerializeField] // RVA: 0xC53D68 Offset: 0xC53D68 VA: 0xC53D68
	protected ItemIconComponent itemIcon; // 0x28
	[SerializeField] // RVA: 0xC53D78 Offset: 0xC53D78 VA: 0xC53D78
	protected UILabel dataLabel; // 0x30
	[SerializeField] // RVA: 0xC53D88 Offset: 0xC53D88 VA: 0xC53D88
	protected UILabel textLabel; // 0x38
	protected int dataItemId; // 0x40
	protected int dataPointEventId; // 0x44
	protected int dataPointEventGroupId; // 0x48
	protected int dataMissionEventId; // 0x4C
	protected int dataRaidEventId; // 0x50
	protected int dataRaidDay; // 0x54
	protected int dataPointGroupEventId; // 0x58

	// Methods

	// RVA: 0x1603C70 Offset: 0x1603C70 VA: 0x1603C70
	public void .ctor() { }

	// RVA: 0x1603C78 Offset: 0x1603C78 VA: 0x1603C78
	private void Awake() { }

	// RVA: 0x1603E04 Offset: 0x1603E04 VA: 0x1603E04
	private void OnDestroy() { }

	// RVA: 0x1603EA4 Offset: 0x1603EA4 VA: 0x1603EA4
	public void Clear() { }

	// RVA: 0x1603F9C Offset: 0x1603F9C VA: 0x1603F9C
	public void Set(int itemId) { }

	// RVA: 0x1604400 Offset: 0x1604400 VA: 0x1604400
	public void SetGroupPointEvent(int itemId) { }

	// RVA: 0x1604780 Offset: 0x1604780 VA: 0x1604780
	public void SetPointEvent(int eventId, int groupId) { }

	// RVA: 0x1604974 Offset: 0x1604974 VA: 0x1604974
	public void SetMissionEvent(int eventId) { }

	// RVA: 0x1604C20 Offset: 0x1604C20 VA: 0x1604C20
	public void SetDailyMissionEvent(int eventId) { }

	// RVA: 0x1604ED4 Offset: 0x1604ED4 VA: 0x1604ED4
	public void SetRaidEvent(int eventId, int day) { }

	// RVA: 0x1605140 Offset: 0x1605140 VA: 0x1605140
	public void SetNum(int num, Color color) { }

	// RVA: 0x160523C Offset: 0x160523C VA: 0x160523C
	public void UpdateDisp() { }

	// RVA: 0x16052CC Offset: 0x16052CC VA: 0x16052CC
	public void setBaseSpriteDownloadAtlas(string spName) { }

	// RVA: 0x160536C Offset: 0x160536C VA: 0x160536C
	public void setScaleItemIcon(float scale) { }

	// RVA: 0x16053AC Offset: 0x16053AC VA: 0x16053AC
	public void setLocalPositionXItemIcon(float x) { }

	// RVA: 0x16053EC Offset: 0x16053EC VA: 0x16053EC
	public void setLocalPositionDataLabel(float x, float y) { }

	// RVA: 0x160543C Offset: 0x160543C VA: 0x160543C
	public void setWidthDataLabel(int width) { }

	// RVA: 0x1605474 Offset: 0x1605474 VA: 0x1605474
	public void setHeightDataLabel(int height) { }

	// RVA: 0x16054AC Offset: 0x16054AC VA: 0x16054AC
	public void setFontSizeDataLabel(int size) { }

	// RVA: 0x16054E4 Offset: 0x16054E4 VA: 0x16054E4
	public void setPivotDataLabel(UIWidget.Pivot pivot) { }

	// RVA: 0x160551C Offset: 0x160551C VA: 0x160551C
	private static void .cctor() { }
}

// Namespace: 
public class EventItemListComponent : MonoBehaviour // TypeDefIndex: 6368
{
	// Fields
	[SerializeField] // RVA: 0xC53D98 Offset: 0xC53D98 VA: 0xC53D98
	protected EventItemComponent[] eventItemDrawList; // 0x18
	protected int eventId; // 0x20

	// Methods

	// RVA: 0x1606544 Offset: 0x1606544 VA: 0x1606544
	public void .ctor() { }

	// RVA: 0x160654C Offset: 0x160654C VA: 0x160654C
	public static void GoToShopEventItemExchange(int eventId) { }

	// RVA: 0x1606600 Offset: 0x1606600 VA: 0x1606600
	public static void GoToEventShop(int eventId) { }

	// RVA: 0x16066B4 Offset: 0x16066B4 VA: 0x16066B4
	public void Clear() { }

	// RVA: 0x160677C Offset: 0x160677C VA: 0x160677C
	public void Set(int eventId) { }
}

// Namespace: 
public class EventUpValIconComponent : SwitchParameterDisplayComponent // TypeDefIndex: 6369
{
	// Fields
	protected static int MESSAGE_X_SIZE_MAX; // 0x0
	protected static int SERVANT_POINT_X_SIZE_MAX; // 0x4
	[SerializeField] // RVA: 0xC53DA8 Offset: 0xC53DA8 VA: 0xC53DA8
	protected EventUpValIconComponent.Alignment alignment; // 0x18
	[SerializeField] // RVA: 0xC53DB8 Offset: 0xC53DB8 VA: 0xC53DB8
	protected GameObject baseObject; // 0x20
	[SerializeField] // RVA: 0xC53DC8 Offset: 0xC53DC8 VA: 0xC53DC8
	protected UISprite iconSprite; // 0x28
	[SerializeField] // RVA: 0xC53DD8 Offset: 0xC53DD8 VA: 0xC53DD8
	protected UILabel paramLabel; // 0x30
	[SerializeField] // RVA: 0xC53DE8 Offset: 0xC53DE8 VA: 0xC53DE8
	protected UISprite eventNameBackSprite; // 0x38
	[SerializeField] // RVA: 0xC53DF8 Offset: 0xC53DF8 VA: 0xC53DF8
	protected UISprite eventLogoSprite; // 0x40
	protected EventMargeItemUpValInfo[] eventUpValItemList; // 0x48
	private int servantId; // 0x50
	private int servantRarity; // 0x54
	private int equipSvtId; // 0x58
	private bool invalid; // 0x5C
	private readonly Color COLOR_NORMAL; // 0x60
	private readonly Color COLOR_INVALID; // 0x70

	// Methods

	// RVA: 0x10AC08C Offset: 0x10AC08C VA: 0x10AC08C
	public void .ctor() { }

	// RVA: 0x10AC128 Offset: 0x10AC128 VA: 0x10AC128
	protected void OnDestroy() { }

	// RVA: 0x10AC12C Offset: 0x10AC12C VA: 0x10AC12C
	public void Clear() { }

	// RVA: 0x10AC16C Offset: 0x10AC16C VA: 0x10AC16C
	public void Set(EventMargeItemUpValInfo[] eventUpValItemList, int servantId = -1, int servantRarity = -1, int equipSvtId = -1) { }

	// RVA: 0x10AC24C Offset: 0x10AC24C VA: 0x10AC24C
	protected void SetIconLabel(int count) { }

	// RVA: 0x10AC134 Offset: 0x10AC134 VA: 0x10AC134
	protected void ClearParam() { }

	// RVA: 0x10AC314 Offset: 0x10AC314 VA: 0x10AC314
	protected void SetParam(int num) { }

	// RVA: 0x10ACB98 Offset: 0x10ACB98 VA: 0x10ACB98
	protected void SetAlpha(float alpha) { }

	// RVA: 0x10ACDE0 Offset: 0x10ACDE0 VA: 0x10ACDE0 Slot: 4
	public override bool ParameterChange(int count) { }

	// RVA: 0x10ACE44 Offset: 0x10ACE44 VA: 0x10ACE44 Slot: 5
	public override bool UpdateAlpha(float alpha) { }

	// RVA: 0x10ACE70 Offset: 0x10ACE70 VA: 0x10ACE70
	private static void .cctor() { }
}

// Namespace: 
public enum EventUpValIconComponent.Alignment // TypeDefIndex: 6370
{
	// Fields
	public int value__; // 0x0
	public const EventUpValIconComponent.Alignment CENTER = 0;
	public const EventUpValIconComponent.Alignment LEFT = 1;
	public const EventUpValIconComponent.Alignment RIGHT = 2;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC252A4 Offset: 0xC252A4 VA: 0xC252A4
[AddComponentMenu] // RVA: 0xC252A4 Offset: 0xC252A4 VA: 0xC252A4
public class ExUIMeshRenderer : UITweenRenderer // TypeDefIndex: 6371
{
	// Fields
	[SerializeField] // RVA: 0xC53E08 Offset: 0xC53E08 VA: 0xC53E08
	public MeshFilter meshFilter; // 0x188
	[SerializeField] // RVA: 0xC53E18 Offset: 0xC53E18 VA: 0xC53E18
	public MeshRenderer meshRenderer; // 0x190
	[SerializeField] // RVA: 0xC53E28 Offset: 0xC53E28 VA: 0xC53E28
	public Texture defaultTexture; // 0x198
	[SerializeField] // RVA: 0xC53E38 Offset: 0xC53E38 VA: 0xC53E38
	public Vector2 uvSize; // 0x1A0
	[SerializeField] // RVA: 0xC53E48 Offset: 0xC53E48 VA: 0xC53E48
	public Vector2 uvOffset; // 0x1A8
	[SerializeField] // RVA: 0xC53E58 Offset: 0xC53E58 VA: 0xC53E58
	public bool isRescale; // 0x1B0
	protected AssetData assetData; // 0x1B8
	protected string loadAssetName; // 0x1C0
	protected string assetLabel; // 0x1C8
	protected Action callbackFunc; // 0x1D0
	protected bool isFirst; // 0x1D8
	protected int baseWidth; // 0x1DC
	protected int baseHeight; // 0x1E0

	// Properties
	public Material material { get; set; }

	// Methods

	// RVA: 0x10AFE34 Offset: 0x10AFE34 VA: 0x10AFE34
	public void .ctor() { }

	// RVA: 0x10AFEB4 Offset: 0x10AFEB4 VA: 0x10AFEB4
	public void SetBaseWidth(int setWidth) { }

	// RVA: 0x10AFEF4 Offset: 0x10AFEF4 VA: 0x10AFEF4
	public Material get_material() { }

	// RVA: 0x10AFF94 Offset: 0x10AFF94 VA: 0x10AFF94
	public void set_material(Material value) { }

	// RVA: 0x10AFFCC Offset: 0x10AFFCC VA: 0x10AFFCC Slot: 20
	protected override void OnStart() { }

	// RVA: 0x10B01A4 Offset: 0x10B01A4 VA: 0x10B01A4 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x10B02E0 Offset: 0x10B02E0 VA: 0x10B02E0 Slot: 41
	public override void SetTweenVolume(float v) { }

	// RVA: 0x10B03C8 Offset: 0x10B03C8 VA: 0x10B03C8
	public void ClearImage() { }

	// RVA: 0x10B00BC Offset: 0x10B00BC VA: 0x10B00BC
	public void SetImage(Texture tex) { }

	// RVA: 0x10B05B0 Offset: 0x10B05B0 VA: 0x10B05B0
	public void SetAssetImage(string assetName, Action callback) { }

	// RVA: 0x10B05C0 Offset: 0x10B05C0 VA: 0x10B05C0
	public void SetAssetImage(string assetName, string assetLabel, Action callback) { }

	// RVA: 0x10B0870 Offset: 0x10B0870 VA: 0x10B0870
	protected void EndLoad(AssetData data) { }

	// RVA: 0x10B04F4 Offset: 0x10B04F4 VA: 0x10B04F4
	protected void SetTexture(Texture tex) { }

	// RVA: 0x10B0970 Offset: 0x10B0970 VA: 0x10B0970 Slot: 43
	protected virtual void ReScale() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC252F0 Offset: 0xC252F0 VA: 0xC252F0
[AddComponentMenu] // RVA: 0xC252F0 Offset: 0xC252F0 VA: 0xC252F0
public class ExUISpriteRenderer : UITweenRenderer // TypeDefIndex: 6372
{
	// Fields
	[SerializeField] // RVA: 0xC53E68 Offset: 0xC53E68 VA: 0xC53E68
	public SpriteRenderer spriteRenderer; // 0x188
	[SerializeField] // RVA: 0xC53E78 Offset: 0xC53E78 VA: 0xC53E78
	public Texture2D defaultTexture; // 0x190
	protected AssetData assetData; // 0x198
	protected string loadAssetName; // 0x1A0
	protected string assetLabel; // 0x1A8
	protected bool isUseAlphaImage; // 0x1B0
	protected bool isTextureAlphaImage; // 0x1B1
	protected Action callbackFunc; // 0x1B8
	protected bool isInit; // 0x1C0
	protected Vector3 baseScale; // 0x1C4
	protected int oldWidth; // 0x1D0
	protected int oldHeight; // 0x1D4
	public static readonly int BACK_WIDTH_21_9; // 0x0
	public static readonly int BACK_HEIGHT_21_9; // 0x4
	public static readonly int BACK_WIDTH_16_9; // 0x8
	public static readonly int BACK_HEIGHT_16_9; // 0xC

	// Methods

	// RVA: 0x10B121C Offset: 0x10B121C VA: 0x10B121C
	public void .ctor() { }

	// RVA: 0x10B122C Offset: 0x10B122C VA: 0x10B122C Slot: 15
	protected override void OnInit() { }

	// RVA: 0x10B12B0 Offset: 0x10B12B0 VA: 0x10B12B0 Slot: 20
	protected override void OnStart() { }

	// RVA: 0x10B16A0 Offset: 0x10B16A0 VA: 0x10B16A0 Slot: 39
	public override void SetTweenColor(Color c) { }

	// RVA: 0x10B1730 Offset: 0x10B1730 VA: 0x10B1730 Slot: 40
	public override Color GetTweenColor() { }

	// RVA: 0x10B1254 Offset: 0x10B1254 VA: 0x10B1254
	private void InitBaseScale() { }

	// RVA: 0x10B1738 Offset: 0x10B1738 VA: 0x10B1738
	public void ClearImage() { }

	// RVA: 0x10B139C Offset: 0x10B139C VA: 0x10B139C
	public void SetImage(Texture2D tex) { }

	// RVA: 0x10B1AD0 Offset: 0x10B1AD0 VA: 0x10B1AD0
	public void SetAssetImage(string assetName, Action callback) { }

	// RVA: 0x10B1D80 Offset: 0x10B1D80 VA: 0x10B1D80
	public void SetAssetImageBackFS(string assetName, Action callback) { }

	// RVA: 0x10B1DBC Offset: 0x10B1DBC VA: 0x10B1DBC
	private void Resize(string assetName) { }

	// RVA: 0x10B230C Offset: 0x10B230C VA: 0x10B230C
	public void SetSceneMode(string assetName, ScriptManager.SCENE_MODE sceneMode) { }

	// RVA: 0x10B2784 Offset: 0x10B2784 VA: 0x10B2784
	public void SetAssetImage(string assetName, string assetLabel, Action callback) { }

	// RVA: 0x10B2794 Offset: 0x10B2794 VA: 0x10B2794
	public void SetAssetImage2(string assetName, string assetLabel, Action callback) { }

	// RVA: 0x10B1AE4 Offset: 0x10B1AE4 VA: 0x10B1AE4
	protected void LoadAssetTexture(string assetName, string assetLabel, bool isUseAlphaImage, Action callback) { }

	// RVA: 0x10B2B40 Offset: 0x10B2B40 VA: 0x10B2B40
	protected void EndLoad(AssetData data) { }

	// RVA: 0x10B1874 Offset: 0x10B1874 VA: 0x10B1874
	protected void SetTexture(Texture2D tex) { }

	// RVA: 0x10B27A4 Offset: 0x10B27A4 VA: 0x10B27A4
	protected void SetAssetTexture() { }

	// RVA: 0x10B1474 Offset: 0x10B1474 VA: 0x10B1474
	protected void ReScaleUpdate() { }

	// RVA: 0x10B2C24 Offset: 0x10B2C24 VA: 0x10B2C24
	private static void .cctor() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2533C Offset: 0xC2533C VA: 0xC2533C
[AddComponentMenu] // RVA: 0xC2533C Offset: 0xC2533C VA: 0xC2533C
public class ExUIUserMeshRenderer : ExUIMeshRenderer // TypeDefIndex: 6373
{
	// Fields
	private Vector3[] baseVertexs; // 0x1E8
	private Vector2[] baseUvs; // 0x1F0
	private int[] baseTriangles; // 0x1F8
	private bool isChangeMesh; // 0x200
	private bool isUseUserMesh; // 0x201

	// Methods

	// RVA: 0x10B3258 Offset: 0x10B3258 VA: 0x10B3258
	public void .ctor() { }

	// RVA: 0x10B325C Offset: 0x10B325C VA: 0x10B325C
	public void SetUserMesh(Vector3[] vertexs, Vector2[] uvs, int[] triangles) { }

	// RVA: 0x10B329C Offset: 0x10B329C VA: 0x10B329C
	public void ClearUserMesh() { }

	// RVA: 0x10B32F8 Offset: 0x10B32F8 VA: 0x10B32F8
	private bool HaveUserMesh() { }

	// RVA: 0x10B3320 Offset: 0x10B3320 VA: 0x10B3320 Slot: 43
	protected override void ReScale() { }
}

// Namespace: 
public class FBXAnimclips // TypeDefIndex: 6374
{
	// Fields
	public static readonly float animFps; // 0x0

	// Methods

	// RVA: 0x10B4018 Offset: 0x10B4018 VA: 0x10B4018
	public void .ctor() { }

	// RVA: 0x10B4020 Offset: 0x10B4020 VA: 0x10B4020
	public void loadAnimationEvents(int svtId, int level) { }

	// RVA: 0x10B420C Offset: 0x10B420C VA: 0x10B420C
	public void inAttachAnimationEvents(GameObject gameObject, TextAsset data, int level) { }

	// RVA: 0x10B4210 Offset: 0x10B4210 VA: 0x10B4210
	private static void .cctor() { }
}

// Namespace: 
public class FlashingIconComponent : BaseMonoBehaviour // TypeDefIndex: 6375
{
	// Fields
	[SerializeField] // RVA: 0xC53E88 Offset: 0xC53E88 VA: 0xC53E88
	protected UIWidget widget; // 0x18

	// Methods

	// RVA: 0x136DB1C Offset: 0x136DB1C VA: 0x136DB1C
	public void .ctor() { }

	// RVA: 0x136DB24 Offset: 0x136DB24 VA: 0x136DB24
	protected void Awake() { }

	// RVA: 0x136DB58 Offset: 0x136DB58 VA: 0x136DB58
	protected void OnDestroy() { }

	// RVA: 0x136DB5C Offset: 0x136DB5C VA: 0x136DB5C
	public void Clear() { }

	// RVA: 0x136DE2C Offset: 0x136DE2C VA: 0x136DE2C
	public void Set() { }

	// RVA: 0x1363378 Offset: 0x1363378 VA: 0x1363378
	public void Set(bool isDisp) { }

	// RVA: 0x136E074 Offset: 0x136E074 VA: 0x136E074
	public void Set(float cycleTime) { }

	// RVA: 0x136E18C Offset: 0x136E18C VA: 0x136E18C
	public void SetFast() { }

	// RVA: 0x136E294 Offset: 0x136E294 VA: 0x136E294
	public void SetFast(bool isDisp) { }

	// RVA: 0x136E2A0 Offset: 0x136E2A0 VA: 0x136E2A0
	public bool UpdateIcon(float alpha) { }
}

// Namespace: 
public class FlipEffectUpdater : MonoBehaviour // TypeDefIndex: 6376
{
	// Fields
	public Transform ConnectTarget; // 0x18
	private Transform mTrans; // 0x20

	// Methods

	// RVA: 0x136E62C Offset: 0x136E62C VA: 0x136E62C
	public void .ctor() { }

	// RVA: 0x136E634 Offset: 0x136E634 VA: 0x136E634
	private void Start() { }

	// RVA: 0x136E65C Offset: 0x136E65C VA: 0x136E65C
	private void LateUpdate() { }

	// RVA: 0x136E660 Offset: 0x136E660 VA: 0x136E660
	public void OnLateUpdate() { }
}

// Namespace: 
public class FollowObjectPositionComponent : MonoBehaviour // TypeDefIndex: 6377
{
	// Fields
	private GameObject TargetObj; // 0x18
	private bool IsInversion; // 0x20

	// Methods

	// RVA: 0x136EEA4 Offset: 0x136EEA4 VA: 0x136EEA4
	public void .ctor() { }

	// RVA: 0x136EEAC Offset: 0x136EEAC VA: 0x136EEAC
	public void SetObj(GameObject obj, bool _IsInversion = False) { }

	// RVA: 0x136EEBC Offset: 0x136EEBC VA: 0x136EEBC
	private void Update() { }
}

// Namespace: 
public class FOVSync : MonoBehaviour // TypeDefIndex: 6378
{
	// Fields
	public Camera observeCamera; // 0x18

	// Methods

	// RVA: 0x10B630C Offset: 0x10B630C VA: 0x10B630C
	public void .ctor() { }

	// RVA: 0x10B6314 Offset: 0x10B6314 VA: 0x10B6314
	private void Start() { }

	// RVA: 0x10B6318 Offset: 0x10B6318 VA: 0x10B6318
	private void LateUpdate() { }
}

// Namespace: 
public class FriendIconComponent : MonoBehaviour // TypeDefIndex: 6379
{
	// Fields
	private static readonly string BASE_SPR_DEFAULT_NAME; // 0x0
	[SerializeField] // RVA: 0xC53E98 Offset: 0xC53E98 VA: 0xC53E98
	protected ServantFaceIconComponent servantFaceIcon; // 0x18
	[SerializeField] // RVA: 0xC53EA8 Offset: 0xC53EA8 VA: 0xC53EA8
	protected UILabel playerNameLabel; // 0x20
	[SerializeField] // RVA: 0xC53EB8 Offset: 0xC53EB8 VA: 0xC53EB8
	protected UIIconLabel playerLevelIconLabel; // 0x28
	[SerializeField] // RVA: 0xC53EC8 Offset: 0xC53EC8 VA: 0xC53EC8
	protected UIRangeLabel servantNameLabel; // 0x30
	[SerializeField] // RVA: 0xC53ED8 Offset: 0xC53ED8 VA: 0xC53ED8
	protected UIRangeLabel svtNpTitleLabel; // 0x38
	[SerializeField] // RVA: 0xC53EE8 Offset: 0xC53EE8 VA: 0xC53EE8
	protected ServantNpCommandCardComponent svtNpCommandCard; // 0x40
	[SerializeField] // RVA: 0xC53EF8 Offset: 0xC53EF8 VA: 0xC53EF8
	protected UILabel loginDataLabel; // 0x48
	[SerializeField] // RVA: 0xC53F08 Offset: 0xC53F08 VA: 0xC53F08
	protected GameObject[] skillBaseList; // 0x50
	[SerializeField] // RVA: 0xC53F18 Offset: 0xC53F18 VA: 0xC53F18
	protected SkillIconComponent[] skillIconList; // 0x58
	[SerializeField] // RVA: 0xC53F28 Offset: 0xC53F28 VA: 0xC53F28
	protected UIIconLabel[] skillLevelIconLabelList; // 0x60
	[SerializeField] // RVA: 0xC53F38 Offset: 0xC53F38 VA: 0xC53F38
	protected UICommonButton[] skillButtonList; // 0x68
	[SerializeField] // RVA: 0xC53F48 Offset: 0xC53F48 VA: 0xC53F48
	protected ServantCommandCardListComponent svtCommandCardList; // 0x70
	[SerializeField] // RVA: 0xC53F58 Offset: 0xC53F58 VA: 0xC53F58
	protected UICommonButton baseButton; // 0x78
	[SerializeField] // RVA: 0xC53F68 Offset: 0xC53F68 VA: 0xC53F68
	protected UISprite baseSpr; // 0x80
	[SerializeField] // RVA: 0xC53F78 Offset: 0xC53F78 VA: 0xC53F78
	protected UserGradeComponent gradeIcon; // 0x88
	[SerializeField] // RVA: 0xC53F88 Offset: 0xC53F88 VA: 0xC53F88
	protected UISprite pushSprite; // 0x90
	protected OtherUserGameEntity userGameEntity; // 0x98
	protected int classPos; // 0xA0
	private Follower.Type followerType; // 0xA4
	private OtherUserGameEntity.ReturnSupportServantType displayServantType; // 0xA8

	// Methods

	// RVA: 0x171DF58 Offset: 0x171DF58 VA: 0x171DF58
	public void .ctor() { }

	// RVA: 0x171E020 Offset: 0x171E020 VA: 0x171E020
	public void Set(OtherUserGameEntity userGameEntity, bool isUseServantStatus, int classPos, OtherUserGameEntity.ReturnSupportServantType displayServantType, Follower.Type ftype = 0, int followerDeckId = 0) { }

	// RVA: 0x171F0FC Offset: 0x171F0FC VA: 0x171F0FC
	public void OnClickServantStatus() { }

	// RVA: 0x171F240 Offset: 0x171F240 VA: 0x171F240
	protected void EndShowServant(bool isDecide) { }

	// RVA: 0x171F2A4 Offset: 0x171F2A4 VA: 0x171F2A4
	protected void OpenSkillInfoDialog(int skillIndex) { }

	// RVA: 0x171F64C Offset: 0x171F64C VA: 0x171F64C
	public void OnClickSkill1() { }

	// RVA: 0x171F650 Offset: 0x171F650 VA: 0x171F650
	public void OnLongPushSkill1() { }

	// RVA: 0x171F658 Offset: 0x171F658 VA: 0x171F658
	public void OnClickSkill2() { }

	// RVA: 0x171F65C Offset: 0x171F65C VA: 0x171F65C
	public void OnLongPushSkill2() { }

	// RVA: 0x171F664 Offset: 0x171F664 VA: 0x171F664
	public void OnClickSkill13() { }

	// RVA: 0x171F668 Offset: 0x171F668 VA: 0x171F668
	public void OnLongPushSkill3() { }

	// RVA: 0x171F670 Offset: 0x171F670 VA: 0x171F670
	public void OnClickSupportInfo() { }

	// RVA: 0x171F738 Offset: 0x171F738 VA: 0x171F738
	public void SelectShowServantEquip(EquipTargetInfo equipInfo, ServantStatusDialog.Kind statusKind) { }

	// RVA: 0x171F7F8 Offset: 0x171F7F8 VA: 0x171F7F8
	protected void EndShowServantEquip(bool isDecide) { }

	// RVA: 0x171F89C Offset: 0x171F89C VA: 0x171F89C
	protected void EndCloseShowServantEquip() { }

	// RVA: 0x171F8A0 Offset: 0x171F8A0 VA: 0x171F8A0
	public void OnLongPushEquip() { }

	// RVA: 0x171FA6C Offset: 0x171FA6C VA: 0x171FA6C
	public void OnClickEquip() { }

	// RVA: 0x171F090 Offset: 0x171F090 VA: 0x171F090
	private int GetTargetDeckId() { }

	// RVA: 0x171FA70 Offset: 0x171FA70 VA: 0x171FA70
	private static void .cctor() { }
}

// Namespace: 
public class IconLabelInfo // TypeDefIndex: 6380
{
	// Fields
	protected IconLabelInfo.IconKind iconKind; // 0x10
	protected int data; // 0x14
	protected int adjustData; // 0x18
	protected int equipData; // 0x1C
	protected long time; // 0x20
	protected bool isHide; // 0x28
	protected bool isMaxHide; // 0x29
	protected int lv; // 0x2C

	// Properties
	public IconLabelInfo.IconKind Kind { get; }
	public int Data { get; }
	public int AdjustData { get; }
	public int EquipData { get; }
	public long TimeData { get; }
	public bool IsHide { get; }
	public bool IsMaxHide { get; }
	public int Lv { get; }

	// Methods

	// RVA: 0x11B6068 Offset: 0x11B6068 VA: 0x11B6068
	public void .ctor() { }

	// RVA: 0x11B6070 Offset: 0x11B6070 VA: 0x11B6070
	public IconLabelInfo.IconKind get_Kind() { }

	// RVA: 0x11B6078 Offset: 0x11B6078 VA: 0x11B6078
	public int get_Data() { }

	// RVA: 0x11B6080 Offset: 0x11B6080 VA: 0x11B6080
	public int get_AdjustData() { }

	// RVA: 0x11B6088 Offset: 0x11B6088 VA: 0x11B6088
	public int get_EquipData() { }

	// RVA: 0x11B6090 Offset: 0x11B6090 VA: 0x11B6090
	public long get_TimeData() { }

	// RVA: 0x11B6098 Offset: 0x11B6098 VA: 0x11B6098
	public bool get_IsHide() { }

	// RVA: 0x11B60A0 Offset: 0x11B60A0 VA: 0x11B60A0
	public bool get_IsMaxHide() { }

	// RVA: 0x11B60A8 Offset: 0x11B60A8 VA: 0x11B60A8
	public int get_Lv() { }

	// RVA: 0x11B60B0 Offset: 0x11B60B0 VA: 0x11B60B0
	public bool IsClear() { }

	// RVA: 0x11B60C0 Offset: 0x11B60C0 VA: 0x11B60C0
	public void Clear() { }

	// RVA: 0x11B60D4 Offset: 0x11B60D4 VA: 0x11B60D4
	public void Set(IconLabelInfo info) { }

	// RVA: 0x11B61D0 Offset: 0x11B61D0 VA: 0x11B61D0
	public void Set(IconLabelInfo.IconKind iconKind, int data = 0, int adjustData = 0, int equipData = 0, bool isHide = False, bool isMaxHide = False, int lv = 0) { }

	// RVA: 0x11B61F4 Offset: 0x11B61F4 VA: 0x11B61F4
	public void SetTime(IconLabelInfo.IconKind iconKind, long time, bool isHide = False, bool isMaxHide = False, int lv = 0) { }

	// RVA: 0x11B621C Offset: 0x11B621C VA: 0x11B621C
	public void SetPurchaseDecision(IconLabelInfo.IconKind iconKind, int price = 0, int holdCount = -1) { }
}

// Namespace: 
public enum IconLabelInfo.IconKind // TypeDefIndex: 6381
{
	// Fields
	public int value__; // 0x0
	public const IconLabelInfo.IconKind CLEAR = 0;
	public const IconLabelInfo.IconKind DATA = 1;
	public const IconLabelInfo.IconKind LEVEL = 2;
	public const IconLabelInfo.IconKind HP = 3;
	public const IconLabelInfo.IconKind HP_COMMA = 4;
	public const IconLabelInfo.IconKind ATK = 5;
	public const IconLabelInfo.IconKind ATK_COMMA = 6;
	public const IconLabelInfo.IconKind COST = 7;
	public const IconLabelInfo.IconKind ID = 8;
	public const IconLabelInfo.IconKind LIMIT_COUNT = 9;
	public const IconLabelInfo.IconKind FREE = 10;
	public const IconLabelInfo.IconKind UNIT = 11;
	public const IconLabelInfo.IconKind STONE_UNIT = 12;
	public const IconLabelInfo.IconKind MANA_UNIT = 13;
	public const IconLabelInfo.IconKind QP_UNIT = 14;
	public const IconLabelInfo.IconKind BANK_UNIT = 15;
	public const IconLabelInfo.IconKind FRIEND_POINT_UNIT = 16;
	public const IconLabelInfo.IconKind FRIEND_RANK_UNIT = 17;
	public const IconLabelInfo.IconKind EVENT_ITEM_UNIT = 18;
	public const IconLabelInfo.IconKind STONE_FRAGMENTS_UNIT = 19;
	public const IconLabelInfo.IconKind ANONYMOUS_UNIT = 20;
	public const IconLabelInfo.IconKind RARE_PRI_UNIT = 21;
	public const IconLabelInfo.IconKind STONE = 22;
	public const IconLabelInfo.IconKind MANA = 23;
	public const IconLabelInfo.IconKind QP = 24;
	public const IconLabelInfo.IconKind BANK = 25;
	public const IconLabelInfo.IconKind FRIEND_POINT = 26;
	public const IconLabelInfo.IconKind EVENT_ITEM = 27;
	public const IconLabelInfo.IconKind STONE_FRAGMENTS = 28;
	public const IconLabelInfo.IconKind ANONYMOUS = 29;
	public const IconLabelInfo.IconKind RARE_PRI = 30;
	public const IconLabelInfo.IconKind GRAIL_FRAGMENTS = 31;
	public const IconLabelInfo.IconKind FRIEND_RANK = 32;
	public const IconLabelInfo.IconKind NP_LEVEL = 33;
	public const IconLabelInfo.IconKind NP_ICON_LEVEL = 34;
	public const IconLabelInfo.IconKind RARITY = 35;
	public const IconLabelInfo.IconKind RARITY_EXCEED = 36;
	public const IconLabelInfo.IconKind AMOUNT = 37;
	public const IconLabelInfo.IconKind ADD_HP = 38;
	public const IconLabelInfo.IconKind ADD_ATK = 39;
	public const IconLabelInfo.IconKind ADD_COST = 40;
	public const IconLabelInfo.IconKind DIFFER_HP = 41;
	public const IconLabelInfo.IconKind DIFFER_ATK = 42;
	public const IconLabelInfo.IconKind DIFFER_COST = 43;
	public const IconLabelInfo.IconKind REINFORCEMENT_HP = 44;
	public const IconLabelInfo.IconKind REINFORCEMENT_ATK = 45;
	public const IconLabelInfo.IconKind EXTENTION_HP = 46;
	public const IconLabelInfo.IconKind EXTENTION_ATK = 47;
	public const IconLabelInfo.IconKind FOLLOWER_SKILL_LEVEL = 48;
	public const IconLabelInfo.IconKind YEAR_DATE = 49;
	public const IconLabelInfo.IconKind ALL_COSTUME = 50;
	public const IconLabelInfo.IconKind HAVE_COSTUME = 51;
	public const IconLabelInfo.IconKind NOT_HAVE_COSTUME = 52;
	public const IconLabelInfo.IconKind NOT_HAVE_RELEASE_ITEM = 53;
	public const IconLabelInfo.IconKind LIMIT_COUNT2 = 54;
	public const IconLabelInfo.IconKind FOLLOWER_FRIEND_POINT = 55;
	public const IconLabelInfo.IconKind NOT_HAVING_SHOP_ITEM_RECEIVE = 56;
	public const IconLabelInfo.IconKind DISP_NO = 57;
}

// Namespace: 
public class ItemIconComponent : BaseMonoBehaviour // TypeDefIndex: 6382
{
	// Fields
	protected static readonly int CHANGE_FONT_COUNT; // 0x0
	protected static readonly int DEFAULT_FONT_SIZE; // 0x4
	protected static readonly int OVER_FIVE_LENGTH; // 0x8
	protected static readonly int EQUIP_ITEM_RARITY; // 0xC
	private static readonly string ASSIST_SPRITE_NAME; // 0x10
	[SerializeField] // RVA: 0xC53F98 Offset: 0xC53F98 VA: 0xC53F98
	protected UISprite backSprite; // 0x18
	[SerializeField] // RVA: 0xC53FA8 Offset: 0xC53FA8 VA: 0xC53FA8
	protected UISprite iconSprite; // 0x20
	[SerializeField] // RVA: 0xC53FB8 Offset: 0xC53FB8 VA: 0xC53FB8
	protected UISprite frameSprite; // 0x28
	[SerializeField] // RVA: 0xC53FC8 Offset: 0xC53FC8 VA: 0xC53FC8
	protected UISprite typeSprite; // 0x30
	[SerializeField] // RVA: 0xC53FD8 Offset: 0xC53FD8 VA: 0xC53FD8
	protected UISprite classSprite; // 0x38
	[SerializeField] // RVA: 0xC53FE8 Offset: 0xC53FE8 VA: 0xC53FE8
	protected UISprite raritySprite; // 0x40
	[SerializeField] // RVA: 0xC53FF8 Offset: 0xC53FF8 VA: 0xC53FF8
	protected UILabel counterLabel; // 0x48
	[SerializeField] // RVA: 0xC54008 Offset: 0xC54008 VA: 0xC54008
	protected ShiningIconComponent svtJoinIcon; // 0x50
	[SerializeField] // RVA: 0xC54018 Offset: 0xC54018 VA: 0xC54018
	protected GameObject possessionRoot; // 0x58
	private int possessionNum; // 0x60
	private static readonly float PossessionLabelWidth; // 0x18
	[SerializeField] // RVA: 0xC54028 Offset: 0xC54028 VA: 0xC54028
	protected UISprite materialTdSprite; // 0x68
	private ItemEntity itemEnt; // 0x70
	private int commandCodeId; // 0x78
	private int svtId; // 0x7C

	// Properties
	public UISprite IconSprite { get; }

	// Methods

	// RVA: 0x11BC094 Offset: 0x11BC094 VA: 0x11BC094
	public void .ctor() { }

	// RVA: 0x11BC09C Offset: 0x11BC09C VA: 0x11BC09C
	public UISprite get_IconSprite() { }

	// RVA: 0x11BC0A4 Offset: 0x11BC0A4 VA: 0x11BC0A4
	protected void Awake() { }

	// RVA: 0x11BC1D0 Offset: 0x11BC1D0 VA: 0x11BC1D0
	public void Clear() { }

	// RVA: 0x11BC524 Offset: 0x11BC524 VA: 0x11BC524
	public void SetItem(int itemId, int count = -1) { }

	// RVA: 0x11BC5D0 Offset: 0x11BC5D0 VA: 0x11BC5D0
	public void SetItem(ItemEntity itemEntity, int count = -1) { }

	// RVA: 0x11BD2B4 Offset: 0x11BD2B4 VA: 0x11BD2B4
	public void SetCombineItem(int itemId, int count = -1) { }

	// RVA: 0x11BD840 Offset: 0x11BD840 VA: 0x11BD840
	public void SetEquipItem(int equipItemId) { }

	// RVA: 0x11BDCF4 Offset: 0x11BDCF4 VA: 0x11BDCF4
	public void SetGift(Gift.Type giftType, int objectId = 0, int count = -1, bool isQuestBoard = False) { }

	// RVA: 0x11BECEC Offset: 0x11BECEC VA: 0x11BECEC
	public void SetGiftDesignSize(Gift.Type giftType, int objectId = 0, int count = -1) { }

	// RVA: 0x11BEC1C Offset: 0x11BEC1C VA: 0x11BEC1C
	public void SetPresentItem(ItemEntity itemEnt, int count = -1) { }

	// RVA: 0x11BEE40 Offset: 0x11BEE40 VA: 0x11BEE40
	public void SetPurchase(GamePurchase.Type purchaseType, int targetId, int imageId) { }

	// RVA: 0x11BF0FC Offset: 0x11BF0FC VA: 0x11BF0FC
	public void SetPointEvent(int eventId) { }

	// RVA: 0x11BF1AC Offset: 0x11BF1AC VA: 0x11BF1AC
	public void SetRaidEvent(int eventId) { }

	// RVA: 0x11BECDC Offset: 0x11BECDC VA: 0x11BECDC
	public void SetItemImage(ImageItem.Id imageId) { }

	// RVA: 0x11BE70C Offset: 0x11BE70C VA: 0x11BE70C
	public void SetItemImage(ImageItem.Id imageId, int count) { }

	// RVA: 0x11BF25C Offset: 0x11BF25C VA: 0x11BF25C
	public void SetItemImage(ImageItem.Id imageId, int objectId, int count) { }

	// RVA: 0x11BF3A0 Offset: 0x11BF3A0 VA: 0x11BF3A0
	public void SetEventPointBuffImage(int imageId, int bgImageId) { }

	// RVA: 0x11BCC28 Offset: 0x11BCC28 VA: 0x11BCC28
	public void SetItemImage(ImageItem.Id imageId, int bgImageId, int type, int count) { }

	// RVA: 0x11BC6E0 Offset: 0x11BC6E0 VA: 0x11BC6E0
	public void SetCoinImage(int coinImageId, int bgImageId, int type, int count) { }

	// RVA: 0x11BD3BC Offset: 0x11BD3BC VA: 0x11BD3BC
	public void SetCombineItemImage(int imageId, int bgImageId, int count = -1, bool isCoin = False) { }

	// RVA: 0x11BD844 Offset: 0x11BD844 VA: 0x11BD844
	public void SetEquipItemImage(int equipImageId) { }

	// RVA: 0x11BDFE4 Offset: 0x11BDFE4 VA: 0x11BDFE4
	public void SetFaceImage(int svtId, int limitCount, int count = -1, Gift.Type giftType = 1, bool isQuestBoard = False) { }

	// RVA: 0x11BE720 Offset: 0x11BE720 VA: 0x11BE720
	public void SetCommandCodeImage(int commandCodeId, int count = -1) { }

	// RVA: 0x11BF82C Offset: 0x11BF82C VA: 0x11BF82C
	public void SetDepth(int depth) { }

	// RVA: 0x11BFBD0 Offset: 0x11BFBD0 VA: 0x11BFBD0
	public void SetColor(Color col) { }

	// RVA: 0x11BFED8 Offset: 0x11BFED8 VA: 0x11BFED8
	public void SetAlpha(float alpha) { }

	// RVA: 0x11C0190 Offset: 0x11C0190 VA: 0x11C0190
	public void setLocalScaleIconSprite(float scale) { }

	// RVA: 0x11C0248 Offset: 0x11C0248 VA: 0x11C0248
	public void setLocalPositionIconSprite(float x) { }

	// RVA: 0x11C0300 Offset: 0x11C0300 VA: 0x11C0300
	public void setTypeSpritePositionY(float y) { }

	// RVA: 0x11C0408 Offset: 0x11C0408 VA: 0x11C0408
	public void setFrameSprite(bool isSetActive, string frameName = "") { }

	// RVA: 0x11C05FC Offset: 0x11C05FC VA: 0x11C05FC
	public void ShowPossession(bool showPossession) { }

	// RVA: 0x11C06FC Offset: 0x11C06FC VA: 0x11C06FC
	public void SetPossession(int possessionNum) { }

	// RVA: 0x11C0988 Offset: 0x11C0988 VA: 0x11C0988
	public void OnClickItem(UIScrollBar bar) { }

	// RVA: 0x11C0CC8 Offset: 0x11C0CC8 VA: 0x11C0CC8
	public void closeItemDetail(bool isDecide) { }

	// RVA: 0x11C0D54 Offset: 0x11C0D54 VA: 0x11C0D54
	private void closeSvtDetail(bool isDecide) { }

	// RVA: 0x11C0DB8 Offset: 0x11C0DB8 VA: 0x11C0DB8
	private void CloseCommandCodeDetail(bool isDecide) { }

	// RVA: 0x11C0E1C Offset: 0x11C0E1C VA: 0x11C0E1C
	public void SetNotifyDirectGetCounter(int condensedWidth) { }

	// RVA: 0x11C0EC4 Offset: 0x11C0EC4 VA: 0x11C0EC4
	private static void .cctor() { }
}

// Namespace: 
public class ItemIconWithConsumptionNumberComponent : ItemIconComponent // TypeDefIndex: 6383
{
	// Fields
	[SerializeField] // RVA: 0xC54038 Offset: 0xC54038 VA: 0xC54038
	protected UILabel consumptionNumberLabel; // 0x80

	// Methods

	// RVA: 0x11C0F64 Offset: 0x11C0F64 VA: 0x11C0F64
	public void .ctor() { }

	// RVA: 0x11C0FCC Offset: 0x11C0FCC VA: 0x11C0FCC
	public void SetConsumptionNumber(int consumptionNumber) { }
}

// Namespace: 
public class JsonManager // TypeDefIndex: 6384
{
	// Fields
	private static JsonManager singleton; // 0x0
	private static char[] stringReplaceList; // 0x8
	private static StringBuilder strBuilder; // 0x10

	// Methods

	// RVA: 0x11C391C Offset: 0x11C391C VA: 0x11C391C
	private void .ctor() { }

	// RVA: 0x11C3924 Offset: 0x11C3924 VA: 0x11C3924
	public static JsonManager GetInstance() { }

	// RVA: 0x11C398C Offset: 0x11C398C VA: 0x11C398C
	public static Dictionary<string, object> getDictionary(string jsonstr) { }

	// RVA: 0x11C3A60 Offset: 0x11C3A60 VA: 0x11C3A60
	public static Dictionary<string, object> getDictionary(object obj) { }

	// RVA: -1 Offset: -1
	public static T Deserialize<T>(object obj) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C20818 Offset: 0x1C20818 VA: 0x1C20818
	|-JsonManager.Deserialize<BattlePerformance.RaidInfoResult>
	|-JsonManager.Deserialize<BattleScriptRootComponent.TalkScriptSaveInfo>
	|-JsonManager.Deserialize<BattleServantData.SaveData>
	|-JsonManager.Deserialize<CommonUI.LoginResultData>
	|-JsonManager.Deserialize<EventConquestInfo[]>
	|-JsonManager.Deserialize<EventDailyPoint>
	|-JsonManager.Deserialize<EventHarvestGrowthInfo>
	|-JsonManager.Deserialize<EventLocationRequest.LocationGift>
	|-JsonManager.Deserialize<EventSaveData>
	|-JsonManager.Deserialize<ServantCommentManager.ClearWarInfo>
	|-JsonManager.Deserialize<Dictionary<string, object>>
	|-JsonManager.Deserialize<object>
	|-JsonManager.Deserialize<TerminalPramsManager.ClearData>
	|-JsonManager.Deserialize<TopHomeInfo>
	|-JsonManager.Deserialize<WarBoardDataEntity>
	|-JsonManager.Deserialize<WarBoardUserServantData>
	*/
