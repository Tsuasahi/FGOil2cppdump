	// RVA: 0x1DFB54C Offset: 0x1DFB54C VA: 0x1DFB54C
	public void OnClickFaceCharaLevel(int dispLv) { }

	// RVA: 0x1DFB66C Offset: 0x1DFB66C VA: 0x1DFB66C
	public void OnClickFaceCharaCostume(int costumeIndex) { }

	// RVA: 0x1DFF51C Offset: 0x1DFF51C VA: 0x1DFF51C
	protected void ChangePortraitResource(int dispLv) { }

	// RVA: 0x1DFB7E8 Offset: 0x1DFB7E8 VA: 0x1DFB7E8
	public void OnClickPortraitCharaLevel(int dispLv) { }

	// RVA: 0x1DFB908 Offset: 0x1DFB908 VA: 0x1DFB908
	public void OnClickPortraitCharaCostume(int costumeIndex) { }

	// RVA: 0x1DFBA84 Offset: 0x1DFBA84 VA: 0x1DFBA84
	public void OnClickCommandCodeShow(int index) { }

	// RVA: 0x1DFBE58 Offset: 0x1DFBE58 VA: 0x1DFBE58
	public void OnClickServantQuest(int questId) { }

	// RVA: 0x1DFC380 Offset: 0x1DFC380 VA: 0x1DFC380
	public void OnClickTdSpeed(int type) { }

	// RVA: 0x1DFC7E4 Offset: 0x1DFC7E4 VA: 0x1DFC7E4
	public void OnClickRandomLimitCountSupport(int index) { }

	// RVA: 0x1DFF5F4 Offset: 0x1DFF5F4 VA: 0x1DFF5F4
	protected void RandomLimitCountSupportResource(int index) { }

	// RVA: 0x1DFC884 Offset: 0x1DFC884 VA: 0x1DFC884
	public void OnClickRandomLimitCountSetting(int id) { }

	// RVA: 0x1DFF6CC Offset: 0x1DFF6CC VA: 0x1DFF6CC
	protected void RandomLimitCountSettingResource(bool isOwnSetting) { }

	// RVA: 0x1DFFCE0 Offset: 0x1DFFCE0 VA: 0x1DFFCE0
	private bool IsContainRandomIndex() { }

	// RVA: 0x1DFC6C4 Offset: 0x1DFC6C4 VA: 0x1DFC6C4
	public void OnClickChangeVoice(int type) { }

	// RVA: 0x1E0001C Offset: 0x1E0001C VA: 0x1E0001C
	protected void OnConfirmServantQuest(bool isDecide) { }

	// RVA: 0x1E002B0 Offset: 0x1E002B0 VA: 0x1E002B0
	protected void EndCloseConfirmServantQuest() { }

	// RVA: 0x1E002B4 Offset: 0x1E002B4 VA: 0x1E002B4
	public void OnClickLock() { }

	// RVA: 0x1E003C0 Offset: 0x1E003C0 VA: 0x1E003C0
	public void OnClickChoice() { }

	// RVA: 0x1E004CC Offset: 0x1E004CC VA: 0x1E004CC
	public void OnClickFavorite() { }

	// RVA: 0x1E00D8C Offset: 0x1E00D8C VA: 0x1E00D8C
	protected void OnConfirmSelectFavorite(bool isDecide) { }

	// RVA: 0x1E00ED8 Offset: 0x1E00ED8 VA: 0x1E00ED8
	protected void EndCloseConfirmSelectFavorite() { }

	// RVA: 0x1E00EDC Offset: 0x1E00EDC VA: 0x1E00EDC
	public void OnClickPush() { }

	// RVA: 0x1E01724 Offset: 0x1E01724 VA: 0x1E01724
	protected void OnConfirmSelectPush(bool isDecide) { }

	// RVA: 0x1E01870 Offset: 0x1E01870 VA: 0x1E01870
	protected void EndCloseConfirmSelectPush() { }

	// RVA: 0x1DEED9C Offset: 0x1DEED9C VA: 0x1DEED9C
	public void UpdateProfileList(bool setMode) { }

	// RVA: 0x1E01874 Offset: 0x1E01874 VA: 0x1E01874
	private void OnEnable() { }

	// RVA: 0x1E01974 Offset: 0x1E01974 VA: 0x1E01974
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35908 Offset: 0xD35908 VA: 0xD35908
	// RVA: 0x1E019D0 Offset: 0x1E019D0 VA: 0x1E019D0
	private void <Init>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35918 Offset: 0xD35918 VA: 0xD35918
	// RVA: 0x1E01AAC Offset: 0x1E01AAC VA: 0x1E01AAC
	private void <InitList>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35928 Offset: 0xD35928 VA: 0xD35928
	// RVA: 0x1E01AD4 Offset: 0x1E01AD4 VA: 0x1E01AD4
	private void <OnclickRandomLimitCountMask>m__2(bool isDecide) { }

	[CompilerGeneratedAttribute] // RVA: 0xD35938 Offset: 0xD35938 VA: 0xD35938
	// RVA: 0x1E01ADC Offset: 0x1E01ADC VA: 0x1E01ADC
	private void <OnConfirmServantQuest>m__3() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35948 Offset: 0xD35948 VA: 0xD35948
	// RVA: 0x1E01BB8 Offset: 0x1E01BB8 VA: 0x1E01BB8
	private void <UpdateProfileList>m__4(ServantCommentEntity entity) { }
}

// Namespace: 
public enum ServantStatusDialog.MaskType // TypeDefIndex: 5714
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusDialog.MaskType NONE = 0;
	public const ServantStatusDialog.MaskType RANDOM_LIMIT_COUNT_SETTING = 1;
	public const ServantStatusDialog.MaskType SELECT_RANDOM_LIMIT_COUNT_SUPPORT = 2;
	public const ServantStatusDialog.MaskType RANDOM_LIMIT_COUNT_OTHER_SETTING = 3;
}

// Namespace: 
public enum ServantStatusDialog.Kind // TypeDefIndex: 5715
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusDialog.Kind NORMAL = 0;
	public const ServantStatusDialog.Kind PARTY = 1;
	public const ServantStatusDialog.Kind COLLECTION = 2;
	public const ServantStatusDialog.Kind STORAGE = 3;
	public const ServantStatusDialog.Kind FRIEND = 4;
	public const ServantStatusDialog.Kind FOLLOWER = 5;
	public const ServantStatusDialog.Kind FIRST_SINGLE_GET = 6;
	public const ServantStatusDialog.Kind DROP = 7;
	public const ServantStatusDialog.Kind SUMMON = 8;
	public const ServantStatusDialog.Kind COMBINE = 9;
	public const ServantStatusDialog.Kind COMBINE_MATERIAL = 10;
	public const ServantStatusDialog.Kind SERVANT_EQUIP = 11;
	public const ServantStatusDialog.Kind STORAGE_SERVANT_EQUIP = 12;
	public const ServantStatusDialog.Kind FRIEND_SERVANT_EQUIP = 13;
	public const ServantStatusDialog.Kind FOLLOWER_SERVANT_EQUIP = 14;
	public const ServantStatusDialog.Kind FIRST_SINGLE_GET_SERVANT_EQUIP = 15;
	public const ServantStatusDialog.Kind DROP_SERVANT_EQUIP = 16;
	public const ServantStatusDialog.Kind SUMMON_SERVANT_EQUIP = 17;
	public const ServantStatusDialog.Kind COMBINE_SERVANT_EQUIP = 18;
	public const ServantStatusDialog.Kind NPC_FOLLOWER_SERVANT_EQUIP = 19;
	public const ServantStatusDialog.Kind COMMAND_CODE = 20;
	public const ServantStatusDialog.Kind STORAGE_COMMAND_CODE = 21;
	public const ServantStatusDialog.Kind FRIEND_COMMAND_CODE = 22;
	public const ServantStatusDialog.Kind FOLLOWER_COMMAND_CODE = 23;
	public const ServantStatusDialog.Kind FIRST_SINGLE_GET_COMMAND_CODE = 24;
	public const ServantStatusDialog.Kind DROP_COMMAND_CODE = 25;
	public const ServantStatusDialog.Kind SUMMON_COMMAND_CODE = 26;
	public const ServantStatusDialog.Kind COMBINE_COMMAND_CODE = 27;
	public const ServantStatusDialog.Kind ENEMY_COLLECTION_DETAIL = 28;
	public const ServantStatusDialog.Kind CONFIRM_DIALOG_SVT = 29;
	public const ServantStatusDialog.Kind CONFIRM_DIALOG_NOSVT = 30;
	public const ServantStatusDialog.Kind CONFIRM_DIALOG_EQUIP = 31;
	public const ServantStatusDialog.Kind CONFIRM_DIALOG_COMMAND_CODE = 32;
	public const ServantStatusDialog.Kind COLLECTION_PROFILE = 33;
	public const ServantStatusDialog.Kind SHOP = 34;
	public const ServantStatusDialog.Kind COMBINE_SERVANT_SELECTED = 35;
	public const ServantStatusDialog.Kind COMBINE_MATERIAL_SELECTED = 36;
}

// Namespace: 
public enum ServantStatusDialog.TabKind // TypeDefIndex: 5716
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusDialog.TabKind STATUS = 0;
	public const ServantStatusDialog.TabKind PROFILE = 1;
	public const ServantStatusDialog.TabKind BATTLE = 2;
	public const ServantStatusDialog.TabKind VOICE = 3;
	public const ServantStatusDialog.TabKind SUM = 4;
}

// Namespace: 
protected enum ServantStatusDialog.VoiceAssetType // TypeDefIndex: 5717
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusDialog.VoiceAssetType BATTLE = 0;
	public const ServantStatusDialog.VoiceAssetType HOME = 1;
	public const ServantStatusDialog.VoiceAssetType NP = 2;
}

// Namespace: 
public sealed class ServantStatusDialog.EndDelegate : MulticastDelegate // TypeDefIndex: 5718
{
	// Methods

	// RVA: 0x20B2EBC Offset: 0x20B2EBC VA: 0x20B2EBC
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20B2ECC Offset: 0x20B2ECC VA: 0x20B2ECC Slot: 11
	public virtual void Invoke(bool isModify) { }

	// RVA: 0x20B30F8 Offset: 0x20B30F8 VA: 0x20B30F8 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isModify, AsyncCallback callback, object object) { }

	// RVA: 0x20B3188 Offset: 0x20B3188 VA: 0x20B3188 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class ServantStatusDialog.FormationEndDelegate : MulticastDelegate // TypeDefIndex: 5719
{
	// Methods

	// RVA: 0x20B34A0 Offset: 0x20B34A0 VA: 0x20B34A0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20B34B0 Offset: 0x20B34B0 VA: 0x20B34B0 Slot: 11
	public virtual void Invoke(bool isModify, int questId) { }

	// RVA: 0x20B36F4 Offset: 0x20B36F4 VA: 0x20B36F4 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isModify, int questId, AsyncCallback callback, object object) { }

	// RVA: 0x20B37A4 Offset: 0x20B37A4 VA: 0x20B37A4 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class ServantStatusDialog.ResultDelegate : MulticastDelegate // TypeDefIndex: 5720
{
	// Methods

	// RVA: 0x20B37B0 Offset: 0x20B37B0 VA: 0x20B37B0
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20B37C0 Offset: 0x20B37C0 VA: 0x20B37C0 Slot: 11
	public virtual void Invoke(bool isModify, bool isIndividualityChanged, int questId) { }

	// RVA: 0x20B3A2C Offset: 0x20B3A2C VA: 0x20B3A2C Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isModify, bool isIndividualityChanged, int questId, AsyncCallback callback, object object) { }

	// RVA: 0x20B3AF8 Offset: 0x20B3AF8 VA: 0x20B3AF8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class ServantStatusDialog.EndIndividualityDelegate : MulticastDelegate // TypeDefIndex: 5721
{
	// Methods

	// RVA: 0x20B3194 Offset: 0x20B3194 VA: 0x20B3194
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20B31A4 Offset: 0x20B31A4 VA: 0x20B31A4 Slot: 11
	public virtual void Invoke(bool isModify, bool isIndividualityChanged) { }

	// RVA: 0x20B33E8 Offset: 0x20B33E8 VA: 0x20B33E8 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool isModify, bool isIndividualityChanged, AsyncCallback callback, object object) { }

	// RVA: 0x20B3494 Offset: 0x20B3494 VA: 0x20B3494 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE100 Offset: 0xCAE100 VA: 0xCAE100
private sealed class ServantStatusDialog.<OnClickTdSpeed>c__AnonStorey0 // TypeDefIndex: 5722
{
	// Fields
	internal int type; // 0x10
	internal ServantStatusDialog $this; // 0x18

	// Methods

	// RVA: 0x20B27B8 Offset: 0x20B27B8 VA: 0x20B27B8
	public void .ctor() { }

	// RVA: 0x20B27C0 Offset: 0x20B27C0 VA: 0x20B27C0
	internal void <>m__0(bool isDecide) { }

	// RVA: 0x20B28C8 Offset: 0x20B28C8 VA: 0x20B28C8
	internal void <>m__1() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE110 Offset: 0xCAE110 VA: 0xCAE110
private sealed class ServantStatusDialog.<RandomLimitCountSettingResource>c__AnonStorey1 // TypeDefIndex: 5723
{
	// Fields
	internal int OrtenausCostumeId; // 0x10
	internal bool isOwnSetting; // 0x14
	internal ServantStatusDialog $this; // 0x18

	// Methods

	// RVA: 0x20B2974 Offset: 0x20B2974 VA: 0x20B2974
	public void .ctor() { }

	// RVA: 0x20B297C Offset: 0x20B297C VA: 0x20B297C
	internal bool <>m__0(int x) { }

	// RVA: 0x20B298C Offset: 0x20B298C VA: 0x20B298C
	internal void <>m__1(bool isDecide) { }

	// RVA: 0x20B2CA4 Offset: 0x20B2CA4 VA: 0x20B2CA4
	internal void <>m__2(bool isDecide) { }
}

// Namespace: 
public class ServantStatusFlavorTextListViewItemDraw : MonoBehaviour // TypeDefIndex: 5724
{
	// Fields
	protected ServantStatusFlavorTextListViewItemDraw.DispMode dispMode; // 0x18

	// Methods

	// RVA: 0x20B3B04 Offset: 0x20B3B04 VA: 0x20B3B04
	public void .ctor() { }

	// RVA: 0x20B3B0C Offset: 0x20B3B0C VA: 0x20B3B0C Slot: 4
	public virtual ServantStatusFlavorTextListViewItemDraw.Kind GetKind() { }

	// RVA: 0x20B3B14 Offset: 0x20B3B14 VA: 0x20B3B14 Slot: 5
	public virtual void SetItem(ServantStatusListViewItem item, bool isOpen, bool isNew, string text, int profileNum, ServantStatusFlavorTextListViewItemDraw.DispMode mode) { }

	// RVA: 0x20B3B1C Offset: 0x20B3B1C VA: 0x20B3B1C Slot: 6
	public virtual void SetCondTitle(string title) { }
}

// Namespace: 
public enum ServantStatusFlavorTextListViewItemDraw.Kind // TypeDefIndex: 5725
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusFlavorTextListViewItemDraw.Kind NONE = 0;
	public const ServantStatusFlavorTextListViewItemDraw.Kind TEXT = 1;
	public const ServantStatusFlavorTextListViewItemDraw.Kind TEXT2 = 2;
	public const ServantStatusFlavorTextListViewItemDraw.Kind VOICE = 3;
	public const ServantStatusFlavorTextListViewItemDraw.Kind VOICE2 = 4;
	public const ServantStatusFlavorTextListViewItemDraw.Kind PARAM = 5;
	public const ServantStatusFlavorTextListViewItemDraw.Kind TERMINAL = 6;
}

// Namespace: 
public enum ServantStatusFlavorTextListViewItemDraw.DispMode // TypeDefIndex: 5726
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusFlavorTextListViewItemDraw.DispMode INVISIBLE = 0;
	public const ServantStatusFlavorTextListViewItemDraw.DispMode INVALID = 1;
	public const ServantStatusFlavorTextListViewItemDraw.DispMode VALID = 2;
	public const ServantStatusFlavorTextListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class ServantStatusFlavorTextListViewItemDrawParam : ServantStatusFlavorTextListViewItemDraw // TypeDefIndex: 5727
{
	// Fields
	[SerializeField] // RVA: 0xCBB56C Offset: 0xCBB56C VA: 0xCBB56C
	protected UISprite baseSprite; // 0x20
	[SerializeField] // RVA: 0xCBB57C Offset: 0xCBB57C VA: 0xCBB57C
	protected ServantStatusParameterGauge powerGauge; // 0x28
	[SerializeField] // RVA: 0xCBB58C Offset: 0xCBB58C VA: 0xCBB58C
	protected ServantStatusParameterGauge defenseGauge; // 0x30
	[SerializeField] // RVA: 0xCBB59C Offset: 0xCBB59C VA: 0xCBB59C
	protected ServantStatusParameterGauge agilityGauge; // 0x38
	[SerializeField] // RVA: 0xCBB5AC Offset: 0xCBB5AC VA: 0xCBB5AC
	protected ServantStatusParameterGauge magicGauge; // 0x40
	[SerializeField] // RVA: 0xCBB5BC Offset: 0xCBB5BC VA: 0xCBB5BC
	protected ServantStatusParameterGauge luckGauge; // 0x48
	[SerializeField] // RVA: 0xCBB5CC Offset: 0xCBB5CC VA: 0xCBB5CC
	protected ServantStatusParameterGauge npGauge; // 0x50

	// Methods

	// RVA: 0x20B3B20 Offset: 0x20B3B20 VA: 0x20B3B20
	public void .ctor() { }

	// RVA: 0x20B3B28 Offset: 0x20B3B28 VA: 0x20B3B28 Slot: 4
	public override ServantStatusFlavorTextListViewItemDraw.Kind GetKind() { }

	// RVA: 0x20B3B30 Offset: 0x20B3B30 VA: 0x20B3B30 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, bool isOpen, bool isNew, string text, int profileNum, ServantStatusFlavorTextListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public class ServantStatusFlavorTextListViewItemDrawTerminal : ServantStatusFlavorTextListViewItemDraw // TypeDefIndex: 5728
{
	// Methods

	// RVA: 0x20B3DC8 Offset: 0x20B3DC8 VA: 0x20B3DC8
	public void .ctor() { }

	// RVA: 0x20B3DD0 Offset: 0x20B3DD0 VA: 0x20B3DD0 Slot: 4
	public override ServantStatusFlavorTextListViewItemDraw.Kind GetKind() { }
}

// Namespace: 
public class ServantStatusFlavorTextListViewItemDrawText : ServantStatusFlavorTextListViewItemDraw // TypeDefIndex: 5729
{
	// Fields
	private static readonly int TITLE_NAME_CONDENSED_WIDTH; // 0x0
	private static readonly int TITLE_NAME_LEFT_POS; // 0x4
	[SerializeField] // RVA: 0xCBB5DC Offset: 0xCBB5DC VA: 0xCBB5DC
	protected UICommonButton baseButton; // 0x20
	[SerializeField] // RVA: 0xCBB5EC Offset: 0xCBB5EC VA: 0xCBB5EC
	protected BoxCollider baseCollider; // 0x28
	[SerializeField] // RVA: 0xCBB5FC Offset: 0xCBB5FC VA: 0xCBB5FC
	protected UISprite baseSprite; // 0x30
	[SerializeField] // RVA: 0xCBB60C Offset: 0xCBB60C VA: 0xCBB60C
	protected GameObject titleBase; // 0x38
	[SerializeField] // RVA: 0xCBB61C Offset: 0xCBB61C VA: 0xCBB61C
	protected GameObject titleServantBase; // 0x40
	[SerializeField] // RVA: 0xCBB62C Offset: 0xCBB62C VA: 0xCBB62C
	protected GameObject titleEquipBase; // 0x48
	[SerializeField] // RVA: 0xCBB63C Offset: 0xCBB63C VA: 0xCBB63C
	protected GameObject titleCommandCodeBase; // 0x50
	[SerializeField] // RVA: 0xCBB64C Offset: 0xCBB64C VA: 0xCBB64C
	protected UILabel messageLabel; // 0x58
	[SerializeField] // RVA: 0xCBB65C Offset: 0xCBB65C VA: 0xCBB65C
	protected ShiningIconComponent newIcon; // 0x60
	[SerializeField] // RVA: 0xCBB66C Offset: 0xCBB66C VA: 0xCBB66C
	private UILabel titleName; // 0x68
	protected bool isFirst; // 0x70

	// Methods

	// RVA: 0x20B3DD8 Offset: 0x20B3DD8 VA: 0x20B3DD8
	public void .ctor() { }

	// RVA: 0x20B3DE8 Offset: 0x20B3DE8 VA: 0x20B3DE8 Slot: 4
	public override ServantStatusFlavorTextListViewItemDraw.Kind GetKind() { }

	// RVA: 0x20B3DF0 Offset: 0x20B3DF0 VA: 0x20B3DF0 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, bool isOpen, bool isNew, string text, int profileNum, ServantStatusFlavorTextListViewItemDraw.DispMode mode) { }

	// RVA: 0x20B444C Offset: 0x20B444C VA: 0x20B444C Slot: 6
	public override void SetCondTitle(string title) { }

	// RVA: 0x20B48C0 Offset: 0x20B48C0 VA: 0x20B48C0
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusFlavorTextListViewItemDrawText2 : ServantStatusFlavorTextListViewItemDraw // TypeDefIndex: 5730
{
	// Fields
	private static int LABEL_HEIGHT_MAX; // 0x0
	private static readonly int TITLE_NAME_CONDENSED_WIDTH; // 0x4
	private static readonly int TITLE_NAME_LEFT_POS; // 0x8
	public static readonly string TITLE_BASE_SPRITE_NAME; // 0x10
	public static readonly string TITLE_BASE_LONG_SPRITE_NAME; // 0x18
	[SerializeField] // RVA: 0xCBB67C Offset: 0xCBB67C VA: 0xCBB67C
	protected BoxCollider baseCollider; // 0x20
	[SerializeField] // RVA: 0xCBB68C Offset: 0xCBB68C VA: 0xCBB68C
	protected UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xCBB69C Offset: 0xCBB69C VA: 0xCBB69C
	protected UISprite titleBase; // 0x30
	[SerializeField] // RVA: 0xCBB6AC Offset: 0xCBB6AC VA: 0xCBB6AC
	protected UISprite titleNumSprite; // 0x38
	[SerializeField] // RVA: 0xCBB6BC Offset: 0xCBB6BC VA: 0xCBB6BC
	protected UILabel messageLabel; // 0x40
	[SerializeField] // RVA: 0xCBB6CC Offset: 0xCBB6CC VA: 0xCBB6CC
	protected ShiningIconComponent newIcon; // 0x48
	[SerializeField] // RVA: 0xCBB6DC Offset: 0xCBB6DC VA: 0xCBB6DC
	protected int profileNumMax; // 0x50
	[SerializeField] // RVA: 0xCBB6EC Offset: 0xCBB6EC VA: 0xCBB6EC
	protected int messageShift; // 0x54
	[SerializeField] // RVA: 0xCBB6FC Offset: 0xCBB6FC VA: 0xCBB6FC
	private UILabel titleName; // 0x58
	protected bool isFirst; // 0x60

	// Properties
	public Vector3 MessageLabelPosition { get; }
	public float MessageLabelHeight { get; }
	public int MessageLabelFontSize { get; }

	// Methods

	// RVA: 0x20B4924 Offset: 0x20B4924 VA: 0x20B4924
	public void .ctor() { }

	// RVA: 0x20B4934 Offset: 0x20B4934 VA: 0x20B4934
	public Vector3 get_MessageLabelPosition() { }

	// RVA: 0x20B497C Offset: 0x20B497C VA: 0x20B497C
	public float get_MessageLabelHeight() { }

	// RVA: 0x20B49B4 Offset: 0x20B49B4 VA: 0x20B49B4
	public int get_MessageLabelFontSize() { }

	// RVA: 0x20B49E4 Offset: 0x20B49E4 VA: 0x20B49E4 Slot: 4
	public override ServantStatusFlavorTextListViewItemDraw.Kind GetKind() { }

	// RVA: 0x20B49EC Offset: 0x20B49EC VA: 0x20B49EC Slot: 5
	public override void SetItem(ServantStatusListViewItem item, bool isOpen, bool isNew, string text, int profileNum, ServantStatusFlavorTextListViewItemDraw.DispMode mode) { }

	// RVA: 0x20B4F38 Offset: 0x20B4F38 VA: 0x20B4F38 Slot: 6
	public override void SetCondTitle(string title) { }

	// RVA: 0x20B52F8 Offset: 0x20B52F8 VA: 0x20B52F8
	private static void .cctor() { }
}

// Namespace: 
public class ServantStatusFlavorTextListViewItemDrawVoice : ServantStatusFlavorTextListViewItemDraw // TypeDefIndex: 5731
{
	// Fields
	[SerializeField] // RVA: 0xCBB70C Offset: 0xCBB70C VA: 0xCBB70C
	protected UILabel illustTitleLabel; // 0x20
	[SerializeField] // RVA: 0xCBB71C Offset: 0xCBB71C VA: 0xCBB71C
	protected UIRangeLabel illustRangeLabel; // 0x28
	[SerializeField] // RVA: 0xCBB72C Offset: 0xCBB72C VA: 0xCBB72C
	protected UILabel cvTitleLabel; // 0x30
	[SerializeField] // RVA: 0xCBB73C Offset: 0xCBB73C VA: 0xCBB73C
	protected UIRangeLabel cvRangeLabel; // 0x38

	// Methods

	// RVA: 0x20B5394 Offset: 0x20B5394 VA: 0x20B5394
	public void .ctor() { }

	// RVA: 0x20B539C Offset: 0x20B539C VA: 0x20B539C Slot: 4
	public override ServantStatusFlavorTextListViewItemDraw.Kind GetKind() { }

	// RVA: 0x20B53A4 Offset: 0x20B53A4 VA: 0x20B53A4 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, bool isOpen, bool isNew, string text, int profileNum, ServantStatusFlavorTextListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public class ServantStatusFlavorTextListViewItemDrawVoice2 : ServantStatusFlavorTextListViewItemDraw // TypeDefIndex: 5732
{
	// Fields
	[SerializeField] // RVA: 0xCBB74C Offset: 0xCBB74C VA: 0xCBB74C
	protected BoxCollider baseCollider; // 0x20
	[SerializeField] // RVA: 0xCBB75C Offset: 0xCBB75C VA: 0xCBB75C
	protected UISprite baseSprite; // 0x28
	[SerializeField] // RVA: 0xCBB76C Offset: 0xCBB76C VA: 0xCBB76C
	protected GameObject titleBase; // 0x30
	[SerializeField] // RVA: 0xCBB77C Offset: 0xCBB77C VA: 0xCBB77C
	protected UILabel illustLabel; // 0x38
	protected bool isFirst; // 0x40

	// Methods

	// RVA: 0x20B580C Offset: 0x20B580C VA: 0x20B580C
	public void .ctor() { }

	// RVA: 0x20B581C Offset: 0x20B581C VA: 0x20B581C Slot: 4
	public override ServantStatusFlavorTextListViewItemDraw.Kind GetKind() { }

	// RVA: 0x20B5824 Offset: 0x20B5824 VA: 0x20B5824 Slot: 5
	public override void SetItem(ServantStatusListViewItem item, bool isOpen, bool isNew, string text, int profileNum, ServantStatusFlavorTextListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public class ServantStatusFlavorTextListViewManager : MonoBehaviour // TypeDefIndex: 5733
{
	// Fields
	protected static int LIST_BLANK; // 0x0
	[SerializeField] // RVA: 0xCBB78C Offset: 0xCBB78C VA: 0xCBB78C
	protected UIScrollView scrollView; // 0x18
	[SerializeField] // RVA: 0xCBB79C Offset: 0xCBB79C VA: 0xCBB79C
	protected UIScrollBar scrollBar; // 0x20
	[SerializeField] // RVA: 0xCBB7AC Offset: 0xCBB7AC VA: 0xCBB7AC
	protected GameObject listParent; // 0x28
	[SerializeField] // RVA: 0xCBB7BC Offset: 0xCBB7BC VA: 0xCBB7BC
	protected GameObject profileObject; // 0x30
	[SerializeField] // RVA: 0xCBB7CC Offset: 0xCBB7CC VA: 0xCBB7CC
	protected GameObject profile2Object; // 0x38
	[SerializeField] // RVA: 0xCBB7DC Offset: 0xCBB7DC VA: 0xCBB7DC
	protected GameObject voiceObject; // 0x40
	[SerializeField] // RVA: 0xCBB7EC Offset: 0xCBB7EC VA: 0xCBB7EC
	protected GameObject voice2Object; // 0x48
	[SerializeField] // RVA: 0xCBB7FC Offset: 0xCBB7FC VA: 0xCBB7FC
	protected GameObject paramObject; // 0x50
	[SerializeField] // RVA: 0xCBB80C Offset: 0xCBB80C VA: 0xCBB80C
	protected GameObject terminalObject; // 0x58
	protected ServantStatusListViewItem mainInfo; // 0x60
	protected List<ServantStatusFlavorTextListViewObject> objectList; // 0x68
	protected List<ServantStatusFlavorTextListViewManager.ServantProfile> servantProfileList; // 0x70
	protected bool isInput; // 0x78
	public Action<ServantCommentEntity> OnFinishedReadEvent; // 0x80
	private Vector3 initialScrollPosition; // 0x88
	private Vector2 scrollViewSize; // 0x94
	protected Vector3 oldScrollPosition; // 0x9C
	protected bool isScrollRefresh; // 0xA8
	protected ServantStatusFlavorTextListViewManager.InitMode initMode; // 0xAC
	[CompilerGeneratedAttribute] // RVA: 0xCBB81C Offset: 0xCBB81C VA: 0xCBB81C
	[DebuggerBrowsableAttribute] // RVA: 0xCBB81C Offset: 0xCBB81C VA: 0xCBB81C
	private ServantStatusFlavorTextListViewManager.CallbackFunc callbackFunc; // 0xB0
	[CompilerGeneratedAttribute] // RVA: 0xCBB858 Offset: 0xCBB858 VA: 0xCBB858
	[DebuggerBrowsableAttribute] // RVA: 0xCBB858 Offset: 0xCBB858 VA: 0xCBB858
	private Action callbackFunc2; // 0xB8
	protected int callbackCount; // 0xC0
	[CompilerGeneratedAttribute] // RVA: 0xCBB894 Offset: 0xCBB894 VA: 0xCBB894
	private static Predicate<ServantStatusFlavorTextListViewObject> <>f__am$cache0; // 0x8

	// Properties
	public bool IsInput { get; set; }

	// Methods

	// RVA: 0x20B5A98 Offset: 0x20B5A98 VA: 0x20B5A98
	public void .ctor() { }

	// RVA: 0x20B5B68 Offset: 0x20B5B68 VA: 0x20B5B68
	public bool get_IsInput() { }

	// RVA: 0x20B5B70 Offset: 0x20B5B70 VA: 0x20B5B70
	public void set_IsInput(bool value) { }

	// RVA: 0x20B5C60 Offset: 0x20B5C60 VA: 0x20B5C60
	protected void OnEnable() { }

	// RVA: 0x20B5C6C Offset: 0x20B5C6C VA: 0x20B5C6C
	protected void add_callbackFunc(ServantStatusFlavorTextListViewManager.CallbackFunc value) { }

	// RVA: 0x20B5D58 Offset: 0x20B5D58 VA: 0x20B5D58
	protected void remove_callbackFunc(ServantStatusFlavorTextListViewManager.CallbackFunc value) { }

	// RVA: 0x20B5E44 Offset: 0x20B5E44 VA: 0x20B5E44
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x20B5F30 Offset: 0x20B5F30 VA: 0x20B5F30
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x20B601C Offset: 0x20B601C VA: 0x20B601C
	public void CreateList(ServantStatusListViewItem mainInfo) { }

	// RVA: 0x20B7A44 Offset: 0x20B7A44 VA: 0x20B7A44
	public void DoAutoScroll(Action onFinished) { }

	// RVA: 0x20B7C54 Offset: 0x20B7C54 VA: 0x20B7C54
	private void OnChangeScrollBarValue() { }

	// RVA: 0x20B7834 Offset: 0x20B7834 VA: 0x20B7834
	private void SetServantProfileReadEndValue() { }

	[DebuggerHiddenAttribute] // RVA: 0xD35958 Offset: 0xD35958 VA: 0xD35958
	// RVA: 0x20B7BA8 Offset: 0x20B7BA8 VA: 0x20B7BA8
	private IEnumerator AutoScroll_IE(int targetIndex, Action onFinished) { }

	// RVA: 0x20B7FE0 Offset: 0x20B7FE0 VA: 0x20B7FE0
	private float GetAutoScrollMoveDuration(float moveValue) { }

	// RVA: 0x20B807C Offset: 0x20B807C VA: 0x20B807C
	private float DoMoveEaseInOut(float currentTime, float duration, float startValue, float changeValue) { }

	// RVA: 0x20B7310 Offset: 0x20B7310 VA: 0x20B7310
	protected void SetObjectPosition(ref Vector3 basePositon, ServantStatusFlavorTextListViewObject obj) { }

	// RVA: 0x20B7614 Offset: 0x20B7614 VA: 0x20B7614
	protected ServantStatusFlavorTextListViewObject AddObjectList(ref Vector3 basePositon, GameObject prefab) { }

	// RVA: 0x20B7110 Offset: 0x20B7110 VA: 0x20B7110
	public void DestroyList() { }

	// RVA: 0x20B8308 Offset: 0x20B8308 VA: 0x20B8308
	protected void SetObjectItem(ServantStatusFlavorTextListViewObject obj) { }

	// RVA: 0x20B83CC Offset: 0x20B83CC VA: 0x20B83CC
	public void SetMode(ServantStatusFlavorTextListViewManager.InitMode mode, ServantStatusFlavorTextListViewManager.CallbackFunc callback) { }

	// RVA: 0x20B848C Offset: 0x20B848C VA: 0x20B848C
	public void SetMode(ServantStatusFlavorTextListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x20B83D4 Offset: 0x20B83D4 VA: 0x20B83D4
	public void SetMode(ServantStatusFlavorTextListViewManager.InitMode mode) { }

	// RVA: 0x20B8684 Offset: 0x20B8684 VA: 0x20B8684
	protected void RequestListObject(ServantStatusFlavorTextListViewObject.InitMode mode, float delay) { }

	// RVA: 0x20B8494 Offset: 0x20B8494 VA: 0x20B8494
	protected void RequestListObject(ServantStatusFlavorTextListViewObject.InitMode mode) { }

	// RVA: 0x20B8990 Offset: 0x20B8990 VA: 0x20B8990
	protected void OnMoveEnd() { }

	// RVA: 0x20B8A5C Offset: 0x20B8A5C VA: 0x20B8A5C
	protected void OnClickListView(ServantStatusFlavorTextListViewObject obj) { }

	// RVA: 0x20B8DAC Offset: 0x20B8DAC VA: 0x20B8DAC
	protected void OnClickListViewVoice(ServantStatusFlavorTextListViewObject obj) { }

	// RVA: 0x20B8DCC Offset: 0x20B8DCC VA: 0x20B8DCC
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35968 Offset: 0xD35968 VA: 0xD35968
	// RVA: 0x20B8E20 Offset: 0x20B8E20 VA: 0x20B8E20
	private static bool <DoAutoScroll>m__0(ServantStatusFlavorTextListViewObject x) { }
}

// Namespace: 
protected class ServantStatusFlavorTextListViewManager.ServantProfile // TypeDefIndex: 5734
{
	// Fields
	public ServantCommentEntity commentEntity; // 0x10
	public ServantStatusFlavorTextListViewObject viewObject; // 0x18
	public float readEndValue; // 0x20

	// Methods

	// RVA: 0x20B782C Offset: 0x20B782C VA: 0x20B782C
	public void .ctor() { }
}

// Namespace: 
public enum ServantStatusFlavorTextListViewManager.InitMode // TypeDefIndex: 5735
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusFlavorTextListViewManager.InitMode NONE = 0;
	public const ServantStatusFlavorTextListViewManager.InitMode INPUT = 1;
	public const ServantStatusFlavorTextListViewManager.InitMode VALID = 2;
}

// Namespace: 
public sealed class ServantStatusFlavorTextListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 5736
{
	// Methods

	// RVA: 0x20B946C Offset: 0x20B946C VA: 0x20B946C
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x20B8B80 Offset: 0x20B8B80 VA: 0x20B8B80 Slot: 11
	public virtual void Invoke(int result) { }

	// RVA: 0x20B947C Offset: 0x20B947C VA: 0x20B947C Slot: 12
	public virtual IAsyncResult BeginInvoke(int result, AsyncCallback callback, object object) { }

	// RVA: 0x20B9508 Offset: 0x20B9508 VA: 0x20B9508 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE120 Offset: 0xCAE120 VA: 0xCAE120
private sealed class ServantStatusFlavorTextListViewManager.<AutoScroll_IE>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 5737
{
	// Fields
	internal int targetIndex; // 0x10
	internal ServantStatusFlavorTextListViewObject <targetObj>__0; // 0x18
	internal float <softnessY>__0; // 0x20
	internal float <maxMoveValue>__0; // 0x24
	internal float <moveValue>__0; // 0x28
	internal float <duration>__1; // 0x2C
	internal float <timer>__1; // 0x30
	internal float <prevValue>__1; // 0x34
	internal float <currentValue>__2; // 0x38
	internal float <val>__2; // 0x3C
	internal Action onFinished; // 0x40
	internal ServantStatusFlavorTextListViewManager $this; // 0x48
	internal object $current; // 0x50
	internal bool $disposing; // 0x58
	internal int $PC; // 0x5C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xD45404 Offset: 0xD45404 VA: 0xD45404
	// RVA: 0x20B7FD8 Offset: 0x20B7FD8 VA: 0x20B7FD8
	public void .ctor() { }

	// RVA: 0x20B8E50 Offset: 0x20B8E50 VA: 0x20B8E50 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45414 Offset: 0xD45414 VA: 0xD45414
	// RVA: 0x20B93E0 Offset: 0x20B93E0 VA: 0x20B93E0 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45424 Offset: 0xD45424 VA: 0xD45424
	// RVA: 0x20B93E8 Offset: 0x20B93E8 VA: 0x20B93E8 Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45434 Offset: 0xD45434 VA: 0xD45434
	// RVA: 0x20B93F0 Offset: 0x20B93F0 VA: 0x20B93F0 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xD45444 Offset: 0xD45444 VA: 0xD45444
	// RVA: 0x20B9404 Offset: 0x20B9404 VA: 0x20B9404 Slot: 6
	public void Reset() { }
}

// Namespace: 
public class ServantStatusFlavorTextListViewObject : MonoBehaviour // TypeDefIndex: 5738
{
	// Fields
	[SerializeField] // RVA: 0xCBB8A4 Offset: 0xCBB8A4 VA: 0xCBB8A4
	protected GameObject dispObject; // 0x18
	protected ServantStatusListViewItem mainInfo; // 0x20
	protected bool isOpen; // 0x28
	protected bool isNew; // 0x29
	protected string messageData; // 0x30
	protected int profileNum; // 0x38
	protected ServantStatusFlavorTextListViewManager manager; // 0x40
	protected Transform baseParent; // 0x48
	protected Vector3 basePosition; // 0x50
	protected Vector3 baseScale; // 0x5C
	protected bool isBusy; // 0x68
	protected int id; // 0x6C
	protected ServantStatusFlavorTextListViewObject.State state; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xCBB8B4 Offset: 0xCBB8B4 VA: 0xCBB8B4
	[DebuggerBrowsableAttribute] // RVA: 0xCBB8B4 Offset: 0xCBB8B4 VA: 0xCBB8B4
	private Action callbackFunc; // 0x78
	protected ServantStatusFlavorTextListViewItemDraw itemDraw; // 0x80
	protected ServantStatusFlavorTextListViewItemDraw.DispMode dispMode; // 0x88

	// Properties
	public bool IsBusy { get; }
	public int Id { get; }
	public Vector3 BottomPosition { get; }
	public Vector3 TopPosition { get; }
	public bool IsNew { get; }
	public Vector3 ProfileLastLinePosition { get; }

	// Methods

	// RVA: 0x20B9514 Offset: 0x20B9514 VA: 0x20B9514
	public void .ctor() { }

	// RVA: 0x20B951C Offset: 0x20B951C VA: 0x20B951C
	public bool get_IsBusy() { }

	// RVA: 0x20B8B78 Offset: 0x20B8B78 VA: 0x20B8B78
	public int get_Id() { }

	// RVA: 0x20B9230 Offset: 0x20B9230 VA: 0x20B9230
	public Vector3 get_BottomPosition() { }

	// RVA: 0x20B92FC Offset: 0x20B92FC VA: 0x20B92FC
	public Vector3 get_TopPosition() { }

	// RVA: 0x20B8E48 Offset: 0x20B8E48 VA: 0x20B8E48
	public bool get_IsNew() { }

	// RVA: 0x20B7E7C Offset: 0x20B7E7C VA: 0x20B7E7C
	public Vector3 get_ProfileLastLinePosition() { }

	// RVA: 0x20B9524 Offset: 0x20B9524 VA: 0x20B9524
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x20B9610 Offset: 0x20B9610 VA: 0x20B9610
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x20B96FC Offset: 0x20B96FC VA: 0x20B96FC
	protected void Awake() { }

	// RVA: 0x20B9768 Offset: 0x20B9768 VA: 0x20B9768
	private void OnDestroy() { }

	// RVA: 0x20B82F0 Offset: 0x20B82F0 VA: 0x20B82F0
	public void SetManager(ServantStatusFlavorTextListViewManager manager) { }

	// RVA: 0x20B72E8 Offset: 0x20B72E8 VA: 0x20B72E8
	public void SetItem(ServantStatusListViewItem item, int id, bool isOpen, bool isNew, string text, int profileNum = 0) { }

	// RVA: 0x20B8AD4 Offset: 0x20B8AD4 VA: 0x20B8AD4
	public ServantStatusFlavorTextListViewItemDraw.Kind GetKind() { }

	// RVA: 0x20B816C Offset: 0x20B816C VA: 0x20B816C
	public int GetSize() { }

	// RVA: 0x20B976C Offset: 0x20B976C VA: 0x20B976C
	public void SetVisible(bool isVisible) { }

	// RVA: 0x20B981C Offset: 0x20B981C VA: 0x20B981C
	public void SetInput(bool isInput) { }

	// RVA: 0x20B8258 Offset: 0x20B8258 VA: 0x20B8258
	public void SetBaseTransform() { }

	// RVA: 0x20B98E0 Offset: 0x20B98E0 VA: 0x20B98E0
	public void SetTransform(Vector3 position) { }

	// RVA: 0x20B994C Offset: 0x20B994C VA: 0x20B994C
	public void Init(ServantStatusFlavorTextListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x20B8888 Offset: 0x20B8888 VA: 0x20B8888
	public void Init(ServantStatusFlavorTextListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x20B890C Offset: 0x20B890C VA: 0x20B890C
	public void Init(ServantStatusFlavorTextListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x20B834C Offset: 0x20B834C VA: 0x20B834C
	public void Init(ServantStatusFlavorTextListViewObject.InitMode initMode) { }

	// RVA: 0x20B9A70 Offset: 0x20B9A70 VA: 0x20B9A70
	protected void SetupDisp() { }

	// RVA: 0x20B9B80 Offset: 0x20B9B80 VA: 0x20B9B80
	protected void OnClick() { }

	// RVA: 0x20B9BE8 Offset: 0x20B9BE8 VA: 0x20B9BE8
	public void OnClickVoice() { }

	// RVA: 0x20B7780 Offset: 0x20B7780 VA: 0x20B7780
	public void SetCondTitle(string title) { }
}

// Namespace: 
public enum ServantStatusFlavorTextListViewObject.InitMode // TypeDefIndex: 5739
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusFlavorTextListViewObject.InitMode INVISIBLE = 0;
	public const ServantStatusFlavorTextListViewObject.InitMode INVALID = 1;
	public const ServantStatusFlavorTextListViewObject.InitMode VALID = 2;
	public const ServantStatusFlavorTextListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum ServantStatusFlavorTextListViewObject.State // TypeDefIndex: 5740
{
	// Fields
	public int value__; // 0x0
	public const ServantStatusFlavorTextListViewObject.State INIT = 0;
	public const ServantStatusFlavorTextListViewObject.State IDLE = 1;
	public const ServantStatusFlavorTextListViewObject.State MOVE = 2;
	public const ServantStatusFlavorTextListViewObject.State INPUT = 3;
}

// Namespace: 
public class ServantStatusFriendshipGauge : BaseMonoBehaviour // TypeDefIndex: 5741
{
	// Fields
	public const int GAUGE_LINE = 5;
	[SerializeField] // RVA: 0xCBB8F0 Offset: 0xCBB8F0 VA: 0xCBB8F0
	protected UIExtrusionLabel levelLabel; // 0x18
	[SerializeField] // RVA: 0xCBB900 Offset: 0xCBB900 VA: 0xCBB900
	protected UILabel maxLevelLabel; // 0x20
	[SerializeField] // RVA: 0xCBB910 Offset: 0xCBB910 VA: 0xCBB910
	protected UILabel latePointLabel; // 0x28
	[SerializeField] // RVA: 0xCBB920 Offset: 0xCBB920 VA: 0xCBB920
	protected UISlider[] gaugeSliderList; // 0x30
	[SerializeField] // RVA: 0xCBB930 Offset: 0xCBB930 VA: 0xCBB930
	protected UISlider[] overLimitGaugeSliderList; // 0x38
	[SerializeField] // RVA: 0xCBB940 Offset: 0xCBB940 VA: 0xCBB940
	private UISprite overLimitGaugeSprite; // 0x40
	[SerializeField] // RVA: 0xCBB950 Offset: 0xCBB950 VA: 0xCBB950
	private GameObject nomalGaugeContainer; // 0x48
	[SerializeField] // RVA: 0xCBB960 Offset: 0xCBB960 VA: 0xCBB960
	private GameObject overLimitGaugeContainer; // 0x50
	protected bool isInit; // 0x58
	protected float sy1; // 0x5C
	protected float sy2; // 0x60

	// Methods

	// RVA: 0x20B9C50 Offset: 0x20B9C50 VA: 0x20B9C50
	public void .ctor() { }

	// RVA: 0x20B9CC8 Offset: 0x20B9CC8 VA: 0x20B9CC8
	private void Initialize() { }

	// RVA: 0x20B9E68 Offset: 0x20B9E68 VA: 0x20B9E68
	public void Set(int currentRank, int maxRank, int late, float fraction) { }

	// RVA: 0x20BA088 Offset: 0x20BA088 VA: 0x20BA088
	private void DisplayGauge(int currentRank, int maxRank, float fraction) { }

	// RVA: 0x20BA300 Offset: 0x20BA300 VA: 0x20BA300
	private void DisplayNomalGauge(int currentRank, int maxRank, float fraction) { }

	// RVA: 0x20BA1DC Offset: 0x20BA1DC VA: 0x20BA1DC
	private void DisplayOverLimitGauge(int currentRank, int maxRank, float fraction) { }

	// RVA: 0x20BA174 Offset: 0x20BA174 VA: 0x20BA174
	private void SetActiveContainer(bool isOverLimit) { }
}

// Namespace: 
public class ServantStatusLimitCountGauge : BaseMonoBehaviour // TypeDefIndex: 5742
{
	// Fields
	[SerializeField] // RVA: 0xCBB970 Offset: 0xCBB970 VA: 0xCBB970
	protected UISprite[] gaugeSpriteList; // 0x18

	// Methods

	// RVA: 0x20BA4D4 Offset: 0x20BA4D4 VA: 0x20BA4D4
	public void .ctor() { }

	// RVA: 0x20BA534 Offset: 0x20BA534 VA: 0x20BA534
	public void Set(int limitCount, int limitMax) { }
}

// Namespace: 
public class ServantStatusListViewItem // TypeDefIndex: 5743
{
	// Fields
	protected UserGameEntity userGameEntity; // 0x10
	protected PartyListViewItem partyItem; // 0x18
	protected PartyOrganizationListViewItem memberItem; // 0x20
	protected int memberNum; // 0x28
	protected WarBoardPartyListViewItem warBoardPartyItem; // 0x30
	protected UserServantEntity userSvtEntity; // 0x38
	protected long[] equipIdList; // 0x40
	protected QuestRestrictionInfo questRestrictionInfo; // 0x48
	protected UserServantCollectionEntity userSvtCollectionEntity; // 0x50
	protected ServantLeaderInfo servantLeaderInfo; // 0x58
	protected EquipTargetInfo equipTargetInfo; // 0x60
	protected UserCommandCodeEntity userCommandCodeEntity; // 0x68
	protected UserCommandCodeCollectionEntity userCommandCodeCollectionEntity; // 0x70
	protected bool isEquipShowMode; // 0x78
	protected bool isEquipChangeMode; // 0x79
	protected bool isNpcFollowerServantEquip; // 0x7A
	protected bool isEnableServantQuest; // 0x7B
	protected ServantEntity svtEntity; // 0x80
	protected ServantLimitEntity svtLimitEntity; // 0x88
	protected ServantExpEntity svtExpEntity; // 0x90
