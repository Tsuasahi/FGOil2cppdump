	// RVA: 0x1F86E3C Offset: 0x1F86E3C VA: 0x1F86E3C Slot: 47
	protected virtual GameObject CreateDropdownList(GameObject template) { }

	// RVA: 0x1F86EAC Offset: 0x1F86EAC VA: 0x1F86EAC Slot: 48
	protected virtual void DestroyDropdownList(GameObject dropdownList) { }

	// RVA: 0x1F86F14 Offset: 0x1F86F14 VA: 0x1F86F14 Slot: 49
	protected virtual Dropdown.DropdownItem CreateItem(Dropdown.DropdownItem itemTemplate) { }

	// RVA: 0x1F86F84 Offset: 0x1F86F84 VA: 0x1F86F84 Slot: 50
	protected virtual void DestroyItem(Dropdown.DropdownItem item) { }

	// RVA: 0x1F863E4 Offset: 0x1F863E4 VA: 0x1F863E4
	private Dropdown.DropdownItem AddItem(Dropdown.OptionData data, bool selected, Dropdown.DropdownItem itemTemplate, List<Dropdown.DropdownItem> items) { }

	// RVA: 0x1F86F88 Offset: 0x1F86F88 VA: 0x1F86F88
	private void AlphaFadeList(float duration, float alpha) { }

	// RVA: 0x1F868E4 Offset: 0x1F868E4 VA: 0x1F868E4
	private void AlphaFadeList(float duration, float start, float end) { }

	// RVA: 0x1F87024 Offset: 0x1F87024 VA: 0x1F87024
	private void SetAlpha(float alpha) { }

	// RVA: 0x1F862B8 Offset: 0x1F862B8 VA: 0x1F862B8
	public void Hide() { }

	[DebuggerHiddenAttribute] // RVA: 0xC157E0 Offset: 0xC157E0 VA: 0xC157E0
	// RVA: 0x1F870F0 Offset: 0x1F870F0 VA: 0x1F870F0
	private IEnumerator DelayedDestroyDropdownList(float delay) { }

	// RVA: 0x1F87184 Offset: 0x1F87184 VA: 0x1F87184
	private void OnSelectItem(Toggle toggle) { }

	// RVA: 0x1F872F8 Offset: 0x1F872F8 VA: 0x1F872F8
	private static void .cctor() { }
}

// Namespace: 
protected internal class Dropdown.DropdownItem : MonoBehaviour, IPointerEnterHandler, ICancelHandler, IEventSystemHandler // TypeDefIndex: 3063
{
	// Fields
	[SerializeField] // RVA: 0xC13CB0 Offset: 0xC13CB0 VA: 0xC13CB0
	private Text m_Text; // 0x18
	[SerializeField] // RVA: 0xC13CC0 Offset: 0xC13CC0 VA: 0xC13CC0
	private Image m_Image; // 0x20
	[SerializeField] // RVA: 0xC13CD0 Offset: 0xC13CD0 VA: 0xC13CD0
	private RectTransform m_RectTransform; // 0x28
	[SerializeField] // RVA: 0xC13CE0 Offset: 0xC13CE0 VA: 0xC13CE0
	private Toggle m_Toggle; // 0x30

	// Properties
	public Text text { get; set; }
	public Image image { get; set; }
	public RectTransform rectTransform { get; set; }
	public Toggle toggle { get; set; }

	// Methods

	// RVA: 0x2145354 Offset: 0x2145354 VA: 0x2145354
	public void .ctor() { }

	// RVA: 0x214535C Offset: 0x214535C VA: 0x214535C
	public Text get_text() { }

	// RVA: 0x2145364 Offset: 0x2145364 VA: 0x2145364
	public void set_text(Text value) { }

	// RVA: 0x214536C Offset: 0x214536C VA: 0x214536C
	public Image get_image() { }

	// RVA: 0x2145374 Offset: 0x2145374 VA: 0x2145374
	public void set_image(Image value) { }

	// RVA: 0x214537C Offset: 0x214537C VA: 0x214537C
	public RectTransform get_rectTransform() { }

	// RVA: 0x2145384 Offset: 0x2145384 VA: 0x2145384
	public void set_rectTransform(RectTransform value) { }

	// RVA: 0x21452FC Offset: 0x21452FC VA: 0x21452FC
	public Toggle get_toggle() { }

	// RVA: 0x214538C Offset: 0x214538C VA: 0x214538C
	public void set_toggle(Toggle value) { }

	// RVA: 0x2145394 Offset: 0x2145394 VA: 0x2145394 Slot: 6
	public virtual void OnPointerEnter(PointerEventData eventData) { }

	// RVA: 0x2145428 Offset: 0x2145428 VA: 0x2145428 Slot: 7
	public virtual void OnCancel(BaseEventData eventData) { }
}

// Namespace: 
[Serializable]
public class Dropdown.OptionData // TypeDefIndex: 3064
{
	// Fields
	[SerializeField] // RVA: 0xC13CF0 Offset: 0xC13CF0 VA: 0xC13CF0
	private string m_Text; // 0x10
	[SerializeField] // RVA: 0xC13D00 Offset: 0xC13D00 VA: 0xC13D00
	private Sprite m_Image; // 0x18

	// Properties
	public string text { get; set; }
	public Sprite image { get; set; }

	// Methods

	// RVA: 0x21454D4 Offset: 0x21454D4 VA: 0x21454D4
	public void .ctor() { }

	// RVA: 0x21454DC Offset: 0x21454DC VA: 0x21454DC
	public void .ctor(string text) { }

	// RVA: 0x2145510 Offset: 0x2145510 VA: 0x2145510
	public void .ctor(Sprite image) { }

	// RVA: 0x2145544 Offset: 0x2145544 VA: 0x2145544
	public void .ctor(string text, Sprite image) { }

	// RVA: 0x214557C Offset: 0x214557C VA: 0x214557C
	public string get_text() { }

	// RVA: 0x2145508 Offset: 0x2145508 VA: 0x2145508
	public void set_text(string value) { }

	// RVA: 0x2145584 Offset: 0x2145584 VA: 0x2145584
	public Sprite get_image() { }

	// RVA: 0x214553C Offset: 0x214553C VA: 0x214553C
	public void set_image(Sprite value) { }
}

// Namespace: 
[Serializable]
public class Dropdown.OptionDataList // TypeDefIndex: 3065
{
	// Fields
	[SerializeField] // RVA: 0xC13D10 Offset: 0xC13D10 VA: 0xC13D10
	private List<Dropdown.OptionData> m_Options; // 0x10

	// Properties
	public List<Dropdown.OptionData> options { get; set; }

	// Methods

	// RVA: 0x214558C Offset: 0x214558C VA: 0x214558C
	public void .ctor() { }

	// RVA: 0x2145608 Offset: 0x2145608 VA: 0x2145608
	public List<Dropdown.OptionData> get_options() { }

	// RVA: 0x2145600 Offset: 0x2145600 VA: 0x2145600
	public void set_options(List<Dropdown.OptionData> value) { }
}

// Namespace: 
[Serializable]
public class Dropdown.DropdownEvent : UnityEvent<int> // TypeDefIndex: 3066
{
	// Methods

	// RVA: 0x2145304 Offset: 0x2145304 VA: 0x2145304
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC12F50 Offset: 0xC12F50 VA: 0xC12F50
private sealed class Dropdown.<Show>c__AnonStorey1 // TypeDefIndex: 3067
{
	// Fields
	internal Dropdown.DropdownItem item; // 0x10
	internal Dropdown $this; // 0x18

	// Methods

	// RVA: 0x21452B0 Offset: 0x21452B0 VA: 0x21452B0
	public void .ctor() { }

	// RVA: 0x21452B8 Offset: 0x21452B8 VA: 0x21452B8
	internal void <>m__0(bool x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC12F60 Offset: 0xC12F60 VA: 0xC12F60
private sealed class Dropdown.<DelayedDestroyDropdownList>c__Iterator0 : IEnumerator, IDisposable, IEnumerator<object> // TypeDefIndex: 3068
{
	// Fields
	internal float delay; // 0x10
	internal Dropdown $this; // 0x18
	internal object $current; // 0x20
	internal bool $disposing; // 0x28
	internal int $PC; // 0x2C

	// Properties
	private object System.Collections.Generic.IEnumerator<object>.Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	[DebuggerHiddenAttribute] // RVA: 0xC15D58 Offset: 0xC15D58 VA: 0xC15D58
	// RVA: 0x2144F88 Offset: 0x2144F88 VA: 0x2144F88
	public void .ctor() { }

	// RVA: 0x2144F90 Offset: 0x2144F90 VA: 0x2144F90 Slot: 5
	public bool MoveNext() { }

	[DebuggerHiddenAttribute] // RVA: 0xC15D68 Offset: 0xC15D68 VA: 0xC15D68
	// RVA: 0x2145224 Offset: 0x2145224 VA: 0x2145224 Slot: 8
	private object System.Collections.Generic.IEnumerator<object>.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC15D78 Offset: 0xC15D78 VA: 0xC15D78
	// RVA: 0x214522C Offset: 0x214522C VA: 0x214522C Slot: 4
	private object System.Collections.IEnumerator.get_Current() { }

	[DebuggerHiddenAttribute] // RVA: 0xC15D88 Offset: 0xC15D88 VA: 0xC15D88
	// RVA: 0x2145234 Offset: 0x2145234 VA: 0x2145234 Slot: 7
	public void Dispose() { }

	[DebuggerHiddenAttribute] // RVA: 0xC15D98 Offset: 0xC15D98 VA: 0xC15D98
	// RVA: 0x2145248 Offset: 0x2145248 VA: 0x2145248 Slot: 6
	public void Reset() { }
}

// Namespace: UnityEngine.UI
[Serializable]
public class FontData : ISerializationCallbackReceiver // TypeDefIndex: 3069
{
	// Fields
	[SerializeField] // RVA: 0xC13D20 Offset: 0xC13D20 VA: 0xC13D20
	[FormerlySerializedAsAttribute] // RVA: 0xC13D20 Offset: 0xC13D20 VA: 0xC13D20
	private Font m_Font; // 0x10
	[SerializeField] // RVA: 0xC13D6C Offset: 0xC13D6C VA: 0xC13D6C
	[FormerlySerializedAsAttribute] // RVA: 0xC13D6C Offset: 0xC13D6C VA: 0xC13D6C
	private int m_FontSize; // 0x18
	[SerializeField] // RVA: 0xC13DB8 Offset: 0xC13DB8 VA: 0xC13DB8
	[FormerlySerializedAsAttribute] // RVA: 0xC13DB8 Offset: 0xC13DB8 VA: 0xC13DB8
	private FontStyle m_FontStyle; // 0x1C
	[SerializeField] // RVA: 0xC13E04 Offset: 0xC13E04 VA: 0xC13E04
	private bool m_BestFit; // 0x20
	[SerializeField] // RVA: 0xC13E14 Offset: 0xC13E14 VA: 0xC13E14
	private int m_MinSize; // 0x24
	[SerializeField] // RVA: 0xC13E24 Offset: 0xC13E24 VA: 0xC13E24
	private int m_MaxSize; // 0x28
	[SerializeField] // RVA: 0xC13E34 Offset: 0xC13E34 VA: 0xC13E34
	[FormerlySerializedAsAttribute] // RVA: 0xC13E34 Offset: 0xC13E34 VA: 0xC13E34
	private TextAnchor m_Alignment; // 0x2C
	[SerializeField] // RVA: 0xC13E80 Offset: 0xC13E80 VA: 0xC13E80
	private bool m_AlignByGeometry; // 0x30
	[SerializeField] // RVA: 0xC13E90 Offset: 0xC13E90 VA: 0xC13E90
	[FormerlySerializedAsAttribute] // RVA: 0xC13E90 Offset: 0xC13E90 VA: 0xC13E90
	private bool m_RichText; // 0x31
	[SerializeField] // RVA: 0xC13EDC Offset: 0xC13EDC VA: 0xC13EDC
	private HorizontalWrapMode m_HorizontalOverflow; // 0x34
	[SerializeField] // RVA: 0xC13EEC Offset: 0xC13EEC VA: 0xC13EEC
	private VerticalWrapMode m_VerticalOverflow; // 0x38
	[SerializeField] // RVA: 0xC13EFC Offset: 0xC13EFC VA: 0xC13EFC
	private float m_LineSpacing; // 0x3C

	// Properties
	public static FontData defaultFontData { get; }
	public Font font { get; set; }
	public int fontSize { get; set; }
	public FontStyle fontStyle { get; set; }
	public bool bestFit { get; set; }
	public int minSize { get; set; }
	public int maxSize { get; set; }
	public TextAnchor alignment { get; set; }
	public bool alignByGeometry { get; set; }
	public bool richText { get; set; }
	public HorizontalWrapMode horizontalOverflow { get; set; }
	public VerticalWrapMode verticalOverflow { get; set; }
	public float lineSpacing { get; set; }

	// Methods

	// RVA: 0x2145610 Offset: 0x2145610 VA: 0x2145610
	public void .ctor() { }

	// RVA: 0x2145618 Offset: 0x2145618 VA: 0x2145618
	public static FontData get_defaultFontData() { }

	// RVA: 0x2145750 Offset: 0x2145750 VA: 0x2145750
	public Font get_font() { }

	// RVA: 0x2145758 Offset: 0x2145758 VA: 0x2145758
	public void set_font(Font value) { }

	// RVA: 0x2145760 Offset: 0x2145760 VA: 0x2145760
	public int get_fontSize() { }

	// RVA: 0x2145768 Offset: 0x2145768 VA: 0x2145768
	public void set_fontSize(int value) { }

	// RVA: 0x2145770 Offset: 0x2145770 VA: 0x2145770
	public FontStyle get_fontStyle() { }

	// RVA: 0x2145778 Offset: 0x2145778 VA: 0x2145778
	public void set_fontStyle(FontStyle value) { }

	// RVA: 0x2145780 Offset: 0x2145780 VA: 0x2145780
	public bool get_bestFit() { }

	// RVA: 0x2145788 Offset: 0x2145788 VA: 0x2145788
	public void set_bestFit(bool value) { }

	// RVA: 0x2145794 Offset: 0x2145794 VA: 0x2145794
	public int get_minSize() { }

	// RVA: 0x214579C Offset: 0x214579C VA: 0x214579C
	public void set_minSize(int value) { }

	// RVA: 0x21457A4 Offset: 0x21457A4 VA: 0x21457A4
	public int get_maxSize() { }

	// RVA: 0x21457AC Offset: 0x21457AC VA: 0x21457AC
	public void set_maxSize(int value) { }

	// RVA: 0x21457B4 Offset: 0x21457B4 VA: 0x21457B4
	public TextAnchor get_alignment() { }

	// RVA: 0x21457BC Offset: 0x21457BC VA: 0x21457BC
	public void set_alignment(TextAnchor value) { }

	// RVA: 0x21457C4 Offset: 0x21457C4 VA: 0x21457C4
	public bool get_alignByGeometry() { }

	// RVA: 0x21457CC Offset: 0x21457CC VA: 0x21457CC
	public void set_alignByGeometry(bool value) { }

	// RVA: 0x21457D8 Offset: 0x21457D8 VA: 0x21457D8
	public bool get_richText() { }

	// RVA: 0x21457E0 Offset: 0x21457E0 VA: 0x21457E0
	public void set_richText(bool value) { }

	// RVA: 0x21457EC Offset: 0x21457EC VA: 0x21457EC
	public HorizontalWrapMode get_horizontalOverflow() { }

	// RVA: 0x21457F4 Offset: 0x21457F4 VA: 0x21457F4
	public void set_horizontalOverflow(HorizontalWrapMode value) { }

	// RVA: 0x21457FC Offset: 0x21457FC VA: 0x21457FC
	public VerticalWrapMode get_verticalOverflow() { }

	// RVA: 0x2145804 Offset: 0x2145804 VA: 0x2145804
	public void set_verticalOverflow(VerticalWrapMode value) { }

	// RVA: 0x214580C Offset: 0x214580C VA: 0x214580C
	public float get_lineSpacing() { }

	// RVA: 0x2145814 Offset: 0x2145814 VA: 0x2145814
	public void set_lineSpacing(float value) { }

	// RVA: 0x214581C Offset: 0x214581C VA: 0x214581C Slot: 4
	private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize() { }

	// RVA: 0x2145820 Offset: 0x2145820 VA: 0x2145820 Slot: 5
	private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize() { }
}

// Namespace: UnityEngine.UI
public static class FontUpdateTracker // TypeDefIndex: 3070
{
	// Fields
	private static Dictionary<Font, HashSet<Text>> m_Tracked; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC13F0C Offset: 0xC13F0C VA: 0xC13F0C
	private static Action<Font> <>f__mg$cache0; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC13F1C Offset: 0xC13F1C VA: 0xC13F1C
	private static Action<Font> <>f__mg$cache1; // 0x10

	// Methods

	// RVA: 0x21458D8 Offset: 0x21458D8 VA: 0x21458D8
	public static void TrackText(Text t) { }

	// RVA: 0x2145BCC Offset: 0x2145BCC VA: 0x2145BCC
	private static void RebuildForFont(Font f) { }

	// RVA: 0x2145D40 Offset: 0x2145D40 VA: 0x2145D40
	public static void UntrackText(Text t) { }

	// RVA: 0x2145FD8 Offset: 0x2145FD8 VA: 0x2145FD8
	private static void .cctor() { }
}

// Namespace: UnityEngine.UI
[DisallowMultipleComponent] // RVA: 0xC122A4 Offset: 0xC122A4 VA: 0xC122A4
[RequireComponent] // RVA: 0xC122A4 Offset: 0xC122A4 VA: 0xC122A4
[RequireComponent] // RVA: 0xC122A4 Offset: 0xC122A4 VA: 0xC122A4
[ExecuteAlways] // RVA: 0xC122A4 Offset: 0xC122A4 VA: 0xC122A4
public abstract class Graphic : UIBehaviour, ICanvasElement // TypeDefIndex: 3071
{
	// Fields
	protected static Material s_DefaultUI; // 0x0
	protected static Texture2D s_WhiteTexture; // 0x8
	[FormerlySerializedAsAttribute] // RVA: 0xC13F2C Offset: 0xC13F2C VA: 0xC13F2C
	[SerializeField] // RVA: 0xC13F2C Offset: 0xC13F2C VA: 0xC13F2C
	protected Material m_Material; // 0x18
	[SerializeField] // RVA: 0xC13F78 Offset: 0xC13F78 VA: 0xC13F78
	private Color m_Color; // 0x20
	[SerializeField] // RVA: 0xC13F88 Offset: 0xC13F88 VA: 0xC13F88
	private bool m_RaycastTarget; // 0x30
	private RectTransform m_RectTransform; // 0x38
	private CanvasRenderer m_CanvasRenderer; // 0x40
	private Canvas m_Canvas; // 0x48
	private bool m_VertsDirty; // 0x50
	private bool m_MaterialDirty; // 0x51
	protected UnityAction m_OnDirtyLayoutCallback; // 0x58
	protected UnityAction m_OnDirtyVertsCallback; // 0x60
	protected UnityAction m_OnDirtyMaterialCallback; // 0x68
	protected static Mesh s_Mesh; // 0x10
	private static readonly VertexHelper s_VertexHelper; // 0x18
	private readonly TweenRunner<ColorTween> m_ColorTweenRunner; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC13F98 Offset: 0xC13F98 VA: 0xC13F98
	[DebuggerBrowsableAttribute] // RVA: 0xC13F98 Offset: 0xC13F98 VA: 0xC13F98
	private bool <useLegacyMeshGeneration>k__BackingField; // 0x78

	// Properties
	public static Material defaultGraphicMaterial { get; }
	public virtual Color color { get; set; }
	public virtual bool raycastTarget { get; set; }
	protected bool useLegacyMeshGeneration { get; set; }
	public int depth { get; }
	public RectTransform rectTransform { get; }
	public Canvas canvas { get; }
	public CanvasRenderer canvasRenderer { get; }
	public virtual Material defaultMaterial { get; }
	public virtual Material material { get; set; }
	public virtual Material materialForRendering { get; }
	public virtual Texture mainTexture { get; }
	protected static Mesh workerMesh { get; }

	// Methods

	// RVA: 0x214604C Offset: 0x214604C VA: 0x214604C
	protected void .ctor() { }

	// RVA: 0x214611C Offset: 0x214611C VA: 0x214611C
	public static Material get_defaultGraphicMaterial() { }

	// RVA: 0x2146214 Offset: 0x2146214 VA: 0x2146214 Slot: 22
	public virtual Color get_color() { }

	// RVA: 0x2146220 Offset: 0x2146220 VA: 0x2146220 Slot: 23
	public virtual void set_color(Color value) { }

	// RVA: 0x2146268 Offset: 0x2146268 VA: 0x2146268 Slot: 24
	public virtual bool get_raycastTarget() { }

	// RVA: 0x2146270 Offset: 0x2146270 VA: 0x2146270 Slot: 25
	public virtual void set_raycastTarget(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xC157F0 Offset: 0xC157F0 VA: 0xC157F0
	// RVA: 0x214627C Offset: 0x214627C VA: 0x214627C
	protected bool get_useLegacyMeshGeneration() { }

	[CompilerGeneratedAttribute] // RVA: 0xC15800 Offset: 0xC15800 VA: 0xC15800
	// RVA: 0x2146110 Offset: 0x2146110 VA: 0x2146110
	protected void set_useLegacyMeshGeneration(bool value) { }

	// RVA: 0x2146284 Offset: 0x2146284 VA: 0x2146284 Slot: 26
	public virtual void SetAllDirty() { }

	// RVA: 0x21462D4 Offset: 0x21462D4 VA: 0x21462D4 Slot: 27
	public virtual void SetLayoutDirty() { }

	// RVA: 0x21463DC Offset: 0x21463DC VA: 0x21463DC Slot: 28
	public virtual void SetVerticesDirty() { }

	// RVA: 0x214647C Offset: 0x214647C VA: 0x214647C Slot: 29
	public virtual void SetMaterialDirty() { }

	// RVA: 0x214651C Offset: 0x214651C VA: 0x214651C Slot: 10
	protected override void OnRectTransformDimensionsChange() { }

	// RVA: 0x21465E4 Offset: 0x21465E4 VA: 0x21465E4 Slot: 11
	protected override void OnBeforeTransformParentChanged() { }

	// RVA: 0x21468A8 Offset: 0x21468A8 VA: 0x21468A8 Slot: 12
	protected override void OnTransformParentChanged() { }

	// RVA: 0x2146CC0 Offset: 0x2146CC0 VA: 0x2146CC0
	public int get_depth() { }

	// RVA: 0x214637C Offset: 0x214637C VA: 0x214637C Slot: 30
	public RectTransform get_rectTransform() { }

	// RVA: 0x2146698 Offset: 0x2146698 VA: 0x2146698
	public Canvas get_canvas() { }

	// RVA: 0x214696C Offset: 0x214696C VA: 0x214696C
	private void CacheCanvas() { }

	// RVA: 0x2146CF0 Offset: 0x2146CF0 VA: 0x2146CF0
	public CanvasRenderer get_canvasRenderer() { }

	// RVA: 0x2146D50 Offset: 0x2146D50 VA: 0x2146D50 Slot: 31
	public virtual Material get_defaultMaterial() { }

	// RVA: 0x2146DAC Offset: 0x2146DAC VA: 0x2146DAC Slot: 32
	public virtual Material get_material() { }

	// RVA: 0x2146E44 Offset: 0x2146E44 VA: 0x2146E44 Slot: 33
	public virtual void set_material(Material value) { }

	// RVA: 0x2146EEC Offset: 0x2146EEC VA: 0x2146EEC Slot: 34
	public virtual Material get_materialForRendering() { }

	// RVA: 0x2147108 Offset: 0x2147108 VA: 0x2147108 Slot: 35
	public virtual Texture get_mainTexture() { }

	// RVA: 0x2147170 Offset: 0x2147170 VA: 0x2147170 Slot: 5
	protected override void OnEnable() { }

	// RVA: 0x21472B0 Offset: 0x21472B0 VA: 0x21472B0 Slot: 7
	protected override void OnDisable() { }

	// RVA: 0x2147400 Offset: 0x2147400 VA: 0x2147400 Slot: 15
	protected override void OnCanvasHierarchyChanged() { }

	// RVA: 0x2147524 Offset: 0x2147524 VA: 0x2147524 Slot: 36
	public virtual void OnCullingChanged() { }

	// RVA: 0x21475CC Offset: 0x21475CC VA: 0x21475CC Slot: 37
	public virtual void Rebuild(CanvasUpdate update) { }

	// RVA: 0x214765C Offset: 0x214765C VA: 0x214765C Slot: 38
	public virtual void LayoutComplete() { }

	// RVA: 0x2147660 Offset: 0x2147660 VA: 0x2147660 Slot: 39
	public virtual void GraphicUpdateComplete() { }

	// RVA: 0x2147664 Offset: 0x2147664 VA: 0x2147664 Slot: 40
	protected virtual void UpdateMaterial() { }

	// RVA: 0x214774C Offset: 0x214774C VA: 0x214774C Slot: 41
	protected virtual void UpdateGeometry() { }

	// RVA: 0x2147BE0 Offset: 0x2147BE0 VA: 0x2147BE0
	private void DoMeshGeneration() { }

	// RVA: 0x214775C Offset: 0x214775C VA: 0x214775C
	private void DoLegacyMeshGeneration() { }

	// RVA: 0x21480A8 Offset: 0x21480A8 VA: 0x21480A8
	protected static Mesh get_workerMesh() { }

	[EditorBrowsableAttribute] // RVA: 0xC15810 Offset: 0xC15810 VA: 0xC15810
	[ObsoleteAttribute] // RVA: 0xC15810 Offset: 0xC15810 VA: 0xC15810
	// RVA: 0x2148200 Offset: 0x2148200 VA: 0x2148200 Slot: 42
	protected virtual void OnFillVBO(List<UIVertex> vbo) { }

	[ObsoleteAttribute] // RVA: 0xC15864 Offset: 0xC15864 VA: 0xC15864
	// RVA: 0x2148204 Offset: 0x2148204 VA: 0x2148204 Slot: 43
	protected virtual void OnPopulateMesh(Mesh m) { }

	// RVA: 0x21482B4 Offset: 0x21482B4 VA: 0x21482B4 Slot: 44
	protected virtual void OnPopulateMesh(VertexHelper vh) { }

	// RVA: 0x21486E0 Offset: 0x21486E0 VA: 0x21486E0 Slot: 13
	protected override void OnDidApplyAnimationProperties() { }

	// RVA: 0x21486F0 Offset: 0x21486F0 VA: 0x21486F0 Slot: 45
	public virtual void SetNativeSize() { }

	// RVA: 0x21486F4 Offset: 0x21486F4 VA: 0x21486F4 Slot: 46
	public virtual bool Raycast(Vector2 sp, Camera eventCamera) { }

	// RVA: 0x2148AD8 Offset: 0x2148AD8 VA: 0x2148AD8
	public Vector2 PixelAdjustPoint(Vector2 point) { }

	// RVA: 0x214857C Offset: 0x214857C VA: 0x214857C
	public Rect GetPixelAdjustedRect() { }

	// RVA: 0x2148C44 Offset: 0x2148C44 VA: 0x2148C44 Slot: 47
	public virtual void CrossFadeColor(Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) { }

	// RVA: 0x2148C60 Offset: 0x2148C60 VA: 0x2148C60 Slot: 48
	public virtual void CrossFadeColor(Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha, bool useRGB) { }

	// RVA: 0x2148F3C Offset: 0x2148F3C VA: 0x2148F3C
	private static Color CreateColorFromAlpha(float alpha) { }

	// RVA: 0x2148F64 Offset: 0x2148F64 VA: 0x2148F64 Slot: 49
	public virtual void CrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) { }

	// RVA: 0x214900C Offset: 0x214900C VA: 0x214900C
	public void RegisterDirtyLayoutCallback(UnityAction action) { }

	// RVA: 0x21490D0 Offset: 0x21490D0 VA: 0x21490D0
	public void UnregisterDirtyLayoutCallback(UnityAction action) { }

	// RVA: 0x2149194 Offset: 0x2149194 VA: 0x2149194
	public void RegisterDirtyVerticesCallback(UnityAction action) { }

	// RVA: 0x2149258 Offset: 0x2149258 VA: 0x2149258
	public void UnregisterDirtyVerticesCallback(UnityAction action) { }

	// RVA: 0x214931C Offset: 0x214931C VA: 0x214931C
	public void RegisterDirtyMaterialCallback(UnityAction action) { }

	// RVA: 0x21493E0 Offset: 0x21493E0 VA: 0x21493E0
	public void UnregisterDirtyMaterialCallback(UnityAction action) { }

	// RVA: 0x21494A4 Offset: 0x21494A4 VA: 0x21494A4
	private static void .cctor() { }

	// RVA: 0x2149528 Offset: 0x2149528 VA: 0x2149528 Slot: 18
	private Transform UnityEngine.UI.ICanvasElement.get_transform() { }
}

// Namespace: UnityEngine.UI
[AddComponentMenu] // RVA: 0xC12350 Offset: 0xC12350 VA: 0xC12350
[RequireComponent] // RVA: 0xC12350 Offset: 0xC12350 VA: 0xC12350
public class GraphicRaycaster : BaseRaycaster // TypeDefIndex: 3072
{
	// Fields
	protected const int kNoEventMaskSet = -1;
	[FormerlySerializedAsAttribute] // RVA: 0xC13FD4 Offset: 0xC13FD4 VA: 0xC13FD4
	[SerializeField] // RVA: 0xC13FD4 Offset: 0xC13FD4 VA: 0xC13FD4
	private bool m_IgnoreReversedGraphics; // 0x18
	[FormerlySerializedAsAttribute] // RVA: 0xC14020 Offset: 0xC14020 VA: 0xC14020
	[SerializeField] // RVA: 0xC14020 Offset: 0xC14020 VA: 0xC14020
	private GraphicRaycaster.BlockingObjects m_BlockingObjects; // 0x1C
	[SerializeField] // RVA: 0xC1406C Offset: 0xC1406C VA: 0xC1406C
	protected LayerMask m_BlockingMask; // 0x20
	private Canvas m_Canvas; // 0x28
	private List<Graphic> m_RaycastResults; // 0x30
	private static readonly List<Graphic> s_SortedGraphics; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC1407C Offset: 0xC1407C VA: 0xC1407C
	private static Comparison<Graphic> <>f__am$cache0; // 0x8

	// Properties
	public override int sortOrderPriority { get; }
	public override int renderOrderPriority { get; }
	public bool ignoreReversedGraphics { get; set; }
	public GraphicRaycaster.BlockingObjects blockingObjects { get; set; }
	private Canvas canvas { get; }
	public override Camera eventCamera { get; }

	// Methods

	// RVA: 0x2149530 Offset: 0x2149530 VA: 0x2149530
	protected void .ctor() { }

	// RVA: 0x21495BC Offset: 0x21495BC VA: 0x21495BC Slot: 20
	public override int get_sortOrderPriority() { }

	// RVA: 0x21496C0 Offset: 0x21496C0 VA: 0x21496C0 Slot: 21
	public override int get_renderOrderPriority() { }

	// RVA: 0x2149744 Offset: 0x2149744 VA: 0x2149744
	public bool get_ignoreReversedGraphics() { }

	// RVA: 0x214974C Offset: 0x214974C VA: 0x214974C
	public void set_ignoreReversedGraphics(bool value) { }

	// RVA: 0x2149758 Offset: 0x2149758 VA: 0x2149758
	public GraphicRaycaster.BlockingObjects get_blockingObjects() { }

	// RVA: 0x2149760 Offset: 0x2149760 VA: 0x2149760
	public void set_blockingObjects(GraphicRaycaster.BlockingObjects value) { }

	// RVA: 0x2149628 Offset: 0x2149628 VA: 0x2149628
	private Canvas get_canvas() { }

	// RVA: 0x2149768 Offset: 0x2149768 VA: 0x2149768 Slot: 17
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList) { }

	// RVA: 0x214AD18 Offset: 0x214AD18 VA: 0x214AD18 Slot: 18
	public override Camera get_eventCamera() { }

	// RVA: 0x214A7DC Offset: 0x214A7DC VA: 0x214A7DC
	private static void Raycast(Canvas canvas, Camera eventCamera, Vector2 pointerPosition, IList<Graphic> foundGraphics, List<Graphic> results) { }

	// RVA: 0x214AE98 Offset: 0x214AE98 VA: 0x214AE98
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xC158A0 Offset: 0xC158A0 VA: 0xC158A0
	// RVA: 0x214AF0C Offset: 0x214AF0C VA: 0x214AF0C
	private static int <Raycast>m__0(Graphic g1, Graphic g2) { }
}

// Namespace: 
public enum GraphicRaycaster.BlockingObjects // TypeDefIndex: 3073
{
	// Fields
	public int value__; // 0x0
	public const GraphicRaycaster.BlockingObjects None = 0;
	public const GraphicRaycaster.BlockingObjects TwoD = 1;
	public const GraphicRaycaster.BlockingObjects ThreeD = 2;
	public const GraphicRaycaster.BlockingObjects All = 3;
}

// Namespace: UnityEngine.UI
public class GraphicRegistry // TypeDefIndex: 3074
{
	// Fields
	private static GraphicRegistry s_Instance; // 0x0
	private readonly Dictionary<Canvas, IndexedSet<Graphic>> m_Graphics; // 0x10
	private static readonly List<Graphic> s_EmptyList; // 0x8

	// Properties
	public static GraphicRegistry instance { get; }

	// Methods

	// RVA: 0x214AF74 Offset: 0x214AF74 VA: 0x214AF74
	protected void .ctor() { }

	// RVA: 0x214B074 Offset: 0x214B074 VA: 0x214B074
	public static GraphicRegistry get_instance() { }

	// RVA: 0x2146B14 Offset: 0x2146B14 VA: 0x2146B14
	public static void RegisterGraphicForCanvas(Canvas c, Graphic graphic) { }

	// RVA: 0x214671C Offset: 0x214671C VA: 0x214671C
	public static void UnregisterGraphicForCanvas(Canvas c, Graphic graphic) { }

	// RVA: 0x214A704 Offset: 0x214A704 VA: 0x214A704
	public static IList<Graphic> GetGraphicsForCanvas(Canvas canvas) { }

	// RVA: 0x214B134 Offset: 0x214B134 VA: 0x214B134
	private static void .cctor() { }
}

// Namespace: UnityEngine.UI
[ObsoleteAttribute] // RVA: 0xC123D8 Offset: 0xC123D8 VA: 0xC123D8
internal interface IGraphicEnabledDisabled // TypeDefIndex: 3075
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnSiblingGraphicEnabledDisabled();
}

// Namespace: UnityEngine.UI
[EditorBrowsableAttribute] // RVA: 0xC12410 Offset: 0xC12410 VA: 0xC12410
[ObsoleteAttribute] // RVA: 0xC12410 Offset: 0xC12410 VA: 0xC12410
public interface IMask // TypeDefIndex: 3076
{
	// Properties
	public abstract RectTransform rectTransform { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract bool Enabled();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract RectTransform get_rectTransform();
}

// Namespace: UnityEngine.UI
public interface IMaskable // TypeDefIndex: 3077
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void RecalculateMasking();
}

// Namespace: UnityEngine.UI
[AddComponentMenu] // RVA: 0xC12464 Offset: 0xC12464 VA: 0xC12464
public class Image : MaskableGraphic, ISerializationCallbackReceiver, ILayoutElement, ICanvasRaycastFilter // TypeDefIndex: 3078
{
	// Fields
	protected static Material s_ETC1DefaultUI; // 0x0
	[FormerlySerializedAsAttribute] // RVA: 0xC1408C Offset: 0xC1408C VA: 0xC1408C
	[SerializeField] // RVA: 0xC1408C Offset: 0xC1408C VA: 0xC1408C
	private Sprite m_Sprite; // 0xB0
	private Sprite m_OverrideSprite; // 0xB8
	[SerializeField] // RVA: 0xC140D8 Offset: 0xC140D8 VA: 0xC140D8
	private Image.Type m_Type; // 0xC0
	[SerializeField] // RVA: 0xC140E8 Offset: 0xC140E8 VA: 0xC140E8
	private bool m_PreserveAspect; // 0xC4
	[SerializeField] // RVA: 0xC140F8 Offset: 0xC140F8 VA: 0xC140F8
	private bool m_FillCenter; // 0xC5
	[SerializeField] // RVA: 0xC14108 Offset: 0xC14108 VA: 0xC14108
	private Image.FillMethod m_FillMethod; // 0xC8
	[RangeAttribute] // RVA: 0xC14118 Offset: 0xC14118 VA: 0xC14118
	[SerializeField] // RVA: 0xC14118 Offset: 0xC14118 VA: 0xC14118
	private float m_FillAmount; // 0xCC
	[SerializeField] // RVA: 0xC14158 Offset: 0xC14158 VA: 0xC14158
	private bool m_FillClockwise; // 0xD0
	[SerializeField] // RVA: 0xC14168 Offset: 0xC14168 VA: 0xC14168
	private int m_FillOrigin; // 0xD4
	private float m_AlphaHitTestMinimumThreshold; // 0xD8
	private bool m_Tracked; // 0xDC
	[SerializeField] // RVA: 0xC14178 Offset: 0xC14178 VA: 0xC14178
	private bool m_UseSpriteMesh; // 0xDD
	private static readonly Vector2[] s_VertScratch; // 0x8
	private static readonly Vector2[] s_UVScratch; // 0x10
	private static readonly Vector3[] s_Xy; // 0x18
	private static readonly Vector3[] s_Uv; // 0x20
	private static List<Image> m_TrackedTexturelessImages; // 0x28
	private static bool s_Initialized; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC14188 Offset: 0xC14188 VA: 0xC14188
	private static Action<SpriteAtlas> <>f__mg$cache0; // 0x38

	// Properties
	public Sprite sprite { get; set; }
	public Sprite overrideSprite { get; set; }
	private Sprite activeSprite { get; }
	public Image.Type type { get; set; }
	public bool preserveAspect { get; set; }
	public bool fillCenter { get; set; }
	public Image.FillMethod fillMethod { get; set; }
	public float fillAmount { get; set; }
	public bool fillClockwise { get; set; }
	public int fillOrigin { get; set; }
	[ObsoleteAttribute] // RVA: 0xC16088 Offset: 0xC16088 VA: 0xC16088
	public float eventAlphaThreshold { get; set; }
	public float alphaHitTestMinimumThreshold { get; set; }
	public bool useSpriteMesh { get; set; }
	public static Material defaultETC1GraphicMaterial { get; }
	public override Texture mainTexture { get; }
	public bool hasBorder { get; }
	public float pixelsPerUnit { get; }
	public override Material material { get; set; }
	public virtual float minWidth { get; }
	public virtual float preferredWidth { get; }
	public virtual float flexibleWidth { get; }
	public virtual float minHeight { get; }
	public virtual float preferredHeight { get; }
	public virtual float flexibleHeight { get; }
	public virtual int layoutPriority { get; }

	// Methods

	// RVA: 0x214D760 Offset: 0x214D760 VA: 0x214D760
	protected void .ctor() { }

	// RVA: 0x214D7B0 Offset: 0x214D7B0 VA: 0x214D7B0
	public Sprite get_sprite() { }

	// RVA: 0x214D7B8 Offset: 0x214D7B8 VA: 0x214D7B8
	public void set_sprite(Sprite value) { }

	// RVA: 0x214D958 Offset: 0x214D958 VA: 0x214D958
	public Sprite get_overrideSprite() { }

	// RVA: 0x214D9EC Offset: 0x214D9EC VA: 0x214D9EC
	public void set_overrideSprite(Sprite value) { }

	// RVA: 0x214D95C Offset: 0x214D95C VA: 0x214D95C
	private Sprite get_activeSprite() { }

	// RVA: 0x214DA7C Offset: 0x214DA7C VA: 0x214DA7C
	public Image.Type get_type() { }

	// RVA: 0x214DA84 Offset: 0x214DA84 VA: 0x214DA84
	public void set_type(Image.Type value) { }

	// RVA: 0x214DB0C Offset: 0x214DB0C VA: 0x214DB0C
	public bool get_preserveAspect() { }

	// RVA: 0x214DB14 Offset: 0x214DB14 VA: 0x214DB14
	public void set_preserveAspect(bool value) { }

	// RVA: 0x214DB9C Offset: 0x214DB9C VA: 0x214DB9C
	public bool get_fillCenter() { }

	// RVA: 0x214DBA4 Offset: 0x214DBA4 VA: 0x214DBA4
	public void set_fillCenter(bool value) { }

	// RVA: 0x214DC2C Offset: 0x214DC2C VA: 0x214DC2C
	public Image.FillMethod get_fillMethod() { }

	// RVA: 0x214DC34 Offset: 0x214DC34 VA: 0x214DC34
	public void set_fillMethod(Image.FillMethod value) { }

	// RVA: 0x214DCB4 Offset: 0x214DCB4 VA: 0x214DCB4
	public float get_fillAmount() { }

	// RVA: 0x214DCBC Offset: 0x214DCBC VA: 0x214DCBC
	public void set_fillAmount(float value) { }

	// RVA: 0x214DD70 Offset: 0x214DD70 VA: 0x214DD70
	public bool get_fillClockwise() { }

	// RVA: 0x214DD78 Offset: 0x214DD78 VA: 0x214DD78
	public void set_fillClockwise(bool value) { }

	// RVA: 0x214DE00 Offset: 0x214DE00 VA: 0x214DE00
	public int get_fillOrigin() { }

	// RVA: 0x214DE08 Offset: 0x214DE08 VA: 0x214DE08
	public void set_fillOrigin(int value) { }

	// RVA: 0x214DE90 Offset: 0x214DE90 VA: 0x214DE90
	public float get_eventAlphaThreshold() { }

	// RVA: 0x214DEA8 Offset: 0x214DEA8 VA: 0x214DEA8
	public void set_eventAlphaThreshold(float value) { }

	// RVA: 0x214DEA0 Offset: 0x214DEA0 VA: 0x214DEA0
	public float get_alphaHitTestMinimumThreshold() { }

	// RVA: 0x214DEB8 Offset: 0x214DEB8 VA: 0x214DEB8
	public void set_alphaHitTestMinimumThreshold(float value) { }

	// RVA: 0x214DEC0 Offset: 0x214DEC0 VA: 0x214DEC0
	public bool get_useSpriteMesh() { }

	// RVA: 0x214DEC8 Offset: 0x214DEC8 VA: 0x214DEC8
	public void set_useSpriteMesh(bool value) { }

	// RVA: 0x214DF50 Offset: 0x214DF50 VA: 0x214DF50
	public static Material get_defaultETC1GraphicMaterial() { }

	// RVA: 0x214E048 Offset: 0x214E048 VA: 0x214E048 Slot: 35
	public override Texture get_mainTexture() { }

	// RVA: 0x214E204 Offset: 0x214E204 VA: 0x214E204
	public bool get_hasBorder() { }

	// RVA: 0x214E2D8 Offset: 0x214E2D8 VA: 0x214E2D8
	public float get_pixelsPerUnit() { }

	// RVA: 0x214E3FC Offset: 0x214E3FC VA: 0x214E3FC Slot: 32
	public override Material get_material() { }

	// RVA: 0x214E55C Offset: 0x214E55C VA: 0x214E55C Slot: 33
	public override void set_material(Material value) { }

	// RVA: 0x214E560 Offset: 0x214E560 VA: 0x214E560 Slot: 75
	public virtual void OnBeforeSerialize() { }

	// RVA: 0x214E564 Offset: 0x214E564 VA: 0x214E564 Slot: 76
	public virtual void OnAfterDeserialize() { }

	// RVA: 0x214E620 Offset: 0x214E620 VA: 0x214E620
	private void PreserveSpriteAspectRatio(ref Rect rect, Vector2 spriteSize) { }

	// RVA: 0x214E790 Offset: 0x214E790 VA: 0x214E790
	private Vector4 GetDrawingDimensions(bool shouldPreserveAspect) { }

	// RVA: 0x214EB18 Offset: 0x214EB18 VA: 0x214EB18 Slot: 45
	public override void SetNativeSize() { }

	// RVA: 0x214ECFC Offset: 0x214ECFC VA: 0x214ECFC Slot: 44
	protected override void OnPopulateMesh(VertexHelper toFill) { }

	// RVA: 0x214D848 Offset: 0x214D848 VA: 0x214D848
	private void TrackSprite() { }

	// RVA: 0x2152C1C Offset: 0x2152C1C VA: 0x2152C1C Slot: 5
	protected override void OnEnable() { }

	// RVA: 0x2152C44 Offset: 0x2152C44 VA: 0x2152C44 Slot: 7
	protected override void OnDisable() { }

	// RVA: 0x2152D54 Offset: 0x2152D54 VA: 0x2152D54 Slot: 40
	protected override void UpdateMaterial() { }

	// RVA: 0x214EE4C Offset: 0x214EE4C VA: 0x214EE4C
	private void GenerateSimpleSprite(VertexHelper vh, bool lPreserveAspect) { }

	// RVA: 0x214F1F8 Offset: 0x214F1F8 VA: 0x214F1F8
	private void GenerateSprite(VertexHelper vh, bool lPreserveAspect) { }

	// RVA: 0x214F75C Offset: 0x214F75C VA: 0x214F75C
	private void GenerateSlicedSprite(VertexHelper toFill) { }

	// RVA: 0x21500D8 Offset: 0x21500D8 VA: 0x21500D8
	private void GenerateTiledSprite(VertexHelper toFill) { }

	// RVA: 0x215330C Offset: 0x215330C VA: 0x215330C
	private static void AddQuad(VertexHelper vertexHelper, Vector3[] quadPositions, Color32 color, Vector3[] quadUVs) { }

	// RVA: 0x2153098 Offset: 0x2153098 VA: 0x2153098
	private static void AddQuad(VertexHelper vertexHelper, Vector2 posMin, Vector2 posMax, Color32 color, Vector2 uvMin, Vector2 uvMax) { }

	// RVA: 0x2152E8C Offset: 0x2152E8C VA: 0x2152E8C
	private Vector4 GetAdjustedBorders(Vector4 border, Rect adjustedRect) { }

	// RVA: 0x2151518 Offset: 0x2151518 VA: 0x2151518
	private void GenerateFilledSprite(VertexHelper toFill, bool preserveAspect) { }

	// RVA: 0x2153500 Offset: 0x2153500 VA: 0x2153500
	private static bool RadialCut(Vector3[] xy, Vector3[] uv, float fill, bool invert, int corner) { }

	// RVA: 0x215366C Offset: 0x215366C VA: 0x215366C
	private static void RadialCut(Vector3[] xy, float cos, float sin, bool invert, int corner) { }

	// RVA: 0x2153ED4 Offset: 0x2153ED4 VA: 0x2153ED4 Slot: 77
	public virtual void CalculateLayoutInputHorizontal() { }

	// RVA: 0x2153ED8 Offset: 0x2153ED8 VA: 0x2153ED8 Slot: 78
	public virtual void CalculateLayoutInputVertical() { }

	// RVA: 0x2153EDC Offset: 0x2153EDC VA: 0x2153EDC Slot: 79
	public virtual float get_minWidth() { }

	// RVA: 0x2153EE4 Offset: 0x2153EE4 VA: 0x2153EE4 Slot: 80
	public virtual float get_preferredWidth() { }

