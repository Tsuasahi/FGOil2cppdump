	// Fields
	protected GameObject cachedGameObject; // 0x0
	protected T cachedComponent; // 0x0

	// Properties
	protected Rigidbody rigidbody { get; }
	protected Rigidbody2D rigidbody2d { get; }
	protected Renderer renderer { get; }
	protected Animation animation { get; }
	protected AudioSource audio { get; }
	protected Camera camera { get; }
	protected GUIText guiText { get; }
	protected GUITexture guiTexture { get; }
	protected Light light { get; }

	// Methods

	// RVA: -1 Offset: -1
	protected void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25309B0 Offset: 0x25309B0 VA: 0x25309B0
	|-ComponentAction<PlayMakerCanvasRaycastFilterProxy>..ctor
	|-ComponentAction<object>..ctor
	|-ComponentAction<Animation>..ctor
	|-ComponentAction<AudioSource>..ctor
	|-ComponentAction<Camera>..ctor
	|-ComponentAction<CanvasGroup>..ctor
	|-ComponentAction<EventTrigger>..ctor
	|-ComponentAction<GUIText>..ctor
	|-ComponentAction<GUITexture>..ctor
	|-ComponentAction<Light>..ctor
	|-ComponentAction<Renderer>..ctor
	|-ComponentAction<Rigidbody2D>..ctor
	|-ComponentAction<Rigidbody>..ctor
	|-ComponentAction<Button>..ctor
	|-ComponentAction<CanvasScaler>..ctor
	|-ComponentAction<Dropdown>..ctor
	|-ComponentAction<Graphic>..ctor
	|-ComponentAction<Image>..ctor
	|-ComponentAction<InputField>..ctor
	|-ComponentAction<LayoutElement>..ctor
	|-ComponentAction<RawImage>..ctor
	|-ComponentAction<ScrollRect>..ctor
	|-ComponentAction<Scrollbar>..ctor
	|-ComponentAction<Selectable>..ctor
	|-ComponentAction<Slider>..ctor
	|-ComponentAction<Text>..ctor
	|-ComponentAction<Toggle>..ctor
	*/

	// RVA: -1 Offset: -1
	protected Rigidbody get_rigidbody() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25309DC Offset: 0x25309DC VA: 0x25309DC
	|-ComponentAction<object>.get_rigidbody
	|-ComponentAction<Rigidbody>.get_rigidbody
	*/

	// RVA: -1 Offset: -1
	protected Rigidbody2D get_rigidbody2d() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2530A2C Offset: 0x2530A2C VA: 0x2530A2C
	|-ComponentAction<object>.get_rigidbody2d
	|-ComponentAction<Rigidbody2D>.get_rigidbody2d
	*/

	// RVA: -1 Offset: -1
	protected Renderer get_renderer() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2530A7C Offset: 0x2530A7C VA: 0x2530A7C
	|-ComponentAction<object>.get_renderer
	|-ComponentAction<Renderer>.get_renderer
	*/

	// RVA: -1 Offset: -1
	protected Animation get_animation() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2530ACC Offset: 0x2530ACC VA: 0x2530ACC
	|-ComponentAction<object>.get_animation
	|-ComponentAction<Animation>.get_animation
	*/

	// RVA: -1 Offset: -1
	protected AudioSource get_audio() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2530B1C Offset: 0x2530B1C VA: 0x2530B1C
	|-ComponentAction<object>.get_audio
	|-ComponentAction<AudioSource>.get_audio
	*/

	// RVA: -1 Offset: -1
	protected Camera get_camera() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2530B6C Offset: 0x2530B6C VA: 0x2530B6C
	|-ComponentAction<object>.get_camera
	|-ComponentAction<Camera>.get_camera
	*/

	// RVA: -1 Offset: -1
	protected GUIText get_guiText() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2530BBC Offset: 0x2530BBC VA: 0x2530BBC
	|-ComponentAction<object>.get_guiText
	|-ComponentAction<GUIText>.get_guiText
	*/

	// RVA: -1 Offset: -1
	protected GUITexture get_guiTexture() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2530C0C Offset: 0x2530C0C VA: 0x2530C0C
	|-ComponentAction<object>.get_guiTexture
	|-ComponentAction<GUITexture>.get_guiTexture
	*/

	// RVA: -1 Offset: -1
	protected Light get_light() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2530C5C Offset: 0x2530C5C VA: 0x2530C5C
	|-ComponentAction<object>.get_light
	|-ComponentAction<Light>.get_light
	*/

	// RVA: -1 Offset: -1
	protected bool UpdateCache(GameObject go) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2530CAC Offset: 0x2530CAC VA: 0x2530CAC
	|-ComponentAction<object>.UpdateCache
	|-ComponentAction<Animation>.UpdateCache
	|-ComponentAction<AudioSource>.UpdateCache
	|-ComponentAction<Camera>.UpdateCache
	|-ComponentAction<CanvasGroup>.UpdateCache
	|-ComponentAction<GUIText>.UpdateCache
	|-ComponentAction<GUITexture>.UpdateCache
	|-ComponentAction<Light>.UpdateCache
	|-ComponentAction<Renderer>.UpdateCache
	|-ComponentAction<Rigidbody2D>.UpdateCache
	|-ComponentAction<Rigidbody>.UpdateCache
	|-ComponentAction<Button>.UpdateCache
	|-ComponentAction<CanvasScaler>.UpdateCache
	|-ComponentAction<Dropdown>.UpdateCache
	|-ComponentAction<Graphic>.UpdateCache
	|-ComponentAction<Image>.UpdateCache
	|-ComponentAction<InputField>.UpdateCache
	|-ComponentAction<LayoutElement>.UpdateCache
	|-ComponentAction<RawImage>.UpdateCache
	|-ComponentAction<ScrollRect>.UpdateCache
	|-ComponentAction<Scrollbar>.UpdateCache
	|-ComponentAction<Selectable>.UpdateCache
	|-ComponentAction<Slider>.UpdateCache
	|-ComponentAction<Text>.UpdateCache
	|-ComponentAction<Toggle>.UpdateCache
	*/

	// RVA: -1 Offset: -1
	protected bool UpdateCacheAddComponent(GameObject go) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2530F04 Offset: 0x2530F04 VA: 0x2530F04
	|-ComponentAction<PlayMakerCanvasRaycastFilterProxy>.UpdateCacheAddComponent
	|-ComponentAction<object>.UpdateCacheAddComponent
	|-ComponentAction<EventTrigger>.UpdateCacheAddComponent
	*/

	// RVA: -1 Offset: -1
	protected void SendEvent(FsmEventTarget eventTarget, FsmEvent fsmEvent) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25310C8 Offset: 0x25310C8 VA: 0x25310C8
	|-ComponentAction<object>.SendEvent
	|-ComponentAction<EventTrigger>.SendEvent
	|-ComponentAction<Button>.SendEvent
	|-ComponentAction<InputField>.SendEvent
	|-ComponentAction<Scrollbar>.SendEvent
	|-ComponentAction<Slider>.SendEvent
	|-ComponentAction<Toggle>.SendEvent
	*/
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9C560 Offset: 0xC9C560 VA: 0xC9C560
[TooltipAttribute] // RVA: 0xC9C560 Offset: 0xC9C560 VA: 0xC9C560
public class ControllerIsGrounded : FsmStateAction // TypeDefIndex: 12359
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCFFCAC Offset: 0xCFFCAC VA: 0xCFFCAC
	[CheckForComponentAttribute] // RVA: 0xCFFCAC Offset: 0xCFFCAC VA: 0xCFFCAC
	[TooltipAttribute] // RVA: 0xCFFCAC Offset: 0xCFFCAC VA: 0xCFFCAC
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xCFFD44 Offset: 0xCFFD44 VA: 0xCFFD44
	public FsmEvent trueEvent; // 0x58
	[TooltipAttribute] // RVA: 0xCFFD7C Offset: 0xCFFD7C VA: 0xCFFD7C
	public FsmEvent falseEvent; // 0x60
	[TooltipAttribute] // RVA: 0xCFFDB4 Offset: 0xCFFDB4 VA: 0xCFFDB4
	[UIHintAttribute] // RVA: 0xCFFDB4 Offset: 0xCFFDB4 VA: 0xCFFDB4
	public FsmBool storeResult; // 0x68
	[TooltipAttribute] // RVA: 0xCFFE04 Offset: 0xCFFE04 VA: 0xCFFE04
	public bool everyFrame; // 0x70
	private GameObject previousGo; // 0x78
	private CharacterController controller; // 0x80

	// Methods

	// RVA: 0x2325418 Offset: 0x2325418 VA: 0x2325418
	public void .ctor() { }

	// RVA: 0x2325420 Offset: 0x2325420 VA: 0x2325420 Slot: 28
	public override void Reset() { }

	// RVA: 0x2325430 Offset: 0x2325430 VA: 0x2325430 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2325648 Offset: 0x2325648 VA: 0x2325648 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x232546C Offset: 0x232546C VA: 0x232546C
	private void DoControllerIsGrounded() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9C5B0 Offset: 0xC9C5B0 VA: 0xC9C5B0
[TooltipAttribute] // RVA: 0xC9C5B0 Offset: 0xC9C5B0 VA: 0xC9C5B0
public class ControllerMove : FsmStateAction // TypeDefIndex: 12360
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCFFE3C Offset: 0xCFFE3C VA: 0xCFFE3C
	[CheckForComponentAttribute] // RVA: 0xCFFE3C Offset: 0xCFFE3C VA: 0xCFFE3C
	[TooltipAttribute] // RVA: 0xCFFE3C Offset: 0xCFFE3C VA: 0xCFFE3C
	public FsmOwnerDefault gameObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xCFFED4 Offset: 0xCFFED4 VA: 0xCFFED4
	[TooltipAttribute] // RVA: 0xCFFED4 Offset: 0xCFFED4 VA: 0xCFFED4
	public FsmVector3 moveVector; // 0x58
	[TooltipAttribute] // RVA: 0xCFFF20 Offset: 0xCFFF20 VA: 0xCFFF20
	public Space space; // 0x60
	[TooltipAttribute] // RVA: 0xCFFF58 Offset: 0xCFFF58 VA: 0xCFFF58
	public FsmBool perSecond; // 0x68
	private GameObject previousGo; // 0x70
	private CharacterController controller; // 0x78

	// Methods

	// RVA: 0x232564C Offset: 0x232564C VA: 0x232564C
	public void .ctor() { }

	// RVA: 0x2325654 Offset: 0x2325654 VA: 0x2325654 Slot: 28
	public override void Reset() { }

	// RVA: 0x23256E8 Offset: 0x23256E8 VA: 0x23256E8 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9C600 Offset: 0xC9C600 VA: 0xC9C600
[TooltipAttribute] // RVA: 0xC9C600 Offset: 0xC9C600 VA: 0xC9C600
public class ControllerSettings : FsmStateAction // TypeDefIndex: 12361
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xCFFF90 Offset: 0xCFFF90 VA: 0xCFFF90
	[CheckForComponentAttribute] // RVA: 0xCFFF90 Offset: 0xCFFF90 VA: 0xCFFF90
	[TooltipAttribute] // RVA: 0xCFFF90 Offset: 0xCFFF90 VA: 0xCFFF90
	public FsmOwnerDefault gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xD00028 Offset: 0xD00028 VA: 0xD00028
	public FsmFloat height; // 0x58
	[TooltipAttribute] // RVA: 0xD00060 Offset: 0xD00060 VA: 0xD00060
	public FsmFloat radius; // 0x60
	[TooltipAttribute] // RVA: 0xD00098 Offset: 0xD00098 VA: 0xD00098
	public FsmFloat slopeLimit; // 0x68
	[TooltipAttribute] // RVA: 0xD000D0 Offset: 0xD000D0 VA: 0xD000D0
	public FsmFloat stepOffset; // 0x70
	[TooltipAttribute] // RVA: 0xD00108 Offset: 0xD00108 VA: 0xD00108
	public FsmVector3 center; // 0x78
	[TooltipAttribute] // RVA: 0xD00140 Offset: 0xD00140 VA: 0xD00140
	public FsmBool detectCollisions; // 0x80
	[TooltipAttribute] // RVA: 0xD00178 Offset: 0xD00178 VA: 0xD00178
	public bool everyFrame; // 0x88
	private GameObject previousGo; // 0x90
	private CharacterController controller; // 0x98

	// Methods

	// RVA: 0x2325994 Offset: 0x2325994 VA: 0x2325994
	public void .ctor() { }

	// RVA: 0x232599C Offset: 0x232599C VA: 0x232599C Slot: 28
	public override void Reset() { }

	// RVA: 0x2325B3C Offset: 0x2325B3C VA: 0x2325B3C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2325F28 Offset: 0x2325F28 VA: 0x2325F28 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2325B78 Offset: 0x2325B78 VA: 0x2325B78
	private void DoControllerSettings() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9C650 Offset: 0xC9C650 VA: 0xC9C650
[TooltipAttribute] // RVA: 0xC9C650 Offset: 0xC9C650 VA: 0xC9C650
public class ControllerSimpleMove : FsmStateAction // TypeDefIndex: 12362
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD001B0 Offset: 0xD001B0 VA: 0xD001B0
	[CheckForComponentAttribute] // RVA: 0xD001B0 Offset: 0xD001B0 VA: 0xD001B0
	[TooltipAttribute] // RVA: 0xD001B0 Offset: 0xD001B0 VA: 0xD001B0
	public FsmOwnerDefault gameObject; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD00248 Offset: 0xD00248 VA: 0xD00248
	[TooltipAttribute] // RVA: 0xD00248 Offset: 0xD00248 VA: 0xD00248
	public FsmVector3 moveVector; // 0x58
	[TooltipAttribute] // RVA: 0xD00294 Offset: 0xD00294 VA: 0xD00294
	public FsmFloat speed; // 0x60
	[TooltipAttribute] // RVA: 0xD002CC Offset: 0xD002CC VA: 0xD002CC
	public Space space; // 0x68
	private GameObject previousGo; // 0x70
	private CharacterController controller; // 0x78

	// Methods

	// RVA: 0x2325F2C Offset: 0x2325F2C VA: 0x2325F2C
	public void .ctor() { }

	// RVA: 0x2325F34 Offset: 0x2325F34 VA: 0x2325F34 Slot: 28
	public override void Reset() { }

	// RVA: 0x2325FC8 Offset: 0x2325FC8 VA: 0x2325FC8 Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9C6A0 Offset: 0xC9C6A0 VA: 0xC9C6A0
[TooltipAttribute] // RVA: 0xC9C6A0 Offset: 0xC9C6A0 VA: 0xC9C6A0
public class ConvertEnumToString : FsmStateAction // TypeDefIndex: 12363
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD00304 Offset: 0xD00304 VA: 0xD00304
	[UIHintAttribute] // RVA: 0xD00304 Offset: 0xD00304 VA: 0xD00304
	[TooltipAttribute] // RVA: 0xD00304 Offset: 0xD00304 VA: 0xD00304
	public FsmEnum enumVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD00364 Offset: 0xD00364 VA: 0xD00364
	[UIHintAttribute] // RVA: 0xD00364 Offset: 0xD00364 VA: 0xD00364
	[TooltipAttribute] // RVA: 0xD00364 Offset: 0xD00364 VA: 0xD00364
	public FsmString stringVariable; // 0x58
	[TooltipAttribute] // RVA: 0xD003C4 Offset: 0xD003C4 VA: 0xD003C4
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x23266FC Offset: 0x23266FC VA: 0x23266FC
	public void .ctor() { }

	// RVA: 0x2326704 Offset: 0x2326704 VA: 0x2326704 Slot: 28
	public override void Reset() { }

	// RVA: 0x2326710 Offset: 0x2326710 VA: 0x2326710 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x232683C Offset: 0x232683C VA: 0x232683C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x232674C Offset: 0x232674C VA: 0x232674C
	private void DoConvertEnumToString() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9C6F0 Offset: 0xC9C6F0 VA: 0xC9C6F0
[HelpUrlAttribute] // RVA: 0xC9C6F0 Offset: 0xC9C6F0 VA: 0xC9C6F0
[TooltipAttribute] // RVA: 0xC9C6F0 Offset: 0xC9C6F0 VA: 0xC9C6F0
public class ConvertSecondsToString : FsmStateAction // TypeDefIndex: 12364
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD003FC Offset: 0xD003FC VA: 0xD003FC
	[UIHintAttribute] // RVA: 0xD003FC Offset: 0xD003FC VA: 0xD003FC
	[TooltipAttribute] // RVA: 0xD003FC Offset: 0xD003FC VA: 0xD003FC
	public FsmFloat secondsVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD0045C Offset: 0xD0045C VA: 0xD0045C
	[UIHintAttribute] // RVA: 0xD0045C Offset: 0xD0045C VA: 0xD0045C
	[TooltipAttribute] // RVA: 0xD0045C Offset: 0xD0045C VA: 0xD0045C
	public FsmString stringVariable; // 0x58
	[RequiredFieldAttribute] // RVA: 0xD004BC Offset: 0xD004BC VA: 0xD004BC
	[TooltipAttribute] // RVA: 0xD004BC Offset: 0xD004BC VA: 0xD004BC
	public FsmString format; // 0x60
	[TooltipAttribute] // RVA: 0xD00508 Offset: 0xD00508 VA: 0xD00508
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x2326EF4 Offset: 0x2326EF4 VA: 0x2326EF4
	public void .ctor() { }

	// RVA: 0x2326EFC Offset: 0x2326EFC VA: 0x2326EFC Slot: 28
	public override void Reset() { }

	// RVA: 0x2326F5C Offset: 0x2326F5C VA: 0x2326F5C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x23275D4 Offset: 0x23275D4 VA: 0x23275D4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2326F98 Offset: 0x2326F98 VA: 0x2326F98
	private void DoConvertSecondsToString() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9C764 Offset: 0xC9C764 VA: 0xC9C764
[TooltipAttribute] // RVA: 0xC9C764 Offset: 0xC9C764 VA: 0xC9C764
public class ConvertBoolToColor : FsmStateAction // TypeDefIndex: 12365
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD00540 Offset: 0xD00540 VA: 0xD00540
	[UIHintAttribute] // RVA: 0xD00540 Offset: 0xD00540 VA: 0xD00540
	[TooltipAttribute] // RVA: 0xD00540 Offset: 0xD00540 VA: 0xD00540
	public FsmBool boolVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD005A0 Offset: 0xD005A0 VA: 0xD005A0
	[UIHintAttribute] // RVA: 0xD005A0 Offset: 0xD005A0 VA: 0xD005A0
	[TooltipAttribute] // RVA: 0xD005A0 Offset: 0xD005A0 VA: 0xD005A0
	public FsmColor colorVariable; // 0x58
	[TooltipAttribute] // RVA: 0xD00600 Offset: 0xD00600 VA: 0xD00600
	public FsmColor falseColor; // 0x60
	[TooltipAttribute] // RVA: 0xD00638 Offset: 0xD00638 VA: 0xD00638
	public FsmColor trueColor; // 0x68
	[TooltipAttribute] // RVA: 0xD00670 Offset: 0xD00670 VA: 0xD00670
	public bool everyFrame; // 0x70

	// Methods

	// RVA: 0x2326250 Offset: 0x2326250 VA: 0x2326250
	public void .ctor() { }

	// RVA: 0x2326258 Offset: 0x2326258 VA: 0x2326258 Slot: 28
	public override void Reset() { }

	// RVA: 0x23262A4 Offset: 0x23262A4 VA: 0x23262A4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x232638C Offset: 0x232638C VA: 0x232638C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x23262E0 Offset: 0x23262E0 VA: 0x23262E0
	private void DoConvertBoolToColor() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9C7B4 Offset: 0xC9C7B4 VA: 0xC9C7B4
[TooltipAttribute] // RVA: 0xC9C7B4 Offset: 0xC9C7B4 VA: 0xC9C7B4
public class ConvertBoolToFloat : FsmStateAction // TypeDefIndex: 12366
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD006A8 Offset: 0xD006A8 VA: 0xD006A8
	[UIHintAttribute] // RVA: 0xD006A8 Offset: 0xD006A8 VA: 0xD006A8
	[TooltipAttribute] // RVA: 0xD006A8 Offset: 0xD006A8 VA: 0xD006A8
	public FsmBool boolVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD00708 Offset: 0xD00708 VA: 0xD00708
	[UIHintAttribute] // RVA: 0xD00708 Offset: 0xD00708 VA: 0xD00708
	[TooltipAttribute] // RVA: 0xD00708 Offset: 0xD00708 VA: 0xD00708
	public FsmFloat floatVariable; // 0x58
	[TooltipAttribute] // RVA: 0xD00768 Offset: 0xD00768 VA: 0xD00768
	public FsmFloat falseValue; // 0x60
	[TooltipAttribute] // RVA: 0xD007A0 Offset: 0xD007A0 VA: 0xD007A0
	public FsmFloat trueValue; // 0x68
	[TooltipAttribute] // RVA: 0xD007D8 Offset: 0xD007D8 VA: 0xD007D8
	public bool everyFrame; // 0x70

	// Methods

	// RVA: 0x2326390 Offset: 0x2326390 VA: 0x2326390
	public void .ctor() { }

	// RVA: 0x2326398 Offset: 0x2326398 VA: 0x2326398 Slot: 28
	public override void Reset() { }

	// RVA: 0x23263DC Offset: 0x23263DC VA: 0x23263DC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x23264A4 Offset: 0x23264A4 VA: 0x23264A4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2326418 Offset: 0x2326418 VA: 0x2326418
	private void DoConvertBoolToFloat() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9C804 Offset: 0xC9C804 VA: 0xC9C804
[TooltipAttribute] // RVA: 0xC9C804 Offset: 0xC9C804 VA: 0xC9C804
public class ConvertBoolToInt : FsmStateAction // TypeDefIndex: 12367
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD00810 Offset: 0xD00810 VA: 0xD00810
	[UIHintAttribute] // RVA: 0xD00810 Offset: 0xD00810 VA: 0xD00810
	[TooltipAttribute] // RVA: 0xD00810 Offset: 0xD00810 VA: 0xD00810
	public FsmBool boolVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD00870 Offset: 0xD00870 VA: 0xD00870
	[UIHintAttribute] // RVA: 0xD00870 Offset: 0xD00870 VA: 0xD00870
	[TooltipAttribute] // RVA: 0xD00870 Offset: 0xD00870 VA: 0xD00870
	public FsmInt intVariable; // 0x58
	[TooltipAttribute] // RVA: 0xD008D0 Offset: 0xD008D0 VA: 0xD008D0
	public FsmInt falseValue; // 0x60
	[TooltipAttribute] // RVA: 0xD00908 Offset: 0xD00908 VA: 0xD00908
	public FsmInt trueValue; // 0x68
	[TooltipAttribute] // RVA: 0xD00940 Offset: 0xD00940 VA: 0xD00940
	public bool everyFrame; // 0x70

	// Methods

	// RVA: 0x23264A8 Offset: 0x23264A8 VA: 0x23264A8
	public void .ctor() { }

	// RVA: 0x23264B0 Offset: 0x23264B0 VA: 0x23264B0 Slot: 28
	public override void Reset() { }

	// RVA: 0x23264F4 Offset: 0x23264F4 VA: 0x23264F4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x23265B4 Offset: 0x23265B4 VA: 0x23265B4 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2326530 Offset: 0x2326530 VA: 0x2326530
	private void DoConvertBoolToInt() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9C854 Offset: 0xC9C854 VA: 0xC9C854
[TooltipAttribute] // RVA: 0xC9C854 Offset: 0xC9C854 VA: 0xC9C854
public class ConvertBoolToString : FsmStateAction // TypeDefIndex: 12368
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD00978 Offset: 0xD00978 VA: 0xD00978
	[UIHintAttribute] // RVA: 0xD00978 Offset: 0xD00978 VA: 0xD00978
	[TooltipAttribute] // RVA: 0xD00978 Offset: 0xD00978 VA: 0xD00978
	public FsmBool boolVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD009D8 Offset: 0xD009D8 VA: 0xD009D8
	[UIHintAttribute] // RVA: 0xD009D8 Offset: 0xD009D8 VA: 0xD009D8
	[TooltipAttribute] // RVA: 0xD009D8 Offset: 0xD009D8 VA: 0xD009D8
	public FsmString stringVariable; // 0x58
	[TooltipAttribute] // RVA: 0xD00A38 Offset: 0xD00A38 VA: 0xD00A38
	public FsmString falseString; // 0x60
	[TooltipAttribute] // RVA: 0xD00A70 Offset: 0xD00A70 VA: 0xD00A70
	public FsmString trueString; // 0x68
	[TooltipAttribute] // RVA: 0xD00AA8 Offset: 0xD00AA8 VA: 0xD00AA8
	public bool everyFrame; // 0x70

	// Methods

	// RVA: 0x23265B8 Offset: 0x23265B8 VA: 0x23265B8
	public void .ctor() { }

	// RVA: 0x23265C0 Offset: 0x23265C0 VA: 0x23265C0 Slot: 28
	public override void Reset() { }

	// RVA: 0x2326638 Offset: 0x2326638 VA: 0x2326638 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x23266F8 Offset: 0x23266F8 VA: 0x23266F8 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2326674 Offset: 0x2326674 VA: 0x2326674
	private void DoConvertBoolToString() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9C8A4 Offset: 0xC9C8A4 VA: 0xC9C8A4
[TooltipAttribute] // RVA: 0xC9C8A4 Offset: 0xC9C8A4 VA: 0xC9C8A4
public class ConvertFloatToInt : FsmStateAction // TypeDefIndex: 12369
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD00AE0 Offset: 0xD00AE0 VA: 0xD00AE0
	[UIHintAttribute] // RVA: 0xD00AE0 Offset: 0xD00AE0 VA: 0xD00AE0
	[TooltipAttribute] // RVA: 0xD00AE0 Offset: 0xD00AE0 VA: 0xD00AE0
	public FsmFloat floatVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD00B40 Offset: 0xD00B40 VA: 0xD00B40
	[UIHintAttribute] // RVA: 0xD00B40 Offset: 0xD00B40 VA: 0xD00B40
	[TooltipAttribute] // RVA: 0xD00B40 Offset: 0xD00B40 VA: 0xD00B40
	public FsmInt intVariable; // 0x58
	public ConvertFloatToInt.FloatRounding rounding; // 0x60
	public bool everyFrame; // 0x64

	// Methods

	// RVA: 0x2326840 Offset: 0x2326840 VA: 0x2326840
	public void .ctor() { }

	// RVA: 0x2326848 Offset: 0x2326848 VA: 0x2326848 Slot: 28
	public override void Reset() { }

	// RVA: 0x232685C Offset: 0x232685C VA: 0x232685C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2326A10 Offset: 0x2326A10 VA: 0x2326A10 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2326898 Offset: 0x2326898 VA: 0x2326898
	private void DoConvertFloatToInt() { }
}

// Namespace: 
public enum ConvertFloatToInt.FloatRounding // TypeDefIndex: 12370
{
	// Fields
	public int value__; // 0x0
	public const ConvertFloatToInt.FloatRounding RoundDown = 0;
	public const ConvertFloatToInt.FloatRounding RoundUp = 1;
	public const ConvertFloatToInt.FloatRounding Nearest = 2;
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9C8F4 Offset: 0xC9C8F4 VA: 0xC9C8F4
[TooltipAttribute] // RVA: 0xC9C8F4 Offset: 0xC9C8F4 VA: 0xC9C8F4
public class ConvertFloatToString : FsmStateAction // TypeDefIndex: 12371
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD00BA0 Offset: 0xD00BA0 VA: 0xD00BA0
	[UIHintAttribute] // RVA: 0xD00BA0 Offset: 0xD00BA0 VA: 0xD00BA0
	[TooltipAttribute] // RVA: 0xD00BA0 Offset: 0xD00BA0 VA: 0xD00BA0
	public FsmFloat floatVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD00C00 Offset: 0xD00C00 VA: 0xD00C00
	[UIHintAttribute] // RVA: 0xD00C00 Offset: 0xD00C00 VA: 0xD00C00
	[TooltipAttribute] // RVA: 0xD00C00 Offset: 0xD00C00 VA: 0xD00C00
	public FsmString stringVariable; // 0x58
	[TooltipAttribute] // RVA: 0xD00C60 Offset: 0xD00C60 VA: 0xD00C60
	public FsmString format; // 0x60
	[TooltipAttribute] // RVA: 0xD00C98 Offset: 0xD00C98 VA: 0xD00C98
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x2326A14 Offset: 0x2326A14 VA: 0x2326A14
	public void .ctor() { }

	// RVA: 0x2326A1C Offset: 0x2326A1C VA: 0x2326A1C Slot: 28
	public override void Reset() { }

	// RVA: 0x2326A2C Offset: 0x2326A2C VA: 0x2326A2C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2326BDC Offset: 0x2326BDC VA: 0x2326BDC Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2326A68 Offset: 0x2326A68 VA: 0x2326A68
	private void DoConvertFloatToString() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9C944 Offset: 0xC9C944 VA: 0xC9C944
[TooltipAttribute] // RVA: 0xC9C944 Offset: 0xC9C944 VA: 0xC9C944
public class ConvertIntToFloat : FsmStateAction // TypeDefIndex: 12372
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD00CD0 Offset: 0xD00CD0 VA: 0xD00CD0
	[UIHintAttribute] // RVA: 0xD00CD0 Offset: 0xD00CD0 VA: 0xD00CD0
	[TooltipAttribute] // RVA: 0xD00CD0 Offset: 0xD00CD0 VA: 0xD00CD0
	public FsmInt intVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD00D30 Offset: 0xD00D30 VA: 0xD00D30
	[UIHintAttribute] // RVA: 0xD00D30 Offset: 0xD00D30 VA: 0xD00D30
	[TooltipAttribute] // RVA: 0xD00D30 Offset: 0xD00D30 VA: 0xD00D30
	public FsmFloat floatVariable; // 0x58
	[TooltipAttribute] // RVA: 0xD00D90 Offset: 0xD00D90 VA: 0xD00D90
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x2326BE0 Offset: 0x2326BE0 VA: 0x2326BE0
	public void .ctor() { }

	// RVA: 0x2326BE8 Offset: 0x2326BE8 VA: 0x2326BE8 Slot: 28
	public override void Reset() { }

	// RVA: 0x2326BF4 Offset: 0x2326BF4 VA: 0x2326BF4 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2326C80 Offset: 0x2326C80 VA: 0x2326C80 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2326C30 Offset: 0x2326C30 VA: 0x2326C30
	private void DoConvertIntToFloat() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9C994 Offset: 0xC9C994 VA: 0xC9C994
[TooltipAttribute] // RVA: 0xC9C994 Offset: 0xC9C994 VA: 0xC9C994
public class ConvertIntToString : FsmStateAction // TypeDefIndex: 12373
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD00DC8 Offset: 0xD00DC8 VA: 0xD00DC8
	[UIHintAttribute] // RVA: 0xD00DC8 Offset: 0xD00DC8 VA: 0xD00DC8
	[TooltipAttribute] // RVA: 0xD00DC8 Offset: 0xD00DC8 VA: 0xD00DC8
	public FsmInt intVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD00E28 Offset: 0xD00E28 VA: 0xD00E28
	[UIHintAttribute] // RVA: 0xD00E28 Offset: 0xD00E28 VA: 0xD00E28
	[TooltipAttribute] // RVA: 0xD00E28 Offset: 0xD00E28 VA: 0xD00E28
	public FsmString stringVariable; // 0x58
	[TooltipAttribute] // RVA: 0xD00E88 Offset: 0xD00E88 VA: 0xD00E88
	public FsmString format; // 0x60
	[TooltipAttribute] // RVA: 0xD00EC0 Offset: 0xD00EC0 VA: 0xD00EC0
	public bool everyFrame; // 0x68

	// Methods

	// RVA: 0x2326C84 Offset: 0x2326C84 VA: 0x2326C84
	public void .ctor() { }

	// RVA: 0x2326C8C Offset: 0x2326C8C VA: 0x2326C8C Slot: 28
	public override void Reset() { }

	// RVA: 0x2326C9C Offset: 0x2326C9C VA: 0x2326C9C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2326E4C Offset: 0x2326E4C VA: 0x2326E4C Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2326CD8 Offset: 0x2326CD8 VA: 0x2326CD8
	private void DoConvertIntToString() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9C9E4 Offset: 0xC9C9E4 VA: 0xC9C9E4
[TooltipAttribute] // RVA: 0xC9C9E4 Offset: 0xC9C9E4 VA: 0xC9C9E4
public class ConvertMaterialToObject : FsmStateAction // TypeDefIndex: 12374
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD00EF8 Offset: 0xD00EF8 VA: 0xD00EF8
	[UIHintAttribute] // RVA: 0xD00EF8 Offset: 0xD00EF8 VA: 0xD00EF8
	[TooltipAttribute] // RVA: 0xD00EF8 Offset: 0xD00EF8 VA: 0xD00EF8
	public FsmMaterial materialVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD00F58 Offset: 0xD00F58 VA: 0xD00F58
	[UIHintAttribute] // RVA: 0xD00F58 Offset: 0xD00F58 VA: 0xD00F58
	[TooltipAttribute] // RVA: 0xD00F58 Offset: 0xD00F58 VA: 0xD00F58
	public FsmObject objectVariable; // 0x58
	[TooltipAttribute] // RVA: 0xD00FB8 Offset: 0xD00FB8 VA: 0xD00FB8
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x2326E50 Offset: 0x2326E50 VA: 0x2326E50
	public void .ctor() { }

	// RVA: 0x2326E58 Offset: 0x2326E58 VA: 0x2326E58 Slot: 28
	public override void Reset() { }

	// RVA: 0x2326E64 Offset: 0x2326E64 VA: 0x2326E64 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2326EF0 Offset: 0x2326EF0 VA: 0x2326EF0 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2326EA0 Offset: 0x2326EA0 VA: 0x2326EA0
	private void DoConvertMaterialToObject() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9CA34 Offset: 0xC9CA34 VA: 0xC9CA34
[TooltipAttribute] // RVA: 0xC9CA34 Offset: 0xC9CA34 VA: 0xC9CA34
public class ConvertStringToInt : FsmStateAction // TypeDefIndex: 12375
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD00FF0 Offset: 0xD00FF0 VA: 0xD00FF0
	[UIHintAttribute] // RVA: 0xD00FF0 Offset: 0xD00FF0 VA: 0xD00FF0
	[TooltipAttribute] // RVA: 0xD00FF0 Offset: 0xD00FF0 VA: 0xD00FF0
	public FsmString stringVariable; // 0x50
	[RequiredFieldAttribute] // RVA: 0xD01050 Offset: 0xD01050 VA: 0xD01050
	[UIHintAttribute] // RVA: 0xD01050 Offset: 0xD01050 VA: 0xD01050
	[TooltipAttribute] // RVA: 0xD01050 Offset: 0xD01050 VA: 0xD01050
	public FsmInt intVariable; // 0x58
	[TooltipAttribute] // RVA: 0xD010B0 Offset: 0xD010B0 VA: 0xD010B0
	public bool everyFrame; // 0x60

	// Methods

	// RVA: 0x23275D8 Offset: 0x23275D8 VA: 0x23275D8
	public void .ctor() { }

	// RVA: 0x23275E0 Offset: 0x23275E0 VA: 0x23275E0 Slot: 28
	public override void Reset() { }

	// RVA: 0x23275EC Offset: 0x23275EC VA: 0x23275EC Slot: 32
	public override void OnEnter() { }

	// RVA: 0x2327680 Offset: 0x2327680 VA: 0x2327680 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x2327628 Offset: 0x2327628 VA: 0x2327628
	private void DoConvertStringToInt() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9CA84 Offset: 0xC9CA84 VA: 0xC9CA84
[TooltipAttribute] // RVA: 0xC9CA84 Offset: 0xC9CA84 VA: 0xC9CA84
public class CreateEmptyObject : FsmStateAction // TypeDefIndex: 12376
{
	// Fields
	[TooltipAttribute] // RVA: 0xD010E8 Offset: 0xD010E8 VA: 0xD010E8
	public FsmGameObject gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xD01120 Offset: 0xD01120 VA: 0xD01120
	public FsmGameObject spawnPoint; // 0x58
	[TooltipAttribute] // RVA: 0xD01158 Offset: 0xD01158 VA: 0xD01158
	public FsmVector3 position; // 0x60
	[TooltipAttribute] // RVA: 0xD01190 Offset: 0xD01190 VA: 0xD01190
	public FsmVector3 rotation; // 0x68
	[UIHintAttribute] // RVA: 0xD011C8 Offset: 0xD011C8 VA: 0xD011C8
	[TooltipAttribute] // RVA: 0xD011C8 Offset: 0xD011C8 VA: 0xD011C8
	public FsmGameObject storeObject; // 0x70

	// Methods

	// RVA: 0x2327684 Offset: 0x2327684 VA: 0x2327684
	public void .ctor() { }

	// RVA: 0x232768C Offset: 0x232768C VA: 0x232768C Slot: 28
	public override void Reset() { }

	// RVA: 0x2327748 Offset: 0x2327748 VA: 0x2327748 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9CAD4 Offset: 0xC9CAD4 VA: 0xC9CAD4
[ActionTarget] // RVA: 0xC9CAD4 Offset: 0xC9CAD4 VA: 0xC9CAD4
[TooltipAttribute] // RVA: 0xC9CAD4 Offset: 0xC9CAD4 VA: 0xC9CAD4
public class CreateObject : FsmStateAction // TypeDefIndex: 12377
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD01218 Offset: 0xD01218 VA: 0xD01218
	[TooltipAttribute] // RVA: 0xD01218 Offset: 0xD01218 VA: 0xD01218
	public FsmGameObject gameObject; // 0x50
	[TooltipAttribute] // RVA: 0xD01264 Offset: 0xD01264 VA: 0xD01264
	public FsmGameObject spawnPoint; // 0x58
	[TooltipAttribute] // RVA: 0xD0129C Offset: 0xD0129C VA: 0xD0129C
	public FsmVector3 position; // 0x60
	[TooltipAttribute] // RVA: 0xD012D4 Offset: 0xD012D4 VA: 0xD012D4
	public FsmVector3 rotation; // 0x68
	[UIHintAttribute] // RVA: 0xD0130C Offset: 0xD0130C VA: 0xD0130C
	[TooltipAttribute] // RVA: 0xD0130C Offset: 0xD0130C VA: 0xD0130C
	public FsmGameObject storeObject; // 0x70

	// Methods

	// RVA: 0x2327BD0 Offset: 0x2327BD0 VA: 0x2327BD0
	public void .ctor() { }

	// RVA: 0x2327BD8 Offset: 0x2327BD8 VA: 0x2327BD8 Slot: 28
	public override void Reset() { }

	// RVA: 0x2327C94 Offset: 0x2327C94 VA: 0x2327C94 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9CB90 Offset: 0xC9CB90 VA: 0xC9CB90
[TooltipAttribute] // RVA: 0xC9CB90 Offset: 0xC9CB90 VA: 0xC9CB90
public class CutToCamera : FsmStateAction // TypeDefIndex: 12378
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xD0135C Offset: 0xD0135C VA: 0xD0135C
	[TooltipAttribute] // RVA: 0xD0135C Offset: 0xD0135C VA: 0xD0135C
	public Camera camera; // 0x50
	[TooltipAttribute] // RVA: 0xD013A8 Offset: 0xD013A8 VA: 0xD013A8
	public bool makeMainCamera; // 0x58
	[TooltipAttribute] // RVA: 0xD013E0 Offset: 0xD013E0 VA: 0xD013E0
	public bool cutBackOnExit; // 0x59
	private Camera oldCamera; // 0x60

	// Methods

	// RVA: 0x232D348 Offset: 0x232D348 VA: 0x232D348
	public void .ctor() { }

	// RVA: 0x232D350 Offset: 0x232D350 VA: 0x232D350 Slot: 28
	public override void Reset() { }

	// RVA: 0x232D360 Offset: 0x232D360 VA: 0x232D360 Slot: 32
	public override void OnEnter() { }

	// RVA: 0x232D53C Offset: 0x232D53C VA: 0x232D53C Slot: 37
	public override void OnExit() { }

	// RVA: 0x232D44C Offset: 0x232D44C VA: 0x232D44C
	private static void SwitchCamera(Camera camera1, Camera camera2) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9CBE0 Offset: 0xC9CBE0 VA: 0xC9CBE0
[TooltipAttribute] // RVA: 0xC9CBE0 Offset: 0xC9CBE0 VA: 0xC9CBE0
public class Assert : FsmStateAction, IEvaluatorContext // TypeDefIndex: 12379
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xD01418 Offset: 0xD01418 VA: 0xD01418
	[DebuggerBrowsableAttribute] // RVA: 0xD01418 Offset: 0xD01418 VA: 0xD01418
	private CompiledAst <Ast>k__BackingField; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xD01454 Offset: 0xD01454 VA: 0xD01454
	[DebuggerBrowsableAttribute] // RVA: 0xD01454 Offset: 0xD01454 VA: 0xD01454
	private string <LastErrorMessage>k__BackingField; // 0x58
	[UIHintAttribute] // RVA: 0xD01490 Offset: 0xD01490 VA: 0xD01490
	[TooltipAttribute] // RVA: 0xD01490 Offset: 0xD01490 VA: 0xD01490
	public FsmString expression; // 0x60
	[TooltipAttribute] // RVA: 0xD014E0 Offset: 0xD014E0 VA: 0xD014E0
	public Assert.AssertType assert; // 0x68
	[TooltipAttribute] // RVA: 0xD01518 Offset: 0xD01518 VA: 0xD01518
	public bool everyFrame; // 0x6C
	private string cachedExpression; // 0x70

	// Properties
	public CompiledAst Ast { get; set; }
	public string LastErrorMessage { get; set; }

	// Methods

	// RVA: 0x231BEDC Offset: 0x231BEDC VA: 0x231BEDC
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD44E04 Offset: 0xD44E04 VA: 0xD44E04
	// RVA: 0x231BEE4 Offset: 0x231BEE4 VA: 0x231BEE4
	public CompiledAst get_Ast() { }

	[CompilerGeneratedAttribute] // RVA: 0xD44E14 Offset: 0xD44E14 VA: 0xD44E14
	// RVA: 0x231BEEC Offset: 0x231BEEC VA: 0x231BEEC
	public void set_Ast(CompiledAst value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD44E24 Offset: 0xD44E24 VA: 0xD44E24
	// RVA: 0x231BEF4 Offset: 0x231BEF4 VA: 0x231BEF4
	public string get_LastErrorMessage() { }

	[CompilerGeneratedAttribute] // RVA: 0xD44E34 Offset: 0xD44E34 VA: 0xD44E34
	// RVA: 0x231BEFC Offset: 0x231BEFC VA: 0x231BEFC
	public void set_LastErrorMessage(string value) { }

	// RVA: 0x231BF04 Offset: 0x231BF04 VA: 0x231BF04 Slot: 62
	private FsmVar PlayMaker.ConditionalExpression.IEvaluatorContext.GetVariable(string name) { }
}

// Namespace: 
public enum Assert.AssertType // TypeDefIndex: 12380
{
	// Fields
	public int value__; // 0x0
	public const Assert.AssertType IsTrue = 0;
	public const Assert.AssertType IsFalse = 1;
}

// Namespace: HutongGames.PlayMaker.Actions
public abstract class BaseLogAction : FsmStateAction // TypeDefIndex: 12381
{
	// Fields
	public bool sendToUnityLog; // 0x49

	// Methods

	// RVA: 0x231D4D0 Offset: 0x231D4D0 VA: 0x231D4D0
	protected void .ctor() { }

	// RVA: 0x231D4D8 Offset: 0x231D4D8 VA: 0x231D4D8 Slot: 28
	public override void Reset() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9CC30 Offset: 0xC9CC30 VA: 0xC9CC30
[TooltipAttribute] // RVA: 0xC9CC30 Offset: 0xC9CC30 VA: 0xC9CC30
public class DebugEnum : BaseLogAction // TypeDefIndex: 12382
{
	// Fields
	[TooltipAttribute] // RVA: 0xD01550 Offset: 0xD01550 VA: 0xD01550
	public LogLevel logLevel; // 0x4C
	[UIHintAttribute] // RVA: 0xD01588 Offset: 0xD01588 VA: 0xD01588
	[TooltipAttribute] // RVA: 0xD01588 Offset: 0xD01588 VA: 0xD01588
	public FsmEnum enumVariable; // 0x50

	// Methods

	// RVA: 0x18634CC Offset: 0x18634CC VA: 0x18634CC
	public void .ctor() { }

	// RVA: 0x18634D4 Offset: 0x18634D4 VA: 0x18634D4 Slot: 28
	public override void Reset() { }

	// RVA: 0x18634E4 Offset: 0x18634E4 VA: 0x18634E4 Slot: 32
	public override void OnEnter() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC9CC80 Offset: 0xC9CC80 VA: 0xC9CC80
[TooltipAttribute] // RVA: 0xC9CC80 Offset: 0xC9CC80 VA: 0xC9CC80
public class DebugBool : BaseLogAction // TypeDefIndex: 12383
{
	// Fields
	[TooltipAttribute] // RVA: 0xD015D8 Offset: 0xD015D8 VA: 0xD015D8
	public LogLevel logLevel; // 0x4C
	[UIHintAttribute] // RVA: 0xD01610 Offset: 0xD01610 VA: 0xD01610
	[TooltipAttribute] // RVA: 0xD01610 Offset: 0xD01610 VA: 0xD01610
	public FsmBool boolVariable; // 0x50

	// Methods

	// RVA: 0x232D558 Offset: 0x232D558 VA: 0x232D558
