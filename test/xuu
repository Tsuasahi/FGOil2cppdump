	[CompilerGeneratedAttribute] // RVA: 0xCEA994 Offset: 0xCEA994 VA: 0xCEA994
	private static Action <>f__am$cacheA; // 0x110
	[CompilerGeneratedAttribute] // RVA: 0xCEA9A4 Offset: 0xCEA9A4 VA: 0xCEA9A4
	private static LinkConfirmDialog.ClickDelegate <>f__am$cacheB; // 0x118
	[CompilerGeneratedAttribute] // RVA: 0xCEA9B4 Offset: 0xCEA9B4 VA: 0xCEA9B4
	private static Action <>f__am$cacheC; // 0x120
	[CompilerGeneratedAttribute] // RVA: 0xCEA9C4 Offset: 0xCEA9C4 VA: 0xCEA9C4
	private static Action <>f__am$cacheD; // 0x128
	[CompilerGeneratedAttribute] // RVA: 0xCEA9D4 Offset: 0xCEA9D4 VA: 0xCEA9D4
	private static Action <>f__am$cacheE; // 0x130
	[CompilerGeneratedAttribute] // RVA: 0xCEA9E4 Offset: 0xCEA9E4 VA: 0xCEA9E4
	private static Action <>f__am$cacheF; // 0x138
	[CompilerGeneratedAttribute] // RVA: 0xCEA9F4 Offset: 0xCEA9F4 VA: 0xCEA9F4
	private static Action <>f__am$cache10; // 0x140
	[CompilerGeneratedAttribute] // RVA: 0xCEAA04 Offset: 0xCEAA04 VA: 0xCEAA04
	private static Action <>f__am$cache11; // 0x148
	[CompilerGeneratedAttribute] // RVA: 0xCEAA14 Offset: 0xCEAA14 VA: 0xCEAA14
	private static Action <>f__am$cache12; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xCEAA24 Offset: 0xCEAA24 VA: 0xCEAA24
	private static Action <>f__am$cache13; // 0x158
	[CompilerGeneratedAttribute] // RVA: 0xCEAA34 Offset: 0xCEAA34 VA: 0xCEAA34
	private static Action <>f__am$cache14; // 0x160
	[CompilerGeneratedAttribute] // RVA: 0xCEAA44 Offset: 0xCEAA44 VA: 0xCEAA44
	private static Func<QuestMessageEntity, int> <>f__am$cache15; // 0x168

	// Methods

	// RVA: 0x1449788 Offset: 0x1449788 VA: 0x1449788
	public void .ctor() { }

	// RVA: 0x14498E4 Offset: 0x14498E4 VA: 0x14498E4
	public static void DeleteContinueData() { }

	// RVA: 0x1449950 Offset: 0x1449950 VA: 0x1449950
	public bool ContainsMapQuest(int[][] targets) { }

	// RVA: 0x1449C24 Offset: 0x1449C24 VA: 0x1449C24
	public bool isShowingFolder() { }

	// RVA: 0x1449C34 Offset: 0x1449C34 VA: 0x1449C34
	public string GetShowingFolderBGM() { }

	// RVA: 0x1449D30 Offset: 0x1449D30 VA: 0x1449D30
	public void SetQuestClickAct(Action act) { }

	// RVA: 0x1449D38 Offset: 0x1449D38 VA: 0x1449D38
	public QuestBoardListViewObject GetFocusQuest() { }

	// RVA: 0x143F590 Offset: 0x143F590 VA: 0x143F590
	public QuestBoardListViewManager GetQuestBoardListViewManager() { }

	// RVA: 0x1449DE8 Offset: 0x1449DE8 VA: 0x1449DE8
	private void AddGotEventSvtId(int svtId) { }

	// RVA: 0x1449E84 Offset: 0x1449E84 VA: 0x1449E84
	public int[] PopEventSvtGets() { }

	// RVA: 0x1449F10 Offset: 0x1449F10 VA: 0x1449F10
	public void cbfTitleInfoBtnBack_Click(bool menuFrameOut = True) { }

	// RVA: 0x144AF04 Offset: 0x144AF04 VA: 0x144AF04
	public void cbfTitleInfoBtnBackStory_Click() { }

	[DebuggerHiddenAttribute] // RVA: 0xD41234 Offset: 0xD41234 VA: 0xD41234
	// RVA: 0x144B3AC Offset: 0x144B3AC VA: 0x144B3AC
	private IEnumerator WaitMapStateForBackStory() { }

	// RVA: 0x144B41C Offset: 0x144B41C VA: 0x144B41C
	public void RequestChangeTerminalListBG(int warId) { }

	// RVA: 0x144B4E4 Offset: 0x144B4E4 VA: 0x144B4E4
	public void ResetTopListIfWarEventEnds() { }

	// RVA: 0x144BCF8 Offset: 0x144BCF8 VA: 0x144BCF8
	public void cbfInit_List() { }

	// RVA: 0x144D164 Offset: 0x144D164 VA: 0x144D164
	public void UpdateList() { }

	// RVA: 0x144D188 Offset: 0x144D188 VA: 0x144D188
	public void UpdateAreaQuestInfoList() { }

	// RVA: 0x144D18C Offset: 0x144D18C VA: 0x144D18C
	private void LoadEventAsset(Action onCompleteLoadAsset) { }

	// RVA: 0x144D394 Offset: 0x144D394 VA: 0x144D394
	private EventDetailEntity checkAssetLoad() { }

	// RVA: 0x144D6DC Offset: 0x144D6DC VA: 0x144D6DC
	public void mcbfCheckSceneStatus() { }

	// RVA: 0x144D890 Offset: 0x144D890 VA: 0x144D890
	private void SetAreaBoard_WarInf(MapControl.AreaBoardInfo areaBoardInfo, MapControl.WarInfo warInfo, bool isDispNext = False, string specialNoticeText = "") { }

	// RVA: 0x144DAA8 Offset: 0x144DAA8 VA: 0x144DAA8
	private QuestBoardListViewItemDraw.enStatus BoardStatusfromWarInfo(MapControl.WarInfo warInfo) { }

	// RVA: 0x144BEBC Offset: 0x144BEBC VA: 0x144BEBC
	private void InitStoryQuestInfoList() { }

	// RVA: 0x144DB7C Offset: 0x144DB7C VA: 0x144DB7C
	public void ResetLists() { }

	// RVA: 0x144B714 Offset: 0x144B714 VA: 0x144B714
	private void InitAreaQuestInfoList() { }

	// RVA: 0x144C298 Offset: 0x144C298 VA: 0x144C298
	private void InitCaldeaFolderInfoList() { }

	// RVA: 0x144E220 Offset: 0x144E220 VA: 0x144E220
	private WarEntity[] GetSubFolders(int parentId, WarMaster warMst) { }

	// RVA: 0x144E39C Offset: 0x144E39C VA: 0x144E39C
	private List<MapControl.QuestInfo> MakeBoardInfo(WarEntity[] folders) { }

	// RVA: 0x144FBD4 Offset: 0x144FBD4 VA: 0x144FBD4
	private void AddQuestToCaldeaFolderInfo(int warId, MapControl.QuestInfo questInfo) { }

	// RVA: 0x144AE08 Offset: 0x144AE08 VA: 0x144AE08
	private ScrTerminalListTop.CaldeaFolderInfo GetCaldeaFolderInfoByWarID(int warId) { }

	// RVA: 0x144FD04 Offset: 0x144FD04 VA: 0x144FD04
	private MapControl.AreaBoardInfo GetAreaBoardInfoFromFolder(int warId) { }

	// RVA: 0x144FE5C Offset: 0x144FE5C VA: 0x144FE5C
	private MapControl.AreaBoardInfo FindAreaBoardInfoByWarId(List<MapControl.QuestInfo> questInfoList, int warId) { }

	// RVA: 0x144FFF8 Offset: 0x144FFF8 VA: 0x144FFF8
	public void cbfCapter_Create() { }

	// RVA: 0x144DF1C Offset: 0x144DF1C VA: 0x144DF1C
	private void InitMapQuestList(int warId, int spotId) { }

	// RVA: 0x14502D0 Offset: 0x14502D0 VA: 0x14502D0
	private void CheckOnSpotTutorial(int spotId) { }

	// RVA: 0x1450370 Offset: 0x1450370 VA: 0x1450370
	public void cbfCapter_Select(int iPrevList) { }

	// RVA: 0x1450454 Offset: 0x1450454 VA: 0x1450454
	public void mcbfAreaInit() { }

	// RVA: 0x1450640 Offset: 0x1450640 VA: 0x1450640
	private void StartWindowMessage() { }

	// RVA: 0x14508AC Offset: 0x14508AC VA: 0x14508AC
	private void DoOccurrenceChain() { }

	// RVA: 0x1450DB4 Offset: 0x1450DB4 VA: 0x1450DB4
	private ActionChain CreateAfterQuestClearCheckChain() { }

	// RVA: 0x1450F3C Offset: 0x1450F3C VA: 0x1450F3C
	private ActionChain CreateAfterWarClearOccurrenceChain() { }

	// RVA: 0x1451050 Offset: 0x1451050 VA: 0x1451050
	private ActionChain CreateHeroineOccurrenceChain() { }

	// RVA: 0x1451388 Offset: 0x1451388 VA: 0x1451388
	private ActionChain CreateAfterQuestClearOccurrenceChain() { }

	// RVA: 0x1451A20 Offset: 0x1451A20 VA: 0x1451A20
	private void StartWarClearAction(Action finishCallback) { }

	// RVA: 0x1451F00 Offset: 0x1451F00 VA: 0x1451F00
	public void CheckLastPlayBgm() { }

	// RVA: 0x14520F8 Offset: 0x14520F8 VA: 0x14520F8
	private void StartOrderEffect(Action finishCallback) { }

	// RVA: 0x1452254 Offset: 0x1452254 VA: 0x1452254
	private void StartPrologueMovie(Action finishCallback) { }

	// RVA: 0x145236C Offset: 0x145236C VA: 0x145236C
	private void StartPrologueMovieAfterQuestClear(Action finishCallback) { }

	// RVA: 0x145225C Offset: 0x145225C VA: 0x145225C
	private void PrologueMovieChain(Action finishCallback, bool afterQuestClear) { }

	// RVA: 0x145278C Offset: 0x145278C VA: 0x145278C
	private void SavePlayedOpeningMovie(string movieFileName) { }

	// RVA: 0x1452374 Offset: 0x1452374 VA: 0x1452374
	private bool CheckPrologueMovie(int warId, bool afterQuestClear) { }

	// RVA: 0x14525C8 Offset: 0x14525C8 VA: 0x14525C8
	public void OpenigMovieAfter() { }

	// RVA: 0x1452B28 Offset: 0x1452B28 VA: 0x1452B28
	private void StartHeroineLimitAction(Action finishCallback) { }

	// RVA: 0x1452C94 Offset: 0x1452C94 VA: 0x1452C94
	private void StartHeroineCostumeAction(Action finishCallback) { }

	// RVA: 0x1452E20 Offset: 0x1452E20 VA: 0x1452E20
	private CostumeReleaseAnnounce GetCostumeInfo() { }

	// RVA: 0x1452EA0 Offset: 0x1452EA0 VA: 0x1452EA0
	private ServantCostumeEntity GetServantCostumeEntity(int svtId, int costumeId) { }

	// RVA: 0x1452FC4 Offset: 0x1452FC4 VA: 0x1452FC4
	private void StartHeroineTreasureAction(Action finishCallback) { }

	// RVA: 0x1453204 Offset: 0x1453204 VA: 0x1453204
	private bool StartHeroineTreasureAction_sub(int oldTreasureDvcId, int nowTreasureDvcId, int oldTreasureDvcLv, int nowTreasureDvcLv, bool isUseOldTreasureDvc, bool isUseNowTreasureDvc, Action endAction) { }

	// RVA: 0x145344C Offset: 0x145344C VA: 0x145344C
	private void StartHeroineFriendshipAction(Action finishCallback) { }

	// RVA: 0x14535AC Offset: 0x14535AC VA: 0x14535AC
	private void StartHeroineExceedCountUpAction(Action finishCallback) { }

	// RVA: 0x14536D4 Offset: 0x14536D4 VA: 0x14536D4
	private void StartHeroineFriendShipExceedAction(Action finishCallback) { }

	// RVA: 0x1453810 Offset: 0x1453810 VA: 0x1453810
	private void StartQuestClearItemAction(Action finishCallback) { }

	// RVA: 0x1454718 Offset: 0x1454718 VA: 0x1454718
	private void LoadItemGetEffects(QuestRewardInfo[] rewardInfoList, int index, Action afterLoad) { }

	// RVA: 0x1454B1C Offset: 0x1454B1C VA: 0x1454B1C
	private int GetItemGetEffectId(QuestRewardInfo rewardInfo) { }

	// RVA: 0x1454CA0 Offset: 0x1454CA0 VA: 0x1454CA0
	private string GetAssetPathOfItemGetAnimation(int effectId, bool isWarBoardClear = False) { }

	// RVA: 0x1454DA0 Offset: 0x1454DA0 VA: 0x1454DA0
	private string GetRootObjectNameOfItemGetAnimation(int effectId, bool isWarBoardClear = False) { }

	// RVA: 0x1454518 Offset: 0x1454518 VA: 0x1454518
	private void IsQuestRewardHasServantOrCommandCodeOrItem(QuestRewardInfo[] rewardInfoList, out bool hasSvtOrCommandCode, out bool hasItem) { }

	// RVA: 0x1454EA0 Offset: 0x1454EA0 VA: 0x1454EA0
	private void StartQuestClearItemAction_sub(int index, QuestRewardInfo[] rewardInfoList, bool isFromTreasureBox, Action subEndAction) { }

	// RVA: 0x14545E8 Offset: 0x14545E8 VA: 0x14545E8
	private void LoadTreasureGetEffect(Action endAct) { }

	// RVA: 0x1455704 Offset: 0x1455704 VA: 0x1455704
	private void SetupTreasureGetEffect(int itemIconId) { }

	// RVA: 0x1455888 Offset: 0x1455888 VA: 0x1455888
	private void StartQuestClearItemAction_PlayItemOrSvt(bool isFromTreasureBox, Action<bool> playEndAction, float fadeInTime = 0) { }

	// RVA: 0x1455A50 Offset: 0x1455A50 VA: 0x1455A50
	private void EndQuestClearItem(Action finishCallback) { }

	// RVA: 0x1454304 Offset: 0x1454304 VA: 0x1454304
	private void StartHarvestReward(QuestRewardInfo[] questRewardInfo, Action callback) { }

	// RVA: 0x1455DC8 Offset: 0x1455DC8 VA: 0x1455DC8
	private void StartHarvestReward_sub(QuestRewardInfo[] questRewardInfo, Action endAction) { }

	// RVA: 0x14560AC Offset: 0x14560AC VA: 0x14560AC
	private void EndHarvestReward(Action finishCallback) { }

	// RVA: 0x14563BC Offset: 0x14563BC VA: 0x14563BC
	private void StartEventReward(Action finishCallback) { }

	// RVA: 0x1456760 Offset: 0x1456760 VA: 0x1456760
	private void StartFriendPointBoostItemReward(Action callback) { }

	// RVA: 0x1456BA8 Offset: 0x1456BA8 VA: 0x1456BA8
	private void StartFriendPointBoostItemReward_sub(int index, Action endAction) { }

	// RVA: 0x1456F84 Offset: 0x1456F84 VA: 0x1456F84
	private void EndFriendPointBoostItemReward(Action finishCallback) { }

	// RVA: 0x1456964 Offset: 0x1456964 VA: 0x1456964
	private void StartBoardGameTokenReward(Action callback) { }

	// RVA: 0x145728C Offset: 0x145728C VA: 0x145728C
	private void StartBoardGameTokenReward_sub(Action endAction) { }

	// RVA: 0x145758C Offset: 0x145758C VA: 0x145758C
	private void EndBoardGameTokenReward(Action finishCallback) { }

	// RVA: 0x14578E4 Offset: 0x14578E4 VA: 0x14578E4
	private void StartQuestClearCostumeOpen(Action finishCallback) { }

	// RVA: 0x1457D34 Offset: 0x1457D34 VA: 0x1457D34
	private void StartQuestClearCostumeOpen_sub(string[] names, int index, Action endAction) { }

	// RVA: 0x1457FE8 Offset: 0x1457FE8 VA: 0x1457FE8
	private void StartQuestClearNameReveal(Action finishCallback) { }

	// RVA: 0x1458154 Offset: 0x1458154 VA: 0x1458154
	private void StartQuestClearNameReveal_sub(int count, ServantChangeEntity[][] datas, Action endAction) { }

	// RVA: 0x1458400 Offset: 0x1458400 VA: 0x1458400
	private void StartSecretTreasureDeviceAction(Action finishCallback) { }

	// RVA: 0x14585D0 Offset: 0x14585D0 VA: 0x14585D0
	private void CheckQuestClearSkillAction(Action finishCallback) { }

	// RVA: 0x1458C2C Offset: 0x1458C2C VA: 0x1458C2C
	private void StartQuestClearSkillAction(Action finishCallback) { }

	// RVA: 0x1458F14 Offset: 0x1458F14 VA: 0x1458F14
	private bool StartQuestClearSkillAction_usd(int index, List<ServantEntity> svtList, Action endAction) { }

	// RVA: 0x1459A0C Offset: 0x1459A0C VA: 0x1459A0C
	private bool StartQuestClearSkillAction_slot(UserServantCollectionEntity userSvtCollectionEnt, ServantEntity svtEnt, int index, SkillInfo[] oldSkillInfoList, SkillInfo[] nowSkillInfoList, Action endAction, bool isEnableEndAction) { }

	// RVA: 0x145A578 Offset: 0x145A578 VA: 0x145A578
	private bool IsExistsNextSkill(int svtId, SkillInfo skillInfo) { }

	// RVA: 0x145A804 Offset: 0x145A804 VA: 0x145A804
	private void CheckQuestClearTreasureAction(Action finishCallback) { }

	// RVA: 0x145ACF4 Offset: 0x145ACF4 VA: 0x145ACF4
	private void StartQuestClearTreasureAction(Action finishCallback) { }

	// RVA: 0x145ABDC Offset: 0x145ABDC VA: 0x145ABDC
	private bool IsUseTreasureDevice(ServantTreasureDvcEntity std) { }

	// RVA: 0x145AFF4 Offset: 0x145AFF4 VA: 0x145AFF4
	private bool StartQuestClearTreasureAction_usd(int index, List<UserServantCollectionEntity> userSvtCollectionList, Action endAction) { }

	// RVA: 0x145B338 Offset: 0x145B338 VA: 0x145B338
	private bool StartQuestClearTreasureAction_slot(UserServantCollectionEntity userSvtCollectionEnt, int oldTreasureDvcId, int nowTreasureDvcId, int oldTreasureDvcLv, int nowTreasureDvcLv, bool isUseOldTreasureDvc, bool isUseNowTreasureDvc, Action endAction, bool isEnableEndAction) { }

	// RVA: 0x145B4D4 Offset: 0x145B4D4 VA: 0x145B4D4
	private void StartEventConquestReward(Action finishCallback) { }

	// RVA: 0x145B608 Offset: 0x145B608 VA: 0x145B608
	private void StartMovieQuestDeleteDialog(Action finishCallback) { }

	// RVA: 0x145BA38 Offset: 0x145BA38 VA: 0x145BA38
	private void StartLimitCountEffectAction(Action finishCallback) { }

	// RVA: 0x145BB30 Offset: 0x145BB30 VA: 0x145BB30
	private void StartLimitCountEffectAction_sub(int index, LimitImageAnnounce[] announces, Action endAction) { }

	// RVA: 0x145BE98 Offset: 0x145BE98 VA: 0x145BE98
	private void StartQuestPhaseClearRewardAction(Action finishCallback) { }

	// RVA: 0x145C230 Offset: 0x145C230 VA: 0x145C230
	private void StartQuestClearChangeAction(Action finishCallback) { }

	// RVA: 0x145DF24 Offset: 0x145DF24 VA: 0x145DF24
	private bool IsHavingServant(int svtId, out string svtName) { }

	// RVA: 0x145E908 Offset: 0x145E908 VA: 0x145E908
	private void StartQuestClearBeforeTerminalMessage(Action finishCallback) { }

	// RVA: 0x145EB3C Offset: 0x145EB3C VA: 0x145EB3C
	private void BeforeTerminalMessageDialog(Action finishCallback, int[] mMessageIdList, int messageIdCount) { }

	// RVA: 0x145DD14 Offset: 0x145DD14 VA: 0x145DD14
	private bool IsPowerUpQuest(ScrTerminalListTop.CaldeaFolderInfo powerUpQuestFolder, int questId) { }

	// RVA: 0x145EE40 Offset: 0x145EE40 VA: 0x145EE40
	public bool IsDispEventUIForSpot(int spotId) { }

	// RVA: 0x145EE78 Offset: 0x145EE78 VA: 0x145EE78
	private void StartScene() { }

	// RVA: 0x1450B8C Offset: 0x1450B8C VA: 0x1450B8C
	private void StartSceneFadeIn() { }

	// RVA: 0x145F504 Offset: 0x145F504 VA: 0x145F504
	public void SetMaterialAddSvts(int svtId, string message) { }

	// RVA: 0x145DE88 Offset: 0x145DE88 VA: 0x145DE88
	private void AddMessageToTerminalDialogue(ScrTerminalListTop.AdditionalDlgMessage message) { }

	// RVA: 0x145E74C Offset: 0x145E74C VA: 0x145E74C
	private void SaveTerminalDialogueMessages() { }

	// RVA: 0x145E218 Offset: 0x145E218 VA: 0x145E218
	private void LoadTerminalDialogueMessages() { }

	// RVA: 0x145F58C Offset: 0x145F58C VA: 0x145F58C
	public bool IsDuplicateTerminalDialogueMessages(string message) { }

	// RVA: 0x145F7A8 Offset: 0x145F7A8 VA: 0x145F7A8
	public void ShowTerminalMessagesDialogue(Action callback) { }

	// RVA: 0x145E52C Offset: 0x145E52C VA: 0x145E52C
	private void OpenTerminalMessages(int index, Action callback) { }

	// RVA: 0x145EFC8 Offset: 0x145EFC8 VA: 0x145EFC8
	private void ResetTerminalParams() { }

	// RVA: 0x145EF08 Offset: 0x145EF08 VA: 0x145EF08
	private void StartSceneFadeIn_End() { }

	// RVA: 0x145F82C Offset: 0x145F82C VA: 0x145F82C
	public void StartShowWarClearReward(Action endAct) { }

	// RVA: 0x145F8C8 Offset: 0x145F8C8 VA: 0x145F8C8
	public void StartShowWarClearRewardChain(int index, Action endAction) { }

	// RVA: 0x145FE18 Offset: 0x145FE18 VA: 0x145FE18
	private void CloseCallbackWarClearRewardChain(int index, Action endAction) { }

	// RVA: 0x145F098 Offset: 0x145F098 VA: 0x145F098
	private void SetFocusCaldeaGateQuest() { }

	// RVA: 0x145FF00 Offset: 0x145FF00 VA: 0x145FF00
	public void mcbfAreaWait() { }

	// RVA: 0x145C09C Offset: 0x145C09C VA: 0x145C09C
	private bool IsViewNotice() { }

	// RVA: 0x1460670 Offset: 0x1460670 VA: 0x1460670
	private bool IsResume(out bool isReturn, MapControl.AreaBoardInfo areaBoardInfo) { }

	// RVA: 0x1460DF8 Offset: 0x1460DF8 VA: 0x1460DF8
	private void mcbfAreaWaitNext() { }

	// RVA: 0x14628A8 Offset: 0x14628A8 VA: 0x14628A8
	private void StartFavoriteTutorial() { }

	// RVA: 0x1462DE0 Offset: 0x1462DE0 VA: 0x1462DE0
	private void SlideIn_TerminalServant() { }

	// RVA: 0x1462A68 Offset: 0x1462A68 VA: 0x1462A68
	private void StartQuestBoardListIn_Area() { }

	// RVA: 0x1460BE8 Offset: 0x1460BE8 VA: 0x1460BE8
	public int CheckTerminalTopEffect() { }

	// RVA: 0x1462ECC Offset: 0x1462ECC VA: 0x1462ECC
	public void StartTermninalTopEffect() { }

	// RVA: 0x14630FC Offset: 0x14630FC VA: 0x14630FC
	private void StartTerminalTopEffectBlackMark() { }

	[DebuggerHiddenAttribute] // RVA: 0xD41244 Offset: 0xD41244 VA: 0xD41244
	// RVA: 0x1463EF8 Offset: 0x1463EF8 VA: 0x1463EF8
	private IEnumerator CallTerminalTopEffectFadeOutBgm(float waitTime, float fadeOutTime, Action endAct) { }

	[DebuggerHiddenAttribute] // RVA: 0xD41254 Offset: 0xD41254 VA: 0xD41254
	// RVA: 0x1463DD8 Offset: 0x1463DD8 VA: 0x1463DD8
	private IEnumerator CallTerminalTopEffectMoveBoard(bool isClose, bool isForce, float waitTime, float moveTime, Easing.TYPE easeType, Action endAct) { }

	// RVA: 0x1463638 Offset: 0x1463638 VA: 0x1463638
	private void StartTerminalTopEffectDisappear() { }

	[DebuggerHiddenAttribute] // RVA: 0xD41264 Offset: 0xD41264 VA: 0xD41264
	// RVA: 0x1463F9C Offset: 0x1463F9C VA: 0x1463F9C
	private IEnumerator CallTerminalTopEffectFadeBgm(float waitTime, float fadeTime, float volume, Action endAct) { }

	// RVA: 0x1464048 Offset: 0x1464048 VA: 0x1464048
	private void CheckLimitCountUnSealQuestOpen(bool isQuestClear, Action nextAction) { }

	// RVA: 0x1464C7C Offset: 0x1464C7C VA: 0x1464C7C
	private void CheckUpdateProfileSaintGraphInfo(Action finishCallback) { }

	// RVA: 0x1464DA4 Offset: 0x1464DA4 VA: 0x1464DA4
	private void CheckUpdateProfileSaintGraphInfo_sub(int index, UpdateProfileDialogInfoEntity[] entities, Action endAction) { }

	// RVA: 0x14650F4 Offset: 0x14650F4 VA: 0x14650F4
	public void ExecLoginQuest() { }

	// RVA: 0x14651B4 Offset: 0x14651B4 VA: 0x14651B4
	public LoginQuestEntity GetCurrentLoginEntity() { }

	// RVA: 0x14654C0 Offset: 0x14654C0 VA: 0x14654C0
	public void StartLoginQuestRequest(int warId, int questId) { }

	// RVA: 0x1465668 Offset: 0x1465668 VA: 0x1465668
	public void EndLoginQuestRequest(string result) { }

	// RVA: 0x14659BC Offset: 0x14659BC VA: 0x14659BC
	public void mcbfCaldeaGateInit() { }

	// RVA: 0x1465A90 Offset: 0x1465A90 VA: 0x1465A90
	private void CaldeaGateInitAfter() { }

	// RVA: 0x1466310 Offset: 0x1466310 VA: 0x1466310
	public void mcbfCaldeaGateWait() { }

	// RVA: 0x14669D8 Offset: 0x14669D8 VA: 0x14669D8
	public void CheckCaldeaFolderTutorials(int warId) { }

	// RVA: 0x1466AC4 Offset: 0x1466AC4 VA: 0x1466AC4
	public void OnClickHelp() { }

	// RVA: 0x1466B6C Offset: 0x1466B6C VA: 0x1466B6C
	public void mcbfSpotSelectWait() { }

	// RVA: 0x1466B70 Offset: 0x1466B70 VA: 0x1466B70
	public void mcbfCapterInit() { }

	// RVA: 0x14671C0 Offset: 0x14671C0 VA: 0x14671C0
	public void mcbfCapterWait() { }

	// RVA: 0x144AD38 Offset: 0x144AD38 VA: 0x144AD38
	public PlayMakerFSM mfGetMyFsmP() { }

	// RVA: 0x144B2DC Offset: 0x144B2DC VA: 0x144B2DC
	private void mfCallFsmEvent(string eventName) { }

	// RVA: 0x146725C Offset: 0x146725C VA: 0x146725C
	private void mfSetFsmValueInt(string keyName, int value) { }

	// RVA: 0x1467364 Offset: 0x1467364 VA: 0x1467364
	private int mfGetFsmValueInt(string keyName) { }

	// RVA: 0x1452A20 Offset: 0x1452A20 VA: 0x1452A20
	private void mfSetFsmValueStr(string keyName, string value) { }

	// RVA: 0x1467468 Offset: 0x1467468 VA: 0x1467468
	public void SetLastSelectedQuestInfo(int warId, int questId) { }

	// RVA: 0x14610A0 Offset: 0x14610A0 VA: 0x14610A0
	public bool Click_Area(MapControl.AreaBoardInfo questBoardInfo, int listIndex = -1, bool isResume = False) { }

	// RVA: 0x1467F10 Offset: 0x1467F10 VA: 0x1467F10
	public void Click_WarBoard(MapControl.QuestInfo questInfo, int listIndex) { }

	// RVA: 0x146761C Offset: 0x146761C VA: 0x146761C
	private bool IsPlayEventWar(int warId, EventEntity eventEnt) { }

	// RVA: 0x1469874 Offset: 0x1469874 VA: 0x1469874
	private string GetEventWarTimeStr(DateTime dateTime) { }

	// RVA: 0x1467508 Offset: 0x1467508 VA: 0x1467508
	private void OpenNotificationDialog_QuestNone(string messageKey, Action endAction) { }

	// RVA: 0x14665EC Offset: 0x14665EC VA: 0x14665EC
	public void Click_Shortcut(int warId, int questId) { }

	// RVA: 0x1469B10 Offset: 0x1469B10 VA: 0x1469B10
	public void Click_Quest(MapControl.QuestInfo questInfo, int listIndex) { }

	// RVA: 0x1467FE0 Offset: 0x1467FE0 VA: 0x1467FE0
	public void CheckQuestPlayable(MapControl.QuestInfo questInfo) { }

	// RVA: 0x1469CB4 Offset: 0x1469CB4 VA: 0x1469CB4
	private bool IsQuestValid(MapControl.QuestInfo questInfo) { }

	// RVA: 0x1469EE8 Offset: 0x1469EE8 VA: 0x1469EE8
	private void OpenQuestTimeOverNoticeDialog(Action callback) { }

	// RVA: 0x146A49C Offset: 0x146A49C VA: 0x146A49C
	public void RefreshTerminalScene() { }

	[DebuggerHiddenAttribute] // RVA: 0xD41274 Offset: 0xD41274 VA: 0xD41274
	// RVA: 0x146A3F4 Offset: 0x146A3F4 VA: 0x146A3F4
	private IEnumerator OpenConfirmDialogList(List<QuestMessageEntity> questMessages, Action allDecideCallback) { }

	// RVA: 0x1469FFC Offset: 0x1469FFC VA: 0x1469FFC
	private void CheckQuestStartDialog(MapControl.QuestInfo questInfo) { }

	// RVA: 0x146A534 Offset: 0x146A534 VA: 0x146A534
	private string GetQuestConfirmDialogString(MapControl.QuestInfo questInfo) { }

	// RVA: 0x146AAA0 Offset: 0x146AAA0 VA: 0x146AAA0
	private void EndRecoverUserGameRecover(RecoverDlgComponent.Result result, MapControl.QuestInfo questInfo) { }

	// RVA: 0x146AB5C Offset: 0x146AB5C VA: 0x146AB5C
	private void EndPurchaseSvtFrame(ServantFramePurchaseMenu.Result result) { }

	// RVA: 0x146ABBC Offset: 0x146ABBC VA: 0x146ABBC
	private void EndPurchaseSvtEquipFrame(ServantEquipFramePurchaseMenu.Result result) { }

	// RVA: 0x146AC1C Offset: 0x146AC1C VA: 0x146AC1C
	public void cbfEvent_Map() { }

	// RVA: 0x146AEBC Offset: 0x146AEBC VA: 0x146AEBC
	public void cbfEvent_CaldeaGate() { }

	// RVA: 0x146AC20 Offset: 0x146AC20 VA: 0x146AC20
	public void SelectedQuest() { }

	[DebuggerHiddenAttribute] // RVA: 0xD41284 Offset: 0xD41284 VA: 0xD41284
	// RVA: 0x146AEC0 Offset: 0x146AEC0 VA: 0x146AEC0
	private IEnumerator downloadMovieQuest(string folder, Action callback) { }

	// RVA: 0x146AF6C Offset: 0x146AF6C VA: 0x146AF6C
	public void StartQuest(int phaseCnt, QuestPhaseEntity questPhaseEntity) { }

	// RVA: 0x146BDAC Offset: 0x146BDAC VA: 0x146BDAC
	private void StartQuestBeforeAction(int questId, int phaseCnt, Action callback) { }

	// RVA: 0x144ADD0 Offset: 0x144ADD0 VA: 0x144ADD0
	private void IsAllTouchEnable(bool isEnable) { }

	// RVA: 0x146BFC4 Offset: 0x146BFC4 VA: 0x146BFC4
	private void RequestBattleSecnario(int questId, int phaseCnt) { }

	// RVA: 0x146C094 Offset: 0x146C094 VA: 0x146C094
	private void EndRequestBattleScenario(string jsonstr) { }

	// RVA: 0x146C410 Offset: 0x146C410 VA: 0x146C410
	public void ResumeQuestScriptWithMap(int phaseCnt, QuestPhaseEntity questPhaseEntity) { }

	// RVA: 0x146CAA0 Offset: 0x146CAA0 VA: 0x146CAA0
	public void StartWindowMessage(int questId, int questPhase, QuestMessageEntity.QuestMessageDisplayType displayType, Action endAction, bool isNoBattle = False) { }

	// RVA: 0x146CE34 Offset: 0x146CE34 VA: 0x146CE34
	private void StartWindowMessageScript(string questMessage, Action endAction) { }

	// RVA: 0x146B724 Offset: 0x146B724 VA: 0x146B724
	public void StartNotMeetsCondition(int warId, int questId, int phase) { }

	// RVA: 0x146CF98 Offset: 0x146CF98 VA: 0x146CF98
	public void StartNoneBattleQuest(int warId, int questId, int phase) { }

	// RVA: 0x146D15C Offset: 0x146D15C VA: 0x146D15C
	public void StartQuestBeforeFollower() { }

	// RVA: 0x146589C Offset: 0x146589C VA: 0x146589C
	public void StartNoneBattleQuestOnLogin(int warId, int questId, int phase) { }

	// RVA: 0x146B8D8 Offset: 0x146B8D8 VA: 0x146B8D8
	private void SetBattleSetupInfo(int warId, int questId, int phase, bool isScriptBeforePartySelect, bool isScriptBeforeWarBoard, int selectedBranch = 0) { }

	// RVA: 0x146BF50 Offset: 0x146BF50 VA: 0x146BF50
	public void StartFollower() { }

	// RVA: 0x146BBA0 Offset: 0x146BBA0 VA: 0x146BBA0
	public void StartWarBoard(int warId, int questId, int phase) { }

	// RVA: 0x146D260 Offset: 0x146D260 VA: 0x146D260
	private void RequestWarBoardStart(int questId, int phaseCnt) { }

	// RVA: 0x146D358 Offset: 0x146D358 VA: 0x146D358
	private void EndRequestWarBoardStart(string jsonstr) { }

	// RVA: 0x146D658 Offset: 0x146D658 VA: 0x146D658
	private void RequestCheckDateVersion() { }

	// RVA: 0x146D70C Offset: 0x146D70C VA: 0x146D70C
	private void EndRequestCheckDateVersion(string jsonstr) { }

	// RVA: 0x146D830 Offset: 0x146D830 VA: 0x146D830
	public void ShowingInfoAllOff() { }

	// RVA: 0x146D860 Offset: 0x146D860 VA: 0x146D860
	public void InfoSettedUp(QuestBoardListViewItem item) { }

	// RVA: 0x1442534 Offset: 0x1442534 VA: 0x1442534
	public bool IsListSliding() { }

	// RVA: 0x146D9CC Offset: 0x146D9CC VA: 0x146D9CC
	private void CheckFolderBGChangeEffect() { }

	// RVA: 0x146DAD4 Offset: 0x146DAD4 VA: 0x146DAD4
	public void ReleaseAsset() { }

	// RVA: 0x146DB04 Offset: 0x146DB04 VA: 0x146DB04
	public void SetTopLastIndexNextBoard() { }

	// RVA: 0x1463004 Offset: 0x1463004 VA: 0x1463004
	private int GetTopLastIndexNextBoard() { }

	// RVA: 0x1463CE8 Offset: 0x1463CE8 VA: 0x1463CE8
	private int GetTopLastIndexForWarId(int warId) { }

	// RVA: 0x146DC08 Offset: 0x146DC08 VA: 0x146DC08
	public int GetPrioredParentId() { }

	// RVA: 0x146DC50 Offset: 0x146DC50 VA: 0x146DC50
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41294 Offset: 0xD41294 VA: 0xD41294
	// RVA: 0x146DE90 Offset: 0x146DE90 VA: 0x146DE90
	private static void <cbfTitleInfoBtnBack_Click>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD412A4 Offset: 0xD412A4 VA: 0xD412A4
	// RVA: 0x146DE94 Offset: 0x146DE94 VA: 0x146DE94
	private static void <cbfTitleInfoBtnBack_Click>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xD412B4 Offset: 0xD412B4 VA: 0xD412B4
	// RVA: 0x146DE98 Offset: 0x146DE98 VA: 0x146DE98
	private static void <cbfTitleInfoBtnBackStory_Click>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xD412C4 Offset: 0xD412C4 VA: 0xD412C4
	// RVA: 0x146DE9C Offset: 0x146DE9C VA: 0x146DE9C
	private void <cbfInit_List>m__3() { }

	[CompilerGeneratedAttribute] // RVA: 0xD412D4 Offset: 0xD412D4 VA: 0xD412D4
	// RVA: 0x146DF10 Offset: 0x146DF10 VA: 0x146DF10
	private static bool <InitCaldeaFolderInfoList>m__4(ScrTerminalListTop.CaldeaFolderInfo x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD412E4 Offset: 0xD412E4 VA: 0xD412E4
	// RVA: 0x146DF3C Offset: 0x146DF3C VA: 0x146DF3C
	private void <mcbfAreaInit>m__5() { }

	[CompilerGeneratedAttribute] // RVA: 0xD412F4 Offset: 0xD412F4 VA: 0xD412F4
	// RVA: 0x146DF40 Offset: 0x146DF40 VA: 0x146DF40
	private void <mcbfAreaInit>m__6() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41304 Offset: 0xD41304 VA: 0xD41304
	// RVA: 0x146DF44 Offset: 0x146DF44 VA: 0x146DF44
	private void <DoOccurrenceChain>m__7() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41314 Offset: 0xD41314 VA: 0xD41314
	// RVA: 0x146DF4C Offset: 0x146DF4C VA: 0x146DF4C
	private static void <StartWarClearAction>m__8(Action action) { }

	[CompilerGeneratedAttribute] // RVA: 0xD41324 Offset: 0xD41324 VA: 0xD41324
	// RVA: 0x146E04C Offset: 0x146E04C VA: 0x146E04C
	private static void <StartWarClearAction>m__9(Action action) { }

	[CompilerGeneratedAttribute] // RVA: 0xD41334 Offset: 0xD41334 VA: 0xD41334
	// RVA: 0x146E14C Offset: 0x146E14C VA: 0x146E14C
	private static void <OpenigMovieAfter>m__A() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41344 Offset: 0xD41344 VA: 0xD41344
	// RVA: 0x146E274 Offset: 0x146E274 VA: 0x146E274
	private static void <StartQuestPhaseClearRewardAction>m__B() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41354 Offset: 0xD41354 VA: 0xD41354
	// RVA: 0x146E2DC Offset: 0x146E2DC VA: 0x146E2DC
	private void <StartSceneFadeIn>m__C() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41364 Offset: 0xD41364 VA: 0xD41364
	// RVA: 0x146E300 Offset: 0x146E300 VA: 0x146E300
	private void <mcbfAreaWait>m__D() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41374 Offset: 0xD41374 VA: 0xD41374
	// RVA: 0x146E304 Offset: 0x146E304 VA: 0x146E304
	private static void <mcbfAreaWaitNext>m__E() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41384 Offset: 0xD41384 VA: 0xD41384
	// RVA: 0x146E36C Offset: 0x146E36C VA: 0x146E36C
	private void <mcbfAreaWaitNext>m__F() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41394 Offset: 0xD41394 VA: 0xD41394
	// RVA: 0x146E400 Offset: 0x146E400 VA: 0x146E400
	private void <StartFavoriteTutorial>m__10() { }

	[CompilerGeneratedAttribute] // RVA: 0xD413A4 Offset: 0xD413A4 VA: 0xD413A4
	// RVA: 0x146E4B8 Offset: 0x146E4B8 VA: 0x146E4B8
	private void <StartQuestBoardListIn_Area>m__11() { }

	[CompilerGeneratedAttribute] // RVA: 0xD413B4 Offset: 0xD413B4 VA: 0xD413B4
	// RVA: 0x146E540 Offset: 0x146E540 VA: 0x146E540
	private void <StartQuestBoardListIn_Area>m__12() { }

	[CompilerGeneratedAttribute] // RVA: 0xD413C4 Offset: 0xD413C4 VA: 0xD413C4
	// RVA: 0x146E610 Offset: 0x146E610 VA: 0x146E610
	private static void <StartTerminalTopEffectBlackMark>m__13() { }

	[CompilerGeneratedAttribute] // RVA: 0xD413D4 Offset: 0xD413D4 VA: 0xD413D4
	// RVA: 0x146E620 Offset: 0x146E620 VA: 0x146E620
	private void <StartTerminalTopEffectBlackMark>m__14() { }

	[CompilerGeneratedAttribute] // RVA: 0xD413E4 Offset: 0xD413E4 VA: 0xD413E4
	// RVA: 0x146E728 Offset: 0x146E728 VA: 0x146E728
	private void <StartTerminalTopEffectBlackMark>m__15() { }

	[CompilerGeneratedAttribute] // RVA: 0xD413F4 Offset: 0xD413F4 VA: 0xD413F4
	// RVA: 0x146E7C0 Offset: 0x146E7C0 VA: 0x146E7C0
	private void <StartTerminalTopEffectBlackMark>m__16() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41404 Offset: 0xD41404 VA: 0xD41404
	// RVA: 0x146E8BC Offset: 0x146E8BC VA: 0x146E8BC
	private static void <StartTerminalTopEffectDisappear>m__17() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41414 Offset: 0xD41414 VA: 0xD41414
	// RVA: 0x146E8CC Offset: 0x146E8CC VA: 0x146E8CC
	private void <mcbfCaldeaGateInit>m__18(bool isPlay) { }

	[CompilerGeneratedAttribute] // RVA: 0xD41424 Offset: 0xD41424 VA: 0xD41424
	// RVA: 0x146E924 Offset: 0x146E924 VA: 0x146E924
	private void <mcbfCaldeaGateWait>m__19() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41434 Offset: 0xD41434 VA: 0xD41434
	// RVA: 0x146EA24 Offset: 0x146EA24 VA: 0x146EA24
	private void <mcbfCapterInit>m__1A() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41444 Offset: 0xD41444 VA: 0xD41444
	// RVA: 0x146EA74 Offset: 0x146EA74 VA: 0x146EA74
	private static void <Click_Area>m__1B(bool isDecide) { }

	[CompilerGeneratedAttribute] // RVA: 0xD41454 Offset: 0xD41454 VA: 0xD41454
	// RVA: 0x146EAEC Offset: 0x146EAEC VA: 0x146EAEC
	private static void <Click_Area>m__1C() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41464 Offset: 0xD41464 VA: 0xD41464
	// RVA: 0x146EAF0 Offset: 0x146EAF0 VA: 0x146EAF0
	private static void <Click_Area>m__1D() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41474 Offset: 0xD41474 VA: 0xD41474
	// RVA: 0x146EAF4 Offset: 0x146EAF4 VA: 0x146EAF4
	private static void <Click_Area>m__1E() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41484 Offset: 0xD41484 VA: 0xD41484
	// RVA: 0x146EAF8 Offset: 0x146EAF8 VA: 0x146EAF8
	private static void <Click_Area>m__1F() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41494 Offset: 0xD41494 VA: 0xD41494
	// RVA: 0x146EAFC Offset: 0x146EAFC VA: 0x146EAFC
	private static void <IsPlayEventWar>m__20() { }

	[CompilerGeneratedAttribute] // RVA: 0xD414A4 Offset: 0xD414A4 VA: 0xD414A4
	// RVA: 0x146EB00 Offset: 0x146EB00 VA: 0x146EB00
	private static void <IsPlayEventWar>m__21() { }

	[CompilerGeneratedAttribute] // RVA: 0xD414B4 Offset: 0xD414B4 VA: 0xD414B4
	// RVA: 0x146EB04 Offset: 0x146EB04 VA: 0x146EB04
	private static void <CheckQuestPlayable>m__22() { }

	[CompilerGeneratedAttribute] // RVA: 0xD414C4 Offset: 0xD414C4 VA: 0xD414C4
	// RVA: 0x146EB08 Offset: 0x146EB08 VA: 0x146EB08
	private static void <CheckQuestPlayable>m__23() { }

	[CompilerGeneratedAttribute] // RVA: 0xD414D4 Offset: 0xD414D4 VA: 0xD414D4
	// RVA: 0x146EB0C Offset: 0x146EB0C VA: 0x146EB0C
	private static void <CheckQuestPlayable>m__24() { }

	[CompilerGeneratedAttribute] // RVA: 0xD414E4 Offset: 0xD414E4 VA: 0xD414E4
	// RVA: 0x146EB10 Offset: 0x146EB10 VA: 0x146EB10
	private static int <CheckQuestPlayable>m__25(QuestMessageEntity msg) { }

	[CompilerGeneratedAttribute] // RVA: 0xD414F4 Offset: 0xD414F4 VA: 0xD414F4
	// RVA: 0x146EB38 Offset: 0x146EB38 VA: 0x146EB38
	private void <cbfInit_List>m__26() { }

	[CompilerGeneratedAttribute] // RVA: 0xD41504 Offset: 0xD41504 VA: 0xD41504
	// RVA: 0x146EB88 Offset: 0x146EB88 VA: 0x146EB88
	private void <StartFavoriteTutorial>m__27(string result) { }

	[CompilerGeneratedAttribute] // RVA: 0xD41514 Offset: 0xD41514 VA: 0xD41514
	// RVA: 0x146EB8C Offset: 0x146EB8C VA: 0x146EB8C
	private void <StartQuestBoardListIn_Area>m__28() { }
}

// Namespace: 
public enum ScrTerminalListTop.enPrevList // TypeDefIndex: 11230
{
	// Fields
	public int value__; // 0x0
	public const ScrTerminalListTop.enPrevList TOPMENU = 0;
	public const ScrTerminalListTop.enPrevList HEROBALLAD = 1;
	public const ScrTerminalListTop.enPrevList STORY = 2;
}

// Namespace: 
private class ScrTerminalListTop.CaldeaFolderInfo // TypeDefIndex: 11231
{
	// Fields
	public int warId; // 0x10
	public int mapId; // 0x14
	public int parentId; // 0x18
	public int badgeCount; // 0x1C
	public bool isNew; // 0x20
	public List<MapControl.QuestInfo> questInfoList; // 0x28

	// Methods

	// RVA: 0x155581C Offset: 0x155581C VA: 0x155581C
	public void .ctor(int warId, int mapId, int parentId) { }

	// RVA: 0x15558B4 Offset: 0x15558B4 VA: 0x15558B4
	public void AddQuestInfo(MapControl.QuestInfo questInfo) { }
}

// Namespace: 
private class ScrTerminalListTop.AdditionalDlgMessage // TypeDefIndex: 11232
{
	// Fields
	private static readonly float[] STORY_OPEN_DIALOG_MSG_LABEL_OFFSET; // 0x0
	private static readonly int STORY_OPEN_DIALOG_MSG_LABEL_SCROLL_OFFSET_NUM; // 0x8
	private static readonly int DIALOG_DEPTH; // 0xC
	public int MessageType; // 0x10
	public int TargetId; // 0x14
	public string Message; // 0x18
	public int MessageCnt; // 0x20
	public int[] shopId; // 0x28
	public string detail; // 0x30
	private CostumeOpenConfirmDialog costumeOpenConfirmDialog; // 0x38
	private ScrollConfirmDialog questOpenConfirmDialog; // 0x40

	// Methods

	// RVA: 0x15540C4 Offset: 0x15540C4 VA: 0x15540C4
	public void .ctor() { }

	// RVA: 0x1552494 Offset: 0x1552494 VA: 0x1552494
	public void .ctor(ScrTerminalListTop.AdditionalDlgMessage.TYPE type, int target, string msg) { }

	// RVA: 0x15540EC Offset: 0x15540EC VA: 0x15540EC
	public void .ctor(ScrTerminalListTop.AdditionalDlgMessage.TYPE type, int target, string msg, int msgCnt) { }

	// RVA: 0x155413C Offset: 0x155413C VA: 0x155413C
	public void .ctor(CostumeOpenConfirmDialog dialogInst) { }

	// RVA: 0x1554170 Offset: 0x1554170 VA: 0x1554170
	public void .ctor(ScrollConfirmDialog dialogInst, int target, string msg, int msgCnt) { }

	// RVA: 0x15541C8 Offset: 0x15541C8 VA: 0x15541C8
	public void Open(Action closeCallback) { }

	// RVA: 0x1554AAC Offset: 0x1554AAC VA: 0x1554AAC
	private static void .cctor() { }
}

// Namespace: 
public enum ScrTerminalListTop.AdditionalDlgMessage.TYPE // TypeDefIndex: 11233
{
	// Fields
	public int value__; // 0x0
	public const ScrTerminalListTop.AdditionalDlgMessage.TYPE NONE = 0;
	public const ScrTerminalListTop.AdditionalDlgMessage.TYPE QUEST = 1;
	public const ScrTerminalListTop.AdditionalDlgMessage.TYPE SERVANT_MATERIAL = 2;
	public const ScrTerminalListTop.AdditionalDlgMessage.TYPE SERVANT_COSTUME = 3;
	public const ScrTerminalListTop.AdditionalDlgMessage.TYPE QUEST_STORY = 4;
	public const ScrTerminalListTop.AdditionalDlgMessage.TYPE SERVANT_MATERIAL_SG = 5;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1E70 Offset: 0xCB1E70 VA: 0xCB1E70
private sealed class ScrTerminalListTop.AdditionalDlgMessage.<Open>c__AnonStorey0 // TypeDefIndex: 11234
{
	// Fields
	internal Action closeCallback; // 0x10
	internal ScrTerminalListTop.AdditionalDlgMessage $this; // 0x18

	// Methods

	// RVA: 0x1554AA4 Offset: 0x1554AA4 VA: 0x1554AA4
	public void .ctor() { }

	// RVA: 0x1554B44 Offset: 0x1554B44 VA: 0x1554B44
	internal void <>m__0(bool isDecide) { }

	// RVA: 0x1554BE4 Offset: 0x1554BE4 VA: 0x1554BE4
	internal void <>m__1(bool isDecide) { }

	// RVA: 0x1554CD8 Offset: 0x1554CD8 VA: 0x1554CD8
	internal void <>m__2(bool isDecide) { }

	// RVA: 0x1554F5C Offset: 0x1554F5C VA: 0x1554F5C
	internal void <>m__3(bool isDecide) { }

	// RVA: 0x1555200 Offset: 0x1555200 VA: 0x1555200
	internal void <>m__4() { }

	// RVA: 0x15552B8 Offset: 0x15552B8 VA: 0x15552B8
	internal void <>m__5() { }

	// RVA: 0x1555398 Offset: 0x1555398 VA: 0x1555398
	internal void <>m__6(bool isDcd) { }

	// RVA: 0x1555478 Offset: 0x1555478 VA: 0x1555478
	internal void <>m__7(bool isDcd) { }

	// RVA: 0x1555558 Offset: 0x1555558 VA: 0x1555558
	internal void <>m__8() { }

	// RVA: 0x15555E0 Offset: 0x15555E0 VA: 0x15555E0
	internal void <>m__9() { }
}

// Namespace: 
private sealed class ScrTerminalListTop.AdditionalDlgMessage.<Open>c__AnonStorey0.<Open>c__AnonStorey1 // TypeDefIndex: 11235
{
	// Fields
	internal bool isDecide; // 0x10
	internal ScrTerminalListTop.AdditionalDlgMessage.<Open>c__AnonStorey0 <>f__ref$0; // 0x18

	// Methods

	// RVA: 0x1554CD0 Offset: 0x1554CD0 VA: 0x1554CD0
	public void .ctor() { }

	// RVA: 0x1555668 Offset: 0x1555668 VA: 0x1555668
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1E80 Offset: 0xCB1E80 VA: 0xCB1E80
private sealed class ScrTerminalListTop.<cbfTitleInfoBtnBack_Click>c__AnonStorey7 // TypeDefIndex: 11236
{
	// Fields
	internal Action changeActionToAreaWait; // 0x10
	internal ScrTerminalListTop $this; // 0x18

	// Methods

	// RVA: 0x1553770 Offset: 0x1553770 VA: 0x1553770
	public void .ctor() { }

	// RVA: 0x1553778 Offset: 0x1553778 VA: 0x1553778
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1E90 Offset: 0xCB1E90 VA: 0xCB1E90
private sealed class ScrTerminalListTop.<cbfTitleInfoBtnBack_Click>c__AnonStorey6 // TypeDefIndex: 11237
{
	// Fields
	internal QuestBoardListViewManager.InitMode mode; // 0x10
	internal ScrTerminalListTop.<cbfTitleInfoBtnBack_Click>c__AnonStorey7 <>f__ref$7; // 0x18

	// Methods

	// RVA: 0x155342C Offset: 0x155342C VA: 0x155342C
	public void .ctor() { }

	// RVA: 0x1553434 Offset: 0x1553434 VA: 0x1553434
	internal void <>m__0() { }
