	private void SetSkillIconInfo(SvtUseSkillData skillData) { }

	// RVA: 0x107C054 Offset: 0x107C054 VA: 0x107C054
	public void SetBaseSvtCardImg(UserServantEntity userSvtEnt) { }

	// RVA: 0x107C204 Offset: 0x107C204 VA: 0x107C204
	public void OnClickInfo(bool isdecide, int idx) { }

	// RVA: 0x107BE5C Offset: 0x107BE5C VA: 0x107BE5C
	private void SetNeedItemInfo(int idx) { }

	// RVA: 0x107C210 Offset: 0x107C210 VA: 0x107C210
	private void SetSvtSkillCombineData(int idx) { }

	// RVA: 0x107CEB4 Offset: 0x107CEB4 VA: 0x107CEB4
	private bool SetNeedItemList(int[] needItemIds, int[] needItemNums) { }

	// RVA: 0x107D054 Offset: 0x107D054 VA: 0x107D054
	private void SetSkillLevelUpData(int idx, int currentSkillId, int currentSkillLv, int currentSkillNum, string skillName, int[] combineItemIds, string skillDetail = "") { }

	// RVA: 0x107D190 Offset: 0x107D190 VA: 0x107D190
	private void SetSkillOpenNeedData(int[] needItemIds, int[] needItemNums) { }

	// RVA: 0x107D3CC Offset: 0x107D3CC VA: 0x107D3CC
	private void SetSkillNeedQpData(int qp) { }

	// RVA: 0x107D420 Offset: 0x107D420 VA: 0x107D420
	public SetLevelUpData GetTargetData() { }

	// RVA: 0x107D428 Offset: 0x107D428 VA: 0x107D428
	public bool CheckIsMaxLvSkills(UserServantEntity resData) { }

	// RVA: 0x107B918 Offset: 0x107B918 VA: 0x107B918
	private void SetExeBtnState() { }

	// RVA: 0x107CC78 Offset: 0x107CC78 VA: 0x107CC78
	private void SetSkillCombineStatus(int currentSkillLv, int maxLv) { }

	// RVA: 0x107D5F4 Offset: 0x107D5F4 VA: 0x107D5F4
	public void OnClickExeCombine() { }

	// RVA: 0x107CC98 Offset: 0x107CC98 VA: 0x107CC98
	public void SetStateInfoMsg(CombineRootComponent.StateType state) { }

	// RVA: 0x107D720 Offset: 0x107D720 VA: 0x107D720
	public void PlayUnlockEffect(int idx, Action callback) { }
}

// Namespace: 
private enum AppendSkillCombineControl.STATUS // TypeDefIndex: 9467
{
	// Fields
	public int value__; // 0x0
	public const AppendSkillCombineControl.STATUS NONE = 0;
	public const AppendSkillCombineControl.STATUS LOCK = 1;
	public const AppendSkillCombineControl.STATUS NORMAL = 2;
	public const AppendSkillCombineControl.STATUS MAX = 3;
}

// Namespace: 
public class CheckCombineEnalbleControl : MonoBehaviour // TypeDefIndex: 9468
{
	// Fields
	private ServantMaster servantMaster; // 0x18
	private UserServantMaster userServantMaster; // 0x20
	private UserServantStorageMaster userServantStorageMaster; // 0x28
	private UserServantCollectionMaster userServantCollectionMaster; // 0x30
	private CombineLimitMaster combineLimitMaster; // 0x38
	private UserItemMaster userItemMaster; // 0x40
	private SkillMaster skillMaster; // 0x48
	private CombineSkillMaster combineSkillMaster; // 0x50
	private TreasureDvcMaster treasureDvcMaster; // 0x58
	private TreasureDvcLvMaster treasureDvcLvMaster; // 0x60
	private ServantCostumeMaster servantCostumeMaster; // 0x68
	private ServantCostumeReleaseMaster cosReleaseMaster; // 0x70
	private FriendshipMaster friendshipMaster; // 0x78
	private CombineEnableData combineEnalbeInfo; // 0x80
	private int haveQpVal; // 0x88
	private const int tdMaxLv = 5;
	private const int tdUpMaxQp = 1200000;
	private List<int> costumeSvtIdList; // 0x90
	private List<int> friendshipExceedSvtIdList; // 0x98
	private Dictionary<int, List<int>> cachedUserServantNpLvDict; // 0xA0

	// Methods

	// RVA: 0x1A4F82C Offset: 0x1A4F82C VA: 0x1A4F82C
	public void .ctor() { }

	// RVA: 0x1A4F89C Offset: 0x1A4F89C VA: 0x1A4F89C
	public void SetCombineEnableInfo() { }

	// RVA: 0x1A4FC30 Offset: 0x1A4FC30 VA: 0x1A4FC30
	private void SetMasters() { }

	// RVA: 0x1A4FEF0 Offset: 0x1A4FEF0 VA: 0x1A4FEF0
	private bool GetIsLimitUpEnable(UserServantEntity usrData, ServantEntity servantEntity) { }

	// RVA: 0x1A50234 Offset: 0x1A50234 VA: 0x1A50234
	private bool GetIsSkillUpEnable(UserServantEntity usrData, ServantEntity servantEntity) { }

	// RVA: 0x1A50620 Offset: 0x1A50620 VA: 0x1A50620
	private bool GetIsNpUpEnable(UserServantEntity usrData) { }

	// RVA: 0x1A507FC Offset: 0x1A507FC VA: 0x1A507FC
	private bool GetIsLvExceedEnable(UserServantEntity usrData) { }

	// RVA: 0x1A50BCC Offset: 0x1A50BCC VA: 0x1A50BCC
	private bool GetIsCombineCostumeEnable(UserServantEntity userSvtEntity) { }

	// RVA: 0x1A51044 Offset: 0x1A51044 VA: 0x1A51044
	public bool GetIsFriendshipExceedEnable(UserServantEntity userServantEntity) { }

	// RVA: 0x1A515DC Offset: 0x1A515DC VA: 0x1A515DC
	public CombineEnableData getCombineEnableNumInfo() { }
}

// Namespace: 
public class CombineBannerComponent : MonoBehaviour // TypeDefIndex: 9469
{
	// Fields
	public UISprite bannerSprite; // 0x18
	public UIButton bannerBtn; // 0x20
	private EventEntity eventEntity; // 0x28

	// Methods

	// RVA: 0x130A640 Offset: 0x130A640 VA: 0x130A640
	public void .ctor() { }

	// RVA: 0x130A648 Offset: 0x130A648 VA: 0x130A648
	public void setBannerInfo(EventEntity eventData) { }

	// RVA: 0x130A6CC Offset: 0x130A6CC VA: 0x130A6CC
	public void onOpenWebView() { }
}

// Namespace: 
public class CombineEffectComponent : MonoBehaviour // TypeDefIndex: 9470
{
	// Fields
	private readonly int[] cardTextureSize; // 0x18
	private readonly string[] startAniName; // 0x20
	private readonly string[] itemAniName; // 0x28
	private PlayMakerFSM fsm; // 0x30
	private List<string> releaseAssetPath; // 0x38
	private GameObject bgParentObject; // 0x40
	private CombineEffectComponent.Kind kind; // 0x48
	private UserServantEntity baseSvtEntity; // 0x50
	private int baseSvtId; // 0x58
	private int baseSvtlimitCnt; // 0x5C
	private List<UserServantEntity> materialList; // 0x60
	private List<int> itemList; // 0x68
	private List<ItemEntity> itemEntityList; // 0x70
	private GameObject effect; // 0x78
	private int materialCnt; // 0x80
	private int cntIndex; // 0x84
	private int itemMaterialCnt; // 0x88
	private int itemCntIdex; // 0x8C
	protected int baseClassCardId; // 0x90
	protected int feedClassCardId; // 0x94
	private List<string> feedNameList; // 0x98
	private List<string> feedItemNameList; // 0xA0
	private Transform itemNode; // 0xA8
	private Transform itemBackNode; // 0xB0
	private int cardType; // 0xB8

	// Methods

	// RVA: 0x13116E0 Offset: 0x13116E0 VA: 0x13116E0
	public void .ctor() { }

	// RVA: 0x1312054 Offset: 0x1312054 VA: 0x1312054
	private void Start() { }

	// RVA: 0x1312058 Offset: 0x1312058 VA: 0x1312058
	public void SetServantCombineInfo(UserServantEntity baseSvtData, List<UserServantEntity> list, CombineEffectComponent.Kind combineKind) { }

	// RVA: 0x1312114 Offset: 0x1312114 VA: 0x1312114
	public void SetSkillCombineInfo(UserServantEntity baseSvtData, List<ItemEntity> list) { }

	// RVA: 0x13121F4 Offset: 0x13121F4 VA: 0x13121F4
	public void SetSkillCombineInfo(UserServantEntity baseSvtData, List<int> list) { }

	// RVA: 0x13122B0 Offset: 0x13122B0 VA: 0x13122B0
	public void SetDvcCombineInfo(UserServantEntity baseSvtData, List<int> list) { }

	// RVA: 0x131236C Offset: 0x131236C VA: 0x131236C
	public void InitCombineEffect() { }

	// RVA: 0x1312560 Offset: 0x1312560 VA: 0x1312560
	private void EndLoadBg(AssetData data) { }

	// RVA: 0x1312690 Offset: 0x1312690 VA: 0x1312690
	public void fadeIn() { }

	// RVA: 0x131276C Offset: 0x131276C VA: 0x131276C
	private void SetCardParam() { }

	// RVA: 0x13143E0 Offset: 0x13143E0 VA: 0x13143E0
	private void setReverseCallback(AssetData data) { }

	// RVA: 0x1313DB8 Offset: 0x1313DB8 VA: 0x1313DB8
	private void setServantFeed() { }

	// RVA: 0x1314670 Offset: 0x1314670 VA: 0x1314670
	private void SetFeedCallback(AssetData data) { }

	// RVA: 0x1314088 Offset: 0x1314088 VA: 0x1314088
	private void setItemFeed() { }

	// RVA: 0x1313C24 Offset: 0x1313C24 VA: 0x1313C24
	private void getDispInfo(out Rarity.TYPE rarity, out int classCardId, int svtId, int svtLimitCnt) { }

	// RVA: 0x13144FC Offset: 0x13144FC VA: 0x13144FC
	private void getCardBackImg(out Rarity.TYPE rarity, out int backCardImgId, int svtId, int svtLimitCnt) { }

	// RVA: 0x1314898 Offset: 0x1314898 VA: 0x1314898
	public void endAnimation() { }

	// RVA: 0x1314978 Offset: 0x1314978 VA: 0x1314978
	public void ReleasePrevAsset() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEC80 Offset: 0xCCEC80 VA: 0xCCEC80
	// RVA: 0x1314B38 Offset: 0x1314B38 VA: 0x1314B38
	private void <fadeIn>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCEC90 Offset: 0xCCEC90 VA: 0xCCEC90
	// RVA: 0x1314B9C Offset: 0x1314B9C VA: 0x1314B9C
	private void <endAnimation>m__1() { }
}

// Namespace: 
public enum CombineEffectComponent.Kind // TypeDefIndex: 9471
{
	// Fields
	public int value__; // 0x0
	public const CombineEffectComponent.Kind SERVANT = 0;
	public const CombineEffectComponent.Kind SKILL = 1;
	public const CombineEffectComponent.Kind DVC = 2;
	public const CombineEffectComponent.Kind SVTEQ = 3;
}

// Namespace: 
private enum CombineEffectComponent.CardColor // TypeDefIndex: 9472
{
	// Fields
	public int value__; // 0x0
	public const CombineEffectComponent.CardColor BRONZE = 0;
	public const CombineEffectComponent.CardColor SILVER = 1;
	public const CombineEffectComponent.CardColor GOLD = 2;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC44674 Offset: 0xC44674 VA: 0xC44674
private sealed class CombineEffectComponent.<EndLoadBg>c__AnonStorey0 // TypeDefIndex: 9473
{
	// Fields
	internal AssetData data; // 0x10
	internal CombineEffectComponent $this; // 0x18

	// Methods

	// RVA: 0x1312688 Offset: 0x1312688 VA: 0x1312688
	public void .ctor() { }

	// RVA: 0x1314C6C Offset: 0x1314C6C VA: 0x1314C6C
	internal void <>m__0() { }
}

// Namespace: 
public class CombineInitData : MonoBehaviour // TypeDefIndex: 9474
{
	// Fields
	private EventEntity[] combineEventList; // 0x18
	private List<int> eventIdList; // 0x20

	// Methods

	// RVA: 0x131C99C Offset: 0x131C99C VA: 0x131C99C
	public void .ctor() { }

	// RVA: 0x131CA0C Offset: 0x131CA0C VA: 0x131CA0C
	public void getEventData() { }

	// RVA: 0x131CBC8 Offset: 0x131CBC8 VA: 0x131CBC8
	public EventEntity[] getCombineEventList() { }

	// RVA: 0x131CBD0 Offset: 0x131CBD0 VA: 0x131CBD0
	public EventCampaignEntity getCombineEventData(int eventId) { }

	// RVA: 0x131CCF0 Offset: 0x131CCF0 VA: 0x131CCF0
	public List<int> getEventIdList() { }

	// RVA: 0x131CCF8 Offset: 0x131CCF8 VA: 0x131CCF8
	public EventCampaignEntity getCombineQpEventData(int eventId) { }

	// RVA: 0x131CD80 Offset: 0x131CD80 VA: 0x131CD80
	public EventCampaignEntity getCombineExpEventData(int eventId) { }
}

// Namespace: 
public class CombineListItemInfo // TypeDefIndex: 9475
{
	// Fields
	public int kind; // 0x10
	public int type; // 0x14
	public string spriteName; // 0x18
	public string eventData; // 0x20

	// Methods

	// RVA: 0x131DBE8 Offset: 0x131DBE8 VA: 0x131DBE8
	public void .ctor(int kind, int type, string spriteName, string eventData) { }
}

// Namespace: 
public class CombineListViewItem : ListViewItem // TypeDefIndex: 9476
{
	// Fields
	protected CombineListItemInfo info; // 0x70

	// Properties
	public CombineListItemInfo Info { get; }
	public int Type { get; }
	public string SpriteName { get; }
	public string EventData { get; }

	// Methods

	// RVA: 0x131DC34 Offset: 0x131DC34 VA: 0x131DC34
	public void .ctor(int index, CombineListItemInfo info) { }

	// RVA: 0x131DC70 Offset: 0x131DC70 VA: 0x131DC70 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x131DC78 Offset: 0x131DC78 VA: 0x131DC78
	public CombineListItemInfo get_Info() { }

	// RVA: 0x131DC80 Offset: 0x131DC80 VA: 0x131DC80
	public int get_Type() { }

	// RVA: 0x131DCAC Offset: 0x131DCAC VA: 0x131DCAC
	public string get_SpriteName() { }

	// RVA: 0x131DCD8 Offset: 0x131DCD8 VA: 0x131DCD8
	public string get_EventData() { }
}

// Namespace: 
public class CombineListViewItemDraw : MonoBehaviour // TypeDefIndex: 9477
{
	// Fields
	[SerializeField] // RVA: 0xC67EFC Offset: 0xC67EFC VA: 0xC67EFC
	protected UIButton baseButton; // 0x18
	[SerializeField] // RVA: 0xC67F0C Offset: 0xC67F0C VA: 0xC67F0C
	protected UISprite baseSprite; // 0x20

	// Methods

	// RVA: 0x131DD04 Offset: 0x131DD04 VA: 0x131DD04
	public void .ctor() { }

	// RVA: 0x131DD0C Offset: 0x131DD0C VA: 0x131DD0C
	public void SetItem(CombineListViewItem item, CombineListViewItemDraw.DispMode mode) { }
}

// Namespace: 
public enum CombineListViewItemDraw.DispMode // TypeDefIndex: 9478
{
	// Fields
	public int value__; // 0x0
	public const CombineListViewItemDraw.DispMode INVISIBLE = 0;
	public const CombineListViewItemDraw.DispMode INVALID = 1;
	public const CombineListViewItemDraw.DispMode VALID = 2;
	public const CombineListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class CombineListViewManager : ListViewManager // TypeDefIndex: 9479
{
	// Fields
	protected static CombineListItemInfo[] itemInfo; // 0x0
	protected static int[] normalKindList; // 0x8
	protected CombineListViewManager.InitMode initMode; // 0x138
	[CompilerGeneratedAttribute] // RVA: 0xC67F1C Offset: 0xC67F1C VA: 0xC67F1C
	[DebuggerBrowsableAttribute] // RVA: 0xC67F1C Offset: 0xC67F1C VA: 0xC67F1C
	private CombineListViewManager.CallbackFunc callbackFunc; // 0x140
	[CompilerGeneratedAttribute] // RVA: 0xC67F58 Offset: 0xC67F58 VA: 0xC67F58
	[DebuggerBrowsableAttribute] // RVA: 0xC67F58 Offset: 0xC67F58 VA: 0xC67F58
	private Action callbackFunc2; // 0x148
	protected int callbackCount; // 0x150

	// Properties
	public List<CombineListViewObject> ObjectList { get; }
	public List<CombineListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x131DEE8 Offset: 0x131DEE8 VA: 0x131DEE8
	public void .ctor() { }

	// RVA: 0x131DEF0 Offset: 0x131DEF0 VA: 0x131DEF0
	protected void add_callbackFunc(CombineListViewManager.CallbackFunc value) { }

	// RVA: 0x131DFE0 Offset: 0x131DFE0 VA: 0x131DFE0
	protected void remove_callbackFunc(CombineListViewManager.CallbackFunc value) { }

	// RVA: 0x131E0D0 Offset: 0x131E0D0 VA: 0x131E0D0
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x131E1C0 Offset: 0x131E1C0 VA: 0x131E1C0
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x131E2B0 Offset: 0x131E2B0 VA: 0x131E2B0
	public List<CombineListViewObject> get_ObjectList() { }

	// RVA: 0x131E47C Offset: 0x131E47C VA: 0x131E47C
	public List<CombineListViewObject> get_ClippingObjectList() { }

	// RVA: 0x131E6DC Offset: 0x131E6DC VA: 0x131E6DC
	public void CreateList(CombineListViewManager.Kind kind) { }

	// RVA: 0x131EA88 Offset: 0x131EA88 VA: 0x131EA88
	public void DestroyList() { }

	// RVA: 0x131EA90 Offset: 0x131EA90 VA: 0x131EA90
	public CombineListViewItem GetItem(int index) { }

	// RVA: 0x131EB38 Offset: 0x131EB38 VA: 0x131EB38 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x131EBF4 Offset: 0x131EBF4 VA: 0x131EBF4
	public void SetMode(CombineListViewManager.InitMode mode, CombineListViewManager.CallbackFunc callback) { }

	// RVA: 0x131EC5C Offset: 0x131EC5C VA: 0x131EC5C
	public void SetMode(CombineListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x131EBFC Offset: 0x131EBFC VA: 0x131EBFC
	public void SetMode(CombineListViewManager.InitMode mode) { }

	// RVA: 0x131EE5C Offset: 0x131EE5C VA: 0x131EE5C
	protected void RequestListObject(CombineListViewObject.InitMode mode, float delay) { }

	// RVA: 0x131EC64 Offset: 0x131EC64 VA: 0x131EC64
	protected void RequestListObject(CombineListViewObject.InitMode mode) { }

	// RVA: 0x131F068 Offset: 0x131F068 VA: 0x131F068
	protected void OnMoveEnd() { }

	// RVA: 0x131F134 Offset: 0x131F134 VA: 0x131F134
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x131F5B4 Offset: 0x131F5B4 VA: 0x131F5B4
	private static void .cctor() { }
}

// Namespace: 
public enum CombineListViewManager.Kind // TypeDefIndex: 9480
{
	// Fields
	public int value__; // 0x0
	public const CombineListViewManager.Kind NORMAL = 0;
}

// Namespace: 
public enum CombineListViewManager.InitMode // TypeDefIndex: 9481
{
	// Fields
	public int value__; // 0x0
	public const CombineListViewManager.InitMode NONE = 0;
	public const CombineListViewManager.InitMode INPUT = 1;
}

// Namespace: 
public sealed class CombineListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 9482
{
	// Methods

	// RVA: 0x131F808 Offset: 0x131F808 VA: 0x131F808
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x131F214 Offset: 0x131F214 VA: 0x131F214 Slot: 11
	public virtual void Invoke(string result) { }

	// RVA: 0x131F818 Offset: 0x131F818 VA: 0x131F818 Slot: 12
	public virtual IAsyncResult BeginInvoke(string result, AsyncCallback callback, object object) { }

	// RVA: 0x131F83C Offset: 0x131F83C VA: 0x131F83C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class CombineListViewObject : ListViewObject // TypeDefIndex: 9483
{
	// Fields
	protected CombineListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC67F94 Offset: 0xC67F94 VA: 0xC67F94
	[DebuggerBrowsableAttribute] // RVA: 0xC67F94 Offset: 0xC67F94 VA: 0xC67F94
	private Action callbackFunc; // 0x70
	protected CombineListViewItemDraw itemDraw; // 0x78
	protected CombineListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x1009F40 Offset: 0x1009F40 VA: 0x1009F40
	public void .ctor() { }

	// RVA: 0x1009FA8 Offset: 0x1009FA8 VA: 0x1009FA8
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x100A094 Offset: 0x100A094 VA: 0x100A094
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x100A180 Offset: 0x100A180 VA: 0x100A180
	protected void Awake() { }

	// RVA: 0x100A1F4 Offset: 0x100A1F4 VA: 0x100A1F4
	private void Start() { }

	// RVA: 0x100A28C Offset: 0x100A28C VA: 0x100A28C
	private void OnDestroy() { }

	// RVA: 0x100A338 Offset: 0x100A338 VA: 0x100A338
	public CombineListViewItem GetItem() { }

	// RVA: 0x100A3BC Offset: 0x100A3BC VA: 0x100A3BC Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x100A3C8 Offset: 0x100A3C8 VA: 0x100A3C8 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x100A3D4 Offset: 0x100A3D4 VA: 0x100A3D4
	protected void InitItem() { }

	// RVA: 0x100A3DC Offset: 0x100A3DC VA: 0x100A3DC Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x100A464 Offset: 0x100A464 VA: 0x100A464
	public void Init(CombineListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x100AB90 Offset: 0x100AB90 VA: 0x100AB90
	public void Init(CombineListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x100AC24 Offset: 0x100AC24 VA: 0x100AC24
	public void Init(CombineListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x100A208 Offset: 0x100A208 VA: 0x100A208
	public void Init(CombineListViewObject.InitMode initMode) { }

	// RVA: 0x100AA7C Offset: 0x100AA7C VA: 0x100AA7C
	protected void SetupDisp() { }

	// RVA: 0x100A6D8 Offset: 0x100A6D8 VA: 0x100A6D8
	private void EventIntoStart(float delay) { }

	// RVA: 0x100ACAC Offset: 0x100ACAC VA: 0x100ACAC
	private void EventIntoMove() { }

	// RVA: 0x100AE20 Offset: 0x100AE20 VA: 0x100AE20
	private void EventIntoMove2() { }

	// RVA: 0x100A840 Offset: 0x100A840 VA: 0x100A840
	private void EventEnterStart(float delay) { }

	// RVA: 0x100AF10 Offset: 0x100AF10 VA: 0x100AF10
	private void EventEnterMove() { }

	// RVA: 0x100B0F8 Offset: 0x100B0F8 VA: 0x100B0F8
	private void EventEnterMove2() { }

	// RVA: 0x100A914 Offset: 0x100A914 VA: 0x100A914
	private void EventRetryStart(float delay) { }

	// RVA: 0x100B194 Offset: 0x100B194 VA: 0x100B194
	private void EventRetryMove() { }

	// RVA: 0x100B308 Offset: 0x100B308 VA: 0x100B308
	private void EventRetryMove2() { }

	// RVA: 0x100AEE8 Offset: 0x100AEE8 VA: 0x100AEE8
	protected void EventMoveEnd() { }

	// RVA: 0x100B3D0 Offset: 0x100B3D0 VA: 0x100B3D0 Slot: 3
	public override string ToString() { }
}

// Namespace: 
public enum CombineListViewObject.InitMode // TypeDefIndex: 9484
{
	// Fields
	public int value__; // 0x0
	public const CombineListViewObject.InitMode INVISIBLE = 0;
	public const CombineListViewObject.InitMode INVALID = 1;
	public const CombineListViewObject.InitMode VALID = 2;
	public const CombineListViewObject.InitMode FADEIN = 3;
	public const CombineListViewObject.InitMode INPUT = 4;
	public const CombineListViewObject.InitMode INTO = 5;
	public const CombineListViewObject.InitMode ENTER = 6;
	public const CombineListViewObject.InitMode EXIT = 7;
	public const CombineListViewObject.InitMode RETRY = 8;
}

// Namespace: 
protected enum CombineListViewObject.State // TypeDefIndex: 9485
{
	// Fields
	public int value__; // 0x0
	public const CombineListViewObject.State INIT = 0;
	public const CombineListViewObject.State IDLE = 1;
	public const CombineListViewObject.State MOVE = 2;
	public const CombineListViewObject.State INPUT = 3;
}

// Namespace: 
public abstract class CombineMenuControl : BaseMonoBehaviour // TypeDefIndex: 9486
{
	// Fields
	[SerializeField] // RVA: 0xC67FD0 Offset: 0xC67FD0 VA: 0xC67FD0
	protected CombineRootComponent combineRootComponent; // 0x18
	public CombineRootComponent.State type; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC67FE0 Offset: 0xC67FE0 VA: 0xC67FE0
	[DebuggerBrowsableAttribute] // RVA: 0xC67FE0 Offset: 0xC67FE0 VA: 0xC67FE0
	private bool <IsExeCombine>k__BackingField; // 0x24
	protected UserServantEntity baseUserServantEntity; // 0x28
	[SerializeField] // RVA: 0xC6801C Offset: 0xC6801C VA: 0xC6801C
	protected GameObject charaGraphBase; // 0x30
	[SerializeField] // RVA: 0xC6802C Offset: 0xC6802C VA: 0xC6802C
	protected SetRarityDialogControl exeCombineDlg; // 0x38
	[SerializeField] // RVA: 0xC6803C Offset: 0xC6803C VA: 0xC6803C
	protected GameObject helpBtn; // 0x40
	[SerializeField] // RVA: 0xC6804C Offset: 0xC6804C VA: 0xC6804C
	protected UISprite bgTxtSprite; // 0x48
	[SerializeField] // RVA: 0xC6805C Offset: 0xC6805C VA: 0xC6805C
	protected MenuListControl menuListCtr; // 0x50
	private UserServantEntity selectMaterialUsrSvtEntity; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xC6806C Offset: 0xC6806C VA: 0xC6806C
	[DebuggerBrowsableAttribute] // RVA: 0xC6806C Offset: 0xC6806C VA: 0xC6806C
	private CombineMenuControl.TargetType <targetType>k__BackingField; // 0x60

	// Properties
	public bool IsExeCombine { get; set; }
	public CombineMenuControl.TargetType targetType { get; set; }

	// Methods

	// RVA: 0x100B6B0 Offset: 0x100B6B0 VA: 0x100B6B0
	protected void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCECA0 Offset: 0xCCECA0 VA: 0xCCECA0
	// RVA: 0x100B6B8 Offset: 0x100B6B8 VA: 0x100B6B8
	public bool get_IsExeCombine() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCECB0 Offset: 0xCCECB0 VA: 0xCCECB0
	// RVA: 0x100B6C0 Offset: 0x100B6C0 VA: 0x100B6C0
	protected void set_IsExeCombine(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCECC0 Offset: 0xCCECC0 VA: 0xCCECC0
	// RVA: 0x100B6CC Offset: 0x100B6CC VA: 0x100B6CC
	public CombineMenuControl.TargetType get_targetType() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCECD0 Offset: 0xCCECD0 VA: 0xCCECD0
	// RVA: 0x100B6D4 Offset: 0x100B6D4 VA: 0x100B6D4
	protected void set_targetType(CombineMenuControl.TargetType value) { }

	// RVA: 0x100B6DC Offset: 0x100B6DC VA: 0x100B6DC
	protected void InitMenuControl() { }

	// RVA: 0x100B7F8 Offset: 0x100B7F8 VA: 0x100B7F8 Slot: 4
	public virtual void OnClickBase() { }

	// RVA: 0x100BA78 Offset: 0x100BA78 VA: 0x100BA78
	public void OnLongPushListView() { }

	// RVA: 0x100C07C Offset: 0x100C07C VA: 0x100C07C
	public void OnClickMaterial(CombineMenuControl.TargetType type, long selectUsrSvtId) { }

	// RVA: 0x100C614 Offset: 0x100C614 VA: 0x100C614
	public UserServantEntity GetMaterialUsrSvtData() { }

	// RVA: 0x100C714 Offset: 0x100C714 VA: 0x100C714
	public void OnClickLvExceedConductionWire() { }

	// RVA: 0x100C874 Offset: 0x100C874 VA: 0x100C874 Slot: 5
	protected virtual void OnClickHelp() { }

	// RVA: 0x100C974 Offset: 0x100C974 VA: 0x100C974
	protected void OnCloseHelp() { }

	// RVA: -1 Offset: -1 Slot: 6
	protected abstract EventTutorialMaster.OpenType GetTutorialOpenType();
}

// Namespace: 
public enum CombineMenuControl.TargetType // TypeDefIndex: 9487
{
	// Fields
	public int value__; // 0x0
	public const CombineMenuControl.TargetType BASE_STATUS = 0;
	public const CombineMenuControl.TargetType MATERIAL_SELECT = 1;
	public const CombineMenuControl.TargetType MATERIAL_STATUS = 2;
}

// Namespace: 
public class CombineRootComponent : SceneRootComponent // TypeDefIndex: 9488
{
	// Fields
	protected static readonly int DEFAULT_FIGURE_ID; // 0x0
	protected static readonly int DEFAULT_FIGURE_LIMIT_CNT; // 0x4
	protected static readonly string BG_ROOT; // 0x8
	protected static readonly int DEFAULT_BG_ID; // 0x10
	protected static readonly Rect DISP_RECT; // 0x14
	[SerializeField] // RVA: 0xC680A8 Offset: 0xC680A8 VA: 0xC680A8
	private CombineInitData combineData; // 0x38
	[SerializeField] // RVA: 0xC680B8 Offset: 0xC680B8 VA: 0xC680B8
	private TitleInfoControl titleInfo; // 0x40
	[SerializeField] // RVA: 0xC680C8 Offset: 0xC680C8 VA: 0xC680C8
	private CombineHelpListViewManager helpListViewManager; // 0x48
	[SerializeField] // RVA: 0xC680D8 Offset: 0xC680D8 VA: 0xC680D8
	private GameObject helpListViewBase; // 0x50
	[SerializeField] // RVA: 0xC680E8 Offset: 0xC680E8 VA: 0xC680E8
	private GameObject helpBtn; // 0x58
	public ServantCombineControl svtCombineCtr; // 0x60
	public SkillCombineControl skillCombineCtr; // 0x68
	public NpCombineControl npCombineCtr; // 0x70
	public LimitCntUpControl limitCntCtr; // 0x78
	public SvtEquipCombineControl svtEqCombineCtr; // 0x80
	public FriendshipExceedControl friendshipExceedCtr; // 0x88
	public SpecialAscensionControl specialAscensionCtr; // 0x90
	public CommandCardEquipmentControl commandCardEquipmentCtr; // 0x98
	public CommandCardExceedControl commandCardExceedCtr; // 0xA0
	public AppendSkillCombineControl appendSkillCombineCtr; // 0xA8
	public LevelExceedControl lvExceedCtr; // 0xB0
	public ServantCostumeControl svtCostumeCtr; // 0xB8
	public SvtEqCombineListViewManager svtEqListManager; // 0xC0
	public CombineServantListViewManager combineSvtManager; // 0xC8
	public ServantCostumeListViewManager svtCostumeListManager; // 0xD0
	public CombineCommandCodeListViewManager commandCodeListManager; // 0xD8
	[SerializeField] // RVA: 0xC680F8 Offset: 0xC680F8 VA: 0xC680F8
	private EventBannerControl bannerCtr; // 0xE0
	[SerializeField] // RVA: 0xC68108 Offset: 0xC68108 VA: 0xC68108
	private MenuListControl menuCtr; // 0xE8
	[SerializeField] // RVA: 0xC68118 Offset: 0xC68118 VA: 0xC68118
	private Transform combineResultInstance; // 0xF0
	[SerializeField] // RVA: 0xC68128 Offset: 0xC68128 VA: 0xC68128
	private CombineEffectComponent combineEffectInstance; // 0xF8
	[SerializeField] // RVA: 0xC68138 Offset: 0xC68138 VA: 0xC68138
	private StandFigureBack standFigureBack; // 0x100
	[SerializeField] // RVA: 0xC68148 Offset: 0xC68148 VA: 0xC68148
	private GiftButtonCtrl giftButton; // 0x108
	[SerializeField] // RVA: 0xC68158 Offset: 0xC68158 VA: 0xC68158
	private GameObject servantBase; // 0x110
	private UserServantEntity baseUsrSvtData; // 0x118
	private ServantCostumeEntity baseSvtCostumeData; // 0x120
	private int targetCardIndex; // 0x128
	private string resultIdx; // 0x130
	private int normalExp; // 0x138
	private int addTotalExp; // 0x13C
	private List<UserServantEntity> materialUsrSvtList; // 0x140
	[SerializeField] // RVA: 0xC68168 Offset: 0xC68168 VA: 0xC68168
	private GameObject maskPanelObj; // 0x148
	[SerializeField] // RVA: 0xC68178 Offset: 0xC68178 VA: 0xC68178
	private CheckCombineEnalbleControl checkCombineCtr; // 0x150
	[SerializeField] // RVA: 0xC68188 Offset: 0xC68188 VA: 0xC68188
	private ExUITexture backgroundTexture; // 0x158
	[SerializeField] // RVA: 0xC68198 Offset: 0xC68198 VA: 0xC68198
	private ServantCheckEquipDialog servantEquipCheckDialog; // 0x160
	[SerializeField] // RVA: 0xC681A8 Offset: 0xC681A8 VA: 0xC681A8
	private GameObject checkMaterialSvtEquippedPrefab; // 0x168
	public CheckMaterialSvtEquippedDialog checkMaterialSvtEquipped; // 0x170
	[SerializeField] // RVA: 0xC681B8 Offset: 0xC681B8 VA: 0xC681B8
	private GameObject friendshipExceedMenuObject; // 0x178
	private EventUpValSetupInfo setupInfo; // 0x180
	private EventUpValSetupInfo finishSetupInfo; // 0x188
	[SerializeField] // RVA: 0xC681C8 Offset: 0xC681C8 VA: 0xC681C8
	private GameObject specialAscensionMenuObject; // 0x190
	public CombineRootComponent.MenuState menuState; // 0x198
	public CombineRootComponent.State state; // 0x19C
	private SetLevelUpData dataInfo; // 0x1A0
	private List<LimitCntUpItemComponent> limitUpItemList; // 0x1A8
	private int baseSvtCollectionLv; // 0x1B0
	private int baseSvtCollectionLimtCnt; // 0x1B4
	private string voiceData; // 0x1B8
	private SePlayer voicePlayer; // 0x1C0
	private string[][] voiceListWelcome; // 0x1C8
	private List<string[]> voiceListReturn; // 0x1D0
	private ServantVoiceData[] voicePlayingList; // 0x1D8
	private int voicePlayingcnt; // 0x1E0
	private SceneJumpInfo transitionData; // 0x1E8
	private int figureSvtId; // 0x1F0
	private int figureSvtLimitCnt; // 0x1F4
	private int bgImageId; // 0x1F8
	private Face.Type defaultFaceId; // 0x1FC
	private string bgmName; // 0x200
	public static string EXCEED_ASSET_PATH; // 0x28
	public static string COMBINE_ASSET_PATH; // 0x30
	public static AssetData effectAssetData; // 0x38
	private long usrSvtId; // 0x208
	private bool isLoadingVoice; // 0x210
	private int commandCardExceedIndex; // 0x214
	private int commandCardExceedCount; // 0x218
	private Dictionary<long, bool> limitUpJoinSvtData; // 0x220
	[SerializeField] // RVA: 0xC681D8 Offset: 0xC681D8 VA: 0xC681D8
	private GameObject summonEffectRoot; // 0x228
	[SerializeField] // RVA: 0xC681E8 Offset: 0xC681E8 VA: 0xC681E8
	private GameObject summonEffectBlockPanel; // 0x230
	private ServantRewardAction svtRewardComp; // 0x238
	public bool specialAscensionCheckedTimeOver; // 0x240
	public CombineRootComponent.CombineTutorialProgress combineTutorialProgress; // 0x244
	public static readonly CombineRootComponent.CombineTutorialParamater[] combineTutorialParamaters; // 0x40
	private bool finishBalloonLoad; // 0x248
	private bool finishFadeOut; // 0x249
	[CompilerGeneratedAttribute] // RVA: 0xC681F8 Offset: 0xC681F8 VA: 0xC681F8
	private static Action <>f__am$cache0; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC68208 Offset: 0xC68208 VA: 0xC68208
	private static Action <>f__am$cache1; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xC68218 Offset: 0xC68218 VA: 0xC68218
	private static Action <>f__am$cache2; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xC68228 Offset: 0xC68228 VA: 0xC68228
	private static Action <>f__am$cache3; // 0x60
	[CompilerGeneratedAttribute] // RVA: 0xC68238 Offset: 0xC68238 VA: 0xC68238
	private static Action <>f__am$cache4; // 0x68
	[CompilerGeneratedAttribute] // RVA: 0xC68248 Offset: 0xC68248 VA: 0xC68248
	private static Action <>f__am$cache5; // 0x70
	[CompilerGeneratedAttribute] // RVA: 0xC68258 Offset: 0xC68258 VA: 0xC68258
	private static Action <>f__am$cache6; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xC68268 Offset: 0xC68268 VA: 0xC68268
	private static Func<bool, bool> <>f__am$cache7; // 0x80
	[CompilerGeneratedAttribute] // RVA: 0xC68278 Offset: 0xC68278 VA: 0xC68278
	private static Func<bool, bool> <>f__am$cache8; // 0x88
	[CompilerGeneratedAttribute] // RVA: 0xC68288 Offset: 0xC68288 VA: 0xC68288
	private static Action <>f__am$cache9; // 0x90
	[CompilerGeneratedAttribute] // RVA: 0xC68298 Offset: 0xC68298 VA: 0xC68298
	private static Action <>f__am$cacheA; // 0x98
	[CompilerGeneratedAttribute] // RVA: 0xC682A8 Offset: 0xC682A8 VA: 0xC682A8
	private static Action <>f__am$cacheB; // 0xA0

	// Methods

	// RVA: 0x101D3B0 Offset: 0x101D3B0 VA: 0x101D3B0
	public void .ctor() { }

	// RVA: 0x101D420 Offset: 0x101D420 VA: 0x101D420
	public void Start() { }

	// RVA: 0x101D4BC Offset: 0x101D4BC VA: 0x101D4BC Slot: 4
	public override void beginInitialize() { }

	// RVA: 0x101D560 Offset: 0x101D560 VA: 0x101D560 Slot: 5
	public override void beginStartUp(object data) { }

	// RVA: 0x101DB68 Offset: 0x101DB68 VA: 0x101DB68
	private void CallbackLoadBg() { }

	// RVA: 0x101DEA4 Offset: 0x101DEA4 VA: 0x101DEA4 Slot: 6
	public override void beginStartUp() { }

	// RVA: 0x101DA64 Offset: 0x101DA64 VA: 0x101DA64
	private void SetDispInfo() { }

	// RVA: 0x101DFDC Offset: 0x101DFDC VA: 0x101DFDC Slot: 10
	public override void beginResume() { }

	// RVA: 0x101DFE4 Offset: 0x101DFE4 VA: 0x101DFE4 Slot: 7
	public override void beginFinish() { }

	// RVA: 0x101E494 Offset: 0x101E494 VA: 0x101E494
	private void CheckCombineEnable() { }

	// RVA: 0x101E508 Offset: 0x101E508 VA: 0x101E508
	private void CheckAppendSkillMenu() { }

	// RVA: 0x101E650 Offset: 0x101E650 VA: 0x101E650
	public void Init() { }

	// RVA: 0x101FCE8 Offset: 0x101FCE8 VA: 0x101FCE8
	public void checkTransitionInfo() { }

	// RVA: 0x101DFE8 Offset: 0x101DFE8 VA: 0x101DFE8
	private void Quit() { }

	// RVA: 0x10202F4 Offset: 0x10202F4 VA: 0x10202F4
	public void TapMenu(CombineMenuControl ctrl) { }

	// RVA: 0x1021290 Offset: 0x1021290 VA: 0x1021290
	private void CheckEventSvt(bool isConfirm) { }

	// RVA: 0x1021C6C Offset: 0x1021C6C VA: 0x1021C6C
	private void CloseEventSvtConfirmDlg(bool isDecide) { }

	// RVA: 0x1021BA0 Offset: 0x1021BA0 VA: 0x1021BA0
	private void AfterCheckEventSvt() { }

	// RVA: 0x1021D38 Offset: 0x1021D38 VA: 0x1021D38
	public void EndEffect() { }

	// RVA: 0x1022C4C Offset: 0x1022C4C VA: 0x1022C4C
	private void BackMenu() { }

	// RVA: 0x100B878 Offset: 0x100B878 VA: 0x100B878
	public void ShowServantList() { }

	// RVA: 0x1022E4C Offset: 0x1022E4C VA: 0x1022E4C
	public void BackServantList() { }

	// RVA: 0x100C220 Offset: 0x100C220 VA: 0x100C220
	public void ShowMaterialSvtList() { }

	// RVA: 0x1022F4C Offset: 0x1022F4C VA: 0x1022F4C
	private void BackMaterialSvtList() { }

	// RVA: 0x102304C Offset: 0x102304C VA: 0x102304C
	public void ShowBaseSvtEqList() { }

	// RVA: 0x102314C Offset: 0x102314C VA: 0x102314C
	private void BackSvtEqCombineTop() { }

	// RVA: 0x100C414 Offset: 0x100C414 VA: 0x100C414
	public void ShowSvtEqMaterialList() { }

	// RVA: 0x1023268 Offset: 0x1023268 VA: 0x1023268
	private void BackSvtEqMaterialList() { }

	// RVA: 0x1023384 Offset: 0x1023384 VA: 0x1023384
	public void ShowBaseListSvtCostume() { }

	// RVA: 0x1023464 Offset: 0x1023464 VA: 0x1023464
	private void BackSvtCostumeListTop() { }

	// RVA: 0x1023544 Offset: 0x1023544 VA: 0x1023544
	private void EndloadEffect(AssetData data) { }

	// RVA: 0x101FDF4 Offset: 0x101FDF4 VA: 0x101FDF4
	private void ShowSvtCombine() { }

	// RVA: 0x1023DCC Offset: 0x1023DCC VA: 0x1023DCC
	public void ShowSelectBaseSvt() { }

	// RVA: 0x1024090 Offset: 0x1024090 VA: 0x1024090
	public void SetRecomendedSelectUserServantIdList() { }

	// RVA: 0x1024178 Offset: 0x1024178 VA: 0x1024178
	public void SelectMaterialSvt() { }

	// RVA: 0x102436C Offset: 0x102436C VA: 0x102436C
	private void InitSvtCombine() { }

	// RVA: 0x1024410 Offset: 0x1024410 VA: 0x1024410
	public void RequestSvtCombine() { }

	// RVA: 0x1024790 Offset: 0x1024790 VA: 0x1024790
	private void CallbackSvtCombineRequest(string result) { }

	// RVA: 0x1021D8C Offset: 0x1021D8C VA: 0x1021D8C
	private void ShowOpenResult() { }

	// RVA: 0x10248B8 Offset: 0x10248B8 VA: 0x10248B8
	private void CloseSvtCombineResultInfo() { }

	// RVA: 0x1020610 Offset: 0x1020610 VA: 0x1020610
	private void ShowLimitCntUp() { }

	// RVA: 0x1024998 Offset: 0x1024998 VA: 0x1024998
	public void ShowSelectLimitUpBaseSvt() { }

	// RVA: 0x1024B4C Offset: 0x1024B4C VA: 0x1024B4C
	private void InitLimitUpCombine() { }

	// RVA: 0x1024BF0 Offset: 0x1024BF0 VA: 0x1024BF0
	public void RequestLimitUp() { }

	// RVA: 0x1024E34 Offset: 0x1024E34 VA: 0x1024E34
	private void CallbackLimitUpRequest(string result) { }

	// RVA: 0x1025278 Offset: 0x1025278 VA: 0x1025278
	private void ShowLimitUpEffect() { }

	// RVA: 0x1021EB4 Offset: 0x1021EB4 VA: 0x1021EB4
	private void DispLimitUpResult() { }

	// RVA: 0x1025400 Offset: 0x1025400 VA: 0x1025400
	private void DispJoinDialog(bool isDeside) { }

	// RVA: 0x10259C8 Offset: 0x10259C8 VA: 0x10259C8
	private void DispSummonEffect(bool isDeside) { }

	// RVA: 0x102610C Offset: 0x102610C VA: 0x102610C
	private void PlaySummonEffect(long userSvtId, int servantId, int limitCount, Action endAction) { }

	// RVA: 0x1025FFC Offset: 0x1025FFC VA: 0x1025FFC
	private void ReleaseSummonEffect() { }

	// RVA: 0x1026368 Offset: 0x1026368 VA: 0x1026368
	private void CloseLimitUpResultInfo() { }

	// RVA: 0x1020D54 Offset: 0x1020D54 VA: 0x1020D54
	private void ShowSvtSkillCombine() { }

	// RVA: 0x1026448 Offset: 0x1026448 VA: 0x1026448
