	// RVA: 0x1BD2018 Offset: 0x1BD2018 VA: 0x1BD2018
	private void ProcessAndRequest() { }

	// RVA: 0x1BD4138 Offset: 0x1BD4138 VA: 0x1BD4138 Slot: 14
	protected override void OnEnable() { }

	// RVA: 0x1BD426C Offset: 0x1BD426C VA: 0x1BD426C Slot: 20
	protected override void OnStart() { }

	// RVA: 0x1BD4448 Offset: 0x1BD4448 VA: 0x1BD4448 Slot: 30
	public override void MarkAsChanged() { }

	// RVA: 0x1BD2950 Offset: 0x1BD2950 VA: 0x1BD2950
	public void ProcessText() { }

	// RVA: 0x1BD356C Offset: 0x1BD356C VA: 0x1BD356C
	private void ProcessText(bool legacyMode, bool full) { }

	// RVA: 0x1BD4C68 Offset: 0x1BD4C68 VA: 0x1BD4C68 Slot: 33
	public override void MakePixelPerfect() { }

	// RVA: 0x1BD4F80 Offset: 0x1BD4F80 VA: 0x1BD4F80
	public void AssumeNaturalSize() { }

	[ObsoleteAttribute] // RVA: 0xCD79B0 Offset: 0xCD79B0 VA: 0xCD79B0
	// RVA: 0x1BD50AC Offset: 0x1BD50AC VA: 0x1BD50AC
	public int GetCharacterIndex(Vector3 worldPos) { }

	[ObsoleteAttribute] // RVA: 0xCD79E8 Offset: 0xCD79E8 VA: 0xCD79E8
	// RVA: 0x1BD50B4 Offset: 0x1BD50B4 VA: 0x1BD50B4
	public int GetCharacterIndex(Vector2 localPos) { }

	// RVA: 0x1BCE7C8 Offset: 0x1BCE7C8 VA: 0x1BCE7C8
	public int GetCharacterIndexAtPosition(Vector3 worldPos, bool precise) { }

	// RVA: 0x1BD50BC Offset: 0x1BD50BC VA: 0x1BD50BC
	public int GetCharacterIndexAtPosition(Vector2 localPos, bool precise) { }

	// RVA: 0x1BD56EC Offset: 0x1BD56EC VA: 0x1BD56EC
	public string GetWordAtPosition(Vector3 worldPos) { }

	// RVA: 0x1BD5914 Offset: 0x1BD5914 VA: 0x1BD5914
	public string GetWordAtPosition(Vector2 localPos) { }

	// RVA: 0x1BD5718 Offset: 0x1BD5718 VA: 0x1BD5718
	public string GetWordAtCharacterIndex(int characterIndex) { }

	// RVA: 0x1BD5940 Offset: 0x1BD5940 VA: 0x1BD5940
	public string GetUrlAtPosition(Vector3 worldPos) { }

	// RVA: 0x1BD5BB4 Offset: 0x1BD5BB4 VA: 0x1BD5BB4
	public string GetUrlAtPosition(Vector2 localPos) { }

	// RVA: 0x1BD596C Offset: 0x1BD596C VA: 0x1BD596C
	public string GetUrlAtCharacterIndex(int characterIndex) { }

	// RVA: 0x1BD5BE0 Offset: 0x1BD5BE0 VA: 0x1BD5BE0
	public int GetCharacterIndex(int currentIndex, KeyCode key) { }

	// RVA: 0x1BCED84 Offset: 0x1BCED84 VA: 0x1BCED84
	public void PrintOverlay(int start, int end, UIGeometry caret, UIGeometry highlight, Color caretColor, Color highlightColor) { }

	// RVA: 0x1BD6108 Offset: 0x1BD6108 VA: 0x1BD6108 Slot: 38
	public override void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }

	// RVA: 0x1BD5444 Offset: 0x1BD5444 VA: 0x1BD5444
	public Vector2 ApplyOffset(BetterList<Vector3> verts, int start) { }

	// RVA: 0x1BD6560 Offset: 0x1BD6560 VA: 0x1BD6560
	public void ApplyShadow(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols, int start, int end, float x, float y) { }

	// RVA: 0x1BCEC30 Offset: 0x1BCEC30 VA: 0x1BCEC30
	public int CalculateOffsetToFit(string text) { }

	// RVA: 0x1BD6A4C Offset: 0x1BD6A4C VA: 0x1BD6A4C
	public void SetCurrentProgress() { }

	// RVA: 0x1BD6B2C Offset: 0x1BD6B2C VA: 0x1BD6B2C
	public void SetCurrentPercent() { }

	// RVA: 0x1BD6C90 Offset: 0x1BD6C90 VA: 0x1BD6C90
	public void SetCurrentSelection() { }

	// RVA: 0x1BD6DDC Offset: 0x1BD6DDC VA: 0x1BD6DDC
	public bool Wrap(string text, out string final) { }

	// RVA: 0x1BD6DE8 Offset: 0x1BD6DE8 VA: 0x1BD6DE8
	public bool Wrap(string text, out string final, int height) { }

	// RVA: 0x1BD445C Offset: 0x1BD445C VA: 0x1BD445C
	public void UpdateNGUIText() { }

	// RVA: 0x1BD6EAC Offset: 0x1BD6EAC VA: 0x1BD6EAC Slot: 31
	protected override void Awake() { }

	// RVA: 0x1BD70FC Offset: 0x1BD70FC VA: 0x1BD70FC
	public void SetDefaultFont() { }

	// RVA: 0x1BD7340 Offset: 0x1BD7340 VA: 0x1BD7340
	public void SetCondensedScale(int maxWidth) { }

	// RVA: 0x1BD7348 Offset: 0x1BD7348 VA: 0x1BD7348
	public void SetCondensedScale(float maxWidth) { }

	// RVA: 0x1BD7488 Offset: 0x1BD7488 VA: 0x1BD7488
	public void SetCurrentPercentFloat() { }

	// RVA: 0x1BD7600 Offset: 0x1BD7600 VA: 0x1BD7600
	private static void .cctor() { }
}

// Namespace: 
public enum UILabel.Effect // TypeDefIndex: 12217
{
	// Fields
	public int value__; // 0x0
	public const UILabel.Effect None = 0;
	public const UILabel.Effect Shadow = 1;
	public const UILabel.Effect Outline = 2;
	public const UILabel.Effect Outline8 = 3;
}

// Namespace: 
public enum UILabel.Overflow // TypeDefIndex: 12218
{
	// Fields
	public int value__; // 0x0
	public const UILabel.Overflow ShrinkContent = 0;
	public const UILabel.Overflow ClampContent = 1;
	public const UILabel.Overflow ResizeFreely = 2;
	public const UILabel.Overflow ResizeHeight = 3;
}

// Namespace: 
public enum UILabel.Crispness // TypeDefIndex: 12219
{
	// Fields
	public int value__; // 0x0
	public const UILabel.Crispness Never = 0;
	public const UILabel.Crispness OnDesktop = 1;
	public const UILabel.Crispness Always = 2;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2D13C Offset: 0xC2D13C VA: 0xC2D13C
[RequireComponent] // RVA: 0xC2D13C Offset: 0xC2D13C VA: 0xC2D13C
[AddComponentMenu] // RVA: 0xC2D13C Offset: 0xC2D13C VA: 0xC2D13C
public class UILocalize : MonoBehaviour // TypeDefIndex: 12220
{
	// Fields
	public string key; // 0x18
	private bool mStarted; // 0x20

	// Properties
	public string value { set; }

	// Methods

	// RVA: 0x1BD79B0 Offset: 0x1BD79B0 VA: 0x1BD79B0
	public void .ctor() { }

	// RVA: 0x1BD79B8 Offset: 0x1BD79B8 VA: 0x1BD79B8
	public void set_value(string value) { }

	// RVA: 0x1BD7D90 Offset: 0x1BD7D90 VA: 0x1BD7D90
	private void OnEnable() { }

	// RVA: 0x1BD7EF4 Offset: 0x1BD7EF4 VA: 0x1BD7EF4
	private void Start() { }

	// RVA: 0x1BD7DA0 Offset: 0x1BD7DA0 VA: 0x1BD7DA0
	private void OnLocalize() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2D1D4 Offset: 0xC2D1D4 VA: 0xC2D1D4
[RequireComponent] // RVA: 0xC2D1D4 Offset: 0xC2D1D4 VA: 0xC2D1D4
[AddComponentMenu] // RVA: 0xC2D1D4 Offset: 0xC2D1D4 VA: 0xC2D1D4
public class UIOrthoCamera : MonoBehaviour // TypeDefIndex: 12221
{
	// Fields
	private Camera mCam; // 0x18
	private Transform mTrans; // 0x20

	// Methods

	// RVA: 0x1C3F420 Offset: 0x1C3F420 VA: 0x1C3F420
	public void .ctor() { }

	// RVA: 0x1C3F428 Offset: 0x1C3F428 VA: 0x1C3F428
	private void Start() { }

	// RVA: 0x1C3F4AC Offset: 0x1C3F4AC VA: 0x1C3F4AC
	private void Update() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2D26C Offset: 0xC2D26C VA: 0xC2D26C
[AddComponentMenu] // RVA: 0xC2D26C Offset: 0xC2D26C VA: 0xC2D26C
public class UIRoot : MonoBehaviour // TypeDefIndex: 12222
{
	// Fields
	public static List<UIRoot> list; // 0x0
	public UIRoot.Scaling scalingStyle; // 0x18
	public int manualWidth; // 0x1C
	public int manualHeight; // 0x20
	public int minimumHeight; // 0x24
	public int maximumHeight; // 0x28
	public bool fitWidth; // 0x2C
	public bool fitHeight; // 0x2D
	public bool adjustByDPI; // 0x2E
	public bool shrinkPortraitUI; // 0x2F
	private Transform mTrans; // 0x30

	// Properties
	public UIRoot.Constraint constraint { get; }
	public UIRoot.Scaling activeScaling { get; }
	public int activeHeight { get; }
	public float pixelSizeAdjustment { get; }

	// Methods

	// RVA: 0x1C53C0C Offset: 0x1C53C0C VA: 0x1C53C0C
	public void .ctor() { }

	// RVA: 0x1C53C28 Offset: 0x1C53C28 VA: 0x1C53C28
	public UIRoot.Constraint get_constraint() { }

	// RVA: 0x1C53C50 Offset: 0x1C53C50 VA: 0x1C53C50
	public UIRoot.Scaling get_activeScaling() { }

	// RVA: 0x1C53C60 Offset: 0x1C53C60 VA: 0x1C53C60
	public int get_activeHeight() { }

	// RVA: 0x1C40A74 Offset: 0x1C40A74 VA: 0x1C40A74
	public float get_pixelSizeAdjustment() { }

	// RVA: 0x1C53E3C Offset: 0x1C53E3C VA: 0x1C53E3C
	public static float GetPixelSizeAdjustment(GameObject go) { }

	// RVA: 0x1C48934 Offset: 0x1C48934 VA: 0x1C48934
	public float GetPixelSizeAdjustment(int height) { }

	// RVA: 0x1C53F0C Offset: 0x1C53F0C VA: 0x1C53F0C Slot: 4
	protected virtual void Awake() { }

	// RVA: 0x1C53F34 Offset: 0x1C53F34 VA: 0x1C53F34 Slot: 5
	protected virtual void OnEnable() { }

	// RVA: 0x1C53FC0 Offset: 0x1C53FC0 VA: 0x1C53FC0 Slot: 6
	protected virtual void OnDisable() { }

	// RVA: 0x1C5404C Offset: 0x1C5404C VA: 0x1C5404C Slot: 7
	protected virtual void Start() { }

	// RVA: 0x1C541A4 Offset: 0x1C541A4 VA: 0x1C541A4
	private void Update() { }

	// RVA: 0x1C5434C Offset: 0x1C5434C VA: 0x1C5434C
	public static void Broadcast(string funcName) { }

	// RVA: 0x1C544B0 Offset: 0x1C544B0 VA: 0x1C544B0
	public static void Broadcast(string funcName, object param) { }

	// RVA: 0x1C54620 Offset: 0x1C54620 VA: 0x1C54620
	private static void .cctor() { }
}

// Namespace: 
public enum UIRoot.Scaling // TypeDefIndex: 12223
{
	// Fields
	public int value__; // 0x0
	public const UIRoot.Scaling Flexible = 0;
	public const UIRoot.Scaling Constrained = 1;
	public const UIRoot.Scaling ConstrainedOnMobiles = 2;
}

// Namespace: 
public enum UIRoot.Constraint // TypeDefIndex: 12224
{
	// Fields
	public int value__; // 0x0
	public const UIRoot.Constraint Fit = 0;
	public const UIRoot.Constraint Fill = 1;
	public const UIRoot.Constraint FitWidth = 2;
	public const UIRoot.Constraint FitHeight = 3;
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2D2B8 Offset: 0xC2D2B8 VA: 0xC2D2B8
[AddComponentMenu] // RVA: 0xC2D2B8 Offset: 0xC2D2B8 VA: 0xC2D2B8
public class UISprite : UIBasicSprite // TypeDefIndex: 12225
{
	// Fields
	[HideInInspector] // RVA: 0xC8628C Offset: 0xC8628C VA: 0xC8628C
	[SerializeField] // RVA: 0xC8628C Offset: 0xC8628C VA: 0xC8628C
	private UIAtlas mAtlas; // 0x1C8
	[HideInInspector] // RVA: 0xC862C4 Offset: 0xC862C4 VA: 0xC862C4
	[SerializeField] // RVA: 0xC862C4 Offset: 0xC862C4 VA: 0xC862C4
	private string mSpriteName; // 0x1D0
	[HideInInspector] // RVA: 0xC862FC Offset: 0xC862FC VA: 0xC862FC
	[SerializeField] // RVA: 0xC862FC Offset: 0xC862FC VA: 0xC862FC
	private bool mFillCenter; // 0x1D8
	protected UISpriteData mSprite; // 0x1E0
	private bool mSpriteSet; // 0x1E8

	// Properties
	public override Material material { get; }
	public UIAtlas atlas { get; set; }
	public string spriteName { get; set; }
	public bool isValid { get; }
	[ObsoleteAttribute] // RVA: 0xCDF158 Offset: 0xCDF158 VA: 0xCDF158
	public bool fillCenter { get; set; }
	public override Vector4 border { get; }
	public override float pixelSize { get; }
	public override int minWidth { get; }
	public override int minHeight { get; }
	public override Vector4 drawingDimensions { get; }
	public override bool premultipliedAlpha { get; }

	// Methods

	// RVA: 0x1822690 Offset: 0x1822690 VA: 0x1822690
	public void .ctor() { }

	// RVA: 0x182588C Offset: 0x182588C VA: 0x182588C Slot: 24
	public override Material get_material() { }

	// RVA: 0x182592C Offset: 0x182592C VA: 0x182592C
	public UIAtlas get_atlas() { }

	// RVA: 0x18228A0 Offset: 0x18228A0 VA: 0x18228A0
	public void set_atlas(UIAtlas value) { }

	// RVA: 0x18259E0 Offset: 0x18259E0 VA: 0x18259E0
	public string get_spriteName() { }

	// RVA: 0x1822ACC Offset: 0x1822ACC VA: 0x1822ACC
	public void set_spriteName(string value) { }

	// RVA: 0x18259E8 Offset: 0x18259E8 VA: 0x18259E8
	public bool get_isValid() { }

	// RVA: 0x1825BC4 Offset: 0x1825BC4 VA: 0x1825BC4
	public bool get_fillCenter() { }

	// RVA: 0x1825BD4 Offset: 0x1825BD4 VA: 0x1825BD4
	public void set_fillCenter(bool value) { }

	// RVA: 0x1825C04 Offset: 0x1825C04 VA: 0x1825C04 Slot: 36
	public override Vector4 get_border() { }

	// RVA: 0x1825C78 Offset: 0x1825C78 VA: 0x1825C78 Slot: 42
	public override float get_pixelSize() { }

	// RVA: 0x1825D18 Offset: 0x1825D18 VA: 0x1825D18 Slot: 34
	public override int get_minWidth() { }

	// RVA: 0x1825ED8 Offset: 0x1825ED8 VA: 0x1825ED8 Slot: 35
	public override int get_minHeight() { }

	// RVA: 0x1826098 Offset: 0x1826098 VA: 0x1826098 Slot: 23
	public override Vector4 get_drawingDimensions() { }

	// RVA: 0x1826484 Offset: 0x1826484 VA: 0x1826484 Slot: 41
	public override bool get_premultipliedAlpha() { }

	// RVA: 0x1825A04 Offset: 0x1825A04 VA: 0x1825A04
	public UISpriteData GetAtlasSprite() { }

	// RVA: 0x1825934 Offset: 0x1825934 VA: 0x1825934
	protected void SetAtlasSprite(UISpriteData sp) { }

	// RVA: 0x1826524 Offset: 0x1826524 VA: 0x1826524 Slot: 33
	public override void MakePixelPerfect() { }

	// RVA: 0x1826744 Offset: 0x1826744 VA: 0x1826744 Slot: 15
	protected override void OnInit() { }

	// RVA: 0x1826760 Offset: 0x1826760 VA: 0x1826760 Slot: 21
	protected override void OnUpdate() { }

	// RVA: 0x18267A4 Offset: 0x18267A4 VA: 0x18267A4 Slot: 38
	public override void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }

	// RVA: 0x1826BC0 Offset: 0x1826BC0 VA: 0x1826BC0
	private void OnDestroy() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2D304 Offset: 0xC2D304 VA: 0xC2D304
[RequireComponent] // RVA: 0xC2D304 Offset: 0xC2D304 VA: 0xC2D304
[AddComponentMenu] // RVA: 0xC2D304 Offset: 0xC2D304 VA: 0xC2D304
public class UISpriteAnimation : MonoBehaviour // TypeDefIndex: 12226
{
	// Fields
	[HideInInspector] // RVA: 0xC86334 Offset: 0xC86334 VA: 0xC86334
	[SerializeField] // RVA: 0xC86334 Offset: 0xC86334 VA: 0xC86334
	protected int mFPS; // 0x18
	[HideInInspector] // RVA: 0xC8636C Offset: 0xC8636C VA: 0xC8636C
	[SerializeField] // RVA: 0xC8636C Offset: 0xC8636C VA: 0xC8636C
	protected string mPrefix; // 0x20
	[HideInInspector] // RVA: 0xC863A4 Offset: 0xC863A4 VA: 0xC863A4
	[SerializeField] // RVA: 0xC863A4 Offset: 0xC863A4 VA: 0xC863A4
	protected bool mLoop; // 0x28
	[HideInInspector] // RVA: 0xC863DC Offset: 0xC863DC VA: 0xC863DC
	[SerializeField] // RVA: 0xC863DC Offset: 0xC863DC VA: 0xC863DC
	protected bool mSnap; // 0x29
	protected UISprite mSprite; // 0x30
	protected float mDelta; // 0x38
	protected int mIndex; // 0x3C
	protected bool mActive; // 0x40
	protected List<string> mSpriteNames; // 0x48

	// Properties
	public int frames { get; }
	public int framesPerSecond { get; set; }
	public string namePrefix { get; set; }
	public bool loop { get; set; }
	public bool isPlaying { get; }

	// Methods

	// RVA: 0x1826DF0 Offset: 0x1826DF0 VA: 0x1826DF0
	public void .ctor() { }

	// RVA: 0x1826EA8 Offset: 0x1826EA8 VA: 0x1826EA8
	public int get_frames() { }

	// RVA: 0x1826F08 Offset: 0x1826F08 VA: 0x1826F08
	public int get_framesPerSecond() { }

	// RVA: 0x1826F10 Offset: 0x1826F10 VA: 0x1826F10
	public void set_framesPerSecond(int value) { }

	// RVA: 0x1826F18 Offset: 0x1826F18 VA: 0x1826F18
	public string get_namePrefix() { }

	// RVA: 0x1826F20 Offset: 0x1826F20 VA: 0x1826F20
	public void set_namePrefix(string value) { }

	// RVA: 0x1827278 Offset: 0x1827278 VA: 0x1827278
	public bool get_loop() { }

	// RVA: 0x1827280 Offset: 0x1827280 VA: 0x1827280
	public void set_loop(bool value) { }

	// RVA: 0x182728C Offset: 0x182728C VA: 0x182728C
	public bool get_isPlaying() { }

	// RVA: 0x1827294 Offset: 0x1827294 VA: 0x1827294 Slot: 4
	protected virtual void Start() { }

	// RVA: 0x1827298 Offset: 0x1827298 VA: 0x1827298 Slot: 5
	protected virtual void Update() { }

	// RVA: 0x1826FBC Offset: 0x1826FBC VA: 0x1826FBC
	public void RebuildSpriteList() { }

	// RVA: 0x1827448 Offset: 0x1827448 VA: 0x1827448
	public void Play() { }

	// RVA: 0x1827454 Offset: 0x1827454 VA: 0x1827454
	public void Pause() { }

	// RVA: 0x182745C Offset: 0x182745C VA: 0x182745C
	public void ResetToBeginning() { }
}

// Namespace: 
[Serializable]
public class UISpriteData // TypeDefIndex: 12227
{
	// Fields
	public string name; // 0x10
	public int x; // 0x18
	public int y; // 0x1C
	public int width; // 0x20
	public int height; // 0x24
	public int borderLeft; // 0x28
	public int borderRight; // 0x2C
	public int borderTop; // 0x30
	public int borderBottom; // 0x34
	public int paddingLeft; // 0x38
	public int paddingRight; // 0x3C
	public int paddingTop; // 0x40
	public int paddingBottom; // 0x44

	// Properties
	public bool hasBorder { get; }
	public bool hasPadding { get; }

	// Methods

	// RVA: 0x1827598 Offset: 0x1827598 VA: 0x1827598
	public void .ctor() { }

	// RVA: 0x1826724 Offset: 0x1826724 VA: 0x1826724
	public bool get_hasBorder() { }

	// RVA: 0x18275F0 Offset: 0x18275F0 VA: 0x18275F0
	public bool get_hasPadding() { }

	// RVA: 0x1827610 Offset: 0x1827610 VA: 0x1827610
	public void SetRect(int x, int y, int width, int height) { }

	// RVA: 0x182761C Offset: 0x182761C VA: 0x182761C
	public void SetPadding(int left, int bottom, int right, int top) { }

	// RVA: 0x1827628 Offset: 0x1827628 VA: 0x1827628
	public void SetBorder(int left, int bottom, int right, int top) { }

	// RVA: 0x1827634 Offset: 0x1827634 VA: 0x1827634
	public void CopyFrom(UISpriteData sd) { }

	// RVA: 0x18277BC Offset: 0x18277BC VA: 0x18277BC
	public void CopyBorderFrom(UISpriteData sd) { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2D39C Offset: 0xC2D39C VA: 0xC2D39C
[AddComponentMenu] // RVA: 0xC2D39C Offset: 0xC2D39C VA: 0xC2D39C
public class UIStretch : MonoBehaviour // TypeDefIndex: 12228
{
	// Fields
	public Camera uiCamera; // 0x18
	public GameObject container; // 0x20
	public UIStretch.Style style; // 0x28
	public bool runOnlyOnce; // 0x2C
	public Vector2 relativeSize; // 0x30
	public Vector2 initialSize; // 0x38
	public Vector2 borderPadding; // 0x40
	[HideInInspector] // RVA: 0xC86414 Offset: 0xC86414 VA: 0xC86414
	[SerializeField] // RVA: 0xC86414 Offset: 0xC86414 VA: 0xC86414
	private UIWidget widgetContainer; // 0x48
	private Transform mTrans; // 0x50
	private UIWidget mWidget; // 0x58
	private UISprite mSprite; // 0x60
	private UIPanel mPanel; // 0x68
	private UIRoot mRoot; // 0x70
	private Animation mAnim; // 0x78
	private Rect mRect; // 0x80
	private bool mStarted; // 0x90

	// Methods

	// RVA: 0x1AE5848 Offset: 0x1AE5848 VA: 0x1AE5848
	public void .ctor() { }

	// RVA: 0x1AE58DC Offset: 0x1AE58DC VA: 0x1AE58DC
	private void Awake() { }

	// RVA: 0x1AE5A70 Offset: 0x1AE5A70 VA: 0x1AE5A70
	private void OnDestroy() { }

	// RVA: 0x1AE5B90 Offset: 0x1AE5B90 VA: 0x1AE5B90
	private void ScreenSizeChanged() { }

	// RVA: 0x1AE67AC Offset: 0x1AE67AC VA: 0x1AE67AC
	private void Start() { }

	// RVA: 0x1AE5BA8 Offset: 0x1AE5BA8 VA: 0x1AE5BA8
	private void Update() { }
}

// Namespace: 
public enum UIStretch.Style // TypeDefIndex: 12229
{
	// Fields
	public int value__; // 0x0
	public const UIStretch.Style None = 0;
	public const UIStretch.Style Horizontal = 1;
	public const UIStretch.Style Vertical = 2;
	public const UIStretch.Style Both = 3;
	public const UIStretch.Style BasedOnHeight = 4;
	public const UIStretch.Style FillKeepingRatio = 5;
	public const UIStretch.Style FitInternalKeepingRatio = 6;
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2D3E8 Offset: 0xC2D3E8 VA: 0xC2D3E8
public class UITextList : MonoBehaviour // TypeDefIndex: 12230
{
	// Fields
	public UILabel textLabel; // 0x18
	public UIProgressBar scrollBar; // 0x20
	public UITextList.Style style; // 0x28
	public int paragraphHistory; // 0x2C
	protected char[] mSeparator; // 0x30
	protected BetterList<UITextList.Paragraph> mParagraphs; // 0x38
	protected float mScroll; // 0x40
	protected int mTotalLines; // 0x44
	protected int mLastWidth; // 0x48
	protected int mLastHeight; // 0x4C

	// Properties
	public bool isValid { get; }
	public float scrollValue { get; set; }
	protected float lineHeight { get; }
	protected int scrollHeight { get; }

	// Methods

	// RVA: 0x1AE85E4 Offset: 0x1AE85E4 VA: 0x1AE85E4
	public void .ctor() { }

	// RVA: 0x1AE86A0 Offset: 0x1AE86A0 VA: 0x1AE86A0
	public bool get_isValid() { }

	// RVA: 0x1AE877C Offset: 0x1AE877C VA: 0x1AE877C
	public float get_scrollValue() { }

	// RVA: 0x1AE8784 Offset: 0x1AE8784 VA: 0x1AE8784
	public void set_scrollValue(float value) { }

	// RVA: 0x1AE8BC8 Offset: 0x1AE8BC8 VA: 0x1AE8BC8
	protected float get_lineHeight() { }

	// RVA: 0x1AE8C8C Offset: 0x1AE8C8C VA: 0x1AE8C8C
	protected int get_scrollHeight() { }

	// RVA: 0x1AE8D54 Offset: 0x1AE8D54 VA: 0x1AE8D54
	public void Clear() { }

	// RVA: 0x1AE8DBC Offset: 0x1AE8DBC VA: 0x1AE8DBC
	private void Start() { }

	// RVA: 0x1AE9258 Offset: 0x1AE9258 VA: 0x1AE9258
	private void Update() { }

	// RVA: 0x1AE9698 Offset: 0x1AE9698 VA: 0x1AE9698
	public void OnScroll(float val) { }

	// RVA: 0x1AE96FC Offset: 0x1AE96FC VA: 0x1AE96FC
	public void OnDrag(Vector2 delta) { }

	// RVA: 0x1AE9760 Offset: 0x1AE9760 VA: 0x1AE9760
	private void OnScrollBar() { }

	// RVA: 0x1AE97D4 Offset: 0x1AE97D4 VA: 0x1AE97D4
	public void Add(string text) { }

	// RVA: 0x1AE97DC Offset: 0x1AE97DC VA: 0x1AE97DC
	protected void Add(string text, bool updateVisible) { }

	// RVA: 0x1AE930C Offset: 0x1AE930C VA: 0x1AE930C
	protected void Rebuild() { }

	// RVA: 0x1AE8894 Offset: 0x1AE8894 VA: 0x1AE8894
	protected void UpdateVisibleText() { }
}

// Namespace: 
public enum UITextList.Style // TypeDefIndex: 12231
{
	// Fields
	public int value__; // 0x0
	public const UITextList.Style Text = 0;
	public const UITextList.Style Chat = 1;
}

// Namespace: 
protected class UITextList.Paragraph // TypeDefIndex: 12232
{
	// Fields
	public string text; // 0x10
	public string[] lines; // 0x18

	// Methods

	// RVA: 0x1AE98FC Offset: 0x1AE98FC VA: 0x1AE98FC
	public void .ctor() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2D420 Offset: 0xC2D420 VA: 0xC2D420
[AddComponentMenu] // RVA: 0xC2D420 Offset: 0xC2D420 VA: 0xC2D420
public class UITexture : UIBasicSprite // TypeDefIndex: 12233
{
	// Fields
	[HideInInspector] // RVA: 0xC8644C Offset: 0xC8644C VA: 0xC8644C
	[SerializeField] // RVA: 0xC8644C Offset: 0xC8644C VA: 0xC8644C
	private Rect mRect; // 0x1C8
	[HideInInspector] // RVA: 0xC86484 Offset: 0xC86484 VA: 0xC86484
	[SerializeField] // RVA: 0xC86484 Offset: 0xC86484 VA: 0xC86484
	private Texture mTexture; // 0x1D8
	[HideInInspector] // RVA: 0xC864BC Offset: 0xC864BC VA: 0xC864BC
	[SerializeField] // RVA: 0xC864BC Offset: 0xC864BC VA: 0xC864BC
	private Material mMat; // 0x1E0
	[HideInInspector] // RVA: 0xC864F4 Offset: 0xC864F4 VA: 0xC864F4
	[SerializeField] // RVA: 0xC864F4 Offset: 0xC864F4 VA: 0xC864F4
	private Shader mShader; // 0x1E8
	[HideInInspector] // RVA: 0xC8652C Offset: 0xC8652C VA: 0xC8652C
	[SerializeField] // RVA: 0xC8652C Offset: 0xC8652C VA: 0xC8652C
	private Vector4 mBorder; // 0x1F0
	[HideInInspector] // RVA: 0xC86564 Offset: 0xC86564 VA: 0xC86564
	[SerializeField] // RVA: 0xC86564 Offset: 0xC86564 VA: 0xC86564
	private bool mFixedAspect; // 0x200
	private int mPMA; // 0x204

	// Properties
	public override Texture mainTexture { get; set; }
	public override Material material { get; set; }
	public override Shader shader { get; set; }
	public override bool premultipliedAlpha { get; }
	public override Vector4 border { get; set; }
	public Rect uvRect { get; set; }
	public override Vector4 drawingDimensions { get; }
	public bool fixedAspect { get; set; }

	// Methods

	// RVA: 0x1AE9904 Offset: 0x1AE9904 VA: 0x1AE9904
	public void .ctor() { }

	// RVA: 0x1AE99F4 Offset: 0x1AE99F4 VA: 0x1AE99F4 Slot: 26
	public override Texture get_mainTexture() { }

	// RVA: 0x1AE9ADC Offset: 0x1AE9ADC VA: 0x1AE9ADC Slot: 27
	public override void set_mainTexture(Texture value) { }

	// RVA: 0x1AE9CE0 Offset: 0x1AE9CE0 VA: 0x1AE9CE0 Slot: 24
	public override Material get_material() { }

	// RVA: 0x1AE9CE8 Offset: 0x1AE9CE8 VA: 0x1AE9CE8 Slot: 25
	public override void set_material(Material value) { }

	// RVA: 0x1AE9DA0 Offset: 0x1AE9DA0 VA: 0x1AE9DA0 Slot: 28
	public override Shader get_shader() { }

	// RVA: 0x1AE9E98 Offset: 0x1AE9E98 VA: 0x1AE9E98 Slot: 29
	public override void set_shader(Shader value) { }

	// RVA: 0x1AE9FFC Offset: 0x1AE9FFC VA: 0x1AE9FFC Slot: 41
	public override bool get_premultipliedAlpha() { }

	// RVA: 0x1AEA15C Offset: 0x1AEA15C VA: 0x1AEA15C Slot: 36
	public override Vector4 get_border() { }

	// RVA: 0x1AEA170 Offset: 0x1AEA170 VA: 0x1AEA170 Slot: 37
	public override void set_border(Vector4 value) { }

	// RVA: 0x1AEA278 Offset: 0x1AEA278 VA: 0x1AEA278
	public Rect get_uvRect() { }

	// RVA: 0x1AEA28C Offset: 0x1AEA28C VA: 0x1AEA28C
	public void set_uvRect(Rect value) { }

	// RVA: 0x1AEA32C Offset: 0x1AEA32C VA: 0x1AEA32C Slot: 23
	public override Vector4 get_drawingDimensions() { }

	// RVA: 0x1AEA5EC Offset: 0x1AEA5EC VA: 0x1AEA5EC
	public bool get_fixedAspect() { }

	// RVA: 0x1AEA5F4 Offset: 0x1AEA5F4 VA: 0x1AEA5F4
	public void set_fixedAspect(bool value) { }

	// RVA: 0x1AEA680 Offset: 0x1AEA680 VA: 0x1AEA680 Slot: 33
	public override void MakePixelPerfect() { }

	// RVA: 0x1AEAAB0 Offset: 0x1AEAAB0 VA: 0x1AEAAB0 Slot: 21
	protected override void OnUpdate() { }

	// RVA: 0x1AEADCC Offset: 0x1AEADCC VA: 0x1AEADCC Slot: 38
	public override void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }
}

// Namespace: 
[AddComponentMenu] // RVA: 0xC2D46C Offset: 0xC2D46C VA: 0xC2D46C
public class UITooltip : MonoBehaviour // TypeDefIndex: 12234
{
	// Fields
	protected static UITooltip mInstance; // 0x0
	public Camera uiCamera; // 0x18
	public UILabel text; // 0x20
	public UISprite background; // 0x28
	public float appearSpeed; // 0x30
	public bool scalingTransitions; // 0x34
	protected GameObject mHover; // 0x38
	protected Transform mTrans; // 0x40
	protected float mTarget; // 0x48
	protected float mCurrent; // 0x4C
	protected Vector3 mPos; // 0x50
	protected Vector3 mSize; // 0x5C
	protected UIWidget[] mWidgets; // 0x68

	// Properties
	public static bool isVisible { get; }

	// Methods

	// RVA: 0x1AECCF8 Offset: 0x1AECCF8 VA: 0x1AECCF8
	public void .ctor() { }

	// RVA: 0x1AECD80 Offset: 0x1AECD80 VA: 0x1AECD80
	public static bool get_isVisible() { }

	// RVA: 0x1AECE34 Offset: 0x1AECE34 VA: 0x1AECE34
	private void Awake() { }

	// RVA: 0x1AECE88 Offset: 0x1AECE88 VA: 0x1AECE88
	private void OnDestroy() { }

	// RVA: 0x1AECED8 Offset: 0x1AECED8 VA: 0x1AECED8 Slot: 4
	protected virtual void Start() { }

	// RVA: 0x1AED008 Offset: 0x1AED008 VA: 0x1AED008 Slot: 5
	protected virtual void Update() { }

	// RVA: 0x1AED298 Offset: 0x1AED298 VA: 0x1AED298 Slot: 6
	protected virtual void SetAlpha(float val) { }

	// RVA: 0x1AED40C Offset: 0x1AED40C VA: 0x1AED40C Slot: 7
	protected virtual void SetText(string tooltipText) { }

	[ObsoleteAttribute] // RVA: 0xCD7A20 Offset: 0xCD7A20 VA: 0xCD7A20
	// RVA: 0x1AEDAEC Offset: 0x1AEDAEC VA: 0x1AEDAEC
	public static void ShowText(string text) { }

	// RVA: 0x1AEDBB4 Offset: 0x1AEDBB4 VA: 0x1AEDBB4
	public static void Show(string text) { }

	// RVA: 0x1AEDC7C Offset: 0x1AEDC7C VA: 0x1AEDC7C
	public static void Hide() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC2D4A4 Offset: 0xC2D4A4 VA: 0xC2D4A4
[RequireComponent] // RVA: 0xC2D4A4 Offset: 0xC2D4A4 VA: 0xC2D4A4
[AddComponentMenu] // RVA: 0xC2D4A4 Offset: 0xC2D4A4 VA: 0xC2D4A4
public class UIViewport : MonoBehaviour // TypeDefIndex: 12235
{
	// Fields
	public Camera sourceCamera; // 0x18
	public Transform topLeft; // 0x20
	public Transform bottomRight; // 0x28
	public float fullSize; // 0x30
	private Camera mCam; // 0x38

	// Methods

	// RVA: 0x1AF51BC Offset: 0x1AF51BC VA: 0x1AF51BC
	public void .ctor() { }

	// RVA: 0x1AF51CC Offset: 0x1AF51CC VA: 0x1AF51CC
	private void Start() { }

	// RVA: 0x1AF5268 Offset: 0x1AF5268 VA: 0x1AF5268
	private void LateUpdate() { }
}

// Namespace: 
public class UIUnityRenderer : UIWidget // TypeDefIndex: 12236
{
	// Fields
	public bool allowSharedMaterial; // 0x180
	[HideInInspector] // RVA: 0xC8659C Offset: 0xC8659C VA: 0xC8659C
	[SerializeField] // RVA: 0xC8659C Offset: 0xC8659C VA: 0xC8659C
	private Renderer mRenderer; // 0x188
	[HideInInspector] // RVA: 0xC865D4 Offset: 0xC865D4 VA: 0xC865D4
	[SerializeField] // RVA: 0xC865D4 Offset: 0xC865D4 VA: 0xC865D4
	private int renderQueue; // 0x190
	[HideInInspector] // RVA: 0xC8660C Offset: 0xC8660C VA: 0xC8660C
	[SerializeField] // RVA: 0xC8660C Offset: 0xC8660C VA: 0xC8660C
	private Material[] mMats; // 0x198
	private bool createMat; // 0x1A0

	// Properties
	public Renderer cachedRenderer { get; }
	public override Material material { get; set; }
	public override Shader shader { get; set; }

	// Methods

	// RVA: 0x1AEF614 Offset: 0x1AEF614 VA: 0x1AEF614
	public void .ctor() { }

	// RVA: 0x1AEF620 Offset: 0x1AEF620 VA: 0x1AEF620
	public Renderer get_cachedRenderer() { }

	// RVA: 0x1AEF6B8 Offset: 0x1AEF6B8 VA: 0x1AEF6B8 Slot: 24
	public override Material get_material() { }

	// RVA: 0x1AEFD3C Offset: 0x1AEFD3C VA: 0x1AEFD3C Slot: 25
	public override void set_material(Material value) { }

	// RVA: 0x1AEFC10 Offset: 0x1AEFC10 VA: 0x1AEFC10
	public bool isEqualMaterials(Material[] a, Material[] b) { }

	// RVA: 0x1AEFE00 Offset: 0x1AEFE00 VA: 0x1AEFE00 Slot: 28
	public override Shader get_shader() { }

	// RVA: 0x1AEFEB8 Offset: 0x1AEFEB8 VA: 0x1AEFEB8 Slot: 29
	public override void set_shader(Shader value) { }

	// RVA: 0x1AEFA84 Offset: 0x1AEFA84 VA: 0x1AEFA84
	private bool ExistSharedMaterial0() { }

	// RVA: 0x1AEFB40 Offset: 0x1AEFB40 VA: 0x1AEFB40
	private bool CheckMaterial(Material[] mats) { }

	// RVA: 0x1AEFF7C Offset: 0x1AEFF7C VA: 0x1AEFF7C
	private void OnDestroy() { }

	// RVA: 0x1AF00A4 Offset: 0x1AF00A4 VA: 0x1AF00A4
	private void OnWillRenderObject() { }

	// RVA: 0x1AF0378 Offset: 0x1AF0378 VA: 0x1AF0378 Slot: 38
	public override void OnFill(BetterList<Vector3> verts, BetterList<Vector2> uvs, BetterList<Color32> cols) { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2D53C Offset: 0xC2D53C VA: 0xC2D53C
[TooltipAttribute] // RVA: 0xC2D53C Offset: 0xC2D53C VA: 0xC2D53C
public class NguiPlayTween : FsmStateAction // TypeDefIndex: 12237
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC86644 Offset: 0xC86644 VA: 0xC86644
	[CheckForComponentAttribute] // RVA: 0xC86644 Offset: 0xC86644 VA: 0xC86644
	[TooltipAttribute] // RVA: 0xC86644 Offset: 0xC86644 VA: 0xC86644
	public FsmOwnerDefault tweenTarget; // 0x50
	[TooltipAttribute] // RVA: 0xC866DC Offset: 0xC866DC VA: 0xC866DC
	public FsmInt tweenGroup; // 0x58
	[TooltipAttribute] // RVA: 0xC86714 Offset: 0xC86714 VA: 0xC86714
	public Direction playDirection; // 0x60
	[TooltipAttribute] // RVA: 0xC8674C Offset: 0xC8674C VA: 0xC8674C
	public FsmBool resetOnPlay; // 0x68
	[TooltipAttribute] // RVA: 0xC86784 Offset: 0xC86784 VA: 0xC86784
	public FsmBool resetIfDisabled; // 0x70
	[TooltipAttribute] // RVA: 0xC867BC Offset: 0xC867BC VA: 0xC867BC
	public EnableCondition ifDisabledOnPlay; // 0x78
	[TooltipAttribute] // RVA: 0xC867F4 Offset: 0xC867F4 VA: 0xC867F4
	public DisableCondition disableWhenFinished; // 0x7C
	[TooltipAttribute] // RVA: 0xC8682C Offset: 0xC8682C VA: 0xC8682C
	public FsmBool includeChildren; // 0x80
	[TooltipAttribute] // RVA: 0xC86864 Offset: 0xC86864 VA: 0xC86864
	public FsmEvent tweeningFinishedEvent; // 0x88
	private UITweener[] mTweens; // 0x90
	private GameObject _tweenTarget; // 0x98
	private int mActive; // 0xA0

	// Methods

	// RVA: 0x1B84D04 Offset: 0x1B84D04 VA: 0x1B84D04
	public void .ctor() { }

	// RVA: 0x1B84D0C Offset: 0x1B84D0C VA: 0x1B84D0C Slot: 28
	public override void Reset() { }

	// RVA: 0x1B84D5C Offset: 0x1B84D5C VA: 0x1B84D5C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1B85228 Offset: 0x1B85228 VA: 0x1B85228 Slot: 34
	public override void OnUpdate() { }

	// RVA: 0x1B84E60 Offset: 0x1B84E60 VA: 0x1B84E60
	public void PlayTweeners() { }

	// RVA: 0x1B85388 Offset: 0x1B85388 VA: 0x1B85388
	private void OnFinished() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2D59C Offset: 0xC2D59C VA: 0xC2D59C
[TooltipAttribute] // RVA: 0xC2D59C Offset: 0xC2D59C VA: 0xC2D59C
public class NguiTextEncodeColor : FsmStateAction // TypeDefIndex: 12238
{
	// Fields
	[RequiredFieldAttribute] // RVA: 0xC8689C Offset: 0xC8689C VA: 0xC8689C
	[TooltipAttribute] // RVA: 0xC8689C Offset: 0xC8689C VA: 0xC8689C
	public FsmColor color; // 0x50
	[RequiredFieldAttribute] // RVA: 0xC868E8 Offset: 0xC868E8 VA: 0xC868E8
	[UIHintAttribute] // RVA: 0xC868E8 Offset: 0xC868E8 VA: 0xC868E8
	[TooltipAttribute] // RVA: 0xC868E8 Offset: 0xC868E8 VA: 0xC868E8
	public FsmString colorString; // 0x58
	private Color _lastColor; // 0x60
	public bool everyFrame; // 0x70

	// Methods

	// RVA: 0x1C6F218 Offset: 0x1C6F218 VA: 0x1C6F218
	public void .ctor() { }

	// RVA: 0x1C6F220 Offset: 0x1C6F220 VA: 0x1C6F220 Slot: 28
	public override void Reset() { }

	// RVA: 0x1C6F22C Offset: 0x1C6F22C VA: 0x1C6F22C Slot: 32
	public override void OnEnter() { }

	// RVA: 0x1C6F33C Offset: 0x1C6F33C VA: 0x1C6F33C Slot: 34
	public override void OnUpdate() { }
}

// Namespace: HutongGames.PlayMaker.Actions
[ActionCategoryAttribute] // RVA: 0xC2D5FC Offset: 0xC2D5FC VA: 0xC2D5FC
[TooltipAttribute] // RVA: 0xC2D5FC Offset: 0xC2D5FC VA: 0xC2D5FC
public class NguiTextParseColor : FsmStateAction // TypeDefIndex: 12239
{
	// Fields
