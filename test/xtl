
	// RVA: 0x1F54BAC Offset: 0x1F54BAC VA: 0x1F54BAC
	public void Set(PartyOrganizationListViewItem item) { }

	// RVA: 0x1F54F20 Offset: 0x1F54F20 VA: 0x1F54F20
	public void Set(PartyServantListViewItem item) { }

	// RVA: 0x1F422D8 Offset: 0x1F422D8 VA: 0x1F422D8
	public void Modify() { }

	// RVA: 0x1F551B0 Offset: 0x1F551B0 VA: 0x1F551B0
	public void Modify(PartyServantListViewItem item) { }

	// RVA: 0x1F55494 Offset: 0x1F55494 VA: 0x1F55494
	public void Swap(PartyOrganizationListViewItem item) { }

	// RVA: 0x1F55B80 Offset: 0x1F55B80 VA: 0x1F55B80
	public void SwapEquip(PartyOrganizationListViewItem item) { }

	// RVA: 0x1F55BE8 Offset: 0x1F55BE8 VA: 0x1F55BE8
	public void Empty() { }

	// RVA: 0x1F55C1C Offset: 0x1F55C1C VA: 0x1F55C1C
	public int ClearEquip() { }

	// RVA: 0x1F55CC0 Offset: 0x1F55CC0 VA: 0x1F55CC0
	public void ClearFollower() { }

	// RVA: 0x1F55CC8 Offset: 0x1F55CC8 VA: 0x1F55CC8 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1F55CD0 Offset: 0x1F55CD0 VA: 0x1F55CD0
	public void CheckRestriction(PartyListViewItem partyItem, int num) { }

	// RVA: 0x1F55F9C Offset: 0x1F55F9C VA: 0x1F55F9C
	public bool CompMember(PartyOrganizationListViewItem item) { }

	// RVA: 0x1F49DB8 Offset: 0x1F49DB8 VA: 0x1F49DB8
	public long[] GetEquipList() { }

	// RVA: 0x1F5611C Offset: 0x1F5611C VA: 0x1F5611C
	public void SetEquipUserServantId(long userSvtId) { }

	// RVA: 0x1F56180 Offset: 0x1F56180 VA: 0x1F56180
	public int RemoveEquipUserServantId(long userSvtId) { }

	// RVA: 0x1F4130C Offset: 0x1F4130C VA: 0x1F4130C
	public bool get_IsFollower() { }

	// RVA: 0x1F5622C Offset: 0x1F5622C VA: 0x1F5622C
	public bool get_IsFixNpc() { }

	// RVA: 0x1F56234 Offset: 0x1F56234 VA: 0x1F56234
	public bool get_IsEmpty() { }

	// RVA: 0x1F56254 Offset: 0x1F56254 VA: 0x1F56254
	public bool get_IsEventJoin() { }

	// RVA: 0x1F49FC4 Offset: 0x1F49FC4 VA: 0x1F49FC4
	public bool get_IsLeave() { }

	// RVA: 0x1F3EE10 Offset: 0x1F3EE10 VA: 0x1F3EE10
	public UserServantEntity get_UserServant() { }

	// RVA: 0x1F3EE18 Offset: 0x1F3EE18 VA: 0x1F3EE18
	public FollowerInfo get_FollowerData() { }

	// RVA: 0x1F3EE20 Offset: 0x1F3EE20 VA: 0x1F3EE20
	public ServantLeaderInfo get_ServantLeader() { }

	// RVA: 0x1F3F654 Offset: 0x1F3F654 VA: 0x1F3F654
	public EquipTargetInfo get_EquipTarget1() { }

	// RVA: 0x1F49ECC Offset: 0x1F49ECC VA: 0x1F49ECC
	public ServantEntity get_Servant() { }

	// RVA: 0x1F49ED4 Offset: 0x1F49ED4 VA: 0x1F49ED4
	public ObscuredInt get_SvtId() { }

	// RVA: 0x1F56268 Offset: 0x1F56268 VA: 0x1F56268
	public string get_ServantName() { }

	// RVA: 0x1F46048 Offset: 0x1F46048 VA: 0x1F46048
	public string get_SvtNameText() { }

	// RVA: 0x1F49F54 Offset: 0x1F49F54 VA: 0x1F49F54
	public int get_Level() { }

	// RVA: 0x1F56390 Offset: 0x1F56390 VA: 0x1F56390
	public int get_MaxLevel() { }

	// RVA: 0x1F5640C Offset: 0x1F5640C VA: 0x1F5640C
	public int get_ClassId() { }

	// RVA: 0x1F56414 Offset: 0x1F56414 VA: 0x1F56414
	public int get_RarityId() { }

	// RVA: 0x1F5641C Offset: 0x1F5641C VA: 0x1F5641C
	public int get_ExceedCount() { }

	// RVA: 0x1F5648C Offset: 0x1F5648C VA: 0x1F5648C
	public int get_FrameType() { }

	// RVA: 0x1F49F4C Offset: 0x1F49F4C VA: 0x1F49F4C
	public int get_SvtLimitCount() { }

	// RVA: 0x1F56494 Offset: 0x1F56494 VA: 0x1F56494
	public int get_AdjustAtk() { }

	// RVA: 0x1F56504 Offset: 0x1F56504 VA: 0x1F56504
	public int get_AdjustHp() { }

	// RVA: 0x1F56574 Offset: 0x1F56574 VA: 0x1F56574
	public int get_MargeAtk() { }

	// RVA: 0x1F56654 Offset: 0x1F56654 VA: 0x1F56654
	public int get_MargeHp() { }

	// RVA: 0x1F56734 Offset: 0x1F56734 VA: 0x1F56734
	public int get_MargeCost() { }

	// RVA: 0x1F56764 Offset: 0x1F56764 VA: 0x1F56764
	public int get_MainCost() { }

	// RVA: 0x1F56784 Offset: 0x1F56784 VA: 0x1F56784
	public int get_EquipCost() { }

	// RVA: 0x1F3F504 Offset: 0x1F3F504 VA: 0x1F3F504
	public long get_EquipUserSvtId() { }

	// RVA: 0x1F3F5DC Offset: 0x1F3F5DC VA: 0x1F3F5DC
	public ObscuredInt get_EquipSvtId() { }

	// RVA: 0x1F567AC Offset: 0x1F567AC VA: 0x1F567AC
	public int get_EquipLimitCount() { }

	// RVA: 0x1F56878 Offset: 0x1F56878 VA: 0x1F56878
	public int get_EquipLimitCountMax() { }

	// RVA: 0x1F56890 Offset: 0x1F56890 VA: 0x1F56890
	public string get_EquipName() { }

	// RVA: 0x1F5691C Offset: 0x1F5691C VA: 0x1F5691C
	public int GetFriendPointUpVal() { }

	// RVA: 0x1F569A0 Offset: 0x1F569A0 VA: 0x1F569A0
	public bool get_IsEventUpVal() { }

	// RVA: 0x1F569A8 Offset: 0x1F569A8 VA: 0x1F569A8
	public EventMargeItemUpValInfo[] get_EventUpValItemList() { }

	// RVA: 0x1F569B0 Offset: 0x1F569B0 VA: 0x1F569B0
	public bool GetEventUpVal(out EventUpValInfo eventUpValInfo) { }

	// RVA: 0x1F49EC4 Offset: 0x1F49EC4 VA: 0x1F49EC4
	public QuestRestrictionInfo get_QuestRestriction() { }

	// RVA: 0x1F569C0 Offset: 0x1F569C0 VA: 0x1F569C0
	public bool get_IsSupportOnly() { }

	// RVA: 0x1F4A318 Offset: 0x1F4A318 VA: 0x1F4A318
	public bool get_IsQuestRestriction() { }

	// RVA: 0x1F4A384 Offset: 0x1F4A384 VA: 0x1F4A384
	public bool get_IsUniqueSvtRestriction() { }

	// RVA: 0x1F4A6AC Offset: 0x1F4A6AC VA: 0x1F4A6AC
	public bool get_IsFixedSupportPositionRestriction() { }

	// RVA: 0x1F4A6B4 Offset: 0x1F4A6B4 VA: 0x1F4A6B4
	public bool get_IsFixedMyServantPositionRestriction() { }

	// RVA: 0x1F56A04 Offset: 0x1F56A04 VA: 0x1F56A04
	public bool get_IsFixedMyServantPositionAgreement() { }

	// RVA: 0x1F569E0 Offset: 0x1F569E0 VA: 0x1F569E0
	public bool get_IsFixedMyServantSingle() { }

	// RVA: 0x1F424C8 Offset: 0x1F424C8 VA: 0x1F424C8
	public bool get_IsServantNumRestriction() { }

	// RVA: 0x1F52140 Offset: 0x1F52140 VA: 0x1F52140
	public bool get_IsFixMultipleNpcRestriction() { }

	// RVA: 0x1F52148 Offset: 0x1F52148 VA: 0x1F52148
	public bool get_IsFixMultipleNpc() { }

	// RVA: 0x1F52150 Offset: 0x1F52150 VA: 0x1F52150
	public bool get_IsNpcEditablePos() { }

	// RVA: 0x1F56A0C Offset: 0x1F56A0C VA: 0x1F56A0C
	public bool get_IsRestriction() { }

	// RVA: 0x1F56A3C Offset: 0x1F56A3C VA: 0x1F56A3C
	private bool IsEmptyConfigurable() { }

	// RVA: 0x1F56A4C Offset: 0x1F56A4C VA: 0x1F56A4C
	public string GetQuestRestrictionMessage() { }

	// RVA: 0x1F56C84 Offset: 0x1F56C84 VA: 0x1F56C84
	public string GetUniqueSvtRestrictionMessage() { }

	// RVA: 0x1F56D08 Offset: 0x1F56D08 VA: 0x1F56D08
	public string GetFixedSupportPositionRestrictionMessage() { }

	// RVA: 0x1F56D8C Offset: 0x1F56D8C VA: 0x1F56D8C
	public string GetFixedMyServantPositionRestrictionMessage() { }

	// RVA: 0x1F4A6BC Offset: 0x1F4A6BC VA: 0x1F4A6BC
	public long get_FatigureTime() { }

	// RVA: 0x1F56E10 Offset: 0x1F56E10 VA: 0x1F56E10
	public bool get_IsFatigureRecover() { }

	// RVA: 0x1F4A6C4 Offset: 0x1F4A6C4 VA: 0x1F4A6C4
	public void ClearFatigure() { }

	// RVA: 0x1F49C6C Offset: 0x1F49C6C VA: 0x1F49C6C
	public int[] GetCommandCardList() { }

	// RVA: 0x1F56E18 Offset: 0x1F56E18 VA: 0x1F56E18
	public int[] GetCommandCodeIdList() { }

	// RVA: 0x1F56E20 Offset: 0x1F56E20 VA: 0x1F56E20
	public string GetAssetName() { }

	// RVA: 0x1F56FA0 Offset: 0x1F56FA0 VA: 0x1F56FA0
	public int GetCorrectionIconId() { }

	// RVA: 0x1F57054 Offset: 0x1F57054 VA: 0x1F57054
	public bool get_IsConvertOverwriteImage() { }

	// RVA: 0x1F5705C Offset: 0x1F5705C VA: 0x1F5705C
	public int GetCardImageLimitCount() { }

	// RVA: 0x1F57108 Offset: 0x1F57108 VA: 0x1F57108
	public int GetDispImageLimitCount() { }

	// RVA: 0x1F571B4 Offset: 0x1F571B4 VA: 0x1F571B4
	public int GetCommandCardLimitCount() { }

	// RVA: 0x1F57260 Offset: 0x1F57260 VA: 0x1F57260
	public int GetIconLimitCount() { }

	// RVA: 0x1F5730C Offset: 0x1F5730C VA: 0x1F5730C
	public int GetPortraitLimitCount() { }

	// RVA: 0x1F57374 Offset: 0x1F57374 VA: 0x1F57374
	public bool IsFixCostume() { }

	// RVA: 0x1F573AC Offset: 0x1F573AC VA: 0x1F573AC
	public bool IsModifyFixCostume() { }

	// RVA: 0x1F46168 Offset: 0x1F46168 VA: 0x1F46168
	public string get_CostumeName() { }

	// RVA: 0x1F5741C Offset: 0x1F5741C VA: 0x1F5741C
	public long GetNpcFollowerServantId() { }

	// RVA: 0x1F4C100 Offset: 0x1F4C100 VA: 0x1F4C100
	public void SetNameLimitCount(int limit) { }

	// RVA: 0x1F424C0 Offset: 0x1F424C0 VA: 0x1F424C0
	public bool get_IsMyServantOrNpcRestriction() { }

	// RVA: 0x1F57424 Offset: 0x1F57424 VA: 0x1F57424
	public bool get_HaveIndividualityServant() { }

	// RVA: 0x1F5742C Offset: 0x1F5742C VA: 0x1F5742C
	public string GetMyServantOrNpcRestrictionMessage() { }
}

// Namespace: 
public class PartyOrganizationListViewItemDraw : MonoBehaviour // TypeDefIndex: 10436
{
	// Fields
	protected static int MESSAGE_X_SIZE_MAX; // 0x0
	protected static int CORRECTION_ICON_SINGLE_Y; // 0x4
	protected static int CORRECTION_ICON_BONUS_Y; // 0x8
	protected static int MESSAGE_SPACING_Y; // 0xC
	[SerializeField] // RVA: 0xCE0D38 Offset: 0xCE0D38 VA: 0xCE0D38
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xCE0D48 Offset: 0xCE0D48 VA: 0xCE0D48
	protected UISprite baseSprite; // 0x20
	[SerializeField] // RVA: 0xCE0D58 Offset: 0xCE0D58 VA: 0xCE0D58
	protected UISprite base2Sprite; // 0x28
	[SerializeField] // RVA: 0xCE0D68 Offset: 0xCE0D68 VA: 0xCE0D68
	protected ServantFaceIconComponent servantFaceIcon; // 0x30
	[SerializeField] // RVA: 0xCE0D78 Offset: 0xCE0D78 VA: 0xCE0D78
	protected UINarrowFigureTexture servantNarrowTexture; // 0x38
	[SerializeField] // RVA: 0xCE0D88 Offset: 0xCE0D88 VA: 0xCE0D88
	protected ServantClassIconComponent servantClassIcon; // 0x40
	[SerializeField] // RVA: 0xCE0D98 Offset: 0xCE0D98 VA: 0xCE0D98
	protected ServantClassCompatibilityIconComponent classCompatibilityIcon; // 0x48
	[SerializeField] // RVA: 0xCE0DA8 Offset: 0xCE0DA8 VA: 0xCE0DA8
	protected UISprite memberTypeBaseSprite; // 0x50
	[SerializeField] // RVA: 0xCE0DB8 Offset: 0xCE0DB8 VA: 0xCE0DB8
	protected UISprite memberTypeSprite; // 0x58
	[SerializeField] // RVA: 0xCE0DC8 Offset: 0xCE0DC8 VA: 0xCE0DC8
	protected UISprite supportSprite; // 0x60
	[SerializeField] // RVA: 0xCE0DD8 Offset: 0xCE0DD8 VA: 0xCE0DD8
	protected UILabel levelLabel; // 0x68
	[SerializeField] // RVA: 0xCE0DE8 Offset: 0xCE0DE8 VA: 0xCE0DE8
	protected UISprite raritySprite; // 0x70
	[SerializeField] // RVA: 0xCE0DF8 Offset: 0xCE0DF8 VA: 0xCE0DF8
	protected UILabel hpLabel; // 0x78
	[SerializeField] // RVA: 0xCE0E08 Offset: 0xCE0E08 VA: 0xCE0E08
	protected UILabel attackLabel; // 0x80
	[SerializeField] // RVA: 0xCE0E18 Offset: 0xCE0E18 VA: 0xCE0E18
	protected UILabel costLabel; // 0x88
	[SerializeField] // RVA: 0xCE0E28 Offset: 0xCE0E28 VA: 0xCE0E28
	protected SkillListTreasureDeviceComponent skillListTreasureDevice; // 0x90
	[SerializeField] // RVA: 0xCE0E38 Offset: 0xCE0E38 VA: 0xCE0E38
	protected AppendSkillListComponent appendSkillList; // 0x98
	[SerializeField] // RVA: 0xCE0E48 Offset: 0xCE0E48 VA: 0xCE0E48
	protected ServantCommandCardListComponent svtCommandCardList; // 0xA0
	[SerializeField] // RVA: 0xCE0E58 Offset: 0xCE0E58 VA: 0xCE0E58
	protected UISprite typeSprite; // 0xA8
	[SerializeField] // RVA: 0xCE0E68 Offset: 0xCE0E68 VA: 0xCE0E68
	protected UISprite noneEquipSprite; // 0xB0
	[SerializeField] // RVA: 0xCE0E78 Offset: 0xCE0E78 VA: 0xCE0E78
	private UISprite hideEquipSprite; // 0xB8
	[SerializeField] // RVA: 0xCE0E88 Offset: 0xCE0E88 VA: 0xCE0E88
	protected UIMeshSprite equipSprite; // 0xC0
	[SerializeField] // RVA: 0xCE0E98 Offset: 0xCE0E98 VA: 0xCE0E98
	protected UISprite equipLimitCountSprite; // 0xC8
	[SerializeField] // RVA: 0xCE0EA8 Offset: 0xCE0EA8 VA: 0xCE0EA8
	protected ShiningIconComponent bounusIcon; // 0xD0
	[SerializeField] // RVA: 0xCE0EB8 Offset: 0xCE0EB8 VA: 0xCE0EB8
	protected EventUpValIconComponent eventUpValIcon; // 0xD8
	[SerializeField] // RVA: 0xCE0EC8 Offset: 0xCE0EC8 VA: 0xCE0EC8
	protected UISprite restrictionMaskSprite; // 0xE0
	[SerializeField] // RVA: 0xCE0ED8 Offset: 0xCE0ED8 VA: 0xCE0ED8
	protected UISprite restrictionMask2Sprite; // 0xE8
	[SerializeField] // RVA: 0xCE0EE8 Offset: 0xCE0EE8 VA: 0xCE0EE8
	protected UILabel restrictionMaskMessageText; // 0xF0
	[SerializeField] // RVA: 0xCE0EF8 Offset: 0xCE0EF8 VA: 0xCE0EF8
	private UISprite fixNpcMessageFrameSprite; // 0xF8
	[SerializeField] // RVA: 0xCE0F08 Offset: 0xCE0F08 VA: 0xCE0F08
	private UILabel fixNpcMessageText; // 0x100
	[SerializeField] // RVA: 0xCE0F18 Offset: 0xCE0F18 VA: 0xCE0F18
	protected GameObject restrictionWarningBase; // 0x108
	[SerializeField] // RVA: 0xCE0F28 Offset: 0xCE0F28 VA: 0xCE0F28
	protected FlashingIconComponent restrictionWarningIcon; // 0x110
	[SerializeField] // RVA: 0xCE0F38 Offset: 0xCE0F38 VA: 0xCE0F38
	protected UILabel restrictionWarningMessageLabel; // 0x118
	[SerializeField] // RVA: 0xCE0F48 Offset: 0xCE0F48 VA: 0xCE0F48
	protected UISprite correctionIconSprite; // 0x120
	[SerializeField] // RVA: 0xCE0F58 Offset: 0xCE0F58 VA: 0xCE0F58
	private GameObject swapGuide; // 0x128
	[SerializeField] // RVA: 0xCE0F68 Offset: 0xCE0F68 VA: 0xCE0F68
	private GameObject swapGuideEquip; // 0x130
	[SerializeField] // RVA: 0xCE0F78 Offset: 0xCE0F78 VA: 0xCE0F78
	protected SwitchUIWidgetComponent switchSkillInfo; // 0x138
	[SerializeField] // RVA: 0xCE0F88 Offset: 0xCE0F88 VA: 0xCE0F88
	protected UIWidget skillInfoUiWidget; // 0x140
	[SerializeField] // RVA: 0xCE0F98 Offset: 0xCE0F98 VA: 0xCE0F98
	protected UIWidget appendSkillInfoUiWidget; // 0x148
	private List<UIWidget> switchSkillUIList; // 0x150
	protected long updateTime; // 0x158
	protected PartyOrganizationListViewItem linkItem; // 0x160
	protected Vector3 baseRarityPosition; // 0x168
	protected int restrictionMaskMessageWidth; // 0x174
	protected int restrictionWarningMessageWidth; // 0x178
	protected Vector3 restrictionWarningCenter; // 0x17C
	protected UIAtlas baseDefaultUIAtlas; // 0x188
	protected UIAtlas base2DefaultUIAtlas; // 0x190

	// Methods

	// RVA: 0x19A5C74 Offset: 0x19A5C74 VA: 0x19A5C74
	public void .ctor() { }

	// RVA: 0x19A5C84 Offset: 0x19A5C84 VA: 0x19A5C84
	protected void Awake() { }

	// RVA: 0x19A5FB0 Offset: 0x19A5FB0 VA: 0x19A5FB0
	public void ClearItem() { }

	// RVA: 0x19A646C Offset: 0x19A646C VA: 0x19A646C
	public void SetItem(PartyOrganizationListViewItem item, PartyOrganizationListViewItemDraw.DispMode mode) { }

	// RVA: 0x19AA758 Offset: 0x19AA758 VA: 0x19AA758
	private void SetClassCompatibilityIcon(PartyOrganizationListViewItem item, bool isClear) { }

	// RVA: 0x19A6158 Offset: 0x19A6158 VA: 0x19A6158
	protected void ClearMessage() { }

	// RVA: 0x19AA934 Offset: 0x19AA934 VA: 0x19AA934
	protected void SetMessage(string message, Vector3 messagePos, bool isScale = False, bool isFixNpc = False, bool isMyServantOrNpc = False) { }

	// RVA: 0x19A95F4 Offset: 0x19A95F4 VA: 0x19A95F4
	protected void SetMaskMessage(string message, Vector3 messagePos, bool isScale = False) { }

	// RVA: 0x19AB500 Offset: 0x19AB500 VA: 0x19AB500
	protected void SetMask2Message(string message, Vector3 messagePos, bool isScale = False, string maskeName = "img_frames_mask04", bool isFatigue = False) { }

	// RVA: 0x19A9AF8 Offset: 0x19A9AF8 VA: 0x19A9AF8
	protected void SetWarningMessage(string message, bool isScale = False) { }

	// RVA: 0x19A9FC8 Offset: 0x19A9FC8 VA: 0x19A9FC8
	protected void SetWarning2Message(string message, bool isScale = False) { }

	// RVA: 0x19ABA38 Offset: 0x19ABA38 VA: 0x19ABA38
	public void SetInput(PartyOrganizationListViewItem item, bool isInput) { }

	// RVA: 0x19ABA3C Offset: 0x19ABA3C VA: 0x19ABA3C
	protected void Update() { }

	// RVA: 0x19ABAD8 Offset: 0x19ABAD8 VA: 0x19ABAD8
	public void UpdateDisp(PartyOrganizationListViewItem item) { }

	// RVA: 0x19AA54C Offset: 0x19AA54C VA: 0x19AA54C
	protected void SetFatigueMask(PartyOrganizationListViewItem item) { }

	// RVA: 0x19ABB98 Offset: 0x19ABB98 VA: 0x19ABB98
	public void AddDepth(int v) { }

	// RVA: 0x19ABC98 Offset: 0x19ABC98 VA: 0x19ABC98
	public void SetDispEquipOnly(bool isDisp) { }

	// RVA: 0x19AB248 Offset: 0x19AB248 VA: 0x19AB248
	public void SetDispSwapGuide(bool isDisp) { }

	// RVA: 0x19AC3DC Offset: 0x19AC3DC VA: 0x19AC3DC
	private static void .cctor() { }
}

// Namespace: 
public enum PartyOrganizationListViewItemDraw.DispMode // TypeDefIndex: 10437
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationListViewItemDraw.DispMode INVISIBLE = 0;
	public const PartyOrganizationListViewItemDraw.DispMode INVALID = 1;
	public const PartyOrganizationListViewItemDraw.DispMode VALID = 2;
	public const PartyOrganizationListViewItemDraw.DispMode INPUT = 3;
	public const PartyOrganizationListViewItemDraw.DispMode DRAG_INVISIBLE = 4;
}

// Namespace: 
public class PartyOrganizationListViewManager : ListViewManager // TypeDefIndex: 10438
{
	// Fields
	[SerializeField] // RVA: 0xCE0FA8 Offset: 0xCE0FA8 VA: 0xCE0FA8
	protected GameObject explanationBase; // 0x138
	[SerializeField] // RVA: 0xCE0FB8 Offset: 0xCE0FB8 VA: 0xCE0FB8
	protected UILabel explanationLabel; // 0x140
	[SerializeField] // RVA: 0xCE0FC8 Offset: 0xCE0FC8 VA: 0xCE0FC8
	protected GameObject titleExplanationBase; // 0x148
	[SerializeField] // RVA: 0xCE0FD8 Offset: 0xCE0FD8 VA: 0xCE0FD8
	protected UIRangeLabel titleExplanationLabel; // 0x150
	protected PartyOrganizationListViewManager.InitMode initMode; // 0x158
	[CompilerGeneratedAttribute] // RVA: 0xCE0FE8 Offset: 0xCE0FE8 VA: 0xCE0FE8
	[DebuggerBrowsableAttribute] // RVA: 0xCE0FE8 Offset: 0xCE0FE8 VA: 0xCE0FE8
	private PartyOrganizationListViewManager.CallbackFunc callbackFunc; // 0x160
	[CompilerGeneratedAttribute] // RVA: 0xCE1024 Offset: 0xCE1024 VA: 0xCE1024
	[DebuggerBrowsableAttribute] // RVA: 0xCE1024 Offset: 0xCE1024 VA: 0xCE1024
	private Action callbackFunc2; // 0x168
	protected int callbackCount; // 0x170
	protected PartyListViewItem.MenuKind menuKind; // 0x174
	protected PartyListViewItem basePartyItem; // 0x178
	protected PartyListViewItem partyItem; // 0x180

	// Properties
	public List<PartyOrganizationListViewObject> ObjectList { get; }
	public List<PartyOrganizationListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x19AC45C Offset: 0x19AC45C VA: 0x19AC45C
	public void .ctor() { }

	// RVA: 0x19AC464 Offset: 0x19AC464 VA: 0x19AC464
	protected void add_callbackFunc(PartyOrganizationListViewManager.CallbackFunc value) { }

	// RVA: 0x19AC554 Offset: 0x19AC554 VA: 0x19AC554
	protected void remove_callbackFunc(PartyOrganizationListViewManager.CallbackFunc value) { }

	// RVA: 0x19AC644 Offset: 0x19AC644 VA: 0x19AC644
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x19AC734 Offset: 0x19AC734 VA: 0x19AC734
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x19AC824 Offset: 0x19AC824 VA: 0x19AC824
	public List<PartyOrganizationListViewObject> get_ObjectList() { }

	// RVA: 0x19AC9F0 Offset: 0x19AC9F0 VA: 0x19AC9F0
	public List<PartyOrganizationListViewObject> get_ClippingObjectList() { }

	// RVA: 0x19ACCD0 Offset: 0x19ACCD0 VA: 0x19ACCD0
	public PartyListViewItem GetPartyItem() { }

	// RVA: 0x19ACCD8 Offset: 0x19ACCD8 VA: 0x19ACCD8
	public void ModifyItem() { }

	// RVA: 0x19AD174 Offset: 0x19AD174 VA: 0x19AD174
	public void CreateList(PartyListViewItem.MenuKind menuKind, PartyListViewItem partyItem, PartyListViewItem basePartyItem) { }

	// RVA: 0x19AD71C Offset: 0x19AD71C VA: 0x19AD71C
	public void DestroyList() { }

	// RVA: 0x19AD8C4 Offset: 0x19AD8C4 VA: 0x19AD8C4
	public PartyOrganizationListViewItem GetItem(int index) { }

	// RVA: 0x19AD96C Offset: 0x19AD96C VA: 0x19AD96C Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x19ADAE8 Offset: 0x19ADAE8 VA: 0x19ADAE8
	public void SetMode(PartyOrganizationListViewManager.InitMode mode, PartyOrganizationListViewManager.CallbackFunc callback) { }

	// RVA: 0x19AE208 Offset: 0x19AE208 VA: 0x19AE208
	public void SetMode(PartyOrganizationListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x19ADAF0 Offset: 0x19ADAF0 VA: 0x19ADAF0
	public void SetMode(PartyOrganizationListViewManager.InitMode mode) { }

	// RVA: 0x19AE2A4 Offset: 0x19AE2A4 VA: 0x19AE2A4
	protected void RequestListObject(PartyOrganizationListViewObject.InitMode mode, float delay) { }

	// RVA: 0x19ACD5C Offset: 0x19ACD5C VA: 0x19ACD5C
	protected void RequestListObject(PartyOrganizationListViewObject.InitMode mode) { }

	// RVA: 0x19AE50C Offset: 0x19AE50C VA: 0x19AE50C
	protected void RequestDropObject(PartyOrganizationListViewDropObject.InitMode mode, float delay) { }

	// RVA: 0x19ACF28 Offset: 0x19ACF28 VA: 0x19ACF28
	protected void RequestDropObject(PartyOrganizationListViewDropObject.InitMode mode) { }

	// RVA: 0x19AE76C Offset: 0x19AE76C VA: 0x19AE76C
	protected void RequestInto() { }

	// RVA: 0x19AE92C Offset: 0x19AE92C VA: 0x19AE92C
	protected void OnMoveEnd() { }

	// RVA: 0x19AE9F8 Offset: 0x19AE9F8 VA: 0x19AE9F8
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x19AE9FC Offset: 0x19AE9FC VA: 0x19AE9FC
	protected void OnClickListDropServant(ListViewObject obj) { }

	// RVA: 0x19AECA8 Offset: 0x19AECA8 VA: 0x19AECA8
	protected void OnClickListDropServantDetail(ListViewObject obj) { }

	// RVA: 0x19AF038 Offset: 0x19AF038 VA: 0x19AF038
	protected void EndShowServant(bool isDecide) { }

	// RVA: 0x19AF0EC Offset: 0x19AF0EC VA: 0x19AF0EC
	protected void EndShowServantWithQuest(bool isDecide, int questId) { }

	// RVA: 0x19AF1B8 Offset: 0x19AF1B8 VA: 0x19AF1B8
	protected void EndCloseShowServant() { }

	// RVA: 0x19AF1C4 Offset: 0x19AF1C4 VA: 0x19AF1C4
	protected void EndCloseShowServantQuestJump() { }

	// RVA: 0x19AF230 Offset: 0x19AF230 VA: 0x19AF230
	protected void OnClickListDropEquip(ListViewObject obj) { }

	// RVA: 0x19AF298 Offset: 0x19AF298 VA: 0x19AF298
	protected void OnClickListDropEquipDetail(ListViewObject obj) { }

	// RVA: 0x19AF5D8 Offset: 0x19AF5D8 VA: 0x19AF5D8
	protected void EndShowEquip(bool isDecide) { }

	// RVA: 0x19AF68C Offset: 0x19AF68C VA: 0x19AF68C
	protected void EndCloseShowEquip() { }

	// RVA: 0x19AF698 Offset: 0x19AF698 VA: 0x19AF698
	public void EndSwapEquip() { }

	// RVA: 0x19AF6BC Offset: 0x19AF6BC VA: 0x19AF6BC
	public bool IsCanDrag() { }

	// RVA: 0x19AF6CC Offset: 0x19AF6CC VA: 0x19AF6CC Slot: 7
	public override void ItemDragStart() { }

	// RVA: 0x19AF6EC Offset: 0x19AF6EC VA: 0x19AF6EC Slot: 8
	public override void ItemDragEnd() { }

	// RVA: 0x19AF70C Offset: 0x19AF70C VA: 0x19AF70C
	public bool IsItemDropSurface(ListViewDropInfo info) { }

	// RVA: 0x19AF8A0 Offset: 0x19AF8A0 VA: 0x19AF8A0
	public bool IsDropDropSurface(ListViewDropInfo info) { }

	// RVA: 0x19AFA38 Offset: 0x19AFA38 VA: 0x19AFA38
	public void SetDispSwapGuide(bool isDisp) { }
}

// Namespace: 
public enum PartyOrganizationListViewManager.InitMode // TypeDefIndex: 10439
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationListViewManager.InitMode NONE = 0;
	public const PartyOrganizationListViewManager.InitMode VALID = 1;
	public const PartyOrganizationListViewManager.InitMode INPUT = 2;
	public const PartyOrganizationListViewManager.InitMode INTO = 3;
	public const PartyOrganizationListViewManager.InitMode ENTER = 4;
	public const PartyOrganizationListViewManager.InitMode EXIT = 5;
	public const PartyOrganizationListViewManager.InitMode DETAIL_SERVANT = 6;
	public const PartyOrganizationListViewManager.InitMode DETAIL_EQUIP = 7;
	public const PartyOrganizationListViewManager.InitMode DRAG = 8;
	public const PartyOrganizationListViewManager.InitMode MODIFY = 9;
}

// Namespace: 
public enum PartyOrganizationListViewManager.ResultKind // TypeDefIndex: 10440
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationListViewManager.ResultKind LIST = 0;
	public const PartyOrganizationListViewManager.ResultKind SELECT_SERVANT = 1;
	public const PartyOrganizationListViewManager.ResultKind SELECT_EQUIP = 2;
	public const PartyOrganizationListViewManager.ResultKind SWAP_EQUIP = 3;
}

// Namespace: 
public sealed class PartyOrganizationListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 10441
{
	// Methods

	// RVA: 0x19AFB48 Offset: 0x19AFB48 VA: 0x19AFB48
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x19AEA64 Offset: 0x19AEA64 VA: 0x19AEA64 Slot: 11
	public virtual void Invoke(PartyOrganizationListViewManager.ResultKind kind, int result) { }

	// RVA: 0x19AFB58 Offset: 0x19AFB58 VA: 0x19AFB58 Slot: 12
	public virtual IAsyncResult BeginInvoke(PartyOrganizationListViewManager.ResultKind kind, int result, AsyncCallback callback, object object) { }

	// RVA: 0x19AFC00 Offset: 0x19AFC00 VA: 0x19AFC00 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class PartyOrganizationListViewObject : ListViewObject // TypeDefIndex: 10442
{
	// Fields
	protected PartyOrganizationListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCE1060 Offset: 0xCE1060 VA: 0xCE1060
	[DebuggerBrowsableAttribute] // RVA: 0xCE1060 Offset: 0xCE1060 VA: 0xCE1060
	private Action callbackFunc; // 0x70
	protected PartyOrganizationListViewItemDraw itemDraw; // 0x78
	protected PartyOrganizationListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x19AFC0C Offset: 0x19AFC0C VA: 0x19AFC0C
	public void .ctor() { }

	// RVA: 0x19AFC74 Offset: 0x19AFC74 VA: 0x19AFC74
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x19AFD60 Offset: 0x19AFD60 VA: 0x19AFD60
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x19AFE4C Offset: 0x19AFE4C VA: 0x19AFE4C
	protected void Awake() { }

	// RVA: 0x19AFEC0 Offset: 0x19AFEC0 VA: 0x19AFEC0
	private void OnDestroy() { }

	// RVA: 0x19ACC4C Offset: 0x19ACC4C VA: 0x19ACC4C
	public PartyOrganizationListViewItem GetItem() { }

	// RVA: 0x19AFF6C Offset: 0x19AFF6C VA: 0x19AFF6C Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x19AFF9C Offset: 0x19AFF9C VA: 0x19AFF9C Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x19AFF94 Offset: 0x19AFF94 VA: 0x19AFF94
	protected void InitItem() { }

	// RVA: 0x19AFFC4 Offset: 0x19AFFC4 VA: 0x19AFFC4 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x19B0074 Offset: 0x19B0074 VA: 0x19B0074 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x19B00FC Offset: 0x19B00FC VA: 0x19B00FC
	public GameObject CreateDragObject(int addDepth) { }

	// RVA: 0x19B01E4 Offset: 0x19B01E4 VA: 0x19B01E4
	public void Init(PartyOrganizationListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x19AE210 Offset: 0x19AE210 VA: 0x19AE210
	public void Init(PartyOrganizationListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x19AE484 Offset: 0x19AE484 VA: 0x19AE484
	public void Init(PartyOrganizationListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x19ADA64 Offset: 0x19ADA64 VA: 0x19ADA64
	public void Init(PartyOrganizationListViewObject.InitMode initMode) { }

	// RVA: 0x19B047C Offset: 0x19B047C VA: 0x19B047C
	protected void SetupDisp() { }

	// RVA: 0x19B058C Offset: 0x19B058C VA: 0x19B058C
	private void EventIntoStart(float delay) { }

	// RVA: 0x19B0840 Offset: 0x19B0840 VA: 0x19B0840
	private void EventIntoMove() { }

	// RVA: 0x19B09E0 Offset: 0x19B09E0 VA: 0x19B09E0
	private void EventIntoMove2() { }

	// RVA: 0x19B0AD0 Offset: 0x19B0AD0 VA: 0x19B0AD0
	private void EventEnterStart(float delay) { }

	// RVA: 0x19B0BA4 Offset: 0x19B0BA4 VA: 0x19B0BA4
	private void EventEnterMove() { }

	// RVA: 0x19B0DB8 Offset: 0x19B0DB8 VA: 0x19B0DB8
	private void EventEnterMove2() { }

	// RVA: 0x19B06F4 Offset: 0x19B06F4 VA: 0x19B06F4
	private void EventExitStart(float delay) { }

	// RVA: 0x19B0E54 Offset: 0x19B0E54 VA: 0x19B0E54
	private void EventExitMove() { }

	// RVA: 0x19B10D8 Offset: 0x19B10D8 VA: 0x19B10D8
	private void EventExitMove2() { }

	// RVA: 0x19B0AA8 Offset: 0x19B0AA8 VA: 0x19B0AA8
	protected void EventMoveEnd() { }
}

// Namespace: 
public enum PartyOrganizationListViewObject.InitMode // TypeDefIndex: 10443
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationListViewObject.InitMode INVISIBLE = 0;
	public const PartyOrganizationListViewObject.InitMode INVALID = 1;
	public const PartyOrganizationListViewObject.InitMode VALID = 2;
	public const PartyOrganizationListViewObject.InitMode INPUT = 3;
	public const PartyOrganizationListViewObject.InitMode INTO = 4;
	public const PartyOrganizationListViewObject.InitMode ENTER = 5;
	public const PartyOrganizationListViewObject.InitMode EXIT = 6;
	public const PartyOrganizationListViewObject.InitMode DRAG_VALID = 7;
	public const PartyOrganizationListViewObject.InitMode DRAG_INPUT = 8;
	public const PartyOrganizationListViewObject.InitMode MODIFY = 9;
}

// Namespace: 
protected enum PartyOrganizationListViewObject.State // TypeDefIndex: 10444
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationListViewObject.State INIT = 0;
	public const PartyOrganizationListViewObject.State IDLE = 1;
	public const PartyOrganizationListViewObject.State MOVE = 2;
	public const PartyOrganizationListViewObject.State INPUT = 3;
}

// Namespace: 
public class PartyOrganizationMenu : BaseMenu // TypeDefIndex: 10445
{
	// Fields
	protected static readonly int[] LAYOUT_POS_X_HINT; // 0x0
	[SerializeField] // RVA: 0xCE109C Offset: 0xCE109C VA: 0xCE109C
	protected PartyOrganizationListViewManager partyOrganizationListViewManager; // 0x58
	[SerializeField] // RVA: 0xCE10AC Offset: 0xCE10AC VA: 0xCE10AC
	protected PartyListViewIndicator partyListViewIndicator; // 0x60
	[SerializeField] // RVA: 0xCE10BC Offset: 0xCE10BC VA: 0xCE10BC
	protected GameObject mainDeckBase; // 0x68
	[SerializeField] // RVA: 0xCE10CC Offset: 0xCE10CC VA: 0xCE10CC
	protected UICommonButton partyCancelButton; // 0x70
	[SerializeField] // RVA: 0xCE10DC Offset: 0xCE10DC VA: 0xCE10DC
	protected UICommonButton partyRemoveButton; // 0x78
	[SerializeField] // RVA: 0xCE10EC Offset: 0xCE10EC VA: 0xCE10EC
	protected UICommonButton partyPointEventButton; // 0x80
	[SerializeField] // RVA: 0xCE10FC Offset: 0xCE10FC VA: 0xCE10FC
	protected UICommonButton partyDecideButton; // 0x88
	[SerializeField] // RVA: 0xCE110C Offset: 0xCE110C VA: 0xCE110C
	protected GameObject tutorialMaskBase; // 0x90
	[SerializeField] // RVA: 0xCE111C Offset: 0xCE111C VA: 0xCE111C
	protected PartyOrganizationChangeObject tutorialPartyOrganizationChangeEmptyObject; // 0x98
	[SerializeField] // RVA: 0xCE112C Offset: 0xCE112C VA: 0xCE112C
	protected UICommonButton tutorialPartyDecideButton; // 0xA0
	[SerializeField] // RVA: 0xCE113C Offset: 0xCE113C VA: 0xCE113C
	protected UICommonButton questInfoButton; // 0xA8
	[SerializeField] // RVA: 0xCE114C Offset: 0xCE114C VA: 0xCE114C
	protected UICommonButton hintDialogButton; // 0xB0
	protected PartyOrganizationMenu.Mode mode; // 0xB8
	protected PartyOrganizationMenu.State state; // 0xBC
	[CompilerGeneratedAttribute] // RVA: 0xCE115C Offset: 0xCE115C VA: 0xCE115C
	[DebuggerBrowsableAttribute] // RVA: 0xCE115C Offset: 0xCE115C VA: 0xCE115C
	private PartyOrganizationMenu.CallbackFunc callbackFunc; // 0xC0
	protected Action openCallbackFunc; // 0xC8
	protected Action closeCallbackFunc; // 0xD0
	protected PartyListViewItem.MenuKind menuKind; // 0xD8
	protected PartyListViewItem basePartyItem; // 0xE0
	protected PartyListViewItem partyItem; // 0xE8
	protected EventUpValSetupInfo setupInfo; // 0xF0
	protected QuestRestrictionInfo questRestrictionInfo; // 0xF8

	// Methods

	// RVA: 0x19B1174 Offset: 0x19B1174 VA: 0x19B1174
	public void .ctor() { }

	// RVA: 0x19B11DC Offset: 0x19B11DC VA: 0x19B11DC
	protected void add_callbackFunc(PartyOrganizationMenu.CallbackFunc value) { }

	// RVA: 0x19B12C8 Offset: 0x19B12C8 VA: 0x19B12C8
	protected void remove_callbackFunc(PartyOrganizationMenu.CallbackFunc value) { }

	// RVA: 0x19B13B4 Offset: 0x19B13B4 VA: 0x19B13B4
	public PartyListViewItem GetBaseItem() { }

	// RVA: 0x19B13BC Offset: 0x19B13BC VA: 0x19B13BC
	public PartyListViewItem GetItem() { }

	// RVA: 0x19B13C4 Offset: 0x19B13C4 VA: 0x19B13C4
	protected void ClearItem() { }

	// RVA: 0x19B1414 Offset: 0x19B1414 VA: 0x19B1414
	protected void SetItem(int friendBonusVal) { }

	// RVA: 0x19B14A4 Offset: 0x19B14A4 VA: 0x19B14A4
	protected void SetInput(bool isInput) { }

	// RVA: 0x19B1550 Offset: 0x19B1550 VA: 0x19B1550
	public void ModifyItem() { }

	// RVA: 0x19B1580 Offset: 0x19B1580 VA: 0x19B1580
	public void Init() { }

	// RVA: 0x19B15B0 Offset: 0x19B15B0 VA: 0x19B15B0
	public void Open(PartyListViewItem.MenuKind menuKind, PartyListViewItem basePartyItem, PartyListViewItem partyItem, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo, PartyOrganizationMenu.CallbackFunc callback, Action openCallback, PartyOrganizationMenu.Mode tutorialMode = 0, int friendBonusVal = 0) { }

	// RVA: 0x19B1ACC Offset: 0x19B1ACC VA: 0x19B1ACC
	protected void EndOpen() { }

	// RVA: 0x19B1DE0 Offset: 0x19B1DE0 VA: 0x19B1DE0
	protected void EndOpenTutorialArrow() { }

	// RVA: 0x19B1E1C Offset: 0x19B1E1C VA: 0x19B1E1C
	public void Close() { }

	// RVA: 0x19B1E24 Offset: 0x19B1E24 VA: 0x19B1E24
	public void Close(Action callback) { }

	// RVA: 0x19B1EB4 Offset: 0x19B1EB4 VA: 0x19B1EB4
	protected void EndClose() { }

	// RVA: 0x19B17A8 Offset: 0x19B17A8 VA: 0x19B17A8
	protected void SetupButton(bool isMove) { }

	// RVA: 0x19B20B4 Offset: 0x19B20B4 VA: 0x19B20B4
	protected void Callback(PartyOrganizationMenu.ResultKind result, int n = -1) { }

	// RVA: 0x19B2314 Offset: 0x19B2314 VA: 0x19B2314
	public void OnClickDecide() { }

	// RVA: 0x19B243C Offset: 0x19B243C VA: 0x19B243C
	protected void EndCloseTutorialArrowDecide() { }

	// RVA: 0x19B24DC Offset: 0x19B24DC VA: 0x19B24DC
	public void OnClickCancel() { }

	// RVA: 0x19B254C Offset: 0x19B254C VA: 0x19B254C
	public void OnClickRemove() { }

	// RVA: 0x19B25BC Offset: 0x19B25BC VA: 0x19B25BC
	public void OnClickInfomation() { }

	// RVA: 0x19B267C Offset: 0x19B267C VA: 0x19B267C
	public void OnClickPointEvent() { }

	// RVA: 0x19B273C Offset: 0x19B273C VA: 0x19B273C
	protected void OnClickItem(PartyOrganizationListViewManager.ResultKind result, int n) { }

	// RVA: 0x19B2AE4 Offset: 0x19B2AE4 VA: 0x19B2AE4
	public void OnClickQuestInfo() { }

	// RVA: 0x19B2BA4 Offset: 0x19B2BA4 VA: 0x19B2BA4
	public void SelectItem(PartyOrganizationListViewManager.ResultKind result, int selectMember) { }

	// RVA: 0x19B1F04 Offset: 0x19B1F04 VA: 0x19B1F04
	private bool IsHintDialog() { }

	// RVA: 0x19B2BB0 Offset: 0x19B2BB0 VA: 0x19B2BB0
	private static void .cctor() { }
}

// Namespace: 
public enum PartyOrganizationMenu.ResultKind // TypeDefIndex: 10446
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationMenu.ResultKind CANCEL = 0;
	public const PartyOrganizationMenu.ResultKind DECIDE = 1;
	public const PartyOrganizationMenu.ResultKind REMOVE = 2;
	public const PartyOrganizationMenu.ResultKind INFOMATION = 3;
	public const PartyOrganizationMenu.ResultKind EVENT_POINT = 4;
	public const PartyOrganizationMenu.ResultKind SELECT_SERVANT = 5;
	public const PartyOrganizationMenu.ResultKind SELECT_EQUIP = 6;
	public const PartyOrganizationMenu.ResultKind QUEST_INFORMATION = 7;
}

// Namespace: 
protected enum PartyOrganizationMenu.State // TypeDefIndex: 10447
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationMenu.State INIT = 0;
	public const PartyOrganizationMenu.State OPEN = 1;
	public const PartyOrganizationMenu.State INPUT = 2;
	public const PartyOrganizationMenu.State SELECTED = 3;
	public const PartyOrganizationMenu.State CLOSE = 4;
	public const PartyOrganizationMenu.State ENTER = 5;
	public const PartyOrganizationMenu.State TUTORIAL_OPEN = 6;
	public const PartyOrganizationMenu.State TUTORIAL = 7;
	public const PartyOrganizationMenu.State TUTORIAL_CLOSE = 8;
}

// Namespace: 
public enum PartyOrganizationMenu.Mode // TypeDefIndex: 10448
{
	// Fields
	public int value__; // 0x0
	public const PartyOrganizationMenu.Mode NONE = 0;
	public const PartyOrganizationMenu.Mode SELECT_SERVANT = 1;
	public const PartyOrganizationMenu.Mode SELECT_EQUIP = 2;
	public const PartyOrganizationMenu.Mode DETAIL_SERVANT = 3;
	public const PartyOrganizationMenu.Mode ORGANIZATION_GUIDE_DECIDE_SELECT = 4;
}

// Namespace: 
public sealed class PartyOrganizationMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 10449
{
	// Methods

	// RVA: 0x19B2C64 Offset: 0x19B2C64 VA: 0x19B2C64
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x19B20D0 Offset: 0x19B20D0 VA: 0x19B20D0 Slot: 11
	public virtual void Invoke(PartyOrganizationMenu.ResultKind result, int n) { }

	// RVA: 0x19B2C74 Offset: 0x19B2C74 VA: 0x19B2C74 Slot: 12
	public virtual IAsyncResult BeginInvoke(PartyOrganizationMenu.ResultKind result, int n, AsyncCallback callback, object object) { }

	// RVA: 0x19B2D1C Offset: 0x19B2D1C VA: 0x19B2D1C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class PartyOrganizationQuestInfoMenu : BaseDialog // TypeDefIndex: 10450
{
	// Fields
	[SerializeField] // RVA: 0xCE1198 Offset: 0xCE1198 VA: 0xCE1198
	private QuestInformationComponent questInfoWindow; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xCE11A8 Offset: 0xCE11A8 VA: 0xCE11A8
	[DebuggerBrowsableAttribute] // RVA: 0xCE11A8 Offset: 0xCE11A8 VA: 0xCE11A8
	private PartyOrganizationQuestInfoMenu.CallbackFunc callbackFunc; // 0x60
	protected Action onfinishedClose; // 0x68

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x19B2D28 Offset: 0x19B2D28 VA: 0x19B2D28
	public void .ctor() { }

	// RVA: 0x19B2D90 Offset: 0x19B2D90 VA: 0x19B2D90
	protected void add_callbackFunc(PartyOrganizationQuestInfoMenu.CallbackFunc value) { }

	// RVA: 0x19B2E7C Offset: 0x19B2E7C VA: 0x19B2E7C
	protected void remove_callbackFunc(PartyOrganizationQuestInfoMenu.CallbackFunc value) { }

	// RVA: 0x19B2F68 Offset: 0x19B2F68 VA: 0x19B2F68
	public void Init() { }

	// RVA: 0x19B2FB0 Offset: 0x19B2FB0 VA: 0x19B2FB0
	public void Open(int questId, PartyOrganizationQuestInfoMenu.CallbackFunc callback) { }

	// RVA: 0x19B30E0 Offset: 0x19B30E0 VA: 0x19B30E0
	private void Open() { }

	// RVA: 0x19B315C Offset: 0x19B315C VA: 0x19B315C
	private void EndOpen() { }

	// RVA: 0x19B3160 Offset: 0x19B3160 VA: 0x19B3160
	private void Close() { }

	// RVA: 0x19B33C0 Offset: 0x19B33C0 VA: 0x19B33C0
	public void Close(Action onFinishedClose) { }

	// RVA: 0x19B3448 Offset: 0x19B3448 VA: 0x19B3448
	private void EndClose() { }

