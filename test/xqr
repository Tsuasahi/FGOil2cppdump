	// RVA: 0x15C4FB8 Offset: 0x15C4FB8 VA: 0x15C4FB8
	public List<AiNpcBattleServantData> get_AiNpcDataList() { }

	[CompilerGeneratedAttribute] // RVA: 0xD39F4C Offset: 0xD39F4C VA: 0xD39F4C
	// RVA: 0x15C4FC0 Offset: 0x15C4FC0 VA: 0x15C4FC0
	public bool get_IsReleaseUnusedAssetsWhenEntryMember() { }

	[CompilerGeneratedAttribute] // RVA: 0xD39F5C Offset: 0xD39F5C VA: 0xD39F5C
	// RVA: 0x15C4FC8 Offset: 0x15C4FC8 VA: 0x15C4FC8
	private void set_IsReleaseUnusedAssetsWhenEntryMember(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39F6C Offset: 0xD39F6C VA: 0xD39F6C
	// RVA: 0x15C4FD4 Offset: 0x15C4FD4 VA: 0x15C4FD4
	public SubBgmPlayArgs[] get_CurrentSubBgmArgsArray() { }

	[CompilerGeneratedAttribute] // RVA: 0xD39F7C Offset: 0xD39F7C VA: 0xD39F7C
	// RVA: 0x15C4FDC Offset: 0x15C4FDC VA: 0x15C4FDC
	private void set_CurrentSubBgmArgsArray(SubBgmPlayArgs[] value) { }

	// RVA: 0x15C4FE4 Offset: 0x15C4FE4 VA: 0x15C4FE4
	public bool IsRetryable() { }

	// RVA: 0x15C4FEC Offset: 0x15C4FEC VA: 0x15C4FEC
	public float get_AccelSystemTimeScale() { }

	[CompilerGeneratedAttribute] // RVA: 0xD39F8C Offset: 0xD39F8C VA: 0xD39F8C
	// RVA: 0x15C4FF8 Offset: 0x15C4FF8 VA: 0x15C4FF8
	private void set_EnemyFieldPosCount(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD39F9C Offset: 0xD39F9C VA: 0xD39F9C
	// RVA: 0x15C5000 Offset: 0x15C5000 VA: 0x15C5000
	public int get_EnemyFieldPosCount() { }

	// RVA: 0x15C5008 Offset: 0x15C5008 VA: 0x15C5008
	public bool get_IsEnemyPosCountNormal() { }

	// RVA: 0x15C5018 Offset: 0x15C5018 VA: 0x15C5018
	public int get_eventId() { }

	// RVA: 0x15C5044 Offset: 0x15C5044 VA: 0x15C5044
	public void addLoadedCommonEffectPath(string[] pathArray) { }

	// RVA: 0x15C50B4 Offset: 0x15C50B4 VA: 0x15C50B4
	public string[] getLoadedCommonEffectPath(bool isClear = False) { }

	// RVA: 0x15C5154 Offset: 0x15C5154 VA: 0x15C5154
	public long GetCurrentUniqueWaveTurn() { }

	// RVA: 0x15C5164 Offset: 0x15C5164 VA: 0x15C5164
	public bool EqualCurrentUniqueWaveTurn(long compWaveTurn) { }

	// RVA: 0x15C519C Offset: 0x15C519C VA: 0x15C519C
	public void AddUseSkillId(int skillId) { }

	// RVA: 0x15C51F8 Offset: 0x15C51F8 VA: 0x15C51F8
	public void SetBattleEntity(BattleEntity battleEntity) { }

	// RVA: 0x15C5200 Offset: 0x15C5200 VA: 0x15C5200
	public bool recordEventMasterSkillUsing(int skillId) { }

	// RVA: 0x15C533C Offset: 0x15C533C VA: 0x15C533C
	private Dictionary<string, object> convertUsedEventMasterSkillDictFormatSave() { }

	// RVA: 0x15C552C Offset: 0x15C552C VA: 0x15C552C
	private Dictionary<int, int> convertUsedEventMasterSkillDictFormatGamePlaying(Dictionary<string, object> dict) { }

	// RVA: 0x15C5728 Offset: 0x15C5728 VA: 0x15C5728
	public bool isEventActivityPoint() { }

	// RVA: 0x15C5858 Offset: 0x15C5858 VA: 0x15C5858
	public Dictionary<int, int> getUsedEventMasterSkillDict() { }

	// RVA: 0x15C5860 Offset: 0x15C5860 VA: 0x15C5860
	public int getEventActivityPoint(int masterSkillId) { }

	// RVA: 0x15C5A90 Offset: 0x15C5A90 VA: 0x15C5A90
	public int getUsedEventMasterSkillEventActivityPoint() { }

	// RVA: 0x15C5C04 Offset: 0x15C5C04 VA: 0x15C5C04
	private void updateEventActivityGauge(int point) { }

	// RVA: 0x15C5C3C Offset: 0x15C5C3C VA: 0x15C5C3C
	public bool checkEnablePlaySpeedOneFromSkillIdList(int id) { }

	// RVA: 0x15C5D24 Offset: 0x15C5D24 VA: 0x15C5D24
	public bool checkEnablePlaySpeedOneFromFieldIdList(int id, int idx) { }

	// RVA: 0x15C5E9C Offset: 0x15C5E9C VA: 0x15C5E9C
	public void setOverrideBgmData(int bgmId) { }

	// RVA: 0x15C5F64 Offset: 0x15C5F64 VA: 0x15C5F64
	public void resetOverrideBgmData() { }

	// RVA: 0x15C5F6C Offset: 0x15C5F6C VA: 0x15C5F6C
	public bool checkAndGetOverrideBgm(out int bgmId) { }

	// RVA: 0x15C6008 Offset: 0x15C6008 VA: 0x15C6008
	public int[][] get_VoicePlayedList() { }

	// RVA: 0x15BF9C0 Offset: 0x15BF9C0 VA: 0x15BF9C0
	public void AddServantVoicePlayed(int svtId, int condValue) { }

	// RVA: 0x15C64CC Offset: 0x15C64CC VA: 0x15C64CC
	public void removeServantVoicePlayed(int svtId, int condValue) { }

	// RVA: 0x15C6694 Offset: 0x15C6694 VA: 0x15C6694
	public bool checkServantVoicePlayed(int svtId, int condValue) { }

	// RVA: 0x15C6830 Offset: 0x15C6830 VA: 0x15C6830
	public void Initialize() { }

	// RVA: 0x15C73C4 Offset: 0x15C73C4 VA: 0x15C73C4
	public void InitializeForWarBoard(BattleInfoData battleInfo) { }

	// RVA: 0x15C76E0 Offset: 0x15C76E0 VA: 0x15C76E0
	public void loadFsmGameObject() { }

	// RVA: 0x15C77AC Offset: 0x15C77AC VA: 0x15C77AC
	public void createCommandCard() { }

	// RVA: 0x15C7D28 Offset: 0x15C7D28 VA: 0x15C7D28
	public void replaceCommandCard(int inUniqueID, int outUniqueID) { }

	// RVA: 0x15C8800 Offset: 0x15C8800 VA: 0x15C8800
	public int getChangeType(int[] outList, int[] inList, int targetType, out int hitIndex) { }

	// RVA: 0x15C8900 Offset: 0x15C8900 VA: 0x15C8900
	public void transformSvtCommand(BattleServantData svtData) { }

	// RVA: 0x15C8B54 Offset: 0x15C8B54 VA: 0x15C8B54
	public BattleEntity getBattleEntity() { }

	// RVA: 0x15C8B5C Offset: 0x15C8B5C VA: 0x15C8B5C
	public QuestEntity getQuestEntity() { }

	// RVA: 0x15C8B64 Offset: 0x15C8B64 VA: 0x15C8B64
	public bool IsWarBoard() { }

	// RVA: 0x15C8C50 Offset: 0x15C8C50 VA: 0x15C8C50
	public StageEntity getStageEntity() { }

	// RVA: 0x15C8C98 Offset: 0x15C8C98 VA: 0x15C8C98
	public CommandCodeInfo getUserCommandCode(long userCommandCodeId) { }

	// RVA: 0x15C8CD0 Offset: 0x15C8CD0 VA: 0x15C8CD0
	public void procPlayerContinue(bool isProgress) { }

	// RVA: 0x15CA1DC Offset: 0x15CA1DC VA: 0x15CA1DC
	public bool isResumeBattle() { }

	// RVA: 0x15CA1E4 Offset: 0x15CA1E4 VA: 0x15CA1E4
	public bool isFirstStage() { }

	// RVA: 0x15CA1F4 Offset: 0x15CA1F4 VA: 0x15CA1F4
	public bool isLastStage() { }

	// RVA: 0x15CA22C Offset: 0x15CA22C VA: 0x15CA22C
	public int getLastWave() { }

	// RVA: 0x15CA25C Offset: 0x15CA25C VA: 0x15CA25C
	public int getDispWaveCount() { }

	// RVA: 0x15CA268 Offset: 0x15CA268 VA: 0x15CA268
	public BattleInfoData getBattleInfo() { }

	// RVA: 0x15CA270 Offset: 0x15CA270 VA: 0x15CA270
	public int getRaidDay(int uniqueId) { }

	// RVA: 0x15CA2A8 Offset: 0x15CA2A8 VA: 0x15CA2A8
	public void setDeadLeader(bool flg) { }

	// RVA: 0x15CA2B4 Offset: 0x15CA2B4 VA: 0x15CA2B4
	public bool isDeadLeader() { }

	// RVA: 0x15CA2BC Offset: 0x15CA2BC VA: 0x15CA2BC
	public bool isEndBattle() { }

	// RVA: 0x15CA2C4 Offset: 0x15CA2C4 VA: 0x15CA2C4
	public bool IsEndWaveBattle() { }

	// RVA: 0x15CA564 Offset: 0x15CA564 VA: 0x15CA564
	public bool IsEndAllWaveBattle() { }

	// RVA: 0x15CA5FC Offset: 0x15CA5FC VA: 0x15CA5FC
	public bool isLoseBattle() { }

	// RVA: 0x15CA34C Offset: 0x15CA34C VA: 0x15CA34C
	public bool isWinBattleNotRelatedSurvivalStatus() { }

	// RVA: 0x15CA604 Offset: 0x15CA604 VA: 0x15CA604
	public bool isSkipDead(BattleServantData svtData) { }

	// RVA: 0x15CA6A8 Offset: 0x15CA6A8 VA: 0x15CA6A8
	public int getGroundNo() { }

	// RVA: 0x15CA7A4 Offset: 0x15CA7A4 VA: 0x15CA7A4
	public int getQuestId() { }

	// RVA: 0x15CA7D0 Offset: 0x15CA7D0 VA: 0x15CA7D0
	public int getPhase() { }

	// RVA: 0x15CA7FC Offset: 0x15CA7FC VA: 0x15CA7FC
	public int getGroundType() { }

	// RVA: 0x15CA828 Offset: 0x15CA828 VA: 0x15CA828
	public int getResultBgmId(int defVal) { }

	// RVA: 0x15CA860 Offset: 0x15CA860 VA: 0x15CA860
	public bool isFadeOutBgmBeforeMovie() { }

	// RVA: 0x15CA890 Offset: 0x15CA890 VA: 0x15CA890
	public int getLeave(int defVal) { }

	// RVA: 0x15CA8C8 Offset: 0x15CA8C8 VA: 0x15CA8C8
	public int[] getResultEnemyVoiceIds() { }

	// RVA: 0x15CA8F8 Offset: 0x15CA8F8 VA: 0x15CA8F8
	public int getQuestPhaseScript(string key, int defaultValue) { }

	// RVA: 0x15CA940 Offset: 0x15CA940 VA: 0x15CA940
	public int[] getEventGroupIds() { }

	// RVA: 0x15CA970 Offset: 0x15CA970 VA: 0x15CA970
	public int GetGimmickId() { }

	// RVA: 0x15CA9A0 Offset: 0x15CA9A0 VA: 0x15CA9A0
	public int GetGimmickSvtId() { }

	// RVA: 0x15CA9D0 Offset: 0x15CA9D0 VA: 0x15CA9D0
	public int[] GetReelIconArray() { }

	// RVA: 0x15CAA00 Offset: 0x15CAA00 VA: 0x15CAA00
	public int[] GetGimmickSkillRateArray() { }

	// RVA: 0x15CAA30 Offset: 0x15CAA30 VA: 0x15CAA30
	public int[] GetGimmickSkillIdArray() { }

	// RVA: 0x15CAA60 Offset: 0x15CAA60 VA: 0x15CAA60
	public int[] GetGimmickAnimTypeArray() { }

	// RVA: 0x15CAA90 Offset: 0x15CAA90 VA: 0x15CAA90
	public string[] GetGimmickStartVoiceArray() { }

	// RVA: 0x15CAAC0 Offset: 0x15CAAC0 VA: 0x15CAAC0
	public object[] GetGimmickResultVoiceArray() { }

	// RVA: 0x15CAAF0 Offset: 0x15CAAF0 VA: 0x15CAAF0
	public int[] GetMultiEffectIds() { }

	// RVA: 0x15CAB20 Offset: 0x15CAB20 VA: 0x15CAB20
	public bool IsBattleStartFadeIn() { }

	// RVA: 0x15CAB5C Offset: 0x15CAB5C VA: 0x15CAB5C
	public bool IsBattleStartFadeOff() { }

	// RVA: 0x15CAB98 Offset: 0x15CAB98 VA: 0x15CAB98
	public int GetEffectSvtId() { }

	// RVA: 0x15CABC8 Offset: 0x15CABC8 VA: 0x15CABC8
	public int[] GetCutInSvtIds(bool isEnemy) { }

	// RVA: 0x15CAC00 Offset: 0x15CAC00 VA: 0x15CAC00
	public bool IsOffWinVoice() { }

	// RVA: 0x15CAC3C Offset: 0x15CAC3C VA: 0x15CAC3C
	public int GetFinishEffectId() { }

	// RVA: 0x15CAC6C Offset: 0x15CAC6C VA: 0x15CAC6C
	public int GetEffectBgmId() { }

	// RVA: 0x15CAC9C Offset: 0x15CAC9C VA: 0x15CAC9C
	public bool IsStartBgmOff() { }

	// RVA: 0x15CACD8 Offset: 0x15CACD8 VA: 0x15CACD8
	public bool IsWinBgmOff() { }

	// RVA: 0x15CAD14 Offset: 0x15CAD14 VA: 0x15CAD14
	public bool IsKeepSubBgmAfterBattleResult() { }

	// RVA: 0x15CAD44 Offset: 0x15CAD44 VA: 0x15CAD44
	public bool IsDeckNoUserSvt() { }

	// RVA: 0x15CB158 Offset: 0x15CB158 VA: 0x15CB158
	public int GetContinueCount() { }

	// RVA: 0x15CB160 Offset: 0x15CB160 VA: 0x15CB160
	public void SuccessContinue() { }

	// RVA: 0x15CB244 Offset: 0x15CB244 VA: 0x15CB244
	public Color getGroundShadowColor() { }

	// RVA: 0x15CB26C Offset: 0x15CB26C VA: 0x15CB26C
	public int[] getQuestIndividualities() { }

	// RVA: 0x15CB68C Offset: 0x15CB68C VA: 0x15CB68C
	public int[] getQuestIndividualitiesIgnoreServant() { }

	// RVA: 0x15CB7C8 Offset: 0x15CB7C8 VA: 0x15CB7C8
	public void updateOverwriteBgIndividuality(int bgId, int bgType) { }

	// RVA: 0x15CA59C Offset: 0x15CA59C VA: 0x15CA59C
	public bool existsNextBattle() { }

	// RVA: 0x15CB878 Offset: 0x15CB878 VA: 0x15CB878
	public int setTargetIndex(int index) { }

	// RVA: 0x15CBA80 Offset: 0x15CBA80 VA: 0x15CBA80
	public int GetTargetId() { }

	// RVA: 0x15CBA88 Offset: 0x15CBA88 VA: 0x15CBA88
	public BattleServantData getEnemyServantDataIndex(int index) { }

	// RVA: 0x15CBB08 Offset: 0x15CBB08 VA: 0x15CBB08
	public BattleServantData getServantDataFromIndex(int index, bool isEnemy) { }

	// RVA: 0x15CBBBC Offset: 0x15CBBBC VA: 0x15CBBBC
	public BattleServantData getAliveServantDataFromIndex(int index, bool isEnemy) { }

	// RVA: 0x15CBC00 Offset: 0x15CBC00 VA: 0x15CBC00
	public int[] getEntryIdArray(bool isEnemy) { }

	// RVA: 0x15CBC18 Offset: 0x15CBC18 VA: 0x15CBC18
	public bool IsEntry(int deckIndex, bool isEnemy) { }

	// RVA: 0x15CBD08 Offset: 0x15CBD08 VA: 0x15CBD08
	public bool SetEntry(BattleServantData servantData, int deckIndex) { }

	// RVA: 0x15CBDDC Offset: 0x15CBDDC VA: 0x15CBDDC
	public void RemoveEntry(BattleServantData servantData) { }

	// RVA: 0x15CBE94 Offset: 0x15CBE94 VA: 0x15CBE94
	public void FreeEntryByIndex(int deckIndex, bool isEnemy) { }

	// RVA: 0x15CBF54 Offset: 0x15CBF54 VA: 0x15CBF54
	private List<BattleServantData> GetBattleServantDataList(bool isEnemy) { }

	// RVA: 0x15CBF6C Offset: 0x15CBF6C VA: 0x15CBF6C
	public int GetSubServantUsableDeckIndex(bool isEnemy) { }

	// RVA: 0x15CC308 Offset: 0x15CC308 VA: 0x15CC308
	public void RefreshAllSubServantDeckIndex() { }

	// RVA: 0x15CC2CC Offset: 0x15CC2CC VA: 0x15CC2CC
	private int GetSubDeckMinDeckIndex(bool isEnemy) { }

	// RVA: 0x15CC3D8 Offset: 0x15CC3D8 VA: 0x15CC3D8
	public List<RestockServantLogic> GetRestockServantLogicList() { }

	// RVA: 0x15CC4EC Offset: 0x15CC4EC VA: 0x15CC4EC
	public void AppendRestockServantLogic(RestockServantLogic restockServantLogic) { }

	// RVA: 0x15CC55C Offset: 0x15CC55C VA: 0x15CC55C
	public void ClearRestockServantLogic() { }

	// RVA: 0x15CC5BC Offset: 0x15CC5BC VA: 0x15CC5BC
	public int getServantIndex(bool isEnemy, int uniqueId) { }

	// RVA: 0x15CC648 Offset: 0x15CC648 VA: 0x15CC648
	public int getMasterUserEquipId() { }

	// RVA: 0x15CC674 Offset: 0x15CC674 VA: 0x15CC674
	public int getMasterEquipId() { }

	// RVA: 0x15CC768 Offset: 0x15CC768 VA: 0x15CC768
	public void turnProgressing() { }

	// RVA: 0x15CCC5C Offset: 0x15CCC5C VA: 0x15CCC5C
	public BattleSkillInfoData[] getMasterSkillInfos() { }

	// RVA: 0x15CCCBC Offset: 0x15CCCBC VA: 0x15CCCBC
	public BattleSkillInfoData getMasterSkillInfo(int index) { }

	// RVA: 0x15CCD8C Offset: 0x15CCD8C VA: 0x15CCD8C
	public void useMasterSkill(BattleSkillInfoData skillInfo) { }

	// RVA: 0x15CCEE0 Offset: 0x15CCEE0 VA: 0x15CCEE0
	public void loadMasterSkill() { }

	// RVA: 0x15CDF74 Offset: 0x15CDF74 VA: 0x15CDF74
	private bool tryOverwriteEventEquipSkill(out int[] skillIds, out int[] skillLvs, out int masterIconId) { }

	// RVA: 0x15CE220 Offset: 0x15CE220 VA: 0x15CE220
	public void addMasterSkillInfo(BattleSkillInfoData.TYPE type, int index, int skillId, int skillLv, int condId, bool isAdd) { }

	// RVA: 0x15CE414 Offset: 0x15CE414 VA: 0x15CE414
	public bool IsMasterSkillOverWritten() { }

	// RVA: 0x15CE424 Offset: 0x15CE424 VA: 0x15CE424
	public bool IsShowMasterSkillCutIn() { }

	// RVA: 0x15CE42C Offset: 0x15CE42C VA: 0x15CE42C
	public void loadBoostSkill() { }

	// RVA: 0x15CE8A4 Offset: 0x15CE8A4 VA: 0x15CE8A4
	private void SetBoostInfo(SkillMaster skillMaster) { }

	// RVA: 0x15CE770 Offset: 0x15CE770 VA: 0x15CE770
	private bool IsFriendChocolateQuest() { }

	// RVA: 0x15CEAEC Offset: 0x15CEAEC VA: 0x15CEAEC
	public BattleSkillInfoData getBoostSkillInfo(int index) { }

	// RVA: 0x15CEBBC Offset: 0x15CEBBC VA: 0x15CEBBC
	public void addDropItems(DropInfo item) { }

	// RVA: 0x15CEC64 Offset: 0x15CEC64 VA: 0x15CEC64
	public BattleDropItem[] getDropItems() { }

	// RVA: 0x15CECC4 Offset: 0x15CECC4 VA: 0x15CECC4
	public void clearLastActionActor() { }

	// RVA: 0x15CECCC Offset: 0x15CECCC VA: 0x15CECCC
	public void setLastActionActor(BattleActionData adata) { }

	// RVA: 0x15CED00 Offset: 0x15CED00 VA: 0x15CED00
	public int getLastActionActor() { }

	// RVA: 0x15CED08 Offset: 0x15CED08 VA: 0x15CED08
	public void setInitCommandBattle() { }

	// RVA: 0x15CED18 Offset: 0x15CED18 VA: 0x15CED18
	public void setCommandAttack(int actId, int targetId) { }

	// RVA: 0x15CED2C Offset: 0x15CED2C VA: 0x15CED2C
	public bool isPrevAttackMe(int actId, int targetId) { }

	// RVA: 0x15C8FBC Offset: 0x15C8FBC VA: 0x15C8FBC
	public void shuffleCommand() { }

	// RVA: 0x15CED50 Offset: 0x15CED50 VA: 0x15CED50
	public BattleCommandData getShuffleCommand() { }

	// RVA: 0x15CEDE4 Offset: 0x15CEDE4 VA: 0x15CEDE4
	public void setCommandData(BattleCommandData[] list) { }

	// RVA: 0x15CEDF4 Offset: 0x15CEDF4 VA: 0x15CEDF4
	public void setComboData(BattleComboData incombo) { }

	// RVA: 0x15CEDFC Offset: 0x15CEDFC VA: 0x15CEDFC
	public void AddChainCount() { }

	// RVA: 0x15CEF48 Offset: 0x15CEF48 VA: 0x15CEF48
	private void AddChainCount(BattleData.CHAIN_COUNT_TYPE chainCountType) { }

	// RVA: 0x15CF058 Offset: 0x15CF058 VA: 0x15CF058
	public BattleCommandData[] getSelectCommands() { }

	// RVA: 0x15CF060 Offset: 0x15CF060 VA: 0x15CF060
	public BattleCommandData getSelectCommand(int index) { }

	// RVA: 0x15CF0B4 Offset: 0x15CF0B4 VA: 0x15CF0B4
	public BattleComboData getSelectCombo() { }

	// RVA: 0x15CF0BC Offset: 0x15CF0BC VA: 0x15CF0BC
	public void shuffleCanSelectCommand() { }

	// RVA: 0x15CF230 Offset: 0x15CF230 VA: 0x15CF230
	public BattleCommandData getShuffleSelectedCommand() { }

	// RVA: 0x15CF2C4 Offset: 0x15CF2C4 VA: 0x15CF2C4
	public bool get_AddAttack() { }

	// RVA: 0x15CF2E4 Offset: 0x15CF2E4 VA: 0x15CF2E4
	public void SetFixCommandData(BattleCommandData[] commands) { }

	// RVA: 0x15CF2EC Offset: 0x15CF2EC VA: 0x15CF2EC
	public BattleCommandData[] GetFixedCommandDatas() { }

	// RVA: 0x15CF2F4 Offset: 0x15CF2F4 VA: 0x15CF2F4
	public bool IsFixedCommandData() { }

	// RVA: 0x15CF3CC Offset: 0x15CF3CC VA: 0x15CF3CC
	public BattleBuffData.BuffData GetMaximumTurnFixedBuff() { }

	// RVA: 0x15CF530 Offset: 0x15CF530 VA: 0x15CF530
	public void SubBuffFromPT(int uniqueId, int[] indivi) { }

	// RVA: 0x15CF690 Offset: 0x15CF690 VA: 0x15CF690
	public void SubBuff(string key, BattleServantData targetSvt) { }

	// RVA: 0x15CF910 Offset: 0x15CF910 VA: 0x15CF910
	public void SubBuffFromPT(BattleServantData targetSvt) { }

	// RVA: 0x15CF970 Offset: 0x15CF970 VA: 0x15CF970
	public void SubBuffExitSvt(BattleServantData targetSvt) { }

	// RVA: 0x15CF9D0 Offset: 0x15CF9D0 VA: 0x15CF9D0
	public void SubBuffTarget(string key, BattleServantData targetSvt) { }

	// RVA: 0x15CB400 Offset: 0x15CB400 VA: 0x15CB400
	public List<int> GetFieldIndividuality4Servant() { }

	// RVA: 0x15CFDFC Offset: 0x15CFDFC VA: 0x15CFDFC
	public int getOverCriticalStars() { }

	// RVA: 0x15CFE14 Offset: 0x15CFE14 VA: 0x15CFE14
	public bool isValidViewStarMax() { }

	// RVA: 0x15CFE30 Offset: 0x15CFE30 VA: 0x15CFE30
	public int getValidStarMax() { }

	// RVA: 0x15CFE38 Offset: 0x15CFE38 VA: 0x15CFE38
	public int getOverCriticalStarsIgnoreAddCriticalStars() { }

	// RVA: 0x15CFEA8 Offset: 0x15CFEA8 VA: 0x15CFEA8
	public void addCriticalPoint(int count, bool multipleGainStar = False) { }

	// RVA: 0x15CFEF4 Offset: 0x15CFEF4 VA: 0x15CFEF4
	public void InitCriticalPoint(int critical = 0) { }

	// RVA: 0x15CFF28 Offset: 0x15CFF28 VA: 0x15CFF28
	public int getPrevCriticalStars() { }

	// RVA: 0x15CFF30 Offset: 0x15CFF30 VA: 0x15CFF30
	public int getSubCriticalCount() { }

	// RVA: 0x15CFF38 Offset: 0x15CFF38 VA: 0x15CFF38
	public int getAddCriticalCount() { }

	// RVA: 0x15CFF40 Offset: 0x15CFF40 VA: 0x15CFF40
	public void lossCriticalPoint(int count) { }

	// RVA: 0x15CFFE4 Offset: 0x15CFFE4 VA: 0x15CFFE4
	public int getCriticalPoint() { }

	// RVA: 0x15CFFEC Offset: 0x15CFFEC VA: 0x15CFFEC
	public int getTotalCriticalPoint() { }

	// RVA: 0x15CFFF4 Offset: 0x15CFFF4 VA: 0x15CFFF4
	public void resetCriticalPoint() { }

	// RVA: 0x15C6E5C Offset: 0x15C6E5C VA: 0x15C6E5C
	public void ResetAllCriticalInfo() { }

	// RVA: 0x15D0010 Offset: 0x15D0010 VA: 0x15D0010
	public void setCriticalStar(int count) { }

	// RVA: 0x15D0024 Offset: 0x15D0024 VA: 0x15D0024
	public void setCommandCriticals(int[] criticalArray) { }

	// RVA: 0x15D002C Offset: 0x15D002C VA: 0x15D002C
	public int[] getCommandCriticals() { }

	// RVA: 0x15D0034 Offset: 0x15D0034 VA: 0x15D0034
	public void loadCriticalstarts() { }

	// RVA: 0x15D0044 Offset: 0x15D0044 VA: 0x15D0044
	public void addTotalCriticalStars(int count) { }

	// RVA: 0x15D0060 Offset: 0x15D0060 VA: 0x15D0060
	public void resetAddCriticalstars() { }

	// RVA: 0x15D0068 Offset: 0x15D0068 VA: 0x15D0068
	public void resetSubCriticalstars() { }

	// RVA: 0x15D0070 Offset: 0x15D0070 VA: 0x15D0070
	public void setCalcStarFlg(bool flg) { }

	// RVA: 0x15D007C Offset: 0x15D007C VA: 0x15D007C
	public bool IsCalcStar() { }

	// RVA: 0x15D0084 Offset: 0x15D0084 VA: 0x15D0084
	public void AddPerformedVals(DataVals val) { }

	// RVA: 0x15D00F4 Offset: 0x15D00F4 VA: 0x15D00F4
	public void ResetPerformedVals() { }

	// RVA: 0x15D0154 Offset: 0x15D0154 VA: 0x15D0154
	public bool CheckPerformedFuncType(FuncList.TYPE targetType) { }

	// RVA: 0x15D0228 Offset: 0x15D0228 VA: 0x15D0228
	public void AddFreshBuffList(BattleActionData.BuffData buff) { }

	// RVA: 0x15D0298 Offset: 0x15D0298 VA: 0x15D0298
	public void ResetFreshBuffList() { }

	// RVA: 0x15D02F8 Offset: 0x15D02F8 VA: 0x15D02F8
	public bool CheckFreshBuffDataList(int[] targetTypeArray) { }

	// RVA: 0x15D04B0 Offset: 0x15D04B0 VA: 0x15D04B0
	public void setFirstBonus(int index, int type) { }

	// RVA: 0x15D0604 Offset: 0x15D0604 VA: 0x15D0604
	public void setTDChain(int addIndex) { }

	// RVA: 0x15D0658 Offset: 0x15D0658 VA: 0x15D0658
	public bool isPlayerID(int Id) { }

	// RVA: 0x15D0684 Offset: 0x15D0684 VA: 0x15D0684
	public bool isEnemyID(int Id) { }

	// RVA: 0x15D06A0 Offset: 0x15D06A0 VA: 0x15D06A0
	public bool IsAiNpcID(int id) { }

	// RVA: 0x15C7C14 Offset: 0x15C7C14 VA: 0x15C7C14
	public BattleServantData getPlayerServantData(int Id) { }

	// RVA: 0x15D078C Offset: 0x15D078C VA: 0x15D078C
	public BattleServantData getPlayerSubServantData() { }

	// RVA: 0x15CB97C Offset: 0x15CB97C VA: 0x15CB97C
	public BattleServantData getEnemyServantData(int Id) { }

	// RVA: 0x15D06BC Offset: 0x15D06BC VA: 0x15D06BC
	public BattleServantData GetAiNpcServantData(int id) { }

	// RVA: 0x15D0950 Offset: 0x15D0950 VA: 0x15D0950
	public BattleServantData getEnemyServantDataFromNpcId(int npcId) { }

	// RVA: 0x15D0AA4 Offset: 0x15D0AA4 VA: 0x15D0AA4
	public BattleServantData getEnemySubBackServantData() { }

	// RVA: 0x15D0C94 Offset: 0x15D0C94 VA: 0x15D0C94
	public BattleServantData getEnemySubServantData(int entryIndex) { }

	// RVA: 0x15C01E4 Offset: 0x15C01E4 VA: 0x15C01E4
	public BattleServantData getServantData(int uniqueId) { }

	// RVA: 0x15D0DCC Offset: 0x15D0DCC VA: 0x15D0DCC
	public int getServantId(int uniqueId) { }

	// RVA: 0x15CFBA4 Offset: 0x15CFBA4 VA: 0x15CFBA4
	public BattleServantData[] getPlayerServantList() { }

	// RVA: 0x15D0E70 Offset: 0x15D0E70 VA: 0x15D0E70
	public int[] getPlayerServantIDList(bool ckDead = True, int[] addIds) { }

	// RVA: 0x15CFC04 Offset: 0x15CFC04 VA: 0x15CFC04
	public BattleServantData[] getFieldEnemyServantList(bool isTargetOnly = False) { }

	// RVA: 0x15D11D0 Offset: 0x15D11D0 VA: 0x15D11D0
	public BattleServantData[] getFieldEnemyCheckDeadServantList(bool checkDead, bool isTargetOnly = True) { }

	// RVA: 0x15D135C Offset: 0x15D135C VA: 0x15D135C
	public int[] GetAliveFieldServantIDArray(bool isTargetOnly = True, int exceptSvtId = -1) { }

	// RVA: 0x15D1700 Offset: 0x15D1700 VA: 0x15D1700
	public int[] getFieldEnemyServantIDList(bool isTargetOnly = True) { }

	// RVA: 0x15D147C Offset: 0x15D147C VA: 0x15D147C
	public int[] getAliveFieldEnemyServantIDList(bool isTargetOnly = True) { }

	// RVA: 0x15D18FC Offset: 0x15D18FC VA: 0x15D18FC
	public BattleServantData[] getEnemyServantList() { }

	// RVA: 0x15D195C Offset: 0x15D195C VA: 0x15D195C
	public int[] getEnemyServantIDList(bool ckDead = True, bool isTargetOnly = True) { }

	// RVA: 0x15D10F8 Offset: 0x15D10F8 VA: 0x15D10F8
	public BattleServantData[] getTargetEnemy(bool checkDead = False) { }

	// RVA: 0x15D1AE0 Offset: 0x15D1AE0 VA: 0x15D1AE0
	public int getTargetEnemyId(bool checkDead = False) { }

	// RVA: 0x15D1834 Offset: 0x15D1834 VA: 0x15D1834
	public int[] getTargetEnemyIdList(bool checkDead = False) { }

	// RVA: 0x15D1B30 Offset: 0x15D1B30 VA: 0x15D1B30
	public int GetPositionIndex() { }

	// RVA: 0x15CCA44 Offset: 0x15CCA44 VA: 0x15CCA44
	public BattleServantData[] getFieldPlayerServantList() { }

	// RVA: 0x15CF7AC Offset: 0x15CF7AC VA: 0x15CF7AC
	public BattleServantData getTopFieldPlayerServant() { }

	// RVA: 0x15D1C04 Offset: 0x15D1C04 VA: 0x15D1C04
	public BattleServantData[] getSubPlayerServantList() { }

	// RVA: 0x15CC0EC Offset: 0x15CC0EC VA: 0x15CC0EC
	public BattleServantData[] GetSubServantArray(bool isEnemy) { }

	// RVA: 0x15D1E30 Offset: 0x15D1E30 VA: 0x15D1E30
	public BattleServantData[] GetRestockableSubServantArray(bool isEnemy, int deckIndex) { }

	// RVA: 0x15D1FF0 Offset: 0x15D1FF0 VA: 0x15D1FF0
	public int[] getFieldPlayerServantIDList(int[] addIds) { }

	// RVA: 0x15D15D4 Offset: 0x15D15D4 VA: 0x15D15D4
	public int[] getAliveFieldPlayerServantIDList() { }

	// RVA: 0x15D21D8 Offset: 0x15D21D8 VA: 0x15D21D8
	public List<BattleServantData> getServantList() { }

	// RVA: 0x15D22A0 Offset: 0x15D22A0 VA: 0x15D22A0
	public BattleServantData[] getFieldServantList(bool isTargetOnly = False) { }

	// RVA: 0x15D2398 Offset: 0x15D2398 VA: 0x15D2398
	public BattleServantData[] getFieldPTList(int uniqueId, bool isTargetOnly = True) { }

	// RVA: 0x15D23D8 Offset: 0x15D23D8 VA: 0x15D23D8
	public int[] getAliveFieldSvtIdArray(int actorUniqueId, bool isPartySide = True, int[] tvals, bool isIncludeIgnoreIndiv = False) { }

	// RVA: 0x15D2460 Offset: 0x15D2460 VA: 0x15D2460
	public int[] CheckIndivSvtIdList(int[] svtIdList, int[] tvals, bool isIncludeIgnoreIndiv = False) { }

	// RVA: 0x15D2638 Offset: 0x15D2638 VA: 0x15D2638
	public bool IsOpponentPTUniqueID(int aId, int bId) { }

	// RVA: 0x15D2684 Offset: 0x15D2684 VA: 0x15D2684
	public BattleServantData[] getFieldOpponentList(int uniqueId, bool isTargetOnly = True) { }

	// RVA: 0x15CF658 Offset: 0x15CF658 VA: 0x15CF658
	public BattleServantData[] getPTList(int uniqueId) { }

	// RVA: 0x15D26C4 Offset: 0x15D26C4 VA: 0x15D26C4
	public BattleServantData[] getOpponentList(int uniqueId) { }

	// RVA: 0x15D26FC Offset: 0x15D26FC VA: 0x15D26FC
	public void addDamage(int targetId, int damage, bool noAccumulation = False) { }

	// RVA: 0x15D27E4 Offset: 0x15D27E4 VA: 0x15D27E4
	public void addHeal(int targetId, int heal, bool isForce = False) { }

	// RVA: 0x15D282C Offset: 0x15D282C VA: 0x15D282C
	public bool checkAliveOther(int uniqueId) { }

	// RVA: 0x15CA354 Offset: 0x15CA354 VA: 0x15CA354
	public bool checkAlivePlayers() { }

	// RVA: 0x15CA43C Offset: 0x15CA43C VA: 0x15CA43C
	public bool checkAliveEnemys() { }

	// RVA: 0x15D28C4 Offset: 0x15D28C4 VA: 0x15D28C4
	public bool checkAliveAllEnemy() { }

	// RVA: 0x15D29D0 Offset: 0x15D29D0 VA: 0x15D29D0
	public bool checkBattleContinuationEnemys() { }

	// RVA: 0x15D29F0 Offset: 0x15D29F0 VA: 0x15D29F0
	public bool IsAliveLogic(bool isEnemy) { }

	// RVA: 0x15D2AF8 Offset: 0x15D2AF8 VA: 0x15D2AF8
	public bool checkDefeatPoint(bool isEnemy) { }

	// RVA: 0x15D2BD8 Offset: 0x15D2BD8 VA: 0x15D2BD8
	public void toggleSkipSkillConf() { }

	// RVA: 0x15C6E78 Offset: 0x15C6E78 VA: 0x15C6E78
	public void loadSkipSkillConf() { }

	// RVA: 0x15D2C98 Offset: 0x15D2C98 VA: 0x15D2C98
	public void toggleHighSpeedMode() { }

	// RVA: 0x15C6F80 Offset: 0x15C6F80 VA: 0x15C6F80
	public void loadHighSpeedMode() { }

	// RVA: 0x15D2D80 Offset: 0x15D2D80 VA: 0x15D2D80
	public void toggleTdConstantVelocity() { }

	// RVA: 0x15C708C Offset: 0x15C708C VA: 0x15C708C
	public void loadTdConstantVelocity() { }

	// RVA: 0x15D2E40 Offset: 0x15D2E40 VA: 0x15D2E40
	public bool IsHighSpeedOption() { }

	// RVA: 0x15D2E50 Offset: 0x15D2E50 VA: 0x15D2E50
	public bool get_IsHighspeedTd() { }

	// RVA: 0x15D3048 Offset: 0x15D3048 VA: 0x15D3048
	public void toggleSkipDead() { }

	// RVA: 0x15C7194 Offset: 0x15C7194 VA: 0x15C7194
	public void loadSkipDead() { }

	// RVA: 0x15D3108 Offset: 0x15D3108 VA: 0x15D3108
	public static void DeleteContinueData() { }

	// RVA: 0x15D32D4 Offset: 0x15D32D4 VA: 0x15D32D4
	public static long getResumeBattleId() { }

	// RVA: 0x15D3378 Offset: 0x15D3378 VA: 0x15D3378
	public static int getSavedQuestId() { }

	// RVA: 0x15D341C Offset: 0x15D341C VA: 0x15D341C
	public static int getSavedQuestPhase() { }

	// RVA: 0x15D34C0 Offset: 0x15D34C0 VA: 0x15D34C0
	public static int getContinueBattleFlg() { }

	// RVA: 0x15D3530 Offset: 0x15D3530 VA: 0x15D3530
	public static void setContinueBattleFlg(int continueFlg, bool save = True) { }

	// RVA: 0x15D35CC Offset: 0x15D35CC VA: 0x15D35CC
	public static int GetContinueItemId() { }

	// RVA: 0x15D363C Offset: 0x15D363C VA: 0x15D363C
	public static void SaveContinueItemId(int continueItemId, bool save = True) { }

	// RVA: 0x15D36D8 Offset: 0x15D36D8 VA: 0x15D36D8
	public static string GetBattleUseItemParameter() { }

	// RVA: 0x15D3744 Offset: 0x15D3744 VA: 0x15D3744
	public static void SaveBattleUseItemParameter(string param, bool save = True) { }

	// RVA: 0x15D37E0 Offset: 0x15D37E0 VA: 0x15D37E0
	public static int getCommandSpellIdBattle() { }

	// RVA: 0x15D3850 Offset: 0x15D3850 VA: 0x15D3850
	public static void setCommandSpellIdBattle(int commandSpellId, bool save = True) { }

	// RVA: 0x15D38EC Offset: 0x15D38EC VA: 0x15D38EC
	public static void setResumeBattleId(long battleId, int questId, int questPhase) { }

	// RVA: 0x15CB1D0 Offset: 0x15CB1D0 VA: 0x15CB1D0
	public static void saveContinueCount(int count) { }

	// RVA: 0x15D39C8 Offset: 0x15D39C8 VA: 0x15D39C8
	public static int loadContinueCount() { }

	// RVA: 0x15D3A34 Offset: 0x15D3A34 VA: 0x15D3A34
	public static void saveWaveClearTurn(int[] waveClearArray) { }

	// RVA: 0x15D3BCC Offset: 0x15D3BCC VA: 0x15D3BCC
	public static int[] getWaveClearTurn() { }

	// RVA: 0x15D3E58 Offset: 0x15D3E58 VA: 0x15D3E58
	public static bool isReserveResumeBattle() { }

	// RVA: 0x15D3F00 Offset: 0x15D3F00 VA: 0x15D3F00
	public static void setReserveResumeBattle(bool isResume, int questId = 0, int questPhase = 0) { }

	// RVA: 0x15D4004 Offset: 0x15D4004 VA: 0x15D4004
	public long getBsate() { }

	// RVA: 0x15D404C Offset: 0x15D404C VA: 0x15D404C
	public void setBstate(long bstate) { }

	// RVA: 0x15C90BC Offset: 0x15C90BC VA: 0x15C90BC
	public void SaveTurnData() { }

	// RVA: 0x15D40A0 Offset: 0x15D40A0 VA: 0x15D40A0
	public void DeleteDummyBuffDataAll() { }

	// RVA: 0x15D4250 Offset: 0x15D4250 VA: 0x15D4250
	public void addLogCommand() { }

	// RVA: 0x15D43B8 Offset: 0x15D43B8 VA: 0x15D43B8
	public string getCommandHistory() { }

	// RVA: 0x15D4454 Offset: 0x15D4454 VA: 0x15D4454
	public string getActionList() { }

	// RVA: 0x15D4A68 Offset: 0x15D4A68 VA: 0x15D4A68
	public bool checkTurnData() { }

	// RVA: 0x15D4CA8 Offset: 0x15D4CA8 VA: 0x15D4CA8
	public static bool deleteSaveData() { }

	// RVA: 0x15D4D9C Offset: 0x15D4D9C VA: 0x15D4D9C
	public void DeleteResumeCheckPlayedMovieSaveKey() { }

	// RVA: 0x15D4E24 Offset: 0x15D4E24 VA: 0x15D4E24
	public void checkTutorialData() { }

	// RVA: 0x15D2D70 Offset: 0x15D2D70 VA: 0x15D2D70
	public bool isTutorial() { }

	// RVA: 0x15D4F44 Offset: 0x15D4F44 VA: 0x15D4F44
	public bool isTutorialCard() { }

	// RVA: 0x15D4F60 Offset: 0x15D4F60 VA: 0x15D4F60
	public bool isTutorialclickTarget() { }

	// RVA: 0x15D4FD0 Offset: 0x15D4FD0 VA: 0x15D4FD0
	public bool isTutorialSelectsvtCancel() { }

	// RVA: 0x15D4FE0 Offset: 0x15D4FE0 VA: 0x15D4FE0
	public void commonQuestLoad() { }

	// RVA: 0x15D5290 Offset: 0x15D5290 VA: 0x15D5290
	private void InitGender(bool change) { }

	// RVA: 0x15D56D0 Offset: 0x15D56D0 VA: 0x15D56D0
	public void initQuest() { }

	// RVA: 0x15D605C Offset: 0x15D605C VA: 0x15D605C
	public void loadQuest() { }

	// RVA: 0x15D5D70 Offset: 0x15D5D70 VA: 0x15D5D70
	private void LoadAiNpcServant(BattleServantData.SaveData[] saveNpcSvts) { }

	// RVA: 0x15D7838 Offset: 0x15D7838 VA: 0x15D7838
	public void setNextStage() { }

	// RVA: 0x15C9030 Offset: 0x15C9030 VA: 0x15C9030
	public void SetUsedTurn() { }

	// RVA: 0x15D7934 Offset: 0x15D7934 VA: 0x15D7934
	public void loadNstage(int inwavecount) { }

	// RVA: 0x15D836C Offset: 0x15D836C VA: 0x15D836C
	private void CheckMultiTargetBattle(bool isResume = False) { }

	[DebuggerHiddenAttribute] // RVA: 0xD39FAC Offset: 0xD39FAC VA: 0xD39FAC
	// RVA: 0x15D858C Offset: 0x15D858C VA: 0x15D858C
	private IEnumerator PartsIntoTheBodyDelay() { }

	// RVA: 0x15D85FC Offset: 0x15D85FC VA: 0x15D85FC
	public bool CheckActorAllParts() { }

	// RVA: 0x15D87A8 Offset: 0x15D87A8 VA: 0x15D87A8
	public BattleActorControl GetPartsActor(BattleData.MULTI_TARGET_POS pos) { }

	// RVA: 0x15D89EC Offset: 0x15D89EC VA: 0x15D89EC
	public void PartsIntoTheBody() { }

	// RVA: 0x15D8E94 Offset: 0x15D8E94 VA: 0x15D8E94
	public Transform FindTransformChild(Transform tran, string tranName) { }

	// RVA: 0x15D8FD8 Offset: 0x15D8FD8 VA: 0x15D8FD8
	public void loadSaveTurnNstage() { }

	// RVA: 0x15D7D6C Offset: 0x15D7D6C VA: 0x15D7D6C
	public void loadStageData() { }

	// RVA: 0x15DA144 Offset: 0x15DA144 VA: 0x15DA144
	public void UpdateTargetPosEnemyAppearValid(int[] positions, bool isValid) { }

	// RVA: 0x15DA1FC Offset: 0x15DA1FC VA: 0x15DA1FC
	public bool IsPlayLimitTurnEffect() { }

	// RVA: 0x15BFBD8 Offset: 0x15BFBD8 VA: 0x15BFBD8
	public bool checkLimitTurn() { }

	// RVA: 0x15DA240 Offset: 0x15DA240 VA: 0x15DA240
	public bool isLimitTurn() { }

	// RVA: 0x15DA250 Offset: 0x15DA250 VA: 0x15DA250
	public int GetLimitRemainTurn() { }

	// RVA: 0x15DA264 Offset: 0x15DA264 VA: 0x15DA264
	public bool isShowTurn() { }

	// RVA: 0x15DA274 Offset: 0x15DA274 VA: 0x15DA274
	public bool IsAliveOtherRaidTypeBoss() { }

	// RVA: 0x15DA3AC Offset: 0x15DA3AC VA: 0x15DA3AC
	public BattleDataDefine.RaidType GetRaidType() { }

	// RVA: 0x15DA4DC Offset: 0x15DA4DC VA: 0x15DA4DC
	public bool isRaidBattle() { }

	// RVA: 0x15DA568 Offset: 0x15DA568 VA: 0x15DA568
	public bool isBattleTurnRequest() { }

	// RVA: 0x15DA5BC Offset: 0x15DA5BC VA: 0x15DA5BC
	public bool isSuperBossBattle() { }

	// RVA: 0x15DA648 Offset: 0x15DA648 VA: 0x15DA648
	public bool isSuperBossDown() { }

	// RVA: 0x15DA740 Offset: 0x15DA740 VA: 0x15DA740
	public bool TryGetRaidEntity(out EventRaidEntity raidEnt, int raidId) { }

	// RVA: 0x15DA870 Offset: 0x15DA870 VA: 0x15DA870
	public long getRaidBossMaxHp(int raidId) { }

	// RVA: 0x15DA8A8 Offset: 0x15DA8A8 VA: 0x15DA8A8
	public long[] getSuperBossSplitHp(int id) { }

	// RVA: 0x15DA988 Offset: 0x15DA988 VA: 0x15DA988
	public long getSuperBossMaxHp(int id) { }

	// RVA: 0x15DA9C0 Offset: 0x15DA9C0 VA: 0x15DA9C0
	public bool isNgContinue() { }

	// RVA: 0x15DAAB8 Offset: 0x15DAAB8 VA: 0x15DAAB8
	public bool isRaidLastDay() { }

	// RVA: 0x15DAAEC Offset: 0x15DAAEC VA: 0x15DAAEC
	public bool isRaidConnection() { }

	// RVA: 0x15DAB20 Offset: 0x15DAB20 VA: 0x15DAB20
	public bool isDispLoseResult() { }

	// RVA: 0x15DAB50 Offset: 0x15DAB50 VA: 0x15DAB50
	public bool isKnockdownTrialQuest() { }

	// RVA: 0x15DAB84 Offset: 0x15DAB84 VA: 0x15DAB84
	public bool isBattleResultLoseQuestClear() { }

	// RVA: 0x15DABB8 Offset: 0x15DABB8 VA: 0x15DABB8
	public bool isBattleRetreatQuestClear() { }

	// RVA: 0x15DABEC Offset: 0x15DABEC VA: 0x15DABEC
	public bool isNoResult() { }

	// RVA: 0x15DAC1C Offset: 0x15DAC1C VA: 0x15DAC1C
	public bool isBreakOnBattleWin() { }

	// RVA: 0x15DAC4C Offset: 0x15DAC4C VA: 0x15DAC4C
	public string getBattleFinishMovie() { }

	// RVA: 0x15DAC7C Offset: 0x15DAC7C VA: 0x15DAC7C
	public bool isBattleFinishMovie() { }

	// RVA: 0x15DACB8 Offset: 0x15DACB8 VA: 0x15DACB8
	public bool isMoviePlay() { }

