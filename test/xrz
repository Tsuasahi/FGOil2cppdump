	public const CombineHelpListViewManager.InitMode LOADING = 1;
	public const CombineHelpListViewManager.InitMode LOADED = 2;
}

// Namespace: 
public sealed class CombineHelpListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 9539
{
	// Methods

	// RVA: 0x15815F8 Offset: 0x15815F8 VA: 0x15815F8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x15800C8 Offset: 0x15800C8 VA: 0x15800C8 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1581608 Offset: 0x1581608 VA: 0x1581608 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x158163C Offset: 0x158163C VA: 0x158163C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public sealed class CombineHelpListViewManager.CallbackFunc2 : MulticastDelegate // TypeDefIndex: 9540
{
	// Methods

	// RVA: 0x1581648 Offset: 0x1581648 VA: 0x1581648
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x157FEAC Offset: 0x157FEAC VA: 0x157FEAC Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1581658 Offset: 0x1581658 VA: 0x1581658 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x158168C Offset: 0x158168C VA: 0x158168C Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB0810 Offset: 0xCB0810 VA: 0xCB0810
private sealed class CombineHelpListViewManager.<LoadBaseSprite>c__AnonStorey0 // TypeDefIndex: 9541
{
	// Fields
	internal string[] path; // 0x10
	internal CombineHelpListViewManager $this; // 0x18

	// Methods

	// RVA: 0x157F994 Offset: 0x157F994 VA: 0x157F994
	public void .ctor() { }

	// RVA: 0x15812D4 Offset: 0x15812D4 VA: 0x15812D4
	internal void <>m__0() { }
}

// Namespace: 
public class CombineHelpListViewObject : ListViewObject // TypeDefIndex: 9542
{
	// Fields
	protected CombineHelpListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCD64E4 Offset: 0xCD64E4 VA: 0xCD64E4
	[DebuggerBrowsableAttribute] // RVA: 0xCD64E4 Offset: 0xCD64E4 VA: 0xCD64E4
	private Action callbackFunc; // 0x70
	protected CombineHelpListViewItemDraw itemDraw; // 0x78
	protected CombineHelpListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x1581698 Offset: 0x1581698 VA: 0x1581698
	public void .ctor() { }

	// RVA: 0x1581700 Offset: 0x1581700 VA: 0x1581700
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x15817EC Offset: 0x15817EC VA: 0x15817EC
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x15818D8 Offset: 0x15818D8 VA: 0x15818D8
	protected void Awake() { }

	// RVA: 0x158194C Offset: 0x158194C VA: 0x158194C
	private void OnDestroy() { }

	// RVA: 0x157F720 Offset: 0x157F720 VA: 0x157F720
	public CombineHelpListViewItem GetItem() { }

	// RVA: 0x15819F8 Offset: 0x15819F8 VA: 0x15819F8 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1581A04 Offset: 0x1581A04 VA: 0x1581A04 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1581A8C Offset: 0x1581A8C VA: 0x1581A8C
	public void Init(CombineHelpListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1580684 Offset: 0x1580684 VA: 0x1580684
	public void Init(CombineHelpListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x15808FC Offset: 0x15808FC VA: 0x15808FC
	public void Init(CombineHelpListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x15803FC Offset: 0x15803FC VA: 0x15803FC
	public void Init(CombineHelpListViewObject.InitMode initMode) { }

	// RVA: 0x1581C50 Offset: 0x1581C50 VA: 0x1581C50
	protected void SetupDisp() { }
}

// Namespace: 
public enum CombineHelpListViewObject.InitMode // TypeDefIndex: 9543
{
	// Fields
	public int value__; // 0x0
	public const CombineHelpListViewObject.InitMode INVISIBLE = 0;
	public const CombineHelpListViewObject.InitMode INVALID = 1;
	public const CombineHelpListViewObject.InitMode VALID = 2;
	public const CombineHelpListViewObject.InitMode INPUT = 3;
}

// Namespace: 
protected enum CombineHelpListViewObject.State // TypeDefIndex: 9544
{
	// Fields
	public int value__; // 0x0
	public const CombineHelpListViewObject.State INIT = 0;
	public const CombineHelpListViewObject.State IDLE = 1;
	public const CombineHelpListViewObject.State MOVE = 2;
	public const CombineHelpListViewObject.State INPUT = 3;
}

// Namespace: 
public class CombineHelpMenu : BaseDialog // TypeDefIndex: 9545
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCD6520 Offset: 0xCD6520 VA: 0xCD6520
	[DebuggerBrowsableAttribute] // RVA: 0xCD6520 Offset: 0xCD6520 VA: 0xCD6520
	private CombineHelpMenu.CallbackFunc callbackFunc; // 0x58

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1581D60 Offset: 0x1581D60 VA: 0x1581D60
	public void .ctor() { }

	// RVA: 0x1581DC8 Offset: 0x1581DC8 VA: 0x1581DC8
	protected void add_callbackFunc(CombineHelpMenu.CallbackFunc value) { }

	// RVA: 0x1581EB4 Offset: 0x1581EB4 VA: 0x1581EB4
	protected void remove_callbackFunc(CombineHelpMenu.CallbackFunc value) { }

	// RVA: 0x1581FA0 Offset: 0x1581FA0 VA: 0x1581FA0
	public void Init() { }

	// RVA: 0x157FD54 Offset: 0x157FD54 VA: 0x157FD54
	public void Open() { }

	// RVA: 0x157FE08 Offset: 0x157FE08 VA: 0x157FE08
	public void Close(CombineHelpMenu.CallbackFunc callback) { }

	// RVA: 0x1581FA8 Offset: 0x1581FA8 VA: 0x1581FA8
	private void endClose() { }

	// RVA: 0x15821E8 Offset: 0x15821E8 VA: 0x15821E8 Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
public sealed class CombineHelpMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 9546
{
	// Methods

	// RVA: 0x157FDF8 Offset: 0x157FDF8 VA: 0x157FDF8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1581FE8 Offset: 0x1581FE8 VA: 0x1581FE8 Slot: 11
	public virtual void Invoke() { }

	// RVA: 0x1582230 Offset: 0x1582230 VA: 0x1582230 Slot: 12
	public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object) { }

	// RVA: 0x1582264 Offset: 0x1582264 VA: 0x1582264 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class MenuListControl : MonoBehaviour // TypeDefIndex: 9547
{
	// Fields
	public static readonly float ALPHA_ANIMATION_SPD; // 0x0
	public static readonly float ALPHA_ANIMATION_INTERVAL; // 0x4
	public CombineInitData combineData; // 0x18
	public UIScrollView menuListScrollView; // 0x20
	public UIGrid menuListGrid; // 0x28
	private List<EventInfoData> combineEventList; // 0x30
	private List<EventNoticeControl> noticeList; // 0x38
	private List<SetNoticeNumControl> setNoticeNumList; // 0x40
	public RestTimeNoticeControl[] restTimeNoticeList; // 0x48
	private float alphaAnimNow; // 0x50
	private float alphaAnimTgt; // 0x54
	private float alphaAnimTimeOld; // 0x58

	// Properties
	public float AlphaAnimNow { get; }

	// Methods

	// RVA: 0x16D589C Offset: 0x16D589C VA: 0x16D589C
	public void .ctor() { }

	// RVA: 0x16D599C Offset: 0x16D599C VA: 0x16D599C
	private void Update() { }

	// RVA: 0x16D5BB8 Offset: 0x16D5BB8 VA: 0x16D5BB8
	public void InitMenuEventNotice() { }

	// RVA: 0x16D5DDC Offset: 0x16D5DDC VA: 0x16D5DDC
	public void SetMenuEventNotice() { }

	// RVA: 0x16D617C Offset: 0x16D617C VA: 0x16D617C
	public void SetBudgeNumNotice() { }

	// RVA: 0x16D5E00 Offset: 0x16D5E00 VA: 0x16D5E00
	private void checkEventNotice() { }

	// RVA: 0x16D63D4 Offset: 0x16D63D4 VA: 0x16D63D4
	private EventInfoData setEventInfo(EventCampaignEntity combineEventEnt, EventEntity eventEnt) { }

	// RVA: 0x16D64E8 Offset: 0x16D64E8 VA: 0x16D64E8
	public List<EventInfoData> getCombineEventList() { }

	// RVA: 0x16D64F0 Offset: 0x16D64F0 VA: 0x16D64F0
	public void resetScrollView() { }

	// RVA: 0x16D6530 Offset: 0x16D6530 VA: 0x16D6530
	public void setBannerIcon(UISprite targetSprite, EventEntity eventEntity) { }

	// RVA: 0x16D65DC Offset: 0x16D65DC VA: 0x16D65DC
	public void setCombineEnableNum(CombineEnableData enableData) { }

	// RVA: 0x16D5ABC Offset: 0x16D5ABC VA: 0x16D5ABC
	private void UpdateAnim() { }

	// RVA: 0x16D68B4 Offset: 0x16D68B4 VA: 0x16D68B4
	private void ResetAlphaAnimTime() { }

	// RVA: 0x16D6024 Offset: 0x16D6024 VA: 0x16D6024
	public void SetEventNotice() { }

	// RVA: 0x16D67C4 Offset: 0x16D67C4 VA: 0x16D67C4
	private void UpdateEventNoticeAlpha() { }

	// RVA: 0x16D68E4 Offset: 0x16D68E4 VA: 0x16D68E4
	public float get_AlphaAnimNow() { }

	// RVA: 0x16D68EC Offset: 0x16D68EC VA: 0x16D68EC
	private static void .cctor() { }
}

// Namespace: 
public enum MenuListControl.CombineKind // TypeDefIndex: 9548
{
	// Fields
	public int value__; // 0x0
	public const MenuListControl.CombineKind SVT_COMBINE = 0;
	public const MenuListControl.CombineKind SKILL_COMBINE = 1;
	public const MenuListControl.CombineKind SVTEQ_COMBINE = 2;
	public const MenuListControl.CombineKind LIMIT_UP = 3;
	public const MenuListControl.CombineKind SPECIAL_ASCENSION = 4;
	public const MenuListControl.CombineKind FRIENDSHIP = 5;
	public const MenuListControl.CombineKind COMMAND_CODE = 6;
	public const MenuListControl.CombineKind COMMAND_CARD_EXCEED = 7;
	public const MenuListControl.CombineKind APPEND_SKILL = 8;
	public const MenuListControl.CombineKind NP_COMBINE = 9;
	public const MenuListControl.CombineKind LV_EXCEED = 10;
	public const MenuListControl.CombineKind SVT_COSTUME = 11;
}

// Namespace: 
public static class NoblePhantasmNameOverwriter // TypeDefIndex: 9549
{
	// Methods

	// RVA: 0x18CA5F8 Offset: 0x18CA5F8 VA: 0x18CA5F8
	public static void SetOverwriteNpLabel(UserServantEntity entity, UILabel npNameLabel, UILabel npRubyLabel) { }

	// RVA: 0x18CA8B4 Offset: 0x18CA8B4 VA: 0x18CA8B4
	private static void SetOverwriteText(UILabel label, string overwriteText) { }
}

// Namespace: 
public class NpCombineControl : CombineMenuControl // TypeDefIndex: 9550
{
	// Fields
	[SerializeField] // RVA: 0xCD655C Offset: 0xCD655C VA: 0xCD655C
	private GameObject defaultNpInfo; // 0x68
	[SerializeField] // RVA: 0xCD656C Offset: 0xCD656C VA: 0xCD656C
	private GameObject npCombineInfoPrefab; // 0x70
	[SerializeField] // RVA: 0xCD657C Offset: 0xCD657C VA: 0xCD657C
	private UILabel currentInfoLb; // 0x78
	[SerializeField] // RVA: 0xCD658C Offset: 0xCD658C VA: 0xCD658C
	private UILabel afterInfoLb; // 0x80
	[SerializeField] // RVA: 0xCD659C Offset: 0xCD659C VA: 0xCD659C
	private UISprite eventNoticeImg; // 0x88
	[SerializeField] // RVA: 0xCD65AC Offset: 0xCD65AC VA: 0xCD65AC
	private UIButton selectMaterialSvtBtn; // 0x90
	[SerializeField] // RVA: 0xCD65BC Offset: 0xCD65BC VA: 0xCD65BC
	private UILabel detailInfoLb; // 0x98
	[SerializeField] // RVA: 0xCD65CC Offset: 0xCD65CC VA: 0xCD65CC
	private UILabel preSelectBaseLb; // 0xA0
	[SerializeField] // RVA: 0xCD65DC Offset: 0xCD65DC VA: 0xCD65DC
	private GameObject baseSelectInfoLb; // 0xA8
	[SerializeField] // RVA: 0xCD65EC Offset: 0xCD65EC VA: 0xCD65EC
	private GameObject maxLvStatusInfo; // 0xB0
	[SerializeField] // RVA: 0xCD65FC Offset: 0xCD65FC VA: 0xCD65FC
	private GameObject materialSvtPrefab; // 0xB8
	[SerializeField] // RVA: 0xCD660C Offset: 0xCD660C VA: 0xCD660C
	private UIGrid materialGrid; // 0xC0
	[SerializeField] // RVA: 0xCD661C Offset: 0xCD661C VA: 0xCD661C
	private UILabel haveQpLb; // 0xC8
	[SerializeField] // RVA: 0xCD662C Offset: 0xCD662C VA: 0xCD662C
	private UILabel needQpLb; // 0xD0
	[SerializeField] // RVA: 0xCD663C Offset: 0xCD663C VA: 0xCD663C
	private UILabel qpLb; // 0xD8
	[SerializeField] // RVA: 0xCD664C Offset: 0xCD664C VA: 0xCD664C
	private UIButton combineBtn; // 0xE0
	[SerializeField] // RVA: 0xCD665C Offset: 0xCD665C VA: 0xCD665C
	private UILabel combineBtnTxt; // 0xE8
	[SerializeField] // RVA: 0xCD666C Offset: 0xCD666C VA: 0xCD666C
	private UISprite combineBtnBg; // 0xF0
	[SerializeField] // RVA: 0xCD667C Offset: 0xCD667C VA: 0xCD667C
	private UISprite combineTxtImg; // 0xF8
	[SerializeField] // RVA: 0xCD668C Offset: 0xCD668C VA: 0xCD668C
	private GameObject baseLvInfo; // 0x100
	[SerializeField] // RVA: 0xCD669C Offset: 0xCD669C VA: 0xCD669C
	private UIIconLabel iconLabel; // 0x108
	[SerializeField] // RVA: 0xCD66AC Offset: 0xCD66AC VA: 0xCD66AC
	private UIScrollView scrollView; // 0x110
	[SerializeField] // RVA: 0xCD66BC Offset: 0xCD66BC VA: 0xCD66BC
	private UIWrapContent wrapContent; // 0x118
	[SerializeField] // RVA: 0xCD66CC Offset: 0xCD66CC VA: 0xCD66CC
	private UICenterOnChild centerChild; // 0x120
	[SerializeField] // RVA: 0xCD66DC Offset: 0xCD66DC VA: 0xCD66DC
	private GameObject arrowInfo; // 0x128
	private bool isScrollNpInfo; // 0x130
	private int currentMoveIdx; // 0x134
	private int haveQpVal; // 0x138
	private int spendQpVal; // 0x13C
	private int userQP; // 0x140
	private int baseSvtId; // 0x144
	private bool isSelectBase; // 0x148
	private List<SvtUseNpData> svtNpDataList; // 0x150
	private SetLevelUpData lvUpData; // 0x158
	private UICharaGraphTexture charaGraph; // 0x160
	private GameObject targetObject; // 0x168
	private List<EventInfoData> combineEventList; // 0x170
	private List<long> selectMtUsrSvtIdList; // 0x178
	protected string[] battleLoadList; // 0x180
	private GameObject tdObject; // 0x188
	private bool isExceedMaxLv; // 0x190
	private bool isCombineSvt; // 0x191
	private bool isExceeded; // 0x192
	[CompilerGeneratedAttribute] // RVA: 0xCD66EC Offset: 0xCD66EC VA: 0xCD66EC
	[DebuggerBrowsableAttribute] // RVA: 0xCD66EC Offset: 0xCD66EC VA: 0xCD66EC
	private bool <isExchangeSvtInList>k__BackingField; // 0x193

	// Properties
	public bool isExchangeSvtInList { get; set; }

	// Methods

	// RVA: 0x18CFDE0 Offset: 0x18CFDE0 VA: 0x18CFDE0
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CAD4 Offset: 0xD3CAD4 VA: 0xD3CAD4
	// RVA: 0x18CFDE8 Offset: 0x18CFDE8 VA: 0x18CFDE8
	public bool get_isExchangeSvtInList() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CAE4 Offset: 0xD3CAE4 VA: 0xD3CAE4
	// RVA: 0x18CFDF0 Offset: 0x18CFDF0 VA: 0x18CFDF0
	private void set_isExchangeSvtInList(bool value) { }

	// RVA: 0x18CFDFC Offset: 0x18CFDFC VA: 0x18CFDFC Slot: 6
	protected override EventTutorialMaster.OpenType GetTutorialOpenType() { }

	// RVA: 0x18CFE04 Offset: 0x18CFE04 VA: 0x18CFE04
	public void InitSvtNpCombine() { }

	// RVA: 0x18CFF28 Offset: 0x18CFF28 VA: 0x18CFF28
	private void InitInfo() { }

	// RVA: 0x18D08D0 Offset: 0x18D08D0 VA: 0x18D08D0
	public void RefreshSvtNpCombineEndShowServant() { }

	// RVA: 0x18D04B0 Offset: 0x18D04B0 VA: 0x18D04B0
	private void InitDispCombineInfo() { }

	// RVA: 0x18D0CFC Offset: 0x18D0CFC VA: 0x18D0CFC
	private void SetHaveQpInfo() { }

	// RVA: 0x18D0D90 Offset: 0x18D0D90 VA: 0x18D0D90
	public void SetSelectMaterialEnable() { }

	// RVA: 0x18D10B8 Offset: 0x18D10B8 VA: 0x18D10B8
	public void SetBaseSvtNpInfo(UserServantEntity usrSvtEn) { }

	// RVA: 0x18D16D8 Offset: 0x18D16D8 VA: 0x18D16D8
	public void SetBaseSvtCardImg(UserServantEntity usrSvtData) { }

	// RVA: 0x18D1314 Offset: 0x18D1314 VA: 0x18D1314
	private List<SvtUseNpData> GetSvtNpData(UserServantEntity usrSvtData) { }

	// RVA: 0x18D188C Offset: 0x18D188C VA: 0x18D188C
	private List<SvtUseNpData> GetNpAddDataList(UserServantEntity usrSvtData, TreasureDvcInfo tdInfo, ServantTreasureDeviceAddEntity tdAddEntity) { }

	// RVA: 0x18D1CB8 Offset: 0x18D1CB8 VA: 0x18D1CB8
	private int GetLimitCountForSingle(int svtId, int cardLimitCount) { }

	// RVA: 0x18D1D84 Offset: 0x18D1D84 VA: 0x18D1D84
	private int GetLimitCountForMulti(int svtId, int cardLimitCount, int condLimitCount, int index) { }

	// RVA: 0x18D1F38 Offset: 0x18D1F38 VA: 0x18D1F38
	private void SetCombineNpList() { }

	// RVA: 0x18D23C4 Offset: 0x18D23C4 VA: 0x18D23C4
	public void ChangeTargetInfo(bool isdecide) { }

	// RVA: 0x18D2498 Offset: 0x18D2498 VA: 0x18D2498
	public void SetSvtNpCombineData() { }

	// RVA: 0x18D29A4 Offset: 0x18D29A4 VA: 0x18D29A4
	public void SetEnableCombineBtn(bool isCombine) { }

	// RVA: 0x18D2A4C Offset: 0x18D2A4C VA: 0x18D2A4C
	public void SetNpCombineNullData() { }

	// RVA: 0x18D2B10 Offset: 0x18D2B10 VA: 0x18D2B10
	public void SetNpCombineData(SetCombineData data) { }

	// RVA: 0x18D360C Offset: 0x18D360C VA: 0x18D360C
	public UserServantEntity GetBaseUsrSvtData() { }

	// RVA: 0x18D0228 Offset: 0x18D0228 VA: 0x18D0228
	public void DestroyGrid() { }

	// RVA: 0x18D0378 Offset: 0x18D0378 VA: 0x18D0378
	public void DestroyMaterialGrid() { }

	// RVA: 0x18D06A4 Offset: 0x18D06A4 VA: 0x18D06A4
	private void SetExeBtnState() { }

	// RVA: 0x18D370C Offset: 0x18D370C VA: 0x18D370C
	public SetLevelUpData GetTargetData() { }

	// RVA: 0x18D3714 Offset: 0x18D3714 VA: 0x18D3714
	public void OnClickExeCombine() { }

	// RVA: 0x18D391C Offset: 0x18D391C VA: 0x18D391C
	public bool CheckTdLvMax(UserServantEntity resData) { }

	// RVA: 0x18D39FC Offset: 0x18D39FC VA: 0x18D39FC
	public void SetStateInfoMsg(CombineRootComponent.StateType state) { }

	// RVA: 0x18D3C3C Offset: 0x18D3C3C VA: 0x18D3C3C
	public void OnClickMaterialSelectList() { }

	// RVA: 0x18D280C Offset: 0x18D280C VA: 0x18D280C
	public static int GetNpLv(UserServantEntity baseUsrSvtData, long[] mtSvtIdList, out int tmpTargetLv) { }

	// RVA: 0x18D3528 Offset: 0x18D3528 VA: 0x18D3528
	public static int GetQp(int currentId, int currentLv, int resNpLv) { }

	// RVA: 0x18D3494 Offset: 0x18D3494 VA: 0x18D3494
	public static bool CheckConfirm(long myUserSvtId) { }

	// RVA: 0x18D3CC0 Offset: 0x18D3CC0 VA: 0x18D3CC0
	public static bool CheckConfirm(UserServantEntity selectUsrSvtEnt) { }

	// RVA: 0x18D0E40 Offset: 0x18D0E40 VA: 0x18D0E40
	private void SetEnabledNpInfoScroll(bool enabled) { }

	// RVA: 0x18D0EC4 Offset: 0x18D0EC4 VA: 0x18D0EC4
	private void ResetScrollView() { }

	// RVA: 0x18D3DC0 Offset: 0x18D3DC0 VA: 0x18D3DC0
	public void OnCenterOnChildFinished() { }

	// RVA: 0x18D3E58 Offset: 0x18D3E58 VA: 0x18D3E58
	public void onClickRightArrow() { }

	// RVA: 0x18D3FB0 Offset: 0x18D3FB0 VA: 0x18D3FB0
	public void onClickLeftArrow() { }

	// RVA: 0x18D3E60 Offset: 0x18D3E60 VA: 0x18D3E60
	private void OnClickArrow(int delte) { }
}

// Namespace: 
public class NpMaterialSvtInfo : MonoBehaviour // TypeDefIndex: 9551
{
	// Fields
	public ServantFaceIconComponent svtFaseIconComp; // 0x18
	public UILabel statusLb; // 0x20
	public GameObject npLvInfo; // 0x28
	public UIIconLabel iconLabel; // 0x30
	public UILabel exceededTxt; // 0x38
	public UISprite materialTdSprite; // 0x40
	private int index; // 0x48
	private long selectUsrSvtId; // 0x50
	private IconLabelInfo iconLabelInfo; // 0x58
	private UserServantEntity selectUsrSvtEnt; // 0x60
	protected NpMaterialSvtInfo.ClickDelegate callbackFunc; // 0x68

	// Methods

	// RVA: 0x18D4470 Offset: 0x18D4470 VA: 0x18D4470
	public void .ctor() { }

	// RVA: 0x18D3220 Offset: 0x18D3220 VA: 0x18D3220
	public void setMaterialSvtInfo(int idx, UserServantEntity baseData, long selectUsrSvtId, NpMaterialSvtInfo.ClickDelegate callback) { }

	// RVA: 0x18D45D8 Offset: 0x18D45D8 VA: 0x18D45D8
	public int getIndex() { }

	// RVA: 0x18D45E0 Offset: 0x18D45E0 VA: 0x18D45E0
	public void OnClickMaterialSvt() { }

	// RVA: 0x18D4844 Offset: 0x18D4844 VA: 0x18D4844
	public void OnClickMaterialStatus() { }

	// RVA: 0x18D44D8 Offset: 0x18D44D8 VA: 0x18D44D8
	public void setNpLvInfo() { }
}

// Namespace: 
public sealed class NpMaterialSvtInfo.ClickDelegate : MulticastDelegate // TypeDefIndex: 9552
{
	// Methods

	// RVA: 0x18D3210 Offset: 0x18D3210 VA: 0x18D3210
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x18D4600 Offset: 0x18D4600 VA: 0x18D4600 Slot: 11
	public virtual void Invoke(CombineMenuControl.TargetType type, long usrSvtId) { }

	// RVA: 0x18D4864 Offset: 0x18D4864 VA: 0x18D4864 Slot: 12
	public virtual IAsyncResult BeginInvoke(CombineMenuControl.TargetType type, long usrSvtId, AsyncCallback callback, object object) { }

	// RVA: 0x18D4910 Offset: 0x18D4910 VA: 0x18D4910 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class RestTimeNoticeControl : MonoBehaviour // TypeDefIndex: 9553
{
	// Fields
	[SerializeField] // RVA: 0xCD6728 Offset: 0xCD6728 VA: 0xCD6728
	private UILabel restTimeLabel; // 0x18
	[SerializeField] // RVA: 0xCD6738 Offset: 0xCD6738 VA: 0xCD6738
	private UISprite textImage; // 0x20
	private long endAt; // 0x28
	private long startAt; // 0x30
	private bool isTimeOver; // 0x38

	// Methods

	// RVA: 0x1AA7B5C Offset: 0x1AA7B5C VA: 0x1AA7B5C
	public void .ctor() { }

	// RVA: 0x1AA7B64 Offset: 0x1AA7B64 VA: 0x1AA7B64
	public void SetTime(long startAt, long endAt) { }

	// RVA: 0x1AA7B6C Offset: 0x1AA7B6C VA: 0x1AA7B6C
	private void Start() { }

	// RVA: 0x1AA7C5C Offset: 0x1AA7C5C VA: 0x1AA7C5C
	private void SetRestTimeLabelColorWhite() { }

	// RVA: 0x1AA7D1C Offset: 0x1AA7D1C VA: 0x1AA7D1C
	public void UpdateRestTime(long now) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CAF4 Offset: 0xD3CAF4 VA: 0xD3CAF4
	// RVA: 0x1AA8080 Offset: 0x1AA8080 VA: 0x1AA8080
	private void <Start>m__0() { }
}

// Namespace: 
public class CombineResultEffectComponent : MonoBehaviour // TypeDefIndex: 9554
{
	// Fields
	public SvtCombineResultWindowComponent svtResultInfoWindow; // 0x18
	public SkillUpResultWindowComponent skillResultInfoWindow; // 0x20
	public LimitUpResultCheckComponent limitUpResultCheck; // 0x28
	public FriendshipExceedResultWindowComponent friendshipExceedResultWindow; // 0x30
	public CommandCardExceedResultWindowComponent commandCardExceedResultWindow; // 0x38
	public GameObject unSummon; // 0x40
	public UILabel unSummonLabel; // 0x48
	public UILabel unSummonDetail; // 0x50
	private readonly string[] startAniName; // 0x58
	private readonly string LimitAnimName; // 0x60
	private readonly float NAME_REVEAL_INVOKE_TIME; // 0x68
	private readonly float NAME_REVEAL_FADE_TIME; // 0x6C
	private readonly float NAME_REVEAL_EMISSION_BASE_SIZE; // 0x70
	private readonly float NAME_REVEAL_EMISSION_BASE_RATE; // 0x74
	private readonly float NAME_REVEAL_EMISSION_BASE_BOX_X; // 0x78
	private readonly float NAME_REVEAL_EMISSION_BASE_BOX_Y; // 0x7C
	public Collider bgCollider; // 0x80
	public GameObject touchInfo; // 0x88
	public LimitCountSealDialogComponent limitCountSealDialog; // 0x90
	private PlayMakerFSM fsm; // 0x98
	private GameObject effect; // 0xA0
	private CombineResultEffectComponent.Kind kind; // 0xA8
	private UIStandFigureR currentSvtFigure; // 0xB0
	private UIStandFigureR limitUpSvtFigure; // 0xB8
	private List<StandFigureCollect> currentFigureCollectList; // 0xC0
	private List<StandFigureCollect> afterFigureCollectList; // 0xC8
	private UserServantEntity baseUsrSvtData; // 0xD0
	private UserServantEntity resUsrSvtData; // 0xD8
	private bool setResUsrSvtData; // 0xE0
	private string combineVoiceId; // 0xE8
	private bool combineStatusDisp; // 0xF0
	private int voiceSvtId; // 0xF4
	private int friendship; // 0xF8
	private ServantChangeEntity crtSvtNameData; // 0x100
	private ServantChangeEntity resSvtNameData; // 0x108
	private int baseUsrSvtCollictionLv; // 0x110
	private int baseUsrSvtCollectionLimitCnt; // 0x114
	private int successInfo; // 0x118
	private int normalExp; // 0x11C
	private int addTotalExp; // 0x120
	private int baseSvtId; // 0x124
	private int oldImgLimitCnt; // 0x128
	private int currentImgLimitCnt; // 0x12C
	private int targetId; // 0x130
	private int targetIdOld; // 0x134
	private int targetLv; // 0x138
	private int targetLvOld; // 0x13C
	private int oldFriendShipRank; // 0x140
	private int targetSvtId; // 0x144
	private int targetFlagId; // 0x148
	private bool isSecretTreasureDeviceRankUpAnim; // 0x14C
	private int combineLimitLv; // 0x150
	private string limitUpPlayVoiceLabel; // 0x158
	private string costumeName; // 0x160
	private int costumeId; // 0x168
	private int commandCardIndex; // 0x16C
	private int commandCardExceedCount; // 0x170
	protected CombineResultEffectComponent.ClickDelegate callbackFunc; // 0x178
	private CombineResultEffectComponent.MessageDelegate messageCallback; // 0x180
	private bool isChangeCardImg; // 0x188
	private UICharaGraphTexture nameRevealCard; // 0x190
	private int[] ChangeCardEffectLvList; // 0x198
	private Vector3 standBasePosition; // 0x1A0
	private SePlayer player; // 0x1B0
	private ServantVoiceEntity svtVoiceEntity; // 0x1B8
	private int maxPlayCnt; // 0x1C0
	private int playCnt; // 0x1C4
	private float volume; // 0x1C8
	private string asstName; // 0x1D0
	private string vcName; // 0x1D8
	private ServantVoiceData[] playVoiceList; // 0x1E0
	private static AssetData effectAssetData; // 0x0
	private int genderType; // 0x1E8
	private int skillShowIndex; // 0x1EC
	private bool treasureDeviceEnabled; // 0x1F0
	private bool autoFadeout; // 0x1F1
	private CheckCombineResStatus combineResStatus; // 0x1F8
	private bool isLimitUpSuppression; // 0x200
	private ServantLimitUpVoiceCache.Type displayType; // 0x204
	private bool isResultEffectSkipped; // 0x208
	private CombineResultEffectComponent.CostumeSkillInfoManager costumeSkillInfoManager; // 0x210
	private int tdShowIndex; // 0x218
	private NpInfoAddManager npInfoAddManager; // 0x220
	private HashSet<CombineResultEffectComponent.Kind> limitUpKinds; // 0x228
	[CompilerGeneratedAttribute] // RVA: 0xCD6748 Offset: 0xCD6748 VA: 0xCD6748
	private static Comparison<ServantTreasureDvcEntity> <>f__am$cache0; // 0x8

	// Methods

	// RVA: 0x1588F04 Offset: 0x1588F04 VA: 0x1588F04
	public void .ctor() { }

	// RVA: 0x1589288 Offset: 0x1589288 VA: 0x1589288
	private void Awake() { }

	// RVA: 0x1589310 Offset: 0x1589310 VA: 0x1589310
	public void SetSkillCombineInfo(CombineResultEffectComponent.Kind kind, UserServantEntity usrSvtData, int targetId, int targetLv, CombineResultEffectComponent.ClickDelegate callback, int targetIdOld = 0, int targetLvOld = 0) { }

	// RVA: 0x15894B0 Offset: 0x15894B0 VA: 0x15894B0
	public void SetNobleCombineInfo(CombineResultEffectComponent.Kind kind, UserServantEntity usrSvtData, int targetId, int targetLv, CombineResultEffectComponent.ClickDelegate callback, int targetIdOld = 0, int targetLvOld = 0) { }

	// RVA: 0x1589798 Offset: 0x1589798 VA: 0x1589798
	public void SetFriendshipUpInfo(UserServantEntity usrSvtData, int oldFriendShipRank, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x1589868 Offset: 0x1589868 VA: 0x1589868
	public void SetSvtCombineInfo(CombineResultEffectComponent.Kind kind, int infoIdx, UserServantEntity baseData, int baseCollectionLv, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x1589950 Offset: 0x1589950 VA: 0x1589950
	public void SetSvtCombineInfo(CombineResultEffectComponent.Kind kind, int infoIdx, UserServantEntity baseData, UserServantEntity resData, int svtId, string voiceId, bool statusDisp, int friendship, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x1589A88 Offset: 0x1589A88 VA: 0x1589A88
	public void SetSvtEqCombineInfo(CombineResultEffectComponent.Kind kind, int infoIdx, int normalExp, int addExp, UserServantEntity baseData, int baseCollectionLv, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x1589B78 Offset: 0x1589B78 VA: 0x1589B78
	public void SetLimitUpCombineInfo(CombineResultEffectComponent.Kind kind, UserServantEntity baseData, int baseCollectionLimitCnt, CombineResultEffectComponent.ClickDelegate callback, ServantChangeEntity servantChange, bool autoFadeout = True, ServantLimitUpVoiceCache.Type displayType = 0, int genderType = -1, string playVoiceLabel) { }

	// RVA: 0x1589D3C Offset: 0x1589D3C VA: 0x1589D3C
	public void SetNameRevealInfo(ServantChangeEntity before, ServantChangeEntity after, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x158A790 Offset: 0x158A790 VA: 0x158A790
	private void NameRevealCrossFade() { }

	// RVA: 0x158A7D0 Offset: 0x158A7D0 VA: 0x158A7D0
	public void SetCostumeCombineInfo(UserServantEntity userSvtEntity, int costumeId, string costumeName, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x158A8C8 Offset: 0x158A8C8 VA: 0x158A8C8
	public void SetPowerUpInfo(UserServantEntity usrSvtData, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x158A988 Offset: 0x158A988 VA: 0x158A988
	public void SetLvExceedCombineInfo(UserServantEntity usrSvtData, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x158AD54 Offset: 0x158AD54 VA: 0x158AD54
	public void SetLvExceedInfoForOtherRoot(UserServantEntity usrSvtData, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x158AE74 Offset: 0x158AE74 VA: 0x158AE74
	public void SetFriendshipCombineInfo(UserServantEntity userSvtData, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x158B07C Offset: 0x158B07C VA: 0x158B07C
	public void SetFriendshipCombineInfoForOtherRoot(UserServantEntity userSvtData, int oldFriendShipRank, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x158B1AC Offset: 0x158B1AC VA: 0x158B1AC
	public void SetCommandCardExceedInfo(UserServantEntity userServantEntity, int cardIndex, int exceedCount, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x158B3CC Offset: 0x158B3CC VA: 0x158B3CC
	public void SetSecretTreasureDeviceInfoForQuestClear(int questId, int phase, CombineResultEffectComponent.MessageDelegate msgCallBack, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x158BA98 Offset: 0x158BA98 VA: 0x158BA98
	public void SetSecretTreasureDeviceInfoForSvtGet(int svtId, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x158BBF8 Offset: 0x158BBF8 VA: 0x158BBF8
	public void SetAppendSkillCombineInfo(UserServantEntity usrSvtData, int currentSkillId, int currentSkillLv, CombineResultEffectComponent.ClickDelegate callback) { }

	// RVA: 0x158B8C8 Offset: 0x158B8C8 VA: 0x158B8C8
	private bool checkSecretTreasureDeviceData(int svtId) { }

	// RVA: 0x158BD10 Offset: 0x158BD10 VA: 0x158BD10
	private bool CheckCombineLimit(int oldLv, int currentLv) { }

	// RVA: 0x158BE40 Offset: 0x158BE40 VA: 0x158BE40
	public void SetCombineLimit(UserServantEntity baseData, CombineResultEffectComponent.ClickDelegate callback, bool autoFadeout = True) { }

	// RVA: 0x158BF94 Offset: 0x158BF94 VA: 0x158BF94
	public void InitCombineEffect() { }

	// RVA: 0x158C788 Offset: 0x158C788 VA: 0x158C788
	private void loadBoxGachaEffect() { }

	// RVA: 0x158C9F4 Offset: 0x158C9F4 VA: 0x158C9F4
	private void endloadEffect(AssetData data) { }

	// RVA: 0x158CB00 Offset: 0x158CB00 VA: 0x158CB00
	public static GameObject getEffect(string name, Transform parentTr) { }

	// RVA: 0x158CCD4 Offset: 0x158CCD4 VA: 0x158CCD4
	public void SetCardParam() { }

	// RVA: 0x158C1E8 Offset: 0x158C1E8 VA: 0x158C1E8
	private void SetResultUserServantData() { }

	// RVA: 0x158C838 Offset: 0x158C838 VA: 0x158C838
	private void SetResultServantVoiceData() { }

	// RVA: 0x158E224 Offset: 0x158E224 VA: 0x158E224
	private void SetCardParam_Skill(string startName, bool isSkip = False) { }

	// RVA: 0x158E3D0 Offset: 0x158E3D0 VA: 0x158E3D0
	private void SetCardParam_TreasureDvc(string startName, bool isSkip = False) { }

	// RVA: 0x15911B0 Offset: 0x15911B0 VA: 0x15911B0
	public void setEffectEnable() { }

	// RVA: 0x1590B80 Offset: 0x1590B80 VA: 0x1590B80
	private void getSvtVoiceData(int voiceId = -1, int costumeId = -1, bool isLimitUp = False) { }

	// RVA: 0x15911E4 Offset: 0x15911E4 VA: 0x15911E4
	private void getCostumeSvtVoiceData() { }

	// RVA: 0x1590D9C Offset: 0x1590D9C VA: 0x1590D9C
	private void loadVoiceData() { }

	// RVA: 0x158E590 Offset: 0x158E590 VA: 0x158E590
	private void setBaseSvtFigure(int formId = 0) { }

	// RVA: 0x159131C Offset: 0x159131C VA: 0x159131C
	private void SetBaseSvtFigure(int formId = 0) { }

	// RVA: 0x158DDE4 Offset: 0x158DDE4 VA: 0x158DDE4
	private void SetLevelUpSvtFigure() { }

	// RVA: 0x1590F44 Offset: 0x1590F44 VA: 0x1590F44
	private void setBaseSecretTreasureDvcSvtFigure() { }

	// RVA: 0x1591900 Offset: 0x1591900 VA: 0x1591900
	private UIPanel GetStandFigureNode(string fmsString) { }

	// RVA: 0x158E8A8 Offset: 0x158E8A8 VA: 0x158E8A8
	private void SetBeforeLimitUpSvtFigure() { }

	// RVA: 0x158FF84 Offset: 0x158FF84 VA: 0x158FF84
	private void setLimitUpBaseSvtFigure() { }

	// RVA: 0x158EEC8 Offset: 0x158EEC8 VA: 0x158EEC8
	private void SetAfterLimitUpSvtFigure(bool isForceNormalFace = False) { }

	// RVA: 0x159073C Offset: 0x159073C VA: 0x159073C
	private void SetLimitUpAfterSvtFigure(bool isForceNormalFace = False) { }

	// RVA: 0x15919E8 Offset: 0x15919E8 VA: 0x15919E8
	private bool GetIsIgnoreFormChange(int svtId, int limit) { }

	// RVA: 0x1590244 Offset: 0x1590244 VA: 0x1590244
	private void setCostumeCombineResSvtFigure() { }

	// RVA: 0x158A2F0 Offset: 0x158A2F0 VA: 0x158A2F0
	private void setNameRevealSvtFigure(int svtId, int limitCnt) { }

	// RVA: 0x158F720 Offset: 0x158F720 VA: 0x158F720
	private void setBaseSvtGraphCard(UICharaGraphRender.RealNameCheck changeNameType = 0) { }

	// RVA: 0x158FA84 Offset: 0x158FA84 VA: 0x158FA84
	private void setResultSvtGraphCard(UICharaGraphRender.RealNameCheck changeNameType = 0) { }

	// RVA: 0x158A51C Offset: 0x158A51C VA: 0x158A51C
	private void setNameRevealSvtGraphCard(int svtId, int limitCnt, UICharaGraphRender.RealNameCheck changeNameType = 0) { }

	// RVA: 0x15904A0 Offset: 0x15904A0 VA: 0x15904A0
	private void setResultCostumeSvtGraphCard(UICharaGraphRender.RealNameCheck changeNameType = 0) { }

	// RVA: 0x158FE08 Offset: 0x158FE08 VA: 0x158FE08
	private ServantVoiceData[] getLimitUpSvtVoiceList(bool isPlayVoice = False) { }

	// RVA: 0x1591AC4 Offset: 0x1591AC4 VA: 0x1591AC4
	private ServantVoiceData[] getCostumeSvtVoiceList() { }

	// RVA: 0x1591B64 Offset: 0x1591B64 VA: 0x1591B64
	public void setSkillResultInfo() { }

	// RVA: 0x1590E68 Offset: 0x1590E68 VA: 0x1590E68
	private void EndLoad() { }

	// RVA: 0x15935FC Offset: 0x15935FC VA: 0x15935FC
	private void SetStandFigureFace(int faceType, int playCount, ServantVoiceData[] playVoiceList, List<StandFigureCollect> standFigureCollects) { }

	// RVA: 0x1593144 Offset: 0x1593144 VA: 0x1593144
	private void playVoice() { }

	// RVA: 0x159386C Offset: 0x159386C VA: 0x159386C
	private void InitChangeInfoOnCostume() { }

	// RVA: 0x1593E38 Offset: 0x1593E38 VA: 0x1593E38
	private void ShowSkillChangeMessage() { }

	// RVA: 0x1593F38 Offset: 0x1593F38 VA: 0x1593F38
	private void ShowNpChangeInfo(int index) { }

	// RVA: 0x1594094 Offset: 0x1594094 VA: 0x1594094
	private void ShowSkillChangeInfo(int index) { }

	// RVA: 0x1594208 Offset: 0x1594208 VA: 0x1594208
	private void ShowTreasureDeviceChangeInfo() { }

	// RVA: 0x1594428 Offset: 0x1594428 VA: 0x1594428
	private void EndPlay() { }

	// RVA: 0x1594A20 Offset: 0x1594A20 VA: 0x1594A20
	private bool IsShowNextNpInfo() { }

	// RVA: 0x1594844 Offset: 0x1594844 VA: 0x1594844
	private bool IsShowSkillInfoOnCostume() { }

	// RVA: 0x1594A78 Offset: 0x1594A78 VA: 0x1594A78
	private bool IsShowTreasureDeviceInfoOnCostume() { }

	// RVA: 0x1594720 Offset: 0x1594720 VA: 0x1594720
	public void stopVoice() { }

	// RVA: 0x1594A80 Offset: 0x1594A80 VA: 0x1594A80
	private void ReleaseVoiceData() { }

	// RVA: 0x1593404 Offset: 0x1593404 VA: 0x1593404
	private void EndDisp() { }

	// RVA: 0x1594B34 Offset: 0x1594B34 VA: 0x1594B34
	public void clickNext() { }

	// RVA: 0x15951B0 Offset: 0x15951B0 VA: 0x15951B0
	private void FadeoutProcess() { }

	// RVA: 0x1594CE0 Offset: 0x1594CE0 VA: 0x1594CE0
	private bool OpenNotification() { }

	// RVA: 0x15952D4 Offset: 0x15952D4 VA: 0x15952D4
	private void DestroySvtFigure() { }

	// RVA: 0x1595810 Offset: 0x1595810 VA: 0x1595810
	public void Close() { }

	// RVA: 0x159345C Offset: 0x159345C VA: 0x159345C
	private void OpenLimitCountSealDialog() { }

	// RVA: 0x159590C Offset: 0x159590C VA: 0x159590C
	private void CloseLimitCountSealDialog() { }

	// RVA: 0x15947AC Offset: 0x15947AC VA: 0x15947AC
	private bool CheckSaintGraphProfileChange(int svtId, int limitCount) { }

	// RVA: 0x15959C8 Offset: 0x15959C8 VA: 0x15959C8
	private void ProfileChangeDecideAction(int svtId, int limitCount, bool isDecide, Action finishCallback) { }

	// RVA: 0x1595CC0 Offset: 0x1595CC0 VA: 0x1595CC0
	public void OnClickResultEffectSkip() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CB04 Offset: 0xD3CB04 VA: 0xD3CB04
	// RVA: 0x1595D40 Offset: 0x1595D40 VA: 0x1595D40
	private void <SetLvExceedInfoForOtherRoot>m__0(AssetData data) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CB14 Offset: 0xD3CB14 VA: 0xD3CB14
	// RVA: 0x1595F38 Offset: 0x1595F38 VA: 0x1595F38
	private void <SetFriendshipCombineInfoForOtherRoot>m__1(AssetData data) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CB24 Offset: 0xD3CB24 VA: 0xD3CB24
	// RVA: 0x1596130 Offset: 0x1596130 VA: 0x1596130
	private static int <SetSecretTreasureDeviceInfoForQuestClear>m__2(ServantTreasureDvcEntity a, ServantTreasureDvcEntity b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CB34 Offset: 0xD3CB34 VA: 0xD3CB34
	// RVA: 0x1596174 Offset: 0x1596174 VA: 0x1596174
	private void <SetAppendSkillCombineInfo>m__3(AssetData data) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CB44 Offset: 0xD3CB44 VA: 0xD3CB44
	// RVA: 0x159636C Offset: 0x159636C VA: 0x159636C
	private void <SetCombineLimit>m__4(AssetData data) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CB54 Offset: 0xD3CB54 VA: 0xD3CB54
	// RVA: 0x159661C Offset: 0x159661C VA: 0x159661C
	private void <InitCombineEffect>m__5() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CB64 Offset: 0xD3CB64 VA: 0xD3CB64
	// RVA: 0x1596680 Offset: 0x1596680 VA: 0x1596680
	private void <endloadEffect>m__6() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CB74 Offset: 0xD3CB74 VA: 0xD3CB74
	// RVA: 0x15966E4 Offset: 0x15966E4 VA: 0x15966E4
	private void <SetCardParam>m__7() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CB84 Offset: 0xD3CB84 VA: 0xD3CB84
	// RVA: 0x15966E8 Offset: 0x15966E8 VA: 0x15966E8
	private void <SetCardParam_Skill>m__8() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CB94 Offset: 0xD3CB94 VA: 0xD3CB94
	// RVA: 0x15966EC Offset: 0x15966EC VA: 0x15966EC
	private void <SetCardParam_TreasureDvc>m__9() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CBA4 Offset: 0xD3CBA4 VA: 0xD3CBA4
	// RVA: 0x15966F0 Offset: 0x15966F0 VA: 0x15966F0
	private void <EndLoad>m__A() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CBB4 Offset: 0xD3CBB4 VA: 0xD3CBB4
	// RVA: 0x1596780 Offset: 0x1596780 VA: 0x1596780
	private void <ShowSkillChangeMessage>m__B() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CBC4 Offset: 0xD3CBC4 VA: 0xD3CBC4
	// RVA: 0x15967B4 Offset: 0x15967B4 VA: 0x15967B4
	private void <ShowNpChangeInfo>m__C() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CBD4 Offset: 0xD3CBD4 VA: 0xD3CBD4
	// RVA: 0x15967E8 Offset: 0x15967E8 VA: 0x15967E8
	private void <ShowSkillChangeInfo>m__D() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CBE4 Offset: 0xD3CBE4 VA: 0xD3CBE4
	// RVA: 0x159681C Offset: 0x159681C VA: 0x159681C
	private void <ShowTreasureDeviceChangeInfo>m__E() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CBF4 Offset: 0xD3CBF4 VA: 0xD3CBF4
	// RVA: 0x1596850 Offset: 0x1596850 VA: 0x1596850
	private void <FadeoutProcess>m__F() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3CC04 Offset: 0xD3CC04 VA: 0xD3CC04
	// RVA: 0x1596884 Offset: 0x1596884 VA: 0x1596884
	private void <OpenNotification>m__10() { }
}

// Namespace: 
public enum CombineResultEffectComponent.Kind // TypeDefIndex: 9555
{
	// Fields
	public int value__; // 0x0
