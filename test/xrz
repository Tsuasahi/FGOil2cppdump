	// Fields
	public UserServantEntity baseSvtData; // 0x10
	public int combineResSvtLv; // 0x18
	public int combineResLimitCnt; // 0x1C
	public int combineResSvtMaxLv; // 0x20
	public float combineResExpBarVal; // 0x24
	public int combineResNextExp; // 0x28
	public int combineResHp; // 0x2C
	public int hpAdjustVal; // 0x30
	public int combineResAtk; // 0x34
	public int atkAdjustVal; // 0x38

	// Methods

	// RVA: 0x164F92C Offset: 0x164F92C VA: 0x164F92C
	public void .ctor() { }
}

// Namespace: 
public class EventInfoData // TypeDefIndex: 9538
{
	// Fields
	public int eventId; // 0x10
	public int type; // 0x14
	public int iconId; // 0x18
	public int[] targetIds; // 0x20
	public string name; // 0x28
	public string detail; // 0x30
	public float value; // 0x38
	public long startAt; // 0x40
	public long endAt; // 0x48
	public EventEntity eventEntity; // 0x50

	// Methods

	// RVA: 0x15F89BC Offset: 0x15F89BC VA: 0x15F89BC
	public void .ctor() { }
}

// Namespace: 
public class LevelUpInfoData // TypeDefIndex: 9539
{
	// Fields
	public int oldLv; // 0x10
	public int currentLv; // 0x14
	public int currentHp; // 0x18
	public int increHpVal; // 0x1C
	public int currentAtk; // 0x20
	public int increAtkVal; // 0x24

	// Methods

	// RVA: 0x11CD3E4 Offset: 0x11CD3E4 VA: 0x11CD3E4
	public void .ctor() { }
}

// Namespace: Assets.Game.Scripts.Play.Combine.Data
public class NpInfoAddManager // TypeDefIndex: 9540
{
	// Fields
	private List<SvtUseNpData> beforeList; // 0x10
	private List<SvtUseNpData> afterList; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC690AC Offset: 0xC690AC VA: 0xC690AC
	[DebuggerBrowsableAttribute] // RVA: 0xC690AC Offset: 0xC690AC VA: 0xC690AC
	private ServantTreasureDeviceAddEntity <tdAddEntity>k__BackingField; // 0x20

	// Properties
	public ServantTreasureDeviceAddEntity tdAddEntity { get; set; }

	// Methods

	// RVA: 0x141AAE4 Offset: 0x141AAE4 VA: 0x141AAE4
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF3C0 Offset: 0xCCF3C0 VA: 0xCCF3C0
	// RVA: 0x141AB78 Offset: 0x141AB78 VA: 0x141AB78
	public ServantTreasureDeviceAddEntity get_tdAddEntity() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF3D0 Offset: 0xCCF3D0 VA: 0xCCF3D0
	// RVA: 0x141AB80 Offset: 0x141AB80 VA: 0x141AB80
	private void set_tdAddEntity(ServantTreasureDeviceAddEntity value) { }

	// RVA: 0x141AB88 Offset: 0x141AB88 VA: 0x141AB88
	public void SetEntity(ServantTreasureDeviceAddEntity entity) { }

	// RVA: 0x141AB90 Offset: 0x141AB90 VA: 0x141AB90
	public void AddBeforeNp(int id, int lv) { }

	// RVA: 0x141AC48 Offset: 0x141AC48 VA: 0x141AC48
	public void AddAfterNp(int id, int lv) { }

	// RVA: 0x141AD00 Offset: 0x141AD00 VA: 0x141AD00
	public SvtUseNpData GetBeforeNp(int index) { }

	// RVA: 0x141AD70 Offset: 0x141AD70 VA: 0x141AD70
	public SvtUseNpData GetAfterNp(int index) { }

	// RVA: 0x141ADE0 Offset: 0x141ADE0 VA: 0x141ADE0
	public int GetAfterNpCount() { }
}

// Namespace: 
public class RecommendedConfigSaveData // TypeDefIndex: 9541
{
	// Fields
	public static readonly string SAVE_KEY; // 0x0
	public int selectClass; // 0x10
	public List<int> selectRarityList; // 0x18

	// Methods

	// RVA: 0x157EA88 Offset: 0x157EA88 VA: 0x157EA88
	public void .ctor() { }

	// RVA: 0x157EAF8 Offset: 0x157EAF8 VA: 0x157EAF8
	public bool IsExist() { }

	// RVA: 0x157EB64 Offset: 0x157EB64 VA: 0x157EB64
	public static RecommendedConfigSaveData LoadConfigSaveData() { }

	// RVA: 0x157EBE0 Offset: 0x157EBE0 VA: 0x157EBE0
	public void SaveConfig(RecommendedConfigSaveData saveData) { }

	// RVA: 0x157EC68 Offset: 0x157EC68 VA: 0x157EC68
	public bool IsMix() { }

	// RVA: 0x157EC78 Offset: 0x157EC78 VA: 0x157EC78
	public bool IsAll() { }

	// RVA: 0x157EC88 Offset: 0x157EC88 VA: 0x157EC88
	public bool IsTargetOnly() { }

	// RVA: 0x157EC98 Offset: 0x157EC98 VA: 0x157EC98
	public bool CanNotSelect() { }

	// RVA: 0x157ED0C Offset: 0x157ED0C VA: 0x157ED0C
	private static void .cctor() { }
}

// Namespace: 
public enum RecommendedConfigSaveData.ClassType // TypeDefIndex: 9542
{
	// Fields
	public int value__; // 0x0
	public const RecommendedConfigSaveData.ClassType MIX = 0;
	public const RecommendedConfigSaveData.ClassType ALL = 1;
	public const RecommendedConfigSaveData.ClassType TARGET = 2;
}

// Namespace: 
public class SetCombineData // TypeDefIndex: 9543
{
	// Fields
	public UserServantEntity baseSvtData; // 0x10
	public int selectSum; // 0x18
	public int spendQp; // 0x1C
	public int getExp; // 0x20
	public int getAddExp; // 0x24
	public int selectMax; // 0x28
	public bool isAdjustMax; // 0x2C
	public bool isSecondAdjustMax; // 0x2D
	public int getHpAdjustVal; // 0x30
	public int getAtkAdjustVal; // 0x34
	public long[] materialUsrSvtIdList; // 0x38
	public Dictionary<long, bool> svtEqMaterialList; // 0x40

	// Methods

	// RVA: 0x13269C4 Offset: 0x13269C4 VA: 0x13269C4
	public void .ctor() { }
}

// Namespace: 
public class SetLevelUpData // TypeDefIndex: 9544
{
	// Fields
	public int currentId; // 0x10
	public int currentIndex; // 0x14
	public int realIndex; // 0x18
	public string targetRuby; // 0x20
	public string targetName; // 0x28
	public string targetDetail; // 0x30
	public int currentLv; // 0x38
	public int nextLv; // 0x3C
	public int spendQp; // 0x40
	public int haveQp; // 0x44
	public int spendSvtCoin; // 0x48
	public int haveSvtCoin; // 0x4C
	public int[] combineItemIds; // 0x50
	public bool isNpAdd; // 0x58

	// Methods

	// RVA: 0x13290EC Offset: 0x13290EC VA: 0x13290EC
	public void .ctor() { }
}

// Namespace: 
public class SetLimitCntInfoComponent : MonoBehaviour // TypeDefIndex: 9545
{
	// Fields
	public UISprite onImg; // 0x18

	// Methods

	// RVA: 0x13290F4 Offset: 0x13290F4 VA: 0x13290F4
	public void .ctor() { }

	// RVA: 0x13290FC Offset: 0x13290FC VA: 0x13290FC
	public void setEnableOnImg(bool isOn) { }
}

// Namespace: 
public class SvtUseNpData // TypeDefIndex: 9546
{
	// Fields
	public int svtId; // 0x10
	public int svtDispNpId; // 0x14
	public int svtUseNpId; // 0x18
	public int svtNpLv; // 0x1C
	public string npRuby; // 0x20
	public string svtNpName; // 0x28
	public int npCardId; // 0x30
	public string svtNpdetail; // 0x38
	public bool isCardHide; // 0x40
	public bool isNpAdd; // 0x41
	public int limitCount; // 0x44
	public int cardLimitCount; // 0x48
	public int dispLimitCount; // 0x4C

	// Methods

	// RVA: 0x1087208 Offset: 0x1087208 VA: 0x1087208
	public void .ctor() { }
}

// Namespace: 
public class SvtUseSkillData // TypeDefIndex: 9547
{
	// Fields
	public int[] svtUseSkillIdList; // 0x10
	public int[] svtSkillLvList; // 0x18
	public int[] svtSkillNumsList; // 0x20

	// Methods

	// RVA: 0x1087210 Offset: 0x1087210 VA: 0x1087210
	public void .ctor() { }
}

// Namespace: 
public class EventBannerControl : BaseMonoBehaviour // TypeDefIndex: 9548
{
	// Fields
	public CombineInitData combineData; // 0x18
	public GameObject bannerPf; // 0x20
	public UIGrid bannerGrid; // 0x28
	private List<int> bannerIdList; // 0x30
	private List<GameObject> bannerObjList; // 0x38

	// Methods

	// RVA: 0x1867F78 Offset: 0x1867F78 VA: 0x1867F78
	public void .ctor() { }

	// RVA: 0x1868010 Offset: 0x1868010 VA: 0x1868010
	public void ClearBanner() { }

	// RVA: 0x1868174 Offset: 0x1868174 VA: 0x1868174
	public void setBannerList() { }
}

// Namespace: 
public class EventNoticeControl : MonoBehaviour // TypeDefIndex: 9549
{
	// Fields
	private const int CONDENSE_THRESHOLD = 320;
	private const float CONDENSE_MAGNIFICATION = 0.8;
	[SerializeField] // RVA: 0xC690E8 Offset: 0xC690E8 VA: 0xC690E8
	private UILabel eventDetailLabel; // 0x18
	[SerializeField] // RVA: 0xC690F8 Offset: 0xC690F8 VA: 0xC690F8
	private UISprite eventDetailSprite; // 0x20
	[SerializeField] // RVA: 0xC69108 Offset: 0xC69108 VA: 0xC69108
	private UILabel eventRemainLabel; // 0x28
	private List<EventNoticeControl.EventInfo> eventInfoList; // 0x30
	private bool isNeedToUpdate; // 0x38
	private int eventInfoIndex; // 0x3C

	// Properties
	private bool IsMultiple { get; }

	// Methods

	// RVA: 0x197A7DC Offset: 0x197A7DC VA: 0x197A7DC
	public void .ctor() { }

	// RVA: 0x197A84C Offset: 0x197A84C VA: 0x197A84C
	public void Initialize() { }

	// RVA: 0x197A99C Offset: 0x197A99C VA: 0x197A99C
	public void SetCombineEventData(EventInfoData data) { }

	// RVA: 0x197AC4C Offset: 0x197AC4C VA: 0x197AC4C
	public void UpdateEventNotice() { }

	// RVA: 0x197A8B4 Offset: 0x197A8B4 VA: 0x197A8B4
	private void InitLabelAndSprite() { }

	// RVA: 0x197AD28 Offset: 0x197AD28 VA: 0x197AD28
	private bool GetIsNeedToInfoUpdate(List<EventNoticeControl.EventInfo> eventInfolist, long now, bool isNeedToUpdate) { }

	// RVA: 0x197B0EC Offset: 0x197B0EC VA: 0x197B0EC
	public static void SetRemainTime(long remainTime, UILabel label) { }

	// RVA: 0x197B41C Offset: 0x197B41C VA: 0x197B41C
	public void ChangeEventInfo() { }

	// RVA: 0x197B4BC Offset: 0x197B4BC VA: 0x197B4BC
	public void SetAlpha(float alpha) { }

	// RVA: 0x197AE94 Offset: 0x197AE94 VA: 0x197AE94
	private void SetLabelAndSprite(int index) { }

	// RVA: 0x197AE28 Offset: 0x197AE28 VA: 0x197AE28
	private bool get_IsMultiple() { }
}

// Namespace: 
private class EventNoticeControl.EventInfo // TypeDefIndex: 9550
{
	// Fields
	private const string SPRITE_NAME_BASE = "synthesis_notice_";
	[CompilerGeneratedAttribute] // RVA: 0xC69118 Offset: 0xC69118 VA: 0xC69118
	[DebuggerBrowsableAttribute] // RVA: 0xC69118 Offset: 0xC69118 VA: 0xC69118
	private string <EventName>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC69154 Offset: 0xC69154 VA: 0xC69154
	[DebuggerBrowsableAttribute] // RVA: 0xC69154 Offset: 0xC69154 VA: 0xC69154
	private string <SpriteName>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC69190 Offset: 0xC69190 VA: 0xC69190
	[DebuggerBrowsableAttribute] // RVA: 0xC69190 Offset: 0xC69190 VA: 0xC69190
	private long <EndAt>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC691CC Offset: 0xC691CC VA: 0xC691CC
	[DebuggerBrowsableAttribute] // RVA: 0xC691CC Offset: 0xC691CC VA: 0xC691CC
	private long <StartAt>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC69208 Offset: 0xC69208 VA: 0xC69208
	[DebuggerBrowsableAttribute] // RVA: 0xC69208 Offset: 0xC69208 VA: 0xC69208
	private bool <IsSprite>k__BackingField; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC69244 Offset: 0xC69244 VA: 0xC69244
	[DebuggerBrowsableAttribute] // RVA: 0xC69244 Offset: 0xC69244 VA: 0xC69244
	private bool <IsTimeOver>k__BackingField; // 0x31

	// Properties
	public string EventName { get; set; }
	public string SpriteName { get; set; }
	public long EndAt { get; set; }
	public long StartAt { get; set; }
	public bool IsSprite { get; set; }
	public bool IsTimeOver { get; set; }

	// Methods

	// RVA: 0x197AA34 Offset: 0x197AA34 VA: 0x197AA34
	public void .ctor(EventInfoData eventInfoData) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF3E0 Offset: 0xCCF3E0 VA: 0xCCF3E0
	// RVA: 0x197B574 Offset: 0x197B574 VA: 0x197B574
	public string get_EventName() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF3F0 Offset: 0xCCF3F0 VA: 0xCCF3F0
	// RVA: 0x197B57C Offset: 0x197B57C VA: 0x197B57C
	private void set_EventName(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF400 Offset: 0xCCF400 VA: 0xCCF400
	// RVA: 0x197B56C Offset: 0x197B56C VA: 0x197B56C
	public string get_SpriteName() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF410 Offset: 0xCCF410 VA: 0xCCF410
	// RVA: 0x197B5A0 Offset: 0x197B5A0 VA: 0x197B5A0
	private void set_SpriteName(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF420 Offset: 0xCCF420 VA: 0xCCF420
	// RVA: 0x197B0D0 Offset: 0x197B0D0 VA: 0x197B0D0
	public long get_EndAt() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF430 Offset: 0xCCF430 VA: 0xCCF430
	// RVA: 0x197B584 Offset: 0x197B584 VA: 0x197B584
	private void set_EndAt(long value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF440 Offset: 0xCCF440 VA: 0xCCF440
	// RVA: 0x197B0E4 Offset: 0x197B0E4 VA: 0x197B0E4
	public long get_StartAt() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF450 Offset: 0xCCF450 VA: 0xCCF450
	// RVA: 0x197B58C Offset: 0x197B58C VA: 0x197B58C
	private void set_StartAt(long value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF460 Offset: 0xCCF460 VA: 0xCCF460
	// RVA: 0x197B564 Offset: 0x197B564 VA: 0x197B564
	public bool get_IsSprite() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF470 Offset: 0xCCF470 VA: 0xCCF470
	// RVA: 0x197B5A8 Offset: 0x197B5A8 VA: 0x197B5A8
	private void set_IsSprite(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF480 Offset: 0xCCF480 VA: 0xCCF480
	// RVA: 0x197B0C8 Offset: 0x197B0C8 VA: 0x197B0C8
	public bool get_IsTimeOver() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF490 Offset: 0xCCF490 VA: 0xCCF490
	// RVA: 0x197B594 Offset: 0x197B594 VA: 0x197B594
	private void set_IsTimeOver(bool value) { }

	// RVA: 0x197B0D8 Offset: 0x197B0D8 VA: 0x197B0D8
	public void SetIsTimeOver() { }
}

// Namespace: 
public class FriendshipExceedControl : CombineMenuControl // TypeDefIndex: 9551
{
	// Fields
	private readonly Color NORMAL_COLOR; // 0x64
	[SerializeField] // RVA: 0xC69280 Offset: 0xC69280 VA: 0xC69280
	private FriendshipExceedInfoComponent friendshipExceedInfoComponent; // 0x78
	[SerializeField] // RVA: 0xC69290 Offset: 0xC69290 VA: 0xC69290
	private UIPanel panel; // 0x80
	[SerializeField] // RVA: 0xC692A0 Offset: 0xC692A0 VA: 0xC692A0
	private GameObject characterGraphicBase; // 0x88
	[SerializeField] // RVA: 0xC692B0 Offset: 0xC692B0 VA: 0xC692B0
	private UILabel preSelectBaseLabel; // 0x90
	[SerializeField] // RVA: 0xC692C0 Offset: 0xC692C0 VA: 0xC692C0
	private GameObject baseSelectInfoLabel; // 0x98
	[SerializeField] // RVA: 0xC692D0 Offset: 0xC692D0 VA: 0xC692D0
	private UILabel detailInfoLabel; // 0xA0
	[SerializeField] // RVA: 0xC692E0 Offset: 0xC692E0 VA: 0xC692E0
	private UILabel userQpLabel; // 0xA8
	[SerializeField] // RVA: 0xC692F0 Offset: 0xC692F0 VA: 0xC692F0
	private UILabel requiredQpLabel; // 0xB0
	[SerializeField] // RVA: 0xC69300 Offset: 0xC69300 VA: 0xC69300
	private UISprite combineButtonBg; // 0xB8
	[SerializeField] // RVA: 0xC69310 Offset: 0xC69310 VA: 0xC69310
	private UILabel combineButtonText; // 0xC0
	[SerializeField] // RVA: 0xC69320 Offset: 0xC69320 VA: 0xC69320
	private UISprite combineTextImage; // 0xC8
	[SerializeField] // RVA: 0xC69330 Offset: 0xC69330 VA: 0xC69330
	private List<LimitCntUpItemComponent> limitCntUpItemComponentList; // 0xD0
	[SerializeField] // RVA: 0xC69340 Offset: 0xC69340 VA: 0xC69340
	private List<GameObject> materialImages; // 0xD8
	[SerializeField] // RVA: 0xC69350 Offset: 0xC69350 VA: 0xC69350
	private UIButton executeButton; // 0xE0
	[SerializeField] // RVA: 0xC69360 Offset: 0xC69360 VA: 0xC69360
	private UITouchPress baseServantTouchPress; // 0xE8
	[SerializeField] // RVA: 0xC69370 Offset: 0xC69370 VA: 0xC69370
	private GameObject splitImage; // 0xF0
	private bool isBaseSelected; // 0xF8
	private bool isFriendshipRankMax; // 0xF9
	private bool isQpEnough; // 0xFA
	private bool isItemEnough; // 0xFB
	private bool isButtonInitialized; // 0xFC
	private int userQp; // 0x100
	private int requiredQp; // 0x104
	private UserServantCollectionEntity baseUserServantCollectionEntity; // 0x108
	private UICharaGraphTexture characterGraphic; // 0x110
	private Vector3 center; // 0x118
	[CompilerGeneratedAttribute] // RVA: 0xC69380 Offset: 0xC69380 VA: 0xC69380
	[DebuggerBrowsableAttribute] // RVA: 0xC69380 Offset: 0xC69380 VA: 0xC69380
	private FriendshipEntity <FriendshipEntity>k__BackingField; // 0x128

	// Properties
	public bool IsExecutable { get; }
	public List<LimitCntUpItemComponent> ItemInfoList { get; }
	public FriendshipEntity FriendshipEntity { get; set; }

	// Methods

	// RVA: 0x1929538 Offset: 0x1929538 VA: 0x1929538
	public void .ctor() { }

	// RVA: 0x19295A4 Offset: 0x19295A4 VA: 0x19295A4
	public bool get_IsExecutable() { }

	// RVA: 0x19295D4 Offset: 0x19295D4 VA: 0x19295D4
	public List<LimitCntUpItemComponent> get_ItemInfoList() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF4A0 Offset: 0xCCF4A0 VA: 0xCCF4A0
	// RVA: 0x19295DC Offset: 0x19295DC VA: 0x19295DC
	public FriendshipEntity get_FriendshipEntity() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF4B0 Offset: 0xCCF4B0 VA: 0xCCF4B0
	// RVA: 0x19295E4 Offset: 0x19295E4 VA: 0x19295E4
	private void set_FriendshipEntity(FriendshipEntity value) { }

	// RVA: 0x19295EC Offset: 0x19295EC VA: 0x19295EC Slot: 6
	protected override EventTutorialMaster.OpenType GetTutorialOpenType() { }

	// RVA: 0x19295F4 Offset: 0x19295F4 VA: 0x19295F4
	public void InitFriendshipExceed() { }

	// RVA: 0x1929B38 Offset: 0x1929B38 VA: 0x1929B38
	public void CheckTutorial() { }

	// RVA: 0x192990C Offset: 0x192990C VA: 0x192990C
	private void InitInfo() { }

	// RVA: 0x192974C Offset: 0x192974C VA: 0x192974C
	private void InitButtons() { }

	// RVA: 0x1929B5C Offset: 0x1929B5C VA: 0x1929B5C
	private void SetUserQpInfo() { }

	// RVA: 0x1929BF0 Offset: 0x1929BF0 VA: 0x1929BF0
	private void SetRequiredQpInfo() { }

	// RVA: 0x192A3F0 Offset: 0x192A3F0 VA: 0x192A3F0
	public void SetSelectedBaseServantId(UserServantEntity selectData) { }

	// RVA: 0x192A4E8 Offset: 0x192A4E8 VA: 0x192A4E8
	public void ShowItemListInfo() { }

	// RVA: 0x192A590 Offset: 0x192A590 VA: 0x192A590
	private void SetFriendshipExceedInfo() { }

	// RVA: 0x192A960 Offset: 0x192A960 VA: 0x192A960
	private void SetLimitCntUpItemComponents() { }

	// RVA: 0x192A664 Offset: 0x192A664 VA: 0x192A664
	private void SetEntities() { }

	// RVA: 0x1929D10 Offset: 0x1929D10 VA: 0x1929D10
	private void SetExecuteButtonState() { }

	// RVA: 0x192ACAC Offset: 0x192ACAC VA: 0x192ACAC
	public void SetBaseServantCardImage(UserServantEntity entity) { }

	// RVA: 0x1929F58 Offset: 0x1929F58 VA: 0x1929F58
	private void ResetCharacterGraphic() { }

	// RVA: 0x192AE6C Offset: 0x192AE6C VA: 0x192AE6C
	public void OnClickExecute() { }

	// RVA: 0x192AF18 Offset: 0x192AF18 VA: 0x192AF18
	public void SetInfoMessage(CombineRootComponent.StateType state) { }
}

// Namespace: 
public class FriendshipExceedFriendshipGauge : MonoBehaviour // TypeDefIndex: 9552
{
	// Fields
	[SerializeField] // RVA: 0xC693BC Offset: 0xC693BC VA: 0xC693BC
	private UIExtrusionLabel levelLabel; // 0x18
	[SerializeField] // RVA: 0xC693CC Offset: 0xC693CC VA: 0xC693CC
	private UILabel maxLabel; // 0x20
	[SerializeField] // RVA: 0xC693DC Offset: 0xC693DC VA: 0xC693DC
	private UISlider[] normalGaugeSliderList; // 0x28
	[SerializeField] // RVA: 0xC693EC Offset: 0xC693EC VA: 0xC693EC
	private UISlider[] exceededGaugeSliderList; // 0x30
	[SerializeField] // RVA: 0xC693FC Offset: 0xC693FC VA: 0xC693FC
	private GameObject normalRoot; // 0x38
	[SerializeField] // RVA: 0xC6940C Offset: 0xC6940C VA: 0xC6940C
	private GameObject exceededRoot; // 0x40
	[SerializeField] // RVA: 0xC6941C Offset: 0xC6941C VA: 0xC6941C
	private GameObject exceededIcon; // 0x48
	[SerializeField] // RVA: 0xC6942C Offset: 0xC6942C VA: 0xC6942C
	private UISprite exceededIconUISprite; // 0x50
	private bool isInitUISpriteAtlas; // 0x58
	private readonly Color DISABLE_COLOR; // 0x5C
	private readonly Color EXCEEDED_COLOR; // 0x6C

	// Methods

	// RVA: 0x192B13C Offset: 0x192B13C VA: 0x192B13C
	public void .ctor() { }

	// RVA: 0x192B1B8 Offset: 0x192B1B8 VA: 0x192B1B8
	public void Set(int level, int max, float fraction, FriendshipExceedFriendshipGauge.Type type) { }

	// RVA: 0x192B4EC Offset: 0x192B4EC VA: 0x192B4EC
	private void SetGaugeList(UISlider[] sliderList, int level, int max, float fraction) { }

	// RVA: 0x192B334 Offset: 0x192B334 VA: 0x192B334
	private void SetLabel(int level, int max, FriendshipExceedFriendshipGauge.Type type) { }

	// RVA: 0x192B2A8 Offset: 0x192B2A8 VA: 0x192B2A8
	private void InitUISpriteAtlas() { }
}

// Namespace: 
public enum FriendshipExceedFriendshipGauge.Type // TypeDefIndex: 9553
{
	// Fields
	public int value__; // 0x0
	public const FriendshipExceedFriendshipGauge.Type Normal = 0;
	public const FriendshipExceedFriendshipGauge.Type Disable = 1;
	public const FriendshipExceedFriendshipGauge.Type Exceeded = 2;
}

// Namespace: 
public class FriendshipExceedInfoComponent : MonoBehaviour // TypeDefIndex: 9554
{
	// Fields
	[SerializeField] // RVA: 0xC6943C Offset: 0xC6943C VA: 0xC6943C
	private FriendshipExceedFriendshipGauge currentFriendshipGauge; // 0x18
	[SerializeField] // RVA: 0xC6944C Offset: 0xC6944C VA: 0xC6944C
	private FriendshipExceedFriendshipGauge resultFriendshipGauge; // 0x20
	[SerializeField] // RVA: 0xC6945C Offset: 0xC6945C VA: 0xC6945C
	private UILabel disableLabel; // 0x28
	private readonly Color DISABLE_COLOR; // 0x30
	private bool isInitialized; // 0x40

	// Methods

	// RVA: 0x192B600 Offset: 0x192B600 VA: 0x192B600
	public void .ctor() { }

	// RVA: 0x192B66C Offset: 0x192B66C VA: 0x192B66C
	private void InitLabel() { }

	// RVA: 0x192A024 Offset: 0x192A024 VA: 0x192A024
	public void SetInfo(UserServantEntity userServantEntity, UserServantCollectionEntity userServantCollectionEntity, bool isExecutable, bool isOnEffect = False, int currentMax = 0) { }
}

// Namespace: 
public class FriendshipExceedResultWindowComponent : BaseDialog // TypeDefIndex: 9555
{
	// Fields
	[SerializeField] // RVA: 0xC6946C Offset: 0xC6946C VA: 0xC6946C
	private FriendshipExceedInfoComponent friendshipExceedInfoComponent; // 0x58

	// Methods

	// RVA: 0x192BAE8 Offset: 0x192BAE8 VA: 0x192BAE8
	public void .ctor() { }

	// RVA: 0x192BB50 Offset: 0x192BB50 VA: 0x192BB50
	public void SetFriendshipExceedInfo(UserServantEntity userServantEntity) { }

	// RVA: 0x192BB58 Offset: 0x192BB58 VA: 0x192BB58
	public void SetFriendshipExceedInfo(UserServantEntity userServantEntity, int currentMax) { }
}

// Namespace: 
public class LevelExceedControl : CombineMenuControl // TypeDefIndex: 9556
{
	// Fields
	[SerializeField] // RVA: 0xC6947C Offset: 0xC6947C VA: 0xC6947C
	private CombineInfoComponent combineInfoComp; // 0x68
	[SerializeField] // RVA: 0xC6948C Offset: 0xC6948C VA: 0xC6948C
	private GameObject preSelectBaseObj; // 0x70
	[SerializeField] // RVA: 0xC6949C Offset: 0xC6949C VA: 0xC6949C
	private UILabel preSelectBaseLb; // 0x78
	[SerializeField] // RVA: 0xC694AC Offset: 0xC694AC VA: 0xC694AC
	private GameObject baseSelectInfoLb; // 0x80
	[SerializeField] // RVA: 0xC694BC Offset: 0xC694BC VA: 0xC694BC
	private UILabel detailInfoLb; // 0x88
	[SerializeField] // RVA: 0xC694CC Offset: 0xC694CC VA: 0xC694CC
	private GameObject itemListInfo; // 0x90
	[SerializeField] // RVA: 0xC694DC Offset: 0xC694DC VA: 0xC694DC
	private GameObject itemInfoPrefab; // 0x98
	[SerializeField] // RVA: 0xC694EC Offset: 0xC694EC VA: 0xC694EC
	private UIGrid itemListGrid; // 0xA0
	[SerializeField] // RVA: 0xC694FC Offset: 0xC694FC VA: 0xC694FC
	private UILabel haveQpLb; // 0xA8
	[SerializeField] // RVA: 0xC6950C Offset: 0xC6950C VA: 0xC6950C
	private UILabel needQpLb; // 0xB0
	[SerializeField] // RVA: 0xC6951C Offset: 0xC6951C VA: 0xC6951C
	private UISprite combineBtnBg; // 0xB8
	[SerializeField] // RVA: 0xC6952C Offset: 0xC6952C VA: 0xC6952C
	private UISprite combineTxtImg; // 0xC0
	private bool isSelectBase; // 0xC8
	private int haveQpVal; // 0xCC
	private int spendQpVal; // 0xD0
	private UserServantEntity baseData; // 0xD8
	private UICharaGraphTexture charaGraph; // 0xE0
	[CompilerGeneratedAttribute] // RVA: 0xC6953C Offset: 0xC6953C VA: 0xC6953C
	[DebuggerBrowsableAttribute] // RVA: 0xC6953C Offset: 0xC6953C VA: 0xC6953C
	private List<LimitCntUpItemComponent> <itemInfoList>k__BackingField; // 0xE8
	private List<GameObject> materialItemObjList; // 0xF0
	private int[] itemIdList; // 0xF8
	private bool isMaxLv; // 0x100
	private bool isMaxLimitCnt; // 0x101
	private bool isQpNum; // 0x102
	private bool isItemNum; // 0x103
	[SerializeField] // RVA: 0xC69578 Offset: 0xC69578 VA: 0xC69578
	private GameObject conductionWireInfo; // 0x108
	[SerializeField] // RVA: 0xC69588 Offset: 0xC69588 VA: 0xC69588
	private UILabel conductionWireLabel; // 0x110
	[SerializeField] // RVA: 0xC69598 Offset: 0xC69598 VA: 0xC69598
	private UILabel conductionButtonLabel; // 0x118

	// Properties
	public List<LimitCntUpItemComponent> itemInfoList { get; set; }

	// Methods

	// RVA: 0x11CB278 Offset: 0x11CB278 VA: 0x11CB278
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF4C0 Offset: 0xCCF4C0 VA: 0xCCF4C0
	// RVA: 0x11CB280 Offset: 0x11CB280 VA: 0x11CB280
	public List<LimitCntUpItemComponent> get_itemInfoList() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF4D0 Offset: 0xCCF4D0 VA: 0xCCF4D0
	// RVA: 0x11CB288 Offset: 0x11CB288 VA: 0x11CB288
	private void set_itemInfoList(List<LimitCntUpItemComponent> value) { }

	// RVA: 0x11CB290 Offset: 0x11CB290 VA: 0x11CB290 Slot: 6
	protected override EventTutorialMaster.OpenType GetTutorialOpenType() { }

	// RVA: 0x11CB298 Offset: 0x11CB298 VA: 0x11CB298
	public void InitLvExceed() { }

	// RVA: 0x11CB410 Offset: 0x11CB410 VA: 0x11CB410
	private void InitDispInfo() { }

	// RVA: 0x11CB804 Offset: 0x11CB804 VA: 0x11CB804
	private void SetHaveQpIno() { }

	// RVA: 0x11CB9AC Offset: 0x11CB9AC VA: 0x11CB9AC
	public void CheckIsSelectBaseSvt(UserServantEntity selectBase) { }

	// RVA: 0x11CBAC4 Offset: 0x11CBAC4 VA: 0x11CBAC4
	public void SetBaseSvtCardImg(UserServantEntity usrSvtData) { }

	// RVA: 0x11CBC7C Offset: 0x11CBC7C VA: 0x11CBC7C
	private void CheckConductionWire() { }

	// RVA: 0x11CBDF0 Offset: 0x11CBDF0 VA: 0x11CBDF0
	public void ShowItemListInfo() { }

	// RVA: 0x11CC564 Offset: 0x11CC564 VA: 0x11CC564
	private CommonConsumeEntity[] GetConsumeItemList() { }

	// RVA: 0x11CC64C Offset: 0x11CC64C VA: 0x11CC64C
	private void SetAddConsumeItem(ServantExceedEntity svtExceedEnt, ref CommonConsumeEntity[] consumeList) { }

	// RVA: 0x11CC848 Offset: 0x11CC848 VA: 0x11CC848
	private void AdjustMaterialItemObjList(CommonConsumeEntity[] consumeList) { }

	// RVA: 0x11CBEA0 Offset: 0x11CBEA0 VA: 0x11CBEA0
	private void SetExceedInfo() { }

	// RVA: 0x11CCE0C Offset: 0x11CCE0C VA: 0x11CCE0C
	private bool CheckItemHaveNum() { }

	// RVA: 0x11CB65C Offset: 0x11CB65C VA: 0x11CB65C
	private void SetExeBtnState() { }

	// RVA: 0x11CB898 Offset: 0x11CB898 VA: 0x11CB898
	public void ClearItemList() { }

	// RVA: 0x11CCEE0 Offset: 0x11CCEE0 VA: 0x11CCEE0
	public void OnClickExeLvExceed() { }

	// RVA: 0x11CCF9C Offset: 0x11CCF9C VA: 0x11CCF9C
	public void OnClickCheckLvExceed() { }

	// RVA: 0x11CD058 Offset: 0x11CD058 VA: 0x11CD058
	public void OnClickExecute() { }

	// RVA: 0x11CD0B0 Offset: 0x11CD0B0 VA: 0x11CD0B0
	public void SetStateInfoMsg(CombineRootComponent.StateType state) { }
}

// Namespace: 
public class LimitCntUpControl : CombineMenuControl // TypeDefIndex: 9557
{
	// Fields
	[SerializeField] // RVA: 0xC695A8 Offset: 0xC695A8 VA: 0xC695A8
	private CombineInfoComponent combineInfoComp; // 0x68
	[SerializeField] // RVA: 0xC695B8 Offset: 0xC695B8 VA: 0xC695B8
	private UIPanel mPanel; // 0x70
	[SerializeField] // RVA: 0xC695C8 Offset: 0xC695C8 VA: 0xC695C8
	private UISprite eventNoticeImg; // 0x78
	[SerializeField] // RVA: 0xC695D8 Offset: 0xC695D8 VA: 0xC695D8
	private UILabel preSelectBaseLb; // 0x80
	[SerializeField] // RVA: 0xC695E8 Offset: 0xC695E8 VA: 0xC695E8
	private GameObject baseSelectInfoLb; // 0x88
	[SerializeField] // RVA: 0xC695F8 Offset: 0xC695F8 VA: 0xC695F8
	private UILabel detailInfoLb; // 0x90
	[SerializeField] // RVA: 0xC69608 Offset: 0xC69608 VA: 0xC69608
	private UILabel haveQpLb; // 0x98
	[SerializeField] // RVA: 0xC69618 Offset: 0xC69618 VA: 0xC69618
	private UILabel qpLb; // 0xA0
	[SerializeField] // RVA: 0xC69628 Offset: 0xC69628 VA: 0xC69628
	private UISprite combineBtnBg; // 0xA8
	[SerializeField] // RVA: 0xC69638 Offset: 0xC69638 VA: 0xC69638
	private UILabel combineBtnTxt; // 0xB0
	[SerializeField] // RVA: 0xC69648 Offset: 0xC69648 VA: 0xC69648
	private UISprite combineTxtImg; // 0xB8
	[SerializeField] // RVA: 0xC69658 Offset: 0xC69658 VA: 0xC69658
	private GameObject conductionWireInfo; // 0xC0
	[SerializeField] // RVA: 0xC69668 Offset: 0xC69668 VA: 0xC69668
	private UILabel conductionInfoLabel; // 0xC8
	[SerializeField] // RVA: 0xC69678 Offset: 0xC69678 VA: 0xC69678
	private UILabel conductionButtonLabel; // 0xD0
	[SerializeField] // RVA: 0xC69688 Offset: 0xC69688 VA: 0xC69688
	private List<LimitCntUpItemComponent> limitCntUpItemList; // 0xD8
	[SerializeField] // RVA: 0xC69698 Offset: 0xC69698 VA: 0xC69698
	private CombineLimitUpWarningDialog combineLimitUpWarningDialog; // 0xE0
	private bool isSelectBase; // 0xE8
	private int haveQpVal; // 0xEC
	private int spendQpVal; // 0xF0
	private UserServantEntity baseData; // 0xF8
	private UICharaGraphTexture charaGraph; // 0x100
	[CompilerGeneratedAttribute] // RVA: 0xC696A8 Offset: 0xC696A8 VA: 0xC696A8
	[DebuggerBrowsableAttribute] // RVA: 0xC696A8 Offset: 0xC696A8 VA: 0xC696A8
	private List<LimitCntUpItemComponent> <itemInfoList>k__BackingField; // 0x108
	private List<EventInfoData> combineEventList; // 0x110
	private Vector3 center; // 0x118
	private bool isMaxLv; // 0x124
	private bool isQpNum; // 0x125
	private bool isItemNum; // 0x126

	// Properties
	public List<LimitCntUpItemComponent> itemInfoList { get; set; }

	// Methods

	// RVA: 0x11CD3EC Offset: 0x11CD3EC VA: 0x11CD3EC
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF4E0 Offset: 0xCCF4E0 VA: 0xCCF4E0
	// RVA: 0x11CD3F4 Offset: 0x11CD3F4 VA: 0x11CD3F4
	public List<LimitCntUpItemComponent> get_itemInfoList() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCF4F0 Offset: 0xCCF4F0 VA: 0xCCF4F0
	// RVA: 0x11CD3FC Offset: 0x11CD3FC VA: 0x11CD3FC
	private void set_itemInfoList(List<LimitCntUpItemComponent> value) { }

	// RVA: 0x11CD404 Offset: 0x11CD404 VA: 0x11CD404 Slot: 6
	protected override EventTutorialMaster.OpenType GetTutorialOpenType() { }

	// RVA: 0x11CD40C Offset: 0x11CD40C VA: 0x11CD40C
	public void InitLimitUp() { }

	// RVA: 0x11CD714 Offset: 0x11CD714 VA: 0x11CD714
	private void InitItemInfo() { }

	// RVA: 0x11CDBCC Offset: 0x11CDBCC VA: 0x11CDBCC
	private void SetHaveQpIno() { }

	// RVA: 0x11CDC94 Offset: 0x11CDC94 VA: 0x11CDC94
	public void CheckIsSelectBaseSvt(UserServantEntity selectBase) { }

	// RVA: 0x11CDDAC Offset: 0x11CDDAC VA: 0x11CDDAC
	public void ShowItemListInfo() { }

	// RVA: 0x11CE778 Offset: 0x11CE778 VA: 0x11CE778
	public void SetBaseSvtCardImg(UserServantEntity usrSvtData) { }

	// RVA: 0x11CE930 Offset: 0x11CE930 VA: 0x11CE930
	private void CheckConductionWire() { }

	// RVA: 0x11CDE54 Offset: 0x11CDE54 VA: 0x11CDE54
	private void SetLimitUpInfo() { }

	// RVA: 0x11CEA90 Offset: 0x11CEA90 VA: 0x11CEA90
	private bool CheckItemHaveNum() { }

	// RVA: 0x11CD9A0 Offset: 0x11CD9A0 VA: 0x11CD9A0
	private void SetExeBtnState() { }

	// RVA: 0x11CEB5C Offset: 0x11CEB5C VA: 0x11CEB5C
	public void OnClickExeLimitUp() { }

	// RVA: 0x11CEC1C Offset: 0x11CEC1C VA: 0x11CEC1C
	public void SetStateInfoMsg(CombineRootComponent.StateType state) { }

	// RVA: 0x11CEF70 Offset: 0x11CEF70 VA: 0x11CEF70
	public void OnClickLimitUpConductionWire() { }
}

// Namespace: 
public class LimitCntUpItemComponent : MonoBehaviour // TypeDefIndex: 9558
{
	// Fields
	public GameObject itemInfo; // 0x18
	public GameObject statusInfo; // 0x20
	public UILabel needTitleLb; // 0x28
	public UILabel needNumLb; // 0x30
	public UILabel haveTitleLb; // 0x38
	public UILabel haveNumLb; // 0x40
	public ItemIconComponent itemIconComp; // 0x48
	[SerializeField] // RVA: 0xC696E4 Offset: 0xC696E4 VA: 0xC696E4
	private UISprite maskSprite; // 0x50
	private bool disableOpenItemDetailDialog; // 0x58
	private int currentItemId; // 0x5C
	private int haveItemNum; // 0x60
	private int needItemNum; // 0x64
	private bool isItemNum; // 0x68
	private ItemEntity itemEnt; // 0x70
	private int itemImgId; // 0x78

	// Methods

	// RVA: 0x11CEFF4 Offset: 0x11CEFF4 VA: 0x11CEFF4
	public void .ctor() { }

	// RVA: 0x11CC93C Offset: 0x11CC93C VA: 0x11CC93C
	public void setLimitUpItemInfo(long usrId, int itemId, int needNum) { }

	// RVA: 0x11CEFFC Offset: 0x11CEFFC VA: 0x11CEFFC
	public void SetItemIcon(int itemId) { }

	// RVA: 0x11CF118 Offset: 0x11CF118 VA: 0x11CF118
	public void SetItemEntity(int id) { }

	// RVA: 0x11CF1BC Offset: 0x11CF1BC VA: 0x11CF1BC
	public ItemEntity GetItemEntity() { }

	// RVA: 0x11CCED8 Offset: 0x11CCED8 VA: 0x11CCED8
	public bool checkItemNum() { }

	// RVA: 0x11CF1C4 Offset: 0x11CF1C4 VA: 0x11CF1C4
	public int getItemId() { }

	// RVA: 0x11CF1CC Offset: 0x11CF1CC VA: 0x11CF1CC
	public int getItemImgId() { }

	// RVA: 0x11CF1D4 Offset: 0x11CF1D4 VA: 0x11CF1D4
	public void OnClickItem() { }

	// RVA: 0x11CF338 Offset: 0x11CF338 VA: 0x11CF338
	private void CloseItemDetail(bool isDecide) { }

	// RVA: 0x11CDC60 Offset: 0x11CDC60 VA: 0x11CDC60
	public void enableDispItemInfo() { }

	// RVA: 0x11CF3C4 Offset: 0x11CF3C4 VA: 0x11CF3C4
	public void SetMaskSprite(bool isActive) { }

	// RVA: 0x11CF48C Offset: 0x11CF48C VA: 0x11CF48C
	public void DisableOpenItemDetailDialog(bool enable) { }
}

// Namespace: 
public class SpecialAscensionControl : CombineMenuControl // TypeDefIndex: 9559
{
	// Fields
	public static readonly string PRIVILEGE_KEY_NAME; // 0x0
	private static readonly int SPEND_QP_VAL; // 0x8
	[SerializeField] // RVA: 0xC696F4 Offset: 0xC696F4 VA: 0xC696F4
	private UILabel preSelectBaseLb; // 0x68
	[SerializeField] // RVA: 0xC69704 Offset: 0xC69704 VA: 0xC69704
	private CombineInfoComponent combineInfoComp; // 0x70
	[SerializeField] // RVA: 0xC69714 Offset: 0xC69714 VA: 0xC69714
	private GameObject baseSelectInfoLb; // 0x78
	[SerializeField] // RVA: 0xC69724 Offset: 0xC69724 VA: 0xC69724
	private UILabel detailInfoLb; // 0x80
	[SerializeField] // RVA: 0xC69734 Offset: 0xC69734 VA: 0xC69734
	private UILabel haveQpLb; // 0x88
	[SerializeField] // RVA: 0xC69744 Offset: 0xC69744 VA: 0xC69744
	private UILabel qpLb; // 0x90
	[SerializeField] // RVA: 0xC69754 Offset: 0xC69754 VA: 0xC69754
	private UISprite combineBtn; // 0x98
	[SerializeField] // RVA: 0xC69764 Offset: 0xC69764 VA: 0xC69764
	private UISprite combineTxtImg; // 0xA0
	private bool isSelectBase; // 0xA8
	private UICharaGraphTexture charaGraph; // 0xB0
	private CheckCombineResStatus combineResStatus; // 0xB8
	public int effectCnt; // 0xC0
	public bool pushExeButton; // 0xC4
	private bool helpSeSilent; // 0xC5

	// Methods

	// RVA: 0x13DD5A4 Offset: 0x13DD5A4 VA: 0x13DD5A4
	public void .ctor() { }

	// RVA: 0x13DD5AC Offset: 0x13DD5AC VA: 0x13DD5AC Slot: 6
	protected override EventTutorialMaster.OpenType GetTutorialOpenType() { }

	// RVA: 0x13DD5B4 Offset: 0x13DD5B4 VA: 0x13DD5B4
	private void Start() { }

	// RVA: 0x13DD624 Offset: 0x13DD624 VA: 0x13DD624
	public void SetUp() { }

	// RVA: 0x13DD890 Offset: 0x13DD890 VA: 0x13DD890
	public void Refresh(UserServantEntity selectBaseSvt) { }

	// RVA: 0x13DDAE8 Offset: 0x13DDAE8 VA: 0x13DDAE8
	private bool SelectedBaseSvt() { }

	// RVA: 0x13DE014 Offset: 0x13DE014 VA: 0x13DE014
	private void SetExeBtnState() { }

	// RVA: 0x13DE1B8 Offset: 0x13DE1B8 VA: 0x13DE1B8
	public bool CanExeSpecialAscension() { }

	// RVA: 0x13DD900 Offset: 0x13DD900 VA: 0x13DD900
	private void SetStateInfoMsg() { }

	// RVA: 0x13DDAF8 Offset: 0x13DDAF8 VA: 0x13DDAF8
	private void SetBaseSvtCardImg() { }

	// RVA: 0x13DDD34 Offset: 0x13DDD34 VA: 0x13DDD34
	private void SetCombineInfo() { }

	// RVA: 0x13DE234 Offset: 0x13DE234 VA: 0x13DE234
	public void OnClickSpecialAscension() { }
