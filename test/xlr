	// RVA: 0x19BB8D0 Offset: 0x19BB8D0 VA: 0x19BB8D0
	public void SetCallBack(BoostSupportRequestItemListViewManager.CallbackFunc callback) { }

	// RVA: 0x19BBAF0 Offset: 0x19BBAF0 VA: 0x19BBAF0 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x19BB900 Offset: 0x19BB900 VA: 0x19BB900
	protected void RequestListObject() { }

	// RVA: 0x19BBBC8 Offset: 0x19BBBC8 VA: 0x19BBBC8
	protected void OnMoveEnd() { }

	// RVA: 0x19BBC8C Offset: 0x19BBC8C VA: 0x19BBC8C
	protected void OnClickListView(ListViewObject obj) { }
}

// Namespace: 
public enum BoostSupportRequestItemListViewManager.ResultKind // TypeDefIndex: 5311
{
	// Fields
	public int value__; // 0x0
	public const BoostSupportRequestItemListViewManager.ResultKind CANCEL = 0;
	public const BoostSupportRequestItemListViewManager.ResultKind UNSELECT = 1;
	public const BoostSupportRequestItemListViewManager.ResultKind SELECT = 2;
	public const BoostSupportRequestItemListViewManager.ResultKind IMPOSSIBLE_SELECT = 3;
}

// Namespace: 
public sealed class BoostSupportRequestItemListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 5312
{
	// Methods

	// RVA: 0x19BC010 Offset: 0x19BC010 VA: 0x19BC010
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x19BBDCC Offset: 0x19BBDCC VA: 0x19BBDCC Slot: 11
	public virtual void Invoke(BoostSupportRequestItemListViewManager.ResultKind result, int index) { }

	// RVA: 0x19BC020 Offset: 0x19BC020 VA: 0x19BC020 Slot: 12
	public virtual IAsyncResult BeginInvoke(BoostSupportRequestItemListViewManager.ResultKind result, int index, AsyncCallback callback, object object) { }

	// RVA: 0x19BC0C8 Offset: 0x19BC0C8 VA: 0x19BC0C8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class BoostSupportRequestItemListViewObject : ListViewObject // TypeDefIndex: 5313
{
	// Fields
	public BoostSupportRequestItemListViewItemDraw.DispMode dispMode; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xC4B290 Offset: 0xC4B290 VA: 0xC4B290
	[DebuggerBrowsableAttribute] // RVA: 0xC4B290 Offset: 0xC4B290 VA: 0xC4B290
	private Action callbackFunc; // 0x70
	protected BoostSupportRequestItemListViewItemDraw itemDraw; // 0x78

	// Methods

	// RVA: 0x19BC0D4 Offset: 0x19BC0D4 VA: 0x19BC0D4
	public void .ctor() { }

	// RVA: 0x19BC13C Offset: 0x19BC13C VA: 0x19BC13C
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x19BC228 Offset: 0x19BC228 VA: 0x19BC228
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x19BC314 Offset: 0x19BC314 VA: 0x19BC314
	protected void Awake() { }

	// RVA: 0x19BC388 Offset: 0x19BC388 VA: 0x19BC388 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x19BC390 Offset: 0x19BC390 VA: 0x19BC390
	public void SetDirectItem(BoostSupportRequsetItemListViewItem item) { }

	// RVA: 0x19BC398 Offset: 0x19BC398 VA: 0x19BC398 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x19BC408 Offset: 0x19BC408 VA: 0x19BC408
	public void Init(Action callbackFunc, bool displayOnly) { }

	// RVA: 0x19BC5F4 Offset: 0x19BC5F4 VA: 0x19BC5F4
	public bool IsAllUserItemEnough(CommonConsumeEntity[] consumeList, UserItemEntity[] userItemEntityList) { }

	// RVA: 0x19BBBC0 Offset: 0x19BBBC0 VA: 0x19BBBC0
	public void Init(Action callbackFunc) { }

	// RVA: 0x19BC7E4 Offset: 0x19BC7E4 VA: 0x19BC7E4
	public void DisplayOnlyInit() { }

	// RVA: 0x19BC7F0 Offset: 0x19BC7F0 VA: 0x19BC7F0
	public void Init() { }

	// RVA: 0x19BC6E0 Offset: 0x19BC6E0 VA: 0x19BC6E0
	protected void SetupDisp() { }

	// RVA: 0x19BC7FC Offset: 0x19BC7FC VA: 0x19BC7FC
	protected void EventMoveEnd() { }
}

// Namespace: 
public class BoostSupportRequestMenu : BaseDialog // TypeDefIndex: 5314
{
	// Fields
	private static readonly string RECOMMENDED_ICON; // 0x0
	[SerializeField] // RVA: 0xC4B2CC Offset: 0xC4B2CC VA: 0xC4B2CC
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC4B2DC Offset: 0xC4B2DC VA: 0xC4B2DC
	protected UILabel titleDetailLabel; // 0x60
	[SerializeField] // RVA: 0xC4B2EC Offset: 0xC4B2EC VA: 0xC4B2EC
	protected EventItemComponent[] eventItemIconList; // 0x68
	[SerializeField] // RVA: 0xC4B2FC Offset: 0xC4B2FC VA: 0xC4B2FC
	protected UILabel useConfirmOptionLabel; // 0x70
	[SerializeField] // RVA: 0xC4B30C Offset: 0xC4B30C VA: 0xC4B30C
	protected BoostSupportRequestItemListViewManager itemListViewManager; // 0x78
	[SerializeField] // RVA: 0xC4B31C Offset: 0xC4B31C VA: 0xC4B31C
	protected UILabel decideLabel; // 0x80
	[SerializeField] // RVA: 0xC4B32C Offset: 0xC4B32C VA: 0xC4B32C
	protected UILabel cancelLabel; // 0x88
	[SerializeField] // RVA: 0xC4B33C Offset: 0xC4B33C VA: 0xC4B33C
	protected UISprite setupConfirmSprite; // 0x90
	[CompilerGeneratedAttribute] // RVA: 0xC4B34C Offset: 0xC4B34C VA: 0xC4B34C
	[DebuggerBrowsableAttribute] // RVA: 0xC4B34C Offset: 0xC4B34C VA: 0xC4B34C
	private BoostFunctionUtility.CallbackFunc callbackFunc; // 0x98
	protected Action closeCallbackFunc; // 0xA0
	protected BoostSupportRequestMenu.State state; // 0xA8
	protected bool isBoostItemUseConfirm; // 0xAC
	protected UserItemEntity[] mUsrItemEntityList; // 0xB0

	// Methods

	// RVA: 0x19BC81C Offset: 0x19BC81C VA: 0x19BC81C
	public void .ctor() { }

	// RVA: 0x19BC884 Offset: 0x19BC884 VA: 0x19BC884
	protected void add_callbackFunc(BoostFunctionUtility.CallbackFunc value) { }

	// RVA: 0x19BC970 Offset: 0x19BC970 VA: 0x19BC970
	protected void remove_callbackFunc(BoostFunctionUtility.CallbackFunc value) { }

	// RVA: 0x19BCA5C Offset: 0x19BCA5C VA: 0x19BCA5C
	public BoostSupportRequsetItemListViewItem GetItem(int index) { }

	// RVA: 0x19BCA90 Offset: 0x19BCA90 VA: 0x19BCA90
	public void Init() { }

	// RVA: 0x19BCAD4 Offset: 0x19BCAD4 VA: 0x19BCAD4
	public void Open(int questId, int questPhase, BoostFunctionUtility.CallbackFunc callback, bool isRetryBattle = False) { }

	// RVA: 0x19BD66C Offset: 0x19BD66C VA: 0x19BD66C
	protected void EndOpen() { }

	// RVA: 0x19BD498 Offset: 0x19BD498 VA: 0x19BD498
	protected BoostEntity[] RearrangesRecommendedBoostFirst(BoostEntity[] boostEntityList, int RecommendedBoostId) { }

	// RVA: 0x19BD678 Offset: 0x19BD678 VA: 0x19BD678
	protected void Callback(BoostFunctionUtility.BoostResultKind result, int index = -1) { }

	// RVA: 0x19BD788 Offset: 0x19BD788 VA: 0x19BD788
	public void Close(Action callback) { }

	// RVA: 0x19BD818 Offset: 0x19BD818 VA: 0x19BD818
	protected void EndClose() { }

	// RVA: 0x19BD854 Offset: 0x19BD854 VA: 0x19BD854
	public void OnClickCancel() { }

	// RVA: 0x19BD8EC Offset: 0x19BD8EC VA: 0x19BD8EC
	public void OnClickDecide() { }

	// RVA: 0x19BD984 Offset: 0x19BD984 VA: 0x19BD984
	protected void OnSelectItem(BoostSupportRequestItemListViewManager.ResultKind kind, int n) { }

	// RVA: 0x19BDBA4 Offset: 0x19BDBA4 VA: 0x19BDBA4
	public void OnClickSetupConfirm() { }

	// RVA: 0x19BDC6C Offset: 0x19BDC6C VA: 0x19BDC6C
	private static void .cctor() { }
}

// Namespace: 
protected enum BoostSupportRequestMenu.State // TypeDefIndex: 5315
{
	// Fields
	public int value__; // 0x0
	public const BoostSupportRequestMenu.State INIT = 0;
	public const BoostSupportRequestMenu.State OPEN = 1;
	public const BoostSupportRequestMenu.State INPUT = 2;
	public const BoostSupportRequestMenu.State SELECTED = 3;
	public const BoostSupportRequestMenu.State CLOSE = 4;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC419D4 Offset: 0xC419D4 VA: 0xC419D4
private sealed class BoostSupportRequestMenu.<Callback>c__AnonStorey0 // TypeDefIndex: 5316
{
	// Fields
	internal BoostFunctionUtility.BoostResultKind result; // 0x10
	internal int index; // 0x14
	internal BoostSupportRequestMenu $this; // 0x18

	// Methods

	// RVA: 0x19BD780 Offset: 0x19BD780 VA: 0x19BD780
	public void .ctor() { }

	// RVA: 0x19BDCC8 Offset: 0x19BDCC8 VA: 0x19BDCC8
	internal void <>m__0() { }
}

// Namespace: 
public class BoostSupportRequestReconfirmationMenu : BaseDialog // TypeDefIndex: 5317
{
	// Fields
	[SerializeField] // RVA: 0xC4B388 Offset: 0xC4B388 VA: 0xC4B388
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC4B398 Offset: 0xC4B398 VA: 0xC4B398
	protected UILabel skillNameLabel; // 0x60
	[SerializeField] // RVA: 0xC4B3A8 Offset: 0xC4B3A8 VA: 0xC4B3A8
	protected UILabel skillDetailLabel; // 0x68
	[SerializeField] // RVA: 0xC4B3B8 Offset: 0xC4B3B8 VA: 0xC4B3B8
	protected UILabel consumptionLabel; // 0x70
	[SerializeField] // RVA: 0xC4B3C8 Offset: 0xC4B3C8 VA: 0xC4B3C8
	protected UIGrid consumeItemIconGrid; // 0x78
	[SerializeField] // RVA: 0xC4B3D8 Offset: 0xC4B3D8 VA: 0xC4B3D8
	protected UISprite[] itemIcon; // 0x80
	[SerializeField] // RVA: 0xC4B3E8 Offset: 0xC4B3E8 VA: 0xC4B3E8
	protected UILabel[] itemNumLabel; // 0x88
	[SerializeField] // RVA: 0xC4B3F8 Offset: 0xC4B3F8 VA: 0xC4B3F8
	private GameObject consumeItem; // 0x90
	[SerializeField] // RVA: 0xC4B408 Offset: 0xC4B408 VA: 0xC4B408
	protected UILabel decideLabel; // 0x98
	[SerializeField] // RVA: 0xC4B418 Offset: 0xC4B418 VA: 0xC4B418
	protected UILabel cancelLabel; // 0xA0
	[CompilerGeneratedAttribute] // RVA: 0xC4B428 Offset: 0xC4B428 VA: 0xC4B428
	[DebuggerBrowsableAttribute] // RVA: 0xC4B428 Offset: 0xC4B428 VA: 0xC4B428
	private BoostFunctionUtility.CallbackFunc callbackFunc; // 0xA8
	protected Action closeCallbackFunc; // 0xB0
	protected bool isBoostItemUseConfirm; // 0xB8
	private BoostEntity serectBoostEntity; // 0xC0

	// Methods

	// RVA: 0x19BDD28 Offset: 0x19BDD28 VA: 0x19BDD28
	public void .ctor() { }

	// RVA: 0x19BDD90 Offset: 0x19BDD90 VA: 0x19BDD90
	protected void add_callbackFunc(BoostFunctionUtility.CallbackFunc value) { }

	// RVA: 0x19BDE7C Offset: 0x19BDE7C VA: 0x19BDE7C
	protected void remove_callbackFunc(BoostFunctionUtility.CallbackFunc value) { }

	// RVA: 0x19BDF68 Offset: 0x19BDF68 VA: 0x19BDF68
	public void Open(BoostEntity boostEntity, BoostFunctionUtility.CallbackFunc callback) { }

	// RVA: 0x19BE2D4 Offset: 0x19BE2D4 VA: 0x19BE2D4
	private void setConsumeItemIconList(CommonConsumeEntity[] commonConsumeEntityList) { }

	// RVA: 0x19BE800 Offset: 0x19BE800 VA: 0x19BE800
	public void Close() { }

	// RVA: 0x19BE808 Offset: 0x19BE808 VA: 0x19BE808
	public void Close(Action callback) { }

	// RVA: 0x19BE890 Offset: 0x19BE890 VA: 0x19BE890
	protected void EndClose() { }

	// RVA: 0x19BE8AC Offset: 0x19BE8AC VA: 0x19BE8AC
	protected void Callback() { }

	// RVA: 0x19BE954 Offset: 0x19BE954 VA: 0x19BE954
	public void OnClickCancel() { }

	// RVA: 0x19BE9E4 Offset: 0x19BE9E4 VA: 0x19BE9E4
	public void OnClickDecide() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7A0C Offset: 0xCC7A0C VA: 0xCC7A0C
	// RVA: 0x19BEA80 Offset: 0x19BEA80 VA: 0x19BEA80
	private void <Callback>m__0() { }
}

// Namespace: 
public class BoostSupportRequsetItemListViewItem : ListViewItem // TypeDefIndex: 5318
{
	// Fields
	protected BoostEntity boostEntity; // 0x70
	protected UserItemEntity[] usrItemEntityList; // 0x78
	protected CommonConsumeEntity[] commonConsumeEntity; // 0x80
	protected bool isRelease; // 0x88
	protected bool isRecommended; // 0x89

	// Properties
	public BoostEntity BoostEntity { get; }
	public int ItemId { get; }
	public int Skill_id { get; }
	public int Image_id { get; }
	public CommonConsumeEntity[] ConsumeList { get; }
	public bool IsRelease { get; }
	public UserItemEntity[] UserItemEntityList { get; }
	public bool IsRecommended { get; }

	// Methods

	// RVA: 0x19BB768 Offset: 0x19BB768 VA: 0x19BB768
	public void .ctor(int index, BoostEntity boostEntity, UserItemEntity[] usrItemEntityList, int recommendedBoostId = -1) { }

	// RVA: 0x19BEAD0 Offset: 0x19BEAD0 VA: 0x19BEAD0 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x19BDB84 Offset: 0x19BDB84 VA: 0x19BDB84
	public BoostEntity get_BoostEntity() { }

	// RVA: 0x19BDB8C Offset: 0x19BDB8C VA: 0x19BDB8C
	public int get_ItemId() { }

	// RVA: 0x19BA990 Offset: 0x19BA990 VA: 0x19BA990
	public int get_Skill_id() { }

	// RVA: 0x19BAB78 Offset: 0x19BAB78 VA: 0x19BAB78
	public int get_Image_id() { }

	// RVA: 0x19BB0C0 Offset: 0x19BB0C0 VA: 0x19BB0C0
	public CommonConsumeEntity[] get_ConsumeList() { }

	// RVA: 0x19BC5EC Offset: 0x19BC5EC VA: 0x19BC5EC
	public bool get_IsRelease() { }

	// RVA: 0x19BB0C8 Offset: 0x19BB0C8 VA: 0x19BB0C8
	public UserItemEntity[] get_UserItemEntityList() { }

	// RVA: 0x19BB0B8 Offset: 0x19BB0B8 VA: 0x19BB0B8
	public bool get_IsRecommended() { }
}

// Namespace: 
public class CampaignInfoDlg : BaseDialog // TypeDefIndex: 5319
{
	// Fields
	protected static readonly float FADE_TIME; // 0x0
	protected static readonly string alphaImgPath; // 0x8
	protected static readonly string alphaImgName; // 0x10
	protected static readonly int baseImgNo; // 0x18
	protected static readonly int basePosX; // 0x1C
	[SerializeField] // RVA: 0xC4B464 Offset: 0xC4B464 VA: 0xC4B464
	protected GameObject ImagePrefab; // 0x58
	[SerializeField] // RVA: 0xC4B474 Offset: 0xC4B474 VA: 0xC4B474
	protected GameObject ImageRoot; // 0x60
	[SerializeField] // RVA: 0xC4B484 Offset: 0xC4B484 VA: 0xC4B484
	protected UIGrid ImageGrid; // 0x68
	[SerializeField] // RVA: 0xC4B494 Offset: 0xC4B494 VA: 0xC4B494
	protected UITexture BaseImg; // 0x70
	[SerializeField] // RVA: 0xC4B4A4 Offset: 0xC4B4A4 VA: 0xC4B4A4
	protected GameObject CancelButton; // 0x78
	[SerializeField] // RVA: 0xC4B4B4 Offset: 0xC4B4B4 VA: 0xC4B4B4
	protected GameObject DecideButton; // 0x80
	[SerializeField] // RVA: 0xC4B4C4 Offset: 0xC4B4C4 VA: 0xC4B4C4
	protected GameObject CloseButton; // 0x88
	[SerializeField] // RVA: 0xC4B4D4 Offset: 0xC4B4D4 VA: 0xC4B4D4
	protected GameObject TouchMask; // 0x90
	[SerializeField] // RVA: 0xC4B4E4 Offset: 0xC4B4E4 VA: 0xC4B4E4
	protected UIScrollView ScrView; // 0x98
	[SerializeField] // RVA: 0xC4B4F4 Offset: 0xC4B4F4 VA: 0xC4B4F4
	protected UILabel DecideBtnLb; // 0xA0
	[SerializeField] // RVA: 0xC4B504 Offset: 0xC4B504 VA: 0xC4B504
	protected UILabel CancelBtnLb; // 0xA8
	protected bool IsFading; // 0xB0
	protected CampaignInfoDlg.onButtonDelgate btnCallbackFunc; // 0xB8
	protected bool isButtonEnable; // 0xC0
	protected int eventId; // 0xC4
	protected List<GameObject> ImagePageList; // 0xC8
	protected CampaignInformation[] infoData; // 0xD0
	protected int _loadIndex; // 0xD8
	protected bool IsInitialized; // 0xDC
	private AssetData alphaTexAssetData; // 0xE0
	private bool alphaTexLoadRequested; // 0xE8
	private AssetData baseTexAssetData; // 0xF0
	private bool baseTexLoadRequested; // 0xF8
	private bool isNotExistImg; // 0xF9
	private Action closeCallbackFunc; // 0x100
	private float setPosX; // 0x108

	// Methods

	// RVA: 0x14E3ED4 Offset: 0x14E3ED4 VA: 0x14E3ED4
	public void .ctor() { }

	// RVA: 0x14E3F3C Offset: 0x14E3F3C VA: 0x14E3F3C
	public void Init() { }

	// RVA: 0x14E3F88 Offset: 0x14E3F88 VA: 0x14E3F88
	public void Open(CampaignInfoEntity cInfo, string cancelBtnMsg, string decideBtnMsg, bool activeDecide, CampaignInfoDlg.onButtonDelgate onClickButton) { }

	// RVA: 0x14E42DC Offset: 0x14E42DC VA: 0x14E42DC
	protected void LoadImages(CampaignInformation[] images) { }

	// RVA: 0x14E45A0 Offset: 0x14E45A0 VA: 0x14E45A0
	protected string GetTuorialImagePath(int imgId) { }

	// RVA: 0x14E4624 Offset: 0x14E4624 VA: 0x14E4624
	protected string GetTuorialImageName(int imgId) { }

	// RVA: 0x14E46E0 Offset: 0x14E46E0 VA: 0x14E46E0
	protected string GetCampaignInfoImagePath(int imgId) { }

	// RVA: 0x14E4764 Offset: 0x14E4764 VA: 0x14E4764
	protected string GetCampaignInfoImageName(int imgId) { }

	// RVA: 0x14E4820 Offset: 0x14E4820 VA: 0x14E4820
	protected int GetScrollHeightWithName(string imageName) { }

	// RVA: 0x14E4908 Offset: 0x14E4908 VA: 0x14E4908
	protected void LoadStart() { }

	// RVA: 0x14E4A3C Offset: 0x14E4A3C VA: 0x14E4A3C
	protected void SetBaseImage(Texture2D tex) { }

	// RVA: 0x14E4C38 Offset: 0x14E4C38 VA: 0x14E4C38
	protected void AddScrollImg(AssetData data, Action callback) { }

	// RVA: 0x14E5438 Offset: 0x14E5438 VA: 0x14E5438
	protected void AfterLoad(int addCount) { }

	// RVA: 0x14E55C0 Offset: 0x14E55C0 VA: 0x14E55C0
	protected void LoadBase(Action callback) { }

	// RVA: 0x14E4480 Offset: 0x14E4480 VA: 0x14E4480
	protected void LoadAlpha(Action callback) { }

	// RVA: 0x14E5700 Offset: 0x14E5700 VA: 0x14E5700
	protected void OpenWindow() { }

	// RVA: 0x14E54E4 Offset: 0x14E54E4 VA: 0x14E54E4
	protected void UpdatePage() { }

	// RVA: 0x14E43A8 Offset: 0x14E43A8 VA: 0x14E43A8
	protected void UpdateButtons(bool isDisp = True) { }

	// RVA: 0x14E57A8 Offset: 0x14E57A8 VA: 0x14E57A8
	protected void EndOpen() { }

	// RVA: 0x14E57B4 Offset: 0x14E57B4 VA: 0x14E57B4
	private void refreshCurrent() { }

	// RVA: 0x14E5850 Offset: 0x14E5850 VA: 0x14E5850
	public void Close() { }

	// RVA: 0x14E5858 Offset: 0x14E5858 VA: 0x14E5858
	public void Close(Action callback) { }

	// RVA: 0x14E58E4 Offset: 0x14E58E4 VA: 0x14E58E4
	protected void EndClose() { }

	// RVA: 0x14E5BFC Offset: 0x14E5BFC VA: 0x14E5BFC
	public void OnDecideButton() { }

	// RVA: 0x14E5ECC Offset: 0x14E5ECC VA: 0x14E5ECC
	public void OnCancelButton() { }

	// RVA: 0x14E5F74 Offset: 0x14E5F74 VA: 0x14E5F74
	public void OnClickClose() { }

	// RVA: 0x14E4148 Offset: 0x14E4148 VA: 0x14E4148
	protected void SetTouchMask(bool isDisp) { }

	// RVA: 0x14E41D0 Offset: 0x14E41D0 VA: 0x14E41D0
	protected void SetDecideActive(bool onOff) { }

	// RVA: 0x14E601C Offset: 0x14E601C VA: 0x14E601C
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7A1C Offset: 0xCC7A1C VA: 0xCC7A1C
	// RVA: 0x14E60B8 Offset: 0x14E60B8 VA: 0x14E60B8
	private void <LoadImages>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7A2C Offset: 0xCC7A2C VA: 0xCC7A2C
	// RVA: 0x14E612C Offset: 0x14E612C VA: 0x14E612C
	private void <LoadStart>m__1(AssetData data) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7A3C Offset: 0xCC7A3C VA: 0xCC7A3C
	// RVA: 0x14E61C8 Offset: 0x14E61C8 VA: 0x14E61C8
	private void <UpdatePage>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7A4C Offset: 0xCC7A4C VA: 0xCC7A4C
	// RVA: 0x14E61F4 Offset: 0x14E61F4 VA: 0x14E61F4
	private void <LoadStart>m__3() { }
}

// Namespace: 
public sealed class CampaignInfoDlg.onButtonDelgate : MulticastDelegate // TypeDefIndex: 5320
{
	// Methods

	// RVA: 0x14E6418 Offset: 0x14E6418 VA: 0x14E6418
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x14E5CA0 Offset: 0x14E5CA0 VA: 0x14E5CA0 Slot: 11
	public virtual void Invoke(bool decide) { }

	// RVA: 0x14E6428 Offset: 0x14E6428 VA: 0x14E6428 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool decide, AsyncCallback callback, object object) { }

	// RVA: 0x14E64B8 Offset: 0x14E64B8 VA: 0x14E64B8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC419E4 Offset: 0xC419E4 VA: 0xC419E4
private sealed class CampaignInfoDlg.<LoadBase>c__AnonStorey0 // TypeDefIndex: 5321
{
	// Fields
	internal Action callback; // 0x10
	internal CampaignInfoDlg $this; // 0x18

	// Methods

	// RVA: 0x14E56F0 Offset: 0x14E56F0 VA: 0x14E56F0
	public void .ctor() { }

	// RVA: 0x14E6240 Offset: 0x14E6240 VA: 0x14E6240
	internal void <>m__0(AssetData data) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC419F4 Offset: 0xC419F4 VA: 0xC419F4
private sealed class CampaignInfoDlg.<LoadAlpha>c__AnonStorey1 // TypeDefIndex: 5322
{
	// Fields
	internal Action callback; // 0x10
	internal CampaignInfoDlg $this; // 0x18

	// Methods

	// RVA: 0x14E56F8 Offset: 0x14E56F8 VA: 0x14E56F8
	public void .ctor() { }

	// RVA: 0x14E61FC Offset: 0x14E61FC VA: 0x14E61FC
	internal void <>m__0(AssetData data) { }
}

// Namespace: 
public class CampaignInfoItem : MonoBehaviour // TypeDefIndex: 5323
{
	// Fields
	public UITexture baseText; // 0x18
	public BoxCollider collider; // 0x20
	private CampaignInformation target; // 0x28
	protected static readonly int baseWidth; // 0x0

	// Methods

	// RVA: 0x14E651C Offset: 0x14E651C VA: 0x14E651C
	public void .ctor() { }

	// RVA: 0x14E50E0 Offset: 0x14E50E0 VA: 0x14E50E0
	public void SetCampaignInfo(CampaignInformation info, Texture2D tex, Texture2D maskTex, int height) { }

	// RVA: 0x14E6524 Offset: 0x14E6524 VA: 0x14E6524
	public void OnClick() { }

	// RVA: 0x14E6680 Offset: 0x14E6680 VA: 0x14E6680
	private static void .cctor() { }
}

// Namespace: 
public class CampaignInformation // TypeDefIndex: 5324
{
	// Fields
	public int urlOpenType; // 0x10
	public int imageId; // 0x14
	public string url; // 0x18

	// Methods

	// RVA: 0x14E67F4 Offset: 0x14E67F4 VA: 0x14E67F4
	public void .ctor() { }
}

// Namespace: 
public enum CampaignInformation.UrlOpenType // TypeDefIndex: 5325
{
	// Fields
	public int value__; // 0x0
	public const CampaignInformation.UrlOpenType NONE = 0;
	public const CampaignInformation.UrlOpenType WEBVIEW = 1;
	public const CampaignInformation.UrlOpenType BROWSER = 2;
}

// Namespace: 
public class CenterEffectDetailDialog : BaseDialog // TypeDefIndex: 5326
{
	// Fields
	[SerializeField] // RVA: 0xC4B514 Offset: 0xC4B514 VA: 0xC4B514
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC4B524 Offset: 0xC4B524 VA: 0xC4B524
	protected UILabel titleDetailLabel; // 0x60
	[SerializeField] // RVA: 0xC4B534 Offset: 0xC4B534 VA: 0xC4B534
	protected CenterEffectDetailItemListViewManager itemListViewManager; // 0x68
	[SerializeField] // RVA: 0xC4B544 Offset: 0xC4B544 VA: 0xC4B544
	protected UILabel closeLabel; // 0x70
	[SerializeField] // RVA: 0xC4B554 Offset: 0xC4B554 VA: 0xC4B554
	protected UIButton closeBtn; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xC4B564 Offset: 0xC4B564 VA: 0xC4B564
	[DebuggerBrowsableAttribute] // RVA: 0xC4B564 Offset: 0xC4B564 VA: 0xC4B564
	private Action callbackFunc; // 0x80
	protected Action closeCallbackFunc; // 0x88
	protected CenterEffectDetailDialog.State state; // 0x90

	// Properties
	protected override GameObject closeBtnObject { get; }

	// Methods

	// RVA: 0x1A3DAB8 Offset: 0x1A3DAB8 VA: 0x1A3DAB8
	public void .ctor() { }

	// RVA: 0x1A3DB20 Offset: 0x1A3DB20 VA: 0x1A3DB20
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1A3DC0C Offset: 0x1A3DC0C VA: 0x1A3DC0C
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1A3DCF8 Offset: 0x1A3DCF8 VA: 0x1A3DCF8
	public void Init() { }

	// RVA: 0x1A3DD3C Offset: 0x1A3DD3C VA: 0x1A3DD3C
	public void Open(int questId, int questPhase, Action callback) { }

	// RVA: 0x1A3E444 Offset: 0x1A3E444 VA: 0x1A3E444
	protected void EndOpen() { }

	// RVA: 0x1A3E450 Offset: 0x1A3E450 VA: 0x1A3E450
	protected void Callback() { }

	// RVA: 0x1A3E46C Offset: 0x1A3E46C VA: 0x1A3E46C
	public void Close(Action callback) { }

	// RVA: 0x1A3E4FC Offset: 0x1A3E4FC VA: 0x1A3E4FC
	protected void EndClose() { }

	// RVA: 0x1A3E538 Offset: 0x1A3E538 VA: 0x1A3E538
	public void OnClickCancel() { }

	// RVA: 0x1A3E5D4 Offset: 0x1A3E5D4 VA: 0x1A3E5D4 Slot: 4
	protected override GameObject get_closeBtnObject() { }
}

// Namespace: 
protected enum CenterEffectDetailDialog.State // TypeDefIndex: 5327
{
	// Fields
	public int value__; // 0x0
	public const CenterEffectDetailDialog.State INIT = 0;
	public const CenterEffectDetailDialog.State OPEN = 1;
	public const CenterEffectDetailDialog.State INPUT = 2;
	public const CenterEffectDetailDialog.State SELECTED = 3;
	public const CenterEffectDetailDialog.State CLOSE = 4;
}

// Namespace: 
public struct CenterEffectDetailDialog.CenterEffectDetailSkillInfo // TypeDefIndex: 5328
{
	// Fields
	public int id; // 0x0
	public int lv; // 0x4
}

// Namespace: 
public class CenterEffectDetailItemListViewItem : ListViewItem // TypeDefIndex: 5329
{
	// Fields
	protected int skillId; // 0x70
	protected int skillLevel; // 0x74

	// Properties
	public int Skill_id { get; }
	public int Skill_level { get; }

	// Methods

	// RVA: 0x1A3E674 Offset: 0x1A3E674 VA: 0x1A3E674
	public void .ctor(int index, int skillId, int skillLevel) { }

	// RVA: 0x1A3E6AC Offset: 0x1A3E6AC VA: 0x1A3E6AC Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1A3E6B4 Offset: 0x1A3E6B4 VA: 0x1A3E6B4
	public int get_Skill_id() { }

	// RVA: 0x1A3E6BC Offset: 0x1A3E6BC VA: 0x1A3E6BC
	public int get_Skill_level() { }
}

// Namespace: 
public class CenterEffectDetailItemListViewItemDraw : MonoBehaviour // TypeDefIndex: 5330
{
	// Fields
	private static readonly int TITLE_FONT_SIZE; // 0x0
	private static readonly int DETAIL_FONT_SIZE; // 0x4
	[SerializeField] // RVA: 0xC4B5A0 Offset: 0xC4B5A0 VA: 0xC4B5A0
	protected UISprite baseSprite; // 0x18
	[SerializeField] // RVA: 0xC4B5B0 Offset: 0xC4B5B0 VA: 0xC4B5B0
	protected SkillIconComponent skillIcon; // 0x20
	[SerializeField] // RVA: 0xC4B5C0 Offset: 0xC4B5C0 VA: 0xC4B5C0
	private UICrossNarrowLabel nameTextLabel; // 0x28
	[SerializeField] // RVA: 0xC4B5D0 Offset: 0xC4B5D0 VA: 0xC4B5D0
	protected UILabel levelLabel; // 0x30
	[SerializeField] // RVA: 0xC4B5E0 Offset: 0xC4B5E0 VA: 0xC4B5E0
	protected UILabel detailLabel; // 0x38

	// Methods

	// RVA: 0x1A3E6C4 Offset: 0x1A3E6C4 VA: 0x1A3E6C4
	public void .ctor() { }

	// RVA: 0x1A3E6CC Offset: 0x1A3E6CC VA: 0x1A3E6CC
	public void SetItem(CenterEffectDetailItemListViewItem item) { }

	// RVA: 0x1A3E968 Offset: 0x1A3E968 VA: 0x1A3E968
	private static void .cctor() { }
}

// Namespace: 
public class CenterEffectDetailItemListViewManager : ListViewManager // TypeDefIndex: 5331
{
	// Fields
	protected int callbackCount; // 0x138

	// Properties
	public List<CenterEffectDetailItemListViewObject> ObjectList { get; }

	// Methods

	// RVA: 0x1A3E9CC Offset: 0x1A3E9CC VA: 0x1A3E9CC
	public void .ctor() { }

	// RVA: 0x1A3E9D4 Offset: 0x1A3E9D4 VA: 0x1A3E9D4
	public CenterEffectDetailItemListViewItem GetItem(int index) { }

	// RVA: 0x1A3EA7C Offset: 0x1A3EA7C VA: 0x1A3EA7C
	public List<CenterEffectDetailItemListViewObject> get_ObjectList() { }

	// RVA: 0x1A3E240 Offset: 0x1A3E240 VA: 0x1A3E240
	public void CreateList(List<CenterEffectDetailDialog.CenterEffectDetailSkillInfo> centerEffectDetailSkillInfoList) { }

	// RVA: 0x1A3EC48 Offset: 0x1A3EC48 VA: 0x1A3EC48 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1A3EE28 Offset: 0x1A3EE28 VA: 0x1A3EE28
	protected void RequestListObject() { }

	// RVA: 0x1A3F014 Offset: 0x1A3F014 VA: 0x1A3F014
	protected void OnMoveEnd() { }
}

// Namespace: 
public class CenterEffectDetailItemListViewObject : ListViewObject // TypeDefIndex: 5332
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC4B5F0 Offset: 0xC4B5F0 VA: 0xC4B5F0
	[DebuggerBrowsableAttribute] // RVA: 0xC4B5F0 Offset: 0xC4B5F0 VA: 0xC4B5F0
	private Action callbackFunc; // 0x70
	protected CenterEffectDetailItemListViewItemDraw itemDraw; // 0x78

	// Methods

	// RVA: 0x1A3F0D8 Offset: 0x1A3F0D8 VA: 0x1A3F0D8
	public void .ctor() { }

	// RVA: 0x1A3F140 Offset: 0x1A3F140 VA: 0x1A3F140
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1A3F22C Offset: 0x1A3F22C VA: 0x1A3F22C
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1A3F318 Offset: 0x1A3F318 VA: 0x1A3F318
	protected void Awake() { }

	// RVA: 0x1A3F38C Offset: 0x1A3F38C VA: 0x1A3F38C Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1A3F394 Offset: 0x1A3F394 VA: 0x1A3F394
	public void SetDirectItem(CenterEffectDetailItemListViewItem item) { }

	// RVA: 0x1A3F39C Offset: 0x1A3F39C VA: 0x1A3F39C Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1A3ED14 Offset: 0x1A3ED14 VA: 0x1A3ED14
	public void Init(Action callbackFunc) { }

	// RVA: 0x1A3F40C Offset: 0x1A3F40C VA: 0x1A3F40C
	protected void SetupDisp() { }

	// RVA: 0x1A3F508 Offset: 0x1A3F508 VA: 0x1A3F508
	protected void EventMoveEnd() { }
}

// Namespace: 
public class ClassCompatibilityInfoDialog : BaseDialog // TypeDefIndex: 5333
{
	// Fields
	[SerializeField] // RVA: 0xC4B62C Offset: 0xC4B62C VA: 0xC4B62C
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC4B63C Offset: 0xC4B63C VA: 0xC4B63C
	protected UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC4B64C Offset: 0xC4B64C VA: 0xC4B64C
	protected GameObject type1Base; // 0x68
	[SerializeField] // RVA: 0xC4B65C Offset: 0xC4B65C VA: 0xC4B65C
	protected GameObject type2Base; // 0x70
	[SerializeField] // RVA: 0xC4B66C Offset: 0xC4B66C VA: 0xC4B66C
	protected UISprite compatibility1Sprite; // 0x78
	[SerializeField] // RVA: 0xC4B67C Offset: 0xC4B67C VA: 0xC4B67C
	protected UISprite compatibility2Sprite; // 0x80
	[SerializeField] // RVA: 0xC4B68C Offset: 0xC4B68C VA: 0xC4B68C
	protected ServantClassIconComponent[] classIconList; // 0x88
	[SerializeField] // RVA: 0xC4B69C Offset: 0xC4B69C VA: 0xC4B69C
	protected UILabel closeLabel; // 0x90
	[SerializeField] // RVA: 0xC4B6AC Offset: 0xC4B6AC VA: 0xC4B6AC
	protected UICommonButton closeButton; // 0x98
	protected ClassCompatibilityInfoDialog.State state; // 0xA0
	protected Action callbackFunc; // 0xA8
	protected Action closeCallbackFunc; // 0xB0
	protected int questId; // 0xB8
	protected int questPahase; // 0xBC

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1960034 Offset: 0x1960034 VA: 0x1960034
	public void .ctor() { }

	// RVA: 0x196009C Offset: 0x196009C VA: 0x196009C
	public void Init() { }

	// RVA: 0x19601A8 Offset: 0x19601A8 VA: 0x19601A8
	public void Open(int questId, int questPhase, Action callback) { }

	// RVA: 0x19606D4 Offset: 0x19606D4 VA: 0x19606D4
	protected void EndOpen() { }

	// RVA: 0x19606E0 Offset: 0x19606E0 VA: 0x19606E0
	public void Close() { }

	// RVA: 0x19606E8 Offset: 0x19606E8 VA: 0x19606E8
	public void Close(Action callback) { }

	// RVA: 0x1960778 Offset: 0x1960778 VA: 0x1960778
	protected void EndClose() { }

	// RVA: 0x19607B4 Offset: 0x19607B4 VA: 0x19607B4
	public void OnClickClose() { }

	// RVA: 0x1960850 Offset: 0x1960850 VA: 0x1960850 Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
protected enum ClassCompatibilityInfoDialog.State // TypeDefIndex: 5334
{
	// Fields
	public int value__; // 0x0
	public const ClassCompatibilityInfoDialog.State INIT = 0;
	public const ClassCompatibilityInfoDialog.State OPEN = 1;
	public const ClassCompatibilityInfoDialog.State INPUT = 2;
	public const ClassCompatibilityInfoDialog.State SELECTED = 3;
	public const ClassCompatibilityInfoDialog.State CLOSE = 4;
}

// Namespace: 
public class ClassCompatibilityMenu : BaseMonoBehaviour // TypeDefIndex: 5335
{
	// Fields
	[SerializeField] // RVA: 0xC4B6BC Offset: 0xC4B6BC VA: 0xC4B6BC
	protected ClassCompatibilityInfoDialog classCompatibilityConfirmMenu; // 0x18
	protected ClassCompatibilityMenu.State state; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC4B6CC Offset: 0xC4B6CC VA: 0xC4B6CC
	[DebuggerBrowsableAttribute] // RVA: 0xC4B6CC Offset: 0xC4B6CC VA: 0xC4B6CC
	private Action callbackFunc; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC4B708 Offset: 0xC4B708 VA: 0xC4B708
	[DebuggerBrowsableAttribute] // RVA: 0xC4B708 Offset: 0xC4B708 VA: 0xC4B708
	private Action closeCallbackFunc; // 0x30

	// Methods

	// RVA: 0x1960898 Offset: 0x1960898 VA: 0x1960898
	public void .ctor() { }

	// RVA: 0x19608A0 Offset: 0x19608A0 VA: 0x19608A0
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x196098C Offset: 0x196098C VA: 0x196098C
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1960A78 Offset: 0x1960A78 VA: 0x1960A78
	protected void add_closeCallbackFunc(Action value) { }

	// RVA: 0x1960B64 Offset: 0x1960B64 VA: 0x1960B64
	protected void remove_closeCallbackFunc(Action value) { }

	// RVA: 0x1960C50 Offset: 0x1960C50 VA: 0x1960C50
	public void Open(int questId, int questPhase, Action callback) { }

	// RVA: 0x1960D48 Offset: 0x1960D48 VA: 0x1960D48
	public void Close(Action callback) { }

	// RVA: 0x1960DFC Offset: 0x1960DFC VA: 0x1960DFC
	protected void EndClose() { }

	// RVA: 0x1960E84 Offset: 0x1960E84 VA: 0x1960E84
	protected void Callback() { }
}

// Namespace: 
protected enum ClassCompatibilityMenu.State // TypeDefIndex: 5336
{
	// Fields
	public int value__; // 0x0
	public const ClassCompatibilityMenu.State INIT = 0;
	public const ClassCompatibilityMenu.State INPUT = 1;
	public const ClassCompatibilityMenu.State SELECTED = 2;
	public const ClassCompatibilityMenu.State CLOSE = 3;
}

// Namespace: 
public class CommonConfirmDialog : BaseDialog // TypeDefIndex: 5337
{
	// Fields
	[SerializeField] // RVA: 0xC4B744 Offset: 0xC4B744 VA: 0xC4B744
	protected UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC4B754 Offset: 0xC4B754 VA: 0xC4B754
	protected UILabel messageLabel; // 0x60
	[SerializeField] // RVA: 0xC4B764 Offset: 0xC4B764 VA: 0xC4B764
	protected UILabel buttonDecideLabel; // 0x68
	[SerializeField] // RVA: 0xC4B774 Offset: 0xC4B774 VA: 0xC4B774
	protected UILabel buttonCancelLabel; // 0x70
	[SerializeField] // RVA: 0xC4B784 Offset: 0xC4B784 VA: 0xC4B784
	protected GameObject buttonDecide; // 0x78
	[SerializeField] // RVA: 0xC4B794 Offset: 0xC4B794 VA: 0xC4B794
	protected GameObject buttonCancel; // 0x80
	protected CommonConfirmDialog.ClickDelegate clickFunc; // 0x88
	protected Action closeCallbackFunc; // 0x90
	protected bool isButtonEnable; // 0x98
	protected bool isDecideBtnSe; // 0x99
	public const float DEFAULT_WINDOW_POSITION_Y = 0;
	public const float DEFAULT_TITLE_POSITION_Y = 180;
	public const float DEFAULT_MESSAGE_POSITION_Y = 15;
	public const int DEFAULT_SPACING_Y = 0;
	public readonly Vector2Int DEFULT_MESSAGE_WIDGET_SIZE; // 0x9C
	public const NGUIText.Alignment DEFAULT_ALIGNMENT = 0;
	public const int DEFAULT_WINDOW_HEIGHT = 480;
	public const float DEFAULT_BUTTON_POS_Y = -162.5;

	// Properties
	public UILabel ButtonDecideLabel { get; }
	public UILabel ButtonCancelLabel { get; }

	// Methods

	// RVA: 0x1666E2C Offset: 0x1666E2C VA: 0x1666E2C
	public void .ctor() { }

	// RVA: 0x1666EC0 Offset: 0x1666EC0 VA: 0x1666EC0
	public UILabel get_ButtonDecideLabel() { }

	// RVA: 0x1666EC8 Offset: 0x1666EC8 VA: 0x1666EC8
	public UILabel get_ButtonCancelLabel() { }

	// RVA: 0x1666ED0 Offset: 0x1666ED0 VA: 0x1666ED0
	public void Init() { }

	// RVA: 0x1667144 Offset: 0x1667144 VA: 0x1667144
	private void Setup(string title, string message, string decideTxt, string cancelTxt, bool isDecideSe, CommonConfirmDialog.ClickDelegate func, int fontsize, float windowPosY, float messagePosY, int spacingY, Vector2Int messageWidgetSize, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0, Nullable<float> titlePosY, int titleFontSize = 0, bool setCondensedScale = False, int minFontSize = 0, NGUIText.Alignment alignment = 0, int windowHeight = 480, float buttonPosY = -162.5, int decideTxtSize = 0, int cancelTxtSize = 0) { }

	// RVA: 0x1667940 Offset: 0x1667940 VA: 0x1667940
	public void Open(string title, string message, CommonConfirmDialog.ClickDelegate func, int fontsize = 0, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0) { }

	// RVA: 0x16679C4 Offset: 0x16679C4 VA: 0x16679C4
	public void Open(string title, string message, bool isDecideSe, CommonConfirmDialog.ClickDelegate func, int fontsize = 0, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0, bool setCondensedScale = False) { }

	// RVA: 0x1667A50 Offset: 0x1667A50 VA: 0x1667A50
	public void Open(string title, string message, string decideTxt, string cancelTxt, bool isDecideSe, CommonConfirmDialog.ClickDelegate func, int fontsize = 0, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0) { }

	// RVA: 0x1667AC4 Offset: 0x1667AC4 VA: 0x1667AC4
	public void Open(string title, string message, string decideTxt, string cancelTxt, CommonConfirmDialog.ClickDelegate func, int fontsize = 0, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0) { }

	// RVA: 0x1667B44 Offset: 0x1667B44 VA: 0x1667B44
	public void Open(string title, string message, string decideTxt, string cancelTxt, bool isDecideSe, CommonConfirmDialog.ClickDelegate func, int titleFontSize, int messageFontSize, float titlePosY, float messagePosY, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0) { }

	// RVA: 0x1667C6C Offset: 0x1667C6C VA: 0x1667C6C
	public void Open(string title, string message, string decideTxt, string cancelTxt, CommonConfirmDialog.ClickDelegate func, int fontsize, int minFontSize, float messagePosY, int messageLabelWidth, NGUIText.Alignment alignment, int windowHeight, float buttonPosY, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0) { }

	// RVA: 0x1667D7C Offset: 0x1667D7C VA: 0x1667D7C
	public void OpenDecideDlg(string title, string message, string decideTxt, string cancelTxt, CommonConfirmDialog.ClickDelegate func, int fontsize, float windowPosY, float messagePosY, int spacingY, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0, int messageLabelHeight = 240) { }

	// RVA: 0x1667E94 Offset: 0x1667E94 VA: 0x1667E94
	public void OpenDecideDlg(string title, string message, string decideTxt, string cancelTxt, CommonConfirmDialog.ClickDelegate func, int fontsize, float messagePosY, int spacingY, Vector2Int messageWidgetSize, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0) { }

	// RVA: 0x1667F18 Offset: 0x1667F18 VA: 0x1667F18
	public void OpenDecideDlg(string title, string message, string decideTxt, string cancelTxt, CommonConfirmDialog.ClickDelegate func, int fontsize, float windowPosY, float messagePosY, int spacingY, bool canMaskTouchClose = False, BaseDialog.MaskType maskType = 0, int messageLabelHeight = 240, NGUIText.Alignment alignment = 0) { }
