	public List<string> GetHeaderValues(string name) { }

	// RVA: 0x1CA9194 Offset: 0x1CA9194 VA: 0x1CA9194
	public string GetFirstHeaderValue(string name) { }

	// RVA: 0x1CA9794 Offset: 0x1CA9794 VA: 0x1CA9794
	public bool HasHeaderWithValue(string headerName, string value) { }

	// RVA: 0x1CAA4F4 Offset: 0x1CAA4F4 VA: 0x1CAA4F4
	public bool HasHeader(string headerName) { }

	// RVA: 0x1CB5CC0 Offset: 0x1CB5CC0 VA: 0x1CB5CC0
	public HTTPRange GetRange() { }

	// RVA: 0x1CB5158 Offset: 0x1CB5158 VA: 0x1CB5158
	public static string ReadTo(Stream stream, byte blocker) { }

	// RVA: 0x1CB638C Offset: 0x1CB638C VA: 0x1CB638C
	public static string ReadTo(Stream stream, byte blocker1, byte blocker2) { }

	// RVA: 0x1CB5348 Offset: 0x1CB5348 VA: 0x1CB5348
	public static string NoTrimReadTo(Stream stream, byte blocker1, byte blocker2) { }

	// RVA: 0x1CB66E8 Offset: 0x1CB66E8 VA: 0x1CB66E8
	protected int ReadChunkLength(Stream stream) { }

	// RVA: 0x1CB57C0 Offset: 0x1CB57C0 VA: 0x1CB57C0
	protected void ReadChunked(Stream stream) { }

	// RVA: 0x1CAA524 Offset: 0x1CAA524 VA: 0x1CAA524
	internal void ReadRaw(Stream stream, int contentLength) { }

	// RVA: 0x1CB5F54 Offset: 0x1CB5F54 VA: 0x1CB5F54
	protected void ReadUnknownSize(Stream stream) { }

	// RVA: 0x1CB6C10 Offset: 0x1CB6C10 VA: 0x1CB6C10
	protected byte[] DecodeStream(MemoryStream streamToDecode) { }

	// RVA: 0x1CB6868 Offset: 0x1CB6868 VA: 0x1CB6868
	protected void BeginReceiveStreamFragments() { }

	// RVA: 0x1CB69C0 Offset: 0x1CB69C0 VA: 0x1CB69C0
	protected void FeedStreamFragment(byte[] buffer, int pos, int length) { }

	// RVA: 0x1CB6B24 Offset: 0x1CB6B24 VA: 0x1CB6B24
	protected void FlushRemainingFragmentBuffer() { }

	// RVA: 0x1CB6F48 Offset: 0x1CB6F48 VA: 0x1CB6F48
	protected void AddStreamedFragment(byte[] buffer) { }

	// RVA: 0x1CB69BC Offset: 0x1CB69BC VA: 0x1CB69BC
	protected void WaitWhileHasFragments() { }

	// RVA: 0x1CB70A8 Offset: 0x1CB70A8 VA: 0x1CB70A8
	public List<byte[]> GetStreamedFragments() { }

	// RVA: 0x1CAF724 Offset: 0x1CAF724 VA: 0x1CAF724
	internal bool HasStreamedFragments() { }

	// RVA: 0x1CB4188 Offset: 0x1CB4188 VA: 0x1CB4188
	internal void FinishStreaming() { }

	// RVA: 0x1CB422C Offset: 0x1CB422C VA: 0x1CB422C Slot: 4
	public void Dispose() { }
}

// Namespace: BestHTTP
[ExecuteInEditMode] // RVA: 0xC24BD8 Offset: 0xC24BD8 VA: 0xC24BD8
public sealed class HTTPUpdateDelegator : MonoBehaviour // TypeDefIndex: 4380
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC49B0C Offset: 0xC49B0C VA: 0xC49B0C
	[DebuggerBrowsableAttribute] // RVA: 0xC49B0C Offset: 0xC49B0C VA: 0xC49B0C
	private static HTTPUpdateDelegator <Instance>k__BackingField; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC49B48 Offset: 0xC49B48 VA: 0xC49B48
	[DebuggerBrowsableAttribute] // RVA: 0xC49B48 Offset: 0xC49B48 VA: 0xC49B48
	private static bool <IsCreated>k__BackingField; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xC49B84 Offset: 0xC49B84 VA: 0xC49B84
	[DebuggerBrowsableAttribute] // RVA: 0xC49B84 Offset: 0xC49B84 VA: 0xC49B84
	private static bool <IsThreaded>k__BackingField; // 0x9
	[CompilerGeneratedAttribute] // RVA: 0xC49BC0 Offset: 0xC49BC0 VA: 0xC49BC0
	[DebuggerBrowsableAttribute] // RVA: 0xC49BC0 Offset: 0xC49BC0 VA: 0xC49BC0
	private static bool <IsThreadRunning>k__BackingField; // 0xA
	[CompilerGeneratedAttribute] // RVA: 0xC49BFC Offset: 0xC49BFC VA: 0xC49BFC
	[DebuggerBrowsableAttribute] // RVA: 0xC49BFC Offset: 0xC49BFC VA: 0xC49BFC
	private static int <ThreadFrequencyInMS>k__BackingField; // 0xC
	public static Func<bool> OnBeforeApplicationQuit; // 0x10
	private static bool IsSetupCalled; // 0x18

	// Properties
	public static HTTPUpdateDelegator Instance { get; set; }
	public static bool IsCreated { get; set; }
	public static bool IsThreaded { get; set; }
	public static bool IsThreadRunning { get; set; }
	public static int ThreadFrequencyInMS { get; set; }

	// Methods

	// RVA: 0x1CB71D4 Offset: 0x1CB71D4 VA: 0x1CB71D4
	private static void .cctor() { }

	// RVA: 0x1CB7248 Offset: 0x1CB7248 VA: 0x1CB7248
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7044 Offset: 0xCC7044 VA: 0xCC7044
	// RVA: 0x1CB7250 Offset: 0x1CB7250 VA: 0x1CB7250
	public static HTTPUpdateDelegator get_Instance() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7054 Offset: 0xCC7054 VA: 0xCC7054
	// RVA: 0x1CB72B8 Offset: 0x1CB72B8 VA: 0x1CB72B8
	private static void set_Instance(HTTPUpdateDelegator value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7064 Offset: 0xCC7064 VA: 0xCC7064
	// RVA: 0x1CB7324 Offset: 0x1CB7324 VA: 0x1CB7324
	public static bool get_IsCreated() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7074 Offset: 0xCC7074 VA: 0xCC7074
	// RVA: 0x1CB738C Offset: 0x1CB738C VA: 0x1CB738C
	private static void set_IsCreated(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7084 Offset: 0xCC7084 VA: 0xCC7084
	// RVA: 0x1CB73FC Offset: 0x1CB73FC VA: 0x1CB73FC
	public static bool get_IsThreaded() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7094 Offset: 0xCC7094 VA: 0xCC7094
	// RVA: 0x1CB7464 Offset: 0x1CB7464 VA: 0x1CB7464
	public static void set_IsThreaded(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC70A4 Offset: 0xCC70A4 VA: 0xCC70A4
	// RVA: 0x1CB74D4 Offset: 0x1CB74D4 VA: 0x1CB74D4
	public static bool get_IsThreadRunning() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC70B4 Offset: 0xCC70B4 VA: 0xCC70B4
	// RVA: 0x1CB753C Offset: 0x1CB753C VA: 0x1CB753C
	private static void set_IsThreadRunning(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC70C4 Offset: 0xCC70C4 VA: 0xCC70C4
	// RVA: 0x1CB75AC Offset: 0x1CB75AC VA: 0x1CB75AC
	public static int get_ThreadFrequencyInMS() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC70D4 Offset: 0xCC70D4 VA: 0xCC70D4
	// RVA: 0x1CB71DC Offset: 0x1CB71DC VA: 0x1CB71DC
	public static void set_ThreadFrequencyInMS(int value) { }

	// RVA: 0x1CAC0F8 Offset: 0x1CAC0F8 VA: 0x1CAC0F8
	public static void CheckInstance() { }

	// RVA: 0x1CB7614 Offset: 0x1CB7614 VA: 0x1CB7614
	private void Setup() { }

	// RVA: 0x1CB7768 Offset: 0x1CB7768 VA: 0x1CB7768
	private void ThreadFunc(object obj) { }

	// RVA: 0x1CB7A30 Offset: 0x1CB7A30 VA: 0x1CB7A30
	private void Update() { }

	// RVA: 0x1CB7B18 Offset: 0x1CB7B18 VA: 0x1CB7B18
	private void OnDisable() { }

	// RVA: 0x1CB7B1C Offset: 0x1CB7B1C VA: 0x1CB7B1C
	private void OnApplicationQuit() { }
}

// Namespace: BestHTTP.Logger
public class DefaultLogger : ILogger // TypeDefIndex: 4381
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC49C38 Offset: 0xC49C38 VA: 0xC49C38
	[DebuggerBrowsableAttribute] // RVA: 0xC49C38 Offset: 0xC49C38 VA: 0xC49C38
	private Loglevels <Level>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC49C74 Offset: 0xC49C74 VA: 0xC49C74
	[DebuggerBrowsableAttribute] // RVA: 0xC49C74 Offset: 0xC49C74 VA: 0xC49C74
	private string <FormatVerbose>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xC49CB0 Offset: 0xC49CB0 VA: 0xC49CB0
	[DebuggerBrowsableAttribute] // RVA: 0xC49CB0 Offset: 0xC49CB0 VA: 0xC49CB0
	private string <FormatInfo>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xC49CEC Offset: 0xC49CEC VA: 0xC49CEC
	[DebuggerBrowsableAttribute] // RVA: 0xC49CEC Offset: 0xC49CEC VA: 0xC49CEC
	private string <FormatWarn>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xC49D28 Offset: 0xC49D28 VA: 0xC49D28
	[DebuggerBrowsableAttribute] // RVA: 0xC49D28 Offset: 0xC49D28 VA: 0xC49D28
	private string <FormatErr>k__BackingField; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xC49D64 Offset: 0xC49D64 VA: 0xC49D64
	[DebuggerBrowsableAttribute] // RVA: 0xC49D64 Offset: 0xC49D64 VA: 0xC49D64
	private string <FormatEx>k__BackingField; // 0x38

	// Properties
	public Loglevels Level { get; set; }
	public string FormatVerbose { get; set; }
	public string FormatInfo { get; set; }
	public string FormatWarn { get; set; }
	public string FormatErr { get; set; }
	public string FormatEx { get; set; }

	// Methods

	// RVA: 0x1CAB5AC Offset: 0x1CAB5AC VA: 0x1CAB5AC
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC70E4 Offset: 0xCC70E4 VA: 0xCC70E4
	// RVA: 0x1CB7EC0 Offset: 0x1CB7EC0 VA: 0x1CB7EC0 Slot: 4
	public Loglevels get_Level() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC70F4 Offset: 0xCC70F4 VA: 0xCC70F4
	// RVA: 0x1CB7EB8 Offset: 0x1CB7EB8 VA: 0x1CB7EB8 Slot: 5
	public void set_Level(Loglevels value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7104 Offset: 0xCC7104 VA: 0xCC7104
	// RVA: 0x1CB7EC8 Offset: 0x1CB7EC8 VA: 0x1CB7EC8 Slot: 6
	public string get_FormatVerbose() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7114 Offset: 0xCC7114 VA: 0xCC7114
	// RVA: 0x1CB7E90 Offset: 0x1CB7E90 VA: 0x1CB7E90 Slot: 7
	public void set_FormatVerbose(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7124 Offset: 0xCC7124 VA: 0xCC7124
	// RVA: 0x1CB7ED0 Offset: 0x1CB7ED0 VA: 0x1CB7ED0 Slot: 8
	public string get_FormatInfo() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7134 Offset: 0xCC7134 VA: 0xCC7134
	// RVA: 0x1CB7E98 Offset: 0x1CB7E98 VA: 0x1CB7E98 Slot: 9
	public void set_FormatInfo(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7144 Offset: 0xCC7144 VA: 0xCC7144
	// RVA: 0x1CB7ED8 Offset: 0x1CB7ED8 VA: 0x1CB7ED8 Slot: 10
	public string get_FormatWarn() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7154 Offset: 0xCC7154 VA: 0xCC7154
	// RVA: 0x1CB7EA0 Offset: 0x1CB7EA0 VA: 0x1CB7EA0 Slot: 11
	public void set_FormatWarn(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7164 Offset: 0xCC7164 VA: 0xCC7164
	// RVA: 0x1CB7EE0 Offset: 0x1CB7EE0 VA: 0x1CB7EE0 Slot: 12
	public string get_FormatErr() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7174 Offset: 0xCC7174 VA: 0xCC7174
	// RVA: 0x1CB7EA8 Offset: 0x1CB7EA8 VA: 0x1CB7EA8 Slot: 13
	public void set_FormatErr(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7184 Offset: 0xCC7184 VA: 0xCC7184
	// RVA: 0x1CB7EE8 Offset: 0x1CB7EE8 VA: 0x1CB7EE8 Slot: 14
	public string get_FormatEx() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC7194 Offset: 0xCC7194 VA: 0xCC7194
	// RVA: 0x1CB7EB0 Offset: 0x1CB7EB0 VA: 0x1CB7EB0 Slot: 15
	public void set_FormatEx(string value) { }

	// RVA: 0x1CB7EF0 Offset: 0x1CB7EF0 VA: 0x1CB7EF0 Slot: 16
	public void Verbose(string division, string verb) { }

	// RVA: 0x1CB802C Offset: 0x1CB802C VA: 0x1CB802C Slot: 17
	public void Information(string division, string info) { }

	// RVA: 0x1CB816C Offset: 0x1CB816C VA: 0x1CB816C Slot: 18
	public void Warning(string division, string warn) { }

	// RVA: 0x1CB82AC Offset: 0x1CB82AC VA: 0x1CB82AC Slot: 19
	public void Error(string division, string err) { }

	// RVA: 0x1CB83EC Offset: 0x1CB83EC VA: 0x1CB83EC Slot: 20
	public void Exception(string division, string msg, Exception ex) { }
}

// Namespace: BestHTTP.Logger
public enum Loglevels // TypeDefIndex: 4382
{
	// Fields
	public byte value__; // 0x0
	public const Loglevels All = 0;
	public const Loglevels Information = 1;
	public const Loglevels Warning = 2;
	public const Loglevels Error = 3;
	public const Loglevels Exception = 4;
	public const Loglevels None = 5;
}

// Namespace: BestHTTP.Logger
public interface ILogger // TypeDefIndex: 4383
{
	// Properties
	public abstract Loglevels Level { get; set; }
	public abstract string FormatVerbose { get; set; }
	public abstract string FormatInfo { get; set; }
	public abstract string FormatWarn { get; set; }
	public abstract string FormatErr { get; set; }
	public abstract string FormatEx { get; set; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract Loglevels get_Level();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void set_Level(Loglevels value);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract string get_FormatVerbose();

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void set_FormatVerbose(string value);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract string get_FormatInfo();

	// RVA: -1 Offset: -1 Slot: 5
	public abstract void set_FormatInfo(string value);

	// RVA: -1 Offset: -1 Slot: 6
	public abstract string get_FormatWarn();

	// RVA: -1 Offset: -1 Slot: 7
	public abstract void set_FormatWarn(string value);

	// RVA: -1 Offset: -1 Slot: 8
	public abstract string get_FormatErr();

	// RVA: -1 Offset: -1 Slot: 9
	public abstract void set_FormatErr(string value);

	// RVA: -1 Offset: -1 Slot: 10
	public abstract string get_FormatEx();

	// RVA: -1 Offset: -1 Slot: 11
	public abstract void set_FormatEx(string value);

	// RVA: -1 Offset: -1 Slot: 12
	public abstract void Verbose(string division, string verb);

	// RVA: -1 Offset: -1 Slot: 13
	public abstract void Information(string division, string info);

	// RVA: -1 Offset: -1 Slot: 14
	public abstract void Warning(string division, string warn);

	// RVA: -1 Offset: -1 Slot: 15
	public abstract void Error(string division, string err);

	// RVA: -1 Offset: -1 Slot: 16
	public abstract void Exception(string division, string msg, Exception ex);
}

// Namespace: PlatformSupport.Collections.ObjectModel
[DefaultMemberAttribute] // RVA: 0xC24BE8 Offset: 0xC24BE8 VA: 0xC24BE8
public class ObservableDictionary<TKey, TValue> : IDictionary<TKey, TValue>, INotifyCollectionChanged, INotifyPropertyChanged, IEnumerable, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>> // TypeDefIndex: 4384
{
	// Fields
	private const string CountString = "Count";
	private const string IndexerName = "Item[]";
	private const string KeysName = "Keys";
	private const string ValuesName = "Values";
	private IDictionary<TKey, TValue> _Dictionary; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC49DA0 Offset: 0xC49DA0 VA: 0xC49DA0
	[DebuggerBrowsableAttribute] // RVA: 0xC49DA0 Offset: 0xC49DA0 VA: 0xC49DA0
	private NotifyCollectionChangedEventHandler CollectionChanged; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC49DDC Offset: 0xC49DDC VA: 0xC49DDC
	[DebuggerBrowsableAttribute] // RVA: 0xC49DDC Offset: 0xC49DDC VA: 0xC49DDC
	private PropertyChangedEventHandler PropertyChanged; // 0x0

	// Properties
	protected IDictionary<TKey, TValue> Dictionary { get; }
	public ICollection<TKey> Keys { get; }
	public ICollection<TValue> Values { get; }
	public TValue Item { get; set; }
	public int Count { get; }
	public bool IsReadOnly { get; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271000 Offset: 0x2271000 VA: 0x2271000
	|-ObservableDictionary<object, object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(IDictionary<TKey, TValue> dictionary) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x227107C Offset: 0x227107C VA: 0x227107C
	|-ObservableDictionary<object, object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(IEqualityComparer<TKey> comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271100 Offset: 0x2271100 VA: 0x2271100
	|-ObservableDictionary<object, object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(int capacity) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271184 Offset: 0x2271184 VA: 0x2271184
	|-ObservableDictionary<object, object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(IDictionary<TKey, TValue> dictionary, IEqualityComparer<TKey> comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271208 Offset: 0x2271208 VA: 0x2271208
	|-ObservableDictionary<object, object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(int capacity, IEqualityComparer<TKey> comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x227129C Offset: 0x227129C VA: 0x227129C
	|-ObservableDictionary<object, object>..ctor
	*/

	// RVA: -1 Offset: -1
	protected IDictionary<TKey, TValue> get_Dictionary() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271330 Offset: 0x2271330 VA: 0x2271330
	|-ObservableDictionary<object, object>.get_Dictionary
	*/

	// RVA: -1 Offset: -1 Slot: 24
	public void Add(TKey key, TValue value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271338 Offset: 0x2271338 VA: 0x2271338
	|-ObservableDictionary<object, object>.Add
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public bool ContainsKey(TKey key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271390 Offset: 0x2271390 VA: 0x2271390
	|-ObservableDictionary<object, object>.ContainsKey
	*/

	// RVA: -1 Offset: -1 Slot: 9
	public ICollection<TKey> get_Keys() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271464 Offset: 0x2271464 VA: 0x2271464
	|-ObservableDictionary<object, object>.get_Keys
	*/

	// RVA: -1 Offset: -1 Slot: 5
	public bool Remove(TKey key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x227152C Offset: 0x227152C VA: 0x227152C
	|-ObservableDictionary<object, object>.Remove
	*/

	// RVA: -1 Offset: -1 Slot: 6
	public bool TryGetValue(TKey key, out TValue value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x227176C Offset: 0x227176C VA: 0x227176C
	|-ObservableDictionary<object, object>.TryGetValue
	*/

	// RVA: -1 Offset: -1 Slot: 10
	public ICollection<TValue> get_Values() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x227184C Offset: 0x227184C VA: 0x227184C
	|-ObservableDictionary<object, object>.get_Values
	*/

	// RVA: -1 Offset: -1 Slot: 7
	public TValue get_Item(TKey key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271914 Offset: 0x2271914 VA: 0x2271914
	|-ObservableDictionary<object, object>.get_Item
	*/

	// RVA: -1 Offset: -1 Slot: 8
	public void set_Item(TKey key, TValue value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x22719EC Offset: 0x22719EC VA: 0x22719EC
	|-ObservableDictionary<object, object>.set_Item
	*/

	// RVA: -1 Offset: -1 Slot: 14
	public void Add(KeyValuePair<TKey, TValue> item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271A44 Offset: 0x2271A44 VA: 0x2271A44
	|-ObservableDictionary<object, object>.Add
	*/

	// RVA: -1 Offset: -1 Slot: 15
	public void Clear() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271AD8 Offset: 0x2271AD8 VA: 0x2271AD8
	|-ObservableDictionary<object, object>.Clear
	*/

	// RVA: -1 Offset: -1 Slot: 16
	public bool Contains(KeyValuePair<TKey, TValue> item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271C90 Offset: 0x2271C90 VA: 0x2271C90
	|-ObservableDictionary<object, object>.Contains
	*/

	// RVA: -1 Offset: -1 Slot: 17
	public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271D70 Offset: 0x2271D70 VA: 0x2271D70
	|-ObservableDictionary<object, object>.CopyTo
	*/

	// RVA: -1 Offset: -1 Slot: 12
	public int get_Count() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271E50 Offset: 0x2271E50 VA: 0x2271E50
	|-ObservableDictionary<object, object>.get_Count
	*/

	// RVA: -1 Offset: -1 Slot: 13
	public bool get_IsReadOnly() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271F14 Offset: 0x2271F14 VA: 0x2271F14
	|-ObservableDictionary<object, object>.get_IsReadOnly
	*/

	// RVA: -1 Offset: -1 Slot: 18
	public bool Remove(KeyValuePair<TKey, TValue> item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2271FDC Offset: 0x2271FDC VA: 0x2271FDC
	|-ObservableDictionary<object, object>.Remove
	*/

	// RVA: -1 Offset: -1 Slot: 19
	public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2272054 Offset: 0x2272054 VA: 0x2272054
	|-ObservableDictionary<object, object>.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 11
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2272118 Offset: 0x2272118 VA: 0x2272118
	|-ObservableDictionary<object, object>.System.Collections.IEnumerable.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 20
	public void add_CollectionChanged(NotifyCollectionChangedEventHandler value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x22721F8 Offset: 0x22721F8 VA: 0x22721F8
	|-ObservableDictionary<object, object>.add_CollectionChanged
	*/

	// RVA: -1 Offset: -1 Slot: 21
	public void remove_CollectionChanged(NotifyCollectionChangedEventHandler value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x22722F8 Offset: 0x22722F8 VA: 0x22722F8
	|-ObservableDictionary<object, object>.remove_CollectionChanged
	*/

	// RVA: -1 Offset: -1 Slot: 22
	public void add_PropertyChanged(PropertyChangedEventHandler value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x22723F8 Offset: 0x22723F8 VA: 0x22723F8
	|-ObservableDictionary<object, object>.add_PropertyChanged
	*/

	// RVA: -1 Offset: -1 Slot: 23
	public void remove_PropertyChanged(PropertyChangedEventHandler value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x22724F8 Offset: 0x22724F8 VA: 0x22724F8
	|-ObservableDictionary<object, object>.remove_PropertyChanged
	*/

	// RVA: -1 Offset: -1
	public void AddRange(IDictionary<TKey, TValue> items) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x22725F8 Offset: 0x22725F8 VA: 0x22725F8
	|-ObservableDictionary<object, object>.AddRange
	*/

	// RVA: -1 Offset: -1
	private void Insert(TKey key, TValue value, bool add) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2272CA4 Offset: 0x2272CA4 VA: 0x2272CA4
	|-ObservableDictionary<object, object>.Insert
	*/

	// RVA: -1 Offset: -1
	private void OnPropertyChanged() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2273090 Offset: 0x2273090 VA: 0x2273090
	|-ObservableDictionary<object, object>.OnPropertyChanged
	*/

	// RVA: -1 Offset: -1 Slot: 25
	protected virtual void OnPropertyChanged(string propertyName) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x227319C Offset: 0x227319C VA: 0x227319C
	|-ObservableDictionary<object, object>.OnPropertyChanged
	*/

	// RVA: -1 Offset: -1
	private void OnCollectionChanged() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2273230 Offset: 0x2273230 VA: 0x2273230
	|-ObservableDictionary<object, object>.OnCollectionChanged
	*/

	// RVA: -1 Offset: -1
	private void OnCollectionChanged(NotifyCollectionChangedAction action, KeyValuePair<TKey, TValue> changedItem) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x22732E8 Offset: 0x22732E8 VA: 0x22732E8
	|-ObservableDictionary<object, object>.OnCollectionChanged
	*/

	// RVA: -1 Offset: -1
	private void OnCollectionChanged(NotifyCollectionChangedAction action, KeyValuePair<TKey, TValue> newItem, KeyValuePair<TKey, TValue> oldItem) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x22733E8 Offset: 0x22733E8 VA: 0x22733E8
	|-ObservableDictionary<object, object>.OnCollectionChanged
	*/

	// RVA: -1 Offset: -1
	private void OnCollectionChanged(NotifyCollectionChangedAction action, IList newItems) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x227352C Offset: 0x227352C VA: 0x227352C
	|-ObservableDictionary<object, object>.OnCollectionChanged
	*/

	[CompilerGeneratedAttribute] // RVA: 0xCC71A4 Offset: 0xCC71A4 VA: 0xCC71A4
	// RVA: -1 Offset: -1
	private bool <AddRange>m__0(TKey k) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x22735FC Offset: 0x22735FC VA: 0x22735FC
	|-ObservableDictionary<object, object>.<AddRange>m__0
	*/
}

// Namespace: PlatformSupport.Collections.Specialized
public sealed class NotifyCollectionChangedEventHandler : MulticastDelegate // TypeDefIndex: 4385
{
	// Methods

	// RVA: 0x177D754 Offset: 0x177D754 VA: 0x177D754
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x177D764 Offset: 0x177D764 VA: 0x177D764 Slot: 11
	public virtual void Invoke(object sender, NotifyCollectionChangedEventArgs e) { }

	// RVA: 0x177DB24 Offset: 0x177DB24 VA: 0x177DB24 Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, NotifyCollectionChangedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0x177DB54 Offset: 0x177DB54 VA: 0x177DB54 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: PlatformSupport.Collections.Specialized
public interface INotifyCollectionChanged // TypeDefIndex: 4386
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void add_CollectionChanged(NotifyCollectionChangedEventHandler value);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void remove_CollectionChanged(NotifyCollectionChangedEventHandler value);
}

// Namespace: PlatformSupport.Collections.Specialized
public enum NotifyCollectionChangedAction // TypeDefIndex: 4387
{
	// Fields
	public int value__; // 0x0
	public const NotifyCollectionChangedAction Add = 0;
	public const NotifyCollectionChangedAction Remove = 1;
	public const NotifyCollectionChangedAction Replace = 2;
	public const NotifyCollectionChangedAction Move = 3;
	public const NotifyCollectionChangedAction Reset = 4;
}

// Namespace: PlatformSupport.Collections.Specialized
public class NotifyCollectionChangedEventArgs : EventArgs // TypeDefIndex: 4388
{
	// Fields
	private NotifyCollectionChangedAction _action; // 0x10
	private IList _newItems; // 0x18
	private IList _oldItems; // 0x20
	private int _newStartingIndex; // 0x28
	private int _oldStartingIndex; // 0x2C

	// Properties
	public NotifyCollectionChangedAction Action { get; }
	public IList NewItems { get; }
	public IList OldItems { get; }
	public int NewStartingIndex { get; }
	public int OldStartingIndex { get; }

	// Methods

	// RVA: 0x177C424 Offset: 0x177C424 VA: 0x177C424
	public void .ctor(NotifyCollectionChangedAction action) { }

	// RVA: 0x177C5BC Offset: 0x177C5BC VA: 0x177C5BC
	public void .ctor(NotifyCollectionChangedAction action, object changedItem) { }

	// RVA: 0x177C76C Offset: 0x177C76C VA: 0x177C76C
	public void .ctor(NotifyCollectionChangedAction action, object changedItem, int index) { }

	// RVA: 0x177C91C Offset: 0x177C91C VA: 0x177C91C
	public void .ctor(NotifyCollectionChangedAction action, IList changedItems) { }

	// RVA: 0x177CA94 Offset: 0x177CA94 VA: 0x177CA94
	public void .ctor(NotifyCollectionChangedAction action, IList changedItems, int startingIndex) { }

	// RVA: 0x177CC48 Offset: 0x177CC48 VA: 0x177CC48
	public void .ctor(NotifyCollectionChangedAction action, object newItem, object oldItem) { }

	// RVA: 0x177CE50 Offset: 0x177CE50 VA: 0x177CE50
	public void .ctor(NotifyCollectionChangedAction action, object newItem, object oldItem, int index) { }

	// RVA: 0x177D014 Offset: 0x177D014 VA: 0x177D014
	public void .ctor(NotifyCollectionChangedAction action, IList newItems, IList oldItems) { }

	// RVA: 0x177D164 Offset: 0x177D164 VA: 0x177D164
	public void .ctor(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int startingIndex) { }

	// RVA: 0x177D2B8 Offset: 0x177D2B8 VA: 0x177D2B8
	public void .ctor(NotifyCollectionChangedAction action, object changedItem, int index, int oldIndex) { }

	// RVA: 0x177D440 Offset: 0x177D440 VA: 0x177D440
	public void .ctor(NotifyCollectionChangedAction action, IList changedItems, int index, int oldIndex) { }

	// RVA: 0x177D564 Offset: 0x177D564 VA: 0x177D564
	internal void .ctor(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int newIndex, int oldIndex) { }

	// RVA: 0x177C754 Offset: 0x177C754 VA: 0x177C754
	private void InitializeAddOrRemove(NotifyCollectionChangedAction action, IList changedItems, int startingIndex) { }

	// RVA: 0x177C528 Offset: 0x177C528 VA: 0x177C528
	private void InitializeAdd(NotifyCollectionChangedAction action, IList newItems, int newStartingIndex) { }

	// RVA: 0x177D698 Offset: 0x177D698 VA: 0x177D698
	private void InitializeRemove(NotifyCollectionChangedAction action, IList oldItems, int oldStartingIndex) { }

	// RVA: 0x177CE08 Offset: 0x177CE08 VA: 0x177CE08
	private void InitializeMoveOrReplace(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int startingIndex, int oldStartingIndex) { }

	// RVA: 0x177D72C Offset: 0x177D72C VA: 0x177D72C
	public NotifyCollectionChangedAction get_Action() { }

	// RVA: 0x177D734 Offset: 0x177D734 VA: 0x177D734
	public IList get_NewItems() { }

	// RVA: 0x177D73C Offset: 0x177D73C VA: 0x177D73C
	public IList get_OldItems() { }

	// RVA: 0x177D744 Offset: 0x177D744 VA: 0x177D744
	public int get_NewStartingIndex() { }

	// RVA: 0x177D74C Offset: 0x177D74C VA: 0x177D74C
	public int get_OldStartingIndex() { }
}

// Namespace: PlatformSupport.Collections.Specialized
[DefaultMemberAttribute] // RVA: 0xC24C20 Offset: 0xC24C20 VA: 0xC24C20
internal sealed class ReadOnlyList : IList, IEnumerable, ICollection // TypeDefIndex: 4389
{
	// Fields
	private readonly IList _list; // 0x10

	// Properties
	public int Count { get; }
	public bool IsReadOnly { get; }
	public bool IsFixedSize { get; }
	public bool IsSynchronized { get; }
	public object Item { get; set; }
	public object SyncRoot { get; }

	// Methods

	// RVA: 0x177D66C Offset: 0x177D66C VA: 0x177D66C
	internal void .ctor(IList list) { }

	// RVA: 0x177DB60 Offset: 0x177DB60 VA: 0x177DB60 Slot: 16
	public int get_Count() { }

	// RVA: 0x177DC14 Offset: 0x177DC14 VA: 0x177DC14 Slot: 5
	public bool get_IsReadOnly() { }

	// RVA: 0x177DC1C Offset: 0x177DC1C VA: 0x177DC1C Slot: 4
	public bool get_IsFixedSize() { }

	// RVA: 0x177DC24 Offset: 0x177DC24 VA: 0x177DC24 Slot: 17
	public bool get_IsSynchronized() { }

	// RVA: 0x177DCDC Offset: 0x177DCDC VA: 0x177DCDC Slot: 6
	public object get_Item(int index) { }

	// RVA: 0x177DDA4 Offset: 0x177DDA4 VA: 0x177DDA4 Slot: 7
	public void set_Item(int index, object value) { }

	// RVA: 0x177DE0C Offset: 0x177DE0C VA: 0x177DE0C Slot: 18
	public object get_SyncRoot() { }

	// RVA: 0x177DEC4 Offset: 0x177DEC4 VA: 0x177DEC4 Slot: 8
	public int Add(object value) { }

	// RVA: 0x177DF2C Offset: 0x177DF2C VA: 0x177DF2C Slot: 9
	public void Clear() { }

	// RVA: 0x177DF94 Offset: 0x177DF94 VA: 0x177DF94 Slot: 10
	public bool Contains(object value) { }

	// RVA: 0x177E05C Offset: 0x177E05C VA: 0x177E05C Slot: 19
	public void CopyTo(Array array, int index) { }

	// RVA: 0x177E12C Offset: 0x177E12C VA: 0x177E12C Slot: 15
	public IEnumerator GetEnumerator() { }

	// RVA: 0x177E1E0 Offset: 0x177E1E0 VA: 0x177E1E0 Slot: 11
	public int IndexOf(object value) { }

	// RVA: 0x177E2A8 Offset: 0x177E2A8 VA: 0x177E2A8 Slot: 12
	public void Insert(int index, object value) { }

	// RVA: 0x177E310 Offset: 0x177E310 VA: 0x177E310 Slot: 13
	public void Remove(object value) { }

	// RVA: 0x177E378 Offset: 0x177E378 VA: 0x177E378 Slot: 14
	public void RemoveAt(int index) { }
}

// Namespace: BestHTTP.PlatformSupport.TcpClient.General
public class TcpClient : IDisposable // TypeDefIndex: 4390
{
	// Fields
	private NetworkStream stream; // 0x10
	private bool active; // 0x18
	private Socket client; // 0x20
	private bool disposed; // 0x28
	private TcpClient.Properties values; // 0x2C
	private int recv_timeout; // 0x30
	private int send_timeout; // 0x34
	private int recv_buffer_size; // 0x38
	private int send_buffer_size; // 0x3C
	private LingerOption linger_state; // 0x40
	private bool no_delay; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC49E18 Offset: 0xC49E18 VA: 0xC49E18
	[DebuggerBrowsableAttribute] // RVA: 0xC49E18 Offset: 0xC49E18 VA: 0xC49E18
	private TimeSpan <ConnectTimeout>k__BackingField; // 0x50

	// Properties
	protected bool Active { get; set; }
	public Socket Client { get; set; }
	public int Available { get; }
	public bool Connected { get; }
	public bool ExclusiveAddressUse { get; set; }
	public LingerOption LingerState { get; set; }
	public bool NoDelay { get; set; }
	public int ReceiveBufferSize { get; set; }
	public int ReceiveTimeout { get; set; }
	public int SendBufferSize { get; set; }
	public int SendTimeout { get; set; }
	public TimeSpan ConnectTimeout { get; set; }

	// Methods

	// RVA: 0x1CA9AA4 Offset: 0x1CA9AA4 VA: 0x1CA9AA4
	public void .ctor() { }

	// RVA: 0x1CB935C Offset: 0x1CB935C VA: 0x1CB935C
	public void .ctor(AddressFamily family) { }

	// RVA: 0x1CB94E8 Offset: 0x1CB94E8 VA: 0x1CB94E8
	public void .ctor(IPEndPoint localEP) { }

	// RVA: 0x1CB95B8 Offset: 0x1CB95B8 VA: 0x1CB95B8
	public void .ctor(string hostname, int port) { }

	// RVA: 0x1CB92CC Offset: 0x1CB92CC VA: 0x1CB92CC
	private void Init(AddressFamily family) { }

	// RVA: 0x1CB9650 Offset: 0x1CB9650 VA: 0x1CB9650
	protected bool get_Active() { }

	// RVA: 0x1CB9658 Offset: 0x1CB9658 VA: 0x1CB9658
	protected void set_Active(bool value) { }

	// RVA: 0x1CB9664 Offset: 0x1CB9664 VA: 0x1CB9664
	public Socket get_Client() { }

	// RVA: 0x1CB966C Offset: 0x1CB966C VA: 0x1CB966C
	public void set_Client(Socket value) { }

	// RVA: 0x1CB9678 Offset: 0x1CB9678 VA: 0x1CB9678
	public int get_Available() { }

	// RVA: 0x1CA9BA4 Offset: 0x1CA9BA4 VA: 0x1CA9BA4
	public bool get_Connected() { }

	// RVA: 0x1CA6CD8 Offset: 0x1CA6CD8 VA: 0x1CA6CD8
	public bool IsConnected() { }

	// RVA: 0x1CB96A8 Offset: 0x1CB96A8 VA: 0x1CB96A8
	public bool get_ExclusiveAddressUse() { }

	// RVA: 0x1CB96D8 Offset: 0x1CB96D8 VA: 0x1CB96D8
	public void set_ExclusiveAddressUse(bool value) { }

	// RVA: 0x1CB9710 Offset: 0x1CB9710 VA: 0x1CB9710
	internal void SetTcpClient(Socket s) { }

	// RVA: 0x1CB971C Offset: 0x1CB971C VA: 0x1CB971C
	public LingerOption get_LingerState() { }

	// RVA: 0x1CB9818 Offset: 0x1CB9818 VA: 0x1CB9818
	public void set_LingerState(LingerOption value) { }

	// RVA: 0x1CB98A4 Offset: 0x1CB98A4 VA: 0x1CB98A4
	public bool get_NoDelay() { }

	// RVA: 0x1CB992C Offset: 0x1CB992C VA: 0x1CB992C
	public void set_NoDelay(bool value) { }

	// RVA: 0x1CB99C0 Offset: 0x1CB99C0 VA: 0x1CB99C0
	public int get_ReceiveBufferSize() { }

	// RVA: 0x1CB9A48 Offset: 0x1CB9A48 VA: 0x1CB9A48
	public void set_ReceiveBufferSize(int value) { }

	// RVA: 0x1CB9AD4 Offset: 0x1CB9AD4 VA: 0x1CB9AD4
	public int get_ReceiveTimeout() { }

	// RVA: 0x1CB9B5C Offset: 0x1CB9B5C VA: 0x1CB9B5C
	public void set_ReceiveTimeout(int value) { }

	// RVA: 0x1CB9BE4 Offset: 0x1CB9BE4 VA: 0x1CB9BE4
	public int get_SendBufferSize() { }

	// RVA: 0x1CB9C6C Offset: 0x1CB9C6C VA: 0x1CB9C6C
	public void set_SendBufferSize(int value) { }

	// RVA: 0x1CB9CF8 Offset: 0x1CB9CF8 VA: 0x1CB9CF8
	public int get_SendTimeout() { }

	// RVA: 0x1CB9D80 Offset: 0x1CB9D80 VA: 0x1CB9D80
	public void set_SendTimeout(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC71B4 Offset: 0xCC71B4 VA: 0xCC71B4
	// RVA: 0x1CB9E0C Offset: 0x1CB9E0C VA: 0x1CB9E0C
	public TimeSpan get_ConnectTimeout() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC71C4 Offset: 0xCC71C4 VA: 0xCC71C4
	// RVA: 0x1CA9BDC Offset: 0x1CA9BDC VA: 0x1CA9BDC
	public void set_ConnectTimeout(TimeSpan value) { }

	// RVA: 0x1CAAA10 Offset: 0x1CAAA10 VA: 0x1CAAA10
	public void Close() { }

	// RVA: 0x1CB9E14 Offset: 0x1CB9E14 VA: 0x1CB9E14
	public void Connect(IPEndPoint remoteEP) { }

	// RVA: 0x1CBA188 Offset: 0x1CBA188 VA: 0x1CBA188
	public void Connect(IPAddress address, int port) { }

	// RVA: 0x1CBA204 Offset: 0x1CBA204 VA: 0x1CBA204
	private void SetOptions() { }

	// RVA: 0x1CA9BE4 Offset: 0x1CA9BE4 VA: 0x1CA9BE4
	public void Connect(string hostname, int port) { }

	// RVA: 0x1CBA2B0 Offset: 0x1CBA2B0 VA: 0x1CBA2B0
