	public static bool get_IsThreaded() { }

	[CompilerGeneratedAttribute] // RVA: 0xD34768 Offset: 0xD34768 VA: 0xD34768
	// RVA: 0x2243D90 Offset: 0x2243D90 VA: 0x2243D90
	public static void set_IsThreaded(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD34778 Offset: 0xD34778 VA: 0xD34778
	// RVA: 0x2243E00 Offset: 0x2243E00 VA: 0x2243E00
	public static bool get_IsThreadRunning() { }

	[CompilerGeneratedAttribute] // RVA: 0xD34788 Offset: 0xD34788 VA: 0xD34788
	// RVA: 0x2243E68 Offset: 0x2243E68 VA: 0x2243E68
	private static void set_IsThreadRunning(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD34798 Offset: 0xD34798 VA: 0xD34798
	// RVA: 0x2243ED8 Offset: 0x2243ED8 VA: 0x2243ED8
	public static int get_ThreadFrequencyInMS() { }

	[CompilerGeneratedAttribute] // RVA: 0xD347A8 Offset: 0xD347A8 VA: 0xD347A8
	// RVA: 0x2243B08 Offset: 0x2243B08 VA: 0x2243B08
	public static void set_ThreadFrequencyInMS(int value) { }

	// RVA: 0x2238A24 Offset: 0x2238A24 VA: 0x2238A24
	public static void CheckInstance() { }

	// RVA: 0x2243F40 Offset: 0x2243F40 VA: 0x2243F40
	private void Setup() { }

	// RVA: 0x2244094 Offset: 0x2244094 VA: 0x2244094
	private void ThreadFunc(object obj) { }

	// RVA: 0x224435C Offset: 0x224435C VA: 0x224435C
	private void Update() { }

	// RVA: 0x2244444 Offset: 0x2244444 VA: 0x2244444
	private void OnDisable() { }

	// RVA: 0x2244448 Offset: 0x2244448 VA: 0x2244448
	private void OnApplicationQuit() { }
}

// Namespace: BestHTTP.Logger
public class DefaultLogger : ILogger // TypeDefIndex: 4381
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xCB5CC4 Offset: 0xCB5CC4 VA: 0xCB5CC4
	[DebuggerBrowsableAttribute] // RVA: 0xCB5CC4 Offset: 0xCB5CC4 VA: 0xCB5CC4
	private Loglevels <Level>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCB5D00 Offset: 0xCB5D00 VA: 0xCB5D00
	[DebuggerBrowsableAttribute] // RVA: 0xCB5D00 Offset: 0xCB5D00 VA: 0xCB5D00
	private string <FormatVerbose>k__BackingField; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCB5D3C Offset: 0xCB5D3C VA: 0xCB5D3C
	[DebuggerBrowsableAttribute] // RVA: 0xCB5D3C Offset: 0xCB5D3C VA: 0xCB5D3C
	private string <FormatInfo>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCB5D78 Offset: 0xCB5D78 VA: 0xCB5D78
	[DebuggerBrowsableAttribute] // RVA: 0xCB5D78 Offset: 0xCB5D78 VA: 0xCB5D78
	private string <FormatWarn>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCB5DB4 Offset: 0xCB5DB4 VA: 0xCB5DB4
	[DebuggerBrowsableAttribute] // RVA: 0xCB5DB4 Offset: 0xCB5DB4 VA: 0xCB5DB4
	private string <FormatErr>k__BackingField; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0xCB5DF0 Offset: 0xCB5DF0 VA: 0xCB5DF0
	[DebuggerBrowsableAttribute] // RVA: 0xCB5DF0 Offset: 0xCB5DF0 VA: 0xCB5DF0
	private string <FormatEx>k__BackingField; // 0x38

	// Properties
	public Loglevels Level { get; set; }
	public string FormatVerbose { get; set; }
	public string FormatInfo { get; set; }
	public string FormatWarn { get; set; }
	public string FormatErr { get; set; }
	public string FormatEx { get; set; }

	// Methods

	// RVA: 0x2237ED8 Offset: 0x2237ED8 VA: 0x2237ED8
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD347B8 Offset: 0xD347B8 VA: 0xD347B8
	// RVA: 0x22447EC Offset: 0x22447EC VA: 0x22447EC Slot: 4
	public Loglevels get_Level() { }

	[CompilerGeneratedAttribute] // RVA: 0xD347C8 Offset: 0xD347C8 VA: 0xD347C8
	// RVA: 0x22447E4 Offset: 0x22447E4 VA: 0x22447E4 Slot: 5
	public void set_Level(Loglevels value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD347D8 Offset: 0xD347D8 VA: 0xD347D8
	// RVA: 0x22447F4 Offset: 0x22447F4 VA: 0x22447F4 Slot: 6
	public string get_FormatVerbose() { }

	[CompilerGeneratedAttribute] // RVA: 0xD347E8 Offset: 0xD347E8 VA: 0xD347E8
	// RVA: 0x22447BC Offset: 0x22447BC VA: 0x22447BC Slot: 7
	public void set_FormatVerbose(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD347F8 Offset: 0xD347F8 VA: 0xD347F8
	// RVA: 0x22447FC Offset: 0x22447FC VA: 0x22447FC Slot: 8
	public string get_FormatInfo() { }

	[CompilerGeneratedAttribute] // RVA: 0xD34808 Offset: 0xD34808 VA: 0xD34808
	// RVA: 0x22447C4 Offset: 0x22447C4 VA: 0x22447C4 Slot: 9
	public void set_FormatInfo(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD34818 Offset: 0xD34818 VA: 0xD34818
	// RVA: 0x2244804 Offset: 0x2244804 VA: 0x2244804 Slot: 10
	public string get_FormatWarn() { }

	[CompilerGeneratedAttribute] // RVA: 0xD34828 Offset: 0xD34828 VA: 0xD34828
	// RVA: 0x22447CC Offset: 0x22447CC VA: 0x22447CC Slot: 11
	public void set_FormatWarn(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD34838 Offset: 0xD34838 VA: 0xD34838
	// RVA: 0x224480C Offset: 0x224480C VA: 0x224480C Slot: 12
	public string get_FormatErr() { }

	[CompilerGeneratedAttribute] // RVA: 0xD34848 Offset: 0xD34848 VA: 0xD34848
	// RVA: 0x22447D4 Offset: 0x22447D4 VA: 0x22447D4 Slot: 13
	public void set_FormatErr(string value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD34858 Offset: 0xD34858 VA: 0xD34858
	// RVA: 0x2244814 Offset: 0x2244814 VA: 0x2244814 Slot: 14
	public string get_FormatEx() { }

	[CompilerGeneratedAttribute] // RVA: 0xD34868 Offset: 0xD34868 VA: 0xD34868
	// RVA: 0x22447DC Offset: 0x22447DC VA: 0x22447DC Slot: 15
	public void set_FormatEx(string value) { }

	// RVA: 0x224481C Offset: 0x224481C VA: 0x224481C Slot: 16
	public void Verbose(string division, string verb) { }

	// RVA: 0x2244958 Offset: 0x2244958 VA: 0x2244958 Slot: 17
	public void Information(string division, string info) { }

	// RVA: 0x2244A98 Offset: 0x2244A98 VA: 0x2244A98 Slot: 18
	public void Warning(string division, string warn) { }

	// RVA: 0x2244BD8 Offset: 0x2244BD8 VA: 0x2244BD8 Slot: 19
	public void Error(string division, string err) { }

	// RVA: 0x2244D18 Offset: 0x2244D18 VA: 0x2244D18 Slot: 20
	public void Exception(string division, string msg, Exception ex) { }
}

// Namespace: BestHTTP.Logger
public enum Loglevels // TypeDefIndex: 4382
{
	// Fields
	public byte value__; // 0x0
	public const Loglevels All = 0;
	public const Loglevels Information = 1;
	public const Loglevels Warning = 2;
	public const Loglevels Error = 3;
	public const Loglevels Exception = 4;
	public const Loglevels None = 5;
}

// Namespace: BestHTTP.Logger
public interface ILogger // TypeDefIndex: 4383
{
	// Properties
	public abstract Loglevels Level { get; set; }
	public abstract string FormatVerbose { get; set; }
	public abstract string FormatInfo { get; set; }
	public abstract string FormatWarn { get; set; }
	public abstract string FormatErr { get; set; }
	public abstract string FormatEx { get; set; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract Loglevels get_Level();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void set_Level(Loglevels value);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract string get_FormatVerbose();

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void set_FormatVerbose(string value);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract string get_FormatInfo();

	// RVA: -1 Offset: -1 Slot: 5
	public abstract void set_FormatInfo(string value);

	// RVA: -1 Offset: -1 Slot: 6
	public abstract string get_FormatWarn();

	// RVA: -1 Offset: -1 Slot: 7
	public abstract void set_FormatWarn(string value);

	// RVA: -1 Offset: -1 Slot: 8
	public abstract string get_FormatErr();

	// RVA: -1 Offset: -1 Slot: 9
	public abstract void set_FormatErr(string value);

	// RVA: -1 Offset: -1 Slot: 10
	public abstract string get_FormatEx();

	// RVA: -1 Offset: -1 Slot: 11
	public abstract void set_FormatEx(string value);

	// RVA: -1 Offset: -1 Slot: 12
	public abstract void Verbose(string division, string verb);

	// RVA: -1 Offset: -1 Slot: 13
	public abstract void Information(string division, string info);

	// RVA: -1 Offset: -1 Slot: 14
	public abstract void Warning(string division, string warn);

	// RVA: -1 Offset: -1 Slot: 15
	public abstract void Error(string division, string err);

	// RVA: -1 Offset: -1 Slot: 16
	public abstract void Exception(string division, string msg, Exception ex);
}

// Namespace: PlatformSupport.Collections.ObjectModel
[DefaultMemberAttribute] // RVA: 0xC90D10 Offset: 0xC90D10 VA: 0xC90D10
public class ObservableDictionary<TKey, TValue> : IDictionary<TKey, TValue>, INotifyCollectionChanged, INotifyPropertyChanged, IEnumerable, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>> // TypeDefIndex: 4384
{
	// Fields
	private const string CountString = "Count";
	private const string IndexerName = "Item[]";
	private const string KeysName = "Keys";
	private const string ValuesName = "Values";
	private IDictionary<TKey, TValue> _Dictionary; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCB5E2C Offset: 0xCB5E2C VA: 0xCB5E2C
	[DebuggerBrowsableAttribute] // RVA: 0xCB5E2C Offset: 0xCB5E2C VA: 0xCB5E2C
	private NotifyCollectionChangedEventHandler CollectionChanged; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCB5E68 Offset: 0xCB5E68 VA: 0xCB5E68
	[DebuggerBrowsableAttribute] // RVA: 0xCB5E68 Offset: 0xCB5E68 VA: 0xCB5E68
	private PropertyChangedEventHandler PropertyChanged; // 0x0

	// Properties
	protected IDictionary<TKey, TValue> Dictionary { get; }
	public ICollection<TKey> Keys { get; }
	public ICollection<TValue> Values { get; }
	public TValue Item { get; set; }
	public int Count { get; }
	public bool IsReadOnly { get; }

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2531290 Offset: 0x2531290 VA: 0x2531290
	|-ObservableDictionary<object, object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(IDictionary<TKey, TValue> dictionary) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x253130C Offset: 0x253130C VA: 0x253130C
	|-ObservableDictionary<object, object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(IEqualityComparer<TKey> comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2531390 Offset: 0x2531390 VA: 0x2531390
	|-ObservableDictionary<object, object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(int capacity) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2531414 Offset: 0x2531414 VA: 0x2531414
	|-ObservableDictionary<object, object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(IDictionary<TKey, TValue> dictionary, IEqualityComparer<TKey> comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2531498 Offset: 0x2531498 VA: 0x2531498
	|-ObservableDictionary<object, object>..ctor
	*/

	// RVA: -1 Offset: -1
	public void .ctor(int capacity, IEqualityComparer<TKey> comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x253152C Offset: 0x253152C VA: 0x253152C
	|-ObservableDictionary<object, object>..ctor
	*/

	// RVA: -1 Offset: -1
	protected IDictionary<TKey, TValue> get_Dictionary() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25315C0 Offset: 0x25315C0 VA: 0x25315C0
	|-ObservableDictionary<object, object>.get_Dictionary
	*/

	// RVA: -1 Offset: -1 Slot: 24
	public void Add(TKey key, TValue value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25315C8 Offset: 0x25315C8 VA: 0x25315C8
	|-ObservableDictionary<object, object>.Add
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public bool ContainsKey(TKey key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2531620 Offset: 0x2531620 VA: 0x2531620
	|-ObservableDictionary<object, object>.ContainsKey
	*/

	// RVA: -1 Offset: -1 Slot: 9
	public ICollection<TKey> get_Keys() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25316F4 Offset: 0x25316F4 VA: 0x25316F4
	|-ObservableDictionary<object, object>.get_Keys
	*/

	// RVA: -1 Offset: -1 Slot: 5
	public bool Remove(TKey key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25317BC Offset: 0x25317BC VA: 0x25317BC
	|-ObservableDictionary<object, object>.Remove
	*/

	// RVA: -1 Offset: -1 Slot: 6
	public bool TryGetValue(TKey key, out TValue value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25319FC Offset: 0x25319FC VA: 0x25319FC
	|-ObservableDictionary<object, object>.TryGetValue
	*/

	// RVA: -1 Offset: -1 Slot: 10
	public ICollection<TValue> get_Values() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2531ADC Offset: 0x2531ADC VA: 0x2531ADC
	|-ObservableDictionary<object, object>.get_Values
	*/

	// RVA: -1 Offset: -1 Slot: 7
	public TValue get_Item(TKey key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2531BA4 Offset: 0x2531BA4 VA: 0x2531BA4
	|-ObservableDictionary<object, object>.get_Item
	*/

	// RVA: -1 Offset: -1 Slot: 8
	public void set_Item(TKey key, TValue value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2531C7C Offset: 0x2531C7C VA: 0x2531C7C
	|-ObservableDictionary<object, object>.set_Item
	*/

	// RVA: -1 Offset: -1 Slot: 14
	public void Add(KeyValuePair<TKey, TValue> item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2531CD4 Offset: 0x2531CD4 VA: 0x2531CD4
	|-ObservableDictionary<object, object>.Add
	*/

	// RVA: -1 Offset: -1 Slot: 15
	public void Clear() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2531D68 Offset: 0x2531D68 VA: 0x2531D68
	|-ObservableDictionary<object, object>.Clear
	*/

	// RVA: -1 Offset: -1 Slot: 16
	public bool Contains(KeyValuePair<TKey, TValue> item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2531F20 Offset: 0x2531F20 VA: 0x2531F20
	|-ObservableDictionary<object, object>.Contains
	*/

	// RVA: -1 Offset: -1 Slot: 17
	public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2532000 Offset: 0x2532000 VA: 0x2532000
	|-ObservableDictionary<object, object>.CopyTo
	*/

	// RVA: -1 Offset: -1 Slot: 12
	public int get_Count() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25320E0 Offset: 0x25320E0 VA: 0x25320E0
	|-ObservableDictionary<object, object>.get_Count
	*/

	// RVA: -1 Offset: -1 Slot: 13
	public bool get_IsReadOnly() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25321A4 Offset: 0x25321A4 VA: 0x25321A4
	|-ObservableDictionary<object, object>.get_IsReadOnly
	*/

	// RVA: -1 Offset: -1 Slot: 18
	public bool Remove(KeyValuePair<TKey, TValue> item) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x253226C Offset: 0x253226C VA: 0x253226C
	|-ObservableDictionary<object, object>.Remove
	*/

	// RVA: -1 Offset: -1 Slot: 19
	public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25322E4 Offset: 0x25322E4 VA: 0x25322E4
	|-ObservableDictionary<object, object>.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 11
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25323A8 Offset: 0x25323A8 VA: 0x25323A8
	|-ObservableDictionary<object, object>.System.Collections.IEnumerable.GetEnumerator
	*/

	// RVA: -1 Offset: -1 Slot: 20
	public void add_CollectionChanged(NotifyCollectionChangedEventHandler value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2532488 Offset: 0x2532488 VA: 0x2532488
	|-ObservableDictionary<object, object>.add_CollectionChanged
	*/

	// RVA: -1 Offset: -1 Slot: 21
	public void remove_CollectionChanged(NotifyCollectionChangedEventHandler value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2532588 Offset: 0x2532588 VA: 0x2532588
	|-ObservableDictionary<object, object>.remove_CollectionChanged
	*/

	// RVA: -1 Offset: -1 Slot: 22
	public void add_PropertyChanged(PropertyChangedEventHandler value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2532688 Offset: 0x2532688 VA: 0x2532688
	|-ObservableDictionary<object, object>.add_PropertyChanged
	*/

	// RVA: -1 Offset: -1 Slot: 23
	public void remove_PropertyChanged(PropertyChangedEventHandler value) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2532788 Offset: 0x2532788 VA: 0x2532788
	|-ObservableDictionary<object, object>.remove_PropertyChanged
	*/

	// RVA: -1 Offset: -1
	public void AddRange(IDictionary<TKey, TValue> items) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2532888 Offset: 0x2532888 VA: 0x2532888
	|-ObservableDictionary<object, object>.AddRange
	*/

	// RVA: -1 Offset: -1
	private void Insert(TKey key, TValue value, bool add) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2532F34 Offset: 0x2532F34 VA: 0x2532F34
	|-ObservableDictionary<object, object>.Insert
	*/

	// RVA: -1 Offset: -1
	private void OnPropertyChanged() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2533320 Offset: 0x2533320 VA: 0x2533320
	|-ObservableDictionary<object, object>.OnPropertyChanged
	*/

	// RVA: -1 Offset: -1 Slot: 25
	protected virtual void OnPropertyChanged(string propertyName) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x253342C Offset: 0x253342C VA: 0x253342C
	|-ObservableDictionary<object, object>.OnPropertyChanged
	*/

	// RVA: -1 Offset: -1
	private void OnCollectionChanged() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25334C0 Offset: 0x25334C0 VA: 0x25334C0
	|-ObservableDictionary<object, object>.OnCollectionChanged
	*/

	// RVA: -1 Offset: -1
	private void OnCollectionChanged(NotifyCollectionChangedAction action, KeyValuePair<TKey, TValue> changedItem) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2533578 Offset: 0x2533578 VA: 0x2533578
	|-ObservableDictionary<object, object>.OnCollectionChanged
	*/

	// RVA: -1 Offset: -1
	private void OnCollectionChanged(NotifyCollectionChangedAction action, KeyValuePair<TKey, TValue> newItem, KeyValuePair<TKey, TValue> oldItem) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2533678 Offset: 0x2533678 VA: 0x2533678
	|-ObservableDictionary<object, object>.OnCollectionChanged
	*/

	// RVA: -1 Offset: -1
	private void OnCollectionChanged(NotifyCollectionChangedAction action, IList newItems) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x25337BC Offset: 0x25337BC VA: 0x25337BC
	|-ObservableDictionary<object, object>.OnCollectionChanged
	*/

	[CompilerGeneratedAttribute] // RVA: 0xD34878 Offset: 0xD34878 VA: 0xD34878
	// RVA: -1 Offset: -1
	private bool <AddRange>m__0(TKey k) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x253388C Offset: 0x253388C VA: 0x253388C
	|-ObservableDictionary<object, object>.<AddRange>m__0
	*/
}

// Namespace: PlatformSupport.Collections.Specialized
public sealed class NotifyCollectionChangedEventHandler : MulticastDelegate // TypeDefIndex: 4385
{
	// Methods

	// RVA: 0x1BD3A24 Offset: 0x1BD3A24 VA: 0x1BD3A24
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1BD3A34 Offset: 0x1BD3A34 VA: 0x1BD3A34 Slot: 11
	public virtual void Invoke(object sender, NotifyCollectionChangedEventArgs e) { }

	// RVA: 0x1BD3DF4 Offset: 0x1BD3DF4 VA: 0x1BD3DF4 Slot: 12
	public virtual IAsyncResult BeginInvoke(object sender, NotifyCollectionChangedEventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0x1BD3E24 Offset: 0x1BD3E24 VA: 0x1BD3E24 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: PlatformSupport.Collections.Specialized
public interface INotifyCollectionChanged // TypeDefIndex: 4386
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void add_CollectionChanged(NotifyCollectionChangedEventHandler value);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void remove_CollectionChanged(NotifyCollectionChangedEventHandler value);
}

// Namespace: PlatformSupport.Collections.Specialized
public enum NotifyCollectionChangedAction // TypeDefIndex: 4387
{
	// Fields
	public int value__; // 0x0
	public const NotifyCollectionChangedAction Add = 0;
	public const NotifyCollectionChangedAction Remove = 1;
	public const NotifyCollectionChangedAction Replace = 2;
	public const NotifyCollectionChangedAction Move = 3;
	public const NotifyCollectionChangedAction Reset = 4;
}

// Namespace: PlatformSupport.Collections.Specialized
public class NotifyCollectionChangedEventArgs : EventArgs // TypeDefIndex: 4388
{
	// Fields
	private NotifyCollectionChangedAction _action; // 0x10
	private IList _newItems; // 0x18
	private IList _oldItems; // 0x20
	private int _newStartingIndex; // 0x28
	private int _oldStartingIndex; // 0x2C

	// Properties
	public NotifyCollectionChangedAction Action { get; }
	public IList NewItems { get; }
	public IList OldItems { get; }
	public int NewStartingIndex { get; }
	public int OldStartingIndex { get; }

	// Methods

	// RVA: 0x1BD26F4 Offset: 0x1BD26F4 VA: 0x1BD26F4
	public void .ctor(NotifyCollectionChangedAction action) { }

	// RVA: 0x1BD288C Offset: 0x1BD288C VA: 0x1BD288C
	public void .ctor(NotifyCollectionChangedAction action, object changedItem) { }

	// RVA: 0x1BD2A3C Offset: 0x1BD2A3C VA: 0x1BD2A3C
	public void .ctor(NotifyCollectionChangedAction action, object changedItem, int index) { }

	// RVA: 0x1BD2BEC Offset: 0x1BD2BEC VA: 0x1BD2BEC
	public void .ctor(NotifyCollectionChangedAction action, IList changedItems) { }

	// RVA: 0x1BD2D64 Offset: 0x1BD2D64 VA: 0x1BD2D64
	public void .ctor(NotifyCollectionChangedAction action, IList changedItems, int startingIndex) { }

	// RVA: 0x1BD2F18 Offset: 0x1BD2F18 VA: 0x1BD2F18
	public void .ctor(NotifyCollectionChangedAction action, object newItem, object oldItem) { }

	// RVA: 0x1BD3120 Offset: 0x1BD3120 VA: 0x1BD3120
	public void .ctor(NotifyCollectionChangedAction action, object newItem, object oldItem, int index) { }

	// RVA: 0x1BD32E4 Offset: 0x1BD32E4 VA: 0x1BD32E4
	public void .ctor(NotifyCollectionChangedAction action, IList newItems, IList oldItems) { }

	// RVA: 0x1BD3434 Offset: 0x1BD3434 VA: 0x1BD3434
	public void .ctor(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int startingIndex) { }

	// RVA: 0x1BD3588 Offset: 0x1BD3588 VA: 0x1BD3588
	public void .ctor(NotifyCollectionChangedAction action, object changedItem, int index, int oldIndex) { }

	// RVA: 0x1BD3710 Offset: 0x1BD3710 VA: 0x1BD3710
	public void .ctor(NotifyCollectionChangedAction action, IList changedItems, int index, int oldIndex) { }

	// RVA: 0x1BD3834 Offset: 0x1BD3834 VA: 0x1BD3834
	internal void .ctor(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int newIndex, int oldIndex) { }

	// RVA: 0x1BD2A24 Offset: 0x1BD2A24 VA: 0x1BD2A24
	private void InitializeAddOrRemove(NotifyCollectionChangedAction action, IList changedItems, int startingIndex) { }

	// RVA: 0x1BD27F8 Offset: 0x1BD27F8 VA: 0x1BD27F8
	private void InitializeAdd(NotifyCollectionChangedAction action, IList newItems, int newStartingIndex) { }

	// RVA: 0x1BD3968 Offset: 0x1BD3968 VA: 0x1BD3968
	private void InitializeRemove(NotifyCollectionChangedAction action, IList oldItems, int oldStartingIndex) { }

	// RVA: 0x1BD30D8 Offset: 0x1BD30D8 VA: 0x1BD30D8
	private void InitializeMoveOrReplace(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int startingIndex, int oldStartingIndex) { }

	// RVA: 0x1BD39FC Offset: 0x1BD39FC VA: 0x1BD39FC
	public NotifyCollectionChangedAction get_Action() { }

	// RVA: 0x1BD3A04 Offset: 0x1BD3A04 VA: 0x1BD3A04
	public IList get_NewItems() { }

	// RVA: 0x1BD3A0C Offset: 0x1BD3A0C VA: 0x1BD3A0C
	public IList get_OldItems() { }

	// RVA: 0x1BD3A14 Offset: 0x1BD3A14 VA: 0x1BD3A14
	public int get_NewStartingIndex() { }

	// RVA: 0x1BD3A1C Offset: 0x1BD3A1C VA: 0x1BD3A1C
	public int get_OldStartingIndex() { }
}

// Namespace: PlatformSupport.Collections.Specialized
[DefaultMemberAttribute] // RVA: 0xC90D48 Offset: 0xC90D48 VA: 0xC90D48
internal sealed class ReadOnlyList : IList, IEnumerable, ICollection // TypeDefIndex: 4389
{
	// Fields
	private readonly IList _list; // 0x10

	// Properties
	public int Count { get; }
	public bool IsReadOnly { get; }
	public bool IsFixedSize { get; }
	public bool IsSynchronized { get; }
	public object Item { get; set; }
	public object SyncRoot { get; }

	// Methods

	// RVA: 0x1BD393C Offset: 0x1BD393C VA: 0x1BD393C
	internal void .ctor(IList list) { }

	// RVA: 0x1BD3E30 Offset: 0x1BD3E30 VA: 0x1BD3E30 Slot: 16
	public int get_Count() { }

	// RVA: 0x1BD3EE4 Offset: 0x1BD3EE4 VA: 0x1BD3EE4 Slot: 5
	public bool get_IsReadOnly() { }

	// RVA: 0x1BD3EEC Offset: 0x1BD3EEC VA: 0x1BD3EEC Slot: 4
	public bool get_IsFixedSize() { }

	// RVA: 0x1BD3EF4 Offset: 0x1BD3EF4 VA: 0x1BD3EF4 Slot: 17
	public bool get_IsSynchronized() { }

	// RVA: 0x1BD3FAC Offset: 0x1BD3FAC VA: 0x1BD3FAC Slot: 6
	public object get_Item(int index) { }

	// RVA: 0x1BD4074 Offset: 0x1BD4074 VA: 0x1BD4074 Slot: 7
	public void set_Item(int index, object value) { }

	// RVA: 0x1BD40DC Offset: 0x1BD40DC VA: 0x1BD40DC Slot: 18
	public object get_SyncRoot() { }

	// RVA: 0x1BD4194 Offset: 0x1BD4194 VA: 0x1BD4194 Slot: 8
	public int Add(object value) { }

	// RVA: 0x1BD41FC Offset: 0x1BD41FC VA: 0x1BD41FC Slot: 9
	public void Clear() { }

	// RVA: 0x1BD4264 Offset: 0x1BD4264 VA: 0x1BD4264 Slot: 10
	public bool Contains(object value) { }

	// RVA: 0x1BD432C Offset: 0x1BD432C VA: 0x1BD432C Slot: 19
	public void CopyTo(Array array, int index) { }

	// RVA: 0x1BD43FC Offset: 0x1BD43FC VA: 0x1BD43FC Slot: 15
	public IEnumerator GetEnumerator() { }

	// RVA: 0x1BD44B0 Offset: 0x1BD44B0 VA: 0x1BD44B0 Slot: 11
	public int IndexOf(object value) { }

	// RVA: 0x1BD4578 Offset: 0x1BD4578 VA: 0x1BD4578 Slot: 12
	public void Insert(int index, object value) { }

	// RVA: 0x1BD45E0 Offset: 0x1BD45E0 VA: 0x1BD45E0 Slot: 13
	public void Remove(object value) { }

	// RVA: 0x1BD4648 Offset: 0x1BD4648 VA: 0x1BD4648 Slot: 14
	public void RemoveAt(int index) { }
}

// Namespace: BestHTTP.PlatformSupport.TcpClient.General
public class TcpClient : IDisposable // TypeDefIndex: 4390
{
	// Fields
	private NetworkStream stream; // 0x10
	private bool active; // 0x18
	private Socket client; // 0x20
	private bool disposed; // 0x28
	private TcpClient.Properties values; // 0x2C
	private int recv_timeout; // 0x30
	private int send_timeout; // 0x34
	private int recv_buffer_size; // 0x38
	private int send_buffer_size; // 0x3C
	private LingerOption linger_state; // 0x40
	private bool no_delay; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xCB5EA4 Offset: 0xCB5EA4 VA: 0xCB5EA4
	[DebuggerBrowsableAttribute] // RVA: 0xCB5EA4 Offset: 0xCB5EA4 VA: 0xCB5EA4
	private TimeSpan <ConnectTimeout>k__BackingField; // 0x50

	// Properties
	protected bool Active { get; set; }
	public Socket Client { get; set; }
	public int Available { get; }
	public bool Connected { get; }
	public bool ExclusiveAddressUse { get; set; }
	public LingerOption LingerState { get; set; }
	public bool NoDelay { get; set; }
	public int ReceiveBufferSize { get; set; }
	public int ReceiveTimeout { get; set; }
	public int SendBufferSize { get; set; }
	public int SendTimeout { get; set; }
	public TimeSpan ConnectTimeout { get; set; }

	// Methods

	// RVA: 0x22363D0 Offset: 0x22363D0 VA: 0x22363D0
	public void .ctor() { }

	// RVA: 0x2245C88 Offset: 0x2245C88 VA: 0x2245C88
	public void .ctor(AddressFamily family) { }

	// RVA: 0x2245E14 Offset: 0x2245E14 VA: 0x2245E14
	public void .ctor(IPEndPoint localEP) { }

	// RVA: 0x2245EE4 Offset: 0x2245EE4 VA: 0x2245EE4
	public void .ctor(string hostname, int port) { }

	// RVA: 0x2245BF8 Offset: 0x2245BF8 VA: 0x2245BF8
	private void Init(AddressFamily family) { }

	// RVA: 0x2245F7C Offset: 0x2245F7C VA: 0x2245F7C
	protected bool get_Active() { }

	// RVA: 0x2245F84 Offset: 0x2245F84 VA: 0x2245F84
	protected void set_Active(bool value) { }

	// RVA: 0x2245F90 Offset: 0x2245F90 VA: 0x2245F90
	public Socket get_Client() { }

	// RVA: 0x2245F98 Offset: 0x2245F98 VA: 0x2245F98
	public void set_Client(Socket value) { }

	// RVA: 0x2245FA4 Offset: 0x2245FA4 VA: 0x2245FA4
	public int get_Available() { }

	// RVA: 0x22364D0 Offset: 0x22364D0 VA: 0x22364D0
	public bool get_Connected() { }

	// RVA: 0x2233604 Offset: 0x2233604 VA: 0x2233604
	public bool IsConnected() { }

	// RVA: 0x2245FD4 Offset: 0x2245FD4 VA: 0x2245FD4
	public bool get_ExclusiveAddressUse() { }

	// RVA: 0x2246004 Offset: 0x2246004 VA: 0x2246004
	public void set_ExclusiveAddressUse(bool value) { }

	// RVA: 0x224603C Offset: 0x224603C VA: 0x224603C
	internal void SetTcpClient(Socket s) { }

	// RVA: 0x2246048 Offset: 0x2246048 VA: 0x2246048
	public LingerOption get_LingerState() { }

	// RVA: 0x2246144 Offset: 0x2246144 VA: 0x2246144
	public void set_LingerState(LingerOption value) { }

	// RVA: 0x22461D0 Offset: 0x22461D0 VA: 0x22461D0
	public bool get_NoDelay() { }

	// RVA: 0x2246258 Offset: 0x2246258 VA: 0x2246258
	public void set_NoDelay(bool value) { }

	// RVA: 0x22462EC Offset: 0x22462EC VA: 0x22462EC
	public int get_ReceiveBufferSize() { }

	// RVA: 0x2246374 Offset: 0x2246374 VA: 0x2246374
	public void set_ReceiveBufferSize(int value) { }

	// RVA: 0x2246400 Offset: 0x2246400 VA: 0x2246400
	public int get_ReceiveTimeout() { }

	// RVA: 0x2246488 Offset: 0x2246488 VA: 0x2246488
	public void set_ReceiveTimeout(int value) { }

	// RVA: 0x2246510 Offset: 0x2246510 VA: 0x2246510
	public int get_SendBufferSize() { }

	// RVA: 0x2246598 Offset: 0x2246598 VA: 0x2246598
	public void set_SendBufferSize(int value) { }

	// RVA: 0x2246624 Offset: 0x2246624 VA: 0x2246624
	public int get_SendTimeout() { }

	// RVA: 0x22466AC Offset: 0x22466AC VA: 0x22466AC
	public void set_SendTimeout(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD34888 Offset: 0xD34888 VA: 0xD34888
	// RVA: 0x2246738 Offset: 0x2246738 VA: 0x2246738
	public TimeSpan get_ConnectTimeout() { }

	[CompilerGeneratedAttribute] // RVA: 0xD34898 Offset: 0xD34898 VA: 0xD34898
	// RVA: 0x2236508 Offset: 0x2236508 VA: 0x2236508
	public void set_ConnectTimeout(TimeSpan value) { }

	// RVA: 0x223733C Offset: 0x223733C VA: 0x223733C
	public void Close() { }

	// RVA: 0x2246740 Offset: 0x2246740 VA: 0x2246740
	public void Connect(IPEndPoint remoteEP) { }

	// RVA: 0x2246AB4 Offset: 0x2246AB4 VA: 0x2246AB4
	public void Connect(IPAddress address, int port) { }

	// RVA: 0x2246B30 Offset: 0x2246B30 VA: 0x2246B30
	private void SetOptions() { }

	// RVA: 0x2236510 Offset: 0x2236510 VA: 0x2236510
	public void Connect(string hostname, int port) { }

	// RVA: 0x2246BDC Offset: 0x2246BDC VA: 0x2246BDC
	public void Connect(IPAddress[] ipAddresses, int port) { }

	// RVA: 0x2247054 Offset: 0x2247054 VA: 0x2247054
	public void EndConnect(IAsyncResult asyncResult) { }

	// RVA: 0x224708C Offset: 0x224708C VA: 0x224708C
	public IAsyncResult BeginConnect(IPAddress address, int port, AsyncCallback requestCallback, object state) { }

	// RVA: 0x22470EC Offset: 0x22470EC VA: 0x22470EC
	public IAsyncResult BeginConnect(IPAddress[] addresses, int port, AsyncCallback requestCallback, object state) { }

	// RVA: 0x224714C Offset: 0x224714C VA: 0x224714C
	public IAsyncResult BeginConnect(string host, int port, AsyncCallback requestCallback, object state) { }

	// RVA: 0x22471AC Offset: 0x22471AC VA: 0x22471AC Slot: 4
	private void System.IDisposable.Dispose() { }

	// RVA: 0x22471E0 Offset: 0x22471E0 VA: 0x22471E0 Slot: 5
	protected virtual void Dispose(bool disposing) { }

	// RVA: 0x2247244 Offset: 0x2247244 VA: 0x2247244 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x22366FC Offset: 0x22366FC VA: 0x22366FC
	public Stream GetStream() { }

	// RVA: 0x22469FC Offset: 0x22469FC VA: 0x22469FC
	private void CheckDisposed() { }
}

// Namespace: 
private enum TcpClient.Properties // TypeDefIndex: 4391
{
	// Fields
	public uint value__; // 0x0
	public const TcpClient.Properties LingerState = 1;
	public const TcpClient.Properties NoDelay = 2;
	public const TcpClient.Properties ReceiveBufferSize = 4;
	public const TcpClient.Properties ReceiveTimeout = 8;
	public const TcpClient.Properties SendBufferSize = 16;
	public const TcpClient.Properties SendTimeout = 32;
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCADA20 Offset: 0xCADA20 VA: 0xCADA20
private sealed class TcpClient.<Connect>c__AnonStorey0 // TypeDefIndex: 4392
{
	// Fields
	internal ManualResetEvent mre; // 0x10

	// Methods

	// RVA: 0x22469F4 Offset: 0x22469F4 VA: 0x22469F4
	public void .ctor() { }

	// RVA: 0x22472C4 Offset: 0x22472C4 VA: 0x22472C4
	internal void <>m__0(IAsyncResult res) { }
}

// Namespace: Org.BouncyCastle.Asn1.Anssi
public class AnssiNamedCurves // TypeDefIndex: 4393
{
	// Fields
	private static readonly IDictionary objIds; // 0x0
	private static readonly IDictionary curves; // 0x8
	private static readonly IDictionary names; // 0x10

	// Properties
	public static IEnumerable Names { get; }

	// Methods

	// RVA: 0x205F830 Offset: 0x205F830 VA: 0x205F830
	private static void .cctor() { }

	// RVA: 0x205FB80 Offset: 0x205FB80 VA: 0x205FB80
	public void .ctor() { }

	// RVA: 0x205FB88 Offset: 0x205FB88 VA: 0x205FB88
	private static ECCurve ConfigureCurve(ECCurve curve) { }

	// RVA: 0x205FB8C Offset: 0x205FB8C VA: 0x205FB8C
	private static BigInteger FromHex(string hex) { }

	// RVA: 0x205F93C Offset: 0x205F93C VA: 0x205F93C
	private static void DefineCurve(string name, DerObjectIdentifier oid, X9ECParametersHolder holder) { }

	// RVA: 0x205FC28 Offset: 0x205FC28 VA: 0x205FC28
	public static X9ECParameters GetByName(string name) { }

	// RVA: 0x205FE64 Offset: 0x205FE64 VA: 0x205FE64
	public static X9ECParameters GetByOid(DerObjectIdentifier oid) { }

	// RVA: 0x205FCC0 Offset: 0x205FCC0 VA: 0x205FCC0
	public static DerObjectIdentifier GetOid(string name) { }

	// RVA: 0x205FFE8 Offset: 0x205FFE8 VA: 0x205FFE8
	public static string GetName(DerObjectIdentifier oid) { }

	// RVA: 0x206013C Offset: 0x206013C VA: 0x206013C
	public static IEnumerable get_Names() { }
}

// Namespace: 
internal class AnssiNamedCurves.Frp256v1Holder : X9ECParametersHolder // TypeDefIndex: 4394
{
	// Fields
	internal static readonly X9ECParametersHolder Instance; // 0x0

	// Methods

	// RVA: 0x2060248 Offset: 0x2060248 VA: 0x2060248
	private void .ctor() { }

	// RVA: 0x2060250 Offset: 0x2060250 VA: 0x2060250 Slot: 4
	protected override X9ECParameters CreateParameters() { }

	// RVA: 0x206040C Offset: 0x206040C VA: 0x206040C
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1.Anssi
