
	// RVA: 0x13709CC Offset: 0x13709CC VA: 0x13709CC
	public bool getEventUpVal(out EventUpValInfo eventUpVallInfo, EventUpValSetupInfo setupInfo, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370A5C Offset: 0x1370A5C VA: 0x1370A5C
	public bool getEventUpVal(out EventUpValInfo eventUpVallInfo, out bool isServantEventUpVal, out bool isEquipEventUpVal, EventUpValSetupInfo setupInfo, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370B04 Offset: 0x1370B04 VA: 0x1370B04
	public bool getQuestRestriction(QuestRestrictionInfo questRestrictionInfo, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370BB0 Offset: 0x1370BB0 VA: 0x1370BB0
	public bool getUniqueSvtRestriction(QuestRestrictionInfo questRestrictionInfo, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370C38 Offset: 0x1370C38 VA: 0x1370C38
	public bool getUniqueSvtRestriction(QuestRestrictionInfo questRestrictionInfo, int index, PartyListViewItem partyItem, int num, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370CD8 Offset: 0x1370CD8 VA: 0x1370CD8
	public bool getTreasureDeviceInfo(out TreasureDvcInfo tdInfo, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370D60 Offset: 0x1370D60 VA: 0x1370D60
	public bool getTreasureDeviceInfo(out int tdLv, out int tdMaxLv, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370DF0 Offset: 0x1370DF0 VA: 0x1370DF0
	public int getTreasureDeviceLevelIcon(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370E68 Offset: 0x1370E68 VA: 0x1370E68
	public int getFrameType(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370E8C Offset: 0x1370E8C VA: 0x1370E8C
	public int getDispLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370EB0 Offset: 0x1370EB0 VA: 0x1370EB0
	public int getMaxDispLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370ED4 Offset: 0x1370ED4 VA: 0x1370ED4
	public int getCommandCardLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370EF8 Offset: 0x1370EF8 VA: 0x1370EF8
	public int getMaxCommandCardLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370F1C Offset: 0x1370F1C VA: 0x1370F1C
	public int getCardImageLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370F40 Offset: 0x1370F40 VA: 0x1370F40
	public int getMaxCardImageLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370F68 Offset: 0x1370F68 VA: 0x1370F68
	public int getIconImageLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370F8C Offset: 0x1370F8C VA: 0x1370F8C
	public int getMaxIconLimitCount(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370FB4 Offset: 0x1370FB4 VA: 0x1370FB4
	public int[] getCommandCodeIdList(int index, FollowerInfo.ReturnSupportServantType returnSupportServantType) { }

	// RVA: 0x1370FD8 Offset: 0x1370FD8 VA: 0x1370FD8
	public void SetEquipInfoForNpc(EquipTargetInfo equipTargetInfo) { }

	// RVA: 0x1371078 Offset: 0x1371078 VA: 0x1371078
	public void ChangeLimitCountBySpoilerProtection() { }

	// RVA: 0x13711B4 Offset: 0x13711B4 VA: 0x13711B4
	public void GetAppendSkillInfo(out SkillInfo[] skillInfoList, int index, FollowerInfo.ReturnSupportServantType returnSupportServantType, bool isNpc) { }
}

// Namespace: 
public enum FollowerInfo.ReturnSupportServantType // TypeDefIndex: 6630
{
	// Fields
	public int value__; // 0x0
	public const FollowerInfo.ReturnSupportServantType MainQuest = 0;
	public const FollowerInfo.ReturnSupportServantType EventQuest = 1;
}

// Namespace: 
public class GachaData // TypeDefIndex: 6631
{
	// Fields
	public GachaPickupSvt[] pickUpSvts; // 0x10
	public GachaSvts[] svts; // 0x18

	// Methods

	// RVA: 0x19309EC Offset: 0x19309EC VA: 0x19309EC
	public void .ctor() { }
}

// Namespace: 
public class GachaPickupSvt // TypeDefIndex: 6632
{
	// Fields
	public int svtId; // 0x10
	public int imageId; // 0x14

	// Methods

	// RVA: 0x193247C Offset: 0x193247C VA: 0x193247C
	public void .ctor() { }
}

// Namespace: 
public class GachaSvts // TypeDefIndex: 6633
{
	// Fields
	public int svtId; // 0x10
	public int imageId; // 0x14

	// Methods

	// RVA: 0x19332B4 Offset: 0x19332B4 VA: 0x19332B4
	public void .ctor() { }
}

// Namespace: GiftName
public abstract class GiftNameBase // TypeDefIndex: 6634
{
	// Fields
	protected string name; // 0x10
	protected string count; // 0x18

	// Methods

	// RVA: 0x1BA8410 Offset: 0x1BA8410 VA: 0x1BA8410
	protected void .ctor() { }

	// RVA: 0x1BA8A64 Offset: 0x1BA8A64 VA: 0x1BA8A64
	public string GetGiftName() { }

	// RVA: 0x1BA8A6C Offset: 0x1BA8A6C VA: 0x1BA8A6C
	public string GetGiftCountString() { }
}

// Namespace: GiftName
public class Item : GiftNameBase // TypeDefIndex: 6635
{
	// Methods

	// RVA: 0x1BA8BF8 Offset: 0x1BA8BF8 VA: 0x1BA8BF8
	public void .ctor(int objectId, int count) { }
}

// Namespace: GiftName
public class Servant : GiftNameBase // TypeDefIndex: 6636
{
	// Methods

	// RVA: 0x1BA8CE4 Offset: 0x1BA8CE4 VA: 0x1BA8CE4
	public void .ctor(int objectId, int count) { }
}

// Namespace: GiftName
public class FriendShip : GiftNameBase // TypeDefIndex: 6637
{
	// Methods

	// RVA: 0x1BA89AC Offset: 0x1BA89AC VA: 0x1BA89AC
	public void .ctor(int count) { }
}

// Namespace: GiftName
public class UserExp : GiftNameBase // TypeDefIndex: 6638
{
	// Methods

	// RVA: 0x1BA8DF8 Offset: 0x1BA8DF8 VA: 0x1BA8DF8
	public void .ctor(int count) { }
}

// Namespace: GiftName
public class Equip : GiftNameBase // TypeDefIndex: 6639
{
	// Methods

	// RVA: 0x1BA8878 Offset: 0x1BA8878 VA: 0x1BA8878
	public void .ctor(int objectId, int count) { }
}

// Namespace: GiftName
public class CommandCode : GiftNameBase // TypeDefIndex: 6640
{
	// Methods

	// RVA: 0x1BA82DC Offset: 0x1BA82DC VA: 0x1BA82DC
	public void .ctor(int objectId, int count) { }
}

// Namespace: GiftName
public class CostumeRelease : GiftNameBase // TypeDefIndex: 6641
{
	// Methods

	// RVA: 0x1BA8718 Offset: 0x1BA8718 VA: 0x1BA8718
	public void .ctor(int objectId, int count) { }
}

// Namespace: GiftName
public class Unknown : GiftNameBase // TypeDefIndex: 6642
{
	// Methods

	// RVA: 0x1BA8EB0 Offset: 0x1BA8EB0 VA: 0x1BA8EB0
	public void .ctor() { }
}

// Namespace: GiftName
public class GiftNameFactoryBySummonHistory // TypeDefIndex: 6643
{
	// Methods

	// RVA: 0x1BA8F58 Offset: 0x1BA8F58 VA: 0x1BA8F58
	public void .ctor() { }

	// RVA: 0x1BA8F60 Offset: 0x1BA8F60 VA: 0x1BA8F60
	public static GiftNameBase Create(Gift.Type type, int objectId, int count) { }

	// RVA: 0x1BA90DC Offset: 0x1BA90DC VA: 0x1BA90DC
	private static void OutputWarnLog(Gift.Type type) { }
}

// Namespace: GiftName
public class ServantBySummonHistory : GiftNameBase // TypeDefIndex: 6644
{
	// Methods

	// RVA: 0x1BA90E0 Offset: 0x1BA90E0 VA: 0x1BA90E0
	public void .ctor(int objectId, int count) { }
}

// Namespace: GiftName
public class CommandCodeBySummonHistory : GiftNameBase // TypeDefIndex: 6645
{
	// Methods

	// RVA: 0x1BA8418 Offset: 0x1BA8418 VA: 0x1BA8418
	public void .ctor(int objectId, int count) { }
}

// Namespace: GiftName
public class GiftNameFactory // TypeDefIndex: 6646
{
	// Methods

	// RVA: 0x1BA8A74 Offset: 0x1BA8A74 VA: 0x1BA8A74
	public void .ctor() { }

	// RVA: 0x1BA8A7C Offset: 0x1BA8A7C VA: 0x1BA8A7C
	public static GiftNameBase Create(Gift.Type type, int objectId, int count) { }
}

// Namespace: 
public class LastUsedDeckNumberManager // TypeDefIndex: 6647
{
	// Fields
	protected static readonly string SAVE_DATA_VERSION; // 0x0
	protected static bool isModfiy; // 0x8
	protected static bool isContinueDevice; // 0x9
	protected static List<LastUsedDeckNumberManager.LastUsedInfo> lastUsedInfoList; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC55528 Offset: 0xC55528 VA: 0xC55528
	private static Func<LastUsedDeckNumberManager.LastUsedInfo, LastUsedDeckNumberManager.LastUsedInfo, LastUsedDeckNumberManager.LastUsedInfo> <>f__am$cache0; // 0x18

	// Methods

	// RVA: 0x11C9F54 Offset: 0x11C9F54 VA: 0x11C9F54
	public void .ctor() { }

	// RVA: 0x11C9F5C Offset: 0x11C9F5C VA: 0x11C9F5C
	protected static string GetSaveFileName() { }

	// RVA: 0x11CA034 Offset: 0x11CA034 VA: 0x11CA034
	public static void DeleteSaveData() { }

	// RVA: 0x11CA1C0 Offset: 0x11CA1C0 VA: 0x11CA1C0
	public static void Initialize() { }

	// RVA: 0x11CA0BC Offset: 0x11CA0BC VA: 0x11CA0BC
	protected static void ClearSaveDataList() { }

	// RVA: 0x11CA6F8 Offset: 0x11CA6F8 VA: 0x11CA6F8
	public static void SetDeckNumber(int questId, int deckNumber) { }

	// RVA: 0x11CABB0 Offset: 0x11CABB0 VA: 0x11CABB0
	public static int GetDeckNumber(int questId) { }

	// RVA: 0x11CAA50 Offset: 0x11CAA50 VA: 0x11CAA50
	public static void DeleteData(int questId) { }

	// RVA: 0x11CA21C Offset: 0x11CA21C VA: 0x11CA21C
	public static bool ReadData() { }

	// RVA: 0x11CACC0 Offset: 0x11CACC0 VA: 0x11CACC0
	public static bool WriteData() { }

	// RVA: 0x11CB0D8 Offset: 0x11CB0D8 VA: 0x11CB0D8
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC9FD8 Offset: 0xCC9FD8 VA: 0xCC9FD8
	// RVA: 0x11CB178 Offset: 0x11CB178 VA: 0x11CB178
	private static LastUsedDeckNumberManager.LastUsedInfo <SetDeckNumber>m__0(LastUsedDeckNumberManager.LastUsedInfo x, LastUsedDeckNumberManager.LastUsedInfo y) { }
}

// Namespace: 
protected class LastUsedDeckNumberManager.LastUsedInfo // TypeDefIndex: 6648
{
	// Fields
	public int questId; // 0x10
	public int deckNumber; // 0x14
	public long time; // 0x18

	// Methods

	// RVA: 0x11CABA8 Offset: 0x11CABA8 VA: 0x11CABA8
	public void .ctor() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42B94 Offset: 0xC42B94 VA: 0xC42B94
private sealed class LastUsedDeckNumberManager.<SetDeckNumber>c__AnonStorey0 // TypeDefIndex: 6649
{
	// Fields
	internal int questId; // 0x10

	// Methods

	// RVA: 0x11CAA48 Offset: 0x11CAA48 VA: 0x11CAA48
	public void .ctor() { }

	// RVA: 0x11CB23C Offset: 0x11CB23C VA: 0x11CB23C
	internal bool <>m__0(LastUsedDeckNumberManager.LastUsedInfo x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42BA4 Offset: 0xC42BA4 VA: 0xC42BA4
private sealed class LastUsedDeckNumberManager.<GetDeckNumber>c__AnonStorey1 // TypeDefIndex: 6650
{
	// Fields
	internal int questId; // 0x10

	// Methods

	// RVA: 0x11CACB0 Offset: 0x11CACB0 VA: 0x11CACB0
	public void .ctor() { }

	// RVA: 0x11CB200 Offset: 0x11CB200 VA: 0x11CB200
	internal bool <>m__0(LastUsedDeckNumberManager.LastUsedInfo x) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42BB4 Offset: 0xC42BB4 VA: 0xC42BB4
private sealed class LastUsedDeckNumberManager.<DeleteData>c__AnonStorey2 // TypeDefIndex: 6651
{
	// Fields
	internal int questId; // 0x10

	// Methods

	// RVA: 0x11CACB8 Offset: 0x11CACB8 VA: 0x11CACB8
	public void .ctor() { }

	// RVA: 0x11CB1C4 Offset: 0x11CB1C4 VA: 0x11CB1C4
	internal bool <>m__0(LastUsedDeckNumberManager.LastUsedInfo x) { }
}

// Namespace: 
public abstract class DataEntityBase // TypeDefIndex: 6652
{
	// Properties
	public abstract string PrimaryKey { get; }

	// Methods

	// RVA: 0xE269EC Offset: 0xE269EC VA: 0xE269EC
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract string get_PrimaryKey();

	// RVA: -1 Offset: -1
	protected static string CreateMultiplePK<T>(T arg1) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C5AF94 Offset: 0x1C5AF94 VA: 0x1C5AF94
	|-DataEntityBase.CreateMultiplePK<int>
	|
	|-RVA: 0x1C5AFBC Offset: 0x1C5AFBC VA: 0x1C5AFBC
	|-DataEntityBase.CreateMultiplePK<long>
	|
	|-RVA: 0x1C5AFE4 Offset: 0x1C5AFE4 VA: 0x1C5AFE4
	|-DataEntityBase.CreateMultiplePK<object>
	*/

	// RVA: 0xE269F4 Offset: 0xE269F4 VA: 0xE269F4
	protected static string CreateMultiplePK(long arg1, long arg2) { }

	// RVA: 0xE26A9C Offset: 0xE26A9C VA: 0xE26A9C
	protected static string CreateMultiplePK(long arg1, long arg2, long arg3) { }

	// RVA: 0xE26CE8 Offset: 0xE26CE8 VA: 0xE26CE8
	protected static string CreateMultiplePK(long arg1, long arg2, long arg3, long arg4) { }

	// RVA: 0xE26FDC Offset: 0xE26FDC VA: 0xE26FDC
	protected static string CreateMultiplePK(long arg1, long arg2, long arg3, long arg4, long arg5) { }

	// RVA: 0xE27378 Offset: 0xE27378 VA: 0xE27378
	protected static string CreateMultiplePK(long arg1, long arg2, long arg3, long arg4, long arg5, long arg6) { }

	// RVA: 0xE277B8 Offset: 0xE277B8 VA: 0xE277B8
	protected static string CreateMultiplePK(long arg1, long arg2, long arg3, long arg4, long arg5, long arg6, long arg7) { }

	// RVA: 0xE27CA0 Offset: 0xE27CA0 VA: 0xE27CA0
	protected static string CreateMultiplePK(long arg1, long arg2, long arg3, long arg4, long arg5, long arg6, long arg7, long arg8) { }

	// RVA: 0xE28230 Offset: 0xE28230 VA: 0xE28230
	protected static string CreateMultiplePKWithString(string arg1, long arg2) { }

	// RVA: 0xE282CC Offset: 0xE282CC VA: 0xE282CC
	protected static string CreateMultiplePKWithString(long arg1, long arg2, string arg3) { }

	// RVA: 0xE2850C Offset: 0xE2850C VA: 0xE2850C
	protected static string CreateMultiplePKWithString(long arg1, long arg2, string arg3, long arg4) { }

	// RVA: 0xE287F4 Offset: 0xE287F4 VA: 0xE287F4
	protected static string CreateMultiplePKWithString(long arg1, long arg2, string arg3, long arg4, long arg5, long arg6) { }
}

// Namespace: 
public abstract class DataEntityBase<PKType> : DataEntityBase // TypeDefIndex: 6653
{
	// Properties
	public override string PrimaryKey { get; }

	// Methods

	// RVA: -1 Offset: -1
	protected void .ctor() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226A100 Offset: 0x226A100 VA: 0x226A100
	|-DataEntityBase<int>..ctor
	|
	|-RVA: 0x226A174 Offset: 0x226A174 VA: 0x226A174
	|-DataEntityBase<long>..ctor
	|
	|-RVA: 0x226A1E8 Offset: 0x226A1E8 VA: 0x226A1E8
	|-DataEntityBase<object>..ctor
	|-DataEntityBase<string>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public override string get_PrimaryKey() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x226A12C Offset: 0x226A12C VA: 0x226A12C
	|-DataEntityBase<int>.get_PrimaryKey
	|
	|-RVA: 0x226A1A0 Offset: 0x226A1A0 VA: 0x226A1A0
	|-DataEntityBase<long>.get_PrimaryKey
	|
	|-RVA: 0x226A214 Offset: 0x226A214 VA: 0x226A214
	|-DataEntityBase<object>.get_PrimaryKey
	|-DataEntityBase<string>.get_PrimaryKey
	*/

	// RVA: -1 Offset: -1 Slot: 5
	protected abstract PKType CreatePrimaryKey();
	/* GenericInstMethod :
	|
	|-RVA: -1 Offset: -1
	|-DataEntityBase<object>.CreatePrimaryKey
	*/
}

// Namespace: 
public abstract class DataMasterBase // TypeDefIndex: 6654
{
	// Fields
	[CompilerGeneratedAttribute] // RVA: 0xC55538 Offset: 0xC55538 VA: 0xC55538
	[DebuggerBrowsableAttribute] // RVA: 0xC55538 Offset: 0xC55538 VA: 0xC55538
	private DataNameKind.Kind <MasterKind>k__BackingField; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xC55574 Offset: 0xC55574 VA: 0xC55574
	[DebuggerBrowsableAttribute] // RVA: 0xC55574 Offset: 0xC55574 VA: 0xC55574
	private string <MasterName>k__BackingField; // 0x18
	protected List<DataEntityBase> list; // 0x20
	protected Dictionary<string, DataEntityBase> _lookup; // 0x28
	protected MiniMessagePacker seriazlier; // 0x30
	private const int SB_CAPA_MAX = 128;
	private StringBuilder sb; // 0x38
	private static bool failedToDeserializeDirectly; // 0x0
	private int revision; // 0x40

	// Properties
	public DataNameKind.Kind MasterKind { get; set; }
	public string MasterName { get; set; }
	protected bool IsCreatedLookupTable { get; }
	protected Dictionary<string, DataEntityBase> lookup { get; }

	// Methods

	// RVA: 0x11E6DE8 Offset: 0x11E6DE8 VA: 0x11E6DE8
	protected void .ctor(DataNameKind.Kind kind) { }

	// RVA: -1 Offset: -1
	public static DataNameKind.Kind GetRegisteredKind<TMaster>() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2548A44 Offset: 0x2548A44 VA: 0x2548A44
	|-DataMasterBase.GetRegisteredKind<object>
	*/

	// RVA: -1 Offset: -1
	public static string GetRegisteredName<TMaster>() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C5B014 Offset: 0x1C5B014 VA: 0x1C5B014
	|-DataMasterBase.GetRegisteredName<object>
	*/

	// RVA: -1 Offset: -1
	protected static void RegisterKindAndName<TMaster>(DataNameKind.Kind kind, string name) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C5FA50 Offset: 0x1C5FA50 VA: 0x1C5FA50
	|-DataMasterBase.RegisterKindAndName<object>
	*/

	[CompilerGeneratedAttribute] // RVA: 0xCC9FE8 Offset: 0xCC9FE8 VA: 0xCC9FE8
	// RVA: 0x11D58D8 Offset: 0x11D58D8 VA: 0x11D58D8
	public DataNameKind.Kind get_MasterKind() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC9FF8 Offset: 0xCC9FF8 VA: 0xCC9FF8
	// RVA: 0x11E6E98 Offset: 0x11E6E98 VA: 0x11E6E98
	private void set_MasterKind(DataNameKind.Kind value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA008 Offset: 0xCCA008 VA: 0xCCA008
	// RVA: 0x11D9E7C Offset: 0x11D9E7C VA: 0x11D9E7C
	public string get_MasterName() { }

	[CompilerGeneratedAttribute] // RVA: 0xCCA018 Offset: 0xCCA018 VA: 0xCCA018
	// RVA: 0x11E6F2C Offset: 0x11E6F2C VA: 0x11E6F2C
	private void set_MasterName(string value) { }

	// RVA: 0x11E6F34 Offset: 0x11E6F34 VA: 0x11E6F34
	protected bool get_IsCreatedLookupTable() { }

	// RVA: 0x11E6F44 Offset: 0x11E6F44 VA: 0x11E6F44
	protected Dictionary<string, DataEntityBase> get_lookup() { }

	// RVA: 0x11E7140 Offset: 0x11E7140 VA: 0x11E7140
	public bool Modified(int revision) { }

	// RVA: 0x11DA234 Offset: 0x11DA234 VA: 0x11DA234
	public int Revision() { }

	// RVA: -1 Offset: -1 Slot: 4
	public abstract DataEntityBase[] getList(object obj);

	// RVA: -1 Offset: -1 Slot: 5
	protected abstract void ForForceDerived();

	// RVA: 0x11E7150 Offset: 0x11E7150 VA: 0x11E7150
	private DataEntityBase[] directGetList(byte[] bytes, int start, int length) { }

	// RVA: 0x11E733C Offset: 0x11E733C VA: 0x11E733C
	private DataEntityBase[] abstractGetList(object objOrBytes, Nullable<long> start, Nullable<long> lenght) { }

	// RVA: 0x11E7614 Offset: 0x11E7614 VA: 0x11E7614
	private DataEntityBase[] abstractGetListForThread(object objOrBytes, SynchronizationContext context, Nullable<long> start, Nullable<long> lenght, byte[] work) { }

	// RVA: 0x11E7A98 Offset: 0x11E7A98 VA: 0x11E7A98 Slot: 6
	public virtual bool preProcess() { }

	// RVA: 0x11E7AA0 Offset: 0x11E7AA0 VA: 0x11E7AA0 Slot: 7
	public virtual void Clear() { }

	// RVA: 0x11DA084 Offset: 0x11DA084 VA: 0x11DA084
	public bool Replaced(object objOrBytes, Nullable<long> start, Nullable<long> lenght) { }

	// RVA: 0x11D68F0 Offset: 0x11D68F0 VA: 0x11D68F0
	public bool ReplacedForThread(object objOrBytes, SynchronizationContext context, Nullable<long> start, Nullable<long> lenght, byte[] work) { }

	// RVA: 0x11E6F74 Offset: 0x11E6F74 VA: 0x11E6F74
	private void CreateLookupTable() { }

	// RVA: 0x11D9F94 Offset: 0x11D9F94 VA: 0x11D9F94
	public bool Updated(object obj) { }

	// RVA: 0x11E7B08 Offset: 0x11E7B08 VA: 0x11E7B08
	public bool UpdatedEntity(DataEntityBase entity) { }

	// RVA: 0x11D9E84 Offset: 0x11D9E84 VA: 0x11D9E84
	public bool Deleted(object obj) { }

	// RVA: 0x11E7BD0 Offset: 0x11E7BD0 VA: 0x11E7BD0
	private bool RemoveEntity(string key) { }

	// RVA: 0x11DA414 Offset: 0x11DA414 VA: 0x11DA414
	public DataEntityBase[] getEntitys() { }

	// RVA: 0x11DA3E0 Offset: 0x11DA3E0 VA: 0x11DA3E0
	public List<DataEntityBase> getEntityList() { }

	// RVA: -1 Offset: -1
	public T[] getEntitys<T>() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x2B1F564 Offset: 0x2B1F564 VA: 0x2B1F564
	|-DataMasterBase.getEntitys<BgmEntity>
	|-DataMasterBase.getEntitys<BuffEntity>
	|-DataMasterBase.getEntitys<CommandSpellEntity>
	|-DataMasterBase.getEntitys<EffectEntity>
	|-DataMasterBase.getEntitys<EventBoardGameTokenRewardEntity>
	|-DataMasterBase.getEntitys<EventRaidEntity>
	|-DataMasterBase.getEntitys<GiftEntity>
	|-DataMasterBase.getEntitys<MapGimmickEntity>
	|-DataMasterBase.getEntitys<QuestEntity>
	|-DataMasterBase.getEntitys<ServantEntity>
	|-DataMasterBase.getEntitys<ServantLimitAddEntity>
	|-DataMasterBase.getEntitys<ServantProfileEntity>
	|-DataMasterBase.getEntitys<ServantSkillEntity>
	|-DataMasterBase.getEntitys<ShopScriptEntity>
	|-DataMasterBase.getEntitys<SkillDetailEntity>
	|-DataMasterBase.getEntitys<SkillEntity>
	|-DataMasterBase.getEntitys<object>
	|-DataMasterBase.getEntitys<TotalEventRaidEntity>
	|-DataMasterBase.getEntitys<UserServantCollectionEntity>
	|-DataMasterBase.getEntitys<VoiceEntity>
	|-DataMasterBase.getEntitys<WarEntity>
	*/

	// RVA: 0x11E7DB8 Offset: 0x11E7DB8 VA: 0x11E7DB8
	public bool isSingleEntityExists() { }

	// RVA: -1 Offset: -1
	public T getSingleEntity<T>() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1EF18 Offset: 0x1C1EF18 VA: 0x1C1EF18
	|-DataMasterBase.getSingleEntity<BattleEntity>
	|-DataMasterBase.getSingleEntity<BeforeBirthDayEntity>
	|-DataMasterBase.getSingleEntity<PickupUserFollowerEntity>
	|-DataMasterBase.getSingleEntity<object>
	|-DataMasterBase.getSingleEntity<UserFollowerEntity>
	*/

	// RVA: -1 Offset: -1
	public T getUserIdEntity<T>() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1F1DC Offset: 0x1C1F1DC VA: 0x1C1F1DC
	|-DataMasterBase.getUserIdEntity<object>
	*/

	// RVA: -1 Offset: -1
	public T getEntityFromKey<T>(string key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1EDF4 Offset: 0x1C1EDF4 VA: 0x1C1EDF4
	|-DataMasterBase.getEntityFromKey<ConstantStrEntity>
	|-DataMasterBase.getEntityFromKey<EventPointGroupEntity>
	|-DataMasterBase.getEntityFromKey<EventQuestCooltimeEntity>
	|-DataMasterBase.getEntityFromKey<object>
	*/

	// RVA: -1 Offset: -1
	public T getEntityFromId<T>(int id) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1E1BC Offset: 0x1C1E1BC VA: 0x1C1E1BC
	|-DataMasterBase.getEntityFromId<AiActEntity>
	|-DataMasterBase.getEntityFromId<AuraEffectEntity>
	|-DataMasterBase.getEntityFromId<BankShopEntity>
	|-DataMasterBase.getEntityFromId<BgmEntity>
	|-DataMasterBase.getEntityFromId<BoxGachaBaseDetailEntity>
	|-DataMasterBase.getEntityFromId<BoxGachaEntity>
	|-DataMasterBase.getEntityFromId<BuffEntity>
	|-DataMasterBase.getEntityFromId<ClosedMessageEntity>
	|-DataMasterBase.getEntityFromId<CombineEntity>
	|-DataMasterBase.getEntityFromId<CommandCodeEntity>
	|-DataMasterBase.getEntityFromId<CommandSpellEntity>
	|-DataMasterBase.getEntityFromId<CommonRestrictionEntity>
	|-DataMasterBase.getEntityFromId<CompleteMissionEntity>
	|-DataMasterBase.getEntityFromId<CvEntity>
	|-DataMasterBase.getEntityFromId<EffectEntity>
	|-DataMasterBase.getEntityFromId<EquipEntity>
	|-DataMasterBase.getEntityFromId<EquipImageEntity>
	|-DataMasterBase.getEntityFromId<EventBonusFilterGroupInfoEntity>
	|-DataMasterBase.getEntityFromId<EventDetailEntity>
	|-DataMasterBase.getEntityFromId<EventEntity>
	|-DataMasterBase.getEntityFromId<EventMissionEntity>
	|-DataMasterBase.getEntityFromId<EventPanelMapDetailEntity>
	|-DataMasterBase.getEntityFromId<EventPanelMapEntity>
	|-DataMasterBase.getEntityFromId<EventPanelScanEntity>
	|-DataMasterBase.getEntityFromId<EventPanelSpotEntity>
	|-DataMasterBase.getEntityFromId<EventPointBuffEntity>
	|-DataMasterBase.getEntityFromId<FunctionEntity>
	|-DataMasterBase.getEntityFromId<GachaEntity>
	|-DataMasterBase.getEntityFromId<GachaGroupEntity>
	|-DataMasterBase.getEntityFromId<IllustratorEntity>
	|-DataMasterBase.getEntityFromId<ItemEntity>
	|-DataMasterBase.getEntityFromId<MapGimmickEntity>
	|-DataMasterBase.getEntityFromId<MstMissionDisplayInfoEntity>
	|-DataMasterBase.getEntityFromId<NewsEntity>
	|-DataMasterBase.getEntityFromId<OtherUserGameEntity>
	|-DataMasterBase.getEntityFromId<PrivilegeEntity>
	|-DataMasterBase.getEntityFromId<QuestConsumeItemEntity>
	|-DataMasterBase.getEntityFromId<QuestEntity>
	|-DataMasterBase.getEntityFromId<RestrictionEntity>
	|-DataMasterBase.getEntityFromId<ServantClassEntity>
	|-DataMasterBase.getEntityFromId<ServantEntity>
	|-DataMasterBase.getEntityFromId<ServantFilterEntity>
	|-DataMasterBase.getEntityFromId<ServantRarityEntity>
	|-DataMasterBase.getEntityFromId<ShopEntity>
	|-DataMasterBase.getEntityFromId<SkillDetailEntity>
	|-DataMasterBase.getEntityFromId<SkillEntity>
	|-DataMasterBase.getEntityFromId<SpotEntity>
	|-DataMasterBase.getEntityFromId<SpotPathEntity>
	|-DataMasterBase.getEntityFromId<SpotRoadEntity>
	|-DataMasterBase.getEntityFromId<StoneShopEntity>
	|-DataMasterBase.getEntityFromId<object>
	|-DataMasterBase.getEntityFromId<TipsBattleEntity>
	|-DataMasterBase.getEntityFromId<TreasureDvcEntity>
	|-DataMasterBase.getEntityFromId<UserEquipEntity>
	|-DataMasterBase.getEntityFromId<UserExpEntity>
	|-DataMasterBase.getEntityFromId<WarBoardAIEntity>
	|-DataMasterBase.getEntityFromId<WarBoardActionTrendConditionEntity>
	|-DataMasterBase.getEntityFromId<WarBoardActionTrendEntity>
	|-DataMasterBase.getEntityFromId<WarBoardEffectEntity>
	|-DataMasterBase.getEntityFromId<WarBoardEntity>
	|-DataMasterBase.getEntityFromId<WarBoardItemEntity>
	|-DataMasterBase.getEntityFromId<WarBoardRatingBaseEntity>
	|-DataMasterBase.getEntityFromId<WarBoardRatingOffsetEntity>
	|-DataMasterBase.getEntityFromId<WarBoardStageEntity>
	|-DataMasterBase.getEntityFromId<WarBoardTacticalTrendEntity>
	|-DataMasterBase.getEntityFromId<WarBoardTreasureEntity>
	|-DataMasterBase.getEntityFromId<WarEntity>
	*/

	// RVA: -1 Offset: -1
	public T getEntityFromId<T>(int id1, int id2) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1E2F0 Offset: 0x1C1E2F0 VA: 0x1C1E2F0
	|-DataMasterBase.getEntityFromId<AttriRelationEntity>
	|-DataMasterBase.getEntityFromId<BoxGachaBaseEntity>
	|-DataMasterBase.getEntityFromId<CardEntity>
	|-DataMasterBase.getEntityFromId<ClassRelationEntity>
	|-DataMasterBase.getEntityFromId<CombineLimitEntity>
	|-DataMasterBase.getEntityFromId<CombineMaterialEntity>
	|-DataMasterBase.getEntityFromId<CombineQpEntity>
	|-DataMasterBase.getEntityFromId<CombineQpSvtEquipEntity>
	|-DataMasterBase.getEntityFromId<CombineSkillEntity>
	|-DataMasterBase.getEntityFromId<EquipExpEntity>
	|-DataMasterBase.getEntityFromId<EquipSkillEntity>
	|-DataMasterBase.getEntityFromId<EventItemDisplayGroupEntity>
	|-DataMasterBase.getEntityFromId<EventPointEntity>
	|-DataMasterBase.getEntityFromId<EventPointGroupEntity>
	|-DataMasterBase.getEntityFromId<EventRaceEntity>
	|-DataMasterBase.getEntityFromId<EventRaidEntity>
	|-DataMasterBase.getEntityFromId<EventServantEntity>
	|-DataMasterBase.getEntityFromId<EventSuperBossEntity>
	|-DataMasterBase.getEntityFromId<EventTowerEntity>
	|-DataMasterBase.getEntityFromId<FriendshipEntity>
	|-DataMasterBase.getEntityFromId<MapEntity>
	|-DataMasterBase.getEntityFromId<QuestPhaseEntity>
	|-DataMasterBase.getEntityFromId<ServantCardEntity>
	|-DataMasterBase.getEntityFromId<ServantCommandCodeUnlockEntity>
	|-DataMasterBase.getEntityFromId<ServantCostumeEntity>
	|-DataMasterBase.getEntityFromId<ServantExceedEntity>
	|-DataMasterBase.getEntityFromId<ServantExpEntity>
	|-DataMasterBase.getEntityFromId<ServantFlagEntity>
	|-DataMasterBase.getEntityFromId<ServantLimitAddEntity>
	|-DataMasterBase.getEntityFromId<ServantLimitEntity>
	|-DataMasterBase.getEntityFromId<ServantTreasureDeviceDamageEntity>
	|-DataMasterBase.getEntityFromId<SkillLvEntity>
	|-DataMasterBase.getEntityFromId<object>
	|-DataMasterBase.getEntityFromId<TreasureDvcLvEntity>
	|-DataMasterBase.getEntityFromId<WarBoardQuestEntity>
	*/

	// RVA: -1 Offset: -1
	public T getEntityFromId<T>(int id1, int id2, int id3) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1E478 Offset: 0x1C1E478 VA: 0x1C1E478
	|-DataMasterBase.getEntityFromId<EventMissionConditionEntity>
	|-DataMasterBase.getEntityFromId<EventRewardSetEntity>
	|-DataMasterBase.getEntityFromId<GiftEntity>
	|-DataMasterBase.getEntityFromId<ServantCommentEntity>
	|-DataMasterBase.getEntityFromId<ServantTreasureDvcEntity>
	|-DataMasterBase.getEntityFromId<ServantVoiceEntity>
	|-DataMasterBase.getEntityFromId<object>
	*/

	// RVA: -1 Offset: -1
	public T getEntityFromId<T>(int id1, int id2, int id3, int id4) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1E7A0 Offset: 0x1C1E7A0 VA: 0x1C1E7A0
	|-DataMasterBase.getEntityFromId<QuestReleaseEntity>
	|-DataMasterBase.getEntityFromId<object>
	*/

	// RVA: 0x11E7E48 Offset: 0x11E7E48 VA: 0x11E7E48
	protected string createKey(long[] args) { }

	// RVA: -1 Offset: -1
	public T getEntityFromId<T>(long id) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1EB6C Offset: 0x1C1EB6C VA: 0x1C1EB6C
	|-DataMasterBase.getEntityFromId<EquipEntity>
	|-DataMasterBase.getEntityFromId<EventPointBuffEntity>
	|-DataMasterBase.getEntityFromId<NpcServantEquipEntity>
	|-DataMasterBase.getEntityFromId<NpcServantFollowerEntity>
	|-DataMasterBase.getEntityFromId<OtherUserGameEntity>
	|-DataMasterBase.getEntityFromId<object>
	|-DataMasterBase.getEntityFromId<TblUserEntity>
	|-DataMasterBase.getEntityFromId<UserCoinRoomEntity>
	|-DataMasterBase.getEntityFromId<UserCommandCodeEntity>
	|-DataMasterBase.getEntityFromId<UserDeckEntity>
	|-DataMasterBase.getEntityFromId<UserEquipEntity>
	|-DataMasterBase.getEntityFromId<UserGameEntity>
	|-DataMasterBase.getEntityFromId<UserLoginEntity>
	|-DataMasterBase.getEntityFromId<UserServantEntity>
	*/

	// RVA: -1 Offset: -1
	public T getEntityFromId<T>(long[] args) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x1C1EC9C Offset: 0x1C1EC9C VA: 0x1C1EC9C
	|-DataMasterBase.getEntityFromId<object>
	|-DataMasterBase.getEntityFromId<UserBoxGachaEntity>
	|-DataMasterBase.getEntityFromId<UserEventMissionCondDetailEntity>
	|-DataMasterBase.getEntityFromId<UserEventMissionEntity>
	|-DataMasterBase.getEntityFromId<UserEventPointEntity>
	|-DataMasterBase.getEntityFromId<UserGachaEntity>
	|-DataMasterBase.getEntityFromId<UserItemEntity>
	|-DataMasterBase.getEntityFromId<UserQuestEntity>
	|-DataMasterBase.getEntityFromId<UserServantCollectionEntity>
	|-DataMasterBase.getEntityFromId<UserSuperBossEntity>
	*/

	// RVA: 0x11E8054 Offset: 0x11E8054 VA: 0x11E8054
	public bool isEntityExistsFromId(long[] args) { }

	// RVA: -1 Offset: -1
	public bool TryGetEntityFromId<T>(out T result, long[] args) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x255B594 Offset: 0x255B594 VA: 0x255B594
	|-DataMasterBase.TryGetEntityFromId<AiActEntity>
	|-DataMasterBase.TryGetEntityFromId<BattleBgEntity>
	|-DataMasterBase.TryGetEntityFromId<BgmEntity>
	|-DataMasterBase.TryGetEntityFromId<BoxGachaHistoryEntity>
	|-DataMasterBase.TryGetEntityFromId<BuffEntity>
	|-DataMasterBase.TryGetEntityFromId<CampaignInfoEntity>
	|-DataMasterBase.TryGetEntityFromId<CardEntity>
	|-DataMasterBase.TryGetEntityFromId<ClassRelationEntity>
	|-DataMasterBase.TryGetEntityFromId<ClassRelationOverwriteEntity>
	|-DataMasterBase.TryGetEntityFromId<ClosedMessageEntity>
	|-DataMasterBase.TryGetEntityFromId<CombineCostumeEntity>
	|-DataMasterBase.TryGetEntityFromId<CombineEntity>
	|-DataMasterBase.TryGetEntityFromId<CommandCodeCommentEntity>
	|-DataMasterBase.TryGetEntityFromId<CommandCodeEntity>
	|-DataMasterBase.TryGetEntityFromId<EffectEntity>
	|-DataMasterBase.TryGetEntityFromId<EnemyMstBattleEntity>
	|-DataMasterBase.TryGetEntityFromId<EquipEntity>
	|-DataMasterBase.TryGetEntityFromId<EquipExpEntity>
	|-DataMasterBase.TryGetEntityFromId<EventBoardGameTokenEntity>
	|-DataMasterBase.TryGetEntityFromId<EventBoostItemUsedEntity>
	|-DataMasterBase.TryGetEntityFromId<EventBossStatusUiEntity>
	|-DataMasterBase.TryGetEntityFromId<EventDetailEntity>
	|-DataMasterBase.TryGetEntityFromId<EventEntity>
	|-DataMasterBase.TryGetEntityFromId<EventFilterEntity>
	|-DataMasterBase.TryGetEntityFromId<EventItemDisplayReleaseEntity>
	|-DataMasterBase.TryGetEntityFromId<EventLocationCampaignEntity>
	|-DataMasterBase.TryGetEntityFromId<EventMissionEntity>
	|-DataMasterBase.TryGetEntityFromId<EventPointEntity>
	|-DataMasterBase.TryGetEntityFromId<EventPointGroupEntity>
	|-DataMasterBase.TryGetEntityFromId<EventRaceEntity>
	|-DataMasterBase.TryGetEntityFromId<EventRaceResultEntity>
	|-DataMasterBase.TryGetEntityFromId<EventRaidEntity>
	|-DataMasterBase.TryGetEntityFromId<EventServantFatigueEntity>
	|-DataMasterBase.TryGetEntityFromId<EventStatusEntity>
	|-DataMasterBase.TryGetEntityFromId<EventTowerEntity>
	|-DataMasterBase.TryGetEntityFromId<FriendshipEntity>
	|-DataMasterBase.TryGetEntityFromId<FunctionEntity>
	|-DataMasterBase.TryGetEntityFromId<FunctionGroupEntity>
	|-DataMasterBase.TryGetEntityFromId<GachaAppendEntity>
	|-DataMasterBase.TryGetEntityFromId<GachaGroupEntity>
	|-DataMasterBase.TryGetEntityFromId<ItemEntity>
	|-DataMasterBase.TryGetEntityFromId<ItemSelectEntity>
	|-DataMasterBase.TryGetEntityFromId<MapEntity>
	|-DataMasterBase.TryGetEntityFromId<NotEndEventMissionFixEntity>
	|-DataMasterBase.TryGetEntityFromId<NpcFollowerEntity>
	|-DataMasterBase.TryGetEntityFromId<NpcServantFollowerEntity>
	|-DataMasterBase.TryGetEntityFromId<QuestEntity>
	|-DataMasterBase.TryGetEntityFromId<QuestPhaseDetailEntity>
	|-DataMasterBase.TryGetEntityFromId<QuestPhaseEntity>
	|-DataMasterBase.TryGetEntityFromId<QuestRacePointEntity>
	|-DataMasterBase.TryGetEntityFromId<QuestReleaseEntity>
	|-DataMasterBase.TryGetEntityFromId<QuestResetEntity>
	|-DataMasterBase.TryGetEntityFromId<QuestRestrictionInfoEntity>
	|-DataMasterBase.TryGetEntityFromId<ReprintStageEntity>
	|-DataMasterBase.TryGetEntityFromId<RestrictionEntity>
	|-DataMasterBase.TryGetEntityFromId<ServantCardEntity>
	|-DataMasterBase.TryGetEntityFromId<ServantClassEntity>
	|-DataMasterBase.TryGetEntityFromId<ServantCostumeEntity>
	|-DataMasterBase.TryGetEntityFromId<ServantEntity>
	|-DataMasterBase.TryGetEntityFromId<ServantFilterEntity>
	|-DataMasterBase.TryGetEntityFromId<ServantLimitAddEntity>
	|-DataMasterBase.TryGetEntityFromId<ServantLimitEntity>
	|-DataMasterBase.TryGetEntityFromId<ServantSkillEntity>
	|-DataMasterBase.TryGetEntityFromId<ShopDetailEntity>
	|-DataMasterBase.TryGetEntityFromId<ShopEntity>
	|-DataMasterBase.TryGetEntityFromId<ShopScriptEntity>
	|-DataMasterBase.TryGetEntityFromId<SkillDetailEntity>
	|-DataMasterBase.TryGetEntityFromId<SkillEntity>
	|-DataMasterBase.TryGetEntityFromId<SkillLvEntity>
	|-DataMasterBase.TryGetEntityFromId<SpotEntity>
	|-DataMasterBase.TryGetEntityFromId<SpotPathEntity>
	|-DataMasterBase.TryGetEntityFromId<StageEntity>
	|-DataMasterBase.TryGetEntityFromId<StatusEffectPosOverwriteEntity>
	|-DataMasterBase.TryGetEntityFromId<object>
	|-DataMasterBase.TryGetEntityFromId<TotalEventRaceEntity>
	|-DataMasterBase.TryGetEntityFromId<TotalEventRaidEntity>
	|-DataMasterBase.TryGetEntityFromId<TreasureDvcEntity>
	|-DataMasterBase.TryGetEntityFromId<UserBoxGachaEntity>
	|-DataMasterBase.TryGetEntityFromId<UserCommandCodeCollectionEntity>
	|-DataMasterBase.TryGetEntityFromId<UserCommandCodeEntity>
	|-DataMasterBase.TryGetEntityFromId<UserContinueEntity>
	|-DataMasterBase.TryGetEntityFromId<UserEventDeckEntity>
	|-DataMasterBase.TryGetEntityFromId<UserEventEntity>
	|-DataMasterBase.TryGetEntityFromId<UserEventMissionCondDetailEntity>
	|-DataMasterBase.TryGetEntityFromId<UserEventMissionEntity>
	|-DataMasterBase.TryGetEntityFromId<UserEventPointEntity>
	|-DataMasterBase.TryGetEntityFromId<UserEventRaceEntity>
	|-DataMasterBase.TryGetEntityFromId<UserExpEntity>
	|-DataMasterBase.TryGetEntityFromId<UserFollowEntity>
	|-DataMasterBase.TryGetEntityFromId<UserItemEntity>
	|-DataMasterBase.TryGetEntityFromId<UserPrivilegeEntity>
	|-DataMasterBase.TryGetEntityFromId<UserQuestEntity>
	|-DataMasterBase.TryGetEntityFromId<UserQuestInfoEntity>
	|-DataMasterBase.TryGetEntityFromId<UserQuestRecordEntity>
	|-DataMasterBase.TryGetEntityFromId<UserQuestRouteEntity>
	|-DataMasterBase.TryGetEntityFromId<UserServantCollectionEntity>
	|-DataMasterBase.TryGetEntityFromId<UserServantCommandCardEntity>
	|-DataMasterBase.TryGetEntityFromId<UserServantCommandCodeEntity>
	|-DataMasterBase.TryGetEntityFromId<UserServantEntity>
	|-DataMasterBase.TryGetEntityFromId<UserShopEntity>
	|-DataMasterBase.TryGetEntityFromId<UserSupportDeckEntity>
	|-DataMasterBase.TryGetEntityFromId<UserSvtCoinEntity>
	|-DataMasterBase.TryGetEntityFromId<ViewEnemyEntity>
	|-DataMasterBase.TryGetEntityFromId<ViewQuestInfoEntity>
	|-DataMasterBase.TryGetEntityFromId<VoiceClosedMessageEntity>
	|-DataMasterBase.TryGetEntityFromId<WarBoardStageEntity>
	|-DataMasterBase.TryGetEntityFromId<WarEntity>
	*/

	// RVA: -1 Offset: -1
	public bool TryGetEntityFromId<T>(out T result, string key) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x255B7A4 Offset: 0x255B7A4 VA: 0x255B7A4
	|-DataMasterBase.TryGetEntityFromId<BgmEntity>
	|-DataMasterBase.TryGetEntityFromId<ConstantStrEntity>
	|-DataMasterBase.TryGetEntityFromId<FriendshipEntity>
	|-DataMasterBase.TryGetEntityFromId<QuestPhaseDetailEntity>
	|-DataMasterBase.TryGetEntityFromId<ServantVoiceEntity>
	|-DataMasterBase.TryGetEntityFromId<object>
	*/

	// RVA: 0x11E80E8 Offset: 0x11E80E8 VA: 0x11E80E8
	public bool isEntityExistsFromId(string key) { }

	// RVA: 0x11E8164 Offset: 0x11E8164 VA: 0x11E8164
	private static void .cctor() { }
}

// Namespace: 
private static class DataMasterBase.Registration<TMaster> // TypeDefIndex: 6655
{
	// Fields
	public static DataNameKind.Kind Kind; // 0x0
	public static string Name; // 0x0
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC42BC4 Offset: 0xC42BC4 VA: 0xC42BC4
private sealed class DataMasterBase.<abstractGetListForThread>c__AnonStorey0 // TypeDefIndex: 6656
{
	// Fields
	internal Exception e; // 0x10

	// Methods

	// RVA: 0x11E7A88 Offset: 0x11E7A88 VA: 0x11E7A88
	public void .ctor() { }

	// RVA: 0x11E8208 Offset: 0x11E8208 VA: 0x11E8208
