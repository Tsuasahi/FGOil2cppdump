	public const GraphicsFormat R8_SInt = 17;
	public const GraphicsFormat R8G8_SInt = 18;
	public const GraphicsFormat R8G8B8_SInt = 19;
	public const GraphicsFormat R8G8B8A8_SInt = 20;
	public const GraphicsFormat R16_UNorm = 21;
	public const GraphicsFormat R16G16_UNorm = 22;
	public const GraphicsFormat R16G16B16_UNorm = 23;
	public const GraphicsFormat R16G16B16A16_UNorm = 24;
	public const GraphicsFormat R16_SNorm = 25;
	public const GraphicsFormat R16G16_SNorm = 26;
	public const GraphicsFormat R16G16B16_SNorm = 27;
	public const GraphicsFormat R16G16B16A16_SNorm = 28;
	public const GraphicsFormat R16_UInt = 29;
	public const GraphicsFormat R16G16_UInt = 30;
	public const GraphicsFormat R16G16B16_UInt = 31;
	public const GraphicsFormat R16G16B16A16_UInt = 32;
	public const GraphicsFormat R16_SInt = 33;
	public const GraphicsFormat R16G16_SInt = 34;
	public const GraphicsFormat R16G16B16_SInt = 35;
	public const GraphicsFormat R16G16B16A16_SInt = 36;
	public const GraphicsFormat R32_UInt = 37;
	public const GraphicsFormat R32G32_UInt = 38;
	public const GraphicsFormat R32G32B32_UInt = 39;
	public const GraphicsFormat R32G32B32A32_UInt = 40;
	public const GraphicsFormat R32_SInt = 41;
	public const GraphicsFormat R32G32_SInt = 42;
	public const GraphicsFormat R32G32B32_SInt = 43;
	public const GraphicsFormat R32G32B32A32_SInt = 44;
	public const GraphicsFormat R16_SFloat = 45;
	public const GraphicsFormat R16G16_SFloat = 46;
	public const GraphicsFormat R16G16B16_SFloat = 47;
	public const GraphicsFormat R16G16B16A16_SFloat = 48;
	public const GraphicsFormat R32_SFloat = 49;
	public const GraphicsFormat R32G32_SFloat = 50;
	public const GraphicsFormat R32G32B32_SFloat = 51;
	public const GraphicsFormat R32G32B32A32_SFloat = 52;
	public const GraphicsFormat B8G8R8_SRGB = 56;
	public const GraphicsFormat B8G8R8A8_SRGB = 57;
	public const GraphicsFormat B8G8R8_UNorm = 58;
	public const GraphicsFormat B8G8R8A8_UNorm = 59;
	public const GraphicsFormat B8G8R8_SNorm = 60;
	public const GraphicsFormat B8G8R8A8_SNorm = 61;
	public const GraphicsFormat B8G8R8_UInt = 62;
	public const GraphicsFormat B8G8R8A8_UInt = 63;
	public const GraphicsFormat B8G8R8_SInt = 64;
	public const GraphicsFormat B8G8R8A8_SInt = 65;
	public const GraphicsFormat R4G4B4A4_UNormPack16 = 66;
	public const GraphicsFormat B4G4R4A4_UNormPack16 = 67;
	public const GraphicsFormat R5G6B5_UNormPack16 = 68;
	public const GraphicsFormat B5G6R5_UNormPack16 = 69;
	public const GraphicsFormat R5G5B5A1_UNormPack16 = 70;
	public const GraphicsFormat B5G5R5A1_UNormPack16 = 71;
	public const GraphicsFormat A1R5G5B5_UNormPack16 = 72;
	public const GraphicsFormat E5B9G9R9_UFloatPack32 = 73;
	public const GraphicsFormat B10G11R11_UFloatPack32 = 74;
	public const GraphicsFormat A2B10G10R10_UNormPack32 = 75;
	public const GraphicsFormat A2B10G10R10_UIntPack32 = 76;
	public const GraphicsFormat A2B10G10R10_SIntPack32 = 77;
	public const GraphicsFormat A2R10G10B10_UNormPack32 = 78;
	public const GraphicsFormat A2R10G10B10_UIntPack32 = 79;
	public const GraphicsFormat A2R10G10B10_SIntPack32 = 80;
	public const GraphicsFormat A2R10G10B10_XRSRGBPack32 = 81;
	public const GraphicsFormat A2R10G10B10_XRUNormPack32 = 82;
	public const GraphicsFormat R10G10B10_XRSRGBPack32 = 83;
	public const GraphicsFormat R10G10B10_XRUNormPack32 = 84;
	public const GraphicsFormat A10R10G10B10_XRSRGBPack32 = 85;
	public const GraphicsFormat A10R10G10B10_XRUNormPack32 = 86;
	public const GraphicsFormat D16_UNorm = 90;
	public const GraphicsFormat D24_UNorm = 91;
	public const GraphicsFormat D24_UNorm_S8_UInt = 92;
	public const GraphicsFormat D32_SFloat = 93;
	public const GraphicsFormat D32_SFloat_S8_Uint = 94;
	public const GraphicsFormat S8_Uint = 95;
	[ObsoleteAttribute] // RVA: 0xBDC880 Offset: 0xBDC880 VA: 0xBDC880
	[EditorBrowsableAttribute] // RVA: 0xBDC880 Offset: 0xBDC880 VA: 0xBDC880
	public const GraphicsFormat RGB_DXT1_SRGB = 96;
	public const GraphicsFormat RGBA_DXT1_SRGB = 96;
	[ObsoleteAttribute] // RVA: 0xBDC8D4 Offset: 0xBDC8D4 VA: 0xBDC8D4
	[EditorBrowsableAttribute] // RVA: 0xBDC8D4 Offset: 0xBDC8D4 VA: 0xBDC8D4
	public const GraphicsFormat RGB_DXT1_UNorm = 97;
	public const GraphicsFormat RGBA_DXT1_UNorm = 97;
	public const GraphicsFormat RGBA_DXT3_SRGB = 98;
	public const GraphicsFormat RGBA_DXT3_UNorm = 99;
	public const GraphicsFormat RGBA_DXT5_SRGB = 100;
	public const GraphicsFormat RGBA_DXT5_UNorm = 101;
	public const GraphicsFormat R_BC4_UNorm = 102;
	public const GraphicsFormat R_BC4_SNorm = 103;
	public const GraphicsFormat RG_BC5_UNorm = 104;
	public const GraphicsFormat RG_BC5_SNorm = 105;
	public const GraphicsFormat RGB_BC6H_UFloat = 106;
	public const GraphicsFormat RGB_BC6H_SFloat = 107;
	public const GraphicsFormat RGBA_BC7_SRGB = 108;
	public const GraphicsFormat RGBA_BC7_UNorm = 109;
	public const GraphicsFormat RGB_PVRTC_2Bpp_SRGB = 110;
	public const GraphicsFormat RGB_PVRTC_2Bpp_UNorm = 111;
	public const GraphicsFormat RGB_PVRTC_4Bpp_SRGB = 112;
	public const GraphicsFormat RGB_PVRTC_4Bpp_UNorm = 113;
	public const GraphicsFormat RGBA_PVRTC_2Bpp_SRGB = 114;
	public const GraphicsFormat RGBA_PVRTC_2Bpp_UNorm = 115;
	public const GraphicsFormat RGBA_PVRTC_4Bpp_SRGB = 116;
	public const GraphicsFormat RGBA_PVRTC_4Bpp_UNorm = 117;
	public const GraphicsFormat RGB_ETC_UNorm = 118;
	public const GraphicsFormat RGB_ETC2_SRGB = 119;
	public const GraphicsFormat RGB_ETC2_UNorm = 120;
	public const GraphicsFormat RGB_A1_ETC2_SRGB = 121;
	public const GraphicsFormat RGB_A1_ETC2_UNorm = 122;
	public const GraphicsFormat RGBA_ETC2_SRGB = 123;
	public const GraphicsFormat RGBA_ETC2_UNorm = 124;
	public const GraphicsFormat R_EAC_UNorm = 125;
	public const GraphicsFormat R_EAC_SNorm = 126;
	public const GraphicsFormat RG_EAC_UNorm = 127;
	public const GraphicsFormat RG_EAC_SNorm = 128;
	public const GraphicsFormat RGBA_ASTC4X4_SRGB = 129;
	public const GraphicsFormat RGBA_ASTC4X4_UNorm = 130;
	public const GraphicsFormat RGBA_ASTC5X5_SRGB = 131;
	public const GraphicsFormat RGBA_ASTC5X5_UNorm = 132;
	public const GraphicsFormat RGBA_ASTC6X6_SRGB = 133;
	public const GraphicsFormat RGBA_ASTC6X6_UNorm = 134;
	public const GraphicsFormat RGBA_ASTC8X8_SRGB = 135;
	public const GraphicsFormat RGBA_ASTC8X8_UNorm = 136;
	public const GraphicsFormat RGBA_ASTC10X10_SRGB = 137;
	public const GraphicsFormat RGBA_ASTC10X10_UNorm = 138;
	public const GraphicsFormat RGBA_ASTC12X12_SRGB = 139;
	public const GraphicsFormat RGBA_ASTC12X12_UNorm = 140;
}

// Namespace: UnityEngine
[FlagsAttribute] // RVA: 0xBD8ED4 Offset: 0xBD8ED4 VA: 0xBD8ED4
public enum LightmapsMode // TypeDefIndex: 2192
{
	// Fields
	public int value__; // 0x0
	public const LightmapsMode NonDirectional = 0;
	public const LightmapsMode CombinedDirectional = 1;
}

// Namespace: UnityEngine
public enum LineTextureMode // TypeDefIndex: 2193
{
	// Fields
	public int value__; // 0x0
	public const LineTextureMode Stretch = 0;
	public const LineTextureMode Tile = 1;
	public const LineTextureMode DistributePerSegment = 2;
	public const LineTextureMode RepeatPerSegment = 3;
}

// Namespace: UnityEngine
public enum LineAlignment // TypeDefIndex: 2194
{
	// Fields
	public int value__; // 0x0
	public const LineAlignment View = 0;
	[ObsoleteAttribute] // RVA: 0xBDC928 Offset: 0xBDC928 VA: 0xBDC928
	public const LineAlignment Local = 1;
	public const LineAlignment TransformZ = 1;
}

// Namespace: UnityEngine.Rendering
[MovedFromAttribute] // RVA: 0xBD8EE4 Offset: 0xBD8EE4 VA: 0xBD8EE4
public enum VertexAttribute // TypeDefIndex: 2195
{
	// Fields
	public int value__; // 0x0
	public const VertexAttribute Position = 0;
	public const VertexAttribute Normal = 1;
	public const VertexAttribute Tangent = 2;
	public const VertexAttribute Color = 3;
	public const VertexAttribute TexCoord0 = 4;
	public const VertexAttribute TexCoord1 = 5;
	public const VertexAttribute TexCoord2 = 6;
	public const VertexAttribute TexCoord3 = 7;
	public const VertexAttribute TexCoord4 = 8;
	public const VertexAttribute TexCoord5 = 9;
	public const VertexAttribute TexCoord6 = 10;
	public const VertexAttribute TexCoord7 = 11;
	public const VertexAttribute BlendWeight = 12;
	public const VertexAttribute BlendIndices = 13;
}

// Namespace: UnityEngine.Rendering
public enum RenderBufferLoadAction // TypeDefIndex: 2196
{
	// Fields
	public int value__; // 0x0
	public const RenderBufferLoadAction Load = 0;
	public const RenderBufferLoadAction Clear = 1;
	public const RenderBufferLoadAction DontCare = 2;
}

// Namespace: UnityEngine.Rendering
public enum RenderBufferStoreAction // TypeDefIndex: 2197
{
	// Fields
	public int value__; // 0x0
	public const RenderBufferStoreAction Store = 0;
	public const RenderBufferStoreAction Resolve = 1;
	public const RenderBufferStoreAction StoreAndResolve = 2;
	public const RenderBufferStoreAction DontCare = 3;
}

// Namespace: UnityEngine.Rendering
public enum CompareFunction // TypeDefIndex: 2198
{
	// Fields
	public int value__; // 0x0
	public const CompareFunction Disabled = 0;
	public const CompareFunction Never = 1;
	public const CompareFunction Less = 2;
	public const CompareFunction Equal = 3;
	public const CompareFunction LessEqual = 4;
	public const CompareFunction Greater = 5;
	public const CompareFunction NotEqual = 6;
	public const CompareFunction GreaterEqual = 7;
	public const CompareFunction Always = 8;
}

// Namespace: UnityEngine.Rendering
[FlagsAttribute] // RVA: 0xBD8F1C Offset: 0xBD8F1C VA: 0xBD8F1C
public enum ColorWriteMask // TypeDefIndex: 2199
{
	// Fields
	public int value__; // 0x0
	public const ColorWriteMask Alpha = 1;
	public const ColorWriteMask Blue = 2;
	public const ColorWriteMask Green = 4;
	public const ColorWriteMask Red = 8;
	public const ColorWriteMask All = 15;
}

// Namespace: UnityEngine.Rendering
public enum StencilOp // TypeDefIndex: 2200
{
	// Fields
	public int value__; // 0x0
	public const StencilOp Keep = 0;
	public const StencilOp Zero = 1;
	public const StencilOp Replace = 2;
	public const StencilOp IncrementSaturate = 3;
	public const StencilOp DecrementSaturate = 4;
	public const StencilOp Invert = 5;
	public const StencilOp IncrementWrap = 6;
	public const StencilOp DecrementWrap = 7;
}

// Namespace: UnityEngine.Rendering
public enum AmbientMode // TypeDefIndex: 2201
{
	// Fields
	public int value__; // 0x0
	public const AmbientMode Skybox = 0;
	public const AmbientMode Trilight = 1;
	public const AmbientMode Flat = 3;
	public const AmbientMode Custom = 4;
}

// Namespace: UnityEngine.Rendering
public enum CameraEvent // TypeDefIndex: 2202
{
	// Fields
	public int value__; // 0x0
	public const CameraEvent BeforeDepthTexture = 0;
	public const CameraEvent AfterDepthTexture = 1;
	public const CameraEvent BeforeDepthNormalsTexture = 2;
	public const CameraEvent AfterDepthNormalsTexture = 3;
	public const CameraEvent BeforeGBuffer = 4;
	public const CameraEvent AfterGBuffer = 5;
	public const CameraEvent BeforeLighting = 6;
	public const CameraEvent AfterLighting = 7;
	public const CameraEvent BeforeFinalPass = 8;
	public const CameraEvent AfterFinalPass = 9;
	public const CameraEvent BeforeForwardOpaque = 10;
	public const CameraEvent AfterForwardOpaque = 11;
	public const CameraEvent BeforeImageEffectsOpaque = 12;
	public const CameraEvent AfterImageEffectsOpaque = 13;
	public const CameraEvent BeforeSkybox = 14;
	public const CameraEvent AfterSkybox = 15;
	public const CameraEvent BeforeForwardAlpha = 16;
	public const CameraEvent AfterForwardAlpha = 17;
	public const CameraEvent BeforeImageEffects = 18;
	public const CameraEvent AfterImageEffects = 19;
	public const CameraEvent AfterEverything = 20;
	public const CameraEvent BeforeReflections = 21;
	public const CameraEvent AfterReflections = 22;
	public const CameraEvent BeforeHaloAndLensFlares = 23;
	public const CameraEvent AfterHaloAndLensFlares = 24;
}

// Namespace: UnityEngine.Rendering
internal static class CameraEventUtils // TypeDefIndex: 2203
{
	// Methods

	// RVA: 0x2164CEC Offset: 0x2164CEC VA: 0x2164CEC
	public static bool IsValid(CameraEvent value) { }
}

// Namespace: UnityEngine.Rendering
public enum BuiltinRenderTextureType // TypeDefIndex: 2204
{
	// Fields
	public int value__; // 0x0
	public const BuiltinRenderTextureType PropertyName = -4;
	public const BuiltinRenderTextureType BufferPtr = -3;
	public const BuiltinRenderTextureType RenderTexture = -2;
	public const BuiltinRenderTextureType BindableTexture = -1;
	public const BuiltinRenderTextureType None = 0;
	public const BuiltinRenderTextureType CurrentActive = 1;
	public const BuiltinRenderTextureType CameraTarget = 2;
	public const BuiltinRenderTextureType Depth = 3;
	public const BuiltinRenderTextureType DepthNormals = 4;
	public const BuiltinRenderTextureType ResolvedDepth = 5;
	public const BuiltinRenderTextureType PrepassNormalsSpec = 7;
	public const BuiltinRenderTextureType PrepassLight = 8;
	public const BuiltinRenderTextureType PrepassLightSpec = 9;
	public const BuiltinRenderTextureType GBuffer0 = 10;
	public const BuiltinRenderTextureType GBuffer1 = 11;
	public const BuiltinRenderTextureType GBuffer2 = 12;
	public const BuiltinRenderTextureType GBuffer3 = 13;
	public const BuiltinRenderTextureType Reflections = 14;
	public const BuiltinRenderTextureType MotionVectors = 15;
	public const BuiltinRenderTextureType GBuffer4 = 16;
	public const BuiltinRenderTextureType GBuffer5 = 17;
	public const BuiltinRenderTextureType GBuffer6 = 18;
	public const BuiltinRenderTextureType GBuffer7 = 19;
}

// Namespace: UnityEngine.Rendering
public enum ShadowCastingMode // TypeDefIndex: 2205
{
	// Fields
	public int value__; // 0x0
	public const ShadowCastingMode Off = 0;
	public const ShadowCastingMode On = 1;
	public const ShadowCastingMode TwoSided = 2;
	public const ShadowCastingMode ShadowsOnly = 3;
}

// Namespace: UnityEngine.Rendering
[UsedByNativeCodeAttribute] // RVA: 0xBD8F2C Offset: 0xBD8F2C VA: 0xBD8F2C
public enum GraphicsDeviceType // TypeDefIndex: 2206
{
	// Fields
	public int value__; // 0x0
	[ObsoleteAttribute] // RVA: 0xBDC964 Offset: 0xBDC964 VA: 0xBDC964
	public const GraphicsDeviceType OpenGL2 = 0;
	[ObsoleteAttribute] // RVA: 0xBDC99C Offset: 0xBDC99C VA: 0xBDC99C
	public const GraphicsDeviceType Direct3D9 = 1;
	public const GraphicsDeviceType Direct3D11 = 2;
	[ObsoleteAttribute] // RVA: 0xBDC9D4 Offset: 0xBDC9D4 VA: 0xBDC9D4
	public const GraphicsDeviceType PlayStation3 = 3;
	public const GraphicsDeviceType Null = 4;
	[ObsoleteAttribute] // RVA: 0xBDCA0C Offset: 0xBDCA0C VA: 0xBDCA0C
	public const GraphicsDeviceType Xbox360 = 6;
	public const GraphicsDeviceType OpenGLES2 = 8;
	public const GraphicsDeviceType OpenGLES3 = 11;
	[ObsoleteAttribute] // RVA: 0xBDCA44 Offset: 0xBDCA44 VA: 0xBDCA44
	public const GraphicsDeviceType PlayStationVita = 12;
	public const GraphicsDeviceType PlayStation4 = 13;
	public const GraphicsDeviceType XboxOne = 14;
	[ObsoleteAttribute] // RVA: 0xBDCA7C Offset: 0xBDCA7C VA: 0xBDCA7C
	public const GraphicsDeviceType PlayStationMobile = 15;
	public const GraphicsDeviceType Metal = 16;
	public const GraphicsDeviceType OpenGLCore = 17;
	public const GraphicsDeviceType Direct3D12 = 18;
	[ObsoleteAttribute] // RVA: 0xBDCAB4 Offset: 0xBDCAB4 VA: 0xBDCAB4
	public const GraphicsDeviceType N3DS = 19;
	public const GraphicsDeviceType Vulkan = 21;
	public const GraphicsDeviceType Switch = 22;
	public const GraphicsDeviceType XboxOneD3D12 = 23;
}

// Namespace: UnityEngine.Rendering
public struct RenderTargetIdentifier : IEquatable<RenderTargetIdentifier> // TypeDefIndex: 2207
{
	// Fields
	private BuiltinRenderTextureType m_Type; // 0x0
	private int m_NameID; // 0x4
	private int m_InstanceID; // 0x8
	private IntPtr m_BufferPointer; // 0x10
	private int m_MipLevel; // 0x18
	private CubemapFace m_CubeFace; // 0x1C
	private int m_DepthSlice; // 0x20

	// Methods

	// RVA: 0xD66650 Offset: 0xD66650 VA: 0xD66650
	public void .ctor(BuiltinRenderTextureType type) { }

	// RVA: 0xD666B4 Offset: 0xD666B4 VA: 0xD666B4
	public void .ctor(int nameID) { }

	// RVA: 0x2165224 Offset: 0x2165224 VA: 0x2165224
	public static RenderTargetIdentifier op_Implicit(BuiltinRenderTextureType type) { }

	// RVA: 0x2165290 Offset: 0x2165290 VA: 0x2165290
	public static RenderTargetIdentifier op_Implicit(int nameID) { }

	// RVA: 0xD6671C Offset: 0xD6671C VA: 0xD6671C Slot: 3
	public override string ToString() { }

	// RVA: 0xD66724 Offset: 0xD66724 VA: 0xD66724 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0xD6672C Offset: 0xD6672C VA: 0xD6672C Slot: 4
	public bool Equals(RenderTargetIdentifier rhs) { }

	// RVA: 0xD6676C Offset: 0xD6676C VA: 0xD6676C Slot: 0
	public override bool Equals(object obj) { }
}

// Namespace: UnityEngine.Rendering
public enum ReflectionProbeUsage // TypeDefIndex: 2208
{
	// Fields
	public int value__; // 0x0
	public const ReflectionProbeUsage Off = 0;
	public const ReflectionProbeUsage BlendProbes = 1;
	public const ReflectionProbeUsage BlendProbesAndSkybox = 2;
	public const ReflectionProbeUsage Simple = 3;
}

// Namespace: UnityEngine.Rendering
public enum ShadowSamplingMode // TypeDefIndex: 2209
{
	// Fields
	public int value__; // 0x0
	public const ShadowSamplingMode CompareDepths = 0;
	public const ShadowSamplingMode RawDepth = 1;
	public const ShadowSamplingMode None = 2;
}

// Namespace: UnityEngine.Rendering
public enum LightProbeUsage // TypeDefIndex: 2210
{
	// Fields
	public int value__; // 0x0
	public const LightProbeUsage Off = 0;
	public const LightProbeUsage BlendProbes = 1;
	public const LightProbeUsage UseProxyVolume = 2;
	public const LightProbeUsage CustomProvided = 4;
}

// Namespace: UnityEngine.Rendering
public enum TextureDimension // TypeDefIndex: 2211
{
	// Fields
	public int value__; // 0x0
	public const TextureDimension Unknown = -1;
	public const TextureDimension None = 0;
	public const TextureDimension Any = 1;
	public const TextureDimension Tex2D = 2;
	public const TextureDimension Tex3D = 3;
	public const TextureDimension Cube = 4;
	public const TextureDimension Tex2DArray = 5;
	public const TextureDimension CubeArray = 6;
}

// Namespace: UnityEngineInternal
internal enum LightmapType // TypeDefIndex: 2212
{
	// Fields
	public int value__; // 0x0
	public const LightmapType NoLightmap = -1;
	public const LightmapType StaticLightmap = 0;
	public const LightmapType DynamicLightmap = 1;
}

// Namespace: UnityEngine.Experimental.Rendering
[NativeHeaderAttribute] // RVA: 0xBD8F3C Offset: 0xBD8F3C VA: 0xBD8F3C
[NativeHeaderAttribute] // RVA: 0xBD8F3C Offset: 0xBD8F3C VA: 0xBD8F3C
public class GraphicsFormatUtility // TypeDefIndex: 2213
{
	// Methods

	// RVA: 0x24C6970 Offset: 0x24C6970 VA: 0x24C6970
	public static GraphicsFormat GetGraphicsFormat(TextureFormat format, bool isSRGB) { }

	[FreeFunctionAttribute] // RVA: 0xBE1E40 Offset: 0xBE1E40 VA: 0xBE1E40
	// RVA: 0x24CBDD4 Offset: 0x24CBDD4 VA: 0x24CBDD4
	private static GraphicsFormat GetGraphicsFormat_Native_TextureFormat(TextureFormat format, bool isSRGB) { }

	[FreeFunctionAttribute] // RVA: 0xBE1E50 Offset: 0xBE1E50 VA: 0xBE1E50
	// RVA: 0x24CBE48 Offset: 0x24CBE48 VA: 0x24CBE48
	public static bool IsSRGBFormat(GraphicsFormat format) { }

	[FreeFunctionAttribute] // RVA: 0xBE1E60 Offset: 0xBE1E60 VA: 0xBE1E60
	// RVA: 0x24CBEB4 Offset: 0x24CBEB4 VA: 0x24CBEB4
	public static RenderTextureFormat GetRenderTextureFormat(GraphicsFormat format) { }

	[FreeFunctionAttribute] // RVA: 0xBE1E70 Offset: 0xBE1E70 VA: 0xBE1E70
	// RVA: 0x24CBF20 Offset: 0x24CBF20 VA: 0x24CBF20
	internal static bool IsCompressedTextureFormat(TextureFormat format) { }

	// RVA: 0x24C6978 Offset: 0x24C6978 VA: 0x24C6978
	public static bool IsCrunchFormat(TextureFormat format) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBD8F9C Offset: 0xBD8F9C VA: 0xBD8F9C
public class SkinnedMeshRenderer : Renderer // TypeDefIndex: 2214
{
	// Properties
	public bool updateWhenOffscreen { get; set; }
	public Transform rootBone { get; set; }
	public Bounds localBounds { get; set; }

	// Methods

	// RVA: 0x2169B30 Offset: 0x2169B30 VA: 0x2169B30
	public bool get_updateWhenOffscreen() { }

	// RVA: 0x2169B9C Offset: 0x2169B9C VA: 0x2169B9C
	public void set_updateWhenOffscreen(bool value) { }

	// RVA: 0x2169C10 Offset: 0x2169C10 VA: 0x2169C10
	public Transform get_rootBone() { }

	// RVA: 0x2169C7C Offset: 0x2169C7C VA: 0x2169C7C
	public void set_rootBone(Transform value) { }

	// RVA: 0x2169CF0 Offset: 0x2169CF0 VA: 0x2169CF0
	public void BakeMesh(Mesh mesh) { }

	[FreeFunctionAttribute] // RVA: 0xBE1EA8 Offset: 0xBE1EA8 VA: 0xBE1EA8
	// RVA: 0x2169D64 Offset: 0x2169D64 VA: 0x2169D64
	private Bounds GetLocalAABB() { }

	// RVA: 0x2169E18 Offset: 0x2169E18 VA: 0x2169E18
	private void SetLocalAABB(Bounds b) { }

	// RVA: 0x2169E90 Offset: 0x2169E90 VA: 0x2169E90
	public Bounds get_localBounds() { }

	// RVA: 0x2169EE4 Offset: 0x2169EE4 VA: 0x2169EE4
	public void set_localBounds(Bounds value) { }

	// RVA: 0x2169DA4 Offset: 0x2169DA4 VA: 0x2169DA4
	private void GetLocalAABB_Injected(out Bounds ret) { }

	// RVA: 0x2169E1C Offset: 0x2169E1C VA: 0x2169E1C
	private void SetLocalAABB_Injected(ref Bounds b) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBD8FD4 Offset: 0xBD8FD4 VA: 0xBD8FD4
public class MeshRenderer : Renderer // TypeDefIndex: 2215
{
	// Methods

	[RequiredByNativeCodeAttribute] // RVA: 0xBE1EFC Offset: 0xBE1EFC VA: 0xBE1EFC
	// RVA: 0x256D6FC Offset: 0x256D6FC VA: 0x256D6FC
	private void DontStripMeshRenderer() { }
}

// Namespace: UnityEngine
internal struct TouchScreenKeyboard_InternalConstructorHelperArguments // TypeDefIndex: 2216
{
	// Fields
	public uint keyboardType; // 0x0
	public uint autocorrection; // 0x4
	public uint multiline; // 0x8
	public uint secure; // 0xC
	public uint alert; // 0x10
	public int characterLimit; // 0x14
}

// Namespace: UnityEngine
public enum FullScreenMovieControlMode // TypeDefIndex: 2217
{
	// Fields
	public int value__; // 0x0
	public const FullScreenMovieControlMode Full = 0;
	public const FullScreenMovieControlMode Minimal = 1;
	public const FullScreenMovieControlMode CancelOnInput = 2;
	public const FullScreenMovieControlMode Hidden = 3;
}

// Namespace: UnityEngine
public enum FullScreenMovieScalingMode // TypeDefIndex: 2218
{
	// Fields
	public int value__; // 0x0
	public const FullScreenMovieScalingMode None = 0;
	public const FullScreenMovieScalingMode AspectFit = 1;
	public const FullScreenMovieScalingMode AspectFill = 2;
	public const FullScreenMovieScalingMode Fill = 3;
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBD900C Offset: 0xBD900C VA: 0xBD900C
[NativeHeaderAttribute] // RVA: 0xBD900C Offset: 0xBD900C VA: 0xBD900C
[NativeHeaderAttribute] // RVA: 0xBD900C Offset: 0xBD900C VA: 0xBD900C
[NativeHeaderAttribute] // RVA: 0xBD900C Offset: 0xBD900C VA: 0xBD900C
public class Handheld // TypeDefIndex: 2219
{
	// Methods

	// RVA: 0x25647DC Offset: 0x25647DC VA: 0x25647DC
	public static bool PlayFullScreenMovie(string path, Color bgColor, FullScreenMovieControlMode controlMode, FullScreenMovieScalingMode scalingMode) { }

	[FreeFunctionAttribute] // RVA: 0xBE1F0C Offset: 0xBE1F0C VA: 0xBE1F0C
	// RVA: 0x2564818 Offset: 0x2564818 VA: 0x2564818
	private static bool PlayFullScreenMovie_Bindings(string path, Color bgColor, FullScreenMovieControlMode controlMode, FullScreenMovieScalingMode scalingMode) { }

	// RVA: 0x2564854 Offset: 0x2564854 VA: 0x2564854
	private static bool PlayFullScreenMovie_Bindings_Injected(string path, ref Color bgColor, FullScreenMovieControlMode controlMode, FullScreenMovieScalingMode scalingMode) { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBD90B4 Offset: 0xBD90B4 VA: 0xBD90B4
[NativeHeaderAttribute] // RVA: 0xBD90B4 Offset: 0xBD90B4 VA: 0xBD90B4
public class TouchScreenKeyboard // TypeDefIndex: 2220
{
	// Fields
	internal IntPtr m_Ptr; // 0x10
	[DebuggerBrowsableAttribute] // RVA: 0xBDCAEC Offset: 0xBDCAEC VA: 0xBDCAEC
	[CompilerGeneratedAttribute] // RVA: 0xBDCAEC Offset: 0xBDCAEC VA: 0xBDCAEC
	private readonly bool <canGetSelection>k__BackingField; // 0x18
	[DebuggerBrowsableAttribute] // RVA: 0xBDCB28 Offset: 0xBDCB28 VA: 0xBDCB28
	[CompilerGeneratedAttribute] // RVA: 0xBDCB28 Offset: 0xBDCB28 VA: 0xBDCB28
	private readonly bool <canSetSelection>k__BackingField; // 0x19
	[CompilerGeneratedAttribute] // RVA: 0xBDCB64 Offset: 0xBDCB64 VA: 0xBDCB64
	[DebuggerBrowsableAttribute] // RVA: 0xBDCB64 Offset: 0xBDCB64 VA: 0xBDCB64
	private readonly TouchScreenKeyboardType <type>k__BackingField; // 0x1C

	// Properties
	public static bool isSupported { get; }
	public string text { get; set; }
	public static bool hideInput { set; }
	public bool active { get; set; }
	[ObsoleteAttribute] // RVA: 0xBE84D4 Offset: 0xBE84D4 VA: 0xBE84D4
	public bool done { get; }
	[ObsoleteAttribute] // RVA: 0xBE850C Offset: 0xBE850C VA: 0xBE850C
	public bool wasCanceled { get; }
	public TouchScreenKeyboard.Status status { get; }
	public int characterLimit { set; }
	public bool canGetSelection { get; }
	public bool canSetSelection { get; }
	public RangeInt selection { get; set; }

	// Methods

	// RVA: 0x2170018 Offset: 0x2170018 VA: 0x2170018
	public void .ctor(string text, TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert, string textPlaceholder, int characterLimit) { }

	[FreeFunctionAttribute] // RVA: 0xBE1F44 Offset: 0xBE1F44 VA: 0xBE1F44
	// RVA: 0x21701DC Offset: 0x21701DC VA: 0x21701DC
	private static void Internal_Destroy(IntPtr ptr) { }

	// RVA: 0x2170248 Offset: 0x2170248 VA: 0x2170248
	private void Destroy() { }

	// RVA: 0x21702B0 Offset: 0x21702B0 VA: 0x21702B0 Slot: 1
	protected override void Finalize() { }

	[FreeFunctionAttribute] // RVA: 0xBE1F8C Offset: 0xBE1F8C VA: 0xBE1F8C
	// RVA: 0x2170158 Offset: 0x2170158 VA: 0x2170158
	private static IntPtr TouchScreenKeyboard_InternalConstructorHelper(ref TouchScreenKeyboard_InternalConstructorHelperArguments arguments, string text, string textPlaceholder) { }

	// RVA: 0x2170324 Offset: 0x2170324 VA: 0x2170324
	public static bool get_isSupported() { }

	// RVA: 0x2170384 Offset: 0x2170384 VA: 0x2170384
	public static TouchScreenKeyboard Open(string text, TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert, string textPlaceholder, int characterLimit) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBE1FC4 Offset: 0xBE1FC4 VA: 0xBE1FC4
	// RVA: 0x2170444 Offset: 0x2170444 VA: 0x2170444
	public static TouchScreenKeyboard Open(string text, TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert, string textPlaceholder) { }

	[ExcludeFromDocsAttribute] // RVA: 0xBE1FD4 Offset: 0xBE1FD4 VA: 0xBE1FD4
	// RVA: 0x2170474 Offset: 0x2170474 VA: 0x2170474
	public static TouchScreenKeyboard Open(string text, TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure) { }

	[NativeNameAttribute] // RVA: 0xBE1FE4 Offset: 0xBE1FE4 VA: 0xBE1FE4
	// RVA: 0x2170508 Offset: 0x2170508 VA: 0x2170508
	public string get_text() { }

	[NativeNameAttribute] // RVA: 0xBE201C Offset: 0xBE201C VA: 0xBE201C
	// RVA: 0x2170574 Offset: 0x2170574 VA: 0x2170574
	public void set_text(string value) { }

	[NativeNameAttribute] // RVA: 0xBE2054 Offset: 0xBE2054 VA: 0xBE2054
	// RVA: 0x21705E8 Offset: 0x21705E8 VA: 0x21705E8
	public static void set_hideInput(bool value) { }

	[NativeNameAttribute] // RVA: 0xBE208C Offset: 0xBE208C VA: 0xBE208C
	// RVA: 0x2170654 Offset: 0x2170654 VA: 0x2170654
	public bool get_active() { }

	[NativeNameAttribute] // RVA: 0xBE20C4 Offset: 0xBE20C4 VA: 0xBE20C4
	// RVA: 0x21706C0 Offset: 0x21706C0 VA: 0x21706C0
	public void set_active(bool value) { }

	[FreeFunctionAttribute] // RVA: 0xBE20FC Offset: 0xBE20FC VA: 0xBE20FC
	// RVA: 0x2170734 Offset: 0x2170734 VA: 0x2170734
	private static bool GetDone(IntPtr ptr) { }

	// RVA: 0x21707A0 Offset: 0x21707A0 VA: 0x21707A0
	public bool get_done() { }

	[FreeFunctionAttribute] // RVA: 0xBE2134 Offset: 0xBE2134 VA: 0xBE2134
	// RVA: 0x21707A8 Offset: 0x21707A8 VA: 0x21707A8
	private static bool GetWasCanceled(IntPtr ptr) { }

	// RVA: 0x2170814 Offset: 0x2170814 VA: 0x2170814
	public bool get_wasCanceled() { }

	[NativeNameAttribute] // RVA: 0xBE216C Offset: 0xBE216C VA: 0xBE216C
	// RVA: 0x217081C Offset: 0x217081C VA: 0x217081C
	public TouchScreenKeyboard.Status get_status() { }

	[NativeNameAttribute] // RVA: 0xBE21A4 Offset: 0xBE21A4 VA: 0xBE21A4
	// RVA: 0x2170888 Offset: 0x2170888 VA: 0x2170888
	public void set_characterLimit(int value) { }

	[NativeNameAttribute] // RVA: 0xBE21DC Offset: 0xBE21DC VA: 0xBE21DC
	[CompilerGeneratedAttribute] // RVA: 0xBE21DC Offset: 0xBE21DC VA: 0xBE21DC
	// RVA: 0x21708FC Offset: 0x21708FC VA: 0x21708FC
	public bool get_canGetSelection() { }

	[CompilerGeneratedAttribute] // RVA: 0xBE2228 Offset: 0xBE2228 VA: 0xBE2228
	[NativeNameAttribute] // RVA: 0xBE2228 Offset: 0xBE2228 VA: 0xBE2228
	// RVA: 0x2170904 Offset: 0x2170904 VA: 0x2170904
	public bool get_canSetSelection() { }

	// RVA: 0x217090C Offset: 0x217090C VA: 0x217090C
	public RangeInt get_selection() { }

	// RVA: 0x21709B0 Offset: 0x21709B0 VA: 0x21709B0
	public void set_selection(RangeInt value) { }

	// RVA: 0x217093C Offset: 0x217093C VA: 0x217093C
	private static void GetSelection(out int start, out int length) { }

	// RVA: 0x2170A8C Offset: 0x2170A8C VA: 0x2170A8C
	private static void SetSelection(int start, int length) { }
}

// Namespace: 
public enum TouchScreenKeyboard.Status // TypeDefIndex: 2221
{
	// Fields
	public int value__; // 0x0
	public const TouchScreenKeyboard.Status Visible = 0;
	public const TouchScreenKeyboard.Status Done = 1;
	public const TouchScreenKeyboard.Status Canceled = 2;
	public const TouchScreenKeyboard.Status LostFocus = 3;
}

// Namespace: UnityEngine
public enum TouchPhase // TypeDefIndex: 2222
{
	// Fields
	public int value__; // 0x0
	public const TouchPhase Began = 0;
	public const TouchPhase Moved = 1;
	public const TouchPhase Stationary = 2;
	public const TouchPhase Ended = 3;
	public const TouchPhase Canceled = 4;
}

// Namespace: UnityEngine
public enum IMECompositionMode // TypeDefIndex: 2223
{
	// Fields
	public int value__; // 0x0
	public const IMECompositionMode Auto = 0;
	public const IMECompositionMode On = 1;
	public const IMECompositionMode Off = 2;
}

// Namespace: UnityEngine
public enum TouchType // TypeDefIndex: 2224
{
	// Fields
	public int value__; // 0x0
	public const TouchType Direct = 0;
	public const TouchType Indirect = 1;
	public const TouchType Stylus = 2;
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBD9114 Offset: 0xBD9114 VA: 0xBD9114
public struct Touch // TypeDefIndex: 2225
{
	// Fields
	private int m_FingerId; // 0x0
	private Vector2 m_Position; // 0x4
	private Vector2 m_RawPosition; // 0xC
	private Vector2 m_PositionDelta; // 0x14
	private float m_TimeDelta; // 0x1C
	private int m_TapCount; // 0x20
	private TouchPhase m_Phase; // 0x24
	private TouchType m_Type; // 0x28
	private float m_Pressure; // 0x2C
	private float m_maximumPossiblePressure; // 0x30
	private float m_Radius; // 0x34
	private float m_RadiusVariance; // 0x38
	private float m_AltitudeAngle; // 0x3C
	private float m_AzimuthAngle; // 0x40

	// Properties
	public int fingerId { get; }
	public Vector2 position { get; }
	public Vector2 deltaPosition { get; }
	public float deltaTime { get; }
	public int tapCount { get; }
	public TouchPhase phase { get; }
	public TouchType type { get; }

	// Methods

	// RVA: 0xD668B8 Offset: 0xD668B8 VA: 0xD668B8
	public int get_fingerId() { }

	// RVA: 0xD668C0 Offset: 0xD668C0 VA: 0xD668C0
	public Vector2 get_position() { }

	// RVA: 0xD668C8 Offset: 0xD668C8 VA: 0xD668C8
	public Vector2 get_deltaPosition() { }

	// RVA: 0xD668D0 Offset: 0xD668D0 VA: 0xD668D0
	public float get_deltaTime() { }

	// RVA: 0xD668D8 Offset: 0xD668D8 VA: 0xD668D8
	public int get_tapCount() { }

	// RVA: 0xD668E0 Offset: 0xD668E0 VA: 0xD668E0
	public TouchPhase get_phase() { }

	// RVA: 0xD668E8 Offset: 0xD668E8 VA: 0xD668E8
	public TouchType get_type() { }
}

// Namespace: UnityEngine
public enum DeviceOrientation // TypeDefIndex: 2226
{
	// Fields
	public int value__; // 0x0
	public const DeviceOrientation Unknown = 0;
	public const DeviceOrientation Portrait = 1;
	public const DeviceOrientation PortraitUpsideDown = 2;
	public const DeviceOrientation LandscapeLeft = 3;
	public const DeviceOrientation LandscapeRight = 4;
	public const DeviceOrientation FaceUp = 5;
	public const DeviceOrientation FaceDown = 6;
}

// Namespace: UnityEngine
public struct LocationInfo // TypeDefIndex: 2227
{
	// Fields
	internal double m_Timestamp; // 0x0
	internal float m_Latitude; // 0x8
	internal float m_Longitude; // 0xC
	internal float m_Altitude; // 0x10
	internal float m_HorizontalAccuracy; // 0x14
	internal float m_VerticalAccuracy; // 0x18

	// Properties
	public float latitude { get; }
	public float longitude { get; }
	public float altitude { get; }
	public float horizontalAccuracy { get; }
	public float verticalAccuracy { get; }
	public double timestamp { get; }

	// Methods

	// RVA: 0xD6E760 Offset: 0xD6E760 VA: 0xD6E760
	public float get_latitude() { }

	// RVA: 0xD6E768 Offset: 0xD6E768 VA: 0xD6E768
	public float get_longitude() { }

	// RVA: 0xD6E770 Offset: 0xD6E770 VA: 0xD6E770
	public float get_altitude() { }

	// RVA: 0xD6E778 Offset: 0xD6E778 VA: 0xD6E778
	public float get_horizontalAccuracy() { }

	// RVA: 0xD6E780 Offset: 0xD6E780 VA: 0xD6E780
	public float get_verticalAccuracy() { }

	// RVA: 0xD6E788 Offset: 0xD6E788 VA: 0xD6E788
	public double get_timestamp() { }
}

// Namespace: UnityEngine
[NativeHeaderAttribute] // RVA: 0xBD914C Offset: 0xBD914C VA: 0xBD914C
public class Input // TypeDefIndex: 2228
{
	// Properties
	public static bool anyKeyDown { get; }
	public static string inputString { get; }
	public static Vector3 mousePosition { get; }
	public static Vector2 mouseScrollDelta { get; }
	public static IMECompositionMode imeCompositionMode { get; set; }
	public static string compositionString { get; }
	public static Vector2 compositionCursorPos { get; set; }
	public static bool mousePresent { get; }
	public static int touchCount { get; }
	public static bool touchSupported { get; }
	public static bool multiTouchEnabled { get; set; }
	public static DeviceOrientation deviceOrientation { get; }
	public static Vector3 acceleration { get; }
	public static Touch[] touches { get; }

	// Methods

	[NativeThrowsAttribute] // RVA: 0xBE2274 Offset: 0xBE2274 VA: 0xBE2274
	// RVA: 0x2564950 Offset: 0x2564950 VA: 0x2564950
	private static bool GetKeyInt(KeyCode key) { }

	[NativeThrowsAttribute] // RVA: 0xBE2284 Offset: 0xBE2284 VA: 0xBE2284
	// RVA: 0x25649BC Offset: 0x25649BC VA: 0x25649BC
	private static bool GetKeyUpInt(KeyCode key) { }

	[NativeThrowsAttribute] // RVA: 0xBE2294 Offset: 0xBE2294 VA: 0xBE2294
	// RVA: 0x2564A28 Offset: 0x2564A28 VA: 0x2564A28
	private static bool GetKeyDownInt(KeyCode key) { }

	[NativeThrowsAttribute] // RVA: 0xBE22A4 Offset: 0xBE22A4 VA: 0xBE22A4
	// RVA: 0x2564A94 Offset: 0x2564A94 VA: 0x2564A94
	public static float GetAxis(string axisName) { }

	[NativeThrowsAttribute] // RVA: 0xBE22B4 Offset: 0xBE22B4 VA: 0xBE22B4
	// RVA: 0x2564B00 Offset: 0x2564B00 VA: 0x2564B00
	public static float GetAxisRaw(string axisName) { }

	[NativeThrowsAttribute] // RVA: 0xBE22C4 Offset: 0xBE22C4 VA: 0xBE22C4
	// RVA: 0x2564B6C Offset: 0x2564B6C VA: 0x2564B6C
	public static bool GetButton(string buttonName) { }

	[NativeThrowsAttribute] // RVA: 0xBE22D4 Offset: 0xBE22D4 VA: 0xBE22D4
	// RVA: 0x2564BD8 Offset: 0x2564BD8 VA: 0x2564BD8
	public static bool GetButtonDown(string buttonName) { }

	[NativeThrowsAttribute] // RVA: 0xBE22E4 Offset: 0xBE22E4 VA: 0xBE22E4
	// RVA: 0x2564C44 Offset: 0x2564C44 VA: 0x2564C44
	public static bool GetButtonUp(string buttonName) { }

	[NativeThrowsAttribute] // RVA: 0xBE22F4 Offset: 0xBE22F4 VA: 0xBE22F4
	// RVA: 0x2564CB0 Offset: 0x2564CB0 VA: 0x2564CB0
	public static bool GetMouseButton(int button) { }

	[NativeThrowsAttribute] // RVA: 0xBE2304 Offset: 0xBE2304 VA: 0xBE2304
	// RVA: 0x2564D1C Offset: 0x2564D1C VA: 0x2564D1C
	public static bool GetMouseButtonDown(int button) { }

	[NativeThrowsAttribute] // RVA: 0xBE2314 Offset: 0xBE2314 VA: 0xBE2314
	// RVA: 0x2564D88 Offset: 0x2564D88 VA: 0x2564D88
	public static bool GetMouseButtonUp(int button) { }

	[FreeFunctionAttribute] // RVA: 0xBE2324 Offset: 0xBE2324 VA: 0xBE2324
	// RVA: 0x2564DF4 Offset: 0x2564DF4 VA: 0x2564DF4
	public static void ResetInputAxes() { }

	[NativeThrowsAttribute] // RVA: 0xBE235C Offset: 0xBE235C VA: 0xBE235C
	// RVA: 0x2564E4C Offset: 0x2564E4C VA: 0x2564E4C
	public static Touch GetTouch(int index) { }

	// RVA: 0x2564F14 Offset: 0x2564F14 VA: 0x2564F14
	public static bool GetKey(KeyCode key) { }

	// RVA: 0x2564F18 Offset: 0x2564F18 VA: 0x2564F18
	public static bool GetKeyUp(KeyCode key) { }

	// RVA: 0x2564F1C Offset: 0x2564F1C VA: 0x2564F1C
	public static bool GetKeyDown(KeyCode key) { }

	// RVA: 0x2564F20 Offset: 0x2564F20 VA: 0x2564F20
	public static bool get_anyKeyDown() { }

	// RVA: 0x2564F78 Offset: 0x2564F78 VA: 0x2564F78
	public static string get_inputString() { }

	// RVA: 0x2564FD0 Offset: 0x2564FD0 VA: 0x2564FD0
	public static Vector3 get_mousePosition() { }

	// RVA: 0x256506C Offset: 0x256506C VA: 0x256506C
	public static Vector2 get_mouseScrollDelta() { }

	// RVA: 0x2565100 Offset: 0x2565100 VA: 0x2565100
	public static IMECompositionMode get_imeCompositionMode() { }

	// RVA: 0x2565158 Offset: 0x2565158 VA: 0x2565158
	public static void set_imeCompositionMode(IMECompositionMode value) { }

	// RVA: 0x25651C4 Offset: 0x25651C4 VA: 0x25651C4
	public static string get_compositionString() { }

	// RVA: 0x256521C Offset: 0x256521C VA: 0x256521C
	public static Vector2 get_compositionCursorPos() { }

	// RVA: 0x25652B0 Offset: 0x25652B0 VA: 0x25652B0
	public static void set_compositionCursorPos(Vector2 value) { }

	[FreeFunctionAttribute] // RVA: 0xBE236C Offset: 0xBE236C VA: 0xBE236C
