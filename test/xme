	private UICommonButton initializeButton; // 0xB0
	[SerializeField] // RVA: 0xCBAA0C Offset: 0xCBAA0C VA: 0xCBAA0C
	private GameObject categoryGrid; // 0xB8
	[SerializeField] // RVA: 0xCBAA1C Offset: 0xCBAA1C VA: 0xCBAA1C
	private GameObject rarityGrid; // 0xC0
	[SerializeField] // RVA: 0xCBAA2C Offset: 0xCBAA2C VA: 0xCBAA2C
	private GameObject templateCategoryButton; // 0xC8
	[SerializeField] // RVA: 0xCBAA3C Offset: 0xCBAA3C VA: 0xCBAA3C
	private GameObject templateRarityButton; // 0xD0
	[SerializeField] // RVA: 0xCBAA4C Offset: 0xCBAA4C VA: 0xCBAA4C
	private UIScrollView filterScrollView; // 0xD8
	protected ListViewSort presentBoxSortInfo; // 0xE0
	private List<ListViewSort.PresentBoxCategoryFilterKind> categoryFilterKindList; // 0xE8
	private List<ListViewSort.PresentBoxRarityFilterKind> rarityFilterKindList; // 0xF0
	protected bool[] kindStatus; // 0xF8
	protected PresentBoxFilterSelectMenu.State state; // 0x100
	[CompilerGeneratedAttribute] // RVA: 0xCBAA5C Offset: 0xCBAA5C VA: 0xCBAA5C
	[DebuggerBrowsableAttribute] // RVA: 0xCBAA5C Offset: 0xCBAA5C VA: 0xCBAA5C
	private PresentBoxFilterSelectMenu.CallbackFunc callbackFunc; // 0x108
	protected Action closeCallbackFunc; // 0x110
	protected ListViewSort baseSortInfo; // 0x118
	protected ListViewSort operationSortInfo; // 0x120
	private List<UISprite> filterBtnSpriteList; // 0x128

	// Methods

	// RVA: 0x19C832C Offset: 0x19C832C VA: 0x19C832C
	public void .ctor() { }

	// RVA: 0x19C877C Offset: 0x19C877C VA: 0x19C877C
	protected void add_callbackFunc(PresentBoxFilterSelectMenu.CallbackFunc value) { }

	// RVA: 0x19C886C Offset: 0x19C886C VA: 0x19C886C
	protected void remove_callbackFunc(PresentBoxFilterSelectMenu.CallbackFunc value) { }

	// RVA: 0x19C895C Offset: 0x19C895C VA: 0x19C895C
	public void Init() { }

	// RVA: 0x19C8968 Offset: 0x19C8968 VA: 0x19C8968
	public void Open(ListViewSort sort, PresentBoxFilterSelectMenu.CallbackFunc callback) { }

	// RVA: 0x19C98E0 Offset: 0x19C98E0 VA: 0x19C98E0
	protected void EndOpen() { }

	// RVA: 0x19C98EC Offset: 0x19C98EC VA: 0x19C98EC
	public void Close() { }

	// RVA: 0x19C98F4 Offset: 0x19C98F4 VA: 0x19C98F4
	public void Close(Action callback) { }

	// RVA: 0x19C9984 Offset: 0x19C9984 VA: 0x19C9984
	protected void EndClose() { }

	// RVA: 0x19C99F0 Offset: 0x19C99F0 VA: 0x19C99F0
	protected void Callback(bool result) { }

	// RVA: 0x19C8F64 Offset: 0x19C8F64 VA: 0x19C8F64
	protected void InitDisp() { }

	// RVA: 0x19C9644 Offset: 0x19C9644 VA: 0x19C9644
	protected void SetButtonSelect() { }

	// RVA: 0x19C9814 Offset: 0x19C9814 VA: 0x19C9814
	protected void SetButtonEnable(bool isEnable) { }

	// RVA: 0x19C9C4C Offset: 0x19C9C4C VA: 0x19C9C4C
	public void OnClickDecide() { }

	// RVA: 0x19C9E7C Offset: 0x19C9E7C VA: 0x19C9E7C
	public void OnClickCancel() { }

	// RVA: 0x19C9F1C Offset: 0x19C9F1C VA: 0x19C9F1C
	public void OnClickAllSelect() { }

	// RVA: 0x19CA0DC Offset: 0x19CA0DC VA: 0x19CA0DC
	public void OnClickInitialize() { }

	// RVA: 0x19CA29C Offset: 0x19CA29C VA: 0x19CA29C
	public void OnClickFilter(ListViewSort.PresentBoxCategoryFilterKind kind) { }

	// RVA: 0x19CA354 Offset: 0x19CA354 VA: 0x19CA354
	public void OnClickRarityFilter(ListViewSort.PresentBoxRarityFilterKind kind) { }

	// RVA: 0x19C8D4C Offset: 0x19C8D4C VA: 0x19C8D4C
	private bool[] SetKindStatus(ListViewSort sort) { }

	// RVA: 0x19C9D8C Offset: 0x19C9D8C VA: 0x19C9D8C
	private bool IsChangedStatus() { }

	// RVA: 0x19CA40C Offset: 0x19CA40C VA: 0x19CA40C
	private void OnEnable() { }
}

// Namespace: 
protected enum PresentBoxFilterSelectMenu.State // TypeDefIndex: 5653
{
	// Fields
	public int value__; // 0x0
	public const PresentBoxFilterSelectMenu.State INIT = 0;
	public const PresentBoxFilterSelectMenu.State OPEN = 1;
	public const PresentBoxFilterSelectMenu.State INPUT = 2;
	public const PresentBoxFilterSelectMenu.State SELECTED = 3;
	public const PresentBoxFilterSelectMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class PresentBoxFilterSelectMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 5654
{
	// Methods

	// RVA: 0x19CA500 Offset: 0x19CA500 VA: 0x19CA500
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x19C9A10 Offset: 0x19C9A10 VA: 0x19C9A10 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x19CA510 Offset: 0x19CA510 VA: 0x19CA510 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x19CA5A0 Offset: 0x19CA5A0 VA: 0x19CA5A0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE0D0 Offset: 0xCAE0D0 VA: 0xCAE0D0
private sealed class PresentBoxFilterSelectMenu.<InitDisp>c__AnonStorey0 // TypeDefIndex: 5655
{
	// Fields
	internal ListViewSort.PresentBoxCategoryFilterKind kind; // 0x10
	internal PresentBoxFilterSelectMenu $this; // 0x18

	// Methods

	// RVA: 0x19C9C3C Offset: 0x19C9C3C VA: 0x19C9C3C
	public void .ctor() { }

	// RVA: 0x19CA498 Offset: 0x19CA498 VA: 0x19CA498
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCAE0E0 Offset: 0xCAE0E0 VA: 0xCAE0E0
private sealed class PresentBoxFilterSelectMenu.<InitDisp>c__AnonStorey1 // TypeDefIndex: 5656
{
	// Fields
	internal ListViewSort.PresentBoxRarityFilterKind kind; // 0x10
	internal PresentBoxFilterSelectMenu $this; // 0x18

	// Methods

	// RVA: 0x19C9C44 Offset: 0x19C9C44 VA: 0x19C9C44
	public void .ctor() { }

	// RVA: 0x19CA4CC Offset: 0x19CA4CC VA: 0x19CA4CC
	internal void <>m__0() { }
}

// Namespace: 
public class ServantBonusFilterEquipComponent : MonoBehaviour // TypeDefIndex: 5657
{
	// Fields
	[SerializeField] // RVA: 0xCBAA98 Offset: 0xCBAA98 VA: 0xCBAA98
	private GameObject parent; // 0x18
	[SerializeField] // RVA: 0xCBAAA8 Offset: 0xCBAAA8 VA: 0xCBAAA8
	private GameObject prefab; // 0x20
	private List<ServantBonusFilterEquipListViewObject> equipList; // 0x28
	public static readonly float POS_Y_INTERVAL; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCBAAB8 Offset: 0xCBAAB8 VA: 0xCBAAB8
	private static Comparison<EventBonusFilterEntity> <>f__am$cache0; // 0x8

	// Methods

	// RVA: 0x1B30EDC Offset: 0x1B30EDC VA: 0x1B30EDC
	public void .ctor() { }

	// RVA: 0x1B30F4C Offset: 0x1B30F4C VA: 0x1B30F4C
	public int CreateList(int[] eventIdList) { }

	// RVA: 0x1B31888 Offset: 0x1B31888 VA: 0x1B31888
	public void SetInitButtonSelect() { }

	// RVA: 0x1B319B0 Offset: 0x1B319B0 VA: 0x1B319B0
	public void SetButtonEnable(bool isEnable) { }

	// RVA: 0x1B31AE4 Offset: 0x1B31AE4 VA: 0x1B31AE4
	public void ResetIndividualFilter() { }

	// RVA: 0x1B31C0C Offset: 0x1B31C0C VA: 0x1B31C0C
	public bool IsSetIndividualFilter() { }

	// RVA: 0x1B31D48 Offset: 0x1B31D48 VA: 0x1B31D48
	public void UpdateFilterSave() { }

	// RVA: 0x1B31E70 Offset: 0x1B31E70 VA: 0x1B31E70
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35828 Offset: 0xD35828 VA: 0xD35828
	// RVA: 0x1B31EC4 Offset: 0x1B31EC4 VA: 0x1B31EC4
	private static int <CreateList>m__0(EventBonusFilterEntity a, EventBonusFilterEntity b) { }
}

// Namespace: 
public class ServantBonusFilterEquipListViewItemDraw : MonoBehaviour // TypeDefIndex: 5658
{
	// Fields
	[SerializeField] // RVA: 0xCBAAC8 Offset: 0xCBAAC8 VA: 0xCBAAC8
	private ServantFaceIconComponent servantFaceIcon; // 0x18
	[SerializeField] // RVA: 0xCBAAD8 Offset: 0xCBAAD8 VA: 0xCBAAD8
	private EventUpValIconComponent eventUpValIcon; // 0x20
	[SerializeField] // RVA: 0xCBAAE8 Offset: 0xCBAAE8 VA: 0xCBAAE8
	private UILabel equipNameLabel; // 0x28
	[SerializeField] // RVA: 0xCBAAF8 Offset: 0xCBAAF8 VA: 0xCBAAF8
	private SkillIconComponent skillIcon; // 0x30
	[SerializeField] // RVA: 0xCBAB08 Offset: 0xCBAB08 VA: 0xCBAB08
	private UILabel skillTextLabel; // 0x38
	[SerializeField] // RVA: 0xCBAB18 Offset: 0xCBAB18 VA: 0xCBAB18
	private UICommonButton changeDisplayButton; // 0x40
	[SerializeField] // RVA: 0xCBAB28 Offset: 0xCBAB28 VA: 0xCBAB28
	private UILabel buttonLabel; // 0x48
	private bool isButtonOn; // 0x50
	private int saveId; // 0x54
	private string saveKey; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xCBAB38 Offset: 0xCBAB38 VA: 0xCBAB38
	private static Comparison<EventMargeItemUpValInfo> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xCBAB48 Offset: 0xCBAB48 VA: 0xCBAB48
	private static Comparison<EventMargeItemUpValInfo> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x1B31F08 Offset: 0x1B31F08 VA: 0x1B31F08
	public void .ctor() { }

	// RVA: 0x1B31F10 Offset: 0x1B31F10 VA: 0x1B31F10
	public void SetItem(int idx, ServantEntity equipEntity, EventUpValInfo[] eventUpValInfos, SkillInfo[] skillInfos) { }

	// RVA: 0x1B32640 Offset: 0x1B32640 VA: 0x1B32640
	public void SetItem(int idx, int[] eventIdList, int filterGroupId) { }

	// RVA: 0x1B32CC4 Offset: 0x1B32CC4 VA: 0x1B32CC4
	public void OnClickChangeDisplay() { }

	// RVA: 0x1B32F04 Offset: 0x1B32F04 VA: 0x1B32F04
	public void SetInitButtonSelect() { }

	// RVA: 0x1B32F68 Offset: 0x1B32F68 VA: 0x1B32F68
	public void SetButtonEnable(bool isEnable) { }

	// RVA: 0x1B32FA0 Offset: 0x1B32FA0 VA: 0x1B32FA0
	public void ResetDisplayButton() { }

	// RVA: 0x1B32FA8 Offset: 0x1B32FA8 VA: 0x1B32FA8
	public bool IsSetFilter() { }

	// RVA: 0x1B32FB0 Offset: 0x1B32FB0 VA: 0x1B32FB0
	public void UpdateFilterSave() { }

	// RVA: 0x1B32D40 Offset: 0x1B32D40 VA: 0x1B32D40
	private void SetButton() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35838 Offset: 0xD35838 VA: 0xD35838
	// RVA: 0x1B3300C Offset: 0x1B3300C VA: 0x1B3300C
	private static int <SetItem>m__0(EventMargeItemUpValInfo a, EventMargeItemUpValInfo b) { }

	[CompilerGeneratedAttribute] // RVA: 0xD35848 Offset: 0xD35848 VA: 0xD35848
	// RVA: 0x1B33040 Offset: 0x1B33040 VA: 0x1B33040
	private static int <SetItem>m__1(EventMargeItemUpValInfo a, EventMargeItemUpValInfo b) { }
}

// Namespace: 
public class ServantBonusFilterEquipListViewObject : ListViewObject // TypeDefIndex: 5659
{
	// Methods

	// RVA: 0x1986AA4 Offset: 0x1986AA4 VA: 0x1986AA4
	public void .ctor() { }

	// RVA: 0x1986B0C Offset: 0x1986B0C VA: 0x1986B0C
	public void SetItem(int idx, ServantEntity equipEntity, EventUpValInfo[] eventUpValInfos, SkillInfo[] skillInfos) { }

	// RVA: 0x1986BB4 Offset: 0x1986BB4 VA: 0x1986BB4
	public void SetItem(int idx, int[] eventIdList, int filterGroupId) { }

	// RVA: 0x1986C54 Offset: 0x1986C54 VA: 0x1986C54
	public void SetInitButtonSelect() { }

	// RVA: 0x1986CCC Offset: 0x1986CCC VA: 0x1986CCC
	public void SetButtonEnable(bool isEnable) { }

	// RVA: 0x1986D54 Offset: 0x1986D54 VA: 0x1986D54
	public void ResetDisplayButton() { }

	// RVA: 0x1986DCC Offset: 0x1986DCC VA: 0x1986DCC
	public bool IsSetFilter() { }

	// RVA: 0x1986E44 Offset: 0x1986E44 VA: 0x1986E44
	public void UpdateFilterSave() { }
}

// Namespace: 
public class ServantBonusFilterSelectMenu : BaseDialog // TypeDefIndex: 5660
{
	// Fields
	public const string SAVE_KEY_BONUS_FILTER_EVENT_ID = "BonusFilterEventId";
	public const string SAVE_KEY_BONUS_FILTER_EQUIP_ID = "BonusFilterEquipId";
	public const string SAVE_KEY_BONUS_FILTER_GROUP_ID = "BonusFilterGroupId";
	private const string SPRITE_NAME_BUTTON_ON = "btn_bg_03";
	private const string SPRITE_NAME_BUTTON_OFF = "btn_bg_04";
	public UILabel titleLabel; // 0x58
	public UILabel explanationLabel; // 0x60
	public UILabel decideLabel; // 0x68
	public UILabel cancelLabel; // 0x70
	public UILabel clearLabel; // 0x78
	public UILabel initializeLabel; // 0x80
	public UICommonButton decideButton; // 0x88
	public UICommonButton cancelButton; // 0x90
	public UICommonButton clearButton; // 0x98
	public UICommonButton initializeButton; // 0xA0
	public UICommonButton filter1Button; // 0xA8
	public UILabel filter1Label; // 0xB0
	public UICommonButton filter2Button; // 0xB8
	public UILabel filter2Label; // 0xC0
	public UIScrollView scrollView; // 0xC8
	public UIScrollBar scrollBar; // 0xD0
	public UILabel allFilterTitleLabel; // 0xD8
	public UILabel allFilterExplanationLabel; // 0xE0
	public UICommonButton allFilterClearButton; // 0xE8
	public UICommonButton allFilterInitializeButton; // 0xF0
	public UILabel allFilterClearLabel; // 0xF8
	public UILabel allFilterInitializeLabel; // 0x100
	public UILabel maxFilterTitleLabel; // 0x108
	public UILabel maxFilterExplanationLabel; // 0x110
	public UICommonButton maxFilterClearButton; // 0x118
	public UICommonButton maxFilterInitializeButton; // 0x120
	public UILabel maxFilterClearLabel; // 0x128
	public UILabel maxFilterInitializeLabel; // 0x130
	public UILabel individualFilterTitleLabel; // 0x138
	public UILabel individualFilterExplanationLabel; // 0x140
	public UICommonButton individualFilterInitializeButton; // 0x148
	public UILabel individualFilterInitializeLabel; // 0x150
	protected const string SORT_SAVE_KEY = "ServantBonusFilterSelect";
	protected static ListViewSort commonServantSortInfo; // 0x0
	[SerializeField] // RVA: 0xCBAB58 Offset: 0xCBAB58 VA: 0xCBAB58
	private int button2PositionHorizontal; // 0x158
	[SerializeField] // RVA: 0xCBAB68 Offset: 0xCBAB68 VA: 0xCBAB68
	private int button1PositionHorizontal; // 0x15C
	[SerializeField] // RVA: 0xCBAB78 Offset: 0xCBAB78 VA: 0xCBAB78
	private ServantBonusFilterEquipComponent servantBonusFilterEquipComponent; // 0x160
	private static int maxIndividualFilter; // 0x8
	protected ServantBonusFilterSelectMenu.Kind kind; // 0x168
	protected ServantBonusFilterSelectMenu.State state; // 0x16C
	[CompilerGeneratedAttribute] // RVA: 0xCBAB88 Offset: 0xCBAB88 VA: 0xCBAB88
	[DebuggerBrowsableAttribute] // RVA: 0xCBAB88 Offset: 0xCBAB88 VA: 0xCBAB88
	private ServantBonusFilterSelectMenu.CallbackFunc callbackFunc; // 0x170
	protected Action closeCallbackFunc; // 0x178
	protected ListViewSort baseSortInfo; // 0x180
	protected ListViewSort operationSortInfo; // 0x188
	protected bool isServantBonusFilterEnable; // 0x190
	protected bool isServantEquipBonusFilterEnable; // 0x191
	private int[] eventIdList; // 0x198

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1986EBC Offset: 0x1986EBC VA: 0x1986EBC
	public void .ctor() { }

	// RVA: 0x1986F24 Offset: 0x1986F24 VA: 0x1986F24
	protected void add_callbackFunc(ServantBonusFilterSelectMenu.CallbackFunc value) { }

	// RVA: 0x1987014 Offset: 0x1987014 VA: 0x1987014
	protected void remove_callbackFunc(ServantBonusFilterSelectMenu.CallbackFunc value) { }

	// RVA: 0x1987104 Offset: 0x1987104 VA: 0x1987104
	public static void InitLoad() { }

	// RVA: 0x1987180 Offset: 0x1987180 VA: 0x1987180
	public static ListViewSort GetServantFilterInfo() { }

	// RVA: 0x198720C Offset: 0x198720C VA: 0x198720C
	public static int GetMaxIndividualFilter() { }

	// RVA: 0x198732C Offset: 0x198732C VA: 0x198732C
	public void Init() { }

	// RVA: 0x1987338 Offset: 0x1987338 VA: 0x1987338
	public void Open(ServantBonusFilterSelectMenu.Kind kind, bool isServantBonusFilterEnable, bool isServantEquipBonusFilterEnable, ListViewSort sort, ServantBonusFilterSelectMenu.CallbackFunc callback) { }

	// RVA: 0x1987F9C Offset: 0x1987F9C VA: 0x1987F9C
	protected void EndOpen() { }

	// RVA: 0x1987FA8 Offset: 0x1987FA8 VA: 0x1987FA8
	public void Close() { }

	// RVA: 0x1987FB0 Offset: 0x1987FB0 VA: 0x1987FB0
	public void Close(Action callback) { }

	// RVA: 0x1988040 Offset: 0x1988040 VA: 0x1988040
	protected void EndClose() { }

	// RVA: 0x1988084 Offset: 0x1988084 VA: 0x1988084
	protected void Callback(bool result) { }

	// RVA: 0x19882D0 Offset: 0x19882D0 VA: 0x19882D0
	private void MoveButton(UICommonButton button, int x) { }

	// RVA: 0x1987D44 Offset: 0x1987D44 VA: 0x1987D44
	private void SetButtonEnable(bool isEnable) { }

	// RVA: 0x1987B24 Offset: 0x1987B24 VA: 0x1987B24
	private void SetButtonSelect() { }

	// RVA: 0x19883AC Offset: 0x19883AC VA: 0x19883AC
	public void OnClickDecide() { }

	// RVA: 0x1988684 Offset: 0x1988684 VA: 0x1988684
	public void OnClickCancel() { }

	// RVA: 0x1988724 Offset: 0x1988724 VA: 0x1988724
	public void OnClickClear() { }

	// RVA: 0x19887F4 Offset: 0x19887F4 VA: 0x19887F4
	public void OnClickInitialize() { }

	// RVA: 0x19888C4 Offset: 0x19888C4 VA: 0x19888C4
	public void OnClickFilter1() { }

	// RVA: 0x198896C Offset: 0x198896C VA: 0x198896C
	public void OnClickFilter2() { }

	// RVA: 0x1988A14 Offset: 0x1988A14 VA: 0x1988A14
	public void OnClickAllDisplay() { }

	// RVA: 0x1988AE4 Offset: 0x1988AE4 VA: 0x1988AE4
	public void OnClickMaxOnlyDisplay() { }

	// RVA: 0x1988BB4 Offset: 0x1988BB4 VA: 0x1988BB4
	public void OnClickResetIndividual() { }

	// RVA: 0x1988C50 Offset: 0x1988C50 VA: 0x1988C50 Slot: 6
	protected override string get_closeBtnPath() { }

	// RVA: 0x1988C98 Offset: 0x1988C98 VA: 0x1988C98
	private static void .cctor() { }
}

// Namespace: 
public enum ServantBonusFilterSelectMenu.Kind // TypeDefIndex: 5661
{
	// Fields
	public int value__; // 0x0
	public const ServantBonusFilterSelectMenu.Kind SUPPORT = 0;
}

// Namespace: 
protected enum ServantBonusFilterSelectMenu.State // TypeDefIndex: 5662
{
	// Fields
	public int value__; // 0x0
	public const ServantBonusFilterSelectMenu.State INIT = 0;
	public const ServantBonusFilterSelectMenu.State OPEN = 1;
	public const ServantBonusFilterSelectMenu.State INPUT = 2;
	public const ServantBonusFilterSelectMenu.State SELECTED = 3;
	public const ServantBonusFilterSelectMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class ServantBonusFilterSelectMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 5663
{
	// Methods

	// RVA: 0x1988D18 Offset: 0x1988D18 VA: 0x1988D18
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x19880A4 Offset: 0x19880A4 VA: 0x19880A4 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x1988D28 Offset: 0x1988D28 VA: 0x1988D28 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x1988DB8 Offset: 0x1988DB8 VA: 0x1988DB8 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantEquipEffectFilterContainer : MonoBehaviour // TypeDefIndex: 5664
{
	// Fields
	private static readonly int TITLE_LINE_SPRITE_SPACE; // 0x0
	private static readonly int TITLE_WIDTH; // 0x4
	[SerializeField] // RVA: 0xCBABC4 Offset: 0xCBABC4 VA: 0xCBABC4
	private ServantEquipEffectFilterItem itemPrefab; // 0x18
	[SerializeField] // RVA: 0xCBABD4 Offset: 0xCBABD4 VA: 0xCBABD4
	private UIGrid grid; // 0x20
	[SerializeField] // RVA: 0xCBABE4 Offset: 0xCBABE4 VA: 0xCBABE4
	private UILabel titleLabel; // 0x28
	[SerializeField] // RVA: 0xCBABF4 Offset: 0xCBABF4 VA: 0xCBABF4
	private UISprite leftLineSptite; // 0x30
	[SerializeField] // RVA: 0xCBAC04 Offset: 0xCBAC04 VA: 0xCBAC04
	private UISprite rightLineSptite; // 0x38
	private ListViewSort sort; // 0x40
	private List<ServantEquipEffectFilterItem> itemList; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xCBAC14 Offset: 0xCBAC14 VA: 0xCBAC14
	[DebuggerBrowsableAttribute] // RVA: 0xCBAC14 Offset: 0xCBAC14 VA: 0xCBAC14
	private Vector3 <BottomPosition>k__BackingField; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xCBAC50 Offset: 0xCBAC50 VA: 0xCBAC50
	private static Comparison<FunctionCategoryEntity> <>f__am$cache0; // 0x8

	// Properties
	private Vector3 Position { get; set; }
	public Vector3 BottomPosition { get; set; }

	// Methods

	// RVA: 0x2014350 Offset: 0x2014350 VA: 0x2014350
	public void .ctor() { }

	// RVA: 0x2014358 Offset: 0x2014358 VA: 0x2014358
	private void set_Position(Vector3 value) { }

	// RVA: 0x20143B4 Offset: 0x20143B4 VA: 0x20143B4
	private Vector3 get_Position() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35858 Offset: 0xD35858 VA: 0xD35858
	// RVA: 0x20143E8 Offset: 0x20143E8 VA: 0x20143E8
	private void set_BottomPosition(Vector3 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD35868 Offset: 0xD35868 VA: 0xD35868
	// RVA: 0x20143F4 Offset: 0x20143F4 VA: 0x20143F4
	public Vector3 get_BottomPosition() { }

	// RVA: 0x2014400 Offset: 0x2014400 VA: 0x2014400
	public void Init(FunctionCategoryEntity[] entities, FunctionCategoryEntity.GroupType groupType, ListViewSort sort, Vector3 position, Action onclickEvent, FunctionCategoryEntity.Flag categoryFlag) { }

	// RVA: 0x2014480 Offset: 0x2014480 VA: 0x2014480
	private void SetupHeader(FunctionCategoryEntity.GroupType groupType, FunctionCategoryEntity.Flag categoryFlag) { }

	// RVA: 0x20148C4 Offset: 0x20148C4 VA: 0x20148C4
	private void RefreshItems(FunctionCategoryEntity[] entities, ListViewSort sort, Action onclickEvent) { }

	// RVA: 0x2014C04 Offset: 0x2014C04 VA: 0x2014C04
	private void SetBottomPosition(int displayCount) { }

	// RVA: 0x2014DF8 Offset: 0x2014DF8 VA: 0x2014DF8
	private void SetCollider() { }

	// RVA: 0x20150B8 Offset: 0x20150B8 VA: 0x20150B8
	public void SetEnableFilterButton(bool isEnable) { }

	// RVA: 0x2015220 Offset: 0x2015220 VA: 0x2015220
	public void RefreshSelectState() { }

	// RVA: 0x2015390 Offset: 0x2015390 VA: 0x2015390
	public void ForceSelectAll() { }

	// RVA: 0x2015520 Offset: 0x2015520 VA: 0x2015520
	public void ForceDeselectAll() { }

	// RVA: 0x2015648 Offset: 0x2015648 VA: 0x2015648
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35878 Offset: 0xD35878 VA: 0xD35878
	// RVA: 0x20156AC Offset: 0x20156AC VA: 0x20156AC
	private static int <RefreshItems>m__0(FunctionCategoryEntity x, FunctionCategoryEntity y) { }
}

// Namespace: 
public class ServantEquipEffectFilterController : MonoBehaviour // TypeDefIndex: 5665
{
	// Fields
	private readonly int WIDGET_HEIGHT_ADD_VALUE; // 0x18
	private readonly List<FunctionCategoryEntity.GroupType> SvtEqDisplayGroups; // 0x20
	private readonly List<FunctionCategoryEntity.GroupType> CommandCodeDisplayGroups; // 0x28
	[SerializeField] // RVA: 0xCBAC60 Offset: 0xCBAC60 VA: 0xCBAC60
	private UILabel titleLabel; // 0x30
	[SerializeField] // RVA: 0xCBAC70 Offset: 0xCBAC70 VA: 0xCBAC70
	private UISprite lineSprite; // 0x38
	[SerializeField] // RVA: 0xCBAC80 Offset: 0xCBAC80 VA: 0xCBAC80
	private Transform containerHolder; // 0x40
	[SerializeField] // RVA: 0xCBAC90 Offset: 0xCBAC90 VA: 0xCBAC90
	private ServantEquipEffectFilterContainer containerPrefab; // 0x48
	[SerializeField] // RVA: 0xCBACA0 Offset: 0xCBACA0 VA: 0xCBACA0
	private GameObject buttonContainer; // 0x50
	[SerializeField] // RVA: 0xCBACB0 Offset: 0xCBACB0 VA: 0xCBACB0
	private UICommonButton forceSelectAllButton; // 0x58
	[SerializeField] // RVA: 0xCBACC0 Offset: 0xCBACC0 VA: 0xCBACC0
	private UICommonButton forceDeselectAllButton; // 0x60
	[SerializeField] // RVA: 0xCBACD0 Offset: 0xCBACD0 VA: 0xCBACD0
	private UILabel forceSelectAllButtonLabel; // 0x68
	[SerializeField] // RVA: 0xCBACE0 Offset: 0xCBACE0 VA: 0xCBACE0
	private UILabel forceDeselectAllButtonLabel; // 0x70
	private ListViewSort sort; // 0x78
	private List<ServantEquipEffectFilterContainer> containerList; // 0x80
	private Dictionary<int, int> defaultFilterData; // 0x88
	private Action onClickEvent; // 0x90
	private FunctionCategoryEntity.Flag categoryFlag; // 0x98
	private List<FunctionCategoryEntity.GroupType> displayGroups; // 0xA0

	// Methods

	// RVA: 0x20156EC Offset: 0x20156EC VA: 0x20156EC
	public void .ctor() { }

	// RVA: 0x2015974 Offset: 0x2015974 VA: 0x2015974
	public void Init(ListViewSort sort, Action onclickEvent) { }

	// RVA: 0x20162B0 Offset: 0x20162B0 VA: 0x20162B0
	public void RefreshSelectState() { }

	// RVA: 0x20159F0 Offset: 0x20159F0 VA: 0x20159F0
	private void SetupLabelObject() { }

	// RVA: 0x2015AFC Offset: 0x2015AFC VA: 0x2015AFC
	private void SetDefaultFilterData() { }

	// RVA: 0x20163D4 Offset: 0x20163D4 VA: 0x20163D4
	public bool IsChangeFilterData() { }

	// RVA: 0x2015CA8 Offset: 0x2015CA8 VA: 0x2015CA8
	private void RefreshContainers() { }

	// RVA: 0x2016574 Offset: 0x2016574 VA: 0x2016574
	public void SetEnableFilterButton(bool isEnable) { }

	// RVA: 0x20166EC Offset: 0x20166EC VA: 0x20166EC
	public void OnClick_Category() { }

	// RVA: 0x2016760 Offset: 0x2016760 VA: 0x2016760
	public void OnClick_ForceSelectAll() { }

	// RVA: 0x20168BC Offset: 0x20168BC VA: 0x20168BC
	public void OnClick_ForceDeselectAll() { }

	// RVA: 0x2016A18 Offset: 0x2016A18 VA: 0x2016A18
	public static bool IsMatchEffectCategory(int[] cateforyIdList, ListViewSort sort) { }
}

// Namespace: 
public class ServantEquipEffectFilterItem : MonoBehaviour // TypeDefIndex: 5666
{
	// Fields
	private static readonly int LABEL_MAX_WIDTH; // 0x0
	[SerializeField] // RVA: 0xCBACF0 Offset: 0xCBACF0 VA: 0xCBACF0
	private UILabel titleLabel; // 0x18
	[SerializeField] // RVA: 0xCBAD00 Offset: 0xCBAD00 VA: 0xCBAD00
	private UICommonButton button; // 0x20
	[SerializeField] // RVA: 0xCBAD10 Offset: 0xCBAD10 VA: 0xCBAD10
	private UISprite checkMarkSprite; // 0x28
	private FunctionCategoryEntity entity; // 0x30
	private ListViewSort sort; // 0x38
	private Action onClickEvent; // 0x40
	private bool isSelected; // 0x48

	// Methods

	// RVA: 0x2016AB4 Offset: 0x2016AB4 VA: 0x2016AB4
	public void .ctor() { }

	// RVA: 0x2014FC8 Offset: 0x2014FC8 VA: 0x2014FC8
	public void Init(FunctionCategoryEntity entity, ListViewSort sort, bool isSelected, Action onClickEvent) { }

	// RVA: 0x2015344 Offset: 0x2015344 VA: 0x2015344
	public void RefreshSelectState() { }

	// RVA: 0x20154B8 Offset: 0x20154B8 VA: 0x20154B8
	public void SetSelectState(bool isSelected) { }

	// RVA: 0x2016ABC Offset: 0x2016ABC VA: 0x2016ABC
	private void SetCheckMark() { }

	// RVA: 0x20151E8 Offset: 0x20151E8 VA: 0x20151E8
	public void SetEnableFilterButton(bool isEnable) { }

	// RVA: 0x2016B14 Offset: 0x2016B14 VA: 0x2016B14
	public void OnClick() { }

	// RVA: 0x2016B48 Offset: 0x2016B48 VA: 0x2016B48
	private static void .cctor() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC91094 Offset: 0xC91094 VA: 0xC91094
public class ServantFilterButtonControl : MonoBehaviour // TypeDefIndex: 5667
{
	// Fields
	private static readonly string SPRITE_NAME_ENABLE; // 0x0
	private static readonly string SPRITE_NAME_DISABLE; // 0x8
	[SerializeField] // RVA: 0xCBAD20 Offset: 0xCBAD20 VA: 0xCBAD20
	private ListViewSort.FilterKind filterKind; // 0x18
	[SerializeField] // RVA: 0xCBAD30 Offset: 0xCBAD30 VA: 0xCBAD30
	private UICommonButton button; // 0x20
	[SerializeField] // RVA: 0xCBAD40 Offset: 0xCBAD40 VA: 0xCBAD40
	private UISprite buttonSprite; // 0x28
	[SerializeField] // RVA: 0xCBAD50 Offset: 0xCBAD50 VA: 0xCBAD50
	private UILabel buttonText; // 0x30
	private ListViewSort targetSort; // 0x38
	private ServantFilterButtonControl.OnClickFilterButton onClickFilterEvent; // 0x40

	// Properties
	public ListViewSort.FilterKind FilterKind { get; }
	private bool IsSelected { get; }
	public UISprite ButtonSprite { get; }

	// Methods

	// RVA: 0x1C0DD94 Offset: 0x1C0DD94 VA: 0x1C0DD94
	public void .ctor() { }

	// RVA: 0x1C0DD9C Offset: 0x1C0DD9C VA: 0x1C0DD9C
	public ListViewSort.FilterKind get_FilterKind() { }

	// RVA: 0x1C0DDA4 Offset: 0x1C0DDA4 VA: 0x1C0DDA4
	private bool get_IsSelected() { }

	// RVA: 0x1C0DDC0 Offset: 0x1C0DDC0 VA: 0x1C0DDC0
	public UISprite get_ButtonSprite() { }

	// RVA: 0x1C0DDC8 Offset: 0x1C0DDC8 VA: 0x1C0DDC8
	private void Awake() { }

	// RVA: 0x1C0DDCC Offset: 0x1C0DDCC VA: 0x1C0DDCC
	public void Init(ListViewSort targetSort, ServantFilterButtonControl.OnClickFilterButton onClickFilter, bool isDisplay) { }

	// RVA: 0x1C0DE8C Offset: 0x1C0DE8C VA: 0x1C0DE8C
	private void RefreshButton() { }

	// RVA: 0x1C0DEEC Offset: 0x1C0DEEC VA: 0x1C0DEEC
	public void RefreshButtonSelectState() { }

	// RVA: 0x1C0DFD4 Offset: 0x1C0DFD4 VA: 0x1C0DFD4
	public void SetButtonEnable(bool isEnable) { }

	// RVA: 0x1C0E00C Offset: 0x1C0E00C VA: 0x1C0E00C
	public void OnClickEvent() { }

	// RVA: 0x1C0E254 Offset: 0x1C0E254 VA: 0x1C0E254
	private static void .cctor() { }
}

// Namespace: 
public sealed class ServantFilterButtonControl.OnClickFilterButton : MulticastDelegate // TypeDefIndex: 5668
{
	// Methods

	// RVA: 0x1C0E2C8 Offset: 0x1C0E2C8 VA: 0x1C0E2C8
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1C0E028 Offset: 0x1C0E028 VA: 0x1C0E028 Slot: 11
	public virtual void Invoke(ListViewSort.FilterKind filterKind) { }

	// RVA: 0x1C0E2D8 Offset: 0x1C0E2D8 VA: 0x1C0E2D8 Slot: 12
	public virtual IAsyncResult BeginInvoke(ListViewSort.FilterKind filterKind, AsyncCallback callback, object object) { }

	// RVA: 0x1C0E364 Offset: 0x1C0E364 VA: 0x1C0E364 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantFilterCategoryContainer : MonoBehaviour // TypeDefIndex: 5669
{
	// Fields
	private static readonly Dictionary<ListViewSort.FilterCategoryKind, string> CategoryTitleLocalizationKeyDic; // 0x0
	private readonly Vector3 GRID_COLUMN_5_GRID_SCALE; // 0x18
	private readonly Vector2 GRID_COLUMN_5_GRID_CELL_SIZE; // 0x24
	private readonly float LINE_SPRITE_DIFF_Y; // 0x2C
	private readonly int WIDGET_HEIGHT_DIFF; // 0x30
	[SerializeField] // RVA: 0xCBAD60 Offset: 0xCBAD60 VA: 0xCBAD60
	private ListViewSort.FilterCategoryKind categoryKind; // 0x34
	[SerializeField] // RVA: 0xCBAD70 Offset: 0xCBAD70 VA: 0xCBAD70
	private UIWidget widget; // 0x38
	[SerializeField] // RVA: 0xCBAD80 Offset: 0xCBAD80 VA: 0xCBAD80
	private UILabel titleLabal; // 0x40
	[SerializeField] // RVA: 0xCBAD90 Offset: 0xCBAD90 VA: 0xCBAD90
	private UIGrid grid; // 0x48
	[SerializeField] // RVA: 0xCBADA0 Offset: 0xCBADA0 VA: 0xCBADA0
	private UISprite lineSprite; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xCBADB0 Offset: 0xCBADB0 VA: 0xCBADB0
	private static Predicate<Transform> <>f__am$cache0; // 0x8

	// Properties
	public ListViewSort.FilterCategoryKind CategoryKind { get; }
	public UIGrid Grid { get; }
	public Vector3 BottomPosition { get; }

	// Methods

	// RVA: 0x1C0E370 Offset: 0x1C0E370 VA: 0x1C0E370
	public void .ctor() { }

	// RVA: 0x1C0E410 Offset: 0x1C0E410 VA: 0x1C0E410
	public ListViewSort.FilterCategoryKind get_CategoryKind() { }

	// RVA: 0x1C0E418 Offset: 0x1C0E418 VA: 0x1C0E418
	public UIGrid get_Grid() { }

	// RVA: 0x1C0E420 Offset: 0x1C0E420 VA: 0x1C0E420
	public Vector3 get_BottomPosition() { }

	// RVA: 0x1C0E530 Offset: 0x1C0E530 VA: 0x1C0E530
	public void SetPosition(Vector3 position) { }

	// RVA: 0x1C0E574 Offset: 0x1C0E574 VA: 0x1C0E574
	public void SetActive(bool isActive) { }

	// RVA: 0x1C0E5B0 Offset: 0x1C0E5B0 VA: 0x1C0E5B0
	public void Layout(bool isLast = False) { }

	// RVA: 0x1C0EB98 Offset: 0x1C0EB98 VA: 0x1C0EB98
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35888 Offset: 0xD35888 VA: 0xD35888
	// RVA: 0x1C0EE60 Offset: 0x1C0EE60 VA: 0x1C0EE60
	private static bool <Layout>m__0(Transform x) { }
}

// Namespace: 
public class ServantFilterSelectMenu : BaseDialog // TypeDefIndex: 5670
{
	// Fields
	public UILabel titleLabel; // 0x58
	public UILabel warningLabel; // 0x60
	public UILabel decideLabel; // 0x68
	public UILabel cancelLabel; // 0x70
	public UILabel clearLabel; // 0x78
	public UILabel initializeLabel; // 0x80
	public UICommonButton decideButton; // 0x88
	public UICommonButton cancelButton; // 0x90
	public UICommonButton clearButton; // 0x98
	public UICommonButton initializeButton; // 0xA0
	[SerializeField] // RVA: 0xCBADC0 Offset: 0xCBADC0 VA: 0xCBADC0
	private ServantFilterSelectMenu.FilterContainer servantFilterConatiner; // 0xA8
	[SerializeField] // RVA: 0xCBADD0 Offset: 0xCBADD0 VA: 0xCBADD0
	private ServantFilterSelectMenu.FilterContainer servantEquipFilterContainer; // 0xB0
	[SerializeField] // RVA: 0xCBADE0 Offset: 0xCBADE0 VA: 0xCBADE0
	private ServantFilterSelectMenu.FilterContainer commandCodeFilterContainer; // 0xB8
	[SerializeField] // RVA: 0xCBADF0 Offset: 0xCBADF0 VA: 0xCBADF0
	private ServantFilterSelectMenu.FilterContainer costumeFilterContainer; // 0xC0
	[SerializeField] // RVA: 0xCBAE00 Offset: 0xCBAE00 VA: 0xCBAE00
	private ServantEquipEffectFilterController svtEquipEffectFilterController; // 0xC8
	[SerializeField] // RVA: 0xCBAE10 Offset: 0xCBAE10 VA: 0xCBAE10
	private ServantEquipEffectFilterController commandCodeEffectFilterController; // 0xD0
	private ServantFilterSelectMenu.FilterContainer currentFilterContainer; // 0xD8
	private List<ListViewSort.FilterKind> useFilterKindList; // 0xE0
	private List<ServantFilterButtonControl> useFilterButtonList; // 0xE8
	protected const string SORT_SAVE_KEY = "ServantFilterSelect";
	protected static ListViewSort commonServantSortInfo; // 0x0
	protected bool[] kindStatus; // 0xF0
	protected ServantFilterSelectMenu.Kind kind; // 0xF8
	protected ServantFilterSelectMenu.State state; // 0xFC
	[CompilerGeneratedAttribute] // RVA: 0xCBAE20 Offset: 0xCBAE20 VA: 0xCBAE20
	[DebuggerBrowsableAttribute] // RVA: 0xCBAE20 Offset: 0xCBAE20 VA: 0xCBAE20
	private ServantFilterSelectMenu.CallbackFunc callbackFunc; // 0x100
	protected Action closeCallbackFunc; // 0x108
	protected ListViewSort baseSortInfo; // 0x110
	protected ListViewSort operationSortInfo; // 0x118
	protected ListViewManager listViewManager; // 0x120
	[CompilerGeneratedAttribute] // RVA: 0xCBAE5C Offset: 0xCBAE5C VA: 0xCBAE5C
	private static Predicate<ServantFilterCategoryContainer> <>f__am$cache0; // 0x8
	[CompilerGeneratedAttribute] // RVA: 0xCBAE6C Offset: 0xCBAE6C VA: 0xCBAE6C
	private static Predicate<ServantFilterCategoryContainer> <>f__am$cache1; // 0x10
	[CompilerGeneratedAttribute] // RVA: 0xCBAE7C Offset: 0xCBAE7C VA: 0xCBAE7C
	private static Predicate<ServantFilterCategoryContainer> <>f__am$cache2; // 0x18

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x1C0F5C8 Offset: 0x1C0F5C8 VA: 0x1C0F5C8
	public void .ctor() { }

	// RVA: 0x1C0F680 Offset: 0x1C0F680 VA: 0x1C0F680
	protected void add_callbackFunc(ServantFilterSelectMenu.CallbackFunc value) { }

	// RVA: 0x1C0F770 Offset: 0x1C0F770 VA: 0x1C0F770
	protected void remove_callbackFunc(ServantFilterSelectMenu.CallbackFunc value) { }

	// RVA: 0x1C0F860 Offset: 0x1C0F860 VA: 0x1C0F860
	public static void InitLoad() { }

	// RVA: 0x1C0F8DC Offset: 0x1C0F8DC VA: 0x1C0F8DC
	public static ListViewSort GetServantFilterInfo() { }

	// RVA: 0x1C0F968 Offset: 0x1C0F968 VA: 0x1C0F968
	public void Init() { }

	// RVA: 0x1C0F974 Offset: 0x1C0F974 VA: 0x1C0F974
	public void Open(ServantFilterSelectMenu.Kind kind, ListViewSort sort, ListViewManager listViewManager, ServantFilterSelectMenu.CallbackFunc callback) { }

	// RVA: 0x1C114CC Offset: 0x1C114CC VA: 0x1C114CC
	protected void EndOpen() { }

	// RVA: 0x1C114D8 Offset: 0x1C114D8 VA: 0x1C114D8
	public void Close() { }

	// RVA: 0x1C114E0 Offset: 0x1C114E0 VA: 0x1C114E0
	public void Close(Action callback) { }

	// RVA: 0x1C1157C Offset: 0x1C1157C VA: 0x1C1157C
	protected void EndClose() { }

	// RVA: 0x1C115C0 Offset: 0x1C115C0 VA: 0x1C115C0
	protected void Callback(bool result) { }

	// RVA: 0x1C1180C Offset: 0x1C1180C VA: 0x1C1180C
	private void SetActiveCurrentFilterContainer(bool isActive) { }

	// RVA: 0x1C0FF20 Offset: 0x1C0FF20 VA: 0x1C0FF20
	protected void InitServantNormalDisp() { }

	// RVA: 0x1C100B8 Offset: 0x1C100B8 VA: 0x1C100B8
	protected void InitServantListDisp() { }

	// RVA: 0x1C1027C Offset: 0x1C1027C VA: 0x1C1027C
	protected void InitServantBaseDisp() { }

	// RVA: 0x1C10440 Offset: 0x1C10440 VA: 0x1C10440
	protected void InitMaterialDisp() { }

	// RVA: 0x1C10770 Offset: 0x1C10770 VA: 0x1C10770
	protected void InitServantEquipDisp() { }

	// RVA: 0x1C10A3C Offset: 0x1C10A3C VA: 0x1C10A3C
	protected void InitCommandCodeDisp() { }

	// RVA: 0x1C10D08 Offset: 0x1C10D08 VA: 0x1C10D08
	protected void InitCostumeDisp() { }

	// RVA: 0x1C11854 Offset: 0x1C11854 VA: 0x1C11854
	private void InitUseFilterButton() { }

	// RVA: 0x1C11AAC Offset: 0x1C11AAC VA: 0x1C11AAC
	private void InitCategoryContainer(ListViewSort.FilterCategoryKind[] categoryKindKist) { }

	// RVA: 0x1C10E84 Offset: 0x1C10E84 VA: 0x1C10E84
	private void RefreshFilterClippingPosition() { }

	// RVA: 0x1C10F94 Offset: 0x1C10F94 VA: 0x1C10F94
	protected void SetButtonSelect() { }

	// RVA: 0x1C11108 Offset: 0x1C11108 VA: 0x1C11108
	protected void SetButtonEnable(bool isEnable) { }

	// RVA: 0x1C11E00 Offset: 0x1C11E00 VA: 0x1C11E00
	public void OnClickDecide() { }

	// RVA: 0x1C1208C Offset: 0x1C1208C VA: 0x1C1208C
	public void OnClickCancel() { }

	// RVA: 0x1C1212C Offset: 0x1C1212C VA: 0x1C1212C
	public void OnClickClear() { }

	// RVA: 0x1C12260 Offset: 0x1C12260 VA: 0x1C12260
	public void OnClickInitialize() { }

	// RVA: 0x1C12394 Offset: 0x1C12394 VA: 0x1C12394
	public void OnClickFilterButton(ListViewSort.FilterKind filterKind) { }

	// RVA: 0x1C1131C Offset: 0x1C1131C VA: 0x1C1131C
	private void CheckMatchItemAndDisplayInfo() { }

	// RVA: 0x1C0FD9C Offset: 0x1C0FD9C VA: 0x1C0FD9C
	private bool[] SetKindStatus(ListViewSort sort) { }

	// RVA: 0x1C11F44 Offset: 0x1C11F44 VA: 0x1C11F44
	private bool IsChangedStatus() { }

	// RVA: 0x1C12454 Offset: 0x1C12454 VA: 0x1C12454 Slot: 6
	protected override string get_closeBtnPath() { }

	// RVA: 0x1C1249C Offset: 0x1C1249C VA: 0x1C1249C
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD35898 Offset: 0xD35898 VA: 0xD35898
	// RVA: 0x1C1251C Offset: 0x1C1251C VA: 0x1C1251C
	private static bool <InitMaterialDisp>m__0(ServantFilterCategoryContainer x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD358A8 Offset: 0xD358A8 VA: 0xD358A8
	// RVA: 0x1C1254C Offset: 0x1C1254C VA: 0x1C1254C
	private static bool <InitServantEquipDisp>m__1(ServantFilterCategoryContainer x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD358B8 Offset: 0xD358B8 VA: 0xD358B8
	// RVA: 0x1C1257C Offset: 0x1C1257C VA: 0x1C1257C
	private static bool <InitCommandCodeDisp>m__2(ServantFilterCategoryContainer x) { }

	[CompilerGeneratedAttribute] // RVA: 0xD358C8 Offset: 0xD358C8 VA: 0xD358C8
	// RVA: 0x1C125AC Offset: 0x1C125AC VA: 0x1C125AC
	private bool <InitUseFilterButton>m__3(ServantFilterButtonControl x) { }
}

// Namespace: 
[Serializable]
private class ServantFilterSelectMenu.FilterContainer // TypeDefIndex: 5671
{
	// Fields
	public GameObject root; // 0x10
	public UIScrollView scrollView; // 0x18
	public List<ServantFilterCategoryContainer> categoryContainerList; // 0x20
	public List<ServantFilterButtonControl> filterButtonList; // 0x28
