	// RVA: 0x16C1590 Offset: 0x16C1590 VA: 0x16C1590
	public void OnClickWarehouse() { }

	// RVA: 0x16C1654 Offset: 0x16C1654 VA: 0x16C1654
	public void OnClickCancel() { }

	// RVA: 0x16C1718 Offset: 0x16C1718 VA: 0x16C1718 Slot: 6
	protected override string get_closeBtnPath() { }
}

// Namespace: 
public sealed class ServantFrameShortDlgComponent.CallbackFunc : MulticastDelegate // TypeDefIndex: 5642
{
	// Methods

	// RVA: 0x16C1760 Offset: 0x16C1760 VA: 0x16C1760
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x16C11DC Offset: 0x16C11DC VA: 0x16C11DC Slot: 11
	public virtual void Invoke(ServantFrameShortDlgComponent.resultClicked result) { }

	// RVA: 0x16C1770 Offset: 0x16C1770 VA: 0x16C1770 Slot: 12
	public virtual IAsyncResult BeginInvoke(ServantFrameShortDlgComponent.resultClicked result, AsyncCallback callback, object object) { }

	// RVA: 0x16C17FC Offset: 0x16C17FC VA: 0x16C17FC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
protected enum ServantFrameShortDlgComponent.State // TypeDefIndex: 5643
{
	// Fields
	public int value__; // 0x0
	public const ServantFrameShortDlgComponent.State INIT = 0;
	public const ServantFrameShortDlgComponent.State OPEN = 1;
}

// Namespace: 
public enum ServantFrameShortDlgComponent.resultClicked // TypeDefIndex: 5644
{
	// Fields
	public int value__; // 0x0
	public const ServantFrameShortDlgComponent.resultClicked POWERUP = 0;
	public const ServantFrameShortDlgComponent.resultClicked WAREHOUSE = 1;
	public const ServantFrameShortDlgComponent.resultClicked SELL = 2;
	public const ServantFrameShortDlgComponent.resultClicked CANCEL = 3;
}

// Namespace: 
public enum ServantFrameShortDlgComponent.Type // TypeDefIndex: 5645
{
	// Fields
	public int value__; // 0x0
	public const ServantFrameShortDlgComponent.Type SERVANT = 0;
	public const ServantFrameShortDlgComponent.Type EQUIP = 1;
	public const ServantFrameShortDlgComponent.Type COMMAND_CODE = 2;
}

// Namespace: 
public static class ServantLimitUpVoiceCache // TypeDefIndex: 5646
{
	// Fields
	private const int NORMAL_VOICE = 0;
	private const int ANOTHER_VOICE = 1;
	private static Dictionary<int, int> materialLimitUpVoiceFlagDic; // 0x0
	private static Dictionary<int, int> detailLimitUpVoiceFlagDic; // 0x8

	// Methods

	// RVA: 0x16CC490 Offset: 0x16CC490 VA: 0x16CC490
	public static bool IsLimitUpVoiceNormal(ServantLimitUpVoiceCache.Type type, int servantId) { }

	// RVA: 0x16CC6C8 Offset: 0x16CC6C8 VA: 0x16CC6C8
	public static void UpdateLimitUpVoice(ServantLimitUpVoiceCache.Type type, int servantId) { }

	// RVA: 0x16CC910 Offset: 0x16CC910 VA: 0x16CC910
	private static void .cctor() { }
}

// Namespace: 
public enum ServantLimitUpVoiceCache.Type // TypeDefIndex: 5647
{
	// Fields
	public int value__; // 0x0
	public const ServantLimitUpVoiceCache.Type NONE = 0;
	public const ServantLimitUpVoiceCache.Type MATERIAL = 1;
	public const ServantLimitUpVoiceCache.Type SERVANT_DETAIL = 2;
}

// Namespace: 
public class FilterKindList // TypeDefIndex: 5648
{
	// Fields
	public static readonly List<ListViewSort.FilterKind> AllFilterKindList; // 0x0
	public static readonly List<ListViewSort.FilterKind> ClassFilterKindList; // 0x8
	public static readonly List<ListViewSort.FilterKind> NpTypeFilterKindList; // 0x10
	public static readonly List<ListViewSort.FilterKind> NpEffectFilterKindList; // 0x18
	public static readonly List<ListViewSort.FilterKind> ServantTypeFilterKindList; // 0x20
	public static readonly List<ListViewSort.FilterKind> CombineBaseServantFilterKindList; // 0x28
	public static readonly List<ListViewSort.FilterKind> CombineMaterialFilterKindList; // 0x30
	public static readonly List<ListViewSort.FilterKind> CollectionStateFilterKindList; // 0x38
	public static readonly List<ListViewSort.FilterKind> RarityFilterKindList; // 0x40
	public static readonly List<ListViewSort.FilterKind> ServantCostumeFilterKind; // 0x48
	public static readonly List<ListViewSort.FilterKind> MaterialServantCostumeFilterKindList; // 0x50

	// Methods

	// RVA: 0x136C388 Offset: 0x136C388 VA: 0x136C388
	public void .ctor() { }

	// RVA: 0x136C390 Offset: 0x136C390 VA: 0x136C390
	private static void .cctor() { }
}

// Namespace: 
public class PresentBoxFilterSelectMenu : BaseDialog // TypeDefIndex: 5649
{
	// Fields
	[SerializeField] // RVA: 0xC4EA54 Offset: 0xC4EA54 VA: 0xC4EA54
	private UILabel titleLabel; // 0x58
	[SerializeField] // RVA: 0xC4EA64 Offset: 0xC4EA64 VA: 0xC4EA64
	private UILabel explanationLabel; // 0x60
	[SerializeField] // RVA: 0xC4EA74 Offset: 0xC4EA74 VA: 0xC4EA74
	private UILabel categoryFilterTitle; // 0x68
	[SerializeField] // RVA: 0xC4EA84 Offset: 0xC4EA84 VA: 0xC4EA84
	private UILabel rarityFilterTitle; // 0x70
	[SerializeField] // RVA: 0xC4EA94 Offset: 0xC4EA94 VA: 0xC4EA94
	private UILabel decideLabel; // 0x78
	[SerializeField] // RVA: 0xC4EAA4 Offset: 0xC4EAA4 VA: 0xC4EAA4
	private UILabel cancelLabel; // 0x80
	[SerializeField] // RVA: 0xC4EAB4 Offset: 0xC4EAB4 VA: 0xC4EAB4
	private UILabel clearLabel; // 0x88
	[SerializeField] // RVA: 0xC4EAC4 Offset: 0xC4EAC4 VA: 0xC4EAC4
	private UILabel initializeLabel; // 0x90
	[SerializeField] // RVA: 0xC4EAD4 Offset: 0xC4EAD4 VA: 0xC4EAD4
	private UICommonButton decideButton; // 0x98
	[SerializeField] // RVA: 0xC4EAE4 Offset: 0xC4EAE4 VA: 0xC4EAE4
	private UICommonButton cancelButton; // 0xA0
	[SerializeField] // RVA: 0xC4EAF4 Offset: 0xC4EAF4 VA: 0xC4EAF4
	private UICommonButton clearButton; // 0xA8
	[SerializeField] // RVA: 0xC4EB04 Offset: 0xC4EB04 VA: 0xC4EB04
	private UICommonButton initializeButton; // 0xB0
	[SerializeField] // RVA: 0xC4EB14 Offset: 0xC4EB14 VA: 0xC4EB14
	private GameObject categoryGrid; // 0xB8
	[SerializeField] // RVA: 0xC4EB24 Offset: 0xC4EB24 VA: 0xC4EB24
	private GameObject rarityGrid; // 0xC0
	[SerializeField] // RVA: 0xC4EB34 Offset: 0xC4EB34 VA: 0xC4EB34
	private GameObject templateCategoryButton; // 0xC8
	[SerializeField] // RVA: 0xC4EB44 Offset: 0xC4EB44 VA: 0xC4EB44
	private GameObject templateRarityButton; // 0xD0
	[SerializeField] // RVA: 0xC4EB54 Offset: 0xC4EB54 VA: 0xC4EB54
	private UIScrollView filterScrollView; // 0xD8
	protected ListViewSort presentBoxSortInfo; // 0xE0
	private List<ListViewSort.PresentBoxCategoryFilterKind> categoryFilterKindList; // 0xE8
	private List<ListViewSort.PresentBoxRarityFilterKind> rarityFilterKindList; // 0xF0
	protected bool[] kindStatus; // 0xF8
	protected PresentBoxFilterSelectMenu.State state; // 0x100
	[CompilerGeneratedAttribute] // RVA: 0xC4EB64 Offset: 0xC4EB64 VA: 0xC4EB64
	[DebuggerBrowsableAttribute] // RVA: 0xC4EB64 Offset: 0xC4EB64 VA: 0xC4EB64
	private PresentBoxFilterSelectMenu.CallbackFunc callbackFunc; // 0x108
	protected Action closeCallbackFunc; // 0x110
	protected ListViewSort baseSortInfo; // 0x118
	protected ListViewSort operationSortInfo; // 0x120
	private List<UISprite> filterBtnSpriteList; // 0x128

	// Methods

	// RVA: 0x12CA4B0 Offset: 0x12CA4B0 VA: 0x12CA4B0
	public void .ctor() { }

	// RVA: 0x12CA900 Offset: 0x12CA900 VA: 0x12CA900
	protected void add_callbackFunc(PresentBoxFilterSelectMenu.CallbackFunc value) { }

	// RVA: 0x12CA9F0 Offset: 0x12CA9F0 VA: 0x12CA9F0
	protected void remove_callbackFunc(PresentBoxFilterSelectMenu.CallbackFunc value) { }

	// RVA: 0x12CAAE0 Offset: 0x12CAAE0 VA: 0x12CAAE0
	public void Init() { }

	// RVA: 0x12CAAEC Offset: 0x12CAAEC VA: 0x12CAAEC
	public void Open(ListViewSort sort, PresentBoxFilterSelectMenu.CallbackFunc callback) { }

	// RVA: 0x12CBA64 Offset: 0x12CBA64 VA: 0x12CBA64
	protected void EndOpen() { }

	// RVA: 0x12CBA70 Offset: 0x12CBA70 VA: 0x12CBA70
	public void Close() { }

	// RVA: 0x12CBA78 Offset: 0x12CBA78 VA: 0x12CBA78
	public void Close(Action callback) { }

	// RVA: 0x12CBB08 Offset: 0x12CBB08 VA: 0x12CBB08
	protected void EndClose() { }

	// RVA: 0x12CBB74 Offset: 0x12CBB74 VA: 0x12CBB74
	protected void Callback(bool result) { }

	// RVA: 0x12CB0E8 Offset: 0x12CB0E8 VA: 0x12CB0E8
	protected void InitDisp() { }

	// RVA: 0x12CB7C8 Offset: 0x12CB7C8 VA: 0x12CB7C8
	protected void SetButtonSelect() { }

	// RVA: 0x12CB998 Offset: 0x12CB998 VA: 0x12CB998
	protected void SetButtonEnable(bool isEnable) { }

	// RVA: 0x12CBDD0 Offset: 0x12CBDD0 VA: 0x12CBDD0
	public void OnClickDecide() { }

	// RVA: 0x12CC000 Offset: 0x12CC000 VA: 0x12CC000
	public void OnClickCancel() { }

	// RVA: 0x12CC0A0 Offset: 0x12CC0A0 VA: 0x12CC0A0
	public void OnClickAllSelect() { }

	// RVA: 0x12CC260 Offset: 0x12CC260 VA: 0x12CC260
	public void OnClickInitialize() { }

	// RVA: 0x12CC420 Offset: 0x12CC420 VA: 0x12CC420
	public void OnClickFilter(ListViewSort.PresentBoxCategoryFilterKind kind) { }

	// RVA: 0x12CC4D8 Offset: 0x12CC4D8 VA: 0x12CC4D8
	public void OnClickRarityFilter(ListViewSort.PresentBoxRarityFilterKind kind) { }

	// RVA: 0x12CAED0 Offset: 0x12CAED0 VA: 0x12CAED0
	private bool[] SetKindStatus(ListViewSort sort) { }

	// RVA: 0x12CBF10 Offset: 0x12CBF10 VA: 0x12CBF10
	private bool IsChangedStatus() { }

	// RVA: 0x12CC590 Offset: 0x12CC590 VA: 0x12CC590
	private void OnEnable() { }
}

// Namespace: 
protected enum PresentBoxFilterSelectMenu.State // TypeDefIndex: 5650
{
	// Fields
	public int value__; // 0x0
	public const PresentBoxFilterSelectMenu.State INIT = 0;
	public const PresentBoxFilterSelectMenu.State OPEN = 1;
	public const PresentBoxFilterSelectMenu.State INPUT = 2;
	public const PresentBoxFilterSelectMenu.State SELECTED = 3;
	public const PresentBoxFilterSelectMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class PresentBoxFilterSelectMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 5651
{
	// Methods

	// RVA: 0x12CC684 Offset: 0x12CC684 VA: 0x12CC684
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x12CBB94 Offset: 0x12CBB94 VA: 0x12CBB94 Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x12CC694 Offset: 0x12CC694 VA: 0x12CC694 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x12CC724 Offset: 0x12CC724 VA: 0x12CC724 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41FE4 Offset: 0xC41FE4 VA: 0xC41FE4
private sealed class PresentBoxFilterSelectMenu.<InitDisp>c__AnonStorey0 // TypeDefIndex: 5652
{
	// Fields
	internal ListViewSort.PresentBoxCategoryFilterKind kind; // 0x10
	internal PresentBoxFilterSelectMenu $this; // 0x18

	// Methods

	// RVA: 0x12CBDC0 Offset: 0x12CBDC0 VA: 0x12CBDC0
	public void .ctor() { }

	// RVA: 0x12CC61C Offset: 0x12CC61C VA: 0x12CC61C
	internal void <>m__0() { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xC41FF4 Offset: 0xC41FF4 VA: 0xC41FF4
private sealed class PresentBoxFilterSelectMenu.<InitDisp>c__AnonStorey1 // TypeDefIndex: 5653
{
	// Fields
	internal ListViewSort.PresentBoxRarityFilterKind kind; // 0x10
	internal PresentBoxFilterSelectMenu $this; // 0x18

	// Methods

	// RVA: 0x12CBDC8 Offset: 0x12CBDC8 VA: 0x12CBDC8
	public void .ctor() { }

	// RVA: 0x12CC650 Offset: 0x12CC650 VA: 0x12CC650
	internal void <>m__0() { }
}

// Namespace: 
public class ServantBonusFilterEquipComponent : MonoBehaviour // TypeDefIndex: 5654
{
	// Fields
	[SerializeField] // RVA: 0xC4EBA0 Offset: 0xC4EBA0 VA: 0xC4EBA0
	private GameObject parent; // 0x18
	[SerializeField] // RVA: 0xC4EBB0 Offset: 0xC4EBB0 VA: 0xC4EBB0
	private GameObject prefab; // 0x20
	private List<ServantBonusFilterEquipListViewObject> equipList; // 0x28
	public static readonly float POS_Y_INTERVAL; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC4EBC0 Offset: 0xC4EBC0 VA: 0xC4EBC0
	private static Comparison<EventBonusFilterEntity> <>f__am$cache0; // 0x8

	// Methods

	// RVA: 0x1745838 Offset: 0x1745838 VA: 0x1745838
	public void .ctor() { }

	// RVA: 0x17458A8 Offset: 0x17458A8 VA: 0x17458A8
	public int CreateList(int[] eventIdList) { }

	// RVA: 0x17461E4 Offset: 0x17461E4 VA: 0x17461E4
	public void SetInitButtonSelect() { }

	// RVA: 0x174630C Offset: 0x174630C VA: 0x174630C
	public void SetButtonEnable(bool isEnable) { }

	// RVA: 0x1746440 Offset: 0x1746440 VA: 0x1746440
	public void ResetIndividualFilter() { }

	// RVA: 0x1746568 Offset: 0x1746568 VA: 0x1746568
	public bool IsSetIndividualFilter() { }

	// RVA: 0x17466A4 Offset: 0x17466A4 VA: 0x17466A4
	public void UpdateFilterSave() { }

	// RVA: 0x17467CC Offset: 0x17467CC VA: 0x17467CC
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8164 Offset: 0xCC8164 VA: 0xCC8164
	// RVA: 0x1746820 Offset: 0x1746820 VA: 0x1746820
	private static int <CreateList>m__0(EventBonusFilterEntity a, EventBonusFilterEntity b) { }
}

// Namespace: 
public class ServantBonusFilterEquipListViewItemDraw : MonoBehaviour // TypeDefIndex: 5655
{
	// Fields
	[SerializeField] // RVA: 0xC4EBD0 Offset: 0xC4EBD0 VA: 0xC4EBD0
	private ServantFaceIconComponent servantFaceIcon; // 0x18
	[SerializeField] // RVA: 0xC4EBE0 Offset: 0xC4EBE0 VA: 0xC4EBE0
	private EventUpValIconComponent eventUpValIcon; // 0x20
	[SerializeField] // RVA: 0xC4EBF0 Offset: 0xC4EBF0 VA: 0xC4EBF0
	private UILabel equipNameLabel; // 0x28
	[SerializeField] // RVA: 0xC4EC00 Offset: 0xC4EC00 VA: 0xC4EC00
	private SkillIconComponent skillIcon; // 0x30
	[SerializeField] // RVA: 0xC4EC10 Offset: 0xC4EC10 VA: 0xC4EC10
	private UILabel skillTextLabel; // 0x38
	[SerializeField] // RVA: 0xC4EC20 Offset: 0xC4EC20 VA: 0xC4EC20
	private UICommonButton changeDisplayButton; // 0x40
	[SerializeField] // RVA: 0xC4EC30 Offset: 0xC4EC30 VA: 0xC4EC30
	private UILabel buttonLabel; // 0x48
	private bool isButtonOn; // 0x50
	private int saveId; // 0x54
	private string saveKey; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xC4EC40 Offset: 0xC4EC40 VA: 0xC4EC40
	private static Comparison<EventMargeItemUpValInfo> <>f__am$cache0; // 0x0
	[CompilerGeneratedAttribute] // RVA: 0xC4EC50 Offset: 0xC4EC50 VA: 0xC4EC50
	private static Comparison<EventMargeItemUpValInfo> <>f__am$cache1; // 0x8

	// Methods

	// RVA: 0x13B0F38 Offset: 0x13B0F38 VA: 0x13B0F38
	public void .ctor() { }

	// RVA: 0x13B0F40 Offset: 0x13B0F40 VA: 0x13B0F40
	public void SetItem(int idx, ServantEntity equipEntity, EventUpValInfo[] eventUpValInfos, SkillInfo[] skillInfos) { }

	// RVA: 0x13B1670 Offset: 0x13B1670 VA: 0x13B1670
	public void SetItem(int idx, int[] eventIdList, int filterGroupId) { }

	// RVA: 0x13B1CF4 Offset: 0x13B1CF4 VA: 0x13B1CF4
	public void OnClickChangeDisplay() { }

	// RVA: 0x13B1F34 Offset: 0x13B1F34 VA: 0x13B1F34
	public void SetInitButtonSelect() { }

	// RVA: 0x13B1F98 Offset: 0x13B1F98 VA: 0x13B1F98
	public void SetButtonEnable(bool isEnable) { }

	// RVA: 0x13B1FD0 Offset: 0x13B1FD0 VA: 0x13B1FD0
	public void ResetDisplayButton() { }

	// RVA: 0x13B1FD8 Offset: 0x13B1FD8 VA: 0x13B1FD8
	public bool IsSetFilter() { }

	// RVA: 0x13B1FE0 Offset: 0x13B1FE0 VA: 0x13B1FE0
	public void UpdateFilterSave() { }

	// RVA: 0x13B1D70 Offset: 0x13B1D70 VA: 0x13B1D70
	private void SetButton() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8174 Offset: 0xCC8174 VA: 0xCC8174
	// RVA: 0x13B203C Offset: 0x13B203C VA: 0x13B203C
	private static int <SetItem>m__0(EventMargeItemUpValInfo a, EventMargeItemUpValInfo b) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8184 Offset: 0xCC8184 VA: 0xCC8184
	// RVA: 0x13B2070 Offset: 0x13B2070 VA: 0x13B2070
	private static int <SetItem>m__1(EventMargeItemUpValInfo a, EventMargeItemUpValInfo b) { }
}

// Namespace: 
public class ServantBonusFilterEquipListViewObject : ListViewObject // TypeDefIndex: 5656
{
	// Methods

	// RVA: 0x13B20A4 Offset: 0x13B20A4 VA: 0x13B20A4
	public void .ctor() { }

	// RVA: 0x13B210C Offset: 0x13B210C VA: 0x13B210C
	public void SetItem(int idx, ServantEntity equipEntity, EventUpValInfo[] eventUpValInfos, SkillInfo[] skillInfos) { }

	// RVA: 0x13B21B0 Offset: 0x13B21B0 VA: 0x13B21B0
	public void SetItem(int idx, int[] eventIdList, int filterGroupId) { }

	// RVA: 0x13B224C Offset: 0x13B224C VA: 0x13B224C
	public void SetInitButtonSelect() { }

	// RVA: 0x13B22C0 Offset: 0x13B22C0 VA: 0x13B22C0
	public void SetButtonEnable(bool isEnable) { }

	// RVA: 0x13B2344 Offset: 0x13B2344 VA: 0x13B2344
	public void ResetDisplayButton() { }

	// RVA: 0x13B23BC Offset: 0x13B23BC VA: 0x13B23BC
	public bool IsSetFilter() { }

	// RVA: 0x13B2430 Offset: 0x13B2430 VA: 0x13B2430
	public void UpdateFilterSave() { }
}

// Namespace: 
public class ServantBonusFilterSelectMenu : BaseDialog // TypeDefIndex: 5657
{
	// Fields
	public const string SAVE_KEY_BONUS_FILTER_EVENT_ID = "BonusFilterEventId";
	public const string SAVE_KEY_BONUS_FILTER_EQUIP_ID = "BonusFilterEquipId";
	public const string SAVE_KEY_BONUS_FILTER_GROUP_ID = "BonusFilterGroupId";
	private const string SPRITE_NAME_BUTTON_ON = "btn_bg_03";
	private const string SPRITE_NAME_BUTTON_OFF = "btn_bg_04";
	public UILabel titleLabel; // 0x58
	public UILabel explanationLabel; // 0x60
	public UILabel decideLabel; // 0x68
	public UILabel cancelLabel; // 0x70
	public UILabel clearLabel; // 0x78
	public UILabel initializeLabel; // 0x80
	public UICommonButton decideButton; // 0x88
	public UICommonButton cancelButton; // 0x90
	public UICommonButton clearButton; // 0x98
	public UICommonButton initializeButton; // 0xA0
	public UICommonButton filter1Button; // 0xA8
	public UILabel filter1Label; // 0xB0
	public UICommonButton filter2Button; // 0xB8
	public UILabel filter2Label; // 0xC0
	public UIScrollView scrollView; // 0xC8
	public UIScrollBar scrollBar; // 0xD0
	public UILabel allFilterTitleLabel; // 0xD8
	public UILabel allFilterExplanationLabel; // 0xE0
	public UICommonButton allFilterClearButton; // 0xE8
	public UICommonButton allFilterInitializeButton; // 0xF0
	public UILabel allFilterClearLabel; // 0xF8
	public UILabel allFilterInitializeLabel; // 0x100
	public UILabel maxFilterTitleLabel; // 0x108
	public UILabel maxFilterExplanationLabel; // 0x110
	public UICommonButton maxFilterClearButton; // 0x118
	public UICommonButton maxFilterInitializeButton; // 0x120
	public UILabel maxFilterClearLabel; // 0x128
	public UILabel maxFilterInitializeLabel; // 0x130
	public UILabel individualFilterTitleLabel; // 0x138
	public UILabel individualFilterExplanationLabel; // 0x140
	public UICommonButton individualFilterInitializeButton; // 0x148
	public UILabel individualFilterInitializeLabel; // 0x150
	protected const string SORT_SAVE_KEY = "ServantBonusFilterSelect";
	protected static ListViewSort commonServantSortInfo; // 0x0
	[SerializeField] // RVA: 0xC4EC60 Offset: 0xC4EC60 VA: 0xC4EC60
	private int button2PositionHorizontal; // 0x158
	[SerializeField] // RVA: 0xC4EC70 Offset: 0xC4EC70 VA: 0xC4EC70
	private int button1PositionHorizontal; // 0x15C
	[SerializeField] // RVA: 0xC4EC80 Offset: 0xC4EC80 VA: 0xC4EC80
	private ServantBonusFilterEquipComponent servantBonusFilterEquipComponent; // 0x160
	private static int maxIndividualFilter; // 0x8
	protected ServantBonusFilterSelectMenu.Kind kind; // 0x168
	protected ServantBonusFilterSelectMenu.State state; // 0x16C
	[CompilerGeneratedAttribute] // RVA: 0xC4EC90 Offset: 0xC4EC90 VA: 0xC4EC90
	[DebuggerBrowsableAttribute] // RVA: 0xC4EC90 Offset: 0xC4EC90 VA: 0xC4EC90
	private ServantBonusFilterSelectMenu.CallbackFunc callbackFunc; // 0x170
	protected Action closeCallbackFunc; // 0x178
	protected ListViewSort baseSortInfo; // 0x180
	protected ListViewSort operationSortInfo; // 0x188
	protected bool isServantBonusFilterEnable; // 0x190
	protected bool isServantEquipBonusFilterEnable; // 0x191
	private int[] eventIdList; // 0x198

	// Properties
	protected override string closeBtnPath { get; }

	// Methods

	// RVA: 0x13B24A4 Offset: 0x13B24A4 VA: 0x13B24A4
	public void .ctor() { }

	// RVA: 0x13B250C Offset: 0x13B250C VA: 0x13B250C
	protected void add_callbackFunc(ServantBonusFilterSelectMenu.CallbackFunc value) { }

	// RVA: 0x13B25FC Offset: 0x13B25FC VA: 0x13B25FC
	protected void remove_callbackFunc(ServantBonusFilterSelectMenu.CallbackFunc value) { }

	// RVA: 0x13B26EC Offset: 0x13B26EC VA: 0x13B26EC
	public static void InitLoad() { }

	// RVA: 0x13B2768 Offset: 0x13B2768 VA: 0x13B2768
	public static ListViewSort GetServantFilterInfo() { }

	// RVA: 0x13B27F4 Offset: 0x13B27F4 VA: 0x13B27F4
	public static int GetMaxIndividualFilter() { }

	// RVA: 0x13B2914 Offset: 0x13B2914 VA: 0x13B2914
	public void Init() { }

	// RVA: 0x13B2920 Offset: 0x13B2920 VA: 0x13B2920
	public void Open(ServantBonusFilterSelectMenu.Kind kind, bool isServantBonusFilterEnable, bool isServantEquipBonusFilterEnable, ListViewSort sort, ServantBonusFilterSelectMenu.CallbackFunc callback) { }

	// RVA: 0x13B3584 Offset: 0x13B3584 VA: 0x13B3584
	protected void EndOpen() { }

	// RVA: 0x13B3590 Offset: 0x13B3590 VA: 0x13B3590
	public void Close() { }

	// RVA: 0x13B3598 Offset: 0x13B3598 VA: 0x13B3598
	public void Close(Action callback) { }

	// RVA: 0x13B3628 Offset: 0x13B3628 VA: 0x13B3628
	protected void EndClose() { }

	// RVA: 0x13B366C Offset: 0x13B366C VA: 0x13B366C
	protected void Callback(bool result) { }

	// RVA: 0x13B38B8 Offset: 0x13B38B8 VA: 0x13B38B8
	private void MoveButton(UICommonButton button, int x) { }

	// RVA: 0x13B332C Offset: 0x13B332C VA: 0x13B332C
	private void SetButtonEnable(bool isEnable) { }

	// RVA: 0x13B310C Offset: 0x13B310C VA: 0x13B310C
	private void SetButtonSelect() { }

	// RVA: 0x13B3994 Offset: 0x13B3994 VA: 0x13B3994
	public void OnClickDecide() { }

	// RVA: 0x13B3C6C Offset: 0x13B3C6C VA: 0x13B3C6C
	public void OnClickCancel() { }

	// RVA: 0x13B3D0C Offset: 0x13B3D0C VA: 0x13B3D0C
	public void OnClickClear() { }

	// RVA: 0x13B3DDC Offset: 0x13B3DDC VA: 0x13B3DDC
	public void OnClickInitialize() { }

	// RVA: 0x13B3EAC Offset: 0x13B3EAC VA: 0x13B3EAC
	public void OnClickFilter1() { }

	// RVA: 0x13B3F54 Offset: 0x13B3F54 VA: 0x13B3F54
	public void OnClickFilter2() { }

	// RVA: 0x13B3FFC Offset: 0x13B3FFC VA: 0x13B3FFC
	public void OnClickAllDisplay() { }

	// RVA: 0x13B40CC Offset: 0x13B40CC VA: 0x13B40CC
	public void OnClickMaxOnlyDisplay() { }

	// RVA: 0x13B419C Offset: 0x13B419C VA: 0x13B419C
	public void OnClickResetIndividual() { }

	// RVA: 0x13B4238 Offset: 0x13B4238 VA: 0x13B4238 Slot: 6
	protected override string get_closeBtnPath() { }

	// RVA: 0x13B4280 Offset: 0x13B4280 VA: 0x13B4280
	private static void .cctor() { }
}

// Namespace: 
public enum ServantBonusFilterSelectMenu.Kind // TypeDefIndex: 5658
{
	// Fields
	public int value__; // 0x0
	public const ServantBonusFilterSelectMenu.Kind SUPPORT = 0;
}

// Namespace: 
protected enum ServantBonusFilterSelectMenu.State // TypeDefIndex: 5659
{
	// Fields
	public int value__; // 0x0
	public const ServantBonusFilterSelectMenu.State INIT = 0;
	public const ServantBonusFilterSelectMenu.State OPEN = 1;
	public const ServantBonusFilterSelectMenu.State INPUT = 2;
	public const ServantBonusFilterSelectMenu.State SELECTED = 3;
	public const ServantBonusFilterSelectMenu.State CLOSE = 4;
}

// Namespace: 
public sealed class ServantBonusFilterSelectMenu.CallbackFunc : MulticastDelegate // TypeDefIndex: 5660
{
	// Methods

	// RVA: 0x13B4300 Offset: 0x13B4300 VA: 0x13B4300
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x13B368C Offset: 0x13B368C VA: 0x13B368C Slot: 11
	public virtual void Invoke(bool result) { }

	// RVA: 0x13B4310 Offset: 0x13B4310 VA: 0x13B4310 Slot: 12
	public virtual IAsyncResult BeginInvoke(bool result, AsyncCallback callback, object object) { }

	// RVA: 0x13B43A0 Offset: 0x13B43A0 VA: 0x13B43A0 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantEquipEffectFilterContainer : MonoBehaviour // TypeDefIndex: 5661
{
	// Fields
	private static readonly int TITLE_LINE_SPRITE_SPACE; // 0x0
	private static readonly int TITLE_WIDTH; // 0x4
	[SerializeField] // RVA: 0xC4ECCC Offset: 0xC4ECCC VA: 0xC4ECCC
	private ServantEquipEffectFilterItem itemPrefab; // 0x18
	[SerializeField] // RVA: 0xC4ECDC Offset: 0xC4ECDC VA: 0xC4ECDC
	private UIGrid grid; // 0x20
	[SerializeField] // RVA: 0xC4ECEC Offset: 0xC4ECEC VA: 0xC4ECEC
	private UILabel titleLabel; // 0x28
	[SerializeField] // RVA: 0xC4ECFC Offset: 0xC4ECFC VA: 0xC4ECFC
	private UISprite leftLineSptite; // 0x30
	[SerializeField] // RVA: 0xC4ED0C Offset: 0xC4ED0C VA: 0xC4ED0C
	private UISprite rightLineSptite; // 0x38
	private ListViewSort sort; // 0x40
	private List<ServantEquipEffectFilterItem> itemList; // 0x48
	[CompilerGeneratedAttribute] // RVA: 0xC4ED1C Offset: 0xC4ED1C VA: 0xC4ED1C
	[DebuggerBrowsableAttribute] // RVA: 0xC4ED1C Offset: 0xC4ED1C VA: 0xC4ED1C
	private Vector3 <BottomPosition>k__BackingField; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xC4ED58 Offset: 0xC4ED58 VA: 0xC4ED58
	private static Comparison<FunctionCategoryEntity> <>f__am$cache0; // 0x8

	// Properties
	private Vector3 Position { get; set; }
	public Vector3 BottomPosition { get; set; }

	// Methods

	// RVA: 0x1A0C544 Offset: 0x1A0C544 VA: 0x1A0C544
	public void .ctor() { }

	// RVA: 0x1A0C54C Offset: 0x1A0C54C VA: 0x1A0C54C
	private void set_Position(Vector3 value) { }

	// RVA: 0x1A0C5A8 Offset: 0x1A0C5A8 VA: 0x1A0C5A8
	private Vector3 get_Position() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC8194 Offset: 0xCC8194 VA: 0xCC8194
	// RVA: 0x1A0C5DC Offset: 0x1A0C5DC VA: 0x1A0C5DC
	private void set_BottomPosition(Vector3 value) { }

	[CompilerGeneratedAttribute] // RVA: 0xCC81A4 Offset: 0xCC81A4 VA: 0xCC81A4
	// RVA: 0x1A0C5E8 Offset: 0x1A0C5E8 VA: 0x1A0C5E8
	public Vector3 get_BottomPosition() { }

	// RVA: 0x1A0C5F4 Offset: 0x1A0C5F4 VA: 0x1A0C5F4
	public void Init(FunctionCategoryEntity[] entities, FunctionCategoryEntity.GroupType groupType, ListViewSort sort, Vector3 position, Action onclickEvent, FunctionCategoryEntity.Flag categoryFlag) { }

	// RVA: 0x1A0C674 Offset: 0x1A0C674 VA: 0x1A0C674
	private void SetupHeader(FunctionCategoryEntity.GroupType groupType, FunctionCategoryEntity.Flag categoryFlag) { }

	// RVA: 0x1A0CAB8 Offset: 0x1A0CAB8 VA: 0x1A0CAB8
	private void RefreshItems(FunctionCategoryEntity[] entities, ListViewSort sort, Action onclickEvent) { }

	// RVA: 0x1A0CDF8 Offset: 0x1A0CDF8 VA: 0x1A0CDF8
	private void SetBottomPosition(int displayCount) { }

	// RVA: 0x1A0CFEC Offset: 0x1A0CFEC VA: 0x1A0CFEC
	private void SetCollider() { }

	// RVA: 0x1A0D2AC Offset: 0x1A0D2AC VA: 0x1A0D2AC
	public void SetEnableFilterButton(bool isEnable) { }

	// RVA: 0x1A0D414 Offset: 0x1A0D414 VA: 0x1A0D414
	public void RefreshSelectState() { }

	// RVA: 0x1A0D584 Offset: 0x1A0D584 VA: 0x1A0D584
	public void ForceSelectAll() { }

	// RVA: 0x1A0D714 Offset: 0x1A0D714 VA: 0x1A0D714
	public void ForceDeselectAll() { }

	// RVA: 0x1A0D83C Offset: 0x1A0D83C VA: 0x1A0D83C
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC81B4 Offset: 0xCC81B4 VA: 0xCC81B4
	// RVA: 0x1A0D8A0 Offset: 0x1A0D8A0 VA: 0x1A0D8A0
	private static int <RefreshItems>m__0(FunctionCategoryEntity x, FunctionCategoryEntity y) { }
}

// Namespace: 
public class ServantEquipEffectFilterController : MonoBehaviour // TypeDefIndex: 5662
{
	// Fields
	private readonly int WIDGET_HEIGHT_ADD_VALUE; // 0x18
	private readonly List<FunctionCategoryEntity.GroupType> SvtEqDisplayGroups; // 0x20
	private readonly List<FunctionCategoryEntity.GroupType> CommandCodeDisplayGroups; // 0x28
	[SerializeField] // RVA: 0xC4ED68 Offset: 0xC4ED68 VA: 0xC4ED68
	private UILabel titleLabel; // 0x30
	[SerializeField] // RVA: 0xC4ED78 Offset: 0xC4ED78 VA: 0xC4ED78
	private UISprite lineSprite; // 0x38
	[SerializeField] // RVA: 0xC4ED88 Offset: 0xC4ED88 VA: 0xC4ED88
	private Transform containerHolder; // 0x40
	[SerializeField] // RVA: 0xC4ED98 Offset: 0xC4ED98 VA: 0xC4ED98
	private ServantEquipEffectFilterContainer containerPrefab; // 0x48
	[SerializeField] // RVA: 0xC4EDA8 Offset: 0xC4EDA8 VA: 0xC4EDA8
	private GameObject buttonContainer; // 0x50
	[SerializeField] // RVA: 0xC4EDB8 Offset: 0xC4EDB8 VA: 0xC4EDB8
	private UICommonButton forceSelectAllButton; // 0x58
	[SerializeField] // RVA: 0xC4EDC8 Offset: 0xC4EDC8 VA: 0xC4EDC8
	private UICommonButton forceDeselectAllButton; // 0x60
	[SerializeField] // RVA: 0xC4EDD8 Offset: 0xC4EDD8 VA: 0xC4EDD8
	private UILabel forceSelectAllButtonLabel; // 0x68
	[SerializeField] // RVA: 0xC4EDE8 Offset: 0xC4EDE8 VA: 0xC4EDE8
	private UILabel forceDeselectAllButtonLabel; // 0x70
	private ListViewSort sort; // 0x78
	private List<ServantEquipEffectFilterContainer> containerList; // 0x80
	private Dictionary<int, int> defaultFilterData; // 0x88
	private Action onClickEvent; // 0x90
	private FunctionCategoryEntity.Flag categoryFlag; // 0x98
	private List<FunctionCategoryEntity.GroupType> displayGroups; // 0xA0

	// Methods

	// RVA: 0x1A0D8E0 Offset: 0x1A0D8E0 VA: 0x1A0D8E0
	public void .ctor() { }

	// RVA: 0x1A0DB68 Offset: 0x1A0DB68 VA: 0x1A0DB68
	public void Init(ListViewSort sort, Action onclickEvent) { }

	// RVA: 0x1A0E4A4 Offset: 0x1A0E4A4 VA: 0x1A0E4A4
	public void RefreshSelectState() { }

	// RVA: 0x1A0DBE4 Offset: 0x1A0DBE4 VA: 0x1A0DBE4
	private void SetupLabelObject() { }

	// RVA: 0x1A0DCF0 Offset: 0x1A0DCF0 VA: 0x1A0DCF0
	private void SetDefaultFilterData() { }

	// RVA: 0x1A0E5C8 Offset: 0x1A0E5C8 VA: 0x1A0E5C8
	public bool IsChangeFilterData() { }

	// RVA: 0x1A0DE9C Offset: 0x1A0DE9C VA: 0x1A0DE9C
	private void RefreshContainers() { }

	// RVA: 0x1A0E768 Offset: 0x1A0E768 VA: 0x1A0E768
	public void SetEnableFilterButton(bool isEnable) { }

	// RVA: 0x1A0E8E0 Offset: 0x1A0E8E0 VA: 0x1A0E8E0
	public void OnClick_Category() { }

	// RVA: 0x1A0E954 Offset: 0x1A0E954 VA: 0x1A0E954
	public void OnClick_ForceSelectAll() { }

	// RVA: 0x1A0EAB0 Offset: 0x1A0EAB0 VA: 0x1A0EAB0
	public void OnClick_ForceDeselectAll() { }

	// RVA: 0x1A0EC0C Offset: 0x1A0EC0C VA: 0x1A0EC0C
	public static bool IsMatchEffectCategory(int[] cateforyIdList, ListViewSort sort) { }
}

// Namespace: 
public class ServantEquipEffectFilterItem : MonoBehaviour // TypeDefIndex: 5663
{
	// Fields
	private static readonly int LABEL_MAX_WIDTH; // 0x0
	[SerializeField] // RVA: 0xC4EDF8 Offset: 0xC4EDF8 VA: 0xC4EDF8
	private UILabel titleLabel; // 0x18
	[SerializeField] // RVA: 0xC4EE08 Offset: 0xC4EE08 VA: 0xC4EE08
	private UICommonButton button; // 0x20
	[SerializeField] // RVA: 0xC4EE18 Offset: 0xC4EE18 VA: 0xC4EE18
	private UISprite checkMarkSprite; // 0x28
	private FunctionCategoryEntity entity; // 0x30
	private ListViewSort sort; // 0x38
	private Action onClickEvent; // 0x40
	private bool isSelected; // 0x48

	// Methods

	// RVA: 0x1A0ECA8 Offset: 0x1A0ECA8 VA: 0x1A0ECA8
	public void .ctor() { }

	// RVA: 0x1A0D1BC Offset: 0x1A0D1BC VA: 0x1A0D1BC
	public void Init(FunctionCategoryEntity entity, ListViewSort sort, bool isSelected, Action onClickEvent) { }

	// RVA: 0x1A0D538 Offset: 0x1A0D538 VA: 0x1A0D538
	public void RefreshSelectState() { }

	// RVA: 0x1A0D6AC Offset: 0x1A0D6AC VA: 0x1A0D6AC
	public void SetSelectState(bool isSelected) { }

	// RVA: 0x1A0ECB0 Offset: 0x1A0ECB0 VA: 0x1A0ECB0
	private void SetCheckMark() { }

	// RVA: 0x1A0D3DC Offset: 0x1A0D3DC VA: 0x1A0D3DC
	public void SetEnableFilterButton(bool isEnable) { }

	// RVA: 0x1A0ED08 Offset: 0x1A0ED08 VA: 0x1A0ED08
	public void OnClick() { }

	// RVA: 0x1A0ED3C Offset: 0x1A0ED3C VA: 0x1A0ED3C
	private static void .cctor() { }
}

// Namespace: 
[ExecuteInEditMode] // RVA: 0xC24F6C Offset: 0xC24F6C VA: 0xC24F6C
public class ServantFilterButtonControl : MonoBehaviour // TypeDefIndex: 5664
{
	// Fields
	private static readonly string SPRITE_NAME_ENABLE; // 0x0
	private static readonly string SPRITE_NAME_DISABLE; // 0x8
	[SerializeField] // RVA: 0xC4EE28 Offset: 0xC4EE28 VA: 0xC4EE28
	private ListViewSort.FilterKind filterKind; // 0x18
	[SerializeField] // RVA: 0xC4EE38 Offset: 0xC4EE38 VA: 0xC4EE38
	private UICommonButton button; // 0x20
	[SerializeField] // RVA: 0xC4EE48 Offset: 0xC4EE48 VA: 0xC4EE48
	private UISprite buttonSprite; // 0x28
	[SerializeField] // RVA: 0xC4EE58 Offset: 0xC4EE58 VA: 0xC4EE58
	private UILabel buttonText; // 0x30
	private ListViewSort targetSort; // 0x38
	private ServantFilterButtonControl.OnClickFilterButton onClickFilterEvent; // 0x40

	// Properties
	public ListViewSort.FilterKind FilterKind { get; }
	private bool IsSelected { get; }
	public UISprite ButtonSprite { get; }

	// Methods

	// RVA: 0x16B7B50 Offset: 0x16B7B50 VA: 0x16B7B50
	public void .ctor() { }

	// RVA: 0x16B7B58 Offset: 0x16B7B58 VA: 0x16B7B58
	public ListViewSort.FilterKind get_FilterKind() { }

	// RVA: 0x16B7B60 Offset: 0x16B7B60 VA: 0x16B7B60
	private bool get_IsSelected() { }

	// RVA: 0x16B7B7C Offset: 0x16B7B7C VA: 0x16B7B7C
	public UISprite get_ButtonSprite() { }

	// RVA: 0x16B7B84 Offset: 0x16B7B84 VA: 0x16B7B84
	private void Awake() { }

	// RVA: 0x16B7B88 Offset: 0x16B7B88 VA: 0x16B7B88
	public void Init(ListViewSort targetSort, ServantFilterButtonControl.OnClickFilterButton onClickFilter, bool isDisplay) { }

	// RVA: 0x16B7C48 Offset: 0x16B7C48 VA: 0x16B7C48
	private void RefreshButton() { }

	// RVA: 0x16B7CA8 Offset: 0x16B7CA8 VA: 0x16B7CA8
	public void RefreshButtonSelectState() { }

	// RVA: 0x16B7D90 Offset: 0x16B7D90 VA: 0x16B7D90
	public void SetButtonEnable(bool isEnable) { }

	// RVA: 0x16B7DC8 Offset: 0x16B7DC8 VA: 0x16B7DC8
	public void OnClickEvent() { }

	// RVA: 0x16B8010 Offset: 0x16B8010 VA: 0x16B8010
	private static void .cctor() { }
}

// Namespace: 
public sealed class ServantFilterButtonControl.OnClickFilterButton : MulticastDelegate // TypeDefIndex: 5665
{
	// Methods

	// RVA: 0x16B8084 Offset: 0x16B8084 VA: 0x16B8084
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x16B7DE4 Offset: 0x16B7DE4 VA: 0x16B7DE4 Slot: 11
	public virtual void Invoke(ListViewSort.FilterKind filterKind) { }

	// RVA: 0x16B8094 Offset: 0x16B8094 VA: 0x16B8094 Slot: 12
	public virtual IAsyncResult BeginInvoke(ListViewSort.FilterKind filterKind, AsyncCallback callback, object object) { }

	// RVA: 0x16B8120 Offset: 0x16B8120 VA: 0x16B8120 Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class ServantFilterCategoryContainer : MonoBehaviour // TypeDefIndex: 5666
{
	// Fields
	private static readonly Dictionary<ListViewSort.FilterCategoryKind, string> CategoryTitleLocalizationKeyDic; // 0x0
	private readonly Vector3 GRID_COLUMN_5_GRID_SCALE; // 0x18
	private readonly Vector2 GRID_COLUMN_5_GRID_CELL_SIZE; // 0x24
	private readonly float LINE_SPRITE_DIFF_Y; // 0x2C
	private readonly int WIDGET_HEIGHT_DIFF; // 0x30
	[SerializeField] // RVA: 0xC4EE68 Offset: 0xC4EE68 VA: 0xC4EE68
	private ListViewSort.FilterCategoryKind categoryKind; // 0x34
	[SerializeField] // RVA: 0xC4EE78 Offset: 0xC4EE78 VA: 0xC4EE78
	private UIWidget widget; // 0x38
	[SerializeField] // RVA: 0xC4EE88 Offset: 0xC4EE88 VA: 0xC4EE88
	private UILabel titleLabal; // 0x40
	[SerializeField] // RVA: 0xC4EE98 Offset: 0xC4EE98 VA: 0xC4EE98
	private UIGrid grid; // 0x48
	[SerializeField] // RVA: 0xC4EEA8 Offset: 0xC4EEA8 VA: 0xC4EEA8
	private UISprite lineSprite; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xC4EEB8 Offset: 0xC4EEB8 VA: 0xC4EEB8
	private static Predicate<Transform> <>f__am$cache0; // 0x8

	// Properties
	public ListViewSort.FilterCategoryKind CategoryKind { get; }
	public UIGrid Grid { get; }
	public Vector3 BottomPosition { get; }

	// Methods

	// RVA: 0x16B812C Offset: 0x16B812C VA: 0x16B812C
	public void .ctor() { }

	// RVA: 0x16B81CC Offset: 0x16B81CC VA: 0x16B81CC
	public ListViewSort.FilterCategoryKind get_CategoryKind() { }

	// RVA: 0x16B81D4 Offset: 0x16B81D4 VA: 0x16B81D4
	public UIGrid get_Grid() { }

	// RVA: 0x16B81DC Offset: 0x16B81DC VA: 0x16B81DC
	public Vector3 get_BottomPosition() { }

	// RVA: 0x16B82EC Offset: 0x16B82EC VA: 0x16B82EC
	public void SetPosition(Vector3 position) { }

	// RVA: 0x16B8330 Offset: 0x16B8330 VA: 0x16B8330
	public void SetActive(bool isActive) { }

	// RVA: 0x16B836C Offset: 0x16B836C VA: 0x16B836C
	public void Layout(bool isLast = False) { }

	// RVA: 0x16B8954 Offset: 0x16B8954 VA: 0x16B8954
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xCC81C4 Offset: 0xCC81C4 VA: 0xCC81C4
	// RVA: 0x16B8C1C Offset: 0x16B8C1C VA: 0x16B8C1C
	private static bool <Layout>m__0(Transform x) { }
}

// Namespace: 
public class ServantFilterSelectMenu : BaseDialog // TypeDefIndex: 5667
{
	// Fields
	public UILabel titleLabel; // 0x58
	public UILabel warningLabel; // 0x60
	public UILabel decideLabel; // 0x68
	public UILabel cancelLabel; // 0x70
	public UILabel clearLabel; // 0x78
	public UILabel initializeLabel; // 0x80
	public UICommonButton decideButton; // 0x88
	public UICommonButton cancelButton; // 0x90
	public UICommonButton clearButton; // 0x98
	public UICommonButton initializeButton; // 0xA0
	[SerializeField] // RVA: 0xC4EEC8 Offset: 0xC4EEC8 VA: 0xC4EEC8
	private ServantFilterSelectMenu.FilterContainer servantFilterConatiner; // 0xA8
	[SerializeField] // RVA: 0xC4EED8 Offset: 0xC4EED8 VA: 0xC4EED8
	private ServantFilterSelectMenu.FilterContainer servantEquipFilterContainer; // 0xB0
	[SerializeField] // RVA: 0xC4EEE8 Offset: 0xC4EEE8 VA: 0xC4EEE8
	private ServantFilterSelectMenu.FilterContainer commandCodeFilterContainer; // 0xB8
	[SerializeField] // RVA: 0xC4EEF8 Offset: 0xC4EEF8 VA: 0xC4EEF8
	private ServantFilterSelectMenu.FilterContainer costumeFilterContainer; // 0xC0
	[SerializeField] // RVA: 0xC4EF08 Offset: 0xC4EF08 VA: 0xC4EF08
	private ServantEquipEffectFilterController svtEquipEffectFilterController; // 0xC8
	[SerializeField] // RVA: 0xC4EF18 Offset: 0xC4EF18 VA: 0xC4EF18
	private ServantEquipEffectFilterController commandCodeEffectFilterController; // 0xD0
	private ServantFilterSelectMenu.FilterContainer currentFilterContainer; // 0xD8
	private List<ListViewSort.FilterKind> useFilterKindList; // 0xE0
	private List<ServantFilterButtonControl> useFilterButtonList; // 0xE8
	protected const string SORT_SAVE_KEY = "ServantFilterSelect";
	protected static ListViewSort commonServantSortInfo; // 0x0
	protected bool[] kindStatus; // 0xF0
	protected ServantFilterSelectMenu.Kind kind; // 0xF8
	protected ServantFilterSelectMenu.State state; // 0xFC
	[CompilerGeneratedAttribute] // RVA: 0xC4EF28 Offset: 0xC4EF28 VA: 0xC4EF28
	[DebuggerBrowsableAttribute] // RVA: 0xC4EF28 Offset: 0xC4EF28 VA: 0xC4EF28
	private ServantFilterSelectMenu.CallbackFunc callbackFunc; // 0x100
	protected Action closeCallbackFunc; // 0x108
	protected ListViewSort baseSortInfo; // 0x110
	protected ListViewSort operationSortInfo; // 0x118
	protected ListViewManager listViewManager; // 0x120
	[CompilerGeneratedAttribute] // RVA: 0xC4EF64 Offset: 0xC4EF64 VA: 0xC4EF64
	private static Predicate<ServantFilterCategoryContainer> <>f__am$cache0; // 0x8
