	internal AssistEntity beforeAssistEnt; // 0x18
	internal AssistEntity afterAssistEnt; // 0x20
	internal EventRewardAssistConfirmDialog $this; // 0x28

	// Methods

	// RVA: 0x1CA70C4 Offset: 0x1CA70C4 VA: 0x1CA70C4
	public void .ctor() { }

	// RVA: 0x1CA72FC Offset: 0x1CA72FC VA: 0x1CA72FC
	internal void <>m__0() { }
}

// Namespace: 
public class EventRewardButtonChangeManager : MonoBehaviour // TypeDefIndex: 9816
{
	// Fields
	protected static readonly string BTN_NAME_TYPE3_ON; // 0x0
	protected static readonly string BTN_NAME_TYPE3_OFF; // 0x8
	protected static readonly string BTN_NAME_TYPE2_ON; // 0x10
	protected static readonly string BTN_NAME_TYPE2_OFF; // 0x18
	protected static readonly string BTN_NAME_TYPE4_ON; // 0x20
	protected static readonly string BTN_NAME_TYPE4_OFF; // 0x28
	protected static readonly string RELEASE_EFFECT_4TAB_NAME; // 0x30
	protected static readonly string RELEASE_EFFECT_3TAB_NAME; // 0x38
	protected static readonly string RELEASE_EFFECT_2TAB_NAME; // 0x40
	protected static readonly string DISABLE_BTN_TXT; // 0x48
	[SerializeField] // RVA: 0xCDAF04 Offset: 0xCDAF04 VA: 0xCDAF04
	protected UICommonButton[] eventBtns; // 0x18
	[SerializeField] // RVA: 0xCDAF14 Offset: 0xCDAF14 VA: 0xCDAF14
	protected UISprite[] eventBtnImages; // 0x20
	[SerializeField] // RVA: 0xCDAF24 Offset: 0xCDAF24 VA: 0xCDAF24
	protected GameObject[] backImgObjs; // 0x28
	[SerializeField] // RVA: 0xCDAF34 Offset: 0xCDAF34 VA: 0xCDAF34
	protected GameObject[] activeImgObjs; // 0x30
	[SerializeField] // RVA: 0xCDAF44 Offset: 0xCDAF44 VA: 0xCDAF44
	protected UISprite[] btnTxtSprites; // 0x38
	[SerializeField] // RVA: 0xCDAF54 Offset: 0xCDAF54 VA: 0xCDAF54
	protected GameObject[] tabColliders; // 0x40
	private int[] tabImageIds; // 0x48
	private EventRewardSceneReleaseEntity[] releaseEntityArray; // 0x50
	private AssetData efffectData; // 0x58
	private GameObject[] effectObject; // 0x60
	private int eventCount; // 0x68
	private int closedTabImageId; // 0x6C
	private int eventId; // 0x70
	private int releaseSlot; // 0x74
	private Action RequestEndCallBack; // 0x78
	[CompilerGeneratedAttribute] // RVA: 0xCDAF64 Offset: 0xCDAF64 VA: 0xCDAF64
	private static Action <>f__am$cache0; // 0x50
	[CompilerGeneratedAttribute] // RVA: 0xCDAF74 Offset: 0xCDAF74 VA: 0xCDAF74
	private static Action <>f__am$cache1; // 0x58
	[CompilerGeneratedAttribute] // RVA: 0xCDAF84 Offset: 0xCDAF84 VA: 0xCDAF84
	private static Action <>f__am$cache2; // 0x60
	[CompilerGeneratedAttribute] // RVA: 0xCDAF94 Offset: 0xCDAF94 VA: 0xCDAF94
	private static Action <>f__am$cache3; // 0x68

	// Methods

	// RVA: 0x1635694 Offset: 0x1635694 VA: 0x1635694
	public void .ctor() { }

	// RVA: 0x163569C Offset: 0x163569C VA: 0x163569C
	public void TabInitialize(int eventId) { }

	// RVA: 0x1635800 Offset: 0x1635800 VA: 0x1635800
	public void SetReleaseBtnState(EventRewardSceneReleaseEntity[] entitys, int closedImageId, Action effectEndCallBack) { }

	// RVA: 0x1635810 Offset: 0x1635810 VA: 0x1635810
	public void SetReleaseEffectData(AssetData data) { }

	// RVA: 0x163581C Offset: 0x163581C VA: 0x163581C
	public void ChangeTabInfo(int priorityId, int currentEventId, EventRewardSceneEntity[] eventRewardSceneEnt, int openSlot, bool openedTab) { }

	// RVA: 0x1636410 Offset: 0x1636410 VA: 0x1636410
	public void SetBtnCollider(bool isDisp, int currentEventSlotIndex) { }

	// RVA: 0x16365C8 Offset: 0x16365C8 VA: 0x16365C8
	public void SetReleaseEffect(int eventId, int eventCount, int slot, Action changeCallback, Action endCallback) { }

	// RVA: 0x1636DF4 Offset: 0x1636DF4 VA: 0x1636DF4
	private string GetReleaseBtnSpriteName(int eventId, int releaseTabPriority) { }

	// RVA: 0x1636A60 Offset: 0x1636A60 VA: 0x1636A60
	private void SetReleaseBeforeTabInfo(int eventId, int tabPriority, int eventCount) { }

	// RVA: 0x1636F10 Offset: 0x1636F10 VA: 0x1636F10
	public void OnClickDisableLeftButton() { }

	// RVA: 0x16370FC Offset: 0x16370FC VA: 0x16370FC
	public void OnClickDisableCenterButton() { }

	// RVA: 0x16372EC Offset: 0x16372EC VA: 0x16372EC
	public void OnClickDisableRightButton() { }

	// RVA: 0x163761C Offset: 0x163761C VA: 0x163761C
	public void StartTutorialRequest() { }

	// RVA: 0x16376F4 Offset: 0x16376F4 VA: 0x16376F4
	public void EndTutorialRequest(string result) { }

	// RVA: 0x1637710 Offset: 0x1637710 VA: 0x1637710
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D684 Offset: 0xD3D684 VA: 0xD3D684
	// RVA: 0x1637824 Offset: 0x1637824 VA: 0x1637824
	private static void <OnClickDisableLeftButton>m__0() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D694 Offset: 0xD3D694 VA: 0xD3D694
	// RVA: 0x1637884 Offset: 0x1637884 VA: 0x1637884
	private static void <OnClickDisableCenterButton>m__1() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D6A4 Offset: 0xD3D6A4 VA: 0xD3D6A4
	// RVA: 0x16378E4 Offset: 0x16378E4 VA: 0x16378E4
	private static void <OnClickDisableRightButton>m__2() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D6B4 Offset: 0xD3D6B4 VA: 0xD3D6B4
	// RVA: 0x1637944 Offset: 0x1637944 VA: 0x1637944
	private static void <OnClickDisableRightButton>m__3() { }
}

// Namespace: 
public enum EventRewardButtonChangeManager.SlotIndex // TypeDefIndex: 9817
{
	// Fields
	public int value__; // 0x0
	public const EventRewardButtonChangeManager.SlotIndex Slot1 = 0;
	public const EventRewardButtonChangeManager.SlotIndex Slot2 = 1;
	public const EventRewardButtonChangeManager.SlotIndex Slot3 = 2;
	public const EventRewardButtonChangeManager.SlotIndex Slot4 = 3;
}

// Namespace: 
public class EventRewardRootComponent : SceneRootComponent // TypeDefIndex: 9818
{
	// Fields
	protected static readonly int DEFAULT_EVENT_ID; // 0x0
	protected static readonly int DEFAULT_BG_ID; // 0x4
	protected static readonly int DEFAULT_SVT_ID; // 0x8
	protected static readonly string DEFAULT_BGM_NAME; // 0x10
	protected static readonly string BG_ROOT; // 0x18
	protected static readonly Rect DISP_RECT; // 0x20
	protected static readonly int DEFAULT_INFOPANEL_HEIGHT; // 0x30
	protected static readonly int DEFAULT_SLIDERPANEL_HEIGHT; // 0x34
	protected static readonly string LOGO_BG_SPRITENAME_ROOT; // 0x38
	protected static readonly string LOGO_SPRITENAME_ROOT; // 0x40
	protected static readonly string REWARD_RARITY_SPRITE_NAME; // 0x48
	protected static readonly int SCOPE_INFOPANEL_ADD_HEIGHT; // 0x50
	protected static readonly int SCOPE_ITEM_INFO_ADD_WIDTH; // 0x54
	protected static readonly float OPEN_TIME; // 0x58
	protected static readonly float CLOSE_TIME; // 0x5C
	protected static readonly int FIGURE_ID; // 0x60
	protected static readonly int DEFAULT_EVENT_SHOP_ID; // 0x64
	protected static readonly int DEFAULT_BG_SHOP_ID; // 0x68
	protected static readonly int DEFAULT_SVT_SHOP_ID; // 0x6C
	protected static readonly int LISTUP_HEIGHT; // 0x70
	protected static readonly int DEFAULT_INFO_OBJECT_HEIGHT; // 0x74
	protected static readonly int SHIFT_LOGO; // 0x78
	protected static readonly float CHANGE_TIME; // 0x7C
	protected static readonly float[] ENABLE_TIME_SHOP_STRING_POS; // 0x80
	protected static readonly float[] ENABLE_TIME_GACHA_STRING_POS; // 0x88
	protected static readonly float[] ENABLE_TIME_GACHA_OBJECT_POS; // 0x90
	protected static readonly float END_EVENT_STRING_POS; // 0x98
	protected static readonly float BOX_GACHA_RESOURCE_POS; // 0x9C
	protected static readonly float DEFAULT_POS; // 0xA0
	protected static readonly float BOX_GACHA_POS; // 0xA4
	protected static readonly float DEFAULT_POSX; // 0xA8
	private const float NOTICE_WINDOW_POSITION_Y = 14.7;
	private const float NOTICE_WINDOW_BUTTON_Y = -162.5;
	private const int NOTICE_WINDOW_DEPTH = 210;
	protected static readonly string LOAD_EFFECT_NAME; // 0xB0
	private string recoveryFatiguePath; // 0x38
	protected static readonly string RECOVERY_FATIGUE_PREFAB; // 0xB8
	private static readonly string ITEM_GET_ASSET_NAME; // 0xC0
	private static readonly string ITEM_GET_EFFECT_NAME; // 0xC8
	private static Dictionary<int, int> checkList; // 0xD0
	private static bool isFirst; // 0xD8
	private static List<EventRewardRootComponent.unselectedSvtData> unselectedSvtDataList; // 0xE0
	protected static readonly Vector3 BOX_COUNT_EXISTS_LABEL_POSITION; // 0xE8
	[SerializeField] // RVA: 0xCDAFA4 Offset: 0xCDAFA4 VA: 0xCDAFA4
	protected TitleInfoControl titleInfo; // 0x40
	[SerializeField] // RVA: 0xCDAFB4 Offset: 0xCDAFB4 VA: 0xCDAFB4
	protected ExUITexture[] backgroundTextures; // 0x48
	[SerializeField] // RVA: 0xCDAFC4 Offset: 0xCDAFC4 VA: 0xCDAFC4
	protected UISprite eventLogoSprite; // 0x50
	[SerializeField] // RVA: 0xCDAFD4 Offset: 0xCDAFD4 VA: 0xCDAFD4
	protected UISprite eventLogoBgSprite; // 0x58
	[SerializeField] // RVA: 0xCDAFE4 Offset: 0xCDAFE4 VA: 0xCDAFE4
	protected GameObject bgImgObj; // 0x60
	[SerializeField] // RVA: 0xCDAFF4 Offset: 0xCDAFF4 VA: 0xCDAFF4
	protected GameObject boxGachaInfoObj; // 0x68
	[SerializeField] // RVA: 0xCDB004 Offset: 0xCDB004 VA: 0xCDB004
	protected GameObject eventPointInfoObj; // 0x70
	[SerializeField] // RVA: 0xCDB014 Offset: 0xCDB014 VA: 0xCDB014
	protected GameObject eventMissionInfoObj; // 0x78
	[SerializeField] // RVA: 0xCDB024 Offset: 0xCDB024 VA: 0xCDB024
	protected GameObject eventShopInfoObj; // 0x80
	[SerializeField] // RVA: 0xCDB034 Offset: 0xCDB034 VA: 0xCDB034
	protected GameObject eventRankingInfoObj; // 0x88
	[SerializeField] // RVA: 0xCDB044 Offset: 0xCDB044 VA: 0xCDB044
	protected GameObject eventTowerInfoObj; // 0x90
	[SerializeField] // RVA: 0xCDB054 Offset: 0xCDB054 VA: 0xCDB054
	protected GameObject eventServantRecoveryInfoObj; // 0x98
	[SerializeField] // RVA: 0xCDB064 Offset: 0xCDB064 VA: 0xCDB064
	protected GameObject eventBoardGameTokenInfoObj; // 0xA0
	[SerializeField] // RVA: 0xCDB074 Offset: 0xCDB074 VA: 0xCDB074
	protected GameObject eventTreasureInfoObj; // 0xA8
	[SerializeField] // RVA: 0xCDB084 Offset: 0xCDB084 VA: 0xCDB084
	protected GameObject eventRandomMissionInfoObj; // 0xB0
	[SerializeField] // RVA: 0xCDB094 Offset: 0xCDB094 VA: 0xCDB094
	protected UIPanel infoPanel; // 0xB8
	[SerializeField] // RVA: 0xCDB0A4 Offset: 0xCDB0A4 VA: 0xCDB0A4
	protected GameObject outSideSvtPanelPos; // 0xC0
	[SerializeField] // RVA: 0xCDB0B4 Offset: 0xCDB0B4 VA: 0xCDB0B4
	protected GameObject multiSvtScrollObj; // 0xC8
	[SerializeField] // RVA: 0xCDB0C4 Offset: 0xCDB0C4 VA: 0xCDB0C4
	protected BoxGachaItemListViewManager boxGachaListViewManager; // 0xD0
	[SerializeField] // RVA: 0xCDB0D4 Offset: 0xCDB0D4 VA: 0xCDB0D4
	protected BoxGachaResultEffectComponent boxGachaResultComp; // 0xD8
	[SerializeField] // RVA: 0xCDB0E4 Offset: 0xCDB0E4 VA: 0xCDB0E4
	protected SetBoxGachaResourceControl setGachaResourceCtr; // 0xE0
	[SerializeField] // RVA: 0xCDB0F4 Offset: 0xCDB0F4 VA: 0xCDB0F4
	protected UISprite singleGachaTimeSprite; // 0xE8
	[SerializeField] // RVA: 0xCDB104 Offset: 0xCDB104 VA: 0xCDB104
	protected UISprite singleInfoTxtSprite; // 0xF0
	[SerializeField] // RVA: 0xCDB114 Offset: 0xCDB114 VA: 0xCDB114
	protected UISprite oneGachaTimeSprite; // 0xF8
	[SerializeField] // RVA: 0xCDB124 Offset: 0xCDB124 VA: 0xCDB124
	protected UISprite oneInfoTxtSprite; // 0x100
	[SerializeField] // RVA: 0xCDB134 Offset: 0xCDB134 VA: 0xCDB134
	protected UISprite multiGachaTimeSprite; // 0x108
	[SerializeField] // RVA: 0xCDB144 Offset: 0xCDB144 VA: 0xCDB144
	protected UISprite multiInfoTxtSprite; // 0x110
	[SerializeField] // RVA: 0xCDB154 Offset: 0xCDB154 VA: 0xCDB154
	protected GameObject normalBoxGachaInfo; // 0x118
	[SerializeField] // RVA: 0xCDB164 Offset: 0xCDB164 VA: 0xCDB164
	protected UISprite normalLineupInfoSprite; // 0x120
	[SerializeField] // RVA: 0xCDB174 Offset: 0xCDB174 VA: 0xCDB174
	protected UILabel normalGachaNumLb; // 0x128
	[SerializeField] // RVA: 0xCDB184 Offset: 0xCDB184 VA: 0xCDB184
	protected UILabel eventGachaAllNumLb; // 0x130
	[SerializeField] // RVA: 0xCDB194 Offset: 0xCDB194 VA: 0xCDB194
	protected UILabel boxGachaEndTimeLabel; // 0x138
	[SerializeField] // RVA: 0xCDB1A4 Offset: 0xCDB1A4 VA: 0xCDB1A4
	protected UILabel boxGachaStringLb; // 0x140
	[SerializeField] // RVA: 0xCDB1B4 Offset: 0xCDB1B4 VA: 0xCDB1B4
	protected GameObject limitBoxGachaInfo; // 0x148
	[SerializeField] // RVA: 0xCDB1C4 Offset: 0xCDB1C4 VA: 0xCDB1C4
	protected UISprite LimitLineupInfoSprite; // 0x150
	[SerializeField] // RVA: 0xCDB1D4 Offset: 0xCDB1D4 VA: 0xCDB1D4
	protected UILabel limitGachaNumLb; // 0x158
	[SerializeField] // RVA: 0xCDB1E4 Offset: 0xCDB1E4 VA: 0xCDB1E4
	protected GameObject limitInfo; // 0x160
	[SerializeField] // RVA: 0xCDB1F4 Offset: 0xCDB1F4 VA: 0xCDB1F4
	protected UILabel limitInfoLb; // 0x168
	[SerializeField] // RVA: 0xCDB204 Offset: 0xCDB204 VA: 0xCDB204
	protected UISprite limitInfoBgImg; // 0x170
	[SerializeField] // RVA: 0xCDB214 Offset: 0xCDB214 VA: 0xCDB214
	protected UILabel limitResetNumLb; // 0x178
	[SerializeField] // RVA: 0xCDB224 Offset: 0xCDB224 VA: 0xCDB224
	protected UISprite allNumTitleSprite; // 0x180
	[SerializeField] // RVA: 0xCDB234 Offset: 0xCDB234 VA: 0xCDB234
	protected GameObject allNumObject; // 0x188
	[SerializeField] // RVA: 0xCDB244 Offset: 0xCDB244 VA: 0xCDB244
	protected UISprite resetTxtSprite; // 0x190
	[SerializeField] // RVA: 0xCDB254 Offset: 0xCDB254 VA: 0xCDB254
	protected UIButton resetBtn; // 0x198
	[SerializeField] // RVA: 0xCDB264 Offset: 0xCDB264 VA: 0xCDB264
	protected GameObject boxGachaInfo; // 0x1A0
	[SerializeField] // RVA: 0xCDB274 Offset: 0xCDB274 VA: 0xCDB274
	protected EventPointItemListViewManager eventPointListViewManager; // 0x1A8
	[SerializeField] // RVA: 0xCDB284 Offset: 0xCDB284 VA: 0xCDB284
	protected UISprite pointTitleTxtSprite; // 0x1B0
	[SerializeField] // RVA: 0xCDB294 Offset: 0xCDB294 VA: 0xCDB294
	protected UISprite pointTxtSprite; // 0x1B8
	[SerializeField] // RVA: 0xCDB2A4 Offset: 0xCDB2A4 VA: 0xCDB2A4
	protected UILabel eventPointTxt; // 0x1C0
	[SerializeField] // RVA: 0xCDB2B4 Offset: 0xCDB2B4 VA: 0xCDB2B4
	protected GameObject eventPointInfo; // 0x1C8
	[SerializeField] // RVA: 0xCDB2C4 Offset: 0xCDB2C4 VA: 0xCDB2C4
	protected EventMissionItemListViewManager eventMissionListViewManager; // 0x1D0
	[SerializeField] // RVA: 0xCDB2D4 Offset: 0xCDB2D4 VA: 0xCDB2D4
	protected UISprite missionTitleTxtSprite; // 0x1D8
	[SerializeField] // RVA: 0xCDB2E4 Offset: 0xCDB2E4 VA: 0xCDB2E4
	protected UISprite missionTxtSprite; // 0x1E0
	[SerializeField] // RVA: 0xCDB2F4 Offset: 0xCDB2F4 VA: 0xCDB2F4
	protected UILabel eventMissionTxt; // 0x1E8
	[SerializeField] // RVA: 0xCDB304 Offset: 0xCDB304 VA: 0xCDB304
	protected GameObject eventMissionInfo; // 0x1F0
	[SerializeField] // RVA: 0xCDB314 Offset: 0xCDB314 VA: 0xCDB314
	protected ShopBuyItemListViewManager buyItemListViewManager; // 0x1F8
	[SerializeField] // RVA: 0xCDB324 Offset: 0xCDB324 VA: 0xCDB324
	protected UISprite shopTitleTxtSprite; // 0x200
	[SerializeField] // RVA: 0xCDB334 Offset: 0xCDB334 VA: 0xCDB334
	protected UIPanel shopEventItemDrawBase; // 0x208
	[SerializeField] // RVA: 0xCDB344 Offset: 0xCDB344 VA: 0xCDB344
	protected ShopBuyItemConfirmMenu buyItemConfirmMenu; // 0x210
	[SerializeField] // RVA: 0xCDB354 Offset: 0xCDB354 VA: 0xCDB354
	protected ShopBuyBulkItemConfirmMenu buyBulkItemConfirmMenu; // 0x218
	[SerializeField] // RVA: 0xCDB364 Offset: 0xCDB364 VA: 0xCDB364
	protected RequestResultDialog requestResultDialog; // 0x220
	[SerializeField] // RVA: 0xCDB374 Offset: 0xCDB374 VA: 0xCDB374
	protected GameObject mActionPanel; // 0x228
	[SerializeField] // RVA: 0xCDB384 Offset: 0xCDB384 VA: 0xCDB384
	protected GameObject eventShopInfo; // 0x230
	[SerializeField] // RVA: 0xCDB394 Offset: 0xCDB394 VA: 0xCDB394
	protected UILabel normalWindowEventEnableTimeLb; // 0x238
	[SerializeField] // RVA: 0xCDB3A4 Offset: 0xCDB3A4 VA: 0xCDB3A4
	protected UILabel normalWindowStringLb; // 0x240
	[SerializeField] // RVA: 0xCDB3B4 Offset: 0xCDB3B4 VA: 0xCDB3B4
	protected UILabel notNormalWindowEventEnableTimeLb; // 0x248
	[SerializeField] // RVA: 0xCDB3C4 Offset: 0xCDB3C4 VA: 0xCDB3C4
	protected UILabel notNormalWindowStringLb; // 0x250
	[SerializeField] // RVA: 0xCDB3D4 Offset: 0xCDB3D4 VA: 0xCDB3D4
	protected EventRankingListViewManager eventRankingListViewManager; // 0x258
	[SerializeField] // RVA: 0xCDB3E4 Offset: 0xCDB3E4 VA: 0xCDB3E4
	protected UILabel rankingTitleTxtLabel; // 0x260
	[SerializeField] // RVA: 0xCDB3F4 Offset: 0xCDB3F4 VA: 0xCDB3F4
	protected UILabel raceSupportLabel; // 0x268
	[SerializeField] // RVA: 0xCDB404 Offset: 0xCDB404 VA: 0xCDB404
	protected EventRankingRoundInfo[] raceRoundInfos; // 0x270
	[SerializeField] // RVA: 0xCDB414 Offset: 0xCDB414 VA: 0xCDB414
	protected GameObject eventRankingInfo; // 0x278
	[SerializeField] // RVA: 0xCDB424 Offset: 0xCDB424 VA: 0xCDB424
	protected UISprite rankingRewardTxtSprite; // 0x280
	[SerializeField] // RVA: 0xCDB434 Offset: 0xCDB434 VA: 0xCDB434
	protected EventTowerListViewManager eventTowerListViewManager; // 0x288
	[SerializeField] // RVA: 0xCDB444 Offset: 0xCDB444 VA: 0xCDB444
	protected UISprite towerTitleTxtSprite; // 0x290
	[SerializeField] // RVA: 0xCDB454 Offset: 0xCDB454 VA: 0xCDB454
	protected GameObject recoveryFatigueParentObj; // 0x298
	[SerializeField] // RVA: 0xCDB464 Offset: 0xCDB464 VA: 0xCDB464
	protected UISprite servantRecoveryTitleTxtSprite; // 0x2A0
	[SerializeField] // RVA: 0xCDB474 Offset: 0xCDB474 VA: 0xCDB474
	protected EventServantFatigueListViewManager servantFatigueListViewManager; // 0x2A8
	[SerializeField] // RVA: 0xCDB484 Offset: 0xCDB484 VA: 0xCDB484
	protected EventBoardGameTokenManager eventBoardGameTokenManager; // 0x2B0
	[SerializeField] // RVA: 0xCDB494 Offset: 0xCDB494 VA: 0xCDB494
	protected UISprite eventBoardGameTokenTxtSprite; // 0x2B8
	[SerializeField] // RVA: 0xCDB4A4 Offset: 0xCDB4A4 VA: 0xCDB4A4
	protected EventTreasureBoxManager eventTreasureBoxManager; // 0x2C0
	[SerializeField] // RVA: 0xCDB4B4 Offset: 0xCDB4B4 VA: 0xCDB4B4
	protected UISprite treasureBoxTitleTxtSprite; // 0x2C8
	[SerializeField] // RVA: 0xCDB4C4 Offset: 0xCDB4C4 VA: 0xCDB4C4
	protected UISprite treasureBoxInfoTxtSprite; // 0x2D0
	[SerializeField] // RVA: 0xCDB4D4 Offset: 0xCDB4D4 VA: 0xCDB4D4
	protected EventRandomMissionListViewManager eventRandomMissionListViewManager; // 0x2D8
	[SerializeField] // RVA: 0xCDB4E4 Offset: 0xCDB4E4 VA: 0xCDB4E4
	protected UISprite randomMissionTitleTxtSprite; // 0x2E0
	[SerializeField] // RVA: 0xCDB4F4 Offset: 0xCDB4F4 VA: 0xCDB4F4
	protected UISprite randomMissionTxtSprite; // 0x2E8
	[SerializeField] // RVA: 0xCDB504 Offset: 0xCDB504 VA: 0xCDB504
	protected UILabel eventRandomMissionTxt; // 0x2F0
	[SerializeField] // RVA: 0xCDB514 Offset: 0xCDB514 VA: 0xCDB514
	protected GameObject eventRandomMissionInfo; // 0x2F8
	[SerializeField] // RVA: 0xCDB524 Offset: 0xCDB524 VA: 0xCDB524
	protected UILabel eventRandomMissionWarningText; // 0x300
	[SerializeField] // RVA: 0xCDB534 Offset: 0xCDB534 VA: 0xCDB534
	protected EventSvtControl svtVoiceCtr; // 0x308
	[SerializeField] // RVA: 0xCDB544 Offset: 0xCDB544 VA: 0xCDB544
	protected GameObject standFigureObj; // 0x310
	[SerializeField] // RVA: 0xCDB554 Offset: 0xCDB554 VA: 0xCDB554
	protected StandFigureBack standFigureBack; // 0x318
	[SerializeField] // RVA: 0xCDB564 Offset: 0xCDB564 VA: 0xCDB564
	protected GameObject playBntObj; // 0x320
	[SerializeField] // RVA: 0xCDB574 Offset: 0xCDB574 VA: 0xCDB574
	protected UISprite playBtnImg; // 0x328
	[SerializeField] // RVA: 0xCDB584 Offset: 0xCDB584 VA: 0xCDB584
	protected GameObject voicePlayEffect; // 0x330
	[SerializeField] // RVA: 0xCDB594 Offset: 0xCDB594 VA: 0xCDB594
	protected GameObject helpObj; // 0x338
	[SerializeField] // RVA: 0xCDB5A4 Offset: 0xCDB5A4 VA: 0xCDB5A4
	protected EventRewardButtonChangeManager doubleChangeBtnInfoObj; // 0x340
	[SerializeField] // RVA: 0xCDB5B4 Offset: 0xCDB5B4 VA: 0xCDB5B4
	protected EventRewardButtonChangeManager tripleChangeBtnInfoObj; // 0x348
	[SerializeField] // RVA: 0xCDB5C4 Offset: 0xCDB5C4 VA: 0xCDB5C4
	protected EventRewardButtonChangeManager fourthChangeBtnInfoObj; // 0x350
	[SerializeField] // RVA: 0xCDB5D4 Offset: 0xCDB5D4 VA: 0xCDB5D4
	protected GameObject multiSvtObj; // 0x358
	[SerializeField] // RVA: 0xCDB5E4 Offset: 0xCDB5E4 VA: 0xCDB5E4
	protected UIScrollView mScroll; // 0x360
	[SerializeField] // RVA: 0xCDB5F4 Offset: 0xCDB5F4 VA: 0xCDB5F4
	protected UIWrapContent loopCtr; // 0x368
	[SerializeField] // RVA: 0xCDB604 Offset: 0xCDB604 VA: 0xCDB604
	protected ExUICenterChild centerChild; // 0x370
	[SerializeField] // RVA: 0xCDB614 Offset: 0xCDB614 VA: 0xCDB614
	protected GameObject sliderInfo; // 0x378
	[SerializeField] // RVA: 0xCDB624 Offset: 0xCDB624 VA: 0xCDB624
	protected GameObject slideIndexPrefab; // 0x380
	[SerializeField] // RVA: 0xCDB634 Offset: 0xCDB634 VA: 0xCDB634
	protected UIGrid sliderGrid; // 0x388
	[SerializeField] // RVA: 0xCDB644 Offset: 0xCDB644 VA: 0xCDB644
	protected UIPanel indexPanel; // 0x390
	[SerializeField] // RVA: 0xCDB654 Offset: 0xCDB654 VA: 0xCDB654
	protected GameObject arrowInfo; // 0x398
	[SerializeField] // RVA: 0xCDB664 Offset: 0xCDB664 VA: 0xCDB664
	protected UIButton leftArrowBtn; // 0x3A0
	[SerializeField] // RVA: 0xCDB674 Offset: 0xCDB674 VA: 0xCDB674
	protected UIButton rightArrowBtn; // 0x3A8
	[SerializeField] // RVA: 0xCDB684 Offset: 0xCDB684 VA: 0xCDB684
	protected GameObject multiSvtFigurePanel; // 0x3B0
	[SerializeField] // RVA: 0xCDB694 Offset: 0xCDB694 VA: 0xCDB694
	protected UISprite tabTypeImage; // 0x3B8
	[SerializeField] // RVA: 0xCDB6A4 Offset: 0xCDB6A4 VA: 0xCDB6A4
	protected GameObject maskPanel; // 0x3C0
	[SerializeField] // RVA: 0xCDB6B4 Offset: 0xCDB6B4 VA: 0xCDB6B4
	protected PresentBoxOverDialog presentBoxOverDialog; // 0x3C8
	[SerializeField] // RVA: 0xCDB6C4 Offset: 0xCDB6C4 VA: 0xCDB6C4
	protected PresentBoxInfoComponent presentBoxInfo; // 0x3D0
	[SerializeField] // RVA: 0xCDB6D4 Offset: 0xCDB6D4 VA: 0xCDB6D4
	protected EventRewardAssistConfirmDialog eventRewardAssistConfirmDialog; // 0x3D8
	[SerializeField] // RVA: 0xCDB6E4 Offset: 0xCDB6E4 VA: 0xCDB6E4
	protected EventRewardAnotherPayConfirmDialog eventRewardAnotherPayConfirmDialog; // 0x3E0
	private List<StandFigureCollect> standFigureCollectList; // 0x3E8
	private List<int> eventBgmIdList; // 0x3F0
	private int[] imageIdArray; // 0x3F8
	private string bgmName; // 0x400
	private List<EventRewardRootComponent.VoiceData> allEventVoiceDataList; // 0x408
	private List<EventRewardRootComponent.VoiceData> individualPurchaseVoiceList; // 0x410
	private List<EventRewardRootComponent.SlotAllSvtData> slotAllSvtDataList; // 0x418
	private Dictionary<int, int> slotSvtCnt; // 0x420
	protected SceneJumpInfo jumpInfo; // 0x428
	private EventDetailEntity eventDetailEnt; // 0x430
	private int currentEventId; // 0x438
	[CompilerGeneratedAttribute] // RVA: 0xCDB6F4 Offset: 0xCDB6F4 VA: 0xCDB6F4
	[DebuggerBrowsableAttribute] // RVA: 0xCDB6F4 Offset: 0xCDB6F4 VA: 0xCDB6F4
	private int <currentEventSvtId>k__BackingField; // 0x43C
	private int currentEventSvtLimitCnt; // 0x440
	private int currentEventSvtFace; // 0x444
	private int currentEventShopSvtId; // 0x448
	private int currentEventShopSvtLimitCnt; // 0x44C
	private List<int> eventServantIdList; // 0x450
	private List<int> eventServantLimitCntList; // 0x458
	private List<int> eventServantFaceIdList; // 0x460
	private List<string> eventServantDisplayNameList; // 0x468
	private bool isEventReward; // 0x470
	private bool isEventGacha; // 0x471
	private bool isMission; // 0x472
	private bool isRaid; // 0x473
	private bool isEventShop; // 0x474
	private EventRewardSceneEntity[] eventRewardSceneEntArray; // 0x478
	private List<EventRewardSceneEntity> specificEventRewardSceneEntityList; // 0x480
	private bool existNotOpenTab; // 0x488
	private bool isLoadOpenEffect; // 0x489
	private List<EventRewardSceneReleaseEntity> eventRewardSceneReleaseList; // 0x490
	private EventServantRecoveryFatigueManager eventServantRecoveryFatigueManager; // 0x498
	private BoxGachaEntity[] eventBoxGachaEntList; // 0x4A0
	private BoxGachaEntity currentBoxGachaEnt; // 0x4A8
	private UserBoxGachaEntity usrBoxGachaEnt; // 0x4B0
	private int currentBoxGachaId; // 0x4B8
	private int drawGachaTime; // 0x4BC
	private int currentBoxGachaBaseId; // 0x4C0
	private int[] resultIdList; // 0x4C8
	private int resultBoxGachaId; // 0x4D0
	private int[] resultNumbers; // 0x4D8
	private int[] resNoList; // 0x4E0
	private int[] messageIdList; // 0x4E8
	private int[] resultRareIdxs; // 0x4F0
	private int beforeBoxGachaId; // 0x4F8
	private int[] beforeResultNumbers; // 0x500
	private bool isLimitReset; // 0x508
	private bool isLimitBox; // 0x509
	private int currentResetNum; // 0x50C
	private List<MultiSvtInfoComponent> multiSvtInfoList; // 0x510
	private MultiSvtInfoComponent currentSvtInfoComp; // 0x518
	private int currentEventSlotIndex; // 0x520
	private int currentMoveIdx; // 0x524
	private Vector3 center; // 0x528
	private int beforeMoveIdx; // 0x534
	private List<int> eventBgIdList; // 0x538
	private int downLoadCnt; // 0x540
	private int bgDownloadCnt; // 0x544
	private Transform loopCtrlChildrenTrans; // 0x548
	private static string REWARDIMG_ATLAS_PATH; // 0xF8
	private static AssetData rewardImgData; // 0x100
	private string lastAssetName; // 0x550
	private bool isVoicePlaying; // 0x558
	private bool isBulkBuy; // 0x559
	protected EventRewardRootComponent.State state; // 0x55C
	protected int selectItemNum; // 0x560
	protected int selectEventNum; // 0x564
	protected long[] selectServantIdList; // 0x568
	public static QuestRewardInfo mQuestRewardInfos; // 0x108
	private ServantRewardAction servantRewardAction; // 0x570
	private int buyCount; // 0x578
	private bool isServantGet; // 0x57C
	private int eventCount; // 0x580
	private int eventShopCount; // 0x584
	private string shopRequestOkMessage; // 0x588
	private bool isOpenEffect; // 0x590
	private bool waitOpenEffect; // 0x591
	private int openSlot; // 0x594
	private int closedTabImage; // 0x598
	private long eventEndTime; // 0x5A0
	private EventRewardRootComponent.StateType stateType; // 0x5A8
	private List<EventRewardRootComponent.StateType> eventPriority; // 0x5B0
	private bool isDischargeCostume; // 0x5B8
	private int costumeObjectId; // 0x5BC
	private bool isDispArrow; // 0x5C0
	private int selectRecoveryIndex; // 0x5C4
	private string[] assetNameList; // 0x5C8
	private bool isDraged; // 0x5D0
	private List<EventVoicePlayEntity> targetEventVoicePlayEntityList; // 0x5D8
	private ShopEntity afterLotteryShopEntity; // 0x5E0
	private bool isAfterLotteryShopAlreadyPossession; // 0x5E8
	private static bool isDestroy; // 0x110
	private bool isRequestLoadMissionFilterData; // 0x5E9
	private string commitAfterScriptPurchaseToken; // 0x5F0
	private int svtLoadCount; // 0x5F8
	private int svtLoadCompleteCount; // 0x5FC
	private Vector3 initInfopanelPos; // 0x600
	[CompilerGeneratedAttribute] // RVA: 0xCDB730 Offset: 0xCDB730 VA: 0xCDB730
	[DebuggerBrowsableAttribute] // RVA: 0xCDB730 Offset: 0xCDB730 VA: 0xCDB730
	private static bool <IsAnotherPayFlag>k__BackingField; // 0x111
	[CompilerGeneratedAttribute] // RVA: 0xCDB76C Offset: 0xCDB76C VA: 0xCDB76C
	[DebuggerBrowsableAttribute] // RVA: 0xCDB76C Offset: 0xCDB76C VA: 0xCDB76C
	private static bool <IsCommitAfterScriptSoldOut>k__BackingField; // 0x112
	[CompilerGeneratedAttribute] // RVA: 0xCDB7A8 Offset: 0xCDB7A8 VA: 0xCDB7A8
	private static Comparison<EventRewardSceneEntity> <>f__am$cache0; // 0x118
	[CompilerGeneratedAttribute] // RVA: 0xCDB7B8 Offset: 0xCDB7B8 VA: 0xCDB7B8
	private static Comparison<EventVoicePlayEntity> <>f__am$cache1; // 0x120
	[CompilerGeneratedAttribute] // RVA: 0xCDB7C8 Offset: 0xCDB7C8 VA: 0xCDB7C8
	private static Predicate<BoxGachaTalkEntity> <>f__am$cache2; // 0x128
	[CompilerGeneratedAttribute] // RVA: 0xCDB7D8 Offset: 0xCDB7D8 VA: 0xCDB7D8
	private static Predicate<BoxGachaTalkEntity> <>f__am$cache3; // 0x130
	[CompilerGeneratedAttribute] // RVA: 0xCDB7E8 Offset: 0xCDB7E8 VA: 0xCDB7E8
	private static Predicate<ShopActionEntity> <>f__am$cache4; // 0x138
	[CompilerGeneratedAttribute] // RVA: 0xCDB7F8 Offset: 0xCDB7F8 VA: 0xCDB7F8
	private static ScrollMessageDialog.ClickDelegate <>f__am$cache5; // 0x140

	// Properties
	public int currentEventSvtId { get; set; }
	public string settedAssetname { get; }
	public static bool IsAnotherPayFlag { get; set; }
	public static bool IsCommitAfterScriptSoldOut { get; set; }
	public EventVoicePlayEntity NowEventVoicePlayEntity { get; }
	public EventMissionItemListViewManager missionItemListViewManager { get; }

	// Methods

	// RVA: 0x1638E9C Offset: 0x1638E9C VA: 0x1638E9C
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D6C4 Offset: 0xD3D6C4 VA: 0xD3D6C4
	// RVA: 0x1638FAC Offset: 0x1638FAC VA: 0x1638FAC
	public int get_currentEventSvtId() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D6D4 Offset: 0xD3D6D4 VA: 0xD3D6D4
	// RVA: 0x1638FB4 Offset: 0x1638FB4 VA: 0x1638FB4
	private void set_currentEventSvtId(int value) { }

	// RVA: 0x1638FBC Offset: 0x1638FBC VA: 0x1638FBC
	public string get_settedAssetname() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D6E4 Offset: 0xD3D6E4 VA: 0xD3D6E4
	// RVA: 0x1638FC4 Offset: 0x1638FC4 VA: 0x1638FC4
	public static bool get_IsAnotherPayFlag() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D6F4 Offset: 0xD3D6F4 VA: 0xD3D6F4
	// RVA: 0x163902C Offset: 0x163902C VA: 0x163902C
	private static void set_IsAnotherPayFlag(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D704 Offset: 0xD3D704 VA: 0xD3D704
	// RVA: 0x163909C Offset: 0x163909C VA: 0x163909C
	public static bool get_IsCommitAfterScriptSoldOut() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3D714 Offset: 0xD3D714 VA: 0xD3D714
	// RVA: 0x1639104 Offset: 0x1639104 VA: 0x1639104
	private static void set_IsCommitAfterScriptSoldOut(bool value) { }

	// RVA: 0x1639174 Offset: 0x1639174 VA: 0x1639174
	public void OnDestroy() { }

	// RVA: 0x16361E8 Offset: 0x16361E8 VA: 0x16361E8
	public static void setRewardInfoImg(UISprite sprite, string imgName) { }

	// RVA: 0x16393A8 Offset: 0x16393A8 VA: 0x16393A8
	public static void SetRewardRaritySprite(UISprite sprite, Gift.Type giftType, int objectId, int rarityId) { }

	// RVA: 0x1639788 Offset: 0x1639788 VA: 0x1639788
	public EventVoicePlayEntity get_NowEventVoicePlayEntity() { }

	// RVA: 0x1639A0C Offset: 0x1639A0C VA: 0x1639A0C
	public void Start() { }

	// RVA: 0x1639A14 Offset: 0x1639A14 VA: 0x1639A14 Slot: 4
	public override void beginInitialize() { }

	// RVA: 0x1639EE4 Offset: 0x1639EE4 VA: 0x1639EE4 Slot: 6
	public override void beginStartUp() { }

	// RVA: 0x1639EEC Offset: 0x1639EEC VA: 0x1639EEC Slot: 5
	public override void beginStartUp(object data) { }

	// RVA: 0x163A110 Offset: 0x163A110 VA: 0x163A110
	private void beginStartUpNext(string result) { }

	// RVA: 0x163A238 Offset: 0x163A238 VA: 0x163A238
	private void SetLoadRewardImgData() { }

	// RVA: 0x163A690 Offset: 0x163A690 VA: 0x163A690
	private void removeHideTab(EventRewardSceneEntity[] rewardSceneEnt) { }

	// RVA: 0x163A3A4 Offset: 0x163A3A4 VA: 0x163A3A4
	private void EndLoadRewardImg(AssetData data) { }

	// RVA: 0x163A8F4 Offset: 0x163A8F4 VA: 0x163A8F4
	private void checkEventExist() { }

	// RVA: 0x163C4A8 Offset: 0x163C4A8 VA: 0x163C4A8
	private void SetEventSceneInfo(EventRewardSceneEntity targetEntity, int eventNum) { }

	// RVA: 0x163DCC4 Offset: 0x163DCC4 VA: 0x163DCC4
	private bool GetIsAndCondGroup(EventRewardGuideReleaseEntity[] entities) { }

	// RVA: 0x163D9E0 Offset: 0x163D9E0 VA: 0x163D9E0
	private Dictionary<string, List<EventRewardGuideReleaseEntity>> GetEventRewardGuideReleases(int eventId, int slot) { }

	// RVA: 0x163D958 Offset: 0x163D958 VA: 0x163D958
	private int CheckLastViewSlot() { }

	// RVA: 0x163DEF8 Offset: 0x163DEF8 VA: 0x163DEF8
	private void SetEventLogo() { }

	// RVA: 0x163B28C Offset: 0x163B28C VA: 0x163B28C
	private void setBgm() { }

	// RVA: 0x163E098 Offset: 0x163E098 VA: 0x163E098
	private string getBgmName(int id) { }

	// RVA: 0x163B350 Offset: 0x163B350 VA: 0x163B350
	private void setGuideSvtVoice() { }

	// RVA: 0x163E164 Offset: 0x163E164 VA: 0x163E164
	private void GetSlotAllVoiceData(ServantVoiceMaster svtVoiceMst, EventVoicePlayMaster eventVoiceMst, EventRewardSceneEntity eventEnt) { }

	// RVA: 0x163E89C Offset: 0x163E89C VA: 0x163E89C
	private void EndBgLoad() { }

	// RVA: 0x163EE40 Offset: 0x163EE40 VA: 0x163EE40
	private void SetReleaseEffectData(int eventCount) { }

	// RVA: 0x163E990 Offset: 0x163E990 VA: 0x163E990
	private void SetReleaseButtonState(int eventCount) { }

	// RVA: 0x163E7B0 Offset: 0x163E7B0 VA: 0x163E7B0
	private string getBgImgName(int eventBgImgId) { }

	// RVA: 0x163EA98 Offset: 0x163EA98 VA: 0x163EA98
	private void EndSetBackImg() { }

	// RVA: 0x163F030 Offset: 0x163F030 VA: 0x163F030
	private void EndLoadVoiceData() { }

	// RVA: 0x163EF80 Offset: 0x163EF80 VA: 0x163EF80
	private void EndLoadAllEventVoiceDataList() { }

	// RVA: 0x163F04C Offset: 0x163F04C VA: 0x163F04C
	public void init() { }

	// RVA: 0x16402AC Offset: 0x16402AC VA: 0x16402AC
	private void AfterInitialize(bool voicePlay) { }

	// RVA: 0x163EF44 Offset: 0x163EF44 VA: 0x163EF44
	private EventRewardButtonChangeManager GetEventRewardButtonChangeManager(int eventCount) { }

	// RVA: 0x1640B2C Offset: 0x1640B2C VA: 0x1640B2C
	private void SetEventRewardInfo(int eventId, EventDetailEntity eventDetailEntity, float logoSizeX, Action callback) { }

	// RVA: 0x163F590 Offset: 0x163F590 VA: 0x163F590
	private bool CheckTabReleaseEffect() { }

	// RVA: 0x1640BE4 Offset: 0x1640BE4 VA: 0x1640BE4
	public void AnimationEndCallback() { }

	// RVA: 0x1640C48 Offset: 0x1640C48 VA: 0x1640C48
	public void ChangeUICallback() { }

	// RVA: 0x1640CF8 Offset: 0x1640CF8 VA: 0x1640CF8
	public void EndTutorialRequestCallback() { }

	// RVA: 0x1640D38 Offset: 0x1640D38 VA: 0x1640D38
	private void VoiceBtnTween() { }

	// RVA: 0x1640F84 Offset: 0x1640F84 VA: 0x1640F84
	private void playSvtVoice() { }

	// RVA: 0x16413CC Offset: 0x16413CC VA: 0x16413CC
	private void playWelocmeSvtVoice() { }

	// RVA: 0x1641654 Offset: 0x1641654 VA: 0x1641654
	private void PlayShopPurchaseVoice() { }

	// RVA: 0x16416FC Offset: 0x16416FC VA: 0x16416FC
	public void playEventMissionSvtVoice(string[] voiceIDs, Action Callback) { }

	// RVA: 0x16417EC Offset: 0x16417EC VA: 0x16417EC
	public void playEventMissionSvtVoice(string[] voiceIDs, Action voiceEnd, Action nextAction) { }

	// RVA: 0x1640404 Offset: 0x1640404 VA: 0x1640404
	private void SetCurrentSvtVoice() { }

	// RVA: 0x16418F0 Offset: 0x16418F0 VA: 0x16418F0
	public EventMissionItemListViewManager get_missionItemListViewManager() { }

	// RVA: 0x1641154 Offset: 0x1641154 VA: 0x1641154
	public void setNormalFace() { }

	// RVA: 0x1641938 Offset: 0x1641938 VA: 0x1641938
	private Face.Type GetNormalFaceId() { }

	// RVA: 0x16419F4 Offset: 0x16419F4 VA: 0x16419F4
	private void AdjustmentShiftInfo() { }

	// RVA: 0x1641D80 Offset: 0x1641D80 VA: 0x1641D80
	public void stopSvtVoice() { }

	// RVA: 0x1641DBC Offset: 0x1641DBC VA: 0x1641DBC
	public void playBGM() { }

	// RVA: 0x1641E28 Offset: 0x1641E28 VA: 0x1641E28 Slot: 10
	public override void beginResume() { }

	// RVA: 0x1641E30 Offset: 0x1641E30 VA: 0x1641E30 Slot: 7
	public override void beginFinish() { }

	// RVA: 0x1639204 Offset: 0x1639204 VA: 0x1639204
	private void ReleaseSvtVoiceData() { }

	// RVA: 0x164220C Offset: 0x164220C VA: 0x164220C
	private void destroySvtFigure() { }

	// RVA: 0x1641E34 Offset: 0x1641E34 VA: 0x1641E34
	public void quit() { }

	// RVA: 0x163F61C Offset: 0x163F61C VA: 0x163F61C
	private void setDispBtnInfo() { }

	// RVA: 0x163F3E4 Offset: 0x163F3E4 VA: 0x163F3E4
	private void SetActiveEventRewardButtonChangeManager(int eventCount, bool isDisp = True) { }

	// RVA: 0x16429C4 Offset: 0x16429C4 VA: 0x16429C4
	private void TabInitialize(int eventCount, int currentEventId) { }

	// RVA: 0x1642D18 Offset: 0x1642D18 VA: 0x1642D18
	private void setEventDisp(EventRewardRootComponent.StateType type) { }

	// RVA: 0x16435CC Offset: 0x16435CC VA: 0x16435CC
	private void SetAllInfoObjDisable() { }

	// RVA: 0x1640CD8 Offset: 0x1640CD8 VA: 0x1640CD8
	private void setTabInfo(EventRewardRootComponent.StateType type) { }

	// RVA: 0x1645880 Offset: 0x1645880 VA: 0x1645880
	private void ChangeTabInfo(int currentEventSlotIndex, int currentEventId, EventRewardSceneEntity[] eventRewardSceneEnt, int openSlot, bool isOpenEffect) { }

	// RVA: 0x163F6EC Offset: 0x163F6EC VA: 0x163F6EC
	private int SetSvtFigure(Action onCreatedSvtFigure) { }

	// RVA: 0x1645930 Offset: 0x1645930 VA: 0x1645930
	private void SetupSlider() { }

	// RVA: 0x1645CF0 Offset: 0x1645CF0 VA: 0x1645CF0
	private void setCenter() { }

	// RVA: 0x163F338 Offset: 0x163F338 VA: 0x163F338
	private void SvtPanelInit() { }

	// RVA: 0x1645EE8 Offset: 0x1645EE8 VA: 0x1645EE8
	private void FadeInSvtPanel() { }

	// RVA: 0x1646060 Offset: 0x1646060 VA: 0x1646060
	private void FinishedSvtSlideIn() { }

	// RVA: 0x1646148 Offset: 0x1646148 VA: 0x1646148
	private void SetReleaseEffect(int currentEventId, int eventCount, int openSlot, Action ChangeUICallback, Action AnimationEndCallback) { }

	// RVA: 0x16461F4 Offset: 0x16461F4 VA: 0x16461F4
	private void SetSliderIcon(int idx) { }

	// RVA: 0x1642A38 Offset: 0x1642A38 VA: 0x1642A38
	private void InitBackground(int slot) { }

	// RVA: 0x1646330 Offset: 0x1646330 VA: 0x1646330
	private void ChangeBackground(int before, int after) { }

	// RVA: 0x1646728 Offset: 0x1646728 VA: 0x1646728
	private void CheckTabTypeImage() { }

	// RVA: 0x1642B80 Offset: 0x1642B80 VA: 0x1642B80
	private void ChangeBgm() { }

	// RVA: 0x1646B74 Offset: 0x1646B74 VA: 0x1646B74
	private bool CheckEventSameSvtId() { }

	// RVA: 0x1646CD8 Offset: 0x1646CD8 VA: 0x1646CD8
	private void OnDragStarted() { }

	// RVA: 0x1647308 Offset: 0x1647308 VA: 0x1647308
	private void OnCenterOnChildFinished() { }

	// RVA: 0x164840C Offset: 0x164840C VA: 0x164840C
	private void ChangeTabAfter(int beforeEventType, int afterEventType) { }

	// RVA: 0x1648538 Offset: 0x1648538 VA: 0x1648538
	public void SetOnFinishedCurrentEvent() { }

	// RVA: 0x16485D4 Offset: 0x16485D4 VA: 0x16485D4
	public void SetPlaySvtVoice() { }

	// RVA: 0x164864C Offset: 0x164864C VA: 0x164864C
	public void onClickRightArrow() { }

	// RVA: 0x1648780 Offset: 0x1648780 VA: 0x1648780
	public void onClickLeftArrow() { }

	// RVA: 0x1646D68 Offset: 0x1646D68 VA: 0x1646D68
	private void SetCtrSlideOn(bool isDisp) { }

	// RVA: 0x16488B8 Offset: 0x16488B8 VA: 0x16488B8
	private void SetButtonCollider(int eventCount, bool isDisp, int currentEventSlotIndex) { }

	// RVA: 0x16475B8 Offset: 0x16475B8 VA: 0x16475B8
	public void OnMoveSvt(bool isDisp) { }

	// RVA: 0x1646F9C Offset: 0x1646F9C VA: 0x1646F9C
	private void SetSvtCollider(bool isDisp) { }

	// RVA: 0x1645C20 Offset: 0x1645C20 VA: 0x1645C20
	public void SetDispRePosition(int idx) { }

	// RVA: 0x1648934 Offset: 0x1648934 VA: 0x1648934
	private void SetMultiSvtBannerEnable(bool isBoxGacha) { }

	// RVA: 0x1648AD8 Offset: 0x1648AD8 VA: 0x1648AD8
	public void OnClickSlot1() { }

	// RVA: 0x1648BA0 Offset: 0x1648BA0 VA: 0x1648BA0
	public void OnClickSlot2() { }

	// RVA: 0x1648CFC Offset: 0x1648CFC VA: 0x1648CFC
	public void OnClickSlot3() { }

	// RVA: 0x1648E1C Offset: 0x1648E1C VA: 0x1648E1C
	public void OnClickSlot4() { }

	// RVA: 0x1639868 Offset: 0x1639868 VA: 0x1639868
	private int GetRealSlotId() { }

	// RVA: 0x1646A78 Offset: 0x1646A78 VA: 0x1646A78
	private int GetRealIndex() { }

	// RVA: 0x1648EE4 Offset: 0x1648EE4 VA: 0x1648EE4
	public void OnClickSvt() { }

	// RVA: 0x1648F4C Offset: 0x1648F4C VA: 0x1648F4C
	private void setTutorialInfo() { }

	// RVA: 0x16491A0 Offset: 0x16491A0 VA: 0x16491A0
	public void OnClickHelp() { }

	// RVA: 0x1649320 Offset: 0x1649320 VA: 0x1649320
	public void OnClickHelpClose() { }

	// RVA: 0x1649354 Offset: 0x1649354 VA: 0x1649354
	public void OnClickPresentBox() { }

	// RVA: 0x1643A8C Offset: 0x1643A8C VA: 0x1643A8C
	private void setEventBoxGachaList() { }

	// RVA: 0x16494D0 Offset: 0x16494D0 VA: 0x16494D0
	public void setCurrentBoxGachaInfo() { }

	// RVA: 0x1649FD4 Offset: 0x1649FD4 VA: 0x1649FD4
	private void SetBoxGachaInfoImg() { }

	// RVA: 0x1649B00 Offset: 0x1649B00 VA: 0x1649B00
	private void setGachaBase(int baseId, bool isReset) { }

	// RVA: 0x164A674 Offset: 0x164A674 VA: 0x164A674
	private void setGachaExeInfo() { }

	// RVA: 0x164AC98 Offset: 0x164AC98 VA: 0x164AC98
	public void SetGachaResouces() { }

	// RVA: 0x164B1CC Offset: 0x164B1CC VA: 0x164B1CC
	public void exeBoxGacha(int gachaTime) { }

	// RVA: 0x164B244 Offset: 0x164B244 VA: 0x164B244
	public void checkPresentNum() { }

	// RVA: 0x164B3B8 Offset: 0x164B3B8 VA: 0x164B3B8
	public void showNoticeMsg() { }

	// RVA: 0x164B528 Offset: 0x164B528 VA: 0x164B528
	private void callBackNoticeDlg(bool isOpenPresentBox) { }

	// RVA: 0x16493CC Offset: 0x16493CC VA: 0x16493CC
	public void OpenPresentBox() { }

	// RVA: 0x164B608 Offset: 0x164B608 VA: 0x164B608
	private void ClosePresentBox(bool flag) { }

	// RVA: 0x164B7C8 Offset: 0x164B7C8 VA: 0x164B7C8
	public void OnClickDetail() { }

	// RVA: 0x164B974 Offset: 0x164B974 VA: 0x164B974
	public void requestBoxGachaDraw() { }

	// RVA: 0x164BA88 Offset: 0x164BA88 VA: 0x164BA88
	private void callbackBoxGachaDraw(string result) { }

	// RVA: 0x164BE08 Offset: 0x164BE08 VA: 0x164BE08
	public void showBoxGachaResult() { }

	// RVA: 0x164BEE8 Offset: 0x164BEE8 VA: 0x164BEE8
	public void setBoxGachaResultList() { }

	// RVA: 0x164C630 Offset: 0x164C630 VA: 0x164C630
	private void setTotalBoxGachaCount(bool isReset = False) { }

	// RVA: 0x164C2B8 Offset: 0x164C2B8 VA: 0x164C2B8
	public void setResultList(bool isShortCut = False) { }

	// RVA: 0x164C928 Offset: 0x164C928 VA: 0x164C928
	private BoxGachaTalkEntity GetBoxGachaTalk(int talkId, int[] rareIndex, int svtId) { }

	// RVA: 0x164BF24 Offset: 0x164BF24 VA: 0x164BF24
	private void CheckDischargeCostume() { }

	// RVA: 0x164C0AC Offset: 0x164C0AC VA: 0x164C0AC
	private void setDisp(bool isDisp) { }

	// RVA: 0x164CC34 Offset: 0x164CC34 VA: 0x164CC34
	public void CheckCostumeReleaseEffect() { }

	// RVA: 0x164CD54 Offset: 0x164CD54 VA: 0x164CD54
	private void ExecuteCostumeReleaseEffect(bool isExcute, ServantCostumeEntity servantCostumeEntity) { }

	// RVA: 0x164CEAC Offset: 0x164CEAC VA: 0x164CEAC
	public void resetDisp() { }

	// RVA: 0x164CF3C Offset: 0x164CF3C VA: 0x164CF3C
	public void transitionBoxGachaMainDisp() { }

	// RVA: 0x164AA10 Offset: 0x164AA10 VA: 0x164AA10
	private void dispLimitReset() { }

	// RVA: 0x1649478 Offset: 0x1649478 VA: 0x1649478
	private void ResetBoxGachaCondition() { }

	// RVA: 0x164D01C Offset: 0x164D01C VA: 0x164D01C
	public void showLimitResetDlg() { }

	// RVA: 0x164D1BC Offset: 0x164D1BC VA: 0x164D1BC
	public void endGachaExe() { }

	// RVA: 0x164D260 Offset: 0x164D260 VA: 0x164D260
	public void requestGachaReset() { }

	// RVA: 0x164D31C Offset: 0x164D31C VA: 0x164D31C
	public void RequestGachaAutoReset() { }

	// RVA: 0x164D3D8 Offset: 0x164D3D8 VA: 0x164D3D8
	private void callbackBoxGachaReset(string result) { }

	// RVA: 0x164D484 Offset: 0x164D484 VA: 0x164D484
	public void resetGachaList() { }

	// RVA: 0x164D570 Offset: 0x164D570 VA: 0x164D570
	public void showResetEndDlg() { }

	// RVA: 0x164D85C Offset: 0x164D85C VA: 0x164D85C
	private void closeReseEndDlg(bool isRes) { }

	// RVA: 0x164A9AC Offset: 0x164A9AC VA: 0x164A9AC
	private void SetEventEnableTime() { }

	// RVA: 0x164D900 Offset: 0x164D900 VA: 0x164D900
	private void GetBoxGachaEventEnableTime() { }

	// RVA: 0x1643724 Offset: 0x1643724 VA: 0x1643724
	private void setEventPointRewardList() { }

	// RVA: 0x164DCE0 Offset: 0x164DCE0 VA: 0x164DCE0
	private void SetRewardPointInfoImg() { }

	// RVA: 0x1643D40 Offset: 0x1643D40 VA: 0x1643D40
	private void SetEventRankingRewardList() { }

	// RVA: 0x164DE4C Offset: 0x164DE4C VA: 0x164DE4C
	private void SetTermTotalSupportNum(int term) { }

	// RVA: 0x164E3C8 Offset: 0x164E3C8 VA: 0x164E3C8
	public void OnClickOpenRoundTab(int index) { }

	// RVA: 0x164E708 Offset: 0x164E708 VA: 0x164E708
	public void OnClickNotOpenRoundTab(int index) { }

	// RVA: 0x164E150 Offset: 0x164E150 VA: 0x164E150
