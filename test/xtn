private sealed class PartyOrganizationRootComponent.<OnSelectedOrganizationChange>c__AnonStorey3 // TypeDefIndex: 10467
{
	// Fields
	internal int m; // 0x10
	internal PartyOrganizationRootComponent $this; // 0x18

	// Methods

	// RVA: 0x1BBDC24 Offset: 0x1BBDC24 VA: 0x1BBDC24
	public void .ctor() { }

	// RVA: 0x1BBDC2C Offset: 0x1BBDC2C VA: 0x1BBDC2C
	internal void <>m__0(SelectMyServantOrNpcDialog.ResultClicked buttonResult) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1410 Offset: 0xCB1410 VA: 0xCB1410
private sealed class PartyOrganizationRootComponent.<OnSelectedOrganizationSwap>c__AnonStorey4 // TypeDefIndex: 10468
{
	// Fields
	internal int m; // 0x10
	internal PartyOrganizationRootComponent $this; // 0x18

	// Methods

	// RVA: 0x1BBE064 Offset: 0x1BBE064 VA: 0x1BBE064
	public void .ctor() { }

	// RVA: 0x1BBE06C Offset: 0x1BBE06C VA: 0x1BBE06C
	internal void <>m__0(SelectMyServantOrNpcDialog.ResultClicked buttonResult) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1420 Offset: 0xCB1420 VA: 0xCB1420
private sealed class PartyOrganizationRootComponent.<EndSelectedOrganizationSwapServant>c__AnonStorey5 // TypeDefIndex: 10469
{
	// Fields
	internal PartyServantSelectMenu.ResultKind result; // 0x10
	internal PartyServantListViewItem item; // 0x18
	internal PartyOrganizationRootComponent $this; // 0x20

	// Methods

	// RVA: 0x1BBD69C Offset: 0x1BBD69C VA: 0x1BBD69C
	public void .ctor() { }

	// RVA: 0x1BBD6A4 Offset: 0x1BBD6A4 VA: 0x1BBD6A4
	internal void <>m__0() { }

	// RVA: 0x1BBD700 Offset: 0x1BBD700 VA: 0x1BBD700
	internal void <>m__1(bool isDecide) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0xCB1430 Offset: 0xCB1430 VA: 0xCB1430
private sealed class PartyOrganizationRootComponent.<EndSelectOrganizationSwapServantEquip>c__AnonStorey6 // TypeDefIndex: 10470
{
	// Fields
	internal long equipUserSvtId; // 0x10
	internal PartyOrganizationRootComponent $this; // 0x18

	// Methods

	// RVA: 0x1BBD49C Offset: 0x1BBD49C VA: 0x1BBD49C
	public void .ctor() { }

	// RVA: 0x1BBD4A4 Offset: 0x1BBD4A4 VA: 0x1BBD4A4
	internal void <>m__0(bool isDecide) { }
}

// Namespace: 
public class PartyOrganizationUIDragDropListViewDrop : UIDragDropListViewItem // TypeDefIndex: 10471
{
	// Fields
	[SerializeField] // RVA: 0xCE155C Offset: 0xCE155C VA: 0xCE155C
	protected ListViewObject listViewObject; // 0x78
	protected static float ACTION_TIME; // 0x0
	protected PartyOrganizationListViewDropObject dropObject; // 0x80
	private bool isEquipSwap; // 0x88
	private bool isDrag; // 0x89
	private GameObject surface; // 0x90

	// Methods

	// RVA: 0x1BBE4A4 Offset: 0x1BBE4A4 VA: 0x1BBE4A4
	public void .ctor() { }

	// RVA: 0x1BBE4AC Offset: 0x1BBE4AC VA: 0x1BBE4AC
	private void Update() { }

	// RVA: 0x1BBE544 Offset: 0x1BBE544 VA: 0x1BBE544 Slot: 5
	public override void SetBaseTransform() { }

	// RVA: 0x1BBE63C Offset: 0x1BBE63C VA: 0x1BBE63C Slot: 6
	protected override void OnDragDropStart() { }

	// RVA: 0x1BBE874 Offset: 0x1BBE874 VA: 0x1BBE874 Slot: 8
	protected override void OnDragDropRelease(GameObject surface) { }

	// RVA: 0x1BBEF38 Offset: 0x1BBEF38 VA: 0x1BBEF38
	protected void DragEnd() { }

	// RVA: 0x1BBF22C Offset: 0x1BBF22C VA: 0x1BBF22C
	protected void DragReturnStart() { }

	// RVA: 0x1BBF40C Offset: 0x1BBF40C VA: 0x1BBF40C
	protected void DragReturnMoveEnd() { }

	// RVA: 0x1BBF55C Offset: 0x1BBF55C VA: 0x1BBF55C
	protected void DragReturnEnd() { }

	// RVA: 0x1BBF038 Offset: 0x1BBF038 VA: 0x1BBF038
	protected void DragDumpStart() { }

	// RVA: 0x1BBF6A4 Offset: 0x1BBF6A4 VA: 0x1BBF6A4
	protected void DragDumpEnd() { }

	// RVA: 0x1BBEC7C Offset: 0x1BBEC7C VA: 0x1BBEC7C
	protected void DragSwapStart(PartyOrganizationListViewDropObject ddo) { }

	// RVA: 0x1BBF86C Offset: 0x1BBF86C VA: 0x1BBF86C
	protected void DragSwapMoveEnd() { }

	// RVA: 0x1BC0A08 Offset: 0x1BC0A08 VA: 0x1BC0A08
	private void ExcecutionSwap() { }

	// RVA: 0x1BC0C28 Offset: 0x1BC0C28 VA: 0x1BC0C28
	protected void DragSwapEnd() { }

	// RVA: 0x1BC0E8C Offset: 0x1BC0E8C VA: 0x1BC0E8C
	private static void .cctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3E344 Offset: 0xD3E344 VA: 0xD3E344
	// RVA: 0x1BC0EE4 Offset: 0x1BC0EE4 VA: 0x1BC0EE4
	private void <DragSwapMoveEnd>m__0(bool isDecide) { }
}

// Namespace: 
public class PartyOrganizationUIDragDropListViewItem : UIDragDropListViewItem // TypeDefIndex: 10472
{
	// Fields
	protected static float ACTION_TIME; // 0x0

	// Methods

	// RVA: 0x1BC0F88 Offset: 0x1BC0F88 VA: 0x1BC0F88
	public void .ctor() { }

	// RVA: 0x1BC0F90 Offset: 0x1BC0F90 VA: 0x1BC0F90 Slot: 6
	protected override void OnDragDropStart() { }

	// RVA: 0x1BC1074 Offset: 0x1BC1074 VA: 0x1BC1074 Slot: 8
	protected override void OnDragDropRelease(GameObject surface) { }

	// RVA: 0x1BC15F8 Offset: 0x1BC15F8 VA: 0x1BC15F8
	protected void DragEnd() { }

	// RVA: 0x1BC1418 Offset: 0x1BC1418 VA: 0x1BC1418
	protected void DragReturnStart() { }

	// RVA: 0x1BC16D0 Offset: 0x1BC16D0 VA: 0x1BC16D0
	protected void DragReturnEnd() { }

	// RVA: 0x1BC17A8 Offset: 0x1BC17A8 VA: 0x1BC17A8
	private static void .cctor() { }
}

// Namespace: 
public class PartyOrganizationUIDragDropListViewSurface : UIDragDropListViewSurface // TypeDefIndex: 10473
{
	// Fields
	[SerializeField] // RVA: 0xCE156C Offset: 0xCE156C VA: 0xCE156C
	protected PartyOrganizationListViewDropObject dropObject; // 0x18

	// Properties
	public PartyOrganizationListViewDropObject DropObject { get; }

	// Methods

	// RVA: 0x1BC1800 Offset: 0x1BC1800 VA: 0x1BC1800
	public void .ctor() { }

	// RVA: 0x1BBEC74 Offset: 0x1BBEC74 VA: 0x1BBEC74
	public PartyOrganizationListViewDropObject get_DropObject() { }
}

// Namespace: 
public class PartyOrganizationUtility : SingletonTemplate<PartyOrganizationUtility> // TypeDefIndex: 10474
{
	// Fields
	public static readonly string SAVE_KEY_FRIENDSHIP_ITEM_USE_STATE; // 0x0
	private List<string> restrictionDialogHistoryList; // 0x10
	private Dictionary<int, FollowerInfo> followerInfo; // 0x18
	[CompilerGeneratedAttribute] // RVA: 0xCE157C Offset: 0xCE157C VA: 0xCE157C
	[DebuggerBrowsableAttribute] // RVA: 0xCE157C Offset: 0xCE157C VA: 0xCE157C
	private int <SelectedPartyPosition>k__BackingField; // 0x20
	[CompilerGeneratedAttribute] // RVA: 0xCE15B8 Offset: 0xCE15B8 VA: 0xCE15B8
	[DebuggerBrowsableAttribute] // RVA: 0xCE15B8 Offset: 0xCE15B8 VA: 0xCE15B8
	private bool <IsExitPartyOrganization>k__BackingField; // 0x24
	[CompilerGeneratedAttribute] // RVA: 0xCE15F4 Offset: 0xCE15F4 VA: 0xCE15F4
	[DebuggerBrowsableAttribute] // RVA: 0xCE15F4 Offset: 0xCE15F4 VA: 0xCE15F4
	private PartyListViewItem <BasePartyItem>k__BackingField; // 0x28
	[CompilerGeneratedAttribute] // RVA: 0xCE1630 Offset: 0xCE1630 VA: 0xCE1630
	[DebuggerBrowsableAttribute] // RVA: 0xCE1630 Offset: 0xCE1630 VA: 0xCE1630
	private PartyListViewItem <PartyItem>k__BackingField; // 0x30

	// Properties
	public int SelectedPartyPosition { get; set; }
	public bool IsExitPartyOrganization { get; set; }
	public PartyListViewItem BasePartyItem { get; set; }
	public PartyListViewItem PartyItem { get; set; }

	// Methods

	// RVA: 0x1BC1808 Offset: 0x1BC1808 VA: 0x1BC1808
	public void .ctor() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3E354 Offset: 0xD3E354 VA: 0xD3E354
	// RVA: 0x1BC18C8 Offset: 0x1BC18C8 VA: 0x1BC18C8
	public int get_SelectedPartyPosition() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3E364 Offset: 0xD3E364 VA: 0xD3E364
	// RVA: 0x1BBD170 Offset: 0x1BBD170 VA: 0x1BBD170
	public void set_SelectedPartyPosition(int value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3E374 Offset: 0xD3E374 VA: 0xD3E374
	// RVA: 0x1BC18D0 Offset: 0x1BC18D0 VA: 0x1BC18D0
	public bool get_IsExitPartyOrganization() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3E384 Offset: 0xD3E384 VA: 0xD3E384
	// RVA: 0x1BC18D8 Offset: 0x1BC18D8 VA: 0x1BC18D8
	public void set_IsExitPartyOrganization(bool value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3E394 Offset: 0xD3E394 VA: 0xD3E394
	// RVA: 0x1BC18E4 Offset: 0x1BC18E4 VA: 0x1BC18E4
	public PartyListViewItem get_BasePartyItem() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3E3A4 Offset: 0xD3E3A4 VA: 0xD3E3A4
	// RVA: 0x1BC18EC Offset: 0x1BC18EC VA: 0x1BC18EC
	public void set_BasePartyItem(PartyListViewItem value) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3E3B4 Offset: 0xD3E3B4 VA: 0xD3E3B4
	// RVA: 0x1BC18F4 Offset: 0x1BC18F4 VA: 0x1BC18F4
	public PartyListViewItem get_PartyItem() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3E3C4 Offset: 0xD3E3C4 VA: 0xD3E3C4
	// RVA: 0x1BC18FC Offset: 0x1BC18FC VA: 0x1BC18FC
	public void set_PartyItem(PartyListViewItem value) { }

	// RVA: 0x1BC1904 Offset: 0x1BC1904 VA: 0x1BC1904
	public bool IsDisplayedRestrictionDialog(int questId, int phaseId, int restrictionId, bool isAddHistory = True) { }

	// RVA: 0x1BC1A34 Offset: 0x1BC1A34 VA: 0x1BC1A34
	public void AddRestrictionDialogHistory(int questId, int phaseId, int restrictionId) { }

	// RVA: 0x1BC02A0 Offset: 0x1BC02A0 VA: 0x1BC02A0
	public bool IsRarityRestriction(out string skillName, out int actMaxRarity, int servantId, int servantRarity, int equipServantId, int eventId = -1) { }

	// RVA: 0x1BC1B4C Offset: 0x1BC1B4C VA: 0x1BC1B4C
	public bool IsRarityRestriction(int servantId, int servantRarity, int skillId, int skillLv = 1) { }

	// RVA: 0x1BC0990 Offset: 0x1BC0990 VA: 0x1BC0990
	public void DecisionFontSize(out int maxFontSize, out int minFontSize, int maxLength) { }

	// RVA: 0x1BC0604 Offset: 0x1BC0604 VA: 0x1BC0604
	public string GetRarityInvalidMessage(out int maxLength, string servantName, int servantRarity, string equipName, string skillName, int actMaxRarity) { }

	// RVA: 0x1BC1C88 Offset: 0x1BC1C88 VA: 0x1BC1C88
	public void SetFollowerInfo(int key, FollowerInfo followerInfo) { }

	// RVA: 0x1BC1D00 Offset: 0x1BC1D00 VA: 0x1BC1D00
	public FollowerInfo GetFollowerInfo(int key) { }

	// RVA: 0x1BC1D64 Offset: 0x1BC1D64 VA: 0x1BC1D64
	public Dictionary<int, FollowerInfo> GetFollowerInfo() { }

	// RVA: 0x1BC1D6C Offset: 0x1BC1D6C VA: 0x1BC1D6C
	public void ClearFollowerInfo() { }

	// RVA: 0x1BC1DCC Offset: 0x1BC1DCC VA: 0x1BC1DCC
	public bool IsAvailableFriendshipUpItem() { }

	// RVA: 0x1BC1E6C Offset: 0x1BC1E6C VA: 0x1BC1E6C
	public ItemEntity GetAvailableFriendshipUpItemEntity() { }

	// RVA: 0x1BC2098 Offset: 0x1BC2098 VA: 0x1BC2098
	public int GetAvailableFriendshipUpItemNum() { }

	// RVA: 0x1BC2388 Offset: 0x1BC2388 VA: 0x1BC2388
	private static void .cctor() { }
}

// Namespace: 
public class PartyServantListViewItem : ListViewItem // TypeDefIndex: 10475
{
	// Fields
	private static readonly long PRIORITY_NORMAL; // 0x0
	private static readonly long PRIORITY_TOP; // 0x8
	private static readonly long PRIORITY_LOWEST; // 0x10
	private static readonly long PRIORITY_LOWEST_HEROIN_LEAVE; // 0x18
	protected UserServantEntity userServantEntity; // 0x70
	protected long[] equipIdList; // 0x78
	protected ServantEntity servantEntity; // 0x80
	protected EventUpValSetupInfo setupInfo; // 0x88
	protected QuestRestrictionInfo questRestrictionInfo; // 0x90
	protected ObscuredInt svtId; // 0x98
	protected int classId; // 0xA8
	protected int rarityId; // 0xAC
	protected int frameType; // 0xB0
	protected ObscuredInt friendship; // 0xB4
	protected int friendshipMax; // 0xC4
	protected bool isBase; // 0xC8
	protected int partyIndex; // 0xCC
	protected bool isLock; // 0xD0
	protected bool isChoice; // 0xD1
	protected bool isCostOver; // 0xD2
	protected bool isSame; // 0xD3
	protected bool isEventJoin; // 0xD4
	protected bool isLeave; // 0xD5
	protected bool isSelectLeader; // 0xD6
	protected bool isSelectEmpty; // 0xD7
	protected bool isPushMode; // 0xD8
	protected bool isPush; // 0xD9
	protected bool isEnabled; // 0xDA
	protected ListViewSort.BonusFilterKind bonusKind; // 0xDC
	protected int bonusKindId; // 0xE0
	protected bool isEventUpVal; // 0xE4
	protected bool isQuestRestriction; // 0xE5
	protected bool isUniqueSvtRestriction; // 0xE6
	protected long fatigureTime; // 0xE8
	protected bool isFatigureRecover; // 0xF0
	protected int priority; // 0xF4
	protected IconLabelInfo iconLabelInfo1; // 0xF8
	protected IconLabelInfo iconLabelInfo2; // 0x100
	protected IconLabelInfo iconLabelInfo3; // 0x108
	protected UserServantEntity equipUserServantEntity; // 0x110
	protected ServantEntity equipServantEntity; // 0x118
	protected long amountSortValue; // 0x120
	protected bool isSwapLock; // 0x128
	protected bool isSwapChoice; // 0x129
	protected bool isInvalidRarity; // 0x12A
	private int hpReinforceValue; // 0x12C
	private int atkReinforceValue; // 0x130
	private int nowMaxHpReinforceValue; // 0x134
	private int nowMaxAtkReinforceValue; // 0x138
	protected int commonRestrictionId; // 0x13C
	private int memberIndex; // 0x140
	private PartyOrganizationListViewItem baseItem; // 0x148
	private PartyServantSelectMenu.TutorialMode tutorialMode; // 0x150
	[CompilerGeneratedAttribute] // RVA: 0xCE166C Offset: 0xCE166C VA: 0xCE166C
	[DebuggerBrowsableAttribute] // RVA: 0xCE166C Offset: 0xCE166C VA: 0xCE166C
	private PartyListViewItem.MenuKind <PartyListViewItemMenuKind>k__BackingField; // 0x154

	// Properties
	public PartyListViewItem.MenuKind PartyListViewItemMenuKind { get; set; }
	public bool IsSelectLeader { get; }
	public bool IsSelectEmpty { get; }
	public UserServantEntity UserServant { get; }
	public ServantEntity Servant { get; }
	public int SvtId { get; }
	public int ClassId { get; }
	public int RarityId { get; }
	public int FrameType { get; }
	public string NameText { get; }
	public bool IsBase { get; }
	public bool IsParty { get; }
	public int PartyIndex { get; }
	public int Cost { get; }
	public int EquipCost { get; }
	public bool IsCostOver { get; }
	public bool IsSame { get; }
	public bool IsEventJoin { get; }
	public bool IsLeave { get; }
	public bool IsLock { get; }
	public bool IsSwapLock { get; }
	public bool IsDispLock { get; }
	public bool IsChoice { get; }
	public bool IsSwapChoice { get; }
	public bool IsDispChoice { get; }
	public bool IsQuestRestriction { get; }
	public bool IsUniqueSvtRestriction { get; }
	public long FatigureTime { get; }
	public bool IsFatigureRecover { get; }
	public IconLabelInfo IconInfo1 { get; }
	public IconLabelInfo IconInfo2 { get; }
	public IconLabelInfo IconInfo3 { get; }
	public bool IsEquip { get; }
	public QuestRestrictionInfo QuestRestriction { get; }
	public bool IsRestricted { get; }
	public bool IsPushMode { get; set; }
	public bool IsPush { get; set; }
	public bool IsEnabled { get; set; }
	public bool IsInvalidRarity { get; }

	// Methods

	// RVA: 0x1BC25B4 Offset: 0x1BC25B4 VA: 0x1BC25B4
	public void .ctor(int index, UserServantEntity userServantEntity, PartyListViewItem partyItem, int num, PartyServantSelectMenu.TutorialMode tutorialMode, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo) { }

	// RVA: 0x1BC3A74 Offset: 0x1BC3A74 VA: 0x1BC3A74
	public void .ctor(int index, UserServantEntity userServantEntity, WarBoardPartyListViewItem partyItem, int num, PartyServantSelectMenu.TutorialMode tutorialMode, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo) { }

	[CompilerGeneratedAttribute] // RVA: 0xD3E3D4 Offset: 0xD3E3D4 VA: 0xD3E3D4
	// RVA: 0x1BC44C0 Offset: 0x1BC44C0 VA: 0x1BC44C0
	public PartyListViewItem.MenuKind get_PartyListViewItemMenuKind() { }

	[CompilerGeneratedAttribute] // RVA: 0xD3E3E4 Offset: 0xD3E3E4 VA: 0xD3E3E4
	// RVA: 0x1BC33F8 Offset: 0x1BC33F8 VA: 0x1BC33F8
	private void set_PartyListViewItemMenuKind(PartyListViewItem.MenuKind value) { }

	// RVA: 0x1BC36C8 Offset: 0x1BC36C8 VA: 0x1BC36C8
	private bool ChkQuestRestriction() { }

	// RVA: 0x1BC44C8 Offset: 0x1BC44C8 VA: 0x1BC44C8
	public void Modify(UserServantEntity userServantEntity) { }

	// RVA: 0x1BC44F4 Offset: 0x1BC44F4 VA: 0x1BC44F4
	public void ModifyItem(UserServantEntity userServantEntity) { }

	// RVA: 0x1BC4550 Offset: 0x1BC4550 VA: 0x1BC4550
	public void ModifyLockItem() { }

	// RVA: 0x1BC4594 Offset: 0x1BC4594 VA: 0x1BC4594
	public void ModifyChoiceItem() { }

	// RVA: 0x1BC45D8 Offset: 0x1BC45D8 VA: 0x1BC45D8 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1BC3400 Offset: 0x1BC3400 VA: 0x1BC3400
	protected void SetEquipStatus(long[] equipIdList) { }

	// RVA: 0x1BC45E0 Offset: 0x1BC45E0 VA: 0x1BC45E0 Slot: 5
	public override bool IsMatchFilter(ListViewSort sort) { }

	// RVA: 0x1BC48A4 Offset: 0x1BC48A4 VA: 0x1BC48A4 Slot: 4
	public override bool SetSortValue(ListViewSort sort) { }

	// RVA: 0x1BC580C Offset: 0x1BC580C VA: 0x1BC580C
	public bool SwapLock() { }

	// RVA: 0x1BC5828 Offset: 0x1BC5828 VA: 0x1BC5828
	public bool SwapChoice() { }

	// RVA: 0x1BC5844 Offset: 0x1BC5844 VA: 0x1BC5844
	public long[] GetEquipList() { }

	// RVA: 0x1BC584C Offset: 0x1BC584C VA: 0x1BC584C
	public string GetRestrictionMessage() { }

	// RVA: 0x1BC58CC Offset: 0x1BC58CC VA: 0x1BC58CC
	public bool get_IsSelectLeader() { }

	// RVA: 0x1BC58D4 Offset: 0x1BC58D4 VA: 0x1BC58D4
	public bool get_IsSelectEmpty() { }

	// RVA: 0x1BC487C Offset: 0x1BC487C VA: 0x1BC487C
	public UserServantEntity get_UserServant() { }

	// RVA: 0x1BC58DC Offset: 0x1BC58DC VA: 0x1BC58DC
	public ServantEntity get_Servant() { }

	// RVA: 0x1BC58E4 Offset: 0x1BC58E4 VA: 0x1BC58E4
	public int get_SvtId() { }

	// RVA: 0x1BC5954 Offset: 0x1BC5954 VA: 0x1BC5954
	public int get_ClassId() { }

	// RVA: 0x1BC595C Offset: 0x1BC595C VA: 0x1BC595C
	public int get_RarityId() { }

	// RVA: 0x1BC5964 Offset: 0x1BC5964 VA: 0x1BC5964
	public int get_FrameType() { }

	// RVA: 0x1BC596C Offset: 0x1BC596C VA: 0x1BC596C
	public string get_NameText() { }

	// RVA: 0x1BC5A28 Offset: 0x1BC5A28 VA: 0x1BC5A28
	public bool get_IsBase() { }

	// RVA: 0x1BC3904 Offset: 0x1BC3904 VA: 0x1BC3904
	public bool get_IsParty() { }

	// RVA: 0x1BC5A30 Offset: 0x1BC5A30 VA: 0x1BC5A30
	public int get_PartyIndex() { }

	// RVA: 0x1BC56A4 Offset: 0x1BC56A4 VA: 0x1BC56A4
	public int get_Cost() { }

	// RVA: 0x1BC56D0 Offset: 0x1BC56D0 VA: 0x1BC56D0
	public int get_EquipCost() { }

	// RVA: 0x1BC5A38 Offset: 0x1BC5A38 VA: 0x1BC5A38
	public bool get_IsCostOver() { }

	// RVA: 0x1BC5A40 Offset: 0x1BC5A40 VA: 0x1BC5A40
	public bool get_IsSame() { }

	// RVA: 0x1BC5A48 Offset: 0x1BC5A48 VA: 0x1BC5A48
	public bool get_IsEventJoin() { }

	// RVA: 0x1BC5A50 Offset: 0x1BC5A50 VA: 0x1BC5A50
	public bool get_IsLeave() { }

	// RVA: 0x1BC5A58 Offset: 0x1BC5A58 VA: 0x1BC5A58
	public bool get_IsLock() { }

	// RVA: 0x1BC5A60 Offset: 0x1BC5A60 VA: 0x1BC5A60
	public bool get_IsSwapLock() { }

	// RVA: 0x1BC5A68 Offset: 0x1BC5A68 VA: 0x1BC5A68
	public bool get_IsDispLock() { }

	// RVA: 0x1BC5A88 Offset: 0x1BC5A88 VA: 0x1BC5A88
	public bool get_IsChoice() { }

	// RVA: 0x1BC5A90 Offset: 0x1BC5A90 VA: 0x1BC5A90
	public bool get_IsSwapChoice() { }

	// RVA: 0x1BC4884 Offset: 0x1BC4884 VA: 0x1BC4884
	public bool get_IsDispChoice() { }

	// RVA: 0x1BC5A98 Offset: 0x1BC5A98 VA: 0x1BC5A98
	public bool get_IsQuestRestriction() { }

	// RVA: 0x1BC5AA0 Offset: 0x1BC5AA0 VA: 0x1BC5AA0
	public bool get_IsUniqueSvtRestriction() { }

	// RVA: 0x1BC5AA8 Offset: 0x1BC5AA8 VA: 0x1BC5AA8
	public long get_FatigureTime() { }

	// RVA: 0x1BC5AB0 Offset: 0x1BC5AB0 VA: 0x1BC5AB0
	public bool get_IsFatigureRecover() { }

	// RVA: 0x1BC5AB8 Offset: 0x1BC5AB8 VA: 0x1BC5AB8
	public void ClearFatigure() { }

	// RVA: 0x1BC5AC4 Offset: 0x1BC5AC4 VA: 0x1BC5AC4
	public IconLabelInfo get_IconInfo1() { }

	// RVA: 0x1BC5ACC Offset: 0x1BC5ACC VA: 0x1BC5ACC
	public IconLabelInfo get_IconInfo2() { }

	// RVA: 0x1BC5AD4 Offset: 0x1BC5AD4 VA: 0x1BC5AD4
	public IconLabelInfo get_IconInfo3() { }

	// RVA: 0x1BC5ADC Offset: 0x1BC5ADC VA: 0x1BC5ADC
	public bool get_IsEquip() { }

	// RVA: 0x1BC5AEC Offset: 0x1BC5AEC VA: 0x1BC5AEC
	public bool GetNpInfo(out TreasureDvcInfo tdInfo) { }

	// RVA: 0x1BC5B84 Offset: 0x1BC5B84 VA: 0x1BC5B84
	public QuestRestrictionInfo get_QuestRestriction() { }

	// RVA: 0x1BC5B8C Offset: 0x1BC5B8C VA: 0x1BC5B8C
	public bool get_IsRestricted() { }

	// RVA: 0x1BC3914 Offset: 0x1BC3914 VA: 0x1BC3914
	private void InitAfterSecondSort() { }

	// RVA: 0x1BC5B9C Offset: 0x1BC5B9C VA: 0x1BC5B9C
	public void set_IsPushMode(bool value) { }

	// RVA: 0x1BC5BA8 Offset: 0x1BC5BA8 VA: 0x1BC5BA8
	public bool get_IsPushMode() { }

	// RVA: 0x1BC5BB0 Offset: 0x1BC5BB0 VA: 0x1BC5BB0
	public void set_IsPush(bool value) { }

	// RVA: 0x1BC5BBC Offset: 0x1BC5BBC VA: 0x1BC5BBC
	public bool get_IsPush() { }

	// RVA: 0x1BC5BC4 Offset: 0x1BC5BC4 VA: 0x1BC5BC4
	public void set_IsEnabled(bool value) { }

	// RVA: 0x1BC5BD0 Offset: 0x1BC5BD0 VA: 0x1BC5BD0
	public bool get_IsEnabled() { }

	// RVA: 0x1BC5BD8 Offset: 0x1BC5BD8 VA: 0x1BC5BD8
	public bool get_IsInvalidRarity() { }

	// RVA: 0x1BC5BE0 Offset: 0x1BC5BE0 VA: 0x1BC5BE0
	private static void .cctor() { }
}

// Namespace: 
public class PartyServantListViewItemDraw : MonoBehaviour // TypeDefIndex: 10476
{
	// Fields
	[SerializeField] // RVA: 0xCE16A8 Offset: 0xCE16A8 VA: 0xCE16A8
	protected UICommonButton baseButton; // 0x18
	[SerializeField] // RVA: 0xCE16B8 Offset: 0xCE16B8 VA: 0xCE16B8
	protected ServantFaceIconComponent servantFaceIcon; // 0x20
	[SerializeField] // RVA: 0xCE16C8 Offset: 0xCE16C8 VA: 0xCE16C8
	protected UIIconLabel info2IconLabel; // 0x28
	[SerializeField] // RVA: 0xCE16D8 Offset: 0xCE16D8 VA: 0xCE16D8
	protected FlashingIconComponent partyIcon; // 0x30
	[SerializeField] // RVA: 0xCE16E8 Offset: 0xCE16E8 VA: 0xCE16E8
	protected UISprite lockSprite; // 0x38
	[SerializeField] // RVA: 0xCE16F8 Offset: 0xCE16F8 VA: 0xCE16F8
	protected UISprite choiceSprite; // 0x40
	[SerializeField] // RVA: 0xCE1708 Offset: 0xCE1708 VA: 0xCE1708
	protected UISprite maskSprite; // 0x48
	[SerializeField] // RVA: 0xCE1718 Offset: 0xCE1718 VA: 0xCE1718
	protected UILabel maskMessageLabel; // 0x50
	[SerializeField] // RVA: 0xCE1728 Offset: 0xCE1728 VA: 0xCE1728
	protected UIWidget maskFatigueBase; // 0x58
	[SerializeField] // RVA: 0xCE1738 Offset: 0xCE1738 VA: 0xCE1738
	protected UILabel maskFatigureMessageLabel; // 0x60
	[SerializeField] // RVA: 0xCE1748 Offset: 0xCE1748 VA: 0xCE1748
	protected UILabel maskFatigureMessageLabelTime; // 0x68
	[SerializeField] // RVA: 0xCE1758 Offset: 0xCE1758 VA: 0xCE1758
	protected GameObject warningBase; // 0x70
	[SerializeField] // RVA: 0xCE1768 Offset: 0xCE1768 VA: 0xCE1768
	protected FlashingIconComponent warningIcon; // 0x78
	[SerializeField] // RVA: 0xCE1778 Offset: 0xCE1778 VA: 0xCE1778
	protected UILabel warningMessageLabel; // 0x80
	[SerializeField] // RVA: 0xCE1788 Offset: 0xCE1788 VA: 0xCE1788
	protected GameObject selectObject; // 0x88
	[SerializeField] // RVA: 0xCE1798 Offset: 0xCE1798 VA: 0xCE1798
	protected ServantClassCompatibilityIconComponent classCompatibilityIcon; // 0x90
	[SerializeField] // RVA: 0xCE17A8 Offset: 0xCE17A8 VA: 0xCE17A8
	protected UISprite pushSprite; // 0x98
	[SerializeField] // RVA: 0xCE17B8 Offset: 0xCE17B8 VA: 0xCE17B8
	protected UILabel skillInvalidLabel; // 0xA0
	[SerializeField] // RVA: 0xCE17C8 Offset: 0xCE17C8 VA: 0xCE17C8
	protected SwitchUIWidgetComponent messageLabel; // 0xA8
	private List<UIWidget> messageLabelList; // 0xB0
	protected int maskMessageWidth; // 0xB8
	protected int warningMessageWidth; // 0xBC

	// Methods

	// RVA: 0x1BC5C4C Offset: 0x1BC5C4C VA: 0x1BC5C4C
	public void .ctor() { }

	// RVA: 0x1BC5C54 Offset: 0x1BC5C54 VA: 0x1BC5C54
	protected void Awake() { }

	// RVA: 0x1BC5D3C Offset: 0x1BC5D3C VA: 0x1BC5D3C
	public void SetItem(PartyServantListViewItem item, PartyServantListViewItemDraw.DispMode mode) { }

	// RVA: 0x1BC609C Offset: 0x1BC609C VA: 0x1BC609C
	private bool SetMessageLabel(PartyServantListViewItem item) { }

	// RVA: 0x1BC6FE4 Offset: 0x1BC6FE4 VA: 0x1BC6FE4
	private bool SetRestrictionMask(PartyServantListViewItem item) { }

	// RVA: 0x1BC6410 Offset: 0x1BC6410 VA: 0x1BC6410
	private void SetClassCompatibilityIcon(PartyServantListViewItem item, bool isClear) { }

	// RVA: 0x1BC6E40 Offset: 0x1BC6E40 VA: 0x1BC6E40
	protected void ClearMessage() { }

	// RVA: 0x1BC6698 Offset: 0x1BC6698 VA: 0x1BC6698
	protected void SetMaskMessage(string message, bool isScale = False, string maskName) { }

	// RVA: 0x1BC71F0 Offset: 0x1BC71F0 VA: 0x1BC71F0
	protected void SetWarningMessage(string message, bool isScale = False) { }

	// RVA: 0x1BC74D8 Offset: 0x1BC74D8 VA: 0x1BC74D8
	public void SetInput(PartyServantListViewItem item, bool isInput) { }

	// RVA: 0x1BC7834 Offset: 0x1BC7834 VA: 0x1BC7834
	public void UpdateDisp(PartyServantListViewItem item) { }

	// RVA: 0x1BC6A30 Offset: 0x1BC6A30 VA: 0x1BC6A30
	protected void SetFatigueMask(PartyServantListViewItem item) { }
}

// Namespace: 
public enum PartyServantListViewItemDraw.DispMode // TypeDefIndex: 10477
{
	// Fields
	public int value__; // 0x0
	public const PartyServantListViewItemDraw.DispMode INVISIBLE = 0;
	public const PartyServantListViewItemDraw.DispMode INVALID = 1;
	public const PartyServantListViewItemDraw.DispMode VALID = 2;
	public const PartyServantListViewItemDraw.DispMode INPUT = 3;
}

// Namespace: 
public class PartyServantListViewManager : ListViewManager // TypeDefIndex: 10478
{
	// Fields
	[SerializeField] // RVA: 0xCE17D8 Offset: 0xCE17D8 VA: 0xCE17D8
	protected PartyServantSelectMenu partyServantSelectMenu; // 0x138
	[SerializeField] // RVA: 0xCE17E8 Offset: 0xCE17E8 VA: 0xCE17E8
	protected UILabel maxCostLabel; // 0x140
	[SerializeField] // RVA: 0xCE17F8 Offset: 0xCE17F8 VA: 0xCE17F8
	protected UILabel splitCostLabel; // 0x148
	[SerializeField] // RVA: 0xCE1808 Offset: 0xCE1808 VA: 0xCE1808
	protected UILabel selectCostLabel; // 0x150
	[SerializeField] // RVA: 0xCE1818 Offset: 0xCE1818 VA: 0xCE1818
	protected UISprite sortExplanationSprite; // 0x158
	[SerializeField] // RVA: 0xCE1828 Offset: 0xCE1828 VA: 0xCE1828
	protected UISprite filterSprite; // 0x160
	[SerializeField] // RVA: 0xCE1838 Offset: 0xCE1838 VA: 0xCE1838
	protected UICommonButton bonusFilterKindButton; // 0x168
	[SerializeField] // RVA: 0xCE1848 Offset: 0xCE1848 VA: 0xCE1848
	protected UILabel bonusFilterKindLabel; // 0x170
	[SerializeField] // RVA: 0xCE1858 Offset: 0xCE1858 VA: 0xCE1858
	protected ListViewItemSeed normalSizeSeed; // 0x178
	[SerializeField] // RVA: 0xCE1868 Offset: 0xCE1868 VA: 0xCE1868
	protected ListViewItemSeed smallSizeSeed; // 0x180
	[SerializeField] // RVA: 0xCE1878 Offset: 0xCE1878 VA: 0xCE1878
	protected ListViewItemSeed extremelySmallSizeSeed; // 0x188
	public static readonly string SORT_SAVE_KEY; // 0x0
	public static readonly string WAR_SORT_SAVE_KEY; // 0x8
	protected static ListViewSort servantSortInfo; // 0x10
	protected static ListViewSort warServantSortInfo; // 0x18
	protected PartyServantListViewManager.InitMode initMode; // 0x190
	protected ListViewSort.ScaleType scaleType; // 0x194
	[CompilerGeneratedAttribute] // RVA: 0xCE1888 Offset: 0xCE1888 VA: 0xCE1888
	[DebuggerBrowsableAttribute] // RVA: 0xCE1888 Offset: 0xCE1888 VA: 0xCE1888
	private PartyServantListViewManager.CallbackFunc callbackFunc; // 0x198
	[CompilerGeneratedAttribute] // RVA: 0xCE18C4 Offset: 0xCE18C4 VA: 0xCE18C4
	[DebuggerBrowsableAttribute] // RVA: 0xCE18C4 Offset: 0xCE18C4 VA: 0xCE18C4
	private Action callbackFunc2; // 0x1A0
	protected int callbackCount; // 0x1A8
	protected bool isFatigue; // 0x1AC
	protected bool isQuestStart; // 0x1AD
	protected int[] bonusEventIdList; // 0x1B0
	protected int[] servantFilterIdList; // 0x1B8
	protected long updateTime; // 0x1C0

	// Properties
	public List<PartyServantListViewObject> ObjectList { get; }
	public List<PartyServantListViewObject> ClippingObjectList { get; }

	// Methods

	// RVA: 0x1BC7884 Offset: 0x1BC7884 VA: 0x1BC7884
	public void .ctor() { }

	// RVA: 0x1BC7894 Offset: 0x1BC7894 VA: 0x1BC7894
	protected void add_callbackFunc(PartyServantListViewManager.CallbackFunc value) { }

	// RVA: 0x1BC7984 Offset: 0x1BC7984 VA: 0x1BC7984
	protected void remove_callbackFunc(PartyServantListViewManager.CallbackFunc value) { }

	// RVA: 0x1BC7A74 Offset: 0x1BC7A74 VA: 0x1BC7A74
	protected void add_callbackFunc2(Action value) { }

	// RVA: 0x1BC7B64 Offset: 0x1BC7B64 VA: 0x1BC7B64
	protected void remove_callbackFunc2(Action value) { }

	// RVA: 0x1BC7C54 Offset: 0x1BC7C54 VA: 0x1BC7C54
	public PartyServantSelectMenu.ModeKind GetModeKind() { }

	// RVA: 0x1BC7C88 Offset: 0x1BC7C88 VA: 0x1BC7C88
	public static void DeleteContinueData() { }

	// RVA: 0x1BC7D28 Offset: 0x1BC7D28 VA: 0x1BC7D28
	public static void InitLoad() { }

	// RVA: 0x1BC7DC8 Offset: 0x1BC7DC8 VA: 0x1BC7DC8
	public List<PartyServantListViewObject> get_ObjectList() { }

	// RVA: 0x1BC7F94 Offset: 0x1BC7F94 VA: 0x1BC7F94
	public List<PartyServantListViewObject> get_ClippingObjectList() { }

	// RVA: 0x1BC8274 Offset: 0x1BC8274 VA: 0x1BC8274
	public void SortItem(int selectIndex = -1, bool isAllDisp = False, int addEmptyTarminal = -1) { }

	// RVA: 0x1BC8314 Offset: 0x1BC8314 VA: 0x1BC8314
	public void CreateList(PartyListViewItem partyItem, int num, PartyServantSelectMenu.TutorialMode tutorialMode, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo) { }

	// RVA: 0x1BC8B08 Offset: 0x1BC8B08 VA: 0x1BC8B08
	public void CreateList(WarBoardPartyListViewItem partyItem, int num, PartyServantSelectMenu.TutorialMode tutorialMode, EventUpValSetupInfo setupInfo, QuestRestrictionInfo questRestrictionInfo) { }

	// RVA: 0x1BC9238 Offset: 0x1BC9238 VA: 0x1BC9238
	public void ModifyList(bool isIconSizeChange = False) { }

	// RVA: 0x1BC95F8 Offset: 0x1BC95F8 VA: 0x1BC95F8
	public void DestroyList() { }

	// RVA: 0x1BC9644 Offset: 0x1BC9644 VA: 0x1BC9644
	public PartyServantListViewItem GetItem(int index) { }

	// RVA: 0x1BC96EC Offset: 0x1BC96EC VA: 0x1BC96EC
	public bool GetSwapLockList(out long[] lockList, out long[] unlockList) { }

	// RVA: 0x1BC99C4 Offset: 0x1BC99C4 VA: 0x1BC99C4
	public bool GetSwapChoiceList(out long[] choiceList, out long[] unchoiceList) { }

	// RVA: 0x1BC9C98 Offset: 0x1BC9C98 VA: 0x1BC9C98 Slot: 4
	protected override void SetObjectItem(ListViewObject obj, ListViewItem item) { }

	// RVA: 0x1BC9DD0 Offset: 0x1BC9DD0 VA: 0x1BC9DD0
	public void SetMode(PartyServantListViewManager.InitMode mode, PartyServantListViewManager.CallbackFunc callback) { }

	// RVA: 0x1BCA1B4 Offset: 0x1BCA1B4 VA: 0x1BCA1B4
	public void SetMode(PartyServantListViewManager.InitMode mode, Action callback) { }

	// RVA: 0x1BC9DD8 Offset: 0x1BC9DD8 VA: 0x1BC9DD8
	public void SetMode(PartyServantListViewManager.InitMode mode) { }

	// RVA: 0x1BCA434 Offset: 0x1BCA434 VA: 0x1BCA434
	protected void RequestListObject(PartyServantListViewObject.InitMode mode, float delay) { }

	// RVA: 0x1BCA1BC Offset: 0x1BCA1BC VA: 0x1BCA1BC
	protected void RequestListObject(PartyServantListViewObject.InitMode mode) { }

	// RVA: 0x1BCA6C0 Offset: 0x1BCA6C0 VA: 0x1BCA6C0
	protected void OnMoveEnd() { }

	// RVA: 0x1BCA78C Offset: 0x1BCA78C VA: 0x1BCA78C
	protected void OnClickListView(ListViewObject obj) { }

	// RVA: 0x1BCA790 Offset: 0x1BCA790 VA: 0x1BCA790
	protected void OnClickSelectListView(ListViewObject obj) { }

	// RVA: 0x1BCAA30 Offset: 0x1BCAA30 VA: 0x1BCAA30
	protected void OnLongPushListView(ListViewObject obj) { }

	// RVA: 0x1BCAAD4 Offset: 0x1BCAAD4 VA: 0x1BCAAD4
	public void OnClickBonusFilterKind() { }

	// RVA: 0x1BCABDC Offset: 0x1BCABDC VA: 0x1BCABDC
	public void OnClickFilterKind() { }

	// RVA: 0x1BCACD0 Offset: 0x1BCACD0 VA: 0x1BCACD0
	public void EndSelectFilterKind(bool isDecide) { }

	// RVA: 0x1BCAD98 Offset: 0x1BCAD98 VA: 0x1BCAD98
	protected void EndCloseSelectFilterKind() { }

	// RVA: 0x1BC8A74 Offset: 0x1BC8A74 VA: 0x1BC8A74
	private void SetFilterButtonImage() { }

	// RVA: 0x1BCAD9C Offset: 0x1BCAD9C VA: 0x1BCAD9C
	public void OnClickSortKind() { }

	// RVA: 0x1BCAEB4 Offset: 0x1BCAEB4 VA: 0x1BCAEB4
	protected void EndSelectSortKind(bool isDecide) { }

	// RVA: 0x1BCAF74 Offset: 0x1BCAF74 VA: 0x1BCAF74
	protected void EndCloseSelectSortKind() { }

	// RVA: 0x1BCAF78 Offset: 0x1BCAF78 VA: 0x1BCAF78
	public void OnClickSortAscendingOrder() { }

	// RVA: 0x1BCB064 Offset: 0x1BCB064 VA: 0x1BCB064 Slot: 5
	protected override void SetSortButtonImage() { }

	// RVA: 0x1BC56E8 Offset: 0x1BC56E8 VA: 0x1BC56E8
	public long GetAmountSortValue(int svtId) { }

	// RVA: 0x1BCB3E4 Offset: 0x1BCB3E4 VA: 0x1BCB3E4
	protected void Update() { }

	// RVA: 0x1BCB4C0 Offset: 0x1BCB4C0 VA: 0x1BCB4C0
	protected void UpdateDisp() { }

	// RVA: 0x1BCB6FC Offset: 0x1BCB6FC VA: 0x1BCB6FC
	public void ChangeIconScale() { }

	// RVA: 0x1BCB7D0 Offset: 0x1BCB7D0 VA: 0x1BCB7D0
	public string GetScaleButtonSpriteName() { }

	// RVA: 0x1BCB808 Offset: 0x1BCB808 VA: 0x1BCB808
	public void UpdateItemState(bool isPushMode) { }

	// RVA: 0x1BCBB08 Offset: 0x1BCBB08 VA: 0x1BCBB08
	private static void .cctor() { }
}

// Namespace: 
public enum PartyServantListViewManager.InitMode // TypeDefIndex: 10479
{
	// Fields
	public int value__; // 0x0
	public const PartyServantListViewManager.InitMode NONE = 0;
	public const PartyServantListViewManager.InitMode VALID = 1;
	public const PartyServantListViewManager.InitMode INPUT = 2;
	public const PartyServantListViewManager.InitMode MODIFY = 3;
	public const PartyServantListViewManager.InitMode SORT = 4;
	public const PartyServantListViewManager.InitMode ORGANIZATION_GUIDE_FIRST_SELECT = 5;
}

// Namespace: 
public enum PartyServantListViewManager.ResultKind // TypeDefIndex: 10480
{
	// Fields
	public int value__; // 0x0
	public const PartyServantListViewManager.ResultKind NONE = 0;
	public const PartyServantListViewManager.ResultKind CANCEL = 1;
	public const PartyServantListViewManager.ResultKind DECIDE = 2;
	public const PartyServantListViewManager.ResultKind SHOW_STATUS = 3;
}

// Namespace: 
public sealed class PartyServantListViewManager.CallbackFunc : MulticastDelegate // TypeDefIndex: 10481
{
	// Methods

	// RVA: 0x1BCBBF4 Offset: 0x1BCBBF4 VA: 0x1BCBBF4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x1BCA7EC Offset: 0x1BCA7EC VA: 0x1BCA7EC Slot: 11
	public virtual void Invoke(PartyServantListViewManager.ResultKind kind, int result) { }

	// RVA: 0x1BCBC04 Offset: 0x1BCBC04 VA: 0x1BCBC04 Slot: 12
	public virtual IAsyncResult BeginInvoke(PartyServantListViewManager.ResultKind kind, int result, AsyncCallback callback, object object) { }

	// RVA: 0x1BCBCAC Offset: 0x1BCBCAC VA: 0x1BCBCAC Slot: 13
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: 
public class PartyServantListViewObject : ListViewObject // TypeDefIndex: 10482
{
	// Fields
	protected PartyServantListViewObject.State state; // 0x6C
	[CompilerGeneratedAttribute] // RVA: 0xCE1900 Offset: 0xCE1900 VA: 0xCE1900
	[DebuggerBrowsableAttribute] // RVA: 0xCE1900 Offset: 0xCE1900 VA: 0xCE1900
	private Action callbackFunc; // 0x70
	protected PartyServantListViewItemDraw itemDraw; // 0x78
	protected PartyServantListViewItemDraw.DispMode dispMode; // 0x80
	protected GameObject dragObject; // 0x88

	// Methods

	// RVA: 0x1BCBCB8 Offset: 0x1BCBCB8 VA: 0x1BCBCB8
	public void .ctor() { }

	// RVA: 0x1BCBD20 Offset: 0x1BCBD20 VA: 0x1BCBD20
	protected void add_callbackFunc(Action value) { }

	// RVA: 0x1BCBE0C Offset: 0x1BCBE0C VA: 0x1BCBE0C
	protected void remove_callbackFunc(Action value) { }

	// RVA: 0x1BCBEF8 Offset: 0x1BCBEF8 VA: 0x1BCBEF8
	protected void Awake() { }

	// RVA: 0x1BCBF6C Offset: 0x1BCBF6C VA: 0x1BCBF6C
	private void OnDestroy() { }

	// RVA: 0x1BC81F0 Offset: 0x1BC81F0 VA: 0x1BC81F0
	public PartyServantListViewItem GetItem() { }

	// RVA: 0x1BCC018 Offset: 0x1BCC018 VA: 0x1BCC018 Slot: 6
	public override void SetItem(ListViewItem item, ListViewItemSeed seed) { }

	// RVA: 0x1BCC048 Offset: 0x1BCC048 VA: 0x1BCC048 Slot: 5
	public override void SetItem(ListViewItem item) { }

	// RVA: 0x1BCC040 Offset: 0x1BCC040 VA: 0x1BCC040
	protected void InitItem() { }

	// RVA: 0x1BCC070 Offset: 0x1BCC070 VA: 0x1BCC070 Slot: 9
	public override void SetInput(bool isInput) { }

	// RVA: 0x1BCC174 Offset: 0x1BCC174 VA: 0x1BCC174 Slot: 8
	public override GameObject CreateDragObject() { }

	// RVA: 0x1BCC1FC Offset: 0x1BCC1FC VA: 0x1BCC1FC
	public void Init(PartyServantListViewObject.InitMode initMode, Action callbackFunc, float delay, Vector3 position) { }

	// RVA: 0x1BCA63C Offset: 0x1BCA63C VA: 0x1BCA63C
	public void Init(PartyServantListViewObject.InitMode initMode, Action callbackFunc, float delay) { }

	// RVA: 0x1BCA3B0 Offset: 0x1BCA3B0 VA: 0x1BCA3B0
	public void Init(PartyServantListViewObject.InitMode initMode, Action callbackFunc) { }

	// RVA: 0x1BC9D50 Offset: 0x1BC9D50 VA: 0x1BC9D50
	public void Init(PartyServantListViewObject.InitMode initMode) { }

	// RVA: 0x1BCB610 Offset: 0x1BCB610 VA: 0x1BCB610
	public void UpdateDisp() { }

	// RVA: 0x1BCC404 Offset: 0x1BCC404 VA: 0x1BCC404
	protected void SetupDisp() { }

	// RVA: 0x1BCC514 Offset: 0x1BCC514 VA: 0x1BCC514
	protected void EventMoveEnd() { }

	// RVA: 0x1BCC53C Offset: 0x1BCC53C VA: 0x1BCC53C
	public void OnClickSelect() { }

	// RVA: 0x1BCC5D8 Offset: 0x1BCC5D8 VA: 0x1BCC5D8
	public void OnLongPush() { }
}

// Namespace: 
public enum PartyServantListViewObject.InitMode // TypeDefIndex: 10483
{
	// Fields
	public int value__; // 0x0
	public const PartyServantListViewObject.InitMode INVISIBLE = 0;
	public const PartyServantListViewObject.InitMode INVALID = 1;
	public const PartyServantListViewObject.InitMode VALID = 2;
	public const PartyServantListViewObject.InitMode INPUT = 3;
	public const PartyServantListViewObject.InitMode MODIFY = 4;
	public const PartyServantListViewObject.InitMode TUTORIAL_INPUT = 5;
}

// Namespace: 
protected enum PartyServantListViewObject.State // TypeDefIndex: 10484
