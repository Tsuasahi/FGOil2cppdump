	// RVA: 0x1D0E370 Offset: 0x1D0E370 VA: 0x1D0E370
	public void .ctor(string str, bool validate) { }

	// RVA: 0x1D0E54C Offset: 0x1D0E54C VA: 0x1D0E54C
	public static DerNumericString GetInstance(object obj) { }

	// RVA: 0x1D0E678 Offset: 0x1D0E678 VA: 0x1D0E678
	public static DerNumericString GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x1D0E780 Offset: 0x1D0E780 VA: 0x1D0E780 Slot: 10
	public override string GetString() { }

	// RVA: 0x1D0E788 Offset: 0x1D0E788 VA: 0x1D0E788
	public byte[] GetOctets() { }

	// RVA: 0x1D0E794 Offset: 0x1D0E794 VA: 0x1D0E794 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x1D0E7D8 Offset: 0x1D0E7D8 VA: 0x1D0E7D8 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x1D0E468 Offset: 0x1D0E468 VA: 0x1D0E468
	public static bool IsNumericString(string str) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerObjectIdentifier : Asn1Object // TypeDefIndex: 4455
{
	// Fields
	private readonly string identifier; // 0x10
	private byte[] body; // 0x18
	private const long LONG_LIMIT = 72057594037927808;
	private static readonly DerObjectIdentifier[] cache; // 0x0

	// Properties
	public string Id { get; }

	// Methods

	// RVA: 0x1D0E8A0 Offset: 0x1D0E8A0 VA: 0x1D0E8A0
	public void .ctor(string identifier) { }

	// RVA: 0x1D0EAD8 Offset: 0x1D0EAD8 VA: 0x1D0EAD8
	internal void .ctor(DerObjectIdentifier oid, string branchID) { }

	// RVA: 0x1D0ED00 Offset: 0x1D0ED00 VA: 0x1D0ED00
	internal void .ctor(byte[] bytes) { }

	// RVA: 0x1D0F0C0 Offset: 0x1D0F0C0 VA: 0x1D0F0C0
	public static DerObjectIdentifier GetInstance(object obj) { }

	// RVA: 0x1D0F4AC Offset: 0x1D0F4AC VA: 0x1D0F4AC
	public static DerObjectIdentifier GetInstance(Asn1TaggedObject obj, bool explicitly) { }

	// RVA: 0x1D0ECF8 Offset: 0x1D0ECF8 VA: 0x1D0ECF8
	public string get_Id() { }

	// RVA: 0x1D0F530 Offset: 0x1D0F530 VA: 0x1D0F530 Slot: 9
	public virtual DerObjectIdentifier Branch(string branchID) { }

	// RVA: 0x1D0F5A0 Offset: 0x1D0F5A0 VA: 0x1D0F5A0 Slot: 10
	public virtual bool On(DerObjectIdentifier stem) { }

	// RVA: 0x1D0F6C0 Offset: 0x1D0F6C0 VA: 0x1D0F6C0
	private void WriteField(Stream outputStream, long fieldValue) { }

	// RVA: 0x1D0F7CC Offset: 0x1D0F7CC VA: 0x1D0F7CC
	private void WriteField(Stream outputStream, BigInteger fieldValue) { }

	// RVA: 0x1D0F9B4 Offset: 0x1D0F9B4 VA: 0x1D0F9B4
	private void DoOutput(MemoryStream bOut) { }

	// RVA: 0x1D0FC94 Offset: 0x1D0FC94 VA: 0x1D0FC94
	internal byte[] GetBody() { }

	// RVA: 0x1D0FD90 Offset: 0x1D0FD90 VA: 0x1D0FD90 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x1D0FDCC Offset: 0x1D0FDCC VA: 0x1D0FDCC Slot: 8
	protected override int Asn1GetHashCode() { }

	// RVA: 0x1D0FE00 Offset: 0x1D0FE00 VA: 0x1D0FE00 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x1D0FEC8 Offset: 0x1D0FEC8 VA: 0x1D0FEC8 Slot: 3
	public override string ToString() { }

	// RVA: 0x1D0EC48 Offset: 0x1D0EC48 VA: 0x1D0EC48
	private static bool IsValidBranchID(string branchID, int start) { }

	// RVA: 0x1D0E9EC Offset: 0x1D0E9EC VA: 0x1D0E9EC
	private static bool IsValidIdentifier(string identifier) { }

	// RVA: 0x1D0ED94 Offset: 0x1D0ED94 VA: 0x1D0ED94
	private static string MakeOidStringFromBytes(byte[] bytes) { }

	// RVA: 0x1D0F29C Offset: 0x1D0F29C VA: 0x1D0F29C
	internal static DerObjectIdentifier FromOctetString(byte[] enc) { }

	// RVA: 0x1D0FED0 Offset: 0x1D0FED0 VA: 0x1D0FED0
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerOctetString : Asn1OctetString // TypeDefIndex: 4456
{
	// Methods

	// RVA: 0x1D0FF34 Offset: 0x1D0FF34 VA: 0x1D0FF34
	public void .ctor(byte[] str) { }

	// RVA: 0x1D0FF3C Offset: 0x1D0FF3C VA: 0x1D0FF3C
	public void .ctor(Asn1Encodable obj) { }

	// RVA: 0x1D0FF44 Offset: 0x1D0FF44 VA: 0x1D0FF44 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x1D0FF7C Offset: 0x1D0FF7C VA: 0x1D0FF7C
	internal static void Encode(DerOutputStream derOut, byte[] bytes, int offset, int length) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerOctetStringParser : Asn1OctetStringParser, IAsn1Convertible // TypeDefIndex: 4457
{
	// Fields
	private readonly DefiniteLengthInputStream stream; // 0x10

	// Methods

	// RVA: 0x1D1005C Offset: 0x1D1005C VA: 0x1D1005C
	internal void .ctor(DefiniteLengthInputStream stream) { }

	// RVA: 0x1D10088 Offset: 0x1D10088 VA: 0x1D10088 Slot: 4
	public Stream GetOctetStream() { }

	// RVA: 0x1D10090 Offset: 0x1D10090 VA: 0x1D10090 Slot: 5
	public Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerOutputStream : FilterStream // TypeDefIndex: 4458
{
	// Methods

	// RVA: 0x1D10238 Offset: 0x1D10238 VA: 0x1D10238
	public void .ctor(Stream os) { }

	// RVA: 0x1D10240 Offset: 0x1D10240 VA: 0x1D10240
	private void WriteLength(int length) { }

	// RVA: 0x1D0B4F0 Offset: 0x1D0B4F0 VA: 0x1D0B4F0
	internal void WriteEncoded(int tag, byte[] bytes) { }

	// RVA: 0x1D102F0 Offset: 0x1D102F0 VA: 0x1D102F0
	internal void WriteEncoded(int tag, byte first, byte[] bytes) { }

	// RVA: 0x1D0FFF4 Offset: 0x1D0FFF4 VA: 0x1D0FFF4
	internal void WriteEncoded(int tag, byte[] bytes, int offset, int length) { }

	// RVA: 0x1D10388 Offset: 0x1D10388 VA: 0x1D10388
	internal void WriteTag(int flags, int tagNo) { }

	// RVA: 0x1D10518 Offset: 0x1D10518 VA: 0x1D10518
	internal void WriteEncoded(int flags, int tagNo, byte[] bytes) { }

	// RVA: 0x1D1057C Offset: 0x1D1057C VA: 0x1D1057C
	protected void WriteNull() { }

	[ObsoleteAttribute] // RVA: 0xCC73DC Offset: 0xCC73DC VA: 0xCC73DC
	// RVA: 0x1D105C0 Offset: 0x1D105C0 VA: 0x1D105C0 Slot: 29
	public virtual void WriteObject(object obj) { }

	// RVA: 0x1D1071C Offset: 0x1D1071C VA: 0x1D1071C Slot: 30
	public virtual void WriteObject(Asn1Encodable obj) { }

	// RVA: 0x1D107A4 Offset: 0x1D107A4 VA: 0x1D107A4 Slot: 31
	public virtual void WriteObject(Asn1Object obj) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerPrintableString : DerStringBase // TypeDefIndex: 4459
{
	// Fields
	private readonly string str; // 0x10

	// Methods

	// RVA: 0x1D1080C Offset: 0x1D1080C VA: 0x1D1080C
	public void .ctor(byte[] str) { }

	// RVA: 0x1D10930 Offset: 0x1D10930 VA: 0x1D10930
	public void .ctor(string str) { }

	// RVA: 0x1D10840 Offset: 0x1D10840 VA: 0x1D10840
	public void .ctor(string str, bool validate) { }

	// RVA: 0x1D10A44 Offset: 0x1D10A44 VA: 0x1D10A44
	public static DerPrintableString GetInstance(object obj) { }

	// RVA: 0x1D10B70 Offset: 0x1D10B70 VA: 0x1D10B70
	public static DerPrintableString GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x1D10C78 Offset: 0x1D10C78 VA: 0x1D10C78 Slot: 10
	public override string GetString() { }

	// RVA: 0x1D10C80 Offset: 0x1D10C80 VA: 0x1D10C80
	public byte[] GetOctets() { }

	// RVA: 0x1D10C8C Offset: 0x1D10C8C VA: 0x1D10C8C Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x1D10CD0 Offset: 0x1D10CD0 VA: 0x1D10CD0 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x1D10938 Offset: 0x1D10938 VA: 0x1D10938
	public static bool IsPrintableString(string str) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerSequence : Asn1Sequence // TypeDefIndex: 4460
{
	// Fields
	public static readonly DerSequence Empty; // 0x0

	// Methods

	// RVA: 0x1D10D98 Offset: 0x1D10D98 VA: 0x1D10D98
	public void .ctor() { }

	// RVA: 0x1D10DA4 Offset: 0x1D10DA4 VA: 0x1D10DA4
	public void .ctor(Asn1Encodable obj) { }

	// RVA: 0x1D10DDC Offset: 0x1D10DDC VA: 0x1D10DDC
	public void .ctor(Asn1Encodable[] v) { }

	// RVA: 0x1D10E70 Offset: 0x1D10E70 VA: 0x1D10E70
	public void .ctor(Asn1EncodableVector v) { }

	// RVA: 0x1D11160 Offset: 0x1D11160 VA: 0x1D11160
	public static DerSequence FromVector(Asn1EncodableVector v) { }

	// RVA: 0x1D1120C Offset: 0x1D1120C VA: 0x1D1120C Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x1D11590 Offset: 0x1D11590 VA: 0x1D11590
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerSequenceParser : Asn1SequenceParser, IAsn1Convertible // TypeDefIndex: 4461
{
	// Fields
	private readonly Asn1StreamParser _parser; // 0x10

	// Methods

	// RVA: 0x1D115F8 Offset: 0x1D115F8 VA: 0x1D115F8
	internal void .ctor(Asn1StreamParser parser) { }

	// RVA: 0x1D11624 Offset: 0x1D11624 VA: 0x1D11624 Slot: 4
	public IAsn1Convertible ReadObject() { }

	// RVA: 0x1D11658 Offset: 0x1D11658 VA: 0x1D11658 Slot: 5
	public Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerSet : Asn1Set // TypeDefIndex: 4462
{
	// Fields
	public static readonly DerSet Empty; // 0x0

	// Methods

	// RVA: 0x1D116DC Offset: 0x1D116DC VA: 0x1D116DC
	public void .ctor() { }

	// RVA: 0x1D116E8 Offset: 0x1D116E8 VA: 0x1D116E8
	public void .ctor(Asn1Encodable obj) { }

	// RVA: 0x1D11720 Offset: 0x1D11720 VA: 0x1D11720
	public void .ctor(Asn1Encodable[] v) { }

	// RVA: 0x1D117BC Offset: 0x1D117BC VA: 0x1D117BC
	public void .ctor(Asn1EncodableVector v) { }

	// RVA: 0x1D117C4 Offset: 0x1D117C4 VA: 0x1D117C4
	internal void .ctor(Asn1EncodableVector v, bool needsSorting) { }

	// RVA: 0x1D11AD0 Offset: 0x1D11AD0 VA: 0x1D11AD0
	public static DerSet FromVector(Asn1EncodableVector v) { }

	// RVA: 0x1D11B80 Offset: 0x1D11B80 VA: 0x1D11B80
	internal static DerSet FromVector(Asn1EncodableVector v, bool needsSorting) { }

	// RVA: 0x1D11C3C Offset: 0x1D11C3C VA: 0x1D11C3C Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x1D11FC0 Offset: 0x1D11FC0 VA: 0x1D11FC0
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerSetGenerator : DerGenerator // TypeDefIndex: 4463
{
	// Fields
	private readonly MemoryStream _bOut; // 0x20

	// Methods

	// RVA: 0x1D12028 Offset: 0x1D12028 VA: 0x1D12028
	public void .ctor(Stream outStream) { }

	// RVA: 0x1D120A0 Offset: 0x1D120A0 VA: 0x1D120A0
	public void .ctor(Stream outStream, int tagNo, bool isExplicit) { }

	// RVA: 0x1D12140 Offset: 0x1D12140 VA: 0x1D12140 Slot: 4
	public override void AddObject(Asn1Encodable obj) { }

	// RVA: 0x1D121D0 Offset: 0x1D121D0 VA: 0x1D121D0 Slot: 5
	public override Stream GetRawOutputStream() { }

	// RVA: 0x1D121D8 Offset: 0x1D121D8 VA: 0x1D121D8 Slot: 6
	public override void Close() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerSetParser : Asn1SetParser, IAsn1Convertible // TypeDefIndex: 4464
{
	// Fields
	private readonly Asn1StreamParser _parser; // 0x10

	// Methods

	// RVA: 0x1D12224 Offset: 0x1D12224 VA: 0x1D12224
	internal void .ctor(Asn1StreamParser parser) { }

	// RVA: 0x1D12250 Offset: 0x1D12250 VA: 0x1D12250 Slot: 4
	public IAsn1Convertible ReadObject() { }

	// RVA: 0x1D12284 Offset: 0x1D12284 VA: 0x1D12284 Slot: 5
	public Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1
public abstract class DerStringBase : Asn1Object, IAsn1String // TypeDefIndex: 4465
{
	// Methods

	// RVA: 0x1D0B178 Offset: 0x1D0B178 VA: 0x1D0B178
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 10
	public abstract string GetString();

	// RVA: 0x1D1230C Offset: 0x1D1230C VA: 0x1D1230C Slot: 3
	public override string ToString() { }

	// RVA: 0x1D12318 Offset: 0x1D12318 VA: 0x1D12318 Slot: 8
	protected override int Asn1GetHashCode() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerT61String : DerStringBase // TypeDefIndex: 4466
{
	// Fields
	private readonly string str; // 0x10

	// Methods

	// RVA: 0x1D12354 Offset: 0x1D12354 VA: 0x1D12354
	public void .ctor(byte[] str) { }

	// RVA: 0x1D12384 Offset: 0x1D12384 VA: 0x1D12384
	public void .ctor(string str) { }

	// RVA: 0x1D12428 Offset: 0x1D12428 VA: 0x1D12428
	public static DerT61String GetInstance(object obj) { }

	// RVA: 0x1D12554 Offset: 0x1D12554 VA: 0x1D12554
	public static DerT61String GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x1D12658 Offset: 0x1D12658 VA: 0x1D12658 Slot: 10
	public override string GetString() { }

	// RVA: 0x1D12660 Offset: 0x1D12660 VA: 0x1D12660 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x1D126A4 Offset: 0x1D126A4 VA: 0x1D126A4
	public byte[] GetOctets() { }

	// RVA: 0x1D126B0 Offset: 0x1D126B0 VA: 0x1D126B0 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerTaggedObject : Asn1TaggedObject // TypeDefIndex: 4467
{
	// Methods

	// RVA: 0x1D12778 Offset: 0x1D12778 VA: 0x1D12778
	public void .ctor(int tagNo, Asn1Encodable obj) { }

	// RVA: 0x1D12780 Offset: 0x1D12780 VA: 0x1D12780
	public void .ctor(bool explicitly, int tagNo, Asn1Encodable obj) { }

	// RVA: 0x1D1278C Offset: 0x1D1278C VA: 0x1D1278C
	public void .ctor(int tagNo) { }

	// RVA: 0x1D12814 Offset: 0x1D12814 VA: 0x1D12814 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerUniversalString : DerStringBase // TypeDefIndex: 4468
{
	// Fields
	private static readonly char[] table; // 0x0
	private readonly byte[] str; // 0x10

	// Methods

	// RVA: 0x1D12994 Offset: 0x1D12994 VA: 0x1D12994
	public void .ctor(byte[] str) { }

	// RVA: 0x1D12A38 Offset: 0x1D12A38 VA: 0x1D12A38
	public static DerUniversalString GetInstance(object obj) { }

	// RVA: 0x1D12B64 Offset: 0x1D12B64 VA: 0x1D12B64
	public static DerUniversalString GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x1D12C84 Offset: 0x1D12C84 VA: 0x1D12C84 Slot: 10
	public override string GetString() { }

	// RVA: 0x1D12E70 Offset: 0x1D12E70 VA: 0x1D12E70
	public byte[] GetOctets() { }

	// RVA: 0x1D12F48 Offset: 0x1D12F48 VA: 0x1D12F48 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x1D12F80 Offset: 0x1D12F80 VA: 0x1D12F80 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x1D13038 Offset: 0x1D13038 VA: 0x1D13038
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerUtcTime : Asn1Object // TypeDefIndex: 4469
{
	// Fields
	private readonly string time; // 0x10

	// Properties
	public string TimeString { get; }
	[ObsoleteAttribute] // RVA: 0xCDE7F8 Offset: 0xCDE7F8 VA: 0xCDE7F8
	public string AdjustedTime { get; }
	public string AdjustedTimeString { get; }

	// Methods

	// RVA: 0x1D130B4 Offset: 0x1D130B4 VA: 0x1D130B4
	public void .ctor(string time) { }

	// RVA: 0x1D132B8 Offset: 0x1D132B8 VA: 0x1D132B8
	public void .ctor(DateTime time) { }

	// RVA: 0x1D13398 Offset: 0x1D13398 VA: 0x1D13398
	internal void .ctor(byte[] bytes) { }

	// RVA: 0x1D133D0 Offset: 0x1D133D0 VA: 0x1D133D0
	public static DerUtcTime GetInstance(object obj) { }

	// RVA: 0x1D134FC Offset: 0x1D134FC VA: 0x1D134FC
	public static DerUtcTime GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x1D13260 Offset: 0x1D13260 VA: 0x1D13260
	public DateTime ToDateTime() { }

	// RVA: 0x1D13DA0 Offset: 0x1D13DA0 VA: 0x1D13DA0
	public DateTime ToAdjustedDateTime() { }

	// RVA: 0x1D13CD4 Offset: 0x1D13CD4 VA: 0x1D13CD4
	private DateTime ParseDateString(string dateStr, string formatStr) { }

	// RVA: 0x1D136E8 Offset: 0x1D136E8 VA: 0x1D136E8
	public string get_TimeString() { }

	// RVA: 0x1D13EA8 Offset: 0x1D13EA8 VA: 0x1D13EA8
	public string get_AdjustedTime() { }

	// RVA: 0x1D13DF8 Offset: 0x1D13DF8 VA: 0x1D13DF8
	public string get_AdjustedTimeString() { }

	// RVA: 0x1D13EAC Offset: 0x1D13EAC VA: 0x1D13EAC
	private byte[] GetOctets() { }

	// RVA: 0x1D13EB8 Offset: 0x1D13EB8 VA: 0x1D13EB8 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x1D13EFC Offset: 0x1D13EFC VA: 0x1D13EFC Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x1D13FC4 Offset: 0x1D13FC4 VA: 0x1D13FC4 Slot: 8
	protected override int Asn1GetHashCode() { }

	// RVA: 0x1D13FF8 Offset: 0x1D13FF8 VA: 0x1D13FF8 Slot: 3
	public override string ToString() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerUtf8String : DerStringBase // TypeDefIndex: 4470
{
	// Fields
	private readonly string str; // 0x10

	// Methods

	// RVA: 0x1D14000 Offset: 0x1D14000 VA: 0x1D14000
	public void .ctor(byte[] str) { }

	// RVA: 0x1D140C0 Offset: 0x1D140C0 VA: 0x1D140C0
	public void .ctor(string str) { }

	// RVA: 0x1D14164 Offset: 0x1D14164 VA: 0x1D14164
	public static DerUtf8String GetInstance(object obj) { }

	// RVA: 0x1D14290 Offset: 0x1D14290 VA: 0x1D14290
	public static DerUtf8String GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x1D14384 Offset: 0x1D14384 VA: 0x1D14384 Slot: 10
	public override string GetString() { }

	// RVA: 0x1D1438C Offset: 0x1D1438C VA: 0x1D1438C Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x1D14454 Offset: 0x1D14454 VA: 0x1D14454 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerVideotexString : DerStringBase // TypeDefIndex: 4471
{
	// Fields
	private readonly byte[] mString; // 0x10

	// Methods

	// RVA: 0x1D14508 Offset: 0x1D14508 VA: 0x1D14508
	public void .ctor(byte[] encoding) { }

	// RVA: 0x1D14540 Offset: 0x1D14540 VA: 0x1D14540
	public static DerVideotexString GetInstance(object obj) { }

	// RVA: 0x1D1484C Offset: 0x1D1484C VA: 0x1D1484C
	public static DerVideotexString GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x1D14A38 Offset: 0x1D14A38 VA: 0x1D14A38 Slot: 10
	public override string GetString() { }

	// RVA: 0x1D14A44 Offset: 0x1D14A44 VA: 0x1D14A44
	public byte[] GetOctets() { }

	// RVA: 0x1D14A50 Offset: 0x1D14A50 VA: 0x1D14A50 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x1D14A88 Offset: 0x1D14A88 VA: 0x1D14A88 Slot: 8
	protected override int Asn1GetHashCode() { }

	// RVA: 0x1D14A94 Offset: 0x1D14A94 VA: 0x1D14A94 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerVisibleString : DerStringBase // TypeDefIndex: 4472
{
	// Fields
	private readonly string str; // 0x10

	// Methods

	// RVA: 0x1D14B4C Offset: 0x1D14B4C VA: 0x1D14B4C
	public void .ctor(byte[] str) { }

	// RVA: 0x1D14B7C Offset: 0x1D14B7C VA: 0x1D14B7C
	public void .ctor(string str) { }

	// RVA: 0x1D14C20 Offset: 0x1D14C20 VA: 0x1D14C20
	public static DerVisibleString GetInstance(object obj) { }

	// RVA: 0x1D14DF4 Offset: 0x1D14DF4 VA: 0x1D14DF4
	public static DerVisibleString GetInstance(Asn1TaggedObject obj, bool explicitly) { }

	// RVA: 0x1D14E24 Offset: 0x1D14E24 VA: 0x1D14E24 Slot: 10
	public override string GetString() { }

	// RVA: 0x1D14E2C Offset: 0x1D14E2C VA: 0x1D14E2C
	public byte[] GetOctets() { }

	// RVA: 0x1D14E38 Offset: 0x1D14E38 VA: 0x1D14E38 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x1D14E7C Offset: 0x1D14E7C VA: 0x1D14E7C Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x1D14F44 Offset: 0x1D14F44 VA: 0x1D14F44 Slot: 8
	protected override int Asn1GetHashCode() { }
}

// Namespace: Org.BouncyCastle.Asn1.Iana
public abstract class IanaObjectIdentifiers // TypeDefIndex: 4473
{
	// Fields
	public static readonly DerObjectIdentifier IsakmpOakley; // 0x0
	public static readonly DerObjectIdentifier HmacMD5; // 0x8
	public static readonly DerObjectIdentifier HmacSha1; // 0x10
	public static readonly DerObjectIdentifier HmacTiger; // 0x18
	public static readonly DerObjectIdentifier HmacRipeMD160; // 0x20

	// Methods

	// RVA: 0x1D14F78 Offset: 0x1D14F78 VA: 0x1D14F78
	protected void .ctor() { }

	// RVA: 0x1D14F80 Offset: 0x1D14F80 VA: 0x1D14F80
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1
public interface IAsn1ApplicationSpecificParser : IAsn1Convertible // TypeDefIndex: 4474
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract IAsn1Convertible ReadObject();
}

// Namespace: Org.BouncyCastle.Asn1
public interface IAsn1Choice // TypeDefIndex: 4475
{}

// Namespace: Org.BouncyCastle.Asn1
public interface IAsn1Convertible // TypeDefIndex: 4476
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract Asn1Object ToAsn1Object();
}

// Namespace: Org.BouncyCastle.Asn1
public interface IAsn1String // TypeDefIndex: 4477
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract string GetString();
}

// Namespace: Org.BouncyCastle.Asn1
internal class IndefiniteLengthInputStream : LimitedInputStream // TypeDefIndex: 4478
{
	// Fields
	private int _lookAhead; // 0x24
	private bool _eofOn00; // 0x28

	// Methods

	// RVA: 0x1D15134 Offset: 0x1D15134 VA: 0x1D15134
	internal void .ctor(Stream inStream, int limit) { }

	// RVA: 0x1D1532C Offset: 0x1D1532C VA: 0x1D1532C
	internal void SetEofOn00(bool eofOn00) { }

	// RVA: 0x1D15264 Offset: 0x1D15264 VA: 0x1D15264
	private bool CheckForEof() { }

	// RVA: 0x1D15340 Offset: 0x1D15340 VA: 0x1D15340 Slot: 19
	public override int Read(byte[] buffer, int offset, int count) { }

	// RVA: 0x1D154A0 Offset: 0x1D154A0 VA: 0x1D154A0 Slot: 20
	public override int ReadByte() { }

	// RVA: 0x1D151C4 Offset: 0x1D151C4 VA: 0x1D151C4
	private int RequireByte() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class LazyAsn1InputStream : Asn1InputStream // TypeDefIndex: 4479
{
	// Methods

	// RVA: 0x1D154EC Offset: 0x1D154EC VA: 0x1D154EC
	public void .ctor(byte[] input) { }

	// RVA: 0x1D154F4 Offset: 0x1D154F4 VA: 0x1D154F4
	public void .ctor(Stream inputStream) { }

	// RVA: 0x1D154FC Offset: 0x1D154FC VA: 0x1D154FC Slot: 30
	internal override DerSequence CreateDerSequence(DefiniteLengthInputStream dIn) { }

	// RVA: 0x1D155FC Offset: 0x1D155FC VA: 0x1D155FC Slot: 31
	internal override DerSet CreateDerSet(DefiniteLengthInputStream dIn) { }
}

// Namespace: Org.BouncyCastle.Asn1
[DefaultMemberAttribute] // RVA: 0xC24D00 Offset: 0xC24D00 VA: 0xC24D00
internal class LazyDerSequence : DerSequence // TypeDefIndex: 4480
{
	// Fields
	private byte[] encoded; // 0x18

	// Properties
	public override Asn1Encodable Item { get; }
	public override int Count { get; }

	// Methods

	// RVA: 0x1D1557C Offset: 0x1D1557C VA: 0x1D1557C
	internal void .ctor(byte[] encoded) { }

	// RVA: 0x1D156FC Offset: 0x1D156FC VA: 0x1D156FC
	private void Parse() { }

	// RVA: 0x1D1581C Offset: 0x1D1581C VA: 0x1D1581C Slot: 12
	public override Asn1Encodable get_Item(int index) { }

	// RVA: 0x1D1584C Offset: 0x1D1584C VA: 0x1D1584C Slot: 10
	public override IEnumerator GetEnumerator() { }

	// RVA: 0x1D15874 Offset: 0x1D15874 VA: 0x1D15874 Slot: 13
	public override int get_Count() { }

	// RVA: 0x1D1589C Offset: 0x1D1589C VA: 0x1D1589C Slot: 6
	internal override void Encode(DerOutputStream derOut) { }
}

// Namespace: Org.BouncyCastle.Asn1
[DefaultMemberAttribute] // RVA: 0xC24D38 Offset: 0xC24D38 VA: 0xC24D38
internal class LazyDerSet : DerSet // TypeDefIndex: 4481
{
	// Fields
	private byte[] encoded; // 0x18

	// Properties
	public override Asn1Encodable Item { get; }
	public override int Count { get; }

	// Methods

	// RVA: 0x1D1567C Offset: 0x1D1567C VA: 0x1D1567C
	internal void .ctor(byte[] encoded) { }

	// RVA: 0x1D15960 Offset: 0x1D15960 VA: 0x1D15960
	private void Parse() { }

	// RVA: 0x1D15A80 Offset: 0x1D15A80 VA: 0x1D15A80 Slot: 11
	public override Asn1Encodable get_Item(int index) { }

	// RVA: 0x1D15AB0 Offset: 0x1D15AB0 VA: 0x1D15AB0 Slot: 10
	public override IEnumerator GetEnumerator() { }

	// RVA: 0x1D15AD8 Offset: 0x1D15AD8 VA: 0x1D15AD8 Slot: 12
	public override int get_Count() { }

	// RVA: 0x1D15B00 Offset: 0x1D15B00 VA: 0x1D15B00 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }
}

// Namespace: Org.BouncyCastle.Asn1
internal abstract class LimitedInputStream : BaseInputStream // TypeDefIndex: 4482
{
	// Fields
	protected readonly Stream _in; // 0x18
	private int _limit; // 0x20

	// Methods

	// RVA: 0x1D15188 Offset: 0x1D15188 VA: 0x1D15188
	internal void .ctor(Stream inStream, int limit) { }

	// RVA: 0x1D15BC4 Offset: 0x1D15BC4 VA: 0x1D15BC4 Slot: 29
	internal virtual int GetRemaining() { }

	// RVA: 0x1D15BCC Offset: 0x1D15BCC VA: 0x1D15BCC Slot: 30
	protected virtual void SetParentEofDetect(bool on) { }
}

// Namespace: Org.BouncyCastle.Asn1.Misc
public abstract class MiscObjectIdentifiers // TypeDefIndex: 4483
{
	// Fields
	public static readonly DerObjectIdentifier Netscape; // 0x0
	public static readonly DerObjectIdentifier NetscapeCertType; // 0x8
	public static readonly DerObjectIdentifier NetscapeBaseUrl; // 0x10
	public static readonly DerObjectIdentifier NetscapeRevocationUrl; // 0x18
	public static readonly DerObjectIdentifier NetscapeCARevocationUrl; // 0x20
	public static readonly DerObjectIdentifier NetscapeRenewalUrl; // 0x28
	public static readonly DerObjectIdentifier NetscapeCAPolicyUrl; // 0x30
	public static readonly DerObjectIdentifier NetscapeSslServerName; // 0x38
	public static readonly DerObjectIdentifier NetscapeCertComment; // 0x40
	public static readonly DerObjectIdentifier Verisign; // 0x48
	public static readonly DerObjectIdentifier VerisignCzagExtension; // 0x50
	public static readonly DerObjectIdentifier VerisignPrivate_6_9; // 0x58
	public static readonly DerObjectIdentifier VerisignOnSiteJurisdictionHash; // 0x60
	public static readonly DerObjectIdentifier VerisignBitString_6_13; // 0x68
	public static readonly DerObjectIdentifier VerisignDnbDunsNumber; // 0x70
	public static readonly DerObjectIdentifier VerisignIssStrongCrypto; // 0x78
	public static readonly string Novell; // 0x80
	public static readonly DerObjectIdentifier NovellSecurityAttribs; // 0x88
	public static readonly string Entrust; // 0x90
	public static readonly DerObjectIdentifier EntrustVersionExtension; // 0x98
	public static readonly DerObjectIdentifier as_sys_sec_alg_ideaCBC; // 0xA0
	public static readonly DerObjectIdentifier cryptlib; // 0xA8
	public static readonly DerObjectIdentifier cryptlib_algorithm; // 0xB0
	public static readonly DerObjectIdentifier cryptlib_algorithm_blowfish_ECB; // 0xB8
	public static readonly DerObjectIdentifier cryptlib_algorithm_blowfish_CBC; // 0xC0
	public static readonly DerObjectIdentifier cryptlib_algorithm_blowfish_CFB; // 0xC8
	public static readonly DerObjectIdentifier cryptlib_algorithm_blowfish_OFB; // 0xD0
	public static readonly DerObjectIdentifier blake2; // 0xD8
	public static readonly DerObjectIdentifier id_blake2b160; // 0xE0
	public static readonly DerObjectIdentifier id_blake2b256; // 0xE8
	public static readonly DerObjectIdentifier id_blake2b384; // 0xF0
	public static readonly DerObjectIdentifier id_blake2b512; // 0xF8

	// Methods

	// RVA: 0x1D15C64 Offset: 0x1D15C64 VA: 0x1D15C64
	protected void .ctor() { }

	// RVA: 0x1D15C6C Offset: 0x1D15C6C VA: 0x1D15C6C
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1.Misc
public class NetscapeCertType : DerBitString // TypeDefIndex: 4484
{
	// Fields
	public const int SslClient = 128;
	public const int SslServer = 64;
	public const int Smime = 32;
	public const int ObjectSigning = 16;
	public const int Reserved = 8;
	public const int SslCA = 4;
	public const int SmimeCA = 2;
	public const int ObjectSigningCA = 1;

	// Methods

	// RVA: 0x1D163C4 Offset: 0x1D163C4 VA: 0x1D163C4
	public void .ctor(int usage) { }

	// RVA: 0x1D1643C Offset: 0x1D1643C VA: 0x1D1643C
	public void .ctor(DerBitString usage) { }

	// RVA: 0x1D164F4 Offset: 0x1D164F4 VA: 0x1D164F4 Slot: 3
	public override string ToString() { }
}

// Namespace: Org.BouncyCastle.Asn1.Misc
public class NetscapeRevocationUrl : DerIA5String // TypeDefIndex: 4485
{
	// Methods

	// RVA: 0x1D165D4 Offset: 0x1D165D4 VA: 0x1D165D4
	public void .ctor(DerIA5String str) { }

	// RVA: 0x1D1661C Offset: 0x1D1661C VA: 0x1D1661C Slot: 3
	public override string ToString() { }
}

// Namespace: Org.BouncyCastle.Asn1.Misc
public class VerisignCzagExtension : DerIA5String // TypeDefIndex: 4486
{
	// Methods

	// RVA: 0x1D166A8 Offset: 0x1D166A8 VA: 0x1D166A8
	public void .ctor(DerIA5String str) { }

	// RVA: 0x1D166F0 Offset: 0x1D166F0 VA: 0x1D166F0 Slot: 3
	public override string ToString() { }
}

// Namespace: Org.BouncyCastle.Asn1.Nist
public sealed class NistNamedCurves // TypeDefIndex: 4487
{
	// Fields
	private static readonly IDictionary objIds; // 0x0
	private static readonly IDictionary names; // 0x8

	// Properties
	public static IEnumerable Names { get; }

	// Methods

	// RVA: 0x1D1677C Offset: 0x1D1677C VA: 0x1D1677C
	private void .ctor() { }

	// RVA: 0x1D16784 Offset: 0x1D16784 VA: 0x1D16784
	private static void .cctor() { }

	// RVA: 0x1D169D0 Offset: 0x1D169D0 VA: 0x1D169D0
	private static void DefineCurveAlias(string name, DerObjectIdentifier oid) { }

	// RVA: 0x1D16B84 Offset: 0x1D16B84 VA: 0x1D16B84
	public static X9ECParameters GetByName(string name) { }

	// RVA: 0x1D16DC0 Offset: 0x1D16DC0 VA: 0x1D16DC0
	public static X9ECParameters GetByOid(DerObjectIdentifier oid) { }

	// RVA: 0x1D16C1C Offset: 0x1D16C1C VA: 0x1D16C1C
	public static DerObjectIdentifier GetOid(string name) { }

	// RVA: 0x1D16FA8 Offset: 0x1D16FA8 VA: 0x1D16FA8
	public static string GetName(DerObjectIdentifier oid) { }

	// RVA: 0x1D170FC Offset: 0x1D170FC VA: 0x1D170FC
	public static IEnumerable get_Names() { }
}

// Namespace: Org.BouncyCastle.Asn1.Nist
public sealed class NistObjectIdentifiers // TypeDefIndex: 4488
{
	// Fields
	public static readonly DerObjectIdentifier NistAlgorithm; // 0x0
	public static readonly DerObjectIdentifier HashAlgs; // 0x8
	public static readonly DerObjectIdentifier IdSha256; // 0x10
	public static readonly DerObjectIdentifier IdSha384; // 0x18
	public static readonly DerObjectIdentifier IdSha512; // 0x20
	public static readonly DerObjectIdentifier IdSha224; // 0x28
	public static readonly DerObjectIdentifier IdSha512_224; // 0x30
	public static readonly DerObjectIdentifier IdSha512_256; // 0x38
	public static readonly DerObjectIdentifier IdSha3_224; // 0x40
	public static readonly DerObjectIdentifier IdSha3_256; // 0x48
	public static readonly DerObjectIdentifier IdSha3_384; // 0x50
	public static readonly DerObjectIdentifier IdSha3_512; // 0x58
	public static readonly DerObjectIdentifier IdShake128; // 0x60
	public static readonly DerObjectIdentifier IdShake256; // 0x68
	public static readonly DerObjectIdentifier Aes; // 0x70
	public static readonly DerObjectIdentifier IdAes128Ecb; // 0x78
	public static readonly DerObjectIdentifier IdAes128Cbc; // 0x80
	public static readonly DerObjectIdentifier IdAes128Ofb; // 0x88
	public static readonly DerObjectIdentifier IdAes128Cfb; // 0x90
	public static readonly DerObjectIdentifier IdAes128Wrap; // 0x98
	public static readonly DerObjectIdentifier IdAes128Gcm; // 0xA0
	public static readonly DerObjectIdentifier IdAes128Ccm; // 0xA8
	public static readonly DerObjectIdentifier IdAes192Ecb; // 0xB0
	public static readonly DerObjectIdentifier IdAes192Cbc; // 0xB8
	public static readonly DerObjectIdentifier IdAes192Ofb; // 0xC0
	public static readonly DerObjectIdentifier IdAes192Cfb; // 0xC8
	public static readonly DerObjectIdentifier IdAes192Wrap; // 0xD0
	public static readonly DerObjectIdentifier IdAes192Gcm; // 0xD8
	public static readonly DerObjectIdentifier IdAes192Ccm; // 0xE0
	public static readonly DerObjectIdentifier IdAes256Ecb; // 0xE8
	public static readonly DerObjectIdentifier IdAes256Cbc; // 0xF0
	public static readonly DerObjectIdentifier IdAes256Ofb; // 0xF8
	public static readonly DerObjectIdentifier IdAes256Cfb; // 0x100
	public static readonly DerObjectIdentifier IdAes256Wrap; // 0x108
	public static readonly DerObjectIdentifier IdAes256Gcm; // 0x110
	public static readonly DerObjectIdentifier IdAes256Ccm; // 0x118
	public static readonly DerObjectIdentifier IdDsaWithSha2; // 0x120
	public static readonly DerObjectIdentifier DsaWithSha224; // 0x128
	public static readonly DerObjectIdentifier DsaWithSha256; // 0x130
	public static readonly DerObjectIdentifier DsaWithSha384; // 0x138
	public static readonly DerObjectIdentifier DsaWithSha512; // 0x140

	// Methods

	// RVA: 0x1D17208 Offset: 0x1D17208 VA: 0x1D17208
	private void .ctor() { }

	// RVA: 0x1D17210 Offset: 0x1D17210 VA: 0x1D17210
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1.Ocsp
public class OcspResponse : Asn1Encodable // TypeDefIndex: 4489
{
	// Fields
	private readonly OcspResponseStatus responseStatus; // 0x10
	private readonly ResponseBytes responseBytes; // 0x18

	// Properties
	public OcspResponseStatus ResponseStatus { get; }
	public ResponseBytes ResponseBytes { get; }

	// Methods

	// RVA: 0x1D17CC4 Offset: 0x1D17CC4 VA: 0x1D17CC4
	public void .ctor(OcspResponseStatus responseStatus, ResponseBytes responseBytes) { }

	// RVA: 0x1D17D6C Offset: 0x1D17D6C VA: 0x1D17D6C
	private void .ctor(Asn1Sequence seq) { }

	// RVA: 0x1D17FCC Offset: 0x1D17FCC VA: 0x1D17FCC
	public static OcspResponse GetInstance(Asn1TaggedObject obj, bool explicitly) { }

	// RVA: 0x1D17FE8 Offset: 0x1D17FE8 VA: 0x1D17FE8
	public static OcspResponse GetInstance(object obj) { }

