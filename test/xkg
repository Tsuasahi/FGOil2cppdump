public class DerOctetStringParser : Asn1OctetStringParser, IAsn1Convertible // TypeDefIndex: 4457
{
	// Fields
	private readonly DefiniteLengthInputStream stream; // 0x10

	// Methods

	// RVA: 0x229A3B0 Offset: 0x229A3B0 VA: 0x229A3B0
	internal void .ctor(DefiniteLengthInputStream stream) { }

	// RVA: 0x229A3DC Offset: 0x229A3DC VA: 0x229A3DC Slot: 4
	public Stream GetOctetStream() { }

	// RVA: 0x229A3E4 Offset: 0x229A3E4 VA: 0x229A3E4 Slot: 5
	public Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerOutputStream : FilterStream // TypeDefIndex: 4458
{
	// Methods

	// RVA: 0x229A58C Offset: 0x229A58C VA: 0x229A58C
	public void .ctor(Stream os) { }

	// RVA: 0x229A594 Offset: 0x229A594 VA: 0x229A594
	private void WriteLength(int length) { }

	// RVA: 0x2297788 Offset: 0x2297788 VA: 0x2297788
	internal void WriteEncoded(int tag, byte[] bytes) { }

	// RVA: 0x229A644 Offset: 0x229A644 VA: 0x229A644
	internal void WriteEncoded(int tag, byte first, byte[] bytes) { }

	// RVA: 0x229A348 Offset: 0x229A348 VA: 0x229A348
	internal void WriteEncoded(int tag, byte[] bytes, int offset, int length) { }

	// RVA: 0x229A6DC Offset: 0x229A6DC VA: 0x229A6DC
	internal void WriteTag(int flags, int tagNo) { }

	// RVA: 0x229A86C Offset: 0x229A86C VA: 0x229A86C
	internal void WriteEncoded(int flags, int tagNo, byte[] bytes) { }

	// RVA: 0x229A8D0 Offset: 0x229A8D0 VA: 0x229A8D0
	protected void WriteNull() { }

	[ObsoleteAttribute] // RVA: 0xD34AB0 Offset: 0xD34AB0 VA: 0xD34AB0
	// RVA: 0x229A914 Offset: 0x229A914 VA: 0x229A914 Slot: 29
	public virtual void WriteObject(object obj) { }

	// RVA: 0x229AA70 Offset: 0x229AA70 VA: 0x229AA70 Slot: 30
	public virtual void WriteObject(Asn1Encodable obj) { }

	// RVA: 0x229AAF8 Offset: 0x229AAF8 VA: 0x229AAF8 Slot: 31
	public virtual void WriteObject(Asn1Object obj) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerPrintableString : DerStringBase // TypeDefIndex: 4459
{
	// Fields
	private readonly string str; // 0x10

	// Methods

	// RVA: 0x229AB60 Offset: 0x229AB60 VA: 0x229AB60
	public void .ctor(byte[] str) { }

	// RVA: 0x229AC84 Offset: 0x229AC84 VA: 0x229AC84
	public void .ctor(string str) { }

	// RVA: 0x229AB94 Offset: 0x229AB94 VA: 0x229AB94
	public void .ctor(string str, bool validate) { }

	// RVA: 0x229AD98 Offset: 0x229AD98 VA: 0x229AD98
	public static DerPrintableString GetInstance(object obj) { }

	// RVA: 0x229AEC4 Offset: 0x229AEC4 VA: 0x229AEC4
	public static DerPrintableString GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x229AFCC Offset: 0x229AFCC VA: 0x229AFCC Slot: 10
	public override string GetString() { }

	// RVA: 0x229AFD4 Offset: 0x229AFD4 VA: 0x229AFD4
	public byte[] GetOctets() { }

	// RVA: 0x229AFE0 Offset: 0x229AFE0 VA: 0x229AFE0 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x229B024 Offset: 0x229B024 VA: 0x229B024 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x229AC8C Offset: 0x229AC8C VA: 0x229AC8C
	public static bool IsPrintableString(string str) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerSequence : Asn1Sequence // TypeDefIndex: 4460
{
	// Fields
	public static readonly DerSequence Empty; // 0x0

	// Methods

	// RVA: 0x229B0EC Offset: 0x229B0EC VA: 0x229B0EC
	public void .ctor() { }

	// RVA: 0x229B0F8 Offset: 0x229B0F8 VA: 0x229B0F8
	public void .ctor(Asn1Encodable obj) { }

	// RVA: 0x229B130 Offset: 0x229B130 VA: 0x229B130
	public void .ctor(Asn1Encodable[] v) { }

	// RVA: 0x229B1C4 Offset: 0x229B1C4 VA: 0x229B1C4
	public void .ctor(Asn1EncodableVector v) { }

	// RVA: 0x229B4B4 Offset: 0x229B4B4 VA: 0x229B4B4
	public static DerSequence FromVector(Asn1EncodableVector v) { }

	// RVA: 0x229B560 Offset: 0x229B560 VA: 0x229B560 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x229B8E4 Offset: 0x229B8E4 VA: 0x229B8E4
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerSequenceParser : Asn1SequenceParser, IAsn1Convertible // TypeDefIndex: 4461
{
	// Fields
	private readonly Asn1StreamParser _parser; // 0x10

	// Methods

	// RVA: 0x229B94C Offset: 0x229B94C VA: 0x229B94C
	internal void .ctor(Asn1StreamParser parser) { }

	// RVA: 0x229B978 Offset: 0x229B978 VA: 0x229B978 Slot: 4
	public IAsn1Convertible ReadObject() { }

	// RVA: 0x229B9AC Offset: 0x229B9AC VA: 0x229B9AC Slot: 5
	public Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerSet : Asn1Set // TypeDefIndex: 4462
{
	// Fields
	public static readonly DerSet Empty; // 0x0

	// Methods

	// RVA: 0x229BA30 Offset: 0x229BA30 VA: 0x229BA30
	public void .ctor() { }

	// RVA: 0x229BA3C Offset: 0x229BA3C VA: 0x229BA3C
	public void .ctor(Asn1Encodable obj) { }

	// RVA: 0x229BA74 Offset: 0x229BA74 VA: 0x229BA74
	public void .ctor(Asn1Encodable[] v) { }

	// RVA: 0x229BB10 Offset: 0x229BB10 VA: 0x229BB10
	public void .ctor(Asn1EncodableVector v) { }

	// RVA: 0x229BB18 Offset: 0x229BB18 VA: 0x229BB18
	internal void .ctor(Asn1EncodableVector v, bool needsSorting) { }

	// RVA: 0x229BE24 Offset: 0x229BE24 VA: 0x229BE24
	public static DerSet FromVector(Asn1EncodableVector v) { }

	// RVA: 0x229BED4 Offset: 0x229BED4 VA: 0x229BED4
	internal static DerSet FromVector(Asn1EncodableVector v, bool needsSorting) { }

	// RVA: 0x229BF90 Offset: 0x229BF90 VA: 0x229BF90 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x229C314 Offset: 0x229C314 VA: 0x229C314
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerSetGenerator : DerGenerator // TypeDefIndex: 4463
{
	// Fields
	private readonly MemoryStream _bOut; // 0x20

	// Methods

	// RVA: 0x229C37C Offset: 0x229C37C VA: 0x229C37C
	public void .ctor(Stream outStream) { }

	// RVA: 0x229C3F4 Offset: 0x229C3F4 VA: 0x229C3F4
	public void .ctor(Stream outStream, int tagNo, bool isExplicit) { }

	// RVA: 0x229C494 Offset: 0x229C494 VA: 0x229C494 Slot: 4
	public override void AddObject(Asn1Encodable obj) { }

	// RVA: 0x229C524 Offset: 0x229C524 VA: 0x229C524 Slot: 5
	public override Stream GetRawOutputStream() { }

	// RVA: 0x229C52C Offset: 0x229C52C VA: 0x229C52C Slot: 6
	public override void Close() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerSetParser : Asn1SetParser, IAsn1Convertible // TypeDefIndex: 4464
{
	// Fields
	private readonly Asn1StreamParser _parser; // 0x10

	// Methods

	// RVA: 0x229C578 Offset: 0x229C578 VA: 0x229C578
	internal void .ctor(Asn1StreamParser parser) { }

	// RVA: 0x229C5A4 Offset: 0x229C5A4 VA: 0x229C5A4 Slot: 4
	public IAsn1Convertible ReadObject() { }

	// RVA: 0x229C5D8 Offset: 0x229C5D8 VA: 0x229C5D8 Slot: 5
	public Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1
public abstract class DerStringBase : Asn1Object, IAsn1String // TypeDefIndex: 4465
{
	// Methods

	// RVA: 0x2297238 Offset: 0x2297238 VA: 0x2297238
	protected void .ctor() { }

	// RVA: -1 Offset: -1 Slot: 10
	public abstract string GetString();

	// RVA: 0x229C660 Offset: 0x229C660 VA: 0x229C660 Slot: 3
	public override string ToString() { }

	// RVA: 0x229C66C Offset: 0x229C66C VA: 0x229C66C Slot: 8
	protected override int Asn1GetHashCode() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerT61String : DerStringBase // TypeDefIndex: 4466
{
	// Fields
	private readonly string str; // 0x10

	// Methods

	// RVA: 0x229C6A8 Offset: 0x229C6A8 VA: 0x229C6A8
	public void .ctor(byte[] str) { }

	// RVA: 0x229C6D8 Offset: 0x229C6D8 VA: 0x229C6D8
	public void .ctor(string str) { }

	// RVA: 0x229C77C Offset: 0x229C77C VA: 0x229C77C
	public static DerT61String GetInstance(object obj) { }

	// RVA: 0x229C8A8 Offset: 0x229C8A8 VA: 0x229C8A8
	public static DerT61String GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x229C9AC Offset: 0x229C9AC VA: 0x229C9AC Slot: 10
	public override string GetString() { }

	// RVA: 0x229C9B4 Offset: 0x229C9B4 VA: 0x229C9B4 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x229C9F8 Offset: 0x229C9F8 VA: 0x229C9F8
	public byte[] GetOctets() { }

	// RVA: 0x229CA04 Offset: 0x229CA04 VA: 0x229CA04 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerTaggedObject : Asn1TaggedObject // TypeDefIndex: 4467
{
	// Methods

	// RVA: 0x229CACC Offset: 0x229CACC VA: 0x229CACC
	public void .ctor(int tagNo, Asn1Encodable obj) { }

	// RVA: 0x229CAD4 Offset: 0x229CAD4 VA: 0x229CAD4
	public void .ctor(bool explicitly, int tagNo, Asn1Encodable obj) { }

	// RVA: 0x229CAE0 Offset: 0x229CAE0 VA: 0x229CAE0
	public void .ctor(int tagNo) { }

	// RVA: 0x229CB68 Offset: 0x229CB68 VA: 0x229CB68 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerUniversalString : DerStringBase // TypeDefIndex: 4468
{
	// Fields
	private static readonly char[] table; // 0x0
	private readonly byte[] str; // 0x10

	// Methods

	// RVA: 0x229CCE8 Offset: 0x229CCE8 VA: 0x229CCE8
	public void .ctor(byte[] str) { }

	// RVA: 0x229CD8C Offset: 0x229CD8C VA: 0x229CD8C
	public static DerUniversalString GetInstance(object obj) { }

	// RVA: 0x229CEB8 Offset: 0x229CEB8 VA: 0x229CEB8
	public static DerUniversalString GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x229CFD8 Offset: 0x229CFD8 VA: 0x229CFD8 Slot: 10
	public override string GetString() { }

	// RVA: 0x229D1C4 Offset: 0x229D1C4 VA: 0x229D1C4
	public byte[] GetOctets() { }

	// RVA: 0x229D29C Offset: 0x229D29C VA: 0x229D29C Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x229D2D4 Offset: 0x229D2D4 VA: 0x229D2D4 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x229D38C Offset: 0x229D38C VA: 0x229D38C
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerUtcTime : Asn1Object // TypeDefIndex: 4469
{
	// Fields
	private readonly string time; // 0x10

	// Properties
	public string TimeString { get; }
	[ObsoleteAttribute] // RVA: 0xD4BA4C Offset: 0xD4BA4C VA: 0xD4BA4C
	public string AdjustedTime { get; }
	public string AdjustedTimeString { get; }

	// Methods

	// RVA: 0x229D408 Offset: 0x229D408 VA: 0x229D408
	public void .ctor(string time) { }

	// RVA: 0x229D60C Offset: 0x229D60C VA: 0x229D60C
	public void .ctor(DateTime time) { }

	// RVA: 0x229D6EC Offset: 0x229D6EC VA: 0x229D6EC
	internal void .ctor(byte[] bytes) { }

	// RVA: 0x229D724 Offset: 0x229D724 VA: 0x229D724
	public static DerUtcTime GetInstance(object obj) { }

	// RVA: 0x229D850 Offset: 0x229D850 VA: 0x229D850
	public static DerUtcTime GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x229D5B4 Offset: 0x229D5B4 VA: 0x229D5B4
	public DateTime ToDateTime() { }

	// RVA: 0x229E0F4 Offset: 0x229E0F4 VA: 0x229E0F4
	public DateTime ToAdjustedDateTime() { }

	// RVA: 0x229E028 Offset: 0x229E028 VA: 0x229E028
	private DateTime ParseDateString(string dateStr, string formatStr) { }

	// RVA: 0x229DA3C Offset: 0x229DA3C VA: 0x229DA3C
	public string get_TimeString() { }

	// RVA: 0x229E1FC Offset: 0x229E1FC VA: 0x229E1FC
	public string get_AdjustedTime() { }

	// RVA: 0x229E14C Offset: 0x229E14C VA: 0x229E14C
	public string get_AdjustedTimeString() { }

	// RVA: 0x229E200 Offset: 0x229E200 VA: 0x229E200
	private byte[] GetOctets() { }

	// RVA: 0x229E20C Offset: 0x229E20C VA: 0x229E20C Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x229E250 Offset: 0x229E250 VA: 0x229E250 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x229E318 Offset: 0x229E318 VA: 0x229E318 Slot: 8
	protected override int Asn1GetHashCode() { }

	// RVA: 0x229E34C Offset: 0x229E34C VA: 0x229E34C Slot: 3
	public override string ToString() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerUtf8String : DerStringBase // TypeDefIndex: 4470
{
	// Fields
	private readonly string str; // 0x10

	// Methods

	// RVA: 0x229E354 Offset: 0x229E354 VA: 0x229E354
	public void .ctor(byte[] str) { }

	// RVA: 0x229E414 Offset: 0x229E414 VA: 0x229E414
	public void .ctor(string str) { }

	// RVA: 0x229E4B8 Offset: 0x229E4B8 VA: 0x229E4B8
	public static DerUtf8String GetInstance(object obj) { }

	// RVA: 0x229E5E4 Offset: 0x229E5E4 VA: 0x229E5E4
	public static DerUtf8String GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x229E6D8 Offset: 0x229E6D8 VA: 0x229E6D8 Slot: 10
	public override string GetString() { }

	// RVA: 0x229E6E0 Offset: 0x229E6E0 VA: 0x229E6E0 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x229E7A8 Offset: 0x229E7A8 VA: 0x229E7A8 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerVideotexString : DerStringBase // TypeDefIndex: 4471
{
	// Fields
	private readonly byte[] mString; // 0x10

	// Methods

	// RVA: 0x229E85C Offset: 0x229E85C VA: 0x229E85C
	public void .ctor(byte[] encoding) { }

	// RVA: 0x229E894 Offset: 0x229E894 VA: 0x229E894
	public static DerVideotexString GetInstance(object obj) { }

	// RVA: 0x229EBA0 Offset: 0x229EBA0 VA: 0x229EBA0
	public static DerVideotexString GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x229ED8C Offset: 0x229ED8C VA: 0x229ED8C Slot: 10
	public override string GetString() { }

	// RVA: 0x229ED98 Offset: 0x229ED98 VA: 0x229ED98
	public byte[] GetOctets() { }

	// RVA: 0x229EDA4 Offset: 0x229EDA4 VA: 0x229EDA4 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x229EDDC Offset: 0x229EDDC VA: 0x229EDDC Slot: 8
	protected override int Asn1GetHashCode() { }

	// RVA: 0x229EDE8 Offset: 0x229EDE8 VA: 0x229EDE8 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }
}

// Namespace: Org.BouncyCastle.Asn1
public class DerVisibleString : DerStringBase // TypeDefIndex: 4472
{
	// Fields
	private readonly string str; // 0x10

	// Methods

	// RVA: 0x229EEA0 Offset: 0x229EEA0 VA: 0x229EEA0
	public void .ctor(byte[] str) { }

	// RVA: 0x229EED0 Offset: 0x229EED0 VA: 0x229EED0
	public void .ctor(string str) { }

	// RVA: 0x229EF74 Offset: 0x229EF74 VA: 0x229EF74
	public static DerVisibleString GetInstance(object obj) { }

	// RVA: 0x229F148 Offset: 0x229F148 VA: 0x229F148
	public static DerVisibleString GetInstance(Asn1TaggedObject obj, bool explicitly) { }

	// RVA: 0x229F178 Offset: 0x229F178 VA: 0x229F178 Slot: 10
	public override string GetString() { }

	// RVA: 0x229F180 Offset: 0x229F180 VA: 0x229F180
	public byte[] GetOctets() { }

	// RVA: 0x229F18C Offset: 0x229F18C VA: 0x229F18C Slot: 6
	internal override void Encode(DerOutputStream derOut) { }

	// RVA: 0x229F1D0 Offset: 0x229F1D0 VA: 0x229F1D0 Slot: 7
	protected override bool Asn1Equals(Asn1Object asn1Object) { }

	// RVA: 0x229F298 Offset: 0x229F298 VA: 0x229F298 Slot: 8
	protected override int Asn1GetHashCode() { }
}

// Namespace: Org.BouncyCastle.Asn1.Iana
public abstract class IanaObjectIdentifiers // TypeDefIndex: 4473
{
	// Fields
	public static readonly DerObjectIdentifier IsakmpOakley; // 0x0
	public static readonly DerObjectIdentifier HmacMD5; // 0x8
	public static readonly DerObjectIdentifier HmacSha1; // 0x10
	public static readonly DerObjectIdentifier HmacTiger; // 0x18
	public static readonly DerObjectIdentifier HmacRipeMD160; // 0x20

	// Methods

	// RVA: 0x229F2CC Offset: 0x229F2CC VA: 0x229F2CC
	protected void .ctor() { }

	// RVA: 0x229F2D4 Offset: 0x229F2D4 VA: 0x229F2D4
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1
public interface IAsn1ApplicationSpecificParser : IAsn1Convertible // TypeDefIndex: 4474
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract IAsn1Convertible ReadObject();
}

// Namespace: Org.BouncyCastle.Asn1
public interface IAsn1Choice // TypeDefIndex: 4475
{}

// Namespace: Org.BouncyCastle.Asn1
public interface IAsn1Convertible // TypeDefIndex: 4476
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract Asn1Object ToAsn1Object();
}

// Namespace: Org.BouncyCastle.Asn1
public interface IAsn1String // TypeDefIndex: 4477
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract string GetString();
}

// Namespace: Org.BouncyCastle.Asn1
internal class IndefiniteLengthInputStream : LimitedInputStream // TypeDefIndex: 4478
{
	// Fields
	private int _lookAhead; // 0x24
	private bool _eofOn00; // 0x28

	// Methods

	// RVA: 0x229F488 Offset: 0x229F488 VA: 0x229F488
	internal void .ctor(Stream inStream, int limit) { }

	// RVA: 0x229F680 Offset: 0x229F680 VA: 0x229F680
	internal void SetEofOn00(bool eofOn00) { }

	// RVA: 0x229F5B8 Offset: 0x229F5B8 VA: 0x229F5B8
	private bool CheckForEof() { }

	// RVA: 0x229F694 Offset: 0x229F694 VA: 0x229F694 Slot: 19
	public override int Read(byte[] buffer, int offset, int count) { }

	// RVA: 0x229F7F4 Offset: 0x229F7F4 VA: 0x229F7F4 Slot: 20
	public override int ReadByte() { }

	// RVA: 0x229F518 Offset: 0x229F518 VA: 0x229F518
	private int RequireByte() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class LazyAsn1InputStream : Asn1InputStream // TypeDefIndex: 4479
{
	// Methods

	// RVA: 0x229F840 Offset: 0x229F840 VA: 0x229F840
	public void .ctor(byte[] input) { }

	// RVA: 0x229F848 Offset: 0x229F848 VA: 0x229F848
	public void .ctor(Stream inputStream) { }

	// RVA: 0x229F850 Offset: 0x229F850 VA: 0x229F850 Slot: 30
	internal override DerSequence CreateDerSequence(DefiniteLengthInputStream dIn) { }

	// RVA: 0x229F950 Offset: 0x229F950 VA: 0x229F950 Slot: 31
	internal override DerSet CreateDerSet(DefiniteLengthInputStream dIn) { }
}

// Namespace: Org.BouncyCastle.Asn1
[DefaultMemberAttribute] // RVA: 0xC90E28 Offset: 0xC90E28 VA: 0xC90E28
internal class LazyDerSequence : DerSequence // TypeDefIndex: 4480
{
	// Fields
	private byte[] encoded; // 0x18

	// Properties
	public override Asn1Encodable Item { get; }
	public override int Count { get; }

	// Methods

	// RVA: 0x229F8D0 Offset: 0x229F8D0 VA: 0x229F8D0
	internal void .ctor(byte[] encoded) { }

	// RVA: 0x229FA50 Offset: 0x229FA50 VA: 0x229FA50
	private void Parse() { }

	// RVA: 0x229FB70 Offset: 0x229FB70 VA: 0x229FB70 Slot: 12
	public override Asn1Encodable get_Item(int index) { }

	// RVA: 0x229FBA0 Offset: 0x229FBA0 VA: 0x229FBA0 Slot: 10
	public override IEnumerator GetEnumerator() { }

	// RVA: 0x229FBC8 Offset: 0x229FBC8 VA: 0x229FBC8 Slot: 13
	public override int get_Count() { }

	// RVA: 0x229FBF0 Offset: 0x229FBF0 VA: 0x229FBF0 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }
}

// Namespace: Org.BouncyCastle.Asn1
[DefaultMemberAttribute] // RVA: 0xC90E60 Offset: 0xC90E60 VA: 0xC90E60
internal class LazyDerSet : DerSet // TypeDefIndex: 4481
{
	// Fields
	private byte[] encoded; // 0x18

	// Properties
	public override Asn1Encodable Item { get; }
	public override int Count { get; }

	// Methods

	// RVA: 0x229F9D0 Offset: 0x229F9D0 VA: 0x229F9D0
	internal void .ctor(byte[] encoded) { }

	// RVA: 0x229FCB4 Offset: 0x229FCB4 VA: 0x229FCB4
	private void Parse() { }

	// RVA: 0x229FDD4 Offset: 0x229FDD4 VA: 0x229FDD4 Slot: 11
	public override Asn1Encodable get_Item(int index) { }

	// RVA: 0x229FE04 Offset: 0x229FE04 VA: 0x229FE04 Slot: 10
	public override IEnumerator GetEnumerator() { }

	// RVA: 0x229FE2C Offset: 0x229FE2C VA: 0x229FE2C Slot: 12
	public override int get_Count() { }

	// RVA: 0x229FE54 Offset: 0x229FE54 VA: 0x229FE54 Slot: 6
	internal override void Encode(DerOutputStream derOut) { }
}

// Namespace: Org.BouncyCastle.Asn1
internal abstract class LimitedInputStream : BaseInputStream // TypeDefIndex: 4482
{
	// Fields
	protected readonly Stream _in; // 0x18
	private int _limit; // 0x20

	// Methods

	// RVA: 0x229F4DC Offset: 0x229F4DC VA: 0x229F4DC
	internal void .ctor(Stream inStream, int limit) { }

	// RVA: 0x229FF18 Offset: 0x229FF18 VA: 0x229FF18 Slot: 29
	internal virtual int GetRemaining() { }

	// RVA: 0x229FF20 Offset: 0x229FF20 VA: 0x229FF20 Slot: 30
	protected virtual void SetParentEofDetect(bool on) { }
}

// Namespace: Org.BouncyCastle.Asn1.Misc
public abstract class MiscObjectIdentifiers // TypeDefIndex: 4483
{
	// Fields
	public static readonly DerObjectIdentifier Netscape; // 0x0
	public static readonly DerObjectIdentifier NetscapeCertType; // 0x8
	public static readonly DerObjectIdentifier NetscapeBaseUrl; // 0x10
	public static readonly DerObjectIdentifier NetscapeRevocationUrl; // 0x18
	public static readonly DerObjectIdentifier NetscapeCARevocationUrl; // 0x20
	public static readonly DerObjectIdentifier NetscapeRenewalUrl; // 0x28
	public static readonly DerObjectIdentifier NetscapeCAPolicyUrl; // 0x30
	public static readonly DerObjectIdentifier NetscapeSslServerName; // 0x38
	public static readonly DerObjectIdentifier NetscapeCertComment; // 0x40
	public static readonly DerObjectIdentifier Verisign; // 0x48
	public static readonly DerObjectIdentifier VerisignCzagExtension; // 0x50
	public static readonly DerObjectIdentifier VerisignPrivate_6_9; // 0x58
	public static readonly DerObjectIdentifier VerisignOnSiteJurisdictionHash; // 0x60
	public static readonly DerObjectIdentifier VerisignBitString_6_13; // 0x68
	public static readonly DerObjectIdentifier VerisignDnbDunsNumber; // 0x70
	public static readonly DerObjectIdentifier VerisignIssStrongCrypto; // 0x78
	public static readonly string Novell; // 0x80
	public static readonly DerObjectIdentifier NovellSecurityAttribs; // 0x88
	public static readonly string Entrust; // 0x90
	public static readonly DerObjectIdentifier EntrustVersionExtension; // 0x98
	public static readonly DerObjectIdentifier as_sys_sec_alg_ideaCBC; // 0xA0
	public static readonly DerObjectIdentifier cryptlib; // 0xA8
	public static readonly DerObjectIdentifier cryptlib_algorithm; // 0xB0
	public static readonly DerObjectIdentifier cryptlib_algorithm_blowfish_ECB; // 0xB8
	public static readonly DerObjectIdentifier cryptlib_algorithm_blowfish_CBC; // 0xC0
	public static readonly DerObjectIdentifier cryptlib_algorithm_blowfish_CFB; // 0xC8
	public static readonly DerObjectIdentifier cryptlib_algorithm_blowfish_OFB; // 0xD0
	public static readonly DerObjectIdentifier blake2; // 0xD8
	public static readonly DerObjectIdentifier id_blake2b160; // 0xE0
	public static readonly DerObjectIdentifier id_blake2b256; // 0xE8
	public static readonly DerObjectIdentifier id_blake2b384; // 0xF0
	public static readonly DerObjectIdentifier id_blake2b512; // 0xF8

	// Methods

	// RVA: 0x229FFB8 Offset: 0x229FFB8 VA: 0x229FFB8
	protected void .ctor() { }

	// RVA: 0x229FFC0 Offset: 0x229FFC0 VA: 0x229FFC0
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1.Misc
public class NetscapeCertType : DerBitString // TypeDefIndex: 4484
{
	// Fields
	public const int SslClient = 128;
	public const int SslServer = 64;
	public const int Smime = 32;
	public const int ObjectSigning = 16;
	public const int Reserved = 8;
	public const int SslCA = 4;
	public const int SmimeCA = 2;
	public const int ObjectSigningCA = 1;

	// Methods

	// RVA: 0x22A0718 Offset: 0x22A0718 VA: 0x22A0718
	public void .ctor(int usage) { }

	// RVA: 0x22A0790 Offset: 0x22A0790 VA: 0x22A0790
	public void .ctor(DerBitString usage) { }

	// RVA: 0x22A0848 Offset: 0x22A0848 VA: 0x22A0848 Slot: 3
	public override string ToString() { }
}

// Namespace: Org.BouncyCastle.Asn1.Misc
public class NetscapeRevocationUrl : DerIA5String // TypeDefIndex: 4485
{
	// Methods

	// RVA: 0x22A0928 Offset: 0x22A0928 VA: 0x22A0928
	public void .ctor(DerIA5String str) { }

	// RVA: 0x22A0970 Offset: 0x22A0970 VA: 0x22A0970 Slot: 3
	public override string ToString() { }
}

// Namespace: Org.BouncyCastle.Asn1.Misc
public class VerisignCzagExtension : DerIA5String // TypeDefIndex: 4486
{
	// Methods

	// RVA: 0x22A09FC Offset: 0x22A09FC VA: 0x22A09FC
	public void .ctor(DerIA5String str) { }

	// RVA: 0x22A0A44 Offset: 0x22A0A44 VA: 0x22A0A44 Slot: 3
	public override string ToString() { }
}

// Namespace: Org.BouncyCastle.Asn1.Nist
public sealed class NistNamedCurves // TypeDefIndex: 4487
{
	// Fields
	private static readonly IDictionary objIds; // 0x0
	private static readonly IDictionary names; // 0x8

	// Properties
	public static IEnumerable Names { get; }

	// Methods

	// RVA: 0x22A0AD0 Offset: 0x22A0AD0 VA: 0x22A0AD0
	private void .ctor() { }

	// RVA: 0x22A0AD8 Offset: 0x22A0AD8 VA: 0x22A0AD8
	private static void .cctor() { }

	// RVA: 0x22A0D24 Offset: 0x22A0D24 VA: 0x22A0D24
	private static void DefineCurveAlias(string name, DerObjectIdentifier oid) { }

	// RVA: 0x22A0ED8 Offset: 0x22A0ED8 VA: 0x22A0ED8
	public static X9ECParameters GetByName(string name) { }

	// RVA: 0x22A1114 Offset: 0x22A1114 VA: 0x22A1114
	public static X9ECParameters GetByOid(DerObjectIdentifier oid) { }

	// RVA: 0x22A0F70 Offset: 0x22A0F70 VA: 0x22A0F70
	public static DerObjectIdentifier GetOid(string name) { }

	// RVA: 0x22A12FC Offset: 0x22A12FC VA: 0x22A12FC
	public static string GetName(DerObjectIdentifier oid) { }

	// RVA: 0x22A1450 Offset: 0x22A1450 VA: 0x22A1450
	public static IEnumerable get_Names() { }
}

// Namespace: Org.BouncyCastle.Asn1.Nist
public sealed class NistObjectIdentifiers // TypeDefIndex: 4488
{
	// Fields
	public static readonly DerObjectIdentifier NistAlgorithm; // 0x0
	public static readonly DerObjectIdentifier HashAlgs; // 0x8
	public static readonly DerObjectIdentifier IdSha256; // 0x10
	public static readonly DerObjectIdentifier IdSha384; // 0x18
	public static readonly DerObjectIdentifier IdSha512; // 0x20
	public static readonly DerObjectIdentifier IdSha224; // 0x28
	public static readonly DerObjectIdentifier IdSha512_224; // 0x30
	public static readonly DerObjectIdentifier IdSha512_256; // 0x38
	public static readonly DerObjectIdentifier IdSha3_224; // 0x40
	public static readonly DerObjectIdentifier IdSha3_256; // 0x48
	public static readonly DerObjectIdentifier IdSha3_384; // 0x50
	public static readonly DerObjectIdentifier IdSha3_512; // 0x58
	public static readonly DerObjectIdentifier IdShake128; // 0x60
	public static readonly DerObjectIdentifier IdShake256; // 0x68
	public static readonly DerObjectIdentifier Aes; // 0x70
	public static readonly DerObjectIdentifier IdAes128Ecb; // 0x78
	public static readonly DerObjectIdentifier IdAes128Cbc; // 0x80
	public static readonly DerObjectIdentifier IdAes128Ofb; // 0x88
	public static readonly DerObjectIdentifier IdAes128Cfb; // 0x90
	public static readonly DerObjectIdentifier IdAes128Wrap; // 0x98
	public static readonly DerObjectIdentifier IdAes128Gcm; // 0xA0
	public static readonly DerObjectIdentifier IdAes128Ccm; // 0xA8
	public static readonly DerObjectIdentifier IdAes192Ecb; // 0xB0
	public static readonly DerObjectIdentifier IdAes192Cbc; // 0xB8
	public static readonly DerObjectIdentifier IdAes192Ofb; // 0xC0
	public static readonly DerObjectIdentifier IdAes192Cfb; // 0xC8
	public static readonly DerObjectIdentifier IdAes192Wrap; // 0xD0
	public static readonly DerObjectIdentifier IdAes192Gcm; // 0xD8
	public static readonly DerObjectIdentifier IdAes192Ccm; // 0xE0
	public static readonly DerObjectIdentifier IdAes256Ecb; // 0xE8
	public static readonly DerObjectIdentifier IdAes256Cbc; // 0xF0
	public static readonly DerObjectIdentifier IdAes256Ofb; // 0xF8
	public static readonly DerObjectIdentifier IdAes256Cfb; // 0x100
	public static readonly DerObjectIdentifier IdAes256Wrap; // 0x108
	public static readonly DerObjectIdentifier IdAes256Gcm; // 0x110
	public static readonly DerObjectIdentifier IdAes256Ccm; // 0x118
	public static readonly DerObjectIdentifier IdDsaWithSha2; // 0x120
	public static readonly DerObjectIdentifier DsaWithSha224; // 0x128
	public static readonly DerObjectIdentifier DsaWithSha256; // 0x130
	public static readonly DerObjectIdentifier DsaWithSha384; // 0x138
	public static readonly DerObjectIdentifier DsaWithSha512; // 0x140

	// Methods

	// RVA: 0x22A155C Offset: 0x22A155C VA: 0x22A155C
	private void .ctor() { }

	// RVA: 0x22A1564 Offset: 0x22A1564 VA: 0x22A1564
	private static void .cctor() { }
}

// Namespace: Org.BouncyCastle.Asn1.Ocsp
public class OcspResponse : Asn1Encodable // TypeDefIndex: 4489
{
	// Fields
	private readonly OcspResponseStatus responseStatus; // 0x10
	private readonly ResponseBytes responseBytes; // 0x18

	// Properties
	public OcspResponseStatus ResponseStatus { get; }
	public ResponseBytes ResponseBytes { get; }

	// Methods

	// RVA: 0x22A2018 Offset: 0x22A2018 VA: 0x22A2018
	public void .ctor(OcspResponseStatus responseStatus, ResponseBytes responseBytes) { }

	// RVA: 0x22A20C0 Offset: 0x22A20C0 VA: 0x22A20C0
	private void .ctor(Asn1Sequence seq) { }

	// RVA: 0x22A2320 Offset: 0x22A2320 VA: 0x22A2320
	public static OcspResponse GetInstance(Asn1TaggedObject obj, bool explicitly) { }

	// RVA: 0x22A233C Offset: 0x22A233C VA: 0x22A233C
	public static OcspResponse GetInstance(object obj) { }

	// RVA: 0x22A2534 Offset: 0x22A2534 VA: 0x22A2534
	public OcspResponseStatus get_ResponseStatus() { }

	// RVA: 0x22A253C Offset: 0x22A253C VA: 0x22A253C
	public ResponseBytes get_ResponseBytes() { }

	// RVA: 0x22A2544 Offset: 0x22A2544 VA: 0x22A2544 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.Ocsp
public class OcspResponseStatus : DerEnumerated // TypeDefIndex: 4490
{
	// Fields
	public const int Successful = 0;
	public const int MalformedRequest = 1;
	public const int InternalError = 2;
	public const int TryLater = 3;
	public const int SignatureRequired = 5;
	public const int Unauthorized = 6;

	// Methods

	// RVA: 0x22A26E8 Offset: 0x22A26E8 VA: 0x22A26E8
	public void .ctor(int value) { }

	// RVA: 0x22A225C Offset: 0x22A225C VA: 0x22A225C
	public void .ctor(DerEnumerated value) { }
}

// Namespace: Org.BouncyCastle.Asn1.Ocsp
public class ResponderID : Asn1Encodable, IAsn1Choice // TypeDefIndex: 4491
{
	// Fields
	private readonly Asn1Encodable id; // 0x10

	// Properties
	public virtual X509Name Name { get; }

	// Methods

	// RVA: 0x22A2760 Offset: 0x22A2760 VA: 0x22A2760
	public void .ctor(Asn1OctetString id) { }

	// RVA: 0x22A2804 Offset: 0x22A2804 VA: 0x22A2804
	public void .ctor(X509Name id) { }

	// RVA: 0x22A28A8 Offset: 0x22A28A8 VA: 0x22A28A8
	public static ResponderID GetInstance(object obj) { }

	// RVA: 0x22A2AD4 Offset: 0x22A2AD4 VA: 0x22A2AD4
	public static ResponderID GetInstance(Asn1TaggedObject obj, bool isExplicit) { }

	// RVA: 0x22A2B04 Offset: 0x22A2B04 VA: 0x22A2B04 Slot: 6
	public virtual byte[] GetKeyHash() { }

	// RVA: 0x22A2B90 Offset: 0x22A2B90 VA: 0x22A2B90 Slot: 7
	public virtual X509Name get_Name() { }

	// RVA: 0x22A2C44 Offset: 0x22A2C44 VA: 0x22A2C44 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1.Ocsp
public class ResponseBytes : Asn1Encodable // TypeDefIndex: 4492
{
	// Fields
	private readonly DerObjectIdentifier responseType; // 0x10
	private readonly Asn1OctetString response; // 0x18

	// Properties
	public DerObjectIdentifier ResponseType { get; }
	public Asn1OctetString Response { get; }

	// Methods

	// RVA: 0x22A2D1C Offset: 0x22A2D1C VA: 0x22A2D1C
	public void .ctor(DerObjectIdentifier responseType, Asn1OctetString response) { }

	// RVA: 0x22A2DE4 Offset: 0x22A2DE4 VA: 0x22A2DE4
	private void .ctor(Asn1Sequence seq) { }

	// RVA: 0x22A2304 Offset: 0x22A2304 VA: 0x22A2304
	public static ResponseBytes GetInstance(Asn1TaggedObject obj, bool explicitly) { }

	// RVA: 0x22A2F18 Offset: 0x22A2F18 VA: 0x22A2F18
	public static ResponseBytes GetInstance(object obj) { }

	// RVA: 0x22A3110 Offset: 0x22A3110 VA: 0x22A3110
	public DerObjectIdentifier get_ResponseType() { }

	// RVA: 0x22A3118 Offset: 0x22A3118 VA: 0x22A3118
	public Asn1OctetString get_Response() { }

	// RVA: 0x22A3120 Offset: 0x22A3120 VA: 0x22A3120 Slot: 5
	public override Asn1Object ToAsn1Object() { }
}

// Namespace: Org.BouncyCastle.Asn1
public class OidTokenizer // TypeDefIndex: 4493
{
	// Fields
	private string oid; // 0x10
	private int index; // 0x18

	// Properties
	public bool HasMoreTokens { get; }

	// Methods

	// RVA: 0x2299EF0 Offset: 0x2299EF0 VA: 0x2299EF0
	public void .ctor(string oid) { }

	// RVA: 0x2299FD8 Offset: 0x2299FD8 VA: 0x2299FD8
	public bool get_HasMoreTokens() { }

	// RVA: 0x2299F1C Offset: 0x2299F1C VA: 0x2299F1C
	public string NextToken() { }
}

// Namespace: Org.BouncyCastle.Asn1.Oiw
public class ElGamalParameter : Asn1Encodable // TypeDefIndex: 4494
